class <Module>
{
}

class ExampleGUI : UnityEngine.MonoBehaviour
{
    /*0x18*/ int numberOfButtons;
    /*0x1c*/ bool isEnabled;
    /*0x1d*/ bool showPopUp;
    /*0x20*/ string txtSetEnabled;
    /*0x28*/ string txtManualLaunch;
    /*0x30*/ string txtSetOfflineMode;

    /*0x11d6184*/ ExampleGUI();
    /*0x11d52b0*/ void OnGUI();
    /*0x11d5f6c*/ void ShowGUI(int windowID);
    /*0x11d6118*/ void HandleGooglePlayId(string adId);
    /*0x11d611c*/ void AttributionChangedCallback(com.adjust.sdk.AdjustAttribution attributionData);
    /*0x11d6130*/ void EventSuccessCallback(com.adjust.sdk.AdjustEventSuccess eventSuccessData);
    /*0x11d6144*/ void EventFailureCallback(com.adjust.sdk.AdjustEventFailure eventFailureData);
    /*0x11d6158*/ void SessionSuccessCallback(com.adjust.sdk.AdjustSessionSuccess sessionSuccessData);
    /*0x11d616c*/ void SessionFailureCallback(com.adjust.sdk.AdjustSessionFailure sessionFailureData);
    /*0x11d6180*/ void DeferredDeeplinkCallback(string deeplinkURL);

    class <>c
    {
        static /*0x0*/ ExampleGUI.<> <>9;
        static /*0x8*/ System.Action<string> <>9__6_0;

        static /*0x10a00f0*/ <>c();
        /*0x10a0150*/ <>c();
        /*0x10a0158*/ void <OnGUI>b__6_0(string msg);
    }
}

class DPSTestSave : UnityEngine.ScriptableObject
{
    static string VERSION = "1.0";
    static string DPS_TEST_SAVE_DATA_NAME = "DPSTestSaveData";
    static /*0x0*/ DPSTestSave SaveData;
    /*0x18*/ DPSTest.UnitSetting[] UnitSettings;

    static /*0xf5bf5c*/ void LoadSaveData();
    /*0xf5c194*/ DPSTestSave();
}

class GPGSIds
{
    static string achievement_test = "CgkI5NTdgPUPEAIQAg";
}

class MapToolConstants
{
    static string PREFS_SAVE_NAME_MAPTOOL_TILE_FOLDER_PATH = "MapToolTileFolder";
    static string PREFS_SAVE_NAME_MAPTOOL_TILESET_FOLDER_PATH = "MapToolTileSetFolder";
    static string PREFS_SAVE_NAME_MAPTOOL_TILESET_PATH = "MapToolTileSet";
    static string MAP_TOOL_SCENE_PATH = "Assets/MapTool/Scene/MapToolScene.unity";
    static string MAP_TOOL_WINDOW_MENU_ITEM_PATH = "Tools/MapTool";
    static string TILE_SET_WINDOW_MENU_ITEM_PATH = "Assets/Create/MapTool/CreateTileSet";
    static string TILE_SET_RUN_WINDOW_MENU_ITEM_PATH = "Assets/Create/MapTool/CreateRunTileSet";
    static string MAP_TOOL_SETTINGS_LOAD_PATH = "Assets/MapTool/Settings/MapToolSettings.asset";
    static string NEW_TILE_SET_NAME = "NewTileSet.prefab";
    static string SELECT_TILE_PARENT_NAME = "SelectTileParent";
    static string SELECT_TILE_NAME = "CurrentSelectTile";
    static int TILE_POSITION_TRUNCATE_DIVIDE = 10000;
    static /*0x0*/ string CURRENT_VERSION_STRING;

    static /*0xde9a0c*/ MapToolConstants();
    /*0xde9a04*/ MapToolConstants();
}

class MapToolSelectionBase : UnityEngine.MonoBehaviour
{
    /*0xde9a70*/ MapToolSelectionBase();
}

class MapToolTileGroup
{
    /*0x10*/ System.Collections.Generic.List<UnityEngine.Vector2> TilePositionList;
    /*0x18*/ string GroupName;
    /*0x20*/ UnityEngine.Color GroupColor;
    /*0x30*/ int GroupID;

    /*0xde9a78*/ MapToolTileGroup();
    /*0xde9adc*/ MapToolTileGroup(MapToolTileGroup _origin);
}

class MapToolUtils
{
    static /*0xde9bac*/ float Truncate(float _float, int _belowMult);
    static /*0xde9c58*/ UnityEngine.Vector2 Truncate(UnityEngine.Vector2 _vector2, int _belowMult);
    static /*0xde9d38*/ UnityEngine.Vector3 Truncate(UnityEngine.Vector3 _vector3, int _belowMult);
    static /*0xde9e4c*/ UnityEngine.Vector3 ConvertMousePositionToTilePosition(UnityEngine.Vector3 _vector3);
    static /*0xde9ec4*/ UnityEngine.Vector3 ConvertTilePositionToMousePosition(UnityEngine.Vector3 _vector3);
}

class TileBase : MapToolSelectionBase
{
    /*0x18*/ UnityEngine.Vector2 m_vSavedMousePosition;
    /*0x20*/ UnityEngine.Vector2 m_vArrayPosition;
    /*0x28*/ int GroupID;
    /*0x2c*/ int TileID;
    /*0x30*/ string Params;
    /*0x38*/ string ParamsCustom;
    /*0x40*/ bool <Selected>k__BackingField;
    /*0x41*/ bool <IsPreviewTile>k__BackingField;
    /*0x44*/ float <CurrentAlpha>k__BackingField;
    /*0x48*/ bool InitializedForMaptool;
    /*0x50*/ UnityEngine.Transform m_Transform;
    /*0x58*/ UnityEngine.UI.Image m_Image;
    /*0x60*/ System.Collections.Generic.List<UnityEngine.UI.Image> m_lisImages;
    /*0x68*/ UnityEngine.Sprite m_Sprite;
    /*0x70*/ UnityEngine.Texture2D[] m_arrTextures;

    /*0x116c8fc*/ TileBase();
    /*0x116c2bc*/ bool get_Selected();
    /*0x116c2c4*/ void set_Selected(bool value);
    /*0x116c2d0*/ bool get_IsPreviewTile();
    /*0x116c2d8*/ void set_IsPreviewTile(bool value);
    /*0x116c2e4*/ float get_CurrentAlpha();
    /*0x116c2ec*/ void set_CurrentAlpha(float value);
    /*0x116c2f4*/ UnityEngine.Sprite get_GetSprite();
    /*0x116c2fc*/ UnityEngine.UI.Image get_GetImage();
    /*0x116c304*/ System.Collections.Generic.List<UnityEngine.UI.Image> get_GetImageList();
    /*0x116c30c*/ UnityEngine.Texture2D[] GetTextures();
    /*0x116c4cc*/ UnityEngine.Rect get_GetSpriteRect();
    /*0x116c500*/ UnityEngine.Transform get_GetTransform();
    /*0x116c508*/ UnityEngine.Vector2 get_SavedMousePosition();
    /*0x116c510*/ UnityEngine.Vector2 get_ArrayPosition();
    /*0x116c518*/ UnityEngine.Vector2 get_TransformPosition();
    /*0x116c534*/ UnityEngine.Vector2 get_TransformScale();
    /*0x116c550*/ void Initialize();
    /*0x116c4a8*/ void InitializeForMaptool();
    /*0x116c698*/ void InitializeForMaptool(TileBase _tileBase);
    /*0x116c7d0*/ void SetSavedPosition(UnityEngine.Vector2 _vMousePosition, UnityEngine.Vector2 _vArrayPosition);
    /*0x116c728*/ void SetNativeSize();
    /*0x116c7dc*/ void SetAlpha(float _alpha);
}

class TileSetBase : MapToolSelectionBase
{
    static /*0x0*/ int <GridCount>k__BackingField;
    static /*0x4*/ float <GridAngle>k__BackingField;
    static /*0x8*/ float <GridSize>k__BackingField;
    static /*0xc*/ float <GridIsometricMultY>k__BackingField;
    static /*0x10*/ UnityEngine.Vector2 <GridOffset>k__BackingField;
    /*0x18*/ System.Collections.Generic.List<MapToolTileGroup> m_lisSaveTileGroup;
    /*0x20*/ UnityEngine.Canvas m_Canvas;
    /*0x28*/ UnityEngine.CanvasRenderer m_CanvasRenderer;
    /*0x30*/ int DungeonID;
    /*0x34*/ int m_GridCount;
    /*0x38*/ UnityEngine.Vector2 m_GridOffset;
    /*0x40*/ float m_GridSize;
    /*0x44*/ float m_GridAngle;

    static /*0x116c974*/ int get_GridCount();
    static /*0x116c9c0*/ void set_GridCount(int value);
    static /*0x116ca10*/ float get_GridAngle();
    static /*0x116ca5c*/ void set_GridAngle(float value);
    static /*0x116cab4*/ float get_GridSize();
    static /*0x116cb00*/ void set_GridSize(float value);
    static /*0x116cb58*/ float get_GridIsometricMultY();
    static /*0x116cba4*/ void set_GridIsometricMultY(float value);
    static /*0x116cbfc*/ UnityEngine.Vector2 get_GridOffset();
    static /*0x116cc48*/ void set_GridOffset(UnityEngine.Vector2 value);
    /*0x116d160*/ TileSetBase();
    /*0x116cca4*/ void InitCanvas();
    /*0x116cda0*/ void UpdateGridOptions();
    /*0x116cf38*/ void SaveTileGroupList(System.Collections.Generic.List<MapToolTileGroup> _list);
    /*0x116d024*/ System.Collections.Generic.List<MapToolTileGroup> LoadTileGroupList();
}

class SampleSDK : UnityEngine.MonoBehaviour
{
    /*0x12a110c*/ SampleSDK();
    /*0x12a0048*/ void Start();
    /*0x12a0208*/ void LoginGuest();
    /*0x12a0410*/ void LoginGoogle();
    /*0x12a0618*/ void LoginFacebook();
    /*0x12a0820*/ void LogoutGuest();
    /*0x12a0958*/ void LogoutGoogle();
    /*0x12a0a90*/ void LogoutFacebook();
    /*0x12a0bc8*/ void Logout();
    /*0x12a0cfc*/ void LinkGoogle();
    /*0x12a0f04*/ void LinkFacebook();

    class <>c
    {
        static /*0x0*/ SampleSDK.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;
        static /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__0_1;
        static /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> <>9__1_0;
        static /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__1_1;
        static /*0x28*/ System.Action<Firebase.Auth.FirebaseUser> <>9__2_0;
        static /*0x30*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__2_1;
        static /*0x38*/ System.Action<Firebase.Auth.FirebaseUser> <>9__3_0;
        static /*0x40*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__3_1;
        static /*0x48*/ System.Action <>9__4_0;
        static /*0x50*/ System.Action <>9__5_0;
        static /*0x58*/ System.Action <>9__6_0;
        static /*0x60*/ System.Action <>9__7_0;
        static /*0x68*/ System.Action<Firebase.Auth.FirebaseUser> <>9__8_0;
        static /*0x70*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__8_1;
        static /*0x78*/ System.Action<Firebase.Auth.FirebaseUser> <>9__9_0;
        static /*0x80*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__9_1;

        static /*0xf9d72c*/ <>c();
        /*0xf9d78c*/ <>c();
        /*0xf9d794*/ void <Start>b__0_0();
        /*0xf9d798*/ void <Start>b__0_1(PUBSDK.DefinePubSDK.PubProcessError result);
        /*0xf9d79c*/ void <LoginGuest>b__1_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7a0*/ void <LoginGuest>b__1_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7a4*/ void <LoginGoogle>b__2_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7a8*/ void <LoginGoogle>b__2_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7ac*/ void <LoginFacebook>b__3_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7b0*/ void <LoginFacebook>b__3_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7b4*/ void <LogoutGuest>b__4_0();
        /*0xf9d7b8*/ void <LogoutGoogle>b__5_0();
        /*0xf9d7bc*/ void <LogoutFacebook>b__6_0();
        /*0xf9d7c0*/ void <Logout>b__7_0();
        /*0xf9d7c4*/ void <LinkGoogle>b__8_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7c8*/ void <LinkGoogle>b__8_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7cc*/ void <LinkFacebook>b__9_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7d0*/ void <LinkFacebook>b__9_1(PUBSDK.DefinePubSDK.PubProcessError error);
    }
}

class AndroidNative
{
    static /*0xedc594*/ void CallStatic(string methodName, object[] args);
    static /*0xedc8d4*/ void ShowMessage(string title, string message, string ok);
    /*0xedc9e8*/ AndroidNative();

    class <>c__DisplayClass0_0
    {
        /*0x10*/ string methodName;
        /*0x18*/ object[] args;
        /*0x20*/ UnityEngine.AndroidJavaObject bridge;

        /*0xd99d24*/ <>c__DisplayClass0_0();
        /*0xd99d2c*/ void <CallStatic>b__0();
    }
}

class GaaIapCallbackManager : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<bool> ServiceAvailableEvent;
    static /*0x8*/ System.Action<Gaa.IapResult> PurchaseClientStateEvent;
    static /*0x10*/ System.Action<Gaa.PurchaseData, string, int, int> PurchaseUpdatedSuccessEvent;
    static /*0x18*/ System.Action<Gaa.IapResult> PurchaseUpdatedErrorEvent;
    static /*0x20*/ System.Action<Gaa.PurchaseData, string, int, int> QueryPurchasesSuccessEvent;
    static /*0x28*/ System.Action<Gaa.IapResult> QueryPurchasesErrorEvent;
    static /*0x30*/ System.Action<Gaa.ProductDetail, int, int> ProductDetailsSuccessEvent;
    static /*0x38*/ System.Action<Gaa.IapResult> ProductDetailsErrorEvent;
    static /*0x40*/ System.Action<Gaa.PurchaseData> ConsumeSuccessEvent;
    static /*0x48*/ System.Action<Gaa.IapResult> ConsumeErrorEvent;
    static /*0x50*/ System.Action<Gaa.PurchaseData> AcknowledgeSuccessEvent;
    static /*0x58*/ System.Action<Gaa.IapResult> AcknowledgeErrorEvent;
    static /*0x60*/ System.Action<Gaa.PurchaseData, string> RecurringSuccessEvent;
    static /*0x68*/ System.Action<Gaa.IapResult> RecurringErrorEvent;
    static /*0x70*/ System.Action<string> StoreInfoEvent;
    static /*0x78*/ System.Action<Gaa.IapResult> LoginFlowEvent;
    static /*0x80*/ System.Action<Gaa.IapResult> UpdateOrInstallFlowEvent;

    static /*0x10b27f0*/ void add_ServiceAvailableEvent(System.Action<bool> value);
    static /*0x10b2984*/ void remove_ServiceAvailableEvent(System.Action<bool> value);
    static /*0x10b38a0*/ void add_PurchaseClientStateEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3960*/ void remove_PurchaseClientStateEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3a20*/ void add_PurchaseUpdatedSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3ae0*/ void remove_PurchaseUpdatedSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3ba0*/ void add_PurchaseUpdatedErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3c60*/ void remove_PurchaseUpdatedErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3d20*/ void add_QueryPurchasesSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3de0*/ void remove_QueryPurchasesSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3ea0*/ void add_QueryPurchasesErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3f60*/ void remove_QueryPurchasesErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4020*/ void add_ProductDetailsSuccessEvent(System.Action<Gaa.ProductDetail, int, int> value);
    static /*0x10b40e0*/ void remove_ProductDetailsSuccessEvent(System.Action<Gaa.ProductDetail, int, int> value);
    static /*0x10b41a0*/ void add_ProductDetailsErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4260*/ void remove_ProductDetailsErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4320*/ void add_ConsumeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b43e0*/ void remove_ConsumeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b44a0*/ void add_ConsumeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4560*/ void remove_ConsumeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4620*/ void add_AcknowledgeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b46e0*/ void remove_AcknowledgeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b47a0*/ void add_AcknowledgeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4860*/ void remove_AcknowledgeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4920*/ void add_RecurringSuccessEvent(System.Action<Gaa.PurchaseData, string> value);
    static /*0x10b49e0*/ void remove_RecurringSuccessEvent(System.Action<Gaa.PurchaseData, string> value);
    static /*0x10b4aa0*/ void add_RecurringErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4b60*/ void remove_RecurringErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4c20*/ void add_StoreInfoEvent(System.Action<string> value);
    static /*0x10b4ce0*/ void remove_StoreInfoEvent(System.Action<string> value);
    static /*0x10b4da0*/ void add_LoginFlowEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4e60*/ void remove_LoginFlowEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4f20*/ void add_UpdateOrInstallFlowEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4fe0*/ void remove_UpdateOrInstallFlowEvent(System.Action<Gaa.IapResult> value);
    /*0x10b6184*/ GaaIapCallbackManager();
    /*0x10b50a0*/ void PurchaseClientStateListener(string result);
    /*0x10b5188*/ void PurchaseUpdatedListener(string result);
    /*0x10b53c4*/ void QueryPurchaseListener(string result);
    /*0x10b5600*/ void ProductDetailsListener(string result);
    /*0x10b57f8*/ void ConsumeListener(string result);
    /*0x10b59ec*/ void AcknowledgeListener(string result);
    /*0x10b5be0*/ void RecurringProductListener(string result);
    /*0x10b5dd8*/ void StoreInfoListener(string result);
    /*0x10b5e4c*/ void LoginFlowListener(string result);
    /*0x10b5fe8*/ void UpdateOrInstallListener(string result);
}

class LoadingScript : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform image;
    /*0x20*/ float timeStep;
    /*0x24*/ float oneStepAngle;
    /*0x28*/ float startTime;

    /*0xfb219c*/ LoadingScript();
    /*0xfb2104*/ void Start();
    /*0xfb212c*/ void Update();
}

class LogScript : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject scrollLog;
    /*0x20*/ UnityEngine.GameObject logView;
    /*0x28*/ UnityEngine.UI.Text logText;
    /*0x30*/ bool isShowing;

    /*0xfbac48*/ LogScript();
    /*0xfba71c*/ void Start();
    /*0xfba794*/ void Log(string message);
    /*0xfba7a0*/ void Log(string tag, string message);
    /*0xfbaa5c*/ void ShowHideLog();
    /*0xfbaa90*/ void ClearLog();
    /*0xfbab40*/ void AddEnter();
}

class MainUIScript : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string TAG;
    static /*0x8*/ string inapp_p5000;
    static /*0x10*/ string inapp_p10000;
    static /*0x18*/ string inapp_p50000;
    static /*0x20*/ string auto_a100000;
    static /*0x28*/ string[] inapp_products;
    static /*0x30*/ string[] auto_products;
    static /*0x38*/ string[] all_products;
    /*0x18*/ string base64EncodedPublicKey;
    /*0x20*/ LogScript logger;
    /*0x28*/ UnityEngine.GameObject productDetailItem;
    /*0x30*/ UnityEngine.UI.ScrollRect productDetailListView;
    /*0x38*/ UnityEngine.RectTransform detailContent;
    /*0x40*/ UnityEngine.GameObject purchaseItem;
    /*0x48*/ UnityEngine.UI.ScrollRect purchaseListView;
    /*0x50*/ UnityEngine.RectTransform purchaseContent;
    /*0x58*/ UnityEngine.GameObject scrollLog;
    /*0x60*/ UnityEngine.GameObject loading;
    /*0x68*/ System.Collections.Generic.List<Gaa.ProductDetail> productDetails;
    /*0x70*/ System.Collections.Generic.Dictionary<string, Gaa.PurchaseData> purchaseMap;
    /*0x78*/ System.Collections.Generic.Dictionary<string, string> signatureMap;
    /*0x80*/ UnityEngine.UI.Text pointView;
    /*0x88*/ UnityEngine.UI.Button connection;

    static /*0xde8ea8*/ MainUIScript();
    /*0xde8dd4*/ MainUIScript();
    /*0xde5f44*/ void Awake();
    /*0xde62d8*/ void OnDestroy();
    /*0xde66a0*/ void Start();
    /*0xde68e4*/ void Update();
    /*0xde6910*/ Gaa.PurchaseData GetPurchaseData(string productId);
    /*0xde6a6c*/ void SendLog(string tag, string message);
    /*0xde6b18*/ void UsePoint(int used);
    /*0xde6bf8*/ void AddPoint(int point);
    /*0xde67cc*/ void UpdatePoint(int point);
    /*0xde6878*/ System.Collections.IEnumerator StartConnectService();
    /*0xde6d10*/ void StartConnection();
    /*0xde6ed8*/ void BuyProduct(string productId, string type);
    /*0xde7008*/ void QueryPurchases();
    /*0xde739c*/ void ConsumePurchase(string productId);
    /*0xde74f8*/ void AcknowledgePurchase(string productId);
    /*0xde7654*/ void ManageRecurringProduct(string productId);
    /*0xde6eb8*/ void OnLoadingVisibility(bool visibility);
    /*0xde77e8*/ void PurchaseClientStateResponse(Gaa.IapResult iapResult);
    /*0xde7a48*/ void OnPurchaseUpdatedResponse(System.Collections.Generic.List<Gaa.PurchaseData> purchases, System.Collections.Generic.List<string> signatures);
    /*0xde8140*/ void OnQueryPurchasesResponse(System.Collections.Generic.List<Gaa.PurchaseData> purchases, System.Collections.Generic.List<string> signatures);
    /*0xde7aac*/ void ParsePurchaseData(string func, System.Collections.Generic.List<Gaa.PurchaseData> purchases, System.Collections.Generic.List<string> signatures);
    /*0xde81a4*/ void OnPurchaseItemClick(string productId, MainUIScript.PurchaseButtonState state);
    /*0xde830c*/ void OnProductDetailsResponse(System.Collections.Generic.List<Gaa.ProductDetail> products);
    /*0xde8760*/ void OnDetailItemClick(string productId, string productType);
    /*0xde8764*/ void OnConsumeSuccessResponse(Gaa.PurchaseData purchaseData);
    /*0xde8c4c*/ void OnAcknowledgeSuccessResponse(Gaa.PurchaseData purchaseData);
    /*0xde8d00*/ void OnManageRecurringResponse(Gaa.PurchaseData purchaseData, string action);

    enum PurchaseButtonState
    {
        NONE = 0,
        ACKNOWLEDGE = 1,
        CONSUME = 2,
        REACTIVE = 3,
        CANCEL = 4,
    }

    class <StartConnectService>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MainUIScript <>4__this;

        /*0xe5de14*/ <StartConnectService>d__33(int <>1__state);
        /*0xe5de40*/ void System.IDisposable.Dispose();
        /*0xe5de44*/ bool MoveNext();
        /*0xe5dee8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5def0*/ void System.Collections.IEnumerator.Reset();
        /*0xe5df30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ string id;
        /*0x18*/ MainUIScript.PurchaseButtonState state;
        /*0x20*/ MainUIScript <>4__this;

        /*0xe5ddb8*/ <>c__DisplayClass44_0();
        /*0xe5ddc0*/ void <ParsePurchaseData>b__0();
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ string id;
        /*0x18*/ string type;
        /*0x20*/ MainUIScript <>4__this;

        /*0xe5dde8*/ <>c__DisplayClass46_0();
        /*0xe5ddf0*/ void <OnProductDetailsResponse>b__0();
    }
}

class NetworkManager : Singleton.Component.SingletonComponent<NetworkManager>
{
    static int timeoutInterval = 30;
    static int retryMaxCount = 2;
    /*0x28*/ Newtonsoft.Json.JsonSerializerSettings _jsonConvertSettings;

    static /*0x2b4fcd8*/ void CheckBalanceUpdated(ServerProtocol.IResponseCommon res);
    /*0x2b51714*/ NetworkManager();
    /*0x2b4415c*/ void AwakeInstance();
    /*0x2b44160*/ bool InitInstance();
    /*0x2b44168*/ void ReleaseInstance();
    /*0x2b4416c*/ void Send_GateZone(System.Action callback);
    /*0x2b44764*/ void Send_GateInit(bool _loading, System.Action<bool, PTShare.Define.ErrorCode> _response);
    /*0x2b448f4*/ void Send_BalanceData(bool _loading, ServerProtocol.ReqBalanceData _request, System.Action<System.Byte[]> _respone);
    /*0x2b449e4*/ void Send_Language(bool _loading, ServerProtocol.ReqBalanceLocalize _request, System.Action<System.Byte[]> _respone);
    /*0x2b44a40*/ void Send_AccountLogin(bool _loading, ServerProtocol.ReqAccountLogin _request, System.Action<ServerProtocol.ResAccountLogin> _response, System.Action<int> _fail);
    /*0x2b44ae0*/ void Send_AccountLogout(bool _loading, ServerProtocol.ReqAccountLogout _request, System.Action<ServerProtocol.ResAccountLogout> _response);
    /*0x2b44b7c*/ void Send_AccountAttach(bool _loading, ServerProtocol.ReqAccountAttach _request, System.Action<ServerProtocol.ResAccountAttach> _response, System.Action<int, string> _fail);
    /*0x2b44c1c*/ void Send_AccountDetach(bool _loading, ServerProtocol.ReqAccountDetach _request, System.Action<ServerProtocol.ResAccountDetach> _response);
    /*0x2b44cb8*/ void Send_AccountNew(bool _loading, ServerProtocol.ReqAccountNew _request, System.Action<ServerProtocol.ResAccountNew> _response);
    /*0x2b44d54*/ void Send_AccountFirst(bool _loading, ServerProtocol.ReqAccountFirst _request, System.Action<ServerProtocol.ResAccountFirst> _response);
    /*0x2b44df0*/ void Send_UpdateProfile(bool _loading, ServerProtocol.ReqUpdateProfile _request, System.Action<ServerProtocol.ResUpdateProfile> _response);
    /*0x2b44e8c*/ void Send_UpdateNickName(bool _loading, ServerProtocol.ReqUpdateNickname _request, System.Action<ServerProtocol.ResUpdateNickname> _response);
    /*0x2b44f28*/ void Send_UpdateMoveArea(bool _loading, ServerProtocol.ReqAccountMoveArea _request, System.Action<ServerProtocol.ResAccountMoveArea> _response);
    /*0x2b44fc4*/ void Send_AccountPlayersArea(bool _loading, ServerProtocol.ReqAccountPlayers _request, System.Action<ServerProtocol.ResAccountPlayers> _response);
    /*0x2b45060*/ void Send_AccountIdle(bool _loading, ServerProtocol.ReqAccountIdle _request, System.Action<ServerProtocol.ResAccountIdle> _response);
    /*0x2b450fc*/ void Send_AccountTutorial(bool _loading, ServerProtocol.ReqAccountTutorial _request, System.Action<ServerProtocol.ResAccountTutorial> _response);
    /*0x2b45198*/ void Send_AccountDetail(bool _loading, ServerProtocol.ReqAccountDetail _request, System.Action<ServerProtocol.ResAccountDetail> _response);
    /*0x2b45234*/ void Send_AccountQuit(bool _loading, ServerProtocol.ReqAccountQuit _request, System.Action<ServerProtocol.ResAccountQuit> _response);
    /*0x2b452d0*/ void Send_AccountCancelQuit(bool _loading, ServerProtocol.ReqAccountCancelQuit _request, System.Action<ServerProtocol.ResAccountCancelQuit> _response);
    /*0x2b4536c*/ void Send_AccountNotice(bool _loading, ServerProtocol.ReqAccountNotice _request, System.Action<ServerProtocol.ResAccountNotice> _response);
    /*0x2b45408*/ void Send_AccountLanguage(bool _loading, ServerProtocol.ReqAccountLanguage _request, System.Action<ServerProtocol.ResAccountLanguage> _response);
    /*0x2b454a4*/ void Send_AccountPreviewIdle(bool _loading, ServerProtocol.ReqAccountPreviewIdle _request, System.Action<ServerProtocol.ResAccountPreviewIdle> _response);
    /*0x2b45540*/ void Send_AccountUpdateAttend(bool _loading, ServerProtocol.ReqAccountUpdateAttend _request, System.Action<ServerProtocol.ResAccountUpdateAttend> _response);
    /*0x2b455dc*/ void Send_AdminConsole(bool _loading, ServerProtocol.ReqAdminConsole _request, System.Action<ServerProtocol.ResAdminConsole> _response);
    /*0x2b456b8*/ void Send_AdminExport(bool _loading, ServerProtocol.ReqAdminExport _request, System.Action<System.Byte[]> _respone);
    /*0x2b45714*/ void Send_AdminImport(bool _loading, ServerProtocol.ReqAdminImport _request, System.Action<ServerProtocol.ResAdminImport> _response);
    /*0x2b4589c*/ void Send_VerifyBegin(bool _loading, ServerProtocol.ReqAdminVerifyBegin _request, System.Action<ServerProtocol.ResAdminVerifyBegin> _response, System.Action<int, string> _responseFail);
    /*0x2b4593c*/ void Send_VerifyFinish(bool _loading, ServerProtocol.ReqAdminVerifyFinish _request, System.Action<ServerProtocol.ResAdminVerifyFinish> _response);
    /*0x2b459d8*/ void Send_EnterBoard(bool _loading, ServerProtocol.ReqBoardEnter _request, System.Action<ServerProtocol.ResBoardEnter> _response);
    /*0x2b45a74*/ void Send_CampaignBoard(bool _loading, ServerProtocol.ReqBoardCampaign _request, System.Action<ServerProtocol.ResBoardCampaign> _response);
    /*0x2b45b10*/ void Send_HardCampaignBoard(bool _loading, ServerProtocol.ReqBoardHardCampaign _request, System.Action<ServerProtocol.ResBoardHardCampaign> _response);
    /*0x2b45bac*/ void Send_TowerBoard(bool _loading, ServerProtocol.ReqBoardTower _request, System.Action<ServerProtocol.ResBoardTower> _response);
    /*0x2b45c48*/ void Send_FactionBoard(bool _loading, ServerProtocol.ReqBoardHeroPoint _request, System.Action<ServerProtocol.ResBoardHeroPoint> _response);
    /*0x2b45ce4*/ void Send_BoardRewardList(bool _loading, ServerProtocol.ReqBoardRewardList _request, System.Action<ServerProtocol.ResBoardRewardList> _response);
    /*0x2b45d80*/ void Send_BoardTakeReward(bool _loading, ServerProtocol.ReqBoardTakeReward _request, System.Action<ServerProtocol.ResBoardTakeReward> _response);
    /*0x2b45e1c*/ void Send_BeginCampaign(bool _loading, ServerProtocol.ReqCampaignBegin _request, System.Action<ServerProtocol.ResCampaignBegin> _response);
    /*0x2b45eb8*/ void Send_FinishCampaign(bool _loading, ServerProtocol.ReqCampaignFinish _request, System.Action<ServerProtocol.ResCampaignFinish> _response);
    /*0x2b45f54*/ void Send_NextChapter(bool _loading, ServerProtocol.ReqCampaignNextChapter _request, System.Action<ServerProtocol.ResCampaignNextChapter> _response);
    /*0x2b45ff0*/ void Send_ChapterInfo(bool _loading, ServerProtocol.ReqCampaignInfo _request, System.Action<ServerProtocol.ResCampaignInfo> _response);
    /*0x2b4608c*/ void Send_CamapignReplay(bool _loading, ServerProtocol.ReqCampaignReplay _request, System.Action<ServerProtocol.ResCampaignReplay> _response);
    /*0x2b46128*/ void Send_CamapignBuddy(bool _loading, ServerProtocol.ReqCampaignBuddy _request, System.Action<ServerProtocol.ResCampaignBuddy> _response);
    /*0x2b461c4*/ void Send_GetFriends(bool _loading, ServerProtocol.ReqFriendFriends _request, System.Action<ServerProtocol.ResFriendFriends> _response);
    /*0x2b46260*/ void Send_GetFriendRequestors(bool _loading, ServerProtocol.ReqFriendRequestors _request, System.Action<ServerProtocol.ResFriendRequestors> _response);
    /*0x2b462fc*/ void Send_GetFriendBlacks(bool _loading, ServerProtocol.ReqFriendBlacks _request, System.Action<ServerProtocol.ResFriendBlacks> _response);
    /*0x2b46398*/ void Send_SearchFriend(bool _loading, ServerProtocol.ReqFriendSearch _request, System.Action<ServerProtocol.ResFriendSearch> _response);
    /*0x2b46434*/ void Send_InviteFriend(bool _loading, ServerProtocol.ReqFriendSend _request, System.Action<ServerProtocol.ResFriendSend> _response);
    /*0x2b464d0*/ void Send_AcceptFriend(bool _loading, ServerProtocol.ReqFriendAccept _request, System.Action<ServerProtocol.ResFriendAccept> _response);
    /*0x2b4656c*/ void Send_DenyFriend(bool _loading, ServerProtocol.ReqFriendDeny _request, System.Action<ServerProtocol.ResFriendDeny> _response);
    /*0x2b46608*/ void Send_DeleteFriend(bool _loading, ServerProtocol.ReqFriendDelete _request, System.Action<ServerProtocol.ResFriendDelete> _response);
    /*0x2b466a4*/ void Send_SendPointFriend(bool _loading, ServerProtocol.ReqFriendSendPoint _request, System.Action<ServerProtocol.ResFriendSendPoint> _response);
    /*0x2b46740*/ void Send_TakePointFriend(bool _loading, ServerProtocol.ReqFriendTakePoint _request, System.Action<ServerProtocol.ResFriendTakePoint> _response);
    /*0x2b467dc*/ void Send_AllAtOncePointFriend(bool _loading, ServerProtocol.ReqFriendAllPoint _request, System.Action<ServerProtocol.ResFriendAllPoint> _response);
    /*0x2b46878*/ void Send_AddBlacklist(bool _loading, ServerProtocol.ReqFriendBlacklist _request, System.Action<ServerProtocol.ResFriendBlacklist> _response);
    /*0x2b46914*/ void Send_RemoveBlacklist(bool _loading, ServerProtocol.ReqFriendBlacklistRemove _request, System.Action<ServerProtocol.ResFriendBlacklistRemove> _response);
    /*0x2b469b0*/ void Send_Sparring(bool _loading, ServerProtocol.ReqFriendSparring _request, System.Action<ServerProtocol.ResFriendSparring> _response);
    /*0x2b3d778*/ void Send_MercenaryRentList(bool _loading, ServerProtocol.ReqMercenaryRentList _request, System.Action<ServerProtocol.ResMercenaryRentList> _response);
    /*0x2b3d960*/ void Send_MercenaryRent(bool _loading, ServerProtocol.ReqMercenaryRent _request, System.Action<ServerProtocol.ResMercenaryRent> _response);
    /*0x2b3db48*/ void Send_MercenaryRentCancel(bool _loading, ServerProtocol.ReqMercenaryRentCancel _request, System.Action<ServerProtocol.ResMercenaryRentCancel> _response);
    /*0x2b3dd30*/ void Send_MercenaryRentReturn(bool _loading, ServerProtocol.ReqMercenaryRentReturn _request, System.Action<ServerProtocol.ResMercenaryRentReturn> _response);
    /*0x2b3ddcc*/ void Send_MercenaryLendList(bool _loading, ServerProtocol.ReqMercenaryLendList _request, System.Action<ServerProtocol.ResMercenaryLendList> _response);
    /*0x2b3de68*/ void Send_MercenaryLend(bool _loading, ServerProtocol.ReqMercenaryLend _request, System.Action<ServerProtocol.ResMercenaryLend> _response);
    /*0x2b3e038*/ void Send_MercenaryLendFast(bool _loading, ServerProtocol.ReqMercenaryLendFast _request, System.Action<ServerProtocol.ResMercenaryLendFast> _response);
    /*0x2b3e0d4*/ void Send_MercenaryLendDeny(bool _loading, ServerProtocol.ReqMercenaryLendDeny _request, System.Action<ServerProtocol.ResMercenaryLendDeny> _response);
    /*0x2b3e2a4*/ void Send_MercenaryLendDenyAll(bool _loading, ServerProtocol.ReqMercenaryLendDenyAll _request, System.Action<ServerProtocol.ResMercenaryLendDenyAll> _response);
    /*0x2b46a4c*/ void Send_EnterGuild(bool _loading, ServerProtocol.ReqGuildEnter _request, System.Action<ServerProtocol.ResGuildEnter> _response, System.Action<int, string> _failed);
    /*0x2b46aec*/ void Send_SearchGuild(bool _loading, ServerProtocol.ReqGuildSearch _request, System.Action<ServerProtocol.ResGuildSearch> _response);
    /*0x2b46b88*/ void Send_CreateGuild(bool _loading, ServerProtocol.ReqGuildCreate _request, System.Action<ServerProtocol.ResGuildCreate> _response);
    /*0x2b46c24*/ void Send_AcceptGuild(bool _loading, ServerProtocol.ReqGuildAcceptReq _request, System.Action<ServerProtocol.ResGuildAcceptReq> _response);
    /*0x2b46cc0*/ void Send_AcceptReqAllGuild(bool _loading, ServerProtocol.ReqGuildAcceptReqAll _request, System.Action<ServerProtocol.ResGuildAcceptReqAll> _response);
    /*0x2b46d5c*/ void Send_DenyGuild(bool _loading, ServerProtocol.ReqGuildDenyReq _request, System.Action<ServerProtocol.ResGuildDenyReq> _response);
    /*0x2b46df8*/ void Send_DenyReqAllGuild(bool _loading, ServerProtocol.ReqGuildDenyReqAll _request, System.Action<ServerProtocol.ResGuildDenyReqAll> _response);
    /*0x2b46e94*/ void Send_DetailGuild(bool _loading, ServerProtocol.ReqGuildDetail _request, System.Action<ServerProtocol.ResGuildDetail> _response);
    /*0x2b46f30*/ void Send_GuildRecommend(bool _loading, ServerProtocol.ReqGuildRecommend _request, System.Action<ServerProtocol.ResGuildRecommend> _response);
    /*0x2b46fcc*/ void Send_SendReqGuild(bool _loading, ServerProtocol.ReqGuildSendReq _request, System.Action<ServerProtocol.ResGuildSendReq> _response, System.Action<int, string> _fail);
    /*0x2b4706c*/ void Send_RequestorsGuild(bool _loading, ServerProtocol.ReqGuildRequestors _request, System.Action<ServerProtocol.ResGuildRequestors> _response);
    /*0x2b47108*/ void Send_UpdateNameGuild(bool _loading, ServerProtocol.ReqUpdateName _request, System.Action<ServerProtocol.ResUpdateName> _response);
    /*0x2b471a4*/ void Send_KickGuild(bool _loading, ServerProtocol.ReqGuildKick _request, System.Action<ServerProtocol.ResGuildKick> _response);
    /*0x2b47240*/ void Send_LeaveGuild(bool _loading, ServerProtocol.ReqGuildLeave _request, System.Action<ServerProtocol.ResGuildLeave> _response);
    /*0x2b472dc*/ void Send_DevolveGuild(bool _loading, ServerProtocol.ReqGuildDevolve _request, System.Action<ServerProtocol.ResGuildDevolve> _response);
    /*0x2b47378*/ void Send_SetPositionGuild(bool _loading, ServerProtocol.ReqGuildSetPosition _request, System.Action<ServerProtocol.ResGuildSetPosition> _response);
    /*0x2b47414*/ void Send_SetAuthGuild(bool _loading, ServerProtocol.ReqGuildSetAuth _request, System.Action<ServerProtocol.ResGuildSetPosition> _response, System.Action<int, string> _fail);
    /*0x2b474b4*/ void Send_UpdateInfoGuild(bool _loading, ServerProtocol.ReqGuildUpdateInfo _request, System.Action<ServerProtocol.ResGuildUpdateInfo> _response);
    /*0x2b47550*/ void Send_SetCampGuild(bool _loading, ServerProtocol.ReqGuildSetCamp _request, System.Action<ServerProtocol.ResGuildSetCamp> _response);
    /*0x2b475ec*/ void Send_CleanGuild(bool _loading, ServerProtocol.ReqGuildClean _request, System.Action<ServerProtocol.ResGuildClean> _response);
    /*0x2b47688*/ void Send_OfficeGuild(bool _loading, ServerProtocol.ReqGuildOffice _request, System.Action<ServerProtocol.ResGuildOffice> _response);
    /*0x2b47724*/ void Send_BossOpenGuild(bool _loading, ServerProtocol.ReqGuildBossOpen _request, System.Action<ServerProtocol.ResGuildBossOpen> _response);
    /*0x2b477c0*/ void Send_BeginGuild(bool _loading, ServerProtocol.ReqGuildBegin _request, System.Action<ServerProtocol.ResGuildBegin> _response);
    /*0x2b4785c*/ void Send_FinishGuild(bool _loading, ServerProtocol.ReqGuildFinish _request, System.Action<ServerProtocol.ResGuildFinish> _response);
    /*0x2b478f8*/ void Send_MopUpGuild(bool _loading, ServerProtocol.ReqGuildMopUp _request, System.Action<ServerProtocol.ResGuildMopUp> _response);
    /*0x2b47994*/ void Send_BossHistory(bool _loading, ServerProtocol.ReqGuildBossHistory _request, System.Action<ServerProtocol.ResGuildBossHistory> _response);
    /*0x2b47a30*/ void Send_BossReplayGuild(bool _loading, ServerProtocol.ReqGuildReplay _request, System.Action<ServerProtocol.ResGuildReplay> _response);
    /*0x2b47acc*/ void Send_BossRanking(bool _loading, ServerProtocol.ReqGuildRanking _request, System.Action<ServerProtocol.ResGuildRanking> _response);
    /*0x2b47b68*/ void Send_BossGuildRanking(bool _loading, ServerProtocol.ReqGuildGuildRanking _request, System.Action<ServerProtocol.ResGuildGuildRanking> _response);
    /*0x2b47c04*/ void Send_GuildWarEnter(bool _loading, ServerProtocol.ReqGuildWarEnter _request, System.Action<ServerProtocol.ResGuildWarEnter> _response);
    /*0x2b47ca0*/ void Send_GuildWarSearch(bool _loading, ServerProtocol.ReqGuildWarSearch _request, System.Action<ServerProtocol.ResGuildWarSearch> _response, System.Action<int, string> error);
    /*0x2b47d40*/ void Send_GuildWarChoice(bool _loading, ServerProtocol.ReqGuildWarChoice _request, System.Action<ServerProtocol.ResGuildWarChoice> _response);
    /*0x2b47ddc*/ void Send_GuildWarFinish(bool _loading, ServerProtocol.ReqGuildWarFinish _request, System.Action<ServerProtocol.ResGuildWarFinish> _response);
    /*0x2b47e78*/ void Send_GuildWarHistory(bool _loading, ServerProtocol.ReqGuildWarHistory _request, System.Action<ServerProtocol.ResGuildWarHistory> _response);
    /*0x2b47f14*/ void Send_GuildWarReplay(bool _loading, ServerProtocol.ReqGuildWarReplay _request, System.Action<ServerProtocol.ResGuildWarReplay> _response);
    /*0x2b47fb0*/ void Send_GuildWarSetCaptain(bool _loading, ServerProtocol.ReqGuildWarSetCaptain _request, System.Action<ServerProtocol.ResGuildWarSetCaptain> _response);
    /*0x2b4804c*/ void Send_GuildWarBuyTactic(bool _loading, ServerProtocol.ReqGuildWarBuyTactic _request, System.Action<ServerProtocol.ResGuildWarBuyTactic> _response);
    /*0x2b480e8*/ void Send_GuildWarDeck(bool _loading, ServerProtocol.ReqGuildWarDeck _request, System.Action<ServerProtocol.ResGuildWarDeck> _response);
    /*0x2b48184*/ void Send_GuildWarTicket(bool _loading, ServerProtocol.ReqGuildWarTicket _request, System.Action<ServerProtocol.ResGuildWarTicket> _response);
    /*0x2b48220*/ void Send_GuildWarForm(bool _loading, ServerProtocol.ReqGuildWarForm _request, System.Action<ServerProtocol.ResGuildWarForm> _response);
    /*0x2b482bc*/ void Send_GuildWarFormDetail(bool _loading, ServerProtocol.ReqGuildWarFormDetail _request, System.Action<ServerProtocol.ResGuildWarFormDetail> _response);
    /*0x2b48358*/ void Send_GuildWarSetForm(bool _loading, ServerProtocol.ReqGuildWarSetForm _request, System.Action<ServerProtocol.ResGuildWarSetForm> _response, System.Action<int, string> _fail);
    /*0x2b483f8*/ void Send_GuildWarUnsetForm(bool _loading, ServerProtocol.ReqGuildWarUnsetForm _request, System.Action<ServerProtocol.ResGuildWarUnsetForm> _response, System.Action<int, string> _fail);
    /*0x2b48498*/ void Send_GuildWarUpdateDeck(bool _loading, ServerProtocol.ReqGuildWarUpdateDeck _request, System.Action<ServerProtocol.ResGuildWarUpdateDeck> _response);
    /*0x2b48534*/ void Send_GuildWarMyFormHero(bool _loading, ServerProtocol.ReqGuildWarMyFormHero _request, System.Action<ServerProtocol.ResGuildWarMyFormHero> _response);
    /*0x2b485d0*/ void Send_GuildWarMember(bool _loading, ServerProtocol.ReqGuildWarMember _request, System.Action<ServerProtocol.ResGuildWarMember> _response);
    /*0x2b4866c*/ void Send_GuildWarContribution(bool _loading, ServerProtocol.ReqGuildWarContribution _request, System.Action<ServerProtocol.ResGuildWarContribution> _response);
    /*0x2b48708*/ void Send_HousingEnter(bool _loading, ServerProtocol.ReqHousingEnter _request, System.Action<ServerProtocol.ResHousingEnter> _response);
    /*0x2b487a4*/ void Send_HousingOpenStart(bool _loading, ServerProtocol.ReqHousingOpenStart _request, System.Action<ServerProtocol.ResHousingOpenStart> _response);
    /*0x2b48840*/ void Send_HousingOpenEnd(bool _loading, ServerProtocol.ReqHousingOpenEnd _request, System.Action<ServerProtocol.ResHousingOpenEnd> _response);
    /*0x2b488dc*/ void Send_HousingFastOpen(bool _loading, ServerProtocol.ReqHousingFastOpen _request, System.Action<ServerProtocol.ResHousingFastOpen> _response);
    /*0x2b48978*/ void Send_HousingUpdate(bool _loading, ServerProtocol.ReqHousingUpdate _request, System.Action<ServerProtocol.ResHousingUpdate> _response);
    /*0x2b48a14*/ void Send_HousingUpdateDeck(bool _loading, ServerProtocol.ReqHousingUpdateDeck _request, System.Action<ServerProtocol.ResHousingUpdateDeck> _response);
    /*0x2b48ab0*/ void Send_HousingCleanStart(bool _loading, ServerProtocol.ReqHousingClearStart _request, System.Action<ServerProtocol.ResHousingClearStart> _response);
    /*0x2b48b4c*/ void Send_HousingCleanEnd(bool _loading, ServerProtocol.ReqHousingClearEnd _request, System.Action<ServerProtocol.ResHousingClearEnd> _response);
    /*0x2b48be8*/ void Send_HousingSendPoint(bool _loading, ServerProtocol.ReqHousingSendPoint _request, System.Action<ServerProtocol.ResHousingSendPoint> _response);
    /*0x2b48c84*/ void Send_HousingTakePoint(bool _loading, ServerProtocol.ReqHousingTakePoint _request, System.Action<ServerProtocol.ResHousingTakePoint> _response);
    /*0x2b48d20*/ void Send_HousingAllPoint(bool _loading, ServerProtocol.ReqHousingAllPoint _request, System.Action<ServerProtocol.ResHousingAllPoint> _response);
    /*0x2b48dbc*/ void Send_HousingVisit(bool _loading, ServerProtocol.ReqHousingVisit _request, System.Action<ServerProtocol.ResHousingVisit> _response);
    /*0x2b48e58*/ void Send_HousingHistory(bool _loading, ServerProtocol.ReqHousingHistory _request, System.Action<ServerProtocol.ResHousingHistory> _response);
    /*0x2b48ef4*/ void Send_HousingSaveList(bool _loading, ServerProtocol.ReqHousingSaveList _request, System.Action<ServerProtocol.ResHousingSaveList> _response);
    /*0x2b48f90*/ void Send_HousingSave(bool _loading, ServerProtocol.ReqHousingSave _request, System.Action<ServerProtocol.ResHousingSave> _response);
    /*0x2b49028*/ void Send_HousingSaveName(bool _loading, ServerProtocol.ReqHousingSaveName _request, System.Action<ServerProtocol.ResHousingSaveName> _response);
    /*0x2b490c4*/ void Send_HousingDelete(bool _loading, ServerProtocol.ReqHousingDelete _request, System.Action<ServerProtocol.ResHousingDelete> _response);
    /*0x2b49160*/ void Send_HousingUpgrade(bool _loading, ServerProtocol.ReqHousingObjUpgrade _request, System.Action<ServerProtocol.ResHousingObjUpgrade> _response);
    /*0x2b491f8*/ void Send_HousingUpgradeComplete(bool _loading, ServerProtocol.ReqHousingObjComplete _request, System.Action<ServerProtocol.ResHousingObjComplete> _response);
    /*0x2b49294*/ void Send_HousingPurchase(bool _loading, ServerProtocol.ReqHousingObjPurchase _request, System.Action<ServerProtocol.ResHousingObjPurchase> _response);
    /*0x2b49330*/ void Send_HousingSell(bool _loading, ServerProtocol.ReqHousingObjSell _request, System.Action<ServerProtocol.ResHousingObjSell> _response);
    /*0x2b493cc*/ void Send_HousingDismiss(bool _loading, ServerProtocol.ReqHousingObjDismiss _request, System.Action<ServerProtocol.ResHousingObjDismiss> _response);
    /*0x2b49468*/ void Send_HousingBuy(bool _loading, ServerProtocol.ReqHousingObjBuy _request, System.Action<ServerProtocol.ResHousingObjBuy> _response);
    /*0x2b49504*/ void Send_HousingObjLock(bool _loading, ServerProtocol.ReqHousingObjLock _request, System.Action<ServerProtocol.ResHousingObjLock> _response);
    /*0x2b495a0*/ void Send_VIPReward(bool _loading, ServerProtocol.ReqCashShopVIPReward _request, System.Action<ServerProtocol.ResCashShopVIPReward> _response);
    /*0x2b4963c*/ void Send_GetHeroInven(bool _loading, ServerProtocol.ReqHeroInven _request, System.Action<ServerProtocol.ResHeroInven> _response);
    /*0x2b496d8*/ void Send_EquipHero(bool _loading, ServerProtocol.ReqHeroEquip _request, System.Action<ServerProtocol.ResHeroEquip> _response);
    /*0x2b49774*/ void Send_AutoEquipHero(bool _loading, ServerProtocol.ReqHeroAutoEquip _request, System.Action<ServerProtocol.ResHeroAutoEquip> _response);
    /*0x2b49810*/ void Send_UnequipHero(bool _loading, ServerProtocol.ReqHeroUnequip _request, System.Action<ServerProtocol.ResHeroUnequip> _response);
    /*0x2b498ac*/ void Send_UnequipHeroAll(bool _loading, ServerProtocol.ReqHeroAllUnequip _request, System.Action<ServerProtocol.ResHeroAllUnequip> _response);
    /*0x2b49948*/ void Send_PromoteHero(bool _loading, ServerProtocol.ReqHeroPromote _request, System.Action<ServerProtocol.ResHeroPromote> _response);
    /*0x2b499e4*/ void Send_PromoteMultiHero(bool _loading, ServerProtocol.ReqHeroPromoteMulti _request, System.Action<ServerProtocol.ResHeroPromoteMulti> _response);
    /*0x2b49a7c*/ void Send_LevelupHero(bool _loading, ServerProtocol.ReqHeroLevelUp _request, System.Action<ServerProtocol.ResHeroLevelUp> _response);
    /*0x2b49b18*/ void Send_LockHero(bool _loading, ServerProtocol.ReqHeroLock _request, System.Action<ServerProtocol.ResHeroLock> _response);
    /*0x2b49bb4*/ void Send_ExtendSlot(bool _loading, ServerProtocol.ReqHeroExtendSlot _request, System.Action<ServerProtocol.ResHeroExtendSlot> _response);
    /*0x2b49c50*/ void Send_BookReward(bool _loading, ServerProtocol.ReqHeroBookReward _request, System.Action<ServerProtocol.ResHeroBookReward> _response);
    /*0x2b49cec*/ void Send_ResetHero(bool _loading, ServerProtocol.ReqHeroWagon _request, System.Action<ServerProtocol.ResHeroWagon> _response);
    /*0x2b49d88*/ void Send_RevertHero(bool _loading, ServerProtocol.ReqHeroRevert _request, System.Action<ServerProtocol.ResHeroRevert> _response);
    /*0x2b49e24*/ void Send_DismissHero(bool _loading, ServerProtocol.ReqHeroDismiss _request, System.Action<ServerProtocol.ResHeroDismiss> _response);
    /*0x2b49ebc*/ void Send_ResetFactionBonus(bool _loading, ServerProtocol.ReqEquipResetFactionBonus _request, System.Action<ServerProtocol.ResEquipResetFactionBonus> _response);
    /*0x2b49f58*/ void Send_ConfirmFactionBonus(bool _loading, ServerProtocol.ReqEquipConfirmFactionBonus _request, System.Action<ServerProtocol.ResEquipConfirmFactionBonus> _response);
    /*0x2b49ff4*/ void Send_PromoteEquipment(bool _loading, ServerProtocol.ReqEquipPromote _request, System.Action<ServerProtocol.ResEquipPromote> _response);
    /*0x2b4a090*/ void Send_ReinforceHero(bool _loading, ServerProtocol.ReqEquipReinforce _request, System.Action<ServerProtocol.ResEquipReinforce> _response);
    /*0x2b4a128*/ void Send_EquipSignature(bool _loading, ServerProtocol.ReqEquipSignature _request, System.Action<ServerProtocol.ResEquipSignature> _response);
    /*0x2b4a1c0*/ void Send_UseItem(bool _loading, ServerProtocol.ReqItemUse _request, System.Action<ServerProtocol.ResItemUse> _response);
    /*0x2b4a25c*/ void Send_SearchMail(bool _loading, ServerProtocol.ReqMailInbox _request, System.Action<ServerProtocol.ResMailInbox> _response);
    /*0x2b4a2f8*/ void Send_TakeMail(bool _loading, ServerProtocol.ReqMailTake _request, System.Action<ServerProtocol.ResMailTake> _response);
    /*0x2b4a394*/ void Send_TakeAllMail(bool _loading, ServerProtocol.ReqMailTakeAll _request, System.Action<ServerProtocol.ResMailTakeAll> _response);
    /*0x2b4a430*/ void Send_RemoveMail(bool _loading, ServerProtocol.ReqMailRemove _request, System.Action<ServerProtocol.ResMailRemove> _response);
    /*0x2b4a4cc*/ void Send_RemoveAllMail(bool _loading, ServerProtocol.ReqMailRemoveAll _request, System.Action<ServerProtocol.ResMailRemoveAll> _response);
    /*0x2b4a568*/ void Send_CashShopPurchase(bool _loading, ServerProtocol.ReqCashShopPurchase _request, System.Action<ServerProtocol.ResCashShopPurchase> _response);
    /*0x2b4a600*/ void Send_CashShopCheck(bool _loading, ServerProtocol.ReqCashShopCheck _request, System.Action<ServerProtocol.ResCashShopCheck> _response, System.Action<int, string> _failed);
    /*0x2b4a6a0*/ void Send_GrowthEnter(bool _loading, ServerProtocol.ReqGrowthEnter _request, System.Action<ServerProtocol.ResGrowthEnter> _response, System.Action<int, string> _failed);
    /*0x2b4a740*/ void Send_GrowthTake(bool _loading, ServerProtocol.ReqGrowthTake _request, System.Action<ServerProtocol.ResGrowthTake> _response, System.Action<int, string> _failed);
    /*0x2b4a7e0*/ void Send_CashShopClaim(bool _loading, ServerProtocol.ReqCashShopClaim _request, System.Action<ServerProtocol.ResCashShopClaim> _response, System.Action<int, string> _failed);
    /*0x2b4a880*/ void Send_CashShopInstant(bool _loading, ServerProtocol.ReqCashShopInstant _request, System.Action<ServerProtocol.ResCashShopInstant> _response, System.Action<int, string> _failed);
    /*0x2b4a920*/ void Send_BeginTower(bool _loading, ServerProtocol.ReqTowerBegin _request, System.Action<ServerProtocol.ResTowerBegin> _response);
    /*0x2b4a9bc*/ void Send_FinishTower(bool _loading, ServerProtocol.ReqTowerFinish _request, System.Action<ServerProtocol.ResTowerFinish> _response);
    /*0x2b4aa58*/ void Send_TowerRanking(bool _loading, ServerProtocol.ReqTowerRanking _request, System.Action<ServerProtocol.ResTowerRanking> _response);
    /*0x2b4aaf4*/ void Send_TowerOthers(bool _loading, ServerProtocol.ReqTowerOthers _request, System.Action<ServerProtocol.ResTowerOthers> _response);
    /*0x2b4ab90*/ void Send_TowerInfo(bool _loading, ServerProtocol.ReqTowerInfo _request, System.Action<ServerProtocol.ResTowerInfo> _response);
    /*0x2b4ac2c*/ void Send_TowerReplay(bool _loading, ServerProtocol.ReqTowerReplay _request, System.Action<ServerProtocol.ResTowerReplay> _response);
    /*0x2b4acc8*/ void Send_BuyGacha(bool _loading, ServerProtocol.ReqGachaBuy _request, System.Action<ServerProtocol.ResGachaBuy> _response);
    /*0x2b4ad64*/ void Send_CommitWishList(bool _loading, ServerProtocol.ReqGachaCommitWishList _request, System.Action<ServerProtocol.ResGachaCommitWishList> _response);
    /*0x2b4ae00*/ void Send_EnterGacha(bool _loading, ServerProtocol.ReqGachaEnter _request, System.Action<ServerProtocol.ResGachaEnter> _response);
    /*0x2b4ae9c*/ void Send_BuyFactionPool(bool _loading, ServerProtocol.ReqGachaBuyFactionPool _request, System.Action<ServerProtocol.ResGachaBuyFactionPool> _response);
    /*0x2b4af38*/ void Send_SetAutoDismiss(bool _loading, ServerProtocol.ReqGachaSetAutoDismiss _request, System.Action<ServerProtocol.ResGachaSetAutoDismiss> _response);
    /*0x2b4afd4*/ void Send_LoadTroop(bool _loading, ServerProtocol.ReqTroopLoad _request, System.Action<ServerProtocol.ResTroopLoad> _response);
    /*0x2b4b070*/ void Send_MakeTroop(bool _loading, ServerProtocol.ReqTroopMake _request, System.Action<ServerProtocol.ResTroopMake> _response);
    /*0x2b4b10c*/ void Send_UpdateTroopName(bool _loading, ServerProtocol.ReqTroopUpdateName _request, System.Action<ServerProtocol.ResTroopUpdateName> _response);
    /*0x2b4b1a8*/ void Send_UpdateTroopOrder(bool _loading, ServerProtocol.ReqTroopUpdateOrder _request, System.Action<ServerProtocol.ResTroopUpdateOrder> _response);
    /*0x2b4b244*/ void Send_UpdateTroopHeroes(bool _loading, ServerProtocol.ReqTroopUpdateHeroes _request, System.Action<ServerProtocol.ResTroopUpdateHeroes> _response);
    /*0x2b4b2e0*/ void Send_RemoveTroop(bool _loading, ServerProtocol.ReqTroopRemove _request, System.Action<ServerProtocol.ResTroopRemove> _response);
    /*0x2b4b37c*/ void Send_EnterQuest(bool _loading, ServerProtocol.ReqQuestEnter _request, System.Action<ServerProtocol.ResQuestEnter> _response);
    /*0x2b4b418*/ void Send_NewQuest(bool _loading, ServerProtocol.ReqQuestNew _request, System.Action<ServerProtocol.ResQuestNew> _response);
    /*0x2b4b4b4*/ void Send_TakeQuest(bool _loading, ServerProtocol.ReqQuestTake _request, System.Action<ServerProtocol.ResQuestTake> _response);
    /*0x2b4b550*/ void Send_ExchangeQuest(bool _loading, ServerProtocol.ReqQuestExchange _request, System.Action<ServerProtocol.ResQuestExchange> _response);
    /*0x2b4b5ec*/ void Send_TakeMainQuest(bool _loading, ServerProtocol.ReqQuestTakeMain _request, System.Action<ServerProtocol.ResQuestTakeMain> _response);
    /*0x2b4b688*/ void Send_VisitSite(bool _loading, ServerProtocol.ReqQuestVisitSite _request, System.Action<ServerProtocol.ResQuestVisitSite> _response);
    /*0x2b4b724*/ void Send_MainArena(bool _loading, ServerProtocol.ReqArenaMain _request, System.Action<ServerProtocol.ResArenaMain> _response);
    /*0x2b4b7c0*/ void Send_EnterArena(bool _loading, ServerProtocol.ReqArenaEnter _request, System.Action<ServerProtocol.ResArenaEnter> _response);
    /*0x2b4b85c*/ void Send_UpdateDeckArena(bool _loading, ServerProtocol.ReqArenaUpdateDeck _request, System.Action<ServerProtocol.ResArenaUpdateDeck> _response);
    /*0x2b4b8f8*/ void Send_SearchArena(bool _loading, ServerProtocol.ReqArenaSearch _request, System.Action<ServerProtocol.ResArenaSearch> _response);
    /*0x2b4b994*/ void Send_HistoryArena(bool _loading, ServerProtocol.ReqArenaHistory _request, System.Action<ServerProtocol.ResArenaHistory> _response);
    /*0x2b4ba30*/ void Send_ChoiceArena(bool _loading, ServerProtocol.ReqArenaChoice _request, System.Action<ServerProtocol.ResArenaChoice> _response, System.Action<int, string> _failed);
    /*0x2b4bad0*/ void Send_FinishArena(bool _loading, ServerProtocol.ReqArenaFinish _request, System.Action<ServerProtocol.ResArenaFinish> _response);
    /*0x2b4bb6c*/ void Send_ReplayArena(bool _loading, ServerProtocol.ReqArenaReplay _request, System.Action<ServerProtocol.ResArenaReplay> _response);
    /*0x2b4bc08*/ void Send_TicketArena(bool _loading, ServerProtocol.ReqArenaTicket _request, System.Action<ServerProtocol.ResArenaTicket> _response);
    /*0x2b4bca4*/ void Send_EnterWorldArena(bool _loading, ServerProtocol.ReqWorldArenaEnter _request, System.Action<ServerProtocol.ResWorldArenaEnter> _response);
    /*0x2b4bd40*/ void Send_TakeRewardWorldArena(bool _loading, ServerProtocol.ReqWorldArenaTakeReward _request, System.Action<ServerProtocol.ResWorldArenaReward> _response);
    /*0x2b4bddc*/ void Send_UpdateDeckWorldArena(bool _loading, ServerProtocol.ReqWorldArenaUpdateDeck _request, System.Action<ServerProtocol.ResWorldArenaUpdateDeck> _response);
    /*0x2b4be78*/ void Send_TicketWorldArena(bool _loading, ServerProtocol.ReqWorldArenaTicket _request, System.Action<ServerProtocol.ResWorldArenaTicket> _response);
    /*0x2b4bf14*/ void Send_RefreshWorldArena(bool _loading, ServerProtocol.ReqWorldArenaRefresh _request, System.Action<ServerProtocol.ResWorldArenaRefresh> _response);
    /*0x2b4bfb0*/ void Send_HistoryWorldArena(bool _loading, ServerProtocol.ReqWorldArenaHistory _request, System.Action<ServerProtocol.ResWorldArenaHistory> _response);
    /*0x2b4c04c*/ void Send_ChoiceWorldArena(bool _loading, ServerProtocol.ReqWorldArenaChoice _request, System.Action<ServerProtocol.ResWorldArenaChoice> _response, System.Action<int, string> _failed);
    /*0x2b4c0ec*/ void Send_FinishWorldArena(bool _loading, ServerProtocol.ReqWorldArenaFinish _request, System.Action<ServerProtocol.ResWorldArenaFinish> _response);
    /*0x2b4c188*/ void Send_TrainingWorldArena(bool _loading, ServerProtocol.ReqWorldArenaTraining _request, System.Action<ServerProtocol.ResWorldArenaTraining> _response);
    /*0x2b4c224*/ void Send_MazeEnter(bool _loading, ServerProtocol.ReqMazeEnter _request, System.Action<ServerProtocol.ResMazeEnter> _response);
    /*0x2b4c2c0*/ void Send_MazeDice(bool _loading, ServerProtocol.ReqMazeDice _request, System.Action<ServerProtocol.ResMazeDice> _response);
    /*0x2b4c35c*/ void Send_MazeBegin(bool _loading, ServerProtocol.ReqMazeBegin _request, System.Action<ServerProtocol.ResMazeBegin> _response);
    /*0x2b4c3f8*/ void Send_MazeFinish(bool _loading, ServerProtocol.ReqMazeFinish _request, System.Action<ServerProtocol.ResMazeFinish> _response);
    /*0x2b4c494*/ void Send_MazeMate(bool _loading, ServerProtocol.ReqMazeMate _request, System.Action<ServerProtocol.ResMazeMate> _response);
    /*0x2b4c530*/ void Send_MazeMateReset(bool _loading, ServerProtocol.ReqMazeMateReset _request, System.Action<ServerProtocol.ResMazeMateReset> _response);
    /*0x2b4c5cc*/ void Send_MazeItem(bool _loading, ServerProtocol.ReqMazeItem _request, System.Action<ServerProtocol.ResMazeItem> _response);
    /*0x2b4c668*/ void Send_MazeRoll(bool _loading, ServerProtocol.ReqMazeRoll _request, System.Action<ServerProtocol.ResMazeRoll> _response);
    /*0x2b4c704*/ void Send_MazeInfo(bool _loading, ServerProtocol.ReqMazeInfo _request, System.Action<ServerProtocol.ResMazeInfo> _response);
    /*0x2b4c7a0*/ void Send_EnterResonance(bool _loading, ServerProtocol.ReqResonanceEnter _request, System.Action<ServerProtocol.ResResonanceEnter> _response);
    /*0x2b4c83c*/ void Send_OpenResonance(bool _loading, ServerProtocol.ReqResonanceOpen _request, System.Action<ServerProtocol.ResResonanceOpen> _response);
    /*0x2b4c8d8*/ void Send_CleanResonance(bool _loading, ServerProtocol.ReqResonanceClean _request, System.Action<ServerProtocol.ResResonanceClean> _response);
    /*0x2b4c974*/ void Send_PushResonance(bool _loading, ServerProtocol.ReqResonancePush _request, System.Action<ServerProtocol.ResResonancePush> _response);
    /*0x2b4ca10*/ void Send_PopResonance(bool _loading, ServerProtocol.ReqResonancePop _request, System.Action<ServerProtocol.ResResonancePop> _response);
    /*0x2b4caac*/ void Send_UnlockResonance(bool _loading, ServerProtocol.ReqResonanceUnlock _request, System.Action<ServerProtocol.ResResonanceUnlock> _response);
    /*0x2b4cb48*/ void Send_ReinforceResonance(bool _loading, ServerProtocol.ReqResonanceReinforce _request, System.Action<ServerProtocol.ResResonanceReinforce> _response);
    /*0x2b4cbe4*/ void Send_LevelUpResonance(bool _loading, ServerProtocol.ReqResonanceLevelUp _request, System.Action<ServerProtocol.ResResonanceLevelUp> _response);
    /*0x2b4cc80*/ void Send_ContentShopEnter(bool _loading, ServerProtocol.ReqContentShopEnter _request, System.Action<ServerProtocol.ResContentShopEnter> _response);
    /*0x2b4cd1c*/ void Send_ContentShopPurchase(bool _loading, ServerProtocol.ReqContentShopPurchase _request, System.Action<ServerProtocol.ResContentShopPurchase> _response);
    /*0x2b4cdb8*/ void Send_ContentShopReset(bool _loading, ServerProtocol.ReqContentShopReset _request, System.Action<ServerProtocol.ResContentShopReset> _response);
    /*0x2b4ce54*/ void Send_AttendReward(bool _loading, ServerProtocol.ReqEventAttendReward _request, System.Action<ServerProtocol.ResEventAttendReward> _response);
    /*0x2b4cef0*/ void Send_BattlePassRefresh(bool _loading, ServerProtocol.ReqEventPassRefresh _request, System.Action<ServerProtocol.ResEventPassRefresh> _response);
    /*0x2b4cf8c*/ void Send_BattlePassReward(bool _loading, ServerProtocol.ReqEventPassReward _request, System.Action<ServerProtocol.ResEventPassReward> _response);
    /*0x2b4d028*/ void Send_EventMissionEnter(bool _loading, ServerProtocol.ReqMissionEnter _request, System.Action<ServerProtocol.ResMissionEnter> _response, System.Action<int, string> _fail);
    /*0x2b4d0c8*/ void Send_EventMissionTake(bool _loading, ServerProtocol.ReqMissionTake _request, System.Action<ServerProtocol.ResMissionTake> _response, System.Action<int, string> _fail);
    /*0x2b4d168*/ void Send_EventMissionExchange(bool _loading, ServerProtocol.ReqMissionExchange _request, System.Action<ServerProtocol.ResMissionExchange> _response, System.Action<int, string> _fail);
    /*0x2b4d208*/ void Send_EventExchange(bool _loading, ServerProtocol.ReqEventExchange _request, System.Action<ServerProtocol.ResEventExchange> _response);
    /*0x2b4d2a4*/ void Send_Coupon(bool _loading, ServerProtocol.ReqEventCoupon _request, System.Action<ServerProtocol.ResEventCoupon> _response, System.Action<int, string> _fail);
    /*0x2b4d344*/ void Send_BountyEnter(bool _loading, ServerProtocol.ReqBountyEnter _request, System.Action<ServerProtocol.ResBountyEnter> _response, System.Action<int, string> _fail);
    /*0x2b4d3e4*/ void Send_BountyDispatch(bool _loading, ServerProtocol.ReqBountyDispatch _request, System.Action<ServerProtocol.ResBountyDispatch> _response, System.Action<int, string> _fail);
    /*0x2b4d484*/ void Send_BountySupport(bool _loading, ServerProtocol.ReqBountySupporter _request, System.Action<ServerProtocol.ResBountySupporter> _response, System.Action<int, string> _fail);
    /*0x2b4d524*/ void Send_BountySetSupport(bool _loading, ServerProtocol.ReqBountySetSupporter _request, System.Action<ServerProtocol.ResBountySetSupporter> _response, System.Action<int, string> _fail);
    /*0x2b4d5c4*/ void Send_BountyReleaseSupporter(bool _loading, ServerProtocol.ReqBountyReleaseSupporter _request, System.Action<ServerProtocol.ResBountyReleaseSupporter> _response, System.Action<int, string> _fail);
    /*0x2b4d664*/ void Send_BountyReceive(bool _loading, ServerProtocol.ReqBountyReceive _request, System.Action<ServerProtocol.ResBountyReceive> _response, System.Action<int, string> _fail);
    /*0x2b4d704*/ void Send_BountyReceiveAll(bool _loading, ServerProtocol.ReqBountyReceiveAll _request, System.Action<ServerProtocol.ResBountyReceiveAll> _response, System.Action<int, string> _fail);
    /*0x2b4d7a4*/ void Send_BountyReset(bool _loading, ServerProtocol.ReqBountyReset _request, System.Action<ServerProtocol.ResBountyReset> _response, System.Action<int, string> _fail);
    /*0x2b4d844*/ void Send_RelationActivate(bool _loading, ServerProtocol.ReqRelationActivate _request, System.Action<ServerProtocol.ResRelationActivate> _response);
    /*0x2b4d8e0*/ void Send_RaceEnter(bool _loading, ServerProtocol.ReqRaceEnter _request, System.Action<ServerProtocol.ResRaceEnter> _response);
    /*0x2b4d97c*/ void Send_RaceVote(bool _loading, ServerProtocol.ReqRaceVote _request, System.Action<ServerProtocol.ResRaceVote> _response);
    /*0x2b4da18*/ void Send_RaceList(bool _loading, ServerProtocol.ReqRaceList _request, System.Action<ServerProtocol.ResRaceList> _response);
    /*0x2b4dab4*/ void Send_RaceView(bool _loading, ServerProtocol.ReqRaceView _request, System.Action<ServerProtocol.ResRaceView> _response);
    /*0x2b4db50*/ void Send_RaceReward(bool _loading, ServerProtocol.ReqRaceReward _request, System.Action<ServerProtocol.ResRaceReward> _response);
    /*0x2b4dbec*/ void Send_RaceRanking(bool _loading, ServerProtocol.ReqRaceRanking _request, System.Action<ServerProtocol.ResRaceRanking> _response);
    /*0x2b4dc88*/ void Send_ArtifactReinforce(bool _loading, ServerProtocol.ReqEquipArtifactReinforce _request, System.Action<ServerProtocol.ResEquipArtifactReinforce> _response);
    /*0x2b4dd24*/ void Send_ArtifactEquip(bool _loading, ServerProtocol.ReqHeroArtifactEquip _request, System.Action<ServerProtocol.ResHeroArtifactEquip> _response);
    /*0x2b4ddc0*/ void Send_ArtifactSwap(bool _loading, ServerProtocol.ReqHeroArtifactSwap _request, System.Action<ServerProtocol.ResHeroArtifactSwap> _response);
    /*0x2b4de5c*/ void Send_ArtifactUnEquip(bool _loading, ServerProtocol.ReqHeroArtifactUnequip _request, System.Action<ServerProtocol.ResHeroArtifactUnequip> _response);
    /*0x2b4def8*/ void Send_SkinBuy(bool _loading, ServerProtocol.ReqSkinBuy _request, System.Action<ServerProtocol.ResSkinBuy> _response);
    /*0x2b4df94*/ void Send_SkinEquip(bool _loading, ServerProtocol.ReqSkinEquip _request, System.Action<ServerProtocol.ResSkinEquip> _response);
    /*0x2b4e030*/ void Send_SkinUnEquip(bool _loading, ServerProtocol.ReqSkinUnequip _request, System.Action<ServerProtocol.ResSkinUnequip> _response);
    /*0x2b4e0cc*/ void Send_DungeonEnter(bool _loading, ServerProtocol.ReqDungeonEnter _request, System.Action<ServerProtocol.ResDungeonEnter> _response);
    /*0x2b4e168*/ void Send_DungeonExploreStart(bool _loading, ServerProtocol.ReqDungeonExploreStart _request, System.Action<ServerProtocol.ResDungeonExploreStart> _response);
    /*0x2b4e204*/ void Send_DungeonExploreContinue(bool _loading, ServerProtocol.ReqDungeonExploreContinue _request, System.Action<ServerProtocol.ResDungeonExploreContinue> _response);
    /*0x2b4e2a0*/ void Send_DungeonExploreCancel(bool _loading, ServerProtocol.ReqDungeonExploreCancel _request, System.Action<ServerProtocol.ResDungeonExploreCancel> _response);
    /*0x2b4e33c*/ void Send_DungeonMove(bool _loading, ServerProtocol.ReqDungeonMove _request, System.Action<ServerProtocol.ResDungeonMove> _response);
    /*0x2b4e3d8*/ void Send_DungeonCoinReward(bool _loading, ServerProtocol.ReqDungeonCoinReward _request, System.Action<ServerProtocol.ResDungeonCoinReward> _response, System.Action<int, string> _failed);
    /*0x2b4e478*/ void Send_DungeonJail(bool _loading, ServerProtocol.ReqDungeonJail _request, System.Action<ServerProtocol.ResDungeonJail> _response);
    /*0x2b4e514*/ void Send_DungeonBegin(bool _loading, ServerProtocol.ReqDungeonBegin _request, System.Action<ServerProtocol.ResDungeonBegin> _response);
    /*0x2b4e5b0*/ void Send_DungeonFinish(bool _loading, ServerProtocol.ReqDungeonFinish _request, System.Action<ServerProtocol.ResDungeonFinish> _response);
    /*0x2b4e64c*/ void Send_DungeonHeal(bool _loading, ServerProtocol.ReqDungeonHeal _request, System.Action<ServerProtocol.ResDungeonHeal> _response);
    /*0x2b4e6e8*/ void Send_DungeonRevival(bool _loading, ServerProtocol.ReqDungeonRevival _request, System.Action<ServerProtocol.ResDungeonRevival> _response);
    /*0x2b4e784*/ void Send_DungeonMate(bool _loading, ServerProtocol.ReqDungeonMate _request, System.Action<ServerProtocol.ResDungeonMate> _response);
    /*0x2b4e820*/ void Send_DungeonWall(bool _loading, ServerProtocol.ReqDungeonWall _request, System.Action<ServerProtocol.ResDungeonWall> _response);
    /*0x2b4e8bc*/ void Send_DungeonProgress(bool _loading, ServerProtocol.ReqDungeonProgress _request, System.Action<ServerProtocol.ResDungeonProgress> _response);
    /*0x2b4e958*/ void Send_DungeonAssign(bool _loading, ServerProtocol.ReqDungeonAssign _request, System.Action<ServerProtocol.ResDungeonAssign> _response);
    /*0x2b4e9f4*/ void Send_AtticBuyGacha(bool _loading, ServerProtocol.ReqAtticBuy _request, System.Action<ServerProtocol.ResAtticBuy> _response);
    /*0x2b4ea90*/ void Send_AtticCommit(bool _loading, ServerProtocol.ReqAtticCommit _request, System.Action<ServerProtocol.ResAtticCommit> _response);
    /*0x2b4eb2c*/ void Send_WorldBossEnter(bool _loading, ServerProtocol.ReqWorldBossEnter _request, System.Action<ServerProtocol.ResWorldBossEnter> _response);
    /*0x2b4ebc8*/ void Send_WorldBossTake(bool _loading, ServerProtocol.ReqWorldBossTake _request, System.Action<ServerProtocol.ResWorldBossTake> _response);
    /*0x2b4ec64*/ void Send_WorldBossBegin(bool _loading, ServerProtocol.ReqWorldBossBegin _request, System.Action<ServerProtocol.ResWorldBossBegin> _response);
    /*0x2b4ed00*/ void Send_WorldBossFinish(bool _loading, ServerProtocol.ReqWorldBossFinish _request, System.Action<ServerProtocol.ResWorldBossFinish> _response);
    /*0x2b4ed9c*/ void Send_EventBossBegin(bool _loading, ServerProtocol.ReqEventBegin _request, System.Action<ServerProtocol.ResEventBegin> _response);
    /*0x2b4ee38*/ void Send_EventBossFinish(bool _loading, ServerProtocol.ReqEventFinish _request, System.Action<ServerProtocol.ResEventFinish> _response);
    /*0x2b4eed4*/ void Send_EventBossMopup(bool _loading, ServerProtocol.ReqEventMopUp _request, System.Action<ServerProtocol.ResEventMopUp> _response);
    /*0x2b4ef70*/ void Send_EventBossHistory(bool _loading, ServerProtocol.ReqEventBossHistory _request, System.Action<ServerProtocol.ResEventBossHistory> _response);
    /*0x2b4f00c*/ void Send_EventBossReplay(bool _loading, ServerProtocol.ReqEventReplay _request, System.Action<ServerProtocol.ResEventReplay> _response);
    /*0x2b4f0a8*/ void Send_ManufactureEnter(bool _loading, ServerProtocol.ReqManufactureEnter _request, System.Action<ServerProtocol.ResManufactureEnter> _response);
    /*0x2b4f144*/ void Send_ManufactureInsert(bool _loading, ServerProtocol.ReqManufactureInsert _request, System.Action<ServerProtocol.ResManufactureInsert> _response);
    /*0x2b4f1e0*/ void Send_Roulette(bool _loading, ServerProtocol.ReqEventRoulette _request, System.Action<ServerProtocol.ResEventRoulette> _response);
    /*0x2b4f27c*/ void Send_AbilityFreeRoll(bool _loading, ServerProtocol.ReqAbilityFreeRoll _request, System.Action<ServerProtocol.ResAbilityFreeRoll> _response);
    /*0x2b4f318*/ void Send_AbilityCurrencyRoll(bool _loading, ServerProtocol.ReqAbilityCurrencyRoll _request, System.Action<ServerProtocol.ResAbilityCurrencyRoll> _response);
    /*0x2b4f3b4*/ void Send_AbilityItemRoll(bool _loading, ServerProtocol.ReqAbilityItemRoll _request, System.Action<ServerProtocol.ResAbilityItemRoll> _response);
    /*0x2b4f450*/ void Send_AbilityConfirm(bool _loading, ServerProtocol.ReqAbilityConfirm _request, System.Action<ServerProtocol.ResAbilityConfirm> _response);
    /*0x2b4f4ec*/ void Send_PveRankingEnter(bool _loading, ServerProtocol.ReqPveRankingEnter _request, System.Action<ServerProtocol.ResPveRankingEnter> _response);
    /*0x2b4f588*/ void Send_PveRankingRanking(bool _loading, ServerProtocol.ReqPveRankingRanking _request, System.Action<ServerProtocol.ResPveRankingRanking> _response);
    /*0x2b4f624*/ void Send_PveRankingBegin(bool _loading, ServerProtocol.ReqPveRankingBegin _request, System.Action<ServerProtocol.ResPveRankingBegin> _response);
    /*0x2b4f6c0*/ void Send_PveRankingFinish(bool _loading, ServerProtocol.ReqPveRankingFinish _request, System.Action<ServerProtocol.ResPveRankingFinish> _response);
    /*0x2b4f75c*/ void Send_RunGameReward(bool _loading, ServerProtocol.ReqRunGameReward _request, System.Action<ServerProtocol.ResRunGameReward> _response);
    /*0x2b4f7f8*/ void Send_RunGameRanking(bool _loading, ServerProtocol.ReqRunGameRanking _request, System.Action<ServerProtocol.ResRunGameRanking> _response);
    /*0x2b4f894*/ void Send_AdsFinal(bool _loading, ServerProtocol.ReqADFinalReward _request, System.Action<ServerProtocol.ResADFinalReward> _response);
    /*0x2b4f930*/ void Send_HardCampaignBegin(bool _loading, ServerProtocol.ReqHardCampaignBegin _request, System.Action<ServerProtocol.ResHardCampaignBegin> _response);
    /*0x2b4f9cc*/ void Send_HardCampaignFinish(bool _loading, ServerProtocol.ReqHardCampaignFinish _request, System.Action<ServerProtocol.ResHardCampaignFinish> _response);
    /*0x2b4fa68*/ void Send_HardCampaignNextChapter(bool _loading, ServerProtocol.ReqHardCampaignNextChapter _request, System.Action<ServerProtocol.ResHardCampaignNextChapter> _response);
    /*0x2b4fb04*/ void Send_HardCampaignInfo(bool _loading, ServerProtocol.ReqHardCampaignInfo _request, System.Action<ServerProtocol.ResHardCampaignInfo> _response);
    /*0x2b4fba0*/ void Send_HardCampaignReplay(bool _loading, ServerProtocol.ReqHardCampaignReplay _request, System.Action<ServerProtocol.ResHardCampaignReplay> _response);
    /*0x2b4fc3c*/ void Send_HardCampaignBuddy(bool _loading, ServerProtocol.ReqHardCampaignBuddy _request, System.Action<ServerProtocol.ResHardCampaignBuddy> _response);
    /*0x2b44404*/ string SetURL(ServerProtocol.ProtocolType _parentType, ServerProtocol.ProtocolSubType _childType, object _data);
    /*0x2b457ac*/ string SetURL(ServerProtocol.ProtocolType _protocol, ServerProtocol.ProtocolSubType _subProtocol);
    /*0x2b44950*/ System.Collections.IEnumerator CoWebRequest(bool _loading, string _uri, System.Action<System.Byte[]> _callBack);
    System.Collections.IEnumerator CoWebRequest_GateInit<T>(bool _loading, string _uri, System.Action<T> _callback);
    System.Collections.IEnumerator CoWebRequest<T>(bool _loading, string _uri, System.Action<T> _callback, System.Action<int, string> _failcallback);
    System.Collections.IEnumerator CoWebRequestPOST<T>(bool _loading, string _uri, object _data, System.Action<T> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    /*0x2b5014c*/ void ToFiliterOutErrorCode(int _errorCode, string arg);
    void <CoWebRequest>g__Fail|315_0<T>(int code, UnityEngine.Networking.UnityWebRequest req, ref NetworkManager.<>c__DisplayClass315_0<T> );
    void <CoWebRequest>g__Fail|317_0<T0, T1, T2>(int code, ref NetworkManager.<>c__DisplayClass317_0<T0, T1, T2> );
    void <CoWebRequest>g__Fail|318_0<T0, T1, T2, T3>(int code, ref NetworkManager.<>c__DisplayClass318_0<T0, T1, T2, T3> );
    void <CoWebRequest>g__Fail|319_0<T0, T1, T2, T3, T4>(int code, ref NetworkManager.<>c__DisplayClass319_0<T0, T1, T2, T3, T4> );
    void <CoWebRequest>g__Fail|320_0<T0, T1, T2, T3, T4, T5, T6>(int code, ref NetworkManager.<>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6> );
    void <CoWebRequest>g__Fail|321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(int code, ref NetworkManager.<>c__DisplayClass321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> );
    void <CoWebRequest>g__Fail|322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(int code, ref NetworkManager.<>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> );
    void <CoWebRequest>g__Fail|323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(int code, ref NetworkManager.<>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> );
    void <CoWebRequest>g__Fail|324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(int code, ref NetworkManager.<>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> );
    void <CoWebRequest>g__Fail|325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(int code, ref NetworkManager.<>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> );

    class <>c__DisplayClass6_0
    {
        /*0x10*/ System.Action callback;

        /*0x108925c*/ <>c__DisplayClass6_0();
        /*0x1089264*/ void <Send_GateZone>b__0(ServerProtocol.ResGateZone res);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ System.Action<bool, PTShare.Define.ErrorCode> _response;

        /*0x1089358*/ <>c__DisplayClass7_0();
        /*0x1089360*/ void <Send_GateInit>b__0(ServerProtocol.ResGateInit res);
    }

    class <>c__DisplayClass310_0
    {
        /*0x10*/ object _data;

        /*0x1089170*/ <>c__DisplayClass310_0();
        /*0x1089178*/ System.ValueTuple<string, string> <SetURL>b__0(System.Reflection.FieldInfo s);
    }

    class <>c
    {
        static /*0x0*/ NetworkManager.<> <>9;
        static /*0x8*/ System.Func<System.ValueTuple<string, string>, bool> <>9__310_1;
        static /*0x10*/ System.Func<System.ValueTuple<string, string>, string> <>9__310_2;
        static /*0x18*/ System.Action<bool> <>9__313_0;
        static /*0x20*/ System.Action<bool> <>9__326_0;
        static /*0x28*/ System.Action<bool> <>9__326_1;
        static /*0x30*/ System.Action<bool> <>9__326_2;
        static /*0x38*/ System.Action<bool> <>9__326_3;
        static /*0x40*/ System.Action<bool> <>9__326_4;

        static /*0x1088dcc*/ <>c();
        /*0x1088e2c*/ <>c();
        /*0x1088e34*/ bool <SetURL>b__310_1(System.ValueTuple<string, string> w);
        /*0x1088e58*/ string <SetURL>b__310_2(System.ValueTuple<string, string> s);
        /*0x1088ed0*/ void <CheckBalanceUpdated>b__313_0(bool _result);
        /*0x1088f2c*/ void <ToFiliterOutErrorCode>b__326_0(bool _result);
        /*0x1088f88*/ void <ToFiliterOutErrorCode>b__326_1(bool _result);
        /*0x1088fe4*/ void <ToFiliterOutErrorCode>b__326_2(bool _result);
        /*0x1089040*/ void <ToFiliterOutErrorCode>b__326_3(bool _);
        /*0x108909c*/ void <ToFiliterOutErrorCode>b__326_4(bool result);
    }

    class <>c__DisplayClass312_0
    {
        /*0x10*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        /*0x1089238*/ <>c__DisplayClass312_0();
        /*0x1089240*/ bool <CoWebRequest>b__0();
    }

    class <CoWebRequest>d__312 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ string _uri;
        /*0x28*/ NetworkManager <>4__this;
        /*0x30*/ bool _loading;
        /*0x38*/ System.Action<System.Byte[]> _callBack;
        /*0x40*/ UnityEngine.Networking.UnityWebRequest <req>5__2;

        /*0x10897f8*/ <CoWebRequest>d__312(int <>1__state);
        /*0x1089824*/ void System.IDisposable.Dispose();
        /*0x10898fc*/ bool MoveNext();
        /*0x1089840*/ void <>m__Finally1();
        /*0x1089c7c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1089c84*/ void System.Collections.IEnumerator.Reset();
        /*0x1089cc4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass314_0<T>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        <>c__DisplayClass314_0();
        bool <CoWebRequest_GateInit>b__0();
    }

    class <CoWebRequest_GateInit>d__314<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<T> _callback;
        /*0x0*/ UnityEngine.Networking.UnityWebRequest <req>5__2;

        <CoWebRequest_GateInit>d__314(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass315_0<T>
    {
        /*0x0*/ System.Action<int, string> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
    }

    class <>c__DisplayClass315_<T>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        <>c__DisplayClass315_();
        bool <CoWebRequest>b__1();
    }

    class <CoWebRequest>d__315<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ System.Action<int, string> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass315_0<T> <>8__1;
        /*0x0*/ System.Action<T> _callback;
        /*0x0*/ int <retryCount>5__2;
        /*0x0*/ UnityEngine.Networking.UnityWebRequest <req>5__3;

        <CoWebRequest>d__315(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass316_0<T>
    {
        /*0x0*/ object _data;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Func<System.Reflection.FieldInfo, bool> <>9__1;
        /*0x0*/ System.Func<System.Reflection.FieldInfo, string> <>9__3;

        <>c__DisplayClass316_0();
        bool <CoWebRequestPOST>b__1(System.Reflection.FieldInfo w);
        string <CoWebRequestPOST>b__3(System.Reflection.FieldInfo v);
        void <CoWebRequestPOST>g__Fail|0(int code);
    }

    class <>c__DisplayClass316_<T>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        <>c__DisplayClass316_();
        bool <CoWebRequestPOST>b__4();
    }

    class <>c__316<T>
    {
        static /*0x0*/ NetworkManager.<>c__316<T> <>9;
        static /*0x0*/ System.Func<System.Reflection.FieldInfo, string> <>9__316_2;

        static <>c__316();
        <>c__316();
        string <CoWebRequestPOST>b__316_2(System.Reflection.FieldInfo k);
    }

    class <CoWebRequestPOST>d__316<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ object _data;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ string _uri;
        /*0x0*/ NetworkManager.<>c__DisplayClass316_0<T> <>8__1;
        /*0x0*/ bool _loading;
        /*0x0*/ System.Action<T> _callback;
        /*0x0*/ int <retryCount>5__2;
        /*0x0*/ UnityEngine.Networking.UnityWebRequest <req>5__3;

        <CoWebRequestPOST>d__316(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass317_0<T0, T1, T2>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass317_1<T0, T1, T2>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass317_2<T0, T1, T2>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass317_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass317_0<T0, T1, T2> , ref NetworkManager.<>c__DisplayClass317_1<T0, T1, T2> );
    }

    class <CoWebRequest>d__317<T0, T1, T2> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass317_2<T0, T1, T2> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass317_1<T0, T1, T2> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass317_0<T0, T1, T2> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__317(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass318_0<T0, T1, T2, T3>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass318_1<T0, T1, T2, T3>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass318_2<T0, T1, T2, T3>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass318_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass318_0<T0, T1, T2, T3> , ref NetworkManager.<>c__DisplayClass318_1<T0, T1, T2, T3> );
    }

    class <CoWebRequest>d__318<T0, T1, T2, T3> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass318_2<T0, T1, T2, T3> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass318_1<T0, T1, T2, T3> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass318_0<T0, T1, T2, T3> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ int <retryCount>5__2;

        <CoWebRequest>d__318(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass319_0<T0, T1, T2, T3, T4>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass319_1<T0, T1, T2, T3, T4>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass319_2<T0, T1, T2, T3, T4>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass319_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass319_0<T0, T1, T2, T3, T4> , ref NetworkManager.<>c__DisplayClass319_1<T0, T1, T2, T3, T4> );
    }

    class <CoWebRequest>d__319<T0, T1, T2, T3, T4> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass319_2<T0, T1, T2, T3, T4> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass319_1<T0, T1, T2, T3, T4> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass319_0<T0, T1, T2, T3, T4> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ int <retryCount>5__2;

        <CoWebRequest>d__319(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass320_1<T0, T1, T2, T3, T4, T5, T6>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass320_2<T0, T1, T2, T3, T4, T5, T6>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass320_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6> , ref NetworkManager.<>c__DisplayClass320_1<T0, T1, T2, T3, T4, T5, T6> );
    }

    class <CoWebRequest>d__320<T0, T1, T2, T3, T4, T5, T6> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass320_2<T0, T1, T2, T3, T4, T5, T6> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass320_1<T0, T1, T2, T3, T4, T5, T6> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__320(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass321_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass321_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass321_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass321_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> , ref NetworkManager.<>c__DisplayClass321_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> );
    }

    class <CoWebRequest>d__32<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass321_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass321_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__32(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass322_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass322_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass322_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> , ref NetworkManager.<>c__DisplayClass322_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> );
    }

    class <CoWebRequest>d__322<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass322_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass322_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__322(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass323_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass323_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass323_();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> , ref NetworkManager.<>c__DisplayClass323_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> );
    }

    class <CoWebRequest>d__323<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass323_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass323_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__323(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass324_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass324_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass324_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> , ref NetworkManager.<>c__DisplayClass324_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> );
    }

    class <CoWebRequest>d__324<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass324_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass324_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__324(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass325_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass325_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass325_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> , ref NetworkManager.<>c__DisplayClass325_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> );
    }

    class <CoWebRequest>d__325<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass325_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass325_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__325(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class GameClient
{
    static int GameVersion = 2505;
}

enum ServerRegion
{
    None = 0,
    ASIA1 = 1,
    ASIA2 = 2,
    NORTHAMERICA = 3,
    EUROPE = 4,
    End = 5,
}

class GameServer
{
    static /*0x0*/ System.Collections.Generic.Dictionary<ServerRegion, string> regionDics;
    static /*0x8*/ string curSetBaseAddress;
    static /*0x10*/ string curLiveAddress;
    static /*0x18*/ System.DateTime <InspectionTime>k__BackingField;
    static /*0x20*/ string <UserIP>k__BackingField;
    static /*0x28*/ int <ProtocolVersion>k__BackingField;
    static /*0x2c*/ bool <UseCouponSystem>k__BackingField;
    static /*0x2d*/ bool <UseMoveRegion>k__BackingField;
    static /*0x30*/ ServerRegion <CurrentZone>k__BackingField;
    static /*0x38*/ System.ValueTuple<string, string, string, string, string> <URL>k__BackingField;
    static /*0x60*/ System.Collections.Generic.Dictionary<string, string> <CommunityURL>k__BackingField;

    static /*0xecfd88*/ GameServer();
    static /*0xecee74*/ string get_curBaseAddress();
    static /*0xecf064*/ void set_curBaseAddress(string value);
    static /*0xecf20c*/ string get_GuestID();
    static /*0xecf268*/ void set_GuestID(string value);
    static /*0xecf2cc*/ string GetRegionServerURL(ServerRegion region);
    static /*0xecf39c*/ string GetRegionServerURL(string region);
    static /*0xecf510*/ System.DateTime get_InspectionTime();
    static /*0xecf574*/ void set_InspectionTime(System.DateTime value);
    static /*0xecf5dc*/ string get_UserIP();
    static /*0xecf640*/ void set_UserIP(string value);
    static /*0xecf6a8*/ int get_ProtocolVersion();
    static /*0xecf70c*/ void set_ProtocolVersion(int value);
    static /*0xecf774*/ bool get_UseCouponSystem();
    static /*0xecf7d8*/ void set_UseCouponSystem(bool value);
    static /*0xecf844*/ bool get_UseMoveRegion();
    static /*0xecf8a8*/ void set_UseMoveRegion(bool value);
    static /*0xecf914*/ ServerRegion get_CurrentZone();
    static /*0xecf978*/ void set_CurrentZone(ServerRegion value);
    static /*0xecf9e0*/ string BattleVersion();
    static /*0xecfbac*/ System.ValueTuple<string, string, string, string, string> get_URL();
    static /*0xecfc24*/ void set_URL(System.ValueTuple<string, string, string, string, string> value);
    static /*0xecfcb4*/ System.Collections.Generic.Dictionary<string, string> get_CommunityURL();
    static /*0xecfd18*/ void set_CommunityURL(System.Collections.Generic.Dictionary<string, string> value);
    static /*0xecf470*/ ServerRegion <GetRegionServerURL>g__EnumParse|10_0(ref GameServer.<> );
    /*0xecfd80*/ GameServer();

    struct <>c__DisplayClass10_0
    {
        /*0x10*/ string region;
    }
}

class ArtifactBase
{
    /*0x10*/ int <ArtifactID>k__BackingField;
    /*0x14*/ int <ArtifactLV>k__BackingField;
    /*0x18*/ CharacterBase m_Owner;
    /*0x20*/ SkillFXTrigger m_SkillFXTrigger;
    /*0x78*/ TableData.TableData_Artifact m_tArtifactData;
    /*0x80*/ Battle.ColliderData m_SightCollider;
    /*0x8c*/ float m_fCooltime;
    /*0x90*/ float m_fCurCooltime;
    /*0x94*/ int m_nBuffID;
    /*0x98*/ int m_nStartBuffID;
    /*0x9c*/ bool m_bUpdateStart;

    /*0xeebc8c*/ ArtifactBase();
    /*0xeeb878*/ int get_ArtifactID();
    /*0xeeb880*/ void set_ArtifactID(int value);
    /*0xeeb888*/ int get_ArtifactLV();
    /*0xeeb890*/ void set_ArtifactLV(int value);
    /*0xeeb898*/ bool get_IsPlayer();
    /*0xeeb8ac*/ void Init(CharacterBase _owner, int _nArtifactID, int _nArtifactLV);
    /*0xeebb44*/ void InitChild();
    /*0xeebb48*/ void RemoveInit();
    /*0xeebb54*/ void RemoveInitChild();
    /*0xeebb58*/ void Update();
    /*0xeebc6c*/ void UpdateChild();
    /*0xeebc50*/ void StartArtifactWithCooltime();
    /*0xeebc70*/ void StartArtifactChildWithCooltime();
    /*0xeebc74*/ void SetUpdateStart(bool _bUpdateStart);
    /*0xeebc80*/ void StartSkillFX();
    /*0xeebb3c*/ void SetCooltime(float _fCooltime, float _fStartCooltime);
    /*0xeebbbc*/ bool CheckCooltime();
}

class Artifact_KasimCrown : ArtifactBase
{
    /*0xef0d30*/ Artifact_KasimCrown();
    /*0xef0858*/ void InitChild();
    /*0xef09a8*/ void HandleStartGame();
}

class Artifact_KasimEarring : ArtifactBase
{
    /*0xef0ffc*/ Artifact_KasimEarring();
    /*0xef0d38*/ void InitChild();
    /*0xef0e48*/ void RemoveInitChild();
    /*0xef0f08*/ void HandleCheckAttackCritical();
}

class Artifact_KasimGlass : ArtifactBase
{
    /*0x9d*/ bool m_bCollision;
    /*0x9e*/ bool m_bCheckFirst;

    /*0xef1300*/ Artifact_KasimGlass();
    /*0xef1004*/ void RemoveInitChild();
    /*0xef103c*/ void UpdateChild();
}

class Artifact_KasimHeart : ArtifactBase
{
    /*0xa0*/ float m_fAddMP;

    /*0xef18c0*/ Artifact_KasimHeart();
    /*0xef1308*/ void InitChild();
    /*0xef14f8*/ void RemoveInitChild();
    /*0xef161c*/ void HandleUpdateSecondCooltime();
    /*0xef1640*/ void HandleOwnerDeath();
}

class Artifact_KasimNecklace : ArtifactBase
{
    /*0xa0*/ float m_fPostHP;

    /*0xef1e18*/ Artifact_KasimNecklace();
    /*0xef18c8*/ void InitChild();
    /*0xef1aa8*/ void RemoveInitChild();
    /*0xef1be0*/ void HandleCheckSHP_Pre(float _fHealAmount);
    /*0xef1c00*/ void HandleCheckSHP_Post(float _fHealAmount);
}

class Artifact_KasimShield : ArtifactBase
{
    /*0xa0*/ int m_nBuffID_Def;
    /*0xa4*/ int m_nBuffID_Provoke;
    /*0xa8*/ int m_nCurrentBuffCount;

    /*0xef2474*/ Artifact_KasimShield();
    /*0xef1e20*/ void InitChild();
    /*0xef1e64*/ void RemoveInitChild();
    /*0xef1e9c*/ void UpdateChild();
    /*0xef21bc*/ void StartArtifactChildWithCooltime();
}

class Artifact_KasimWing : ArtifactBase
{
    /*0xa0*/ float m_fHealPercentage;
    /*0xa4*/ bool m_bHitCritical;

    /*0xf76f94*/ Artifact_KasimWing();
    /*0xf76ab8*/ void InitChild();
    /*0xf76cd4*/ void RemoveInitChild();
    /*0xf76e34*/ void HandleCheckHitCritical(bool _bCritical);
    /*0xf76e40*/ void HandleCheckHitDamage(CharacterBase _attacker, float _fDamage);
}

class CharacterSkill_ALCHEMY_02 : CharacterSkill_Active
{
    /*0x13208e4*/ CharacterSkill_ALCHEMY_02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132090c*/ void FlipToTarget();
}

class CharacterSkill_Active : CharacterState
{
    /*0x54*/ int <SkillLV>k__BackingField;
    /*0x58*/ Battle.ColliderData SightCollider_Origin;
    /*0x64*/ Battle.ColliderData SightCollider_Darkness;
    /*0x70*/ Battle.ColliderData FindCollider_Origin;
    /*0x7c*/ Battle.ColliderData FindCollider_Darkness;
    /*0x88*/ System.Collections.Generic.List<CharacterBase> m_lisTarget;
    /*0x90*/ CharacterBase m_CurTarget;
    /*0x98*/ SkillFXTrigger m_SkillFXTrigger;
    /*0xf0*/ TableData.TableData_Skillbase m_tSkillBase;
    /*0xf8*/ Battle.TargetType1 m_eTargetType1;
    /*0xfc*/ Battle.TargetType2 m_eTargetType2;
    /*0x100*/ Battle.TargetType3 m_eTargetType3;
    /*0x104*/ Battle.SkillType m_eSkillType;
    /*0x108*/ Battle.ActiveType m_eActiveType;
    /*0x10c*/ Battle.AttackType m_eAttackType;
    /*0x110*/ float m_fCurCD;
    /*0x114*/ bool m_bCheckCooltime;
    /*0x115*/ bool m_bFindTargetWithSightCollider;

    /*0x13208f8*/ CharacterSkill_Active(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1320a08*/ int get_SkillLV();
    /*0x1320a10*/ void set_SkillLV(int value);
    /*0x1320a18*/ int get_SkillSlot();
    /*0x1320a34*/ bool get_IsSpecialSkill();
    /*0x1320a44*/ Battle.ColliderData get_SightCollider();
    /*0x1320a84*/ Battle.ColliderData get_FindCollider();
    /*0x1320ac4*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1321054*/ bool CheckSkillEnable();
    /*0x13212cc*/ bool InitStateChild();
    /*0x13219d0*/ bool InitSkill();
    /*0x13219d8*/ void RemoveStateChild();
    /*0x1321a3c*/ void RemoveSkill();
    /*0x1321a40*/ void StartStateChild();
    /*0x1321c08*/ void StartSkill();
    /*0x1321ff4*/ void ExitStateChild();
    /*0x132212c*/ void ExitSkill();
    /*0x13218b0*/ void RegistCheckCooltime(bool _boolean);
    /*0x1322130*/ void HandleCheckCooltime();
    /*0x13221f4*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x1321f78*/ void StartSkillSettings(bool _isSpecialSkill, ANIMATION_CLIP _animation_Clip, bool _isAnimLoop, bool _isHitAnimRotateInit, Spine.AnimationState.TrackEntryDelegate _delAddComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delAddEvents);
    /*0x13222a0*/ bool InvokeAnimEvent(AnimEvent _animEvent);
    /*0x13222e4*/ void FlipToTarget();
    /*0x1320d1c*/ bool SetTarget(bool _bSetCurTarget);
    /*0x1322388*/ CharacterBase FindTarget(Battle.ColliderData _rangeCollider);
    /*0x1321148*/ void SetMovePOS();
    /*0x1321be4*/ void SetFirstPOS();
    /*0x13223d4*/ void StartFX(int _nSkillFXID);
    /*0x13223e0*/ void SetCooltime(float _fCooltime);
    /*0x1322414*/ void SetGlobalCD(float _fGlobalCooltime);
    /*0x1322430*/ void AddCooltime(float _fAddCootime);
    /*0x1322448*/ void SetCheckCooltime(bool _bCheckCooltime);
    /*0x1322454*/ void SetFindTargetWithSightCollider(bool _bFindWithSightCollider);
}

class CharacterSkill_Akimbo : CharacterSkill_Active
{
    /*0x118*/ float m_SIG_MultGlobalCD;

    /*0x1322460*/ CharacterSkill_Akimbo(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322474*/ bool InitStateChild();
    /*0x13224dc*/ void SetGlobalCD(float _fGlobalCooltime);
}

class CharacterSkill_Breeze_01 : CharacterSkill_Active
{
    /*0x118*/ int m_nAddBuffID;
    /*0x11c*/ int m_nAddBuffConditionLevel;
    /*0x120*/ bool m_bAnimCompleteExit;

    /*0x1322508*/ CharacterSkill_Breeze_01(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132251c*/ bool InitSkill();
    /*0x1322584*/ void StartSkill();
    /*0x13226bc*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x132273c*/ void ExitSkill();
    /*0x13229f4*/ void HandleCheckRecieveDamage(CharacterBase _, float _fDamage);
}

class CharacterSkill_ICE_03 : CharacterSkill_Active
{
    static float m_fNeedHPRatio = 0.699999988079071;
    static float m_fUseHPRatio = -0.20000000298023224;

    /*0x1322a1c*/ CharacterSkill_ICE_03(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322a30*/ bool CheckSkillEnable();
    /*0x1322a84*/ void StartSkill();
}

class CharacterSkill_Lamplight_02 : CharacterSkill_Active
{
    /*0x1322ad4*/ CharacterSkill_Lamplight_02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322ae8*/ void StartStateChild();
}

class CharacterSkill_QUEEN_ATK_SP02 : CharacterSkill_Active
{
    /*0x118*/ int m_nContitionLV;
    /*0x11c*/ int m_nAttackCount;
    /*0x120*/ int m_nAddBuffID;
    /*0x124*/ int m_nCurSkillLV;

    /*0x1322b08*/ CharacterSkill_QUEEN_ATK_SP02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322b1c*/ bool InitSkill();
    /*0x1322c2c*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1322c68*/ void AnimComplete(Spine.TrackEntry entry);
}

class CharacterSkill_Rabbit : CharacterSkill_Active
{
    /*0x118*/ int m_nAddMP;
    /*0x11c*/ int m_nPassiveSkillLV;

    /*0x1322e74*/ CharacterSkill_Rabbit(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322e88*/ bool InitSkill();
    /*0x1322f94*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x13233b0*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x13233b8*/ void ExitSkill();
    /*0x1323298*/ void NoneComboExitInit();
    /*0x13231d8*/ bool CheckComboEnable();
    /*0x13234ac*/ void HandleCheckKills(CharacterBase _killUnit);
}

class CharacterSkill_Sabre_01 : CharacterSkill_Active
{
    /*0x132351c*/ CharacterSkill_Sabre_01(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1323530*/ void StartSkill();
}

class CharacterSkill_Sabre_02 : CharacterSkill_Active
{
    /*0x116*/ bool m_bKill;

    /*0x132357c*/ CharacterSkill_Sabre_02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1323590*/ void StartSkill();
    /*0x13236c8*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x13237cc*/ void ExitSkill();
    /*0x13238a0*/ void HandleCheckKills(CharacterBase _killTarget);
}

class CharacterSkill_Swordcat : CharacterSkill_Active
{
    /*0x116*/ bool m_bHit;
    /*0x118*/ int m_nPassiveSkillLV;
    /*0x11c*/ int m_nAddMP;
    /*0x120*/ int m_nBuffID;
    /*0x124*/ float m_fCounterPercentage;

    /*0x13238ac*/ CharacterSkill_Swordcat(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13238c0*/ bool InitSkill();
    /*0x1323a28*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1323a60*/ void StartSkill();
    /*0x1323c80*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x1323fd4*/ void HandleCheckHit(CharacterBase _attacker, float _f);
    /*0x132413c*/ void HandleCheckAvoid(CharacterBase _attacker);
    /*0x1323fdc*/ void Revenge(CharacterBase _attacker, bool _bAvoid);
}

class CharacterBase : ObjectBase
{
    /*0x39*/ bool IsWorldBoss;
    /*0x3a*/ bool IsGuildBoss;
    /*0x3b*/ bool IsSummonerEnableULT;
    /*0x3c*/ int <UnitID>k__BackingField;
    /*0x40*/ Battle.UnitNameID <UnitID_Enum>k__BackingField;
    /*0x48*/ string <UnitID_StringNumber>k__BackingField;
    /*0x50*/ int <SkinID>k__BackingField;
    /*0x58*/ string <SkinID_StringNumber>k__BackingField;
    /*0x60*/ bool <UseSkin>k__BackingField;
    /*0x68*/ string <SkinName>k__BackingField;
    /*0x70*/ int <FactionID>k__BackingField;
    /*0x74*/ int <PositionNumber>k__BackingField;
    /*0x78*/ TableData.TableData_Unitbase <UnitBase>k__BackingField;
    /*0x80*/ TableData.TableData_Unitbase <SkinUnitBase>k__BackingField;
    /*0x88*/ int <UnitLV>k__BackingField;
    /*0x8c*/ int <UnitGrade>k__BackingField;
    /*0x90*/ int <UnitTier>k__BackingField;
    /*0x94*/ float <UnitSize>k__BackingField;
    /*0x98*/ UnitClassType <UnitClass>k__BackingField;
    /*0x9c*/ Battle.AttackType <UnitAttackType>k__BackingField;
    /*0xa0*/ Battle.CharacterFlag m_eFlag;
    /*0xa4*/ bool m_bStartInitialized;
    /*0xa8*/ CharacterBase m_PrevTarget;
    /*0xb0*/ CharacterBase m_CurTarget;
    /*0xb8*/ CharacterBase m_MoveTarget;
    /*0xc0*/ System.Collections.Generic.List<CharacterBase> m_lisCurCollision;
    /*0xc8*/ UnityEngine.Vector2 m_vCurCollisionCenterPOS;
    /*0xd0*/ System.Collections.Generic.List<int> m_lisAblities;
    /*0xd8*/ ObjectBase ObjectBase;
    /*0xe0*/ Spine.Unity.SkeletonAnimation Anim;
    /*0xe8*/ UnityEngine.MeshRenderer m_MeshRenderer;
    /*0xf0*/ ANIMATION_CLIP <CurAnimID>k__BackingField;
    /*0xf8*/ ActorAnimSyncData m_CurAnimSyncData;
    /*0x100*/ System.Collections.Generic.List<AnimEvent> m_lisCurEvent;
    /*0x108*/ System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> m_dicAnimEventList;
    /*0x110*/ float m_fAnimElapseTime;
    /*0x118*/ UnityEngine.MaterialPropertyBlock m_MaterialBlock;
    /*0x120*/ Spine.Bone m_FireBone;
    /*0x128*/ Spine.Bone m_HeadBone;
    /*0x130*/ Spine.Bone m_BodyBone_01;
    /*0x138*/ Spine.Bone m_BodyBone_02;
    /*0x140*/ Spine.Slot m_EyeInSlot;
    /*0x148*/ Spine.Slot m_EyeOutSlot;
    /*0x150*/ Spine.Slot m_MouthSlot;
    /*0x158*/ Spine.Attachment m_EyeInAttach;
    /*0x160*/ Spine.Attachment m_EyeInAttach_Origin;
    /*0x168*/ Spine.Attachment m_EyeOutAttach;
    /*0x170*/ Spine.Attachment m_EyeOutAttach_Origin;
    /*0x178*/ Spine.Attachment m_MouthAttach;
    /*0x180*/ Spine.Attachment m_MouthAttach_Origin;
    /*0x188*/ bool m_bSkipMouseChange;
    /*0x18c*/ float m_fHitAnimRotaionDegrees;
    /*0x190*/ float m_fHitAnimRotationDegreesTarget;
    /*0x194*/ float m_fCurHitAnimRotationDgrees;
    /*0x198*/ bool m_bIncHitAnimRotationDgrees;
    /*0x1a0*/ AnimEvent m_recentInvokeAnimEvent;
    /*0x1a8*/ System.Collections.Generic.List<ArtifactBase> m_lisArtifact;
    /*0x1b0*/ UnityEngine.RectTransform m_UnitBuffSpace;
    /*0x1b8*/ float NoLessHP;
    /*0x1bc*/ float MultHitDamage;
    /*0x1c0*/ float MultHitDamage_Physical;
    /*0x1c4*/ float MultHitDamage_Magical;
    /*0x1c8*/ float MultMPPAY;
    /*0x1cc*/ float MultRestoreHP;
    /*0x1d0*/ float MultRestoreMP;
    /*0x1d4*/ float MultHP_InitData;
    /*0x1d8*/ float MultDamage_InitData;
    /*0x1dc*/ float MultMPR;
    /*0x1e0*/ float MultCooltime;
    /*0x1e4*/ float MultDamageCC;
    /*0x1e8*/ float MultDamageBoss;
    /*0x1ec*/ float MultFactionHitPenalty;
    /*0x1f0*/ float MultBuffTime;
    /*0x1f4*/ float MultDamageCritical_Buff;
    /*0x1f8*/ bool <IsImmuneKnockback>k__BackingField;
    /*0x1f9*/ bool <IsDarkness>k__BackingField;
    /*0x1fa*/ bool IsAvoidMagical;
    /*0x1fc*/ float IgnoreDamagePerMaxHP;
    /*0x200*/ System.Collections.Generic.List<Buff_Base> m_lisBuff;
    /*0x208*/ System.Collections.Generic.List<Buff_Container> m_lisBuffContainer;
    /*0x210*/ System.Collections.Generic.List<BuffIcon> m_lisBuffIcon;
    /*0x218*/ System.Collections.Generic.List<int> m_lisCommonCooltimeKeyValue;
    /*0x220*/ System.Collections.Generic.Dictionary<int, int> m_dicBuffStack;
    /*0x228*/ System.Collections.Generic.Dictionary<int, int> m_dicBuffChange;
    /*0x230*/ System.Collections.Generic.Dictionary<int, BuffIcon> m_dicBuffIcon;
    /*0x238*/ System.Collections.Generic.Dictionary<int, float> m_dicCommonCooltime;
    /*0x240*/ bool m_bCheckNextBuffWithUdpate;
    /*0x248*/ System.Action OnStart;
    /*0x250*/ System.Action OnAlways;
    /*0x258*/ System.Action OnAlways_NoAffectGame;
    /*0x260*/ System.Action OnCheckCooltimePerSecond;
    /*0x268*/ System.Action OnSkillPause;
    /*0x270*/ System.Action OnDeath;
    /*0x278*/ System.Action OnChangeHP;
    /*0x280*/ System.Action OnSkillStart;
    /*0x288*/ System.Action OnCritical;
    /*0x290*/ System.Action OnStateExit;
    /*0x298*/ System.Action OnStartCCBuff;
    /*0x2a0*/ System.Action OnMaxHP;
    /*0x2a8*/ System.Action OnLessMaxHP;
    /*0x2b0*/ System.Action<int> OnAddBuff;
    /*0x2b8*/ System.Action<int> OnRemoveBuff;
    /*0x2c0*/ System.Action<int> OnSlotSkillStart;
    /*0x2c8*/ System.Action<CharacterBase> OnChangeHPWithCaster;
    /*0x2d0*/ System.Action<CharacterBase> OnAvoidWithAttacker;
    /*0x2d8*/ System.Action<CharacterBase> OnAttack_PreCalc;
    /*0x2e0*/ System.Action<CharacterBase> OnKills;
    /*0x2e8*/ System.Action<float> OnSHP_Pre;
    /*0x2f0*/ System.Action<float> OnSHP_Post;
    /*0x2f8*/ System.Action OnAttack;
    /*0x300*/ System.Action<int, bool> OnAttack_SkillSlot_Critical_PostCalc;
    /*0x308*/ System.Action<CharacterBase, int, bool> OnAttack_Target_FXID_Critical;
    /*0x310*/ System.Action<CharacterBase, int, float> OnAttack_Target_FXID_Damage;
    /*0x318*/ System.Action<int> OnStartSkillFX_FXID;
    /*0x320*/ System.Action OnSetAttackCollisionList;
    /*0x328*/ System.Action OnMiss;
    /*0x330*/ System.Action<CharacterBase> OnActivateGamblerCardEffect;
    /*0x338*/ System.Action<int, bool> OnRemoveBuffWithIDAndForceRemove;
    /*0x340*/ System.Action<int, bool> OnRemoveBuffWithBuffEffectTypeAndForceRemove;
    /*0x348*/ System.Action<Battle.AttackType> OnHitWithAttackType_PostCalc;
    /*0x350*/ System.Action<bool> OnHitWithCritical;
    /*0x358*/ System.Action<Battle.AttackType> OnHitWithAttackType_PreCalc;
    /*0x360*/ System.Action<CharacterBase, float> OnHitWithAttackerDamage_PreCalc;
    /*0x368*/ System.Action<CharacterBase, float> OnHitWithAttackerDamage_PostCalc;
    /*0x370*/ System.Action<CharacterBase> OnFall;
    /*0x378*/ System.Action<float> OnChangeHPWithAmount;
    /*0x380*/ UnityEngine.Vector2 <CenterToRootDistance>k__BackingField;
    /*0x388*/ System.Nullable<UnityEngine.Vector2> <MovePOS>k__BackingField;
    /*0x394*/ UnityEngine.Vector2 <MoveDIR>k__BackingField;
    /*0x3a0*/ CharacterBase <KilledAttacker>k__BackingField;
    /*0x3a8*/ UnityEngine.Transform TransformAnim;
    /*0x3b0*/ UnityEngine.Transform m_CenterTrans;
    /*0x3b8*/ System.Collections.Generic.List<UnityEngine.Transform> BossHitPositions;
    /*0x3c0*/ CharacterBase m_Owner;
    /*0x3c8*/ System.Collections.Generic.Dictionary<long, bool> m_DicRefNum;
    /*0x3d0*/ UnityEngine.Vector2 m_vecCenterPosition;
    /*0x3d8*/ UnityEngine.Vector3 m_vFirstTargetPosition;
    /*0x3e8*/ System.Collections.Generic.Dictionary<Battle.UnitShaderType, ShaderChanger> m_dicShaderChanger;
    /*0x3f0*/ Battle.UnitShaderType m_CurShaderType;
    /*0x3f8*/ ShaderChanger m_CurShaderChanger;
    /*0x400*/ float m_fStartShaderFloatProperty;
    /*0x404*/ float m_fCurShaderFloatPropertyDuration;
    /*0x408*/ float m_fEndShaderFloatProperty;
    /*0x40c*/ float m_fShaderFloatPropertyDuration;
    /*0x410*/ bool m_bHit;
    /*0x414*/ float m_fCurHitEffectTime;
    /*0x418*/ float m_fCurBossHitColorTime;
    /*0x41c*/ float m_fCurHPSPDeltaTime;
    /*0x420*/ float m_fCurDOTDeltaTime;
    /*0x424*/ Battle.DamageResult m_NoDamage;
    /*0x42c*/ Battle.DamageResult m_Avoid;
    /*0x434*/ UnityEngine.Vector2 m_vecKnockBackMoveAmount;
    /*0x43c*/ float m_fCurKnockBackTime;
    /*0x440*/ bool m_bCheckKnockBack;
    /*0x441*/ bool m_bTweenColorStart;
    /*0x442*/ bool m_bTweenColorInc;
    /*0x444*/ float m_fTweenColorRatio;
    /*0x448*/ UnityEngine.Color m_TweenColorCurrent;
    /*0x458*/ UnityEngine.Color m_TweenColorTarget;
    /*0x468*/ bool m_bNoStatusBarWhenFully;
    /*0x469*/ bool m_bMaxHP;
    /*0x470*/ UnityEngine.UI.Text m_DialogueText;
    /*0x478*/ DG.Tweening.Sequence m_DialogueSequence;
    /*0x480*/ bool m_bEyeMouthChanged;
    /*0x484*/ UnityEngine.Color m_currentColor;
    /*0x494*/ UnityEngine.Color m_currentColorTint;
    /*0x4a4*/ bool m_bPlaySound;
    /*0x4a8*/ System.Collections.Generic.List<Passive_Base> m_lisPassive;
    /*0x4b0*/ System.Collections.Generic.Dictionary<int, Passive_Base> m_dicPassive;
    /*0x4b8*/ System.Collections.Generic.Dictionary<int, int> m_dicFXChanger;
    /*0x4c0*/ bool <IsPassiveEnable>k__BackingField;
    /*0x4c1*/ bool <Rabbit_bComboStart>k__BackingField;
    /*0x4c4*/ int <Rabbit_nComboCount>k__BackingField;
    /*0x4c8*/ bool <Swordcat_bCounter>k__BackingField;
    /*0x4c9*/ bool <Queen_bDebuffSuccess>k__BackingField;
    /*0x4ca*/ bool <Queen_bComboStart>k__BackingField;
    /*0x4cc*/ int <Queen_nComboCount>k__BackingField;
    /*0x4d0*/ bool <Akimbo_bMagazineOn>k__BackingField;
    /*0x4d8*/ System.Collections.Generic.List<CharacterBase> <Akimbo_ULT_TargetList>k__BackingField;
    /*0x4e0*/ float <Sugar_fMultHPMP>k__BackingField;
    /*0x4e4*/ bool <Deathscythe_bUseSP01>k__BackingField;
    /*0x4e8*/ CharacterBase <Sabre_ULT_Target>k__BackingField;
    /*0x4f0*/ CharacterBase <Sabre_SP03_Target>k__BackingField;
    /*0x4f8*/ int <Sabre_ULT_ProjectileCount>k__BackingField;
    /*0x4fc*/ bool <Sabre_ULT_KillEnemy>k__BackingField;
    /*0x500*/ ParticleBase <Breeze_ULT_Particle>k__BackingField;
    /*0x508*/ ParticleBase <Cleric_SP01_Particle>k__BackingField;
    /*0x510*/ float <Lamplight_ULT_MultDmage>k__BackingField;
    /*0x514*/ bool <Lamplight_SP01_FX2_START>k__BackingField;
    /*0x518*/ System.Action<CharacterBase> <Baba_SIG_OnCC_WithCaster>k__BackingField;
    /*0x520*/ int <TargetType3_nNextTargetCount>k__BackingField;
    /*0x524*/ float <TMP_ReflectionDamage>k__BackingField;
    /*0x528*/ float <TMP_MultHitDamage>k__BackingField;
    /*0x52c*/ float <TMP_AddCriticalBeforeCalcDamage>k__BackingField;
    /*0x530*/ float <TMP_SHP>k__BackingField;
    /*0x534*/ float <TMP_AddDamage_Physical>k__BackingField;
    /*0x538*/ float <TMP_AddDamage_Magical>k__BackingField;
    /*0x53c*/ float <Blood_fMultDamage>k__BackingField;
    /*0x540*/ CharacterBase <Target_Passive>k__BackingField;
    /*0x548*/ System.Collections.Generic.List<Battle.CharacterStat> <StatList>k__BackingField;
    /*0x550*/ Battle.CharacterStat OriginStat;
    /*0x558*/ Battle.CharacterStat <DefaultStat>k__BackingField;
    /*0x560*/ System.Collections.Generic.List<Battle.CharacterStat> <EquipStat>k__BackingField;
    /*0x568*/ Battle.CharacterStat <BonusStat>k__BackingField;
    /*0x570*/ System.Collections.Generic.List<PTShare.Define.SEquip> <EquipList>k__BackingField;
    /*0x578*/ float <DefaultMoveSpeed>k__BackingField;
    /*0x57c*/ Battle.ColliderData <HitCollider>k__BackingField;
    /*0x588*/ Battle.AttackType <AttackType>k__BackingField;
    /*0x590*/ long <TotalPower>k__BackingField;
    /*0x598*/ float <CurHP>k__BackingField;
    /*0x59c*/ float <MaxShield>k__BackingField;
    /*0x5a0*/ float <CurShield>k__BackingField;
    /*0x5a4*/ float <CurMP>k__BackingField;
    /*0x5a8*/ float <CurGlobalCD>k__BackingField;
    /*0x5ac*/ int <SignatureLV>k__BackingField;
    /*0x5b0*/ bool <SignatureEnable>k__BackingField;
    /*0x5b8*/ PTShare.Define.SStatBonus CurStatBonus;
    /*0x5c0*/ System.Collections.Generic.List<CharacterState> m_lisState;
    /*0x5c8*/ System.Collections.Generic.Dictionary<Battle.StateAndSkillID, CharacterState> m_dicState;
    /*0x5d0*/ Battle.StateAndSkillID PrevStateEnum;
    /*0x5d4*/ Battle.StateAndSkillID CurStateEnum;
    /*0x5d8*/ Battle.StateAndSkillID NextStateEnum;
    /*0x5dc*/ Battle.StateAndSkillID MoveStateEnum;
    /*0x5e0*/ CharacterState <CurState>k__BackingField;
    /*0x5e8*/ CharacterState <PrevState>k__BackingField;
    /*0x5f0*/ CharacterState <NextState>k__BackingField;
    /*0x5f8*/ CharacterState m_TmpState;
    /*0x600*/ CharacterState m_TouchSkill;
    /*0x608*/ Battle.StateAndSkillID m_TouchSkillID;
    /*0x60c*/ bool IsStateChangeWhenChangeNextState;
    /*0x60d*/ bool IsGuildBattleSupportUnit;
    /*0x610*/ UnityEngine.Transform m_WorldUICanvas;
    /*0x618*/ UnityEngine.Transform m_DamageMarkerTrans;
    /*0x620*/ UnitStatusBar m_StatusWorldUI;
    /*0x628*/ UnityEngine.GameObject m_goMyUnitMarker;
    /*0x630*/ int m_nCurKillCount_GuildBattle;
    /*0x634*/ float m_fCurKillCountCooltime_GuildBattle;
    /*0x638*/ UnityEngine.GameObject m_DialogueParent;
    /*0x640*/ UnityEngine.UI.Image m_DialogueBackground;
    /*0x648*/ LocalizeString m_DialogueLocalize;
    /*0x650*/ bool m_bCheckDialogueDuration;
    /*0x654*/ float m_fCurrentDialogueDuration;

    static /*0xd765d4*/ ArtifactBase <AddArtifact>g__GetArtifactClass|140_0(ref CharacterBase.<> );
    /*0xd86ecc*/ CharacterBase();
    /*0xd71e70*/ bool get_IsPlayer();
    /*0xd71e84*/ bool get_IsDeath();
    /*0xd71e98*/ bool get_IsBoss();
    /*0xd71eb8*/ bool get_IsSummoner();
    /*0xd71ecc*/ int get_UnitID();
    /*0xd71ed4*/ void set_UnitID(int value);
    /*0xd71edc*/ Battle.UnitNameID get_UnitID_Enum();
    /*0xd71ee4*/ void set_UnitID_Enum(Battle.UnitNameID value);
    /*0xd71eec*/ string get_UnitID_StringNumber();
    /*0xd71ef4*/ void set_UnitID_StringNumber(string value);
    /*0xd71efc*/ int get_SkinID();
    /*0xd71f04*/ void set_SkinID(int value);
    /*0xd71f0c*/ string get_SkinID_StringNumber();
    /*0xd71f14*/ void set_SkinID_StringNumber(string value);
    /*0xd71f1c*/ bool get_UseSkin();
    /*0xd71f24*/ void set_UseSkin(bool value);
    /*0xd71f30*/ string get_SkinName();
    /*0xd71f38*/ void set_SkinName(string value);
    /*0xd71f40*/ int get_FactionID();
    /*0xd71f48*/ void set_FactionID(int value);
    /*0xd71f50*/ int get_PositionNumber();
    /*0xd71f58*/ void set_PositionNumber(int value);
    /*0xd71f60*/ TableData.TableData_Unitbase get_UnitBase();
    /*0xd71f68*/ void set_UnitBase(TableData.TableData_Unitbase value);
    /*0xd71f70*/ TableData.TableData_Unitbase get_SkinUnitBase();
    /*0xd71f78*/ void set_SkinUnitBase(TableData.TableData_Unitbase value);
    /*0xd71f80*/ int get_UnitLV();
    /*0xd71f88*/ void set_UnitLV(int value);
    /*0xd71f90*/ int get_UnitGrade();
    /*0xd71f98*/ void set_UnitGrade(int value);
    /*0xd71fa0*/ int get_UnitTier();
    /*0xd71fa8*/ void set_UnitTier(int value);
    /*0xd71fb0*/ float get_UnitSize();
    /*0xd71fb8*/ void set_UnitSize(float value);
    /*0xd71fc0*/ UnitClassType get_UnitClass();
    /*0xd71fc8*/ void set_UnitClass(UnitClassType value);
    /*0xd71fd0*/ Battle.AttackType get_UnitAttackType();
    /*0xd71fd8*/ void set_UnitAttackType(Battle.AttackType value);
    /*0xd71fe0*/ void StartInit();
    /*0xd7211c*/ bool Init(int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, bool _bIdle, bool _bSyncTool, bool _bDemo, string[] _params);
    /*0xd74028*/ void SetPositionIndex(int _nPositionIndex);
    /*0xd74078*/ void RemoveInit();
    /*0xd74620*/ void UpdateObject();
    /*0xd74e48*/ void Update_PauseOnly();
    /*0xd746d4*/ bool CheckUpdateAnimationOnly();
    /*0xd74cf8*/ void UpdateCooltimePerSecond();
    /*0xd74f38*/ void SetAbilityList(System.Collections.Generic.List<int> _abilityList);
    /*0xd7548c*/ ANIMATION_CLIP get_CurAnimID();
    /*0xd75494*/ void set_CurAnimID(ANIMATION_CLIP value);
    /*0xd7549c*/ Spine.SkeletonData get_GetSkelectonData();
    /*0xd725c8*/ void InitAnimation();
    /*0xd755c4*/ void LoadSyncData(TableData.TableData_Unitbase _unitBase);
    /*0xd75664*/ System.Collections.Generic.List<AnimEvent> GetAnimEventList(ANIMATION_CLIP _animID);
    /*0xd74838*/ void UpdateAnimation();
    /*0xd757c4*/ void InvokeAnimEvent(AnimEvent _animEvent);
    /*0xd764b0*/ void InvokeRecentAnimEvent();
    /*0xd764c0*/ void UpdateAnimationOnly();
    /*0xd754c8*/ void SetAnimation(ANIMATION_CLIP _animID, bool _bLoop, bool _bForceChange);
    /*0xd73d40*/ void InitArtifact();
    /*0xd7435c*/ void RemoveInitArtifact();
    /*0xd76538*/ void AddArtifact(int _nArtifactID, int _nArtifactLV);
    /*0xd74c4c*/ void UpdateArtifact();
    /*0xd76768*/ float get_MultDamageCritical();
    /*0xd76798*/ bool get_IsImmuneKnockback();
    /*0xd767a0*/ void set_IsImmuneKnockback(bool value);
    /*0xd767ac*/ bool get_IsDarkness();
    /*0xd767b4*/ void set_IsDarkness(bool value);
    /*0xd73bdc*/ void InitBuff();
    /*0xd74330*/ void RemoveInitBuff();
    /*0xd74b88*/ void UpdateBuff();
    /*0xd76fc0*/ void AddBuff(int _nBuffID, CharacterBase _caster, int _nSkillID, float[] _arrParams);
    /*0xd76fc8*/ void AddBuff(int _nBuffID, CharacterBase _caster, int _nSkillID, float _fMPPay, float[] _arrParams);
    /*0xd77c50*/ void AddBuff(Battle.BuffID _eBuffID, CharacterBase _caster, int _nSkillID);
    /*0xd77d48*/ void AddBuffIcon(int _nBuffID, string _sIconName);
    /*0xd77568*/ Buff_Base RegistBuff(int _nBuffID, Battle.BuffEffectType _eBuffType, bool _bIgnoreNoneType);
    /*0xd79600*/ void DeleteBuffContainer(Buff_Container _buffContainer);
    /*0xd79684*/ void RemoveBuff(Buff_Base _buff, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79c28*/ void DeleteBuff(Buff_Base _buff, bool _bUpdateRemove);
    /*0xd79cb4*/ void RemoveBuff(int _nBuffID, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79df0*/ void RemoveBuff(Battle.BuffID _eBuffID, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79e0c*/ void RemoveBuffWithBuffEffectType(Battle.BuffEffectType _eBuffEffectType, bool _bForceRemove);
    /*0xd79e68*/ void RemoveBuff_Once(int _nBuffID, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79ec8*/ bool RemoveBuff_One();
    /*0xd7a010*/ void RemoveDebuff_One();
    /*0xd7a150*/ void RemoveBuffMostTime(bool _bBuffOnly, bool _bRemoveSameID);
    /*0xd7a364*/ void RemoveBuffAllWithBuffFlag(Battle.BuffFlag _eBuffFlag);
    /*0xd7a49c*/ void RemoveBuffShield();
    /*0xd767c0*/ void RemoveBuffAll(bool _bForceRemove, bool _bDeathRemove);
    /*0xd7a5d8*/ void RemoveBuffAll();
    /*0xd7a6ec*/ void RemoveDebuffAll();
    /*0xd7a800*/ void RemoveBuffAll_CC();
    /*0xd7a924*/ void RemoveBuff_OneCC(int _nExceptBuffID);
    /*0xd7aad0*/ bool CheckBuffExist(int _nBuffID);
    /*0xd7aaf8*/ bool CheckBuffExist(Battle.BuffID _eBuffIDEnum);
    /*0xd7ab08*/ bool CheckBuffExist(Battle.BuffEffectType _eBuffEffectType);
    /*0xd7ab30*/ bool CheckBuffExist(Battle.BuffFlag _eBuffFlag);
    /*0xd77678*/ CharacterBase.AddBuffCheckStackState CheckBuffStack(int _nBuffID);
    /*0xd7ab58*/ int GetBuffCount(bool _bRemoveEnableOnly, bool _bNoDebuff);
    /*0xd7ac60*/ int GetBuffCount_CC(bool _bRemoveEnableOnly);
    /*0xd7ad50*/ System.ValueTuple<int, int> GetBuffCount_Debuff_CC(bool _bRemoveEnableOnly);
    /*0xd7aeb8*/ int GetBuffCount(int _nBuffID);
    /*0xd7af34*/ int GetBuffCount(Battle.BuffEffectType _eBuffEffectType);
    /*0xd7b000*/ Buff_Base FindBuffWithBuffEffectType(Battle.BuffEffectType _eEffectType);
    /*0xd7b0e0*/ bool IsDefenseDownDebuff();
    /*0xd7b208*/ Buff_Base FindBuffWithBuffFlag(Battle.BuffFlag _eBuffFlag);
    /*0xd7b2ec*/ Buff_Base FindBuffWithBuffID(int _nBuffID);
    /*0xd7a974*/ int FindRemoveEnableCCBuffID(int _nExceptBuffID);
    /*0xd7b3cc*/ void AddChangeBuff(int _nPrevBuffID, int _nNewBuffID);
    /*0xd7b49c*/ void RemoveChangeBuff(int _nBuffID);
    /*0xd774ec*/ int GetChangeBuff(int _nPrevBuffID);
    /*0xd7b53c*/ void CheckSkillEnableWithCCBuff();
    /*0xd7bbe8*/ void CheckImmuneKnockback();
    /*0xd7bc20*/ void CheckDarkness();
    /*0xd7bc58*/ void CheckEquipEnableWithBuff();
    /*0xd7be78*/ void CheckNoLessValueWithBuff();
    /*0xd7bf78*/ void CheckMultDamageCriticalWithBuff();
    /*0xd7c06c*/ void CheckMultCooltimeWithBuff();
    /*0xd7c160*/ void CheckMultMPPayWithBuff();
    /*0xd7c254*/ void SetCheckNextBuffWithUpdate(bool _bCheck);
    /*0xd76c50*/ void CheckNextBuff();
    /*0xd7c260*/ CharacterBase GetRecentProvokeTarget();
    /*0xd7c4a0*/ void SetBuffCommonCooltime(int _nBuffID, float _fCooltime);
    /*0xd7c57c*/ float GetBuffCommonCooltime(int _nBuffID);
    /*0xd7699c*/ void CheckCommonBuffCooltime();
    /*0xd7c620*/ bool IsCCState();
    /*0xd7c758*/ bool IsCCStateForCheckAvoid();
    /*0xd7c874*/ void CheckAvoidMagical();
    /*0xd7c924*/ void SpawnBuffParticle(Buff_Container _buffContainer);
    /*0xd7808c*/ Buff_Base GetBuffClass(int _nBuffID, Battle.BuffEffectType _eBuffType);
    /*0xd7c9e4*/ Battle.CharacterStat GetBuffStat(int _nBuffID, TableData.TableData_Buff _tBuffData);
    /*0xd7cc88*/ float GetBuffStatValue(ref TableData.TableData_Buff _buffData, Battle.CharacterStat.StatType _eStatType);
    /*0xd7d094*/ float GetBuffStatValue_Housing(ref TableData.TableData_Buff _buffData, Battle.CharacterStat.StatType _eStatType, float _fRatio);
    /*0xd7d440*/ float GetBuffShieldAmount(int _nBuffID, float _fShieldAmountRatio);
    /*0xd725a8*/ void InitEvent();
    /*0xd74c38*/ void UpdateEvent();
    /*0xd7d4e0*/ UnityEngine.Vector2 get_CenterPosition();
    /*0xd7d4ec*/ UnityEngine.Vector2 get_RootPosition();
    /*0xd7d508*/ UnityEngine.Vector2 get_CenterToRootDistance();
    /*0xd7d514*/ void set_CenterToRootDistance(UnityEngine.Vector2 value);
    /*0xd7d520*/ UnityEngine.Vector2 get_HeadPosition();
    /*0xd7d534*/ UnityEngine.Vector2 get_FirePosition();
    /*0xd7d548*/ UnityEngine.Vector2 get_BodyPosition();
    /*0xd7d55c*/ UnityEngine.Vector2 get_BodyLocalPosition();
    /*0xd7d5b4*/ Battle.Direction get_GetDirection();
    /*0xd7d61c*/ System.Nullable<UnityEngine.Vector2> get_MovePOS();
    /*0xd7d62c*/ void set_MovePOS(System.Nullable<UnityEngine.Vector2> value);
    /*0xd7d638*/ UnityEngine.Vector2 get_MoveDIR();
    /*0xd7d644*/ void set_MoveDIR(UnityEngine.Vector2 value);
    /*0xd7d650*/ CharacterBase get_KilledAttacker();
    /*0xd7d658*/ void set_KilledAttacker(CharacterBase value);
    /*0xd7d660*/ System.Collections.Generic.List<UnityEngine.Transform> get_BossHitPositionList();
    /*0xd72024*/ void StartInitMethod();
    /*0xd731d4*/ void InitMethod();
    /*0xd74114*/ void RemoveInitMethod();
    /*0xd74b30*/ void UpdateMethod();
    /*0xd7d6c8*/ void CheckTimer();
    /*0xd756e8*/ void CheckHitAnimation();
    /*0xd74e4c*/ void CheckKnockBack();
    /*0xd7d84c*/ void CheckTweenColor();
    /*0xd7d9bc*/ void SetPositionZ();
    /*0xd7da60*/ void UpdateHPMP();
    /*0xd7e45c*/ bool CheckSignatureEnable(int _nSignatureLV);
    /*0xd7e46c*/ TableData.TableData_Skillextra GetSignatureData(int _nSignatureLV, Battle.SkillExtraID _eExtraID);
    /*0xd7e48c*/ Battle.DamageResult RecievePercentageDamage(CharacterBase _attacker, float _fPercentage, Battle.AttackType _eAttackType, int _nFactionID, int _nSkillID);
    /*0xd7e568*/ Battle.DamageResult RecieveDotDamage(CharacterBase _attacker, ref Battle.StatTransfer _statTransfer);
    /*0xd7ef0c*/ void Death(CharacterBase _Attacker);
    /*0xd7f560*/ Battle.DamageResult RecieveDamage(CharacterBase _attacker, ref Battle.StatTransfer _statTransfer, bool _bAddDamage, System.Nullable<UnityEngine.Vector2> _vAttackPOS);
    /*0xd7ed20*/ void GiveDamageResult(Battle.DamageResult _result, bool _bDotDamage, int _nAttackSkillID);
    /*0xd7eb30*/ float RecieveShieldDamage(float _fDamage, Battle.AttackType _eAttackType);
    /*0xd7e894*/ float RecieveFreezeDamage(float _fDamage);
    /*0xd80204*/ void CheckShieldAmountWithBuff();
    /*0xd80054*/ float CalcDamage(float _fDamage, float _fDEF);
    /*0xd80074*/ bool CheckCritical(float _fCRI);
    /*0xd7ff60*/ bool CheckAvoid(float _fACC);
    /*0xd80104*/ bool CheckAvoidForMagicalAttack(float _fACC);
    /*0xd7e828*/ bool IsFactionMult(int _nFactionID);
    /*0xd8041c*/ void HandleCheckActiveSliderWhenMaxHP();
    /*0xd80450*/ void HandleCheckDisactiveSliderWhenLessMaxHP();
    /*0xd74a68*/ void SetHitEyeMouthChange(bool _boolean);
    /*0xd80484*/ void HandleChangeFaceAttachment(Spine.Unity.ISkeletonAnimation animated);
    /*0xd804f4*/ void HandleHitHeadTurn(Spine.Unity.ISkeletonAnimation animated);
    /*0xd80528*/ void HandleHitBodyRotate(Spine.Unity.ISkeletonAnimation animated);
    /*0xd8056c*/ void SetStatusSlot(UnitBattleStatusSlot _slot);
    /*0xd7f490*/ void SetActiveStatusBar(bool _bActive);
    /*0xd7f4a8*/ void SetActiveStatusSlotBar(bool _bActive);
    /*0xd806fc*/ void SetGuildBoss();
    /*0xd762f0*/ UnityEngine.Vector2 GetBonePosition(Battle.BonePositionType _type);
    /*0xd80738*/ void SetOwner(CharacterBase _Owner);
    /*0xd80740*/ void SetUnitSize(float _fSize);
    /*0xd7e0dc*/ float GetHPRatio();
    /*0xd807f4*/ int GetHPRatioForVerify();
    /*0xd7e0ac*/ float GetMPRatio();
    /*0xd808e8*/ int GetMPRatioForVerify();
    /*0xd809dc*/ void FlipCharacterDIR(UnityEngine.Vector2 _vecDIR);
    /*0xd80a6c*/ void FlipCharacterPOS(UnityEngine.Vector2 _vecPOS);
    /*0xd80ae8*/ void SetDirection(Battle.Direction _eDirection);
    /*0xd74408*/ void HitEffect(bool _bHit, bool _bEffectOnly, System.Nullable<UnityEngine.Vector2> _vAttackPOS);
    /*0xd80b38*/ void SetHP_NoOptions(float _fRatio, bool _bSetDecrease);
    /*0xd80cd4*/ void SetHP_NoOptions_SetAmount(float _fHPAmount, bool _bSetDecrease);
    /*0xd73ef8*/ void SetHP(float _fRatio, CharacterBase _caster, Battle.DamageMarkType _eMarkType);
    /*0xd7e10c*/ void AddHP(float _fAddValue, CharacterBase _caster, bool _bAddDamage, Battle.DamageMarkType _eMarkType);
    /*0xd80d78*/ float CheckUnitMaxHPAndReturnOverHeal(bool _bHeal);
    /*0xd7ff04*/ void AddHPWithRatio(float _fAddRatio, CharacterBase _caster, Battle.DamageMarkType _eMarkType);
    /*0xd80e1c*/ void AddHPWithRatio_CurHP(float _fAddRatio, CharacterBase _caster, Battle.DamageMarkType _eMarkType);
    /*0xd73fd4*/ void SetSP(float _fRatio);
    /*0xd775b8*/ void AddSP(float _fAddValue);
    /*0xd80bdc*/ void SetHPSlider(bool _bSetDecrease);
    /*0xd80354*/ void SetShieldSlider();
    /*0xd80e30*/ void SetSPSlider();
    /*0xd7f4c0*/ void SetGrayStatusUI();
    /*0xd80f04*/ void SetKnockBack(Battle.Direction _dir, float _distance, float _duration);
    /*0xd80f2c*/ void SetKnockBack(UnityEngine.Vector2 _moveAmount, float _duration);
    /*0xd7dfe4*/ void SetUnitPosition(UnityEngine.Vector2 _vecMovePosition, bool _bCheckAreaLimit);
    /*0xd81060*/ bool FlagEquals(Battle.CharacterFlag _eFlag);
    /*0xd810d8*/ bool FlagEqualsBuff(Battle.BuffFlag _eBuffFlag);
    /*0xd81190*/ bool FlagEqualsBuff(Battle.BuffEffectType _eBuffEffectType);
    /*0xd81244*/ bool FlagEqualsBuff(Battle.BuffEffectType[] _eBuffEffectTypes);
    /*0xd81358*/ void SetFlag(Battle.CharacterFlag _flag, bool _boolean);
    /*0xd813d8*/ void ClearFlag();
    /*0xd81440*/ void SetStartHAST();
    /*0xd81988*/ void SetPrevTarget(CharacterBase _target);
    /*0xd81990*/ void SetCurTarget(CharacterBase _target);
    /*0xd81998*/ void SetMoveTarget(CharacterBase _target, Battle.StateAndSkillID _eStateID);
    /*0xd819a4*/ void SetMovePOS(System.Nullable<UnityEngine.Vector2> _vecPOS);
    /*0xd81a88*/ void SetFirstTargetPostiion(CharacterBase _target);
    /*0xd81b64*/ void SetCurCollisionList(System.Collections.Generic.List<CharacterBase> _lisTarget, UnityEngine.Vector2 _vCenterPOS);
    /*0xd81bf4*/ CharacterBase GetPrevTarget();
    /*0xd81c64*/ CharacterBase GetCurTarget();
    /*0xd81cd4*/ CharacterBase GetMoveTarget();
    /*0xd81d44*/ UnityEngine.Vector2 GetFirstTargertPosition();
    /*0xd81d50*/ System.Collections.Generic.List<CharacterBase> GetCurCollisionList();
    /*0xd81d58*/ UnityEngine.Vector2 GetCurCollisionCenterPOS();
    /*0xd81d60*/ void AddReference(long _nRefNum);
    /*0xd81dc8*/ void RemoveReference(long _nRefNum);
    /*0xd81e34*/ void CheckReferenceExist();
    /*0xd81edc*/ bool IsExistReference();
    /*0xd7de18*/ void SetColor(UnityEngine.Color _color, bool _bTint, bool _bCheckCurrentColor);
    /*0xd81f60*/ void SetColorTween(UnityEngine.Color _color);
    /*0xd82024*/ void SetColorTweenExit();
    /*0xd82058*/ void SetBattleEndState();
    /*0xd7d680*/ void SetColorToOrigin();
    /*0xd820e4*/ void SetSkillCooltime(int _nSkillSlot, float _fCooltime);
    /*0xd8227c*/ void AddSkillCooltime(int _nSkillSlot, float _fAddCooltime);
    /*0xd7d668*/ void SetEnableMPSlider(bool _bEnable);
    /*0xd80720*/ void SetEnableHPSlider(bool _bEnable);
    /*0xd7e9e4*/ void PlaySound_HIT(Battle.Hit_WpnType _eWeaponType, bool _bCritical, bool _bCheckPlayPrev);
    /*0xd82668*/ void PlaySound_ULT();
    /*0xd822b4*/ string GetSoundName_HIT(Battle.Hit_WpnType _eWeaponType, bool _bCritical);
    /*0xd82780*/ string GetSoundName_ULT(UnitClassType _eClassType);
    /*0xd7635c*/ void ChangeShader(Battle.UnitShaderType _type);
    /*0xd82900*/ void SetShaderFloatProperty(Battle.UnitShaderType _eShaderType, float _fValue);
    /*0xd76464*/ void SetShaderFloatProperty(Battle.UnitShaderType _eShaderType, float _fStartValue, float _fEndValue, float _fDuration);
    /*0xd82964*/ bool get_IsPassiveEnable();
    /*0xd8296c*/ void set_IsPassiveEnable(bool value);
    /*0xd73898*/ void InitPassive();
    /*0xd7421c*/ void RemoveInitPassive();
    /*0xd82978*/ void AddPassiveSkills();
    /*0xd82a2c*/ void AddPassive(int _nPassiveID);
    /*0xd82b2c*/ Passive_Base GetPassiveClass(Battle.PassiveConditionType _eConditionType);
    /*0xd83170*/ void AddFXChanger(int _nPrevFXID, int _nChangeFXID);
    /*0xd83240*/ void RemoveFXChanger(int _nDeletePrevFXID);
    /*0xd832e0*/ int GetFXChanger(int _nPrevFXID);
    /*0xd83384*/ Passive_Base FindPassiveBySkillID(int _nSkillID);
    /*0xd83420*/ bool get_Rabbit_bComboStart();
    /*0xd83428*/ void set_Rabbit_bComboStart(bool value);
    /*0xd83434*/ int get_Rabbit_nComboCount();
    /*0xd8343c*/ void set_Rabbit_nComboCount(int value);
    /*0xd83444*/ bool get_Swordcat_bCounter();
    /*0xd8344c*/ void set_Swordcat_bCounter(bool value);
    /*0xd83458*/ bool get_Queen_bDebuffSuccess();
    /*0xd83460*/ void set_Queen_bDebuffSuccess(bool value);
    /*0xd8346c*/ bool get_Queen_bComboStart();
    /*0xd83474*/ void set_Queen_bComboStart(bool value);
    /*0xd83480*/ int get_Queen_nComboCount();
    /*0xd83488*/ void set_Queen_nComboCount(int value);
    /*0xd83490*/ bool get_Akimbo_bMagazineOn();
    /*0xd83498*/ void set_Akimbo_bMagazineOn(bool value);
    /*0xd834a4*/ System.Collections.Generic.List<CharacterBase> get_Akimbo_ULT_TargetList();
    /*0xd834ac*/ void set_Akimbo_ULT_TargetList(System.Collections.Generic.List<CharacterBase> value);
    /*0xd834b4*/ float get_Sugar_fMultHPMP();
    /*0xd834bc*/ void set_Sugar_fMultHPMP(float value);
    /*0xd834c4*/ bool get_Deathscythe_bUseSP01();
    /*0xd834cc*/ void set_Deathscythe_bUseSP01(bool value);
    /*0xd834d8*/ CharacterBase get_Sabre_ULT_Target();
    /*0xd834e0*/ void set_Sabre_ULT_Target(CharacterBase value);
    /*0xd834e8*/ CharacterBase get_Sabre_SP03_Target();
    /*0xd834f0*/ void set_Sabre_SP03_Target(CharacterBase value);
    /*0xd834f8*/ int get_Sabre_ULT_ProjectileCount();
    /*0xd83500*/ void set_Sabre_ULT_ProjectileCount(int value);
    /*0xd83508*/ bool get_Sabre_ULT_KillEnemy();
    /*0xd83510*/ void set_Sabre_ULT_KillEnemy(bool value);
    /*0xd8351c*/ ParticleBase get_Breeze_ULT_Particle();
    /*0xd83524*/ void set_Breeze_ULT_Particle(ParticleBase value);
    /*0xd8352c*/ ParticleBase get_Cleric_SP01_Particle();
    /*0xd83534*/ void set_Cleric_SP01_Particle(ParticleBase value);
    /*0xd8353c*/ float get_Lamplight_ULT_MultDmage();
    /*0xd83544*/ void set_Lamplight_ULT_MultDmage(float value);
    /*0xd8354c*/ bool get_Lamplight_SP01_FX2_START();
    /*0xd83554*/ void set_Lamplight_SP01_FX2_START(bool value);
    /*0xd83560*/ System.Action<CharacterBase> get_Baba_SIG_OnCC_WithCaster();
    /*0xd83568*/ void set_Baba_SIG_OnCC_WithCaster(System.Action<CharacterBase> value);
    /*0xd83570*/ int get_TargetType3_nNextTargetCount();
    /*0xd83578*/ void set_TargetType3_nNextTargetCount(int value);
    /*0xd83580*/ float get_TMP_ReflectionDamage();
    /*0xd83588*/ void set_TMP_ReflectionDamage(float value);
    /*0xd83590*/ float get_TMP_MultHitDamage();
    /*0xd83598*/ void set_TMP_MultHitDamage(float value);
    /*0xd835a0*/ float get_TMP_AddCriticalBeforeCalcDamage();
    /*0xd835a8*/ void set_TMP_AddCriticalBeforeCalcDamage(float value);
    /*0xd835b0*/ float get_TMP_SHP();
    /*0xd835b8*/ void set_TMP_SHP(float value);
    /*0xd835c0*/ float get_TMP_AddDamage_Physical();
    /*0xd835c8*/ void set_TMP_AddDamage_Physical(float value);
    /*0xd835d0*/ float get_TMP_AddDamage_Magical();
    /*0xd835d8*/ void set_TMP_AddDamage_Magical(float value);
    /*0xd835e0*/ float get_Blood_fMultDamage();
    /*0xd835e8*/ void set_Blood_fMultDamage(float value);
    /*0xd835f0*/ CharacterBase get_Target_Passive();
    /*0xd835f8*/ void set_Target_Passive(CharacterBase value);
    /*0xd83600*/ System.Collections.Generic.List<Battle.CharacterStat> get_StatList();
    /*0xd83608*/ void set_StatList(System.Collections.Generic.List<Battle.CharacterStat> value);
    /*0xd83610*/ Battle.CharacterStat get_DefaultStat();
    /*0xd83618*/ void set_DefaultStat(Battle.CharacterStat value);
    /*0xd83620*/ System.Collections.Generic.List<Battle.CharacterStat> get_EquipStat();
    /*0xd83628*/ void set_EquipStat(System.Collections.Generic.List<Battle.CharacterStat> value);
    /*0xd83630*/ Battle.CharacterStat get_BonusStat();
    /*0xd83638*/ void set_BonusStat(Battle.CharacterStat value);
    /*0xd83640*/ System.Collections.Generic.List<PTShare.Define.SEquip> get_EquipList();
    /*0xd83648*/ void set_EquipList(System.Collections.Generic.List<PTShare.Define.SEquip> value);
    /*0xd83650*/ float get_DefaultMoveSpeed();
    /*0xd83658*/ void set_DefaultMoveSpeed(float value);
    /*0xd83660*/ Battle.ColliderData get_HitCollider();
    /*0xd83674*/ void set_HitCollider(Battle.ColliderData value);
    /*0xd83684*/ Battle.AttackType get_AttackType();
    /*0xd8368c*/ void set_AttackType(Battle.AttackType value);
    /*0xd83694*/ long get_TotalPower();
    /*0xd8369c*/ void set_TotalPower(long value);
    /*0xd836a4*/ float get_CurHP();
    /*0xd836ac*/ void set_CurHP(float value);
    /*0xd7e818*/ float get_MaxHP();
    /*0xd836b4*/ float get_MaxShield();
    /*0xd836bc*/ void set_MaxShield(float value);
    /*0xd836c4*/ float get_CurShield();
    /*0xd836cc*/ void set_CurShield(float value);
    /*0xd836d4*/ float get_CurMP();
    /*0xd836dc*/ void set_CurMP(float value);
    /*0xd836e4*/ float get_CurGlobalCD();
    /*0xd836ec*/ void set_CurGlobalCD(float value);
    /*0xd836f4*/ int get_SignatureLV();
    /*0xd836fc*/ void set_SignatureLV(int value);
    /*0xd83704*/ bool get_SignatureEnable();
    /*0xd8370c*/ void set_SignatureEnable(bool value);
    /*0xd72ee8*/ void InitStat();
    /*0xd75354*/ void AddStat(Battle.CharacterStat _stat);
    /*0xd7bddc*/ void AddStats(System.Collections.Generic.List<Battle.CharacterStat> _lisStat);
    /*0xd753f0*/ void RemoveStat(Battle.CharacterStat _stat);
    /*0xd7bd40*/ void RemoveStats(System.Collections.Generic.List<Battle.CharacterStat> _lisStat);
    /*0xd83754*/ void SetEquipments(System.Collections.Generic.List<PTShare.Define.SEquip> _lisEquip);
    /*0xd72574*/ void SetSignature(int _nSignatureLV);
    /*0xd83b54*/ void SetTotalPower();
    /*0xd7d030*/ float GetDefaultStat(Battle.CharacterStat.StatType _eStatType, bool _bApplyInitAddHP);
    /*0xd757b0*/ float GetTotalStat(Battle.CharacterStat.StatType _eStatType);
    /*0xd83718*/ void CheckMaxHP();
    /*0xd84448*/ float GetStatFromStruct(Battle.CharacterStat _stat, Battle.CharacterStat.StatType _eStatType, bool _bApplyInitAddHP);
    /*0xd83ca4*/ float GetStatFromListStruct(System.Collections.Generic.List<Battle.CharacterStat> _lisStat, Battle.CharacterStat.StatType _eStatType, bool _bApplyInitAddHP);
    /*0xd8453c*/ CharacterState get_CurState();
    /*0xd84544*/ void set_CurState(CharacterState value);
    /*0xd8454c*/ CharacterState get_PrevState();
    /*0xd84554*/ void set_PrevState(CharacterState value);
    /*0xd8455c*/ CharacterState get_NextState();
    /*0xd84564*/ void set_NextState(CharacterState value);
    /*0xd73918*/ void InitState();
    /*0xd84674*/ void AddActiveSkills();
    /*0xd740dc*/ void RemoveInitBT();
    /*0xd74748*/ void UpdateState();
    /*0xd84ab8*/ bool CheckNextStateEnable();
    /*0xd84ce4*/ void SetExitCurrentStateWhenNextUpdate(bool _bExit);
    /*0xd84cfc*/ void SetNextState(Battle.StateAndSkillID _nextState, bool _isOverride);
    /*0xd84b24*/ void ChangeToNextState();
    /*0xd7f210*/ bool ChangeState(Battle.StateAndSkillID _eNextState, Battle.StateRecursiveType _eRecursiveType, bool _bTouch);
    /*0xd84a74*/ void ExitCurState();
    /*0xd84da8*/ void SetEnableState(Battle.StateAndSkillID _state, bool _boolean);
    /*0xd84e60*/ void SetEnableState(CharacterState _state, bool _boolean);
    /*0xd81534*/ void AddNewState(Battle.StateAndSkillID _addStateID, bool _isStateEnable, Battle.StateAndSkillID[] _nextStates);
    /*0xd84f24*/ void AddNewState(int _addStateID, bool _isStateEnable, Battle.StateAndSkillID[] _nextStates);
    /*0xd817a8*/ void AddStateToNextStateList(Battle.StateAndSkillID _addStateID, int _priority, Battle.StateAndSkillID[] _baseStates);
    /*0xd84f2c*/ void AddStateToNextStateList(int _addStateID, int _priority, Battle.StateAndSkillID[] _baseStates);
    /*0xd84f30*/ void RemoveState(CharacterState _state);
    /*0xd8509c*/ void RemoveState(Battle.StateAndSkillID _state);
    /*0xd85148*/ void RemoveStateAtNextStateList(Battle.StateAndSkillID _baseState, CharacterState _removeState);
    /*0xd85260*/ void RemoveStateAtNextStateList(Battle.StateAndSkillID _baseState, Battle.StateAndSkillID _removeState);
    /*0xd8456c*/ void RemoveStateAll();
    /*0xd85314*/ bool IsStateExist(Battle.StateAndSkillID _state);
    /*0xd85378*/ CharacterState GetStateClass(int _nID, bool _bStateEnable);
    /*0xd84f1c*/ CharacterState GetStateClass(Battle.StateAndSkillID _eID, bool _bStateEnable);
    /*0xd85a40*/ void StartStateSettings(bool _bSpecialSkill, ANIMATION_CLIP _animID, bool _bAnimLoop, bool _bHitAnimRotateInit, Spine.AnimationState.TrackEntryDelegate _delAnimComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delAnimEvents);
    /*0xd85d04*/ void SpecialSkillEffectEvent(Spine.TrackEntry entry, Spine.Event e);
    /*0xd85c54*/ bool IsPauseWhenSpecialSkillStart();
    /*0xd860bc*/ bool IsNoPauseStateWhenSpecialSkill();
    /*0xd86124*/ void ExitStateSettings(bool _isSpecialSkill, Spine.AnimationState.TrackEntryDelegate _delRemoveComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delRemoveEvents);
    /*0xd7b7d0*/ void SetAllSkillsEnable(bool _bEnable, bool _bIncludeDefault);
    /*0xd7b93c*/ void SetDefaultSkillEnable(bool _bEnable);
    /*0xd7ba7c*/ void SetSpecialSkillEnable(bool _bEnable);
    /*0xd86254*/ void SetSkillEnable(int _nSkillSlot, bool _bEnable);
    /*0xd7f4e0*/ bool SetTouchSkillUI(bool _isOn);
    /*0xd8646c*/ void SetNextStateToTouchSkill();
    /*0xd86478*/ Battle.ColliderData GetCurSkillSight();
    /*0xd8653c*/ void StartSkillFX(Battle.StateAndSkillID _eSkillID, int _nSkillFXID);
    /*0xd865f4*/ CharacterSkill_Active FindActiveSkillWithSlot(Battle.SkillSlotType _eSlotType);
    /*0xd82124*/ CharacterSkill_Active FindActiveSkillWithSlot(int _nSkillSlot);
    /*0xd865f8*/ void SetEnableCheckSkillCooltime(int _nSkillSlot, bool _bCheckCooltime);
    /*0xd86624*/ void SetEnableCheckSkillCooltime(Battle.SkillSlotType _eSlotType, bool _bCheckCooltime);
    /*0xd86650*/ void SetEnableFindTargetWithSightCollider(int _nSkillSlot, bool _bFindWithSightCollider);
    /*0xd8667c*/ void SetEnableFindTargetWithSightCollider(Battle.SkillSlotType _eSlotType, bool _bFindWithSightCollider);
    /*0xd866a8*/ UnityEngine.Transform get_GetDamageMarkerTrans();
    /*0xd73d44*/ void InitUI();
    /*0xd74da0*/ void UpdateUI();
    /*0xd866f0*/ void HandleGuildWarKillUnit(CharacterBase _killUnit);
    /*0xd86954*/ void SetDialogueRandomText();
    /*0xd86b74*/ void SetDialogue(string _sLocalKey, float _fDuration);
    /*0xd7dc08*/ void CheckDialogueDuration();
    /*0xd866b0*/ void CheckGuildBattleUIOptions();
    /*0xd86e54*/ void SetActiveHPMPGage(bool _bActive);
    /*0xd86e90*/ void SetActiveBuffImage(bool _bActive);
    /*0xd77af8*/ void <AddBuff>g__RenewAndReturnBuffCount|185_0(ref CharacterBase.<> );
    /*0xd7780c*/ void <AddBuff>g__AddAndStartBuff|185_1(ref CharacterBase.<> );
    /*0xd873cc*/ void <SetDialogue>b__750_0();
    /*0xd87480*/ void <CheckDialogueDuration>b__751_0();

    enum AddBuffCheckStackState
    {
        NONE = 0,
        RENEW_AND_ADD_BUFF = 1,
        RENEW_AND_MAX_STACK = 2,
        NO_STACK_ADD_BUFF = 3,
        EXIST_STACK_NO_MATCH_BUFF = 4,
    }

    struct <>c__DisplayClass140_0
    {
        /*0x10*/ int _nArtifactID;
    }

    struct <>c__DisplayClass185_0
    {
        /*0x10*/ CharacterBase <>4__this;
        /*0x18*/ int _nBuffID;
        /*0x20*/ Buff_Container buffContainer;
        /*0x28*/ TableData.TableData_Buff buffData;
        /*0x30*/ CharacterBase _caster;
    }
}

class CharacterBase_WorldBoss : CharacterBase
{
    /*0x13208dc*/ CharacterBase_WorldBoss();
    /*0x132085c*/ void UpdateObject();
}

class Buff_AKIMBO_Critical : Buff_Base
{
    /*0x54*/ int m_nPassiveSkillID;
    /*0x58*/ Passive_Base m_PassiveSkill;

    /*0x16f2e88*/ Buff_AKIMBO_Critical();
    /*0x16f2c04*/ void InitChild();
    /*0x16f2c64*/ void StartBuffAfterInit();
    /*0x16f2d94*/ void RemoveInitChild();
    /*0x16f2e68*/ void HandleCheckCritical(int _nSkillSlot, bool _bCritical);
}

class Buff_AKIMBO_Magazine : Buff_Base
{
    /*0x54*/ int m_nRemoveBuffID;

    /*0x16f2f54*/ Buff_AKIMBO_Magazine();
    /*0x16f2e98*/ void InitChild();
    /*0x16f2ed4*/ void RemoveInitChild();
}

class Buff_AKIMBO_Magnum : Buff_Base
{
    /*0x54*/ int m_nAddBuffID_Magazine;
    /*0x58*/ int m_nAddBuffID_ATK;
    /*0x5c*/ int m_SIG_MagnumAddCount;

    /*0x16f31ec*/ Buff_AKIMBO_Magnum();
    /*0x16f2f5c*/ void InitChild();
    /*0x16f30bc*/ void StartBuffAfterInit();
    /*0x16f30d8*/ void Renew();
}

class Buff_ASS_Mark : Buff_Base
{
    /*0x54*/ float m_fMultDamageRatio;
    /*0x58*/ int m_nAddMP;
    /*0x5c*/ int m_nAddBuffID;

    /*0x16f3834*/ Buff_ASS_Mark();
    /*0x16f31f4*/ void InitChild();
    /*0x16f3254*/ void StartBuffAfterInit();
    /*0x16f345c*/ void RemoveInitChild();
    /*0x16f35bc*/ void HandleCheckAttack(CharacterBase _attacker, float _f);
    /*0x16f3658*/ void HandleCheckKills(CharacterBase _killTarget);
}

class Buff_AddBuff_LessHP : Buff_Base
{
    /*0x54*/ float m_fLessHPRatio;
    /*0x58*/ int m_nBuffID;

    /*0x16f3b78*/ Buff_AddBuff_LessHP();
    /*0x16f383c*/ void InitChild();
    /*0x16f3880*/ void StartBuffAfterInit();
    /*0x16f3aa0*/ void RemoveInitChild();
    /*0x16f3b68*/ void ActionLessHP();
    /*0x16f39b0*/ void HandleCheckHP();
}

class Buff_AddBuff_Renew_P2 : Buff_Base
{
    /*0x54*/ int m_nAddBuffID;

    /*0x16f3c14*/ Buff_AddBuff_Renew_P2();
    /*0x16f3b80*/ void InitChild();
    /*0x16f3bbc*/ void Renew();
}

class Buff_AddMP : Buff_Base
{
    /*0x54*/ float m_fAddMP;

    /*0x16f3c64*/ Buff_AddMP();
    /*0x16f3c1c*/ void InitChild();
    /*0x16f3c40*/ void StartBuffAfterInit();
}

class Buff_AddbuffAttack : Buff_Base
{
    /*0x54*/ float m_fPercentage;
    /*0x58*/ int m_nBuffID;

    /*0x16f3eb0*/ Buff_AddbuffAttack();
    /*0x16f3c6c*/ void InitChild();
    /*0x16f3cb0*/ void StartBuffAfterInit();
    /*0x16f3df4*/ void HandleHitTarget(CharacterBase _target, int _n, bool _b);
}

class Buff_AddbuffCritical : Buff_Base
{
    /*0x54*/ int m_nBuffID;

    /*0x16f4040*/ Buff_AddbuffCritical();
    /*0x16f3eb8*/ void InitChild();
    /*0x16f3ef4*/ void StartBuffAfterInit();
    /*0x16f402c*/ void HandleHitTarget(CharacterBase _target, int _n, bool _bCritical);
}

class Buff_Addbuff_Dodge : Buff_Base
{
    /*0x54*/ int m_nAddBuffID;

    /*0x16f4294*/ Buff_Addbuff_Dodge();
    /*0x16f4048*/ void InitChild();
    /*0x16f4084*/ void StartBuffAfterInit();
    /*0x16f41b0*/ void RemoveInitChild();
    /*0x16f4284*/ void HandleCheckDodge(CharacterBase _attacker);
}

class Buff_Addbuff_Hit : Buff_Base
{
    /*0x16f44a8*/ Buff_Addbuff_Hit();
    /*0x16f429c*/ void StartBuffAfterInit();
    /*0x16f43c8*/ void RemoveInitChild();
    /*0x16f449c*/ void HandleCheckHit(bool _b);
}

class Buff_AvoidMagical : Buff_Base
{
    /*0x16f44ec*/ Buff_AvoidMagical();
    /*0x16f44b0*/ void StartBuffAfterInit();
    /*0x16f44cc*/ void RemoveInitChild();
}

class Buff_BDragon_DOT_MP : Buff_Base
{
    /*0x54*/ float m_fAddMP;
    /*0x58*/ float m_fCurDOTDeltaTime;
    /*0x60*/ ParticleBase m_Particle;

    /*0x16f47d4*/ Buff_BDragon_DOT_MP();
    /*0x16f44f4*/ void InitChild();
    /*0x16f4514*/ void StartBuffAfterInit();
    /*0x16f463c*/ void RemoveInitChild();
    /*0x16f46e8*/ void UpdateChild();
}

class Buff_BULLYGIRL_Shield : Buff_Shield
{
    /*0x16f47dc*/ Buff_BULLYGIRL_Shield();
}

class Buff_Baba_DOT_Heal : Buff_DOT_Damage
{
    /*0x16f4830*/ Buff_Baba_DOT_Heal();
    /*0x16f47e4*/ void InitDotDamage();
}

class Buff_Base
{
    /*0x10*/ CharacterBase Owner;
    /*0x18*/ CharacterBase Caster;
    /*0x20*/ Buff_Container Container;
    /*0x28*/ int <BuffID>k__BackingField;
    /*0x2c*/ Battle.BuffEffectType <BuffType>k__BackingField;
    /*0x30*/ bool <IsCC>k__BackingField;
    /*0x34*/ Battle.BuffFlag Flag;
    /*0x38*/ float CoolTime;
    /*0x40*/ TableData.TableData_Buff m_tBuffData;
    /*0x48*/ float[] m_arrParams;
    /*0x50*/ bool m_bUseUpdate;
    /*0x51*/ bool m_bInitFailed;

    /*0x16f2e90*/ Buff_Base();
    /*0x16f4840*/ int get_BuffID();
    /*0x16f4848*/ void set_BuffID(int value);
    /*0x16f4850*/ Battle.BuffEffectType get_BuffType();
    /*0x16f4858*/ void set_BuffType(Battle.BuffEffectType value);
    /*0x16f4860*/ TableData.TableData_Buff get_BuffData();
    /*0x16f4868*/ bool get_IsClearDeath();
    /*0x16f4888*/ bool get_IsRemoveable();
    /*0x16f48a8*/ bool get_IsStackable();
    /*0x16f48c8*/ bool get_IsDebuff();
    /*0x16f4948*/ bool get_IsBuff();
    /*0x16f4950*/ bool get_IsCC();
    /*0x16f4958*/ void set_IsCC(bool value);
    /*0x16f4964*/ bool get_IsGuildWarCC();
    /*0x16f31c0*/ int get_MaxStack();
    /*0x16f49d8*/ int get_SkillID();
    /*0x16f49f4*/ float get_CurrentCoolTime();
    /*0x16f4a10*/ float get_m_fMultDamage();
    /*0x16f2f30*/ int get_m_nBuffCount();
    /*0x16f4a2c*/ bool get_InitSuccess();
    /*0x16f4a3c*/ bool get_IsPlayer();
    /*0x16f4a50*/ bool Init(CharacterBase _owner, CharacterBase _caster, Buff_Container _container, TableData.TableData_Buff _buffData, int _nBuffID, float[] _arrParams);
    /*0x16f3c3c*/ void InitChild();
    /*0x16f30b0*/ void SetInitFailed();
    /*0x16f4de0*/ void Update();
    /*0x16f4df8*/ void UpdateChild();
    /*0x16f4620*/ void SetUpdate(bool _bUseUpdate);
    /*0x16f4dfc*/ void SetBuffType(Battle.BuffEffectType _eBuffType);
    /*0x16f2d90*/ void StartBuffAfterInit();
    /*0x16f4e04*/ void StartBuffFromOutside();
    /*0x16f3bec*/ void Renew();
    /*0x16f4e20*/ void RemoveInit(bool _bUpdateRemove);
    /*0x16f4fe4*/ void RemoveWithUpdate();
    /*0x16f4fe8*/ void RemoveWithoutUpdate();
    /*0x16f44e8*/ void RemoveInitChild();
    /*0x16f4fec*/ void Remove(bool _bUpdateRemove);
    /*0x16f501c*/ void RecieveDamageToTarget(CharacterBase _attacker, CharacterBase _target, ref Battle.StatTransfer _transfer);
    /*0x16f50d4*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
    /*0x16f31d8*/ void AddBuffToOwner(CharacterBase _caster, int _nBuffID);
    /*0x16f3714*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID);
    /*0x16f51d4*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x16f51dc*/ CharacterBase GetBuffTarget();
    /*0x16f51e4*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x16f48d0*/ bool FlagEquals(Battle.BuffFlag _flag);
    /*0x16f51e8*/ bool FlagEqualsAllBuffs(Battle.BuffFlag _flag);
    /*0x16f4b78*/ void SetFlag(Battle.BuffFlag _flag, bool _boolean);
    /*0x16f4f74*/ void ClearFlagAndBuffType();
    /*0x16f520c*/ void SetCurrentCooltime(float _fCooltime, bool _bSkipNextFrame);
    /*0x16f4e08*/ void RenewCooltime();
    /*0x16f5434*/ void SetTimeCheck(bool _bCheck);
    /*0x16f5454*/ void SetRemoveEnable(bool _bSetEnable);
    /*0x16f5474*/ void CheckSkillEnable();
    /*0x16f5488*/ void CheckImmuneKnockback();
    /*0x16f549c*/ void CheckEquipEnable();
    /*0x16f54b0*/ void CheckNoLessValue();
    /*0x16f54c4*/ void CheckShieldAmount();
    /*0x16f54d8*/ void CheckMultDamageCritical();
    /*0x16f54ec*/ void CheckMultMPPay();
    /*0x16f5500*/ void CheckMultCooltime();
    /*0x16f5514*/ void CheckNextBuff();
    /*0x16f4bf8*/ bool CheckCC();
    /*0x16f4968*/ bool CheckGuildWarCC();
    /*0x16f4cc8*/ bool CheckImmune();

    enum BuffValueType
    {
        NONE = 0,
        NOLESSHP = 1,
        SHIELD_AMOUNT = 2,
        SHIELD_AMOUNT_MAX = 3,
        SHIELD_TYPE = 4,
        MULT_HIT_DAMAGE = 5,
        MULT_HIT_DAMAGE_PHYSICAL = 6,
        MULT_HIT_DAMAGE_MAGICAL = 7,
        MULT_DAMAGE_CRITICAL = 8,
        MULT_RECYCLE_HP = 9,
        MULT_RECYCLE_MP = 10,
        MULT_MPPAY = 11,
        MULT_COOLTIME = 12,
        PROVOKE_AWAKETIME = 13,
        FREEZE_HP = 14,
        BOSS_DAMAGE_NEXT_TARGET = 15,
        BOSS_BUFF_COUNT = 16,
    }
}

class Buff_Blind : Buff_Base
{
    /*0x54*/ UnityEngine.Vector2 m_vecMovePOS;
    /*0x5c*/ float m_fMaxDistance;
    /*0x60*/ float m_fDistanceOriginPOS;

    /*0x16f5858*/ Buff_Blind();
    /*0x16f5528*/ void InitChild();
    /*0x16f5564*/ void StartBuffAfterInit();
    /*0x16f56b8*/ void StartBuffFromOutside();
    /*0x16f55ac*/ void SetRandomMovePOS();
    /*0x16f56d8*/ void RemoveInitChild();
    /*0x16f5738*/ void UpdateChild();
}

class Buff_Blood : Buff_DOT_Damage
{
    /*0x16f5a08*/ Buff_Blood();
    /*0x16f5860*/ void InitChild();
    /*0x16f58d4*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_Blood_PerHP : Buff_Blood
{
    /*0x16f5ac8*/ Buff_Blood_PerHP();
    /*0x16f5a10*/ void InitChild();
    /*0x16f5a74*/ void InitDotDamage();
}

class Buff_Boss_Stack_Guild : Buff_Base
{
    /*0x54*/ int m_nStackCount_StartMiddle;
    /*0x58*/ int m_nStackCount_Final;
    /*0x5c*/ float m_fCurrentTotalHit;
    /*0x60*/ double m_dTotalHit;
    /*0x68*/ int m_nAddBuffID;
    /*0x6c*/ float m_fCondition_1;
    /*0x70*/ float m_fCondition_2;
    /*0x74*/ float m_fCondition_3;

    /*0x16f5efc*/ Buff_Boss_Stack_Guild();
    /*0x16f5ad0*/ void InitChild();
    /*0x16f5b30*/ void StartBuffAfterInit();
    /*0x16f5c68*/ void RemoveInitChild();
    /*0x16f5d28*/ void HandleCheckAddBuff();
    /*0x16f5e94*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_Burn : Buff_DOT_Damage
{
    /*0x16f5f2c*/ Buff_Burn();
    /*0x16f5f04*/ void InitChild();
}

class Buff_ChangeBuff : Buff_Base
{
    /*0x16f5fdc*/ Buff_ChangeBuff();
    /*0x16f5f34*/ void StartBuffAfterInit();
    /*0x16f5f94*/ void RemoveInitChild();
}

class Buff_Charm : Buff_Base
{
    /*0x16f6060*/ Buff_Charm();
    /*0x16f5fe4*/ void InitChild();
    /*0x16f5ff0*/ void StartBuffAfterInit();
    /*0x16f602c*/ void StartBuffFromOutside();
    /*0x16f604c*/ void RemoveInitChild();
}

class Buff_Cleric_Retreat : Buff_Horror
{
    /*0x16f635c*/ Buff_Cleric_Retreat();
    /*0x16f6068*/ void InitChild();
    /*0x16f60d0*/ void SetMovePOS();
    /*0x16f61a4*/ void UpdateChild();
}

class Buff_Container
{
    /*0x10*/ Battle.BuffType <BuffType>k__BackingField;
    /*0x18*/ long UniqueNumber;
    /*0x20*/ Battle.BuffID BuffID_Enum;
    /*0x24*/ int BuffID;
    /*0x28*/ bool <UseUpdate>k__BackingField;
    /*0x29*/ bool <IsRemoved>k__BackingField;
    /*0x2c*/ int <SkillID>k__BackingField;
    /*0x30*/ System.Collections.Generic.List<Buff_Base> BuffList;
    /*0x38*/ CharacterBase m_Owner;
    /*0x40*/ CharacterBase m_Caster;
    /*0x48*/ ParticleBase m_Particle;
    /*0x50*/ bool m_bRemoveParticleOnDeleteBuff;
    /*0x54*/ float m_fTime;
    /*0x58*/ float CurTime;
    /*0x5c*/ bool IsCheckTime;
    /*0x5d*/ bool m_bExitWhenOwnerSkillEnd;
    /*0x5e*/ bool m_bExitWhenCasterSkillEnd;
    /*0x5f*/ bool m_bSkipNextFrameUpdateTime;

    /*0x16f6400*/ Buff_Container();
    /*0x16f636c*/ Battle.BuffType get_BuffType();
    /*0x16f6374*/ void set_BuffType(Battle.BuffType value);
    /*0x16f637c*/ int get_GetBuffCount();
    /*0x16f63c8*/ bool get_UseUpdate();
    /*0x16f63d0*/ void set_UseUpdate(bool value);
    /*0x16f63dc*/ bool get_IsRemoved();
    /*0x16f63e4*/ void set_IsRemoved(bool value);
    /*0x16f63f0*/ int get_SkillID();
    /*0x16f63f8*/ void set_SkillID(int value);
    /*0x16f64b4*/ void Init(int _nBuffID, CharacterBase _Owner, CharacterBase _Caster, TableData.TableData_Buff _BuffData, int _nSkillID);
    /*0x16f5228*/ void SetCurrentCoolTime(float _fCoolTime, bool _bSkipNextFrameUpdateTime);
    /*0x16f6520*/ void SetMultCooltimeForGuildWar();
    /*0x16f65ac*/ void SetMultCooltimeForAddBuff(float _fMultRatio);
    /*0x16f5410*/ void RenewCooltime();
    /*0x16f65d4*/ void Update();
    /*0x16f67cc*/ void AddBuff(Buff_Base _buff);
    /*0x16f6840*/ void RenewBuffAll();
    /*0x16f68fc*/ void SpawnParticle(string _sParticleName, bool _bRemoveOnDeleteBuff, bool _bOwnCaster);
    /*0x16f6a44*/ void RemoveInit();
    /*0x16f6714*/ void RemoveBuffAll(bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0x16f6bd0*/ bool IsCC();
    /*0x16f6c7c*/ bool IsGuildWarCC();
    /*0x16f6d28*/ Battle.BuffType SetBuffType();
    /*0x16f6df4*/ void HandleStateExit();
}

class Buff_Cook_DotHeal : Buff_DOT_Damage
{
    /*0x64*/ int m_nBuffID;
    /*0x68*/ float m_fBuffChance;
    /*0x6c*/ float m_SIG_AddHealPercent;
    /*0x70*/ int m_SIG_AddBuffID;

    /*0x16f7318*/ Buff_Cook_DotHeal();
    /*0x16f6edc*/ void InitChild();
    /*0x16f6f34*/ void StartBuffAfterInit();
    /*0x16f7174*/ void SetDotDamage(float _fDamage);
    /*0x16f7194*/ void RemoveWithUpdate();
}

class Buff_Cook_Food : Buff_Base
{
    /*0x54*/ float m_fHealRatio;
    /*0x58*/ float m_fConditionHP;
    /*0x5c*/ float m_fCooltime;
    /*0x60*/ float m_SIG_AddHealPercent;
    /*0x64*/ int m_SIG_AddBuffID;
    /*0x68*/ int m_SIG_RemoveDebuffCount;

    /*0x16f77ac*/ Buff_Cook_Food();
    /*0x16f7320*/ void InitChild();
    /*0x16f7364*/ void StartBuffAfterInit();
    /*0x16f763c*/ void UpdateChild();
}

class Buff_DOT_Damage : Buff_Base
{
    /*0x54*/ float m_fDotDamageParam;
    /*0x58*/ float m_fDOTDamage;
    /*0x5c*/ Battle.AttackType m_eAttackType;
    /*0x60*/ float m_fCurDOTDeltaTime;

    /*0x16f4838*/ Buff_DOT_Damage();
    /*0x16f5898*/ void InitChild();
    /*0x16f77b4*/ void InitDotDamage();
    /*0x16f712c*/ void StartBuffAfterInit();
    /*0x16f7884*/ void UpdateChild();
    /*0x16f7978*/ void SetDotDamage(float _fDamage);
}

class Buff_DOT_Damage_PerHP : Buff_DOT_Damage
{
    /*0x16f7a24*/ Buff_DOT_Damage_PerHP();
    /*0x16f7980*/ void InitChild();
    /*0x16f79cc*/ void InitDotDamage();
}

class Buff_DOT_Damage_PerHP_P2 : Buff_DOT_Damage_PerHP
{
    /*0x16f7a60*/ Buff_DOT_Damage_PerHP_P2();
    /*0x16f7a2c*/ void InitChild();
}

class Buff_DOT_MP : Buff_DOT_Damage
{
    /*0x64*/ int m_nAddMP;

    /*0x16f7ae4*/ Buff_DOT_MP();
    /*0x16f7a68*/ void InitChild();
    /*0x16f7ab8*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_DOT_MP_P3 : Buff_DOT_MP
{
    /*0x16f7b3c*/ Buff_DOT_MP_P3();
    /*0x16f7aec*/ void InitChild();
}

class Buff_Darkelf_Bind : Buff_Base
{
    /*0x54*/ float m_fAddHPRatio;
    /*0x58*/ float m_fAddMPAmount;

    /*0x16f7f54*/ Buff_Darkelf_Bind();
    /*0x16f7b44*/ void InitChild();
    /*0x16f7b6c*/ void StartBuffAfterInit();
    /*0x16f7d60*/ void HandleUnitDeath();
    /*0x16f7d84*/ void HandleHitDamage(CharacterBase _attacker, float _fDamage);
    /*0x16f7e08*/ void RemoveInitChild();
}

class Buff_Darkelf_Blood : Buff_Blood
{
    /*0x64*/ float m_fAddHP;

    /*0x16f804c*/ Buff_Darkelf_Blood();
    /*0x16f7f5c*/ void InitChild();
    /*0x16f7fa8*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_Darkelf_Mark : Buff_Base
{
    /*0x54*/ float m_fCasterHPDown;
    /*0x58*/ float m_fCasterTeamHPAdd;

    /*0x16f830c*/ Buff_Darkelf_Mark();
    /*0x16f8054*/ void InitChild();
    /*0x16f807c*/ void StartBuffAfterInit();
    /*0x16f81c8*/ void HandleUnitDeath();
    /*0x16f824c*/ void RemoveInitChild();
}

class Buff_Darkness : Buff_Base
{
    /*0x16f8348*/ Buff_Darkness();
    /*0x16f8314*/ void InitChild();
    /*0x16f8320*/ void StartBuffAfterInit();
    /*0x16f8334*/ void RemoveInitChild();
}

class Buff_EVILPET_Delay : Buff_Base
{
    /*0x16f83a0*/ Buff_EVILPET_Delay();
    /*0x16f8350*/ void InitChild();
    /*0x16f8368*/ void UpdateChild();
}

class Buff_EVILPET_Reflection : Buff_Base
{
    /*0x54*/ float m_fTotalRecieveDamage;
    /*0x58*/ float m_fReflectionRatio;
    /*0x5c*/ float m_fHealAmountPercentage;
    /*0x60*/ ParticleBase m_shieldParticle;

    /*0x16f89d0*/ Buff_EVILPET_Reflection();
    /*0x16f83a8*/ void InitChild();
    /*0x16f83d0*/ void StartBuffAfterInit();
    /*0x16f85a8*/ void RemoveInitChild();
    /*0x16f89c0*/ void HandleCheckRecieveDamage(CharacterBase _, float _fDamage);
}

class Buff_Fall : Buff_Base
{
    /*0x16f8b64*/ Buff_Fall();
    /*0x16f89d8*/ void InitChild();
    /*0x16f89e4*/ void StartBuffAfterInit();
    /*0x16f8ab0*/ void StartBuffFromOutside();
    /*0x16f8b20*/ void RemoveInitChild();
}

class Buff_Fiance_Reflection : Buff_Reflection
{
    /*0x58*/ int m_nSkillFXID;

    /*0x16f8cd8*/ Buff_Fiance_Reflection();
    /*0x16f8b6c*/ void InitChild();
    /*0x16f8bc0*/ void RemoveWithUpdate();
}

class Buff_Fiance_SIG_Reflection : Buff_Reflection
{
    /*0x58*/ int m_nSkillFXID_Needle;
    /*0x5c*/ int m_nSkillFXID_SIG_Needle;
    /*0x60*/ int m_nSkillFXID_SIG_TickAttack;
    /*0x64*/ int m_nSIGLevel;

    /*0x16f9118*/ Buff_Fiance_SIG_Reflection();
    /*0x16f8ce0*/ void InitChild();
    /*0x16f8d7c*/ void StartBuffAfterInit();
    /*0x16f8ea4*/ void HandleCheckCooltime();
    /*0x16f8eec*/ void AttackNeedle();
    /*0x16f9028*/ void RemoveWithUpdate();
    /*0x16f902c*/ void RemoveWithoutUpdate();
    /*0x16f9040*/ void RemoveInitChild();
}

class Buff_Flower_Provoke_Target : Buff_Provoke_Target
{
    /*0x58*/ float m_fPercentage;
    /*0x5c*/ int m_nBuffID;
    /*0x60*/ int m_nAddMP;

    /*0x16f96dc*/ Buff_Flower_Provoke_Target();
    /*0x16f9120*/ void InitChild();
    /*0x16f9198*/ void StartBuffAfterInit();
    /*0x16f9408*/ void RemoveInitChild();
    /*0x16f95d8*/ void HandleHit(bool _b);
    /*0x16f95f8*/ void HandleAttack(CharacterBase _target, int _n, bool _b);
}

class Buff_Flower_Seed : Buff_Base
{
    /*0x54*/ float m_fUnderHPRatio;
    /*0x58*/ float m_fAddHPRatio;

    /*0x16f99c8*/ Buff_Flower_Seed();
    /*0x16f96e4*/ void InitChild();
    /*0x16f970c*/ void StartBuffAfterInit();
    /*0x16f9908*/ void RemoveInitChild();
    /*0x16f9820*/ void HandleCheckHP();
}

class Buff_Freeze : Buff_Base
{
    /*0x54*/ float m_fHPRatio;
    /*0x58*/ float m_fCurHP;

    /*0x16f9c6c*/ Buff_Freeze();
    /*0x16f99d0*/ void InitChild();
    /*0x16f99f8*/ void StartBuffAfterInit();
    /*0x16f9b48*/ void StartBuffFromOutside();
    /*0x16f9b70*/ void RemoveInitChild();
    /*0x16f9bd4*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x16f9c54*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x16f9c68*/ void IceDestroyed();
}

class Buff_Freeze_Ice : Buff_Freeze
{
    /*0x5c*/ float m_fDownHPRatio_LV2;
    /*0x60*/ float m_fDownHPRatio_LV3;
    /*0x64*/ float m_fCurSkillLV;
    /*0x68*/ int SkillID_Override;

    /*0x16f9da4*/ Buff_Freeze_Ice();
    /*0x16f9c74*/ void InitChild();
    /*0x16f9d38*/ void IceDestroyed();
}

class Buff_Frost : Buff_Base
{
    /*0x16f9dfc*/ Buff_Frost();
    /*0x16f9db4*/ void InitChild();
}

class Buff_GAMBLER_Charm : Buff_Charm
{
    /*0x52*/ bool m_SIG_bEnable;

    /*0x16fa14c*/ Buff_GAMBLER_Charm();
    /*0x16f9e04*/ void InitChild();
    /*0x16f9e10*/ void StartBuffAfterInit();
    /*0x16f9f84*/ void HandleCheckKillAlly(CharacterBase _killedUnit);
    /*0x16fa060*/ void RemoveInitChild();
}

class Buff_GDRAGON_Rage : Buff_Base
{
    /*0x16fa1fc*/ Buff_GDRAGON_Rage();
    /*0x16fa154*/ void StartBuffAfterInit();
    /*0x16fa1e8*/ void RemoveInitChild();
}

class Buff_Gambler_Card : Buff_Base
{
    /*0x54*/ int m_SIG_nBuffID_Heart;

    /*0x16fa58c*/ Buff_Gambler_Card();
    /*0x16fa204*/ void StartBuffAfterInit();
}

class Buff_Horror : Buff_Base
{
    /*0x54*/ float m_fDistance;
    /*0x58*/ UnityEngine.Vector2 m_vecMovePOS;

    /*0x16f6364*/ Buff_Horror();
    /*0x16f6094*/ void InitChild();
    /*0x16fa594*/ void StartBuffAfterInit();
    /*0x16fa5f8*/ void StartBuffFromOutside();
    /*0x16fa618*/ void SetMovePOS();
    /*0x16fa6c4*/ void RemoveInitChild();
    /*0x16fa724*/ void UpdateChild();
}

class Buff_Horror_P2 : Buff_Horror
{
    /*0x16fa8f8*/ Buff_Horror_P2();
    /*0x16fa8c4*/ void InitChild();
}

class Buff_Housing_Stat : Buff_Stat
{
    /*0x68*/ CharacterBase m_StatTarget;
    /*0x70*/ TableData.TableData_Buff m_tMaxStatData;

    /*0x16fadbc*/ Buff_Housing_Stat();
    /*0x16fa900*/ void StartBuffAfterInit();
    /*0x16fac74*/ float GetStatWithMaxValue(Battle.CharacterStat.StatType _eStatType, float _ftotalValue);
}

class Buff_IgnoreDamagePerHP : Buff_Base
{
    /*0x54*/ float m_fIgnoreDamage;
    /*0x58*/ bool m_bStartBuff;

    /*0x16fae44*/ Buff_IgnoreDamagePerHP();
    /*0x16fadc4*/ void InitChild();
    /*0x16fade4*/ void StartBuffAfterInit();
    /*0x16fae14*/ void RemoveInitChild();
}

class Buff_Immune_Knockback : Buff_Base
{
    /*0x16faea0*/ Buff_Immune_Knockback();
    /*0x16fae78*/ void StartBuffAfterInit();
    /*0x16fae8c*/ void RemoveInitChild();
}

class Buff_Immune_CC : Buff_Base
{
    /*0x16fae70*/ Buff_Immune_CC();
    /*0x16fae4c*/ void StartBuffAfterInit();
}

class Buff_Invincible : Buff_Base
{
    /*0x16faeb4*/ Buff_Invincible();
    /*0x16faea8*/ void InitChild();
}

class Buff_Invincible_Color : Buff_Invincible
{
    /*0x16faf64*/ Buff_Invincible_Color();
    /*0x16faebc*/ void StartBuffAfterInit();
    /*0x16faf50*/ void RemoveInitChild();
}

class Buff_Invisible : Buff_Base
{
    /*0x16faf78*/ Buff_Invisible();
    /*0x16faf6c*/ void InitChild();
}

class Buff_LADYDEATH_Horror : Buff_Horror
{
    /*0x16faf80*/ Buff_LADYDEATH_Horror();
}

class Buff_Ladydeath_Debuff : Buff_Base
{
    /*0x54*/ float m_fCheckTime;
    /*0x58*/ float m_fCurTime;
    /*0x5c*/ float m_fPercentage;
    /*0x60*/ int m_nBuffID;

    /*0x16fb0dc*/ Buff_Ladydeath_Debuff();
    /*0x16faf88*/ void InitChild();
    /*0x16faff8*/ void UpdateChild();
}

class Buff_Launch : Buff_Base
{
    /*0x16fb270*/ Buff_Launch();
    /*0x16fb0e4*/ void InitChild();
    /*0x16fb0f0*/ void StartBuffAfterInit();
    /*0x16fb1bc*/ void StartBuffFromOutside();
    /*0x16fb22c*/ void RemoveInitChild();
}

class Buff_Launch_Knockback : Buff_Launch
{
    /*0x54*/ float m_fKnockbackDistance;
    /*0x58*/ float m_fKnockbackTime;

    /*0x16fb2fc*/ Buff_Launch_Knockback();
    /*0x16fb278*/ void InitChild();
    /*0x16fb2a8*/ void StartBuffFromOutside();
}

class Buff_MIDNIGHT_Mark : Buff_Base
{
    /*0x54*/ float m_fConditionHP;
    /*0x58*/ int m_nAddBuffID;
    /*0x5c*/ int m_nAddMP;
    /*0x60*/ float m_fAddMPCooltime;
    /*0x64*/ float m_fCurAddMPCooltime;
    /*0x68*/ int m_SIG_BuffID_Attacker;
    /*0x6c*/ int m_SIG_BuffID_Ally;
    /*0x70*/ float m_SIG_Buff_Ally_Range;

    /*0x16fbc24*/ Buff_MIDNIGHT_Mark();
    /*0x16fb304*/ void InitChild();
    /*0x16fb4f4*/ void StartBuffAfterInit();
    /*0x16fb6f0*/ void RemoveInitChild();
    /*0x16fb83c*/ void HandleCheckHit(CharacterBase _attacker, float _fDamage);
    /*0x16fbba4*/ void HandleCheckAddMPCooltime();
}

class Buff_MIKO_Defdown : Buff_Base
{
    /*0x54*/ int m_nMaxCount;
    /*0x58*/ int m_nCurCount;
    /*0x5c*/ float m_fCurDOTDeltaTime;
    /*0x60*/ Battle.CharacterStat m_Stat;

    /*0x16fbe14*/ Buff_MIKO_Defdown();
    /*0x16fbc2c*/ void InitChild();
    /*0x16fbc68*/ void StartBuffAfterInit();
    /*0x16fbcd8*/ void UpdateChild();
    /*0x16fbdf8*/ void RemoveInitChild();
}

class Buff_MIKO_Sleep : Buff_Sleep
{
    /*0x54*/ int m_nBuffID;

    /*0x16fbeb8*/ Buff_MIKO_Sleep();
    /*0x16fbe1c*/ void InitChild();
    /*0x16fbe70*/ void HandleCheckHit(CharacterBase _, float _fDamage);
}

class Buff_Middle_MultHitDamage : Buff_MultHitDamage
{
    /*0x59*/ bool m_bAddMultHitDamage;

    /*0x16fc134*/ Buff_Middle_MultHitDamage();
    /*0x16fbec0*/ void StartBuffAfterInit();
    /*0x16fc014*/ void RemoveInitChild();
    /*0x16fc114*/ void HandleCheckHit(Battle.AttackType _eAttackType);
}

class Buff_MultCooltime : Buff_Base
{
    /*0x54*/ float m_fMultCooltime;

    /*0x16fc1a0*/ Buff_MultCooltime();
    /*0x16fc144*/ void InitChild();
    /*0x16fc164*/ void StartBuffAfterInit();
    /*0x16fc178*/ void RemoveInitChild();
    /*0x16fc18c*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_MultCooltime_P3 : Buff_MultCooltime
{
    /*0x16fc1d0*/ Buff_MultCooltime_P3();
    /*0x16fc1a8*/ void InitChild();
}

class Buff_MultDamageBlood : Buff_Base
{
    /*0x54*/ float m_fBloodMult;
    /*0x58*/ bool m_bAddMult;

    /*0x16fc26c*/ Buff_MultDamageBlood();
    /*0x16fc1d8*/ void InitChild();
    /*0x16fc1fc*/ void StartBuffAfterInit();
    /*0x16fc234*/ void RemoveInitChild();
}

class Buff_MultDamageCritical : Buff_Base
{
    /*0x54*/ float m_fMultDamageCritical;

    /*0x16fc2d0*/ Buff_MultDamageCritical();
    /*0x16fc274*/ void InitChild();
    /*0x16fc294*/ void StartBuffAfterInit();
    /*0x16fc2a8*/ void RemoveInitChild();
    /*0x16fc2bc*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_MultHitDamage : Buff_Base
{
    /*0x54*/ float m_fAddDamage;
    /*0x58*/ bool m_bAddMult;

    /*0x16fc13c*/ Buff_MultHitDamage();
    /*0x16fc2d8*/ void InitChild();
    /*0x16fc2fc*/ void StartBuffAfterInit();
    /*0x16fc32c*/ void RemoveInitChild();
}

class Buff_MultHitDamage_AttackType : Buff_Base
{
    /*0x54*/ float m_fAddDamage_Physical;
    /*0x58*/ float m_fAddDamage_Magical;
    /*0x5c*/ bool m_bAddMultDamageValue;

    /*0x16fc420*/ Buff_MultHitDamage_AttackType();
    /*0x16fc35c*/ void InitChild();
    /*0x16fc384*/ void StartBuffAfterInit();
    /*0x16fc3d0*/ void RemoveInitChild();
}

class Buff_MultMPPay : Buff_Base
{
    /*0x54*/ float m_fMultMPPay;

    /*0x16fc484*/ Buff_MultMPPay();
    /*0x16fc428*/ void InitChild();
    /*0x16fc448*/ void StartBuffAfterInit();
    /*0x16fc45c*/ void RemoveInitChild();
    /*0x16fc470*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_NoEquip : Buff_Base
{
    /*0x16fc4c0*/ Buff_NoEquip();
    /*0x16fc48c*/ void InitChild();
    /*0x16fc498*/ void StartBuffAfterInit();
    /*0x16fc4ac*/ void RemoveInitChild();
}

class Buff_NoLessHP : Buff_Base
{
    /*0x54*/ float m_fLessHPValue;

    /*0x16fc540*/ Buff_NoLessHP();
    /*0x16fc4c8*/ void InitChild();
    /*0x16fc504*/ void StartBuffAfterInit();
    /*0x16fc518*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x16fc52c*/ void RemoveInitChild();
}

class Buff_NoSkill : Buff_Base
{
    /*0x16fc57c*/ Buff_NoSkill();
    /*0x16fc548*/ void InitChild();
    /*0x16fc554*/ void StartBuffAfterInit();
    /*0x16fc568*/ void RemoveInitChild();
}

class Buff_NoSkill_ULT : Buff_Base
{
    /*0x16fc584*/ Buff_NoSkill_ULT();
}

class Buff_PARU_Defense_CC : Buff_Base
{
    /*0x54*/ float m_fAddDefensePercentage;
    /*0x58*/ Battle.CharacterStat m_AddDefenseStat;
    /*0x60*/ bool m_bAddDefenseStat;

    /*0x16fc870*/ Buff_PARU_Defense_CC();
    /*0x16fc58c*/ void InitChild();
    /*0x16fc5b0*/ void StartBuffAfterInit();
    /*0x16fc6c0*/ void RemoveInitChild();
    /*0x16fc790*/ void HandleCheckBuffCC();
}

class Buff_PARU_Defense_Miss : Buff_Base
{
    /*0x54*/ int m_nDefenseUpBuffID;

    /*0x16fca94*/ Buff_PARU_Defense_Miss();
    /*0x16fc878*/ void InitChild();
    /*0x16fc8b4*/ void StartBuffAfterInit();
    /*0x16fc9c4*/ void RemoveInitChild();
    /*0x16fca84*/ void HandleCheckMiss();
}

class Buff_PARU_DotHeal : Buff_Base
{
    /*0x58*/ System.Collections.Generic.List<Buff_PARU_DotHeal.PARU_DotHeal> m_lisDotHeal;
    /*0x60*/ float m_fDotHealTime;

    /*0x16fd028*/ Buff_PARU_DotHeal();
    /*0x16fca9c*/ void InitChild();
    /*0x16fcabc*/ void StartBuffAfterInit();
    /*0x16fccd4*/ void RemoveInitChild();
    /*0x16fce20*/ void HandleCheckRecieveDamage(CharacterBase _attacker, float _fDamage);
    /*0x16fcebc*/ void HandleCheckDotHeal();

    class PARU_DotHeal
    {
        /*0x10*/ float healAmount;
        /*0x14*/ float curTime;
        /*0x18*/ int tickCount;

        /*0xda52ec*/ PARU_DotHeal(float _healAmount, float _time);
    }
}

class Buff_Pirate : Buff_Base
{
    /*0x54*/ float m_fDrainMPRatio;
    /*0x58*/ float m_fDrainMPAmount;
    /*0x5c*/ float m_fDeathAddMPAmount;

    /*0x16fd510*/ Buff_Pirate();
    /*0x16fd0a0*/ void InitChild();
    /*0x16fd0c8*/ void StartBuffAfterInit();
    /*0x16fd2d4*/ void RemoveInitChild();
    /*0x16fd420*/ void HandleHit(CharacterBase _attacker, float _fDamage);
    /*0x16fd48c*/ void HandleDeath();
}

class Buff_Provoke : Buff_Base
{
    /*0x54*/ int m_nAwakeTime;

    /*0x1331cdc*/ Buff_Provoke();
    /*0x1331b88*/ void InitChild();
    /*0x1331c54*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x1331c80*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x1331c98*/ void RemoveInitChild();
}

class Buff_Provoke_Target : Buff_Provoke
{
    /*0x1331cec*/ Buff_Provoke_Target();
    /*0x1331ce4*/ CharacterBase GetBuffTarget();
}

class Buff_QUEEN_Mark : Buff_Base
{
    /*0x54*/ float m_fAddATKRatio;
    /*0x58*/ int m_nAddMP;
    /*0x5c*/ int m_nBuffID;
    /*0x60*/ float m_fCurrentHPRatio;
    /*0x68*/ Battle.CharacterStat m_AtkStat;

    /*0x13324a0*/ Buff_QUEEN_Mark();
    /*0x1331cf4*/ void InitChild();
    /*0x1331d54*/ void StartBuffAfterInit();
    /*0x1332064*/ void RemoveInitChild();
    /*0x1332290*/ void HandleCheckHP();
    /*0x1332384*/ void HandleCheckKills(CharacterBase _);
    /*0x13323ac*/ void HandleCheckDeath();
}

class Buff_QUEEN_NoLimit_Kills : Buff_Base
{
    /*0x13327bc*/ Buff_QUEEN_NoLimit_Kills();
    /*0x13324a8*/ void StartBuffAfterInit();
    /*0x13325d4*/ void RemoveInitChild();
    /*0x13326a8*/ void HandleCheckKills(CharacterBase _);
}

class Buff_QUEEN_Slow : Buff_Base
{
    /*0x1332804*/ Buff_QUEEN_Slow();
    /*0x13327c4*/ void StartBuffAfterInit();
    /*0x13327e4*/ void Renew();
}

class Buff_RABBIT_SIG_Invisible : Buff_Invisible
{
    /*0x1332a08*/ Buff_RABBIT_SIG_Invisible();
    /*0x133280c*/ void StartBuffAfterInit();
    /*0x1332928*/ void RemoveInitChild();
    /*0x13329f4*/ void HandleCheckAttack();
}

class Buff_RDRAGON_Mark : Buff_AddBuff_LessHP
{
    /*0x5c*/ int m_nBuffID_2;
    /*0x60*/ float m_fDistance;

    /*0x1332d94*/ Buff_RDRAGON_Mark();
    /*0x1332a10*/ void InitChild();
    /*0x1332a88*/ void StartBuffAfterInit();
    /*0x1332be4*/ void RemoveInitChild();
    /*0x1332cb0*/ void ActionLessHP();
    /*0x1332d80*/ void HandleUnitDeath();
}

class Buff_REDHEAD_Horror : Buff_Horror
{
    /*0x60*/ float m_fHitDamageMultRatio;
    /*0x64*/ bool m_bAddMult;

    /*0x1332f30*/ Buff_REDHEAD_Horror();
    /*0x1332d9c*/ void InitChild();
    /*0x1332dd4*/ void StartBuffAfterInit();
    /*0x1332e1c*/ void RemoveInitChild();
    /*0x1332e64*/ void SetMovePOS();
}

class Buff_Rabbit_Critical : Buff_Base
{
    /*0x54*/ float m_fAddCriticalAttack;
    /*0x58*/ float m_fAddCriticalLowHP;
    /*0x5c*/ float m_fLowHPRatio;

    /*0x13332b4*/ Buff_Rabbit_Critical();
    /*0x1332f38*/ void InitChild();
    /*0x1332f68*/ void StartBuffAfterInit();
    /*0x13330c4*/ void RemoveInitChild();
    /*0x13331bc*/ void HandleCheckAttack(CharacterBase _target);
}

class Buff_Redhood : Buff_MultHitDamage
{
    /*0x5c*/ float m_fAddHPRatio;

    /*0x1333540*/ Buff_Redhood();
    /*0x13332bc*/ void InitChild();
    /*0x13332f4*/ void StartBuffAfterInit();
    /*0x133342c*/ void RemoveInitChild();
    /*0x133350c*/ void HandleCheckCondition(CharacterBase _attacker, float _fDamage);
}

class Buff_Redhood_Blood : Buff_Blood
{
    /*0x64*/ float m_fBloodPercentage;

    /*0x13335c8*/ Buff_Redhood_Blood();
    /*0x1333548*/ void InitChild();
    /*0x1333580*/ void InitDotDamage();
}

class Buff_Reflection : Buff_Base
{
    /*0x54*/ float m_fReflectionRatio;

    /*0x13338a8*/ Buff_Reflection();
    /*0x13335d0*/ void InitChild();
    /*0x13335f0*/ void StartBuffAfterInit();
    /*0x1333728*/ void HandleCheckHit(CharacterBase _attacker, float _fDamage);
    /*0x13337d4*/ void RemoveInitChild();
}

class Buff_ReleaseBuff : Buff_Base
{
    /*0x54*/ int m_nBuffID;

    /*0x13338fc*/ Buff_ReleaseBuff();
    /*0x13338b0*/ void InitChild();
    /*0x13338ec*/ void RemoveWithUpdate();
}

class Buff_ReleaseBuff_Caster : Buff_ReleaseBuff
{
    /*0x1333918*/ Buff_ReleaseBuff_Caster();
    /*0x1333904*/ void RemoveWithUpdate();
}

class Buff_ReleaseBuff_P2 : Buff_ReleaseBuff
{
    /*0x133395c*/ Buff_ReleaseBuff_P2();
    /*0x1333920*/ void InitChild();
}

class Buff_ReleaseBuff_Removed : Buff_Base
{
    /*0x54*/ int m_nBuffID;

    /*0x13339b0*/ Buff_ReleaseBuff_Removed();
    /*0x1333964*/ void InitChild();
    /*0x13339a0*/ void RemoveWithoutUpdate();
}

class Buff_ReleaseBuff_Removed_P2 : Buff_ReleaseBuff_Removed
{
    /*0x1333a10*/ Buff_ReleaseBuff_Removed_P2();
    /*0x13339b8*/ void InitChild();
}

class Buff_ReleaseDamage_Magic : Buff_Base
{
    /*0x54*/ float m_fATKRatio;
    /*0x58*/ Battle.StatTransfer m_ReleaseTransfer;

    /*0x1333ba8*/ Buff_ReleaseDamage_Magic();
    /*0x1333a18*/ void InitChild();
    /*0x1333a38*/ void StartBuffAfterInit();
    /*0x1333b98*/ void RemoveInitChild();
}

class Buff_ReleaseDeath : Buff_Base
{
    /*0x1333bc8*/ Buff_ReleaseDeath();
    /*0x1333bb0*/ void RemoveInitChild();
}

class Buff_Release_AddMP : Buff_Base
{
    /*0x54*/ int m_nAddMP;

    /*0x1333c2c*/ Buff_Release_AddMP();
    /*0x1333bd0*/ void InitChild();
    /*0x1333c0c*/ void RemoveWithUpdate();
}

class Buff_Release_AddMP_P2 : Buff_Release_AddMP
{
    /*0x1333c70*/ Buff_Release_AddMP_P2();
    /*0x1333c34*/ void InitChild();
}

class Buff_Renew_Kill : Buff_Base
{
    /*0x1333eec*/ Buff_Renew_Kill();
    /*0x1333c78*/ void StartBuffAfterInit();
    /*0x1333db0*/ void HandleKillUnit(CharacterBase _killUnit);
    /*0x1333e18*/ void RemoveInitChild();
}

class Buff_Restore_HP : Buff_Base
{
    /*0x54*/ float m_fRestoreHP;
    /*0x58*/ bool m_bAddValue;

    /*0x1333f84*/ Buff_Restore_HP();
    /*0x1333ef4*/ void InitChild();
    /*0x1333f14*/ void StartBuffAfterInit();
    /*0x1333f4c*/ void RemoveInitChild();
}

class Buff_Restore_HP_MP : Buff_Restore_HP
{
    /*0x5c*/ float m_fRestoreMP;

    /*0x133405c*/ Buff_Restore_HP_MP();
    /*0x1333f8c*/ void InitChild();
    /*0x1333fb4*/ void StartBuffAfterInit();
    /*0x1334010*/ void RemoveInitChild();
}

class Buff_Restore_HP_P2 : Buff_Restore_HP
{
    /*0x133408c*/ Buff_Restore_HP_P2();
    /*0x1334064*/ void InitChild();
}

class Buff_Restore_MP : Buff_Base
{
    /*0x54*/ float m_fRecycleMP;
    /*0x58*/ bool m_bAddValue;

    /*0x1334124*/ Buff_Restore_MP();
    /*0x1334094*/ void InitChild();
    /*0x13340b4*/ void StartBuffAfterInit();
    /*0x13340ec*/ void RemoveInitChild();
}

class Buff_SUGAR_DOT_Heal : Buff_DOT_Damage
{
    /*0x1334264*/ Buff_SUGAR_DOT_Heal();
    /*0x133412c*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_SUGAR_Powder : Buff_Base
{
    /*0x54*/ float m_fMultRatio;

    /*0x13342cc*/ Buff_SUGAR_Powder();
    /*0x133426c*/ void InitChild();
    /*0x133428c*/ void StartBuffAfterInit();
    /*0x13342ac*/ void RemoveInitChild();
}

class Buff_Sacrifice : Buff_Base
{
    /*0x54*/ float m_fSacrificeDamageRatio;

    /*0x13345fc*/ Buff_Sacrifice();
    /*0x13342d4*/ void InitChild();
    /*0x13342f4*/ void StartBuffAfterInit();
    /*0x1334438*/ void RemoveInitChild();
    /*0x133450c*/ void HandleCheckHit(CharacterBase _attacker, float _fDamage);
}

class Buff_Shield : Buff_Base
{
    /*0x54*/ Battle.BuffOriginType m_eBuffOriginType;
    /*0x58*/ Battle.ShieldType m_eShieldType;
    /*0x5c*/ float m_fShieldAmount;
    /*0x60*/ float m_fCurShieldAmount;
    /*0x68*/ ParticleBase m_ShieldParticle;
    /*0x70*/ string m_sShieldParticleName;

    /*0x1334b64*/ Buff_Shield();
    /*0x1334604*/ void InitChild();
    /*0x1334644*/ void StartBuffAfterInit();
    /*0x13347a4*/ void SetShieldEffectName(string _sShieldEffectName);
    /*0x13347ac*/ void SetShieldEffectName();
    /*0x1334998*/ void CreateShieldEffect();
    /*0x13346b4*/ void SetShieldAmount();
    /*0x1334a44*/ void RemoveInitChild();
    /*0x1334ab0*/ void Renew();
    /*0x1334ad8*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x1334b10*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x1334b50*/ void RemoveWithAttack();
}

class Buff_Shield_Amount_Param0 : Buff_Shield
{
    /*0x1334bd0*/ Buff_Shield_Amount_Param0();
    /*0x1334b6c*/ void StartBuffAfterInit();
}

class Buff_Shield_BABA_SIG : Buff_Shield_Baba
{
    /*0x7c*/ float m_SIG_AddMP;
    /*0x80*/ int m_SIG_AddBuffID;

    /*0x1335120*/ Buff_Shield_BABA_SIG();
    /*0x1334bd8*/ void InitChild();
    /*0x1334d38*/ void StartBuffAfterInit();
    /*0x1334e78*/ void RemoveWithUpdate();
    /*0x1334eb8*/ void RemoveInitChild();
    /*0x1335054*/ void HandleHitAttack(CharacterBase _attacker, float _fDamage);
}

class Buff_Shield_Baba : Buff_Shield
{
    /*0x78*/ float m_fRecoveryHPRatio;

    /*0x1335128*/ Buff_Shield_Baba();
    /*0x1334d04*/ void InitChild();
    /*0x1335130*/ void SetShieldEffectName();
    /*0x1334fa0*/ void RemoveInitChild();
}

class Buff_Shield_FIANCE_SIG : Buff_Shield
{
    /*0x13351a8*/ Buff_Shield_FIANCE_SIG();
}

class Buff_Shield_RDRAGON_SIG : Buff_Shield
{
    /*0x78*/ int m_nAddMP;

    /*0x1335254*/ Buff_Shield_RDRAGON_SIG();
    /*0x13351b0*/ void InitChild();
    /*0x1335200*/ void RemoveWithAttack();
}

class Buff_Shield_Slime : Buff_Shield
{
    /*0x13353f8*/ Buff_Shield_Slime();
    /*0x133525c*/ void CreateShieldEffect();
}

class Buff_Silence : Buff_Base
{
    /*0x1335444*/ Buff_Silence();
    /*0x1335400*/ void InitChild();
    /*0x1335410*/ void StartBuffAfterInit();
    /*0x133543c*/ void RemoveInitChild();
}

class Buff_Sleep : Buff_Base
{
    /*0x13357b0*/ Buff_Sleep();
    /*0x133544c*/ void InitChild();
    /*0x133545c*/ void StartBuffAfterInit();
    /*0x1335518*/ void AddCheckDamageAction();
    /*0x1335630*/ void RemoveCheckDamageAction();
    /*0x13356f4*/ void StartBuffFromOutside();
    /*0x133571c*/ void RemoveInitChild();
    /*0x1335790*/ void HandleCheckHit(CharacterBase _, float _fDamage);
}

class Buff_Stack_Add : Buff_Base
{
    /*0x54*/ int m_nStackCondition;
    /*0x58*/ int m_nAddBuffID;

    /*0x1335868*/ Buff_Stack_Add();
    /*0x13357b8*/ void InitChild();
    /*0x1335810*/ void StartBuffAfterInit();
}

class Buff_Stack_Change : Buff_Base
{
    /*0x54*/ int m_nNeedBuffStack;
    /*0x58*/ int m_nChangeBuffID;

    /*0x1335950*/ Buff_Stack_Change();
    /*0x1335870*/ void InitChild();
    /*0x13358c8*/ void StartBuffAfterInit();
}

class Buff_Stat : Buff_Base
{
    /*0x58*/ Battle.CharacterStat m_Stat;
    /*0x60*/ Battle.BuffOriginType m_eBuffOriginType;

    /*0x1335ad4*/ Buff_Stat();
    /*0x1335958*/ void InitChild();
    /*0x1335984*/ void StartBuffAfterInit();
    /*0x1335ab8*/ void RemoveInitChild();
}

class Buff_Stun : Buff_Base
{
    /*0x1335c1c*/ Buff_Stun();
    /*0x1335adc*/ void InitChild();
    /*0x1335aec*/ void StartBuffAfterInit();
    /*0x1335b94*/ void StartBuffFromOutside();
    /*0x1335bbc*/ void RemoveInitChild();
}

class Buff_Swordcat_Dodge : Buff_Base
{
    /*0x54*/ float m_fAddTime;

    /*0x13360c4*/ Buff_Swordcat_Dodge();
    /*0x1335c24*/ void InitChild();
    /*0x1335c5c*/ void StartBuffAfterInit();
    /*0x1335da0*/ void Renew();
    /*0x1335ee4*/ void HandleCheckAvoid(CharacterBase _attacker);
    /*0x1335fd8*/ void RemoveInitChild();
}

class Buff_WATER_Blood_Mult : Buff_Base
{
    /*0x54*/ float m_fBloodMult;
    /*0x58*/ bool m_bAddMult;

    /*0x1336160*/ Buff_WATER_Blood_Mult();
    /*0x13360cc*/ void InitChild();
    /*0x13360f0*/ void StartBuffAfterInit();
    /*0x1336128*/ void RemoveInitChild();
}

class Buff_WATER_Freeze : Buff_Freeze
{
    /*0x5c*/ float m_fAddHPRatio;
    /*0x60*/ float m_nCureDuration;
    /*0x64*/ int m_nAddMP;
    /*0x68*/ float m_fCurDeltaTime_AddHP;
    /*0x6c*/ float m_fCurDeltaTime_Cure;

    /*0x1336368*/ Buff_WATER_Freeze();
    /*0x1336168*/ void InitChild();
    /*0x13361cc*/ void StartBuffAfterInit();
    /*0x13361fc*/ void UpdateChild();
}

class Passive_AKIMBO_Cooltime : Passive_Cooltime
{
    /*0x1144198*/ Passive_AKIMBO_Cooltime();
    /*0x11440b8*/ void InitChild();
}

class Passive_AddBuff_CC : Passive_Base
{
    /*0x1144470*/ Passive_AddBuff_CC();
    /*0x11441a8*/ void InitChild();
    /*0x114438c*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_Attack : Passive_Base
{
    /*0xf0*/ int m_nAttackCount;
    /*0xf4*/ int m_nCurAttackCount;

    /*0x1144688*/ Passive_Attack();
    /*0x1144480*/ void InitChild();
    /*0x1144668*/ bool CheckCondition_Child();
}

class Passive_AttackSkillFX : Passive_Base
{
    /*0x11446d4*/ Passive_AttackSkillFX();
    /*0x1144690*/ void InitChild();
    /*0x11446b0*/ bool CheckCondition_Child();
}

class Passive_Avoid : Passive_Base
{
    /*0xf0*/ int m_nAvoidCount;
    /*0xf4*/ int m_nCurAvoidCount;

    /*0x1144748*/ Passive_Avoid();
    /*0x11446dc*/ void InitChild();
    /*0x1144728*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_BULLYGIRL_SIG_Shield_Removed : Passive_Base
{
    /*0x1144944*/ Passive_BULLYGIRL_SIG_Shield_Removed();
    /*0x1144750*/ void InitChild();
    /*0x1144934*/ bool CheckCondition_Child(int _nBuffEffectType, bool _bForceRemoved);
}

class Passive_Base
{
    /*0x10*/ int <PassiveID>k__BackingField;
    /*0x14*/ bool <IsSignature>k__BackingField;
    /*0x18*/ InGameController m_InGameController;
    /*0x20*/ CharacterBase m_Character;
    /*0x28*/ SkillFXTrigger m_SkillFXTrigger;
    /*0x80*/ Battle.ColliderData m_SightCollider;
    /*0x8c*/ Battle.AttackType m_eAttackType;
    /*0x90*/ Battle.PassiveConditionType m_ePassiveCondition;
    /*0x98*/ TableData.TableData_Skillbase m_tSkillBase;
    /*0xa0*/ float m_fCoolTime;
    /*0xa4*/ float m_fCurCoolTime;
    /*0xa8*/ bool m_bCoolTimeNone;
    /*0xb0*/ System.Action m_OnRemoveInit;
    /*0xb8*/ System.Action m_ActionRemove;
    /*0xc0*/ System.Action<bool> m_ActionRemove_bool;
    /*0xc8*/ System.Action<int> m_ActionRemove_int;
    /*0xd0*/ System.Action<int, bool> m_ActionRemove_int_bool;
    /*0xd8*/ System.Action<float> m_ActionRemove_float;
    /*0xe0*/ System.Action<CharacterBase> m_ActionRemove_unit;
    /*0xe8*/ System.Action<CharacterBase, float> m_ActionRemove_unit_float;

    /*0x1144478*/ Passive_Base();
    /*0x114494c*/ int get_PassiveID();
    /*0x1144954*/ void set_PassiveID(int value);
    /*0x114495c*/ bool get_IsSignature();
    /*0x1144964*/ void set_IsSignature(bool value);
    /*0x1144970*/ bool Init(CharacterBase _character, int _nSkillID);
    /*0x11446ac*/ void InitChild();
    /*0x1144e20*/ void RemoveInit();
    /*0x1144e6c*/ void HandleRemoveInit();
    /*0x1144f2c*/ void RemoveInitChild();
    /*0x1144f30*/ void SetCooltime();
    /*0x1144f6c*/ void StartFXAll(bool _bSetCooltime);
    /*0x11444cc*/ void SetActionStartFX(ref System.Action _action);
    /*0x1144fd4*/ void SetActionStartFX(ref System.Action<bool> _action);
    /*0x114519c*/ void SetActionStartFX(ref System.Action<int> _action);
    /*0x114476c*/ void SetActionStartFX(ref System.Action<int, bool> _action);
    /*0x1145364*/ void SetActionStartFX(ref System.Action<float> _action);
    /*0x11441c4*/ void SetActionStartFX(ref System.Action<CharacterBase> _action);
    /*0x114552c*/ void SetActionStartFX(ref System.Action<CharacterBase, float> _action);
    /*0x11456f4*/ bool CheckCondition_Common();
    /*0x1145768*/ void StartFX();
    /*0x11457bc*/ void StartFX(bool _bValue);
    /*0x114581c*/ void StartFX(int _nValue);
    /*0x114587c*/ void StartFX(int _nValue, bool _bValue);
    /*0x11458f0*/ void StartFX(float _fValue);
    /*0x1145958*/ void StartFX(CharacterBase _unit);
    /*0x11459b8*/ void StartFX(CharacterBase _unit, float _fValue);
    /*0x1145a30*/ bool CheckCondition_Child();
    /*0x1145a38*/ bool CheckCondition_Child(bool _bValue);
    /*0x1145a40*/ bool CheckCondition_Child(int _nValue);
    /*0x1145a48*/ bool CheckCondition_Child(int _nValue, bool _bValue);
    /*0x1145a50*/ bool CheckCondition_Child(float _fValue);
    /*0x1145a58*/ bool CheckCondition_Child(CharacterBase _unit);
    /*0x1145a60*/ bool CheckCondition_Child(CharacterBase _unit, float _fValue);
    /*0x1145a68*/ void HandleCheckCoolTime();
    /*0x1144454*/ void SetPassiveTarget(CharacterBase _target);
    /*0x1144440*/ bool get_IsPlayer();
    /*0x1145afc*/ void <SetActionStartFX>b__33_0();
    /*0x1145ba8*/ void <SetActionStartFX>b__34_0();
    /*0x1145c68*/ void <SetActionStartFX>b__35_0();
    /*0x1145d28*/ void <SetActionStartFX>b__36_0();
    /*0x1145de8*/ void <SetActionStartFX>b__37_0();
    /*0x1145ea8*/ void <SetActionStartFX>b__38_0();
    /*0x1145f68*/ void <SetActionStartFX>b__39_0();
}

class Passive_Chance : Passive_Base
{
    /*0xf0*/ float m_fPercentage;

    /*0x1146114*/ Passive_Chance();
    /*0x1146028*/ void InitChild();
    /*0x1146058*/ bool CheckCondition_Child();
}

class Passive_ChangeFX : Passive_Base
{
    /*0xf0*/ int m_nPrevFXID;
    /*0xf4*/ int m_nChangeFXID;

    /*0x11461b4*/ Passive_ChangeFX();
    /*0x114611c*/ void InitChild();
    /*0x1146190*/ void RemoveInitChild();
}

class Passive_Cleric_Retreat : Passive_Base
{
    /*0xf0*/ float m_fConditionAllyHPPercent;

    /*0x114646c*/ Passive_Cleric_Retreat();
    /*0x11461bc*/ void InitChild();
    /*0x11461ec*/ bool CheckCondition_Child();
}

class Passive_Cooltime : Passive_Base
{
    /*0x11441a0*/ Passive_Cooltime();
    /*0x114417c*/ void InitChild();
}

class Passive_Critical : Passive_Base
{
    /*0xf0*/ int m_nCriticalCount;
    /*0xf4*/ int m_nCurCriticalCount;

    /*0x11464e0*/ Passive_Critical();
    /*0x1146474*/ void InitChild();
    /*0x11464c0*/ bool CheckCondition_Child();
}

class Passive_DEATHSCYTHE_SIG_Death : Passive_DeathAlly
{
    /*0xfc*/ Battle.ColliderData rangeCollider;

    /*0x1146788*/ Passive_DEATHSCYTHE_SIG_Death();
    /*0x11464e8*/ void InitChild();
    /*0x1146610*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_Damaged : Passive_Base
{
    /*0xf0*/ int m_nDamagedCount;
    /*0xf4*/ int m_nCurDamagedCount;

    /*0x1146834*/ Passive_Damaged();
    /*0x1146798*/ void InitChild();
    /*0x11467f4*/ bool CheckCondition_Child(CharacterBase _attacker, float _fDamage);
}

class Passive_Damaged_Chance : Passive_Base
{
    /*0xf0*/ float m_fChancePercentage;

    /*0x114691c*/ Passive_Damaged_Chance();
    /*0x114683c*/ void InitChild();
    /*0x114687c*/ bool CheckCondition_Child(CharacterBase _attacker, float _fDamage);
}

class Passive_Death : Passive_Base
{
    /*0x1146940*/ Passive_Death();
    /*0x1146924*/ void InitChild();
}

class Passive_DeathAlly : Passive_Base
{
    /*0xf0*/ bool m_bPlayer;
    /*0xf4*/ int m_nDeathCount;
    /*0xf8*/ int m_nCurDeathCount;

    /*0x1146790*/ Passive_DeathAlly();
    /*0x114659c*/ void InitChild();
    /*0x1146948*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_Death_Target_Attacker : Passive_Death
{
    /*0x1146a30*/ Passive_Death_Target_Attacker();
    /*0x1146a0c*/ bool CheckCondition_Child();
}

class Passive_Free : Passive_Base
{
    /*0xf0*/ Passive_Free.FreeType m_eFreeType;

    /*0x1146b04*/ Passive_Free();
    /*0x1146a38*/ void InitChild();
    /*0x1146a8c*/ bool CheckCondition_Child();

    enum FreeType
    {
        FREE = 0,
        NOTFREE = 1,
    }
}

class Passive_HP : Passive_Base
{
    /*0xf0*/ bool m_bHPOver;
    /*0xf4*/ float m_fHPRatio;

    /*0x1146bf0*/ Passive_HP();
    /*0x1146b0c*/ void InitChild();
    /*0x1146b7c*/ bool CheckCondition_Child();
}

class Passive_HP_Change : Passive_HP
{
    /*0x1146c68*/ Passive_HP_Change();
    /*0x1146bf8*/ void InitChild();
}

class Passive_HP_EVILPET : Passive_HP
{
    /*0x1146d10*/ Passive_HP_EVILPET();
    /*0x1146c70*/ void InitChild();
    /*0x1146cb4*/ bool CheckCondition_Common();
}

class Passive_HitBuff_CC : Passive_Base
{
    /*0x1146d34*/ Passive_HitBuff_CC();
    /*0x1146d18*/ void InitChild();
}

class Passive_Kill : Passive_Base
{
    /*0x1146d58*/ Passive_Kill();
    /*0x1146d3c*/ void InitChild();
}

class Passive_LADYDEATH_UseSkill : Passive_UseSkillSlot
{
    /*0x1146d78*/ Passive_LADYDEATH_UseSkill();
    /*0x1146d60*/ bool CheckCondition_Child(int _nSlotNumber);
}

class Passive_PAJAMA_Invisible : Passive_Base
{
    /*0x1146dc8*/ Passive_PAJAMA_Invisible();
    /*0x1146d88*/ void InitChild();
    /*0x1146da4*/ bool CheckCondition_Child();
}

class Passive_RABBIT_HP : Passive_Base
{
    /*0xf0*/ float m_fHPUnderRatio;
    /*0xf4*/ float m_fHPHealRatio;

    /*0x1146f94*/ Passive_RABBIT_HP();
    /*0x1146dd0*/ void InitChild();
    /*0x1146e20*/ bool CheckCondition_Child(CharacterBase _unit, float _fValue);
}

class Passive_REDHOOD_NotFree : Passive_Free
{
    /*0xf4*/ bool m_bSignatureOn;

    /*0x1146ff8*/ Passive_REDHOOD_NotFree();
    /*0x1146f9c*/ void InitChild();
    /*0x1146fe4*/ bool CheckCondition_Child();
}

class Passive_SABRE_Launch : Passive_Base
{
    /*0x1147274*/ Passive_SABRE_Launch();
    /*0x1147000*/ void InitChild();
    /*0x114701c*/ bool CheckCondition_Child();
}

class Passive_SHAMAN_Horror : Passive_Base
{
    /*0x1147404*/ Passive_SHAMAN_Horror();
    /*0x114727c*/ void InitChild();
    /*0x1147298*/ bool CheckCondition_Child();
}

class Passive_SHP : Passive_Base
{
    /*0x1147434*/ Passive_SHP();
    /*0x114740c*/ void InitChild();
    /*0x1147428*/ bool CheckCondition_Child(float _fValue);
}

class Passive_Start : Passive_Base
{
    /*0x1147458*/ Passive_Start();
    /*0x114743c*/ void InitChild();
}

class Passive_StartSkillFX : Passive_Base
{
    /*0xf0*/ int m_nStartSkillFXID;

    /*0x114758c*/ Passive_StartSkillFX();
    /*0x11474d4*/ void InitChild();
    /*0x114757c*/ bool CheckCondition_Child(int _nValue);
}

class Passive_StartSkill : Passive_Base
{
    /*0xf0*/ int m_nSkillUseCount;
    /*0xf4*/ int m_nCurSkillUseCount;

    /*0x11474cc*/ Passive_StartSkill();
    /*0x1147460*/ void InitChild();
    /*0x11474ac*/ bool CheckCondition_Child();
}

class Passive_UseSkillSlot : Passive_Base
{
    /*0xf0*/ int m_nSlotNumber;
    /*0xf4*/ int m_nSkillUseCount;
    /*0xf8*/ int m_nCurSkillUseCount;

    /*0x1146d80*/ Passive_UseSkillSlot();
    /*0x1147594*/ void InitChild();
    /*0x11475fc*/ bool CheckCondition_Child(int _nSlotNumber);
}

struct SkillFXTrigger
{
    /*0x10*/ Battle.ColliderData SightCollider;
    /*0x1c*/ Battle.AttackType AttackType;
    /*0x20*/ ObjectBase Owner;
    /*0x28*/ CharacterBase Character;
    /*0x30*/ int SkillID;
    /*0x34*/ int SkillLV;
    /*0x38*/ bool IsPlayer;
    /*0x40*/ System.Collections.Generic.List<SkillFX_Base> m_lisSkillFX;
    /*0x48*/ System.Collections.Generic.Dictionary<int, SkillFX_Base> m_dicSkillFX;
    /*0x50*/ string <HitEffectName>k__BackingField;
    /*0x58*/ bool <UseHitEffect>k__BackingField;
    /*0x5c*/ int <SkillSlot>k__BackingField;
    /*0x60*/ bool <IsPassive>k__BackingField;
    /*0x61*/ bool <Initialized>k__BackingField;

    /*0xaa2f74*/ SkillFXTrigger(ObjectBase _owner, int _nSkillID, int _nSkillLV, Battle.AttackType _eAttackType, ref Battle.ColliderData _sightCollider, SkillFXTrigger.SkillTriggerType _eTriggerType, string _sHitEffectName, int[] _arrSkillFXID);
    /*0xaa2f84*/ SkillFXTrigger(ObjectBase _owner, int _nArtifactID, string _sHitEffectName, float[] _arrParams);
    /*0xaa2e7c*/ string get_HitEffectName();
    /*0xaa2e84*/ void set_HitEffectName(string value);
    /*0xaa2e8c*/ bool get_UseHitEffect();
    /*0xaa2e94*/ void set_UseHitEffect(bool value);
    /*0xaa2ea0*/ int get_SkillSlot();
    /*0xaa2ea8*/ void set_SkillSlot(int value);
    /*0xaa2eb0*/ bool get_IsPassive();
    /*0xaa2eb8*/ void set_IsPassive(bool value);
    /*0xaa2ec4*/ bool get_Initialized();
    /*0xaa2ecc*/ void set_Initialized(bool value);
    /*0xaa2ed8*/ float get_DamageMULT();
    /*0xaa2f04*/ float get_DamageMULT_Critical();
    /*0xaa2f0c*/ Battle.TargetType1 get_GetBaseTargetType1();
    /*0xaa2f14*/ Battle.TargetType2 get_GetBaseTargetType2();
    /*0xaa2f1c*/ Battle.TargetType3 get_GetBaseTargetType3();
    /*0xaa2f24*/ int get_GetSkillFXCount();
    /*0xaa2f8c*/ bool StartFX(int _nSkillFXID);
    /*0xaa2f94*/ bool StartFX(int _nSkillFXID, SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0xaa2f9c*/ void StartFXAll();
    /*0xaa2fa4*/ void StartFXAll(SkillFX_Base.SkillFX_Param[] _params);
    /*0xaa2fac*/ void SetParams(SkillFX_Base.SkillFX_Param[] _params);
    /*0xaa2fb4*/ void AddSkillFX(int _nSkillFXID, int _nSkillLV);
    /*0xaa2fbc*/ void RemoveSkillFX(SkillFX_Base _skillFX, bool _bCallRemoveInit);
    /*0xaa2fc8*/ void RemoveSkillFXAll(bool _bForceRemoveInit);
    /*0xaa2fd4*/ void HandleRemoveSkillFXAll();
    /*0xaa2fdc*/ SkillFX_Base GetSkillFXClass(int _nSkillFXID, int _nSkillLV);
    /*0xaa2fe0*/ float GetStat(Battle.CharacterStat.StatType _eStatType);
    /*0xaa2ffc*/ bool CheckSkillCritical();
    /*0xaa3004*/ void SetHitEffectName(string _sEffectName);

    enum SkillTriggerType
    {
        NONE = 0,
        SKILL = 1,
        PROJECTILE = 2,
        ARTIFACT = 3,
        SIGNATURE = 4,
    }
}

class SkillFX_AddMP : SkillFX_Attack
{
    /*0x164*/ int m_nAddMP;

    /*0x1515224*/ SkillFX_AddMP();
    /*0x1516a7c*/ void InitChild();
    /*0x1516ab8*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_AKIMBO_0_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nFindSkillFXID;
    /*0x168*/ float m_fAddDamageRatio;
    /*0x16c*/ bool m_bMagnum;
    /*0x170*/ TableData.TableData_Skillfx m_SkillFXData;

    /*0x1515010*/ SkillFX_AKIMBO_0_FX1();
    /*0x151539c*/ void InitChild();
    /*0x15155b0*/ void StartFXChild();
    /*0x15156ec*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x1515b14*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_AKIMBO_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageRatio;
    /*0x168*/ bool m_bMagnum;
    /*0x16c*/ int m_nTargetIndex;
    /*0x170*/ bool m_bTargetSelect;

    /*0x1515014*/ SkillFX_AKIMBO_1_FX1();
    /*0x1515c98*/ void InitChild();
    /*0x1515cb8*/ void StartFXChild();
    /*0x1515da8*/ bool FindTarget(CharacterBase _except);
    /*0x1516138*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x15161b8*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_AKIMBO_1_FX2 : SkillFX_Base
{
    /*0x1515018*/ SkillFX_AKIMBO_1_FX2();
    /*0x15161c8*/ void StartFXChild();
}

class SkillFX_AKIMBO_SIG_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_SIG_MagnumBuffID;
    /*0x168*/ int m_SIG_AddBuffCount;

    /*0x1515078*/ SkillFX_AKIMBO_SIG_FX1();
    /*0x15163d0*/ void CheckBuff(int _nAddBuffID, bool _bUseMPPay);
}

class SkillFX_AddHP_Ratio : SkillFX_Attack
{
    /*0x164*/ float m_fAddHPRatio;

    /*0x1515228*/ SkillFX_AddHP_Ratio();
    /*0x15168cc*/ void InitChild();
    /*0x15168ec*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
    /*0x1516994*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Attack : SkillFX_Base
{
    /*0x1515090*/ SkillFX_Attack();
    /*0x151569c*/ void StartFXChild();
    /*0x1516ad4*/ void CheckAttack();
    /*0x1516b94*/ void OnKills();
}

class SkillFX_Attack_AddMP : SkillFX_Attack
{
    /*0x164*/ int m_nAddMP;

    /*0x15150f0*/ SkillFX_Attack_AddMP();
    /*0x1516b98*/ void InitChild();
    /*0x1516c1c*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_Attack_BuffExit : SkillFX_Attack
{
    /*0x164*/ int m_nRefBuffID;
    /*0x168*/ bool m_bBuffExit;

    /*0x15150f4*/ SkillFX_Attack_BuffExit();
    /*0x1516db8*/ void InitChild();
    /*0x1516f14*/ void StartFXChild();
    /*0x1516f70*/ void HandleBuffExit(int _nBuffID, bool _b);
    /*0x1516fb8*/ void ExitFXChild();
}

class SkillFX_Attack_BuffExit_Force : SkillFX_Attack_BuffExit
{
    /*0x15150f8*/ SkillFX_Attack_BuffExit_Force();
    /*0x1517084*/ void HandleBuffExit(int _nBuffID, bool _bForceRemove);
}

class SkillFX_BABA_3_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fCurTime;
    /*0x168*/ float m_fTimeTick;
    /*0x16c*/ float m_fAddATK;
    /*0x170*/ float m_fAddATK_Under50;
    /*0x174*/ float m_fDecreaseSPD;
    /*0x178*/ float m_fCurAddATK;
    /*0x17c*/ float m_fCurDecreaseSPD;
    /*0x180*/ float m_fDrainHPRatio;
    /*0x184*/ int m_nDotHealBuffID;
    /*0x188*/ int m_nMaxCount;
    /*0x18c*/ int m_nCurAddCount;
    /*0x190*/ Battle.CharacterStat m_AddStat;

    /*0x1514f2c*/ SkillFX_BABA_3_FX1();
    /*0x15170d4*/ void InitChild();
    /*0x1517334*/ void HandleCheckCondition();
    /*0x1517524*/ void HandleCheckKills(CharacterBase _target);
    /*0x1517688*/ void ExitFXChild();
}

class SkillFX_BLACKSMITH_1_FX1 : SkillFX_Attack
{
    /*0x164*/ Battle.ColliderData m_EffectCollider;
    /*0x170*/ float m_fDamagePercent;
    /*0x174*/ Battle.StatTransfer m_StatTransferTmp;
    /*0x1a8*/ System.Collections.Generic.List<CharacterBase> m_lisEffectTarget;

    /*0x1514f24*/ SkillFX_BLACKSMITH_1_FX1();
    /*0x15177fc*/ void InitChild();
    /*0x1517870*/ void GiveDamageToTarget(CharacterBase _target);
}

class SkillFX_BLACKSMITH_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ int m_nNeedBuffCount;
    /*0x16c*/ int m_nAddBuffID;

    /*0x1514f28*/ SkillFX_BLACKSMITH_2_FX1();
    /*0x1517b14*/ void InitChild();
    /*0x1517b88*/ void CheckBuff();
}

class SkillFX_BROWNPONY_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fHealPercentage;

    /*0x1514eb8*/ SkillFX_BROWNPONY_3_FX1();
    /*0x1517dbc*/ void InitChild();
    /*0x1517f60*/ void HandleCheckCondition(CharacterBase _target, int _nSkillFXID, float _fDamage);
    /*0x1518254*/ void ExitFXChild();
}

class SkillFX_BULLYGIRL_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fEffectLevel;
    /*0x168*/ float m_fDrainMPRatio;

    /*0x1514ec0*/ SkillFX_BULLYGIRL_3_FX1();
    /*0x1518380*/ void CheckAttack();
}

class SkillFX_BULLYGIRL_4_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fHPRatioTarget;
    /*0x168*/ float m_fDEFRatio;
    /*0x16c*/ float m_fATKRatio;
    /*0x170*/ Battle.CharacterStat AddStat;
    /*0x178*/ float m_fPrevHPRatio;
    /*0x17c*/ float m_fCurHPRatio;
    /*0x180*/ int m_nCurCount;

    /*0x1514ec4*/ SkillFX_BULLYGIRL_4_FX1();
    /*0x151859c*/ void InitChild();
    /*0x15186e4*/ void CheckCondition();
    /*0x15188ec*/ void ExitFXChild();
}

class SkillFX_Base
{
    static /*0x0*/ bool IsTick;
    /*0x10*/ int <ID>k__BackingField;
    /*0x14*/ int <SkillLV_Table>k__BackingField;
    /*0x18*/ TableData.TableData_Skillfx SkillFXData;
    /*0x20*/ bool <IsCritical>k__BackingField;
    /*0x21*/ bool <IsStart>k__BackingField;
    /*0x22*/ bool <IsIgnoreRemoveInit>k__BackingField;
    /*0x28*/ long <UniqueNumber>k__BackingField;
    /*0x30*/ InGameController m_InGameController;
    /*0x38*/ ObjectBase m_Owner;
    /*0x40*/ CharacterBase m_Target;
    /*0x48*/ System.Collections.Generic.List<CharacterBase> m_lisTarget;
    /*0x50*/ System.Collections.Generic.List<CharacterBase> m_lisCollisionTarget;
    /*0x58*/ SkillFXTrigger m_SkillFXTrigger;
    /*0xb0*/ Battle.StatTransfer m_StatTransfer;
    /*0xe0*/ Battle.ColliderData m_RangeCollider;
    /*0xec*/ Battle.TargetType1 m_TargetType1;
    /*0xf0*/ Battle.TargetType2 m_TargetType2;
    /*0xf4*/ Battle.TargetType3 m_TargetType3;
    /*0xf8*/ Battle.RangePositionType m_RangePOSType;
    /*0xfc*/ Battle.RangeDirectionType m_RangeDIRType;
    /*0x100*/ Battle.CharacterStat.StatType m_COEFType;
    /*0x104*/ Battle.SkillFXType m_SkillFXType;
    /*0x108*/ Battle.Hit_WpnType m_eHitWeaponType;
    /*0x10c*/ Battle.AttackType m_eAttackType;
    /*0x110*/ Battle.BuffConditionType m_BuffConditionType;
    /*0x114*/ Battle.BuffTargetType m_BuffTargetType;
    /*0x118*/ Battle.DamageResult m_damageResult;
    /*0x120*/ Battle.DamageResult m_damageResult_Origin;
    /*0x128*/ System.Action<System.ValueTuple<CharacterBase, float>> OnDamageWithTarget;
    /*0x130*/ System.Collections.Generic.List<CharacterBase> m_lisExceptCollision;
    /*0x138*/ int m_nMaxCollisionCount;
    /*0x13c*/ bool m_bPlayer;
    /*0x140*/ UnityEngine.Vector2 m_vStartPOS;
    /*0x148*/ bool m_bSetStartPOS;
    /*0x149*/ bool m_bCheckCollisionCharm;
    /*0x14a*/ bool m_bCollisionUnitExcept;
    /*0x14b*/ bool m_bSetCollisionList;
    /*0x150*/ SkillFX_Base.SkillFX_Param[] m_arrParams;
    /*0x158*/ bool m_bMPPayWithAddBuff;
    /*0x15c*/ float m_fMPPay;
    /*0x160*/ int m_nAddBuffCount;

    static /*0x151a404*/ SkillFX_Base();
    /*0x151522c*/ SkillFX_Base();
    /*0x15189b4*/ int get_ID();
    /*0x15189bc*/ void set_ID(int value);
    /*0x15189c4*/ int get_SkillBaseID();
    /*0x15189cc*/ int get_SkillLV_Table();
    /*0x15189d4*/ void set_SkillLV_Table(int value);
    /*0x15189dc*/ int get_SkillLV_Trigger();
    /*0x15189e4*/ Battle.TargetType1 get_GetTargetType1();
    /*0x15189ec*/ Battle.TargetType2 get_GetTargetType2();
    /*0x15189f4*/ Battle.TargetType3 get_GetTargetType3();
    /*0x1516078*/ bool get_IsPlayer();
    /*0x15189fc*/ bool get_IsCritical();
    /*0x1518a04*/ void set_IsCritical(bool value);
    /*0x1518a10*/ bool get_IsProjectile();
    /*0x1518a30*/ bool get_IsPassive();
    /*0x1518a38*/ bool get_IsStart();
    /*0x1518a40*/ void set_IsStart(bool value);
    /*0x1518a4c*/ UnityEngine.Vector2 get_GetStartPOS();
    /*0x1518a58*/ bool get_IsSetStartPOS();
    /*0x1518a60*/ Battle.ColliderData get_GetRangeCollider();
    /*0x1518a70*/ bool get_IsIgnoreRemoveInit();
    /*0x1518a78*/ void set_IsIgnoreRemoveInit(bool value);
    /*0x1518a84*/ long get_UniqueNumber();
    /*0x1518a8c*/ void set_UniqueNumber(long value);
    /*0x1516b8c*/ bool get_IsKilled();
    /*0x1515598*/ CharacterBase get_m_Character();
    /*0x1518a94*/ int get_BuffID();
    /*0x1518ab0*/ float get_DamageMult();
    /*0x1518adc*/ float get_DamageMult_Critical();
    /*0x15163c0*/ Battle.ColliderData get_m_SightCollider();
    /*0x15148ac*/ bool Init(int _nID, int _nSkillLV, SkillFXTrigger _skillFXTrigger);
    /*0x1518ae4*/ void InitEvents();
    /*0x1515524*/ void InitChild();
    /*0x151298c*/ void StartFX();
    /*0x1518aec*/ void StartFX(SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0x15163b0*/ void StartFXChild();
    /*0x1514be0*/ void RemoveInitFX();
    /*0x1518c40*/ void ExitFX();
    /*0x1512b10*/ void SetParams(SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0x1518cac*/ void ExitFXChild();
    /*0x1515f08*/ bool FindTarget(CharacterBase _except);
    /*0x1518cb0*/ bool FindTarget(System.Collections.Generic.List<CharacterBase> _exceptList);
    /*0x1516080*/ void SetTarget(CharacterBase _target);
    /*0x1518d64*/ bool CheckAttackCollision();
    /*0x15193d8*/ System.Collections.Generic.List<CharacterBase> GetUnitListWithMaxCollisionUnitCount(System.Collections.Generic.List<CharacterBase> _list);
    /*0x1518ff8*/ System.Collections.Generic.List<CharacterBase> GetUnitListWithMaxCollisionUnitCount(System.Collections.Generic.List<CharacterBase> _list, UnityEngine.Vector2 _vCenter);
    /*0x1519414*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
    /*0x1519510*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x15195cc*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x151971c*/ void KnockBackProcess(CharacterBase _target, float _fKnockBackDistance);
    /*0x1516c60*/ void CalcDamage(CharacterBase _target);
    /*0x1517a88*/ void GiveDamageToTarget(CharacterBase _target);
    /*0x15197f4*/ void InvokeEventsBeforeCalcDamage(CharacterBase _target);
    /*0x151988c*/ void InvokeEventsAfterCalcDamage(CharacterBase _target);
    /*0x151576c*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x15199e8*/ void RecieveAddDamage(CharacterBase _target, ref Battle.StatTransfer _stat);
    /*0x1519b58*/ float GetAddDamageMultRatio(CharacterBase _target);
    /*0x1517d7c*/ void CheckBuff();
    /*0x1516584*/ void CheckBuff(int _nAddBuffID, bool _bUseMPPay);
    /*0x1519b60*/ bool CheckBuffAddible(CharacterBase _target, int _nAddBuffID, System.Nullable<float> _fParameter);
    /*0x1517d68*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float[] _arrParams);
    /*0x1515b24*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
    /*0x1517654*/ void AddBuffToOwner(CharacterBase _caster, int _nBuffID, float[] _arrParams);
    /*0x1519ca4*/ bool CheckSignatureEnable(int _nSignatureLV);
    /*0x1519cc8*/ TableData.TableData_Skillextra GetSignatureData(int _nSignatureLV, Battle.SkillExtraID _eExtraID);
    /*0x1519cec*/ void SetCollisionUnitExcept(bool _bSet);
    /*0x1519cf8*/ void ClearCollisionUnitExcept();
    /*0x1519d54*/ SkillFX_Base.SkillFX_ParamsType GetParamsType();
    /*0x1519d8c*/ Battle.StatTransfer GetStatTransfer();
    /*0x15180dc*/ Battle.StatTransfer GetStarTransferWithDamage(Battle.AttackType _eAttackType, float _fDamage);
    /*0x1519dd8*/ Battle.StatTransfer GetStatTransferWithCOEF(Battle.AttackType _eAttackType, float _fCOEFNum);
    /*0x1519e6c*/ Battle.StatTransfer GetStatTransferWithCOEF(Battle.CharacterStat.StatType _eStatType, Battle.AttackType _eAttackType, float _fCOEFNum);
    /*0x1515aa0*/ Battle.StatTransfer GetStatTransferWithCOEF(float _fCOEFNum);
    /*0x1519f18*/ Battle.StatTransfer GetStatTransferWithCOEF(Battle.CharacterStat.StatType _eStatType, float _fCOEFNum);
    /*0x1519f70*/ float GetCOEF();
    /*0x1519e30*/ float GetCOEF(float _fCOEFNum);
    /*0x1519fb4*/ float GetCOEF(Battle.CharacterStat.StatType _eStatType);
    /*0x1519ee4*/ float GetCOEF(Battle.CharacterStat.StatType _eStatType, float _fCOEFNum);
    /*0x1519ff4*/ void SetFXStartPOS(CharacterBase _target);
    /*0x151a03c*/ void SetFXStartPOS(UnityEngine.Vector2 _vOffset);
    /*0x151a090*/ void SetFXStartPOS();
    /*0x1518c7c*/ void ClearFXStartPOS();
    /*0x151a0cc*/ UnityEngine.Vector2 GetFXStartPOS();
    /*0x151a100*/ UnityEngine.Vector2 CalcFXStartPOS();
    /*0x1515528*/ void DeepCopySkillFXData();
    /*0x151a338*/ void SetCheckCollisionCharm(bool _bCheck);
    /*0x151a344*/ void SetAttackType(Battle.AttackType _eAttackType);
    /*0x151a34c*/ void AddReference();
    /*0x151a3e0*/ void RemoveReference();

    enum SkillFX_ParamsType
    {
        NONE = 0,
        EXCEPT_UNIT = 1,
    }

    struct SkillFX_Param
    {
        /*0x10*/ SkillFX_Base.SkillFX_ParamsType type;
        /*0x18*/ CharacterBase unit;
        /*0x20*/ float value;

        /*0xa82644*/ SkillFX_Param(SkillFX_Base.SkillFX_ParamsType _eType, CharacterBase _unit, float _fValue);
    }

    class <>c
    {
        static /*0x0*/ SkillFX_Base.<> <>9;
        static /*0x8*/ System.Func<System.ValueTuple<int, float>, float> <>9__111_0;

        static /*0xcc0178*/ <>c();
        /*0xcc01d8*/ <>c();
        /*0xcc01e0*/ float <GetUnitListWithMaxCollisionUnitCount>b__111_0(System.ValueTuple<int, float> x);
    }
}

class SkillFX_Buff : SkillFX_Base
{
    /*0x15150fc*/ SkillFX_Buff();
    /*0x151a408*/ void StartFXChild();
}

class SkillFX_Buff_BuffExit : SkillFX_Buff
{
    /*0x164*/ int m_nRefBuffID;

    /*0x151515c*/ SkillFX_Buff_BuffExit();
    /*0x151a444*/ void InitChild();
    /*0x151a59c*/ void HandleBuffExit(int _nBuffID, bool _b);
    /*0x151a5c4*/ void ExitFXChild();
}

class SkillFX_Buff_MultiCount : SkillFX_Buff
{
    /*0x1515160*/ SkillFX_Buff_MultiCount();
    /*0x151a690*/ void InitChild();
}

class SkillFX_CARROT_1_FX2 : SkillFX_Attack
{
    /*0x164*/ float m_fPerEnemySPPercentage;
    /*0x168*/ float m_fAddDamagePercentage;

    /*0x1514ebc*/ SkillFX_CARROT_1_FX2();
    /*0x151a714*/ void InitChild();
    /*0x151a73c*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_CLERIC_1_FX1 : SkillFX_Tick_Cure
{
    /*0x151507c*/ SkillFX_CLERIC_1_FX1();
    /*0x151a78c*/ void StartFXChild();
    /*0x151a7c0*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_CLERIC_2_FX1 : SkillFX_Attack
{
    /*0x1515084*/ SkillFX_CLERIC_2_FX1();
    /*0x151a958*/ void StartFXChild();
    /*0x151ab94*/ void HandleCheckSkillExit();
    /*0x151acd4*/ void <HandleCheckSkillExit>b__1_0();
}

class SkillFX_CLERIC_3_FX1 : SkillFX_Tick_Follow
{
    /*0x1515088*/ SkillFX_CLERIC_3_FX1();
    /*0x151ad08*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_COOK_1_FX1 : SkillFX_Heal
{
    /*0x164*/ float m_fHealAmount;
    /*0x168*/ int m_nBuffID;
    /*0x16c*/ int m_nBuffCount;
    /*0x170*/ float m_SIG_AddHealPercent;
    /*0x174*/ int m_SIG_AddBuffID;
    /*0x178*/ int m_SIG_RemoveDebuffCount;
    /*0x17c*/ int m_SIG_RemoveDebuffUnitNumMax;

    /*0x1514ffc*/ SkillFX_COOK_1_FX1();
    /*0x151adfc*/ void InitChild();
    /*0x151b23c*/ bool CheckAttackCollision();
    /*0x151b514*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x151b738*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_COOK_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_SIG_RemoveDebuffCount;
    /*0x168*/ int m_SIG_CurrentCureCount;
    /*0x16c*/ int m_SIG_RemoveDebuffUnitNumMax;

    /*0x1515004*/ SkillFX_COOK_2_FX1();
    /*0x151b788*/ void InitChild();
    /*0x151b9ec*/ void StartFXChild();
    /*0x151ba40*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_COOK_3_FX1 : SkillFX_Heal
{
    /*0x164*/ float m_SIG_AddHealPercent;
    /*0x168*/ int m_SIG_AddBuffID;
    /*0x16c*/ int m_SIG_RemoveDebuffCount;

    /*0x1515008*/ SkillFX_COOK_3_FX1();
    /*0x151bab8*/ void InitChild();
    /*0x151bdd8*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x151bff0*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_CRUSADER_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamage;

    /*0x1514f94*/ SkillFX_CRUSADER_1_FX1();
    /*0x151c040*/ void InitChild();
    /*0x151c060*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_CRUSADER_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_SIG_AddBuffID;

    /*0x1514f98*/ SkillFX_CRUSADER_2_FX1();
    /*0x151c0c4*/ void InitChild();
    /*0x151c158*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_CRUSADER_4_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fHealAmount;
    /*0x168*/ bool m_SIG_IgnoreRemoveRevengeBuff;

    /*0x1514f9c*/ SkillFX_CRUSADER_4_FX1();
    /*0x151c1d8*/ void InitChild();
    /*0x151c424*/ void HandleHit(bool _b);
    /*0x151c554*/ void HandleKillUnit(CharacterBase _killUnit);
}

class SkillFX_ChangeBuff : SkillFX_Base
{
    /*0x164*/ int m_nPrevBuffID;
    /*0x168*/ int m_nPostBuffID;

    /*0x1515164*/ SkillFX_ChangeBuff();
    /*0x151c680*/ void InitChild();
    /*0x151c6d8*/ void StartFXChild();
    /*0x151c724*/ void ExitFXChild();
}

class SkillFX_ChangeBuff_3Prev1Post : SkillFX_Base
{
    /*0x164*/ int m_nPrevBuffID_1;
    /*0x168*/ int m_nPrevBuffID_2;
    /*0x16c*/ int m_nPrevBuffID_3;
    /*0x170*/ int m_nPostBuffID;

    /*0x15151c4*/ SkillFX_ChangeBuff_3Prev1Post();
    /*0x151c750*/ void InitChild();
    /*0x151c7e0*/ void StartFXChild();
    /*0x151c86c*/ void ExitFXChild();
}

class SkillFX_ChangeSkillFX : SkillFX_Base
{
    /*0x164*/ int m_nPrevSkillFXID;
    /*0x168*/ int m_nChangeSkillFXID;

    /*0x1441e18*/ SkillFX_ChangeSkillFX();
    /*0x1441cc4*/ void InitChild();
    /*0x1441d6c*/ void StartFX(SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0x1441dc4*/ void ExitFXChild();
}

class SkillFX_Cure : SkillFX_Attack
{
    /*0x1441f44*/ SkillFX_Cure();
    /*0x1441e7c*/ void InitChild();
    /*0x1441ea4*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Cure_BuffExit : SkillFX_Cure
{
    /*0x164*/ int m_nRefBuffID;

    /*0x1442198*/ SkillFX_Cure_BuffExit();
    /*0x1441f4c*/ void InitChild();
    /*0x14420ac*/ void HandleBuffExit(int _nBuffID, bool _b);
    /*0x14420c4*/ void ExitFXChild();
}

class SkillFX_Cure_CC : SkillFX_Cure
{
    /*0x164*/ bool m_bBreeze;
    /*0x168*/ int m_nRemoveCount;

    /*0x1442458*/ SkillFX_Cure_CC();
    /*0x14421a0*/ void InitChild();
    /*0x1442254*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_DARKELF_SIG : SkillFX_Base
{
    /*0x164*/ float m_fAbsorbTime;
    /*0x168*/ float m_fCurAbosrbTime;
    /*0x16c*/ float m_fTotalAbsorb;
    /*0x170*/ float m_fHealRatio;
    /*0x174*/ float m_fDamageRatio;
    /*0x178*/ float m_fEmergencyCooltime;
    /*0x17c*/ float m_fCurEmergencyCooltime;

    /*0x1442a64*/ SkillFX_DARKELF_SIG();
    /*0x1442460*/ void InitChild();
    /*0x14426b8*/ void HandleCheckAbsorbTime();
    /*0x14429ec*/ void HandleChangeHP(float _fAddHP);
    /*0x1442784*/ void PainRealse();
}

class SkillFX_DARKTEMPLAR_1_FX1 : SkillFX_Attack
{
    /*0x1442c18*/ SkillFX_DARKTEMPLAR_1_FX1();
    /*0x1442ad0*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_DARKTEMPLAR_3_FX1 : SkillFX_Attack
{
    /*0x1442de4*/ SkillFX_DARKTEMPLAR_3_FX1();
    /*0x1442c20*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_DEATHSCYTHE_2_FX1 : SkillFX_Tick_Follow
{
    /*0x178*/ float m_fRemoveBuffPercentage;
    /*0x17c*/ float m_sig_0_HealRatio;
    /*0x180*/ float m_sig_10_AddDamage;
    /*0x184*/ int m_sig_10_BuffID;
    /*0x188*/ int m_sig_20_BuffID;

    /*0x14436dc*/ SkillFX_DEATHSCYTHE_2_FX1();
    /*0x1442dec*/ void InitChild();
    /*0x1442f18*/ void StartFXChild();
    /*0x1443070*/ void ExitFXChild();
    /*0x14431f4*/ void CalcDamage(CharacterBase _target);
    /*0x1443368*/ void CheckBuff();
    /*0x14434ec*/ Battle.StatTransfer GetStatTransfer();
    /*0x144355c*/ void TickEffect();
}

class SkillFX_DUALCROSS_1_FX2 : SkillFX_Attack
{
    /*0x164*/ float m_SIG_AddCritical;
    /*0x168*/ float m_SIG_AddACC;
    /*0x16c*/ int m_SIG_AddBuffID;

    /*0x144398c*/ SkillFX_DUALCROSS_1_FX2();
    /*0x1443740*/ int get_BuffID();
    /*0x1443748*/ void InitChild();
    /*0x14438b0*/ Battle.StatTransfer GetStatTransfer();
}

class SkillFX_DUALCROSS_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddHPRatio;

    /*0x1443a44*/ SkillFX_DUALCROSS_3_FX1();
    /*0x1443994*/ void InitChild();
    /*0x14439cc*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_DUALCROSS_4_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fBuffCheckDuration;
    /*0x168*/ float m_fCurTime;

    /*0x1444094*/ SkillFX_DUALCROSS_4_FX1();
    /*0x1443a4c*/ void InitChild();
    /*0x1443a6c*/ void StartFXChild();
    /*0x1443c9c*/ void ExitFXChild();
    /*0x1443d74*/ void HandleCheckTime();
    /*0x1443fc4*/ void HandleCheckAttackTarget(CharacterBase _hitCharacter, int _n, bool _b);
}

class SkillFX_EVILPET_1_FX1 : SkillFX_Attack
{
    /*0x168*/ System.Collections.Generic.List<UnityEngine.Vector2> m_lisNiddlePOS;
    /*0x170*/ UnityEngine.Vector2 m_vCurrentNiddlePOS;
    /*0x178*/ System.Collections.Generic.List<SkillFX_EVILPET_1_FX1.NiddleInfo> m_lisNiddleInfo;
    /*0x180*/ bool m_bCheckNiddleDelay;
    /*0x184*/ float m_fCurDelay;

    /*0x1444ba0*/ SkillFX_EVILPET_1_FX1();
    /*0x14440f8*/ void InitChild();
    /*0x1444350*/ void StartFXChild();
    /*0x144473c*/ void HandleCheckNiddleDelay();
    /*0x14449c0*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x1444b08*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();

    class NiddleInfo
    {
        /*0x10*/ UnityEngine.Vector2 position;
        /*0x18*/ System.Action completeAction;

        /*0xcc036c*/ NiddleInfo();
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ ParticleBase niddle;
        /*0x18*/ UnityEngine.Vector2 pos;
        /*0x20*/ SkillFX_EVILPET_1_FX1 <>4__this;
        /*0x28*/ System.Action <>9__2;

        /*0xcc01fc*/ <>c__DisplayClass6_0();
        /*0xcc0204*/ void <StartFXChild>b__0();
        /*0xcc0374*/ void <StartFXChild>b__2();
    }

    class <>c__DisplayClass6_1
    {
        /*0x10*/ SkillFX_EVILPET_1_FX1.NiddleInfo info;
        /*0x18*/ SkillFX_EVILPET_1_FX1.<> CS$<>8__locals1;

        /*0xcc0364*/ <>c__DisplayClass6_1();
        /*0xcc03a4*/ void <StartFXChild>b__1();
    }
}

class SkillFX_EVILPET_2_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fNearCOEF;
    /*0x168*/ int m_nAddBuffID_Kill;
    /*0x16c*/ float m_fFallPercentage;
    /*0x170*/ int m_nAddBuffID_Fall;
    /*0x174*/ bool m_bAttackNear;

    /*0x1445254*/ SkillFX_EVILPET_2_FX1();
    /*0x1444c58*/ void InitChild();
    /*0x1444cd8*/ void StartFXChild();
    /*0x1444fd0*/ void CheckBuff();
    /*0x144500c*/ bool CheckBuffAddible(CharacterBase _target, int _nAddBuffID, System.Nullable<float> _fParameter);
    /*0x14450d0*/ float GetCOEF();
    /*0x1445124*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
}

class SkillFX_EVILPET_4_FX1 : SkillFX_Attack
{
    /*0x144533c*/ SkillFX_EVILPET_4_FX1();
    /*0x144525c*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_FIANCE_3_FX1 : SkillFX_Buff
{
    /*0x14457bc*/ SkillFX_FIANCE_3_FX1();
    /*0x1445344*/ void CheckBuff();
}

class SkillFX_FLORA_1_FX1 : SkillFX_Tick
{
    /*0x178*/ float m_fAttackDelay;
    /*0x17c*/ float m_fCurDelay;

    /*0x1445da8*/ SkillFX_FLORA_1_FX1();
    /*0x14457c4*/ void InitChild();
    /*0x1445848*/ void StartFXChild();
    /*0x1445af4*/ void CheckTickDelay();
    /*0x1445b94*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x1445c9c*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_FLORA_2_FX1 : SkillFX_Tick
{
    /*0x178*/ float m_fFallAttackCOEF;

    /*0x1446380*/ SkillFX_FLORA_2_FX1();
    /*0x1445e6c*/ void InitChild();
    /*0x1445ea0*/ void ExitFXChild();
    /*0x144600c*/ void TickEffect();
    /*0x14461e8*/ void HandleCheckFall(CharacterBase _target);
}

class SkillFX_FLOWER_1_FX1 : SkillFX_Tick
{
    /*0x178*/ float m_fCustomCOEF;
    /*0x17c*/ float m_fOriginCOEF;
    /*0x180*/ bool m_bCustomCOEF;
    /*0x184*/ float m_fFlowerOffsetPosX;

    /*0x14465e4*/ SkillFX_FLOWER_1_FX1();
    /*0x14463e0*/ void InitChild();
    /*0x144642c*/ void StartFXChild();
    /*0x1446550*/ void ExitFXChild();
    /*0x144659c*/ float GetCOEF();
}

class SkillFX_FOXY_4_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nAlterBuffID;
    /*0x168*/ int m_nProvokeBuffID;
    /*0x16c*/ float m_fAddHPRatio;
    /*0x170*/ CharacterBase m_Alter;
    /*0x178*/ int m_SIG_Buff_Alter;
    /*0x17c*/ int m_SIG_Buff1_Caster;
    /*0x180*/ int m_SIG_Buff2_Caster;

    /*0x144772c*/ SkillFX_FOXY_4_FX1();
    /*0x1446644*/ void InitChild();
    /*0x144677c*/ void StartFXChild();
    /*0x1447430*/ void ExitFXChild();
    /*0x1447544*/ void HandleCheckHit(CharacterBase _attacker);
    /*0x1447724*/ void HandlerAlterdeath();
}

class SkillFX_GAMBLER_4_FX1 : SkillFX_Base
{
    /*0x168*/ int[] m_arrRandombuffID;
    /*0x170*/ int m_nBuffID_Clover;

    /*0x1447ec8*/ SkillFX_GAMBLER_4_FX1();
    /*0x1447790*/ void InitChild();
    /*0x1447a2c*/ void HandleCheckCondition(CharacterBase _target, int _nSkillFXID, bool _b);
    /*0x1447c2c*/ void HandleActivateCardEffect(CharacterBase _target);
    /*0x1447d00*/ void ExitFXChild();
}

class SkillFX_GDRAGON_1_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ int m_nCheckBuffCount;
    /*0x16c*/ float m_fAddDamageRatio;
    /*0x170*/ int m_nBuffCount;

    /*0x14480b8*/ SkillFX_GDRAGON_1_FX1();
    /*0x1447f50*/ void InitChild();
    /*0x1447fc8*/ float GetAddDamageMultRatio(CharacterBase _target);
    /*0x1448014*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_GDRAGON_2_FX2 : SkillFX_Buff
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ int m_nAddBuffID_Default;
    /*0x16c*/ int m_nAddBuffID_Change;

    /*0x144819c*/ SkillFX_GDRAGON_2_FX2();
    /*0x14480c0*/ void InitChild();
    /*0x1448138*/ void CheckBuff();
}

class SkillFX_GDRAGON_3_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckRage;
    /*0x168*/ int m_nAddBuffID_Default;
    /*0x16c*/ int m_nAddBuffID_Change;

    /*0x1448290*/ SkillFX_GDRAGON_3_FX1();
    /*0x14481a4*/ void InitChild();
    /*0x144821c*/ void CheckBuff();
}

class SkillFX_GDRAGON_4_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nBuffID_Tear;
    /*0x168*/ int m_nBuffID_Rage;
    /*0x16c*/ int m_nAddBuffCount_Critical;
    /*0x170*/ int m_nAddBuffCount_CC;
    /*0x174*/ int m_nAddBuffCondition_Rage;
    /*0x178*/ int m_nCurBuffCount;
    /*0x17c*/ bool m_bRageBuffOn;

    /*0x1448e64*/ SkillFX_GDRAGON_4_FX1();
    /*0x1448298*/ void InitChild();
    /*0x1448718*/ void ExitFXChild();
    /*0x14489a4*/ void HandleCheckHit(bool _bCritical);
    /*0x1448b9c*/ void HandleCheckCC();
    /*0x1448cc4*/ void HandleCheckBuff(int _nBuffID);
}

class SkillFX_GUITAR_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageRatio;

    /*0x144900c*/ SkillFX_GUITAR_1_FX1();
    /*0x1448ec8*/ void InitChild();
    /*0x1448ee8*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_GUITAR_2_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_nAddBuffID;

    /*0x1449184*/ SkillFX_GUITAR_2_FX1();
    /*0x1449014*/ void InitChild();
    /*0x1449050*/ bool CheckBuffAddible(CharacterBase _target, int _nAddBuffID, System.Nullable<float> _fParameter);
}

class SkillFX_GUITAR_4_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_nNeedBuffCount;
    /*0x168*/ float m_fAddSHD;
    /*0x16c*/ bool m_bBuffFull;

    /*0x1449498*/ SkillFX_GUITAR_4_FX1();
    /*0x144918c*/ void InitChild();
    /*0x14491d0*/ void ExitFXChild();
    /*0x14492b8*/ void CheckBuff();
    /*0x1449458*/ void HandleCheckNormalSHP(int _nSkillSlot);
}

class SkillFX_HARP_3_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nRemoveBuffCount;
    /*0x168*/ int m_nBuffID;

    /*0x14498fc*/ SkillFX_HARP_3_FX1();
    /*0x14494a0*/ void InitChild();
    /*0x14494f8*/ void StartFXChild();
}

class SkillFX_HIGHELF_1_FX1 : SkillFX_Tick
{
    /*0x178*/ int m_nAddSkillFXID;
    /*0x17c*/ UnityEngine.Vector3 m_vecProjectilePos;
    /*0x188*/ UnityEngine.Vector3 m_vecProjectileTargetPos;

    /*0x1449b6c*/ SkillFX_HIGHELF_1_FX1();
    /*0x1449960*/ void InitChild();
    /*0x14499b0*/ void TickEffect();
}

class SkillFX_HIGHELF_4_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_nBuffCount;
    /*0x168*/ System.Collections.Generic.List<CharacterBase> m_lisExcept;
    /*0x170*/ int m_SIG_AddBuffID;
    /*0x174*/ int m_SIG_AddBuffCount;
    /*0x178*/ float m_SIG_HealAmount;

    /*0x144a10c*/ SkillFX_HIGHELF_4_FX1();
    /*0x1449bcc*/ void InitChild();
    /*0x1449d5c*/ void StartFXChild();
    /*0x1449f40*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_Heal : SkillFX_Attack
{
    /*0x144a1b0*/ SkillFX_Heal();
    /*0x144a184*/ void InitChild();
}

class SkillFX_ICE_4_FX1 : SkillFX_Base
{
    /*0x144a594*/ SkillFX_ICE_4_FX1();
    /*0x144a1b8*/ void InitChild();
    /*0x144a358*/ void HandleCheckCondition(CharacterBase _target, int _nSkillFXID, float _fDamage);
    /*0x144a464*/ void ExitFXChild();
}

class SkillFX_IDOL_1_FX1 : SkillFX_Heal
{
    /*0x164*/ int m_nSignatureBuffID;

    /*0x144a864*/ SkillFX_IDOL_1_FX1();
    /*0x144a5f8*/ void InitChild();
    /*0x144a6f4*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_IDOL_2_FX1 : SkillFX_Heal
{
    /*0x164*/ int m_nSignatureBuffID;

    /*0x144aad8*/ SkillFX_IDOL_2_FX1();
    /*0x144a86c*/ void InitChild();
    /*0x144a968*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_IDOL_3_FX1 : SkillFX_Cure
{
    /*0x164*/ float m_fReduceCooltime;
    /*0x168*/ int m_nSignatureBuffID;

    /*0x144ae24*/ SkillFX_IDOL_3_FX1();
    /*0x144aae0*/ void InitChild();
    /*0x144abec*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_JACKRABBIT_3_FX1 : SkillFX_AddHP_Ratio
{
    /*0x144af7c*/ SkillFX_JACKRABBIT_3_FX1();
    /*0x144ae2c*/ void StartFXChild();
}

class SkillFX_Jungle_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddMP;

    /*0x144b064*/ SkillFX_Jungle_1_FX1();
    /*0x144af84*/ void InitChild();
    /*0x144afbc*/ bool CheckAttackCollision();
}

class SkillFX_LAMPLIGHT_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddMultDamage;
    /*0x168*/ float m_fMaxMultDamage;
    /*0x16c*/ bool m_bHitAttack;

    /*0x144b264*/ SkillFX_LAMPLIGHT_1_FX1();
    /*0x144b06c*/ void InitChild();
    /*0x144b0ac*/ void StartFXChild();
    /*0x144b0b8*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144b150*/ void CalcDamage(CharacterBase _target);
    /*0x144b24c*/ void CheckBuff(int _nAddBuffID, bool _bUseMPPay);
}

class SkillFX_LAMPLIGHT_2_FX1 : SkillFX_Attack
{
    /*0x164*/ bool m_bUseAttackTwice;
    /*0x165*/ bool m_bAddBuff;

    /*0x144b3e4*/ SkillFX_LAMPLIGHT_2_FX1();
    /*0x144b26c*/ void InitChild();
    /*0x144b2ac*/ void StartFXChild();
    /*0x144b2f8*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_LAMPLIGHT_2_FX2 : SkillFX_LAMPLIGHT_2_FX1
{
    /*0x144b430*/ SkillFX_LAMPLIGHT_2_FX2();
    /*0x144b3ec*/ void StartFXChild();
}

class SkillFX_MIDDLE_2_FX1 : SkillFX_Spawn
{
    /*0x178*/ float m_UnitSizeMult;
    /*0x17c*/ float m_UnitHPMult;
    /*0x180*/ float m_UnitATKMult;
    /*0x184*/ float m_UnitMP;
    /*0x188*/ bool m_bSignatureEnable;

    /*0x144ba1c*/ SkillFX_MIDDLE_2_FX1();
    /*0x144b438*/ void InitChild();
    /*0x144b584*/ CharacterBase SpawnUnit();
    /*0x144b7f8*/ void StartFXChild();
    /*0x144b55c*/ void <InitChild>g__SetSignatureData|5_0(TableData.TableData_Skillextra _extra);
}

class SkillFX_MIDNIGHT_1_FX1 : SkillFX_Warp
{
    /*0x144bb80*/ SkillFX_MIDNIGHT_1_FX1();
    /*0x144ba8c*/ UnityEngine.Vector2 CalcFXStartPOS();
}

class SkillFX_MIDNIGHT_2_FX1 : SkillFX_Warp
{
    /*0x144bcdc*/ SkillFX_MIDNIGHT_2_FX1();
    /*0x144bbe8*/ UnityEngine.Vector2 CalcFXStartPOS();
}

class SkillFX_MIDNIGHT_3_FX1 : SkillFX_Tick
{
    /*0x144bf94*/ SkillFX_MIDNIGHT_3_FX1();
    /*0x144bce0*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
    /*0x144be98*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_MIKO_1_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nProjectileSkillFXID;

    /*0x144c464*/ SkillFX_MIKO_1_FX1();
    /*0x144bff4*/ void StartFXChild();
}

class SkillFX_NUN_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fMultDamageDistance;
    /*0x168*/ float m_fMultDamageRatio;
    /*0x16c*/ int m_nBuffID;
    /*0x170*/ int m_nBuffIDWhenCritical;
    /*0x174*/ int m_SIG_FallBuffID;
    /*0x178*/ int m_SIG_SpeedDownBuffID;
    /*0x17c*/ float m_SIG_FallPercentage;
    /*0x180*/ float m_SIG_KnockbackDistance;
    /*0x184*/ bool m_SIG_IgnoreShield;

    /*0x144ca54*/ SkillFX_NUN_1_FX1();
    /*0x144c4c8*/ void InitChild();
    /*0x144c670*/ void StartFXChild();
    /*0x144c78c*/ void CheckBuff();
    /*0x144c870*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144c954*/ void RecieveAddDamage(CharacterBase _target, ref Battle.StatTransfer _stat);
    /*0x144c9c0*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_NUN_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nAddSP;

    /*0x144cba8*/ SkillFX_NUN_2_FX1();
    /*0x144ca5c*/ void InitChild();
    /*0x144cab0*/ bool CheckAttackCollision();
}

class SkillFX_PAJAMA_1_FX4 : SkillFX_Attack
{
    /*0x144cbbc*/ SkillFX_PAJAMA_1_FX4();
    /*0x144cbb0*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_PAJAMA_2_FX1 : SkillFX_Attack
{
    /*0x164*/ bool m_bUseDebuff;
    /*0x168*/ float m_fMultDamageRatio;
    /*0x16c*/ int m_nStunBuffID;
    /*0x170*/ float m_SIG_AccAdd;
    /*0x174*/ bool m_SIG_Ignore_DEF;
    /*0x178*/ float m_SIG_MultDamageRatio;

    /*0x144cf00*/ SkillFX_PAJAMA_2_FX1();
    /*0x144cbc4*/ void InitChild();
    /*0x144ccec*/ void GiveDamageToTarget(CharacterBase _target);
    /*0x144ce3c*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_PIRATE_1_FX1 : SkillFX_Tick
{
    /*0x178*/ int m_nAddSkillFXID;
    /*0x17c*/ UnityEngine.Vector3 m_vecProjectilePos;
    /*0x188*/ UnityEngine.Vector3 m_vecProjectileTargetPos;

    /*0x144d114*/ SkillFX_PIRATE_1_FX1();
    /*0x144cf08*/ void InitChild();
    /*0x144cf58*/ void TickEffect();
}

class SkillFX_PIRATE_1_FX2 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ float m_fAddDamageATKRatio;

    /*0x144d278*/ SkillFX_PIRATE_1_FX2();
    /*0x144d174*/ void InitChild();
    /*0x144d1b8*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_PRIEST_2_FX1 : SkillFX_Heal
{
    /*0x164*/ int m_nCureCount;
    /*0x168*/ float m_fConditionHPRatio;
    /*0x16c*/ float m_fHealATKRatio;

    /*0x144d434*/ SkillFX_PRIEST_2_FX1();
    /*0x144d280*/ void InitChild();
    /*0x144d2cc*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_QUEEN_SIG_AddHP_Ratio : SkillFX_AddHP_Ratio
{
    /*0x168*/ float m_fHealHPRatioPerMP1Percent;
    /*0x16c*/ int m_nAddShieldBuffID;
    /*0x170*/ float m_fRecentHealAmount;

    /*0x144d778*/ SkillFX_QUEEN_SIG_AddHP_Ratio();
    /*0x144d43c*/ void InitChild();
    /*0x144d4d4*/ void StartFXChild();
    /*0x144d688*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Queen_1_FX2 : SkillFX_Base
{
    /*0x164*/ int m_nATKBuffID;
    /*0x168*/ int m_nInvincibleBuffID;
    /*0x16c*/ float m_fCheckHPRatio;

    /*0x144d938*/ SkillFX_Queen_1_FX2();
    /*0x144d780*/ void InitChild();
    /*0x144d7f8*/ void StartFXChild();
}

class SkillFX_REDEYE_2_FX1 : SkillFX_Attack
{
    /*0x144dbd0*/ SkillFX_REDEYE_2_FX1();
    /*0x144d99c*/ void InitChild();
    /*0x144dae0*/ void HandleAttack(System.ValueTuple<CharacterBase, float> _info);
}

class SkillFX_REDHEAD_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageRatio;
    /*0x168*/ int m_nAddMP;

    /*0x144de78*/ SkillFX_REDHEAD_1_FX1();
    /*0x144dbd8*/ void InitChild();
    /*0x144dc34*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144dda8*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_REDHOOD_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageAmount;
    /*0x168*/ int m_nBuffID;
    /*0x16c*/ int m_nBuffCount;
    /*0x170*/ float m_nAddDamageMult;

    /*0x144e070*/ SkillFX_REDHOOD_3_FX1();
    /*0x144de80*/ void InitChild();
    /*0x144dedc*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144e00c*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_RemoveBuff : SkillFX_Attack
{
    /*0x164*/ int m_nRemoveBuffCount;

    /*0x144e1d4*/ SkillFX_RemoveBuff();
    /*0x144e078*/ void InitChild();
    /*0x144e10c*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_SABRE_4_FX1 : SkillFX_Base
{
    /*0x144e380*/ SkillFX_SABRE_4_FX1();
    /*0x144e1dc*/ void StartFXChild();
}

class SkillFX_SABRE_5_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamagePercent;
    /*0x168*/ float m_fHealPercent;

    /*0x144e6ec*/ SkillFX_SABRE_5_FX1();
    /*0x144e3e4*/ void InitChild();
    /*0x144e424*/ bool FindTarget(CharacterBase _except);
    /*0x144e4f4*/ Battle.StatTransfer GetStatTransfer();
    /*0x144e5e8*/ void OnKills();
}

class SkillFX_SHAMAN_4_FX1 : SkillFX_Attack_AddMP
{
    /*0x144e7cc*/ SkillFX_SHAMAN_4_FX1();
    /*0x144e6f4*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_SKYBLUE_1_FX1 : SkillFX_Tick
{
    /*0x177*/ bool m_bDrainMP;
    /*0x178*/ float m_fDrainMPValue;

    /*0x144e86c*/ SkillFX_SKYBLUE_1_FX1();
    /*0x144e7d4*/ void InitChild();
    /*0x144e81c*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_SKYBLUE_2_FX1 : SkillFX_Attack
{
    /*0x164*/ bool m_bCheckCritical;
    /*0x168*/ float m_fCriticalLessHP;

    /*0x144e9a4*/ SkillFX_SKYBLUE_2_FX1();
    /*0x144e8cc*/ void InitChild();
    /*0x144e918*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_SUGAR_1_FX1 : SkillFX_AddMP
{
    /*0x168*/ float m_fAddMP_Origin;

    /*0x144ea44*/ SkillFX_SUGAR_1_FX1();
    /*0x144e9ac*/ void InitChild();
    /*0x144e9dc*/ void StartFXChild();
}

class SkillFX_SUGAR_1_FX2 : SkillFX_Heal
{
    /*0x164*/ float m_fCOEFNum_Origin;

    /*0x144eaf0*/ SkillFX_SUGAR_1_FX2();
    /*0x144ea4c*/ void InitChild();
    /*0x144ea9c*/ void StartFXChild();
}

class SkillFX_SUGAR_3_FX1 : SkillFX_Buff
{
    /*0x164*/ float m_fHPRatio;

    /*0x144ecb4*/ SkillFX_SUGAR_3_FX1();
    /*0x144eaf8*/ void InitChild();
    /*0x144eb18*/ void StartFXChild();
}

class SkillFX_SUGAR_SIG_Heal : SkillFX_Heal
{
    /*0x164*/ float m_fConditionHPRatio;
    /*0x168*/ float m_fHealMultRatio;

    /*0x144ed78*/ SkillFX_SUGAR_SIG_Heal();
    /*0x144ecbc*/ void InitChild();
    /*0x144ece4*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_SWORDCAT_1_FX2 : SkillFX_Attack
{
    /*0x164*/ float m_sig_HealRatio;

    /*0x144ee64*/ SkillFX_SWORDCAT_1_FX2();
    /*0x144ed80*/ void InitChild();
    /*0x144edd4*/ void GiveDamageToTarget(CharacterBase _target);
}

class SkillFX_Sabre_1_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nAddBuff_Sentence;
    /*0x168*/ bool m_bRemoveTargetBuffAll;

    /*0x144f144*/ SkillFX_Sabre_1_FX1();
    /*0x144ee6c*/ void InitChild();
    /*0x144eed4*/ bool FindTarget(CharacterBase _except);
    /*0x144efa4*/ void CheckAttack();
}

class SkillFX_Spawn : SkillFX_Base
{
    /*0x164*/ int m_nSpawnUnitID;
    /*0x168*/ float m_fSpawnUnitLevelRatio;
    /*0x170*/ CharacterBase m_SpawnUnit;

    /*0x144ba28*/ SkillFX_Spawn();
    /*0x144b518*/ void InitChild();
    /*0x144b83c*/ void StartFXChild();
    /*0x144f14c*/ CharacterBase SpawnUnit();
}

class SkillFX_TAILOR_2_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fMultDamageRatio_NoRestoreHP;
    /*0x168*/ float m_fMultDamageRatio_Blood;

    /*0x144f394*/ SkillFX_TAILOR_2_FX1();
    /*0x144f2a8*/ void InitChild();
    /*0x144f2e8*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_TAILOR_3_FX1 : SkillFX_Base
{
    /*0x164*/ int m_BuffID_Cloth;
    /*0x168*/ int m_BuffID_Light;
    /*0x16c*/ int m_BuffID_Heavy;
    /*0x170*/ System.Collections.Generic.List<CharacterBase> m_CollisionList;

    /*0x144f718*/ SkillFX_TAILOR_3_FX1();
    /*0x144f39c*/ void InitChild();
    /*0x144f460*/ void StartFXChild();
}

class SkillFX_TAILOR_4_FX1 : SkillFX_Attack
{
    /*0x144f7b8*/ SkillFX_TAILOR_4_FX1();
    /*0x144f77c*/ void InitChild();
}

class SkillFX_TAILOR_SIG_FX1 : SkillFX_Base
{
    /*0x164*/ int m_BuffID_Staff;
    /*0x168*/ int m_BuffID_LightWeapon;
    /*0x16c*/ int m_BuffID_HeavyWeapon;
    /*0x170*/ int m_BuffID_CriDown;
    /*0x178*/ System.Collections.Generic.List<CharacterBase> m_CollisionList;

    /*0x144fc34*/ SkillFX_TAILOR_SIG_FX1();
    /*0x144f7c0*/ void InitChild();
    /*0x144f89c*/ void StartFXChild();
}

class SkillFX_Tick : SkillFX_Base
{
    static /*0x0*/ bool IsTick;
    /*0x164*/ float m_fTick;
    /*0x168*/ float m_fCurTick;
    /*0x16c*/ int m_nCount;
    /*0x170*/ int m_nCurCount;
    /*0x174*/ bool m_bStart;
    /*0x175*/ bool m_bRemovedFromStartFX;
    /*0x176*/ bool m_bTickFollow;

    static /*0x144fe80*/ SkillFX_Tick();
    /*0x1445e08*/ SkillFX_Tick();
    /*0x14457f8*/ void InitChild();
    /*0x1445878*/ void StartFXChild();
    /*0x14430a8*/ void ExitFXChild();
    /*0x144fc98*/ void HandleCheckTickCondition();
    /*0x144fdb0*/ void CheckTickDelay();
    /*0x1443680*/ void TickEffect();
    /*0x144fcd8*/ bool IsPaused();
}

class SkillFX_Tick_Buff : SkillFX_Tick
{
    /*0x178*/ int m_nRefBuffID;

    /*0x144ff80*/ SkillFX_Tick_Buff();
    /*0x144fed0*/ void InitChild();
    /*0x144ff24*/ void StartFXChild();
    /*0x144ff28*/ void TickEffect();
}

class SkillFX_Tick_Buff_Follow : SkillFX_Tick_Buff
{
    /*0x145002c*/ SkillFX_Tick_Buff_Follow();
    /*0x144ffe0*/ void InitChild();
    /*0x1450008*/ void StartFXChild();
}

class SkillFX_Tick_Cure : SkillFX_Tick
{
    /*0x14500d0*/ SkillFX_Tick_Cure();
    /*0x1450030*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Tick_Cure_Follow : SkillFX_Tick_Cure
{
    /*0x145017c*/ SkillFX_Tick_Cure_Follow();
    /*0x1450130*/ void InitChild();
    /*0x1450158*/ void StartFXChild();
}

class SkillFX_Tick_Follow : SkillFX_Tick
{
    /*0x14436e0*/ SkillFX_Tick_Follow();
    /*0x1442ef0*/ void InitChild();
    /*0x144304c*/ void StartFXChild();
}

class SkillFX_Warp : SkillFX_Base
{
    /*0x144bb84*/ SkillFX_Warp();
    /*0x1450180*/ void StartFXChild();
}

class CharacterState
{
    /*0x10*/ int StateID;
    /*0x14*/ Battle.StateFlag Flag;
    /*0x18*/ CharacterState.CheckStateEnableResultType <CheckStateEnableResult>k__BackingField;
    /*0x20*/ System.Collections.Generic.List<Battle.StateAndSkillID> NextStateIndexList;
    /*0x28*/ CharacterBase m_Character;
    /*0x30*/ InGameController m_InGameController;
    /*0x38*/ Spine.AnimationState.TrackEntryDelegate m_delComplete;
    /*0x40*/ Spine.AnimationState.TrackEntryEventDelegate[] m_arrDelEvent;
    /*0x48*/ ANIMATION_CLIP m_AnimID;
    /*0x4c*/ Battle.CharacterFlag m_FlagTmp;
    /*0x50*/ bool m_bSpecialSkill;
    /*0x51*/ bool m_bExitNextUpdate;

    /*0x1320940*/ CharacterState(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13279fc*/ Battle.StateAndSkillID get_StateEnumID();
    /*0x1327a04*/ CharacterState.CheckStateEnableResultType get_CheckStateEnableResult();
    /*0x1327a0c*/ void set_CheckStateEnableResult(CharacterState.CheckStateEnableResultType value);
    /*0x1327a14*/ bool get_IsStateEnable();
    /*0x1327a80*/ bool get_IsSkill();
    /*0x1321844*/ bool get_IsSkillULT();
    /*0x1322260*/ string get_m_AnimName();
    /*0x1327aec*/ bool CheckStateEnable(bool _bSkillUITouch);
    /*0x1327afc*/ bool InitState(CharacterBase _character, int _stateID);
    /*0x1327b78*/ bool InitStateChild();
    /*0x1327b80*/ void RemoveState();
    /*0x1327b8c*/ void RemoveStateChild();
    /*0x1327b90*/ void StartState();
    /*0x1327b9c*/ void StartStateChild();
    /*0x1327ba0*/ bool UpdateState();
    /*0x1327bc8*/ bool UpdateStateChild();
    /*0x1327bd0*/ void ExitState();
    /*0x1327c24*/ void ExitStateChild();
    /*0x1327c28*/ bool InvokeAnimEvent(AnimEvent _animEvent);
    /*0x1320cc4*/ bool IsChangeableMovePOS();
    /*0x1321038*/ void SetMoveTarget(CharacterBase _target, Battle.StateAndSkillID _eStateID);
    /*0x1321020*/ void SetMovePOS(System.Nullable<UnityEngine.Vector2> _vecPOS);
    /*0x1327c30*/ void SetMoveDIR(UnityEngine.Vector2 _vecDIR);
    /*0x132226c*/ void StartStateSettings(bool _bSpecialSkill, ANIMATION_CLIP _animationClip, bool _bAnimLoop, bool _bHitAnimRotateInit, Spine.AnimationState.TrackEntryDelegate _delAnimComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delAnimEvents);
    /*0x1327bfc*/ void ExitStateSettings();
    /*0x1327c50*/ void StartFX(int _nSkillFXID);
    /*0x1327c54*/ void SetExitNextUpdate(bool _bExit);
    /*0x1327c60*/ void ClearFlag();
    /*0x1324144*/ bool FlagEquals(Battle.StateFlag _eCompare);
    /*0x13217c4*/ void SetFlag(Battle.StateFlag _eValue, bool _bBoolean);

    enum CheckStateEnableResultType
    {
        NONE = 0,
        CANNOT_USE_TOUCH_SKILL = 1,
    }
}

class CharacterState_BDRAGON_Idle : CharacterState_Idle
{
    /*0x1327cc8*/ CharacterState_BDRAGON_Idle(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1327ce0*/ void SetAnimation();
}

class CharacterState_Death : CharacterState
{
    /*0x52*/ bool m_bStartDissolve;
    /*0x54*/ float m_fAnimDuation;
    /*0x58*/ float m_fStartAnimDuraionRatio;
    /*0x5c*/ float m_fMultCurAnimRatio;

    /*0x1327d64*/ CharacterState_Death(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1327d70*/ bool InitStateChild();
    /*0x1327d90*/ void ExitStateChild();
    /*0x1327e58*/ void StartStateChild();
    /*0x132809c*/ void HandleSetDissolveShader(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x1328384*/ void DeathAnimComplete(Spine.TrackEntry entry);
    /*0x13283f8*/ void SetDissolveValue();
    /*0x13282ec*/ bool CheckUseDissolve();
}

class CharacterState_Death_WorldBoss : CharacterState_Death
{
    /*0x1328520*/ CharacterState_Death_WorldBoss(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132852c*/ void StartStateChild();
    /*0x1328624*/ void DeathAnimComplete(Spine.TrackEntry entry);
    /*0x1328694*/ void <StartStateChild>g__HandleAnimEventVoice|1_0(Spine.TrackEntry trackEntry, Spine.Event e);
}

class CharacterState_Fall : CharacterState
{
    /*0x13287b4*/ CharacterState_Fall(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13287c0*/ bool InitStateChild();
    /*0x13287e8*/ void StartStateChild();
    /*0x13288c4*/ void AnimComplete(Spine.TrackEntry entry);
}

class CharacterState_Freeze : CharacterState
{
    /*0x1328930*/ CharacterState_Freeze(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132893c*/ bool InitStateChild();
    /*0x1328964*/ void StartStateChild();
}

class CharacterState_Idle : CharacterState
{
    /*0x54*/ int m_nCurEndPoseDelayCount;
    /*0x58*/ bool m_bLoop;

    /*0x1327cd4*/ CharacterState_Idle(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328980*/ void StartStateChild();
    /*0x1328990*/ bool UpdateStateChild();
    /*0x13289b0*/ void SetIdleAnimation();
    /*0x1327d38*/ void SetAnimation();
}

class CharacterState_Idle_WorldBoss : CharacterState_Idle
{
    /*0x59*/ bool m_bStartGameEndVoice;

    /*0x1328b68*/ CharacterState_Idle_WorldBoss(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328b74*/ void SetAnimation();
    /*0x1328cb0*/ void <SetAnimation>g__HandleAnimEventVoice|2_0(Spine.TrackEntry trackEntry, Spine.Event e);
}

class CharacterState_Launch : CharacterState
{
    /*0x1328dd0*/ CharacterState_Launch(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328ddc*/ bool InitStateChild();
    /*0x1328e04*/ void StartStateChild();
    /*0x1328ea0*/ void AnimComplete(Spine.TrackEntry entry);
}

class CharacterState_Move : CharacterState
{
    /*0x54*/ float m_fMoveSpeed;

    /*0x1328f0c*/ CharacterState_Move(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328f18*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1328f6c*/ void StartStateChild();
    /*0x1329158*/ bool UpdateStateChild();
}

class CharacterState_Move_WorldBoss : CharacterState_Move
{
    /*0x1329160*/ CharacterState_Move_WorldBoss(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132916c*/ void StartStateChild();
}

class CharacterState_Sleep : CharacterState
{
    /*0x13291c0*/ CharacterState_Sleep(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13291cc*/ bool InitStateChild();
    /*0x13291f4*/ void StartStateChild();
}

class CharacterState_StartHAST : CharacterState
{
    /*0x54*/ UnityEngine.Vector3 m_vecMovePos;
    /*0x60*/ bool m_bRightDIR;

    /*0x1329210*/ CharacterState_StartHAST(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132921c*/ bool InitStateChild();
    /*0x13292d0*/ bool CheckStateEnable(bool _bTouchSkill);
}

class CharacterState_Stun : CharacterState
{
    /*0x13294e8*/ CharacterState_Stun(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13294f4*/ bool InitStateChild();
    /*0x132951c*/ void StartStateChild();
}

class CharacterState_Swordcat_Idle : CharacterState_Idle
{
    /*0x5c*/ int m_nPassiveSkillLV;
    /*0x60*/ int m_nAddMP;
    /*0x64*/ int m_nBuffID;
    /*0x68*/ float m_fCounterPercentage;

    /*0x1329538*/ CharacterState_Swordcat_Idle(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1329544*/ bool InitStateChild();
    /*0x132966c*/ void StartStateChild();
    /*0x1329894*/ void ExitStateChild();
    /*0x1329a00*/ void HandleCheckAvoid(CharacterBase _attacker);
    /*0x1329cd0*/ void HandleCheckHit(CharacterBase _attacker, float _f);
    /*0x1329a08*/ void Revenge(CharacterBase _attacker, bool _bAvoid);
}

class ParticleBase : ObjectBase
{
    /*0x3c*/ float Duration;
    /*0x40*/ bool IsFollow;
    /*0x41*/ bool AutoDirection;
    /*0x42*/ bool UseSpine;
    /*0x44*/ Battle.BonePositionType PositionType;
    /*0x48*/ float xPosFactor;
    /*0x4c*/ float yPosFactor;
    /*0x50*/ float zPosForward;
    /*0x58*/ CharacterBase <OwnerDeath>k__BackingField;
    /*0x60*/ UnityEngine.ParticleSystem m_Particle;
    /*0x68*/ Spine.Unity.SkeletonAnimation m_SpineAnimation;
    /*0x70*/ UnityEngine.ParticleSystem[] m_arrParticles;
    /*0x78*/ System.Action m_SpineCompleteAction;
    /*0x80*/ System.Action m_RemoveAction;
    /*0x88*/ float m_fOriginRotation;
    /*0x8c*/ float m_fTime;
    /*0x90*/ float m_fSpeed;
    /*0x94*/ float m_fParticleSpeed;
    /*0x98*/ bool m_bStartInit;
    /*0x99*/ bool m_bLoop;
    /*0x9a*/ bool m_bNoPause;
    /*0x9b*/ bool m_bPuased;
    /*0xa0*/ UnityEngine.Transform m_Transform;
    /*0xa8*/ UnityEngine.Color m_curColor;

    /*0x1143a94*/ ParticleBase();
    /*0x11425e8*/ CharacterBase get_OwnerDeath();
    /*0x11425f0*/ void set_OwnerDeath(CharacterBase value);
    /*0x11425f8*/ void StartInit();
    /*0x1142714*/ void StartInitForUI();
    /*0x11427a4*/ void InitParticleForProjectile();
    /*0x1142864*/ void InitParticleForUI(UnityEngine.Transform _parent, bool _isLoop, float _fSpeed);
    /*0x1142894*/ void InitParticleForUI(UnityEngine.Transform _parent, float _fSpeed);
    /*0x1142b5c*/ void InitParticleForBattle(UnityEngine.Transform _parent, ObjectBase _owner, CharacterBase _ownerDeath);
    /*0x1142e2c*/ void SetNoPuase();
    /*0x1142e38*/ void PlayParticle();
    /*0x1142ef4*/ void PauseParticle(bool _boolean);
    /*0x11430d0*/ void PuaseParticle_ForPausePopup(bool _bPause);
    /*0x1142e04*/ void SetParticleSpeed(float _speed);
    /*0x1142b44*/ void SetParticleSpeedForUI(float _fSpeed);
    /*0x114315c*/ void SetParticleSpeedValue(float _fSpeed);
    /*0x1142a20*/ void SetParticleLoop(bool _bLoop, bool _bIncludeChildren);
    /*0x11431ec*/ void DeleteParticle();
    /*0x1143320*/ void StopParticle();
    /*0x114326c*/ void SetDirectionToOrigin();
    /*0x11433dc*/ void SetDirection(Battle.Direction _eDirection);
    /*0x1143460*/ void SetSpineSkin(string _sSkinName);
    /*0x114351c*/ void SetSpineAnimation(string _sAnimationName, bool _bLoop);
    /*0x11435f4*/ void SetSpineCompleteAction(System.Action _action);
    /*0x114373c*/ void HandleCompleteAnimation(Spine.TrackEntry _entry);
    /*0x11437f0*/ void SetRemoveParticleAction(System.Action _action);
    /*0x1143890*/ void UpdateObject();
    /*0x1143a68*/ bool UpdateTimer(float _fDeltaTime);
}

class ParticleBase_Deathscythe_SP01 : ParticleBase
{
    /*0xb8*/ int ConditionSkillLV;
    /*0xbc*/ float Duration_Default;
    /*0xc0*/ float Duration_LV3;

    /*0x1143b20*/ ParticleBase_Deathscythe_SP01();
    /*0x1143a9c*/ void InitParticleForBattle(UnityEngine.Transform _parent, ObjectBase _owner, CharacterBase _ownerDeath);
}

class ParticleBase_MIDNIGHT_SP02 : ParticleBase
{
    /*0x1143be0*/ ParticleBase_MIDNIGHT_SP02();
    /*0x1143b3c*/ void SetDirection(Battle.Direction _eDirection);
}

class InGameState
{
    /*0x10*/ InGameController m_InGameController;
    /*0x18*/ System.Collections.Generic.Dictionary<Battle.InGameStateMethodType, System.Action> m_dicStateAction;
    /*0x20*/ bool m_bUpdateSync;

    /*0x1571f40*/ InGameState();
    /*0x15717a0*/ void Init();
    /*0x157182c*/ bool CheckStateChangeable();
    void InitAddActions();
    /*0x1571834*/ void AddAction(Battle.InGameStateMethodType _type, System.Action _addAction);
    /*0x1571a00*/ void AddUpdateCountAction();
    /*0x1571a8c*/ void RemoveAction(Battle.InGameStateMethodType _type, System.Action _action);
    /*0x1571b98*/ void Start();
    /*0x1571c68*/ void Update();
    /*0x1571e70*/ void Exit();
}

class InGameState_GameOver : InGameState
{
    /*0x1572110*/ InGameState_GameOver();
    /*0x1571fb8*/ void InitAddActions();
}

class InGameState_GameOver_Verify : InGameState
{
    /*0x15721e4*/ InGameState_GameOver_Verify();
    /*0x1572114*/ void InitAddActions();
}

class InGameState_Idle : InGameState
{
    /*0x15722fc*/ InGameState_Idle();
    /*0x15721e8*/ void InitAddActions();
}

class InGameState_Initialize : InGameState
{
    /*0x157259c*/ InGameState_Initialize();
    /*0x1572300*/ void InitAddActions();

    class <>c
    {
        static /*0x0*/ InGameState_Initialize.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;
        static /*0x10*/ System.Action <>9__0_1;

        static /*0xe4f59c*/ <>c();
        /*0xe4f5fc*/ <>c();
        /*0xe4f604*/ void <InitAddActions>b__0_0();
        /*0xe4f67c*/ void <InitAddActions>b__0_1();
    }
}

class InGameState_None : InGameState
{
    /*0x15725a4*/ InGameState_None();
    /*0x15725a0*/ void InitAddActions();
}

class InGameState_Pause : InGameState
{
    /*0x15725ac*/ InGameState_Pause();
    /*0x15725a8*/ void InitAddActions();
}

class InGameState_Play : InGameState
{
    /*0x15728e4*/ InGameState_Play();
    /*0x15725b0*/ void InitAddActions();
}

class InGameState_Play_DPS : InGameState
{
    /*0x1572ac8*/ InGameState_Play_DPS();
    /*0x15728e8*/ void InitAddActions();
}

class InGameState_Play_Demo : InGameState
{
    /*0x1572cf0*/ InGameState_Play_Demo();
    /*0x1572acc*/ void InitAddActions();
}

class InGameState_Play_GuildWar : InGameState_Play
{
    /*0x1572e98*/ InGameState_Play_GuildWar();
    /*0x1572cf4*/ void InitAddActions();
}

class InGameState_Play_GuildWar_Verify : InGameState_Play_GuildWar
{
    /*0x1572f30*/ InGameState_Play_GuildWar_Verify();
    /*0x1572e9c*/ void InitAddActions();
}

class InGameState_Play_Verify : InGameState_Play
{
    /*0x1572fc8*/ InGameState_Play_Verify();
    /*0x1572f34*/ void InitAddActions();
}

class InGameState_Preview : InGameState
{
    /*0x1572fd0*/ InGameState_Preview();
    /*0x1572fcc*/ void InitAddActions();
}

class InGameState_WorldBossPrev : InGameState
{
    /*0x1573174*/ InGameState_WorldBossPrev();
    /*0x1572fd4*/ void InitAddActions();
    /*0x15730e8*/ void AddUpdateCountAction();
}

class BattleSceneManager : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Camera m_BattleSceneCamera;
    /*0x20*/ UnityEngine.GameObject m_Background;

    /*0xe3e638*/ BattleSceneManager();
    /*0xe3d868*/ void Start();
    /*0xe3e0b4*/ void HandleGameStart();
    /*0xe3e214*/ void HandleGameExit();
    /*0xe3e48c*/ void HandleCameraSetActive(bool _bActive);
}

class BattleStageManager : Singleton.Component.SingletonComponent<BattleStageManager>
{
    /*0x24*/ Battle.GameModeType <CurrentGameMode>k__BackingField;
    /*0x28*/ Battle.BattleStateType <CurrentBattleState>k__BackingField;
    /*0x2c*/ Battle.BattleStateType <CurrentBattleState_Origin>k__BackingField;
    /*0x30*/ TableData.TableData_Stagebattle <CurrentStageData>k__BackingField;
    /*0x38*/ TableData.TableData_Demodata <CurrentDemoData>k__BackingField;
    /*0x40*/ TableData.TableData_Mazebattle <CurrentMazeBattleData>k__BackingField;
    /*0x48*/ int <CurrentRandomSeed>k__BackingField;
    /*0x50*/ string <CurrentStageReplayData>k__BackingField;
    /*0x58*/ CString <CurrentVerifyID>k__BackingField;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> <CurrentVerifyHeroListAlly>k__BackingField;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> <CurrentVerifyHeroListEnemy>k__BackingField;
    /*0x70*/ string <CurrentVerifyStageInfo>k__BackingField;
    /*0x78*/ PTShare.Define.SStatBonus <CurrentStatBonus_VS>k__BackingField;
    /*0x80*/ PTShare.Define.SStatBonus <CurrentStatBonus_My>k__BackingField;
    /*0x88*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSpawnInfo_Ally>k__BackingField;
    /*0x90*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSpawnInfo_Enemy>k__BackingField;
    /*0x98*/ System.Collections.Generic.List<int> <CurrentFactionBuffIDList_Ally>k__BackingField;
    /*0xa0*/ System.Collections.Generic.List<int> <CurrentFactionBuffIDList_Ally2>k__BackingField;
    /*0xa8*/ System.Collections.Generic.List<int> <CurrentFactionBuffIDList_Enemy>k__BackingField;
    /*0xb0*/ string m_sCurrentTotalPowerAlly;
    /*0xb8*/ string m_sCurrentTotalPowerEnemy;
    /*0xc0*/ long m_lCurrentTotalPowerAlly;
    /*0xc8*/ long m_lCurrentTotalPowerEnemy;
    /*0xd0*/ ArenaTargetUser m_CurrentArenaTarget;
    /*0xf0*/ PlayerProfileInfo m_CurrentAllyProfileInfo;
    /*0x118*/ PlayerProfileInfo m_CurrentEnemyProfileInfo;
    /*0x140*/ string m_sCurrentAllyNickname;
    /*0x148*/ string m_sCurrentEnemyNickname;
    /*0x150*/ System.Collections.Generic.List<PTShare.Define.SReplay> m_lisReplayData;
    /*0x158*/ int m_nReplayCount_Max;
    /*0x15c*/ int m_nReplayCount_Current;
    /*0x160*/ HeroTroopPopup_GuildWar <CurrentTroopPopup_GuildBattle>k__BackingField;
    /*0x168*/ int <CurrentFormationID_Ally>k__BackingField;
    /*0x16c*/ int <CurrentFormationID_Enemy>k__BackingField;
    /*0x170*/ System.Collections.Generic.List<int> <CurrentFormationList_VS>k__BackingField;
    /*0x178*/ System.Collections.Generic.List<int> <CurrentFormationList_My>k__BackingField;
    /*0x180*/ System.Collections.Generic.List<int> <RandomUnitIDList>k__BackingField;
    /*0x188*/ int <CurrentGuildWarMyProfileUnitID>k__BackingField;
    /*0x18c*/ int <CurrentGuildWarAttackCaptainID>k__BackingField;
    /*0x190*/ int <CurrentGuildWarDefenseCaptainID>k__BackingField;
    /*0x194*/ int <CurrentMaxCPSupportUnitSkinID_Ally>k__BackingField;
    /*0x198*/ int <CurrentMaxCPSupportUnitSkinID_Enemy>k__BackingField;
    /*0x19c*/ int <CurrentGuildWarMyUnitID>k__BackingField;
    /*0x1a0*/ int <CurrentGuildBattleUnitCount_Ally>k__BackingField;
    /*0x1a4*/ int <CurrentGuildBattleUnitCount_Enemy>k__BackingField;
    /*0x1a8*/ System.Collections.Generic.Dictionary<int, string> <CurrentGuildWarNicknameDic_Ally>k__BackingField;
    /*0x1b0*/ System.Collections.Generic.Dictionary<int, string> <CurrentGuildWarNicknameDic_Enemy>k__BackingField;
    /*0x1b8*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> <CurrentGuildWarBonusStatDic_Ally>k__BackingField;
    /*0x1c0*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> <CurrentGuildWarBonusStatDic_Enemy>k__BackingField;
    /*0x1c8*/ string <CurrentGuildWarUniqueIDs>k__BackingField;
    /*0x1d0*/ ServerProtocol.ResGuildWarFinish <CurrentResGuildWarFinish>k__BackingField;
    /*0x1d8*/ bool GuildWarTest_IsAttackCaptain;
    /*0x1e0*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSupportSpawnInfo_Ally>k__BackingField;
    /*0x1e8*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSupportSpawnInfo_Enemy>k__BackingField;
    /*0x1f0*/ System.Collections.Generic.List<bool> <CurrentSupportSlotUseInfo_Ally>k__BackingField;
    /*0x1f8*/ System.Collections.Generic.List<bool> <CurrentSupportSlotUseInfo_Enemy>k__BackingField;
    /*0x200*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> <CurrentSGuildWarHero_Ally>k__BackingField;
    /*0x208*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> <CurrentSGuildWarHero_Enemy>k__BackingField;
    /*0x210*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, long>, PTShare.Define.SGuildWarHero> m_DicSGuildWarHero_Ally;
    /*0x218*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, long>, PTShare.Define.SGuildWarHero> m_DicSGuildWarHero_Enemy;
    /*0x220*/ BattleStageManager.GuildWarMVPInfo <CurrentGuildWarMVPInfo>k__BackingField;
    /*0x238*/ PTShare.Define.SGuildWarHistory <CurrentGuildWarHistory>k__BackingField;
    /*0x240*/ BattleStageManager.GuildWarGuildInfo <CurrentGuildWarGuildInfo_Ally>k__BackingField;
    /*0x258*/ BattleStageManager.GuildWarGuildInfo <CurrentGuildWarGuildInfo_Enemy>k__BackingField;
    /*0x270*/ double <GW_CurrentMaxValueDamage_Ally>k__BackingField;
    /*0x278*/ double <GW_CurrentMaxValueHit_Ally>k__BackingField;
    /*0x280*/ double <GW_CurrentMaxValueHeal_Ally>k__BackingField;
    /*0x288*/ double <GW_CurrentMaxValueDamage_Enemy>k__BackingField;
    /*0x290*/ double <GW_CurrentMaxValueHit_Enemy>k__BackingField;
    /*0x298*/ double <GW_CurrentMaxValueHeal_Enemy>k__BackingField;
    /*0x2a0*/ System.Collections.Generic.List<Battle.BattleGraphValue> <GW_CurrentGraphList_Ally>k__BackingField;
    /*0x2a8*/ System.Collections.Generic.List<Battle.BattleGraphValue> <GW_CurrentGraphList_Enemy>k__BackingField;
    /*0x2b0*/ TableData.TableData_Pvechallenge <CurrentPveChallengeData>k__BackingField;
    /*0x2b8*/ int CurrentPveRankingVerifyPlaytime;
    /*0x2bc*/ int <CurrentPveRankingDifficulty>k__BackingField;
    /*0x2c0*/ long WorldBoss_PrevRecieveDamage;
    /*0x2c8*/ long WorldBoss_BeginHP_Verify;
    /*0x2d0*/ TableData.TableData_Worldbossstep CurrentWorldBossStepTable;

    static /*0xe3f644*/ PTShare.Define.SHero <GoToBattleSceneForDPS>g__GetSHero|116_0(DPSTest.UnitSetting _setting);
    static /*0xe43bb4*/ long <GetFakeStageDataCP>g__CalcFakeCP|185_0(ref BattleStageManager.<> );
    static /*0xe4438c*/ UnitSpawnInfo <FindUnitStageByTableID>g__Load|190_0(int index, int id, int lv, int grade, int tier, int initbuff, int mp, int[] equips, ref BattleStageManager.<> );
    static /*0xe47704*/ System.Collections.Generic.List<Battle.BattleGraphValue> <SetGuildWarReplayDatasWithHistory>g__GetGraphList|390_2(System.Collections.Generic.List<string> _lisGraphDatas, System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero);
    static /*0xe48d30*/ string[] <SetEnemyUnitSpawnInfoListWithPVEChallengeData>g__SplitInfo|404_0(string _str);
    /*0xe491e4*/ BattleStageManager();
    /*0xe3e640*/ Battle.GameModeType get_CurrentGameMode();
    /*0xe3e648*/ void set_CurrentGameMode(Battle.GameModeType value);
    /*0xe3e650*/ Battle.BattleStateType get_CurrentBattleState();
    /*0xe3e658*/ void set_CurrentBattleState(Battle.BattleStateType value);
    /*0xe3e660*/ Battle.BattleStateType get_CurrentBattleState_Origin();
    /*0xe3e668*/ void set_CurrentBattleState_Origin(Battle.BattleStateType value);
    /*0xe3e670*/ TableData.TableData_Stagebattle get_CurrentStageData();
    /*0xe3e678*/ void set_CurrentStageData(TableData.TableData_Stagebattle value);
    /*0xe3e680*/ TableData.TableData_Demodata get_CurrentDemoData();
    /*0xe3e688*/ void set_CurrentDemoData(TableData.TableData_Demodata value);
    /*0xe3e690*/ TableData.TableData_Mazebattle get_CurrentMazeBattleData();
    /*0xe3e698*/ void set_CurrentMazeBattleData(TableData.TableData_Mazebattle value);
    /*0xe3e6a0*/ int get_CurrentRandomSeed();
    /*0xe3e6a8*/ void set_CurrentRandomSeed(int value);
    /*0xe3e6b0*/ string get_CurrentStageReplayData();
    /*0xe3e6b8*/ void set_CurrentStageReplayData(string value);
    /*0xe3e6c0*/ CString get_CurrentVerifyID();
    /*0xe3e6c8*/ void set_CurrentVerifyID(CString value);
    /*0xe3e6d0*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> get_CurrentVerifyHeroListAlly();
    /*0xe3e6d8*/ void set_CurrentVerifyHeroListAlly(System.Collections.Generic.List<PTShare.Define.SVerifyHero> value);
    /*0xe3e6e0*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> get_CurrentVerifyHeroListEnemy();
    /*0xe3e6e8*/ void set_CurrentVerifyHeroListEnemy(System.Collections.Generic.List<PTShare.Define.SVerifyHero> value);
    /*0xe3e6f0*/ string get_CurrentVerifyStageInfo();
    /*0xe3e6f8*/ void set_CurrentVerifyStageInfo(string value);
    /*0xe3e700*/ PTShare.Define.SStatBonus get_CurrentStatBonus_VS();
    /*0xe3e708*/ void set_CurrentStatBonus_VS(PTShare.Define.SStatBonus value);
    /*0xe3e710*/ PTShare.Define.SStatBonus get_CurrentStatBonus_My();
    /*0xe3e718*/ void set_CurrentStatBonus_My(PTShare.Define.SStatBonus value);
    /*0xe3e720*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSpawnInfo_Ally();
    /*0xe3e728*/ void set_CurrentSpawnInfo_Ally(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe3e730*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSpawnInfo_Enemy();
    /*0xe3e738*/ void set_CurrentSpawnInfo_Enemy(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe3e740*/ System.Collections.Generic.List<int> get_CurrentFactionBuffIDList_Ally();
    /*0xe3e748*/ void set_CurrentFactionBuffIDList_Ally(System.Collections.Generic.List<int> value);
    /*0xe3e750*/ System.Collections.Generic.List<int> get_CurrentFactionBuffIDList_Ally2();
    /*0xe3e758*/ void set_CurrentFactionBuffIDList_Ally2(System.Collections.Generic.List<int> value);
    /*0xe3e760*/ System.Collections.Generic.List<int> get_CurrentFactionBuffIDList_Enemy();
    /*0xe3e768*/ void set_CurrentFactionBuffIDList_Enemy(System.Collections.Generic.List<int> value);
    /*0xe34218*/ bool get_IsEventBoss1st();
    /*0xe3e770*/ bool get_IsCurrentReplay();
    /*0xe3e780*/ bool get_IsSelectReplay();
    /*0xe3e790*/ bool get_IsVerifyReplay();
    /*0xe345ec*/ bool get_IsReplay();
    /*0xe3e7a0*/ bool get_IsCustom();
    /*0xe330bc*/ bool get_IsTutorial();
    /*0xe36b28*/ bool get_IsArena();
    /*0xe3e7b0*/ string get_UserToken();
    /*0xe3e830*/ void AwakeInstance();
    /*0xe3e834*/ bool InitInstance();
    /*0xe3e83c*/ void ReleaseInstance();
    /*0xe3e840*/ void InitializeCurrentSettingsForIdle();
    /*0xe3e86c*/ void InitializeCurrentSettingsForGameReady();
    /*0xe34f5c*/ void StartBattleFromBattleScene();
    /*0xe3e9ec*/ void SceneChange(Battle.GameModeType _eGameModeType, bool _bNoLoadingPage);
    /*0xe3eaa8*/ void ChangeToBattleScene(Battle.GameModeType _eGameModeType, Battle.BattleStateType _eBattleStateType);
    /*0xe3eab4*/ void GoToBattleSceneForStage(Battle.GameModeType _eGameModeType, int _nBattleID);
    /*0xe3f16c*/ void GoToBattleSceneForDemo(int _nUnitID, int _nSkinID);
    /*0xe3f450*/ void GoToBattleSceneForDPS();
    /*0xe3f8dc*/ void GoToBattleSceneForTutorialBattle(int _nBattleID, System.Collections.Generic.List<PTShare.Define.SHero> _lisSHero);
    /*0xe3fa68*/ void GoToBattleSceneForArena(PTShare.Define.ArenaSubType _ArenaType, ArenaTargetUser _ArenaTarget, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero);
    /*0xe40134*/ void GoToBattleSceneForMaze(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisEnemyHero);
    /*0xe403dc*/ void GoToBattleSceneForFriendBattle(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero, long _lFriendPlayerID);
    /*0xe405a8*/ void GoToBattleSceneForGuildHunt(int _nBattleID);
    /*0xe406f4*/ void GoToBattleSceneForEventBoss(int _nBattleID);
    /*0xe40768*/ void GoToBattleSceneForDungeon(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisEnemyHero, int _nBattleID);
    /*0xe40b70*/ void StartRetryCurrentStage();
    /*0xe40b9c*/ void StartVerify_Server();
    /*0xe41bf4*/ void StartVerify_Client();
    /*0xe2f388*/ void StartReplayCurrentStage(bool _bEnableVerify);
    /*0xe41c08*/ void StartReplay(Battle.GameModeType _eGameModeType, int _nStageID, int _nRandomSeed, string _sReplayData, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisAllyHero, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero);
    /*0xe41ff0*/ void StartReplayArena(Battle.GameModeType _eGameModeType, int _nRandomSeed, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisAllyHero, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero);
    /*0xe42008*/ void StartArenaResult();
    /*0xe4201c*/ void SetHeroSelectList(Battle.GameModeType _eGameModeType, Battle.HeroSelectValue[] _arrHeroID);
    /*0xe42338*/ System.Collections.Generic.List<Battle.HeroSelectValue> GetHeroSelectList(Battle.GameModeType _eGameModeType);
    /*0xe3e8b8*/ string GetHeroSelectListToString(Battle.GameModeType _eGameModeType);
    /*0xe42350*/ void SetHeroListCampainClear();
    /*0xe423e4*/ System.Collections.Generic.List<Battle.HeroSelectValue> GetHeroListCampainClear();
    /*0xe3484c*/ int[] GetCurrentUnitIDListForBuffIcon(Helper_FactionBuff.FactionBuffType _eType);
    /*0xe423f0*/ int[] GetCurrentAllyUnitIDList();
    /*0xe42604*/ int[] GetCurrentEnemyUnitIDList();
    /*0xe42818*/ System.Collections.Generic.List<UnitSpawnInfo> GetCurrentUnitSpawnInfoList(bool _bPlayer);
    /*0xe42830*/ UnitSpawnInfo GetCurrentUnitSpawnInfo(bool _bPlayer, int _nIndex);
    /*0xe3ebe0*/ void SetCurrentStageBattleData(int _nBattleID);
    /*0xe3e878*/ void SetRandomSeed(int _nRandomSeed);
    /*0xe428cc*/ void SetCurrentStatBonus_VS(PTShare.Define.SStatBonus _statBonus);
    /*0xe3ebd8*/ void SetCurrentStatBonus_My(PTShare.Define.SStatBonus _statBonus);
    /*0xe41f68*/ PTShare.Define.SStatBonus GetCurrentStatBonusForBattle(bool _bAlly);
    /*0xe42914*/ PTShare.Define.SStatBonus GetCurrentStatBonusForTroop(bool _bAlly);
    /*0xe42a14*/ PTShare.Define.SStatBonus GetCurrentStatBonus(bool _bAlly);
    /*0xe428d4*/ PTShare.Define.SStatBonus GetCurrentStatBonusWithGameMode(bool _bAlly, Battle.GameModeType _eGameMode);
    /*0xe42aa4*/ void SetTotalPower(string _sTotalPowerAlly, string _sTotalPowerEnemy);
    /*0xe41fac*/ void SetTotalPower(long _lTotalPowerAlly, long _lTotalPowerEnemy);
    /*0xe42aac*/ long GetTotalPower(bool _bPlayer);
    /*0xe2ef50*/ string GetTotalPower_String(bool _bPlayer);
    /*0xe42ac4*/ void SetCurrentArenaTarget(ArenaTargetUser _arenaTargetUser);
    /*0xe42ad0*/ ArenaTargetUser GetCurrentArenaTarget();
    /*0xe41f60*/ void SetCurrentStageReplayData(string _sData);
    /*0xe42adc*/ void SetAllyProfileInfo(PlayerProfileInfo _profileInfo);
    /*0xe42af0*/ PlayerProfileInfo GetAllyProfileInfo();
    /*0xe42b04*/ void SetEnemyProfileInfo(PlayerProfileInfo _profileInfo);
    /*0xe42b24*/ PlayerProfileInfo GetEnemyProfileInfo();
    /*0xe42b44*/ void SetAllyNickname(string _sNickname);
    /*0xe42b4c*/ void SetEnemyNickname(string _sNickname);
    /*0xe42b54*/ string GetEnemyNickname();
    /*0xe42b5c*/ string GetAllyNickname();
    /*0xe4219c*/ void SetAllyUnitInfoListWithSelectList(Battle.HeroSelectValue[] _arrHeroSelect);
    /*0xe3f2d4*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SHero> _lisSHero, bool _bAlly);
    /*0xe42b64*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe3fda4*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, bool _bAlly);
    /*0xe3ff2c*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, System.Collections.Generic.List<int> _liBlinds, bool _bAlly);
    /*0xe42cec*/ void SetUnitSpawnInfoList_WorldBoss(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe42e7c*/ void SetUnitSpawnInfoList_ForPveRanking(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, bool _bAlly);
    /*0xe43004*/ void SetUnitSpawnInfoList_ForPveRanking(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe4318c*/ void SetUnitSpawnInfoList_WorldBoss(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, bool _bAlly);
    /*0xe4331c*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisSCondisionHero, bool _bAlly);
    /*0xe40250*/ void SetUnitSpawnInfoListForMaze(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisSCondisionHero, bool _bAlly);
    /*0xe434a4*/ void SetUnitSpawnInfoListForMaze(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe408dc*/ void SetUnitSpawnInfoList_ForDungeon(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisSCondisionHero, bool _bAlly);
    /*0xe43630*/ void SetUnitSpawnInfoList_ForDungeon(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly, int _nDungeonID, int _nDungeonLV);
    /*0xe438e8*/ void CreateEmptyEnemyUnitSpawnInfoList();
    /*0xe3ec0c*/ System.Collections.Generic.List<UnitSpawnInfo> SetEnemyUnitSpawnInfoListWithStageData(Battle.GameModeType _eGameMode, bool _bOverrideInfo);
    /*0xe41d74*/ void UpdateAllyUnitSpawnDataWithStageData();
    /*0xe43a28*/ void SetCurrentBattleState(Battle.BattleStateType _eStateType);
    /*0xe43a30*/ int GetFakeStageDataLevel(TableData.TableData_Stagebattle _stageBattleData, int _nUnitID, int _nUnitLV, int _nUnitGrade);
    /*0xe43b0c*/ int GetFakeStageDataLevel(int _nUnitID, int _nUnitLV, int _nUnitGrade);
    /*0xe43b24*/ int GetFakeMazeDataLevel(int _nIndex);
    /*0xe43b74*/ long GetFakeStageDataCP(TableData.TableData_Stagebattle _stageBattleData);
    /*0xe43d50*/ long GetFakeStageDataCP();
    /*0xe43d94*/ long GetFakeMazeDataCP(System.Collections.Generic.List<int> _lisUnitID);
    /*0xe41d44*/ bool CheckUseStageData();
    /*0xe4206c*/ DataStorage.DATA_BATTLE.TroopModeType ConvertGameModeToTroopMode(Battle.GameModeType _eGameMode);
    /*0xe43f98*/ System.Collections.Generic.List<UnitSpawnInfo> FindUnitStageByTableID(int _index);
    /*0xe3f9b8*/ Battle.GameModeType GetGameModeWithCurrentStageData();
    /*0xe44608*/ void ChangeForegroundImageMatchStage(UnityEngine.UI.Image _image, Battle.GameModeType _eGameMode);
    /*0xe446c0*/ UnityEngine.Sprite GetChapterBGSpriteWithGameMode(Battle.GameModeType _eGameMode);
    /*0xe3e0ac*/ string GetChapterBackgroundNameWithCurrentGameMode();
    /*0xe447e4*/ string GetChapterBackgroundName(Battle.GameModeType _eGameMode);
    /*0xe4493c*/ HeroTroopPopup_GuildWar get_CurrentTroopPopup_GuildBattle();
    /*0xe44944*/ void set_CurrentTroopPopup_GuildBattle(HeroTroopPopup_GuildWar value);
    /*0xe4494c*/ int get_CurrentFormationID_Ally();
    /*0xe44954*/ void set_CurrentFormationID_Ally(int value);
    /*0xe4495c*/ int get_CurrentFormationID_Enemy();
    /*0xe44964*/ void set_CurrentFormationID_Enemy(int value);
    /*0xe4496c*/ System.Collections.Generic.List<int> get_CurrentFormationList_VS();
    /*0xe44974*/ void set_CurrentFormationList_VS(System.Collections.Generic.List<int> value);
    /*0xe4497c*/ System.Collections.Generic.List<int> get_CurrentFormationList_My();
    /*0xe44984*/ void set_CurrentFormationList_My(System.Collections.Generic.List<int> value);
    /*0xe4498c*/ System.Collections.Generic.List<int> get_RandomUnitIDList();
    /*0xe44994*/ void set_RandomUnitIDList(System.Collections.Generic.List<int> value);
    /*0xe4499c*/ int get_CurrentGuildWarMyProfileUnitID();
    /*0xe449a4*/ void set_CurrentGuildWarMyProfileUnitID(int value);
    /*0xe449ac*/ int get_CurrentGuildWarAttackCaptainID();
    /*0xe449b4*/ void set_CurrentGuildWarAttackCaptainID(int value);
    /*0xe449bc*/ int get_CurrentGuildWarDefenseCaptainID();
    /*0xe449c4*/ void set_CurrentGuildWarDefenseCaptainID(int value);
    /*0xe449cc*/ int get_CurrentMaxCPSupportUnitSkinID_Ally();
    /*0xe449d4*/ void set_CurrentMaxCPSupportUnitSkinID_Ally(int value);
    /*0xe449dc*/ int get_CurrentMaxCPSupportUnitSkinID_Enemy();
    /*0xe449e4*/ void set_CurrentMaxCPSupportUnitSkinID_Enemy(int value);
    /*0xe449ec*/ int get_CurrentGuildWarMyUnitID();
    /*0xe449f4*/ void set_CurrentGuildWarMyUnitID(int value);
    /*0xe449fc*/ int get_CurrentGuildBattleUnitCount_Ally();
    /*0xe44a04*/ void set_CurrentGuildBattleUnitCount_Ally(int value);
    /*0xe44a0c*/ int get_CurrentGuildBattleUnitCount_Enemy();
    /*0xe44a14*/ void set_CurrentGuildBattleUnitCount_Enemy(int value);
    /*0xe44a1c*/ System.Collections.Generic.Dictionary<int, string> get_CurrentGuildWarNicknameDic_Ally();
    /*0xe44a24*/ void set_CurrentGuildWarNicknameDic_Ally(System.Collections.Generic.Dictionary<int, string> value);
    /*0xe44a2c*/ System.Collections.Generic.Dictionary<int, string> get_CurrentGuildWarNicknameDic_Enemy();
    /*0xe44a34*/ void set_CurrentGuildWarNicknameDic_Enemy(System.Collections.Generic.Dictionary<int, string> value);
    /*0xe44a3c*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> get_CurrentGuildWarBonusStatDic_Ally();
    /*0xe44a44*/ void set_CurrentGuildWarBonusStatDic_Ally(System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> value);
    /*0xe44a4c*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> get_CurrentGuildWarBonusStatDic_Enemy();
    /*0xe44a54*/ void set_CurrentGuildWarBonusStatDic_Enemy(System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> value);
    /*0xe44a5c*/ string get_CurrentGuildWarUniqueIDs();
    /*0xe44a64*/ void set_CurrentGuildWarUniqueIDs(string value);
    /*0xe44a6c*/ ServerProtocol.ResGuildWarFinish get_CurrentResGuildWarFinish();
    /*0xe44a74*/ void set_CurrentResGuildWarFinish(ServerProtocol.ResGuildWarFinish value);
    /*0xe44a7c*/ void GoToBattleSceneForGuildWar(ServerProtocol.ResGuildWarChoice _resGuildWarChoice);
    /*0xe45004*/ int get_GuildWarTest_GetVSCaptianProfileID();
    /*0xe45020*/ void GoToBattleSceneForGuildWarTest();
    /*0xe2f4cc*/ void StartReplayGuildWar();
    /*0xe452f8*/ void StartGuildWarResult();
    /*0xe4530c*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSupportSpawnInfo_Ally();
    /*0xe45314*/ void set_CurrentSupportSpawnInfo_Ally(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe4531c*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSupportSpawnInfo_Enemy();
    /*0xe45324*/ void set_CurrentSupportSpawnInfo_Enemy(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe4532c*/ System.Collections.Generic.List<bool> get_CurrentSupportSlotUseInfo_Ally();
    /*0xe45334*/ void set_CurrentSupportSlotUseInfo_Ally(System.Collections.Generic.List<bool> value);
    /*0xe4533c*/ System.Collections.Generic.List<bool> get_CurrentSupportSlotUseInfo_Enemy();
    /*0xe45344*/ void set_CurrentSupportSlotUseInfo_Enemy(System.Collections.Generic.List<bool> value);
    /*0xe4534c*/ void SetGuildWarHeroListForVerify(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisHero, bool _bAlly);
    /*0xe45990*/ void SetGuildWarHeroListForReplay(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisHero, bool _bAlly);
    /*0xe44e7c*/ void SetGuildWarHeroListForBattle(bool _bAlly, System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero);
    /*0xe45b18*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisSHero, bool _bAlly);
    /*0xe45fe0*/ void SetSupportUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisSHero, bool _bAlly);
    /*0xe464a4*/ System.Collections.Generic.List<UnitSpawnInfo> GetCurrentSupportUnitSpawnInfoList(bool _bPlayer);
    /*0xe457f0*/ void SetSpawnUnitListWithGuildWarHeros(bool _bAlly);
    /*0xe464bc*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> get_CurrentSGuildWarHero_Ally();
    /*0xe464c4*/ void set_CurrentSGuildWarHero_Ally(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> value);
    /*0xe464cc*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> get_CurrentSGuildWarHero_Enemy();
    /*0xe464d4*/ void set_CurrentSGuildWarHero_Enemy(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> value);
    /*0xe454e4*/ void SetGuildWarHeroList(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _list, bool _bPlayer);
    /*0xe45e90*/ PTShare.Define.SGuildWarHero FindGuildWarHero(int _nHeroID, long _lPlayerID, bool _bPlayer);
    /*0xe464dc*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> FindGuildWarHeroListWithProperty(PropertyType _eProperty);
    /*0xe465dc*/ void SetGuildWarNicknameForReplayGraph(System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero, bool _bAlly);
    /*0xe44ba4*/ void SetGuildWarStatBonusAndNickname(System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero, bool _bAlly);
    /*0xe46730*/ void SetGuildWarNickname_GuildWarTest(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisHero, System.Collections.Generic.List<PTShare.Define.SStatBonusHero> _lisStatBonus, bool _bAlly);
    /*0xe46b30*/ void SetGuildWarStatBonusForVerify(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisHero, bool _bAlly);
    /*0xe46c84*/ string FindGuildWarNicknameWithUnitID(int _nUnitID, bool _bAlly);
    /*0xe463e0*/ PTShare.Define.SStatBonus FindGuildWarStatBonusWithUnitID(int _nUnitID, bool _bAlly);
    /*0xe46df4*/ void ChangeForegroundImageMatchStage_ForGuildBattle(UnityEngine.UI.Image _image, bool _bSupportView);
    /*0xe46fac*/ void SetFormation(System.Collections.Generic.List<int> _lisFormation, int _nFormationID, bool _bPlayer);
    /*0xe46fd4*/ void SetFormation(int _nFormationID, bool _bPlayer);
    /*0xe37e2c*/ void SetGuildBattleUnitCount();
    /*0xe47174*/ int DiscountGuildBattleUnitCount(bool _bAlly);
    /*0xe38094*/ int GetCurrentGuildBattleUnitCount(bool _bAlly);
    /*0xe4719c*/ BattleStageManager.GuildWarMVPInfo get_CurrentGuildWarMVPInfo();
    /*0xe471b0*/ void set_CurrentGuildWarMVPInfo(BattleStageManager.GuildWarMVPInfo value);
    /*0xe471c4*/ PTShare.Define.SGuildWarHistory get_CurrentGuildWarHistory();
    /*0xe471cc*/ void set_CurrentGuildWarHistory(PTShare.Define.SGuildWarHistory value);
    /*0xe471d4*/ BattleStageManager.GuildWarGuildInfo get_CurrentGuildWarGuildInfo_Ally();
    /*0xe471e8*/ void set_CurrentGuildWarGuildInfo_Ally(BattleStageManager.GuildWarGuildInfo value);
    /*0xe471fc*/ BattleStageManager.GuildWarGuildInfo get_CurrentGuildWarGuildInfo_Enemy();
    /*0xe47214*/ void set_CurrentGuildWarGuildInfo_Enemy(BattleStageManager.GuildWarGuildInfo value);
    /*0xe46d40*/ bool get_GuildWar_AllyIsAttacker();
    /*0xe4722c*/ double get_GW_CurrentMaxValueDamage_Ally();
    /*0xe47234*/ void set_GW_CurrentMaxValueDamage_Ally(double value);
    /*0xe4723c*/ double get_GW_CurrentMaxValueHit_Ally();
    /*0xe47244*/ void set_GW_CurrentMaxValueHit_Ally(double value);
    /*0xe4724c*/ double get_GW_CurrentMaxValueHeal_Ally();
    /*0xe47254*/ void set_GW_CurrentMaxValueHeal_Ally(double value);
    /*0xe4725c*/ double get_GW_CurrentMaxValueDamage_Enemy();
    /*0xe47264*/ void set_GW_CurrentMaxValueDamage_Enemy(double value);
    /*0xe4726c*/ double get_GW_CurrentMaxValueHit_Enemy();
    /*0xe47274*/ void set_GW_CurrentMaxValueHit_Enemy(double value);
    /*0xe4727c*/ double get_GW_CurrentMaxValueHeal_Enemy();
    /*0xe47284*/ void set_GW_CurrentMaxValueHeal_Enemy(double value);
    /*0xe2fc10*/ double get_GW_CurrentMaxValueDamage();
    /*0xe2fc24*/ double get_GW_CurrentMaxValueHit();
    /*0xe2fc38*/ double get_GW_CurrentMaxValueHeal();
    /*0xe4728c*/ System.Collections.Generic.List<Battle.BattleGraphValue> get_GW_CurrentGraphList_Ally();
    /*0xe47294*/ void set_GW_CurrentGraphList_Ally(System.Collections.Generic.List<Battle.BattleGraphValue> value);
    /*0xe4729c*/ System.Collections.Generic.List<Battle.BattleGraphValue> get_GW_CurrentGraphList_Enemy();
    /*0xe472a4*/ void set_GW_CurrentGraphList_Enemy(System.Collections.Generic.List<Battle.BattleGraphValue> value);
    /*0xe45280*/ void SetGuildWarGuildInfos(int _nEmblemID, int _nFrameID, int _nLevel, string _sGuildName, bool _bAlly);
    /*0xe472ac*/ void SetGuildWarReplayDatasWithHistory(PTShare.Define.SGuildWarHistory _history);
    /*0xe2f560*/ void SetGuildWarReplayDatas(ServerProtocol.ResGuildWarReplay _replayData);
    /*0xe47ca4*/ void SortBattleGraphValueAndSelectMVP(bool _bAlly, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValue, bool _bSetMVPInfo);
    /*0xe48268*/ TableData.TableData_Pvechallenge get_CurrentPveChallengeData();
    /*0xe48270*/ void set_CurrentPveChallengeData(TableData.TableData_Pvechallenge value);
    /*0xe48278*/ int get_CurrentPveRankingDifficulty();
    /*0xe48280*/ void set_CurrentPveRankingDifficulty(int value);
    /*0xe48288*/ void GoToBattleSceneForPVE(int _nChallengeID, int _nChallengeLV, int _nDifficulty);
    /*0xe3e8d0*/ void Send_PveRanking(string _sHeroIDs, System.Action<ServerProtocol.ResPveRankingBegin> _res);
    /*0xe483ec*/ void SetEnemyUnitSpawnInfoListWithPVEChallengeData();
    /*0xe48ec4*/ void GoToBattleSceneForWorldBoss();
    /*0xe48f18*/ void GoToBattleSceneForWorldBoss(int bossId, int bossLevel, int bossGrade, long damage);
    /*0xe493bc*/ void <StartBattleFromBattleScene>b__111_7();
    /*0xe49418*/ void <StartBattleFromBattleScene>b__111_8();
    /*0xe49474*/ void <StartBattleFromBattleScene>b__111_1();
    /*0xe494d0*/ void <StartBattleFromBattleScene>b__111_2(int randomSeed);
    /*0xe49544*/ void <StartBattleFromBattleScene>b__111_3(int randomSeed, System.Collections.Generic.List<PTShare.Define.SBattleHero> sBattleHeroList);
    /*0xe495b8*/ void <StartBattleFromBattleScene>b__111_4(int randomSeed, System.Collections.Generic.List<PTShare.Define.SBattleHero> sBattleHeroList);
    /*0xe4962c*/ void <StartBattleFromBattleScene>b__111_5(int randomSeed);
    /*0xe496a0*/ void <StartBattleFromBattleScene>b__111_6(ServerProtocol.ResPveRankingBegin res);
    /*0xe49728*/ void <GoToBattleSceneForFriendBattle>b__120_0(ServerProtocol.ResAccountDetail response);
    /*0xe497c4*/ void <StartVerify_Server>b__125_0(ServerProtocol.ResAdminVerifyBegin res);
    /*0xe49854*/ void <StartVerify_Server>b__125_1(int resFail, string args);
    /*0xe40db4*/ void <StartVerify_Server>g__StartVerify|125_2(PTShare.Define.SReplay _replayData);
    /*0xe49970*/ void <UpdateAllyUnitSpawnDataWithStageData>b__180_1(UnitSpawnInfo f);
    /*0xe43dd8*/ long <GetFakeMazeDataCP>g__CalcFakeCP|187_0(ref BattleStageManager.<> );
    /*0xe499ac*/ void <GoToBattleSceneForGuildWarTest>b__280_0(ServerProtocol.ResGuildWarDeck res);
    /*0xe49adc*/ void <GoToBattleSceneForGuildWarTest>b__280_1(ServerProtocol.ResGuildWarDeck res2);
    /*0xe47b48*/ long <SetGuildWarReplayDatasWithHistory>g__SetTotalPowerWithGuildWarHeros|390_1(System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero, bool _bAlly);

    struct GuildWarMVPInfo
    {
        /*0x10*/ PTShare.Define.SHero sHero;
        /*0x18*/ string nickname;
        /*0x20*/ int skinID;
    }

    struct GuildWarGuildInfo
    {
        /*0x10*/ int emblemID;
        /*0x14*/ int frameID;
        /*0x18*/ int level;
        /*0x20*/ string guildName;

        /*0xa828dc*/ GuildWarGuildInfo(int _nEmblemID, int _nFrameID, int _nLevel, string _sGuildName);
    }

    class <>c
    {
        static /*0x0*/ BattleStageManager.<> <>9;
        static /*0x8*/ System.Action<int> <>9__111_0;
        static /*0x10*/ System.Func<UnitSpawnInfo, bool> <>9__137_0;
        static /*0x18*/ System.Func<UnitSpawnInfo, int> <>9__137_1;
        static /*0x20*/ System.Func<UnitSpawnInfo, bool> <>9__138_0;
        static /*0x28*/ System.Func<UnitSpawnInfo, int> <>9__138_1;
        static /*0x30*/ System.Converter<PTShare.Define.SHero, UnitSpawnInfo> <>9__165_0;
        static /*0x38*/ System.Func<int, PTShare.Define.SEquip> <>9__179_0;
        static /*0x40*/ System.Func<UnitSpawnInfo, bool> <>9__180_0;
        static /*0x48*/ System.Converter<PTShare.Define.SGuildWarHero, UnitSpawnInfo> <>9__302_0;
        static /*0x50*/ System.Func<PTShare.Define.SGuildWarHero, int> <>9__316_0;
        static /*0x58*/ System.Func<PTShare.Define.SGuildWarHero, System.ValueTuple<int, long>> <>9__316_1;
        static /*0x60*/ System.Func<PTShare.Define.SGuildWarHero, System.ValueTuple<int, long>> <>9__316_2;
        static /*0x68*/ System.Predicate<PTShare.Define.SGuildWarBattleHero> <>9__390_0;
        static /*0x70*/ System.Comparison<PTShare.Define.SGuildWarBattleHero> <>9__390_3;
        static /*0x78*/ System.Func<char, bool> <>9__404_1;

        static /*0xda17d0*/ <>c();
        /*0xda1830*/ <>c();
        /*0xda1838*/ void <StartBattleFromBattleScene>b__111_0(int randomSeed);
        /*0xda1894*/ bool <GetCurrentAllyUnitIDList>b__137_0(UnitSpawnInfo w);
        /*0xda18a0*/ int <GetCurrentAllyUnitIDList>b__137_1(UnitSpawnInfo s);
        /*0xda18b8*/ bool <GetCurrentEnemyUnitIDList>b__138_0(UnitSpawnInfo w);
        /*0xda18c4*/ int <GetCurrentEnemyUnitIDList>b__138_1(UnitSpawnInfo s);
        /*0xda18dc*/ UnitSpawnInfo <SetUnitSpawnInfoList>b__165_0(PTShare.Define.SHero s);
        /*0xda1948*/ PTShare.Define.SEquip <SetEnemyUnitSpawnInfoListWithStageData>b__179_0(int s);
        /*0xda19a8*/ bool <UpdateAllyUnitSpawnDataWithStageData>b__180_0(UnitSpawnInfo w);
        /*0xda19b4*/ UnitSpawnInfo <SetUnitSpawnInfoList>b__302_0(PTShare.Define.SGuildWarHero s);
        /*0xda1a20*/ int <SetGuildWarHeroList>b__316_0(PTShare.Define.SGuildWarHero x);
        /*0xda1a38*/ System.ValueTuple<int, long> <SetGuildWarHeroList>b__316_1(PTShare.Define.SGuildWarHero x);
        /*0xda1aa8*/ System.ValueTuple<int, long> <SetGuildWarHeroList>b__316_2(PTShare.Define.SGuildWarHero x);
        /*0xda1b18*/ bool <SetGuildWarReplayDatasWithHistory>b__390_0(PTShare.Define.SGuildWarBattleHero x);
        /*0xda1bb4*/ int <SetGuildWarReplayDatasWithHistory>b__390_3(PTShare.Define.SGuildWarBattleHero a, PTShare.Define.SGuildWarBattleHero b);
        /*0xda1be0*/ bool <SetEnemyUnitSpawnInfoListWithPVEChallengeData>b__404_1(char w);
    }

    class <>c__DisplayClass125_0
    {
        /*0x10*/ string modeInfo;

        /*0xda1c10*/ <>c__DisplayClass125_0();
        /*0xda1c18*/ bool <StartVerify_Server>b__3(TableData.TableData_Guildboss x);
    }

    class <>c__DisplayClass166_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1c50*/ <>c__DisplayClass166_0();
        /*0xda1c58*/ void <SetUnitSpawnInfoList>b__0(PTShare.Define.SVerifyHero _hero);
    }

    class <>c__DisplayClass167_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1d08*/ <>c__DisplayClass167_0();
        /*0xda1d10*/ void <SetUnitSpawnInfoList>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass169_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1dc4*/ <>c__DisplayClass169_0();
        /*0xda1dcc*/ void <SetUnitSpawnInfoList_WorldBoss>b__0(PTShare.Define.SVerifyHero _hero);
    }

    class <>c__DisplayClass170_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1e7c*/ <>c__DisplayClass170_0();
        /*0xda1e84*/ void <SetUnitSpawnInfoList_ForPveRanking>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass171_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1f38*/ <>c__DisplayClass171_0();
        /*0xda1f40*/ void <SetUnitSpawnInfoList_ForPveRanking>b__0(PTShare.Define.SVerifyHero _hero);
    }

    class <>c__DisplayClass172_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1ff0*/ <>c__DisplayClass172_0();
        /*0xda1ff8*/ void <SetUnitSpawnInfoList_WorldBoss>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass173_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda20ac*/ <>c__DisplayClass173_0();
        /*0xda20b4*/ void <SetUnitSpawnInfoList>b__0(PTShare.Define.SConditionHero _hero);
    }

    class <>c__DisplayClass174_0
    {
        /*0x10*/ bool _bAlly;
        /*0x18*/ BattleStageManager <>4__this;
        /*0x20*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda2164*/ <>c__DisplayClass174_0();
        /*0xda216c*/ void <SetUnitSpawnInfoListForMaze>b__0(PTShare.Define.SConditionHero _hero);
    }

    class <>c__DisplayClass175_0
    {
        /*0x10*/ bool _bAlly;
        /*0x18*/ BattleStageManager <>4__this;
        /*0x20*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda22c0*/ <>c__DisplayClass175_0();
        /*0xda22c8*/ void <SetUnitSpawnInfoListForMaze>b__0(PTShare.Define.SVerifyHero _hero);
    }

    struct <>c__DisplayClass185_0
    {
        /*0x10*/ TableData.TableData_Stagebattle _stageBattleData;
    }

    struct <>c__DisplayClass187_0
    {
        /*0x10*/ BattleStageManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<int> _lisUnitID;
    }

    struct <>c__DisplayClass190_0
    {
        /*0x10*/ TableData.TableData_Stagebattle tStageBattle;
    }

    class <>c__DisplayClass302_0
    {
        /*0x10*/ int slotCount;
        /*0x18*/ System.Predicate<PTShare.Define.SGuildWarHero> <>9__1;

        /*0xda241c*/ <>c__DisplayClass302_0();
        /*0xda2424*/ bool <SetUnitSpawnInfoList>b__1(PTShare.Define.SGuildWarHero x);
    }

    class <>c__DisplayClass303_0
    {
        /*0x10*/ int i;

        /*0xda2448*/ <>c__DisplayClass303_0();
        /*0xda2450*/ bool <SetSupportUnitSpawnInfoList>b__0(PTShare.Define.SGuildWarHero x);
    }

    class <>c__DisplayClass318_0
    {
        /*0x10*/ PropertyType _eProperty;

        /*0xda2474*/ <>c__DisplayClass318_0();
        /*0xda247c*/ bool <FindGuildWarHeroListWithProperty>b__0(PTShare.Define.SGuildWarHero x);
    }

    class <>c__DisplayClass321_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisHero;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__0;

        /*0xda24a0*/ <>c__DisplayClass321_0();
        /*0xda24a8*/ bool <SetGuildWarNickname_GuildWarTest>b__0(PTShare.Define.SStatBonusHero x);
    }

    class <>c__DisplayClass392_0
    {
        /*0x10*/ double totalValueDamage;
        /*0x18*/ double totalValueHit;
        /*0x20*/ bool _bAlly;
        /*0x28*/ double totalCountKills;

        /*0xda2538*/ <>c__DisplayClass392_0();
        /*0xda2540*/ int <SortBattleGraphValueAndSelectMVP>b__0(Battle.BattleGraphValue a, Battle.BattleGraphValue b);
        /*0xda2588*/ double <SortBattleGraphValueAndSelectMVP>g__GetScore|1(Battle.BattleGraphValue _graphValue);
    }
}

class InGameController : Singleton.Component.SingletonComponent<InGameController>
{
    static /*0x0*/ long m_nUniqueNumberCount;
    static /*0x8*/ int UpdateCount;
    static /*0xc*/ int CurrentUpdateCount;
    static /*0x10*/ int m_nRandomSeed;
    static /*0x18*/ System.Random m_RandomClass;
    static /*0x20*/ System.Action OnCallSpawnUnits;
    static /*0x28*/ System.Action OnInitializeUI;
    static /*0x30*/ System.Action OnInitializeComplete;
    static /*0x38*/ System.Action<bool> OnChangeSpriteActive;
    static /*0x40*/ System.Action<bool, int> OnTouchSkillEnable;
    static /*0x48*/ System.Action<float> OnChangeTime;
    static /*0x50*/ System.Action OnGameEnd;
    static /*0x58*/ Battle.BattleSpeedType <GameSpeedType>k__BackingField;
    static /*0x5c*/ float <GameSpeedPerFrame_Origin>k__BackingField;
    static /*0x60*/ CFloat <GameSpeedMult>k__BackingField;
    static /*0x68*/ float <DeltaTimeMult>k__BackingField;
    static /*0x6c*/ float <DeltaTimeMultOrigin>k__BackingField;
    /*0x24*/ float <CameraSizeOrigin>k__BackingField;
    /*0x28*/ float <CameraSizeOrigin_Idle>k__BackingField;
    /*0x30*/ System.Collections.Generic.List<int> m_lisCollisionUnitIndex;
    /*0x38*/ System.Collections.Generic.List<int> m_listRandomTargetIndex;
    /*0x40*/ System.Collections.Generic.List<System.ValueTuple<float, int>> m_lisCollisionUnitValue;
    /*0x48*/ System.Collections.Generic.List<float> m_lisTargetPosition;
    /*0x50*/ System.Collections.Generic.List<CharacterBase> m_lisCheckTargetCollider;
    /*0x58*/ System.Collections.Generic.List<CharacterBase> m_lisCheckTargetTargetType2;
    /*0x60*/ float <DPS_Time>k__BackingField;
    /*0x68*/ long <DPS_MaxDamage>k__BackingField;
    /*0x70*/ long <DPS_TotalDamage>k__BackingField;
    /*0x78*/ long <DPS_TotalDamage_ATK>k__BackingField;
    /*0x80*/ long <DPS_TotalDamage_ULT>k__BackingField;
    /*0x88*/ long <DPS_TotalDamage_SP01>k__BackingField;
    /*0x90*/ long <DPS_TotalDamage_SP02>k__BackingField;
    /*0x98*/ long <DPS_TotalDamage_SP03>k__BackingField;
    /*0xa0*/ int DPS_RecentSecond;
    /*0xa4*/ float CurrentGuildWarSupportInitMP;
    /*0xa8*/ float m_fGuildWarSupportAddMPCooltime;
    /*0xb0*/ System.Collections.Generic.List<ProjectileBase> <Projectiles>k__BackingField;
    /*0xb8*/ System.Collections.Generic.List<ParticleBase> <Particles>k__BackingField;
    /*0xc0*/ System.Collections.Generic.List<ParticleBase> <Particles_Sync>k__BackingField;
    /*0xc8*/ System.Collections.Generic.List<DamageMarker> <DamageMarkers>k__BackingField;
    /*0xd0*/ System.Collections.Generic.List<DropCoin> <DropCoins>k__BackingField;
    /*0xd8*/ System.Collections.Generic.List<BossDropItem> <BossDropItems>k__BackingField;
    /*0xe0*/ double <GuildBossTotalHitDamage>k__BackingField;
    /*0xe8*/ UnityEngine.Camera m_MainCam;
    /*0xf0*/ UnityEngine.Vector3 m_CameraPosOrigin;
    /*0x100*/ System.Collections.Generic.List<CharacterBase> Units_All_Current;
    /*0x108*/ System.Collections.Generic.List<CharacterBase> Units_Allies_Current;
    /*0x110*/ System.Collections.Generic.List<CharacterBase> Units_Enemies_Current;
    /*0x118*/ System.Collections.Generic.List<CharacterBase> Units_All_Main;
    /*0x120*/ System.Collections.Generic.List<CharacterBase> Units_Allies_Main;
    /*0x128*/ System.Collections.Generic.List<CharacterBase> Units_Enemies_Main;
    /*0x130*/ CharacterBase m_GuildHuntBoss;
    /*0x138*/ CharacterBase m_LastSurviveUnit;
    /*0x140*/ float m_fColliderCheckDelay;
    /*0x144*/ int i;
    /*0x148*/ System.Collections.Generic.List<UnityEngine.Vector3> m_vecSpawnEnemy;
    /*0x150*/ bool m_bSpawnDemoUnitSwitch;
    /*0x158*/ InGameController.GuildBattleSupportInfo m_SupportInfoAlly;
    /*0x160*/ InGameController.GuildBattleSupportInfo m_SupportInfoEnemy;
    /*0x168*/ int CheatDemoUnitLevel;
    /*0x170*/ System.Collections.Generic.List<UnitSpawnInfo> tmp_lisUnitIdleEnemy;
    /*0x178*/ UnityEngine.Vector2 tmp_vecSpawnPos;
    /*0x180*/ CharacterBase tmp_Character;
    /*0x188*/ int tmp_nUnitID;
    /*0x18c*/ int tmp_nUnitLV;
    /*0x190*/ int tmp_nIndex;
    /*0x194*/ Battle.InGameStateType <CurGameState>k__BackingField;
    /*0x198*/ Battle.InGameStateType <PrevGameState>k__BackingField;
    /*0x1a0*/ InGameState m_CurGameState;
    /*0x1a8*/ InGameState m_PrevGameState;
    /*0x1b0*/ System.Collections.Generic.Dictionary<Battle.InGameStateType, InGameState> m_dicInGameState;
    /*0x1b8*/ CInt <CheatEncrypt_Verify>k__BackingField;
    /*0x1c0*/ CString <OriginGraphData>k__BackingField;
    /*0x1c8*/ BattleSystemInit <CurrentBattleSystemInit>k__BackingField;
    /*0x1d0*/ BattleSceneManager m_CurrentBattleSceneManager;
    /*0x1d8*/ System.Collections.Generic.List<Battle.BattleGraphValue> m_lisGraphValue;
    /*0x1e0*/ System.Collections.Generic.List<Battle.BattleGraphValue> m_lisGraphValue_ArenaSimulation;
    /*0x1e8*/ System.Collections.Generic.List<int> m_lisSkillRecord;
    /*0x1f0*/ int m_nCurSkillRecordIndex;
    /*0x1f4*/ float m_fGameSpeedTmp;
    /*0x1f8*/ float m_fCurTotalDeltaTime;
    /*0x1fc*/ float m_fCurPauseTime;
    /*0x200*/ float m_fCurCasterPauseTime;
    /*0x204*/ float m_fCurSkillFadeTime;
    /*0x208*/ CFloat m_fCurLimitTime;
    /*0x210*/ float m_fCurPlayTime;
    /*0x214*/ float m_fCurEnemyWaveCD_Ally;
    /*0x218*/ float m_fCurEnemyWaveCD_Enemy;
    /*0x21c*/ float m_fCurBattleResultDelay;
    /*0x220*/ float m_fCurEndToIdleDelay;
    /*0x228*/ CInt m_nCurBattleWin;
    /*0x230*/ bool m_bCheckEndToIdleDelay;
    /*0x231*/ bool m_bAutoTmp;
    /*0x234*/ int m_nSkillPauseCount;
    /*0x238*/ System.Collections.Generic.List<float> m_lisSoundPlayDelay;
    /*0x240*/ System.Collections.Generic.List<Battle.SoundDelayInfo> m_lisSoundPlayDelayInfo;
    /*0x248*/ System.Collections.Generic.List<int> m_lisSoundDelayDeleteIndex;
    /*0x250*/ float m_fVerifyGameSpeed;
    /*0x254*/ int m_nCurrentVerifyCount;
    /*0x258*/ bool m_bDefeatSlowMotion;
    /*0x260*/ System.Action OnChangeGameSpeed;
    /*0x268*/ System.Action<CharacterBase, bool> OnPauseGame;
    /*0x270*/ System.Action<bool> OnPauseGame_PasuePopup;
    /*0x278*/ System.Action <OnEndPause>k__BackingField;
    /*0x280*/ System.Action OnSyncUpdate;
    /*0x288*/ System.Action OnGameStart;
    /*0x290*/ System.Action OnGameExit;
    /*0x298*/ System.Action<CharacterBase> OnUnitDeath;
    /*0x2a0*/ System.Action<CharacterBase> OnAddBuff;
    /*0x2a8*/ System.Action<CharacterBase> OnAddBuff_CC;
    /*0x2b0*/ System.Action<CharacterBase, float> OnHealHP;
    /*0x2b8*/ System.Action<Battle.BattleGraphType, int> OnAddBattleGraph;
    /*0x2c0*/ ParticleBase m_SkillCutsceneParticle;
    /*0x2c8*/ KillCutscene m_KillCutscene;
    /*0x2d0*/ SupportCutScene m_SupportCutScene;
    /*0x2d8*/ System.Collections.Generic.List<bool> <IsTouchSkillEnable>k__BackingField;
    /*0x2e0*/ System.Collections.Generic.List<CharacterBase> m_lisTouchSkillUnit;
    /*0x2e8*/ BattleMainWindow <CurrentBattleMainWindow>k__BackingField;
    /*0x2f0*/ BattleMainWindow_GuildWar <CurrentBattleMainWindow_GuildBattle>k__BackingField;
    /*0x2f8*/ long m_lGuildBossStepUpDamage;
    /*0x300*/ int m_nGuildBossRwardStep;
    /*0x304*/ bool m_bGetAllRewardWithLimitTime;
    /*0x305*/ bool m_bGetAllRewardWithLimitTime_2;
    /*0x306*/ bool <EnableHPMPGamge>k__BackingField;
    /*0x307*/ bool <EnableBuffImage>k__BackingField;
    /*0x308*/ bool <EnableDamageFont>k__BackingField;
    /*0x310*/ double SpawnedUnitTotalHP_Ally;
    /*0x318*/ double SpawnedUnitTotalHP_Enemy;
    /*0x320*/ System.Collections.Generic.List<InGameController.KillCutsceneInfo> m_lisKillCutscene;
    /*0x328*/ float m_fCutsceneCooltime;
    /*0x32c*/ float m_fSupportCutSceneCooltime;
    /*0x330*/ System.Collections.Generic.List<System.ValueTuple<int, bool>> m_lisSupportCutSceneSkinID;
    /*0x338*/ float m_fCurrentIdleDialogueCooltime;
    /*0x340*/ CFloat <Encryt_MultSpeed>k__BackingField;
    /*0x348*/ CInt <IsCheatEnable_OneKill>k__BackingField;
    /*0x350*/ CInt <IsCheatEnable_Invincible>k__BackingField;
    /*0x358*/ bool <IsPlayingBattle>k__BackingField;
    /*0x359*/ bool <IsGameStart>k__BackingField;
    /*0x35a*/ bool <IsGameEnd>k__BackingField;
    /*0x35b*/ bool <IsBattleWin_SavedForSkip>k__BackingField;
    /*0x35c*/ bool <IsArenaSkip>k__BackingField;
    /*0x35d*/ bool <IsReplay>k__BackingField;
    /*0x35e*/ bool <IsIdle>k__BackingField;
    /*0x35f*/ bool <IsAuto>k__BackingField;
    /*0x360*/ bool <IsAutoButtonDisable>k__BackingField;
    /*0x361*/ bool <IsFullAuto>k__BackingField;
    /*0x362*/ bool <IsSyncTool>k__BackingField;
    /*0x363*/ bool <IsArena>k__BackingField;
    /*0x364*/ bool <IsGuildWar>k__BackingField;
    /*0x365*/ bool <IsGuildWarTest>k__BackingField;
    /*0x366*/ bool <IsWorldBossMode>k__BackingField;
    /*0x367*/ bool <IsSimulation>k__BackingField;
    /*0x368*/ System.Collections.Generic.List<InGameController.InGameTimerInfo> m_lisTimerInfo;
    /*0x370*/ CharacterBase <CurrentPauseCharacter>k__BackingField;
    /*0x378*/ System.Collections.Generic.Dictionary<int, PTShare.Define.EquipmentType> m_DicEquipmentTypeWithUnitID;
    /*0x380*/ CharacterBase <WorldBoss>k__BackingField;
    /*0x388*/ BattleMainWindow_WorldBoss <CurrentBattleMainWindow_WorldBoss>k__BackingField;
    /*0x390*/ double <WorldBossTotalHitDamage>k__BackingField;
    /*0x398*/ bool <WorldCheatBattle>k__BackingField;
    /*0x39c*/ InGameController.WorldBossPrevPhase m_eCurrentWorldBossPhase;
    /*0x3a0*/ bool m_bSkippedStartAnimation;

    static /*0xd3d008*/ InGameController();
    static /*0xd29ec8*/ long get_GetUniqueNumber();
    static /*0xd3074c*/ float GetRandom();
    static /*0xd307ac*/ float GetRandom(float _min, float _max);
    static /*0xd2887c*/ int GetRandom(int _min, int _max);
    static /*0xd308a0*/ UnityEngine.Vector2 GetRandomCircle(float _fRadius, bool _bRandomRadius);
    static /*0xd30824*/ float GetRandomKeyValue();
    static /*0xd30918*/ UnityEngine.Vector2 CalcRandomInsideCirclePoint(bool _bRandomRadius);
    static /*0xd3a47c*/ Battle.BattleSpeedType get_GameSpeedType();
    static /*0xd3a4e0*/ void set_GameSpeedType(Battle.BattleSpeedType value);
    static /*0xd3a548*/ float get_GameSpeedPerFrame_Origin();
    static /*0xd3a5ac*/ void set_GameSpeedPerFrame_Origin(float value);
    static /*0xd3a61c*/ CFloat get_GameSpeedMult();
    static /*0xd3a680*/ void set_GameSpeedMult(CFloat value);
    static /*0xd2acb4*/ float get_GameSpeed();
    static /*0xd35bf4*/ float get_DeltaTime();
    static /*0xd3a6e8*/ float get_DeltaTimeMult();
    static /*0xd3a74c*/ void set_DeltaTimeMult(float value);
    static /*0xd3a7bc*/ float get_DeltaTimeMultOrigin();
    static /*0xd3a820*/ void set_DeltaTimeMultOrigin(float value);
    static /*0xd29cc4*/ float get_DeltaTimeReal();
    static /*0xd3752c*/ float get_DeltaTimeReal_Sync();
    static /*0xd28364*/ bool <GetTarget>g__isExcept|55_0(CharacterBase _target, ref InGameController.<> );
    /*0xd3c94c*/ InGameController();
    /*0xd22cf8*/ float get_CameraSizeOrigin();
    /*0xd22d00*/ void set_CameraSizeOrigin(float value);
    /*0xd22d08*/ float get_CameraSizeOrigin_Idle();
    /*0xd22d10*/ void set_CameraSizeOrigin_Idle(float value);
    /*0xd22d18*/ void Init(bool _bReplay, bool _bIdle, int _nRandomSeed);
    /*0xd24d10*/ void InitForGameReady();
    /*0xd24f6c*/ void InitForGameExit();
    /*0xd2502c*/ void InitForIdle();
    /*0xd25060*/ void InitForDemo();
    /*0xd25070*/ void InitForCampaign(int _nRandomSeed);
    /*0xd25080*/ void InitForTower(int _nRandomSeed);
    /*0xd25090*/ void InitForMaze(int _nRandomSeed);
    /*0xd250a0*/ void InitForFriendBattle(int _nRandomSeed);
    /*0xd250b0*/ void InitForGuildWarResult(int _nRandomSeed);
    /*0xd25188*/ void InitForGuildWarSimulation(int _nRandomSeed);
    /*0xd25334*/ void InitForGuildWarReplay(int _nRandomSeed);
    /*0xd2540c*/ void InitForGuildWarVerify(int _nRandomSeed);
    /*0xd255f4*/ void InitForArenaResult(int _nRandomSeed);
    /*0xd25628*/ void InitForArenaReplay(int _nRandomSeed);
    /*0xd2565c*/ void InitForArenaSimulation(int _nRandomSeed);
    /*0xd257e4*/ void InitForArenaVerify(int _nRandomSeed);
    /*0xd25974*/ void InitForGuildHunt(int _nRandomSeed);
    /*0xd25d00*/ void InitForDungeon(int _nRandomSeed);
    /*0xd25d10*/ void InitForGuildHuntReplay(int _nRandomSeed);
    /*0xd25e74*/ void InitForWorldBoss(int _nRandomSeed);
    /*0xd26020*/ void InitForWorldBossReplay(int _nRandomSeed);
    /*0xd261cc*/ void InitForWorldBossVerify(int _nRandomSeed);
    /*0xd263b4*/ void InitForPveRanking(int _nRandomSeed);
    /*0xd26578*/ void InitForVerify(int _nRandomSeed);
    /*0xd26778*/ void InitForReplay(int _nRandomSeed);
    /*0xd26848*/ void InitForCustom(int _nRandomSeed);
    /*0xd26858*/ void Update();
    /*0xd269f0*/ void OnApplicationPause(bool pause);
    /*0xd26b30*/ void AwakeInstance();
    /*0xd26b34*/ bool InitInstance();
    /*0xd26b3c*/ void ReleaseInstance();
    /*0xd26b40*/ void Destroy();
    /*0xd24870*/ void InitCollision();
    /*0xd26888*/ void UpdateCollision();
    /*0xd26b4c*/ bool IsTargetInSight(CharacterBase _caster, CharacterBase _target, Battle.ColliderData _sightCollider);
    /*0xd271ac*/ bool IsEnemyInSight(CharacterBase _caster, Battle.ColliderData _sightCollider);
    /*0xd272f8*/ CharacterBase GetProvokeTarget(ObjectBase _caster, bool _bPlayer);
    /*0xd273cc*/ CharacterBase GetProvokeTarget(ObjectBase _caster, bool _bPlayer, Battle.ColliderData _sRangeCollider);
    /*0xd274ec*/ CharacterBase GetTarget(ObjectBase _caster, Battle.TargetType1 _targetType1, Battle.TargetType2 _targetType2, Battle.TargetType3 _targetType3);
    /*0xd275a0*/ CharacterBase GetTarget(ObjectBase _caster, Battle.TargetType1 _targetType1, Battle.TargetType2 _targetType2, Battle.TargetType3 _targetType3, Battle.ColliderData _sightCollider, InGameController.GetTargetState _eState, System.Collections.Generic.List<CharacterBase> _exceptList);
    /*0xd2845c*/ System.Collections.Generic.List<CharacterBase> GetMatchListSightCollider(System.Collections.Generic.List<CharacterBase> _lisTarget, UnityEngine.Vector2 _vecCasterPOS, Battle.ColliderData _sCollider);
    /*0xd286fc*/ System.Collections.Generic.List<CharacterBase> GetMatchListTargetType2(System.Collections.Generic.List<CharacterBase> _lisTarget, Battle.TargetType2 _eTargetType2);
    /*0xd28918*/ System.Collections.Generic.List<CharacterBase> CheckAttackCollision(ObjectBase _Caster, Battle.TargetType1 _eTargetType, Battle.RangeDirectionType _eDirType, Battle.Direction _eDir, UnityEngine.Vector2 _casterPos, Battle.ColliderData _attackCollider, bool m_bCheckCharm, System.Collections.Generic.List<CharacterBase> _lisExcept, bool _bProjectile);
    /*0xd272b8*/ System.Collections.Generic.List<CharacterBase> GetTargetList_Current(bool _isPlayer, bool _bTargetEnemies);
    /*0xd2904c*/ System.Collections.Generic.List<CharacterBase> GetTargetList_Main(bool _isPlayer, bool _bTargetEnemies);
    /*0xd26da8*/ bool CheckTargetEnable(CharacterBase _target, bool _bPlayer);
    /*0xd28ee8*/ bool CheckAttackEnable(CharacterBase _target, bool _bPlayer);
    /*0xd2908c*/ UnityEngine.Vector2 GetSidePosition(CharacterBase _caster, Battle.ColliderData _casterCol, CharacterBase _target);
    /*0xd26ef4*/ UnityEngine.Vector2 GetWorldBossNearPosition(UnityEngine.Vector2 _vStartPOS);
    /*0xd29774*/ UnityEngine.Vector2 GetWorldBossNearPosition(UnityEngine.Vector2 _vStartPOS, CharacterBase _boss);
    /*0xd298ec*/ UnityEngine.Vector2 GetWorldBossNearPositionOffset(UnityEngine.Vector2 _vStartPOS);
    /*0xd2924c*/ void CheckPositionOverlap(ref UnityEngine.Vector2 _vecCurPos, CharacterBase _caster, float _fStart, float _fMin, float _fMax);
    /*0xd26efc*/ bool IsColliderBump(Battle.ColliderData _colA, ref UnityEngine.Vector2 _posA, Battle.ColliderData _colB, ref UnityEngine.Vector2 _posB, bool _bCircleToRectangle);
    /*0xd29940*/ UnityEngine.Vector2 GetDir(ref UnityEngine.Vector2 _startPos, ref UnityEngine.Vector2 _targetPos);
    /*0xd28868*/ float GetDistanceFloat(float a, float b);
    /*0xd29974*/ bool IsCatchBattleLimitPosition(UnityEngine.Vector2 _vecPOS);
    /*0xd29584*/ void CheckAndRewriteBattleLimitPosition(ref UnityEngine.Vector2 _vecPOS);
    /*0xd29aa0*/ float get_DPS_Time();
    /*0xd29aa8*/ void set_DPS_Time(float value);
    /*0xd29ab0*/ long get_DPS_MaxDamage();
    /*0xd29ab8*/ void set_DPS_MaxDamage(long value);
    /*0xd29ac0*/ long get_DPS_TotalDamage();
    /*0xd29ac8*/ void set_DPS_TotalDamage(long value);
    /*0xd29ad0*/ long get_DPS_TotalDamage_ATK();
    /*0xd29ad8*/ void set_DPS_TotalDamage_ATK(long value);
    /*0xd29ae0*/ long get_DPS_TotalDamage_ULT();
    /*0xd29ae8*/ void set_DPS_TotalDamage_ULT(long value);
    /*0xd29af0*/ long get_DPS_TotalDamage_SP01();
    /*0xd29af8*/ void set_DPS_TotalDamage_SP01(long value);
    /*0xd29b00*/ long get_DPS_TotalDamage_SP02();
    /*0xd29b08*/ void set_DPS_TotalDamage_SP02(long value);
    /*0xd29b10*/ long get_DPS_TotalDamage_SP03();
    /*0xd29b18*/ void set_DPS_TotalDamage_SP03(long value);
    /*0xd29b20*/ float get_DPS_TotalDamage_Skills();
    /*0xd29b4c*/ void InitDPS();
    /*0xd29b68*/ void DPS_AddDamage(Battle.SkillSlotType _eSlotType, long _lDamage);
    /*0xd29bfc*/ void DPS_HandleAddTime();
    /*0xd24c0c*/ void InitGuildWar();
    /*0xd29d6c*/ void HandleCheckGuildWarSupportAddMPCooltime();
    /*0xd29e58*/ System.Collections.Generic.List<ProjectileBase> get_Projectiles();
    /*0xd29e60*/ void set_Projectiles(System.Collections.Generic.List<ProjectileBase> value);
    /*0xd29e68*/ System.Collections.Generic.List<ParticleBase> get_Particles();
    /*0xd29e70*/ void set_Particles(System.Collections.Generic.List<ParticleBase> value);
    /*0xd29e78*/ System.Collections.Generic.List<ParticleBase> get_Particles_Sync();
    /*0xd29e80*/ void set_Particles_Sync(System.Collections.Generic.List<ParticleBase> value);
    /*0xd29e88*/ System.Collections.Generic.List<DamageMarker> get_DamageMarkers();
    /*0xd29e90*/ void set_DamageMarkers(System.Collections.Generic.List<DamageMarker> value);
    /*0xd29e98*/ System.Collections.Generic.List<DropCoin> get_DropCoins();
    /*0xd29ea0*/ void set_DropCoins(System.Collections.Generic.List<DropCoin> value);
    /*0xd29ea8*/ System.Collections.Generic.List<BossDropItem> get_BossDropItems();
    /*0xd29eb0*/ void set_BossDropItems(System.Collections.Generic.List<BossDropItem> value);
    /*0xd29eb8*/ double get_GuildBossTotalHitDamage();
    /*0xd29ec0*/ void set_GuildBossTotalHitDamage(double value);
    /*0xd24258*/ void InitObject();
    /*0xd29f94*/ void UpdateProjectiles();
    /*0xd2a038*/ void UpdateUnits();
    /*0xd2a134*/ void UpdateParticlesSync();
    /*0xd2a1d8*/ void UpdateParticles();
    /*0xd2a27c*/ void SetCameraPositionToOrigin();
    /*0xd28ff8*/ System.Collections.Generic.List<CharacterBase> GetUnitList(Battle.UnitListType _eUnitListType);
    /*0xd2a2bc*/ int GetUnitCount(bool _bAlly, bool _bExceptSummoner);
    /*0xd2a3e4*/ void AddSPtoAllTeamUnits(Battle.UnitListType _eType, float _fAddSPAmount);
    /*0xd2a4fc*/ void AddHPtoAllTeamUnits(Battle.UnitListType _eType, float _fAddHPRatio);
    /*0xd2a61c*/ void CheckLastAllySurviveUnit();
    /*0xd2a6ec*/ void CheckUnitCollider();
    /*0xd25ad8*/ int GetGuildBossPositionNumber(bool _bIgnoreDeath);
    /*0xd25be8*/ CharacterBase GetUnitWithPositionNumber(int _nPositionNumber, bool _bIgnoreDeath);
    /*0xd2abd0*/ void SetAllParticlesSpeedMult(float _fMult);
    /*0xd2add8*/ float GetHPRatioAllUnits(bool _bAlly);
    /*0xd2af8c*/ System.Collections.Generic.List<PTShare.Define.SHero> GetGuildBattleSupportUnitSHeroList(bool _bAlly);
    /*0xd2b1ec*/ void HandleSetGameSpeedObject();
    /*0xd2b2cc*/ void HandlePauseObjects(CharacterBase _caster, bool _isPause);
    /*0xd2b57c*/ void SetPasueParticlesWithCaster(CharacterBase _caster, bool _bPasue);
    /*0xd2b6b4*/ void HandlePauseParticles_ForPausePopup(bool _bPause);
    /*0xd2b76c*/ void HandleUpdateSyncObject();
    /*0xd2bc70*/ void HandleUpdateSyncObjectGameEnd();
    /*0xd2bc74*/ void HandleUpdateObject();
    /*0xd2bc78*/ void HandleFlipAllUnits();
    /*0xd2bd98*/ void HandleSetSkillEnableAllUnits(bool _isEnable);
    /*0xd246b8*/ void InitSpawn();
    /*0xd2be54*/ UnityEngine.Vector3 GetDestPosStartHAST(UnityEngine.Vector3 _curPos);
    /*0xd2be7c*/ void SpawnIdleEnemy();
    /*0xd2c34c*/ void SpawnDemoUnit(bool _bAlly, bool _bPositionLock);
    /*0xd2c5f8*/ CharacterBase SpawnCharacterForDemoSpawnUnit(int _nUnitID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos);
    /*0xd2cd94*/ CharacterBase SpawnCharacterForDemoMaxLevelAlly(int _nUnitID, int _nSkinID, bool _bPlayer, UnityEngine.Vector2 _vecPos);
    /*0xd2cf28*/ CharacterBase SpawnCharacterForWorldBoss(int _nUnitID, int _nUnitLV, int _nUnitGrade, UnityEngine.Vector2 _vecPOS);
    /*0xd2d068*/ CharacterBase SpawnCharacterMainPosition(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, System.Collections.Generic.List<int> _abilityList, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d1dc*/ CharacterBase SpawnCharacterGuildBattleSupporter(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, System.Collections.Generic.List<int> _abilityList, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d334*/ CharacterBase SpawnCharacterForIdleAlly(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2c1ec*/ CharacterBase SpawnCharacterForIdleEnemy(int _nUnitID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d4a4*/ CharacterBase SpawnCharacterForSummoner(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d610*/ CharacterBase SpawnCharacterForSyncTool(int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSize);
    /*0xd2c748*/ CharacterBase SpawnCharacterAllOptions(int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, UnityEngine.Vector2 _vecPos, System.Collections.Generic.List<PTShare.Define.SEquip> _lisEquip, System.Collections.Generic.List<int> _lisAbility, float _fSizeMult, InGameController.SpawnModeType _eModeType, InGameController.SpawnUnitType _eUnitType, string[] _params);
    /*0xd2d7b0*/ void RemoveCharacter(CharacterBase character, bool _bCheckDeath);
    /*0xd2d974*/ void RemoveUnitOnCurrentUnitList(CharacterBase _unit);
    /*0xd230e4*/ void RemoveObjectAll(bool _bExceptUnit);
    /*0xd2dd7c*/ ProjectileBase SpawnProjectile(string _sName, CharacterBase _owner, UnityEngine.Vector3 _vecSpawnPos, UnityEngine.Vector2 _vecTargetPos, int _nSkillLV, int[] _arrSkillFXID);
    /*0xd2db1c*/ void RemoveProjectile(ProjectileBase projectile);
    /*0xd2df8c*/ ParticleBase SpawnParticleToTransform(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Transform _target, UnityEngine.Vector3 _vOffset, bool _isLoop, bool _isUpdateSync);
    /*0xd2e348*/ ParticleBase SpawnParticleToCenter(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2e400*/ ParticleBase SpawnParticleToCenter_Background(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2e4b8*/ void SpawnCutScene(CharacterBase _owner);
    /*0xd2dfdc*/ ParticleBase SpawnParticleToTransformAllOptions(bool _bParticleUI, AssetBundleType _eAssetBundleType, string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Transform _target, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2e678*/ ParticleBase SpawnParticleToUnit(string _name, ObjectBase _owner, ObjectBase _caster, CharacterBase _moveTarget, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2ea5c*/ ParticleBase SpawnParticleToPosition(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Vector3 _vPosition, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync, bool _ignoreCameraOff);
    /*0xd2da08*/ void RemoveParticle(ParticleBase particle);
    /*0xd2ed74*/ DamageMarker SpawnDamageMarker(UnityEngine.Transform _parent, float _fUnitSize, float _fDamage, bool _bCritical, bool _bDelayed);
    /*0xd2dc1c*/ void RemoveDamageMarker(DamageMarker marker);
    /*0xd2ef10*/ BuffIcon SpawnBuffIcon(string _sBuffIconName, int _nBuffID);
    /*0xd2f008*/ BuffIcon SpawnBuffIconForWorldBoss(string _sBuffIconName, int _nBuffID);
    /*0xd2f158*/ void RemoveBuffIcon(BuffIcon _buffIcon);
    /*0xd2f1d4*/ void SpawnDropCoin(UnityEngine.Vector3 _pos, int _num);
    /*0xd2dccc*/ void RemoveDropCoin(DropCoin _coin);
    /*0xd2f30c*/ void SpawnBossDropItem(UnityEngine.Vector3 _pos, int _nStep);
    /*0xd2f4b8*/ void RemoveBossDropItem(BossDropItem _box);
    /*0xd2f568*/ KillCutscene SpawnKillCutscene(InGameController.KillCutsceneInfo _info);
    /*0xd2f718*/ void RemoveKillCutscene();
    /*0xd2f828*/ void SpawnGuildBattleSupportUnit(bool _bPlayer);
    /*0xd2f85c*/ SupportCutScene SpawnSupportCutScene(int _nSkinID, bool _bAlly);
    /*0xd2f9f0*/ void RemoveSupportCutScene();
    /*0xd2fac8*/ void HandleSetSpawnEenemyPosIdle(System.Collections.Generic.List<UnityEngine.Transform> _SpawnTransEnemyList);
    /*0xd2fbc0*/ void HandleCheckGuildBattleSpawnSupportUnitCooltime();
    /*0xd2fd14*/ Battle.InGameStateType get_CurGameState();
    /*0xd2fd1c*/ void set_CurGameState(Battle.InGameStateType value);
    /*0xd2fd24*/ Battle.InGameStateType get_PrevGameState();
    /*0xd2fd2c*/ void set_PrevGameState(Battle.InGameStateType value);
    /*0xd2368c*/ void InitState();
    /*0xd24c1c*/ void ChangeGameState(Battle.InGameStateType _nextState);
    /*0xd2fd34*/ void HandleSetGameStateToPlay();
    /*0xd3006c*/ CInt get_CheatEncrypt_Verify();
    /*0xd30074*/ void set_CheatEncrypt_Verify(CInt value);
    /*0xd3007c*/ CString get_OriginGraphData();
    /*0xd30084*/ void set_OriginGraphData(CString value);
    /*0xd3008c*/ int get_CurPlayTimeSeconds();
    /*0xd300b0*/ int get_CurPlayTimeMS();
    /*0xd300e0*/ int get_CurLimitTimeSeconds();
    /*0xd30168*/ BattleSystemInit get_CurrentBattleSystemInit();
    /*0xd30170*/ void set_CurrentBattleSystemInit(BattleSystemInit value);
    /*0xd30178*/ System.Action get_OnEndPause();
    /*0xd30180*/ void set_OnEndPause(System.Action value);
    /*0xd23a2c*/ void InitSystem(int _nRandomSeed);
    /*0xd24edc*/ void InitLocalEvent();
    /*0xd30a3c*/ void AddSkillRecord(int _nPositionNumber);
    /*0xd30b00*/ void CheckSkillRecord();
    /*0xd30dd0*/ string GetReplayData();
    /*0xd301dc*/ System.Collections.Generic.List<int> ConvertReplayDataToList(string _sRecord);
    /*0xd30e78*/ void CopyGraphList(System.Collections.Generic.List<Battle.BattleGraphValue> _listCopy, System.Collections.Generic.List<Battle.BattleGraphValue> _listPaste);
    /*0xd30fd8*/ string GetBattleGraphData();
    /*0xd31454*/ void AddBattleGraphValue(Battle.BattleGraphType _eBattleGraphType, int _nPositionNumber, float _fValue);
    /*0xd3161c*/ double GetBattleGraphFloatValue(int _nPosition, Battle.BattleGraphType _eType);
    /*0xd31720*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList(bool _bPlayer);
    /*0xd31790*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList_ForPveRanking(bool _bPlayer);
    /*0xd31800*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList_ForGuildWar(bool _bPlayer);
    /*0xd31870*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList_ForWorldBoss(bool _bPlayer);
    /*0xd31048*/ System.Collections.Generic.List<long> GetBattleGraphIntValueList();
    /*0xd318f4*/ void ShowBattleGraph(bool _bWin);
    /*0xd31cf0*/ void CheckOriginGraphData();
    /*0xd31d28*/ string GetUnitHPMPString();
    /*0xd32614*/ void SkipArena();
    /*0xd32654*/ void ShowVictoryPopup();
    /*0xd328e8*/ void ShowDefeatPopup();
    /*0xd32764*/ void ShowResultPopup();
    /*0xd329f8*/ void ShowCampainResultPopup();
    /*0xd32e58*/ void ShowTowerResultPopup();
    /*0xd33120*/ void ShowArenaResultPopup();
    /*0xd33234*/ void ShowWorldArenaResultPopup();
    /*0xd33348*/ void ShowMazeResultPopup();
    /*0xd33a1c*/ void ShowDungeonResultPopup();
    /*0xd33508*/ void ShowFriendBattleResultPopup();
    /*0xd335b0*/ void ShowGuildWarResultPopup();
    /*0xd33684*/ void ShowGuildHuntResultPopup();
    /*0xd33bdc*/ void ShowWorldBossResultPopup();
    /*0xd33ef4*/ void ShowPveRankingResultPopup();
    /*0xd343f4*/ void HandleUpdateSkillRecord();
    /*0xd3447c*/ void HandleCheckStartGame();
    /*0xd345c4*/ void HandleSetGameSpeed();
    /*0xd34798*/ void HandleSetPauseWithPopup_Pause();
    /*0xd348cc*/ void HandleSetPauseWithPopup_Play();
    /*0xd3496c*/ void HandleSetAuto();
    /*0xd34a10*/ void HandleCalcUpdateCount();
    /*0xd34b0c*/ void HandleCheckPauseTime();
    /*0xd34f7c*/ void HandleCheckSkillFadeTime();
    /*0xd350e8*/ void HandleCheckLimitTime();
    /*0xd353bc*/ void HandleCheckIdleWave();
    /*0xd35488*/ void HandleCheckDemoWave();
    /*0xd355c0*/ void HandleCheckAllUnitDeath();
    /*0xd35b34*/ void HandleCheckEndToIdleDelay();
    /*0xd35c9c*/ void HandleUpdateDelayBattleResultPopup();
    /*0xd35e0c*/ void HandleStartGameOver();
    /*0xd36b68*/ void HandleStartGameOver_Verify();
    /*0xd37278*/ void HandleAfterArenaFastAndReturnProtocalResult();
    /*0xd37340*/ void HandleAfterGuildWarFastAndReturnProtocalResult();
    /*0xd37408*/ void HandleInitializeOriginGraphData();
    /*0xd37484*/ void HandleCheckIdleDialogueTime();
    /*0xd37638*/ void HandleCheckExitVerify();
    /*0xd376ac*/ void HandleSpawnBackgroundParticles();
    /*0xd36ecc*/ System.Collections.IEnumerator CoDelayedStartNextVerifyClient();
    /*0xd377e4*/ System.Collections.IEnumerator CoDelayedStartNextVerify(float _fDelay);
    /*0xd37860*/ System.Collections.IEnumerator CoDelayedStartGoToMainScene();
    /*0xd35320*/ void SetEndStateAllUnits();
    /*0xd3679c*/ void SetBattleEndIdleStateAllUnits(bool _bPlayerWin);
    /*0xd3590c*/ bool CheckAllUnitDeath(bool _bPlayer);
    /*0xd351ac*/ bool CheckLimitTimeOver();
    /*0xd378bc*/ void BeginVerify();
    /*0xd36f28*/ void FinishVerify(bool _bSendProtocal);
    /*0xd370f0*/ void CallVerifyFinishProtocal(System.Action _action);
    /*0xd37990*/ int GetVerifyScore();
    /*0xd38e50*/ void SetNullBattleSceneLocalScripts();
    /*0xd38e58*/ void SetBattleSystemInit(BattleSystemInit _script);
    /*0xd38e60*/ void SetBattleSceneManager(BattleSceneManager _script);
    /*0xd38e68*/ void StartBattleSceneLocalScripts();
    /*0xd38eac*/ System.Collections.Generic.List<bool> get_IsTouchSkillEnable();
    /*0xd38eb4*/ void set_IsTouchSkillEnable(System.Collections.Generic.List<bool> value);
    /*0xd38ebc*/ UnityEngine.Vector2 get_GetBossPosition();
    /*0xd38ef4*/ BattleMainWindow get_CurrentBattleMainWindow();
    /*0xd38efc*/ void set_CurrentBattleMainWindow(BattleMainWindow value);
    /*0xd38f04*/ BattleMainWindow_GuildWar get_CurrentBattleMainWindow_GuildBattle();
    /*0xd38f0c*/ void set_CurrentBattleMainWindow_GuildBattle(BattleMainWindow_GuildWar value);
    /*0xd38f14*/ bool get_EnableHPMPGamge();
    /*0xd38f1c*/ void set_EnableHPMPGamge(bool value);
    /*0xd38f28*/ bool get_EnableBuffImage();
    /*0xd38f30*/ void set_EnableBuffImage(bool value);
    /*0xd38f3c*/ bool get_EnableDamageFont();
    /*0xd38f44*/ void set_EnableDamageFont(bool value);
    /*0xd24950*/ void InitUI();
    /*0xd2688c*/ void UpdateUI();
    /*0xd39298*/ void CheckGuildBossContent();
    /*0xd36a24*/ void GetAllBossRewardItems();
    /*0xd38f50*/ void CheckIdleVoiceMousePosition();
    /*0xd39550*/ void SetTouchSkillUI(bool _isOn, int _nPositionNumber);
    /*0xd30c2c*/ bool TouchSkillUI(int _nPositionNumber, bool _bTouch);
    /*0xd39680*/ bool CheckPositionNumberEnable(int _nPositionNumber);
    /*0xd396f0*/ void SetBattleMainWindow(BattleMainWindow _window);
    /*0xd396f8*/ void SetBattleMainWindow_GuildBattle(BattleMainWindow_GuildWar _window);
    /*0xd39700*/ void SetActiveHPMPGage(bool _bActive);
    /*0xd397b4*/ void SetActiveBuffImage(bool _bActive);
    /*0xd39868*/ void SetActiveDamageFont(bool _bActive);
    /*0xd39874*/ void SetUnitCountForGuildBattle(bool _bAlly);
    /*0xd39924*/ void StartSpawnGuildSupportUnit(InGameController.GuildBattleSupportInfo _supportInfo);
    /*0xd39ad4*/ void SetKillCutscene(int _nKillSkinID, int _nDeathSkinID, bool _bAlly, int _nKillCount);
    /*0xd39ba8*/ void HandleCheckKillCutscene_Ally();
    /*0xd39d24*/ void HandleUpdateSupportCutscene();
    /*0xd39d38*/ void AddSupportCutSceneForList(int _nSkinID, bool _bAlly);
    /*0xd39ddc*/ void HandleCheckSupportCutSceneCooltime();
    /*0xd375a8*/ void SetRandomDialogue();
    /*0xd39f9c*/ void SetDialogueCoolTime(float _fCoolTime);
    /*0xd3a03c*/ void HandleRegistTouchSkillUI();
    /*0xd3a170*/ void HandleCheckGuildBossHitDamage(CharacterBase _caster);
    /*0xd37910*/ string get_UserToken();
    /*0xd2300c*/ Battle.GameModeType get_CurrentGameMode();
    /*0xd3a46c*/ CFloat get_Encryt_MultSpeed();
    /*0xd3a474*/ void set_Encryt_MultSpeed(CFloat value);
    /*0xd3a890*/ CInt get_IsCheatEnable_OneKill();
    /*0xd3a898*/ void set_IsCheatEnable_OneKill(CInt value);
    /*0xd3a8a0*/ CInt get_IsCheatEnable_Invincible();
    /*0xd3a8a8*/ void set_IsCheatEnable_Invincible(CInt value);
    /*0xd3a8b0*/ bool get_IsPlayingBattle();
    /*0xd3a8b8*/ void set_IsPlayingBattle(bool value);
    /*0xd3a8c4*/ bool get_IsGameStart();
    /*0xd3a8cc*/ void set_IsGameStart(bool value);
    /*0xd3a8d8*/ bool get_IsGameEnd();
    /*0xd3a8e0*/ void set_IsGameEnd(bool value);
    /*0xd3432c*/ bool get_IsBattleWin();
    /*0xd23060*/ void set_IsBattleWin(bool value);
    /*0xd3a8ec*/ bool get_IsBattleWin_SavedForSkip();
    /*0xd3a8f4*/ void set_IsBattleWin_SavedForSkip(bool value);
    /*0xd3a900*/ bool get_IsArenaSkip();
    /*0xd3a908*/ void set_IsArenaSkip(bool value);
    /*0xd3a914*/ bool get_IsPaused();
    /*0xd3a924*/ bool get_IsBattleScene();
    /*0xd3a9c4*/ bool get_IsReplay();
    /*0xd3a9cc*/ void set_IsReplay(bool value);
    /*0xd343a0*/ bool get_IsSelectReplay();
    /*0xd3a9d8*/ bool get_IsIdle();
    /*0xd3a9e0*/ void set_IsIdle(bool value);
    /*0xd3a9ec*/ bool get_IsAuto();
    /*0xd3a9f4*/ void set_IsAuto(bool value);
    /*0xd3aa00*/ bool get_IsAutoButtonDisable();
    /*0xd3aa08*/ void set_IsAutoButtonDisable(bool value);
    /*0xd3aa14*/ bool get_IsFullAuto();
    /*0xd3aa1c*/ void set_IsFullAuto(bool value);
    /*0xd3aa28*/ bool get_IsSyncTool();
    /*0xd3aa30*/ void set_IsSyncTool(bool value);
    /*0xd3aa3c*/ bool get_IsArena();
    /*0xd3aa44*/ void set_IsArena(bool value);
    /*0xd3aa50*/ bool get_IsGuildWar();
    /*0xd3aa58*/ void set_IsGuildWar(bool value);
    /*0xd3aa64*/ bool get_IsGuildWarTest();
    /*0xd3aa6c*/ void set_IsGuildWarTest(bool value);
    /*0xd3aa78*/ bool get_IsWorldBossMode();
    /*0xd3aa80*/ void set_IsWorldBossMode(bool value);
    /*0xd3aa8c*/ bool get_IsSimulation();
    /*0xd3aa94*/ void set_IsSimulation(bool value);
    /*0xd26478*/ bool get_IsVerify();
    /*0xd3aaa0*/ bool get_CurrentMode_IsGuildWar();
    /*0xd3aafc*/ bool get_CurrentMode_IsWorldBoss();
    /*0xd3ab58*/ bool get_CurrentMode_IsPveRanking();
    /*0xd30188*/ void InitTimer();
    /*0xd264cc*/ void AddTimer(float _fCooltime, InGameController.InGameTimerType _eTimerType, System.Action _CompleteAction);
    /*0xd3abb4*/ void HandleUpdateInGameTimer();
    /*0xd3ad70*/ TrackPlayType GetTrackPlayType(AssetBundleType _eAssetBundleType);
    /*0xd35a44*/ float PlaySoundVoice(AssetBundleType _eBundleType, string _sAudioName, bool _bLoop);
    /*0xd3ad94*/ void PlaySoundSFX(AssetBundleType _eBundleType, string _sAudioName, float _fPlayDelay, bool _bLoop);
    /*0xd3afb8*/ void PlaySoundBGM(AssetBundleType _eBundleType, string _sAudioName, bool _bLoop);
    /*0xd2b7a8*/ void UpdateSoundDelay();
    /*0xd36910*/ void PlayBgm(bool _bPlayerWin);
    /*0xd3b0a8*/ CharacterBase get_CurrentPauseCharacter();
    /*0xd3b0b0*/ void set_CurrentPauseCharacter(CharacterBase value);
    /*0xd3b0b8*/ void PauseGameState(bool _isPause);
    /*0xd3b180*/ void PauseGameForSpecialSkillStart(CharacterBase _caster, float _fDuration);
    /*0xd34ccc*/ void PauseGameForSpecialSkill(CharacterBase _caster, bool _bPause, float _fDuration, bool _bSetShade, System.Action _onComplete);
    /*0xd34838*/ void PauseGameWithInGameState(bool _bPause);
    /*0xd35054*/ void SetShade(bool _bShade);
    /*0xd3b224*/ float SetGameSpeed(float _timeScale);
    /*0xd3b3a4*/ float SetGameSpeed(Battle.BattleSpeedType _eSpeedType);
    /*0xd3039c*/ void SetGameSpeedType();
    /*0xd3b504*/ void SetCheatMultSpeed(float _fSpeed);
    /*0xd3b57c*/ bool SetAuto(bool _boolean);
    /*0xd3b624*/ bool ToggleAuto();
    /*0xd3b634*/ bool ToggleCheatOneKill();
    /*0xd3b6ec*/ bool ToggleCheatInvincible();
    /*0xd3b7a4*/ void SetCheatVerify(bool _bEnable, bool _bServer, int _nCount, float _fSpeed);
    /*0xd3b8f0*/ void CompletePauseSkillAnimation();
    /*0xd24df8*/ void SetDeltatimeMultToOrigin();
    /*0xd3b978*/ void SetGraphicPositionInfo(int _nPosition, string _sSkinName, int _nUnitID, int _nFactionID, int _nLevel, int _nGrade);
    /*0xd3ba58*/ PTShare.Define.EquipmentType GetEquipmentTypeWithUnitID(int _nUnitID);
    /*0xd3bba0*/ CharacterBase get_WorldBoss();
    /*0xd3bba8*/ void set_WorldBoss(CharacterBase value);
    /*0xd3bbb0*/ BattleMainWindow_WorldBoss get_CurrentBattleMainWindow_WorldBoss();
    /*0xd3bbb8*/ void set_CurrentBattleMainWindow_WorldBoss(BattleMainWindow_WorldBoss value);
    /*0xd3bbc0*/ double get_WorldBossTotalHitDamage();
    /*0xd3bbc8*/ void set_WorldBossTotalHitDamage(double value);
    /*0xd3bbd0*/ bool get_WorldCheatBattle();
    /*0xd3bbd8*/ void set_WorldCheatBattle(bool value);
    /*0xd3bbe4*/ void SetWorldBoss(CharacterBase _boss);
    /*0xd3bbec*/ void SetBattleMainWindow_WorldBoss(BattleMainWindow_WorldBoss _window);
    /*0xd3bbf4*/ void HandleCalcUpdateCount_WorldBoss();
    /*0xd3bcf0*/ void WorldBoss_UpdateAnimation();
    /*0xd2fe08*/ void WorldBoss_SkipStartAnimation();
    /*0xd3bdf0*/ void WorldBoss_Prev_Phase1();
    /*0xd3c0f0*/ void WorldBoss_Prev_Phase2();
    /*0xd3c2f8*/ void HandleAnimVoice1Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xd3c410*/ void HandleAnimVoice2Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xd3c528*/ void HandleEventBossAnimationIN(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xd3c680*/ void HandleCompleteBossAnimationIN(Spine.TrackEntry trackEntry);
    /*0xd3c75c*/ void HandleCheckWorldBossHP();
    /*0xd3c830*/ void RemoveCharacter_WorldBoss(CharacterBase character);
    /*0xd3d0ec*/ void <InitForPveRanking>b__31_0();
    /*0xd2fbf8*/ void <HandleCheckGuildBattleSpawnSupportUnitCooltime>g__CheckGuildBattleSpawnSupportUnitCooltime|240_0(bool _bPlayer);
    /*0xd31ea4*/ void <GetUnitHPMPString>g__FillInfosForGuildWar|348_0(Battle.UnitListType type, bool isPlayer, int _nBeginIndex, int _nFillIndexCount, ref InGameController.<> );
    /*0xd3235c*/ void <GetUnitHPMPString>g__FillInfos|348_1(Battle.UnitListType type, bool isPlayer, int _nBeginIndex, int _nFillIndexCount, ref InGameController.<> );
    /*0xd3d338*/ void <ShowMazeResultPopup>b__357_0();
    /*0xd3d420*/ void <ShowDungeonResultPopup>b__358_0();
    /*0xd3d510*/ void <ShowPveRankingResultPopup>b__363_1(ServerProtocol.ResPveRankingFinish res, int prev);
    /*0xd3d610*/ void <HandleStartGameOver>b__379_0(ServerProtocol.ResGuildWarFinish res);
    /*0xd3d67c*/ void <HandleStartGameOver_Verify>b__380_0();
    /*0xd3d6ac*/ void <HandleStartGameOver_Verify>b__380_1();
    /*0xd38180*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> <GetVerifyScore>g__GetCurrentUnitVerifyInfoList|397_0(System.Collections.Generic.List<CharacterBase> _list, bool _bPlayer, ref InGameController.<> );
    /*0xd38598*/ int <GetVerifyScore>g__CompareHPMPs|397_1(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _current, System.Collections.Generic.List<PTShare.Define.SVerifyHero> _compare, bool _bPlayer, ref InGameController.<> );

    enum GetTargetState
    {
        NONE = 0,
        SKILLFX_PASSIVE = 1,
    }

    enum SpawnModeType
    {
        NORMAL = 0,
        DEMO = 1,
        IDLE = 2,
        SYNCTOOL = 3,
    }

    enum SpawnUnitType
    {
        NORMAL = 0,
        MAIN = 1,
        SUMMONER = 2,
        IDLE_ALLY = 3,
        IDLE_EMEMY = 4,
        BOSS_BIG = 5,
    }

    class GuildBattleSupportInfo
    {
        /*0x10*/ bool isAlly;
        /*0x14*/ float supportUnitCooltime;
        /*0x18*/ int curCountMainUnitDeath;
        /*0x1c*/ int curCountSpawnSupportUnit;

        /*0xe4f58c*/ GuildBattleSupportInfo();
    }

    struct KillCutsceneInfo
    {
        /*0x10*/ int killUnitSkinID;
        /*0x14*/ int deathUnitSkinID;
        /*0x18*/ bool isAlly;
        /*0x1c*/ int killCount;
    }

    enum InGameTimerType
    {
        DELTATIME = 0,
        DELTATIME_REAL = 1,
        DELTATIME_REAL_SYNC = 2,
    }

    class InGameTimerInfo
    {
        /*0x10*/ InGameController.InGameTimerType timerType;
        /*0x14*/ float cooltime;
        /*0x18*/ System.Action completeAction;

        /*0xe4f594*/ InGameTimerInfo();
    }

    enum WorldBossPrevPhase
    {
        PHASE1 = 0,
        PHASE2 = 1,
    }

    class <>c
    {
        static /*0x0*/ InGameController.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__31_1;
        static /*0x10*/ System.Action<PTShare.Define.SProperty> <>9__353_0;
        static /*0x18*/ System.Action<PTShare.Define.SProperty> <>9__353_1;
        static /*0x20*/ System.Action<PTShare.Define.SProperty> <>9__354_0;
        static /*0x28*/ System.Action<PTShare.Define.SProperty> <>9__361_0;
        static /*0x30*/ System.Action<PTShare.Define.SProperty> <>9__361_1;
        static /*0x38*/ System.Action<PTShare.Define.SProperty> <>9__362_0;
        static /*0x40*/ System.Action<bool> <>9__363_0;
        static /*0x48*/ System.Func<bool> <>9__387_0;
        static /*0x50*/ System.Func<bool> <>9__388_0;
        static /*0x58*/ System.Func<bool> <>9__389_0;
        static /*0x60*/ System.Func<CharacterBase, bool> <>9__392_0;

        static /*0xe4e5c4*/ <>c();
        /*0xe4e624*/ <>c();
        /*0xe4e62c*/ void <InitForPveRanking>b__31_1(bool confirm);
        /*0xe4e688*/ void <ShowCampainResultPopup>b__353_0(PTShare.Define.SProperty rewards);
        /*0xe4e78c*/ void <ShowCampainResultPopup>b__353_1(PTShare.Define.SProperty rewards);
        /*0xe4e890*/ void <ShowTowerResultPopup>b__354_0(PTShare.Define.SProperty rewards);
        /*0xe4e91c*/ void <ShowGuildHuntResultPopup>b__361_0(PTShare.Define.SProperty reward);
        /*0xe4e9a8*/ void <ShowGuildHuntResultPopup>b__361_1(PTShare.Define.SProperty reward);
        /*0xe4ea34*/ void <ShowWorldBossResultPopup>b__362_0(PTShare.Define.SProperty reward);
        /*0xe4eac0*/ void <ShowPveRankingResultPopup>b__363_0(bool confirm);
        /*0xe4eb1c*/ bool <CoDelayedStartNextVerifyClient>b__387_0();
        /*0xe4eb78*/ bool <CoDelayedStartNextVerify>b__388_0();
        /*0xe4ebd4*/ bool <CoDelayedStartGoToMainScene>b__389_0();
        /*0xe4ec30*/ bool <CheckAllUnitDeath>b__392_0(CharacterBase u);
    }

    struct <>c__DisplayClass55_0
    {
        /*0x10*/ System.Collections.Generic.List<CharacterBase> _exceptList;
    }

    struct <>c__DisplayClass348_0
    {
        /*0x10*/ InGameController <>4__this;
        /*0x18*/ System.Collections.Generic.List<string> infos;
    }

    class <>c__DisplayClass348_1
    {
        /*0x10*/ int i;

        /*0xe4ec4c*/ <>c__DisplayClass348_1();
        /*0xe4ec54*/ bool <GetUnitHPMPString>b__2(CharacterBase f);
    }

    class <>c__DisplayClass348_2
    {
        /*0x10*/ int i;

        /*0xe4ec78*/ <>c__DisplayClass348_2();
        /*0xe4ec80*/ bool <GetUnitHPMPString>b__3(CharacterBase f);
    }

    class <CoDelayedStartNextVerifyClient>d__387 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe4f388*/ <CoDelayedStartNextVerifyClient>d__387(int <>1__state);
        /*0xe4f3b4*/ void System.IDisposable.Dispose();
        /*0xe4f3b8*/ bool MoveNext();
        /*0xe4f53c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4f544*/ void System.Collections.IEnumerator.Reset();
        /*0xe4f584*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoDelayedStartNextVerify>d__388 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fDelay;
        /*0x28*/ InGameController <>4__this;

        /*0xe4f140*/ <CoDelayedStartNextVerify>d__388(int <>1__state);
        /*0xe4f16c*/ void System.IDisposable.Dispose();
        /*0xe4f170*/ bool MoveNext();
        /*0xe4f338*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4f340*/ void System.Collections.IEnumerator.Reset();
        /*0xe4f380*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoDelayedStartGoToMainScene>d__389 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe4eef0*/ <CoDelayedStartGoToMainScene>d__389(int <>1__state);
        /*0xe4ef1c*/ void System.IDisposable.Dispose();
        /*0xe4ef20*/ bool MoveNext();
        /*0xe4f0f0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4f0f8*/ void System.Collections.IEnumerator.Reset();
        /*0xe4f138*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass396_0
    {
        /*0x10*/ System.Action _action;

        /*0xe4eca4*/ <>c__DisplayClass396_0();
        /*0xe4ecac*/ void <CallVerifyFinishProtocal>b__0(ServerProtocol.ResAdminVerifyFinish res);
    }

    struct <>c__DisplayClass397_0
    {
        /*0x10*/ InGameController <>4__this;
        /*0x18*/ string hackInfo;
    }

    class <>c__DisplayClass397_1
    {
        /*0x10*/ int startPositionIndex;
        /*0x14*/ int i;
        /*0x18*/ System.Predicate<CharacterBase> <>9__2;

        /*0xe4ecd8*/ <>c__DisplayClass397_1();
        /*0xe4ece0*/ bool <GetVerifyScore>b__2(CharacterBase x);
    }

    class <>c__DisplayClass397_2
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> _compare;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SVerifyHero> <>9__3;

        /*0xe4ed08*/ <>c__DisplayClass397_2();
        /*0xe4ed10*/ bool <GetVerifyScore>b__3(PTShare.Define.SVerifyHero x);
    }

    class <>c__DisplayClass452_0
    {
        /*0x10*/ InGameController <>4__this;
        /*0x18*/ InGameController.GuildBattleSupportInfo _supportInfo;
        /*0x20*/ System.Collections.Generic.List<UnitSpawnInfo> supportInfoList;

        /*0xe4eda0*/ <>c__DisplayClass452_0();
        /*0xe4eda8*/ void <StartSpawnGuildSupportUnit>b__0();
    }
}

class ReplayCheatManager : Singleton.Component.SingletonComponent<ReplayCheatManager>
{
    /*0x24*/ Battle.GameModeType GameMode;
    /*0x28*/ string MappointName;
    /*0x30*/ string ReplayID;
    /*0x38*/ long PlayerID;

    /*0xf1f5b8*/ ReplayCheatManager();
    /*0xf1efe8*/ void StartReplay();
    /*0xf1f5a8*/ void AwakeInstance();
    /*0xf1f5ac*/ bool InitInstance();
    /*0xf1f5b4*/ void ReleaseInstance();
    /*0xf1f634*/ void <StartReplay>b__4_0(ServerProtocol.ResCampaignReplay response);
    /*0xf1f70c*/ void <StartReplay>b__4_1(ServerProtocol.ResTowerReplay response);
    /*0xf1f7e4*/ void <StartReplay>b__4_2(ServerProtocol.ResArenaReplay res);
    /*0xf1f8c4*/ void <StartReplay>b__4_3(PTShare.Define.SGuildBossReplay sGuildBossReplay);
}

class ProjectileBase : ObjectBase
{
    /*0x3c*/ Battle.ColliderData m_SightCollider;
    /*0x48*/ float m_Speed;
    /*0x50*/ ParticleBase m_Particle;
    /*0x58*/ string m_ExitEffectName;
    /*0x60*/ string m_HitEffectName;
    /*0x68*/ AssetBundleType m_ExitSoundType;
    /*0x70*/ string m_ExitSoundName;
    /*0x78*/ bool m_FixTopBottom;
    /*0x80*/ SkillFXTrigger m_SkillFXTrigger;
    /*0xd8*/ Battle.AttackType m_eAttackType;
    /*0xe0*/ System.Collections.Generic.List<CharacterBase> m_lisTarget;
    /*0xe8*/ bool m_bPlayer;
    /*0xec*/ float m_fTotalMoveDistance;
    /*0xf0*/ UnityEngine.Vector2 m_vTargetPOS;
    /*0xf8*/ UnityEngine.Vector2 m_vTargetDIR;
    /*0x100*/ UnityEngine.Vector2 m_vMoveDIR;
    /*0x108*/ Battle.StateAndSkillID m_OwnerSkillID;
    /*0x10c*/ bool m_bStartInit;
    /*0x110*/ UnityEngine.Vector3 m_vScaleOrigin;

    /*0x100f5fc*/ ProjectileBase();
    /*0x100ed90*/ Battle.Direction get_GetDirection();
    /*0x100eda4*/ UnityEngine.Vector2 get_GetDirectionVector2();
    /*0x100edac*/ bool get_IsProjectile();
    /*0x100edb4*/ void StartInit();
    /*0x100eeb4*/ void Init(CharacterBase _owner, UnityEngine.Vector3 _vSpawnPos, UnityEngine.Vector2 _vecTargetPos, int _nSkillLV, int[] _arrSkillFXID);
    /*0x100f10c*/ void InitChild();
    /*0x100f110*/ void UpdateObject();
    /*0x100f260*/ bool CheckProjectileOut();
    /*0x100f274*/ void RotateToTarget(UnityEngine.Vector2 _vecTargetPos);
    /*0x100f3b4*/ void MoveProjectile();
    /*0x100f45c*/ void DeleteEffect();
    /*0x100f1fc*/ void DeleteProjectile();
    /*0x100f534*/ bool CheckAttackCollisionProjectile();
    /*0x100f0f0*/ void AddReference();
    /*0x100f518*/ void RemoveReference();
}

class Projectile_Bomb : ProjectileBase
{
    /*0x11c*/ float m_fHeight;
    /*0x120*/ UnityEngine.Vector3 m_vecMovePOS;
    /*0x12c*/ UnityEngine.Vector2 m_vecStartPOS;
    /*0x134*/ bool m_bTargetLeft;
    /*0x138*/ float m_fCurTime;
    /*0x13c*/ float m_fHighestY;
    /*0x140*/ bool m_bFallen;

    /*0x100fb2c*/ Projectile_Bomb();
    /*0x100f840*/ void InitChild();
    /*0x100f898*/ void MoveProjectile();
    /*0x100f964*/ void CalcParabola(ref UnityEngine.Vector3 curPos, UnityEngine.Vector2 start, UnityEngine.Vector2 end, float height, float t);
    /*0x100fae4*/ bool CheckAttackCollisionProjectile();
    /*0x100faec*/ bool CheckProjectileOut();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ float height;

        /*0x108c5d0*/ <>c__DisplayClass9_0();
        /*0x108c5d8*/ float <CalcParabola>b__0(float x);
    }
}

class Projectile_Bomb_Center : Projectile_Bomb
{
    /*0x100fb64*/ Projectile_Bomb_Center();
    /*0x100fb38*/ void InitChild();
}

class Projectile_Boomerang : ProjectileBase
{
    /*0x11c*/ float ReturnSpeedMult;
    /*0x120*/ float DisperseDistance;
    /*0x124*/ UnityEngine.Vector2 m_vFirstMovePosition;
    /*0x12c*/ UnityEngine.Vector2 m_vRecentTargetPosition;
    /*0x134*/ Battle.ColliderData m_targetCollider;
    /*0x140*/ bool m_bFirstMoveState;
    /*0x141*/ bool m_bTargetEnable;
    /*0x148*/ CharacterBase m_Target;

    /*0x1010004*/ Projectile_Boomerang();
    /*0x100fb70*/ void InitChild();
    /*0x100fcf0*/ void Init(CharacterBase _owner, UnityEngine.Vector3 _vSpawnPos, UnityEngine.Vector2 _vecTargetPos, int _nSkillLV, int[] _arrSkillFXID);
    /*0x100fd28*/ void MoveProjectile();
    /*0x100ff1c*/ bool CheckAttackCollisionProjectile();
    /*0x100ffd0*/ void SetTarget();
}

class Projectile_Delayed_Dualcross : ProjectileBase
{
    /*0x11c*/ float m_fDelayedTime;
    /*0x120*/ string m_HitEffectName_Instant;
    /*0x128*/ float m_fCurDelayTime;
    /*0x130*/ CharacterBase m_DelayTarget;

    /*0x10105bc*/ Projectile_Delayed_Dualcross();
    /*0x1010018*/ void InitChild();
    /*0x1010044*/ bool CheckAttackCollisionProjectile();
    /*0x10102ec*/ void DeleteEffect();
    /*0x10103c4*/ void MoveProjectile();
    /*0x1010474*/ void HandleCheckDelayTime();
}

class Projectile_Fallen : ProjectileBase
{
    /*0x11c*/ float m_FallenDistanceX;
    /*0x120*/ float m_FallenDistanceY;

    /*0x10106b4*/ Projectile_Fallen();
    /*0x10105c0*/ void InitChild();
    /*0x10105d0*/ void SetFallenDistancePosition();
    /*0x1010658*/ bool CheckAttackCollisionProjectile();
    /*0x1010660*/ bool CheckProjectileOut();
}

class Projectile_Penetration : ProjectileBase
{
    /*0x120*/ System.Collections.Generic.List<CharacterBase> m_lisExcept;
    /*0x128*/ float m_PenetrationRate;

    /*0x1010a0c*/ Projectile_Penetration();
    /*0x10106c0*/ void InitChild();
    /*0x10107ac*/ bool CheckAttackCollisionProjectile();
}

class Projectile_Penetration_Dualcross : Projectile_Penetration
{
    /*0x1010b64*/ Projectile_Penetration_Dualcross();
    /*0x1010a88*/ void InitChild();
}

class Projectile_Penetration_MIKO : Projectile_Penetration
{
    /*0x1010c64*/ Projectile_Penetration_MIKO();
    /*0x1010b68*/ void InitChild();
}

class Projectile_Penetration_Monk : Projectile_Penetration
{
    /*0x1010ce8*/ Projectile_Penetration_Monk();
    /*0x1010c68*/ void InitChild();
}

class Projectile_Sabre : Projectile_Boomerang
{
    /*0x1010d3c*/ Projectile_Sabre();
    /*0x1010cec*/ void SetTarget();
}

class ShaderChanger : UnityEngine.MonoBehaviour
{
    static string m_InstanceMaterialName = "CustomInstanceMaterial";
    static /*0x0*/ ulong count;
    /*0x18*/ Battle.UnitShaderType ShaderType;
    /*0x20*/ UnityEngine.UI.Image m_Image;
    /*0x28*/ Spine.Unity.SkeletonAnimation m_SkeletonAnimation;
    /*0x30*/ UnityEngine.MeshRenderer m_MeshRenderer;
    /*0x38*/ Spine.Unity.SkeletonGraphic m_SkeletonGraphic;
    /*0x40*/ ShaderChanger_Data m_ShaderChangerData;

    static /*0xe2849c*/ ShaderChanger();
    /*0xe28494*/ ShaderChanger();
    /*0xe27964*/ UnityEngine.Material get_CurrentMaterial();
    /*0xe2797c*/ void set_CurrentMaterial(UnityEngine.Material value);
    /*0xe27998*/ Spine.Unity.SkeletonDataAsset get_CurrentSpineAsset();
    /*0xe279b0*/ void set_CurrentSpineAsset(Spine.Unity.SkeletonDataAsset value);
    void SetShader();
    /*0xe279cc*/ void Initialize();
    /*0xe2848c*/ void ExitShader();
    /*0xe28490*/ void SetFloatProperty(float _value);
}

class ShaderChanger_Data : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Material CurrentMaterial;
    /*0x20*/ Spine.Unity.SkeletonDataAsset CurrentSkeletonDataAsset;

    /*0xe28508*/ ShaderChanger_Data();
    /*0xe284a0*/ void OnDestroy();
}

class ShaderChanger_Dissolve : ShaderChanger
{
    static string m_ColorPropertyName = "_EmissionColor";
    static string m_PowerPropertyName = "_DissolvePower";
    static string m_ThicknessPropertyName = "_EmissionThickness";
    static string m_TexturePropertyName = "_DissolveTex";
    /*0x48*/ UnityEngine.Shader m_Shader;
    /*0x50*/ UnityEngine.Texture m_Texture;
    /*0x58*/ UnityEngine.Color m_Color;
    /*0x68*/ float m_Thickness;

    /*0xe2875c*/ ShaderChanger_Dissolve();
    /*0xe28510*/ void SetShader();
    /*0xe2865c*/ void ExitShader();
    /*0xe2866c*/ void SetFloatProperty(float _fdissolveRatio);
    /*0xe28750*/ void SetColor(UnityEngine.Color _color);
}

class ShaderChanger_Gray : UnityEngine.MonoBehaviour
{
    static string EnableGray = "_GrayPhase";
    /*0x18*/ bool m_IsEnableGray;
    /*0x20*/ Spine.Unity.SkeletonGraphic skeletonGraphics;
    /*0x28*/ UnityEngine.Material curMaterial;

    /*0xe289a8*/ ShaderChanger_Gray();
    /*0xe287dc*/ void SetEnableGray(bool enable);
}

class ShaderChanger_Original : ShaderChanger
{
    /*0x48*/ UnityEngine.Shader m_Shader;

    /*0xe28bc8*/ ShaderChanger_Original();
    /*0xe289b8*/ void Initialize();
    /*0xe28a98*/ void SetShader();
}

class BattleSystemInit : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform SpawnParentTrans;
    /*0x20*/ UnityEngine.RectTransform SafeAreaTrans;
    /*0x28*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_Idle;
    /*0x30*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy_Idle;
    /*0x38*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly;
    /*0x40*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_Big;
    /*0x50*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy_Big;
    /*0x58*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_WorldBoss;
    /*0x60*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_PVE;
    /*0x68*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy_PVE;
    /*0x70*/ UnityEngine.SpriteRenderer m_goSkillFadeSprite;
    /*0x78*/ bool m_bBattleScene;
    /*0x7c*/ Battle.GameModeType m_eGameModeType;
    /*0x80*/ CharacterBase tmp_Unit;
    /*0x88*/ UnityEngine.Vector2 tmp_vecPos;
    /*0x90*/ int tmp_nUnitID;
    /*0x94*/ int i;
    /*0x98*/ System.Collections.Generic.List<UnitSpawnInfo> tmp_lisUnitSpawnInfo;
    /*0xa0*/ System.Collections.Generic.List<int> tmp_lisFactionBuffID;
    /*0xa8*/ int m_nGuildBattlePositionIndex_Ally;
    /*0xac*/ int m_nGuildBattlePositionIndex_Enemy;

    /*0x1360298*/ BattleSystemInit();
    /*0x135bfe8*/ UnityEngine.Vector3 get_GetIdleAllySpawnPOS();
    /*0x135c050*/ void OnDestroy();
    /*0x135c14c*/ void Start();
    /*0x135cd40*/ System.Collections.IEnumerator CoDelayedStartIdle();
    /*0x135cdac*/ void HandleCheckChangeMainMenu(MainMenuType _eType);
    /*0x135cea4*/ void InitializeForIdle();
    /*0x135d1f8*/ void SetRectTransPosY(float _fPosY);
    /*0x135d1dc*/ void SetRectTransAnchor(UnityEngine.Vector2 _vAnchorPosition);
    /*0x135c2f8*/ void InitalizeEvent();
    /*0x135d4f4*/ void HandleSpawnStageUnitsAll();
    /*0x135e0f0*/ void HandleSpawnUnitsForWorldBoss();
    /*0x135e20c*/ void HandleSpawnUnitsForPveRanking();
    /*0x135e4d8*/ void HandleSpawnStageUnitsAll_Big();
    /*0x135f264*/ void HandleSpawnUnitsForInGameBattle();
    /*0x135f358*/ void HandleSpawnUnitsForInGameBattle_Big();
    /*0x135f44c*/ void HandleSpawnUnitsForInGameDemo();
    /*0x135f7dc*/ void HandleSpawnUnitsForDPSTest();
    /*0x135f98c*/ void HandleSpawnAllyUnitsForIdleBattle();
    /*0x1360128*/ void HandleSpriteActive(bool _bActive);
    /*0x135d5f8*/ void SpawnUnit(int _nUnitIndex, int _nPosIndex, bool _bPlayer, BattleSystemInit.SpawnUnitType _eSpawnType);
    /*0x1360208*/ void SpawnUnit_Support(int _nUnitIndex, bool _bPlayer);
    /*0x135d244*/ System.Collections.Generic.List<UnityEngine.Transform> GetSpawnPosList(bool _bPlayer);
    /*0x135d338*/ void ShowTroopPopup();
    /*0x13602a0*/ void <InitializeForIdle>b__22_0();
    /*0x13602fc*/ void <InitializeForIdle>b__22_1();

    struct SpawnUnitSetting
    {
        /*0x10*/ Battle.UnitNameID UnitID;
        /*0x14*/ int UnitLV;
        /*0x18*/ int UnitGrade;
        /*0x1c*/ int UnitTier;
    }

    enum SpawnUnitType
    {
        NONE = 0,
        GUILD_SUPPORT = 1,
        WORLD_BOSS = 2,
    }

    class <CoDelayedStartIdle>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BattleSystemInit <>4__this;

        /*0xda2888*/ <CoDelayedStartIdle>d__20(int <>1__state);
        /*0xda28b4*/ void System.IDisposable.Dispose();
        /*0xda28b8*/ bool MoveNext();
        /*0xda2958*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda2960*/ void System.Collections.IEnumerator.Reset();
        /*0xda29a0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosList;

        /*0xda27c8*/ <>c__DisplayClass25_0();
        /*0xda27d0*/ void <InitalizeEvent>b__0();
        /*0xda282c*/ void <InitalizeEvent>b__1();
    }
}

class DebugDisplay : Singleton.Component.SingletonComponent<DebugDisplay>
{
    static float FONT_SIZE_MULT = 0.019999999552965164;
    /*0x21*/ bool isEnable;
    /*0x28*/ UnityEngine.GameObject m_Background;
    /*0x30*/ UnityEngine.Color COLOR_NORMAL;
    /*0x40*/ UnityEngine.Color COLOR_WARNING;
    /*0x50*/ UnityEngine.Color COLOR_ERROR;
    /*0x60*/ UnityEngine.Color COLOR_FRAME;
    /*0x70*/ UnityEngine.Color COLOR_MEMORY;
    /*0x80*/ bool m_bBackgroundOn;
    /*0x88*/ UnityEngine.GUIStyle style;
    /*0x90*/ float deltaTime;
    /*0x94*/ UnityEngine.Rect rect;
    /*0xa4*/ int h;
    /*0xa8*/ int w;
    /*0xb0*/ string text;
    /*0xb8*/ System.Collections.Generic.List<Debug.DebugInfo> m_lisDebugInfo;
    /*0xc0*/ System.Text.StringBuilder m_StringBuilder;

    /*0xf5f0cc*/ DebugDisplay();
    /*0xf5e788*/ void AwakeInstance();
    /*0xf5e78c*/ bool InitInstance();
    /*0xf5e794*/ void ReleaseInstance();
    /*0xf5e798*/ void Update();
    /*0xf5e880*/ void OnGUI();
}

class EnumFlagsAttribute : UnityEngine.PropertyAttribute
{
    /*0x14b9d50*/ EnumFlagsAttribute();
}

class ObjectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform <transform>k__BackingField;
    /*0x20*/ long <UniqueNumber>k__BackingField;
    /*0x28*/ CharacterBase <Character>k__BackingField;
    /*0x30*/ InGameController m_InGameController;
    /*0x38*/ bool m_bBaseStartInit;

    /*0x2b53d48*/ ObjectBase();
    /*0x2b53ad4*/ UnityEngine.Transform get_transform();
    /*0x2b53adc*/ void set_transform(UnityEngine.Transform value);
    /*0x2b53ae4*/ long get_UniqueNumber();
    /*0x2b53aec*/ void set_UniqueNumber(long value);
    /*0x2b53af4*/ CharacterBase get_Character();
    /*0x2b53afc*/ void set_Character(CharacterBase value);
    /*0x2b53b04*/ UnityEngine.Vector2 get_CenterPosition();
    /*0x2b53b20*/ UnityEngine.Vector2 get_RootPosition();
    /*0x2b53b2c*/ UnityEngine.Vector2 get_FirstTargetPosition();
    /*0x2b53b4c*/ Battle.Direction get_GetDirection();
    /*0x2b53bb4*/ UnityEngine.Vector2 get_GetDirectionVector2();
    /*0x2b53bbc*/ bool get_IsProjectile();
    /*0x2b53bc4*/ void Awake();
    /*0x2b53bc8*/ void BaseStartInit();
    /*0x2b53c2c*/ void BaseInit(CharacterBase _character);
    /*0x2b53c34*/ void BaseInit();
    /*0x2b53c9c*/ void SetUniqueNumber();
    /*0x2b53d04*/ void UpdateObject();
    /*0x2b53d08*/ CharacterBase GetPrevTarget();
    /*0x2b53d1c*/ float GetTotalStat(Battle.CharacterStat.StatType _eStatType);
    /*0x2b53d34*/ bool get_IsPlayer();
}

class BossDropItem : UnityEngine.MonoBehaviour
{
    /*0x18*/ BossDropItem.ItemState <CurrentItemState>k__BackingField;
    /*0x20*/ UnityEngine.SpriteRenderer m_RewardBoxSprite;
    /*0x28*/ int m_nRewardStep;
    /*0x2c*/ UnityEngine.Vector3 m_vTargetPosition;
    /*0x38*/ UnityEngine.Transform m_Transform;
    /*0x40*/ DG.Tweening.Sequence m_Seq;

    /*0x136446c*/ BossDropItem();
    /*0x1363e58*/ BossDropItem.ItemState get_CurrentItemState();
    /*0x1363e60*/ void set_CurrentItemState(BossDropItem.ItemState value);
    /*0x1363e68*/ UnityEngine.Vector2 get_GetPosition();
    /*0x1363e90*/ void Init(int _nRewardStep);
    /*0x13641b0*/ void Update();
    /*0x13643fc*/ void Delete();
    /*0x136445c*/ void ChangeToGetRewardState();
    /*0x1364468*/ void UpdateGetItemTween();

    enum ItemState
    {
        NONE = 0,
        DROP = 1,
        WAIT = 2,
        GET = 3,
    }
}

class BuffIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ int <BuffID>k__BackingField;
    /*0x20*/ UnityEngine.Transform transform;
    /*0x28*/ AtlasImage m_Atlas;
    /*0x30*/ UnityEngine.UI.Text m_CountText;
    /*0x38*/ int m_nBuffCount;

    /*0x16f08a4*/ BuffIcon();
    /*0x16f070c*/ int get_BuffID();
    /*0x16f0714*/ void set_BuffID(int value);
    /*0x16f071c*/ void Init(string _sBuffIconName, int _nBuffID);
    /*0x16f07a8*/ void SetCount(int _nCount);
}

class BuffIconUI : UnityEngine.MonoBehaviour
{
    static string ATK_BUFF_IMAGE_NAME = "PowerUp1_Buff";
    static string HP_BUFF_IMAGE_NAME = "HpUp1_Buff";
    static string DEF_BUFF_IMAGE_NAME = "GuardUp1_Buff";
    static string SP_HIT_BUFF_IMAGE_NAME = "MpUp1_Buff";
    static string CRIT_BUFF_IMAGE_NAME = "FatalBlowUp1_Buff";
    static string CRIT_DAMAGE_BUFF_IMAGE_NAME = "FatalBlowEffectUp1_Buff";
    static string HAST_BUFF_IMAGE_NAME = "FastUp1_Buff";
    static string FRAME_LV1_NAME = "Buff_Frame1";
    static string FRAME_LV3_NAME = "Buff_Frame2";
    static string FRAME_LV2_LV4_NAME = "Buff_Frame3";
    /*0x18*/ AtlasImage m_BuffImage;
    /*0x20*/ AtlasImage m_BuffFrame;
    /*0x28*/ UnityEngine.UI.Image m_BuffGage;
    /*0x30*/ Helper_FactionBuff.FactionBuffType m_eFactionBuffType;
    /*0x34*/ Battle.BuffIconType m_eCurrentBuffIconType;

    /*0x16f1e70*/ BuffIconUI();
    /*0x16f1808*/ void Init(Battle.BuffIconType _eIconType, int _nMaxLV, int _nBuffLV, Helper_FactionBuff.FactionBuffType _eFactionBuffType);
    /*0x16f1cb0*/ void OpenBuffPage();
    /*0x16f1b80*/ UnityEngine.GameObject GetImageObject();
}

class CutScenePrefab : ObjectBase
{
    /*0x40*/ CutSceneEntity m_CutSceneEntity;
    /*0x48*/ ParticleBase m_Particle;
    /*0x50*/ bool m_bStartInit;
    /*0x54*/ float m_fDeleteCooltime;

    /*0xf4f250*/ CutScenePrefab();
    /*0xf4efe4*/ void StartInit();
    /*0xf4f13c*/ void InitCutScene(int _nUnitID);
    /*0xf4f1d0*/ void UpdateObject();
}

class DamageMarker : ObjectBase
{
    /*0x40*/ UnityEngine.UI.Text m_Text;
    /*0x48*/ float m_FontSizeMult;
    /*0x4c*/ float m_MissSizeMult;
    /*0x50*/ float m_CriticalSizeMult;
    /*0x54*/ float m_ExpandDuration;
    /*0x58*/ float m_ShrinkDuration;
    /*0x5c*/ float m_FadeOutDuration;
    /*0x60*/ UnityEngine.RectTransform m_RectTransform;
    /*0x68*/ UnityEngine.Transform m_ParentOrigin;
    /*0x70*/ UnityEngine.Transform m_Parent;
    /*0x78*/ DG.Tweening.Sequence m_Seq;
    /*0x80*/ int m_nDamage;
    /*0x84*/ float m_fCurTime;
    /*0x88*/ float m_fScaleMultParent;
    /*0x8c*/ UnityEngine.Vector2 m_vecScaleOrigin;
    /*0x94*/ int m_nFontSizeOrigin;
    /*0x98*/ float m_fFontSizeMultPost;
    /*0x9c*/ bool m_bStartInit;
    /*0xa0*/ DamageMarker.InitParams m_InitParams;
    /*0xb8*/ float m_fCurrentDelay;
    /*0xbc*/ bool m_bDelayed;

    /*0xf5cbe0*/ DamageMarker();
    /*0xf5c1ac*/ void Awake();
    /*0xf5c200*/ void StartInit();
    /*0xf5c2b4*/ void Init(UnityEngine.Transform _parent, float _fUnitSize, float _fDamage, bool _bCritical, bool _bDelayed);
    /*0xf5ca50*/ void Init();
    /*0xf5ca68*/ void Update();
    /*0xf5c8f0*/ void DeleteMarker(bool _bUseTween);
    /*0xf5cc14*/ void <DeleteMarker>b__27_0();

    struct InitParams
    {
        /*0x10*/ UnityEngine.Transform Parent;
        /*0x18*/ float UnitSize;
        /*0x1c*/ float Damage;
        /*0x20*/ bool IsCriitical;

        /*0xa8a1b8*/ InitParams(UnityEngine.Transform _parent, float _fUnitSize, float _fDamage, bool _bCritical);
    }
}

class DropCoin : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform m_Trans;
    /*0x20*/ Spine.Unity.SkeletonAnimation m_Anim;
    /*0x28*/ DropCoin.CoinState m_CoinState;
    /*0x2c*/ UnityEngine.Vector2 m_Dir;
    /*0x34*/ float m_fFallenSpeed;
    /*0x38*/ float m_fTotalTime;
    /*0x3c*/ UnityEngine.Vector2 m_vCoinDest;
    /*0x44*/ bool m_bSetCoinDest;

    /*0x11f2d84*/ DropCoin();
    /*0x11f2638*/ void Init();
    /*0x11f2908*/ void Update();
    /*0x11f2b60*/ void CoinAnimFallenEvent(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x11f2ce0*/ void CoinAnimIdleComplete(Spine.TrackEntry trackEntry);
    /*0x11f2b04*/ void DeleteCoin();

    enum CoinState
    {
        IDLE = 0,
        FALLEN = 1,
        FLYING = 2,
    }
}

class FactionBuffPopupButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ Helper_FactionBuff.FactionBuffType m_FactionBuffType;

    /*0x11d9a8c*/ FactionBuffPopupButton();
    /*0x11d9a04*/ void OpenBuffPage();
}

class GizmoGUI : UnityEngine.MonoBehaviour
{
    /*0xed37a8*/ GizmoGUI();
}

class GizmoGUI_Data
{
}

class KillCutscene : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_Cutscene_Kill;
    /*0x20*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_Cutscene_Death;
    /*0x28*/ Spine.Unity.SkeletonGraphic m_Cutscene_KillMessage;
    /*0x30*/ float m_Duration;
    /*0x34*/ float m_DeathDelay;
    /*0x38*/ float anchorY;
    /*0x3c*/ InGameController.KillCutsceneInfo m_CutsceneInfo;
    /*0x4c*/ float m_fCurDuration;
    /*0x50*/ float m_fCurDeathDelay;

    /*0xfa883c*/ KillCutscene();
    /*0xfa82e8*/ void Init(InGameController.KillCutsceneInfo _info);
    /*0xfa868c*/ void UpdateCutscene();
}

class SupportCutScene : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector2 AnchorPosition;
    /*0x20*/ UnityEngine.UI.Image m_TextBoxFrame;
    /*0x28*/ LocalizeString m_SpawnText;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_Animation;
    /*0x38*/ int m_nSkinID;
    /*0x40*/ DG.Tweening.Sequence m_Sequence;

    /*0xc9d8cc*/ SupportCutScene();
    /*0xc9d550*/ void Init(int _nSkinID);
    /*0xc9d7e8*/ void UpdateSupportCutScene();
    /*0xc9d868*/ void Delete();

    class <>c__DisplayClass6_0
    {
        /*0x10*/ SupportCutScene <>4__this;
        /*0x18*/ int _nSkinID;

        /*0xcc3c40*/ <>c__DisplayClass6_0();
        /*0xcc3c48*/ void <Init>g__HandleCompleteIn|0(Spine.TrackEntry _entry);
        /*0xcc3de4*/ void <Init>b__2();
        /*0xcc402c*/ void <Init>g__HandleCompleteOut|1(Spine.TrackEntry _entry);
    }
}

class UnitBattleStatusSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnitStatusSlotBar m_StatusBar;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_Character;
    /*0x38*/ AtlasImage m_PropertyIcon;
    /*0x40*/ AtlasImage m_BackgroundHPMP;
    /*0x48*/ AtlasImage m_originalEpicIcon;
    /*0x50*/ LocalizeString m_CharacterName;
    /*0x58*/ UnityEngine.GameObject m_SkillOnParticle;
    /*0x60*/ UnityEngine.ParticleSystem m_SkillUseParticle;
    /*0x68*/ AtlasImage[] m_arrStar;
    /*0x70*/ bool <IsInitialized>k__BackingField;
    /*0x74*/ int m_TouchIndex;
    /*0x78*/ UnityEngine.RectTransform m_RectTransform;
    /*0x80*/ CharacterBase m_LinkCharacter;
    /*0x88*/ bool m_bSkillEnable;
    /*0x90*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x98*/ UnityEngine.Transform m_ParentTransform;
    /*0xa0*/ UnityEngine.Transform m_SkillUseParticleParentTrans;

    /*0x10c18e8*/ UnitBattleStatusSlot();
    /*0x10c0440*/ UnitStatusSlotBar get_StatusBar();
    /*0x10c0448*/ bool get_IsInitialized();
    /*0x10c0450*/ void set_IsInitialized(bool value);
    /*0x10c045c*/ bool IsReadySkill();
    /*0x10c0464*/ void Init(CharacterBase _character, bool _isEnemy, int _id, int _grade, float _health, float _maxHealth);
    /*0x10c114c*/ void SetActiveStatusSlotBar(bool _bActive);
    /*0x10c1190*/ void EnableGray(bool _enable);
    /*0x10c12a4*/ void SetTouchIndex(int _index);
    /*0x10c12ac*/ void TouchSkillUI();
    /*0x10c1328*/ void SetActiveSkillEnableParticle(bool _bActive);
    /*0x10c10d4*/ void SetActiveUIParticles(bool _bActive);
    /*0x10c13c4*/ void SetActiveBattleStatusSlot(bool _bActive);
    /*0x10c112c*/ void SetActiveOriginalEpicIcon(bool _bActive);
    /*0x10c13f8*/ void SetDecreaseToCurrent();
    /*0x10c1470*/ void HandleParticleSetParent();
    /*0x10c1664*/ void HandleCheckUseSkillULT(int _nSkillSlot);
    /*0x10c174c*/ void HandleParticleDisenable();
}

class UnitStatusBar : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_HealthBar;
    /*0x20*/ UnityEngine.UI.Slider m_HealthDecreaseBar;
    /*0x28*/ AtlasImage m_HealthImage;
    /*0x30*/ AtlasImage m_HealthFrame;
    /*0x38*/ UnityEngine.UI.Slider m_SteminaBar;
    /*0x40*/ AtlasImage m_SteminaImage;
    /*0x48*/ AtlasImage m_SteminaFrame;
    /*0x50*/ UnityEngine.UI.Slider m_ShieldBar;
    /*0x58*/ AtlasImage m_ShieldImage;
    /*0x60*/ float m_HealthBarDecreaseWaitTime;
    /*0x64*/ float m_HealthBarDecreaseTickTime;
    /*0x68*/ float m_HealthBarDecreaseAmount;
    /*0x70*/ UnitBattleStatusSlot m_UnitStatusSlot;
    /*0x78*/ UnityEngine.GameObject m_Parent;
    /*0x80*/ UnityEngine.WaitForSeconds m_CoDecreaseTicks;
    /*0x88*/ bool m_Enemy;
    /*0x8c*/ float m_fHealth;
    /*0x90*/ float m_fMaxHealth;
    /*0x94*/ float m_fPrevHealth;
    /*0x98*/ bool m_bStartProgress;
    /*0xa0*/ System.Collections.IEnumerator m_ieAnimation;
    /*0xa8*/ bool <IsParentActive>k__BackingField;

    /*0x10c3dd8*/ UnitStatusBar();
    /*0x10c33bc*/ bool get_IsParentActive();
    /*0x10c33c4*/ void set_IsParentActive(bool value);
    /*0x10c33d0*/ void Init(bool _enemy, float _health, float _maxHealth, float _stamina, float _maxStamina, UnitBattleStatusSlot _slot);
    /*0x10c3918*/ void SetActiveStatusBar(bool _bActive);
    /*0x10c3938*/ void SetActiveStatusSlotBar(bool _bActive);
    /*0x10c3888*/ void SetEnableMPSlider(bool _bEnable);
    /*0x10c38d0*/ void SetEnableHPSlider(bool _bEnable);
    /*0x10c394c*/ void SetHealthBar(float _health, float _maxHealth);
    /*0x10c3ba0*/ void SetShieldBar(float _shield, float _maxShield);
    /*0x10c3c7c*/ void SetSteminaBar(float _stemina, float _maxStemina);
    /*0x10c371c*/ void EnableGray(bool _enable);
    /*0x10c3c18*/ void RefreshShieldSilder();
    /*0x10c1408*/ void SetDecreaseToCurrent();
    /*0x10c3a00*/ void StartDecrease();
    /*0x10c3d6c*/ System.Collections.IEnumerator CoDecreaseHealthBar();

    class <CoDecreaseHealthBar>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnitStatusBar <>4__this;
        /*0x28*/ float <barProgress>5__2;

        /*0xd8a714*/ <CoDecreaseHealthBar>d__37(int <>1__state);
        /*0xd8a740*/ void System.IDisposable.Dispose();
        /*0xd8a744*/ bool MoveNext();
        /*0xd8a924*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8a92c*/ void System.Collections.IEnumerator.Reset();
        /*0xd8a96c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class UnitStatusSlotBar : UnitStatusBar
{
    /*0x10c3f30*/ UnitStatusSlotBar();
    /*0x10c0b48*/ void Init(bool _enemy, float _health, float _maxHealth, UnitBattleStatusSlot _slot);
    /*0x10c3dfc*/ void SetSteminaBar(float _stemina, float _maxStemina);
    /*0x10c3e6c*/ void SetHealthBar(float _curHealth, float _maxHealth);
    /*0x10c3eb8*/ void SetShieldBar(float _curShield, float _maxShield);
}

class VerifyCodeVersion
{
    static /*0x0*/ string Value;

    static /*0x10d28f4*/ VerifyCodeVersion();
}

class AssetBundleLoadOperation : System.Collections.IEnumerator
{
    /*0xf77374*/ AssetBundleLoadOperation();
    /*0xf7780c*/ object get_Current();
    /*0xf77814*/ bool MoveNext();
    /*0xf77838*/ void Reset();
    bool Update();
    bool IsDone();
    float GetProgress();
}

class AssetBundleLoadLevelSimulationOperation : AssetBundleLoadOperation
{
    /*0xf777ec*/ AssetBundleLoadLevelSimulationOperation();
    /*0xf777f4*/ bool Update();
    /*0xf777fc*/ bool IsDone();
    /*0xf77804*/ float GetProgress();
}

class AssetBundleLoadLevelOperation : AssetBundleLoadOperation
{
    /*0x10*/ string m_AssetBundleName;
    /*0x18*/ string m_LevelName;
    /*0x20*/ bool m_IsAdditive;
    /*0x28*/ string m_DownloadingError;
    /*0x30*/ UnityEngine.AsyncOperation m_Request;

    /*0xf775e8*/ AssetBundleLoadLevelOperation(string assetbundleName, string levelName, bool isAdditive);
    /*0xf7766c*/ bool get_IsStart();
    /*0xf7767c*/ void SetAllowSceneActivation(bool enable);
    /*0xf7769c*/ bool Update();
    /*0xf77778*/ bool IsDone();
    /*0xf7779c*/ float GetProgress();
}

class AssetBundleLoadAssetOperation : AssetBundleLoadOperation
{
    /*0xf7736c*/ AssetBundleLoadAssetOperation();
    T GetAsset<T>();
}

class AssetBundleLoadAssetOperationSimulation : AssetBundleLoadAssetOperation
{
    /*0x10*/ UnityEngine.Object m_SimulatedObject;

    /*0xf775a4*/ AssetBundleLoadAssetOperationSimulation(UnityEngine.Object simulatedObject);
    T GetAsset<T>();
    /*0xf775d0*/ bool Update();
    /*0xf775d8*/ bool IsDone();
    /*0xf775e0*/ float GetProgress();
}

class AssetBundleLoadAssetOperationFull : AssetBundleLoadAssetOperation
{
    /*0x10*/ string m_AssetBundleName;
    /*0x18*/ string m_AssetName;
    /*0x20*/ string m_DownloadingError;
    /*0x28*/ System.Type m_Type;
    /*0x30*/ UnityEngine.AssetBundleRequest m_Request;

    /*0xf7737c*/ AssetBundleLoadAssetOperationFull(string bundleName, string assetName, System.Type type);
    T GetAsset<T>();
    /*0xf773bc*/ bool Update();
    /*0xf77530*/ bool IsDone();
    /*0xf77554*/ float GetProgress();
}

class AssetBundleManager : Singleton.Component.SingletonComponent<AssetBundleManager>
{
    static bool useTempCachedBundle = true;
    static /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.Object, UsingAssetData> _usingAssetDic;
    /*0x28*/ System.Text.StringBuilder _tempSB;
    /*0x30*/ System.Collections.Generic.Dictionary<string, LoadedAssetBundle> _loadedAssetBundles;
    /*0x38*/ System.Collections.Generic.List<BundleManifest> _loadedBundleManifest;
    /*0x40*/ string _streamingPath;
    /*0x48*/ string _cachePath;

    static /*0xf7a340*/ AssetBundleManager();
    static /*0xf78b78*/ string GetBundleName_ForBuild(AssetBundleType _type, string[] _arg);
    static /*0xf788ec*/ string ParseAssetBundleParam_Name(AssetBundleType type, string[] arg);
    /*0xf7a228*/ AssetBundleManager();
    /*0xf7783c*/ void IncreaseUsingData(string bundleName, LoadedAssetBundle loadedBundle, UnityEngine.Object asset);
    /*0xf779c4*/ void DecreaseUsingData(UnityEngine.Object asset);
    /*0xf77cdc*/ void LoadLevel(AssetBundleSceneType _type, string _scene_name, bool _is_additive);
    /*0xf77f3c*/ void UnloadAllLevelAssetBundles();
    /*0xf77f80*/ void UnloadAssetBundleScene(AssetBundleSceneType _type);
    /*0xf78030*/ void UnloadLevelAndDecRef(AssetBundleSceneType _type, string _scene_name);
    /*0xf780f8*/ void UnloadLevelAndAssetBundle(AssetBundleSceneType _type, string _scene_name);
    T LoadAsset<T>(AssetBundleType _type, string _file_name, string[] _arg);
    System.Collections.IEnumerator LoadAsync_Asset<T>(System.Action<T> _result_func, AssetBundleType _type, string _file_name, string[] _arg);
    /*0xf781f0*/ void UnloadAsset(UnityEngine.Object _asset);
    /*0xf78284*/ string GetSimulateAssetBundlePath(string[] _asset_paths, AssetBundleType _type, string _file_name, string[] _arg);
    /*0xf77d98*/ string GetBundleName(AssetBundleSceneType _type);
    /*0xf789fc*/ string GetBundleName(AssetBundleType _type, string[] _arg);
    /*0xf78cb4*/ string GetResourcePath(AssetBundleType _type, string[] _arg);
    /*0xf78e18*/ string get_baseDownloadURL();
    /*0xf78eb4*/ string get_streamingPath();
    /*0xf78f28*/ string get_cachePath();
    /*0xf78f6c*/ void AwakeInstance();
    /*0xf78f70*/ bool InitInstance();
    /*0xf78f78*/ void ReleaseInstance();
    /*0xf77460*/ LoadedAssetBundle GetLoadedAssetBundle(string _asset_bundle_name, ref string _error);
    /*0xf77e24*/ void LoadAssetBundle(string _asset_bundle_name, bool orDownload);
    /*0xf79274*/ System.Collections.Generic.List<BundleManifest> GetBundleManifest();
    /*0xf7927c*/ System.Collections.IEnumerator FindStreamingBundleManifest();
    /*0xf792e8*/ string GetBundleURLWithHash(string _bundle_name);
    /*0xf793e8*/ bool IsDontUnloadScene(string bundleName);
    /*0xf77be8*/ void UnloadAssetBundle(string _asset_bundle_name);
    /*0xf796e8*/ void UnloadAssetBundleInternal(string _asset_bundle_name);
    /*0xf797e4*/ void AddBundleManifest(BundleManifest _manifest);
    /*0xf79a00*/ bool IsStreamingAssetBundle(string _bundle_name);
    /*0xf79144*/ LoadedAssetBundle LoadBundleInTempCache(string bundleName, ref string error, bool orDownload);
    /*0xf77ec0*/ LoadedAssetBundle GetLoadedBundle(string bundleName);
    /*0xf79b0c*/ void LoadBundleInTempCache_Internal(string bundleName, bool orDownload, bool _checkDependency);
    /*0xf79c44*/ LoadedAssetBundle LoadBundleInTempCache_Impl(string bundleName, bool orDownload, bool _checkDependency);

    class <>c__DisplayClass3_0
    {
        /*0x10*/ UsingAssetData _using_data;

        /*0xd9de78*/ <>c__DisplayClass3_0();
        /*0xd9de80*/ bool <DecreaseUsingData>b__0(BundleManifest x);
    }

    class <LoadAsync_Asset>d__10<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ System.Action<T> _result_func;
        /*0x0*/ AssetBundleManager <>4__this;
        /*0x0*/ AssetBundleType _type;
        /*0x0*/ string[] _arg;
        /*0x0*/ string _file_name;
        /*0x0*/ string <_bundle_name>5__2;
        /*0x0*/ LoadedAssetBundle <_loaded_bundle>5__3;
        /*0x0*/ UnityEngine.AssetBundleRequest <_request>5__4;

        <LoadAsync_Asset>d__10(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ StreamingAssetEnumerator _enumarator;

        /*0xd9de18*/ <>c__DisplayClass35_0();
        /*0xd9de20*/ bool <FindStreamingBundleManifest>b__0();
    }

    class <FindStreamingBundleManifest>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AssetBundleManager <>4__this;
        /*0x28*/ AssetBundleManager.<> <>8__1;

        /*0xd9dfcc*/ <FindStreamingBundleManifest>d__35(int <>1__state);
        /*0xd9dff8*/ void System.IDisposable.Dispose();
        /*0xd9e0dc*/ bool MoveNext();
        /*0xd9e014*/ void <>m__Finally1();
        /*0xd9e630*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9e638*/ void System.Collections.IEnumerator.Reset();
        /*0xd9e678*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ string _bundle_name;

        /*0xd9de4c*/ <>c__DisplayClass36_0();
        /*0xd9de54*/ bool <GetBundleURLWithHash>b__0(BundleManifest x);
    }

    class <>c__DisplayClass40_0
    {
        /*0x10*/ BundleManifest _manifest;

        /*0xd9ded0*/ <>c__DisplayClass40_0();
        /*0xd9ded8*/ bool <AddBundleManifest>b__0(BundleManifest x);
        /*0xd9defc*/ bool <AddBundleManifest>b__1(BundleManifest x);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ string _bundle_name;

        /*0xd9df20*/ <>c__DisplayClass41_0();
        /*0xd9df28*/ bool <IsStreamingAssetBundle>b__0(BundleManifest x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ string bundleName;

        /*0xd9df4c*/ <>c__DisplayClass45_0();
        /*0xd9df54*/ bool <LoadBundleInTempCache_Impl>b__0(BundleManifest x);
        /*0xd9dfa8*/ bool <LoadBundleInTempCache_Impl>b__1(BundleManifest x);
    }
}

class StreamingAssetEnumerator : System.Collections.Generic.IEnumerator<bool>, System.Collections.IEnumerator, System.IDisposable
{
    /*0x10*/ string _uri;
    /*0x18*/ UnityEngine.Networking.UnityWebRequest _www;
    /*0x20*/ bool _isFile;
    /*0x28*/ UnityEngine.AssetBundle _assetbundle;
    /*0x30*/ UnityEngine.Networking.UnityWebRequestAsyncOperation _operation;

    /*0xc9ce30*/ StreamingAssetEnumerator(string _path, string _bundlename);
    /*0xc9ceec*/ StreamingAssetEnumerator(string _uri, bool _isStreamingAsset);
    /*0xc9cdfc*/ bool get_Current();
    /*0xc9ce28*/ object System.Collections.IEnumerator.get_Current();
    /*0xc9d000*/ void Dispose();
    /*0xc9d068*/ bool MoveNext();
    /*0xc9d0a4*/ void Reset();
    /*0xc9d194*/ UnityEngine.AssetBundle GetAssetBundle();
    /*0xc9d19c*/ string GetText();
    /*0xc9d1c8*/ byte[] GetBytes();
}

class Helper_Localize
{
    static /*0x0*/ string LOCALIZE_PATH;
    static /*0x8*/ string USEREXP_NAME;
    static /*0x10*/ string USEREXP_TOOLTIP;
    static /*0x18*/ string VIPPOINT_NAME;
    static /*0x20*/ string VIPPOINT_TOOLTIP;

    static /*0x10fe420*/ Helper_Localize();
    /*0x10fe418*/ Helper_Localize();
}

class LocalizeEffect_Flow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Parent;
    /*0x20*/ UnityEngine.RectTransform m_ParentTransform;
    /*0x28*/ UnityEngine.RectTransform m_BackTransform;
    /*0x30*/ bool m_bHorizontal;
    /*0x34*/ float m_fFlowSpeed;
    /*0x38*/ float m_fWaitStartTime;
    /*0x3c*/ float m_fWaitEndTime;
    /*0x40*/ float m_fOffset;
    /*0x48*/ System.Collections.IEnumerator m_ieEffect;

    /*0xfb2e54*/ LocalizeEffect_Flow();
    /*0xfb29e0*/ void Awake();
    /*0xfb2ad4*/ void OnEnable();
    /*0xfb2b24*/ void SetStartTransform();
    /*0xfb2ad8*/ void StartEffect();
    /*0xfb2de8*/ System.Collections.IEnumerator CoEffect();

    class <CoEffect>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LocalizeEffect_Flow <>4__this;

        /*0xe59fbc*/ <CoEffect>d__13(int <>1__state);
        /*0xe59fe8*/ void System.IDisposable.Dispose();
        /*0xe59fec*/ bool MoveNext();
        /*0xe5a2a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5a2a8*/ void System.Collections.IEnumerator.Reset();
        /*0xe5a2e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LocalizeManager : Singleton.Component.SingletonComponent<LocalizeManager>
{
    static LocaleLanguageType DEFAULT_LOCALE_TYPE = 0;
    static string LOCALIZE_LIST_FILENAME = "LocalizeList.csv";
    static string OPEN_PARAM = "<%";
    static string CLOSE_PARAM = "%>";
    static int STACK_EXCEPTION_MAX_COUNT = 5;
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x24*/ int _stack_exception_count;
    /*0x28*/ string _temp_first_word;
    /*0x30*/ LocaleLanguageType _selectedLocaleType;
    /*0x38*/ System.Collections.Generic.Dictionary<PTShare.Define.LanguageCode, LocalizeFileData> _fontListDic;
    /*0x40*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<LocalizeCmd>> _localizeDic;
    /*0x48*/ System.Collections.Generic.List<string> _filtterDB;
    /*0x50*/ System.Collections.Generic.Dictionary<int, string> _astarList;
    /*0x58*/ UnityEngine.Font[] _arrFont;
    /*0x60*/ System.Text.StringBuilder _tempSB;

    static /*0xfb3ad4*/ void add_OnChangeEvent(System.Action value);
    static /*0xfb3b90*/ void remove_OnChangeEvent(System.Action value);
    static /*0xfb3e90*/ void GetFontList(System.Collections.Generic.Dictionary<PTShare.Define.LanguageCode, LocalizeFileData> _resultFileListDic);
    /*0xfb9a78*/ LocalizeManager();
    /*0xfb3c4c*/ LocaleLanguageType get_currentLocaleType();
    /*0xfb3c54*/ void set_currentLocaleType(LocaleLanguageType value);
    /*0xfb3d34*/ void AwakeInstance();
    /*0xfb3d38*/ bool InitInstance();
    /*0xfb3e44*/ void ReleaseInstance();
    /*0xfb3d54*/ void InitLocalize(bool _resource);
    /*0xfb42a8*/ void InitLanguage(LocaleLanguageType type, bool _resource);
    /*0xfb3c64*/ void ChangeLocale(LocaleLanguageType type, bool _send_event, bool _force, bool _resource);
    /*0xfb5130*/ void LoadLocale(bool _send_event, bool _resource);
    /*0xfb53c8*/ UnityEngine.Font GetFont(LocalizeManager.FontSymbol symbolType);
    /*0xfa36e8*/ string GetLocalizeStr(string _key, string[] _arg);
    /*0xfb56d4*/ void ApplyLocalizeToTarget(UnityEngine.UI.Text _target, string _key, string[] _arg);
    /*0xfb5a68*/ System.Collections.Generic.List<LocalizeCmd> GetCmdList(string _key);
    /*0xfb5b10*/ string GetLocalizeExceptStr(string inputString);
    /*0xfb5e08*/ bool IsLocalizeExceptStr(string inputString);
    /*0xfb6084*/ bool IsLocalizeExceptStrGuild(string inputString);
    /*0xfb5e50*/ bool HasExceptStringIn(string input);
    /*0xfb60cc*/ bool IsExistKey(string _key);
    /*0xfb52d8*/ LocaleLanguageType GetServerLanguageType();
    /*0xfb6130*/ void InitFiltter(System.Collections.Generic.List<string> _data);
    /*0xfb622c*/ void AddFilter(ref string slang);
    /*0xfb6300*/ string AddAstar(int length);
    /*0xfb6378*/ void InitLocalizeCmd(string _key, string _value);
    /*0xfb6430*/ void InitCmdList(System.Collections.Generic.List<LocalizeCmd> _list, string _src);
    /*0xfb6708*/ void InitCmd(string _cmd, ref LocalizeCmd _result);
    /*0xfb683c*/ void InitCmd(string _cmd, string _data, ref LocalizeCmd _result);
    /*0xfb6be4*/ void InitCmd_kr(string _data, ref LocalizeCmd _result);
    /*0xfb6dcc*/ void InitCmd_Rank(string _data, ref LocalizeCmd _result);
    /*0xfb66a4*/ LocalizeCmd_Text MakeCmd_Text(string _text);
    /*0xfb6b18*/ LocalizeCmd_Param MakeCmd_Param(int _param_id);
    /*0xfb6b7c*/ LocalizeCmd_Key MakeCmd_Key(string _key);
    /*0xfb6ec4*/ LocalizeCmd_Kr MakeCmd_kr(string _param1, string _param2);
    /*0xfb6cdc*/ LocalizeCmd_Enter MakeCmd_Enter();
    /*0xfb6d3c*/ LocalizeCmd_Outline MakeCmd_Outline(string _color);
    /*0xfb6f38*/ LocalizeCmd_Rank MakeCmd_Rank(string[] _params);
    /*0xfb520c*/ void LoadFont(bool _send_event);
    /*0xfb6fa0*/ void LoadFont_Impl(LocalizeFileData _data);
    /*0xfb7188*/ void UnloadFont();
    /*0xfb50bc*/ void ClearLocalize();
    /*0xfb5404*/ bool FindKeyToValue(string key, ref System.Collections.Generic.List<LocalizeCmd> _result);
    /*0xfb5498*/ string ParseCommand(System.Collections.Generic.List<LocalizeCmd> _cmd_list, string[] _arg);
    /*0xfb57fc*/ void ApplyCommand(UnityEngine.UI.Text _target, System.Collections.Generic.List<LocalizeCmd> _cmd_list, string[] _arg);
    /*0xfb52cc*/ bool IsValidLocaleType(LocaleLanguageType type);
    /*0xfb71ec*/ void StartDebug();
    /*0xfb42b8*/ void LoadLocalizeFile_ForInitialize(bool _resource);
    /*0xfb71f0*/ void LoadLocalizeFile_Impl(bool _isResource, string _filename, LocalizeManager.LocaleType _locale_type);
    /*0xfb73f4*/ void LoadLocalizeData(System.Collections.Generic.Dictionary<string, string> _data);
    /*0xfb752c*/ string GetPropertyName(int _type);
    /*0xfb76c4*/ string GetPropertyName(PropertyType _type);
    /*0xfb785c*/ string GetCurrencyName(int _type);
    /*0xfb79f4*/ string GetCurrencyName(PTShare.Define.Currency _type);
    /*0xfb7b8c*/ string GetUnitGradeName(int _grade);
    /*0xfb7d24*/ string GetEquipGradeName(int _grade);
    /*0xfb7ebc*/ string GetStatusName(int _type);
    /*0xfb8054*/ string GetStatusName(Battle.CharacterStat.StatType _type, bool _bIsShort);
    /*0xfb821c*/ string GetHeroStateTypeName(int _type);
    /*0xfb83b4*/ string GetHeroStateTypeName(PTShare.Define.EquipmentType _type);
    /*0xfb854c*/ string GetEquipTypeName(int _type);
    /*0xfb86e4*/ string GetEquipTypeName(EquipSubType _type);
    /*0xfb887c*/ string GetConvertTimeString(System.DateTime _time);
    /*0xfb8cac*/ string GetTrainningStatusLocalize(TrainningStatusType type, string value);
    /*0xfb8f4c*/ string GetTierName(int _nTier);
    /*0xfb907c*/ string GetMeasureString(Battle.CharacterStat.StatType eType);
    /*0xfb90f8*/ string GetPropertyTowerTitleKey(int _faction);
    /*0xfb918c*/ string GetDayString(System.DayOfWeek dayOfWeek);
    /*0xfb9684*/ string GetRankingBoardTitle(RankingBoardType rankingBoardType);
    /*0xfb9848*/ string GetRewardName(Rewards reward);

    enum FontSymbol
    {
        Font_Default = 0,
        Font_Number = 1,
        Font_Influence = 2,
        Font_Chat = 3,
        Font_Bold = 4,
        End = 5,
    }

    enum LocaleType
    {
        Localize = 0,
        Filtter = 1,
        End = 2,
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ LocalizeManager <>4__this;
        /*0x18*/ bool _resource;

        /*0xe5a3c0*/ <>c__DisplayClass65_0();
        /*0xe5a3c8*/ void <LoadLocalizeFile_ForInitialize>b__1(string l);
    }

    class <>c
    {
        static /*0x0*/ LocalizeManager.<> <>9;
        static /*0x8*/ System.Func<string, string> <>9__65_0;

        static /*0xe5a2f0*/ <>c();
        /*0xe5a350*/ <>c();
        /*0xe5a358*/ string <LoadLocalizeFile_ForInitialize>b__65_0(string s);
    }

    class <>c__DisplayClass66_0
    {
        /*0x10*/ LocalizeManager <>4__this;
        /*0x18*/ bool _isResource;

        /*0xe5a3f4*/ <>c__DisplayClass66_0();
        /*0xe5a3fc*/ void <LoadLocalizeFile_Impl>b__0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class <>c__DisplayClass66_1
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, string> _data;
        /*0x18*/ LocalizeManager.<> CS$<>8__locals1;

        /*0xe5a494*/ <>c__DisplayClass66_1();
        /*0xe5a49c*/ void <LoadLocalizeFile_Impl>b__1(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }
}

class LocalizeString : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeManager.FontSymbol fontSymbolType;
    /*0x20*/ string key;
    /*0x28*/ System.Collections.Generic.List<string> paramList;
    /*0x30*/ bool isReceiveChangeLocalizeEvent;
    /*0x31*/ bool isRefreshPreferredWidth;
    /*0x32*/ bool isRefreshPreferredHeight;
    /*0x38*/ UnityEngine.UI.Text <localizeTarget>k__BackingField;
    /*0x40*/ UnityEngine.UI.Outline <localizeOutline>k__BackingField;

    /*0xfba714*/ LocalizeString();
    /*0xfb9c44*/ UnityEngine.UI.Text get_localizeTarget();
    /*0xfb9c4c*/ void set_localizeTarget(UnityEngine.UI.Text value);
    /*0xfb9c54*/ UnityEngine.UI.Outline get_localizeOutline();
    /*0xfb9c5c*/ void set_localizeOutline(UnityEngine.UI.Outline value);
    /*0xfb9c64*/ string GetText();
    /*0xfa3380*/ void SetLocaleKey(string _new_key, string[] _params);
    /*0xfa3c4c*/ void SetCustomText(string _text);
    /*0xfb9f48*/ void SetColor(UnityEngine.Color _color);
    /*0xfba018*/ void SetOpecity(float _opecity);
    /*0xfb9d7c*/ void SetParam(string[] _params);
    /*0xfba34c*/ void RefreshLocale();
    /*0xfba378*/ void RefreshFont();
    /*0xfba0f4*/ void RefreshLabel();
    /*0xfb2ccc*/ void RefreshPreferred();
    /*0xfba51c*/ void SetAlignment(UnityEngine.TextAnchor _anchor);
    /*0xfba554*/ void SetSize(int _size);
    /*0xfba58c*/ void SetOutlineColor(UnityEngine.Color _color);
    /*0xfb9c88*/ void InitLocalizeTarget();
    /*0xfba5ec*/ void OnDestroy();
    /*0xfba664*/ void Awake();
    /*0xfba690*/ void Start();
    /*0xfba710*/ void OnChangedLocale();
}

class CodeMask
{
    static int mask_interval = 100;

    /*0x10dfa6c*/ CodeMask();
}

enum MaskCodeType
{
    Common = 0,
    Login = 100,
    Account = 200,
}

class ActionCode
{
    /*0x120e010*/ ActionCode();

    enum Common
    {
        QuitGame = 0,
        QuitGameForce = 1,
        RestartGameForce = 2,
    }

    enum Login
    {
        ForceLogout = 100,
        AlreadyLogin = 101,
    }

    enum Account
    {
        Expand_Unit_inven = 200,
    }
}

class ErrorEnum
{
    /*0x114d7a0*/ ErrorEnum();

    enum Common
    {
        wating_from_server_respone = 0,
        invalid_network_state = 1,
    }

    enum Login
    {
        invalid_account_block_data = 100,
    }

    enum Account
    {
        not_enough_gold = 200,
    }
}

class LocalizeKeyManager : Singleton.Component.SingletonComponent<LocalizeKeyManager>
{
    /*0x28*/ System.Collections.Generic.Dictionary<int, string> actionDic;
    /*0x30*/ System.Collections.Generic.Dictionary<int, string> codeDic;

    /*0xfb3a28*/ LocalizeKeyManager();
    /*0xfb2ed0*/ void AwakeInstance();
    /*0xfb2ed4*/ bool InitInstance();
    /*0xfb30c0*/ void ReleaseInstance();
    /*0xfb3124*/ string FindActionKey(int action);
    /*0xfb31bc*/ string FindErrorKey(int code);
    /*0xfb2f00*/ void InitAction();
    /*0xfb2fe0*/ void InitErrorCode();
    /*0xfb3254*/ void AddActionCode(System.Type _enumType);
    /*0xfb3604*/ void AddErrorCode(System.Type _enumType);
}

class Aes
{
    static /*0x0*/ Aes _Instance;
    /*0x10*/ byte[] Iv;
    /*0x18*/ byte[] simple;

    static /*0xed9dc8*/ Aes get_Instance();
    /*0xed9e40*/ Aes();
    /*0xed9ee8*/ void Init();
    /*0xed9eec*/ byte[] CreateKey();
    /*0xed9f88*/ string Encrypt(byte[] key, string toEncrypt);
    /*0xeda088*/ string Decrypt(byte[] key, string toDecrypt);
    /*0xeda180*/ byte[] FixedEncrypt(byte[] data);
    /*0xeda460*/ byte[] FixedDecrypt(byte[] data);
    /*0xeda06c*/ byte[] Encrypt(byte[] key, byte[] data, int offset);
    /*0xeda1a4*/ byte[] Encrypt(byte[] key, byte[] data, int offset, int count);
    /*0xeda830*/ System.IO.Stream Encrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset);
    /*0xeda84c*/ System.IO.Stream Encrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset, int count);
    /*0xeda164*/ byte[] Decrypt(byte[] key, byte[] data, int offset);
    /*0xeda484*/ byte[] Decrypt(byte[] key, byte[] data, int offset, int count);
    /*0xeda8b0*/ System.IO.Stream Decrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset);
    /*0xeda8cc*/ System.IO.Stream Decrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset, int count);
}

class EmulatorChecker
{
    static /*0x14b9240*/ string Check(ref bool useEmul);
    static /*0x14b9248*/ string Check_Impl(ref bool useEmul);
    static /*0x14b9500*/ string GetEmulatorName(string dModel, string dVendor, string dName);
    static /*0x14b9634*/ bool IsBlueStacks(string dModel, string dVendor, string dName);
    static /*0x14b96f4*/ bool IsBlueStacks2(string dModel, string dVendor, string dName);
    static /*0x14b97b4*/ bool IsNox_3_0(string dModel, string dVendor, string dName);
    static /*0x14b9888*/ bool IsAndyroid(string dModel, string dVendor, string dName);
    static /*0x14b995c*/ bool Genymotion(string dModel, string dVendor, string dName);
    /*0x14b9a30*/ EmulatorChecker();
}

class ExceptionHandler : UnityEngine.MonoBehaviour
{
    static /*0x0*/ ExceptionHandler _instance;

    static /*0x11d66ec*/ ExceptionHandler();
    static /*0x11d6554*/ ExceptionHandler get_Instance();
    /*0x11d66f0*/ ExceptionHandler();
    /*0x11d66f8*/ string StrToHex(string hex);
    /*0x11d6724*/ string StrToHex(string str, System.Text.Encoding encoding);
    /*0x11d688c*/ string HexToStr(string hex);
    /*0x11d68b8*/ string HexToStr(string hex, System.Text.Encoding encoding);
    /*0x11d6adc*/ void SendLog(string _strMsg);
}

class RegularExpression
{
    static string ratinParttern_ableSpace = "[";
    static string ratinParttern = "[";
    static string hanguljamoParttern = "[ᄀ-ᇹ";
    static string specialCharParttern = "[‌-〿㈀-㏿ꓸ-꯿ힰ-ﬀ";

    static /*0x11c8d88*/ bool CheckNickNAme(string input);
    static /*0x11c8e64*/ bool CheckGuildName(string input);
    /*0x11c8f40*/ RegularExpression();
}

class SlangFinder : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string LINE_SPLIT_RE;
    /*0x18*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> filterDB;
    /*0x20*/ System.Collections.Generic.Dictionary<int, string> astarDic;
    /*0x28*/ string _temp_input;
    /*0x30*/ string _temp_first_word;
    /*0x38*/ string _temp_astar;
    /*0x40*/ System.Text.StringBuilder _temp_result;

    static /*0x1451368*/ SlangFinder();
    /*0x1451248*/ SlangFinder();
    /*0x1450a1c*/ void Awake();
    /*0x1450bf8*/ void Start();
    /*0x1450a20*/ void InitExceptStrings();
    /*0x1450ff4*/ void AddFilter(ref string slang);
    /*0x14511d0*/ string AddAstar(int length);
    /*0x1450cc4*/ string Replace(string inputString);
}

class PathGroup
{
    /*0x10*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PathData>> DataList;

    /*0x114764c*/ PathGroup(int _initCount);
    /*0x1147994*/ System.Collections.Generic.List<PathData> GetPathData(int _mapIndex);

    class <>c__DisplayClass1_0
    {
        /*0x10*/ System.Collections.Generic.List<PathData> list;

        /*0x108c4a0*/ <>c__DisplayClass1_0();
        /*0x108c4a8*/ void <.ctor>b__0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }
}

class SpineData
{
    /*0x10*/ System.Collections.Generic.Dictionary<string, Spine.Unity.SkeletonDataAsset> data;

    /*0x1455cb8*/ SpineData();
    /*0x1455810*/ void Init();
    /*0x1455920*/ void LoadAddSkelectonData(string _strData);
    /*0x1455b94*/ Spine.Unity.SkeletonDataAsset GetAsset(string _name);
    /*0x1455c48*/ System.Collections.Generic.List<Spine.Unity.SkeletonDataAsset> GetAllLists();
}

class SystemData
{
    /*0x10*/ bool BGMEnable;
    /*0x11*/ bool SFXEnable;
    /*0x14*/ float BGMVolume;
    /*0x18*/ float SFXVolume;

    /*0xc9e09c*/ SystemData();
}

class TableManager
{
    static /*0x0*/ TableData.TableData_Basic mBasic;
    static /*0x8*/ TableData.TableData_Systembasic mSystemBasic;
    static /*0x10*/ TableData.TableData_Friend mFriend;
    static /*0x18*/ TableData.TableData_Arena mArena;
    static /*0x20*/ TableData.TableData_Herolvsync mHeroLvSync;
    static /*0x28*/ System.Collections.Generic.Dictionary<string, string> mWorldArenaConfig;
    static /*0x30*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Buff> mBuffMap;
    static /*0x38*/ System.Collections.Generic.Dictionary<int, Battle.BuffEffectType> mBuffEffectType1;
    static /*0x40*/ System.Collections.Generic.Dictionary<int, Battle.BuffEffectType> mBuffEffectType2;
    static /*0x48*/ System.Collections.Generic.Dictionary<int, Battle.BuffEffectType> mBuffEffectType3;
    static /*0x50*/ System.Collections.Generic.Dictionary<int, Battle.BuffOriginType> mBuffOriginType;
    static /*0x58*/ System.Collections.Generic.Dictionary<int, Battle.BuffType> mBuffType;
    static /*0x60*/ System.Collections.Generic.Dictionary<int, Battle.ShieldType> mShieldType;
    static /*0x68*/ System.Collections.Generic.Dictionary<int, Battle.CharacterStat.StatType> mShieldStatType;
    static /*0x70*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Skillbase> mSkillTableData;
    static /*0x78*/ System.Collections.Generic.Dictionary<int, Battle.SkillType> mSkillType;
    static /*0x80*/ System.Collections.Generic.Dictionary<int, Battle.ActiveType> mActiveType;
    static /*0x88*/ System.Collections.Generic.Dictionary<int, Battle.ColliderType> mSightColliderType;
    static /*0x90*/ System.Collections.Generic.Dictionary<int, Battle.ColliderType> mFindColliderType;
    static /*0x98*/ System.Collections.Generic.Dictionary<int, Battle.AttackType> mAttackType;
    static /*0xa0*/ System.Collections.Generic.Dictionary<int, Battle.PassiveConditionType> mPassiveConditionType;
    static /*0xa8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mActiveSkillTableDataList;
    static /*0xb0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mPassiveSkillTableDataList;
    static /*0xb8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mSkillBaseCasterIdIgnoreDefault;
    static /*0xc0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mSkillBaseCasterId;
    static /*0xc8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>>> mSkillBaseCasterIDSlot;
    static /*0xd0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Skillfx> mSkillFXIDSkillLv;
    static /*0xd8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillfx>> mSkillFX;
    static /*0xe0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, Battle.SkillEnumGroup> mSkillFXEnum;
    static /*0xe8*/ System.Collections.Generic.Dictionary<Battle.SkillExtraID, TableData.TableData_Skillextra> mSkillExtra;
    static /*0xf0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Skilllv>> mSkillLv;
    static /*0xf8*/ System.Collections.Generic.Dictionary<UnitSkillLevel, System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Skilllv>> mSkillLvTierMaxGrade;
    static /*0x100*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, System.Collections.Generic.List<TableData.TableData_Skilldesc>> mSkillDesc;
    static /*0x108*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Enhanceequip> mEnhanceEquip;
    static /*0x110*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Equipment> mEquipment;
    static /*0x118*/ System.Collections.Generic.Dictionary<System.ValueTuple<string, int>, TableData.TableData_Equipment> mEquipmentTypeGrade;
    static /*0x120*/ System.Collections.Generic.Dictionary<System.ValueTuple<PTShare.Define.EquipParts, int, string>, TableData.TableData_Equipment> mEquipmentSlotGradeClass;
    static /*0x128*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Equipment>> mEquipmentClassType;
    static /*0x130*/ System.Collections.Generic.Dictionary<int, int> mEquipmentIndexEquipSlot;
    static /*0x138*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Advanceequip>> mAdvanceEquip;
    static /*0x140*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, string>> mAdvanceEquipClassGrade;
    static /*0x148*/ System.Collections.Generic.List<TableData.TableData_Unitbase> mUnitbaseOri;
    static /*0x150*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitbase> mUnitbase;
    static /*0x158*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> mUnitOriginalList;
    static /*0x160*/ System.Collections.Generic.Dictionary<int, Battle.ColliderType> mUnitbaseColliderType;
    static /*0x168*/ System.Collections.Generic.Dictionary<int, Battle.AttackType> mUnitbaseAttackType;
    static /*0x170*/ System.Collections.Generic.Dictionary<int, UnitClassType> mUnitbaseUnitClassType;
    static /*0x178*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> mUnitbaseMaxGrade;
    static /*0x180*/ System.Collections.Generic.List<TableData.TableData_Unitbase> mUnitbase2;
    static /*0x188*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitgrade>> mUnitgrade;
    static /*0x190*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgrade>> mUnitgradeIdGrade;
    static /*0x198*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgradelv> mUnitGradeLv;
    static /*0x1a0*/ System.Collections.Generic.List<TableData.TableData_Unitlv> mUnitLvList;
    static /*0x1a8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitlv> mUnitLv;
    static /*0x1b0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Unittier>> mUnitTier;
    static /*0x1b8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unittierlv> mUnitTierLV;
    static /*0x1c0*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> mSkinBasic;
    static /*0x1c8*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, string>, TableData.TableData_Voice> mSkinVoice;
    static /*0x1d0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Artifact> mArtifact;
    static /*0x1d8*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Artifact> mArtifactEquip;
    static /*0x1e0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, Battle.ColliderType> mArtifactColliderType;
    static /*0x1e8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Artifact>> mArtifactUnique;
    static /*0x1f0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Quest> mQuestIndex;
    static /*0x1f8*/ System.Collections.Generic.List<int> mDailyQuestIndices;
    static /*0x200*/ System.Collections.Generic.List<int> mWeeklyQuestIndices;
    static /*0x208*/ System.Collections.Generic.Dictionary<QuestContentType, System.Collections.Generic.List<TableData.TableData_Quest>> mQuestContentType;
    static /*0x210*/ System.Collections.Generic.Dictionary<System.ValueTuple<QuestContentType, QuestGroupType>, System.Collections.Generic.List<TableData.TableData_Quest>> mQuestContentTypeQuestGroupType;
    static /*0x218*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Quest> mQuestQuestGroupID;
    static /*0x220*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Questgroup>> mQuestGroupId;
    static /*0x228*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questpropertypoint> mQuestPropertyPoint;
    static /*0x230*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questchapterclear> mQuestChapterClear;
    static /*0x238*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Queststageclear> mQuestStageClear;
    static /*0x240*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questgacha> mQuestGacha;
    static /*0x248*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Queststageidle> mQuestStageIdle;
    static /*0x250*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Queststagetry> mQuestStageTry;
    static /*0x258*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questheroupgrade> mQuestHeroUpgrade;
    static /*0x260*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questequipupgrade> mQuestEquipUpgrade;
    static /*0x268*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questfriend> mQuestFriend;
    static /*0x270*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questprizeboard> mQuestPrizeBoard;
    static /*0x278*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questbuy> mQuestBuy;
    static /*0x280*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questarena> mQuestArena;
    static /*0x288*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questheroget> mQuestHeroGet;
    static /*0x290*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questlevel> mQuestLevel;
    static /*0x298*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questgetitem> mQuestGetItem;
    static /*0x2a0*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questmove> mQuestMove;
    static /*0x2a8*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questlabyrinth> mQuestLabyrinth;
    static /*0x2b0*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questresonance> mQuestResonance;
    static /*0x2b8*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questspirittowerclear> mQuestSpirittower;
    static /*0x2c0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Gacha>> mGacha;
    static /*0x2c8*/ System.Collections.Generic.Dictionary<GachaFactionType, System.Collections.Generic.List<TableData.TableData_Gacha>> mGachaFactionType;
    static /*0x2d0*/ System.Collections.Generic.List<TableData.TableData_Highgacha> mHighGacha;
    static /*0x2d8*/ System.Collections.Generic.List<TableData.TableData_Highdroprate> mHighDropRate;
    static /*0x2e0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Highdroprate> mHighDropRateMap;
    static /*0x2e8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Gachabonus>> mGachaBonus;
    static /*0x2f0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Gachadroppattern> mGachaDrop;
    static /*0x2f8*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> mGachaUnitPercent;
    static /*0x300*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Chapter> mChapter;
    static /*0x308*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Hardchapter> mHardChapter;
    static /*0x310*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Stage>> mStageChapterId;
    static /*0x318*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Stage> mStageBattleID;
    static /*0x320*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Stage> mStageMappointName;
    static /*0x328*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Hardstage>> mHardStageChapterId;
    static /*0x330*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Hardstage> mHardStageBattleID;
    static /*0x338*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Hardstage> mHardStageMappointName;
    static /*0x340*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Stageidle> mStageIdle;
    static /*0x348*/ System.Collections.Generic.List<TableData.TableData_Tower> mTowerBasic;
    static /*0x350*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Towerfloor>> mTowerFloorId;
    static /*0x358*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Towerfloor>> mTowerBattleId;
    static /*0x360*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Towerfloor> mTowerLast;
    static /*0x368*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Stagebattle> mStageBattleIndex;
    static /*0x370*/ System.Collections.Generic.List<TableData.TableData_Stagebattle> mStageBattle;
    static /*0x378*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Item> mItem;
    static /*0x380*/ System.Collections.Generic.Dictionary<int, string> mItemName;
    static /*0x388*/ System.Collections.Generic.Dictionary<ItemType, System.Collections.Generic.List<TableData.TableData_Item>> mItemType;
    static /*0x390*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Userlvexp> mUserLvExp;
    static /*0x398*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Fastidle> mFastIdle;
    static /*0x3a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Arenarank> mArenaRank;
    static /*0x3a8*/ System.Collections.Generic.List<TableData.TableData_Tutorial> mTutorial;
    static /*0x3b0*/ System.Collections.Generic.List<TableData.TableData_Tutorialbattlehero> mTutorialBattleHero;
    static /*0x3b8*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<TableData.TableData_Chest, System.Int32[]>> mChest;
    static /*0x3c0*/ System.Collections.Generic.Dictionary<ContentType, TableData.TableData_Contenthelp> mContentHelp;
    static /*0x3c8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Contentunlock> mContentUnlockIndex;
    static /*0x3d0*/ System.Collections.Generic.Dictionary<ContentType, TableData.TableData_Contentunlock> mContentUnlockContentType;
    static /*0x3d8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Mazemateequip> mMazeMateEquip;
    static /*0x3e0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int, int>, TableData.TableData_Mazebattle> mMazeBattle1;
    static /*0x3e8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Mazebattle> mMazeBattle2;
    static /*0x3f0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Mazecourse>> mMazeCourse;
    static /*0x3f8*/ System.Collections.Generic.List<TableData.TableData_Cashshopindex> mCashShopIndex;
    static /*0x400*/ System.Collections.Generic.List<TableData.TableData_Cashshopdaily> mCashShopDaily;
    static /*0x408*/ System.Collections.Generic.List<TableData.TableData_Cashshopweekly> mCashShopWeekly;
    static /*0x410*/ System.Collections.Generic.List<TableData.TableData_Cashshopmonthly> mCashShopMonthly;
    static /*0x418*/ System.Collections.Generic.List<TableData.TableData_Cashshopstar> mCashShopStar;
    static /*0x420*/ System.Collections.Generic.List<TableData.TableData_Cashshoplimit> mCashShopLimit;
    static /*0x428*/ System.Collections.Generic.List<TableData.TableData_Cashshopsubscription> mCashShopSubscription;
    static /*0x430*/ System.Collections.Generic.List<TableData.TableData_Cashshophero> mCashShopHero;
    static /*0x438*/ System.Collections.Generic.List<TableData.TableData_Cashshopbeginner> mCashShopBeginner;
    static /*0x440*/ System.Collections.Generic.List<TableData.TableData_Cashshopinstant> mCashShopInstant;
    static /*0x448*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Cashshopinstant> mCashShopInstantMap;
    static /*0x450*/ System.Collections.Generic.List<TableData.TableData_Cashshopquest> mCashShopQuest;
    static /*0x458*/ System.Collections.Generic.List<TableData.TableData_Cashshopskinpiece> mCashShopSkein;
    static /*0x460*/ System.Collections.Generic.List<TableData.TableData_Cashshopskin> mCashShopSkin;
    static /*0x468*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Packagetime>> mCashShopPackageTime;
    static /*0x470*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Packageproductgroup>> mCashShopPackageProductGroup;
    static /*0x478*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Cashshopquestreward>> mCashShopQuestRewardList;
    static /*0x480*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Cashshopquestreward> mCashShopQuestReward;
    static /*0x488*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Demodata> mDemoIndex;
    static /*0x490*/ System.Collections.Generic.List<TableData.TableData_Contentshop> mContentShop;
    static /*0x498*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Contentshoparrangement>> mContentShopArrangement;
    static /*0x4a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Idleunittipdialog> mIdleUnitTipDialog;
    static /*0x4a8*/ System.Collections.Generic.Dictionary<TopMenuType, TableData.TableData_Menusettingbase> mMenuSettingBase;
    static /*0x4b0*/ System.Collections.Generic.List<TableData.TableData_Triggerdata> mTriggerData;
    static /*0x4b8*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> mFactionBuff;
    static /*0x4c0*/ System.Collections.Generic.List<TableData.TableData_Profileskin> mProfileSkin;
    static /*0x4c8*/ System.Collections.Generic.List<TableData.TableData_Emoticon> mEmoticon;
    static /*0x4d0*/ System.Collections.Generic.List<TableData.TableData_Worldarenachampreward> mWorldArenaChampReward;
    static /*0x4d8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Worldarenatier2> mWorldArenaTier;
    static /*0x4e0*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> mTrainingRoom;
    static /*0x4e8*/ System.Collections.Generic.List<TableData.TableData_Revert> mHeroRevert;
    static /*0x4f0*/ System.Collections.Generic.Dictionary<int, int> mMaxUnitLV;
    static /*0x4f8*/ System.Collections.Generic.List<TableData.TableData_Event> mEvent;
    static /*0x500*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> mEventAttendacne;
    static /*0x508*/ System.Collections.Generic.List<TableData.TableData_Eventpass> mEventPass;
    static /*0x510*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> mEventPassReward;
    static /*0x518*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> mEventCurrencyLocal;
    static /*0x520*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventcurrencylocal> mEventCurrencyLocalMap;
    static /*0x528*/ System.Collections.Generic.List<TableData.TableData_Eventmission> mEventMission;
    static /*0x530*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventquest>> mEventQuestMap;
    static /*0x538*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Eventquestgroup>> mEventQuestGroupMap;
    static /*0x540*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventquestgroup> mEventQuestGroup;
    static /*0x548*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventroulette>> mEventRoulette;
    static /*0x550*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> mFBEventLog;
    static /*0x558*/ System.Collections.Generic.Dictionary<string, int> mEventPassMap3;
    static /*0x560*/ System.Collections.Generic.Dictionary<string, int> mEventPassMap4;
    static /*0x568*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventpage>> mEventPage;
    static /*0x570*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventhottime> mEventHotTime;
    static /*0x578*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>>> mEventBonusMap;
    static /*0x580*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventpreset> mEventPreset;
    static /*0x588*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventmissionpoint>> mEventMissionPoint;
    static /*0x590*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventexchange>> mEventExchange;
    static /*0x598*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventbuyinapp> mEventBuyInApp;
    static /*0x5a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventboss> mEventBoss;
    static /*0x5a8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventboss> mEventBossIndex;
    static /*0x5b0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventbossreward>> mEventBossReward;
    static /*0x5b8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventcomplete>> mEventComplete;
    static /*0x5c0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventcompletemission>> mEventCompleteMission;
    static /*0x5c8*/ System.Collections.Generic.Dictionary<string, string> mConfig1;
    static /*0x5d0*/ System.Collections.Generic.Dictionary<string, int> mConfig2;
    static /*0x5d8*/ TableData.TableData_Guild mGuild;
    static /*0x5e0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Guildlevel> mGuildLevel;
    static /*0x5e8*/ System.Collections.Generic.List<TableData.TableData_Guildboss> mGuildBoss;
    static /*0x5f0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Guildhuntingreward>> mGuildHunting;
    static /*0x5f8*/ System.Collections.Generic.Dictionary<string, string> mGuildWarConfig;
    static /*0x600*/ System.Collections.Generic.List<TableData.TableData_Guildwarpoint> mGuildWarPoint;
    static /*0x608*/ System.Collections.Generic.Dictionary<PTShare.Define.GuildWarPosition, System.Collections.Generic.List<TableData.TableData_Guildwarorganize>> mGuildWarOrganize;
    static /*0x610*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Guildwarrank>> mGuildWarRank;
    static /*0x618*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Guildwarrankreward> mGuildWarRankReward;
    static /*0x620*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Guildwartactic> mGuildTactic;
    static /*0x628*/ System.Collections.Generic.List<TableData.TableData_Vip> mVip;
    static /*0x630*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Vip> mVip2;
    static /*0x638*/ System.Collections.Generic.List<TableData.TableData_Bountyquest> mBountyQuest;
    static /*0x640*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Bountyquest> mBountyQuest2;
    static /*0x648*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Bountylv> mBountyLevel;
    static /*0x650*/ System.Collections.Generic.List<TableData.TableData_Dungeon> mDungeon;
    static /*0x658*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Dungeon> mDungeon2;
    static /*0x660*/ TableData.TableData_Dungeonsetting mDungeonConfig;
    static /*0x668*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeongroup>> mDungeonGroup;
    static /*0x670*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeonmap>> mDungeonMap;
    static /*0x678*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Dungeontile> mDungeonTile;
    static /*0x680*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Dungeonmateequip> mDungeonMateEquip;
    static /*0x688*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeondialog>> mDungeonDialog;
    static /*0x690*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeonreward>> mDungeonReward;
    static /*0x698*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection>> mDungeonDialogDirection;
    static /*0x6a0*/ System.Collections.Generic.List<TableData.TableData_Racetile> mRaceTile;
    static /*0x6a8*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> mRaceAccel;
    static /*0x6b0*/ System.Collections.Generic.List<TableData.TableData_Racereward> mRaceReward;
    static /*0x6b8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Runlife> mRunLife;
    static /*0x6c0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Runreward> mRunReward;
    static /*0x6c8*/ System.Collections.Generic.List<TableData.TableData_Relation> mRelation;
    static /*0x6d0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Worldbossstep> mWorldBossStepMap;
    static /*0x6d8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Worldbossmission>> mWorldBossMission;
    static /*0x6e0*/ System.Collections.Generic.List<TableData.TableData_Pvenoblity> mPveNoblity;
    static /*0x6e8*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> mPveClearReward;
    static /*0x6f0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Pvenoblity> mPveNoblityMap;
    static /*0x6f8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Pvechallenge>> mPveChallenge;
    static /*0x700*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Pveclearreward> mPveClearRewardMap;
    static /*0x708*/ System.Collections.Generic.Dictionary<string, string> mHousing;
    static /*0x710*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Housingfloor> mHousingFloor;
    static /*0x718*/ int mHousingMaxFloor;
    static /*0x720*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Housinggacha>> mHousingGacha;
    static /*0x728*/ int mHousingGachaMaxGroup;
    static /*0x730*/ System.Collections.Generic.List<TableData.TableData_Housingdismiss> mHousingDismiss;
    static /*0x738*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furniture> mFurnitureMap;
    static /*0x740*/ System.Collections.Generic.List<TableData.TableData_Furniture> mFurniture;
    static /*0x748*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> mFurnitureleveltypelistMap;
    static /*0x750*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> mFurnitureleveltypelistMap2;
    static /*0x758*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Furnitureeffecttype> mFurnitureeffecttypeMap;
    static /*0x760*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> mFurnitureeffecttype;
    static /*0x768*/ System.Collections.Generic.List<TableData.TableData_Furnitureshop> mFurnitureshop;
    static /*0x770*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Furnitureshoplist>> mFurnitureshoplist;
    static /*0x778*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furnitureshoplist> mFurnitureshopMap;
    static /*0x780*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Housingfloorpattern> mFloorPattern;
    static /*0x788*/ System.Collections.Generic.List<TableData.TableData_Furnitureset> mFurnitureSet;
    static /*0x790*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furniturecontentseffect> mContentEffect;
    static /*0x798*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furnitureheroeffect> mFurnitureUnitStatEffect;
    static /*0x7a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furniturelevelup> mFurnitureLevelUp;
    static /*0x7a8*/ System.Collections.Generic.List<TableData.TableData_Furniturelevelup> mFurnitureLevelUpList;
    static /*0x7b0*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Furnitureexp> mFurnitureExp;
    static /*0x7b8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Abilitypercent> mAbilityPercentMap;
    static /*0x7c0*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> mAbilityPercentList;
    static /*0x7c8*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue>> mAbilityOptionValueMap;
    static /*0x7d0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Abilityoptionvalue> mAbilityOptionValueMap2;
    static /*0x7d8*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Abilityreset> mAbilityResetMap;
    static /*0x7e0*/ TableData.TableGroup mTable;

    static /*0xca20f4*/ TableData.TableGroup get_GetTableGroup();
    static /*0xca2140*/ void Init(TableData.TableGroup table);
    static /*0xcba664*/ TableData.TableGroup Group();
    static /*0xcba6b0*/ TableData.TableData_Basic Basic();
    static /*0xcba6fc*/ TableData.TableData_Systembasic SystemBasic();
    static /*0xcba748*/ TableData.TableData_Friend Friend();
    static /*0xcba794*/ TableData.TableData_Arena Arena();
    static /*0xcba7e0*/ TableData.TableData_Herolvsync HeroLvSync();
    static /*0xcba82c*/ TableData.TableData_Chapter FindChapterTable(int _index);
    static /*0xcba8c0*/ TableData.TableData_Hardchapter FindHardChapterTable(int _index);
    static /*0xcba954*/ int GetChapterCount();
    static /*0xc934b8*/ System.Collections.Generic.List<TableData.TableData_Stage> FindStageList(int _chapterID);
    static /*0xcba9c0*/ TableData.TableData_Stage FindStageToBattleID(int _nBattleID);
    static /*0xcbaa54*/ TableData.TableData_Stage FindStageToMappointName(string _mappointName);
    static /*0xc93554*/ System.Collections.Generic.List<TableData.TableData_Hardstage> FindHardStageList(int _chapterID);
    static /*0xcbaae8*/ TableData.TableData_Hardstage FindHardStageToBattleID(int _nBattleID);
    static /*0xcbab7c*/ TableData.TableData_Hardstage FindHardStageToMappointName(string _mappointName);
    static /*0xc90c38*/ TableData.TableData_Stagebattle GetStageBattle(int _battleID);
    static /*0xcbac10*/ System.Collections.Generic.List<TableData.TableData_Stagebattle> GetStageBattleList();
    static /*0xcbac5c*/ TableData.TableData_Userlvexp GetUserLevel(int _level);
    static /*0xcbacf0*/ int GetMaxUserLevel();
    static /*0xcbad5c*/ TableData.TableData_Fastidle FindFastIdlebyIndex(int _index);
    static /*0xc97828*/ TableData.TableData_Contenthelp FindContentHelp(ContentType _type);
    static /*0xcbadf0*/ TableData.TableData_Demodata GetDemoByIndex(int _index);
    static /*0xcbae84*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> GetFactionBuff();
    static /*0xcbaed0*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> GetFirebaseLog();
    static /*0xcbaf1c*/ int GetMaxUnitLV(int _nUnitID);

    class Buff
    {
        static /*0xccc9e4*/ TableData.TableData_Buff Find(int _nBuffID);
        static /*0xccca78*/ TableData.TableData_Buff FindWithEffectType(Battle.BuffEffectType _eType);
        static /*0xcccb90*/ Battle.BuffEffectType FindEffectType1(int _nBuffID);
        static /*0xcccc24*/ Battle.BuffEffectType FindEffectType2(int _nBuffID);
        static /*0xccccb8*/ Battle.BuffEffectType FindEffectType3(int _nBuffID);
        static /*0xcccd4c*/ Battle.BuffOriginType FindOriginType(int _nBuffID);
        static /*0xcccde0*/ Battle.BuffType FindBuffType(int _nBuffID);
        static /*0xccce74*/ Battle.ShieldType FindShieldType(int _nBuffID);
        static /*0xcccf08*/ Battle.CharacterStat.StatType FindShieldStatType(int _nBuffID);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ Battle.BuffEffectType _eType;

            /*0xd90c14*/ <>c__DisplayClass1_0();
            /*0xd90c1c*/ bool <FindWithEffectType>b__0(TableData.TableData_Buff x);
        }
    }

    class Skill
    {
        class Base
        {
            static /*0xd9572c*/ TableData.TableData_Skillbase Find(int _nSkillID);
            static /*0xd957c0*/ Battle.SkillType FindSkillType(int _nSkillID);
            static /*0xd95854*/ Battle.ActiveType FindActiveType(int _nSkillID);
            static /*0xd958e8*/ Battle.ColliderType FindSightColliderType(int _nSkillID);
            static /*0xd9597c*/ Battle.ColliderType FindFindColliderType(int _nSkillID);
            static /*0xd95a10*/ Battle.AttackType FindAttackType(int _nSkillID);
            static /*0xd95aa4*/ Battle.PassiveConditionType FindPCType(int _nSkillID);
            static /*0xd95b38*/ int FindSkillSlot(int _nSkillID);
            static /*0xd95b54*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindManyActiveSkill(int _nUnitID);
            static /*0xd95c28*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindManyPassiveSkill(int _nUnitID);
            static /*0xd95cfc*/ TableData.TableData_Skillbase Find(Battle.StateAndSkillID _eSkillID);
            static /*0xd95d00*/ int FindSkillSlot(Battle.StateAndSkillID _eSkillID);
            static /*0xd95d1c*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindManyIgnoreDefault(int _casterID);
            static /*0xd95db0*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindMany(int _casterID);
            static /*0xd95e44*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindMany(int _nUnitID, int _skillSlot);
        }

        class FX
        {
            static /*0xd960bc*/ TableData.TableData_Skillfx Find(int _nSkillFXID, int _nSkillLV);
            static /*0xd96188*/ System.Collections.Generic.List<TableData.TableData_Skillfx> FindMany(int _skillbaseID);
            static /*0xd9625c*/ Battle.SkillEnumGroup FindEnum(int _nSkillFXID, int _nSkillLV);
        }

        class Extra
        {
            static /*0xd96028*/ TableData.TableData_Skillextra Find(Battle.SkillExtraID _eSkillExtraID);
        }

        class Level
        {
            static /*0xd96328*/ bool IsUseSkillTier(int tier, int maxGrade);
            static /*0xd9647c*/ TableData.TableData_Skilllv Find(int _maxGrade, int _skillSlot);
            static /*0xd96558*/ TableData.TableData_Skilllv FindByTypeTierGrade(UnitSkillLevel _type, int _tier, int _maxgrade);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ int tier;

                /*0xd96474*/ <>c__DisplayClass0_0();
                /*0xd97c24*/ bool <IsUseSkillTier>b__0(System.Collections.Generic.KeyValuePair<int, TableData.TableData_Skilllv> x);
            }
        }

        class Desc
        {
            static /*0xd95f5c*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> FindMany(int _casterID, int _skillSlot);
        }
    }

    class Equip
    {
        static /*0xccd514*/ TableData.TableData_Equipment Find(int _tableid);
        static /*0xccd5d4*/ TableData.TableData_Equipment FindByTypeGrade(string _type, int _grade);
        static /*0xccd6d0*/ TableData.TableData_Equipment FindBySlotGradeClass(PTShare.Define.EquipParts _equipslot, int _grade, string _classtype);
        static /*0xccd7a8*/ System.Collections.Generic.List<TableData.TableData_Equipment> FindByClass(string _classType);
        static /*0xccd83c*/ System.Collections.Generic.List<TableData.TableData_Equipment> FindAllPartsType(EquipSubType eType);
        static /*0xccd984*/ int FindEquipSlot(int _tableid);

        class Advance
        {
            static /*0xd920d8*/ string FindRequireCost(int _classGroup, int _advanceGrade);
        }

        class Enhance
        {
            static /*0xd921b4*/ TableData.TableData_Enhanceequip Find(int _index);
        }

        class <>c__DisplayClass4_0
        {
            /*0x10*/ EquipSubType eType;

            /*0xd92030*/ <>c__DisplayClass4_0();
            /*0xd92038*/ bool <FindAllPartsType>b__0(TableData.TableData_Equipment x);
        }
    }

    class Unit
    {
        class Base
        {
            static /*0xd966f8*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindAll();
            static /*0xd96744*/ TableData.TableData_Unitbase Find(int _tableid);
            static /*0xd967d8*/ Battle.ColliderType FindColliderType(int _nUnitID);
            static /*0xd9686c*/ Battle.AttackType FindAttackType(int _nUnitID);
            static /*0xd96900*/ UnitClassType FindUnitClassType(int _nUnitID);
            static /*0xd96994*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindMany(int _maxgrade);
            static /*0xd96a68*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindMany();
            static /*0xd96ab4*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindOriginalList(int _nUnitID);
        }

        class Grade
        {
            static /*0xd96b88*/ System.Collections.Generic.List<TableData.TableData_Unitgrade> FindMany(int _nIndex);
            static /*0xd96c5c*/ TableData.TableData_Unitgrade Find(int _nUnitID, int _grade);
        }

        class GradeLevel
        {
            static /*0xd96d38*/ TableData.TableData_Unitgradelv Find(int _index);
        }

        class Level
        {
            static /*0xd96df8*/ System.Collections.Generic.List<TableData.TableData_Unitlv> FindAll();
            static /*0xd96e44*/ TableData.TableData_Unitlv Find(int _lv);
        }

        class Tier
        {
            static /*0xd96f04*/ TableData.TableData_Unittier Find(int _nUnitID, int _tier);
        }

        class TierLevel
        {
            static /*0xd96fe0*/ TableData.TableData_Unittierlv Find(int _tier);
        }
    }

    class Skin
    {
        static /*0xccecc8*/ TableData.TableData_Skinbasic FindSkin(int index);
        static /*0xccedd0*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> FindSkinAll();
        static /*0xccee1c*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> FindSkinAll(int nUnitID);
        static /*0xccef24*/ TableData.TableData_Voice FindVoice(int _nUnitID, string _sKey);

        class <>c__DisplayClass0_0
        {
            /*0x10*/ int index;

            /*0xd96654*/ <>c__DisplayClass0_0();
            /*0xd9665c*/ bool <FindSkin>b__0(TableData.TableData_Skinbasic x);
        }

        class <>c__DisplayClass2_0
        {
            /*0x10*/ int nUnitID;

            /*0xd96680*/ <>c__DisplayClass2_0();
            /*0xd96688*/ bool <FindSkinAll>b__0(TableData.TableData_Skinbasic x);
        }
    }

    class Artifact
    {
        static /*0xccc328*/ System.Collections.Generic.List<TableData.TableData_Artifact> FindUniqueAll();
        static /*0xccc550*/ System.Collections.Generic.List<TableData.TableData_Artifact> FindUniqueList(int artifactID);
        static /*0xccc5e4*/ TableData.TableData_Artifact Find(PTShare.Define.SArtifact artifact, bool desc);
        static /*0xccc77c*/ TableData.TableData_Artifact Find(int _nArtifactID, int _nArtifactLV);
        static /*0xccc848*/ TableData.TableData_Artifact FindWithEquipIDLV(int _nEquipID, int _nEquipLV);
        static /*0xccc914*/ Battle.ColliderType FindColliderType(int _nArtifactID, int _nArtifactLV);

        class <>c
        {
            static /*0x0*/ TableManager.Artifact.<> <>9;
            static /*0x8*/ System.Func<System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>>, int> <>9__0_0;
            static /*0x10*/ System.Func<System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>>, TableData.TableData_Artifact> <>9__0_1;

            static /*0xd90920*/ <>c();
            /*0xd90980*/ <>c();
            /*0xd90988*/ int <FindUniqueAll>b__0_0(System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>> k);
            /*0xd909c8*/ TableData.TableData_Artifact <FindUniqueAll>b__0_1(System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>> v);
        }

        class <>c__DisplayClass2_0
        {
            /*0x10*/ PTShare.Define.SArtifact artifact;

            /*0xd90a20*/ <>c__DisplayClass2_0();
            /*0xd90a28*/ bool <Find>b__0(System.ValueTuple<int, int> x);
            /*0xd90a64*/ bool <Find>b__1(System.ValueTuple<int, int> x);
        }
    }

    class Quest
    {
        static /*0xcce378*/ TableData.TableData_Quest Find(int _index);
        static /*0xcce40c*/ System.Collections.Generic.List<int> FindIndices(PTShare.Define.QuestType type);
        static /*0xcce46c*/ System.Collections.Generic.List<TableData.TableData_Quest> FindMany(QuestContentType _eContentType);
        static /*0xcce540*/ System.Collections.Generic.List<TableData.TableData_Quest> FindMany(QuestContentType _eContentType, QuestGroupType _eGroupType);
        static /*0xcce650*/ TableData.TableData_Quest Find(TableData.TableData_Questgroup _group);

        class Group
        {
            static /*0xd94da4*/ System.Collections.Generic.List<TableData.TableData_Questgroup> FindMany(string _strQuestGroupid);
            static /*0xd94e78*/ System.Collections.Generic.List<string> FindAllKeys();
            static /*0xd94f00*/ TableData.TableData_Questgroup Find(string _questgroupId);
        }

        class PropertyPoint
        {
            static /*0xd952e0*/ TableData.TableData_Questpropertypoint Find(string _questid);
        }

        class ChapterClear
        {
            static /*0xd94ac0*/ TableData.TableData_Questchapterclear Find(string _questid);
        }

        class StageClear
        {
            static /*0xd9549c*/ TableData.TableData_Queststageclear Find(string _questid);
        }

        class Gacha
        {
            static /*0xd94c7c*/ TableData.TableData_Questgacha Find(string _questid);
        }

        class StageIdle
        {
            static /*0xd95530*/ TableData.TableData_Queststageidle Find(string _questid);
        }

        class StageTry
        {
            static /*0xd955c4*/ TableData.TableData_Queststagetry Find(string _questid);
        }

        class HeroUpgrade
        {
            static /*0xd94ffc*/ TableData.TableData_Questheroupgrade Find(string _questid);
        }

        class EquipUpgrade
        {
            static /*0xd94b54*/ TableData.TableData_Questequipupgrade Find(string _questid);
        }

        class Friend
        {
            static /*0xd94be8*/ TableData.TableData_Questfriend Find(string _questid);
        }

        class PrizeBoard
        {
            static /*0xd9524c*/ TableData.TableData_Questprizeboard Find(string _questid);
        }

        class Buy
        {
            static /*0xd94a2c*/ TableData.TableData_Questbuy Find(string _questid);
        }

        class Arena
        {
            static /*0xd94998*/ TableData.TableData_Questarena Find(string _questid);
        }

        class HeroGet
        {
            static /*0xd94f68*/ TableData.TableData_Questheroget Find(string _questid);
        }

        class Level
        {
            static /*0xd95124*/ TableData.TableData_Questlevel Find(string _questid);
        }

        class GetItem
        {
            static /*0xd94d10*/ TableData.TableData_Questgetitem Find(string _questid);
        }

        class Move
        {
            static /*0xd951b8*/ TableData.TableData_Questmove Find(string _questid);
        }

        class Labyrinth
        {
            static /*0xd95090*/ TableData.TableData_Questlabyrinth Find(string _questid);
        }

        class Resonance
        {
            static /*0xd95374*/ TableData.TableData_Questresonance Find(string _questid);
        }

        class SpiritTower
        {
            static /*0xd95408*/ TableData.TableData_Questspirittowerclear Find(string _questid);
        }
    }

    class Gacha
    {
        static /*0xccda64*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Gacha>> FindBaseDics();
        static /*0xccdab0*/ System.Collections.Generic.List<TableData.TableData_Gacha> FindMany(GachaFactionType _type);

        class Bonus
        {
            static /*0xd92d4c*/ System.Collections.Generic.List<int> FindAllKeys();
            static /*0xd92dd4*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> FindMany(int _pt);
        }

        class DropPattern
        {
            static /*0xd92e68*/ TableData.TableData_Gachadroppattern Find(int _index);
        }

        class UnitPercent
        {
            static /*0xd93028*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> FindAll();
        }

        class HightGacha
        {
            static /*0xd92fdc*/ System.Collections.Generic.List<TableData.TableData_Highgacha> FindAll();
        }

        class HighDropRate
        {
            static /*0xd92efc*/ System.Collections.Generic.List<TableData.TableData_Highdroprate> FindAll();
            static /*0xd92f48*/ TableData.TableData_Highdroprate Find(int index);
        }
    }

    class Idle
    {
        static /*0xccdda0*/ TableData.TableData_Stageidle Find(int _nIdleID);
    }

    class Tower
    {
        static /*0xcceff0*/ System.Collections.Generic.List<TableData.TableData_Tower> FindBasicAll();
        static /*0xccf03c*/ TableData.TableData_Towerfloor Find(int factionid, int _nFloorID);
        static /*0xccf0f8*/ TableData.TableData_Towerfloor FindByBattleID(int factionid, int _nBattleID);
        static /*0xccf1b4*/ TableData.TableData_Towerfloor FindLast(int factionid);
    }

    class Item
    {
        static /*0xccdec8*/ TableData.TableData_Item Find(int _itemID);
        static /*0xccdf5c*/ string FindName(int _itemID);
        static /*0xccdff0*/ System.Collections.Generic.List<TableData.TableData_Item> FindMany(ItemType _type);
    }

    class ArenaRank
    {
        static /*0xccc294*/ TableData.TableData_Arenarank Find(int _index);
    }

    class Tutorial
    {
        static /*0xccf294*/ System.Collections.Generic.List<TableData.TableData_Tutorial> FindAll();

        class BattleHero
        {
            static /*0xd966ac*/ System.Collections.Generic.List<TableData.TableData_Tutorialbattlehero> FindAll();
        }
    }

    class Chest
    {
        static /*0xcccf9c*/ System.ValueTuple<TableData.TableData_Chest, System.Int32[]> Find(int _index);
    }

    class ContentUnlock
    {
        static /*0xccd158*/ TableData.TableData_Contentunlock Find(int _index);
        static /*0xccd1ec*/ TableData.TableData_Contentunlock Find(ContentType _type);
    }

    class Maze
    {
        class MateEquip
        {
            static /*0xd943e0*/ TableData.TableData_Mazemateequip Find(int _mategrade);
        }

        class Battle
        {
            static /*0xd941d8*/ TableData.TableData_Mazebattle Find(int _chapter, int _floor, PTShare.Define.MazeEnemies _type);
            static /*0xd942b8*/ TableData.TableData_Mazebattle Find(int _index);
        }

        class Course
        {
            static /*0xd9434c*/ System.Collections.Generic.List<TableData.TableData_Mazecourse> FindMany(int _mazeId);
        }
    }

    class CashShop
    {
        class ShopIndex
        {
            static /*0xd91144*/ System.Collections.Generic.List<string> GetPlatformProductKeyList();
            static /*0xd914f8*/ string GetProductIDToPackageKey(string key);

            class <>c
            {
                static /*0x0*/ TableManager.CashShop.ShopIndex.<> <>9;
                static /*0x8*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_0;
                static /*0x10*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_1;
                static /*0x18*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_2;
                static /*0x20*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_3;

                static /*0xd97684*/ <>c();
                /*0xd976e4*/ <>c();
                /*0xd976ec*/ string <GetPlatformProductKeyList>b__0_0(TableData.TableData_Cashshopindex x);
                /*0xd97704*/ string <GetPlatformProductKeyList>b__0_1(TableData.TableData_Cashshopindex x);
                /*0xd9771c*/ string <GetPlatformProductKeyList>b__0_2(TableData.TableData_Cashshopindex x);
                /*0xd97734*/ string <GetPlatformProductKeyList>b__0_3(TableData.TableData_Cashshopindex x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ string key;

                /*0xd917d0*/ <>c__DisplayClass1_0();
                /*0xd9774c*/ bool <GetProductIDToPackageKey>b__0(TableData.TableData_Cashshopindex x);
                /*0xd97778*/ bool <GetProductIDToPackageKey>b__1(TableData.TableData_Cashshopindex x);
                /*0xd977a4*/ bool <GetProductIDToPackageKey>b__2(TableData.TableData_Cashshopindex x);
                /*0xd977d0*/ bool <GetProductIDToPackageKey>b__3(TableData.TableData_Cashshopindex x);
            }
        }

        class Daily
        {
            static /*0xd90dc0*/ System.Collections.Generic.List<TableData.TableData_Cashshopdaily> FindAll();
        }

        class Weekly
        {
            static /*0xd91908*/ System.Collections.Generic.List<TableData.TableData_Cashshopweekly> FindAll();
        }

        class Monthly
        {
            static /*0xd90f84*/ System.Collections.Generic.List<TableData.TableData_Cashshopmonthly> FindAll();
        }

        class Star
        {
            static /*0xd91870*/ System.Collections.Generic.List<TableData.TableData_Cashshopstar> FindAll();
        }

        class Limit
        {
            static /*0xd90f38*/ System.Collections.Generic.List<TableData.TableData_Cashshoplimit> FindAll();
        }

        class Subscription
        {
            static /*0xd918bc*/ System.Collections.Generic.List<TableData.TableData_Cashshopsubscription> FindAll();
        }

        class Hero
        {
            static /*0xd90e0c*/ System.Collections.Generic.List<TableData.TableData_Cashshophero> FindAll();
        }

        class Beginner
        {
            static /*0xd90d74*/ System.Collections.Generic.List<TableData.TableData_Cashshopbeginner> FindAll();
        }

        class Skein
        {
            static /*0xd917d8*/ System.Collections.Generic.List<TableData.TableData_Cashshopskinpiece> FindAll();
        }

        class Skin
        {
            static /*0xd91824*/ System.Collections.Generic.List<TableData.TableData_Cashshopskin> FindAll();
        }

        class Quest
        {
            static /*0xd910f8*/ System.Collections.Generic.List<TableData.TableData_Cashshopquest> FindAll();

            class Reward
            {
                static /*0xd9755c*/ TableData.TableData_Cashshopquestreward Find(int index);
                static /*0xd975f0*/ System.Collections.Generic.List<TableData.TableData_Cashshopquestreward> FindMany(string packageId);
            }
        }

        class Instant
        {
            static /*0xd90e58*/ System.Collections.Generic.List<TableData.TableData_Cashshopinstant> FindAll();
            static /*0xd90ea4*/ TableData.TableData_Cashshopinstant Find(int index);
        }

        class PackageTime
        {
            static /*0xd91064*/ System.Collections.Generic.List<TableData.TableData_Packagetime> FindMany(string timeKey);
        }

        class PackageProductGroup
        {
            static /*0xd90fd0*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> FindMany(string packageId);
        }
    }

    class ContentShop
    {
        static /*0xccd10c*/ System.Collections.Generic.List<TableData.TableData_Contentshop> FindAll();

        class Arrangement
        {
            static /*0xd919c8*/ TableData.TableData_Contentshoparrangement Find(int _index, int _subidx);
        }
    }

    class IdleUnitTipDialog
    {
        static /*0xccde34*/ TableData.TableData_Idleunittipdialog Find(int _nUnitID);
    }

    class MenuSetting
    {
        static /*0xcce084*/ TableData.TableData_Menusettingbase Find(TopMenuType _type);
    }

    class TriggerData
    {
        static /*0xccf248*/ System.Collections.Generic.List<TableData.TableData_Triggerdata> FindAll();
    }

    class Event
    {
        static /*0xccda18*/ System.Collections.Generic.List<TableData.TableData_Event> FindAll();

        class Attendance
        {
            static /*0xd92274*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> FindAll();
        }

        class Pass
        {
            static /*0xd92960*/ System.Collections.Generic.List<TableData.TableData_Eventpass> FindAll();
            static /*0xd929ac*/ int FindEventIDByPointName(string resetpointtype);
            static /*0xd92a54*/ int FindEventIDByEventName(string eventname);

            class Reward
            {
                static /*0xd979f4*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> FindAll();
            }
        }

        class CurrencyLocal
        {
            static /*0xd92550*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> FindAll();
            static /*0xd9259c*/ TableData.TableData_Eventcurrencylocal Find(int index);
        }

        class EventMission
        {
            static /*0xd92758*/ System.Collections.Generic.List<TableData.TableData_Eventmission> FindAll();

            class Point
            {
                static /*0xd97960*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> Find(int _missionId);
            }
        }

        class EventPage
        {
            static /*0xd927a4*/ System.Collections.Generic.List<TableData.TableData_Eventpage> FindMany(int _eventPageID);
        }

        class EventPreset
        {
            static /*0xd92838*/ TableData.TableData_Eventpreset Find(int index);
        }

        class EventExchange
        {
            static /*0xd926c4*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> FindMany(int _typeEventID);
        }

        class EventBuyInApp
        {
            static /*0xd92630*/ TableData.TableData_Eventbuyinapp Find(int _typeEventID);
        }

        class HotTime
        {
            static /*0xd928cc*/ TableData.TableData_Eventhottime Find(int _hotTimeID);
        }

        class Bonus
        {
            static /*0xd922c0*/ System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>> FindMany(string trigger);
        }

        class Quest
        {
            static /*0xd92afc*/ System.Collections.Generic.List<TableData.TableData_Eventquest> FindMany(int eventQuestId);
        }

        class QuestGroup
        {
            static /*0xd92b90*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> FindMany(string eventQuestGroup);
            static /*0xd92c24*/ TableData.TableData_Eventquestgroup Find(int index);
        }

        class Roulette
        {
            static /*0xd92cb8*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> FindMany(int eventId);
        }

        class Boss
        {
            static /*0xd92394*/ TableData.TableData_Eventboss Find(int eventBossId);
            static /*0xd92428*/ TableData.TableData_Eventboss FindIndex(int index);

            class Reward
            {
                static /*0xd97838*/ System.Collections.Generic.List<TableData.TableData_Eventbossreward> FindMany(int eventBossRewardId);
            }
        }

        class Complete
        {
            static /*0xd924bc*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> FindMany(int eventCompleteID);

            class Mission
            {
                static /*0xd978cc*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> FindMany(int eventcompleteMissionID);
            }
        }
    }

    class Config
    {
        static /*0xccc0f0*/ string Find(string name);
        static /*0xccd064*/ int FindInt(string name);
        static /*0xccbe10*/ System.Collections.Generic.List<int> FindIntArray(string name);

        class <>c
        {
            static /*0x0*/ TableManager.Config.<> <>9;
            static /*0x8*/ System.Func<string, int> <>9__2_0;

            static /*0xd91954*/ <>c();
            /*0xd919b4*/ <>c();
            /*0xd919bc*/ int <FindIntArray>b__2_0(string s);
        }
    }

    class Profile
    {
        static /*0xcce118*/ System.Collections.Generic.List<TableData.TableData_Profileskin> FindAll();
        static /*0xcce164*/ System.Collections.Generic.List<TableData.TableData_Profileskin> FindSelectAll(ProfileSkinType type);
        static /*0xcce280*/ TableData.TableData_Profileskin Find(ProfileSkinType type, int id);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ ProfileSkinType type;

            /*0xd948a4*/ <>c__DisplayClass1_0();
            /*0xd948ac*/ bool <FindSelectAll>b__0(TableData.TableData_Profileskin x);
        }

        class <>c__DisplayClass2_0
        {
            /*0x10*/ int id;

            /*0xd9496c*/ <>c__DisplayClass2_0();
            /*0xd94974*/ bool <Find>b__0(TableData.TableData_Profileskin x);
        }
    }

    class Emoticon
    {
        static /*0xccd3ac*/ System.Collections.Generic.List<TableData.TableData_Emoticon> FindAll();
        static /*0xccd3f8*/ TableData.TableData_Emoticon Find(string val);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ string val;

            /*0xd92004*/ <>c__DisplayClass1_0();
            /*0xd9200c*/ bool <Find>b__0(TableData.TableData_Emoticon x);
        }
    }

    class WorldArena
    {
        static /*0xccf3c0*/ System.Collections.Generic.List<TableData.TableData_Worldarenachampreward> CampRewardAll();
        static /*0xccf40c*/ int TierCount();
        static /*0xccf478*/ TableData.TableData_Worldarenatier2 GetTier(int nTier);
        static /*0xccf50c*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> TrainingAll();
        static /*0xccf558*/ TableData.TableData_Trainingroom GetTraining(Battle.CharacterStat.StatType type);
        static /*0xccf674*/ int GetTrainingIndex(Battle.CharacterStat.StatType type);
        static /*0xccf790*/ TableData.TableData_Trainingroom GetTraining(PTShare.Define.Currency type);
        static /*0xccf8ac*/ int GetTrainingIndex(PTShare.Define.Currency type);
        static /*0xccf9c8*/ string GetConfig(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfae0*/ int GetConfigInt(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfb18*/ float GetConfigFloat(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfb54*/ System.Collections.Generic.List<Rewards> GetConfigRewards(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfbd0*/ System.DateTime GetConfigDateTime(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfc84*/ System.Collections.Generic.List<Rewards> GetTrainingReward(int groupIndex, int indivIndex);
        static /*0xccfecc*/ System.Collections.Generic.List<Rewards> GetTierBattleWinReward(int nTier);
        static /*0xccff50*/ System.Collections.Generic.List<Rewards> GetTierRaiseReward(int nTier);
        static /*0xccffd4*/ System.Collections.Generic.List<Rewards> GetTierDailyReward(int nTier);
        static /*0xcd0058*/ System.Collections.Generic.List<Rewards> GetTierSeasonReward(int nTier);
        static /*0xcd00dc*/ System.ValueTuple<bool, int, Rewards> GetTierReward(int nTier);

        enum WorldArenaConfigKey
        {
            WorldArenaListResetCost = 0,
            WorldArenaFreeListResetCD = 1,
            WorldArenaUnitHideTier = 2,
            WorldArenaMatchingRangeN = 3,
            DailyFreeTicket = 4,
            WorldArenaEntryItem = 5,
            TrainingRoationMax = 6,
            WorldArenaSeasonStart = 7,
            WorldArenaSeasonRotation = 8,
            SeasonReward = 9,
            SeasonRankRewardCount = 10,
            SeasonRankReward = 11,
            AttackerWinF1 = 12,
            AttackerWinF2 = 13,
            AttackerWinRange = 14,
            AttackerLoseF1 = 15,
            AttackerLoseF2 = 16,
            AttackerLoseRange = 17,
            DefenderWinF1 = 18,
            DefenderWinF2 = 19,
            DefenderWinRange = 20,
            DefenderLoseF1 = 21,
            DefenderLoseF2 = 22,
            DefenderLoseRange = 23,
            DailyBreakTime = 24,
            WorldArenaTicketPrice = 25,
            WorldArenaUnitHideCount = 26,
            RankApplyTier = 27,
        }

        class Training
        {
            static /*0xd973e8*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> FindAll();
        }

        class <>c__DisplayClass5_0
        {
            /*0x10*/ Battle.CharacterStat.StatType type;

            /*0xd97108*/ <>c__DisplayClass5_0();
            /*0xd97110*/ bool <GetTraining>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass6_0
        {
            /*0x10*/ Battle.CharacterStat.StatType type;

            /*0xd971c0*/ <>c__DisplayClass6_0();
            /*0xd971c8*/ bool <GetTrainingIndex>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass7_0
        {
            /*0x10*/ PTShare.Define.Currency type;

            /*0xd97278*/ <>c__DisplayClass7_0();
            /*0xd97280*/ bool <GetTraining>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass8_0
        {
            /*0x10*/ PTShare.Define.Currency type;

            /*0xd97330*/ <>c__DisplayClass8_0();
            /*0xd97338*/ bool <GetTrainingIndex>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass14_0
        {
            /*0x10*/ int groupIndex;

            /*0xd970a0*/ <>c__DisplayClass14_0();
            /*0xd970a8*/ Rewards <GetTrainingReward>b__0(Rewards x);
        }
    }

    class Guild
    {
        static /*0xccdb44*/ TableData.TableData_Guild GuildConfig();

        class GuildLevel
        {
            static /*0xd93154*/ TableData.TableData_Guildlevel Find(int lv);
        }

        class GuildBoss
        {
            static /*0xd93074*/ System.Collections.Generic.List<TableData.TableData_Guildboss> FindAll();
        }

        class GuildHuntingReward
        {
            static /*0xd930c0*/ System.Collections.Generic.List<TableData.TableData_Guildhuntingreward> FindMany(int rewardID);
        }

        class GuildWar
        {
            static /*0xd9327c*/ string GetConfig(TableManager.Guild.GuildWar.GuildWarConfigType eType);
            static /*0xd93360*/ int GetConfigInteger(TableManager.Guild.GuildWar.GuildWarConfigType eType);
            static /*0xd93398*/ System.Collections.Generic.List<TableData.TableData_Guildwarorganize> FindGuildWarOrganize(PTShare.Define.GuildWarPosition position);
            static /*0xd9342c*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> FindGuildRanks(int season);
            static /*0xd934f0*/ TableData.TableData_Guildwarrankreward FindGuildRankRewards(string groupid);

            enum GuildWarConfigType
            {
                SeasonStartPoint = 0,
                DailyFreeTicketMember = 1,
                DailyFreeTicketAttackCaptain = 2,
                SearchAPtRange = 3,
                AddSearchAPtRange = 4,
                AddSearchAPtRangeMax = 5,
                ArenaCalculationTime = 6,
                ArenaPreCalculationTime = 7,
                ArenaEntryItemPrice = 8,
                GuildArenaReset = 9,
                GuildArenaPickCharLevel = 10,
                GuildMastercorrection = 11,
                AttackerCpataincorrection = 12,
                DefenderCaptaincorrection = 13,
                ViceGuildMastercorrection = 14,
                Generalcorrection = 15,
                GuildMembercorrection = 16,
                ParticipationBonus = 17,
                DailyFreeTicketDefenceCaptain = 18,
            }
        }

        class GuildTactic
        {
            static /*0xd931e8*/ TableData.TableData_Guildwartactic Find(int _nFormationID);
        }
    }

    class VIP
    {
        static /*0xccf2e0*/ System.Collections.Generic.List<TableData.TableData_Vip> FindAll();
        static /*0xccf32c*/ TableData.TableData_Vip Find(int level);
    }

    class Bounty
    {
        class BountyLevel
        {
            static /*0xd90aa0*/ TableData.TableData_Bountylv Find(int lv);
        }

        class BountyQuest
        {
            static /*0xd90b34*/ TableData.TableData_Bountyquest Find(int index);
            static /*0xd90bc8*/ System.Collections.Generic.List<TableData.TableData_Bountyquest> FindAll();
        }
    }

    class HeroRevert
    {
        static /*0xccdb90*/ System.Collections.Generic.List<TableData.TableData_Revert> FindAll();
        static /*0xccdbdc*/ TableData.TableData_Revert Find(HEROGRADE eType);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ HEROGRADE eType;

            /*0xd93584*/ <>c__DisplayClass1_0();
            /*0xd9358c*/ bool <Find>b__0(TableData.TableData_Revert x);
        }
    }

    class Dungeon
    {
        static /*0xccd280*/ TableData.TableData_Dungeon Find(int dungeonId);
        static /*0xccd314*/ System.Collections.Generic.List<TableData.TableData_Dungeon> FindAll();
        static /*0xccd360*/ TableData.TableData_Dungeonsetting Config();

        class DungeonGroup
        {
            static /*0xd91bfc*/ System.Collections.Generic.List<TableData.TableData_Dungeongroup> FindMany(int dungeonId);
            static /*0xd91c90*/ TableData.TableData_Dungeongroup FindWithDungeonIDDungeonLV(int _nDungeonID, int _nDungeonLV);

            class <>c__DisplayClass1_0
            {
                /*0x10*/ int _nDungeonID;
                /*0x14*/ int _nDungeonLV;

                /*0xd91dac*/ <>c__DisplayClass1_0();
                /*0xd977fc*/ bool <FindWithDungeonIDDungeonLV>b__0(TableData.TableData_Dungeongroup x);
            }
        }

        class DungeonMap
        {
            static /*0xd91db4*/ System.Collections.Generic.List<TableData.TableData_Dungeonmap> FindMany(int dungeonId);
        }

        class DungeonTile
        {
            static /*0xd91f70*/ TableData.TableData_Dungeontile Find(int index);
        }

        class DungeonMateEquip
        {
            static /*0xd91e48*/ TableData.TableData_Dungeonmateequip Find(int grade);
        }

        class DungeonDialog
        {
            static /*0xd91a88*/ System.Collections.Generic.List<TableData.TableData_Dungeondialog> FindMany(int dungeonId);
            static /*0xd91b1c*/ System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection> FindManyDirection(int dungeonId);
            static /*0xd91bb0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeondialog>> FindAll();
        }

        class DungeonReward
        {
            static /*0xd91edc*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> FindMany(int dungeonId);
        }
    }

    class Race
    {
        static /*0xcce714*/ System.Collections.Generic.List<TableData.TableData_Racetile> TileAll();
        static /*0xcce760*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> AccelAll();
        static /*0xcce7ac*/ System.Collections.Generic.List<TableData.TableData_Racereward> RewardAll();
        static /*0xcce7f8*/ TableData.TableData_Racetile FindTile(RaceTileType eType);

        class <>c__DisplayClass3_0
        {
            /*0x10*/ RaceTileType eType;

            /*0xd95658*/ <>c__DisplayClass3_0();
            /*0xd95660*/ bool <FindTile>b__0(TableData.TableData_Racetile x);
        }
    }

    class Run
    {
        static /*0xccea54*/ TableData.TableData_Runlife FindLife(int _nUnitID);
        static /*0xcceae8*/ TableData.TableData_Runreward FindReward(int _nUserLV);
    }

    class Relation
    {
        static /*0xcce900*/ System.Collections.Generic.List<TableData.TableData_Relation> FindAll();
        static /*0xcce94c*/ TableData.TableData_Relation Find(int nIndex);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ int nIndex;

            /*0xd95700*/ <>c__DisplayClass1_0();
            /*0xd95708*/ bool <Find>b__0(TableData.TableData_Relation x);
        }
    }

    class WorldBoss
    {
        class Step
        {
            static /*0xd974c8*/ TableData.TableData_Worldbossstep Find(int stepId);
        }

        class Mission
        {
            static /*0xd97434*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> FindMany(int bossId);
        }
    }

    class PVE_Ranking
    {
        class Noblity
        {
            static /*0xd947c4*/ TableData.TableData_Pvenoblity Find(int idx);
            static /*0xd94858*/ System.Collections.Generic.List<TableData.TableData_Pvenoblity> FindAll();
        }

        class Challenge
        {
            static /*0xd94474*/ int FindMaxChallengeLv(int challengeId);
            static /*0xd94510*/ TableData.TableData_Pvechallenge Find(int challengeId, int challengeLv);
            static /*0xd94650*/ System.Collections.Generic.List<TableData.TableData_Pvechallenge> FindAll(int challengeId);

            class <>c__DisplayClass1_0
            {
                /*0x10*/ int challengeLv;

                /*0xd94648*/ <>c__DisplayClass1_0();
                /*0xd97c00*/ bool <Find>b__0(TableData.TableData_Pvechallenge data);
            }
        }

        class ClearReward
        {
            static /*0xd946e4*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> FindAll();
            static /*0xd94730*/ TableData.TableData_Pveclearreward Find(int clearCount);
        }
    }

    class Housing
    {
        static /*0xccdcf8*/ string Find(string name);

        class Floor
        {
            static /*0xd93c5c*/ TableData.TableData_Housingfloor Find(int floor);
            static /*0xd93cf0*/ int MaxFloor();
        }

        class Gacha
        {
            static /*0xd94070*/ System.Collections.Generic.List<TableData.TableData_Housinggacha> FindGachaMany(int groupId);
            static /*0xd94104*/ System.Collections.Generic.List<int> Keys();
            static /*0xd9418c*/ int MaxGroup();
        }

        class Effect
        {
            static /*0xd936b8*/ TableData.TableData_Furniturecontentseffect FindContentEffect(int contentsEffectId);
            static /*0xd9374c*/ TableData.TableData_Furnitureheroeffect FindHeroEffect(int id);
            static /*0xd937e0*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> FindEffectTypeAll();
            static /*0xd9382c*/ TableData.TableData_Furnitureeffecttype FindEffectType(string type);
            static /*0xd938c0*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> FindLevelTypeMany_EffectType(string effectType);
            static /*0xd93954*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> FindLevelTypeMany_LevelupType(string levelupType);
            static /*0xd939e8*/ TableData.TableData_Furnitureleveltypelist FindLevelType(string leveluptype, int level);
            static /*0xd93b3c*/ TableData.TableData_Furnitureleveltypelist FindLevelType(int heroEffectID);

            class <>c__DisplayClass6_0
            {
                /*0x10*/ int level;

                /*0xd93b34*/ <>c__DisplayClass6_0();
                /*0xd97a40*/ bool <FindLevelType>b__0(TableData.TableData_Furnitureleveltypelist x);
            }

            class <>c__DisplayClass7_0
            {
                /*0x10*/ int heroEffectID;

                /*0xd93c54*/ <>c__DisplayClass7_0();
                /*0xd97a68*/ bool <FindLevelType>b__0(TableData.TableData_Furnitureleveltypelist x);
            }
        }

        class Furniture
        {
            static /*0xd93d3c*/ System.Collections.Generic.List<TableData.TableData_Furnitureset> FindSetAll();
            static /*0xd93d88*/ TableData.TableData_Furniture Find(int index);
            static /*0xd93e1c*/ System.Collections.Generic.List<TableData.TableData_Furniture> FindAll();
            static /*0xd93e68*/ System.Collections.Generic.List<TableData.TableData_Furnitureshop> FindShopAll();
            static /*0xd93eb4*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> FindShopListMany(int groupId);
            static /*0xd93f48*/ TableData.TableData_Furnitureshoplist FindShop(int index);
            static /*0xd93fdc*/ TableData.TableData_Housingfloorpattern FindPattern(string patternId);

            class LevelUp
            {
                static /*0xd97a8c*/ System.Collections.Generic.List<TableData.TableData_Furniturelevelup> FindAll();
                static /*0xd97ad8*/ TableData.TableData_Furniturelevelup Find(int level);
                static /*0xd97b6c*/ TableData.TableData_Furnitureexp FindExp(string grade);
            }
        }

        class Dismiss
        {
            static /*0xd9366c*/ System.Collections.Generic.List<TableData.TableData_Housingdismiss> FindAll();
        }
    }

    class Ability
    {
        class AbilityPercent
        {
            static /*0xd907ac*/ TableData.TableData_Abilitypercent Find(int index);
            static /*0xd90840*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> FindMany();
        }

        class AbilityOptionValue
        {
            static /*0xd90684*/ TableData.TableData_Abilityoptionvalue Find(int index);
            static /*0xd90718*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> FindMany(string optionId);
        }

        class AbilityReset
        {
            static /*0xd9088c*/ TableData.TableData_Abilityreset Find(string grade);
        }
    }

    class Ads
    {
        static /*0xccbdcc*/ System.Collections.Generic.List<int> GetLimit();
        static /*0xccc000*/ System.Collections.Generic.List<Rewards> GetRewards(TableManager.Ads.AdsRewardType eType);
        static /*0xccc198*/ PTShare.Define.SProperty GetProperty(TableManager.Ads.AdsRewardType eType);

        enum AdsRewardType
        {
            ADReward1 = 1,
            ADReward2 = 2,
            ADReward3 = 3,
            ADReward4 = 4,
            ADRewardFinal = 5,
        }
    }

    class <>c__DisplayClass255_0
    {
        /*0x10*/ TableData.TableGroup table;

        /*0xccbc7c*/ <>c__DisplayClass255_0();
        /*0xccbc84*/ int <Init>b__299(TableData.TableData_Unitbase v);
    }

    class <>c__DisplayClass255_1
    {
        /*0x10*/ TableData.TableData_Unitbase v;

        /*0xccbd94*/ <>c__DisplayClass255_1();
        /*0xccbd9c*/ bool <Init>b__486(TableData.TableData_Unitgradelv f);
    }

    class <>c
    {
        static /*0x0*/ TableManager.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Arenaconfig, string> <>9__255_0;
        static /*0x10*/ System.Func<TableData.TableData_Arenaconfig, string> <>9__255_1;
        static /*0x18*/ System.Func<TableData.TableData_Buff, int> <>9__255_2;
        static /*0x20*/ System.Func<TableData.TableData_Buff, TableData.TableData_Buff> <>9__255_3;
        static /*0x28*/ System.Func<TableData.TableData_Buff, int> <>9__255_4;
        static /*0x30*/ System.Func<TableData.TableData_Buff, Battle.BuffEffectType> <>9__255_5;
        static /*0x38*/ System.Func<TableData.TableData_Buff, int> <>9__255_6;
        static /*0x40*/ System.Func<TableData.TableData_Buff, Battle.BuffEffectType> <>9__255_7;
        static /*0x48*/ System.Func<TableData.TableData_Buff, int> <>9__255_8;
        static /*0x50*/ System.Func<TableData.TableData_Buff, Battle.BuffEffectType> <>9__255_9;
        static /*0x58*/ System.Func<TableData.TableData_Buff, int> <>9__255_10;
        static /*0x60*/ System.Func<TableData.TableData_Buff, Battle.BuffOriginType> <>9__255_11;
        static /*0x68*/ System.Func<TableData.TableData_Buff, int> <>9__255_12;
        static /*0x70*/ System.Func<TableData.TableData_Buff, Battle.BuffType> <>9__255_13;
        static /*0x78*/ System.Func<TableData.TableData_Buff, int> <>9__255_14;
        static /*0x80*/ System.Func<TableData.TableData_Buff, Battle.ShieldType> <>9__255_15;
        static /*0x88*/ System.Func<TableData.TableData_Buff, int> <>9__255_16;
        static /*0x90*/ System.Func<TableData.TableData_Buff, Battle.CharacterStat.StatType> <>9__255_17;
        static /*0x98*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_18;
        static /*0xa0*/ System.Func<TableData.TableData_Skillbase, TableData.TableData_Skillbase> <>9__255_19;
        static /*0xa8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_20;
        static /*0xb0*/ System.Func<TableData.TableData_Skillbase, Battle.SkillType> <>9__255_21;
        static /*0xb8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_22;
        static /*0xc0*/ System.Func<TableData.TableData_Skillbase, Battle.ActiveType> <>9__255_23;
        static /*0xc8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_24;
        static /*0xd0*/ System.Func<TableData.TableData_Skillbase, Battle.ColliderType> <>9__255_25;
        static /*0xd8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_26;
        static /*0xe0*/ System.Func<TableData.TableData_Skillbase, Battle.ColliderType> <>9__255_27;
        static /*0xe8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_28;
        static /*0xf0*/ System.Func<TableData.TableData_Skillbase, Battle.AttackType> <>9__255_29;
        static /*0xf8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_30;
        static /*0x100*/ System.Func<TableData.TableData_Skillbase, Battle.PassiveConditionType> <>9__255_31;
        static /*0x108*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_32;
        static /*0x110*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_33;
        static /*0x118*/ System.Func<TableData.TableData_Skillbase, bool> <>9__255_457;
        static /*0x120*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_34;
        static /*0x128*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_35;
        static /*0x130*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_36;
        static /*0x138*/ System.Func<TableData.TableData_Skillbase, bool> <>9__255_458;
        static /*0x140*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_37;
        static /*0x148*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_38;
        static /*0x150*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_39;
        static /*0x158*/ System.Func<TableData.TableData_Skillbase, bool> <>9__255_459;
        static /*0x160*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_40;
        static /*0x168*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_41;
        static /*0x170*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_42;
        static /*0x178*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_43;
        static /*0x180*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_44;
        static /*0x188*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_45;
        static /*0x190*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_460;
        static /*0x198*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_461;
        static /*0x1a0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_462;
        static /*0x1a8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>>> <>9__255_46;
        static /*0x1b0*/ System.Func<TableData.TableData_Skillfx, int> <>9__255_47;
        static /*0x1b8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillfx>, int> <>9__255_48;
        static /*0x1c0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillfx>, System.Collections.Generic.List<TableData.TableData_Skillfx>> <>9__255_49;
        static /*0x1c8*/ System.Func<TableData.TableData_Skillfx, System.ValueTuple<int, int>> <>9__255_50;
        static /*0x1d0*/ System.Func<TableData.TableData_Skillfx, TableData.TableData_Skillfx> <>9__255_51;
        static /*0x1d8*/ System.Func<TableData.TableData_Skillfx, System.ValueTuple<int, int>> <>9__255_52;
        static /*0x1e0*/ System.Func<TableData.TableData_Skillfx, Battle.SkillEnumGroup> <>9__255_53;
        static /*0x1e8*/ System.Comparison<TableData.TableData_Skillfx> <>9__255_54;
        static /*0x1f0*/ System.Func<TableData.TableData_Skillextra, Battle.SkillExtraID> <>9__255_55;
        static /*0x1f8*/ System.Func<TableData.TableData_Skillextra, TableData.TableData_Skillextra> <>9__255_56;
        static /*0x200*/ System.Func<TableData.TableData_Skilllv, int> <>9__255_57;
        static /*0x208*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skilllv>, int> <>9__255_58;
        static /*0x210*/ System.Func<TableData.TableData_Skilllv, int> <>9__255_463;
        static /*0x218*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_464;
        static /*0x220*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skilllv>, System.Collections.Generic.Dictionary<int, TableData.TableData_Skilllv>> <>9__255_59;
        static /*0x228*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_465;
        static /*0x230*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_466;
        static /*0x238*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_467;
        static /*0x240*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_468;
        static /*0x248*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_469;
        static /*0x250*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_470;
        static /*0x258*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_471;
        static /*0x260*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_472;
        static /*0x268*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_473;
        static /*0x270*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_474;
        static /*0x278*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_475;
        static /*0x280*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_476;
        static /*0x288*/ System.Func<TableData.TableData_Skilldesc, System.ValueTuple<int, int>> <>9__255_60;
        static /*0x290*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc>, System.ValueTuple<int, int>> <>9__255_61;
        static /*0x298*/ System.Func<TableData.TableData_Skilldesc, int> <>9__255_477;
        static /*0x2a0*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc>, System.Collections.Generic.List<TableData.TableData_Skilldesc>> <>9__255_62;
        static /*0x2a8*/ System.Func<TableData.TableData_Enhanceequip, int> <>9__255_63;
        static /*0x2b0*/ System.Func<TableData.TableData_Enhanceequip, TableData.TableData_Enhanceequip> <>9__255_64;
        static /*0x2b8*/ System.Func<TableData.TableData_Equipment, int> <>9__255_65;
        static /*0x2c0*/ System.Func<TableData.TableData_Equipment, TableData.TableData_Equipment> <>9__255_66;
        static /*0x2c8*/ System.Func<TableData.TableData_Equipment, bool> <>9__255_67;
        static /*0x2d0*/ System.Func<TableData.TableData_Equipment, System.ValueTuple<string, int>> <>9__255_68;
        static /*0x2d8*/ System.Func<TableData.TableData_Equipment, TableData.TableData_Equipment> <>9__255_69;
        static /*0x2e0*/ System.Func<TableData.TableData_Equipment, System.ValueTuple<PTShare.Define.EquipParts, int, string>> <>9__255_70;
        static /*0x2e8*/ System.Func<TableData.TableData_Equipment, TableData.TableData_Equipment> <>9__255_71;
        static /*0x2f0*/ System.Func<TableData.TableData_Equipment, string> <>9__255_72;
        static /*0x2f8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Equipment>, string> <>9__255_73;
        static /*0x300*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Equipment>, System.Collections.Generic.List<TableData.TableData_Equipment>> <>9__255_74;
        static /*0x308*/ System.Func<TableData.TableData_Equipment, int> <>9__255_75;
        static /*0x310*/ System.Func<TableData.TableData_Equipment, int> <>9__255_76;
        static /*0x318*/ System.Func<TableData.TableData_Advanceequip, int> <>9__255_77;
        static /*0x320*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, int> <>9__255_78;
        static /*0x328*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, System.Collections.Generic.List<TableData.TableData_Advanceequip>> <>9__255_79;
        static /*0x330*/ System.Func<TableData.TableData_Advanceequip, int> <>9__255_80;
        static /*0x338*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, int> <>9__255_81;
        static /*0x340*/ System.Func<TableData.TableData_Advanceequip, int> <>9__255_478;
        static /*0x348*/ System.Func<TableData.TableData_Advanceequip, string> <>9__255_479;
        static /*0x350*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, System.Collections.Generic.Dictionary<int, string>> <>9__255_82;
        static /*0x358*/ System.Predicate<TableData.TableData_Unitbase> <>9__255_83;
        static /*0x360*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_84;
        static /*0x368*/ System.Func<TableData.TableData_Unitbase, TableData.TableData_Unitbase> <>9__255_85;
        static /*0x370*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_86;
        static /*0x378*/ System.Func<TableData.TableData_Unitbase, Battle.ColliderType> <>9__255_87;
        static /*0x380*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_88;
        static /*0x388*/ System.Func<TableData.TableData_Unitbase, Battle.AttackType> <>9__255_89;
        static /*0x390*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_90;
        static /*0x398*/ System.Func<TableData.TableData_Unitbase, UnitClassType> <>9__255_91;
        static /*0x3a0*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_92;
        static /*0x3a8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, int> <>9__255_93;
        static /*0x3b0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, System.Collections.Generic.List<TableData.TableData_Unitbase>> <>9__255_94;
        static /*0x3b8*/ System.Func<TableData.TableData_Unitbase, bool> <>9__255_95;
        static /*0x3c0*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_96;
        static /*0x3c8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, int> <>9__255_97;
        static /*0x3d0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, System.Collections.Generic.List<TableData.TableData_Unitbase>> <>9__255_98;
        static /*0x3d8*/ System.Func<TableData.TableData_Unitgrade, int> <>9__255_99;
        static /*0x3e0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, int> <>9__255_100;
        static /*0x3e8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, System.Collections.Generic.List<TableData.TableData_Unitgrade>> <>9__255_101;
        static /*0x3f0*/ System.Func<TableData.TableData_Unitgrade, int> <>9__255_102;
        static /*0x3f8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, int> <>9__255_103;
        static /*0x400*/ System.Func<TableData.TableData_Unitgrade, int> <>9__255_480;
        static /*0x408*/ System.Func<TableData.TableData_Unitgrade, TableData.TableData_Unitgrade> <>9__255_481;
        static /*0x410*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgrade>> <>9__255_104;
        static /*0x418*/ System.Func<TableData.TableData_Unitgradelv, int> <>9__255_105;
        static /*0x420*/ System.Func<TableData.TableData_Unitgradelv, TableData.TableData_Unitgradelv> <>9__255_106;
        static /*0x428*/ System.Func<TableData.TableData_Unitlv, int> <>9__255_107;
        static /*0x430*/ System.Func<TableData.TableData_Unitlv, TableData.TableData_Unitlv> <>9__255_108;
        static /*0x438*/ System.Func<TableData.TableData_Unittier, int> <>9__255_109;
        static /*0x440*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unittier>, int> <>9__255_110;
        static /*0x448*/ System.Func<TableData.TableData_Unittier, int> <>9__255_482;
        static /*0x450*/ System.Func<TableData.TableData_Unittier, TableData.TableData_Unittier> <>9__255_483;
        static /*0x458*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unittier>, System.Collections.Generic.Dictionary<int, TableData.TableData_Unittier>> <>9__255_111;
        static /*0x460*/ System.Func<TableData.TableData_Unittierlv, int> <>9__255_112;
        static /*0x468*/ System.Func<TableData.TableData_Unittierlv, TableData.TableData_Unittierlv> <>9__255_113;
        static /*0x470*/ System.Predicate<TableData.TableData_Skinbasic> <>9__255_114;
        static /*0x478*/ System.Func<TableData.TableData_Voice, System.ValueTuple<int, string>> <>9__255_115;
        static /*0x480*/ System.Func<TableData.TableData_Voice, TableData.TableData_Voice> <>9__255_116;
        static /*0x488*/ System.Func<TableData.TableData_Artifact, System.ValueTuple<int, int>> <>9__255_117;
        static /*0x490*/ System.Func<TableData.TableData_Artifact, TableData.TableData_Artifact> <>9__255_118;
        static /*0x498*/ System.Func<TableData.TableData_Artifact, System.ValueTuple<int, int>> <>9__255_119;
        static /*0x4a0*/ System.Func<TableData.TableData_Artifact, TableData.TableData_Artifact> <>9__255_120;
        static /*0x4a8*/ System.Func<TableData.TableData_Artifact, System.ValueTuple<int, int>> <>9__255_121;
        static /*0x4b0*/ System.Func<TableData.TableData_Artifact, Battle.ColliderType> <>9__255_122;
        static /*0x4b8*/ System.Func<TableData.TableData_Artifact, int> <>9__255_123;
        static /*0x4c0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Artifact>, int> <>9__255_124;
        static /*0x4c8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Artifact>, System.Collections.Generic.List<TableData.TableData_Artifact>> <>9__255_125;
        static /*0x4d0*/ System.Func<TableData.TableData_Quest, int> <>9__255_126;
        static /*0x4d8*/ System.Func<TableData.TableData_Quest, TableData.TableData_Quest> <>9__255_127;
        static /*0x4e0*/ System.Func<TableData.TableData_Quest, bool> <>9__255_128;
        static /*0x4e8*/ System.Func<TableData.TableData_Quest, int> <>9__255_129;
        static /*0x4f0*/ System.Func<TableData.TableData_Quest, bool> <>9__255_130;
        static /*0x4f8*/ System.Func<TableData.TableData_Quest, int> <>9__255_131;
        static /*0x500*/ System.Func<TableData.TableData_Quest, string> <>9__255_132;
        static /*0x508*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Quest>, QuestContentType> <>9__255_133;
        static /*0x510*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Quest>, System.Collections.Generic.List<TableData.TableData_Quest>> <>9__255_134;
        static /*0x518*/ System.Func<TableData.TableData_Quest, System.ValueTuple<QuestContentType, QuestGroupType>> <>9__255_135;
        static /*0x520*/ System.Func<System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest>, System.ValueTuple<QuestContentType, QuestGroupType>> <>9__255_136;
        static /*0x528*/ System.Func<System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest>, System.Collections.Generic.List<TableData.TableData_Quest>> <>9__255_137;
        static /*0x530*/ System.Func<TableData.TableData_Quest, string> <>9__255_138;
        static /*0x538*/ System.Func<TableData.TableData_Quest, TableData.TableData_Quest> <>9__255_139;
        static /*0x540*/ System.Func<TableData.TableData_Questgroup, string> <>9__255_140;
        static /*0x548*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Questgroup>, string> <>9__255_141;
        static /*0x550*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Questgroup>, System.Collections.Generic.List<TableData.TableData_Questgroup>> <>9__255_142;
        static /*0x558*/ System.Func<TableData.TableData_Questpropertypoint, string> <>9__255_143;
        static /*0x560*/ System.Func<TableData.TableData_Questpropertypoint, TableData.TableData_Questpropertypoint> <>9__255_144;
        static /*0x568*/ System.Func<TableData.TableData_Questchapterclear, string> <>9__255_145;
        static /*0x570*/ System.Func<TableData.TableData_Questchapterclear, TableData.TableData_Questchapterclear> <>9__255_146;
        static /*0x578*/ System.Func<TableData.TableData_Queststageclear, string> <>9__255_147;
        static /*0x580*/ System.Func<TableData.TableData_Queststageclear, TableData.TableData_Queststageclear> <>9__255_148;
        static /*0x588*/ System.Func<TableData.TableData_Questgacha, string> <>9__255_149;
        static /*0x590*/ System.Func<TableData.TableData_Questgacha, TableData.TableData_Questgacha> <>9__255_150;
        static /*0x598*/ System.Func<TableData.TableData_Queststageidle, string> <>9__255_151;
        static /*0x5a0*/ System.Func<TableData.TableData_Queststageidle, TableData.TableData_Queststageidle> <>9__255_152;
        static /*0x5a8*/ System.Func<TableData.TableData_Queststagetry, string> <>9__255_153;
        static /*0x5b0*/ System.Func<TableData.TableData_Queststagetry, TableData.TableData_Queststagetry> <>9__255_154;
        static /*0x5b8*/ System.Func<TableData.TableData_Questheroupgrade, string> <>9__255_155;
        static /*0x5c0*/ System.Func<TableData.TableData_Questheroupgrade, TableData.TableData_Questheroupgrade> <>9__255_156;
        static /*0x5c8*/ System.Func<TableData.TableData_Questequipupgrade, string> <>9__255_157;
        static /*0x5d0*/ System.Func<TableData.TableData_Questequipupgrade, TableData.TableData_Questequipupgrade> <>9__255_158;
        static /*0x5d8*/ System.Func<TableData.TableData_Questfriend, string> <>9__255_159;
        static /*0x5e0*/ System.Func<TableData.TableData_Questfriend, TableData.TableData_Questfriend> <>9__255_160;
        static /*0x5e8*/ System.Func<TableData.TableData_Questprizeboard, string> <>9__255_161;
        static /*0x5f0*/ System.Func<TableData.TableData_Questprizeboard, TableData.TableData_Questprizeboard> <>9__255_162;
        static /*0x5f8*/ System.Func<TableData.TableData_Questbuy, string> <>9__255_163;
        static /*0x600*/ System.Func<TableData.TableData_Questbuy, TableData.TableData_Questbuy> <>9__255_164;
        static /*0x608*/ System.Func<TableData.TableData_Questarena, string> <>9__255_165;
        static /*0x610*/ System.Func<TableData.TableData_Questarena, TableData.TableData_Questarena> <>9__255_166;
        static /*0x618*/ System.Func<TableData.TableData_Questheroget, string> <>9__255_167;
        static /*0x620*/ System.Func<TableData.TableData_Questheroget, TableData.TableData_Questheroget> <>9__255_168;
        static /*0x628*/ System.Func<TableData.TableData_Questlevel, string> <>9__255_169;
        static /*0x630*/ System.Func<TableData.TableData_Questlevel, TableData.TableData_Questlevel> <>9__255_170;
        static /*0x638*/ System.Func<TableData.TableData_Questgetitem, string> <>9__255_171;
        static /*0x640*/ System.Func<TableData.TableData_Questgetitem, TableData.TableData_Questgetitem> <>9__255_172;
        static /*0x648*/ System.Func<TableData.TableData_Questmove, string> <>9__255_173;
        static /*0x650*/ System.Func<TableData.TableData_Questmove, TableData.TableData_Questmove> <>9__255_174;
        static /*0x658*/ System.Func<TableData.TableData_Questlabyrinth, string> <>9__255_175;
        static /*0x660*/ System.Func<TableData.TableData_Questlabyrinth, TableData.TableData_Questlabyrinth> <>9__255_176;
        static /*0x668*/ System.Func<TableData.TableData_Questresonance, string> <>9__255_177;
        static /*0x670*/ System.Func<TableData.TableData_Questresonance, TableData.TableData_Questresonance> <>9__255_178;
        static /*0x678*/ System.Func<TableData.TableData_Questspirittowerclear, string> <>9__255_179;
        static /*0x680*/ System.Func<TableData.TableData_Questspirittowerclear, TableData.TableData_Questspirittowerclear> <>9__255_180;
        static /*0x688*/ System.Func<TableData.TableData_Gacha, int> <>9__255_181;
        static /*0x690*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gacha>, int> <>9__255_182;
        static /*0x698*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gacha>, System.Collections.Generic.List<TableData.TableData_Gacha>> <>9__255_183;
        static /*0x6a0*/ System.Func<TableData.TableData_Gacha, string> <>9__255_184;
        static /*0x6a8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Gacha>, GachaFactionType> <>9__255_185;
        static /*0x6b0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Gacha>, System.Collections.Generic.List<TableData.TableData_Gacha>> <>9__255_186;
        static /*0x6b8*/ System.Func<TableData.TableData_Gachabonus, int> <>9__255_187;
        static /*0x6c0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gachabonus>, int> <>9__255_188;
        static /*0x6c8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gachabonus>, System.Collections.Generic.List<TableData.TableData_Gachabonus>> <>9__255_189;
        static /*0x6d0*/ System.Func<TableData.TableData_Gachadroppattern, int> <>9__255_190;
        static /*0x6d8*/ System.Func<TableData.TableData_Gachadroppattern, TableData.TableData_Gachadroppattern> <>9__255_191;
        static /*0x6e0*/ System.Func<TableData.TableData_Highdroprate, int> <>9__255_192;
        static /*0x6e8*/ System.Func<TableData.TableData_Highdroprate, TableData.TableData_Highdroprate> <>9__255_193;
        static /*0x6f0*/ System.Func<TableData.TableData_Chapter, int> <>9__255_194;
        static /*0x6f8*/ System.Func<TableData.TableData_Chapter, TableData.TableData_Chapter> <>9__255_195;
        static /*0x700*/ System.Func<TableData.TableData_Hardchapter, int> <>9__255_196;
        static /*0x708*/ System.Func<TableData.TableData_Hardchapter, TableData.TableData_Hardchapter> <>9__255_197;
        static /*0x710*/ System.Func<TableData.TableData_Stage, int> <>9__255_198;
        static /*0x718*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Stage>, int> <>9__255_199;
        static /*0x720*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Stage>, System.Collections.Generic.List<TableData.TableData_Stage>> <>9__255_200;
        static /*0x728*/ System.Func<TableData.TableData_Stage, string> <>9__255_201;
        static /*0x730*/ System.Func<TableData.TableData_Stage, TableData.TableData_Stage> <>9__255_202;
        static /*0x738*/ System.Func<TableData.TableData_Stage, int> <>9__255_203;
        static /*0x740*/ System.Func<TableData.TableData_Stage, TableData.TableData_Stage> <>9__255_204;
        static /*0x748*/ System.Func<TableData.TableData_Hardstage, int> <>9__255_205;
        static /*0x750*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Hardstage>, int> <>9__255_206;
        static /*0x758*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Hardstage>, System.Collections.Generic.List<TableData.TableData_Hardstage>> <>9__255_207;
        static /*0x760*/ System.Func<TableData.TableData_Hardstage, string> <>9__255_208;
        static /*0x768*/ System.Func<TableData.TableData_Hardstage, TableData.TableData_Hardstage> <>9__255_209;
        static /*0x770*/ System.Func<TableData.TableData_Hardstage, int> <>9__255_210;
        static /*0x778*/ System.Func<TableData.TableData_Hardstage, TableData.TableData_Hardstage> <>9__255_211;
        static /*0x780*/ System.Func<TableData.TableData_Stageidle, int> <>9__255_212;
        static /*0x788*/ System.Func<TableData.TableData_Stageidle, TableData.TableData_Stageidle> <>9__255_213;
        static /*0x790*/ System.Func<TableData.TableData_Towernormal, int> <>9__255_214;
        static /*0x798*/ System.Func<TableData.TableData_Towernormal, TableData.TableData_Towerfloor> <>9__255_215;
        static /*0x7a0*/ System.Func<TableData.TableData_Towerfire, int> <>9__255_216;
        static /*0x7a8*/ System.Func<TableData.TableData_Towerfire, TableData.TableData_Towerfloor> <>9__255_217;
        static /*0x7b0*/ System.Func<TableData.TableData_Towerwind, int> <>9__255_218;
        static /*0x7b8*/ System.Func<TableData.TableData_Towerwind, TableData.TableData_Towerfloor> <>9__255_219;
        static /*0x7c0*/ System.Func<TableData.TableData_Towernatural, int> <>9__255_220;
        static /*0x7c8*/ System.Func<TableData.TableData_Towernatural, TableData.TableData_Towerfloor> <>9__255_221;
        static /*0x7d0*/ System.Func<TableData.TableData_Towerwater, int> <>9__255_222;
        static /*0x7d8*/ System.Func<TableData.TableData_Towerwater, TableData.TableData_Towerfloor> <>9__255_223;
        static /*0x7e0*/ System.Func<TableData.TableData_Towernormal, int> <>9__255_224;
        static /*0x7e8*/ System.Func<TableData.TableData_Towernormal, TableData.TableData_Towerfloor> <>9__255_225;
        static /*0x7f0*/ System.Func<TableData.TableData_Towerfire, int> <>9__255_226;
        static /*0x7f8*/ System.Func<TableData.TableData_Towerfire, TableData.TableData_Towerfloor> <>9__255_227;
        static /*0x800*/ System.Func<TableData.TableData_Towerwind, int> <>9__255_228;
        static /*0x808*/ System.Func<TableData.TableData_Towerwind, TableData.TableData_Towerfloor> <>9__255_229;
        static /*0x810*/ System.Func<TableData.TableData_Towernatural, int> <>9__255_230;
        static /*0x818*/ System.Func<TableData.TableData_Towernatural, TableData.TableData_Towerfloor> <>9__255_231;
        static /*0x820*/ System.Func<TableData.TableData_Towerwater, int> <>9__255_232;
        static /*0x828*/ System.Func<TableData.TableData_Towerwater, TableData.TableData_Towerfloor> <>9__255_233;
        static /*0x830*/ System.Func<TableData.TableData_Battlecampaign, TableData.TableData_Stagebattle> <>9__255_234;
        static /*0x838*/ System.Func<TableData.TableData_Battletower, TableData.TableData_Stagebattle> <>9__255_235;
        static /*0x840*/ System.Func<TableData.TableData_Battledungeon, TableData.TableData_Stagebattle> <>9__255_236;
        static /*0x848*/ System.Func<TableData.TableData_Battleidle, TableData.TableData_Stagebattle> <>9__255_237;
        static /*0x850*/ System.Func<TableData.TableData_Battletutorial, TableData.TableData_Stagebattle> <>9__255_238;
        static /*0x858*/ System.Func<TableData.TableData_Battleguildboss, TableData.TableData_Stagebattle> <>9__255_239;
        static /*0x860*/ System.Func<TableData.TableData_Battlehardcampaign, TableData.TableData_Stagebattle> <>9__255_240;
        static /*0x868*/ System.Func<TableData.TableData_Stagebattle, int> <>9__255_241;
        static /*0x870*/ System.Func<TableData.TableData_Stagebattle, TableData.TableData_Stagebattle> <>9__255_242;
        static /*0x878*/ System.Func<TableData.TableData_Item, int> <>9__255_243;
        static /*0x880*/ System.Func<TableData.TableData_Item, TableData.TableData_Item> <>9__255_244;
        static /*0x888*/ System.Func<TableData.TableData_Item, int> <>9__255_245;
        static /*0x890*/ System.Func<TableData.TableData_Item, string> <>9__255_246;
        static /*0x898*/ System.Func<TableData.TableData_Item, string> <>9__255_247;
        static /*0x8a0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Item>, ItemType> <>9__255_248;
        static /*0x8a8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Item>, System.Collections.Generic.List<TableData.TableData_Item>> <>9__255_249;
        static /*0x8b0*/ System.Func<TableData.TableData_Userlvexp, int> <>9__255_250;
        static /*0x8b8*/ System.Func<TableData.TableData_Userlvexp, TableData.TableData_Userlvexp> <>9__255_251;
        static /*0x8c0*/ System.Func<TableData.TableData_Fastidle, int> <>9__255_252;
        static /*0x8c8*/ System.Func<TableData.TableData_Fastidle, TableData.TableData_Fastidle> <>9__255_253;
        static /*0x8d0*/ System.Func<TableData.TableData_Arenarank, int> <>9__255_254;
        static /*0x8d8*/ System.Func<TableData.TableData_Arenarank, TableData.TableData_Arenarank> <>9__255_255;
        static /*0x8e0*/ System.Func<TableData.TableData_Chest, int> <>9__255_256;
        static /*0x8e8*/ System.Func<TableData.TableData_Chest, System.ValueTuple<TableData.TableData_Chest, System.Int32[]>> <>9__255_257;
        static /*0x8f0*/ System.Func<TableData.TableData_Contenthelp, ContentType> <>9__255_258;
        static /*0x8f8*/ System.Func<TableData.TableData_Contenthelp, TableData.TableData_Contenthelp> <>9__255_259;
        static /*0x900*/ System.Func<TableData.TableData_Contentunlock, int> <>9__255_260;
        static /*0x908*/ System.Func<TableData.TableData_Contentunlock, TableData.TableData_Contentunlock> <>9__255_261;
        static /*0x910*/ System.Func<TableData.TableData_Contentunlock, ContentType> <>9__255_262;
        static /*0x918*/ System.Func<TableData.TableData_Contentunlock, TableData.TableData_Contentunlock> <>9__255_263;
        static /*0x920*/ System.Func<TableData.TableData_Mazemateequip, int> <>9__255_264;
        static /*0x928*/ System.Func<TableData.TableData_Mazemateequip, TableData.TableData_Mazemateequip> <>9__255_265;
        static /*0x930*/ System.Func<TableData.TableData_Mazebattle, System.ValueTuple<int, int, int>> <>9__255_266;
        static /*0x938*/ System.Func<TableData.TableData_Mazebattle, TableData.TableData_Mazebattle> <>9__255_267;
        static /*0x940*/ System.Func<TableData.TableData_Mazebattle, int> <>9__255_268;
        static /*0x948*/ System.Func<TableData.TableData_Mazebattle, TableData.TableData_Mazebattle> <>9__255_269;
        static /*0x950*/ System.Func<TableData.TableData_Mazecourse, int> <>9__255_270;
        static /*0x958*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Mazecourse>, int> <>9__255_271;
        static /*0x960*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Mazecourse>, System.Collections.Generic.List<TableData.TableData_Mazecourse>> <>9__255_272;
        static /*0x968*/ System.Func<TableData.TableData_Cashshopinstant, int> <>9__255_273;
        static /*0x970*/ System.Func<TableData.TableData_Cashshopinstant, TableData.TableData_Cashshopinstant> <>9__255_274;
        static /*0x978*/ System.Func<TableData.TableData_Packagetime, string> <>9__255_275;
        static /*0x980*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packagetime>, string> <>9__255_276;
        static /*0x988*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packagetime>, System.Collections.Generic.List<TableData.TableData_Packagetime>> <>9__255_277;
        static /*0x990*/ System.Func<TableData.TableData_Packageproductgroup, string> <>9__255_278;
        static /*0x998*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup>, string> <>9__255_279;
        static /*0x9a0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup>, System.Collections.Generic.List<TableData.TableData_Packageproductgroup>> <>9__255_280;
        static /*0x9a8*/ System.Func<TableData.TableData_Cashshopquestreward, string> <>9__255_281;
        static /*0x9b0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward>, string> <>9__255_282;
        static /*0x9b8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward>, System.Collections.Generic.List<TableData.TableData_Cashshopquestreward>> <>9__255_283;
        static /*0x9c0*/ System.Func<TableData.TableData_Cashshopquestreward, int> <>9__255_284;
        static /*0x9c8*/ System.Func<TableData.TableData_Cashshopquestreward, TableData.TableData_Cashshopquestreward> <>9__255_285;
        static /*0x9d0*/ System.Func<TableData.TableData_Demodata, int> <>9__255_286;
        static /*0x9d8*/ System.Func<TableData.TableData_Demodata, TableData.TableData_Demodata> <>9__255_287;
        static /*0x9e0*/ System.Func<TableData.TableData_Contentshoparrangement, int> <>9__255_288;
        static /*0x9e8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement>, int> <>9__255_289;
        static /*0x9f0*/ System.Func<TableData.TableData_Contentshoparrangement, int> <>9__255_484;
        static /*0x9f8*/ System.Func<TableData.TableData_Contentshoparrangement, TableData.TableData_Contentshoparrangement> <>9__255_485;
        static /*0xa00*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement>, System.Collections.Generic.Dictionary<int, TableData.TableData_Contentshoparrangement>> <>9__255_290;
        static /*0xa08*/ System.Func<TableData.TableData_Idleunittipdialog, int> <>9__255_291;
        static /*0xa10*/ System.Func<TableData.TableData_Idleunittipdialog, TableData.TableData_Idleunittipdialog> <>9__255_292;
        static /*0xa18*/ System.Func<TableData.TableData_Menusettingbase, TopMenuType> <>9__255_293;
        static /*0xa20*/ System.Func<TableData.TableData_Menusettingbase, TableData.TableData_Menusettingbase> <>9__255_294;
        static /*0xa28*/ System.Predicate<TableData.TableData_Profileskin> <>9__255_295;
        static /*0xa30*/ System.Func<TableData.TableData_Worldarenatier2, int> <>9__255_296;
        static /*0xa38*/ System.Func<TableData.TableData_Worldarenatier2, TableData.TableData_Worldarenatier2> <>9__255_297;
        static /*0xa40*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_298;
        static /*0xa48*/ System.Func<TableData.TableData_Eventcurrencylocal, int> <>9__255_300;
        static /*0xa50*/ System.Func<TableData.TableData_Eventcurrencylocal, TableData.TableData_Eventcurrencylocal> <>9__255_301;
        static /*0xa58*/ System.Func<TableData.TableData_Eventpass, string> <>9__255_302;
        static /*0xa60*/ System.Func<TableData.TableData_Eventpass, int> <>9__255_303;
        static /*0xa68*/ System.Func<TableData.TableData_Eventpass, string> <>9__255_304;
        static /*0xa70*/ System.Func<TableData.TableData_Eventpass, int> <>9__255_305;
        static /*0xa78*/ System.Func<TableData.TableData_Eventpage, int> <>9__255_306;
        static /*0xa80*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventpage>, int> <>9__255_307;
        static /*0xa88*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventpage>, System.Collections.Generic.List<TableData.TableData_Eventpage>> <>9__255_308;
        static /*0xa90*/ System.Func<TableData.TableData_Eventhottime, int> <>9__255_309;
        static /*0xa98*/ System.Func<TableData.TableData_Eventhottime, TableData.TableData_Eventhottime> <>9__255_310;
        static /*0xaa0*/ System.Func<TableData.TableData_Eventcurrencylocal, string> <>9__255_311;
        static /*0xaa8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal>, string> <>9__255_312;
        static /*0xab0*/ System.Func<TableData.TableData_Eventcurrencylocal, System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>> <>9__255_487;
        static /*0xab8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal>, System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>>> <>9__255_313;
        static /*0xac0*/ System.Func<TableData.TableData_Eventpreset, int> <>9__255_314;
        static /*0xac8*/ System.Func<TableData.TableData_Eventpreset, TableData.TableData_Eventpreset> <>9__255_315;
        static /*0xad0*/ System.Func<TableData.TableData_Eventmissionpoint, int> <>9__255_316;
        static /*0xad8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint>, int> <>9__255_317;
        static /*0xae0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint>, System.Collections.Generic.List<TableData.TableData_Eventmissionpoint>> <>9__255_318;
        static /*0xae8*/ System.Func<TableData.TableData_Eventexchange, int> <>9__255_319;
        static /*0xaf0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventexchange>, int> <>9__255_320;
        static /*0xaf8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventexchange>, System.Collections.Generic.List<TableData.TableData_Eventexchange>> <>9__255_321;
        static /*0xb00*/ System.Func<TableData.TableData_Eventbuyinapp, int> <>9__255_322;
        static /*0xb08*/ System.Func<TableData.TableData_Eventbuyinapp, TableData.TableData_Eventbuyinapp> <>9__255_323;
        static /*0xb10*/ System.Func<TableData.TableData_Eventquest, int> <>9__255_324;
        static /*0xb18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventquest>, int> <>9__255_325;
        static /*0xb20*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventquest>, System.Collections.Generic.List<TableData.TableData_Eventquest>> <>9__255_326;
        static /*0xb28*/ System.Func<TableData.TableData_Eventquestgroup, string> <>9__255_327;
        static /*0xb30*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup>, string> <>9__255_328;
        static /*0xb38*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup>, System.Collections.Generic.List<TableData.TableData_Eventquestgroup>> <>9__255_329;
        static /*0xb40*/ System.Func<TableData.TableData_Eventquestgroup, int> <>9__255_330;
        static /*0xb48*/ System.Func<TableData.TableData_Eventquestgroup, TableData.TableData_Eventquestgroup> <>9__255_331;
        static /*0xb50*/ System.Func<TableData.TableData_Eventroulette, int> <>9__255_332;
        static /*0xb58*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventroulette>, int> <>9__255_333;
        static /*0xb60*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventroulette>, System.Collections.Generic.List<TableData.TableData_Eventroulette>> <>9__255_334;
        static /*0xb68*/ System.Func<TableData.TableData_Eventboss, int> <>9__255_335;
        static /*0xb70*/ System.Func<TableData.TableData_Eventboss, TableData.TableData_Eventboss> <>9__255_336;
        static /*0xb78*/ System.Func<TableData.TableData_Eventboss, int> <>9__255_337;
        static /*0xb80*/ System.Func<TableData.TableData_Eventboss, TableData.TableData_Eventboss> <>9__255_338;
        static /*0xb88*/ System.Func<TableData.TableData_Eventbossreward, int> <>9__255_339;
        static /*0xb90*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventbossreward>, int> <>9__255_340;
        static /*0xb98*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventbossreward>, System.Collections.Generic.List<TableData.TableData_Eventbossreward>> <>9__255_341;
        static /*0xba0*/ System.Func<TableData.TableData_Eventcomplete, int> <>9__255_342;
        static /*0xba8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcomplete>, int> <>9__255_343;
        static /*0xbb0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcomplete>, System.Collections.Generic.List<TableData.TableData_Eventcomplete>> <>9__255_344;
        static /*0xbb8*/ System.Func<TableData.TableData_Eventcompletemission, int> <>9__255_345;
        static /*0xbc0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission>, int> <>9__255_346;
        static /*0xbc8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission>, System.Collections.Generic.List<TableData.TableData_Eventcompletemission>> <>9__255_347;
        static /*0xbd0*/ System.Func<TableData.TableData_Config, string> <>9__255_348;
        static /*0xbd8*/ System.Func<TableData.TableData_Config, string> <>9__255_349;
        static /*0xbe0*/ System.Func<TableData.TableData_Config, bool> <>9__255_350;
        static /*0xbe8*/ System.Func<TableData.TableData_Config, string> <>9__255_351;
        static /*0xbf0*/ System.Func<TableData.TableData_Config, int> <>9__255_352;
        static /*0xbf8*/ System.Func<TableData.TableData_Guildlevel, int> <>9__255_353;
        static /*0xc00*/ System.Func<TableData.TableData_Guildlevel, TableData.TableData_Guildlevel> <>9__255_354;
        static /*0xc08*/ System.Func<TableData.TableData_Guildhuntingreward, int> <>9__255_355;
        static /*0xc10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward>, int> <>9__255_356;
        static /*0xc18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward>, System.Collections.Generic.List<TableData.TableData_Guildhuntingreward>> <>9__255_357;
        static /*0xc20*/ System.Func<TableData.TableData_Guildwar, string> <>9__255_358;
        static /*0xc28*/ System.Func<TableData.TableData_Guildwar, string> <>9__255_359;
        static /*0xc30*/ System.Func<TableData.TableData_Guildwarorganize, PTShare.Define.GuildWarPosition> <>9__255_360;
        static /*0xc38*/ System.Func<System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize>, PTShare.Define.GuildWarPosition> <>9__255_361;
        static /*0xc40*/ System.Func<System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize>, System.Collections.Generic.List<TableData.TableData_Guildwarorganize>> <>9__255_362;
        static /*0xc48*/ System.Func<TableData.TableData_Guildwarrank, int> <>9__255_363;
        static /*0xc50*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildwarrank>, int> <>9__255_364;
        static /*0xc58*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildwarrank>, System.Collections.Generic.List<TableData.TableData_Guildwarrank>> <>9__255_365;
        static /*0xc60*/ System.Func<TableData.TableData_Guildwarrankreward, string> <>9__255_366;
        static /*0xc68*/ System.Func<TableData.TableData_Guildwarrankreward, TableData.TableData_Guildwarrankreward> <>9__255_367;
        static /*0xc70*/ System.Func<TableData.TableData_Guildwartactic, int> <>9__255_368;
        static /*0xc78*/ System.Func<TableData.TableData_Guildwartactic, TableData.TableData_Guildwartactic> <>9__255_369;
        static /*0xc80*/ System.Func<TableData.TableData_Vip, int> <>9__255_370;
        static /*0xc88*/ System.Func<TableData.TableData_Vip, TableData.TableData_Vip> <>9__255_371;
        static /*0xc90*/ System.Func<TableData.TableData_Bountyquest, int> <>9__255_372;
        static /*0xc98*/ System.Func<TableData.TableData_Bountyquest, TableData.TableData_Bountyquest> <>9__255_373;
        static /*0xca0*/ System.Func<TableData.TableData_Bountylv, int> <>9__255_374;
        static /*0xca8*/ System.Func<TableData.TableData_Bountylv, TableData.TableData_Bountylv> <>9__255_375;
        static /*0xcb0*/ System.Func<TableData.TableData_Dungeon, int> <>9__255_376;
        static /*0xcb8*/ System.Func<TableData.TableData_Dungeon, TableData.TableData_Dungeon> <>9__255_377;
        static /*0xcc0*/ System.Func<TableData.TableData_Dungeongroup, int> <>9__255_378;
        static /*0xcc8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeongroup>, int> <>9__255_379;
        static /*0xcd0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeongroup>, System.Collections.Generic.List<TableData.TableData_Dungeongroup>> <>9__255_380;
        static /*0xcd8*/ System.Func<TableData.TableData_Dungeonmap, int> <>9__255_381;
        static /*0xce0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonmap>, int> <>9__255_382;
        static /*0xce8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonmap>, System.Collections.Generic.List<TableData.TableData_Dungeonmap>> <>9__255_383;
        static /*0xcf0*/ System.Func<TableData.TableData_Dungeontile, int> <>9__255_384;
        static /*0xcf8*/ System.Func<TableData.TableData_Dungeontile, TableData.TableData_Dungeontile> <>9__255_385;
        static /*0xd00*/ System.Func<TableData.TableData_Dungeonmateequip, int> <>9__255_386;
        static /*0xd08*/ System.Func<TableData.TableData_Dungeonmateequip, TableData.TableData_Dungeonmateequip> <>9__255_387;
        static /*0xd10*/ System.Func<TableData.TableData_Dungeondialog, int> <>9__255_388;
        static /*0xd18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialog>, int> <>9__255_389;
        static /*0xd20*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialog>, System.Collections.Generic.List<TableData.TableData_Dungeondialog>> <>9__255_390;
        static /*0xd28*/ System.Func<TableData.TableData_Dungeonreward, int> <>9__255_391;
        static /*0xd30*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonreward>, int> <>9__255_392;
        static /*0xd38*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonreward>, System.Collections.Generic.List<TableData.TableData_Dungeonreward>> <>9__255_393;
        static /*0xd40*/ System.Func<TableData.TableData_Dungeondialogdirection, int> <>9__255_394;
        static /*0xd48*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection>, int> <>9__255_395;
        static /*0xd50*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection>, System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection>> <>9__255_396;
        static /*0xd58*/ System.Func<TableData.TableData_Runlife, int> <>9__255_397;
        static /*0xd60*/ System.Func<TableData.TableData_Runlife, TableData.TableData_Runlife> <>9__255_398;
        static /*0xd68*/ System.Func<TableData.TableData_Runreward, int> <>9__255_399;
        static /*0xd70*/ System.Func<TableData.TableData_Runreward, TableData.TableData_Runreward> <>9__255_400;
        static /*0xd78*/ System.Predicate<TableData.TableData_Relation> <>9__255_401;
        static /*0xd80*/ System.Func<TableData.TableData_Worldbossstep, int> <>9__255_402;
        static /*0xd88*/ System.Func<TableData.TableData_Worldbossstep, TableData.TableData_Worldbossstep> <>9__255_403;
        static /*0xd90*/ System.Func<TableData.TableData_Worldbossmission, int> <>9__255_404;
        static /*0xd98*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Worldbossmission>, int> <>9__255_405;
        static /*0xda0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Worldbossmission>, System.Collections.Generic.List<TableData.TableData_Worldbossmission>> <>9__255_406;
        static /*0xda8*/ System.Func<TableData.TableData_Pvenoblity, int> <>9__255_407;
        static /*0xdb0*/ System.Func<TableData.TableData_Pvenoblity, TableData.TableData_Pvenoblity> <>9__255_408;
        static /*0xdb8*/ System.Func<TableData.TableData_Pvechallenge, int> <>9__255_409;
        static /*0xdc0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Pvechallenge>, int> <>9__255_410;
        static /*0xdc8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Pvechallenge>, System.Collections.Generic.List<TableData.TableData_Pvechallenge>> <>9__255_411;
        static /*0xdd0*/ System.Func<TableData.TableData_Pveclearreward, int> <>9__255_412;
        static /*0xdd8*/ System.Func<TableData.TableData_Pveclearreward, TableData.TableData_Pveclearreward> <>9__255_413;
        static /*0xde0*/ System.Func<TableData.TableData_Housing, string> <>9__255_414;
        static /*0xde8*/ System.Func<TableData.TableData_Housing, string> <>9__255_415;
        static /*0xdf0*/ System.Func<TableData.TableData_Housingfloor, int> <>9__255_416;
        static /*0xdf8*/ System.Func<TableData.TableData_Housingfloor, TableData.TableData_Housingfloor> <>9__255_417;
        static /*0xe00*/ System.Func<TableData.TableData_Housingfloor, int> <>9__255_418;
        static /*0xe08*/ System.Func<TableData.TableData_Housinggacha, int> <>9__255_419;
        static /*0xe10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Housinggacha>, int> <>9__255_420;
        static /*0xe18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Housinggacha>, System.Collections.Generic.List<TableData.TableData_Housinggacha>> <>9__255_421;
        static /*0xe20*/ System.Func<TableData.TableData_Housinggacha, int> <>9__255_422;
        static /*0xe28*/ System.Func<TableData.TableData_Furniture, int> <>9__255_423;
        static /*0xe30*/ System.Func<TableData.TableData_Furniture, TableData.TableData_Furniture> <>9__255_424;
        static /*0xe38*/ System.Func<TableData.TableData_Furnitureleveltypelist, string> <>9__255_425;
        static /*0xe40*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, string> <>9__255_426;
        static /*0xe48*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> <>9__255_427;
        static /*0xe50*/ System.Func<TableData.TableData_Furnitureleveltypelist, string> <>9__255_428;
        static /*0xe58*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, string> <>9__255_429;
        static /*0xe60*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> <>9__255_430;
        static /*0xe68*/ System.Func<TableData.TableData_Furnitureeffecttype, string> <>9__255_431;
        static /*0xe70*/ System.Func<TableData.TableData_Furnitureeffecttype, TableData.TableData_Furnitureeffecttype> <>9__255_432;
        static /*0xe78*/ System.Func<TableData.TableData_Furnitureshoplist, int> <>9__255_433;
        static /*0xe80*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist>, int> <>9__255_434;
        static /*0xe88*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist>, System.Collections.Generic.List<TableData.TableData_Furnitureshoplist>> <>9__255_435;
        static /*0xe90*/ System.Func<TableData.TableData_Furnitureshoplist, int> <>9__255_436;
        static /*0xe98*/ System.Func<TableData.TableData_Furnitureshoplist, TableData.TableData_Furnitureshoplist> <>9__255_437;
        static /*0xea0*/ System.Func<TableData.TableData_Housingfloorpattern, string> <>9__255_438;
        static /*0xea8*/ System.Func<TableData.TableData_Housingfloorpattern, TableData.TableData_Housingfloorpattern> <>9__255_439;
        static /*0xeb0*/ System.Func<TableData.TableData_Furniturecontentseffect, int> <>9__255_440;
        static /*0xeb8*/ System.Func<TableData.TableData_Furniturecontentseffect, TableData.TableData_Furniturecontentseffect> <>9__255_441;
        static /*0xec0*/ System.Func<TableData.TableData_Furnitureheroeffect, int> <>9__255_442;
        static /*0xec8*/ System.Func<TableData.TableData_Furnitureheroeffect, TableData.TableData_Furnitureheroeffect> <>9__255_443;
        static /*0xed0*/ System.Func<TableData.TableData_Furniturelevelup, int> <>9__255_444;
        static /*0xed8*/ System.Func<TableData.TableData_Furniturelevelup, TableData.TableData_Furniturelevelup> <>9__255_445;
        static /*0xee0*/ System.Func<TableData.TableData_Furnitureexp, string> <>9__255_446;
        static /*0xee8*/ System.Func<TableData.TableData_Furnitureexp, TableData.TableData_Furnitureexp> <>9__255_447;
        static /*0xef0*/ System.Func<TableData.TableData_Abilitypercent, int> <>9__255_448;
        static /*0xef8*/ System.Func<TableData.TableData_Abilitypercent, TableData.TableData_Abilitypercent> <>9__255_449;
        static /*0xf00*/ System.Func<TableData.TableData_Abilityoptionvalue, string> <>9__255_450;
        static /*0xf08*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue>, string> <>9__255_451;
        static /*0xf10*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue>, System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue>> <>9__255_452;
        static /*0xf18*/ System.Func<TableData.TableData_Abilityoptionvalue, int> <>9__255_453;
        static /*0xf20*/ System.Func<TableData.TableData_Abilityoptionvalue, TableData.TableData_Abilityoptionvalue> <>9__255_454;
        static /*0xf28*/ System.Func<TableData.TableData_Abilityreset, string> <>9__255_455;
        static /*0xf30*/ System.Func<TableData.TableData_Abilityreset, TableData.TableData_Abilityreset> <>9__255_456;

        static /*0xcc4048*/ <>c();
        /*0xcc40a8*/ <>c();
        /*0xcc40b0*/ string <Init>b__255_0(TableData.TableData_Arenaconfig k);
        /*0xcc40c8*/ string <Init>b__255_1(TableData.TableData_Arenaconfig v);
        /*0xcc40e0*/ int <Init>b__255_2(TableData.TableData_Buff k);
        /*0xcc40f8*/ TableData.TableData_Buff <Init>b__255_3(TableData.TableData_Buff v);
        /*0xcc4100*/ int <Init>b__255_4(TableData.TableData_Buff k);
        /*0xcc4118*/ Battle.BuffEffectType <Init>b__255_5(TableData.TableData_Buff v);
        /*0xcc41a0*/ int <Init>b__255_6(TableData.TableData_Buff k);
        /*0xcc41b8*/ Battle.BuffEffectType <Init>b__255_7(TableData.TableData_Buff v);
        /*0xcc4240*/ int <Init>b__255_8(TableData.TableData_Buff k);
        /*0xcc4258*/ Battle.BuffEffectType <Init>b__255_9(TableData.TableData_Buff v);
        /*0xcc42e0*/ int <Init>b__255_10(TableData.TableData_Buff k);
        /*0xcc42f8*/ Battle.BuffOriginType <Init>b__255_11(TableData.TableData_Buff v);
        /*0xcc4380*/ int <Init>b__255_12(TableData.TableData_Buff k);
        /*0xcc4398*/ Battle.BuffType <Init>b__255_13(TableData.TableData_Buff v);
        /*0xcc4420*/ int <Init>b__255_14(TableData.TableData_Buff k);
        /*0xcc4438*/ Battle.ShieldType <Init>b__255_15(TableData.TableData_Buff v);
        /*0xcc44c0*/ int <Init>b__255_16(TableData.TableData_Buff k);
        /*0xcc44d8*/ Battle.CharacterStat.StatType <Init>b__255_17(TableData.TableData_Buff v);
        /*0xcc4560*/ int <Init>b__255_18(TableData.TableData_Skillbase k);
        /*0xcc4578*/ TableData.TableData_Skillbase <Init>b__255_19(TableData.TableData_Skillbase v);
        /*0xcc4580*/ int <Init>b__255_20(TableData.TableData_Skillbase k);
        /*0xcc4598*/ Battle.SkillType <Init>b__255_21(TableData.TableData_Skillbase v);
        /*0xcc4620*/ int <Init>b__255_22(TableData.TableData_Skillbase k);
        /*0xcc4638*/ Battle.ActiveType <Init>b__255_23(TableData.TableData_Skillbase v);
        /*0xcc46c0*/ int <Init>b__255_24(TableData.TableData_Skillbase k);
        /*0xcc46d8*/ Battle.ColliderType <Init>b__255_25(TableData.TableData_Skillbase v);
        /*0xcc4760*/ int <Init>b__255_26(TableData.TableData_Skillbase k);
        /*0xcc4778*/ Battle.ColliderType <Init>b__255_27(TableData.TableData_Skillbase v);
        /*0xcc4800*/ int <Init>b__255_28(TableData.TableData_Skillbase k);
        /*0xcc4818*/ Battle.AttackType <Init>b__255_29(TableData.TableData_Skillbase v);
        /*0xcc48a0*/ int <Init>b__255_30(TableData.TableData_Skillbase k);
        /*0xcc48b8*/ Battle.PassiveConditionType <Init>b__255_31(TableData.TableData_Skillbase v);
        /*0xcc4940*/ int <Init>b__255_32(TableData.TableData_Skillbase g);
        /*0xcc4958*/ int <Init>b__255_33(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc4a00*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_34(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc4b34*/ bool <Init>b__255_457(TableData.TableData_Skillbase w);
        /*0xcc4b60*/ int <Init>b__255_35(TableData.TableData_Skillbase g);
        /*0xcc4b78*/ int <Init>b__255_36(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc4c20*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_37(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc4d54*/ bool <Init>b__255_458(TableData.TableData_Skillbase w);
        /*0xcc4d80*/ int <Init>b__255_38(TableData.TableData_Skillbase g);
        /*0xcc4d98*/ int <Init>b__255_39(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc4e40*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_40(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc4f74*/ bool <Init>b__255_459(TableData.TableData_Skillbase w);
        /*0xcc501c*/ int <Init>b__255_41(TableData.TableData_Skillbase g);
        /*0xcc5034*/ int <Init>b__255_42(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc50dc*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_43(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc5128*/ int <Init>b__255_44(TableData.TableData_Skillbase g);
        /*0xcc5140*/ int <Init>b__255_45(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc51e8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> <Init>b__255_46(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc5498*/ int <Init>b__255_460(TableData.TableData_Skillbase g);
        /*0xcc54b0*/ int <Init>b__255_461(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc5558*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_462(System.Linq.IGrouping<int, TableData.TableData_Skillbase> w);
        /*0xcc55a4*/ int <Init>b__255_47(TableData.TableData_Skillfx g);
        /*0xcc55bc*/ int <Init>b__255_48(System.Linq.IGrouping<int, TableData.TableData_Skillfx> k);
        /*0xcc5664*/ System.Collections.Generic.List<TableData.TableData_Skillfx> <Init>b__255_49(System.Linq.IGrouping<int, TableData.TableData_Skillfx> v);
        /*0xcc56b0*/ System.ValueTuple<int, int> <Init>b__255_50(TableData.TableData_Skillfx k);
        /*0xcc5720*/ TableData.TableData_Skillfx <Init>b__255_51(TableData.TableData_Skillfx v);
        /*0xcc5728*/ System.ValueTuple<int, int> <Init>b__255_52(TableData.TableData_Skillfx k);
        /*0xcc5798*/ Battle.SkillEnumGroup <Init>b__255_53(TableData.TableData_Skillfx v);
        /*0xcc5a60*/ int <Init>b__255_54(TableData.TableData_Skillfx x, TableData.TableData_Skillfx y);
        /*0xcc5a8c*/ Battle.SkillExtraID <Init>b__255_55(TableData.TableData_Skillextra k);
        /*0xcc5aa4*/ TableData.TableData_Skillextra <Init>b__255_56(TableData.TableData_Skillextra v);
        /*0xcc5aac*/ int <Init>b__255_57(TableData.TableData_Skilllv g);
        /*0xcc5ac4*/ int <Init>b__255_58(System.Linq.IGrouping<int, TableData.TableData_Skilllv> k);
        /*0xcc5b6c*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Skilllv> <Init>b__255_59(System.Linq.IGrouping<int, TableData.TableData_Skilllv> v);
        /*0xcc5d38*/ int <Init>b__255_463(TableData.TableData_Skilllv k);
        /*0xcc5d50*/ TableData.TableData_Skilllv <Init>b__255_464(TableData.TableData_Skilllv w);
        /*0xcc5d58*/ bool <Init>b__255_465(TableData.TableData_Skilllv w);
        /*0xcc5d78*/ System.ValueTuple<int, int> <Init>b__255_466(TableData.TableData_Skilllv k);
        /*0xcc5de8*/ TableData.TableData_Skilllv <Init>b__255_467(TableData.TableData_Skilllv v);
        /*0xcc5df0*/ bool <Init>b__255_468(TableData.TableData_Skilllv w);
        /*0xcc5e10*/ System.ValueTuple<int, int> <Init>b__255_469(TableData.TableData_Skilllv k);
        /*0xcc5e80*/ TableData.TableData_Skilllv <Init>b__255_470(TableData.TableData_Skilllv v);
        /*0xcc5e88*/ bool <Init>b__255_471(TableData.TableData_Skilllv w);
        /*0xcc5ea8*/ System.ValueTuple<int, int> <Init>b__255_472(TableData.TableData_Skilllv k);
        /*0xcc5f18*/ TableData.TableData_Skilllv <Init>b__255_473(TableData.TableData_Skilllv v);
        /*0xcc5f20*/ bool <Init>b__255_474(TableData.TableData_Skilllv w);
        /*0xcc5f40*/ System.ValueTuple<int, int> <Init>b__255_475(TableData.TableData_Skilllv k);
        /*0xcc5fb0*/ TableData.TableData_Skilllv <Init>b__255_476(TableData.TableData_Skilllv v);
        /*0xcc5fb8*/ System.ValueTuple<int, int> <Init>b__255_60(TableData.TableData_Skilldesc g);
        /*0xcc6024*/ System.ValueTuple<int, int> <Init>b__255_61(System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc> k);
        /*0xcc60cc*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> <Init>b__255_62(System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc> v);
        /*0xcc6200*/ int <Init>b__255_477(TableData.TableData_Skilldesc o);
        /*0xcc6218*/ int <Init>b__255_63(TableData.TableData_Enhanceequip k);
        /*0xcc6230*/ TableData.TableData_Enhanceequip <Init>b__255_64(TableData.TableData_Enhanceequip v);
        /*0xcc6238*/ int <Init>b__255_65(TableData.TableData_Equipment k);
        /*0xcc6250*/ TableData.TableData_Equipment <Init>b__255_66(TableData.TableData_Equipment v);
        /*0xcc6258*/ bool <Init>b__255_67(TableData.TableData_Equipment w);
        /*0xcc62ec*/ System.ValueTuple<string, int> <Init>b__255_68(TableData.TableData_Equipment k);
        /*0xcc635c*/ TableData.TableData_Equipment <Init>b__255_69(TableData.TableData_Equipment v);
        /*0xcc6364*/ System.ValueTuple<PTShare.Define.EquipParts, int, string> <Init>b__255_70(TableData.TableData_Equipment k);
        /*0xcc642c*/ TableData.TableData_Equipment <Init>b__255_71(TableData.TableData_Equipment v);
        /*0xcc6434*/ string <Init>b__255_72(TableData.TableData_Equipment g);
        /*0xcc644c*/ string <Init>b__255_73(System.Linq.IGrouping<string, TableData.TableData_Equipment> k);
        /*0xcc64f4*/ System.Collections.Generic.List<TableData.TableData_Equipment> <Init>b__255_74(System.Linq.IGrouping<string, TableData.TableData_Equipment> v);
        /*0xcc6540*/ int <Init>b__255_75(TableData.TableData_Equipment k);
        /*0xcc6558*/ int <Init>b__255_76(TableData.TableData_Equipment v);
        /*0xcc65e0*/ int <Init>b__255_77(TableData.TableData_Advanceequip g);
        /*0xcc65f8*/ int <Init>b__255_78(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> k);
        /*0xcc66a0*/ System.Collections.Generic.List<TableData.TableData_Advanceequip> <Init>b__255_79(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> v);
        /*0xcc66ec*/ int <Init>b__255_80(TableData.TableData_Advanceequip g);
        /*0xcc6704*/ int <Init>b__255_81(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> k);
        /*0xcc67ac*/ System.Collections.Generic.Dictionary<int, string> <Init>b__255_82(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> v);
        /*0xcc6978*/ int <Init>b__255_478(TableData.TableData_Advanceequip k);
        /*0xcc6990*/ string <Init>b__255_479(TableData.TableData_Advanceequip w);
        /*0xcc69a8*/ bool <Init>b__255_83(TableData.TableData_Unitbase x);
        /*0xcc6ac4*/ int <Init>b__255_84(TableData.TableData_Unitbase k);
        /*0xcc6adc*/ TableData.TableData_Unitbase <Init>b__255_85(TableData.TableData_Unitbase v);
        /*0xcc6ae4*/ int <Init>b__255_86(TableData.TableData_Unitbase k);
        /*0xcc6afc*/ Battle.ColliderType <Init>b__255_87(TableData.TableData_Unitbase v);
        /*0xcc6b84*/ int <Init>b__255_88(TableData.TableData_Unitbase k);
        /*0xcc6b9c*/ Battle.AttackType <Init>b__255_89(TableData.TableData_Unitbase v);
        /*0xcc6c24*/ int <Init>b__255_90(TableData.TableData_Unitbase k);
        /*0xcc6c3c*/ UnitClassType <Init>b__255_91(TableData.TableData_Unitbase v);
        /*0xcc6cc4*/ int <Init>b__255_92(TableData.TableData_Unitbase g);
        /*0xcc6cdc*/ int <Init>b__255_93(System.Linq.IGrouping<int, TableData.TableData_Unitbase> k);
        /*0xcc6d84*/ System.Collections.Generic.List<TableData.TableData_Unitbase> <Init>b__255_94(System.Linq.IGrouping<int, TableData.TableData_Unitbase> v);
        /*0xcc6dd0*/ bool <Init>b__255_95(TableData.TableData_Unitbase w);
        /*0xcc6e7c*/ int <Init>b__255_96(TableData.TableData_Unitbase g);
        /*0xcc6e94*/ int <Init>b__255_97(System.Linq.IGrouping<int, TableData.TableData_Unitbase> k);
        /*0xcc6f3c*/ System.Collections.Generic.List<TableData.TableData_Unitbase> <Init>b__255_98(System.Linq.IGrouping<int, TableData.TableData_Unitbase> v);
        /*0xcc6f88*/ int <Init>b__255_99(TableData.TableData_Unitgrade g);
        /*0xcc6fa0*/ int <Init>b__255_100(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> k);
        /*0xcc7048*/ System.Collections.Generic.List<TableData.TableData_Unitgrade> <Init>b__255_101(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> v);
        /*0xcc7094*/ int <Init>b__255_102(TableData.TableData_Unitgrade g);
        /*0xcc70ac*/ int <Init>b__255_103(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> k);
        /*0xcc7154*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgrade> <Init>b__255_104(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> v);
        /*0xcc7320*/ int <Init>b__255_480(TableData.TableData_Unitgrade k);
        /*0xcc7338*/ TableData.TableData_Unitgrade <Init>b__255_481(TableData.TableData_Unitgrade w);
        /*0xcc7340*/ int <Init>b__255_105(TableData.TableData_Unitgradelv k);
        /*0xcc7358*/ TableData.TableData_Unitgradelv <Init>b__255_106(TableData.TableData_Unitgradelv v);
        /*0xcc7360*/ int <Init>b__255_107(TableData.TableData_Unitlv k);
        /*0xcc7378*/ TableData.TableData_Unitlv <Init>b__255_108(TableData.TableData_Unitlv v);
        /*0xcc7380*/ int <Init>b__255_109(TableData.TableData_Unittier g);
        /*0xcc7398*/ int <Init>b__255_110(System.Linq.IGrouping<int, TableData.TableData_Unittier> k);
        /*0xcc7440*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unittier> <Init>b__255_111(System.Linq.IGrouping<int, TableData.TableData_Unittier> v);
        /*0xcc760c*/ int <Init>b__255_482(TableData.TableData_Unittier k);
        /*0xcc7624*/ TableData.TableData_Unittier <Init>b__255_483(TableData.TableData_Unittier w);
        /*0xcc762c*/ int <Init>b__255_112(TableData.TableData_Unittierlv k);
        /*0xcc7644*/ TableData.TableData_Unittierlv <Init>b__255_113(TableData.TableData_Unittierlv v);
        /*0xcc764c*/ bool <Init>b__255_114(TableData.TableData_Skinbasic x);
        /*0xcc7678*/ System.ValueTuple<int, string> <Init>b__255_115(TableData.TableData_Voice k);
        /*0xcc76e8*/ TableData.TableData_Voice <Init>b__255_116(TableData.TableData_Voice v);
        /*0xcc76f0*/ System.ValueTuple<int, int> <Init>b__255_117(TableData.TableData_Artifact k);
        /*0xcc775c*/ TableData.TableData_Artifact <Init>b__255_118(TableData.TableData_Artifact v);
        /*0xcc7764*/ System.ValueTuple<int, int> <Init>b__255_119(TableData.TableData_Artifact k);
        /*0xcc77d0*/ TableData.TableData_Artifact <Init>b__255_120(TableData.TableData_Artifact v);
        /*0xcc77d8*/ System.ValueTuple<int, int> <Init>b__255_121(TableData.TableData_Artifact k);
        /*0xcc7844*/ Battle.ColliderType <Init>b__255_122(TableData.TableData_Artifact v);
        /*0xcc78cc*/ int <Init>b__255_123(TableData.TableData_Artifact x);
        /*0xcc78e4*/ int <Init>b__255_124(System.Linq.IGrouping<int, TableData.TableData_Artifact> k);
        /*0xcc798c*/ System.Collections.Generic.List<TableData.TableData_Artifact> <Init>b__255_125(System.Linq.IGrouping<int, TableData.TableData_Artifact> v);
        /*0xcc79d8*/ int <Init>b__255_126(TableData.TableData_Quest k);
        /*0xcc79f0*/ TableData.TableData_Quest <Init>b__255_127(TableData.TableData_Quest v);
        /*0xcc79f8*/ bool <Init>b__255_128(TableData.TableData_Quest w);
        /*0xcc7b08*/ int <Init>b__255_129(TableData.TableData_Quest s);
        /*0xcc7b20*/ bool <Init>b__255_130(TableData.TableData_Quest w);
        /*0xcc7c34*/ int <Init>b__255_131(TableData.TableData_Quest s);
        /*0xcc7c4c*/ string <Init>b__255_132(TableData.TableData_Quest g);
        /*0xcc7c64*/ QuestContentType <Init>b__255_133(System.Linq.IGrouping<string, TableData.TableData_Quest> k);
        /*0xcc7d64*/ System.Collections.Generic.List<TableData.TableData_Quest> <Init>b__255_134(System.Linq.IGrouping<string, TableData.TableData_Quest> v);
        /*0xcc7db0*/ System.ValueTuple<QuestContentType, QuestGroupType> <Init>b__255_135(TableData.TableData_Quest g);
        /*0xcc7ea0*/ System.ValueTuple<QuestContentType, QuestGroupType> <Init>b__255_136(System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest> k);
        /*0xcc7f48*/ System.Collections.Generic.List<TableData.TableData_Quest> <Init>b__255_137(System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest> v);
        /*0xcc7f94*/ string <Init>b__255_138(TableData.TableData_Quest k);
        /*0xcc7fac*/ TableData.TableData_Quest <Init>b__255_139(TableData.TableData_Quest v);
        /*0xcc7fb4*/ string <Init>b__255_140(TableData.TableData_Questgroup g);
        /*0xcc7fcc*/ string <Init>b__255_141(System.Linq.IGrouping<string, TableData.TableData_Questgroup> k);
        /*0xcc8074*/ System.Collections.Generic.List<TableData.TableData_Questgroup> <Init>b__255_142(System.Linq.IGrouping<string, TableData.TableData_Questgroup> v);
        /*0xcc80c0*/ string <Init>b__255_143(TableData.TableData_Questpropertypoint k);
        /*0xcc80d8*/ TableData.TableData_Questpropertypoint <Init>b__255_144(TableData.TableData_Questpropertypoint v);
        /*0xcc80e0*/ string <Init>b__255_145(TableData.TableData_Questchapterclear k);
        /*0xcc80f8*/ TableData.TableData_Questchapterclear <Init>b__255_146(TableData.TableData_Questchapterclear v);
        /*0xcc8100*/ string <Init>b__255_147(TableData.TableData_Queststageclear k);
        /*0xcc8118*/ TableData.TableData_Queststageclear <Init>b__255_148(TableData.TableData_Queststageclear v);
        /*0xcc8120*/ string <Init>b__255_149(TableData.TableData_Questgacha k);
        /*0xcc8138*/ TableData.TableData_Questgacha <Init>b__255_150(TableData.TableData_Questgacha v);
        /*0xcc8140*/ string <Init>b__255_151(TableData.TableData_Queststageidle k);
        /*0xcc8158*/ TableData.TableData_Queststageidle <Init>b__255_152(TableData.TableData_Queststageidle v);
        /*0xcc8160*/ string <Init>b__255_153(TableData.TableData_Queststagetry k);
        /*0xcc8178*/ TableData.TableData_Queststagetry <Init>b__255_154(TableData.TableData_Queststagetry v);
        /*0xcc8180*/ string <Init>b__255_155(TableData.TableData_Questheroupgrade k);
        /*0xcc8198*/ TableData.TableData_Questheroupgrade <Init>b__255_156(TableData.TableData_Questheroupgrade v);
        /*0xcc81a0*/ string <Init>b__255_157(TableData.TableData_Questequipupgrade k);
        /*0xcc81b8*/ TableData.TableData_Questequipupgrade <Init>b__255_158(TableData.TableData_Questequipupgrade v);
        /*0xcc81c0*/ string <Init>b__255_159(TableData.TableData_Questfriend k);
        /*0xcc81d8*/ TableData.TableData_Questfriend <Init>b__255_160(TableData.TableData_Questfriend v);
        /*0xcc81e0*/ string <Init>b__255_161(TableData.TableData_Questprizeboard k);
        /*0xcc81f8*/ TableData.TableData_Questprizeboard <Init>b__255_162(TableData.TableData_Questprizeboard v);
        /*0xcc8200*/ string <Init>b__255_163(TableData.TableData_Questbuy k);
        /*0xcc8218*/ TableData.TableData_Questbuy <Init>b__255_164(TableData.TableData_Questbuy v);
        /*0xcc8220*/ string <Init>b__255_165(TableData.TableData_Questarena k);
        /*0xcc8238*/ TableData.TableData_Questarena <Init>b__255_166(TableData.TableData_Questarena v);
        /*0xcc8240*/ string <Init>b__255_167(TableData.TableData_Questheroget k);
        /*0xcc8258*/ TableData.TableData_Questheroget <Init>b__255_168(TableData.TableData_Questheroget v);
        /*0xcc8260*/ string <Init>b__255_169(TableData.TableData_Questlevel k);
        /*0xcc8278*/ TableData.TableData_Questlevel <Init>b__255_170(TableData.TableData_Questlevel v);
        /*0xcc8280*/ string <Init>b__255_171(TableData.TableData_Questgetitem k);
        /*0xcc8298*/ TableData.TableData_Questgetitem <Init>b__255_172(TableData.TableData_Questgetitem v);
        /*0xcc82a0*/ string <Init>b__255_173(TableData.TableData_Questmove k);
        /*0xcc82b8*/ TableData.TableData_Questmove <Init>b__255_174(TableData.TableData_Questmove v);
        /*0xcc82c0*/ string <Init>b__255_175(TableData.TableData_Questlabyrinth k);
        /*0xcc82d8*/ TableData.TableData_Questlabyrinth <Init>b__255_176(TableData.TableData_Questlabyrinth v);
        /*0xcc82e0*/ string <Init>b__255_177(TableData.TableData_Questresonance k);
        /*0xcc82f8*/ TableData.TableData_Questresonance <Init>b__255_178(TableData.TableData_Questresonance v);
        /*0xcc8300*/ string <Init>b__255_179(TableData.TableData_Questspirittowerclear k);
        /*0xcc8318*/ TableData.TableData_Questspirittowerclear <Init>b__255_180(TableData.TableData_Questspirittowerclear v);
        /*0xcc8320*/ int <Init>b__255_181(TableData.TableData_Gacha g);
        /*0xcc8338*/ int <Init>b__255_182(System.Linq.IGrouping<int, TableData.TableData_Gacha> k);
        /*0xcc83e0*/ System.Collections.Generic.List<TableData.TableData_Gacha> <Init>b__255_183(System.Linq.IGrouping<int, TableData.TableData_Gacha> v);
        /*0xcc842c*/ string <Init>b__255_184(TableData.TableData_Gacha g);
        /*0xcc8444*/ GachaFactionType <Init>b__255_185(System.Linq.IGrouping<string, TableData.TableData_Gacha> k);
        /*0xcc8544*/ System.Collections.Generic.List<TableData.TableData_Gacha> <Init>b__255_186(System.Linq.IGrouping<string, TableData.TableData_Gacha> v);
        /*0xcc8590*/ int <Init>b__255_187(TableData.TableData_Gachabonus g);
        /*0xcc85a8*/ int <Init>b__255_188(System.Linq.IGrouping<int, TableData.TableData_Gachabonus> k);
        /*0xcc8650*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> <Init>b__255_189(System.Linq.IGrouping<int, TableData.TableData_Gachabonus> v);
        /*0xcc869c*/ int <Init>b__255_190(TableData.TableData_Gachadroppattern k);
        /*0xcc86b4*/ TableData.TableData_Gachadroppattern <Init>b__255_191(TableData.TableData_Gachadroppattern v);
        /*0xcc86bc*/ int <Init>b__255_192(TableData.TableData_Highdroprate k);
        /*0xcc86d4*/ TableData.TableData_Highdroprate <Init>b__255_193(TableData.TableData_Highdroprate v);
        /*0xcc86dc*/ int <Init>b__255_194(TableData.TableData_Chapter k);
        /*0xcc86f4*/ TableData.TableData_Chapter <Init>b__255_195(TableData.TableData_Chapter v);
        /*0xcc86fc*/ int <Init>b__255_196(TableData.TableData_Hardchapter k);
        /*0xcc8714*/ TableData.TableData_Hardchapter <Init>b__255_197(TableData.TableData_Hardchapter v);
        /*0xcc871c*/ int <Init>b__255_198(TableData.TableData_Stage g);
        /*0xcc8734*/ int <Init>b__255_199(System.Linq.IGrouping<int, TableData.TableData_Stage> k);
        /*0xcc87dc*/ System.Collections.Generic.List<TableData.TableData_Stage> <Init>b__255_200(System.Linq.IGrouping<int, TableData.TableData_Stage> v);
        /*0xcc8828*/ string <Init>b__255_201(TableData.TableData_Stage k);
        /*0xcc8840*/ TableData.TableData_Stage <Init>b__255_202(TableData.TableData_Stage v);
        /*0xcc8848*/ int <Init>b__255_203(TableData.TableData_Stage k);
        /*0xcc8860*/ TableData.TableData_Stage <Init>b__255_204(TableData.TableData_Stage v);
        /*0xcc8868*/ int <Init>b__255_205(TableData.TableData_Hardstage g);
        /*0xcc8880*/ int <Init>b__255_206(System.Linq.IGrouping<int, TableData.TableData_Hardstage> k);
        /*0xcc8928*/ System.Collections.Generic.List<TableData.TableData_Hardstage> <Init>b__255_207(System.Linq.IGrouping<int, TableData.TableData_Hardstage> v);
        /*0xcc8974*/ string <Init>b__255_208(TableData.TableData_Hardstage k);
        /*0xcc898c*/ TableData.TableData_Hardstage <Init>b__255_209(TableData.TableData_Hardstage v);
        /*0xcc8994*/ int <Init>b__255_210(TableData.TableData_Hardstage k);
        /*0xcc89ac*/ TableData.TableData_Hardstage <Init>b__255_211(TableData.TableData_Hardstage v);
        /*0xcc89b4*/ int <Init>b__255_212(TableData.TableData_Stageidle k);
        /*0xcc89cc*/ TableData.TableData_Stageidle <Init>b__255_213(TableData.TableData_Stageidle v);
        /*0xcc89d4*/ int <Init>b__255_214(TableData.TableData_Towernormal k);
        /*0xcc89ec*/ TableData.TableData_Towerfloor <Init>b__255_215(TableData.TableData_Towernormal v);
        /*0xcc89f4*/ int <Init>b__255_216(TableData.TableData_Towerfire k);
        /*0xcc8a0c*/ TableData.TableData_Towerfloor <Init>b__255_217(TableData.TableData_Towerfire v);
        /*0xcc8a14*/ int <Init>b__255_218(TableData.TableData_Towerwind k);
        /*0xcc8a2c*/ TableData.TableData_Towerfloor <Init>b__255_219(TableData.TableData_Towerwind v);
        /*0xcc8a34*/ int <Init>b__255_220(TableData.TableData_Towernatural k);
        /*0xcc8a4c*/ TableData.TableData_Towerfloor <Init>b__255_221(TableData.TableData_Towernatural v);
        /*0xcc8a54*/ int <Init>b__255_222(TableData.TableData_Towerwater k);
        /*0xcc8a6c*/ TableData.TableData_Towerfloor <Init>b__255_223(TableData.TableData_Towerwater v);
        /*0xcc8a74*/ int <Init>b__255_224(TableData.TableData_Towernormal k);
        /*0xcc8a8c*/ TableData.TableData_Towerfloor <Init>b__255_225(TableData.TableData_Towernormal v);
        /*0xcc8a94*/ int <Init>b__255_226(TableData.TableData_Towerfire k);
        /*0xcc8aac*/ TableData.TableData_Towerfloor <Init>b__255_227(TableData.TableData_Towerfire v);
        /*0xcc8ab4*/ int <Init>b__255_228(TableData.TableData_Towerwind k);
        /*0xcc8acc*/ TableData.TableData_Towerfloor <Init>b__255_229(TableData.TableData_Towerwind v);
        /*0xcc8ad4*/ int <Init>b__255_230(TableData.TableData_Towernatural k);
        /*0xcc8aec*/ TableData.TableData_Towerfloor <Init>b__255_231(TableData.TableData_Towernatural v);
        /*0xcc8af4*/ int <Init>b__255_232(TableData.TableData_Towerwater k);
        /*0xcc8b0c*/ TableData.TableData_Towerfloor <Init>b__255_233(TableData.TableData_Towerwater v);
        /*0xcc8b14*/ TableData.TableData_Stagebattle <Init>b__255_234(TableData.TableData_Battlecampaign s);
        /*0xcc8b1c*/ TableData.TableData_Stagebattle <Init>b__255_235(TableData.TableData_Battletower s);
        /*0xcc8b24*/ TableData.TableData_Stagebattle <Init>b__255_236(TableData.TableData_Battledungeon s);
        /*0xcc8b2c*/ TableData.TableData_Stagebattle <Init>b__255_237(TableData.TableData_Battleidle s);
        /*0xcc8b34*/ TableData.TableData_Stagebattle <Init>b__255_238(TableData.TableData_Battletutorial s);
        /*0xcc8b3c*/ TableData.TableData_Stagebattle <Init>b__255_239(TableData.TableData_Battleguildboss s);
        /*0xcc8b44*/ TableData.TableData_Stagebattle <Init>b__255_240(TableData.TableData_Battlehardcampaign s);
        /*0xcc8b4c*/ int <Init>b__255_241(TableData.TableData_Stagebattle k);
        /*0xcc8b64*/ TableData.TableData_Stagebattle <Init>b__255_242(TableData.TableData_Stagebattle v);
        /*0xcc8b6c*/ int <Init>b__255_243(TableData.TableData_Item k);
        /*0xcc8b84*/ TableData.TableData_Item <Init>b__255_244(TableData.TableData_Item v);
        /*0xcc8b8c*/ int <Init>b__255_245(TableData.TableData_Item k);
        /*0xcc8ba4*/ string <Init>b__255_246(TableData.TableData_Item v);
        /*0xcc8bbc*/ string <Init>b__255_247(TableData.TableData_Item g);
        /*0xcc8bd4*/ ItemType <Init>b__255_248(System.Linq.IGrouping<string, TableData.TableData_Item> k);
        /*0xcc8cd4*/ System.Collections.Generic.List<TableData.TableData_Item> <Init>b__255_249(System.Linq.IGrouping<string, TableData.TableData_Item> v);
        /*0xcc8d20*/ int <Init>b__255_250(TableData.TableData_Userlvexp k);
        /*0xcc8d38*/ TableData.TableData_Userlvexp <Init>b__255_251(TableData.TableData_Userlvexp v);
        /*0xcc8d40*/ int <Init>b__255_252(TableData.TableData_Fastidle k);
        /*0xcc8d58*/ TableData.TableData_Fastidle <Init>b__255_253(TableData.TableData_Fastidle v);
        /*0xcc8d60*/ int <Init>b__255_254(TableData.TableData_Arenarank k);
        /*0xcc8d78*/ TableData.TableData_Arenarank <Init>b__255_255(TableData.TableData_Arenarank v);
        /*0xcc8d80*/ int <Init>b__255_256(TableData.TableData_Chest k);
        /*0xcc8d98*/ System.ValueTuple<TableData.TableData_Chest, System.Int32[]> <Init>b__255_257(TableData.TableData_Chest v);
        /*0xcc8ef8*/ ContentType <Init>b__255_258(TableData.TableData_Contenthelp k);
        /*0xcc8f80*/ TableData.TableData_Contenthelp <Init>b__255_259(TableData.TableData_Contenthelp v);
        /*0xcc8f88*/ int <Init>b__255_260(TableData.TableData_Contentunlock k);
        /*0xcc8fa0*/ TableData.TableData_Contentunlock <Init>b__255_261(TableData.TableData_Contentunlock v);
        /*0xcc8fa8*/ ContentType <Init>b__255_262(TableData.TableData_Contentunlock k);
        /*0xcc9030*/ TableData.TableData_Contentunlock <Init>b__255_263(TableData.TableData_Contentunlock v);
        /*0xcc9038*/ int <Init>b__255_264(TableData.TableData_Mazemateequip k);
        /*0xcc9050*/ TableData.TableData_Mazemateequip <Init>b__255_265(TableData.TableData_Mazemateequip v);
        /*0xcc9058*/ System.ValueTuple<int, int, int> <Init>b__255_266(TableData.TableData_Mazebattle k);
        /*0xcc9134*/ TableData.TableData_Mazebattle <Init>b__255_267(TableData.TableData_Mazebattle v);
        /*0xcc913c*/ int <Init>b__255_268(TableData.TableData_Mazebattle k);
        /*0xcc9154*/ TableData.TableData_Mazebattle <Init>b__255_269(TableData.TableData_Mazebattle v);
        /*0xcc915c*/ int <Init>b__255_270(TableData.TableData_Mazecourse g);
        /*0xcc9174*/ int <Init>b__255_271(System.Linq.IGrouping<int, TableData.TableData_Mazecourse> k);
        /*0xcc921c*/ System.Collections.Generic.List<TableData.TableData_Mazecourse> <Init>b__255_272(System.Linq.IGrouping<int, TableData.TableData_Mazecourse> v);
        /*0xcc9268*/ int <Init>b__255_273(TableData.TableData_Cashshopinstant k);
        /*0xcc9280*/ TableData.TableData_Cashshopinstant <Init>b__255_274(TableData.TableData_Cashshopinstant v);
        /*0xcc9288*/ string <Init>b__255_275(TableData.TableData_Packagetime g);
        /*0xcc92a0*/ string <Init>b__255_276(System.Linq.IGrouping<string, TableData.TableData_Packagetime> k);
        /*0xcc9348*/ System.Collections.Generic.List<TableData.TableData_Packagetime> <Init>b__255_277(System.Linq.IGrouping<string, TableData.TableData_Packagetime> v);
        /*0xcc9394*/ string <Init>b__255_278(TableData.TableData_Packageproductgroup g);
        /*0xcc93ac*/ string <Init>b__255_279(System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup> k);
        /*0xcc9454*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> <Init>b__255_280(System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup> v);
        /*0xcc94a0*/ string <Init>b__255_281(TableData.TableData_Cashshopquestreward g);
        /*0xcc94b8*/ string <Init>b__255_282(System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward> k);
        /*0xcc9560*/ System.Collections.Generic.List<TableData.TableData_Cashshopquestreward> <Init>b__255_283(System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward> v);
        /*0xcc95ac*/ int <Init>b__255_284(TableData.TableData_Cashshopquestreward k);
        /*0xcc95c4*/ TableData.TableData_Cashshopquestreward <Init>b__255_285(TableData.TableData_Cashshopquestreward v);
        /*0xcc95cc*/ int <Init>b__255_286(TableData.TableData_Demodata k);
        /*0xcc95e4*/ TableData.TableData_Demodata <Init>b__255_287(TableData.TableData_Demodata v);
        /*0xcc95ec*/ int <Init>b__255_288(TableData.TableData_Contentshoparrangement g);
        /*0xcc9604*/ int <Init>b__255_289(System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement> k);
        /*0xcc96ac*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Contentshoparrangement> <Init>b__255_290(System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement> v);
        /*0xcc9878*/ int <Init>b__255_484(TableData.TableData_Contentshoparrangement a);
        /*0xcc9890*/ TableData.TableData_Contentshoparrangement <Init>b__255_485(TableData.TableData_Contentshoparrangement b);
        /*0xcc9898*/ int <Init>b__255_291(TableData.TableData_Idleunittipdialog k);
        /*0xcc98b0*/ TableData.TableData_Idleunittipdialog <Init>b__255_292(TableData.TableData_Idleunittipdialog v);
        /*0xcc98b8*/ TopMenuType <Init>b__255_293(TableData.TableData_Menusettingbase k);
        /*0xcc9940*/ TableData.TableData_Menusettingbase <Init>b__255_294(TableData.TableData_Menusettingbase v);
        /*0xcc9948*/ bool <Init>b__255_295(TableData.TableData_Profileskin x);
        /*0xcc9968*/ int <Init>b__255_296(TableData.TableData_Worldarenatier2 k);
        /*0xcc9980*/ TableData.TableData_Worldarenatier2 <Init>b__255_297(TableData.TableData_Worldarenatier2 v);
        /*0xcc9988*/ int <Init>b__255_298(TableData.TableData_Unitbase k);
        /*0xcc99a0*/ int <Init>b__255_300(TableData.TableData_Eventcurrencylocal k);
        /*0xcc99b8*/ TableData.TableData_Eventcurrencylocal <Init>b__255_301(TableData.TableData_Eventcurrencylocal v);
        /*0xcc99c0*/ string <Init>b__255_302(TableData.TableData_Eventpass k);
        /*0xcc99e4*/ int <Init>b__255_303(TableData.TableData_Eventpass v);
        /*0xcc99fc*/ string <Init>b__255_304(TableData.TableData_Eventpass k);
        /*0xcc9a20*/ int <Init>b__255_305(TableData.TableData_Eventpass v);
        /*0xcc9a38*/ int <Init>b__255_306(TableData.TableData_Eventpage g);
        /*0xcc9a50*/ int <Init>b__255_307(System.Linq.IGrouping<int, TableData.TableData_Eventpage> k);
        /*0xcc9af8*/ System.Collections.Generic.List<TableData.TableData_Eventpage> <Init>b__255_308(System.Linq.IGrouping<int, TableData.TableData_Eventpage> v);
        /*0xcc9b44*/ int <Init>b__255_309(TableData.TableData_Eventhottime k);
        /*0xcc9b5c*/ TableData.TableData_Eventhottime <Init>b__255_310(TableData.TableData_Eventhottime v);
        /*0xcc9b64*/ string <Init>b__255_311(TableData.TableData_Eventcurrencylocal g);
        /*0xcc9c04*/ string <Init>b__255_312(System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal> k);
        /*0xcc9cac*/ System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>> <Init>b__255_313(System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal> v);
        /*0xcc9de0*/ System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]> <Init>b__255_487(TableData.TableData_Eventcurrencylocal s);
        /*0xcc9ea8*/ int <Init>b__255_314(TableData.TableData_Eventpreset k);
        /*0xcc9ec0*/ TableData.TableData_Eventpreset <Init>b__255_315(TableData.TableData_Eventpreset v);
        /*0xcc9ec8*/ int <Init>b__255_316(TableData.TableData_Eventmissionpoint g);
        /*0xcc9ee0*/ int <Init>b__255_317(System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint> k);
        /*0xcc9f88*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> <Init>b__255_318(System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint> v);
        /*0xcc9fd4*/ int <Init>b__255_319(TableData.TableData_Eventexchange g);
        /*0xcc9fec*/ int <Init>b__255_320(System.Linq.IGrouping<int, TableData.TableData_Eventexchange> k);
        /*0xcca094*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> <Init>b__255_321(System.Linq.IGrouping<int, TableData.TableData_Eventexchange> v);
        /*0xcca0e0*/ int <Init>b__255_322(TableData.TableData_Eventbuyinapp k);
        /*0xcca0f8*/ TableData.TableData_Eventbuyinapp <Init>b__255_323(TableData.TableData_Eventbuyinapp v);
        /*0xcca100*/ int <Init>b__255_324(TableData.TableData_Eventquest g);
        /*0xcca118*/ int <Init>b__255_325(System.Linq.IGrouping<int, TableData.TableData_Eventquest> k);
        /*0xcca1c0*/ System.Collections.Generic.List<TableData.TableData_Eventquest> <Init>b__255_326(System.Linq.IGrouping<int, TableData.TableData_Eventquest> v);
        /*0xcca20c*/ string <Init>b__255_327(TableData.TableData_Eventquestgroup g);
        /*0xcca224*/ string <Init>b__255_328(System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup> k);
        /*0xcca2cc*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> <Init>b__255_329(System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup> v);
        /*0xcca318*/ int <Init>b__255_330(TableData.TableData_Eventquestgroup k);
        /*0xcca330*/ TableData.TableData_Eventquestgroup <Init>b__255_331(TableData.TableData_Eventquestgroup v);
        /*0xcca338*/ int <Init>b__255_332(TableData.TableData_Eventroulette g);
        /*0xcca350*/ int <Init>b__255_333(System.Linq.IGrouping<int, TableData.TableData_Eventroulette> k);
        /*0xcca3f8*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> <Init>b__255_334(System.Linq.IGrouping<int, TableData.TableData_Eventroulette> v);
        /*0xcca444*/ int <Init>b__255_335(TableData.TableData_Eventboss k);
        /*0xcca45c*/ TableData.TableData_Eventboss <Init>b__255_336(TableData.TableData_Eventboss v);
        /*0xcca464*/ int <Init>b__255_337(TableData.TableData_Eventboss k);
        /*0xcca47c*/ TableData.TableData_Eventboss <Init>b__255_338(TableData.TableData_Eventboss v);
        /*0xcca484*/ int <Init>b__255_339(TableData.TableData_Eventbossreward g);
        /*0xcca49c*/ int <Init>b__255_340(System.Linq.IGrouping<int, TableData.TableData_Eventbossreward> k);
        /*0xcca544*/ System.Collections.Generic.List<TableData.TableData_Eventbossreward> <Init>b__255_341(System.Linq.IGrouping<int, TableData.TableData_Eventbossreward> v);
        /*0xcca590*/ int <Init>b__255_342(TableData.TableData_Eventcomplete g);
        /*0xcca5a8*/ int <Init>b__255_343(System.Linq.IGrouping<int, TableData.TableData_Eventcomplete> k);
        /*0xcca650*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> <Init>b__255_344(System.Linq.IGrouping<int, TableData.TableData_Eventcomplete> v);
        /*0xcca69c*/ int <Init>b__255_345(TableData.TableData_Eventcompletemission g);
        /*0xcca6b4*/ int <Init>b__255_346(System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission> k);
        /*0xcca75c*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> <Init>b__255_347(System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission> v);
        /*0xcca7a8*/ string <Init>b__255_348(TableData.TableData_Config k);
        /*0xcca7cc*/ string <Init>b__255_349(TableData.TableData_Config v);
        /*0xcca7e4*/ bool <Init>b__255_350(TableData.TableData_Config w);
        /*0xcca81c*/ string <Init>b__255_351(TableData.TableData_Config k);
        /*0xcca840*/ int <Init>b__255_352(TableData.TableData_Config v);
        /*0xcca85c*/ int <Init>b__255_353(TableData.TableData_Guildlevel k);
        /*0xcca874*/ TableData.TableData_Guildlevel <Init>b__255_354(TableData.TableData_Guildlevel v);
        /*0xcca87c*/ int <Init>b__255_355(TableData.TableData_Guildhuntingreward g);
        /*0xcca894*/ int <Init>b__255_356(System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward> k);
        /*0xcca93c*/ System.Collections.Generic.List<TableData.TableData_Guildhuntingreward> <Init>b__255_357(System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward> v);
        /*0xcca988*/ string <Init>b__255_358(TableData.TableData_Guildwar k);
        /*0xcca9a0*/ string <Init>b__255_359(TableData.TableData_Guildwar v);
        /*0xcca9b8*/ PTShare.Define.GuildWarPosition <Init>b__255_360(TableData.TableData_Guildwarorganize g);
        /*0xccaa40*/ PTShare.Define.GuildWarPosition <Init>b__255_361(System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize> k);
        /*0xccaae8*/ System.Collections.Generic.List<TableData.TableData_Guildwarorganize> <Init>b__255_362(System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize> v);
        /*0xccab34*/ int <Init>b__255_363(TableData.TableData_Guildwarrank g);
        /*0xccab4c*/ int <Init>b__255_364(System.Linq.IGrouping<int, TableData.TableData_Guildwarrank> k);
        /*0xccabf4*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> <Init>b__255_365(System.Linq.IGrouping<int, TableData.TableData_Guildwarrank> v);
        /*0xccac40*/ string <Init>b__255_366(TableData.TableData_Guildwarrankreward k);
        /*0xccac58*/ TableData.TableData_Guildwarrankreward <Init>b__255_367(TableData.TableData_Guildwarrankreward v);
        /*0xccac60*/ int <Init>b__255_368(TableData.TableData_Guildwartactic k);
        /*0xccac78*/ TableData.TableData_Guildwartactic <Init>b__255_369(TableData.TableData_Guildwartactic v);
        /*0xccac80*/ int <Init>b__255_370(TableData.TableData_Vip k);
        /*0xccac98*/ TableData.TableData_Vip <Init>b__255_371(TableData.TableData_Vip v);
        /*0xccaca0*/ int <Init>b__255_372(TableData.TableData_Bountyquest k);
        /*0xccacb8*/ TableData.TableData_Bountyquest <Init>b__255_373(TableData.TableData_Bountyquest v);
        /*0xccacc0*/ int <Init>b__255_374(TableData.TableData_Bountylv k);
        /*0xccacd8*/ TableData.TableData_Bountylv <Init>b__255_375(TableData.TableData_Bountylv v);
        /*0xccace0*/ int <Init>b__255_376(TableData.TableData_Dungeon k);
        /*0xccacf8*/ TableData.TableData_Dungeon <Init>b__255_377(TableData.TableData_Dungeon v);
        /*0xccad00*/ int <Init>b__255_378(TableData.TableData_Dungeongroup g);
        /*0xccad18*/ int <Init>b__255_379(System.Linq.IGrouping<int, TableData.TableData_Dungeongroup> k);
        /*0xccadc0*/ System.Collections.Generic.List<TableData.TableData_Dungeongroup> <Init>b__255_380(System.Linq.IGrouping<int, TableData.TableData_Dungeongroup> v);
        /*0xccae0c*/ int <Init>b__255_381(TableData.TableData_Dungeonmap g);
        /*0xccae24*/ int <Init>b__255_382(System.Linq.IGrouping<int, TableData.TableData_Dungeonmap> k);
        /*0xccaecc*/ System.Collections.Generic.List<TableData.TableData_Dungeonmap> <Init>b__255_383(System.Linq.IGrouping<int, TableData.TableData_Dungeonmap> v);
        /*0xccaf18*/ int <Init>b__255_384(TableData.TableData_Dungeontile k);
        /*0xccaf30*/ TableData.TableData_Dungeontile <Init>b__255_385(TableData.TableData_Dungeontile v);
        /*0xccaf38*/ int <Init>b__255_386(TableData.TableData_Dungeonmateequip k);
        /*0xccaf50*/ TableData.TableData_Dungeonmateequip <Init>b__255_387(TableData.TableData_Dungeonmateequip v);
        /*0xccaf58*/ int <Init>b__255_388(TableData.TableData_Dungeondialog g);
        /*0xccaf70*/ int <Init>b__255_389(System.Linq.IGrouping<int, TableData.TableData_Dungeondialog> k);
        /*0xccb018*/ System.Collections.Generic.List<TableData.TableData_Dungeondialog> <Init>b__255_390(System.Linq.IGrouping<int, TableData.TableData_Dungeondialog> v);
        /*0xccb064*/ int <Init>b__255_391(TableData.TableData_Dungeonreward g);
        /*0xccb07c*/ int <Init>b__255_392(System.Linq.IGrouping<int, TableData.TableData_Dungeonreward> k);
        /*0xccb124*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> <Init>b__255_393(System.Linq.IGrouping<int, TableData.TableData_Dungeonreward> v);
        /*0xccb170*/ int <Init>b__255_394(TableData.TableData_Dungeondialogdirection g);
        /*0xccb188*/ int <Init>b__255_395(System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection> k);
        /*0xccb230*/ System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection> <Init>b__255_396(System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection> v);
        /*0xccb27c*/ int <Init>b__255_397(TableData.TableData_Runlife k);
        /*0xccb294*/ TableData.TableData_Runlife <Init>b__255_398(TableData.TableData_Runlife v);
        /*0xccb29c*/ int <Init>b__255_399(TableData.TableData_Runreward k);
        /*0xccb2b4*/ TableData.TableData_Runreward <Init>b__255_400(TableData.TableData_Runreward v);
        /*0xccb2bc*/ bool <Init>b__255_401(TableData.TableData_Relation x);
        /*0xccb2dc*/ int <Init>b__255_402(TableData.TableData_Worldbossstep k);
        /*0xccb2f4*/ TableData.TableData_Worldbossstep <Init>b__255_403(TableData.TableData_Worldbossstep v);
        /*0xccb2fc*/ int <Init>b__255_404(TableData.TableData_Worldbossmission g);
        /*0xccb314*/ int <Init>b__255_405(System.Linq.IGrouping<int, TableData.TableData_Worldbossmission> k);
        /*0xccb3bc*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> <Init>b__255_406(System.Linq.IGrouping<int, TableData.TableData_Worldbossmission> v);
        /*0xccb408*/ int <Init>b__255_407(TableData.TableData_Pvenoblity k);
        /*0xccb420*/ TableData.TableData_Pvenoblity <Init>b__255_408(TableData.TableData_Pvenoblity v);
        /*0xccb428*/ int <Init>b__255_409(TableData.TableData_Pvechallenge g);
        /*0xccb440*/ int <Init>b__255_410(System.Linq.IGrouping<int, TableData.TableData_Pvechallenge> k);
        /*0xccb4e8*/ System.Collections.Generic.List<TableData.TableData_Pvechallenge> <Init>b__255_411(System.Linq.IGrouping<int, TableData.TableData_Pvechallenge> v);
        /*0xccb534*/ int <Init>b__255_412(TableData.TableData_Pveclearreward k);
        /*0xccb54c*/ TableData.TableData_Pveclearreward <Init>b__255_413(TableData.TableData_Pveclearreward v);
        /*0xccb554*/ string <Init>b__255_414(TableData.TableData_Housing k);
        /*0xccb578*/ string <Init>b__255_415(TableData.TableData_Housing v);
        /*0xccb590*/ int <Init>b__255_416(TableData.TableData_Housingfloor k);
        /*0xccb5a8*/ TableData.TableData_Housingfloor <Init>b__255_417(TableData.TableData_Housingfloor v);
        /*0xccb5b0*/ int <Init>b__255_418(TableData.TableData_Housingfloor k);
        /*0xccb5c8*/ int <Init>b__255_419(TableData.TableData_Housinggacha g);
        /*0xccb5e0*/ int <Init>b__255_420(System.Linq.IGrouping<int, TableData.TableData_Housinggacha> k);
        /*0xccb688*/ System.Collections.Generic.List<TableData.TableData_Housinggacha> <Init>b__255_421(System.Linq.IGrouping<int, TableData.TableData_Housinggacha> v);
        /*0xccb6d4*/ int <Init>b__255_422(TableData.TableData_Housinggacha k);
        /*0xccb6ec*/ int <Init>b__255_423(TableData.TableData_Furniture k);
        /*0xccb704*/ TableData.TableData_Furniture <Init>b__255_424(TableData.TableData_Furniture v);
        /*0xccb70c*/ string <Init>b__255_425(TableData.TableData_Furnitureleveltypelist g);
        /*0xccb724*/ string <Init>b__255_426(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> k);
        /*0xccb7cc*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> <Init>b__255_427(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> v);
        /*0xccb818*/ string <Init>b__255_428(TableData.TableData_Furnitureleveltypelist g);
        /*0xccb830*/ string <Init>b__255_429(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> k);
        /*0xccb8d8*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> <Init>b__255_430(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> v);
        /*0xccb924*/ string <Init>b__255_431(TableData.TableData_Furnitureeffecttype k);
        /*0xccb93c*/ TableData.TableData_Furnitureeffecttype <Init>b__255_432(TableData.TableData_Furnitureeffecttype v);
        /*0xccb944*/ int <Init>b__255_433(TableData.TableData_Furnitureshoplist g);
        /*0xccb95c*/ int <Init>b__255_434(System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist> k);
        /*0xccba04*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> <Init>b__255_435(System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist> v);
        /*0xccba50*/ int <Init>b__255_436(TableData.TableData_Furnitureshoplist k);
        /*0xccba68*/ TableData.TableData_Furnitureshoplist <Init>b__255_437(TableData.TableData_Furnitureshoplist v);
        /*0xccba70*/ string <Init>b__255_438(TableData.TableData_Housingfloorpattern k);
        /*0xccba88*/ TableData.TableData_Housingfloorpattern <Init>b__255_439(TableData.TableData_Housingfloorpattern v);
        /*0xccba90*/ int <Init>b__255_440(TableData.TableData_Furniturecontentseffect k);
        /*0xccbaa8*/ TableData.TableData_Furniturecontentseffect <Init>b__255_441(TableData.TableData_Furniturecontentseffect v);
        /*0xccbab0*/ int <Init>b__255_442(TableData.TableData_Furnitureheroeffect k);
        /*0xccbac8*/ TableData.TableData_Furnitureheroeffect <Init>b__255_443(TableData.TableData_Furnitureheroeffect v);
        /*0xccbad0*/ int <Init>b__255_444(TableData.TableData_Furniturelevelup k);
        /*0xccbae8*/ TableData.TableData_Furniturelevelup <Init>b__255_445(TableData.TableData_Furniturelevelup v);
        /*0xccbaf0*/ string <Init>b__255_446(TableData.TableData_Furnitureexp k);
        /*0xccbb08*/ TableData.TableData_Furnitureexp <Init>b__255_447(TableData.TableData_Furnitureexp v);
        /*0xccbb10*/ int <Init>b__255_448(TableData.TableData_Abilitypercent k);
        /*0xccbb28*/ TableData.TableData_Abilitypercent <Init>b__255_449(TableData.TableData_Abilitypercent v);
        /*0xccbb30*/ string <Init>b__255_450(TableData.TableData_Abilityoptionvalue g);
        /*0xccbb48*/ string <Init>b__255_451(System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue> k);
        /*0xccbbf0*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> <Init>b__255_452(System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue> v);
        /*0xccbc3c*/ int <Init>b__255_453(TableData.TableData_Abilityoptionvalue k);
        /*0xccbc54*/ TableData.TableData_Abilityoptionvalue <Init>b__255_454(TableData.TableData_Abilityoptionvalue v);
        /*0xccbc5c*/ string <Init>b__255_455(TableData.TableData_Abilityreset k);
        /*0xccbc74*/ TableData.TableData_Abilityreset <Init>b__255_456(TableData.TableData_Abilityreset v);
    }
}

class GameDataManager : Singleton.Data.SingletonData<GameDataManager>
{
    /*0x20*/ PathGroup MapPath;
    /*0x28*/ SystemData System;
    /*0x30*/ SpineData Spine;
    /*0x38*/ TableData.TableGroup mTableGroup;

    static /*0xecb644*/ string <InitInstance>g__Version|4_1();
    /*0xecc154*/ GameDataManager();
    /*0xecab0c*/ bool InitInstance();
    /*0xecb69c*/ void ReleaseInstance();
    /*0xecb6a0*/ void InitGameDataManager();
    /*0xecb838*/ void InitializeMapPath();
    /*0xecb8b0*/ Spine.Unity.SkeletonDataAsset GetSpineAsset(string _name);
    /*0xecb8cc*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindSkillList(int _casterId, bool _ignoreDefault);
    /*0xecb8e0*/ System.Collections.Generic.List<PathData> GetMapPath(int _mapIndex);
    /*0xecb8fc*/ int GetCurSkillLV(int _nUnitID, int _nCurTier, int _nSkillSlot);
    /*0xecb9b4*/ bool IsRangerClassMelee(int _nUnitID);
    /*0xecba44*/ System.Collections.Generic.List<TableData.TableData_Skillfx> GetSkillFXList2(int _nSkillID, int _nSkillLV);
    /*0xecbdac*/ System.Collections.Generic.List<TableData.TableData_Skillfx> GetSkillFXList(int _nSkillID, int _nSkillLV);
    /*0xecc0b0*/ TableData.TableData_Skillfx FindSkillFXData(int _nSkillFXID, int _nSkillLV);

    class <>c
    {
        static /*0x0*/ GameDataManager.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__4_0;
        static /*0x10*/ System.Func<string, bool> <>9__4_2;
        static /*0x18*/ System.Func<string, string> <>9__4_3;
        static /*0x20*/ System.Action<bool> <>9__4_4;
        static /*0x28*/ System.Func<TableData.TableData_Skillfx, int> <>9__13_0;
        static /*0x30*/ System.Func<TableData.TableData_Skillfx, int> <>9__13_6;
        static /*0x38*/ System.Func<TableData.TableData_Skillfx, int> <>9__13_3;

        static /*0xf67f64*/ <>c();
        /*0xf67fc4*/ <>c();
        /*0xf67fcc*/ void <InitInstance>b__4_0(bool r);
        /*0xf68028*/ bool <InitInstance>b__4_2(string w);
        /*0xf680b8*/ string <InitInstance>b__4_3(string s);
        /*0xf681b4*/ void <InitInstance>b__4_4(bool r);
        /*0xf68210*/ int <GetSkillFXList2>b__13_0(TableData.TableData_Skillfx g);
        /*0xf68228*/ int <GetSkillFXList2>b__13_6(TableData.TableData_Skillfx o);
        /*0xf68240*/ int <GetSkillFXList2>b__13_3(TableData.TableData_Skillfx o);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ int _nSkillLV;
        /*0x18*/ System.Func<TableData.TableData_Skillfx, bool> <>9__4;
        /*0x20*/ System.Func<TableData.TableData_Skillfx, bool> <>9__5;

        /*0xf68258*/ <>c__DisplayClass13_0();
        /*0xf68260*/ bool <GetSkillFXList2>b__1(System.Linq.IGrouping<int, TableData.TableData_Skillfx> w);
        /*0xf6832c*/ bool <GetSkillFXList2>b__4(TableData.TableData_Skillfx c);
        /*0xf68350*/ TableData.TableData_Skillfx <GetSkillFXList2>b__2(System.Linq.IGrouping<int, TableData.TableData_Skillfx> s);
        /*0xf6851c*/ bool <GetSkillFXList2>b__5(TableData.TableData_Skillfx w);
    }
}

class CData
{
    /*0x133a754*/ CData();
    int CalculateCRC();
    /*0x133a130*/ int getDataLength(object _value);
    /*0x133a1f8*/ string readString(byte[] _data, ref int _offset);
    /*0x133a320*/ float readFloat(byte[] _data, ref int _offset);
    /*0x133a3a8*/ short readInt16(byte[] _data, ref int _offset);
    /*0x133a430*/ int readInt32(byte[] _data, ref int _offset);
    /*0x133a4b8*/ void writeString(string _value, byte[] _dest, ref int _offset);
    /*0x133a614*/ void writeFloat(float _value, byte[] _dest, ref int _offset);
    /*0x133a578*/ void writeInt16(short _value, byte[] _dest, ref int _offset);
    /*0x133a6b8*/ void writeInt32(int _value, byte[] _dest, ref int _offset);
}

enum ENCRYPT_TYPE
{
    INT = 0,
    FLOAT = 1,
    STRING = 2,
}

class CEncryptBase
{
    /*0x133a75c*/ CEncryptBase();
    ENCRYPT_TYPE get_Type();
}

class CEncrypt<T> : CEncryptBase
{
    static /*0x0*/ int index;
    static /*0x0*/ int dummy;
    /*0x0*/ byte[] data1;
    /*0x0*/ byte[] data2;
    /*0x0*/ byte crc;
    /*0x0*/ bool isValid;
    /*0x0*/ byte[] seedAry;

    static CEncrypt();
    CEncrypt();
    T get();
    void set(T value);
    bool get_IsValid();
    T get_Value();
    void set_Value(T value);
    string ToString();
    string ToEncrypedString();
    void Load(string _data);
    bool checkCRC();
    void updateCRC();
    void Seed();
    byte getSeedValue(int _index);
}

class CEncryptErrorReport : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GUIStyle style;
    /*0x20*/ UnityEngine.Rect rect;
    /*0x30*/ float remainTime;

    /*0x133aab0*/ CEncryptErrorReport();
    /*0x133a764*/ void Awake();
    /*0x133a8cc*/ void Start();
    /*0x133a8d8*/ void OnGUI();
    /*0x133a9fc*/ void Update();
}

class CEncryptErrors
{
    static /*0x0*/ CEncryptErrors _instance;
    /*0x10*/ System.Collections.Generic.Dictionary<DefineHack.LT_ABUSE_TYPE, CEncryptErrors.ErrorData> mErrors;

    static /*0x133b110*/ CEncryptErrors();
    static /*0x133aab8*/ CEncryptErrors get_Instance();
    /*0x133b098*/ CEncryptErrors();
    /*0x133ab1c*/ int get_Item(DefineHack.LT_ABUSE_TYPE _error);
    /*0x133aba4*/ CEncryptErrors.ErrorData get_CurrentError();
    /*0x133acd4*/ int get_ErrorCount();
    /*0x133ae04*/ void Clear();
    /*0x133ae58*/ void ShowErrors();
    /*0x133af98*/ void Add(DefineHack.LT_ABUSE_TYPE _error, string _message);

    class ErrorData
    {
        /*0x10*/ DefineHack.LT_ABUSE_TYPE AbuseType;
        /*0x18*/ string LastError;
        /*0x20*/ int Count;

        /*0xda5828*/ ErrorData();
    }
}

class CEncryptEx<T>
{
    static /*0x0*/ int index;
    /*0x0*/ int[] data1;
    /*0x0*/ int[] data2;
    /*0x0*/ bool isValid;
    /*0x0*/ int crc;
    /*0x0*/ byte[] seedAry;

    static CEncryptEx();
    CEncryptEx();
    T get();
    void set(T value);
    bool get_IsValid();
    T get_Value();
    void set_Value(T value);
    void Init(int[] _data1, int[] _data2);
    void seed();
    int getSeedValue();
}

class CEncryptUtil
{
    static /*0x0*/ byte[] encryptData;
    static /*0x8*/ byte[] decryptData;

    static /*0x133d1c4*/ CEncryptUtil();
    static /*0x133b16c*/ int GetCRC(CInt _obj);
    static /*0x133b1fc*/ int GetCRC(int _value);
    static /*0x133b2c4*/ int GetCRC(CFloat _obj);
    static /*0x133b358*/ int GetCRC(float _value);
    static /*0x133b420*/ int GetCRC(string _value);
    static /*0x133b4b0*/ int GetCRC(byte[] _value, int _length);
    static /*0x133b5b8*/ bool GetCRC_FileEx(string _fileName, ref int _crc);
    static /*0x133b8b0*/ bool ReadCRC(string _fileName, ref int _crc);
    static /*0x133ba74*/ bool GetCRC_File(string _fileName, ref int _crc);
    static /*0x133bce4*/ bool EncryptFile(string _readFilePath, string _writeFilePath);
    static /*0x133c1f8*/ bool DecryptFile(string _readFilePath, string _writeFilePath);
    static /*0x133c69c*/ string Base64Encode(byte[] _source);
    static /*0x133c77c*/ byte[] Base64Decode(string _base64);
    static /*0x133c864*/ byte[] Encrypt(string _source);
    static /*0x133c9ac*/ string Decrypt(byte[] _data);
    static /*0x133c0dc*/ int Encrypt(byte[] _from, ref byte[] _dest, int _length);
    static /*0x133c580*/ int Decrypt(byte[] _from, ref byte[] _dest, int _length);
    static /*0x133cad8*/ string EncryptEx(string _source);
    static /*0x133cdd4*/ string DecryptEx(string _encrypt);
    /*0x133d1bc*/ CEncryptUtil();
}

class CFloat : CEncrypt<float>
{
    static /*0x0*/ byte[] temp;

    static /*0x133d840*/ CFloat();
    static /*0x133d2a0*/ float op_Implicit(CFloat obj);
    static /*0x133d2b8*/ string op_Implicit(CFloat obj);
    static /*0x133d33c*/ CFloat op_Implicit(float _value);
    static /*0x133d458*/ CFloat op_Implicit(string _encrypt);
    /*0x133d4dc*/ CFloat();
    /*0x133d3a0*/ CFloat(float _value);
    /*0x133d298*/ ENCRYPT_TYPE get_Type();
    /*0x133d55c*/ float get();
    /*0x133d6ec*/ void set(float value);
}

class CFloatEx : CEncryptEx<float>
{
    static /*0x133d8ac*/ float op_Implicit(CFloatEx obj);
    static /*0x133d8c4*/ CFloatEx op_Implicit(float _value);
    /*0x133d9e0*/ CFloatEx();
    /*0x133d928*/ CFloatEx(float _value);
    /*0x133da60*/ float get();
    /*0x133dd20*/ void set(float value);
}

class CInt : CEncrypt<int>
{
    static /*0x0*/ byte[] temp;

    static /*0x133e6b8*/ CInt();
    static /*0x133dfcc*/ int op_Implicit(CInt obj);
    static /*0x133dfe0*/ string op_Implicit(CInt obj);
    static /*0x133e064*/ CInt op_Implicit(int _value);
    static /*0x133e178*/ CInt op_Implicit(string _encrypt);
    /*0x133e254*/ CInt();
    /*0x133e0c0*/ CInt(int _value);
    /*0x133dfc4*/ ENCRYPT_TYPE get_Type();
    /*0x133e2d4*/ int get();
    /*0x133e56c*/ void set(int value);
}

class CIntEx : CEncryptEx<int>
{
    static /*0x133e724*/ float op_Implicit(CIntEx obj);
    static /*0x133e750*/ CIntEx op_Implicit(int _value);
    /*0x133e864*/ CIntEx();
    /*0x133e7ac*/ CIntEx(int _value);
    /*0x133e8e4*/ int get();
    /*0x133eb28*/ void set(int value);
}

class CString : CEncryptBase
{
    /*0x10*/ byte[] data;

    static /*0x1341068*/ CString op_Implicit(string value);
    static /*0x1341100*/ string op_Implicit(CString obj);
    /*0x13410d0*/ CString(string _value);
    /*0x1341060*/ ENCRYPT_TYPE get_Type();
    /*0x134116c*/ string ToString();
    /*0x134125c*/ void SetString(string value);
}

class CStringEx
{
    /*0x10*/ string data;

    static /*0x13413c0*/ string op_Implicit(CStringEx obj);
    /*0x1341574*/ CStringEx();
    /*0x13415d4*/ CStringEx(string _value);
    /*0x1341348*/ int GetHashCode();
    /*0x1341380*/ bool Equals(object obj);
    /*0x1341374*/ string get_Value();
    /*0x13413dc*/ void set_Value(string value);
    /*0x1341450*/ string ToString();
    /*0x1341604*/ void SetString(string value);
}

class SFloat
{
    static /*0x0*/ byte[] temp;
    /*0x10*/ byte[] data1;
    /*0x18*/ byte[] data2;

    static /*0x1297fcc*/ SFloat();
    static /*0x129796c*/ float op_Implicit(SFloat obj);
    static /*0x1297c1c*/ SFloat op_Implicit(float _value);
    /*0x1297d0c*/ SFloat();
    /*0x1297c80*/ SFloat(float _value);
    /*0x1297fc8*/ float get_Value();
    /*0x129797c*/ float get();
    /*0x1297e3c*/ void set(float value);
    /*0x1297d80*/ void seed();
}

class SInt
{
    static /*0x0*/ byte[] temp;
    /*0x10*/ byte[] data1;
    /*0x18*/ byte[] data2;

    static /*0x1298f90*/ SInt();
    static /*0x1298920*/ int op_Implicit(SInt obj);
    static /*0x1298bcc*/ ulong op_Implicit(SInt obj);
    static /*0x1298be8*/ SInt op_Implicit(int _value);
    /*0x1298cd0*/ SInt();
    /*0x1298c44*/ SInt(int _value);
    /*0x1298f8c*/ int get_Value();
    /*0x129892c*/ int get();
    /*0x1298e00*/ void set(int value);
    /*0x1298d44*/ void seed();
}

class SLong
{
    static /*0x0*/ byte[] temp;
    /*0x10*/ byte[] data1;
    /*0x18*/ byte[] data2;

    static /*0x12999b4*/ SLong();
    static /*0x12990f4*/ long op_Implicit(SLong obj);
    static /*0x12994f0*/ ulong op_Implicit(SLong obj);
    static /*0x12994fc*/ SLong op_Implicit(long _value);
    /*0x12995e4*/ SLong();
    /*0x1299558*/ SLong(long _value);
    /*0x12999b0*/ long get_Value();
    /*0x1299100*/ long get();
    /*0x1299714*/ void set(long value);
    /*0x1299658*/ void seed();
}

class Helper_Account
{
    static /*0x10f08f0*/ void HandlerOpenProfile(long _playerid);
    static /*0x10f70a4*/ void HandlerOpenProfile(long _playerid, string _campaign);
    static /*0x10f7224*/ void HandlerOpenProfile(long _playerid, int _faction, int _floor);
    static /*0x10f73e4*/ void HandlerOpenProfile_Arena(long _playerid);
    static /*0x10f7574*/ void HandlerOpenProfile_WorldArena(long _playerid);
    static /*0x10f7704*/ void HandlerOpenProfile_Guild(long _playerid);

    class <>c
    {
        static /*0x0*/ Helper_Account.<> <>9;
        static /*0x8*/ System.Action<ServerProtocol.ResAccountDetail> <>9__0_0;
        static /*0x10*/ System.Action<ServerProtocol.ResAccountDetail> <>9__1_0;
        static /*0x18*/ System.Action<ServerProtocol.ResAccountDetail> <>9__2_0;
        static /*0x20*/ System.Action<ServerProtocol.ResAccountDetail> <>9__3_0;
        static /*0x28*/ System.Action<ServerProtocol.ResAccountDetail> <>9__4_0;

        static /*0xf747ac*/ <>c();
        /*0xf7480c*/ <>c();
        /*0xf74814*/ void <HandlerOpenProfile>b__0_0(ServerProtocol.ResAccountDetail result);
        /*0xf7489c*/ void <HandlerOpenProfile>b__1_0(ServerProtocol.ResAccountDetail result);
        /*0xf74924*/ void <HandlerOpenProfile>b__2_0(ServerProtocol.ResAccountDetail result);
        /*0xf749ac*/ void <HandlerOpenProfile_Arena>b__3_0(ServerProtocol.ResAccountDetail result);
        /*0xf74a34*/ void <HandlerOpenProfile_WorldArena>b__4_0(ServerProtocol.ResAccountDetail result);
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ long _playerid;
        /*0x18*/ System.Predicate<PTShare.Define.SGuildMember> <>9__1;

        /*0xf74abc*/ <>c__DisplayClass5_0();
        /*0xf74ac4*/ void <HandlerOpenProfile_Guild>b__0(ServerProtocol.ResAccountDetail result);
        /*0xf74c08*/ bool <HandlerOpenProfile_Guild>b__1(PTShare.Define.SGuildMember data);
    }
}

class Helper_Audio
{
    static /*0x10f7cb4*/ void RefreshAudioVolume();
    static /*0x10f7d6c*/ float GetSavedVolumeBGM();
    static /*0x10f7d74*/ float GetSavedVolumeSFX();
    /*0x10f7d7c*/ Helper_Audio();
}

class Helper_Color
{
    static string HEROFRAMECOLORS = "HeroFrameColors";
    static string HEROGRADECOLORS = "HeroGradeColors";
    static string HEROGRADEOUTLINECOLORS = "HeroGradeOutlineColors";
    static string HEROGRADESHADOWCOLORS = "HeroGradeShadowColors";
    static string EQUIPGRADECOLORS = "EquipGradeColors";
    static string EQUIPGRADEOUTLINECOLORS = "EquipGradeOutlineColors";
    static string HEROFACTIONCOLORS = "HeroFactionColors";
    static string HEROFACTIONOUTLINECOLORS = "HeroFactionOutlineColors";
    static /*0x0*/ System.Collections.Generic.Dictionary<string, ColorGroup> m_dicColorGroup;

    static /*0x10f80e0*/ Helper_Color();
    static /*0x10f7d84*/ UnityEngine.Color GetColors(string _name, int _index);
    static /*0x10f7e48*/ ColorGroup GetColorGroup(string _name);
    /*0x10f80d8*/ Helper_Color();
}

enum ContentType
{
    None = 0,
    BattleAcceleration = 1,
    ContentShop = 2,
    Friend = 3,
    GeneralArena = 4,
    GoddessTemple = 5,
    ImmediatelyHunt = 6,
    Maze = 7,
    Mercenary = 8,
    Pub = 9,
    RankingBoard = 10,
    ResetHero = 11,
    StageTower = 12,
    Troop = 13,
    Resonance = 14,
    EventBattlePass = 15,
    EventRoyalPass = 16,
    Event7daynewbie = 17,
    EventSnowflower = 18,
    EventSpringSeed = 19,
    WorldArena = 20,
    Training = 21,
    Guild = 22,
    Bounty = 23,
    Revert = 24,
    Event7dayArena = 25,
    EventExchangeRotationA = 26,
    EventExchangeRotationB = 27,
    EventExchangeRotationC = 28,
    Relation = 29,
    FactionTower = 30,
    Minigame = 31,
    ArtifactEnhance = 32,
    Dungeon = 33,
    ArtifactUpgrade = 34,
    GuildWaste = 35,
    EventMissionShort = 36,
    StageTowerFire = 37,
    StageTowerWind = 38,
    StageTowerNature = 39,
    StageTowerWater = 40,
    GuildWar = 41,
    ResonanceUp = 42,
    Dismiss = 43,
    WorldBoss = 44,
    PveRanking = 45,
    HighGacha = 46,
    Signature = 47,
    Housing = 48,
    Housing_dismiss = 49,
    Ability = 50,
    EventBoss = 51,
    EventComplete = 52,
    Hardmode = 53,
    End = 54,
}

class Helper_Currency
{
    static /*0x10f8168*/ bool IsVaildCurrency(PTShare.Define.Currency _type, long _amount);
    static /*0x10f82d4*/ long GetCurrency(PTShare.Define.Currency _type);
    static /*0x10f842c*/ string GetCurrencyTooltipDesc(PTShare.Define.Currency _type);
    static /*0x10f8534*/ int GetCurrencyQuality(PTShare.Define.Currency _type, bool _bIsFrame);
    static /*0x10f8554*/ int GetUserExpQuality(bool _bIsFrame);
    static /*0x10f855c*/ int GetVipPointQuality(bool _bIsFrame);
    static /*0x10f8564*/ int GetResetPointQuality(bool _bIsFrame);
    static /*0x10f856c*/ int GetGuildPoint(bool _bIsFrame);
    static /*0x10f8574*/ int GetDungeonItemQuality(bool _bIsFrame);
    static /*0x10f857c*/ int GetFrameDecoQuality(bool _bisFrame);
    static /*0x10f8584*/ void NotEnoughNotice(PTShare.Define.Currency _type);
    static /*0x10ee050*/ string ChangeMeasureToNumber(long _Number);
}

class Helper_Equipment
{
    static /*0x10f879c*/ int GetEquipmentUpgradeExp(PTShare.Define.SEquip _equip);
    static /*0x10f8880*/ System.Collections.Generic.List<int> GetEnhanceEquipmentExperienceList(TableData.TableData_Equipment _equip);
    static /*0x10f898c*/ System.Collections.Generic.List<EquipSetItem> GetEquipSetItemList();
    static /*0x10f8bf0*/ System.Collections.Generic.List<EquipSetItem> GetEquipSetItemList(System.Collections.Generic.List<PTShare.Define.SEquip> _liEquipList);

    class <>c
    {
        static /*0x0*/ Helper_Equipment.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SEquip, System.ValueTuple<int, int, int>> <>9__2_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip>, EquipSetItem> <>9__2_1;
        static /*0x18*/ System.Func<PTShare.Define.SEquip, System.ValueTuple<int, int, int>> <>9__3_0;
        static /*0x20*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip>, EquipSetItem> <>9__3_1;

        static /*0xf74c2c*/ <>c();
        /*0xf74c8c*/ <>c();
        /*0xf74c94*/ System.ValueTuple<int, int, int> <GetEquipSetItemList>b__2_0(PTShare.Define.SEquip g);
        /*0xf74d0c*/ EquipSetItem <GetEquipSetItemList>b__2_1(System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip> s);
        /*0xf74e50*/ System.ValueTuple<int, int, int> <GetEquipSetItemList>b__3_0(PTShare.Define.SEquip g);
        /*0xf74ec8*/ EquipSetItem <GetEquipSetItemList>b__3_1(System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip> s);
    }
}

struct EquipSetItem
{
    /*0x10*/ PTShare.Define.SEquip Equip;
    /*0x18*/ TableData.TableData_Equipment Table;
    /*0x20*/ int Index;
    /*0x24*/ int Amount;

    /*0xaa2c90*/ EquipSetItem(PTShare.Define.SEquip equip, TableData.TableData_Equipment table, int index, int amount);
}

class EquipSetItem_Update_Comparer_Sort : System.Collections.Generic.IComparer<EquipSetItem>
{
    /*0x14c234c*/ EquipSetItem_Update_Comparer_Sort();
    /*0x14c231c*/ int Compare(EquipSetItem left, EquipSetItem right);
}

class EquipSetItem_Inventory_Comparer_Sort : System.Collections.Generic.IComparer<EquipSetItem>
{
    /*0x10*/ TableData.TableData_Equipment tableLeft;
    /*0x18*/ TableData.TableData_Equipment tableRight;
    /*0x20*/ EquipSubType _subTypeLeft;
    /*0x24*/ EquipSubType _subTypeRight;
    /*0x28*/ PTShare.Define.EquipParts _partsTypeLeft;
    /*0x2c*/ PTShare.Define.EquipParts _partsTypeRight;

    /*0x14baf04*/ EquipSetItem_Inventory_Comparer_Sort();
    /*0x14c2160*/ int Compare(EquipSetItem left, EquipSetItem right);
}

class Helper_FactionBuff
{
    static /*0x0*/ bool[] FactionBuffEnableListAlly;
    static /*0x8*/ bool[] FactionBuffEnableListAlly2;
    static /*0x10*/ bool[] FactionBuffEnableListEnemy;
    static /*0x18*/ int m_nBuffDataCount;
    static /*0x1c*/ bool m_bStartInit;

    static /*0x10f91f4*/ Helper_FactionBuff();
    static /*0x10f8e54*/ void SetFactionBuffEnable(int _nIndex, bool _bValue, Helper_FactionBuff.FactionBuffType _eBuffType);
    static /*0x10f90d0*/ bool GetFactionBuffEnable(int _nIndex, Helper_FactionBuff.FactionBuffType _eBuffType);
    static /*0x10f8fa0*/ void StartInit();

    enum FactionBuffType
    {
        Ally = 0,
        Ally2 = 1,
        Enemy = 2,
    }
}

class Helper_GuiAction
{
    static string CashShopPopup_InitializePopup = "InitializePopup";
    static string HeroManagePopup_InitalizeBook = "InitalizeBook";
    static string HeroManagePopup_InitalizeHero = "InitalizeHero";
    static string HeroSkinPopup_InitializeFastSkin = "InitializeFastSkin";
    static string HeroMainWindow_SetCurrentMenu = "SetCurrentMenu";
    static string MainUserWindow_InitalizeMenu = "InitalizeMenu";
    static string RelationListPopup_InitializePopup = "InitializePopup";
    static string RelationDetailPopup_InitializePopup = "InitializePopup";

    static /*0x10f91f8*/ void AddMainUserWindowInitalizeMenu(MainMenuType menuType);
    static /*0x10f9398*/ void AddHeroManagePopup_Book();
    static /*0x10f9554*/ void AddHeroManagePopup_Book(object[] param);
    static /*0x10f9604*/ void OpenHeroInfo_HeroBook();
    static /*0x10f9764*/ void OpenHeroInfo_Relation(TableData.TableData_Unitbase unit, bool arrow, TableData.TableData_Relation relation);
    static /*0x10f9a1c*/ void OpenHeroInfo_Shop(DefineCashShop.CashShopCategoryType categoryType, DefineCashShop.CashShopTabType tabType, int heroID);
    static /*0x10f9c84*/ void OpenHeroInfo_SkinRoom(TableData.TableData_Unitbase unit, PTShare.Define.SHero hero, int currentIndex, bool isBook);
    /*0x10fa280*/ Helper_GuiAction();
}

class Helper_Handler
{
    static /*0x10fa288*/ void HandleDragScrollSound(UnityEngine.Vector2 value);
}

class Helper_Hero
{
    static /*0x10fa2cc*/ PTShare.Define.SHero ConvertSBattleHeroToSHero(PTShare.Define.SBattleHero _sBattleHero);
    static /*0x10fa35c*/ PTShare.Define.SHero ConvertUnitSpawnInfoToSHero(UnitSpawnInfo _unitSpawnInfo);
    static /*0x10fa3ec*/ PTShare.Define.SHero ConvertSSmallHeroToSHero(PTShare.Define.SSmallHero _sSmallHero);
    static /*0x10fa474*/ PTShare.Define.SSmallHero ConvertSHeroToSSmallHero(PTShare.Define.SHero _sHero);
    static /*0x10fa4fc*/ int GetFakeCp(bool isCorrectionApply, int viewCP, int monsterCount);
    static /*0x10fa5d8*/ string GetTotalPowerbyUnitStage(System.Collections.Generic.List<UnitSpawnInfo> _unitStages, PTShare.Define.SStatBonus _statbonus);
    static /*0x10fa7c8*/ long GetTotalPowerHero(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, int _nLevelOffset);
    static /*0x10fab5c*/ long GetTotalPowerHero(PTShare.Define.SConditionHero _hero, PTShare.Define.SStatBonus _statbonus, int _nLevelOffset);
    static /*0x10faef0*/ long GetTotalPowerBattleHeroList(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisBattleHero, PTShare.Define.SStatBonus _statbonus);
    static /*0x10faff0*/ long GetTotalPowerBattleHeroList(System.Collections.Generic.List<UnitSpawnInfo> _lisUnitSpawnInfo, PTShare.Define.SStatBonus _statbonus);
    static /*0x10fb0f0*/ Battle.CharacterStat GetTotalCharacterStat(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, int _nLevelOffest);
    static /*0x10fb458*/ long GetHeroSelectValueTotalPower(System.Collections.Generic.List<Battle.HeroSelectValue> _liValue, PTShare.Define.SStatBonus _statbonus);
    static /*0x10fb540*/ long GetTotalCombatPowerByUser(PTShare.Define.SStatBonus _statbonus);
    static /*0x10fb684*/ bool EnablePromote(System.Collections.Generic.List<PTShare.Define.SHero> _containTarget, PTShare.Define.SHero _sHero);
    static /*0x10fb9d0*/ System.Collections.Generic.List<Battle.BattleGraphValue> ReturnBattleGraphView(string _statistics, System.Collections.Generic.List<PTShare.Define.SSmallHero> _sSmallHeroes, System.Collections.Generic.List<UnitSpawnInfo> _unitStages);
    static /*0x10fbef4*/ System.Collections.Generic.List<Battle.BattleGraphValue> ReturnBattleGraphView(string _statistics, System.Collections.Generic.List<PTShare.Define.SSmallHero> _sSmallMyHeros, System.Collections.Generic.List<PTShare.Define.SSmallHero> _sSmallVSHeros);
    static /*0x10fc3e0*/ System.Collections.Generic.List<Battle.BattleGraphValue> ReturnBattleGraphView(string _statistics, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisAllyHeros, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHeros);
    static /*0x10fc918*/ bool IsPossibleLevelUpHero(PTShare.Define.SHero _hero);
    static /*0x10fca18*/ bool IsNextRequireTierHero(PTShare.Define.SHero _hero);
    static /*0x10fca8c*/ bool IsMaxLevelHero(PTShare.Define.SHero _hero, int _nOffsetLv);
    static /*0x10fcad8*/ bool IsMaxGradeHero(PTShare.Define.SHero _hero);
    static /*0x10fcba0*/ PTShare.Define.SProperty GetHeroResetMaterials(PTShare.Define.SHero _hero);
    static /*0x10fce80*/ void GetHeroUseMaterials(System.Collections.Generic.List<Rewards> _reward, int _nBaseLevel, int _nLevel);
    static /*0x10fd1b8*/ PTShare.Define.SProperty GetHeroRevertMaterials(PTShare.Define.SHero _hero);
    static /*0x10fd578*/ void SetMostFiveHeroes(System.Collections.Generic.List<PTShare.Define.SHero> _liHero);
    static /*0x10fd6c8*/ PTShare.Define.SGuildWarHero ConvertSGuildWarHero(PTShare.Define.SVerifyHero source);
    static /*0x10fd900*/ PTShare.Define.SGuildWarHero ConvertSGuildWarHero(PTShare.Define.SBattleHero source);
    static /*0x10fd9fc*/ PTShare.Define.SGuildWarHero ConvertSGuildWarHero(PTShare.Define.SGuildWarBattleHero source);
    static /*0x10fd7c8*/ System.Collections.Generic.List<PTShare.Define.SEquip> <ConvertSGuildWarHero>g__ChangeToSEquip|25_0(System.Collections.Generic.List<PTShare.Define.SVerifyEquip> _equips);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ Battle.CharacterStat equipStat;
        /*0x18*/ TableData.TableData_Unitbase _base;

        /*0xf75588*/ <>c__DisplayClass6_0();
        /*0xf75590*/ void <GetTotalPowerHero>b__0(PTShare.Define.SEquip _equip);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ Battle.CharacterStat equipStat;
        /*0x18*/ TableData.TableData_Unitbase _base;

        /*0xf75654*/ <>c__DisplayClass7_0();
        /*0xf7565c*/ void <GetTotalPowerHero>b__0(PTShare.Define.SEquip _equip);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf75720*/ <>c__DisplayClass8_0();
        /*0xf75728*/ long <GetTotalPowerBattleHeroList>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf7575c*/ <>c__DisplayClass9_0();
        /*0xf75764*/ long <GetTotalPowerBattleHeroList>b__0(UnitSpawnInfo _hero);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ Battle.CharacterStat equipStat;
        /*0x18*/ TableData.TableData_Unitbase _base;

        /*0xf7500c*/ <>c__DisplayClass10_0();
        /*0xf75014*/ void <GetTotalCharacterStat>b__0(PTShare.Define.SEquip _equip);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf750d8*/ <>c__DisplayClass11_0();
        /*0xf750e0*/ long <GetHeroSelectValueTotalPower>b__0(Battle.HeroSelectValue x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf75188*/ <>c__DisplayClass12_0();
        /*0xf75190*/ long <GetTotalCombatPowerByUser>b__0(PTShare.Define.SHero _hero);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ TableData.TableData_Unitgradelv tUnitGradeLv;
        /*0x18*/ PTShare.Define.SHero _sHero;

        /*0xf751a8*/ <>c__DisplayClass13_0();
        /*0xf751b0*/ bool <EnablePromote>b__0(PTShare.Define.SHero x);
        /*0xf751e0*/ bool <EnablePromote>b__1(PTShare.Define.SHero x);
        /*0xf75234*/ bool <EnablePromote>b__2(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ PTShare.Define.SProperty _reward;

        /*0xf75288*/ <>c__DisplayClass21_0();
        /*0xf75290*/ void <GetHeroResetMaterials>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ PTShare.Define.SProperty reward;
        /*0x18*/ PropertyType faction;
        /*0x20*/ System.Action<Rewards> <>9__2;

        /*0xf752ac*/ <>c__DisplayClass23_0();
        /*0xf752b4*/ void <GetHeroRevertMaterials>b__2(Rewards r);
        /*0xf75344*/ int <GetHeroRevertMaterials>g__GetFactionItem|0();
        /*0xf753d8*/ System.ValueTuple<int, int> <GetHeroRevertMaterials>g__GetFactionSlime|1();
    }
}

class Helper_Housing
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>>> m_HousingBuffStatDicWithUnitID;

    static /*0x10fe390*/ Helper_Housing();
    static /*0x10fdadc*/ void RenewHousingHeroEffectDatas(PTShare.Define.SStatBonus _statBonus);
    static /*0x10fdb50*/ void RenewHousingHeroEffectDatas(string _housingGroupStr);
    static /*0x10fdfe8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> GetHousingHeroEffectDicWithUnitID(PTShare.Define.SStatBonus _statBonus);
    static /*0x10fdbcc*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> GetHousingHeroEffectDicWithUnitID(string _housingGroupStr);
    static /*0x10fe244*/ System.Collections.Generic.List<System.ValueTuple<int, int>> GetHousingGroupDataList(PTShare.Define.SStatBonus _statBonus);
    static /*0x10fe060*/ System.Collections.Generic.List<System.ValueTuple<int, int>> GetHousingGroupDataList(string _housingGroupStr);
    static /*0x10fe2bc*/ byte <GetHousingGroupDataList>g__GetByte|6_0(ref Helper_Housing.<> );
    static /*0x10fe308*/ short <GetHousingGroupDataList>g__GetInt16|6_1(ref Helper_Housing.<> );

    struct <>c__DisplayClass6_0
    {
        /*0x10*/ byte[] byteDatas;
        /*0x18*/ int curByteIndex;
    }
}

class Helper_Resonance
{
    static /*0x10fe508*/ Rewards GetUnlockCurrencyReward();
    static /*0x10fe748*/ Rewards GetUnlockPriceReward();
    static /*0x10fe82c*/ Rewards GetCleaningReward();
    static /*0x10fe910*/ long GetUnlockCurrency();
    static /*0x10fea70*/ long GetUnlockPrice();
    static /*0x10febc0*/ bool IsVaildCurrency();
    static /*0x10febf8*/ void OpenBuyResonanceSlotPopup(System.Action _currencyCallback, System.Action _priceCallback);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ System.Action _currencyCallback;
        /*0x18*/ System.Action _priceCallback;

        /*0xf757a4*/ <>c__DisplayClass6_0();
        /*0xf757ac*/ void <OpenBuyResonanceSlotPopup>b__0(bool result);
        /*0xf757c4*/ void <OpenBuyResonanceSlotPopup>b__1(bool result);
    }
}

class Helper_Reward
{
    static /*0x0*/ int lastCurrentLevel;

    static /*0x1102398*/ Helper_Reward();
    static /*0x10ff10c*/ void ResetLastCurrentLevel();
    static /*0x10ff170*/ void UpdateReward(PTShare.Define.SProperty _property);
    static /*0x10ff6d4*/ void UpdateReward(PTShare.Define.SCurrency _curCurrency, PTShare.Define.SProperty _property);
    static /*0x10ff79c*/ void ShowReward(PTShare.Define.SProperty _property, System.Action _exitCallback, ItemRewardBoxType[] _ignoreType);
    static /*0x10ff894*/ void ShowReward(System.Collections.Generic.List<Rewards> _reward, System.Action _exitCallback);
    static /*0x10ff988*/ void ShowReward(System.Collections.Generic.List<Rewards> _reward, bool combine, System.Action _exitCallback);
    static /*0x10ffa80*/ void ShowActorReward(System.Collections.Generic.List<PTShare.Define.SHero> _sHeroes, System.Action _exitCallBack);
    static /*0x10ffb70*/ bool ShowLevelReward();
    static /*0x10f156c*/ System.Collections.Generic.List<Rewards> ReturnRewards(string _rewards, int _userexp, int _vippoint);
    static /*0x10ffd4c*/ System.Collections.Generic.List<Rewards> CombineRewardList(System.Collections.Generic.List<Rewards> _reward, bool _sort);
    static /*0x10fffb8*/ int FindSameRewardIndex(System.Collections.Generic.List<Rewards> _reward, PTShare.Define.SProperty _property);
    static /*0x1100480*/ bool IsNotVaildRewardsNotice(Rewards _Reward);
    static /*0x1100584*/ bool IsNotVaildRewardsNotice(System.Collections.Generic.List<Rewards> _liRewards);
    static /*0x110093c*/ bool IsNotVaildRewards(System.Collections.Generic.List<Rewards> _liRewards);
    static /*0x10ff4a8*/ void UpdatePlayerLevel(long _exp);
    static /*0x10fe688*/ Rewards Discount(Rewards reward, int discount);
    static /*0x1100b20*/ Rewards Discount(Rewards reward, float discount);
    static /*0x1100c20*/ Rewards Impression(Rewards reward, int impression);
    static /*0x1100c88*/ Rewards Impression(Rewards reward, float impression);
    static /*0x1100d0c*/ System.ValueTuple<long, long> GetRewardAmount(Rewards reward);
    static /*0x1100e6c*/ System.ValueTuple<int, int, int> GetIdleMinutesRewards();
    static /*0x1100344*/ System.Collections.Generic.List<Rewards> ConvertSpropertyToRewardList(PTShare.Define.SProperty sproperty);
    static /*0x1101314*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, PTShare.Define.Wealth wealth, int value);
    static /*0x110144c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, PTShare.Define.SCurrency sCurrency);
    static /*0x110155c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SItem> items);
    static /*0x110170c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SEquip> equips);
    static /*0x11018f0*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SSkin> sSkins);
    static /*0x1101a84*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SLittleHero> sLittleHero);
    static /*0x1101c44*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SPassPoint> sPassPoint);
    static /*0x1101e50*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SArtifact> sArtifact);
    static /*0x110204c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SFrame> sFrame);
    static /*0x1102240*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> sHousingObj);

    class <>c
    {
        static /*0x0*/ Helper_Reward.<> <>9;
        static /*0x8*/ System.Func<char, bool> <>9__9_0;
        static /*0x10*/ System.Predicate<Rewards> <>9__21_0;
        static /*0x18*/ System.Predicate<Rewards> <>9__21_1;

        static /*0xf757dc*/ <>c();
        /*0xf7583c*/ <>c();
        /*0xf75844*/ bool <ReturnRewards>b__9_0(char w);
        /*0xf75874*/ bool <GetIdleMinutesRewards>b__21_0(Rewards x);
        /*0xf7591c*/ bool <GetIdleMinutesRewards>b__21_1(Rewards x);
    }
}

class Sort_TableReward : System.Collections.Generic.IComparer<Rewards>
{
    static /*0x0*/ System.Collections.Generic.List<PTShare.Define.Wealth> mWealthTable;

    static /*0x14526e0*/ Sort_TableReward();
    /*0x14526d8*/ Sort_TableReward();
    /*0x14523fc*/ int Compare(Rewards x, Rewards y);

    class <>c__DisplayClass1_0
    {
        /*0x10*/ Rewards x;
        /*0xd8*/ Rewards y;

        /*0xcc0774*/ <>c__DisplayClass1_0();
        /*0xcc077c*/ bool <Compare>b__0(PTShare.Define.Wealth w);
        /*0xcc078c*/ bool <Compare>b__1(PTShare.Define.Wealth w);
    }
}

enum SkinKeyType
{
    NONE = 0,
    GET = 1,
    ULT = 2,
    DEATH = 3,
    ENTRY = 4,
    GREETING = 5,
    TITLE = 6,
}

class Helper_Skin
{
    static /*0x110253c*/ string GetSkinKey(SkinKeyType _eSkinKeyType);
}

class Helper_UserStatus
{
    static /*0x0*/ long _totalPower;
    static /*0x8*/ long _highTotalPower;
    static /*0x10*/ int _guildwarHeroId;
    static /*0x18*/ System.Action OnUpdateHelperUserStatus;

    static /*0x1103460*/ Helper_UserStatus();
    static /*0x11025bc*/ void add_OnUpdateHelperUserStatus(System.Action value);
    static /*0x11026b4*/ void remove_OnUpdateHelperUserStatus(System.Action value);
    static /*0x11027ac*/ long GetHighTotalPower();
    static /*0x1102810*/ void SetHighTotalPower(long _power);
    static /*0x1102878*/ long GetTotalPower();
    static /*0x11028dc*/ void SetTotalPower(long _power);
    static /*0x1102944*/ long SetTotalPower(bool _isAdd, PTShare.Define.SHero _hero, bool sendHighTotalCP);
    static /*0x1102cac*/ void RemoveBonusStat();
    static /*0x1102e8c*/ void AddBonusStat();
    static /*0x1103090*/ void AddTotalPower(Battle.CharacterStat.StatType type);
    static /*0x1102b8c*/ bool SendHighTotalCP();
    static /*0x110311c*/ void SetGuildWarHeroId(int heroId);
    static /*0x1103184*/ void SendGuildWarUpdateMyCP(int heroId);
    static /*0x11032f4*/ void SendGuildWarUpdateMyCP();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ long _equipCP;
        /*0x18*/ PTShare.Define.SHero _hero;
        /*0x20*/ bool _isAdd;

        /*0xf759c8*/ <>c__DisplayClass10_0();
        /*0xf759d0*/ void <SetTotalPower>b__0(PTShare.Define.SEquip x);
    }
}

class Helper_Verify
{
    static /*0x0*/ int CurrentVerifyPass;
    static /*0x4*/ int CurrentVerifyDoubt;
    static /*0x8*/ int CurrentVerifyFail;

    static /*0x1103550*/ Helper_Verify();
    static /*0x1103464*/ int get_CurrentVerifyTotal();
    static /*0x11034d8*/ void ClearCounts();
}

class AbilityConfirmPopup : GuiBase
{
    /*0x40*/ AbilityEntity[] m_beforeEntitys;
    /*0x48*/ AbilityEntity[] m_afterEntitys;
    /*0x50*/ int m_heroTableId;

    /*0x1201b68*/ AbilityConfirmPopup();
    /*0x1201478*/ void OnCreate();
    /*0x120147c*/ void OnDelete();
    /*0x1201480*/ void OnEnter();
    /*0x1201484*/ void OnFinish();
    /*0x1201488*/ void OnLeave();
    /*0x120148c*/ void OnStart();
    /*0x1201490*/ void OnExit();
    /*0x1201494*/ void InitPopup(int heroTableId, System.Collections.Generic.List<int> beforeAbility, System.Collections.Generic.List<int> afterAbility);
    /*0x1201840*/ void OnClickConfirm();
    /*0x12019d4*/ void OnClickCancel();
    /*0x1201b70*/ void <OnClickConfirm>b__11_0(bool confirm);
    /*0x1201dfc*/ void <OnClickConfirm>b__11_1();
    /*0x1201e80*/ void <OnClickCancel>b__12_0(bool confirm);
}

class AbilityEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_lockImage;
    /*0x20*/ AtlasImage m_frameImage;
    /*0x28*/ LocalizeString m_desc;
    /*0x30*/ UnityEngine.GameObject m_lockMask;
    /*0x38*/ ParticleBase m_particle;
    /*0x40*/ TooltipData_Percent m_tooltipPercent;
    /*0x48*/ TooltipTargetUI m_tooltipUI;
    /*0x50*/ int m_slotIndex;
    /*0x58*/ AbilityPopup m_parent;
    /*0x60*/ int m_abilityIndex;
    /*0x64*/ bool m_isLock;
    /*0x68*/ System.Action m_lockCallBack;

    /*0x12029ac*/ AbilityEntity();
    /*0x1201eb4*/ bool IsLock();
    /*0x1201ebc*/ void Unlock();
    /*0x1202148*/ void ShowParticle();
    /*0x12016d8*/ void InitEntity(int slotIndex, AbilityPopup parent, int abilityData, System.Action lockCallBack);
    /*0x1201f00*/ void SetLockImage(bool isLock);
    /*0x120222c*/ void SetFrame();
    /*0x1202378*/ void SetDesc();
    /*0x1202650*/ void SetTooltipData();
    /*0x1202810*/ void OnClickLock();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ TableData.TableData_Abilityoptionvalue table;

        /*0xe12490*/ <>c__DisplayClass19_0();
        /*0xe12498*/ bool <SetTooltipData>b__0(TableData.TableData_Abilityoptionvalue f);
    }
}

class AbilityHeroSelectPopup : GuiBase
{
    /*0x40*/ WishSlot m_selectHeroSlot;
    /*0x48*/ HeroPropertySlotWindow m_propertySlotWindow;
    /*0x50*/ ScrollContent_AbilityHeroSlot m_scrollContent;
    /*0x58*/ UnityEngine.UI.Button m_button;
    /*0x60*/ UnityEngine.GameObject m_backButton;
    /*0x68*/ int m_selectTableId;
    /*0x6c*/ int m_selectFaction;
    /*0x70*/ System.Collections.Generic.List<int> m_heroList;
    /*0x78*/ System.Action<int> m_onSelect;

    /*0x1203854*/ AbilityHeroSelectPopup();
    /*0x1202c14*/ void OnCreate();
    /*0x1202c18*/ void OnDelete();
    /*0x1202c1c*/ void OnEnter();
    /*0x1202c20*/ void OnExit();
    /*0x1202c84*/ void OnFinish();
    /*0x1202c88*/ void OnLeave();
    /*0x1202c8c*/ void OnStart();
    /*0x1202c90*/ void InitPopup(int selectTableId, System.Action<int> onSelect);
    /*0x1202ff8*/ void UpdateHeroList();
    /*0x1202c48*/ void Clear();
    /*0x1202f18*/ void InitPropertySlot();
    /*0x1202fa8*/ void UpdateSelectSlot(int tableId);
    /*0x1202fcc*/ void UpdateButton();
    /*0x1202db0*/ void BindEvent();
    /*0x1203370*/ void RemoveEvent();
    /*0x12034d0*/ void HandleScrollContent(int index, AbilityHeroSlot obj);
    /*0x12036dc*/ void HandleChangeFaction(int faction);
    /*0x12036e4*/ void HandleOnSelect(int tableId);
    /*0x1203774*/ void OnConfirm();

    class <>c
    {
        static /*0x0*/ AbilityHeroSelectPopup.<> <>9;
        static /*0x8*/ System.Comparison<int> <>9__17_0;

        static /*0xe124c8*/ <>c();
        /*0xe12528*/ <>c();
        /*0xe12530*/ int <UpdateHeroList>b__17_0(int lhs, int rhs);
    }
}

class AbilityHeroSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ WishPropertySlot m_slot;
    /*0x20*/ AtlasImage m_grade;
    /*0x28*/ int m_tableId;
    /*0x30*/ System.Action<int> m_onClick;

    /*0x1203a28*/ AbilityHeroSlot();
    /*0x12035b0*/ void InitSlot(int tableId, System.Action<int> onClick);
    /*0x12039c8*/ void OnClick();
}

class AbilityItemSelectPopup : GuiBase
{
    /*0x40*/ ScrollContent_AbilityItemSlot m_scollContent;
    /*0x48*/ UnityEngine.GameObject m_empty;
    /*0x50*/ int m_abilityGrade;
    /*0x54*/ int m_selectTableId;
    /*0x58*/ System.Collections.Generic.List<int> m_itemList;
    /*0x60*/ System.Action<int> m_onSelect;

    /*0x1204554*/ AbilityItemSelectPopup();
    /*0x1203a30*/ void OnCreate();
    /*0x1203a34*/ void OnDelete();
    /*0x1203a38*/ void OnEnter();
    /*0x1203a3c*/ void OnFinish();
    /*0x1203a40*/ void OnLeave();
    /*0x1203a44*/ void OnStart();
    /*0x1203a48*/ void OnExit();
    /*0x1203b44*/ void InitPopup(int selectItemId, int abilityGrade, System.Action<int> onSelect);
    /*0x1203d7c*/ void AddList(int itemId);
    /*0x1203e4c*/ void Refresh();
    /*0x1203ca0*/ void BindEvent();
    /*0x1203a70*/ void RemoveEvent();
    /*0x1203ea8*/ void HandleScrollContent(int index, AbilityItemSlot obj);
    /*0x120436c*/ void HandleSelectItem(int tableId);
    /*0x1204400*/ void OnClickConfirm();
}

class AbilityItemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemSlot;
    /*0x20*/ LocalizeString m_itemName;
    /*0x28*/ LocalizeString m_itemDesc;
    /*0x30*/ UnityEngine.GameObject m_checkMark;
    /*0x38*/ int m_tableId;
    /*0x40*/ System.Action<int> m_onSelect;

    /*0x120462c*/ AbilityItemSlot();
    /*0x1203fcc*/ void InitSlot(int tableId, bool isCheck, System.Action<int> onSelect);
    /*0x12045cc*/ void OnClick();
}

class AbilityManager : Singleton.Data.SingletonData<AbilityManager>
{
    /*0x1c*/ int m_freeRollCount;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SAbilityGroup> m_abilityList;

    /*0x1205060*/ AbilityManager();
    /*0x1204634*/ bool InitInstance();
    /*0x120463c*/ void ReleaseInstance();
    /*0x1204640*/ void ReleaseSingleton();
    /*0x120468c*/ int GetFreeRollCount();
    /*0x1204694*/ bool EnableFreeRoll();
    /*0x12046f0*/ PTShare.Define.SAbilityGroup FindAbilityGroup(int heroTableId);
    /*0x12047e0*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> FindTableAbilityOptionValueList(int abilityIndex);
    /*0x12038cc*/ int FindGrade(int heroTableId);
    /*0x1204818*/ void SetFirst(int freeRollCount, System.Collections.Generic.List<PTShare.Define.SAbilityGroup> abilityList);
    /*0x1204824*/ void Send_FreeRoll(int heroTableId, System.Action callBack);
    /*0x12049c4*/ void Send_CurrencyRoll(int heroTableId, PTShare.Define.Currency currencyType, System.Collections.Generic.List<bool> lockAbility, System.Action callBack);
    /*0x1204c90*/ void Send_ItemRoll(int heroTableId, int itemTableId, System.Action callBack);
    /*0x1201c6c*/ void Send_Confirm(int heroTableId, System.Action callBack);
    /*0x1204e38*/ void RefreshData(PTShare.Define.SAbilityGroup data);
    /*0x1204fe0*/ void DailyChange();

    class <>c__DisplayClass7_0
    {
        /*0x10*/ int heroTableId;

        /*0xe12bf8*/ <>c__DisplayClass7_0();
        /*0xe12c00*/ bool <FindAbilityGroup>b__0(PTShare.Define.SAbilityGroup f);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ int heroTableId;

        /*0xe12c24*/ <>c__DisplayClass9_0();
        /*0xe12c2c*/ bool <FindGrade>b__0(PTShare.Define.SAbilityGroup f);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ AbilityManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xe126bc*/ <>c__DisplayClass11_0();
        /*0xe126c4*/ void <Send_FreeRoll>b__0(ServerProtocol.ResAbilityFreeRoll response);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ AbilityManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xe12724*/ <>c__DisplayClass12_0();
        /*0xe1272c*/ void <Send_CurrencyRoll>b__0(ServerProtocol.ResAbilityCurrencyRoll response);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ int itemTableId;
        /*0x18*/ AbilityManager <>4__this;
        /*0x20*/ System.Action callBack;

        /*0xe12858*/ <>c__DisplayClass13_0();
        /*0xe12860*/ void <Send_ItemRoll>b__0(ServerProtocol.ResAbilityItemRoll response);
    }

    class <>c__DisplayClass13_1
    {
        /*0x10*/ ServerProtocol.ResAbilityItemRoll response;

        /*0xe12b28*/ <>c__DisplayClass13_1();
        /*0xe12b30*/ bool <Send_ItemRoll>b__1(PTShare.Define.SAbilityGroup f);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ AbilityManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xe12b68*/ <>c__DisplayClass14_0();
        /*0xe12b70*/ void <Send_Confirm>b__0(ServerProtocol.ResAbilityConfirm response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ PTShare.Define.SAbilityGroup data;

        /*0xe12bc0*/ <>c__DisplayClass15_0();
        /*0xe12bc8*/ bool <RefreshData>b__0(PTShare.Define.SAbilityGroup f);
    }
}

class AbilityPercentEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ TooltipData_Percent m_tooltipPercent;
    /*0x20*/ LocalizeString m_desc;
    /*0x28*/ LocalizeString m_percent;
    /*0x30*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> m_tableList;
    /*0x38*/ int m_grade;
    /*0x40*/ string m_abilityOptionId;

    /*0x1205800*/ AbilityPercentEntity();
    /*0x1205400*/ void InitEntity(TableData.TableData_Abilitypercent tableData, int grade, float correctionPercent);
    /*0x12057dc*/ void SetTooltipData();

    class <>c__DisplayClass6_0
    {
        /*0x10*/ string gradeToString;

        /*0xe12c50*/ <>c__DisplayClass6_0();
        /*0xe12c58*/ bool <InitEntity>b__0(TableData.TableData_Abilityoptionvalue f);
    }
}

class AbilityPercentPopup : GuiBase
{
    /*0x40*/ AtlasImage m_gradeBG;
    /*0x48*/ AtlasImage m_gradeIcon;
    /*0x50*/ AtlasImage m_gradeTextImage;
    /*0x58*/ ScrollContent_AbilityPercentEntity m_scollContent;
    /*0x60*/ LocalizeString m_title;
    /*0x68*/ UnityEngine.GameObject m_prevButton;
    /*0x70*/ UnityEngine.GameObject m_nextButton;
    /*0x78*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> m_abilityList;
    /*0x80*/ int m_heroTableId;
    /*0x84*/ int m_showGrade;
    /*0x88*/ float m_correctionPercent;

    /*0x1206530*/ AbilityPercentPopup();
    /*0x1205894*/ void OnCreate();
    /*0x1205898*/ void OnDelete();
    /*0x120589c*/ void OnEnter();
    /*0x12058a0*/ void OnExit();
    /*0x12059f8*/ void OnFinish();
    /*0x12059fc*/ void OnLeave();
    /*0x1205a00*/ void OnStart();
    /*0x1205a04*/ void InitPopup(int heroTableId, int showGrade);
    /*0x1205b74*/ void Refresh();
    /*0x1205bf0*/ void UpdateData();
    /*0x1205e68*/ void UpdateTitle();
    /*0x1206164*/ void UpdateGrade();
    /*0x1205fe4*/ void UpdateButton();
    /*0x1205a98*/ void BindEvent();
    /*0x1205924*/ void RemoveEvent();
    /*0x12063a0*/ void HandleScrollContent(int index, AbilityPercentEntity obj);
    /*0x1206428*/ void OnClickPrev();
    /*0x12064ac*/ void OnClickNext();
    /*0x1206398*/ bool CheckUsePercent(TableData.TableData_Abilitypercent tableData);
}

class AbilityPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefreshUI;
    /*0x40*/ UnityEngine.GameObject m_emptyGameObject;
    /*0x48*/ AtlasImage m_gradeBG;
    /*0x50*/ AtlasImage m_gradeIcon;
    /*0x58*/ AtlasImage m_gradeTextImage;
    /*0x60*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x68*/ AbilityEntity[] m_abilityEntitys;
    /*0x70*/ AmountSlot m_goldAmount;
    /*0x78*/ AmountSlot m_starAmount;
    /*0x80*/ AmountSlot m_itemAmount;
    /*0x88*/ LocalizeString m_freeText;
    /*0x90*/ LocalizeString m_goldText;
    /*0x98*/ LocalizeString m_starText;
    /*0xa0*/ LocalizeString m_disableText;
    /*0xa8*/ LocalizeString m_characterText;
    /*0xb0*/ CurrencyTopWindow m_currencyTopWindow;
    /*0xb8*/ SingleTab m_buttonTabs;
    /*0xc0*/ UnityEngine.UI.Toggle m_toggle;
    /*0xc8*/ int m_selectHero;
    /*0xcc*/ int m_selectItem;
    /*0xd0*/ string m_grade;
    /*0xd8*/ PTShare.Define.SAbilityGroup m_ability;
    /*0xe0*/ TableData.TableData_Abilityreset m_resetData;

    static /*0x1209a40*/ AbilityPopup();
    /*0x12099ec*/ AbilityPopup();
    /*0x1206868*/ void OnCreate();
    /*0x120686c*/ void OnDelete();
    /*0x1206870*/ void OnEnter();
    /*0x1206874*/ void OnFinish();
    /*0x1206878*/ void OnLeave();
    /*0x120687c*/ void OnStart();
    /*0x1206880*/ void OnExit();
    /*0x1202200*/ bool EnableLock();
    /*0x1206ab8*/ int GetLockCount();
    /*0x1206b24*/ System.Collections.Generic.List<bool> GetLockList();
    /*0x1206c0c*/ int GetSelectHeroTableId();
    /*0x1206c14*/ void InitPopup(int selectHero);
    /*0x1206ff0*/ void ClearData();
    /*0x1207140*/ void UpdateData();
    /*0x1207538*/ void Refresh();
    /*0x12075e8*/ void ShowParticles();
    /*0x12072f0*/ void UpdateUI();
    /*0x1207658*/ void UpdateEntitys();
    /*0x12077ec*/ void UpdateButton();
    /*0x120731c*/ void UpdateCharacter();
    /*0x1207f7c*/ void UpdateGrade();
    /*0x12082b4*/ long GetGoldCost();
    /*0x1208334*/ long GetStarCost();
    /*0x12083b4*/ bool CheckAlarm();
    /*0x1207048*/ void BindEvent();
    /*0x12069c8*/ void RemoveEvent();
    /*0x12085ec*/ void OnClickHelp();
    /*0x1208690*/ void OnClickPercent();
    /*0x1208734*/ void OnClickSelectHero();
    /*0x120882c*/ void OnClickSelectItem();
    /*0x1208a2c*/ void OnClickFreeRoll();
    /*0x1208d68*/ void OnClickGoldAmountRoll();
    /*0x1209090*/ void OnClickStarAmountRoll();
    /*0x12093b8*/ void OnClickItemRoll();
    /*0x1209870*/ void OnClickExit();
    /*0x120987c*/ void OnClickResonance();
    /*0x1209950*/ void OnClickAlarm();
    /*0x1209a44*/ void <OnClickSelectHero>b__52_0(int tableId);
    /*0x1209a6c*/ void <OnClickSelectItem>b__53_0(int tableId);
    /*0x1209a74*/ void <OnClickFreeRoll>b__54_0(bool confirm);
    /*0x1208c44*/ void <OnClickFreeRoll>g__Roll|54_1();
    /*0x1209a80*/ void <OnClickFreeRoll>b__54_2();
    /*0x1209aa4*/ void <OnClickGoldAmountRoll>b__55_0(bool confirm);
    /*0x1208f50*/ void <OnClickGoldAmountRoll>g__Roll|55_1();
    /*0x1209ab0*/ void <OnClickGoldAmountRoll>b__55_2();
    /*0x1209ad4*/ void <OnClickStarAmountRoll>b__56_0(bool confirm);
    /*0x1209278*/ void <OnClickStarAmountRoll>g__Roll|56_1();
    /*0x1209ae0*/ void <OnClickStarAmountRoll>b__56_2();
    /*0x1209b04*/ void <OnClickItemRoll>b__57_1();
    /*0x1209b28*/ void <OnClickResonance>b__59_0();

    enum AbilityTabType
    {
        FREE = 0,
        AMOUNT = 1,
        ITEM = 2,
        DISABLE = 3,
    }

    class <>c
    {
        static /*0x0*/ AbilityPopup.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__57_0;

        static /*0xe12c84*/ <>c();
        /*0xe12ce4*/ <>c();
        /*0xe12cec*/ void <OnClickItemRoll>b__57_0(bool confirm);
    }
}

class DefineAbility
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, int> AbilityGradeMap;
    static /*0x8*/ int ABILITYMINGRADE;
    static /*0xc*/ int ABILITYMAXGRADE;

    static /*0xf5f6e4*/ DefineAbility();
    static /*0xf5f258*/ string ConvertAbilityGrade(int value);
    static /*0xf5f2e0*/ string GetGradeLocalize(int grade);
    static /*0xf5f374*/ bool IsActiveAbilityOption(TableData.TableData_Abilitypercent table, int grade);
    static /*0xf5f3ec*/ float GetAbilityOptionPercent(TableData.TableData_Abilitypercent tableData, int grade);
    static /*0xf5f454*/ TableData.TableData_Abilityoptionvalue FindOptionValue(int optionType, int valueIndex);
    static /*0xf5f5a8*/ int indexToValueIndex(int index);
    static /*0xf5f5cc*/ int indexToGrade(int index);
    static /*0xf5f608*/ int indexToIndex(int index);
    static /*0xf5f624*/ float ConvertValue(PTShare.Define.AbilityOptionType abilityOptionType, float value);
    static /*0xf5f6bc*/ bool IsPercentAbility(PTShare.Define.AbilityOptionType abilityOptionType);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ int valueIndex;

        /*0x1076658*/ <>c__DisplayClass5_0();
        /*0x1076660*/ bool <FindOptionValue>b__0(TableData.TableData_Abilityoptionvalue f);
    }
}

class ScrollContent_AbilityHeroSlot : ScrollContent<AbilityHeroSlot>
{
    /*0xe1883c*/ ScrollContent_AbilityHeroSlot();
}

class ScrollContent_AbilityItemSlot : ScrollContent<AbilityItemSlot>
{
    /*0xe188b4*/ ScrollContent_AbilityItemSlot();
}

class ScrollContent_AbilityPercentEntity : ScrollContent<AbilityPercentEntity>
{
    /*0xe1892c*/ ScrollContent_AbilityPercentEntity();
}

struct SProfile
{
    /*0x10*/ string profileids;
    /*0x18*/ PTShare.Define.Gender gender;
    /*0x20*/ string message;
    /*0x28*/ PTShare.Define.LanguageCode language;

    /*0xa8e804*/ SProfile(string _profileids, PTShare.Define.LanguageCode _lang, PTShare.Define.Gender _gender, string _msg);
    /*0xa8e818*/ void CheckProfileExpire();
}

struct UserData
{
    /*0x10*/ string token;
    /*0x18*/ string chatip;
    /*0x20*/ System.DateTime now;
    /*0x28*/ string nickname;
    /*0x30*/ int level;
    /*0x38*/ long exp;
    /*0x40*/ string campaign;
    /*0x48*/ string hcampaign;
    /*0x50*/ int campaignchapter;
    /*0x54*/ int hcampaignchapter;
    /*0x58*/ System.Collections.Generic.List<int> towerFloors;
    /*0x60*/ bool admin;
    /*0x68*/ long guildid;
    /*0x70*/ string guildname;
    /*0x78*/ PTShare.Define.SCurrency currency;
    /*0x80*/ System.DateTime lastidle;
    /*0x88*/ int heroslot;
    /*0x8c*/ bool newmail;
    /*0x90*/ int fastidleCount;
    /*0x98*/ long playerid;
    /*0xa0*/ string language;
    /*0xa8*/ long tutorial;
    /*0xb0*/ int vipPoint;
    /*0xb4*/ bool olduser;
    /*0xb8*/ PTShare.Define.SPlayer basic;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SPass> passs;
    /*0xc8*/ bool nickfree;
    /*0xc9*/ bool purchaseoff;

    /*0xa8a368*/ UserData(string _token, string _chatip, System.DateTime _now, string _nickname, int _level, long _exp, string _campaign, int _campaignchapter, string _hcampaign, int _hcampaignchapter, bool _admin, long _guildid, string _guildname, PTShare.Define.SCurrency _currency, System.DateTime _lastidle, System.Collections.Generic.List<int> _towerfloors, bool _newmail, int _heroslot, long _playerid, string _language, int _nFastIdleCount, long _tutorial, int _vipPoint, bool _olduser, PTShare.Define.SPlayer _basic, System.Collections.Generic.List<PTShare.Define.SPass> _passs);
}

class AccountManager : Singleton.Data.SingletonData<AccountManager>
{
    static /*0x0*/ System.Action OnChangeUserInfo;
    static /*0x8*/ System.Action OnCallbackTop;
    /*0x20*/ UserData m_curUserData;
    /*0xe0*/ SProfile m_curProfile;
    /*0x100*/ PTShare.Define.SStatBonus m_curStatBonus;
    /*0x108*/ System.Collections.Generic.List<PTShare.Define.SGuild> m_curSearchGuild;
    /*0x110*/ int m_curMaxChannel;
    /*0x118*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> m_curAreaPlayers;
    /*0x120*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> m_curFrameDecorate;
    /*0x128*/ System.Action<PTShare.Define.SProperty> OnCallBackIdle;
    /*0x130*/ bool m_revertFree;

    static /*0x120d908*/ AccountManager();
    static /*0x120a6b4*/ void add_OnChangeUserInfo(System.Action value);
    static /*0x120a7a8*/ void remove_OnChangeUserInfo(System.Action value);
    static /*0x120a89c*/ void add_OnCallbackTop(System.Action value);
    static /*0x120a994*/ void remove_OnCallbackTop(System.Action value);
    /*0x120d890*/ AccountManager();
    /*0x120a5e8*/ bool InitInstance();
    /*0x120a5f0*/ void ReleaseInstance();
    /*0x120a674*/ UserData GetUserData();
    /*0x120a684*/ SProfile GetPlayer();
    /*0x120a690*/ bool GetStatusRevertFree();
    /*0x120a698*/ bool ToggleRevertFree();
    /*0x12049bc*/ string get_UserToken();
    /*0x120aa8c*/ long get_PlayerID();
    /*0x120aa94*/ string get_NickName();
    /*0x120aa9c*/ string get_CurChatIP();
    /*0x120aaa4*/ PTShare.Define.SStatBonus get_StatBonus();
    /*0x120aaac*/ int Level();
    /*0x120aab4*/ long Exp();
    /*0x120aabc*/ long Gold();
    /*0x120aad8*/ long Cash();
    /*0x120aaf4*/ long HeroExp();
    /*0x120ab10*/ long Crystal();
    /*0x120ab2c*/ long FriendShip();
    /*0x120ab48*/ long MazeCoin();
    /*0x120ab64*/ long DungeonCoin();
    /*0x120ab80*/ long PveCoin1();
    /*0x120ab9c*/ long PveCoin2();
    /*0x120abb8*/ int HeroSlot();
    /*0x120ac80*/ string Message();
    /*0x120ac88*/ PTShare.Define.SCurrency GetCurrency();
    /*0x120ac90*/ void set_LastIdle(System.DateTime value);
    /*0x120ad20*/ int get_PlayerServer();
    /*0x120ad3c*/ string get_GuildName();
    /*0x120ad44*/ void SetUserLevel(int level, long exp);
    /*0x120ae80*/ void SetUserDataInfo(ServerProtocol.ResAccountLogin_Normal _resAccountLogin);
    /*0x120b24c*/ void Send_UpdateNickName(string _changeNickName);
    /*0x120b390*/ void Send_UpdateProfile(System.Action _callback);
    /*0x120b540*/ void Send_UpdateProfile(SProfile _sProfile);
    /*0x120b6b8*/ void Send_AccountNew(System.Action _callback);
    /*0x120b7ec*/ void Send_AccountFirst(System.Action _callback);
    /*0x120b968*/ void Send_AccountIdle(bool _isFast, System.Action<PTShare.Define.SProperty> _callback);
    /*0x120babc*/ void Send_AccountDetail(System.Action<ServerProtocol.ResAccountDetail> _callback, long _targetid, string _campaign, int _faction, int _floor, PTShare.Define.ArenaSubType _arena);
    /*0x120bc30*/ void Send_AccountQuit();
    /*0x120bda0*/ void Send_AccountCancelQuit(string guestid, string authtoken, System.Action _callback);
    /*0x120bee0*/ void Send_GetAreaPlayers(System.Action _callback);
    /*0x120c014*/ void Send_MoveArea(int nAreaID);
    /*0x120c18c*/ void Send_AccountUpdateCP(System.Action callback, long cp, long arenacp, long worldarenacp);
    /*0x120c27c*/ void Send_AccountLanguage(System.Action<int, int> callback);
    /*0x120c3b0*/ void Send_AccountPreviewIdle(System.Action<PTShare.Define.SProperty> callback);
    /*0x120c4e4*/ void Send_AccountUpdateAttend(System.Action callBack);
    /*0x120c618*/ void UpdateServerTime(System.DateTime time);
    /*0x120c620*/ void UpdateSAsset(PTShare.Define.SCurrency _currency);
    /*0x120c70c*/ void UpdateVipPoint(int _vipPoint);
    /*0x120ade4*/ void UpdateLevel(int _level, long _exp);
    /*0x120c824*/ void UpdateCampaign(StageDifficult _diff, string _campaign);
    /*0x120c8d4*/ void UpdateChapter(StageDifficult _diff, int _chapter);
    /*0x120c980*/ void UpdateNewMail(bool _enable);
    /*0x120c98c*/ void UpdateHeroSlot(int _sloAmount);
    /*0x120ca20*/ void UpdateRewardPopup(PTShare.Define.SProperty _tProperty);
    /*0x120cb84*/ void UpdateRewardIdlePopup(System.DateTime _clearTime, PTShare.Define.SProperty _tProperty);
    /*0x120cd1c*/ void UpdateTowerFloor(int _nFaction, int _nFloor);
    /*0x120cddc*/ void UpdateLanguage(LocaleLanguageType _eType);
    /*0x120ce7c*/ void UpdateTrainingLv(int _nlv, bool _updateCp);
    /*0x120cf3c*/ void UpdateHousingGroup(string str, bool _updateCp);
    /*0x120cffc*/ void UpdateGuildId(int _id);
    /*0x120d008*/ void UpdateGuildName(string _name);
    /*0x120d010*/ void UpdateFastIdleCount(int _count);
    /*0x120d018*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> GetAreaPlayerList();
    /*0x120d020*/ int GetAreaMaxChannel();
    /*0x120d028*/ bool IsUseDecorateFrame(int nIndex);
    /*0x120d218*/ PTShare.Define.SProfileDecorate GetProfileDecorate(int nIndex);
    /*0x120d314*/ string GetProfileDecorateExpireDate(int nIndex);
    /*0x120d5ac*/ void UpdateProfileDecorateFrame(System.Collections.Generic.List<PTShare.Define.SFrame> frameList);

    class <>c__DisplayClass53_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ string _changeNickName;

        /*0xe12edc*/ <>c__DisplayClass53_0();
        /*0xe12ee4*/ void <Send_UpdateNickName>b__0(ServerProtocol.ResUpdateNickname _resUpdateNickName);
    }

    class <>c
    {
        static /*0x0*/ AccountManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__53_1;
        static /*0x10*/ System.Action<ServerProtocol.ResAccountQuit> <>9__60_0;
        static /*0x18*/ System.Action<ServerProtocol.ResAccountMoveArea> <>9__63_0;

        static /*0xe12cf0*/ <>c();
        /*0xe12d50*/ <>c();
        /*0xe12d58*/ void <Send_UpdateNickName>b__53_1(PTShare.Define.SItem item);
        /*0xe12de0*/ void <Send_AccountQuit>b__60_0(ServerProtocol.ResAccountQuit res);
        /*0xe12e60*/ void <Send_MoveArea>b__63_0(ServerProtocol.ResAccountMoveArea res);
    }

    class <>c__DisplayClass54_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe130e4*/ <>c__DisplayClass54_0();
        /*0xe130ec*/ void <Send_UpdateProfile>b__0(ServerProtocol.ResUpdateProfile _resUpdateProfile);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ SProfile _sProfile;

        /*0xe13258*/ <>c__DisplayClass55_0();
        /*0xe13260*/ void <Send_UpdateProfile>b__0(ServerProtocol.ResUpdateProfile _resUpdateProfile);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe1334c*/ <>c__DisplayClass56_0();
        /*0xe13354*/ void <Send_AccountNew>b__0(ServerProtocol.ResAccountNew _instance);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Func<PTShare.Define.SHero, long> <>9__1;

        /*0xe13688*/ <>c__DisplayClass57_0();
        /*0xe13690*/ void <Send_AccountFirst>b__0(ServerProtocol.ResAccountFirst _instance);
        /*0xe1448c*/ long <Send_AccountFirst>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ bool _isFast;
        /*0x18*/ AccountManager <>4__this;

        /*0xe144b4*/ <>c__DisplayClass58_0();
        /*0xe144bc*/ void <Send_AccountIdle>b__0(ServerProtocol.ResAccountIdle _response);
    }

    class <>c__DisplayClass59_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResAccountDetail> _callback;

        /*0xe146e8*/ <>c__DisplayClass59_0();
        /*0xe146f0*/ void <Send_AccountDetail>b__0(ServerProtocol.ResAccountDetail response);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe147bc*/ <>c__DisplayClass61_0();
        /*0xe147c4*/ void <Send_AccountCancelQuit>b__0(ServerProtocol.ResAccountCancelQuit res);
    }

    class <>c__DisplayClass62_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe147d8*/ <>c__DisplayClass62_0();
        /*0xe147e0*/ void <Send_GetAreaPlayers>b__0(ServerProtocol.ResAccountPlayers res);
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ System.Action<int, int> callback;

        /*0xe1489c*/ <>c__DisplayClass65_0();
        /*0xe148a4*/ void <Send_AccountLanguage>b__0(ServerProtocol.ResAccountLanguage res);
    }

    class <>c__DisplayClass66_0
    {
        /*0x10*/ System.Action<PTShare.Define.SProperty> callback;

        /*0xe1491c*/ <>c__DisplayClass66_0();
        /*0xe14924*/ void <Send_AccountPreviewIdle>b__0(ServerProtocol.ResAccountPreviewIdle res);
    }

    class <>c__DisplayClass67_0
    {
        /*0x10*/ System.Action callBack;

        /*0xe1499c*/ <>c__DisplayClass67_0();
        /*0xe149a4*/ void <Send_AccountUpdateAttend>b__0(ServerProtocol.ResAccountUpdateAttend res);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ int nIndex;

        /*0xe14a30*/ <>c__DisplayClass87_0();
        /*0xe14a38*/ bool <IsUseDecorateFrame>b__0(PTShare.Define.SProfileDecorate x);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ int nIndex;

        /*0xe14a5c*/ <>c__DisplayClass88_0();
        /*0xe14a64*/ bool <GetProfileDecorate>b__0(PTShare.Define.SProfileDecorate x);
    }
}

class AdjustManager : Singleton.Component.SingletonComponent<AdjustManager>
{
    static string EVENT_LOGIN = "2d6w4e";
    static string EVENT_NEWCHARACTER = "djzlk1";
    static string EVENT_COMPLETETUTORIAL = "1r5exi";
    static string EVENT_REVENUE = "oj074e";
    static string EVENT_PLAYERLEVEL_3 = "to7sti";
    static string EVENT_PLAYERLEVEL_10 = "urjpax";
    static string EVENT_PLAYERLEVEL_30 = "81biv4";
    static string EVENT_PLAYERLEVEL_50 = "ze9l6c";
    static string EVENT_PLAYERLEVEL_100 = "yv8c5a";
    static string EVENT_PLAYERLEVEL_200 = "d54j4i";
    static string EVENT_CLEARSTAGE_2_1 = "9k7h9y";
    static string EVENT_CLEARSTAGE_3_1 = "ggaeb3";
    static string EVENT_CLEARSTAGE_4_1 = "rbq7xf";
    static string EVENT_CLEARSTAGE_5_1 = "c6zq3f";
    static string EVENT_CLEARSTAGE_10_1 = "go1qbe";
    static string EVENT_CLEARSTAGE_15_1 = "ifk4pg";
    /*0x28*/ string _AppToken;
    /*0x30*/ string _SecretToken;
    /*0x38*/ bool _OfflineMode;
    /*0x3c*/ com.adjust.sdk.AdjustLogLevel _LogLevel;
    /*0x40*/ com.adjust.sdk.AdjustEnvironment _Environment;

    /*0x1218a74*/ AdjustManager();
    /*0x121839c*/ void AwakeInstance();
    /*0x12183a0*/ bool InitInstance();
    /*0x1218564*/ void ReleaseInstance();
    /*0x12183b8*/ void Init();
    /*0x1218568*/ void AddEvent(string entToken);
    /*0x120b1f4*/ void Event_Login();
    /*0x12185e8*/ void Event_NewCharacter();
    /*0x1218640*/ void Event_CompleteTutorial();
    /*0x1218698*/ void Event_PlayerLevel(int nLevel);
    /*0x12187bc*/ void Event_StageClear(string mappoint);
    /*0x12189a8*/ void SetRevenue(string transcationId, double price, string monetary);
}

class ConsoleCheatManager : Singleton.Data.SingletonData<ConsoleCheatManager>
{
    static /*0x0*/ System.Action OnCheatRefreshEvent;
    static /*0x8*/ System.Action<string> OnCallReturnMessage;
    /*0x20*/ CheatKeyWindow m_CheatKeyWindow;

    static /*0x10e964c*/ ConsoleCheatManager();
    static /*0x10e9034*/ void add_OnCheatRefreshEvent(System.Action value);
    static /*0x10e9128*/ void remove_OnCheatRefreshEvent(System.Action value);
    static /*0x10dad70*/ void add_OnCallReturnMessage(System.Action<string> value);
    static /*0x10dac78*/ void remove_OnCallReturnMessage(System.Action<string> value);
    static /*0x10e932c*/ System.Collections.Generic.List<string> <Send_ConsoleCheat>g__GetSSSFileNames|11_2();
    static /*0x10e92a8*/ string <Send_ConsoleCheat>g__NormalizeAndroidPath|11_3(string indata);
    /*0x10e95d4*/ ConsoleCheatManager();
    /*0x10e921c*/ string get_Token();
    /*0x10e929c*/ bool InitInstance();
    /*0x10e92a4*/ void ReleaseInstance();
    /*0x10db1bc*/ void Send_ConsoleCheat(string _input);
    /*0x10e95cc*/ void SetCheatKeyWindow(CheatKeyWindow _window);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ string[] _split;
        /*0x18*/ System.Action <>9__6;
        /*0x20*/ System.Action <>9__5;

        /*0x1071b54*/ <>c__DisplayClass11_0();
        /*0x1071b5c*/ void <Send_ConsoleCheat>b__4(ServerProtocol.ResAccountLogin res);
        /*0x1071d04*/ void <Send_ConsoleCheat>b__5();
        /*0x1071dec*/ void <Send_ConsoleCheat>b__6();
    }

    class <>c__DisplayClass11_1
    {
        /*0x10*/ int idx;
        /*0x18*/ System.Text.StringBuilder sb;

        /*0x1071f40*/ <>c__DisplayClass11_1();
        /*0x1071f48*/ string <Send_ConsoleCheat>b__7(string _name);
        /*0x1071fe0*/ void <Send_ConsoleCheat>b__8(string a);
    }

    class <>c__DisplayClass11_2
    {
        /*0x10*/ int faction;
        /*0x18*/ System.Action<TableData.TableData_Gacha> <>9__10;

        /*0x1071ffc*/ <>c__DisplayClass11_2();
        /*0x1072004*/ void <Send_ConsoleCheat>b__10(TableData.TableData_Gacha table);
    }

    class <>c__DisplayClass11_3
    {
        /*0x10*/ string furnitureSet;

        /*0x1072528*/ <>c__DisplayClass11_3();
        /*0x1072530*/ bool <Send_ConsoleCheat>b__11(TableData.TableData_Furniture f);
    }

    class <>c__DisplayClass11_4
    {
        /*0x10*/ ServerProtocol.ResAdminConsole _instance;

        /*0x107165c*/ <>c__DisplayClass11_4();
        /*0x1072570*/ bool <Send_ConsoleCheat>b__15(System.ValueTuple<string, string, string> w);
    }

    class <>c
    {
        static /*0x0*/ ConsoleCheatManager.<> <>9;
        static /*0x8*/ System.Action<System.Byte[]> <>9__11_0;
        static /*0x10*/ System.Action<ServerProtocol.ResAdminImport> <>9__11_9;
        static /*0x18*/ System.Comparison<TableData.TableData_Furniture> <>9__11_12;
        static /*0x20*/ System.Func<string, long> <>9__11_16;
        static /*0x28*/ System.Action <>9__11_18;
        static /*0x30*/ System.Action <>9__11_17;
        static /*0x38*/ System.Action<ServerProtocol.ResAccountLogin> <>9__11_13;
        static /*0x40*/ System.Action <>9__11_14;
        static /*0x48*/ System.Action<ServerProtocol.ResAdminConsole> <>9__11_1;
        static /*0x50*/ System.Func<System.IO.FileInfo, string> <>9__11_19;
        static /*0x58*/ System.Func<string, string> <>9__11_20;

        static /*0x106f614*/ <>c();
        /*0x106f674*/ <>c();
        /*0x106f67c*/ void <Send_ConsoleCheat>b__11_0(byte[] _res);
        /*0x106fbac*/ void <Send_ConsoleCheat>b__11_9(ServerProtocol.ResAdminImport _res);
        /*0x106fca0*/ int <Send_ConsoleCheat>b__11_12(TableData.TableData_Furniture lhs, TableData.TableData_Furniture rhs);
        /*0x106fd9c*/ void <Send_ConsoleCheat>b__11_1(ServerProtocol.ResAdminConsole _instance);
        /*0x1071664*/ long <Send_ConsoleCheat>b__11_16(string s);
        /*0x1071670*/ void <Send_ConsoleCheat>b__11_13(ServerProtocol.ResAccountLogin res);
        /*0x107181c*/ void <Send_ConsoleCheat>b__11_17();
        /*0x1071964*/ void <Send_ConsoleCheat>b__11_18();
        /*0x1071a7c*/ void <Send_ConsoleCheat>b__11_14();
        /*0x1071b2c*/ string <Send_ConsoleCheat>b__11_19(System.IO.FileInfo s);
        /*0x1071b4c*/ string <Send_ConsoleCheat>b__11_20(string o);
    }
}

class AdmobManager : Singleton.Component.SingletonComponent<AdmobManager>
{
    /*0x28*/ string[] m_arrAppID;
    /*0x30*/ string[] m_arrRewardUnitID;
    /*0x38*/ GoogleMobileAds.Api.RewardedAd m_rewardedAd;
    /*0x40*/ bool m_bInitialized;
    /*0x44*/ TableManager.Ads.AdsRewardType m_eLastRewardType;
    /*0x48*/ System.Collections.IEnumerator m_ieLoading;

    /*0x121acf8*/ AdmobManager();
    /*0x121a200*/ string get_UnitID();
    /*0x121a234*/ void AwakeInstance();
    /*0x121a238*/ bool InitInstance();
    /*0x121a2e0*/ void ReleaseInstance();
    /*0x121a250*/ void InitializeMediation();
    /*0x121a2e4*/ void ShowRewarded(TableManager.Ads.AdsRewardType eRewardType);
    /*0x121a704*/ void M_rewardedAd_OnAdLoaded(object sender, System.EventArgs e);
    /*0x121a698*/ System.Collections.IEnumerator CoLoadingAds();
    /*0x121aa64*/ void M_rewardedAd_OnUserEarnedReward(object sender, GoogleMobileAds.Api.Reward e);
    /*0x121aafc*/ void M_rewardedAd_OnAdClosed(object sender, System.EventArgs e);
    /*0x121aba8*/ void M_rewardedAd_OnAdFailedToShow(object sender, GoogleMobileAds.Api.AdErrorEventArgs e);
    /*0x121ac50*/ void M_rewardedAd_OnAdFailedToLoad(object sender, GoogleMobileAds.Api.AdFailedToLoadEventArgs e);
    /*0x121aa90*/ System.Collections.IEnumerator CoEarnedReward();
    /*0x121ab04*/ void PauseAudio(bool _bPause);
    /*0x121aeac*/ void <InitializeMediation>b__11_0(GoogleMobileAds.Api.InitializationStatus initStatus);
    /*0x121b23c*/ bool <CoLoadingAds>b__14_0();

    class <CoLoadingAds>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AdmobManager <>4__this;

        /*0xd997b0*/ <CoLoadingAds>d__14(int <>1__state);
        /*0xd997dc*/ void System.IDisposable.Dispose();
        /*0xd997e0*/ bool MoveNext();
        /*0xd9992c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd99934*/ void System.Collections.IEnumerator.Reset();
        /*0xd99974*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEarnedReward>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AdmobManager <>4__this;

        /*0xd995e4*/ <CoEarnedReward>d__19(int <>1__state);
        /*0xd99610*/ void System.IDisposable.Dispose();
        /*0xd99614*/ bool MoveNext();
        /*0xd99760*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd99768*/ void System.Collections.IEnumerator.Reset();
        /*0xd997a8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AdMobUtility
{
    static /*0x120e57c*/ string GetTestDeviceId();
    static /*0x120e5a4*/ string GetAndroidId();
    static /*0x120e880*/ byte[] GetASCIIBytes(string str);
    static /*0x120e86c*/ string CalculateMD5Hash(string input);
    static /*0x120e954*/ string CalculateMD5Hash(byte[] input);
}

class AdsManager : Singleton.Component.SingletonComponent<AdsManager>
{
    static /*0x0*/ System.Action onRewardUpdateEvent;
    /*0x28*/ System.Collections.Generic.List<TableManager.Ads.AdsRewardType> m_liPickupRewards;

    static /*0xed8e50*/ AdsManager();
    static /*0xed8278*/ void add_onRewardUpdateEvent(System.Action value);
    static /*0xed836c*/ void remove_onRewardUpdateEvent(System.Action value);
    /*0xed8dc4*/ AdsManager();
    /*0xed8460*/ void AwakeInstance();
    /*0xed8464*/ bool InitInstance();
    /*0xed846c*/ void ReleaseInstance();
    /*0xed84d0*/ void SetPickupRewards(System.Collections.Generic.List<string> data);
    /*0xed8884*/ void AddPickupReward(TableManager.Ads.AdsRewardType _eType);
    /*0xed8a10*/ bool IsAlreadyGetReward(TableManager.Ads.AdsRewardType _eType);
    /*0xed8b0c*/ bool IsNotCompleteAdsReward();
    /*0xed8b80*/ bool IsPossibleFinalReward();
    /*0xed8be0*/ void ResetDailyAdsReward();
    /*0xed8c3c*/ void Send_AdsFinal(System.Action callback);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ TableManager.Ads.AdsRewardType _eType;

        /*0xd99a94*/ <>c__DisplayClass8_0();
        /*0xd99a9c*/ bool <AddPickupReward>b__0(TableManager.Ads.AdsRewardType x);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ TableManager.Ads.AdsRewardType _eType;

        /*0xd99b40*/ <>c__DisplayClass9_0();
        /*0xd99b48*/ bool <IsAlreadyGetReward>b__0(TableManager.Ads.AdsRewardType x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ System.Action callback;

        /*0xd9997c*/ <>c__DisplayClass13_0();
        /*0xd99984*/ void <Send_AdsFinal>b__0(ServerProtocol.ResADFinalReward res);
    }
}

struct ArenaTargetUser
{
    /*0x10*/ long playerid;
    /*0x18*/ string nickname;
    /*0x20*/ int herotableid;
    /*0x24*/ int gender;
    /*0x28*/ int level;

    /*0xa84b90*/ ArenaTargetUser(long playerid, string nickname, int herotableid, int gender, int level);
    /*0xa84ba0*/ ArenaTargetUser(PTShare.Define.SArenaTarget _target);
    /*0xa84ba8*/ ArenaTargetUser(PTShare.Define.SArenaHistory _target);
    /*0xa84bb0*/ ArenaTargetUser(PTShare.Define.SWorldArenaTarget _target);
}

struct ArenaTarget
{
    /*0x10*/ ArenaTargetUser target;
    /*0x30*/ int myscore_before;
    /*0x34*/ int myscore_after;
    /*0x38*/ int targetscore_before;
    /*0x3c*/ int targetscore_after;
    /*0x40*/ int myrank;
    /*0x44*/ int myrank_move;

    /*0xa84b78*/ ArenaTarget(ArenaTargetUser target, int myscore_before, int myscore_after, int targetscore_before, int targetscore_after, int myrank, int myrank_move);
}

class ArenaManager : Singleton.Data.SingletonData<ArenaManager>
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x20*/ System.Collections.Generic.List<int> liGeneralArenaDeck;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> liArenaRankers;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> liArenaTargets;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> liArenaHistory;
    /*0x40*/ int nMyPoint;
    /*0x44*/ int nMyRank;
    /*0x48*/ int nRandomSeed;
    /*0x4c*/ int nFreeArenaTicket;
    /*0x50*/ long nArenaDeckTotalPower;
    /*0x58*/ int nRewardIndex;
    /*0x5c*/ int nArenaWinCount;
    /*0x60*/ bool bIsReward;
    /*0x61*/ bool bIsTargetArenaWinner;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> liTargetPlayerHero;
    /*0x70*/ ArenaTarget arenaTarget;
    /*0xa8*/ PTShare.Define.SStatBonus vsStatBonus;
    /*0xb0*/ PTShare.Define.SStatBonus myStatBonus;
    /*0xb8*/ System.Collections.Generic.List<int> liWorldArenaDeck;
    /*0xc0*/ System.Collections.Generic.List<int> liWorldArenaBlind;
    /*0xc8*/ System.Collections.Generic.List<int> liTmpWorldArenaBlind;
    /*0xd0*/ ServerProtocol.ResWorldArenaEnter currentWorldArenaInfo;
    /*0xd8*/ int nTrainingLevel;
    /*0xe0*/ long nWorldArenaDeckTotalPower;
    /*0xe8*/ System.Collections.Generic.List<int> liTargetPlayerBlind;
    /*0xf0*/ System.Collections.Generic.List<int> liEmptyBlind;

    static /*0xee84dc*/ ArenaManager();
    static /*0xee4338*/ void add_OnChangeEvent(System.Action value);
    static /*0xee4244*/ void remove_OnChangeEvent(System.Action value);
    static /*0xee4dd8*/ bool <RemoveHero>g__IsEmptyArenaDeck|24_0(ref System.Collections.Generic.List<int> target, ref ArenaManager.<> );
    /*0xee8238*/ ArenaManager();
    /*0xee4b0c*/ string get_UserToken();
    /*0xee4b8c*/ bool InitInstance();
    /*0xee4b94*/ void ReleaseInstance();
    /*0xee4bf8*/ void RemoveHero(int heroId);
    /*0xee4640*/ void Send_MainArena(System.Action _callback);
    /*0xee523c*/ void Send_EnterArena(System.Action _callback);
    /*0xee5374*/ void Send_UpdateDeckArena(System.Action _callback, string _heroids);
    /*0xee54c4*/ void Send_SearchArena(System.Action _callback);
    /*0xee55fc*/ void Send_ChoiceArena(System.Action _callback, int _seqid);
    /*0xee5808*/ void Send_FinishArena(System.Action _callback, string _heroids, long lcp, long rcp, ArenaTargetUser _target, string _graphData, string _hpmps, bool _isWin);
    /*0xee59ac*/ void Send_HistoryArena(System.Action _callback);
    /*0xee5ae4*/ void Send_TicketArena(System.Action _callback, int _count);
    /*0xee5c28*/ void Send_ReplayArena(Battle.GameModeType _eType, PTShare.Define.SArenaHistory _history, System.Action _callback);
    /*0xee5d70*/ int GetMyRank();
    /*0xee5d78*/ int GetMyPoint();
    /*0xee5d80*/ int GetRandomSeed();
    /*0xee5d88*/ int GetFreeTicket();
    /*0xee5d90*/ int GetRewardIndex();
    /*0xee5d98*/ int GetArenaWinCount();
    /*0xee5da0*/ bool GetIsReward();
    /*0xee5da8*/ System.Collections.Generic.List<int> GetArenaDeck();
    /*0xee5e20*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> GetArenaRankers();
    /*0xee5e98*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> GetArenaTargets();
    /*0xee5f10*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> GetArenaHistory();
    /*0xee5f88*/ void SetResultArenaTarget(ArenaTarget _arenaTarget);
    /*0xee5fa4*/ ArenaTarget GetResultArena();
    /*0xee5fc0*/ PTShare.Define.SStatBonus GetStatBonus_VS();
    /*0xee5fc8*/ PTShare.Define.SStatBonus GetStatBonus_My();
    /*0xee5fd0*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> GetTargetPlayerHero();
    /*0xee6048*/ long GetArenaDeckTotalPower();
    /*0xee6050*/ bool GetTargetWinner();
    /*0xee4efc*/ long GetArenaDeckListTotalPower(bool _updateCp);
    /*0xee3928*/ bool GetReadyArena(bool checkSeasonFinishTime);
    /*0xee6058*/ void SetTargetWinner(bool _isWin);
    /*0xee6064*/ void SetArenaDeck(System.Collections.Generic.List<int> deck);
    /*0xee6090*/ void SetArenaWindCount(int arenaWinCount);
    /*0xee48f8*/ void RefreshArenaDeckPower(bool updateCp);
    /*0xee6098*/ void UpdateArenaDeckPower(int heroId);
    /*0xee613c*/ void Send_EnterWorldArena(System.Action _callback);
    /*0xee6274*/ void Send_UpdateDeckWorldArena(System.Action _callback, string _heroids);
    /*0xee655c*/ void Send_ChoiceWorldArena(System.Action _callback, long _playerid);
    /*0xee68a0*/ void Send_RefreshWorldArena(System.Action _callback);
    /*0xee69d8*/ void Send_FinishWorldArena(System.Action _callback, string _heroids, long lcp, long rcp, ArenaTargetUser _target, string _graphData, string _hpmps, bool _isWin);
    /*0xee6b7c*/ void Send_HistoryWorldArena(System.Action _callback);
    /*0xee6cb4*/ void Send_TicketWorldArena(System.Action _callback, int _count);
    /*0xee6df8*/ void Send_TrainingWorldArena(System.Action _callback);
    /*0xee6f30*/ void SetTraningLevel(int level, bool _updateCp);
    /*0xee6fd0*/ void SetWorldArenaDeck(System.Collections.Generic.List<int> deck, System.Collections.Generic.List<int> blind);
    /*0xee70ec*/ void SetWorldArenaScore(int score);
    /*0xee7108*/ void SetWorldArenaTier(int tier);
    /*0xee7124*/ void SetWorldArenaRank(int rank);
    /*0xee715c*/ void SetTmpWorldArenaBlind(int index, bool enable);
    /*0xee7224*/ void ApplyWorldArenaBlind();
    /*0xee72a0*/ long GetWorldTotalPower();
    /*0xee509c*/ long GetWorldArenaDeckListTotalPower(bool _updateCp);
    /*0xee72a8*/ System.Collections.Generic.List<int> GetWorldArenaDeck();
    /*0xee7320*/ System.Collections.Generic.List<int> GetWorldArenaBlind();
    /*0xee7404*/ System.Collections.Generic.List<int> GetWorldArenaEmptyBlind();
    /*0xee740c*/ System.Collections.Generic.List<int> GetWorldArenaTargetBlind(long playerid);
    /*0xee7570*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> GetWorldArenaTargetHeroes(long playerid);
    /*0xee7670*/ int GetWorldArenaTargetTier(long playerid);
    /*0xee7770*/ int GetWorldArenaRankerTier(long playerid);
    /*0xee7870*/ System.Collections.Generic.List<int> GetWorldArenaCurrentTargetBlind();
    /*0xee78e8*/ int GetWorldArenaSeason();
    /*0xee7900*/ int GetWorldArenaScore();
    /*0xee7918*/ int GetWorldArenaBestScore();
    /*0xee2384*/ int GetWorldArenaRank();
    /*0xee7930*/ int GetWorldArenaTopRank();
    /*0xee2adc*/ int GetWorldArenaTier();
    /*0xee7948*/ int GetWorldArenaTopTier();
    /*0xee7960*/ long GetWorldArenaCP();
    /*0xee7978*/ int GetWorldArenaFreeTicket();
    /*0xee7990*/ System.DateTime GetWorldArenaFreeRefreshTime();
    /*0xee7a2c*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> GetWorldArenaTargets();
    /*0xee7aac*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaRanker> GetWorldArenaRankers();
    /*0xee7b2c*/ bool IsPossiableFreeRefresh();
    /*0xee3ba4*/ bool IsWorldArenaCalculateTIme(bool isDaily);
    /*0xee7c00*/ bool IsWorldArenaCalculateAfterTIme(bool isDaily);
    /*0xee7d64*/ System.TimeSpan GetWorldArenaCalculateTime(bool isDaily);
    /*0xee7ecc*/ bool IsPossiableBlindSystem();
    /*0xee753c*/ bool IsPossiableBlindSystem_Target(long playerid);
    /*0xee7f08*/ bool IsPossiableBlindSystem_Ranker(long playerid);
    /*0xee7f3c*/ int GetTrainingLevel();
    /*0xee7f44*/ int GetTraningGroupLevel(int nTraninglv);
    /*0xee7fc4*/ int GetTraningIndivLevel(int nTraninglv);
    /*0xee8048*/ float GetTrainingStat(Battle.CharacterStat.StatType type, int nTraininglv);
    /*0xee80c4*/ float GetTrainingStat(Battle.CharacterStat.StatType type);
    /*0xee8140*/ float GetTrainingStat(PTShare.Define.Currency type, int nTraininglv);
    /*0xee81bc*/ float GetTrainingStat(PTShare.Define.Currency type);

    struct <>c__DisplayClass24_0
    {
        /*0x10*/ int heroId;
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b120*/ <>c__DisplayClass25_0();
        /*0xd9b128*/ void <Send_MainArena>b__0(ServerProtocol.ResArenaMain res);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b1fc*/ <>c__DisplayClass26_0();
        /*0xd9b204*/ void <Send_EnterArena>b__0(ServerProtocol.ResArenaEnter res);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ string _heroids;
        /*0x20*/ System.Action _callback;

        /*0xd9b290*/ <>c__DisplayClass27_0();
        /*0xd9b298*/ void <Send_UpdateDeckArena>b__0(ServerProtocol.ResArenaUpdateDeck res);
    }

    class <>c
    {
        static /*0x0*/ ArenaManager.<> <>9;
        static /*0x8*/ System.Converter<string, int> <>9__27_1;
        static /*0x10*/ System.Action<int, string> <>9__29_1;
        static /*0x18*/ System.Func<int, long> <>9__52_0;
        static /*0x20*/ System.Converter<string, int> <>9__68_1;
        static /*0x28*/ System.Func<PTShare.Define.SWorldArenaRanker, bool> <>9__68_2;
        static /*0x30*/ System.Predicate<int> <>9__69_0;
        static /*0x38*/ System.Action<int, string> <>9__69_2;
        static /*0x40*/ System.Func<int, long> <>9__83_0;

        static /*0xd9acac*/ <>c();
        /*0xd9ad0c*/ <>c();
        /*0xd9ad14*/ int <Send_UpdateDeckArena>b__27_1(string x);
        /*0xd9ad4c*/ void <Send_ChoiceArena>b__29_1(int failed, string args);
        /*0xd9ae30*/ long <GetArenaDeckListTotalPower>b__52_0(int x);
        /*0xd9af00*/ int <Send_UpdateDeckWorldArena>b__68_1(string x);
        /*0xd9af38*/ bool <Send_UpdateDeckWorldArena>b__68_2(PTShare.Define.SWorldArenaRanker x);
        /*0xd9afd4*/ bool <Send_ChoiceWorldArena>b__69_0(int x);
        /*0xd9afe0*/ void <Send_ChoiceWorldArena>b__69_2(int failed, string args);
        /*0xd9b050*/ long <GetWorldArenaDeckListTotalPower>b__83_0(int x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b568*/ <>c__DisplayClass28_0();
        /*0xd9b570*/ void <Send_SearchArena>b__0(ServerProtocol.ResArenaSearch res);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b5ac*/ <>c__DisplayClass29_0();
        /*0xd9b5b4*/ void <Send_ChoiceArena>b__0(ServerProtocol.ResArenaChoice res);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ bool _isWin;
        /*0x20*/ ArenaTargetUser _target;
        /*0x40*/ System.Action _callback;

        /*0xd9b6bc*/ <>c__DisplayClass30_0();
        /*0xd9b6c4*/ void <Send_FinishArena>b__0(ServerProtocol.ResArenaFinish res);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b958*/ <>c__DisplayClass31_0();
        /*0xd9b960*/ void <Send_HistoryArena>b__0(ServerProtocol.ResArenaHistory res);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ System.Action _callback;

        /*0xd9b99c*/ <>c__DisplayClass32_0();
        /*0xd9b9a4*/ void <Send_TicketArena>b__0(ServerProtocol.ResArenaTicket res);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ Battle.GameModeType _eType;

        /*0xd9bab4*/ <>c__DisplayClass33_0();
        /*0xd9babc*/ void <Send_ReplayArena>b__0(ServerProtocol.ResArenaReplay res);
    }

    class <>c__DisplayClass67_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9bb9c*/ <>c__DisplayClass67_0();
        /*0xd9bba4*/ void <Send_EnterWorldArena>b__0(ServerProtocol.ResWorldArenaEnter res);
    }

    class <>c__DisplayClass67_1
    {
        /*0x10*/ bool tiercheck;
        /*0x11*/ bool pointcheck;
        /*0x18*/ ArenaManager.<> CS$<>8__locals1;

        /*0xd9bd88*/ <>c__DisplayClass67_1();
        /*0xd9bd90*/ void <Send_EnterWorldArena>b__1(ServerProtocol.ResWorldArenaReward res2);
    }

    class <>c__DisplayClass68_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ string _heroids;
        /*0x20*/ System.Action _callback;

        /*0xd9c158*/ <>c__DisplayClass68_0();
        /*0xd9c160*/ void <Send_UpdateDeckWorldArena>b__0(ServerProtocol.ResWorldArenaUpdateDeck res);
    }

    class <>c__DisplayClass69_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ long _playerid;
        /*0x20*/ System.Action _callback;

        /*0xd9c6dc*/ <>c__DisplayClass69_0();
        /*0xd9c6e4*/ void <Send_ChoiceWorldArena>b__1(ServerProtocol.ResWorldArenaChoice res);
    }

    class <>c__DisplayClass70_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9c858*/ <>c__DisplayClass70_0();
        /*0xd9c860*/ void <Send_RefreshWorldArena>b__0(ServerProtocol.ResWorldArenaRefresh res);
    }

    class <>c__DisplayClass71_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ bool _isWin;
        /*0x20*/ ArenaTargetUser _target;
        /*0x40*/ System.Action _callback;

        /*0xd9c9b0*/ <>c__DisplayClass71_0();
        /*0xd9c9b8*/ void <Send_FinishWorldArena>b__0(ServerProtocol.ResWorldArenaFinish res);
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9cb84*/ <>c__DisplayClass72_0();
        /*0xd9cb8c*/ void <Send_HistoryWorldArena>b__0(ServerProtocol.ResWorldArenaHistory res);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ System.Action _callback;

        /*0xd9cbc8*/ <>c__DisplayClass73_0();
        /*0xd9cbd0*/ void <Send_TicketWorldArena>b__0(ServerProtocol.ResWorldArenaTicket res);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9cce0*/ <>c__DisplayClass74_0();
        /*0xd9cce8*/ void <Send_TrainingWorldArena>b__0(ServerProtocol.ResWorldArenaTraining res);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ long playerid;

        /*0xd9ce34*/ <>c__DisplayClass87_0();
        /*0xd9ce3c*/ bool <GetWorldArenaTargetBlind>b__0(PTShare.Define.SWorldArenaTarget x);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ long playerid;

        /*0xd9ce60*/ <>c__DisplayClass88_0();
        /*0xd9ce68*/ bool <GetWorldArenaTargetHeroes>b__0(PTShare.Define.SWorldArenaTarget x);
    }

    class <>c__DisplayClass89_0
    {
        /*0x10*/ long playerid;

        /*0xd9ce8c*/ <>c__DisplayClass89_0();
        /*0xd9ce94*/ bool <GetWorldArenaTargetTier>b__0(PTShare.Define.SWorldArenaTarget x);
    }

    class <>c__DisplayClass90_0
    {
        /*0x10*/ long playerid;

        /*0xd9ceb8*/ <>c__DisplayClass90_0();
        /*0xd9cec0*/ bool <GetWorldArenaRankerTier>b__0(PTShare.Define.SWorldArenaRanker x);
    }
}

enum WorldArenaRecordType
{
    Tier = 0,
    Point = 1,
}

class ArtifactManager : Singleton.Data.SingletonData<ArtifactManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArtifact> liArtifactData;

    /*0xeef2dc*/ ArtifactManager();
    /*0xeeeea4*/ string get_UserToken();
    /*0xeeef24*/ bool InitInstance();
    /*0xeeef2c*/ void ReleaseInstance();
    /*0xeeef30*/ void Send_ArtifactReinforce(int artifactid, System.Action<PTShare.Define.SHero> callback);
    /*0xeec5e4*/ void Send_ArtifactEquip(int heroid, int artifactid, System.Action<PTShare.Define.SHero> callback);
    /*0xeec8e4*/ void Send_ArtifactSwap(int heroid, int destheroid, System.Action<PTShare.Define.SHero> callback);
    /*0xeeebd0*/ void Send_ArtifactUnEquip(int heroid, System.Action<PTShare.Define.SHero> callback);
    /*0xeef084*/ void SetArtifactList(System.Collections.Generic.List<PTShare.Define.SArtifact> list);
    /*0xeef114*/ System.Collections.Generic.List<PTShare.Define.SArtifact> GetArtifactList();
    /*0xeec140*/ PTShare.Define.SArtifact FindArtifactToID(int artifactid);
    /*0xeef11c*/ void IncreaseArtifact(System.Collections.Generic.List<PTShare.Define.SArtifact> list);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ ArtifactManager <>4__this;
        /*0x18*/ int artifactid;
        /*0x20*/ System.Action<PTShare.Define.SHero> callback;
        /*0x28*/ System.Func<PTShare.Define.SArtifact, bool> <>9__1;

        /*0xd9d570*/ <>c__DisplayClass5_0();
        /*0xd9d578*/ void <Send_ArtifactReinforce>b__0(ServerProtocol.ResEquipArtifactReinforce res);
        /*0xd9d83c*/ bool <Send_ArtifactReinforce>b__1(PTShare.Define.SArtifact x);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ ArtifactManager <>4__this;
        /*0x18*/ int artifactid;
        /*0x1c*/ int heroid;
        /*0x20*/ System.Action<PTShare.Define.SHero> callback;
        /*0x28*/ System.Func<PTShare.Define.SArtifact, bool> <>9__1;

        /*0xd9d860*/ <>c__DisplayClass6_0();
        /*0xd9d868*/ void <Send_ArtifactEquip>b__0(ServerProtocol.ResHeroArtifactEquip res);
        /*0xd9da58*/ bool <Send_ArtifactEquip>b__1(PTShare.Define.SArtifact x);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ int heroid;
        /*0x14*/ int destheroid;
        /*0x18*/ System.Action<PTShare.Define.SHero> callback;

        /*0xd9da7c*/ <>c__DisplayClass7_0();
        /*0xd9da84*/ void <Send_ArtifactSwap>b__0(ServerProtocol.ResHeroArtifactSwap res);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ int heroid;
        /*0x18*/ System.Action<PTShare.Define.SHero> callback;

        /*0xd9dbf4*/ <>c__DisplayClass8_0();
        /*0xd9dbfc*/ void <Send_ArtifactUnEquip>b__0(ServerProtocol.ResHeroArtifactUnequip res);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ int artifactid;

        /*0xd9d4ac*/ <>c__DisplayClass11_0();
        /*0xd9d4b4*/ bool <FindArtifactToID>b__0(PTShare.Define.SArtifact x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SArtifact> list;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SArtifact> <>9__0;

        /*0xd9d4d8*/ <>c__DisplayClass12_0();
        /*0xd9d4e0*/ bool <IncreaseArtifact>b__0(PTShare.Define.SArtifact data);
    }
}

class AtlasImage : Atlas.AtlasComponent<UnityEngine.UI.Image>
{
    /*0x30*/ UnityEngine.UI.Selectable m_SelectableObject;
    /*0x38*/ UnityEngine.RectTransform rectTransform;
    /*0x40*/ bool IsLastMissingSprite;

    /*0xf7b410*/ AtlasImage();
    /*0xf7a3dc*/ UnityEngine.RectTransform get_RectTransform();
    /*0xf7a4e4*/ void Awake();
    /*0xf7a5e0*/ void OnEnableMethod();
    /*0xf7a62c*/ void OnDisableMethod();
    /*0xf7a678*/ void UnloadImage();
    /*0xf7a6e0*/ void SetSprite(UnityEngine.Sprite _sprite);
    /*0xf7a7ec*/ UnityEngine.Sprite GetSprite();
    /*0xf7a848*/ bool IsLastedMissing();
    /*0xf7a850*/ string GetImageName();
    /*0xf7a858*/ void SetImage(AtlasType _atlasType, string _name);
    /*0xf7a6d0*/ void SetImageName(string _name);
    /*0xf7a86c*/ void RefreshImage();
    /*0xf7a9fc*/ void RefreshImage(string _path);
    /*0xf7aa68*/ void SetNativeSize();
    /*0xf7aafc*/ void SetStretchSize(UnityEngine.Vector2 criteriaSize, UnityEngine.Vector4 offset);
    /*0xf7acdc*/ void SetActive(bool _enable);
    /*0xf7ad64*/ void SetColor(UnityEngine.Color _color);
    /*0xf7ae30*/ void SetOpecity(float _opecity);
    /*0xf7af74*/ void SetRaycast(bool _enable);
    /*0xf7a544*/ void RefreshSelectableObject();
    /*0xf7b01c*/ void SetState();
    /*0xf7b0c8*/ UnityEngine.Sprite RequestAtlasState(AtlasType _type, UnityEngine.Sprite _sprite);
    /*0xf7b144*/ string SetReplaceStateName(UnityEngine.Sprite _sprite);
}

class AtlasSprite : Atlas.AtlasComponent<UnityEngine.SpriteRenderer>
{
    /*0x2d*/ bool IsLastMissingSprite;

    /*0xf7c918*/ AtlasSprite();
    /*0xf7be38*/ void Awake();
    /*0xf7be3c*/ void OnEnableMethod();
    /*0xf7be88*/ void OnDisableMethod();
    /*0xf7bed4*/ void UnloadImage();
    /*0xf7bf3c*/ void SetSprite(UnityEngine.Sprite _sprite);
    /*0xf7c048*/ UnityEngine.Sprite GetSprite();
    /*0xf7c0a4*/ bool IsLastedMissing();
    /*0xf7c0ac*/ string GetImageName();
    /*0xf7c0b4*/ void SetImage(AtlasType _atlasType, string _name);
    /*0xf7bf2c*/ void SetImageName(string _name);
    /*0xf7c0c8*/ void SetSortingOrder(int _order);
    /*0xf7c134*/ void RefreshImage();
    /*0xf7c194*/ void RefreshImage(string _path);
    /*0xf7c200*/ void SetNativeSize();
    /*0xf7c2ac*/ void SetSize(float width, float height);
    /*0xf7c46c*/ UnityEngine.Vector2 GetOriginalSize();
    /*0xf7c55c*/ UnityEngine.Vector2 GetSizeScale();
    /*0xf7c6a8*/ void SetActive(bool _enable);
    /*0xf7c730*/ void SetColor(UnityEngine.Color _color);
    /*0xf7c7f4*/ void SetOpecity(float _opecity);
}

enum AtlasType
{
    NONE = 0,
    UICOMMON = 1,
    UIICON = 2,
    UIMAIN = 3,
    UIUNIT = 4,
    UIBATTLE = 5,
    UIILLUST = 6,
    UIRESDEFAULT = 7,
    TUTORIAL = 8,
    UIEQUIPMENT = 9,
    UISKILLICON = 10,
    UISUMMON = 11,
    UIASCENT = 12,
    UISTRENGTHEN = 13,
    UITOWER = 14,
    UICASHSHOP = 15,
    UIMAZE = 16,
    UIRESONATING = 17,
    UIGUILD = 18,
    UIDECORATEPROFILEBACKGROUND = 19,
    UIDECORATEPROFILEFRAME = 20,
    UICHATICON = 21,
    UITILE = 22,
    UIDUNGEON = 23,
    UIARTIFACT = 24,
    UISKINROOM = 25,
    DISABLED = 26,
    UIRANKINGBOARD = 27,
    UIWORLDBOSS = 28,
    UIPVERANK = 29,
    UIHOUSING = 30,
    UIABILITY = 31,
    UIEVENT = 32,
    UIADS = 33,
    End = 34,
}

class AtlasManager : Singleton.Component.SingletonComponent<AtlasManager>
{
    static /*0x0*/ System.Collections.Generic.Dictionary<int, UnityEngine.U2D.SpriteAtlas> m_dicAtlas;
    static /*0x8*/ System.Collections.Generic.Queue<System.ValueTuple<AtlasImage, UnityEngine.Sprite>> m_QueueImage;
    static /*0x10*/ System.Collections.Generic.Queue<System.ValueTuple<AtlasSprite, UnityEngine.Sprite>> m_QueueSprite;
    /*0x28*/ System.Collections.IEnumerator m_ieUpdate;

    static /*0xf7bd20*/ AtlasManager();
    /*0xf7bcd4*/ AtlasManager();
    /*0xf7b45c*/ void AwakeInstance();
    /*0xf7b460*/ bool InitInstance();
    /*0xf7b468*/ void ReleaseInstance();
    /*0xf7b544*/ void ImportAtlas(AtlasType _type);
    /*0xf7b890*/ void AtlasUnloadAll();
    /*0xf7b228*/ UnityEngine.Sprite RequestAtlasSprite(AtlasType _type, string _name, bool _alreadyCheck);
    /*0xf7a8cc*/ void GetAtlasSprite(AtlasImage _comp, AtlasType _type, string _name);
    /*0xf7bb48*/ void GetAtlasSprite(AtlasSprite _comp, AtlasType _type, string _name);
    /*0xf7baec*/ System.Collections.IEnumerator CoSetAtlasImageProcess();
    /*0xf7bc78*/ System.Collections.IEnumerator CoSetAtlasSpriteProcess();

    class <CoSetAtlasImageProcess>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9e680*/ <CoSetAtlasImageProcess>d__12(int <>1__state);
        /*0xd9e6ac*/ void System.IDisposable.Dispose();
        /*0xd9e6b0*/ bool MoveNext();
        /*0xd9e7fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9e804*/ void System.Collections.IEnumerator.Reset();
        /*0xd9e844*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSetAtlasSpriteProcess>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9e84c*/ <CoSetAtlasSpriteProcess>d__13(int <>1__state);
        /*0xd9e878*/ void System.IDisposable.Dispose();
        /*0xd9e87c*/ bool MoveNext();
        /*0xd9e9c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9e9d0*/ void System.Collections.IEnumerator.Reset();
        /*0xd9ea10*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum TrackPlayType
{
    NONE = 0,
    BGM = 1,
    SFX = 2,
    VOICE = 3,
    End = 4,
}

enum ButtonSound
{
    None = 0,
    Button01_02 = 1,
    Btn_Main = 2,
    Effect_Popup_Open = 3,
    Effect_Back = 4,
    Btn_Normal = 5,
    Effect_Select = 6,
    Effect_Lock = 7,
    Btn_Tap = 8,
    Effect_Placement_Hero = 9,
    Effect_Hero_Equip = 10,
    Effect_Clear = 11,
    Effect_Battle_Start = 12,
    Effect_Scoll = 13,
    Effect_Buy = 14,
    Effect_Game_Entry = 15,
    Effect_Maze_Entry = 16,
    Effect_Dice_Btn = 17,
    Effect_Maze_Dice = 18,
    Effect_Reward = 19,
    Effect_Maze_Tile_Light = 20,
    Effect_Levelup_User = 21,
    Effect_Dialog = 22,
    Effect_Hero_Equip_Clear = 23,
    Effect_Equip_Upgrade = 24,
    Effect_GaugeUp = 25,
    Effect_Gacha_Item = 26,
    Effect_Gacha_SS = 27,
    Effect_Gacha_SSS = 28,
    Effect_Levelup_Hero = 29,
    Effect_Battle_Win = 30,
    Effect_Battle_Lose = 31,
    Effect_UnitGrade_Success = 32,
    ArtifactUpgrade = 33,
    End = 34,
}

class AudioManager : Singleton.Component.SingletonComponent<AudioManager>
{
    /*0x28*/ System.Collections.Generic.List<AudioManager.ListClip> m_Clips;
    /*0x30*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<AudioManager.AudioTrack>> dicTrackList;
    /*0x38*/ System.Collections.Generic.Dictionary<int, float> dicSoundVolume;
    /*0x40*/ float m_fOriginVolumeBGM;
    /*0x44*/ float m_fOriginVolumeSFX;
    /*0x48*/ float m_fRecentPlayClipDuration;
    /*0x4c*/ float m_fCurVoiceDuration;
    /*0x50*/ bool m_isPlayingVoice;
    /*0x54*/ int m_recentFrameCount;

    /*0xf861f0*/ AudioManager();
    /*0xf84478*/ void AwakeInstance();
    /*0xf8447c*/ bool InitInstance();
    /*0xf84484*/ void ReleaseInstance();
    /*0xf84780*/ void Play(TrackPlayType _eType, string _soundName, bool _isLoop, bool _isDuplicate, float _volume);
    /*0xf84cdc*/ void Play(AssetBundleType _eBundleType, TrackPlayType _eType, string _soundName, bool _isLoop, bool _isDuplicate, float _volume);
    /*0xf7de80*/ void Play(AssetBundleType _eBundleType, TrackPlayType _eType, ButtonSound _soundType, bool _isLoop, bool _isDuplicate, float _volume);
    /*0xf85214*/ void PlayCallBack(AssetBundleType _eBundleType, TrackPlayType _eType, string _soundName, bool _isLoop, bool _isDuplicate, float _volume, System.Action<float> callBack);
    /*0xf855d8*/ void Stop(TrackPlayType _eType);
    /*0xf85714*/ void Stop(TrackPlayType _eType, string _soundName);
    /*0xf85818*/ void Stop(string _soundName);
    /*0xf85b4c*/ void Pause(TrackPlayType _eType, bool _pause);
    /*0xf85c54*/ bool IsPlaying(TrackPlayType _eType, string _soundName);
    /*0xf84c20*/ float GetSoundVolume(TrackPlayType _ePlayType);
    /*0xf85d60*/ void SetSoundVolume(TrackPlayType _ePlayType, float _volume);
    /*0xf84b24*/ System.Collections.Generic.List<AudioManager.AudioTrack> GetOrExistAddDictionaryList(TrackPlayType _ePlayType);
    /*0xf85dfc*/ void RefreshVolume(TrackPlayType _ePlayType);
    /*0xf851a8*/ string GetResExtension(TrackPlayType _eType);
    /*0xf85f00*/ void SetOriginalVolumeForIngame(bool _bRefresh);
    /*0xf85f40*/ float PlayForIngameVoice(AssetBundleType _eBundleType, TrackPlayType _eType, string _soundName, bool _bReduceSFX, bool _bLoop);
    /*0xf85f8c*/ void AddVoiceDuration(float _fDuration);
    /*0xf85fa0*/ void UpdateForIngameVoice(float _fLerpDeltaTime, float _fDurationDeltaTime);

    class AudioTrack
    {
        /*0x10*/ string audioName;
        /*0x18*/ UnityEngine.AudioSource audioSource;
        /*0x20*/ float originalVolume;
        /*0x24*/ float changeVolume;

        /*0xda05e4*/ AudioTrack(string audioName, UnityEngine.AudioSource audioSource, UnityEngine.AudioClip audioClip, float originalVolume, float changeVolume, bool _isLoop);
        /*0xd9ff9c*/ bool get_IsPlaying();
        /*0xda0650*/ void SetAudioSource(UnityEngine.AudioClip _clip, float _volume, bool _isLoop);
        /*0xda05c0*/ void SetVolume(float _volume);
        /*0xda06b4*/ void Play();
        /*0xd9fedc*/ void Stop();
        /*0xda04cc*/ void Pause();
        /*0xda04e8*/ void UnPause();
    }

    class ListClip
    {
        /*0x10*/ TrackPlayType type;
        /*0x18*/ System.Collections.Generic.List<UnityEngine.AudioClip> clips;

        /*0xda06d0*/ ListClip();
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ string _soundName;
        /*0x18*/ bool _isDuplicate;
        /*0x1c*/ TrackPlayType _eType;

        /*0xd9fef8*/ <>c__DisplayClass12_0();
        /*0xd9ff00*/ bool <Play>b__0(AudioManager.AudioTrack x);
        /*0xd9ffb8*/ bool <Play>b__1(AudioManager.ListClip x);
        /*0xd9ffdc*/ bool <Play>b__2(UnityEngine.AudioClip x);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ TrackPlayType _eType;
        /*0x18*/ string _soundName;
        /*0x20*/ AudioManager.ListClip _clip;
        /*0x28*/ AudioManager <>4__this;
        /*0x30*/ bool _isLoop;
        /*0x31*/ bool _isDuplicate;
        /*0x34*/ float _volume;

        /*0xda0040*/ <>c__DisplayClass15_0();
        /*0xda0048*/ bool <Play>b__0(AudioManager.ListClip x);
        /*0xda006c*/ bool <Play>b__1(UnityEngine.AudioClip x);
        /*0xda00cc*/ void <Play>b__2(UnityEngine.AudioClip clip);
        /*0xda01ac*/ void <Play>b__3(UnityEngine.AudioClip clip);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ TrackPlayType _eType;
        /*0x18*/ string _soundName;
        /*0x20*/ AudioManager.ListClip _clip;
        /*0x28*/ AudioManager <>4__this;
        /*0x30*/ bool _isLoop;
        /*0x31*/ bool _isDuplicate;
        /*0x34*/ float _volume;
        /*0x38*/ System.Action<float> callBack;

        /*0xda028c*/ <>c__DisplayClass17_0();
        /*0xda0294*/ bool <PlayCallBack>b__0(AudioManager.ListClip x);
        /*0xda02b8*/ bool <PlayCallBack>b__1(UnityEngine.AudioClip x);
        /*0xda0318*/ void <PlayCallBack>b__2(UnityEngine.AudioClip clip);
    }

    class <>c
    {
        static /*0x0*/ AudioManager.<> <>9;
        static /*0x8*/ System.Action<AudioManager.AudioTrack> <>9__18_0;

        static /*0xd9fe50*/ <>c();
        /*0xd9feb0*/ <>c();
        /*0xd9feb8*/ void <Stop>b__18_0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ string _soundName;

        /*0xda0428*/ <>c__DisplayClass19_0();
        /*0xda0430*/ void <Stop>b__0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ bool _pause;

        /*0xda0488*/ <>c__DisplayClass21_0();
        /*0xda0490*/ void <Pause>b__0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ string _soundName;

        /*0xda0504*/ <>c__DisplayClass22_0();
        /*0xda050c*/ bool <IsPlaying>b__0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ AudioManager <>4__this;
        /*0x18*/ TrackPlayType _ePlayType;

        /*0xda0568*/ <>c__DisplayClass26_0();
        /*0xda0570*/ void <RefreshVolume>b__0(AudioManager.AudioTrack x);
    }
}

class BalanceManager : Singleton.Data.SingletonData<BalanceManager>
{
    /*0x20*/ System.Action<bool> OnCallResult;
    /*0x28*/ System.Text.StringBuilder m_cStringBuilder;
    /*0x30*/ System.Security.Cryptography.MD5CryptoServiceProvider md5CryptoServiceProvider;
    /*0x38*/ string BalancePathZip;
    /*0x40*/ string LocalizePathZip;

    static /*0xf87e04*/ void SetInvariantCulture();
    /*0xf88194*/ BalanceManager();
    /*0xf87df8*/ bool InitInstance();
    /*0xf87e00*/ void ReleaseInstance();
    /*0xf87e68*/ void Send_BalanceData(System.Action<bool> _onCallbackResult);
    /*0xf87fa8*/ void Send_LocalizeGetData(PTShare.Define.LanguageCode _code, System.Action<bool> _onCallbackResult);
    /*0xf87e70*/ void LoadBalanceData();
    /*0xf87fb0*/ void LoadLocalizeData(PTShare.Define.LanguageCode _code);
    /*0xf88104*/ System.Collections.IEnumerator UnZipProcess(string _zipPath, byte[] downloadBytes, int bytesLength);
    /*0xf882e4*/ void <LoadBalanceData>b__10_0(byte[] _instance);
    /*0xf8852c*/ void <LoadLocalizeData>b__11_0(byte[] _instance);
    /*0xf886f4*/ void <LoadLocalizeData>b__11_1(byte m);

    class <>c
    {
        static /*0x0*/ BalanceManager.<> <>9;
        static /*0x8*/ System.Func<byte, string> <>9__10_1;

        static /*0xda08b8*/ <>c();
        /*0xda0918*/ <>c();
        /*0xda0920*/ string <LoadBalanceData>b__10_1(byte s);
    }

    class <UnZipProcess>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ byte[] downloadBytes;
        /*0x28*/ string _zipPath;
        /*0x30*/ int bytesLength;
        /*0x38*/ BalanceManager <>4__this;

        /*0xda0974*/ <UnZipProcess>d__12(int <>1__state);
        /*0xda09a0*/ void System.IDisposable.Dispose();
        /*0xda09a4*/ bool MoveNext();
        /*0xda0aec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda0af4*/ void System.Collections.IEnumerator.Reset();
        /*0xda0b34*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BountyAutoDispatchPopup : GuiBase
{
    /*0x40*/ ScrollContent_BountyAutoQuestEntity m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ DefineBounty.BOUNTY_TYPE m_bountyType;
    /*0x58*/ System.Collections.Generic.List<DefineBounty.BountyData> m_showBountyList;
    /*0x60*/ System.Collections.Generic.List<DefineBounty.BountyData> m_autoBountyList;
    /*0x68*/ System.Collections.Generic.Dictionary<DefineBounty.BountyData, System.Collections.Generic.List<PTShare.Define.SBountyHero>> m_bountySelectHeroData;

    /*0x136640c*/ BountyAutoDispatchPopup();
    /*0x1364990*/ void OnCreate();
    /*0x1364994*/ void OnDelete();
    /*0x1364998*/ void OnEnter();
    /*0x136499c*/ void OnExit();
    /*0x1364be8*/ void OnFinish();
    /*0x1364bec*/ void OnLeave();
    /*0x1364bf0*/ void OnStart();
    /*0x1364bf4*/ void InitPopup(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1364e28*/ void SetBountyData();
    /*0x13653b4*/ void SetScrollContent();
    /*0x1364c8c*/ void BindEvent();
    /*0x13649cc*/ void RemoveEvent();
    /*0x1364b60*/ void ClearData();
    /*0x13657a0*/ void HandleScrollContent(int index, BountyAutoQuestEntity bountyAutoQuestEntity);
    /*0x1365954*/ void HandleOnChagneAutoSelect(DefineBounty.BountyData bountyData, bool enable);
    /*0x13659ec*/ void OnClickDispatch();
    /*0x1366300*/ void OnClickExit();
    /*0x13664ec*/ void <OnClickExit>b__22_0(DefineBounty.BountyData data);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> dispatchList;

        /*0xda2bd0*/ <>c__DisplayClass14_0();
        /*0xda2bd8*/ void <SetBountyData>b__1(PTShare.Define.SBountyHero data);
    }

    class <>c
    {
        static /*0x0*/ BountyAutoDispatchPopup.<> <>9;
        static /*0x8*/ System.Comparison<DefineBounty.BountyData> <>9__14_0;
        static /*0x10*/ System.Action<PTShare.Define.SBountyHero> <>9__14_2;
        static /*0x18*/ System.Action<PTShare.Define.SBountyHero> <>9__21_1;
        static /*0x20*/ System.Action <>9__21_0;
        static /*0x28*/ System.Action<PTShare.Define.SBountyHero> <>9__22_1;

        static /*0xda29a8*/ <>c();
        /*0xda2a08*/ <>c();
        /*0xda2a10*/ int <SetBountyData>b__14_0(DefineBounty.BountyData lhs, DefineBounty.BountyData rhs);
        /*0xda2a50*/ void <SetBountyData>b__14_2(PTShare.Define.SBountyHero data);
        /*0xda2b14*/ void <OnClickDispatch>b__21_1(PTShare.Define.SBountyHero heroData);
        /*0xda2b70*/ void <OnClickDispatch>b__21_0();
        /*0xda2b74*/ void <OnClickExit>b__22_1(PTShare.Define.SBountyHero heroData);
    }
}

class BountyAutoQuestEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<DefineBounty.BountyData, bool> OnChangeCheck;
    /*0x18*/ LocalizeString m_questName;
    /*0x20*/ AtlasImage[] m_stars;
    /*0x28*/ HeroSlotBounty[] m_heroSlots;
    /*0x30*/ HeroPropertySlotBounty[] m_heroPropertySlots;
    /*0x38*/ AtlasImage m_checkIcon;
    /*0x40*/ AtlasImage m_questGradeImage;
    /*0x48*/ LocalizeString m_questNeedRequireCount;
    /*0x50*/ ItemTableRewardSlot m_itemTableRewardSlot;
    /*0x58*/ DefineBounty.BountyData m_bountyData;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> m_selectHeros;
    /*0x68*/ bool m_isCheck;
    /*0x6c*/ DefineBounty.BOUNTY_TYPE m_bountyType;

    static /*0x1367508*/ BountyAutoQuestEntity();
    /*0x13674f8*/ BountyAutoQuestEntity();
    /*0x1365890*/ void InitEntity(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType, System.Collections.Generic.List<PTShare.Define.SBountyHero> selectHeros);
    /*0x1366644*/ void SetBountyStar();
    /*0x13667b4*/ void SetHeroSlot();
    /*0x1366948*/ void SetHeroPropertySlot();
    /*0x1366a78*/ void SetRewardSlot();
    /*0x1366bdc*/ void SetQuestName();
    /*0x1366cf4*/ void SetQuestGrade();
    /*0x1366e00*/ void SetRequireCount();
    /*0x1367024*/ void UpdateCheckIcon();
    /*0x1367414*/ void OnClickCheck();
}

class BountyDispatchPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_descText;
    /*0x50*/ LocalizeString m_dispatchRequireCountText;
    /*0x58*/ ItemTableRewardSlot m_rewardItem;
    /*0x60*/ HeroSlotBounty[] m_dispatchSlots;
    /*0x68*/ UnityEngine.GameObject m_mercenarySlotParent;
    /*0x70*/ HeroSlotBounty m_mercenarySlot;
    /*0x78*/ HeroPropertySlotBounty[] m_heroPropertySlots;
    /*0x80*/ AtlasImage m_dispatchGradeImage;
    /*0x88*/ AtlasImage m_dispatchNeedCountCheckIcon;
    /*0x90*/ UnityEngine.UI.Button m_autoSelectButton;
    /*0x98*/ UnityEngine.UI.Button m_confirmButton;
    /*0xa0*/ BountyDispatchWindow m_bountyDispatchWindow;
    /*0xa8*/ bool m_isUnlockVip;
    /*0xb0*/ DefineBounty.BountyData m_bountyData;
    /*0xb8*/ DefineBounty.BOUNTY_TYPE m_bountyType;

    /*0x1369614*/ BountyDispatchPopup();
    /*0x136750c*/ void OnCreate();
    /*0x1367510*/ void OnDelete();
    /*0x1367514*/ void OnEnter();
    /*0x1367518*/ void OnExit();
    /*0x1367630*/ void OnFinish();
    /*0x1367634*/ void OnLeave();
    /*0x1367638*/ void OnStart();
    /*0x136763c*/ void InitPopup(DefineBounty.BOUNTY_TYPE bountyType, DefineBounty.BountyData bountyData);
    /*0x1367928*/ void SetUI();
    /*0x136796c*/ void UpdatePopup();
    /*0x136778c*/ void SetData();
    /*0x13679a8*/ void SetTitle();
    /*0x1367ac0*/ void SetDesc();
    /*0x1367bb0*/ void SetReward();
    /*0x1367cb8*/ void SetDispatchGrade();
    /*0x1367dc4*/ void SetFactions();
    /*0x1367ef4*/ void SetButton();
    /*0x1367f94*/ void UpdateDispatchHeros();
    /*0x1368268*/ void UpdateMercenarySlot();
    /*0x1368454*/ void UpdateDispatchRequireCount();
    /*0x136890c*/ void UpdateButton();
    /*0x1368638*/ void UpdateFactionPropertyIcon();
    /*0x1368e5c*/ void HandleOnSelectDispatchHero();
    /*0x1368e60*/ void HandleOnUnSelectDispatchHero(PTShare.Define.SBountyHero sHero);
    /*0x1369120*/ void HandleOnUnSelectDispatchMercenary(PTShare.Define.SBountyHero sHero);
    /*0x1367830*/ void BindEvent();
    /*0x1367540*/ void RemoveEvent();
    /*0x1369204*/ void OnClickAutoSelect();
    /*0x1369300*/ void OnClickConfirm();
    /*0x1369594*/ void OnClickExit();
    /*0x1369624*/ void <OnClickConfirm>b__44_0();
}

class BountyDispatchSupportEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlotBounty m_heroSlot;
    /*0x20*/ AtlasImage m_gradeImage;
    /*0x28*/ LocalizeString m_heroNameText;
    /*0x30*/ LocalizeString m_helpInfoText;
    /*0x38*/ UnityEngine.GameObject m_emptyInfoObject;
    /*0x40*/ UnityEngine.GameObject m_releaseButtonObject;
    /*0x48*/ UnityEngine.GameObject m_heroInfoParentObject;
    /*0x50*/ PTShare.Define.SBountyHero m_sBountyHero;

    /*0x136a1e0*/ BountyDispatchSupportEntity();
    /*0x13696a4*/ bool IsEmpty();
    /*0x13696b4*/ HeroSlotBounty GetHeroSlotBounty();
    /*0x13696bc*/ void InitEntity(PTShare.Define.SBountyHero sBountyHero);
    /*0x13696fc*/ void SetHeroSlot();
    /*0x1369838*/ void SetHeroGrade();
    /*0x1369900*/ void SetHeroName();
    /*0x1369a58*/ void SetHelpInfoText();
    /*0x1369c50*/ void SetEnableObjects();
    /*0x1369dbc*/ void HandleShowHeroPopup(PTShare.Define.SBountyHero sHero);
    /*0x1369eec*/ void OnClickRelease();

    class <>c
    {
        static /*0x0*/ BountyDispatchSupportEntity.<> <>9;
        static /*0x8*/ System.Action <>9__17_0;

        static /*0xda2c3c*/ <>c();
        /*0xda2c9c*/ <>c();
        /*0xda2ca4*/ void <OnClickRelease>b__17_0();
    }
}

class BountyDispatchSupportPopup : GuiBase
{
    /*0x40*/ ScrollContent_BountyDispatchSupportEntity m_scrollContent;
    /*0x48*/ LocalizeString m_descText;

    /*0x136a9f8*/ BountyDispatchSupportPopup();
    /*0x136a1e8*/ void OnCreate();
    /*0x136a1ec*/ void OnDelete();
    /*0x136a1f0*/ void OnEnter();
    /*0x136a1f4*/ void OnFinish();
    /*0x136a1f8*/ void OnLeave();
    /*0x136a1fc*/ void OnStart();
    /*0x136a200*/ void OnExit();
    /*0x136a404*/ void InitPopup();
    /*0x136a66c*/ void SetDesc();
    /*0x136a848*/ void UpdateScrollContent();
    /*0x136a4e4*/ void BindEvent();
    /*0x136a284*/ void RemoveEvent();
    /*0x136a918*/ void HandleScrollContent(int index, BountyDispatchSupportEntity obj);
    /*0x136a9d4*/ void HandleRefresh();
}

class BountyDispatchSupportSelectPopup : GuiBase
{
    /*0x40*/ HeroPropertySlotWindow m_heroPropertySlotWindow;
    /*0x48*/ ScrollContent_HeroSlotBounty m_scrollContent;
    /*0x50*/ UnityEngine.UI.Button m_dispatchButton;
    /*0x58*/ LocalizeString m_emptyText;
    /*0x60*/ PTShare.Define.SBountyHero m_selectHero;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHero> m_heroList;

    /*0x136b8e4*/ BountyDispatchSupportSelectPopup();
    /*0x136aa00*/ void OnCreate();
    /*0x136aa04*/ void OnDelete();
    /*0x136aa08*/ void OnEnter();
    /*0x136aa0c*/ void OnFinish();
    /*0x136aa10*/ void OnLeave();
    /*0x136aa14*/ void OnStart();
    /*0x136aa18*/ void OnExit();
    /*0x1369e38*/ void InitPopup();
    /*0x136af58*/ void SetPropertySlotWindow();
    /*0x136b010*/ void UpdateScrollContent();
    /*0x136b0ec*/ void UpdateButton();
    /*0x136ac14*/ void BindEvent();
    /*0x136aab4*/ void RemoveEvent();
    /*0x136ad7c*/ void HandleChangeProperty(int _type);
    /*0x136b188*/ void HandleScrollContent(int index, HeroSlotBounty obj);
    /*0x136b468*/ void HandleOnClickHero(PTShare.Define.SBountyHero sHero);
    /*0x136b5e8*/ void OnClickDispatch();
    /*0x136b8ec*/ void <OnClickDispatch>b__22_0();

    class <>c__DisplayClass20_0
    {
        /*0x10*/ BountyDispatchSupportSelectPopup <>4__this;
        /*0x18*/ int index;

        /*0xda2d10*/ <>c__DisplayClass20_0();
        /*0xda2d18*/ bool <HandleScrollContent>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ PTShare.Define.SBountyHero sHero;

        /*0xda2db0*/ <>c__DisplayClass21_0();
        /*0xda2db8*/ bool <HandleOnClickHero>b__0(PTShare.Define.SBountyHero data);
    }
}

class BountyDispatchWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlot m_baseSlot;
    /*0x20*/ HeroSlot m_mercenarySlot;
    /*0x28*/ LocalizeString m_emptyText;
    /*0x30*/ HeroPropertySlotWindow m_propertySlotWindow;
    /*0x38*/ ScrollContent_HeroSlotBounty m_scrollContent;
    /*0x40*/ DefineBounty.BountyData m_bountyData;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHero> m_showHeroList;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> m_supportHeroList;
    /*0x58*/ bool m_isOpen;
    /*0x5c*/ PropertyType m_eCurPropertyType;
    /*0x60*/ DefineBounty.BOUNTY_TYPE m_bountyType;

    /*0x136d2f0*/ BountyDispatchWindow();
    /*0x136b8f8*/ void OnDisable();
    /*0x1368f44*/ void InitWindow(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136bd54*/ void SetPropertySlot();
    /*0x136be0c*/ void UpdateWindow();
    /*0x136be10*/ void UpdateHeroList();
    /*0x136bb3c*/ void BindEvent();
    /*0x136b92c*/ void RemoveEvent();
    /*0x136c6ac*/ void HandleScrollContent(int index, HeroSlotBounty heroSlot);
    /*0x136ca08*/ void HandleClickHeroSlot(PTShare.Define.SBountyHero sHero);
    /*0x136d2e4*/ void HandleChangeProperty(int _type);
    /*0x136d2ec*/ void HandleOnSelectDispatchHero();
}

class BountyLevelInfoPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_currentLevelText;
    /*0x50*/ LocalizeString m_nextLevelText;
    /*0x58*/ UnityEngine.UI.Slider m_soloBountySlider;
    /*0x60*/ LocalizeString m_soloRequireText;
    /*0x68*/ LocalizeString m_soloBountyText;
    /*0x70*/ UnityEngine.UI.Slider m_raidBountySlider;
    /*0x78*/ LocalizeString m_raidRequireText;
    /*0x80*/ LocalizeString m_raidBountyText;
    /*0x88*/ UnityEngine.GameObject m_soloSliderParent;
    /*0x90*/ UnityEngine.GameObject m_raidSliderParent;

    /*0x136e608*/ BountyLevelInfoPopup();
    /*0x136d818*/ void OnCreate();
    /*0x136d81c*/ void OnDelete();
    /*0x136d820*/ void OnEnter();
    /*0x136d824*/ void OnExit();
    /*0x136d8a0*/ void OnFinish();
    /*0x136d8a4*/ void OnLeave();
    /*0x136d8a8*/ void OnStart();
    /*0x136d8ac*/ void InitPopup(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136dc30*/ void SetCurrentText(int bountyLevel);
    /*0x136d994*/ void SetTitle(int bountyLevel);
    /*0x136dd84*/ void SetNextText(int bountyLevel);
    /*0x136dfa8*/ void SetLevelupRequireData(int bountyLevel);
}

class BountyManager : Singleton.Component.SingletonComponent<BountyManager>
{
    static /*0x0*/ System.Action OnRefreshBounty;
    /*0x28*/ DefineBounty.BountyUserData m_bountyUserData;
    /*0x30*/ System.Collections.Generic.List<BountyManager.HeroIds> m_busyHeroIds;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> m_selectDispatchHeros;
    /*0x40*/ PTShare.Define.SBountyHero m_selectMercenaryHero;
    /*0x48*/ System.Collections.Generic.List<DefineBounty.BountyData> m_soloBountyDataList;
    /*0x50*/ System.Collections.Generic.List<DefineBounty.BountyData> m_raidBountyDataList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> m_supportList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> m_mySupporterList;

    static /*0x1370e90*/ BountyManager();
    /*0x1370d04*/ BountyManager();
    /*0x136e610*/ void AwakeInstance();
    /*0x136e614*/ bool InitInstance();
    /*0x136e61c*/ void ReleaseInstance();
    /*0x136d978*/ int GetBountyLevel();
    /*0x136e5dc*/ int GetBountyExp(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x13655b0*/ PTShare.Define.SBountyHeroExtend GetSelectMercenaryHero();
    /*0x136e680*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> GetSupportHeroList();
    /*0x136e688*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> GetMySupportHeroList();
    /*0x136e690*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> GetSelectDispatchHeros();
    /*0x136e698*/ System.Collections.Generic.List<DefineBounty.BountyData> GetSoloBountyDataList();
    /*0x136e6a0*/ System.Collections.Generic.List<DefineBounty.BountyData> GetRaidBountyDataList();
    /*0x1368b2c*/ int GetRequireGradeCount(int requireGrade, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1368c14*/ System.Collections.Generic.Dictionary<int, int> GetSelectFactionDatas(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136c574*/ bool IsUnUsedHero(int tableId);
    /*0x136c5a8*/ bool IsBusyHero(long playerId, int heroId);
    /*0x136e6a8*/ BountyManager.HeroIds FindBusyHeroId(long playerId, int heroId);
    /*0x1366038*/ long FindBountyPlayerId(PTShare.Define.SBountyHero sBountyHero);
    /*0x136e7a0*/ bool IsHelpHero(int heroID);
    /*0x136cd60*/ bool IsDispatchHero(DefineBounty.BountyData bountyData, PTShare.Define.SBountyHero sHero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136cc2c*/ bool IsSelectHero(PTShare.Define.SBountyHero hero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136d1cc*/ bool IsSameSeletectTableIdHero(int tableId);
    /*0x136d0fc*/ void AddSelectDispatchHero(PTShare.Define.SBountyHero hero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1368f98*/ void RemoveSelectDispatchHero(PTShare.Define.SBountyHero hero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x13654bc*/ bool AutoSelectBountyQuest(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136f28c*/ System.Collections.Generic.List<int> ComputeEmptyFactionList(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136ed48*/ void AutoFillBounty(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136e8d0*/ void AutoFillBountyMercenary(DefineBounty.BountyData bountyData);
    /*0x136e89c*/ int FindFactionId(PTShare.Define.SBountyHero sBountyHero);
    /*0x136f434*/ PTShare.Define.SHero ConvertBountyHeroToSHero(PTShare.Define.SBountyHero sBountyHero);
    /*0x136b3d0*/ PTShare.Define.SBountyHero ConvertSHeroToBountyHero(PTShare.Define.SHero sHero);
    /*0x136f554*/ System.ValueTuple<long, int> ConvertStringToIds(string str);
    /*0x1365630*/ void AddBusyHero(long playerId, int heroId);
    /*0x136f6bc*/ void AddBusyHero(PTShare.Define.SBountyHero sBountyHero);
    /*0x136f6f4*/ void RemoveBusyHero(long playerId, int heroId);
    /*0x136f770*/ void RemoveBusyHero(PTShare.Define.SBountyHero sBountyHero);
    /*0x136f7a8*/ void DeleteHero(PTShare.Define.SHero sHero);
    /*0x1365460*/ void ClearSelectDispatchHero();
    /*0x136f8d8*/ void Send_BountyEnter(System.Action callBack);
    /*0x136fb34*/ void SetQuestData(System.Collections.Generic.List<PTShare.Define.SBountyQuest> quests);
    /*0x137009c*/ void SortBountyDataList(System.Collections.Generic.List<DefineBounty.BountyData> sortList);
    /*0x136fe40*/ void ParseAddDispatchHero(System.Collections.Generic.List<string> parseData);
    /*0x13701bc*/ void ParseAddDispatchHero(string parseDatas);
    /*0x137042c*/ void Send_BountySupportEnter(System.Action callBack);
    /*0x13705bc*/ void Send_ResetSoloBounty(System.Action callBack);
    /*0x136b6b8*/ void Send_Support(PTShare.Define.SBountyHero sHero, System.Action callBack);
    /*0x136a034*/ void Send_ReleaseSupport(int heroId, System.Action callBack);
    /*0x1366110*/ void Send_Dispatch(string questIds, string heroids, System.Action callBack);
    /*0x137074c*/ void Send_Reward(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType, System.Action callBack);
    /*0x1370a0c*/ void Send_AllReward(DefineBounty.BOUNTY_TYPE bountyType, System.Action callBack);
    /*0x1370bb8*/ void UpdateReddot();
    /*0x13670c4*/ Rewards GetReward(int bountyIndex, DefineBounty.BOUNTY_TYPE bountyType);

    class HeroIds
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda43e0*/ HeroIds(long _playerId, int _heroId);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda2f5c*/ <>c__DisplayClass24_0();
        /*0xda2f64*/ bool <IsBusyHero>b__0(BountyManager.HeroIds data);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda2fa0*/ <>c__DisplayClass25_0();
        /*0xda2fa8*/ bool <FindBusyHeroId>b__0(BountyManager.HeroIds data);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ int heroID;

        /*0xda2fe4*/ <>c__DisplayClass27_0();
        /*0xda2fec*/ bool <IsHelpHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ PTShare.Define.SBountyHero sHero;

        /*0xda3010*/ <>c__DisplayClass28_0();
        /*0xda3018*/ bool <IsDispatchHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ PTShare.Define.SBountyHero hero;

        /*0xda3048*/ <>c__DisplayClass29_0();
        /*0xda3050*/ bool <IsSelectHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ int tableId;

        /*0xda3080*/ <>c__DisplayClass30_0();
        /*0xda3088*/ bool <IsSameSeletectTableIdHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ PTShare.Define.SBountyHero hero;

        /*0xda30ac*/ <>c__DisplayClass32_0();
        /*0xda30b4*/ bool <RemoveSelectDispatchHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHero> heroList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SBountyHero> <>9__0;

        /*0xda30e4*/ <>c__DisplayClass35_0();
        /*0xda30ec*/ bool <AutoFillBounty>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SBountyHero> <>9__0;

        /*0xda317c*/ <>c__DisplayClass36_0();
        /*0xda3184*/ bool <AutoFillBountyMercenary>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda321c*/ <>c__DisplayClass41_0();
        /*0xda3224*/ bool <AddBusyHero>b__0(BountyManager.HeroIds data);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0xda3260*/ <>c__DisplayClass45_0();
        /*0xda3268*/ bool <DeleteHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda3298*/ <>c__DisplayClass47_0();
        /*0xda32a0*/ void <Send_BountyEnter>b__0(ServerProtocol.ResBountyEnter instance);
    }

    class <>c
    {
        static /*0x0*/ BountyManager.<> <>9;
        static /*0x8*/ System.Comparison<DefineBounty.BountyData> <>9__49_0;

        static /*0xda2de8*/ <>c();
        /*0xda2e48*/ <>c();
        /*0xda2e50*/ int <SortBountyDataList>b__49_0(DefineBounty.BountyData a, DefineBounty.BountyData b);
    }

    class <>c__DisplayClass52_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda3348*/ <>c__DisplayClass52_0();
        /*0xda3350*/ void <Send_BountySupportEnter>b__0(ServerProtocol.ResBountySupporter instance);
    }

    class <>c__DisplayClass53_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda338c*/ <>c__DisplayClass53_0();
        /*0xda3394*/ void <Send_ResetSoloBounty>b__0(ServerProtocol.ResBountyReset instance);
    }

    class <>c__DisplayClass54_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ PTShare.Define.SBountyHero sHero;
        /*0x20*/ System.Action callBack;

        /*0xda34a4*/ <>c__DisplayClass54_0();
        /*0xda34ac*/ void <Send_Support>b__0(ServerProtocol.ResBountySetSupporter instance);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ int heroId;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SBountyHero> <>9__1;

        /*0xda356c*/ <>c__DisplayClass55_0();
        /*0xda3574*/ void <Send_ReleaseSupport>b__0(ServerProtocol.ResBountyReleaseSupporter instance);
        /*0xda36cc*/ bool <Send_ReleaseSupport>b__1(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ string questIds;
        /*0x18*/ BountyManager <>4__this;
        /*0x20*/ string heroids;
        /*0x28*/ System.Action callBack;

        /*0xda36f0*/ <>c__DisplayClass56_0();
        /*0xda36f8*/ void <Send_Dispatch>b__0(ServerProtocol.ResBountyDispatch instance);
    }

    class <>c__DisplayClass56_1
    {
        /*0x10*/ int id;

        /*0xda3a10*/ <>c__DisplayClass56_1();
        /*0xda3a18*/ bool <Send_Dispatch>b__1(DefineBounty.BountyData data);
        /*0xda3a3c*/ bool <Send_Dispatch>b__2(DefineBounty.BountyData data);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda3a60*/ <>c__DisplayClass57_0();
        /*0xda3a68*/ void <Send_Reward>b__0(ServerProtocol.ResBountyReceive instance);
    }

    class <>c__DisplayClass57_1
    {
        /*0x10*/ ServerProtocol.ResBountyReceive instance;
        /*0x18*/ BountyManager.<> CS$<>8__locals1;

        /*0xda3cd4*/ <>c__DisplayClass57_1();
        /*0xda3cdc*/ void <Send_Reward>b__1();
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ DefineBounty.BOUNTY_TYPE bountyType;
        /*0x20*/ System.Action callBack;

        /*0xda3d94*/ <>c__DisplayClass58_0();
        /*0xda3d9c*/ void <Send_AllReward>b__0(ServerProtocol.ResBountyReceiveAll instance);
    }

    class <>c__DisplayClass58_1
    {
        /*0x10*/ ServerProtocol.ResBountyReceiveAll instance;
        /*0x18*/ BountyManager.<> CS$<>8__locals1;

        /*0xda4280*/ <>c__DisplayClass58_1();
        /*0xda4290*/ void <Send_AllReward>b__1();
    }

    class <>c__DisplayClass58_2
    {
        /*0x10*/ int i;
        /*0x18*/ BountyManager.<> CS$<>8__locals2;

        /*0xda4288*/ <>c__DisplayClass58_2();
        /*0xda4348*/ bool <Send_AllReward>b__2(DefineBounty.BountyData data);
    }
}

class BountyPopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_bountyQuestRectTransform;
    /*0x48*/ ScrollContent_BountyQuestEntity m_scrollContent;
    /*0x50*/ LocalizeString m_emptyText;
    /*0x58*/ UnityEngine.GameObject[] m_unSelectButtons;
    /*0x60*/ UnityEngine.GameObject[] m_selectButtons;
    /*0x68*/ BountyTopMenu m_bountyTopMenu;
    /*0x70*/ UnityEngine.UI.Button m_autoDispatchButton;
    /*0x78*/ UnityEngine.UI.Button m_fastRewardButton;
    /*0x80*/ System.Collections.Generic.List<DefineBounty.BountyData> m_bountyDataList;
    /*0x88*/ DefineBounty.BOUNTY_TYPE m_currencyBountyTab;
    /*0x8c*/ bool m_isUnlockVip;

    /*0x1371e00*/ BountyPopup();
    /*0x1370e94*/ void OnCreate();
    /*0x1370e98*/ void OnDelete();
    /*0x1370e9c*/ void OnEnter();
    /*0x1371028*/ void OnExit();
    /*0x13710d0*/ void OnFinish();
    /*0x13710d4*/ void OnLeave();
    /*0x1371258*/ void OnStart();
    /*0x137125c*/ void InitBountyPopup(DefineBounty.BOUNTY_TYPE showTab);
    /*0x1371330*/ void UpdateBountyPopup(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1371554*/ void UpdateBountyData();
    /*0x137143c*/ void UpdateTab();
    /*0x137189c*/ void UpdateButton();
    /*0x13715e0*/ void UpdateBountyScrollSize();
    /*0x1371670*/ void UpdateBountyScrollContent();
    /*0x13716cc*/ void UpdateEmptyText();
    /*0x1370ea0*/ void BindEvent();
    /*0x13710d8*/ void RemoveEvent();
    /*0x1371a0c*/ void HandleRefreshPopup();
    /*0x1371a14*/ void HandleScrollContent(int index, BountyQuestEntity bountyQuestEntity);
    /*0x1371a9c*/ void OnClickTabChange(int tabIndex);
    /*0x1371b24*/ void OnClickAllReward();
    /*0x1371d68*/ void OnClickAutoDispatch();
    /*0x1371e80*/ void <OnClickAllReward>b__31_0();
}

class BountyQuestEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage[] m_stars;
    /*0x20*/ LocalizeString m_questNameText;
    /*0x28*/ UnityEngine.UI.Slider m_progressSlider;
    /*0x30*/ LocalizeString m_progressText;
    /*0x38*/ LocalizeString m_questTimeText;
    /*0x40*/ LocalizeString m_expireText;
    /*0x48*/ ItemTableRewardSlot m_itemTableRewardSlot;
    /*0x50*/ UnityEngine.GameObject m_dispatchButtonObject;
    /*0x58*/ UnityEngine.GameObject m_rewardButtonObject;
    /*0x60*/ System.Collections.Generic.List<AtlasImage> m_starImageList;
    /*0x68*/ DefineBounty.BountyData m_bountyData;
    /*0x70*/ bool m_isBountyExpire;
    /*0x74*/ DefineBounty.BOUNTY_TYPE m_bountyType;
    /*0x78*/ UnityEngine.Coroutine m_sliderCoroutine;

    /*0x16ee26c*/ BountyQuestEntity();
    /*0x16ed230*/ void OnDisable();
    /*0x16ed33c*/ void WarningPass();
    /*0x16ed3b8*/ void InitEntity(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x16ed524*/ void SetBountyData();
    /*0x16ed61c*/ void SetBountyTitle();
    /*0x16ed734*/ void SetExpireTime();
    /*0x16eda00*/ void SetButton();
    /*0x16edaf4*/ void SetBountyStar();
    /*0x16edc64*/ void SetRewardSlot();
    /*0x16edda0*/ void SetBountyTime();
    /*0x16edf98*/ void PlaySlideCoroutine();
    /*0x16ee054*/ void StopCoroutines();
    /*0x16ed42c*/ void BindEvent();
    /*0x16ed234*/ void RemoveEvent();
    /*0x16edfe8*/ System.Collections.IEnumerator CoUpdateBountySlider();
    /*0x16ee058*/ void HandleRefresh();
    /*0x16ee0a8*/ void OnClickDispath();
    /*0x16ee134*/ void OnClickReward();

    class <CoUpdateBountySlider>d__28 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BountyQuestEntity <>4__this;
        /*0x28*/ System.TimeSpan <fullTime>5__2;
        /*0x30*/ System.TimeSpan <expireTime>5__3;
        /*0x38*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__4;
        /*0x40*/ System.TimeSpan <secSpan>5__5;

        /*0xda4488*/ <CoUpdateBountySlider>d__28(int <>1__state);
        /*0xda44b4*/ void System.IDisposable.Dispose();
        /*0xda44b8*/ bool MoveNext();
        /*0xda4988*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda4990*/ void System.Collections.IEnumerator.Reset();
        /*0xda49d0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ BountyQuestEntity.<> <>9;
        static /*0x8*/ System.Action <>9__31_0;

        static /*0xda441c*/ <>c();
        /*0xda447c*/ <>c();
        /*0xda4484*/ void <OnClickReward>b__31_0();
    }
}

class BountyTopMenu : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnShowLevelUpParticle;
    /*0x18*/ UnityEngine.UI.Button m_resetButton;
    /*0x20*/ UnityEngine.UI.Button m_helpButton;
    /*0x28*/ LocalizeString m_levelText;
    /*0x30*/ LocalizeString m_resetTimeTitleText;
    /*0x38*/ LocalizeString m_resetTimeText;
    /*0x40*/ ParticleBase m_levelupParticle;
    /*0x48*/ DefineBounty.BOUNTY_TYPE m_currencyBountyTab;
    /*0x50*/ UnityEngine.Coroutine m_timerCoroutine;

    static /*0x16ef5a4*/ BountyTopMenu();
    /*0x16ef594*/ BountyTopMenu();
    /*0x16ee5c4*/ void OnDisable();
    /*0x16ee6fc*/ void InitMenu(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x16ee8c4*/ void UpdateButton();
    /*0x16eeb8c*/ void UpdateLevelText();
    /*0x16eec9c*/ void UpdateLeftTime(ref System.TimeSpan timeSpan);
    /*0x16ee874*/ void StartUpdateTimer();
    /*0x16ee6cc*/ void StopTimer();
    /*0x16eeec0*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0x16eef2c*/ void HandleShowLevelupParticle();
    /*0x16ef030*/ void OnClickReset();
    /*0x16ef34c*/ void OnClickDispatchSupport();
    /*0x16ef468*/ void OnClickLevel();
    /*0x16ef4f0*/ void OnClickHelp();
    /*0x16ef5a8*/ void <CoUpdateTimer>b__16_0();

    class <>c
    {
        static /*0x0*/ BountyTopMenu.<> <>9;
        static /*0x8*/ System.Predicate<DefineBounty.BountyData> <>9__11_0;
        static /*0x10*/ System.Action <>9__18_1;
        static /*0x18*/ System.Action<bool> <>9__18_0;
        static /*0x20*/ System.Action <>9__19_0;

        static /*0xda49d8*/ <>c();
        /*0xda4a38*/ <>c();
        /*0xda4a40*/ bool <UpdateButton>b__11_0(DefineBounty.BountyData data);
        /*0xda4a60*/ void <OnClickReset>b__18_0(bool result);
        /*0xda4b94*/ void <OnClickReset>b__18_1();
        /*0xda4b98*/ void <OnClickDispatchSupport>b__19_0();
    }

    class <CoUpdateTimer>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BountyTopMenu <>4__this;
        /*0x28*/ System.TimeSpan <timeSpan>5__2;
        /*0x30*/ System.TimeSpan <sec>5__3;
        /*0x38*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__4;

        /*0xda4c18*/ <CoUpdateTimer>d__16(int <>1__state);
        /*0xda4c44*/ void System.IDisposable.Dispose();
        /*0xda4c48*/ bool MoveNext();
        /*0xda5124*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda512c*/ void System.Collections.IEnumerator.Reset();
        /*0xda516c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DefineBounty
{
    static /*0x0*/ int BOUNTY_MAX_STAR;
    static /*0x4*/ int BOUNTY_MAX_SUPPORT_COUNT;
    static /*0x8*/ int BOUNTY_MAX_LEVEL;
    static /*0x10*/ string BOUNTY_STAR_IMAGE;
    static /*0x18*/ string BOUNTY_EMPTY_STAR_IMAGE;
    static /*0x20*/ System.DateTime BountyDefaultTime;

    static /*0xf60038*/ DefineBounty();
    static /*0xf5fc38*/ string GetBountyTitle(int star, int localizeIndex);
    static /*0xf5fdb4*/ string GetBountyDesc(int star, int localizeIndex);
    static /*0xf5ff30*/ UnityEngine.Color FindBountyColor(int star);
    static /*0xf60014*/ int FindBountyGrade(int star);

    enum BOUNTY_TYPE
    {
        SOLO = 0,
        TEAM = 1,
        NULL = 2,
    }

    class BountyData
    {
        /*0x10*/ int id;
        /*0x14*/ int bountyStar;
        /*0x18*/ int bountyIndex;
        /*0x1c*/ int localizeType;
        /*0x20*/ int[] factions;
        /*0x28*/ int needUnitCount;
        /*0x2c*/ bool isPlayingBounty;
        /*0x30*/ System.Collections.Generic.List<string> dispatchHeros;
        /*0x38*/ System.DateTime expireTime;

        /*0x1076684*/ BountyData(PTShare.Define.SBountyQuest bountyPacket, TableData.TableData_Bountyquest tableData);
        /*0x1076858*/ bool IsFinish();
    }

    class BountyUserData
    {
        /*0x10*/ int bountyLevel;
        /*0x14*/ int soloClearCount;
        /*0x18*/ int raidClearCount;

        /*0x107695c*/ BountyUserData();
    }
}

class HeroPropertySlotBounty : HeroPropertySlot
{
    /*0x38*/ AtlasImage m_checkIcon;

    /*0x122c094*/ HeroPropertySlotBounty();
    /*0x122bfe4*/ void SetCheckIcon(bool _enable);
}

class HeroSlotBounty : HeroSlot
{
    /*0x48*/ LocalizeString m_playerName;
    /*0x50*/ AtlasImage m_PlusIcon;
    /*0x58*/ PTShare.Define.SBountyHero m_bountyHero;
    /*0x60*/ System.Action<PTShare.Define.SBountyHero> OnClickBountyHeroAction;

    /*0x126c698*/ HeroSlotBounty();
    /*0x126c280*/ void InitBounty(PTShare.Define.SBountyHero _hero, System.Action<PTShare.Define.SBountyHero> _callback);
    /*0x126c43c*/ PTShare.Define.SBountyHeroExtend GetBountyHeroExtend();
    /*0x126c4bc*/ long GetPlayerId();
    /*0x126c568*/ void SetPlayerName(string name);
    /*0x126c348*/ void SetActiveObject(bool _enable, System.Action<PTShare.Define.SBountyHero> callBack);
    /*0x126c330*/ void SetActivePlusIcon(bool _enable);
    /*0x126c60c*/ void OnClick();
    /*0x126c674*/ void Clear();
}

class ScrollContent_BountyAutoQuestEntity : ScrollContent<BountyAutoQuestEntity>
{
    /*0xe18b84*/ ScrollContent_BountyAutoQuestEntity();
}

class ScrollContent_BountyDispatchSupportEntity : ScrollContent<BountyDispatchSupportEntity>
{
    /*0xe18bfc*/ ScrollContent_BountyDispatchSupportEntity();
}

class ScrollContent_BountyQuestEntity : ScrollContent<BountyQuestEntity>
{
    /*0xe18c74*/ ScrollContent_BountyQuestEntity();
}

class ScrollContent_HeroSlotBounty : ScrollContent<HeroSlotBounty>
{
    /*0xe1a45c*/ ScrollContent_HeroSlotBounty();
}

class MainCameraManager : Singleton.Component.SingletonComponent<MainCameraManager>
{
    /*0x28*/ UnityEngine.Camera m_MainCamera;
    /*0x30*/ float m_fDefaultSize;
    /*0x34*/ UnityEngine.Vector2 m_vecDefaultRatio;
    /*0x3c*/ float m_fSizeOffest;
    /*0x40*/ float m_fCurRatio;
    /*0x44*/ bool m_bFastenCameraEnable;

    /*0xde5eec*/ MainCameraManager();
    /*0xde59ec*/ float get_DefaultSize();
    /*0xde59f4*/ UnityEngine.Camera get_MainCamera();
    /*0xde59fc*/ float get_GetCurrentRatio();
    /*0xde5a04*/ void AwakeInstance();
    /*0xde5bdc*/ bool InitInstance();
    /*0xde5be4*/ void ReleaseInstance();
    /*0xde5cbc*/ void SetCameraDepth(int _depth);
    /*0xde5d60*/ void SetCameraPosition(UnityEngine.Vector3 _vec, bool _local);
    /*0xde56a4*/ void SetEnableCamera(bool _enable);
    /*0xde5e58*/ void FastenCurrentCameraEnableState(bool _fasten);
    /*0xde5e64*/ float GetCameraOffsetSize(int _type);
    /*0xde5ec8*/ float GetCameraOrthographicSize(int _type);
    /*0xde5ae0*/ void SetResolution();
    /*0xde5ee4*/ void HandlerActiveCamera();
}

class PostEffectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ bool supportHDRTextures;
    /*0x19*/ bool isSupported;

    /*0x100bcd8*/ PostEffectBase();
    /*0x100b434*/ UnityEngine.Material CheckShaderAndCreateMaterial(UnityEngine.Shader s, UnityEngine.Material m2Create);
    /*0x100b61c*/ UnityEngine.Material CreateMaterial(UnityEngine.Shader s, UnityEngine.Material m2Create);
    /*0x100b7b4*/ void OnEnable();
    /*0x100b7c0*/ bool CheckSupport();
    /*0x100b89c*/ bool CheckResources();
    /*0x100b8a4*/ void Start();
    /*0x100b7c8*/ bool CheckSupport(bool needDepth);
    /*0x100b8b0*/ bool CheckSupport(bool needDepth, bool needHdr);
    /*0x100b90c*/ void ReportAutoDisable();
    /*0x100b910*/ bool CheckShader(UnityEngine.Shader s);
    /*0x100b5f0*/ void NotSupported();
    /*0x100b95c*/ void DrawBorder(UnityEngine.RenderTexture dest, UnityEngine.Material material);
}

class PostEffectBase_Image : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Shader shader;
    /*0x20*/ UnityEngine.Material m_Material;

    static /*0x100bce8*/ void RenderDistortion(UnityEngine.Material material, UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination, float angle, UnityEngine.Vector2 center, UnityEngine.Vector2 radius);
    /*0x100c14c*/ PostEffectBase_Image();
    /*0x100bf34*/ void Start();
    /*0x100bfd4*/ UnityEngine.Material get_material();
    /*0x100c0a0*/ void OnDisable();
}

class PostEffect_Antialiasing : PostEffectBase
{
    /*0x20*/ UnityEngine.Shader ssaaShader;
    /*0x28*/ UnityEngine.Material ssaa;

    /*0x100c574*/ PostEffect_Antialiasing();
    /*0x100c438*/ bool CheckResources();
    /*0x100c4ac*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_Bloom : PostEffectBase
{
    /*0x1c*/ float threshold;
    /*0x20*/ float intensity;
    /*0x24*/ float blurSize;
    /*0x28*/ PostEffect_Bloom.Resolution resolution;
    /*0x2c*/ int blurIterations;
    /*0x30*/ PostEffect_Bloom.BlurType blurType;
    /*0x38*/ UnityEngine.Shader fastBloomShader;
    /*0x40*/ UnityEngine.Material fastBloomMaterial;

    /*0x100ca4c*/ PostEffect_Bloom();
    /*0x100c584*/ bool CheckResources();
    /*0x100c5c0*/ void OnDisable();
    /*0x100c66c*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);

    enum Resolution
    {
        Low = 0,
        High = 1,
    }

    enum BlurType
    {
        Standard = 0,
        Sgx = 1,
    }
}

class PostEffect_Blur : PostEffectBase
{
    /*0x1c*/ int downsample;
    /*0x20*/ float blurSize;
    /*0x24*/ int blurIterations;
    /*0x28*/ PostEffect_Blur.BlurType blurType;
    /*0x30*/ UnityEngine.Shader blurShader;
    /*0x38*/ UnityEngine.Material blurMaterial;

    /*0x100cf0c*/ PostEffect_Blur();
    /*0x100ca78*/ bool CheckResources();
    /*0x100cab4*/ void OnDisable();
    /*0x100cb60*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);

    enum BlurType
    {
        StandardGauss = 0,
        SgxGauss = 1,
    }
}

class PostEffect_Fade : PostEffectBase_Image
{
    /*0x28*/ UnityEngine.Color fadeColor;
    /*0x38*/ float intensity;

    /*0x100d024*/ PostEffect_Fade();
    /*0x100cf30*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_Fisheye : PostEffectBase
{
    /*0x1c*/ float strengthX;
    /*0x20*/ float strengthY;
    /*0x28*/ UnityEngine.Shader fishEyeShader;
    /*0x30*/ UnityEngine.Material fisheyeMaterial;

    /*0x100d1e0*/ PostEffect_Fisheye();
    /*0x100d02c*/ bool CheckResources();
    /*0x100d068*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_Grayscale : PostEffectBase_Image
{
    /*0x28*/ float intensity;

    /*0x100d2c0*/ PostEffect_Grayscale();
    /*0x100d200*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_MotionBlur : PostEffectBase_Image
{
    /*0x28*/ float blurAmount;
    /*0x2c*/ bool extraBlur;
    /*0x30*/ UnityEngine.RenderTexture accumTexture;

    /*0x100d6c0*/ PostEffect_MotionBlur();
    /*0x100d2c8*/ void Start();
    /*0x100d2cc*/ void OnDisable();
    /*0x100d33c*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_SunShafts : PostEffectBase
{
    /*0x1c*/ PostEffect_SunShafts.SunShaftsResolution resolution;
    /*0x20*/ PostEffect_SunShafts.ShaftsScreenBlendMode screenBlendMode;
    /*0x28*/ UnityEngine.Transform sunTransform;
    /*0x30*/ int radialBlurIterations;
    /*0x34*/ UnityEngine.Color sunColor;
    /*0x44*/ UnityEngine.Color sunThreshold;
    /*0x54*/ float sunShaftBlurRadius;
    /*0x58*/ float sunShaftIntensity;
    /*0x5c*/ float maxRadius;
    /*0x60*/ bool useDepthTexture;
    /*0x68*/ UnityEngine.Shader sunShaftsShader;
    /*0x70*/ UnityEngine.Material sunShaftsMaterial;
    /*0x78*/ UnityEngine.Shader simpleClearShader;
    /*0x80*/ UnityEngine.Material simpleClearMaterial;

    /*0x100df00*/ PostEffect_SunShafts();
    /*0x100d6d4*/ bool CheckResources();
    /*0x100d720*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);

    enum SunShaftsResolution
    {
        Low = 0,
        Normal = 1,
        High = 2,
    }

    enum ShaftsScreenBlendMode
    {
        Screen = 0,
        Add = 1,
    }
}

class PostEffect_Vortex : PostEffectBase_Image
{
    /*0x28*/ UnityEngine.Vector2 radius;
    /*0x30*/ float angle;
    /*0x34*/ UnityEngine.Vector2 center;

    /*0x100dfe4*/ PostEffect_Vortex();
    /*0x100dfa0*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class ScreenEffectObserver
{
    static /*0x0*/ ScreenEffectObserver _instance;
    /*0x10*/ System.Collections.Generic.List<CharacterBase> pause_occur_list;

    static /*0x12a4c90*/ ScreenEffectObserver();
    static /*0x12a496c*/ ScreenEffectObserver get_Instance();
    /*0x12a4a28*/ ScreenEffectObserver();
    /*0x12a4aa0*/ void IncDarkChange(CharacterBase occurActor, float intensive, float executeTime);
    /*0x12a4bac*/ void DecDarkChange(CharacterBase occurActor);
}

class ScreenEffect_Antialiasing : PostEffectProcess
{
    /*0x12a1dbc*/ ScreenEffect_Antialiasing();
    /*0x12a53f8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5464*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__1 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Antialiasing <>4__this;

        /*0xf9dc98*/ <OnProcess_Execute>d__1(int <>1__state);
        /*0xf9dcc4*/ void System.IDisposable.Dispose();
        /*0xf9dcc8*/ bool MoveNext();
        /*0xf9dd38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9dd40*/ void System.Collections.IEnumerator.Reset();
        /*0xf9dd80*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Antialiasing <>4__this;

        /*0xf9dd88*/ <OnProcess_Undo>d__2(int <>1__state);
        /*0xf9ddb4*/ void System.IDisposable.Dispose();
        /*0xf9ddb8*/ bool MoveNext();
        /*0xf9de1c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9de24*/ void System.Collections.IEnumerator.Reset();
        /*0xf9de64*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_BackgroundEffect : ScreenEffectProcess
{
    static float BG_EFFECT_DISTANCE = 60;
    static float MUL_EFFECT_SCALE = 0.17499999701976776;
    /*0x50*/ string effectName;
    /*0x58*/ UnityEngine.GameObject[] backgroundGroup;
    /*0x60*/ UnityEngine.Transform _bgEffect;
    /*0x68*/ System.Collections.IEnumerator _moveEffectProcess;

    /*0x12a1c0c*/ ScreenEffect_BackgroundEffect();
    /*0x12a54d0*/ ScreenEffectFlag GetCurIgnoreFlag();
    /*0x12a54d8*/ void ApplyDefault();
    /*0x12a5710*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a578c*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a5600*/ void SetVisible_BackgroundGroup(bool _is_on);
    /*0x12a5808*/ void LoadBGEffect();
    /*0x12a5560*/ void ReleaseBGEffect();
    /*0x12a58a8*/ void StartMoveEffectProcess();
    /*0x12a583c*/ void StopMoveEffectProcess();
    /*0x12a5968*/ System.Collections.IEnumerator OnMoveEffectProcess();

    class <OnProcess_Execute>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_BackgroundEffect <>4__this;
        /*0x30*/ float <_start_intensity>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xf9e168*/ <OnProcess_Execute>d__9(int <>1__state);
        /*0xf9e194*/ void System.IDisposable.Dispose();
        /*0xf9e198*/ bool MoveNext();
        /*0xf9e2d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e2e0*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e320*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_BackgroundEffect <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_factor>5__3;

        /*0xf9e328*/ <OnProcess_Undo>d__10(int <>1__state);
        /*0xf9e354*/ void System.IDisposable.Dispose();
        /*0xf9e358*/ bool MoveNext();
        /*0xf9e4cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e4d4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e514*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnMoveEffectProcess>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_BackgroundEffect <>4__this;
        /*0x28*/ UnityEngine.Transform <_camera_transform>5__2;

        /*0xf9de6c*/ <OnMoveEffectProcess>d__16(int <>1__state);
        /*0xf9de98*/ void System.IDisposable.Dispose();
        /*0xf9de9c*/ bool MoveNext();
        /*0xf9e118*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e120*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e160*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Bloom : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_Bloom _usingEffect;

    /*0x12a1d98*/ ScreenEffect_Bloom();
    /*0x12a59d4*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5a50*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a5acc*/ void GetCurValue(ref float _intensity);
    /*0x12a5b64*/ void GetGoalValue(float _factor, ref float _intensity);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Bloom <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9e51c*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9e548*/ void System.IDisposable.Dispose();
        /*0xf9e54c*/ bool MoveNext();
        /*0xf9e6f8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e700*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e740*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Bloom <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9e748*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9e774*/ void System.IDisposable.Dispose();
        /*0xf9e778*/ bool MoveNext();
        /*0xf9e910*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e918*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e958*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Blur : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_Blur _usingEffect;

    /*0x12a1d8c*/ ScreenEffect_Blur();
    /*0x12a5b98*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5c14*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a5c90*/ void GetCurValue(ref float _size);
    /*0x12a5d28*/ void GetGoalValue(float _factor, ref float _size);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Blur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_size>5__2;
        /*0x30*/ float <_goal_size>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9e960*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9e98c*/ void System.IDisposable.Dispose();
        /*0xf9e990*/ bool MoveNext();
        /*0xf9eb3c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9eb44*/ void System.Collections.IEnumerator.Reset();
        /*0xf9eb84*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Blur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_size>5__2;
        /*0x30*/ float <_goal_size>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9eb8c*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9ebb8*/ void System.IDisposable.Dispose();
        /*0xf9ebbc*/ bool MoveNext();
        /*0xf9ed54*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9ed5c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ed9c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_ColorChange : ScreenEffectProcess
{
    /*0x4c*/ UnityEngine.Color ambientLight;

    /*0x12a1b08*/ ScreenEffect_ColorChange();
    /*0x12a5d5c*/ void ApplyDefault();
    /*0x12a5dc8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5e44*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_ColorChange <>4__this;
        /*0x30*/ UnityEngine.Color <_start_color>5__2;
        /*0x40*/ float <_factor>5__3;

        /*0xf9eda4*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9edd0*/ void System.IDisposable.Dispose();
        /*0xf9edd4*/ bool MoveNext();
        /*0xf9ef08*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9ef10*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ef50*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ UnityEngine.Color <_start_color>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xf9ef58*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9ef84*/ void System.IDisposable.Dispose();
        /*0xf9ef88*/ bool MoveNext();
        /*0xf9f0f8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f100*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f140*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_DarkChange : ScreenEffectProcess
{
    /*0x4c*/ float ambientIntensity;

    /*0x12a1a8c*/ ScreenEffect_DarkChange();
    /*0x12a5eb8*/ void ApplyDefault();
    /*0x12a5f20*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5f9c*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_DarkChange <>4__this;
        /*0x30*/ float <_start_intensity>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xf9f148*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9f174*/ void System.IDisposable.Dispose();
        /*0xf9f178*/ bool MoveNext();
        /*0xf9f294*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f29c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f2dc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ float <_start_intensity>5__2;
        /*0x28*/ float <_factor>5__3;

        /*0xf9f2e4*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9f310*/ void System.IDisposable.Dispose();
        /*0xf9f314*/ bool MoveNext();
        /*0xf9f45c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f464*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f4a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Fade : PostEffectProcess
{
    /*0x58*/ UnityEngine.Color fadeColor;
    /*0x68*/ float intensity;
    /*0x70*/ PostEffect_Fade _usingEffect;

    /*0x12a1dc8*/ ScreenEffect_Fade();
    /*0x12a6010*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a608c*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a6108*/ void GetCurValue(ref float _intensity);
    /*0x12a61a0*/ void GetGoalValue(float _factor, ref float _intensity);

    class <OnProcess_Execute>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fade <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9f4ac*/ <OnProcess_Execute>d__4(int <>1__state);
        /*0xf9f4d8*/ void System.IDisposable.Dispose();
        /*0xf9f4dc*/ bool MoveNext();
        /*0xf9f6a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f6ac*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f6ec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fade <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9f6f4*/ <OnProcess_Undo>d__5(int <>1__state);
        /*0xf9f720*/ void System.IDisposable.Dispose();
        /*0xf9f724*/ bool MoveNext();
        /*0xf9f880*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f888*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f8c8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Fisheye : PostEffectProcess
{
    /*0x58*/ float intensityX;
    /*0x5c*/ float intensityY;
    /*0x60*/ PostEffect_Fisheye _usingEffect;

    /*0x12a1db0*/ ScreenEffect_Fisheye();
    /*0x12a61d4*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6250*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a62cc*/ void GetCurValue(ref float _strength_x, ref float _strength_y);
    /*0x12a6380*/ void GetGoalStrengthX(float _factor, ref float _strength_x);
    /*0x12a63b4*/ void GetGoalStrengthY(float _factor, ref float _strength_y);

    class <OnProcess_Execute>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fisheye <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_x>5__2;
        /*0x30*/ float <_start_y>5__3;
        /*0x34*/ float <_goal_x>5__4;
        /*0x38*/ float <_goal_y>5__5;
        /*0x3c*/ float <_factor>5__6;

        /*0xf9f8d0*/ <OnProcess_Execute>d__4(int <>1__state);
        /*0xf9f8fc*/ void System.IDisposable.Dispose();
        /*0xf9f900*/ bool MoveNext();
        /*0xf9fae8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9faf0*/ void System.Collections.IEnumerator.Reset();
        /*0xf9fb30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fisheye <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_x>5__2;
        /*0x30*/ float <_start_y>5__3;
        /*0x34*/ float <_goal_x>5__4;
        /*0x38*/ float <_goal_y>5__5;
        /*0x3c*/ float <_factor>5__6;

        /*0xf9fb38*/ <OnProcess_Undo>d__5(int <>1__state);
        /*0xf9fb64*/ void System.IDisposable.Dispose();
        /*0xf9fb68*/ bool MoveNext();
        /*0xf9fd38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9fd40*/ void System.Collections.IEnumerator.Reset();
        /*0xf9fd80*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Grayscale : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_Grayscale _usingEffect;

    /*0x12a1da4*/ ScreenEffect_Grayscale();
    /*0x12a63e8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6464*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a64e0*/ void GetCurValue(ref float _intensity);
    /*0x12a6578*/ void GetGoalValue(float _factor, ref float _intensity);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Grayscale <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9fd88*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9fdb4*/ void System.IDisposable.Dispose();
        /*0xf9fdb8*/ bool MoveNext();
        /*0xf9ff60*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9ff68*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ffa8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Grayscale <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9ffb0*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9ffdc*/ void System.IDisposable.Dispose();
        /*0xf9ffe0*/ bool MoveNext();
        /*0xfa0178*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0180*/ void System.Collections.IEnumerator.Reset();
        /*0xfa01c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_LookAtTarget : ScreenEffectProcess
{
    /*0x4c*/ UnityEngine.Vector3 cameraPos;
    /*0x58*/ UnityEngine.Transform trTarget;
    /*0x60*/ UnityEngine.Vector3 _defaultCameraLookAtPos;

    /*0x12a1c88*/ ScreenEffect_LookAtTarget();
    /*0x12a65ac*/ ScreenEffectFlag GetCurIgnoreFlag();
    /*0x12a65b4*/ void ApplyDefault();
    /*0x12a6704*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6780*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_LookAtTarget <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x44*/ UnityEngine.Vector3 <_look_start_pos>5__4;
        /*0x50*/ UnityEngine.Vector3 <_look_goal_pos>5__5;
        /*0x5c*/ float <_factor>5__6;

        /*0xfa01c8*/ <OnProcess_Execute>d__6(int <>1__state);
        /*0xfa01f4*/ void System.IDisposable.Dispose();
        /*0xfa01f8*/ bool MoveNext();
        /*0xfa04b4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa04bc*/ void System.Collections.IEnumerator.Reset();
        /*0xfa04fc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_LookAtTarget <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x44*/ UnityEngine.Vector3 <_look_start_pos>5__4;
        /*0x50*/ UnityEngine.Vector3 <_look_goal_pos>5__5;
        /*0x5c*/ float <_factor>5__6;

        /*0xfa0504*/ <OnProcess_Undo>d__7(int <>1__state);
        /*0xfa0530*/ void System.IDisposable.Dispose();
        /*0xfa0534*/ bool MoveNext();
        /*0xfa0790*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0798*/ void System.Collections.IEnumerator.Reset();
        /*0xfa07d8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_MotionBlur : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_MotionBlur _usingEffect;

    /*0x12a1d80*/ ScreenEffect_MotionBlur();
    /*0x12a67fc*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6878*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a68f4*/ void GetCurValue(ref float _blur_amount);
    /*0x12a698c*/ void GetGoalValue(float _factor, ref float _blur_amount);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_MotionBlur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_amount>5__2;
        /*0x30*/ float <_goal_amount>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xfa07e0*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xfa080c*/ void System.IDisposable.Dispose();
        /*0xfa0810*/ bool MoveNext();
        /*0xfa09b8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa09c0*/ void System.Collections.IEnumerator.Reset();
        /*0xfa0a00*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_MotionBlur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_amount>5__2;
        /*0x30*/ float <_goal_amount>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xfa0a08*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xfa0a34*/ void System.IDisposable.Dispose();
        /*0xfa0a38*/ bool MoveNext();
        /*0xfa0bd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0bd8*/ void System.Collections.IEnumerator.Reset();
        /*0xfa0c18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Move : ScreenEffectProcess
{
    /*0x4c*/ UnityEngine.Vector3 goalPos;

    /*0x12a1998*/ ScreenEffect_Move();
    /*0x12a69c4*/ void ApplyDefault();
    /*0x12a6ae4*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6b60*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Move <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x44*/ UnityEngine.Vector3 <_goal_pos>5__4;
        /*0x50*/ float <_factor>5__5;

        /*0xfa0c20*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xfa0c4c*/ void System.IDisposable.Dispose();
        /*0xfa0c50*/ bool MoveNext();
        /*0xfa0e90*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0e98*/ void System.Collections.IEnumerator.Reset();
        /*0xfa0ed8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x30*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x3c*/ float <_factor>5__4;

        /*0xfa0ee0*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xfa0f0c*/ void System.IDisposable.Dispose();
        /*0xfa0f10*/ bool MoveNext();
        /*0xfa1144*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa114c*/ void System.Collections.IEnumerator.Reset();
        /*0xfa118c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_ObjectShake : ScreenEffectProcess
{
    /*0x50*/ UnityEngine.RectTransform ShakeTransform;
    /*0x58*/ float shakePower;
    /*0x5c*/ UnityEngine.Vector2 _shakeTransformPos;
    /*0x68*/ UnityEngine.RectTransform _rectTransform;

    /*0x12a1d04*/ ScreenEffect_ObjectShake();
    /*0x12a6bd4*/ void ApplyDefault();
    /*0x12a6c60*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6cdc*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_ObjectShake <>4__this;
        /*0x30*/ float <_factor>5__2;

        /*0xfa1194*/ <OnProcess_Execute>d__6(int <>1__state);
        /*0xfa11c0*/ void System.IDisposable.Dispose();
        /*0xfa11c4*/ bool MoveNext();
        /*0xfa13a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa13a8*/ void System.Collections.IEnumerator.Reset();
        /*0xfa13e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_ObjectShake <>4__this;
        /*0x30*/ float <_factor>5__2;

        /*0xfa13f0*/ <OnProcess_Undo>d__7(int <>1__state);
        /*0xfa141c*/ void System.IDisposable.Dispose();
        /*0xfa1420*/ bool MoveNext();
        /*0xfa1614*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa161c*/ void System.Collections.IEnumerator.Reset();
        /*0xfa165c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Shake : ScreenEffectProcess
{
    /*0x4c*/ float shakePower;

    /*0x12a1a10*/ ScreenEffect_Shake();
    /*0x12a6d58*/ void ApplyDefault();
    /*0x12a6e48*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6ec4*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_Shake <>4__this;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ float <_factor>5__3;

        /*0xfa1664*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xfa1690*/ void System.IDisposable.Dispose();
        /*0xfa1694*/ bool MoveNext();
        /*0xfa1904*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa190c*/ void System.Collections.IEnumerator.Reset();
        /*0xfa194c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_Shake <>4__this;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ float <_factor>5__3;

        /*0xfa1954*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xfa1980*/ void System.IDisposable.Dispose();
        /*0xfa1984*/ bool MoveNext();
        /*0xfa1bc4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa1bcc*/ void System.Collections.IEnumerator.Reset();
        /*0xfa1c0c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_SpeedChange : ScreenEffectProcess
{
    /*0x4c*/ float _timeScale;

    /*0x12a1b84*/ ScreenEffect_SpeedChange();
    /*0x12a6f40*/ float get_timeScale();
    /*0x12a3260*/ void set_timeScale(float value);
    /*0x12a6f48*/ void ApplyDefault();
    /*0x12a6fc8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a7044*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_SpeedChange <>4__this;
        /*0x30*/ float <_start_time_scale>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xfa1c14*/ <OnProcess_Execute>d__6(int <>1__state);
        /*0xfa1c40*/ void System.IDisposable.Dispose();
        /*0xfa1c44*/ bool MoveNext();
        /*0xfa1e20*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa1e28*/ void System.Collections.IEnumerator.Reset();
        /*0xfa1e68*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ float <_start_time_scale>5__2;
        /*0x28*/ float <_remain_time_scale>5__3;
        /*0x2c*/ float <_factor>5__4;

        /*0xcbbfb0*/ <OnProcess_Undo>d__7(int <>1__state);
        /*0xcbbfdc*/ void System.IDisposable.Dispose();
        /*0xcbbfe0*/ bool MoveNext();
        /*0xcbc210*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc218*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc258*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_SunShafts : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ UnityEngine.Transform caster;
    /*0x68*/ PostEffect_SunShafts _usingEffect;

    /*0xe16270*/ ScreenEffect_SunShafts();
    /*0xe1627c*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0xe162f8*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0xe16374*/ void GetCurValue(ref UnityEngine.Color _sun_threshold);
    /*0xe1641c*/ void GetGoalSunThreshold(float _factor, ref UnityEngine.Color _sun_threshold);

    class <OnProcess_Execute>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_SunShafts <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ UnityEngine.Color <_start_threshold>5__2;
        /*0x3c*/ UnityEngine.Color <_goal_threshold>5__3;
        /*0x4c*/ float <_factor>5__4;

        /*0xcbc260*/ <OnProcess_Execute>d__4(int <>1__state);
        /*0xcbc28c*/ void System.IDisposable.Dispose();
        /*0xcbc290*/ bool MoveNext();
        /*0xcbc470*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc478*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc4b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_SunShafts <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ UnityEngine.Color <_start_threshold>5__2;
        /*0x3c*/ UnityEngine.Color <_goal_threshold>5__3;
        /*0x4c*/ float <_factor>5__4;

        /*0xcbc4c0*/ <OnProcess_Undo>d__5(int <>1__state);
        /*0xcbc4ec*/ void System.IDisposable.Dispose();
        /*0xcbc4f0*/ bool MoveNext();
        /*0xcbc6b8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc6c0*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc700*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Vortex : PostEffectProcess
{
    /*0x58*/ float angle;
    /*0x5c*/ float radius;
    /*0x60*/ UnityEngine.Vector2 center;
    /*0x68*/ PostEffect_Vortex _usingEffect;

    /*0xe164b0*/ ScreenEffect_Vortex();
    /*0xe164bc*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0xe16538*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0xe165b4*/ void GetCurValue(ref float _angle);

    class <OnProcess_Execute>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Vortex <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_angle>5__2;
        /*0x30*/ float <_factor>5__3;

        /*0xcbc708*/ <OnProcess_Execute>d__5(int <>1__state);
        /*0xcbc734*/ void System.IDisposable.Dispose();
        /*0xcbc738*/ bool MoveNext();
        /*0xcbc8d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc8d8*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc918*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Vortex <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_angle>5__2;
        /*0x30*/ float <_factor>5__3;

        /*0xcbc920*/ <OnProcess_Undo>d__6(int <>1__state);
        /*0xcbc94c*/ void System.IDisposable.Dispose();
        /*0xcbc950*/ bool MoveNext();
        /*0xcbcad4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbcadc*/ void System.Collections.IEnumerator.Reset();
        /*0xcbcb1c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Zoom : ScreenEffectProcess
{
    /*0x4c*/ float zoomSize;

    /*0xe1664c*/ ScreenEffect_Zoom();
    /*0xe166b4*/ void ApplyDefault();
    /*0xe16738*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0xe167b4*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Zoom <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_size>5__2;
        /*0x30*/ float <_orthographic_size>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xcbcb24*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xcbcb50*/ void System.IDisposable.Dispose();
        /*0xcbcb54*/ bool MoveNext();
        /*0xcbcd60*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbcd68*/ void System.Collections.IEnumerator.Reset();
        /*0xcbcda8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ float <_start_size>5__2;
        /*0x28*/ float <_factor>5__3;

        /*0xcbcdb0*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xcbcddc*/ void System.IDisposable.Dispose();
        /*0xcbcde0*/ bool MoveNext();
        /*0xcbcfc4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbcfcc*/ void System.Collections.IEnumerator.Reset();
        /*0xcbd00c*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum PostEffectFlag
{
    None = 0,
    MotionBlur = 1,
    Blur = 2,
    Bloom = 4,
    Grayscale = 8,
    Fisheye = 16,
    Vortex = 32,
    SunShafts = 64,
    Antialiasing = 128,
    Fade = 256,
}

class ScreenPostEffectController
{
    static string SHADER_MOTION_BLUR = "Hidden/M3_MotionBlur";
    static string SHADER_BLUR = "Hidden/M3_FastBlur";
    static string SHADER_BLOOM = "Hidden/M3_FastBloom";
    static string SHADER_GRAYSCALE = "Hidden/M3_Grayscale";
    static string SHADER_FISHEYE = "Hidden/M3_FisheyeShader";
    static string SHADER_VORTEX = "Hidden/M3_VortexEffect";
    static string SHADER_SUNSHAFTS_COMPOSITE = "Hidden/M3_SunShaftsComposite";
    static string SHADER_SIMPLE_CLEAR = "Hidden/M3_SimpleClear";
    static string SHADER_ANTIALIASING = "Hidden/M3_Antialiasing";
    static string SHADER_FADE = "Hidden/M3_Fade";
    static /*0x0*/ System.Collections.Generic.Dictionary<PostEffectFlag, int> _effectRefDic;
    /*0x10*/ UnityEngine.Camera _curCamera;
    /*0x18*/ PostEffectFlag _postEffectFlag;

    static /*0xe17e44*/ ScreenPostEffectController();
    static /*0xe16828*/ int GetUsingPostEffectCount(PostEffectFlag _flag);
    /*0xe17e3c*/ ScreenPostEffectController();
    /*0xe168d4*/ UnityEngine.Camera get_curCamera();
    /*0xe168dc*/ void Init(UnityEngine.Camera _camera);
    /*0xe16968*/ void Clear();
    /*0xe16f2c*/ void StopPostEffect(PostEffectFlag _type);
    /*0xe16fac*/ PostEffect_MotionBlur ApplyPostEffect_MotionBlur(float _amount);
    /*0xe16a40*/ void StopPostEffect_MotionBlur();
    /*0xe170f8*/ PostEffect_Blur ApplyPostEffect_Blur(float _size, int _iterations);
    /*0xe16acc*/ void StopPostEffect_Blur();
    /*0xe17244*/ PostEffect_Bloom ApplyPostEffect_Bloom(float _intensity, float _blur_size);
    /*0xe16b58*/ void StopPostEffect_Bloom();
    /*0xe1738c*/ PostEffect_Grayscale ApplyPostEffect_Grayscale(float _intensity);
    /*0xe16be4*/ void StopPostEffect_Grayscale();
    /*0xe174c8*/ PostEffect_Fisheye ApplyPostEffect_Fisheye(float _strength_x, float _strength_y);
    /*0xe16c70*/ void StopPostEffect_Fisheye();
    /*0xe17608*/ PostEffect_Vortex ApplyPostEffect_Vortex(float _angle, float _radius_x, float _radius_y, float _center_x, float _center_y);
    /*0xe16cfc*/ void StopPostEffect_Vortex();
    /*0xe1776c*/ PostEffect_SunShafts ApplyPostEffect_SunShafts(UnityEngine.Color _sun_threshold, UnityEngine.Transform _caster, float _intensity);
    /*0xe16d88*/ void StopPostEffect_SunShafts();
    /*0xe17940*/ PostEffect_Antialiasing ApplyPostEffect_Antialiasing();
    /*0xe16e14*/ void StopPostEffect_Antialiasing();
    /*0xe17a6c*/ PostEffect_Fade ApplyPostEffect_Fade(float _intensity, UnityEngine.Color _color);
    /*0xe16ea0*/ void StopPostEffect_Fade();
    /*0xe170e8*/ bool IsUsingPostEffect_CurCamera(PostEffectFlag _flag);
    /*0xe16a30*/ bool IsUsingPostEffect_CurCamera();
    T LoadPostEffect<T>();
    void SetPostEffect<T>(PostEffectFlag _type, T _effect, bool _is_on);
    /*0xe17bd0*/ void AddPostEffectFlag(PostEffectFlag _flag);
    /*0xe17d2c*/ void RemovePostEffectFlag(PostEffectFlag _flag);
}

class ScreenEffectManager : Singleton.Component.SingletonComponent<ScreenEffectManager>
{
    static /*0x0*/ bool useScreenEffect;
    static /*0x8*/ bool[] _effectState;
    /*0x28*/ ScreenEffectProcess[] _effectList;

    static /*0x12a48f0*/ ScreenEffectManager();
    static /*0x12a1114*/ void SetUseEffect(ScreenEffectType _type, bool _is_on);
    static /*0x12a11b4*/ bool IsUsableEffect(ScreenEffectType _type);
    /*0x12a4880*/ ScreenEffectManager();
    /*0x12a1278*/ void AwakeInstance();
    /*0x12a1dd4*/ bool InitInstance();
    /*0x12a1e84*/ void ReleaseInstance();
    /*0x12a1f2c*/ void SetDefaultCameraValue(UnityEngine.Camera _camera);
    /*0x12a20ac*/ void SetDefaultAmbientValue(float _intensity, UnityEngine.Color _color);
    /*0x12a21e0*/ void StopEffect();
    /*0x12a22e4*/ void ForceStopEffect();
    /*0x12a23e0*/ void ForceStopEffect(ScreenEffectType _type);
    /*0x12a245c*/ void FreeIgnoreFlag(ScreenEffectType _type);
    /*0x12a257c*/ void ApplyEffect(ScreenEffectData_Move _data);
    /*0x12a2680*/ void ApplyEffect(ScreenEffectData_Zoom _data);
    /*0x12a2774*/ void ApplyEffect(ScreenEffectData_Shake _data);
    /*0x12a2868*/ void ApplyEffect(ScreenEffectData_DarkChange _data);
    /*0x12a2950*/ void ApplyEffect(ScreenEffectData_ColorChange _data);
    /*0x12a2a70*/ void ApplyEffect(ScreenEffectData_SpeedChange _data);
    /*0x12a2b78*/ void ApplyEffect(ScreenEffectData_BackgroundEffect _data);
    /*0x12a2c7c*/ void ApplyEffect(ScreenEffectData_LookAtTarget _data);
    /*0x12a258c*/ void ApplyEffect_Move(UnityEngine.Vector3 _goal_pos, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a2f40*/ void StopEffect_Move();
    /*0x12a2688*/ void ApplyEffect_Zoom(float _zoom_size, float _trans_time_execute, float _trans_time_undo, float _fixed_time, System.Action _OnCompleteAction);
    /*0x12a2fe0*/ void StopEffect_Zoom();
    /*0x12a277c*/ void ApplyEffect_Shake(float _shake_power, float _trans_time_execute, float _trans_time_undo, System.Action _OnCompleteAction);
    /*0x12a3080*/ void StopEffect_Shake();
    /*0x12a2874*/ void ApplyEffect_DarkChange(float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3120*/ void StopEffect_DarkChange();
    /*0x12a2968*/ void ApplyEffect_ColorChange(UnityEngine.Color _color, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a31c0*/ void StopEffect_ColorChange();
    /*0x12a2a7c*/ void ApplyEffect_SpeedChange(float _time_scale, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3294*/ void StopEffect_SpeedChange();
    /*0x12a2b8c*/ void ApplyEffect_BackgroundEffect(string _bg_effect_name, UnityEngine.GameObject[] _bg_group, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3334*/ void StopEffect_BackgroundEffect();
    /*0x12a2c98*/ void ApplyEffect_LookAtTarget(UnityEngine.Vector3 _camera_pos, UnityEngine.Transform _tr_target, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a33d4*/ void StopEffect_LookAtTarget();
    /*0x12a33f0*/ void ApplyEffect_ObjectShake(UnityEngine.RectTransform transform, float _shake_power, float _trans_time_execute, float _trans_time_undo);
    /*0x12a3564*/ void StopEffect_ObjectShake();
    /*0x12a3580*/ void ApplyPostEffect_MotionBlur(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a371c*/ void StopPostEffect_MotionBlur();
    /*0x12a3738*/ void ApplyPostEffect_Blur(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a38cc*/ void StopPostEffect_Blur();
    /*0x12a38e8*/ void ApplyPostEffect_Bloom(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3a7c*/ void StopPostEffect_Bloom();
    /*0x12a3a98*/ void ApplyPostEffect_Grayscale(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3c2c*/ void StopPostEffect_Grayscale();
    /*0x12a3c48*/ void ApplyPostEffect_Fisheye(UnityEngine.Camera _camera, float _intensity_x, float _intensity_y, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3de0*/ void StopPostEffect_Fisheye();
    /*0x12a3dfc*/ void ApplyPostEffect_Vortex(UnityEngine.Camera _camera, float _angle, float _radius, float _center_x, float _center_y, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3fac*/ void StopPostEffect_Vortex();
    /*0x12a3fc8*/ void ApplyPostEffect_SunShafts(UnityEngine.Camera _camera, float _intensity, UnityEngine.Transform _caster, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a4164*/ void StopPostEffect_SunShafts();
    /*0x12a4180*/ void ApplyPostEffect_Antialiasing(UnityEngine.Camera _camera, float _fixed_time);
    /*0x12a42d0*/ void StopPostEffect_Antialiasing();
    /*0x12a42ec*/ void ApplyPostEffect_Fade(UnityEngine.Camera _camera, float _intensity, UnityEngine.Color _fade_color, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a44b0*/ void StopPostEffect_Fade();
    /*0x12a44cc*/ bool IsProcessing(ScreenEffectType _type);
    /*0x12a4500*/ bool IsProcessing_CameraEffect();
    /*0x12a45c4*/ void OnChangeScene();
    /*0x12a45c8*/ void Clear();
    /*0x12a2410*/ ScreenEffectProcess GetEffectProcess(ScreenEffectType _type);
    /*0x12a2da0*/ ScreenEffect_Move GetEffectProcess_Move();
    /*0x12a2f5c*/ ScreenEffect_Zoom GetEffectProcess_Zoom();
    /*0x12a2ffc*/ ScreenEffect_Shake GetEffectProcess_Shake();
    /*0x12a309c*/ ScreenEffect_DarkChange GetEffectProcess_DarkChange();
    /*0x12a313c*/ ScreenEffect_ColorChange GetEffectProcess_ColorChange();
    /*0x12a31dc*/ ScreenEffect_SpeedChange GetEffectProcess_SpeedChange();
    /*0x12a32b0*/ ScreenEffect_BackgroundEffect GetEffectProcess_BackgroundEffect();
    /*0x12a3350*/ ScreenEffect_LookAtTarget GetEffectProcess_LookAtTarget();
    /*0x12a34e0*/ ScreenEffect_ObjectShake GetEffectProcess_ObjectShake();
    /*0x12a3698*/ ScreenEffect_MotionBlur GetEffectProcess_MotionBlur();
    /*0x12a3848*/ ScreenEffect_Blur GetEffectProcess_Blur();
    /*0x12a39f8*/ ScreenEffect_Bloom GetEffectProcess_Bloom();
    /*0x12a3ba8*/ ScreenEffect_Grayscale GetEffectProcess_Grayscale();
    /*0x12a3d5c*/ ScreenEffect_Fisheye GetEffectProcess_Fisheye();
    /*0x12a3f28*/ ScreenEffect_Vortex GetEffectProcess_Vortex();
    /*0x12a40e0*/ ScreenEffect_SunShafts GetEffectProcess_SunShafts();
    /*0x12a424c*/ ScreenEffect_Antialiasing GetEffectProcess_Antialiasing();
    /*0x12a442c*/ ScreenEffect_Fade GetEffectProcess_Fade();
}

class CashShopManager : Singleton.Component.SingletonComponent<CashShopManager>
{
    static /*0x0*/ System.Action OnRefreshEndShop;
    static /*0x8*/ System.Action<string> OnPurchaseEvent;
    static /*0x10*/ System.Action<DefineCashShop.CashShopTabType> OnJoinPage;
    static /*0x18*/ System.Action OnRefreshInstant;
    static /*0x20*/ System.Action OnExitPage;
    static /*0x28*/ System.Action<PTShare.Define.SInstant> OnExpireInstant;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGoods> m_purchaseDataList;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> m_subscriptPurchaseDataList;
    /*0x38*/ System.Collections.Generic.List<string> m_purchaseOnceHistoryList;
    /*0x40*/ System.DateTime m_beginnerEndTime;
    /*0x48*/ PTShare.Define.SGrowth m_growth;
    /*0x50*/ System.Collections.Generic.Dictionary<DefineCashShop.CashShopTabType, System.Collections.Generic.List<DefineCashShop.CashShopPackageData>> m_parsingPackageDataDictionary;
    /*0x58*/ InstantPackageUnlockData m_instantUnlockData;
    /*0x60*/ System.Collections.Generic.List<DefineEvent.TriggerData> m_InstantTriggerList;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SInstant> m_specialSellerList;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SInstant> m_newSpecialSellerList;
    /*0x78*/ UnityEngine.Coroutine m_specialSellerCoroutine;
    /*0x80*/ UnityEngine.Coroutine m_newShowSepcialSellerCoroutine;

    static /*0x1547c84*/ CashShopManager();
    /*0x1547a6c*/ CashShopManager();
    /*0x1543024*/ System.Collections.Generic.List<PTShare.Define.SGoods> GetPurchaseDataList();
    /*0x154302c*/ System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> GetSubscriptPurchaseDataList();
    /*0x1543034*/ PTShare.Define.SSubscriptGoods FindSubscriptPurchaseDataList(string packageId);
    /*0x15418a0*/ bool IsFirstPurchasePackage(string packageId);
    /*0x1543124*/ System.DateTime GetBeginnerEndTime();
    /*0x154312c*/ PTShare.Define.SGoods FindPurchaseData(string packageId);
    /*0x154321c*/ DefineCashShop.CashShopTabType FindInnerTab(string packageId);
    /*0x1543338*/ PTShare.Define.SGrowth GetGrowthPacket();
    /*0x1543340*/ void SetPurchaseDataList(System.Collections.Generic.List<PTShare.Define.SGoods> dataList);
    /*0x1543348*/ void SetSubScriptPurchaseDataList(System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> dataList);
    /*0x1543350*/ void SetPurchaseOnceHistoryList(System.Collections.Generic.List<string> dataList);
    /*0x1543358*/ void SetBeginnerEndTime(System.DateTime dateTime);
    /*0x15433f4*/ void AwakeInstance();
    /*0x15433f8*/ bool InitInstance();
    /*0x15436f4*/ void ReleaseInstance();
    /*0x154342c*/ void InitCashShop();
    /*0x1544210*/ void Send_GrowthEnter(System.Action callBack);
    /*0x15443a4*/ void Send_GrowthTake(int index, System.Action callBack);
    /*0x1544550*/ PTShare.Define.SGoods GetPurchaseData(string packageId);
    /*0x154463c*/ void AddPurchaseData(PTShare.Define.SGoods sGoods);
    /*0x15446f8*/ void AddPurchaseData(PTShare.Define.SSubscriptGoods sSubscriptGoods);
    /*0x15447b4*/ bool CheckReddot(DefineCashShop.CashShopCategoryType categoryType, DefineCashShop.CashShopTabType cashShopTabType);
    /*0x1544994*/ bool CheckReddot(DefineCashShop.CashShopTabType tabType);
    /*0x1544a40*/ bool CheckReddotLimited();
    /*0x1544d3c*/ void UpdateLastLimitedTime();
    /*0x1544bf0*/ bool CheckReddotFreeReward(DefineCashShop.CashShopTabType tabType);
    /*0x1544dfc*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> GetSellItemList(DefineCashShop.CashShopTabType tabType);
    /*0x1543948*/ void UpdateParsingPackages();
    /*0x1544b58*/ bool IsNeedReddotCheck(DefineCashShop.CashShopTabType tabType);
    /*0x15438b0*/ void SetRefreshData(DefineCashShop.CashShopTabType tabType, int value);
    /*0x1545a6c*/ void HandleOnJoinPage(DefineCashShop.CashShopTabType tabType);
    /*0x1545aa0*/ void HandleOnNotifyNewPackage(string packageId);
    /*0x15435b0*/ void StartResetShopCorotine();
    /*0x1545be4*/ System.Collections.IEnumerator CoDailyReset();
    /*0x1545c50*/ System.Collections.IEnumerator CoWeeklyReset();
    /*0x1545cbc*/ System.Collections.IEnumerator CoMonthlyReset();
    /*0x1543388*/ System.Collections.IEnumerator CoBegginerRefresh();
    /*0x1545d28*/ System.Collections.Generic.List<PTShare.Define.SInstant> GetSpecialSellerList();
    /*0x1545d30*/ System.Collections.Generic.List<PTShare.Define.SInstant> GetNewSpecialSellerList();
    /*0x1545d38*/ PTShare.Define.SInstant GetSpeiclaSeller(int index);
    /*0x154360c*/ void InitInstantPackage();
    /*0x1543808*/ void ReleaseInstantPackage();
    /*0x15460d4*/ void ShowInstantPopup(PTShare.Define.SInstant sInstant);
    /*0x15462f8*/ DefineCashShop.SpecialSellerType GetSpecialSellerType(PTShare.Define.SInstant sInstant);
    /*0x1546470*/ System.Collections.IEnumerator CoSpecialSellerUpdate();
    /*0x15464dc*/ System.Collections.IEnumerator CoShowNewSpecialSellerPopup();
    /*0x1546548*/ bool IsReadyPopup();
    /*0x1546808*/ void HandleInstantPackageChecker();
    /*0x15472c8*/ void DefeatTriggerCheck();
    /*0x1545dc4*/ void InitInstantTrigger();
    /*0x15476d4*/ void SetSpecialSeller(System.Collections.Generic.List<PTShare.Define.SInstant> packet);
    /*0x1547748*/ void SetDefeatData(PTShare.Define.SDefeat packet);
    /*0x15477bc*/ void AddLoseCampainCount();
    /*0x1547828*/ void AddLoseTowerCount();
    /*0x1546f40*/ void AddSpecialSeller(DefineEvent.TriggerData triggerData);
    /*0x1547894*/ void RemoveSpecialSeller(PTShare.Define.SInstant packet);
    /*0x15476fc*/ void PlaySpecialSellerCoroutine();
    /*0x1547a20*/ void PlayShowNewSpeicalSellerPopupCoroutine();
    /*0x1545ed4*/ void UpdateInstantUnlockData();
    /*0x15471a4*/ void SortSpecialSeller();
    /*0x1547c88*/ void <UpdateParsingPackages>b__38_0(TableData.TableData_Cashshopdaily f);
    /*0x1547d54*/ void <UpdateParsingPackages>b__38_1(TableData.TableData_Cashshopweekly f);
    /*0x1547e20*/ void <UpdateParsingPackages>b__38_2(TableData.TableData_Cashshopmonthly f);
    /*0x1547eec*/ void <UpdateParsingPackages>b__38_3(TableData.TableData_Cashshopstar f);
    /*0x1547fb8*/ void <UpdateParsingPackages>b__38_4(TableData.TableData_Cashshoplimit f);
    /*0x1548084*/ void <UpdateParsingPackages>b__38_5(TableData.TableData_Cashshopsubscription f);
    /*0x1548150*/ void <UpdateParsingPackages>b__38_6(TableData.TableData_Cashshophero f);
    /*0x154821c*/ void <UpdateParsingPackages>b__38_7(TableData.TableData_Cashshopbeginner f);
    /*0x15482e8*/ void <UpdateParsingPackages>b__38_8(TableData.TableData_Cashshopskinpiece f);
    /*0x15483b4*/ void <UpdateParsingPackages>b__38_9(TableData.TableData_Cashshopskin f);
    /*0x1548480*/ void <InitInstantTrigger>b__67_0(TableData.TableData_Cashshopinstant data);

    class <>c__DisplayClass13_0
    {
        /*0x10*/ string packageId;

        /*0xda927c*/ <>c__DisplayClass13_0();
        /*0xda9284*/ bool <FindSubscriptPurchaseDataList>b__0(PTShare.Define.SSubscriptGoods packet);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ string packageId;

        /*0xda92b0*/ <>c__DisplayClass14_0();
        /*0xda92b8*/ bool <IsFirstPurchasePackage>b__0(string id);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ string packageId;

        /*0xda92d8*/ <>c__DisplayClass16_0();
        /*0xda92e0*/ bool <FindPurchaseData>b__0(PTShare.Define.SGoods data);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ CashShopManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda930c*/ <>c__DisplayClass27_0();
        /*0xda9314*/ void <Send_GrowthEnter>b__0(ServerProtocol.ResGrowthEnter instance);
    }

    class <>c
    {
        static /*0x0*/ CashShopManager.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SGrowthRow> <>9__27_1;
        static /*0x10*/ System.Action<ServerProtocol.ResCashShopClaim> <>9__44_1;
        static /*0x18*/ System.Action<int, string> <>9__72_1;
        static /*0x20*/ System.Comparison<PTShare.Define.SInstant> <>9__77_0;

        static /*0xda9040*/ <>c();
        /*0xda90a0*/ <>c();
        /*0xda90a8*/ bool <Send_GrowthEnter>b__27_1(PTShare.Define.SGrowthRow data);
        /*0xda90c8*/ void <CoDailyReset>b__44_1(ServerProtocol.ResCashShopClaim instance);
        /*0xda9194*/ void <AddSpecialSeller>b__72_1(int errorCode, string value);
        /*0xda9198*/ int <SortSpecialSeller>b__77_0(PTShare.Define.SInstant a, PTShare.Define.SInstant b);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ CashShopManager <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SGrowthRow> <>9__1;

        /*0xda956c*/ <>c__DisplayClass28_0();
        /*0xda9574*/ void <Send_GrowthTake>b__0(ServerProtocol.ResGrowthTake instance);
        /*0xda9770*/ bool <Send_GrowthTake>b__1(PTShare.Define.SGrowthRow data);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> dataList;

        /*0xda9794*/ <>c__DisplayClass37_0();
        /*0xda979c*/ void <GetSellItemList>b__0(TableData.TableData_Cashshopdaily f);
        /*0xda983c*/ void <GetSellItemList>b__1(TableData.TableData_Cashshopweekly f);
        /*0xda98dc*/ void <GetSellItemList>b__2(TableData.TableData_Cashshopmonthly f);
        /*0xda997c*/ void <GetSellItemList>b__3(TableData.TableData_Cashshopstar f);
        /*0xda9a1c*/ void <GetSellItemList>b__4(TableData.TableData_Cashshoplimit f);
        /*0xda9abc*/ void <GetSellItemList>b__5(TableData.TableData_Cashshopsubscription f);
        /*0xda9b5c*/ void <GetSellItemList>b__6(TableData.TableData_Cashshophero f);
        /*0xda9bfc*/ void <GetSellItemList>b__7(TableData.TableData_Cashshopbeginner f);
        /*0xda9c9c*/ void <GetSellItemList>b__8(TableData.TableData_Cashshopskinpiece f);
        /*0xda9d3c*/ void <GetSellItemList>b__9(TableData.TableData_Cashshopskin f);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> packageDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SGoods> <>9__0;

        /*0xda9ddc*/ <>c__DisplayClass44_0();
        /*0xda9de4*/ bool <CoDailyReset>b__0(PTShare.Define.SGoods packet);
    }

    class <CoDailyReset>d__44 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ CashShopManager.<> <>8__1;

        /*0xdaa438*/ <CoDailyReset>d__44(int <>1__state);
        /*0xdaa464*/ void System.IDisposable.Dispose();
        /*0xdaa468*/ bool MoveNext();
        /*0xdaaa98*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaaaa0*/ void System.Collections.IEnumerator.Reset();
        /*0xdaaae0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> packageDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SGoods> <>9__0;

        /*0xda9e78*/ <>c__DisplayClass45_0();
        /*0xda9e80*/ bool <CoWeeklyReset>b__0(PTShare.Define.SGoods packet);
    }

    class <CoWeeklyReset>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ CashShopManager.<> <>8__1;

        /*0xdab624*/ <CoWeeklyReset>d__45(int <>1__state);
        /*0xdab650*/ void System.IDisposable.Dispose();
        /*0xdab654*/ bool MoveNext();
        /*0xdaba48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaba50*/ void System.Collections.IEnumerator.Reset();
        /*0xdaba90*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> packageDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SGoods> <>9__0;

        /*0xda9f14*/ <>c__DisplayClass46_0();
        /*0xda9f1c*/ bool <CoMonthlyReset>b__0(PTShare.Define.SGoods packet);
    }

    class <CoMonthlyReset>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ CashShopManager.<> <>8__1;

        /*0xdaaae8*/ <CoMonthlyReset>d__46(int <>1__state);
        /*0xdaab14*/ void System.IDisposable.Dispose();
        /*0xdaab18*/ bool MoveNext();
        /*0xdaaf0c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaaf14*/ void System.Collections.IEnumerator.Reset();
        /*0xdaaf54*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoBegginerRefresh>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;

        /*0xdaa204*/ <CoBegginerRefresh>d__47(int <>1__state);
        /*0xdaa230*/ void System.IDisposable.Dispose();
        /*0xdaa234*/ bool MoveNext();
        /*0xdaa3e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaa3f0*/ void System.Collections.IEnumerator.Reset();
        /*0xdaa430*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass60_0
    {
        /*0x10*/ PTShare.Define.SInstant sInstant;

        /*0xda9fb0*/ <>c__DisplayClass60_0();
        /*0xda9fb8*/ bool <ShowInstantPopup>b__0(TableData.TableData_Cashshopinstant data);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ PTShare.Define.SInstant sInstant;

        /*0xda9fe8*/ <>c__DisplayClass61_0();
        /*0xda9ff0*/ bool <GetSpecialSellerType>b__0(TableData.TableData_Cashshopinstant data);
    }

    class <CoSpecialSellerUpdate>d__62 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;

        /*0xdab200*/ <CoSpecialSellerUpdate>d__62(int <>1__state);
        /*0xdab22c*/ void System.IDisposable.Dispose();
        /*0xdab230*/ bool MoveNext();
        /*0xdab5d4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdab5dc*/ void System.Collections.IEnumerator.Reset();
        /*0xdab61c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowNewSpecialSellerPopup>d__63 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xdaaf5c*/ <CoShowNewSpecialSellerPopup>d__63(int <>1__state);
        /*0xdaaf88*/ void System.IDisposable.Dispose();
        /*0xdaaf8c*/ bool MoveNext();
        /*0xdab1b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdab1b8*/ void System.Collections.IEnumerator.Reset();
        /*0xdab1f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass67_0
    {
        /*0x10*/ string[] requireQuestGroupIds;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<DefineEvent.TriggerData> <>9__1;

        /*0xdaa020*/ <>c__DisplayClass67_0();
        /*0xdaa028*/ bool <InitInstantTrigger>b__1(DefineEvent.TriggerData triggerData);
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ DefineEvent.TriggerData triggerData;
        /*0x18*/ CashShopManager <>4__this;

        /*0xdaa078*/ <>c__DisplayClass72_0();
        /*0xdaa080*/ void <AddSpecialSeller>b__0(ServerProtocol.ResCashShopInstant response);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ PTShare.Define.SInstant packet;

        /*0xdaa1cc*/ <>c__DisplayClass73_0();
        /*0xdaa1d4*/ bool <RemoveSpecialSeller>b__0(PTShare.Define.SInstant data);
    }
}

class InstantPackageUnlockData
{
    /*0x10*/ int oldStageBattleID;
    /*0x14*/ int oldAccountLevel;
    /*0x18*/ int oldChapter;
    /*0x1c*/ int oldTower;
    /*0x20*/ int oldSpiritTower;
    /*0x24*/ int defeatCount;
    /*0x28*/ int defeatCampain;
    /*0x2c*/ int defeatTower;
    /*0x30*/ int lastDefeatCount;
    /*0x34*/ int lastDefeatCampainCount;
    /*0x38*/ int lastDefeatTowerCount;

    /*0x15741d4*/ InstantPackageUnlockData();
    /*0x15741bc*/ void UpdateLastDefeatCount();
    /*0x15741d0*/ void ShowDebugLog();
}

class ChatServerLogger
{
    /*0x10*/ ChatSystem.ChannelInfo currentChannel;
    /*0x18*/ System.Collections.Generic.Dictionary<string, ChatSystem.ChannelInfo> liChannelMap;
    /*0x20*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<ChatSystem.ChatLog>> dicChannelLog;

    /*0x10d9ff0*/ ChatServerLogger();
    /*0x10d81bc*/ void InitializeEvent();
    /*0x10d81e0*/ void ClearAll();
    /*0x10d83cc*/ ChatSystem.ChannelInfo GetCurrentChannel();
    /*0x10d83d4*/ ChatSystem.ChannelInfo SetCurrentChannel(ChatSystem.ChannelInfo _info);
    /*0x10d8204*/ void ClearChannelInfo();
    /*0x10d83e0*/ bool IsExistChannelInfo(ChatSystem.ChannelInfo _info);
    /*0x10d84e4*/ void AddChannelInfo(ChatSystem.ChannelInfo _info);
    /*0x10d8550*/ void DeleteChannelInfo(string _uniquekey);
    /*0x10d85b4*/ void DeleteChannelKeyword(string _keyword);
    /*0x10d873c*/ ChatSystem.ChannelInfo FindChannelInfo(string _uniquekey);
    /*0x10d87b8*/ ChatSystem.ChannelInfo FindChannelInfoKeyword(string _keyword);
    /*0x10d86cc*/ System.Collections.Generic.List<ChatSystem.ChannelInfo> GetInfoList();
    /*0x10d8260*/ void ClearAllChatLog();
    /*0x10d88b0*/ ChatSystem.ChatLog AddChatLog(ChatSystem.ChannelInfo _info, ChatApp.Shared.MessagePackObjects.SMessage _msg);
    /*0x10d88c8*/ ChatSystem.ChatLog AddChatLog(string _uniquekey, ChatApp.Shared.MessagePackObjects.SMessage _msg);
    /*0x10d8a5c*/ System.Collections.Generic.List<ChatSystem.ChatLog> GetChatLogs(ChatSystem.ChannelInfo _info);
    /*0x10d8a74*/ System.Collections.Generic.List<ChatSystem.ChatLog> GetChatLogs(string _uniquekey);
    /*0x10d8b70*/ void SetChatLogSize(string _uniquekey, int _index, UnityEngine.Vector2 _textsize, UnityEngine.Vector2 _backgroundsize, UnityEngine.Vector2 _parentsize);
    /*0x10d8d78*/ void RemovePartsChatLog(string _uniquekey, int _safeLimitAmount);
    /*0x10d8e60*/ void RemoveChatLogKeyword(string _keyword);
    /*0x10d9060*/ void RemoveChatLog(ChatSystem.ChannelInfo _info);
    /*0x10d8f78*/ void RemoveChatLog(string _uniquekey);
    /*0x10d9078*/ int ChatLogCount(ChatSystem.ChannelInfo _info);
    /*0x10d9090*/ int ChatLogCount(string _uniquekey);
    /*0x10d91a4*/ void TCLoginAck(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.Room> rooms);
    /*0x10d92c8*/ void TCChatGroupAck(int result, string groupid, ChatApp.Shared.MessagePackObjects.SMessage chat);
    /*0x10d9508*/ void TCChatPrivateAck(ChatApp.Shared.MessagePackObjects.SMessage chat);
    /*0x10d9834*/ void TCLuckyAck(int unitid, string nickname);
    /*0x10d9b70*/ void TCAdminNoticeAck(string notice);
    /*0x10d9c28*/ void TCMoveLangChannelAck(ChatApp.Shared.MessagePackObjects.Room newroom);
    /*0x10d9e50*/ void CTChatPrivateReq(long toplayerid, string msg);
    /*0x10d9fb8*/ void CTExitPrivateReq(long playerid);
    /*0x10d9760*/ bool IsOpenChatWindow();
    /*0x10da0a8*/ void <TCLoginAck>b__27_0(ChatApp.Shared.MessagePackObjects.Room x);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ ChatSystem.ChannelInfo _info;

        /*0x106e804*/ <>c__DisplayClass8_0();
        /*0x106e80c*/ bool <IsExistChannelInfo>b__0(System.Collections.Generic.KeyValuePair<string, ChatSystem.ChannelInfo> x);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ string _keyword;

        /*0x106e3ac*/ <>c__DisplayClass11_0();
        /*0x106e3b4*/ bool <DeleteChannelKeyword>b__0(ChatSystem.ChannelInfo x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ string _keyword;

        /*0x106e3e0*/ <>c__DisplayClass13_0();
        /*0x106e3e8*/ bool <FindChannelInfoKeyword>b__0(ChatSystem.ChannelInfo x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ ChatServerLogger <>4__this;
        /*0x18*/ string _keyword;

        /*0x106e414*/ <>c__DisplayClass22_0();
        /*0x106e41c*/ bool <RemoveChatLogKeyword>b__0(System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<ChatSystem.ChatLog>> x);
    }

    class <>c__DisplayClass22_1
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<ChatSystem.ChatLog>> x;

        /*0x106e548*/ <>c__DisplayClass22_1();
        /*0x106e550*/ bool <RemoveChatLogKeyword>b__1(ChatSystem.ChannelInfo y);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ ChatSystem.ChannelInfo _info;
        /*0x18*/ System.DateTime saveTime;
        /*0x20*/ ChatServerLogger <>4__this;

        /*0x106e5ac*/ <>c__DisplayClass27_0();
        /*0x106e5b4*/ void <TCLoginAck>b__1(ChatApp.Shared.MessagePackObjects.SMessage y);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ ChatServerLogger <>4__this;
        /*0x18*/ ChatSystem.ChannelInfo _info;

        /*0x106e738*/ <>c__DisplayClass32_0();
        /*0x106e740*/ void <TCMoveLangChannelAck>b__0(ChatApp.Shared.MessagePackObjects.SMessage y);
    }
}

class ChatServerManager : Singleton.Component.SingletonComponent<ChatServerManager>
{
    static /*0x0*/ bool IsViewOnChat;
    /*0x28*/ System.Collections.Generic.Queue<string> m_whisperQueue;
    /*0x30*/ ChatServerLogger logger;
    /*0x38*/ Assets.Scripts.ChatComponent ChatServer;

    static /*0x10da460*/ ChatServerManager();
    /*0x10da3d4*/ ChatServerManager();
    /*0x10da284*/ void AwakeInstance();
    /*0x10da288*/ bool InitInstance();
    /*0x10da3b0*/ void ReleaseInstance();
    /*0x10da3c4*/ ChatServerLogger GetLogger();
    /*0x10da3cc*/ System.Collections.Generic.Queue<string> GetWhisperQueue();
}

class ContentShopManager : Singleton.Component.SingletonComponent<ContentShopManager>
{
    static /*0x0*/ System.Action OnShopReset;
    static /*0x8*/ System.Action OnShopRefresh;
    /*0x28*/ System.Collections.Generic.Dictionary<DefineContentShop.ContentShopCategoryType, System.Collections.Generic.List<DefineContentShop.ContentPackageShopData>> m_contentShopDataDictionary;
    /*0x30*/ int m_normalShopResetCount;
    /*0x34*/ int m_guildShopResetCount;
    /*0x38*/ int m_pveShopResetCount;

    static /*0xf47db0*/ ContentShopManager();
    /*0xf47d24*/ ContentShopManager();
    /*0xf46b2c*/ void AwakeInstance();
    /*0xf46b30*/ bool InitInstance();
    /*0xf46b38*/ void ReleaseInstance();
    /*0xf46b3c*/ int GetNormalShopResetCost();
    /*0xf46ba8*/ int GetGuildShopResetCost();
    /*0xf46c14*/ int GetPveShopResetCost();
    /*0xf46c80*/ TableData.TableData_Contentshop FindContentShop(DefineContentShop.ContentShopCategoryType categoryType);
    /*0xf46dd0*/ System.Collections.Generic.List<DefineContentShop.ContentPackageShopData> FindContentShopPackageList(DefineContentShop.ContentShopCategoryType categoryType);
    /*0xf46e34*/ void Send_ShopEnter(System.Action callBack);
    /*0xf46fc0*/ void Send_ShopReset(DefineContentShop.ContentShopCategoryType resetCategory);
    /*0xf47168*/ void Send_Purchase(DefineContentShop.ContentShopCategoryType contentShopCategoryType, int index, System.Action<int> callBack);
    /*0xf47314*/ bool IsUnlockCheckByQuestGroupId(string questGroupId);
    /*0xf47480*/ void InitContentDictionary(System.Collections.Generic.List<string> goodsList);
    /*0xf4791c*/ void RefreshContentDictionary(DefineContentShop.ContentShopCategoryType categoryType, System.Collections.Generic.List<string> goodsList);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ DefineContentShop.ContentShopCategoryType categoryType;

        /*0x1072d20*/ <>c__DisplayClass12_0();
        /*0x1072d28*/ bool <FindContentShop>b__0(TableData.TableData_Contentshop f);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ContentShopManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1072dd8*/ <>c__DisplayClass14_0();
        /*0x1072de0*/ void <Send_ShopEnter>b__0(ServerProtocol.ResContentShopEnter instance);
    }

    class <>c__DisplayClass14_1
    {
        /*0x10*/ int normalshopindex;
        /*0x14*/ int guildshopindex;
        /*0x18*/ int pveshopindex;

        /*0x10732ec*/ <>c__DisplayClass14_1();
        /*0x10732f4*/ bool <Send_ShopEnter>b__4(PTShare.Define.SContentShopReset f);
        /*0x1073318*/ bool <Send_ShopEnter>b__5(PTShare.Define.SContentShopReset f);
        /*0x107333c*/ bool <Send_ShopEnter>b__6(PTShare.Define.SContentShopReset f);
    }

    class <>c
    {
        static /*0x0*/ ContentShopManager.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Contentshop, bool> <>9__14_1;
        static /*0x10*/ System.Func<TableData.TableData_Contentshop, bool> <>9__14_2;
        static /*0x18*/ System.Func<TableData.TableData_Contentshop, bool> <>9__14_3;

        static /*0x1072bb0*/ <>c();
        /*0x1072c10*/ <>c();
        /*0x1072c18*/ bool <Send_ShopEnter>b__14_1(TableData.TableData_Contentshop f);
        /*0x1072c70*/ bool <Send_ShopEnter>b__14_2(TableData.TableData_Contentshop f);
        /*0x1072cc8*/ bool <Send_ShopEnter>b__14_3(TableData.TableData_Contentshop f);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ DefineContentShop.ContentShopCategoryType resetCategory;
        /*0x18*/ ContentShopManager <>4__this;

        /*0x1073360*/ <>c__DisplayClass15_0();
        /*0x1073368*/ void <Send_ShopReset>b__0(ServerProtocol.ResContentShopReset instance);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ ContentShopManager <>4__this;
        /*0x18*/ DefineContentShop.ContentShopCategoryType contentShopCategoryType;
        /*0x1c*/ int index;
        /*0x20*/ System.Action<int> callBack;
        /*0x28*/ System.Predicate<DefineContentShop.ContentPackageShopData> <>9__1;

        /*0x10734c8*/ <>c__DisplayClass16_0();
        /*0x10734d0*/ void <Send_Purchase>b__0(ServerProtocol.ResContentShopPurchase instance);
        /*0x10737b8*/ bool <Send_Purchase>b__1(DefineContentShop.ContentPackageShopData x);
    }
}

class ContentShopResetPopup : GuiBase
{
    /*0x40*/ LocalizeString m_popupInfoText;
    /*0x48*/ LocalizeString m_playerCurrencyText;
    /*0x50*/ LocalizeString m_costCurrencyText;
    /*0x58*/ LocalizeString m_purchaseText;
    /*0x60*/ DefineContentShop.ContentShopCategoryType m_contentShopCategoryType;

    /*0xf4beb0*/ ContentShopResetPopup();
    /*0xf4b564*/ void OnCreate();
    /*0xf4b568*/ void OnDelete();
    /*0xf4b56c*/ void OnEnter();
    /*0xf4b5d8*/ void OnFinish();
    /*0xf4b5dc*/ void OnLeave();
    /*0xf4b5e0*/ void OnExit();
    /*0xf4b65c*/ void OnStart();
    /*0xf49fb0*/ void InitializePopup(DefineContentShop.ContentShopCategoryType contentShopType);
    /*0xf4b660*/ void SetPopupInfo();
    /*0xf4baf8*/ void UpdatePlayerCurrency();
    /*0xf4bbb0*/ void UpdateResetCost();
    /*0xf4be48*/ void OnClickReset();
}

class DefineManager
{
    static /*0x0*/ SERVER_MODE ServerMode;
    static /*0x4*/ ASSET_MODE AssetMode;
    static /*0x8*/ CSV_MODE CsvMode;
    static /*0xc*/ DEBUGGING_MODE DebuggingMode;
    static /*0x10*/ SDK_MODE SdkMode;
    static /*0x14*/ bool IsIOS;

    static /*0x11e7758*/ DefineManager();
}

enum SERVER_MODE
{
    OPEN_SELECT_POPUP = 0,
    USE_URL_TEST_ONE = 1,
    USE_URL_TEST_TWO = 2,
    USE_URL_TEST_THREE = 3,
    USE_URL_TEST_FOUR = 4,
    USE_URL_TEST_FIVE = 5,
    USE_URL_TEST_SIX = 6,
    USE_URL_TEST_SEVEN = 7,
    USE_URL_TEST_EIGHT = 8,
    USE_URL_TEST_NINE = 9,
    USE_URL_LIVE = 10,
    USE_URL_INSPECTION = 11,
}

enum ASSET_MODE
{
    ASSET_DIRECT = 0,
    ASSET_CDN = 1,
    ASSET_BUILTIN = 2,
    ASSET_BUILTIN_CDN = 3,
}

enum CSV_MODE
{
    CSV_SERVER = 0,
    CSV_BUILTIN = 1,
}

enum DEBUGGING_MODE
{
    INCLUDE_DEBUGGING = 0,
    EXCLUDE_DEBUGGING = 1,
}

enum SDK_MODE
{
    LOGIN_DEV = 0,
    LOGIN_FIREBASE = 1,
}

enum TEXTURE_MODE
{
    NO_COMPRESS = 0,
    COMPRESS = 1,
}

enum EXTENSION_MODE
{
    APK = 0,
    AAB = 1,
    OBB = 2,
}

enum ADJUST_MODE
{
    ADJUST_SANDBOX = 0,
    ADJUST_RELEASE = 1,
}

enum PUBSDK_LOG_MODE
{
    UNABLE_PUBLOG = 0,
    ENABLE_PUBLOG = 1,
}

enum IAP_MODE
{
    UNITYIAP = 0,
    ONESTORE = 1,
}

class DialogManager : Singleton.Component.SingletonComponent<DialogManager>
{
    /*0x21*/ bool m_isShowWellComeDialog;

    /*0x11f0428*/ DialogManager();
    /*0x11f0080*/ void AwakeInstance();
    /*0x11f0084*/ bool InitInstance();
    /*0x11f00a4*/ void ReleaseInstance();
    /*0x11f00a8*/ bool IsShowWellComeDialog();
    /*0x11f00b0*/ void DontShowWellComeDialog();
    /*0x11f00b8*/ void ShowWellComeDialog(SkinKeyType skinKeyType);
    /*0x11f0394*/ void PlayDialog(DialogData dialogData);
    /*0x11f0098*/ void Init();
    /*0x11f0418*/ void CheatPlay();
}

class DefineDungeon
{
    static int HAMMER_INDEX = 1;
    static int KEY_INDEX = 2;
    static /*0x0*/ float SHADOW_TIME;
    static /*0x4*/ UnityEngine.Vector2Int START_POINT;
    static /*0xc*/ float DUNGEON_TOAST_Y;
    static /*0x10*/ UnityEngine.Color RED_ALERT;
    static /*0x20*/ UnityEngine.Color GREEN_ALERT;
    static /*0x30*/ UnityEngine.Color FREEZE_ALERT;

    static /*0x11e40f0*/ DefineDungeon();

    enum DungeonColorType
    {
        MINIMAP = 0,
        FULLMAP = 1,
    }

    enum TILETYPE
    {
        NORMAL = 0,
        RANDOM = 1,
        BATTLE = 2,
        BATTLEBOSS = 3,
        REVIVAL = 4,
        HEAL = 5,
        BUFFATK = 6,
        BUFFDEFENCE = 7,
        DEBUFFATK = 8,
        DEBUFFDEFENCE = 9,
        RANDOMREWARD = 10,
        JAIL = 11,
        ESCAPE = 12,
        MOVEUP = 13,
        MOVEDOWN = 14,
        MOVELEFT = 15,
        MOVERIGHT = 16,
        EXPLORE = 17,
        TRAP = 18,
        COINREWARD = 19,
        CONDITIONREWARD = 20,
        WALL = 21,
        START = 22,
        BLOCK = 23,
        MATE = 24,
        BUFFRESET = 25,
        CLIENT_FREEZE = 26,
        BROKEN = 27,
        BOMB = 28,
        BOMBCLEAR = 29,
        WALL_FIRE = 30,
        WALL_NATURAL = 31,
        WALL_WATER = 32,
        WALL_WIND = 33,
        NULL = 34,
    }

    enum SEETYPE
    {
        BLUR = 0,
        SEE = 1,
    }

    enum SHOWTYPE
    {
        DEEPHIDE = 0,
        HIDE = 1,
        LIGHT = 2,
        SUPERLIGHT = 3,
        NULL = 4,
    }

    enum TILEVIEWTYPE
    {
        NONE = 0,
        USEVIEW = 1,
        AFTERVIEW = 2,
    }

    enum SPREADTYPE
    {
        LIGHT = 0,
        SUPER_LIGHT = 1,
        HIDE = 2,
        DEEPHIDE = 3,
        NULL = 4,
    }

    enum DUNGEON_SOUND
    {
        Dungeon_Buff = 0,
        Dungeon_Debuff = 1,
        Dungeon_Heal = 2,
        Dungeon_Jail_Frozen = 3,
        Dungeon_Jail_Release = 4,
        Dungeon_Revival = 5,
        Dungeon_Run = 6,
        Dungeon_Trap = 7,
        Dungeon_Wall_Open = 8,
    }

    class DungeonRouteNode
    {
        /*0x10*/ DefineDungeon.DungeonRouteNode parentNode;
        /*0x18*/ UnityEngine.Vector2Int routePoint;
        /*0x20*/ float cost;

        /*0x10775d0*/ DungeonRouteNode(DefineDungeon.DungeonRouteNode parentNode, UnityEngine.Vector2Int routePoint, float cost);
    }

    class DungeonItem
    {
        /*0x10*/ int hammerAmount;
        /*0x14*/ int keyAmount;

        /*0x10775b0*/ DungeonItem();
        /*0x10775a8*/ void Clear();
    }

    class DungeonConditionRewardData
    {
        /*0x10*/ bool isGoal;
        /*0x14*/ int score;
        /*0x18*/ int destScore;

        /*0x10772f0*/ DungeonConditionRewardData();
        /*0x10772e0*/ void Clear();
        /*0x10772ec*/ void DebugLog();
    }

    class DungeonForceMoveData
    {
        /*0x10*/ UnityEngine.Vector2Int destPoint;
        /*0x18*/ string forceWay;
        /*0x20*/ int moveValue;

        /*0x1077548*/ DungeonForceMoveData();
        /*0x1077354*/ void SetForceWay(string forceWay);
        /*0x1077420*/ void RemoveFirstWay();
        /*0x10774ec*/ void Clear();
    }

    class DungeonRandomRewardLimitData
    {
        /*0x10*/ int makeGold;
        /*0x14*/ int makeHeroExp;

        /*0x10775c8*/ DungeonRandomRewardLimitData();
        /*0x10775b8*/ void SetData(int makeGold, int makeHeroExp);
        /*0x10775c0*/ void Clear();
    }

    class DungeonDefeatData
    {
        /*0x10*/ bool isDefeat;
        /*0x14*/ UnityEngine.Vector2Int defeatPoint;

        /*0x1077324*/ DungeonDefeatData();
        /*0x10772f8*/ void Clear();
    }
}

class DungeonBombUI : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int EFFECT_MAX_BOMB_COUNT;
    /*0x18*/ UnityEngine.CanvasGroup m_parent;
    /*0x20*/ UnityEngine.GameObject m_bg;
    /*0x28*/ LocalizeString m_countText;
    /*0x30*/ UnityEngine.Coroutine m_bombEffectCoroutine;

    static /*0x11f4934*/ DungeonBombUI();
    /*0x11f492c*/ DungeonBombUI();
    /*0x11f4454*/ void OnDisable();
    /*0x11f4560*/ void InitUI();
    /*0x11f4584*/ void BindEvent();
    /*0x11f4458*/ void RemoveEvent();
    /*0x11f478c*/ void SetEnable(bool enable);
    /*0x11f4850*/ void FadeOut(float time);
    /*0x11f467c*/ void UpdateCount();
    /*0x11f48c0*/ System.Collections.IEnumerator CoBombShake();

    class <CoBombShake>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonBombUI <>4__this;
        /*0x28*/ UnityEngine.Vector3 <rot>5__2;
        /*0x34*/ int <power>5__3;
        /*0x38*/ float <time>5__4;

        /*0x10798ac*/ <CoBombShake>d__12(int <>1__state);
        /*0x10798d8*/ void System.IDisposable.Dispose();
        /*0x10798dc*/ bool MoveNext();
        /*0x1079b44*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079b4c*/ void System.Collections.IEnumerator.Reset();
        /*0x1079b8c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
{
    /*0x18*/ DungeonMainPopup m_dungeonMainPopup;
    /*0x20*/ UnityEngine.Events.UnityEvent m_ButtonAction;
    /*0x28*/ UnityEngine.Vector2 m_prevPosition;
    /*0x30*/ UnityEngine.Vector2 m_downPosition;
    /*0x38*/ float pointerDownTime;
    /*0x3c*/ bool m_isUseDrag;
    /*0x3d*/ bool m_bIsEnabled;

    /*0x11f4cc4*/ DungeonButton();
    /*0x11f4984*/ bool get_Enabled();
    /*0x11f498c*/ void set_Enabled(bool value);
    /*0x11f4998*/ System.Action get_GetButtonAction();
    /*0x11f4a10*/ UnityEngine.Events.UnityEvent get_GetButtonEvent();
    /*0x11f4a18*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4adc*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4bbc*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4bc0*/ void AddEvent(UnityEngine.Events.UnityAction evt);
    /*0x11f4bdc*/ void ClearEvent();
    /*0x11f4bf8*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4cd4*/ void <get_GetButtonAction>b__11_0();
}

class DungeonCoinRewardPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ButtonCancel;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ LocalizeString m_ConfirmBtnText;
    /*0x58*/ LocalizeString m_CancelBtnText;
    /*0x60*/ LocalizeString m_ConfirmMessage;
    /*0x68*/ LocalizeString m_dungeonCoin;
    /*0x70*/ AtlasImage m_image;
    /*0x78*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x80*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x88*/ ScrollContent_StageReward m_rewardScrollContent;
    /*0x90*/ bool m_EnableCancel;
    /*0x91*/ bool m_IsExitBackground;
    /*0x98*/ System.Action<bool> m_OnClickButton;
    /*0xa0*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0xa8*/ int m_receivedStartIndex;

    /*0x11f5cc8*/ DungeonCoinRewardPopup();
    /*0x11f4ce8*/ void OnCreate();
    /*0x11f4cec*/ void OnEnter();
    /*0x11f4cf0*/ void OnStart();
    /*0x11f4cf4*/ void OnLeave();
    /*0x11f4cf8*/ void OnDelete();
    /*0x11f4cfc*/ void OnFinish();
    /*0x11f4d00*/ void Init(AtlasType atlasType, string imagePath, System.Collections.Generic.List<Rewards> rewardList, System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0x11f5080*/ void UpdateReceivedRewards(System.Collections.Generic.List<Rewards> rewardList);
    /*0x11f532c*/ void SetAtlas(AtlasType atlasType, string imagePath);
    /*0x11f54a0*/ void SetText(LocalizeString _str, string _key);
    /*0x11f58f8*/ void SetActiveCancelButton(bool _enable);
    /*0x11f5698*/ void SetRewardList();
    /*0x11f5758*/ void SetDungeonCoin();
    /*0x11f5594*/ string GetLocalizeStr(string _key);
    /*0x11f4fa4*/ void BindEvent();
    /*0x11f59ac*/ void RemoveEvent();
    /*0x11f5a80*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0x11f5b68*/ void OnConfirm();
    /*0x11f5c10*/ void OnCancel();
    /*0x11f5c70*/ void OnExit();
    /*0x11f5cb0*/ void OnExitBackground();
    /*0x11f5940*/ System.Collections.IEnumerator CoSetText();

    class <CoSetText>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonCoinRewardPopup <>4__this;

        /*0x1079b94*/ <CoSetText>d__36(int <>1__state);
        /*0x1079bc0*/ void System.IDisposable.Dispose();
        /*0x1079bc4*/ bool MoveNext();
        /*0x1079c24*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079c2c*/ void System.Collections.IEnumerator.Reset();
        /*0x1079c6c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonCurrencyTopWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform m_Parent;
    /*0x20*/ System.Collections.Generic.List<CurrencyTopEntity> m_liCurrencyEntity;
    /*0x28*/ int nStartCount;
    /*0x2c*/ int nEndCount;

    /*0x11f618c*/ DungeonCurrencyTopWindow();
    /*0x11f5d4c*/ void OnEnable();
    /*0x11f5e24*/ void OnDisable();
    /*0x11f5ecc*/ void InitalizeInfo(TopCurrencyInfo[] _viewInfos);
    /*0x11f60d4*/ void HandlerChangeInfo();
}

class DungeonDialogEnter : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<DungeonFieldCharacter> m_dungeonDialogCharacterList;
    /*0x20*/ DungeonMap m_dungeonMap;
    /*0x28*/ bool m_isFast;
    /*0x30*/ System.Action m_exitCallBack;

    /*0x11f6e50*/ DungeonDialogEnter();
    /*0x11f6434*/ void Init(DungeonMap map, System.Action exitCallback);
    /*0x11f6488*/ void Close();
    /*0x11f65bc*/ void Show(int dungeonId);
    /*0x11f696c*/ void HandleExitDialog();
    /*0x11f6de4*/ System.Collections.IEnumerator CoCloseMove();

    class <CoCloseMove>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonDialogEnter <>4__this;

        /*0x1079c74*/ <CoCloseMove>d__8(int <>1__state);
        /*0x1079ca0*/ void System.IDisposable.Dispose();
        /*0x1079ca4*/ bool MoveNext();
        /*0x1079d88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079d90*/ void System.Collections.IEnumerator.Reset();
        /*0x1079dd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonFieldCharacter : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnMoveEnd;
    /*0x18*/ Spine.Unity.SkeletonAnimation m_baseCharacterSkel;
    /*0x20*/ UnityEngine.MeshRenderer m_meshRenderer;
    /*0x28*/ Spine.Unity.BoneFollower m_boneFollower;
    /*0x30*/ int m_sortOrderBonus;
    /*0x38*/ DungeonView m_light;
    /*0x40*/ DungeonView m_slimeLight;
    /*0x48*/ DungeonMap m_dungeonMap;
    /*0x50*/ UnityEngine.Vector2Int m_standTile;
    /*0x58*/ UnityEngine.Vector2Int m_prevTile;
    /*0x60*/ UnityEngine.Vector2Int m_newRequestMove;
    /*0x68*/ int m_freezeCharacterId;
    /*0x70*/ UnityEngine.Coroutine m_routeCoroutine;
    /*0x78*/ bool m_isDontOtherMove;
    /*0x79*/ bool m_isSlime;
    /*0x7a*/ bool m_isPlayerble;
    /*0x80*/ string m_curAnim;
    /*0x88*/ System.Action m_animEndCallBack;

    static /*0x11f8d54*/ DungeonFieldCharacter();
    static /*0x11f71ec*/ void add_OnMoveEnd(System.Action value);
    static /*0x11f72e0*/ void remove_OnMoveEnd(System.Action value);
    /*0x11f8ccc*/ DungeonFieldCharacter();
    /*0x11f73d4*/ UnityEngine.Vector2Int GetStandPoint();
    /*0x11f73dc*/ DungeonView GetDungeonView();
    /*0x11f73f8*/ bool IsLeftLook();
    /*0x11f7428*/ bool IsPlayerble();
    /*0x11f7430*/ void SetSortOrderBonus(int value);
    /*0x11f7438*/ void SetPlayerble(bool enable);
    /*0x11f7444*/ void OnDisable();
    /*0x11f754c*/ void InitCharacter(DungeonMap map, UnityEngine.Vector2Int stand, UnityEngine.Vector2Int prevTile);
    /*0x11f6854*/ void InitCharacter(DungeonMap map, UnityEngine.Vector2Int stand, int characterId);
    /*0x11f7f48*/ void InitFreeze(DungeonMap map, UnityEngine.Vector2Int stand, int tableId);
    /*0x11f7744*/ void Clear();
    /*0x11f78c4*/ void SetCharacter(int tableId);
    /*0x11f7c1c*/ void SetBoneFollower(bool enable);
    /*0x11f7e44*/ void SetLight();
    /*0x11f809c*/ void SetAnimation(string anim, bool loop, System.Action completeCallBack);
    /*0x11f7da4*/ void CheckStandTile();
    /*0x11f7d0c*/ void PlayWinningAnim();
    /*0x11f836c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x11f8420*/ float UpdateCharacterAnim(DefineDungeon.TILETYPE tileType);
    /*0x11f6b08*/ void PlayMove(UnityEngine.Vector2Int end, bool isDontOtherMove);
    /*0x11f85d4*/ void PlayMoveFixed(UnityEngine.Vector2Int end, bool isDontOtherMove);
    /*0x11f8688*/ void PlayForceMove(UnityEngine.Vector2Int end);
    /*0x11f8758*/ void PressStandTile();
    /*0x11f88b8*/ void StopMove();
    /*0x11f77b8*/ void BindEvent();
    /*0x11f7448*/ void RemoveEvent();
    /*0x11f8990*/ void HandleEndMoveDiceEffect(int diceNumber, char moveDir);
    /*0x11f8af8*/ char GetArrowToRoute(ARROW arrow);
    /*0x11f8b2c*/ void SendMove(string way, System.Action callBack);
    /*0x11f8554*/ System.Collections.IEnumerator CoMoveRoute(UnityEngine.Vector2Int end, string defalutWay);
    /*0x11f86e0*/ System.Collections.IEnumerator CoForceMove(UnityEngine.Vector2Int end);
    /*0x11f8c3c*/ System.Collections.IEnumerator CoMove(UnityEngine.Vector2Int start, UnityEngine.Vector2Int end, float time);
    /*0x11f8d58*/ void <PlayWinningAnim>b__36_0();

    class <>c__DisplayClass31_0
    {
        /*0x10*/ int tableId;

        /*0x1079e4c*/ <>c__DisplayClass31_0();
        /*0x1079e54*/ bool <SetCharacter>b__0(PTShare.Define.SHero hero);
    }

    class <>c
    {
        static /*0x0*/ DungeonFieldCharacter.<> <>9;
        static /*0x8*/ System.Action <>9__39_0;
        static /*0x10*/ System.Action <>9__42_0;
        static /*0x18*/ System.Action <>9__49_0;

        static /*0x1079dd8*/ <>c();
        /*0x1079e38*/ <>c();
        /*0x1079e40*/ void <PlayMove>b__39_0();
        /*0x1079e44*/ void <PressStandTile>b__42_0();
        /*0x1079e48*/ void <CoMoveRoute>b__49_0();
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ DungeonFieldCharacter <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1079e78*/ <>c__DisplayClass48_0();
        /*0x1079e80*/ void <SendMove>b__0();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ bool isWait;
        /*0x11*/ bool backup;
        /*0x18*/ DungeonFieldCharacter <>4__this;

        /*0x1079f50*/ <>c__DisplayClass49_0();
        /*0x1079f58*/ void <CoMoveRoute>b__1();
        /*0x1079f60*/ bool <CoMoveRoute>b__2();
        /*0x1079f70*/ void <CoMoveRoute>b__3();
        /*0x1079f94*/ bool <CoMoveRoute>b__4();
    }

    class <CoMoveRoute>d__49 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector2Int end;
        /*0x30*/ string defalutWay;
        /*0x38*/ DungeonFieldCharacter.<> <>8__1;
        /*0x40*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> <route>5__2;
        /*0x48*/ string <way>5__3;
        /*0x50*/ int <i>5__4;
        /*0x54*/ bool <isBomb>5__5;
        /*0x55*/ bool <isStopTile>5__6;
        /*0x58*/ float <waitTime>5__7;
        /*0x60*/ DungeonTileBase <standTile>5__8;

        /*0x107aae4*/ <CoMoveRoute>d__49(int <>1__state);
        /*0x107ab10*/ void System.IDisposable.Dispose();
        /*0x107ab14*/ bool MoveNext();
        /*0x107b6e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107b6ec*/ void System.Collections.IEnumerator.Reset();
        /*0x107b72c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ bool isStopTile;

        /*0x1079fa4*/ <>c__DisplayClass50_0();
        /*0x1079fac*/ void <CoForceMove>b__0();
        /*0x1079fb4*/ bool <CoForceMove>b__1();
    }

    class <CoForceMove>d__50 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector2Int end;
        /*0x30*/ DungeonFieldCharacter.<> <>8__1;
        /*0x38*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> <route>5__2;
        /*0x40*/ bool <isBomb>5__3;
        /*0x44*/ DefineDungeon.TILETYPE <standTileType>5__4;
        /*0x48*/ int <i>5__5;

        /*0x1079fc4*/ <CoForceMove>d__50(int <>1__state);
        /*0x1079ff0*/ void System.IDisposable.Dispose();
        /*0x1079ff4*/ bool MoveNext();
        /*0x107a860*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107a868*/ void System.Collections.IEnumerator.Reset();
        /*0x107a8a8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMove>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector2Int start;
        /*0x30*/ UnityEngine.Vector2Int end;
        /*0x38*/ float time;
        /*0x3c*/ float <t>5__2;
        /*0x40*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x4c*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x58*/ float <speed>5__5;

        /*0x107a8b0*/ <CoMove>d__51(int <>1__state);
        /*0x107a8dc*/ void System.IDisposable.Dispose();
        /*0x107a8e0*/ bool MoveNext();
        /*0x107aa94*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107aa9c*/ void System.Collections.IEnumerator.Reset();
        /*0x107aadc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonFullMap : MiniMapBase<TableData.TableData_Dungeonmap, DungeonFullMapTile>
{
    /*0x98*/ UnityEngine.GameObject m_characterPointer;
    /*0xa0*/ DungeonSetting m_dungeonSetting;
    /*0xa8*/ UnityEngine.Vector2Int m_cameraPoint;
    /*0xb0*/ System.Collections.Generic.List<AtlasImage> m_conditionRewardList;
    /*0xb8*/ UnityEngine.Coroutine m_followCoroutine;

    /*0x11f9adc*/ DungeonFullMap();
    /*0x11f8dac*/ void ExitMap();
    /*0x11f8e3c*/ void ClearConditionRewardList();
    /*0x11f8f68*/ UnityEngine.Vector2Int GetCameraPoint();
    /*0x11f8f70*/ DungeonSetting GetDungeonSetting();
    /*0x11f8f78*/ float GetDungeonMoveTime();
    /*0x11f8fdc*/ void SetCameraPosition(UnityEngine.Vector2Int point);
    /*0x11f9040*/ void InitMap(int id);
    /*0x11f946c*/ void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    /*0x11f9674*/ void UpdateZoom();
    /*0x11f97b8*/ int GetGroup(TableData.TableData_Dungeonmap data);
    /*0x11f97cc*/ string GetParameters(TableData.TableData_Dungeonmap data);
    /*0x11f9820*/ UnityEngine.Vector2Int GetPoint(TableData.TableData_Dungeonmap data);
    /*0x11f9850*/ int GetTileID(TableData.TableData_Dungeonmap data);
    /*0x11f9864*/ void InitTile(int index, TableData.TableData_Dungeonmap data, DungeonFullMapTile tileBasePrefab);
    /*0x11f9224*/ void SetScrollRectField();
    /*0x11f99e4*/ void StartFollowPoint(UnityEngine.Vector2Int point);
    /*0x11f8f38*/ void StopFollowCharacter();
    /*0x11f9a58*/ System.Collections.IEnumerator CoFollowPoint(UnityEngine.Vector2Int point);
    /*0x11f9ad0*/ void OnClickExit();

    class <CoFollowPoint>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFullMap <>4__this;
        /*0x28*/ UnityEngine.Vector2Int point;
        /*0x30*/ float <speed>5__2;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x40*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x4c*/ float <t>5__5;

        /*0x107b734*/ <CoFollowPoint>d__22(int <>1__state);
        /*0x107b760*/ void System.IDisposable.Dispose();
        /*0x107b764*/ bool MoveNext();
        /*0x107b8d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107b8d8*/ void System.Collections.IEnumerator.Reset();
        /*0x107b918*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonFullMapPopup : GuiBase
{
    /*0x40*/ DungeonFullMap m_dungeonFullMap;

    /*0x11f9ca4*/ DungeonFullMapPopup();
    /*0x11f9ba0*/ void OnCreate();
    /*0x11f9ba4*/ void OnDelete();
    /*0x11f9ba8*/ void OnEnter();
    /*0x11f9bac*/ void OnExit();
    /*0x11f9c04*/ void OnFinish();
    /*0x11f9c08*/ void OnLeave();
    /*0x11f9c0c*/ void OnStart();
    /*0x11f9c10*/ DungeonFullMap GetDungeonFullMap();
    /*0x11f9c18*/ void InitPopup();
}

class DungeonFullMapTile : TileBase
{
    /*0x78*/ AtlasImage m_tileImage;
    /*0x80*/ AtlasImage m_objectImage;
    /*0x88*/ DungeonFullMap m_dungeonMap;
    /*0x90*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x94*/ DefineDungeon.TILETYPE m_tileType;
    /*0x98*/ DefineDungeon.TILEVIEWTYPE m_tileViewType;
    /*0x9c*/ int m_tileID;
    /*0xa0*/ UnityEngine.Vector2Int m_tilePoint;
    /*0xa8*/ TableData.TableData_Dungeonmap m_dungeonMapData;

    /*0x11fa604*/ DungeonFullMapTile();
    /*0x11f9cac*/ DefineDungeon.TILETYPE GetTileType();
    /*0x11f9cb4*/ DefineDungeon.TILEVIEWTYPE GetViewType();
    /*0x11f9cbc*/ UnityEngine.Vector2Int GetTilePoint();
    /*0x11f9cc4*/ TableData.TableData_Dungeontile GetTableData();
    /*0x11f9cd0*/ bool IsViewReward();
    /*0x11f9dd0*/ bool IsTileKeep();
    /*0x11f9888*/ void InitTile(int index, DungeonFullMap map, TableData.TableData_Dungeonmap data);
    /*0x11f9218*/ void RefreshTile();
    /*0x11f9e34*/ void SetData();
    /*0x11fa014*/ void ChangeNormalTile();
    /*0x11f9dfc*/ void Clear();
    /*0x11f9620*/ void SetHide(bool isDeep);
    /*0x11f9600*/ void SetLight();
    /*0x11fa0e4*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
    /*0x11fa540*/ void UpdateObjectImage();
    /*0x11fa63c*/ bool <IsViewReward>b__13_0(TableData.TableData_Dungeonreward data);
}

class DungeonFunction
{
    static /*0x11fa678*/ bool IsStopTile(DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    static /*0x11fa758*/ void PlayPressSoundTile(DefineDungeon.TILETYPE tileType);
    static /*0x11fa8ac*/ void PlayPressAfterSoundTile(DefineDungeon.TILETYPE tileType);
    static /*0x11faab8*/ void PlaySoundTarget(DefineDungeon.TILETYPE tileType);
    static /*0x11fa1cc*/ bool IsSeeTile(UnityEngine.Vector2Int tilePoint);
    static /*0x11f9fb8*/ bool IsUsedTile(UnityEngine.Vector2Int tilePoint);
    static /*0x11fad14*/ bool IsViewReward(UnityEngine.Vector2Int tilePoint);
    static /*0x11fa228*/ DefineDungeon.SHOWTYPE GetShowType(DefineDungeon.SHOWTYPE prevShowType);
    static /*0x11fa248*/ UnityEngine.Color GetColor(UnityEngine.Vector2Int tilePoint, int tileId, DefineDungeon.TILEVIEWTYPE viewType, DefineDungeon.TILETYPE tileType, DefineDungeon.DungeonColorType colorType);
    static /*0x11fae44*/ bool IsBroken(DungeonTileBase tile);
    static /*0x11faee0*/ void PressTile(DungeonFieldCharacter character, DungeonTileBase tile, DungeonMap dungeonMap, UnityEngine.Vector2Int prevPoint, bool isFinish, System.Action callBack);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ UnityEngine.Vector2Int tilePoint;

        /*0x10923e8*/ <>c__DisplayClass6_0();
        /*0x10923f0*/ bool <IsViewReward>b__0(TableData.TableData_Dungeonreward data);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Action callBack;
        /*0x18*/ DungeonFieldCharacter character;
        /*0x20*/ DungeonTileBase tile;
        /*0x28*/ DefineDungeon.TILETYPE tileType;
        /*0x30*/ DungeonMap dungeonMap;
        /*0x38*/ UnityEngine.Vector2Int prevPoint;
        /*0x40*/ bool isFinish;
        /*0x48*/ System.Action <>9__25;
        /*0x50*/ System.Action <>9__28;
        /*0x58*/ System.Action <>9__31;
        /*0x60*/ System.Action <>9__33;
        /*0x68*/ System.Action <>9__34;
        /*0x70*/ System.Action <>9__35;
        /*0x78*/ System.Action <>9__38;

        /*0x107b9e4*/ <>c__DisplayClass10_0();
        /*0x107b9ec*/ void <PressTile>b__23();
        /*0x107ba00*/ void <PressTile>b__0(bool action);
        /*0x107bbcc*/ void <PressTile>b__25();
        /*0x107bc34*/ void <PressTile>b__1(bool action);
        /*0x107bd8c*/ void <PressTile>b__2(bool action);
        /*0x107bee4*/ void <PressTile>b__3(bool action);
        /*0x107c1d0*/ void <PressTile>b__4(bool action);
        /*0x107c4bc*/ void <PressTile>b__5(bool action);
        /*0x107c7a8*/ void <PressTile>b__6(bool action);
        /*0x107ca94*/ void <PressTile>b__7(bool action);
        /*0x107cd24*/ void <PressTile>b__8();
        /*0x107cdc8*/ void <PressTile>b__9(bool action);
        /*0x107cea0*/ void <PressTile>b__10(bool action);
        /*0x107ceac*/ void <PressTile>b__11();
        /*0x107d030*/ void <PressTile>b__28();
        /*0x107d088*/ void <PressTile>b__29(bool action);
        /*0x107d09c*/ void <PressTile>b__12(bool action);
        /*0x107d1b4*/ void <PressTile>b__13(bool action);
        /*0x107d284*/ void <PressTile>b__31();
        /*0x107d450*/ void <PressTile>b__14(int diceNumber, char dir);
        /*0x107d81c*/ void <PressTile>b__15(bool action);
        /*0x107dc78*/ void <PressTile>b__33();
        /*0x107dcc0*/ void <PressTile>b__34();
        /*0x107dcdc*/ void <PressTile>b__16(bool action);
        /*0x107dd44*/ void <PressTile>b__17(bool action);
        /*0x107ddf0*/ void <PressTile>b__18(bool action);
        /*0x107def0*/ void <PressTile>b__35();
        /*0x107e138*/ void <PressTile>b__19(bool action);
        /*0x107e14c*/ void <PressTile>b__36(PTShare.Define.SHero select);
        /*0x107e258*/ void <PressTile>b__20(bool action);
        /*0x107e310*/ void <PressTile>b__21(bool action);
        /*0x107e420*/ void <PressTile>b__38();
        /*0x107e434*/ void <PressTile>b__22(bool action);
    }

    class <>c__DisplayClass10_1
    {
        /*0x10*/ int reviveValue;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals1;

        /*0x107bd84*/ <>c__DisplayClass10_1();
        /*0x107e488*/ void <PressTile>b__26();
    }

    class <>c__DisplayClass10_2
    {
        /*0x10*/ int healValue;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals2;

        /*0x107bedc*/ <>c__DisplayClass10_2();
        /*0x107e6dc*/ void <PressTile>b__27();
    }

    class <>c__DisplayClass10_3
    {
        /*0x10*/ bool action;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals3;

        /*0x107d1ac*/ <>c__DisplayClass10_3();
        /*0x107e930*/ void <PressTile>b__30();
    }

    class <>c__DisplayClass10_4
    {
        /*0x10*/ int diceNumber;
        /*0x14*/ char dir;

        /*0x107d814*/ <>c__DisplayClass10_4();
        /*0x107ec34*/ void <PressTile>b__32(bool action);
    }

    class <>c__DisplayClass10_5
    {
        /*0x10*/ PTShare.Define.SHero select;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals4;

        /*0x107e250*/ <>c__DisplayClass10_5();
        /*0x107eccc*/ void <PressTile>b__37();
    }

    class <>c
    {
        static /*0x0*/ DungeonFunction.<> <>9;
        static /*0x8*/ System.Action <>9__10_24;

        static /*0x107b920*/ <>c();
        /*0x107b980*/ <>c();
        /*0x107b988*/ void <PressTile>b__10_24();
    }
}

class DungeonHeroListPopup : ConditionHeroListPopup
{
    /*0x12daa7c*/ DungeonHeroListPopup();
    /*0x12da838*/ void HandleScrollContent(int index, HeroSlotMaze obj);
}

class DungeonMainPopup : GuiBase
{
    static /*0x0*/ System.Action<int, char> OnPlayMoveDice;
    static /*0x8*/ System.Action<int, char> OnEndMoveDiceEffect;
    /*0x40*/ DungeonMap m_mapPrefab;
    /*0x48*/ DungeonCurrencyTopWindow m_currencyTopWindow;
    /*0x50*/ DungeonStateWindow m_stateWindow;
    /*0x58*/ AtlasImage m_heroButtonIcon;
    /*0x60*/ AtlasImage m_dungeonInfoButtonIcon;
    /*0x68*/ MazeDiceSpineEffect m_diceEffect;
    /*0x70*/ DungeonMinimap m_dungeonMinimap;
    /*0x78*/ UnityEngine.GameObject m_itemParent;
    /*0x80*/ TweenPosition m_itemTween;
    /*0x88*/ AtlasImage m_itemIcon;
    /*0x90*/ LocalizeString m_itemAmountText;
    /*0x98*/ LocalizeString m_titleText;
    /*0xa0*/ DungeonMissionButton m_missionButton;
    /*0xa8*/ AtlasImage m_fastImage;
    /*0xb0*/ UnityEngine.GameObject m_fastObject;
    /*0xb8*/ DungeonNaviArrow[] m_naviArrows;
    /*0xc0*/ DungeonBombUI m_dungeonBombUI;
    /*0xc8*/ DungeonMap m_dungeonMap;
    /*0xd0*/ int m_dungeonID;
    /*0xd4*/ bool m_fast;

    static /*0x12dd44c*/ DungeonMainPopup();
    /*0x12dd444*/ DungeonMainPopup();
    /*0x12daa84*/ void OnCreate();
    /*0x12daa88*/ void OnDelete();
    /*0x12daa8c*/ void OnEnter();
    /*0x12daa90*/ void OnExit();
    /*0x12db008*/ void OnFinish();
    /*0x12db00c*/ void OnLeave();
    /*0x12db010*/ void OnStart();
    /*0x12db014*/ void ClickMap(UnityEngine.Vector3 position);
    /*0x12db28c*/ void DragMap(UnityEngine.Vector3 dir);
    /*0x12db354*/ void InitPopup(int dungeonID);
    /*0x12dc228*/ void SetBombFadeOut();
    /*0x12dc2c0*/ System.Collections.Generic.List<UnityEngine.Vector2Int> FindPoint(DefineDungeon.TILETYPE tileType);
    /*0x12dba7c*/ void SetEnableRewardNotify(bool enable);
    /*0x12dbb2c*/ void SetTitle();
    /*0x12dbcbc*/ void SetStateWindow();
    /*0x12dbd4c*/ void UpdateCurrencyTopWindow();
    /*0x12dbfa4*/ void UpdateFastIcon();
    /*0x12db94c*/ void CheckDialog();
    /*0x12dc934*/ System.Collections.IEnumerator CoOpenDialog(System.Collections.Generic.List<DialogData> dialogList);
    /*0x12dc9a0*/ System.Collections.IEnumerator CoShowReward(PTShare.Define.SProperty gain);
    /*0x12dca18*/ void SetItemReward(PTShare.Define.SProperty gain);
    /*0x12db5a0*/ void BindEvent();
    /*0x12dad28*/ void RemoveEvent();
    /*0x12dced8*/ void HandleShowSmallReward(PTShare.Define.SProperty sProperty);
    /*0x12dcf0c*/ void HandlePlayDice(int diceNumber, char moveDir);
    /*0x12dd064*/ void HandleOnChangeProgressPercent(int dungeonID, float percent);
    /*0x12dc0c0*/ void HandleBombChange();
    /*0x12dd134*/ void HandleRefreshUI();
    /*0x12dd138*/ void OnClickHero();
    /*0x12dd270*/ void OnClickDungeonInfo();
    /*0x12dd388*/ void OnClickFullMap();
    /*0x12dd408*/ void OnClickFastToggle();
    /*0x12dd450*/ void <CheckDialog>b__39_0();
    /*0x12dd6e4*/ void <OnClickHero>b__50_0();
    /*0x12dd740*/ void <OnClickDungeonInfo>b__51_0();

    class <>c__DisplayClass33_0
    {
        /*0x10*/ UnityEngine.Vector2Int localPoint;

        /*0x109242c*/ <>c__DisplayClass33_0();
        /*0x1092434*/ int <FindPoint>b__0(UnityEngine.Vector2Int lhs, UnityEngine.Vector2Int rhs);
    }

    class <CoOpenDialog>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Collections.Generic.List<DialogData> dialogList;

        /*0x1092644*/ <CoOpenDialog>d__40(int <>1__state);
        /*0x1092670*/ void System.IDisposable.Dispose();
        /*0x1092674*/ bool MoveNext();
        /*0x1092754*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109275c*/ void System.Collections.IEnumerator.Reset();
        /*0x109279c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__41 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonMainPopup <>4__this;
        /*0x28*/ PTShare.Define.SProperty gain;

        /*0x10927a4*/ <CoShowReward>d__41(int <>1__state);
        /*0x10927d0*/ void System.IDisposable.Dispose();
        /*0x10927d4*/ bool MoveNext();
        /*0x10928e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10928f0*/ void System.Collections.IEnumerator.Reset();
        /*0x1092930*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ DungeonMainPopup <>4__this;
        /*0x18*/ int diceNumber;
        /*0x1c*/ char moveDir;

        /*0x1092578*/ <>c__DisplayClass46_0();
        /*0x1092580*/ void <HandlePlayDice>b__0();
    }
}

class DungeonManager : Singleton.Component.SingletonComponent<DungeonManager>
{
    static /*0x0*/ System.Action<int, float> OnChangeProgressPercent;
    static /*0x8*/ System.Action OnRefreshUI;
    static /*0x10*/ System.Action<PTShare.Define.SProperty> OnShowSmallReward;
    static /*0x18*/ System.Action<UnityEngine.Vector2Int> OnEscapeFreeze;
    static /*0x20*/ int BOMB_IDLE;
    static /*0x28*/ System.Action OnBombChange;
    /*0x28*/ System.Collections.Generic.List<ConditionHeroData> m_dungeonHeroList;
    /*0x30*/ System.Collections.Generic.Dictionary<int, float> m_dungeonProgressDic;
    /*0x38*/ System.Collections.Generic.Dictionary<int, float> m_dungeonBestProgressDic;
    /*0x40*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, int> m_jailHeroDic;
    /*0x48*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, int> m_randomTileDic;
    /*0x50*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, System.Collections.Generic.List<int>> m_coinRewardDic;
    /*0x58*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_useTileList;
    /*0x60*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_conditionRewardList;
    /*0x68*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, DefineDungeon.SEETYPE> m_seeTileDic;
    /*0x70*/ System.Collections.Generic.Dictionary<int, long> m_dungeonCoinGainValueDic;
    /*0x78*/ System.Collections.Generic.List<PTShare.Define.SDungeon> m_sDungeonDataList;
    /*0x80*/ UnityEngine.Vector2Int m_playerPoint;
    /*0x88*/ UnityEngine.Vector2Int m_prevPoint;
    /*0x90*/ bool m_isTileDone;
    /*0x94*/ int m_dungeonID;
    /*0x98*/ DefineDungeon.DungeonItem m_dungeonItem;
    /*0xa0*/ DefineDungeon.DungeonConditionRewardData m_dungeonConditionData;
    /*0xa8*/ DefineDungeon.DungeonForceMoveData m_dungeonForceMoveData;
    /*0xb0*/ DefineDungeon.DungeonRandomRewardLimitData m_dungeonRandomRewardLimitData;
    /*0xb8*/ DefineDungeon.DungeonDefeatData m_dungeonDefeatData;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SDungeon> m_unlockDungeonList;
    /*0xc8*/ PTShare.Define.SProperty m_rewardResponse;
    /*0xd0*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_playerBattleHeroList;
    /*0xd8*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_enemyBattleHeroList;
    /*0xe0*/ PTShare.Define.SDungeonBuff m_buffs;
    /*0xe8*/ PTShare.Define.SDungeonBuff m_lastBuffValue;
    /*0xf0*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> m_mateCandiDateList;
    /*0xf8*/ System.Collections.Generic.Dictionary<int, DefineEvent.TriggerData> m_triggerDic;
    /*0x100*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<DialogData>> m_dialogDic;
    /*0x108*/ bool <ShowWinnerAnim>k__BackingField;
    /*0x10c*/ int m_bombCount;
    /*0x110*/ int m_tmpCount;
    /*0x118*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, int> m_wallHeroDic;

    static /*0x12e7218*/ DungeonManager();
    static /*0x12dd79c*/ void add_OnChangeProgressPercent(System.Action<int, float> value);
    static /*0x12dd890*/ void remove_OnChangeProgressPercent(System.Action<int, float> value);
    static /*0x12dcce8*/ void add_OnShowSmallReward(System.Action<PTShare.Define.SProperty> value);
    static /*0x12dcde0*/ void remove_OnShowSmallReward(System.Action<PTShare.Define.SProperty> value);
    static /*0x12dd984*/ void add_OnEscapeFreeze(System.Action<UnityEngine.Vector2Int> value);
    static /*0x12dda7c*/ void remove_OnEscapeFreeze(System.Action<UnityEngine.Vector2Int> value);
    /*0x12e6d0c*/ DungeonManager();
    /*0x12ddb74*/ bool get_ShowWinnerAnim();
    /*0x12ddb7c*/ void set_ShowWinnerAnim(bool value);
    /*0x12ddb88*/ int GetAtkBuff();
    /*0x12ddba4*/ int GetDefBuff();
    /*0x12ddbc0*/ int GetLastBuffValueAtk();
    /*0x12ddbdc*/ int GetLastBuffValueDef();
    /*0x12ddbf8*/ int GetDungeonID();
    /*0x12ddc00*/ int GetJailCount();
    /*0x12ddc54*/ int GetMonsterAddHP();
    /*0x12dde1c*/ int GetMonsterAddDMG();
    /*0x12dc528*/ int GetHammerCount();
    /*0x12dc50c*/ int GetKeyCount();
    /*0x12dde48*/ DefineDungeon.DungeonConditionRewardData GetConditionRewardData();
    /*0x12dde50*/ DefineDungeon.DungeonRandomRewardLimitData GetDungeonRandomRewardLimitData();
    /*0x12dde58*/ ConditionHeroData GetJailHero(UnityEngine.Vector2Int point);
    /*0x12ddfbc*/ ConditionHeroData GetJailHeroByConvert(int heroId);
    /*0x12de094*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> GetMateCandidateList();
    /*0x12de09c*/ System.Collections.Generic.List<ConditionHeroData> GetDungeonHeroList();
    /*0x12de0a4*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> GetEnemyHeroList();
    /*0x12de0ac*/ int GetStageBattleID();
    /*0x12de2cc*/ PTShare.Define.SProperty GetReward();
    /*0x12de2d4*/ PTShare.Define.SProperty GetBattleReward();
    /*0x12de494*/ float GetMoveTime(float time);
    /*0x12de4c8*/ float GetAnimScale(float scale);
    /*0x12de500*/ PTShare.Define.SStatBonus GetStatBonus();
    /*0x12de634*/ System.Collections.Generic.List<UnityEngine.Vector2Int> GetConditionRewardList();
    /*0x12de63c*/ float GetDungeonProgressPercent(bool isBest);
    /*0x12de64c*/ float GetDungeonProgressPercent(int dungeonID, bool isBest);
    /*0x12de710*/ float GetBestDungeonProgressPercent(int dungeonID);
    /*0x12de7c8*/ float FindRewardPercent(int dungeonId);
    /*0x12de92c*/ int FindRandomTile(UnityEngine.Vector2Int point);
    /*0x12ddc80*/ TableData.TableData_Dungeongroup FindDungeonGroup(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12de488*/ DefineDungeon.TILETYPE GetTileType();
    /*0x12de9d0*/ DefineDungeon.TILETYPE GetTileType(int dungeonID);
    /*0x12de0fc*/ DefineDungeon.TILETYPE GetTileType(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12de9d8*/ System.Collections.Generic.List<Rewards> GetTileRewardList(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12deba8*/ System.Collections.Generic.List<Rewards> GetTileRewardList(int dungeonID, DefineDungeon.TILETYPE tileType);
    /*0x12ded8c*/ System.Collections.Generic.List<UnityEngine.Vector2Int> GetRewardPointList(int dungeonID, DefineDungeon.TILETYPE tileType);
    /*0x12def30*/ string GetOpenTrigger(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12df058*/ int GetReceivedCoinRewardCount(UnityEngine.Vector2Int point);
    /*0x12df108*/ bool IsAllReceivedCoinReward(UnityEngine.Vector2Int point);
    /*0x12df17c*/ bool IsReceivedCoinReward(UnityEngine.Vector2Int point, int index);
    /*0x12df248*/ bool IsReceivedConditionReward(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12df468*/ bool IsTileDone();
    /*0x12df470*/ bool IsFightUnit();
    /*0x12df5bc*/ bool IsDeadUnit();
    /*0x12da9b4*/ bool IsJailUnit(int heroID);
    /*0x12df708*/ bool IsJailUnit(UnityEngine.Vector2Int point);
    /*0x12df76c*/ bool IsUseUnit(ConditionHeroData conditionHero);
    /*0x12de8c8*/ bool IsUseTile(UnityEngine.Vector2Int point);
    /*0x12df7d8*/ bool IsSeeTile(UnityEngine.Vector2Int point);
    /*0x12df87c*/ bool IsBlurTile(UnityEngine.Vector2Int point);
    /*0x12df920*/ bool IsPlayingDungeon();
    /*0x12df930*/ bool IsStartPoint();
    /*0x12df9b4*/ bool IsDefeat();
    /*0x12df9d0*/ UnityEngine.Vector2Int GetPlayerPoint();
    /*0x12df9d8*/ UnityEngine.Vector2Int GetPrevPoint();
    /*0x12df9e0*/ UnityEngine.Vector2Int GetDefeatPoint();
    /*0x12df9fc*/ System.Collections.Generic.List<Rewards> GetBattleRewards();
    /*0x12dfc38*/ System.Collections.Generic.List<Rewards> GetBattleBossRewards();
    /*0x12dc500*/ TableData.TableData_Dungeon GetCurrDungeonData();
    /*0x12dfd88*/ long GetGainDungeonCoin(int dungeonId);
    /*0x12de404*/ long GetLeftGainDungeonCoin(int dungeonId);
    /*0x12dfe48*/ bool IsExistHero(int heroId);
    /*0x12dff8c*/ void SetForceMoveEnd(UnityEngine.Vector2Int point);
    /*0x12dfe90*/ PTShare.Define.SHero FindSHero(int heroId);
    /*0x12dff94*/ ConditionHeroData FindConditionHero(int heroId);
    /*0x12e0084*/ void AddUseTile(UnityEngine.Vector2Int point);
    /*0x12e0124*/ void AddSeeTile(UnityEngine.Vector2Int point);
    /*0x12e01f0*/ void AddBlurTile(UnityEngine.Vector2Int point);
    /*0x12e0294*/ bool IsShowDialog();
    /*0x12dc544*/ System.Collections.Generic.List<DialogData> CheckDialog(ref bool isEnterTrigger);
    /*0x12e03e4*/ void AwakeInstance();
    /*0x12e03e8*/ bool InitInstance();
    /*0x12e05cc*/ void ReleaseInstance();
    /*0x12e0630*/ void SetPlayerPosition(UnityEngine.Vector2Int point);
    /*0x12e0400*/ void Init();
    /*0x12e0658*/ void ClearData(bool clearCurrProgress);
    /*0x12e0cc4*/ void ClearDefeatData();
    /*0x12e0854*/ void UpdateProcessPercent(int dungeonID, float percent);
    /*0x12e0ce0*/ void UpdateBestProgressPercent(int dungeonID, float percent);
    /*0x12e0d98*/ void Send_Enter(System.Action callBack);
    /*0x12e0f30*/ void Send_DungeonExploreStart(int dungeonID, System.Action callBack);
    /*0x12e10e4*/ void Send_DungeonExploreContinue(System.Action callBack);
    /*0x12e12ac*/ void Send_DungeonExploreCancel(System.Action callBack);
    /*0x12e1438*/ void Send_DungeonProgress(System.Action<System.Collections.Generic.List<PTShare.Define.SDungeonCondition>> callBack);
    /*0x12e15c0*/ void Send_DungeonMove(string way, System.Action callBack);
    /*0x12e175c*/ void Send_HealTile(UnityEngine.Vector2Int point, int index, System.Action callBack);
    /*0x12e18e8*/ void Send_ReviveTile(UnityEngine.Vector2Int point, int index, System.Action callBack);
    /*0x12e1a74*/ void Send_BattleBegin(string heroIds, System.Action<int> callBack_WithRandomSeed);
    /*0x12e1c10*/ void Send_BattleFinish(bool isWin, string playData, long lcp, string HpMps, System.Action callBack);
    /*0x12e1dd4*/ void GetForceMoveWay(UnityEngine.Vector2Int point, int index, System.Action<int, char> callBack);
    /*0x12e1e6c*/ void Send_CoinReward(UnityEngine.Vector2Int point, System.Action callBack, System.Action rewardPopupExitCallBack);
    /*0x12e2068*/ void Send_MateTile(UnityEngine.Vector2Int point, System.Action callBack);
    /*0x12e2080*/ void Send_MateRequest(int tabledId, System.Action callBack);
    /*0x12e221c*/ void Send_FreezeUnlock(UnityEngine.Vector2Int point, System.Action callBack);
    /*0x12e23b0*/ void Send_WallRequest(UnityEngine.Vector2Int point, bool isUse, System.Action callBack);
    /*0x12e259c*/ void ShowSmallReward();
    /*0x12e3234*/ string GetDescDungeonRewardOpenCondition(string trigger);
    /*0x12e37f8*/ PTShare.Define.SHero ConvertSMateCandidateToSHero(PTShare.Define.SMateCandidate sMateCandidate);
    /*0x12e39f8*/ void AddMate(PTShare.Define.SMate newMate);
    /*0x12e3d24*/ void UpdateHeroList(System.Collections.Generic.List<PTShare.Define.SMate> mateList);
    /*0x12e3fbc*/ void UpdateHeroList();
    /*0x12e41e8*/ void UpdateHeroCondition(PTShare.Define.SCondition condition);
    /*0x12e4328*/ void UpdateHeroConditions(System.Collections.Generic.List<PTShare.Define.SCondition> conditions);
    /*0x12e4220*/ void SetHeroCondition(int heroId, int hp, int mp);
    /*0x12e09b0*/ void RemoveMateHeros();
    /*0x12e3c00*/ void SortHeroList();
    /*0x12e4498*/ void AddBuff(int atk, int def);
    /*0x12e44ec*/ void AddDebuff(int atk, int def);
    /*0x12e4540*/ void ResetBuff();
    /*0x12e3954*/ PTShare.Define.SEquip FindEquipItem(int tableId, int equipGrade, PTShare.Define.EquipParts equipParts);
    /*0x12e4584*/ void SetRandomTileData(System.Collections.Generic.Dictionary<string, int> data);
    /*0x12e4824*/ void SetSeeTileData(System.Collections.Generic.List<string> data);
    /*0x12e49c4*/ void SetUseTileData(System.Collections.Generic.List<string> data);
    /*0x12e4b60*/ void SetJailTileData(System.Collections.Generic.Dictionary<string, int> data);
    /*0x12e4fd0*/ void SetCoinRewardData(System.Collections.Generic.List<string> data);
    /*0x12e5268*/ void AddCoinRewardData(UnityEngine.Vector2Int point, int index);
    /*0x12e5514*/ void AddConditionRewardData(UnityEngine.Vector2Int point);
    /*0x12e5678*/ void InitTriggerDialog(int dungeonID);
    /*0x12dfa90*/ System.Collections.Generic.List<Rewards> CutRewardLimitCoin(System.Collections.Generic.List<Rewards> cutTarget);
    /*0x12dc0b0*/ bool UseBomb();
    /*0x12e5b9c*/ int GetBombCount();
    /*0x12e5ba4*/ int GetTmpBombCount();
    /*0x12e0bdc*/ void SetBombClear();
    /*0x12e5bac*/ void SetBombCount(int count);
    /*0x12e5c48*/ bool ClientMoveByBomb();
    /*0x12e5d0c*/ void DebugDungeon();
    /*0x12e5fd0*/ string[] DebugSplitString(string str);
    /*0x12e60c4*/ int DebugGetRandomTileCount(string[] str);
    /*0x12e6168*/ int DebugGetTileCount(int dungeonId, System.Collections.Generic.List<int> tileIndexList);
    /*0x12e6274*/ void DebugCheckBattleTileNotSelectGroup(int dungeonId, System.Collections.Generic.List<int> tileIndexList);
    /*0x12e0c70*/ void ClearPropertyWallData();
    /*0x12e64ac*/ void SetWallTileData(System.Collections.Generic.Dictionary<string, int> data);
    /*0x12daa18*/ bool IsPropertyWallHero(int heroId);
    /*0x12e691c*/ bool IsPropertyWallHero(UnityEngine.Vector2Int point);
    /*0x12e6938*/ ConditionHeroData FindPropertyWallHero(UnityEngine.Vector2Int point);
    /*0x12e69e8*/ void PushWallHero(UnityEngine.Vector2Int point, int heroId);
    /*0x12e6ab8*/ void Send_Assign(UnityEngine.Vector2Int point, PTShare.Define.SHero hero, System.Action callBack);
    /*0x12e7294*/ bool <AddCoinRewardData>b__158_0(PTShare.Define.SDungeon data);
    /*0x12e72b8*/ bool <AddConditionRewardData>b__159_0(PTShare.Define.SDungeon data);

    class <>c__DisplayClass55_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ UnityEngine.Vector2Int point;

        /*0x1094d5c*/ <>c__DisplayClass55_0();
        /*0x1094d64*/ bool <GetJailHero>b__0(ConditionHeroData data);
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;
        /*0x18*/ TableData.TableData_Dungeonmap mapData;

        /*0x1094dec*/ <>c__DisplayClass72_0();
        /*0x1094df4*/ bool <FindDungeonGroup>b__0(TableData.TableData_Dungeonmap data);
        /*0x1094e30*/ bool <FindDungeonGroup>b__1(TableData.TableData_Dungeongroup data);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1094e60*/ <>c__DisplayClass75_0();
        /*0x1094e68*/ bool <GetTileType>b__0(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass79_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1094ea4*/ <>c__DisplayClass79_0();
        /*0x1094eac*/ bool <GetOpenTrigger>b__0(TableData.TableData_Dungeonreward data);
    }

    class <>c__DisplayClass83_0
    {
        /*0x10*/ int dungeonID;

        /*0x1094ee8*/ <>c__DisplayClass83_0();
        /*0x1094ef0*/ bool <IsReceivedConditionReward>b__0(PTShare.Define.SDungeon data);
    }

    class <>c
    {
        static /*0x0*/ DungeonManager.<> <>9;
        static /*0x8*/ System.Predicate<ConditionHeroData> <>9__85_0;
        static /*0x10*/ System.Predicate<ConditionHeroData> <>9__86_0;
        static /*0x18*/ System.Comparison<ConditionHeroData> <>9__148_0;

        static /*0x1092938*/ <>c();
        /*0x1092998*/ <>c();
        /*0x10929a0*/ bool <IsFightUnit>b__85_0(ConditionHeroData data);
        /*0x10929c0*/ bool <IsDeadUnit>b__86_0(ConditionHeroData data);
        /*0x10929e0*/ int <SortHeroList>b__148_0(ConditionHeroData a, ConditionHeroData b);
    }

    class <>c__DisplayClass106_0
    {
        /*0x10*/ int heroId;

        /*0x1092a7c*/ <>c__DisplayClass106_0();
        /*0x1092a84*/ bool <FindSHero>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass107_0
    {
        /*0x10*/ int heroId;

        /*0x1092ab4*/ <>c__DisplayClass107_0();
        /*0x1092abc*/ bool <FindConditionHero>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass122_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1092aec*/ <>c__DisplayClass122_0();
        /*0x1092af4*/ void <Send_Enter>b__0(ServerProtocol.ResDungeonEnter response);
    }

    class <>c__DisplayClass123_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ int dungeonID;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Action<TableData.TableData_Dungeonmap> <>9__1;
        /*0x30*/ System.Predicate<PTShare.Define.SDungeon> <>9__2;

        /*0x1092d0c*/ <>c__DisplayClass123_0();
        /*0x1092d14*/ void <Send_DungeonExploreStart>b__0(ServerProtocol.ResDungeonExploreStart response);
        /*0x1092ff8*/ void <Send_DungeonExploreStart>b__1(TableData.TableData_Dungeonmap data);
        /*0x109311c*/ bool <Send_DungeonExploreStart>b__2(PTShare.Define.SDungeon data);
    }

    class <>c__DisplayClass124_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ float progress;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Action<TableData.TableData_Dungeonmap> <>9__1;

        /*0x109314c*/ <>c__DisplayClass124_0();
        /*0x1093154*/ void <Send_DungeonExploreContinue>b__0(ServerProtocol.ResDungeonExploreContinue response);
        /*0x10934f0*/ void <Send_DungeonExploreContinue>b__1(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass125_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1093614*/ <>c__DisplayClass125_0();
        /*0x109361c*/ void <Send_DungeonExploreCancel>b__0(ServerProtocol.ResDungeonExploreCancel response);
    }

    class <>c__DisplayClass126_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SDungeonCondition>> callBack;

        /*0x1093668*/ <>c__DisplayClass126_0();
        /*0x1093670*/ void <Send_DungeonProgress>b__0(ServerProtocol.ResDungeonProgress response);
    }

    class <>c__DisplayClass127_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10936e8*/ <>c__DisplayClass127_0();
        /*0x10936f0*/ void <Send_DungeonMove>b__0(ServerProtocol.ResDungeonMove response);
    }

    class <>c__DisplayClass128_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1093de0*/ <>c__DisplayClass128_0();
        /*0x1093de8*/ void <Send_HealTile>b__0(ServerProtocol.ResDungeonHeal response);
    }

    class <>c__DisplayClass129_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1093e38*/ <>c__DisplayClass129_0();
        /*0x1093e40*/ void <Send_ReviveTile>b__0(ServerProtocol.ResDungeonRevival response);
    }

    class <>c__DisplayClass130_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action<int> callBack_WithRandomSeed;

        /*0x1093e90*/ <>c__DisplayClass130_0();
        /*0x1093e98*/ void <Send_BattleBegin>b__0(ServerProtocol.ResDungeonBegin instance);
    }

    class <>c__DisplayClass131_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ string HpMps;
        /*0x20*/ System.Action callBack;

        /*0x1094068*/ <>c__DisplayClass131_0();
        /*0x1094070*/ void <Send_BattleFinish>b__0(ServerProtocol.ResDungeonFinish instance);
    }

    class <>c__DisplayClass133_0
    {
        /*0x10*/ System.Action rewardPopupExitCallBack;
        /*0x18*/ DungeonManager <>4__this;
        /*0x20*/ UnityEngine.Vector2Int point;
        /*0x28*/ System.Action callBack;

        /*0x10945b0*/ <>c__DisplayClass133_0();
        /*0x10945b8*/ void <Send_CoinReward>b__0(ServerProtocol.ResDungeonCoinReward response);
        /*0x1094730*/ void <Send_CoinReward>b__1(int faield, string value);
    }

    class <>c__DisplayClass135_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1094744*/ <>c__DisplayClass135_0();
        /*0x109474c*/ void <Send_MateRequest>b__0(ServerProtocol.ResDungeonMate response);
    }

    class <>c__DisplayClass136_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ UnityEngine.Vector2Int point;
        /*0x20*/ System.Action callBack;

        /*0x10947ac*/ <>c__DisplayClass136_0();
        /*0x10947b4*/ void <Send_FreezeUnlock>b__0(ServerProtocol.ResDungeonJail response);
    }

    class <>c__DisplayClass137_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1094928*/ <>c__DisplayClass137_0();
        /*0x1094930*/ void <Send_WallRequest>b__0(ServerProtocol.ResDungeonWall response);
    }

    class <>c__DisplayClass146_0
    {
        /*0x10*/ int heroId;

        /*0x1094974*/ <>c__DisplayClass146_0();
        /*0x109497c*/ bool <SetHeroCondition>b__0(ConditionHeroData _hero);
    }

    class <>c__DisplayClass156_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<string, int> jailHeroData;

        /*0x10949ac*/ <>c__DisplayClass156_0();
        /*0x10949b4*/ bool <SetJailTileData>b__0(ConditionHeroData heroData);
        /*0x1094a1c*/ bool <SetJailTileData>b__1(PTShare.Define.SHero heroData);
    }

    class <>c__DisplayClass175_0
    {
        /*0x10*/ System.Collections.Generic.List<int> tileIndexList;
        /*0x18*/ int count;

        /*0x1094a7c*/ <>c__DisplayClass175_0();
        /*0x1094a84*/ void <DebugGetTileCount>b__0(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass176_0
    {
        /*0x10*/ System.Collections.Generic.List<int> dungeonGroupIndexList;
        /*0x18*/ System.Collections.Generic.List<int> tileIndexList;
        /*0x20*/ System.Collections.Generic.List<UnityEngine.Vector2Int> groupFailed;

        /*0x1094b00*/ <>c__DisplayClass176_0();
        /*0x1094b08*/ void <DebugCheckBattleTileNotSelectGroup>b__0(TableData.TableData_Dungeongroup data);
        /*0x1094b70*/ void <DebugCheckBattleTileNotSelectGroup>b__1(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass179_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<string, int> wallHeroData;

        /*0x1094c2c*/ <>c__DisplayClass179_0();
        /*0x1094c34*/ bool <SetWallTileData>b__0(ConditionHeroData heroData);
        /*0x1094c9c*/ bool <SetWallTileData>b__1(PTShare.Define.SHero heroData);
    }

    class <>c__DisplayClass184_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ UnityEngine.Vector2Int point;
        /*0x20*/ PTShare.Define.SHero hero;
        /*0x28*/ System.Action callBack;

        /*0x1094cfc*/ <>c__DisplayClass184_0();
        /*0x1094d04*/ void <Send_Assign>b__0(ServerProtocol.ResDungeonAssign response);
    }
}

class DungeonMap : MapBase<TableData.TableData_Dungeonmap, DungeonTileBase>
{
    static /*0x0*/ System.Action<DungeonTileBase> OnClickTile;
    static /*0x8*/ System.Action<bool> OnBattleEnd;
    /*0xf8*/ DungeonFieldCharacter m_dungeonFieldCharacter;
    /*0x100*/ DungeonFieldCharacter m_freezeFieldCharacter;
    /*0x108*/ DungeonDialogEnter m_dungeonDialogEnter;
    /*0x110*/ DungeonRouteEffect m_dungeonRouteEffect;
    /*0x118*/ DungeonSetting m_dungeonSetting;
    /*0x120*/ UnityEngine.SpriteRenderer m_dungeonBackground;
    /*0x128*/ DungeonParticle m_dungeonParticle;
    /*0x130*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> m_closeList;
    /*0x138*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> m_openList;
    /*0x140*/ UnityEngine.Coroutine m_followCoroutine;
    /*0x148*/ UnityEngine.Camera m_dungeonSceneCamera;
    /*0x150*/ DungeonMinimap m_miniMap;
    /*0x158*/ int m_dungeonID;
    /*0x15c*/ bool m_waitDrag;
    /*0x15d*/ bool m_lockTileClick;

    static /*0x12ea284*/ DungeonMap();
    /*0x12ea1ac*/ DungeonMap();
    /*0x12e72dc*/ void ExitMap();
    /*0x12e758c*/ DefineDungeon.TILETYPE GetTileType(UnityEngine.Vector2Int point);
    /*0x12e75fc*/ ARROW GetPlayerMoveDir();
    /*0x12e767c*/ DungeonSetting GetDungeonSetting();
    /*0x12e7684*/ float GetDungeonMoveTime();
    /*0x12e7704*/ float GetDungeonAnimScale();
    /*0x12dc4e4*/ UnityEngine.Vector2Int GetCharacterStandPoint();
    /*0x12e7788*/ UnityEngine.Vector3 GetCharacterStandWorldPoint();
    /*0x12e77b4*/ DungeonFieldCharacter GetFreezeCharacter();
    /*0x12e77bc*/ DungeonFullMap GetDungeonFullMap();
    /*0x12e78b4*/ void SetLockClick(bool lockClick);
    /*0x12e78c0*/ void SetView(bool isExplore);
    /*0x12e7970*/ void InitMap(int id);
    /*0x12db888*/ void InitMap(int id, DungeonMinimap minimap);
    /*0x12e7a7c*/ void InitTileType();
    /*0x12e7b38*/ void SetBackground(int dungeonID);
    /*0x12e7d28*/ void DragMap(UnityEngine.Vector3 dir);
    /*0x12e7e7c*/ void MoveBackGround(UnityEngine.Vector3 dir);
    /*0x12e7fb4*/ void FixedCamera();
    /*0x12e8288*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> FindRoute(UnityEngine.Vector2Int start, UnityEngine.Vector2Int end, bool isLeftFast, int maxDist);
    /*0x12e89dc*/ DefineDungeon.DungeonRouteNode FindLowCostNode();
    /*0x12e86cc*/ void AddOpenList(DefineDungeon.DungeonRouteNode parent, UnityEngine.Vector2Int point, UnityEngine.Vector2Int end, float cost);
    /*0x12e8e40*/ void StartSpreadTile(UnityEngine.Vector2Int target, int activePower, int power, string spreadType);
    /*0x12e8f60*/ void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    /*0x12e9114*/ int GetGroup(TableData.TableData_Dungeonmap data);
    /*0x12e9128*/ string GetParameters(TableData.TableData_Dungeonmap data);
    /*0x12e917c*/ UnityEngine.Vector2Int GetPoint(TableData.TableData_Dungeonmap data);
    /*0x12e91ac*/ int GetTileID(TableData.TableData_Dungeonmap data);
    /*0x12e91c0*/ void InitTile(int index, TableData.TableData_Dungeonmap data, DungeonTileBase tileBasePrefab);
    /*0x12e91e8*/ void BindEvent();
    /*0x12e9388*/ void RemoveEvent();
    /*0x12db0d0*/ void HandleTouchEvent(UnityEngine.Vector3 position);
    /*0x12e9528*/ void HandleClickTile(DungeonTileBase click);
    /*0x12e95c0*/ void HandleShowClearPopup();
    /*0x12dc878*/ void ShowDialogEnter(System.Action exitCallBack);
    /*0x12e96c4*/ void ShowParticle(DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point, bool isUse);
    /*0x12e9a7c*/ void ShowBomb(DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12e9c98*/ void StandCharacter(UnityEngine.Vector2Int point);
    /*0x12e9f1c*/ void StartFollowPoint(UnityEngine.Vector2Int point);
    /*0x12e7398*/ void StopFollowCharacter();
    /*0x12ea008*/ System.Collections.IEnumerator CoFollowPoint(UnityEngine.Vector2Int point);
    /*0x12e9668*/ System.Collections.IEnumerator CoClearPopup();
    /*0x12ea0dc*/ float GetZoomMin();
    /*0x12ea0f8*/ float GetZoomMax();
    /*0x12ea114*/ void UpdateZoom();
    /*0x12ea288*/ void <InitTileType>b__31_0(DungeonTileBase data);

    class <>c__DisplayClass37_0
    {
        /*0x10*/ float minCost;
        /*0x18*/ DefineDungeon.DungeonRouteNode nowNode;

        /*0x1094f14*/ <>c__DisplayClass37_0();
        /*0x1094f1c*/ void <FindLowCostNode>b__0(DefineDungeon.DungeonRouteNode data);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1094f48*/ <>c__DisplayClass38_0();
        /*0x1094f50*/ bool <AddOpenList>b__0(DefineDungeon.DungeonRouteNode data);
        /*0x1094f80*/ bool <AddOpenList>b__1(DefineDungeon.DungeonRouteNode data);
    }

    class <CoFollowPoint>d__57 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonMap <>4__this;
        /*0x28*/ UnityEngine.Vector2Int point;
        /*0x30*/ float <speed>5__2;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x40*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x4c*/ float <t>5__5;
        /*0x50*/ UnityEngine.Vector3 <bgMoveDir>5__6;

        /*0x10951ac*/ <CoFollowPoint>d__57(int <>1__state);
        /*0x10951d8*/ void System.IDisposable.Dispose();
        /*0x10951dc*/ bool MoveNext();
        /*0x10953e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10953ec*/ void System.Collections.IEnumerator.Reset();
        /*0x109542c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoClearPopup>d__58 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x1094fb0*/ <CoClearPopup>d__58(int <>1__state);
        /*0x1094fdc*/ void System.IDisposable.Dispose();
        /*0x1094fe0*/ bool MoveNext();
        /*0x109515c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1095164*/ void System.Collections.IEnumerator.Reset();
        /*0x10951a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonMatePopup : GuiBase
{
    /*0x40*/ HeroSlotInventory[] m_mateSlots;
    /*0x48*/ LocalizeString[] m_cpTexts;
    /*0x50*/ int m_selectedHeroTableId;
    /*0x58*/ DungeonTileBase m_caller;

    /*0x12eb378*/ DungeonMatePopup();
    /*0x12ea96c*/ void OnCreate();
    /*0x12ea970*/ void OnDelete();
    /*0x12ea974*/ void OnEnter();
    /*0x12ea9e0*/ void OnFinish();
    /*0x12ea9e4*/ void OnLeave();
    /*0x12ea9e8*/ void OnStart();
    /*0x12ea9ec*/ void OnExit();
    /*0x12eaa68*/ void InitPopup(DungeonTileBase tile);
    /*0x12eadd0*/ bool HandleClickMate(PTShare.Define.SHero sHero, bool bSelected, bool bShaded, long lPlayerID);
    /*0x12eaeb0*/ void OnClickSelect();

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x1095434*/ <>c__DisplayClass11_0();
        /*0x109543c*/ void <InitPopup>b__0();
    }
}

class DungeonMinimap : MiniMapBase<TableData.TableData_Dungeonmap, DungeonMinimapTile>
{
    /*0x98*/ DungeonSetting m_dungeonSetting;
    /*0xa0*/ LocalizeString m_percentText;
    /*0xa8*/ UnityEngine.GameObject m_characterPointer;
    /*0xb0*/ UnityEngine.Coroutine m_followCoroutine;
    /*0xb8*/ UnityEngine.Vector2Int m_cameraPoint;

    /*0x12ebf70*/ DungeonMinimap();
    /*0x12eb388*/ void ExitMap();
    /*0x12eb420*/ DungeonSetting GetDungeonSetting();
    /*0x12eb428*/ float GetDungeonMoveTime();
    /*0x12eb4a8*/ UnityEngine.Vector2Int GetCameraPoint();
    /*0x12eb4b0*/ void SetCameraPosition(UnityEngine.Vector2Int point);
    /*0x12eb514*/ void InitMap(int id);
    /*0x12eb780*/ void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    /*0x12eb9a0*/ void UpdateZoom();
    /*0x12eba90*/ int GetGroup(TableData.TableData_Dungeonmap data);
    /*0x12ebaa4*/ string GetParameters(TableData.TableData_Dungeonmap data);
    /*0x12ebaf8*/ UnityEngine.Vector2Int GetPoint(TableData.TableData_Dungeonmap data);
    /*0x12ebb28*/ int GetTileID(TableData.TableData_Dungeonmap data);
    /*0x12ebb3c*/ void InitTile(int index, TableData.TableData_Dungeonmap data, DungeonMinimapTile tileBasePrefab);
    /*0x12ebc64*/ void BindEvent();
    /*0x12ebd3c*/ void RemoveEvent();
    /*0x12ea080*/ void StartFollowPoint(UnityEngine.Vector2Int point);
    /*0x12eb3f0*/ void StopFollowCharacter();
    /*0x12eb618*/ void SetPercent(float percent);
    /*0x12ebe14*/ System.Collections.IEnumerator CoFollowPoint(UnityEngine.Vector2Int point);
    /*0x12ebe8c*/ float GetZoomMin();
    /*0x12ebea8*/ float GetZoomMax();
    /*0x12ebec4*/ void HandleOnChangeProgressPercent(int dungeonID, float percent);
    /*0x12ebec8*/ void OnClickZoom(bool isPlus);

    class <CoFollowPoint>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonMinimap <>4__this;
        /*0x28*/ UnityEngine.Vector2Int point;
        /*0x30*/ float <speed>5__2;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x40*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x4c*/ float <t>5__5;

        /*0x1095508*/ <CoFollowPoint>d__23(int <>1__state);
        /*0x1095534*/ void System.IDisposable.Dispose();
        /*0x1095538*/ bool MoveNext();
        /*0x1095708*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1095710*/ void System.Collections.IEnumerator.Reset();
        /*0x1095750*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonMinimapTile : TileBase
{
    /*0x78*/ AtlasImage m_tileImage;
    /*0x80*/ DungeonMinimap m_dungeonMap;
    /*0x88*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x8c*/ DefineDungeon.TILETYPE m_tileType;
    /*0x90*/ DefineDungeon.TILEVIEWTYPE m_tileViewType;
    /*0x94*/ int m_tileID;
    /*0x98*/ UnityEngine.Vector2Int m_tilePoint;

    /*0x12ec554*/ DungeonMinimapTile();
    /*0x12ebff4*/ DefineDungeon.TILETYPE GetTileType();
    /*0x12ebffc*/ DefineDungeon.TILEVIEWTYPE GetViewType();
    /*0x12ec004*/ UnityEngine.Vector2Int GetTilePoint();
    /*0x12ec00c*/ TableData.TableData_Dungeontile GetTableData();
    /*0x12ec018*/ bool IsBlockTile();
    /*0x12ec028*/ bool IsTileKeep();
    /*0x12ebb60*/ void InitTile(int index, DungeonMinimap map, TableData.TableData_Dungeonmap data);
    /*0x12ec08c*/ void SetData();
    /*0x12ec208*/ void ChangeNormalTile();
    /*0x12ec054*/ void Clear();
    /*0x12eb948*/ void SetHide(bool isDeep);
    /*0x12eb914*/ void SetLight();
    /*0x12ec2d0*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
    /*0x12ec464*/ void PlayShadeChage(float time, AtlasImage image, UnityEngine.Color startColor, UnityEngine.Color endColor);
    /*0x12ec4a0*/ System.Collections.IEnumerator CoShadeChange(float time, AtlasImage image, UnityEngine.Color startColor, UnityEngine.Color endColor);

    class <CoShadeChange>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ AtlasImage image;
        /*0x30*/ UnityEngine.Color startColor;
        /*0x40*/ UnityEngine.Color endColor;
        /*0x50*/ float <t>5__2;
        /*0x54*/ float <speed>5__3;

        /*0x1095758*/ <CoShadeChange>d__21(int <>1__state);
        /*0x1095784*/ void System.IDisposable.Dispose();
        /*0x1095788*/ bool MoveNext();
        /*0x1095884*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109588c*/ void System.Collections.IEnumerator.Reset();
        /*0x10958cc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonMissionButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ DungeonMap m_dungeonMap;

    /*0x12ed5f0*/ DungeonMissionButton();
    /*0x12ec58c*/ void InitButton(DungeonMap dungeonMap);
    /*0x12dd468*/ void ShowOpenDesc();
    /*0x12ec594*/ void OnClick();
    /*0x12ecf8c*/ string GetDesc(string trigger, bool isFirstLine);
    /*0x12ed2a0*/ string GetDesc(string trigger, bool isFirstLine, int score, int goalScore);

    class <>c__DisplayClass2_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> datas;
        /*0x18*/ DungeonMissionButton <>4__this;
        /*0x20*/ int i;

        /*0x1095958*/ <>c__DisplayClass2_0();
    }

    class <>c__DisplayClass2_1
    {
        /*0x10*/ string desc;
        /*0x18*/ DungeonMissionButton.<> CS$<>8__locals1;

        /*0x1095960*/ <>c__DisplayClass2_1();
        /*0x1095968*/ void <ShowOpenDesc>b__0(System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response);
    }

    class <>c__DisplayClass2_2
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response;
        /*0x18*/ int j;
        /*0x20*/ System.Predicate<TableData.TableData_Dungeonreward> <>9__3;

        /*0x1096138*/ <>c__DisplayClass2_2();
        /*0x1096140*/ bool <ShowOpenDesc>b__3(TableData.TableData_Dungeonreward data);
    }

    class <>c
    {
        static /*0x0*/ DungeonMissionButton.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__2_1;
        static /*0x10*/ System.Action<bool> <>9__2_2;
        static /*0x18*/ System.Action<bool> <>9__3_2;
        static /*0x20*/ System.Action<bool> <>9__3_3;
        static /*0x28*/ System.Action<bool> <>9__3_5;
        static /*0x30*/ System.Action<bool> <>9__3_6;
        static /*0x38*/ System.Action<bool> <>9__3_0;

        static /*0x10958d4*/ <>c();
        /*0x1095934*/ <>c();
        /*0x109593c*/ void <ShowOpenDesc>b__2_1(bool action);
        /*0x1095940*/ void <ShowOpenDesc>b__2_2(bool action);
        /*0x1095944*/ void <OnClick>b__3_2(bool action);
        /*0x1095948*/ void <OnClick>b__3_3(bool action);
        /*0x109594c*/ void <OnClick>b__3_5(bool action);
        /*0x1095950*/ void <OnClick>b__3_6(bool action);
        /*0x1095954*/ void <OnClick>b__3_0(bool confirm);
    }

    class <>c__DisplayClass3_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> datas;
        /*0x18*/ DungeonMissionButton <>4__this;
        /*0x20*/ int i;

        /*0x1096220*/ <>c__DisplayClass3_0();
    }

    class <>c__DisplayClass3_1
    {
        /*0x10*/ string desc;
        /*0x18*/ DungeonMissionButton.<> CS$<>8__locals1;

        /*0x1096228*/ <>c__DisplayClass3_1();
        /*0x1096230*/ void <OnClick>b__1(System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response);
    }

    class <>c__DisplayClass3_2
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response;
        /*0x18*/ int j;
        /*0x20*/ System.Predicate<TableData.TableData_Dungeonreward> <>9__4;

        /*0x1096a00*/ <>c__DisplayClass3_2();
        /*0x1096a08*/ bool <OnClick>b__4(TableData.TableData_Dungeonreward data);
    }
}

class DungeonNaviArrow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_arrow;
    /*0x20*/ UnityEngine.RectTransform m_limit;
    /*0x28*/ UnityEngine.Vector2Int m_targetPoint;
    /*0x30*/ DungeonMap m_dungeonMap;
    /*0x38*/ UnityEngine.Coroutine m_updateCoroutine;
    /*0x40*/ UnityEngine.Vector3 m_dir;
    /*0x4c*/ UnityEngine.Vector3 m_targetPosition;
    /*0x58*/ DungeonNaviArrow.TARGET_TYPE m_targetType;
    /*0x5c*/ UnityEngine.Vector2Int UNKOWN_POINT;
    /*0x64*/ float m_range;

    /*0x12eddf4*/ DungeonNaviArrow();
    /*0x12dc0a8*/ void InitArrow(DungeonMap dungeon);
    /*0x12dd0d4*/ void SetTarget(UnityEngine.Vector2Int targetPoint, DungeonNaviArrow.TARGET_TYPE targetType);
    /*0x12dd078*/ void CloseTarget();
    /*0x12ed5f8*/ void StopCoroutine();
    /*0x12ed62c*/ System.Collections.IEnumerator CoUpdate();
    /*0x12ed69c*/ void ComputeLimit();
    /*0x12ed8c4*/ void ComputeArrow();
    /*0x12edd5c*/ void ComputeArrowRotate();
    /*0x12edcbc*/ void HideArrow();
    /*0x12ed698*/ void ClearEvent();

    enum TARGET_TYPE
    {
        BOMB = 0,
    }

    class <CoUpdate>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonNaviArrow <>4__this;

        /*0x1096ae8*/ <CoUpdate>d__15(int <>1__state);
        /*0x1096b14*/ void System.IDisposable.Dispose();
        /*0x1096b18*/ bool MoveNext();
        /*0x1096b8c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096b94*/ void System.Collections.IEnumerator.Reset();
        /*0x1096bd4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonObject : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonAnimation m_objectSkel;
    /*0x20*/ DungeonMap m_dungeonMap;
    /*0x28*/ DungeonTileBase m_linkTile;
    /*0x30*/ System.Action m_outCallBack;
    /*0x38*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x3c*/ DefineDungeon.SHOWTYPE m_prevShowType;
    /*0x40*/ DefineDungeon.TILEVIEWTYPE m_viewType;

    /*0x12eed50*/ DungeonObject();
    /*0x12ede54*/ void InitObject(DungeonMap map, DungeonTileBase baseTile, DefineDungeon.SHOWTYPE showType, DefineDungeon.TILEVIEWTYPE viewType);
    /*0x12ee5ac*/ void ChangePropertyWall();
    /*0x12ee5b0*/ void ShowUseView();
    /*0x12ee040*/ void UpdateDungeonObjects(bool isFastShade);
    /*0x12ee2b8*/ void SetObjectSkin();
    /*0x12ee63c*/ void PlayObjectSkelAnim();
    /*0x12ee784*/ void OutAnim(System.Action callBack);
    /*0x12ee8d4*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0x12ee9a8*/ void OpenBox(System.Action callBack);
    /*0x12eeb28*/ void HandleAnimCompleteOpenBox(Spine.TrackEntry trackEntry);
    /*0x12eec4c*/ void HandleAnimCompleteOut(Spine.TrackEntry trackEntry);
    /*0x12eed40*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
}

class DungeonParticle : UnityEngine.MonoBehaviour
{
    /*0x18*/ ParticleBase m_trapParticle;
    /*0x20*/ ParticleBase m_freezeParticle;
    /*0x28*/ ParticleBase m_hammerParticle;
    /*0x30*/ System.Collections.Generic.Dictionary<DefineDungeon.TILETYPE, ParticleBase> m_poolDictionary;

    /*0x12ef4bc*/ DungeonParticle();
    /*0x12eed58*/ void AllReturn();
    /*0x12e9798*/ void ShowParticle(DungeonMap dungeon, DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12e9880*/ void AfterShowParticle(DungeonMap dungeon, DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12e9b28*/ void ShowBomb(DungeonMap dungeon, DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12eef00*/ void GetParticle(DefineDungeon.TILETYPE tileType);
    /*0x12ef3ac*/ void ReturnParticle(DefineDungeon.TILETYPE tileType);
}

class DungeonPropertyWallPopup : GuiBase
{
    /*0x40*/ AtlasImage m_propertyIcon;
    /*0x48*/ LocalizeString m_infoText;
    /*0x50*/ HeroSlotSelect m_selectSlot;
    /*0x58*/ HeroSelectWindow m_selectWindow;
    /*0x60*/ UnityEngine.UI.Button m_confirmButton;
    /*0x68*/ PropertyType m_propertyType;
    /*0x70*/ System.Action<PTShare.Define.SHero> m_confirm;
    /*0x78*/ UnityEngine.Vector2Int m_tilePoint;

    /*0x12efbb0*/ DungeonPropertyWallPopup();
    /*0x12ef534*/ void OnCreate();
    /*0x12ef538*/ void OnDelete();
    /*0x12ef53c*/ void OnEnter();
    /*0x12ef540*/ void OnFinish();
    /*0x12ef544*/ void OnLeave();
    /*0x12ef548*/ void OnStart();
    /*0x12ef54c*/ void OnExit();
    /*0x12ef554*/ void OnExit_CallBack();
    /*0x12ef630*/ void InitPopup(UnityEngine.Vector2Int tilePoint, PropertyType propertyType, System.Action<PTShare.Define.SHero> onConfirm);
    /*0x12ef5cc*/ PTShare.Define.SHero GetCurrSHero();
    /*0x12ef8f4*/ void SetPropertyIcon(PropertyType propertyType);
    /*0x12ef9c0*/ void UpdateButton();
    /*0x12ef728*/ void HandleOnClickSlot(int dummy);
    /*0x12efa64*/ void HandleOnChangeHero(PTShare.Define.SHero sHero);
    /*0x12efb20*/ void OnClickCancel();
    /*0x12efb2c*/ void OnClickConfirm();
    /*0x12efbe0*/ bool <HandleOnClickSlot>b__20_0(ConditionHeroData data);
}

class DungeonRouteEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ string m_routeObjectName;
    /*0x20*/ string m_routeDestObjectName;
    /*0x28*/ System.Collections.Generic.List<DungeonRouteObject> m_routeObjectList;
    /*0x30*/ DungeonMap m_dungeonMap;

    /*0x12f0110*/ DungeonRouteEffect();
    /*0x12e73e0*/ void ReturnPool();
    /*0x12eff1c*/ void InitEffect(DungeonMap dungeonMap);
    /*0x12e9e78*/ void HideEffect(UnityEngine.Vector2Int point);
    /*0x12e8ad8*/ void ShowRoute(System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> routeNodeList);
    /*0x12eff80*/ void GetPool(int count);
}

class DungeonRouteObject : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.SpriteRenderer m_spriteRenderer;
    /*0x20*/ UnityEngine.Vector2Int m_point;

    /*0x12f023c*/ DungeonRouteObject();
    /*0x12f00b4*/ void InitObject(int sortOrder, UnityEngine.Vector2Int point);
    /*0x12eff24*/ bool HideObject(UnityEngine.Vector2Int point);
    /*0x12f01c0*/ System.Collections.IEnumerator CoHide(float time);

    class <CoHide>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ DungeonRouteObject <>4__this;
        /*0x30*/ float <t>5__2;
        /*0x34*/ float <speed>5__3;
        /*0x38*/ UnityEngine.Color <color>5__4;

        /*0x1096bdc*/ <CoHide>d__4(int <>1__state);
        /*0x1096c08*/ void System.IDisposable.Dispose();
        /*0x1096c0c*/ bool MoveNext();
        /*0x1096d10*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096d18*/ void System.Collections.IEnumerator.Reset();
        /*0x1096d58*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonSetting : UnityEngine.ScriptableObject
{
    /*0x18*/ float tileMoveTime;
    /*0x1c*/ float tileShadeTime;
    /*0x20*/ float characterAnimScale;
    /*0x24*/ float popupWaitTime;
    /*0x28*/ UnityEngine.Vector2 cameraLimit;
    /*0x30*/ float zoomMin;
    /*0x34*/ float zoomMax;
    /*0x38*/ UnityEngine.Vector3 viewScale;
    /*0x44*/ UnityEngine.Vector3 exploreViewScale;
    /*0x50*/ float bgMoveSpeed;

    /*0x12f026c*/ DungeonSetting();
}

class DungeonStageEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string BANNER_KEY;
    /*0x18*/ AtlasImage m_bannerImage;
    /*0x20*/ LocalizeString m_titleText;
    /*0x28*/ UnityEngine.UI.Slider m_completeSlider;
    /*0x30*/ LocalizeString m_completeText;
    /*0x38*/ UnityEngine.GameObject m_lockObject;
    /*0x40*/ UnityEngine.GameObject m_slideObject;
    /*0x48*/ ParticleBase[] m_dungoenFireParticles;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_door;
    /*0x58*/ int m_dungeonID;
    /*0x5c*/ bool m_isBestProgress;
    /*0x5d*/ bool m_isLock;
    /*0x5e*/ bool m_isDummy;

    static /*0x12f1c58*/ DungeonStageEntity();
    /*0x12f1c50*/ DungeonStageEntity();
    /*0x12f04d8*/ void OnDisable();
    /*0x12f05c8*/ void InitDummy();
    /*0x12f09ac*/ void InitEntity(int dungeonID, bool isBestProgress);
    /*0x12f0b04*/ void Init(TableData.TableData_Dungeon dungeonData);
    /*0x12f0d24*/ void SetBannerImage(int dungeonID);
    /*0x12f0e44*/ void SetTitle(string key);
    /*0x12f0f84*/ void SetSlide(float percent);
    /*0x12f05fc*/ void SetLock(bool enable);
    /*0x12f10d4*/ System.Collections.IEnumerator CoDontShow(int dungeonID);
    /*0x12f1140*/ void HandleDoorUpdateComplete(Spine.TrackEntry trackEntry);
    /*0x12f08d8*/ void SetParticle(bool enable);
    /*0x12f1248*/ void OnClick();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ int dungeonID;

        /*0x1096dd0*/ <>c__DisplayClass15_0();
        /*0x1096dd8*/ bool <InitEntity>b__0(TableData.TableData_Dungeon data);
    }

    class <CoDontShow>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int dungeonID;

        /*0x1096dfc*/ <CoDontShow>d__21(int <>1__state);
        /*0x1096e28*/ void System.IDisposable.Dispose();
        /*0x1096e2c*/ bool MoveNext();
        /*0x1096ecc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096ed4*/ void System.Collections.IEnumerator.Reset();
        /*0x1096f14*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ DungeonStageEntity.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__24_0;
        static /*0x10*/ System.Action<bool> <>9__24_1;

        static /*0x1096d60*/ <>c();
        /*0x1096dc0*/ <>c();
        /*0x1096dc8*/ void <OnClick>b__24_0(bool confirm);
        /*0x1096dcc*/ void <OnClick>b__24_1(bool confirm);
    }
}

class DungeonStageInfoPopup : GuiBase
{
    /*0x40*/ DungeonStageEntity m_dungeonStageEntity;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_descText;
    /*0x58*/ LocalizeString m_coinLimitText;
    /*0x60*/ ScrollContent_StageReward m_scrollContent;
    /*0x68*/ UnityEngine.UI.ScrollRect m_descScrollRect;
    /*0x70*/ UnityEngine.GameObject m_travelButton;
    /*0x78*/ UnityEngine.GameObject m_stopButton;
    /*0x80*/ LocalizeString m_travelText;
    /*0x88*/ int m_dungeonID;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x98*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_rewardPointList;
    /*0xa0*/ bool m_showTravelButton;
    /*0xa8*/ System.Action m_exitCallback;

    /*0x14b280c*/ DungeonStageInfoPopup();
    /*0x14b1290*/ void OnCreate();
    /*0x14b1294*/ void OnDelete();
    /*0x14b1298*/ void OnEnter();
    /*0x14b129c*/ void OnExit();
    /*0x14b1408*/ void OnFinish();
    /*0x14b140c*/ void OnLeave();
    /*0x14b1410*/ void OnStart();
    /*0x14b1414*/ void InitPopup(int dungeonID, bool showTravelButton, System.Action exitCallback);
    /*0x14b15c4*/ void SetStageEntity();
    /*0x14b165c*/ void SetScrollContent();
    /*0x14b17a4*/ void SetTitle();
    /*0x14b18f0*/ void SetDesc();
    /*0x14b1c9c*/ void SetCoinLimit();
    /*0x14b1a60*/ void SetButton();
    /*0x14b1df8*/ TableData.TableData_Dungeon GetDungeonData();
    /*0x14b1ee4*/ System.Collections.IEnumerator CoSetScrollRect();
    /*0x14b14e8*/ void BindEvent();
    /*0x14b1334*/ void RemoveEvent();
    /*0x14b1f50*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0x14b20a0*/ void OnClickStopTravel();
    /*0x14b23b8*/ void OnClickTravel();
    /*0x14b28c4*/ bool <GetDungeonData>b__28_0(TableData.TableData_Dungeon data);
    /*0x14b28e8*/ void <OnClickStopTravel>b__33_0(bool confirm);
    /*0x14b29b4*/ void <OnClickStopTravel>b__33_1();
    /*0x14b2a58*/ void <OnClickTravel>b__34_0();
    /*0x14b2ad0*/ void <OnClickTravel>b__34_1(bool confirm);
    /*0x14b2ba4*/ void <OnClickTravel>b__34_3();
    /*0x14b2c1c*/ void <OnClickTravel>b__34_2();

    class <CoSetScrollRect>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonStageInfoPopup <>4__this;

        /*0x1096f1c*/ <CoSetScrollRect>d__29(int <>1__state);
        /*0x1096f48*/ void System.IDisposable.Dispose();
        /*0x1096f4c*/ bool MoveNext();
        /*0x1096fac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096fb4*/ void System.Collections.IEnumerator.Reset();
        /*0x1096ff4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonStagePopup : GuiBase
{
    static int DUMMY_COUNT = 1;
    /*0x40*/ ScrollContent_DungeonStageEntity m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Dungeon> m_dungeonDataList;

    /*0x14b31ec*/ DungeonStagePopup();
    /*0x14b2c94*/ void OnCreate();
    /*0x14b2c98*/ void OnDelete();
    /*0x14b2c9c*/ void OnEnter();
    /*0x14b2ca0*/ void OnExit();
    /*0x14b2df8*/ void OnFinish();
    /*0x14b2dfc*/ void OnLeave();
    /*0x14b2e00*/ void OnStart();
    /*0x14b2e04*/ void InitPopup();
    /*0x14b2f4c*/ void UpdateScrollContent();
    /*0x14b2e70*/ void BindEvent();
    /*0x14b2d24*/ void RemoveEvent();
    /*0x14b308c*/ void HandleScrollContent(int index, DungeonStageEntity obj);
    /*0x14b3148*/ void OnClickHelp();
}

class DungeonStateEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ DungeonStateEntity.STATE_TYPE m_stateType;
    /*0x20*/ AtlasImage m_icon;
    /*0x28*/ LocalizeString m_value;

    /*0x14b3704*/ DungeonStateEntity();
    /*0x14b31f4*/ bool IsShow();
    /*0x14b32c0*/ void Init();
    /*0x14b32e8*/ void InitJail();
    /*0x14b33b4*/ void InitAtk();
    /*0x14b355c*/ void InitDef();

    enum STATE_TYPE
    {
        JAIL = 0,
        ATK = 1,
        DEF = 2,
        WALL = 3,
        NULL = 4,
    }
}

class DungeonStateWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<DungeonStateEntity> m_dungeonStateList;

    /*0x14b3ba0*/ DungeonStateWindow();
    /*0x14b3714*/ void OnDisable();
    /*0x14b3808*/ void InitWindow();
    /*0x14b395c*/ void BindEvent();
    /*0x14b3718*/ void RemoveEvent();
    /*0x14b3a54*/ void HandleUpdateWindow();
}

class DungeonTileBase : TileBase
{
    /*0x78*/ DungeonObject m_sortObjectBase;
    /*0x80*/ AtlasSprite m_tileImage;
    /*0x88*/ Spine.Unity.SkeletonAnimation m_objectSkel;
    /*0x90*/ DungeonMap m_dungeonMap;
    /*0x98*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x9c*/ DefineDungeon.TILETYPE m_tileType;
    /*0xa0*/ DefineDungeon.TILEVIEWTYPE m_tileViewType;
    /*0xa4*/ int m_tileID;
    /*0xa8*/ UnityEngine.Vector2Int m_tilePoint;
    /*0xb0*/ bool m_isBrokenTime;

    /*0x14b6304*/ DungeonTileBase();
    /*0x14b40bc*/ DefineDungeon.TILETYPE GetTileType();
    /*0x14b40c4*/ DefineDungeon.TILEVIEWTYPE GetViewType();
    /*0x14b40cc*/ UnityEngine.Vector2Int GetTilePoint();
    /*0x14b40d4*/ int GetTileValue();
    /*0x14b417c*/ string[] GetTileValues(char split);
    /*0x14b421c*/ TableData.TableData_Dungeontile GetTableData();
    /*0x14b4228*/ string GetTileRepresentImage();
    /*0x14b435c*/ bool IsBlockTile();
    /*0x14b438c*/ bool IsTileKeep();
    /*0x14b43b8*/ void InitTile(int index, DungeonMap map, TableData.TableData_Dungeonmap data);
    /*0x14b4880*/ void SetTileOption(TableData.TableData_Dungeonmap mapData);
    /*0x14b46fc*/ void SetData();
    /*0x14b5190*/ void SetObjectPosition();
    /*0x14b5100*/ void SetTileImage();
    /*0x14b45e4*/ void Clear();
    /*0x14b4d24*/ void ChangeUsedTile();
    /*0x14b5450*/ void MoveOutTile(DungeonFieldCharacter character);
    /*0x14b5588*/ void UseTile(DungeonFieldCharacter character, UnityEngine.Vector2Int prevPoint, float waitTime, bool isFinish, System.Action callBack);
    /*0x14b5780*/ void EndTile();
    /*0x14b58bc*/ void EndTile(DungeonFieldCharacter character, System.Action callBack);
    /*0x14b5a74*/ void OpenConditionReward(System.Action callback);
    /*0x14b5698*/ void ShowUseView();
    /*0x14b4e5c*/ void UpdateDungeonObjects(bool isFastShade);
    /*0x14b5ca0*/ void UpdateFreezeCharacter();
    /*0x14b52d4*/ void SetObjectSkin();
    /*0x14b5ddc*/ void SetHide(bool isDeep);
    /*0x14b5ebc*/ void SetLight();
    /*0x14b5f34*/ void SetSuperLight();
    /*0x14b4b3c*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
    /*0x14b5b58*/ void PlayObjectSkelAnim();
    /*0x14b5fdc*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0x14b5fa0*/ void PlayShadeChage(float time, AtlasSprite image, UnityEngine.Color startColor, UnityEngine.Color endColor);
    /*0x14b5508*/ System.Collections.IEnumerator CoBrokenTile(float waitTime, float time);
    /*0x14b6164*/ System.Collections.IEnumerator CoShadeFillTile(float time, UnityEngine.UI.Image image, float start, float end);
    /*0x14b60b0*/ System.Collections.IEnumerator CoShadeChange(float time, AtlasSprite image, UnityEngine.Color startColor, UnityEngine.Color endColor);
    /*0x14b5704*/ System.Collections.IEnumerator CoOnPressTime(float time, System.Action callBack);
    /*0x14b61f4*/ System.Collections.IEnumerator CoLateCallBack(float time, System.Action callBack);
    /*0x14b6270*/ void OnClickTile();
    /*0x14b633c*/ void <EndTile>b__28_0();

    class <>c__DisplayClass27_0
    {
        /*0x10*/ DungeonFieldCharacter character;
        /*0x18*/ DungeonTileBase <>4__this;
        /*0x20*/ UnityEngine.Vector2Int prevPoint;
        /*0x28*/ bool isFinish;
        /*0x30*/ System.Action callBack;
        /*0x38*/ System.Action <>9__1;

        /*0x1096ffc*/ <>c__DisplayClass27_0();
        /*0x1097004*/ void <UseTile>b__0();
        /*0x10970d8*/ void <UseTile>b__1();
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ System.Action callBack;

        /*0x10970ec*/ <>c__DisplayClass29_0();
        /*0x10970f4*/ void <EndTile>b__0();
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ DungeonTileBase <>4__this;
        /*0x18*/ System.Action callback;

        /*0x1097108*/ <>c__DisplayClass30_0();
        /*0x1097110*/ void <OpenConditionReward>b__0();
    }

    class <CoBrokenTile>d__42 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonTileBase <>4__this;
        /*0x28*/ float waitTime;
        /*0x2c*/ float time;
        /*0x30*/ UnityEngine.Vector3 <original>5__2;
        /*0x3c*/ int <i>5__3;

        /*0x109716c*/ <CoBrokenTile>d__42(int <>1__state);
        /*0x1097198*/ void System.IDisposable.Dispose();
        /*0x109719c*/ bool MoveNext();
        /*0x10975a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10975ac*/ void System.Collections.IEnumerator.Reset();
        /*0x10975ec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShadeFillTile>d__43 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ UnityEngine.UI.Image image;
        /*0x30*/ float start;
        /*0x34*/ float end;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;

        /*0x10979ec*/ <CoShadeFillTile>d__43(int <>1__state);
        /*0x1097a18*/ void System.IDisposable.Dispose();
        /*0x1097a1c*/ bool MoveNext();
        /*0x1097af4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1097afc*/ void System.Collections.IEnumerator.Reset();
        /*0x1097b3c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShadeChange>d__44 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ AtlasSprite image;
        /*0x30*/ UnityEngine.Color startColor;
        /*0x40*/ UnityEngine.Color endColor;
        /*0x50*/ float <t>5__2;
        /*0x54*/ float <speed>5__3;

        /*0x1097870*/ <CoShadeChange>d__44(int <>1__state);
        /*0x109789c*/ void System.IDisposable.Dispose();
        /*0x10978a0*/ bool MoveNext();
        /*0x109799c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10979a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10979e4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoOnPressTime>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ System.Action callBack;

        /*0x1097720*/ <CoOnPressTime>d__45(int <>1__state);
        /*0x109774c*/ void System.IDisposable.Dispose();
        /*0x1097750*/ bool MoveNext();
        /*0x1097820*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1097828*/ void System.Collections.IEnumerator.Reset();
        /*0x1097868*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateCallBack>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ System.Action callBack;

        /*0x10975f4*/ <CoLateCallBack>d__46(int <>1__state);
        /*0x1097620*/ void System.IDisposable.Dispose();
        /*0x1097624*/ bool MoveNext();
        /*0x10976d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10976d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1097718*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonView : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.SpriteRenderer m_viewSprite;
    /*0x20*/ UnityEngine.SpriteRenderer[] m_viewAlphaTargetList;
    /*0x28*/ UnityEngine.Color m_viewColor;
    /*0x38*/ UnityEngine.Color m_secondViewColor;
    /*0x48*/ UnityEngine.Color m_exploreViewColor;
    /*0x58*/ UnityEngine.Color m_exploreSecondViewColor;
    /*0x68*/ DungeonMap m_dungeonMap;

    /*0x14b6938*/ DungeonView();
    /*0x14b66a4*/ void InitView(DungeonMap dungeonMap);
    /*0x14b66ac*/ void SetView(bool isExplore);
    /*0x14b6794*/ void NormalView();
    /*0x14b66b8*/ void ExploreView();
    /*0x14b6870*/ System.Collections.IEnumerator CoChangeView(UnityEngine.Vector3 destScale, UnityEngine.Color destColor, UnityEngine.SpriteRenderer destRenderer, float time);

    class <CoChangeView>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonView <>4__this;
        /*0x28*/ UnityEngine.SpriteRenderer destRenderer;
        /*0x30*/ float time;
        /*0x34*/ UnityEngine.Vector3 destScale;
        /*0x40*/ UnityEngine.Color destColor;
        /*0x50*/ UnityEngine.Vector3 <startScale>5__2;
        /*0x5c*/ UnityEngine.Color <startColor>5__3;
        /*0x6c*/ float <t>5__4;
        /*0x70*/ float <speed>5__5;

        /*0x1097b44*/ <CoChangeView>d__11(int <>1__state);
        /*0x1097b70*/ void System.IDisposable.Dispose();
        /*0x1097b74*/ bool MoveNext();
        /*0x1097d5c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1097d64*/ void System.Collections.IEnumerator.Reset();
        /*0x1097da4*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum ARROW
{
    THIS = 0,
    LEFT = 1,
    RIGHT = 2,
    TOP = 3,
    BOTTOM = 4,
}

class MapBase<M, T> : MiniMapBase<M, T>
{
    static /*0x0*/ int ZOOM_FINGER_COUNT;
    /*0x0*/ int defaultSortOrder;
    /*0x0*/ UnityEngine.Vector2 m_tileLeft;
    /*0x0*/ UnityEngine.Vector2 m_tileRight;
    /*0x0*/ UnityEngine.Vector2 m_tileTop;
    /*0x0*/ UnityEngine.Vector2 m_tileBot;
    /*0x0*/ bool m_doublePeekCheckXFlip;
    /*0x0*/ UnityEngine.Vector2 m_filpLeft;
    /*0x0*/ UnityEngine.Vector2 m_filpRight;
    /*0x0*/ UnityEngine.Vector2 m_filpTop;
    /*0x0*/ UnityEngine.Vector2 m_filpBot;
    /*0x0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<T>> m_tileGroupMap;
    /*0x0*/ System.Collections.Generic.List<UnityEngine.GameObject> m_returnObjectList;
    /*0x0*/ float dragSpeed;

    static MapBase();
    MapBase();
    UnityEngine.Vector2Int GetPointByArrow(UnityEngine.Vector2Int point, ARROW arrow);
    ARROW GetDir(UnityEngine.Vector2Int start, UnityEngine.Vector2Int dest);
    float GetZoomValue();
    int GetSortOrderLayer(UnityEngine.Vector2Int point, int weight);
    UnityEngine.Vector3 GetTouchPosition(UnityEngine.Vector3 touchPosition, UnityEngine.Camera camera);
    bool ExistTile(UnityEngine.Vector2Int point);
    T GetTile(UnityEngine.Vector2Int point);
    void DragMap(UnityEngine.Vector3 dir);
    void FixedCamera();
    void InitMap(int id);
    void ExitMap();
    void SetComputeData();
    T AddNewTile(M data);
    void DestroyTiles();
    T PickTile(UnityEngine.Vector3 pickPosition);
    void OnDrawGizmosSelected();
    void ResizeMap();
    void BindEvent();
    void RemoveEvent();
    void Update();
    void UpdateZoom();
    System.Collections.IEnumerator CoScrollRectModeChange();

    class <>c<M, T>
    {
        static /*0x0*/ MapBase.<>c<M, T> <>9;
        static /*0x0*/ System.Comparison<T> <>9__30_0;

        static <>c();
        <>c();
        int <ResizeMap>b__30_0(T lhs, T rhs);
    }

    class <CoScrollRectModeChange>d__35<M, T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;

        <CoScrollRectModeChange>d__35(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class MiniMapBase<M, T> : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int LINE_COUNT;
    /*0x0*/ UnityEngine.GameObject m_camera;
    /*0x0*/ UnityEngine.GameObject m_layerParent;
    /*0x0*/ UnityEngine.GameObject m_scaleSupport;
    /*0x0*/ UnityEngine.Vector3 m_interval;
    /*0x0*/ T m_baseTilePrefab;
    /*0x0*/ UnityEngine.Vector2 m_margin;
    /*0x0*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_spreadCloseList;
    /*0x0*/ UnityEngine.GameObject m_tileLayer;
    /*0x0*/ System.Collections.Generic.List<T> m_tileList;
    /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, T> m_tileMap;
    /*0x0*/ float m_intervalSqrMagnitude;
    /*0x0*/ float m_startX;
    /*0x0*/ UnityEngine.Vector3 m_halfInterval;
    /*0x0*/ UnityEngine.Rect m_minmax;
    /*0x0*/ float m_zoomValue;

    static MiniMapBase();
    MiniMapBase();
    System.Collections.Generic.List<T> GetTileList();
    void OnDisable();
    UnityEngine.Vector3 GetCameraPosition();
    void SetCameraPosition(UnityEngine.Vector2Int point);
    void SetCameraPosition(UnityEngine.Vector3 position, UnityEngine.Space space);
    void InitMap(int id);
    void ExitMap();
    void CreateMap(System.Collections.Generic.List<M> mapDataList);
    void SetComputeData();
    T AddNewTile(M data);
    void DestroyTiles();
    void StartSpreadTile(UnityEngine.Vector2Int target, int activePower, int power, string spreadType);
    void SpreadTile(UnityEngine.Vector2Int target, int startPower, int power, int spreadMinPower, string spreadType);
    void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    UnityEngine.Vector3 GetTileLocalPositionToCamera(UnityEngine.Vector2Int point);
    UnityEngine.Vector3 GetTileWorldPositionToCamera(UnityEngine.Vector2Int point);
    UnityEngine.Vector3 GetTileLocalPosition(UnityEngine.Vector2Int point);
    UnityEngine.Vector3 GetTileWorldPosition(UnityEngine.Vector2Int point);
    void UpdateMinMaxWindowSize(UnityEngine.Vector3 checker);
    void UpdateZoom();
    void ResizeMap();
    void BindEvent();
    void RemoveEvent();
    UnityEngine.Vector3 GetPosition(M data);
    UnityEngine.Vector3 GetPosition(UnityEngine.Vector2Int point);
    int GetTileID(M data);
    int GetGroup(M data);
    UnityEngine.Vector2Int GetPoint(M data);
    string GetParameters(M data);
    void InitTile(int index, M data, T tileBasePrefab);
    float GetZoomMin();
    float GetZoomMax();
    System.Collections.IEnumerator CoLateCallBack(System.Action callBack);

    class <CoLateCallBack>d__48<M, T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ System.Action callBack;

        <CoLateCallBack>d__48(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class ScrollContent_DungeonStageEntity : ScrollContent<DungeonStageEntity>
{
    /*0xe1919c*/ ScrollContent_DungeonStageEntity();
}

class EnumParserManager : Singleton.Component.SingletonComponent<EnumParserManager>
{
    /*0x28*/ System.Collections.Generic.Dictionary<string, PTShare.Define.EquipParts> m_equipPartsDictionary;
    /*0x30*/ System.Collections.Generic.Dictionary<string, EquipSubType> m_equipSubDictionary;

    /*0x14b9f5c*/ EnumParserManager();
    /*0x14b9d58*/ PTShare.Define.EquipParts FindEquipParts(string key, PTShare.Define.EquipParts defaultEnum);
    /*0x14b9e00*/ EquipSubType FindEquipSubType(string key, EquipSubType defaultEnum);
    /*0x14b9ea8*/ void AwakeInstance();
    /*0x14b9f50*/ bool InitInstance();
    /*0x14b9f58*/ void ReleaseInstance();
    /*0x14b9eac*/ void InitDictionary();
}

struct HeroEquipSet
{
    /*0x10*/ PTShare.Define.SHero Hero;
    /*0x18*/ PTShare.Define.SEquip Equip;

    /*0xa85430*/ HeroEquipSet(PTShare.Define.SHero hero, PTShare.Define.SEquip equip);
}

class EquipManager : Singleton.Data.SingletonData<EquipManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SEquip> m_liEquipList;
    /*0x28*/ PTShare.Define.SHero _CurSHero;
    /*0x30*/ PTShare.Define.SEquip _CurSEquip;
    /*0x38*/ int nArrIndex;
    /*0x3c*/ int nStartCount;
    /*0x40*/ int nEndCount;

    /*0x14bf6c4*/ EquipManager();
    /*0x14be314*/ bool InitInstance();
    /*0x14be31c*/ void ReleaseInstance();
    /*0x14be370*/ string get_UserToken();
    /*0x14be3f0*/ void Send_ResetFactionBonus(System.Action<int> _callback, int _equipid);
    /*0x14be534*/ void Send_ConfirmFactionBonus(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback, int _equipid);
    /*0x14be678*/ void Send_ReinforceEquip(System.Action<PTShare.Define.SEquip> _callback, int _equipid, System.Collections.Generic.List<int> _materialItemID, System.Collections.Generic.List<int> _materialEquipID);
    /*0x14bea30*/ void Send_PromoteEquip(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback, int _equipid);
    /*0x14beb84*/ void SetEquipList(System.Collections.Generic.List<PTShare.Define.SEquip> _liEquip);
    /*0x14bec84*/ System.Collections.Generic.List<PTShare.Define.SEquip> GetEquipList();
    /*0x14bec8c*/ PTShare.Define.SEquip GetEquipId(int _equipid);
    /*0x14badf8*/ System.Collections.Generic.List<PTShare.Define.SEquip> FindEquipListToType(PTShare.Define.EquipParts _parts, PTShare.Define.EquipmentType _type);
    /*0x14bed7c*/ void IncreaseEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> _equip);
    /*0x14bedfc*/ void IncreaseEquipment(PTShare.Define.SEquip _equip);
    /*0x14bee60*/ void DecreaseEquipment(int _equipid);
    /*0x14befe0*/ void DecreaseEquipment(PTShare.Define.SEquip _equipid);
    /*0x14bf160*/ void DecreaseEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> _equip);
    /*0x14bf360*/ void EqualChangeEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> _beforeEquip, System.Collections.Generic.List<PTShare.Define.SEquip> _afterEquip);
    /*0x14bf068*/ int GetEquipIndex(PTShare.Define.SEquip _item);
    /*0x14beee8*/ int GetEquipIndex(int _equipid);
    /*0x14bf38c*/ void IncreaseEquipmentToHero(PTShare.Define.SHero _hero, int _equipid);
    /*0x14baf0c*/ System.Collections.Generic.List<HeroEquipSet> FindHeroEquipment(int _ignoreHeroid, PTShare.Define.EquipParts _parts, PTShare.Define.EquipmentType _equipType);
    /*0x14bf4dc*/ PTShare.Define.SHero FindHeroToEquipID(int _equipid);
    /*0x14bec00*/ void SortEquip();
    /*0x14bf6a0*/ TableData.TableData_Equipment FindNextAdvanceEquipmentTableData(TableData.TableData_Equipment _equip);

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Action<int> _callback;

        /*0x10983cc*/ <>c__DisplayClass10_0();
        /*0x10983d4*/ void <Send_ResetFactionBonus>b__0(ServerProtocol.ResEquipResetFactionBonus response);
    }

    class <>c
    {
        static /*0x0*/ EquipManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__10_1;
        static /*0x10*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__12_0;
        static /*0x18*/ System.Func<int, string> <>9__12_1;
        static /*0x20*/ System.Converter<PTShare.Define.SEquip, int> <>9__22_0;

        static /*0x1098238*/ <>c();
        /*0x1098298*/ <>c();
        /*0x10982a0*/ void <Send_ResetFactionBonus>b__10_1(PTShare.Define.SItem item);
        /*0x1098328*/ System.Collections.Generic.IEnumerable<byte> <Send_ReinforceEquip>b__12_0(int s);
        /*0x109838c*/ string <Send_ReinforceEquip>b__12_1(int s);
        /*0x10983b4*/ int <DecreaseEquipment>b__22_0(PTShare.Define.SEquip c);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ EquipManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__1;

        /*0x1098544*/ <>c__DisplayClass11_0();
        /*0x109854c*/ void <Send_ConfirmFactionBonus>b__0(ServerProtocol.ResEquipConfirmFactionBonus response);
        /*0x10987a8*/ bool <Send_ConfirmFactionBonus>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ EquipManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SEquip> _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__3;

        /*0x10987cc*/ <>c__DisplayClass12_0();
        /*0x10987d4*/ void <Send_ReinforceEquip>b__2(ServerProtocol.ResEquipReinforce response);
        /*0x1098ba4*/ bool <Send_ReinforceEquip>b__3(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ EquipManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__1;

        /*0x1098bc8*/ <>c__DisplayClass13_0();
        /*0x1098bd0*/ void <Send_PromoteEquip>b__0(ServerProtocol.ResEquipPromote response);
        /*0x1098f14*/ bool <Send_PromoteEquip>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int _equipid;

        /*0x1098f38*/ <>c__DisplayClass16_0();
        /*0x1098f40*/ bool <GetEquipId>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.EquipParts _parts;
        /*0x14*/ PTShare.Define.EquipmentType _type;

        /*0x1098f64*/ <>c__DisplayClass17_0();
        /*0x1098f6c*/ bool <FindEquipListToType>b__0(PTShare.Define.SEquip item);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ System.Collections.Generic.List<int> decIDs;

        /*0x10990b0*/ <>c__DisplayClass22_0();
        /*0x10990b8*/ bool <DecreaseEquipment>b__1(PTShare.Define.SEquip w);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ PTShare.Define.SEquip _item;

        /*0x109912c*/ <>c__DisplayClass24_0();
        /*0x1099134*/ bool <GetEquipIndex>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ int _equipid;

        /*0x1099164*/ <>c__DisplayClass25_0();
        /*0x109916c*/ bool <GetEquipIndex>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ int _equipid;

        /*0x1099190*/ <>c__DisplayClass26_0();
        /*0x1099198*/ bool <IncreaseEquipmentToHero>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ PTShare.Define.EquipParts _parts;
        /*0x14*/ PTShare.Define.EquipmentType _equipType;
        /*0x18*/ int _ignoreHeroid;
        /*0x20*/ System.Predicate<PTShare.Define.SEquip> <>9__2;

        /*0x10991bc*/ <>c__DisplayClass27_0();
        /*0x10991c4*/ HeroEquipSet <FindHeroEquipment>b__0(PTShare.Define.SHero x);
        /*0x10992c4*/ bool <FindHeroEquipment>b__2(PTShare.Define.SEquip y);
        /*0x1099408*/ bool <FindHeroEquipment>b__1(HeroEquipSet x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ int _equipid;

        /*0x1099438*/ <>c__DisplayClass28_0();
        /*0x1099440*/ bool <FindHeroToEquipID>b__0(PTShare.Define.SHero item);
        /*0x1099518*/ bool <FindHeroToEquipID>b__1(PTShare.Define.SEquip x);
    }
}

class EquipComparer_Sort : System.Collections.Generic.IComparer<PTShare.Define.SEquip>
{
    /*0x10*/ TableData.TableData_Equipment tableLeft;
    /*0x18*/ TableData.TableData_Equipment tableRight;
    /*0x20*/ EquipSubType _subTypeLeft;
    /*0x24*/ EquipSubType _subTypeRight;
    /*0x28*/ PTShare.Define.EquipParts _partsTypeLeft;
    /*0x2c*/ PTShare.Define.EquipParts _partsTypeRight;

    /*0x14bb85c*/ EquipComparer_Sort();
    /*0x14bb6e0*/ int Compare(PTShare.Define.SEquip left, PTShare.Define.SEquip right);
}

class AttendanceContinueEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_boxIcon;
    /*0x20*/ LocalizeString m_dayText;
    /*0x28*/ UnityEngine.GameObject m_viewRewardBackground;
    /*0x30*/ UnityEngine.GameObject m_viewRewardParent;
    /*0x38*/ Spine.Unity.SkeletonGraphic m_treasureBoxSkel;
    /*0x40*/ TableData.TableData_Eventattendance m_attendanceData;
    /*0x48*/ TableData.TableData_Event m_eventData;
    /*0x50*/ bool m_isReceiveReward;

    /*0xf7d3dc*/ AttendanceContinueEntity();
    /*0xf7c964*/ void OnDisable();
    /*0xf7c974*/ void InitEntity(TableData.TableData_Event eventData, TableData.TableData_Eventattendance attendanceData);
    /*0xf7cc10*/ void SetBoxIcon();
    /*0xf7cd0c*/ void SetBoxSkel();
    /*0xf7cedc*/ void SetTreasureBox(string animName, bool loop);
    /*0xf7c9b4*/ void SetData();
    /*0xf7ca28*/ void SetDay();
    /*0xf7cf64*/ bool IsOpenedDay();
    /*0xf7ce58*/ bool HaveBeenOpend();
    /*0xf7cfe8*/ void OnClickReward();
    /*0xf7d384*/ void OnClickHide();
    /*0xf7d0f4*/ void ViewReward();
    /*0xf7c96c*/ void HideReward();
    /*0xf7d38c*/ void SetActiveReward(bool _enable);
    /*0xf7d3e4*/ void <OnClickReward>b__17_0();
}

class AttendanceEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_rewardSlot;
    /*0x20*/ UnityEngine.GameObject m_checkObject;
    /*0x28*/ UnityEngine.GameObject m_checkIcon;
    /*0x30*/ LocalizeString m_dayText;
    /*0x38*/ UnityEngine.GameObject m_rewardBtn;
    /*0x40*/ AtlasImage m_effectImage;
    /*0x48*/ AtlasImage m_checkRewardNotifyImage;
    /*0x50*/ UnityEngine.GameObject m_reddot;
    /*0x58*/ TableData.TableData_Eventattendance m_attendanceData;
    /*0x60*/ TableData.TableData_Event m_eventData;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x70*/ bool m_isReceiveReward;

    /*0xf7e0f8*/ AttendanceEntity();
    /*0xf7d438*/ void InitEntity(TableData.TableData_Event eventData, TableData.TableData_Eventattendance attendanceData);
    /*0xf7d448*/ void UpdateEntitiy();
    /*0xf7d49c*/ void SetData();
    /*0xf7d510*/ void SetReward();
    /*0xf7d6b8*/ void SetRewardButton();
    /*0xf7d74c*/ void SetRewardEffect();
    /*0xf7d7f4*/ void SetReddot();
    /*0xf7d888*/ void SetCheckIcon();
    /*0xf7dac8*/ void SetDay();
    /*0xf7dcb0*/ void SetRewardCheck();
    /*0xf7ddac*/ void OnClickReward();
    /*0xf7df5c*/ System.Collections.IEnumerator CoShowReward(PTShare.Define.SAttendReward attendRewardPacket);
    /*0xf7dfd4*/ void DoRewardEffect();
    /*0xf7dd40*/ System.Collections.IEnumerator CoRewardEffectLoop();
    /*0xf7e100*/ void <CoShowReward>b__23_0();

    class <CoShowReward>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AttendanceEntity <>4__this;
        /*0x28*/ PTShare.Define.SAttendReward attendRewardPacket;

        /*0xd9ec44*/ <CoShowReward>d__23(int <>1__state);
        /*0xd9ec70*/ void System.IDisposable.Dispose();
        /*0xd9ec74*/ bool MoveNext();
        /*0xd9edb0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9edb8*/ void System.Collections.IEnumerator.Reset();
        /*0xd9edf8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRewardEffectLoop>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AttendanceEntity <>4__this;

        /*0xd9ea18*/ <CoRewardEffectLoop>d__25(int <>1__state);
        /*0xd9ea44*/ void System.IDisposable.Dispose();
        /*0xd9ea48*/ bool MoveNext();
        /*0xd9ebf4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9ebfc*/ void System.Collections.IEnumerator.Reset();
        /*0xd9ec3c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AttendanceMonthlyPopup : AttendancePopupBase
{
    static /*0x0*/ float CONTINUE_LOCAL_Y;
    /*0x80*/ LocalizeString m_continueDayText;
    /*0x88*/ ScrollContent_AttendanceEntity m_scrollContent;
    /*0x90*/ AttendanceContinueEntity m_attendanceConinueEntityPrefab;
    /*0x98*/ UnityEngine.RectTransform m_continueParent;
    /*0xa0*/ UnityEngine.UI.Slider m_slider;
    /*0xa8*/ System.Collections.Generic.List<AttendanceContinueEntity> m_continueEntityList;

    static /*0xf7ef08*/ AttendanceMonthlyPopup();
    /*0xf7ee1c*/ AttendanceMonthlyPopup();
    /*0xf7e108*/ void OnEnter();
    /*0xf7e118*/ void OnLeave();
    /*0xf7e128*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xf7e1e0*/ void SetAttendanceEntity();
    /*0xf7e31c*/ void SetContinueEntity();
    /*0xf7e73c*/ void SetContinueSlider();
    /*0xf7ead8*/ void SetSliderValue(float percent);
    /*0xf7ea40*/ void SetCurrencyContinueDay();
    /*0xf7eb84*/ void BindEvent();
    /*0xf7ec7c*/ void RemoveEvent();
    /*0xf7ed54*/ void OnClickHelp();
    /*0xf7ed58*/ void HandleScrollContent(int index, AttendanceEntity obj);
}

class AttendancePopup7Day : AttendancePopupBase
{
    /*0x80*/ AttendanceEntity[] m_attendanceEntityArray;

    /*0xf7f3c4*/ AttendancePopup7Day();
    /*0xf7ef58*/ void OnEnter();
    /*0xf7ef68*/ void OnLeave();
    /*0xf7ef78*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xf7efd4*/ void SetAttendanceEntity(AttendanceEntity[] entityArray, PTShare.Define.EventCheckType eventCheckType);
    /*0xf7f1b4*/ void UpdateLeftTime();
}

class AttendancePopupBase : EventPopupBase
{
    /*0x78*/ System.Collections.Generic.Dictionary<PTShare.Define.EventCheckType, System.Collections.Generic.List<TableData.TableData_Eventattendance>> m_dataDictionary;

    /*0xf7ee90*/ AttendancePopupBase();
    /*0xf7f3c8*/ void OnCreate();
    /*0xf7f3cc*/ void OnDelete();
    /*0xf7f3d0*/ void OnEnter();
    /*0xf7f3e0*/ void OnFinish();
    /*0xf7f3e4*/ void OnLeave();
    /*0xf7f3f4*/ void OnStart();
    /*0xf7f3f8*/ void OnExit();
    /*0xf7e1ac*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xf7f4cc*/ void SetAttendanceData(PTShare.Define.EventCheckType checkType);
    /*0xf7ec6c*/ void BindEvent();
    /*0xf7ed50*/ void RemoveEvent();
    /*0xf7f808*/ void <OnExit>b__7_0();
}

class BattlePassEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string[] REWARD_ACTIVE_BG;
    /*0x18*/ AtlasImage m_battlePassBG;
    /*0x20*/ UnityEngine.UI.Image m_battlePassActiveBG;
    /*0x28*/ ItemTableRewardSlot[] m_freeRewardSlotArray;
    /*0x30*/ ItemTableRewardSlot[] m_premiumRewardSlotArray;
    /*0x38*/ AtlasImage[] m_freeRewardEffects;
    /*0x40*/ AtlasImage[] m_premiumRewardEffects;
    /*0x48*/ UnityEngine.GameObject[] m_freeSoldOutObjects;
    /*0x50*/ UnityEngine.GameObject[] m_premiumSoldOutObjects;
    /*0x58*/ UnityEngine.GameObject[] m_premiumLockObjects;
    /*0x60*/ UnityEngine.GameObject m_rewardBtn;
    /*0x68*/ UnityEngine.Material m_grayScaleMaterial;
    /*0x70*/ TableData.TableData_Eventpassreward m_battlePassData;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_freeRewardList;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_premiumRewardList;
    /*0x88*/ PTShare.Define.REWARD_STATE m_rewardState;
    /*0x8c*/ bool m_isUnlockPoint;
    /*0x8d*/ bool m_isUnlockPremium;

    static /*0xe3a394*/ BattlePassEntity();
    /*0xe3a384*/ BattlePassEntity();
    /*0xe393e0*/ void OnEnable();
    /*0xe393f0*/ void OnDisable();
    /*0xe39400*/ void InitBattlePass(TableData.TableData_Eventpassreward battlePassData);
    /*0xe39434*/ void UpdateUI();
    /*0xe394c4*/ void SetData();
    /*0xe39edc*/ void SetBGColor();
    /*0xe39d68*/ void SetLock();
    /*0xe39dfc*/ void SetRewardBtn();
    /*0xe39988*/ void UpdateSoldOutObject();
    /*0xe3a1dc*/ void SetItemSlotMaterial(UnityEngine.GameObject parentObject, UnityEngine.Material material);
    /*0xe3959c*/ void SetFreeScrollContent();
    /*0xe397a0*/ void SetPremiumScrollContent();
    /*0xe3a15c*/ System.Collections.IEnumerator CoRewardEffectLoop(bool isFree);
    /*0xe393e8*/ void BindEvent();
    /*0xe393f8*/ void RemoveEvent();
    /*0xe3a2c4*/ void OnClickReward();
    /*0xe3a4cc*/ void <OnClickReward>b__33_0();

    class <CoRewardEffectLoop>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool isFree;
        /*0x28*/ BattlePassEntity <>4__this;
        /*0x30*/ AtlasImage[] <targetImages>5__2;

        /*0xda124c*/ <CoRewardEffectLoop>d__30(int <>1__state);
        /*0xda1278*/ void System.IDisposable.Dispose();
        /*0xda127c*/ bool MoveNext();
        /*0xda15d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda15d8*/ void System.Collections.IEnumerator.Reset();
        /*0xda1618*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BattlePassLineEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string[] BATTLEPASS_LINE_IMAGE_NAMES;
    static /*0x8*/ string[] ROYALPASS_LINE_IMAGE_NAMES;
    static /*0x10*/ string[] BATTLEPASS_BUTTON_SLOT;
    static /*0x18*/ string[] ROYALPASS_BUTTON_SLOT;
    /*0x18*/ AtlasImage m_activeButtonImage;
    /*0x20*/ AtlasImage m_disableButtonImage;
    /*0x28*/ AtlasImage m_nextLineImage;
    /*0x30*/ LocalizeString[] m_passNumberTexts;

    static /*0xe3a808*/ BattlePassLineEntity();
    /*0xe3a800*/ BattlePassLineEntity();
    /*0xe3a4d0*/ void InitEntity(int passNumber, bool isActivePass, bool isActiveNext, bool isLast, DefineEvent.BATTLEPASS passType);
    /*0xe3a51c*/ void SetButtonUI(int passNumber, bool isActivePass, DefineEvent.BATTLEPASS passType);
    /*0xe3a6b0*/ void SetLineUI(bool isActiveNext, bool isLast, DefineEvent.BATTLEPASS passType);
}

class BattlePassPopup : EventPopupBase
{
    /*0x78*/ ScrollContent_BattlePassEntity m_scrollContent;
    /*0x80*/ UnityEngine.GameObject m_battlePassLineParent;
    /*0x88*/ BattlePassLineEntity m_battlePassLineEntityPrefab;
    /*0x90*/ LocalizeString m_pointText;
    /*0x98*/ LocalizeString m_rankText;
    /*0xa0*/ UnityEngine.UI.Slider m_slider;
    /*0xa8*/ CurrencyTopWindow m_currencyWindow;
    /*0xb0*/ AtlasImage m_battlePassButton;
    /*0xb8*/ UnityEngine.UI.Outline m_battlePassOutline;
    /*0xc0*/ System.Collections.Generic.List<BattlePassLineEntity> m_battlePassLineList;
    /*0xc8*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> m_battlePassRewardDataList;
    /*0xd0*/ PTShare.Define.SPass m_sPass;
    /*0xd8*/ int m_currentPassLevelIndex;

    /*0xe3c9f4*/ BattlePassPopup();
    /*0xe3aaf0*/ void OnCreate();
    /*0xe3aaf4*/ void OnDelete();
    /*0xe3aaf8*/ void OnEnter();
    /*0xe3abd8*/ void OnFinish();
    /*0xe3abdc*/ void OnLeave();
    /*0xe3acb4*/ void OnStart();
    /*0xe3acb8*/ void OnExit();
    /*0xe3ad8c*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xe3bb80*/ void UpdatePopup();
    /*0xe3bba4*/ void UpdateLeftTime();
    /*0xe3bf68*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0xe3af50*/ void SetBattlePassData();
    /*0xe3b12c*/ void SetScrollContentBattlePass();
    /*0xe3b558*/ void SetBattlePassLine();
    /*0xe3b218*/ void SetPassPoint();
    /*0xe3b874*/ void SetRank();
    /*0xe3ba10*/ void Setbutton();
    /*0xe3aafc*/ void BindEvent();
    /*0xe3abe0*/ void RemoveEvent();
    /*0xe3bfd4*/ void HandleScrollContent(int index, BattlePassEntity obj);
    /*0xe3c064*/ void OnClickPremiumActive();
    /*0xe3caac*/ void <OnExit>b__19_0();
    /*0xe3cb30*/ void <OnClickPremiumActive>b__33_0(bool isPurchase);

    class <CoUpdateLeftTime>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BattlePassPopup <>4__this;

        /*0xda1620*/ <CoUpdateLeftTime>d__23(int <>1__state);
        /*0xda164c*/ void System.IDisposable.Dispose();
        /*0xda1650*/ bool MoveNext();
        /*0xda16c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda16c8*/ void System.Collections.IEnumerator.Reset();
        /*0xda1708*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BattlePassPurchasePopup : GuiBase
{
    static /*0x0*/ string[] TITLE;
    static /*0x8*/ string[] DESC;
    static /*0x10*/ string[] DESC2;
    static /*0x18*/ string[] REWARDDESC;
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_desc1;
    /*0x50*/ LocalizeString m_desc2;
    /*0x58*/ LocalizeString m_rewardText;
    /*0x60*/ LocalizeString m_priceText;
    /*0x68*/ ItemTableRewardSlot[] m_rewardSlotList;
    /*0x70*/ UnityEngine.UI.GridLayoutGroup m_layoutGroup;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x80*/ int m_eventTypeID;
    /*0x88*/ System.Action<bool> m_callBack;

    static /*0xe3d4d0*/ BattlePassPurchasePopup();
    /*0xe3d458*/ BattlePassPurchasePopup();
    /*0xe3cbe8*/ void OnCreate();
    /*0xe3cbec*/ void OnDelete();
    /*0xe3cbf0*/ void OnEnter();
    /*0xe3cc5c*/ void OnFinish();
    /*0xe3cc60*/ void OnLeave();
    /*0xe3cc64*/ void OnStart();
    /*0xe3c180*/ void InitPopup(int eventTypeID, System.Action<bool> callBack);
    /*0xe3cc68*/ void SetPriceText();
    /*0xe3cec8*/ void UpdateRewardList(System.Collections.Generic.List<Rewards> source);
    /*0xe3d104*/ void OnClickCancel();
    /*0xe3d1ac*/ void OnClickPurchase();
    /*0xe3d2b4*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ BattlePassPurchasePopup <>4__this;
        /*0x18*/ int eventTypeID;
        /*0x20*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> eventPassRewardList;

        /*0xda1710*/ <>c__DisplayClass20_0();
        /*0xda1718*/ bool <InitPopup>b__0(TableData.TableData_Eventpass data);
        /*0xda1748*/ void <InitPopup>b__1(TableData.TableData_Eventpassreward data);
    }
}

class EventBossFastHuntPopup : GuiBase
{
    /*0x40*/ LocalizeString m_prevDamageText;
    /*0x48*/ LocalizeString m_rewardCountText;
    /*0x50*/ PTShare.Define.SEventBoss m_eventBoss;

    /*0x114fecc*/ EventBossFastHuntPopup();
    /*0x114f7c0*/ void OnCreate();
    /*0x114f7c4*/ void OnDelete();
    /*0x114f7c8*/ void OnEnter();
    /*0x114f7cc*/ void OnFinish();
    /*0x114f7d0*/ void OnLeave();
    /*0x114f7d4*/ void OnStart();
    /*0x114f7d8*/ void InitPopup(int bossIndex);
    /*0x114f960*/ void SetPrevDamage();
    /*0x114fa24*/ void SetRewardCount();
    /*0x114fc68*/ void OnClickFastHunt();
    /*0x114fed4*/ void <OnClickFastHunt>b__12_0();
    /*0x114ffb4*/ void <OnClickFastHunt>b__12_1();
}

class EventBossPopup : EventPopupBase
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x78*/ LocalizeString m_bossInfoText;
    /*0x80*/ LocalizeString m_bossNameText;
    /*0x88*/ ScrollContent_StageReward m_scrollContent;
    /*0x90*/ GuildBossSkillSlot[] m_bossSkills;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_character;
    /*0xa0*/ UnityEngine.UI.Button m_battleButton;
    /*0xa8*/ UnityEngine.UI.Button m_sweepButton;
    /*0xb0*/ LocalizeString m_tryCountText;
    /*0xb8*/ UnityEngine.UI.ScrollRect m_scrollInfoText;
    /*0xc0*/ TableData.TableData_Unitbase m_unitBase;
    /*0xc8*/ TableData.TableData_Unitlv m_unitLvData;
    /*0xd0*/ TableData.TableData_Eventboss m_eventBossData;
    /*0xd8*/ System.Collections.Generic.List<Rewards> m_rewardList;

    static /*0x11520dc*/ EventBossPopup();
    /*0x1152064*/ EventBossPopup();
    /*0x1150064*/ void OnCreate();
    /*0x1150068*/ void OnDelete();
    /*0x115006c*/ void OnEnter();
    /*0x1150070*/ void OnFinish();
    /*0x1150074*/ void OnLeave();
    /*0x1150290*/ void OnStart();
    /*0x1150294*/ void OnExit();
    /*0x1150368*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x1150648*/ void UpdatePage();
    /*0x1150704*/ void UpdateButtons();
    /*0x1150884*/ void UpdateBossName();
    /*0x11509cc*/ void UpdateBossInfo();
    /*0x11506a8*/ void UpdateBossData();
    /*0x1150fb0*/ void UpdateSkillList();
    /*0x1151508*/ void UpdateTryCount();
    /*0x1151804*/ int GetSkillLevel(TableData.TableData_Skilllv skillData, int tier);
    /*0x11513a4*/ void UpdateBoss();
    /*0x1150b38*/ void UpdateRewardList();
    /*0x1151908*/ void UpdateLeftTime();
    /*0x115172c*/ int FindEventHuntCount();
    /*0x1151a48*/ void OnClickBattleStart();
    /*0x1151b38*/ void OnClickFastHunting();
    /*0x1151c20*/ void OnClickRecord();
    /*0x1150428*/ void BindEvent();
    /*0x1150078*/ void RemoveEvent();
    /*0x1151ec4*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0x1151f7c*/ void HandleDailyChange();
    /*0x1152060*/ void HandleRefresh();
    /*0x11520e0*/ void <OnExit>b__20_0();
    /*0x1151798*/ System.Collections.IEnumerator <UpdateBossInfo>g__CoLateRefresh|25_0();
    /*0x1152250*/ void <OnClickRecord>b__36_0(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historys);

    class <>c
    {
        static /*0x0*/ EventBossPopup.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__27_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__27_1;

        static /*0x109b070*/ <>c();
        /*0x109b0d0*/ <>c();
        /*0x109b0d8*/ int <UpdateSkillList>b__27_0(TableData.TableData_Skillbase x);
        /*0x109b0f0*/ TableData.TableData_Skillbase <UpdateSkillList>b__27_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
    }

    class <<UpdateBossInfo>g__CoLateRefresh|25_0>d : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventBossPopup <>4__this;

        /*0x109af30*/ <<UpdateBossInfo>g__CoLateRefresh|25_0>d(int <>1__state);
        /*0x109af5c*/ void System.IDisposable.Dispose();
        /*0x109af60*/ bool MoveNext();
        /*0x109b020*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109b028*/ void System.Collections.IEnumerator.Reset();
        /*0x109b068*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventBossRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildBossRecordEntity m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> m_historyList;
    /*0x58*/ int m_bossIndex;

    /*0x11526cc*/ EventBossRecordPopup();
    /*0x115233c*/ void OnCreate();
    /*0x1152340*/ void OnDelete();
    /*0x1152344*/ void OnEnter();
    /*0x1152348*/ void OnFinish();
    /*0x115234c*/ void OnLeave();
    /*0x1152350*/ void OnStart();
    /*0x1152354*/ void OnExit();
    /*0x1152300*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historyList, int bossIndex);
    /*0x115252c*/ void SetScrollContent();
    /*0x1152450*/ void BindEvnet();
    /*0x115237c*/ void RemoveEvent();
    /*0x1152644*/ void HandleScrollContent(int index, GuildBossRecordEntity obj);
}

class EventCompleteEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_title;
    /*0x20*/ LocalizeString m_desc;
    /*0x28*/ EventCompleteTotalSlide m_slide;
    /*0x30*/ TableData.TableData_Eventcomplete m_tableData;
    /*0x38*/ Rewards m_exchangeData;
    /*0x100*/ System.Action m_sendCallBack;

    /*0x11538d0*/ EventCompleteEntity();
    /*0x1152f3c*/ void InitEntity(TableData.TableData_Eventcomplete tableData, System.Action sendCallBack);
    /*0x1153020*/ void UpdateUI();
    /*0x1152f68*/ void SetData();
    /*0x115304c*/ void SetTitle();
    /*0x1153178*/ void SetDesc();
    /*0x11532a4*/ void SetSlide();
    /*0x11533e4*/ string GetExchangeItemName();
    /*0x1153558*/ int GetPushCount();
    /*0x11537b0*/ void OnClick_Send();
    /*0x11538d8*/ bool <GetPushCount>b__13_0(PTShare.Define.SManufacture f);
}

class EventCompleteInsertPopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot m_insertItemSlot;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_desc;
    /*0x58*/ LocalizeString m_subTitleText;
    /*0x60*/ UnityEngine.UI.Slider m_AmountSilder;
    /*0x68*/ LocalizeString m_SilderText;
    /*0x70*/ LocalizeString m_ExchangeCountText;
    /*0x78*/ LocalizeString m_exchangeBtnText;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_insertList;
    /*0x88*/ TableData.TableData_Eventcomplete m_tableData;
    /*0x90*/ int m_nMaxAmount;
    /*0x94*/ int m_nAmount;
    /*0x98*/ System.Action m_confirmCallBack;

    /*0x1154adc*/ EventCompleteInsertPopup();
    /*0x1153908*/ void OnCreate();
    /*0x115390c*/ void OnDelete();
    /*0x1153910*/ void OnEnter();
    /*0x115397c*/ void OnFinish();
    /*0x1153980*/ void OnLeave();
    /*0x1153984*/ void OnStart();
    /*0x1153988*/ void OnExit();
    /*0x1153888*/ void InitializePopup(TableData.TableData_Eventcomplete tableData, int defaultMaxCount, System.Action confirmCallBack);
    /*0x1153a04*/ void SetData();
    /*0x1153b7c*/ void ComputeMaxAmount(int defaultMaxCount);
    /*0x1153de8*/ void SetLocalizeItem();
    /*0x11541d8*/ void ChangeAmount(int _amount);
    /*0x11545f8*/ string GetExchangeItemName();
    /*0x11547fc*/ void OnClickChangeAmount(int count);
    /*0x115484c*/ void OnClickInsert();
    /*0x1154b54*/ void <OnClickInsert>b__27_0();
}

class EventCompletePopup : EventPopupBase
{
    static /*0x0*/ string[] CAKE_IMAGES;
    /*0x78*/ ScrollContent_EventCompleteEntity m_scrollcontentEntity;
    /*0x80*/ AtlasImage m_progressImage;
    /*0x88*/ UnityEngine.UI.Image m_cakeImage;
    /*0x90*/ UnityEngine.GameObject[] m_progressActiveSteps;
    /*0x98*/ EventCompleteRewardView m_eventCompleteView;
    /*0xa0*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> m_completeDataList;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> m_completeMissionDataList;
    /*0xb0*/ System.Collections.Generic.List<int> m_completeStepList;

    static /*0x1156280*/ EventCompletePopup();
    /*0x1156188*/ EventCompletePopup();
    /*0x1154f10*/ void OnCreate();
    /*0x1154f14*/ void OnDelete();
    /*0x1154f18*/ void OnEnter();
    /*0x1154f1c*/ void OnFinish();
    /*0x1154f20*/ void OnLeave();
    /*0x1154f24*/ void OnStart();
    /*0x1154f28*/ void OnExit();
    /*0x1154ffc*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11554f4*/ void UpdateUI();
    /*0x11551bc*/ void SetData();
    /*0x115569c*/ void SetProgress();
    /*0x1155034*/ void BindEvent();
    /*0x1155a90*/ void RemoveEvent();
    /*0x1155c10*/ void HandleScrollContentEntity(int index, EventCompleteEntity obj);
    /*0x1155ce4*/ void HandleDailyChange();
    /*0x1155de8*/ void OnClickRewardView(int index);
    /*0x115648c*/ void <OnExit>b__15_0();

    class <>c
    {
        static /*0x0*/ EventCompletePopup.<> <>9;
        static /*0x8*/ System.Comparison<int> <>9__18_0;

        static /*0x109b13c*/ <>c();
        /*0x109b19c*/ <>c();
        /*0x109b1a4*/ int <SetData>b__18_0(int lhs, int rhs);
    }
}

class EventCompleteRewardView : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_parent;
    /*0x20*/ System.Collections.Generic.List<UnityEngine.GameObject> m_rewardParents;

    /*0x1156520*/ EventCompleteRewardView();
    /*0x1155eb8*/ void Show(int index, System.Collections.Generic.List<Rewards> rewardList);
    /*0x1155564*/ void Hide();

    class <>c
    {
        static /*0x0*/ EventCompleteRewardView.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.GameObject> <>9__3_0;

        static /*0x109b1bc*/ <>c();
        /*0x109b21c*/ <>c();
        /*0x109b224*/ void <Hide>b__3_0(UnityEngine.GameObject f);
    }
}

class EventCompleteTotalSlide : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_itemIcon;
    /*0x20*/ UnityEngine.UI.Slider m_slider;
    /*0x28*/ LocalizeString m_percent;

    /*0x11568b0*/ EventCompleteTotalSlide();
    /*0x115365c*/ void Init(Rewards rewards, float percent, int currValue, int maxValue);
    /*0x1156788*/ void SetIcon(Rewards rewards);
}

class ScrollContent_EventCompleteEntity : ScrollContent<EventCompleteEntity>
{
    /*0xe1946c*/ ScrollContent_EventCompleteEntity();
}

class ScrollContent_EventCompleteTotalSlide : ScrollContent<EventCompleteTotalSlide>
{
    /*0xe194e4*/ ScrollContent_EventCompleteTotalSlide();
}

class DefineEvent
{
    static /*0x0*/ string CATEGORY_1ST_KEY;

    static /*0x11e4e78*/ DefineEvent();
    static /*0x11e421c*/ TableData.TableData_Event ConvertTableDataEventByPass(TableData.TableData_Eventpass dataPass);
    static /*0x11e435c*/ bool IsClearTrigger(string triggerString, int score, int destScore);
    static /*0x11e46ac*/ bool IsClearTriggerByClient(string triggerString);

    enum TRIGGERS
    {
        MAZE_CLEAR = 0,
        DAILY_QUEST_EXCHANGE = 1,
        WEEKLY_QUEST_EXCHANGE = 2,
        IDLE = 3,
        USER_LEVEL = 4,
        BATTLEPOWER = 5,
        CHARACTER_LEVEL = 6,
        CAMPAIGN_CLEAR = 7,
        TOWER_CLEAR = 8,
        EQUIPMENT_UPGRADE = 9,
        ASCEND = 10,
        SHOP_BUY = 11,
        GACHA = 12,
        ARENA_BATTLE_WIN = 13,
        CRYSTALROOM_SLOT = 14,
        TRY = 15,
        HERO_GRADE = 16,
        CHAPTER_CLEAR = 17,
        CRYSTALROOM_LEVEL = 18,
        HERO_FACTION = 19,
        HERO_TOTAL = 20,
        CURRENCY = 21,
        CURRENCY_IDLE = 22,
        VISIT = 23,
        ARENA_WIN = 24,
        ARENA_POINT = 25,
        ARENA_TRY = 26,
        PURCHASE_STORE = 27,
        PURCHASE_GOODS = 28,
        FIRST_PURCHASE_STORE = 29,
        FIRST_PURCHASE_GOODS = 30,
        DUNGEONCONDITIONREWARDFIND = 31,
        DUNGEONPROGRESS = 32,
        DUNGEONENTER = 33,
        DUNGEONFIND = 34,
        DUNGEON = 35,
        DISPATCH = 36,
        TAKE_IDLE = 37,
        VOTE_RACE = 38,
        CLEAN_GUILDROOM = 39,
        HERO_LEVELUP = 40,
        DEFEAT = 41,
        SPEND = 42,
        TOWER_SPIRIT_CLEAR = 43,
        GUILDBOSS_BATTLE_FINISH = 44,
        WORLDBOSS = 45,
        JOIN = 46,
        GATE_OPEN = 47,
        PVERANKING_CLEAR = 48,
        PVERANKING = 49,
        LONG_TIME_NO_SEE = 50,
        FURNITURE_PLACE = 51,
        HOUSING = 52,
        FUNRNITURE_GET = 53,
        FUNRNITURE_GACHA = 54,
        FUNRNITURE_BUY = 55,
        LOGIN = 56,
        EVENTQUEST = 57,
        EVENTPOINT = 58,
        GET = 59,
        TAKE = 60,
        EVENTCOMPLETE1ST = 61,
        NULL = 62,
    }

    enum EVENT_TYPE
    {
        SINGLE = 0,
        GROUP = 1,
        SELECT = 2,
        BUYINAPP = 3,
        EXCHANGE = 4,
        ATTENDANCE = 5,
        MISSION = 6,
        HOTTIME = 7,
        PASS = 8,
        COMPLETE = 9,
        QUEST = 10,
        BOSS = 11,
        ROULETTE = 12,
        NULL = 13,
    }

    enum TAB_TYPE
    {
        LOCK = 0,
        UNLOCK = 1,
        SELECTED = 2,
    }

    enum EXCHANGE_EVENT_TYPE
    {
        NORMAL = 0,
        SHOP = 1,
    }

    enum EVENTQUESTTYPE
    {
        QUEST = 0,
        POINT = 1,
    }

    enum BATTLEPASS
    {
        ROYALPASS = 1,
        BATTLEPASS = 2,
    }

    class TriggerData
    {
        /*0x10*/ int Index;
        /*0x18*/ string Trigger;
        /*0x20*/ string TriggerType;
        /*0x28*/ int TriggerRequireValue;
        /*0x30*/ string[] TriggerSplits;
        /*0x38*/ int[] ParamArray;
        /*0x40*/ DefineEvent.TRIGGERS TriggerEnum;
        /*0x44*/ bool isGte;

        /*0x1077628*/ TriggerData();
        /*0x1077784*/ TriggerData(TableData.TableData_Eventcurrencylocal currencyLocal);
        /*0x1077aec*/ TriggerData(string trigger, int[] paramArray);
        /*0x1077b74*/ TriggerData(string trigger, string triggerType, int triggerRequireValue, int index, int[] paramArray);
        /*0x10778c4*/ void Init(string trigger, string triggerType, int triggerRequireValue, int index, int[] paramArray);
        /*0x107768c*/ void Clear();
        /*0x1077c18*/ bool IsUnlockTrigger();
        /*0x1077c74*/ bool IsMoveDest();
        /*0x1077cd0*/ void MoveTrigger();
        /*0x1077d2c*/ string GetTriggerInfoKey();
        /*0x1077d88*/ string GetTriggerTitleKey();
        /*0x1077de4*/ int GetTriggerDestPoint(int defaultScore);
        /*0x1077f10*/ bool IsClearTrigger(int score, int destScore);
        /*0x1077f90*/ bool IsClearTriggerClientSelf();
        /*0x1077ff8*/ bool CheckTrigger(string trigger);
        /*0x1078014*/ bool CheckTrigger(string trigger, int requireValue);
        /*0x1078078*/ bool CheckTrigger(string trigger, string triggerType, int requireValue);
    }

    enum EVENT_MISSION_TYPE
    {
        NONE = 0,
        DAILY = 1,
        DAILYEND = 2,
        DAILYCLEAR = 3,
        STEPCLEAR = 4,
    }
}

class EventBannerEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Image m_bannerImage;
    /*0x20*/ LocalizeString m_bannerTitleText;
    /*0x28*/ LocalizeString m_bannerInfoText;
    /*0x30*/ LocalizeString m_leftTimeText;
    /*0x38*/ UnityEngine.GameObject m_reddot;
    /*0x40*/ TableData.TableData_Event m_eventData;
    /*0x48*/ TableData.TableData_Eventpreset m_eventPreset;
    /*0x50*/ UnityEngine.Coroutine m_leftTimerCoroutine;

    /*0x114f7b0*/ EventBannerEntity();
    /*0x114dba0*/ void OnEnable();
    /*0x114dbf4*/ void OnDisable();
    /*0x114dc24*/ void InitEntity(TableData.TableData_Event eventData);
    /*0x114e8d4*/ void OnClickBanner();
    /*0x114ed68*/ void ShowPopup();
    /*0x114dcac*/ void SetBannerImage();
    /*0x114de78*/ void SetBannerTitle();
    /*0x114df94*/ void SetBannerInfo();
    /*0x114e0b0*/ void SetBannerColor();
    /*0x114e284*/ void SetReddot();
    /*0x114e300*/ void UpdateLeftTime();
    /*0x114f6d0*/ EventParentPopup ShowEventParent();
    /*0x114ea70*/ void ShowEventPopup();
    /*0x114dba4*/ void PlayLeftTimerCoroutine();
    /*0x114f744*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0x114f7b8*/ void <OnClickBanner>b__11_0();
    /*0x114f7bc*/ void <ShowPopup>b__12_0();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ EventBannerEntity <>4__this;
        /*0x18*/ int eventDay;

        /*0x109ade8*/ <>c__DisplayClass18_0();
        /*0x109adf0*/ void <UpdateLeftTime>b__0(TableData.TableData_Eventmission data);
    }

    class <>c
    {
        static /*0x0*/ EventBannerEntity.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Eventpage> <>9__18_1;
        static /*0x10*/ System.Predicate<TableData.TableData_Eventpage> <>9__20_0;

        static /*0x109ad28*/ <>c();
        /*0x109ad88*/ <>c();
        /*0x109ad90*/ bool <UpdateLeftTime>b__18_1(TableData.TableData_Eventpage eventPageData);
        /*0x109adbc*/ bool <ShowEventPopup>b__20_0(TableData.TableData_Eventpage eventPageData);
    }

    class <CoUpdateLeftTime>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventBannerEntity <>4__this;

        /*0x109ae48*/ <CoUpdateLeftTime>d__22(int <>1__state);
        /*0x109ae74*/ void System.IDisposable.Dispose();
        /*0x109ae78*/ bool MoveNext();
        /*0x109aee0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109aee8*/ void System.Collections.IEnumerator.Reset();
        /*0x109af28*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Image m_image;
    /*0x20*/ LocalizeString m_text;
    /*0x28*/ TableData.TableData_Eventpage m_eventPageData;
    /*0x30*/ bool m_isSetupDefaultPosition;
    /*0x34*/ UnityEngine.Vector3 m_imageDefaultPosition;
    /*0x40*/ UnityEngine.Vector3 m_textDefaultPosition;

    /*0x11574c4*/ EventEntity();
    /*0x1156b18*/ void InitEntity(TableData.TableData_Eventpage eventPageData);
    /*0x11574c0*/ void SetDefault();
    /*0x1156b7c*/ void SetDefaultPosition();
    /*0x1156d40*/ void SetImage(string imageKey, string imagePos);
    /*0x1157038*/ void SetText(string textKey, string textPos);
    /*0x11572d0*/ void SetTextColor(string outlineColor, string inlineColor);
}

class EventListButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ string m_categoryType;
    /*0x20*/ AtlasImage m_menuImage;
    /*0x28*/ UnityEngine.GameObject m_reddot;
    /*0x30*/ string m_activeSprite;
    /*0x38*/ string m_unactiveSprite;

    /*0x115a034*/ EventListButton();
    /*0x1159e3c*/ string GetCategoryType();
    /*0x1159e44*/ void SetReddot(bool enable);
    /*0x1159ee8*/ void SetSelectIcoc(bool enable);
    /*0x1159fa0*/ void OnClick();
}

class EventListPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefresh;
    static /*0x8*/ System.Action<string> OnChangeCategory;
    /*0x40*/ ScrollContent_EventBannerEntity m_scrollContent;
    /*0x48*/ float m_arrowSpeed;
    /*0x50*/ string m_defaultCategory;
    /*0x58*/ string m_priorityCategory;
    /*0x60*/ EventListButton[] m_buttons;
    /*0x68*/ System.Collections.Generic.List<TableData.TableData_Event> m_eventDataList;
    /*0x70*/ string m_currCategoryType;

    static /*0x115b2dc*/ EventListPopup();
    /*0x115b1e8*/ EventListPopup();
    /*0x115a08c*/ void OnCreate();
    /*0x115a090*/ void OnDelete();
    /*0x115a094*/ void OnEnter();
    /*0x115a374*/ void OnFinish();
    /*0x115a378*/ void OnLeave();
    /*0x115a650*/ void OnStart();
    /*0x115a654*/ void OnExit();
    /*0x11521bc*/ void InitEventList();
    /*0x115a874*/ void SetData();
    /*0x115a9f4*/ void SetButtons();
    /*0x115ae60*/ bool IsReddot(string categoryType);
    /*0x115ab64*/ void SetScrollContent();
    /*0x115a098*/ void BindEvent();
    /*0x115a37c*/ void RemoveEvent();
    /*0x115afb4*/ void HandleScrollContent(int index, EventBannerEntity obj);
    /*0x115b044*/ void HandleExpireEvent(TableData.TableData_Event data);
    /*0x115b0f8*/ void HandleChangeCategory(string category);
    /*0x115b048*/ void HandleRefresh();
    /*0x115b100*/ void Refresh();
    /*0x115ac4c*/ void SortEventList();
    /*0x115b2e0*/ void <OnExit>b__15_0();
    /*0x115b2e8*/ void <HandleRefresh>b__26_0();

    class <>c
    {
        static /*0x0*/ EventListPopup.<> <>9;
        static /*0x8*/ System.Comparison<TableData.TableData_Event> <>9__28_0;
        static /*0x10*/ System.Comparison<TableData.TableData_Event> <>9__28_1;

        static /*0x109b244*/ <>c();
        /*0x109b2a4*/ <>c();
        /*0x109b2ac*/ int <SortEventList>b__28_0(TableData.TableData_Event a, TableData.TableData_Event b);
        /*0x109b3bc*/ int <SortEventList>b__28_1(TableData.TableData_Event a, TableData.TableData_Event b);
    }
}

class EventManager : Singleton.Component.SingletonComponent<EventManager>
{
    static /*0x0*/ System.Action OnRefreshBuyInapp;
    static /*0x8*/ System.Action<TableData.TableData_Event> OnExpireEvent;
    static /*0x10*/ System.Action OnShowUnlockAttendEvent;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Event> m_eventDataList;
    /*0x30*/ System.Collections.Generic.List<int> m_showEventIDList;
    /*0x38*/ System.Collections.Generic.List<string> m_buyStoreHistory;
    /*0x40*/ System.Collections.Generic.List<string> m_buyHistory;
    /*0x48*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0x50*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> m_attendanceDataList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SAttend> m_attendancePacketList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SAttendReward> m_attendanceRewardPacketList;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SEventBoss> m_eventBossList;
    /*0x70*/ TableData.TableData_Event m_eventBossTableBase;
    /*0x78*/ int m_currBossIndex;
    /*0x7c*/ bool m_eventBossBattle;
    /*0x80*/ ServerProtocol.ResManufactureEnter m_completePacketData;
    /*0x88*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> m_eventCurrencyLocal;
    /*0x90*/ System.Collections.Generic.List<DefineEvent.TriggerData> m_currencyLocalTriggerData;
    /*0x98*/ System.Collections.Generic.List<PTShare.Define.SEventExchange> m_exchangeList;
    /*0xa0*/ System.Collections.Generic.List<TableData.TableData_Eventmission> m_eventMissionDataList;
    /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SMission> m_missionList;
    /*0xb0*/ System.Collections.Generic.List<TableData.TableData_Eventpass> m_passDataList;
    /*0xb8*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> m_passRewardDataList;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SPass> m_passPacketList;
    /*0xc8*/ System.Collections.Generic.List<PTShare.Define.SPassReward> m_passRewardPacketList;
    /*0xd0*/ int m_rouletteFreeCount;

    static /*0x11629e4*/ EventManager();
    static /*0x1161be0*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> <CheckReddotQuest>g__GetPointQuestList|138_0(ref EventManager.<> );
    static /*0x1161d3c*/ bool <CheckReddotQuest>g__CheckPointQuest|138_1(ref EventManager.<> );
    /*0x1162570*/ EventManager();
    /*0x115b2ec*/ void AwakeInstance();
    /*0x115b2f0*/ bool InitInstance();
    /*0x115b970*/ void ReleaseInstance();
    /*0x115bb30*/ System.Collections.Generic.List<TableData.TableData_Event> GetEventDataList();
    /*0x115a768*/ bool IsProgressCategoryType(string category);
    /*0x115bb38*/ bool IsExpire(TableData.TableData_Event eventTable);
    /*0x115bc6c*/ void RefreshInit();
    /*0x115b12c*/ void Send_EventEnter(System.Action callBack);
    /*0x115c330*/ void SetBuyInAppFirst(System.Collections.Generic.List<string> firsts, System.Collections.Generic.List<string> stores);
    /*0x115c338*/ void AddPurchaseHistory(string key);
    /*0x115c568*/ void InitBuyInApp();
    /*0x115c654*/ bool IsBuyHistory(string packageID, DefineCashShop.CashShopTabType tab);
    /*0x115cd8c*/ void AddEventData(int typeEventID, DefineEvent.EVENT_TYPE eventType);
    /*0x115d5f0*/ void AddEventData_DateTime(DefineEvent.EVENT_TYPE eventType);
    /*0x115d008*/ void AddEventDataByPass(int typeEventId);
    /*0x115d524*/ void AddEventData(TableData.TableData_Event addEvent);
    /*0x115d184*/ bool CheckExpireEvent(TableData.TableData_Event tableDataEvent, DefineEvent.EVENT_TYPE eventType);
    /*0x115d76c*/ System.Collections.IEnumerator CoLateCallFunc(System.Action callBack);
    /*0x115d7d8*/ bool IsReddot();
    /*0x114ee3c*/ bool IsReddot(TableData.TableData_Event tableDataEvent);
    /*0x114f40c*/ bool SetEventTime(LocalizeString localizeString, int typeEventID, DefineEvent.EVENT_TYPE eventType);
    /*0x114f160*/ bool SetEventTime(LocalizeString localizeString, string normalKey, string secKey, int typeEventID, DefineEvent.EVENT_TYPE eventType);
    /*0x115e4bc*/ void PlayExpireCoroutine();
    /*0x115e578*/ void HandleNextChapter();
    /*0x115e50c*/ System.Collections.IEnumerator CoUpdateExpireEvent();
    /*0x115e660*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> GetAttendanceDataList();
    /*0x115e668*/ PTShare.Define.SAttend FindAttendancePacket(int typeEventID);
    /*0x115e758*/ PTShare.Define.SAttendReward FindAttendRewardPacket(int index);
    /*0x115e848*/ void SetAttendanceRewardPacketList(System.Collections.Generic.List<PTShare.Define.SAttendReward> attendanceRewardPacketList);
    /*0x115b724*/ void InitAttendanceData();
    /*0x115e850*/ void UpdateAttendData(System.Collections.Generic.List<PTShare.Define.SAttend> attends, System.Collections.Generic.List<PTShare.Define.SAttendReward> attendRewards);
    /*0x115e858*/ void Send_AttendanceReward(PTShare.Define.SAttendReward attendReward, System.Action callBack);
    /*0x115dbac*/ bool CheckReddotAttendance(TableData.TableData_Event tableDataEvent);
    /*0x115d384*/ bool CheckShowAttendanceEvent(TableData.TableData_Event tableDataEvent);
    /*0x115ea00*/ System.Collections.IEnumerator CoOpenAttendancePopup();
    /*0x115ea6c*/ void AddEventAttendance();
    /*0x115c23c*/ void BindEventAttendance();
    /*0x115bacc*/ void RemoveEventAttendance();
    /*0x115eb14*/ void UpdateDailyChangeAttend();
    /*0x115eb40*/ System.Collections.IEnumerator CoUpdateAttend();
    /*0x115eb9c*/ void OpenEventBossPopup();
    /*0x115ed74*/ TableData.TableData_Event FindPlayingEventBossBaseTable();
    /*0x115eea0*/ TableData.TableData_Eventboss FindPlayingEventBossTable();
    /*0x115efe8*/ bool IsPlayingEventBoss();
    /*0x115f0f0*/ bool IsExpireEventBoss();
    /*0x115f244*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardData(long damage);
    /*0x115f29c*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardDataByPrev(long damage);
    /*0x115f2f4*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardDataByPrev(int hutingRewardID, long damage);
    /*0x114fb54*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardData(int rewardId, long damage);
    /*0x115f424*/ TableData.TableData_Eventbossreward CreateDummyTable(TableData.TableData_Eventbossreward prev);
    /*0x115f4b8*/ bool IsEventBossBattle();
    /*0x115f4c0*/ void SetEventBossBattle(bool enable);
    /*0x1151a28*/ int GetEventBossTryCount(int index);
    /*0x115170c*/ long GetEventBosLastDamage(int index);
    /*0x114f864*/ PTShare.Define.SEventBoss FindEventBoss(int index);
    /*0x115069c*/ void SetCurrEventBossData(int bossIndex, TableData.TableData_Event tableBase);
    /*0x115f4cc*/ TableData.TableData_Event GetCurrEventBossTable();
    /*0x115f4d4*/ int GetCurrEventBossIndex();
    /*0x115f4dc*/ void SetEventBossData(System.Collections.Generic.List<PTShare.Define.SEventBoss> eventBossList);
    /*0x115f4e4*/ void Send_BossBegin(string heroIds, System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack);
    /*0x115f688*/ void Send_BossFinish(string statistics, string playData, long lcp, string hpmps, double bossTotalDamage, System.Action<PTShare.Define.SProperty> action);
    /*0x114fd24*/ void Send_BossMopUp(int index, System.Action callBack);
    /*0x1151d2c*/ void Send_BossHistory(int bossIndex, System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack);
    /*0x115f858*/ void Send_BossReplay(string replayId, System.Action<PTShare.Define.SGuildBossReplay> callBack);
    /*0x115f9f0*/ void AddEventBoss();
    /*0x115f9f8*/ void UpdateDailyChangeEventBoss();
    /*0x115e388*/ bool CheckReddotEventBoss(TableData.TableData_Event tableDataEvent);
    /*0x115fad8*/ ServerProtocol.ResManufactureEnter GetEventCompletePacket();
    /*0x115fae0*/ int GetEventCompletePushcount(TableData.TableData_Eventcomplete table);
    /*0x1153648*/ int GetEventCompleteCount(TableData.TableData_Eventcomplete table);
    /*0x115fbec*/ void AddEventComplete();
    /*0x114ebdc*/ void Send_CompleteEnter(System.Action callBack);
    /*0x1154938*/ void Send_CompleteInsert(int index, int amount, System.Action callBack);
    /*0x115b860*/ void InitTrigger();
    /*0x115fbf4*/ System.Collections.Generic.List<Rewards> GetDailyQuestClearReward(int progressNumber);
    /*0x11600f8*/ System.Collections.Generic.List<Rewards> GetWeeklyQuestClearReward(int progressNumber);
    /*0x11601e8*/ System.Collections.Generic.List<Rewards> GetMazeClearFloorReward(int floor);
    /*0x115fce4*/ System.Collections.Generic.List<Rewards> GetCurrencyLocalReward(string trigger);
    /*0x11602d4*/ DefineEvent.TriggerData FindCurrencyLocalTriggerData(string trigger, string type, int requireValue);
    /*0x11603d8*/ PTShare.Define.SEventExchange FindEventExchangePacket(int index);
    /*0x1158408*/ int FindEventExchangeCount(int index, int defaultCount);
    /*0x11604c8*/ void SetExchangePacketList(System.Collections.Generic.List<PTShare.Define.SEventExchange> eventExchangePacketList);
    /*0x115d888*/ bool CheckReddotExchange(TableData.TableData_Event tableDataEvent);
    /*0x115b858*/ void InitEventExchange();
    /*0x1160558*/ void Send_EventExchange(int index, int count, int defaultLimitCount, System.Action callBack);
    /*0x1160710*/ System.Collections.Generic.List<TableData.TableData_Eventmission> GetEventMissionData();
    /*0x114f070*/ PTShare.Define.SMission FindMissionPacket(int typeEventID);
    /*0x1160718*/ void InitEvnetMission();
    /*0x1160828*/ void Send_EventMissionEnter(System.Action callBack);
    /*0x11609b8*/ void Send_EventMissionTake(int missionIndex, int eventMissionID, int missionPoint, System.Action callBack);
    /*0x1160b70*/ void Send_EventMissionExchange(int missionId, int pointIndex, System.Action callBack);
    /*0x1160d20*/ void AddEventMission();
    /*0x115dcec*/ bool CheckReddotMission(TableData.TableData_Event tableDataEvent);
    /*0x1160dc8*/ bool CheckShowMissionEvent(TableData.TableData_Event tableDataEvent);
    /*0x1161004*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> GetPassDataList();
    /*0x116100c*/ TableData.TableData_Eventpass FindPassData(int eventId);
    /*0x114ef80*/ PTShare.Define.SPass FindPassPacket(int eventId);
    /*0x11610fc*/ PTShare.Define.SPassReward FindPassRewardPacket(int rewardTableIndex);
    /*0x11611ec*/ void SetPassRewardPacketList(System.Collections.Generic.List<PTShare.Define.SPassReward> passRewardPacketList);
    /*0x115b394*/ void InitBattlePassData();
    /*0x11611f4*/ System.Collections.Generic.List<System.ValueTuple<string, int>> GetPassIdleRewardData();
    /*0x115be60*/ void CheckBattlePassExpire(System.Action callBack);
    /*0x115e030*/ bool CheckReddotPass(TableData.TableData_Event tableDataEvent);
    /*0x1161380*/ void IncreasePassPoint(System.Collections.Generic.List<PTShare.Define.SPassPoint> sPassPointList);
    /*0x116141c*/ void IncreasePassPoint(PTShare.Define.SPassPoint sPassPoint);
    /*0x1161534*/ void SetPassPoint(PTShare.Define.SPassPoint sPassPoint);
    /*0x1161644*/ void SetPassPremium(int eventId);
    /*0x116174c*/ void AddPass(PTShare.Define.SPass sPass);
    /*0x11617c4*/ void Send_BattlePassReward(int passRewardIndex, System.Action callBack);
    /*0x116196c*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> GetMazeClearFloorRewardBySPass(int floor);
    /*0x1161984*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> ParseSPoint(System.Collections.Generic.List<Rewards> rewardList);
    /*0x1161acc*/ void AddEventPass();
    /*0x1161b74*/ bool AddEventQuest();
    /*0x115e188*/ bool CheckReddotQuest(TableData.TableData_Event tableDataEvent);
    /*0x1161f60*/ bool IsShowRouletteMainBanner();
    /*0x1162070*/ void OpenEventRoulettePopup();
    /*0x1162300*/ int GetRouletteFreeCount();
    /*0x1162358*/ void SetRouletteFreeCount(int count);
    /*0x1162360*/ bool AddEventRoulette();
    /*0x115e4a0*/ bool CheckReddotRoullet();
    /*0x11623cc*/ void Send_Roulette(int eventId, int priceId, System.Action<PTShare.Define.SProperty> callBack);
    /*0x11629e8*/ void <RefreshInit>b__13_0();
    /*0x1162abc*/ void <InitBuyInApp>b__17_0(TableData.TableData_Event data);
    /*0x1162de8*/ void <HandleNextChapter>b__30_0();
    /*0x1162e14*/ void <InitAttendanceData>b__40_0(TableData.TableData_Eventattendance attendanceData);
    /*0x1162e78*/ void <InitTrigger>b__91_0(TableData.TableData_Eventcurrencylocal data);
    /*0x1162f0c*/ void <InitEvnetMission>b__108_0(TableData.TableData_Eventmission missionData);
    /*0x1162f70*/ void <InitBattlePassData>b__124_0(TableData.TableData_Eventpass passData);
    /*0x1162fd4*/ void <InitBattlePassData>b__124_1(TableData.TableData_Eventpassreward passData);
    /*0x1163038*/ void <InitBattlePassData>b__124_2(TableData.TableData_Eventcurrencylocal passData);
    /*0x116309c*/ void <InitBattlePassData>b__124_3(PTShare.Define.SPass packetData);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ string categoryToUpper;

        /*0x109bfd4*/ <>c__DisplayClass11_0();
        /*0x109bfdc*/ bool <IsProgressCategoryType>b__0(TableData.TableData_Event f);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action <>9__2;
        /*0x28*/ System.Action <>9__1;

        /*0x109c794*/ <>c__DisplayClass14_0();
        /*0x109c79c*/ void <Send_EventEnter>b__0();
        /*0x109c83c*/ void <Send_EventEnter>b__1();
        /*0x109ca30*/ void <Send_EventEnter>b__2();
    }

    class <>c
    {
        static /*0x0*/ EventManager.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Event> <>9__16_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Event> <>9__45_0;
        static /*0x18*/ System.Predicate<TableData.TableData_Eventpage> <>9__45_1;
        static /*0x20*/ System.Predicate<TableData.TableData_Eventpage> <>9__55_0;
        static /*0x28*/ System.Action<PTShare.Define.SItem> <>9__88_1;
        static /*0x30*/ System.Predicate<TableData.TableData_Eventpage> <>9__141_0;

        static /*0x109b514*/ <>c();
        /*0x109b574*/ <>c();
        /*0x109b57c*/ bool <AddPurchaseHistory>b__16_0(TableData.TableData_Event data);
        /*0x109b610*/ bool <CoOpenAttendancePopup>b__45_0(TableData.TableData_Event data);
        /*0x109b704*/ bool <CoOpenAttendancePopup>b__45_1(TableData.TableData_Eventpage eventPageData);
        /*0x109b730*/ bool <OpenEventBossPopup>b__55_0(TableData.TableData_Eventpage f);
        /*0x109b75c*/ void <Send_CompleteInsert>b__88_1(PTShare.Define.SItem m);
        /*0x109b7e4*/ bool <OpenEventRoulettePopup>b__141_0(TableData.TableData_Eventpage f);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ DefineEvent.TriggerData triggerData;

        /*0x109ca78*/ <>c__DisplayClass17_0();
        /*0x109ca80*/ bool <InitBuyInApp>b__1(string str);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string packageID;

        /*0x109cacc*/ <>c__DisplayClass18_0();
        /*0x109cad4*/ bool <IsBuyHistory>b__0(TableData.TableData_Cashshopdaily data);
        /*0x109cb00*/ bool <IsBuyHistory>b__1(TableData.TableData_Cashshopweekly data);
        /*0x109cb2c*/ bool <IsBuyHistory>b__2(TableData.TableData_Cashshopmonthly data);
        /*0x109cb58*/ bool <IsBuyHistory>b__3(TableData.TableData_Cashshopstar data);
        /*0x109cb84*/ bool <IsBuyHistory>b__4(TableData.TableData_Cashshoplimit data);
        /*0x109cbb0*/ bool <IsBuyHistory>b__5(TableData.TableData_Cashshopsubscription data);
        /*0x109cbdc*/ bool <IsBuyHistory>b__6(TableData.TableData_Cashshophero data);
        /*0x109cc08*/ bool <IsBuyHistory>b__7(TableData.TableData_Cashshopbeginner data);
        /*0x109cc34*/ bool <IsBuyHistory>b__8(TableData.TableData_Cashshopskinpiece data);
        /*0x109cc60*/ bool <IsBuyHistory>b__9(TableData.TableData_Cashshopskin data);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ int typeEventID;
        /*0x14*/ DefineEvent.EVENT_TYPE eventType;

        /*0x109cc8c*/ <>c__DisplayClass19_0();
        /*0x109cc94*/ bool <AddEventData>b__0(TableData.TableData_Event data);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ DefineEvent.EVENT_TYPE eventType;
        /*0x18*/ System.DateTime startTime;
        /*0x20*/ System.DateTime endTime;
        /*0x28*/ System.DateTime now;
        /*0x30*/ EventManager <>4__this;

        /*0x109cd50*/ <>c__DisplayClass20_0();
        /*0x109cd58*/ void <AddEventData_DateTime>b__0(TableData.TableData_Event data);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int typeEventId;

        /*0x109cf70*/ <>c__DisplayClass21_0();
        /*0x109cf78*/ bool <AddEventDataByPass>b__0(TableData.TableData_Eventpass data);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ TableData.TableData_Event tableDataEvent;

        /*0x109cf9c*/ <>c__DisplayClass23_0();
        /*0x109cfa4*/ void <CheckExpireEvent>b__0();
    }

    class <CoLateCallFunc>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action callBack;

        /*0x109df24*/ <CoLateCallFunc>d__24(int <>1__state);
        /*0x109df50*/ void System.IDisposable.Dispose();
        /*0x109df54*/ bool MoveNext();
        /*0x109dfb0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109dfb8*/ void System.Collections.IEnumerator.Reset();
        /*0x109dff8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ int typeEventID;
        /*0x14*/ DefineEvent.EVENT_TYPE eventType;

        /*0x109d01c*/ <>c__DisplayClass27_0();
        /*0x109d024*/ bool <SetEventTime>b__0(TableData.TableData_Event table);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ int typeEventID;
        /*0x14*/ DefineEvent.EVENT_TYPE eventType;

        /*0x109d0fc*/ <>c__DisplayClass28_0();
        /*0x109d104*/ bool <SetEventTime>b__0(TableData.TableData_Event table);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int i;

        /*0x109d1dc*/ <>c__DisplayClass31_0();
    }

    class <>c__DisplayClass31_1
    {
        /*0x10*/ int eventDay;
        /*0x18*/ EventManager.<> CS$<>8__locals1;

        /*0x109d1e4*/ <>c__DisplayClass31_1();
        /*0x109d1ec*/ void <CoUpdateExpireEvent>b__0(TableData.TableData_Eventmission data);
    }

    class <CoUpdateExpireEvent>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventManager <>4__this;
        /*0x28*/ TableData.TableData_Event <minExpireData>5__2;

        /*0x109e5c0*/ <CoUpdateExpireEvent>d__31(int <>1__state);
        /*0x109e5ec*/ void System.IDisposable.Dispose();
        /*0x109e5f0*/ bool MoveNext();
        /*0x109ec9c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109eca4*/ void System.Collections.IEnumerator.Reset();
        /*0x109ece4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ int typeEventID;

        /*0x109d2a8*/ <>c__DisplayClass37_0();
        /*0x109d2b0*/ bool <FindAttendancePacket>b__0(PTShare.Define.SAttend packet);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ int index;

        /*0x109d2d4*/ <>c__DisplayClass38_0();
        /*0x109d2dc*/ bool <FindAttendRewardPacket>b__0(PTShare.Define.SAttendReward packet);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ PTShare.Define.SAttendReward attendReward;
        /*0x20*/ System.Action callBack;

        /*0x109d300*/ <>c__DisplayClass42_0();
        /*0x109d308*/ void <Send_AttendanceReward>b__0(ServerProtocol.ResEventAttendReward instance);
    }

    class <CoOpenAttendancePopup>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventManager <>4__this;

        /*0x109e000*/ <CoOpenAttendancePopup>d__45(int <>1__state);
        /*0x109e02c*/ void System.IDisposable.Dispose();
        /*0x109e030*/ bool MoveNext();
        /*0x109e3e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109e3f0*/ void System.Collections.IEnumerator.Reset();
        /*0x109e430*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoUpdateAttend>d__50 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x109e438*/ <CoUpdateAttend>d__50(int <>1__state);
        /*0x109e464*/ void System.IDisposable.Dispose();
        /*0x109e468*/ bool MoveNext();
        /*0x109e570*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109e578*/ void System.Collections.IEnumerator.Reset();
        /*0x109e5b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass69_0
    {
        /*0x10*/ int index;

        /*0x109d4b0*/ <>c__DisplayClass69_0();
        /*0x109d4b8*/ bool <FindEventBoss>b__0(PTShare.Define.SEventBoss f);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack;

        /*0x109d4dc*/ <>c__DisplayClass74_0();
        /*0x109d4e4*/ void <Send_BossBegin>b__0(ServerProtocol.ResEventBegin instance);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ double bossTotalDamage;
        /*0x20*/ System.Action<PTShare.Define.SProperty> action;

        /*0x109d598*/ <>c__DisplayClass75_0();
        /*0x109d5a0*/ void <Send_BossFinish>b__0(ServerProtocol.ResEventFinish instance);
    }

    class <>c__DisplayClass76_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action callBack;

        /*0x109d6f4*/ <>c__DisplayClass76_0();
        /*0x109d6fc*/ void <Send_BossMopUp>b__0(ServerProtocol.ResEventMopUp instance);
    }

    class <>c__DisplayClass77_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack;

        /*0x109d878*/ <>c__DisplayClass77_0();
        /*0x109d880*/ void <Send_BossHistory>b__0(ServerProtocol.ResEventBossHistory instance);
    }

    class <>c__DisplayClass78_0
    {
        /*0x10*/ System.Action<PTShare.Define.SGuildBossReplay> callBack;

        /*0x109d8f8*/ <>c__DisplayClass78_0();
        /*0x109d900*/ void <Send_BossReplay>b__0(ServerProtocol.ResEventReplay instance);
    }

    class <>c__DisplayClass81_0
    {
        /*0x10*/ TableData.TableData_Eventboss bossTable;

        /*0x109d978*/ <>c__DisplayClass81_0();
        /*0x109d980*/ bool <CheckReddotEventBoss>b__0(PTShare.Define.SEventBoss f);
    }

    class <>c__DisplayClass84_0
    {
        /*0x10*/ TableData.TableData_Eventcomplete table;

        /*0x109d9b0*/ <>c__DisplayClass84_0();
        /*0x109d9b8*/ bool <GetEventCompletePushcount>b__0(PTShare.Define.SManufacture f);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x109d9e8*/ <>c__DisplayClass87_0();
        /*0x109d9f0*/ void <Send_CompleteEnter>b__0(ServerProtocol.ResManufactureEnter response);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x109da1c*/ <>c__DisplayClass88_0();
        /*0x109da24*/ void <Send_CompleteInsert>b__0(ServerProtocol.ResManufactureInsert response);
    }

    class <>c__DisplayClass88_1
    {
        /*0x10*/ ServerProtocol.ResManufactureInsert response;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SManufacture> <>9__2;

        /*0x109dd88*/ <>c__DisplayClass88_1();
        /*0x109dd90*/ bool <Send_CompleteInsert>b__2(PTShare.Define.SManufacture f);
    }

    class <>c__DisplayClass95_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewards;
        /*0x18*/ System.Action<Rewards> <>9__0;

        /*0x109de28*/ <>c__DisplayClass95_0();
        /*0x109de30*/ void <GetCurrencyLocalReward>b__0(Rewards data);
    }

    class <>c__DisplayClass96_0
    {
        /*0x10*/ string trigger;
        /*0x18*/ string type;
        /*0x20*/ int requireValue;

        /*0x109dec8*/ <>c__DisplayClass96_0();
        /*0x109ded0*/ bool <FindCurrencyLocalTriggerData>b__0(DefineEvent.TriggerData data);
    }

    class <>c__DisplayClass98_0
    {
        /*0x10*/ int index;

        /*0x109def8*/ <>c__DisplayClass98_0();
        /*0x109df00*/ bool <FindEventExchangePacket>b__0(PTShare.Define.SEventExchange data);
    }

    class <>c__DisplayClass103_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int index;
        /*0x1c*/ int count;
        /*0x20*/ int defaultLimitCount;
        /*0x28*/ System.Action callBack;

        /*0x109b810*/ <>c__DisplayClass103_0();
        /*0x109b818*/ void <Send_EventExchange>b__0(ServerProtocol.ResEventExchange instance);
    }

    class <>c__DisplayClass107_0
    {
        /*0x10*/ int typeEventID;

        /*0x109ba94*/ <>c__DisplayClass107_0();
        /*0x109ba9c*/ bool <FindMissionPacket>b__0(PTShare.Define.SMission data);
    }

    class <>c__DisplayClass109_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x109bac0*/ <>c__DisplayClass109_0();
        /*0x109bac8*/ void <Send_EventMissionEnter>b__0(ServerProtocol.ResMissionEnter instance);
    }

    class <>c__DisplayClass110_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int eventMissionID;
        /*0x1c*/ int missionIndex;
        /*0x20*/ int missionPoint;
        /*0x28*/ System.Action callBack;
        /*0x30*/ System.Predicate<PTShare.Define.SQuestRow> <>9__1;

        /*0x109bb04*/ <>c__DisplayClass110_0();
        /*0x109bb0c*/ void <Send_EventMissionTake>b__0(ServerProtocol.ResMissionTake instance);
        /*0x109bd58*/ bool <Send_EventMissionTake>b__1(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass111_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int missionId;
        /*0x1c*/ int pointIndex;
        /*0x20*/ System.Action callBack;

        /*0x109bd7c*/ <>c__DisplayClass111_0();
        /*0x109bd84*/ void <Send_EventMissionExchange>b__0(ServerProtocol.ResMissionExchange instance);
    }

    class <>c__DisplayClass113_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventmission> missionDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SQuestRow> <>9__0;

        /*0x109bf3c*/ <>c__DisplayClass113_0();
        /*0x109bf44*/ bool <CheckReddotMission>b__0(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass120_0
    {
        /*0x10*/ int eventId;

        /*0x109c01c*/ <>c__DisplayClass120_0();
        /*0x109c024*/ bool <FindPassData>b__0(TableData.TableData_Eventpass data);
    }

    class <>c__DisplayClass121_0
    {
        /*0x10*/ int eventId;

        /*0x109c048*/ <>c__DisplayClass121_0();
        /*0x109c050*/ bool <FindPassPacket>b__0(PTShare.Define.SPass packet);
    }

    class <>c__DisplayClass122_0
    {
        /*0x10*/ int rewardTableIndex;

        /*0x109c074*/ <>c__DisplayClass122_0();
        /*0x109c07c*/ bool <FindPassRewardPacket>b__0(PTShare.Define.SPassReward pacekt);
    }

    class <>c__DisplayClass125_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<System.ValueTuple<string, int>> idleRewardData;
        /*0x20*/ int i;
        /*0x28*/ System.Action<TableData.TableData_Eventcurrencylocal> <>9__0;

        /*0x109c0a0*/ <>c__DisplayClass125_0();
        /*0x109c0a8*/ void <GetPassIdleRewardData>b__0(TableData.TableData_Eventcurrencylocal data);
    }

    class <>c__DisplayClass126_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SPass> refreshList;
        /*0x20*/ int i;
        /*0x28*/ System.Action<ServerProtocol.ResEventPassRefresh> <>9__0;

        /*0x109c1a8*/ <>c__DisplayClass126_0();
        /*0x109c1b0*/ void <CheckBattlePassExpire>b__0(ServerProtocol.ResEventPassRefresh instance);
    }

    class <>c__DisplayClass129_0
    {
        /*0x10*/ int eventid;

        /*0x109c274*/ <>c__DisplayClass129_0();
        /*0x109c27c*/ bool <IncreasePassPoint>b__0(PTShare.Define.SPass packetData);
    }

    class <>c__DisplayClass130_0
    {
        /*0x10*/ int eventid;

        /*0x109c2a0*/ <>c__DisplayClass130_0();
        /*0x109c2a8*/ bool <SetPassPoint>b__0(PTShare.Define.SPass packetData);
    }

    class <>c__DisplayClass131_0
    {
        /*0x10*/ int eventId;

        /*0x109c2cc*/ <>c__DisplayClass131_0();
        /*0x109c2d4*/ bool <SetPassPremium>b__0(PTShare.Define.SPass packetData);
    }

    class <>c__DisplayClass133_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int passRewardIndex;
        /*0x20*/ System.Action callBack;

        /*0x109c2f8*/ <>c__DisplayClass133_0();
        /*0x109c300*/ void <Send_BattlePassReward>b__0(ServerProtocol.ResEventPassReward instance);
    }

    class <>c__DisplayClass135_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passPointList;

        /*0x109c524*/ <>c__DisplayClass135_0();
        /*0x109c52c*/ void <ParseSPoint>b__0(Rewards data);
    }

    struct <>c__DisplayClass138_0
    {
        /*0x10*/ TableData.TableData_Event tableDataEvent;
        /*0x18*/ PTShare.Define.SQuest sQuest;
        /*0x20*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> pointQuestList;
    }

    class <>c__DisplayClass146_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> callBack;

        /*0x109c63c*/ <>c__DisplayClass146_0();
        /*0x109c644*/ void <Send_Roulette>b__0(ServerProtocol.ResEventRoulette response);
    }
}

class EventMissionEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_missionName;
    /*0x20*/ LocalizeString m_missionInfo;
    /*0x28*/ LocalizeString[] m_missionPoints;
    /*0x30*/ UnityEngine.GameObject m_rewardPointParent;
    /*0x38*/ ItemTableRewardSlot m_rewardSlot;
    /*0x40*/ UnityEngine.UI.Button m_rewardBtn;
    /*0x48*/ UnityEngine.UI.Button m_quickMoveBtn;
    /*0x50*/ TableData.TableData_Eventmission m_eventMissionData;
    /*0x58*/ DefineEvent.TriggerData m_triggerData;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x1163fbc*/ EventMissionEntity();
    /*0x1163100*/ void InitEntity(TableData.TableData_Eventmission eventMissionData);
    /*0x1163c5c*/ int GetScore();
    /*0x1163d58*/ bool IsReceiveReward();
    /*0x1163148*/ void SetMissionData();
    /*0x11633b4*/ void SetReward();
    /*0x116328c*/ void SetMissionPoint();
    /*0x1163584*/ void SetTitle();
    /*0x11636d4*/ void SetInfo();
    /*0x11638a4*/ void UpdateButton();
    /*0x1163d74*/ bool IsUnlockContent();
    /*0x1163d90*/ void OnClickReward();
    /*0x1163f1c*/ void OnClickMove();
    /*0x1164060*/ bool <GetScore>b__11_0(PTShare.Define.SQuestRow data);
    /*0x1164090*/ void <OnClickReward>b__20_0();
}

class EventMissionPaybackEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_value;
    /*0x20*/ LocalizeString m_progress;
    /*0x28*/ ItemTableRewardSlot[] m_rewardSlots;
    /*0x30*/ UnityEngine.GameObject m_checkObject;
    /*0x38*/ UnityEngine.GameObject m_checkIcon;
    /*0x40*/ AtlasImage m_rewardFrame;
    /*0x48*/ UnityEngine.UI.Button m_rewardBtn;
    /*0x50*/ UnityEngine.UI.Button m_quickMoveBtn;
    /*0x58*/ TableData.TableData_Eventmission m_eventMissionData;
    /*0x60*/ DefineEvent.TriggerData m_triggerData;

    /*0x11655dc*/ EventMissionPaybackEntity();
    /*0x1164120*/ void InitEntity(TableData.TableData_Eventmission eventMissionData);
    /*0x1164158*/ void SetMissionData();
    /*0x116429c*/ void SetUI();
    /*0x11647d0*/ void SetRewards();
    /*0x11649d4*/ void UpdateButton();
    /*0x1164e00*/ int GetScore();
    /*0x1164de4*/ bool IsReceiveReward();
    /*0x1164f68*/ void OnClickReward();
    /*0x11650f4*/ void OnClickMove();
    /*0x1165438*/ void DoRewardEffect();
    /*0x1164efc*/ System.Collections.IEnumerator CoRewardEffectLoop();
    /*0x1165640*/ bool <GetScore>b__15_0(PTShare.Define.SQuestRow data);
    /*0x1165670*/ void <OnClickReward>b__17_0();
    /*0x1165674*/ void <OnClickMove>b__18_0(bool confirm);

    class <CoRewardEffectLoop>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPaybackEntity <>4__this;

        /*0x109ecec*/ <CoRewardEffectLoop>d__20(int <>1__state);
        /*0x109ed18*/ void System.IDisposable.Dispose();
        /*0x109ed1c*/ bool MoveNext();
        /*0x109eed0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109eed8*/ void System.Collections.IEnumerator.Reset();
        /*0x109ef18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventMissionPointRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_pointRewardSlot;
    /*0x20*/ LocalizeString m_pointRewardText;
    /*0x28*/ AtlasImage m_rewardButtonImage;
    /*0x30*/ UnityEngine.GameObject m_soldOutObject;
    /*0x38*/ AtlasImage m_checkIcon;
    /*0x40*/ bool m_isSoldOut;
    /*0x41*/ bool m_isOpen;
    /*0x48*/ TableData.TableData_Eventmissionpoint m_missionPointData;

    /*0x11cc1f4*/ EventMissionPointRewardEntity();
    /*0x11cbd94*/ void OnDisable();
    /*0x11cbd9c*/ void Init_Entity(TableData.TableData_Eventmissionpoint missionPointTable, bool isOpen, bool soldOut);
    /*0x11cc018*/ void OnClickReward();
    /*0x11cc064*/ System.Collections.IEnumerator CoShowReward();
    /*0x11cc0d0*/ void DoRewardEffect();
    /*0x11cbfac*/ System.Collections.IEnumerator CoRewardEffectLoop();

    class <>c
    {
        static /*0x0*/ EventMissionPointRewardEntity.<> <>9;
        static /*0x8*/ System.Action <>9__11_0;

        static /*0x109ef20*/ <>c();
        /*0x109ef80*/ <>c();
        /*0x109ef88*/ void <CoShowReward>b__11_0();
    }

    class <CoShowReward>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPointRewardEntity <>4__this;

        /*0x109f2c8*/ <CoShowReward>d__11(int <>1__state);
        /*0x109f2f4*/ void System.IDisposable.Dispose();
        /*0x109f2f8*/ bool MoveNext();
        /*0x109f4d4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109f4dc*/ void System.Collections.IEnumerator.Reset();
        /*0x109f51c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRewardEffectLoop>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPointRewardEntity <>4__this;

        /*0x109f018*/ <CoRewardEffectLoop>d__13(int <>1__state);
        /*0x109f044*/ void System.IDisposable.Dispose();
        /*0x109f048*/ bool MoveNext();
        /*0x109f278*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109f280*/ void System.Collections.IEnumerator.Reset();
        /*0x109f2c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventMissionPopup : EventPopupBase
{
    static float GRID_PADDING = 3;
    static /*0x0*/ System.Action<bool> OnRefreshTab;
    static /*0x8*/ System.Action<int> OnChangeTab;
    /*0x78*/ EventMissionTab m_eventMissionTabPrefab;
    /*0x80*/ UnityEngine.UI.GridLayoutGroup m_tabGridGroup;
    /*0x88*/ ScrollContent_EventMissionEntity m_scrollContent;
    /*0x90*/ EventMissionPointRewardEntity[] m_eventPointRewardEntitys;
    /*0x98*/ LocalizeString m_accPointText;
    /*0xa0*/ System.Collections.Generic.List<EventMissionTab> m_eventMissionTabEntityList;
    /*0xa8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventmission>> m_eventMissionDataDictionary;
    /*0xb0*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> m_eventMissionPointList;
    /*0xb8*/ PTShare.Define.SMission m_sMission;
    /*0xc0*/ int m_currTabIndex;
    /*0xc4*/ DefineEvent.EVENT_MISSION_TYPE m_eventMissionType;

    static /*0x11ce9d8*/ EventMissionPopup();
    /*0x11ce910*/ EventMissionPopup();
    /*0x11cc434*/ void OnCreate();
    /*0x11cc438*/ void OnDelete();
    /*0x11cc43c*/ void OnEnter();
    /*0x11cc44c*/ void OnFinish();
    /*0x11cc450*/ void OnLeave();
    /*0x11cc460*/ void OnStart();
    /*0x11cc464*/ void OnExit();
    /*0x11cc538*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11ccc9c*/ void SetEventMissionData();
    /*0x11cc7f8*/ void SetEventTab();
    /*0x11cd02c*/ System.Collections.IEnumerator CoUpdateTab();
    /*0x11cd098*/ void UpdateEventTab();
    /*0x11cd230*/ void UpdateReddot();
    /*0x11cd63c*/ void UpdateEventRewards();
    /*0x11ccc38*/ void UpdateTab(int tab, bool resetscrollposition);
    /*0x11cd93c*/ void UpdateMissionScrollContent(bool resetscrollposition);
    /*0x11ccbc8*/ bool UnLockTab(int tabIndex);
    /*0x11cdb9c*/ void UpdateLeftTime();
    /*0x11cde2c*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0x11cda4c*/ bool AllClearTabMission(int tabIndex);
    /*0x11cde98*/ void BindEvent();
    /*0x11ce0d0*/ void RemoveEvent();
    /*0x11ce2f4*/ void HandleRefreshTab(bool isLog);
    /*0x11ce7d8*/ void HandleOnChangeTab(int tab);
    /*0x11ce864*/ void HandleScrollContent(int index, EventMissionEntity obj);
    /*0x11ce9dc*/ void <OnExit>b__20_0();

    class <CoUpdateTab>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPopup <>4__this;

        /*0x109f8bc*/ <CoUpdateTab>d__24(int <>1__state);
        /*0x109f8e8*/ void System.IDisposable.Dispose();
        /*0x109f8ec*/ bool MoveNext();
        /*0x109fabc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109fac4*/ void System.Collections.IEnumerator.Reset();
        /*0x109fb04*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ System.Collections.Generic.Dictionary.Enumerator<int, System.Collections.Generic.List<TableData.TableData_Eventmission>> iter;

        /*0x109f524*/ <>c__DisplayClass26_0();
    }

    class <>c__DisplayClass26_1
    {
        /*0x10*/ int i;
        /*0x18*/ EventMissionPopup.<> CS$<>8__locals1;

        /*0x109f52c*/ <>c__DisplayClass26_1();
        /*0x109f534*/ bool <UpdateReddot>b__0(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ EventMissionPopup <>4__this;
        /*0x18*/ int eventDay;

        /*0x109f5e4*/ <>c__DisplayClass31_0();
        /*0x109f5ec*/ void <UpdateLeftTime>b__0(TableData.TableData_Eventmission data);
    }

    class <CoUpdateLeftTime>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPopup <>4__this;

        /*0x109f7cc*/ <CoUpdateLeftTime>d__32(int <>1__state);
        /*0x109f7f8*/ void System.IDisposable.Dispose();
        /*0x109f7fc*/ bool MoveNext();
        /*0x109f86c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109f874*/ void System.Collections.IEnumerator.Reset();
        /*0x109f8b4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ EventMissionPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SQuestRow> <>9__0;

        /*0x109f644*/ <>c__DisplayClass36_0();
        /*0x109f64c*/ bool <HandleRefreshTab>b__0(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass36_1
    {
        /*0x10*/ System.Collections.Generic.Dictionary.Enumerator<int, System.Collections.Generic.List<TableData.TableData_Eventmission>> iter;

        /*0x109f70c*/ <>c__DisplayClass36_1();
    }

    class <>c__DisplayClass36_2
    {
        /*0x10*/ int i;
        /*0x18*/ EventMissionPopup.<> CS$<>8__locals1;

        /*0x109f714*/ <>c__DisplayClass36_2();
        /*0x109f71c*/ bool <HandleRefreshTab>b__1(PTShare.Define.SQuestRow data);
    }
}

class EventMissionPopup_Payback : EventMissionPopup
{
    /*0xc8*/ ScrollContent_EventMissionPaybackEntity m_scrollContentPayback;

    /*0x11cef8c*/ EventMissionPopup_Payback();
    /*0x11cec4c*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11cec50*/ void UpdateMissionScrollContent(bool resetscrollposition);
    /*0x11ced24*/ void HandleScrollContent(int index, EventMissionPaybackEntity obj);
    /*0x11cedd0*/ void BindEvent();
    /*0x11ceeb8*/ void RemoveEvent();
}

class EventMissionPopup_Summon : EventMissionPopup
{
    /*0x11cefec*/ EventMissionPopup_Summon();
}

class EventMissionTab : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_lockBtnObject;
    /*0x20*/ UnityEngine.GameObject m_selectedBtnObject;
    /*0x28*/ UnityEngine.GameObject m_activeBtnObject;
    /*0x30*/ LocalizeString[] m_dayTexts;
    /*0x38*/ UnityEngine.GameObject m_reddot;
    /*0x40*/ int m_tabIndex;
    /*0x44*/ DefineEvent.TAB_TYPE m_missionTabType;
    /*0x48*/ DefineEvent.EVENT_MISSION_TYPE m_missionType;

    /*0x11cf298*/ EventMissionTab();
    /*0x11cf04c*/ void OnEnable();
    /*0x11cf054*/ void OnDisable();
    /*0x11ccfc4*/ void InitTab(string eventTabKey, int tabIndex, DefineEvent.TAB_TYPE tabType, DefineEvent.EVENT_MISSION_TYPE eventMissionType, TableData.TableData_Eventmission eventData);
    /*0x11cf05c*/ void SetTabDay(string key);
    /*0x11cf180*/ void SetTabButton();
    /*0x11cd61c*/ void SetReddot(bool enable);
    /*0x11cf1f8*/ void OnClickUnlock();
    /*0x11cf1fc*/ void OnClickTab();
    /*0x11cf050*/ void BindEvent();
    /*0x11cf058*/ void DeleteEvent();
}

class EventParentPopup : GuiBase
{
    /*0x40*/ EventPopupBase m_currEvent;

    /*0x11cfbe0*/ EventParentPopup();
    /*0x11cf878*/ void OnCreate();
    /*0x11cf87c*/ void OnDelete();
    /*0x11cf880*/ void OnEnter();
    /*0x11cf884*/ void OnFinish();
    /*0x11cf888*/ void OnLeave();
    /*0x11cf88c*/ void OnStart();
    /*0x11cf890*/ void OnExit();
    /*0x11cf978*/ void InitPopup(string eventPopupName, TableData.TableData_Event eventData);
    /*0x11cf8b8*/ void CloseEventPopup();
}

class EventPopupBase : GuiBase
{
    /*0x40*/ UnityEngine.UI.Image m_bannerImage;
    /*0x48*/ LocalizeString m_bannerTitleText;
    /*0x50*/ LocalizeString m_bannerInfoText;
    /*0x58*/ LocalizeString m_leftTimeText;
    /*0x60*/ TableData.TableData_Event m_eventData;
    /*0x68*/ TableData.TableData_Eventpreset m_eventPreset;
    /*0x70*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x11ce9d0*/ EventPopupBase();
    /*0x11cea5c*/ void OnExit();
    /*0x11cc634*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d05ec*/ void SetBanner(string bannerImage);
    /*0x11d0324*/ void SetEventTitle(string titleKey);
    /*0x11d0464*/ void SetEventInfo(string infoKey);
    /*0x11d079c*/ void SetEventPage();
    /*0x11d0994*/ void UpdateLeftTime();
    /*0x11d05a4*/ void PlayTimer();
    /*0x11d027c*/ void StopTimer();
    /*0x11d0ab4*/ bool IsExpire();
    /*0x11d0bf0*/ void HandleExpireEvent(TableData.TableData_Event eventData);
    /*0x11d0c50*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0x11d0cbc*/ void OnClickHelp();

    class <CoUpdateLeftTime>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventPopupBase <>4__this;

        /*0x109fb0c*/ <CoUpdateLeftTime>d__18(int <>1__state);
        /*0x109fb38*/ void System.IDisposable.Dispose();
        /*0x109fb3c*/ bool MoveNext();
        /*0x109fbc4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109fbcc*/ void System.Collections.IEnumerator.Reset();
        /*0x109fc0c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventExchangeEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage[] m_eventCurrencyIcons;
    /*0x20*/ LocalizeString[] m_exchangeAmountTexts;
    /*0x28*/ LocalizeString m_exchangeLimitText;
    /*0x30*/ ItemTableRewardSlot m_rewardSlot;
    /*0x38*/ UnityEngine.UI.Button m_exchangeBtn;
    /*0x40*/ AtlasImage m_soldOutIcon;
    /*0x48*/ UnityEngine.Material m_grayColorMat;
    /*0x50*/ LocalizeString m_exchangeBtnText;
    /*0x58*/ TableData.TableData_Eventexchange m_eventExchangeData;
    /*0x60*/ int m_exchangeLeftCount;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_currencyList;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x78*/ DefineEvent.EXCHANGE_EVENT_TYPE m_exchangeType;

    /*0x11584c4*/ EventExchangeEntity();
    /*0x11574cc*/ void InitEntity(TableData.TableData_Eventexchange eventExchangeData, DefineEvent.EXCHANGE_EVENT_TYPE exchangeType);
    /*0x1157500*/ void SetEntityData();
    /*0x1157830*/ void UpdateUI();
    /*0x11575d8*/ void SetCurrencyIcon();
    /*0x1158320*/ void SetItemSlotMaterial(UnityEngine.GameObject parentObject, UnityEngine.Material material);
    /*0x1157d58*/ void UpdateExchangeCount();
    /*0x115786c*/ void UpdateAmountText();
    /*0x1157eb8*/ void UpdateSoldOut();
    /*0x1157f88*/ void UpdateButton();
    /*0x1157c6c*/ void UpdateRewardSlot();
    /*0x1158434*/ void OnClickExchange();
}

class EventExchangePopup : EventPopupBase
{
    static /*0x0*/ System.Action OnRefreshPopup;
    /*0x78*/ AtlasImage[] m_currencyItemIcons;
    /*0x80*/ LocalizeString[] m_currencyItemAmounts;
    /*0x88*/ ScrollContent_EventExchangeEntity m_scrollContent;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_currencyList;
    /*0x98*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> m_eventExchangeDataList;

    static /*0x1159494*/ EventExchangePopup();
    /*0x11593dc*/ EventExchangePopup();
    /*0x115855c*/ DefineEvent.EXCHANGE_EVENT_TYPE GetExchnageEventType();
    /*0x1158564*/ void OnCreate();
    /*0x1158568*/ void OnDelete();
    /*0x115856c*/ void OnEnter();
    /*0x1158790*/ void OnFinish();
    /*0x1158794*/ void OnLeave();
    /*0x11589b0*/ void OnStart();
    /*0x11589b4*/ void OnExit();
    /*0x1158a88*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x1158b24*/ void InitExchangeDataList();
    /*0x1158e6c*/ void UpdateUI();
    /*0x1158c10*/ void SetCurrencyIcon();
    /*0x1158f3c*/ void UpdateAmountText();
    /*0x1158e90*/ void UpdateExchangeScrollContent();
    /*0x1158570*/ void BindEvent();
    /*0x1158798*/ void RemoveEvent();
    /*0x1159218*/ void HandleRefreshPopup();
    /*0x115923c*/ void HandleDailyChange();
    /*0x1159340*/ void HandleScrollContent(int index, EventExchangeEntity obj);
    /*0x1159498*/ void <OnExit>b__13_0();
}

class EventExchangePopup_Shop : EventExchangePopup
{
    /*0x11596a8*/ EventExchangePopup_Shop();
    /*0x1159554*/ DefineEvent.EXCHANGE_EVENT_TYPE GetExchnageEventType();
    /*0x115955c*/ void UpdateLeftTime();
}

class ExchangeUsePopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot m_exchangeItemSlot;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_desc;
    /*0x58*/ LocalizeString m_subTitleText;
    /*0x60*/ UnityEngine.UI.Slider m_AmountSilder;
    /*0x68*/ LocalizeString m_SilderText;
    /*0x70*/ LocalizeString m_ExchangeCountText;
    /*0x78*/ LocalizeString m_exchangeBtnText;
    /*0x80*/ UnityEngine.GameObject[] m_tokenObjects;
    /*0x88*/ AtlasImage[] m_tokenItemIcons;
    /*0x90*/ LocalizeString[] m_tokenItemAmounts;
    /*0x98*/ TableData.TableData_Eventexchange m_eventExchangeData;
    /*0xa0*/ System.Collections.Generic.List<Rewards> m_currencyList;
    /*0xa8*/ Rewards m_exchangeItemReward;
    /*0x170*/ DefineEvent.EXCHANGE_EVENT_TYPE m_exchangeType;
    /*0x174*/ int m_nMaxAmount;
    /*0x178*/ int m_nAmount;

    /*0x11d84b8*/ ExchangeUsePopup();
    /*0x11d6ae0*/ void OnCreate();
    /*0x11d6ae4*/ void OnDelete();
    /*0x11d6ae8*/ void OnEnter();
    /*0x11d6b54*/ void OnFinish();
    /*0x11d6b58*/ void OnLeave();
    /*0x11d6b5c*/ void OnStart();
    /*0x11d6b60*/ void OnExit();
    /*0x11d6bdc*/ void InitializePopup(TableData.TableData_Eventexchange eventExchange, int defaultMaxCount, DefineEvent.EXCHANGE_EVENT_TYPE exchangeType);
    /*0x11d6c2c*/ void SetData();
    /*0x11d6d50*/ void ComputeMaxAmount(int defaultMaxCount);
    /*0x11d6fbc*/ void SetLocalizeItem();
    /*0x11d7bc0*/ void SetTokenItems();
    /*0x11d7cc0*/ void ChangeAmount(int _amount);
    /*0x11d838c*/ void OnClickChangeAmount(int count);
    /*0x11d83e0*/ void OnClickExchange();
    /*0x11d8530*/ void <OnClickExchange>b__31_0();
}

class EventPurchasePopup : EventPopupBase
{
    /*0x78*/ TableData.TableData_Eventbuyinapp m_eventBuyInApp;

    /*0x11d1244*/ EventPurchasePopup();
    /*0x11d10b0*/ void OnCreate();
    /*0x11d10b4*/ void OnDelete();
    /*0x11d10b8*/ void OnEnter();
    /*0x11d10c8*/ void OnFinish();
    /*0x11d10cc*/ void OnLeave();
    /*0x11d10dc*/ void OnStart();
    /*0x11d10e0*/ void OnExit();
    /*0x11d11b4*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d11f8*/ void InitEventData();
    /*0x11d1230*/ void BindEvent();
    /*0x11d1240*/ void RemoveEvent();
    /*0x11d124c*/ void <OnExit>b__7_0();
}

class FirstPurchasePopup : EventPurchasePopup
{
    /*0x80*/ ItemTableRewardSlot[] m_itemSlots;
    /*0x88*/ DefineEvent.TriggerData m_triggerData;

    /*0x11da4e8*/ FirstPurchasePopup();
    /*0x11da128*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11da370*/ void InitEventData();
    /*0x11da174*/ void SetItemSlots();
    /*0x11da4b8*/ void OnClickButton();
}

class EventQuestPopup : EventPopupBase
{
    /*0x78*/ ScrollContent_TriggerMissionEntity m_scrollContent;
    /*0x80*/ EventQuestProgress m_questProgress;
    /*0x88*/ System.Collections.Generic.List<TableData.TableData_Eventquest> m_questList;
    /*0x90*/ PTShare.Define.SQuest m_sQuest;
    /*0x98*/ int m_tmpClearScore;

    /*0x11d2398*/ EventQuestPopup();
    /*0x11d14d8*/ void OnCreate();
    /*0x11d14dc*/ void OnDelete();
    /*0x11d14e0*/ void OnEnter();
    /*0x11d14e4*/ void OnFinish();
    /*0x11d14e8*/ void OnLeave();
    /*0x11d14ec*/ void OnStart();
    /*0x11d14f0*/ void OnExit();
    /*0x11d1694*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d172c*/ void BindEvent();
    /*0x11d1514*/ void RemoveEvent();
    /*0x11d18fc*/ void SetQuestEventData();
    /*0x11d1bdc*/ void HandleDailyChange();
    /*0x11d1e38*/ void HandleRefresh();
    /*0x11d1eac*/ void HandleScrollContnet(int index, TriggerMissionEntity obj);
    /*0x11d21f8*/ System.Collections.Generic.List<Rewards> GetRewards(string reward);
    /*0x11d1b6c*/ TableData.TableData_Eventquestgroup FindQuestGroup(string eventGroup);
    /*0x11d2410*/ int <SetQuestEventData>b__15_0(TableData.TableData_Eventquest lhs, TableData.TableData_Eventquest rhs);
    /*0x11d2818*/ void <HandleDailyChange>b__16_1();
    /*0x11d2828*/ void <HandleDailyChange>b__16_0();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ TableData.TableData_Eventquest lhs;
        /*0x18*/ TableData.TableData_Eventquest rhs;

        /*0x109fc14*/ <>c__DisplayClass15_0();
        /*0x109fc1c*/ bool <SetQuestEventData>b__1(PTShare.Define.SQuestRow f);
        /*0x109fc4c*/ bool <SetQuestEventData>b__2(PTShare.Define.SQuestRow f);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ EventQuestPopup <>4__this;
        /*0x18*/ int index;
        /*0x20*/ TableData.TableData_Eventquestgroup questGroup;

        /*0x109fc7c*/ <>c__DisplayClass18_0();
        /*0x109fc84*/ bool <HandleScrollContnet>b__0(PTShare.Define.SQuestRow f);
        /*0x109fd1c*/ void <HandleScrollContnet>b__1();
    }
}

class EventQuestProgress : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_CurrentPoint;
    /*0x20*/ LocalizeString m_time;
    /*0x28*/ UnityEngine.UI.Slider m_PointSlider;
    /*0x30*/ System.Collections.Generic.List<EventQuestProgressEntity> m_liProgressEntity;
    /*0x38*/ PTShare.Define.SQuest m_sQuest;
    /*0x40*/ TableData.TableData_Event m_eventData;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> m_pointQuestList;
    /*0x50*/ int m_maxPoint;

    /*0x11d2f8c*/ EventQuestProgress();
    /*0x11d2838*/ void OnDisable();
    /*0x11d18b4*/ void InitProgress(TableData.TableData_Event eventData);
    /*0x11d2840*/ void BindEvent();
    /*0x11d283c*/ void RemoveEvent();
    /*0x11d2844*/ void SetData();
    /*0x11d2a04*/ void SetEntitys();
    /*0x11d2e00*/ void SetStatusView();
    /*0x11d2e7c*/ System.Collections.IEnumerator CoTimer();

    class <CoTimer>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventQuestProgress <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <seconds>5__2;

        /*0x109ff1c*/ <CoTimer>d__15(int <>1__state);
        /*0x109ff48*/ void System.IDisposable.Dispose();
        /*0x109ff4c*/ bool MoveNext();
        /*0x10a00a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a00a8*/ void System.Collections.IEnumerator.Reset();
        /*0x10a00e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventQuestProgressEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnExChagneEvent;
    /*0x18*/ AtlasImage m_BoxIcon;
    /*0x20*/ AtlasImage m_Background;
    /*0x28*/ UnityEngine.GameObject m_RewardParent;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ LocalizeString m_NeedPoint;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_treasureBoxSkel;
    /*0x48*/ int m_nEventQuestIndex;
    /*0x4c*/ int m_nIndex;
    /*0x50*/ int m_nPoint;
    /*0x54*/ int m_nMaxPoint;
    /*0x58*/ int m_nEventId;
    /*0x5c*/ bool m_bIsOpen;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_rewards;

    static /*0x11d39f8*/ EventQuestProgressEntity();
    static /*0x11d3044*/ void add_OnExChagneEvent(System.Action<int> value);
    static /*0x11d3138*/ void remove_OnExChagneEvent(System.Action<int> value);
    /*0x11d3980*/ EventQuestProgressEntity();
    /*0x11d322c*/ void OnDisable();
    /*0x11d2ee8*/ void InitializeEntity(int _nIndex, int _nEventQuestIndex, int _nEventId, int _nPoint, int _nMaxPoint, bool _bOpen, System.Collections.Generic.List<Rewards> _rewards);
    /*0x11d3480*/ bool IsOnReddot();
    /*0x11d323c*/ void OpenBox(bool _bOpen);
    /*0x11d3330*/ void SetTreasureBox();
    /*0x11d34a0*/ void SetTreasureBox(string animName, bool loop);
    /*0x11d3468*/ void SetReddot(bool _enable);
    /*0x11d3528*/ void OnClick_RewardBox();
    /*0x11d36d4*/ void ViewReward(bool isReceive);
    /*0x11d3234*/ void HideReward();
    /*0x11d3930*/ void SetActiveReward(bool _enable);
}

class EventRoulettePopup : EventPopupBase
{
    /*0x78*/ WheelSpinSystem m_wheelSpinSystem;
    /*0x80*/ UnityEngine.GameObject m_freeParent;
    /*0x88*/ UnityEngine.GameObject m_currencyParent;
    /*0x90*/ LocalizeString m_freeAmount;
    /*0x98*/ AmountSlot[] m_currencyAmount;
    /*0xa0*/ LocalizeString[] m_currencyText;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> m_rouletteList;

    /*0x11d4370*/ EventRoulettePopup();
    /*0x11d3c0c*/ void OnCreate();
    /*0x11d3c10*/ void OnDelete();
    /*0x11d3c14*/ void OnEnter();
    /*0x11d3c18*/ void OnFinish();
    /*0x11d3c1c*/ void OnLeave();
    /*0x11d3c20*/ void OnStart();
    /*0x11d3c24*/ void OnExit();
    /*0x11d3c68*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d3cac*/ void BindEvent();
    /*0x11d4198*/ void RemoveEvent();
    /*0x11d3cb0*/ void SetData();
    /*0x11d3ce8*/ void SetUI();
    /*0x11d419c*/ void OnClickCurrency(int number);
    /*0x11d43e8*/ void <OnClickCurrency>b__19_0(PTShare.Define.SProperty response);
}

class WheelSpinEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnSpinEnd;
    /*0x18*/ WheelSpinIcon[] m_wheelIcons;
    /*0x20*/ float m_spinSpeed;
    /*0x24*/ int m_currIndex;
    /*0x28*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x30*/ UnityEngine.Coroutine m_coroutine;
    /*0x38*/ int m_banner;
    /*0x40*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> m_tableDataList;
    /*0x48*/ int m_goal;

    static /*0xdffa38*/ WheelSpinEntity();
    /*0xdff9b8*/ WheelSpinEntity();
    /*0xdfeaf8*/ void OnDisable();
    /*0xdfeb28*/ void InitEntity(System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<TableData.TableData_Eventroulette> rouletteList, int startIndex);
    /*0xdfed38*/ float Height();
    /*0xdfedf4*/ Rewards GetReward(int index);
    /*0xdfee90*/ bool IsReady();
    /*0xdfeea0*/ bool Spin(float delay, int spinCount, int goal);
    /*0xdfefe8*/ void Skip();
    /*0xdfef58*/ System.Collections.IEnumerator CoSpin(float delay, int spinCount, int goal);
    /*0xdfebf4*/ void UpdateWheelUI();
    /*0xdffa3c*/ bool <CoSpin>g__WheelLoopUpdate|16_0(float _speed, ref WheelSpinEntity.<> );

    struct <>c__DisplayClass16_0
    {
        /*0x10*/ WheelSpinEntity <>4__this;
        /*0x18*/ int leftSpin;
    }

    class <CoSpin>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WheelSpinEntity <>4__this;
        /*0x28*/ float delay;
        /*0x2c*/ int goal;
        /*0x30*/ int spinCount;
        /*0x38*/ WheelSpinEntity.<> <>8__1;
        /*0x48*/ int <totalSpin>5__2;
        /*0x4c*/ float <speed>5__3;
        /*0x50*/ float <minSpeed>5__4;

        /*0xd8bdec*/ <CoSpin>d__16(int <>1__state);
        /*0xd8be18*/ void System.IDisposable.Dispose();
        /*0xd8be1c*/ bool MoveNext();
        /*0xd8c248*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8c250*/ void System.Collections.IEnumerator.Reset();
        /*0xd8c290*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WheelSpinIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Color[] AMOUNT_COLOR;
    /*0x20*/ AtlasImage m_bg;
    /*0x28*/ AtlasImage m_itemIcon;
    /*0x30*/ LocalizeString m_itemName;
    /*0x38*/ LocalizeString m_itemAmount;

    /*0xdffb90*/ WheelSpinIcon();
    /*0xdff0f8*/ void InitIcon(Rewards rewards, bool banner);
    /*0xdff544*/ void InitIcon(Rewards rewards, TableData.TableData_Eventroulette tableData, bool banner);
    /*0xdfed70*/ float Height();
}

class WheelSpinSystem : UnityEngine.MonoBehaviour
{
    /*0x18*/ WheelSpinEntity[] m_wheels;
    /*0x20*/ float m_spinInterval;
    /*0x28*/ UnityEngine.GameObject m_skipButton;
    /*0x30*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x38*/ PTShare.Define.SProperty m_gain;
    /*0x40*/ int m_spinCount;

    /*0xe00608*/ WheelSpinSystem();
    /*0xdffc84*/ void OnDisable();
    /*0xdffd78*/ void InitSystem(System.Collections.Generic.List<TableData.TableData_Eventroulette> rouletteList);
    /*0xe00194*/ bool IsReadySpin();
    /*0xe00200*/ void OnSpin(PTShare.Define.SProperty sProperty);
    /*0xe003f0*/ void SetSpinCount();
    /*0xe0009c*/ void BindEvent();
    /*0xdffc88*/ void RemoveEvent();
    /*0xe00464*/ void HandleSpinEnd();
    /*0xe00598*/ void OnClickSkip();
}

class FriendManager : Singleton.Data.SingletonData<FriendManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SFriend> m_curFriendList;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_curReqFriendList;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_curBlackList;
    /*0x38*/ System.Collections.Generic.List<long> m_curBlackLongList;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> m_curSearchFriendList;
    /*0x48*/ int m_curTodayRecvPoint;
    /*0x4c*/ int m_curTodaySendPoint;
    /*0x50*/ CFriendSort_ConnectionStatus m_cFriendSortConnection;
    /*0x58*/ CFriendSort_Name m_cFriendSortName;
    /*0x60*/ FriendSortType m_eFriendSortType;
    /*0x64*/ bool m_newRequestorReddot;
    /*0x65*/ bool m_newMercenaryReddot;
    /*0x68*/ int _nArrIndex;
    /*0x6c*/ int _nStartCount;
    /*0x70*/ int _nEndCount;
    /*0x78*/ PTShare.Define.SFriend _sFriendInfo;
    /*0x80*/ PTShare.Define.SSearchPlayer _sSearchInfo;

    /*0x11e2ef0*/ FriendManager();
    /*0x11e1f48*/ string get_UserToken();
    /*0x11e1fc8*/ bool InitInstance();
    /*0x11e1fd0*/ void ReleaseInstance();
    /*0x11e1fd4*/ void Send_FriendList(System.Action _showResult);
    /*0x11decac*/ void Send_FriendRequestors(System.Action _showResult);
    /*0x11e210c*/ void Send_BlackList(System.Action _showResult);
    /*0x11dfe34*/ void Send_AcceptFriend(System.Action _callback, long _acceptAccountID);
    /*0x11e2244*/ void Send_DeleteFriend(System.Action _callback, long _acceptAccountID);
    /*0x11e0064*/ void Send_DenyFriend(System.Action _callback, long _acceptAccountID);
    /*0x11dfc04*/ void Send_InviteFriend(System.Action _callback, long _acceptAccountID);
    /*0x11dd740*/ void Send_SendPointFriend(System.Action _callback, long _acceptAccountID);
    /*0x11e1b2c*/ void Send_SearchFriend(System.Action _callback, string _query);
    /*0x11dd314*/ void Send_TakePointFriend(System.Action _callback, long _acceptAccountID);
    /*0x11def00*/ void Send_AllAtOncePointFriend(System.Action _callback);
    /*0x11e2394*/ void Send_AddBlacklist(System.Action _callback, long _accountid);
    /*0x11dfabc*/ void Send_RemoveBlacklist(System.Action _callback, long _accountid);
    /*0x11dd954*/ void Send_Sparring(long _accountid);
    /*0x11e24dc*/ void SetBlacklist(System.Collections.Generic.List<PTShare.Define.SPlayer> blacklist);
    /*0x11e2664*/ void SetBlacklist(System.Collections.Generic.List<long> blacklist);
    /*0x11e26f4*/ void SetFriendList(System.Collections.Generic.List<PTShare.Define.SFriend> friendlist);
    /*0x11deaa0*/ System.Collections.Generic.List<PTShare.Define.SFriend> GetCurFriendList(FriendSortType _friendSortType);
    /*0x11e2784*/ System.Collections.Generic.List<PTShare.Define.SPlayer> GetReqFriendListToMe();
    /*0x11e278c*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> GetSearchPlayerList();
    /*0x11e2794*/ System.Collections.Generic.List<PTShare.Define.SPlayer> GetBlackList();
    /*0x11e279c*/ int GetTodayRecvPoint();
    /*0x11e27a4*/ int GetTodaySendPoint();
    /*0x11e27ac*/ PTShare.Define.SFriend FindFriendID(long _playerid);
    /*0x11e28e8*/ PTShare.Define.SPlayer FindBlacklist(long _playerid);
    /*0x11e2a4c*/ long FindBlacklistPlayerid(long _playerid);
    /*0x11e2b88*/ bool IsMyFriendPlayer(long _playerid);
    /*0x11e2bac*/ bool IsMyBlacklistPlayer(long _playerid);
    /*0x11e2bc8*/ void ChangeFriendReceveState(long _accountid, PTShare.Define.FriendShipRecvState _state);
    /*0x11e2d50*/ void ChangeFriendSendState(long _accountid, PTShare.Define.FriendShipSendState _state);
    /*0x11e2ed8*/ bool GetFriendRequestorReddot();
    /*0x11e2ee0*/ bool GetMercenaryReddot();
    /*0x11deca4*/ void SetHideFriendRequestReddot();
    /*0x11e2ee8*/ void SetHideMercenaryReddot();

    class <>c__DisplayClass21_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _showResult;

        /*0x10a0890*/ <>c__DisplayClass21_0();
        /*0x10a0898*/ void <Send_FriendList>b__0(ServerProtocol.ResFriendFriends request);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _showResult;

        /*0x10a09d4*/ <>c__DisplayClass22_0();
        /*0x10a09dc*/ void <Send_FriendRequestors>b__0(ServerProtocol.ResFriendRequestors instance);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _showResult;

        /*0x10a0a28*/ <>c__DisplayClass23_0();
        /*0x10a0a30*/ void <Send_BlackList>b__0(ServerProtocol.ResFriendBlacks instance);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a0a80*/ <>c__DisplayClass24_0();
        /*0x10a0a88*/ void <Send_AcceptFriend>b__0(ServerProtocol.ResFriendAccept _resFriendAccept);
    }

    class <>c__DisplayClass24_1
    {
        /*0x10*/ ServerProtocol.ResFriendAccept _resFriendAccept;

        /*0x10a0cc0*/ <>c__DisplayClass24_1();
        /*0x10a0cc8*/ bool <Send_AcceptFriend>b__1(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ long _acceptAccountID;
        /*0x20*/ System.Action _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SFriend> <>9__1;

        /*0x10a0d00*/ <>c__DisplayClass25_0();
        /*0x10a0d08*/ void <Send_DeleteFriend>b__0(ServerProtocol.ResFriendDelete _resFriendDelete);
        /*0x10a0e1c*/ bool <Send_DeleteFriend>b__1(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a0e40*/ <>c__DisplayClass26_0();
        /*0x10a0e48*/ void <Send_DenyFriend>b__0(ServerProtocol.ResFriendDeny _resDenyFriend);
    }

    class <>c__DisplayClass26_1
    {
        /*0x10*/ ServerProtocol.ResFriendDeny _resDenyFriend;

        /*0x10a0fa4*/ <>c__DisplayClass26_1();
        /*0x10a0fac*/ bool <Send_DenyFriend>b__1(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a0fdc*/ <>c__DisplayClass27_0();
        /*0x10a0fe4*/ void <Send_InviteFriend>b__0(ServerProtocol.ResFriendSend _resFriendSend);
    }

    class <>c__DisplayClass27_1
    {
        /*0x10*/ ServerProtocol.ResFriendSend _resFriendSend;

        /*0x10a11a0*/ <>c__DisplayClass27_1();
        /*0x10a11a8*/ bool <Send_InviteFriend>b__1(PTShare.Define.SSearchPlayer x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a11d8*/ <>c__DisplayClass28_0();
        /*0x10a11e0*/ void <Send_SendPointFriend>b__0(ServerProtocol.ResFriendSendPoint _resFriendSendPoint);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a138c*/ <>c__DisplayClass29_0();
        /*0x10a1394*/ void <Send_SearchFriend>b__0(ServerProtocol.ResFriendSearch _resFriendSearch);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a13d0*/ <>c__DisplayClass30_0();
        /*0x10a13d8*/ void <Send_TakePointFriend>b__0(ServerProtocol.ResFriendTakePoint _resFriendTakePoint);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a1584*/ <>c__DisplayClass31_0();
        /*0x10a158c*/ void <Send_AllAtOncePointFriend>b__0(ServerProtocol.ResFriendAllPoint _instance);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a19ac*/ <>c__DisplayClass32_0();
        /*0x10a19b4*/ void <Send_AddBlacklist>b__0(ServerProtocol.ResFriendBlacklist response);
    }

    class <>c__DisplayClass32_1
    {
        /*0x10*/ ServerProtocol.ResFriendBlacklist response;

        /*0x10a1b64*/ <>c__DisplayClass32_1();
        /*0x10a1b6c*/ bool <Send_AddBlacklist>b__1(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a1ba4*/ <>c__DisplayClass33_0();
        /*0x10a1bac*/ void <Send_RemoveBlacklist>b__0(ServerProtocol.ResFriendBlacklistRemove response);
    }

    class <>c__DisplayClass33_1
    {
        /*0x10*/ ServerProtocol.ResFriendBlacklistRemove response;

        /*0x10a1dcc*/ <>c__DisplayClass33_1();
        /*0x10a1dd4*/ bool <Send_RemoveBlacklist>b__1(PTShare.Define.SPlayer x);
        /*0x10a1e04*/ bool <Send_RemoveBlacklist>b__2(long x);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ long _accountid;

        /*0x10a1e28*/ <>c__DisplayClass34_0();
        /*0x10a1e30*/ void <Send_Sparring>b__0(ServerProtocol.ResFriendSparring response);
    }

    class <>c
    {
        static /*0x0*/ FriendManager.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SPlayer, long> <>9__35_0;

        static /*0x10a0810*/ <>c();
        /*0x10a0870*/ <>c();
        /*0x10a0878*/ long <SetBlacklist>b__35_0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ long _playerid;

        /*0x10a1fe8*/ <>c__DisplayClass44_0();
        /*0x10a1ff0*/ bool <FindFriendID>b__0(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ long _playerid;

        /*0x10a2014*/ <>c__DisplayClass45_0();
        /*0x10a201c*/ bool <FindBlacklist>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ long _playerid;

        /*0x10a2040*/ <>c__DisplayClass46_0();
        /*0x10a2048*/ bool <FindBlacklistPlayerid>b__0(long x);
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ long _accountid;

        /*0x10a2058*/ <>c__DisplayClass49_0();
        /*0x10a2060*/ bool <ChangeFriendReceveState>b__0(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ long _accountid;

        /*0x10a2084*/ <>c__DisplayClass50_0();
        /*0x10a208c*/ bool <ChangeFriendSendState>b__0(PTShare.Define.SFriend x);
    }
}

class AtticManager : Singleton.Data.SingletonData<AtticManager>
{
    /*0x1c*/ int m_luckyHeroId;

    /*0xf830c0*/ AtticManager();
    /*0xf82bec*/ bool InitInstance();
    /*0xf82bf4*/ void ReleaseInstance();
    /*0xf82bf8*/ int GetLuckyHeroId();
    /*0xf82c00*/ void SetLuckyHeroId(int heroId);
    /*0xf81420*/ void Send_Buy(int gachaid, int priceid, System.Action<System.Collections.Generic.List<int>> callBack);
    /*0xf828ec*/ void Send_Commit(int heroId, System.Action callBack);
    /*0xf82c08*/ bool IsPossiblePriceCount(int gachaCount);
    /*0xf82d40*/ bool IsPossiblePrice(TableData.TableData_Highgacha gachaData);
    /*0xf82f00*/ bool IsPossibleSubPrice(TableData.TableData_Highgacha gachaData);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<int>> callBack;

        /*0xd9fc14*/ <>c__DisplayClass5_0();
        /*0xd9fc1c*/ void <Send_Buy>b__0(ServerProtocol.ResAtticBuy response);
    }

    class <>c
    {
        static /*0x0*/ AtticManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__5_1;

        static /*0xd9fb24*/ <>c();
        /*0xd9fb84*/ <>c();
        /*0xd9fb8c*/ void <Send_Buy>b__5_1(PTShare.Define.SItem m);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ AtticManager <>4__this;
        /*0x18*/ int heroId;
        /*0x20*/ System.Action callBack;

        /*0xd9fe04*/ <>c__DisplayClass6_0();
        /*0xd9fe0c*/ void <Send_Commit>b__0(ServerProtocol.ResAtticCommit response);
    }
}

class GachaManager : Singleton.Component.SingletonComponent<GachaManager>
{
    static int _nPropertyLimit = 4;
    static /*0x0*/ System.Action OnUpdateFactionEvent;
    /*0x28*/ System.Collections.Generic.List<string> m_liWishList;
    /*0x30*/ bool[] m_arrEnableFaction;
    /*0x38*/ System.Collections.Generic.List<int> m_liAutoDismiss;
    /*0x40*/ int m_nOldBonusCount;
    /*0x44*/ int m_nCurBonusCount;
    /*0x48*/ bool m_bReceiveBonus;
    /*0x50*/ System.Collections.Generic.List<int> m_liRecevieGainBonus;
    /*0x58*/ System.Text.StringBuilder m_strResult;
    /*0x60*/ PropertyType ePropertyType;
    /*0x64*/ int nArrayIndex;
    /*0x68*/ bool <IsChangedWishlist>k__BackingField;

    static /*0xec05e4*/ GachaManager();
    static /*0xebee0c*/ void add_OnUpdateFactionEvent(System.Action value);
    static /*0xebef00*/ void remove_OnUpdateFactionEvent(System.Action value);
    /*0xec04c8*/ GachaManager();
    /*0xebeff4*/ bool get_IsChangedWishlist();
    /*0xebeffc*/ void set_IsChangedWishlist(bool value);
    /*0xebf008*/ string get_UserToken();
    /*0xebf088*/ void AwakeInstance();
    /*0xebf090*/ bool InitInstance();
    /*0xebf098*/ void ReleaseInstance();
    /*0xebf150*/ System.Collections.Generic.List<int> GetAutoDismissList();
    /*0xebf158*/ void SetWishList(System.Collections.Generic.List<string> list);
    /*0xebf160*/ void SetAutoDismiss(System.Collections.Generic.List<int> list);
    /*0xebf168*/ void Send_BuyGacha(int _gachaid, int _priceid, int _factionid, System.Action<System.String[]> _callback);
    /*0xebf2c8*/ void Send_EnterGacha(System.Action _callback);
    /*0xebecc4*/ void Send_BuyFactionPool(int _factionid, System.Action _callback);
    /*0xebf400*/ void Send_CommitWishList(System.Action _callback);
    /*0xebf68c*/ void Send_AutoDismiss(System.Collections.Generic.List<int> dismissList, System.Action _callBack);
    /*0xebf814*/ void OpenGachaShop(bool bIsHideAll);
    /*0xebf8d4*/ bool IsPossiblePriceAll();
    /*0xebfc84*/ bool IsPossiblePriceCount(int gachaCount);
    /*0xebfac4*/ bool IsPossiblePrice(TableData.TableData_Gacha gachaData);
    /*0xebfebc*/ int GetOldBounsCount();
    /*0xebfec4*/ void SetOldBonusCount(int _count);
    /*0xebfecc*/ int GetCurBonusCount();
    /*0xebfed4*/ bool GetReceiveBonus();
    /*0xebfedc*/ void SetReceiveBonus(bool _enable);
    /*0xebfee8*/ System.Collections.Generic.List<int> GetRewardBonusList();
    /*0xebfef0*/ bool[] GetBuyFactionList();
    /*0xebdd34*/ bool IsBuyFaction(int _type);
    /*0xebfef8*/ int GetFirstIndexIsBuyFaction();
    /*0xebff64*/ System.Collections.Generic.List<string> GetWishList();
    /*0xebff6c*/ bool IsUseUnitWishList(int _factionid, int _unitid);
    /*0xec008c*/ bool IsContainUnitId(string _value, string _unitid);
    /*0xec015c*/ void UpdateWishList(int _factionid, int _slotid, int _value);
    /*0xec001c*/ bool IsVaildWishList(int _factionid);
    /*0xebf584*/ void SetStringListAll();
    /*0xec03a8*/ string[] ConvertSHeroStringAll(System.Collections.Generic.List<PTShare.Define.SLittleHero> _liHero);

    class <>c__DisplayClass26_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action<System.String[]> _callback;

        /*0xf65ef4*/ <>c__DisplayClass26_0();
        /*0xf65efc*/ void <Send_BuyGacha>b__0(ServerProtocol.ResGachaBuy response);
    }

    class <>c
    {
        static /*0x0*/ GachaManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__26_1;
        static /*0x10*/ System.Action<PTShare.Define.SItem> <>9__28_1;

        static /*0xf65d7c*/ <>c();
        /*0xf65ddc*/ <>c();
        /*0xf65de4*/ void <Send_BuyGacha>b__26_1(PTShare.Define.SItem item);
        /*0xf65e6c*/ void <Send_BuyFactionPool>b__28_1(PTShare.Define.SItem item);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf661d4*/ <>c__DisplayClass27_0();
        /*0xf661dc*/ void <Send_EnterGacha>b__0(ServerProtocol.ResGachaEnter response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf6630c*/ <>c__DisplayClass28_0();
        /*0xf66314*/ void <Send_BuyFactionPool>b__0(ServerProtocol.ResGachaBuyFactionPool response);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf66500*/ <>c__DisplayClass29_0();
        /*0xf66508*/ void <Send_CommitWishList>b__0(ServerProtocol.ResGachaCommitWishList response);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callBack;

        /*0xf66550*/ <>c__DisplayClass30_0();
        /*0xf66558*/ void <Send_AutoDismiss>b__0(ServerProtocol.ResGachaSetAutoDismiss response);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ bool bIsHideAll;
        /*0x18*/ System.Action <>9__1;

        /*0xf66594*/ <>c__DisplayClass31_0();
        /*0xf6659c*/ void <OpenGachaShop>b__0();
        /*0xf6667c*/ void <OpenGachaShop>b__1();
    }
}

class GameManager : Singleton.Component.SingletonComponent<GameManager>
{
    static /*0x0*/ bool CHECK_GAME_DB_SCRIPT_VERSION;
    static /*0x1*/ bool ALL_CAMERA_DISENABLED;
    static /*0x8*/ System.Action OnInputEscapeEvent;
    /*0x28*/ System.Action<bool> OnCemeraSetActive;

    static /*0xeccaf8*/ GameManager();
    static /*0xecc1cc*/ void add_OnInputEscapeEvent(System.Action value);
    static /*0xecc2c4*/ void remove_OnInputEscapeEvent(System.Action value);
    static /*0xecc554*/ void DoQuit();
    /*0xeccaac*/ GameManager();
    /*0xecc3bc*/ void AwakeInstance();
    /*0xecc3ec*/ bool InitInstance();
    /*0xecc3f4*/ void ReleaseInstance();
    /*0xecc458*/ void OnEnable();
    /*0xecc4c0*/ int get_CurrentTargetFrameRate();
    /*0xecc3e0*/ void EnvironmentSetting();
    /*0xecc4c8*/ void DoRestart();
    /*0xecc5b0*/ void SetActiveAllCamerasForBattleSimulation(bool _bActive, bool _bFasten, bool _bEffectFrontCanvas);
    /*0xecc7fc*/ void OnEscapeProcess();
    /*0xeccaa8*/ void Update();
}

enum ResourceType
{
    Atlas = 1,
    Config = 2,
    Effect = 3,
    LoadPage = 4,
    Localize = 5,
    Sprites = 6,
    UI = 7,
    Balance = 8,
}

class ResourcePath
{
    static string ATLAS_PATH = "Atlas/";
    static string BALANCE_PATH = "BalanceData/";
    static string CONFIG_PATH = "Config/";
    static string LOAD_PAGE_PATH = "LoadPage/";
    static string LOCALIZE_PATH = "Localize/";
    static string UI_PATH = "UI/Popup/";

    static /*0xf29b3c*/ string GetPath(ResourceType type);
    /*0xf29be8*/ ResourcePath();
}

class ResourceManager : Singleton.Data.SingletonData<ResourceManager>
{
    /*0x20*/ System.Collections.Generic.Dictionary<string, SG.Pool> poolDict;

    /*0xf29a84*/ ResourceManager();
    /*0xf291c4*/ bool InitInstance();
    /*0xf291cc*/ void ReleaseInstance();
    T LoadResource<T>(ResourceType type, string filename);
    System.Collections.IEnumerator LoadAsync_Resource<T>(System.Action<T> resultFunc, ResourceType type, string filename);
    /*0xf291d0*/ void UnloadResource(UnityEngine.Object _asset);
    T LoadAsset<T>(AssetBundleType type, string filename, string[] arg);
    void LoadAsync_Asset<T>(UnityEngine.MonoBehaviour _parent, System.Action<T> resultFunc, AssetBundleType type, string filename, string[] arg);
    /*0xf291dc*/ void UnloadAsset(UnityEngine.Object _asset);
    /*0xf29238*/ TooltipUIBase LoadTooltipUI(TooltipType _type);
    /*0xf29460*/ void UnloadTooltipUI(TooltipUIBase _instance);
    /*0xf292d0*/ string GetTooltipUIFileName(TooltipType _type);
    /*0xf295b4*/ void ReleaseSingleton();
    /*0xf29628*/ void ReleaseData();
    /*0xf2967c*/ void InitPool(AssetBundleType _assetBundleType, string poolName, int size, SG.PoolInflationType type);
    T GetObjectFromPool<T>(AssetBundleType _assetBundleType, string poolName, bool autoActive, int autoCreate);
    /*0xf298e0*/ void ReturnObjectToPool(UnityEngine.GameObject go);
    /*0xf299dc*/ void ReturnTransformToPool(UnityEngine.Transform t);

    class <LoadAsync_Resource>d__3<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ ResourceType type;
        /*0x0*/ string filename;
        /*0x0*/ System.Action<T> resultFunc;
        /*0x0*/ UnityEngine.ResourceRequest <async>5__2;

        <LoadAsync_Resource>d__3(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class GuiBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_background;
    /*0x20*/ bool _isFinished;
    /*0x28*/ string[] _params;
    /*0x30*/ System.Collections.Generic.Dictionary<string, UnityEngine.Transform> _usedTransList;
    /*0x38*/ string m_typeName;

    /*0xe5fee0*/ GuiBase();
    /*0xe5faf4*/ void Awake();
    /*0xe5fb00*/ void Start();
    /*0xe5fb10*/ void OnEnable();
    /*0xe5fb20*/ void OnDisable();
    /*0xe5fb4c*/ void OnDestroy();
    /*0xe5fb58*/ void FindTrans();
    /*0xe5fb88*/ void RecursiveFind(UnityEngine.Transform pTrans, System.Collections.Generic.Dictionary<string, UnityEngine.Transform> pFindTransList);
    /*0xe5fc8c*/ bool get_IsFinished();
    /*0xe5fc94*/ void Finish();
    /*0xe5fcc4*/ void SetParameter(string _typeName, string[] pParams);
    /*0xe5fcd0*/ void IsRender(bool pIsRender);
    /*0xe5fd04*/ void SetBackground(bool _isActive);
    void OnCreate();
    void OnEnter();
    void OnStart();
    void OnFinish();
    void OnLeave();
    void OnDelete();
    /*0xe5fda8*/ void OnExit();
}

class GuiManager : Singleton.Component.SingletonComponent<GuiManager>
{
    static /*0x0*/ System.Collections.Generic.List<System.ValueTuple<string, GuiManager.ELayerType>> GuiList;
    static /*0x8*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.ValueTuple<string, System.Object[]>>> GuiActionList;
    /*0x28*/ UnityEngine.Canvas topmostCanvas;
    /*0x30*/ UnityEngine.Canvas frontCanvas;
    /*0x38*/ UnityEngine.Canvas backCanvas;
    /*0x40*/ UnityEngine.Camera clearCamera;
    /*0x48*/ System.Collections.Generic.Dictionary<string, GuiBase> _showGuiEntityList;
    /*0x50*/ System.Collections.Generic.Dictionary<string, GuiBase> _hideGuiEntityList;
    /*0x58*/ System.Collections.Generic.List<string> _showGuiStringList;
    /*0x60*/ bool <IgnoreLoadingPopup>k__BackingField;

    static /*0xe61d88*/ GuiManager();
    static /*0xe60de4*/ void ShowQuitGame(string[] _params);
    static /*0xe6016c*/ void ClearAll();
    static void Add<T>(GuiManager.ELayerType layer);
    static /*0xe61854*/ void Remove(string name);
    static void AddAction<T>(string name, object[] param);
    static /*0xe6197c*/ void RemoveAction(string guiName);
    static /*0xe61ab0*/ void StartGUI(System.Action emptyCallback);
    /*0xe61c9c*/ GuiManager();
    /*0xe5ff74*/ bool get_IgnoreLoadingPopup();
    /*0xe5ff7c*/ void set_IgnoreLoadingPopup(bool value);
    /*0xe5ff88*/ void AwakeInstance();
    /*0xe60060*/ bool InitInstance();
    /*0xe60068*/ void ReleaseInstance();
    T Find<T>();
    T Show<T>(GuiManager.ELayerType pLayer, bool pShow, string[] pParams);
    /*0xe5fe00*/ void Hide(string _guiTypeName);
    void Hide<T>();
    /*0xe604ac*/ void AddShowDictionary(string _guiTypeName, GuiBase _base);
    /*0xe6033c*/ void RemoveShowDictionary(string _guiTypeName);
    /*0xe60440*/ void AddHideDictionary(string _guiTypeName, GuiBase _base);
    /*0xe605d0*/ void RemoveHideDictionary(string _guiTypeName);
    /*0xe60634*/ UnityEngine.Camera TopMostCamera();
    /*0xe60650*/ UnityEngine.Camera FrontCamera();
    /*0xe6066c*/ UnityEngine.Camera BackCamera();
    /*0xe60688*/ UnityEngine.Camera ClearCamera();
    /*0xe60690*/ UnityEngine.Canvas FrontCanvas();
    /*0xe60698*/ UnityEngine.Canvas BackCanvas();
    /*0xe606a0*/ UnityEngine.Canvas TopMostCanvas();
    /*0xe606a8*/ UnityEngine.RectTransform FrontCanvasRectTransform();
    /*0xe606fc*/ UnityEngine.RectTransform TopMostCanvasRectTransform();
    /*0xe60750*/ void ShowMessageBox(GuiManager.ELayerType _eType, System.Action<bool> _onAction, bool _isYesNo, bool _isBgExit, string[] _params);
    /*0xe607f0*/ void ShowBuyMessageBox(PTShare.Define.Currency _type, long _amount, System.Action<bool> _onAction, string[] _params);
    /*0xe60890*/ void ShowBuyMessageBox(PTShare.Define.Currency _type, long _amount, System.Action<bool> _onAction, ButtonSound confirmSound, ButtonSound cancelSound, string[] _params);
    /*0xe60940*/ void ShowBuyMessageBox_IdleReward(PTShare.Define.Currency _type, long _amount, System.Action<bool> _onAction, System.TimeSpan _remainTime, string[] _params);
    /*0xe60a00*/ void ShowBuyMessageBox_GuildPoint(long _amount, System.Action<bool> _onAction, string[] _params);
    /*0xe60a94*/ void ShowImageMessageBox(GuiManager.ELayerType _eType, AtlasType _atlasType, string _imagePath, System.Action<bool> _onAction, bool _isYesNo, bool _isBgExit, string[] _params);
    /*0xe60b4c*/ void ShowImageMessageBox(GuiManager.ELayerType _eType, AtlasType _imageAtlas, string _imagePath, AtlasType _frameAtlas, string _framePath, System.Action<bool> _onAction, bool _isYesNo, bool _isBgExit, string[] _params);
    /*0xe60c1c*/ void ShowToastMessage(string _str, float _duration);
    /*0xe60ca4*/ void ShowToastMessage(string _str, float _duration, string[] _params);
    /*0xe60d34*/ void ShowToastMessage(string _str, float _duration, UnityEngine.Vector3 _addPosition, string[] _params);
    /*0xe60f2c*/ void ShowLoading(bool _isShow, bool _isView);
    /*0xe60ff0*/ void ShowExitMessageBox();
    /*0xe61348*/ string GetCurrentGUIName();
    bool IsShowExistGUI<T>();
    /*0xe613d0*/ void HideGuiBaseAll(bool _bDestroy);
    /*0xe615d8*/ int GetCanvasChildCount(GuiManager.ELayerType _eLayerType, bool _bIncludeInactive);
    /*0xe61770*/ bool OnEscape();
    /*0xe6184c*/ void HandlerHideGuiBaseAll();

    enum ELayerType
    {
        Back = 0,
        Front = 1,
        MostFront = 2,
    }

    class <>c
    {
        static /*0x0*/ GuiManager.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__42_0;
        static /*0x10*/ System.Action<bool> <>9__44_0;
        static /*0x18*/ System.Action<System.ValueTuple<string, GuiManager.ELayerType>> <>9__53_0;
        static /*0x20*/ System.Action<System.ValueTuple<string, GuiManager.ELayerType>> <>9__58_0;

        static /*0xf68df8*/ <>c();
        /*0xf68e58*/ <>c();
        /*0xf68e60*/ void <ShowQuitGame>b__42_0(bool _result);
        /*0xf68ebc*/ void <ShowExitMessageBox>b__44_0(bool _result);
        /*0xf68f2c*/ void <ClearAll>b__53_0(System.ValueTuple<string, GuiManager.ELayerType> x);
        /*0xf68f90*/ void <StartGUI>b__58_0(System.ValueTuple<string, GuiManager.ELayerType> x);
    }

    class <>c__46<T>
    {
        static /*0x0*/ GuiManager.<>c__46<T> <>9;
        static /*0x0*/ System.Predicate<string> <>9__46_0;

        static <>c__46();
        <>c__46();
        bool <IsShowExistGUI>b__46_0(string x);
    }

    class <>c__DisplayClass54_0<T>
    {
        /*0x0*/ string name;

        <>c__DisplayClass54_0();
        bool <Add>b__0(System.ValueTuple<string, GuiManager.ELayerType> x);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ string name;

        /*0xf69330*/ <>c__DisplayClass55_0();
        /*0xf69338*/ bool <Remove>b__0(System.ValueTuple<string, GuiManager.ELayerType> x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ System.Type type;
        /*0x18*/ object parent;

        /*0xf69328*/ <>c__DisplayClass58_0();
        /*0xf6935c*/ void <StartGUI>b__1(System.ValueTuple<string, System.Object[]> y);
    }
}

class GuildBossBestRecordPopup : GuiBase
{
    /*0x40*/ LocalizeString m_bestPlayerNameText;
    /*0x48*/ LocalizeString m_bestDamageText;
    /*0x50*/ PlayerProfileSlot m_bestPlayerProfile;
    /*0x58*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x60*/ int m_bossIndex;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x70*/ PTShare.Define.SGuildBoss m_sGuildBoss;
    /*0x78*/ PTShare.Define.SGuildMember m_sGuildMemeber;

    /*0xe62b58*/ GuildBossBestRecordPopup();
    /*0xe61e58*/ void OnCreate();
    /*0xe61e5c*/ void OnDelete();
    /*0xe61e60*/ void OnEnter();
    /*0xe61e64*/ void OnExit();
    /*0xe61fb8*/ void OnFinish();
    /*0xe61fbc*/ void OnLeave();
    /*0xe61fc0*/ void OnStart();
    /*0xe61fc4*/ void InitPopup(int bossIndex);
    /*0xe62514*/ void SetPlayerName();
    /*0xe625b0*/ void SetBestDamage();
    /*0xe62674*/ void SetBestPlayerProfile();
    /*0xe627c8*/ void SetScrollContent();
    /*0xe620fc*/ void EnableUI(bool enable);
    /*0xe62438*/ void BindEvent();
    /*0xe61ee4*/ void RemoveEvent();
    /*0xe62a60*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0xe62bcc*/ void <SetBestPlayerProfile>b__18_0();
    /*0xe62bec*/ bool <SetScrollContent>b__19_0(TableData.TableData_Guildboss data);
}

class GuildBossFastHuntPopup : GuiBase
{
    /*0x40*/ LocalizeString m_prevDamageText;
    /*0x48*/ LocalizeString m_rewardCountText;
    /*0x50*/ PTShare.Define.SGuildBoss m_sGuildBoss;

    /*0xe63304*/ GuildBossFastHuntPopup();
    /*0xe62c10*/ void OnCreate();
    /*0xe62c14*/ void OnDelete();
    /*0xe62c18*/ void OnEnter();
    /*0xe62c1c*/ void OnFinish();
    /*0xe62c20*/ void OnLeave();
    /*0xe62c24*/ void OnStart();
    /*0xe62c28*/ void InitPopup(int bossIndex);
    /*0xe62cb4*/ void SetPrevDamage();
    /*0xe62d78*/ void SetRewardCount();
    /*0xe630a0*/ void OnClickFastHunt();
    /*0xe63308*/ bool <SetRewardCount>b__11_0(TableData.TableData_Guildboss data);
    /*0xe63338*/ void <OnClickFastHunt>b__12_0();
}

class GuildBossOpenPopup : GuiBase
{
    /*0x40*/ LocalizeString m_desc;
    /*0x48*/ LocalizeString m_point;
    /*0x50*/ int m_bossIndex;

    /*0xe63c40*/ GuildBossOpenPopup();
    /*0xe633b8*/ void OnCreate();
    /*0xe633bc*/ void OnDelete();
    /*0xe633c0*/ void OnEnter();
    /*0xe633c4*/ void OnExit();
    /*0xe633c8*/ void OnFinish();
    /*0xe633cc*/ void OnLeave();
    /*0xe633d0*/ void OnStart();
    /*0xe633d4*/ void InitPopup(int bossIndex);
    /*0xe63464*/ void SetDesc();
    /*0xe63690*/ void SetUnlockAmount();
    /*0xe638a0*/ void OnClickRelease();
    /*0xe63bc0*/ void OnClickExit();
    /*0xe63c44*/ bool <SetDesc>b__11_0(TableData.TableData_Guildboss data);
    /*0xe63c68*/ bool <SetUnlockAmount>b__12_0(TableData.TableData_Guildboss data);

    class <>c
    {
        static /*0x0*/ GuildBossOpenPopup.<> <>9;
        static /*0x8*/ System.Action <>9__13_0;

        static /*0xf693d4*/ <>c();
        /*0xf69434*/ <>c();
        /*0xf6943c*/ void <OnClickRelease>b__13_0();
    }
}

class GuildBossRecordEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x20*/ LocalizeString m_playerNameText;
    /*0x28*/ LocalizeString m_damageText;
    /*0x30*/ PTShare.Define.SGuildBossHistory m_sHistory;
    /*0x38*/ int m_bossIndex;

    /*0xe6464c*/ GuildBossRecordEntity();
    /*0xe63c8c*/ void InitEntityByGuildBoss(PTShare.Define.SGuildBossHistory sHistory, int bossIndex);
    /*0xe63f94*/ void InitEntityByEventBoss(PTShare.Define.SGuildBossHistory sHistory, int bossIndex);
    /*0xe63d10*/ void SetProfileSlot();
    /*0xe63e34*/ void SetPlayerName();
    /*0xe63ed0*/ void SetDamage();
    /*0xe6401c*/ void OnClickShowRecord();
    /*0xe640fc*/ void ShowBattleGraph_EventBoss(int _nBossIndex, string _sStatistics, PTShare.Define.SGuildBossHistory _guildBossHistory);
    /*0xe64350*/ void ShowBattleGraph_GuildBoss(int _nBossIndex, string _sStatistics, PTShare.Define.SGuildBossHistory _guildBossHistory);
    /*0xe64654*/ void <SetProfileSlot>b__7_0();
    /*0xe64674*/ bool <ShowBattleGraph_GuildBoss>b__12_0(TableData.TableData_Guildboss data);
}

class GuildBossRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildBossRecordEntity m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> m_historyList;
    /*0x58*/ int m_bossIndex;

    /*0xe64a5c*/ GuildBossRecordPopup();
    /*0xe64698*/ void OnCreate();
    /*0xe6469c*/ void OnDelete();
    /*0xe646a0*/ void OnEnter();
    /*0xe646a4*/ void OnFinish();
    /*0xe646a8*/ void OnLeave();
    /*0xe646ac*/ void OnStart();
    /*0xe646b0*/ void OnExit();
    /*0xe647a8*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historyList, int bossIndex);
    /*0xe648c0*/ void SetScrollContent();
    /*0xe647e4*/ void BindEvnet();
    /*0xe646d4*/ void RemoveEvent();
    /*0xe649d8*/ void HandleScrollContent(int index, GuildBossRecordEntity obj);
}

class GuildBossSkillSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_select;
    /*0x20*/ AtlasImage m_icon;
    /*0x28*/ TooltipData_Skill m_tooltipSkillData;
    /*0x30*/ AtlasImage m_strongIcon;
    /*0x38*/ UnityEngine.GameObject m_freamParent;

    /*0xe64e1c*/ GuildBossSkillSlot();
    /*0xe64ad0*/ void InitSlot(int slotIndex, TableData.TableData_Skillbase skillBase, TableData.TableData_Skilllv skillLevelData, int skillLevel);
    /*0xe64ba8*/ void SetIcon(string type, string name);
    /*0xe64e24*/ void <InitSlot>b__5_0(bool isOn);
}

class GuildCalanderEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_itemRewardSlot;
    /*0x20*/ LocalizeString m_attendConditionText;
    /*0x28*/ LocalizeString m_attendDayText;
    /*0x30*/ LocalizeString m_attendRewardText;
    /*0x38*/ AtlasImage m_backGround;
    /*0x40*/ int m_attendDay;
    /*0x44*/ GuildCalanderEntity.CONDITION m_condition;

    /*0xe65b30*/ GuildCalanderEntity();
    /*0xe658ac*/ void InitEntity(int attendDay, Rewards reward, GuildCalanderEntity.CONDITION condition);
    /*0xe6597c*/ void SetAttendDayText(int day);
    /*0xe659bc*/ void UpdateCondition();
    /*0xe65aa0*/ void OnClickCalander();

    enum CONDITION
    {
        RECEIVE = 0,
        RECEIVE_WAIT = 1,
        NONE = 2,
    }
}

class GuildCalanderPopup : GuiBase
{
    /*0x40*/ LocalizeString m_attendCountText;
    /*0x48*/ LocalizeString m_changeButtonText;
    /*0x50*/ UnityEngine.GameObject m_attendRewardListObject;
    /*0x58*/ UnityEngine.GameObject m_attendMemberListObject;
    /*0x60*/ ScrollContent_GuildMemberEntity m_scrollContentMemberEntity;
    /*0x68*/ ScrollContent_GuildCalanderEntity m_scrollContentAttendEntity;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> m_attendList;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_attendRewardList;
    /*0x80*/ int m_attendDay;
    /*0x84*/ bool m_isNowReceiveReward;
    /*0x85*/ bool m_isViewReward;

    /*0xe66284*/ GuildCalanderPopup();
    /*0xe65b40*/ void OnCreate();
    /*0xe65b44*/ void OnDelete();
    /*0xe65b48*/ void OnEnter();
    /*0xe65cb4*/ void OnFinish();
    /*0xe65cb8*/ void OnLeave();
    /*0xe65e1c*/ void OnStart();
    /*0xe65e20*/ void InitPopup();
    /*0xe65e90*/ void UpdatePopup();
    /*0xe65fd4*/ void UpdateMemberList();
    /*0xe65f28*/ void UpdateAttendRewardList();
    /*0xe66080*/ void UpdateAttendCountText();
    /*0xe660ec*/ void OnClickCalanderViewChange();
    /*0xe660fc*/ void HandleScrollContentAttendMember(int index, GuildMemberEntity obj);
    /*0xe661a0*/ void HandleScrollContentAttendReward(int index, GuildCalanderEntity obj);
    /*0xe65b4c*/ void BindEvent();
    /*0xe65cbc*/ void RemoveEvent();
}

class GuildCharacterData : UnityEngine.ScriptableObject
{
    /*0x18*/ float runTime;
    /*0x1c*/ float runAnimTimeScale;
    /*0x20*/ int tileFindCount;
    /*0x24*/ float scale;
    /*0x28*/ float minRestTime;
    /*0x2c*/ float maxRestTime;
    /*0x30*/ int minRestMove;
    /*0x34*/ int maxRestMove;

    /*0xe66340*/ GuildCharacterData();
}

class GuildCreateWithSettingPopup : GuiBase
{
    static /*0x0*/ System.Action<int, int> OnChangeGuildEmblem;
    static /*0x8*/ System.Action<string> OnChangeGuildName;
    static /*0x10*/ System.Action<string> OnChangeGuildJoinGuide;
    static /*0x18*/ System.Action<string> OnChangeGuildLanguage;
    /*0x40*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x48*/ GuildWindowRequireDropDown m_guildRequireDropdown;
    /*0x50*/ LocalizeString m_titleText;
    /*0x58*/ LocalizeString m_guildNameText;
    /*0x60*/ LocalizeString m_guildJoinNotice;
    /*0x68*/ LocalizeString m_userPriceText;
    /*0x70*/ LocalizeString m_costPriceText;
    /*0x78*/ LocalizeString m_guildLevelRequireText;
    /*0x80*/ LocalizeString m_emptyJoinNoticeText;
    /*0x88*/ UnityEngine.GameObject m_createObject;
    /*0x90*/ UnityEngine.GameObject m_settingButton;
    /*0x98*/ UnityEngine.GameObject m_exitButton;
    /*0xa0*/ long m_amount;
    /*0xa8*/ PTShare.Define.GuildAcceptType m_guildRequireType;
    /*0xac*/ int m_levelRequire;
    /*0xb0*/ int m_guildEmblemIndex;
    /*0xb4*/ int m_guildFrameIndex;
    /*0xb8*/ string m_guildLang;

    static /*0xe68f4c*/ GuildCreateWithSettingPopup();
    /*0xe68ee8*/ GuildCreateWithSettingPopup();
    /*0xe66378*/ void OnCreate();
    /*0xe6637c*/ void OnDelete();
    /*0xe663fc*/ void OnEnter();
    /*0xe66468*/ void OnFinish();
    /*0xe6646c*/ void OnLeave();
    /*0xe66470*/ void OnStart();
    /*0xe66474*/ void OnExit();
    /*0xe66778*/ bool IsCreateMode();
    /*0xe667d4*/ void InitPopup();
    /*0xe66ff4*/ void InitCreatePopup();
    /*0xe672b4*/ void InitSettingPopup();
    /*0xe66d58*/ void SetTitle();
    /*0xe67314*/ void UpdateGuildEmblem();
    /*0xe67338*/ void SetCurrency();
    /*0xe67634*/ void UpdateGuildName(string name);
    /*0xe66ed0*/ void UpdateGuildJoinGuide(string notify);
    /*0xe67100*/ void UpdateGuildRequireLevel();
    /*0xe67648*/ void OnClickEmblemChange();
    /*0xe6786c*/ void OnClickNameChange();
    /*0xe67904*/ void OnClickNotifyChange();
    /*0xe679ac*/ void OnClickGuildLanguageChange();
    /*0xe67a2c*/ void OnClickCreate();
    /*0xe67db0*/ void OnClickConfirm();
    /*0xe68050*/ void OnClickAddLevelRequire();
    /*0xe68138*/ void OnClickMinusLevelRequire();
    /*0xe68220*/ void HandleChangeGuildName(string name);
    /*0xe68234*/ void HandleChangeGuildJoinGuide(string notify);
    /*0xe68550*/ void HandleGuildEmblemChange(int icon, int frame);
    /*0xe688b4*/ void HandleGuildRequireChange(PTShare.Define.GuildAcceptType guildRequireType);
    /*0xe68bd0*/ void HandleGuildLanguageChange(string lang);
    /*0xe66a70*/ void BindEvent();
    /*0xe66498*/ void RemoveEvent();
    /*0xe68f50*/ void <OnClickCreate>b__43_0(bool confirm);
    /*0xe6942c*/ void <OnClickCreate>b__43_1();
    /*0xe69438*/ void <OnClickConfirm>b__44_0();

    class <>c
    {
        static /*0x0*/ GuildCreateWithSettingPopup.<> <>9;
        static /*0x8*/ System.Action <>9__48_0;
        static /*0x10*/ System.Action <>9__49_0;
        static /*0x18*/ System.Action <>9__50_0;
        static /*0x20*/ System.Action <>9__51_0;

        static /*0xf69528*/ <>c();
        /*0xf69588*/ <>c();
        /*0xf69590*/ void <HandleChangeGuildJoinGuide>b__48_0();
        /*0xf69594*/ void <HandleGuildEmblemChange>b__49_0();
        /*0xf69598*/ void <HandleGuildRequireChange>b__50_0();
        /*0xf6959c*/ void <HandleGuildLanguageChange>b__51_0();
    }
}

class GuildDefine
{
    static int GUILD_WAR_DEFAULT_JOIN_COUNT = 20;
    static int GUILD_WAR_DEFAULT_CAPTAIN_COUNT = 1;
    static int GUILD_WAR_DEFAULT_SEASON_DAY = 14;
    static int GUILD_WAR_DEFAULT_SEASON_HOUR = 72;
    static int GUILD_WAR_IMPOSSIBLE_BATTLE_TIME_MINUTE = 10;
    static /*0x0*/ int GUILD_MAX_LEVEL;
    static /*0x4*/ int GUILD_FIELD_CHARACTER_COUNT;
    static /*0x8*/ int GUILD_MAP_MAX_EXTEND;
    static /*0xc*/ int TMP_HOUSE_EXTEND;
    static /*0x10*/ UnityEngine.Vector3 TMP_LEFT_LOOK;
    static /*0x1c*/ UnityEngine.Vector3 TMP_RIGHT_LOOK;
    static /*0x28*/ UnityEngine.Vector3 TMP_HOUSE_LEFT_LOOK;
    static /*0x34*/ UnityEngine.Vector3 TMP_HOUSE_RIGHT_LOOK;
    static /*0x40*/ System.DateTime GuildDefaultDateTime;

    static /*0xe69444*/ GuildDefine();

    enum GUILD_MANAGE_BTN
    {
        GUILD_SEARCH = 0,
        GUILD_QUIT = 1,
        GUILD_NOTIFY_CHANGE = 2,
        GUILD_SETTING = 3,
        GUILD_MAIL = 4,
        GUILD_GUILD_REGISTERLIST = 5,
        GUILD_MASTER_CHANGE = 6,
        GUILD_ELDER_CHANGE = 7,
        GUILD_CAPTAIN_CHANGE = 8,
        GUILD_KICK = 9,
        NULL = 10,
    }

    enum GUILD_POSITION
    {
        NORMAL = 0,
        ELDER = 1,
        MASTER = 2,
        ATTACKER = 3,
        DEFENDER = 4,
    }

    enum GUILD_TILE_TYPE
    {
        NON = 0,
        BUILDING_TILE = 1,
        CHARACTER_ROAD_TILE = 2,
        HOUSING = 3,
        NULL = 4,
    }

    enum GUILD_CHARACTER_MOVE_DESIRE
    {
        LT = 0,
        LB = 1,
        RT = 2,
        RB = 3,
        NULL = 4,
    }

    enum GUILD_MAP_TYPE
    {
        MAIN = 0,
        HOUSE = 1,
    }

    enum GUILD_BOSSTYPE
    {
        COMMON = 0,
        EPIC = 1,
        NULL = 2,
    }
}

class GuildEmblemSettingPopup : GuiBase
{
    static /*0x0*/ System.Action<int, int> OnClickEmblem;
    /*0x40*/ UnityEngine.GameObject m_toggleParent;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggle;
    /*0x50*/ ScrollContent_GuildEmblemSlot m_scrollContent;
    /*0x58*/ GuildEmblemSlot m_currentGuildEmblem;
    /*0x60*/ int m_currentEmblemIndex;
    /*0x64*/ int m_currentFrameIndex;
    /*0x68*/ System.Collections.Generic.List<int> m_emblemList;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Profileskin> m_frameList;
    /*0x78*/ GuildEmblemSettingPopup.GuildEmblemSetType currentToggleType;

    static /*0xe6abc0*/ GuildEmblemSettingPopup();
    /*0xe6ab38*/ GuildEmblemSettingPopup();
    /*0xe69548*/ void OnCreate();
    /*0xe6954c*/ void OnDelete();
    /*0xe69550*/ void OnEnter();
    /*0xe697a8*/ void OnFinish();
    /*0xe697ac*/ void OnLeave();
    /*0xe699a8*/ void OnStart();
    /*0xe699ac*/ void OnExit();
    /*0xe676c8*/ void InitPopup(GuildEmblemSettingPopup.GuildEmblemSetType eType);
    /*0xe69a24*/ void InitializeToggle();
    /*0xe69c3c*/ void UpdatePopup();
    /*0xe69c78*/ void UpdateCurrenctEmblem();
    /*0xe69c9c*/ void UpdateEmblemList();
    /*0xe69ed0*/ void OnClick_Confirm();
    /*0xe69f94*/ void HandleChangeEmblem(int icon, int frame);
    /*0xe69f9c*/ void HandleScrollContent_Frame(int index, GuildEmblemSlot obj);
    /*0xe6a9bc*/ void HandleScrollContent_Icon(int index, GuildEmblemSlot obj);
    /*0xe695c8*/ void BindEvnet();
    /*0xe697b0*/ void RemoveEvent();

    enum GuildEmblemSetType
    {
        ICON = 0,
        FRAME = 1,
        End = 2,
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ GuildEmblemSettingPopup.GuildEmblemSetType index;
        /*0x18*/ GuildEmblemSettingPopup <>4__this;

        /*0xf695a0*/ <>c__DisplayClass19_0();
        /*0xf695a8*/ void <InitializeToggle>b__0(bool on);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ int index;

        /*0xf69648*/ <>c__DisplayClass25_0();
        /*0xf69650*/ bool <HandleScrollContent_Frame>b__0(TableData.TableData_Profileskin x);
    }
}

class GuildEmblemSettingSlot : GuildEmblemSlot
{
    /*0x38*/ UnityEngine.GameObject m_selectObject;
    /*0x40*/ LocalizeString m_requireText;
    /*0x48*/ UnityEngine.Material m_grayScaleMaterial;
    /*0x50*/ bool m_isUnlock;
    /*0x54*/ GuildEmblemSettingPopup.GuildEmblemSetType currentType;

    /*0xe6b0cc*/ GuildEmblemSettingSlot();
    /*0xe6abc4*/ void InitEmblem(int emblemIndex, int frameImage, int guildLevel);
    /*0xe6ac40*/ void InitReuire();
    /*0xe6ae68*/ void SetRequireText(bool isUnlock, int needLevel);
    /*0xe6a9a0*/ void SetTextSize(int size);
    /*0xe6a964*/ void SetActiveText(bool enable);
    /*0xe6a948*/ void SetLocalText(string key, string[] param);
    /*0xe6a4e4*/ void SetMaterial(bool isUnlock);
    /*0xe6a310*/ void Selected(bool select);
    /*0xe6afb4*/ void OnClickEmblem();
}

class GuildEmblemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_iconImage;
    /*0x20*/ AtlasImage m_frameImage;
    /*0x28*/ int m_emblemIndex;
    /*0x2c*/ int m_frameIndex;
    /*0x30*/ int m_guildLevel;

    /*0xe6b0d4*/ GuildEmblemSlot();
    /*0xe6b0dc*/ void InitEmblem(PTShare.Define.SGuildMini data);
    /*0xe6ac0c*/ void InitEmblem(int emblemIndex, int frameIndex, int guildLevel);
    /*0xe6b104*/ void SetIconImage(int index);
    /*0xe6b1d0*/ void SetFrameImage(int index);
}

class GuildFieldCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_baseCharacterSkel;
    /*0x20*/ AtlasImage m_characterNameBG;
    /*0x28*/ LocalizeString m_characterNameText;
    /*0x30*/ GuildCharacterData m_guildCharacterData;
    /*0x38*/ DialogTalk m_dialog;
    /*0x40*/ GuildMap m_guildMap;
    /*0x48*/ PTShare.Define.SGuildMember m_member;
    /*0x50*/ GuildTile m_standTile;
    /*0x58*/ GuildTile m_prevTile;
    /*0x60*/ GuildDefine.GUILD_CHARACTER_MOVE_DESIRE m_desire;
    /*0x64*/ GuildDefine.GUILD_MAP_TYPE m_guildMapType;
    /*0x68*/ bool m_wantRest;
    /*0x70*/ string m_prevPlayAnim;
    /*0x78*/ UnityEngine.Coroutine m_restCoroutine;
    /*0x80*/ UnityEngine.Coroutine m_moveCoroutine;
    /*0x88*/ int m_leftRestTick;

    /*0xe6c4f0*/ GuildFieldCharacter();
    /*0xe6b2c0*/ PTShare.Define.SGuildMember GetMember();
    /*0xe6b2c8*/ void OnDisable();
    /*0xe6b328*/ void SetMember(PTShare.Define.SGuildMember member);
    /*0xe6b84c*/ void SetStandTile(GuildTile standTile);
    /*0xe6b94c*/ void StartMove();
    /*0xe6ba04*/ void MoveCharacter();
    /*0xe6c0f4*/ void InitCharacter(PTShare.Define.SGuildMember member, GuildMap parent, GuildDefine.GUILD_MAP_TYPE guildMapTile);
    /*0xe6b330*/ void SetCharacter();
    /*0xe6bf34*/ void SetRestTick();
    /*0xe6b900*/ void SetPosition(UnityEngine.Vector3 worldPosition);
    /*0xe6bf7c*/ GuildDefine.GUILD_CHARACTER_MOVE_DESIRE GetIgnoreDesire(GuildDefine.GUILD_CHARACTER_MOVE_DESIRE prevDesire);
    /*0xe6bf98*/ bool IsDontMove(GuildDefine.GUILD_CHARACTER_MOVE_DESIRE ignoreDesire);
    /*0xe6be18*/ void UpdateCharacterAnim(Spine.Unity.SkeletonGraphic target, string animName, bool isLoop, float timeScale, bool init);
    /*0xe6b998*/ System.Collections.IEnumerator CoMoveLoop();
    /*0xe6bec8*/ System.Collections.IEnumerator CoRestTimer();
    /*0xe6c064*/ System.Collections.IEnumerator CoMoveDest(UnityEngine.Vector3 dest);
    /*0xe6c200*/ System.Collections.IEnumerator CoLateResize();
    /*0xe6c26c*/ void OnClick();

    class <CoMoveLoop>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;

        /*0xf69a20*/ <CoMoveLoop>d__29(int <>1__state);
        /*0xf69a4c*/ void System.IDisposable.Dispose();
        /*0xf69a50*/ bool MoveNext();
        /*0xf69b00*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf69b08*/ void System.Collections.IEnumerator.Reset();
        /*0xf69b48*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRestTimer>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;

        /*0xf69b50*/ <CoRestTimer>d__30(int <>1__state);
        /*0xf69b7c*/ void System.IDisposable.Dispose();
        /*0xf69b80*/ bool MoveNext();
        /*0xf69c74*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf69c7c*/ void System.Collections.IEnumerator.Reset();
        /*0xf69cbc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMoveDest>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector3 dest;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__2;
        /*0x40*/ float <moveSpeed>5__3;
        /*0x44*/ float <t>5__4;

        /*0xf69830*/ <CoMoveDest>d__31(int <>1__state);
        /*0xf6985c*/ void System.IDisposable.Dispose();
        /*0xf69860*/ bool MoveNext();
        /*0xf699d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf699d8*/ void System.Collections.IEnumerator.Reset();
        /*0xf69a18*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateResize>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;

        /*0xf69678*/ <CoLateResize>d__32(int <>1__state);
        /*0xf696a4*/ void System.IDisposable.Dispose();
        /*0xf696a8*/ bool MoveNext();
        /*0xf697e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf697e8*/ void System.Collections.IEnumerator.Reset();
        /*0xf69828*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildGeneralBossPopup : GuiBase
{
    static /*0x0*/ int m_lastPage;
    /*0x40*/ LocalizeString m_bossInfoText;
    /*0x48*/ LocalizeString m_bossNameText;
    /*0x50*/ LocalizeString m_leftTime;
    /*0x58*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x60*/ GuildBossSkillSlot[] m_guildBossSkills;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x70*/ UnityEngine.GameObject[] m_pageButtonObjects;
    /*0x78*/ UnityEngine.UI.Button m_battleButton;
    /*0x80*/ UnityEngine.UI.Button m_sweepButton;
    /*0x88*/ UnityEngine.UI.Button m_unlockButton;
    /*0x90*/ UnityEngine.GameObject m_bestHuntObject;
    /*0x98*/ LocalizeString m_unlockAmountText;
    /*0xa0*/ LocalizeString m_tryCountText;
    /*0xa8*/ UnityEngine.UI.ScrollRect m_scrollInfoText;
    /*0xb0*/ HeroManageTooltip m_tooltip;
    /*0xb8*/ int m_currenctPageIndex;
    /*0xc0*/ TableData.TableData_Unitbase m_unitBase;
    /*0xc8*/ TableData.TableData_Unitlv m_unitLvData;
    /*0xd0*/ TableData.TableData_Guildboss m_guildBossData;
    /*0xd8*/ UnityEngine.Coroutine m_timerCoroutine;
    /*0xe0*/ int m_bossPageCount;
    /*0xe8*/ System.Collections.Generic.List<Rewards> m_rewardList;

    static /*0xe6fd3c*/ GuildGeneralBossPopup();
    /*0xe6fcc8*/ GuildGeneralBossPopup();
    /*0xe6c54c*/ void OnCreate();
    /*0xe6c550*/ void OnDelete();
    /*0xe6c554*/ void OnEnter();
    /*0xe6c5c0*/ void OnFinish();
    /*0xe6c5c4*/ void OnLeave();
    /*0xe6c760*/ void OnStart();
    /*0xe6c764*/ void OnExit();
    /*0xe6c8c8*/ void InitPopup();
    /*0xe6c934*/ void InitPopup(int pageIndex);
    /*0xe6cb68*/ void UpdatePage();
    /*0xe6ccfc*/ void UpdateButtons();
    /*0xe6d0ac*/ void UpdateUnlockAmount();
    /*0xe6d2c0*/ void UpdateBossName();
    /*0xe6d408*/ void UpdateBossInfo();
    /*0xe6e638*/ System.Collections.IEnumerator CoLateRefresh();
    /*0xe6cc40*/ void UpdateBossData();
    /*0xe6d9dc*/ void UpdateSkillList();
    /*0xe6e044*/ void UpdateTryCount();
    /*0xe6e6a4*/ int GetSkillLevel(TableData.TableData_Skilllv skillData, int tier);
    /*0xe6ddc8*/ void UpdateBoss();
    /*0xe6d574*/ void UpdateRewardList();
    /*0xe6df2c*/ void UpdatePageButton();
    /*0xe6e2e8*/ bool IsUnlockBoss();
    /*0xe6e5cc*/ int FindGuildHuntCount();
    /*0xe6eadc*/ void OnClickPage(bool isLeft);
    /*0xe6eba0*/ void OnClickBattleStart();
    /*0xe6eec4*/ void OnClickFastHunting();
    /*0xe6f1e8*/ void OnClickBestRecord();
    /*0xe6f35c*/ void OnClickRecord();
    /*0xe6f600*/ void OnClickHelp();
    /*0xe6f6a4*/ void OnClickRankBoard();
    /*0xe6f99c*/ void OnClickOpenBoss();
    /*0xe6faa8*/ void OnClickBossTooltip();
    /*0xe6fb28*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0xe6fc58*/ void HandleOnRefreshBoss();
    /*0xe6e298*/ void PlayLeftTime();
    /*0xe6fc5c*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0xe6c9e0*/ void BindEvent();
    /*0xe6c5c8*/ void RemoveEvent();
    /*0xe6fd40*/ bool <UpdateUnlockAmount>b__34_0(TableData.TableData_Guildboss data);
    /*0xe6fd70*/ void <OnClickRecord>b__51_0(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historys);

    class <CoLateRefresh>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildGeneralBossPopup <>4__this;

        /*0xf69e38*/ <CoLateRefresh>d__37(int <>1__state);
        /*0xf69e64*/ void System.IDisposable.Dispose();
        /*0xf69e68*/ bool MoveNext();
        /*0xf69f28*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf69f30*/ void System.Collections.IEnumerator.Reset();
        /*0xf69f70*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ GuildGeneralBossPopup.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__39_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__39_1;
        static /*0x18*/ System.Action<ServerProtocol.ResGuildGuildRanking> <>9__53_0;

        static /*0xf69cc4*/ <>c();
        /*0xf69d24*/ <>c();
        /*0xf69d2c*/ int <UpdateSkillList>b__39_0(TableData.TableData_Skillbase x);
        /*0xf69d44*/ TableData.TableData_Skillbase <UpdateSkillList>b__39_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
        /*0xf69d90*/ void <OnClickRankBoard>b__53_0(ServerProtocol.ResGuildGuildRanking response);
    }

    class <CoUpdateLeftTime>d__59 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildGeneralBossPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__2;
        /*0x30*/ System.TimeSpan <timeSpan>5__3;

        /*0xf69f78*/ <CoUpdateLeftTime>d__59(int <>1__state);
        /*0xf69fa4*/ void System.IDisposable.Dispose();
        /*0xf69fa8*/ bool MoveNext();
        /*0xf6a634*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6a63c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6a67c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildHousePopup : GuiBase
{
    /*0x40*/ GuildMap m_guildMap;
    /*0x48*/ GuildTopWindow m_guildTopWindow;
    /*0x50*/ GuildNpcCharacter m_guildNPC;

    /*0xe70840*/ GuildHousePopup();
    /*0xe6fe20*/ void OnCreate();
    /*0xe6fe24*/ void OnEnter();
    /*0xe6fe90*/ void OnStart();
    /*0xe6fe94*/ void OnFinish();
    /*0xe6fe98*/ void OnLeave();
    /*0xe6fe9c*/ void OnDelete();
    /*0xe6fea0*/ void OnExit();
    /*0xe6ff8c*/ void InitPopup();
    /*0xe70070*/ void InitDialog();
    /*0xe705a0*/ void OnClickHelp();
    /*0xe70644*/ void OnClickExit();
    /*0xe70650*/ void OnClickGuildMemberList();
    /*0xe70724*/ void OnClickGuildShop();
    /*0xe70844*/ void <OnClickGuildMemberList>b__14_0();

    class <>c
    {
        static /*0x0*/ GuildHousePopup.<> <>9;
        static /*0x8*/ System.Action <>9__15_1;
        static /*0x10*/ System.Action <>9__15_0;

        static /*0xf6a684*/ <>c();
        /*0xf6a6e4*/ <>c();
        /*0xf6a6ec*/ void <OnClickGuildShop>b__15_0();
        /*0xf6a834*/ void <OnClickGuildShop>b__15_1();
    }
}

class GuildInfomationPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildMemberEntity m_scrollContent;
    /*0x48*/ LocalizeString m_guildId;
    /*0x50*/ LocalizeString m_titleText;
    /*0x58*/ LocalizeString m_levelRequireText;
    /*0x60*/ LocalizeString m_langText;
    /*0x68*/ LocalizeString m_requireText;
    /*0x70*/ LocalizeString m_crownCountText;
    /*0x78*/ LocalizeString m_guildNotifyText;
    /*0x80*/ LocalizeString m_guildUserCountText;
    /*0x88*/ GuildLevelSlot m_guildLevelSlot;
    /*0x90*/ UnityEngine.UI.Button m_guildRegisterButton;
    /*0x98*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0xa0*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0xa8*/ UnityEngine.GameObject m_guildCP;
    /*0xb0*/ LocalizeString m_guildCPText;
    /*0xb8*/ PTShare.Define.SGuild m_sGuild;
    /*0xc0*/ PTShare.Define.SGuildSummary m_sGuildSummary;
    /*0xc8*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> m_memberList;

    /*0xe72ee4*/ GuildInfomationPopup();
    /*0xe711bc*/ void OnCreate();
    /*0xe711c0*/ void OnDelete();
    /*0xe711c4*/ void OnEnter();
    /*0xe71318*/ void OnFinish();
    /*0xe7131c*/ void OnLeave();
    /*0xe71468*/ void OnStart();
    /*0xe7146c*/ void InitPopup(bool bJoinBtnActive, long cp);
    /*0xe715a4*/ void InitPopup(PTShare.Define.SGuildSummary sGuildSummary, PTShare.Define.SGuild sGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMember, bool bJoinBtnActive, long cp);
    /*0xe71808*/ void SetGuildId(int id);
    /*0xe718f0*/ void SetGuildLevelSlot(int level);
    /*0xe71900*/ void SetLevelRequire(int level);
    /*0xe71fa0*/ void SetLanguage(string lang);
    /*0xe71be8*/ void SetRequire(int requireType);
    /*0xe7278c*/ void SetEnableGuildMemberRegisterBtn(bool enable);
    /*0xe72348*/ void SetGuildName();
    /*0xe72308*/ void SetCrown(int crown);
    /*0xe723e4*/ void SetGuildNotify(string notify);
    /*0xe724cc*/ void SetGuildUserCount(int max, int now);
    /*0xe725e8*/ void SetGuildMemberList(System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMemberList);
    /*0xe72424*/ void SetGuildEmblem(PTShare.Define.SGuildMini data);
    /*0xe726c8*/ bool IsShowJoinRequestObject();
    /*0xe728c8*/ void OnClickRegisterRequest();
    /*0xe7285c*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0xe7123c*/ void BindEvent();
    /*0xe71394*/ void RemoveEvent();
    /*0xe72e0c*/ void HandleScrollContent(int index, GuildMemberEntity obj);
    /*0xe72ee8*/ void <OnClickRegisterRequest>b__39_0();

    class <CoLateScrollRectRefresh>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildInfomationPopup <>4__this;

        /*0xf6a8b8*/ <CoLateScrollRectRefresh>d__40(int <>1__state);
        /*0xf6a8e4*/ void System.IDisposable.Dispose();
        /*0xf6a8e8*/ bool MoveNext();
        /*0xf6a9a8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6a9b0*/ void System.Collections.IEnumerator.Reset();
        /*0xf6a9f0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildLanguageChangePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle[] Toogles;
    /*0x48*/ UnityEngine.UI.Text[] m_cLocalizeArray;
    /*0x50*/ int m_localizeTypeIndex;

    /*0xe73508*/ GuildLanguageChangePopup();
    /*0xe7308c*/ void OnCreate();
    /*0xe73090*/ void OnDelete();
    /*0xe73094*/ void OnEnter();
    /*0xe73098*/ void OnFinish();
    /*0xe7309c*/ void OnLeave();
    /*0xe730a0*/ void OnStart();
    /*0xe67a28*/ void InitPopup();
    /*0xe730a4*/ void LoadLocalizeType();
    /*0xe73308*/ void OnClickConfirm();
    /*0xe73474*/ void OnClickCancel();
    /*0xe73480*/ void OnClick_ChangeLanguage(int nIndex);
    /*0xe73500*/ void BindEvent();
    /*0xe73504*/ void RemoveEvent();
}

class GuildLevelSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_frame;
    /*0x20*/ LocalizeString m_level;
    /*0x28*/ ParticleBase m_particle;

    /*0xe73718*/ GuildLevelSlot();
    /*0xe72830*/ void InitSlot(int level);
    /*0xe73514*/ void SetLevel(int level);
    /*0xe735bc*/ void SetFrame(int level);
    /*0xe73628*/ void SetLevelUpParticle();
}

class GuildMainPopup : GuiBase
{
    /*0x40*/ GuildMap m_guildMap;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x50*/ GuildTopWindow m_guildTopWindow;
    /*0x58*/ UnityEngine.GameObject m_bossReddot;
    /*0x60*/ UnityEngine.GameObject m_guildManageReddot;
    /*0x68*/ UnityEngine.GameObject m_guildHouseReddt;
    /*0x70*/ UnityEngine.GameObject m_guildWarReddt;
    /*0x78*/ UnityEngine.Coroutine m_bossCoroutine;

    /*0xe74e1c*/ GuildMainPopup();
    /*0xe73a70*/ void OnCreate();
    /*0xe73a74*/ void OnDelete();
    /*0xe73a78*/ void OnEnter();
    /*0xe73a7c*/ void OnFinish();
    /*0xe73a80*/ void OnLeave();
    /*0xe73cc4*/ void OnStart();
    /*0xe73cc8*/ void OnExit();
    /*0xe6c7f4*/ void InitPopup();
    /*0xe74664*/ void RefreshReddot();
    /*0xe745a4*/ void CheckChangeMaster();
    /*0xe74050*/ void SetGuildBoss();
    /*0xe743a0*/ void SetReddot();
    /*0xe73d98*/ bool GetIsBossTryReddot();
    /*0xe74668*/ void UpdateCharacterAnim(Spine.Unity.SkeletonGraphic target, string animName, bool isLoop, float timeScale);
    /*0xe73e7c*/ void BindEvent();
    /*0xe73a84*/ void RemoveEvent();
    /*0xe74750*/ void HandleChangeGuild(PTShare.Define.SGuild sGuild);
    /*0xe74764*/ void HandleCharacterAnimComplete(Spine.TrackEntry trackEntry);
    /*0xe74828*/ void OnClickGuildMemberList();
    /*0xe748fc*/ void OnClickHunting();
    /*0xe749d0*/ void OnClickGuildShop();
    /*0xe74aec*/ void OnClickGuildHouse();
    /*0xe74d28*/ void OnClickGuildWar();
    /*0xe74dfc*/ void HandleChangeMemberData();
    /*0xe746e4*/ System.Collections.IEnumerator CoUpdateGuildBossAnim();
    /*0xe74e20*/ void <OnClickGuildMemberList>b__26_0();
    /*0xe74eb4*/ void <OnClickHunting>b__27_0();
    /*0xe74f48*/ void <OnClickGuildHouse>b__29_0();
    /*0xe7501c*/ void <OnClickGuildHouse>b__29_1();
    /*0xe750ac*/ void <OnClickGuildWar>b__30_0();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> unlockBossList;

        /*0xf6ac2c*/ <>c__DisplayClass18_0();
        /*0xf6ac34*/ bool <SetGuildBoss>b__0(TableData.TableData_Guildboss data);
        /*0xf6ace0*/ bool <SetGuildBoss>b__1(TableData.TableData_Guildboss data);
    }

    class <>c
    {
        static /*0x0*/ GuildMainPopup.<> <>9;
        static /*0x8*/ System.Action <>9__28_1;
        static /*0x10*/ System.Action <>9__28_0;

        static /*0xf6a9f8*/ <>c();
        /*0xf6aa58*/ <>c();
        /*0xf6aa60*/ void <OnClickGuildShop>b__28_0();
        /*0xf6aba8*/ void <OnClickGuildShop>b__28_1();
    }

    class <CoUpdateGuildBossAnim>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMainPopup <>4__this;

        /*0xf6ad64*/ <CoUpdateGuildBossAnim>d__32(int <>1__state);
        /*0xf6ad90*/ void System.IDisposable.Dispose();
        /*0xf6ad94*/ bool MoveNext();
        /*0xf6aed4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6aedc*/ void System.Collections.IEnumerator.Reset();
        /*0xf6af1c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildManageButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_buttonName;
    /*0x20*/ UnityEngine.GameObject m_reddot;
    /*0x28*/ GuildDefine.GUILD_MANAGE_BTN m_buttonType;
    /*0x30*/ System.Action m_callBack;
    /*0x38*/ PTShare.Define.SGuildMember m_sMember;

    /*0xe77228*/ GuildManageButton();
    /*0xe75180*/ void InitManageButton(PTShare.Define.SGuildMember member, GuildDefine.GUILD_MANAGE_BTN btnType, System.Action callBack);
    /*0xe7591c*/ void SetReddot();
    /*0xe751ac*/ void SetButtonName();
    /*0xe759f4*/ void OnClick();
    /*0xe77238*/ void <OnClick>b__8_4(bool confirm);
    /*0xe776e0*/ void <OnClick>b__8_5(bool confirm);
    /*0xe77b8c*/ void <OnClick>b__8_6(bool confirm);
    /*0xe78038*/ void <OnClick>b__8_7(bool confirm);
    /*0xe784e8*/ void <OnClick>b__8_8(bool confirm);
    /*0xe78a58*/ void <OnClick>b__8_9(bool confirm);
    /*0xe78e8c*/ void <OnClick>b__8_17();

    class <>c
    {
        static /*0x0*/ GuildManageButton.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__8_0;
        static /*0x10*/ System.Action <>9__8_10;
        static /*0x18*/ System.Action<bool> <>9__8_1;
        static /*0x20*/ System.Action <>9__8_11;
        static /*0x28*/ System.Action<bool> <>9__8_2;
        static /*0x30*/ System.Action<System.Collections.Generic.List<PTShare.Define.SPlayer>> <>9__8_3;
        static /*0x38*/ System.Action <>9__8_12;
        static /*0x40*/ System.Action <>9__8_13;
        static /*0x48*/ System.Action <>9__8_14;
        static /*0x50*/ System.Action <>9__8_15;
        static /*0x58*/ System.Action <>9__8_16;

        static /*0xf6af24*/ <>c();
        /*0xf6af84*/ <>c();
        /*0xf6af8c*/ void <OnClick>b__8_0(bool instance);
        /*0xf6b04c*/ void <OnClick>b__8_1(bool confirm);
        /*0xf6b180*/ void <OnClick>b__8_10();
        /*0xf6b184*/ void <OnClick>b__8_2(bool confirm);
        /*0xf6b2b8*/ void <OnClick>b__8_11();
        /*0xf6b2bc*/ void <OnClick>b__8_3(System.Collections.Generic.List<PTShare.Define.SPlayer> instance);
        /*0xf6b344*/ void <OnClick>b__8_12();
        /*0xf6b3bc*/ void <OnClick>b__8_13();
        /*0xf6b434*/ void <OnClick>b__8_14();
        /*0xf6b4ac*/ void <OnClick>b__8_15();
        /*0xf6b524*/ void <OnClick>b__8_16();
    }
}

class GuildManagePopup : GuiBase
{
    static /*0x0*/ System.Action<string> OnChangeNotify;
    static /*0x8*/ System.Action OnChangeMemberData;
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ ScrollContent_GuildMemberEntity m_scrollContent;
    /*0x50*/ GuildLevelSlot m_guildLevelSlot;
    /*0x58*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x60*/ GuildManageWindow m_guildManageWindow;
    /*0x68*/ LocalizeString m_guildNameText;
    /*0x70*/ LocalizeString m_guildCrownText;
    /*0x78*/ LocalizeString m_guildNotifyText;
    /*0x80*/ LocalizeString m_guildUserCountText;
    /*0x88*/ LocalizeString m_guildIdText;
    /*0x90*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x98*/ UnityEngine.UI.Slider m_expSlider;
    /*0xa0*/ LocalizeString m_expSliderText;
    /*0xa8*/ UnityEngine.GameObject m_guildNewRequesterReddot;
    /*0xb0*/ PTShare.Define.SGuild m_sGuild;
    /*0xb8*/ GuildDefine.GUILD_MAP_TYPE m_openType;

    static /*0xe7a7ec*/ GuildManagePopup();
    /*0xe7a7e8*/ GuildManagePopup();
    /*0xe7905c*/ void OnCreate();
    /*0xe79060*/ void OnDelete();
    /*0xe79064*/ void OnEnter();
    /*0xe7955c*/ void OnFinish();
    /*0xe79560*/ void OnLeave();
    /*0xe799dc*/ void OnStart();
    /*0xe799e0*/ void OnExit();
    /*0xe79b20*/ void InitPopup();
    /*0xe708d8*/ void InitPopup(GuildDefine.GUILD_MAP_TYPE openType);
    /*0xe79b28*/ void SetGuildId();
    /*0xe79c18*/ void SetGuildLevelSlot(int level);
    /*0xe79c28*/ void SetGuildName(string name);
    /*0xe79c3c*/ void SetGuildCrown(int crown);
    /*0xe79c7c*/ void SetNotify(string notify);
    /*0xe79c90*/ void SetGuildUserCount(int maxUser, int currUser);
    /*0xe79f24*/ void SetSlider(int currValue, int maxValue);
    /*0xe79e28*/ void SetSliderMax();
    /*0xe79d54*/ void SetGuildEmblem(int index, int frame);
    /*0xe79d70*/ void SetReddot();
    /*0xe7a05c*/ void UpdateScrollContent();
    /*0xe7a170*/ void HandleChangeEmblem(int icon, int frame);
    /*0xe7a18c*/ void HandleChangeNotify(string notify);
    /*0xe7a1a0*/ void HandleChangeName(string name);
    /*0xe7a1b4*/ void HandleChangeMemberData();
    /*0xe7a268*/ void HandleGuildChange(PTShare.Define.SGuild sGuild);
    /*0xe7a27c*/ void OnClickGuildManage();
    /*0xe790dc*/ void BindEvent();
    /*0xe79564*/ void RemoveEvent();
    /*0xe7a104*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0xe7a744*/ void HandleScrollContent(int index, GuildMemberEntity obj);

    class <CoLateScrollRectRefresh>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildManagePopup <>4__this;

        /*0xf6b59c*/ <CoLateScrollRectRefresh>d__46(int <>1__state);
        /*0xf6b5c8*/ void System.IDisposable.Dispose();
        /*0xf6b5cc*/ bool MoveNext();
        /*0xf6b68c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6b694*/ void System.Collections.IEnumerator.Reset();
        /*0xf6b6d4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildManageWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildManageButton m_guildManageButtonPrefab;
    /*0x20*/ UnityEngine.GameObject parent;
    /*0x28*/ System.Collections.Generic.List<GuildManageButton> m_cashingList;
    /*0x30*/ bool m_exitWait;

    /*0xe7a94c*/ GuildManageWindow();
    /*0xe7a4c8*/ void InitWindow(PTShare.Define.SGuildMember member, GuildDefine.GUILD_MANAGE_BTN[] guildManageBtns);
    /*0xe7a7f0*/ void SetEnableButtons(bool enable);
    /*0xe7a914*/ void OnClickHide();
    /*0xe7a8a8*/ System.Collections.IEnumerator CoTouchBlock();

    class <CoTouchBlock>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildManageWindow <>4__this;

        /*0xf6b6dc*/ <CoTouchBlock>d__7(int <>1__state);
        /*0xf6b708*/ void System.IDisposable.Dispose();
        /*0xf6b70c*/ bool MoveNext();
        /*0xf6b7c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6b7d0*/ void System.Collections.IEnumerator.Reset();
        /*0xf6b810*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildManager : Singleton.Component.SingletonComponent<GuildManager>
{
    static /*0x0*/ System.Action<PTShare.Define.SGuild> OnChangeGuild;
    static /*0x8*/ System.Action OnRefreshGuild;
    static /*0x10*/ System.Action OnRefreshBoss;
    static /*0x18*/ System.Action OnRefreshReddot;
    /*0x28*/ PTShare.Define.SGuild m_playerGuild;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> m_playerGuildMemberList;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> m_searchGuildList;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> m_guildBossDataList;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> m_guildFrameList;
    /*0x50*/ int m_dailyPoint;
    /*0x54*/ int m_huntingRewardID;
    /*0x58*/ ServerProtocol.ResGuildRanking m_bossDamagePersonData;
    /*0x60*/ ServerProtocol.ResGuildGuildRanking m_bossDamageGuildData;
    /*0x68*/ bool <isNeedSetCamp>k__BackingField;
    /*0x69*/ bool <IsNewRequester>k__BackingField;
    /*0x6a*/ bool <IsNewOffice>k__BackingField;
    /*0x6b*/ bool <IsNewGuildWar>k__BackingField;
    /*0x6c*/ int <TrashCount>k__BackingField;
    /*0x70*/ int <SelectBoss>k__BackingField;
    /*0x74*/ int <GuildStayTime>k__BackingField;
    /*0x78*/ long <GuildBeforeMaster>k__BackingField;
    /*0x80*/ System.Collections.Generic.Dictionary<int, PTShare.Define.GuildWarPosition> currentMyGuildWarPosition;
    /*0x88*/ GuildPositionStatus currentMyOrganizeStatus;
    /*0x90*/ System.Collections.Generic.List<int> currentAttackUsingHeroIds;
    /*0x98*/ System.Collections.Generic.List<int> currentDefenseUsingHeroIds;
    /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> currentAttackMostHeroList;
    /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> currentDefenseMostHeroList;
    /*0xb0*/ PTShare.Define.SGuildWarPlayer currentAttackCaptainPlayer;
    /*0xb8*/ PTShare.Define.SGuildWarPlayer currentDefenseCaptainPlayer;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> currentLegionHeroList;
    /*0xc8*/ bool bNewAtkDeckReddot;
    /*0xc9*/ bool bNewDefDeckReddot;
    /*0xd0*/ GuildWarInfomation guildWarInfomation;
    /*0x118*/ System.Collections.Generic.List<PTShare.Define.SContribution> guildWarContributionlist;
    /*0x120*/ int guildWarContributionRewardIndex;
    /*0x128*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> <CurrentDeckHeroes>k__BackingField;
    /*0x130*/ int <CurrentAttackTactics>k__BackingField;
    /*0x134*/ int <CurrentDefenseTactics>k__BackingField;

    static /*0xe81554*/ GuildManager();
    static /*0xe7e2d8*/ int SortGuildMember(PTShare.Define.SGuildMember lhs, PTShare.Define.SGuildMember rhs);
    /*0xe81354*/ GuildManager();
    /*0xe7a9c4*/ void AwakeInstance();
    /*0xe7a9c8*/ bool InitInstance();
    /*0xe7abe8*/ void ReleaseInstance();
    /*0xe7ad24*/ bool get_isNeedSetCamp();
    /*0xe7ad2c*/ void set_isNeedSetCamp(bool value);
    /*0xe7ad38*/ bool get_IsNewRequester();
    /*0xe7ad40*/ void set_IsNewRequester(bool value);
    /*0xe7ad4c*/ bool get_IsNewOffice();
    /*0xe7ad54*/ void set_IsNewOffice(bool value);
    /*0xe7ad60*/ bool get_IsNewGuildWar();
    /*0xe7ad68*/ void set_IsNewGuildWar(bool value);
    /*0xe7ad74*/ int get_TrashCount();
    /*0xe7ad7c*/ void set_TrashCount(int value);
    /*0xe65464*/ bool IsHaveGuild();
    /*0xe7ad84*/ int get_SelectBoss();
    /*0xe7ad8c*/ void set_SelectBoss(int value);
    /*0xe7ad94*/ int get_GuildStayTime();
    /*0xe7ad9c*/ void set_GuildStayTime(int value);
    /*0xe7ada4*/ long get_GuildBeforeMaster();
    /*0xe7adac*/ void set_GuildBeforeMaster(long value);
    /*0xe7adb4*/ ServerProtocol.ResGuildRanking GetBossDamagePersonRankData();
    /*0xe7adbc*/ ServerProtocol.ResGuildGuildRanking GetBossDamageGuildRankData();
    /*0xe7adc4*/ PTShare.Define.SGuild GetPlayerGuild();
    /*0xe65500*/ PTShare.Define.SGuildMember GetLocalPlayerMemberData();
    /*0xe6fa88*/ GuildDefine.GUILD_POSITION GetLocalPlayerGuildPosition();
    /*0xe7adcc*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> GetUnlockBossList();
    /*0xe7add4*/ bool IsMemberFull();
    /*0xe7ae44*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> GetMemberList();
    /*0xe7ae4c*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> GetSearchGuildList();
    /*0xe62348*/ PTShare.Define.SGuildMember FindMemberData(long userId);
    /*0xe6224c*/ PTShare.Define.SGuildBoss FindUnlockBoss(int index);
    /*0xe7ae54*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardData(long damage);
    /*0xe7af64*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardDataByPrev(long damage);
    /*0xe7b074*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardDataByPrev(int hutingRewardID, long damage);
    /*0xe62f8c*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardData(int hutingRewardID, long damage);
    /*0xe7b1a4*/ TableData.TableData_Guildhuntingreward CreateDummyTable(TableData.TableData_Guildhuntingreward prev);
    /*0xe7b238*/ TableData.TableData_Unitbase GetSelectBossTableData();
    /*0xe6acfc*/ int FindNeedEmblemLevel(int emblemIndex);
    /*0xe6ace4*/ int GetGuildLevel();
    /*0xe69bcc*/ int GetGuildEmblemIndex();
    /*0xe69be4*/ int GetGuildFrameIndex();
    /*0xe77048*/ string GetGuildName();
    /*0xe6e7a8*/ int GetGuildBossTryMaxCount();
    /*0xe79eec*/ int GetNextExp();
    /*0xe7b398*/ int GetLeftExp();
    /*0xe63884*/ int GetConsumeGuildPoint();
    /*0xe7b434*/ int GetDailyEarnGuildPoint();
    /*0xe7b450*/ int GetDayEarnGuildPoint();
    /*0xe7b458*/ int GetWeeklyEarnGuildPoint();
    /*0xe7b478*/ bool IsControlMember(string guildName, int position);
    /*0xe6e840*/ System.Collections.Generic.List<Rewards> GetHuntingDropItem(int bossIndex, long damage);
    /*0xe7b760*/ void NoticeKickGuild();
    /*0xe7b7e4*/ void UpdateAccountGuildData();
    /*0xe7b56c*/ void ParseEquipRewards(ref System.Collections.Generic.List<Rewards> refRewardList, int rate, string data);
    /*0xe7b914*/ void Send_GuildEnter(System.Action callBack);
    /*0xe74b9c*/ void Send_HouseEnter(System.Action callBack);
    /*0xe69080*/ void Send_GuildCreate(int guildMarkIndex, string guildName, string guildLang, int guildJoinRequire, int minLevelRequire, string joinNotify, System.Action callBack);
    /*0xe7bbc0*/ void Send_UpdateInfo(int guildMarkIndex, string guildLang, int guildJoinRequire, int minLevelRequire, string joinNotify, System.Action callBack);
    /*0xe686c8*/ void Send_UpdateEmblem(int emblemIndex, int frameIndex, System.Action callBack);
    /*0xe68d04*/ void Send_UpdateGuildLang(string lang, System.Action callBack);
    /*0xe689e8*/ void Send_UpdateGuildAcceptType(int guildJoinRequire, System.Action callBack);
    /*0xe67e68*/ void Send_UpdateGuildMinReq(int minLevelRequire, System.Action callBack);
    /*0xe6836c*/ void Send_UpdateJoinGuide(string guide, System.Action callBack);
    /*0xe7bdc0*/ void Send_ChangeGuildNotify(string notice, System.Action callBack);
    /*0xe76ebc*/ void Send_GuildRecommend(System.Action<bool> callBack);
    /*0xe7bfa4*/ void Send_ChangeGuildName(string str, System.Action callBack);
    /*0xe77380*/ void Send_GuildMasterInherit(long playerId, System.Action callBack);
    /*0xe78b2c*/ void Send_GuildKick(long playerId, System.Action callBack);
    /*0xe7c148*/ void Send_GuildDestroy(System.Action callBack);
    /*0xe7c498*/ void Send_GuildLeave(System.Action callBack);
    /*0xe7c7e8*/ void Send_GuildSearch(string str, System.Action callBack);
    /*0xe7c984*/ void Send_GuildDetail(int guildId, System.Action<PTShare.Define.SGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember>> callback);
    /*0xe729f8*/ void Send_GuildRegisterRequest(int guildId, System.Action callBack);
    /*0xe770a0*/ void Send_GuildRequesters(System.Action<System.Collections.Generic.List<PTShare.Define.SPlayer>> callBack);
    /*0xe7cb1c*/ void Send_AcceptGuildMember(long playerId, System.Action callBack);
    /*0xe7ce70*/ void Send_DeclineGuildRequester(long playerId, System.Action callBack);
    /*0xe7d008*/ void Send_AllAcceptGuildMember(System.Action callBack);
    /*0xe7d348*/ void Send_AllDeclineGuildRequester(System.Action callBack);
    /*0xe7d4d0*/ void Send_GuildMail(string name, string desc, System.Action callBack);
    /*0xe77cd4*/ void Send_ElderPromotion(long playerId, System.Action callBack);
    /*0xe78630*/ void Send_CaptainPromotion(long playerId, System.Action callBack);
    /*0xe77828*/ void Send_ElderDemote(long playerId, System.Action callBack);
    /*0xe78180*/ void Send_CaptainDemote(long playerId, System.Action callBack);
    /*0xe7d4e4*/ void Send_SetCamp(long playerId, int x, int y, System.Action callBack);
    /*0xe7d6b4*/ void Send_Clean(System.Action<PTShare.Define.SProperty> callBack);
    /*0xe63a1c*/ void Send_BossOpen(int bossIndex, System.Action callBack);
    /*0xe7d844*/ void Send_BossBegin(string heroIds, System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack);
    /*0xe7d9e8*/ void Send_BossFinish(string statistics, string playData, long lcp, string hpmps, double guildBossTotalHitDamage, System.Action<PTShare.Define.SProperty> action);
    /*0xe6315c*/ void Send_SweepBoss(int bossIndex, System.Action callBack);
    /*0xe6f468*/ void Send_BossHistory(int bossIndex, System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack);
    /*0xe7dbb8*/ void Send_BossReplay(string replayId, System.Action<PTShare.Define.SGuildBossReplay> callBack);
    /*0xe7dd50*/ void Send_BossGuildPersonDamageRanking(int bossIndex, System.Action<ServerProtocol.ResGuildRanking> callBack);
    /*0xe6f800*/ void Send_BossGuildDamageRanking(int bossIndex, System.Action<ServerProtocol.ResGuildGuildRanking> callBack);
    /*0xe7deec*/ void Send_WarHeroId(long playerId);
    /*0xe7dfec*/ void HandleOnChangeGuild(PTShare.Define.SGuild sGuild);
    /*0xe7e3b8*/ void HandleDailyChange();
    /*0xe7e5b8*/ void UpdateGuildFrame(System.Collections.Generic.List<PTShare.Define.SFrame> frameList);
    /*0xe7e89c*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> GetUseGuildFrameList();
    /*0xe6a5c0*/ PTShare.Define.SProfileDecorate GetGuildFrame(int id);
    /*0xe6a6b0*/ string GetGuildFrameExpireDate(int id);
    /*0xe6a3bc*/ bool IsNotExpireGuildFrame(int id);
    /*0xe7e8a4*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> get_CurrentDeckHeroes();
    /*0xe7e8ac*/ void set_CurrentDeckHeroes(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> value);
    /*0xe7e8b4*/ int get_CurrentAttackTactics();
    /*0xe7e8bc*/ void set_CurrentAttackTactics(int value);
    /*0xe7e8c4*/ int get_CurrentDefenseTactics();
    /*0xe7e8cc*/ void set_CurrentDefenseTactics(int value);
    /*0xe7e8d4*/ string get_UserToken();
    /*0xe7e954*/ void Send_EnterGuildWar(System.Action onSuccess);
    /*0xe7ea8c*/ void Send_FormGuildWar(System.Action onSuccess);
    /*0xe7ebc4*/ void Send_MyFormGuildWar(System.Action<int, int> onSuccess);
    /*0xe7ecf8*/ void Send_FormDetailGuildWar(int type, int tableid, System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess);
    /*0xe7ee54*/ void Send_SetFormGuildWar(int type, PTShare.Define.SLegionHero hero, string unsetUniqueid, System.Action<PTShare.Define.SHero, long> onSuccess, System.Action<int, string> onFail);
    /*0xe7efdc*/ void Send_SetFormGuildWar(int type, PTShare.Define.SLegionHero hero, PTShare.Define.SHero unsetHero, long unsetPlayerId, System.Action onSuccess, System.Action<int, string> onFail);
    /*0xe7f164*/ void SetFormSubMethod(PTShare.Define.LegionStatus status, PTShare.Define.SLegionHero hero);
    /*0xe7f884*/ void Send_UnsetFormGuildWar(int type, PTShare.Define.SLegionHero hero, System.Action onSuccess, System.Action<int, string> onFail);
    /*0xe7f9f8*/ void Send_SearchGuildWar(bool bIsBuy, System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWar>> onSuccess, System.Action<int, string> onFail);
    /*0xe7fb48*/ void Send_ChoiceGuildWar(int guildid, System.Action<ServerProtocol.ResGuildWarChoice> onSuccess);
    /*0xe7fc8c*/ void Send_HistoryGuildWar(System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarHistory>> onSuccess);
    /*0xe7fdc0*/ void Send_SetCaptain(long playerid, int auth, System.Action onSuccess);
    /*0xe7ff10*/ void Send_BuyTactic(int tacticid, System.Action onSuccess);
    /*0xe80064*/ void Send_GuildWarDeck(int type, System.Action onSuccess);
    /*0xe801ac*/ void Send_GuildWarDeck_ForGuildWarTest(int type, System.Action<ServerProtocol.ResGuildWarDeck> onSuccess);
    /*0xe802f0*/ void Send_GuildWarUpdateDeck(int type, int tactic, string uniqueids, System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess);
    /*0xe8044c*/ void Send_GuildWarBuyTicket(int count, System.Action onSuccess);
    /*0xe80594*/ void Send_GuildWarMember(System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer>> onSuccess);
    /*0xe806c8*/ void Send_GuildWarContribution(System.Action<int, System.Collections.Generic.List<PTShare.Define.SContribution>> onSuccess);
    /*0xe80800*/ void Send_GuildWarUpdateMyCp(long cp);
    /*0xe80864*/ void SetGuildWarPosition(ArenaType type, PTShare.Define.GuildWarPosition position);
    /*0xe808d0*/ void SetGuildWarFormReddot(bool enable);
    /*0xe808dc*/ void SetGuildWarMyHeroReddot(bool enable);
    /*0xe808e8*/ void SetGuildWarAtkDeckReddot(bool enable);
    /*0xe808f4*/ void SetGuildWarDefDeckReddot(bool enable);
    /*0xe80900*/ void SetGuildWarCP(long cp);
    /*0xe80908*/ void SetCurrentTactics(PTShare.Define.GuildWarPosition ePosition, int nIndex);
    /*0xe8092c*/ GuildPositionStatus GetCurrentOrganizeStatus(ArenaType type);
    /*0xe80984*/ PTShare.Define.GuildWarPosition GetCurrentMyGuildWarPosition(ArenaType type);
    /*0xe80a00*/ GuildWarInfomation GetGuildWarInfomation();
    /*0xe80a10*/ PTShare.Define.SGuildWarPlayer GetGuildWarCaptain(PTShare.Define.GuildWarPosition ePosition);
    /*0xe80a2c*/ System.Collections.Generic.List<int> GetUseTacticsList();
    /*0xe80a34*/ bool IsUseTactics(int index);
    /*0xe80b60*/ System.Collections.Generic.List<int> GetCurrentUsingHeroIds(PTShare.Define.GuildWarPosition ePosition);
    /*0xe80b78*/ bool IsCurrentUsingHero(PTShare.Define.GuildWarPosition ePosition, int nTableID);
    /*0xe80c90*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> GetCurrentMostHeroList(PTShare.Define.GuildWarPosition ePosition);
    /*0xe80cac*/ PTShare.Define.SStatBonusHero GetCurrentMostHero(PTShare.Define.GuildWarPosition ePosition, long playerid, int heroId);
    /*0xe80dc4*/ bool IsGuildWarFormReddot();
    /*0xe80dcc*/ bool IsGuildWarMyHeroReddot();
    /*0xe80dd4*/ bool IsGuildWarAtkDeckReddot();
    /*0xe80ddc*/ bool IsGuildWarDefDeckReddot();
    /*0xe80de4*/ System.Collections.Generic.List<PTShare.Define.SContribution> GetCurrentContributionList();
    /*0xe80dec*/ int GetCurrentContributionRewardIndex();
    /*0xe80df4*/ int GetLegionPlayerMaxCount();
    /*0xe80dfc*/ bool IsLocalGuildWarAttackCaptain();
    /*0xe80e68*/ bool IsLocalGuildWarDeffendCaptain();
    /*0xe7bb04*/ bool IsPossiableGuildWar();
    /*0xe81004*/ System.DateTime GetSeasonStartTime(int offset);
    /*0xe81180*/ System.DateTime GetSeasonNextTime();
    /*0xe80ec8*/ System.TimeSpan GetGuildWarReadyTime();
    /*0xe7bb20*/ System.TimeSpan GetGuildWarBattleTime();
    /*0xe81188*/ bool IsImpossibleGuildWarBattleTime();
    /*0xe81204*/ int GetGuildWarSeason();
    /*0xe81558*/ bool <GetGuildHuntingRewardData>b__60_0(TableData.TableData_Guildboss data);
    /*0xe8157c*/ bool <GetGuildHuntingRewardDataByPrev>b__61_0(TableData.TableData_Guildboss data);

    class <>c__DisplayClass58_0
    {
        /*0x10*/ long userId;

        /*0xf6fb48*/ <>c__DisplayClass58_0();
        /*0xf6fb50*/ bool <FindMemberData>b__0(PTShare.Define.SGuildMember member);
    }

    class <>c__DisplayClass59_0
    {
        /*0x10*/ int index;

        /*0xf6fb74*/ <>c__DisplayClass59_0();
        /*0xf6fb7c*/ bool <FindUnlockBoss>b__0(PTShare.Define.SGuildBoss data);
    }

    class <>c
    {
        static /*0x0*/ GuildManager.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Guildboss> <>9__65_0;
        static /*0x10*/ System.Action<bool> <>9__83_2;
        static /*0x18*/ System.Action<bool> <>9__83_3;
        static /*0x20*/ System.Action<int, string> <>9__101_1;
        static /*0x28*/ System.Action<int, string> <>9__109_1;
        static /*0x30*/ System.Action<bool> <>9__123_0;
        static /*0x38*/ System.Action <>9__125_0;
        static /*0x40*/ System.Action <>9__163_3;
        static /*0x48*/ System.Func<PTShare.Define.SLegionHero, long> <>9__165_3;
        static /*0x50*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__165_4;
        static /*0x58*/ System.Func<PTShare.Define.SLegionHero, long> <>9__165_6;
        static /*0x60*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__165_7;
        static /*0x68*/ System.Func<PTShare.Define.SLegionHero, long> <>9__166_4;
        static /*0x70*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__166_5;
        static /*0x78*/ System.Func<PTShare.Define.SLegionHero, long> <>9__166_7;
        static /*0x80*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__166_8;

        static /*0xf6b818*/ <>c();
        /*0xf6b878*/ <>c();
        /*0xf6b880*/ bool <GetSelectBossTableData>b__65_0(TableData.TableData_Guildboss f);
        /*0xf6b8e8*/ void <Send_GuildEnter>b__83_2(bool dontused);
        /*0xf6b9d8*/ void <Send_GuildEnter>b__83_3(bool dontused);
        /*0xf6bac8*/ void <Send_GuildRegisterRequest>b__101_1(int errcode, string args);
        /*0xf6bc98*/ void <Send_CaptainPromotion>b__109_1(int errcode, string args);
        /*0xf6bfe8*/ void <HandleOnChangeGuild>b__123_0(bool instance);
        /*0xf6c094*/ void <HandleDailyChange>b__125_0();
        /*0xf6c140*/ void <Send_SetFormGuildWar>b__163_3();
        /*0xf6c228*/ long <SetFormSubMethod>b__165_3(PTShare.Define.SLegionHero x);
        /*0xf6c24c*/ bool <SetFormSubMethod>b__165_4(PTShare.Define.SLegionHero y);
        /*0xf6c270*/ long <SetFormSubMethod>b__165_6(PTShare.Define.SLegionHero x);
        /*0xf6c294*/ bool <SetFormSubMethod>b__165_7(PTShare.Define.SLegionHero y);
        /*0xf6c2b8*/ long <Send_UnsetFormGuildWar>b__166_4(PTShare.Define.SLegionHero x);
        /*0xf6c2dc*/ bool <Send_UnsetFormGuildWar>b__166_5(PTShare.Define.SLegionHero y);
        /*0xf6c300*/ long <Send_UnsetFormGuildWar>b__166_7(PTShare.Define.SLegionHero x);
        /*0xf6c324*/ bool <Send_UnsetFormGuildWar>b__166_8(PTShare.Define.SLegionHero y);
    }

    class <>c__DisplayClass79_0
    {
        /*0x10*/ int bossIndex;

        /*0xf6fba0*/ <>c__DisplayClass79_0();
        /*0xf6fba8*/ bool <GetHuntingDropItem>b__0(TableData.TableData_Guildboss data);
    }

    class <>c__DisplayClass83_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6fbcc*/ <>c__DisplayClass83_0();
        /*0xf6fbd4*/ void <Send_GuildEnter>b__0(ServerProtocol.ResGuildEnter instance);
        /*0xf6fe6c*/ void <Send_GuildEnter>b__1(int failed, string args);
    }

    class <>c__DisplayClass84_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6ffd4*/ <>c__DisplayClass84_0();
        /*0xf6ffdc*/ void <Send_HouseEnter>b__0(ServerProtocol.ResGuildOffice instance);
    }

    class <>c__DisplayClass85_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action <>9__1;

        /*0xf70018*/ <>c__DisplayClass85_0();
        /*0xf70020*/ void <Send_GuildCreate>b__0(ServerProtocol.ResGuildCreate instance);
        /*0xf70300*/ void <Send_GuildCreate>b__1();
    }

    class <>c__DisplayClass86_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int guildMarkIndex;
        /*0x20*/ string guildLang;
        /*0x28*/ int guildJoinRequire;
        /*0x2c*/ int minLevelRequire;
        /*0x30*/ string joinNotify;
        /*0x38*/ System.Action callBack;

        /*0xf703b0*/ <>c__DisplayClass86_0();
        /*0xf703b8*/ void <Send_UpdateInfo>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int emblemIndex;
        /*0x1c*/ int frameIndex;
        /*0x20*/ System.Action callBack;

        /*0xf70458*/ <>c__DisplayClass87_0();
        /*0xf70460*/ void <Send_UpdateEmblem>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string lang;
        /*0x20*/ System.Action callBack;

        /*0xf704b8*/ <>c__DisplayClass88_0();
        /*0xf704c0*/ void <Send_UpdateGuildLang>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass89_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int guildJoinRequire;
        /*0x20*/ System.Action callBack;

        /*0xf70500*/ <>c__DisplayClass89_0();
        /*0xf70508*/ void <Send_UpdateGuildAcceptType>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass90_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int minLevelRequire;
        /*0x20*/ System.Action callBack;

        /*0xf70548*/ <>c__DisplayClass90_0();
        /*0xf70550*/ void <Send_UpdateGuildMinReq>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass91_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string guide;
        /*0x20*/ System.Action callBack;

        /*0xf70590*/ <>c__DisplayClass91_0();
        /*0xf70598*/ void <Send_UpdateJoinGuide>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass92_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string notice;
        /*0x20*/ System.Action callBack;

        /*0xf705d8*/ <>c__DisplayClass92_0();
        /*0xf705e0*/ void <Send_ChangeGuildNotify>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass93_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<bool> callBack;

        /*0xf70620*/ <>c__DisplayClass93_0();
        /*0xf70628*/ void <Send_GuildRecommend>b__0(ServerProtocol.ResGuildRecommend instance);
    }

    class <>c__DisplayClass94_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string str;
        /*0x20*/ System.Action callBack;

        /*0xf7078c*/ <>c__DisplayClass94_0();
        /*0xf70794*/ void <Send_ChangeGuildName>b__0(ServerProtocol.ResUpdateName instance);
    }

    class <>c__DisplayClass95_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf70864*/ <>c__DisplayClass95_0();
        /*0xf7086c*/ void <Send_GuildMasterInherit>b__0(ServerProtocol.ResGuildDevolve instance);
    }

    class <>c__DisplayClass96_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf708f4*/ <>c__DisplayClass96_0();
        /*0xf708fc*/ void <Send_GuildKick>b__0(ServerProtocol.ResGuildKick instance);
    }

    class <>c__DisplayClass97_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf7099c*/ <>c__DisplayClass97_0();
        /*0xf709a4*/ void <Send_GuildDestroy>b__0(ServerProtocol.ResGuildLeave instance);
    }

    class <>c__DisplayClass98_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf70b10*/ <>c__DisplayClass98_0();
        /*0xf70b18*/ void <Send_GuildLeave>b__0(ServerProtocol.ResGuildLeave instance);
    }

    class <>c__DisplayClass99_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf70c08*/ <>c__DisplayClass99_0();
        /*0xf70c10*/ void <Send_GuildSearch>b__0(ServerProtocol.ResGuildSearch instance);
    }

    class <>c__DisplayClass100_0
    {
        /*0x10*/ System.Action<PTShare.Define.SGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember>> callback;

        /*0xf6c348*/ <>c__DisplayClass100_0();
        /*0xf6c350*/ void <Send_GuildDetail>b__0(ServerProtocol.ResGuildDetail instance);
    }

    class <>c__DisplayClass101_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action <>9__2;

        /*0xf6c3c8*/ <>c__DisplayClass101_0();
        /*0xf6c3d0*/ void <Send_GuildRegisterRequest>b__0(ServerProtocol.ResGuildSendReq instance);
        /*0xf6c4dc*/ void <Send_GuildRegisterRequest>b__2();
    }

    class <>c__DisplayClass102_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SPlayer>> callBack;

        /*0xf6c59c*/ <>c__DisplayClass102_0();
        /*0xf6c5a4*/ void <Send_GuildRequesters>b__0(ServerProtocol.ResGuildRequestors instance);
    }

    class <>c__DisplayClass103_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6c61c*/ <>c__DisplayClass103_0();
        /*0xf6c624*/ void <Send_AcceptGuildMember>b__0(ServerProtocol.ResGuildAcceptReq instance);
    }

    class <>c__DisplayClass104_0
    {
        /*0x10*/ System.Action callBack;

        /*0xf6c74c*/ <>c__DisplayClass104_0();
        /*0xf6c754*/ void <Send_DeclineGuildRequester>b__0(ServerProtocol.ResGuildDenyReq instance);
    }

    class <>c__DisplayClass105_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6c768*/ <>c__DisplayClass105_0();
        /*0xf6c770*/ void <Send_AllAcceptGuildMember>b__0(ServerProtocol.ResGuildAcceptReqAll instance);
    }

    class <>c__DisplayClass106_0
    {
        /*0x10*/ System.Action callBack;

        /*0xf6c8e8*/ <>c__DisplayClass106_0();
        /*0xf6c8f0*/ void <Send_AllDeclineGuildRequester>b__0(ServerProtocol.ResGuildDenyReqAll instance);
    }

    class <>c__DisplayClass108_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6c904*/ <>c__DisplayClass108_0();
        /*0xf6c90c*/ void <Send_ElderPromotion>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass109_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6ca48*/ <>c__DisplayClass109_0();
        /*0xf6ca50*/ void <Send_CaptainPromotion>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass110_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6cb8c*/ <>c__DisplayClass110_0();
        /*0xf6cb94*/ void <Send_ElderDemote>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass111_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6cccc*/ <>c__DisplayClass111_0();
        /*0xf6ccd4*/ void <Send_CaptainDemote>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass112_0
    {
        /*0x10*/ System.Action callBack;

        /*0xf6ce0c*/ <>c__DisplayClass112_0();
        /*0xf6ce14*/ void <Send_SetCamp>b__0(ServerProtocol.ResGuildSetCamp instance);
    }

    class <>c__DisplayClass113_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> callBack;

        /*0xf6ce28*/ <>c__DisplayClass113_0();
        /*0xf6ce30*/ void <Send_Clean>b__0(ServerProtocol.ResGuildClean instance);
    }

    class <>c__DisplayClass114_0
    {
        /*0x10*/ int bossIndex;
        /*0x18*/ GuildManager <>4__this;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<TableData.TableData_Guildboss> <>9__1;
        /*0x30*/ System.Predicate<PTShare.Define.SGuildBoss> <>9__2;

        /*0xf6cf10*/ <>c__DisplayClass114_0();
        /*0xf6cf18*/ void <Send_BossOpen>b__0(ServerProtocol.ResGuildBossOpen instance);
        /*0xf6d2dc*/ bool <Send_BossOpen>b__1(TableData.TableData_Guildboss data);
        /*0xf6d300*/ bool <Send_BossOpen>b__2(PTShare.Define.SGuildBoss findData);
    }

    class <>c__DisplayClass115_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack;
        /*0x20*/ System.Predicate<TableData.TableData_Guildboss> <>9__1;

        /*0xf6d324*/ <>c__DisplayClass115_0();
        /*0xf6d32c*/ void <Send_BossBegin>b__0(ServerProtocol.ResGuildBegin instance);
        /*0xf6d4c0*/ bool <Send_BossBegin>b__1(TableData.TableData_Guildboss data);
    }

    class <>c__DisplayClass116_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ double guildBossTotalHitDamage;
        /*0x20*/ System.Action<PTShare.Define.SProperty> action;
        /*0x28*/ System.Predicate<PTShare.Define.SGuildBoss> <>9__1;

        /*0xf6d4f0*/ <>c__DisplayClass116_0();
        /*0xf6d4f8*/ void <Send_BossFinish>b__0(ServerProtocol.ResGuildFinish instance);
        /*0xf6d714*/ bool <Send_BossFinish>b__1(PTShare.Define.SGuildBoss data);
    }

    class <>c__DisplayClass117_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int bossIndex;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SGuildBoss> <>9__1;

        /*0xf6d744*/ <>c__DisplayClass117_0();
        /*0xf6d74c*/ void <Send_SweepBoss>b__0(ServerProtocol.ResGuildMopUp instance);
        /*0xf6d980*/ bool <Send_SweepBoss>b__1(PTShare.Define.SGuildBoss data);
    }

    class <>c__DisplayClass118_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack;

        /*0xf6d9a4*/ <>c__DisplayClass118_0();
        /*0xf6d9ac*/ void <Send_BossHistory>b__0(ServerProtocol.ResGuildBossHistory instance);
    }

    class <>c__DisplayClass119_0
    {
        /*0x10*/ System.Action<PTShare.Define.SGuildBossReplay> callBack;

        /*0xf6da24*/ <>c__DisplayClass119_0();
        /*0xf6da2c*/ void <Send_BossReplay>b__0(ServerProtocol.ResGuildReplay instance);
    }

    class <>c__DisplayClass120_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResGuildRanking> callBack;

        /*0xf6daa4*/ <>c__DisplayClass120_0();
        /*0xf6daac*/ void <Send_BossGuildPersonDamageRanking>b__0(ServerProtocol.ResGuildRanking response);
    }

    class <>c__DisplayClass121_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResGuildGuildRanking> callBack;

        /*0xf6db2c*/ <>c__DisplayClass121_0();
        /*0xf6db34*/ void <Send_BossGuildDamageRanking>b__0(ServerProtocol.ResGuildGuildRanking response);
    }

    class <>c__DisplayClass128_0
    {
        /*0x10*/ int id;

        /*0xf6dbb4*/ <>c__DisplayClass128_0();
        /*0xf6dbbc*/ bool <GetGuildFrame>b__0(PTShare.Define.SProfileDecorate x);
    }

    class <>c__DisplayClass159_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6dbe0*/ <>c__DisplayClass159_0();
        /*0xf6dbe8*/ void <Send_EnterGuildWar>b__0(ServerProtocol.ResGuildWarEnter res);
    }

    class <>c__DisplayClass160_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6dc64*/ <>c__DisplayClass160_0();
        /*0xf6dc6c*/ void <Send_FormGuildWar>b__0(ServerProtocol.ResGuildWarForm res);
    }

    class <>c__DisplayClass161_0
    {
        /*0x10*/ System.Action<int, int> onSuccess;

        /*0xf6df94*/ <>c__DisplayClass161_0();
        /*0xf6df9c*/ void <Send_MyFormGuildWar>b__0(ServerProtocol.ResGuildWarMyFormHero res);
    }

    class <>c__DisplayClass162_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int tableid;
        /*0x20*/ System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess;
        /*0x28*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__2;
        /*0x30*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__3;
        /*0x38*/ System.Action<PTShare.Define.SLegionHero> <>9__1;

        /*0xf6e014*/ <>c__DisplayClass162_0();
        /*0xf6e01c*/ void <Send_FormDetailGuildWar>b__0(ServerProtocol.ResGuildWarFormDetail res);
        /*0xf6e144*/ void <Send_FormDetailGuildWar>b__1(PTShare.Define.SLegionHero x);
        /*0xf6e2f4*/ bool <Send_FormDetailGuildWar>b__2(PTShare.Define.SStatBonusHero y);
        /*0xf6e318*/ bool <Send_FormDetailGuildWar>b__3(PTShare.Define.SStatBonusHero y);
    }

    class <>c__DisplayClass163_0
    {
        /*0x10*/ int type;
        /*0x18*/ GuildManager <>4__this;
        /*0x20*/ PTShare.Define.SLegionHero hero;
        /*0x28*/ System.Action<int, string> onFail;
        /*0x30*/ string unsetUniqueid;
        /*0x38*/ System.Action<PTShare.Define.SHero, long> onSuccess;
        /*0x40*/ System.Action<PTShare.Define.SHero, long> <>9__2;
        /*0x48*/ System.Action<PTShare.Define.SLegionHero> <>9__1;

        /*0xf6e33c*/ <>c__DisplayClass163_0();
        /*0xf6e344*/ void <Send_SetFormGuildWar>b__0(ServerProtocol.ResGuildWarSetForm res);
        /*0xf6e51c*/ void <Send_SetFormGuildWar>b__1(PTShare.Define.SLegionHero changeHero);
        /*0xf6e5f8*/ void <Send_SetFormGuildWar>b__2(PTShare.Define.SHero result, long playerId);
    }

    class <>c__DisplayClass164_0
    {
        /*0x10*/ int type;
        /*0x18*/ PTShare.Define.SHero unsetHero;
        /*0x20*/ GuildManager <>4__this;
        /*0x28*/ long unsetPlayerId;
        /*0x30*/ PTShare.Define.SLegionHero hero;
        /*0x38*/ System.Action onSuccess;

        /*0xf6e6f4*/ <>c__DisplayClass164_0();
        /*0xf6e6fc*/ void <Send_SetFormGuildWar>b__0(ServerProtocol.ResGuildWarSetForm res);
    }

    class <>c__DisplayClass165_0
    {
        /*0x10*/ int type;
        /*0x18*/ PTShare.Define.SLegionHero hero;

        /*0xf6e774*/ <>c__DisplayClass165_0();
        /*0xf6e77c*/ void <SetFormSubMethod>b__0(PTShare.Define.SLegionHero x);
        /*0xf6e7dc*/ bool <SetFormSubMethod>b__1(PTShare.Define.SStatBonusHero x);
        /*0xf6e80c*/ bool <SetFormSubMethod>b__2(PTShare.Define.SStatBonusHero x);
        /*0xf6e83c*/ bool <SetFormSubMethod>b__5(int x);
        /*0xf6e860*/ bool <SetFormSubMethod>b__8(int x);
    }

    class <>c__DisplayClass166_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ PTShare.Define.SLegionHero hero;
        /*0x20*/ int type;
        /*0x28*/ System.Action onSuccess;
        /*0x30*/ System.Action<PTShare.Define.SLegionHero> <>9__1;
        /*0x38*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__2;
        /*0x40*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__3;
        /*0x48*/ System.Func<int, bool> <>9__6;
        /*0x50*/ System.Func<int, bool> <>9__9;

        /*0xf6e884*/ <>c__DisplayClass166_0();
        /*0xf6e88c*/ void <Send_UnsetFormGuildWar>b__0(ServerProtocol.ResGuildWarUnsetForm res);
        /*0xf6f048*/ void <Send_UnsetFormGuildWar>b__1(PTShare.Define.SLegionHero x);
        /*0xf6f090*/ bool <Send_UnsetFormGuildWar>b__2(PTShare.Define.SStatBonusHero x);
        /*0xf6f0c0*/ bool <Send_UnsetFormGuildWar>b__3(PTShare.Define.SStatBonusHero x);
        /*0xf6f0f0*/ bool <Send_UnsetFormGuildWar>b__6(int x);
        /*0xf6f114*/ bool <Send_UnsetFormGuildWar>b__9(int x);
    }

    class <>c__DisplayClass167_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWar>> onSuccess;

        /*0xf6f138*/ <>c__DisplayClass167_0();
        /*0xf6f140*/ void <Send_SearchGuildWar>b__0(ServerProtocol.ResGuildWarSearch res);
    }

    class <>c__DisplayClass168_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResGuildWarChoice> onSuccess;

        /*0xf6f288*/ <>c__DisplayClass168_0();
        /*0xf6f290*/ void <Send_ChoiceGuildWar>b__0(ServerProtocol.ResGuildWarChoice res);
    }

    class <>c__DisplayClass169_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarHistory>> onSuccess;

        /*0xf6f300*/ <>c__DisplayClass169_0();
        /*0xf6f308*/ void <Send_HistoryGuildWar>b__0(ServerProtocol.ResGuildWarHistory res);
    }

    class <>c__DisplayClass170_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6f380*/ <>c__DisplayClass170_0();
        /*0xf6f388*/ void <Send_SetCaptain>b__0(ServerProtocol.ResGuildWarSetCaptain res);
    }

    class <>c__DisplayClass171_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int tacticid;
        /*0x20*/ System.Action onSuccess;

        /*0xf6f658*/ <>c__DisplayClass171_0();
        /*0xf6f660*/ void <Send_BuyTactic>b__0(ServerProtocol.ResGuildWarBuyTactic res);
    }

    class <>c__DisplayClass172_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6f708*/ <>c__DisplayClass172_0();
        /*0xf6f710*/ void <Send_GuildWarDeck>b__0(ServerProtocol.ResGuildWarDeck res);
    }

    class <>c__DisplayClass173_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResGuildWarDeck> onSuccess;

        /*0xf6f76c*/ <>c__DisplayClass173_0();
        /*0xf6f774*/ void <Send_GuildWarDeck_ForGuildWarTest>b__0(ServerProtocol.ResGuildWarDeck res);
    }

    class <>c__DisplayClass174_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess;

        /*0xf6f7e4*/ <>c__DisplayClass174_0();
        /*0xf6f7ec*/ void <Send_GuildWarUpdateDeck>b__0(ServerProtocol.ResGuildWarUpdateDeck res);
    }

    class <>c__DisplayClass175_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6f864*/ <>c__DisplayClass175_0();
        /*0xf6f86c*/ void <Send_GuildWarBuyTicket>b__0(ServerProtocol.ResGuildWarTicket res);
    }

    class <>c__DisplayClass176_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer>> onSuccess;

        /*0xf6f9a8*/ <>c__DisplayClass176_0();
        /*0xf6f9b0*/ void <Send_GuildWarMember>b__0(ServerProtocol.ResGuildWarMember res);
    }

    class <>c__DisplayClass177_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SContribution>> onSuccess;

        /*0xf6fa28*/ <>c__DisplayClass177_0();
        /*0xf6fa30*/ void <Send_GuildWarContribution>b__0(ServerProtocol.ResGuildWarContribution res);
    }

    class <>c__DisplayClass191_0
    {
        /*0x10*/ int index;

        /*0xf6fad4*/ <>c__DisplayClass191_0();
        /*0xf6fadc*/ bool <IsUseTactics>b__0(int x);
    }

    class <>c__DisplayClass193_0
    {
        /*0x10*/ int nTableID;

        /*0xf6faec*/ <>c__DisplayClass193_0();
        /*0xf6faf4*/ bool <IsCurrentUsingHero>b__0(int x);
    }

    class <>c__DisplayClass195_0
    {
        /*0x10*/ int heroId;
        /*0x18*/ long playerid;

        /*0xf6fb04*/ <>c__DisplayClass195_0();
        /*0xf6fb0c*/ bool <GetCurrentMostHero>b__0(PTShare.Define.SStatBonusHero f);
    }
}

class GuildPositionStatus
{
    /*0x10*/ PTShare.Define.GuildWarPosition Position;
    /*0x14*/ int MaximumDispatch;
    /*0x18*/ int DispatchChar;
    /*0x1c*/ bool Combat;
    /*0x1d*/ bool AttackDispatch;
    /*0x1e*/ bool AttackSetting;
    /*0x1f*/ bool AttackFormationSelect;
    /*0x20*/ bool AttackPickDispatch;
    /*0x21*/ bool DefenceSetting;
    /*0x22*/ bool DefenceDispatch;
    /*0x23*/ bool DefenceFormationSelect;
    /*0x24*/ bool DefencePickDispatch;

    /*0x110b55c*/ GuildPositionStatus();
    /*0x110b564*/ GuildPositionStatus(ArenaType type, PTShare.Define.GuildWarPosition position);
    /*0x110b594*/ void Initialize(ArenaType type, PTShare.Define.GuildWarPosition position);
    /*0x110b678*/ void Reset();
    /*0x110b76c*/ void <Initialize>b__14_0(TableData.TableData_Guildwarorganize x);
    /*0x110b864*/ void <Reset>b__15_0(System.Reflection.FieldInfo x);
}

struct GuildWarInfomation
{
    /*0x10*/ bool newForm;
    /*0x11*/ bool newMyHero;
    /*0x14*/ int guildPoint;
    /*0x18*/ int guildRank;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> rankguilds;
    /*0x28*/ System.Collections.Generic.List<int> tactics;
    /*0x30*/ int rewardIndex;
    /*0x34*/ int ticket;
    /*0x38*/ int buylimit;
    /*0x3c*/ int newauth;
    /*0x40*/ int myauth;
    /*0x48*/ long cp;
    /*0x50*/ PTShare.Define.SGuildWarReward newreward;

    /*0xa8a8e0*/ GuildWarInfomation(ServerProtocol.ResGuildWarEnter protocol);
}

class GuildMemberEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x20*/ LocalizeString m_nickNameText;
    /*0x28*/ LocalizeString m_guildCrownText;
    /*0x30*/ AtlasImage m_onlineIcon;
    /*0x38*/ LocalizeString m_lastAccessText;
    /*0x40*/ UnityEngine.GameObject m_battleButtonObject;
    /*0x48*/ TooltipTargetUI m_tooltipTargetUI;
    /*0x50*/ AtlasImage[] m_guildBadges;
    /*0x58*/ PTShare.Define.SGuildMember m_memberData;

    /*0x1109c1c*/ GuildMemberEntity();
    /*0x110943c*/ void InitEntity(PTShare.Define.SGuildMember member, bool showBattleBtn);
    /*0x1109830*/ void SerProfile();
    /*0x1109994*/ void SetNickName(string name);
    /*0x1109954*/ void SetCrownCount(int crownCount);
    /*0x11099a8*/ void SetOnlineIcon(bool enable);
    /*0x11099c0*/ void SetLastAccess(string lastAccess);
    /*0x11099d4*/ void SetBadge();
    /*0x1109bb0*/ void OnClickFight();
    /*0x1109c78*/ void <SerProfile>b__10_0();
}

class GuildNameChangePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_guildName;
    /*0x48*/ LocalizeString m_userCurrencyText;
    /*0x50*/ LocalizeString m_costCurrencyText;
    /*0x58*/ UnityEngine.GameObject[] m_currencyParent;

    /*0x110a62c*/ GuildNameChangePopup();
    /*0x1109d04*/ void OnCreate();
    /*0x1109d08*/ void OnDelete();
    /*0x1109d0c*/ void OnEnter();
    /*0x1109d78*/ void OnFinish();
    /*0x1109d7c*/ void OnLeave();
    /*0x1109d80*/ void OnStart();
    /*0x1109d84*/ void InitPopup(string name);
    /*0x1109e20*/ void SetCurrency();
    /*0x110a16c*/ void EnableCurrencyParent(bool enable);
    /*0x110a1e8*/ void OnClickConfirm();
    /*0x110a5ac*/ void OnClickCancel();
    /*0x110a634*/ void <OnClickConfirm>b__13_0();
}

class GuildNoticePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_notifyInputField;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_infoText;
    /*0x58*/ bool m_isJoinNotify;

    /*0x110ae28*/ GuildNoticePopup();
    /*0x110a718*/ void OnCreate();
    /*0x110a71c*/ void OnDelete();
    /*0x110a720*/ void OnEnter();
    /*0x110a78c*/ void OnFinish();
    /*0x110a790*/ void OnLeave();
    /*0x110a794*/ void OnStart();
    /*0x110a798*/ void InitPopup(bool isJoinNotify, string notice);
    /*0x110a9b8*/ void OnCancel();
    /*0x110aa38*/ void OnClickConfirm();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ string str;
        /*0x18*/ GuildNoticePopup <>4__this;

        /*0xf71568*/ <>c__DisplayClass12_0();
        /*0xf71570*/ void <OnClickConfirm>b__0();
    }
}

class GuildNpcCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_baseCharacterSkel;
    /*0x20*/ UnityEngine.CanvasGroup m_dialogCanvas;
    /*0x28*/ LocalizeString m_dialogText;
    /*0x30*/ System.Action m_action;
    /*0x38*/ bool m_isTalk;
    /*0x40*/ UnityEngine.Coroutine m_coroutine;

    /*0x110b1a0*/ GuildNpcCharacter();
    /*0x110ae30*/ void OnDisable();
    /*0x110ae64*/ void InitNpc();
    /*0x110af1c*/ void UpdateCharacterAnim(string animName, bool isLoop, float timeScale, bool init, System.Action callBack);
    /*0x110b0e8*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x110b0fc*/ void OnClickCharacter();
    /*0x110b134*/ System.Collections.IEnumerator CoCharacterTalk();
    /*0x110b07c*/ System.Collections.IEnumerator CoRandomShowWrite();
    /*0x110b1a8*/ void <CoRandomShowWrite>b__12_0();

    class <CoCharacterTalk>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildNpcCharacter <>4__this;
        /*0x28*/ float <t>5__2;

        /*0xf71610*/ <CoCharacterTalk>d__11(int <>1__state);
        /*0xf7163c*/ void System.IDisposable.Dispose();
        /*0xf71640*/ bool MoveNext();
        /*0xf71a58*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71a60*/ void System.Collections.IEnumerator.Reset();
        /*0xf71aa0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRandomShowWrite>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildNpcCharacter <>4__this;

        /*0xf71aa8*/ <CoRandomShowWrite>d__12(int <>1__state);
        /*0xf71ad4*/ void System.IDisposable.Dispose();
        /*0xf71ad8*/ bool MoveNext();
        /*0xf71c14*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71c1c*/ void System.Collections.IEnumerator.Reset();
        /*0xf71c5c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildPostPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_mailName;
    /*0x48*/ UnityEngine.UI.InputField m_mailDesc;

    /*0x110bc2c*/ GuildPostPopup();
    /*0x110b88c*/ void OnCreate();
    /*0x110b890*/ void OnDelete();
    /*0x110b894*/ void OnEnter();
    /*0x110b900*/ void OnFinish();
    /*0x110b904*/ void OnLeave();
    /*0x110b908*/ void OnStart();
    /*0x110b90c*/ void InitPopup();
    /*0x110b910*/ void OnClickCancel();
    /*0x110b990*/ void OnClickConfirm();

    class <>c
    {
        static /*0x0*/ GuildPostPopup.<> <>9;
        static /*0x8*/ System.Action <>9__10_0;

        static /*0xf71d2c*/ <>c();
        /*0xf71d8c*/ <>c();
        /*0xf71d94*/ void <OnClickConfirm>b__10_0();
    }
}

class GuildSearchEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x20*/ GuildLevelSlot m_guildLevelSlot;
    /*0x28*/ LocalizeString m_guildName;
    /*0x30*/ LocalizeString m_memberText;
    /*0x38*/ LocalizeString m_crownText;
    /*0x40*/ PTShare.Define.SGuildSummary m_sGuild;

    /*0x110c0d8*/ GuildSearchEntity();
    /*0x110bc34*/ void InitEntity(PTShare.Define.SGuildSummary sGuild);
    /*0x110be50*/ void SetMemberText(int max, int now);
    /*0x110bcac*/ void SetCrown();
    /*0x110bd58*/ void SetGuildEmblem();
    /*0x110bdf0*/ void SetGuildLevelSlot();
    /*0x110be20*/ void SetGuildName();
    /*0x110bf5c*/ void OnClickEntity();
    /*0x110c030*/ void HandleGuildDetail(PTShare.Define.SGuild sGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMember);
}

class GuildSearchPopup : GuiBase
{
    static /*0x0*/ float SEARCH_WAIT_TIME;
    /*0x40*/ UnityEngine.UI.InputField m_searchNameField;
    /*0x48*/ ScrollContent_GuildSearchEntity m_scrollContent;
    /*0x50*/ UnityEngine.GameObject m_searchEmptyObject;
    /*0x58*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x60*/ UnityEngine.GameObject m_guildCreateButton;
    /*0x68*/ UnityEngine.UI.Button m_searchButton;
    /*0x70*/ bool m_isReadySearchTime;
    /*0x78*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> m_searchGuildList;
    /*0x80*/ bool m_isNewGuild;

    static /*0x110d034*/ GuildSearchPopup();
    /*0x110cfbc*/ GuildSearchPopup();
    /*0x110c0e0*/ void OnCreate();
    /*0x110c0e4*/ void OnDelete();
    /*0x110c0e8*/ void OnEnter();
    /*0x110c0ec*/ void OnFinish();
    /*0x110c0f0*/ void OnLeave();
    /*0x110c310*/ void OnStart();
    /*0x110c314*/ void OnExit();
    /*0x110c46c*/ void InitPopup();
    /*0x110c918*/ void UpdateGuildList();
    /*0x110ca18*/ void HandleScrollContent(int index, GuildSearchEntity obj);
    /*0x110c6f4*/ void BindEvent();
    /*0x110c0f4*/ void RemoveEvent();
    /*0x110ca98*/ void OnClickSearch();
    /*0x110cc18*/ void OnClickRandomSearch();
    /*0x110cda0*/ void OnClickSearchCancel();
    /*0x110ce0c*/ void OnClickCreateGuild();
    /*0x110ce8c*/ void handleExitPopup(PTShare.Define.SGuild sGuild);
    /*0x110cf00*/ void HandleInputSearch(string value);
    /*0x110cf40*/ System.Collections.IEnumerator WaitSearchTime(float time);
    /*0x110d084*/ void <OnClickSearch>b__22_0();
    /*0x110d108*/ void <OnClickRandomSearch>b__23_0(bool instance);

    class <WaitSearchTime>d__28 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildSearchPopup <>4__this;
        /*0x28*/ float time;

        /*0xf71e04*/ <WaitSearchTime>d__28(int <>1__state);
        /*0xf71e30*/ void System.IDisposable.Dispose();
        /*0xf71e34*/ bool MoveNext();
        /*0xf71ef4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71efc*/ void System.Collections.IEnumerator.Reset();
        /*0xf71f3c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildBuildingWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_moveButton;
    /*0x20*/ UnityEngine.GameObject m_houseButton;
    /*0x28*/ GuildTile m_selectTile;

    /*0xe658a4*/ GuildBuildingWindow();
    /*0xe65154*/ void InitWindow(GuildTile tile);
    /*0xe65588*/ void OnClickHide();
    /*0xe655b0*/ void OnClickProfile();
    /*0xe65604*/ void OnClickHouse();
    /*0xe65770*/ void OnClickMove();

    class <>c
    {
        static /*0x0*/ GuildBuildingWindow.<> <>9;
        static /*0x8*/ System.Action <>9__6_0;

        static /*0xf69440*/ <>c();
        /*0xf694a0*/ <>c();
        /*0xf694a8*/ void <OnClickHouse>b__6_0();
    }
}

class GuildMap : UnityEngine.MonoBehaviour
{
    static int ZOOM_FINGER_COUNT = 2;
    static /*0x0*/ long EMPTY_ID;
    static /*0x8*/ System.Action<GuildTile> OnTouchGuildTile;
    static /*0x10*/ System.Action<GuildTile> OnMoveRequestGuildTile;
    static /*0x18*/ System.Action<UnityEngine.GameObject> OnMoveLayerMiddle;
    static /*0x20*/ System.Action<UnityEngine.GameObject> OnMoveLayerTop;
    static /*0x28*/ System.Action<GuildTrash> OnCleanTrash;
    static /*0x30*/ System.Action<bool> OnEnableMoveTileEffect;
    /*0x18*/ float ZOOM_MIN;
    /*0x1c*/ float ZOOM_MAX;
    /*0x20*/ UnityEngine.GameObject m_parentObject;
    /*0x28*/ GuildMapGrid m_mapGridBase;
    /*0x30*/ System.Collections.Generic.List<GuildTile> m_guildTileBaseList;
    /*0x38*/ UnityEngine.GameObject m_guildMapCamera;
    /*0x40*/ UnityEngine.GameObject m_mapParentObject;
    /*0x48*/ UnityEngine.GameObject m_middleLayerObject;
    /*0x50*/ UnityEngine.GameObject m_topLayerObject;
    /*0x58*/ GuildBuildingWindow m_guildBuildingWindow;
    /*0x60*/ GuildTrash m_baseTrash;
    /*0x68*/ UnityEngine.UI.ScrollRect m_guildScrollRect;
    /*0x70*/ UnityEngine.RectTransform m_guildBackGround;
    /*0x78*/ UnityEngine.Vector3 m_initPosition;
    /*0x88*/ System.Collections.Generic.List<GuildMapGrid> m_mapGridList;
    /*0x90*/ System.Collections.Generic.List<GuildTile> m_buildingTileList;
    /*0x98*/ System.Collections.Generic.List<GuildTile> m_moveTileList;
    /*0xa0*/ GuildTile[,] m_guildTiles;
    /*0xa8*/ System.Collections.Generic.List<GuildTrash> m_guildTrashs;
    /*0xb0*/ GuildTile m_moveWaitTile;
    /*0xb8*/ GuildDefine.GUILD_MAP_TYPE m_guildMapType;
    /*0xbc*/ float m_zoomValue;
    /*0xc0*/ float m_defaultWidth;
    /*0xc8*/ UnityEngine.Coroutine m_moveCoroutine;
    /*0xd0*/ UnityEngine.Coroutine m_scrollRectModeCoroutine;
    /*0xd8*/ UnityEngine.Vector3 interval;
    /*0xe4*/ float scrollLimit;
    /*0xe8*/ float scrollBGMaximum;
    /*0xec*/ float m_bgZoomPercent;
    /*0xf0*/ GuildFieldCharacter m_baseCharacter;
    /*0xf8*/ GuildCharacterData m_guildCharacterData;
    /*0x100*/ int m_skinCount;
    /*0x108*/ System.Collections.Generic.List<GuildFieldCharacter> m_characterList;
    /*0x110*/ System.Collections.Generic.List<int> m_characterSpawnList;

    static /*0x1109344*/ GuildMap();
    /*0x11090f4*/ GuildMap();
    /*0x1104770*/ int GetGridCount();
    /*0x11047bc*/ int GetTileCount();
    /*0x1104808*/ GuildTile GetTile(int index);
    /*0x110487c*/ void OnEnable();
    /*0x1104c10*/ void OnDisable();
    /*0x11050ec*/ void InitGuildMap(GuildDefine.GUILD_MAP_TYPE guildMapType);
    /*0x1105d14*/ void InitBuildings();
    /*0x1106058*/ void SetTrashs();
    /*0x1106580*/ void SetResize();
    /*0x1105538*/ void InitTile();
    /*0x1105b88*/ void SetLocalPlayerCamp();
    /*0x1105fec*/ void SetGuildBuilding(PTShare.Define.SGuildMember member, int x, int y);
    /*0x1106be4*/ void HideGuildBuildingWindow();
    /*0x11057d0*/ void HideLockTiles();
    /*0x1105f80*/ System.Collections.IEnumerator CoLateInit();
    /*0x1106cb0*/ void HandleTouchTile(GuildTile guildTile);
    /*0x1106fc8*/ void HandleMoveTopLayer(UnityEngine.GameObject moveObject);
    /*0x1107020*/ void HandleMoveMiddleLayer(UnityEngine.GameObject moveObject);
    /*0x11072ac*/ void HandleRegisterMoveTile(GuildTile moveTile);
    /*0x1107354*/ void HandleCleanTrash(GuildTrash guildTrash);
    /*0x11073b8*/ void HandleScrollRect(UnityEngine.Vector2 noneUsed);
    /*0x1104880*/ void BindEvent();
    /*0x1104d48*/ void RemoveEvent();
    /*0x11075a0*/ bool IsInTrash(int x, int y);
    /*0x1107694*/ System.Collections.IEnumerator CoScrollRectModeChange();
    /*0x1107080*/ void UpdateSortObjects();
    /*0x1107700*/ void UpdateZoom();
    /*0x11077fc*/ void Update();
    /*0x1107a14*/ void AddGrid();
    /*0x1107b20*/ void AddTile(int gridIndex, int tileIndex);
    /*0x1107d30*/ void RemoveTileLast(int gridIndex);
    /*0x1107ea8*/ void HighlightGrid(int lineIndex);
    /*0x1107f9c*/ void UpdateSyncPrefabs();
    /*0x1108450*/ void View();
    /*0x11082a0*/ GuildTile FindTile(string name);
    /*0x1107be0*/ GuildTile CopyTile(int tileIndex);
    /*0x1108508*/ void InitCharacters();
    /*0x1108ae0*/ void SwapIndex(ref System.Collections.Generic.List<int> indexList, int lhs, int rhs);
    /*0x1108e84*/ GuildTile FindNearMoveTile(GuildTile standTile, GuildDefine.GUILD_CHARACTER_MOVE_DESIRE desire);
    /*0x1105304*/ void SetGuildCharacterData();
    /*0x1108bd4*/ void SetGuildCharacter(PTShare.Define.SGuildMember member, int index);
    /*0x11054cc*/ System.Collections.IEnumerator CoUpdateCharacterMove();

    class <>c__DisplayClass40_0
    {
        /*0x10*/ int x;
        /*0x14*/ int y;
        /*0x18*/ System.Predicate<GuildTrash> <>9__0;

        /*0xf70d24*/ <>c__DisplayClass40_0();
        /*0xf70d2c*/ bool <SetTrashs>b__0(GuildTrash data);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ GuildMap <>4__this;
        /*0x18*/ UnityEngine.Vector2Int position;

        /*0xf70d68*/ <>c__DisplayClass44_0();
        /*0xf70d70*/ void <SetLocalPlayerCamp>b__0();
    }

    class <CoLateInit>d__48 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMap <>4__this;

        /*0xf70ff0*/ <CoLateInit>d__48(int <>1__state);
        /*0xf7101c*/ void System.IDisposable.Dispose();
        /*0xf71020*/ bool MoveNext();
        /*0xf710c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf710c8*/ void System.Collections.IEnumerator.Reset();
        /*0xf71108*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ GuildMap <>4__this;
        /*0x18*/ GuildTile guildTile;

        /*0xf70e94*/ <>c__DisplayClass49_0();
        /*0xf70e9c*/ void <HandleTouchTile>b__0();
    }

    class <CoScrollRectModeChange>d__60 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMap <>4__this;

        /*0xf71110*/ <CoScrollRectModeChange>d__60(int <>1__state);
        /*0xf7113c*/ void System.IDisposable.Dispose();
        /*0xf71140*/ bool MoveNext();
        /*0xf71210*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71218*/ void System.Collections.IEnumerator.Reset();
        /*0xf71258*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ GuildMap.<> <>9;
        static /*0x8*/ System.Comparison<UnityEngine.Transform> <>9__61_0;

        static /*0xf70c4c*/ <>c();
        /*0xf70cac*/ <>c();
        /*0xf70cb4*/ int <UpdateSortObjects>b__61_0(UnityEngine.Transform lhs, UnityEngine.Transform rhs);
    }

    class <>c__DisplayClass71_0
    {
        /*0x10*/ string name;

        /*0xf70fa0*/ <>c__DisplayClass71_0();
        /*0xf70fa8*/ bool <FindTile>b__0(GuildTile tile);
    }

    class <CoUpdateCharacterMove>d__83 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMap <>4__this;
        /*0x28*/ int <i>5__2;

        /*0xf71260*/ <CoUpdateCharacterMove>d__83(int <>1__state);
        /*0xf7128c*/ void System.IDisposable.Dispose();
        /*0xf71290*/ bool MoveNext();
        /*0xf71518*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71520*/ void System.Collections.IEnumerator.Reset();
        /*0xf71560*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildMapGrid : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildTile[] m_guildTiles;
    /*0x20*/ int m_gridIndex;
    /*0x28*/ UnityEngine.CanvasGroup m_canvasGroup;

    /*0x1109434*/ GuildMapGrid();
    /*0x11093c8*/ GuildTile[] GetGuildTileArray();
    /*0x1106c94*/ int GetTileCount();
    /*0x1106830*/ void InitGrid(int gridIndex);
    /*0x1106c1c*/ void SetEnable(bool enable);
    /*0x1107f80*/ void SetCanvasAlpha(float alpha);
    /*0x11093d0*/ void SetGridIndex(int index);
    /*0x1107cb8*/ void AddTile(GuildTile guildTile);
    /*0x1108390*/ void RemoveTileFront();
    /*0x1107dc8*/ void RemoveTileLast();
}

class GuildTile : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildDefine.GUILD_TILE_TYPE m_guildTileType;
    /*0x20*/ UnityEngine.GameObject m_parentObject;
    /*0x28*/ AtlasImage m_tileImage;
    /*0x30*/ AtlasImage m_buildingImage;
    /*0x38*/ UnityEngine.GameObject m_effectObj;
    /*0x40*/ LocalizeString m_buildingName;
    /*0x48*/ UnityEngine.GameObject m_disableObject;
    /*0x50*/ bool m_isTrashOk;
    /*0x58*/ string m_originalTileName;
    /*0x60*/ UnityEngine.Vector2Int m_position;
    /*0x68*/ int m_gridIndex;
    /*0x6c*/ int m_tileIndex;
    /*0x70*/ PTShare.Define.SGuildMember m_sMember;
    /*0x78*/ bool m_isEnable;

    /*0x110e030*/ GuildTile();
    /*0x1106f50*/ long GetTileOwnerId();
    /*0x110d61c*/ GuildDefine.GUILD_TILE_TYPE GetTileType();
    /*0x110d624*/ bool IsTrashOk();
    /*0x110d62c*/ UnityEngine.Sprite GetTileSprite();
    /*0x110d64c*/ void OnDisable();
    /*0x110d94c*/ void OnEnable();
    /*0x1106898*/ void InitTile(PTShare.Define.SGuildMember sMember, int tileIndex);
    /*0x110da1c*/ bool IsEnable();
    /*0x110da24*/ PTShare.Define.SGuildMember GetMember();
    /*0x110da2c*/ UnityEngine.Vector2Int GetPosition();
    /*0x110da34*/ int GetGridIndex();
    /*0x110da3c*/ int GetTileIndex();
    /*0x110da44*/ void SetGridIndex(int index);
    /*0x1106bdc*/ void SetPosition(int x, int y);
    /*0x110da4c*/ void SwapBuilding(GuildTile swapTarget);
    /*0x110d9f8*/ void SetBuilding();
    /*0x110da94*/ void SetBuildName();
    /*0x110dc74*/ void SetBuildImage();
    /*0x1106a8c*/ void SetEnable(bool enable);
    /*0x110de4c*/ System.Collections.IEnumerator CoLateMoveMiddle(UnityEngine.GameObject gameObject);
    /*0x110dde0*/ System.Collections.IEnumerator CoLateMoveTop(UnityEngine.GameObject gameObject);
    /*0x110deb8*/ void OnTouchTile();
    /*0x110df64*/ void HandleOnEnableEffect(bool enable);

    class <CoLateMoveMiddle>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.GameObject gameObject;

        /*0xf71f44*/ <CoLateMoveMiddle>d__33(int <>1__state);
        /*0xf71f70*/ void System.IDisposable.Dispose();
        /*0xf71f74*/ bool MoveNext();
        /*0xf7202c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf72034*/ void System.Collections.IEnumerator.Reset();
        /*0xf72074*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateMoveTop>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.GameObject gameObject;

        /*0xf7207c*/ <CoLateMoveTop>d__34(int <>1__state);
        /*0xf720a8*/ void System.IDisposable.Dispose();
        /*0xf720ac*/ bool MoveNext();
        /*0xf72164*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf7216c*/ void System.Collections.IEnumerator.Reset();
        /*0xf721ac*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildTopWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildLevelSlot m_guildLevelSlot;
    /*0x20*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x28*/ LocalizeString m_guildNameText;
    /*0x30*/ LocalizeString m_guildCorwnText;

    /*0x110e3a4*/ GuildTopWindow();
    /*0x110e084*/ void InitGuild();
    /*0x110e10c*/ void SetGuildLevelSlot(int level);
    /*0x110e1ac*/ void SetGuildName(string name);
    /*0x110e2f4*/ void SetGuildEmblem(int emblemIndex, int frameIndex);
    /*0x110e24c*/ void SetGuildCrown(int crown);
}

class GuildTrash : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_trashImage;
    /*0x20*/ ParticleBase m_cleanParticle;
    /*0x28*/ UnityEngine.GameObject m_itemParent;
    /*0x30*/ TweenPosition m_itemTween;
    /*0x38*/ AtlasImage m_itemIcon;
    /*0x40*/ LocalizeString m_itemAmountText;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_cleanEffect;
    /*0x50*/ float m_sweepTime;
    /*0x54*/ UnityEngine.Vector2Int m_position;
    /*0x5c*/ bool m_isClean;
    /*0x5d*/ bool m_free;

    /*0x110ea40*/ GuildTrash();
    /*0x110e3ac*/ UnityEngine.Vector2Int GetPosition();
    /*0x110e3b4*/ void OnDisable();
    /*0x110650c*/ void InitTrash(int x, int y);
    /*0x110e5f0*/ void SetEnableRewardNotify(bool enable);
    /*0x110e4c0*/ void SetRandomTrashImage();
    /*0x110e6a0*/ void SetItemReward(PTShare.Define.SProperty gain);
    /*0x110e91c*/ void OnClickTrash();
    /*0x110e95c*/ System.Collections.IEnumerator CoClean();
    /*0x110e9c8*/ System.Collections.IEnumerator CoShowReward(PTShare.Define.SProperty gain);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ PTShare.Define.SProperty gain;

        /*0xf721b4*/ <>c__DisplayClass18_0();
        /*0xf721bc*/ void <CoClean>b__0(PTShare.Define.SProperty instance);
        /*0xf721c4*/ bool <CoClean>b__1();
    }

    class <CoClean>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildTrash <>4__this;
        /*0x28*/ GuildTrash.<> <>8__1;

        /*0xf721d4*/ <CoClean>d__18(int <>1__state);
        /*0xf72200*/ void System.IDisposable.Dispose();
        /*0xf72204*/ bool MoveNext();
        /*0xf726ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf726b4*/ void System.Collections.IEnumerator.Reset();
        /*0xf726f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildTrash <>4__this;
        /*0x28*/ PTShare.Define.SProperty gain;

        /*0xf726fc*/ <CoShowReward>d__19(int <>1__state);
        /*0xf72728*/ void System.IDisposable.Dispose();
        /*0xf7272c*/ bool MoveNext();
        /*0xf729a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf729a8*/ void System.Collections.IEnumerator.Reset();
        /*0xf729e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildWantRegisterEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_totalPowerText;
    /*0x20*/ LocalizeString m_userNameText;
    /*0x28*/ LocalizeString m_serverText;
    /*0x30*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x38*/ PTShare.Define.SPlayer m_sPlayer;

    /*0x110f05c*/ GuildWantRegisterEntity();
    /*0x110ea54*/ void OnDisable();
    /*0x110ea58*/ void OnEnable();
    /*0x110ea5c*/ void InitEntity(PTShare.Define.SPlayer sPlayer);
    /*0x110ea94*/ void SetTotalPower();
    /*0x110eb40*/ void SetUserName();
    /*0x110ebdc*/ void SetServerText();
    /*0x110edbc*/ void SetPlayerProfile();
    /*0x110eedc*/ void OnClickAccept();
    /*0x110ef9c*/ void OnClickDecline();
    /*0x110f064*/ void <SetPlayerProfile>b__11_0();
    /*0x110f084*/ void <OnClickAccept>b__12_0();
    /*0x110f168*/ void <OnClickDecline>b__13_0();
}

class GuildWantRegisterPopup : GuiBase
{
    static /*0x0*/ System.Action<long> OnChangeRequesters;
    /*0x40*/ LocalizeString m_guildMemberCountText;
    /*0x48*/ ScrollContent_GuildWantRegisterEntity m_scrollContent;
    /*0x50*/ UnityEngine.GameObject m_noRequesterObject;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_requesterList;

    static /*0x110fe68*/ GuildWantRegisterPopup();
    /*0x110fdc4*/ GuildWantRegisterPopup();
    /*0x110f208*/ void OnCreate();
    /*0x110f20c*/ void OnDelete();
    /*0x110f210*/ void OnEnter();
    /*0x110f214*/ void OnFinish();
    /*0x110f218*/ void OnLeave();
    /*0x110f21c*/ void OnStart();
    /*0x110f220*/ void OnExit();
    /*0x110f3dc*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SPlayer> memberList);
    /*0x110f608*/ void UpdatePopup();
    /*0x110f6e0*/ void UpdateGuildMemberCount();
    /*0x110f83c*/ void UpdateGuildRequesterList();
    /*0x110f910*/ void UpdateNoRequesterObject();
    /*0x110f9c0*/ void HandleChangeRequesters(long userId);
    /*0x110fb1c*/ void HandleScrollContent(int index, GuildWantRegisterEntity obj);
    /*0x110fb9c*/ void OnClickAllAccept();
    /*0x110fcd0*/ void OnClickAllDecline();
    /*0x110f46c*/ void BindEvent();
    /*0x110f248*/ void RemoveEvent();
    /*0x110fe6c*/ void <OnClickAllAccept>b__19_0();
    /*0x110ff18*/ void <OnClickAllDecline>b__20_0();

    class <>c__DisplayClass17_0
    {
        /*0x10*/ long userId;

        /*0xf729f0*/ <>c__DisplayClass17_0();
        /*0xf729f8*/ bool <HandleChangeRequesters>b__0(PTShare.Define.SPlayer player);
    }
}

class GuildWarFormationDotEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_icon;

    /*0x1116640*/ GuildWarFormationDotEntity();
    /*0x11164cc*/ void InitializeEntity(int nClassNumber);
}

class GuildWarMemberEntity : GuildMemberEntity
{
    /*0x60*/ AtlasImage m_background;
    /*0x68*/ AtlasImage m_checkIcon;
    /*0x70*/ LocalizeString m_gcPoint;
    /*0x78*/ int nEntityIndex;
    /*0x80*/ System.Action<int> onClickCallback;

    /*0x1119710*/ GuildWarMemberEntity();
    /*0x1114818*/ void InitEntity(int nIndex, PTShare.Define.SGuildWarPlayer member, bool selected, System.Action<int> onClick);
    /*0x11196b0*/ void OnClick();
}

class GuildWindowRequireDropDown : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<GuildWindowRequireDropDown.GuildRequireToggle> m_liToggle;
    /*0x20*/ UnityEngine.GameObject m_ToggleBackground;
    /*0x28*/ UnityEngine.GameObject m_ToggleTemplete;
    /*0x30*/ UnityEngine.GameObject m_ToggleArrow;
    /*0x38*/ LocalizeString m_MainText;
    /*0x40*/ bool m_bIsShow;
    /*0x44*/ int _nArrIndex;
    /*0x48*/ System.Action<PTShare.Define.GuildAcceptType> OnChangeDropdownEvent;

    /*0x10f6730*/ GuildWindowRequireDropDown();
    /*0x10f5f80*/ void add_OnChangeDropdownEvent(System.Action<PTShare.Define.GuildAcceptType> value);
    /*0x10f6020*/ void remove_OnChangeDropdownEvent(System.Action<PTShare.Define.GuildAcceptType> value);
    /*0x10f60c0*/ void OnEnable();
    /*0x10f61c4*/ void OnDisable();
    /*0x10f6194*/ void InitializeDropdown(PTShare.Define.GuildAcceptType _type);
    /*0x10f66f8*/ void ToggleDropdown();
    /*0x10f644c*/ void ViewDropdown(bool _isShow);
    /*0x10f653c*/ void SetDropdown();
    /*0x10f6254*/ void SetDropdownName(PTShare.Define.GuildAcceptType _type);
    /*0x10f6708*/ void HandlerDropDown(PTShare.Define.GuildAcceptType _type);

    class GuildRequireToggle
    {
        /*0x10*/ PTShare.Define.GuildAcceptType type;
        /*0x18*/ string keyName;
        /*0x20*/ UnityEngine.UI.Toggle toggle;

        /*0xf747a4*/ GuildRequireToggle();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ PTShare.Define.GuildAcceptType _sortType;
        /*0x18*/ GuildWindowRequireDropDown <>4__this;

        /*0xf746b0*/ <>c__DisplayClass16_0();
        /*0xf746b8*/ void <SetDropdown>b__0(bool ison);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.GuildAcceptType _type;

        /*0xf74778*/ <>c__DisplayClass17_0();
        /*0xf74780*/ bool <SetDropdownName>b__0(GuildWindowRequireDropDown.GuildRequireToggle x);
    }
}

class ResultPopup_GuildBoss : ResultPopupBase
{
    /*0x78*/ LocalizeString m_totalDamageText;
    /*0x80*/ UnityEngine.UI.Slider m_slider;
    /*0x88*/ AtlasImage m_rewardBoxImage;
    /*0x90*/ LocalizeString m_rewardStepText;

    /*0x11a1b50*/ ResultPopup_GuildBoss();
    /*0x11a0918*/ void OnCreate();
    /*0x11a091c*/ void OnEnter();
    /*0x11a0920*/ void OnStart();
    /*0x11a0928*/ void OnFinish();
    /*0x11a092c*/ void OnLeave();
    /*0x11a0930*/ void OnDelete();
    /*0x11a0934*/ void OnExit();
    /*0x11a09d8*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a1370*/ void InitializeWinReplay();
    /*0x11a0ea8*/ void InitializeWinByGuildBoss(PTShare.Define.SProperty _reward);
    /*0x11a16bc*/ void InitializeWinReplayByGuildBoss();
    /*0x11a0a60*/ void InitializeWinByEventBoss(PTShare.Define.SProperty _reward);
    /*0x11a13e0*/ void InitializeWinReplayByEventBoss();
    /*0x11a1a18*/ void InitializeLose();
    /*0x11a1a24*/ void OnNext();
    /*0x11a1aa4*/ void OnRetry();
    /*0x11a1af8*/ void OnShowGraph();
}

class ScrollContent_GuildBossRecordEntity : ScrollContent<GuildBossRecordEntity>
{
    /*0xe19a0c*/ ScrollContent_GuildBossRecordEntity();
}

class ScrollContent_GuildCalanderEntity : ScrollContent<GuildCalanderEntity>
{
    /*0xe19a84*/ ScrollContent_GuildCalanderEntity();
}

class ScrollContent_GuildEmblemSlot : ScrollContent<GuildEmblemSlot>
{
    /*0xe19afc*/ ScrollContent_GuildEmblemSlot();
}

class ScrollContent_GuildMemberEntity : ScrollContent<GuildMemberEntity>
{
    /*0xe19b74*/ ScrollContent_GuildMemberEntity();
}

class ScrollContent_GuildSearchEntity : ScrollContent<GuildSearchEntity>
{
    /*0xe19bec*/ ScrollContent_GuildSearchEntity();
}

class ScrollContent_GuildWantRegisterEntity : ScrollContent<GuildWantRegisterEntity>
{
    /*0xe19c64*/ ScrollContent_GuildWantRegisterEntity();
}

class GuildWarRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_EmblemSlot;
    /*0x20*/ GuildLevelSlot m_LevelSlot;
    /*0x28*/ LocalizeString m_GuildName;
    /*0x30*/ LocalizeString m_RankNumber;
    /*0x38*/ LocalizeString m_PointAmount;
    /*0x40*/ LocalizeString m_TotalPower;
    /*0x48*/ AtlasImage m_RankIcon;
    /*0x50*/ PTShare.Define.SGuildWar guildInfo;
    /*0x58*/ int nRank;

    /*0x10ee73c*/ GuildWarRankEntity();
    /*0x10edf80*/ void Release();
    /*0x10edf88*/ void InitializeEntity(int nRank, PTShare.Define.SGuildWar data);
    /*0x10ee354*/ void InitializeEntity(int nRank, int nPoint);
    /*0x10ee1b0*/ void SetRanks();
    /*0x10ee4c0*/ void OnClick_GuildInfomation();
    /*0x10ee604*/ void CallbackGuildDetail(PTShare.Define.SGuild sGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMember);
}

class GuildWarRecordEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_EmblemSlot_Ally;
    /*0x20*/ GuildEmblemSlot m_EmblemSlot_Enemy;
    /*0x28*/ PlayerProfileSlot m_ProfileSlot;
    /*0x30*/ LocalizeString m_AllyName;
    /*0x38*/ LocalizeString m_EnemyName;
    /*0x40*/ LocalizeString m_Point;
    /*0x48*/ LocalizeString m_LastedTime;
    /*0x50*/ PTShare.Define.SGuildWarHistory historyInfo;

    /*0x10f08c0*/ GuildWarRecordEntity();
    /*0x10eff40*/ void InitializeEntity(PTShare.Define.SGuildWarHistory data);
    /*0x10f0474*/ void OnClick_GuildInfomation(bool ally);
    /*0x10f0478*/ void OnClick_Graph();
    /*0x10f08c8*/ void <InitializeEntity>b__8_0();
}

class HeroManager : Singleton.Data.SingletonData<HeroManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liHeroList;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHero> m_llNewHeroPopupWaitList;
    /*0x30*/ System.Collections.Generic.Stack<int> m_newHeroPopupWaitStack;
    /*0x38*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.SHero>> m_dicPropertyHero;
    /*0x40*/ int _nCurIndex;
    /*0x44*/ int _nStartCount;
    /*0x48*/ int _nEndCount;
    /*0x50*/ PTShare.Define.SHero _CurHeroInfo;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SBook> <BookList>k__BackingField;
    /*0x60*/ System.Action<int> OnShowNewHero;
    /*0x68*/ System.Action OnShowNewHeroSweepStack;

    /*0x1221178*/ HeroManager();
    /*0x121c460*/ string get_UserToken();
    /*0x121c4e0*/ int get_HeroCount();
    /*0x121c530*/ void set_BookList(System.Collections.Generic.List<PTShare.Define.SBook> value);
    /*0x121c538*/ System.Collections.Generic.List<PTShare.Define.SBook> get_BookList();
    /*0x121c540*/ bool InitInstance();
    /*0x121c690*/ void ReleaseInstance();
    /*0x121c840*/ void Send_EquipHero(int _heroid, int _equipid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121c998*/ void Send_AutoEquipHero(int _heroid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121cae8*/ void Send_UnequipHero(int _heroid, int _equipid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121cc4c*/ void Send_UnequipAllHero(int _heroid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121cd9c*/ void Send_PromoteHero(System.Action _callback, int _heroid, int[] _materialid);
    /*0x121cfd8*/ void Send_LevelupHero(int _heroid, int _count, bool _fast, System.Action<PTShare.Define.SHero> _callback);
    /*0x121d14c*/ void Send_LockHero(int _heroid, bool _isLock, System.Action<PTShare.Define.SHero> _callback);
    /*0x121d29c*/ void Send_ExtendSlot(System.Action _callback);
    /*0x121d3d0*/ void Send_BookReward(System.Action _callback, int _nUnitid);
    /*0x121d518*/ void Send_ResetHero(System.Action<int> _callback, int _heroid);
    /*0x121d66c*/ void Send_RevertHero(System.Action<int> _callback, int _heroid);
    /*0x121d7c0*/ void Send_DismissHero(System.Collections.Generic.List<PTShare.Define.SHero> list, PTShare.Define.SProperty gain, System.Action _callback);
    /*0x121db34*/ void InitalizeDictionary();
    /*0x121dea8*/ void AddDicsHero(PTShare.Define.SHero _hero);
    /*0x121df48*/ void DeleteDicsHero(PTShare.Define.SHero _hero);
    /*0x121e0cc*/ void SetHeroList(System.Collections.Generic.List<PTShare.Define.SHero> _liHero);
    /*0x121e1dc*/ void SetBookList(System.Collections.Generic.List<PTShare.Define.SBook> _liHero);
    /*0x121e1e4*/ System.Collections.Generic.List<PTShare.Define.SHero> FindHeroListbyProperty(PropertyType _type);
    /*0x121e258*/ System.Collections.Generic.List<PTShare.Define.SHero> FindIdleHeroListNoOverlapTableID();
    /*0x121e3e0*/ PTShare.Define.SHero GetPreviousHero(PTShare.Define.SHero _hero, int _type);
    /*0x121e5fc*/ PTShare.Define.SHero GetNextHero(PTShare.Define.SHero _hero, int _type);
    /*0x121e730*/ bool IsPromote(PTShare.Define.SHero hero);
    /*0x121e97c*/ bool IsNewHero(int tableId);
    /*0x121e148*/ void SortHeroList(System.Collections.Generic.List<PTShare.Define.SHero> _liSort);
    /*0x121ea30*/ bool CheckUseHero(int _tableid);
    /*0x121eb2c*/ bool IsExistHeroID(int _nHeroID);
    /*0x121ec30*/ bool IsExistHeroID(int _nHeroID, long _nPlayerID);
    /*0x121edac*/ PTShare.Define.SHero GetHeroData(int _nHeroID, long _nPlayerID);
    /*0x121ef0c*/ PTShare.Define.SHero GetHeroData(int _nHeroID);
    /*0x121effc*/ void IncreaseHero(PTShare.Define.SLittleHero _hero);
    /*0x121f4b0*/ void IncreaseHero(System.Collections.Generic.List<PTShare.Define.SLittleHero> _liHero);
    /*0x121f598*/ void DecreaseHero(PTShare.Define.SHero _hero);
    /*0x121f714*/ void DecreaseHero(System.Collections.Generic.List<PTShare.Define.SHero> _liHero);
    /*0x121f7bc*/ void DecreseHerobyID(System.Collections.Generic.List<int> _liHeroID);
    /*0x121f884*/ bool IsOutRangeInventory(int _addAmount);
    /*0x121fa7c*/ void ChangeMaxGradeSBook(PTShare.Define.SHero hero);
    /*0x121f330*/ void ChangeMaxGradeSBook(PTShare.Define.SLittleHero hero);
    /*0x121e4d4*/ int GetHeroListIndex(PTShare.Define.SHero _hero, int _type);
    /*0x121fbfc*/ int GetHeroListIndex(int _heroid, int _type);
    /*0x121cf00*/ string SetMaterialToString(int[] _materialid);
    /*0x121e6bc*/ System.Collections.Generic.List<PTShare.Define.SHero> GetTypeHeroList(int _type);
    /*0x121fd24*/ PTShare.Define.SHero FindHerobyHeroID(int _heroID);
    /*0x121fe14*/ PTShare.Define.SHero FindFirstByTableID(int _tableID);
    /*0x121ff00*/ PTShare.Define.SHero FindHerobyHeroIDandPlayerID(int _nHeroID, long _lPlayerID);
    /*0x121ffb8*/ void OverWriteGradebyHero(PTShare.Define.SHero _hero, bool ignorelv);
    /*0x12202c0*/ void OverWriteAbilityHero(int tableId, System.Collections.Generic.List<int> abilitys);
    /*0x12204f0*/ PTShare.Define.SBook FindSBookUnitID(int _unitid);
    /*0x1220614*/ bool HaveBookReward();
    /*0x1220730*/ bool CheckHeroSmartEquipmentALL(int maxHeroCount);
    /*0x1220844*/ bool CheckHeroSmartEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> list, PTShare.Define.SHero hero);
    /*0x1220b30*/ PTShare.Define.SHero FindEquipArtifactHero(int artifactid);
    /*0x1220c1c*/ System.Collections.Generic.List<PTShare.Define.SHero> GetHeroList();
    /*0x1220c24*/ int GetHeroTableCount();
    /*0x1220d6c*/ void ChangeAllSkinHero(int unitid, int skinid);
    /*0x121c558*/ void BindNewHeroEvent();
    /*0x121c710*/ void DeleteNewHeroEvent();
    /*0x1220e60*/ void HandleShowSweepStack();
    /*0x1220edc*/ void HandleShowNewHero(int tableId);
    /*0x1221310*/ void <DecreseHerobyID>b__53_0(int f);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x20*/ int _heroid;

        /*0x105d6a4*/ <>c__DisplayClass20_0();
        /*0x105d6ac*/ void <Send_EquipHero>b__0(ServerProtocol.ResHeroEquip _response);
    }

    class <>c__DisplayClass20_1
    {
        /*0x10*/ ServerProtocol.ResHeroEquip _response;

        /*0x105da3c*/ <>c__DisplayClass20_1();
        /*0x105da44*/ bool <Send_EquipHero>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x20*/ int _heroid;

        /*0x105da74*/ <>c__DisplayClass21_0();
        /*0x105da7c*/ void <Send_AutoEquipHero>b__0(ServerProtocol.ResHeroAutoEquip _response);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x28*/ int _heroid;

        /*0x105dc84*/ <>c__DisplayClass22_0();
        /*0x105dc8c*/ void <Send_UnequipHero>b__0(ServerProtocol.ResHeroUnequip _response);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x20*/ int _heroid;

        /*0x105de84*/ <>c__DisplayClass23_0();
        /*0x105de8c*/ void <Send_UnequipAllHero>b__0(ServerProtocol.ResHeroAllUnequip _response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ System.Action _callback;
        /*0x18*/ int _heroid;

        /*0x105e088*/ <>c__DisplayClass24_0();
        /*0x105e090*/ void <Send_PromoteHero>b__0(ServerProtocol.ResHeroPromote _response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _count;
        /*0x20*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x28*/ int _heroid;

        /*0x105e1cc*/ <>c__DisplayClass25_0();
        /*0x105e1d4*/ void <Send_LevelupHero>b__0(ServerProtocol.ResHeroLevelUp _response);
    }

    class <>c
    {
        static /*0x0*/ HeroManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__25_1;
        static /*0x10*/ System.Action<PTShare.Define.SItem> <>9__27_1;
        static /*0x18*/ System.Func<PTShare.Define.SHero, int> <>9__31_0;
        static /*0x20*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__31_1;
        static /*0x28*/ System.Action<PTShare.Define.SHero> <>9__31_3;
        static /*0x30*/ System.Func<PTShare.Define.SHero, int> <>9__32_0;
        static /*0x38*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, int> <>9__32_1;
        static /*0x40*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, System.Collections.Generic.List<PTShare.Define.SHero>> <>9__32_2;
        static /*0x48*/ System.Func<PTShare.Define.SBook, bool> <>9__67_0;
        static /*0x50*/ System.Func<TableData.TableData_Unitbase, bool> <>9__72_0;

        static /*0x105d250*/ <>c();
        /*0x105d2b0*/ <>c();
        /*0x105d2b8*/ void <Send_LevelupHero>b__25_1(PTShare.Define.SItem item);
        /*0x105d340*/ void <Send_ExtendSlot>b__27_1(PTShare.Define.SItem item);
        /*0x105d3c8*/ int <Send_DismissHero>b__31_0(PTShare.Define.SHero s);
        /*0x105d3e0*/ System.Collections.Generic.IEnumerable<byte> <Send_DismissHero>b__31_1(int b);
        /*0x105d444*/ void <Send_DismissHero>b__31_3(PTShare.Define.SHero s);
        /*0x105d4d0*/ int <InitalizeDictionary>b__32_0(PTShare.Define.SHero g);
        /*0x105d4fc*/ int <InitalizeDictionary>b__32_1(System.Linq.IGrouping<int, PTShare.Define.SHero> k);
        /*0x105d5a4*/ System.Collections.Generic.List<PTShare.Define.SHero> <InitalizeDictionary>b__32_2(System.Linq.IGrouping<int, PTShare.Define.SHero> v);
        /*0x105d5f0*/ bool <HaveBookReward>b__67_0(PTShare.Define.SBook y);
        /*0x105d610*/ bool <GetHeroTableCount>b__72_0(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;

        /*0x105e59c*/ <>c__DisplayClass26_0();
        /*0x105e5a4*/ void <Send_LockHero>b__0(ServerProtocol.ResHeroLock _response);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ System.Action _callback;

        /*0x105e6f0*/ <>c__DisplayClass27_0();
        /*0x105e6f8*/ void <Send_ExtendSlot>b__0(ServerProtocol.ResHeroExtendSlot _response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x105e8c0*/ <>c__DisplayClass28_0();
        /*0x105e8c8*/ void <Send_BookReward>b__0(ServerProtocol.ResHeroBookReward _response);
    }

    class <>c__DisplayClass28_1
    {
        /*0x10*/ ServerProtocol.ResHeroBookReward _response;

        /*0x105ea90*/ <>c__DisplayClass28_1();
        /*0x105ea98*/ bool <Send_BookReward>b__1(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _heroid;
        /*0x20*/ System.Action<int> _callback;

        /*0x105eac8*/ <>c__DisplayClass29_0();
        /*0x105ead0*/ void <Send_ResetHero>b__0(ServerProtocol.ResHeroWagon _response);
    }

    class <>c__DisplayClass29_1
    {
        /*0x10*/ ServerProtocol.ResHeroWagon _response;

        /*0x105ee20*/ <>c__DisplayClass29_1();
        /*0x105ee28*/ void <Send_ResetHero>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _heroid;
        /*0x20*/ System.Action<int> _callback;

        /*0x105eed8*/ <>c__DisplayClass30_0();
        /*0x105eee0*/ void <Send_RevertHero>b__0(ServerProtocol.ResHeroRevert _response);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHero> list;
        /*0x18*/ HeroManager <>4__this;
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ System.Action _callback;

        /*0x105f160*/ <>c__DisplayClass31_0();
        /*0x105f168*/ void <Send_DismissHero>b__2(ServerProtocol.ResHeroDismiss _response);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105f460*/ <>c__DisplayClass34_0();
        /*0x105f468*/ bool <DeleteDicsHero>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ int _tableid;

        /*0x105f498*/ <>c__DisplayClass44_0();
        /*0x105f4a0*/ bool <CheckUseHero>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ int _nHeroID;

        /*0x105f4c4*/ <>c__DisplayClass45_0();
        /*0x105f4cc*/ bool <IsExistHeroID>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ long _nPlayerID;
        /*0x18*/ int _nHeroID;

        /*0x105f4ec*/ <>c__DisplayClass46_0();
        /*0x105f4f4*/ bool <IsExistHeroID>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ long _nPlayerID;
        /*0x18*/ int _nHeroID;

        /*0x105f530*/ <>c__DisplayClass47_0();
        /*0x105f538*/ bool <GetHeroData>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ int _nHeroID;

        /*0x105f574*/ <>c__DisplayClass48_0();
        /*0x105f57c*/ bool <GetHeroData>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ PTShare.Define.SLittleHero _hero;

        /*0x105f5a0*/ <>c__DisplayClass49_0();
        /*0x105f5a8*/ bool <IncreaseHero>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass53_0
    {
        /*0x10*/ int f;

        /*0x105f5d8*/ <>c__DisplayClass53_0();
        /*0x105f5e0*/ bool <DecreseHerobyID>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ PTShare.Define.SHero hero;

        /*0x105f604*/ <>c__DisplayClass55_0();
        /*0x105f60c*/ bool <ChangeMaxGradeSBook>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ PTShare.Define.SLittleHero hero;

        /*0x105f63c*/ <>c__DisplayClass56_0();
        /*0x105f644*/ bool <ChangeMaxGradeSBook>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105f674*/ <>c__DisplayClass57_0();
        /*0x105f67c*/ bool <GetHeroListIndex>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ int _heroid;

        /*0x105f6ac*/ <>c__DisplayClass58_0();
        /*0x105f6b4*/ bool <GetHeroListIndex>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ int _heroID;

        /*0x105f6d8*/ <>c__DisplayClass61_0();
        /*0x105f6e0*/ bool <FindHerobyHeroID>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass62_0
    {
        /*0x10*/ int _tableID;

        /*0x105f704*/ <>c__DisplayClass62_0();
        /*0x105f70c*/ bool <FindFirstByTableID>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass64_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105f730*/ <>c__DisplayClass64_0();
        /*0x105f738*/ bool <OverWriteGradebyHero>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass66_0
    {
        /*0x10*/ int _unitid;

        /*0x105f768*/ <>c__DisplayClass66_0();
        /*0x105f770*/ bool <FindSBookUnitID>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass70_0
    {
        /*0x10*/ int artifactid;

        /*0x105f794*/ <>c__DisplayClass70_0();
        /*0x105f79c*/ bool <FindEquipArtifactHero>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ int unitid;
        /*0x14*/ int skinid;

        /*0x105f7d0*/ <>c__DisplayClass73_0();
        /*0x105f7d8*/ void <ChangeAllSkinHero>b__0(PTShare.Define.SHero x);
    }
}

class DefineHousing
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, int> HousingGradeMap;
    static /*0x8*/ float PRESS_TIME;
    static /*0xc*/ UnityEngine.Vector3 TILEINTERVAL;
    static /*0x18*/ UnityEngine.Vector3 SPACEINTERVAL;
    static /*0x24*/ int SPACE_SIZE;
    static /*0x28*/ UnityEngine.Vector3 TILESIZE;
    static /*0x34*/ UnityEngine.Vector3 WALLINTERVAL;
    static /*0x40*/ UnityEngine.Vector3 WALLSPACESIZE;
    static /*0x50*/ float[] SPACE_PADDINGS;
    static /*0x58*/ float WALL_ODD_Y;
    static /*0x60*/ int[] WALL_TEST;
    static /*0x68*/ UnityEngine.Color OBJECT_OK;
    static /*0x78*/ UnityEngine.Color OBJECT_NO;
    static /*0x88*/ UnityEngine.Color SPACE_BLOCK;
    static /*0x98*/ UnityEngine.Color GROUND_BLOCK;
    static /*0xa8*/ UnityEngine.Color WALL_BLOCK;
    static /*0xb8*/ UnityEngine.Color SPACE_NORMAL;
    static /*0xc8*/ UnityEngine.Color SPACE_TRANSPARENT;
    static /*0xd8*/ float ZOOM_MIN;
    static /*0xdc*/ float ZOOM_MAX;
    static /*0xe0*/ string WALLPAPER_KEY;
    static /*0xe8*/ string TILE_KEY;
    static /*0xf0*/ int WALL_HEIGHT;
    static /*0xf4*/ int CAPTURE_SIZE;
    static /*0xf8*/ UnityEngine.Vector2Int[] WASTE_POINT;

    static /*0x11e5224*/ DefineHousing();
    static /*0x11e4ee4*/ UnityEngine.Vector2Int ConvertPoint(UnityEngine.Vector2Int point, ARROW arrow);
    static /*0x11e4f38*/ TableData.TableData_Furniture GetWasteTable(int id);
    static /*0x11e5010*/ int GetDestLv(PTShare.Define.SHousingObj _obj, int offset);
    static /*0x11e50e4*/ bool IsLevelupState(PTShare.Define.SHousingObj obj);
    static /*0x11e5118*/ bool IsWaste(PTShare.Define.SHousingObj obj);
    static /*0x11e518c*/ bool IsEffectFurniture(PTShare.Define.SHousingObj obj);
    static /*0x11e51c8*/ bool EqualFloor(PTShare.Define.SHousingObj obj, int floor);
    static /*0x11e5184*/ bool IsWaste(int housingId);
    static /*0x11e51f8*/ bool IsEffectfurniture(TableData.TableData_Furniture table);

    enum LAYER
    {
        NONE = 0,
        HOUSING_OBJECT = 1,
        WALL_LEFT = 2,
        WALL_RIGHT = 3,
        CARPET = 4,
        ETC = 5,
    }

    enum SELECT_TYPE
    {
        MOVE = 0,
        BUY = 1,
        COLLOCATE = 2,
        NULL = 3,
    }

    enum SWEEP
    {
        NONE = 0,
        GROUND = 1,
        WALL = 2,
        EFFECT = 4,
        WALL_TILE = 8,
    }

    enum HOUSING_STATE
    {
        NONE = 0,
        SPACE_HOUSINGOBJECT = 1,
        SPACE_GROUND = 2,
        HIDE_OBJECT = 4,
        EDIT_WINDOW = 8,
        OBJECT_SELECT = 16,
        SPACE_WALL = 32,
        VIEW_MODE = 256,
        SHOW_CHARACTER = 512,
        HIDE_LAYER_FURNITURE = 1024,
        HIDE_LAYER_WALL = 2048,
        HIDE_LAYER_GROUND = 4096,
        HIDE_CHARACTER = 8192,
        EFFECT_ICON_VIEW_MODE = 16384,
        STATE_CHANGE = 268435456,
        STATE_ADD = 536870912,
        STATE_REMOVE = 1073741824,
        NULL = 1073741825,
    }

    enum HOUSING_SORTTAB
    {
        ALL = 0,
        SET = 1,
        TILE = 2,
        WALLPAPER = 3,
        FURNITURE = 4,
        WALL = 5,
        DECO = 6,
    }

    enum HOUSING_TYPE
    {
        NORMAL = 0,
        VISIT = 1,
        LOAD = 2,
    }

    enum VISIT_TYPE
    {
        IN_HOUSE = 0,
        ETC = 1,
    }

    enum PURCHASE_STATE
    {
        PURCHASE = 0,
        BUY_LIMIT = 1,
        OWN_LIMIT = 2,
    }

    enum SELL_TYPE
    {
        SALE = 0,
        NONE = 1,
    }
}

class FurnitureGachaButton : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x18*/ AtlasImage m_PriceIcon;
    /*0x20*/ LocalizeString m_PriceAmount;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ bool m_bIsEnough;
    /*0x31*/ bool m_bIsSubPrice;
    /*0x34*/ PTShare.Define.Wealth m_ePriceType;
    /*0x38*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x3c*/ int m_nItemId;
    /*0x40*/ long m_nAmount;
    /*0x48*/ bool m_isSingle;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_price;

    static /*0x10aa854*/ FurnitureGachaButton();
    /*0x10aa7dc*/ FurnitureGachaButton();
    /*0x10a9860*/ void InitializeButton(bool isSingle);
    /*0x10a9990*/ void InitialzePrice();
    /*0x10a9e20*/ void Refresh();
    /*0x10a9c08*/ void SetPriceButton();
    /*0x10a9e44*/ void OnClick();
    /*0x10aa330*/ bool InValidClickCondition();
    /*0x10aa56c*/ void SendBuyProtocol();
    /*0x10aa334*/ bool IsNotEnough();
    /*0x10aa6a0*/ int GetPriceType();
    /*0x10a9898*/ void BindEvent();
    /*0x10aa6c8*/ void RemoveEvent();
    /*0x10aa7b8*/ void HandleRefresh();
    /*0x10aa858*/ void <OnClick>b__16_0(bool _result);
    /*0x10aa864*/ void <SendBuyProtocol>b__18_0(System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> buyResult);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0x10a343c*/ <>c__DisplayClass18_0();
        /*0x10a3444*/ void <SendBuyProtocol>b__1(PTShare.Define.SMiniHousingObj data);
    }
}

class FurnitureGachaPercentPopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardPercentSlot m_scrollContent;
    /*0x48*/ LocalizeString m_leftTime;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x58*/ System.Collections.Generic.List<float> m_dropPercentList;
    /*0x60*/ UnityEngine.Coroutine m_coroutine;
    /*0x68*/ System.Action exitCallBack;

    /*0x10ab5e8*/ FurnitureGachaPercentPopup();
    /*0x10aae8c*/ void OnCreate();
    /*0x10aae90*/ void OnDelete();
    /*0x10aae94*/ void OnEnter();
    /*0x10aae98*/ void OnExit();
    /*0x10ab01c*/ void OnFinish();
    /*0x10ab020*/ void OnLeave();
    /*0x10ab024*/ void OnStart();
    /*0x10ab028*/ void InitPopup(System.Action exitCallBack);
    /*0x10ab1dc*/ void UpdateData();
    /*0x10ab474*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0x10ab4e0*/ void HandleScrollContent(int index, RewardPercentSlot obj);
    /*0x10ab100*/ void BindEvent();
    /*0x10aaf48*/ void RemoveEvent();

    class <CoUpdateTimer>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureGachaPercentPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;
        /*0x30*/ System.DateTime <time>5__3;
        /*0x38*/ int <leftTime>5__4;

        /*0x10a3514*/ <CoUpdateTimer>d__15(int <>1__state);
        /*0x10a3540*/ void System.IDisposable.Dispose();
        /*0x10a3544*/ bool MoveNext();
        /*0x10a3804*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a380c*/ void System.Collections.IEnumerator.Reset();
        /*0x10a384c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FurnitureGachaPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ FurnitureGachaButton[] m_gachaButtons;
    /*0x50*/ AtlasImage m_percentIcon;
    /*0x58*/ GachaCharacter m_gachaCharacter;

    static /*0x10ac2c0*/ FurnitureGachaPopup();
    /*0x10ac2b8*/ FurnitureGachaPopup();
    /*0x10ab6a0*/ void OnCreate();
    /*0x10ab6a4*/ void OnDelete();
    /*0x10ab6a8*/ void OnEnter();
    /*0x10ab6ac*/ void OnExit();
    /*0x10ab7b8*/ void OnFinish();
    /*0x10ab7bc*/ void OnLeave();
    /*0x10ab7c0*/ void OnStart();
    /*0x10ab7c4*/ void InitPopup();
    /*0x10abc7c*/ void InitCurrencyTop();
    /*0x10abe1c*/ void InitButtons();
    /*0x10ab86c*/ void BindEvent();
    /*0x10abebc*/ void RemoveEvent();
    /*0x10abfac*/ void HandleRefresh();
    /*0x10abfb0*/ void OnClickHelp();
    /*0x10ac054*/ void OnClickPercent();
    /*0x10ac170*/ void OnClickShop();
    /*0x10ac2c4*/ void <OnExit>b__8_0();
    /*0x10ac2cc*/ void <OnClickPercent>b__19_0();

    class <>c
    {
        static /*0x0*/ FurnitureGachaPopup.<> <>9;
        static /*0x8*/ System.Action <>9__20_0;

        static /*0xf62e84*/ <>c();
        /*0xf62ee4*/ <>c();
        /*0xf62eec*/ void <OnClickShop>b__20_0();
    }
}

class FurnitureGachaResultPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject[] m_singleEnables;
    /*0x48*/ UnityEngine.GameObject[] m_multiEnables;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_singleSkel;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_multiSkel;
    /*0x60*/ ParticleBase m_singleParticle;
    /*0x68*/ ParticleBase m_multiParticle;
    /*0x70*/ System.Collections.Generic.List<ItemTableRewardSlot> m_itemList;
    /*0x78*/ UnityEngine.Vector2 m_posMinMaxX;
    /*0x80*/ UnityEngine.Vector2 m_posMinMaxY;
    /*0x88*/ UnityEngine.Vector2 m_jumpPowerMinMax;
    /*0x90*/ UnityEngine.Vector2 m_jumpDurationMinMax;
    /*0x98*/ int m_jumpCount;
    /*0xa0*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0xa8*/ Spine.Unity.SkeletonGraphic m_curSkel;
    /*0xb0*/ bool m_isSingle;
    /*0xb1*/ bool m_isGacha;
    /*0xb8*/ System.Action m_animEndCallBack;

    /*0x10ac98c*/ FurnitureGachaResultPopup();
    /*0x10ac33c*/ void OnCreate();
    /*0x10ac340*/ void OnDelete();
    /*0x10ac344*/ void OnEnter();
    /*0x10ac348*/ void OnExit();
    /*0x10ac3d4*/ void OnFinish();
    /*0x10ac3d8*/ void OnLeave();
    /*0x10ac3dc*/ void OnStart();
    /*0x10aaa68*/ void InitPopup(bool isSingle, System.Collections.Generic.List<Rewards> rewardList);
    /*0x10ac3e0*/ void SetBox(bool isSingle);
    /*0x10ac4f8*/ void OnClick();
    /*0x10ac8b4*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0x10ac960*/ void HandleAnimCompleteOpenBox();
    /*0x10ac7fc*/ System.Collections.IEnumerator CoLatePlayOpenSoundSingle();
    /*0x10ac858*/ System.Collections.IEnumerator CoLatePlayOpenSound();
    /*0x10ac790*/ System.Collections.IEnumerator CoShowReward();
    /*0x10aca7c*/ void <InitPopup>b__24_1();

    class <>c
    {
        static /*0x0*/ FurnitureGachaResultPopup.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__24_0;

        static /*0xf62f6c*/ <>c();
        /*0xf62fcc*/ <>c();
        /*0xf62fd4*/ void <InitPopup>b__24_0(ItemTableRewardSlot data);
    }

    class <CoLatePlayOpenSoundSingle>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf6321c*/ <CoLatePlayOpenSoundSingle>d__29(int <>1__state);
        /*0xf63248*/ void System.IDisposable.Dispose();
        /*0xf6324c*/ bool MoveNext();
        /*0xf63358*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf63360*/ void System.Collections.IEnumerator.Reset();
        /*0xf633a0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLatePlayOpenSound>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf63004*/ <CoLatePlayOpenSound>d__30(int <>1__state);
        /*0xf63030*/ void System.IDisposable.Dispose();
        /*0xf63034*/ bool MoveNext();
        /*0xf631cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf631d4*/ void System.Collections.IEnumerator.Reset();
        /*0xf63214*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureGachaResultPopup <>4__this;
        /*0x28*/ int <count>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xf633a8*/ <CoShowReward>d__31(int <>1__state);
        /*0xf633d4*/ void System.IDisposable.Dispose();
        /*0xf633d8*/ bool MoveNext();
        /*0xf638e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf638ec*/ void System.Collections.IEnumerator.Reset();
        /*0xf6392c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FurnitureUpgradePopup : GuiBase
{
    /*0x40*/ ScrollContent_UpgradeEquipSlot m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemInfo;
    /*0x50*/ LocalizeString m_ExperienceText;
    /*0x58*/ UnityEngine.UI.Slider m_ExperienceSlider;
    /*0x60*/ LocalizeString m_furnitureName;
    /*0x68*/ UnityEngine.UI.Outline m_furniturNameOutColor;
    /*0x70*/ LocalizeString m_emptyText;
    /*0x78*/ ParticleBase m_levelUpParticle;
    /*0x80*/ AtlasImage m_fadeOutImage;
    /*0x88*/ AtlasImage[] m_prevLv;
    /*0x90*/ AtlasImage[] m_nextLv;
    /*0x98*/ LocalizeString m_prevInfo;
    /*0xa0*/ LocalizeString m_nextInfo;
    /*0xa8*/ LocalizeString m_upgradeTime;
    /*0xb0*/ TableData.TableData_Furniture m_TableInfo;
    /*0xb8*/ PTShare.Define.SHousingObj m_FurnitureInfo;
    /*0xc0*/ System.Collections.Generic.List<int> m_liExpInfo;
    /*0xc8*/ int m_curLevel;
    /*0xcc*/ int m_curExp;
    /*0xd0*/ System.Collections.Generic.List<PTShare.Define.SItem> m_liScrollItem;
    /*0xd8*/ System.Collections.Generic.List<HousingObjSet> m_liScrolFurniture;
    /*0xe0*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<bool, int>> m_dicItemAmount;
    /*0xe8*/ UpgradeEquipSlot _curSlot;
    /*0xf0*/ PTShare.Define.SItem _curSItem;
    /*0xf8*/ HousingObjSet _curFurnitureItem;
    /*0x100*/ int _curIndex;
    /*0x108*/ UnityEngine.Coroutine m_sliderCoroutine;

    /*0x10b15e4*/ FurnitureUpgradePopup();
    /*0x10ae100*/ void OnCreate();
    /*0x10ae104*/ void OnDelete();
    /*0x10ae1c4*/ void OnEnter();
    /*0x10ae4e4*/ void OnFinish();
    /*0x10ae4e8*/ void OnLeave();
    /*0x10ae6f0*/ void OnStart();
    /*0x10ae6f4*/ void OnExit();
    /*0x10ae7e0*/ void InitializePopup(TableData.TableData_Furniture _furniture, PTShare.Define.SHousingObj _user, int lv);
    /*0x10ae260*/ void BindEvent();
    /*0x10ae590*/ void RemoveEvent();
    /*0x10aee24*/ void InitializeScroll(int _selectindex);
    /*0x10af31c*/ void HandlerScrollContent(int _index, UpgradeEquipSlot _obj);
    /*0x10aeae8*/ void SetData();
    /*0x10aeba0*/ void SetStatusView();
    /*0x10af60c*/ void ClearInsertExperienceInfo();
    /*0x10af8b8*/ void RefreshText(float refreshTime);
    /*0x10afb4c*/ void SetExperience(int _index, int _amount, int _exp);
    /*0x10aef0c*/ void RefreshGrade();
    /*0x10af5ac*/ bool IsItem(int _nIndex);
    /*0x10affc0*/ void OnUpgrade();
    /*0x10b0474*/ void Upgrade();
    /*0x10b0c04*/ void OnFastSelect();
    /*0x10b11f8*/ void CallbackReinforce(PTShare.Define.SHousingObj obj);
    /*0x10b1340*/ void HandlerSelectEquip(int _index, int _equipExp, int _dummy);
    /*0x10b0414*/ bool IsConditionUpgrade();
    /*0x10b110c*/ bool IsConditionSelectItemLimit(int _exp);
    /*0x10ae50c*/ void ResetEffectCoroutineData();
    /*0x10afabc*/ System.Collections.IEnumerator CoSliderProgress(float oldPer, float newPer, float playTime);
    /*0x10b117c*/ System.Collections.IEnumerator CoRefreshText(int oldLevel);
    /*0x10b1480*/ System.Collections.IEnumerator CoEquipmentIconScaleEffect(int starAmount);
    /*0x10b14fc*/ System.Collections.IEnumerator CoEquipmentIconFadeOutEffect(float speed);
    /*0x10b1578*/ System.Collections.IEnumerator CoStopParticle(ParticleBase target);
    /*0x10ae3c8*/ void CleanEffectData();
    /*0x10b171c*/ void <OnUpgrade>b__46_0(bool confirm);
    /*0x10b1728*/ void <Upgrade>b__47_1(PTShare.Define.SHousingObj obj);

    class <>c
    {
        static /*0x0*/ FurnitureUpgradePopup.<> <>9;
        static /*0x8*/ System.Predicate<HousingObjSet> <>9__34_0;
        static /*0x10*/ System.Comparison<HousingObjSet> <>9__34_1;
        static /*0x18*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__47_0;

        static /*0xf63934*/ <>c();
        /*0xf63994*/ <>c();
        /*0xf6399c*/ bool <InitializePopup>b__34_0(HousingObjSet x);
        /*0xf639f8*/ int <InitializePopup>b__34_1(HousingObjSet a, HousingObjSet b);
        /*0xf63b20*/ System.Collections.Generic.IEnumerable<byte> <Upgrade>b__47_0(int s);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<int, System.ValueTuple<bool, int>> _val;

        /*0xf63b84*/ <>c__DisplayClass46_0();
        /*0xf63b8c*/ bool <OnUpgrade>b__1(HousingObjSet x);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<int, System.ValueTuple<bool, int>> _val;

        /*0xf63bf4*/ <>c__DisplayClass47_0();
        /*0xf63bfc*/ bool <Upgrade>b__2(PTShare.Define.SItem x);
        /*0xf63c5c*/ bool <Upgrade>b__3(HousingObjSet x);
    }

    class <>c__DisplayClass47_1
    {
        /*0x10*/ HousingObjSet _item;
        /*0x18*/ System.Predicate<PTShare.Define.SHousingObj> <>9__4;

        /*0xf63cc4*/ <>c__DisplayClass47_1();
        /*0xf63ccc*/ bool <Upgrade>b__4(PTShare.Define.SHousingObj y);
    }

    class <CoSliderProgress>d__54 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float playTime;
        /*0x28*/ FurnitureUpgradePopup <>4__this;
        /*0x30*/ float newPer;
        /*0x34*/ float oldPer;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;

        /*0xf64400*/ <CoSliderProgress>d__54(int <>1__state);
        /*0xf6442c*/ void System.IDisposable.Dispose();
        /*0xf64430*/ bool MoveNext();
        /*0xf64578*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64580*/ void System.Collections.IEnumerator.Reset();
        /*0xf645c0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshText>d__55 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int oldLevel;
        /*0x28*/ FurnitureUpgradePopup <>4__this;

        /*0xf641a4*/ <CoRefreshText>d__55(int <>1__state);
        /*0xf641d0*/ void System.IDisposable.Dispose();
        /*0xf641d4*/ bool MoveNext();
        /*0xf643b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf643b8*/ void System.Collections.IEnumerator.Reset();
        /*0xf643f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconScaleEffect>d__56 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureUpgradePopup <>4__this;
        /*0x28*/ int starAmount;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ float <speed>5__3;

        /*0xf63f3c*/ <CoEquipmentIconScaleEffect>d__56(int <>1__state);
        /*0xf63f68*/ void System.IDisposable.Dispose();
        /*0xf63f6c*/ bool MoveNext();
        /*0xf64154*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6415c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6419c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconFadeOutEffect>d__57 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureUpgradePopup <>4__this;
        /*0x28*/ float speed;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ UnityEngine.Color <color>5__3;

        /*0xf63dc8*/ <CoEquipmentIconFadeOutEffect>d__57(int <>1__state);
        /*0xf63df4*/ void System.IDisposable.Dispose();
        /*0xf63df8*/ bool MoveNext();
        /*0xf63eec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf63ef4*/ void System.Collections.IEnumerator.Reset();
        /*0xf63f34*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoStopParticle>d__58 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ParticleBase target;

        /*0xf645c8*/ <CoStopParticle>d__58(int <>1__state);
        /*0xf645f4*/ void System.IDisposable.Dispose();
        /*0xf645f8*/ bool MoveNext();
        /*0xf646c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf646c8*/ void System.Collections.IEnumerator.Reset();
        /*0xf64708*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroSlotHousing : HeroSlot
{
    /*0x48*/ LocalizeString m_name;
    /*0x50*/ LocalizeString m_floor;
    /*0x58*/ AtlasImage m_floorBg;

    /*0x126cd78*/ HeroSlotHousing();
    /*0x126cad0*/ void InitHousingSlot(PTShare.Define.SHero _hero, int floor, System.Action<PTShare.Define.SHero> _callback);
}

class HousingAmountNotify : HousingNotifyBase
{
    /*0x38*/ AmountSlot m_amountSlot;
    /*0x40*/ UnityEngine.Vector3 m_startPosition;

    /*0x130bdd4*/ HousingAmountNotify();
    /*0x130bc04*/ void InitNotify(UnityEngine.Vector3 startPosition, float time, Rewards amount);
    /*0x130bcd0*/ void DefaultUpdate();
}

class HousingCharacter : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int CHARACTER_LAYER;
    /*0x18*/ UISkeletonCharacter m_characterSkel;
    /*0x20*/ int m_oldTableId;
    /*0x24*/ UnityEngine.Vector2Int m_point;
    /*0x2c*/ UnityEngine.Vector2Int m_dest;
    /*0x38*/ UnityEngine.Coroutine m_moveCoroutine;
    /*0x40*/ UnityEngine.Coroutine m_talkCoroutine;

    static /*0x130c754*/ HousingCharacter();
    /*0x130c718*/ HousingCharacter();
    /*0x130be08*/ void OnDisable();
    /*0x130be48*/ UnityEngine.Vector2Int GetPoint();
    /*0x130be50*/ void InitCharacter(int tableId, bool refresh);
    /*0x130c364*/ void ClearCoroutine();
    /*0x130be0c*/ void Clear();
    /*0x130c41c*/ void EnableCharacter();
    /*0x130c22c*/ void HideCharacter();
    /*0x130bfd4*/ bool SetInitPoint();
    /*0x130c3b0*/ System.Collections.IEnumerator CoUpdate();
    /*0x130c44c*/ System.Collections.Generic.List<ARROW> GetMovePointList();
    /*0x130c5ac*/ void OnClick();
    /*0x130c6ac*/ System.Collections.IEnumerator CoTalkWait();

    class <CoUpdate>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingCharacter <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <moveTime>5__2;

        /*0x106414c*/ <CoUpdate>d__15(int <>1__state);
        /*0x1064178*/ void System.IDisposable.Dispose();
        /*0x106417c*/ bool MoveNext();
        /*0x106472c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1064734*/ void System.Collections.IEnumerator.Reset();
        /*0x1064774*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTalkWait>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingCharacter <>4__this;

        /*0x1064024*/ <CoTalkWait>d__18(int <>1__state);
        /*0x1064050*/ void System.IDisposable.Dispose();
        /*0x1064054*/ bool MoveNext();
        /*0x10640fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1064104*/ void System.Collections.IEnumerator.Reset();
        /*0x1064144*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingDebugPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ UnityEngine.UI.InputField m_startId;
    /*0x50*/ UnityEngine.UI.InputField m_endId;
    /*0x58*/ UnityEngine.UI.Text m_furnitureIdInstance;

    /*0x130cf30*/ HousingDebugPopup();
    /*0x130c7a4*/ void OnCreate();
    /*0x130c7a8*/ void OnDelete();
    /*0x130c7ac*/ void OnEnter();
    /*0x130c7b0*/ void OnFinish();
    /*0x130c7b4*/ void OnLeave();
    /*0x130c7b8*/ void OnStart();
    /*0x130c7bc*/ void Show();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ int max;
        /*0x14*/ int min;

        /*0x106477c*/ <>c__DisplayClass10_0();
        /*0x1064784*/ void <Show>b__0(HousingTileSpace f);
    }
}

class HousingEditWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingField m_mainField;
    /*0x20*/ UnityEngine.GameObject m_mainWindow;
    /*0x28*/ UnityEngine.GameObject m_editWindow;
    /*0x30*/ UnityEngine.GameObject m_viewWindow;
    /*0x38*/ UnityEngine.GameObject m_camera;
    /*0x40*/ DragPressEvent m_dragPressEvent;
    /*0x48*/ HousingSubMenu m_subMenu;
    /*0x50*/ HousingObjectSimpleMenu m_simpleMenu;
    /*0x58*/ ScrollContent_HousingFloorButton m_scrollContent;
    /*0x60*/ HousingObjectMenu m_housingObjectMenu;
    /*0x68*/ HousingPressImage m_housingPressImage;
    /*0x70*/ LocalizeString[] m_limitEffectFurnitureTexts;
    /*0x78*/ SingleTab m_viewModeTab;
    /*0x80*/ SingleTab m_effectViewModeTab;
    /*0x88*/ UnityEngine.GameObject m_shareButton;
    /*0x90*/ AtlasImage m_flashImage;
    /*0x98*/ UnityEngine.CanvasGroup m_mainCanvasGroup;
    /*0xa0*/ HousingObjectBase m_selectObject;
    /*0xa8*/ HousingObjectBase m_swapObject;
    /*0xb0*/ HousingTileSpace m_selectSpace;
    /*0xb8*/ float m_zoomValue;
    /*0xbc*/ bool m_isZoomUpdate;
    /*0xbd*/ bool m_isSaveMode;
    /*0xc0*/ UnityEngine.GameObject[] m_visitModeDisables;
    /*0xc8*/ UnityEngine.GameObject[] m_visitModeEnables;
    /*0xd0*/ LocalizeString m_totalLikeText;
    /*0xd8*/ LocalizeString m_likeText;
    /*0xe0*/ LocalizeString m_visitNameText;

    /*0x1312998*/ HousingEditWindow();
    /*0x130d148*/ void OnDisable();
    /*0x130d1e0*/ void InitWindow();
    /*0x130d840*/ void RegisterData();
    /*0x130e62c*/ void SetLimitCount();
    /*0x130e814*/ bool IsUseEvent();
    /*0x130d14c*/ void Clear();
    /*0x130d428*/ void BindEvent();
    /*0x130e81c*/ void RemoveEvent();
    /*0x130ec2c*/ HousingObjectBase RayToHousingObject();
    /*0x130ee00*/ void HandleChangeState(int state);
    /*0x130f258*/ void HandleClickFurniture(DefineHousing.SELECT_TYPE type, int id);
    /*0x130fd30*/ void HandleDownEvent();
    /*0x131072c*/ void HandleUpEvent(bool isClick);
    /*0x1310928*/ void HandleLongPressDragEvent(UnityEngine.Vector2 dir);
    /*0x1310a7c*/ void HandleDragEvent(UnityEngine.Vector2 dir);
    /*0x1310b08*/ void HandleScrollContent(int index, HousingFloorButton obj);
    /*0x1311050*/ void HandleViewModeChange(int index);
    /*0x13112f4*/ void HandleEffectViewModeChange(int index);
    /*0x1311440*/ void OnClickShowModeSwap();
    /*0x1311604*/ void OnClickRemove();
    /*0x1311684*/ void OnClickSubMenu();
    /*0x1311708*/ void OnClickViewMode();
    /*0x13118d4*/ void OnClickEditMode();
    /*0x13119fc*/ void OnClickEndEditMode();
    /*0x1311ad0*/ void OnClickRandom();
    /*0x130f53c*/ void OnClickStorage(int id);
    /*0x130f27c*/ void OnClickShop(int shopListIndex);
    /*0x1312238*/ void OnClickCam();
    /*0x1312264*/ System.Collections.IEnumerator CoShareCam();
    /*0x1311c64*/ void SetSelectObject(HousingObjectBase selectObject, bool useSnap, DefineHousing.SELECT_TYPE selectType, bool isCancel);
    /*0x130dd78*/ void UpdateZoom();
    /*0x13122d0*/ void SetSaveViewMode(bool enable);
    /*0x13124d4*/ void SetLoadViewMode(int slot);
    /*0x1312588*/ void Update();
    /*0x130da74*/ void SetVisitMenus();
    /*0x1312794*/ void OnClickLike();
    /*0x1312918*/ void OnClickMyHome();
    /*0x13129a8*/ void <HandleDownEvent>b__34_1();
    /*0x1312ad4*/ void <HandleDownEvent>b__34_0();
    /*0x1312b18*/ void <OnClickLike>b__63_0();

    class <>c
    {
        static /*0x0*/ HousingEditWindow.<> <>9;
        static /*0x8*/ System.Action<HousingObjectBase> <>9__34_2;
        static /*0x10*/ System.Action<HousingObjectBase> <>9__34_3;
        static /*0x18*/ System.Action<int> <>9__38_0;
        static /*0x20*/ System.Action <>9__47_1;
        static /*0x28*/ System.Action <>9__47_0;

        static /*0x10647d4*/ <>c();
        /*0x1064834*/ <>c();
        /*0x106483c*/ void <HandleDownEvent>b__34_2(HousingObjectBase selectObject);
        /*0x1064858*/ void <HandleDownEvent>b__34_3(HousingObjectBase selectObject);
        /*0x1064874*/ void <HandleScrollContent>b__38_0(int floor);
        /*0x1064a34*/ void <OnClickRandom>b__47_0();
        /*0x1064b7c*/ void <OnClickRandom>b__47_1();
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ HousingEditWindow <>4__this;
        /*0x18*/ TableData.TableData_Furniture data;
        /*0x20*/ string targetKey;

        /*0x1064c74*/ <>c__DisplayClass48_0();
        /*0x1064c7c*/ void <OnClickStorage>b__0();
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ bool isDone;
        /*0x18*/ UnityEngine.Texture2D texture2D;

        /*0x1064d5c*/ <>c__DisplayClass51_0();
        /*0x1064d64*/ void <CoShareCam>b__0(UnityEngine.Texture2D output);
        /*0x1064e20*/ bool <CoShareCam>b__1();
    }

    class <CoShareCam>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingEditWindow <>4__this;
        /*0x28*/ HousingEditWindow.<> <>8__1;
        /*0x30*/ float <t>5__2;
        /*0x34*/ UnityEngine.Vector3 <oldPosition>5__3;
        /*0x40*/ UnityEngine.Rect <captureRect>5__4;

        /*0x1064e28*/ <CoShareCam>d__51(int <>1__state);
        /*0x1064e54*/ void System.IDisposable.Dispose();
        /*0x1064e58*/ bool MoveNext();
        /*0x1065580*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1065588*/ void System.Collections.IEnumerator.Reset();
        /*0x10655c8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingEffectDetailEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingInfoSlot m_housingInfoSlot;
    /*0x20*/ LocalizeString m_floor;
    /*0x28*/ LocalizeString m_effect;
    /*0x30*/ AtlasImage[] m_levels;
    /*0x38*/ PTShare.Define.SHousingObj m_data;

    /*0x13131d4*/ HousingEffectDetailEntity();
    /*0x1312b1c*/ void InitEntity(PTShare.Define.SHousingObj source);
    /*0x1312dec*/ void SetLv(int tableId, int lv);
    /*0x131307c*/ void OnClick();
}

class HousingEffectDetailPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingEffectDetailEntity m_scrollContent;
    /*0x48*/ ScrollContent_HousingFloorButton m_floorButtonScrollContent;
    /*0x50*/ int m_checkFloor;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_objList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_showList;

    /*0x1313d74*/ HousingEffectDetailPopup();
    /*0x13131dc*/ void OnCreate();
    /*0x13131e0*/ void OnDelete();
    /*0x13131e4*/ void OnEnter();
    /*0x13131e8*/ void OnFinish();
    /*0x13131ec*/ void OnLeave();
    /*0x13131f0*/ void OnStart();
    /*0x13131f4*/ void OnExit();
    /*0x1313270*/ void InitPopup();
    /*0x1313464*/ void SetData();
    /*0x1313738*/ void UpdatePage();
    /*0x13132fc*/ void BindEvent();
    /*0x13138b4*/ void RemoveEvent();
    /*0x1313a14*/ void HandleScrollContent(int index, HousingEffectDetailEntity obj);
    /*0x1313a94*/ void HandleScrollContentFloorButton(int index, HousingFloorButton obj);
    /*0x1313cec*/ void OnClickChangeFloor(int floor);

    class <>c
    {
        static /*0x0*/ HousingEffectDetailPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SHousingObj> <>9__13_0;

        static /*0x10655d0*/ <>c();
        /*0x1065630*/ <>c();
        /*0x1065638*/ int <SetData>b__13_0(PTShare.Define.SHousingObj lhs, PTShare.Define.SHousingObj rhs);
    }
}

class HousingEffectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LimitAtlasImage m_icon;
    /*0x20*/ UnityEngine.GameObject m_maxBadge;
    /*0x28*/ LocalizeString m_info;

    /*0x131471c*/ HousingEffectEntity();
    /*0x1313e0c*/ void InitEntity(TableData.TableData_Furnitureeffecttype tableData);
    /*0x13142b8*/ void InitEntity(PTShare.Define.SHousingEffect data);
    /*0x1314430*/ void InitEntity(HousingEffectIngame data);
    /*0x1314068*/ void SetIcon(string atlasType, string key);
    /*0x1314168*/ void SetInfo(string key, string[] param);
    /*0x1314214*/ void SetBadge(bool enable);
}

class HousingEffectNotify : HousingNotifyBase
{
    /*0x38*/ ParticleBase[] m_particles;
    /*0x40*/ Spine.Unity.SkeletonGraphic[] m_effects;
    /*0x48*/ HousingEffectNotify.EFFECT_TYPE m_effectType;
    /*0x50*/ HousingObjectBase m_housingObject;
    /*0x58*/ bool m_isEnd;
    /*0x60*/ System.Action<HousingObjectBase> m_completeCallBack;

    /*0x1314c40*/ HousingEffectNotify();
    /*0x1310670*/ void InitNotify(HousingObjectBase housingObject, HousingEffectNotify.EFFECT_TYPE effectType, System.Action<HousingObjectBase> completeCallBack);
    /*0x1314a18*/ void UpdateNotify();
    /*0x1314804*/ void EnableEffects(bool enable);
    /*0x131494c*/ void PlayEffects();
    /*0x1314b68*/ void EndNotify();
    /*0x13148e0*/ System.Collections.IEnumerator CoWasteClean();

    enum EFFECT_TYPE
    {
        WASTE_CLEAN = 0,
        LEVEL_UP = 1,
    }

    class <CoWasteClean>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingEffectNotify <>4__this;

        /*0x1065798*/ <CoWasteClean>d__12(int <>1__state);
        /*0x10657c4*/ void System.IDisposable.Dispose();
        /*0x10657c8*/ bool MoveNext();
        /*0x1065978*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1065980*/ void System.Collections.IEnumerator.Reset();
        /*0x10659c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingEffectPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingEffectEntity m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> m_effectList;
    /*0x50*/ System.Collections.Generic.List<HousingEffectIngame> m_ingameEffectList;

    /*0x1315194*/ HousingEffectPopup();
    /*0x1314c48*/ void OnCreate();
    /*0x1314c4c*/ void OnDelete();
    /*0x1314c50*/ void OnEnter();
    /*0x1314c54*/ void OnFinish();
    /*0x1314c58*/ void OnLeave();
    /*0x1314c5c*/ void OnStart();
    /*0x1314c60*/ void OnExit();
    /*0x1314cdc*/ void InitPopup();
    /*0x1314e08*/ void BindEvent();
    /*0x1314ee4*/ void RemoveEvent();
    /*0x1314fb8*/ void HandleScrollContent(int index, HousingEffectEntity obj);
    /*0x1315098*/ void OnClickLimit();
    /*0x1315118*/ void OnClickDetail();
}

class HousingField : UnityEngine.MonoBehaviour
{
    static /*0x0*/ UnityEngine.Vector3 OFFSET;
    /*0x18*/ UnityEngine.UI.Image[] m_wallImages;
    /*0x20*/ HousingTileSpace m_spaceBase;
    /*0x28*/ HousingTile m_tileBase;
    /*0x30*/ int m_spaceCountX;
    /*0x34*/ int m_spaceCountY;
    /*0x38*/ int m_placementCount;
    /*0x40*/ UnityEngine.GameObject m_tileParent;
    /*0x48*/ UnityEngine.CanvasGroup m_groundParent;
    /*0x50*/ UnityEngine.CanvasGroup m_spaceParent;
    /*0x58*/ UnityEngine.GameObject m_wallParent;
    /*0x60*/ UnityEngine.CanvasGroup m_wallSpaceLeft;
    /*0x68*/ UnityEngine.CanvasGroup m_wallSpaceRight;
    /*0x70*/ UnityEngine.CanvasGroup m_backLayer;
    /*0x78*/ UnityEngine.CanvasGroup m_sortLayer;
    /*0x80*/ UnityEngine.GameObject m_mostFront;
    /*0x88*/ System.Collections.Generic.List<HousingCharacter> m_characterList;
    /*0x90*/ UnityEngine.UI.Extensions.UILineRenderer m_groundLine;
    /*0x98*/ System.Collections.Generic.List<HousingTileSpace> m_spaceList;
    /*0xa0*/ System.Collections.Generic.List<HousingTileSpace> m_groundList;
    /*0xa8*/ System.Collections.Generic.List<HousingTileSpace> m_wallLeftSpaceList;
    /*0xb0*/ System.Collections.Generic.List<HousingTileSpace> m_wallRightSpaceList;
    /*0xb8*/ HousingTile[] m_tiles;
    /*0xc0*/ UnityEngine.Coroutine m_updateCoroutine;

    static /*0x13189cc*/ HousingField();
    static /*0x13153fc*/ UnityEngine.Vector3 GetOffSet();
    /*0x13188c4*/ HousingField();
    /*0x1315464*/ System.Collections.Generic.List<HousingTileSpace> GetSpaceList();
    /*0x131546c*/ System.Collections.Generic.List<HousingTileSpace> GetGroundList();
    /*0x1315474*/ System.Collections.Generic.List<HousingTileSpace> GetWallLeftSpaceList();
    /*0x131547c*/ System.Collections.Generic.List<HousingTileSpace> GetWallRightSpaceList();
    /*0x1315484*/ void InitField();
    /*0x130e7ac*/ UnityEngine.Transform GetParent(DefineHousing.LAYER layer);
    /*0x130de44*/ void UpdateFloorObjects();
    /*0x1315a9c*/ void UpdateFloorCharacter();
    /*0x1311ebc*/ void UpdateTile(TableData.TableData_Housingfloorpattern patternData);
    /*0x1311fa4*/ void UpdateWall(TableData.TableData_Housingfloorpattern patternData);
    /*0x131644c*/ void Clear();
    /*0x1315e44*/ void SortLayer(int layer);
    /*0x13157b4*/ void BindEvent();
    /*0x1316450*/ void RemoveEvent();
    /*0x1316798*/ void HandleSort(int layer);
    /*0x131679c*/ void HandleState(int viewMode);
    /*0x131709c*/ void HandleFloorChange();
    /*0x13170a0*/ void HandleSweepEvent(int sweep);
    /*0x1317614*/ void Sweep(int sweep, UnityEngine.GameObject targetLayer, ref System.Collections.Generic.List<int> sweepList);
    /*0x1316de8*/ void SetNotifyImage(DefineHousing.LAYER layer, bool isShowGrid, UnityEngine.Color blockColor, System.Collections.Generic.List<HousingTileSpace> target);
    /*0x1316d48*/ void HideCanvasGroup(UnityEngine.CanvasGroup canvasGroup);
    /*0x1316d98*/ void ActiveCanvasGroup(UnityEngine.CanvasGroup canvasGroup);
    /*0x131672c*/ System.Collections.IEnumerator CoSortUpdate();
    /*0x131775c*/ void CreateTiles();
    /*0x13179bc*/ void CreateSpace();
    /*0x1317d44*/ void CreateGround();
    /*0x13180cc*/ void InitWallField();
    /*0x1318428*/ void ClearTile();
    /*0x1318520*/ void ClearSpace();
    /*0x131861c*/ void ClearWall();

    class <>c
    {
        static /*0x0*/ HousingField.<> <>9;
        static /*0x8*/ System.Action<HousingCharacter> <>9__32_0;
        static /*0x10*/ System.Action <>9__42_0;

        static /*0x10659c8*/ <>c();
        /*0x1065a28*/ <>c();
        /*0x1065a30*/ void <UpdateFloorCharacter>b__32_0(HousingCharacter d);
        /*0x1065a60*/ void <HandleSweepEvent>b__42_0();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ int frontValue;
        /*0x14*/ int backValue;

        /*0x1065ad8*/ <>c__DisplayClass36_0();
        /*0x1065ae0*/ int <SortLayer>b__0(System.ValueTuple<UnityEngine.GameObject, UnityEngine.Vector3> lhs, System.ValueTuple<UnityEngine.GameObject, UnityEngine.Vector3> rhs);
    }

    class <CoSortUpdate>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingField <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0x1065b9c*/ <CoSortUpdate>d__47(int <>1__state);
        /*0x1065bc8*/ void System.IDisposable.Dispose();
        /*0x1065bcc*/ bool MoveNext();
        /*0x1065c80*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1065c88*/ void System.Collections.IEnumerator.Reset();
        /*0x1065cc8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1065b2c*/ <>c__DisplayClass49_0();
        /*0x1065b34*/ bool <CreateSpace>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1065b64*/ <>c__DisplayClass50_0();
        /*0x1065b6c*/ bool <CreateGround>b__0(HousingTileSpace d);
    }
}

class HousingFloorButton : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x18*/ UnityEngine.GameObject m_selectObject;
    /*0x20*/ UnityEngine.GameObject m_openObject;
    /*0x28*/ UnityEngine.GameObject m_lockObject;
    /*0x30*/ UnityEngine.GameObject m_processingObject;
    /*0x38*/ UnityEngine.GameObject m_processingIcon;
    /*0x40*/ LocalizeString[] m_floorTexts;
    /*0x48*/ UnityEngine.GameObject m_effect;
    /*0x50*/ int m_floor;
    /*0x58*/ System.Action<int> m_onClick;
    /*0x60*/ UnityEngine.Coroutine m_processing;

    static /*0x13195a8*/ HousingFloorButton();
    static /*0x1318e44*/ void OnChangeFunc(int floor);
    /*0x13195a0*/ HousingFloorButton();
    /*0x1318a24*/ void OnEnable();
    /*0x1318ba8*/ void OnDisable();
    /*0x1310c20*/ void InitButton(int floor, System.Action<int> onClick);
    /*0x1313bd4*/ void InitButton(int floor, UnityEngine.Color floorColor, bool showEffect, System.Action<int> onClick);
    /*0x1318d24*/ void ClearParent();
    /*0x1318dc0*/ System.Collections.IEnumerator CoUpdateProcessing(System.DateTime startTime);
    /*0x1318a28*/ void BindEvent();
    /*0x1318bac*/ void RemoveEvent();
    /*0x1318e38*/ void HandleUpdate();
    /*0x1319540*/ void OnClickButton();

    class <CoUpdateProcessing>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingFloorButton <>4__this;
        /*0x28*/ System.DateTime startTime;
        /*0x30*/ double <lefttime>5__2;

        /*0x1065ec8*/ <CoUpdateProcessing>d__16(int <>1__state);
        /*0x1065ef4*/ void System.IDisposable.Dispose();
        /*0x1065ef8*/ bool MoveNext();
        /*0x10660d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10660d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1066118*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int floor;
        /*0x18*/ System.Action <>9__2;

        /*0x1065cd0*/ <>c__DisplayClass20_0();
        /*0x1065cd8*/ void <OnChangeFunc>b__0();
        /*0x1065db8*/ void <OnChangeFunc>b__2();
        /*0x1065e40*/ void <OnChangeFunc>b__1();
    }
}

class HousingFloorOpenPopup : GuiBase
{
    /*0x40*/ LocalizeString m_floorText;
    /*0x48*/ AmountSlot[] m_requires;
    /*0x50*/ AmountSlot m_fastOpen;
    /*0x58*/ LocalizeString m_openBenefit;
    /*0x60*/ LocalizeString m_openTime;
    /*0x68*/ TableData.TableData_Housingfloor m_tableData;

    /*0x1319b08*/ HousingFloorOpenPopup();
    /*0x13195ac*/ void OnCreate();
    /*0x13195b0*/ void OnEnter();
    /*0x13195b4*/ void OnStart();
    /*0x13195b8*/ void OnFinish();
    /*0x13195bc*/ void OnLeave();
    /*0x13195c0*/ void OnDelete();
    /*0x13195c4*/ void OnExit();
    /*0x1319138*/ void InitPopup(int floor);
    /*0x1319640*/ void OnClickOpen();
    /*0x1319794*/ void OnClickFastOpen();
    /*0x1319b10*/ void <OnClickOpen>b__14_0();
    /*0x1319b1c*/ void <OnClickFastOpen>b__15_0(bool _result);
    /*0x1319c20*/ void <OnClickFastOpen>b__15_1();
    /*0x1319cf4*/ void <OnClickFastOpen>b__15_2();
}

class HousingFloorProcessingPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString[] m_amounts;
    /*0x50*/ UnityEngine.GameObject m_starIcon;
    /*0x58*/ UnityEngine.GameObject m_amountText;
    /*0x60*/ LocalizeString m_openTime;
    /*0x68*/ UnityEngine.Coroutine m_update;
    /*0x70*/ double m_leftTime;
    /*0x78*/ int m_price;
    /*0x7c*/ bool m_isOpen;

    /*0x131a69c*/ HousingFloorProcessingPopup();
    /*0x1319fc4*/ void OnCreate();
    /*0x1319fc8*/ void OnDelete();
    /*0x1319fcc*/ void OnEnter();
    /*0x1319fd0*/ void OnFinish();
    /*0x1319fd4*/ void OnLeave();
    /*0x1319fd8*/ void OnStart();
    /*0x1319fdc*/ void OnExit();
    /*0x131a074*/ void InitPopup();
    /*0x131a19c*/ System.Collections.IEnumerator CoUpdate(System.DateTime startTime);
    /*0x131a214*/ void OnClick();

    class <CoUpdate>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingFloorProcessingPopup <>4__this;
        /*0x28*/ System.DateTime startTime;
        /*0x30*/ UnityEngine.WaitForSeconds <waitForSec>5__2;
        /*0x38*/ TableData.TableData_Housingfloor <table>5__3;
        /*0x40*/ System.DateTime <endtime>5__4;

        /*0x106654c*/ <CoUpdate>d__17(int <>1__state);
        /*0x1066578*/ void System.IDisposable.Dispose();
        /*0x106657c*/ bool MoveNext();
        /*0x1066d24*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1066d2c*/ void System.Collections.IEnumerator.Reset();
        /*0x1066d6c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ HousingFloorProcessingPopup <>4__this;
        /*0x18*/ int floor;
        /*0x20*/ System.Action <>9__2;
        /*0x28*/ System.Action <>9__4;
        /*0x30*/ System.Action <>9__3;

        /*0x1066120*/ <>c__DisplayClass18_0();
        /*0x1066128*/ void <OnClick>b__0();
        /*0x1066214*/ void <OnClick>b__2();
        /*0x10662b0*/ void <OnClick>b__1(bool _result);
        /*0x10663c4*/ void <OnClick>b__3();
        /*0x10664a4*/ void <OnClick>b__4();
    }
}

class HousingHeroSelectPopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotHousing m_scrollContent;
    /*0x48*/ LocalizeString m_heroCount;
    /*0x50*/ UnityEngine.UI.Dropdown m_dropDown;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SHero> m_heroList;
    /*0x60*/ bool m_dirty;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> m_oldList;

    /*0x131ca9c*/ HousingHeroSelectPopup();
    /*0x131ac0c*/ void OnCreate();
    /*0x131ac10*/ void OnEnter();
    /*0x131ac14*/ void OnStart();
    /*0x131ac18*/ void OnFinish();
    /*0x131ac1c*/ void OnLeave();
    /*0x131ae28*/ void OnDelete();
    /*0x131ae2c*/ void OnExit();
    /*0x131b49c*/ void InitPopup();
    /*0x131bfd4*/ void UpdateUI();
    /*0x131bcfc*/ void UpdatePage();
    /*0x131bb2c*/ void SetPacketData();
    /*0x131aec0*/ void UpdateData(bool updateData);
    /*0x131b91c*/ void BindEvent();
    /*0x131ac20*/ void RemoveEvent();
    /*0x131c1e8*/ void HandleOnChangeFloor(int floor);
    /*0x131c368*/ void HandleScrollContent(int index, HeroSlotHousing obj);
    /*0x131c534*/ void HandleScrollContentFloorButton(int index, HousingFloorButton obj);
    /*0x131c5e0*/ void HandleOnFloorChange();
    /*0x131c5e4*/ void HandleOnClickHero(PTShare.Define.SHero sHero);
    /*0x131cb54*/ void <HandleScrollContentFloorButton>b__22_0(int floor);
    /*0x131cbcc*/ void <HandleOnClickHero>b__24_1();
    /*0x131cbd0*/ void <HandleOnClickHero>b__24_0();

    class <>c__DisplayClass13_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitbase> heroList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SHero> <>9__1;

        /*0x1066e54*/ <>c__DisplayClass13_0();
        /*0x1066e5c*/ bool <InitPopup>b__1(PTShare.Define.SHero d);
    }

    class <>c
    {
        static /*0x0*/ HousingHeroSelectPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SHero> <>9__13_2;
        static /*0x10*/ System.Comparison<PTShare.Define.SHero> <>9__13_0;

        static /*0x1066d74*/ <>c();
        /*0x1066dd4*/ <>c();
        /*0x1066ddc*/ int <InitPopup>b__13_2(PTShare.Define.SHero lhs, PTShare.Define.SHero rhs);
        /*0x1066e18*/ int <InitPopup>b__13_0(PTShare.Define.SHero lhs, PTShare.Define.SHero rhs);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ int floor;
        /*0x14*/ int count;

        /*0x1066eec*/ <>c__DisplayClass14_0();
        /*0x1066ef4*/ void <UpdateUI>b__0(HousingHeroExpand f);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ System.Collections.Generic.List<HousingHeroExpand> targetList;
        /*0x18*/ bool updateData;
        /*0x20*/ HousingHeroSelectPopup <>4__this;

        /*0x1066f3c*/ <>c__DisplayClass17_0();
        /*0x1066f44*/ void <UpdateData>b__0();
    }

    class <>c__DisplayClass17_1
    {
        /*0x10*/ int i;
        /*0x18*/ HousingHeroSelectPopup.<> CS$<>8__locals1;

        /*0x1066f6c*/ <>c__DisplayClass17_1();
        /*0x1066f74*/ bool <UpdateData>b__1(PTShare.Define.SHousingHero d);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int floor;

        /*0x1067014*/ <>c__DisplayClass20_0();
        /*0x106701c*/ void <HandleOnChangeFloor>b__0();
    }
}

class HousingHistoryPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingVisitEntity m_scrollContent;
    /*0x48*/ LocalizeString m_totalLikeCount;
    /*0x50*/ LocalizeString m_currHeart;
    /*0x58*/ LocalizeString m_dailyHeart;
    /*0x60*/ UnityEngine.GameObject m_noHistory;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SVisitor> m_historyList;

    /*0x131d5b4*/ HousingHistoryPopup();
    /*0x131cbd4*/ void OnCreate();
    /*0x131cbd8*/ void OnDelete();
    /*0x131cbdc*/ void OnEnter();
    /*0x131cbe0*/ void OnExit();
    /*0x131ccb0*/ void OnFinish();
    /*0x131ccb4*/ void OnLeave();
    /*0x131ce04*/ void OnStart();
    /*0x131ce08*/ void InitPopup();
    /*0x131d07c*/ void BindEvent();
    /*0x131ccb8*/ void RemoveEvent();
    /*0x131d450*/ void HandleScrollContent(int index, HousingVisitEntity obj);
    /*0x131d1d0*/ void HandleRefreshPoint();
    /*0x131d4d4*/ void OnClickTakeAll();
    /*0x131d62c*/ void <OnClickTakeAll>b__18_0();

    class <>c
    {
        static /*0x0*/ HousingHistoryPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SVisitor> <>9__13_0;

        static /*0x10670a4*/ <>c();
        /*0x1067104*/ <>c();
        /*0x106710c*/ int <InitPopup>b__13_0(PTShare.Define.SVisitor lhs, PTShare.Define.SVisitor rhs);
    }
}

class HousingIconNotify : HousingNotifyBase
{
    /*0x38*/ LimitAtlasImage m_image;
    /*0x40*/ HousingObjectBase m_housingObject;

    /*0x131d7dc*/ HousingIconNotify();
    /*0x131d630*/ void InitNotify(HousingObjectBase housingObj, AtlasType atlasType, string icon);
    /*0x131d698*/ void UpdateNotify();
}

class HousingInfoPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_info;
    /*0x50*/ LocalizeString m_spaceText;
    /*0x58*/ LimitAtlasImage m_limitImage;
    /*0x60*/ LocalizeString m_currEffectText;
    /*0x68*/ AtlasImage[] m_levels;
    /*0x70*/ SingleTab m_lockTab;
    /*0x78*/ UnityEngine.GameObject m_effectNotice;
    /*0x80*/ UnityEngine.GameObject m_interactionNotice;
    /*0x88*/ UnityEngine.GameObject m_upgradeButton;
    /*0x90*/ AmountSlot m_sellButton;
    /*0x98*/ UnityEngine.GameObject m_collocateButton;
    /*0xa0*/ UnityEngine.GameObject m_sellText;
    /*0xa8*/ PTShare.Define.SHousingObj m_obj;
    /*0xb0*/ TableData.TableData_Furniture m_tableData;
    /*0xb8*/ int m_lv;
    /*0xbc*/ HousingInfoPopup.POPUP_TYPE m_popupType;
    /*0xc0*/ Rewards m_buyAmount;
    /*0x188*/ System.Action m_buyCallBack;

    /*0x131ea4c*/ HousingInfoPopup();
    /*0x131d7e4*/ void OnCreate();
    /*0x131d7e8*/ void OnDelete();
    /*0x131d7ec*/ void OnEnter();
    /*0x131d7f0*/ void OnExit();
    /*0x131d888*/ void OnFinish();
    /*0x131d88c*/ void OnLeave();
    /*0x131d890*/ void OnStart();
    /*0x1313104*/ void InitPopup(PTShare.Define.SHousingObj obj, HousingInfoPopup.POPUP_TYPE popupType);
    /*0x131df18*/ void InitPopupBuy(int tableId, Rewards amount, System.Action callBack);
    /*0x131d894*/ void InitPopup(int tableId, int lv, HousingInfoPopup.POPUP_TYPE popupType);
    /*0x131e30c*/ void SetSpace();
    /*0x131df64*/ void SetLevel();
    /*0x131e1e4*/ void SetEffectText();
    /*0x131e3fc*/ void HandleOnChangeLock(int value);
    /*0x131e4d0*/ void OnClickUpgrade();
    /*0x131e638*/ void OnClickSell();
    /*0x131e90c*/ void OnClickCollocate();
    /*0x131ea54*/ void <OnClickSell>b__35_0();

    enum POPUP_TYPE
    {
        NONE = 0,
        UPGRADE = 1,
        SELL = 2,
        BUY = 3,
    }
}

class HousingInfoSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ LimitAtlasImage m_image;
    /*0x20*/ AtlasImage m_bg;
    /*0x28*/ AtlasImage m_frame;
    /*0x30*/ LocalizeString m_name;
    /*0x38*/ LocalizeString m_amount;
    /*0x40*/ UnityEngine.GameObject[] m_levels;
    /*0x48*/ UnityEngine.GameObject m_effect;
    /*0x50*/ UnityEngine.GameObject m_interact;
    /*0x58*/ HousingObjSet m_housingObjSet;
    /*0x60*/ TableData.TableData_Furniture m_tableData;
    /*0x68*/ System.Action<int> m_onClick;

    /*0x131f854*/ HousingInfoSlot();
    /*0x131ec60*/ void InitSlot(HousingObjSet housingObjSet, System.Action<int> onClick);
    /*0x1312d5c*/ void InitSlot(PTShare.Define.SHousingObj housingObj, System.Action<int> onClick);
    /*0x131ecf4*/ void InitSlot(int tableId, System.Action<int> onClick);
    /*0x131ed2c*/ void InitCP(long cp);
    /*0x131eca0*/ void ClearData();
    /*0x131eca8*/ void UpdateUI();
    /*0x131f31c*/ void SetImage();
    /*0x131f1e4*/ void SetBG();
    /*0x131f41c*/ void SetName();
    /*0x131effc*/ void SetLevel();
    /*0x131f0c4*/ void SetAmount();
    /*0x131f564*/ void SetNotice();
    /*0x131f6b0*/ void SetFrame();
    /*0x131f7e8*/ void OnClick();
}

class HousingLimitEffectPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingEffectEntity m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> m_dataList;

    /*0x124de40*/ HousingLimitEffectPopup();
    /*0x124daa0*/ void OnCreate();
    /*0x124daa4*/ void OnDelete();
    /*0x124daa8*/ void OnEnter();
    /*0x124daac*/ void OnFinish();
    /*0x124dab0*/ void OnLeave();
    /*0x124dab4*/ void OnStart();
    /*0x124dab8*/ void OnExit();
    /*0x124db34*/ void InitPopup();
    /*0x124dc0c*/ void BindEvent();
    /*0x124dce8*/ void RemoveEvent();
    /*0x124ddbc*/ void HandleScrollContent(int index, HousingEffectEntity obj);
}

class HousingManager : Singleton.Data.SingletonData<HousingManager>
{
    static /*0x0*/ System.Action<int> OnSort;
    static /*0x8*/ System.Action<int> OnChangeState;
    static /*0x10*/ System.Action<int> OnSweepEvent;
    static /*0x18*/ System.Action OnSweepEventEnd;
    static /*0x20*/ System.Action OnFloorChange;
    static /*0x28*/ System.Action OnCharacterRefresh;
    static /*0x30*/ System.Action<DefineHousing.SELECT_TYPE, int> OnClickFurniture;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<HousingTileSpace>> m_spaceDic;
    /*0x28*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<UnityEngine.Vector2Int>> m_blockSpaceDic;
    /*0x30*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<UnityEngine.Vector2Int>> m_objectCenterDic;
    /*0x38*/ System.Collections.Generic.Dictionary<int, UnityEngine.Transform> m_layerDic;
    /*0x40*/ UnityEngine.GameObject m_camera;
    /*0x48*/ UnityEngine.RectTransform m_cameraRect;
    /*0x50*/ int m_state;
    /*0x54*/ int m_floor;
    /*0x58*/ System.DateTime m_floorOpenTime;
    /*0x60*/ HousingObjectBase m_editSelectObject;
    /*0x68*/ DefineHousing.SELECT_TYPE m_editSelectType;
    /*0x6c*/ int m_housingOpenFloor;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_housingObjs;
    /*0x78*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> m_housingWastes;
    /*0x80*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> m_housingHeroes;
    /*0x88*/ int m_todayLikeSend;
    /*0x8c*/ int m_todayLikeRecv;
    /*0x90*/ long m_accLikeRecv;
    /*0x98*/ bool m_newlike;
    /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SVisitor> m_historyList;
    /*0xa8*/ ServerProtocol.ResHousingVisit m_visitData;
    /*0xb0*/ long m_visitLikeCount;
    /*0xb8*/ DefineHousing.HOUSING_TYPE m_housingType;
    /*0xbc*/ DefineHousing.VISIT_TYPE m_visitType;
    /*0xc0*/ ServerProtocol.ResHousingSaveList m_saveData;
    /*0xc8*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_loadData;
    /*0xd0*/ bool m_loadFailed;
    /*0xd8*/ System.Collections.Generic.List<int> m_loadFailedList;
    /*0xe0*/ bool m_loadSaveData;
    /*0xe8*/ System.Collections.Generic.List<HousingObjSet> m_housingObjectSetList;
    /*0xf0*/ System.Collections.Generic.List<HousingNotifyBase> m_housingNotifyList;
    /*0xf8*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> m_housingEffect;
    /*0x100*/ System.Collections.Generic.List<HousingEffectIngame> m_housingIngameEffect;
    /*0x108*/ System.Collections.Generic.List<int> m_furnitureShopGroupList;
    /*0x110*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<System.DateTime, System.DateTime>> m_furnitureShopTimeDic;
    /*0x118*/ System.Collections.Generic.List<PTShare.Define.SHousingGoods> m_purchaseDataList;
    /*0x120*/ int m_buyItemIndex;
    /*0x124*/ int m_gachaGroupId;
    /*0x128*/ System.DateTime m_gachaEndTime;

    static /*0x1259378*/ HousingManager();
    /*0x1258f20*/ HousingManager();
    /*0x124deb8*/ bool InitInstance();
    /*0x124dff4*/ void ReleaseInstance();
    /*0x124e0fc*/ void SetData(ServerProtocol.ResAccountFirst response);
    /*0x124eafc*/ void Send_Enter(System.Action callBack);
    /*0x124ec94*/ void Send_OpenStart(int floor, System.Action callBack);
    /*0x124ee30*/ void Send_OpenEnd(int floor, System.Action callBack);
    /*0x124efcc*/ void Send_FastOpen(int floor, System.Action callBack);
    /*0x124f168*/ void Send_Update(string sets, string unsets, System.Action callBack);
    /*0x124f31c*/ void Send_UpdateHero(string set, string unset, System.Action callBack);
    /*0x124f4c0*/ void Send_HousingCleanStart(int floor, int wasteid, System.Action callBack);
    /*0x124f664*/ void Send_HousingCleanEnd(int floor, int wasteid, bool fast, System.Action callBack);
    /*0x124f818*/ void Send_HousingUpgradeStart(int objId, string feedings, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x124f9bc*/ void Send_HousingUpgradeComplete(int objId, bool fast, System.Action callBack);
    /*0x124fb60*/ void Send_BuyAndCollocate(int index, int layer, UnityEngine.Vector2Int centerPoint, bool isReverse, int unsetId, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x124feec*/ void Send_BuyAndCollocate_Pattern(int index, string furnitureType, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x1250260*/ void Send_Purchase(int index, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x1250410*/ void Send_Sell(int objId, System.Action callBack);
    /*0x12505c8*/ void Send_Dismiss(System.Collections.Generic.List<PTShare.Define.SHousingObj> dissmissList, System.Action callBack);
    /*0x1250890*/ void Send_HousingBuy(int groupId, int priceType, System.Action<System.Collections.Generic.List<PTShare.Define.SMiniHousingObj>> callBack);
    /*0x1250a34*/ void Send_History(System.Action callBack);
    /*0x1250bc0*/ void Send_Visit(long playerId, int floor, DefineHousing.VISIT_TYPE visitType, System.Action callBack);
    /*0x1250dc0*/ void Send_Visit(int floor, System.Action callBack);
    /*0x1250f90*/ void Send_TakePoint(long friendId, int dayId, System.Action callBack);
    /*0x1251200*/ void Send_TakePointAll(System.Action callBack);
    /*0x12513e8*/ void Send_SendPoint(long playerId, System.Action callBack);
    /*0x1251584*/ void Send_SaveList(System.Action<ServerProtocol.ResHousingSaveList> callBack);
    /*0x1251740*/ void Send_Save(int slot, string thumb, System.Action<ServerProtocol.ResHousingSave> callBack);
    /*0x1251900*/ void Send_SaveName(int slot, string name, System.Action callBack);
    /*0x1251ab4*/ void Send_Delete(int slot, System.Action callBack);
    /*0x1251c5c*/ void Send_HousingObjectLock(int housingObjId, bool locking, System.Action callBack);
    /*0x1251e00*/ void Send_HousingHeroAdd(int tableId, System.Action callBack);
    /*0x1251ebc*/ void Send_HousingHeroRemove(int tableId, System.Action callBack);
    /*0x124dee4*/ void InitData();
    /*0x1252464*/ void IncreaseHousingObject(System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> source);
    /*0x12525c0*/ void IncreaseHousingObject(System.Collections.Generic.List<PTShare.Define.SHousingObj> source);
    /*0x124e200*/ void UpdateWaste();
    /*0x124e600*/ void UpdateObjectSetList();
    /*0x125262c*/ PTShare.Define.SHousingObj CreateWasteData(PTShare.Define.SHousingWaste waste, int trashIndex);
    /*0x124e17c*/ void SetHousingEffect(System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingEffect);
    /*0x12527b0*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> GetEffectList();
    /*0x12527b8*/ int GetEffect_ValueInt(PTShare.Define.ContentEffectType effectType);
    /*0x1252994*/ int GetEffect_Value(PTShare.Define.ContentEffectType effectType);
    /*0x1252ac4*/ float GetEffect_ValuePercent(PTShare.Define.ContentEffectType effectType);
    /*0x12528e0*/ int GetEffect_MaxValue(PTShare.Define.ContentEffectType effectType);
    /*0x1252af4*/ TableData.TableData_Furnitureeffecttype GetEffect_MaxTableData(PTShare.Define.ContentEffectType effectType);
    /*0x1252b84*/ System.Collections.Generic.List<HousingEffectIngame> GetIngameEffectList();
    /*0x1252f2c*/ TableData.TableData_Furnitureeffecttype GetEffect_MaxTableData(string effectType);
    /*0x1252f58*/ TableData.TableData_Furnitureeffecttype GetEffect_MaxTableData(int lv, string effectLevelType);
    /*0x125307c*/ void UpdateHousingEffect(string housingGroup, System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingEffect);
    /*0x1253128*/ string GetFurnitureEffectLocalize(int lv, string effectLevelType);
    /*0x1252f78*/ TableData.TableData_Furnitureleveltypelist FindFurnitureLevelType(int lv, string effectLevelType);
    /*0x12534e0*/ float EffectValueConvetByEffectId(int heroEffectId, float value);
    /*0x1253418*/ float EffectValueConvetByShowType(string statType, float value);
    /*0x1253544*/ void ExitEditMode();
    /*0x125368c*/ void SweepEvent(DefineHousing.SWEEP[] sweeps);
    /*0x1253794*/ bool IsSweepTarget(int sweep, DefineHousing.SWEEP check);
    /*0x12537a0*/ void ChangeState(bool callChange, DefineHousing.HOUSING_STATE[] states);
    /*0x12538f0*/ bool CheckState(int state, DefineHousing.HOUSING_STATE[] targets);
    /*0x1253954*/ bool IsState(DefineHousing.HOUSING_STATE state);
    /*0x1253964*/ bool IsStates(DefineHousing.HOUSING_STATE[] states);
    /*0x12539cc*/ void AddState(bool callChange, DefineHousing.HOUSING_STATE[] states);
    /*0x12535c4*/ void RemoveState(bool callChange, DefineHousing.HOUSING_STATE[] states);
    /*0x125384c*/ void CallChangeState(DefineHousing.HOUSING_STATE type, int value);
    /*0x12537e4*/ int ConvertStateToValue(DefineHousing.HOUSING_STATE[] states);
    /*0x125372c*/ int ConvertSweepToValue(DefineHousing.SWEEP[] sweeps);
    /*0x124dee8*/ void BindEvent();
    /*0x124dff8*/ void RemoveEvent();
    /*0x1253ac4*/ void HandleOnClickFurniture(DefineHousing.SELECT_TYPE selectType, int id);
    /*0x1253ad4*/ System.ValueTuple<bool, string, string> GetLoadUpdateData(int slot);
    /*0x125479c*/ void DeploymentFailedLoad(int id);
    /*0x1254808*/ void JoinLoadMode(int slot);
    /*0x1254dd8*/ void ExitLoadMode();
    /*0x1254de0*/ int GetFloorWorkCount();
    /*0x1254ef0*/ int GetFloorHeroCount();
    /*0x1255328*/ bool IsWorkFloor();
    /*0x125535c*/ System.Collections.Generic.List<HousingNotifyBase> GetNotifyList();
    T FindFollowNotify<T, T2>(T2 follow);
    T CreateNotify<T>(string name);
    /*0x1255364*/ void RemoveNotify(HousingNotifyBase remove);
    /*0x1255410*/ void ClearNotifys();
    /*0x1255560*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> GetWasteList();
    /*0x1255568*/ System.Collections.Generic.List<HousingObjSet> GetHousingObjectSetList();
    /*0x12501b8*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> GetHousingObjectList();
    /*0x1255590*/ PTShare.Define.SHousingWaste FindWaste(int floor, int id);
    /*0x1254644*/ PTShare.Define.SHousingObj FindHousingObj(int id);
    /*0x1255684*/ int GetUpgradeTime(int lv);
    /*0x12556a8*/ int GetFurnitureExp(int tableId, int lv, int exp);
    /*0x125589c*/ int GetFastFurnitureUpgradeAmount(int start, int end, System.DateTime endTime);
    /*0x1255a74*/ int GetFastWasteAmount(int floor, System.DateTime endTime);
    /*0x1255c1c*/ float GetDismissAdd(int tableId, int lv);
    /*0x1255c6c*/ System.Collections.Generic.List<HousingTileSpace> GetSpaceList(int layer);
    /*0x1255cd0*/ UnityEngine.GameObject GetCamera();
    /*0x1255cd8*/ UnityEngine.RectTransform GetCameraRect();
    /*0x1255ce0*/ HousingObjectBase GetEditSelectObject();
    /*0x1255ce8*/ DefineHousing.SELECT_TYPE GetSelectType();
    /*0x1255cf0*/ void SetSpaceList(int layer, System.Collections.Generic.List<HousingTileSpace> space);
    /*0x1255dfc*/ void SetLayer(int layer, UnityEngine.Transform parent);
    /*0x1255ea4*/ void SetCamera(UnityEngine.GameObject go);
    /*0x1253a18*/ void SetEditSelectObject(HousingObjectBase selectObject, DefineHousing.SELECT_TYPE selectType, bool isCancelOld);
    /*0x1256134*/ void AddPlaceObject(int layer, UnityEngine.Vector2Int centerPoint);
    /*0x1256260*/ void RemovePlaceObject(int layer, UnityEngine.Vector2Int centerPoint);
    /*0x1256328*/ bool CheckPlaceObject(int layer, System.Collections.Generic.List<UnityEngine.Vector2Int> pointList, UnityEngine.Vector2Int offset);
    /*0x1256690*/ bool BePlaceObject(int layer, UnityEngine.Vector2Int centerPoint);
    /*0x1256538*/ HousingTileSpace FindSpace(int layer, UnityEngine.Vector2Int point);
    /*0x125675c*/ UnityEngine.Transform FindLayer(int layer);
    /*0x12567f8*/ DefineHousing.LAYER ConvertLayer(string type);
    /*0x1256900*/ bool LayerIsWall(DefineHousing.LAYER layer);
    /*0x1256910*/ void AddBlock(int layer, UnityEngine.Vector2Int point);
    /*0x1256a8c*/ void RemoveBlock(int layer, UnityEngine.Vector2Int point);
    /*0x125646c*/ bool IsBlock(int layer, UnityEngine.Vector2Int point);
    /*0x1256b90*/ bool IsBlock_Empty(int layer, UnityEngine.Vector2Int point);
    /*0x1254ff4*/ System.Collections.Generic.List<HousingHeroExpand> GetHousingHeroListExpand();
    /*0x1256cbc*/ PTShare.Define.SHousingHero FindHousingHero(int tableId);
    /*0x1256df8*/ int GetFloor();
    /*0x1256e00*/ int GetFloorFurnitureCount();
    /*0x1257000*/ void ChangeFloor(int floor);
    /*0x1254d38*/ void ChangeFloorNotChecked(int floor);
    /*0x1257110*/ bool IsOpenFloor(int floor);
    /*0x125714c*/ int GetNextOpenFloor();
    /*0x1257158*/ System.ValueTuple<bool, System.DateTime> GetFloorOpenData();
    /*0x1257218*/ int GetOpenFloor();
    /*0x1257220*/ int GetFloorPlaceAllFurnitureCount();
    /*0x1257350*/ int GetPlaceEffectFurnitureCount();
    /*0x1257480*/ int GetPlaceEffectFurnitureCount(int tableId);
    /*0x1254484*/ System.Collections.Generic.List<int> GetPlaceEffectFurnitureList();
    /*0x1254734*/ int GetLimitEffectFurnitureMaxCount();
    /*0x125756c*/ System.Collections.Generic.List<PTShare.Define.SVisitor> GetHistoryList();
    /*0x1257574*/ ServerProtocol.ResHousingVisit GetVisit();
    /*0x125757c*/ DefineHousing.VISIT_TYPE GetVisitType();
    /*0x1257584*/ long GetTotalLikeCount();
    /*0x125758c*/ long GetVisitTotalLikeCount();
    /*0x1257594*/ int GetLeftSendLikeCount();
    /*0x1255570*/ bool IsVisit();
    /*0x12575f4*/ void SetVisitTotalLikeCount(long count);
    /*0x12575fc*/ void ExitVisit();
    /*0x1257608*/ void ExitVisitPopup();
    /*0x125119c*/ bool IsTakeDailyLike();
    /*0x1257848*/ int GetTodayLikeRecvCount();
    /*0x1257850*/ bool IsMaxLevelFurniture(int tableId, int lv);
    /*0x12579f0*/ int GetMaxLevelFurniture(int tableId);
    /*0x1257b80*/ bool IsNormalMode();
    /*0x1255580*/ bool IsLoadMode();
    /*0x1257b90*/ UnityEngine.Vector2Int ConvertPoint(UnityEngine.Vector2Int point, ARROW arrow);
    /*0x1257be8*/ bool IsDismissTarget(string grade);
    /*0x1257d10*/ System.DateTime ConvertEndTime(PTShare.Define.SHousingObj obj, TableData.TableData_Furniture table);
    /*0x1257f20*/ System.TimeSpan GetUpgradeTimeByNextLv(PTShare.Define.SHousingObj obj, TableData.TableData_Furniture table);
    /*0x1257eac*/ int GetWasteClearTime(bool effectable);
    /*0x12580a8*/ HousingObjectBase GetPoolObjectBase(string path);
    /*0x1258154*/ void UpdateDailyChange();
    /*0x1258178*/ string GetFurnitureIcon(string imagekey, bool isBig);
    /*0x1258208*/ string GetFurnitureShopIconKey(string imagekey, bool isBig);
    /*0x1258298*/ void SetLikeReddot(bool enable);
    /*0x12582a4*/ bool IsShowLikeReddot();
    /*0x12570ac*/ void ClearFloorData();
    /*0x12582f0*/ void ReleaseData();
    /*0x1258408*/ int GetCurrSelectItemIndex();
    /*0x1258410*/ System.Collections.Generic.List<int> GetSellGroupList();
    /*0x1258418*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> GetSellList(bool isUpdate);
    /*0x1258628*/ bool IsPossiblePriceCount();
    /*0x1251ff4*/ void UpdateShopData();
    /*0x1258730*/ int GetLeftPurchaseCount(int index);
    /*0x1258798*/ int GetPurchaseCount(int index);
    /*0x1258894*/ void AddPuchaseCount(int index);
    /*0x12589fc*/ DefineHousing.PURCHASE_STATE CheckLimitPurchase(int index);
    /*0x1258b24*/ System.ValueTuple<string, int, long, Rewards> GetShopPrice(int index);
    /*0x1258eac*/ System.ValueTuple<System.DateTime, System.DateTime> GetShopTime(int groudId);
    /*0x1258f10*/ int GetGachaId();
    /*0x1258f18*/ System.DateTime GetLeftGachaGroupExpireDay();
    /*0x125937c*/ void <UpdateObjectSetList>b__67_2(HousingObjSet d);
    /*0x1252ba8*/ void <GetIngameEffectList>g__UpdateIngameEffect|78_0();
    /*0x12593e0*/ void <ExitVisitPopup>b__175_0();

    class <>c__DisplayClass3_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x106972c*/ <>c__DisplayClass3_0();
        /*0x1069734*/ void <Send_Enter>b__0(ServerProtocol.ResHousingEnter response);
    }

    class <>c__DisplayClass4_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069814*/ <>c__DisplayClass4_0();
        /*0x106981c*/ void <Send_OpenStart>b__0(ServerProtocol.ResHousingOpenStart response);
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10699e8*/ <>c__DisplayClass5_0();
        /*0x10699f0*/ void <Send_OpenEnd>b__0(ServerProtocol.ResHousingOpenEnd response);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069ad4*/ <>c__DisplayClass6_0();
        /*0x1069adc*/ void <Send_FastOpen>b__0(ServerProtocol.ResHousingFastOpen response);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069cfc*/ <>c__DisplayClass7_0();
        /*0x1069d04*/ void <Send_Update>b__0(ServerProtocol.ResHousingUpdate response);
    }

    class <>c__DisplayClass7_1
    {
        /*0x10*/ ServerProtocol.ResHousingUpdate response;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SHousingObj> <>9__1;

        /*0x106a02c*/ <>c__DisplayClass7_1();
        /*0x106a034*/ bool <Send_Update>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x106a0f8*/ <>c__DisplayClass8_0();
        /*0x106a100*/ void <Send_UpdateHero>b__0(ServerProtocol.ResHousingUpdateDeck response);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action<PTShare.Define.SHousingWaste> <>9__1;

        /*0x106a13c*/ <>c__DisplayClass9_0();
        /*0x106a144*/ void <Send_HousingCleanStart>b__0(ServerProtocol.ResHousingClearStart response);
        /*0x106a2fc*/ void <Send_HousingCleanStart>b__1(PTShare.Define.SHousingWaste d);
    }

    class <>c__DisplayClass9_1
    {
        /*0x10*/ PTShare.Define.SHousingWaste d;

        /*0x106a40c*/ <>c__DisplayClass9_1();
        /*0x106a414*/ bool <Send_HousingCleanStart>b__2(PTShare.Define.SHousingWaste f);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10675b8*/ <>c__DisplayClass10_0();
        /*0x10675c0*/ void <Send_HousingCleanEnd>b__0(ServerProtocol.ResHousingClearEnd response);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHousingObj> callBack;

        /*0x1067844*/ <>c__DisplayClass11_0();
        /*0x106784c*/ void <Send_HousingUpgradeStart>b__0(ServerProtocol.ResHousingObjUpgrade response);
    }

    class <>c__DisplayClass11_1
    {
        /*0x10*/ ServerProtocol.ResHousingObjUpgrade response;

        /*0x10679f4*/ <>c__DisplayClass11_1();
        /*0x10679fc*/ bool <Send_HousingUpgradeStart>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1067aa4*/ <>c__DisplayClass12_0();
        /*0x1067aac*/ void <Send_HousingUpgradeComplete>b__0(ServerProtocol.ResHousingObjComplete response);
    }

    class <>c__DisplayClass12_1
    {
        /*0x10*/ ServerProtocol.ResHousingObjComplete response;

        /*0x1067d14*/ <>c__DisplayClass12_1();
        /*0x1067d1c*/ bool <Send_HousingUpgradeComplete>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int unsetId;
        /*0x1c*/ int index;
        /*0x20*/ System.Action<PTShare.Define.SHousingObj> callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingObj> <>9__1;

        /*0x1067d54*/ <>c__DisplayClass13_0();
        /*0x1067d5c*/ void <Send_BuyAndCollocate>b__0(ServerProtocol.ResHousingObjPurchase response);
        /*0x1067f9c*/ bool <Send_BuyAndCollocate>b__1(PTShare.Define.SHousingObj f);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action<PTShare.Define.SHousingObj> callBack;

        /*0x106803c*/ <>c__DisplayClass15_0();
        /*0x1068044*/ void <Send_Purchase>b__0(ServerProtocol.ResHousingObjPurchase response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int objId;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingObj> <>9__1;

        /*0x10682f0*/ <>c__DisplayClass16_0();
        /*0x10682f8*/ void <Send_Sell>b__0(ServerProtocol.ResHousingObjSell response);
        /*0x1068500*/ bool <Send_Sell>b__1(PTShare.Define.SHousingObj f);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068524*/ <>c__DisplayClass17_0();
        /*0x106852c*/ void <Send_Dismiss>b__0(ServerProtocol.ResHousingObjDismiss response);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action<System.Collections.Generic.List<PTShare.Define.SMiniHousingObj>> callBack;

        /*0x106869c*/ <>c__DisplayClass18_0();
        /*0x10686a4*/ void <Send_HousingBuy>b__0(ServerProtocol.ResHousingObjBuy response);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10688fc*/ <>c__DisplayClass19_0();
        /*0x1068904*/ void <Send_History>b__0(ServerProtocol.ResHousingHistory response);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ DefineHousing.VISIT_TYPE visitType;
        /*0x20*/ System.Action callBack;

        /*0x1068998*/ <>c__DisplayClass20_0();
        /*0x10689a0*/ void <Send_Visit>b__0(ServerProtocol.ResHousingVisit response);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068a08*/ <>c__DisplayClass21_0();
        /*0x1068a10*/ void <Send_Visit>b__0(ServerProtocol.ResHousingVisit response);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ long friendId;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SVisitor> <>9__1;

        /*0x1068a68*/ <>c__DisplayClass22_0();
        /*0x1068a70*/ void <Send_TakePoint>b__0(ServerProtocol.ResHousingTakePoint response);
        /*0x1068d00*/ bool <Send_TakePoint>b__1(PTShare.Define.SVisitor f);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068d24*/ <>c__DisplayClass23_0();
        /*0x1068d2c*/ void <Send_TakePointAll>b__0(ServerProtocol.ResHousingAllPoint response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068e9c*/ <>c__DisplayClass24_0();
        /*0x1068ea4*/ void <Send_SendPoint>b__0(ServerProtocol.ResHousingSendPoint response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResHousingSaveList> callBack;

        /*0x1068fe0*/ <>c__DisplayClass25_0();
        /*0x1068fe8*/ void <Send_SaveList>b__0(ServerProtocol.ResHousingSaveList response);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int slot;
        /*0x20*/ System.Action<ServerProtocol.ResHousingSave> callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingSave> <>9__1;

        /*0x1069078*/ <>c__DisplayClass26_0();
        /*0x1069080*/ void <Send_Save>b__0(ServerProtocol.ResHousingSave response);
        /*0x10692d0*/ bool <Send_Save>b__1(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int slot;
        /*0x20*/ string name;
        /*0x28*/ System.Action callBack;
        /*0x30*/ System.Predicate<PTShare.Define.SHousingSave> <>9__1;

        /*0x10692f4*/ <>c__DisplayClass27_0();
        /*0x10692fc*/ void <Send_SaveName>b__0(ServerProtocol.ResHousingSaveName response);
        /*0x1069400*/ bool <Send_SaveName>b__1(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int slot;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingSave> <>9__1;

        /*0x1069424*/ <>c__DisplayClass28_0();
        /*0x106942c*/ void <Send_Delete>b__0(ServerProtocol.ResHousingDelete response);
        /*0x1069560*/ bool <Send_Delete>b__1(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069584*/ <>c__DisplayClass29_0();
        /*0x106958c*/ void <Send_HousingObjectLock>b__0(ServerProtocol.ResHousingObjLock response);
    }

    class <>c__DisplayClass29_1
    {
        /*0x10*/ ServerProtocol.ResHousingObjLock response;

        /*0x10696c8*/ <>c__DisplayClass29_1();
        /*0x10696d0*/ bool <Send_HousingObjectLock>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ int tableId;

        /*0x1069700*/ <>c__DisplayClass31_0();
        /*0x1069708*/ bool <Send_HousingHeroRemove>b__0(PTShare.Define.SHousingHero d);
    }

    class <>c
    {
        static /*0x0*/ HousingManager.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHousingObj, System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool>> <>9__67_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool>, PTShare.Define.SHousingObj>, HousingObjSet> <>9__67_1;
        static /*0x18*/ System.Comparison<HousingObjSet> <>9__67_3;
        static /*0x20*/ System.Action<HousingNotifyBase> <>9__119_0;
        static /*0x28*/ System.Func<TableData.TableData_Furnitureleveltypelist, int> <>9__178_0;
        static /*0x30*/ System.Func<TableData.TableData_Furnitureleveltypelist, int> <>9__179_0;
        static /*0x38*/ System.Comparison<TableData.TableData_Furnitureshoplist> <>9__203_0;

        static /*0x1067194*/ <>c();
        /*0x10671f4*/ <>c();
        /*0x10671fc*/ System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool> <UpdateObjectSetList>b__67_0(PTShare.Define.SHousingObj g);
        /*0x1067274*/ HousingObjSet <UpdateObjectSetList>b__67_1(System.Linq.IGrouping<System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool>, PTShare.Define.SHousingObj> s);
        /*0x1067348*/ int <UpdateObjectSetList>b__67_3(HousingObjSet a, HousingObjSet b);
        /*0x106747c*/ void <ClearNotifys>b__119_0(HousingNotifyBase d);
        /*0x10674f4*/ int <IsMaxLevelFurniture>b__178_0(TableData.TableData_Furnitureleveltypelist f);
        /*0x106750c*/ int <GetMaxLevelFurniture>b__179_0(TableData.TableData_Furnitureleveltypelist f);
        /*0x1067524*/ int <GetSellList>b__203_0(TableData.TableData_Furnitureshoplist lhs, TableData.TableData_Furnitureshoplist rhs);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ int typeToInt;

        /*0x1069c34*/ <>c__DisplayClass73_0();
        /*0x1069c3c*/ bool <GetEffect_ValueInt>b__0(PTShare.Define.SHousingEffect f);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ int typeToInt;

        /*0x1069c60*/ <>c__DisplayClass74_0();
        /*0x1069c68*/ bool <GetEffect_Value>b__0(PTShare.Define.SHousingEffect f);
    }

    class <>c__DisplayClass78_0
    {
        /*0x10*/ TableData.TableData_Furnitureleveltypelist effectData;

        /*0x1069c8c*/ <>c__DisplayClass78_0();
        /*0x1069c94*/ bool <GetIngameEffectList>b__1(HousingEffectIngame f);
    }

    class <>c__DisplayClass83_0
    {
        /*0x10*/ int lv;

        /*0x106a0cc*/ <>c__DisplayClass83_0();
        /*0x106a0d4*/ bool <FindFurnitureLevelType>b__0(TableData.TableData_Furnitureleveltypelist f);
    }

    class <>c__DisplayClass108_0
    {
        /*0x10*/ int slot;

        /*0x1067554*/ <>c__DisplayClass108_0();
        /*0x106755c*/ bool <GetLoadUpdateData>b__0(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass108_1
    {
        /*0x10*/ TableData.TableData_Furniture table;
        /*0x18*/ int placeCount;

        /*0x1067580*/ <>c__DisplayClass108_1();
        /*0x1067588*/ void <GetLoadUpdateData>b__1(int f);
    }

    class <>c__DisplayClass110_0
    {
        /*0x10*/ int slot;

        /*0x10676f8*/ <>c__DisplayClass110_0();
        /*0x1067700*/ bool <JoinLoadMode>b__0(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass112_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int workCount;

        /*0x1067724*/ <>c__DisplayClass112_0();
        /*0x106772c*/ void <GetFloorWorkCount>b__0(PTShare.Define.SHousingObj f);
    }

    class <>c__DisplayClass113_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int count;

        /*0x10677ec*/ <>c__DisplayClass113_0();
        /*0x10677f4*/ void <GetFloorHeroCount>b__0(HousingHeroExpand f);
    }

    class <>c__DisplayClass116_0<T, T2>
    {
        /*0x0*/ T2 follow;

        <>c__DisplayClass116_0();
        bool <FindFollowNotify>b__0(HousingNotifyBase f);
    }

    class <>c__DisplayClass123_0
    {
        /*0x10*/ int id;
        /*0x14*/ int floor;

        /*0x1067a34*/ <>c__DisplayClass123_0();
        /*0x1067a3c*/ bool <FindWaste>b__0(PTShare.Define.SHousingWaste d);
    }

    class <>c__DisplayClass124_0
    {
        /*0x10*/ int id;

        /*0x1067a78*/ <>c__DisplayClass124_0();
        /*0x1067a80*/ bool <FindHousingObj>b__0(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass143_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1067fc0*/ <>c__DisplayClass143_0();
        /*0x1067fc8*/ bool <FindSpace>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass154_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int wasteCount;

        /*0x1067ff8*/ <>c__DisplayClass154_0();
        /*0x1068000*/ void <GetFloorFurnitureCount>b__0(PTShare.Define.SHousingWaste f);
    }

    class <>c__DisplayClass183_0
    {
        /*0x10*/ string grade;

        /*0x1068668*/ <>c__DisplayClass183_0();
        /*0x1068670*/ bool <IsDismissTarget>b__0(TableData.TableData_Housingdismiss d);
    }

    class <>c__DisplayClass207_0
    {
        /*0x10*/ int index;

        /*0x1068940*/ <>c__DisplayClass207_0();
        /*0x1068948*/ bool <GetPurchaseCount>b__0(PTShare.Define.SHousingGoods f);
    }

    class <>c__DisplayClass208_0
    {
        /*0x10*/ int index;

        /*0x106896c*/ <>c__DisplayClass208_0();
        /*0x1068974*/ bool <AddPuchaseCount>b__0(PTShare.Define.SHousingGoods f);
    }
}

class HousingObjSet
{
    /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> ObjectList;
    /*0x18*/ int tableId;
    /*0x1c*/ int lv;

    /*0x12598d4*/ HousingObjSet(System.Collections.Generic.List<PTShare.Define.SHousingObj> objectList, int tableId, int lv);
    /*0x1259914*/ HousingObjSet(PTShare.Define.SHousingObj obj);
    /*0x12599dc*/ int GetCount();
    /*0x1259a28*/ int GetFirstId();
    /*0x1259a9c*/ bool IsLock();
}

class HousingHeroExpand
{
    /*0x10*/ PTShare.Define.SHousingHero housingHero;
    /*0x18*/ int tableId;
    /*0x1c*/ int mfloor;

    /*0x131ac04*/ HousingHeroExpand();
    /*0x1316430*/ int get_floor();
}

class HousingEffectIngame
{
    /*0x10*/ string effectType;
    /*0x18*/ float value;
    /*0x1c*/ int effectId;
    /*0x20*/ int heroId;

    /*0x1314724*/ HousingEffectIngame();
    /*0x1314778*/ HousingEffectIngame(string effectType, float value, int effectId, int heroId);
}

class HousingNotifyBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector3 m_followInterval;
    /*0x28*/ UnityEngine.GameObject m_followTarget;
    /*0x30*/ float m_disableTime;

    /*0x12598a0*/ HousingNotifyBase();
    /*0x12596cc*/ UnityEngine.GameObject GetFollowTarget();
    /*0x12596d4*/ void LateUpdate();
    /*0x12596e0*/ void DefaultUpdate();
    /*0x1259874*/ void UpdateNotify();
    /*0x1259878*/ void EndNotify();
}

class HousingObjectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_image;
    /*0x20*/ HousingObjectSpace m_space;
    /*0x28*/ UnityEngine.GameObject m_spaceParent;
    /*0x30*/ int m_tableId;
    /*0x34*/ bool m_isReverse;
    /*0x38*/ DefineHousing.LAYER m_layer;
    /*0x40*/ HousingTileSpace m_snapSpace;
    /*0x48*/ bool m_snapLeft;
    /*0x50*/ PTShare.Define.SHousingObj m_data;
    /*0x58*/ TableData.TableData_Furniture m_tableData;
    /*0x60*/ DG.Tweening.Tween m_sotrageTween;
    /*0x68*/ HousingIconNotify m_tmp;

    /*0x125dad0*/ HousingObjectBase();
    /*0x1259b18*/ UnityEngine.GameObject GetImageObject();
    /*0x1259b34*/ UnityEngine.Vector3 GetImagePosition();
    /*0x1259b60*/ int GetTableId();
    /*0x1259b68*/ int GetObjectId();
    /*0x1259b84*/ PTShare.Define.SHousingObj GetData();
    /*0x1259b8c*/ HousingTileSpace GetCenterSpcae();
    /*0x1259ba8*/ UnityEngine.Vector2Int GetCenterPoint();
    /*0x1259bc4*/ HousingTileSpace GetSnapSpace();
    /*0x1259bcc*/ DefineHousing.LAYER GetLayer();
    /*0x1259bf8*/ string GetFurnitureTypeToString();
    /*0x1259c14*/ int GetLv();
    /*0x1259c2c*/ void SetCenterPoint(UnityEngine.Vector2Int point);
    /*0x1259c48*/ void SetLayer(DefineHousing.LAYER layer);
    /*0x1259c50*/ bool IsUpgradeComplete();
    /*0x1259d98*/ bool IsUpgradeProgress();
    /*0x1259dbc*/ void OnDisable();
    /*0x1259f40*/ string ConvertSaveString(bool snap);
    /*0x125a304*/ bool IsSweepTarget(int sweep);
    /*0x125a484*/ void InitObject(int tableId);
    /*0x125ad4c*/ void InitObject(PTShare.Define.SHousingObj data);
    /*0x125ae38*/ bool IsReverse();
    /*0x125ae40*/ void SetReverse(bool isReverse);
    /*0x125ae4c*/ bool Reverse();
    /*0x125b0cc*/ bool IsReversePoint();
    /*0x125acac*/ void UpdateReverse(bool reverse);
    /*0x125ad00*/ void UpdateHide();
    /*0x125b0d4*/ bool IsPatternObject();
    /*0x125b1e8*/ void CleanData();
    /*0x1255f58*/ void Cancel();
    /*0x125b6dc*/ void Upgrade();
    /*0x125b214*/ bool PlacePoint(UnityEngine.Vector2Int centerPoint);
    /*0x125b958*/ bool CheckPlacePoint(UnityEngine.Vector2Int centerPoint);
    /*0x125c018*/ bool CheckPlacePoint(DefineHousing.LAYER layer, UnityEngine.Vector2Int centerPoint);
    /*0x125c0cc*/ void RemovePlace(bool isDestroy);
    /*0x125c2c8*/ void ReturnItem();
    /*0x125c344*/ void CancelAndRemove(bool isDestroy);
    /*0x125c370*/ HousingTileSpace SnapFollow(UnityEngine.EventSystems.PointerEventData pointerEventData, bool picking);
    /*0x125c974*/ HousingTileSpace SnapGround(UnityEngine.EventSystems.PointerEventData pointerEventData, bool picking);
    /*0x125c38c*/ HousingTileSpace SnapWall(UnityEngine.EventSystems.PointerEventData pointerEventData, bool picking);
    /*0x125af10*/ void UpdatePlacePoint(UnityEngine.Vector2Int point, bool isLeft);
    /*0x125d298*/ void SelectObject();
    /*0x125ce14*/ bool ScreenPointToLocalPointInRectangle(UnityEngine.EventSystems.PointerEventData pointerEventData, ref UnityEngine.Vector2 pos);
    /*0x125a6ac*/ void BindEvent();
    /*0x1259dc0*/ void RemoveEvent();
    /*0x125d530*/ void HandleChangeState(int state);
    /*0x125aa04*/ void UpdateState();
    /*0x125cf98*/ bool UpdateWallGroundPoint(UnityEngine.Vector2Int centerPoint, bool isPlace);
    /*0x125bc9c*/ void UpdateWallGroundBlock(UnityEngine.Vector2Int centerPoint, bool add);
    /*0x125be38*/ System.Collections.Generic.List<UnityEngine.Vector2Int> FindWallGroundBlockList(UnityEngine.Vector2Int centerPoint);
    /*0x125d474*/ void TweenEffectSelect();
    /*0x125d930*/ void TweenEffectKeep(System.Action callBack);
    /*0x125da98*/ void SetSpace(HousingObjectSpace space);
    /*0x125daa0*/ AtlasImage GetAtlasImage();
    /*0x125daa8*/ void Debug_ShowSpace();
    /*0x125dac8*/ HousingObjectSpace Debug_GetSpace();
    /*0x125a478*/ bool IsWaste();
    /*0x125b938*/ int GetWasteId();
    /*0x125a834*/ void InitWaste();
    /*0x125dad8*/ void <Upgrade>b__40_0();

    class <>c
    {
        static /*0x0*/ HousingObjectBase.<> <>9;
        static /*0x8*/ System.Action <>9__40_1;

        static /*0x106a45c*/ <>c();
        /*0x106a4bc*/ <>c();
        /*0x106a4c4*/ void <Upgrade>b__40_1();
    }

    class <>c__DisplayClass62_0
    {
        /*0x10*/ HousingObjectBase <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x106a560*/ <>c__DisplayClass62_0();
        /*0x106a568*/ void <TweenEffectKeep>g__callback|0();
    }
}

class HousingObjectMenu : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_parent;
    /*0x20*/ UnityEngine.UI.Button m_collocateBtn;
    /*0x28*/ UnityEngine.UI.Button m_infoBtn;
    /*0x30*/ UnityEngine.UI.Button m_reverseBtn;
    /*0x38*/ UnityEngine.UI.Button m_keepBtn;
    /*0x40*/ UnityEngine.UI.Button m_sellBtn;
    /*0x48*/ UnityEngine.UI.Button m_cancelBtn;
    /*0x50*/ AtlasImage m_sellImage;
    /*0x58*/ LocalizeString m_sellText;
    /*0x60*/ LocalizeString m_collocateText;
    /*0x68*/ LocalizeString m_furnitureEffectText;
    /*0x70*/ HousingObjectBase m_target;

    /*0x125fd3c*/ HousingObjectMenu();
    /*0x125dae0*/ void InitMenu(HousingObjectBase target);
    /*0x125e578*/ void HideMenu();
    /*0x125de8c*/ void HideAllButton();
    /*0x125df8c*/ void UpdateSellButton();
    /*0x125e398*/ void UpdateFurnitureEffect();
    /*0x125df88*/ void BindEvent();
    /*0x125e5a0*/ void RemoveEvent();
    /*0x125e5a4*/ void OnClickCollocate();
    /*0x125e26c*/ bool IsLockRotate(int furnitureId);
    /*0x125f00c*/ void Purchase();
    /*0x125f3f0*/ void OnClickInfo();
    /*0x125f5d8*/ void OnClickReverse();
    /*0x125f720*/ void OnClickKeep();
    /*0x125f8d4*/ void OnClickCancel();
    /*0x125fa44*/ void OnClickSell();
    /*0x125fd44*/ void <OnClickCollocate>b__19_2(bool _result);
    /*0x125ee10*/ bool <OnClickCollocate>g__IsCollocate|19_0();
    /*0x125fd50*/ void <Purchase>b__21_0(PTShare.Define.SHousingObj instance);
    /*0x125feb8*/ void <OnClickKeep>b__24_0();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ UnityEngine.Vector2Int snapPoint;
        /*0x18*/ HousingObjectMenu <>4__this;

        /*0x106a760*/ <>c__DisplayClass19_0();
        /*0x106a768*/ void <OnClickCollocate>b__1();
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;
        /*0x18*/ HousingObjectMenu <>4__this;

        /*0x106a7f4*/ <>c__DisplayClass21_0();
        /*0x106a7fc*/ void <Purchase>b__1(PTShare.Define.SHousingObj instance);
    }

    class <>c
    {
        static /*0x0*/ HousingObjectMenu.<> <>9;
        static /*0x8*/ System.Action <>9__26_0;

        static /*0x106a65c*/ <>c();
        /*0x106a6bc*/ <>c();
        /*0x106a6c4*/ void <OnClickSell>b__26_0();
    }
}

class HousingObjectSimpleMenu : UnityEngine.MonoBehaviour
{
    /*0x18*/ TabGroup m_tabGroup;
    /*0x20*/ TabGroup m_sortTabGroup;
    /*0x28*/ ScrollContent_HousingStorageSlot m_storageScrollContent;
    /*0x30*/ ScrollContent_HousingShopSlot m_shopScrollContent;
    /*0x38*/ UnityEngine.GameObject m_parent;
    /*0x40*/ HousingObjectSimpleMenu.TABTYPE m_tabType;
    /*0x44*/ DefineHousing.HOUSING_SORTTAB m_sortTab;
    /*0x48*/ System.Collections.Generic.List<HousingObjSet> m_storageList;
    /*0x50*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> m_shopList;

    /*0x1260d54*/ HousingObjectSimpleMenu();
    /*0x125ffa8*/ void OnDisable();
    /*0x12601c0*/ void InitMenu();
    /*0x1260244*/ void HideMenu();
    /*0x1260264*/ void InitMenu(HousingObjectSimpleMenu.TABTYPE tabType);
    /*0x12601c8*/ void InitMenu(HousingObjectSimpleMenu.TABTYPE tabType, DefineHousing.HOUSING_SORTTAB sortTabType);
    /*0x1260488*/ void UpdateTab();
    /*0x12605b4*/ void UpdateStorageList();
    /*0x126072c*/ void UpdateShopList();
    /*0x126087c*/ void ChangeSubTab(int sortTab);
    /*0x126026c*/ void BindEvent();
    /*0x125ffac*/ void RemoveEvent();
    /*0x1260920*/ void Clear();
    /*0x1260a00*/ void HandleChangeMainTab(int tab);
    /*0x1260aa8*/ void HandleUpdateStorage(int index, HousingStorageSlot obj);
    /*0x1260b8c*/ System.Collections.IEnumerator CoUpdateScroll();
    /*0x1260bf8*/ void HandleUpdateShop(int index, HousingShopSlot obj);
    /*0x1260e0c*/ void <UpdateStorageList>b__16_0(HousingObjSet d);
    /*0x1260ef8*/ void <UpdateShopList>b__17_0(TableData.TableData_Furnitureshoplist d);
    /*0x1260fe4*/ void <HandleUpdateStorage>b__23_0(HousingObjSet objSet);

    enum TABTYPE
    {
        STORAGE = 0,
        SHOP = 1,
    }

    class <CoUpdateScroll>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingObjectSimpleMenu <>4__this;
        /*0x28*/ UnityEngine.Vector3 <start>5__2;
        /*0x38*/ UnityEngine.RectTransform <rect>5__3;
        /*0x40*/ float <t>5__4;

        /*0x106a9a8*/ <CoUpdateScroll>d__24(int <>1__state);
        /*0x106a9d4*/ void System.IDisposable.Dispose();
        /*0x106a9d8*/ bool MoveNext();
        /*0x106abd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106abd8*/ void System.Collections.IEnumerator.Reset();
        /*0x106ac18*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ HousingObjectSimpleMenu.<> <>9;
        static /*0x8*/ System.Action<int> <>9__25_0;

        static /*0x106a8b0*/ <>c();
        /*0x106a910*/ <>c();
        /*0x106a918*/ void <HandleUpdateShop>b__25_0(int response);
    }
}

class HousingObjectSpace : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingTileSpace m_center;
    /*0x20*/ System.Collections.Generic.List<HousingTileSpace> m_tileSpace;
    /*0x28*/ UnityEngine.Vector2Int m_centerPoint;

    /*0x1261ea4*/ HousingObjectSpace();
    /*0x12610f0*/ void SetReverse(bool reverse);
    /*0x12611e4*/ UnityEngine.Vector2Int GetCenterPoint();
    /*0x12611ec*/ System.Collections.Generic.List<HousingTileSpace> GetTileSpaceList();
    /*0x12611f4*/ HousingTileSpace GetCenterSpace();
    /*0x125bb60*/ System.Collections.Generic.List<UnityEngine.Vector2Int> GetSpacePointList(bool isReverse);
    /*0x12611fc*/ void SetCenterPoint(UnityEngine.Vector2Int centerPoint);
    /*0x1261204*/ bool IsMySpace(HousingTileSpace space);
    /*0x125a8a4*/ void SetColor(UnityEngine.Vector2Int selectPoint, UnityEngine.Color select, UnityEngine.Color none);
    /*0x1261338*/ HousingTileSpace GetLastSpace();
    /*0x12613b0*/ void UpdateEdit();
    /*0x1261434*/ UnityEngine.Vector2Int GetEmptySpacePoint(UnityEngine.Vector2Int start, UnityEngine.Vector2Int dir);
    /*0x12615b8*/ void IsEmptyAddCenter();
    /*0x126167c*/ bool IsEmpty(UnityEngine.Vector2Int point);
    /*0x12617b0*/ void AddSpace(HousingTileSpace space);
    /*0x1261814*/ void RemovePoint(UnityEngine.Vector2Int point);
    /*0x12619fc*/ void RemoveLast();
    /*0x1261b24*/ void ClearSpace();
    /*0x1261c80*/ void ResizeSpace(bool isFloor);

    class <>c__DisplayClass3_0
    {
        /*0x10*/ bool reverse;

        /*0xe4aba0*/ <>c__DisplayClass3_0();
        /*0xe4aba8*/ void <SetReverse>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ bool isReverse;
        /*0x18*/ System.Collections.Generic.List<UnityEngine.Vector2Int> pointlist;

        /*0xe4abcc*/ <>c__DisplayClass7_0();
        /*0xe4abd4*/ void <GetSpacePointList>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HousingTileSpace space;

        /*0xe4ac50*/ <>c__DisplayClass9_0();
        /*0xe4ac58*/ bool <IsMySpace>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;
        /*0x18*/ System.Predicate<HousingTileSpace> <>9__0;

        /*0x106ac20*/ <>c__DisplayClass13_0();
        /*0x106ac28*/ bool <GetEmptySpacePoint>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x106ac58*/ <>c__DisplayClass15_0();
        /*0x106ac60*/ bool <IsEmpty>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x106ac90*/ <>c__DisplayClass17_0();
        /*0x106ac98*/ bool <RemovePoint>b__0(HousingTileSpace d);
    }
}

class HousingPopup : GuiBase
{
    /*0x40*/ HousingEditWindow m_editWindow;
    /*0x48*/ UnityEngine.GameObject m_camera;
    /*0x50*/ HousingField m_mainField;
    /*0x58*/ AmountSlot m_goldAmount;
    /*0x60*/ AmountSlot m_starAmount;
    /*0x68*/ AmountSlot m_slimeAmount;
    /*0x70*/ UnityEngine.GameObject[] m_walls;
    /*0x78*/ UnityEngine.UI.Image m_bg;

    /*0x1262780*/ HousingPopup();
    /*0x1261f28*/ void OnCreate();
    /*0x1261f2c*/ void OnDelete();
    /*0x12620d8*/ void OnEnter();
    /*0x12620dc*/ void OnFinish();
    /*0x12620e0*/ void OnLeave();
    /*0x12620fc*/ void OnStart();
    /*0x1262100*/ void OnExit();
    /*0x125954c*/ void InitPopup();
    /*0x1262340*/ void BindEvnet();
    /*0x1261f30*/ void RemoveEvent();
    /*0x1262684*/ void HandleChangeInfo();
    /*0x12624f0*/ void HandleChangeFloor();
    /*0x12626dc*/ void OnClickHelp();
    /*0x1262788*/ void <OnExit>b__14_0();
}

class HousingPressImage : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_image;
    /*0x20*/ UnityEngine.Coroutine m_updateCoroutine;
    /*0x28*/ float m_startTime;
    /*0x2c*/ float m_destTime;
    /*0x30*/ System.Action m_endCallBack;

    /*0x1262a54*/ HousingPressImage();
    /*0x1262880*/ void Init(float destTime, System.Action endCallBack);
    /*0x1262a00*/ void Hide();
    /*0x1262964*/ void Clear();
    /*0x1262994*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingPressImage <>4__this;

        /*0xe4acd0*/ <CoUpdate>d__8(int <>1__state);
        /*0xe4acfc*/ void System.IDisposable.Dispose();
        /*0xe4ad00*/ bool MoveNext();
        /*0xe4adf8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4ae00*/ void System.Collections.IEnumerator.Reset();
        /*0xe4ae40*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingSaveEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_name;
    /*0x20*/ UnityEngine.UI.Image m_image;
    /*0x28*/ UnityEngine.GameObject m_questionMark;
    /*0x30*/ UnityEngine.GameObject m_pencil;
    /*0x38*/ UnityEngine.UI.Button m_loadButton;
    /*0x40*/ UnityEngine.UI.Button m_deleteButton;
    /*0x48*/ int m_index;
    /*0x50*/ PTShare.Define.SHousingSave m_data;
    /*0x58*/ System.Action<HousingSaveEntity> m_savefunc;
    /*0x60*/ System.Action<HousingSaveEntity> m_loadfunc;

    /*0x1263560*/ HousingSaveEntity();
    /*0x1262a5c*/ int GetIndex();
    /*0x1262a64*/ int GetSlotId();
    /*0x1262a70*/ void InitEntity(int index, PTShare.Define.SHousingSave housingSave, System.Action<HousingSaveEntity> saveFunc, System.Action<HousingSaveEntity> loadFunc);
    /*0x1262b2c*/ void SetName();
    /*0x1262e44*/ string GetName();
    /*0x1262b60*/ void SetImage(string str);
    /*0x1262df0*/ void SetButton();
    /*0x1262f7c*/ void OnClickSave();
    /*0x126315c*/ void OnClickLoad();
    /*0x12631bc*/ void OnClickName();
    /*0x1263344*/ void OnClickDelete();
    /*0x1263568*/ void <OnClickSave>b__17_0(bool confirm);
    /*0x12635dc*/ void <OnClickName>b__19_0(bool confirm, string value);
    /*0x1263854*/ void <OnClickDelete>b__20_0(bool confirm);
    /*0x1263950*/ void <OnClickDelete>b__20_1();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ string value;
        /*0x18*/ HousingSaveEntity <>4__this;

        /*0xe4ae48*/ <>c__DisplayClass19_0();
        /*0xe4ae50*/ void <OnClickName>b__1();
    }
}

class HousingSavePopup : GuiBase
{
    /*0x40*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x48*/ ScrollContent_HousingSaveEntity m_scrollContent;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SHousingSave> m_saveDataList;
    /*0x58*/ System.Action m_exitCallBack;
    /*0x60*/ System.Action<int> m_loadFunc;

    /*0x126450c*/ HousingSavePopup();
    /*0x1263960*/ void OnCreate();
    /*0x1263964*/ void OnDelete();
    /*0x1263968*/ void OnEnter();
    /*0x126396c*/ void OnFinish();
    /*0x1263970*/ void OnLeave();
    /*0x1263974*/ void OnStart();
    /*0x1263978*/ void OnExit();
    /*0x1263a70*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SHousingSave> dataList, System.Action<int> loadFunc, System.Action exitCallBack);
    /*0x1263ba8*/ void BindEvent();
    /*0x1263c84*/ void RemoveEvent();
    /*0x1263d58*/ void Save(HousingSaveEntity source);
    /*0x1263fe8*/ void Load(HousingSaveEntity source);
    /*0x1264188*/ void LostConfirmMessage(string setData, string unsets);
    /*0x1264358*/ void HandleScrollContent(int index, HousingSaveEntity obj);

    class <>c__DisplayClass15_0
    {
        /*0x10*/ HousingSavePopup <>4__this;
        /*0x18*/ HousingSaveEntity source;

        /*0xe4aef4*/ <>c__DisplayClass15_0();
        /*0xe4aefc*/ void <Save>b__0(UnityEngine.Texture2D texture2D);
    }

    class <>c__DisplayClass15_1
    {
        /*0x10*/ UnityEngine.Texture2D texture2D;
        /*0x18*/ HousingSavePopup.<> CS$<>8__locals1;

        /*0xe4b0c8*/ <>c__DisplayClass15_1();
        /*0xe4b0d0*/ void <Save>b__1(bool confirm);
    }

    class <>c__DisplayClass15_2
    {
        /*0x10*/ string binary;
        /*0x18*/ HousingSavePopup.<> CS$<>8__locals2;

        /*0xe4b55c*/ <>c__DisplayClass15_2();
        /*0xe4b564*/ void <Save>b__3(ServerProtocol.ResHousingSave response);
    }

    class <>c
    {
        static /*0x0*/ HousingSavePopup.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__15_2;

        static /*0xe4ae88*/ <>c();
        /*0xe4aee8*/ <>c();
        /*0xe4aef0*/ void <Save>b__15_2(bool dummy);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ HousingSavePopup <>4__this;
        /*0x18*/ HousingSaveEntity source;
        /*0x20*/ System.Action <>9__1;

        /*0xe4b6fc*/ <>c__DisplayClass16_0();
        /*0xe4b704*/ void <Load>b__0(bool confirm);
        /*0xe4b8b8*/ void <Load>b__1();
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ string setData;
        /*0x18*/ string unsets;
        /*0x20*/ HousingSavePopup <>4__this;
        /*0x28*/ System.Action <>9__1;

        /*0xe4b8e4*/ <>c__DisplayClass17_0();
        /*0xe4b8ec*/ void <LostConfirmMessage>b__0(bool confirm);
        /*0xe4ba1c*/ void <LostConfirmMessage>b__1();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int index;

        /*0xe4ba48*/ <>c__DisplayClass18_0();
        /*0xe4ba50*/ bool <HandleScrollContent>b__0(PTShare.Define.SHousingSave f);
    }
}

class HousingSellNotifyPopup : GuiBase
{
    /*0x40*/ LimitAtlasImage m_limitImage;
    /*0x48*/ UnityEngine.GameObject[] m_levels;
    /*0x50*/ UnityEngine.GameObject m_effectNotice;
    /*0x58*/ UnityEngine.GameObject m_interactionNotice;
    /*0x60*/ AmountSlot m_sellAmount;
    /*0x68*/ LocalizeString m_sellText;
    /*0x70*/ TableData.TableData_Furniture m_tableData;
    /*0x78*/ int m_lv;

    /*0x1264a4c*/ HousingSellNotifyPopup();
    /*0x1264584*/ void OnCreate();
    /*0x1264588*/ void OnDelete();
    /*0x126458c*/ void OnEnter();
    /*0x1264590*/ void OnExit();
    /*0x126460c*/ void OnFinish();
    /*0x1264610*/ void OnLeave();
    /*0x1264614*/ void OnStart();
    /*0x1264618*/ void InitPopup(int tableId, int lv);
    /*0x1264778*/ void SetLevel();
    /*0x12647f0*/ void SetSellAmount();
    /*0x12649a4*/ void SetSellText();
}

class HousingSetPurchasePopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_desc;
    /*0x50*/ ScrollContent_HousingInfoSlot m_scrollContent;
    /*0x58*/ UnityEngine.UI.Text m_price;
    /*0x60*/ DefineCashShop.CashShopTabType m_currTab;
    /*0x68*/ DefineCashShop.CashShopPackageData m_cashShopPackageData;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x1265848*/ HousingSetPurchasePopup();
    /*0x1264a54*/ void OnCreate();
    /*0x1264a58*/ void OnDelete();
    /*0x1264a5c*/ void OnEnter();
    /*0x1264a60*/ void OnFinish();
    /*0x1264a64*/ void OnLeave();
    /*0x1264a68*/ void OnStart();
    /*0x1264a6c*/ void InitPopup(DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopPackageData cashShopPackageData, System.Collections.Generic.List<Rewards> rewardDataList);
    /*0x1264d8c*/ void UpdateVip();
    /*0x1264cb0*/ void BindEvent();
    /*0x1265170*/ void RemoveEvent();
    /*0x1264f04*/ void SetPrice();
    /*0x1265244*/ void HandleScrollContent(int index, HousingInfoSlot obj);
    /*0x1265404*/ void HandleOnClickFurniture(int tableId);
    /*0x1265494*/ void SuccessPurchase(ServerProtocol.ResCashShopPurchase resData);
    /*0x12654b4*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0x1265768*/ void OnClickPurchase();
}

class HousingShopEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingInfoSlot m_infoSlot;
    /*0x20*/ UnityEngine.GameObject m_soldOut;
    /*0x28*/ UnityEngine.GameObject m_sellTimeParent;
    /*0x30*/ UnityEngine.GameObject m_limitParent;
    /*0x38*/ UnityEngine.GameObject m_badgeParent;
    /*0x40*/ AmountSlot m_price;
    /*0x48*/ LocalizeString m_sellTime;
    /*0x50*/ LocalizeString m_limitCount;
    /*0x58*/ LocalizeString m_badgeText;
    /*0x60*/ UnityEngine.GameObject m_setParent;
    /*0x68*/ LocalizeString m_setName;
    /*0x70*/ LimitAtlasImage m_setImage;
    /*0x78*/ UnityEngine.UI.Slider m_slider;
    /*0x80*/ LocalizeString m_setCount;
    /*0x88*/ int m_index;
    /*0x90*/ TableData.TableData_Furnitureshoplist m_shopData;
    /*0x98*/ UnityEngine.Coroutine m_timer;

    /*0x1266714*/ HousingShopEntity();
    /*0x12658c8*/ void InitEntity(int index);
    /*0x1265a24*/ void InitSetEntity(string key);
    /*0x1265938*/ void UpdateShopUI();
    /*0x1265d14*/ void SetAmount();
    /*0x1265f6c*/ void SetSellTime();
    /*0x12662d8*/ void SetLimitCount();
    /*0x1265c60*/ void SetSlider();
    /*0x126645c*/ System.Collections.IEnumerator CoTimerUpdate();
    /*0x12664c8*/ void OnClickPurchase();
    /*0x126671c*/ bool <SetSellTime>b__21_0(TableData.TableData_Furnitureshop f);
    /*0x126674c*/ bool <CoTimerUpdate>b__24_0(TableData.TableData_Furnitureshop f);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string key;

        /*0xe4ba78*/ <>c__DisplayClass18_0();
        /*0xe4ba80*/ bool <InitSetEntity>b__0(TableData.TableData_Furnitureset f);
    }

    class <CoTimerUpdate>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingShopEntity <>4__this;
        /*0x28*/ System.DateTime <endTime>5__2;
        /*0x30*/ UnityEngine.WaitForSeconds <waitForSeconds>5__3;
        /*0x38*/ int <leftSec>5__4;

        /*0xe4c010*/ <CoTimerUpdate>d__24(int <>1__state);
        /*0xe4c03c*/ void System.IDisposable.Dispose();
        /*0xe4c040*/ bool MoveNext();
        /*0xe4c498*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4c4a0*/ void System.Collections.IEnumerator.Reset();
        /*0xe4c4e0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ string name;
        /*0x18*/ System.ValueTuple<string, int, long, Rewards> amountData;
        /*0xf8*/ HousingShopEntity <>4__this;
        /*0x100*/ System.Action<PTShare.Define.SHousingObj> <>9__2;
        /*0x108*/ System.Action<bool> <>9__1;

        /*0xe4baac*/ <>c__DisplayClass25_0();
        /*0xe4bab4*/ void <OnClickPurchase>b__0();
        /*0xe4becc*/ void <OnClickPurchase>b__1(bool _result);
        /*0xe4bff0*/ void <OnClickPurchase>b__2(PTShare.Define.SHousingObj response);
    }
}

class HousingShopPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingShopEntity m_scrollContent;
    /*0x48*/ TabGroup m_tabGroup;
    /*0x50*/ LocalizeString m_sellTime;
    /*0x58*/ AmountSlot m_goldAmount;
    /*0x60*/ AmountSlot m_starAmount;
    /*0x68*/ System.Collections.Generic.List<int> m_showList;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> m_sellList;
    /*0x78*/ DefineHousing.HOUSING_SORTTAB m_subTab;
    /*0x80*/ UnityEngine.Coroutine m_timer;

    /*0xd19ab8*/ HousingShopPopup();
    /*0xd18bfc*/ void OnCreate();
    /*0xd18c00*/ void OnDelete();
    /*0xd18c04*/ void OnEnter();
    /*0xd18c08*/ void OnFinish();
    /*0xd18c0c*/ void OnLeave();
    /*0xd18c10*/ void OnStart();
    /*0xd18c14*/ void OnExit();
    /*0xd18f5c*/ void InitPopup();
    /*0xd18f64*/ void InitPopup(DefineHousing.HOUSING_SORTTAB subTab);
    /*0xd1934c*/ void UpdatePopup(DefineHousing.HOUSING_SORTTAB subTab);
    /*0xd19404*/ void SetData();
    /*0xd19678*/ void SetTime();
    /*0xd1960c*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xd19058*/ void BindEvent();
    /*0xd18cb4*/ void RemoveEvent();
    /*0xd19308*/ void HandleChangeInfo();
    /*0xd199ac*/ void HandleChangeTab(int index);
    /*0xd19a34*/ void HandleScrollContent(int index, HousingShopEntity obj);

    class <>c__DisplayClass19_0
    {
        /*0x10*/ string subTabType;
        /*0x18*/ HousingShopPopup <>4__this;

        /*0xe4c4e8*/ <>c__DisplayClass19_0();
        /*0xe4c4f0*/ void <SetData>b__0(TableData.TableData_Furnitureshoplist d);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ System.Collections.Generic.List<int> sellGroupList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<TableData.TableData_Furnitureshop> <>9__0;

        /*0xe4c5ac*/ <>c__DisplayClass20_0();
        /*0xe4c5b4*/ bool <SetTime>b__0(TableData.TableData_Furnitureshop f);
    }

    class <CoUpdateTimer>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingShopPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xe4c63c*/ <CoUpdateTimer>d__21(int <>1__state);
        /*0xe4c668*/ void System.IDisposable.Dispose();
        /*0xe4c66c*/ bool MoveNext();
        /*0xe4c72c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4c734*/ void System.Collections.IEnumerator.Reset();
        /*0xe4c774*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingShopSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemInfoSlot;
    /*0x20*/ UnityEngine.GameObject m_limitParent;
    /*0x28*/ LocalizeString m_limit;
    /*0x30*/ LocalizeString m_name;
    /*0x38*/ AmountSlot m_amountSlot;
    /*0x40*/ UnityEngine.GameObject m_sellPeriodParent;
    /*0x48*/ LocalizeString m_sellPeriod;
    /*0x50*/ HousingShopSlot.SOLDOUT_TYPE m_soldOutType;
    /*0x58*/ UnityEngine.GameObject m_soldOut;
    /*0x60*/ UnityEngine.GameObject m_interactionNotice;
    /*0x68*/ UnityEngine.GameObject m_effectNotice;
    /*0x70*/ UnityEngine.GameObject m_badgeParent;
    /*0x78*/ LocalizeString m_badgeText;
    /*0x80*/ System.Action<int> m_onClick;
    /*0x88*/ int m_index;
    /*0x90*/ TableData.TableData_Furnitureshoplist m_shopData;
    /*0x98*/ TableData.TableData_Furniture m_furnitureData;
    /*0xa0*/ UnityEngine.Coroutine m_timer;

    /*0xd1a890*/ HousingShopSlot();
    /*0xd19b70*/ void InitSlot(int index, System.Action<int> onClick);
    /*0xd19c48*/ void SetName();
    /*0xd19d90*/ void SetAmountSlot();
    /*0xd19ee8*/ void SetLimit();
    /*0xd1a218*/ void SetSellPeriod();
    /*0xd1a4a4*/ void SetNotice();
    /*0xd1a0c4*/ void SetSoldOut();
    /*0xd1a5d0*/ void SetBadge();
    /*0xd1a7c4*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xd1a830*/ void OnClick();
    /*0xd1a8a0*/ bool <SetSellPeriod>b__23_0(TableData.TableData_Furnitureshop f);

    enum SOLDOUT_TYPE
    {
        GREY = 0,
        GAMEOBJECT = 1,
    }

    class <CoUpdateTimer>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingShopSlot <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xe4c77c*/ <CoUpdateTimer>d__27(int <>1__state);
        /*0xe4c7a8*/ void System.IDisposable.Dispose();
        /*0xe4c7ac*/ bool MoveNext();
        /*0xe4c86c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4c874*/ void System.Collections.IEnumerator.Reset();
        /*0xe4c8b4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingStorageSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemInfoSlot;
    /*0x20*/ LocalizeString m_amount;
    /*0x28*/ System.Action<HousingObjSet> m_onClick;
    /*0x30*/ HousingObjSet m_objSet;

    /*0xd1aa98*/ HousingStorageSlot();
    /*0xd1a8d0*/ int GetTableId();
    /*0xd1a8e8*/ void InitSlot(HousingObjSet housingObjSet, System.Action<HousingObjSet> onClick);
    /*0xd1aa38*/ void OnClick();
}

class HousingSubMenu : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_parent;
    /*0x20*/ HousingEditWindow m_housingEditWindow;

    /*0xd1b544*/ HousingSubMenu();
    /*0xd1aaa0*/ void InitMenu(HousingEditWindow housingEditWindow);
    /*0xd1aadc*/ void HideMenu();
    /*0xd1aad8*/ void BindEvent();
    /*0xd1ab0c*/ void RemoveEvent();
    /*0xd1ab10*/ void OnClickShop();
    /*0xd1ab9c*/ void OnClickInven();
    /*0xd1ac2c*/ void OnClickSave();
    /*0xd1ad20*/ void OnClickSweep();
    /*0xd1b08c*/ void OnClickHeroSelect();
    /*0xd1b118*/ void OnClickEffect();
    /*0xd1b1a4*/ void OnClickFurnitureGacha();
    /*0xd1b338*/ void OnClickRandom();
    /*0xd1b464*/ void OnClickGuestBook();
    /*0xd1b54c*/ void <OnClickSave>b__8_0(ServerProtocol.ResHousingSaveList response);
    /*0xd1b6bc*/ void <OnClickSave>b__8_1();
    /*0xd1b754*/ void <OnClickRandom>b__13_0();
    /*0xd1b8a8*/ void <OnClickGuestBook>b__14_0();

    class <>c
    {
        static /*0x0*/ HousingSubMenu.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;
        static /*0x10*/ System.Action <>9__13_1;

        static /*0xe4c8bc*/ <>c();
        /*0xe4c91c*/ <>c();
        /*0xe4c924*/ void <OnClickFurnitureGacha>b__12_0();
        /*0xe4c9a4*/ void <OnClickRandom>b__13_1();
    }
}

class HousingSweepPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_groundToggle;
    /*0x48*/ UnityEngine.UI.Toggle m_wallToggle;
    /*0x50*/ UnityEngine.UI.Toggle m_effectToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_wallTileToggle;
    /*0x60*/ LocalizeString m_desc;
    /*0x68*/ LocalizeString m_furnitureCount;

    /*0xd1bc50*/ HousingSweepPopup();
    /*0xd1b934*/ void OnCreate();
    /*0xd1b938*/ void OnDelete();
    /*0xd1b93c*/ void OnEnter();
    /*0xd1b940*/ void OnFinish();
    /*0xd1b944*/ void OnLeave();
    /*0xd1b948*/ void OnStart();
    /*0xd1b94c*/ void OnExit();
    /*0xd1ada8*/ void InitPopup();
    /*0xd1b9c8*/ void BindEvent();
    /*0xd1b9cc*/ void RemoveEvent();
    /*0xd1b9d0*/ void HandleOnChangeToggle();
    /*0xd1b9d4*/ void OnClickSweep();
}

class HousingTalkNotify : HousingNotifyBase
{
    /*0x38*/ DialogTalk m_dialogTalk;
    /*0x40*/ int m_characterId;

    /*0xd1c008*/ HousingTalkNotify();
    /*0xd1be38*/ void InitNotify(UnityEngine.GameObject follow, int characterId);
    /*0xd1be8c*/ void PlayDialog();
    /*0xd1bf80*/ void EndNotify();
}

class HousingTile : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_tileImage;
    /*0x20*/ bool m_isStair;

    /*0xd1c3c0*/ HousingTile();
    /*0xd1c010*/ void InitTile(TableData.TableData_Housingfloorpattern patternData, UnityEngine.Vector2Int point);
    /*0xd1c2a0*/ void AddBlock(int layer, UnityEngine.Vector2Int point);

    enum TILE_PATTERN
    {
        ONE = 0,
        CHECK = 1,
    }
}

class HousingTileSpace : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_notifyImage;
    /*0x20*/ UnityEngine.Vector2Int m_point;
    /*0x28*/ bool m_isWall;

    /*0xd1c910*/ HousingTileSpace();
    /*0xd1c3c8*/ bool IsWall();
    /*0xd1c3d0*/ UnityEngine.Vector2Int GetPoint();
    /*0xd1c3d8*/ void SetReverse(bool reverse);
    /*0xd1c4ac*/ void InitSpace(UnityEngine.Vector2Int point, UnityEngine.Vector3 size, UnityEngine.Vector3 interval, bool isWall, bool enableNotify, bool isReverse);
    /*0xd1c838*/ void SetNotifyImageColor(UnityEngine.Color col);
    /*0xd1c3e0*/ void SetNotifyImageReverse(bool reverse);
    /*0xd1c654*/ void EnableNotifyImage(bool isGrid);
    /*0xd1c798*/ void DisableNotifyImage();
}

class HousingTimeNotify : HousingNotifyBase
{
    /*0x38*/ LocalizeString m_leftTime;
    /*0x40*/ bool m_updateTimer;
    /*0x48*/ PTShare.Define.SHousingObj m_housingObj;
    /*0x50*/ TableData.TableData_Furniture m_tableData;

    /*0xd1d060*/ HousingTimeNotify();
    /*0xd1c940*/ void InitNotify(UnityEngine.GameObject follow, System.DateTime endTime);
    /*0xd1ca5c*/ void InitNotify(UnityEngine.GameObject follow, PTShare.Define.SHousingObj obj);
    /*0xd1cab4*/ void UpdateNotify();
    /*0xd1cf64*/ void EndNotify();
    /*0xd1cef8*/ System.Collections.IEnumerator CoUpdateWait();

    class <CoUpdateWait>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingTimeNotify <>4__this;

        /*0xe4ca9c*/ <CoUpdateWait>d__8(int <>1__state);
        /*0xe4cac8*/ void System.IDisposable.Dispose();
        /*0xe4cacc*/ bool MoveNext();
        /*0xe4cb78*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4cb80*/ void System.Collections.IEnumerator.Reset();
        /*0xe4cbc0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingUpgradePopup : GuiBase
{
    /*0x40*/ HousingUpgradeWindow m_upgradeWindow;
    /*0x48*/ HousingUpgradeWindow m_progressWindow;
    /*0x50*/ PTShare.Define.SHousingObj m_target;
    /*0x58*/ TableData.TableData_Furniture m_tableData;
    /*0x60*/ HousingObjectBase m_upgradeTargetObj;

    /*0xd1d86c*/ HousingUpgradePopup();
    /*0xd1d068*/ void OnCreate();
    /*0xd1d06c*/ void OnDelete();
    /*0xd1d070*/ void OnEnter();
    /*0xd1d074*/ void OnExit();
    /*0xd1d0f0*/ void OnFinish();
    /*0xd1d0f4*/ void OnLeave();
    /*0xd1d0f8*/ void OnStart();
    /*0xd1d0fc*/ void InitPopup(PTShare.Define.SHousingObj obj, HousingObjectBase housingObject);
    /*0xd1d558*/ void OnClickFastUpgrade();
    /*0xd1d874*/ void <OnClickFastUpgrade>b__13_0();

    class <>c
    {
        static /*0x0*/ HousingUpgradePopup.<> <>9;
        static /*0x8*/ System.Action<HousingObjectBase> <>9__13_1;

        static /*0xe4cbc8*/ <>c();
        /*0xe4cc28*/ <>c();
        /*0xe4cc30*/ void <OnClickFastUpgrade>b__13_1(HousingObjectBase selectObject);
    }
}

class HousingUpgradeWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_title;
    /*0x20*/ LimitAtlasImage m_limitImage;
    /*0x28*/ AtlasImage[] m_levels;
    /*0x30*/ AtlasImage[] m_currlevels;
    /*0x38*/ LocalizeString m_currEffectText;
    /*0x40*/ AtlasImage[] m_nextlevels;
    /*0x48*/ LocalizeString m_nextEffectText;
    /*0x50*/ LocalizeString m_time;
    /*0x58*/ UnityEngine.GameObject m_effectNotice;
    /*0x60*/ UnityEngine.GameObject m_interactionNotice;
    /*0x68*/ LocalizeString m_needFastCost;
    /*0x70*/ PTShare.Define.SHousingObj m_target;
    /*0x78*/ TableData.TableData_Furniture m_tableData;

    /*0xd1dffc*/ HousingUpgradeWindow();
    /*0xd1db50*/ void OnDisable();
    /*0xd1d254*/ void InitWindow(PTShare.Define.SHousingObj obj);
    /*0xd1db58*/ void SetLevel(AtlasImage[] target, int lv);
    /*0xd1dd6c*/ void SetEffectText();
    /*0xd1dcd8*/ void InitProgress();
    /*0xd1df90*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingUpgradeWindow <>4__this;
        /*0x28*/ System.DateTime <endTime>5__2;

        /*0xe4cccc*/ <CoUpdate>d__18(int <>1__state);
        /*0xe4ccf8*/ void System.IDisposable.Dispose();
        /*0xe4ccfc*/ bool MoveNext();
        /*0xe4d0ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4d0f4*/ void System.Collections.IEnumerator.Reset();
        /*0xe4d134*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingVisitEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_name;
    /*0x28*/ LocalizeString m_visitTime;
    /*0x30*/ UnityEngine.GameObject m_heartParent;
    /*0x38*/ UnityEngine.UI.Button m_heart;
    /*0x40*/ PTShare.Define.SVisitor m_data;

    /*0xd1e444*/ HousingVisitEntity();
    /*0xd1e004*/ void InitEntity(PTShare.Define.SVisitor data);
    /*0xd1e1bc*/ void OnClickRecev();
    /*0xd1e2e0*/ void OnClickVisit();
    /*0xd1e44c*/ void <InitEntity>b__6_0();
    /*0xd1e46c*/ void <OnClickRecev>b__7_0();

    class <>c
    {
        static /*0x0*/ HousingVisitEntity.<> <>9;
        static /*0x8*/ System.Action <>9__8_0;

        static /*0xe4d13c*/ <>c();
        /*0xe4d19c*/ <>c();
        /*0xe4d1a4*/ void <OnClickVisit>b__8_0();
    }
}

class HousingWastePopup : GuiBase
{
    /*0x40*/ AmountSlot[] m_amountSlots;
    /*0x48*/ AmountSlot m_fastAmount;
    /*0x50*/ LocalizeString m_heroCount;
    /*0x58*/ LocalizeString m_needTime;
    /*0x60*/ LocalizeString m_leftTime;
    /*0x68*/ UnityEngine.GameObject m_cleanParent;
    /*0x70*/ UnityEngine.GameObject m_fastParent;
    /*0x78*/ TableData.TableData_Housingfloor m_tableData;
    /*0x80*/ PTShare.Define.SHousingWaste m_waste;
    /*0x88*/ HousingObjectBase m_housingObject;
    /*0x90*/ System.DateTime m_endTime;
    /*0x98*/ UnityEngine.Coroutine m_update;

    /*0xd1f604*/ HousingWastePopup();
    /*0xd1e4f8*/ void OnCreate();
    /*0xd1e4fc*/ void OnDelete();
    /*0xd1e500*/ void OnEnter();
    /*0xd1e504*/ void OnFinish();
    /*0xd1e508*/ void OnLeave();
    /*0xd1e50c*/ void OnStart();
    /*0xd1e510*/ void OnExit();
    /*0xd1e5d4*/ void InitPopup(int floor, int id, HousingObjectBase housingObject);
    /*0xd1e760*/ void UpdateCleanUI();
    /*0xd1ec60*/ void UpdateFastUI();
    /*0xd1e5a4*/ void ClearCoroutine();
    /*0xd1edd4*/ void OnClickClean();
    /*0xd1efd0*/ void OnClickFastClean();
    /*0xd1ed68*/ System.Collections.IEnumerator CoUpdate();
    /*0xd1f15c*/ int UpdateNotify();
    /*0xd1f60c*/ void <OnClickClean>b__23_0();
    /*0xd1f6bc*/ void <OnClickFastClean>b__24_0();

    class <>c
    {
        static /*0x0*/ HousingWastePopup.<> <>9;
        static /*0x8*/ System.Action<HousingObjectBase> <>9__24_1;

        static /*0xe4d30c*/ <>c();
        /*0xe4d36c*/ <>c();
        /*0xe4d374*/ void <OnClickFastClean>b__24_1(HousingObjectBase selectObject);
    }

    class <CoUpdate>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingWastePopup <>4__this;

        /*0xe4d394*/ <CoUpdate>d__25(int <>1__state);
        /*0xe4d3c0*/ void System.IDisposable.Dispose();
        /*0xe4d3c4*/ bool MoveNext();
        /*0xe4d43c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4d444*/ void System.Collections.IEnumerator.Reset();
        /*0xe4d484*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LimitAtlasImage : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x20*/ AtlasImage m_image;

    /*0xfa9d68*/ LimitAtlasImage();
    /*0xfa9b94*/ void SetImage(AtlasType atlasType, string key);
}

class ScrollContent_HousingEffectDetailEntity : ScrollContent<HousingEffectDetailEntity>
{
    /*0xe1a6b4*/ ScrollContent_HousingEffectDetailEntity();
}

class ScrollContent_HousingEffectEntity : ScrollContent<HousingEffectEntity>
{
    /*0xe1a72c*/ ScrollContent_HousingEffectEntity();
}

class ScrollContent_HousingFloorButton : ScrollContent<HousingFloorButton>
{
    /*0xe1a7a4*/ ScrollContent_HousingFloorButton();
}

class ScrollContent_HousingInfoSlot : ScrollContent<HousingInfoSlot>
{
    /*0xe1a81c*/ ScrollContent_HousingInfoSlot();
}

class ScrollContent_HousingSaveEntity : ScrollContent<HousingSaveEntity>
{
    /*0xe1a894*/ ScrollContent_HousingSaveEntity();
}

class ScrollContent_HousingShopEntity : ScrollContent<HousingShopEntity>
{
    /*0xe1a90c*/ ScrollContent_HousingShopEntity();
}

class ScrollContent_HousingShopSlot : ScrollContent<HousingShopSlot>
{
    /*0xe1a984*/ ScrollContent_HousingShopSlot();
}

class ScrollContent_HousingStorageSlot : ScrollContent<HousingStorageSlot>
{
    /*0xe1a9fc*/ ScrollContent_HousingStorageSlot();
}

class ScrollContent_HousingVisitEntity : ScrollContent<HousingVisitEntity>
{
    /*0xe1aa74*/ ScrollContent_HousingVisitEntity();
}

class SharePopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_parent;
    /*0x48*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x50*/ UnityEngine.UI.Image m_shareImage;
    /*0x58*/ UnityEngine.Texture2D m_shareTexture;

    /*0xe2901c*/ SharePopup();
    /*0xe28d88*/ void OnCreate();
    /*0xe28d8c*/ void OnDelete();
    /*0xe28d90*/ void OnEnter();
    /*0xe28d94*/ void OnExit();
    /*0xe28d9c*/ void OnFinish();
    /*0xe28da0*/ void OnLeave();
    /*0xe28da4*/ void OnStart();
    /*0xe28da8*/ void InitPopup(UnityEngine.Texture2D shareTexture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot);
    /*0xe28f70*/ void OnClickCancel();
    /*0xe28f7c*/ void OnClickShare();
}

class ItemManager : Singleton.Data.SingletonData<ItemManager>
{
    static /*0x0*/ System.Action OnChangeItemValue;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> m_liItemList;
    /*0x28*/ int nArrIndex;
    /*0x2c*/ int nStartCount;
    /*0x30*/ int nEndCount;
    /*0x38*/ PTShare.Define.SItem sChangeItem;

    static /*0x1580d5c*/ ItemManager();
    static /*0x157f25c*/ void add_OnChangeItemValue(System.Action value);
    static /*0x157f168*/ void remove_OnChangeItemValue(System.Action value);
    /*0x1580ca4*/ ItemManager();
    /*0x157fef4*/ string get_UserToken();
    /*0x157ff74*/ bool InitInstance();
    /*0x157ff7c*/ void ReleaseInstance();
    /*0x157b7b8*/ void Send_UseItem(int _tableid, int _count, string _choice, System.Action<PTShare.Define.SProperty> _callback);
    /*0x158000c*/ void SetItemList(System.Collections.Generic.List<PTShare.Define.SItem> _liItem);
    /*0x1580144*/ System.Collections.Generic.List<PTShare.Define.SItem> GetItemList();
    /*0x1579f68*/ PTShare.Define.SItem GetItem(int _itemid);
    /*0x157670c*/ int GetItemAmount(int _itemid);
    /*0x1580244*/ bool GetItemReddot();
    /*0x157c540*/ string GetItemDesc(TableData.TableData_Item tableData);
    /*0x1580468*/ bool IsVaildItemAmount(int _itemid, long _amount);
    /*0x1580510*/ void IncreaseItem(PTShare.Define.SItem _item, bool _invCallback);
    /*0x15806c4*/ void IncreaseItem(System.Collections.Generic.List<PTShare.Define.SItem> _liItem);
    /*0x15807c8*/ void DecreaseItem(PTShare.Define.SItem _item, bool _invCallback);
    /*0x1580948*/ void DecreaseItem(System.Collections.Generic.List<PTShare.Define.SItem> _liItem);
    /*0x1580a4c*/ void ImportItem(PTShare.Define.SItem _item);
    /*0x1580b80*/ void ImportItem(System.Collections.Generic.List<PTShare.Define.SItem> _item);
    /*0x158014c*/ int GetItemIndex(int _tableid);
    /*0x1580660*/ void CreateItem(PTShare.Define.SItem _item);
    /*0x1580088*/ void SortItem();
    /*0x1580c28*/ ItemType GetItemType(string _type);
    /*0x1580d60*/ int <SortItem>b__28_0(PTShare.Define.SItem a, PTShare.Define.SItem b);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ ItemManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xe50928*/ <>c__DisplayClass12_0();
        /*0xe50930*/ void <Send_UseItem>b__0(ServerProtocol.ResItemUse response);
    }

    class <>c
    {
        static /*0x0*/ ItemManager.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Item, bool> <>9__17_0;

        static /*0xe50824*/ <>c();
        /*0xe50884*/ <>c();
        /*0xe5088c*/ bool <GetItemReddot>b__17_0(TableData.TableData_Item _item);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ int _tableid;

        /*0xe50b20*/ <>c__DisplayClass26_0();
        /*0xe50b28*/ bool <GetItemIndex>b__0(PTShare.Define.SItem x);
    }
}

class LoadPage : UnityEngine.MonoBehaviour
{
    static string IMAGE_LIST_PREFAB = "LoadPageImageList";
    /*0x18*/ UnityEngine.CanvasGroup canvasGroup;
    /*0x20*/ LocalizeString tooltipText;
    /*0x28*/ System.Action eventLoadPageBegin;
    /*0x30*/ System.Action eventLoadPageEnd;

    /*0xfaa0f8*/ LoadPage();
    /*0xfa9d98*/ void SetLoadPageEventFunc(System.Action _begin_func, System.Action _end_func);
    /*0xfa9da0*/ void DestoryLoadPage();
    /*0xfa9e1c*/ void SendLoadPageBegin();
    /*0xfa9e30*/ void SendLoadPageEnd();
    /*0xfa9e44*/ UnityEngine.Sprite LoadRandomImage();
    /*0xfa9f24*/ string LoadRandomLocalToltip(System.Collections.Generic.List<string> _Toltip_local_list);
    /*0xfa9fc4*/ string LoadRandomTooltip();
    /*0xfaa010*/ void SetActive_LoadPage(bool _active);
    /*0xfaa044*/ void SetAlpha(float _value);
    bool OpenLoadPage();
    void CloseLoadPage();
    /*0xfaa0f4*/ void SetCopyright();
}

class LoadPageImageList : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<string> imageNameList;

    /*0xfaa108*/ LoadPageImageList();
    /*0xfaa100*/ UnityEngine.Sprite LoadSprite(int _index);
    /*0xfa9ec4*/ UnityEngine.Sprite LoadRandomSprite();
}

class LoadPage_Effect : LoadPage
{
    /*0x38*/ float transTime;
    /*0x40*/ UnityEngine.UI.Image loadImageTarget;

    /*0xfaa4b4*/ LoadPage_Effect();
    /*0xfaa110*/ bool OpenLoadPage();
    /*0xfaa2f8*/ void CloseLoadPage();
    /*0xfaa28c*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfaa3a0*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfaa40c*/ void ClearLoadingImage();

    class <OnProcess_Open>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Effect <>4__this;
        /*0x28*/ float <factor>5__2;

        /*0xe5265c*/ <OnProcess_Open>d__4(int <>1__state);
        /*0xe52688*/ void System.IDisposable.Dispose();
        /*0xe5268c*/ bool MoveNext();
        /*0xe527cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe527d4*/ void System.Collections.IEnumerator.Reset();
        /*0xe52814*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Effect <>4__this;
        /*0x28*/ float <factor>5__2;

        /*0xe52480*/ <OnProcess_Close>d__5(int <>1__state);
        /*0xe524ac*/ void System.IDisposable.Dispose();
        /*0xe524b0*/ bool MoveNext();
        /*0xe5260c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52614*/ void System.Collections.IEnumerator.Reset();
        /*0xe52654*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Fade : LoadPage
{
    /*0x38*/ float transTime;

    /*0xfaa614*/ LoadPage_Fade();
    /*0xfaa4c4*/ bool OpenLoadPage();
    /*0xfaa57c*/ void CloseLoadPage();
    /*0xfaa510*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfaa5a8*/ System.Collections.IEnumerator OnProcess_Close();

    class <OnProcess_Open>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Fade <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe52960*/ <OnProcess_Open>d__3(int <>1__state);
        /*0xe5298c*/ void System.IDisposable.Dispose();
        /*0xe52990*/ bool MoveNext();
        /*0xe52a44*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52a4c*/ void System.Collections.IEnumerator.Reset();
        /*0xe52a8c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Fade <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe5281c*/ <OnProcess_Close>d__4(int <>1__state);
        /*0xe52848*/ void System.IDisposable.Dispose();
        /*0xe5284c*/ bool MoveNext();
        /*0xe52910*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52918*/ void System.Collections.IEnumerator.Reset();
        /*0xe52958*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Intro : LoadPage
{
    /*0x38*/ float transTime;
    /*0x40*/ UnityEngine.UI.Text descriptionText;
    /*0x48*/ UnityEngine.UI.Text progressText;
    /*0x50*/ UnityEngine.GameObject progress;
    /*0x58*/ UnityEngine.UI.Image progressBar;
    /*0x60*/ UnityEngine.RectTransform progressLine;
    /*0x68*/ UnityEngine.GameObject downloadProgress;
    /*0x70*/ UnityEngine.UI.Image downloadProgressBar;
    /*0x78*/ UnityEngine.RectTransform downloadProgressLine;
    /*0x80*/ System.Collections.Generic.List<string> tooltipLocaleKeyList;
    /*0x88*/ UnityEngine.UI.Text txtBuildVersion;
    /*0x90*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfab3ac*/ LoadPage_Intro();
    /*0xfaa628*/ void OnEnable();
    /*0xfaa8d8*/ void IntroImageSetting();
    /*0xfaab78*/ void OnDisable();
    /*0xfaaee8*/ bool OpenLoadPage();
    /*0xfab1a0*/ void CloseLoadPage();
    /*0xfab134*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfab1cc*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfab088*/ void SetDescription(string desc);
    /*0xfaaa24*/ void SetProgress(float value);
    /*0xfab238*/ void SetDownloadProgress(float value);
    /*0xfaa8dc*/ void SetShowDownloadProgress(bool isShow);
    /*0xfaa980*/ void SetActiveDownloadBar(bool isShow);
    /*0xfab2fc*/ void SetCopyright();

    class <OnProcess_Open>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Intro <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe52bd8*/ <OnProcess_Open>d__17(int <>1__state);
        /*0xe52c04*/ void System.IDisposable.Dispose();
        /*0xe52c08*/ bool MoveNext();
        /*0xe52cbc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52cc4*/ void System.Collections.IEnumerator.Reset();
        /*0xe52d04*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Intro <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe52a94*/ <OnProcess_Close>d__18(int <>1__state);
        /*0xe52ac0*/ void System.IDisposable.Dispose();
        /*0xe52ac4*/ bool MoveNext();
        /*0xe52b88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52b90*/ void System.Collections.IEnumerator.Reset();
        /*0xe52bd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Lobby : LoadPage
{
    /*0x38*/ UnityEngine.UI.Image imageTarget;
    /*0x40*/ UnityEngine.UI.Text progressText;
    /*0x48*/ UnityEngine.UI.Image progressBar;
    /*0x50*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfaba40*/ LoadPage_Lobby();
    /*0xfab3cc*/ void OnEnable();
    /*0xfab5ec*/ void OnDisable();
    /*0xfab640*/ bool OpenLoadPage();
    /*0xfab8bc*/ void CloseLoadPage();
    /*0xfab850*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfab8e8*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfab954*/ void ClearLoadingImage();
    /*0xfab498*/ void SetProgress(float value);

    class <OnProcess_Open>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Lobby <>4__this;

        /*0xe52e08*/ <OnProcess_Open>d__8(int <>1__state);
        /*0xe52e34*/ void System.IDisposable.Dispose();
        /*0xe52e38*/ bool MoveNext();
        /*0xe52e90*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52e98*/ void System.Collections.IEnumerator.Reset();
        /*0xe52ed8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Lobby <>4__this;

        /*0xe52d0c*/ <OnProcess_Close>d__9(int <>1__state);
        /*0xe52d38*/ void System.IDisposable.Dispose();
        /*0xe52d3c*/ bool MoveNext();
        /*0xe52db8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52dc0*/ void System.Collections.IEnumerator.Reset();
        /*0xe52e00*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Normal : LoadPage
{
    /*0x38*/ UnityEngine.UI.Image imageTarget;
    /*0x40*/ UnityEngine.UI.Text progressText;
    /*0x48*/ UnityEngine.UI.Slider progressBar;
    /*0x50*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfac280*/ LoadPage_Normal();
    /*0xfaba58*/ void OnEnable();
    /*0xfabc3c*/ void OnDisable();
    /*0xfabc40*/ bool OpenLoadPage();
    /*0xfabc5c*/ void CloseLoadPage();
    /*0xfabcf4*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfabc88*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfabd60*/ void ClearEvent();
    /*0xfabf44*/ void ClearLoadingImage();
    /*0xfac030*/ void SetProgress(float value);
    /*0xfac18c*/ void SetDesc(string _str);

    class <OnProcess_Open>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Normal <>4__this;

        /*0xe52fe8*/ <OnProcess_Open>d__8(int <>1__state);
        /*0xe53014*/ void System.IDisposable.Dispose();
        /*0xe53018*/ bool MoveNext();
        /*0xe53070*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53078*/ void System.Collections.IEnumerator.Reset();
        /*0xe530b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Normal <>4__this;

        /*0xe52ee0*/ <OnProcess_Close>d__9(int <>1__state);
        /*0xe52f0c*/ void System.IDisposable.Dispose();
        /*0xe52f10*/ bool MoveNext();
        /*0xe52f98*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52fa0*/ void System.Collections.IEnumerator.Reset();
        /*0xe52fe0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Scene : LoadPage
{
    /*0x38*/ UnityEngine.UI.Image imageTarget;
    /*0x40*/ UnityEngine.UI.Text progressText;
    /*0x48*/ UnityEngine.UI.Slider progressBar;
    /*0x50*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfacac0*/ LoadPage_Scene();
    /*0xfac298*/ void OnEnable();
    /*0xfac47c*/ void OnDisable();
    /*0xfac480*/ bool OpenLoadPage();
    /*0xfac49c*/ void CloseLoadPage();
    /*0xfac534*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfac4c8*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfac5a0*/ void ClearEvent();
    /*0xfac784*/ void ClearLoadingImage();
    /*0xfac870*/ void SetProgress(float value);
    /*0xfac9cc*/ void SetDesc(string _str);

    class <OnProcess_Open>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Scene <>4__this;

        /*0xe531c8*/ <OnProcess_Open>d__8(int <>1__state);
        /*0xe531f4*/ void System.IDisposable.Dispose();
        /*0xe531f8*/ bool MoveNext();
        /*0xe53250*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53258*/ void System.Collections.IEnumerator.Reset();
        /*0xe53298*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Scene <>4__this;

        /*0xe530c0*/ <OnProcess_Close>d__9(int <>1__state);
        /*0xe530ec*/ void System.IDisposable.Dispose();
        /*0xe530f0*/ bool MoveNext();
        /*0xe53178*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53180*/ void System.Collections.IEnumerator.Reset();
        /*0xe531c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum LoadPageType
{
    None = 0,
    LoadPage_Intro = 1,
    LoadPage_Normal = 2,
    LoadPage_Fade = 3,
    LoadPage_DirectingProcessNotFinishEvent = 4,
    LoadPage_Scene = 5,
}

class LoadTaskManager : Singleton.Component.SingletonComponent<LoadTaskManager>
{
    static /*0x0*/ System.Action OnEventBeginLoad;
    static /*0x8*/ System.Action OnEventFinishLoad;
    /*0x28*/ UnityEngine.Transform m_Parent;
    /*0x30*/ UnityEngine.Camera m_LoadTaskCamera;
    /*0x38*/ LoadPageType _curLoadPageType;
    /*0x40*/ UnityEngine.GameObject _loadPagePrefab;
    /*0x48*/ LoadPage _loadPage;
    /*0x50*/ System.Action<string> notifyDescription;
    /*0x58*/ System.Action<float> notifyProgress;
    /*0x60*/ System.Action<float> notifyDownloadProgress;
    /*0x68*/ System.Action<bool> notifyDownloadBarActive;
    /*0x70*/ System.Collections.Generic.List<LoadTask> _loadTaskListArray;
    /*0x78*/ bool <IsLoading>k__BackingField;
    /*0x79*/ bool <IsPushing>k__BackingField;
    /*0x80*/ System.Collections.IEnumerator _process;
    /*0x88*/ LoadTask _currentTask;

    /*0xfadfc8*/ LoadTaskManager();
    /*0xfacd88*/ bool get_IsLoading();
    /*0xfacd90*/ void set_IsLoading(bool value);
    /*0xfacd9c*/ bool get_IsPushing();
    /*0xfacda4*/ void set_IsPushing(bool value);
    /*0xfacdb0*/ void AwakeInstance();
    /*0xfacec0*/ bool InitInstance();
    /*0xfacec8*/ void ReleaseInstance();
    /*0xfacf2c*/ bool BeginPush();
    /*0xfacf4c*/ void PushTask(System.Collections.Generic.List<LoadTask> taskList);
    /*0xfacff8*/ void PushTask(LoadTask task);
    /*0xfad0cc*/ void EndPush(LoadPageType load_page_type);
    /*0xfacc54*/ void SetDescription(string _desc);
    /*0xfacccc*/ void SetDescription_Locale(string _key, string[] _arg);
    /*0xfad3d4*/ void ClearTaskList();
    /*0xfad1f8*/ void LoadStart(LoadPageType load_page_type);
    /*0xfadaa4*/ void OnLoadStart();
    /*0xfadad0*/ System.Collections.IEnumerator OnLoadProcess();
    /*0xfadb3c*/ void LoadFinish();
    /*0xfadbf0*/ void OnLoadFinish();
    /*0xfad504*/ bool CreateLoadPage(LoadPageType _load_page_type);
    /*0xfadca8*/ void RemoveLoadPage();
    /*0xfad364*/ void Send_Description(string _desc);
    /*0xfadd58*/ void Send_Progress(float value);
    /*0xfaddc8*/ void SetActiveDownloadBar(bool _active);
    /*0xfade38*/ void Send_DownloadProgress(float value);
    /*0xfadea8*/ void SetCopyright();
    /*0xfad170*/ int GetValidTaskTypeCount();
    /*0xfadf3c*/ int GetTotalTaskCount();
    /*0xfadd48*/ bool IsDontViewLoadPageType(LoadPageType _eType);
    /*0xfadfc0*/ UnityEngine.Camera GetCamera();

    class <OnLoadProcess>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTaskManager <>4__this;
        /*0x28*/ int <curTaskIndex>5__2;
        /*0x2c*/ float <curProgress>5__3;
        /*0x30*/ int <listCount>5__4;
        /*0x34*/ int <idxList>5__5;
        /*0x38*/ System.Collections.Generic.List<LoadTask> <taskList>5__6;
        /*0x40*/ int <taskCount>5__7;
        /*0x44*/ int <idxTask>5__8;
        /*0x48*/ LoadTask <task>5__9;

        /*0xe53390*/ <OnLoadProcess>d__34(int <>1__state);
        /*0xe533bc*/ void System.IDisposable.Dispose();
        /*0xe533c0*/ bool MoveNext();
        /*0xe53658*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53660*/ void System.Collections.IEnumerator.Reset();
        /*0xe536a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_GameInitialize : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<BundleManifest> liDownload;
    /*0x28*/ System.Collections.Generic.Dictionary<string, System.ValueTuple<string, long>> dicBundle;
    /*0x30*/ System.IO.StreamWriter logStream;

    /*0xfafdc4*/ LoadTask_GameInitialize();
    /*0xfafe88*/ System.Collections.IEnumerator OnProcess();
    /*0xfafef4*/ void Destory();
    /*0xfafef8*/ string get_BundlePath();
    /*0xfaff6c*/ string get_ManifestPath();
    /*0xfaffb8*/ string get_LogPath();
    /*0xfb0004*/ System.Collections.IEnumerator CheckStreamingAssets();
    /*0xfb0070*/ void BeginWriterLog();
    /*0xfb0188*/ void WriteLog(string log);
    /*0xfb01a4*/ void FlushLog();
    /*0xfb01bc*/ void EndWriterLog();
    /*0xfb01f0*/ void GetDiskBundle();
    /*0xfb037c*/ System.Collections.IEnumerator CheckDownloadAssetBundle();
    /*0xfb03e8*/ System.Collections.IEnumerator DownloadAssetBundle(bool notice);
    /*0xfb0468*/ System.Collections.IEnumerator DownloadAssetBundleOnDisk();
    /*0xfb04d4*/ System.Collections.IEnumerator VerifyAssetBundleOnDisk();
    /*0xfb0540*/ System.Collections.IEnumerator Init_LoadIndispensableBundle();
    /*0xfb059c*/ System.Collections.IEnumerator SetNoBackupAssetBundle(System.Collections.Generic.List<BundleManifest> _bundleManifest);
    /*0xfb05f8*/ System.Collections.IEnumerator ViewDownloadNotice(float _fileSize);
    /*0xfb066c*/ System.Collections.IEnumerator VerifyNotice();
    /*0xfb06d8*/ System.Collections.IEnumerator Init_IndispensableManager();
    /*0xfb0734*/ void <GetDiskBundle>b__17_0(System.IO.FileInfo f);

    class <OnProcess>d__1 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe56a00*/ <OnProcess>d__1(int <>1__state);
        /*0xe56a2c*/ void System.IDisposable.Dispose();
        /*0xe56a30*/ bool MoveNext();
        /*0xe56b24*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56b2c*/ void System.Collections.IEnumerator.Reset();
        /*0xe56b6c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CheckStreamingAssets>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe55694*/ <CheckStreamingAssets>d__12(int <>1__state);
        /*0xe556c0*/ void System.IDisposable.Dispose();
        /*0xe556c4*/ bool MoveNext();
        /*0xe558bc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe558c4*/ void System.Collections.IEnumerator.Reset();
        /*0xe55904*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string[] div;

        /*0xe54afc*/ <>c__DisplayClass18_0();
        /*0xe54b04*/ bool <CheckDownloadAssetBundle>b__0(BundleManifest x);
    }

    class <CheckDownloadAssetBundle>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;
        /*0x28*/ UnityEngine.Networking.UnityWebRequest <request>5__2;

        /*0xe54c84*/ <CheckDownloadAssetBundle>d__18(int <>1__state);
        /*0xe54cb0*/ void System.IDisposable.Dispose();
        /*0xe54cb4*/ bool MoveNext();
        /*0xe55644*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5564c*/ void System.Collections.IEnumerator.Reset();
        /*0xe5568c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ LoadTask_GameInitialize.<> <>9;
        static /*0x8*/ System.Func<BundleManifest, long> <>9__19_0;
        static /*0x10*/ System.Action<bool> <>9__24_0;

        static /*0xe54a88*/ <>c();
        /*0xe54ae8*/ <>c();
        /*0xe54af0*/ long <DownloadAssetBundle>b__19_0(BundleManifest m);
        /*0xe54af8*/ void <ViewDownloadNotice>b__24_0(bool result);
    }

    class <DownloadAssetBundle>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;
        /*0x28*/ bool notice;
        /*0x30*/ long <totaldownbytes>5__2;
        /*0x38*/ int <curIndex>5__3;
        /*0x40*/ ulong <currentdownbytes>5__4;
        /*0x48*/ System.Collections.Generic.List.Enumerator<BundleManifest> <>7__wrap4;
        /*0x88*/ BundleManifest <manifast>5__6;
        /*0xb8*/ UnityEngine.Networking.UnityWebRequest <downloadReq>5__7;
        /*0xc0*/ string <desc>5__8;

        /*0xe5590c*/ <DownloadAssetBundle>d__19(int <>1__state);
        /*0xe55938*/ void System.IDisposable.Dispose();
        /*0xe559a8*/ bool MoveNext();
        /*0xe55954*/ void <>m__Finally1();
        /*0xe5624c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56254*/ void System.Collections.IEnumerator.Reset();
        /*0xe56294*/ object System.Collections.IEnumerator.get_Current();
    }

    class <DownloadAssetBundleOnDisk>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe5629c*/ <DownloadAssetBundleOnDisk>d__20(int <>1__state);
        /*0xe562c8*/ void System.IDisposable.Dispose();
        /*0xe562cc*/ bool MoveNext();
        /*0xe563a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe563a8*/ void System.Collections.IEnumerator.Reset();
        /*0xe563e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <VerifyAssetBundleOnDisk>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe56c28*/ <VerifyAssetBundleOnDisk>d__21(int <>1__state);
        /*0xe56c54*/ void System.IDisposable.Dispose();
        /*0xe56c58*/ bool MoveNext();
        /*0xe56dd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56dd8*/ void System.Collections.IEnumerator.Reset();
        /*0xe56e18*/ object System.Collections.IEnumerator.get_Current();
    }

    class <Init_LoadIndispensableBundle>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe56814*/ <Init_LoadIndispensableBundle>d__22(int <>1__state);
        /*0xe56840*/ void System.IDisposable.Dispose();
        /*0xe56844*/ bool MoveNext();
        /*0xe569b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe569b8*/ void System.Collections.IEnumerator.Reset();
        /*0xe569f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <SetNoBackupAssetBundle>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe56b74*/ <SetNoBackupAssetBundle>d__23(int <>1__state);
        /*0xe56ba0*/ void System.IDisposable.Dispose();
        /*0xe56ba4*/ bool MoveNext();
        /*0xe56bd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56be0*/ void System.Collections.IEnumerator.Reset();
        /*0xe56c20*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ bool _bIsOK;

        /*0xe54b44*/ <>c__DisplayClass24_0();
        /*0xe54b4c*/ void <ViewDownloadNotice>b__1(bool result);
        /*0xe54bdc*/ bool <ViewDownloadNotice>b__2();
    }

    class <ViewDownloadNotice>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fileSize;

        /*0xe571e4*/ <ViewDownloadNotice>d__24(int <>1__state);
        /*0xe57210*/ void System.IDisposable.Dispose();
        /*0xe57214*/ bool MoveNext();
        /*0xe57708*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe57710*/ void System.Collections.IEnumerator.Reset();
        /*0xe57750*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ bool _bIsOK;

        /*0xe54be4*/ <>c__DisplayClass25_0();
        /*0xe54bec*/ void <VerifyNotice>b__0(bool result);
        /*0xe54c7c*/ bool <VerifyNotice>b__1();
    }

    class <VerifyNotice>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe56e20*/ <VerifyNotice>d__25(int <>1__state);
        /*0xe56e4c*/ void System.IDisposable.Dispose();
        /*0xe56e50*/ bool MoveNext();
        /*0xe57194*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5719c*/ void System.Collections.IEnumerator.Reset();
        /*0xe571dc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <Init_IndispensableManager>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe563f0*/ <Init_IndispensableManager>d__26(int <>1__state);
        /*0xe5641c*/ void System.IDisposable.Dispose();
        /*0xe56420*/ bool MoveNext();
        /*0xe567c4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe567cc*/ void System.Collections.IEnumerator.Reset();
        /*0xe5680c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_LoginProcess : LoadTask
{
    static /*0x0*/ bool Pause;

    static /*0xfb0ab0*/ LoadTask_LoginProcess();
    /*0xfb0a18*/ LoadTask_LoginProcess();
    /*0xfb0a40*/ void Destory();
    /*0xfb0a44*/ System.Collections.IEnumerator OnProcess();

    class <>c__DisplayClass3_0
    {
        /*0x10*/ bool _bLocalizeWaiting;

        /*0xe578fc*/ <>c__DisplayClass3_0();
        /*0xe57904*/ void <OnProcess>b__0(bool _result);
        /*0xe57a50*/ bool <OnProcess>b__1();
    }

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_LoginProcess <>4__this;

        /*0xe57a58*/ <OnProcess>d__3(int <>1__state);
        /*0xe57a84*/ void System.IDisposable.Dispose();
        /*0xe57a88*/ bool MoveNext();
        /*0xe58384*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5838c*/ void System.Collections.IEnumerator.Reset();
        /*0xe583cc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_GameReady : LoadTask
{
    /*0x1c*/ AssetBundleSceneType m_eCurScene;

    /*0xfb0978*/ LoadTask_GameReady(AssetBundleSceneType _eCurScene);
    /*0xfb09a8*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0a14*/ void Destory();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameReady <>4__this;

        /*0xe57758*/ <OnProcess>d__2(int <>1__state);
        /*0xe57784*/ void System.IDisposable.Dispose();
        /*0xe57788*/ bool MoveNext();
        /*0xe578ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe578b4*/ void System.Collections.IEnumerator.Reset();
        /*0xe578f4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask
{
    /*0x10*/ float _progress;
    /*0x14*/ bool _isDone;
    /*0x18*/ LoadTaskType <taskType>k__BackingField;

    /*0xfacaf8*/ LoadTask(LoadTaskType _task_type);
    /*0xfacad8*/ LoadTaskType get_taskType();
    /*0xfacae0*/ void set_taskType(LoadTaskType value);
    /*0xfacae8*/ float get_progress();
    /*0xfacaf0*/ bool get_isDone();
    /*0xfacb24*/ void OnTaskDone();
    /*0xfacb38*/ void SetProgress(float _value);
    /*0xfacb48*/ System.Collections.IEnumerator WaitProgress(float yieldProgress, float interval);
    /*0xfacbc8*/ void IncreaseProgress(float maxProgress, float interval);
    /*0xfacbe8*/ void SetDescription(string _desc);
    /*0xfacc64*/ void SetDescription_Locale(string _key, string[] _arg);
    System.Collections.IEnumerator OnProcess();
    void Destory();

    class <WaitProgress>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask <>4__this;
        /*0x28*/ float interval;
        /*0x2c*/ float yieldProgress;

        /*0xe532a0*/ <WaitProgress>d__13(int <>1__state);
        /*0xe532cc*/ void System.IDisposable.Dispose();
        /*0xe532d0*/ bool MoveNext();
        /*0xe53340*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53348*/ void System.Collections.IEnumerator.Reset();
        /*0xe53388*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_BattleToDungeonScene : LoadTask
{
    /*0xfae038*/ LoadTask_BattleToDungeonScene();
    /*0xfae064*/ void Destory();
    /*0xfae068*/ System.Collections.IEnumerator OnProcess();
    /*0xfae0d4*/ void HandlerShowDungeon();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_BattleToDungeonScene <>4__this;

        /*0xe536a8*/ <OnProcess>d__2(int <>1__state);
        /*0xe536d4*/ void System.IDisposable.Dispose();
        /*0xe536d8*/ bool MoveNext();
        /*0xe53944*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5394c*/ void System.Collections.IEnumerator.Reset();
        /*0xe5398c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_BattleToMainScene : LoadTask
{
    /*0x1c*/ bool bIsUpdate;

    /*0xfae234*/ LoadTask_BattleToMainScene();
    /*0xfae260*/ void Destory();
    /*0xfae264*/ System.Collections.IEnumerator OnProcess();
    /*0xfae2d0*/ void HandlerShowCampain();
    /*0xfae500*/ void HandlerShowDemo();
    /*0xfae750*/ void HandlerShowCroManyonTower();
    /*0xfae9b4*/ void HandlerShowGeneralArena();
    /*0xfaeb2c*/ void HandlerShowWorldArena();
    /*0xfaeca4*/ void HandlerShowFriend();
    /*0xfaee1c*/ void HandlerShowGuildBoss();
    /*0xfaf164*/ void HandlerShowGuildWar();
    /*0xfaf3ac*/ void HandlerShowWorldBoss();
    /*0xfaf640*/ void HandlerShowPveRanking();
    /*0xfaf7e8*/ void <OnProcess>b__3_2();
    /*0xfaf7f4*/ bool <OnProcess>b__3_3();
    /*0xfaf7fc*/ void <OnProcess>b__3_0();
    /*0xfaf808*/ bool <OnProcess>b__3_1();

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_BattleToMainScene <>4__this;

        /*0xe53b7c*/ <OnProcess>d__3(int <>1__state);
        /*0xe53ba8*/ void System.IDisposable.Dispose();
        /*0xe53bac*/ bool MoveNext();
        /*0xe54350*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe54358*/ void System.Collections.IEnumerator.Reset();
        /*0xe54398*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ LoadTask_BattleToMainScene.<> <>9;
        static /*0x8*/ System.Action <>9__5_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Eventpage> <>9__10_0;

        static /*0xe53994*/ <>c();
        /*0xe539f4*/ <>c();
        /*0xe539fc*/ void <HandlerShowDemo>b__5_0();
        /*0xe53b50*/ bool <HandlerShowGuildBoss>b__10_0(TableData.TableData_Eventpage f);
    }
}

class LoadTask_BattleToMazeScene : LoadTask
{
    /*0xfaf810*/ LoadTask_BattleToMazeScene();
    /*0xfaf83c*/ void Destory();
    /*0xfaf840*/ System.Collections.IEnumerator OnProcess();
    /*0xfaf8ac*/ void HandlerShowMaze();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_BattleToMazeScene <>4__this;

        /*0xe543a0*/ <OnProcess>d__2(int <>1__state);
        /*0xe543cc*/ void System.IDisposable.Dispose();
        /*0xe543d0*/ bool MoveNext();
        /*0xe5463c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe54644*/ void System.Collections.IEnumerator.Reset();
        /*0xe54684*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_DirectingProcess : LoadTask
{
    static /*0x0*/ System.Collections.Generic.Queue<System.Collections.IEnumerator> OnQueueDirectingProcessEvent;

    static /*0xfafb28*/ LoadTask_DirectingProcess();
    /*0xfafa0c*/ LoadTask_DirectingProcess();
    /*0xfafa38*/ void Destory();
    /*0xfafabc*/ System.Collections.IEnumerator OnProcess();

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_DirectingProcess <>4__this;

        /*0xe5468c*/ <OnProcess>d__3(int <>1__state);
        /*0xe546b8*/ void System.IDisposable.Dispose();
        /*0xe546bc*/ bool MoveNext();
        /*0xe547cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe547d4*/ void System.Collections.IEnumerator.Reset();
        /*0xe54814*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_DungeonToMain : LoadTask
{
    /*0xfafbb0*/ LoadTask_DungeonToMain();
    /*0xfafbdc*/ void Destory();
    /*0xfafbe0*/ System.Collections.IEnumerator OnProcess();
    /*0xfafc4c*/ void HandlerShowPopupEvent();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_DungeonToMain <>4__this;

        /*0xe5481c*/ <OnProcess>d__2(int <>1__state);
        /*0xe54848*/ void System.IDisposable.Dispose();
        /*0xe5484c*/ bool MoveNext();
        /*0xe54a38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe54a40*/ void System.Collections.IEnumerator.Reset();
        /*0xe54a80*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MainToBattleScene : LoadTask
{
    /*0xfb0ab4*/ LoadTask_MainToBattleScene();
    /*0xfb0ae0*/ void Destory();
    /*0xfb0ae4*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0b50*/ void HandlerShowPopupEvent();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MainToBattleScene <>4__this;

        /*0xe583d4*/ <OnProcess>d__2(int <>1__state);
        /*0xe58400*/ void System.IDisposable.Dispose();
        /*0xe58404*/ bool MoveNext();
        /*0xe58548*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58550*/ void System.Collections.IEnumerator.Reset();
        /*0xe58590*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MainToDungeon : LoadTask
{
    /*0x1c*/ int m_dungeonID;

    /*0xfb0c74*/ LoadTask_MainToDungeon(int dungeonID);
    /*0xfb0ca4*/ void Destory();
    /*0xfb0ca8*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0d14*/ void HandlerShowPopupEvent();

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MainToDungeon <>4__this;

        /*0xe58598*/ <OnProcess>d__3(int <>1__state);
        /*0xe585c4*/ void System.IDisposable.Dispose();
        /*0xe585c8*/ bool MoveNext();
        /*0xe58800*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58808*/ void System.Collections.IEnumerator.Reset();
        /*0xe58848*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MainToMazeScene : LoadTask
{
    /*0xfb0e84*/ LoadTask_MainToMazeScene();
    /*0xfb0eb0*/ void Destory();
    /*0xfb0eb4*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0f20*/ void HandlerShowPopupEvent();

    class <>c__DisplayClass2_0
    {
        /*0x10*/ bool isEnter;

        /*0xe58850*/ <>c__DisplayClass2_0();
        /*0xe58858*/ void <OnProcess>b__0();
        /*0xe58864*/ bool <OnProcess>b__1();
    }

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MainToMazeScene <>4__this;

        /*0xe5886c*/ <OnProcess>d__2(int <>1__state);
        /*0xe58898*/ void System.IDisposable.Dispose();
        /*0xe5889c*/ bool MoveNext();
        /*0xe58bf8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58c00*/ void System.Collections.IEnumerator.Reset();
        /*0xe58c40*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MazeToMain : LoadTask
{
    /*0xfb10bc*/ LoadTask_MazeToMain();
    /*0xfb10e8*/ void Destory();
    /*0xfb10ec*/ System.Collections.IEnumerator OnProcess();
    /*0xfb1158*/ void HandlerShowPopupEvent();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MazeToMain <>4__this;

        /*0xe58c48*/ <OnProcess>d__2(int <>1__state);
        /*0xe58c74*/ void System.IDisposable.Dispose();
        /*0xe58c78*/ bool MoveNext();
        /*0xe58e64*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58e6c*/ void System.Collections.IEnumerator.Reset();
        /*0xe58eac*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_StartToMainScene : LoadTask
{
    static /*0x0*/ System.Action OnEventSceneAnimationCall;
    /*0x1c*/ bool bIsUpdate;

    static /*0xfb1c10*/ LoadTask_StartToMainScene();
    static /*0xfb198c*/ void add_OnEventSceneAnimationCall(System.Action value);
    static /*0xfb1a80*/ void remove_OnEventSceneAnimationCall(System.Action value);
    /*0xfb1b74*/ LoadTask_StartToMainScene();
    /*0xfb1ba0*/ void Destory();
    /*0xfb1ba4*/ System.Collections.IEnumerator OnProcess();
    /*0xfb1c14*/ void <OnProcess>b__6_0();
    /*0xfb1cf4*/ void <OnProcess>b__6_2();
    /*0xfb1d00*/ bool <OnProcess>b__6_1();

    class <OnProcess>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_StartToMainScene <>4__this;

        /*0xe59b64*/ <OnProcess>d__6(int <>1__state);
        /*0xe59b90*/ void System.IDisposable.Dispose();
        /*0xe59b94*/ bool MoveNext();
        /*0xe59e30*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59e38*/ void System.Collections.IEnumerator.Reset();
        /*0xe59e78*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct AssetBundleSceneData
{
    /*0x10*/ AssetBundleSceneType sceneType;
    /*0x18*/ string sceneName;
    /*0x20*/ string localeKeyDesc;

    /*0xa85574*/ AssetBundleSceneData(AssetBundleSceneType _scene_type, string _name, string _locale_key_desc);
}

class LoadTask_Scene_AssetBundle : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<AssetBundleSceneData> sceneList;

    /*0xfb14f4*/ LoadTask_Scene_AssetBundle();
    /*0xfb1520*/ System.Collections.IEnumerator OnProcess();
    /*0xfb158c*/ void Destory();
    /*0xfb15e4*/ void AddSceneData(AssetBundleSceneType _scene_type, string _scene_name, string _locale_key);
    /*0xfb1634*/ void AddSceneData(AssetBundleSceneData data);

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_Scene_AssetBundle <>4__this;
        /*0x28*/ int <_load_scene_count>5__2;
        /*0x2c*/ float <_once_progress>5__3;
        /*0x30*/ int <n>5__4;
        /*0x38*/ AssetBundleSceneData <_data>5__5;

        /*0xe592d0*/ <OnProcess>d__2(int <>1__state);
        /*0xe592fc*/ void System.IDisposable.Dispose();
        /*0xe59300*/ bool MoveNext();
        /*0xe596b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe596b8*/ void System.Collections.IEnumerator.Reset();
        /*0xe596f8*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum ELoadSceneType
{
    LoadType_None = 0,
    LoadType_Name = 1,
    LoadType_Index = 2,
}

struct SLoadSceneData
{
    /*0x10*/ ELoadSceneType scene_type;
    /*0x18*/ string scene_name;
    /*0x20*/ int scene_index;
    /*0x28*/ string localeKey_desc;

    /*0xa8e470*/ SLoadSceneData(int _index, string _localeKey_desc);
    /*0xa8e4dc*/ SLoadSceneData(string _name, string _localeKey_desc);
}

class LoadTask_Scene : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<SLoadSceneData> sceneList;

    /*0xfb1290*/ LoadTask_Scene();
    /*0xfb12bc*/ System.Collections.IEnumerator OnProcess();
    /*0xfb1328*/ void Destory();
    /*0xfb1380*/ void AddSceneData(int sceneIndex, string localeKey);
    /*0xfb14a8*/ void AddSceneData(string sceneName, string localeKey);
    /*0xfb13cc*/ void AddSceneData(SLoadSceneData data);

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_Scene <>4__this;
        /*0x28*/ int <loadSceneCount>5__2;
        /*0x2c*/ int <n>5__3;

        /*0xe58eb4*/ <OnProcess>d__2(int <>1__state);
        /*0xe58ee0*/ void System.IDisposable.Dispose();
        /*0xe58ee4*/ bool MoveNext();
        /*0xe59280*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59288*/ void System.Collections.IEnumerator.Reset();
        /*0xe592c8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_Scene_Async : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<SLoadSceneData> sceneList;

    /*0xfb1728*/ LoadTask_Scene_Async();
    /*0xfb1754*/ System.Collections.IEnumerator OnProcess();
    /*0xfb17c0*/ void Destory();
    /*0xfb1818*/ void AddSceneData(int sceneIndex, string localeKey);
    /*0xfb1940*/ void AddSceneData(string sceneName, string localeKey);
    /*0xfb1864*/ void AddSceneData(SLoadSceneData data);

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_Scene_Async <>4__this;
        /*0x28*/ int <loadSceneCount>5__2;
        /*0x2c*/ float <beginProgress>5__3;
        /*0x30*/ float <maxProgress>5__4;
        /*0x38*/ UnityEngine.AsyncOperation <async>5__5;
        /*0x40*/ int <n>5__6;

        /*0xe59700*/ <OnProcess>d__2(int <>1__state);
        /*0xe5972c*/ void System.IDisposable.Dispose();
        /*0xe59730*/ bool MoveNext();
        /*0xe59b14*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59b1c*/ void System.Collections.IEnumerator.Reset();
        /*0xe59b5c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AuthManager : Singleton.Component.SingletonComponent<AuthManager>
{
    /*0xf8630c*/ AuthManager();
    /*0xf862fc*/ void AwakeInstance();
    /*0xf86300*/ bool InitInstance();
    /*0xf86308*/ void ReleaseInstance();
}

class GoogleSign
{
}

class MailManager : Singleton.Data.SingletonData<MailManager>
{
    static /*0x0*/ System.Action OnChangeAssetInfo;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMail> m_liMailList;
    /*0x28*/ int _nCurIndex;
    /*0x2c*/ int _nStartCount;
    /*0x30*/ int _nEndCount;
    /*0x38*/ PTShare.Define.SMail _nCurMailInfo;

    static /*0xde0818*/ MailManager();
    static /*0xddf7a4*/ void add_OnChangeAssetInfo(System.Action value);
    static /*0xddf898*/ void remove_OnChangeAssetInfo(System.Action value);
    /*0xde0760*/ MailManager();
    /*0xddf724*/ string get_UserToken();
    /*0xddf98c*/ bool InitInstance();
    /*0xddf994*/ void ReleaseInstance();
    /*0xddfa24*/ void Send_SearchMail(System.Action _callback);
    /*0xddfb5c*/ void Send_RemoveMail(int _mailid, System.Action _callback);
    /*0xddfcb0*/ void Send_RemoveMailAll(System.Action _callback);
    /*0xddfde8*/ void Send_TakeMail(int _mailid, System.Action<PTShare.Define.SProperty> _callback);
    /*0xddff30*/ void Send_TakeMailAll(System.Action<PTShare.Define.SProperty> _callback);
    /*0xde0068*/ System.Collections.Generic.List<PTShare.Define.SMail> GetMailList();
    /*0xde0070*/ bool GetEnableUseMail();
    /*0xde01a0*/ bool FindPossiableReceiveMail();
    /*0xde02d0*/ bool FindPossiableDeleteMail();
    /*0xde0400*/ void SortMail();
    /*0xde0530*/ int GetMailidSearchIndex(int _mailid);
    /*0xde0620*/ void ModifyRecvMail(int _mailid, bool _recv);
    /*0xde06d8*/ void UpdateNewMail(bool _enable);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe5c8fc*/ <>c__DisplayClass12_0();
        /*0xe5c904*/ void <Send_SearchMail>b__0(ServerProtocol.ResMailInbox _response);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ int _mailid;
        /*0x20*/ System.Action _callback;

        /*0xe5c9c8*/ <>c__DisplayClass13_0();
        /*0xe5c9d0*/ void <Send_RemoveMail>b__0(ServerProtocol.ResMailRemove _response);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe5ca68*/ <>c__DisplayClass14_0();
        /*0xe5ca70*/ void <Send_RemoveMailAll>b__0(ServerProtocol.ResMailRemoveAll _response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xe5cb94*/ <>c__DisplayClass15_0();
        /*0xe5cb9c*/ void <Send_TakeMail>b__0(ServerProtocol.ResMailTake _response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xe5cdf8*/ <>c__DisplayClass16_0();
        /*0xe5ce00*/ void <Send_TakeMailAll>b__0(ServerProtocol.ResMailTakeAll _response);
    }

    class <>c
    {
        static /*0x0*/ MailManager.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SMail> <>9__18_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SMail> <>9__19_0;
        static /*0x18*/ System.Predicate<PTShare.Define.SMail> <>9__20_0;
        static /*0x20*/ System.Comparison<PTShare.Define.SMail> <>9__21_0;

        static /*0xe5c768*/ <>c();
        /*0xe5c7c8*/ <>c();
        /*0xe5c7d0*/ bool <GetEnableUseMail>b__18_0(PTShare.Define.SMail x);
        /*0xe5c7f0*/ bool <FindPossiableReceiveMail>b__19_0(PTShare.Define.SMail x);
        /*0xe5c820*/ bool <FindPossiableDeleteMail>b__20_0(PTShare.Define.SMail x);
        /*0xe5c838*/ int <SortMail>b__21_0(PTShare.Define.SMail a, PTShare.Define.SMail b);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ int _mailid;

        /*0xe5d060*/ <>c__DisplayClass22_0();
        /*0xe5d068*/ bool <GetMailidSearchIndex>b__0(PTShare.Define.SMail x);
    }
}

enum TILE_TYPE
{
    NORMAL = 1,
    BATTLE = 2,
    REVIVAL = 3,
    HEAL = 4,
    MATE = 5,
    GOLDREWARD = 6,
    HEROEXPREWARD = 7,
    JEWELREWARD = 8,
    TICKETREWARD = 9,
    STARREWARD = 10,
    TIERSREWARD = 11,
    FINISH = 12,
    START = 13,
    NULL = 14,
}

class DefineMaze
{
    static /*0x0*/ System.DateTime MazeDefaultTime;
    static /*0x8*/ float ZOOM_MIN;
    static /*0xc*/ float ZOOM_MAX;
    static /*0x10*/ float WALK_IN_TIME;
    static /*0x14*/ float WALK_CENTER_TIME;
    static /*0x18*/ float WALK_OUT_TIME;
    static /*0x1c*/ float WALK_TILE_MOVE_TIME;
    static /*0x20*/ float HERO_WEIGHT;
    static /*0x24*/ float TILE_ROLLBACK_POWER;
    static /*0x28*/ float WALK_ANIM_START;
    static /*0x2c*/ int DICE_MAX_NUMBER;
    static /*0x30*/ float DICE_ROLLING_TIME;
    static /*0x34*/ int DICE_ROLLING_COUNT;
    static /*0x38*/ float TILE_LENGTH;
    static /*0x3c*/ float TILE_INTERVAL_X;
    static /*0x40*/ float TILE_INTERVAL_Y;
    static /*0x44*/ UnityEngine.Vector3 TILE_UP;
    static /*0x50*/ UnityEngine.Vector3 TILE_DOWN;
    static /*0x5c*/ UnityEngine.Vector3 TILE_RIGHT;
    static /*0x68*/ UnityEngine.Vector3 TILE_LEFT;
    static /*0x78*/ string NORMAL_TILE_NAME;
    static /*0x80*/ string BATTLE_TILE_NAME;
    static /*0x88*/ string HEAL_TILE_NAME;
    static /*0x90*/ string REVIVAL_TILE_NAME;
    static /*0x98*/ string MATE_TILE_NAME;
    static /*0xa0*/ string FINISH_TILE_NAME;
    static /*0xa8*/ string GOLD_TILE_NAME;
    static /*0xb0*/ string HEROEXP_TILE_NAME;
    static /*0xb8*/ string JEWEL_TILE_NAME;
    static /*0xc0*/ string TICKET_TILE_NAME;
    static /*0xc8*/ string STAR_TILE_NAME;
    static /*0xd0*/ string TIERS_TILE_NAME;
    static /*0xd8*/ string START_LEFT_TILE_NAME;
    static /*0xe0*/ string START_UP_TILE_NAME;
    static /*0xe8*/ string START_DOWN_TILE_NAME;
    static /*0xf0*/ string START_RIGHT_TILE_NAME;
    static /*0xf8*/ string TILE_OUTLINE_PASS_NAME;
    static /*0x100*/ string TILE_OUTLINE_DEST_NAME;
    static /*0x108*/ string DICE_NAME_DEFAULT;

    static /*0x11e77e4*/ DefineMaze();
    /*0x11e77dc*/ DefineMaze();

    enum MOVE_TYPE
    {
        UP = 0,
        DOWN = 1,
        RIGHT = 2,
        LEFT = 3,
        NULL = 4,
    }

    enum TILE_OUTLINE_TYPE
    {
        PASS = 0,
        DEST = 1,
        NULL = 2,
    }

    class MazeCourseData
    {
        /*0x10*/ int count;
        /*0x18*/ System.Collections.Generic.List<DefineMaze.MOVE_TYPE> moveTypeList;
        /*0x20*/ System.Collections.Generic.List<TILE_TYPE> tileTypeList;

        /*0x1078144*/ MazeCourseData();
        /*0x10780c8*/ void Clear();
    }
}

class MazeDiceImageEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_diceParent;
    /*0x20*/ AtlasImage m_diceImage;

    /*0xded320*/ MazeDiceImageEffect();
    /*0xded228*/ void ShowDice(int diceNumber);
    /*0xded300*/ void HideDice();
}

class MazeDiceSpineEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_diceSpineParent;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_diceSpine;
    /*0x28*/ ParticleBase m_particleFollow;
    /*0x30*/ Spine.Unity.BoneFollowerGraphic m_boneFollowerBody;
    /*0x38*/ Spine.Unity.BoneFollowerGraphic m_boneFollowerEffect;
    /*0x40*/ System.Collections.Generic.List<ParticleBase> m_poolObjects;
    /*0x48*/ float m_defalutTimeScale;
    /*0x50*/ System.Action OnDiceEffect02;
    /*0x58*/ System.Action OnDiceEnd;

    /*0xded680*/ MazeDiceSpineEffect();
    /*0xded328*/ void PlayDice(int diceNumber, float timeScale, System.Action callBackEffect02, System.Action callBackEnd);
    /*0xded378*/ System.Collections.IEnumerator CoRollingDice(int diceNumber);
    /*0xded3f4*/ void HandleEffectEvent(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xded614*/ System.Collections.IEnumerator CoPlayEffect02();

    class <CoRollingDice>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeDiceSpineEffect <>4__this;
        /*0x28*/ int diceNumber;
        /*0x2c*/ float <time>5__2;

        /*0xe5e318*/ <CoRollingDice>d__10(int <>1__state);
        /*0xe5e344*/ void System.IDisposable.Dispose();
        /*0xe5e348*/ bool MoveNext();
        /*0xe5e80c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5e814*/ void System.Collections.IEnumerator.Reset();
        /*0xe5e854*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayEffect02>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeDiceSpineEffect <>4__this;

        /*0xe5e100*/ <CoPlayEffect02>d__12(int <>1__state);
        /*0xe5e12c*/ void System.IDisposable.Dispose();
        /*0xe5e130*/ bool MoveNext();
        /*0xe5e2c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5e2d0*/ void System.Collections.IEnumerator.Reset();
        /*0xe5e310*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeItemNotify : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector3 m_itemAmountStartVector;
    /*0x24*/ UnityEngine.Vector3 m_itemAmountEndVector;
    /*0x30*/ UnityEngine.GameObject m_itemParent;
    /*0x38*/ UnityEngine.GameObject m_itemAmountParent;
    /*0x40*/ AtlasImage m_amountItemIcon;
    /*0x48*/ AtlasImage[] m_itemIcons;
    /*0x50*/ LocalizeString m_itemAmountText;

    /*0xdedf5c*/ MazeItemNotify();
    /*0xdede5c*/ void HideItem();
    /*0xdedea0*/ void PlayItemReward(UnityEngine.Vector3 heroLocalScale);
    /*0xdedecc*/ System.Collections.IEnumerator CoPlayItemReward(UnityEngine.Vector3 heroLocalScale);

    class <>c__DisplayClass9_0
    {
        /*0x10*/ UnityEngine.Vector3 heroLocalScale;

        /*0x10803c4*/ <>c__DisplayClass9_0();
        /*0x10803cc*/ void <CoPlayItemReward>b__0(AtlasImage _icon);
    }

    class <>c__DisplayClass9_1
    {
        /*0x10*/ TableData.TableData_Item item;

        /*0x108040c*/ <>c__DisplayClass9_1();
        /*0x1080414*/ void <CoPlayItemReward>b__6(AtlasImage _icon);
    }

    class <>c
    {
        static /*0x0*/ MazeItemNotify.<> <>9;
        static /*0x8*/ System.Action<AtlasImage> <>9__9_1;
        static /*0x10*/ System.Action<AtlasImage> <>9__9_2;
        static /*0x18*/ System.Action<AtlasImage> <>9__9_3;
        static /*0x20*/ System.Action<AtlasImage> <>9__9_4;
        static /*0x28*/ System.Action<AtlasImage> <>9__9_5;

        static /*0x1080158*/ <>c();
        /*0x10801b8*/ <>c();
        /*0x10801c0*/ void <CoPlayItemReward>b__9_1(AtlasImage _icon);
        /*0x108023c*/ void <CoPlayItemReward>b__9_2(AtlasImage _icon);
        /*0x10802b8*/ void <CoPlayItemReward>b__9_3(AtlasImage _icon);
        /*0x1080334*/ void <CoPlayItemReward>b__9_4(AtlasImage _icon);
        /*0x10803b0*/ void <CoPlayItemReward>b__9_5(AtlasImage _icon);
    }

    class <CoPlayItemReward>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.Vector3 heroLocalScale;
        /*0x30*/ MazeItemNotify <>4__this;

        /*0x1080494*/ <CoPlayItemReward>d__9(int <>1__state);
        /*0x10804c0*/ void System.IDisposable.Dispose();
        /*0x10804c4*/ bool MoveNext();
        /*0x1080c20*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1080c28*/ void System.Collections.IEnumerator.Reset();
        /*0x1080c68*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeBattleInfomationPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_descText;
    /*0x50*/ LocalizeString m_cpText;
    /*0x58*/ HeroSlotMaze[] m_heroMazes;
    /*0x60*/ ScrollContent_StageReward m_scrollContentStageReward;
    /*0x68*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0xdeb3bc*/ MazeBattleInfomationPopup();
    /*0xde9f38*/ void OnCreate();
    /*0xde9f3c*/ void OnDelete();
    /*0xde9f40*/ void OnEnter();
    /*0xdea01c*/ void OnFinish();
    /*0xdea020*/ void OnLeave();
    /*0xdea024*/ void OnStart();
    /*0xdea028*/ void OnExit();
    /*0xdea0a4*/ void InitMazeBattle(string titleKey, string infoKey, PTShare.Define.SProperty reward, System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0xdea258*/ void SetStageTitle(string titleKey);
    /*0xdea344*/ void SetStageInfo(string infoKey);
    /*0xdea430*/ void SetCP(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0xdea954*/ void InitOtherTeams(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0xdead80*/ void OnClick_BattleStart();
    /*0xdea58c*/ void InitRewardSetting(PTShare.Define.SProperty _rewards);
    /*0xdeb300*/ void HandlerTableStageReward(int _index, ItemTableRewardSlot _instance);
    /*0xdeaf90*/ void AddRewardCurrency(PTShare.Define.Currency currencyType, long amount);
    /*0xdeb044*/ void AddRewardItem(int tableId, long amount);
    /*0xdeb120*/ void AddRewardEquip(int tableId, long amount);
    /*0xdeb218*/ void AddRewardHero(int tableId, long amount);
    /*0xdeae44*/ void AddRewardResetPoint(string name, long amount);
}

class MazeBossInfoPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ ScrollContent_ItemInfoSlot m_scrollContentReward;
    /*0x50*/ ScrollContent_HeroSlot m_scrollContentHeroSlot;
    /*0x58*/ TabGroup m_tabGroup;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x68*/ ServerProtocol.ResMazeInfo m_data;
    /*0x70*/ MazeBossInfoPopup.TABTYPE m_tabType;

    /*0xdecadc*/ MazeBossInfoPopup();
    /*0xdeb9c0*/ void OnCreate();
    /*0xdeb9c4*/ void OnDelete();
    /*0xdeb9c8*/ void OnEnter();
    /*0xdeb9cc*/ void OnExit();
    /*0xdeba48*/ void OnFinish();
    /*0xdeba4c*/ void OnLeave();
    /*0xdebc1c*/ void OnStart();
    /*0xdebc20*/ void InitPopup(ServerProtocol.ResMazeInfo data, MazeBossInfoPopup.TABTYPE tabType);
    /*0xdebe90*/ void Refresh(MazeBossInfoPopup.TABTYPE tabType);
    /*0xdebed8*/ void SetTitle();
    /*0xdec02c*/ void SetHeroSlots();
    /*0xdec0c0*/ void SetRewards();
    /*0xdec52c*/ void AddPassPoint();
    /*0xdec660*/ void AddRewardResetPoint(string name, long amount);
    /*0xdebcbc*/ void BindEvent();
    /*0xdeba50*/ void RemoveEvent();
    /*0xdec7ac*/ void HandleItemInfoSlot(int index, ItemInfoSlot obj);
    /*0xdec868*/ void HandleHeroSlot(int index, HeroSlot obj);
    /*0xdeca54*/ void HandleTabChange(int tabType);
    /*0xdec9bc*/ PTShare.Define.SHero ConvertHero(PTShare.Define.SConditionHero source);

    enum TABTYPE
    {
        MIDDLE_BOSS = 0,
        BOSS = 1,
    }
}

class MazeDice : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_diceImage;
    /*0x20*/ int m_diceIndex;
    /*0x24*/ int m_diceNumber;
    /*0x28*/ System.Action<int> m_callBack;

    /*0xdecec4*/ MazeDice();
    /*0xdecd8c*/ void InitDice(int diceIndex, int number, System.Action<int> callBack);
    /*0xdece64*/ void OnClickDice();
}

class MazeDiceGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<MazeDice> m_diceList;

    /*0xded1b0*/ MazeDiceGroup();
    /*0xdececc*/ void InitDiceGroup(System.Action<int> callBack);

    class <>c
    {
        static /*0x0*/ MazeDiceGroup.<> <>9;
        static /*0x8*/ System.Action<MazeDice> <>9__1_0;

        static /*0xe5e068*/ <>c();
        /*0xe5e0c8*/ <>c();
        /*0xe5e0d0*/ void <InitDiceGroup>b__1_0(MazeDice data);
    }
}

class MazeHeroListPopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotMaze m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<ConditionHeroData> m_mazeHeroDataList;

    /*0xdede54*/ MazeHeroListPopup();
    /*0xded700*/ void OnCreate();
    /*0xded704*/ void OnDelete();
    /*0xded708*/ void OnEnter();
    /*0xded85c*/ void OnFinish();
    /*0xded860*/ void OnLeave();
    /*0xded9b8*/ void OnStart();
    /*0xded9bc*/ void OnExit();
    /*0xdeda38*/ void InitializeMazePopup();
    /*0xdedaa0*/ void ShowScrollContent();
    /*0xdedb38*/ void HandleScrollContent(int index, HeroSlotMaze obj);
    /*0xdedd8c*/ void HandleCallBack(PTShare.Define.SHero sHero);
    /*0xded780*/ void BindEvent();
    /*0xded8e4*/ void DeleteEvent();

    class <>c__DisplayClass11_0
    {
        /*0x10*/ MazeHeroListPopup <>4__this;
        /*0x18*/ int index;

        /*0x107ffd0*/ <>c__DisplayClass11_0();
        /*0x107ffd8*/ void <HandleScrollContent>b__0();
    }
}

class MazeManager : Singleton.Component.SingletonComponent<MazeManager>
{
    static /*0x0*/ System.Action<TILE_TYPE> OnShowEffect;
    static /*0x8*/ System.Action<int> OnDiceResponse;
    static /*0x10*/ System.Action<int> OnDiceResponseCash;
    static /*0x18*/ System.Action<int> OnJoinTile;
    static /*0x20*/ System.Action OnRandomTileReward;
    static /*0x28*/ System.Action OnNewMazeCreate;
    /*0x28*/ System.Collections.Generic.List<ConditionHeroData> m_mazeHeroDataList;
    /*0x30*/ DefineMaze.MazeCourseData m_mazeCourseData;
    /*0x38*/ int m_heroPositionIndex;
    /*0x3c*/ int m_mazeStep;
    /*0x40*/ int m_mazeCourseId;
    /*0x48*/ int[] m_mazeTileIds;
    /*0x50*/ UnityEngine.Vector3 m_startPoint;
    /*0x5c*/ bool m_isTileDone;
    /*0x5d*/ bool m_isMazeClear;
    /*0x60*/ long m_selectDiceCost;
    /*0x68*/ string m_prevSceneName;
    /*0x70*/ bool m_isExpireMaze;
    /*0x78*/ System.Collections.Generic.List<int> m_diceList;
    /*0x80*/ System.Collections.Generic.List<int> m_history;
    /*0x88*/ int m_enemyIndex;
    /*0x8c*/ bool m_isShowMazeAwakeEffect;
    /*0x8d*/ bool m_isShowMazeClearEffect;
    /*0x8e*/ bool m_isShowBattleEffect;
    /*0x8f*/ bool m_waitFinishEffect;
    /*0x90*/ bool m_auto;
    /*0x98*/ PTShare.Define.SProperty m_rewardTileResponse;
    /*0xa0*/ PTShare.Define.SProperty m_battleTileRewardResponse;
    /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> m_mateCandiDateList;
    /*0xb0*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_playerBattleHeroList;
    /*0xb8*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_enemyBattleHeroList;
    /*0xc0*/ bool m_fastMaze;

    static /*0xdf19c0*/ MazeManager();
    /*0xdf1884*/ MazeManager();
    /*0xdedf78*/ System.Collections.Generic.List<ConditionHeroData> GetMazeHeroDataList();
    /*0xdedf80*/ DefineMaze.MazeCourseData GetMazeCourseData();
    /*0xdedf88*/ UnityEngine.Vector3 GetStartPoint();
    /*0xdedf94*/ bool GetIsTileDone();
    /*0xdedf9c*/ bool MazeIsClose();
    /*0xdedfa4*/ bool GetIsExpireMaze();
    /*0xdedfac*/ int GetMazeStepNumber();
    /*0xdedfb4*/ string GetPrevSceneName();
    /*0xdedfbc*/ PTShare.Define.SProperty GetReward();
    /*0xdedfc4*/ PTShare.Define.SProperty GetBattleReward();
    /*0xdedfcc*/ int GetHeroPositionIndex();
    /*0xdedff4*/ long GetSelectDiceCost();
    /*0xdedffc*/ bool GetIsUsePerfume();
    /*0xdee0e4*/ bool GetIsShowMazeClearEffect();
    /*0xdee0ec*/ bool GetIsShowBattleEffect();
    /*0xdee0f4*/ bool GetIsShowMazeAwakeEffect();
    /*0xdee0fc*/ TILE_TYPE GetTileType(int tileIndex);
    /*0xdee190*/ TILE_TYPE GetCurrTileType();
    /*0xdee198*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> GetMateCandidateList();
    /*0xdee1a0*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> GetPlayerBattleHeroList();
    /*0xdee1a8*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> GetEnemyBattleHeroList();
    /*0xdee1b0*/ System.Collections.Generic.List<int> GetDiceList();
    /*0xdead74*/ TableData.TableData_Mazebattle GetMazeBattle();
    /*0xded160*/ int GetDiceCount();
    /*0xdee1b8*/ bool IsMoveHistory(int index);
    /*0xdee21c*/ bool GetAuto();
    /*0xdee224*/ void SetAuto(bool enable);
    /*0xdee230*/ PTShare.Define.SHero FindSHero(int heroId);
    /*0xdee32c*/ bool IsExistHero(int heroId);
    /*0xdee374*/ ConditionHeroData FindMazeHeroData(int heroId);
    /*0xdee464*/ bool GetFastMaze();
    /*0xdea238*/ bool IsFinishBattle();
    /*0xdee46c*/ bool SetFastMaze();
    /*0xdee488*/ void AwakeInstance();
    /*0xdee48c*/ bool InitInstance();
    /*0xdee6e0*/ void ReleaseInstance();
    /*0xdee9d0*/ void SetHeroCondition(int heroId, int hp, int mp);
    /*0xdeead8*/ void SetMazeClearEffect(bool isShow);
    /*0xdeeae4*/ void SetMazeBattleEffect(bool isShow);
    /*0xdeeaf0*/ void SetMazeAwakeEffect(bool isShow);
    /*0xdeeafc*/ void SetPrevSceneName(string sceneName);
    /*0xdeeb04*/ void Send_RequestMazeEnter(System.Action callBack);
    /*0xdeee10*/ void Send_DiceRoll(System.Action<int> callBack);
    /*0xdeef9c*/ void Send_DiceRequest(int diceNumber, bool isCash);
    /*0xdef150*/ void Send_MazeInfo(System.Action<ServerProtocol.ResMazeInfo> callBack);
    /*0xdef2d8*/ void Send_MazeMateRequest(int tabledId);
    /*0xdef440*/ void Send_MateReset(System.Action callBack);
    /*0xdef5cc*/ void Send_UsePerfume();
    /*0xdef724*/ void Send_BeginBattle(string heroIds, System.Action<int> callBack_WithRandomSeed);
    /*0xdef8c0*/ void Send_FinishBattle(bool isWin, string playData, long lcp, string HpMps, System.Action callBack);
    /*0xdefa90*/ void Send_RestoreRequest(bool confirm);
    /*0xdefc7c*/ void Send_ReviveRequest(bool confirm);
    /*0xdefe68*/ void HandleRestore(bool confirm);
    /*0xdefe70*/ void HandleRevive(bool confirm);
    /*0xdefe78*/ void HandleOnJoinTile(int tileIndex);
    /*0xdf06ec*/ void HandleRefreshHeroLevel();
    /*0xdf0864*/ void HandleRefreshHeroLevelSingle(PTShare.Define.SHero sHero);
    /*0xdf0964*/ void HandleOnEndFinishEffect();
    /*0xdf096c*/ void InitMapData(int mazeID);
    /*0xdf0c28*/ void PushMoveType(DefineMaze.MOVE_TYPE moveType, TILE_TYPE tileType, int count);
    /*0xdf0cf8*/ void UpdateTileType(TILE_TYPE tileType, int index);
    /*0xdf0d98*/ PTShare.Define.SHero ConvertSMateCandidateToSHero(PTShare.Define.SMateCandidate sMateCandidate);
    /*0xdf0f98*/ void AddMate(PTShare.Define.SMate newMate);
    /*0xdf0ef4*/ PTShare.Define.SEquip FindMateEquipItem(int tableId, int equipGrade, PTShare.Define.EquipParts equipParts);
    /*0xdf12c4*/ void UpdateHeroList(System.Collections.Generic.List<PTShare.Define.SMate> mateList);
    /*0xdf14e8*/ void UpdateHeroConditions(System.Collections.Generic.List<PTShare.Define.SCondition> conditions);
    /*0xdeec9c*/ void BindHeroManagePopupEvent();
    /*0xdee4a4*/ void BindEvent();
    /*0xdee6e4*/ void DeleteEvent();
    /*0xdefc34*/ string FindHealPercent();
    /*0xdefe20*/ string FindRevivalPercent();
    /*0xdf11a0*/ void SortHeroList();
    /*0xdf16c4*/ void SortDice();
    /*0xdf180c*/ System.Collections.IEnumerator CoWaitBossClearEffectInitMaze(ServerProtocol.ResMazeFinish_Victory instance);
    /*0xdf1658*/ System.Collections.IEnumerator CoExpireMaze();
    /*0xdf19c4*/ void <Send_MazeMateRequest>b__77_0(ServerProtocol.ResMazeMate instance);
    /*0xdf19f8*/ void <Send_UsePerfume>b__79_0(ServerProtocol.ResMazeItem instance);
    /*0xdf1b88*/ void <HandleRefreshHeroLevel>b__87_0(PTShare.Define.SHero sHero);

    class <>c__DisplayClass59_0
    {
        /*0x10*/ int heroId;

        /*0x1080e04*/ <>c__DisplayClass59_0();
        /*0x1080e0c*/ bool <FindSHero>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ int heroId;

        /*0x1080e3c*/ <>c__DisplayClass61_0();
        /*0x1080e44*/ bool <FindMazeHeroData>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass68_0
    {
        /*0x10*/ int heroId;

        /*0x1080e74*/ <>c__DisplayClass68_0();
        /*0x1080e7c*/ bool <SetHeroCondition>b__0(ConditionHeroData _hero);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1080eac*/ <>c__DisplayClass73_0();
        /*0x1080eb4*/ void <Send_RequestMazeEnter>b__0(ServerProtocol.ResMazeEnter instance);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action<int> callBack;

        /*0x1081200*/ <>c__DisplayClass74_0();
        /*0x1081208*/ void <Send_DiceRoll>b__0(ServerProtocol.ResMazeRoll instance);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ bool isCash;
        /*0x1c*/ int diceNumber;

        /*0x10812cc*/ <>c__DisplayClass75_0();
        /*0x10812d4*/ void <Send_DiceRequest>b__0(ServerProtocol.ResMazeDice instance);
    }

    class <>c
    {
        static /*0x0*/ MazeManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__75_1;
        static /*0x10*/ System.Comparison<ConditionHeroData> <>9__103_0;
        static /*0x18*/ System.Func<int, int> <>9__104_0;

        static /*0x1080c70*/ <>c();
        /*0x1080cd0*/ <>c();
        /*0x1080cd8*/ void <Send_DiceRequest>b__75_1(PTShare.Define.SItem m);
        /*0x1080d60*/ int <SortHeroList>b__103_0(ConditionHeroData a, ConditionHeroData b);
        /*0x1080dfc*/ int <SortDice>b__104_0(int o);
    }

    class <>c__DisplayClass76_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResMazeInfo> callBack;

        /*0x10818e0*/ <>c__DisplayClass76_0();
        /*0x10818e8*/ void <Send_MazeInfo>b__0(ServerProtocol.ResMazeInfo instance);
    }

    class <>c__DisplayClass78_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1081958*/ <>c__DisplayClass78_0();
        /*0x1081960*/ void <Send_MateReset>b__0(ServerProtocol.ResMazeMateReset instance);
    }

    class <>c__DisplayClass80_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action<int> callBack_WithRandomSeed;

        /*0x1081a28*/ <>c__DisplayClass80_0();
        /*0x1081a30*/ void <Send_BeginBattle>b__0(ServerProtocol.ResMazeBegin instance);
    }

    class <>c__DisplayClass81_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ bool isWin;
        /*0x20*/ string HpMps;
        /*0x28*/ System.Action callBack;

        /*0x1081bdc*/ <>c__DisplayClass81_0();
        /*0x1081be4*/ void <Send_FinishBattle>b__0(ServerProtocol.ResMazeFinish instance);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x1082044*/ <>c__DisplayClass87_0();
        /*0x108204c*/ bool <HandleRefreshHeroLevel>b__1(ConditionHeroData mazeHero);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x1082084*/ <>c__DisplayClass88_0();
        /*0x108208c*/ bool <HandleRefreshHeroLevelSingle>b__0(ConditionHeroData mazeHero);
    }

    class <CoWaitBossClearEffectInitMaze>d__105 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ServerProtocol.ResMazeFinish_Victory instance;
        /*0x28*/ MazeManager <>4__this;

        /*0x10823dc*/ <CoWaitBossClearEffectInitMaze>d__105(int <>1__state);
        /*0x1082408*/ void System.IDisposable.Dispose();
        /*0x108240c*/ bool MoveNext();
        /*0x1082680*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082688*/ void System.Collections.IEnumerator.Reset();
        /*0x10826c8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoExpireMaze>d__106 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeManager <>4__this;

        /*0x10820c4*/ <CoExpireMaze>d__106(int <>1__state);
        /*0x10820f0*/ void System.IDisposable.Dispose();
        /*0x10820f4*/ bool MoveNext();
        /*0x108238c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082394*/ void System.Collections.IEnumerator.Reset();
        /*0x10823d4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeMatePopup : GuiBase
{
    /*0x40*/ HeroSlotInventory[] m_mateSlots;
    /*0x48*/ LocalizeString[] m_cpTexts;
    /*0x50*/ int m_selectedHeroTableId;

    /*0xdf27a0*/ MazeMatePopup();
    /*0xdf1f6c*/ void OnCreate();
    /*0xdf1f70*/ void OnDelete();
    /*0xdf1f74*/ void OnEnter();
    /*0xdf1fe0*/ void OnFinish();
    /*0xdf1fe4*/ void OnLeave();
    /*0xdf1fe8*/ void OnStart();
    /*0xdf1fec*/ void OnExit();
    /*0xdf0400*/ void InitializeMatePopup();
    /*0xdf2068*/ bool HandleClickMate(PTShare.Define.SHero sHero, bool bSelected, bool bShaded, long lPlayerID);
    /*0xdf2148*/ void OnClickSelect();
    /*0xdf23f4*/ void OnClickSelectAuto();
    /*0xdf2448*/ void OnClickReset();
    /*0xdf27b0*/ void <OnClickReset>b__14_0(bool _result);
    /*0xdf2878*/ void <OnClickReset>b__14_1();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x10826d0*/ <>c__DisplayClass10_0();
        /*0x10826d8*/ void <InitializeMatePopup>b__0();
    }
}

class MazePerfumePopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotMaze m_scrollContent;
    /*0x48*/ AtlasImage m_perfumeIcon;
    /*0x50*/ LocalizeString m_perfumeAmountText;
    /*0x58*/ LocalizeString m_perfumeDesc;
    /*0x60*/ LocalizeString m_emptyText;
    /*0x68*/ System.Collections.Generic.List<ConditionHeroData> m_mazeHeroDataList;

    /*0xdf3854*/ MazePerfumePopup();
    /*0xdf287c*/ void OnCreate();
    /*0xdf2880*/ void OnDelete();
    /*0xdf28d4*/ void OnEnter();
    /*0xdf2a28*/ void OnFinish();
    /*0xdf2a2c*/ void OnLeave();
    /*0xdf2b84*/ void OnStart();
    /*0xdf2b88*/ void OnExit();
    /*0xdf2c04*/ void InitializeMazePopup();
    /*0xdf2da4*/ void InitializePerfumeTargetList();
    /*0xdf3028*/ void UpdatePerfume();
    /*0xdf3210*/ void ShowScrollContent();
    /*0xdf32a8*/ void HandleScrollContent(int index, HeroSlotMaze obj);
    /*0xdf294c*/ void BindEvent();
    /*0xdf2ab0*/ void DeleteEvent();
    /*0xdf34a0*/ void OnClickActive();

    class <>c__DisplayClass17_0
    {
        /*0x10*/ MazePerfumePopup <>4__this;
        /*0x18*/ int index;

        /*0x10827a4*/ <>c__DisplayClass17_0();
        /*0x10827ac*/ void <HandleScrollContent>b__0();
    }
}

class MazePopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_infoText;
    /*0x50*/ UnityEngine.GameObject m_leftBtnObject;
    /*0x58*/ System.Action<bool> m_rightButtonEvent;

    /*0xdf3a90*/ MazePopup();
    /*0xdf38cc*/ void OnCreate();
    /*0xdf38d0*/ void OnDelete();
    /*0xdf38d4*/ void OnEnter();
    /*0xdf3940*/ void OnFinish();
    /*0xdf3944*/ void OnLeave();
    /*0xdf3948*/ void OnStart();
    /*0xdf394c*/ void OnExit();
    /*0xdf02b8*/ void InitializeMazePopup(string titleKey, string infoKey, System.Action<bool> rightButtonEvent, bool isShowCancelBtn, string[] infoParam);
    /*0xdf39c8*/ void OnClickLeftButton();
    /*0xdf3a2c*/ void OnClickRightButton();
}

class MazeSelectDicePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_selectDiceEffectObject;
    /*0x48*/ AtlasImage m_priceIconImage;
    /*0x50*/ AtlasImage m_playerPriceIconImage;
    /*0x58*/ LocalizeString m_pirceAmountText;
    /*0x60*/ LocalizeString m_playerAmountText;
    /*0x68*/ LocalizeString m_selectText;
    /*0x70*/ UnityEngine.GameObject[] m_selectDiceArray;
    /*0x78*/ int m_selectDiceNumber;
    /*0x7c*/ bool m_isEnough;
    /*0x80*/ Rewards m_buyValue;

    /*0xdf44b8*/ MazeSelectDicePopup();
    /*0xdf3a98*/ void OnCreate();
    /*0xdf3a9c*/ void OnDelete();
    /*0xdf3aa0*/ void OnEnter();
    /*0xdf3b0c*/ void OnFinish();
    /*0xdf3b10*/ void OnLeave();
    /*0xdf3b88*/ void OnExit();
    /*0xdf3c04*/ void OnStart();
    /*0xdf3c08*/ void InitializeDicePopup();
    /*0xdf3d50*/ void SelectDice(int diceNumber);
    /*0xdf3e5c*/ void UpdateEnough(PTShare.Define.Currency currencyType, long buyAmount);
    /*0xdf3e90*/ void UpdatePlayerAmount(PTShare.Define.Currency currencyType);
    /*0xdf3f4c*/ void UpdatePriceCurrency(PTShare.Define.Currency currencyType, long buyAmount);
    /*0xdf4098*/ void OnClickSelectDice(int diceNumber);
    /*0xdf409c*/ void OnClickBuy();
    /*0xdf44c0*/ void <OnClickBuy>b__23_0(bool _result);
}

class MazeTileObject : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string[] OUTLINE_PARTICLE_NAME;
    static /*0x8*/ string[] PUSH_PARTICLE_NAME;
    /*0x18*/ AtlasImage m_tileImage;
    /*0x20*/ AtlasImage m_tileShaderImage;
    /*0x28*/ AtlasImage m_iconImage;
    /*0x30*/ AtlasImage m_iconShadow;
    /*0x38*/ ShaderChanger m_shaderChanger;
    /*0x40*/ UnityEngine.GameObject m_particleParent;
    /*0x48*/ UnityEngine.GameObject m_iconParent;
    /*0x50*/ UnityEngine.CanvasGroup m_tileObjectParent;
    /*0x58*/ int m_mazeIndex;
    /*0x5c*/ float m_mazeHeight;
    /*0x60*/ DefineMaze.MOVE_TYPE m_mazeMoveType;
    /*0x64*/ TILE_TYPE m_mazeTileType;
    /*0x68*/ DefineMaze.TILE_OUTLINE_TYPE m_tileOutLineType;
    /*0x6c*/ UnityEngine.Vector3 m_originalLocalPosition;
    /*0x78*/ UnityEngine.Coroutine m_iconCoroutine;

    static /*0xdf5d60*/ MazeTileObject();
    /*0xdf5d44*/ MazeTileObject();
    /*0xdf454c*/ void ClearTile();
    /*0xdf4988*/ void InitializedTile(int mazeIndex, DefineMaze.MOVE_TYPE moveType, TILE_TYPE tileType);
    /*0xdf5288*/ void SetStartTile(DefineMaze.MOVE_TYPE nextMoveType);
    /*0xdf53e8*/ DefineMaze.MOVE_TYPE GetMoveType();
    /*0xdf53f0*/ TILE_TYPE GetTileType();
    /*0xdf53f8*/ float GetHeight();
    /*0xdf5400*/ void SetTileType(TILE_TYPE tileType);
    /*0xdf470c*/ void SetTileObjectParent(UnityEngine.GameObject target);
    /*0xdf5408*/ void AddTileObject(UnityEngine.GameObject target);
    /*0xdf554c*/ void ShowTileObject(float time);
    /*0xdf559c*/ void HideTileObject(float time);
    /*0xdf4b18*/ void SetIcon(bool isEnable);
    /*0xdf4878*/ void SetParticleParent(UnityEngine.GameObject target);
    /*0xdf55ec*/ void ShowOutLineTile(DefineMaze.TILE_OUTLINE_TYPE outlineType, UnityEngine.GameObject target);
    /*0xdf5124*/ void ReturnParticles();
    /*0xdf5768*/ void SetCloseRoute();
    /*0xdf4c3c*/ void SetColorTile(UnityEngine.Color color);
    /*0xdf5214*/ void UpdateIcon();
    /*0xdf5818*/ void RequestAwake(float time);
    /*0xdf5a0c*/ void RequestAwakeTileDown(float time);
    /*0xdf5ab4*/ void RequestWlalk(float inTime, float centerTime, float outTime);
    /*0xdf5b70*/ void RequestWlalkIn(float inTime, float centerTime);
    /*0xdf5c20*/ void RequestWlalkOut(float outTime);
    /*0xdf58a4*/ System.Collections.IEnumerator AwakeEffect(float time);
    /*0xdf598c*/ System.Collections.IEnumerator AwakeShaderBlack(float waitTime, float showTime);
    /*0xdf5920*/ System.Collections.IEnumerator AwakeShaderEffect();
    /*0xdf5ae0*/ System.Collections.IEnumerator WalkUpdate(float inTime, float centerTime, float outTime);
    /*0xdf5a38*/ System.Collections.IEnumerator AwakeTileDown(float centerTime);
    /*0xdf5b9c*/ System.Collections.IEnumerator WalkIn(float inTime, float centerTime);
    /*0xdf5c4c*/ System.Collections.IEnumerator WalkOut(float outTime);
    /*0xdf5cc8*/ System.Collections.IEnumerator CoPlayPushParticle(DefineMaze.TILE_OUTLINE_TYPE type);
    /*0xdf4c5c*/ void UpdateTileType();
    /*0xdf57ac*/ System.Collections.IEnumerator CoIconUpdate();

    class <AwakeEffect>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float time;
        /*0x2c*/ UnityEngine.Vector3 <end>5__2;

        /*0x108292c*/ <AwakeEffect>d__40(int <>1__state);
        /*0x1082958*/ void System.IDisposable.Dispose();
        /*0x108295c*/ bool MoveNext();
        /*0x1082b0c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082b14*/ void System.Collections.IEnumerator.Reset();
        /*0x1082b54*/ object System.Collections.IEnumerator.get_Current();
    }

    class <AwakeShaderBlack>d__41 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float waitTime;
        /*0x2c*/ float showTime;

        /*0x1082b5c*/ <AwakeShaderBlack>d__41(int <>1__state);
        /*0x1082b88*/ void System.IDisposable.Dispose();
        /*0x1082b8c*/ bool MoveNext();
        /*0x1082cac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082cb4*/ void System.Collections.IEnumerator.Reset();
        /*0x1082cf4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <AwakeShaderEffect>d__42 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float <speed>5__2;
        /*0x2c*/ float <t>5__3;

        /*0x1082cfc*/ <AwakeShaderEffect>d__42(int <>1__state);
        /*0x1082d28*/ void System.IDisposable.Dispose();
        /*0x1082d2c*/ bool MoveNext();
        /*0x1082f84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082f8c*/ void System.Collections.IEnumerator.Reset();
        /*0x1082fcc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <WalkUpdate>d__43 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float inTime;
        /*0x2c*/ float centerTime;
        /*0x30*/ float outTime;

        /*0x1083c28*/ <WalkUpdate>d__43(int <>1__state);
        /*0x1083c54*/ void System.IDisposable.Dispose();
        /*0x1083c58*/ bool MoveNext();
        /*0x1083d1c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083d24*/ void System.Collections.IEnumerator.Reset();
        /*0x1083d64*/ object System.Collections.IEnumerator.get_Current();
    }

    class <AwakeTileDown>d__44 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float centerTime;

        /*0x1082fd4*/ <AwakeTileDown>d__44(int <>1__state);
        /*0x1083000*/ void System.IDisposable.Dispose();
        /*0x1083004*/ bool MoveNext();
        /*0x1083170*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083178*/ void System.Collections.IEnumerator.Reset();
        /*0x10831b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <WalkIn>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float inTime;
        /*0x28*/ MazeTileObject <>4__this;
        /*0x30*/ float centerTime;
        /*0x34*/ UnityEngine.Vector3 <origPosition>5__2;
        /*0x40*/ UnityEngine.Vector3 <currPosition>5__3;
        /*0x4c*/ float <time>5__4;

        /*0x1083714*/ <WalkIn>d__45(int <>1__state);
        /*0x1083740*/ void System.IDisposable.Dispose();
        /*0x1083744*/ bool MoveNext();
        /*0x108396c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083974*/ void System.Collections.IEnumerator.Reset();
        /*0x10839b4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <WalkOut>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float outTime;
        /*0x28*/ MazeTileObject <>4__this;
        /*0x30*/ UnityEngine.Vector3 <origPosition>5__2;
        /*0x3c*/ UnityEngine.Vector3 <currPosition>5__3;

        /*0x10839bc*/ <WalkOut>d__46(int <>1__state);
        /*0x10839e8*/ void System.IDisposable.Dispose();
        /*0x10839ec*/ bool MoveNext();
        /*0x1083bd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083be0*/ void System.Collections.IEnumerator.Reset();
        /*0x1083c20*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayPushParticle>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DefineMaze.TILE_OUTLINE_TYPE type;
        /*0x28*/ MazeTileObject <>4__this;
        /*0x30*/ ParticleBase <obj>5__2;

        /*0x1083460*/ <CoPlayPushParticle>d__47(int <>1__state);
        /*0x108348c*/ void System.IDisposable.Dispose();
        /*0x1083490*/ bool MoveNext();
        /*0x10836c4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10836cc*/ void System.Collections.IEnumerator.Reset();
        /*0x108370c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoIconUpdate>d__49 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;

        /*0x10831c0*/ <CoIconUpdate>d__49(int <>1__state);
        /*0x10831ec*/ void System.IDisposable.Dispose();
        /*0x10831f0*/ bool MoveNext();
        /*0x1083410*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083418*/ void System.Collections.IEnumerator.Reset();
        /*0x1083458*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeWindow : GuiBase
{
    static int ZOOM_FINGER_COUNT = 2;
    static float m_heroTimeScale = 1;
    static /*0x0*/ System.Action OnEndFinishEffect;
    static /*0x8*/ System.Action OnRequestEscape;
    static /*0x10*/ System.Action OnResetIcon;
    /*0x40*/ MazeTileObject m_mazeTilePrefab;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_mazeResetText;
    /*0x58*/ UnityEngine.UI.Text m_bossLeftCountText;
    /*0x60*/ UnityEngine.UI.ScrollRect m_mazeScrollRect;
    /*0x68*/ TweenImageColor m_fadeTween;
    /*0x70*/ UnityEngine.GameObject m_mazeParent;
    /*0x78*/ UnityEngine.GameObject m_mazeCamera;
    /*0x80*/ ParticleBase[] m_mazeParticles;
    /*0x88*/ UnityEngine.GameObject m_tileParticleParent;
    /*0x90*/ UnityEngine.UI.Text[] m_tileNumbers;
    /*0x98*/ UnityEngine.CanvasGroup m_tileNumberParent;
    /*0xa0*/ UnityEngine.GameObject m_tileObjectParent;
    /*0xa8*/ AtlasImage m_enemyFlagPrefab;
    /*0xb0*/ AtlasImage m_bossFlagPrefab;
    /*0xb8*/ UnityEngine.GameObject m_heroParent;
    /*0xc0*/ Spine.Unity.SkeletonGraphic m_heroCharacter;
    /*0xc8*/ Spine.Unity.SkeletonGraphic m_effectSpine;
    /*0xd0*/ UnityEngine.GameObject m_enemyParent;
    /*0xd8*/ Spine.Unity.SkeletonGraphic m_enemyCharacter;
    /*0xe0*/ UnityEngine.GameObject m_mazeClearObject;
    /*0xe8*/ ParticleBase m_mazeClearParticle;
    /*0xf0*/ MazeDiceSpineEffect m_mazeDiceSpineEffect;
    /*0xf8*/ MazeDiceImageEffect m_mazeDiceImageEffect;
    /*0x100*/ MazeItemNotify m_mazeItemEffect;
    /*0x108*/ AtlasImage m_perfumeButtonIcon;
    /*0x110*/ AtlasImage m_heroButtonIcon;
    /*0x118*/ AtlasImage m_selectDiceButtonIcon;
    /*0x120*/ AtlasImage m_randomDiceButtonIcon;
    /*0x128*/ float m_fastValue;
    /*0x130*/ AtlasImage m_fastImage;
    /*0x138*/ UnityEngine.GameObject m_fastObject;
    /*0x140*/ MazeDiceGroup m_diceGroup;
    /*0x148*/ System.Action m_onEffectEndCallback;
    /*0x150*/ System.Action m_onCharacterAnimEndCallback;
    /*0x158*/ System.Collections.Generic.List<MazeTileObject> m_mazeTileList;
    /*0x160*/ UnityEngine.Rect m_minmax;
    /*0x170*/ UnityEngine.Vector3 m_heroLeftLook;
    /*0x17c*/ UnityEngine.Vector3 m_heroRightLook;
    /*0x188*/ bool m_waitDice;
    /*0x18c*/ float m_zoomValue;
    /*0x190*/ bool m_fast;
    /*0x191*/ bool m_isSlime;
    /*0x198*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0x1a0*/ UnityEngine.Coroutine m_timerCoroutine;
    /*0x1a8*/ UnityEngine.Coroutine m_autoCoroutine;

    static /*0xdfba44*/ MazeWindow();
    /*0xdfb970*/ MazeWindow();
    /*0xdf5f10*/ void OnCreate();
    /*0xdf5f14*/ void OnDelete();
    /*0xdf6378*/ void OnEnter();
    /*0xdf6b04*/ void OnFinish();
    /*0xdf6b08*/ void OnLeave();
    /*0xdf6c4c*/ void OnStart();
    /*0xdf6c50*/ void OnExit();
    /*0xdf678c*/ void InitMaze();
    /*0xdf6e6c*/ void CreateMaze();
    /*0xdf830c*/ void SortTiles();
    /*0xdf84a4*/ System.Collections.IEnumerator CoLateSortObjects();
    /*0xdf81e8*/ System.Collections.IEnumerator CoAuto();
    /*0xdf8884*/ void UpdateSortObjects();
    /*0xdf6b30*/ void ClearMaze();
    /*0xdf8510*/ void SetScrollRectField();
    /*0xdf8254*/ void UpdateMinMaxWindowSize(UnityEngine.Vector3 checker);
    /*0xdf7618*/ void UpdateTitle();
    /*0xdf7adc*/ void UpdateMazeResetTime();
    /*0xdf7728*/ void UpdateBossLeftStep(int currentStep);
    /*0xdf8cb4*/ int GetLeftStep(int currentStep);
    /*0xdf8e60*/ void UpdateEnemyCharacter(int tableid, int grade);
    /*0xdf77c0*/ void UpdateHeroCharacter();
    /*0xdf8fdc*/ void UpdateEffectAnim(string key, string animName, float timeScale);
    /*0xdf7960*/ void UpdateCharacterAnim(Spine.Unity.SkeletonGraphic target, string animName, bool isLoop, float timeScale);
    /*0xdf8068*/ void UpdateHeroLook(MazeTileObject destTile);
    /*0xdf934c*/ void UpdateRouteTileOutline(int startIndex, int endIndex);
    /*0xdf7eac*/ void UpdateCloseRoute();
    /*0xdf6db8*/ void UpdateZoom();
    /*0xdf7f64*/ void UpdateFastIcon();
    /*0xdf817c*/ System.Collections.IEnumerator CoPlayEnterEffect();
    /*0xdf9440*/ System.Collections.IEnumerator CoPlayEnterTheStage();
    /*0xdf94ac*/ System.Collections.IEnumerator CoPlayFinishEffect();
    /*0xdf8120*/ System.Collections.IEnumerator CoCheckShowTilePopup();
    /*0xdf9518*/ System.Collections.IEnumerator CoAwakeMazeEffectTile();
    /*0xdf9584*/ System.Collections.IEnumerator CoShowFade(float fadeOutTime, float fadeInTime);
    /*0xdf9604*/ System.Collections.IEnumerator CoRandomRollDice();
    /*0xdf9670*/ void PlayDiceSpine(int diceNumber);
    /*0xdf9bc8*/ System.Collections.IEnumerator CoChoiceDice(int selectNumber);
    /*0xdf9968*/ System.Collections.IEnumerator CoMoveHero(int oldIndex, int newIndex);
    /*0xdf9c44*/ System.Collections.IEnumerator CoFastMoveCamera(UnityEngine.Vector3 dest, float moveTime);
    /*0xdf9cdc*/ System.Collections.IEnumerator CoSmoothMoveCamera(int startIndex, int endIndex, float moveTime);
    /*0xdf9d6c*/ System.Collections.IEnumerator CoJumpMoveHero(int startIndex, int endIndex, float moveTime);
    /*0xdf9e00*/ System.Collections.IEnumerator CoPlayParticle(MazeWindow.MAZE_PARTICLE mazeParticle);
    /*0xdf6d34*/ void StartRefreshTimer();
    /*0xdf9e7c*/ System.Collections.IEnumerator CoRefreshTimer();
    /*0xdf9ee8*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xdf9f54*/ void StandHeroTileDonw();
    /*0xdf9924*/ void WaitDiceStart(bool disableTileNumber);
    /*0xdf75e0*/ void WaitDiceEnd();
    /*0xdfa034*/ void UpdateTileNumber(bool enable);
    /*0xdf8c04*/ UnityEngine.Vector3 GetTileLocalPositionToCamera(int index);
    /*0xdf8b7c*/ UnityEngine.Vector3 GetTileLocalPosition(int index);
    /*0xdfa3e8*/ void ShowClearEffect();
    /*0xdf74e4*/ void HideClearEffect();
    /*0xdf7534*/ void HideParticles();
    /*0xdf99e8*/ void ShowEnemyCharacter(int tableId, int grade);
    /*0xdf75b0*/ void HideEnemyCharacter();
    /*0xdf7504*/ void HideEffectSpine();
    /*0xdf639c*/ void BindEvent();
    /*0xdf5f18*/ void DeleteEvent();
    /*0xdfa434*/ void HandleDiceResponse(int diceNumber);
    /*0xdfa4f8*/ void HandleDiceResponseCash(int diceNumber);
    /*0xdfa508*/ void HandleShowEffect(TILE_TYPE tileType);
    /*0xdfa720*/ void HandleCharacterAnimComplete(Spine.TrackEntry trackEntry);
    /*0xdfa820*/ void HandleEffectSpineComplete(Spine.TrackEntry trackEntry);
    /*0xdfa8e4*/ void HandleCharacterAnimEndBattle();
    /*0xdfaa64*/ void HandleNewCreateMaze();
    /*0xdfaa68*/ void HandleRandomReward();
    /*0xdfaac8*/ void HandleRequestEscape();
    /*0xdf6c80*/ void HandleButtonIconReset();
    /*0xdfabac*/ void HandleFreeDiceSelect(int diceNumber);
    /*0xdfad7c*/ void OnClickHelp();
    /*0xdfae20*/ void OnClickExit();
    /*0xdfaec0*/ void OnClickPerfume();
    /*0xdfafe8*/ void OnClickHero();
    /*0xdfb0a8*/ void OnClickHeroCharacter();
    /*0xdfb198*/ void OnClickRandomDice();
    /*0xdfb2ec*/ void OnClickSelectDice();
    /*0xdfb41c*/ void OnClickMazeShop();
    /*0xdfb538*/ void OnClickHideClearEffect();
    /*0xdfb53c*/ void OnClickFastToggle();
    /*0xdfb578*/ void OnClickAuto();
    /*0xdfb628*/ void OnClickBossInfo();
    /*0xdfac34*/ bool CheckAndUpdateLeftWork();
    /*0xdfb750*/ void Update();
    /*0xdfba48*/ void <CoRandomRollDice>b__87_0(int number);
    /*0xdfbb04*/ void <CoRandomRollDice>b__87_1();
    /*0xdfbba8*/ bool <CoRefreshTimer>b__96_0();

    enum MAZE_PARTICLE
    {
        HEAL = 0,
        REVIVE = 1,
        WIN = 2,
        NULL = 3,
    }

    class <CoLateSortObjects>d__62 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10857bc*/ <CoLateSortObjects>d__62(int <>1__state);
        /*0x10857e8*/ void System.IDisposable.Dispose();
        /*0x10857ec*/ bool MoveNext();
        /*0x1085844*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108584c*/ void System.Collections.IEnumerator.Reset();
        /*0x108588c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoAuto>d__63 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10841e0*/ <CoAuto>d__63(int <>1__state);
        /*0x108420c*/ void System.IDisposable.Dispose();
        /*0x1084210*/ bool MoveNext();
        /*0x1084568*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084570*/ void System.Collections.IEnumerator.Reset();
        /*0x10845b0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ MazeWindow.<> <>9;
        static /*0x8*/ System.Comparison<UnityEngine.CanvasGroup> <>9__64_0;
        static /*0x10*/ System.Predicate<TILE_TYPE> <>9__71_0;
        static /*0x18*/ System.Action<bool> <>9__96_1;
        static /*0x20*/ System.Action <>9__130_1;
        static /*0x28*/ System.Action <>9__130_0;
        static /*0x30*/ System.Action<ServerProtocol.ResMazeInfo> <>9__134_0;

        static /*0x1083d6c*/ <>c();
        /*0x1083dcc*/ <>c();
        /*0x1083dd4*/ int <UpdateSortObjects>b__64_0(UnityEngine.CanvasGroup lhs, UnityEngine.CanvasGroup rhs);
        /*0x1083e44*/ bool <GetLeftStep>b__71_0(TILE_TYPE type);
        /*0x1083e50*/ void <CoRefreshTimer>b__96_1(bool _result);
        /*0x1083f40*/ void <OnClickMazeShop>b__130_0();
        /*0x1084088*/ void <OnClickMazeShop>b__130_1();
        /*0x108410c*/ void <OnClickBossInfo>b__134_0(ServerProtocol.ResMazeInfo response);
    }

    class <CoPlayEnterEffect>d__81 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ bool <isShowEnterStageHero>5__2;

        /*0x1085af4*/ <CoPlayEnterEffect>d__81(int <>1__state);
        /*0x1085b20*/ void System.IDisposable.Dispose();
        /*0x1085b24*/ bool MoveNext();
        /*0x1085ec4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1085ecc*/ void System.Collections.IEnumerator.Reset();
        /*0x1085f0c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayEnterTheStage>d__82 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x1085f14*/ <CoPlayEnterTheStage>d__82(int <>1__state);
        /*0x1085f40*/ void System.IDisposable.Dispose();
        /*0x1085f44*/ bool MoveNext();
        /*0x108609c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10860a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10860e4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayFinishEffect>d__83 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10860ec*/ <CoPlayFinishEffect>d__83(int <>1__state);
        /*0x1086118*/ void System.IDisposable.Dispose();
        /*0x108611c*/ bool MoveNext();
        /*0x108645c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086464*/ void System.Collections.IEnumerator.Reset();
        /*0x10864a4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCheckShowTilePopup>d__84 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x10848ec*/ <CoCheckShowTilePopup>d__84(int <>1__state);
        /*0x1084918*/ void System.IDisposable.Dispose();
        /*0x108491c*/ bool MoveNext();
        /*0x1084a48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084a50*/ void System.Collections.IEnumerator.Reset();
        /*0x1084a90*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoAwakeMazeEffectTile>d__85 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ float <waitTime>5__2;
        /*0x2c*/ int <i>5__3;

        /*0x10845b8*/ <CoAwakeMazeEffectTile>d__85(int <>1__state);
        /*0x10845e4*/ void System.IDisposable.Dispose();
        /*0x10845e8*/ bool MoveNext();
        /*0x108489c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10848a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10848e4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowFade>d__86 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ float fadeOutTime;
        /*0x2c*/ float fadeInTime;

        /*0x1086f98*/ <CoShowFade>d__86(int <>1__state);
        /*0x1086fc4*/ void System.IDisposable.Dispose();
        /*0x1086fc8*/ bool MoveNext();
        /*0x10872c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10872c8*/ void System.Collections.IEnumerator.Reset();
        /*0x1087308*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRandomRollDice>d__87 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10866c8*/ <CoRandomRollDice>d__87(int <>1__state);
        /*0x10866f4*/ void System.IDisposable.Dispose();
        /*0x10866f8*/ bool MoveNext();
        /*0x108685c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086864*/ void System.Collections.IEnumerator.Reset();
        /*0x10868a4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ MazeWindow <>4__this;
        /*0x18*/ int diceNumber;

        /*0x1084198*/ <>c__DisplayClass88_0();
        /*0x10841a0*/ void <PlayDiceSpine>b__0();
    }

    class <CoChoiceDice>d__89 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ int selectNumber;
        /*0x2c*/ int <newIndex>5__2;
        /*0x30*/ int <oldIndex>5__3;

        /*0x1084a98*/ <CoChoiceDice>d__89(int <>1__state);
        /*0x1084ac4*/ void System.IDisposable.Dispose();
        /*0x1084ac8*/ bool MoveNext();
        /*0x1084df0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084df8*/ void System.Collections.IEnumerator.Reset();
        /*0x1084e38*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMoveHero>d__90 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ int oldIndex;
        /*0x2c*/ int newIndex;
        /*0x30*/ float <moveTime>5__2;

        /*0x1085894*/ <CoMoveHero>d__90(int <>1__state);
        /*0x10858c0*/ void System.IDisposable.Dispose();
        /*0x10858c4*/ bool MoveNext();
        /*0x1085aa4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1085aac*/ void System.Collections.IEnumerator.Reset();
        /*0x1085aec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoFastMoveCamera>d__91 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float moveTime;
        /*0x28*/ MazeWindow <>4__this;
        /*0x30*/ UnityEngine.Vector3 dest;
        /*0x3c*/ float <speed>5__2;
        /*0x40*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x4c*/ float <t>5__4;

        /*0x1084e40*/ <CoFastMoveCamera>d__91(int <>1__state);
        /*0x1084e6c*/ void System.IDisposable.Dispose();
        /*0x1084e70*/ bool MoveNext();
        /*0x1084fcc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084fd4*/ void System.Collections.IEnumerator.Reset();
        /*0x1085014*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSmoothMoveCamera>d__92 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float moveTime;
        /*0x24*/ int endIndex;
        /*0x28*/ int startIndex;
        /*0x30*/ MazeWindow <>4__this;
        /*0x38*/ float <speed>5__2;
        /*0x3c*/ int <count>5__3;
        /*0x40*/ int <i>5__4;
        /*0x44*/ UnityEngine.Vector3 <startPosition>5__5;
        /*0x50*/ UnityEngine.Vector3 <endPosition>5__6;
        /*0x5c*/ float <t>5__7;

        /*0x1087310*/ <CoSmoothMoveCamera>d__92(int <>1__state);
        /*0x108733c*/ void System.IDisposable.Dispose();
        /*0x1087340*/ bool MoveNext();
        /*0x10874e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10874f0*/ void System.Collections.IEnumerator.Reset();
        /*0x1087530*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoJumpMoveHero>d__93 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ int startIndex;
        /*0x2c*/ float moveTime;
        /*0x30*/ int endIndex;
        /*0x34*/ float <walkInTime>5__2;
        /*0x38*/ float <walkCenterTime>5__3;
        /*0x3c*/ float <walkOutTime>5__4;
        /*0x40*/ float <time>5__5;
        /*0x44*/ float <speed>5__6;
        /*0x48*/ int <count>5__7;
        /*0x4c*/ int <i>5__8;
        /*0x50*/ UnityEngine.Vector3 <startPosition>5__9;
        /*0x5c*/ UnityEngine.Vector3 <endPosition>5__10;
        /*0x68*/ float <t>5__11;
        /*0x6c*/ UnityEngine.Vector2 <jumpVector>5__12;

        /*0x108501c*/ <CoJumpMoveHero>d__93(int <>1__state);
        /*0x1085048*/ void System.IDisposable.Dispose();
        /*0x108504c*/ bool MoveNext();
        /*0x108576c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1085774*/ void System.Collections.IEnumerator.Reset();
        /*0x10857b4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayParticle>d__94 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ MazeWindow.MAZE_PARTICLE mazeParticle;

        /*0x10864ac*/ <CoPlayParticle>d__94(int <>1__state);
        /*0x10864d8*/ void System.IDisposable.Dispose();
        /*0x10864dc*/ bool MoveNext();
        /*0x1086678*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086680*/ void System.Collections.IEnumerator.Reset();
        /*0x10866c0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshTimer>d__96 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10868ac*/ <CoRefreshTimer>d__96(int <>1__state);
        /*0x10868d8*/ void System.IDisposable.Dispose();
        /*0x10868dc*/ bool MoveNext();
        /*0x1086f48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086f50*/ void System.Collections.IEnumerator.Reset();
        /*0x1086f90*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoUpdateTimer>d__97 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x1087538*/ <CoUpdateTimer>d__97(int <>1__state);
        /*0x1087564*/ void System.IDisposable.Dispose();
        /*0x1087568*/ bool MoveNext();
        /*0x10875d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10875d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1087618*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct MercenaryPlayerSet
{
    /*0x10*/ PTShare.Define.SHero hero;
    /*0x18*/ long playerid;
    /*0x20*/ bool myReq;

    /*0xc2e2cc*/ MercenaryPlayerSet(PTShare.Define.SHero hero, long playerid);
    /*0xc2e2d8*/ MercenaryPlayerSet(PTShare.Define.SHero hero, bool myReq);
}

class MercenaryManager : Singleton.Data.SingletonData<MercenaryManager>
{
    static /*0x0*/ bool <FirstGuildInitialize>k__BackingField;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> m_curRentList;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> m_curMercenaryList;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLend> m_curLendList;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> m_curLendedList;
    /*0x40*/ CMercenarySort_Grade m_sortMercenaryGrade;
    /*0x48*/ CMercenarySort_Rented m_sortMercenaryRented;
    /*0x50*/ bool m_isLendRequest;
    /*0x58*/ PTShare.Define.SModeCount <UseMercenary>k__BackingField;
    /*0x60*/ int _nArrIndex;
    /*0x64*/ int _nStartCount;
    /*0x68*/ int _nEndCount;
    /*0x70*/ PTShare.Define.SMercenaryRent _sRentInfo;

    static /*0x2b3f84c*/ MercenaryManager();
    static /*0x2b3d388*/ bool get_FirstGuildInitialize();
    static /*0x2b3d3ec*/ void set_FirstGuildInitialize(bool value);
    /*0x2b3f69c*/ MercenaryManager();
    /*0x2b3d2f8*/ PTShare.Define.SModeCount get_UseMercenary();
    /*0x2b3d300*/ void set_UseMercenary(PTShare.Define.SModeCount value);
    /*0x2b3d308*/ string get_UserToken();
    /*0x2b3d458*/ bool InitInstance();
    /*0x2b3d5a8*/ void ReleaseInstance();
    /*0x2b3d644*/ void Send_RentList(System.Action _callback);
    /*0x2b3d814*/ void Send_Rent(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3d9fc*/ void Send_CancelRent(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3dbe4*/ void Send_ReturnRent(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3d474*/ void Send_LendList(System.Action _callback);
    /*0x2b3ca34*/ void Send_Lend(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3df04*/ void Send_FastLend(System.Action _callback);
    /*0x2b3cc6c*/ void Send_DenyLend(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3e170*/ void Send_DenyLendAll(System.Action _callback);
    /*0x2b3e340*/ void SetRentedList(System.Collections.Generic.List<PTShare.Define.SMercenaryRented> _rentedList);
    /*0x2b3e478*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> GetRentList();
    /*0x2b3e480*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> FindMercenaryList(int _tableid);
    /*0x2b3e5e8*/ PTShare.Define.SHero FindRentHero(int _nHeroID, long _lPlayerID);
    /*0x2b3e6e0*/ int GetRentHeroLevel(int _nHeroID, long _lPlayerID);
    /*0x2b3e7e4*/ PTShare.Define.SMercenaryRent GetRantHeroID(int _nHeroID);
    /*0x2b3e948*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLend> GetLendList();
    /*0x2b3e950*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> GetLendedList();
    /*0x2b3e958*/ bool IsVaildRentedMercenary(long _playerid, int _heroid);
    /*0x2b3ea5c*/ bool IsVaildRequestMercenary(int _tableid);
    /*0x2b3eb58*/ System.Collections.Generic.List<MercenaryPlayerSet> GetLendPlayersList();
    /*0x2b3ee40*/ int GetRequestRentCount();
    /*0x2b3ef5c*/ System.Collections.Generic.List<MercenaryPlayerSet> FindRepresentativeMercenaryToSHero();
    /*0x2b3f27c*/ void SetSModeCount(PTShare.Define.SModeCount _SModeCount);
    /*0x2b3f288*/ void RequestRentMercenary(long _playerid, int _heroid, int _reqCount, bool _request);
    /*0x2b3f42c*/ void RemoveRentMercenary(int _heroid);
    /*0x2b3f55c*/ void RemoveLentMercenary(int _heroid);
    /*0x2b3f68c*/ bool GetIsLendReddot();
    /*0x2b3f694*/ void SetHideLendReddot();

    class <>c__DisplayClass23_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087a4c*/ <>c__DisplayClass23_0();
        /*0x1087a54*/ void <Send_RentList>b__0(ServerProtocol.ResMercenaryRentList response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087ab0*/ <>c__DisplayClass24_0();
        /*0x1087ab8*/ void <Send_Rent>b__0(ServerProtocol.ResMercenaryRent response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087b10*/ <>c__DisplayClass25_0();
        /*0x1087b18*/ void <Send_CancelRent>b__0(ServerProtocol.ResMercenaryRentCancel response);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087b70*/ <>c__DisplayClass26_0();
        /*0x1087b78*/ void <Send_ReturnRent>b__0(ServerProtocol.ResMercenaryRentReturn response);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087c24*/ <>c__DisplayClass27_0();
        /*0x1087c2c*/ void <Send_LendList>b__0(ServerProtocol.ResMercenaryLendList response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087c78*/ <>c__DisplayClass28_0();
        /*0x1087c80*/ void <Send_Lend>b__0(ServerProtocol.ResMercenaryLend response);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087d48*/ <>c__DisplayClass29_0();
        /*0x1087d50*/ void <Send_FastLend>b__0(ServerProtocol.ResMercenaryLendFast response);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087ec4*/ <>c__DisplayClass30_0();
        /*0x1087ecc*/ void <Send_DenyLend>b__0(ServerProtocol.ResMercenaryLendDeny response);
    }

    class <>c__DisplayClass30_1
    {
        /*0x10*/ ServerProtocol.ResMercenaryLendDeny response;

        /*0x108807c*/ <>c__DisplayClass30_1();
        /*0x1088084*/ bool <Send_DenyLend>b__1(PTShare.Define.SMercenaryLend x);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10880bc*/ <>c__DisplayClass31_0();
        /*0x10880c4*/ void <Send_DenyLendAll>b__0(ServerProtocol.ResMercenaryLendDenyAll response);
    }

    class <>c
    {
        static /*0x0*/ MercenaryManager.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SMercenaryRented, PTShare.Define.SMercenaryRent> <>9__32_0;
        static /*0x10*/ System.Func<PTShare.Define.SMercenaryRent, bool> <>9__43_0;
        static /*0x18*/ System.Func<PTShare.Define.SMercenaryRent, int> <>9__44_0;
        static /*0x20*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SMercenaryRent>, PTShare.Define.SMercenaryRent> <>9__44_1;
        static /*0x28*/ System.Converter<PTShare.Define.SMercenaryRent, MercenaryPlayerSet> <>9__44_2;

        static /*0x1087898*/ <>c();
        /*0x10878f8*/ <>c();
        /*0x1087900*/ PTShare.Define.SMercenaryRent <SetRentedList>b__32_0(PTShare.Define.SMercenaryRented x);
        /*0x10879a8*/ bool <GetRequestRentCount>b__43_0(PTShare.Define.SMercenaryRent x);
        /*0x10879c0*/ int <FindRepresentativeMercenaryToSHero>b__44_0(PTShare.Define.SMercenaryRent x);
        /*0x10879d8*/ PTShare.Define.SMercenaryRent <FindRepresentativeMercenaryToSHero>b__44_1(System.Linq.IGrouping<int, PTShare.Define.SMercenaryRent> x);
        /*0x1087a24*/ MercenaryPlayerSet <FindRepresentativeMercenaryToSHero>b__44_2(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ int _tableid;

        /*0x108813c*/ <>c__DisplayClass34_0();
        /*0x1088144*/ bool <FindMercenaryList>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ int _nHeroID;
        /*0x18*/ long _lPlayerID;

        /*0x1088168*/ <>c__DisplayClass35_0();
        /*0x1088170*/ bool <FindRentHero>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ int _nHeroID;
        /*0x18*/ long _lPlayerID;

        /*0x10881ac*/ <>c__DisplayClass36_0();
        /*0x10881b4*/ bool <GetRentHeroLevel>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ int _nHeroID;

        /*0x10881f0*/ <>c__DisplayClass37_0();
        /*0x10881f8*/ bool <GetRantHeroID>b__0(PTShare.Define.SMercenaryRent x);
        /*0x108821c*/ bool <GetRantHeroID>b__1(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass40_0
    {
        /*0x10*/ long _playerid;
        /*0x18*/ int _heroid;

        /*0x1088240*/ <>c__DisplayClass40_0();
        /*0x1088248*/ bool <IsVaildRentedMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ int _tableid;

        /*0x1088284*/ <>c__DisplayClass41_0();
        /*0x108828c*/ bool <IsVaildRequestMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ System.Converter<long, MercenaryPlayerSet> <>9__0;

        /*0x10882c4*/ <>c__DisplayClass42_0();
        /*0x10882cc*/ MercenaryPlayerSet <GetLendPlayersList>b__0(long x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ long _playerid;
        /*0x18*/ int _heroid;

        /*0x10882e8*/ <>c__DisplayClass46_0();
        /*0x10882f0*/ bool <RequestRentMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ int _heroid;

        /*0x108832c*/ <>c__DisplayClass47_0();
        /*0x1088334*/ bool <RemoveRentMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ int _heroid;

        /*0x1088358*/ <>c__DisplayClass48_0();
        /*0x1088360*/ bool <RemoveLentMercenary>b__0(PTShare.Define.SMercenaryLend x);
    }
}

class CMercenarySort_Grade : System.Collections.Generic.IComparer<PTShare.Define.SMercenaryRent>
{
    /*0x133fa2c*/ CMercenarySort_Grade();
    /*0x133f9d4*/ int Compare(PTShare.Define.SMercenaryRent left, PTShare.Define.SMercenaryRent right);
}

class CMercenarySort_Rented : System.Collections.Generic.IComparer<PTShare.Define.SMercenaryRent>
{
    /*0x133fa8c*/ CMercenarySort_Rented();
    /*0x133fa34*/ int Compare(PTShare.Define.SMercenaryRent left, PTShare.Define.SMercenaryRent right);
}

class OptionManager : Singleton.Data.SingletonData<OptionManager>
{
    static /*0x0*/ System.Action<bool> OnEventChangeTouchEffect;

    static /*0x113c2a4*/ OptionManager();
    static /*0x113b8d4*/ void add_OnEventChangeTouchEffect(System.Action<bool> value);
    static /*0x113b9c8*/ void remove_OnEventChangeTouchEffect(System.Action<bool> value);
    /*0x113c22c*/ OptionManager();
    /*0x113babc*/ bool InitInstance();
    /*0x113bac4*/ void ReleaseInstance();
    /*0x113bac8*/ void UpdateRepresentative(System.Collections.Generic.List<PTShare.Define.SHero> _ListRepresentative);
    /*0x113bacc*/ void AddRepresentative(PTShare.Define.SHero _sHero);
    /*0x113bad0*/ void ReleaseRepresentative(PTShare.Define.SHero _sHero);
    /*0x113bad4*/ void Restore_GameMode();
    /*0x113bae0*/ void Update_PowerSaving(bool _value);
    /*0x113bba8*/ void Update_HpView(bool _value);
    /*0x113bcb4*/ void Update_PlayVideo(bool _value);
    /*0x113bdc0*/ void Update_CombatTextView(bool _value);
    /*0x113becc*/ void Update_TouchEffect(bool _value);
    /*0x113c034*/ void Update_GachaNotice(bool _value);
    /*0x113c130*/ void Update_WhisperNotice(bool _value);
}

class AndroidManager : Singleton.Component.SingletonComponent<AndroidManager>
{
    static string FUNC_CERT_HASH = "certHash";
    static string FUNC_HACK_TOOL = "hackToolName";
    /*0x28*/ UnityEngine.AndroidJavaObject androidJavaObject;
    /*0x30*/ UnityEngine.AndroidJavaClass androidJavaClass;

    /*0xedc548*/ AndroidManager();
    /*0xedbdf8*/ void AwakeInstance();
    /*0xedbee4*/ bool InitInstance();
    /*0xedbeec*/ void ReleaseInstance();
    /*0xedbdfc*/ void AndoridInit();
    /*0xedbef0*/ string CallJavaFunc_GetXigncodeCookie(string _strSeed);
    /*0xedbf34*/ void ToUnity_OnHackDetectedMsg(string strCode);
    /*0xedbf38*/ void XingCodeError(bool isOk);
    /*0xedbf3c*/ string CallJavaStaticFunc(string _FuncName, string[] _params);
    /*0xedc150*/ void CallJavaFuncASync(string _ClassName, string[] _params);
    /*0xedc244*/ void CallStaticJar(string _className, object[] _parmas);
    /*0xedc2e0*/ void CallJar(string _className, object[] _parmas);
    /*0xedc37c*/ void ToUnity(string[] strSend);
    /*0xedc380*/ void AndroidComponet(string _params);
    /*0xedc384*/ void LoginSuccess(string _isLogin);
    /*0xedc464*/ void Back_GetPGSSignedState(string isPGSLogined);
    /*0xedc544*/ void Back_CancelPreSignPGS(string emptyArg);
}

class HeroPromoteManager : Singleton.Data.SingletonData<HeroPromoteManager>
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEventResultPromote;
    static /*0x8*/ System.Action<System.Collections.Generic.List<PTShare.Define.SHero>, bool, bool> OnEventResultMulti;
    /*0x20*/ System.Collections.Generic.List<RecommendPromote> RecommendPromotes;
    /*0x28*/ System.Collections.Generic.List<RecommendPromote> FastPromotes;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHero> m_multiPromoteResult;
    /*0x38*/ bool m_isFast;
    /*0x39*/ bool m_isRecomend;

    static /*0x12296a8*/ HeroPromoteManager();
    static /*0x122511c*/ void add_OnEventResultPromote(System.Action<PTShare.Define.SHero> value);
    static /*0x1225028*/ void remove_OnEventResultPromote(System.Action<PTShare.Define.SHero> value);
    static /*0x1225308*/ void add_OnEventResultMulti(System.Action<System.Collections.Generic.List<PTShare.Define.SHero>, bool, bool> value);
    static /*0x1225210*/ void remove_OnEventResultMulti(System.Action<System.Collections.Generic.List<PTShare.Define.SHero>, bool, bool> value);
    static /*0x122618c*/ bool IsValidPromoteType(PromoteType ePromoteType, PTShare.Define.SHero _tTarget, TableData.TableData_Unitbase _tCompare);
    /*0x1229590*/ HeroPromoteManager();
    /*0x1227edc*/ bool InitInstance();
    /*0x1227ee4*/ void ReleaseInstance();
    /*0x1227f54*/ void FastPromote();
    /*0x1228c5c*/ void RecommendPromote();
    /*0x1228d24*/ void ReleasePromote(System.Collections.Generic.List<RecommendPromote> promoteSHeroes, PTShare.Define.SHero _sHero);
    /*0x12280b0*/ System.Collections.Generic.List<RecommendPromote> FindPromoteFeed(System.Collections.Generic.List<int> _returnValue, int _nGrade);
    /*0x122471c*/ TableData.TableData_Unitgradelv FindUnitGradeLvByGrade(int _index);
    /*0x1224340*/ void Send_RequestPromote(int _heroId, int[] _heroIds);
    /*0x1228f10*/ void Send_RequestPromoteMulti(System.Collections.Generic.List<RecommendPromote> _tRecommendPromotes, bool _isFast, bool _isRecomend);
    /*0x1229210*/ void OpenHeroRewardWindow(PTShare.Define.SHero _sHero);
    /*0x122420c*/ int[] GetPromoteFeeds(PTShare.Define.SHero[] _sHeros);

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int _nGrade;
        /*0x18*/ TableData.TableData_Unitgradelv tableGrade;
        /*0x20*/ System.Collections.Generic.List<int> _returnValue;

        /*0x105fea8*/ <>c__DisplayClass16_0();
        /*0x105feb0*/ bool <FindPromoteFeed>b__0(PTShare.Define.SHero x);
        /*0x105fed4*/ bool <FindPromoteFeed>b__2(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass16_1
    {
        /*0x10*/ PTShare.Define.SHero sHeroCurrent;
        /*0x18*/ HeroPromoteManager.<> CS$<>8__locals1;

        /*0x105ff04*/ <>c__DisplayClass16_1();
        /*0x105ff0c*/ bool <FindPromoteFeed>b__3(PTShare.Define.SHero x);
        /*0x105ff50*/ bool <FindPromoteFeed>b__4(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass16_2
    {
        /*0x10*/ int i;
        /*0x18*/ HeroPromoteManager.<> CS$<>8__locals2;

        /*0x105ff94*/ <>c__DisplayClass16_2();
        /*0x105ff9c*/ bool <FindPromoteFeed>b__5(PTShare.Define.SHero x);
    }

    class <>c
    {
        static /*0x0*/ HeroPromoteManager.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SHero> <>9__16_1;
        static /*0x10*/ System.Func<PTShare.Define.SHero, int> <>9__16_6;
        static /*0x18*/ System.Func<int, string> <>9__18_0;
        static /*0x20*/ System.Func<PTShare.Define.SHero, int> <>9__19_3;
        static /*0x28*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__19_4;
        static /*0x30*/ System.Func<System.Byte[], System.Collections.Generic.IEnumerable<byte>> <>9__19_2;
        static /*0x38*/ System.Func<RecommendPromote, System.Collections.Generic.IEnumerable<byte>> <>9__19_0;
        static /*0x40*/ System.Action<PTShare.Define.SHero> <>9__19_5;
        static /*0x48*/ System.Func<PTShare.Define.SHero, int> <>9__22_0;

        static /*0x105f85c*/ <>c();
        /*0x105f8bc*/ <>c();
        /*0x105f8c4*/ int <FindPromoteFeed>b__16_1(PTShare.Define.SHero a, PTShare.Define.SHero b);
        /*0x105f8f0*/ int <FindPromoteFeed>b__16_6(PTShare.Define.SHero x);
        /*0x105f908*/ string <Send_RequestPromote>b__18_0(int s);
        /*0x105f970*/ System.Collections.Generic.IEnumerable<byte> <Send_RequestPromoteMulti>b__19_0(RecommendPromote s);
        /*0x105fd80*/ int <Send_RequestPromoteMulti>b__19_3(PTShare.Define.SHero f);
        /*0x105fd98*/ System.Collections.Generic.IEnumerable<byte> <Send_RequestPromoteMulti>b__19_4(int b);
        /*0x105fdfc*/ System.Collections.Generic.IEnumerable<byte> <Send_RequestPromoteMulti>b__19_2(byte[] m);
        /*0x105fe04*/ void <Send_RequestPromoteMulti>b__19_5(PTShare.Define.SHero data);
        /*0x105fe90*/ int <GetPromoteFeeds>b__22_0(PTShare.Define.SHero s);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ HeroPromoteManager <>4__this;
        /*0x18*/ int[] _heroIds;

        /*0x1060034*/ <>c__DisplayClass18_0();
        /*0x106003c*/ void <Send_RequestPromote>b__1(ServerProtocol.ResHeroPromote _instance);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ HeroPromoteManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<RecommendPromote> _tRecommendPromotes;

        /*0x1060408*/ <>c__DisplayClass19_0();
        /*0x1060410*/ void <Send_RequestPromoteMulti>b__1(ServerProtocol.ResHeroPromoteMulti _instance);
    }
}

enum PubEventLogType
{
    TITLE = 0,
    CHECK = 1,
    CHECKCOMPLETE = 2,
    FIRSTLOBBY = 3,
    LOGIN = 4,
    LOGINCOMPLETE = 5,
    TERMS = 6,
    CREATENICKNAME = 7,
    LOADDATACOMPLETE = 8,
    INTRO = 9,
    INTROEND = 10,
    STAGESTART = 11,
    STAGEEND = 12,
    CROMYANONSTART = 13,
    CROMYANONEND = 14,
    LABYRINTHSTART = 15,
    LABYRINTHEND = 16,
    ARENA_START = 17,
    ARENA_VICTORY = 18,
    ARENA_DEFEAT = 19,
    PLAYERLEVEL = 20,
    CHARACTER_GACHA = 21,
    FRIEND_GACHA = 22,
    PROPERTIES_GACHA = 23,
    EVOLUTION = 24,
    FIRSTPRODUCT = 25,
    SECONDPRODUCT = 26,
    THIRDPRODUCT = 27,
    BUYPRODUCT = 28,
    ATTENDANCE_GUILD = 29,
    BUYITEM = 30,
    DAY7EVENTCOMPLETE = 31,
    QUESTALLCLEAR = 32,
    ASSETBUNDLE = 33,
}

class PubManager : Singleton.Data.SingletonData<PubManager>
{
    static /*0x0*/ System.Action OnLoginSuccessEvent;
    static /*0x8*/ System.Action OnLoginStartEvent;
    static /*0x10*/ System.Action OnLoginFailEvent;
    static /*0x18*/ System.Action OnRefreshEvent;
    /*0x1c*/ PUBSDK.DefinePubSDK.PubLoginType pubLoginType;
    /*0x20*/ bool autoLogin;
    /*0x21*/ bool loginProtocol;
    /*0x22*/ bool requestAttach;
    /*0x28*/ System.Collections.Generic.Dictionary<int, string> dicMailList;

    static /*0x10181b8*/ PubManager();
    static /*0x1011e5c*/ void add_OnLoginSuccessEvent(System.Action value);
    static /*0x1011f50*/ void remove_OnLoginSuccessEvent(System.Action value);
    static /*0x1012044*/ void add_OnLoginStartEvent(System.Action value);
    static /*0x101213c*/ void remove_OnLoginStartEvent(System.Action value);
    static /*0x1012234*/ void add_OnLoginFailEvent(System.Action value);
    static /*0x101232c*/ void remove_OnLoginFailEvent(System.Action value);
    static /*0x1012424*/ void add_OnRefreshEvent(System.Action value);
    static /*0x101251c*/ void remove_OnRefreshEvent(System.Action value);
    static /*0x10127dc*/ bool get_IsInitialized();
    static /*0x10128c8*/ bool get_IsIAPInitialized();
    static /*0x1017370*/ string GetPurchaseToken(int billingtype, string receiptdata);
    /*0x10180f8*/ PubManager();
    /*0x1010d90*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> GetEventLog();
    /*0x1010ddc*/ void SetEventLog(string key, string value);
    /*0x1010fac*/ TableData.TableData_Fbeventlog GetEventLog(PubEventLogType type, string typeValue);
    /*0x10110cc*/ void CheckEventLog(PubEventLogType type, string typeValue, string addValue);
    /*0x101121c*/ void Log_ServerCheck(bool complete);
    /*0x101128c*/ void Log_AssetBundleDownload(bool complete);
    /*0x1011320*/ void Log_LoginCheck(PUBSDK.DefinePubSDK.PubLoginType eType, bool complete);
    /*0x10113fc*/ void Log_Terms();
    /*0x1011450*/ void Log_CreateNickname();
    /*0x10114a4*/ void Log_FirstLobby();
    /*0x10114f8*/ void Log_LoadDataComplete();
    /*0x101154c*/ void Log_Intro(bool complete);
    /*0x10115bc*/ void Log_Stage(string stage, bool isStart);
    /*0x1011630*/ void Log_Cromyanon(int floor, bool isStart);
    /*0x10116b4*/ void Log_Labyrinth(int floor, bool isStart);
    /*0x1011738*/ void Log_ArenaStart();
    /*0x101178c*/ void Log_ArenaResult(bool isVictory);
    /*0x10117fc*/ void Log_PlayerLevel(int level);
    /*0x101186c*/ void Log_GenericGacha(int count);
    /*0x10118dc*/ void Log_FriendGacha(int count);
    /*0x101194c*/ void Log_PropertiesGacha(int count);
    /*0x10119bc*/ void Log_CharacterEvolution(HEROGRADE grade);
    /*0x1011a6c*/ void Log_FirstProduct(string productid);
    /*0x1011acc*/ void Log_SecondProduct(string productid);
    /*0x1011b2c*/ void Log_ThirdProduct(string productid);
    /*0x1011b8c*/ void Log_BuyProduct(string productid);
    /*0x1011c04*/ void Log_BuyItemGeneric(DefineContentShop.ContentShopCategoryType categorytype);
    /*0x1011cb4*/ void Log_AttendanceGuild();
    /*0x1011d08*/ void Log_Day7Event(int number);
    /*0x1011dac*/ void Log_QuestAllClear(QuestGroupType type);
    /*0x1010e18*/ PUBSDK.PubSDKProcesser get_sdk();
    /*0x1012a28*/ bool InitInstance();
    /*0x1012bd0*/ void InitializeCallback();
    /*0x101302c*/ void InitializePushToken(string token);
    /*0x10133e8*/ void ReleaseInstance();
    /*0x10135d0*/ void OnCallbackInitializeError(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x101362c*/ void RequestLogin(PUBSDK.DefinePubSDK.PubLoginType eType, bool bAutoLogin, bool bCallLoginProtocol, bool bAttach);
    /*0x10141b4*/ void OnCallbackSuccessLogin(Firebase.Auth.FirebaseUser user);
    /*0x1014568*/ void OnCallbackSuccessLoginToken(string token);
    /*0x1014770*/ void OnCallbackFailLogin(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x1014130*/ void SendLoginProtocol(bool bLoading, ServerProtocol.ReqAccountLogin reqLogin, System.Action<ServerProtocol.ResAccountLogin> resLogin, System.Action<int> fail);
    /*0x10148fc*/ void OnCallbackLoginSuccessProtocol(ServerProtocol.ResAccountLogin login);
    /*0x1015470*/ void OnCallbackLoginFailProtocol(int code);
    /*0x10157e8*/ void Logout();
    /*0x10158e0*/ void OnCallbackLogoutProtocol(ServerProtocol.ResAccountLogout logout);
    /*0x10159d8*/ void OnCallbackLogoutSuccess();
    /*0x1015a3c*/ void LinkPlatform(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x1015fc4*/ void OnCallbackSuccessLinkPlatform(Firebase.Auth.FirebaseUser user);
    /*0x1016218*/ void OnCallbackSuccessLinkToken(string token);
    /*0x10163dc*/ void TryDetach();
    /*0x1016120*/ void OnCallbackSuccessAttachProtocol(ServerProtocol.ResAccountAttach res);
    /*0x101677c*/ void OnCallbackFailAttachProtocol(int code, string args);
    /*0x101685c*/ void OnCallbackFailLinkPlatform(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x10168c4*/ void InitializeIAP(System.Action onInitialized);
    /*0x1016cb0*/ void BuyPurchasing(string productid, string packageid, System.Action<UnityEngine.Purchasing.Product> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
    /*0x1017224*/ string GetLocalizePrice(string productid);
    /*0x1017460*/ void AdJustRevenue(UnityEngine.Purchasing.Product receipt);
    /*0x1015278*/ void Restore();
    /*0x1013218*/ void SetGenericPush(bool enable, bool night, System.Action onComplete);
    /*0x101767c*/ void SetAdvertisePush(bool enable, System.Action onComplete);
    /*0x1013308*/ void SetLanguagePush(bool enable, PTShare.Define.LanguageCode code);
    /*0x1013208*/ System.ValueTuple<bool, string> GetPushString();
    /*0x1013210*/ System.ValueTuple<bool, string> GetNightPushString();
    /*0x1017758*/ System.ValueTuple<bool, string> GetAdPushString();
    /*0x1017760*/ void SetPushString(bool enable, string val);
    /*0x1017770*/ void SetNightPushString(bool enable, string val);
    /*0x1017780*/ void SetAdPushString(bool enable, string val);
    /*0x1017790*/ string GetPushOffsetTimeToString();
    /*0x10140c0*/ string GetPushToken();
    /*0x101536c*/ void SetCrashlyticsKey(string key, string value);
    /*0x1015324*/ void SetCrashlyticsLog(string log);
    /*0x1017a24*/ void RequestAppTracking();
    /*0x101480c*/ void ErrorMessage(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x1016104*/ System.Collections.Generic.List<PUBSDK.DefinePubSDK.PubLoginType> GetLinkPlatform();
    /*0x1015ba8*/ bool IsLinkPlatform(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x10153bc*/ PUBSDK.DefinePubSDK.PubLoginType GetCurrentLoginType();
    /*0x1014504*/ void SetCurrentLoginType(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x1017b9c*/ System.Collections.Generic.Dictionary<int, string> GetLinkEmail();
    /*0x1017fe8*/ string GetMail(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x101809c*/ void HandlerRequestFirebaseAuth();
    /*0x10181bc*/ void <RequestLogin>b__58_0();
    /*0x10183cc*/ void <OnCallbackLoginSuccessProtocol>b__63_0(bool result);
    /*0x10185c4*/ void <OnCallbackLoginSuccessProtocol>b__63_1(string token);
    /*0x10186f8*/ void <Restore>b__80_0(PUBSDK.PubReceiptRecord receipt);

    class <>c__DisplayClass2_0
    {
        /*0x10*/ PubEventLogType type;
        /*0x18*/ string typeValue;

        /*0x108c898*/ <>c__DisplayClass2_0();
        /*0x108c8a0*/ bool <GetEventLog>b__0(TableData.TableData_Fbeventlog x);
    }

    class <>c__DisplayClass63_0
    {
        /*0x10*/ string token;
        /*0x18*/ PubManager <>4__this;

        /*0x108c98c*/ <>c__DisplayClass63_0();
        /*0x108c994*/ void <OnCallbackLoginSuccessProtocol>b__3();
    }

    class <>c
    {
        static /*0x0*/ PubManager.<> <>9;
        static /*0x8*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__63_2;
        static /*0x10*/ System.Action<bool> <>9__64_0;
        static /*0x18*/ System.Action<bool> <>9__71_0;
        static /*0x20*/ System.Action<bool> <>9__71_2;
        static /*0x28*/ System.Converter<string, UnityEngine.Purchasing.ProductDefinition> <>9__75_0;
        static /*0x30*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__80_1;

        static /*0x108c600*/ <>c();
        /*0x108c660*/ <>c();
        /*0x108c668*/ void <OnCallbackLoginSuccessProtocol>b__63_2(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0x108c66c*/ void <OnCallbackLoginFailProtocol>b__64_0(bool res);
        /*0x108c754*/ void <TryDetach>b__71_0(bool _);
        /*0x108c758*/ void <TryDetach>b__71_2(bool _);
        /*0x108c75c*/ UnityEngine.Purchasing.ProductDefinition <InitializeIAP>b__75_0(string x);
        /*0x108c7c0*/ void <Restore>b__80_1(ServerProtocol.ResCashShopPurchase res);
    }

    class <>c__DisplayClass71_0
    {
        /*0x10*/ PubManager <>4__this;
        /*0x18*/ string guestid;

        /*0x108c9b8*/ <>c__DisplayClass71_0();
        /*0x108c9c0*/ void <TryDetach>b__1(ServerProtocol.ResAccountDetach res);
    }

    class <>c__DisplayClass76_0
    {
        /*0x10*/ System.Action<UnityEngine.Purchasing.Product> onSuccess;
        /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

        /*0x108cbec*/ <>c__DisplayClass76_0();
        /*0x108cbf4*/ void <BuyPurchasing>b__0(UnityEngine.Purchasing.Product product);
        /*0x108cc88*/ void <BuyPurchasing>b__1(PUBSDK.DefinePubSDK.PubProcessError error);
    }

    class <>c__DisplayClass77_0
    {
        /*0x10*/ string productid;

        /*0x108cd1c*/ <>c__DisplayClass77_0();
        /*0x108cd24*/ bool <GetLocalizePrice>b__0(UnityEngine.Purchasing.Product x);
    }

    struct <SetGenericPush>d__81 : System.Runtime.CompilerServices.IAsyncStateMachine
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
        /*0x38*/ PubManager <>4__this;
        /*0x40*/ bool night;
        /*0x41*/ bool enable;
        /*0x48*/ System.Action onComplete;
        /*0x50*/ string <topic>5__2;
        /*0x58*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

        /*0xa8a260*/ void MoveNext();
        /*0xa8a268*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
    }

    struct <SetAdvertisePush>d__82 : System.Runtime.CompilerServices.IAsyncStateMachine
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
        /*0x38*/ PubManager <>4__this;
        /*0x40*/ bool enable;
        /*0x48*/ System.Action onComplete;
        /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

        /*0xa8a24c*/ void MoveNext();
        /*0xa8a254*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
    }

    struct <SetLanguagePush>d__83 : System.Runtime.CompilerServices.IAsyncStateMachine
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
        /*0x38*/ PubManager <>4__this;
        /*0x40*/ bool enable;
        /*0x44*/ PTShare.Define.LanguageCode code;
        /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

        /*0xa8a274*/ void MoveNext();
        /*0xa8a27c*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
    }

    class <>c__DisplayClass97_0
    {
        /*0x10*/ PUBSDK.DefinePubSDK.PubLoginType eType;

        /*0x108cd54*/ <>c__DisplayClass97_0();
        /*0x108cd5c*/ bool <IsLinkPlatform>b__0(PUBSDK.DefinePubSDK.PubLoginType x);
    }
}

class TempA
{
    /*0x10*/ string Payload;

    /*0x1167924*/ TempA();
}

class TempB
{
    /*0x10*/ string json;

    /*0x116792c*/ TempB();
}

class TempC
{
    /*0x10*/ string purchaseToken;

    /*0x1167934*/ TempC();
}

class CrashlyticsString
{
    static string Login = "Login";
    static string Logout = "Logout";
    static string Conversion = "Conversion";
    static string MainScene = "MainScene";
    static string MazeScene = "MazeScene";
    static string BattleScene = "BattleScene";
    static string DungeonScene = "DungeonScene";
    static string UserUID = "UserUID";
    static string LoginPlatform = "LoginPlatform";
    static string UserName = "UserName";

    /*0xf4ce44*/ CrashlyticsString();
}

class InappPurchaseManager : Singleton.Component.SingletonComponent<InappPurchaseManager>
{
    /*0x21*/ bool IsInitailizing;

    /*0x1573194*/ InappPurchaseManager();
    /*0x1573178*/ void AwakeInstance();
    /*0x157317c*/ bool InitInstance();
    /*0x1573188*/ void ReleaseInstance();
    /*0x157318c*/ bool IsInitialized();
    /*0x1573184*/ void InitializePurchasing();
}

class DefinePveRanking
{
    enum DIFFICULTY
    {
        EASY = 0,
        NORMAL = 1,
        HARD = 2,
        HELL = 3,
    }
}

class PveRankingManager : Singleton.Component.SingletonComponent<PveRankingManager>
{
    /*0x28*/ ServerProtocol.ResPveRankingEnter currentInfo;
    /*0x30*/ int m_battleChallengeNumber;
    /*0x34*/ DefinePveRanking.DIFFICULTY m_difficulty;

    /*0x1023418*/ PveRankingManager();
    /*0x1022120*/ string get_UserToken();
    /*0x10221a0*/ void AwakeInstance();
    /*0x10221a4*/ bool InitInstance();
    /*0x10221ac*/ void ReleaseInstance();
    /*0x10221b0*/ void Send_Enter(System.Action onSuccess);
    /*0x1021084*/ void Send_Ranking(System.Action<ServerProtocol.ResPveRankingRanking> onSuccess);
    /*0x10222e8*/ void Send_Begin(string heroids, System.Action<ServerProtocol.ResPveRankingBegin> onCallBack);
    /*0x1022444*/ void Send_Finish(bool isWin, string statistics, string playData, long lcp, string hpMps, int playTimeMilis, System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack);
    /*0x10225dc*/ System.Collections.IEnumerator CoLevelup(ServerProtocol.ResPveRankingFinish response, int prevScore, System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack);
    /*0x101efa8*/ int GetCurrentRank();
    /*0x102265c*/ int GetCurrentLeague();
    /*0x1020120*/ int GetCurrentRewardIndex();
    /*0x101efc0*/ int GetCurrentScore();
    /*0x10229c4*/ int GetCurrentChallengeCount();
    /*0x101efe8*/ float GetRankPercent();
    /*0x1022b7c*/ System.Collections.Generic.List<PTShare.Define.SPveStage> GetCurrentStageList();
    /*0x1022bfc*/ int GetBonusDay();
    /*0x101e7b0*/ int GetTotalClearCount();
    /*0x1022d60*/ int GetChallengeNumber();
    /*0x1022d68*/ int GetDifficulty();
    /*0x101fb98*/ TableData.TableData_Pvenoblity GetNoblityTableData();
    /*0x1022d7c*/ TableData.TableData_Pvenoblity GetPrevNoblityTableData();
    /*0x1022d70*/ TableData.TableData_Pvenoblity GetNoblityTableData(int noblityIdx);
    /*0x1022d9c*/ TableData.TableData_Pvenoblity GetPrevNoblityTableData(int noblityIdx);
    /*0x1022da8*/ TableData.TableData_Pveclearreward GetNextClearReward();
    /*0x1022ed0*/ TableData.TableData_Pveclearreward GetLastClearReward();
    /*0x1022674*/ System.Collections.Generic.List<int> GetTop3Score();
    /*0x10205a4*/ System.Collections.Generic.List<string> GetRankRewardList();
    /*0x1022f58*/ int GetChallengeId(int index);
    /*0x1022fd4*/ int GetTicketRefreshSecond();
    /*0x1020680*/ System.Collections.Generic.List<float> GetRankPercentList();
    /*0x1022a60*/ float GetRankPercent(int index);
    /*0x1023108*/ float GetRankLastPercent();
    /*0x1021994*/ void SetUserRankPercentText(ref LocalizeString localize);
    /*0x101f59c*/ System.ValueTuple<int, int> GetNoblityLv();
    /*0x101fbb4*/ int GetNoblityIndex(string noblity);
    /*0x1023168*/ int GetLeftTryCount();
    /*0x102324c*/ System.ValueTuple<bool, System.TimeSpan> IsBreakTime();
    /*0x1023404*/ void SetChallengeNumber(int num);
    /*0x102340c*/ void SetDifficulty(DefinePveRanking.DIFFICULTY difficulty);
    /*0x1023414*/ void DailyChange();

    class <>c__DisplayClass8_0
    {
        /*0x10*/ PveRankingManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0x1091ca8*/ <>c__DisplayClass8_0();
        /*0x1091cb0*/ void <Send_Enter>b__0(ServerProtocol.ResPveRankingEnter response);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ PveRankingManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResPveRankingRanking> onSuccess;

        /*0x1091cdc*/ <>c__DisplayClass9_0();
        /*0x1091ce4*/ void <Send_Ranking>b__0(ServerProtocol.ResPveRankingRanking response);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResPveRankingBegin> onCallBack;

        /*0x1091830*/ <>c__DisplayClass10_0();
        /*0x1091838*/ void <Send_Begin>b__0(ServerProtocol.ResPveRankingBegin response);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PveRankingManager <>4__this;
        /*0x18*/ bool isWin;
        /*0x20*/ System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack;

        /*0x10918a8*/ <>c__DisplayClass11_0();
        /*0x10918b0*/ void <Send_Finish>b__0(ServerProtocol.ResPveRankingFinish response);
    }

    class <>c
    {
        static /*0x0*/ PveRankingManager.<> <>9;
        static /*0x8*/ System.Func<bool> <>9__12_0;
        static /*0x10*/ System.Comparison<int> <>9__30_0;

        static /*0x109170c*/ <>c();
        /*0x109176c*/ <>c();
        /*0x1091774*/ bool <CoLevelup>b__12_0();
        /*0x1091818*/ int <GetTop3Score>b__30_0(int lhs, int rhs);
    }

    class <CoLevelup>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack;
        /*0x28*/ ServerProtocol.ResPveRankingFinish response;
        /*0x30*/ int prevScore;

        /*0x1091d74*/ <CoLevelup>d__12(int <>1__state);
        /*0x1091da0*/ void System.IDisposable.Dispose();
        /*0x1091da4*/ bool MoveNext();
        /*0x1091f60*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1091f68*/ void System.Collections.IEnumerator.Reset();
        /*0x1091fa8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ int clearCount;

        /*0x1091c0c*/ <>c__DisplayClass28_0();
        /*0x1091c14*/ bool <GetNextClearReward>b__0(TableData.TableData_Pveclearreward x);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ System.Collections.Generic.List<int> scores;
        /*0x18*/ System.Action<PTShare.Define.SPveStage.SData> <>9__1;

        /*0x1091c38*/ <>c__DisplayClass30_0();
        /*0x1091c40*/ void <GetTop3Score>b__1(PTShare.Define.SPveStage.SData f);
    }
}

class QuestManager : Singleton.Data.SingletonData<QuestManager>
{
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuestPackage>>> curDicsCacheQuest;
    /*0x28*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuestPackage>> curDicsCacheGroupQuest;
    /*0x30*/ bool <UseActivateClearQuest>k__BackingField;
    /*0x38*/ PTShare.Define.SQuest curDailyQuest;
    /*0x40*/ PTShare.Define.SQuest curWeeklyQuest;
    /*0x48*/ PTShare.Define.SQuest curDailyEventQuest;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> curMainQuestStep;
    /*0x58*/ bool bIsCacheInitialize;

    /*0x1241c30*/ QuestManager();
    /*0x1240590*/ bool get_UseActivateClearQuest();
    /*0x1240598*/ void set_UseActivateClearQuest(bool value);
    /*0x12405a4*/ string get_UserToken();
    /*0x1240624*/ bool InitInstance();
    /*0x1240824*/ void ReleaseInstance();
    /*0x124082c*/ void Send_EnterQuest(System.Action _callback);
    /*0x1240964*/ void Send_NewQuest(System.Action _callback);
    /*0x123a39c*/ void Send_TakeQuest(System.Action _callback, QuestGroupType _eGroupType, int _index, int _eventId);
    /*0x1240a9c*/ void Send_ExchangeQuest(System.Action<int> _callback, QuestGroupType _eGroupType, int _index, int _arrIndex, int _eventId);
    /*0x123cb30*/ void Send_TakeMainQuest(System.Action _callback, int _index);
    /*0x123cfcc*/ void Send_VisitSite(System.Action _callback, string siteName);
    /*0x124063c*/ void InitializeQuest();
    /*0x1240ef0*/ void SetDailyQuest(PTShare.Define.SQuest _quest);
    /*0x124100c*/ void SetWeeklyQuest(PTShare.Define.SQuest _quest);
    /*0x1241128*/ void SetMainQuestStep(System.Collections.Generic.List<PTShare.Define.SMainQuest> _liMain);
    /*0x1241130*/ void SetDailyEventQuest(PTShare.Define.SQuest _quest);
    /*0x1241138*/ PTShare.Define.SQuest GetDailyQuest();
    /*0x1241140*/ PTShare.Define.SQuest GetWeeklyQuest();
    /*0x1241148*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> GetMainStep();
    /*0x1241150*/ PTShare.Define.SQuest GetDailyEventQuest();
    /*0x1241158*/ System.Collections.Generic.List<QuestPackage> FindGroupByQuestPackage(string _strQuestGroupid);
    /*0x1240c0c*/ System.Collections.Generic.List<QuestPackage> FindGroupByQuestPackage(QuestContentType _eContentType, QuestGroupType _eGroupType);
    /*0x123b0c0*/ System.Collections.Generic.List<QuestPackage> FindCacheQuestPackage(QuestContentType _eContentType, QuestGroupType _eGroupType, bool _bIsViewQuest);
    /*0x123e840*/ System.Collections.Generic.List<QuestPackage> FindCacheQuestGroupID(string _groupid);
    /*0x12414c8*/ long FindConditionAmountbyQuestType(QuestAdvanceType _questAdvanceType, TableData.TableData_Questgroup _questgroup);
    /*0x124153c*/ PTShare.Define.SQuest FindGroupTypeQuest(QuestGroupType _eGroupType);
    /*0x1241578*/ bool UseClearQuest_Daily();
    /*0x1241788*/ bool UseClearQuest_Weekly();
    /*0x1241998*/ bool UseClearQuest_Main();
    /*0x1241d28*/ void <InitializeQuest>b__21_0(string key);

    class <>c__DisplayClass15_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf90590*/ <>c__DisplayClass15_0();
        /*0xf90598*/ void <Send_EnterQuest>b__0(ServerProtocol.ResQuestEnter res);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf90620*/ <>c__DisplayClass16_0();
        /*0xf90628*/ void <Send_NewQuest>b__0(ServerProtocol.ResQuestNew res);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ QuestGroupType _eGroupType;
        /*0x1c*/ int _index;
        /*0x20*/ System.Action _callback;

        /*0xf906c4*/ <>c__DisplayClass17_0();
        /*0xf906cc*/ void <Send_TakeQuest>b__0(ServerProtocol.ResQuestTake res);
    }

    class <>c__DisplayClass17_1
    {
        /*0x10*/ ServerProtocol.ResQuestTake res;

        /*0xf909d0*/ <>c__DisplayClass17_1();
        /*0xf909d8*/ bool <Send_TakeQuest>b__1(PTShare.Define.SQuestRow x);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ QuestGroupType _eGroupType;
        /*0x1c*/ int _index;
        /*0x20*/ int _arrIndex;
        /*0x28*/ System.Action<int> _callback;

        /*0xf90a08*/ <>c__DisplayClass18_0();
        /*0xf90a10*/ void <Send_ExchangeQuest>b__0(ServerProtocol.ResQuestExchange res);
    }

    class <>c
    {
        static /*0x0*/ QuestManager.<> <>9;
        static /*0x8*/ System.Predicate<int> <>9__18_1;

        static /*0xf9051c*/ <>c();
        /*0xf9057c*/ <>c();
        /*0xf90584*/ bool <Send_ExchangeQuest>b__18_1(int x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf90ddc*/ <>c__DisplayClass19_0();
        /*0xf90de4*/ void <Send_TakeMainQuest>b__0(ServerProtocol.ResQuestTakeMain res);
    }

    class <>c__DisplayClass19_1
    {
        /*0x10*/ ServerProtocol.ResQuestTakeMain res;

        /*0xf910a0*/ <>c__DisplayClass19_1();
        /*0xf910a8*/ bool <Send_TakeMainQuest>b__1(PTShare.Define.SMainQuest x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ System.Action _callback;

        /*0xf910e0*/ <>c__DisplayClass20_0();
        /*0xf910e8*/ void <Send_VisitSite>b__0(ServerProtocol.ResQuestVisitSite instance);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ PTShare.Define.SQuest _quest;

        /*0xf910fc*/ <>c__DisplayClass22_0();
        /*0xf91104*/ PTShare.Define.SQuestRow <SetDailyQuest>b__0(int n);
    }

    class <>c__DisplayClass22_1
    {
        /*0x10*/ int n;

        /*0xf91248*/ <>c__DisplayClass22_1();
        /*0xf91250*/ bool <SetDailyQuest>b__1(PTShare.Define.SQuestRow f);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ PTShare.Define.SQuest _quest;

        /*0xf91274*/ <>c__DisplayClass23_0();
        /*0xf9127c*/ PTShare.Define.SQuestRow <SetWeeklyQuest>b__0(int n);
    }

    class <>c__DisplayClass23_1
    {
        /*0x10*/ int n;

        /*0xf913c0*/ <>c__DisplayClass23_1();
        /*0xf913c8*/ bool <SetWeeklyQuest>b__1(PTShare.Define.SQuestRow f);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ bool _bIsViewQuest;

        /*0xf913ec*/ <>c__DisplayClass32_0();
        /*0xf913f4*/ bool <FindCacheQuestPackage>b__0(QuestPackage x);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<QuestPackage, bool> <>9__0;

        /*0xf91430*/ <>c__DisplayClass36_0();
        /*0xf91438*/ bool <UseClearQuest_Daily>b__0(QuestPackage x);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<QuestPackage, bool> <>9__0;

        /*0xf91564*/ <>c__DisplayClass37_0();
        /*0xf9156c*/ bool <UseClearQuest_Weekly>b__0(QuestPackage x);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<QuestPackage, bool> <>9__0;

        /*0xf91698*/ <>c__DisplayClass38_0();
        /*0xf916a0*/ bool <UseClearQuest_Main>b__0(QuestPackage x);
    }
}

class QuestPackage
{
    /*0x10*/ QuestAdvanceType QuestType;
    /*0x18*/ TableData.TableData_Quest QuestParent;
    /*0x20*/ TableData.TableData_Questgroup QuestGroup;
    /*0x28*/ TableData.TableData_Questpropertypoint PropertyPoint;
    /*0x30*/ TableData.TableData_Questchapterclear ChapterClear;
    /*0x38*/ TableData.TableData_Queststageclear StageClear;
    /*0x40*/ TableData.TableData_Questgacha Gacha;
    /*0x48*/ TableData.TableData_Queststageidle StageIdle;
    /*0x50*/ TableData.TableData_Queststagetry StageTry;
    /*0x58*/ TableData.TableData_Questheroupgrade HeroUpgrade;
    /*0x60*/ TableData.TableData_Questequipupgrade EquipUpgrade;
    /*0x68*/ TableData.TableData_Questfriend Friend;
    /*0x70*/ TableData.TableData_Questprizeboard PrizeBoard;
    /*0x78*/ TableData.TableData_Questbuy Buy;
    /*0x80*/ TableData.TableData_Questarena Arena;
    /*0x88*/ TableData.TableData_Questheroget HeroGet;
    /*0x90*/ TableData.TableData_Questlevel Level;
    /*0x98*/ TableData.TableData_Questgetitem GetItem;
    /*0xa0*/ TableData.TableData_Questmove Move;
    /*0xa8*/ TableData.TableData_Questlabyrinth Labyrinth;
    /*0xb0*/ TableData.TableData_Questresonance Resonance;
    /*0xb8*/ TableData.TableData_Questspirittowerclear SpiritTower;

    static /*0x1242024*/ void MoveContent(DefineQuest.MoveContentsType moveContentType);
    /*0x1241348*/ QuestPackage(QuestAdvanceType _type, TableData.TableData_Questgroup _questGroupID);
    /*0x123cebc*/ bool IsThisQuest(QuestAdvanceType _type);
    /*0x1238afc*/ string GetTitle();
    /*0x1239ba8*/ long GetConditionAmount();
    /*0x123a578*/ void MoveContents();
    /*0x123a1cc*/ QuestPackage GetUnlockContent();
    /*0x123a118*/ bool IsUnlocked();
    /*0x1239d98*/ bool IsMoveContents();
    /*0x123a0e8*/ bool IsUnlockContents();
    /*0x1239d70*/ bool IsAchieve(long _amount);
    /*0x12435a4*/ float GetProgress(long _amount);

    class <>c
    {
        static /*0x0*/ QuestPackage.<> <>9;
        static /*0x8*/ System.Action <>9__27_0;
        static /*0x10*/ System.Action <>9__27_1;
        static /*0x18*/ System.Action <>9__27_2;
        static /*0x20*/ System.Action <>9__27_3;
        static /*0x28*/ System.Action <>9__27_19;
        static /*0x30*/ System.Action <>9__27_4;
        static /*0x38*/ System.Action <>9__27_20;
        static /*0x40*/ System.Action <>9__27_5;
        static /*0x48*/ System.Action <>9__27_21;
        static /*0x50*/ System.Action <>9__27_6;
        static /*0x58*/ System.Action <>9__27_22;
        static /*0x60*/ System.Action <>9__27_7;
        static /*0x68*/ System.Action <>9__27_8;
        static /*0x70*/ System.Action <>9__27_23;
        static /*0x78*/ System.Action <>9__27_9;
        static /*0x80*/ System.Action <>9__27_24;
        static /*0x88*/ System.Action <>9__27_26;
        static /*0x90*/ System.Action<bool> <>9__27_25;
        static /*0x98*/ System.Action <>9__27_10;
        static /*0xa0*/ System.Action <>9__27_27;
        static /*0xa8*/ System.Action <>9__27_11;
        static /*0xb0*/ System.Action <>9__27_28;
        static /*0xb8*/ System.Action <>9__27_12;
        static /*0xc0*/ System.Action <>9__27_13;
        static /*0xc8*/ System.Action <>9__27_14;
        static /*0xd0*/ System.Action <>9__27_29;
        static /*0xd8*/ System.Action <>9__27_15;
        static /*0xe0*/ System.Action <>9__27_30;
        static /*0xe8*/ System.Action <>9__27_16;
        static /*0xf0*/ System.Action <>9__27_17;
        static /*0xf8*/ System.Action <>9__27_31;
        static /*0x100*/ System.Action <>9__27_18;

        static /*0xf91814*/ <>c();
        /*0xf91874*/ <>c();
        /*0xf9187c*/ void <MoveContent>b__27_0();
        /*0xf9195c*/ void <MoveContent>b__27_1();
        /*0xf91a54*/ void <MoveContent>b__27_2();
        /*0xf91b34*/ void <MoveContent>b__27_3();
        /*0xf91c54*/ void <MoveContent>b__27_4();
        /*0xf91d70*/ void <MoveContent>b__27_19();
        /*0xf91e54*/ void <MoveContent>b__27_5();
        /*0xf91f9c*/ void <MoveContent>b__27_20();
        /*0xf92080*/ void <MoveContent>b__27_6();
        /*0xf921c8*/ void <MoveContent>b__27_21();
        /*0xf922ac*/ void <MoveContent>b__27_7();
        /*0xf923f4*/ void <MoveContent>b__27_22();
        /*0xf924d4*/ void <MoveContent>b__27_8();
        /*0xf925a8*/ void <MoveContent>b__27_9();
        /*0xf926f0*/ void <MoveContent>b__27_23();
        /*0xf927d4*/ void <MoveContent>b__27_10();
        /*0xf92a50*/ void <MoveContent>b__27_24();
        /*0xf92afc*/ void <MoveContent>b__27_25(bool instance);
        /*0xf92cec*/ void <MoveContent>b__27_26();
        /*0xf92d98*/ void <MoveContent>b__27_11();
        /*0xf92ee0*/ void <MoveContent>b__27_27();
        /*0xf92fc0*/ void <MoveContent>b__27_12();
        /*0xf93108*/ void <MoveContent>b__27_28();
        /*0xf931e8*/ void <MoveContent>b__27_13();
        /*0xf93288*/ void <MoveContent>b__27_14();
        /*0xf93428*/ void <MoveContent>b__27_15();
        /*0xf93570*/ void <MoveContent>b__27_29();
        /*0xf93650*/ void <MoveContent>b__27_16();
        /*0xf93798*/ void <MoveContent>b__27_30();
        /*0xf93878*/ void <MoveContent>b__27_17();
        /*0xf939ac*/ void <MoveContent>b__27_18();
        /*0xf93af4*/ void <MoveContent>b__27_31();
    }
}

enum RankingBoardType
{
    NONE = 0,
    FACTION_FIRE = 1,
    FACTION_WIND = 2,
    FACTION_NATURE = 3,
    FACTION_WATER = 4,
    CAMPAIGN = 10,
    TOWER = 11,
    HARDCAMPAIGN = 12,
    ARENA = 13,
    WORLDARENA = 14,
    GUILDBOSS = 100,
    GUILDBOSS_PERSON = 101,
    MINIGAME_RACE = 201,
    MINIGAME_RUN = 202,
    End = 203,
}

class RankBoardManager : Singleton.Data.SingletonData<RankBoardManager>
{
    /*0x20*/ PTShare.Define.SBoardCampaignRanker curCampaignTopRanker;
    /*0x28*/ PTShare.Define.SBoardCampaignRanker curHardCampaignTopRanker;
    /*0x30*/ PTShare.Define.SBoardTowerRanker curTowerTopRanker;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> curFactionTopRankers;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SBoardFiveRanker> curTopFiveRankList;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> curCampaignRankList;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> curHardCampaignRankList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> curTowerRankList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> curFactionRankerList;
    /*0x68*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, PTShare.Define.SBoardQuest>> curRewardListDicInfo;
    /*0x70*/ bool curPossiableReceiveReward;
    /*0x71*/ bool curCampaignToReward;
    /*0x72*/ bool curHardCampaignToReward;
    /*0x73*/ bool curTowerToReward;
    /*0x78*/ System.Collections.Generic.List<bool> curFactionsReward;
    /*0x80*/ PTShare.Define.SBoardQuest _sBoardQuest;

    /*0x11bc238*/ RankBoardManager();
    /*0x11bbc70*/ string get_UserToken();
    /*0x11bbcf0*/ bool InitInstance();
    /*0x11bbcf8*/ void ReleaseInstance();
    /*0x11bbcfc*/ void Send_EnterBoard(System.Action _callback);
    /*0x11baecc*/ void Send_CampaignBoard(System.Action<string, int> _callback);
    /*0x11bb004*/ void Send_HardCampaignBoard(System.Action<string, int> _callback);
    /*0x11bb13c*/ void Send_TowerBoard(System.Action<string, int> _callback);
    /*0x11bba0c*/ void Send_FactionBoard(int faction, System.Action<string, int> _callback);
    /*0x11bbe34*/ void Send_RewardList(System.Action _callback, RankingBoardType _eType);
    /*0x11bbf88*/ void Send_TakeReward(System.Action _callback, RankingBoardType _eType, int _index);
    /*0x11bc0e8*/ void SetPossiableReceiveReward(bool _enable);
    /*0x11bc0f4*/ bool GetPossiableReceiveReward();
    /*0x11bc0fc*/ PTShare.Define.SBoardCampaignRanker GetCampaignTopRanker();
    /*0x11bc104*/ PTShare.Define.SBoardCampaignRanker GetHardCampaignTopRanker();
    /*0x11bc10c*/ PTShare.Define.SBoardTowerRanker GetTowerTopRanker();
    /*0x11bb8a8*/ PTShare.Define.SBoardFactionRanker GetFactionTopRanker(int faction);
    /*0x11bc114*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> GetCampaignRankList();
    /*0x11bc11c*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> GetHardCampaignRankList();
    /*0x11bc124*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> GetTowerRankList();
    /*0x11bc12c*/ System.Collections.Generic.List<PTShare.Define.SBoardFiveRanker> GetFiveRankerList();
    /*0x11bc134*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> GetFactionRankerList();
    /*0x11bb55c*/ int ConvertFactionRank(RankingBoardType _eType);
    /*0x11bc13c*/ System.Collections.Generic.List<PTShare.Define.SBoardQuest> GetTypeToRewardList(RankingBoardType _eType);
    /*0x11babf8*/ bool IsPossiableReward(RankingBoardType _eType);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf9718c*/ <>c__DisplayClass20_0();
        /*0xf97194*/ void <Send_EnterBoard>b__0(ServerProtocol.ResBoardEnter response);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf97240*/ <>c__DisplayClass21_0();
        /*0xf97248*/ void <Send_CampaignBoard>b__0(ServerProtocol.ResBoardCampaign response);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf972d4*/ <>c__DisplayClass22_0();
        /*0xf972dc*/ void <Send_HardCampaignBoard>b__0(ServerProtocol.ResBoardHardCampaign response);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf97368*/ <>c__DisplayClass23_0();
        /*0xf97370*/ void <Send_TowerBoard>b__0(ServerProtocol.ResBoardTower response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf97428*/ <>c__DisplayClass24_0();
        /*0xf97430*/ void <Send_FactionBoard>b__0(ServerProtocol.ResBoardHeroPoint response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ int _nType;
        /*0x20*/ System.Action _callback;

        /*0xf974e8*/ <>c__DisplayClass25_0();
        /*0xf974f0*/ void <Send_RewardList>b__0(ServerProtocol.ResBoardRewardList response);
    }

    class <>c
    {
        static /*0x0*/ RankBoardManager.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SBoardQuest, int> <>9__25_1;
        static /*0x10*/ System.Func<PTShare.Define.SBoardQuest, PTShare.Define.SBoardQuest> <>9__25_2;
        static /*0x18*/ System.Func<PTShare.Define.SBoardQuest, bool> <>9__26_1;

        static /*0xf970ec*/ <>c();
        /*0xf9714c*/ <>c();
        /*0xf97154*/ int <Send_RewardList>b__25_1(PTShare.Define.SBoardQuest k);
        /*0xf9716c*/ PTShare.Define.SBoardQuest <Send_RewardList>b__25_2(PTShare.Define.SBoardQuest v);
        /*0xf97174*/ bool <Send_TakeReward>b__26_1(PTShare.Define.SBoardQuest x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ int _nType;
        /*0x1c*/ int _index;
        /*0x20*/ RankingBoardType _eType;
        /*0x28*/ System.Action _callback;

        /*0xf97738*/ <>c__DisplayClass26_0();
        /*0xf97740*/ void <Send_TakeReward>b__0(ServerProtocol.ResBoardTakeReward response);
    }
}

class RedDotAbility : RedDotBase
{
    /*0x11c3cb8*/ RedDotAbility();
    /*0x11c3974*/ void OnAwake();
    /*0x11c39f0*/ void OnEnableMethod();
    /*0x11c3ac4*/ void OnDisableMethod();
    /*0x11c3b70*/ void HandleRedDotEvent();
}

class RedDotAds : RedDotBase
{
    /*0x28*/ int m_index;

    /*0x11c3e1c*/ RedDotAds();
    /*0x11c3cd8*/ void InitReddot(int index);
    /*0x11c3ce8*/ void OnAwake();
    /*0x11c3d1c*/ void OnEnableMethod();
    /*0x11c3da0*/ void HandleRedDotEvent();
}

class RedDotArea : RedDotBase
{
    /*0x11c3ff0*/ RedDotArea();
    /*0x11c3e30*/ void OnAwake();
    /*0x11c3e58*/ void OnEnableMethod();
    /*0x11c3fe8*/ void OnDisableMethod();
    /*0x11c3fec*/ void HandleRedDotEvent();
    /*0x11c3e7c*/ void EnableArea();
}

class RedDotAsend : RedDotBase
{
    /*0x11c41b0*/ RedDotAsend();
    /*0x11c4000*/ void OnAwake();
    /*0x11c4028*/ void OnEnableMethod();
    /*0x11c4054*/ void OnDisableMethod();
    /*0x11c4058*/ void HandleRedDotEvent();
}

class RedDotBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ RedDotType m_RedDotType;
    /*0x20*/ AtlasImage m_cDotImage;

    /*0x11c3cc8*/ RedDotBase();
    /*0x11c41c0*/ void Awake();
    /*0x11c399c*/ void OnAwake();
    /*0x11c41cc*/ void OnEnable();
    /*0x11c3a1c*/ void OnEnableMethod();
    /*0x11c446c*/ void OnDisable();
    /*0x11c3ac8*/ void OnDisableMethod();
    /*0x11c3c6c*/ void EnableDot(bool _enable);
    /*0x11c4688*/ void RefreshEvent();
    void HandleRedDotEvent();
}

class RedDotBookTab : RedDotBase
{
    /*0x11c48ec*/ RedDotBookTab();
    /*0x11c4694*/ void OnAwake();
    /*0x11c46bc*/ void OnEnableMethod();
    /*0x11c4838*/ void OnDisableMethod();
    /*0x11c4798*/ void BindEvent();
    /*0x11c46f8*/ void DeleteEvent();
    /*0x11c485c*/ void HandleRedDotEvent();
}

class RedDotBounty : RedDotBase
{
    /*0x11c49f0*/ RedDotBounty();
    /*0x11c48fc*/ void OnAwake();
    /*0x11c4930*/ void OnEnableMethod();
    /*0x11c4994*/ void HandleRedDotEvent();
}

class RedDotCamp : RedDotBase
{
    /*0x11c5000*/ RedDotCamp();
    /*0x11c4a00*/ void OnAwake();
    /*0x11c4a28*/ void OnEnableMethod();
    /*0x11c4a54*/ void OnDisableMethod();
    /*0x11c4a58*/ bool CheckUnlockGacha();
    /*0x11c4adc*/ bool CheckUnlockRankingBoard();
    /*0x11c4b60*/ bool CheckUnlockGoddessTemple();
    /*0x11c4be4*/ bool CheckAsend();
    /*0x11c4d20*/ void HandleRedDotEvent();
}

class RedDotCashShop : RedDotBase
{
    /*0x28*/ DefineCashShop.CashShopCategoryType m_cashShopCategoryType;
    /*0x2c*/ DefineCashShop.CashShopTabType m_cashShopTabType;

    /*0x11c55cc*/ RedDotCashShop();
    /*0x11c5010*/ void OnAwake();
    /*0x11c5038*/ void OnEnableMethod();
    /*0x11c559c*/ void OnDisableMethod();
    /*0x11c5338*/ void BindEvent();
    /*0x11c50d4*/ void DeleteEvent();
    /*0x11c55c0*/ void HandleRedDotEvent();
    /*0x11c55c4*/ void HandleRedDotEventPurchase(string packageId);
    /*0x11c55c8*/ void HandleRedDotEventJoinPage(DefineCashShop.CashShopTabType tabType);
    /*0x11c506c*/ void UpdateCashShopReddot();
}

class RedDotChat : RedDotBase
{
    /*0x11c5868*/ RedDotChat();
    /*0x11c55e8*/ void OnAwake();
    /*0x11c560c*/ void OnEnableMethod();
    /*0x11c5638*/ void OnDisableMethod();
    /*0x11c563c*/ bool CheckDot();
    /*0x11c5840*/ void HandleRedDotEvent();

    class <>c
    {
        static /*0x0*/ RedDotChat.<> <>9;
        static /*0x8*/ System.Func<ChatSystem.ChannelInfo, bool> <>9__3_0;

        static /*0xf98244*/ <>c();
        /*0xf982a4*/ <>c();
        /*0xf982ac*/ bool <CheckDot>b__3_0(ChatSystem.ChannelInfo x);
    }
}

class RedDotChatTab : RedDotBase
{
    /*0x11c5a4c*/ RedDotChatTab();
    /*0x11c5878*/ void OnAwake();
    /*0x11c58a0*/ void OnEnableMethod();
    /*0x11c5a20*/ void OnDisableMethod();
    /*0x11c5a24*/ void HandleRedDotEvent();
    /*0x11c58cc*/ bool IsCondition();

    class <>c
    {
        static /*0x0*/ RedDotChatTab.<> <>9;
        static /*0x8*/ System.Func<ChatSystem.ChannelInfo, bool> <>9__4_0;

        static /*0xf982d8*/ <>c();
        /*0xf98338*/ <>c();
        /*0xf98340*/ bool <IsCondition>b__4_0(ChatSystem.ChannelInfo x);
    }
}

class RedDotEventBoss : RedDotBase
{
    /*0x11c5bec*/ RedDotEventBoss();
    /*0x11c5b04*/ void OnAwake();
    /*0x11c5b38*/ void OnEnableMethod();
    /*0x11c5b64*/ void HandleRedDotEvent();
}

class RedDotFastIdle : RedDotBase
{
    /*0x11c5cc0*/ RedDotFastIdle();
    /*0x11c5bfc*/ void OnAwake();
    /*0x11c5c30*/ void HandleRedDotEvent();
}

class RedDotFriend : RedDotBase
{
    /*0x28*/ bool m_checkAccountTop;
    /*0x29*/ bool m_checkRequestFriend;
    /*0x2a*/ bool m_checkFriendPoint;
    /*0x2b*/ bool m_checkLend;
    /*0x2c*/ bool m_checkRentSlot;
    /*0x2d*/ bool m_checkNewMercenary;

    /*0x11c628c*/ RedDotFriend();
    /*0x11c5cd0*/ void OnAwake();
    /*0x11c5cf8*/ void OnEnableMethod();
    /*0x11c5dac*/ void OnDisableMethod();
    /*0x11c5db0*/ void HandleRedDotEvent();
    /*0x11c5db4*/ bool CheckAccountTop();
    /*0x11c5e24*/ bool CheckRequestFirend();
    /*0x11c5ec0*/ bool CheckFriendPoint();
    /*0x11c60c0*/ bool CheckLendList();
    /*0x11c61e8*/ bool CheckNewMercenary();
    /*0x11c6284*/ bool CheckRentSlot();
    /*0x11c6164*/ bool CheckUnlockMercenary();
    /*0x11c5d2c*/ void EnableActiveFriend();
}

class RedDotGacha : RedDotBase
{
    /*0x28*/ bool useNormalGacha;
    /*0x29*/ bool useHighGacha;
    /*0x2a*/ bool useFurnitureGacha;

    /*0x11c6680*/ RedDotGacha();
    /*0x11c62ac*/ void OnAwake();
    /*0x11c62d4*/ void OnEnableMethod();
    /*0x11c63c0*/ void OnDisableMethod();
    /*0x11c6468*/ void HandleRedDotEvent();
}

class RedDotGuild : RedDotBase
{
    /*0x11c678c*/ RedDotGuild();
    /*0x11c6698*/ void OnAwake();
    /*0x11c66cc*/ void OnEnableMethod();
    /*0x11c6730*/ void HandleRedDotEvent();
}

class RedDotHeroMenu : RedDotBase
{
    /*0x11c6af8*/ RedDotHeroMenu();
    /*0x11c679c*/ void OnAwake();
    /*0x11c67c4*/ void OnEnableMethod();
    /*0x11c6940*/ void OnDisableMethod();
    /*0x11c68a0*/ void BindEvent();
    /*0x11c6800*/ void DeleteEvent();
    /*0x11c6964*/ void HandleRedDotEvent();
}

class RedDotHeroTab : RedDotBase
{
    /*0x11c6bc8*/ RedDotHeroTab();
    /*0x11c6b08*/ void OnAwake();
    /*0x11c6b30*/ void OnEnableMethod();
    /*0x11c6b64*/ void OnDisableMethod();
    /*0x11c6b60*/ void BindEvent();
    /*0x11c6b5c*/ void DeleteEvent();
    /*0x11c6b68*/ void HandleRedDotEvent();
}

class RedDotHousingLike : RedDotBase
{
    /*0x11c6cc0*/ RedDotHousingLike();
    /*0x11c6bd8*/ void OnAwake();
    /*0x11c6c00*/ void OnEnableMethod();
    /*0x11c6c2c*/ void OnDisableMethod();
    /*0x11c6c30*/ void HandleRedDotEvent();
}

class RedDotInventory : RedDotBase
{
    /*0x11c6dc0*/ RedDotInventory();
    /*0x11c6cd0*/ void OnAwake();
    /*0x11c6d04*/ void OnEnableMethod();
    /*0x11c6d30*/ void HandleRedDotEvent();
}

class RedDotMail : RedDotBase
{
    /*0x28*/ bool m_bMailEnable;

    /*0x11c6f24*/ RedDotMail();
    /*0x11c6dd0*/ void OnAwake();
    /*0x11c6df8*/ void OnEnableMethod();
    /*0x11c6e24*/ void OnDisableMethod();
    /*0x11c6e28*/ void HandleRedDotEvent();
}

class RedDotMinigame : RedDotBase
{
    /*0x28*/ bool m_isRace;
    /*0x29*/ bool m_isRun;

    /*0x11c7828*/ RedDotMinigame();
    /*0x11c76fc*/ void OnAwake();
    /*0x11c7724*/ void OnEnableMethod();
    /*0x11c7820*/ void OnDisableMethod();
    /*0x11c7824*/ void HandleRedDotEvent();
    /*0x11c7748*/ void EanbleRace();
}

class RedDotNotice : RedDotBase
{
    /*0x11c7968*/ RedDotNotice();
    /*0x11c7838*/ void OnAwake();
    /*0x11c7860*/ void OnEnableMethod();
    /*0x11c788c*/ void OnDisableMethod();
    /*0x11c7890*/ void HandleRedDotEvent();
}

class RedDotQuest : RedDotBase
{
    /*0x11c7a54*/ RedDotQuest();
    /*0x11c7978*/ void OnAwake();
    /*0x11c79a0*/ void OnEnableMethod();
    /*0x11c7a4c*/ void OnDisableMethod();
    /*0x11c7a50*/ void HandleRedDotEvent();
    /*0x11c79c4*/ void EnableActiveQuest();
}

class RedDotRaceReward : RedDotBase
{
    /*0x11c7b40*/ RedDotRaceReward();
    /*0x11c7a64*/ void OnAwake();
    /*0x11c7a8c*/ void OnEnableMethod();
    /*0x11c7b38*/ void OnDisableMethod();
    /*0x11c7b3c*/ void HandleRedDotEvent();
    /*0x11c7ab0*/ void EanbleRace();
}

class RedDotRankingBoard : RedDotBase
{
    /*0x11c7c2c*/ RedDotRankingBoard();
    /*0x11c7b50*/ void OnAwake();
    /*0x11c7b78*/ void OnEnableMethod();
    /*0x11c7c24*/ void OnDisableMethod();
    /*0x11c7c28*/ void HandleRedDotEvent();
    /*0x11c7b9c*/ void EnableRankingBoardDot();
}

class RedDotRelation : RedDotBase
{
    /*0x11c7d20*/ RedDotRelation();
    /*0x11c7c3c*/ void OnAwake();
    /*0x11c7c64*/ void OnEnableMethod();
    /*0x11c7d18*/ void OnDisableMethod();
    /*0x11c7d1c*/ void HandleRedDotEvent();
    /*0x11c7c88*/ void EnableRelation();
}

class RedDotResonance : RedDotBase
{
    /*0x11c7e80*/ RedDotResonance();
    /*0x11c7d30*/ void OnAwake();
    /*0x11c7d58*/ void OnEnableMethod();
    /*0x11c7e78*/ void OnDisableMethod();
    /*0x11c7e7c*/ void HandleRedDotEvent();
    /*0x11c7d7c*/ void EnableResonance();
}

class RedDotRoulette : RedDotBase
{
    /*0x11c7f94*/ RedDotRoulette();
    /*0x11c7e90*/ void OnAwake();
    /*0x11c7ec4*/ void OnEnableMethod();
    /*0x11c7f30*/ void HandleRedDotEvent();
}

class RedDotSkill : RedDotBase
{
    /*0x11c818c*/ RedDotSkill();
    /*0x11c7fa4*/ void OnAwake();
    /*0x11c7fcc*/ void OnEnableMethod();
    /*0x11c80b0*/ void OnDisableMethod();
    /*0x11c8000*/ void BindEvent();
    /*0x11c80d4*/ void DeleteEvent();
    /*0x11c817c*/ void HandleReddotOn();
    /*0x11c8184*/ void HandleRedDotEvent();
}

class RedDotWorldBoss : RedDotBase
{
    /*0x28*/ int m_index;

    /*0x11c8340*/ RedDotWorldBoss();
    /*0x11c819c*/ void InitReddot(int index);
    /*0x11c81ac*/ void OnAwake();
    /*0x11c81e0*/ void OnEnableMethod();
    /*0x11c8294*/ void HandleRedDotEvent();
}

class ReddotEvent : RedDotBase
{
    /*0x11c8458*/ ReddotEvent();
    /*0x11c8354*/ void OnAwake();
    /*0x11c8388*/ void OnEnableMethod();
    /*0x11c83f4*/ void HandleRedDotEvent();
}

class RedDotEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_effect;
    /*0x20*/ AtlasImage m_parent;

    /*0x11c5afc*/ RedDotEffect();
    /*0x11c5a5c*/ void OnEnable();
    /*0x11c5af4*/ void OnDisable();
    /*0x11c5a88*/ System.Collections.IEnumerator CoLoop();

    class <CoLoop>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RedDotEffect <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitSec>5__2;

        /*0xf9836c*/ <CoLoop>d__4(int <>1__state);
        /*0xf98398*/ void System.IDisposable.Dispose();
        /*0xf9839c*/ bool MoveNext();
        /*0xf98560*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf98568*/ void System.Collections.IEnumerator.Reset();
        /*0xf985a8*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum RedDotType
{
    NONE = -1,
    CHAT = 0,
    MAIL = 1,
    INVENTORY = 2,
    IDLEREWARD = 3,
    RANKINGBOARD = 4,
    QUEST = 5,
    FRIEND = 6,
    CASH_SHOP = 7,
    BOOK_TAB = 8,
    HERO_MENU = 9,
    HERO_TAB = 10,
    HERO_SKILL = 11,
    ASEND = 12,
    CAMP_MENU = 13,
    GACHA = 14,
    CHAT_TAB = 15,
    NOTICE = 16,
    EVENT = 17,
    RESONANCE = 18,
    GUILD = 19,
    MINIGAME = 20,
    BOUNTY = 21,
    RACE_REWARD = 22,
    AREA_MENU = 23,
    RELATION = 24,
    WORLDBOSS = 25,
    HOUSINGLIKE = 26,
    ABILITY = 27,
    EVENTBOSS = 28,
    EVENTROULETTE = 29,
    ADS = 30,
    End = 31,
}

class RedDotManager : Singleton.Component.SingletonComponent<RedDotManager>
{
    static /*0x0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<RedDotBase>> m_dicRedDot;
    static /*0x8*/ int REDDOT_HERO_CHECK_COUNT;
    static /*0xc*/ int REDDOT_GACHA_CHECK_COUNT;
    static /*0x10*/ System.Action OnRedDotEvent;
    /*0x28*/ bool[] m_reddotHeroChecks;
    /*0x30*/ bool <newFriendAccountTop>k__BackingField;
    /*0x31*/ bool <newCashShopAccountTop>k__BackingField;
    /*0x32*/ bool <newGuildAccountTop>k__BackingField;
    /*0x33*/ bool <newBountyAccountTop>k__BackingField;

    static /*0x11c7650*/ RedDotManager();
    static /*0x11c41d8*/ void add_OnRedDotEvent(System.Action value);
    static /*0x11c4478*/ void remove_OnRedDotEvent(System.Action value);
    static /*0x11c42d0*/ void AddDics(RedDotType _type, RedDotBase _base);
    static /*0x11c4570*/ void DelDics(RedDotType _type, RedDotBase _base);
    static /*0x11c71b8*/ void DelDicsAll(RedDotType _type);
    /*0x11c7604*/ RedDotManager();
    /*0x11c6f34*/ bool get_newFriendAccountTop();
    /*0x11c6f3c*/ void set_newFriendAccountTop(bool value);
    /*0x11c6f48*/ bool get_newCashShopAccountTop();
    /*0x11c6f50*/ void set_newCashShopAccountTop(bool value);
    /*0x11c6f5c*/ bool get_newGuildAccountTop();
    /*0x11c6f64*/ void set_newGuildAccountTop(bool value);
    /*0x11c6f70*/ bool get_newBountyAccountTop();
    /*0x11c6f78*/ void set_newBountyAccountTop(bool value);
    /*0x11c6f84*/ void AwakeInstance();
    /*0x11c6f88*/ bool InitInstance();
    /*0x11c7088*/ void ReleaseInstance();
    /*0x11c17f0*/ void Refresh(RedDotType _type);
    /*0x11c72ec*/ void AllRefresh();
    /*0x11c6a2c*/ bool IsOnHeroReddot();
    /*0x11c75a8*/ bool IsOnHeroReddot(int index);
    /*0x11c7364*/ void UpdateReddotHeroList();
    /*0x11c7600*/ void HandleRedDotEventSmartEquip(PTShare.Define.SHero hero);
}

struct RelationStatus
{
    /*0x10*/ string ConditionGrade1;
    /*0x18*/ int ConditionAmount1;
    /*0x20*/ string ConditionGrade2;
    /*0x28*/ int ConditionAmount2;
    /*0x30*/ string StatType;
    /*0x38*/ float StatValue;
}

class RelationManager : Singleton.Data.SingletonData<RelationManager>
{
    static int MaxRelationLevel = 8;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRelation> liRelation;
    /*0x28*/ System.Collections.Generic.Dictionary<int, System.Int32[]> liRelationUnitID;
    /*0x30*/ System.Collections.Generic.Dictionary<int, RelationStatus[]> liRelationStatus;

    /*0xf199f8*/ RelationManager();
    /*0xf18b80*/ string get_UserToken();
    /*0xf18c00*/ bool InitInstance();
    /*0xf18c08*/ void ReleaseInstance();
    /*0xf18c0c*/ void InitializeUnitIndexDics();
    /*0xf18cf8*/ void Send_Activate(int nIndex, System.Action callback);
    /*0xf18e88*/ void SetRelationList(System.Collections.Generic.List<PTShare.Define.SRelation> list);
    /*0xf18e90*/ System.Collections.Generic.List<PTShare.Define.SRelation> GetRelationList();
    /*0xf18e98*/ PTShare.Define.SRelation GetRelationData(int nIndex);
    /*0xf18f88*/ void RefreshLatestRelation(int nUnitID);
    /*0xf19488*/ TableData.TableData_Relation FindRelationTableData(int nUnitID);
    /*0xf196c8*/ int[] GetRelationDataUnitID(TableData.TableData_Relation data);
    /*0xf19730*/ RelationStatus[] GetRelationStatusArray(int nIndex);
    /*0xf19794*/ bool[] IsUseArrayUnit(int[] array);
    /*0xf198dc*/ bool IsPossiableActivateRelation();
    /*0xf19b30*/ void <InitializeUnitIndexDics>b__8_0(TableData.TableData_Relation x);

    class <>c__DisplayClass9_0
    {
        /*0x10*/ RelationManager <>4__this;
        /*0x18*/ int nIndex;
        /*0x20*/ System.Action callback;
        /*0x28*/ System.Predicate<PTShare.Define.SRelation> <>9__1;
        /*0x30*/ System.Predicate<PTShare.Define.SRelationMini> <>9__2;

        /*0xf98710*/ <>c__DisplayClass9_0();
        /*0xf98718*/ void <Send_Activate>b__0(ServerProtocol.ResRelationActivate res);
        /*0xf98aac*/ bool <Send_Activate>b__1(PTShare.Define.SRelation x);
        /*0xf98ad0*/ bool <Send_Activate>b__2(PTShare.Define.SRelationMini x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ int nIndex;

        /*0xf986cc*/ <>c__DisplayClass12_0();
        /*0xf986d4*/ bool <GetRelationData>b__0(PTShare.Define.SRelation x);
    }

    class <>c
    {
        static /*0x0*/ RelationManager.<> <>9;
        static /*0x8*/ System.Converter<int, int> <>9__13_0;
        static /*0x10*/ System.Func<PTShare.Define.SRelation, bool> <>9__18_0;

        static /*0xf985b0*/ <>c();
        /*0xf98610*/ <>c();
        /*0xf98618*/ int <RefreshLatestRelation>b__13_0(int x);
        /*0xf986ac*/ bool <IsPossiableActivateRelation>b__18_0(PTShare.Define.SRelation x);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ int nUnitID;
        /*0x18*/ System.Func<int, bool> <>9__0;

        /*0xf986f8*/ <>c__DisplayClass14_0();
        /*0xf98700*/ bool <FindRelationTableData>b__0(int x);
    }
}

class ResonanceManager : Singleton.Data.SingletonData<ResonanceManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> liResonanceHero;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SResonanceSlot> liResonanceSlot;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHero> liResonanceMostHero;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> liResonanceCacheHero;
    /*0x40*/ System.Collections.Generic.Dictionary<int, long> dicTotalPower;
    /*0x48*/ int nResonanceSlot;
    /*0x4c*/ int nResonanceLevel;
    /*0x50*/ int nResonanceCrystalCount;
    /*0x54*/ bool <IsUnlimited>k__BackingField;
    /*0x58*/ int CrystalMaxCount;
    /*0x5c*/ int CrystalHeroLevelCount;
    /*0x60*/ int CrystalHeroIncreaseSlotCount;
    /*0x64*/ int HeroMaxLevel;
    /*0x68*/ int CrystalMaxLevel;

    /*0xf28d3c*/ ResonanceManager();
    /*0xf26b20*/ bool get_IsUnlimited();
    /*0xf26b28*/ void set_IsUnlimited(bool value);
    /*0xf26b34*/ string get_UserToken();
    /*0xf26bb4*/ bool InitInstance();
    /*0xf26bbc*/ void ReleaseInstance();
    /*0xf26c98*/ void Send_Enter(System.Action _callback);
    /*0xf26e8c*/ void Send_Open(System.Action _callback, int _nCurrencyType);
    /*0xf26fd4*/ void Send_Clean(System.Action _callback, int _nSlotIndex);
    /*0xf27128*/ void Send_Push(System.Action<PTShare.Define.SHero> _callback, int _nSlotid, int _nHeroid);
    /*0xf27288*/ void Send_Pop(System.Action _callback, int _nHeroid);
    /*0xf273d8*/ void Send_Unlock(System.Action _callback);
    /*0xf27510*/ void Send_Reinforce(System.Action _callback);
    /*0xf268b0*/ void Send_LevelUp(System.Action _callback);
    /*0xf27650*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> GetResonanceHeroes();
    /*0xf27658*/ System.Collections.Generic.List<PTShare.Define.SHero> GetResonanceMostHero();
    /*0xf27660*/ int GetResonanceSlot();
    /*0xf27668*/ int GetCrystalHeroIncreaseSlotCount();
    /*0xf27670*/ int GetResonanceLevel();
    /*0xf27678*/ PTShare.Define.SResonanceSlot GetResonanceSlotTime(int _nSlotIndex);
    /*0xf27764*/ int GetCrystalCount();
    /*0xf2776c*/ long GetTotalPower();
    /*0xf26660*/ long GetTotalPower(int offset);
    /*0xf26418*/ void GetCurrentCrystalMaterials(System.Collections.Generic.List<Rewards> reward);
    /*0xf2789c*/ int GetResonanceMaxLevel();
    /*0xf27b98*/ void SetResonanceLevel(int _nLevel, bool sendHighCp);
    /*0xf27df4*/ void SetResonanceMost(System.Collections.Generic.List<PTShare.Define.SLvHero> member);
    /*0xf280dc*/ void SetResonanceMost(System.Collections.Generic.List<PTShare.Define.SHero> member);
    /*0xf27f44*/ void SetResonanceMost();
    /*0xf28214*/ void SetUnlimited(bool enable);
    /*0xf28220*/ void SetCrystalCount(int nCount);
    /*0xf28228*/ void RefreshTotalPower(PTShare.Define.SHero hero);
    /*0xf28344*/ void RefreshTotalPower();
    /*0xf287cc*/ void RefreshResonanceHero();
    /*0xf28888*/ PTShare.Define.SHero ConvertResonanceSHero(bool _bIsReal, PTShare.Define.SResonanceHero _hero);
    /*0xf288ec*/ PTShare.Define.SResonanceHero ConvertSHeroResonance(int _nSlot, int _nLevel, PTShare.Define.SHero _hero);
    /*0xf289b4*/ bool IsUseResonanceUnitID(int _nUnitID);
    /*0xf28ab0*/ int GetMinResonanceLevel();
    /*0xf28b34*/ int GetSyncLimitLevel();
    /*0xf28ba4*/ int GetSyncLimitLevelGap();
    /*0xf28c08*/ int GetMostHeroMinLevel(int nIndex);
    /*0xf28ce0*/ bool IsPossibleUnlimitCrystal();
    /*0xf27888*/ bool IsProportionCrystalLevel();
    /*0xf28f88*/ void <SetResonanceLevel>b__40_1(PTShare.Define.SHero x);
    /*0xf29080*/ void <RefreshTotalPower>b__47_0(PTShare.Define.SResonanceHero x);
    /*0xf29154*/ void <RefreshResonanceHero>b__48_0(PTShare.Define.SResonanceHero x);

    class <>c__DisplayClass21_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Action<PTShare.Define.SResonanceHero> <>9__1;

        /*0xf9939c*/ <>c__DisplayClass21_0();
        /*0xf993a4*/ void <Send_Enter>b__0(ServerProtocol.ResResonanceEnter res);
        /*0xf99600*/ void <Send_Enter>b__1(PTShare.Define.SResonanceHero x);
    }

    class <>c
    {
        static /*0x0*/ ResonanceManager.<> <>9;
        static /*0x8*/ System.Converter<int, PTShare.Define.SHero> <>9__21_2;
        static /*0x10*/ System.Func<System.Collections.Generic.KeyValuePair<int, long>, long> <>9__36_0;
        static /*0x18*/ System.Func<PTShare.Define.SHero, bool> <>9__39_0;
        static /*0x20*/ System.Converter<PTShare.Define.SHero, int> <>9__39_1;
        static /*0x28*/ System.Predicate<PTShare.Define.SHero> <>9__40_0;
        static /*0x30*/ System.Converter<PTShare.Define.SLvHero, PTShare.Define.SHero> <>9__41_0;
        static /*0x38*/ System.Converter<PTShare.Define.SHero, PTShare.Define.SLvHero> <>9__42_0;
        static /*0x40*/ System.Comparison<PTShare.Define.SHero> <>9__43_0;
        static /*0x48*/ System.Func<PTShare.Define.SResonanceHero, int> <>9__47_1;

        static /*0xf9908c*/ <>c();
        /*0xf990ec*/ <>c();
        /*0xf990f4*/ PTShare.Define.SHero <Send_Enter>b__21_2(int x);
        /*0xf9917c*/ long <GetTotalPower>b__36_0(System.Collections.Generic.KeyValuePair<int, long> x);
        /*0xf991bc*/ bool <GetResonanceMaxLevel>b__39_0(PTShare.Define.SHero x);
        /*0xf991dc*/ int <GetResonanceMaxLevel>b__39_1(PTShare.Define.SHero x);
        /*0xf991f4*/ bool <SetResonanceLevel>b__40_0(PTShare.Define.SHero x);
        /*0xf99214*/ PTShare.Define.SHero <SetResonanceMost>b__41_0(PTShare.Define.SLvHero x);
        /*0xf992b0*/ PTShare.Define.SLvHero <SetResonanceMost>b__42_0(PTShare.Define.SHero x);
        /*0xf99328*/ int <SetResonanceMost>b__43_0(PTShare.Define.SHero a, PTShare.Define.SHero b);
        /*0xf99384*/ int <RefreshTotalPower>b__47_1(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf996dc*/ <>c__DisplayClass22_0();
        /*0xf996e4*/ void <Send_Open>b__0(ServerProtocol.ResResonanceOpen res);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ int _nSlotIndex;
        /*0x20*/ System.Action _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SResonanceSlot> <>9__1;

        /*0xf99804*/ <>c__DisplayClass23_0();
        /*0xf9980c*/ void <Send_Clean>b__0(ServerProtocol.ResResonanceClean res);
        /*0xf999b4*/ bool <Send_Clean>b__1(PTShare.Define.SResonanceSlot x);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ int _nHeroid;
        /*0x18*/ ResonanceManager <>4__this;
        /*0x20*/ int _nSlotid;
        /*0x28*/ System.Action<PTShare.Define.SHero> _callback;

        /*0xf999d8*/ <>c__DisplayClass24_0();
        /*0xf999e0*/ void <Send_Push>b__0(ServerProtocol.ResResonancePush res);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ int _nHeroid;

        /*0xf99c10*/ <>c__DisplayClass25_0();
        /*0xf99c18*/ void <Send_Pop>b__0(ServerProtocol.ResResonancePop res);
    }

    class <>c__DisplayClass25_1
    {
        /*0x10*/ ServerProtocol.ResResonancePop res;
        /*0x18*/ PTShare.Define.SResonanceHero _hero;

        /*0xf9a008*/ <>c__DisplayClass25_1();
        /*0xf9a010*/ bool <Send_Pop>b__1(PTShare.Define.SResonanceHero x);
        /*0xf9a040*/ bool <Send_Pop>b__2(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Action<PTShare.Define.SResonanceHero> <>9__1;

        /*0xf9a070*/ <>c__DisplayClass26_0();
        /*0xf9a078*/ void <Send_Unlock>b__0(ServerProtocol.ResResonanceUnlock res);
        /*0xf9a1dc*/ void <Send_Unlock>b__1(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf9a320*/ <>c__DisplayClass27_0();
        /*0xf9a328*/ void <Send_Reinforce>b__0(ServerProtocol.ResResonanceReinforce res);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Action<PTShare.Define.SHero> <>9__1;

        /*0xf9a4c8*/ <>c__DisplayClass28_0();
        /*0xf9a4d0*/ void <Send_LevelUp>b__0(ServerProtocol.ResResonanceLevelUp res);
        /*0xf9a744*/ void <Send_LevelUp>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ int _nSlotIndex;

        /*0xf9a838*/ <>c__DisplayClass34_0();
        /*0xf9a840*/ bool <GetResonanceSlotTime>b__0(PTShare.Define.SResonanceSlot x);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ PTShare.Define.SStatBonus statBonus;
        /*0x18*/ int offset;

        /*0xf9a864*/ <>c__DisplayClass37_0();
        /*0xf9a86c*/ long <GetTotalPower>b__0(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ PTShare.Define.SHero hero;

        /*0xf9a900*/ <>c__DisplayClass46_0();
        /*0xf9a908*/ bool <RefreshTotalPower>b__0(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ int _nUnitID;

        /*0xf9a938*/ <>c__DisplayClass51_0();
        /*0xf9a940*/ bool <IsUseResonanceUnitID>b__0(PTShare.Define.SResonanceHero x);
    }
}

class GameSceneManager : Singleton.Data.SingletonData<GameSceneManager>
{
    static /*0x0*/ System.Action OnEventChangedSceneBegin;
    static /*0x8*/ System.Action OnEventChangedSceneEnd;
    static /*0x10*/ System.Action OnEventChangedSceneEnd_InGame;
    static /*0x18*/ string SceneName;

    static /*0xecedf4*/ GameSceneManager();
    static /*0xecd4cc*/ void add_OnEventChangedSceneBegin(System.Action value);
    static /*0xecd5c0*/ void remove_OnEventChangedSceneBegin(System.Action value);
    static /*0xecd6b4*/ void add_OnEventChangedSceneEnd(System.Action value);
    static /*0xecd7ac*/ void remove_OnEventChangedSceneEnd(System.Action value);
    static /*0xecd8a4*/ void add_OnEventChangedSceneEnd_InGame(System.Action value);
    static /*0xecd99c*/ void remove_OnEventChangedSceneEnd_InGame(System.Action value);
    static /*0xecdac4*/ void GotoRestart();
    static /*0xecdbb4*/ void OnChangeScene_Begin();
    static /*0xecdc2c*/ void OnChangeScene_End();
    static /*0xecdca4*/ void OnChangeScene_End_InGame();
    static /*0xecdd1c*/ void SetSceneName(string sceneName);
    static /*0xecdd84*/ void LoadScene(string _scene_name, string _desc_local_key);
    static /*0xecde6c*/ void LoadSceneAsync(string _scene_name, string _desc_local_key);
    static /*0xecdf64*/ void LoadAssetbundleSceneAsync(string _scene_name, string _desc_local_key);
    static /*0xece060*/ void GotoGameInitialize();
    static /*0xece0dc*/ void GotoBattleScene(bool _bNonLoading);
    static /*0xece44c*/ void GotoMazeScene();
    static /*0xece618*/ void GotoDungeonScene(int dungeonId);
    static /*0xece808*/ void GotoStartSceneToLoadMainScene();
    static /*0xece928*/ void LoadGameLogin();
    static /*0xece9fc*/ void LoadGameInitializeWithAssetBundle();
    static /*0xecead0*/ void GotoMainScene();
    static /*0xeced18*/ string GetSceneName();
    static /*0xece2e8*/ AssetBundleSceneType GetSceneType();
    /*0xeced7c*/ GameSceneManager();
    /*0xecda94*/ bool InitInstance();
    /*0xecdac0*/ void ReleaseInstance();
    /*0xecdab4*/ void GameSettings();
}

class ServiceManager : Singleton.Data.SingletonData<ServiceManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SImageBanner> liImageBanner;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SNotice> liNotice;
    /*0x30*/ bool bReadImageBanner;
    /*0x31*/ bool bUseNewNotice;

    /*0xe278a4*/ ServiceManager();
    /*0xe26fa0*/ bool InitInstance();
    /*0xe26fa8*/ void ReleaseInstance();
    /*0xe27020*/ void SetImageBannerList(System.Collections.Generic.List<PTShare.Define.SImageBanner> banner);
    /*0xe27028*/ void SetNoticeList(System.Collections.Generic.List<PTShare.Define.SNotice> notice);
    /*0xe27030*/ void SetNewNotice(bool enable);
    /*0xe2703c*/ System.Collections.Generic.List<PTShare.Define.SImageBanner> GetImageBannerList();
    /*0xe27044*/ System.Collections.Generic.List<PTShare.Define.SNotice> GetNoticeList();
    /*0xe2704c*/ bool GetNewNotice();
    /*0xe27054*/ void ShowImageBanner(System.Action onExit);
    /*0xe2719c*/ void ShowImageBanner();
    /*0xe272c4*/ void ShowNotice(System.Action onExit);
    /*0xe2713c*/ bool CheckNewImageBanner();
    /*0xe2726c*/ bool CheckUseImageBanner();
    /*0xe27450*/ bool CheckNewNotice();
    /*0xe27740*/ void AllRead();

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ServiceManager <>4__this;
        /*0x18*/ System.Action onExit;

        /*0xcbe848*/ <>c__DisplayClass14_0();
        /*0xcbe850*/ void <ShowNotice>b__0(ServerProtocol.ResAccountNotice res);
    }
}

class SignatureItemManager : Singleton.Data.SingletonData<SignatureItemManager>
{
    static /*0x0*/ System.Action<int> OnChangeSignature;
    /*0x19*/ bool UseSignature;
    /*0x20*/ System.Collections.Generic.List<int> m_openEffectList;

    static /*0xe2c594*/ SignatureItemManager();
    static /*0xe2bd70*/ int SortStat(System.ValueTuple<Battle.CharacterStat.StatType, float> lhs, System.ValueTuple<Battle.CharacterStat.StatType, float> rhs);
    /*0xe2c4d4*/ SignatureItemManager();
    /*0xe2b5c8*/ bool InitInstance();
    /*0xe2b5d4*/ void ReleaseInstance();
    /*0xe2b110*/ void Send_LevelUp(int heroId, System.Action callBack, int count);
    /*0xe2b5d0*/ void InitData();
    /*0xe2b5d8*/ void ReleaseData();
    /*0xe2ade0*/ TableData.TableData_Equipment GetSignatureItemTable(int heroTableId);
    /*0xe2ae20*/ System.Collections.Generic.List<Rewards> GetUnlockRequireCost(int heroTableId);
    /*0xe2b720*/ System.Collections.Generic.List<Rewards> GetSignatureRequireCost(int heroTableId, int level);
    /*0xe2b63c*/ System.Collections.Generic.List<Rewards> GetSignatureRequireCost(TableData.TableData_Equipment equipment, int level);
    /*0xe2b748*/ TableData.TableData_Skillfx GetNextSkillFx(int heroTableId, int lv);
    /*0xe2b878*/ int GetSignatureSkillLevel(int lv);
    /*0xe2b8a8*/ string GetDescKey(int heroTableId, int lv);
    /*0xe2b974*/ bool IsMaxLevel(int heroTableId, int level);
    /*0xe2b9ec*/ bool IsUseSignature(int heroId);
    /*0xe2bab0*/ bool IsUseSignature(PTShare.Define.SHero sHero);
    /*0xe2bb00*/ bool IsUseSignatureSameGrade(int heroId);
    /*0xe2bbc4*/ bool IsSignatureSkillUnlock(int lv);
    /*0xe2af64*/ PTShare.Define.SEquip ConvertSEquip(PTShare.Define.SHero hero);
    /*0xe2bc9c*/ PTShare.Define.SEquip ConvertSEquip(PTShare.Define.SConditionHero hero);
    /*0xe2bbe8*/ PTShare.Define.SEquip ConvertSEquip(int tableId, int lv);
    /*0xe2bd10*/ UnitGradeType ConvertGrade(int lv);
    /*0xe2bdf4*/ System.ValueTuple<int, System.Collections.Generic.List<Rewards>> GetFastLevelupCost(int heroTableId, int level);
    /*0xe2bfec*/ void AccReward(ref System.Collections.Generic.List<Rewards> target, System.Collections.Generic.List<Rewards> source);
    /*0xe2c3d0*/ bool CheckOpenEffectHeroAndRemove(int heroId);
    /*0xe2c470*/ void AddOpenEffectHero(int heroId);

    class <>c__DisplayClass2_0
    {
        /*0x10*/ int heroId;
        /*0x18*/ System.Action callBack;

        /*0xcbf708*/ <>c__DisplayClass2_0();
        /*0xcbf710*/ void <Send_LevelUp>b__0(ServerProtocol.ResEquipSignature response);
    }

    class <>c
    {
        static /*0x0*/ SignatureItemManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__2_1;

        static /*0xcbf618*/ <>c();
        /*0xcbf678*/ <>c();
        /*0xcbf680*/ void <Send_LevelUp>b__2_1(PTShare.Define.SItem m);
    }
}

class HeroSkinManager : Singleton.Data.SingletonData<HeroSkinManager>
{
    static /*0x0*/ System.Action OnRefreshSkinEvent;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SSkin> liUseSkin;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SSkin> liEquipSkin;

    static /*0x1268630*/ HeroSkinManager();
    static /*0x1267c28*/ void add_OnRefreshSkinEvent(System.Action value);
    static /*0x1267d1c*/ void remove_OnRefreshSkinEvent(System.Action value);
    /*0x12685b8*/ HeroSkinManager();
    /*0x1267ba8*/ string get_UserToken();
    /*0x1267e10*/ bool InitInstance();
    /*0x1267e18*/ void ReleaseInstance();
    /*0x1267e7c*/ void Send_BuySkin(int skinid, System.Action callback);
    /*0x1267fd0*/ void Send_EquipSkin(int unitid, int beforeid, int skinid, System.Action callback);
    /*0x1268240*/ void Send_UnEquipSkin(int unitid, int skinid, System.Action callback);
    /*0x126839c*/ void SetEquipSkinUnit(System.Collections.Generic.List<PTShare.Define.SSkin> use, System.Collections.Generic.List<PTShare.Define.SSkin> equip);
    /*0x12683a4*/ void IncreaseSkin(System.Collections.Generic.List<PTShare.Define.SSkin> list);
    /*0x126846c*/ System.Collections.Generic.List<PTShare.Define.SSkin> GetSkinList();
    /*0x1268474*/ bool IsExistUnitSkin(int unitID);
    /*0x12684cc*/ bool IsUseSkin(int unitID);
    /*0x1268154*/ bool IsEquipSkin(int unitID);
    /*0x1268634*/ void <IncreaseSkin>b__13_0(PTShare.Define.SSkin x);

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HeroSkinManager <>4__this;
        /*0x18*/ int skinid;
        /*0x20*/ System.Action callback;

        /*0x106335c*/ <>c__DisplayClass9_0();
        /*0x1063364*/ void <Send_BuySkin>b__0(ServerProtocol.ResSkinBuy res);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ int unitid;
        /*0x14*/ int skinid;
        /*0x18*/ HeroSkinManager <>4__this;
        /*0x20*/ int beforeid;
        /*0x28*/ System.Action callback;
        /*0x30*/ System.Predicate<PTShare.Define.SSkin> <>9__1;

        /*0x1062ef0*/ <>c__DisplayClass10_0();
        /*0x1062ef8*/ void <Send_EquipSkin>b__0(ServerProtocol.ResSkinEquip res);
        /*0x10630ec*/ bool <Send_EquipSkin>b__1(PTShare.Define.SSkin x);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ int unitid;
        /*0x18*/ HeroSkinManager <>4__this;
        /*0x20*/ int skinid;
        /*0x28*/ System.Action callback;
        /*0x30*/ System.Predicate<PTShare.Define.SSkin> <>9__1;

        /*0x1063110*/ <>c__DisplayClass11_0();
        /*0x1063118*/ void <Send_UnEquipSkin>b__0(ServerProtocol.ResSkinUnequip res);
        /*0x10632a8*/ bool <Send_UnEquipSkin>b__1(PTShare.Define.SSkin x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ PTShare.Define.SSkin x;

        /*0x10632cc*/ <>c__DisplayClass13_0();
        /*0x10632d4*/ bool <IncreaseSkin>b__1(PTShare.Define.SSkin y);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int unitID;

        /*0x1063304*/ <>c__DisplayClass16_0();
        /*0x106330c*/ bool <IsUseSkin>b__0(PTShare.Define.SSkin x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ int unitID;

        /*0x1063330*/ <>c__DisplayClass17_0();
        /*0x1063338*/ bool <IsEquipSkin>b__0(PTShare.Define.SSkin x);
    }
}

class ScrollContent_SelectItemGroupEntity : ScrollContent<SelectItemGroupEntity>
{
    /*0xe1b62c*/ ScrollContent_SelectItemGroupEntity();
}

class SelectItemGroupEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x20*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0xe23ca8*/ SelectItemGroupEntity();
    /*0xe239c8*/ void OnDisable();
    /*0xe23aa0*/ void InitEntity(System.Collections.Generic.List<Rewards> rewardList);
    /*0xe23b10*/ void BindEvent();
    /*0xe239cc*/ void RemoveEvent();
    /*0xe23bec*/ void HandleScrollContent(int index, ItemInfoSlot obj);
}

class SpecialSellerPopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot[] m_itemRewardSlots;
    /*0x48*/ LocalizeString m_popupInfoText;
    /*0x50*/ LocalizeString m_bonusPercentText;
    /*0x58*/ LocalizeString m_expireTimeText;
    /*0x60*/ LocalizeString m_priceText;
    /*0x68*/ UnityEngine.UI.GridLayoutGroup m_layoutGroup;
    /*0x70*/ UnityEngine.Coroutine m_expireTimeCoroutine;
    /*0x78*/ TableData.TableData_Cashshopinstant m_shopData;
    /*0x80*/ PTShare.Define.SInstant m_packetData;
    /*0x88*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x14539dc*/ SpecialSellerPopup();
    /*0x14527d8*/ void OnCreate();
    /*0x14527dc*/ void OnDelete();
    /*0x14527e0*/ void OnEnter();
    /*0x14527e4*/ void OnFinish();
    /*0x14527e8*/ void OnLeave();
    /*0x1452908*/ void OnStart();
    /*0x145290c*/ void SetBonusPercent();
    /*0x1452910*/ void InitPopup(PTShare.Define.SInstant packetData);
    /*0x1452bf0*/ void SetInfo();
    /*0x1452dac*/ void SetBonusValue();
    /*0x1452e9c*/ void SetPrice();
    /*0x14530e0*/ void SetRewardItems();
    /*0x14534b4*/ bool AddVipPointReward();
    /*0x1453448*/ System.Collections.IEnumerator CoUpdateExpireTime();
    /*0x1453638*/ void OnClickPurchase();
    /*0x1452ae4*/ void BindEvent();
    /*0x14527ec*/ void RemoveEvent();
    /*0x145371c*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0x145363c*/ void OnPurchaseRequest();
    /*0x14539c0*/ void HandleExpireInstant(PTShare.Define.SInstant sInstant);
    /*0x1453a54*/ bool <InitPopup>b__17_0(TableData.TableData_Cashshopinstant data);
    /*0x1453a84*/ void <SetRewardItems>b__21_0(TableData.TableData_Packageproductgroup data);

    class <CoUpdateExpireTime>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SpecialSellerPopup <>4__this;
        /*0x28*/ System.TimeSpan <expireTime>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;
        /*0x38*/ System.TimeSpan <secSpan>5__4;

        /*0xcc079c*/ <CoUpdateExpireTime>d__23(int <>1__state);
        /*0xcc07c8*/ void System.IDisposable.Dispose();
        /*0xcc07cc*/ bool MoveNext();
        /*0xcc0af4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc0afc*/ void System.Collections.IEnumerator.Reset();
        /*0xcc0b3c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SpecialSellerPopup_Select : GuiBase
{
    /*0x40*/ ScrollContent_SelectItemGroupEntity m_scrollContent;
    /*0x48*/ LocalizeString m_popupNameText;
    /*0x50*/ LocalizeString m_popupInfoText;
    /*0x58*/ LocalizeString m_popupSubInfoText;
    /*0x60*/ LocalizeString m_bonusPercentText;
    /*0x68*/ LocalizeString m_expireTimeText;
    /*0x70*/ LocalizeString m_priceText;
    /*0x78*/ UnityEngine.UI.Image m_bg;
    /*0x80*/ LocalizeString[] m_propertyTexts;
    /*0x88*/ LocalizeString[] m_nameTexts;
    /*0x90*/ UnityEngine.UI.Button[] m_buttons;
    /*0x98*/ UnityEngine.Coroutine m_expireTimeCoroutine;
    /*0xa0*/ TableData.TableData_Cashshopinstant m_shopData;
    /*0xa8*/ PTShare.Define.SInstant m_packetData;
    /*0xb0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<Rewards>> m_rewardDic;
    /*0xb8*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0xc0*/ System.Collections.Generic.List<int> m_groupIdList;

    /*0x14556e8*/ SpecialSellerPopup_Select();
    /*0x1453b34*/ void OnCreate();
    /*0x1453b38*/ void OnDelete();
    /*0x1453b3c*/ void OnEnter();
    /*0x1453b40*/ void OnFinish();
    /*0x1453b44*/ void OnLeave();
    /*0x1453d38*/ void OnStart();
    /*0x1453d3c*/ void SetBonusPercent();
    /*0x1453d40*/ void InitPopup(PTShare.Define.SInstant packetData);
    /*0x1454198*/ void SetName();
    /*0x14542e0*/ void SetInfo();
    /*0x1454428*/ void SetSubInfo();
    /*0x1454570*/ void SetBonusValue();
    /*0x1454c48*/ void SetBackGround();
    /*0x1454660*/ void SetPrice();
    /*0x14548a4*/ void SetGroupCount();
    /*0x1454dfc*/ void SetRewardUIs();
    /*0x1455400*/ System.Collections.IEnumerator CoUpdateExpireTime();
    /*0x145546c*/ void OnClickPurchase();
    /*0x1455500*/ void OnClickShowHeroBook(int index);
    /*0x1453fb8*/ void BindEvent();
    /*0x1453b48*/ void RemoveEvent();
    /*0x145561c*/ void HandleScrollContent(int index, SelectItemGroupEntity obj);
    /*0x14556cc*/ void HandleExpireInstant(PTShare.Define.SInstant sInstant);
    /*0x14557e0*/ bool <InitPopup>b__24_0(TableData.TableData_Cashshopinstant data);

    class <CoUpdateExpireTime>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SpecialSellerPopup_Select <>4__this;
        /*0x28*/ System.TimeSpan <expireTime>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;
        /*0x38*/ System.TimeSpan <secSpan>5__4;

        /*0xcc0b44*/ <CoUpdateExpireTime>d__33(int <>1__state);
        /*0xcc0b70*/ void System.IDisposable.Dispose();
        /*0xcc0b74*/ bool MoveNext();
        /*0xcc0ee8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc0ef0*/ void System.Collections.IEnumerator.Reset();
        /*0xcc0f30*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum StageDifficult
{
    Normal = 0,
    Hard = 1,
}

class StageManager : Singleton.Data.SingletonData<StageManager>
{
    static /*0x0*/ System.Action OnChangeCampaignEvent;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.SPlayer>> m_dicStagePlayerDataList;
    /*0x28*/ System.DateTime buddyRefreshTime;
    /*0x30*/ StageDifficult m_eCurrentDifficult;
    /*0x34*/ int <LastJoinChapter>k__BackingField;
    /*0x38*/ int <LastJoinStage>k__BackingField;
    /*0x40*/ TableData.TableData_Stage <LastestPopupStageData>k__BackingField;

    static /*0xc93818*/ StageManager();
    static /*0xc918f8*/ void add_OnChangeCampaignEvent(System.Action value);
    static /*0xc919ec*/ void remove_OnChangeCampaignEvent(System.Action value);
    /*0xc93704*/ StageManager();
    /*0xc916c8*/ int get_LastJoinChapter();
    /*0xc916d0*/ void set_LastJoinChapter(int value);
    /*0xc916d8*/ int get_LastJoinStage();
    /*0xc916e0*/ void set_LastJoinStage(int value);
    /*0xc916e8*/ TableData.TableData_Stage get_LastestPopupStageData();
    /*0xc916f0*/ void set_LastestPopupStageData(TableData.TableData_Stage value);
    /*0xc916f8*/ string get_UserToken();
    /*0xc91778*/ string get_CurrentCampaign();
    /*0xc91838*/ int get_CurrentChapter();
    /*0xc91ae0*/ bool InitInstance();
    /*0xc91ae8*/ void ReleaseInstance();
    /*0xc91b78*/ void Send_CampaignBegin(string _heroids, System.Action _callback);
    /*0xc91cc0*/ void Send_CampaignFinish(string _replaydata, string _statistics, long lcp, string _hpmps, System.Action<PTShare.Define.SProperty> _callback);
    /*0xc91e28*/ void Send_NextChapter(System.Action _callback);
    /*0xc9111c*/ void Send_ChapterInfo(string _mappointName, System.Action<ServerProtocol.ResCampaignInfo> _chapterInfo);
    /*0xc91f5c*/ void Send_CampaignBuddy(System.Action _callback);
    /*0xc92160*/ void Send_HardCampaignBegin(string _heroids, System.Action _callback);
    /*0xc922a8*/ void Send_HardCampaignFinish(string _replaydata, string _statistics, long lcp, string _hpmps, System.Action<PTShare.Define.SProperty> _callback);
    /*0xc92410*/ void Send_NextHardChapter(System.Action _callback);
    /*0xc91260*/ void Send_HardChapterInfo(string _mappointName, System.Action<ServerProtocol.ResHardCampaignInfo> _chapterInfo);
    /*0xc92544*/ void Send_HardCampaignBuddy(System.Action _callback);
    /*0xc92748*/ void SetStageUserList(StageDifficult _diff, System.Collections.Generic.List<PTShare.Define.SPlayer> _playerList);
    /*0xc927e0*/ System.Collections.Generic.List<PTShare.Define.SPlayer> GetStageUserList(StageDifficult _diff);
    /*0xc9289c*/ System.Collections.Generic.List<PTShare.Define.SPlayer> FindCurrentStagePlayer(StageDifficult _diff, string _mapPoint);
    /*0xc92a18*/ System.Collections.Generic.List<PTShare.Define.SPlayer> FindCurrentChapterPlayer(StageDifficult _diff, int _chapter);
    /*0xc92b94*/ void AddFriendConvertPlayer(System.Collections.Generic.List<PTShare.Define.SFriend> _friend);
    /*0xc92cc4*/ void AddFriendConvertPlayer(StageDifficult _diff, PTShare.Define.SFriend _friend, bool _isCallback);
    /*0xc93000*/ int GetCurrentChapterNumber();
    /*0xc930ac*/ int GetCurrentNormalChapterNumber();
    /*0xc93194*/ int GetCurrentChapterNumber(string _value);
    /*0xc90b88*/ int GetCurrentStageNumber();
    /*0xc93230*/ int GetCurrentNormalStageNumber();
    /*0xc9331c*/ int GetCurrentStageNumber(string _value);
    /*0xc933bc*/ TableData.TableData_Stage GetCurrentStage();
    /*0xc933f0*/ TableData.TableData_Stage GetCurrentNormalStage();
    /*0xc9341c*/ TableData.TableData_Hardstage GetCurrentHardStage();
    /*0xc93450*/ TableData.TableData_Stageidle GetCurrentStageIdle();
    /*0xc90e30*/ int GetCurrentNormalStageBattleID();
    /*0xc93474*/ int GetCurrentNormalStageIndex();
    /*0xc90e50*/ int GetCurrentHardStageBattleID();
    /*0xc93494*/ int GetCurrentHardStageIndex();
    /*0xc934b4*/ int GetCurrentViewChapter();
    /*0xc90298*/ TableData.TableData_Stage FindStage(int _chapterid, int _stageid);
    /*0xc903f8*/ TableData.TableData_Hardstage FindHardStage(int _chapterid, int _stageid);
    /*0xc935f0*/ bool IsMaxStage(int _chapterid, int _stageid);
    /*0xc93650*/ bool IsAnotherChapter();
    /*0xc93684*/ StageDifficult GetCurrentDifficult();
    /*0xc9368c*/ void SetCurrentDifficult(StageDifficult _diff);
    /*0xc8fdc8*/ bool IsDifficultHard();

    class <>c__DisplayClass26_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1064*/ <>c__DisplayClass26_0();
        /*0xcc106c*/ void <Send_CampaignBegin>b__0(ServerProtocol.ResCampaignBegin response);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xcc1204*/ <>c__DisplayClass27_0();
        /*0xcc120c*/ void <Send_CampaignFinish>b__0(ServerProtocol.ResCampaignFinish response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ System.Action _callback;

        /*0xcc148c*/ <>c__DisplayClass28_0();
        /*0xcc1494*/ void <Send_NextChapter>b__0(ServerProtocol.ResCampaignNextChapter response);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResCampaignInfo> _chapterInfo;

        /*0xcc15b0*/ <>c__DisplayClass29_0();
        /*0xcc15b8*/ void <Send_ChapterInfo>b__0(ServerProtocol.ResCampaignInfo _instance);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1628*/ <>c__DisplayClass30_0();
        /*0xcc1630*/ void <Send_CampaignBuddy>b__0(ServerProtocol.ResCampaignBuddy res);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1714*/ <>c__DisplayClass31_0();
        /*0xcc171c*/ void <Send_HardCampaignBegin>b__0(ServerProtocol.ResHardCampaignBegin response);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xcc18b4*/ <>c__DisplayClass32_0();
        /*0xcc18bc*/ void <Send_HardCampaignFinish>b__0(ServerProtocol.ResHardCampaignFinish response);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ System.Action _callback;

        /*0xcc1b1c*/ <>c__DisplayClass33_0();
        /*0xcc1b24*/ void <Send_NextHardChapter>b__0(ServerProtocol.ResHardCampaignNextChapter response);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResHardCampaignInfo> _chapterInfo;

        /*0xcc1c40*/ <>c__DisplayClass34_0();
        /*0xcc1c48*/ void <Send_HardChapterInfo>b__0(ServerProtocol.ResHardCampaignInfo _instance);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1cb8*/ <>c__DisplayClass35_0();
        /*0xcc1cc0*/ void <Send_HardCampaignBuddy>b__0(ServerProtocol.ResHardCampaignBuddy res);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ string _mapPoint;

        /*0xcc1da4*/ <>c__DisplayClass38_0();
        /*0xcc1dac*/ bool <FindCurrentStagePlayer>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass39_0
    {
        /*0x10*/ int _chapter;

        /*0xcc1dd0*/ <>c__DisplayClass39_0();
        /*0xcc1dd8*/ bool <FindCurrentChapterPlayer>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ PTShare.Define.SFriend _friend;

        /*0xcc1e98*/ <>c__DisplayClass41_0();
        /*0xcc1ea0*/ bool <AddFriendConvertPlayer>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ int _stageid;

        /*0xcc1ed0*/ <>c__DisplayClass57_0();
        /*0xcc1ed8*/ bool <FindStage>b__0(TableData.TableData_Stage x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ int _stageid;

        /*0xcc1efc*/ <>c__DisplayClass58_0();
        /*0xcc1f04*/ bool <FindHardStage>b__0(TableData.TableData_Hardstage x);
    }
}

class DefineStageTower
{
    enum TOWER_TYPE
    {
        NORMALTOWER = 0,
        FIRETOWER = 1,
        WINDTOWER = 2,
        NATURETOWER = 3,
        WATERTOWER = 4,
        NULL = 5,
    }
}

class StagetowerManager : Singleton.Data.SingletonData<StagetowerManager>
{
    static /*0x0*/ System.Action<ServerProtocol.ResTowerRanking> OnChangeTowerRanking;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.STowerUser>> <OtherTowerUsers>k__BackingField;
    /*0x28*/ System.Action OnCallTower;
    /*0x30*/ System.Action<PTShare.Define.SProperty> OnCallTowerEndProperty;
    /*0x38*/ System.Action<System.Collections.Generic.List<PTShare.Define.STowerRecord>> OnCallTowerFloorInfo;
    /*0x40*/ System.Action<System.Collections.Generic.List<PTShare.Define.STowerUser>> OnCallTowerUsers;
    /*0x48*/ bool m_showClearEffect;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.STowerRecord> m_lisReplayTowerRecord;
    /*0x58*/ string m_sReplayReward;
    /*0x60*/ int m_nReplayBttleID;
    /*0x68*/ System.Collections.Generic.Dictionary<PTShare.Define.Faction, int> m_challengeCountDic;
    /*0x70*/ PTShare.Define.Faction m_factionType;

    static /*0xc9973c*/ StagetowerManager();
    static /*0xc980d8*/ void add_OnChangeTowerRanking(System.Action<ServerProtocol.ResTowerRanking> value);
    static /*0xc981cc*/ void remove_OnChangeTowerRanking(System.Action<ServerProtocol.ResTowerRanking> value);
    /*0xc99644*/ StagetowerManager();
    /*0xc97ec4*/ bool InitInstance();
    /*0xc97f54*/ void ReleaseInstance();
    /*0xc97fb8*/ UserData get_m_tUserData();
    /*0xc98048*/ string get_usertoken();
    /*0xc980c8*/ void set_OtherTowerUsers(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.STowerUser>> value);
    /*0xc980d0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.STowerUser>> get_OtherTowerUsers();
    /*0xc982c0*/ bool GetIsShowClearEffect();
    /*0xc982c8*/ void SetIsShowClearEffect(bool enable);
    /*0xc982d4*/ void SetLastReplayTowerData(System.Collections.Generic.List<PTShare.Define.STowerRecord> _lisTowerRecord, string _sReward, int _nBattleID);
    /*0xc982e0*/ System.ValueTuple<System.Collections.Generic.List<PTShare.Define.STowerRecord>, string, int> GetLastReplayTowerData();
    /*0xc98348*/ void Send_BeginStageTower(string _heroids, System.Action _callback);
    /*0xc9846c*/ void Send_StageTowerEnd(string _strPlayerData, string _statistics, long lcp, string _hpmps, System.Action<PTShare.Define.SProperty> _callback);
    /*0xc985a8*/ void Send_StageTowerRank();
    /*0xc96a64*/ void Send_StageTowerOthers(System.Action<System.Collections.Generic.List<PTShare.Define.STowerUser>> _onCallUsers);
    /*0xc98690*/ void LoadOtherTowerUsers(System.Collections.Generic.List<PTShare.Define.STowerUser> _towerUsers);
    /*0xc98948*/ void Send_StageTowerInfo(int _nFloor, System.Action<System.Collections.Generic.List<PTShare.Define.STowerRecord>> _onChangeFloorInfo);
    /*0xc98a6c*/ void OpenTowerPopup(bool directTowerPopup);
    /*0xc98be0*/ PTShare.Define.Faction GetCurFaction();
    /*0xc98be8*/ Battle.GameModeType GetTowerGameMode();
    /*0xc98bfc*/ int GetCurFactionToInt();
    /*0xc98c04*/ bool IsAccurateFactionHeros(System.Collections.Generic.List<int> heroList);
    /*0xc98e94*/ void SetFactionType(PTShare.Define.Faction faction);
    /*0xc976cc*/ ContentType GetCurContentType();
    /*0xc962c4*/ TableData.TableData_Towerfloor GetCurStageTower();
    /*0xc98e9c*/ bool IsChallengeCurTower();
    /*0xc97290*/ TableData.TableData_Towerfloor FindStageTower(int floorId);
    /*0xc98fd8*/ TableData.TableData_Towerfloor FindStageTower(PTShare.Define.Faction factionType, int floorId);
    /*0xc9729c*/ TableData.TableData_Towerfloor FindLast();
    /*0xc98fe8*/ int GetCurFloor();
    /*0xc95088*/ int GetFactionFloor(PTShare.Define.Faction faction);
    /*0xc99064*/ int GetChallengeCount(PTShare.Define.Faction faction);
    /*0xc99114*/ void SetChallengeCount(System.Collections.Generic.List<int> dataList);
    /*0xc991e4*/ void ResetChallengeCount();
    /*0xc974a0*/ bool IsUnlockDay(PTShare.Define.Faction faction);
    /*0xc99388*/ bool IsUnlockDay(string enterDay);
    /*0xc97edc*/ void InitFaction();
    /*0xc99740*/ void <Send_BeginStageTower>b__25_0(ServerProtocol.ResTowerBegin _instance);
    /*0xc99918*/ void <Send_StageTowerEnd>b__26_0(ServerProtocol.ResTowerFinish response);
    /*0xc99b68*/ void <Send_StageTowerOthers>b__28_0(ServerProtocol.ResTowerOthers _response);
    /*0xc99bf4*/ void <Send_StageTowerInfo>b__30_0(ServerProtocol.ResTowerInfo _response);
    /*0xc99c6c*/ bool <GetCurContentType>b__39_0(TableData.TableData_Tower data);
    /*0xc99c90*/ bool <IsChallengeCurTower>b__41_0(TableData.TableData_Tower data);

    class <>c__DisplayClass37_0
    {
        /*0x10*/ System.Collections.Generic.List<int> heroList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SMercenaryRent> <>9__0;

        /*0xcc2870*/ <>c__DisplayClass37_0();
        /*0xcc2878*/ bool <IsAccurateFactionHeros>b__0(PTShare.Define.SMercenaryRent data);
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ PTShare.Define.Faction i;

        /*0xcc2900*/ <>c__DisplayClass49_0();
        /*0xcc2908*/ bool <ResetChallengeCount>b__0(TableData.TableData_Tower data);
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ PTShare.Define.Faction faction;

        /*0xcc292c*/ <>c__DisplayClass50_0();
        /*0xcc2934*/ bool <IsUnlockDay>b__0(TableData.TableData_Tower data);
    }
}

class TimeEventManager : Singleton.Component.SingletonComponent<TimeEventManager>
{
    static /*0x0*/ System.Action OnDailyChange;
    /*0x28*/ UnityEngine.Coroutine m_dailyCoroutine;

    static /*0x116dac8*/ TimeEventManager();
    /*0x116da7c*/ TimeEventManager();
    /*0x116d960*/ void AwakeInstance();
    /*0x116d964*/ bool InitInstance();
    /*0x116d9fc*/ void ReleaseInstance();
    /*0x116d9a0*/ System.Collections.IEnumerator CoDailyUpdate();

    class <CoDailyUpdate>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcd0ce8*/ <CoDailyUpdate>d__5(int <>1__state);
        /*0xcd0d14*/ void System.IDisposable.Dispose();
        /*0xcd0d18*/ bool MoveNext();
        /*0xcd1188*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1190*/ void System.Collections.IEnumerator.Reset();
        /*0xcd11d0*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum BattleTimeScaleType
{
    x1 = 0,
    x2 = 1,
    x0 = 2,
    End = 3,
}

class TimeManager : Singleton.Data.SingletonData<TimeManager>
{
    static string BATTLE_TIME_SCALE_TYPE_SAVE_KEY = "battle_time_scale_type";
    static float BATTLE_TIME_SCALE_X0 = 0;
    static float BATTLE_TIME_SCALE_X1 = 1;
    static float BATTLE_TIME_SCALE_X2 = 2;
    static /*0x0*/ System.Action<float> OnChangedTimeScale;
    static /*0x8*/ System.Action<BattleTimeScaleType, float> OnChangedBattleTimeScale;
    static /*0x10*/ System.DateTime ArenaDefaultTime;
    static /*0x18*/ System.DateTime HousingDefaultTime;
    static /*0x20*/ System.DateTime GuildWarDefaultTime;
    static /*0x28*/ System.DateTime PveRankingDefaultTime;
    /*0x20*/ double timeOffest;
    /*0x28*/ float m_startTime;
    /*0x30*/ System.Collections.Generic.List<string> m_dayShortList;
    /*0x38*/ float _battleTimeScale;
    /*0x3c*/ BattleTimeScaleType _curBattleTimeScaleType;

    static /*0x116f95c*/ TimeManager();
    static /*0x116dad4*/ void add_OnChangedTimeScale(System.Action<float> value);
    static /*0x116dbc8*/ void remove_OnChangedTimeScale(System.Action<float> value);
    static /*0x116dcbc*/ void add_OnChangedBattleTimeScale(System.Action<BattleTimeScaleType, float> value);
    static /*0x116ddb4*/ void remove_OnChangedBattleTimeScale(System.Action<BattleTimeScaleType, float> value);
    /*0x116f89c*/ TimeManager();
    /*0x116dacc*/ float get_battleTimeScale();
    /*0x116deac*/ System.DateTime GetPveRankingDefaultTime();
    /*0x116dfd8*/ System.DateTime GetServerNow();
    /*0x116e150*/ System.DateTime GetServerNow(System.DateTime time);
    /*0x116e180*/ System.TimeSpan GetServerInitializationTime(int _day);
    /*0x116e244*/ BattleTimeScaleType get_curBattleTimeScaleType();
    /*0x116e24c*/ void set_curBattleTimeScaleType(BattleTimeScaleType value);
    /*0x116e388*/ void InitStartTime();
    /*0x116e3b0*/ bool InitInstance();
    /*0x116e524*/ void ReleaseInstance();
    /*0x116e310*/ void SaveBattleScaleType(BattleTimeScaleType newType);
    /*0x116e5bc*/ void SetBattleTimeScale(BattleTimeScaleType scaleType);
    /*0x116e5dc*/ void DoNextScale();
    /*0x116e5f0*/ BattleTimeScaleType GetBattleTimeScale();
    /*0x116e5f8*/ bool IsVaildMapType();
    /*0x116e600*/ void SetTimeScale(float _time_scale);
    /*0x116e6ac*/ float GetTimeScale();
    /*0x116e6b4*/ void SetDefaultTimeScale();
    /*0x116e6f8*/ System.DayOfWeek ParseDayOfWeek(string name);
    /*0x116e7ac*/ string GetTimeLocalize(int totalSec);
    /*0x116ea64*/ int GetLeftSecByNextDay(int offset);
    /*0x116eb70*/ int GetLeftSecByNextWeek(int offset);
    /*0x116ecc8*/ int GetLeftSecByNextMonth(int offset);
    /*0x116ead0*/ System.TimeSpan GetLeftTimeSpanByNextDay();
    /*0x116ec00*/ System.TimeSpan GetLeftTimeSpanByNextWeek();
    /*0x116ed58*/ System.TimeSpan GetLeftTimeSpanByNextMonth();
    /*0x116ee8c*/ string GetLeftStringByNextDay(string normalKey, string secKey, bool isShowDay);
    /*0x116f21c*/ string GetLeftStringByNextWeek(string normalKey, string secKey);
    /*0x116f250*/ string GetLeftStringByNextMonth(string normalKey, string secKey);
    /*0x116f284*/ string GetLeftStringByCustomDay(string normalKey, string secKey, int day);
    /*0x116f2bc*/ string GetLeftStringByCustomDay(string normalKey, string secKey, System.DateTime defaultTime, int terms);
    /*0x116f3cc*/ string GetLeftStringByCustomDay(string normalKey, string secKey, System.DateTime defaultTime, int terms, int season);
    /*0x116f7f4*/ string GetLeftStringByExpire(string normalKey, string secKey, System.DateTime expire);
    /*0x116eecc*/ string GetLeftTime(string normalKey, string secKey, System.TimeSpan timeSpan, bool isShowDay);
    /*0x116f418*/ string GetLeftTime(string normalKey, int season, string secKey, System.TimeSpan timeSpan, bool isShowDay);
    /*0x116f2f8*/ System.TimeSpan GetLeftTimeSpanByCustom(System.DateTime defaultTime, int terms);
}

class TriggerManager : Singleton.Component.SingletonComponent<TriggerManager>
{
    /*0x28*/ System.Collections.Generic.Dictionary<DefineEvent.TRIGGERS, System.Collections.Generic.List<TableData.TableData_Triggerdata>> m_triggerDatas;

    /*0x1122724*/ TriggerManager();
    /*0x1120e8c*/ void AwakeInstance();
    /*0x1120e90*/ bool InitInstance();
    /*0x1121180*/ void ReleaseInstance();
    /*0x1120ea8*/ void InitManager();
    /*0x1121184*/ bool IsMoveDest(DefineEvent.TriggerData triggerData);
    /*0x11212b4*/ string GetLocalizeTitle(string trigger);
    /*0x11213c0*/ string GetLocalizeTitle(DefineEvent.TriggerData triggerData);
    /*0x1121534*/ string GetLocalizeDesc(string trigger);
    /*0x1121640*/ string GetLocalizeDesc(DefineEvent.TriggerData triggerData);
    /*0x1121998*/ string GetLocalizeDesc(DefineEvent.TriggerData triggerData, ref long missionCount);
    /*0x1121dd4*/ string GetLocalizeUnlock(DefineEvent.TriggerData triggerData);
    /*0x1121f48*/ bool IsUnlock(DefineEvent.TriggerData triggerData);
    /*0x1122110*/ void MoveTrigger(DefineEvent.TriggerData triggerData);
    /*0x11211b0*/ TableData.TableData_Triggerdata GetTableData(DefineEvent.TriggerData triggerData);
    /*0x1122380*/ TableData.TableData_Triggerdata FindData(DefineEvent.TRIGGERS trigger);
    /*0x11224d8*/ TableData.TableData_Triggerdata FindData(DefineEvent.TRIGGERS trigger, string main);
    /*0x11225f8*/ TableData.TableData_Triggerdata FindData(DefineEvent.TRIGGERS trigger, string main, string sub);

    class <>c__DisplayClass13_0
    {
        /*0x10*/ DefineEvent.TriggerData triggerData;

        /*0xcd3d1c*/ <>c__DisplayClass13_0();
        /*0xcd3d24*/ void <MoveTrigger>b__0();
    }

    class <>c
    {
        static /*0x0*/ TriggerManager.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Triggerdata> <>9__15_0;

        static /*0xcd3c98*/ <>c();
        /*0xcd3cf8*/ <>c();
        /*0xcd3d00*/ bool <FindData>b__15_0(TableData.TableData_Triggerdata x);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ string main;

        /*0xcd40d0*/ <>c__DisplayClass16_0();
        /*0xcd40d8*/ bool <FindData>b__0(TableData.TableData_Triggerdata x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ string main;
        /*0x18*/ string sub;

        /*0xcd4104*/ <>c__DisplayClass17_0();
        /*0xcd410c*/ bool <FindData>b__0(TableData.TableData_Triggerdata x);
    }
}

class TroopFactionBuffSet : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_LocalizeString;
    /*0x20*/ UnityEngine.GameObject m_BuffIconObject;

    /*0x1127024*/ TroopFactionBuffSet();
    /*0x1126c6c*/ void Initialize(int _nBuffID, UnityEngine.GameObject _goBuffImageClone);
}

class TroopManager : Singleton.Data.SingletonData<TroopManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.STroop> m_liCurTroop;
    /*0x28*/ PTShare.Define.STroop sCurTroop;
    /*0x30*/ int nArrIndex;
    /*0x34*/ bool <IsLoadTroopInitialized>k__BackingField;

    /*0x11281fc*/ TroopManager();
    /*0x112702c*/ bool get_IsLoadTroopInitialized();
    /*0x1127034*/ void set_IsLoadTroopInitialized(bool value);
    /*0x1127040*/ string get_UserToken();
    /*0x11270c0*/ bool InitInstance();
    /*0x11270c8*/ void ReleaseInstance();
    /*0x11270cc*/ void Send_LoadTroop(System.Action _callback);
    /*0x1127204*/ void Send_MakeTroop(System.Action _callback, string _troopname, int[] _heroids);
    /*0x112747c*/ void Send_RemoveTroop(System.Action _callback, long _index);
    /*0x11238a0*/ void Send_UpdateTroopName(System.Action _callback, long _index, string _troopname);
    /*0x11275c4*/ void Send_UpdateTroopOrder(System.Action _callback, long _index);
    /*0x112770c*/ void Send_UpdateTroopHeroes(System.Action _callback, long _index, int[] _heroids);
    /*0x1127984*/ System.Collections.Generic.List<PTShare.Define.STroop> GetTroopList();
    /*0x112798c*/ PTShare.Define.STroop FindTroopSameHeroIds(string _heroids);
    /*0x1127c94*/ bool FindUseTroopSameHeroIds(string _heroids);
    /*0x1127db4*/ void FindTroopDeleteHeroIds(int _heroid);
    /*0x1128014*/ int FindIndexTroop(long _troopid);
    /*0x112810c*/ void ChangeTroopOrder(int _index, long _newIndex);
    /*0x1127aa0*/ string CheckNotVaildHeroID(string _heroids);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd42a4*/ <>c__DisplayClass11_0();
        /*0xcd42ac*/ void <Send_LoadTroop>b__0(ServerProtocol.ResTroopLoad response);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd435c*/ <>c__DisplayClass12_0();
        /*0xcd4364*/ void <Send_MakeTroop>b__1(ServerProtocol.ResTroopMake response);
    }

    class <>c
    {
        static /*0x0*/ TroopManager.<> <>9;
        static /*0x8*/ System.Func<int, string> <>9__12_0;
        static /*0x10*/ System.Func<int, string> <>9__16_0;

        static /*0xcd416c*/ <>c();
        /*0xcd41cc*/ <>c();
        /*0xcd41d4*/ string <Send_MakeTroop>b__12_0(int s);
        /*0xcd423c*/ string <Send_UpdateTroopHeroes>b__16_0(int s);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd43f4*/ <>c__DisplayClass13_0();
        /*0xcd43fc*/ void <Send_RemoveTroop>b__0(ServerProtocol.ResTroopRemove response);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd44ac*/ <>c__DisplayClass14_0();
        /*0xcd44b4*/ void <Send_UpdateTroopName>b__0(ServerProtocol.ResTroopUpdateName response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd45d0*/ <>c__DisplayClass15_0();
        /*0xcd45d8*/ void <Send_UpdateTroopOrder>b__0(ServerProtocol.ResTroopUpdateOrder response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd4650*/ <>c__DisplayClass16_0();
        /*0xcd4658*/ void <Send_UpdateTroopHeroes>b__1(ServerProtocol.ResTroopUpdateHeroes response);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ string _mainIds;

        /*0xcd4774*/ <>c__DisplayClass18_0();
        /*0xcd477c*/ bool <FindTroopSameHeroIds>b__0(PTShare.Define.STroop item);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ string _mainIds;

        /*0xcd47bc*/ <>c__DisplayClass19_0();
        /*0xcd47c4*/ bool <FindUseTroopSameHeroIds>b__0(PTShare.Define.STroop item);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int _heroid;

        /*0xcd4804*/ <>c__DisplayClass20_0();
        /*0xcd480c*/ bool <FindTroopDeleteHeroIds>b__0(PTShare.Define.STroop x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ long _troopid;

        /*0xcd484c*/ <>c__DisplayClass21_0();
        /*0xcd4854*/ bool <FindIndexTroop>b__0(PTShare.Define.STroop x);
    }
}

enum TutorialStartType
{
    None = 0,
    JoinMainMenu = 1,
    JoinStage = 2,
    JoinFriend = 3,
    JoinAscend = 4,
    JoinKingsTower = 5,
    InNextChapter = 6,
    Defeat = 7,
    JoinFirstTime = 8,
    JoinMaze = 9,
    JoinArena = 10,
    JoinResetHero = 11,
    JoinRankingBoard = 12,
    JoinShop = 13,
    GachaEnd = 14,
    JoinPub = 15,
    JoinGuild = 16,
    JoinBounty = 17,
    JoinWorldArena = 18,
    JoinBountyTeam = 19,
    JoinDungeon = 20,
    JoinRelation = 21,
    JoinGuildWar = 22,
    JoinGuildWarByWarMemeber = 23,
    EndLimitBreak = 24,
    StartLimitBreak = 25,
    JoinAbility = 26,
}

enum TutorialButtonType
{
    None = 0,
    Unique = 1,
    HeroSlotInventory = 2,
    HeroSlotInventory_Grade = 3,
    EquipUpHeroSlotInventory = 4,
    UnitBattleStatusSlot = 5,
    TroopCharacterViewEntity = 6,
    AnotherChapterPoint = 7,
    AscendSlot = 8,
    BRankOverItem = 9,
    BountyHelp = 10,
    BountyHelpSelectSlot = 11,
    Spot = 12,
    HeroGuildWarEditSlot = 13,
    HousingStorageSlot = 14,
}

enum TutorialType
{
    Fix = 0,
    Free = 1,
    Opening = 2,
    OpeningBattle = 3,
    OpeningFinalBattle = 4,
    Null = 5,
}

enum TutorialProcessType
{
    All = 0,
    ButtonClick = 1,
    SkillEnable = 2,
    CharacterMove = 3,
    Auto = 4,
    BattleEnd = 5,
    ArenaSave = 6,
}

enum DialogType
{
    None = 0,
    Chat = 1,
    Image = 2,
    Spine = 3,
}

enum TutorialBeginType
{
    WORLDBOSS = 0,
    WORLDBOSSINFO = 1,
    NONE = 2,
}

class TutorialData
{
    /*0x10*/ int tutorialIndex;
    /*0x14*/ TutorialStartType tutorialStartType;
    /*0x18*/ bool isSkip;
    /*0x1c*/ TutorialType tutorialType;
    /*0x20*/ int priority;
    /*0x24*/ ContentType contentType;
    /*0x28*/ TutorialBeginType beginType;
    /*0x30*/ System.Collections.Generic.List<TutorialRequirementBase> requirementList;
    /*0x38*/ System.Collections.Generic.List<TutorialTask> taskList;

    /*0x112a60c*/ TutorialData();
    /*0x1129d38*/ void InitData(TableData.TableData_Tutorial data);
    /*0x112a1ac*/ void AddTask(TableData.TableData_Tutorial data);
    /*0x112a418*/ bool CheckRequire();
    /*0x112a4fc*/ void EndRequire();
}

class TutorialTask
{
    /*0x10*/ TutorialProcessType tutorialProcessType;
    /*0x14*/ TutorialButtonType tutorialButtonType;
    /*0x18*/ string selectButtonName;
    /*0x20*/ string createPrefabName;
    /*0x28*/ string requireSceneName;
    /*0x30*/ bool isBattlePause;
    /*0x34*/ float delayTime;
    /*0x38*/ int battleStageType;
    /*0x3c*/ bool isShowDialog;
    /*0x40*/ DialogType dialogType;
    /*0x44*/ float dialogTime;
    /*0x48*/ bool dialogClear;
    /*0x49*/ bool dialogIsLeft;
    /*0x50*/ string dialogIcon;
    /*0x58*/ string dialogText;
    /*0x60*/ float dialogYPosition;
    /*0x64*/ float fingerRotate;
    /*0x68*/ string voice;

    /*0x112a244*/ TutorialTask();
    /*0x112a2b0*/ void LoadTask(TableData.TableData_Tutorial data);
}

class TutorialHeroGradePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_rareGradeIconParent;
    /*0x48*/ HeroSlot m_rareHeroSlot;
    /*0x50*/ UnityEngine.GameObject m_epicGradeIconParent;
    /*0x58*/ HeroSlot m_epicHeroSlot;
    /*0x60*/ HeroSlot m_slimeHeroSlot;

    /*0x112b498*/ TutorialHeroGradePopup();
    /*0x112b224*/ void OnCreate();
    /*0x112b228*/ void OnDelete();
    /*0x112b22c*/ void OnEnter();
    /*0x112b270*/ void OnFinish();
    /*0x112b274*/ void OnLeave();
    /*0x112b278*/ void OnStart();
    /*0x112b230*/ void InitPopup();
    /*0x112b27c*/ void Clear();
    /*0x112b454*/ void SetHeroSlot(HeroSlot target, int tableId);
}

class TutorialManager : Singleton.Component.SingletonComponent<TutorialManager>
{
    static string WINDOW_NAME = "TutorialWindow";
    static string TUTORIAL_LEFT_DIALOG_PREFAB = "TutorialLeftDialog";
    static string TUTORIAL_RIGHT_DIALOG_PREFAB = "TutorialRightDialog";
    static string TUTORIAL_FADEOUT_PREFAB = "TutorialFadeOut";
    static /*0x0*/ bool USE_TUTORIAL;
    static /*0x8*/ System.Action<TutorialProcessType> OnProcessEvent;
    static /*0x10*/ System.Action OnCheckToastPopup;
    /*0x28*/ TutorialWindow m_currTutorialWindow;
    /*0x30*/ int m_currTutorialWindowIndex;
    /*0x38*/ System.Collections.Generic.List<TutorialData> m_tutorialDataList;

    static /*0x112d028*/ TutorialManager();
    /*0x112cf94*/ TutorialManager();
    /*0x112b4a0*/ void AwakeInstance();
    /*0x112b4a4*/ bool InitInstance();
    /*0x112b844*/ void ReleaseInstance();
    /*0x112b4a8*/ bool InitTutorial();
    /*0x1124cec*/ bool IsPlaying();
    /*0x112b934*/ TutorialType GetPlayingTutorialType();
    /*0x112b978*/ bool BlockEscapeKey();
    /*0x112ba50*/ void SkipTutorial(bool isClear);
    /*0x112bbec*/ void BeginOpeningBattle();
    /*0x112be98*/ void BeginOpeningBattle(bool showFadeOut);
    /*0x112bfc8*/ void BeginTutorial(Battle.GameModeType gameModeType);
    /*0x112bfdc*/ void BeginLimitBreak();
    /*0x112c014*/ bool IsBeginLimitBreak();
    /*0x112c1a0*/ bool CheckReadyTutorial(TutorialStartType tutorialStartType, int priority);
    /*0x112bbf4*/ void BeginTutorial(TutorialStartType tutorialStartType);
    /*0x112c83c*/ void Send_AccountTutorialBitData();
    /*0x112c2d4*/ TutorialWindow CreateTutorialUI(string windowName);
    /*0x112ca10*/ void CheatSkipAllTutorial();
    /*0x112bae8*/ void EndTutorial(bool isClear);
    /*0x112ca44*/ void TutorialToggleSkillOn();
    /*0x112ca70*/ System.Collections.IEnumerator LateOnSkillAuto();
    /*0x112cacc*/ UnityEngine.GameObject CreateDialog(bool isLeft);
    /*0x112bf4c*/ System.Collections.IEnumerator ShowFadeOut(float fadeOutTime, System.Action callback);
    /*0x112cc94*/ void HandleCheckUnlockToastPopup();

    class <>c
    {
        static /*0x0*/ TutorialManager.<> <>9;
        static /*0x8*/ System.Action<ServerProtocol.ResAccountTutorial> <>9__25_0;

        static /*0xcd54bc*/ <>c();
        /*0xcd551c*/ <>c();
        /*0xcd5524*/ void <Send_AccountTutorialBitData>b__25_0(ServerProtocol.ResAccountTutorial _instance);
    }

    class <LateOnSkillAuto>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcd5528*/ <LateOnSkillAuto>d__30(int <>1__state);
        /*0xcd5554*/ void System.IDisposable.Dispose();
        /*0xcd5558*/ bool MoveNext();
        /*0xcd5680*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd5688*/ void System.Collections.IEnumerator.Reset();
        /*0xcd56c8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <ShowFadeOut>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float fadeOutTime;
        /*0x28*/ System.Action callback;
        /*0x30*/ UnityEngine.GameObject <fadeOutObject>5__2;

        /*0xcd56d0*/ <ShowFadeOut>d__32(int <>1__state);
        /*0xcd56fc*/ void System.IDisposable.Dispose();
        /*0xcd5700*/ bool MoveNext();
        /*0xcd5ad0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd5ad8*/ void System.Collections.IEnumerator.Reset();
        /*0xcd5b18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TutorialRequirementBase
{
    /*0x112d090*/ TutorialRequirementBase();
    bool CheckRequire(TutorialData tutorialData);
    /*0x112d08c*/ void EndRequire(TutorialData tutorialData);
}

class TutorialRequirementBeginType : TutorialRequirementBase
{
    /*0x10*/ TutorialBeginType m_beginType;

    /*0x112a178*/ TutorialRequirementBeginType(TutorialBeginType beginType);
    /*0x112d098*/ bool CheckRequire(TutorialData tutorialData);
    /*0x112d184*/ void EndRequire(TutorialData tutorialData);
}

class TutorialRequirementChapter : TutorialRequirementBase
{
    /*0x10*/ int chapter;

    /*0x112a110*/ TutorialRequirementChapter(int _chapter);
    /*0x112d224*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementContentUnlock : TutorialRequirementBase
{
    /*0x10*/ int contentUnlockIndex;

    /*0x112a13c*/ TutorialRequirementContentUnlock(int _contentUnlockIndex);
    /*0x112d2b4*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementEquipUp : TutorialRequirementBase
{
    /*0x112a170*/ TutorialRequirementEquipUp();
    /*0x112d33c*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementIsAnotherChapter : TutorialRequirementBase
{
    /*0x112a168*/ TutorialRequirementIsAnotherChapter();
    /*0x112d500*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementOnce : TutorialRequirementBase
{
    /*0x112a0dc*/ TutorialRequirementOnce();
    /*0x112d580*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementStage : TutorialRequirementBase
{
    /*0x10*/ int stageIndex;

    /*0x112a0e4*/ TutorialRequirementStage(int _stageIndex);
    /*0x112d5ac*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialDialog : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_chatTypeObject;
    /*0x20*/ UnityEngine.GameObject m_imageTypeObject;
    /*0x28*/ UnityEngine.GameObject m_spineTypeObject;
    /*0x30*/ UnityEngine.UI.Image m_imageTexture;
    /*0x38*/ AtlasImage m_chatAtlasImage;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_spine;
    /*0x48*/ LocalizeString m_imageLocalizeString;
    /*0x50*/ LocalizeString m_chatLocalizeString;
    /*0x58*/ LocalizeString m_spineLocalizeString;
    /*0x60*/ DialogType m_dialogType;
    /*0x64*/ UnityEngine.Vector2 m_destAnchoredPosition;
    /*0x70*/ TutorialTask m_tutorialTask;

    /*0x112b21c*/ TutorialDialog();
    /*0x112a6d0*/ UnityEngine.Vector2 GetDestAnchoredPosition();
    /*0x112a6d8*/ void SetDestAnchoredPosition(UnityEngine.Vector2 position);
    /*0x112a6e0*/ void SetDialog(TutorialTask tutorialTask, string imageName, string textName, float yPosition, DialogType dialogType);
    /*0x112ac44*/ void HideImageTypeText();
    /*0x112ad00*/ void HideSpineTypeText();
    /*0x112adbc*/ void MoveChatType(UnityEngine.Vector2 end, float moveTime);
    /*0x112aebc*/ void MoveImageType(UnityEngine.Vector2 end, float moveTime);
    /*0x112b06c*/ void MoveSpineType(UnityEngine.Vector2 end, float moveTime);
    /*0x112ae2c*/ System.Collections.IEnumerator MoveChatTypeCoroutine(UnityEngine.Vector2 end, float moveTime);
    /*0x112afdc*/ System.Collections.IEnumerator MoveImageDialog(UnityEngine.Vector2 end, float moveTime);
    /*0x112b18c*/ System.Collections.IEnumerator MoveSpineDialog(UnityEngine.Vector2 end, float moveTime);
    /*0x112ab50*/ void SetSkeleton(string skinName, string anim);
    /*0x112aaf0*/ void HideUI();

    class <MoveChatTypeCoroutine>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialDialog <>4__this;
        /*0x28*/ UnityEngine.Vector2 end;
        /*0x30*/ float moveTime;
        /*0x38*/ UnityEngine.RectTransform <rectTransform>5__2;
        /*0x40*/ float <t>5__3;
        /*0x44*/ float <speed>5__4;

        /*0xcd4b18*/ <MoveChatTypeCoroutine>d__20(int <>1__state);
        /*0xcd4b44*/ void System.IDisposable.Dispose();
        /*0xcd4b48*/ bool MoveNext();
        /*0xcd4d6c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd4d74*/ void System.Collections.IEnumerator.Reset();
        /*0xcd4db4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveImageDialog>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialDialog <>4__this;
        /*0x28*/ UnityEngine.Vector2 end;
        /*0x30*/ float moveTime;
        /*0x38*/ UnityEngine.RectTransform <rectTransform>5__2;
        /*0x40*/ float <t>5__3;
        /*0x44*/ float <speed>5__4;
        /*0x48*/ UnityEngine.CanvasGroup <canvasGroup>5__5;

        /*0xcd4dbc*/ <MoveImageDialog>d__21(int <>1__state);
        /*0xcd4de8*/ void System.IDisposable.Dispose();
        /*0xcd4dec*/ bool MoveNext();
        /*0xcd50ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd50f4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd5134*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveSpineDialog>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialDialog <>4__this;
        /*0x28*/ UnityEngine.Vector2 end;
        /*0x30*/ float moveTime;
        /*0x38*/ UnityEngine.RectTransform <rectTransform>5__2;
        /*0x40*/ float <t>5__3;
        /*0x44*/ float <speed>5__4;
        /*0x48*/ UnityEngine.CanvasGroup <canvasGroup>5__5;

        /*0xcd513c*/ <MoveSpineDialog>d__22(int <>1__state);
        /*0xcd5168*/ void System.IDisposable.Dispose();
        /*0xcd516c*/ bool MoveNext();
        /*0xcd546c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd5474*/ void System.Collections.IEnumerator.Reset();
        /*0xcd54b4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TutorialWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int SAFE_FREE_PARENT_FIND_COUNT;
    /*0x18*/ UnityEngine.GameObject m_superBlock;
    /*0x20*/ AtlasImage m_touchBlockBackGround;
    /*0x28*/ UnityEngine.GameObject m_transparentBlockBackGround;
    /*0x30*/ UnityEngine.GameObject m_skipButton;
    /*0x38*/ TweenImageColor m_flashBackEffect;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_fingerSkeletonTouch;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_fingerSkeletonSlider;
    /*0x50*/ UnityEngine.GameObject m_fingerPivotObject;
    /*0x58*/ UnityEngine.GameObject m_prefabParentObject;
    /*0x60*/ UnityEngine.RectTransform m_spotLight;
    /*0x68*/ UnityEngine.Vector2 m_spotLightOffset;
    /*0x70*/ TutorialData m_tutorialData;
    /*0x78*/ TutorialTask m_currTask;
    /*0x80*/ int m_tutorialTaskStep;
    /*0x88*/ UnityEngine.Canvas m_targetCanvas;
    /*0x90*/ UnityEngine.GameObject m_copyObject;
    /*0x98*/ UnityEngine.GameObject m_originalObject;
    /*0xa0*/ UnityEngine.GameObject m_troopCharacterParent;
    /*0xa8*/ System.Collections.Generic.List<TutorialDialog> m_tutorialDialogList;
    /*0xb0*/ UnityEngine.Coroutine m_moveDialogCoroutine;
    /*0xb8*/ UnityEngine.Coroutine m_updateCoroutine;
    /*0xc0*/ UnityEngine.Coroutine m_fixMoveCoroutine;
    /*0xc8*/ UnityEngine.Coroutine m_freeBackGroundTouchCoroutine;
    /*0xd0*/ UnityEngine.Coroutine m_troopCoroutine;
    /*0xd8*/ UnityEngine.Coroutine m_spotCoroutine;
    /*0xe0*/ bool m_isProcessCheck;

    static /*0x1132238*/ TutorialWindow();
    /*0x11321b8*/ TutorialWindow();
    /*0x112c820*/ int GetTutorialIndex();
    /*0x112dd50*/ TutorialData GetTutorialData();
    /*0x112c558*/ void InitWindow(TutorialData tutorialData);
    /*0x112de58*/ void HandleClickBackGround();
    /*0x112e134*/ void HandleButtonClick();
    /*0x112e350*/ void HandleTouchSkillOn(bool isOn, int index);
    /*0x112e46c*/ void HandleProcess(TutorialProcessType tutorialProcessType);
    /*0x112e48c*/ void SkipTutorial(bool isClear);
    /*0x112e790*/ UnityEngine.GameObject FindTutorialObejct(string findObjectName);
    /*0x112e8a0*/ UnityEngine.GameObject FindHeroSlotInventory(string findObjectName);
    /*0x112eaa8*/ UnityEngine.GameObject FindHeroSlotInventoryGrade(string findObjectName);
    /*0x112ec4c*/ UnityEngine.GameObject FindEquipmentUpHeroSlot(string findObjectName);
    /*0x112ee78*/ UnityEngine.GameObject FindUnitBattleStatusSlot(string findObjectName);
    /*0x112ef94*/ UnityEngine.GameObject FindTroopCharacterViewEntity(string findObjectName);
    /*0x112f0b0*/ UnityEngine.GameObject FindAnotherChapterPoint(string findObjectName);
    /*0x112f23c*/ UnityEngine.GameObject FindAsendSlot(string findObjectName);
    /*0x112f338*/ UnityEngine.GameObject FindBRankOverItem(string findObjectName);
    /*0x112f498*/ UnityEngine.GameObject FindBountyHelpSlot(string findObjectName);
    /*0x112f620*/ UnityEngine.GameObject FindBountyHelpSelectSlot(string findObjectName);
    /*0x112f748*/ UnityEngine.GameObject FindHeroGuildWarEditSlot(string findObjectName);
    /*0x112f844*/ UnityEngine.GameObject FindHousingStorageSlot(string findObjectName);
    /*0x112fa1c*/ UnityEngine.Canvas FindRootCanvas(UnityEngine.GameObject findObject);
    /*0x112fb70*/ UnityEngine.Vector3 FindWorldScale(UnityEngine.GameObject findObject);
    /*0x112c6d0*/ void BeginTutorial();
    /*0x112df8c*/ void UpdateTutorial();
    /*0x112fcf0*/ System.Collections.IEnumerator BeginOpeningBattle();
    /*0x1130144*/ System.Collections.IEnumerator UpdateTutorialCoroutine();
    /*0x11301b0*/ System.Collections.IEnumerator MoveCheckTroopCharacterViewEntity();
    /*0x113021c*/ System.Collections.IEnumerator MoveDialog();
    /*0x1130288*/ System.Collections.IEnumerator FixHighlighPosition();
    /*0x11302f4*/ System.Collections.IEnumerator FreeBackgroundTouchCheck();
    /*0x1130360*/ System.Collections.IEnumerator CoSpotZoom(UnityEngine.Vector2 dest);
    /*0x112e53c*/ void EndTutorial(bool isClear);
    /*0x11303e0*/ System.Collections.IEnumerator FinalBattleEndTutorial();
    /*0x112dd58*/ void HideUI();
    /*0x1130570*/ void ShowDialog();
    /*0x11307fc*/ string GetDialogText();
    /*0x1130980*/ bool ShowHighlightObject(string buttonObjectName);
    /*0x113149c*/ void ShowPrefab(string prefabName);
    /*0x11312c0*/ void AddClickEvent(UnityEngine.GameObject addObject);
    /*0x11316e8*/ void RemoveClickEvent(UnityEngine.GameObject removeObject);
    /*0x113110c*/ void ClearButtonEvent(UnityEngine.GameObject clearObject);
    /*0x113044c*/ void ClearAll();
    /*0x113188c*/ void ClearDialog();
    /*0x112fff0*/ void ClearCopyData();
    /*0x112fd5c*/ void ClearFlag();
    /*0x1131a74*/ bool IsShowTouchBlackGuard();
    /*0x1131ae8*/ bool IsReadyScene();
    /*0x1131bd8*/ bool IsReadyPopup();
    /*0x1131e10*/ void OnClosePopup();
    /*0x1131988*/ void ShowUnitBattleStatusSlot();
    /*0x1131efc*/ void HideUnitBattleStatusSlot();
    /*0x1131fe4*/ void StartOpeningBattle();

    class <BeginOpeningBattle>d__52 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ UnityEngine.UI.Image <image>5__2;
        /*0x30*/ float <amount>5__3;

        /*0xcd5d98*/ <BeginOpeningBattle>d__52(int <>1__state);
        /*0xcd5dc4*/ void System.IDisposable.Dispose();
        /*0xcd5dc8*/ bool MoveNext();
        /*0xcd6164*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd616c*/ void System.Collections.IEnumerator.Reset();
        /*0xcd61ac*/ object System.Collections.IEnumerator.get_Current();
    }

    class <UpdateTutorialCoroutine>d__53 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ BattleMainWindow <battleMainWindow>5__2;
        /*0x30*/ int <i>5__3;

        /*0xd899c8*/ <UpdateTutorialCoroutine>d__53(int <>1__state);
        /*0xd899f4*/ void System.IDisposable.Dispose();
        /*0xd899f8*/ bool MoveNext();
        /*0xd8a1bc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8a1c4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8a204*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveCheckTroopCharacterViewEntity>d__54 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ TroopCharacterViewEntity <troopCharacterViewEntity>5__2;
        /*0x30*/ int <oldSibilingIndex>5__3;

        /*0xd892d0*/ <MoveCheckTroopCharacterViewEntity>d__54(int <>1__state);
        /*0xd892fc*/ void System.IDisposable.Dispose();
        /*0xd89300*/ bool MoveNext();
        /*0xd8953c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd89544*/ void System.Collections.IEnumerator.Reset();
        /*0xd89584*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveDialog>d__55 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;

        /*0xd8958c*/ <MoveDialog>d__55(int <>1__state);
        /*0xd895b8*/ void System.IDisposable.Dispose();
        /*0xd895bc*/ bool MoveNext();
        /*0xd89978*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd89980*/ void System.Collections.IEnumerator.Reset();
        /*0xd899c0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <FixHighlighPosition>d__56 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ UnityEngine.Vector3 <fixDir>5__2;

        /*0xd88bf0*/ <FixHighlighPosition>d__56(int <>1__state);
        /*0xd88c1c*/ void System.IDisposable.Dispose();
        /*0xd88c20*/ bool MoveNext();
        /*0xd88e64*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd88e6c*/ void System.Collections.IEnumerator.Reset();
        /*0xd88eac*/ object System.Collections.IEnumerator.get_Current();
    }

    class <FreeBackgroundTouchCheck>d__57 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;

        /*0xd88eb4*/ <FreeBackgroundTouchCheck>d__57(int <>1__state);
        /*0xd88ee0*/ void System.IDisposable.Dispose();
        /*0xd88ee4*/ bool MoveNext();
        /*0xd89280*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd89288*/ void System.Collections.IEnumerator.Reset();
        /*0xd892c8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSpotZoom>d__58 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.Vector2 dest;
        /*0x28*/ TutorialWindow <>4__this;
        /*0x30*/ float <t>5__2;
        /*0x34*/ float <speed>5__3;
        /*0x38*/ UnityEngine.Vector2 <start>5__4;

        /*0xd884c0*/ <CoSpotZoom>d__58(int <>1__state);
        /*0xd884ec*/ void System.IDisposable.Dispose();
        /*0xd884f0*/ bool MoveNext();
        /*0xd88610*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd88618*/ void System.Collections.IEnumerator.Reset();
        /*0xd88658*/ object System.Collections.IEnumerator.get_Current();
    }

    class <FinalBattleEndTutorial>d__60 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ float <t>5__2;

        /*0xd88660*/ <FinalBattleEndTutorial>d__60(int <>1__state);
        /*0xd8868c*/ void System.IDisposable.Dispose();
        /*0xd88690*/ bool MoveNext();
        /*0xd88ba0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd88ba8*/ void System.Collections.IEnumerator.Reset();
        /*0xd88be8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ TutorialWindow.<> <>9;
        static /*0x8*/ System.Func<int, PTShare.Define.SEquip> <>9__79_1;
        static /*0x10*/ System.Converter<TableData.TableData_Tutorialbattlehero, PTShare.Define.SHero> <>9__79_0;

        static /*0xcd5b20*/ <>c();
        /*0xcd5b80*/ <>c();
        /*0xcd5b88*/ PTShare.Define.SHero <StartOpeningBattle>b__79_0(TableData.TableData_Tutorialbattlehero c);
        /*0xcd5d38*/ PTShare.Define.SEquip <StartOpeningBattle>b__79_1(int s);
    }
}

class DefineUIScreenEffect
{
    static string WIPE = "wipe_black";

    /*0x11ef5ac*/ DefineUIScreenEffect();

    enum CALLBACK_TYPE
    {
        EVENT = 0,
        COMPLETE_EVENT = 1,
        NULL = 2,
    }

    enum UISCREEN_EFFECT_TYPE
    {
        EFFECT_PAGE = 0,
        NULL = 1,
    }
}

class UIScreenEffectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ DefineUIScreenEffect.UISCREEN_EFFECT_TYPE m_uiScreenEffectType;
    /*0x20*/ System.Action[] m_callBacks;

    /*0x2365d00*/ UIScreenEffectBase();
    /*0x2365cf0*/ DefineUIScreenEffect.UISCREEN_EFFECT_TYPE GetUIScreenEffectType();
    /*0x2365cf8*/ void PlayEffect(float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x2365cfc*/ void PlayEffect(string animName, float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
}

class UIScreenEffectManager : Singleton.Component.SingletonComponent<UIScreenEffectManager>
{
    static /*0x0*/ System.Action OnEndEffect;
    /*0x28*/ System.Collections.Generic.Dictionary<DefineUIScreenEffect.UISCREEN_EFFECT_TYPE, UIScreenEffectBase> m_cashingEffectDictionary;
    /*0x30*/ bool m_playingEffect;

    static /*0x236663c*/ UIScreenEffectManager();
    /*0x23665b0*/ UIScreenEffectManager();
    /*0x2365d64*/ void AwakeInstance();
    /*0x2365d68*/ bool InitInstance();
    /*0x23660ec*/ void ReleaseInstance();
    /*0x23661dc*/ bool IsPlayingEffect();
    /*0x2365ec8*/ void InitDictionary();
    /*0x23661e4*/ void PlayScreenEffect(DefineUIScreenEffect.UISCREEN_EFFECT_TYPE uiScreenEffectType, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x23664c4*/ void PlayScreenEffect(DefineUIScreenEffect.UISCREEN_EFFECT_TYPE uiScreenEffectType, string animName, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x23662c0*/ UIScreenEffectBase CreateEffect(DefineUIScreenEffect.UISCREEN_EFFECT_TYPE uiScreenEffectType);
    /*0x23665a8*/ void HandleEndEffect();
}

class UIScreenEffectSpine : UIScreenEffectBase
{
    /*0x28*/ Spine.Unity.SkeletonGraphic m_spine;
    /*0x30*/ bool m_destroyOnComplete;

    /*0x2366a20*/ UIScreenEffectSpine();
    /*0x2366640*/ void PlayEffect(float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x236666c*/ void PlayEffect(string animName, float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x23668c0*/ void SetDestryOnComplete(bool destroy);
    /*0x23668cc*/ void EffectComleteEvent(Spine.TrackEntry trackEntry);
    /*0x23669dc*/ void EffectEvent(Spine.TrackEntry trackEntry, Spine.Event e);
}

class UnlockComponent : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<UnityEngine.GameObject> m_UnlockObject;
    /*0x20*/ System.Collections.Generic.List<UnityEngine.GameObject> m_UnlockViewObject;
    /*0x28*/ ContentType m_eContentUnlockType;
    /*0x2c*/ bool m_isShowRecentlyUnlockEffect;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_unlockSkel;
    /*0x38*/ Spine.Unity.SkeletonGraphic m_lockSkel;
    /*0x40*/ UnityEngine.GameObject m_lockIconObject;
    /*0x48*/ UnityEngine.UI.Image m_lockImage;
    /*0x50*/ ShaderChanger m_shaderChanger;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_openSkel;
    /*0x60*/ UnityEngine.Events.UnityEvent m_startUnlockEvent;
    /*0x68*/ TableData.TableData_Contentunlock m_tContentunlock;
    /*0x70*/ QuestPackage m_tQuestPackage;
    /*0x78*/ bool isUnLock;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;

    /*0x10c5cdc*/ UnlockComponent();
    /*0x10c4acc*/ void OnEnable();
    /*0x10c4fd8*/ void OnDisable();
    /*0x10c5138*/ void HandlerUnLockContent();
    /*0x10c513c*/ void Refresh();
    /*0x10c5140*/ void SetLockIcon(bool _enable);
    /*0x10c4ed8*/ void LoadUnLockContent();
    /*0x10c5638*/ void UnlockObjects();
    /*0x10c530c*/ void ShowUnlockEffect();
    /*0x10c4e2c*/ bool IsValidLoadTable();
    /*0x10c5960*/ void OnClick_UnLockContent();
    /*0x10c58e4*/ System.Collections.IEnumerator CoWaitCallback(float time, System.Action callBack);
    /*0x10c5c70*/ System.Collections.IEnumerator ShaderEffect();
    /*0x10c5d40*/ void <UnlockObjects>b__21_0(UnityEngine.GameObject x);
    /*0x10c5d64*/ void <UnlockObjects>b__21_2(UnityEngine.GameObject x);
    /*0x10c5d80*/ void <ShowUnlockEffect>b__22_1();
    /*0x10c5ddc*/ void <ShaderEffect>b__26_0();

    class <>c
    {
        static /*0x0*/ UnlockComponent.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.GameObject> <>9__21_1;
        static /*0x10*/ System.Action<UnityEngine.GameObject> <>9__22_0;

        static /*0xd8a974*/ <>c();
        /*0xd8a9d4*/ <>c();
        /*0xd8a9dc*/ void <UnlockObjects>b__21_1(UnityEngine.GameObject x);
        /*0xd8a9f4*/ void <ShowUnlockEffect>b__22_0(UnityEngine.GameObject x);
    }

    class <CoWaitCallback>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ System.Action callBack;

        /*0xd8aa0c*/ <CoWaitCallback>d__25(int <>1__state);
        /*0xd8aa38*/ void System.IDisposable.Dispose();
        /*0xd8aa3c*/ bool MoveNext();
        /*0xd8aae8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8aaf0*/ void System.Collections.IEnumerator.Reset();
        /*0xd8ab30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <ShaderEffect>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnlockComponent <>4__this;
        /*0x28*/ UnityEngine.Material <oldMat>5__2;
        /*0x30*/ float <speed>5__3;
        /*0x34*/ float <t>5__4;

        /*0xd8ab38*/ <ShaderEffect>d__26(int <>1__state);
        /*0xd8ab64*/ void System.IDisposable.Dispose();
        /*0xd8ab68*/ bool MoveNext();
        /*0xd8af84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8af8c*/ void System.Collections.IEnumerator.Reset();
        /*0xd8afcc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class UnlockManager : Singleton.Data.SingletonData<UnlockManager>
{
    static /*0x0*/ System.Action OnChangeUnLockContent;
    /*0x20*/ System.Collections.Generic.List<ContentType> m_recentlyUnlockContent;

    static /*0x10c63b4*/ UnlockManager();
    static /*0x10c4d38*/ void add_OnChangeUnLockContent(System.Action value);
    static /*0x10c4c44*/ void remove_OnChangeUnLockContent(System.Action value);
    /*0x10c62fc*/ UnlockManager();
    /*0x10c5dfc*/ bool InitInstance();
    /*0x10c5e04*/ void ReleaseInstance();
    /*0x10c52a8*/ bool IsRecentlyUnlock(ContentType contentType);
    /*0x10c5e68*/ void AddRecentlyUnlock(ContentType contentType);
    /*0x10c5880*/ void RemoveRecentlyUnlock(ContentType contentType);
    /*0x10c5f08*/ void RefreshUnLockContent();
    /*0x10c5f80*/ bool IsUnlockContent(int index);
    /*0x10c51e4*/ bool IsUnlockContent(ContentType _eType);
    /*0x10c6180*/ bool IsUnlockContent(string stageName, ContentType _eType);
    /*0x10c6044*/ bool IsUnLockContent(QuestPackage _questPackage);
}

class VIPManager : Singleton.Component.SingletonComponent<VIPManager>
{
    static /*0x0*/ System.Action OnReceiveReward;
    /*0x28*/ System.Collections.Generic.List<int> m_rewardList;
    /*0x30*/ UnityEngine.Coroutine m_coroutine;

    static /*0x10d1fc4*/ VIPManager();
    /*0x10d1f38*/ VIPManager();
    /*0x10d107c*/ void AwakeInstance();
    /*0x10d1080*/ bool InitInstance();
    /*0x10d1088*/ void ReleaseInstance();
    /*0x10d108c*/ int GetVipLevel();
    /*0x10d1218*/ int GetVipMaxLevel();
    /*0x10d1290*/ bool IsReward(int vipLevel);
    /*0x10d12f4*/ int GetRewardCount();
    /*0x10d1340*/ bool IsUnlockBattleAccelx3();
    /*0x10d1360*/ bool IsUnlockBattleAccelx4();
    /*0x10d1380*/ bool IsUnlockBountyAuto();
    /*0x10d13a0*/ bool IsUnlockArenaBattleSkip();
    /*0x10d13c0*/ bool IsUnlockGuildBossSweep();
    /*0x10d13e0*/ bool IsUnlockRaceSkip();
    /*0x10d1400*/ int GetFastIdleAddCount();
    /*0x10d1420*/ int GetIdleAddMaxTime();
    /*0x10d1440*/ int GetGuildHuntingAddCount();
    /*0x10d1460*/ int GetArenaDailyFree();
    /*0x10d1480*/ int GetArenaLimitRewardCount();
    /*0x10d14a0*/ int GetAddHeroSlotCount();
    /*0x10d14c0*/ int GetVipPoint();
    /*0x10d1540*/ float GetIdleGoldAddPercent();
    /*0x10d1570*/ float GetIdleHeroExpAddPercent();
    /*0x10d15a0*/ float GetMazeBattleGoldAddPercent();
    /*0x10d15d0*/ System.Collections.Generic.List<Rewards> GetVipReward(int vipLevel);
    /*0x10d16d0*/ int GetCurrentVipAccPoint();
    /*0x10d17e4*/ int GetAccVipPoint(int level);
    /*0x10d10ac*/ TableData.TableData_Vip GetCurrentVipTableData();
    /*0x10d18fc*/ int GetPrevVipPoint();
    /*0x10d1930*/ TableData.TableData_Vip GetVipTableData(int vipLevel);
    /*0x10d19f8*/ void AddRewardVIP(System.Collections.Generic.List<int> levels);
    /*0x10d1ae0*/ void AddRewardVIP(int level);
    /*0x10d1c78*/ void ChangeVipLevel(int prev, int now);
    /*0x10d1d50*/ void Send_RewardVip(int vipLevel, System.Action callBack);
    /*0x10d1c0c*/ System.Collections.IEnumerator CoWaitShowVip();

    class <>c__DisplayClass35_0
    {
        /*0x10*/ VIPManager <>4__this;
        /*0x18*/ int vipLevel;
        /*0x20*/ System.Action callBack;

        /*0xd8b810*/ <>c__DisplayClass35_0();
        /*0xd8b818*/ void <Send_RewardVip>b__0(ServerProtocol.ResCashShopVIPReward instance);
    }

    class <CoWaitShowVip>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ VIPManager <>4__this;

        /*0xd8b950*/ <CoWaitShowVip>d__36(int <>1__state);
        /*0xd8b97c*/ void System.IDisposable.Dispose();
        /*0xd8b980*/ bool MoveNext();
        /*0xd8bb50*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8bb58*/ void System.Collections.IEnumerator.Reset();
        /*0xd8bb98*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldBossManager : Singleton.Data.SingletonData<WorldBossManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SWorldBossRanker> m_rankerList;
    /*0x28*/ PTShare.Define.SWorldBoss m_currBossData;
    /*0x30*/ System.Collections.Generic.List<int> m_attackBossIndexList;
    /*0x38*/ bool m_bannerEnable;
    /*0x40*/ System.Collections.Generic.List<int> m_missionReddots;
    /*0x48*/ WorldBossManager.BossData m_bossData;

    /*0xe0dd84*/ WorldBossManager();
    /*0xe0d024*/ bool InitInstance();
    /*0xe0d068*/ void ReleaseInstance();
    /*0xe0d06c*/ int GetCurrBossIndex();
    /*0xe0afd0*/ int GetCurrBossStepID();
    /*0xe0d088*/ int GetBattleID();
    /*0xe0c4d0*/ int GetBossID();
    /*0xe0c4f0*/ int GetBossLevel();
    /*0xe0c510*/ int GetBossGrade();
    /*0xe0c568*/ string GetBossStepReward();
    /*0xe0d0c8*/ string GetBossBasicReward();
    /*0xe0c54c*/ bool GetClear();
    /*0xe0d0e8*/ long GetBossHp(int step);
    /*0xe0d17c*/ WorldBossManager.BossData GetWorldBossTableData();
    /*0xe0d0a8*/ TableData.TableData_Worldbossstep GetWorldBossStepTableData();
    /*0xe0d170*/ TableData.TableData_Worldbossstep GetWorldBossStepTableData(int stepId);
    /*0xe0d184*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> GetWorldBossMissionTableData(int index);
    /*0xe0c530*/ long GetDamage();
    /*0xe0d1b0*/ PTShare.Define.SWorldBoss GetBossData();
    /*0xe0d1b8*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> GetMissionList();
    /*0xe0b9e0*/ System.Collections.Generic.List<int> GetOpenBossList();
    /*0xe0b9fc*/ System.Collections.Generic.List<int> GetCloseBossList();
    /*0xe0a5fc*/ bool IsShowBanner();
    /*0xe0d1d4*/ bool IsShowTutorial(bool update);
    /*0xe0d2b8*/ bool IsAttackBoss(int index);
    /*0xe0acb4*/ bool IsShowCloseBoss();
    /*0xe0aa84*/ bool IsEmergence();
    /*0xe0d31c*/ void AddAttackBossIndex(int index);
    /*0xe0d3bc*/ void SetAttackBossIndex(System.Collections.Generic.List<int> list);
    /*0xe0d3c4*/ void SetBanner(bool enable);
    /*0xe0d3d0*/ void SetMissionReddot(System.Collections.Generic.List<int> reddots);
    /*0xe0d454*/ void SetMissionReddot(int bossIdx, bool enable);
    /*0xe0b0b4*/ void OpenPopup(int index);
    /*0xe0d6e8*/ System.TimeSpan GetExpireTime();
    /*0xe0d78c*/ bool IsMissionReddot(int idx);
    /*0xe0d54c*/ void Send_Enter(int index, System.Action callback);
    /*0xe0d860*/ void Send_Take(int listIndex, int bossIndex, int index, System.Action callBack);
    /*0xe0da10*/ void Send_BeginBattle(string heroIds, System.Action<int> callBack_WithRandomSeed);
    /*0xe0dbb8*/ void Send_FinishBattle(string statistics, string playData, long lcp, string HpMps, double damage, bool isWin, System.Action<PTShare.Define.SProperty> callBack);
    /*0xe0d04c*/ void UpdateCurrentBossData();

    class BossData
    {
        /*0x10*/ int OFFSET;
        /*0x14*/ int bossIndex;
        /*0x18*/ int stepId;
        /*0x1c*/ bool isOpen;
        /*0x1d*/ bool isConnectDay;
        /*0x20*/ System.Collections.Generic.List<int> openList;
        /*0x28*/ System.Collections.Generic.List<int> closeList;

        /*0xd8dc24*/ BossData();
        /*0xd8d9dc*/ void Compute();
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ int index;
        /*0x18*/ System.Action <>9__1;

        /*0xd8d5a0*/ <>c__DisplayClass38_0();
        /*0xd8d5a8*/ void <OpenPopup>b__1();
    }

    class <>c
    {
        static /*0x0*/ WorldBossManager.<> <>9;
        static /*0x8*/ System.Action <>9__38_0;

        static /*0xd8d4b8*/ <>c();
        /*0xd8d518*/ <>c();
        /*0xd8d520*/ void <OpenPopup>b__38_0();
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ WorldBossManager <>4__this;
        /*0x18*/ System.Action callback;

        /*0xd8d630*/ <>c__DisplayClass41_0();
        /*0xd8d638*/ void <Send_Enter>b__0(ServerProtocol.ResWorldBossEnter response);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ WorldBossManager <>4__this;
        /*0x18*/ int listIndex;
        /*0x20*/ System.Action callBack;

        /*0xd8d67c*/ <>c__DisplayClass42_0();
        /*0xd8d684*/ void <Send_Take>b__0(ServerProtocol.ResWorldBossTake response);
    }

    class <>c__DisplayClass43_0
    {
        /*0x10*/ System.Action<int> callBack_WithRandomSeed;

        /*0xd8d81c*/ <>c__DisplayClass43_0();
        /*0xd8d824*/ void <Send_BeginBattle>b__0(ServerProtocol.ResWorldBossBegin instance);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ WorldBossManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> callBack;

        /*0xd8d8e4*/ <>c__DisplayClass44_0();
        /*0xd8d8ec*/ void <Send_FinishBattle>b__0(ServerProtocol.ResWorldBossFinish instance);
    }
}

class MiniGameMenuEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ MiniGameMenuEntity.ENTITY_TYPE m_entityType;

    /*0x2b417e0*/ MiniGameMenuEntity();
    /*0x2b41390*/ void OnClick();
    /*0x2b415d0*/ void OnClickRanking();
    /*0x2b417c0*/ RankingBoardType ConvertRankType();
    /*0x2b417e8*/ void <OnClickRanking>b__3_0(ServerProtocol.ResRaceRanking response);
    /*0x2b418f0*/ void <OnClickRanking>b__3_1(ServerProtocol.ResRunGameRanking response);

    enum ENTITY_TYPE
    {
        RACE = 0,
        RUN = 1,
    }

    class <>c
    {
        static /*0x0*/ MiniGameMenuEntity.<> <>9;
        static /*0x8*/ System.Action <>9__2_0;

        static /*0x1088384*/ <>c();
        /*0x10883e4*/ <>c();
        /*0x10883ec*/ void <OnClick>b__2_0();
    }

    class <>c__DisplayClass3_0
    {
        /*0x10*/ ServerProtocol.ResRaceRanking response;
        /*0x18*/ MiniGameMenuEntity <>4__this;

        /*0x108846c*/ <>c__DisplayClass3_0();
        /*0x1088474*/ void <OnClickRanking>b__2();
    }

    class <>c__DisplayClass3_1
    {
        /*0x10*/ ServerProtocol.ResRunGameRanking response;
        /*0x18*/ MiniGameMenuEntity <>4__this;

        /*0x108853c*/ <>c__DisplayClass3_1();
        /*0x1088544*/ void <OnClickRanking>b__3();
    }
}

class MiniGamePopup : GuiBase
{
    /*0x2b41abc*/ MiniGamePopup();
    /*0x2b419f8*/ void OnCreate();
    /*0x2b419fc*/ void OnDelete();
    /*0x2b41a00*/ void OnEnter();
    /*0x2b41a04*/ void OnExit();
    /*0x2b41a0c*/ void OnFinish();
    /*0x2b41a10*/ void OnLeave();
    /*0x2b41a14*/ void OnStart();
    /*0x2b41a18*/ void OnClickHelp();
}

class RaceCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x20*/ AtlasImage m_Rank;
    /*0x28*/ UnityEngine.GameObject m_MyPick;
    /*0x30*/ ParticleBase m_DustParticle;
    /*0x38*/ ParticleBase m_WinParticle;
    /*0x40*/ int nPlayerIndex;
    /*0x44*/ int nBlockIndex;
    /*0x48*/ int nRank;
    /*0x4c*/ float fOriginSpeed;
    /*0x50*/ float fChangeSpeed;
    /*0x54*/ float fBeginSpdTime;
    /*0x58*/ float fBeginSpeed;
    /*0x5c*/ float fFinishSpdTime;
    /*0x60*/ float fFinishSpeed;
    /*0x64*/ float fMoveDistance;
    /*0x68*/ bool bIsFinish;
    /*0x69*/ bool bIsComplete;
    /*0x6a*/ bool bIsReady;

    /*0x1247bd8*/ RaceCharacter();
    /*0x1247058*/ void Initialize(int nIndex, int nUnitIndex, int nRankIndex, float fSpeed);
    /*0x1247248*/ void Release();
    /*0x1247430*/ void StartRun();
    /*0x12475a0*/ void Run(float movespeed, UnityEngine.Vector2 moveToTarget);
    /*0x1247758*/ void SetAnimationState(string animName);
    /*0x124793c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x124798c*/ System.Collections.IEnumerator CoWaitAnimation();
    /*0x1247528*/ void OverWriteAnimSkeleton(ANIMATION_CLIP clip, bool loop);
    /*0x12479f8*/ void ViewRank();
    /*0x1247330*/ void SetActiveMyPick(bool enable);
    /*0x12473d8*/ void SetActiveRank(bool enable);
    /*0x1247b40*/ void SetBlockIndex(int index);
    /*0x1247b48*/ void SetChangeSpeed(float spd);
    /*0x1247b50*/ void SetBeginSpdTime(float time);
    /*0x1247b58*/ void SetBeginSpeed(float spd);
    /*0x1247b60*/ void SetFinishSpdTime(float time);
    /*0x1247b68*/ void SetFinishSpeed(float spd);
    /*0x1247b70*/ void SetReady(bool enable);
    /*0x12473f0*/ void SetFinish(bool enable);
    /*0x1247b7c*/ void SetComplete(bool enable);
    /*0x1247348*/ void SetActiveDustParticle(bool enable);
    /*0x1247390*/ void SetActiveWinParticle(bool enable);
    /*0x1247b88*/ int GetIndex();
    /*0x1247b90*/ int GetBlockIndex();
    /*0x1247b98*/ float GetChangeSpeed();
    /*0x1247ba0*/ float GetBeginTime();
    /*0x1247ba8*/ float GetFinishTime();
    /*0x1247bb0*/ bool IsReady();
    /*0x1247bb8*/ bool IsFinish();
    /*0x1247bc0*/ bool IsComplete();
    /*0x1247bc8*/ int GetRank();
    /*0x1247bd0*/ float GetMoveDistance();
    /*0x1247be0*/ bool <CoWaitAnimation>b__24_0();

    class <CoWaitAnimation>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceCharacter <>4__this;

        /*0xf94100*/ <CoWaitAnimation>d__24(int <>1__state);
        /*0xf9412c*/ void System.IDisposable.Dispose();
        /*0xf94130*/ bool MoveNext();
        /*0xf942ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf942f4*/ void System.Collections.IEnumerator.Reset();
        /*0xf94334*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RaceGamePopup : GuiBase
{
    /*0x40*/ UnityEngine.Transform m_ScreenParent;
    /*0x48*/ UnityEngine.Transform m_PlayerParent;
    /*0x50*/ UnityEngine.Transform m_BackParent;
    /*0x58*/ UnityEngine.Transform m_FrontParent;
    /*0x60*/ UnityEngine.Transform m_TileParent;
    /*0x68*/ UnityEngine.GameObject m_ExitButton;
    /*0x70*/ UnityEngine.GameObject m_SkipButton;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_StartSpine;
    /*0x80*/ UnityEngine.GameObject m_ViewParent;
    /*0x88*/ System.Collections.Generic.List<RaceViewEntity> m_liViewEntity;
    /*0x90*/ LocalizeString m_Title;
    /*0x98*/ float m_fScreenView;
    /*0x9c*/ UnityEngine.Vector2 m_vecTileSize;
    /*0xa4*/ UnityEngine.Vector2 m_vecTileOffset;
    /*0xac*/ float m_fPlayerYOffset;
    /*0xb0*/ RunRaceResultData resultData;
    /*0xb8*/ System.Collections.Generic.List<RaceCharacter> liRunCharacter;
    /*0xc0*/ System.Collections.Generic.List<RaceTile> liDecorateTile;
    /*0xc8*/ System.Collections.Generic.Dictionary<RaceCharacter, System.Collections.Generic.List<RaceTile>> dicRunTileList;
    /*0xd0*/ int nCurrentPlayer;
    /*0xd4*/ bool bIsInitialized;
    /*0xd5*/ bool bIsGameStart;
    /*0xd6*/ bool bIsGameComplete;
    /*0xd8*/ float fMovePlayerSpeed;
    /*0xdc*/ int nSplitAccelInterval;

    /*0x124aa78*/ RaceGamePopup();
    /*0x1247c04*/ float get_OriginSpeed();
    /*0x1247c54*/ int get_SplitAccelInterval();
    /*0x1247c9c*/ void OnCreate();
    /*0x1247ca0*/ void OnEnter();
    /*0x1247ca4*/ void OnStart();
    /*0x1247ca8*/ void OnFinish();
    /*0x1247cac*/ void OnLeave();
    /*0x1247cb0*/ void OnDelete();
    /*0x1247cb4*/ void OnExit();
    /*0x1247ea0*/ void OnUnconditionallyExit();
    /*0x1247fc8*/ void Release();
    /*0x1248720*/ void InitializeGame(RunRaceResultData data);
    /*0x1249ccc*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x1249cd4*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x1248ee4*/ void SetupMapping();
    /*0x124995c*/ void SetupCharacterPosition();
    /*0x1249bec*/ void MoveCamera();
    /*0x1249f34*/ void MovePlayerLogic(RaceCharacter character, float fTime);
    /*0x124a5d0*/ void FixedUpdate();
    /*0x1249a18*/ void SetActiveStartSpine(bool enable);
    /*0x1249a54*/ void InitViewEntity();
    /*0x124a850*/ void SetViewEntity(int nIndex);
    /*0x12486f0*/ void SetActiveViewGroup(bool enable);
    /*0x1248708*/ void SetActiveSkipButton(bool enable);
    /*0x124a944*/ void OnClickSkip();
    /*0x1248ec8*/ int GetMaxPlayers();
    /*0x1249ec0*/ RaceCharacter GetPlayer(int currentPlayer);
    /*0x124a4f4*/ UnityEngine.Vector3 GetPlayerPos(RaceCharacter player);
    /*0x124aa40*/ UnityEngine.Vector3 GetFirstBlockPos(int currentPlayer);
    /*0x124a338*/ UnityEngine.Vector3 GetFirstBlockPos(RaceCharacter player);
    /*0x1249e98*/ UnityEngine.Vector3 GetLastBlockPos(int currentPlayer);
    /*0x124a520*/ UnityEngine.Vector3 GetLastBlockPos(RaceCharacter player);
    /*0x124a3e8*/ UnityEngine.Vector3 GetBlockPos(RaceCharacter player, int index);
    /*0x1249e84*/ UnityEngine.Vector2 GetOffsetSize();
    /*0x124aa68*/ UnityEngine.Vector3 GetOffset();
    /*0x124ab88*/ void <OnExit>b__35_0(bool result);
    /*0x124acbc*/ void <OnExit>b__35_1();
    /*0x124ade4*/ void <InitializeGame>b__38_0(bool result);
    /*0x124adf0*/ void <SetupCharacterPosition>b__42_0(RaceCharacter x);
    /*0x124ae48*/ void <OnClickSkip>b__51_0(RaceCharacter x);

    class <>c
    {
        static /*0x0*/ RaceGamePopup.<> <>9;
        static /*0x8*/ System.Action<RaceCharacter> <>9__37_0;
        static /*0x10*/ System.Action<RaceTile> <>9__37_1;
        static /*0x18*/ System.Action<RaceCharacter> <>9__40_0;
        static /*0x20*/ System.Func<RaceCharacter, bool> <>9__45_0;

        static /*0xf9433c*/ <>c();
        /*0xf9439c*/ <>c();
        /*0xf943a4*/ void <Release>b__37_0(RaceCharacter x);
        /*0xf943c0*/ void <Release>b__37_1(RaceTile x);
        /*0xf9443c*/ void <AnimationState_Event>b__40_0(RaceCharacter x);
        /*0xf94458*/ bool <FixedUpdate>b__45_0(RaceCharacter x);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ int i;

        /*0xf94470*/ <>c__DisplayClass38_0();
        /*0xf94478*/ bool <InitializeGame>b__1(int x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ RaceGamePopup <>4__this;
        /*0x18*/ float fTime;

        /*0xf94488*/ <>c__DisplayClass45_0();
        /*0xf94490*/ void <FixedUpdate>b__1(RaceCharacter x);
    }
}

class RaceManager : Singleton.Data.SingletonData<RaceManager>
{
    /*0x19*/ bool bBreakTime;
    /*0x1c*/ int nCurrentIndex;
    /*0x20*/ int nMySelectTrack;
    /*0x24*/ int nMyPastSelectTrack;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SRunner> liCurrentRunners;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SRace> liPastRace;
    /*0x38*/ ServerProtocol.ResRaceRanking m_rankData;
    /*0x40*/ bool bIsNewRaceRedDot;
    /*0x41*/ bool bIsNewRewardRedDot;

    /*0x124b7f0*/ RaceManager();
    /*0x124aea0*/ string get_UserToken();
    /*0x124af20*/ bool InitInstance();
    /*0x124af28*/ void ReleaseInstance();
    /*0x124346c*/ void Send_RaceEnter(System.Action callback);
    /*0x124af2c*/ void Send_RaceVote(int nTrack, System.Action callback);
    /*0x124b080*/ void Send_RaceList(System.Action callback);
    /*0x124b1b8*/ void Send_RaceView(int nSeq, int nVoteTrack, System.Action<RunRaceResultData> callback);
    /*0x124b310*/ void Send_RaceReward();
    /*0x124b4c8*/ void Send_RaceRanking(System.Action<ServerProtocol.ResRaceRanking> callBack);
    /*0x124b600*/ void SetMySelectTrackID(int nTrack);
    /*0x124b608*/ void SetPastTrack(int nTrack);
    /*0x124b610*/ void SetCurrentSeq(int nIndex);
    /*0x124b618*/ void SetEnableRedDot(bool enable);
    /*0x124b624*/ bool IsEnableRedDot();
    /*0x124b62c*/ bool IsEnableRewardDot();
    /*0x124b634*/ int GetMySelectTrackID();
    /*0x124b63c*/ int GetMyPastSelectTrackID();
    /*0x124b644*/ int GetMyCurrentSeq();
    /*0x124b64c*/ ServerProtocol.ResRaceRanking GetRankData();
    /*0x124b654*/ bool IsBreakTime();
    /*0x124b65c*/ System.Collections.Generic.List<PTShare.Define.SRace> GetPastRace();
    /*0x124b664*/ System.Collections.Generic.List<PTShare.Define.SRunner> GetCurrentRunners();
    /*0x124b66c*/ float GetVotePercent(int nIndex);
    /*0x124b870*/ bool <Send_RaceReward>b__17_0(PTShare.Define.SRace x);
    /*0x124b8a8*/ void <Send_RaceReward>b__17_1(ServerProtocol.ResRaceReward res);

    class <>c__DisplayClass13_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ System.Action callback;

        /*0xf9457c*/ <>c__DisplayClass13_0();
        /*0xf94584*/ void <Send_RaceEnter>b__0(ServerProtocol.ResRaceEnter response);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ int nTrack;
        /*0x20*/ System.Action callback;

        /*0xf94690*/ <>c__DisplayClass14_0();
        /*0xf94698*/ void <Send_RaceVote>b__0(ServerProtocol.ResRaceVote response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ System.Action callback;

        /*0xf947a0*/ <>c__DisplayClass15_0();
        /*0xf947a8*/ void <Send_RaceList>b__0(ServerProtocol.ResRaceList response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ int nVoteTrack;
        /*0x1c*/ int nSeq;
        /*0x20*/ System.Action<RunRaceResultData> callback;

        /*0xf947e4*/ <>c__DisplayClass16_0();
        /*0xf947ec*/ void <Send_RaceView>b__0(ServerProtocol.ResRaceView response);
    }

    class <>c
    {
        static /*0x0*/ RaceManager.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SRace, bool> <>9__17_2;
        static /*0x10*/ System.Func<PTShare.Define.SRunner, int> <>9__32_0;

        static /*0xf944cc*/ <>c();
        /*0xf9452c*/ <>c();
        /*0xf94534*/ bool <Send_RaceReward>b__17_2(PTShare.Define.SRace x);
        /*0xf94564*/ int <GetVotePercent>b__32_0(PTShare.Define.SRunner x);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResRaceRanking> callBack;

        /*0xf94888*/ <>c__DisplayClass18_0();
        /*0xf94890*/ void <Send_RaceRanking>b__0(ServerProtocol.ResRaceRanking response);
    }
}

class RaceTile : UnityEngine.MonoBehaviour
{
    /*0x18*/ RaceTileType m_eTileType;
    /*0x20*/ AtlasImage m_Object;
    /*0x28*/ AtlasImage m_Tile;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x38*/ int nTrackIndex;
    /*0x40*/ TableData.TableData_Racetile tileData;
    /*0x48*/ UnityEngine.RectTransform rectTile;
    /*0x50*/ UnityEngine.RectTransform rectObject;

    /*0x11b8f44*/ RaceTile();
    /*0x11b8418*/ void Awake();
    /*0x11b84a4*/ void Release();
    /*0x11b84d4*/ void Initialize(int track, RaceTileType eTile);
    /*0x11b89d0*/ void Initialize(AtlasType eTileType, string tileName, float height, AtlasType eObjectType, string objectName, UnityEngine.Vector2 position);
    /*0x11b8bf0*/ void InitializeCharacter(int[] ignoreUnit);
    /*0x11b8528*/ void SetObject();
    /*0x11b8a54*/ void SetObject(AtlasType eType, string objectName, UnityEngine.Vector2 position);
    /*0x11b87ac*/ void SetTile();
    /*0x11b8b44*/ void SetTile(AtlasType eType, string tileName, float height);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ int[] ignoreUnit;

        /*0xf96c6c*/ <>c__DisplayClass12_0();
        /*0xf96c74*/ bool <InitializeCharacter>b__1(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass12_1
    {
        /*0x10*/ TableData.TableData_Unitbase x;

        /*0xf96e04*/ <>c__DisplayClass12_1();
        /*0xf96e0c*/ bool <InitializeCharacter>b__2(int y);
    }

    class <>c
    {
        static /*0x0*/ RaceTile.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Unitbase, System.Guid> <>9__12_0;
        static /*0x10*/ System.Func<string, System.Guid> <>9__13_0;
        static /*0x18*/ System.Func<string, System.Guid> <>9__15_0;

        static /*0xf96af0*/ <>c();
        /*0xf96b50*/ <>c();
        /*0xf96b58*/ System.Guid <InitializeCharacter>b__12_0(TableData.TableData_Unitbase x);
        /*0xf96bb4*/ System.Guid <SetObject>b__13_0(string x);
        /*0xf96c10*/ System.Guid <SetTile>b__15_0(string x);
    }
}

class RunRewardLimitEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ RunRewardColumn eRewardType;
    /*0x1c*/ RunRewardColumn eRewardMaxType;
    /*0x20*/ AtlasImage m_CurrencyIcon;
    /*0x28*/ UnityEngine.UI.Slider m_Slider;
    /*0x30*/ LocalizeString m_Value;
    /*0x38*/ UnityEngine.GameObject m_MaxText;
    /*0x40*/ long lCurrentValue;
    /*0x48*/ Rewards defaultReward;
    /*0x110*/ long maxReward;

    /*0x1295fe4*/ RunRewardLimitEntity();
    /*0x1295ba4*/ void InitializeEntity(float ratio);
    /*0x1295f04*/ void InitializeEntity();
    /*0x1295d00*/ void SetIcon();
    /*0x1295dec*/ void SetSlider();
}

class RunRewardLimitGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<RunRewardLimitEntity> m_liRewardLinitEntity;

    /*0x1295fec*/ RunRewardLimitGroup();
    /*0x1292bec*/ void InitializeEntity(int ratio);

    class <>c__DisplayClass1_0
    {
        /*0x10*/ int ratio;

        /*0xf9c370*/ <>c__DisplayClass1_0();
        /*0xf9c378*/ void <InitializeEntity>b__0(RunRewardLimitEntity x);
    }
}

enum RunPatternType
{
    STRAIGHTLINE = 0,
    CROSSLINE = 1,
    STARTPOINT = 2,
    DESTINATION = 3,
}

enum RunTileType
{
    TRACK = 0,
    SEPERATOR = 1,
}

enum RunObstacleType
{
    NONE = 0,
    CAT = 1,
    RABBIT = 2,
    ICE = 3,
    FEAR = 4,
}

enum RunRewardType
{
    NONE = 0,
    REWARD_01 = 1,
    REWARD_01_UP = 2,
    REWARD_02 = 3,
    REWARD_02_UP = 4,
    REWARD_03 = 5,
    REWARD_03_UP = 6,
    REWARD_04 = 7,
    REWARD_04_UP = 8,
    REWARD_LIFE = 9,
    REWARD_LIFE_UP = 10,
}

enum RunGameState
{
    NONE = 0,
    READY = 1,
    RUN = 2,
    RUN_CROSS = 3,
    JUMP = 4,
    FALL = 5,
    FEAR = 6,
    DEATH = 7,
    WIN = 8,
}

enum RunDirectionType
{
    CENTER = 0,
    LOWER = 1,
    RIGHT = 2,
    LEFT_UPPER = 3,
    LEFT_LOWER = 4,
    RIGHT_UPPER = 5,
    RIGHT_LOWER = 6,
}

enum RunRewardColumn
{
    None = 0,
    Reward1_Max = 1,
    Reward2_Max = 2,
    Reward3_Max = 3,
    Reward4_Max = 4,
    Reward1_One = 5,
    Reward2_One = 6,
    Reward3_One = 7,
    Reward4_One = 8,
}

enum RunTileLineType
{
    NONE = 0,
    TOP = 1,
    MIDDLE = 2,
    BOTTOM = 3,
}

class Define_RunGame
{
    static string PATTERN_STARTPOINT_PATH = "Assets/MapTool/RunGame/TileSet/Startpoint";
    static string PATTERN_DESTINATION_PATH = "Assets/MapTool/RunGame/TileSet/Destination";
    static string PATTERN_STRAIGHTLINE_PATH = "Assets/MapTool/RunGame/TileSet/Straightline";
    static string PATTERN_CROSSLINE_PATH = "Assets/MapTool/RunGame/TileSet/Crossline";
    static string RUNGAME_UNIT_NAME = "RunGameUnit";
    static float TARGET_DELTA_TIME = 0.016599999740719795;
    static /*0x0*/ UnityEngine.Vector3 RUNGAME_UNIT_SCALE;
    static /*0xc*/ UnityEngine.Vector3 RUNGAME_UNIT_LOCAL_POSITION;
    static /*0x18*/ RunGameSettings settings;

    static /*0x11ef7d0*/ Define_RunGame();
    static /*0x11ef5b4*/ RunGameSettings get_Settings();
}

class RunGameManager : Singleton.Component.SingletonComponent<RunGameManager>
{
    /*0x24*/ int <CurrentRewardCount>k__BackingField;
    /*0x28*/ System.Collections.Generic.List<int> CurrentReward;
    /*0x30*/ System.Collections.Generic.List<int> PrevReward;
    /*0x38*/ PTShare.Define.SProperty CurrentGain;
    /*0x40*/ System.DateTime LatestDateTime;
    /*0x48*/ bool Initialized;
    /*0x49*/ bool IsStartRun;
    /*0x4a*/ bool IsLockBackButton;
    /*0x4c*/ RunGameState <CurrentState>k__BackingField;
    /*0x50*/ RunGameState <NextState>k__BackingField;
    /*0x54*/ RunGameState <PrevState>k__BackingField;
    /*0x58*/ int PrevSelectHeroTableID;
    /*0x60*/ UnityEngine.GameObject m_TilesetParent;
    /*0x68*/ RunGameUnit m_RunGameUnit;
    /*0x70*/ RunGamePopup m_RunGamePopup;
    /*0x78*/ RunGameTileSet m_StartpointTileset;
    /*0x80*/ RunGameTileSet m_DestinationTileset;
    /*0x88*/ System.Collections.Generic.List<RunGameTileSet> m_lisTrackTileset;
    /*0x90*/ System.Collections.Generic.List<ParticleBase> m_lisRewardParticle;
    /*0x98*/ UnityEngine.Vector2 m_vUnitPosition;
    /*0xa0*/ UnityEngine.Vector3 m_vUnitOriginPosition;
    /*0xac*/ UnityEngine.Vector2 m_vCurrentDirection;
    /*0xb4*/ UnityEngine.Vector2 m_vStraightDirection;
    /*0xbc*/ UnityEngine.Vector2 m_vBottomDirection;
    /*0xc4*/ UnityEngine.Vector2 m_vRightDirection;
    /*0xcc*/ UnityEngine.Vector2 m_vBottomToUnit;
    /*0xd8*/ RunGameTileSet m_UnitParentTileset;
    /*0xe0*/ RunGameTileSet m_CurrentTileset;
    /*0xe8*/ RunGameTileSet m_NextTileset;
    /*0xf0*/ RunGameTile m_CurrentTile;
    /*0xf8*/ RunGameTile m_NextTile;
    /*0x100*/ RunGameTile m_TmpCrossTile;
    /*0x108*/ RunGameTile m_RecentObstacleTile;
    /*0x110*/ RunGameTile m_StartTile;
    /*0x118*/ RunGameTile m_DestinationTile;
    /*0x120*/ TableData.TableData_Runlife m_tRunLife;
    /*0x128*/ System.Collections.Generic.Dictionary<RunRewardType, int> m_dicRewardCount;
    /*0x130*/ int m_nUnitID;
    /*0x134*/ int m_nSkinID;
    /*0x138*/ int m_nUnitGrade;
    /*0x13c*/ int m_nCurrentLife;
    /*0x140*/ int m_nCurrentTilesetIndex;
    /*0x144*/ float m_fCurrentDeltaTime;
    /*0x148*/ float m_fCurrentTargetDeltaTime;
    /*0x14c*/ float m_fRunSpeed;
    /*0x150*/ float m_fAnimationSpeed_Jump;
    /*0x154*/ float m_fAnimationSpeed_Run;
    /*0x158*/ float m_fFallReduceSpeed;
    /*0x15c*/ float m_fJumpCoolTime;
    /*0x160*/ float m_fCurPlayTime;
    /*0x164*/ float m_fInvincibleTime;
    /*0x168*/ float m_fCurInvincibleTime;
    /*0x16c*/ bool m_bIgnoreJump;
    /*0x16d*/ bool m_bPrevJump;
    /*0x16e*/ bool m_bPrevRun;
    /*0x170*/ RunDirectionType m_eSelectDirection;
    /*0x174*/ RunDirectionType m_eCurrentDirection;
    /*0x178*/ RunDirectionType m_eCurrentCrossDirection;
    /*0x180*/ ServerProtocol.ResRunGameRanking m_rankData;
    /*0x188*/ System.Collections.Generic.List<RunGameManager.RunHeroSpanTime> CurrentRunHerosCooltime;
    /*0x190*/ System.DateTime LastTime;
    /*0x198*/ System.Collections.Generic.List<PTShare.Define.SRunHero> m_isReddotData;
    /*0x1a0*/ System.Collections.IEnumerator m_CoRenewTimer;

    static /*0x11b217c*/ int <OnExitAnimation>g__GetRewardAmount|94_0(Rewards _reward);
    static /*0x11b103c*/ string <GetRewards>g__GetValue|108_0(RunRewardColumn column, ref RunGameManager.<> );
    static /*0x11b12c0*/ int <GetMaxRewards>g__GetValue|109_0(RunRewardColumn column, ref RunGameManager.<> );
    /*0x11b1cf0*/ RunGameManager();
    /*0x11abbe0*/ void AwakeInstance();
    /*0x11abbe4*/ bool InitInstance();
    /*0x11abbec*/ void ReleaseInstance();
    /*0x11abbf0*/ int get_CurrentRewardCount();
    /*0x11abbf8*/ void set_CurrentRewardCount(int value);
    /*0x11abc00*/ RunGameState get_CurrentState();
    /*0x11abc08*/ void set_CurrentState(RunGameState value);
    /*0x11abc10*/ RunGameState get_NextState();
    /*0x11abc18*/ void set_NextState(RunGameState value);
    /*0x11abc20*/ RunGameState get_PrevState();
    /*0x11abc28*/ void set_PrevState(RunGameState value);
    /*0x11abc30*/ int get_RunGameUnitTableID();
    /*0x11abc38*/ ServerProtocol.ResRunGameRanking GetRankData();
    /*0x11abc40*/ void Send_Rank(System.Action<ServerProtocol.ResRunGameRanking> callBack);
    /*0x11abdcc*/ void ReadyRun();
    /*0x11ac1e8*/ void StartRun();
    /*0x11ac32c*/ void ExitRun();
    /*0x11ac588*/ void Initialize(RunGamePopup _popup);
    /*0x11ad1b4*/ void InitUnit();
    /*0x11ad624*/ void SetUnit(PTShare.Define.SHero hero);
    /*0x11adeb0*/ void SetActiveRunGameUnit(bool _bActive);
    /*0x11adef8*/ void Update();
    /*0x11ae0f4*/ void UpdateRun();
    /*0x11aeda0*/ void CheckInivincible();
    /*0x11af7fc*/ void MoveTilesetParent(UnityEngine.Vector3 _vMove);
    /*0x11aede8*/ void SetCurrentTile();
    /*0x11af9ec*/ void SetNextTile();
    /*0x11abdd4*/ void SetState(RunGameState _eState);
    /*0x11afb4c*/ bool CheckChangeStateEnable(RunGameState _eState);
    /*0x11afbac*/ void OnExitState();
    /*0x11afdf8*/ void OnExitAnimation();
    /*0x11afd3c*/ void SetAnimation(ANIMATION_CLIP _eAnimClip, bool _bLoop);
    /*0x11acf58*/ void SetActiveSelectButtons(bool _bActive);
    /*0x11af2c0*/ void SetRewardCount(RunRewardType _eType);
    /*0x11af618*/ void SpawnRewardParticle(UnityEngine.Transform _trans, bool _bUp);
    /*0x11b02c4*/ void Restart();
    /*0x11b06bc*/ void Jump();
    /*0x11b06c4*/ void Down();
    /*0x11b06d0*/ void Up();
    /*0x11b06dc*/ long GetRewardValue(RunRewardColumn col);
    /*0x11b09a8*/ int GetRewardCount(RunRewardColumn col);
    /*0x11b0a70*/ void GetTotalRewards(System.Collections.Generic.List<Rewards> parent);
    /*0x11b0160*/ void GetTotalRewardCounts(System.Collections.Generic.List<int> parent);
    /*0x11b0c28*/ void GetResultRewards(System.Collections.Generic.List<Rewards> _rewards, System.Collections.Generic.List<Rewards> _bonusRewards);
    /*0x11b0800*/ Rewards GetRewards(RunRewardColumn col);
    /*0x11b120c*/ long GetMaxRewards(RunRewardColumn col);
    /*0x11b093c*/ long GetMaxLimitRewardValue(Rewards reward, RunRewardColumn maxRewardType, long val, long current);
    /*0x11b1490*/ int GetCurrentReward(RunRewardColumn _type);
    /*0x11b15a0*/ int GetPrevReward(RunRewardColumn _type);
    /*0x11ad160*/ void InitTimer();
    /*0x11ac300*/ void InitTimer_StartRun();
    /*0x11ac574*/ void ExitRun_Timer();
    /*0x11b1878*/ System.Collections.IEnumerator CoRenewTimers();
    /*0x11b18e4*/ bool IsReddot();
    /*0x11b193c*/ void SetTimers(System.Collections.Generic.List<PTShare.Define.SRunHero> _lisRunHero);
    /*0x11b16b0*/ void RenewTimers();
    /*0x11b1848*/ void RenewTimerUTC();
    /*0x11ab8b8*/ System.TimeSpan GetRemainTimeSpan();
    /*0x11b1e3c*/ void <OnExitAnimation>b__94_1(ServerProtocol.ResRunGameReward res);
    /*0x11b1fdc*/ void <OnExitAnimation>b__94_2(ServerProtocol.ResRunGameReward res);

    class RunHeroSpanTime
    {
        /*0x10*/ int tableID;
        /*0x18*/ double remainCooltime;

        /*0xf9bcd4*/ RunHeroSpanTime();
    }

    class <>c__DisplayClass77_0
    {
        /*0x10*/ RunGameManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResRunGameRanking> callBack;

        /*0xf9bb0c*/ <>c__DisplayClass77_0();
        /*0xf9bb14*/ void <Send_Rank>b__0(ServerProtocol.ResRunGameRanking response);
    }

    struct <>c__DisplayClass108_0
    {
        /*0x10*/ TableData.TableData_Runreward table;
        /*0x18*/ RunRewardColumn col;
    }

    struct <>c__DisplayClass109_0
    {
        /*0x10*/ TableData.TableData_Runreward table;
        /*0x18*/ RunRewardColumn col;
    }

    class <CoRenewTimers>d__121 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RunGameManager <>4__this;

        /*0xf9bb9c*/ <CoRenewTimers>d__121(int <>1__state);
        /*0xf9bbc8*/ void System.IDisposable.Dispose();
        /*0xf9bbcc*/ bool MoveNext();
        /*0xf9bc84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9bc8c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9bccc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RunGamePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_goRestartButton;
    /*0x48*/ UnityEngine.GameObject m_goStartButton;
    /*0x50*/ UnityEngine.GameObject m_goJumpButton;
    /*0x58*/ UnityEngine.GameObject m_goDownButton;
    /*0x60*/ UnityEngine.GameObject m_goUpButton;
    /*0x68*/ UnityEngine.GameObject m_goHelpButton;
    /*0x70*/ UnityEngine.GameObject m_goRewardButton;
    /*0x78*/ UnityEngine.RectTransform m_BackgroundParent;
    /*0x80*/ UnityEngine.UI.Image m_BackgroundImage;
    /*0x88*/ UnityEngine.GameObject m_goLifeParent;
    /*0x90*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisLife;
    /*0x98*/ CurrencyTopWindow m_RewardWindow;
    /*0xa0*/ HeroInventoryPage_RunGame m_InvenPage;
    /*0xa8*/ Spine.Unity.SkeletonGraphic m_ReadySpine;
    /*0xb0*/ Spine.Unity.SkeletonGraphic m_SliderCharacter;
    /*0xb8*/ Spine.Unity.SkeletonGraphic m_IllustCharacter;
    /*0xc0*/ UnityEngine.GameObject m_goUnitSpec;
    /*0xc8*/ Spine.Unity.SkeletonGraphic m_SpecPreviewUnit;
    /*0xd0*/ LocalizeString m_SpecUnitName;
    /*0xd8*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisLifeSpec;
    /*0xe0*/ UnityEngine.UI.Slider m_SpecSlider_Speed;
    /*0xe8*/ UnityEngine.UI.Slider m_SpecSlider_Jump;
    /*0xf0*/ UnityEngine.UI.Slider m_SpecSlider_Invincible;
    /*0xf8*/ UnityEngine.GameObject m_ScoreHighParent;
    /*0x100*/ UnityEngine.GameObject m_ScoreCurrentParent;
    /*0x108*/ LocalizeString m_ScoreHighScoreText;
    /*0x110*/ LocalizeString m_ScoreCurrentScoreText;
    /*0x118*/ UnityEngine.UI.Slider m_ProgressSlider;
    /*0x120*/ UnityEngine.UI.Text m_PlayTimer;
    /*0x128*/ UnityEngine.UI.Image m_CrossSignal;
    /*0x130*/ LocalizeString m_RenewTimerText;
    /*0x138*/ UnityEngine.GameObject m_goRenewTimerParent;
    /*0x140*/ System.Collections.Generic.List<Rewards> liRewards;
    /*0x148*/ System.Collections.Generic.List<TopCurrencyInfo> liCurrencyInfo;
    /*0x150*/ DG.Tweening.Sequence m_CrossSignalSequence;
    /*0x158*/ float m_fBackgroundOriginPosX;
    /*0x15c*/ float m_fBackgroundTexturelenght;
    /*0x160*/ bool bIsPlayingAnimation;
    /*0x168*/ DG.Tweening.Sequence m_SeqPreviewUnit;
    /*0x170*/ UnityEngine.Vector3 m_vOriginPosPreviewUnit;

    /*0x11b3074*/ RunGamePopup();
    /*0x11b21a8*/ HeroInventoryPage_RunGame get_GetInventoryPage();
    /*0x11b21b0*/ void OnCreate();
    /*0x11b21b4*/ void OnDelete();
    /*0x11b21b8*/ void OnEnter();
    /*0x11b21bc*/ void OnFinish();
    /*0x11b21c0*/ void OnLeave();
    /*0x11b21c4*/ void OnStart();
    /*0x11b21c8*/ void OnExit();
    /*0x11b0370*/ void Initialize();
    /*0x11b24d8*/ void StartRun();
    /*0x11b28d8*/ void OnSelectCallback();
    /*0x11b2984*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x11b29c8*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x11ad76c*/ void SetSelectSpineGraphic(PTShare.Define.SHero _sHero);
    /*0x11b2b48*/ void SetSpecSliders(int _nTableID);
    /*0x11b2cb0*/ void Update();
    /*0x11b2e2c*/ void Restart();
    /*0x11b2d28*/ void Jump();
    /*0x11b2dd4*/ void Down();
    /*0x11b2d7c*/ void Up();
    /*0x11b2ea8*/ void Help();
    /*0x11b2ff8*/ void ShowReward();
    /*0x11b1bc8*/ void SetTimerUTC(System.TimeSpan _remainTimeSpan);
    /*0x11ad8fc*/ void SetActiveUnitSpecs(bool _bActive);
    /*0x11ad914*/ void SetPreviewUnit(int _nSkinID);
    /*0x11ac314*/ void SetActiveLifeParent(bool _bActive);
    /*0x11b0244*/ void SetActiveSelectButtons(bool _bActive);
    /*0x11ad51c*/ void SetLife(int _nLife);
    /*0x11aebf8*/ void SetTimer(int _nTime);
    /*0x11aed7c*/ void SetProgrssSlider(float _fProgress);
    /*0x11af8ec*/ void TranslateBackground(UnityEngine.Vector2 _move);
    /*0x11b22f0*/ void SetBackgroundPositionToOrigin();
    /*0x11b2330*/ void SetActiveCrossSignalTween(bool _bActive);
    /*0x11b2968*/ PTShare.Define.SHero GetSelectHero();
    /*0x11acf6c*/ void UpdateReward();
    /*0x11b3140*/ void <StartRun>b__48_0(ServerProtocol.ResRunGameRanking ranking);
    /*0x11b322c*/ void <SetSelectSpineGraphic>g__HandleCompleteIllustAnimation|52_0(Spine.TrackEntry entry);

    class <>c__DisplayClass65_0
    {
        /*0x10*/ RunGamePopup <>4__this;
        /*0x18*/ bool isFall;

        /*0xf9bcdc*/ <>c__DisplayClass65_0();
        /*0xf9bce4*/ void <SetPreviewUnit>b__0();
        /*0xf9be30*/ void <SetPreviewUnit>g__HandleCompleteTweenPreviewUnit|1();
        /*0xf9bf88*/ void <SetPreviewUnit>g__HandleCompleteAnimationPreviewUnit|2(Spine.TrackEntry _trackEntry);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ int count;

        /*0xf9c08c*/ <>c__DisplayClass75_0();
        /*0xf9c094*/ TopCurrencyInfo <UpdateReward>b__0(Rewards x);
    }
}

class RunGameTile : TileBase
{
    /*0x78*/ RunTileType runTileType;
    /*0x7c*/ RunObstacleType obstacleType;
    /*0x80*/ RunRewardType rewardType;
    /*0x84*/ RunTileLineType <LineType>k__BackingField;
    /*0x88*/ UnityEngine.GameObject m_RewardObject;
    /*0x90*/ bool <IsDestinationTile>k__BackingField;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_RewardSpine;
    /*0xa0*/ UnityEngine.Vector2 m_vCenterPosition;
    /*0xa8*/ UnityEngine.Vector2 m_vBottomPosition;
    /*0xb0*/ UnityEngine.Vector2 m_vLeftUpperPosition;
    /*0xb8*/ UnityEngine.Vector2 m_vLeftLowerPosition;
    /*0xc0*/ UnityEngine.Vector2 m_vRightUpperPosition;
    /*0xc8*/ UnityEngine.Vector2 m_vRightLowerPosition;
    /*0xd0*/ UnityEngine.Vector2 m_vOriginPosition;

    /*0x12940d4*/ RunGameTile();
    /*0x1293928*/ RunTileLineType get_LineType();
    /*0x1293930*/ void set_LineType(RunTileLineType value);
    /*0x1293938*/ UnityEngine.Transform get_GetRewardTrans();
    /*0x129394c*/ UnityEngine.Vector2 get_GetGapPosition();
    /*0x12939d0*/ bool get_IsDestinationTile();
    /*0x12939d8*/ void set_IsDestinationTile(bool value);
    /*0x12939a0*/ UnityEngine.Vector2 get_m_vPositionGapFromOrigin();
    /*0x12939e4*/ void Initialize(UnityEngine.Vector2 _vRightUpperVector);
    /*0x1293c98*/ void SetStartEndPosition(UnityEngine.Vector2 _vRightUpperVector);
    /*0x1293d4c*/ UnityEngine.Vector2 GetPositionWithType(RunDirectionType _ePositionType);
    /*0x1293dec*/ bool IsUnitInTile(UnityEngine.Vector2 _vUnitPosition);
    /*0x1293eb8*/ void GetReward();
    /*0x1294084*/ void HandleCompeleteAnimation(Spine.TrackEntry _trackEntry);
    /*0x12940a4*/ bool isRewardTile(bool _bUp);
}

class RunGameTileSet : TileSetBase
{
    /*0x48*/ RunPatternType runPatternType;
    /*0x50*/ RunGameTile <StartpointTile>k__BackingField;
    /*0x58*/ RunGameTile <DestinationTile>k__BackingField;
    /*0x60*/ RunGameTile <CrossStartTile>k__BackingField;
    /*0x68*/ RunGameTile <CrossEndTopTile>k__BackingField;
    /*0x70*/ RunGameTile <CrossEndBottomTile>k__BackingField;
    /*0x78*/ System.Collections.Generic.List<RunGameTile> <TileList>k__BackingField;
    /*0x80*/ System.Collections.Generic.List<RunGameTile> <TrackTileList>k__BackingField;
    /*0x88*/ System.Collections.Generic.List<RunGameTile> <SeperatorTileList>k__BackingField;
    /*0x90*/ UnityEngine.Vector2 <RightLowerTileGap>k__BackingField;
    /*0x98*/ UnityEngine.Vector2 <LeftUpperTileGap>k__BackingField;
    /*0xa0*/ UnityEngine.Transform <TopLineTrans>k__BackingField;
    /*0xa8*/ UnityEngine.Transform <MiddleLineTrans>k__BackingField;
    /*0xb0*/ UnityEngine.Transform <BottomLineTrans>k__BackingField;
    /*0xb8*/ UnityEngine.Transform m_Transform;

    /*0x1294d8c*/ RunGameTileSet();
    /*0x12940dc*/ RunGameTile get_StartpointTile();
    /*0x12940e4*/ void set_StartpointTile(RunGameTile value);
    /*0x12940ec*/ RunGameTile get_DestinationTile();
    /*0x12940f4*/ void set_DestinationTile(RunGameTile value);
    /*0x12940fc*/ RunGameTile get_CrossStartTile();
    /*0x1294104*/ void set_CrossStartTile(RunGameTile value);
    /*0x129410c*/ RunGameTile get_CrossEndTopTile();
    /*0x1294114*/ void set_CrossEndTopTile(RunGameTile value);
    /*0x129411c*/ RunGameTile get_CrossEndBottomTile();
    /*0x1294124*/ void set_CrossEndBottomTile(RunGameTile value);
    /*0x129412c*/ System.Collections.Generic.List<RunGameTile> get_TileList();
    /*0x1294134*/ void set_TileList(System.Collections.Generic.List<RunGameTile> value);
    /*0x129413c*/ System.Collections.Generic.List<RunGameTile> get_TrackTileList();
    /*0x1294144*/ void set_TrackTileList(System.Collections.Generic.List<RunGameTile> value);
    /*0x129414c*/ System.Collections.Generic.List<RunGameTile> get_SeperatorTileList();
    /*0x1294154*/ void set_SeperatorTileList(System.Collections.Generic.List<RunGameTile> value);
    /*0x129415c*/ UnityEngine.Vector2 get_RightLowerTileGap();
    /*0x1294164*/ void set_RightLowerTileGap(UnityEngine.Vector2 value);
    /*0x129416c*/ UnityEngine.Vector2 get_LeftUpperTileGap();
    /*0x1294174*/ void set_LeftUpperTileGap(UnityEngine.Vector2 value);
    /*0x129417c*/ UnityEngine.Transform get_TopLineTrans();
    /*0x1294184*/ void set_TopLineTrans(UnityEngine.Transform value);
    /*0x129418c*/ UnityEngine.Transform get_MiddleLineTrans();
    /*0x1294194*/ void set_MiddleLineTrans(UnityEngine.Transform value);
    /*0x129419c*/ UnityEngine.Transform get_BottomLineTrans();
    /*0x12941a4*/ void set_BottomLineTrans(UnityEngine.Transform value);
    /*0x12941ac*/ void Initialize();
    /*0x1294364*/ void InitializeTiles();
    /*0x1294c9c*/ void SetTilesPositionWithStartpoint(UnityEngine.Vector2 _vPosition);
}

class RunGameUnit : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Anim;
    /*0x20*/ UnityEngine.GameObject m_goRaceParticle;
    /*0x28*/ ParticleBase m_SelectParticle;
    /*0x30*/ TableData.TableData_Unitbase m_tUnitBase;
    /*0x38*/ DG.Tweening.Sequence m_Sequence;
    /*0x40*/ System.Action m_OnCompleteAnimation;
    /*0x48*/ UnityEngine.Vector3 m_vOriginScale;
    /*0x54*/ UnityEngine.Vector3 m_vRightDirection;
    /*0x60*/ UnityEngine.Vector3 m_vLeftDirection;

    /*0x12952c4*/ RunGameUnit();
    /*0x1294e3c*/ void Initialize(int _nSkinID);
    /*0x1295038*/ void UpdateAnimation(float _fDeltaTime);
    /*0x129505c*/ void SetAlphaTween();
    /*0x129512c*/ void KillAlphaTween();
    /*0x1295164*/ void SetAlpha(float _fAlpha);
    /*0x12951c0*/ void SetDirection(bool _bLeft);
    /*0x1295228*/ void SetAnimation(ANIMATION_CLIP _eAnimClip, bool _bLoop, System.Action _onComplete);
    /*0x1295290*/ void SetActiveRaceParticle(bool _bActive);
    /*0x12952b0*/ void HandleCheckAnimationComplete(Spine.TrackEntry _entry);
}

class ObjectPool : UnityEngine.MonoBehaviour
{
    static string UnusedParentName = "UnusedObjects";
    static string UsedParentName = "UsedObjects";
    static string DisableParentName = "DisableObjects";
    /*0x18*/ AssetBundleType m_AssetBundleType;
    /*0x20*/ System.Collections.Generic.List<ObjectPool.ObjectPoolPrefab> <objectList>k__BackingField;
    /*0x28*/ System.Collections.Generic.Dictionary<string, ObjectPool.ObjectPoolPrefab> <objectDic>k__BackingField;
    /*0x30*/ UnityEngine.GameObject m_UnusedParent;
    /*0x38*/ UnityEngine.GameObject m_UsedParent;
    /*0x40*/ UnityEngine.GameObject m_DisableParent;
    /*0x48*/ UnityEngine.Transform m_TransUnusedParent;
    /*0x50*/ UnityEngine.Transform m_TransUsedParent;
    /*0x58*/ UnityEngine.Transform m_TransDisableParent;
    /*0x60*/ UnityEngine.Transform m_Transform;
    /*0x68*/ ObjectPool.ObjectPoolPrefab m_PoolPrefab;

    /*0x2b54278*/ ObjectPool();
    /*0x2b53d50*/ System.Collections.Generic.List<ObjectPool.ObjectPoolPrefab> get_objectList();
    /*0x2b53d58*/ void set_objectList(System.Collections.Generic.List<ObjectPool.ObjectPoolPrefab> value);
    /*0x2b53d60*/ System.Collections.Generic.Dictionary<string, ObjectPool.ObjectPoolPrefab> get_objectDic();
    /*0x2b53d68*/ void set_objectDic(System.Collections.Generic.Dictionary<string, ObjectPool.ObjectPoolPrefab> value);
    /*0x2b53d70*/ AssetBundleType GetAssetBundleType();
    /*0x2b53d78*/ void Init(AssetBundleType _eAssetBundleType);
    /*0x2b53fd4*/ UnityEngine.GameObject GetItem(string _sName);
    /*0x2b54120*/ bool ReturnItem(UnityEngine.GameObject obj, bool _bDisable);
    /*0x2b541d0*/ bool ReturnItemDisableToUnused(UnityEngine.GameObject obj);

    class ObjectPoolPrefab
    {
        /*0x10*/ UnityEngine.GameObject <Prefab>k__BackingField;
        /*0x18*/ System.Collections.Generic.Stack<UnityEngine.GameObject> <UnusedObjectStack>k__BackingField;
        /*0x20*/ System.Collections.Generic.List<UnityEngine.GameObject> <UsedObjectList>k__BackingField;
        /*0x28*/ System.Collections.Generic.List<UnityEngine.GameObject> <DisableObjectList>k__BackingField;
        /*0x30*/ AssetBundleType AssetBundleType;
        /*0x38*/ string m_sPrefabName;
        /*0x40*/ UnityEngine.Transform m_TransUnusedParent;
        /*0x48*/ UnityEngine.Transform m_TransUsedParent;
        /*0x50*/ UnityEngine.Transform m_TransDisableParent;

        /*0x108ad2c*/ ObjectPoolPrefab();
        /*0x108a0b8*/ UnityEngine.GameObject get_Prefab();
        /*0x108a0c0*/ void set_Prefab(UnityEngine.GameObject value);
        /*0x108a0c8*/ System.Collections.Generic.Stack<UnityEngine.GameObject> get_UnusedObjectStack();
        /*0x108a0d0*/ void set_UnusedObjectStack(System.Collections.Generic.Stack<UnityEngine.GameObject> value);
        /*0x108a0d8*/ System.Collections.Generic.List<UnityEngine.GameObject> get_UsedObjectList();
        /*0x108a0e0*/ void set_UsedObjectList(System.Collections.Generic.List<UnityEngine.GameObject> value);
        /*0x108a0e8*/ System.Collections.Generic.List<UnityEngine.GameObject> get_DisableObjectList();
        /*0x108a0f0*/ void set_DisableObjectList(System.Collections.Generic.List<UnityEngine.GameObject> value);
        /*0x108a0f8*/ bool Init(UnityEngine.Transform _TransUnsed, UnityEngine.Transform _TransUsed, UnityEngine.Transform _TransDisable, AssetBundleType _eAssetBundleType);
        /*0x108a450*/ void SetPrefabName(string _sPrefabName);
        /*0x108a368*/ void CreateObject();
        /*0x108a458*/ UnityEngine.GameObject GetItem();
        /*0x108a564*/ void ReturnItem(UnityEngine.GameObject obj, bool _bDisable);
        /*0x108a684*/ void ReturnItemDisableToUnused(UnityEngine.GameObject obj);
        /*0x108a7c4*/ void ReturnAllItems();
        /*0x108a958*/ void ReturnAllItemsDisableToUnused();
        /*0x108aafc*/ void DeleteAllItems();
    }
}

class ObjectPoolManager : Singleton.Component.SingletonComponent<ObjectPoolManager>
{
    /*0x21*/ bool <IsInitialized>k__BackingField;
    /*0x28*/ System.Collections.Generic.List<AssetBundleType> assetBundleTypeList;
    /*0x30*/ System.Collections.Generic.List<ObjectPool> m_lisObjectPool;
    /*0x38*/ System.Collections.Generic.Dictionary<AssetBundleType, ObjectPool> m_dicObjectPool;
    /*0x40*/ ObjectPool m_Pool;
    /*0x48*/ ObjectPool.ObjectPoolPrefab m_PoolPrefab;

    /*0x2b555cc*/ ObjectPoolManager();
    /*0x2b54330*/ void AwakeInstance();
    /*0x2b54334*/ bool InitInstance();
    /*0x2b5433c*/ void ReleaseInstance();
    /*0x2b54340*/ void Destroy();
    /*0x2b5434c*/ bool get_IsInitialized();
    /*0x2b54354*/ void set_IsInitialized(bool value);
    /*0x2b54360*/ void Init();
    /*0x2b54874*/ UnityEngine.GameObject GetItem(string _sObjectName, AssetBundleType _eAssetBundleType);
    /*0x2b54a88*/ UnityEngine.GameObject GetItemNoSearchPool(string _sObjectName, AssetBundleType _eAssetBundleType);
    /*0x2b54960*/ UnityEngine.GameObject GetItem(string _sObjectName);
    T GetItem<T>(string _sObjectName);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent);
    T GetItem<T>(string _sObjectName, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    /*0x2b54b64*/ void ReturnItem(UnityEngine.GameObject _go, AssetBundleType _eAssetBundleType, bool _bDisable);
    /*0x2b54c0c*/ void ReturnItem(UnityEngine.GameObject _go, bool _bDisable);
    /*0x2b54d30*/ void ReturnItemDisableToUnused(UnityEngine.GameObject _go, AssetBundleType _eAssetBundleType);
    /*0x2b54dc4*/ void ReturnItemDisableToUnused(UnityEngine.GameObject _go);
    /*0x2b54ed4*/ void DeleteAllPoolItems(AssetBundleType _eAssetBundleType);
    /*0x2b54ff8*/ void DeleteAllItems();
    /*0x2b54668*/ void ReturnAllUsedItems();
    /*0x2b55100*/ void ReturnAllPoolItems(AssetBundleType _eAssetBundleType);
    /*0x2b55224*/ void ReturnPoolItemsWithSameName(AssetBundleType _eAssetBundleType, string _sObjectName);
    /*0x2b55338*/ void ReturnSameItems(string _sObjectName);
    /*0x2b55478*/ void ReturnSameItems(UnityEngine.GameObject _go);
    /*0x2b54770*/ void ReturnAllItemsDisableToUnused();
    /*0x2b554b0*/ void ReturnAllItemsDisableToUnused(AssetBundleType assetBundleType);
}

class ItemAmountBuyBase : GuiBase
{
    /*0x40*/ LocalizeString m_ItemAmount;
    /*0x48*/ ItemInfoSlot m_ItemSlot;
    /*0x50*/ AtlasImage m_CurrencyIcon;
    /*0x58*/ AtlasImage m_CurrencyButtonIcon;
    /*0x60*/ LocalizeString m_ItemPrice;
    /*0x68*/ LocalizeString m_UseCurrency;
    /*0x70*/ TableData.TableData_Item itemInfo;
    /*0x78*/ int nItemAmount;
    /*0x7c*/ PTShare.Define.Currency eCurrency;
    /*0x80*/ int nItemPrice;

    /*0x1574bc0*/ ItemAmountBuyBase();
    /*0x1574684*/ void OnCreate();
    /*0x1574688*/ void OnDelete();
    /*0x157468c*/ void OnEnter();
    /*0x15746f8*/ void OnFinish();
    /*0x15746fc*/ void OnLeave();
    /*0x1574700*/ void OnStart();
    /*0x1574704*/ void OnExit();
    /*0x1574780*/ void InitializePopup(int _nItemIndex, PTShare.Define.Currency _eCurrency, int _nPrice);
    /*0x15747c8*/ void InitializePopup(TableData.TableData_Item _item, PTShare.Define.Currency _eCurrency, int _nPrice);
    /*0x1574870*/ void SetItemSlot();
    /*0x1574888*/ void SetCurrencyIcon();
    /*0x1574978*/ void RefreshPrice();
    /*0x1574a2c*/ void InitAmount(int _amount);
    /*0x1574bb0*/ void SetAmount(int _amount);
    /*0x1574af4*/ void RefreshAmount();
    void OnClickBuyItem();
}

class RewardPopupBase : GuiBase
{
    /*0x40*/ ItemRewardGroup m_ItemRewardGroup;
    /*0x48*/ HeroRewardController m_HeroRewradController;
    /*0x50*/ TableRewardController m_TableRewardController;
    /*0x58*/ System.Action OnExitCallback;

    /*0x11a9e50*/ RewardPopupBase();
    /*0x11a9e58*/ void OnExit();
    /*0x11a9e94*/ void InitializePopup(PTShare.Define.SProperty _reward, bool _bScrollLimit, System.Action _exitCallback, ItemRewardBoxType[] _ignoreType);
    /*0x11a9fbc*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SHero> _rewrads, bool _bScrollLimit, System.Action _exitCallback);
    /*0x11aa034*/ void InitializePopup(System.Collections.Generic.List<Rewards> _rewards, bool _bCombine, bool _bScrollLimit, System.Action _exitCallback);
    /*0x11a9f1c*/ void SetActiveScrollView(bool _isReward, bool _isHero, bool _isTable);
}

class AdsPopup : GuiBase
{
    /*0x40*/ LocalizeString m_topText;
    /*0x48*/ AtlasImage m_topIcon;
    /*0x50*/ UnityEngine.GameObject m_finalRewardBtn;
    /*0x58*/ UnityEngine.GameObject m_finalRewardDisable;
    /*0x60*/ System.Collections.Generic.List<AdsRewardSlot> m_liRewardSlot;

    /*0xed970c*/ AdsPopup();
    /*0xed8e54*/ void OnCreate();
    /*0xed8e58*/ void OnDelete();
    /*0xed8e5c*/ void OnEnter();
    /*0xed8f98*/ void OnFinish();
    /*0xed8f9c*/ void OnLeave();
    /*0xed90d8*/ void OnStart();
    /*0xed90dc*/ void Release();
    /*0xed90e0*/ void Initialize();
    /*0xed95f4*/ void OnClick();

    class <>c
    {
        static /*0x0*/ AdsPopup.<> <>9;
        static /*0x8*/ System.Action<AdsRewardSlot> <>9__12_0;

        static /*0xd99bec*/ <>c();
        /*0xd99c4c*/ <>c();
        /*0xd99c54*/ void <Initialize>b__12_0(AdsRewardSlot x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ TableManager.Ads.AdsRewardType rewardType;

        /*0xd99c70*/ <>c__DisplayClass13_0();
        /*0xd99c78*/ void <OnClick>b__0();
    }
}

class ArenaListPopup : GuiBase
{
    /*0x40*/ ArenaCategoryEntity m_GeneralArena;
    /*0x48*/ ArenaCategoryEntity m_WorldArena;
    /*0x50*/ System.Collections.IEnumerator ieRefreshTimer;
    /*0x58*/ System.Collections.IEnumerator ieWorldArenaRefreshTimer;

    /*0xee4afc*/ ArenaListPopup();
    /*0xee416c*/ void OnCreate();
    /*0xee4170*/ void OnDelete();
    /*0xee4174*/ void OnEnter();
    /*0xee442c*/ void OnFinish();
    /*0xee4430*/ void OnLeave();
    /*0xee4528*/ void OnStart();
    /*0xee452c*/ void OnExit();
    /*0xee0c9c*/ void InitializePopup();
    /*0xee4778*/ void Initialize();
    /*0xee49cc*/ void StartTimer();
    /*0xee44dc*/ void StopCoroutines();
    /*0xee4a20*/ System.Collections.IEnumerator CoRefreshArena();
    /*0xee4a8c*/ System.Collections.IEnumerator CoRefreshWorldArena();
    /*0xee4af8*/ void HandlerUpdateEvent();
    /*0xee4b04*/ void <OnExit>b__10_0();

    class <>c
    {
        static /*0x0*/ ArenaListPopup.<> <>9;
        static /*0x8*/ System.Action <>9__15_0;
        static /*0x10*/ System.Action <>9__16_0;

        static /*0xd9a590*/ <>c();
        /*0xd9a5f0*/ <>c();
        /*0xd9a5f8*/ void <CoRefreshArena>b__15_0();
        /*0xd9a650*/ void <CoRefreshWorldArena>b__16_0();
    }

    class <CoRefreshArena>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ArenaListPopup <>4__this;

        /*0xd9a6a8*/ <CoRefreshArena>d__15(int <>1__state);
        /*0xd9a6d4*/ void System.IDisposable.Dispose();
        /*0xd9a6d8*/ bool MoveNext();
        /*0xd9a98c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9a994*/ void System.Collections.IEnumerator.Reset();
        /*0xd9a9d4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshWorldArena>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ArenaListPopup <>4__this;

        /*0xd9a9dc*/ <CoRefreshWorldArena>d__16(int <>1__state);
        /*0xd9aa08*/ void System.IDisposable.Dispose();
        /*0xd9aa0c*/ bool MoveNext();
        /*0xd9ac5c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9ac64*/ void System.Collections.IEnumerator.Reset();
        /*0xd9aca4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ArenaMatchPopup : GuiBase
{
    /*0x40*/ ScrollContent_GeneralArenaMatchEntity m_ScrollContent;
    /*0x48*/ AtlasImage m_TicketIcon;
    /*0x50*/ LocalizeString m_ItemAmount;
    /*0x58*/ UnityEngine.GameObject m_NoChallanger;
    /*0x60*/ LocalizeString m_Title;
    /*0x68*/ ArenaLimitNotice m_arenaLimitNotice;
    /*0x70*/ PTShare.Define.ArenaSubType eArenaCategoryType;

    /*0xee9250*/ ArenaMatchPopup();
    /*0xee84e0*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> get_liArenaTargets();
    /*0xee855c*/ TableData.TableData_Item get_TicketItem();
    /*0xee8648*/ void OnCreate();
    /*0xee864c*/ void OnDelete();
    /*0xee8650*/ void OnEnter();
    /*0xee8830*/ void OnFinish();
    /*0xee8834*/ void OnLeave();
    /*0xee8994*/ void OnStart();
    /*0xee8998*/ void OnExit();
    /*0xee8a14*/ void InitializePopup(PTShare.Define.ArenaSubType type);
    /*0xee8d40*/ void Initialize();
    /*0xee8dc0*/ void InitializeScroll();
    /*0xee8ef0*/ void HandlerScrollContent(int _index, GeneralArenaMatchEntity _obj);
    /*0xee8b78*/ void SetTitle();
    /*0xee8e20*/ void SetItemAmount();
    /*0xee8f84*/ void OnClick_ArenaReset();
    /*0xee9000*/ void OnClick_BuyItem();
    /*0xee8574*/ int GetArenaNeedItemID();
    /*0xee90c8*/ void HandlerBuyArenaTicket(int _nAmount);
    /*0xee924c*/ void CallbackBuyArenaTicket();
}

class ArenaRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GeneralArenaRecordEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_Title;
    /*0x50*/ LocalizeString m_EmptyText;
    /*0x58*/ ArenaLimitNotice m_arenaLimitNotice;
    /*0x60*/ PTShare.Define.ArenaSubType eArenaCategoryType;

    /*0xee9cd8*/ ArenaRecordPopup();
    /*0xee94e8*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> get_liArenaHistory();
    /*0xee9564*/ void OnCreate();
    /*0xee9568*/ void OnDelete();
    /*0xee956c*/ void OnEnter();
    /*0xee9820*/ void OnFinish();
    /*0xee9824*/ void OnLeave();
    /*0xee9a18*/ void OnStart();
    /*0xee9a1c*/ void OnExit();
    /*0xee0db8*/ void InitializePopup(PTShare.Define.ArenaSubType type);
    /*0xee9a98*/ void Initialize();
    /*0xee9a9c*/ void InitializeScroll();
    /*0xee9b40*/ void HandleSrcollContent(int _index, GeneralArenaRecordEntity _obj);
    /*0xee9bd4*/ void HandlerBuyArenaTicket(int _nAmount);
}

class ArenaTrainningPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_CurrencyTopWindow;
    /*0x48*/ TrainningStatusEntity m_MainStatusIcon;
    /*0x50*/ LocalizeString m_MainStatusName;
    /*0x58*/ System.Collections.Generic.List<TrainningStatusInfomation> m_liStatusView;
    /*0x60*/ ArenaTrainningProcess m_ArenaTrainningProcess;
    /*0x68*/ UnityEngine.UI.Button m_TrainningBtn;
    /*0x70*/ StartTrainningAnimation m_Animation;
    /*0x78*/ bool playingAnimation;

    /*0xeeae5c*/ ArenaTrainningPopup();
    /*0xeea318*/ int get_TrainingLv();
    /*0xeea398*/ int get_Groupindex();
    /*0xeea420*/ int get_Indivindex();
    /*0xeea4a8*/ void OnCreate();
    /*0xeea4ac*/ void OnDelete();
    /*0xeea4b0*/ void OnEnter();
    /*0xeea4f0*/ void OnFinish();
    /*0xeea4f4*/ void OnLeave();
    /*0xeea4f8*/ void OnStart();
    /*0xeea4fc*/ void OnExit();
    /*0xeea620*/ void InitializePopup();
    /*0xeea954*/ void SetStatusView(int groupCur, int indivCur);
    /*0xeeaa44*/ void OnClick_Trainning();
    /*0xeeacec*/ void OnClick_Help();
    /*0xeead90*/ TrainningStatusInfomation GetBeforeInfomation();
    /*0xeeaa10*/ bool IsMaxTrainning();

    class <>c__DisplayClass23_0
    {
        /*0x10*/ ArenaTrainningPopup <>4__this;
        /*0x18*/ int beforeIndex;
        /*0x20*/ System.Action <>9__2;
        /*0x28*/ System.Action <>9__1;

        /*0xd9cee4*/ <>c__DisplayClass23_0();
        /*0xd9ceec*/ void <OnClick_Trainning>b__0();
        /*0xd9cfc0*/ void <OnClick_Trainning>b__1();
        /*0xd9d0c8*/ void <OnClick_Trainning>b__2();
    }
}

class ArtifactChangePopup : GuiBase
{
    /*0x40*/ ScrollContent_ArtifactChangeEntity m_UseScrollContent;
    /*0x48*/ ScrollContent_ArtifactChangeEntity m_UnusedScrollContent;
    /*0x50*/ UnityEngine.GameObject m_NoArtifact;
    /*0x58*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggle;
    /*0x60*/ PTShare.Define.SHero heroInfo;
    /*0x68*/ System.Collections.Generic.List<TableData.TableData_Artifact> liUseArtifactInfo;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Artifact> liUnusedArtifactInfo;

    /*0xeed50c*/ ArtifactChangePopup();
    /*0xeecb2c*/ void OnCreate();
    /*0xeecb30*/ void OnDelete();
    /*0xeecb34*/ void OnEnter();
    /*0xeecd14*/ void OnFinish();
    /*0xeecd18*/ void OnLeave();
    /*0xeece50*/ void OnStart();
    /*0xeece54*/ void InitializePopup(PTShare.Define.SHero hero);
    /*0xeed090*/ void InitializeToggle();
    /*0xeecff0*/ void InitializeScroll();
    /*0xeed2e0*/ void UsedScrollContent(int index, ArtifactChangeEntity ent);
    /*0xeed3b8*/ void UnusedScrollContent(int index, ArtifactChangeEntity ent);
    /*0xeed490*/ void SetActiveScroll(bool use, bool unuse);
    /*0xeed5a4*/ void <InitializePopup>b__13_0(TableData.TableData_Artifact x);
    /*0xeed66c*/ void <InitializeToggle>b__14_1(bool on);
    /*0xeed6f4*/ void <InitializeToggle>b__14_2(bool on);

    class <>c
    {
        static /*0x0*/ ArtifactChangePopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.UI.Toggle> <>9__14_0;

        static /*0xd9d210*/ <>c();
        /*0xd9d270*/ <>c();
        /*0xd9d278*/ void <InitializeToggle>b__14_0(UnityEngine.UI.Toggle x);
    }
}

class ArtifactInfomationPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnUnEquipEvent;
    /*0x40*/ ItemInfoSlot m_ItemInfoSlot;
    /*0x48*/ LocalizeString m_ItemName;
    /*0x50*/ LocalizeString m_ItemDesc;
    /*0x58*/ UnityEngine.UI.Button m_UpgradeButton;
    /*0x60*/ UnityEngine.UI.ScrollRect m_DescScroll;
    /*0x68*/ UnityEngine.RectTransform m_EffectDescParent;
    /*0x70*/ System.Collections.Generic.List<ArtifactPassiveDescEntity> m_liEffectDesc;
    /*0x78*/ UnityEngine.Transform m_StatusParent;
    /*0x80*/ UnityEngine.GameObject m_ButtonGroup;
    /*0x88*/ UnityEngine.GameObject m_ConfirmButton;
    /*0x90*/ TableData.TableData_Artifact artifactData;
    /*0x98*/ TableData.TableData_Equipment equipmentData;
    /*0xa0*/ PTShare.Define.SArtifact artifactInfo;
    /*0xa8*/ PTShare.Define.SHero heroInfo;
    /*0xb0*/ System.Collections.Generic.List<ArtifactStatusEntity> liStatusEntity;

    static /*0xeeeea0*/ ArtifactInfomationPopup();
    static /*0xeed78c*/ void add_OnUnEquipEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xeed880*/ void remove_OnUnEquipEvent(System.Action<PTShare.Define.SHero> value);
    /*0xeeee28*/ ArtifactInfomationPopup();
    /*0xeed77c*/ bool get_IsEquip();
    /*0xeed974*/ void OnCreate();
    /*0xeed978*/ void OnDelete();
    /*0xeed97c*/ void OnEnter();
    /*0xeed980*/ void OnFinish();
    /*0xeed984*/ void OnLeave();
    /*0xeed988*/ void OnStart();
    /*0xeed98c*/ void InitializePopup(PTShare.Define.SHero hero);
    /*0xeee108*/ void InitializePopup(TableData.TableData_Artifact artifact, PTShare.Define.SArtifact data);
    /*0xeeda18*/ void Release();
    /*0xeedb70*/ void SetArtifactConfig();
    /*0xeeeae8*/ void OnClick_Unequip();
    /*0xeeed1c*/ void OnClick_Upgrade();
    /*0xeeeda4*/ void OnClick_Change();
    /*0xeeea7c*/ System.Collections.IEnumerator CoDescScroll();

    class <>c
    {
        static /*0x0*/ ArtifactInfomationPopup.<> <>9;
        static /*0x8*/ System.Action<ArtifactStatusEntity> <>9__28_0;

        static /*0xd9d29c*/ <>c();
        /*0xd9d2fc*/ <>c();
        /*0xd9d304*/ void <Release>b__28_0(ArtifactStatusEntity x);
    }

    class <CoDescScroll>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ArtifactInfomationPopup <>4__this;

        /*0xd9d380*/ <CoDescScroll>d__33(int <>1__state);
        /*0xd9d3ac*/ void System.IDisposable.Dispose();
        /*0xd9d3b0*/ bool MoveNext();
        /*0xd9d45c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9d464*/ void System.Collections.IEnumerator.Reset();
        /*0xd9d4a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct BattleGraph
{
    /*0x10*/ string sCombatPower;
    /*0x18*/ string Representative_nickName;
    /*0x20*/ System.Collections.Generic.List<Battle.BattleGraphValue> lisGraphValue;

    /*0xa855bc*/ BattleGraph(string _sCombatPower, string _Representative_nickName, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValue);
}

class BattleGraphPopup : GuiBase
{
    /*0x40*/ BattleGraphWindow m_GraphWindowAlly;
    /*0x48*/ BattleGraphWindow m_GraphWindowEnemy;
    /*0x50*/ LocalizeString m_MappointNameText;
    /*0x58*/ Battle.GameModeType m_eGameMode;
    /*0x60*/ long m_lSelectedPlayerID;
    /*0x68*/ bool m_bRepaly;
    /*0x70*/ string m_sMapPointName;
    /*0x78*/ int m_nBattleID;
    /*0x80*/ PTShare.Define.SGuildBossHistory m_GuildBossHistory;
    /*0x88*/ PTShare.Define.SArenaHistory m_ArenaHistory;

    static /*0xf8cba8*/ int GetRepresentativeUnitID(System.Collections.Generic.List<Battle.BattleGraphValue> _value, int _nBattleID);
    static /*0xf8cd88*/ string GetConvertUnitName(System.Collections.Generic.List<Battle.BattleGraphValue> _value, int _nBattleID);
    /*0xf8e9b0*/ BattleGraphPopup();
    /*0xf8bf90*/ void OnCreate();
    /*0xf8bf94*/ void OnDelete();
    /*0xf8bf98*/ void OnEnter();
    /*0xf8c000*/ void OnFinish();
    /*0xf8c004*/ void OnLeave();
    /*0xf8c008*/ void OnStart();
    /*0xf8c00c*/ void OnExit();
    /*0xf8c18c*/ void InitForCurrent(bool _bWin, bool _bReplay, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValueAlly, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValueEnemy);
    /*0xf8d510*/ void InitForSelectReplay(Battle.GameModeType _eGameMode, string _sMapPointName, int _nBattleID, long _lSelectedPlayerID, BattleGraph _WinnerbattleGraph, BattleGraph _loserbattleGraph);
    /*0xf8d844*/ void InitForGuildBoss(Battle.GameModeType _eGameMode, PTShare.Define.SGuildBossHistory _guildBossHistory, int _nBattleID, BattleGraph _WinnerbattleGraph, BattleGraph _loserbattleGraph);
    /*0xf8da18*/ void InitForArenaReplay(Battle.GameModeType _eType, bool _bWin, PTShare.Define.SArenaHistory _history);
    /*0xf8e048*/ void UpdateCampaignProfileAlly(PTShare.Define.SCampaignRecord _campaignUser);
    /*0xf8e14c*/ void UpdateTowerProfileAlly(PTShare.Define.STowerRecord _towerUser);
    /*0xf8e250*/ void StartReplay();
    /*0xf8e2d8*/ void ReplayCurrentStage();
    /*0xf8e340*/ void ReplayStage();
    /*0xf8c7a8*/ void SetMappointNameView(string _sMappointName, Battle.GameModeType _eGameMode);
    /*0xf8e9b8*/ void <ReplayStage>b__25_1(ServerProtocol.ResHardCampaignReplay response);
    /*0xf8ea70*/ void <ReplayStage>b__25_2(ServerProtocol.ResCampaignReplay response);
    /*0xf8eb28*/ void <ReplayStage>b__25_3(ServerProtocol.ResTowerReplay response);
    /*0xf8ebe0*/ void <ReplayStage>b__25_4(PTShare.Define.SGuildBossReplay sGuildBossReplay);
    /*0xf8ed10*/ void <ReplayStage>b__25_5(PTShare.Define.SGuildBossReplay sGuildBossReplay);
    /*0xf8ebe4*/ void <ReplayStage>g__PlayBossReplay|25_0(PTShare.Define.SGuildBossReplay replay);
}

class BattleGraphPopup_GuildWar : GuiBase
{
    /*0x40*/ BattleGraphWindow_GuildWar m_GraphWindowAlly;
    /*0x48*/ BattleGraphWindow_GuildWar m_GraphWindowEnemy;
    /*0x50*/ UnityEngine.GameObject m_goViewAllyActiveButton;
    /*0x58*/ UnityEngine.GameObject m_goViewEnemyActiveButton;
    /*0x60*/ UnityEngine.GameObject m_goViewAllyDisactiveButton;
    /*0x68*/ UnityEngine.GameObject m_goViewEnemyDisactiveButton;
    /*0x70*/ bool m_bCurrentViewAlly;
    /*0x71*/ bool m_bWin;
    /*0x72*/ bool m_bReplay;
    /*0x73*/ bool m_bAllyIsAttacker;

    /*0xe2f4ec*/ BattleGraphPopup_GuildWar();
    /*0xe2e7b4*/ void OnCreate();
    /*0xe2e7b8*/ void OnDelete();
    /*0xe2e7bc*/ void OnEnter();
    /*0xe2e828*/ void OnFinish();
    /*0xe2e82c*/ void OnLeave();
    /*0xe2e830*/ void OnStart();
    /*0xe2e834*/ void OnExit();
    /*0xe2e920*/ void Init(bool _bWin, bool _bReplay);
    /*0xe2ec4c*/ void InitGuildEmblem(int _nEmblemID, int _nGuildLevel, string _sGuildName, bool _bAlly);
    /*0xe2ece4*/ void StartReplay();
    /*0xe2ea08*/ void ViewButton(bool _bAlly);
    /*0xe2eeec*/ void ReplayCurrentStage();
    /*0xe2f450*/ void SelectReplay();
    /*0xe2f4f4*/ void <StartReplay>b__19_0(ServerProtocol.ResGuildWarReplay res);
}

class BattleGraphPopup_WorldBoss : BattleGraphPopup
{
    /*0xe2f62c*/ BattleGraphPopup_WorldBoss();
}

class BuffInfomationPopup : GuiBase
{
    /*0x40*/ AtlasImage[] m_BuffImages_1;
    /*0x48*/ AtlasImage[] m_BuffImages_2;
    /*0x50*/ AtlasImage[] m_BuffImages_3;
    /*0x58*/ AtlasImage[] m_BuffImages_4;
    /*0x60*/ AtlasImage[] m_BuffImages_5;
    /*0x68*/ AtlasImage[] m_BuffImages_6;
    /*0x70*/ AtlasImage[] m_BuffImages_7;
    /*0x78*/ AtlasImage[] m_BuffImages_8;
    /*0x80*/ AtlasImage[] m_BuffImages_9;
    /*0x88*/ LocalizeString[] m_BuffText_1;
    /*0x90*/ LocalizeString[] m_BuffText_2;
    /*0x98*/ LocalizeString[] m_BuffText_3;
    /*0xa0*/ LocalizeString[] m_BuffText_4;
    /*0xa8*/ LocalizeString[] m_BuffText_5;
    /*0xb0*/ LocalizeString[] m_BuffText_6;
    /*0xb8*/ LocalizeString[] m_BuffText_7;
    /*0xc0*/ LocalizeString[] m_BuffText_8;
    /*0xc8*/ LocalizeString[] m_BuffText_9;
    /*0xd0*/ int m_nIndex;

    /*0x16f221c*/ BuffInfomationPopup();
    /*0x16f1d34*/ void Init(Helper_FactionBuff.FactionBuffType _eFactionBuffType);
    /*0x16f1e78*/ void SetBuffImages(AtlasImage[] _images);
    /*0x16f1fc8*/ void SetBuffImageTextEnable(AtlasImage[] _arrImage, LocalizeString[] _arrText, int _nIndex, Helper_FactionBuff.FactionBuffType _eFactionBuffType);
    /*0x16f2120*/ void OnCreate();
    /*0x16f2124*/ void OnDelete();
    /*0x16f2128*/ void OnEnter();
    /*0x16f2194*/ void OnFinish();
    /*0x16f2198*/ void OnLeave();
    /*0x16f219c*/ void OnStart();
    /*0x16f21a0*/ void OnExit();
}

class BuyConfirmPaymentPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_paymentList;
    /*0x58*/ System.Action<bool> OnConfirmCallback;
    /*0x60*/ ButtonSound m_ConfirmSound;
    /*0x64*/ ButtonSound m_CancelSound;

    /*0x1337548*/ BuyConfirmPaymentPopup();
    /*0x1336f84*/ void OnCreate();
    /*0x1336f88*/ void OnDelete();
    /*0x1336f8c*/ void OnEnter();
    /*0x1336ff8*/ void OnFinish();
    /*0x1336ffc*/ void OnLeave();
    /*0x1337000*/ void OnStart();
    /*0x13370d8*/ void OnExit();
    /*0x1337154*/ void InitalizeConfirm(string title, System.Collections.Generic.List<Rewards> payment, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x133729c*/ void BindEvent();
    /*0x1337004*/ void RemoveEvent();
    /*0x1337378*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0x1337434*/ void OnClick(bool _isConfirm);
}

class BuyConfirmPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ LocalizeString m_Description;
    /*0x50*/ AtlasImage m_Icon;
    /*0x58*/ LocalizeString m_HaveAmount;
    /*0x60*/ AtlasImage m_IconToTypeUse;
    /*0x68*/ LocalizeString m_cAmountToTypeUse;
    /*0x70*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x78*/ long m_nAmount;
    /*0x80*/ System.Action<bool> OnConfirmCallback;
    /*0x88*/ ButtonSound m_ConfirmSound;
    /*0x8c*/ ButtonSound m_CancelSound;

    /*0x1337c74*/ BuyConfirmPopup();
    /*0x13375c0*/ void OnCreate();
    /*0x13375c4*/ void OnDelete();
    /*0x13375c8*/ void OnEnter();
    /*0x1337634*/ void OnFinish();
    /*0x1337638*/ void OnLeave();
    /*0x133763c*/ void OnStart();
    /*0x1337640*/ void OnExit();
    /*0x13376bc*/ void InitalizeConfirm(PTShare.Define.Currency _type, long _amount, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x1337b78*/ void OnClick(bool _isConfirm);
    /*0x1337c70*/ void OnClickCustom(bool _isConfirm);
}

class BuyConfirmPopup_GuildPoint : BuyConfirmPopup
{
    /*0x13380b0*/ BuyConfirmPopup_GuildPoint();
    /*0x1337c7c*/ void InitializeConfirm_GuildPoint(long _amount, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x1337dd0*/ void OnClickCustom(bool _isConfirm);
}

class BuyConfirmPopup_HeroIncreaseSlot : BuyConfirmPopup
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x90*/ long m_nNeedAmount;
    /*0x98*/ long m_nUseAmount;

    static /*0x13380b8*/ void add_OnConfirmEvent(System.Action value);
    static /*0x1338174*/ void remove_OnConfirmEvent(System.Action value);
    /*0x1338938*/ BuyConfirmPopup_HeroIncreaseSlot();
    /*0x1338230*/ void InitalizeSlotPopup();
    /*0x1338614*/ void OnClickCustom(bool _isConfirm);
    /*0x133882c*/ void CallbackOnConfirm();
    /*0x13385d8*/ void SetDescText(string _str, string[] _param);
    /*0x13385ec*/ void SetAmount(string _str);
    /*0x1338600*/ void SetUseAmount(string _str);
    /*0x13383ec*/ int GetNeedAmount();
    /*0x1338930*/ bool PossableIncreaseSlot();
    /*0x13388b0*/ int GetUnitSlotAmount();
    /*0x1338558*/ long GetCash();
}

class BuyConfirmPopup_IdleReward : BuyConfirmPopup
{
    /*0x90*/ LocalizeString m_cInitializationDesc;
    /*0x98*/ LocalizeString m_cRemainDesc;
    /*0xa0*/ int flowClearTimeTick;
    /*0xa8*/ System.Collections.IEnumerator IEProcessFlow;

    /*0x1339388*/ BuyConfirmPopup_IdleReward();
    /*0x1338940*/ void OnExit();
    /*0x1338a80*/ void InitalizeConfirm(PTShare.Define.Currency _type, long _amount, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x1338c40*/ void SetRemainTime(System.TimeSpan _remainTime);
    /*0x1338c08*/ void SetLocalizebyIdleReward();
    /*0x1338c98*/ System.Collections.IEnumerator IE_ProcessFlowFime(System.TimeSpan _remainTime);
    /*0x1338a50*/ void ReleaseCourtine();
    /*0x1338d10*/ void HandleOnDailyChange();
    /*0x1338f90*/ void OnClickCustom(bool _isConfirm);

    class <IE_ProcessFlowFime>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BuyConfirmPopup_IdleReward <>4__this;
        /*0x28*/ System.TimeSpan _remainTime;

        /*0xda5584*/ <IE_ProcessFlowFime>d__8(int <>1__state);
        /*0xda55b0*/ void System.IDisposable.Dispose();
        /*0xda55b4*/ bool MoveNext();
        /*0xda57d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda57e0*/ void System.Collections.IEnumerator.Reset();
        /*0xda5820*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ BuyConfirmPopup_IdleReward <>4__this;
        /*0x18*/ bool _isConfirm;

        /*0xda54b4*/ <>c__DisplayClass11_0();
        /*0xda54bc*/ void <OnClickCustom>b__0(bool _result);
    }
}

class BuySkinConfirmPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_UseParent;
    /*0x48*/ AtlasImage m_UseMaterialIcon;
    /*0x50*/ AtlasImage m_NeedMaterialIcon;
    /*0x58*/ LocalizeString m_UseAmount;
    /*0x60*/ LocalizeString m_NeedAmount;
    /*0x68*/ LocalizeString m_Desc;
    /*0x70*/ UnityEngine.UI.Button m_MoveBtn;
    /*0x78*/ UnityEngine.UI.Button m_BuyBtn;
    /*0x80*/ TableData.TableData_Unitbase unitInfo;
    /*0x88*/ TableData.TableData_Skinbasic skinInfo;
    /*0x90*/ Rewards rewardInfo;
    /*0x158*/ System.Action<bool> onClickCallback;

    /*0x133a01c*/ BuySkinConfirmPopup();
    /*0x1339390*/ void OnCreate();
    /*0x1339394*/ void OnEnter();
    /*0x1339398*/ void OnStart();
    /*0x133939c*/ void OnFinish();
    /*0x13393a0*/ void OnLeave();
    /*0x13393a4*/ void OnDelete();
    /*0x13393a8*/ void OnExit();
    /*0x1339424*/ void InitializePopup(TableData.TableData_Unitbase unit, System.Action<bool> callback);
    /*0x1339ad8*/ void Release();
    /*0x1339b00*/ void OnClick_Move();
    /*0x1339c34*/ void OnClick_Buy();
    /*0x1339fac*/ void OnBuyCallback();
    /*0x133a024*/ void <OnClick_Move>b__21_0();
}

class ChannelSelectPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_AllToggle;
    /*0x48*/ UnityEngine.UI.Toggle m_BestToggle;
    /*0x50*/ ChannelAllChannelView m_ChannelAllView;
    /*0x58*/ ChannelBestChannelView m_ChannelBestView;
    /*0x60*/ bool m_isPlayTabSound;

    /*0xd6f1e4*/ ChannelSelectPopup();
    /*0xd6ee1c*/ void OnCreate();
    /*0xd6ee20*/ void OnDelete();
    /*0xd6ee24*/ void OnEnter();
    /*0xd6ef04*/ void OnFinish();
    /*0xd6ef08*/ void OnLeave();
    /*0xd6ef0c*/ void OnStart();
    /*0xd6ef10*/ void OnExit();
    /*0xd6efa0*/ void InitializePopup();
    /*0xd6f02c*/ void InitializeToggle();
    /*0xd6f178*/ void SetActiveView(bool bAll, bool bBest);
    /*0xd6f1ec*/ void <InitializeToggle>b__13_0(bool isOn);
    /*0xd6f2ac*/ void <InitializeToggle>b__13_1(bool isOn);
}

class ChapterStoryPopup : GuiBase
{
    static /*0x0*/ System.Action OnNextChapterEvent;
    /*0x40*/ LocalizeString m_ChapterName;
    /*0x48*/ LocalizeString m_ChapterDescription;
    /*0x50*/ UnityEngine.UI.Image m_ChapterImage;
    /*0x58*/ UnityEngine.GameObject m_UnableParent;
    /*0x60*/ UnityEngine.GameObject m_EnableParent;
    /*0x68*/ UnityEngine.GameObject m_NextChapterButton;
    /*0x70*/ UnityEngine.GameObject m_emptyRewardText;
    /*0x78*/ UnityEngine.GameObject m_hardmode;
    /*0x80*/ ScrollContent_ItemReward m_scrollContent;
    /*0x88*/ UnityEngine.GameObject m_autoAddReward;
    /*0x90*/ int m_nChapterID;
    /*0x98*/ TableData.TableData_Chapter m_ChapterInfo;
    /*0xa0*/ TableData.TableData_Hardchapter m_HardChapterInfo;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Item> m_itemRewardList;
    /*0xb0*/ System.Collections.Generic.List<int> m_equipGradeList;

    static /*0xd7175c*/ ChapterStoryPopup();
    static /*0xd704ac*/ void add_OnNextChapterEvent(System.Action value);
    static /*0xd705a0*/ void remove_OnNextChapterEvent(System.Action value);
    /*0xd716a4*/ ChapterStoryPopup();
    /*0xd7042c*/ bool get_IsHard();
    /*0xd70694*/ void OnCreate();
    /*0xd70698*/ void OnDelete();
    /*0xd706fc*/ void OnEnter();
    /*0xd70700*/ void OnFinish();
    /*0xd70704*/ void OnLeave();
    /*0xd707d8*/ void OnStart();
    /*0xd707dc*/ void OnExit();
    /*0xd6fcfc*/ void InitializePopup(int _chapterid);
    /*0xd70858*/ void SetStatusView();
    /*0xd70db0*/ void SetRewardView();
    /*0xd71264*/ void OnClickNextChapter();
    /*0xd71400*/ void CallbackProtocolNextChapter();
    /*0xd714d0*/ void HandleScrollContent(int index, ItemRewardBox obj);
    /*0xd715fc*/ ItemReward ConvertRewards(TableData.TableData_Item data);
}

class ChatChangeChannelPopup : GuiBase
{
    /*0x40*/ ScrollContent_ChatChangeChannelEntity m_ScrollContent;
    /*0x48*/ int nChannelIdx;
    /*0x4c*/ int nMaxChannelIdx;

    /*0x132a46c*/ ChatChangeChannelPopup();
    /*0x1329fb8*/ void OnCreate();
    /*0x1329fbc*/ void OnDelete();
    /*0x1329fc0*/ void OnEnter();
    /*0x1329fc4*/ void OnFinish();
    /*0x1329fc8*/ void OnLeave();
    /*0x1329fcc*/ void OnStart();
    /*0x1329fd0*/ void InitializePopup();
    /*0x132a0f8*/ void Initialize(int nChannelIndex, int nMaxChannelIndex);
    /*0x132a100*/ void InitializeScroll();
    /*0x132a1b4*/ void HandlerScrollContent(int index, ChatChangeChannelEntity ent);
    /*0x132a0cc*/ void Release();
}

class ClearPopup : GuiBase
{
    /*0x40*/ Spine.Unity.SkeletonGraphic m_title;
    /*0x48*/ string m_titleIntro;
    /*0x50*/ string m_titleIdle;
    /*0x58*/ TableRewardController m_rewardController;
    /*0x60*/ LocalizeString m_desc;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x10df754*/ ClearPopup();
    /*0x10df358*/ void OnCreate();
    /*0x10df35c*/ void OnDelete();
    /*0x10df360*/ void OnEnter();
    /*0x10df364*/ void OnExit();
    /*0x10df36c*/ void OnFinish();
    /*0x10df370*/ void OnLeave();
    /*0x10df374*/ void OnStart();
    /*0x10df378*/ void InitPopup(string desc, System.Collections.Generic.List<Rewards> rewards);
    /*0x10df3b0*/ void SetTitle();
    /*0x10df500*/ void SetDesc(string desc);
    /*0x10df640*/ void SetReward();
    /*0x10df668*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x10df748*/ void OnClickNext();
}

class ClickMessagePopup : GuiBase
{
    static /*0x0*/ bool m_bInitialized;
    /*0x40*/ UnityEngine.RectTransform m_RectParent;
    /*0x48*/ LocalizeString m_Text;

    static /*0x10dfa04*/ ClickMessagePopup();
    /*0x10df9fc*/ ClickMessagePopup();
    /*0x10df804*/ void OnCreate();
    /*0x10df808*/ void OnDelete();
    /*0x10df80c*/ void OnEnter();
    /*0x10df810*/ void OnFinish();
    /*0x10df814*/ void OnLeave();
    /*0x10df818*/ void OnStart();
    /*0x10df81c*/ void OnExit();
    /*0x10df890*/ void Initialize(string _sText, UnityEngine.Vector3 _vPosition);
    /*0x10df968*/ void Update();
}

class ClickMessagePopup_GuildWarScore : ClickMessagePopup
{
    /*0x10dfa08*/ ClickMessagePopup_GuildWarScore();
}

enum StoryType
{
    HELP = 0,
    STORY = 1,
    ROLE = 2,
}

class CommonStoryPopup : GuiBase
{
    /*0x40*/ LocalizeString m_cTitle;
    /*0x48*/ LocalizeString m_cLocalizeString;
    /*0x50*/ UnityEngine.UI.Toggle m_HelpToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_StoryToggle;
    /*0x60*/ UnityEngine.UI.Toggle m_RoleToggle;
    /*0x68*/ string m_strHelpKey;
    /*0x70*/ string m_strStoryKey;
    /*0x78*/ string m_strRoleKey;
    /*0x80*/ bool m_isPlayingSound;
    /*0x88*/ System.Collections.Generic.Dictionary<int, System.String[]> liArgs;

    /*0x10e529c*/ CommonStoryPopup();
    /*0x10e45a8*/ void Init(TableData.TableData_Contenthelp _contentHelp, string[] helpargs, string[] storyargs, string[] roleargs);
    /*0x10e48a8*/ void InitializeToggle();
    /*0x10e4a5c*/ void OnClick_Help();
    /*0x10e4cc8*/ void OnClick_Story();
    /*0x10e4f34*/ void OnClick_Role();
    /*0x10e51a0*/ void OnCreate();
    /*0x10e51a4*/ void OnEnter();
    /*0x10e5210*/ void OnStart();
    /*0x10e5214*/ void OnFinish();
    /*0x10e5218*/ void OnLeave();
    /*0x10e521c*/ void OnDelete();
    /*0x10e5220*/ void OnExit();
    /*0x10e5334*/ void <InitializeToggle>b__11_0(bool isOn);
    /*0x10e5340*/ void <InitializeToggle>b__11_1(bool isOn);
    /*0x10e534c*/ void <InitializeToggle>b__11_2(bool isOn);
}

class CommunityPopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_ParentRect;
    /*0x48*/ UnityEngine.RectTransform m_CommunityParentRect;
    /*0x50*/ System.Collections.Generic.List<CommunityButtonEntity> m_liCommunityEntity;
    /*0x58*/ float m_fHeightOffest;

    /*0x10e5c08*/ CommunityPopup();
    /*0x10e5780*/ void OnCreate();
    /*0x10e5784*/ void OnDelete();
    /*0x10e5788*/ void OnEnter();
    /*0x10e578c*/ void OnFinish();
    /*0x10e5790*/ void OnLeave();
    /*0x10e5794*/ void OnStart();
    /*0x10e5798*/ void OnExit();
    /*0x10e5814*/ void InitializePopup();

    class <>c
    {
        static /*0x0*/ CommunityPopup.<> <>9;
        static /*0x8*/ System.Action<CommunityButtonEntity> <>9__11_0;

        static /*0x106f1f0*/ <>c();
        /*0x106f250*/ <>c();
        /*0x106f258*/ void <InitializePopup>b__11_0(CommunityButtonEntity x);
    }
}

class ConditionBattleInfomationPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_descText;
    /*0x50*/ LocalizeString m_cpText;
    /*0x58*/ HeroSlotMaze[] m_heroMazes;
    /*0x60*/ ScrollContent_StageReward m_scrollContentStageReward;
    /*0x68*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x78*/ Battle.GameModeType m_gameModeType;
    /*0x80*/ System.Action m_exitCallBack;

    /*0x10e7774*/ ConditionBattleInfomationPopup();
    /*0x10e5c68*/ void OnCreate();
    /*0x10e5c6c*/ void OnDelete();
    /*0x10e5c70*/ void OnEnter();
    /*0x10e5d4c*/ void OnFinish();
    /*0x10e5d50*/ void OnLeave();
    /*0x10e5d54*/ void OnStart();
    /*0x10e5d58*/ void OnExit();
    /*0x10e5f5c*/ void InitPopup(string titleKey, string infoKey, System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList, Battle.GameModeType gameModeType, System.Action exitCallBack);
    /*0x10e6728*/ void InitPopup(string titleKey, string infoKey, PTShare.Define.SProperty reward, System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList, Battle.GameModeType gameModeType, System.Action exitCallBack);
    /*0x10e6050*/ void SetStageTitle(string titleKey);
    /*0x10e613c*/ void SetStageInfo(string infoKey);
    /*0x10e6228*/ void SetCP(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0x10e6338*/ void InitOtherTeams(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0x10e6ce8*/ void OnClick_BattleStart();
    /*0x10e67cc*/ void InitRewardSetting(PTShare.Define.SProperty _rewards);
    /*0x10e7508*/ void HandlerTableStageReward(int _index, ItemTableRewardSlot _instance);
    /*0x10e6f98*/ void AddRewardCurrency(PTShare.Define.Currency currencyType, long amount);
    /*0x10e704c*/ void AddRewardItem(int tableId, long amount);
    /*0x10e7128*/ void AddRewardEquip(int tableId, long amount);
    /*0x10e7220*/ void AddRewardArtifact(int tableId, long amount);
    /*0x10e7338*/ void AddRewardSkin(int tableId, long amount);
    /*0x10e7420*/ void AddRewardHero(int tableId, long amount);
    /*0x10e6e4c*/ void AddRewardResetPoint(string name, long amount);
    /*0x10e75c4*/ void AddRewardDungeonItem(int id, long amount);
    /*0x10e7698*/ void AddFrameDecorate(ProfileSkinType type, int id);
}

class ConditionHeroListPopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotMaze m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<ConditionHeroData> m_heroDataList;
    /*0x58*/ Battle.GameModeType m_gameModeType;
    /*0x60*/ System.Action m_exitCallBack;

    /*0x10e83c0*/ ConditionHeroListPopup();
    /*0x10e7c34*/ void OnCreate();
    /*0x10e7c38*/ void OnDelete();
    /*0x10e7c3c*/ void OnEnter();
    /*0x10e7d80*/ void OnFinish();
    /*0x10e7d84*/ void OnLeave();
    /*0x10e7e4c*/ void OnStart();
    /*0x10e7e50*/ void OnExit();
    /*0x10e7ee8*/ void InitPopup(System.Collections.Generic.List<ConditionHeroData> conditionHeroList, Battle.GameModeType gameModeType, System.Action exitCallBack);
    /*0x10e7f1c*/ void ShowScrollContent();
    /*0x10e7ff0*/ void HandleScrollContent(int index, HeroSlotMaze obj);
    /*0x10e8240*/ void HandleCallBack(PTShare.Define.SHero sHero);
    /*0x10e7cb4*/ void BindEvent();
    /*0x10e7d88*/ void DeleteEvent();

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ConditionHeroListPopup <>4__this;
        /*0x18*/ int index;

        /*0x106f288*/ <>c__DisplayClass14_0();
        /*0x106f290*/ void <HandleScrollContent>b__0();
    }
}

class ConfirmButtonPopup : GuiBase
{
    /*0x40*/ LocalizeString m_confirm;
    /*0x48*/ LocalizeString m_cancel;
    /*0x50*/ System.Action<bool> m_callBack;

    /*0x10e8928*/ ConfirmButtonPopup();
    /*0x10e85a8*/ void OnCreate();
    /*0x10e85ac*/ void OnEnter();
    /*0x10e85b0*/ void OnStart();
    /*0x10e85b4*/ void OnFinish();
    /*0x10e85b8*/ void OnLeave();
    /*0x10e85bc*/ void OnDelete();
    /*0x10e85c0*/ void OnExit();
    /*0x10e862c*/ void InitPopup(string confirm, string cancel, System.Action<bool> callBack);
    /*0x10e87d0*/ void OnClickConfirm();
    /*0x10e887c*/ void OnClickCancel();
}

class ConfirmPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ButtonCancel;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ LocalizeString m_ConfirmBtnText;
    /*0x58*/ LocalizeString m_CancelBtnText;
    /*0x60*/ LocalizeString m_ConfirmMessage;
    /*0x68*/ UnityEngine.UI.Image m_Dot;
    /*0x70*/ UnityEngine.Vector2[] m_MessageSizeList;
    /*0x78*/ bool m_EnableCancel;
    /*0x79*/ bool m_IsExitBackground;
    /*0x80*/ System.Action<bool> m_OnClickButton;

    /*0x10e902c*/ ConfirmPopup();
    /*0x10e8930*/ void OnCreate();
    /*0x10e8934*/ void OnEnter();
    /*0x10e8938*/ void OnStart();
    /*0x10e893c*/ void OnLeave();
    /*0x10e8940*/ void OnDelete();
    /*0x10e8944*/ void OnFinish();
    /*0x10e8948*/ void Init(System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0x10e8bd4*/ void SetText(LocalizeString _str, string _key);
    /*0x10e8dcc*/ void SetActiveCancelButton(bool _enable);
    /*0x10e8eb0*/ void SetActiveDotLine(bool _enable);
    /*0x10e8e14*/ void ChangeSizeMessageBox(bool _enable);
    /*0x10e8cc8*/ string GetLocalizeStr(string _key);
    /*0x10e8ef8*/ void OnConfirm();
    /*0x10e8fa0*/ void OnCancel();
    /*0x10e9000*/ void OnExit();
    /*0x10e9014*/ void OnExitBackground();
}

class ContentUnlockMessagePopup : GuiBase
{
    /*0x40*/ LocalizeString m_contentText;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_title;
    /*0x50*/ ParticleBase m_titleEffect;
    /*0x58*/ UnityEngine.GameObject m_parent;
    /*0x60*/ System.Collections.Generic.Queue<string> qUnlockList;
    /*0x68*/ string strKey;
    /*0x70*/ bool bIsDelay;

    /*0xf4c668*/ ContentUnlockMessagePopup();
    /*0xf4c148*/ void OnCreate();
    /*0xf4c14c*/ void OnDelete();
    /*0xf4c150*/ void OnEnter();
    /*0xf4c154*/ void OnFinish();
    /*0xf4c158*/ void OnLeave();
    /*0xf4c15c*/ void OnStart();
    /*0xf4c160*/ void OnExit();
    /*0xf4c1fc*/ void InitializePopup(string _result, string _sKey, float _fDelay);
    /*0xf4c2a8*/ void InitializePopup(System.Collections.Generic.Queue<string> _result, string _sKey, float _fDelay);
    /*0xf4c370*/ System.Collections.IEnumerator CoDelay(float _fDelay);
    /*0xf4c170*/ void Initialize();
    /*0xf4c3ec*/ void SetView(string _content);

    class <CoDelay>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fDelay;
        /*0x28*/ ContentUnlockMessagePopup <>4__this;

        /*0x1073f5c*/ <CoDelay>d__16(int <>1__state);
        /*0x1073f88*/ void System.IDisposable.Dispose();
        /*0x1073f8c*/ bool MoveNext();
        /*0x1074058*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1074060*/ void System.Collections.IEnumerator.Reset();
        /*0x10740a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CreditPopup : GuiBase
{
    /*0xf4cee0*/ CreditPopup();
    /*0xf4ce4c*/ void OnCreate();
    /*0xf4ce50*/ void OnDelete();
    /*0xf4ce54*/ void OnEnter();
    /*0xf4ce58*/ void OnFinish();
    /*0xf4ce5c*/ void OnLeave();
    /*0xf4ce60*/ void OnStart();
    /*0xf4ce64*/ void OnExit();
}

class EquipChangePopup : GuiBase
{
    /*0x40*/ ScrollContent_EquipChangeEntity m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemBox;
    /*0x50*/ LocalizeString m_EquipName;
    /*0x58*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x60*/ LocalizeString m_TotalPower;
    /*0x68*/ UnityEngine.GameObject m_UnusedEquip;
    /*0x70*/ UnityEngine.GameObject m_UsedEquip;
    /*0x78*/ LocalizeString m_emptyText;
    /*0x80*/ PTShare.Define.SHero m_HeroInfo;
    /*0x88*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x90*/ System.Collections.Generic.List<EquipSetItem> m_liEquipItem;
    /*0x98*/ System.Collections.Generic.List<HeroEquipSet> m_liEquipSet;
    /*0xa0*/ int nEquipCount;
    /*0xa4*/ int nEquipSetCount;
    /*0xa8*/ int nArrIndex;

    /*0x14bb628*/ EquipChangePopup();
    /*0x14ba9a8*/ void OnCreate();
    /*0x14ba9ac*/ void OnDelete();
    /*0x14ba9b0*/ void OnEnter();
    /*0x14bab18*/ void OnFinish();
    /*0x14bab1c*/ void OnLeave();
    /*0x14babf0*/ void OnStart();
    /*0x14babf4*/ void InitializePopup(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip, PTShare.Define.EquipParts _equipParts);
    /*0x14bb0f0*/ void InitializeScroll();
    /*0x14bb4f4*/ void HandlerScrollContent(int _index, EquipChangeEntity _obj);
    /*0x14bb1d8*/ void SetActiveEquipInfo(bool _used);
    /*0x14bb22c*/ void SetEquipInfo();
}

class EquipDedicateInfomationPopup : GuiBase
{
    /*0x14bb87c*/ EquipDedicateInfomationPopup();
    /*0x14bb864*/ void OnCreate();
    /*0x14bb868*/ void OnDelete();
    /*0x14bb86c*/ void OnEnter();
    /*0x14bb870*/ void OnFinish();
    /*0x14bb874*/ void OnLeave();
    /*0x14bb878*/ void OnStart();
}

class EquipDedicateUpgradePopup : GuiBase
{
    /*0x14bb89c*/ EquipDedicateUpgradePopup();
    /*0x14bb884*/ void OnCreate();
    /*0x14bb888*/ void OnDelete();
    /*0x14bb88c*/ void OnEnter();
    /*0x14bb890*/ void OnFinish();
    /*0x14bb894*/ void OnLeave();
    /*0x14bb898*/ void OnStart();
}

class EquipInfomationPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SEquip> OnUnEquipEvent;
    /*0x40*/ LocalizeString m_EquipName;
    /*0x48*/ LocalizeString m_EquipDesc;
    /*0x50*/ LocalizeString m_EquipGrade;
    /*0x58*/ LocalizeString m_EquipTotalPower;
    /*0x60*/ LocalizeString m_EquipTypeName;
    /*0x68*/ LocalizeString m_FactionTypeName;
    /*0x70*/ LocalizeString m_FactionBonus;
    /*0x78*/ UnityEngine.UI.Outline m_EquipGradeOutline;
    /*0x80*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x88*/ AtlasImage m_FactionIcon;
    /*0x90*/ AtlasImage m_EquipTypeIcon;
    /*0x98*/ StatusInfomationSubWindow m_EquipmentStatusWindow;
    /*0xa0*/ StatusInfomationSubWindow m_EquipmentStatusLongWindow;
    /*0xa8*/ ItemInfoSlot m_ItemBox;
    /*0xb0*/ UnityEngine.GameObject m_FactionInfo;
    /*0xb8*/ UnityEngine.GameObject m_BottomButtonGrid;
    /*0xc0*/ UnityEngine.GameObject m_PromoteButton;
    /*0xc8*/ UnityEngine.GameObject m_ResetButton;
    /*0xd0*/ UnityEngine.GameObject m_TopButtonGrid;
    /*0xd8*/ UnityEngine.GameObject m_ConfirmButton;
    /*0xe0*/ UnityEngine.UI.Button m_UpgradeButton;
    /*0xe8*/ UnityEngine.GameObject m_UpgradeRedDot;
    /*0xf0*/ TooltipData_Faction m_TooltipFaction;
    /*0xf8*/ TooltipData_IconDesc m_TooltipEquipType;
    /*0x100*/ UnityEngine.RectTransform m_StatusTransform;
    /*0x108*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x110*/ Battle.CharacterStat m_EquipStat;
    /*0x118*/ PTShare.Define.SHero m_HeroInfo;
    /*0x120*/ TableData.TableData_Equipment m_TableEquipInfo;
    /*0x128*/ PTShare.Define.SEquip m_UserEquipInfo;
    /*0x130*/ TableData.TableData_Unitgradelv m_GradeLvInfo;
    /*0x138*/ bool m_bIsSameFaction;

    static /*0x14be310*/ EquipInfomationPopup();
    static /*0x14bb8a4*/ void add_OnUnEquipEvent(System.Action<PTShare.Define.SEquip> value);
    static /*0x14bb998*/ void remove_OnUnEquipEvent(System.Action<PTShare.Define.SEquip> value);
    /*0x14be308*/ EquipInfomationPopup();
    /*0x14bba8c*/ void OnCreate();
    /*0x14bba90*/ void OnDelete();
    /*0x14bbaf4*/ void OnEnter();
    /*0x14bc294*/ void OnFinish();
    /*0x14bc298*/ void OnLeave();
    /*0x14bc414*/ void OnStart();
    /*0x14bc418*/ void OnExit();
    /*0x14bc494*/ void InitializePopup(PTShare.Define.SHero _hero, TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, bool playsfx);
    /*0x14bd004*/ void InitializePopup(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user);
    /*0x14bd0c4*/ void InitializePopup(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, int _heroFactionID);
    /*0x14bc554*/ void InitializeUI(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, bool _isInfo);
    /*0x14bd5d0*/ void OnClickUpgrade();
    /*0x14bda7c*/ void OnClickUnEquip();
    /*0x14bdb58*/ void OnClickTrade();
    /*0x14bdc40*/ void OnClickReset();
    /*0x14bddc4*/ void OnClickAdvence();
    /*0x14bd198*/ string GetEquipmentCP(int _index, int _level, bool _isbouns);
    /*0x14bd1c4*/ bool IsShowReddot(int maxGrade);
    /*0x14be260*/ void HandlerChangeEquipInfomation(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14be2b4*/ void HandlerPromoteEquipInfomation(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14bd564*/ System.Collections.IEnumerator CoUpdateScroll();

    class <CoUpdateScroll>d__55 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipInfomationPopup <>4__this;

        /*0x1098158*/ <CoUpdateScroll>d__55(int <>1__state);
        /*0x1098184*/ void System.IDisposable.Dispose();
        /*0x1098188*/ bool MoveNext();
        /*0x10981e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10981f0*/ void System.Collections.IEnumerator.Reset();
        /*0x1098230*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipPromotePopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> OnPromoteEvent;
    /*0x40*/ ItemInfoSlot m_ItemInfo;
    /*0x48*/ UnityEngine.Transform m_MaterialParent;
    /*0x50*/ LocalizeString m_EquipName;
    /*0x58*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x60*/ LocalizeString m_BeforePower;
    /*0x68*/ LocalizeString m_AfterPower;
    /*0x70*/ System.Collections.Generic.List<EquipPromoteStatusEntity> m_liStatusEntity;
    /*0x78*/ UnityEngine.GameObject m_StatusGrid;
    /*0x80*/ UnityEngine.GameObject m_MaxNotice;
    /*0x88*/ UnityEngine.UI.Button m_PromoteButton;
    /*0x90*/ ParticleBase m_MagicEffect;
    /*0x98*/ TableData.TableData_Equipment m_EquipTableInfo;
    /*0xa0*/ TableData.TableData_Equipment m_EquipAdvanceInfo;
    /*0xa8*/ PTShare.Define.SEquip m_EquipUserInfo;
    /*0xb0*/ PTShare.Define.SHero m_HeroInfo;
    /*0xb8*/ System.Collections.Generic.List<Rewards> m_liMaterialInfo;
    /*0xc0*/ string m_RequireCost;
    /*0xc8*/ bool m_bIsPlayingUpgrade;
    /*0xd0*/ System.Collections.IEnumerator m_ieAnimate;

    static /*0x14c05a0*/ EquipPromotePopup();
    static /*0x14bc1a0*/ void add_OnPromoteEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    static /*0x14bbec4*/ void remove_OnPromoteEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    /*0x14c0528*/ EquipPromotePopup();
    /*0x14bf77c*/ void OnCreate();
    /*0x14bf780*/ void OnDelete();
    /*0x14bf7e4*/ void OnEnter();
    /*0x14bf85c*/ void OnFinish();
    /*0x14bf860*/ void OnLeave();
    /*0x14bf864*/ void OnStart();
    /*0x14bf868*/ void OnExit();
    /*0x14bde8c*/ void InitializePopup(PTShare.Define.SHero _hero, TableData.TableData_Equipment _table, PTShare.Define.SEquip _equip);
    /*0x14bf91c*/ void InitializeStatusList();
    /*0x14bfcbc*/ void SetMaterials();
    /*0x14c023c*/ void OnConfirm();
    /*0x14c0390*/ void CallbackPromoteEquip(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14c0454*/ void StartAnimate(System.Action _finish);
    /*0x14c04b0*/ System.Collections.IEnumerator CoAnimate(System.Action _finish);
    /*0x14bf7f0*/ void SetActiveUpgradeEffect(bool _bIsPlay);
    /*0x14bf8f8*/ bool IsMaxAdvanceEquipment();

    class <>c
    {
        static /*0x0*/ EquipPromotePopup.<> <>9;
        static /*0x8*/ System.Comparison<EquipPromoteStatusEntity> <>9__30_0;

        static /*0x109953c*/ <>c();
        /*0x109959c*/ <>c();
        /*0x10995a4*/ int <InitializeStatusList>b__30_0(EquipPromoteStatusEntity a, EquipPromoteStatusEntity b);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ PTShare.Define.SEquip _equip;
        /*0x20*/ EquipPromotePopup <>4__this;

        /*0x1099640*/ <>c__DisplayClass33_0();
        /*0x1099648*/ void <CallbackPromoteEquip>b__0();
    }

    class <CoAnimate>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipPromotePopup <>4__this;
        /*0x28*/ System.Action _finish;
        /*0x30*/ PTShare.Define.SEquip <_before>5__2;

        /*0x109972c*/ <CoAnimate>d__35(int <>1__state);
        /*0x1099758*/ void System.IDisposable.Dispose();
        /*0x109975c*/ bool MoveNext();
        /*0x1099934*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109993c*/ void System.Collections.IEnumerator.Reset();
        /*0x109997c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipResetPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> OnChangeFactionEvent;
    /*0x40*/ ItemInfoSlot m_ItemBox;
    /*0x48*/ System.Collections.Generic.List<HeroPropertySlot> m_liPropertySlot;
    /*0x50*/ UnityEngine.GameObject m_CancelBtn;
    /*0x58*/ UnityEngine.GameObject m_ConfirmBtn;
    /*0x60*/ LocalizeString m_CancelLocalize;
    /*0x68*/ LocalizeString m_ConfirmLocalize;
    /*0x70*/ UnityEngine.GameObject m_MaterialParent;
    /*0x78*/ AtlasImage m_MaterialIcon;
    /*0x80*/ LocalizeString m_MaterialAmount;
    /*0x88*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x90*/ System.Collections.IEnumerator m_ieAnimation;
    /*0x98*/ bool m_bIsPlayingAnimation;
    /*0x99*/ bool m_bIsPlayReset;
    /*0xa0*/ Rewards m_MaterialInfo;

    static /*0x14c20c0*/ EquipResetPopup();
    static /*0x14bbfb8*/ void add_OnChangeFactionEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    static /*0x14bbcdc*/ void remove_OnChangeFactionEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    /*0x14c20b8*/ EquipResetPopup();
    /*0x14c0da4*/ void OnCreate();
    /*0x14c0da8*/ void OnDelete();
    /*0x14c0e0c*/ void OnEnter();
    /*0x14c0e10*/ void OnFinish();
    /*0x14c0e14*/ void OnLeave();
    /*0x14c0e18*/ void OnStart();
    /*0x14c0e1c*/ void OnExit();
    /*0x14bdcc4*/ void InitializePopup(PTShare.Define.SEquip _equip);
    /*0x14c183c*/ void OnClickCancel();
    /*0x14c1b80*/ void OnClickExit();
    /*0x14c1b8c*/ void OnClickConfirm();
    /*0x14c1ffc*/ void CallbackResetFactionBonus(int _factionid);
    /*0x14c1184*/ void InitializeSlot(int _factionid);
    /*0x14c1310*/ void SetActiveButton(bool _cancelbtn, bool _confirmbtn);
    /*0x14c1360*/ void SetLocalizeButton(string _cancel, string _confirm);
    /*0x14c150c*/ void SetMaterial();
    /*0x14c177c*/ void StartAnimation(int _factionid);
    /*0x14c203c*/ System.Collections.IEnumerator CoAnimation(int _factionid);
    /*0x14c1d50*/ bool IsVaildRequireItem();
    /*0x14c20c4*/ void <OnExit>b__23_0(bool confirm);
    /*0x14c20f8*/ void <OnClickCancel>b__25_0(bool confirm);

    class <CoAnimation>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipResetPopup <>4__this;
        /*0x28*/ int _factionid;

        /*0x1099984*/ <CoAnimation>d__34(int <>1__state);
        /*0x10999b0*/ void System.IDisposable.Dispose();
        /*0x10999b4*/ bool MoveNext();
        /*0x1099a4c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1099a54*/ void System.Collections.IEnumerator.Reset();
        /*0x1099a94*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipUpgradePopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> OnUpgradeEquipEvent;
    /*0x40*/ ScrollContent_UpgradeEquipSlot m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemInfo;
    /*0x50*/ StatusInfomationSubWindow m_StatusWindow;
    /*0x58*/ LocalizeString m_BeforeLevelText;
    /*0x60*/ LocalizeString m_AfterLevelText;
    /*0x68*/ LocalizeString m_ExperienceText;
    /*0x70*/ UnityEngine.UI.Slider m_ExperienceSlider;
    /*0x78*/ LocalizeString m_EquipName;
    /*0x80*/ UnityEngine.UI.Outline m_EquipNameOutColor;
    /*0x88*/ LocalizeString m_TotalPower;
    /*0x90*/ LocalizeString m_PriceText;
    /*0x98*/ LocalizeString m_emptyText;
    /*0xa0*/ AtlasImage[] m_arrBackStar;
    /*0xa8*/ AtlasImage[] m_arrFrontStar;
    /*0xb0*/ ParticleBase[] m_arrStarParticles;
    /*0xb8*/ ParticleBase m_levelUpParticle;
    /*0xc0*/ AtlasImage m_fadeOutImage;
    /*0xc8*/ TableData.TableData_Equipment m_TableInfo;
    /*0xd0*/ PTShare.Define.SEquip m_EquipInfo;
    /*0xd8*/ PTShare.Define.SHero m_HeroInfo;
    /*0xe0*/ TableData.TableData_Enhanceequip m_EnhanceInfo;
    /*0xe8*/ System.Collections.Generic.List<int> m_liExpInfo;
    /*0xf0*/ Battle.CharacterStat m_EquipStat;
    /*0xf8*/ int m_curLevel;
    /*0xfc*/ int m_curExp;
    /*0x100*/ int m_curGold;
    /*0x108*/ long m_curPower;
    /*0x110*/ System.Collections.Generic.List<PTShare.Define.SItem> m_liScrollItem;
    /*0x118*/ System.Collections.Generic.List<EquipSetItem> m_liScrolEquipment;
    /*0x120*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<bool, int>> m_dicItemAmount;
    /*0x128*/ UpgradeEquipSlot _curSlot;
    /*0x130*/ PTShare.Define.SItem _curSItem;
    /*0x138*/ EquipSetItem _curEquipItem;
    /*0x150*/ int _curIndex;
    /*0x158*/ UnityEngine.Coroutine m_sliderCoroutine;

    static /*0x14c507c*/ EquipUpgradePopup();
    static /*0x14bc0ac*/ void add_OnUpgradeEquipEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    static /*0x14bbdd0*/ void remove_OnUpgradeEquipEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    /*0x14c4f44*/ EquipUpgradePopup();
    /*0x14c235c*/ void OnCreate();
    /*0x14c2360*/ void OnDelete();
    /*0x14c245c*/ void OnEnter();
    /*0x14c2818*/ void OnFinish();
    /*0x14c281c*/ void OnLeave();
    /*0x14c2a98*/ void OnStart();
    /*0x14c2a9c*/ void OnExit();
    /*0x14bd65c*/ void InitializePopup(PTShare.Define.SHero _hero, TableData.TableData_Equipment _equip, PTShare.Define.SEquip _user, int _nStar);
    /*0x14c2f20*/ void InitializeScroll(int _selectindex);
    /*0x14c3008*/ void HandlerScrollContent(int _index, UpgradeEquipSlot _obj);
    /*0x14c2b94*/ void Release();
    /*0x14c2c28*/ void SetStatusView();
    /*0x14c3288*/ void ClearInsertExperienceInfo();
    /*0x14c39e4*/ void SetEquipmentStatus();
    /*0x14c3804*/ void SetActiveStar();
    /*0x14c32b8*/ void RefreshText(float refreshTime);
    /*0x14c3bb0*/ void SetExperience(int _index, int _amount, int _exp, int _gold);
    /*0x14c3228*/ bool IsItem(int _nIndex);
    /*0x14c4028*/ void OnUpgrade();
    /*0x14c472c*/ void OnFastSelect();
    /*0x14c4c54*/ void CallbackReinforce(PTShare.Define.SEquip _equip);
    /*0x14c4d78*/ void HandlerSelectEquip(int _index, int _equipExp, int _equipGold);
    /*0x14c46a0*/ bool IsConditionUpgrade();
    /*0x14c4b68*/ bool IsConditionSelectItemLimit(int _exp);
    /*0x14c2984*/ void ResetEffectCoroutineData();
    /*0x14c3b20*/ System.Collections.IEnumerator CoSliderProgress(float oldPer, float newPer, float playTime);
    /*0x14c4bd8*/ System.Collections.IEnumerator CoRefreshText(int oldLevel);
    /*0x14c3718*/ System.Collections.IEnumerator CoTotalPowerTextEffect(long start, long end);
    /*0x14c3798*/ System.Collections.IEnumerator CoTotalPowerScaleEffect();
    /*0x14c2b18*/ System.Collections.IEnumerator CoEquipmentIconScaleEffect(int starAmount);
    /*0x14c4ec8*/ System.Collections.IEnumerator CoEquipmentIconFadeOutEffect(float speed);
    /*0x14c3ab4*/ System.Collections.IEnumerator CoStopParticle(ParticleBase target);
    /*0x14c26a0*/ void CleanEffectData();

    class <>c
    {
        static /*0x0*/ EquipUpgradePopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SItem> <>9__45_0;
        static /*0x10*/ System.Predicate<EquipSetItem> <>9__45_1;

        static /*0x1099a9c*/ <>c();
        /*0x1099afc*/ <>c();
        /*0x1099b04*/ bool <InitializePopup>b__45_0(PTShare.Define.SItem x);
        /*0x1099bac*/ bool <InitializePopup>b__45_1(EquipSetItem x);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<int, System.ValueTuple<bool, int>> _val;

        /*0x1099bd0*/ <>c__DisplayClass56_0();
        /*0x1099bd8*/ bool <OnUpgrade>b__0(PTShare.Define.SItem x);
        /*0x1099c38*/ bool <OnUpgrade>b__1(EquipSetItem x);
    }

    class <>c__DisplayClass56_1
    {
        /*0x10*/ EquipSetItem _item;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__2;

        /*0x1099c90*/ <>c__DisplayClass56_1();
        /*0x1099c98*/ bool <OnUpgrade>b__2(PTShare.Define.SEquip y);
    }

    class <CoSliderProgress>d__63 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float playTime;
        /*0x28*/ EquipUpgradePopup <>4__this;
        /*0x30*/ float newPer;
        /*0x34*/ float oldPer;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;

        /*0x109a328*/ <CoSliderProgress>d__63(int <>1__state);
        /*0x109a354*/ void System.IDisposable.Dispose();
        /*0x109a358*/ bool MoveNext();
        /*0x109a4a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a4a8*/ void System.Collections.IEnumerator.Reset();
        /*0x109a4e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshText>d__64 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int oldLevel;
        /*0x28*/ EquipUpgradePopup <>4__this;

        /*0x109a0cc*/ <CoRefreshText>d__64(int <>1__state);
        /*0x109a0f8*/ void System.IDisposable.Dispose();
        /*0x109a0fc*/ bool MoveNext();
        /*0x109a2d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a2e0*/ void System.Collections.IEnumerator.Reset();
        /*0x109a320*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTotalPowerTextEffect>d__65 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ long end;
        /*0x28*/ long start;
        /*0x30*/ EquipUpgradePopup <>4__this;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;
        /*0x40*/ long <lerpValue>5__4;

        /*0x109a85c*/ <CoTotalPowerTextEffect>d__65(int <>1__state);
        /*0x109a888*/ void System.IDisposable.Dispose();
        /*0x109a88c*/ bool MoveNext();
        /*0x109a9e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a9e8*/ void System.Collections.IEnumerator.Reset();
        /*0x109aa28*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTotalPowerScaleEffect>d__66 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipUpgradePopup <>4__this;
        /*0x28*/ float <t>5__2;
        /*0x2c*/ float <speed>5__3;

        /*0x109a638*/ <CoTotalPowerScaleEffect>d__66(int <>1__state);
        /*0x109a664*/ void System.IDisposable.Dispose();
        /*0x109a668*/ bool MoveNext();
        /*0x109a80c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a814*/ void System.Collections.IEnumerator.Reset();
        /*0x109a854*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconScaleEffect>d__67 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipUpgradePopup <>4__this;
        /*0x28*/ int starAmount;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ float <speed>5__3;

        /*0x1099e64*/ <CoEquipmentIconScaleEffect>d__67(int <>1__state);
        /*0x1099e90*/ void System.IDisposable.Dispose();
        /*0x1099e94*/ bool MoveNext();
        /*0x109a07c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a084*/ void System.Collections.IEnumerator.Reset();
        /*0x109a0c4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconFadeOutEffect>d__68 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipUpgradePopup <>4__this;
        /*0x28*/ float speed;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ UnityEngine.Color <color>5__3;

        /*0x1099cf0*/ <CoEquipmentIconFadeOutEffect>d__68(int <>1__state);
        /*0x1099d1c*/ void System.IDisposable.Dispose();
        /*0x1099d20*/ bool MoveNext();
        /*0x1099e14*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1099e1c*/ void System.Collections.IEnumerator.Reset();
        /*0x1099e5c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoStopParticle>d__69 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ParticleBase target;

        /*0x109a4f0*/ <CoStopParticle>d__69(int <>1__state);
        /*0x109a51c*/ void System.IDisposable.Dispose();
        /*0x109a520*/ bool MoveNext();
        /*0x109a5e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a5f0*/ void System.Collections.IEnumerator.Reset();
        /*0x109a630*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipUpgradeResultPopup : GuiBase
{
    /*0x40*/ ItemInfoSlot m_ItemBox;
    /*0x48*/ LocalizeString m_BeforePower;
    /*0x50*/ LocalizeString m_AfterPower;
    /*0x58*/ System.Collections.Generic.List<EquipPromoteStatusEntity> m_liStatusEntity;
    /*0x60*/ TableData.TableData_Equipment m_BeforeTableInfo;
    /*0x68*/ TableData.TableData_Equipment m_AfterTableInfo;
    /*0x70*/ PTShare.Define.SEquip m_BeforeInfo;
    /*0x78*/ PTShare.Define.SEquip m_AfterInfo;
    /*0x80*/ int nFactionIndex;

    /*0x114bc48*/ EquipUpgradeResultPopup();
    /*0x114b684*/ void OnCreate();
    /*0x114b688*/ void OnDelete();
    /*0x114b68c*/ void OnEnter();
    /*0x114b690*/ void OnFinish();
    /*0x114b694*/ void OnLeave();
    /*0x114b698*/ void OnStart();
    /*0x114b69c*/ void OnExit();
    /*0x114b718*/ void InitializePopup(int _factionid, PTShare.Define.SEquip _before, PTShare.Define.SEquip _after);
    /*0x114b8ac*/ void InitializeStatusList();

    class <>c
    {
        static /*0x0*/ EquipUpgradeResultPopup.<> <>9;
        static /*0x8*/ System.Comparison<EquipPromoteStatusEntity> <>9__17_0;

        static /*0x109aa30*/ <>c();
        /*0x109aa90*/ <>c();
        /*0x109aa98*/ int <InitializeStatusList>b__17_0(EquipPromoteStatusEntity a, EquipPromoteStatusEntity b);
    }
}

enum FriendManageType
{
    NONE = 0,
    BLACKLIST = 1,
    SEARCH = 2,
    INVITE = 3,
}

class FriendManagePopup : GuiBase
{
    /*0x40*/ LocalizeString m_TitleText;
    /*0x48*/ LocalizeString m_AmountTitleText;
    /*0x50*/ LocalizeString m_AmountText;
    /*0x58*/ LocalizeString m_EmptySearchListText;
    /*0x60*/ LocalizeString m_EmptyBlackOrRequestListText;
    /*0x68*/ ScrollContent_FriendManageEntity m_ScrollContent_FriendBlackOrRequest;
    /*0x70*/ ScrollContent_FriendManageEntity m_ScrollContent_SearchList;
    /*0x78*/ UnityEngine.GameObject m_SearchInputParent;
    /*0x80*/ UnityEngine.UI.InputField m_SearchField;
    /*0x88*/ UnityEngine.GameObject m_BlackOrRequestParent;
    /*0x90*/ UnityEngine.GameObject m_SearchListParent;
    /*0x98*/ System.Collections.Generic.List<FriendManagePopup.FriendToggle> m_liFriendToggle;
    /*0xa0*/ FriendManageType m_eTapType;
    /*0xa4*/ bool m_isPlayingSound;

    /*0x11e1f14*/ FriendManagePopup();
    /*0x11e04e0*/ System.Collections.Generic.List<PTShare.Define.SFriend> get_m_curFriendList();
    /*0x11e0560*/ System.Collections.Generic.List<PTShare.Define.SPlayer> get_m_curInviteList();
    /*0x11e05e0*/ System.Collections.Generic.List<PTShare.Define.SPlayer> get_m_curBlackList();
    /*0x11e0660*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> get_m_curSearchList();
    /*0x11e06e0*/ void OnCreate();
    /*0x11e06e4*/ void OnDelete();
    /*0x11e06e8*/ void OnEnter();
    /*0x11e0ac8*/ void OnFinish();
    /*0x11e0acc*/ void OnLeave();
    /*0x11e0d70*/ void OnStart();
    /*0x11e0d74*/ void OnExit();
    /*0x11df1e8*/ void InitializePopup(FriendManageType _tapType);
    /*0x11e0bd4*/ void ClearEvent();
    /*0x11e0888*/ void RemoveInputField();
    /*0x11e0df0*/ void SetActiveContent(bool _isSearchList);
    /*0x11e0e58*/ void SetViewContents(FriendManageType _eType);
    /*0x11e090c*/ void InitializeToggle();
    /*0x11e19a4*/ void OnSearchPlayer();
    /*0x11e1c74*/ void CallbackProtocolSearch();
    /*0x11e1758*/ void InitializeScroll();
    /*0x11e1c9c*/ void HandlerScrollContent_FriendSearch(int _index, FriendManageEntity _obj);
    /*0x11e1d2c*/ void HandlerScrollContent_FriendRequest(int _index, FriendManageEntity _obj);
    /*0x11e1dbc*/ void HandlerScrollContent_BlackList(int _index, FriendManageEntity _obj);
    /*0x11e1e4c*/ void HandlerChangeFriendState();
    /*0x11e1e74*/ void HandleToggleContent();
    /*0x11e1f24*/ bool <InitializePopup>b__30_0(FriendManagePopup.FriendToggle x);

    class FriendToggle
    {
        /*0x10*/ FriendManageType type;
        /*0x18*/ UnityEngine.UI.Toggle toggle;

        /*0x10a0808*/ FriendToggle();
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ FriendManageType _type;
        /*0x18*/ FriendManagePopup <>4__this;

        /*0x10a063c*/ <>c__DisplayClass35_0();
        /*0x10a0644*/ void <InitializeToggle>b__0(bool isOn);
    }
}

class FriendPopup : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ LocalizeString m_TitleText;
    /*0x48*/ UnityEngine.UI.Toggle m_FriendToggle;
    /*0x50*/ UnityEngine.UI.Toggle m_SoldierToggle;
    /*0x58*/ FriendGenericWindow m_FriendWindow;
    /*0x60*/ FriendMercenaryWindow m_SoldierWindow;
    /*0x68*/ FriendSortType m_eSortType;
    /*0x6c*/ bool m_isPlayingSound;
    /*0x6d*/ bool m_isSelectFriendTab;

    static /*0x10a49b8*/ FriendPopup();
    static /*0x10a4290*/ void add_OnExitEvent(System.Action value);
    static /*0x10a4384*/ void remove_OnExitEvent(System.Action value);
    /*0x10a49a8*/ FriendPopup();
    /*0x10a4208*/ System.Collections.Generic.List<PTShare.Define.SFriend> get_m_curFriendList();
    /*0x10a4478*/ void OnCreate();
    /*0x10a447c*/ void OnEnter();
    /*0x10a44e8*/ void OnStart();
    /*0x10a44ec*/ void OnFinish();
    /*0x10a44f0*/ void OnLeave();
    /*0x10a4568*/ void OnDelete();
    /*0x10a45cc*/ void OnExit();
    /*0x10a46a0*/ void InitializePopup();
    /*0x10a471c*/ void InitializeToggle();
    /*0x10a487c*/ void SetActiveContents(bool _friend, bool _soldier);
    /*0x10a48e8*/ void OnClick_Help();
    /*0x10a49bc*/ void <OnExit>b__19_0();
    /*0x10a4a38*/ void <InitializeToggle>b__21_0(bool isOn);
    /*0x10a4c64*/ void <InitializeToggle>b__21_2();
    /*0x10a4d80*/ void <InitializeToggle>b__21_1(bool isOn);
}

class FurnitureDismissConfirmPopup : GuiBase
{
    /*0x40*/ ItemRewardGroup m_rewardGroup;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> objList;
    /*0x50*/ PTShare.Define.SProperty rewards;
    /*0x58*/ System.Action onCallBack;

    /*0x10a80c0*/ FurnitureDismissConfirmPopup();
    /*0x10a7c58*/ void OnCreate();
    /*0x10a7c5c*/ void OnDelete();
    /*0x10a7c60*/ void OnEnter();
    /*0x10a7c64*/ void OnFinish();
    /*0x10a7c68*/ void OnLeave();
    /*0x10a7c6c*/ void OnStart();
    /*0x10a7c70*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SHousingObj> list, System.Action onConfirm);
    /*0x10a7fd8*/ void OnClick_Confirm();
    /*0x10a8124*/ void <OnClick_Confirm>b__11_0();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<Rewards>> configRewardMap;
        /*0x18*/ FurnitureDismissConfirmPopup <>4__this;

        /*0x10a3194*/ <>c__DisplayClass10_0();
        /*0x10a319c*/ void <InitializePopup>b__0(PTShare.Define.SHousingObj x);
    }

    class <>c__DisplayClass10_1
    {
        /*0x10*/ float addValue;
        /*0x18*/ FurnitureDismissConfirmPopup.<> CS$<>8__locals1;

        /*0x10a332c*/ <>c__DisplayClass10_1();
        /*0x10a3334*/ void <InitializePopup>b__1(Rewards y);
    }
}

class GachaDismissSelectPopup : GuiBase
{
    /*0x40*/ HeroSlot[] m_dismissSlots;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_tableList;
    /*0x50*/ System.Collections.Generic.List<bool> m_selectList;
    /*0x58*/ System.Action<System.Collections.Generic.List<int>> m_callBack;

    /*0x10bce90*/ GachaDismissSelectPopup();
    /*0x10bc784*/ void OnCreate();
    /*0x10bc788*/ void OnDelete();
    /*0x10bc78c*/ void OnEnter();
    /*0x10bc790*/ void OnFinish();
    /*0x10bc794*/ void OnLeave();
    /*0x10bc798*/ void OnStart();
    /*0x10bc79c*/ void OnExit();
    /*0x10bc818*/ void InitPopup(System.Action<System.Collections.Generic.List<int>> callback);
    /*0x10bcacc*/ void HandleClickEvent(TableData.TableData_Unitbase tableData);
    /*0x10bcd20*/ void OnClickSelect();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ TableData.TableData_Unitbase tableData;

        /*0xf65538*/ <>c__DisplayClass12_0();
        /*0xf65540*/ bool <HandleClickEvent>b__0(TableData.TableData_Unitbase f);
    }
}

class GachaPercentPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<GachaPercentDesc> m_liPercentDesc;
    /*0x48*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x50*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x58*/ string[] m_arrGrade;
    /*0x60*/ string[] m_arrPercent;
    /*0x68*/ GachaFactionType m_factionType;

    /*0xec2288*/ GachaPercentPopup();
    /*0xec1da4*/ void OnCreate();
    /*0xec1da8*/ void OnDelete();
    /*0xec1dac*/ void OnEnter();
    /*0xec1e18*/ void OnFinish();
    /*0xec1e1c*/ void OnLeave();
    /*0xec1e20*/ void OnStart();
    /*0xec1e24*/ void OnExit();
    /*0xec1ea0*/ void InitializePopup(TableData.TableData_Gacha _base);
    /*0xec1f5c*/ void SettingPercentDesc();
    /*0xec221c*/ System.Collections.IEnumerator CoSettingScrollSize();

    class <CoSettingScrollSize>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaPercentPopup <>4__this;

        /*0xf66904*/ <CoSettingScrollSize>d__15(int <>1__state);
        /*0xf66930*/ void System.IDisposable.Dispose();
        /*0xf66934*/ bool MoveNext();
        /*0xf66a84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf66a8c*/ void System.Collections.IEnumerator.Reset();
        /*0xf66acc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaPropertyPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<GachaPropertyCard> m_liPropertyCard;
    /*0x48*/ int m_nSelectProperty;
    /*0x50*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x58*/ int _nCurProperty;
    /*0x5c*/ int _nChangeProperty;

    /*0xec42d4*/ GachaPropertyPopup();
    /*0xec3c3c*/ void OnCreate();
    /*0xec3cac*/ void OnDelete();
    /*0xec3cb0*/ void OnEnter();
    /*0xec3d9c*/ void OnFinish();
    /*0xec3da0*/ void OnLeave();
    /*0xec3e58*/ void OnStart();
    /*0xec3e5c*/ void InitializePopup();
    /*0xec3e68*/ void InitializePropertyCard();
    /*0xec3f6c*/ void OnClickConfirm();
    /*0xec40c8*/ void HandlerSelectCard(int _type);
    /*0xec41ac*/ void CallbackConfirmCard(string[] _args);
}

class GachaResultPopup : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ System.Collections.Generic.List<GachaResultCard> m_liGachaCard;
    /*0x48*/ UnityEngine.GameObject m_BackButton;
    /*0x50*/ GachaPriceButton m_RetryButton;
    /*0x58*/ UnityEngine.GameObject m_OpenButton;
    /*0x60*/ UnityEngine.GameObject m_SkipButton;
    /*0x68*/ UnityEngine.GameObject m_ShareButton;
    /*0x70*/ UnityEngine.GameObject m_GetButton;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_gachaEffectSkel;
    /*0x80*/ GachaEpicEventProcess m_EpicEventProcess;
    /*0x88*/ bool m_bIsSingle;
    /*0x89*/ bool m_bIsProperty;
    /*0x8c*/ int m_index;
    /*0x90*/ int m_nFactionID;
    /*0x94*/ int m_nCardCount;
    /*0x98*/ int m_nGachaCount;
    /*0xa0*/ TableData.TableData_Gacha m_gachaTableData;
    /*0xa8*/ System.Collections.IEnumerator m_ieAnimation;
    /*0xb0*/ PTShare.Define.SProperty m_dismissReward;

    static /*0xec733c*/ GachaResultPopup();
    /*0xec7334*/ GachaResultPopup();
    /*0xec5cdc*/ void OnCreate();
    /*0xec5ce0*/ void OnDelete();
    /*0xec5ce4*/ void OnEnter();
    /*0xec5ce8*/ void OnFinish();
    /*0xec5cec*/ void OnLeave();
    /*0xec5cf0*/ void OnStart();
    /*0xec5cf4*/ void OnExit();
    /*0xec4248*/ void InitializeResult();
    /*0xec33d4*/ void InitializeResult(int _index, TableData.TableData_Gacha _base, bool _isSingle, int _type, bool _isProperty);
    /*0xec5d88*/ void SettingEffect();
    /*0xec5ff4*/ void SettingCard();
    /*0xec65d0*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xec5f00*/ void SetActiveButton(bool _backbtn, bool _openbtn, bool _retrybtn, bool _skipbtn, bool _getbtn);
    /*0xec6904*/ void OnClickFastOpen();
    /*0xec69f4*/ void OnClickSkipButton();
    /*0xec699c*/ void StartAnimation(bool _onlyEpicSound);
    /*0xec6db8*/ void StopAnimation();
    /*0xec6de8*/ System.Collections.IEnumerator CoAnimation(bool _onlyEpicSound);
    /*0xec6e68*/ void OnClickShare();
    /*0xec6e94*/ System.Collections.IEnumerator CoShare();
    /*0xec6ef0*/ void CallbackOpenCard(bool _isEpic);
    /*0xec71c8*/ bool IsOpenReview(System.Action cb);
    /*0xec732c*/ GachaEpicEventProcess GetEventProcess();
    /*0xec6538*/ string GetParamsIndex(string _arg);
    /*0xec64e0*/ bool IsParamsItem(string _arg);
    /*0xec7340*/ void <CallbackOpenCard>b__39_0();

    class <>c__DisplayClass29_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> configReward;
        /*0x18*/ GachaResultPopup <>4__this;

        /*0xf66c48*/ <>c__DisplayClass29_0();
        /*0xf66c50*/ void <SettingCard>g__AddAutoDissmiss|0(int heroId);
        /*0xf66d6c*/ void <SettingCard>b__1(Rewards y);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ bool isPlayItemSound;
        /*0x11*/ bool isPlayRareSound;
        /*0x12*/ bool isEpicSound;

        /*0xf66de0*/ <>c__DisplayClass33_0();
        /*0xf66de8*/ void <OnClickSkipButton>b__1(GachaResultCard x);
    }

    class <>c
    {
        static /*0x0*/ GachaResultPopup.<> <>9;
        static /*0x8*/ System.Predicate<GachaResultCard> <>9__33_0;
        static /*0x10*/ System.Action <>9__39_2;
        static /*0x18*/ System.Action <>9__39_1;

        static /*0xf66ad4*/ <>c();
        /*0xf66b34*/ <>c();
        /*0xf66b3c*/ bool <OnClickSkipButton>b__33_0(GachaResultCard x);
        /*0xf66b98*/ void <CallbackOpenCard>b__39_2();
        /*0xf66bf0*/ void <CallbackOpenCard>b__39_1();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ GachaResultPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<bool> <>9__0;

        /*0xf66e64*/ <>c__DisplayClass36_0();
        /*0xf66e6c*/ bool <CoAnimation>b__0();
    }

    class <CoAnimation>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaResultPopup <>4__this;
        /*0x28*/ GachaResultPopup.<> <>8__1;
        /*0x30*/ bool _onlyEpicSound;
        /*0x34*/ int <length>5__2;

        /*0xf66ef0*/ <CoAnimation>d__36(int <>1__state);
        /*0xf66f1c*/ void System.IDisposable.Dispose();
        /*0xf66f20*/ bool MoveNext();
        /*0xf67220*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67228*/ void System.Collections.IEnumerator.Reset();
        /*0xf67268*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShare>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf67270*/ <CoShare>d__38(int <>1__state);
        /*0xf6729c*/ void System.IDisposable.Dispose();
        /*0xf672a0*/ bool MoveNext();
        /*0xf67500*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67508*/ void System.Collections.IEnumerator.Reset();
        /*0xf67548*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaSelectPopup : GuiBase
{
    static /*0x0*/ System.Action<int> OnSelectEvent;
    /*0x40*/ System.Collections.Generic.List<GachaLimitCard> m_liPropertyCard;
    /*0x48*/ int m_nSelectProperty;
    /*0x50*/ System.Collections.IEnumerator m_IECardUpdate;

    static /*0xec8b64*/ GachaSelectPopup();
    static /*0xec7a20*/ void add_OnSelectEvent(System.Action<int> value);
    static /*0xec792c*/ void remove_OnSelectEvent(System.Action<int> value);
    /*0xec8b54*/ GachaSelectPopup();
    /*0xec8450*/ void OnCreate();
    /*0xec8454*/ void OnDelete();
    /*0xec84b8*/ void OnEnter();
    /*0xec8648*/ void OnFinish();
    /*0xec864c*/ void OnLeave();
    /*0xec877c*/ void OnStart();
    /*0xec8780*/ void OnExit();
    /*0xec8820*/ void InitializePopup(int _propertyType);
    /*0xec8848*/ void InitializeCard();
    /*0xec8998*/ void HandlerSelectCard(int _type);
    /*0xec8a80*/ void HandlerUpdateFaction();
    /*0xec894c*/ void StartUpdateProcess();
    /*0xec8ae8*/ System.Collections.IEnumerator CoUpdateProcess();

    class <CoUpdateProcess>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaSelectPopup <>4__this;
        /*0x28*/ int <length>5__2;

        /*0xf6769c*/ <CoUpdateProcess>d__18(int <>1__state);
        /*0xf676c8*/ void System.IDisposable.Dispose();
        /*0xf676cc*/ bool MoveNext();
        /*0xf67804*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6780c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6784c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaShopPopup : GuiBase
{
    /*0x40*/ GachaButtonWindow m_cGachaButtonWindow;
    /*0x48*/ CurrencyTopWindow m_cCurrencyTopWindow;
    /*0x50*/ GachaBonusSilder m_cGachaBonusSilder;
    /*0x58*/ AtlasImage m_BonusCard;
    /*0x60*/ LocalizeString m_BonusCardAmount;
    /*0x68*/ UnityEngine.CanvasGroup m_infoCanvas;
    /*0x70*/ LocalizeString m_ShopInfoText;
    /*0x78*/ UnityEngine.Coroutine m_shopInfoUpdateCoroutine;

    /*0xec9b0c*/ GachaShopPopup();
    /*0xec92b0*/ void OnCreate();
    /*0xec92b4*/ void OnDelete();
    /*0xec92b8*/ void OnEnter();
    /*0xec968c*/ void OnStart();
    /*0xec9690*/ void OnFinish();
    /*0xec9694*/ void OnLeave();
    /*0xec979c*/ void OnExit();
    /*0xec9870*/ void InitializePopup();
    /*0xec98f4*/ void SetBonusCard();
    /*0xec9960*/ void OnClickWishList();
    /*0xec99d4*/ void OnClickPropertyGacha();
    /*0xec9a58*/ void HandlerExitResult();
    /*0xec9620*/ System.Collections.IEnumerator CoShopInfoUpdate();
    /*0xec9ab0*/ System.Collections.IEnumerator CoLateJoinPub();
    /*0xec9b14*/ void <OnExit>b__14_0();

    class <CoShopInfoUpdate>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaShopPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__2;

        /*0xf67960*/ <CoShopInfoUpdate>d__20(int <>1__state);
        /*0xf6798c*/ void System.IDisposable.Dispose();
        /*0xf67990*/ bool MoveNext();
        /*0xf67d2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67d34*/ void System.Collections.IEnumerator.Reset();
        /*0xf67d74*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateJoinPub>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf67854*/ <CoLateJoinPub>d__21(int <>1__state);
        /*0xf67880*/ void System.IDisposable.Dispose();
        /*0xf67884*/ bool MoveNext();
        /*0xf67910*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67918*/ void System.Collections.IEnumerator.Reset();
        /*0xf67958*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GeneralArenaPopup : GuiBase
{
    /*0x40*/ RankBoardRankEntity m_MyRankEntity;
    /*0x48*/ ScrollContent_RankBoardRankEntity m_ScrollContent;
    /*0x50*/ LocalizeString m_SeasonTimeout;
    /*0x58*/ System.Collections.IEnumerator ieTime;

    /*0xed1b2c*/ GeneralArenaPopup();
    /*0xed0ae4*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> get_liArenaRanker();
    /*0xed0b64*/ void OnCreate();
    /*0xed0b68*/ void OnDelete();
    /*0xed0b6c*/ void OnEnter();
    /*0xed0dd4*/ void OnFinish();
    /*0xed0dd8*/ void OnLeave();
    /*0xed1004*/ void OnStart();
    /*0xed1008*/ void OnExit();
    /*0xed1084*/ void InitializePopup();
    /*0xed11dc*/ void Initialize();
    /*0xed140c*/ void InitializeScroll();
    /*0xed14b8*/ void HandlerScrollContent(int _index, RankBoardRankEntity _obj);
    /*0xed155c*/ void OnClick_Match();
    /*0xed16bc*/ void OnClick_Troop();
    /*0xed174c*/ void OnClick_Record();
    /*0xed17d0*/ void OnClick_Reward();
    /*0xed18fc*/ void OnClick_Help();
    /*0xed19a0*/ void OnClick_Store();
    /*0xed146c*/ void StartTimer();
    /*0xed0fd4*/ void StopCoroutines();
    /*0xed1abc*/ System.Collections.IEnumerator CoUpdate();
    /*0xed1b28*/ void HandlerChangeState();

    class <>c
    {
        static /*0x0*/ GeneralArenaPopup.<> <>9;
        static /*0x8*/ System.Action <>9__22_1;
        static /*0x10*/ System.Action <>9__22_0;

        static /*0xf68540*/ <>c();
        /*0xf685a0*/ <>c();
        /*0xf685a8*/ void <OnClick_Store>b__22_0();
        /*0xf686f0*/ void <OnClick_Store>b__22_1();
    }

    class <CoUpdate>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GeneralArenaPopup <>4__this;
        /*0x28*/ int <_term>5__2;

        /*0xf68774*/ <CoUpdate>d__25(int <>1__state);
        /*0xf687a0*/ void System.IDisposable.Dispose();
        /*0xf687a4*/ bool MoveNext();
        /*0xf68948*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf68950*/ void System.Collections.IEnumerator.Reset();
        /*0xf68990*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GeneralArenaRewardPopup : GuiBase
{
    /*0x40*/ TableRewardController m_DailyReward;
    /*0x48*/ TableRewardController m_SeasonReward;
    /*0x50*/ LocalizeString m_MyRank;
    /*0x58*/ LocalizeString m_SeasonTimeout;
    /*0x60*/ System.Collections.IEnumerator ieTime;

    /*0xed2c0c*/ GeneralArenaRewardPopup();
    /*0xed284c*/ int get_nMyRank();
    /*0xed28d0*/ void OnCreate();
    /*0xed28d4*/ void OnDelete();
    /*0xed28d8*/ void OnEnter();
    /*0xed2944*/ void OnFinish();
    /*0xed2948*/ void OnLeave();
    /*0xed294c*/ void OnStart();
    /*0xed2950*/ void OnExit();
    /*0xed184c*/ void InitializePopup();
    /*0xed29cc*/ void SetRewards(TableRewardController _controller, string _column);
    /*0xed2b54*/ void StartTimer();
    /*0xed2ba0*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GeneralArenaRewardPopup <>4__this;

        /*0xf68998*/ <CoUpdate>d__17(int <>1__state);
        /*0xf689c4*/ void System.IDisposable.Dispose();
        /*0xf689c8*/ bool MoveNext();
        /*0xf68b00*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf68b08*/ void System.Collections.IEnumerator.Reset();
        /*0xf68b48*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildPastChangeMasterPopup : GuiBase
{
    /*0x40*/ PlayerProfileSlot m_before;
    /*0x48*/ PlayerProfileSlot m_after;
    /*0x50*/ LocalizeString m_beforeNickname;
    /*0x58*/ LocalizeString m_afterNickname;

    /*0x110b554*/ GuildPastChangeMasterPopup();
    /*0x110b204*/ void OnCreate();
    /*0x110b208*/ void OnDelete();
    /*0x110b20c*/ void OnEnter();
    /*0x110b210*/ void OnFinish();
    /*0x110b214*/ void OnLeave();
    /*0x110b218*/ void OnStart();
    /*0x110b21c*/ void InitializePopup();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ PTShare.Define.SGuildMember before;
        /*0x18*/ PTShare.Define.SGuildMember after;

        /*0xf71cec*/ <>c__DisplayClass10_0();
        /*0xf71cf4*/ void <InitializePopup>b__1();
        /*0xf71d10*/ void <InitializePopup>b__2();
    }

    class <>c
    {
        static /*0x0*/ GuildPastChangeMasterPopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SGuildMember> <>9__10_0;

        static /*0xf71c64*/ <>c();
        /*0xf71cc4*/ <>c();
        /*0xf71ccc*/ bool <InitializePopup>b__10_0(PTShare.Define.SGuildMember x);
    }
}

class GuildWarBuyTicketPopup : GuiBase
{
    /*0x40*/ ItemInfoSlot m_InfoSlot;
    /*0x48*/ LocalizeString m_Amount;
    /*0x50*/ LocalizeString m_UseAmount;
    /*0x58*/ LocalizeString m_BtnAmount;
    /*0x60*/ int nTicketAmount;
    /*0x68*/ System.Action onBuyItemCallback;

    /*0x11105cc*/ GuildWarBuyTicketPopup();
    /*0x110ffac*/ void OnCreate();
    /*0x110ffb0*/ void OnDelete();
    /*0x110ffb4*/ void OnEnter();
    /*0x1110020*/ void OnFinish();
    /*0x1110024*/ void OnLeave();
    /*0x1110028*/ void OnStart();
    /*0x111002c*/ void InitializePopup(System.Action onBuyItem);
    /*0x1110170*/ void SetAmount(int amount);
    /*0x11103d0*/ void OnClick_Amount(bool isAdd);
    /*0x11103f8*/ void OnClick_BuyTicket();
    /*0x1110398*/ bool IsVaildPrice();
    /*0x11105dc*/ void <OnClick_BuyTicket>b__15_0(bool ok);
}

class GuildWarEditSelectPlayerConfirmPopup : GuiBase
{
    /*0x40*/ HeroSlotInventory m_BeforeSlot;
    /*0x48*/ HeroSlotInventory m_AfterSlot;
    /*0x50*/ LocalizeString m_Nickname;
    /*0x58*/ System.Action onConfirmCallback;

    /*0x11115a4*/ GuildWarEditSelectPlayerConfirmPopup();
    /*0x1111464*/ void OnCreate();
    /*0x1111468*/ void OnDelete();
    /*0x111146c*/ void OnEnter();
    /*0x11114d8*/ void OnFinish();
    /*0x11114dc*/ void OnLeave();
    /*0x11114e0*/ void OnStart();
    /*0x11114e4*/ void InitializePopup(PTShare.Define.SHero beforeData, PTShare.Define.SLegionHero afterData, System.Action onConfirm);
    /*0x1111564*/ void OnClick_Confirm();
}

class GuildWarEditSelectPlayerPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Desc;
    /*0x48*/ ScrollContent_HeroGuildWarSelectHeroSlot m_ScrollContent;
    /*0x50*/ PTShare.Define.GuildWarPosition eEditPosition;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> liLegionHero;
    /*0x60*/ PTShare.Define.SHero heroInfo;

    /*0x11122bc*/ GuildWarEditSelectPlayerPopup();
    /*0x11115ac*/ void OnCreate();
    /*0x11115b0*/ void OnDelete();
    /*0x111166c*/ void OnEnter();
    /*0x1111760*/ void OnFinish();
    /*0x1111764*/ void OnLeave();
    /*0x1111820*/ void OnStart();
    /*0x1111824*/ void OnExit();
    /*0x11118a0*/ void InitializePopup(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SHero data, System.Collections.Generic.List<PTShare.Define.SLegionHero> list);
    /*0x1111ccc*/ void InitializeScrollContent();
    /*0x1111dbc*/ void HandlerScrollContent(int nIndex, HeroGuildWarSelectHeroSlot slot);
    /*0x1111ef8*/ void OnChangeCallback();
    /*0x111200c*/ void OnFailCallback(int code, string result);
    /*0x1112154*/ void HeroGuildWarSelectHeroSlot_onLongPressEvent(PTShare.Define.SHero _hero);
    /*0x11122cc*/ void <OnFailCallback>b__16_0();

    class <>c
    {
        static /*0x0*/ GuildWarEditSelectPlayerPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SLegionHero> <>9__12_0;

        static /*0xf72a1c*/ <>c();
        /*0xf72a7c*/ <>c();
        /*0xf72a84*/ int <InitializePopup>b__12_0(PTShare.Define.SLegionHero a, PTShare.Define.SLegionHero b);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf72af8*/ <>c__DisplayClass17_0();
        /*0xf72b00*/ bool <HeroGuildWarSelectHeroSlot_onLongPressEvent>b__0(PTShare.Define.SLegionHero x);
    }
}

class GuildWarFormationSelectPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildWarFormationSelect m_ScrollContentFormationSelect;
    /*0x48*/ LocalizeString m_KnightText;
    /*0x50*/ LocalizeString m_RangerText;
    /*0x58*/ LocalizeString m_MageText;
    /*0x60*/ TooltipData_UnitList m_KnightList;
    /*0x68*/ TooltipData_UnitList m_RangerList;
    /*0x70*/ TooltipData_UnitList m_MageList;
    /*0x78*/ int m_nTMPSelectFormationID;
    /*0x80*/ System.Collections.Generic.List<int> currentSortFormation;
    /*0x88*/ PTShare.Define.GuildWarPosition eEditPosition;

    /*0x11182ec*/ GuildWarFormationSelectPopup();
    /*0x111708c*/ void OnCreate();
    /*0x111764c*/ void OnDelete();
    /*0x1117650*/ void OnEnter();
    /*0x11176bc*/ void OnFinish();
    /*0x11176c0*/ void OnLeave();
    /*0x11176c4*/ void OnStart();
    /*0x11176c8*/ void Init(PTShare.Define.GuildWarPosition ePosition);
    /*0x1117d2c*/ void InitializeList();
    /*0x1118100*/ void HandleItemUpdate(int _nIndex, GuildWarFormationSelectEntity _formationEntity);
    /*0x1117fe4*/ void SetSelectIndex(int nFormationID);
    /*0x1116e90*/ void SetTMPFormationID(int _nFormationID, bool _bScrollSort);
    /*0x1118204*/ void OnClickUseFormation();
    /*0x1118188*/ System.Collections.IEnumerator CoScrollUpdate(int nFormationID);

    class <>c
    {
        static /*0x0*/ GuildWarFormationSelectPopup.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Unitbase, bool> <>9__10_0;
        static /*0x10*/ System.Func<TableData.TableData_Unitbase, int> <>9__10_1;
        static /*0x18*/ System.Func<TableData.TableData_Unitbase, bool> <>9__10_2;
        static /*0x20*/ System.Func<TableData.TableData_Unitbase, int> <>9__10_3;
        static /*0x28*/ System.Func<TableData.TableData_Unitbase, bool> <>9__10_4;
        static /*0x30*/ System.Func<TableData.TableData_Unitbase, int> <>9__10_5;
        static /*0x38*/ System.Func<TableData.TableData_Guildwartactic, int> <>9__17_1;
        static /*0x40*/ System.Comparison<int> <>9__17_0;

        static /*0xf73190*/ <>c();
        /*0xf731f0*/ <>c();
        /*0xf731f8*/ bool <OnCreate>b__10_0(TableData.TableData_Unitbase x);
        /*0xf73308*/ int <OnCreate>b__10_1(TableData.TableData_Unitbase x);
        /*0xf73320*/ bool <OnCreate>b__10_2(TableData.TableData_Unitbase x);
        /*0xf733cc*/ int <OnCreate>b__10_3(TableData.TableData_Unitbase x);
        /*0xf733e4*/ bool <OnCreate>b__10_4(TableData.TableData_Unitbase x);
        /*0xf734f4*/ int <OnCreate>b__10_5(TableData.TableData_Unitbase x);
        /*0xf7350c*/ int <InitializeList>b__17_1(TableData.TableData_Guildwartactic x);
        /*0xf73524*/ int <InitializeList>b__17_0(int a, int b);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ int nFormationID;

        /*0xf735e4*/ <>c__DisplayClass19_0();
        /*0xf735ec*/ bool <SetSelectIndex>b__0(int x);
    }

    class <CoScrollUpdate>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarFormationSelectPopup <>4__this;
        /*0x28*/ int nFormationID;

        /*0xf735fc*/ <CoScrollUpdate>d__22(int <>1__state);
        /*0xf73628*/ void System.IDisposable.Dispose();
        /*0xf7362c*/ bool MoveNext();
        /*0xf73688*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf73690*/ void System.Collections.IEnumerator.Reset();
        /*0xf736d0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildWarMatchPopup : GuiBase
{
    /*0x40*/ AtlasImage m_TicketIcon;
    /*0x48*/ LocalizeString m_TicketAmount;
    /*0x50*/ ScrollContent_GuildWarMatchEntity m_ScrollContent;
    /*0x58*/ LocalizeString m_NoMatchUser;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> liSearchGuild;

    /*0x11194c4*/ GuildWarMatchPopup();
    /*0x11189b0*/ void OnCreate();
    /*0x11189b4*/ void OnDelete();
    /*0x11189b8*/ void OnEnter();
    /*0x1118a24*/ void OnFinish();
    /*0x1118a28*/ void OnLeave();
    /*0x1118a30*/ void OnStart();
    /*0x1118a2c*/ void Release();
    /*0x1118a34*/ void InitializePopup();
    /*0x1118d90*/ void Initialize();
    /*0x1118d94*/ void InitializeScroll();
    /*0x1118ed0*/ void HandlerScrollContent(int nIndex, GuildWarMatchEntity entity);
    /*0x1118bec*/ void SetRefreshTicket();
    /*0x1118f50*/ void OnClick_BuyTicket();
    /*0x1119280*/ void OnClick_Reset();
    /*0x11194c0*/ void CallbackBuyTicket();
    /*0x11194cc*/ void <InitializePopup>b__12_0(System.Collections.Generic.List<PTShare.Define.SGuildWar> res);
    /*0x11194f4*/ void <OnClick_Reset>b__18_0(bool ok);
    /*0x11196a8*/ void <OnClick_Reset>b__18_1(System.Collections.Generic.List<PTShare.Define.SGuildWar> res);

    class <>c
    {
        static /*0x0*/ GuildWarMatchPopup.<> <>9;
        static /*0x8*/ System.Action<int, string> <>9__12_1;
        static /*0x10*/ System.Action<int, string> <>9__18_2;

        static /*0xf736d8*/ <>c();
        /*0xf73738*/ <>c();
        /*0xf73740*/ void <InitializePopup>b__12_1(int code, string result);
        /*0xf737c8*/ void <OnClick_Reset>b__18_2(int code, string result);
    }
}

class GuildWarMyHeroPopup : GuiBase
{
    /*0x40*/ PlayerProfileSlot m_profileSlot;
    /*0x48*/ LocalizeString m_nickName;
    /*0x50*/ LocalizeString m_power;
    /*0x58*/ HeroGuildWarEditSlot m_attackSlot;
    /*0x60*/ HeroGuildWarEditSlot m_defenseSlot;
    /*0x68*/ UnityEngine.GameObject m_NoHeroDesc;

    /*0x1119bd4*/ GuildWarMyHeroPopup();
    /*0x111971c*/ void OnCreate();
    /*0x1119720*/ void OnDelete();
    /*0x1119724*/ void OnEnter();
    /*0x1119790*/ void OnFinish();
    /*0x1119794*/ void OnLeave();
    /*0x1119798*/ void OnStart();
    /*0x111979c*/ void OnExit();
    /*0x11197a4*/ void Release();
    /*0x11197a8*/ void InitializePopup(int atkHeroid, int defHeroid);

    class <>c
    {
        static /*0x0*/ GuildWarMyHeroPopup.<> <>9;
        static /*0x8*/ System.Action <>9__14_0;

        static /*0xf73850*/ <>c();
        /*0xf738b0*/ <>c();
        /*0xf738b8*/ void <InitializePopup>b__14_0();
    }
}

class GuildWarPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_generalParent;
    /*0x48*/ GuildWarEditWindow m_editParent;
    /*0x50*/ ScrollContent_GuildWarRankEntity m_guildRankScroll;
    /*0x58*/ GuildWarRankEntity m_guildMyRankEntity;
    /*0x60*/ GuildWarSeasonTime m_seasonTime;
    /*0x68*/ UnityEngine.UI.Button m_battleBtn;
    /*0x70*/ UnityEngine.UI.Button m_impBattleBtn;
    /*0x78*/ UnityEngine.GameObject m_formReddt;
    /*0x80*/ UnityEngine.GameObject m_heroReddt;

    /*0x111b74c*/ GuildWarPopup();
    /*0x111a08c*/ GuildWarInfomation get_GuildWarInfo();
    /*0x111a0f0*/ bool get_PossiableGuildWarBattle();
    /*0x111a144*/ bool get_ImpossibleGuildWarBattleLittleTime();
    /*0x111a198*/ void OnCreate();
    /*0x111a19c*/ void OnDelete();
    /*0x111a1a0*/ void OnEnter();
    /*0x111a2cc*/ void OnFinish();
    /*0x111a2d0*/ void OnLeave();
    /*0x111a2d4*/ void OnStart();
    /*0x111a2d8*/ void OnExit();
    /*0x111a64c*/ void Release();
    /*0x1115898*/ void InitializePopup();
    /*0x111a6d0*/ void InitializeContents(GuildWarPopup.GuildWarEditType eType, PTShare.Define.GuildWarPosition ePosition);
    /*0x1111fe8*/ void InitializeEditContents(bool bRefeshScroll);
    /*0x111a810*/ void InitializeScroll_General();
    /*0x111a880*/ void HandlerGeneralScrollContent(int nIndex, GuildWarRankEntity entity);
    /*0x111a914*/ void ViewPositionToast();
    /*0x111ab58*/ void BeginGuildWar();
    /*0x111ac08*/ void OnClick_Battle();
    /*0x111ae14*/ void OnClick_Settings();
    /*0x111afd0*/ void OnClick_Troop();
    /*0x111b098*/ void OnClick_Record();
    /*0x111b118*/ void OnClick_Reward();
    /*0x111b248*/ void OnClick_Help();
    /*0x111a554*/ void SetActiveContents(GuildWarPopup.GuildWarEditType eType);
    /*0x111a5bc*/ void RefreshBattleButton();
    /*0x111a4e8*/ bool IsContents(GuildWarPopup.GuildWarEditType eType);
    /*0x111b490*/ void OnEndTimeCallback();
    /*0x111b554*/ void OnTickTimeCallback();
    /*0x111b558*/ void InitializeEditWindowForGuildWarTest(PTShare.Define.GuildWarPosition ePosition);
    /*0x111b754*/ void <InitializeContents>b__25_0();
    /*0x111b8f8*/ void <OnClick_Settings>b__32_0();
    /*0x111b928*/ void <OnClick_Troop>b__33_0(int a, int b);

    enum GuildWarEditType
    {
        NONE = 0,
        GENERAL = 1,
        EDIT = 2,
    }

    class <>c
    {
        static /*0x0*/ GuildWarPopup.<> <>9;
        static /*0x8*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SContribution>> <>9__35_0;

        static /*0xf73940*/ <>c();
        /*0xf739a0*/ <>c();
        /*0xf739a8*/ void <OnClick_Reward>b__35_0(int _index, System.Collections.Generic.List<PTShare.Define.SContribution> _list);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ GuildWarPopup <>4__this;
        /*0x18*/ PTShare.Define.GuildWarPosition ePosition;

        /*0xf73a40*/ <>c__DisplayClass42_0();
        /*0xf73a48*/ void <InitializeEditWindowForGuildWarTest>b__0();
    }
}

class GuildWarRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildWarRecordEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHistory> liHistory;

    /*0x10f0f5c*/ GuildWarRecordPopup();
    /*0x10f0a80*/ void OnCreate();
    /*0x10f0a84*/ void OnDelete();
    /*0x10f0a88*/ void OnEnter();
    /*0x10f0bf0*/ void OnFinish();
    /*0x10f0bf4*/ void OnLeave();
    /*0x10f0d34*/ void OnStart();
    /*0x10f0ccc*/ void Release();
    /*0x10f0d38*/ void InitializePopup();
    /*0x10f0e00*/ void InitializeScroll();
    /*0x10f0edc*/ void HandlerScrollContent(int nIndex, GuildWarRecordEntity entity);
    /*0x10f0f64*/ void <InitializePopup>b__10_0(System.Collections.Generic.List<PTShare.Define.SGuildWarHistory> res);
}

class GuildWarResultPopup : GuiBase
{
    /*0x40*/ LocalizeString m_guildPoint;
    /*0x48*/ AtlasImage m_rankIcon;
    /*0x50*/ LocalizeString m_rankCount;
    /*0x58*/ LocalizeString m_rewardTitle;
    /*0x60*/ ScrollContent_StageReward m_rewardScroll;
    /*0x68*/ TableData.TableData_Guildwarrank rankInfo;
    /*0x70*/ TableData.TableData_Guildwarrankreward rankRewardInfo;
    /*0x78*/ System.Collections.Generic.List<Rewards> liReward;

    /*0x10f217c*/ GuildWarResultPopup();
    /*0x10f0f6c*/ void OnCreate();
    /*0x10f0f70*/ void OnDelete();
    /*0x10f0f74*/ void OnEnter();
    /*0x10f10dc*/ void OnFinish();
    /*0x10f10e0*/ void OnLeave();
    /*0x10f11b4*/ void OnStart();
    /*0x10f11b8*/ void InitializePopup();
    /*0x10f2064*/ void InitializeScroll();
    /*0x10f20c0*/ void HandlerScrollContent(int nIndex, ItemTableRewardSlot entity);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ PTShare.Define.SGuildWarReward reward;

        /*0xf73a90*/ <>c__DisplayClass14_0();
        /*0xf73a98*/ bool <InitializePopup>b__0(TableData.TableData_Guildwarrank x);
    }
}

class GuildWarRewardDetailPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_rankParent;
    /*0x48*/ UnityEngine.GameObject m_rewardParent;
    /*0x50*/ ScrollContent_GuildWarRewardDetailEntity m_scrollContent_Rank;
    /*0x58*/ ScrollContent_GuildWarRewardDetailEntity m_scrollContent_Reward;
    /*0x60*/ GuildWarRewardDetailEntity m_myRankEntity;
    /*0x68*/ TableData.TableData_Guildwarrankreward rewardInfo;

    /*0x10f2e7c*/ GuildWarRewardDetailPopup();
    /*0x10f2754*/ System.Collections.Generic.List<PTShare.Define.SContribution> get_CurrentContribution();
    /*0x10f27a8*/ void OnCreate();
    /*0x10f27ac*/ void OnDelete();
    /*0x10f27b0*/ void OnEnter();
    /*0x10f27f4*/ void OnFinish();
    /*0x10f27f8*/ void OnLeave();
    /*0x10f27fc*/ void OnStart();
    /*0x10f2800*/ void OnExit();
    /*0x10f287c*/ void InitializePopup_Rank(TableData.TableData_Guildwarrankreward data);
    /*0x10f2bd4*/ void InitializePopup_Reward(TableData.TableData_Guildwarrankreward data);
    /*0x10f2ae0*/ void InitializeScroll_Rank();
    /*0x10f2d70*/ void HandlerScrollContent_Rank(int _nIndex, GuildWarRewardDetailEntity _entity);
    /*0x10f2c84*/ void InitializeScroll_Reward();
    /*0x10f2e2c*/ void HandlerScrollContent_Reward(int _nIndex, GuildWarRewardDetailEntity _entity);

    class <>c
    {
        static /*0x0*/ GuildWarRewardDetailPopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SContribution> <>9__15_0;

        static /*0xf73b60*/ <>c();
        /*0xf73bc0*/ <>c();
        /*0xf73bc8*/ bool <InitializePopup_Rank>b__15_0(PTShare.Define.SContribution x);
    }
}

class GuildWarRewardPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_rankParent;
    /*0x48*/ UnityEngine.GameObject m_rewardParent;
    /*0x50*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggles;
    /*0x58*/ ScrollContent_GuildWarRewardEntity m_ScrollContent;
    /*0x60*/ ScrollContent_GuildWarRewardDetailEntity m_ScrollContent_Rank;
    /*0x68*/ GuildWarRewardEntity m_MyRank;
    /*0x70*/ GuildWarRewardDetailEntity m_MyContributionRank;
    /*0x78*/ GuildWarSeasonTime m_SeasonText;
    /*0x80*/ int nContributionRewardIndex;
    /*0x88*/ System.Collections.Generic.List<PTShare.Define.SContribution> liContribution;
    /*0x90*/ TableData.TableData_Guildwarrank currentRankTableData;

    /*0x10f3e3c*/ GuildWarRewardPopup();
    /*0x10f3370*/ void OnCreate();
    /*0x10f3374*/ void OnDelete();
    /*0x10f3378*/ void OnEnter();
    /*0x10f35bc*/ void OnFinish();
    /*0x10f35c0*/ void OnLeave();
    /*0x10f3720*/ void OnStart();
    /*0x10f3724*/ void OnExit();
    /*0x10f37a0*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> get_GuildWarRanks();
    /*0x10f37fc*/ void InitializePopup(int _nRewardIndex, System.Collections.Generic.List<PTShare.Define.SContribution> _liContribution);
    /*0x10f3998*/ void InitializeToggles();
    /*0x10f3be8*/ void HandlerScrollContent(int nIndex, GuildWarRewardEntity entity);
    /*0x10f3ca0*/ void HandlerScrollContent_Rank(int nIndex, GuildWarRewardDetailEntity entity);
    /*0x10f3d88*/ void OnEndTimeCallback();
    /*0x10f3e44*/ void <InitializeToggles>b__21_1(bool _on);
    /*0x10f4008*/ void <InitializeToggles>b__21_2(bool _on);
    /*0x10f43bc*/ bool <InitializeToggles>b__21_4(TableData.TableData_Guildwarrank x);
    /*0x10f43e0*/ void <OnEndTimeCallback>b__24_0();

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int nReward;

        /*0xf73e1c*/ <>c__DisplayClass21_0();
        /*0xf73e24*/ bool <InitializeToggles>b__3(TableData.TableData_Guildwarrank x);
    }

    class <>c
    {
        static /*0x0*/ GuildWarRewardPopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.UI.Toggle> <>9__21_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SContribution> <>9__21_5;
        static /*0x18*/ System.Predicate<PTShare.Define.SContribution> <>9__21_6;

        static /*0xf73c60*/ <>c();
        /*0xf73cc0*/ <>c();
        /*0xf73cc8*/ void <InitializeToggles>b__21_0(UnityEngine.UI.Toggle x);
        /*0xf73cec*/ bool <InitializeToggles>b__21_5(PTShare.Define.SContribution x);
        /*0xf73d84*/ bool <InitializeToggles>b__21_6(PTShare.Define.SContribution x);
    }
}

class GuildWarUnsetHeroPopup : GuiBase
{
    /*0x40*/ LocalizeString m_desc;
    /*0x48*/ HeroSlotInventory m_beforeSlot;
    /*0x50*/ HeroSlotInventory m_afterSlot;
    /*0x58*/ ScrollContent_HeroGuildWarUnSelectHeroSlot m_scrollContent;
    /*0x60*/ UnityEngine.UI.Button m_confirmBtn;
    /*0x68*/ System.Action<PTShare.Define.SLegionHero> onConfirmCallback;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> listHero;
    /*0x78*/ PTShare.Define.SLegionHero selectHero;
    /*0x80*/ PTShare.Define.GuildWarPosition eEditPosition;

    /*0x10f5d30*/ GuildWarUnsetHeroPopup();
    /*0x10f50d8*/ void OnCreate();
    /*0x10f50dc*/ void OnDelete();
    /*0x10f5198*/ void OnEnter();
    /*0x10f528c*/ void OnFinish();
    /*0x10f5290*/ void OnLeave();
    /*0x10f534c*/ void OnStart();
    /*0x10f5350*/ void InitializePopup(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SLegionHero hero, System.Collections.Generic.List<PTShare.Define.SLegionHero> list, System.Action<PTShare.Define.SLegionHero> onResult);
    /*0x10f56a4*/ void InitializeScroll();
    /*0x10f5794*/ void HandlerScrollContent(int nIndex, HeroGuildWarUnSelectHeroSlot slot);
    /*0x10f58f4*/ void OnClick_Confirm();
    /*0x10f5a34*/ void OnSelectCallback(PTShare.Define.SHero _hero);
    /*0x10f5bc8*/ void HeroGuildWarUnSelectHeroSlot_onLongPressEvent(PTShare.Define.SHero _hero);
    /*0x10f5d40*/ bool <OnClick_Confirm>b__18_0(PTShare.Define.SLegionHero x);

    class <>c__DisplayClass19_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf74640*/ <>c__DisplayClass19_0();
        /*0xf74648*/ bool <OnSelectCallback>b__0(PTShare.Define.SLegionHero x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf74678*/ <>c__DisplayClass20_0();
        /*0xf74680*/ bool <HeroGuildWarUnSelectHeroSlot_onLongPressEvent>b__0(PTShare.Define.SLegionHero x);
    }
}

class HeroArtifactPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnUpgradeEvent;
    /*0x40*/ UnityEngine.Transform m_ArtifactParent;
    /*0x48*/ ArtifactUpgradeResult m_ArtifactUpgradeParent;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_ArtifactSkel;
    /*0x58*/ ParticleBase m_ArtifactEf01;
    /*0x60*/ ParticleBase m_ArtifactEf02;
    /*0x68*/ AtlasImage m_ArtifactIcon;
    /*0x70*/ LocalizeString m_ArtifactName;
    /*0x78*/ LocalizeString m_EffectTitle;
    /*0x80*/ LocalizeString m_EffectDesc;
    /*0x88*/ UnityEngine.UI.Button m_UpgradeButton;
    /*0x90*/ ArtifactUpgradeStatusGroup m_UpgradeStatusGroup;
    /*0x98*/ UnityEngine.GameObject m_MaxUpgradeDesc;
    /*0xa0*/ UnityEngine.GameObject m_MaterialParent;
    /*0xa8*/ UnityEngine.GameObject m_Arrow;
    /*0xb0*/ System.Collections.Generic.List<ArtifactMaterial> m_liArtifactMaterial;
    /*0xb8*/ PTShare.Define.SHero heroInfo;
    /*0xc0*/ PTShare.Define.SArtifact artifactInfo;
    /*0xc8*/ TableData.TableData_Equipment equipData;
    /*0xd0*/ TableData.TableData_Artifact maxArtifactData;
    /*0xd8*/ System.Collections.Generic.List<Rewards> liNeedRewards;
    /*0xe0*/ bool bAnimationPlaying;

    static /*0x1104764*/ HeroArtifactPopup();
    static /*0x1103554*/ void add_OnUpgradeEvent(System.Action<PTShare.Define.SHero> value);
    static /*0x1103648*/ void remove_OnUpgradeEvent(System.Action<PTShare.Define.SHero> value);
    /*0x110475c*/ HeroArtifactPopup();
    /*0x110373c*/ void OnCreate();
    /*0x1103740*/ void OnDelete();
    /*0x1103744*/ void OnEnter();
    /*0x1103748*/ void OnFinish();
    /*0x110374c*/ void OnLeave();
    /*0x110386c*/ void OnStart();
    /*0x1103870*/ void OnExit();
    /*0x11038e8*/ void InitializePopup(PTShare.Define.SHero hero);
    /*0x1103fb4*/ void SetArtifactSkel(string anim, bool loop);
    /*0x1103ff4*/ void OnClick_Upgrade();
    /*0x11041a4*/ void OnUpgradeCallback(PTShare.Define.SHero hero);
    /*0x11044a8*/ void OnCompleteResult();
    /*0x110467c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x1104680*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x110443c*/ System.Collections.IEnumerator CoAnimationUpdate();
    /*0x1104768*/ void <OnCompleteResult>b__35_0();

    class <CoAnimationUpdate>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroArtifactPopup <>4__this;
        /*0x28*/ UnityEngine.Vector3 <pos>5__2;
        /*0x38*/ Spine.Bone <bone>5__3;

        /*0x1057c4c*/ <CoAnimationUpdate>d__38(int <>1__state);
        /*0x1057c78*/ void System.IDisposable.Dispose();
        /*0x1057c7c*/ bool MoveNext();
        /*0x1057da0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1057da8*/ void System.Collections.IEnumerator.Reset();
        /*0x1057de8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroDismissAllSelectPopup : GuiBase
{
    /*0x40*/ HeroSlot[] m_dismissSlots;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_tableList;
    /*0x50*/ System.Collections.Generic.List<bool> m_selectList;
    /*0x58*/ System.Action<System.Collections.Generic.List<PropertyType>> m_callBack;

    /*0xf3081c*/ HeroDismissAllSelectPopup();
    /*0xf30110*/ void OnCreate();
    /*0xf30114*/ void OnDelete();
    /*0xf30118*/ void OnEnter();
    /*0xf3011c*/ void OnFinish();
    /*0xf30120*/ void OnLeave();
    /*0xf30124*/ void OnStart();
    /*0xf30128*/ void OnExit();
    /*0xf301a4*/ void InitPopup(System.Action<System.Collections.Generic.List<PropertyType>> callback);
    /*0xf30418*/ void HandleClickEvent(TableData.TableData_Unitbase tableData);
    /*0xf306ac*/ void OnClickSelect();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ TableData.TableData_Unitbase tableData;

        /*0x10582a8*/ <>c__DisplayClass12_0();
        /*0x10582b0*/ bool <HandleClickEvent>b__0(TableData.TableData_Unitbase f);
    }
}

class HeroDismissConfirmPopup : GuiBase
{
    /*0x40*/ ItemRewardGroup m_rewardGroup;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHero> herolist;
    /*0x50*/ PTShare.Define.SProperty rewards;

    /*0xf30cac*/ HeroDismissConfirmPopup();
    /*0xf308d4*/ void OnCreate();
    /*0xf308d8*/ void OnDelete();
    /*0xf308dc*/ void OnEnter();
    /*0xf308e0*/ void OnFinish();
    /*0xf308e4*/ void OnLeave();
    /*0xf308e8*/ void OnStart();
    /*0xf308ec*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SHero> list);
    /*0xf30b30*/ void OnClick_Confirm();
    /*0xf30c24*/ int GetDismissMinGradeAmount(int grade);
    /*0xf30d10*/ void <OnClick_Confirm>b__10_0();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HeroDismissConfirmPopup <>4__this;
        /*0x18*/ System.Collections.Generic.List<Rewards> configReward;

        /*0x10582e0*/ <>c__DisplayClass9_0();
        /*0x10582e8*/ void <InitializePopup>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass9_1
    {
        /*0x10*/ int count;
        /*0x18*/ HeroDismissConfirmPopup.<> CS$<>8__locals1;

        /*0x105842c*/ <>c__DisplayClass9_1();
        /*0x1058434*/ void <InitializePopup>b__1(Rewards y);
    }
}

class HeroFastLevelPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnOutputCallbackEvent;
    /*0x40*/ HeroNeedItemWindow m_NeedMaterial;
    /*0x48*/ HeroSlotInventory m_SlotInfo;
    /*0x50*/ LocalizeString m_BeforeLevel;
    /*0x58*/ LocalizeString m_AfterLevel;
    /*0x60*/ PTShare.Define.SHero heroInfo;
    /*0x68*/ int nLevelCount;

    static /*0xf33f34*/ HeroFastLevelPopup();
    static /*0xf33810*/ void add_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf33904*/ void remove_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf33f2c*/ HeroFastLevelPopup();
    /*0xf339f8*/ void OnCreate();
    /*0xf339fc*/ void OnDelete();
    /*0xf33a60*/ void OnEnter();
    /*0xf33a64*/ void OnFinish();
    /*0xf33a68*/ void OnLeave();
    /*0xf33a6c*/ void OnStart();
    /*0xf2f564*/ void InitializePopup(PTShare.Define.SHero _hero, System.Collections.Generic.List<Rewards> _rewards, int _nLevelCount);
    /*0xf33a70*/ void OnClick_Levelup();
    /*0xf33b94*/ void CallBackSuccessLevelUp(PTShare.Define.SHero _hero);
}

class HeroLevelResultPopup : GuiBase
{
    /*0x40*/ LocalizeString m_BefTotal;
    /*0x48*/ LocalizeString m_BefLevel;
    /*0x50*/ LocalizeString m_BefAttack;
    /*0x58*/ LocalizeString m_BefDefense;
    /*0x60*/ LocalizeString m_BefHealth;
    /*0x68*/ LocalizeString m_AftTotal;
    /*0x70*/ LocalizeString m_AftLevel;
    /*0x78*/ LocalizeString m_AftAttack;
    /*0x80*/ LocalizeString m_AftDefense;
    /*0x88*/ LocalizeString m_AftHealth;
    /*0x90*/ HeroSkillupWindow m_SkillWindow;
    /*0x98*/ UnityEngine.GameObject m_EffectParent;
    /*0xa0*/ UnityEngine.GameObject m_WindowParent;
    /*0xa8*/ UnityEngine.GameObject m_LevelText;
    /*0xb0*/ ParticleBase m_LevelEffect;
    /*0xb8*/ Spine.Unity.SkeletonGraphic m_LevelSpine;
    /*0xc0*/ PTShare.Define.SHero m_HeroInfo;
    /*0xc8*/ TableData.TableData_Unitgradelv m_GradelvInfo;
    /*0xd0*/ Battle.CharacterStat m_CurStatInfo;
    /*0xd8*/ Battle.CharacterStat m_NextStatInfo;
    /*0xe0*/ bool m_isPlayingAnimate;
    /*0xe8*/ System.Collections.IEnumerator m_ieAnimate;

    /*0xf3dad8*/ HeroLevelResultPopup();
    /*0xf3d854*/ void OnCreate();
    /*0xf3d858*/ void OnDelete();
    /*0xf3d85c*/ void OnEnter();
    /*0xf3d864*/ void OnStart();
    /*0xf3d868*/ void OnFinish();
    /*0xf3d86c*/ void OnLeave();
    /*0xf3d870*/ void OnExit();
    /*0xf33ca8*/ void Initalize(PTShare.Define.SHero _hero, int _nOffsetLevel);
    /*0xf3d9a8*/ void SetText(LocalizeString _str, string _val);
    /*0xf3d9c0*/ string GetStat(Battle.CharacterStat _stat, Battle.CharacterStat.StatType _type);
    /*0xf3d980*/ string GetTotalPower(Battle.CharacterStat _stat);
    /*0xf3d9f8*/ void SetActiveEffect(bool _bWinParent, bool _bEftParent, bool _bLvParent);
    /*0xf3d900*/ void PlayAnimate();
    /*0xf3da6c*/ System.Collections.IEnumerator CoAnimate();

    class <CoAnimate>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroLevelResultPopup <>4__this;

        /*0x105a9e8*/ <CoAnimate>d__35(int <>1__state);
        /*0x105aa14*/ void System.IDisposable.Dispose();
        /*0x105aa18*/ bool MoveNext();
        /*0x105ac38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105ac40*/ void System.Collections.IEnumerator.Reset();
        /*0x105ac80*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum HeroManageWindowType
{
    NONE = 0,
    MANAGE = 1,
    BOOK = 2,
    MERCENARY = 3,
    MAZE = 4,
    GACHA = 5,
    DUNGEON = 6,
}

class HeroManagePopup : GuiBase
{
    static /*0x0*/ System.Action OnChangeAllHeroEvent;
    static /*0x8*/ System.Action<PTShare.Define.SHero> OnChangeSingleHeroEvent;
    static /*0x10*/ int lastUnitID;
    /*0x40*/ HeroNameWindow m_cHeroNameWindow;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_Illust;
    /*0x58*/ AtlasImage m_LockIcon;
    /*0x60*/ AtlasImage m_IllustViewIcon;
    /*0x68*/ UnityEngine.UI.Image m_Background;
    /*0x70*/ UnityEngine.UI.Image m_frame;
    /*0x78*/ UnityEngine.UI.Image m_Slot;
    /*0x80*/ ParticleBase m_levelParticle;
    /*0x88*/ HeroEquipmentWindow m_cEquipmentGroup;
    /*0x90*/ HeroSkillWindow m_cSkillGroup;
    /*0x98*/ HeroStatusWindow m_cStatusGroup;
    /*0xa0*/ HeroButtonWindow m_cButtonGroup;
    /*0xa8*/ HeroMercenaryWindow m_cMercenaryGroup;
    /*0xb0*/ System.Collections.Generic.List<BottomMenuBase> m_liBottomMenu;
    /*0xb8*/ UnityEngine.GameObject m_ArrowParent;
    /*0xc0*/ UnityEngine.GameObject m_LockParent;
    /*0xc8*/ UnityEngine.GameObject m_CharacterPoint;
    /*0xd0*/ UnityEngine.GameObject m_AbilityParent;
    /*0xd8*/ AtlasImage m_StoryRedDot;
    /*0xe0*/ HeroManageTooltip m_Tooltip;
    /*0xe8*/ UnityEngine.GameObject[] m_skillIcons;
    /*0xf0*/ HEROGRADE[] m_arrBookListGrade;
    /*0xf8*/ int m_nCurIndex;
    /*0xfc*/ int m_nPropertyType;
    /*0x100*/ PTShare.Define.SStatBonus m_statBonus;
    /*0x108*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_liUnitBook;
    /*0x110*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liMercenary;
    /*0x118*/ System.Collections.Generic.List<ConditionHeroData> m_liConditionHero;
    /*0x120*/ HeroManageWindowType m_eWindowType;
    /*0x124*/ HeroManagePopup.HeroMenuType m_eMenuType;
    /*0x128*/ PTShare.Define.SHero m_HeroInfo;
    /*0x130*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x138*/ TableData.TableData_Unitgradelv m_GradelvInfo;
    /*0x140*/ int m_enterHeroLv;
    /*0x144*/ bool m_bLeave;
    /*0x145*/ bool m_bIllustView;
    /*0x148*/ ShaderChanger_Dissolve m_illustDissolve;

    static /*0xf45a68*/ HeroManagePopup();
    static /*0xf38d0c*/ void add_OnChangeAllHeroEvent(System.Action value);
    static /*0xf38e00*/ void remove_OnChangeAllHeroEvent(System.Action value);
    static /*0xf2fe34*/ void add_OnChangeSingleHeroEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2ffdc*/ void remove_OnChangeSingleHeroEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf45968*/ HeroManagePopup();
    /*0xf3fd34*/ TableData.TableData_Unitbase get_baseInfo();
    /*0xf3fd3c*/ void set_baseInfo(TableData.TableData_Unitbase value);
    /*0xf3fdc0*/ PTShare.Define.SHero GetHero();
    /*0xf3fdc8*/ bool IsUnEquipSignature();
    /*0xf3fdd8*/ void OnCreate();
    /*0xf3fddc*/ void OnEnter();
    /*0xf3fea0*/ void OnStart();
    /*0xf3fea4*/ void OnFinish();
    /*0xf3fea8*/ void OnLeave();
    /*0xf400e4*/ void OnDelete();
    /*0xf40948*/ void OnExit();
    /*0xf3feac*/ void Leave();
    /*0xf40b68*/ void ImportEvent();
    /*0xf4015c*/ void DeleteEvent();
    /*0xf396e4*/ void InitalizeHero(PTShare.Define.SHero _hero, int _type, bool _bLeave, bool _bViewArrow);
    /*0xf419f4*/ void InitalizeHero_Dungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus, int _type, bool _bLeave, bool _bViewArrow);
    /*0xf41534*/ void InitalizeHero(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _sStatBonus, bool _initalize);
    /*0xf42650*/ void InitalizeHeroNoVoice(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _sStatBonus, bool _initalize);
    /*0xf2cb10*/ void InitalizeBook(TableData.TableData_Unitbase _base, bool _viewArrow);
    /*0xf42ad8*/ void InitalizeBook(TableData.TableData_Unitbase _base);
    /*0xf42900*/ void InitalizeUnitList();
    /*0xf42ff8*/ void InitializeMercenary(long _playerid, PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, bool _exceptionMercenary);
    /*0xf43138*/ void InitializeMercenary(long _playerid, PTShare.Define.SHero _hero, System.Collections.Generic.List<PTShare.Define.SHero> _arrowList, PTShare.Define.SStatBonus _statbonus, bool _exceptionMercenary);
    /*0xf43458*/ void InitializeGuildWarTroop(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus);
    /*0xf43584*/ void ChangeMercenary(PTShare.Define.SHero _hero);
    /*0xf4366c*/ void InitalizeMaze(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, bool _bViewArrow);
    /*0xf43844*/ void InitalizeMaze(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus);
    /*0xf43938*/ void InitalizeDungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, bool _bViewArrow);
    /*0xf43b10*/ void InitalizeDungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus);
    /*0xf43c04*/ void InitalizeInfo(TableData.TableData_Unitbase _base, int grade);
    /*0xf43e84*/ void InitalizeInfo(TableData.TableData_Skinbasic _skin);
    /*0xf43c9c*/ void InitalizeInfo(PTShare.Define.SHero _hero);
    /*0xf44000*/ void HandlerRefreshStoryRedDot();
    /*0xf44004*/ void HandlerEquipmentHero(PTShare.Define.SHero _hero);
    /*0xf44248*/ void HandlerLevelupHero(PTShare.Define.SHero _hero);
    /*0xf44380*/ void HandlerUnEquipEvent(PTShare.Define.SEquip _equip);
    /*0xf44498*/ void HandlerUnEquipArtifactEvent(PTShare.Define.SHero _hero);
    /*0xf44524*/ void HandlerChangeEquipment(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0xf445a0*/ void HandlerChangeSignature(int _heroId);
    /*0xf4467c*/ void HandlerPromoteEquipment(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0xf44724*/ void HandlerChangeSkin();
    /*0xf4449c*/ void CallbackUnequipHero(PTShare.Define.SHero _hero);
    /*0xf447c4*/ void HandlerReturnMercenary();
    /*0xf447d0*/ void OnClickLockButton();
    /*0xf448e4*/ void CallbackLockEvent(PTShare.Define.SHero _hero);
    /*0xf44a8c*/ void OnClickArrow(bool _isLeft);
    /*0xf417ec*/ void OnEnableEquipment();
    /*0xf42030*/ void RefreshEquipGroup(bool isEquipEffect);
    /*0xf42ee8*/ void OnEnableSkill();
    /*0xf4205c*/ void RefreshSkillGroup();
    /*0xf44e58*/ void SetActiveButton(HeroManagePopup.HeroMenuType _type);
    /*0xf44f70*/ void ClearActiveContents();
    /*0xf42574*/ void SetActiveBottomMenu(HeroManagePopup.HeroMenuType[] _type);
    /*0xf42498*/ void SetDeActiveBottomMenu(HeroManagePopup.HeroMenuType[] _type);
    /*0xf4135c*/ void SetActiveContents();
    /*0xf450e8*/ void InitalizeCharacter(TableData.TableData_Unitbase unitbase);
    /*0xf41aa8*/ void SetBackground(int _index);
    /*0xf41d34*/ void SetFrame(int initGrade);
    /*0xf41f48*/ void SetLockIcon(int _index);
    /*0xf4218c*/ void SetIllustView(bool _bEnable);
    /*0xf452b4*/ System.Collections.IEnumerator CoIllustDissolve(float _fSpeed);
    /*0xf42e10*/ void SetHeroInfo();
    /*0xf420bc*/ void SetStoryRedDot();
    /*0xf45330*/ void OnClickDemo();
    /*0xf453b0*/ void OnClickCharacter();
    /*0xf45448*/ void OnClickStory();
    /*0xf45504*/ void OnClickIllustViewer();
    /*0xf4551c*/ void OnClickCamera();
    /*0xf45668*/ void OnClickSkin();
    /*0xf45700*/ void OnClickAbility();
    /*0xf40ac8*/ void ClearStatusUI();
    /*0xf3fe54*/ void StopParticle();
    /*0xf44328*/ void ViewLevelUpParticle();
    /*0xf44d7c*/ PTShare.Define.SHero GetAnotherHero(bool _isPrevious);
    /*0xf42fc4*/ System.Collections.Generic.List<TableData.TableData_Unitbase> GetSortGradeUnit(HEROGRADE _type);
    /*0xf45848*/ void SortUnitList(System.Collections.Generic.List<TableData.TableData_Unitbase> _liUnit);
    /*0xf43f28*/ System.Collections.IEnumerator CoCharacterEnter();
    /*0xf43f94*/ System.Collections.IEnumerator CoCharacterSkill();
    /*0xf418ac*/ void PlayHeroVoice();
    /*0xf440d4*/ void ShowEquipChangeStatEffect(PTShare.Define.SHero oldHero, PTShare.Define.SHero newHero);
    /*0xf455fc*/ System.Collections.IEnumerator CoPermission();
    /*0xf45a6c*/ bool <InitializeMercenary>b__69_1(PTShare.Define.SHero x);
    /*0xf45a9c*/ void <OnClickAbility>b__116_0();

    enum HeroMenuType
    {
        None = 0,
        Skill = 1,
        Hero = 2,
        Story = 3,
        Demo = 4,
        Camera = 5,
        Skin = 6,
        End = 7,
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ TableData.TableData_Unitbase _base;

        /*0x105c088*/ <>c__DisplayClass65_0();
        /*0x105c090*/ bool <InitalizeBook>b__0(TableData.TableData_Unitbase x);
    }

    class <>c
    {
        static /*0x0*/ HeroManagePopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__67_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SHero> <>9__69_0;
        static /*0x18*/ System.Comparison<TableData.TableData_Unitbase> <>9__122_0;
        static /*0x20*/ System.Func<TableData.TableData_Skillbase, int> <>9__124_0;
        static /*0x28*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__124_1;
        static /*0x30*/ System.Func<bool> <>9__127_0;

        static /*0x105b370*/ <>c();
        /*0x105b3d0*/ <>c();
        /*0x105b3d8*/ bool <InitalizeUnitList>b__67_0(TableData.TableData_Unitbase x);
        /*0x105b490*/ bool <InitializeMercenary>b__69_0(PTShare.Define.SHero x);
        /*0x105b4b0*/ int <SortUnitList>b__122_0(TableData.TableData_Unitbase a, TableData.TableData_Unitbase b);
        /*0x105b508*/ int <CoCharacterSkill>b__124_0(TableData.TableData_Skillbase x);
        /*0x105b520*/ TableData.TableData_Skillbase <CoCharacterSkill>b__124_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
        /*0x105b56c*/ bool <CoPermission>b__127_0();
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105c0c0*/ <>c__DisplayClass72_0();
        /*0x105c0c8*/ bool <InitalizeMaze>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105c100*/ <>c__DisplayClass74_0();
        /*0x105c108*/ bool <InitalizeDungeon>b__0(ConditionHeroData x);
    }

    class <CoIllustDissolve>d__107 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fSpeed;
        /*0x28*/ HeroManagePopup <>4__this;
        /*0x30*/ float <_fTime>5__2;

        /*0x105ca00*/ <CoIllustDissolve>d__107(int <>1__state);
        /*0x105ca2c*/ void System.IDisposable.Dispose();
        /*0x105ca30*/ bool MoveNext();
        /*0x105cb2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105cb34*/ void System.Collections.IEnumerator.Reset();
        /*0x105cb74*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCharacterEnter>d__123 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManagePopup <>4__this;

        /*0x105c140*/ <CoCharacterEnter>d__123(int <>1__state);
        /*0x105c16c*/ void System.IDisposable.Dispose();
        /*0x105c170*/ bool MoveNext();
        /*0x105c450*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105c458*/ void System.Collections.IEnumerator.Reset();
        /*0x105c498*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCharacterSkill>d__124 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManagePopup <>4__this;
        /*0x28*/ int <skillCount>5__2;
        /*0x2c*/ int <i>5__3;

        /*0x105c4a0*/ <CoCharacterSkill>d__124(int <>1__state);
        /*0x105c4cc*/ void System.IDisposable.Dispose();
        /*0x105c4d0*/ bool MoveNext();
        /*0x105c9b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105c9b8*/ void System.Collections.IEnumerator.Reset();
        /*0x105c9f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass127_0
    {
        /*0x10*/ bool bFirst;

        /*0x105b574*/ <>c__DisplayClass127_0();
        /*0x105b57c*/ void <CoPermission>b__1(bool result);
    }

    class <CoPermission>d__127 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManagePopup <>4__this;

        /*0x105cb7c*/ <CoPermission>d__127(int <>1__state);
        /*0x105cba8*/ void System.IDisposable.Dispose();
        /*0x105cbac*/ bool MoveNext();
        /*0x105d044*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105d04c*/ void System.Collections.IEnumerator.Reset();
        /*0x105d08c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroResonanceLevelupPopup : GuiBase
{
    /*0x40*/ HeroSlotInventory m_heroSlot;
    /*0x48*/ LocalizeString m_level;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_levelUpSkeleton;
    /*0x58*/ ParticleBase m_particleEffect;

    /*0x122e4c8*/ HeroResonanceLevelupPopup();
    /*0x122e258*/ void OnCreate();
    /*0x122e25c*/ void OnDelete();
    /*0x122e260*/ void OnEnter();
    /*0x122e264*/ void OnFinish();
    /*0x122e268*/ void OnLeave();
    /*0x122e26c*/ void OnStart();
    /*0x122e270*/ void InitializeWindow(PTShare.Define.SHero _hero);
    /*0x122e45c*/ System.Collections.IEnumerator CoScaleTween();

    class <CoScaleTween>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonanceLevelupPopup <>4__this;

        /*0x1060e9c*/ <CoScaleTween>d__11(int <>1__state);
        /*0x1060ec8*/ void System.IDisposable.Dispose();
        /*0x1060ecc*/ bool MoveNext();
        /*0x1061018*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1061020*/ void System.Collections.IEnumerator.Reset();
        /*0x1061060*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroResonanceRemovePopup : GuiBase
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x40*/ HeroSlotInventory m_BeforeSlot;
    /*0x48*/ HeroSlotInventory m_AfterSlot;
    /*0x50*/ LocalizeString m_BeforeLevel;
    /*0x58*/ LocalizeString m_AfterLevel;
    /*0x60*/ int nHeroid;

    static /*0x122ebe8*/ HeroResonanceRemovePopup();
    static /*0x122e4d0*/ void add_OnConfirmEvent(System.Action value);
    static /*0x122e5c4*/ void remove_OnConfirmEvent(System.Action value);
    /*0x122ebe0*/ HeroResonanceRemovePopup();
    /*0x122e6b8*/ void OnCreate();
    /*0x122e6bc*/ void OnDelete();
    /*0x122e720*/ void OnEnter();
    /*0x122e78c*/ void OnFinish();
    /*0x122e790*/ void OnLeave();
    /*0x122e794*/ void OnStart();
    /*0x122e798*/ void InitializeWindow(PTShare.Define.SResonanceHero _hero);
    /*0x122e9b0*/ void OnClick_Confirm();
    /*0x122ead4*/ void OnClick_Exit();
    /*0x122eb54*/ void CallbackSendPop();
}

class HeroResonanceSelectPopup : GuiBase
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x40*/ HeroInventoryPage_SelectResonance m_ResonancePage;
    /*0x48*/ int nSlotIndex;

    static /*0x122f358*/ HeroResonanceSelectPopup();
    static /*0x122ebec*/ void add_OnConfirmEvent(System.Action value);
    static /*0x122ece0*/ void remove_OnConfirmEvent(System.Action value);
    /*0x122f350*/ HeroResonanceSelectPopup();
    /*0x122edd4*/ void OnCreate();
    /*0x122edd8*/ void OnDelete();
    /*0x122ee3c*/ void OnEnter();
    /*0x122eea8*/ void OnFinish();
    /*0x122eeac*/ void OnLeave();
    /*0x122eeb0*/ void OnStart();
    /*0x122eeb4*/ void OnExit();
    /*0x122ef30*/ void InitializeWindow(int _nSlotIndex);
    /*0x122ef58*/ void OnClick_Confirm();
    /*0x122f26c*/ void CallbackSendPush(PTShare.Define.SHero _hero);
    /*0x122f35c*/ void <OnClick_Confirm>b__13_0(bool result);
}

class HeroResonatingPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_characterListGroup;
    /*0x48*/ CurrencyTopWindow m_CurrencyTopWindow;
    /*0x50*/ ScrollContent_HeroResonanceSlot m_ScrollContent;
    /*0x58*/ LocalizeString m_ResonanceCount;
    /*0x60*/ System.Collections.Generic.List<HeroResonanceCharacter> m_liHeroCharacter;
    /*0x68*/ UnityEngine.UI.Button m_unlimitButton;
    /*0x70*/ UnityEngine.GameObject m_crystalListGroup;
    /*0x78*/ System.Collections.Generic.List<ResonanceCrystalEntity> m_liCrystalEntity;
    /*0x80*/ HeroNeedItemWindow m_needMaterial;
    /*0x88*/ UnityEngine.UI.Button m_levelButton;
    /*0x90*/ UnityEngine.GameObject m_levelGroup;
    /*0x98*/ UnityEngine.GameObject m_cpParent;
    /*0xa0*/ LocalizeString m_cpText;
    /*0xa8*/ LocalizeString m_lvText;
    /*0xb0*/ LocalizeString m_levelBtnText;
    /*0xb8*/ ParticleBase m_unlimitParticle;
    /*0xc0*/ ParticleBase m_levelupParticle;
    /*0xc8*/ AtlasImage m_whiteEffect;
    /*0xd0*/ System.Collections.Generic.List<int> liResonanceSlotSort;
    /*0xd8*/ System.Collections.Generic.List<Rewards> liCrystalMaterials;
    /*0xe0*/ System.Collections.IEnumerator ieCrystalAnim;
    /*0xe8*/ bool bIsPlayingAnimation;

    /*0x1232220*/ HeroResonatingPopup();
    /*0x12302a0*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> get_liResonanceHero();
    /*0x1230320*/ int get_nOpenResonanceCount();
    /*0x12303a0*/ int get_nHeroTableCount();
    /*0x12303f8*/ void OnCreate();
    /*0x12303fc*/ void OnDelete();
    /*0x1230400*/ void OnEnter();
    /*0x12307bc*/ void OnFinish();
    /*0x12307c0*/ void OnLeave();
    /*0x1230a38*/ void OnStart();
    /*0x1230a3c*/ void OnExit();
    /*0x1230b28*/ void InitializeWindow();
    /*0x1231298*/ void InitializeCrystal();
    /*0x1231004*/ void InitializeScroll(bool _bResetScroll);
    /*0x1231760*/ void HandlerScrollContent(int _nIndex, HeroResonanceSlot _obj);
    /*0x1230f2c*/ void SetView();
    /*0x1231360*/ void SetResonanceCharacter();
    /*0x12314b0*/ void RefreshLevelText();
    /*0x12311f4*/ void RefreshTotalPower();
    /*0x12316c8*/ void RefreshMaterial();
    /*0x123188c*/ void OnClick_Help();
    /*0x123198c*/ void OnClick_Unlimit();
    /*0x1231b90*/ void OnClick_LevelUp();
    /*0x1231df0*/ void OnClick_IncreaseSlot();
    /*0x1231ec0*/ void OnClick_Ability();
    /*0x12312bc*/ void InitializeCrystalAnims();
    /*0x1232028*/ System.Collections.IEnumerator CoCrystalAnim();
    /*0x1232094*/ void InitializeCrystalUnlimitAnims();
    /*0x12320e8*/ System.Collections.IEnumerator CoCrystalUnlimitAnim();
    /*0x1232154*/ void HandlerChangeSlotEvent();
    /*0x1232184*/ void HandlerChangeHeroEvent(PTShare.Define.SHero hero);
    /*0x12322d8*/ void <OnExit>b__34_0();
    /*0x12322e0*/ void <OnClick_Unlimit>b__45_0(bool ok);
    /*0x1232418*/ void <OnClick_LevelUp>b__46_0();
    /*0x12325bc*/ void <OnClick_LevelUp>b__46_1();
    /*0x1232668*/ void <OnClick_IncreaseSlot>b__47_0();
    /*0x123274c*/ void <OnClick_IncreaseSlot>b__47_1();

    class <>c__DisplayClass37_0
    {
        /*0x10*/ int i;

        /*0x1061604*/ <>c__DisplayClass37_0();
        /*0x106160c*/ bool <InitializeScroll>b__0(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ int count;
        /*0x18*/ HeroResonatingPopup <>4__this;

        /*0x1061630*/ <>c__DisplayClass46_0();
        /*0x1061638*/ void <OnClick_LevelUp>b__2();
    }

    class <>c
    {
        static /*0x0*/ HeroResonatingPopup.<> <>9;
        static /*0x8*/ System.Action <>9__48_0;
        static /*0x10*/ System.Action<ResonanceCrystalEntity> <>9__50_0;

        static /*0x10614dc*/ <>c();
        /*0x106153c*/ <>c();
        /*0x1061544*/ void <OnClick_Ability>b__48_0();
        /*0x10615d8*/ void <CoCrystalAnim>b__50_0(ResonanceCrystalEntity x);
    }

    class <CoCrystalAnim>d__50 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonatingPopup <>4__this;
        /*0x28*/ float <fTime>5__2;

        /*0x1061720*/ <CoCrystalAnim>d__50(int <>1__state);
        /*0x106174c*/ void System.IDisposable.Dispose();
        /*0x1061750*/ bool MoveNext();
        /*0x1061b94*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1061b9c*/ void System.Collections.IEnumerator.Reset();
        /*0x1061bdc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCrystalUnlimitAnim>d__52 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonatingPopup <>4__this;
        /*0x28*/ float <fTime>5__2;
        /*0x2c*/ int <i>5__3;

        /*0x1061be4*/ <CoCrystalUnlimitAnim>d__52(int <>1__state);
        /*0x1061c10*/ void System.IDisposable.Dispose();
        /*0x1061c14*/ bool MoveNext();
        /*0x1062094*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106209c*/ void System.Collections.IEnumerator.Reset();
        /*0x10620dc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroSkillupPopup : GuiBase
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ LocalizeString m_TotalPower;
    /*0x50*/ HeroSkillupWindow m_SkillupWindow;
    /*0x58*/ HeroNeedItemWindow m_NeedItemGroup;
    /*0x60*/ PTShare.Define.SHero m_HeroInfo;
    /*0x68*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x70*/ TableData.TableData_Unitlv m_UnitlvInfo;

    static /*0x12355ec*/ HeroSkillupPopup();
    static /*0x1234f30*/ void add_OnConfirmEvent(System.Action value);
    static /*0x1235024*/ void remove_OnConfirmEvent(System.Action value);
    /*0x12355e4*/ HeroSkillupPopup();
    /*0x1235118*/ void OnCreate();
    /*0x123511c*/ void OnDelete();
    /*0x1235180*/ void OnEnter();
    /*0x1235184*/ void OnStart();
    /*0x1235188*/ void OnFinish();
    /*0x123518c*/ void OnLeave();
    /*0x1235190*/ void OnExit();
    /*0x123520c*/ void InitalizeHeroSkill(PTShare.Define.SHero _hero);
    /*0x123539c*/ void SetTitle(string _str);
    /*0x12352f4*/ void SetTotalPower();
    /*0x1235520*/ void OnConfirm();
    /*0x1235494*/ long GetPlusTotalPower();
}

class HeroSkinPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_Parent;
    /*0x48*/ UnityEngine.GameObject m_FrontGround;
    /*0x50*/ UnityEngine.CanvasGroup m_LetterBoxCanvas;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_DoorSkeleton;
    /*0x60*/ Spine.Unity.SkeletonGraphic m_SkinGraphic;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_SDMirrorGraphic;
    /*0x70*/ Spine.Unity.SkeletonGraphic m_SDGraphic;
    /*0x78*/ System.Collections.Generic.List<SkinInfoSlot> m_liSkinInfoSlot;
    /*0x80*/ LocalizeString m_SkinName;
    /*0x88*/ UnityEngine.UI.Button m_EquipButton;
    /*0x90*/ UnityEngine.UI.Button m_BuyButton;
    /*0x98*/ LocalizeString m_EquipBtnText;
    /*0xa0*/ LocalizeString m_BuyBtnText;
    /*0xa8*/ PTShare.Define.SHero heroInfo;
    /*0xb0*/ System.Collections.Generic.List<TableData.TableData_Unitbase> liSkinUnitInfo;
    /*0xb8*/ TableData.TableData_Unitbase unitBaseInfo;
    /*0xc0*/ bool bIsPlayingAnimation;
    /*0xc4*/ int nCurrentIndex;
    /*0xc8*/ bool bIsBuy;
    /*0xc9*/ bool bIsBook;

    /*0x126a778*/ HeroSkinPopup();
    /*0x126875c*/ void OnCreate();
    /*0x1268760*/ void OnDelete();
    /*0x1268764*/ void OnEnter();
    /*0x1268768*/ void OnFinish();
    /*0x126876c*/ void OnLeave();
    /*0x1268914*/ void OnStart();
    /*0x1268918*/ void OnExit();
    /*0x1268b14*/ void InitializeSkin(TableData.TableData_Unitbase unitBase, bool initialize, bool isBook);
    /*0x12693ac*/ void InitializeFastSkin(TableData.TableData_Unitbase unitBase, int nIndex, bool isBook);
    /*0x1268cf8*/ void OnInitializeAnimation();
    /*0x12689a4*/ void OnExitAnimation();
    /*0x12696b8*/ void AnimationState_CompleteOpen(Spine.TrackEntry trackEntry);
    /*0x12696f0*/ void AnimationState_CompleteClose(Spine.TrackEntry trackEntry);
    /*0x1269778*/ void AnimationState_EventOpen(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x126980c*/ void AnimationState_EventClose(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x1269628*/ System.Collections.IEnumerator CoLetterAlpha(float fMaximumTime, bool bIsUp);
    /*0x1268c94*/ void Release();
    /*0x1268f00*/ void RefreshSkeleton();
    /*0x1269944*/ void SetSkeleton(Spine.Unity.SkeletonGraphic graphics, Spine.Unity.SkeletonDataAsset asset);
    /*0x12690c0*/ void RefreshSkinSlot();
    /*0x1269a5c*/ void RefreshButton();
    /*0x1269e0c*/ void OnSlotClickCallback(int unitID);
    /*0x1269f50*/ void OnClick_Arrow(bool bIsLeft);
    /*0x126a030*/ void OnClick_Equip();
    /*0x126a2d8*/ void OnClick_Buy();
    /*0x126a444*/ void OnClick_Experience();
    /*0x126a514*/ void OnEquipCallback();
    /*0x126a6d8*/ void OnBuyCallback(bool isBuy);
    /*0x126a5b0*/ void PlayHeroVoice();
    /*0x126a780*/ bool <InitializeSkin>b__27_0(TableData.TableData_Unitbase x);
    /*0x126a7bc*/ bool <InitializeFastSkin>b__28_0(TableData.TableData_Unitbase x);

    class <CoLetterAlpha>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool bIsUp;
        /*0x28*/ HeroSkinPopup <>4__this;
        /*0x30*/ float fMaximumTime;
        /*0x34*/ float <fTime>5__2;

        /*0x106354c*/ <CoLetterAlpha>d__35(int <>1__state);
        /*0x1063578*/ void System.IDisposable.Dispose();
        /*0x106357c*/ bool MoveNext();
        /*0x10636ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10636b4*/ void System.Collections.IEnumerator.Reset();
        /*0x10636f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ int unitID;

        /*0x1063520*/ <>c__DisplayClass41_0();
        /*0x1063528*/ bool <OnSlotClickCallback>b__0(TableData.TableData_Unitbase x);
    }
}

class HeroStatusInfomationPopup : GuiBase
{
    /*0x40*/ StatusInfomationSubWindow m_StatusWindow;

    /*0x126efe8*/ HeroStatusInfomationPopup();
    /*0x126eec8*/ void OnCreate();
    /*0x126eecc*/ void OnDelete();
    /*0x126eed0*/ void OnEnter();
    /*0x126ef3c*/ void OnFinish();
    /*0x126ef40*/ void OnLeave();
    /*0x126ef44*/ void OnStart();
    /*0x126ef48*/ void OnExit();
    /*0x126efc4*/ void InitializePopup(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
}

class HeroTroopPopup_GuildWar : HeroTroopPopup_New
{
    /*0x188*/ BattleGuildWarTopUI m_BattleTopUI;
    /*0x190*/ TroopCharacterViewGroup_New m_AllyGroup_Support;
    /*0x198*/ UnityEngine.RectTransform m_TopUnitViewTrans;
    /*0x1a0*/ UnityEngine.GameObject m_goMainSelectButtonImage;
    /*0x1a8*/ UnityEngine.GameObject m_goSupportSelectButtonImage;
    /*0x1b0*/ UnityEngine.GameObject m_goMainSelectButton;
    /*0x1b8*/ UnityEngine.GameObject m_goSupportSelectButton;
    /*0x1c0*/ UnityEngine.GameObject m_goFormationSelectButton;
    /*0x1c8*/ UnityEngine.GameObject m_goAutoTroopButton;
    /*0x1d0*/ UnityEngine.GameObject m_goEmptyAllButton;
    /*0x1d8*/ UIScreenEffectSpine m_ScreenFadeSpine;
    /*0x1e0*/ UnityEngine.UI.Text m_UnitCountText_Ally;
    /*0x1e8*/ UnityEngine.UI.Text m_UnitCountText_Enemy;
    /*0x1f0*/ UnityEngine.GameObject m_goSupportButtonRedDot;
    /*0x1f8*/ System.Collections.Generic.List<int> CurTableIDList_Support;
    /*0x200*/ System.Collections.Generic.List<int> CurHeroIDList_Support;
    /*0x208*/ System.Collections.Generic.List<long> CurPlayerIDList_Support;
    /*0x210*/ System.Collections.Generic.List<int> m_lisFormationIndex;
    /*0x218*/ System.Collections.Generic.List<int> m_lisFormationClass;
    /*0x220*/ TableData.TableData_Guildwartactic m_tFormationData;
    /*0x228*/ PTShare.Define.GuildWarPosition m_eDeckPositionType;
    /*0x22c*/ bool m_bSupportMode;
    /*0x22d*/ bool <IsTroopCaptain>k__BackingField;
    /*0x230*/ int m_nCurrentFormationID;
    /*0x234*/ bool m_bMemorizeSupportMode;
    /*0x235*/ bool m_bSupportModeChanging;

    /*0x1276f08*/ HeroTroopPopup_GuildWar();
    /*0x12702c4*/ System.Collections.Generic.List<int> get_CurTableIDList();
    /*0x12702e0*/ System.Collections.Generic.List<int> get_CurHeroIDList();
    /*0x12702fc*/ System.Collections.Generic.List<long> get_CurPlayerIDList();
    /*0x1270318*/ TroopCharacterViewGroup_New get_m_CurrentAllyGroup();
    /*0x1270334*/ bool get_IsTroopCaptain();
    /*0x127033c*/ void set_IsTroopCaptain(bool value);
    /*0x1270348*/ void SetAutoTroop();
    /*0x1270abc*/ void OnClickSave();
    /*0x1270d3c*/ void OpenFormationPopup();
    /*0x1270dd8*/ void StartBattle();
    /*0x1271818*/ void InitializePopup(Battle.GameModeType _eGameMode, bool _bTroopMode);
    /*0x1272444*/ void InitializePopup_GuildWar();
    /*0x127245c*/ void InitializePopupForTroopMode_GuildWar(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisHero, PTShare.Define.GuildWarPosition _eDeckType);
    /*0x1273048*/ void CheckStartInitialize();
    /*0x1273664*/ void LoadHero(Battle.GameModeType _eGameMode);
    /*0x1273ac4*/ void MemorizeSupportMode();
    /*0x1273ad0*/ void ReturnSupportModeToOrigin();
    /*0x1273adc*/ void ChangeSupportModeForRapidLogics(bool _bSupportMode);
    /*0x1273ae8*/ void SaveDeck();
    /*0x1274020*/ void SetUnitEmptyWithTableID(int _nUnitTableID);
    /*0x12741e8*/ void ResetSelectAll();
    /*0x1274440*/ Battle.HeroSelectValue[] ConvertCurrentHeroToHeroSelectArray();
    /*0x1273010*/ void SetActiveFormationButton(bool _bActive);
    /*0x1272358*/ void ChangeSupportModeNoDelay(bool _bSupportMode);
    /*0x1274704*/ void ToggleChangeSupportMode(bool _bMain);
    /*0x1274860*/ void SetTroopSetting(TroopSetting _setting);
    /*0x1274a00*/ TroopSetting AddNewTroopSetting(PTShare.Define.SHero _sHero, long _lPlayerID);
    /*0x1274e10*/ long SetPrivewEnemyAndReturnTotalPower(System.Collections.Generic.List<UnitSpawnInfo> _lisEnemyInfo);
    /*0x127526c*/ void LoadImportHeroList(System.Collections.Generic.List<Battle.HeroSelectValue> heroIDList);
    /*0x12729f8*/ void SetFormation(int _nFormationID, bool _bPlayer);
    /*0x12756a8*/ void InitializeSlotList();
    /*0x1275758*/ bool CheckUnitFully();
    /*0x1275834*/ void SetFactionBuffImage(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x1275838*/ void RefreshAllyPowerAndBuff();
    /*0x127604c*/ void SendUpdateMemberWarHeroId(System.Collections.Generic.List<PTShare.Define.SLegionHero> computes);
    /*0x1276388*/ bool IsNoHero();
    /*0x12716a8*/ bool IsAllUnitUsed();
    /*0x1276430*/ void SetBackgroundImage();
    /*0x1276490*/ void SetPreviewAllyCharacter(int _nIndex, int _nHeroID, long _lPlayerID, bool _bInitialized);
    /*0x127697c*/ void TradeUnitIndex(int _nUnitIndexA, int _nUnitIndexB);
    /*0x1276e04*/ void SetUnit(int _nTableID, int _nHeroID, long _lPlayerID, bool _bReverseSelect);
    /*0x1273920*/ void SetUnitCount();
    /*0x1275f88*/ void CheckSupportUnitEmpty();
    /*0x1277198*/ void <OnClickSave>b__36_0(bool x);
    /*0x12771a4*/ void <SaveDeck>b__48_1(System.Collections.Generic.List<PTShare.Define.SLegionHero> response);
    /*0x12771ac*/ void <SaveDeck>b__48_2(System.Collections.Generic.List<PTShare.Define.SLegionHero> response);
    /*0x1273c90*/ string <SaveDeck>g__GetUniqueIDs|48_0();
    /*0x12750f4*/ long <SetPrivewEnemyAndReturnTotalPower>g__GetHeroPower|58_0(int _nIndex, UnitSpawnInfo _spawnInfo);

    class <>c
    {
        static /*0x0*/ HeroTroopPopup_GuildWar.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SGuildWarHero> <>9__41_0;
        static /*0x10*/ System.Func<PTShare.Define.SGuildWarHero, bool> <>9__65_0;
        static /*0x18*/ System.Action<ChatApp.Shared.MessagePackObjects.WarJoinInfo> <>9__65_2;

        static /*0x10636fc*/ <>c();
        /*0x106375c*/ <>c();
        /*0x1063764*/ bool <InitializePopupForTroopMode_GuildWar>b__41_0(PTShare.Define.SGuildWarHero x);
        /*0x10637fc*/ bool <SendUpdateMemberWarHeroId>b__65_0(PTShare.Define.SGuildWarHero w);
        /*0x1063808*/ void <SendUpdateMemberWarHeroId>b__65_2(ChatApp.Shared.MessagePackObjects.WarJoinInfo f);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ HeroTroopPopup_GuildWar <>4__this;
        /*0x18*/ bool _bMain;

        /*0x106380c*/ <>c__DisplayClass55_0();
        /*0x1063814*/ void <ToggleChangeSupportMode>b__0();
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> computes;

        /*0x10638dc*/ <>c__DisplayClass65_0();
        /*0x10638e4*/ ChatApp.Shared.MessagePackObjects.WarJoinInfo <SendUpdateMemberWarHeroId>b__1(PTShare.Define.SGuildWarHero s);
    }

    class <>c__DisplayClass65_1
    {
        /*0x10*/ PTShare.Define.SGuildWarHero s;

        /*0x1063a38*/ <>c__DisplayClass65_1();
        /*0x1063a40*/ bool <SendUpdateMemberWarHeroId>b__3(PTShare.Define.SLegionHero f);
    }
}

class TroopSetting
{
    /*0x10*/ PTShare.Define.SHero heroData;
    /*0x18*/ int heroID;
    /*0x20*/ long playerID;
    /*0x28*/ int tableID;
    /*0x2c*/ bool isShade;
    /*0x2d*/ bool isSelected;
    /*0x2e*/ bool isMecenary;
    /*0x2f*/ bool isGuild;
    /*0x30*/ bool gw_isMain;
    /*0x31*/ bool gw_isSupport;
    /*0x32*/ bool gw_isCaptain;
    /*0x34*/ int gw_supportCount;
    /*0x38*/ string nickname;

    /*0x11282b4*/ TroopSetting(PTShare.Define.SHero _heroData);
    /*0x1128338*/ TroopSetting(PTShare.Define.SHero _heroData, long _nPlayerID);
}

class HeroTroopPopup_New : GuiBase
{
    static int NO_UNIT_ID = 0;
    static int DISENABLE_SLOT = -1;
    static int NO_EMPTY_INDEX = -1;
    static /*0x0*/ Battle.GameModeType <CurGameMode>k__BackingField;
    static /*0x4*/ bool <IsOpened>k__BackingField;
    static /*0x5*/ bool <IsTroopMode>k__BackingField;
    static /*0x6*/ bool m_bDefenseMode;
    static /*0x8*/ System.Action OnChangeTroopEvent;
    /*0x40*/ HeroInventoryPage_Composition_New m_HeroInventoryPage;
    /*0x48*/ ScrollContent_TroopTeamEntitySelector m_HeroTroopContent;
    /*0x50*/ TroopCharacterViewGroup_New m_AllyGroup;
    /*0x58*/ TroopCharacterViewGroup_New m_EnemyGroup;
    /*0x60*/ UnityEngine.GameObject m_SelectParent;
    /*0x68*/ UnityEngine.GameObject m_TroopPatent;
    /*0x70*/ UnityEngine.GameObject m_TeamTroopButton;
    /*0x78*/ UnityEngine.GameObject m_SaveButton;
    /*0x80*/ UnityEngine.GameObject m_BattleButton;
    /*0x88*/ UnityEngine.GameObject m_BattleHardButton;
    /*0x90*/ UnityEngine.GameObject m_backButton;
    /*0x98*/ AtlasImage m_TroopBtnFrame;
    /*0xa0*/ AtlasImage m_TroopBtnIcon;
    /*0xa8*/ UnityEngine.GameObject m_TroopEmptyText;
    /*0xb0*/ UnityEngine.GameObject m_SaveBtnEffect;
    /*0xb8*/ AtlasImage m_SaveBtnIcon;
    /*0xc0*/ UnityEngine.GameObject m_VsImage;
    /*0xc8*/ LocalizeString m_StageName;
    /*0xd0*/ UnityEngine.GameObject m_EnemyPowerParent;
    /*0xd8*/ LocalizeString m_TeamPowerAlly;
    /*0xe0*/ LocalizeString m_TeamPowerEnemy;
    /*0xe8*/ BuffIconSpread m_BuffSpreadAlly;
    /*0xf0*/ BuffIconSpread m_BuffSpreadEnemy;
    /*0xf8*/ UnityEngine.UI.Image m_BackgroundImage;
    /*0x100*/ UnityEngine.CanvasGroup m_FactionBuffEffectGroup;
    /*0x108*/ System.Collections.Generic.List<TroopFactionBuffSet> m_FactionBuffSetList;
    /*0x110*/ System.Collections.Generic.List<int> <CurTableIDList>k__BackingField;
    /*0x118*/ System.Collections.Generic.List<int> <CurHeroIDList>k__BackingField;
    /*0x120*/ System.Collections.Generic.List<long> <CurPlayerIDList>k__BackingField;
    /*0x128*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, long>, TroopSetting> m_dicTroopSettings;
    /*0x130*/ PTShare.Define.STroop m_CurTroopInfo;
    /*0x138*/ System.Collections.Generic.List<Battle.HeroSelectValue> m_HeroSelectValues;
    /*0x140*/ bool m_bInitialized;
    /*0x141*/ bool m_bCheckUseMercenaries;
    /*0x142*/ bool m_bCannotUseMercenaries;
    /*0x148*/ long m_nCurTotalPowerAlly;
    /*0x150*/ long m_nCurTotalPowerEnemy;
    /*0x158*/ System.Collections.Generic.List<int> m_lisFactionBuffID;
    /*0x160*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisFactionBuffIcon;
    /*0x168*/ DG.Tweening.Sequence m_SeqBuffFactionGroup;
    /*0x170*/ UnityEngine.Vector3 m_vecOriginFactionBuffGroupPOS;
    /*0x180*/ PTShare.Define.STroop _sTroopInfo;

    static /*0x127cf8c*/ HeroTroopPopup_New();
    static /*0x1277204*/ Battle.GameModeType get_CurGameMode();
    static /*0x1277268*/ void set_CurGameMode(Battle.GameModeType value);
    static /*0x12772d0*/ bool get_IsOpened();
    static /*0x1277334*/ void set_IsOpened(bool value);
    static /*0x12773a0*/ bool get_IsTroopMode();
    static /*0x1277404*/ void set_IsTroopMode(bool value);
    static /*0x1277470*/ bool get_IsDefenseMode();
    static /*0x126fe08*/ void add_OnChangeTroopEvent(System.Action value);
    static /*0x126ff00*/ void remove_OnChangeTroopEvent(System.Action value);
    /*0x1277040*/ HeroTroopPopup_New();
    /*0x12771d4*/ System.Collections.Generic.List<int> get_CurTableIDList();
    /*0x12771dc*/ void set_CurTableIDList(System.Collections.Generic.List<int> value);
    /*0x12771e4*/ System.Collections.Generic.List<int> get_CurHeroIDList();
    /*0x12771ec*/ void set_CurHeroIDList(System.Collections.Generic.List<int> value);
    /*0x12771f4*/ System.Collections.Generic.List<long> get_CurPlayerIDList();
    /*0x12771fc*/ void set_CurPlayerIDList(System.Collections.Generic.List<long> value);
    /*0x12774d4*/ int get_MaxHeroCount();
    /*0x12774dc*/ TroopCharacterViewGroup_New get_m_CurrentAllyGroup();
    /*0x12774e4*/ TroopCharacterViewGroup_New get_m_CurrentEnemyGroup();
    /*0x12774ec*/ System.Collections.Generic.List<PTShare.Define.STroop> get_GetTroopList();
    /*0x127756c*/ void OnCreate();
    /*0x1277570*/ void OnDelete();
    /*0x12775d4*/ void OnEnter();
    /*0x127791c*/ void OnFinish();
    /*0x12779d8*/ void OnLeave();
    /*0x1277bb4*/ void OnStart();
    /*0x1271810*/ void OnExitBase();
    /*0x1277bb8*/ void OnExit();
    /*0x12719d0*/ void InitializePopup(Battle.GameModeType _eGameMode, bool _bDefenseMode);
    /*0x1272928*/ void InitializePopupForTroopMode(PTShare.Define.STroop _troop, Battle.GameModeType _eGameMode);
    /*0x1273430*/ void CheckStartInitialize();
    /*0x1278848*/ void InitializeSlotList();
    /*0x1278168*/ void CheckUseMercenary();
    /*0x1278954*/ void SetFactionBuffImage(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x1278e70*/ long SetPrivewEnemyAndReturnTotalPower(System.Collections.Generic.List<UnitSpawnInfo> _lisEnemyInfo);
    /*0x1279678*/ void RefreshAllyPowerAndBuff();
    /*0x1279a70*/ void SetBackgroundImage();
    /*0x1279b54*/ void LoadHero(Battle.GameModeType _eGameMode);
    /*0x127a244*/ void LoadImportHeroList(System.Collections.Generic.List<Battle.HeroSelectValue> heroIDList);
    /*0x1279f84*/ void LoadTroopHero();
    /*0x1278534*/ void SetActiveUI(bool _enable);
    /*0x1277de0*/ void SetActiveSaveButton(bool _enable);
    /*0x1277ed0*/ void SetActiveContent(bool _isHeroSelectView);
    /*0x127a75c*/ void StartBattle();
    /*0x127af54*/ void ShowBattleMainWindow();
    /*0x127afc8*/ void OnClickSave();
    /*0x12742a8*/ void ResetSelectAll();
    /*0x127bd54*/ void OnClickTroopTeam();
    /*0x127bd98*/ void OnClickTroopSave();
    /*0x127a618*/ void InitializeScroll(bool _moveTop);
    /*0x127bee4*/ void HandlerScrollContent(int _index, TroopTeamEntitySelector _obj);
    /*0x127bfa4*/ void HandlerSelectTroop(PTShare.Define.STroop _troop);
    /*0x127c004*/ void CallbackSuccessMakeTroop();
    /*0x127c0ac*/ void CallbackSuccessSaveTroop();
    /*0x127c12c*/ void HandleOnClick(PTShare.Define.SHero _hero);
    /*0x127c130*/ void HandlerRefresh();
    /*0x127c1c0*/ bool IsNoHero();
    /*0x12741c8*/ void RenewInventory();
    /*0x1276e2c*/ void SetUnit(int _nTableID, int _nHeroID, long _lPlayerID, bool _bReverseSelect);
    /*0x127c2a8*/ void SetTroopSetting(TroopSetting _setting);
    /*0x1275570*/ void SetAllTroopSettings();
    /*0x127c4b0*/ TroopSetting GetTroopSetting(int _nHeroID, long _lPlayerID);
    /*0x1274d20*/ TroopSetting AddNewTroopSetting(PTShare.Define.SHero _sHero, long _lPlayerID);
    /*0x1276504*/ void SetPreviewAllyCharacter(int _nIndex, int _nHeroID, long _lPlayerID, bool _bInitialized);
    /*0x127c9a8*/ bool CheckUnitFully();
    /*0x127ca94*/ void RenewPreviewUnitLevel();
    /*0x127cbc8*/ void SetUnitEmptyWithTableID(int _nUnitTableID);
    /*0x1274158*/ void SetUnitEmptyWithIndex(int _nIndex);
    /*0x1276b10*/ void TradeUnitIndex(int _nUnitIndexA, int _nUnitIndexB);
    /*0x127bb50*/ bool IsEmptyUnitList(System.Collections.Generic.List<int> targetList);
    /*0x127ccbc*/ int GetEmptyIndex();
    /*0x127c84c*/ void SetIndex(int _nIndex, int _nUnitTableID, int _nUnitHeroID, long _lPlayerID);
    /*0x127bbec*/ string ReturnAllayHeroIDListToString();
    /*0x127b5c0*/ bool IsConditionSaveTroop();
    /*0x127cda8*/ Battle.HeroSelectValue[] ConvertCurrentHeroToHeroSelectArray();
    /*0x127a100*/ Battle.HeroSelectValue[] ConvertCurrentHeroToHeroSelectArray(System.Collections.Generic.List<int> _heroids);
    /*0x12784c8*/ System.Collections.IEnumerator CoAutoMaze();
    /*0x127cf90*/ void <StartBattle>b__103_0(bool confirm);
    /*0x127cf9c*/ void <OnClickSave>b__105_0();
    /*0x127d040*/ void <OnClickSave>b__105_1();

    class <>c
    {
        static /*0x0*/ HeroTroopPopup_New.<> <>9;
        static /*0x8*/ System.Func<UnitSpawnInfo, int> <>9__94_0;
        static /*0x10*/ System.Func<int, string> <>9__132_0;
        static /*0x18*/ System.Predicate<int> <>9__133_0;

        static /*0x1063a70*/ <>c();
        /*0x1063ad0*/ <>c();
        /*0x1063ad8*/ int <SetPrivewEnemyAndReturnTotalPower>b__94_0(UnitSpawnInfo x);
        /*0x1063af0*/ string <ReturnAllayHeroIDListToString>b__132_0(int s);
        /*0x1063b58*/ bool <IsConditionSaveTroop>b__133_0(int x);
    }

    class <>c__DisplayClass102_0
    {
        /*0x10*/ HeroTroopPopup_New <>4__this;
        /*0x18*/ bool _isHeroSelectView;

        /*0x1063b64*/ <>c__DisplayClass102_0();
        /*0x1063b6c*/ void <SetActiveContent>b__0();
    }

    class <CoAutoMaze>d__136 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroTroopPopup_New <>4__this;

        /*0x1063bdc*/ <CoAutoMaze>d__136(int <>1__state);
        /*0x1063c08*/ void System.IDisposable.Dispose();
        /*0x1063c0c*/ bool MoveNext();
        /*0x1063ce0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1063ce8*/ void System.Collections.IEnumerator.Reset();
        /*0x1063d28*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroTroopPopup_PVE_Ranking : HeroTroopPopup_New
{
    /*0x188*/ LocalizeString m_TimeText;
    /*0x190*/ int m_nMaxHeroCount;
    /*0x198*/ System.Collections.Generic.List<int> m_lisFormationIndexList_Ally;
    /*0x1a0*/ System.Collections.Generic.List<int> m_lisFormationIndexList_Enemy;

    /*0x127dec0*/ HeroTroopPopup_PVE_Ranking();
    /*0x127d124*/ int get_MaxHeroCount();
    /*0x127d12c*/ void InitializePopupForPveRanking();
    /*0x127d200*/ void InitializeSlotList();
    /*0x127d3bc*/ void SetPreviewAllyCharacter(int _nIndex, int _nHeroID, long _lPlayerID, bool _bInitialized);
    /*0x127d590*/ long SetPrivewEnemyAndReturnTotalPower(System.Collections.Generic.List<UnitSpawnInfo> _lisEnemyInfo);
    /*0x127d360*/ void SetFormationWithChallengeData(TableData.TableData_Pvechallenge _challengeData);
    /*0x127dc88*/ void SetFormationWithIndexList(System.Collections.Generic.List<int> _lisFormationIndex, bool _bAlly);
    /*0x127dd18*/ int GetEmptyIndex();
    /*0x127de14*/ bool IsUseCurrentPositionIndex(int _nIndex);
    /*0x127dafc*/ void <SetFormationWithChallengeData>g__SetFormation|10_0(bool _bAlly, ref HeroTroopPopup_PVE_Ranking.<> );

    struct <>c__DisplayClass10_0
    {
        /*0x10*/ TableData.TableData_Pvechallenge _challengeData;
        /*0x18*/ HeroTroopPopup_PVE_Ranking <>4__this;
    }
}

class HeroTroopPopup_WorldBoss : HeroTroopPopup_New
{
    /*0x188*/ BuffIconSpread m_BuffSpreadAlly2;
    /*0x190*/ System.Collections.Generic.List<int> m_lisFactionBuffID2;

    static /*0x1308c90*/ void <SetFactionBuffImage>g__SetFactionBuffImageWithParams|4_0(Helper_FactionBuff.FactionBuffType _factionBuffType, BuffIconSpread _buffIconSpread, System.Collections.Generic.List<int> _lisFactionBuffID, int[] _arrUnitIDs);
    /*0x1308e48*/ HeroTroopPopup_WorldBoss();
    /*0x1308af8*/ int get_MaxHeroCount();
    /*0x1308b14*/ void SetFactionBuffImage(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x1308dd0*/ void ShowBattleMainWindow();
    /*0x1308e44*/ void SetBackgroundImage();
}

enum HeroWagonType
{
    Reset = 0,
    Revert = 1,
    Dismiss = 2,
    FurnitrueDismiss = 3,
}

class HeroWagonPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_CurrencyTopWindow;
    /*0x48*/ UnityEngine.GameObject m_ResetGroup;
    /*0x50*/ UnityEngine.GameObject m_DismissGroup;
    /*0x58*/ UnityEngine.GameObject m_FurnitureDismissGroup;
    /*0x60*/ HeroResetSubWindow m_ResetSubWindow;
    /*0x68*/ HeroDismissSubWindow m_DismissSubWindow;
    /*0x70*/ FurnitureDismissWindow m_FurnitureDismissSubWindow;
    /*0x78*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liTapToggle;
    /*0x80*/ UnityEngine.GameObject m_housingButton;
    /*0x88*/ HeroWagonType eWagonType;
    /*0x8c*/ bool m_isPlayToggleSound;

    /*0x1309b40*/ HeroWagonPopup();
    /*0x1309008*/ void OnCreate();
    /*0x130900c*/ void OnDelete();
    /*0x1309010*/ void OnEnter();
    /*0x1309014*/ void OnFinish();
    /*0x1309018*/ void OnLeave();
    /*0x130901c*/ void OnStart();
    /*0x1309020*/ void OnExit();
    /*0x13090f4*/ void InitializePopup(HeroWagonType eType);
    /*0x1309168*/ void InitializeToggle();
    /*0x130945c*/ void OnClick_SlimeStore();
    /*0x1309510*/ void OnClick_HousingShop();
    /*0x13095e4*/ void RefreshCurrencyWindow();
    /*0x1309b48*/ void <OnExit>b__17_0();
    /*0x1309b50*/ void <OnClick_SlimeStore>b__20_0();
    /*0x1309c24*/ void <OnClick_SlimeStore>b__20_1();
    /*0x1309cb8*/ void <OnClick_HousingShop>b__21_0();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ HeroWagonType type;
        /*0x18*/ HeroWagonPopup <>4__this;

        /*0x1063dbc*/ <>c__DisplayClass19_0();
        /*0x1063dc4*/ void <InitializeToggle>b__1(bool on);
    }

    class <>c
    {
        static /*0x0*/ HeroWagonPopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.UI.Toggle> <>9__19_0;

        static /*0x1063d30*/ <>c();
        /*0x1063d90*/ <>c();
        /*0x1063d98*/ void <InitializeToggle>b__19_0(UnityEngine.UI.Toggle x);
    }
}

class ImageBannerPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ChildObject;
    /*0x48*/ UnityEngine.UI.Extensions.HorizontalScrollSnap m_Scroll;
    /*0x50*/ System.Collections.Generic.List<AtlasImage> m_liBottomRing;
    /*0x58*/ UnityEngine.UI.Toggle m_DailyToggle;
    /*0x60*/ CustomButton m_leftArrow;
    /*0x68*/ CustomButton m_rightArrow;
    /*0x70*/ bool bIsInitialized;
    /*0x78*/ System.Collections.Generic.List<ImageBannerPopup.IBTexture> liIBTexture;
    /*0x80*/ System.Collections.IEnumerator ieUpdater;
    /*0x88*/ System.Action onExitCallback;

    /*0xd2200c*/ ImageBannerPopup();
    /*0xd219c8*/ void OnCreate();
    /*0xd219cc*/ void OnDelete();
    /*0xd219d0*/ void OnEnter();
    /*0xd219d4*/ void OnFinish();
    /*0xd219d8*/ void OnLeave();
    /*0xd21bb4*/ void OnStart();
    /*0xd21bb8*/ void OnExit();
    /*0xd21c10*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SImageBanner> bannerlist, bool activeToggle, System.Action onExit);
    /*0xd219dc*/ void ReleasePopup();
    /*0xd21f64*/ void OnClick_Arrow(bool bIsRight);
    /*0xd21f18*/ void StartUpdate();
    /*0xd21fa0*/ System.Collections.IEnumerator CoUpdate();
    /*0xd22084*/ void <InitializePopup>b__18_0(PTShare.Define.SImageBanner x);

    class IBTexture : System.IDisposable
    {
        static /*0x0*/ string CachePath;
        /*0x10*/ UnityEngine.Sprite sprite;
        /*0x18*/ string texuri;
        /*0x20*/ string linkuri;

        static /*0xe4e470*/ IBTexture();
        static /*0xe4e384*/ void ExistCreateDirectory();
        /*0xe4e280*/ IBTexture(string texuri, string linkuri);
        /*0xe4e1b4*/ System.Collections.IEnumerator LoadTexture();
        /*0xe4e270*/ UnityEngine.Sprite GetSprite();
        /*0xe4e278*/ string GetURL();
        /*0xe4d990*/ void Dispose();

        class <LoadTexture>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ ImageBannerPopup.IBTexture <>4__this;
            /*0x28*/ string <path>5__2;
            /*0x30*/ UnityEngine.Networking.UnityWebRequest <www>5__3;

            /*0xd90014*/ <LoadTexture>d__4(int <>1__state);
            /*0xd90040*/ void System.IDisposable.Dispose();
            /*0xd90044*/ bool MoveNext();
            /*0xd90634*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0xd9063c*/ void System.Collections.IEnumerator.Reset();
            /*0xd9067c*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string data;

        /*0xe4dac4*/ <>c__DisplayClass18_0();
        /*0xe4dacc*/ bool <InitializePopup>b__1(PTShare.Define.SImageBanner x);
    }

    class <>c
    {
        static /*0x0*/ ImageBannerPopup.<> <>9;
        static /*0x8*/ System.Action<ImageBannerPopup.IBTexture> <>9__19_0;

        static /*0xe4d918*/ <>c();
        /*0xe4d978*/ <>c();
        /*0xe4d980*/ void <ReleasePopup>b__19_0(ImageBannerPopup.IBTexture x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ int nIndex;
        /*0x18*/ ImageBannerPopup <>4__this;

        /*0xe4dbd8*/ <>c__DisplayClass22_0();
        /*0xe4dbe0*/ void <CoUpdate>b__0();
    }

    class <CoUpdate>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ImageBannerPopup <>4__this;
        /*0x28*/ int <nTexCount>5__2;
        /*0x2c*/ int <i>5__3;
        /*0x30*/ UnityEngine.UI.Button <obj>5__4;

        /*0xe4dc60*/ <CoUpdate>d__22(int <>1__state);
        /*0xe4dc8c*/ void System.IDisposable.Dispose();
        /*0xe4dc90*/ bool MoveNext();
        /*0xe4e220*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4e228*/ void System.Collections.IEnumerator.Reset();
        /*0xe4e268*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ImageConfirmPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ButtonCancel;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ LocalizeString m_ConfirmBtnText;
    /*0x58*/ LocalizeString m_CancelBtnText;
    /*0x60*/ LocalizeString m_ConfirmMessage;
    /*0x68*/ AtlasImage m_image;
    /*0x70*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x78*/ AtlasImage m_frame;
    /*0x80*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x88*/ bool m_EnableCancel;
    /*0x89*/ bool m_IsExitBackground;
    /*0x90*/ System.Action<bool> m_OnClickButton;

    /*0xd22cc8*/ ImageConfirmPopup();
    /*0xd22124*/ void OnCreate();
    /*0xd22128*/ void OnEnter();
    /*0xd2212c*/ void OnStart();
    /*0xd22130*/ void OnLeave();
    /*0xd22134*/ void OnDelete();
    /*0xd22138*/ void OnFinish();
    /*0xd2213c*/ void Init(AtlasType atlasType, string imagePath, System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0xd2282c*/ void Init(AtlasType imageType, string imagePath, AtlasType frameAtlas, string framePath, System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0xd223c4*/ void SetImage(AtlasType atlasType, string imagePath);
    /*0xd22ad4*/ void SetFrame(AtlasType atlasType, string framePath);
    /*0xd22538*/ void SetText(LocalizeString _str, string _key);
    /*0xd22730*/ void SetActiveCancelButton(bool _enable);
    /*0xd22778*/ void SetActiveFrame(bool _enable);
    /*0xd2262c*/ string GetLocalizeStr(string _key);
    /*0xd22b94*/ void OnConfirm();
    /*0xd22c3c*/ void OnCancel();
    /*0xd22c9c*/ void OnExit();
    /*0xd22cb0*/ void OnExitBackground();
    /*0xd227c0*/ System.Collections.IEnumerator CoSetText();

    class <CoSetText>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ImageConfirmPopup <>4__this;

        /*0xe4e4e4*/ <CoSetText>d__30(int <>1__state);
        /*0xe4e510*/ void System.IDisposable.Dispose();
        /*0xe4e514*/ bool MoveNext();
        /*0xe4e574*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4e57c*/ void System.Collections.IEnumerator.Reset();
        /*0xe4e5bc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class InputConfirmPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_cancel;
    /*0x50*/ LocalizeString m_confirm;
    /*0x58*/ LocalizeString m_empty;
    /*0x60*/ UnityEngine.UI.InputField m_inputField;
    /*0x68*/ string m_defaultString;
    /*0x70*/ System.Action<bool, string> m_callBack;

    /*0x1573db4*/ InputConfirmPopup();
    /*0x1573844*/ void OnCreate();
    /*0x1573848*/ void OnDelete();
    /*0x157384c*/ void OnEnter();
    /*0x1573850*/ void OnFinish();
    /*0x1573854*/ void OnLeave();
    /*0x1573858*/ void OnStart();
    /*0x157385c*/ void OnExit();
    /*0x15738cc*/ void InitPopup(string title, string cancel, string confirm, string defaultStr, string emptyMessage, System.Action<bool, string> callBack);
    /*0x1573c4c*/ void OnClickCancel();
    /*0x1573cfc*/ void OnClickConfirm();
}

class ItemAmountBuyPopup : ItemAmountBuyBase
{
    static /*0x0*/ System.Action<int> OnBuyItemEvent;

    static /*0x15752c8*/ ItemAmountBuyPopup();
    static /*0x1574bd0*/ void add_OnBuyItemEvent(System.Action<int> value);
    static /*0x1574cc4*/ void remove_OnBuyItemEvent(System.Action<int> value);
    /*0x15752b8*/ ItemAmountBuyPopup();
    /*0x1574db8*/ void OnClickBuyItem();
    /*0x15751dc*/ void Purchase();
    /*0x15752cc*/ void <OnClickBuyItem>b__3_0(bool _result);
}

class ItemDecomposePopup : GuiBase
{
    /*0x40*/ ItemChangeAmountWindow m_ChangeAmountWindow;
    /*0x48*/ ItemInfoSlot m_ItemBox;
    /*0x50*/ ItemTableRewardSlot m_AssetSlot;
    /*0x58*/ ItemDecomposeInputWindow m_DecomposeInputWindow;
    /*0x60*/ ItemType m_eItemType;
    /*0x68*/ TableData.TableData_Item m_ItemInfo;
    /*0x70*/ int m_nMaxAmount;
    /*0x74*/ int m_nAmount;
    /*0x78*/ string[] m_arrReward;

    /*0x157bae4*/ ItemDecomposePopup();
    /*0x157b130*/ void OnCreate();
    /*0x157b134*/ void OnDelete();
    /*0x157b138*/ void OnEnter();
    /*0x157b224*/ void OnFinish();
    /*0x157b228*/ void OnLeave();
    /*0x157b2e0*/ void OnStart();
    /*0x157b2e4*/ void OnExit();
    /*0x157b348*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item);
    /*0x157b448*/ void SetReturnAsset();
    /*0x157b674*/ void OnClickDecompose();
    /*0x157b918*/ void OnClickCustomAmountBtn();
    /*0x157b9bc*/ void CallbackDecomposeItem(PTShare.Define.SProperty _property);
    /*0x157badc*/ void HandlerChangeAmount(int _amount, int _maxAmount);
    /*0x157baec*/ void <OnClickCustomAmountBtn>b__19_0(int result);
}

class ItemDescriptionFixedPopup : ItemDescriptionPopup
{
    /*0x88*/ ScrollContent_StageReward m_ScrollContent;
    /*0x90*/ System.Collections.Generic.List<Rewards> liRewards;

    /*0x157c518*/ ItemDescriptionFixedPopup();
    /*0x157bb04*/ void OnCreate();
    /*0x157bb08*/ void OnDelete();
    /*0x157bb0c*/ void OnEnter();
    /*0x157bb10*/ void OnFinish();
    /*0x157bb14*/ void OnLeave();
    /*0x157bb18*/ void OnStart();
    /*0x157bb1c*/ void OnExit();
    /*0x157bc10*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item, bool _isInfo);
    /*0x157bf60*/ void InitializeData(ItemType _type);
    /*0x157c370*/ void InitializeScroll();
    /*0x157c460*/ void HandlerScrollContent(int nIndex, ItemTableRewardSlot slot);

    class <>c
    {
        static /*0x0*/ ItemDescriptionFixedPopup.<> <>9;
        static /*0x8*/ System.Func<char, bool> <>9__10_0;

        static /*0xe505b4*/ <>c();
        /*0xe50614*/ <>c();
        /*0xe5061c*/ bool <InitializeData>b__10_0(char w);
    }
}

class ItemDescriptionPopup : GuiBase
{
    /*0x40*/ LocalizeString m_ItemName;
    /*0x48*/ LocalizeString m_ItemDesc;
    /*0x50*/ UnityEngine.GameObject m_Button;
    /*0x58*/ LocalizeString m_ButtonText;
    /*0x60*/ ItemInfoSlot m_ItemBox;
    /*0x68*/ UnityEngine.UI.ScrollRect m_descScrollRect;
    /*0x70*/ ItemType m_eItemType;
    /*0x78*/ TableData.TableData_Item m_ItemInfo;
    /*0x80*/ bool m_IsInfomation;

    /*0x157c520*/ ItemDescriptionPopup();
    /*0x157c528*/ void OnCreate();
    /*0x157c52c*/ void OnDelete();
    /*0x157c530*/ void OnEnter();
    /*0x157c534*/ void OnFinish();
    /*0x157c538*/ void OnLeave();
    /*0x157c53c*/ void OnStart();
    /*0x157bb94*/ void OnExit();
    /*0x157bc48*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item, bool _isInfo);
    /*0x157c81c*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0x157c888*/ void InitializePopup(TableData.TableData_Item _item, bool _isInfo);
    /*0x157c724*/ void SetButtonText(string _key);
    /*0x157c93c*/ void OnConfirm();

    class <CoLateScrollRectRefresh>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ItemDescriptionPopup <>4__this;

        /*0xe5064c*/ <CoLateScrollRectRefresh>d__17(int <>1__state);
        /*0xe50678*/ void System.IDisposable.Dispose();
        /*0xe5067c*/ bool MoveNext();
        /*0xe5073c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe50744*/ void System.Collections.IEnumerator.Reset();
        /*0xe50784*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ItemDescriptionRandomPopup : ItemDescriptionPopup
{
    /*0x88*/ ScrollContent_RandomItemSlot m_ScrollContent;
    /*0x90*/ System.Collections.Generic.List<Rewards> liRewards;
    /*0x98*/ System.Collections.Generic.List<float> percents;

    /*0x157d290*/ ItemDescriptionRandomPopup();
    /*0x157c9e8*/ void OnCreate();
    /*0x157c9ec*/ void OnDelete();
    /*0x157c9f0*/ void OnEnter();
    /*0x157c9f4*/ void OnFinish();
    /*0x157c9f8*/ void OnLeave();
    /*0x157c9fc*/ void OnStart();
    /*0x157ca00*/ void OnExit();
    /*0x157ca78*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item, bool _isInfo);
    /*0x157cab8*/ void InitializeData(ItemType _type);
    /*0x157cec8*/ void InitializePercents();
    /*0x157d0a0*/ void InitializeScroll();
    /*0x157d190*/ void HandlerScrollContent(int nIndex, RandomItemSlot slot);

    class <>c
    {
        static /*0x0*/ ItemDescriptionRandomPopup.<> <>9;
        static /*0x8*/ System.Func<char, bool> <>9__11_0;

        static /*0xe5078c*/ <>c();
        /*0xe507ec*/ <>c();
        /*0xe507f4*/ bool <InitializeData>b__11_0(char w);
    }
}

class ItemFixedPopup : GuiBase
{
    /*0x40*/ ItemChangeAmountWindow m_amountWindow;
    /*0x48*/ ItemInfoSlot m_itemInfoSlot;
    /*0x50*/ ScrollContent_StageReward m_scrollContent;
    /*0x58*/ LocalizeString m_itemName;
    /*0x60*/ LocalizeString m_description;
    /*0x68*/ TableData.TableData_Item itemInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> rewardInfo;

    /*0x157de18*/ ItemFixedPopup();
    /*0x157d298*/ void OnCreate();
    /*0x157d29c*/ void OnDelete();
    /*0x157d2a0*/ void OnEnter();
    /*0x157d478*/ void OnFinish();
    /*0x157d47c*/ void OnLeave();
    /*0x157d5d8*/ void OnStart();
    /*0x157d5dc*/ void InitializePopup(TableData.TableData_Item _item);
    /*0x157d874*/ void InitializeScroll();
    /*0x157d904*/ void HandlerScrollContent(int _nIndex, ItemTableRewardSlot _slot);
    /*0x157d9bc*/ void OnClick_UseItem();
    /*0x157dae8*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0x157dc08*/ void OnChangeValueEvent(int amount, int maxamount);
}

class ItemInventoryPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_Toggle_All;
    /*0x48*/ UnityEngine.UI.Toggle m_Toggle_Item;
    /*0x50*/ UnityEngine.UI.Toggle m_Toggle_Equipment;
    /*0x58*/ UnityEngine.UI.Toggle m_Toggle_Furniture;
    /*0x60*/ ScrollContent_ItemInfoSlot m_ScrollContent;
    /*0x68*/ LocalizeString m_emptyText;
    /*0x70*/ ItemInventoryType m_eInventoryType;
    /*0x78*/ System.Collections.Generic.List<EquipSetItem> m_liEquipSetItem;
    /*0x80*/ int nEquipArrayIndex;
    /*0x84*/ int nFurnitureArrayIndex;

    /*0x157fe4c*/ ItemInventoryPopup();
    /*0x157ee9c*/ System.Collections.Generic.List<PTShare.Define.SItem> get_GetItemList();
    /*0x157ef1c*/ System.Collections.Generic.List<HousingObjSet> get_GetFurnitureList();
    /*0x157ef9c*/ void OnCreate();
    /*0x157efa0*/ void OnDelete();
    /*0x157efa4*/ void OnEnter();
    /*0x157f350*/ void OnFinish();
    /*0x157f354*/ void OnLeave();
    /*0x157f49c*/ void OnStart();
    /*0x157f4a0*/ void OnExit();
    /*0x157f548*/ void InitializeInventory(ItemInventoryType type);
    /*0x157f60c*/ void InitializeToggle();
    /*0x157f57c*/ void GetEquipSetItem();
    /*0x157fad0*/ void CallbackToggle(bool _result, ItemInventoryType _type);
    /*0x157f890*/ void InitializeScrollContent(bool _moveFirstItem);
    /*0x157fb74*/ void HandlerInventoryUpdate(int _index, ItemInfoSlot _item);
    /*0x157fe24*/ void HandlerChangeItem();
    /*0x157fec4*/ void <InitializeToggle>b__22_0(bool result);
    /*0x157fed0*/ void <InitializeToggle>b__22_1(bool result);
    /*0x157fedc*/ void <InitializeToggle>b__22_2(bool result);
    /*0x157fee8*/ void <InitializeToggle>b__22_3(bool result);
}

class ItemRandomPopup : GuiBase
{
    /*0x40*/ ItemChangeAmountWindow m_amountWindow;
    /*0x48*/ ItemInfoSlot m_itemInfoSlot;
    /*0x50*/ ScrollContent_RandomItemSlot m_scrollContent;
    /*0x58*/ LocalizeString m_itemName;
    /*0x60*/ LocalizeString m_description;
    /*0x68*/ TableData.TableData_Item itemInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> rewardInfo;
    /*0x78*/ System.Collections.Generic.List<float> percents;

    /*0x158195c*/ ItemRandomPopup();
    /*0x1580e54*/ void OnCreate();
    /*0x1580e58*/ void OnDelete();
    /*0x1580e5c*/ void OnEnter();
    /*0x1581034*/ void OnFinish();
    /*0x1581038*/ void OnLeave();
    /*0x1581194*/ void OnStart();
    /*0x157e9dc*/ void InitializePopup(TableData.TableData_Item _item);
    /*0x1581198*/ void SetPercents();
    /*0x1581370*/ void InitializeScroll();
    /*0x1581400*/ void HandlerScrollContent(int _nIndex, RandomItemSlot _slot);
    /*0x1581500*/ void OnClick_UseItem();
    /*0x158162c*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0x158174c*/ void OnChangeValueEvent(int amount, int maxamount);
}

class ItemSelectUsePopup : GuiBase
{
    /*0x40*/ ScrollContent_SelectItem m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemBox;
    /*0x50*/ UnityEngine.GameObject m_AmountWindow;
    /*0x58*/ LocalizeString m_ItemName;
    /*0x60*/ LocalizeString m_Amount;
    /*0x68*/ string[] m_arrReward;
    /*0x70*/ System.Collections.Generic.Dictionary<int, int> m_dicRewardAmount;
    /*0x78*/ ItemType m_eItemType;
    /*0x80*/ TableData.TableData_Item m_TableInfo;
    /*0x88*/ PTShare.Define.SItem m_UserInfo;
    /*0x90*/ int m_nSelectIndex;
    /*0x94*/ int m_nAmount;
    /*0x98*/ int m_nMaxAmount;
    /*0x9c*/ int nArrIndex;

    /*0x15858f0*/ ItemSelectUsePopup();
    /*0x1584b08*/ void OnCreate();
    /*0x1584b0c*/ void OnDelete();
    /*0x1584b10*/ void OnEnter();
    /*0x1584da0*/ void OnFinish();
    /*0x1584da4*/ void OnLeave();
    /*0x1584fb4*/ void OnStart();
    /*0x157ec78*/ void InitializePopup(ItemType _type, TableData.TableData_Item _table);
    /*0x1585030*/ void RefeshAmountText();
    /*0x1585234*/ void OnConfirm();
    /*0x1584fb8*/ void InitializeScroll();
    /*0x15853c4*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0x15854d0*/ void HandlerScrollContent(int _index, ItemSelectEntity _obj);
    /*0x158569c*/ void HandlerChangeAmount(int _index, int _itemIndex, int _amount);
    /*0x1585808*/ void HandlerSelectItem(int _index, int _itemIndex);
    /*0x15850f0*/ int GetAmount();
    /*0x1585678*/ int RemainAmount();
    /*0x15855d4*/ int GetIndexAmount(int _index);
    /*0x1585760*/ void RefreshEntity(int _startIndex, int _endIndex);
}

class ItemUsePopup : GuiBase
{
    /*0x40*/ ItemInfoSlot m_ItemBox;
    /*0x48*/ ItemChangeAmountWindow m_ItemChangeWindow;
    /*0x50*/ LocalizeString m_ItemName;
    /*0x58*/ LocalizeString m_ItemDesc;
    /*0x60*/ UnityEngine.UI.Slider m_AmountSilder;
    /*0x68*/ LocalizeString m_SilderText;
    /*0x70*/ ItemType m_eItemType;
    /*0x78*/ TableData.TableData_Item m_ItemInfo;
    /*0x80*/ int m_nMaxAmount;
    /*0x84*/ int m_nAmount;

    /*0xfa3d3c*/ ItemUsePopup();
    /*0xfa2e70*/ void OnCreate();
    /*0xfa2e74*/ void OnDelete();
    /*0xfa2e78*/ void OnEnter();
    /*0xfa2fb0*/ void OnFinish();
    /*0xfa2fb4*/ void OnLeave();
    /*0xfa3070*/ void OnStart();
    /*0xfa3074*/ void OnExit();
    /*0xfa30f0*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item);
    /*0xfa33c4*/ void OnClickUse();
    /*0xfa3794*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0xfa39b0*/ void HandlerChangeAmount(int _amount, int _maxAmount);
    /*0xfa3620*/ bool IsVaildCondition();
}

class LevelupPopup : GuiBase
{
    /*0x40*/ LocalizeString m_BeforeLevel;
    /*0x48*/ LocalizeString m_AfterLevel;
    /*0x50*/ TableRewardController m_TableRewardController;
    /*0x58*/ ParticleBase m_LevelEffect;
    /*0x60*/ Spine.Unity.SkeletonGraphic m_LevelupTitle;
    /*0x68*/ TableData.TableData_Userlvexp m_UserLevelInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_liReward;
    /*0x78*/ System.Collections.IEnumerator m_ieAnimate;
    /*0x80*/ bool m_bIsPlayingAnimate;

    /*0xfa9aa0*/ LevelupPopup();
    /*0xfa9730*/ void OnCreate();
    /*0xfa9734*/ void OnDelete();
    /*0xfa9738*/ void OnEnter();
    /*0xfa9778*/ void OnFinish();
    /*0xfa977c*/ void OnLeave();
    /*0xfa9780*/ void OnStart();
    /*0xfa9784*/ void OnExit();
    /*0xfa9798*/ void InitializePopup(int _nBeforeLevel);
    /*0xfa99e8*/ void StartAnimate();
    /*0xfa9a34*/ System.Collections.IEnumerator CoAnimate();
    /*0xfa9b18*/ bool <CoAnimate>b__18_0();

    class <CoAnimate>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LevelupPopup <>4__this;

        /*0xe5217c*/ <CoAnimate>d__18(int <>1__state);
        /*0xe521a8*/ void System.IDisposable.Dispose();
        /*0xe521ac*/ bool MoveNext();
        /*0xe52430*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52438*/ void System.Collections.IEnumerator.Reset();
        /*0xe52478*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadingPopup : GuiBase
{
    static float fDefaultTime = 0.5;
    /*0x40*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x48*/ UnityEngine.GameObject m_backgroundBlack;
    /*0x50*/ UnityEngine.UI.Text m_text;
    /*0x58*/ System.Collections.IEnumerator CoUpdate;

    /*0xfb20fc*/ LoadingPopup();
    /*0xfb1e44*/ void OnCreate();
    /*0xfb1e48*/ void OnDelete();
    /*0xfb1e4c*/ void OnEnter();
    /*0xfb1e50*/ void OnStart();
    /*0xfb1e54*/ void OnExit();
    /*0xfb1e58*/ void OnFinish();
    /*0xfb1e5c*/ void OnLeave();
    /*0xfb1e60*/ void InitializeWindow(bool _enable, float _fViewTime);
    /*0xfb1fbc*/ void SetText(string _text);
    /*0xfb1f48*/ void StartUpdate(float _fTime);
    /*0xfb2068*/ System.Collections.IEnumerator CoLoading(float _fTime);
    /*0xfb20e4*/ void SetActiveBackgroundBlack(bool _bActive);

    class <CoLoading>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fTime;
        /*0x28*/ LoadingPopup <>4__this;

        /*0xe59e80*/ <CoLoading>d__15(int <>1__state);
        /*0xe59eac*/ void System.IDisposable.Dispose();
        /*0xe59eb0*/ bool MoveNext();
        /*0xe59f6c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59f74*/ void System.Collections.IEnumerator.Reset();
        /*0xe59fb4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MercenaryLendPopup : GuiBase
{
    /*0x40*/ LendGenericWindow m_GenericWindow;
    /*0x48*/ RequestLendWindow m_RequestWindow;
    /*0x50*/ UnityEngine.UI.Toggle m_GenericToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_RequestToggle;

    /*0x2b3c31c*/ MercenaryLendPopup();
    /*0x2b3c050*/ void OnCreate();
    /*0x2b3c054*/ void OnDelete();
    /*0x2b3c058*/ void OnEnter();
    /*0x2b3c0c4*/ void OnFinish();
    /*0x2b3c0c8*/ void OnLeave();
    /*0x2b3c0cc*/ void OnStart();
    /*0x2b3c0d0*/ void OnExit();
    /*0x2b3c14c*/ void InitializePopup();
    /*0x2b3c150*/ void InitializeToggle();
    /*0x2b3c2b0*/ void SetActiveContents(bool _generic, bool _request);
    /*0x2b3c324*/ void <InitializeToggle>b__12_0(bool isOn);
    /*0x2b3c3d4*/ void <InitializeToggle>b__12_1(bool isOn);
}

class MercenaryRentPopup : GuiBase
{
    /*0x40*/ ScrollContent_MercenaryRentEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_MercenaryReqCount;
    /*0x50*/ int m_nTableID;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> m_curMercenaryRent;

    /*0x2b40c2c*/ MercenaryRentPopup();
    /*0x2b404a8*/ void OnCreate();
    /*0x2b404ac*/ void OnDelete();
    /*0x2b404b0*/ void OnEnter();
    /*0x2b40674*/ void OnFinish();
    /*0x2b40678*/ void OnLeave();
    /*0x2b407c0*/ void OnStart();
    /*0x2b407c4*/ void OnExit();
    /*0x2b40840*/ void InitializePopup(int _tableid);
    /*0x2b40944*/ void SetStatusView();
    /*0x2b408e8*/ void InitializeScroll();
    /*0x2b40ba0*/ void HandlerScrollContent(int _index, MercenaryRentEntity _obj);
    /*0x2b40c24*/ void HandlerChangeEntity();
}

class MobileCamPopup : GuiBase, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    static float fCharacterDefaultScale = 0.18000000715255737;
    static float m_fMaxScale = 0.25;
    static float m_fMinScale = 0.10000000149011612;
    static float m_fPower = 0.05000000074505806;
    /*0x40*/ UnityEngine.GameObject m_UIParent;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x50*/ UnityEngine.GameObject m_BackScreen;
    /*0x58*/ UnityEngine.GameObject m_GastureListParent;
    /*0x60*/ System.Collections.Generic.List<GestureButtonEntity> m_liGestureButton;
    /*0x68*/ UnityEngine.UI.Toggle m_Repeat;
    /*0x70*/ UnityEngine.UI.Toggle m_Mirror;
    /*0x78*/ UnityEngine.UI.Slider m_Speed;
    /*0x80*/ bool bIsInitialized;
    /*0x88*/ UnityEngine.RectTransform rectTransform;
    /*0x90*/ int nUnitTableID;
    /*0x94*/ bool bIsCharacterTouch;
    /*0x98*/ ANIMATION_CLIP[] arrGestureClip;
    /*0xa0*/ bool camAvailable;
    /*0xa1*/ bool isFront;
    /*0xa8*/ UnityEngine.WebCamTexture cameraTexture;
    /*0xb0*/ UnityEngine.UI.RawImage background;
    /*0xb8*/ UnityEngine.UI.AspectRatioFitter fit;
    /*0xc0*/ UnityEngine.Vector2 m_vecFirStartPosition;
    /*0xc8*/ UnityEngine.Vector2 m_vecSecStartPosition;
    /*0xd0*/ UnityEngine.Vector2 m_vecFirEndPosition;
    /*0xd8*/ UnityEngine.Vector2 m_vecSecEndPosition;
    /*0xe0*/ float m_fStartDistance;
    /*0xe4*/ float m_fEndDistance;
    /*0xe8*/ float m_fFactor;
    /*0xec*/ bool m_bIsTouch;

    /*0x2b42e14*/ MobileCamPopup();
    /*0x2b41ac4*/ void OnCreate();
    /*0x2b41b18*/ void OnDelete();
    /*0x2b41c40*/ void OnEnter();
    /*0x2b41d84*/ void OnFinish();
    /*0x2b41d88*/ void OnLeave();
    /*0x2b41d8c*/ void OnStart();
    /*0x2b41b1c*/ void DestroyCamTexture();
    /*0x2b41d90*/ void InitializeMobileCam(bool isFront);
    /*0x2b42368*/ void Update();
    /*0x2b428b4*/ void InitializeCam(int nTableid);
    /*0x2b422fc*/ System.Collections.IEnumerator CoInitializeCharacter();
    /*0x2b41cac*/ void InitializeGestureList();
    /*0x2b428c4*/ void OnClick_Gesture();
    /*0x2b42960*/ void InitializeSettings();
    /*0x2b42bfc*/ void OnClick_ViewChange();
    /*0x2b42c14*/ void OnClick_ScreenShot();
    /*0x2b42d60*/ void OnClick_Characher();
    /*0x2b42cf4*/ System.Collections.IEnumerator CoWebShare();
    /*0x2b424f4*/ void Scaling();
    /*0x2b42d64*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x2b42d6c*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x2b42ec4*/ void <InitializeMobileCam>b__26_1(bool res);
    /*0x2b42ed0*/ bool <CoInitializeCharacter>b__29_0();
    /*0x2b42f64*/ void <InitializeSettings>b__32_0(bool on);
    /*0x2b42f98*/ void <InitializeSettings>b__32_1(bool on);
    /*0x2b42fcc*/ void <InitializeSettings>b__32_2(float val);

    class <>c
    {
        static /*0x0*/ MobileCamPopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.WebCamDevice> <>9__26_0;

        static /*0x108860c*/ <>c();
        /*0x108866c*/ <>c();
        /*0x1088674*/ void <InitializeMobileCam>b__26_0(UnityEngine.WebCamDevice x);
    }

    class <CoInitializeCharacter>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MobileCamPopup <>4__this;

        /*0x1088714*/ <CoInitializeCharacter>d__29(int <>1__state);
        /*0x1088740*/ void System.IDisposable.Dispose();
        /*0x1088744*/ bool MoveNext();
        /*0x1088a38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1088a40*/ void System.Collections.IEnumerator.Reset();
        /*0x1088a80*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoWebShare>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MobileCamPopup <>4__this;

        /*0x1088a88*/ <CoWebShare>d__36(int <>1__state);
        /*0x1088ab4*/ void System.IDisposable.Dispose();
        /*0x1088ab8*/ bool MoveNext();
        /*0x1088c94*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1088c9c*/ void System.Collections.IEnumerator.Reset();
        /*0x1088cdc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class NewHeroPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Image m_characterImage;
    /*0x48*/ UnityEngine.UI.Image m_backGroundImage;
    /*0x50*/ PTShare.Define.SHero m_HeroInfo;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0x2b51978*/ NewHeroPopup();
    /*0x2b517a4*/ void OnCreate();
    /*0x2b517a8*/ void OnEnter();
    /*0x2b517ac*/ void OnStart();
    /*0x2b517b0*/ void OnFinish();
    /*0x2b517b4*/ void OnLeave();
    /*0x2b517bc*/ void OnDelete();
    /*0x2b517c0*/ void OnExit();
    /*0x2b517b8*/ void Leave();
    /*0x2b5185c*/ void ImportEvent();
    /*0x2b51858*/ void DeleteEvent();
    /*0x2b51860*/ void InitalizeNewHero(TableData.TableData_Unitbase _base);
    /*0x2b5186c*/ void InitalizeNewHero(PTShare.Define.SHero _hero);
    /*0x2b518a0*/ void SetBackground();
    /*0x2b5190c*/ void SetCharacterImage();
}

class NoticePopup : GuiBase
{
    /*0x40*/ ScrollContent_NoticeEntity m_ScrollContent;
    /*0x48*/ NoticeDescriptionView m_DescriptionView;
    /*0x50*/ UnityEngine.GameObject m_allReadButton;
    /*0x58*/ System.Action onExitEvent;

    /*0x2b533c0*/ NoticePopup();
    /*0x2b52dd0*/ System.Collections.Generic.List<PTShare.Define.SNotice> get_liNoticeData();
    /*0x2b52e50*/ void OnCreate();
    /*0x2b52e54*/ void OnDelete();
    /*0x2b52e58*/ void OnEnter();
    /*0x2b52f84*/ void OnFinish();
    /*0x2b52f88*/ void OnLeave();
    /*0x2b5305c*/ void OnStart();
    /*0x2b53060*/ void OnExit();
    /*0x2b531a4*/ void InitializePopup(System.Action _exitCallback);
    /*0x2b531d4*/ void InitializeScroll();
    /*0x2b53250*/ void HandlerScrollContent(int _nIndex, NoticeEntity _ent);
    /*0x2b53118*/ void SetActiveContent(bool _bDescription, bool _bScrollContent);
    /*0x2b53334*/ void OnClick_AllRead();
    /*0x2b533c8*/ void <HandlerScrollContent>b__15_0(PTShare.Define.SNotice data);
}

class OpenBookPopup : GuiBase
{
    static string ANIM_CREATE = "Book_OpenTemp";
    static string ANIM_OPEN = "Book_NextOpen";
    static string ANIM_NEXT = "Book_NextPage";
    static string ANIM_PREVIOUS = "Book_PreviousPage";
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x40*/ LocalizeString m_cTitle;
    /*0x48*/ UnityEngine.UI.Outline m_OutlineTitle;
    /*0x50*/ UnityEngine.UI.Image m_cBackground;
    /*0x58*/ UnityEngine.UI.Image m_cFrame;
    /*0x60*/ UnityEngine.UI.Image m_cSubFrame;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_cIlliust;
    /*0x70*/ UnityEngine.Animator m_Animator;
    /*0x78*/ UnityEngine.GameObject m_OpenButton;
    /*0x80*/ UnityEngine.GameObject m_OpenParent;
    /*0x88*/ LocalizeString m_CharacterName;
    /*0x90*/ LocalizeString m_CharacterNick;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0xa0*/ UnityEngine.GameObject m_RewardButton;
    /*0xa8*/ LocalizeString m_StoryText;
    /*0xb0*/ UnityEngine.GameObject m_NextPageButton;
    /*0xb8*/ UnityEngine.GameObject m_PreviousPageButton;
    /*0xc0*/ UnityEngine.Color[] m_TitleTextColor;
    /*0xc8*/ UnityEngine.Color[] m_TitleOutlineColor;
    /*0xd0*/ bool m_bPlayAnimate;
    /*0xd1*/ bool m_bInitializedStory;
    /*0xd4*/ int m_nPageCount;
    /*0xd8*/ TableData.TableData_Unitbase m_UnitbaseInfo;
    /*0xe0*/ int m_nSkinID;
    /*0xe8*/ PTShare.Define.SBook m_BookInfo;
    /*0xf0*/ System.Collections.Generic.List<string> m_liStoryText;

    static /*0x11355bc*/ OpenBookPopup();
    static /*0x1133c00*/ void add_OnChangeEvent(System.Action value);
    static /*0x1133cf4*/ void remove_OnChangeEvent(System.Action value);
    /*0x11351e4*/ OpenBookPopup();
    /*0x1133de8*/ void OnCreate();
    /*0x1133dec*/ void OnEnter();
    /*0x1133df0*/ void OnStart();
    /*0x1133df4*/ void OnFinish();
    /*0x1133df8*/ void OnLeave();
    /*0x1133e00*/ void OnDelete();
    /*0x1133e64*/ void OnExit();
    /*0x1133e6c*/ void InitializePopup(int _unitIndex, int _skinIndex);
    /*0x1134478*/ void InitializeStory();
    /*0x11347a8*/ void InitializeSplitText();
    /*0x1134c38*/ void RefreshSplitText();
    /*0x1134ce0*/ void OnClickOpen();
    /*0x1134db8*/ void OnClickNextOrPrevious(bool _isPrevious);
    /*0x1134f58*/ void OnClick_Reward();
    /*0x1135044*/ void CallbackBookReward();
    /*0x11343e4*/ System.Collections.IEnumerator OnAnimate(string _stateName, bool _reverse, System.Action _callback);
    /*0x11355c0*/ void <OnClickNextOrPrevious>b__44_0();

    class <>c__DisplayClass47_0
    {
        /*0x10*/ bool _reverse;
        /*0x18*/ OpenBookPopup <>4__this;

        /*0x108ae28*/ <>c__DisplayClass47_0();
        /*0x108ae30*/ bool <OnAnimate>b__0();
    }

    class <OnAnimate>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool _reverse;
        /*0x28*/ OpenBookPopup <>4__this;
        /*0x30*/ string _stateName;
        /*0x38*/ System.Action _callback;

        /*0x108aeec*/ <OnAnimate>d__47(int <>1__state);
        /*0x108af18*/ void System.IDisposable.Dispose();
        /*0x108af1c*/ bool MoveNext();
        /*0x108b0e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108b0e8*/ void System.Collections.IEnumerator.Reset();
        /*0x108b128*/ object System.Collections.IEnumerator.get_Current();
    }
}

class OptionAccountSettingsPopup : GuiBase
{
    /*0x40*/ OptionAccountPlatform m_platformGrid;
    /*0x48*/ LocalizeString m_loginButtonLocalize;
    /*0x50*/ UnityEngine.UI.Button m_accountDeleteButton;

    /*0x1136010*/ OptionAccountSettingsPopup();
    /*0x11357c0*/ void OnCreate();
    /*0x11357c4*/ void OnDelete();
    /*0x11357c8*/ void OnEnter();
    /*0x11358f0*/ void OnFinish();
    /*0x11358f4*/ void OnLeave();
    /*0x113599c*/ void OnStart();
    /*0x11359a0*/ void OnExit();
    /*0x1135a1c*/ void InitializePopup();
    /*0x1135bbc*/ void OnClickAccountLogin();
    /*0x1135c3c*/ void OnClickAccountDelete();
    /*0x1135a20*/ void SetLoginButton();
    /*0x1135f78*/ void HandlerSuccressLinkEvent();
    /*0x1135fa4*/ System.Collections.IEnumerator CoExit();

    class <>c
    {
        static /*0x0*/ OptionAccountSettingsPopup.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__12_0;

        static /*0x108b130*/ <>c();
        /*0x108b190*/ <>c();
        /*0x108b198*/ void <OnClickAccountDelete>b__12_0(bool result);
    }

    class <CoExit>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ OptionAccountSettingsPopup <>4__this;

        /*0x108b22c*/ <CoExit>d__15(int <>1__state);
        /*0x108b258*/ void System.IDisposable.Dispose();
        /*0x108b25c*/ bool MoveNext();
        /*0x108b2b8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108b2c0*/ void System.Collections.IEnumerator.Reset();
        /*0x108b300*/ object System.Collections.IEnumerator.get_Current();
    }
}

class OptionChangeGenderPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject[] m_obSelectImage;
    /*0x48*/ AtlasImage[] m_obSelectIcon;
    /*0x50*/ SProfile sUpdateProfile;

    /*0x1136530*/ OptionChangeGenderPopup();
    /*0x1136018*/ void OnCreate();
    /*0x113601c*/ void OnEnter();
    /*0x1136198*/ void OnStart();
    /*0x113619c*/ void OnFinish();
    /*0x11361a0*/ void OnLeave();
    /*0x1136248*/ void OnDelete();
    /*0x113624c*/ void OnExit();
    /*0x1136110*/ void LoadUpdateProfile();
    /*0x1136480*/ void Send_UpdateProfile();
    /*0x11362c8*/ void OnClick_Gender(int _nIndex);
    /*0x1136524*/ void UpdateGender();
}

class OptionChangeNickNamePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_inputField;
    /*0x48*/ UnityEngine.GameObject m_TopExitButton;
    /*0x50*/ UnityEngine.GameObject m_BottomExitButton;
    /*0x58*/ LocalizeString m_textNeedMoney;
    /*0x60*/ LocalizeString m_useMoney;
    /*0x68*/ bool m_bDefenseExit;

    /*0x113722c*/ OptionChangeNickNamePopup();
    /*0x1136538*/ void OnExit();
    /*0x11365c8*/ void InitializeWindow(bool _bDefenseExit);
    /*0x113683c*/ void OnClick_UpdateNickName();
    /*0x1136e08*/ void HandlerUpdateUserInfo();
    /*0x1137020*/ void OnCreate();
    /*0x113708c*/ void OnEnter();
    /*0x1137178*/ void OnStart();
    /*0x113717c*/ void OnFinish();
    /*0x1137180*/ void OnLeave();
    /*0x1137228*/ void OnDelete();
    /*0x1137234*/ void <OnClick_UpdateNickName>b__8_0(bool _result);
}

class OptionChangeProfilePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_inputField;

    /*0x1137800*/ OptionChangeProfilePopup();
    /*0x11372e4*/ void OnExit();
    /*0x11373dc*/ void OnClick_UpdateProfileMessage();
    /*0x1137654*/ void HandlerUpdateUserInfo();
    /*0x11376d8*/ void OnCreate();
    /*0x11376dc*/ void OnEnter();
    /*0x11377f0*/ void OnStart();
    /*0x11377f4*/ void OnFinish();
    /*0x11377f8*/ void OnLeave();
    /*0x11377fc*/ void OnDelete();
}

class OptionCustomProfilePopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggle;
    /*0x48*/ ScrollContent_CustomProfileSlotEntity m_ScrollContent;
    /*0x50*/ PlayerProfileSlot m_cHeroMainTarget;
    /*0x58*/ LocalizeString m_itemName;
    /*0x60*/ UnityEngine.CanvasGroup m_getDescCanvas;
    /*0x68*/ LocalizeString m_getDescText;
    /*0x70*/ SProfile m_curProfile;
    /*0x90*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_tUnitBase;
    /*0x98*/ System.Collections.Generic.List<PTShare.Define.SBook> m_tCurMyUnit;
    /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SSkin> m_tCurMySkin;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Profileskin> m_tProfileSkin;
    /*0xb0*/ ProfileSlotDetail m_accountDetail;
    /*0xbc*/ ProfileSkinType m_curToggleType;
    /*0xc0*/ bool m_isPlayToggleSound;

    /*0x11397ec*/ OptionCustomProfilePopup();
    /*0x1137808*/ void OnCreate();
    /*0x113780c*/ void OnEnter();
    /*0x1137810*/ void OnStart();
    /*0x1137814*/ void OnFinish();
    /*0x1137818*/ void OnLeave();
    /*0x113781c*/ void OnDelete();
    /*0x1137820*/ void OnExit();
    /*0x113789c*/ void InitializePopup();
    /*0x113822c*/ void InitializeToggle();
    /*0x1137e7c*/ void InitializeScroll();
    /*0x11383e0*/ void HandlerUnitIcon(int _nIndex, CustomProfileSlotEntity _Instance);
    /*0x1138a18*/ void HandlerBackground(int _nIndex, CustomProfileSlotEntity _Instance);
    /*0x1138bb4*/ void HandlerFrame(int _nIndex, CustomProfileSlotEntity _Instance);
    /*0x1138fbc*/ void OnChangeProfileSlot_UnitIcon(TableData.TableData_Unitbase _unitbase);
    /*0x11390ec*/ void OnChangeProfileSlot_Frame(int _nIndex);
    /*0x11393f8*/ void OnChangeProfileSlot_Background(int _nIndex);
    /*0x11394a8*/ void OnClick_ConfirmUpdate();
    /*0x1139140*/ void SetFrameLocalize(int _nIndex);
    /*0x1139448*/ void SetBackgroundLocalize(int _nIndex);
    /*0x11395d8*/ void Refresh();
    /*0x113993c*/ bool <InitializeToggle>b__22_1(TableData.TableData_Unitbase x);

    class <>c
    {
        static /*0x0*/ OptionCustomProfilePopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__21_0;

        static /*0x108b308*/ <>c();
        /*0x108b368*/ <>c();
        /*0x108b370*/ bool <InitializePopup>b__21_0(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ int current;
        /*0x18*/ OptionCustomProfilePopup <>4__this;

        /*0x108b420*/ <>c__DisplayClass22_0();
        /*0x108b428*/ void <InitializeToggle>b__0(bool isOn);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ OptionCustomProfilePopup <>4__this;
        /*0x18*/ int _nIndex;

        /*0x108b6d8*/ <>c__DisplayClass24_0();
        /*0x108b6e0*/ bool <HandlerUnitIcon>b__0(PTShare.Define.SBook x);
        /*0x108b778*/ bool <HandlerUnitIcon>b__1(PTShare.Define.SSkin x);
        /*0x108b810*/ void <HandlerUnitIcon>b__2();
        /*0x108b8b0*/ void <HandlerUnitIcon>b__3();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ OptionCustomProfilePopup <>4__this;
        /*0x18*/ ProfileSlotDetail _detail;

        /*0x108b934*/ <>c__DisplayClass25_0();
        /*0x108b93c*/ void <HandlerBackground>b__0();
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ OptionCustomProfilePopup <>4__this;
        /*0x18*/ ProfileSlotDetail _detail;
        /*0x28*/ TableData.TableData_Profileskin data;

        /*0x108b960*/ <>c__DisplayClass26_0();
        /*0x108b968*/ void <HandlerFrame>b__1();
        /*0x108b98c*/ void <HandlerFrame>b__0();
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ TableData.TableData_Unitbase unit;

        /*0x108bb9c*/ <>c__DisplayClass33_0();
        /*0x108bba4*/ bool <Refresh>b__0(PTShare.Define.SSkin s);
    }
}

class OptionEditTroopPopup : GuiBase
{
    static /*0x0*/ System.Action OnChangeViewEntity;
    /*0x40*/ HeroOptionTroopSlot[] m_SlotTroop;
    /*0x48*/ ScrollContent_EditorTroop m_cScrollEditorTroop;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SHero> m_curtHerosTroop;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SHero> m_curMyHeros;
    /*0x60*/ PTShare.Define.SHero RegisterHero;
    /*0x68*/ PTShare.Define.SHero ReleaseHero;

    static /*0x113a5a8*/ OptionEditTroopPopup();
    static /*0x1139960*/ void add_OnChangeViewEntity(System.Action value);
    static /*0x1139a54*/ void remove_OnChangeViewEntity(System.Action value);
    /*0x113a510*/ OptionEditTroopPopup();
    /*0x1139b48*/ void OnCreate();
    /*0x1139b4c*/ void OnEnter();
    /*0x1139b50*/ void OnStart();
    /*0x1139bf0*/ void OnFinish();
    /*0x1139bf4*/ void OnLeave();
    /*0x1139bf8*/ void OnDelete();
    /*0x1139bfc*/ void InitTroop(System.Collections.Generic.List<PTShare.Define.SHero> _tHerosbyRepresentative);
    /*0x1139e08*/ void ViewCurrentRepresentative();
    /*0x1139fb4*/ void OnClickRepresentativeSlot(PTShare.Define.SHero _sHero);
    /*0x113a0f4*/ void HandlerTroop(int _index, HeroOptionTroopSlot _instance);
    /*0x113a2b0*/ void OnClickEventInven(PTShare.Define.SHero _sHero);
    /*0x113a41c*/ void RegisterTroopSlot(PTShare.Define.SHero _sHero);
    /*0x113a028*/ void ReleaseTroopSlot(PTShare.Define.SHero _sHero);
    /*0x113a48c*/ void OnClick_Save();
    /*0x113a490*/ void CallbackSaveMainforce();
    /*0x113a5ac*/ bool <ReleaseTroopSlot>b__21_0(PTShare.Define.SHero x);

    class <>c
    {
        static /*0x0*/ OptionEditTroopPopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SHero> <>9__15_0;

        static /*0x108bbd4*/ <>c();
        /*0x108bc34*/ <>c();
        /*0x108bc3c*/ bool <InitTroop>b__15_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ OptionEditTroopPopup <>4__this;
        /*0x18*/ int _index;

        /*0x108bc5c*/ <>c__DisplayClass18_0();
        /*0x108bc64*/ bool <HandlerTroop>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ PTShare.Define.SHero _sHero;

        /*0x108bcfc*/ <>c__DisplayClass19_0();
        /*0x108bd04*/ bool <OnClickEventInven>b__0(PTShare.Define.SHero x);
    }
}

class OptionGuildWarPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_goToggleHPMP;
    /*0x48*/ UnityEngine.UI.Toggle m_goToggleBuff;
    /*0x50*/ UnityEngine.UI.Toggle m_goToggleDamage;
    /*0x58*/ bool m_bHPMPActive;
    /*0x59*/ bool m_bBuffActive;
    /*0x5a*/ bool m_bDamageActive;

    /*0x113acf8*/ OptionGuildWarPopup();
    /*0x113a5dc*/ void OnCreate();
    /*0x113a69c*/ void OnDelete();
    /*0x113a6a0*/ void OnEnter();
    /*0x113a70c*/ void OnFinish();
    /*0x113a710*/ void OnLeave();
    /*0x113a714*/ void OnStart();
    /*0x113a718*/ void OnExit();
    /*0x113a5e0*/ void Initialize();
    /*0x113a940*/ void OnClickAccept();
    /*0x113ab60*/ void OnClickToggleHPMP(bool _bActive);
    /*0x113abe8*/ void OnClickToggleBuff(bool _bActive);
    /*0x113ac70*/ void OnClickToggleDamage(bool _bActive);
}

class OptionInputCouponPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_couponInputField;

    /*0x113b1f8*/ OptionInputCouponPopup();
    /*0x113ad00*/ void OnCreate();
    /*0x113ad04*/ void OnDelete();
    /*0x113ad08*/ void OnEnter();
    /*0x113ad74*/ void OnFinish();
    /*0x113ad78*/ void OnLeave();
    /*0x113ad7c*/ void OnStart();
    /*0x113ad80*/ void OnExit();
    /*0x113adfc*/ void InitializePopup();
    /*0x113ae58*/ void OnClick_Confirm();
    /*0x113ae00*/ void ClearInputField();
    /*0x113b088*/ void OnSuccess();
    /*0x113b188*/ void OnFail();
    /*0x113b200*/ void <OnClick_Confirm>b__9_0(ServerProtocol.ResEventCoupon res);
    /*0x113b204*/ void <OnClick_Confirm>b__9_1(int error, string args);
}

class OptionLanguagePopup : GuiBase
{
    /*0x40*/ int nLocalizeTypeIndex;
    /*0x48*/ UnityEngine.UI.Toggle[] Toogles;
    /*0x50*/ UnityEngine.UI.Text[] m_cLocalizeArray;

    /*0x113b878*/ OptionLanguagePopup();
    /*0x113b208*/ void OnCreate();
    /*0x113b20c*/ void OnEnter();
    /*0x113b510*/ void OnStart();
    /*0x113b514*/ void OnFinish();
    /*0x113b518*/ void OnLeave();
    /*0x113b51c*/ void OnDelete();
    /*0x113b520*/ void OnExit();
    /*0x113b284*/ void LoadLocalizeType();
    /*0x113b61c*/ System.Collections.IEnumerator CoWaitCallback(System.Action callBack);
    /*0x113b688*/ void OnClick_ChangeLanguage(int nIndex);
    /*0x113b708*/ void OnClick_Save();
    /*0x113b888*/ void <LoadLocalizeType>b__10_0();

    class <CoWaitCallback>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action callBack;

        /*0x108c020*/ <CoWaitCallback>d__11(int <>1__state);
        /*0x108c04c*/ void System.IDisposable.Dispose();
        /*0x108c050*/ bool MoveNext();
        /*0x108c0ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108c0b4*/ void System.Collections.IEnumerator.Reset();
        /*0x108c0f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ LocaleLanguageType _eType;
        /*0x18*/ OptionLanguagePopup <>4__this;
        /*0x20*/ System.Action<bool> <>9__1;

        /*0x108bd34*/ <>c__DisplayClass13_0();
        /*0x108bd3c*/ void <OnClick_Save>b__0();
        /*0x108be64*/ void <OnClick_Save>b__1(bool result);
    }
}

class OptionPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle toggle_Action_UserInfo;
    /*0x48*/ UnityEngine.UI.Toggle toggle_Action_OptionInfo;
    /*0x50*/ UserInfoViewEntity m_cUserInfoView;
    /*0x58*/ UserOptionViewEntity m_cUserOptionView;
    /*0x60*/ LocalizeString m_curTextTitle;
    /*0x68*/ bool m_isShowToggleSound;

    /*0x113c9ec*/ OptionPopup();
    /*0x113c2a8*/ UserData get_m_sUserData();
    /*0x113c338*/ void OnExit();
    /*0x113c3a4*/ void OnClick_Exit();
    /*0x113c424*/ void OnCreate();
    /*0x113c574*/ void OnEnter();
    /*0x113c744*/ void OnStart();
    /*0x113c748*/ void OnFinish();
    /*0x113c74c*/ void OnLeave();
    /*0x113c864*/ void OnDelete();
    /*0x113c428*/ void Init_ToggleValued();
    /*0x113c97c*/ void HandlerUpdateUserInfo();
    /*0x113c9d0*/ void HandlerChangeHeroInfo();
    /*0x113c9f4*/ void <Init_ToggleValued>b__16_0(bool _call);
    /*0x113cbc4*/ void <Init_ToggleValued>b__16_1(bool _call);
}

class OtherProfileInfomationPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_ToggleParent;
    /*0x48*/ UnityEngine.GameObject m_HouseParent;
    /*0x50*/ UnityEngine.UI.Toggle m_InfoToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_FormaToggle;
    /*0x60*/ OtherInfomationSubWindow m_InfomationSubWindow;
    /*0x68*/ OtherFormationSubWindow m_FormationSubWindow;
    /*0x70*/ LocalizeString m_totalLike;
    /*0x78*/ ServerProtocol.ResAccountDetail m_DetailInfo;

    /*0x11418f0*/ OtherProfileInfomationPopup();
    /*0x1141114*/ void OnCreate();
    /*0x1141118*/ void OnDelete();
    /*0x114111c*/ void OnEnter();
    /*0x1141188*/ void OnFinish();
    /*0x114118c*/ void OnLeave();
    /*0x1141190*/ void OnStart();
    /*0x1141194*/ void OnExit();
    /*0x1141210*/ void InitializeWindow(ServerProtocol.ResAccountDetail _detail);
    /*0x11415c0*/ void InitializeWindowGuild(ServerProtocol.ResAccountDetail _detail);
    /*0x11413d4*/ void InitializeToggle();
    /*0x1141544*/ void SetActiveContents(bool _isInfomation, bool _isFormation);
    /*0x1141784*/ void OnClickHouse();
    /*0x11418f8*/ void <InitializeToggle>b__17_0(bool isOn);
    /*0x1141940*/ void <InitializeToggle>b__17_1(bool isOn);

    class <>c
    {
        static /*0x0*/ OtherProfileInfomationPopup.<> <>9;
        static /*0x8*/ System.Action <>9__19_0;

        static /*0x108c3b8*/ <>c();
        /*0x108c418*/ <>c();
        /*0x108c420*/ void <OnClickHouse>b__19_0();
    }
}

class PausePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_ExitButton;
    /*0x48*/ UnityEngine.GameObject m_RetryButton;
    /*0x50*/ UnityEngine.GameObject m_GuildBattleOptionButton;

    /*0x1148224*/ PausePopup();
    /*0x1147c30*/ void OnCreate();
    /*0x1147c34*/ void OnDelete();
    /*0x1147c38*/ void OnEnter();
    /*0x1147e40*/ void OnFinish();
    /*0x1147e44*/ void OnLeave();
    /*0x1147e48*/ void OnStart();
    /*0x1147e4c*/ void OnExit();
    /*0x1147e78*/ void OnClickExit();
    /*0x1147fe0*/ void OnClickRetry();
    /*0x1148128*/ void OnClickPlay();
    /*0x11481a8*/ void OnClickGuildBattleOption();
    /*0x1147cb4*/ void SetPause(bool _enable);
}

class PurchaseNotifyPopup : GuiBase
{
    /*0x40*/ ParticleBase m_purchaseParticle;

    /*0x101c42c*/ PurchaseNotifyPopup();
    /*0x101c3f4*/ void OnCreate();
    /*0x101c3f8*/ void OnDelete();
    /*0x101c3fc*/ void OnEnter();
    /*0x101c420*/ void OnFinish();
    /*0x101c424*/ void OnLeave();
    /*0x101c428*/ void OnStart();
}

class PveRankingPopup : GuiBase
{
    /*0x40*/ SeasonTimeText m_seasonTime;
    /*0x48*/ PveStageWindow m_stageWindow;
    /*0x50*/ PveStatusWindow m_statusWindow;
    /*0x58*/ int m_resetDay;

    /*0x1023c84*/ PveRankingPopup();
    /*0x1023464*/ void OnCreate();
    /*0x1023468*/ void OnDelete();
    /*0x102346c*/ void OnEnter();
    /*0x1023470*/ void OnFinish();
    /*0x1023474*/ void OnLeave();
    /*0x1023568*/ void OnStart();
    /*0x102356c*/ void OnExit();
    /*0x10235e8*/ void InitializePopup();
    /*0x10238ec*/ void OnClick_Help();
    /*0x1023990*/ void OnClick_Ranking();
    /*0x10237f4*/ void BindEvent();
    /*0x1023478*/ void RemoveEvent();
    /*0x1023abc*/ void HandleDailyChange();
    /*0x1023c8c*/ void <HandleDailyChange>b__16_0(bool confirm);

    class <>c
    {
        static /*0x0*/ PveRankingPopup.<> <>9;
        static /*0x8*/ System.Action<ServerProtocol.ResPveRankingRanking> <>9__13_0;

        static /*0x1091fb0*/ <>c();
        /*0x1092010*/ <>c();
        /*0x1092018*/ void <OnClick_Ranking>b__13_0(ServerProtocol.ResPveRankingRanking instance);
    }
}

class QuestPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_DailyToggle;
    /*0x48*/ UnityEngine.UI.Toggle m_WeeklyToggle;
    /*0x50*/ UnityEngine.UI.Toggle m_MainToggle;
    /*0x58*/ AtlasImage m_RedDot_Daily;
    /*0x60*/ AtlasImage m_RedDot_Weekly;
    /*0x68*/ AtlasImage m_RedDot_Main;
    /*0x70*/ QuestDailySubWindow m_DailySubWindow;
    /*0x78*/ QuestMainSubWindow m_MainSubWindow;

    /*0x1244328*/ QuestPopup();
    /*0x12435dc*/ void OnCreate();
    /*0x12435e0*/ void OnDelete();
    /*0x124385c*/ void OnEnter();
    /*0x1243b98*/ void OnFinish();
    /*0x1243b9c*/ void OnLeave();
    /*0x1243d24*/ void OnStart();
    /*0x1243d28*/ void OnExit();
    /*0x1243e68*/ void InitializeWindow();
    /*0x1243eb0*/ void InitializeToggle();
    /*0x1244078*/ void SetActiveContent(bool _isDaily, bool _isMain);
    /*0x12440f4*/ void RefreshRedDot();
    /*0x124428c*/ void SelectTabReddotHide();
    /*0x1244320*/ void HandlerChangeStateRedDot();
    /*0x1244324*/ void HandlerChangeStateRedDot(int _nEmpty);
    /*0x1244330*/ void <InitializeToggle>b__16_0(bool isOn);
    /*0x12443f4*/ void <InitializeToggle>b__16_1(bool isOn);
    /*0x12444b8*/ void <InitializeToggle>b__16_2(bool isOn);
}

class RacePastPopup : GuiBase
{
    /*0x40*/ ScrollContent_RacePastEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_Desc;

    /*0x124ca98*/ RacePastPopup();
    /*0x124c5b0*/ System.Collections.Generic.List<PTShare.Define.SRace> get_liPastRace();
    /*0x124c630*/ void OnCreate();
    /*0x124c634*/ void OnDelete();
    /*0x124c638*/ void OnEnter();
    /*0x124c764*/ void OnFinish();
    /*0x124c768*/ void OnLeave();
    /*0x124c83c*/ void OnStart();
    /*0x124c840*/ void OnExit();
    /*0x124c8bc*/ void InitializePopup();
    /*0x124c9b8*/ void InitializeScroll();
    /*0x124ca18*/ void HandlerScrollContent(int nIndex, RacePastEntity entity);
}

class RaceResultPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_RewardParent;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Victory;
    /*0x50*/ System.Collections.Generic.List<RaceResultEntity> m_liResultEntity;
    /*0x58*/ System.Collections.Generic.List<RaceRewardEntity> m_liRewardEntity;
    /*0x60*/ bool bIsCompleteAnimation;
    /*0x68*/ RunRaceResultData dataInfo;

    /*0x11b5384*/ RaceResultPopup();
    /*0x11b49d0*/ void OnCreate();
    /*0x11b49d4*/ void OnDelete();
    /*0x11b49d8*/ void OnEnter();
    /*0x11b49dc*/ void OnFinish();
    /*0x11b49e0*/ void OnLeave();
    /*0x11b49e4*/ void OnStart();
    /*0x11b49e8*/ void OnExit();
    /*0x11b4bd8*/ void InitializePopup(RunRaceResultData data);
    /*0x11b4d8c*/ void SetRewardEntity();
    /*0x11b5164*/ void StartAnimation();
    /*0x11b5318*/ System.Collections.IEnumerator CoAnimation();

    class <>c
    {
        static /*0x0*/ RaceResultPopup.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;

        static /*0xf94dd8*/ <>c();
        /*0xf94e38*/ <>c();
        /*0xf94e40*/ void <OnExit>b__12_0();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ RaceResultPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<bool> <>9__0;

        /*0xf94eb4*/ <>c__DisplayClass16_0();
        /*0xf94ebc*/ bool <CoAnimation>b__0();
    }

    class <CoAnimation>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceResultPopup <>4__this;
        /*0x28*/ RaceResultPopup.<> <>8__1;

        /*0xf94f38*/ <CoAnimation>d__16(int <>1__state);
        /*0xf94f64*/ void System.IDisposable.Dispose();
        /*0xf94f68*/ bool MoveNext();
        /*0xf9523c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf95244*/ void System.Collections.IEnumerator.Reset();
        /*0xf95284*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RaceSelectPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_OpenParent;
    /*0x48*/ UnityEngine.GameObject m_CloseParent;
    /*0x50*/ System.Collections.Generic.List<RacePlayerSelectEntity> m_liPlayerSelectEntity;
    /*0x58*/ System.Collections.Generic.List<RaceRewardEntity> m_liRewardEntity;
    /*0x60*/ LocalizeString m_Title;
    /*0x68*/ LocalizeString m_TimeText;
    /*0x70*/ bool bIsInitialized;
    /*0x78*/ System.Collections.IEnumerator ieUpdate;
    /*0x80*/ int nHandleCount;

    /*0x11b63a4*/ RaceSelectPopup();
    /*0x11b55cc*/ System.Collections.Generic.List<PTShare.Define.SRunner> get_liRunners();
    /*0x11b564c*/ int get_currentSeq();
    /*0x11b56cc*/ void OnCreate();
    /*0x11b56d0*/ void OnDelete();
    /*0x11b56d4*/ void OnEnter();
    /*0x11b56dc*/ void OnFinish();
    /*0x11b56e0*/ void OnLeave();
    /*0x11b56e8*/ void OnStart();
    /*0x11b56ec*/ void OnExit();
    /*0x11b5768*/ void InitializePopup();
    /*0x11b5ac4*/ void SetPlayerSelectEntity();
    /*0x11b5c5c*/ void SetRewardEntity();
    /*0x11b61ec*/ void OnClick_Past();
    /*0x11b6334*/ void OnSelectPlayerCallback();
    /*0x11b5fa8*/ void ViewPastRace(int currentSeq, int viewSeq);
    /*0x11b5f5c*/ void StartTimer();
    /*0x11b6338*/ System.Collections.IEnumerator CoUpdate();
    /*0x11b63ac*/ void <CoUpdate>b__27_1();

    class <>c
    {
        static /*0x0*/ RaceSelectPopup.<> <>9;
        static /*0x8*/ System.Action <>9__23_0;
        static /*0x10*/ System.Action<RunRaceResultData> <>9__25_1;
        static /*0x18*/ System.Converter<string, System.TimeSpan> <>9__27_0;

        static /*0xf9528c*/ <>c();
        /*0xf952ec*/ <>c();
        /*0xf952f4*/ void <OnClick_Past>b__23_0();
        /*0xf95374*/ void <ViewPastRace>b__25_1(RunRaceResultData data);
        /*0xf953fc*/ System.TimeSpan <CoUpdate>b__27_0(string x);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ int viewSeq;
        /*0x14*/ int pastTrack;
        /*0x18*/ RaceSelectPopup <>4__this;

        /*0xf954e4*/ <>c__DisplayClass25_0();
        /*0xf954ec*/ void <ViewPastRace>b__0(bool result);
    }

    class <CoUpdate>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceSelectPopup <>4__this;
        /*0x28*/ System.TimeSpan <minLimitSpan>5__2;
        /*0x30*/ System.TimeSpan <maxLimitSpan>5__3;

        /*0xf956dc*/ <CoUpdate>d__27(int <>1__state);
        /*0xf95708*/ void System.IDisposable.Dispose();
        /*0xf9570c*/ bool MoveNext();
        /*0xf96504*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9650c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9654c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RankingBoardCategoryRankPopup : GuiBase
{
    /*0x40*/ ScrollContent_RankBoardRankEntity m_ScrollContent;
    /*0x48*/ RankBoardRankEntity m_MyRankEntity;
    /*0x50*/ LocalizeString m_Title;
    /*0x58*/ LocalizeString m_MyRankText;
    /*0x60*/ UnityEngine.GameObject m_reddot;
    /*0x68*/ UnityEngine.RectTransform m_boardRect;
    /*0x70*/ UnityEngine.GameObject m_factionParent;
    /*0x78*/ AtlasImage m_factionBanner;
    /*0x80*/ UnityEngine.GameObject m_rankingButton;
    /*0x88*/ UnityEngine.GameObject[] m_guildMenus;
    /*0x90*/ AtlasImage m_guildPersonIcon;
    /*0x98*/ AtlasImage m_guildPersonFrame;
    /*0xa0*/ AtlasImage m_guildIcon;
    /*0xa8*/ AtlasImage m_guildFrame;
    /*0xb0*/ RankingBoardType m_eBoardType;

    /*0x11c19d8*/ RankingBoardCategoryRankPopup();
    /*0x11bf5f8*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> get_curCampaignRanker();
    /*0x11bf678*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> get_curHardCampaignRanker();
    /*0x11bf6f8*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> get_curTowerRanker();
    /*0x11bf778*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> get_curFactionRanker();
    /*0x11bf7f8*/ System.Collections.Generic.List<PTShare.Define.SLongRanker> get_curGuildBossPersonRanker();
    /*0x11bf854*/ System.Collections.Generic.List<PTShare.Define.SRankerGuild> get_curGuildBossGuildRanker();
    /*0x11bf8b0*/ System.Collections.Generic.List<PTShare.Define.SRanker> get_curMiniGameRaceRanker();
    /*0x11bf938*/ System.Collections.Generic.List<PTShare.Define.SRanker> get_curMiniGameRunRanker();
    /*0x11bf994*/ void OnCreate();
    /*0x11bf998*/ void OnDelete();
    /*0x11bf99c*/ void OnEnter();
    /*0x11bfb18*/ void OnFinish();
    /*0x11bfb1c*/ void OnLeave();
    /*0x11bff58*/ void OnStart();
    /*0x11bff5c*/ void OnExit();
    /*0x11c0070*/ void InitializePopup(RankingBoardType _eType, int _nMyRank, string _strFloor);
    /*0x11c0860*/ void SetTitle(RankingBoardType _eType);
    /*0x11c0b38*/ void SetRect(RankingBoardType _eType);
    /*0x11c0c14*/ void SetBanner(RankingBoardType _eType);
    /*0x11c0db0*/ void SetMenus(RankingBoardType _eType);
    /*0x11c0ee8*/ void UpdateReddot();
    /*0x11bfbc8*/ void DeleteScrollEvent();
    /*0x11c0324*/ void InitializeScroll();
    /*0x11c0fe8*/ void HandlerScrollContent_Campaign(int _index, RankBoardRankEntity _obj);
    /*0x11c1094*/ void HandlerScrollContent_HardCampaign(int _index, RankBoardRankEntity _obj);
    /*0x11c1140*/ void HandlerScrollContent_Tower(int _index, RankBoardRankEntity _obj);
    /*0x11c11ec*/ void HandlerScrollContent_Faction(int _index, RankBoardRankEntity _obj);
    /*0x11c1298*/ void HandlerScrollContent_GuildBoss(int _index, RankBoardRankEntity _obj);
    /*0x11c1348*/ void HandlerScrollContent_GuildBossPerson(int _index, RankBoardRankEntity _obj);
    /*0x11c13f8*/ void HandlerScrollContent_MiniGameRace(int _index, RankBoardRankEntity _obj);
    /*0x11c14a8*/ void HandlerScrollContent_MiniGameRun(int _index, RankBoardRankEntity _obj);
    /*0x11c1558*/ void OnClickReward();
    /*0x11c1638*/ void OnClickBoss(int index);
    /*0x11bfab8*/ void CheckRedDot();
    /*0x11c19d4*/ void HandlerReceiveReward();
    /*0x11c19e0*/ void <OnExit>b__37_0();
    /*0x11c19e8*/ void <OnClickReward>b__54_0();
    /*0x11c1ab4*/ void <OnClickBoss>b__55_0(ServerProtocol.ResGuildGuildRanking response);
    /*0x11c1bbc*/ void <OnClickBoss>b__55_1(ServerProtocol.ResGuildRanking response);

    class <>c__DisplayClass55_0
    {
        /*0x10*/ ServerProtocol.ResGuildGuildRanking response;
        /*0x18*/ RankingBoardCategoryRankPopup <>4__this;

        /*0xf97a34*/ <>c__DisplayClass55_0();
        /*0xf97a3c*/ void <OnClickBoss>b__2();
    }

    class <>c__DisplayClass55_1
    {
        /*0x10*/ ServerProtocol.ResGuildRanking response;
        /*0x18*/ RankingBoardCategoryRankPopup <>4__this;

        /*0xf97aa4*/ <>c__DisplayClass55_1();
        /*0xf97aac*/ void <OnClickBoss>b__3();
    }
}

class RankingBoardPopup : GuiBase
{
    /*0x40*/ RankBoardCategoryEntity m_CampaignEntity;
    /*0x48*/ RankBoardCategoryEntity m_HardCampaignEntity;
    /*0x50*/ RankBoardCategoryEntity m_TowerEntity;
    /*0x58*/ RankBoardCategoryEntity[] m_factionEntitys;

    /*0x11c1fd4*/ RankingBoardPopup();
    /*0x11c1cc4*/ void OnCreate();
    /*0x11c1cc8*/ void OnDelete();
    /*0x11c1ccc*/ void OnEnter();
    /*0x11c1cd0*/ void OnFinish();
    /*0x11c1cd4*/ void OnLeave();
    /*0x11c1cd8*/ void OnStart();
    /*0x11c1cdc*/ void OnExit();
    /*0x11c1db0*/ void InitializePopup();
    /*0x11c1f30*/ void OnClick_Help();
    /*0x11c1fdc*/ void <OnExit>b__10_0();
}

class RankingBoardRewardPopup : GuiBase
{
    /*0x40*/ ScrollContent_RankBoardRewardEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_Title;
    /*0x50*/ RankingBoardType m_eBoardType;
    /*0x58*/ System.Collections.Generic.List<QuestPackage> curQuestList;

    /*0x11c2cf0*/ RankingBoardRewardPopup();
    /*0x11c1fe4*/ System.Collections.Generic.List<PTShare.Define.SBoardQuest> get_curQuestState();
    /*0x11c2068*/ void OnCreate();
    /*0x11c206c*/ void OnDelete();
    /*0x11c2070*/ void OnEnter();
    /*0x11c2274*/ void OnFinish();
    /*0x11c2278*/ void OnLeave();
    /*0x11c23c0*/ void OnStart();
    /*0x11c23c4*/ void OnExit();
    /*0x11c1a6c*/ void InitializePopup(RankingBoardType _eType);
    /*0x11c275c*/ void InitializeQuestList();
    /*0x11c2440*/ void SetTitle(RankingBoardType _eType);
    /*0x11c2980*/ void InitializeScroll();
    /*0x11c29dc*/ System.Collections.IEnumerator CoInitializeSelectRankingBoard();
    /*0x11c2a48*/ void HandlerScrollContent(int _index, RankBoardRewardEntity _obj);
    /*0x11c2cec*/ void HandlerReceiveReward();

    class <>c
    {
        static /*0x0*/ RankingBoardRewardPopup.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SBoardQuest, int> <>9__17_0;

        static /*0xf97b14*/ <>c();
        /*0xf97b74*/ <>c();
        /*0xf97b7c*/ int <CoInitializeSelectRankingBoard>b__17_0(PTShare.Define.SBoardQuest v);
    }

    class <CoInitializeSelectRankingBoard>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RankingBoardRewardPopup <>4__this;

        /*0xf97bc0*/ <CoInitializeSelectRankingBoard>d__17(int <>1__state);
        /*0xf97bec*/ void System.IDisposable.Dispose();
        /*0xf97bf0*/ bool MoveNext();
        /*0xf97e40*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf97e48*/ void System.Collections.IEnumerator.Reset();
        /*0xf97e88*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int questindex;

        /*0xf97b94*/ <>c__DisplayClass18_0();
        /*0xf97b9c*/ bool <HandlerScrollContent>b__0(PTShare.Define.SBoardQuest f);
    }
}

class RegionSelectPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<RegionSelectEntity> m_liSelectEntity;

    /*0x11c8d80*/ RegionSelectPopup();
    /*0x11c8c20*/ void OnCreate();
    /*0x11c8c24*/ void OnDelete();
    /*0x11c8c28*/ void OnEnter();
    /*0x11c8c2c*/ void OnFinish();
    /*0x11c8c30*/ void OnLeave();
    /*0x11c8c34*/ void OnStart();
    /*0x11c8c38*/ void InitializePopup();
}

class RelationDetailPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ UnityEngine.Transform m_IllustParent;
    /*0x50*/ System.Collections.Generic.List<HeroSlotInventory> m_liRelationSlot;
    /*0x58*/ System.Collections.Generic.List<RelationStatusBar> m_liRelationBar;
    /*0x60*/ RelationStoryEntity m_RelationStory;
    /*0x68*/ UnityEngine.GameObject m_StoryButton;
    /*0x70*/ TableData.TableData_Relation relationTableData;
    /*0x78*/ PTShare.Define.SRelation relationData;
    /*0x80*/ int[] arrCharaterIndex;
    /*0x88*/ bool[] arrCharacterUse;
    /*0x90*/ RelationIllustEntity illustEntity;
    /*0x98*/ System.Collections.Generic.List<RelationStatus> liRelationStatusInfo;

    /*0x11ca048*/ RelationDetailPopup();
    /*0x11c8f48*/ void OnCreate();
    /*0x11c8f4c*/ void OnDelete();
    /*0x11c8f50*/ void OnEnter();
    /*0x11c8f88*/ void OnFinish();
    /*0x11c8f8c*/ void OnLeave();
    /*0x11c8f90*/ void OnStart();
    /*0x11c8f94*/ void OnExit();
    /*0x11c9054*/ void InitializePopup(TableData.TableData_Relation data);
    /*0x11c94b8*/ void Refresh();
    /*0x11c920c*/ void SetStatusInfo();
    /*0x11c99cc*/ void SetStatusBar();
    /*0x11c95fc*/ void SetHeroSlot();
    /*0x11c92c0*/ void CreateIllustEntity();
    /*0x11c9504*/ void SetTitle(string key);
    /*0x11c9c84*/ void OnClick_Help();
    /*0x11c9d28*/ void OnClick_Story();
    /*0x11c9d98*/ void OnClickHeroSlot(TableData.TableData_Unitbase unitbase);
    /*0x11c9e28*/ void OnSuccessActivate();
}

class RelationListPopup : GuiBase
{
    /*0x40*/ ScrollContent_RelationListEntity m_ScrollContent;

    /*0x11cad8c*/ RelationListPopup();
    /*0x11ca978*/ System.Collections.Generic.List<TableData.TableData_Relation> get_relationList();
    /*0x11ca9c4*/ void OnCreate();
    /*0x11ca9c8*/ void OnDelete();
    /*0x11ca9cc*/ void OnEnter();
    /*0x11caaf8*/ void OnFinish();
    /*0x11caafc*/ void OnLeave();
    /*0x11cabd0*/ void OnStart();
    /*0x11cabd4*/ void InitializePopup();
    /*0x11c9f70*/ void InitializeScroll(bool _isInitialize);
    /*0x11cac3c*/ void HandlerScrollContent(int nIndex, RelationListEntity entity);
    /*0x11cace8*/ void OnClick_Help();
}

class ResonanceLevelupPopup : GuiBase
{
    /*0x40*/ HeroNeedItemWindow m_materialWindow;
    /*0x48*/ LocalizeString m_cpText;
    /*0x50*/ LocalizeString m_befLevel;
    /*0x58*/ LocalizeString m_aftLevel;
    /*0x60*/ System.Collections.Generic.List<Rewards> liMaterials;
    /*0x68*/ System.Action onConfirmCalllback;

    /*0xf26a68*/ ResonanceLevelupPopup();
    /*0xf261a4*/ int get_CurrentLevel();
    /*0xf26224*/ void OnCreate();
    /*0xf26228*/ void OnDelete();
    /*0xf2622c*/ void OnEnter();
    /*0xf26230*/ void OnFinish();
    /*0xf26234*/ void OnLeave();
    /*0xf26238*/ void OnStart();
    /*0xf2623c*/ void InitializePopup(System.Action callback);
    /*0xf267d4*/ void OnClick_Confirm();
    /*0xf269e8*/ void OnClick_Exit();
    /*0xf26ae0*/ void <OnClick_Confirm>b__15_0();
}

class ResultPopupBase : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_WinGroup;
    /*0x48*/ UnityEngine.GameObject m_LoseGroup;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_WinTitle;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_LoseTitle;
    /*0x60*/ WinAnimation m_WinAnimation;
    /*0x68*/ ItemRewardGroup m_ItemRewardGroup;
    /*0x70*/ QuestGrid m_QuestGrid;

    /*0xf2a040*/ ResultPopupBase();
    /*0xf29bf8*/ void OnExit();
    void InitializeWin(PTShare.Define.SProperty _reward);
    void InitializeWinReplay();
    void InitializeLose();
    void OnRetry();
    void OnNext();
    void OnShowGraph();
    /*0xf29c00*/ void InitializeQuestGrid(Battle.GameModeType _eGameMode, bool _bRefresh);
    /*0xf29e10*/ void StartWinAnimation();
    /*0xf29e5c*/ void ShowWinSkeleton(string startAnim, string endAnim, bool loop);
    /*0xf29f90*/ void ShowLoseSkeleton(string startAnim, string endAnim, bool loop);
    /*0xf29f0c*/ System.Collections.IEnumerator CoAnimationUpdate(Spine.Unity.SkeletonGraphic graphic, string endAnim, bool loop);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ResultPopupBase <>4__this;
        /*0x18*/ Battle.GameModeType _eGameMode;

        /*0xf9a964*/ <>c__DisplayClass14_0();
        /*0xf9a96c*/ void <InitializeQuestGrid>b__0();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ Spine.Unity.SkeletonGraphic graphic;

        /*0xf9a99c*/ <>c__DisplayClass18_0();
        /*0xf9a9a4*/ bool <CoAnimationUpdate>b__0();
    }

    class <CoAnimationUpdate>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ Spine.Unity.SkeletonGraphic graphic;
        /*0x28*/ string endAnim;
        /*0x30*/ ResultPopupBase.<> <>8__1;
        /*0x38*/ bool loop;

        /*0xf9aa20*/ <CoAnimationUpdate>d__18(int <>1__state);
        /*0xf9aa4c*/ void System.IDisposable.Dispose();
        /*0xf9aa50*/ bool MoveNext();
        /*0xf9abbc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9abc4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ac04*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ResultPopup_Arena : ResultPopupBase
{
    /*0x78*/ PlayerProfileSlot m_AllySlot;
    /*0x80*/ PlayerProfileSlot m_EnemySlot;
    /*0x88*/ AtlasImage m_RankArrow;
    /*0x90*/ LocalizeString m_AllyScore;
    /*0x98*/ LocalizeString m_EnemyScore;
    /*0xa0*/ LocalizeString m_AllyNickname;
    /*0xa8*/ LocalizeString m_EnemyNickname;
    /*0xb0*/ LocalizeString m_MyRank;
    /*0xb8*/ LocalizeString m_MyRankIncrease;
    /*0xc0*/ LocalizeString m_LimitRewardText;
    /*0xc8*/ bool m_bWin;

    /*0xf2b2f4*/ ResultPopup_Arena();
    /*0xf2a048*/ ArenaTarget get_result();
    /*0xf2a0e0*/ Battle.GameModeType get_curMode();
    /*0xf2a134*/ void OnCreate();
    /*0xf2a138*/ void OnEnter();
    /*0xf2a538*/ void OnStart();
    /*0xf2a53c*/ void OnFinish();
    /*0xf2a540*/ void OnLeave();
    /*0xf2a544*/ void OnDelete();
    /*0xf2a548*/ void OnExit();
    /*0xf2a5ec*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0xf2ac74*/ void InitializeWinReplay();
    /*0xf2aee0*/ void InitializeWinSelectReplay();
    /*0xf2af8c*/ void InitializeLose();
    /*0xf2b1a0*/ void InitializeLoseReplay();
    /*0xf2b238*/ void OnRetry();
    /*0xf2b28c*/ void OnNext();
    /*0xf2b298*/ void OnShowGraph();
    /*0xf2b2fc*/ void <OnEnter>b__16_0();
}

class ResultPopup_Campaign : ResultPopupBase
{
    /*0x78*/ LocalizeString m_idleRewardGold;
    /*0x80*/ LocalizeString m_idleRewardHeroExp;
    /*0x88*/ LocalizeString m_idleRewardUserExp;
    /*0x90*/ UnityEngine.GameObject m_autoReward;
    /*0x98*/ bool m_bWin;

    /*0x119fab4*/ ResultPopup_Campaign();
    /*0x119f09c*/ void OnCreate();
    /*0x119f0a0*/ void OnEnter();
    /*0x119f0a4*/ void OnStart();
    /*0x119f15c*/ void OnFinish();
    /*0x119f160*/ void OnLeave();
    /*0x119f164*/ void OnDelete();
    /*0x119f168*/ void OnExit();
    /*0x119f24c*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x119f678*/ void InitializeWinReplay();
    /*0x119f76c*/ void InitializeWinSelectReplay();
    /*0x119f840*/ void InitializeLose();
    /*0x119f4c8*/ void SetIdleReward();
    /*0x119f9b8*/ void OnRetry();
    /*0x119fa4c*/ void OnNext();
    /*0x119fa58*/ void OnShowGraph();
}

class ResultPopup_Dungeon : ResultPopupBase
{
    /*0x78*/ LocalizeString m_noGainText;
    /*0x80*/ bool m_bWin;

    /*0x11a0254*/ ResultPopup_Dungeon();
    /*0x119fabc*/ void OnCreate();
    /*0x119fac0*/ void OnEnter();
    /*0x119fac4*/ void OnStart();
    /*0x119facc*/ void OnFinish();
    /*0x119fad0*/ void OnLeave();
    /*0x119fad4*/ void OnDelete();
    /*0x119fad8*/ void OnExit();
    /*0x119fba8*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x119ff48*/ void InitializeWinReplay();
    /*0x11a0008*/ void InitializeLose();
    /*0x11a0124*/ void OnNext();
    /*0x11a01a4*/ void OnRetry();
    /*0x11a01f8*/ void OnShowGraph();
}

class ResultPopup_FriendBattle : ResultPopupBase
{
    /*0x78*/ bool m_bWin;

    /*0x11a0910*/ ResultPopup_FriendBattle();
    /*0x11a025c*/ void OnCreate();
    /*0x11a0260*/ void OnEnter();
    /*0x11a0264*/ void OnStart();
    /*0x11a026c*/ void OnFinish();
    /*0x11a0270*/ void OnLeave();
    /*0x11a0274*/ void OnDelete();
    /*0x11a0278*/ void OnExit();
    /*0x11a035c*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a05d0*/ void InitializeWinReplay();
    /*0x11a06c4*/ void InitializeLose();
    /*0x11a0814*/ void OnRetry();
    /*0x11a08a8*/ void OnNext();
    /*0x11a08b4*/ void OnShowGraph();
}

class ResultPopup_GuildWar : ResultPopupBase
{
    /*0x78*/ Spine.Unity.SkeletonGraphic m_MVPAnimGraphic_Win;
    /*0x80*/ Spine.Unity.SkeletonGraphic m_MVPAnimGraphic_Lose;
    /*0x88*/ UnityEngine.UI.Text m_MVPPlayerNameText_Phase1;
    /*0x90*/ UnityEngine.GameObject m_goMVPFlag;
    /*0x98*/ GuildEmblemSlot m_EmblemSlot_Ally;
    /*0xa0*/ GuildEmblemSlot m_EmblemSlot_Enemy;
    /*0xa8*/ GuildLevelSlot m_LevelSlot_Ally;
    /*0xb0*/ GuildLevelSlot m_LevelSlot_Enemy;
    /*0xb8*/ LocalizeString m_GuildName_Ally;
    /*0xc0*/ LocalizeString m_GuildName_Enemy;
    /*0xc8*/ LocalizeString m_Rank;
    /*0xd0*/ AtlasImage m_RankArrow;
    /*0xd8*/ LocalizeString m_RankIncrease;
    /*0xe0*/ LocalizeString m_Score_Ally;
    /*0xe8*/ LocalizeString m_Score_Enemy;
    /*0xf0*/ UnityEngine.GameObject m_goRankParent;
    /*0xf8*/ UnityEngine.GameObject m_goScoreParet_Ally;
    /*0x100*/ UnityEngine.GameObject m_goScoreParet_Enemy;
    /*0x108*/ bool m_bWin;
    /*0x10c*/ int m_nSkinID;
    /*0x110*/ ServerProtocol.ResGuildWarFinish m_Finish;

    /*0x11a2698*/ ResultPopup_GuildWar();
    /*0x11a1b58*/ void OnCreate();
    /*0x11a1b5c*/ void OnEnter();
    /*0x11a1b60*/ void OnStart();
    /*0x11a1b64*/ void OnFinish();
    /*0x11a1b68*/ void OnLeave();
    /*0x11a1b6c*/ void OnDelete();
    /*0x11a1b70*/ void InitializeWin(ServerProtocol.ResGuildWarFinish _finish);
    /*0x11a22b0*/ void InitializeLose(ServerProtocol.ResGuildWarFinish _finish);
    /*0x11a24a0*/ void InitializeWinReplay();
    /*0x11a24a8*/ void InitializeLoseReplay();
    /*0x11a1d74*/ void InitScore(ServerProtocol.ResGuildWarFinish _finish);
    /*0x11a2154*/ void InitGuildEmblem();
    /*0x11a24b0*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a24b4*/ void InitializeLose();
    /*0x11a24b8*/ void OnExit();
    /*0x11a259c*/ void OnRetry();
    /*0x11a2630*/ void OnNext();
    /*0x11a263c*/ void OnShowGraph();
}

class ResultPopup_Maze : ResultPopupBase
{
    /*0x78*/ bool m_bWin;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;

    /*0x11a2e0c*/ ResultPopup_Maze();
    /*0x11a26a8*/ void OnCreate();
    /*0x11a26ac*/ void OnEnter();
    /*0x11a26b0*/ void OnStart();
    /*0x11a26b8*/ void OnFinish();
    /*0x11a26bc*/ void OnLeave();
    /*0x11a26c0*/ void OnDelete();
    /*0x11a26c4*/ void OnExit();
    /*0x11a2780*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a2aa8*/ void InitializeWinReplay();
    /*0x11a2b9c*/ void InitializeLose();
    /*0x11a2cdc*/ void OnNext();
    /*0x11a2d5c*/ void OnRetry();
    /*0x11a2db0*/ void OnShowGraph();
    /*0x11a2a3c*/ System.Collections.IEnumerator CoAuto();

    class <CoAuto>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ResultPopup_Maze <>4__this;

        /*0xf9ac0c*/ <CoAuto>d__15(int <>1__state);
        /*0xf9ac38*/ void System.IDisposable.Dispose();
        /*0xf9ac3c*/ bool MoveNext();
        /*0xf9acf0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9acf8*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ad38*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ResultPopup_PveRanking : ResultPopupBase
{
    static /*0x0*/ int PrevScore;
    static /*0x4*/ int ClearScore;
    static /*0x8*/ int ClearGrade;
    /*0x78*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisGradeStars;
    /*0x80*/ LocalizeString m_idleRewardGold;
    /*0x88*/ LocalizeString m_idleRewardHeroExp;
    /*0x90*/ LocalizeString m_idleRewardUserExp;
    /*0x98*/ UnityEngine.UI.Text m_ClearTimeText;
    /*0xa0*/ UnityEngine.UI.Text m_ClearScoreText;
    /*0xa8*/ UnityEngine.UI.Text m_ClearUserExpText;
    /*0xb0*/ UnityEngine.UI.Text m_LoseTimeText;
    /*0xb8*/ UnityEngine.UI.Text m_LoseScoreText;
    /*0xc0*/ UnityEngine.GameObject[] m_newRecords;
    /*0xc8*/ bool m_bWin;
    /*0xcc*/ int m_nUserEXP;

    /*0x11a3d68*/ ResultPopup_PveRanking();
    /*0x11a2e14*/ void OnCreate();
    /*0x11a2e18*/ void OnEnter();
    /*0x11a2e1c*/ void OnStart();
    /*0x11a2e24*/ void OnFinish();
    /*0x11a2e28*/ void OnLeave();
    /*0x11a2e2c*/ void OnDelete();
    /*0x11a2e30*/ void OnExit();
    /*0x11a2f14*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a35e4*/ void InitializeWinReplay();
    /*0x11a3770*/ void InitializeWinSelectReplay();
    /*0x11a38dc*/ void InitializeLose();
    /*0x11a3434*/ void SetIdleReward();
    /*0x11a3c20*/ void OnRetry();
    /*0x11a3d00*/ void OnNext();
    /*0x11a3d0c*/ void OnShowGraph();
}

class ResultPopup_Tower : ResultPopupBase
{
    /*0x78*/ bool m_bWin;

    /*0x11a4520*/ ResultPopup_Tower();
    /*0x11a3d70*/ void OnCreate();
    /*0x11a3d74*/ void OnEnter();
    /*0x11a3d78*/ void OnStart();
    /*0x11a3d80*/ void OnFinish();
    /*0x11a3d84*/ void OnLeave();
    /*0x11a3d88*/ void OnDelete();
    /*0x11a3d8c*/ void OnExit();
    /*0x11a3e70*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a40e4*/ void InitializeWinReplay();
    /*0x11a41d8*/ void InitializeWinSelectReplay();
    /*0x11a42ac*/ void InitializeLose();
    /*0x11a4424*/ void OnRetry();
    /*0x11a44b8*/ void OnNext();
    /*0x11a44c4*/ void OnShowGraph();
}

class ResultPopup_WorldArena : ResultPopupBase
{
    /*0x78*/ PlayerProfileSlot m_AllySlot;
    /*0x80*/ PlayerProfileSlot m_EnemySlot;
    /*0x88*/ LocalizeString m_AllyScore;
    /*0x90*/ LocalizeString m_EnemyScore;
    /*0x98*/ LocalizeString m_AllyNickname;
    /*0xa0*/ LocalizeString m_EnemyNickname;
    /*0xa8*/ LocalizeString m_LimitRewardText;
    /*0xb0*/ AtlasImage m_TierIcon;
    /*0xb8*/ bool m_bWin;

    /*0x11a5784*/ ResultPopup_WorldArena();
    /*0x11a4528*/ ArenaTarget get_result();
    /*0x11a45c0*/ Battle.GameModeType get_curMode();
    /*0x11a4614*/ void OnCreate();
    /*0x11a4618*/ void OnEnter();
    /*0x11a4960*/ void OnStart();
    /*0x11a4968*/ void OnFinish();
    /*0x11a496c*/ void OnLeave();
    /*0x11a4970*/ void OnDelete();
    /*0x11a4974*/ void OnExit();
    /*0x11a4a18*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a50ec*/ void InitializeWinReplay();
    /*0x11a5360*/ void InitializeWinSelectReplay();
    /*0x11a5414*/ void InitializeLose();
    /*0x11a562c*/ void InitializeLoseReplay();
    /*0x11a56c8*/ void OnRetry();
    /*0x11a571c*/ void OnNext();
    /*0x11a5728*/ void OnShowGraph();
    /*0x11a578c*/ void <OnEnter>b__14_0();
}

class ReviewRequestPopup : GuiBase
{
    /*0x40*/ System.Action onExitCallback;
    /*0x48*/ Google.Play.Review.ReviewManager manager;

    /*0x11a6af0*/ ReviewRequestPopup();
    /*0x11a6940*/ void OnCreate();
    /*0x11a6944*/ void OnDelete();
    /*0x11a6948*/ void OnEnter();
    /*0x11a694c*/ void OnFinish();
    /*0x11a6950*/ void OnLeave();
    /*0x11a6954*/ void OnStart();
    /*0x11a6958*/ void OnExit();
    /*0x11a695c*/ void InitializePopup(System.Action cb);
    /*0x11a6968*/ void OnClick_Later();
    /*0x11a6a0c*/ void OnClick_Review();
    /*0x11a6a84*/ System.Collections.IEnumerator CoReview();
    /*0x11a6af8*/ void <>n__0();

    class <CoReview>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ReviewRequestPopup <>4__this;
        /*0x28*/ Google.Play.Common.PlayAsyncOperation<Google.Play.Review.PlayReviewInfo, Google.Play.Review.ReviewErrorCode> <oper>5__2;
        /*0x30*/ Google.Play.Common.PlayAsyncOperation<Google.Play.Common.VoidResult, Google.Play.Review.ReviewErrorCode> <flow>5__3;

        /*0xf9ad40*/ <CoReview>d__12(int <>1__state);
        /*0xf9ad6c*/ void System.IDisposable.Dispose();
        /*0xf9ad70*/ bool MoveNext();
        /*0xf9af48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9af50*/ void System.Collections.IEnumerator.Reset();
        /*0xf9af90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RewardPopup : RewardPopupBase
{
    /*0x60*/ UnityEngine.GameObject m_RewardTitleParent;
    /*0x68*/ ParticleBase m_RewardEffect;
    /*0x70*/ System.Collections.IEnumerator m_ieAnimate;

    /*0x11a9e48*/ RewardPopup();
    /*0x11a9d30*/ void OnCreate();
    /*0x11a9d34*/ void OnDelete();
    /*0x11a9d38*/ void OnEnter();
    /*0x11a9dd0*/ void OnFinish();
    /*0x11a9dd4*/ void OnLeave();
    /*0x11a9dd8*/ void OnStart();
    /*0x11a9d84*/ void StartAnimate();
    /*0x11a9ddc*/ System.Collections.IEnumerator CoAnimate();
    /*0x11a9d6c*/ void SetActiveRewardTitle(bool _bEnable);

    class <CoAnimate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RewardPopup <>4__this;

        /*0xf9b9c0*/ <CoAnimate>d__10(int <>1__state);
        /*0xf9b9ec*/ void System.IDisposable.Dispose();
        /*0xf9b9f0*/ bool MoveNext();
        /*0xf9babc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9bac4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9bb04*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RunGameCurrentRewardPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<RunRewardLimitEntity> m_lisRewardEntity;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.UI.Slider> m_lisSlider;
    /*0x50*/ System.Collections.Generic.List<UnityEngine.UI.Text> m_lisAmountText;
    /*0x58*/ LocalizeString m_RenewTimerText;

    /*0x11abbb0*/ RunGameCurrentRewardPopup();
    /*0x11ab624*/ void OnCreate();
    /*0x11ab628*/ void OnDelete();
    /*0x11ab62c*/ void OnEnter();
    /*0x11ab630*/ void OnFinish();
    /*0x11ab634*/ void OnLeave();
    /*0x11ab638*/ void OnStart();
    /*0x11ab63c*/ void SetRewardSlider(int _nRewardIndex, float _fCurrentAmount, float _fMaxAmount);
    /*0x11ab790*/ void Init();
    /*0x11aba88*/ void SetTimerUTC(System.TimeSpan _remainTimeSpan);
}

class RunGameHelpPopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_BackgroundImageTrans;

    /*0x11abbd8*/ RunGameHelpPopup();
    /*0x11abbb8*/ void OnCreate();
    /*0x11abbbc*/ void OnDelete();
    /*0x11abbc0*/ void OnEnter();
    /*0x11abbc4*/ void OnFinish();
    /*0x11abbc8*/ void OnLeave();
    /*0x11abbcc*/ void OnStart();
    /*0x11abbd0*/ UnityEngine.RectTransform GetBackgroundImageRect();
}

class RunGameRewardPopup : GuiBase
{
    /*0x40*/ Spine.Unity.SkeletonGraphic m_Victory;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Lose;
    /*0x50*/ RunRewardLimitGroup m_VictoryGroup;
    /*0x58*/ UnityEngine.GameObject m_ClearRewardSlotParent;
    /*0x60*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;
    /*0x68*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liClearRewardSlot;
    /*0x70*/ UnityEngine.UI.Text m_ClearBounsText;
    /*0x78*/ bool bIsPlayingAnimation;
    /*0x79*/ bool bIsWin;
    /*0x80*/ System.Collections.Generic.List<Rewards> liRewards_Original;
    /*0x88*/ System.Collections.Generic.List<Rewards> liClearRewards_Original;
    /*0x90*/ System.Collections.Generic.List<Rewards> liRewards;
    /*0x98*/ System.Collections.Generic.List<Rewards> liClearRewards;

    static /*0x1293548*/ Rewards <DecreaseRewardCount>g__GetDecreaseAmount|24_0(Rewards reward, long amount, ref RunGameRewardPopup.<> );
    /*0x129365c*/ RunGameRewardPopup();
    /*0x12928dc*/ void OnCreate();
    /*0x12928e0*/ void OnDelete();
    /*0x12928e4*/ void OnEnter();
    /*0x12928e8*/ void OnFinish();
    /*0x12928ec*/ void OnLeave();
    /*0x12928f0*/ void OnStart();
    /*0x12928f4*/ void OnExit();
    /*0x1292990*/ void InitializePopup(bool _bWin);
    /*0x1292cdc*/ void RenewRewardSlots(System.Collections.Generic.List<Rewards> _lisRewards, System.Collections.Generic.List<Rewards> _lisClearRewards, bool _bDisableZero);
    /*0x129318c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x12932d8*/ System.Collections.IEnumerator CoDecreaseReward();
    /*0x1293344*/ void DecreaseRewardCount(System.Collections.Generic.List<Rewards> originalRewards, System.Collections.Generic.List<Rewards> showRewards, int _nDecreaseRatio);
    /*0x12935d8*/ void OnClick_Restart();

    class <CoDecreaseReward>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RunGameRewardPopup <>4__this;
        /*0x28*/ int <decreaseRatio>5__2;

        /*0xf9c1d0*/ <CoDecreaseReward>d__23(int <>1__state);
        /*0xf9c1fc*/ void System.IDisposable.Dispose();
        /*0xf9c200*/ bool MoveNext();
        /*0xf9c320*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9c328*/ void System.Collections.IEnumerator.Reset();
        /*0xf9c368*/ object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass24_0
    {
        /*0x10*/ int _nDecreaseRatio;
    }
}

class ServerSelectWindow : UnityEngine.MonoBehaviour
{
    static string PLAYERPREFS_SELECTED_SERVER_INDEX = "SelectedServerIndex";
    /*0x18*/ UnityEngine.UI.InputField m_inputTextField;
    /*0x20*/ DropDown_Custom m_DropDown;
    /*0x28*/ System.Collections.Generic.List<string> m_Addresses;

    /*0xe26e88*/ ServerSelectWindow();
    /*0xe263e4*/ void Awake();
    /*0xe26e90*/ void <Awake>b__4_5(int idx);

    class <>c
    {
        static /*0x0*/ ServerSelectWindow.<> <>9;
        static /*0x8*/ System.Func<string, System.String[]> <>9__4_0;
        static /*0x10*/ System.Func<System.String[], string> <>9__4_1;
        static /*0x18*/ System.Func<System.String[], string> <>9__4_2;
        static /*0x20*/ System.Func<System.String[], bool> <>9__4_3;
        static /*0x28*/ System.Func<System.String[], string> <>9__4_4;
        static /*0x30*/ UnityEngine.Events.UnityAction<string> <>9__4_6;

        static /*0xcbe528*/ <>c();
        /*0xcbe588*/ <>c();
        /*0xcbe590*/ string[] <Awake>b__4_0(string s);
        /*0xcbe614*/ string <Awake>b__4_1(string[] t);
        /*0xcbe688*/ string <Awake>b__4_2(string[] t);
        /*0xcbe6bc*/ bool <Awake>b__4_3(string[] t);
        /*0xcbe754*/ string <Awake>b__4_4(string[] t);
        /*0xcbe7c8*/ void <Awake>b__4_6(string id);
    }
}

enum StageCurrentUserType
{
    NONE = 0,
    STAGE = 1,
    CHAPTER = 2,
    TOWER = 3,
}

class StageCurrentUserPopup : GuiBase
{
    /*0x40*/ ScrollContent_ChapterUserEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_liPlayerList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.STowerUser> m_liTowerUserList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> m_liCampaignUserList;
    /*0x68*/ StageCurrentUserType m_eUserType;

    /*0x1456564*/ StageCurrentUserPopup();
    /*0x1455d30*/ void OnCreate();
    /*0x1455d34*/ void OnDelete();
    /*0x1455d38*/ void OnEnter();
    /*0x1455e64*/ void OnFinish();
    /*0x1455edc*/ void OnLeave();
    /*0x1455fb0*/ void OnStart();
    /*0x1455fb4*/ void OnExit();
    /*0x1456030*/ void InitializePopup(StageCurrentUserType _eType, System.Collections.Generic.List<PTShare.Define.SPlayer> _player);
    /*0x14563c8*/ void InitializePopup(StageCurrentUserType _eType, System.Collections.Generic.List<PTShare.Define.STowerUser> _towerUsers);
    /*0x1456154*/ void SetTitle(StageCurrentUserType _eType);
    /*0x14560ec*/ void InitializeScroll();
    /*0x1456468*/ void HandlerScrollContent(int _index, ChapterUserEntity _obj);
}

class StoryDescPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_desc;

    /*0xc9cdf4*/ StoryDescPopup();
    /*0xc9cc40*/ void OnCreate();
    /*0xc9cc44*/ void OnDelete();
    /*0xc9cc48*/ void OnEnter();
    /*0xc9cc4c*/ void OnFinish();
    /*0xc9cc50*/ void OnLeave();
    /*0xc9cc54*/ void OnStart();
    /*0xc9cc58*/ void InitPopup(string desc, string title);
}

class TermsPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_ToggleAll;
    /*0x48*/ System.Collections.Generic.List<TermsPopup.TermToggle> m_liTermToggle;
    /*0x50*/ System.Collections.Generic.List<TermsPopup.TermToggle> m_liPushToggle;
    /*0x58*/ UnityEngine.UI.Button m_ConfirmButton;
    /*0x60*/ System.Action OnAgreeCallback;
    /*0x68*/ bool bIsAllToggleCheck;

    /*0x1168550*/ TermsPopup();
    /*0x116793c*/ void OnCreate();
    /*0x1167940*/ void OnDelete();
    /*0x1167944*/ void OnEnter();
    /*0x1167948*/ void OnFinish();
    /*0x116794c*/ void OnLeave();
    /*0x1167950*/ void OnStart();
    /*0x1167954*/ void OnExit();
    /*0x1167958*/ void InitializePopup(System.Action cbAgree);
    /*0x1167b48*/ void SetToggle();
    /*0x1167cf8*/ void RefreshButtonEnable();
    /*0x1167e3c*/ void OnClick_Privacy();
    /*0x1167edc*/ void OnClick_Terms();
    /*0x1167f7c*/ void OnClick_Confirm();
    /*0x1168350*/ string GetAgreePush(bool isNight, bool isAgree);
    /*0x1168558*/ void <SetToggle>b__15_0(bool isOn);
    /*0x11686bc*/ void <SetToggle>b__15_1(TermsPopup.TermToggle t);
    /*0x11687d8*/ void <SetToggle>b__15_2(TermsPopup.TermToggle t);

    class TermToggle
    {
        /*0x10*/ UnityEngine.UI.Toggle toggle;
        /*0x18*/ bool isOn;

        /*0xcd0b4c*/ TermToggle();
    }

    class <>c
    {
        static /*0x0*/ TermsPopup.<> <>9;
        static /*0x8*/ System.Action<TermsPopup.TermToggle> <>9__14_0;
        static /*0x10*/ System.Action<TermsPopup.TermToggle> <>9__14_1;
        static /*0x18*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_6;
        static /*0x20*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_7;
        static /*0x28*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_9;
        static /*0x30*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_10;
        static /*0x38*/ System.Predicate<TermsPopup.TermToggle> <>9__16_0;
        static /*0x40*/ System.Predicate<TermsPopup.TermToggle> <>9__19_0;
        static /*0x48*/ System.Converter<TermsPopup.TermToggle, bool> <>9__19_1;

        static /*0xcd046c*/ <>c();
        /*0xcd04cc*/ <>c();
        /*0xcd04d4*/ void <InitializePopup>b__14_0(TermsPopup.TermToggle x);
        /*0xcd04fc*/ void <InitializePopup>b__14_1(TermsPopup.TermToggle x);
        /*0xcd0524*/ bool <SetToggle>b__15_6(TermsPopup.TermToggle x);
        /*0xcd053c*/ bool <SetToggle>b__15_7(TermsPopup.TermToggle x);
        /*0xcd0554*/ bool <SetToggle>b__15_9(TermsPopup.TermToggle x);
        /*0xcd056c*/ bool <SetToggle>b__15_10(TermsPopup.TermToggle x);
        /*0xcd0584*/ bool <RefreshButtonEnable>b__16_0(TermsPopup.TermToggle x);
        /*0xcd05a4*/ bool <OnClick_Confirm>b__19_0(TermsPopup.TermToggle x);
        /*0xcd05c4*/ bool <OnClick_Confirm>b__19_1(TermsPopup.TermToggle x);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ bool isOn;

        /*0xcd05dc*/ <>c__DisplayClass15_0();
        /*0xcd05e4*/ void <SetToggle>b__3(TermsPopup.TermToggle x);
        /*0xcd0610*/ void <SetToggle>b__4(TermsPopup.TermToggle x);
    }

    class <>c__DisplayClass15_1
    {
        /*0x10*/ TermsPopup.TermToggle t;
        /*0x18*/ TermsPopup <>4__this;

        /*0xcd063c*/ <>c__DisplayClass15_1();
        /*0xcd0644*/ void <SetToggle>b__5(bool isOn);
    }

    class <>c__DisplayClass15_2
    {
        /*0x10*/ TermsPopup.TermToggle t;
        /*0x18*/ TermsPopup <>4__this;

        /*0xcd08c4*/ <>c__DisplayClass15_2();
        /*0xcd08cc*/ void <SetToggle>b__8(bool isOn);
    }
}

class ToastMessagePopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_ParentTransform;
    /*0x48*/ LocalizeString m_ViewText;
    /*0x50*/ UnityEngine.Vector3 m_defaultAnchoredPosition;
    /*0x5c*/ float fDuration_Time;
    /*0x60*/ System.Collections.IEnumerator IE_ProcessView;

    /*0x1170704*/ ToastMessagePopup();
    /*0x1170368*/ void Show(string _message, float _duration);
    /*0x1170500*/ void Show(string _message, float _duration, string[] _params);
    /*0x11705b0*/ void Show(string _message, float _duration, UnityEngine.Vector3 _addPosition, string[] _params);
    /*0x11704b4*/ void CoSetup();
    /*0x1170678*/ System.Collections.IEnumerator CoViewMessage();
    /*0x11706e4*/ void OnExit();
    /*0x11706ec*/ void OnCreate();
    /*0x11706f0*/ void OnEnter();
    /*0x11706f4*/ void OnStart();
    /*0x11706f8*/ void OnFinish();
    /*0x11706fc*/ void OnLeave();
    /*0x1170700*/ void OnDelete();

    class <CoViewMessage>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ToastMessagePopup <>4__this;
        /*0x28*/ float <_fTime>5__2;

        /*0xcd1790*/ <CoViewMessage>d__9(int <>1__state);
        /*0xcd17bc*/ void System.IDisposable.Dispose();
        /*0xcd17c0*/ bool MoveNext();
        /*0xcd1928*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1930*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1970*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TroopChangeNamePopup : GuiBase
{
    static /*0x0*/ System.Action OnChangeNameEvent;
    /*0x40*/ UnityEngine.UI.InputField m_InputField;
    /*0x48*/ PTShare.Define.STroop m_TroopInfo;

    static /*0x11239f8*/ TroopChangeNamePopup();
    /*0x11239f0*/ TroopChangeNamePopup();
    /*0x11235bc*/ void OnCreate();
    /*0x11235c0*/ void OnDelete();
    /*0x11235c4*/ void OnEnter();
    /*0x1123630*/ void OnFinish();
    /*0x1123634*/ void OnLeave();
    /*0x1123638*/ void OnStart();
    /*0x112363c*/ void OnExit();
    /*0x11236b8*/ void InitializePopup(PTShare.Define.STroop m_troop);
    /*0x11236e4*/ void OnConfirm();
}

class VerifyCountPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Text m_Text;

    /*0x10d2d38*/ VerifyCountPopup();
    /*0x10d2958*/ void OnCreate();
    /*0x10d295c*/ void OnDelete();
    /*0x10d2960*/ void OnEnter();
    /*0x10d2964*/ void OnStart();
    /*0x10d2968*/ void OnExit();
    /*0x10d296c*/ void OnFinish();
    /*0x10d2970*/ void OnLeave();
    /*0x10d2974*/ void RenewCount();
    /*0x10d2a18*/ string GetVerifyCountString();
}

struct WorldArenaNewRecordData
{
    /*0x10*/ WorldArenaRecordType recordType;
    /*0x14*/ int before;
    /*0x18*/ int after;
    /*0x20*/ System.Collections.Generic.List<Rewards> reward;
}

class WorldArenaNewRecordPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ UnityEngine.GameObject m_pointObejcts;
    /*0x50*/ UnityEngine.GameObject m_tierObejcts;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_animRecord;
    /*0x60*/ LocalizeString m_currentRank;
    /*0x68*/ LocalizeString m_raiseRank;
    /*0x70*/ AtlasImage m_befTierIcon;
    /*0x78*/ AtlasImage m_aftTierIcon;
    /*0x80*/ LocalizeString m_befTierName;
    /*0x88*/ LocalizeString m_aftTierName;
    /*0x90*/ System.Collections.Generic.List<WorldArenaNewRecordRewardEntity> m_liRewardSlot;
    /*0x98*/ System.Collections.Generic.Queue<WorldArenaNewRecordData> m_items;
    /*0xa0*/ WorldArenaNewRecordData m_currentData;
    /*0xb8*/ bool m_bPlayingAnim;

    /*0xe06404*/ WorldArenaNewRecordPopup();
    /*0xe05a98*/ void OnCreate();
    /*0xe05a9c*/ void OnDelete();
    /*0xe05aa0*/ void OnEnter();
    /*0xe05aa4*/ void OnFinish();
    /*0xe05aa8*/ void OnLeave();
    /*0xe05aac*/ void OnStart();
    /*0xe05ab0*/ void OnExit();
    /*0xe05cd8*/ void Initialize(WorldArenaNewRecordData[] datas);
    /*0xe05ab4*/ void Dequeue();
    /*0xe05dd0*/ void SetData();
    /*0xe06320*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xe06324*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
}

enum WorldArenaTapType
{
    Fight = 0,
    Ranking = 1,
    Reward = 2,
    End = 3,
}

class WorldArenaPopup : GuiBase
{
    /*0x40*/ AtlasImage m_tier;
    /*0x48*/ LocalizeString m_tierName;
    /*0x50*/ LocalizeString m_currentScoreText;
    /*0x58*/ LocalizeString m_baseScoreText;
    /*0x60*/ LocalizeString m_totalDefense;
    /*0x68*/ SeasonTimeText m_limitTime;
    /*0x70*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x78*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggles;
    /*0x80*/ WorldArenaFightParent m_fightParent;
    /*0x88*/ WorldArenaRankParent m_rankParent;
    /*0x90*/ WorldArenaRewardParent m_rewardParent;
    /*0x98*/ WorldArenaTapType m_eCurrentTapType;
    /*0xa0*/ System.Collections.IEnumerator m_ieCoUpdate;

    /*0xe079b4*/ WorldArenaPopup();
    /*0xe06484*/ int get_CurrentTier();
    /*0xe06504*/ TableData.TableData_Worldarenatier2 get_CurrentTierConfig();
    /*0xe0651c*/ void OnCreate();
    /*0xe06520*/ void OnDelete();
    /*0xe06524*/ void OnEnter();
    /*0xe06618*/ void OnFinish();
    /*0xe0661c*/ void OnLeave();
    /*0xe066f0*/ void OnStart();
    /*0xe066f4*/ void OnExit();
    /*0xe066e4*/ void Release();
    /*0xe06770*/ void InitializePopup(WorldArenaTapType _eTap);
    /*0xe06c40*/ void ReInitialize();
    /*0xe06c50*/ void Initialize(WorldArenaTapType _eTap);
    /*0xe071fc*/ void InitializeToggle(WorldArenaTapType _eTap);
    /*0xe074dc*/ void SetActiveContext(WorldArenaTapType _eType);
    /*0xe068e4*/ void RefreshTopCurrencyWindow();
    /*0xe07684*/ void OnClick_Record();
    /*0xe07708*/ void OnClick_Edit();
    /*0xe07798*/ void OnClick_Trainning();
    /*0xe07818*/ void OnClick_Help();
    /*0xe078bc*/ void HandlerBuyArenaTicket(int _nAmount);
    /*0xe074a0*/ void StartUpdate(System.Collections.IEnumerator co, System.Collections.IEnumerator met);
    /*0xe07434*/ System.Collections.IEnumerator CoUpdate();
    /*0xe07948*/ System.Collections.IEnumerator CoWaitSeason();

    class <>c__DisplayClass25_0
    {
        /*0x10*/ WorldArenaPopup <>4__this;
        /*0x18*/ WorldArenaTapType _eTap;

        /*0xd8c754*/ <>c__DisplayClass25_0();
        /*0xd8c75c*/ void <InitializePopup>b__0();
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ WorldArenaTapType tapType;
        /*0x18*/ WorldArenaPopup <>4__this;

        /*0xd8c79c*/ <>c__DisplayClass28_0();
        /*0xd8c7a4*/ void <InitializeToggle>b__0(bool on);
    }

    class <CoUpdate>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaPopup <>4__this;

        /*0xd8c7d0*/ <CoUpdate>d__37(int <>1__state);
        /*0xd8c7fc*/ void System.IDisposable.Dispose();
        /*0xd8c800*/ bool MoveNext();
        /*0xd8c924*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8c92c*/ void System.Collections.IEnumerator.Reset();
        /*0xd8c96c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoWaitSeason>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaPopup <>4__this;

        /*0xd8c974*/ <CoWaitSeason>d__38(int <>1__state);
        /*0xd8c9a0*/ void System.IDisposable.Dispose();
        /*0xd8c9a4*/ bool MoveNext();
        /*0xd8cac4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8cacc*/ void System.Collections.IEnumerator.Reset();
        /*0xd8cb0c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldmapPopup : GuiBase
{
    static float m_fMaxScale = 1.5;
    static float m_fMinScale = 0.800000011920929;
    static float m_fPower = 0.05000000074505806;
    /*0x40*/ PathMaker m_WorldMapPath;
    /*0x48*/ UnityEngine.UI.ScrollRect m_ScrollRect;
    /*0x50*/ UnityEngine.UI.GridLayoutGroup m_GridLayoutGroup;
    /*0x58*/ UnityEngine.RectTransform m_worldBoss;
    /*0x60*/ AtlasImage m_worldFrame;
    /*0x68*/ AtlasImage m_worldTitleFrame;
    /*0x70*/ AtlasImage m_normalIcon;
    /*0x78*/ AtlasImage m_normalFrame;
    /*0x80*/ AtlasImage m_hardIcon;
    /*0x88*/ AtlasImage m_hardFrame;
    /*0x90*/ System.Collections.Generic.List<ChapterPoint> m_liChapterPoint;
    /*0x98*/ System.Collections.Generic.Dictionary<int, WorldMapCloser> m_dicChapterCloser;
    /*0xa0*/ System.Collections.IEnumerator m_ieRefreshPosition;
    /*0xa8*/ int m_nViewChapter;
    /*0xac*/ bool m_bIsPlayAnimation;
    /*0xb0*/ System.Collections.Generic.List<PathData> m_worldMapData;
    /*0xb8*/ UnityEngine.Vector2 m_vecFirStartPosition;
    /*0xc0*/ UnityEngine.Vector2 m_vecSecStartPosition;
    /*0xc8*/ UnityEngine.Vector2 m_vecFirEndPosition;
    /*0xd0*/ UnityEngine.Vector2 m_vecSecEndPosition;
    /*0xd8*/ UnityEngine.Vector2 m_vecScrollPosition;
    /*0xe0*/ float m_fStartDistance;
    /*0xe4*/ float m_fEndDistance;
    /*0xe8*/ float m_fFactor;
    /*0xec*/ bool m_bIsTouch;
    /*0xf0*/ UnityEngine.Vector2 m_vecTouchPosition;
    /*0xf8*/ UnityEngine.Vector2 m_vecViewPosition;

    /*0xe1237c*/ WorldmapPopup();
    /*0xe10204*/ void OnCreate();
    /*0xe10208*/ void OnDelete();
    /*0xe1020c*/ void OnEnter();
    /*0xe102e4*/ void OnFinish();
    /*0xe102e8*/ void OnLeave();
    /*0xe10398*/ void OnStart();
    /*0xe1039c*/ void OnExit();
    /*0xe10470*/ void InitializePopup(bool _isNextChapter, bool _useWorldBoss);
    /*0xe106b0*/ void CreateMapPath();
    /*0xe10a7c*/ void SetWorldMap();
    /*0xe11474*/ void SetActiveFriendPosition(bool _enable);
    /*0xe10e80*/ void SetScrollPosition(int _chapter);
    /*0xe10ed8*/ void SetScrollWorldBoss();
    /*0xe1161c*/ void MoveScrollPosition(int _chapter);
    /*0xe11534*/ System.Collections.IEnumerator CoRefreshPosition(int _chapter);
    /*0xe115b0*/ System.Collections.IEnumerator CoRefreshWorldBoss();
    /*0xe11880*/ System.Collections.IEnumerator CoCurrentChapterFlag(int _chapter);
    /*0xe118fc*/ System.Collections.IEnumerator CoCurrentChapterDissolve(int _chapter);
    /*0xe10f24*/ void RefreshChapterCloser();
    /*0xe11978*/ void HandlerNextChapterEvent();
    /*0xe11988*/ void Update();
    /*0xe11ffc*/ void OnClickDiffMode(int _diff);
    /*0xe1223c*/ void RefreshCampaignMode(StageDifficult diff);
    /*0xe112c8*/ void SetHardMode();
    /*0xe1111c*/ void SetNormalMode();
    /*0xe12488*/ void <OnExit>b__22_0();

    class <CoRefreshPosition>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;
        /*0x28*/ int _chapter;

        /*0xd8ef10*/ <CoRefreshPosition>d__30(int <>1__state);
        /*0xd8ef3c*/ void System.IDisposable.Dispose();
        /*0xd8ef40*/ bool MoveNext();
        /*0xd8f2ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8f2f4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8f334*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshWorldBoss>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;

        /*0xd8f33c*/ <CoRefreshWorldBoss>d__31(int <>1__state);
        /*0xd8f368*/ void System.IDisposable.Dispose();
        /*0xd8f36c*/ bool MoveNext();
        /*0xd8f5fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8f604*/ void System.Collections.IEnumerator.Reset();
        /*0xd8f644*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ WorldmapPopup <>4__this;
        /*0x18*/ int _chapter;

        /*0xd8e9d0*/ <>c__DisplayClass32_0();
        /*0xd8e9d8*/ bool <CoCurrentChapterFlag>b__0();
    }

    class <CoCurrentChapterFlag>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;
        /*0x28*/ int _chapter;

        /*0xd8ecfc*/ <CoCurrentChapterFlag>d__32(int <>1__state);
        /*0xd8ed28*/ void System.IDisposable.Dispose();
        /*0xd8ed2c*/ bool MoveNext();
        /*0xd8eec0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8eec8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8ef08*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ bool bResult;

        /*0xd8ea5c*/ <>c__DisplayClass33_0();
        /*0xd8ea64*/ void <CoCurrentChapterDissolve>b__0();
        /*0xd8ea70*/ bool <CoCurrentChapterDissolve>b__1();
    }

    class <CoCurrentChapterDissolve>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;
        /*0x28*/ int _chapter;

        /*0xd8eac8*/ <CoCurrentChapterDissolve>d__33(int <>1__state);
        /*0xd8eaf4*/ void System.IDisposable.Dispose();
        /*0xd8eaf8*/ bool MoveNext();
        /*0xd8ecac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8ecb4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8ecf4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ WorldmapPopup <>4__this;
        /*0x18*/ StageDifficult diff;

        /*0xd8ea78*/ <>c__DisplayClass51_0();
        /*0xd8ea80*/ void <OnClickDiffMode>b__0();
        /*0xd8eaa4*/ void <OnClickDiffMode>b__1();
    }
}

class LogoTitleSet
{
    /*0x10*/ string skinName;
    /*0x18*/ UnityEngine.GameObject effect;

    /*0xfbca70*/ LogoTitleSet();
}

class LogoSceneInitializer : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Video.VideoPlayer m_VideoPlayer;
    /*0x20*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_Title;
    /*0x28*/ TitleSkinOption m_TitleOption;
    /*0x30*/ UnityEngine.GameObject m_LetterBox;
    /*0x38*/ int m_AlphaCount;
    /*0x40*/ UnityEngine.GameObject m_Parent;
    /*0x48*/ LoginPlatformView m_LoginPlatform;
    /*0x50*/ UnityEngine.UI.Text m_Version;
    /*0x58*/ bool checkGateInit;

    /*0xfbc610*/ LogoSceneInitializer();
    /*0xfbae80*/ void OnEnable();
    /*0xfbafc4*/ void OnDisable();
    /*0xfbb114*/ void Awake();
    /*0xfbb3ac*/ System.Collections.IEnumerator M_VideoPlayerStartFixedFrame();
    /*0xfbb418*/ System.Collections.IEnumerator ProcessFadeOutLogo();
    /*0xfbb484*/ System.Collections.IEnumerator InitializeTitle();
    /*0xfbb4f0*/ System.Collections.IEnumerator InTitleStartFixedFrame();
    /*0xfbb54c*/ System.Collections.IEnumerator InTitlePlaySfx();
    /*0xfbb5a8*/ void InTitleComplete(Spine.TrackEntry trackEntry);
    /*0xfbb64c*/ void CompleteTitleInitialize();
    /*0xfbb34c*/ void SetActiveUIParent(bool _bEnable);
    /*0xfbb364*/ void SetActivePlatform(bool _bEnable);
    /*0xfbb7cc*/ void InitVersion();
    /*0xfbb89c*/ void HandlerLoginAnimation();
    /*0xfbbc90*/ void HandlerLoadUpdateTop();
    /*0xfbbe74*/ void HandlerSceneChange();
    /*0xfbbf54*/ void CompleteTitleAnimation(Spine.TrackEntry trackEntry);
    /*0xfbc100*/ void HandlerLoginFailEvent();
    /*0xfbc108*/ void EndDownloadBundleEvent();
    /*0xfbbab8*/ void StartLogin();
    /*0xfbbff8*/ void GotoMainScene();
    /*0xfbc294*/ void HandlerShowPopupEvent();
    /*0xfbc420*/ System.Collections.IEnumerator CoProtocolVersionCheck();
    /*0xfbc48c*/ void Send_GateCheck();
    /*0xfbc558*/ System.Collections.IEnumerator CoBalanceTableDownload();
    /*0xfbc5b4*/ System.Collections.IEnumerator CoGateZone();
    /*0xfbc620*/ bool <CoProtocolVersionCheck>b__31_0();
    /*0xfbc628*/ void <Send_GateCheck>b__32_0(bool success, PTShare.Define.ErrorCode code);

    class <M_VideoPlayerStartFixedFrame>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;

        /*0xe5bc8c*/ <M_VideoPlayerStartFixedFrame>d__12(int <>1__state);
        /*0xe5bcb8*/ void System.IDisposable.Dispose();
        /*0xe5bcbc*/ bool MoveNext();
        /*0xe5bdec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5bdf4*/ void System.Collections.IEnumerator.Reset();
        /*0xe5be34*/ object System.Collections.IEnumerator.get_Current();
    }

    class <ProcessFadeOutLogo>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;
        /*0x28*/ float <decreaseAlpha>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xe5be3c*/ <ProcessFadeOutLogo>d__13(int <>1__state);
        /*0xe5be68*/ void System.IDisposable.Dispose();
        /*0xe5be6c*/ bool MoveNext();
        /*0xe5bf54*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5bf5c*/ void System.Collections.IEnumerator.Reset();
        /*0xe5bf9c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ bool dataInitialized;

        /*0xe5abf4*/ <>c__DisplayClass14_0();
        /*0xe5abfc*/ bool <InitializeTitle>b__1();
    }

    class <>c
    {
        static /*0x0*/ LogoSceneInitializer.<> <>9;
        static /*0x8*/ System.Func<bool> <>9__14_0;
        static /*0x10*/ System.Func<bool> <>9__14_2;
        static /*0x18*/ System.Action <>9__23_0;
        static /*0x20*/ System.Action<bool> <>9__32_1;

        static /*0xe5a8bc*/ <>c();
        /*0xe5a91c*/ <>c();
        /*0xe5a924*/ bool <InitializeTitle>b__14_0();
        /*0xe5a980*/ bool <InitializeTitle>b__14_2();
        /*0xe5aa0c*/ void <HandlerLoadUpdateTop>b__23_0();
        /*0xe5ab0c*/ void <Send_GateCheck>b__32_1(bool result);
    }

    class <InitializeTitle>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;
        /*0x28*/ LogoSceneInitializer.<> <>8__1;

        /*0xe5b5fc*/ <InitializeTitle>d__14(int <>1__state);
        /*0xe5b628*/ void System.IDisposable.Dispose();
        /*0xe5b62c*/ bool MoveNext();
        /*0xe5bc3c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5bc44*/ void System.Collections.IEnumerator.Reset();
        /*0xe5bc84*/ object System.Collections.IEnumerator.get_Current();
    }

    class <InTitleStartFixedFrame>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5b4f0*/ <InTitleStartFixedFrame>d__15(int <>1__state);
        /*0xe5b51c*/ void System.IDisposable.Dispose();
        /*0xe5b520*/ bool MoveNext();
        /*0xe5b5ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b5b4*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b5f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <InTitlePlaySfx>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5b388*/ <InTitlePlaySfx>d__16(int <>1__state);
        /*0xe5b3b4*/ void System.IDisposable.Dispose();
        /*0xe5b3b8*/ bool MoveNext();
        /*0xe5b4a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b4a8*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b4e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoProtocolVersionCheck>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;

        /*0xe5b1fc*/ <CoProtocolVersionCheck>d__31(int <>1__state);
        /*0xe5b228*/ void System.IDisposable.Dispose();
        /*0xe5b22c*/ bool MoveNext();
        /*0xe5b338*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b340*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b380*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ bool _isloaded;

        /*0xe5ac04*/ <>c__DisplayClass33_0();
        /*0xe5ac0c*/ void <CoBalanceTableDownload>b__0(bool _result);
        /*0xe5ad58*/ bool <CoBalanceTableDownload>b__1();
    }

    class <CoBalanceTableDownload>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5ad7c*/ <CoBalanceTableDownload>d__33(int <>1__state);
        /*0xe5ada8*/ void System.IDisposable.Dispose();
        /*0xe5adac*/ bool MoveNext();
        /*0xe5af8c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5af94*/ void System.Collections.IEnumerator.Reset();
        /*0xe5afd4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ bool _isloaded;

        /*0xe5ad60*/ <>c__DisplayClass34_0();
        /*0xe5ad68*/ void <CoGateZone>b__0();
        /*0xe5ad74*/ bool <CoGateZone>b__1();
    }

    class <CoGateZone>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5afdc*/ <CoGateZone>d__34(int <>1__state);
        /*0xe5b008*/ void System.IDisposable.Dispose();
        /*0xe5b00c*/ bool MoveNext();
        /*0xe5b1ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b1b4*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b1f4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ReStart : UnityEngine.MonoBehaviour
{
    /*0x11c339c*/ ReStart();
    /*0x11c3340*/ System.Collections.IEnumerator Start();

    class <Start>d__0 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf97e90*/ <Start>d__0(int <>1__state);
        /*0xf97ebc*/ void System.IDisposable.Dispose();
        /*0xf97ec0*/ bool MoveNext();
        /*0xf98170*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf98178*/ void System.Collections.IEnumerator.Reset();
        /*0xf981b8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ServerSelectSceneInitializer : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Button m_GameStartButton;

    /*0xe263dc*/ ServerSelectSceneInitializer();
    /*0xe262b8*/ void Awake();

    class <>c
    {
        static /*0x0*/ ServerSelectSceneInitializer.<> <>9;
        static /*0x8*/ UnityEngine.Events.UnityAction <>9__1_0;

        static /*0xcbe464*/ <>c();
        /*0xcbe4c4*/ <>c();
        /*0xcbe4cc*/ void <Awake>b__1_0();
    }
}

class StartServerSelect : UnityEngine.MonoBehaviour
{
    /*0xc9a068*/ StartServerSelect();
    /*0xc9a00c*/ System.Collections.IEnumerator Start();

    class <Start>d__0 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcc2958*/ <Start>d__0(int <>1__state);
        /*0xcc2984*/ void System.IDisposable.Dispose();
        /*0xcc2988*/ bool MoveNext();
        /*0xcc2b88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2b90*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2bd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class StartSyncTool : UnityEngine.MonoBehaviour
{
    /*0xc9a0cc*/ StartSyncTool();
    /*0xc9a070*/ System.Collections.IEnumerator Start();

    class <Start>d__0 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcc2bd8*/ <Start>d__0(int <>1__state);
        /*0xcc2c04*/ void System.IDisposable.Dispose();
        /*0xcc2c08*/ bool MoveNext();
        /*0xcc2e08*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2e10*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2e50*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum RaceTileType
{
    NONE = 0,
    NORMAL = 1,
    START = 2,
    FINISH = 3,
    ICE = 4,
    SCREAM = 5,
    FALL = 6,
    JUMP = 7,
}

class RunRaceResultData
{
    /*0x10*/ System.Collections.Generic.Dictionary<int, int> Unit;
    /*0x18*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<RaceTileType>> Tile;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<float>> Speed;
    /*0x28*/ System.Collections.Generic.List<int> Rank;
    /*0x30*/ System.Collections.Generic.Dictionary<int, float> Time;

    /*0x12956c4*/ RunRaceResultData();
    /*0x12955cc*/ int GetPlayers();
    /*0x1295620*/ int GetBlockCount();
    /*0x1295840*/ void Clear();
}

class RaceSimulrator
{
    /*0x10*/ int nMaxSpeedCount;
    /*0x14*/ int nBlockCount;
    /*0x18*/ int nTrapBlockCount;
    /*0x20*/ RunRaceResultData data;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> RunAccelData;

    /*0x11b837c*/ RaceSimulrator();
    /*0x11b63b0*/ System.Collections.Generic.List<TableData.TableData_Racetile> get_RunTileData();
    /*0x11b63fc*/ float get_BlockInterval();
    /*0x11b644c*/ int get_JoinPlayer();
    /*0x11b6494*/ float get_MaxDistance();
    /*0x11b64c0*/ float get_OriginSpeed();
    /*0x11b6510*/ float get_MoveFrameSpeed();
    /*0x11b651c*/ int get_SplitAccelInterval();
    /*0x11b6564*/ void Setup(int seed);
    /*0x11b6600*/ void SetupRunner(System.Random rnd);
    /*0x11b6934*/ void SetupTile(System.Random rnd);
    /*0x11b6e84*/ void SetupSpeed(System.Random rnd);
    /*0x11b7a80*/ void CalulationTime();
    /*0x11b8374*/ RunRaceResultData GetResult();
    /*0x11b7094*/ RaceTileType <SetupTile>g__GetRandomTile|21_2(System.Random random, int playerNumber);
    /*0x11b777c*/ float <SetupSpeed>g__GetRandomSpeed|22_0(System.Random random, int playerNumber);

    class <>c
    {
        static /*0x0*/ RaceSimulrator.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Unitbase, bool> <>9__20_0;
        static /*0x10*/ System.Func<TableData.TableData_Unitbase, int> <>9__20_1;
        static /*0x18*/ System.Func<TableData.TableData_Racetile, int> <>9__21_0;
        static /*0x20*/ System.Func<TableData.TableData_Racetile, int> <>9__21_1;
        static /*0x28*/ System.Func<TableData.TableData_Racetile, float> <>9__21_3;
        static /*0x30*/ System.Func<TableData.TableData_Raceaccel, float> <>9__22_1;
        static /*0x38*/ System.Func<System.Collections.Generic.KeyValuePair<int, float>, float> <>9__23_2;

        static /*0xf96554*/ <>c();
        /*0xf965b4*/ <>c();
        /*0xf965bc*/ bool <SetupRunner>b__20_0(TableData.TableData_Unitbase w);
        /*0xf965ec*/ int <SetupRunner>b__20_1(TableData.TableData_Unitbase s);
        /*0xf96604*/ int <SetupTile>b__21_0(TableData.TableData_Racetile x);
        /*0xf96634*/ int <SetupTile>b__21_1(TableData.TableData_Racetile x);
        /*0xf96700*/ float <SetupTile>b__21_3(TableData.TableData_Racetile x);
        /*0xf96718*/ float <SetupSpeed>b__22_1(TableData.TableData_Raceaccel x);
        /*0xf96730*/ float <CalulationTime>b__23_2(System.Collections.Generic.KeyValuePair<int, float> x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int i;
        /*0x18*/ RaceSimulrator <>4__this;

        /*0xf9677c*/ <>c__DisplayClass21_0();
        /*0xf96784*/ bool <SetupTile>b__4(RaceTileType x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ TableData.TableData_Raceaccel tableData;

        /*0xf9686c*/ <>c__DisplayClass22_0();
        /*0xf96874*/ bool <SetupSpeed>b__2(float x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ RaceSimulrator <>4__this;
        /*0x18*/ int i;

        /*0xf96898*/ <>c__DisplayClass23_0();
    }

    class <>c__DisplayClass23_1
    {
        /*0x10*/ int nNextIndex;
        /*0x18*/ RaceSimulrator.<> CS$<>8__locals1;
        /*0x20*/ System.Predicate<TableData.TableData_Racetile> <>9__0;
        /*0x28*/ System.Predicate<TableData.TableData_Racetile> <>9__1;

        /*0xf968a0*/ <>c__DisplayClass23_1();
        /*0xf968a8*/ bool <CalulationTime>b__0(TableData.TableData_Racetile x);
        /*0xf969cc*/ bool <CalulationTime>b__1(TableData.TableData_Racetile x);
    }
}

class ShaderController : UnityEngine.MonoBehaviour
{
    /*0x18*/ string Property;
    /*0x20*/ float RangeValue2;
    /*0x28*/ UnityEngine.Material m_Material;

    /*0xe28d80*/ ShaderController();
    /*0xe28c2c*/ void Awake();
    /*0xe28d28*/ void LateUpdate();
}

class AdsRewardSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ TableManager.Ads.AdsRewardType m_eRewardType;
    /*0x20*/ LocalizeString m_title;
    /*0x28*/ AtlasImage m_rewardIcon;
    /*0x30*/ AtlasImage m_hide;
    /*0x38*/ LocalizeString m_rewardText;

    /*0xed9ba8*/ AdsRewardSlot();
    /*0xed9714*/ bool get_IsAlready();
    /*0xed976c*/ void Initialize();
    /*0xed9b34*/ void OnClick();
}

class AreaMainWindow : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;

    static /*0xee1b18*/ AreaMainWindow();
    static /*0xee042c*/ void add_OnExitEvent(System.Action value);
    static /*0xee0520*/ void remove_OnExitEvent(System.Action value);
    /*0xee1b10*/ AreaMainWindow();
    /*0xee0614*/ void OnCreate();
    /*0xee0618*/ void OnEnter();
    /*0xee061c*/ void OnStart();
    /*0xee0620*/ void OnFinish();
    /*0xee0624*/ void OnLeave();
    /*0xee0628*/ void OnDelete();
    /*0xee068c*/ void OnExit();
    /*0xee0714*/ void InitalizeArea();
    /*0xee0718*/ void OnClickPeaksoftime();
    /*0xee071c*/ void OnClickWonders();
    /*0xee0720*/ void OnClickKingsTower(bool showEffect);
    /*0xee0918*/ void OnClickMaze();
    /*0xee09b8*/ void OnClickAreaHeroes();
    /*0xee09c8*/ void OnClickAreaHeroes(PTShare.Define.ArenaSubType eType, bool showEffect, bool isBattleToArea);
    /*0xee10ec*/ void OnClickBountyBoard();
    /*0xee1248*/ void OnClickMinigame();
    /*0xee13d0*/ void OnClickDungeon();
    /*0xee152c*/ void OnClickPveRanking();

    class <>c
    {
        static /*0x0*/ AreaMainWindow.<> <>9;
        static /*0x8*/ System.Action <>9__13_0;
        static /*0x10*/ System.Action <>9__17_0;
        static /*0x18*/ System.Action <>9__18_0;
        static /*0x20*/ System.Action <>9__19_1;
        static /*0x28*/ System.Action <>9__19_0;
        static /*0x30*/ System.Action <>9__20_1;
        static /*0x38*/ System.Action <>9__20_0;
        static /*0x40*/ System.Action<bool> <>9__20_2;

        static /*0xd99d50*/ <>c();
        /*0xd99db0*/ <>c();
        /*0xd99db8*/ void <OnClickKingsTower>b__13_0();
        /*0xd99e3c*/ void <OnClickBountyBoard>b__17_0();
        /*0xd99eec*/ void <OnClickMinigame>b__18_0();
        /*0xd99f60*/ void <OnClickDungeon>b__19_0();
        /*0xd9a0a8*/ void <OnClickDungeon>b__19_1();
        /*0xd9a128*/ void <OnClickPveRanking>b__20_0();
        /*0xd9a270*/ void <OnClickPveRanking>b__20_1();
        /*0xd9a2f0*/ void <OnClickPveRanking>b__20_2(bool _result);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ bool isBattleToArea;
        /*0x14*/ PTShare.Define.ArenaSubType eType;

        /*0xd9a2f4*/ <>c__DisplayClass16_0();
        /*0xd9a2fc*/ void <OnClickAreaHeroes>b__0();
    }
}

class ArenaCategoryEntity : CategoryEntityBase<PTShare.Define.ArenaSubType>
{
    /*0x60*/ UnityEngine.GameObject m_JoinLock;
    /*0x68*/ AtlasImage m_CenterTier;
    /*0x70*/ LocalizeString m_TierName;

    /*0xee3d08*/ ArenaCategoryEntity();
    /*0xee1b1c*/ void InitializeEntity(PTShare.Define.ArenaSubType eType);
    /*0xee1cc4*/ void SetBackground();
    /*0xee1f08*/ void SetSeasonText();
    /*0xee206c*/ void SetPanel();
    /*0xee239c*/ void SetTopRightButton();
    /*0xee2638*/ void SetTitleText();
    /*0xee1b80*/ void SetJoinLock();
    /*0xee28a4*/ void SetActiveTier(bool enable);
    /*0xee28bc*/ void SetTier();
    /*0xee2af4*/ void OnClick();

    class <>c
    {
        static /*0x0*/ ArenaCategoryEntity.<> <>9;
        static /*0x8*/ UnityEngine.Events.UnityAction <>9__7_0;
        static /*0x10*/ System.Action<bool> <>9__12_0;
        static /*0x18*/ System.Action<bool> <>9__12_1;

        static /*0xd9a4a0*/ <>c();
        /*0xd9a500*/ <>c();
        /*0xd9a508*/ void <SetTopRightButton>b__7_0();
        /*0xd9a588*/ void <OnClick>b__12_0(bool _result);
        /*0xd9a58c*/ void <OnClick>b__12_1(bool _result);
    }
}

class ArenaLimitNotice : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_limitText;

    /*0xee4164*/ ArenaLimitNotice();
    /*0xee3f34*/ void Init();
    /*0xee413c*/ void Hide();
}

class ArenaTrainningProcess : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_TrainningCount;
    /*0x20*/ LocalizeString m_MaxMaterialNotice;
    /*0x28*/ System.Collections.Generic.List<ArenaTrainningProcess.TrainningMaterials> m_liMaterials;
    /*0x30*/ System.Collections.Generic.List<ArenaTrainningProcess.TrainningStatus> m_liStatus;
    /*0x38*/ System.Collections.Generic.List<Rewards> liTrainningRewards;
    /*0x40*/ int nGroupCurIndex;
    /*0x44*/ int nIndivCurIndex;

    /*0xeeb870*/ ArenaTrainningProcess();
    /*0xeeae64*/ int get_TrainingRotationMax();
    /*0xeea91c*/ void InitializeProcess(int groupCur, int indivCur);
    /*0xeeae70*/ void SetTrainningCount(int index);
    /*0xeeb6a4*/ void SetStatus(int index);
    /*0xeeaf38*/ void SetMaterials();
    /*0xeeb7fc*/ TrainningStatusEntity GetCurrentEntity();

    class TrainningMaterials
    {
        /*0x10*/ UnityEngine.GameObject parent;
        /*0x18*/ AtlasImage currencyIcon;
        /*0x20*/ LocalizeString currencyAmount;
        /*0x28*/ TooltipData_Desc desc;

        /*0xd9d200*/ TrainningMaterials();
    }

    class TrainningStatus
    {
        /*0x10*/ TrainningStatusEntity parent;
        /*0x18*/ AtlasImage arrow;

        /*0xd9d208*/ TrainningStatus();
    }

    class <>c
    {
        static /*0x0*/ ArenaTrainningProcess.<> <>9;
        static /*0x8*/ System.Action<ArenaTrainningProcess.TrainningMaterials> <>9__14_0;

        static /*0xd9d170*/ <>c();
        /*0xd9d1d0*/ <>c();
        /*0xd9d1d8*/ void <SetMaterials>b__14_0(ArenaTrainningProcess.TrainningMaterials x);
    }
}

class GeneralArenaMatchEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_PlayerSlot;
    /*0x20*/ AtlasImage m_BtnIcon;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_Power;
    /*0x38*/ LocalizeString m_Score;
    /*0x40*/ LocalizeString m_ButtonText;
    /*0x48*/ PTShare.Define.SArenaTarget targetInfo;
    /*0x50*/ PTShare.Define.ArenaSubType eArenaCategoryType;
    /*0x54*/ int index;

    /*0xed0a94*/ GeneralArenaMatchEntity();
    /*0xecfff8*/ TableData.TableData_Item get_TicketItem();
    /*0xed00e4*/ void InitializeEntity(PTShare.Define.ArenaSubType _eType, PTShare.Define.SArenaTarget _target, int _index);
    /*0xed00f0*/ void SetView();
    /*0xed04b8*/ void OnClick_Battle();
    /*0xed0910*/ void CallbackBattle();
    /*0xed0a08*/ void HandlerBuyArenaTicket(int _nAmount);
    /*0xed0010*/ int GetArenaNeedItemID();
    /*0xed0aa4*/ void <SetView>b__12_0();
    /*0xed0ac4*/ void <SetView>b__12_1();
}

class GeneralArenaRecordEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_PlayerSlot;
    /*0x20*/ UnityEngine.UI.Button m_Button;
    /*0x28*/ AtlasImage m_BtnIcon;
    /*0x30*/ LocalizeString m_ButtonText;
    /*0x38*/ LocalizeString m_Score;
    /*0x40*/ LocalizeString m_Nickname;
    /*0x48*/ LocalizeString m_LastedTime;
    /*0x50*/ int index;
    /*0x58*/ PTShare.Define.SArenaHistory historyInfo;
    /*0x60*/ PTShare.Define.ArenaSubType eArenaCategoryType;

    /*0xed27fc*/ GeneralArenaRecordEntity();
    /*0xed1b34*/ TableData.TableData_Item get_TicketItem();
    /*0xed1c20*/ void InitializeEntity(PTShare.Define.ArenaSubType _eType, PTShare.Define.SArenaHistory _history, int index);
    /*0xed1c30*/ void SetView();
    /*0xed222c*/ void OnClick_Graph();
    /*0xed23ec*/ void OnClick_Revenge();
    /*0xed2704*/ void CallbackBattle();
    /*0xed1b4c*/ int GetArenaNeedItemID();
    /*0xed280c*/ void <SetView>b__13_0();
    /*0xed282c*/ void <SetView>b__13_1();
}

class GuildWarRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Selected;
    /*0x20*/ AtlasImage m_RankIcon;
    /*0x28*/ UnityEngine.GameObject m_PointParent;
    /*0x30*/ UnityEngine.GameObject m_ButtonParent;
    /*0x38*/ LocalizeString m_RankCount;
    /*0x40*/ LocalizeString m_PointAmount;
    /*0x48*/ int nRankIndex;
    /*0x50*/ TableData.TableData_Guildwarrank rankInfo;

    /*0x10f3368*/ GuildWarRewardEntity();
    /*0x10f2e84*/ void Release();
    /*0x10f2efc*/ void InitializeEntity(int nIndex, TableData.TableData_Guildwarrank data, bool bSelected);
    /*0x10f31e0*/ void OnClick_RewardDetail();
    /*0x10f3280*/ void OnClick_RewardDetailSelf();
}

class HeroWorldArenaSlot : HeroSlot
{
    /*0x48*/ AtlasImage m_blind;

    /*0x1309dd0*/ HeroWorldArenaSlot();
    /*0x1309d48*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x1309d78*/ void Clear();
    /*0x1309db8*/ void SetActiveBlind(bool enable);
}

class StartTrainningAnimation : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_Enemy;
    /*0x28*/ ParticleBase m_HitEffect;
    /*0x30*/ UnityEngine.UI.Slider m_Slider;
    /*0x38*/ LocalizeString m_TrainningText;
    /*0x40*/ TableData.TableData_Unitbase unitData;
    /*0x48*/ ActorAnimSyncData syncData;
    /*0x50*/ AnimEvent atkAnimEvent;
    /*0x58*/ System.Action onFinishCallback;

    /*0xc9a738*/ StartTrainningAnimation();
    /*0xc9a0d4*/ void InitializeAnimation(int nStatID, System.Action finishCallback);
    /*0xc9a5c8*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xc9a680*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xc9a55c*/ System.Collections.IEnumerator CoProcess();

    class <>c
    {
        static /*0x0*/ StartTrainningAnimation.<> <>9;
        static /*0x8*/ System.Predicate<AnimEvent> <>9__9_0;

        static /*0xcc2e58*/ <>c();
        /*0xcc2eb8*/ <>c();
        /*0xcc2ec0*/ bool <InitializeAnimation>b__9_0(AnimEvent x);
    }

    class <CoProcess>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StartTrainningAnimation <>4__this;

        /*0xcc2ee0*/ <CoProcess>d__12(int <>1__state);
        /*0xcc2f0c*/ void System.IDisposable.Dispose();
        /*0xcc2f10*/ bool MoveNext();
        /*0xcc32a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc32ac*/ void System.Collections.IEnumerator.Reset();
        /*0xcc32ec*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TierRewardGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardBox;
    /*0x20*/ LocalizeString m_SpecChar;
    /*0x28*/ LocalizeString m_Title;
    /*0x30*/ System.Collections.Generic.List<Rewards> liRewards;

    /*0x116c2b4*/ TierRewardGroup();
    /*0x116bfdc*/ void InitializeGroup(System.Collections.Generic.List<Rewards> rewards, string specChar, string title);
    /*0x116c138*/ void SetRewards(System.Collections.Generic.List<Rewards> rewards);
}

class TrainningStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_Selected;
    /*0x20*/ AtlasImage m_Icon;
    /*0x28*/ ParticleBase m_Effect;
    /*0x30*/ float ParticleSpeed;

    /*0x111f9ac*/ TrainningStatusEntity();
    /*0x111f7b4*/ void OnEnable();
    /*0x111f7ec*/ void InitializeEntity(TableData.TableData_Trainingroom basic);
    /*0x111f8a8*/ void SelectStatus(bool enable);
    /*0x111f8c0*/ void StartParticle(System.Action finishCallback);
    /*0x111f934*/ System.Collections.IEnumerator CoParticleEffect(System.Action finishCallback);

    class <CoParticleEffect>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TrainningStatusEntity <>4__this;
        /*0x28*/ System.Action finishCallback;

        /*0xcd38a8*/ <CoParticleEffect>d__8(int <>1__state);
        /*0xcd38d4*/ void System.IDisposable.Dispose();
        /*0xcd38d8*/ bool MoveNext();
        /*0xcd39c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd39c8*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3a08*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TrainningStatusInfomation : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatusName;
    /*0x20*/ LocalizeString m_BeforeValue;
    /*0x28*/ LocalizeString m_AfterValue;
    /*0x30*/ AtlasImage m_Arrow;
    /*0x38*/ ParticleBase m_Particle;
    /*0x40*/ float m_ParticleSpeed;

    /*0x111fda8*/ TrainningStatusInfomation();
    /*0x111f9bc*/ void OnEnable();
    /*0x111f9f4*/ void InitializeInfomation(int index, int groupCur, int indivCur);
    /*0x111fcd0*/ void StartParticle();
    /*0x111fd3c*/ System.Collections.IEnumerator CoParticle();

    class <CoParticle>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TrainningStatusInfomation <>4__this;

        /*0xcd3a10*/ <CoParticle>d__9(int <>1__state);
        /*0xcd3a3c*/ void System.IDisposable.Dispose();
        /*0xcd3a40*/ bool MoveNext();
        /*0xcd3b18*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd3b20*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3b60*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldArenaBestRewardParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_tierRewardSlot;
    /*0x20*/ LocalizeString m_tierRewardText;
    /*0x28*/ UnityEngine.GameObject m_rankRewardClearIcon;
    /*0x30*/ UnityEngine.GameObject m_tierRewardClearIcon;

    /*0xe040b4*/ WorldArenaBestRewardParent();
    /*0xe03e70*/ void Initialize();
}

class WorldArenaFightEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_playerName;
    /*0x28*/ LocalizeString m_playerScore;
    /*0x30*/ LocalizeString m_totalAttack;
    /*0x38*/ System.Collections.Generic.List<HeroWorldArenaSlot> m_liDefenseHeroes;
    /*0x40*/ UnityEngine.GameObject m_ResultWin;
    /*0x48*/ PTShare.Define.SWorldArenaTarget m_targetData;

    /*0xe04bf8*/ WorldArenaFightEntity();
    /*0xe0431c*/ void Release();
    /*0xe04440*/ void Initialize(PTShare.Define.SWorldArenaTarget data);
    /*0xe048c8*/ void OnClick();
    /*0xe04480*/ void Settings_Localize();
    /*0xe04598*/ void Settings_Heroes();
    /*0xe04c00*/ void <OnClick>b__9_0();

    class <>c
    {
        static /*0x0*/ WorldArenaFightEntity.<> <>9;
        static /*0x8*/ System.Action<HeroWorldArenaSlot> <>9__7_0;
        static /*0x10*/ System.Action<HeroWorldArenaSlot> <>9__11_0;

        static /*0xd8c6ac*/ <>c();
        /*0xd8c70c*/ <>c();
        /*0xd8c714*/ void <Release>b__7_0(HeroWorldArenaSlot x);
        /*0xd8c734*/ void <Settings_Heroes>b__11_0(HeroWorldArenaSlot x);
    }
}

class WorldArenaFightParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_WorldArenaFightEntity m_scrollContent;
    /*0x20*/ UnityEngine.GameObject m_daliyParent;
    /*0x28*/ LocalizeString m_daliyTimeText;
    /*0x30*/ WorldArenaRefreshButton m_refreshButton;

    /*0xe057e8*/ WorldArenaFightParent();
    /*0xe04cec*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> get_targets();
    /*0xe04d6c*/ void OnEnable();
    /*0xe04efc*/ void Initialize();
    /*0xe04ea0*/ void Initialize(bool onEnabled);
    /*0xe04f04*/ void Release();
    /*0xe04fbc*/ void InitializeScroll();
    /*0xe05090*/ void UpdateScrollContent(int index, WorldArenaFightEntity entity);
    /*0xe05110*/ void SyncListDaily_Coroutine();
    /*0xe053f0*/ void SyncListSeason_Coroutine();
}

class WorldArenaNewRecordRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_rewardSlot;
    /*0x20*/ LocalizeString m_rewardAmount;

    /*0xe0647c*/ WorldArenaNewRecordRewardEntity();
    /*0xe061c4*/ void Initialize(Rewards _reward);
}

class WorldArenaRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_playerName;
    /*0x28*/ LocalizeString m_playerScore;
    /*0x30*/ LocalizeString m_totalAttack;
    /*0x38*/ System.Collections.Generic.List<HeroWorldArenaSlot> m_liDefenseHeroes;
    /*0x40*/ LocalizeString m_rankText;
    /*0x48*/ AtlasImage m_RankIcon;
    /*0x50*/ PTShare.Define.SWorldArenaRanker m_targetData;

    /*0xe0863c*/ WorldArenaRankEntity();
    /*0xe079c4*/ void Release();
    /*0xe07f4c*/ void Initialize(PTShare.Define.SWorldArenaRanker data);
    /*0xe08324*/ void Initialize_Self();
    /*0xe07d08*/ void Settings_Localize();
    /*0xe07f8c*/ void Settings_Heroes();

    class <>c
    {
        static /*0x0*/ WorldArenaRankEntity.<> <>9;
        static /*0x8*/ System.Action<HeroWorldArenaSlot> <>9__8_0;
        static /*0x10*/ System.Action<HeroWorldArenaSlot> <>9__12_0;

        static /*0xd8cb14*/ <>c();
        /*0xd8cb74*/ <>c();
        /*0xd8cb7c*/ void <Release>b__8_0(HeroWorldArenaSlot x);
        /*0xd8cb9c*/ void <Settings_Heroes>b__12_0(HeroWorldArenaSlot x);
    }
}

class WorldArenaRankParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_WorldArenaRankEntity m_scrollContent;
    /*0x20*/ WorldArenaRankEntity m_myRank;
    /*0x28*/ LocalizeString m_noMemberText;

    /*0xe08a08*/ WorldArenaRankParent();
    /*0xe08644*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaRanker> get_targets();
    /*0xe086c4*/ void OnEnable();
    /*0xe075d0*/ void Initialize();
    /*0xe087f8*/ void Initialize(bool onEnabled);
    /*0xe088b0*/ void Release();
    /*0xe08900*/ void InitializeScroll();
    /*0xe08988*/ void UpdateScrollContent(int index, WorldArenaRankEntity entity);
}

class WorldArenaRefreshButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_buttonImage;
    /*0x20*/ LocalizeString m_buttonString;
    /*0x28*/ UnityEngine.UI.Outline m_buttonOutline;
    /*0x30*/ System.Collections.IEnumerator m_ieUpdate;

    /*0xe08e14*/ WorldArenaRefreshButton();
    /*0xe04f24*/ void Release();
    /*0xe05044*/ void Initialize();
    /*0xe08a7c*/ void OnClick_ResetButton();
    /*0xe08d34*/ void ResetList();
    /*0xe08a10*/ System.Collections.IEnumerator CoUpdate();
    /*0xe08e1c*/ void <OnClick_ResetButton>b__6_0(bool result);
    /*0xe08e28*/ void <ResetList>b__7_0();

    class <CoUpdate>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaRefreshButton <>4__this;

        /*0xd8cbbc*/ <CoUpdate>d__8(int <>1__state);
        /*0xd8cbe8*/ void System.IDisposable.Dispose();
        /*0xd8cbec*/ bool MoveNext();
        /*0xd8d0b4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8d0bc*/ void System.Collections.IEnumerator.Reset();
        /*0xd8d0fc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldArenaRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_tierIcon;
    /*0x20*/ UnityEngine.GameObject m_select;
    /*0x28*/ LocalizeString m_tier;
    /*0x30*/ LocalizeString m_tierName;
    /*0x38*/ WorldArenaRewardSlot[] m_seasonRewards;
    /*0x40*/ WorldArenaRewardSlot[] m_dailyRewards;
    /*0x48*/ WorldArenaRewardSlot[] m_tierRewards;
    /*0x50*/ TableData.TableData_Worldarenatier2 m_tierData;

    /*0xe095b8*/ WorldArenaRewardEntity();
    /*0xe08eb0*/ void InitEntity(int tierStep);
    /*0xe08f20*/ void SetTier();
    /*0xe09264*/ void SetReward(string rewards, WorldArenaRewardSlot[] target);
}

class WorldArenaRewardParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_WorldArenaRewardEntity m_scrollContent;
    /*0x20*/ WorldArenaBestRewardParent m_bestReward;
    /*0x28*/ int m_tierCount;

    /*0xe0981c*/ WorldArenaRewardParent();
    /*0xe075d8*/ void Initialize();
    /*0xe095c0*/ void BindEvent();
    /*0xe09708*/ void RemoveEvent();
    /*0xe097dc*/ void HandleScrollContent(int index, WorldArenaRewardEntity obj);
    /*0xe0969c*/ System.Collections.IEnumerator CoScrollDelay();

    class <CoScrollDelay>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaRewardParent <>4__this;

        /*0xd8d104*/ <CoScrollDelay>d__7(int <>1__state);
        /*0xd8d130*/ void System.IDisposable.Dispose();
        /*0xd8d134*/ bool MoveNext();
        /*0xd8d25c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8d264*/ void System.Collections.IEnumerator.Reset();
        /*0xd8d2a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldArenaRewardSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_itemSlot;
    /*0x20*/ LocalizeString m_amount;

    /*0xe09824*/ WorldArenaRewardSlot();
    /*0xe09430*/ void SetReward(Rewards reward);
}

class ArtifactChangeEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEquipEvent;
    /*0x18*/ ItemInfoSlot m_InfoSlot;
    /*0x20*/ HeroSlotInventory m_EquipHeroSlot;
    /*0x28*/ LocalizeString m_ArtifactName;
    /*0x30*/ LocalizeString m_GetDesc;
    /*0x38*/ UnityEngine.GameObject m_EquipBtn;
    /*0x40*/ UnityEngine.GameObject m_ChangeBtn;
    /*0x48*/ UnityEngine.GameObject m_MoveBtn;
    /*0x50*/ UnityEngine.GameObject m_AlreadyDesc;
    /*0x58*/ AtlasImage m_Line;
    /*0x60*/ AtlasImage m_Lock;
    /*0x68*/ TableData.TableData_Equipment equipmentInfo;
    /*0x70*/ PTShare.Define.SArtifact artifactData;
    /*0x78*/ PTShare.Define.SHero heroInfo;
    /*0x80*/ PTShare.Define.SHero equipHeroInfo;

    static /*0xeecb28*/ ArtifactChangeEntity();
    /*0xeecb20*/ ArtifactChangeEntity();
    /*0xeebc94*/ bool get_IsUseArtifact();
    /*0xeebca4*/ bool get_IsEquipHero();
    /*0xeebcb4*/ bool get_IsSameEquipArtifact();
    /*0xeebcec*/ void InitializeEntity(PTShare.Define.SHero hero, TableData.TableData_Artifact artifact);
    /*0xeec0c8*/ void Release();
    /*0xeec22c*/ void SetActiveHeroSlot(bool enable);
    /*0xeec268*/ void SetActiveButton(bool equip, bool change, bool move);
    /*0xeec2d0*/ void SetActiveAlreadyDesc(bool enable);
    /*0xeec428*/ void SetActiveLine(bool enable);
    /*0xeec2f0*/ bool IsUnlockMoveContent();
    /*0xeec440*/ void OnClick_Equip();
    /*0xeec740*/ void OnClick_Change();
    /*0xeeca38*/ void OnClick_Move();
}

class ArtifactMaterial : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_MaterialIcon;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ Rewards rewardInfo;

    /*0xeef74c*/ ArtifactMaterial();
    /*0xeef354*/ void InitializeEntity(Rewards reward);
    /*0xeef388*/ void SetMaterial();
    /*0xeef484*/ void SetAmount();
}

class ArtifactPassiveDescEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ActiveIcon;
    /*0x20*/ UnityEngine.UI.Outline m_DescriptionOutline;
    /*0x28*/ LocalizeString m_Description;
    /*0x30*/ UnityEngine.Color m_ActiveColor;
    /*0x40*/ UnityEngine.Color m_ActiveOutColor;
    /*0x50*/ UnityEngine.Color m_DeActiveColor;
    /*0x60*/ UnityEngine.Color m_DeActiveOutColor;
    /*0x70*/ TableData.TableData_Artifact artifactData;
    /*0x78*/ PTShare.Define.SArtifact artifactInfo;

    /*0xeef7d8*/ ArtifactPassiveDescEntity();
    /*0xeee1fc*/ void InitializeEntity(TableData.TableData_Artifact artifact, PTShare.Define.SArtifact data);
    /*0xeef754*/ void SetActiveIcon(bool enable);
    /*0xeef76c*/ void SetDesc(UnityEngine.Color color, UnityEngine.Color outColor);
}

class ArtifactStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatName;
    /*0x20*/ LocalizeString m_StatValue;
    /*0x28*/ LocalizeString m_AddStat;

    /*0xeefc44*/ ArtifactStatusEntity();
    /*0xeee824*/ void InitializeStatus(Battle.CharacterStat.StatType eType, TableData.TableData_Artifact artifact, int nLevel, string color);
    /*0xeee37c*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SHero hero, PTShare.Define.SArtifact artifact, string color);
    /*0xeef998*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SArtifact artifact, int nOffsetLevel, string color);
    /*0xeef7e0*/ void SetStatValue(Battle.CharacterStat.StatType eType, LocalizeString parent, Battle.CharacterStat stat, string addOper);
}

class ArtifactUpgradeResult : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_BefArtifact;
    /*0x20*/ ItemInfoSlot m_AftArtifact;
    /*0x28*/ ArtifactUpgradeStatusGroup m_StatusGroup;
    /*0x30*/ LocalizeString m_EffectDesc;
    /*0x38*/ System.Action OnExitCallback;

    /*0xef0684*/ ArtifactUpgradeResult();
    /*0xef0120*/ void InitializeResult(PTShare.Define.SHero hero, System.Action exitCallback);
    /*0xef0634*/ void OnClick_Exit();
}

class ArtifactUpgradeStatusGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<AtlasImage> m_liBefStar;
    /*0x20*/ System.Collections.Generic.List<AtlasImage> m_liAftStar;
    /*0x28*/ PTShare.Define.SArtifact artifactInfo;
    /*0x30*/ TableData.TableData_Equipment equipmentData;
    /*0x38*/ System.Collections.Generic.List<ArtifactStatusEntity> liStatusEntity;

    /*0xef07e0*/ ArtifactUpgradeStatusGroup();
    /*0xef068c*/ void Release();
    /*0xef0354*/ void InitializeGroup(PTShare.Define.SArtifact _artifact, TableData.TableData_Equipment _equipment, string _color);

    class <>c
    {
        static /*0x0*/ ArtifactUpgradeStatusGroup.<> <>9;
        static /*0x8*/ System.Action<ArtifactStatusEntity> <>9__5_0;

        static /*0xd9dd34*/ <>c();
        /*0xd9dd94*/ <>c();
        /*0xd9dd9c*/ void <Release>b__5_0(ArtifactStatusEntity x);
    }
}

class BattleGuildWarTopUI : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_GuildEmblemSlot_Ally;
    /*0x20*/ GuildEmblemSlot m_GuildEmblemSlot_Enemy;
    /*0x28*/ GuildLevelSlot m_GuildLevelSlot_Ally;
    /*0x30*/ GuildLevelSlot m_GuildLevelSlot_Enemy;
    /*0x38*/ LocalizeString m_GuildName_Ally;
    /*0x40*/ LocalizeString m_GuildName_Enemy;
    /*0x48*/ UnityEngine.GameObject m_goVSImage;
    /*0x50*/ UnityEngine.GameObject m_goAttackImage;
    /*0x58*/ UnityEngine.GameObject m_goDefenseImage;

    /*0xe2ff8c*/ BattleGuildWarTopUI();
    /*0xe2fe10*/ void InitGuildEmblem(int _nEmblemID, int _nFrameID, int _nLevel, string _sGuildName, bool _bAlly);
    /*0xe2feb8*/ void SetVSImage(BattleGuildWarTopUI.VSImageType _eImageType);

    enum VSImageType
    {
        VS = 0,
        ATTACK = 1,
        DEFENSE = 2,
    }
}

class BattleMainWindow : GuiBase
{
    /*0x40*/ bool <IsInitializeUIEnd>k__BackingField;
    /*0x48*/ LocalizeString m_LimitTime;
    /*0x50*/ LocalizeString m_CoinAmount;
    /*0x58*/ LocalizeString m_ChastAmount;
    /*0x60*/ AtlasImage m_Auto;
    /*0x68*/ AtlasImage m_Fast;
    /*0x70*/ AtlasImage m_Fastest;
    /*0x78*/ UnityEngine.GameObject m_goSkip;
    /*0x80*/ UnityEngine.GameObject m_goPause;
    /*0x88*/ UnityEngine.GameObject m_goAuto;
    /*0x90*/ UnityEngine.GameObject m_goAutoParticle;
    /*0x98*/ AtlasImage m_Fast_X2;
    /*0xa0*/ AtlasImage m_Fast_X3;
    /*0xa8*/ AtlasImage m_Fast_X4;
    /*0xb0*/ UnityEngine.GameObject m_goFast_X2;
    /*0xb8*/ UnityEngine.GameObject m_goFast_X3;
    /*0xc0*/ UnityEngine.GameObject m_goFast_X4;
    /*0xc8*/ UnityEngine.GameObject m_goFast_X2_Particle;
    /*0xd0*/ UnityEngine.GameObject m_goFast_X3_Particle;
    /*0xd8*/ UnityEngine.GameObject m_goFast_X4_Particle;
    /*0xe0*/ UnitBattleStatusSlot[] m_UnitStatusSlotList;
    /*0xe8*/ UnityEngine.RectTransform m_rectStatusSlotParent;
    /*0xf0*/ BuffIconSpread m_BuffSpreadAlly;
    /*0xf8*/ BuffIconSpread m_BuffSpreadEnemy;
    /*0x100*/ UnityEngine.GameObject m_bottomLeftUI;
    /*0x108*/ UnityEngine.GameObject m_bottomRightUI;
    /*0x110*/ TweenPosition m_unitBattleStatusTween;
    /*0x118*/ UnityEngine.GameObject m_ReplayText;
    /*0x120*/ UnityEngine.GameObject m_goBossUIs;
    /*0x128*/ UnityEngine.UI.Slider m_BossDamageSlider;
    /*0x130*/ AtlasImage m_BossTreasureImage;
    /*0x138*/ LocalizeString m_BossTreasureCountText;
    /*0x140*/ LocalizeString m_BossDamageText;
    /*0x148*/ UnityEngine.UI.Text m_BossBuffCountText;
    /*0x150*/ UnityEngine.GameObject m_goDPSTestParent;
    /*0x158*/ UnityEngine.UI.Text m_textDPSTestLeft;
    /*0x160*/ UnityEngine.UI.Text m_textDPSTestRight;
    /*0x168*/ bool m_hideUnitBattleStatusTween;
    /*0x16c*/ UnityEngine.Vector3 m_unitBattleStatusStartPosition;
    /*0x178*/ UnityEngine.Vector3 m_unitBattleStatusDestPosition;
    /*0x184*/ UnityEngine.Vector3 m_vecStatusSlotParentOriginPOS;
    /*0x190*/ double m_dCurrentBossDamageSliderMax;
    /*0x198*/ double m_dPrevBossDamageSliderMax;
    /*0x1a0*/ DG.Tweening.Sequence m_Seq;
    /*0x1a8*/ Battle.BattleSpeedType m_eCurrentSpeedType;
    /*0x1b0*/ System.Collections.Generic.List<CharacterBase> tmp_lisUnits;
    /*0x1b8*/ int tmp_nPositionNumber;

    static /*0xe34618*/ bool <SetAutoButton>g__IsActiveAutoButton|68_0();
    /*0xe36b20*/ BattleMainWindow();
    /*0xe32efc*/ bool get_IsInitializeUIEnd();
    /*0xe32f04*/ void set_IsInitializeUIEnd(bool value);
    /*0xe32f10*/ UnityEngine.Color get_AutoInterfaceColor();
    /*0xe32f7c*/ bool get_IsUnlockSpeed3X();
    /*0xe32fd0*/ bool get_IsUnlockSpeed4X();
    /*0xe33024*/ void OnCreate();
    /*0xe33028*/ void OnEnter();
    /*0xe336c4*/ void OnStart();
    /*0xe33834*/ void OnDelete();
    /*0xe33838*/ void OnFinish();
    /*0xe3383c*/ void OnLeave();
    /*0xe33ad8*/ void OnExit();
    /*0xe33bb4*/ void InitializeInGameUI();
    /*0xe336c8*/ void SkillSlotTweenInitalize();
    /*0xe3311c*/ void InitalizeAddEventForBattle();
    /*0xe33ea0*/ void SetActiveGameSpeedButton(Battle.BattleSpeedType _eSpeedType);
    /*0xe34038*/ void SetTime(int _second);
    /*0xe3451c*/ void SetTime(float _second);
    /*0xe340f4*/ void SetReplayText();
    /*0xe34184*/ void SetAutoButton();
    /*0xe346b4*/ void SetBuffIconUI();
    /*0xe34b94*/ void SetActiveBuffIcons(bool _bActive);
    /*0xe330cc*/ void SetActiveBottomUIs(bool _bActiveLeft, bool _bActiveRight);
    /*0xe34bf4*/ void SetCoinAmount(long _amount);
    /*0xe34c38*/ void SetChastAmount(long _amount);
    /*0xe34c7c*/ void SetActiveBossUIs(bool _bActive);
    /*0xe342d0*/ void SetTextBossDamage(double _dCurrentDamage, double _dTargetDamage);
    /*0xe341c8*/ void SetTextBossBuffCount(int _nCount);
    /*0xe343f0*/ void SetBossTreasureIcon(int _step);
    /*0xe33adc*/ void OpenPause();
    /*0xe34c94*/ void SkipGame();
    /*0xe34ce8*/ void SetGameSpeedButton();
    /*0xe34e58*/ void SetToggleAuto();
    /*0xe33408*/ void StartBattle();
    /*0xe35b00*/ UnitBattleStatusSlot GetUnitStatusSlot(int _index);
    /*0xe35b3c*/ void HandleInitInGameUI();
    /*0xe35b48*/ void HandleChangeTime(float _curTime);
    /*0xe35b4c*/ void HandleInitStatusSlot();
    /*0xe35f3c*/ void StatusSlotTweenAnimation();
    /*0xe36100*/ void HandleTouchSkillOn(bool _isOn, int _index);
    /*0xe36154*/ void ShowUnitBattleStatusSlot(bool isDelay);
    /*0xe3626c*/ void HideUnitBattleStatusSlot();
    /*0xe36344*/ void HideTutorialUI(bool hideLeft, bool hideRight);
    /*0xe3639c*/ void RefreshUI_DPS();
    /*0xe36b3c*/ void <StatusSlotTweenAnimation>b__89_0();
}

class BattleMainWindow_GuildWar : GuiBase
{
    /*0x40*/ bool <IsInitializeUIEnd>k__BackingField;
    /*0x48*/ LocalizeString m_LimitTime;
    /*0x50*/ BattleGuildWarTopUI m_BattleTopUI;
    /*0x58*/ HeroSlotSpread m_HeroSlotSpread_Ally;
    /*0x60*/ HeroSlotSpread m_HeroSlotSpread_Enemy;
    /*0x68*/ GuildWarStartAnimation m_StartAnimation;
    /*0x70*/ UnityEngine.UI.Text m_CPTextAlly;
    /*0x78*/ UnityEngine.UI.Text m_CPTextEnemy;
    /*0x80*/ UnityEngine.UI.Text m_UnitCountTextAlly;
    /*0x88*/ UnityEngine.UI.Text m_UnitCountTextEnemy;
    /*0x90*/ UnityEngine.UI.Slider m_HPBarAlly;
    /*0x98*/ UnityEngine.UI.Slider m_HPBarEnemy;
    /*0xa0*/ AtlasImage m_Fast_X2;
    /*0xa8*/ AtlasImage m_Fast_X3;
    /*0xb0*/ AtlasImage m_Fast_X4;
    /*0xb8*/ UnityEngine.GameObject m_goFast_X2;
    /*0xc0*/ UnityEngine.GameObject m_goFast_X3;
    /*0xc8*/ UnityEngine.GameObject m_goFast_X4;
    /*0xd0*/ UnityEngine.GameObject m_goFast_X2_Particle;
    /*0xd8*/ UnityEngine.GameObject m_goFast_X3_Particle;
    /*0xe0*/ UnityEngine.GameObject m_goFast_X4_Particle;
    /*0xe8*/ UnityEngine.GameObject m_goBottomLeftUI;
    /*0xf0*/ UnityEngine.GameObject m_goBottomRightUI;
    /*0xf8*/ UnityEngine.GameObject m_goBottomUI;
    /*0x100*/ UnityEngine.GameObject m_goTopUI;
    /*0x108*/ TweenPosition m_unitBattleStatusTween;
    /*0x110*/ UnityEngine.GameObject m_ReplayText;
    /*0x118*/ UnityEngine.Vector3 m_unitBattleStatusStartPosition;
    /*0x124*/ UnityEngine.Vector3 m_unitBattleStatusDestPosition;
    /*0x130*/ UnityEngine.Vector3 m_vecStatusSlotParentOriginPOS;
    /*0x13c*/ Battle.BattleSpeedType m_eCurrentSpeedType;
    /*0x140*/ float m_fCurDelayUpdateHP;
    /*0x144*/ int tmp_nPositionNumber;

    /*0xe386c0*/ BattleMainWindow_GuildWar();
    /*0xe36c98*/ bool get_IsInitializeUIEnd();
    /*0xe36ca0*/ void set_IsInitializeUIEnd(bool value);
    /*0xe36cac*/ bool get_IsUnlockSpeed3X();
    /*0xe36d00*/ bool get_IsUnlockSpeed4X();
    /*0xe36d54*/ void OnCreate();
    /*0xe36d58*/ void OnEnter();
    /*0xe3704c*/ void OnStart();
    /*0xe370a0*/ void OnDelete();
    /*0xe370a4*/ void OnFinish();
    /*0xe370a8*/ void OnLeave();
    /*0xe37290*/ void OnExit();
    /*0xe3736c*/ void InitializeForSimulation();
    /*0xe37824*/ void InitializeForVerify();
    /*0xe37910*/ void InitializeInGameUI();
    /*0xe37de8*/ void StartInitHeroSlotSpread();
    /*0xe38180*/ void InitHeroSlotSpread(bool _bAlly);
    /*0xe381ac*/ void SkillSlotTweenInitalize();
    /*0xe374b8*/ void InitalizeAddEventForBattle();
    /*0xe38318*/ void Update();
    /*0xe37a50*/ void SetActiveGameSpeedButton(Battle.BattleSpeedType _eSpeedType);
    /*0xe37be8*/ void SetTime(int _second);
    /*0xe38420*/ void SetTime(float _second);
    /*0xe37ca4*/ void SetReplayText();
    /*0xe37d34*/ void SetCPText();
    /*0xe380ac*/ void SetUnitCountText(bool _bAlly, int _nCount);
    /*0xe36f90*/ void SetActiveBottomUIs(bool _bActiveLeft, bool _bActiveRight);
    /*0xe37294*/ void OpenPause();
    /*0xe384f0*/ void SkipGame();
    /*0xe38544*/ void SetGameSpeedButton();
    /*0xe377a4*/ void StartBattle();
    /*0xe386b4*/ void HandleInitInGameUI();
    /*0xe386b8*/ void HandleChangeTime(float _curTime);
    /*0xe386bc*/ void HandleInitStatusSlot();
    /*0xe36fe0*/ System.Collections.IEnumerator <OnEnter>g__CoDelayedOnEnter|39_0();
    /*0xe386c8*/ void <OnEnter>b__39_1();

    class <<OnEnter>g__CoDelayedOnEnter|39_0>d : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BattleMainWindow_GuildWar <>4__this;

        /*0xda0f34*/ <<OnEnter>g__CoDelayedOnEnter|39_0>d(int <>1__state);
        /*0xda0f60*/ void System.IDisposable.Dispose();
        /*0xda0f64*/ bool MoveNext();
        /*0xda11fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda1204*/ void System.Collections.IEnumerator.Reset();
        /*0xda1244*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BattleMainWindow_WorldBoss : BattleMainWindow
{
    /*0x1c0*/ BuffIconSpread m_BuffSpreadAlly2;
    /*0x1c8*/ UnityEngine.Transform m_BuffIconTrans;
    /*0x1d0*/ LocalizeString m_BossNameString;
    /*0x1d8*/ UnityEngine.UI.Text m_BossLevelText;
    /*0x1e0*/ UnityEngine.GameObject m_goLoadingBlackMask;

    /*0xe38ed0*/ BattleMainWindow_WorldBoss();
    /*0xe3874c*/ UnityEngine.Transform get_BuffIconTrans();
    /*0xe38754*/ void SetBuffIconUI();
    /*0xe387f0*/ void SetActiveBuffIcons(bool _bActive);
    /*0xe38838*/ void StatusSlotTweenAnimation();
    /*0xe38844*/ void SetActiveBossUIs(bool _bActive);
    /*0xe38848*/ void OnEnter();
    /*0xe388e8*/ void InitializeInGameUI();
    /*0xe38928*/ void OnButtonSkipBossStartAnimation();
    /*0xe38ab0*/ void SetActiveSkipButton(bool _bActive);
    /*0xe38988*/ void StartWorldBossUI();
    /*0xe38ad0*/ void SetBossNameLocalize();
    /*0xe38cec*/ void SetBossLevel(int _nLevel);
    /*0xe38d80*/ void SetWorldBossHPSlider(float _fCurrentHP, float _fMaxHP, float _fRatioHP);
}

class BattleGraphEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_DamageSlider;
    /*0x20*/ UnityEngine.UI.Slider m_HitSlider;
    /*0x28*/ UnityEngine.UI.Slider m_HealSlider;
    /*0x30*/ LocalizeString m_DamageText;
    /*0x38*/ LocalizeString m_HitText;
    /*0x40*/ LocalizeString m_HealText;
    /*0x48*/ HeroSlotCache m_HeroSlot;

    /*0xf8b72c*/ BattleGraphEntity();
    /*0xf8b4f4*/ void Init(Battle.BattleGraphValue _totalGraphValue, Battle.BattleGraphValue _battleGraphValue);
}

class BattleGraphEntity_GuildWar : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlotCache m_HeroSlot;
    /*0x20*/ UnityEngine.GameObject m_goArrow;
    /*0x28*/ UnityEngine.GameObject m_goMVP;
    /*0x30*/ UnityEngine.UI.Image m_BarDamage;
    /*0x38*/ UnityEngine.UI.Image m_BarHit;
    /*0x40*/ UnityEngine.UI.Image m_BarHeal;
    /*0x48*/ UnityEngine.UI.Text m_TextKills;
    /*0x50*/ Battle.BattleGraphValue m_GraphValue;
    /*0x58*/ float m_fOriginWidth;
    /*0x5c*/ bool m_bAlly;

    /*0xf8bf88*/ BattleGraphEntity_GuildWar();
    /*0xf8b734*/ void Init(bool _bMVP, bool _bAlly, double _dMaxDamage, double _dMaxHit, double _dMaxHeal, Battle.BattleGraphValue _currentValue);
    /*0xf8bb50*/ void OnClickScore();
    /*0xf8be84*/ void OnClickHeroSlot();
}

class BattleGraphWindow : UnityEngine.MonoBehaviour
{
    static string WIN_TEXT = "WIN!";
    static string LOSE_TEXT = "LOSE";
    /*0x18*/ System.Collections.Generic.List<BattleGraphEntity> m_lisGraphEntity;
    /*0x20*/ LocalizeString m_WinText;
    /*0x28*/ AtlasImage m_WinImage;
    /*0x30*/ LocalizeString m_TotalCPText;
    /*0x38*/ LocalizeString m_UserNameText;
    /*0x40*/ PlayerProfileSlot m_ProfileSlot;
    /*0x48*/ Battle.BattleGraphValue m_TotalValue;
    /*0x50*/ UnityEngine.Color WIN_COLOR;
    /*0x60*/ UnityEngine.Color LOSE_COLOR;

    /*0xe2fb8c*/ BattleGraphWindow();
    /*0xe2f6dc*/ void Init(bool _bWin, PlayerProfileInfo _playerProfileInfo, string _sTotalPower, string _sUserName, System.Collections.Generic.List<Battle.BattleGraphValue> _lisBattleGraphValue);
    /*0xe2fb34*/ void UpdateProfileSlot(PlayerProfileInfo _playerProfileInfo);
}

class BattleGraphWindow_GuildWar : UnityEngine.MonoBehaviour
{
    static string WIN_TEXT = "WIN!";
    static string LOSE_TEXT = "LOSE";
    /*0x18*/ bool m_IsAlly;
    /*0x20*/ ScrollContent_BattleGraphEntity m_Scrollcontent;
    /*0x28*/ System.Collections.Generic.List<Battle.BattleGraphValue> m_lisBattleGraphValue;
    /*0x30*/ LocalizeString m_WinText;
    /*0x38*/ AtlasImage m_WinImage;
    /*0x40*/ LocalizeString m_TotalCPText;
    /*0x48*/ LocalizeString m_UserNameText;
    /*0x50*/ GuildEmblemSlot m_GuildEmblemSlot;
    /*0x58*/ GuildLevelSlot m_GuildLevelSlot;
    /*0x60*/ UnityEngine.Color WIN_COLOR;
    /*0x70*/ UnityEngine.Color LOSE_COLOR;
    /*0x80*/ double m_dMaxValueDamage;
    /*0x88*/ double m_dMaxValueHit;
    /*0x90*/ double m_dMaxValueHeal;
    /*0x98*/ int m_nScrollContentUpdateCount;
    /*0x9c*/ bool m_bWin;

    /*0xe2fdcc*/ BattleGraphWindow_GuildWar();
    /*0xe2efd4*/ void Init(bool _bWin, string _sTotalPower, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValue);
    /*0xe2ec74*/ void InitGuildEmblem(int _nEmblemID, int _nGuildLevel, string _sGuildName);
    /*0xe2fc4c*/ void HandleBattleGraphEntityUpdate(int _nIndex, BattleGraphEntity_GuildWar _entity);

    class <>c
    {
        static /*0x0*/ BattleGraphWindow_GuildWar.<> <>9;
        static /*0x8*/ System.Predicate<Battle.BattleGraphValue> <>9__18_0;

        static /*0xda0eac*/ <>c();
        /*0xda0f0c*/ <>c();
        /*0xda0f14*/ bool <Init>b__18_0(Battle.BattleGraphValue x);
    }
}

class ScrollContent_BattleGraphEntity : ScrollContent<BattleGraphEntity_GuildWar>
{
    /*0xe18a94*/ ScrollContent_BattleGraphEntity();
}

struct GuildWarAnimInfo
{
    /*0x10*/ int unitID;
    /*0x18*/ string guildName;
    /*0x20*/ int emblemID;

    /*0xa8a86c*/ GuildWarAnimInfo(int unitID, string guildName, int emblemID);
    /*0xa8a87c*/ GuildWarAnimInfo(int unitID, PTShare.Define.SGuild guild);
}

class GuildWarStartAnimation : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_AllyUnitGraphic;
    /*0x20*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_EnemyUnitGraphic;
    /*0x28*/ Spine.Unity.SkeletonGraphic m_VSGraphic;
    /*0x30*/ UnityEngine.CanvasGroup m_AllyEmblemCanvas;
    /*0x38*/ UnityEngine.CanvasGroup m_EnemyEmblemCanvas;
    /*0x40*/ GuildEmblemSlot m_AllyEmblem;
    /*0x48*/ GuildEmblemSlot m_EnemyEmblem;
    /*0x50*/ GuildLevelSlot m_AllyGuildLevel;
    /*0x58*/ GuildLevelSlot m_EnemyGuildLevel;
    /*0x60*/ LocalizeString m_AllyGuildName;
    /*0x68*/ LocalizeString m_EnemyGuildName;
    /*0x70*/ float m_fWaitTime;
    /*0x78*/ GuildWarAnimInfo allyInfo;
    /*0x90*/ GuildWarAnimInfo enemyInfo;
    /*0xa8*/ UnityEngine.Vector2 allyEmblemOriginPosition;
    /*0xb0*/ UnityEngine.Vector2 enemyEmblemOriginPosition;
    /*0xb8*/ System.Action onFinishCallback;

    /*0x10f4cd8*/ GuildWarStartAnimation();
    /*0x10f464c*/ void Awake();
    /*0x10f46ac*/ void InitAnimation(GuildWarAnimInfo ally, GuildWarAnimInfo enemy, System.Action finishCallback);
    /*0x10f4820*/ void InitializeGuildEmblem(int emblemIndex, int level, bool isAlly);
    /*0x10f489c*/ void Release();
    /*0x10f471c*/ void StartAnimation();
    /*0x10f4a20*/ void AnimationState_Start(Spine.TrackEntry trackEntry);
    /*0x10f4b2c*/ void EndAnimation();
    /*0x10f4c8c*/ void AnimationState_End(Spine.TrackEntry trackEntry);
    /*0x10f494c*/ void InitAnim(Spine.Unity.Modules.SkeletonGraphicMultiObject skel, int unitID, string anim);
    /*0x10f49a0*/ System.Collections.IEnumerator CoCanvasAnim(bool isReverse);
    /*0x10f4ac0*/ System.Collections.IEnumerator CoUpdate();

    class <CoCanvasAnim>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool isReverse;
        /*0x28*/ GuildWarStartAnimation <>4__this;
        /*0x30*/ float <fTime>5__2;

        /*0xf74374*/ <CoCanvasAnim>d__26(int <>1__state);
        /*0xf743a0*/ void System.IDisposable.Dispose();
        /*0xf743a4*/ bool MoveNext();
        /*0xf744a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf744ac*/ void System.Collections.IEnumerator.Reset();
        /*0xf744ec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoUpdate>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarStartAnimation <>4__this;
        /*0x28*/ float <fTime>5__2;

        /*0xf744f4*/ <CoUpdate>d__27(int <>1__state);
        /*0xf74520*/ void System.IDisposable.Dispose();
        /*0xf74524*/ bool MoveNext();
        /*0xf745f0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf745f8*/ void System.Collections.IEnumerator.Reset();
        /*0xf74638*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroBattleSlot : UnityEngine.MonoBehaviour
{
    /*0xf2c32c*/ HeroBattleSlot();
    /*0xf2c324*/ void Start();
    /*0xf2c328*/ void Update();
}

class HeroStageInfoSlotBase : HeroSlot
{
    static /*0x0*/ System.Action<UnitSpawnInfo> OnClickUnitStage;
    /*0x48*/ UnityEngine.GameObject bossmark;
    /*0x50*/ TooltipData_Unit tooltipunit;

    static /*0x126eec4*/ HeroStageInfoSlotBase();
    /*0x126ee64*/ HeroStageInfoSlotBase();
    /*0x126ec18*/ void Init(UnitSpawnInfo _unitStage, System.Action<UnitSpawnInfo> _callBack);
    /*0x126edc0*/ void SetBoss(bool _isBoss);
}

class ScrollContent_StageReward : ScrollContent<ItemTableRewardSlot>
{
    /*0xe1b6a4*/ ScrollContent_StageReward();
}

class StageInformationPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleStage;
    /*0x48*/ LocalizeString m_descStage;
    /*0x50*/ UnityEngine.GameObject m_btnStart;
    /*0x58*/ UnityEngine.GameObject m_btnHardStart;
    /*0x60*/ HeroStageInfoSlotBase[] m_cHeroStageInfoSlots;
    /*0x68*/ ScrollContent_StageReward _mScrollContentStageReward;
    /*0x70*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x78*/ UnityEngine.GameObject m_EmptyDescription;
    /*0x80*/ CustomButton m_InfoBtn;
    /*0x88*/ TableData.TableData_Stage m_tStage;
    /*0x90*/ TableData.TableData_Hardstage m_tHardstage;
    /*0x98*/ System.Collections.Generic.List<Rewards> m_tRewards;
    /*0xa0*/ CompareStageUnit compareSortStageUnit;

    /*0xc91424*/ StageInformationPopup();
    /*0xc8fc8c*/ void OnCreate();
    /*0xc8fc90*/ void OnEnter();
    /*0xc8fd30*/ void OnStart();
    /*0xc8fd34*/ void OnFinish();
    /*0xc8fd38*/ void OnLeave();
    /*0xc8fd3c*/ void OnDelete();
    /*0xc8fd40*/ bool get_IsHard();
    /*0xc8fdd8*/ string get_stageDesc();
    /*0xc8fe18*/ string get_stageReward();
    /*0xc8fe58*/ int get_stageUserExp();
    /*0xc8fe98*/ string get_stageType();
    /*0xc8fed8*/ string get_stageMapPoint();
    /*0xc8ff18*/ int get_stageIndex();
    /*0xc8ff58*/ int get_stageID();
    /*0xc8ff98*/ void InitView(int _chapterid, int _stageid);
    /*0xc90b1c*/ System.Collections.IEnumerator CoScrollRefresh();
    /*0xc90690*/ void InitStageInfoLocal(string _mapPointName, string _localizeKey);
    /*0xc90558*/ void InValidStageStartButton();
    /*0xc908dc*/ void InitOtherTeams(System.Collections.Generic.List<UnitSpawnInfo> _unitStages);
    /*0xc90ccc*/ void OnClick_BattleStart();
    /*0xc90874*/ void InitRewardSetting(System.Collections.Generic.List<Rewards> _rewards);
    /*0xc90e70*/ void HandlerTableStageReward(int _index, ItemTableRewardSlot _instance);
    /*0xc90f2c*/ void OnClick_ChapterInfo();
    /*0xc913a4*/ void OnClickExit();
    /*0xc914c8*/ void <OnClick_ChapterInfo>b__43_0(ServerProtocol.ResCampaignInfo _instance);
    /*0xc91620*/ void <OnClick_ChapterInfo>b__43_1(ServerProtocol.ResHardCampaignInfo _instance);

    class <CoScrollRefresh>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StageInformationPopup <>4__this;

        /*0xcc0f38*/ <CoScrollRefresh>d__36(int <>1__state);
        /*0xcc0f64*/ void System.IDisposable.Dispose();
        /*0xcc0f68*/ bool MoveNext();
        /*0xcc1014*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc101c*/ void System.Collections.IEnumerator.Reset();
        /*0xcc105c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CompareStageUnit : System.Collections.Generic.IComparer<UnitSpawnInfo>
{
    /*0x10e5c60*/ CompareStageUnit();
    /*0x10e5c18*/ int Compare(UnitSpawnInfo x, UnitSpawnInfo y);
}

class ScrollContent_HeroBattleSlot : ScrollContent<HeroBattleSlot>
{
    /*0xe1a024*/ ScrollContent_HeroBattleSlot();
}

class ButtonLongPress : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IPointerExitHandler
{
    /*0x18*/ float holdTime;
    /*0x20*/ UnityEngine.Events.UnityEvent onLongPress;

    /*0x1336580*/ ButtonLongPress();
    /*0x1336468*/ void SetPressTime(float _fHoldTime);
    /*0x1336470*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x13364c4*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336514*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336564*/ void OnLongPress();
}

class ButtonPress : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IPointerExitHandler
{
    /*0x18*/ float longPressTime;
    /*0x20*/ UnityEngine.Events.UnityEvent onPress;
    /*0x28*/ UnityEngine.Events.UnityEvent onLongPress;
    /*0x30*/ float m_downTime;
    /*0x38*/ UnityEngine.Coroutine m_coroutine;

    /*0x1336774*/ ButtonPress();
    /*0x13365ec*/ void OnDisable();
    /*0x133664c*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336714*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336744*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x133661c*/ void StopCoroutine();
    /*0x13366a8*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ButtonPress <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xda5348*/ <CoUpdate>d__10(int <>1__state);
        /*0xda5374*/ void System.IDisposable.Dispose();
        /*0xda5378*/ bool MoveNext();
        /*0xda5464*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda546c*/ void System.Collections.IEnumerator.Reset();
        /*0xda54ac*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ButtonTapBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_RectButton;
    /*0x20*/ AtlasImage m_ImageButton;
    /*0x28*/ LocalizeString m_Text;
    /*0x30*/ UnityEngine.UI.Outline m_TextOutline;
    /*0x38*/ UnityEngine.UI.Shadow m_TextShadow;
    /*0x40*/ AtlasImage m_RedDot;
    /*0x48*/ UnityEngine.Color[] m_ColorText;
    /*0x50*/ UnityEngine.Color[] m_ColorOutline;
    /*0x58*/ UnityEngine.Color[] m_ColorShadow;
    /*0x60*/ UnityEngine.Vector2[] m_ButtonSize;
    /*0x68*/ System.Action OnPressAction;

    /*0x1336d2c*/ ButtonTapBase();
    /*0x1336800*/ void SetButton(string _name, System.Action _pressEvent, bool _active, string redDotKey);
    /*0x1336920*/ void ActionButton(bool _active);
    /*0x1336c70*/ UnityEngine.RectTransform GetRectTransform();
    /*0x1336c78*/ UnityEngine.GameObject GetReddot();
    /*0x1336c94*/ void SelectButton();
    /*0x1336d14*/ void SetRedDot(bool _enable);
    /*0x1336ac4*/ void AddReddot(string redDotKey);
}

class CampMainWindow : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ UnityEngine.UI.ScrollRect m_ScrollRect;
    /*0x48*/ float m_fResetScrollPosition;

    static /*0x1346864*/ CampMainWindow();
    static /*0x134593c*/ void add_OnExitEvent(System.Action value);
    static /*0x1345a30*/ void remove_OnExitEvent(System.Action value);
    /*0x1346850*/ CampMainWindow();
    /*0x1345b24*/ void OnCreate();
    /*0x1345b28*/ void OnEnter();
    /*0x1345b68*/ void OnStart();
    /*0x1345b6c*/ void OnFinish();
    /*0x1345b70*/ void OnLeave();
    /*0x1345b74*/ void OnDelete();
    /*0x1345bd8*/ void OnExit();
    /*0x1345c60*/ void OnClickCart();
    /*0x1345da8*/ void OnClickRankingBoard();
    /*0x1345ef0*/ void OnClickStore();
    /*0x134600c*/ void OnClickNobletavern();
    /*0x1346064*/ void OnClickResonating();
    /*0x13461ac*/ void OnClickAscension();
    /*0x13462f4*/ void OnClickLibrary();
    /*0x134643c*/ void OnClickGuild();
    /*0x134669c*/ void OnClick_House();
    /*0x1345b4c*/ void ChangeScrollVerticalPosition(float _value);

    class <>c
    {
        static /*0x0*/ CampMainWindow.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;
        static /*0x10*/ System.Action <>9__13_1;
        static /*0x18*/ System.Action <>9__13_0;
        static /*0x20*/ System.Action <>9__14_1;
        static /*0x28*/ System.Action <>9__14_0;
        static /*0x30*/ System.Action <>9__16_1;
        static /*0x38*/ System.Action <>9__16_0;
        static /*0x40*/ System.Action <>9__17_0;
        static /*0x48*/ System.Action <>9__18_0;
        static /*0x50*/ System.Action <>9__19_2;
        static /*0x58*/ System.Action <>9__19_0;
        static /*0x60*/ System.Action <>9__19_5;
        static /*0x68*/ System.Action <>9__19_3;
        static /*0x70*/ System.Action <>9__19_4;
        static /*0x78*/ System.Action<bool> <>9__19_1;
        static /*0x80*/ System.Action <>9__20_1;
        static /*0x88*/ System.Action <>9__20_0;

        static /*0xda74ec*/ <>c();
        /*0xda754c*/ <>c();
        /*0xda7554*/ void <OnClickCart>b__12_0();
        /*0xda75d8*/ void <OnClickRankingBoard>b__13_0();
        /*0xda7720*/ void <OnClickRankingBoard>b__13_1();
        /*0xda77a0*/ void <OnClickStore>b__14_0();
        /*0xda78e8*/ void <OnClickStore>b__14_1();
        /*0xda796c*/ void <OnClickResonating>b__16_0();
        /*0xda7ab4*/ void <OnClickResonating>b__16_1();
        /*0xda7b34*/ void <OnClickAscension>b__17_0();
        /*0xda7bd4*/ void <OnClickLibrary>b__18_0();
        /*0xda7c54*/ void <OnClickGuild>b__19_0();
        /*0xda7d70*/ void <OnClickGuild>b__19_2();
        /*0xda7e1c*/ void <OnClickGuild>b__19_1(bool instance);
        /*0xda806c*/ void <OnClickGuild>b__19_3();
        /*0xda81b4*/ void <OnClickGuild>b__19_5();
        /*0xda8260*/ void <OnClickGuild>b__19_4();
        /*0xda834c*/ void <OnClick_House>b__20_0();
        /*0xda8494*/ void <OnClick_House>b__20_1();
    }
}

class ChapterPoint : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_FlagSkeleton;
    /*0x20*/ LocalizeString m_ChapterName;
    /*0x28*/ UnityEngine.GameObject m_FriendParent;
    /*0x30*/ UnityEngine.GameObject m_MyPosition;
    /*0x38*/ UnityEngine.RectTransform m_NameParent;
    /*0x40*/ System.Collections.Generic.List<PlayerMapPosition> m_FriendPosition;
    /*0x48*/ int m_nChapterID;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_liPlayerInfo;
    /*0x58*/ UnityEngine.RectTransform m_rectTransform;
    /*0x60*/ UnityEngine.RectTransform m_PointRect;
    /*0x68*/ System.Collections.IEnumerator m_coroutine;
    /*0x70*/ bool <IsAnimation>k__BackingField;

    /*0xd703b4*/ ChapterPoint();
    /*0xd6f360*/ UnityEngine.RectTransform get_recttransform();
    /*0xd6f3bc*/ bool get_IsAnimation();
    /*0xd6f3c4*/ void set_IsAnimation(bool value);
    /*0xd6f3d0*/ StageDifficult get_StageDiff();
    /*0xd6f450*/ void InitalizePoint(int _chapterIndex, int _currentChapter);
    /*0xd6fba8*/ void OnClick();
    /*0xd6fe74*/ int GetChapterID();
    /*0xd6f834*/ void SetViewPosition();
    /*0xd6fe7c*/ void SetActiveMyPosition(bool _enable);
    /*0xd700fc*/ void SetActiveFriendPosition(bool _enable);
    /*0xd6f7e0*/ void SetImageScale(UnityEngine.Vector3 _scale);
    /*0xd7011c*/ void SetActiveChapterPoint(bool _enable);
    /*0xd70120*/ void SetLocalPosition(UnityEngine.Vector3 _vec);
    /*0xd7016c*/ void SetChapterID(int _id);
    /*0xd6fe9c*/ void SetPlayerPosition();
    /*0xd6f508*/ void SetSekelton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xd70174*/ System.Collections.IEnumerator CoFirstInitializeSkeleton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xd70204*/ void StartClearEvent();
    /*0xd70314*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);

    class <CoFirstInitializeSkeleton>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ Spine.Unity.SkeletonGraphic _grap;
        /*0x28*/ string _anim;
        /*0x30*/ float _timescale;
        /*0x38*/ ChapterPoint <>4__this;

        /*0xdad1d8*/ <CoFirstInitializeSkeleton>d__31(int <>1__state);
        /*0xdad204*/ void System.IDisposable.Dispose();
        /*0xdad208*/ bool MoveNext();
        /*0xdad324*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdad32c*/ void System.Collections.IEnumerator.Reset();
        /*0xdad36c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ChapterUserEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_FriendIcon;
    /*0x20*/ AtlasImage m_GuildIcon;
    /*0x28*/ AtlasImage m_SexIcon;
    /*0x30*/ LocalizeString m_Nickname;
    /*0x38*/ PlayerProfileSlot m_PlayerSlot;
    /*0x40*/ PTShare.Define.SPlayer m_PlayerInfo;
    /*0x48*/ PTShare.Define.STowerUser m_TowerUserInfo;
    /*0x50*/ PTShare.Define.SCampaignRecord m_tCampaignRecord;

    /*0xd71e08*/ ChapterUserEntity();
    /*0xd71a24*/ void InitializeUser(PTShare.Define.SPlayer _player);
    /*0xd71c04*/ void InitializeUser(PTShare.Define.STowerUser _tTowerUser);
    /*0xd71d04*/ void InitializeUser(PTShare.Define.SCampaignRecord _tCampaignRecord);
    /*0xd71b20*/ void SetViewStatus(int _gender, string _nickName, int _level, PTShare.Define.Relation _relation);
    /*0xd71e04*/ void OnClick();
    /*0xd71e10*/ void <InitializeUser>b__8_0();
    /*0xd71e30*/ void <InitializeUser>b__9_0();
    /*0xd71e50*/ void <InitializeUser>b__10_0();
}

class PlayerMapPosition : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Arrow;
    /*0x20*/ UnityEngine.GameObject m_Effect;
    /*0x28*/ UnityEngine.GameObject m_Sword;
    /*0x30*/ PlayerProfileSlot m_ProfileSlot;
    /*0x38*/ PlayerMapPosition.PlayerMapType m_eMapType;
    /*0x3c*/ PlayerType m_ePlayerType;
    /*0x40*/ int m_nChapterID;
    /*0x48*/ TableData.TableData_Stage m_StageInfo;
    /*0x50*/ PTShare.Define.SPlayer m_PlayerInfo;

    /*0x1148dcc*/ PlayerMapPosition();
    /*0x114822c*/ UserData get_curPlayerData();
    /*0x11482bc*/ StageDifficult get_StageDiff();
    /*0x114833c*/ void Init(TableData.TableData_Stage _stage);
    /*0x1148580*/ void Init(TableData.TableData_Stage _stage, PTShare.Define.SPlayer _player);
    /*0x1148678*/ void Init(int _chapterid, PTShare.Define.SPlayer _player);
    /*0x1148428*/ void InitializePosition(PlayerType _type, TableData.TableData_Stage _stage);
    /*0x114876c*/ void InitializePosition(int _chapterid);
    /*0x1148894*/ void SetActive(bool _enable);
    /*0x11488c8*/ void SetLocalScale(UnityEngine.Vector3 _scale);
    /*0x1148914*/ void SetLocalPosition(UnityEngine.Vector3 _vec);
    /*0x1148960*/ bool IsCurrentStage();
    /*0x1148a40*/ void CallbackOnClickProfile();

    enum PlayerMapType
    {
        NONE = 0,
        STAGE = 1,
        CHAPTER = 2,
        End = 3,
    }
}

class StagePoint : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_StageSkeleton;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_FlagSkeleton;
    /*0x28*/ UnityEngine.GameObject m_StageNameParent;
    /*0x30*/ UnityEngine.UI.Text m_StageName;
    /*0x38*/ PlayerMapPosition m_MyPosition;
    /*0x40*/ UnityEngine.GameObject m_FriendParent;
    /*0x48*/ System.Collections.Generic.List<PlayerMapPosition> m_FriendPosition;
    /*0x50*/ Battle.StageBattleType m_eStageType;
    /*0x58*/ TableData.TableData_Stage m_StageInfo;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_liPlayerInfo;
    /*0x68*/ bool m_bIsClear;
    /*0x69*/ bool m_bIsBoss;
    /*0x6a*/ bool m_bIsStory;
    /*0x6c*/ int m_nCurrentStage;
    /*0x70*/ UnityEngine.RectTransform m_PointRect;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_ParentSkeleton;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;
    /*0x88*/ bool <IsAnimation>k__BackingField;

    /*0xc947e4*/ StagePoint();
    /*0xc9381c*/ bool get_IsAnimation();
    /*0xc93824*/ void set_IsAnimation(bool value);
    /*0xc93830*/ StageDifficult get_StageDiff();
    /*0xc938b0*/ void InitalizePoint(int _chapterIndex, int _stageIndex, int _maxStage, int _currentStage);
    /*0xc9416c*/ void OnClick();
    /*0xc93f7c*/ void SetViewPosition();
    /*0xc942d0*/ void SetActiveMyPosition(bool _enable);
    /*0xc93f60*/ void SetImageScale(UnityEngine.Vector3 _scale);
    /*0xc944c4*/ void SetActiveStagePoint(bool _enable);
    /*0xc94504*/ void StartClearEvent();
    /*0xc94614*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xc946b4*/ void SetLocalPosition(UnityEngine.Vector3 _vec);
    /*0xc94700*/ void SetLocalScale(float _offset);
    /*0xc942f0*/ void SetPlayerPosition();
    /*0xc93bf8*/ void SetSekelton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xc94754*/ System.Collections.IEnumerator CoFirstInitializeSkeleton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xc94214*/ bool IsCurrentStage();

    class <CoFirstInitializeSkeleton>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ Spine.Unity.SkeletonGraphic _grap;
        /*0x28*/ string _anim;
        /*0x30*/ float _timescale;
        /*0x38*/ StagePoint <>4__this;

        /*0xcc1f28*/ <CoFirstInitializeSkeleton>d__35(int <>1__state);
        /*0xcc1f54*/ void System.IDisposable.Dispose();
        /*0xcc1f58*/ bool MoveNext();
        /*0xcc2074*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc207c*/ void System.Collections.IEnumerator.Reset();
        /*0xcc20bc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CampainMainWindow : GuiBase
{
    static /*0x0*/ System.Action OnAnimationEndEvent;
    /*0x40*/ UnityEngine.UI.Image m_ImageBackground;
    /*0x48*/ UnityEngine.UI.Image m_ImageBottomground;
    /*0x50*/ PathMaker m_cPathBackground;
    /*0x58*/ UnityEngine.RectTransform IdleSpawnTrans;
    /*0x60*/ System.Collections.Generic.List<PathData> m_liPathData;
    /*0x68*/ System.Collections.Generic.List<TableData.TableData_Stage> m_liStageData;
    /*0x70*/ System.Collections.Generic.List<StagePoint> m_liStagePointList;
    /*0x78*/ int m_nCurrentMapIndex;
    /*0x7c*/ int m_nCurrentStage;
    /*0x80*/ bool m_bIsPlayingAnimation;
    /*0x84*/ int _nStartCount;
    /*0x88*/ int _nEndCount;

    static /*0x153d894*/ CampainMainWindow();
    static /*0x153c214*/ void add_OnAnimationEndEvent(System.Action value);
    static /*0x153c308*/ void remove_OnAnimationEndEvent(System.Action value);
    /*0x153d81c*/ CampainMainWindow();
    /*0x153c3fc*/ void OnCreate();
    /*0x153c730*/ void OnEnter();
    /*0x153cabc*/ void OnStart();
    /*0x153cac0*/ void OnFinish();
    /*0x153cac4*/ void OnLeave();
    /*0x153d110*/ void OnDelete();
    /*0x153d174*/ void OnExit();
    /*0x153d1c8*/ void InitalizeCampain();
    /*0x153d2e8*/ void SetCurrentMap(int _mapIndex);
    /*0x153ccb0*/ void SetStagePoint();
    /*0x153d2f0*/ void ChangeCurrentMap(int _mapIndex);
    /*0x153c4a4*/ void SetMapSprite(int _mapIndex);
    /*0x153d3c4*/ void SetCurrentStage(int _stage);
    /*0x153d3cc*/ void HandlerUpdateCampaign();
    /*0x153d3d8*/ void HandlerUpdateFriendPosition();
    /*0x153d498*/ void StartDirectingProcess();
    /*0x153d690*/ System.Collections.IEnumerator CoDirecting(int _nBeforeStage);
    /*0x153d70c*/ System.Collections.IEnumerator CoStageAnimation(int _beforeStage, int _nextStage);
    /*0x153d78c*/ UnityEngine.Vector2 GetAnchoredPosition();
    /*0x153d7f0*/ float GetAnchoredPositionY();
    /*0x153d898*/ void <OnEnter>b__16_0();
    /*0x153d8bc*/ void <OnEnter>b__16_1();

    class <>c
    {
        static /*0x0*/ CampainMainWindow.<> <>9;
        static /*0x8*/ System.Func<bool> <>9__31_0;

        static /*0xda8514*/ <>c();
        /*0xda8574*/ <>c();
        /*0xda857c*/ bool <CoDirecting>b__31_0();
    }

    class <CoDirecting>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CampainMainWindow <>4__this;
        /*0x28*/ int _nBeforeStage;

        /*0xda86ac*/ <CoDirecting>d__31(int <>1__state);
        /*0xda86d8*/ void System.IDisposable.Dispose();
        /*0xda86dc*/ bool MoveNext();
        /*0xda894c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda8954*/ void System.Collections.IEnumerator.Reset();
        /*0xda8994*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ CampainMainWindow <>4__this;
        /*0x18*/ int _beforeStage;

        /*0xda8620*/ <>c__DisplayClass32_0();
        /*0xda8628*/ bool <CoStageAnimation>b__0();
    }

    class <CoStageAnimation>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CampainMainWindow <>4__this;
        /*0x28*/ int _beforeStage;
        /*0x2c*/ int _nextStage;

        /*0xda899c*/ <CoStageAnimation>d__32(int <>1__state);
        /*0xda89c8*/ void System.IDisposable.Dispose();
        /*0xda89cc*/ bool MoveNext();
        /*0xda8ba0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda8ba8*/ void System.Collections.IEnumerator.Reset();
        /*0xda8be8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopBanner : UnityEngine.MonoBehaviour
{
    /*0x18*/ DefineCashShop.CashShopTabType m_currTab;
    /*0x20*/ UnityEngine.GameObject m_currBanner;
    /*0x28*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x15408d8*/ CashShopBanner();
    /*0x153fc1c*/ void OnEnable();
    /*0x153fcd8*/ void OnDisable();
    /*0x153fd08*/ void InitBanner(DefineCashShop.CashShopTabType tab);
    /*0x153fdac*/ void UpdateBanner();
    /*0x1540004*/ void ShowBanner(string key);
    /*0x1540238*/ void DestroyBanner();
    /*0x15402e0*/ void UpdateBannerResetTime();
    /*0x154037c*/ void UpdateBannerResetTimeByBeginner();
    /*0x15405b0*/ void UpdateBannerResetTimeByTab();
    /*0x153fc6c*/ System.Collections.IEnumerator CoUpdateTimer();

    class <CoUpdateTimer>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopBanner <>4__this;

        /*0xda8d94*/ <CoUpdateTimer>d__12(int <>1__state);
        /*0xda8dc0*/ void System.IDisposable.Dispose();
        /*0xda8dc4*/ bool MoveNext();
        /*0xda8e2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda8e34*/ void System.Collections.IEnumerator.Reset();
        /*0xda8e74*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopGrowBanner : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Button m_button;
    /*0x20*/ LocalizeString m_priceText;
    /*0x28*/ UnityEngine.GameObject m_descParent;
    /*0x30*/ LocalizeString m_descText;

    /*0x1541d10*/ CashShopGrowBanner();
    /*0x15411b8*/ void OnEnable();
    /*0x15411e8*/ void OnDisable();
    /*0x15411bc*/ void InitBanner();
    /*0x15417a8*/ void UpdateBanner();
    /*0x15417ac*/ void UpdateButton();
    /*0x15411ec*/ void SetPrice();
    /*0x1541498*/ void SetDesc();
    /*0x154199c*/ void OnClickGrowPassPurchase();
    /*0x1541b9c*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);

    class <>c
    {
        static /*0x0*/ CashShopGrowBanner.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Cashshopquest> <>9__9_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Cashshopquest> <>9__10_0;
        static /*0x18*/ System.Predicate<TableData.TableData_Cashshopquest> <>9__11_0;

        static /*0xda8e7c*/ <>c();
        /*0xda8edc*/ <>c();
        /*0xda8ee4*/ bool <SetPrice>b__9_0(TableData.TableData_Cashshopquest data);
        /*0xda8f58*/ bool <SetDesc>b__10_0(TableData.TableData_Cashshopquest data);
        /*0xda8fcc*/ bool <OnClickGrowPassPurchase>b__11_0(TableData.TableData_Cashshopquest data);
    }
}

class CashShopIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage[] m_atlasImages;
    /*0x20*/ LocalizeString[] m_texts;
    /*0x28*/ UnityEngine.GameObject[] m_unSelectDisabled;
    /*0x30*/ UnityEngine.Color m_imageSelectColor;
    /*0x40*/ UnityEngine.Color m_textSelectColor;
    /*0x50*/ UnityEngine.Color m_unSelectColor;

    /*0x1542480*/ CashShopIcon();
    /*0x1542248*/ void Select();
    /*0x1542440*/ void UnSelect();
    /*0x1542288*/ void SetAtlasColor(UnityEngine.Color color);
    /*0x1542328*/ void SetTextColor(UnityEngine.Color color);
    /*0x15423c4*/ void SetObject(bool enable);
}

class CashShopPackageItem : UnityEngine.MonoBehaviour
{
    static int PRODUCT_MAX_COUNT = 3;
    /*0x18*/ AtlasImage m_backGroundImage;
    /*0x20*/ AtlasImage m_mainImage;
    /*0x28*/ AtlasImage m_badgeImage;
    /*0x30*/ AtlasImage m_bonusImage;
    /*0x38*/ LocalizeString m_badgeText;
    /*0x40*/ LocalizeString m_bonusAmountText;
    /*0x48*/ LocalizeString m_priceText;
    /*0x50*/ UnityEngine.UI.Text m_priceText2;
    /*0x58*/ LocalizeString m_purchaseCountText;
    /*0x60*/ LocalizeString m_nameText;
    /*0x68*/ LocalizeString m_descText;
    /*0x70*/ LocalizeString m_restTimeText;
    /*0x78*/ UnityEngine.GameObject m_soldOutObject;
    /*0x80*/ UnityEngine.GameObject m_resetTimeObject;
    /*0x88*/ UnityEngine.GameObject m_productListParent;
    /*0x90*/ UnityEngine.GameObject m_reddot;
    /*0x98*/ UnityEngine.GameObject m_dontOwnerObject;
    /*0xa0*/ UnityEngine.Coroutine m_resetTimer;
    /*0xa8*/ System.Collections.Generic.List<Rewards> m_productRewardDataList;
    /*0xb0*/ System.Collections.Generic.List<ItemTableRewardSlot> m_productItemObjectList;
    /*0xb8*/ DefineCashShop.CashShopPackageData m_cashShopPackageData;
    /*0xc0*/ DefineCashShop.CashShopTabType m_tabType;
    /*0xc4*/ DefineCashShop.CashShopDrawType m_drawType;

    /*0x154bf94*/ CashShopPackageItem();
    /*0x1548b50*/ void OnDisable();
    /*0x1548b80*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x15495b4*/ void SetName(string name);
    /*0x154a7c0*/ void SetDesc(string desc);
    /*0x154a984*/ void SetDontOwnerHero();
    /*0x154ab6c*/ void SetColor();
    /*0x1548f80*/ void SetBadge(string badgeType, int badgePercent);
    /*0x15493ac*/ void SetBonus(string bonusPackage);
    /*0x1548eac*/ void SetBackGround();
    /*0x154b6d4*/ void SetBackGroundWidth();
    /*0x154b3d0*/ void SetBackGroundHeight();
    /*0x1549830*/ void SetPurchaseCount();
    /*0x154b880*/ void SetPrice();
    /*0x154bac4*/ void SetPrice2();
    /*0x15499d4*/ void SetResetTime();
    /*0x1549de4*/ void SetReddot();
    /*0x154bd9c*/ void SetSoldOut();
    /*0x1548d1c*/ void SetLocation();
    /*0x1549ea4*/ void ParserProduct();
    /*0x154a098*/ void ShowProductItems();
    /*0x154b278*/ long GetBonusStarValue();
    /*0x154be50*/ void OnClickPurchase();
    /*0x154bd30*/ System.Collections.IEnumerator CoUpdateResetTime();
    /*0x154c058*/ bool <SetColor>b__29_0(TableData.TableData_Cashshophero data);
    /*0x154c088*/ bool <SetColor>b__29_1(TableData.TableData_Cashshopskin data);
    /*0x154c0b8*/ bool <SetBackGroundHeight>b__34_0(TableData.TableData_Cashshopsubscription data);

    class <>c__DisplayClass43_0
    {
        /*0x10*/ int heroID;
        /*0x18*/ CashShopPackageItem <>4__this;

        /*0xdaba98*/ <>c__DisplayClass43_0();
        /*0xdabaa0*/ void <ShowProductItems>b__0();
    }

    class <CoUpdateResetTime>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopPackageItem <>4__this;
        /*0x28*/ System.TimeSpan <timeSpan>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;

        /*0xdabb2c*/ <CoUpdateResetTime>d__46(int <>1__state);
        /*0xdabb58*/ void System.IDisposable.Dispose();
        /*0xdabb5c*/ bool MoveNext();
        /*0xdac01c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdac024*/ void System.Collections.IEnumerator.Reset();
        /*0xdac064*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopPackageItemGrowth : CashShopPackageItem
{
    /*0xc8*/ UnityEngine.UI.Button m_button;
    /*0xd0*/ LocalizeString m_scoreText;
    /*0xd8*/ DefineEvent.TriggerData m_triggerData;
    /*0xe0*/ PTShare.Define.SGrowthRow m_growthRow;
    /*0xe8*/ int m_destScore;

    /*0x154c8c4*/ CashShopPackageItemGrowth();
    /*0x154c0e8*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x154c154*/ void SetData(DefineCashShop.CashShopPackageData shopPackage);
    /*0x154c468*/ void UpdateButton();
    /*0x154c2f4*/ void SetScore();
    /*0x154c59c*/ bool IsClear();
    /*0x154c5d0*/ void SetBackGroundWidth();
    /*0x154c680*/ void SetSoldOut();
    /*0x154c71c*/ void SetDesc(string desc);
    /*0x154c808*/ void OnClickPurchase();
    /*0x154c8c8*/ void <OnClickPurchase>b__13_0();

    class <>c__DisplayClass6_0
    {
        /*0x10*/ DefineCashShop.CashShopPackageData shopPackage;

        /*0xdac06c*/ <>c__DisplayClass6_0();
        /*0xdac074*/ bool <SetData>b__0(PTShare.Define.SGrowthRow data);
    }
}

class CashShopPackageItemSkin : CashShopPackageItem
{
    /*0xc8*/ UnityEngine.UI.Button m_buyButton;

    /*0x154ccc4*/ CashShopPackageItemSkin();
    /*0x154c8fc*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x154c900*/ void SetDesc(string desc);
    /*0x154caec*/ void SetEnableBuyButton(bool enable);
    /*0x154cb90*/ void OnClickLookSkin();
}

class CashShopPackageItemSubScription : CashShopPackageItem
{
    /*0xc8*/ AtlasImage[] m_directRewardImages;
    /*0xd0*/ LocalizeString[] m_directRewardTexts;
    /*0xd8*/ AtlasImage[] m_dailyRewardImages;
    /*0xe0*/ LocalizeString[] m_dailyRewardTexts;
    /*0xe8*/ AtlasImage[] m_accumulateRewardImages;
    /*0xf0*/ LocalizeString[] m_accumulateRewardTexts;
    /*0xf8*/ UnityEngine.GameObject m_soldOutDisableObject;
    /*0x100*/ UnityEngine.GameObject m_vipObject;
    /*0x108*/ LocalizeString m_subscriptLeftTimeText;
    /*0x110*/ System.Collections.Generic.List<long> m_accCurrencys;

    /*0x154de8c*/ CashShopPackageItemSubScription();
    /*0x154ccc8*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x154cd6c*/ void SetDirectReward();
    /*0x154d2ec*/ void SetDailyReward();
    /*0x154d96c*/ void SetSoldOut();
    /*0x154d9dc*/ void SetPrice();
    /*0x154dc20*/ void SetPrice2();
    /*0x154d834*/ void SetLeftTimeText();
    /*0x154d758*/ void SetAccReward();
}

class CashShopPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ CashShopBanner m_banner;
    /*0x50*/ ScrollContent_CashShopPackageItem m_scrollContentVertical1N;
    /*0x58*/ ScrollContent_CashShopPackageItem m_scrollContentVertical1HN;
    /*0x60*/ ScrollContent_CashShopPackageItem m_scrollContentVertical1N_Growth;
    /*0x68*/ ScrollContent_CashShopPackageItem m_scrollContentVertical3N;
    /*0x70*/ CashShopPackageItem m_cashShop3NPrefab;
    /*0x78*/ CashShopPackageItem m_cashShop3N_NewPrefab;
    /*0x80*/ CashShopPackageItem m_cashShop3N_BeginnerPrefab;
    /*0x88*/ CashShopPackageItem m_cashShop1HNPrefab;
    /*0x90*/ CashShopPackageItem m_cashShop1HN_NewPrefab;
    /*0x98*/ UnityEngine.GameObject m_cashShopSubjectParent;
    /*0xa0*/ CashShopPackageItem[] m_cashShopSubjects;
    /*0xa8*/ UnityEngine.GameObject[] m_cashShopSubCategorys;
    /*0xb0*/ CashShopIcon[] m_cashShopMainCategoryIcons;
    /*0xb8*/ CashShopIcon[] m_cashShopIcons;
    /*0xc0*/ ScrollContent_CashShopPackageItem m_currScrollContent;
    /*0xc8*/ DefineCashShop.CashShopDrawType m_drawType;
    /*0xcc*/ DefineCashShop.CashShopCategoryType m_currCategoryType;
    /*0xd0*/ DefineCashShop.CashShopTabType m_currTab;
    /*0xd8*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> m_currPackageData;
    /*0xe0*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0xe8*/ UnityEngine.GameObject m_vipObject;

    /*0x15512b8*/ CashShopPopup();
    /*0x154df00*/ void OnCreate();
    /*0x154df04*/ void OnEnter();
    /*0x154df08*/ void OnStart();
    /*0x154df0c*/ void OnFinish();
    /*0x154df10*/ void OnLeave();
    /*0x154e294*/ void OnDelete();
    /*0x154e298*/ void OnExit();
    /*0x154e3a0*/ void InitializePopup(DefineCashShop.CashShopCategoryType select, DefineCashShop.CashShopTabType tabType);
    /*0x154e780*/ void SetPlayerCurrency();
    /*0x154e8dc*/ void UpdatePage();
    /*0x154e980*/ void UpdateTabBtn();
    /*0x154eb58*/ void UpdateCurrentPackageData();
    /*0x1550a20*/ void UpdateGrowthPackageData();
    /*0x1550b14*/ PTShare.Define.SGoods GetPurchaseData(string packageId);
    /*0x15500f8*/ void UpdateScrollContent();
    /*0x154ffac*/ void UpdateCategoryUI();
    /*0x154ff8c*/ void UpdateBanner();
    /*0x154fd5c*/ void UpdateDrawType();
    /*0x1550dc8*/ void OnClickShowVipInfo();
    /*0x1550e90*/ void OnClickShowRefund();
    /*0x1550f04*/ void OnClickCategoryChange(int categoryType);
    /*0x1550f5c*/ void OnClickTabChange(int tabType);
    /*0x155089c*/ void TabChange(DefineCashShop.CashShopTabType tabType);
    /*0x1550f08*/ void CategoryChange(DefineCashShop.CashShopCategoryType categoryType);
    /*0x154e758*/ void CategoryChange(DefineCashShop.CashShopCategoryType categoryType, DefineCashShop.CashShopTabType cashShopTabType);
    /*0x1550c9c*/ void BindEventCurrentContent();
    /*0x154e0c8*/ void RemoveScrollContentEvent();
    /*0x1550f60*/ void HandleScrollContent(int index, CashShopPackageItem obj);
    /*0x1550ff0*/ void HandleItemPurchaseSuccess(string packageId);
    /*0x15512b4*/ void HandleRefreshShop();
    /*0x1550c20*/ System.Collections.IEnumerator CoShopRefresh(float time);
    /*0x1551344*/ void <OnExit>b__29_0();
    /*0x155134c*/ void <UpdateGrowthPackageData>b__35_0(TableData.TableData_Cashshopquestreward f);

    class <>c__DisplayClass30_0
    {
        /*0x10*/ CashShopPopup <>4__this;
        /*0x18*/ DefineCashShop.CashShopCategoryType select;
        /*0x1c*/ DefineCashShop.CashShopTabType tabType;

        /*0xdac0a4*/ <>c__DisplayClass30_0();
        /*0xdac0ac*/ void <InitializePopup>b__0();
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ CashShopPopup <>4__this;
        /*0x18*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> m_removeList;

        /*0xdac0d0*/ <>c__DisplayClass34_0();
        /*0xdac0d8*/ void <UpdateCurrentPackageData>b__1(TableData.TableData_Cashshopdaily f);
        /*0xdac180*/ void <UpdateCurrentPackageData>b__2(TableData.TableData_Cashshopweekly f);
        /*0xdac228*/ void <UpdateCurrentPackageData>b__3(TableData.TableData_Cashshopmonthly f);
        /*0xdac2d0*/ void <UpdateCurrentPackageData>b__4(TableData.TableData_Cashshopstar f);
        /*0xdac378*/ void <UpdateCurrentPackageData>b__5(TableData.TableData_Cashshoplimit f);
        /*0xdac420*/ void <UpdateCurrentPackageData>b__6(TableData.TableData_Cashshopsubscription f);
        /*0xdac4c8*/ void <UpdateCurrentPackageData>b__7(TableData.TableData_Cashshophero f);
        /*0xdac570*/ void <UpdateCurrentPackageData>b__8(TableData.TableData_Cashshopbeginner f);
        /*0xdac618*/ void <UpdateCurrentPackageData>b__9(TableData.TableData_Cashshopskinpiece f);
        /*0xdac6c0*/ void <UpdateCurrentPackageData>b__10(TableData.TableData_Cashshopskin f);
        /*0xdac768*/ void <UpdateCurrentPackageData>b__0(DefineCashShop.CashShopPackageData data);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ string packageId;

        /*0xdac868*/ <>c__DisplayClass36_0();
        /*0xdac870*/ bool <GetPurchaseData>b__0(PTShare.Define.SGoods packet);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ CashShopPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<TableData.TableData_Cashshopsubscription> <>9__0;

        /*0xdac89c*/ <>c__DisplayClass37_0();
        /*0xdac8a4*/ bool <UpdateScrollContent>b__0(TableData.TableData_Cashshopsubscription data);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ DefineCashShop.CashShopTabType tabType;
        /*0x18*/ CashShopPopup <>4__this;

        /*0xdac93c*/ <>c__DisplayClass45_0();
        /*0xdac944*/ void <TabChange>b__0();
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ string packageId;

        /*0xdac9f0*/ <>c__DisplayClass51_0();
        /*0xdac9f8*/ bool <HandleItemPurchaseSuccess>b__0(DefineCashShop.CashShopPackageData data);
        /*0xdaca1c*/ bool <HandleItemPurchaseSuccess>b__1(DefineCashShop.CashShopPackageData data);
    }

    class <CoShopRefresh>d__53 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ CashShopPopup <>4__this;

        /*0xdaca40*/ <CoShopRefresh>d__53(int <>1__state);
        /*0xdaca6c*/ void System.IDisposable.Dispose();
        /*0xdaca70*/ bool MoveNext();
        /*0xdacb30*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdacb38*/ void System.Collections.IEnumerator.Reset();
        /*0xdacb78*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopPurchasePopup : GuiBase
{
    /*0x40*/ ScrollContent_StageReward m_scrollContent;
    /*0x48*/ LocalizeString m_popupNameText;
    /*0x50*/ LocalizeString m_popupSubDesc;
    /*0x58*/ LocalizeString m_purchaseCountText;
    /*0x60*/ UnityEngine.RectTransform m_scrollRect;
    /*0x68*/ UnityEngine.Vector2 m_defaultSize;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardDataList;
    /*0x78*/ DefineCashShop.CashShopPackageData m_cashShopPackageData;
    /*0x80*/ DefineCashShop.CashShopTabType m_currTab;

    /*0xd68fd8*/ CashShopPurchasePopup();
    /*0xd67228*/ void OnCreate();
    /*0xd6722c*/ void OnDelete();
    /*0xd67230*/ void OnEnter();
    /*0xd6729c*/ void OnFinish();
    /*0xd672a0*/ void OnLeave();
    /*0xd67374*/ void OnStart();
    /*0xd67378*/ void OnExit();
    /*0xd673f4*/ void InitializePopup(DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopPackageData cashShopPackageData, System.Collections.Generic.List<Rewards> rewardDataList);
    /*0xd676b0*/ void SetLocalizeName();
    /*0xd67dc4*/ void SetSubDesc();
    /*0xd67f64*/ void SetPurchaseCount();
    /*0xd68400*/ void SetRectSize();
    /*0xd6827c*/ bool AddVipPointReward();
    /*0xd684cc*/ void SuccessPurchase(ServerProtocol.ResCashShopPurchase resData);
    /*0xd684ec*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0xd687a0*/ void OnPurchaseRequest();
    /*0xd68ae4*/ void Purchase(int billingType);
    /*0xd68ddc*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0xd69010*/ void <OnPurchaseRequest>b__24_0(ServerProtocol.ResCashShopPurchase _resData);
    /*0xd690e0*/ void <OnPurchaseRequest>b__24_1(ServerProtocol.ResCashShopCheck _response);
    /*0xd6914c*/ void <OnPurchaseRequest>b__24_2(int _failed, string args);

    class <>c__DisplayClass25_0
    {
        /*0x10*/ CashShopPurchasePopup <>4__this;
        /*0x18*/ int billingType;
        /*0x20*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__2;

        /*0xdacb80*/ <>c__DisplayClass25_0();
        /*0xdacb88*/ void <Purchase>b__0(ServerProtocol.ResCashShopPurchase _resData);
        /*0xdacbd0*/ void <Purchase>b__1(UnityEngine.Purchasing.Product result);
        /*0xdace10*/ void <Purchase>b__2(ServerProtocol.ResCashShopPurchase res);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ CashShopPurchasePopup <>4__this;
        /*0x18*/ int index;

        /*0xdace48*/ <>c__DisplayClass26_0();
        /*0xdace50*/ void <HandleScrollContent>b__0();
    }
}

class CashShopSelectPurchasePopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardSelectSlot m_scrollContent;
    /*0x48*/ SelectRewardWindow m_selectWindow;
    /*0x50*/ UnityEngine.UI.Button m_confirmButton;
    /*0x58*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> m_dataList;
    /*0x60*/ System.Collections.Generic.List<int> m_confirmList;
    /*0x68*/ System.Collections.Generic.List<int> m_fixList;
    /*0x70*/ int m_currGroup;
    /*0x74*/ int m_vipPoint;
    /*0x78*/ string m_packageId;
    /*0x80*/ PTShare.Define.SInstant m_sInstant;

    /*0xd6ae24*/ CashShopSelectPurchasePopup();
    /*0xd6978c*/ void OnCreate();
    /*0xd69790*/ void OnDelete();
    /*0xd69794*/ void OnEnter();
    /*0xd69798*/ void OnFinish();
    /*0xd6979c*/ void OnLeave();
    /*0xd69874*/ void OnStart();
    /*0xd69878*/ void OnExit();
    /*0xd69880*/ bool IsAllSelect();
    /*0xd69928*/ System.Collections.Generic.List<Rewards> FindReward(int group, int index);
    /*0xd69ab8*/ string FindProduct(int group, int index);
    /*0xd69bcc*/ void InitPopup(PTShare.Define.SInstant sInstant, int vipPoint);
    /*0xd6a33c*/ void InitPopup(string packageId, int vipPoint);
    /*0xd69e38*/ void InitData(string packageId);
    /*0xd6a230*/ void UpdatePopup();
    /*0xd6a3a8*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0xd69d5c*/ void BindEvent();
    /*0xd697a0*/ void RemoveEvent();
    /*0xd6a654*/ void HandleScrollContent(int index, RewardSelectSlot obj);
    /*0xd6a870*/ void HandleOnClick(int index);
    /*0xd6ab14*/ void HandleSelect(int index);
    /*0xd6aba4*/ void OnClickPurchase();

    class <>c__DisplayClass20_0
    {
        /*0x10*/ PTShare.Define.SInstant sInstant;

        /*0xdacf30*/ <>c__DisplayClass20_0();
        /*0xdacf38*/ bool <InitPopup>b__0(TableData.TableData_Cashshopinstant data);
    }
}

class CashShopVIPInfo : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_slider;
    /*0x20*/ LocalizeString m_vipPointSliderText;
    /*0x28*/ LocalizeString m_vipPointInfoText;
    /*0x30*/ UnityEngine.GameObject m_reddot;

    /*0xd6cb0c*/ CashShopVIPInfo();
    /*0xd6c298*/ void OnEnable();
    /*0xd6c4e8*/ void OnDisable();
    /*0xd6c474*/ void UpdateVip();
    /*0xd6c640*/ void SetSliderUI(int vipPoint);
    /*0xd6c880*/ void SetTextUI(int vipPoint);
    /*0xd6ca2c*/ void UpdateVIP();
    /*0xd6cb04*/ void HandleChangeUserInfo();
    /*0xd6cb08*/ void HandleReceiveReward();
}

class RefundPopup : GuiBase
{
    /*0x11c8718*/ RefundPopup();
    /*0x11c8468*/ void OnCreate();
    /*0x11c846c*/ void OnDelete();
    /*0x11c8470*/ void OnEnter();
    /*0x11c84dc*/ void OnFinish();
    /*0x11c84e0*/ void OnLeave();
    /*0x11c84e4*/ void OnStart();
    /*0x11c84e8*/ void OnExit();
    /*0x11c8564*/ void OnClickOpenTermsOfService();
    /*0x11c867c*/ void OnClickOpenPrivacyPolicy();
    /*0x11c8600*/ void OpenURL(string url);
}

class RewardSelectSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemInfoSlot;
    /*0x20*/ UnityEngine.GameObject m_emptySlot;
    /*0x28*/ int m_index;
    /*0x2c*/ bool m_isEmpty;
    /*0x30*/ System.Action<int> m_click;

    /*0x11aa4d8*/ RewardSelectSlot();
    /*0x11aa0b4*/ bool IsEmpty();
    /*0x11aa0bc*/ void InitSlot(int index, System.Action<int> click);
    /*0x11aa1d0*/ void InitSlotVip(long vipAmount);
    /*0x11aa2dc*/ void InitSlot(int index, Rewards reward, System.Action<int> click);
    /*0x11aa478*/ void OnClick();
}

class ScrollContent_RewardSelectSlot : ScrollContent<RewardSelectSlot>
{
    /*0xe1b53c*/ ScrollContent_RewardSelectSlot();
}

class ScrollContent_VipInfoEntity : ScrollContent<VipInfoEntity>
{
    /*0xe1badc*/ ScrollContent_VipInfoEntity();
}

class SelectRewardWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x20*/ int m_index;
    /*0x28*/ System.Collections.Generic.List<Rewards> m_rewards;
    /*0x30*/ System.Action<int> m_callBack;

    /*0xe2409c*/ SelectRewardWindow();
    /*0xe23d20*/ void OnDisable();
    /*0xe23df8*/ void InitWindow(int index, System.Collections.Generic.List<Rewards> rewardList, System.Action<int> onCallBack);
    /*0xe23e7c*/ void BindEvent();
    /*0xe23d24*/ void RemoveEvent();
    /*0xe23f58*/ void HandleScrollContent(int index, ItemInfoSlot obj);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ SelectRewardWindow <>4__this;
        /*0x18*/ int index;

        /*0xcbdf60*/ <>c__DisplayClass8_0();
        /*0xcbdf68*/ void <HandleScrollContent>b__0();
    }
}

class VipInfoEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_newImage;
    /*0x20*/ AtlasImage m_upImage;
    /*0x28*/ LocalizeString m_text;
    /*0x30*/ int m_type;

    /*0x10d4658*/ VipInfoEntity();
    /*0x10d44fc*/ void InitEntity(int type, string str);
}

class VipRewardPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ LocalizeString m_vipTitleText;
    /*0x50*/ LocalizeString m_vipLvText;
    /*0x58*/ LocalizeString m_vipDescText;
    /*0x60*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x68*/ ScrollContent_VipInfoEntity m_vipScrollContent;
    /*0x70*/ UnityEngine.GameObject m_prevBtnObject;
    /*0x78*/ UnityEngine.GameObject m_nextBtnObject;
    /*0x80*/ UnityEngine.UI.Button m_rewardButton;
    /*0x88*/ UnityEngine.GameObject m_rewardReddot;
    /*0x90*/ UnityEngine.GameObject m_unlockObject;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_unlockTitle;
    /*0xa0*/ ParticleBase m_unlockEffect;
    /*0xa8*/ System.Collections.Generic.List<Rewards> m_rewardDataList;
    /*0xb0*/ System.Collections.Generic.List<System.ValueTuple<int, string>> m_infoList;
    /*0xb8*/ UnityEngine.Coroutine m_coroutine;
    /*0xc0*/ int m_selectLv;

    /*0x10d7100*/ VipRewardPopup();
    /*0x10d4660*/ void OnCreate();
    /*0x10d4664*/ void OnDelete();
    /*0x10d4668*/ void OnEnter();
    /*0x10d466c*/ void OnFinish();
    /*0x10d4670*/ void OnLeave();
    /*0x10d47e8*/ void OnStart();
    /*0x10d47ec*/ void OnExit();
    /*0x10d4868*/ void InitializeVip(bool showUnlock);
    /*0x10d4b70*/ void UpdateUI();
    /*0x10d4c10*/ void UpdateData();
    /*0x10d4c70*/ void UpdateVipReward();
    /*0x10d4d58*/ void UpdateVipTitle();
    /*0x10d4e88*/ void UpdateVipDesc();
    /*0x10d4fe4*/ void UpdateVipLv();
    /*0x10d5114*/ void UpdateVipInfo();
    /*0x10d4bc4*/ void StartUnlockEffect();
    /*0x10d664c*/ System.Collections.IEnumerator CoShowUnlockEffect();
    /*0x10d5498*/ void AddNewVipInfo();
    /*0x10d5abc*/ void AddUpdateVipInfo();
    /*0x10d60a0*/ void AddHoldVipInfo();
    /*0x10d67fc*/ void AddInfoList(int type, string str);
    /*0x10d66e0*/ string AddInfo(bool isAdd, string localizeKey, int value);
    /*0x10d6a74*/ string AddInfo(bool isAdd, string localizeKey, float value);
    /*0x10d68cc*/ string AddInfo(bool isAdd, string localizeKey, bool value);
    /*0x10d66b8*/ bool IsNewContent(int oldValue, int newValue);
    /*0x10d6bbc*/ bool IsNewContent(float oldValue, float newValue);
    /*0x10d68b0*/ bool IsNewContent(bool oldValue, bool newValue);
    /*0x10d6a00*/ bool IsUpdateContent(int oldValue, int newValue);
    /*0x10d6bf8*/ bool IsUpdateContent(float oldValue, float newValue);
    /*0x10d6a24*/ bool IsUpdateContent(bool oldValue, bool newValue);
    /*0x10d6a38*/ bool IsHoldContent(int oldValue, int newValue);
    /*0x10d6c10*/ bool IsHoldContent(float oldValue, float newValue);
    /*0x10d6a54*/ bool IsHoldContent(bool oldValue, bool newValue);
    /*0x10d6bac*/ bool IsActiveContent(int oldValue, int newValue);
    /*0x10d6bc4*/ bool IsActiveContent(float oldValue, float newValue);
    /*0x10d6bec*/ bool IsActiveContent(bool oldValue, bool newValue);
    /*0x10d5374*/ void UpdateBtn();
    /*0x10d51c0*/ void UpdateRewardBtn();
    /*0x10d6c40*/ void OnClickPrevVip();
    /*0x10d6cec*/ void OnClickNextVip();
    /*0x10d6dc0*/ void OnClickReward();
    /*0x10d6e78*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0x10d7044*/ void HandleInfoScrollContent(int index, VipInfoEntity obj);
    /*0x10d71b8*/ void <OnClickReward>b__57_0();

    class <CoShowUnlockEffect>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ VipRewardPopup <>4__this;

        /*0xd8bba0*/ <CoShowUnlockEffect>d__33(int <>1__state);
        /*0xd8bbcc*/ void System.IDisposable.Dispose();
        /*0xd8bbd0*/ bool MoveNext();
        /*0xd8bd9c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8bda4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8bde4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ChatMainWindow : GuiBase
{
    static int nMaxChatLog = 100;
    static float nChatMessageLimitTime = 1;
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ NewScrollRect_ChatMessage m_cLoopScroll;
    /*0x48*/ UnityEngine.CanvasGroup m_ScrollCanvasGroup;
    /*0x50*/ LocalizeString m_ChannelText;
    /*0x58*/ UnityEngine.UI.InputField m_ChatInputField;
    /*0x60*/ UnityEngine.GameObject m_LeaveBtnParent;
    /*0x68*/ ChatEmoteWindow m_ChatEmoteWindow;
    /*0x70*/ ChatChannelParent m_ChatChannelParent;
    /*0x78*/ bool bIsInitializeChannel;
    /*0x80*/ System.DateTime dtChatTime;
    /*0x88*/ bool ChatReady;

    static /*0x13305b4*/ ChatMainWindow();
    static /*0x132e294*/ void add_OnExitEvent(System.Action value);
    static /*0x132e388*/ void remove_OnExitEvent(System.Action value);
    /*0x1330540*/ ChatMainWindow();
    /*0x132e180*/ ChatServerLogger get_logger();
    /*0x132e1d4*/ bool get_ChatLogined();
    /*0x132e238*/ ChatSystem.ChannelInfo get_curInfo();
    /*0x132e258*/ System.Collections.Generic.List<ChatSystem.ChatLog> get_chatlog();
    /*0x132e47c*/ void OnCreate();
    /*0x132e5d8*/ void OnEnter();
    /*0x132eba0*/ void OnStart();
    /*0x132eba4*/ void OnFinish();
    /*0x132eba8*/ void OnLeave();
    /*0x132ed34*/ void OnDelete();
    /*0x132ed40*/ void OnExit();
    /*0x132ea1c*/ void ChannelInitalize();
    /*0x132c480*/ void UpdateChatList(bool _bIsAdd);
    /*0x132efb4*/ void HandleSubmitMessage(string _msg);
    /*0x132f064*/ void SendChatMessage(string customText);
    /*0x132f600*/ void HandlerScrollItemUpdate(int _index, ChatMessage _instance);
    /*0x132f91c*/ void HandlerRefreshScroll(int _index);
    /*0x132fab0*/ void AddWispherChannel(long _lPlayerid, string _strNickname, bool _bSelectBtn);
    /*0x132ee60*/ void RefreshChannel();
    /*0x132fc20*/ string SetChannelLocalizeName(ChatSystem.ChannelInfo info);
    /*0x132fb80*/ void MoveChannel(ChatSystem.ChannelInfo _channel);
    /*0x1330194*/ void OnClick_LeaveButton();
    /*0x1330300*/ void OnClick_ChannelList();
    /*0x1330164*/ bool EqualsChannelInfo(ChatSystem.ChannelInfo _left, ChatSystem.ChannelInfo _right);
    /*0x13303d0*/ void OpenEmoteWindow();
    /*0x1330474*/ void CallbackEmoteChat(string emote);
    /*0x13304ac*/ void HandlerChangeChennl(ChatSystem.ChannelInfo info);
}

class ChatChangeChannelEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ AtlasImage m_Background;
    /*0x28*/ int nCurChannelIdx;
    /*0x2c*/ int nIdx;

    /*0x1329fb0*/ ChatChangeChannelEntity();
    /*0x1329cd8*/ void InitializeEntity(string strTitle, int nCurChannel, int nIndex);
    /*0x1329de0*/ void OnClick_Button();
}

class ChatChannelEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<ChatSystem.ChannelInfo> OnChangeChannelEvent;
    /*0x18*/ LocalizeString m_ChannelName;
    /*0x20*/ LocalizeString m_LastedMsg;
    /*0x28*/ LocalizeString m_LastedTime;
    /*0x30*/ AtlasImage m_Icon;
    /*0x38*/ AtlasImage m_Background;
    /*0x40*/ GuildEmblemSlot m_GuildEmblemSlot;
    /*0x48*/ UnityEngine.GameObject m_RedDot;
    /*0x50*/ LocalizeString m_NonReadCount;
    /*0x58*/ ChatSystem.ChannelInfo channelInfo;

    static /*0x132b00c*/ ChatChannelEntity();
    /*0x132b004*/ ChatChannelEntity();
    /*0x132a474*/ ChatSystem.ChannelInfo get_curInfo();
    /*0x132a4d0*/ ChatSystem.ChatLog get_curLastedMsg();
    /*0x132a550*/ void InitializeEntity(ChatSystem.ChannelInfo info);
    /*0x132a9e8*/ string SetChannelLocalizeName(ChatSystem.ChannelInfo info);
    /*0x132af2c*/ void OnClick_Button();
}

class ChatChannelParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ChatChannelEntity m_ScrollContent;

    /*0x132b2b4*/ ChatChannelParent();
    /*0x132b010*/ System.Collections.Generic.List<ChatSystem.ChannelInfo> get_InfoList();
    /*0x132b06c*/ void OnEnable();
    /*0x132b090*/ void OnDisable();
    /*0x132b094*/ void OnDestroy();
    /*0x132b098*/ void InitializeParent();
    /*0x132b09c*/ void InitializeScroll();
    /*0x132b190*/ void HandlerScrollContent(int index, ChatChannelEntity entity);
    /*0x132b210*/ void OnClick_ChangeLangChannel();
    /*0x132b28c*/ void OnClick_Exit();
}

class ChatEmoteEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ImoteIcon;
    /*0x20*/ TableData.TableData_Emoticon imoteData;
    /*0x28*/ System.Action<string> OnClickCallback;

    /*0x132c890*/ ChatEmoteEntity();
    /*0x132c7a4*/ void InitializeEntity(TableData.TableData_Emoticon emote, System.Action<string> callback);
    /*0x132c824*/ void OnClick();
}

class ChatEmoteWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ChatEmoteEntity m_ScrollContent;
    /*0x20*/ System.Action<string> OnChatCallback;

    /*0x132ccc8*/ ChatEmoteWindow();
    /*0x132c898*/ System.Collections.Generic.List<TableData.TableData_Emoticon> get_EmoteTableList();
    /*0x132c8e4*/ void OnEnable();
    /*0x132ca10*/ void OnDisable();
    /*0x132cb10*/ void InitializeWindow(System.Action<string> onChatCallback);
    /*0x132cb54*/ void InitializeScrollContent();
    /*0x132cc14*/ void HandlerScrollContent(int index, ChatEmoteEntity obj);
    /*0x132cae8*/ void OpenCloseWindow();
}

class ChatMessage : UnityEngine.MonoBehaviour
{
    /*0x18*/ ChatParts[] m_ChatParts;
    /*0x20*/ UnityEngine.UI.LayoutElement m_LayoutElement;
    /*0x28*/ UnityEngine.RectTransform rectTransform;
    /*0x30*/ ChatUserType chatUserType;

    /*0x1330714*/ ChatMessage();
    /*0x13305b8*/ void Awake();
    /*0x132f6ec*/ void SetMessage(int _index, float _widht, ChatSystem.ChatLog _data);
}

enum ChatUserType
{
    Other = 0,
    Player = 1,
}

class ChatParts : UnityEngine.MonoBehaviour
{
    static float fOffsetX = 34;
    static float fOffsetY = 30;
    static /*0x0*/ System.Action<int> OnUpdateEvent;
    /*0x18*/ ChatUserType m_eChatType;
    /*0x20*/ PlayerProfileSlot m_PlayerSlot;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_Time;
    /*0x38*/ LocalizeString m_Message;
    /*0x40*/ AtlasImage m_MessageIcon;
    /*0x48*/ AtlasImage m_MessageBoxImage;
    /*0x50*/ UnityEngine.RectTransform m_slotParentTransform;
    /*0x58*/ UnityEngine.RectTransform m_msggroupTransform;
    /*0x60*/ UnityEngine.RectTransform m_mbTransform;
    /*0x68*/ UnityEngine.RectTransform m_msgTransform;
    /*0x70*/ UnityEngine.UI.HorizontalLayoutGroup m_horizontalGroup;
    /*0x78*/ UnityEngine.RectTransform m_hidembTransform;
    /*0x80*/ UnityEngine.RectTransform m_hidemsgTransform;
    /*0x88*/ LocalizeString m_hideMessage;
    /*0x90*/ UnityEngine.RectTransform rectTransform;
    /*0x98*/ ChatApp.Shared.MessagePackObjects.SMessage message;
    /*0xa0*/ int nIndex;
    /*0xa4*/ float fMaxWidth;

    static /*0x1330b64*/ ChatParts();
    static /*0x132e928*/ void add_OnUpdateEvent(System.Action<int> value);
    static /*0x132e834*/ void remove_OnUpdateEvent(System.Action<int> value);
    /*0x1330b54*/ ChatParts();
    /*0x133071c*/ void Awake();
    /*0x133060c*/ void Initialize(int _index, UnityEngine.UI.LayoutElement _element, UnityEngine.RectTransform _parent, float _maxWidth, ChatSystem.ChatLog _data);
    /*0x1330770*/ void SetTextWithSlot();
    /*0x1330994*/ bool ImoteCheck();
    /*0x1330ac4*/ void OnClick_PressMessage();
    /*0x1330914*/ System.Collections.IEnumerator CoUpdate(UnityEngine.RectTransform _parent, UnityEngine.UI.LayoutElement _element);
    /*0x1330b4c*/ ChatUserType GetChatType();
    /*0x1330b68*/ void <SetTextWithSlot>b__26_0();

    class <CoUpdate>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ChatParts <>4__this;
        /*0x28*/ UnityEngine.RectTransform _parent;
        /*0x30*/ UnityEngine.UI.LayoutElement _element;

        /*0x106df38*/ <CoUpdate>d__29(int <>1__state);
        /*0x106df64*/ void System.IDisposable.Dispose();
        /*0x106df68*/ bool MoveNext();
        /*0x106e35c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106e364*/ void System.Collections.IEnumerator.Reset();
        /*0x106e3a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ChatWhisperNotify : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnWhisper;
    /*0x18*/ LocalizeString m_whisperName;
    /*0x20*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x28*/ UnityEngine.GameObject m_startPosition;
    /*0x30*/ UnityEngine.Coroutine m_coroutine;

    static /*0x10da814*/ ChatWhisperNotify();
    /*0x10da80c*/ ChatWhisperNotify();
    /*0x10da464*/ void OnEnable();
    /*0x10da620*/ void OnDisable();
    /*0x10da4bc*/ void BindEvent();
    /*0x10da690*/ void RemoveEvent();
    /*0x10da780*/ void HandleWhisper();
    /*0x10da5b4*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ChatWhisperNotify <>4__this;

        /*0x106e870*/ <CoUpdate>d__10(int <>1__state);
        /*0x106e89c*/ void System.IDisposable.Dispose();
        /*0x106e8a0*/ bool MoveNext();
        /*0x106ec1c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106ec24*/ void System.Collections.IEnumerator.Reset();
        /*0x106ec64*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AmountSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_amount;
    /*0x20*/ AtlasImage m_icon;
    /*0x28*/ bool m_isBigIcon;

    /*0xedba4c*/ AmountSlot();
    /*0xedb3bc*/ void InitSlot(Rewards rewards);
    /*0xedb550*/ void InitSlot(AtlasType atlasType, string icon, long amount);
    /*0xedb600*/ void InitSlot(PTShare.Define.Currency currency);
    /*0xedb70c*/ void InitSlot(PTShare.Define.Currency currency, long amount);
    /*0xedb804*/ void InitSlotSlashOwn(Rewards rewards);
}

class CategoryEntityBase<T> : UnityEngine.MonoBehaviour
{
    /*0x0*/ UnityEngine.UI.Image m_Background;
    /*0x0*/ LocalizeString m_Title;
    /*0x0*/ SeasonTimeText m_SeasonText;
    /*0x0*/ CategoryEntityInPanel m_LeftPanel;
    /*0x0*/ CategoryEntityInPanel m_RightPanel;
    /*0x0*/ CustomButton m_TopRightButton;
    /*0x0*/ AtlasImage m_TopRightBtnIcon;
    /*0x0*/ LocalizeString m_TopRightBtnText;
    /*0x0*/ T eCategoryType;

    CategoryEntityBase();
    void InitializeEntity(T eType);
    void SetBackground();
    void SetSeasonText();
    void SetPanel();
    void SetTopRightButton();
    void SetTitleText();
    void SetActiveLeftPanel(bool enable);
    void SetActiveRightPanel(bool enable);
    void SetActiveTopRightButton(bool enable);
    void SetActiveSeasonText(bool enable);
    void OnClick();
}

class CategoryEntityInPanel : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ AtlasImage m_Icon;
    /*0x28*/ LocalizeString m_Desc;

    /*0xd6d1a0*/ CategoryEntityInPanel();
    /*0xd6cfa4*/ void InitializePanel(string titleKey, string descKey, AtlasType atlasType, string atlasName);
}

class ContentsBuildingTitle : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ string m_LocalKey;

    /*0xf4ca80*/ ContentsBuildingTitle();
    /*0xf4c998*/ void OnEnable();
}

class CurrencyTopEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ TooltipData_Desc m_TooltipDesc;
    /*0x30*/ TopCurrencyInfo m_currencyInfo;

    /*0xf4d4ac*/ CurrencyTopEntity();
    /*0xf4cee8*/ void InitializeEntity(TopCurrencyInfo _info);
    /*0xf4cf04*/ void SetEntity();
    /*0xf4cfec*/ void SetCurrency();
    /*0xf4d134*/ void SetItem(string customvalue);
    /*0xf4d390*/ void SetDungeonItem();
}

class DragPressEvent : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
{
    /*0x18*/ float m_longpressEventTime;
    /*0x1c*/ float m_dragEventValue;
    /*0x20*/ UnityEngine.Vector2 m_downPosition;
    /*0x28*/ UnityEngine.Vector2 m_prevPosition;
    /*0x30*/ float m_downTime;
    /*0x38*/ System.Action m_downEvent;
    /*0x40*/ System.Action<bool> m_upEvent;
    /*0x48*/ System.Action<UnityEngine.Vector2> m_longpressEvent;
    /*0x50*/ System.Action<UnityEngine.Vector2> m_dragEvent;
    /*0x58*/ UnityEngine.EventSystems.PointerEventData m_pointerEventData;
    /*0x60*/ bool m_isDrag;

    /*0x11f25f0*/ DragPressEvent();
    /*0x11f1fcc*/ UnityEngine.EventSystems.PointerEventData GetPointerEventData();
    /*0x11f1fd4*/ void SetDragEventValue(float value);
    /*0x11f1fdc*/ void SetLongPressEventTime(float time);
    /*0x11f1fe4*/ void AddDownEvent(System.Action callBack);
    /*0x11f2060*/ void RemoveDownEvent(System.Action callBack);
    /*0x11f20dc*/ void AddUpEvent(System.Action<bool> callBack);
    /*0x11f2158*/ void RemoveUpEvent(System.Action<bool> callBack);
    /*0x11f21d4*/ void AddLongPressEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f2250*/ void RemoveLongPressEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f22cc*/ void AddDragEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f2348*/ void RemoveDragEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f23c4*/ void ClearEvent();
    /*0x11f23cc*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f2428*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f24c4*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
}

class FormationCharacterEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ UnityEngine.GameObject m_StatusParent;
    /*0x28*/ AtlasImage m_FactionIcon;
    /*0x30*/ AtlasImage m_Foothold;
    /*0x38*/ LocalizeString m_LevelText;
    /*0x40*/ ShaderChanger m_shaderChanger;
    /*0x48*/ AtlasImage[] m_arrStar;
    /*0x50*/ PTShare.Define.SHero m_HeroInfo;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x60*/ long m_lPlayerID;

    /*0x11dc830*/ FormationCharacterEntity();
    /*0x11dc19c*/ void InitializeEntity(long _playerid, PTShare.Define.SHero _hero);
    /*0x11dc558*/ void InitializeEntity(int _slotIndex, TableData.TableData_Stagebattle _battle);
    /*0x11dc2c8*/ void SetStatusView(int _factionID, int _grade, int _level);
    /*0x11dc64c*/ void SetActiveViewStatus(bool _enable);
    /*0x11dc664*/ void SetDead();
    /*0x11dc738*/ void DoFade();
    /*0x11dc7c4*/ System.Collections.IEnumerator CoDissolve();
    /*0x11dc214*/ void Clear();

    class <CoDissolve>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FormationCharacterEntity <>4__this;
        /*0x28*/ float <speed>5__2;
        /*0x2c*/ float <t>5__3;

        /*0x10a032c*/ <CoDissolve>d__16(int <>1__state);
        /*0x10a0358*/ void System.IDisposable.Dispose();
        /*0x10a035c*/ bool MoveNext();
        /*0x10a059c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a05a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10a05e4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GenericRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_guildIcon;
    /*0x20*/ UnityEngine.GameObject m_friendIcon;
    /*0x28*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x30*/ AtlasImage m_rankIcon;
    /*0x38*/ LocalizeString m_rankText;
    /*0x40*/ LocalizeString m_nameText;
    /*0x48*/ LocalizeString m_totalCP;
    /*0x50*/ UnityEngine.GameObject m_rankPointParent;
    /*0x58*/ LocalizeString m_rankPoint;
    /*0x60*/ UnityEngine.GameObject m_subRankPointParent;
    /*0x68*/ LocalizeString m_subRankPoint;

    /*0xed355c*/ GenericRankEntity();
    /*0xed2fb4*/ void InitEntity(int rank, PTShare.Define.SMiniPlayer sMiniPlayer, int cp);
    /*0xed3380*/ void InitEntity(int rank, PTShare.Define.SMiniPlayer sMiniPlayer, int cp, string rankPoint);
    /*0xed3464*/ void InitEntity(int rank, PTShare.Define.SMiniPlayer sMiniPlayer, int cp, string rankPoint, string subRankPoint);
    /*0xed31cc*/ void SetRank(int _rank);
}

class ItemBoxBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemBoxCache m_ItemRewardCache;
    /*0x20*/ DG.Tweening.Sequence m_Sequence;
    /*0x28*/ ItemType m_eItemType;

    /*0x15790e4*/ ItemBoxBase();
    /*0x15752d8*/ UnityEngine.CanvasGroup GetCanvasGroup();
    /*0x15752f4*/ void Awake();
    /*0x1575348*/ void SetActiveClear();
    /*0x15756cc*/ void QuickInitReward(Rewards _rewards);
    /*0x1576668*/ void QuickInitItem(TableData.TableData_Item _item);
    /*0x1575924*/ void QuickInitItem(TableData.TableData_Item _item, long _amount);
    /*0x15767a8*/ void ConsolidateInitItem(TableData.TableData_Item _item, long _amount);
    /*0x1575928*/ void QuickInitHero(TableData.TableData_Unitbase _base, int _defaultGrade);
    /*0x1576a8c*/ void QuickInitCurrency(PTShare.Define.Currency _currency);
    /*0x1575920*/ void QuickInitCurrency(PTShare.Define.Currency _currency, long _amount);
    /*0x1576ac4*/ void ConsolidateInitCurrency(PTShare.Define.Currency _currency, long _amount);
    /*0x1575dac*/ void QuickInitUserExp(long _amount);
    /*0x1576c70*/ void ConsolidateInitUserExp(long _amount);
    /*0x1575db0*/ void QuickInitVipPoint(long _amount);
    /*0x1576dbc*/ void ConsolidateInitVipPoint(long _amount);
    /*0x1575db4*/ void QuickInitResetPoint(PTShare.Define.ResetPointType _type, long _amount);
    /*0x1575a40*/ void QuickInitEquipment(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, long _amount, int _factionid);
    /*0x1576f18*/ void QuickInitSignature(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user);
    /*0x1575ca4*/ void QuickInitArtifact(TableData.TableData_Equipment _table, PTShare.Define.SArtifact _user);
    /*0x15760ac*/ void QuickInitSkin(TableData.TableData_Skinbasic _table, PTShare.Define.SSkin _skin);
    /*0x1575f30*/ void QuickInitDungeonItem(int _id, long _amount);
    /*0x15770b8*/ void QuickInitEquipmentGradeIcon(int _grade);
    /*0x1576130*/ void QuickInitFrameDecorate(TableData.TableData_Profileskin data, int expire);
    /*0x15772a0*/ void QuickInitFurniture(PTShare.Define.SHousingObj data);
    /*0x1576484*/ void QuickInitFurniture(TableData.TableData_Furniture data, long amount, int lv);
    /*0x15756bc*/ void SetButtonEvent(System.Action _callback);
    /*0x1576c60*/ void AddButtonEvent(System.Action _callback);
    /*0x15774a4*/ void ClearButtonEvent();
    /*0x1576a4c*/ void SetCharacter(string _skinName);
    /*0x157554c*/ void SetActiveCharacter(bool _enable);
    /*0x15775d4*/ void SetEnableBackgroundButton(bool _enable);
    /*0x1577098*/ void SetBackgroundSkin();
    /*0x1577064*/ void SetBackgroundArtifact();
    /*0x1577054*/ void SetBackgroundSignature(int _lv);
    /*0x1577024*/ void SetBackgroundEquip(int _grade);
    /*0x1576a6c*/ void SetBackgroundHero(int _grade);
    /*0x1576a38*/ void SetDefaultBackground(bool _another);
    /*0x1577084*/ void SetFrameSkin(bool _isSkin);
    /*0x1577074*/ void SetFrameArtifact();
    /*0x1577044*/ void SetFrameSignature(int _lv);
    /*0x1577014*/ void SetFrameEquip(int _grade);
    /*0x1576a5c*/ void SetFrameHero(int _grade);
    /*0x1576a28*/ void SetDefaultFrame();
    /*0x1576a18*/ void SetBackgroundItem(int _grade);
    /*0x1576a08*/ void SetFrameItem(int _grade);
    /*0x15755a8*/ void SetActivePropertyEffect(bool _enable);
    /*0x1575588*/ void SetActiveProperty(bool _enable);
    /*0x15769d8*/ void SetProperty(int _type);
    /*0x1575560*/ void SetActiveIcon(bool _enable);
    /*0x1576c50*/ void SetCurrencyIcon(PTShare.Define.Currency _type);
    /*0x1576dac*/ void SetUserExpIcon();
    /*0x1576ef8*/ void SetVipPointIcon();
    /*0x1576f08*/ void SetResetPointIcon(PTShare.Define.ResetPointType _type);
    /*0x15770a8*/ void SetDungeonIcon(int _id);
    /*0x15755c8*/ void SetActiveGrade(bool _enable);
    /*0x15755e8*/ void SetActiveHeroGrade(bool _enable);
    /*0x1577034*/ void SetGradeAmount(int _amount);
    /*0x1576a7c*/ void SetHeroGradeAmount(int _amount);
    /*0x1577218*/ void SetIconRandom(PTShare.Define.Wealth wealth);
    /*0x15769e8*/ void SetIconSprite(AtlasType _type, string _name);
    /*0x157892c*/ void SetActiveFrame(bool _enable);
    /*0x1575574*/ void SetActiveGlow(bool _enable);
    /*0x1575688*/ void SetAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size, bool useMeasure);
    /*0x1578b18*/ void SetActiveAdvance(bool _enable);
    /*0x1578b50*/ void SetAdvanceAmount(int _grade);
    /*0x1575608*/ void SetActiveDeco(bool _enable);
    /*0x1575628*/ void SetActiveTimer(bool _enable);
    /*0x1575648*/ void SetActiveItemTypeIcon(bool _enable);
    /*0x15769f8*/ void SetTimer(int _hour);
    /*0x1578d14*/ void SetItemTypeIcon(AtlasType _type, string _name);
    /*0x157553c*/ void SetAlpha(float _fAlpha);
    /*0x1575668*/ void SetOriginalEpicIcon(bool _enable);
    /*0x157569c*/ void SetCheckIcon(bool _enable);
    /*0x1578e70*/ void ShowTooltip(string titleKey, string descKey);
    /*0x1578fac*/ void PlayingZoomAnimation(float _fSpeed, float _fZoomScale);
    /*0x1579080*/ void PlayingGradeStarAnimation(int _amount, float _fDelay);
    /*0x1578ffc*/ System.Collections.IEnumerator CoZoomAnimation(float _fSpeed, float _fZoomScale);
    void OnClick();
    /*0x15790ec*/ void <ConsolidateInitUserExp>b__15_0();
    /*0x157923c*/ void <ConsolidateInitVipPoint>b__17_0();
    /*0x157938c*/ void <QuickInitResetPoint>b__18_0();
    /*0x15794dc*/ void <QuickInitResetPoint>b__18_1();
    /*0x157962c*/ void <QuickInitDungeonItem>b__23_0();
    /*0x157977c*/ void <QuickInitDungeonItem>b__23_1();
    /*0x15798cc*/ void <CoZoomAnimation>b__79_0();

    class <>c__DisplayClass13_0
    {
        /*0x10*/ ItemBoxBase <>4__this;
        /*0x18*/ PTShare.Define.Currency _currency;

        /*0xe4f740*/ <>c__DisplayClass13_0();
        /*0xe4f748*/ void <ConsolidateInitCurrency>b__0();
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ int _grade;
        /*0x18*/ ItemBoxBase <>4__this;

        /*0xe4f8d0*/ <>c__DisplayClass24_0();
        /*0xe4f8d8*/ void <QuickInitEquipmentGradeIcon>b__0();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ ItemBoxBase <>4__this;
        /*0x18*/ string result;
        /*0x20*/ TableData.TableData_Profileskin data;

        /*0xe4fc20*/ <>c__DisplayClass25_0();
        /*0xe4fc28*/ void <QuickInitFrameDecorate>b__0();
    }

    class <CoZoomAnimation>d__79 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fSpeed;
        /*0x28*/ ItemBoxBase <>4__this;
        /*0x30*/ float _fZoomScale;
        /*0x34*/ float <_fTime>5__2;

        /*0xe4fd7c*/ <CoZoomAnimation>d__79(int <>1__state);
        /*0xe4fda8*/ void System.IDisposable.Dispose();
        /*0xe4fdac*/ bool MoveNext();
        /*0xe4ffec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4fff4*/ void System.Collections.IEnumerator.Reset();
        /*0xe50034*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ItemBoxCache : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_FactionIcon;
    /*0x30*/ AtlasImage m_FactionEffect;
    /*0x38*/ AtlasImage m_Glow;
    /*0x40*/ AtlasImage m_Character;
    /*0x48*/ AtlasImage m_OriginalEpicIcon;
    /*0x50*/ AtlasImage[] m_arrHeroStar;
    /*0x58*/ AtlasImage m_Icon;
    /*0x60*/ AtlasImage m_ItemTypeIcon;
    /*0x68*/ AtlasImage m_checkIcon;
    /*0x70*/ AtlasImage[] m_arrGradeStar;
    /*0x78*/ UnityEngine.GameObject m_FactionParent;
    /*0x80*/ UnityEngine.GameObject m_EquipGradeParent;
    /*0x88*/ UnityEngine.GameObject m_AdvanceGradeParent;
    /*0x90*/ UnityEngine.GameObject m_DecoEffect;
    /*0x98*/ UnityEngine.GameObject m_TimerParent;
    /*0xa0*/ UnityEngine.GameObject m_HeroGradeParent;
    /*0xa8*/ LocalizeString m_Amount;
    /*0xb0*/ LocalizeString m_Advance;
    /*0xb8*/ LocalizeString m_TimerText;
    /*0xc0*/ CustomButton m_BackgroundButton;
    /*0xc8*/ TooltipTargetUI m_TooltipTargetUI;
    /*0xd0*/ TooltipData_TitleDesc m_TooltipTitleDesc;
    /*0xd8*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0xe0*/ bool m_ShowTextAmountZero;
    /*0xe8*/ UnityEngine.RectTransform rectTransform;

    /*0x1579a10*/ ItemBoxCache();
    /*0x15798dc*/ UnityEngine.RectTransform get_RectTransform();
    /*0x157997c*/ UnityEngine.CanvasGroup GetCanvasGroup();
    /*0x15775e8*/ void SetButtonEnabled(bool _enable);
    /*0x15772e4*/ void SetButtonEvent(System.Action _callback);
    /*0x15773cc*/ void AddButtonEvent(System.Action _callback);
    /*0x15774c0*/ void ClearButtonEvent();
    /*0x157767c*/ void SetAtlasBackgroundSkin();
    /*0x1577748*/ void SetAtlasBackgroundArtifact();
    /*0x1577814*/ void SetAtlasBackgroundSignature(int _lv);
    /*0x1577950*/ void SetAtlasBackgroundEquip(int _grade);
    /*0x1577a2c*/ void SetAtlasBackgroundHero(int _grade);
    /*0x15781e4*/ void SetAtlasBackgroundItem(int _grade);
    /*0x1577b08*/ void SetDefaultBackground(bool _another);
    /*0x1578940*/ void SetActiveFrame(bool _enable);
    /*0x1577c30*/ void SetAtlasFrameSkin(bool _isSkin);
    /*0x1577d58*/ void SetAtlasFrameArtifact();
    /*0x1577e24*/ void SetAtlasFrameSignature(int _lv);
    /*0x1577f60*/ void SetAtlasFrameEquip(int _grade);
    /*0x157803c*/ void SetAtlasFrameHero(int _grade);
    /*0x15782c0*/ void SetAtlasFrameItem(int _grade);
    /*0x1578118*/ void SetDefaultFrame();
    /*0x1578458*/ void SetActiveIcon(bool _enable);
    /*0x15784a0*/ void SetCurrencyIcon(PTShare.Define.Currency _type);
    /*0x1578530*/ void SetUserExpIcon();
    /*0x15785ac*/ void SetVipPointIcon();
    /*0x1578628*/ void SetResetPointIcon(PTShare.Define.ResetPointType _type);
    /*0x15786b8*/ void SetDungeonItemIcon(int _id);
    /*0x1578894*/ void SetAtlasIcon(AtlasType _type, string _name);
    /*0x15783cc*/ void SetPropertyIcon(int _type);
    /*0x157839c*/ void SetActivePropertyEffect(bool _enable);
    /*0x1578748*/ void SetActiveGrade(bool _enable);
    /*0x1578760*/ void SetActiveHeroGrade(bool _enable);
    /*0x1578778*/ void SetGradeAmount(int _amount);
    /*0x1578808*/ void SetHeroGradeAmount(int _amount);
    /*0x15783b4*/ void SetActiveProperty(bool _enable);
    /*0x1578988*/ void SetActiveGlow(bool _enable);
    /*0x157758c*/ void SetActiveCharacter(bool _enable);
    /*0x15774d4*/ void InitalizeCharacter(string _skinName);
    /*0x15789d0*/ void SetLocalizeAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size, bool useMeasure);
    /*0x1578b38*/ void SetActiveAdvance(bool _enable);
    /*0x1578b60*/ void SetAdvanceAmount(int _grade);
    /*0x1578be8*/ void SetActiveDeco(bool _enable);
    /*0x1578c00*/ void SetActiveTimer(bool _enable);
    /*0x1578c18*/ void SetActiveItemTypeIcon(bool _enable);
    /*0x1578e58*/ void SetCheckIcon(bool _enable);
    /*0x1578d24*/ void SetItemTypeIcon(AtlasType _type, string _name);
    /*0x1578c30*/ void SetTimer(int _hour);
    /*0x1578d9c*/ void SetAlpha(float _fAlpha);
    /*0x1578e40*/ void SetOriginalEpicIcon(bool _enable);
    /*0x15790b8*/ void PlayingGradeStarAnimation(int _amount, float _delay);
    /*0x1579984*/ System.Collections.IEnumerator CoStarScaler(int _amount, float _delay);

    class <>c__DisplayClass31_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe5003c*/ <>c__DisplayClass31_0();
        /*0xe50044*/ void <SetButtonEvent>b__0();
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe50058*/ <>c__DisplayClass32_0();
        /*0xe50060*/ void <AddButtonEvent>b__0();
    }

    class <CoStarScaler>d__78 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ItemBoxCache <>4__this;
        /*0x28*/ int _amount;
        /*0x2c*/ float _delay;
        /*0x30*/ UnityEngine.Vector3[] <originalScale>5__2;
        /*0x38*/ float <t>5__3;

        /*0xe50074*/ <CoStarScaler>d__78(int <>1__state);
        /*0xe500a0*/ void System.IDisposable.Dispose();
        /*0xe500a4*/ bool MoveNext();
        /*0xe504c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe504c8*/ void System.Collections.IEnumerator.Reset();
        /*0xe50508*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ItemInfoSlot : ItemBoxBase
{
    /*0x30*/ UnityEngine.GameObject m_RedDot;
    /*0x38*/ int m_nItemIndex;
    /*0x3c*/ int m_nEquipIndex;
    /*0x40*/ int m_nArtifactIndex;
    /*0x44*/ int m_nProfileSkinIndex;
    /*0x48*/ int m_nFurnitureIndex;
    /*0x4c*/ int m_nParentHeroFaction;
    /*0x50*/ int m_nFurnitureLv;
    /*0x58*/ PTShare.Define.SEquip m_UserEquipInfo;
    /*0x60*/ PTShare.Define.SArtifact m_UserArtifactInfo;
    /*0x68*/ EquipSetItem m_EquipSetInfo;
    /*0x80*/ TableData.TableData_Equipment m_TableEquipInfo;
    /*0x88*/ TableData.TableData_Artifact m_TableArtifactInfo;
    /*0x90*/ TableData.TableData_Profileskin m_TableProfileSkin;
    /*0x98*/ PTShare.Define.SHousingObj m_housingObj;
    /*0xa0*/ HousingObjSet m_housingObjSet;
    /*0xa8*/ TableData.TableData_Furniture m_TableFurniture;
    /*0xb0*/ TableData.TableData_Item m_ItemInfo;

    /*0x157ee94*/ ItemInfoSlot();
    /*0x157de20*/ void InitItemBox(PTShare.Define.SEquip _equip, int _heroFactionId);
    /*0x157dfd0*/ void InitItemBox(TableData.TableData_Equipment _equip);
    /*0x157e07c*/ void InitItemBox(TableData.TableData_Artifact _artifact);
    /*0x157e124*/ void InitItemBox(PTShare.Define.SArtifact _artifact);
    /*0x157e19c*/ void InitItemBox(EquipSetItem _equip, int _heroFactionId);
    /*0x157e228*/ void InitItemBox(PTShare.Define.SItem _item);
    /*0x1574a34*/ void InitItemBox(TableData.TableData_Item _item);
    /*0x157e2f8*/ void InitItemBox(TableData.TableData_Profileskin _data, int _expire);
    /*0x157e338*/ void InitItemBox(TableData.TableData_Furniture _data, int amount, int lv);
    /*0x157e380*/ void InitItemBox(PTShare.Define.SHousingObj _data, int amount);
    /*0x157e3f8*/ void InitItemBox(HousingObjSet _data);
    /*0x157de90*/ void ClearData();
    /*0x157de9c*/ void RefreshRedDot();
    /*0x157e498*/ void OnClick();
    /*0x157e50c*/ void OnClickItem();
    /*0x157e778*/ void OnClickEquip();
    /*0x157e808*/ void OnClickArtifact();
    /*0x157e894*/ void OnClickFurniture();
}

class ItemSelectSlot : ItemBoxBase
{
    static /*0x0*/ System.Action<int, int> OnSelectItem;
    /*0x2c*/ ItemSelectBoxType m_eType;
    /*0x30*/ int m_nArrIndex;
    /*0x34*/ int m_nUnitIndex;
    /*0x38*/ int m_nEquipIndex;
    /*0x3c*/ int m_nItemIndex;
    /*0x40*/ TableData.TableData_Unitbase m_UnitInfo;
    /*0x48*/ TableData.TableData_Equipment m_EquipInfo;
    /*0x50*/ TableData.TableData_Item m_ItemInfo;

    static /*0x1584b04*/ ItemSelectSlot();
    static /*0x158459c*/ void add_OnSelectItem(System.Action<int, int> value);
    static /*0x1584690*/ void remove_OnSelectItem(System.Action<int, int> value);
    /*0x1584afc*/ ItemSelectSlot();
    /*0x1584408*/ void InitItemBox(ItemSelectBoxType _type, int _arrIndex, int _itemIndex);
    /*0x15847bc*/ void InitItem();
    /*0x15847e8*/ void InitEquip();
    /*0x1584790*/ void InitCharacter();
    /*0x1584784*/ void SetIndex(int _unit, int _item, int _equip);
    /*0x1584868*/ void OnClick();
}

class ItemRewardBox : ItemBoxBase
{
    /*0x2c*/ ItemRewardBoxType m_eRewardType;
    /*0x30*/ TableData.TableData_Item m_ItemInfo;
    /*0x38*/ TableData.TableData_Equipment m_EquipTableInfo;
    /*0x40*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x48*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x50*/ TableData.TableData_Skinbasic m_SkinInfo;
    /*0x58*/ TableData.TableData_Equipment m_ArtifactTableInfo;
    /*0x60*/ PTShare.Define.SArtifact m_ArtifactInfo;
    /*0x68*/ PTShare.Define.SFrame m_FrameInfo;
    /*0x70*/ TableData.TableData_Furniture m_HousingInfo;
    /*0x78*/ int m_unitGrade;

    /*0x1582c10*/ ItemRewardBox();
    /*0x1582334*/ void InitItemBox(ItemReward _reward);
    /*0x1582904*/ void OnClick();
    /*0x1582504*/ void LoadItem(PTShare.Define.SItem _item);
    /*0x1582840*/ void LoadAsset(long _amount);
    /*0x15825c4*/ void LoadEquip(EquipSetItem _equip);
    /*0x1582478*/ void LoadHero(PTShare.Define.SLittleHero _hero, long _amount);
    /*0x1582618*/ void LoadSkin(PTShare.Define.SSkin _skin);
    /*0x1582654*/ void LoadArtifact(PTShare.Define.SArtifact _artifact);
    /*0x1582698*/ void LoadFrame(PTShare.Define.SFrame _frame);
    /*0x15827fc*/ void LoadHousingObj(PTShare.Define.SMiniHousingObj _housing);
}

class ItemTableRewardSlot : ItemBoxBase
{
    /*0x30*/ Rewards m_RewardInfo;

    /*0x1586890*/ ItemTableRewardSlot();
    /*0x157b534*/ void InitializeBox(Rewards _reward);
    /*0x1585dd0*/ void InitializeCurrency();
    /*0x1585ed4*/ void InitializeUserExp();
    /*0x1585edc*/ void InitializeVipPoint();
    /*0x1585ee4*/ void InitializeResetPoint();
    /*0x1585ddc*/ void InitializeItem();
    /*0x1585de4*/ void InitializeHero();
    /*0x1585e5c*/ void InitializeEquip();
    /*0x1585ef0*/ void InitializeArtifact();
    /*0x1585f60*/ void InitializeSkin();
    /*0x1585fe0*/ void InitializeDungeonItem();
    /*0x1585fec*/ void InitializeFrame();
    /*0x1586008*/ void InitializeFurniture();
    /*0x1586014*/ void OnClick();
    /*0x1586408*/ void OnClickSound();
    /*0x15864a4*/ void SetAmountFontSize(int _size);
    /*0x1586558*/ void SetLocalizeMaterialAmount(Rewards _rewards, UnityEngine.TextAnchor _anchor, int _size);
}

class UpgradeEquipSlot : ItemBoxBase
{
    static /*0x0*/ System.Action<int, int, int> OnSelectItemEvent;
    /*0x30*/ LocalizeString m_MaterialAmount;
    /*0x38*/ UnityEngine.GameObject m_DecreaseButton;
    /*0x40*/ UpgradeEquipSlot.SLOT_TYPE m_slotType;
    /*0x48*/ PTShare.Define.SEquip m_EquipUserInfo;
    /*0x50*/ TableData.TableData_Equipment m_EquipTableInfo;
    /*0x58*/ PTShare.Define.SItem m_ItemUserInfo;
    /*0x60*/ TableData.TableData_Item m_ItemTableInfo;
    /*0x68*/ PTShare.Define.SHousingObj m_furnitureInfo;
    /*0x70*/ TableData.TableData_Furniture m_furnitureTableInfo;
    /*0x78*/ int m_nIndex;
    /*0x7c*/ int m_nAmount;
    /*0x80*/ int m_nMaxAmount;

    static /*0x10c6b8c*/ UpgradeEquipSlot();
    static /*0x10c63b8*/ void add_OnSelectItemEvent(System.Action<int, int, int> value);
    static /*0x10c64ac*/ void remove_OnSelectItemEvent(System.Action<int, int, int> value);
    /*0x10c6b84*/ UpgradeEquipSlot();
    /*0x10c65a0*/ void InitializeSlot(int _index, PTShare.Define.SEquip _user, TableData.TableData_Equipment _table, int _amount, int _maxAmount);
    /*0x10c66fc*/ void InitializeSlot(int _index, PTShare.Define.SItem _item, TableData.TableData_Item _table, int _amount, int _maxAmount);
    /*0x10c6718*/ void InitializeSlot(int _index, PTShare.Define.SHousingObj _furniture, TableData.TableData_Furniture _table, int _amount, int _maxAmount);
    /*0x10c65bc*/ void CommonInitialize(UpgradeEquipSlot.SLOT_TYPE _slotType, int _nIndex, int _nAmount, int _nMaxAmount);
    /*0x10c6748*/ void RefreshAmount(int _addAmount);
    /*0x10c6734*/ void SetMaterialAmount(string _text);
    /*0x10c6830*/ int GetExp();
    /*0x10c6918*/ void OnClick();
    /*0x10c6a78*/ void DecreaseClick();

    enum SLOT_TYPE
    {
        ITEM = 0,
        EQUIP = 1,
        FURNITURE = 2,
    }
}

class RandomItemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_itemSlot;
    /*0x20*/ LocalizeString m_percent;

    /*0x11ba220*/ RandomItemSlot();
    /*0x11ba130*/ void InitSlot(Rewards reward, float percent);
}

class SkinInfoSlot : ItemBoxBase
{
    /*0x30*/ UnityEngine.GameObject m_UnUseText;
    /*0x38*/ AtlasImage m_UnUseShadowSkin;
    /*0x40*/ TableData.TableData_Unitbase unitInfo;
    /*0x48*/ System.Action<int> onClickCallback;

    /*0x1450a14*/ SkinInfoSlot();
    /*0x145084c*/ void InitSkinSlot(TableData.TableData_Unitbase unit, System.Action<int> callback);
    /*0x1450988*/ void SetActiveSkinShadow(bool enable);
    /*0x14509a8*/ void OnClick();
}

struct ItemReward
{
    /*0x10*/ ItemRewardBoxType RewardType;
    /*0x18*/ PTShare.Define.SItem ItemInfo;
    /*0x20*/ EquipSetItem EquipSetInfo;
    /*0x38*/ PTShare.Define.SLittleHero HeroInfo;
    /*0x40*/ PTShare.Define.SSkin SkinInfo;
    /*0x48*/ PTShare.Define.SArtifact Artifact;
    /*0x50*/ PTShare.Define.SFrame Frame;
    /*0x58*/ PTShare.Define.SMiniHousingObj Housing;
    /*0x60*/ long Amount;

    /*0xaa544c*/ ItemReward(ItemRewardBoxType _rewardType, long _amount);
    /*0xaa5454*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SItem _item);
    /*0xaa545c*/ ItemReward(ItemRewardBoxType _rewardType, EquipSetItem _equip);
    /*0xaa5490*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SLittleHero _hero);
    /*0xaa5498*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SSkin _skin);
    /*0xaa54a0*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SArtifact _artifact);
    /*0xaa54a8*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SFrame _frame);
    /*0xaa54b0*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SMiniHousingObj _housingObj);
}

class ItemRewardGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ bool m_bDeactiveClick;
    /*0x20*/ ScrollContent_ItemReward m_cScrollContentItemReward;
    /*0x28*/ bool m_bFadeActive;
    /*0x2c*/ int m_nViewLimit;
    /*0x30*/ PTShare.Define.SProperty m_PropertyInfo;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> m_tHeroRewards;
    /*0x40*/ System.Collections.Generic.List<ItemReward> m_liRewardBoxList;
    /*0x48*/ ItemRewardBoxType[] m_arrIgnoreType;
    /*0x50*/ UnityEngine.RectTransform m_ScrollRectTransform;

    /*0x1584274*/ ItemRewardGroup();
    /*0x1582c18*/ int get_Count();
    /*0x1582c38*/ void OnEnable();
    /*0x1582cd8*/ void InitRewardGroup(PTShare.Define.SProperty _property, bool _onFade, int _viewLimit, ItemRewardBoxType[] _ignoreType);
    /*0x1583714*/ void InitRewardGroup_DungeonKey(PTShare.Define.SProperty _property, bool _onFade, int _viewLimit, ItemRewardBoxType[] _ignoreType);
    /*0x1583838*/ void SetScrollLimit();
    /*0x1583690*/ void InitializeScroll();
    /*0x15839b0*/ void HandlerItemReward(int _index, ItemRewardBox _instance);
    /*0x1582da0*/ void SetSAsset();
    /*0x15830a0*/ void SetSItem();
    /*0x1583774*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, long _amount);
    /*0x1583e98*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SItem _item);
    /*0x1583dc4*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, EquipSetItem _equip);
    /*0x1583b50*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SLittleHero _hero);
    /*0x1583a94*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SSkin _skin);
    /*0x1583f54*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SArtifact _artifact);
    /*0x1584010*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SFrame _frame);
    /*0x15840cc*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SMiniHousingObj _housingObj);
    /*0x1582d28*/ void RemoveAll();
    /*0x1584230*/ bool IsIgnoreType(ItemRewardBoxType _type);
    /*0x1584188*/ bool IsPossiableCondition(ItemRewardBoxType _type);

    class <>c
    {
        static /*0x0*/ ItemRewardGroup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SLittleHero> <>9__18_0;
        static /*0x10*/ System.Comparison<EquipSetItem> <>9__18_1;
        static /*0x18*/ System.Comparison<PTShare.Define.SItem> <>9__18_2;

        static /*0xe50b4c*/ <>c();
        /*0xe50bac*/ <>c();
        /*0xe50bb4*/ int <SetSItem>b__18_0(PTShare.Define.SLittleHero a, PTShare.Define.SLittleHero b);
        /*0xe50bdc*/ int <SetSItem>b__18_1(EquipSetItem a, EquipSetItem b);
        /*0xe50c0c*/ int <SetSItem>b__18_2(PTShare.Define.SItem a, PTShare.Define.SItem b);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ PTShare.Define.SLittleHero _hero;
        /*0x18*/ ItemRewardGroup <>4__this;

        /*0xe50c64*/ <>c__DisplayClass22_0();
        /*0xe50c6c*/ bool <AddItemRewardBox>b__0(ItemReward x);
    }
}

class LetterBox : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform left;
    /*0x20*/ UnityEngine.RectTransform right;
    /*0x28*/ UnityEngine.RectTransform top;
    /*0x30*/ UnityEngine.RectTransform bottom;
    /*0x38*/ float defailtWiden;

    /*0xfa8ea0*/ LetterBox();
    /*0xfa8c80*/ void Start();
}

enum PlayerProfileType
{
    NONE = 0,
    GENERIC = 1,
    HIDELEVEL = 2,
    HIDELEVELSHOWTIER = 3,
    HIDESEX = 4,
    HIDELEVELWITHSEX = 5,
    HIDELEVELWITHSEXSHOWTIER = 6,
    MONSTER = 7,
    USETOUCHEVENT_MONSTER = 8,
    End = 9,
}

struct ProfileSlotDetail
{
    /*0x10*/ int tableid;
    /*0x14*/ int frameid;
    /*0x18*/ int backgroundid;

    static /*0x100ecf0*/ ProfileSlotDetail GetAccountDetail();
    /*0xa89440*/ ProfileSlotDetail(string _ids);
    /*0xa89448*/ string GetProfileIds();
}

struct PlayerProfileInfo
{
    /*0x10*/ PlayerProfileType type;
    /*0x18*/ long playerid;
    /*0x20*/ ProfileSlotDetail detail;
    /*0x2c*/ int level;
    /*0x30*/ int gender;

    /*0xa8a904*/ PlayerProfileInfo(PlayerProfileType type);
    /*0xa8a90c*/ PlayerProfileInfo(PlayerProfileType type, long playerid, string detailids, int level, int gender);
    /*0xa8a974*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SBoardCampaignRanker _campaignRank);
    /*0xa8a97c*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SBoardTowerRanker _towerRank);
    /*0xa8a984*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SBoardFiveRanker _fiveRank);
    /*0xa8a98c*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SPlayer _player);
    /*0xa8a994*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SSearchPlayer _player);
    /*0xa8a99c*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.STowerUser _tower);
    /*0xa8a9a4*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SFriend _friend);
    /*0xa8a9ac*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SMiniPlayer _miniPlayer);
    /*0xa8a9b4*/ PlayerProfileInfo(int _nTableID, bool _useTouchEvent);
    /*0xa8a9c0*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SCampaignRecord _camapignRecord);
    /*0xa8a9c8*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.STowerRecord _towerRecord);
    /*0xa8a9d0*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaTarget _target);
    /*0xa8a9d8*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaTarget _target, int _nTier);
    /*0xa8a9e0*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaHistory _target);
    /*0xa8a9e8*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaHistory _target, int _nTier);
    /*0xa8a9f0*/ PlayerProfileInfo(PlayerProfileType type, ArenaTargetUser _target);
    /*0xa8aa1c*/ PlayerProfileInfo(PlayerProfileType type, ArenaTargetUser _target, int _nTier);
    /*0xa8aa48*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SAreaPlayer _target);
    /*0xa8aa50*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SGuildBossHistory _target);
    /*0xa8aa58*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SGuildMember _target);
    /*0xa8aa60*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SGuildWarPlayer _target);
    /*0xa8aa68*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SWorldArenaRanker _target);
}

class PlayerProfileSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ProfileIcon;
    /*0x20*/ AtlasImage m_ProfileFrame;
    /*0x28*/ AtlasImage m_ProfileBackground;
    /*0x30*/ AtlasImage m_ProfileSex;
    /*0x38*/ AtlasImage m_ProfileTier;
    /*0x40*/ LocalizeString m_PlayerLevel;
    /*0x48*/ UnityEngine.GameObject m_LevelParent;
    /*0x50*/ Coffee.UIEffects.UIShiny m_UIShiny;
    /*0x58*/ PlayerProfileInfo m_ProfileInfo;
    /*0x80*/ TableData.TableData_Unitbase m_Unitbase;
    /*0x88*/ System.Action OnClickEvent;
    /*0x90*/ UnityEngine.RectTransform rectTransform;
    /*0x98*/ bool m_EnableUIShiny;
    /*0x99*/ bool m_Enabled;

    /*0x114a178*/ PlayerProfileSlot();
    /*0x1149890*/ void OnEnable();
    /*0x1149968*/ void OnDisable();
    /*0x1149a10*/ void OnDestroy();
    /*0x1137d68*/ void InitializeSlot(PlayerProfileInfo _info, System.Action _callback, bool _bDisable);
    /*0x1149ef0*/ void DefaultUser();
    /*0x1138854*/ void SetDisable(bool _bDisable);
    /*0x11389c8*/ void SetDetail(ProfileSlotDetail _detail);
    /*0x1149ad4*/ void SetLevel(int _level);
    /*0x1149bd4*/ void SetFrame(int _frameid);
    /*0x1149d2c*/ void SetBackground(int _backgroundid);
    /*0x1149dd4*/ void SetSex(int _gender);
    /*0x1149b14*/ void SetIcon(int _tableid);
    /*0x1149e60*/ void SetTier(int _nTier);
    /*0x1149f70*/ void SetActiveIcon(bool _enable);
    /*0x1149a44*/ void SetActiveLevel(bool _enable);
    /*0x1149a80*/ void SetActiveSex(bool _enable);
    /*0x1149abc*/ void SetActiveTier(bool _enable);
    /*0x1149f88*/ UnityEngine.RectTransform GetRectTransform();
    /*0x11397dc*/ ProfileSlotDetail GetDetail();
    /*0x1149a18*/ bool IsConditionShowLevel();
    /*0x1149a5c*/ bool IsConditionShowSex();
    /*0x1149a98*/ bool IsConcitionShowTier();
    /*0x114a028*/ bool IsConditionChangeEvent();
    /*0x114a0d8*/ bool IsConditionClickEvent();
    /*0x114a0e8*/ void OnClick();
    /*0x114a108*/ void PlayerInfoChangeEvent();
}

class RankRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<ItemTableRewardSlot> m_rewardSlotList;
    /*0x20*/ AtlasImage m_rankIcon;
    /*0x28*/ LocalizeString m_rankText;
    /*0x30*/ UnityEngine.GameObject m_playerGroupFrame;
    /*0x38*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x11bf580*/ RankRewardEntity();
    /*0x11bf02c*/ void InitEntity(int rankValue, ArenaRankType rankType, System.Collections.Generic.List<Rewards> rewardList, bool isPlayerGroup);
    /*0x11bf228*/ void SetRankIcon(int rank);
    /*0x11bf3a4*/ void SetRewardSlot();
}

class RewardExportPopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardExportSlot m_showScrollContent;
    /*0x48*/ ScrollContent_RewardExportSlot m_outputScrollContent;
    /*0x50*/ UnityEngine.UI.InputField m_filter;
    /*0x58*/ LocalizeString m_name;
    /*0x60*/ UnityEngine.GameObject m_outputAddParent;
    /*0x68*/ ItemTableRewardSlot m_outputSlot;
    /*0x70*/ UnityEngine.UI.InputField m_inputField;
    /*0x78*/ int m_currIndex;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x88*/ System.Collections.Generic.List<Rewards> m_outputList;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_showList;

    /*0x11a96dc*/ RewardExportPopup();
    /*0x11a6b00*/ void OnCreate();
    /*0x11a6b04*/ void OnDelete();
    /*0x11a6b08*/ void OnEnter();
    /*0x11a6b0c*/ void OnFinish();
    /*0x11a6b10*/ void OnLeave();
    /*0x11a6b14*/ void OnStart();
    /*0x11a6b18*/ void InitPopup();
    /*0x11a7c68*/ void DrawShowContent();
    /*0x11a6d64*/ void AddShowCurrency();
    /*0x11a6e30*/ void AddShowItem();
    /*0x11a70ac*/ void AddShowHero();
    /*0x11a7290*/ void AddShowEquip();
    /*0x11a750c*/ void AddShowFurniture();
    /*0x11a7780*/ void AddShowSkin();
    /*0x11a79f4*/ void AddShowProfile();
    /*0x11a7ccc*/ void OnClickFilter();
    /*0x11a6c24*/ void BindEvent();
    /*0x11a7e68*/ void RemoveEvent();
    /*0x11a7fa0*/ void HandleShowScrollContent(int index, RewardExportSlot slot);
    /*0x11a8134*/ void HandleOutputScrollContent(int index, RewardExportSlot slot);
    /*0x11a82f8*/ void HandleClickShow(int index);
    /*0x11a874c*/ void HandleClickOutput(int index);
    /*0x11a8918*/ void OnClickOutput();
    /*0x11a8e20*/ void OnClickCancel();
    /*0x11a8e40*/ void OnClickExport();
    /*0x11a9500*/ void OnClickTab(int value);
    /*0x11a978c*/ void <AddShowHero>b__21_1(TableData.TableData_Unitbase f);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;
        /*0x18*/ System.Action<TableData.TableData_Item> <>9__1;

        /*0xf9b210*/ <>c__DisplayClass20_0();
        /*0xf9b218*/ void <AddShowItem>b__1(TableData.TableData_Item f);
    }

    class <>c
    {
        static /*0x0*/ RewardExportPopup.<> <>9;
        static /*0x8*/ System.Comparison<Rewards> <>9__20_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Unitbase> <>9__21_0;
        static /*0x18*/ System.Comparison<Rewards> <>9__22_0;
        static /*0x20*/ System.Comparison<Rewards> <>9__23_1;
        static /*0x28*/ System.Comparison<Rewards> <>9__24_1;
        static /*0x30*/ System.Comparison<Rewards> <>9__25_1;

        static /*0xf9af98*/ <>c();
        /*0xf9aff8*/ <>c();
        /*0xf9b000*/ int <AddShowItem>b__20_0(Rewards lhs, Rewards rhs);
        /*0xf9b048*/ bool <AddShowHero>b__21_0(TableData.TableData_Unitbase x);
        /*0xf9b0f0*/ int <AddShowEquip>b__22_0(Rewards lhs, Rewards rhs);
        /*0xf9b138*/ int <AddShowFurniture>b__23_1(Rewards lhs, Rewards rhs);
        /*0xf9b180*/ int <AddShowSkin>b__24_1(Rewards lhs, Rewards rhs);
        /*0xf9b1c8*/ int <AddShowProfile>b__25_1(Rewards lhs, Rewards rhs);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;
        /*0x18*/ System.Action<TableData.TableData_Equipment> <>9__1;

        /*0xf9b2d8*/ <>c__DisplayClass22_0();
        /*0xf9b2e0*/ void <AddShowEquip>b__1(TableData.TableData_Equipment f);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0xf9b3c8*/ <>c__DisplayClass23_0();
        /*0xf9b3d0*/ void <AddShowFurniture>b__0(TableData.TableData_Furniture f);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0xf9b488*/ <>c__DisplayClass24_0();
        /*0xf9b490*/ void <AddShowSkin>b__0(TableData.TableData_Skinbasic f);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0xf9b568*/ <>c__DisplayClass25_0();
        /*0xf9b570*/ void <AddShowProfile>b__0(TableData.TableData_Profileskin f);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ string name;
        /*0x18*/ RewardExportPopup <>4__this;

        /*0xf9b62c*/ <>c__DisplayClass26_0();
        /*0xf9b634*/ void <OnClickFilter>b__0(Rewards f);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ RewardExportPopup <>4__this;
        /*0x18*/ int index;

        /*0xf9b904*/ <>c__DisplayClass32_0();
        /*0xf9b90c*/ void <HandleClickOutput>b__0(bool confirm);
    }
}

class RewardExportSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_slot;
    /*0x20*/ int m_index;
    /*0x28*/ System.Action<int> m_callback;

    /*0x11a98c0*/ RewardExportSlot();
    /*0x11a82d0*/ void SetAmount(long value);
    /*0x11a80b8*/ void InitSlot(Rewards reward, int index, System.Action<int> callback);
    /*0x11a9860*/ void OnClick();
}

class ScrollContent_RewardExportSlot : ScrollContent<RewardExportSlot>
{
    /*0xe1b44c*/ ScrollContent_RewardExportSlot();
}

class IdleRewardPopup : RewardPopupBase
{
    /*0x60*/ LocalizeString m_cLocalizeTime;
    /*0x68*/ LocalizeString m_cLocalizeGold;
    /*0x70*/ LocalizeString m_cLocalizeCash;
    /*0x78*/ LocalizeString m_cLocalizeExp;
    /*0x80*/ UnityEngine.UI.Button m_RewardButton;
    /*0x88*/ System.TimeSpan clearTime;
    /*0x90*/ int flowClearTimeTick;
    /*0x98*/ System.Collections.IEnumerator OnProcessFlowTime;

    /*0xd210d0*/ IdleRewardPopup();
    /*0xd20a6c*/ void OnCreate();
    /*0xd20a70*/ void OnEnter();
    /*0xd20a74*/ void OnStart();
    /*0xd20a78*/ void OnFinish();
    /*0xd20a7c*/ void OnLeave();
    /*0xd20a80*/ void OnDelete();
    /*0xd20a84*/ void Initialize(System.DateTime _clearTime, PTShare.Define.SProperty _reward, System.Action _exitCallback, ItemRewardBoxType[] _ignoreType);
    /*0xd20c9c*/ void LoadStageIdle();
    /*0xd20c30*/ System.Collections.IEnumerator IE_FlowTime();
    /*0xd20e4c*/ void OnExit();
    /*0xd20ee0*/ void OnClick_SendAccountIdle();
    /*0xd20fd8*/ void OnClick_SendAccountIdlebyFast();
    /*0xd21144*/ void <OnClick_SendAccountIdle>b__18_0(PTShare.Define.SProperty _reward);
    /*0xd21310*/ void <OnClick_SendAccountIdlebyFast>b__19_0(PTShare.Define.SProperty _reward);

    class <IE_FlowTime>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ IdleRewardPopup <>4__this;
        /*0x28*/ int <_maxTimeTick>5__2;

        /*0xe4d5ac*/ <IE_FlowTime>d__16(int <>1__state);
        /*0xe4d5d8*/ void System.IDisposable.Dispose();
        /*0xe4d5dc*/ bool MoveNext();
        /*0xe4d8c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4d8d0*/ void System.Collections.IEnumerator.Reset();
        /*0xe4d910*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ IdleRewardPopup.<> <>9;
        static /*0x8*/ System.Action <>9__18_1;
        static /*0x10*/ System.Action <>9__19_1;

        static /*0xe4d48c*/ <>c();
        /*0xe4d4ec*/ <>c();
        /*0xe4d4f4*/ void <OnClick_SendAccountIdle>b__18_1();
        /*0xe4d550*/ void <OnClick_SendAccountIdlebyFast>b__19_1();
    }
}

class ScrollContent_ItemReward : ScrollContent<ItemRewardBox>
{
    /*0xe1ab64*/ ScrollContent_ItemReward();
}

class ScrollContentArrow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x20*/ UnityEngine.RectTransform m_scrollContent;
    /*0x28*/ UnityEngine.GameObject m_scrollTopArrow;
    /*0x30*/ UnityEngine.GameObject m_scrollBottomArrow;
    /*0x38*/ float m_arrowSpeed;
    /*0x3c*/ bool m_isHorizontal;

    /*0xe1882c*/ ScrollContentArrow();
    /*0xe183c4*/ void OnEnable();
    /*0xe18568*/ void OnDisable();
    /*0xe184d4*/ void ResetScroll();
    /*0xe18408*/ void BindEvent();
    /*0xe1856c*/ void RemoveEvent();
    /*0xe18630*/ void HandleDragScroll(UnityEngine.Vector2 value);
    /*0xe184fc*/ System.Collections.IEnumerator CoScale();

    class <CoScale>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScrollContentArrow <>4__this;
        /*0x28*/ float <t>5__2;
        /*0x2c*/ float <value>5__3;

        /*0xcbd014*/ <CoScale>d__12(int <>1__state);
        /*0xcbd040*/ void System.IDisposable.Dispose();
        /*0xcbd044*/ bool MoveNext();
        /*0xcbd1a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbd1ac*/ void System.Collections.IEnumerator.Reset();
        /*0xcbd1ec*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SeasonTimeText : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_localizeText;
    /*0x20*/ int nTerm;
    /*0x24*/ int nSeason;
    /*0x28*/ System.DateTime dtDefaultTime;
    /*0x30*/ string strNormalKey;
    /*0x38*/ string strSecKey;
    /*0x40*/ System.Collections.IEnumerator ieTime;

    /*0xe21770*/ SeasonTimeText();
    /*0xe21634*/ void OnDisable();
    /*0xe21694*/ void InitializeText(int term, System.DateTime defaultTime, string normalKey, string secKey);
    /*0xe216f4*/ void InitializeText(int season, int term, System.DateTime defaultTime, string normalKey, string secKey);
    /*0xe216a8*/ void StartTimer();
    /*0xe21664*/ void StopCoroutines();
    /*0xe21704*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SeasonTimeText <>4__this;

        /*0xcbdb3c*/ <CoUpdate>d__12(int <>1__state);
        /*0xcbdb68*/ void System.IDisposable.Dispose();
        /*0xcbdb6c*/ bool MoveNext();
        /*0xcbdc98*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbdca0*/ void System.Collections.IEnumerator.Reset();
        /*0xcbdce0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SingleTabData
{
    /*0x10*/ UnityEngine.GameObject go;
    /*0x18*/ string toastMessage;

    /*0x150dc54*/ SingleTabData();
}

class SingleTab : UnityEngine.MonoBehaviour
{
    /*0x18*/ ButtonSound m_onClickSound;
    /*0x20*/ SingleTabData[] m_tabs;
    /*0x28*/ int m_currentIndex;
    /*0x30*/ System.Action<int> m_callBack;

    /*0x150dc44*/ SingleTab();
    /*0x150d9f4*/ void InitTab(int tabIndex, System.Action<int> callBack);
    /*0x150db88*/ void Clear();
    /*0x150da00*/ void UpdateTab(int tabIndex, bool showToast);
    /*0x150db9c*/ void OnClick();
}

class StatusChangeUI : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_ATKParent;
    /*0x20*/ UnityEngine.GameObject m_DEFParent;
    /*0x28*/ UnityEngine.GameObject m_HPParent;
    /*0x30*/ UnityEngine.GameObject m_GroupParent;
    /*0x38*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x40*/ LocalizeString m_ATKTitle;
    /*0x48*/ LocalizeString m_DEFTitle;
    /*0x50*/ LocalizeString m_HPTitle;
    /*0x58*/ LocalizeString m_ATKAmount;
    /*0x60*/ LocalizeString m_DEFAmount;
    /*0x68*/ LocalizeString m_HPAmount;
    /*0x70*/ float m_fOffestY;
    /*0x74*/ float m_fFixedTime;
    /*0x78*/ float m_fHideTime;
    /*0x7c*/ float m_fUpSpeed;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;

    /*0xc9abcc*/ StatusChangeUI();
    /*0xc9a804*/ void OnDisable();
    /*0xc9a834*/ void InitializeUI(Battle.CharacterStat _stat);
    /*0xc9a8f0*/ void SetAmount(LocalizeString targetTitle, LocalizeString targetAmount, float value);
    /*0xc9ab14*/ void StartAnimate();
    /*0xc9ab60*/ System.Collections.IEnumerator CoAnimation();

    class <CoAnimation>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StatusChangeUI <>4__this;
        /*0x28*/ float <_time>5__2;

        /*0xcc32f4*/ <CoAnimation>d__20(int <>1__state);
        /*0xcc3320*/ void System.IDisposable.Dispose();
        /*0xcc3324*/ bool MoveNext();
        /*0xcc3588*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc3590*/ void System.Collections.IEnumerator.Reset();
        /*0xcc35d0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TabButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler
{
    /*0x18*/ int m_tabIndex;
    /*0x20*/ UnityEngine.GameObject[] m_enableObjects;
    /*0x28*/ UnityEngine.GameObject[] m_disableObjects;
    /*0x30*/ TabGroup m_tabGroup;

    /*0xc9e35c*/ TabButton();
    /*0xc9e0b4*/ void SetTabGroup(TabGroup tabGroup);
    /*0xc9e138*/ void OnChange(bool enable);
    /*0xc9e204*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
}

class TabGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ TabButton[] m_tabButtons;
    /*0x20*/ System.Action<int> m_callBacks;

    /*0xc9e54c*/ TabGroup();
    /*0xc9e364*/ void OnEnable();
    /*0xc9e3d0*/ void InitGroup(int index);
    /*0xc9e44c*/ void AddEvent(System.Action<int> changeEvent);
    /*0xc9e4c8*/ void RemoveEvent(System.Action<int> changeEvent);
    /*0xc9e544*/ void ClearEvent();
    /*0xc9e294*/ void OnChange(int index);
}

class TableRewardController : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_StageReward m_ScrollContent;
    /*0x20*/ System.Collections.Generic.List<Rewards> m_liRewards;
    /*0x28*/ UnityEngine.RectTransform m_ScrollRectTransform;

    /*0x1167158*/ TableRewardController();
    /*0x1166690*/ int get_Count();
    /*0x11666b0*/ void OnEnable();
    /*0x11667dc*/ void OnDisable();
    /*0x11668b0*/ void InitTableReward(System.Collections.Generic.List<Rewards> _rewards, bool _combine);
    /*0x1166f24*/ void SetScrollLimit();
    /*0x1166ea0*/ void InitializeScroll();
    /*0x116709c*/ void HandlerScrollContent(int _index, ItemTableRewardSlot _obj);

    class <>c__DisplayClass7_0
    {
        /*0x10*/ Rewards h;

        /*0xcd03cc*/ <>c__DisplayClass7_0();
        /*0xcd03d4*/ bool <InitTableReward>b__2(Rewards x);
    }

    class <>c
    {
        static /*0x0*/ TableRewardController.<> <>9;
        static /*0x8*/ System.Func<Rewards, bool> <>9__7_0;
        static /*0x10*/ System.Predicate<Rewards> <>9__7_1;

        static /*0xcd0344*/ <>c();
        /*0xcd03a4*/ <>c();
        /*0xcd03ac*/ bool <InitTableReward>b__7_0(Rewards x);
        /*0xcd03bc*/ bool <InitTableReward>b__7_1(Rewards x);
    }
}

class TouchEffectWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ bool m_isTouchView;
    static /*0x8*/ System.Action<UnityEngine.Vector3> OnTouchWorldPositionEvent;
    static /*0x10*/ System.Action<UnityEngine.Vector3> OnTouchLocalPositionEvent;
    /*0x18*/ ParticleBase m_cParticle;
    /*0x20*/ UnityEngine.RectTransform m_rectTransform;
    /*0x28*/ UnityEngine.RectTransform m_curTransform;
    /*0x30*/ UnityEngine.Camera m_cCurCam;
    /*0x38*/ UnityEngine.Vector2 m_localCursor;

    static /*0x117e218*/ TouchEffectWindow();
    static /*0x117d7f8*/ void add_OnTouchWorldPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117d8f0*/ void remove_OnTouchWorldPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117d9e8*/ void add_OnTouchLocalPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117dae0*/ void remove_OnTouchLocalPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117e110*/ void SetTouchView(bool enable);
    /*0x117e1e8*/ TouchEffectWindow();
    /*0x117dbd8*/ void Awake();
    /*0x117dd14*/ void Start();
    /*0x117dda8*/ void OnDestroy();
    /*0x117dea8*/ void Update();
    /*0x117e17c*/ void HandlerTouchEffectView(bool _isValue);
}

class TriggerMissionEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_questName;
    /*0x20*/ LocalizeString m_amountText;
    /*0x28*/ LocalizeString m_buttonText;
    /*0x30*/ UnityEngine.UI.Button m_rewardButton;
    /*0x38*/ UnityEngine.UI.Button m_moveButton;
    /*0x40*/ UnityEngine.UI.Slider m_slider;
    /*0x48*/ System.Collections.Generic.List<ItemTableRewardSlot> m_rewardSlotList;
    /*0x50*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x58*/ LocalizeString m_lockText;
    /*0x60*/ long m_missionCount;
    /*0x68*/ DefineEvent.TriggerData m_triggerData;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x78*/ System.Action m_rewardCallBack;

    /*0x1123504*/ TriggerMissionEntity();
    /*0x11227b0*/ void InitEntity(bool titleIsDesc, string trigger, long score, bool isClear, System.Collections.Generic.List<Rewards> rewards, System.Action rewardCallBack);
    /*0x11230b0*/ void InitEntity(bool titleIsDesc, string trigger, long score, bool isClear, int missionCount, System.Collections.Generic.List<Rewards> rewards, System.Action rewardCallBack);
    /*0x1122f90*/ void SetLockUI();
    /*0x1122b60*/ void SetEnable(bool enable);
    /*0x1122db4*/ void SetRewardList();
    /*0x1123468*/ void SetCanvasGroup(float alpha, bool raycast);
    /*0x11234ac*/ void OnClickMove();
    /*0x11234c8*/ void OnClickReward();
}

class UIGridLineRenderer : UnityEngine.MonoBehaviour
{
    /*0x18*/ int lineCount;
    /*0x1c*/ UnityEngine.Vector2 baseSize;
    /*0x24*/ float dist;
    /*0x28*/ UnityEngine.UI.Extensions.UILineRenderer m_grid;

    /*0x235d7e4*/ UIGridLineRenderer();
    /*0x235d590*/ void UpdateLine();
}

class UISkeletonCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_baseCharacterSkel;
    /*0x20*/ string m_idleAnimName;
    /*0x28*/ bool m_isSlime;
    /*0x30*/ string m_curAnim;
    /*0x38*/ System.Action OnCompleteCallBack;
    /*0x40*/ System.Action OnClickCallBack;

    /*0x2367ed4*/ UISkeletonCharacter();
    /*0x2367ac4*/ bool IsSlime();
    /*0x2367acc*/ void InitCharacter(int index);
    /*0x2367c30*/ void SetAnimation(string anim, bool loop, float timeScale, System.Action onCompleteAnimationCallBack);
    /*0x2367e30*/ void PlayingIdle();
    /*0x2367e8c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x2367ec0*/ void OnClick();
}

class WorldNoticeWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Collections.Generic.Queue<WorldNoticeWindow.WorldNotice> qUserNoticeList;
    static /*0x8*/ System.Collections.Generic.Queue<WorldNoticeWindow.WorldNotice> qAdminNoticeList;
    /*0x18*/ UnityEngine.GameObject m_Parent;
    /*0x20*/ UnityEngine.RectTransform m_Mask;
    /*0x28*/ LocalizeString m_Desc;
    /*0x30*/ UnityEngine.RectTransform m_DescRectTransform;

    static /*0xe10154*/ WorldNoticeWindow();
    static /*0xe0fdf8*/ void ClearNotice();
    static /*0xe0fe94*/ void InitNotice(string _desc, float _fFlowSpeed, bool _bIgnoreCondition, bool _bIsAdminNotice);
    /*0xe1014c*/ WorldNoticeWindow();
    /*0xe0fcbc*/ void Awake();
    /*0xe0fda0*/ void OnDestroy();
    /*0xe0fd34*/ System.Collections.IEnumerator CoUpdate();
    /*0xe0ffa0*/ bool IsNotViewCondition(bool _bIgnore);

    struct WorldNotice
    {
        /*0x10*/ float speed;
        /*0x18*/ string text;
        /*0x20*/ bool ignorecontidion;

        /*0xa827f8*/ WorldNotice(float speed, string text, bool ignorecontidion);
    }

    class <CoUpdate>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldNoticeWindow <>4__this;
        /*0x28*/ WorldNoticeWindow.WorldNotice <_notice>5__2;

        /*0xd8e5ac*/ <CoUpdate>d__11(int <>1__state);
        /*0xd8e5d8*/ void System.IDisposable.Dispose();
        /*0xd8e5dc*/ bool MoveNext();
        /*0xd8e96c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8e974*/ void System.Collections.IEnumerator.Reset();
        /*0xd8e9b4*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct TopCurrencyInfo
{
    /*0x10*/ PTShare.Define.Wealth wealth;
    /*0x14*/ PTShare.Define.Currency currency;
    /*0x18*/ int id;
    /*0x20*/ long amount;
    /*0x28*/ AtlasType atlasType;
    /*0x30*/ string iconName;
    /*0x38*/ string customValue;
    /*0x40*/ string tooltip;

    /*0xa8ab88*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, PTShare.Define.Currency currency);
    /*0xa8ab90*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, int id);
    /*0xa8ab98*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, PTShare.Define.Currency currency, long amount);
    /*0xa8aba0*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, int id, long amount);
    /*0xa8aba8*/ TopCurrencyInfo(AtlasType atlasType, string iconName, string customValue, string tooltip);
}

class CurrencyTopWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform m_Parent;
    /*0x20*/ System.Collections.Generic.List<CurrencyTopEntity> m_liCurrencyEntity;
    /*0x28*/ int nStartCount;
    /*0x2c*/ int nEndCount;

    /*0xf4d7c0*/ CurrencyTopWindow();
    /*0xf4d4b4*/ void OnEnable();
    /*0xf4d608*/ void OnDisable();
    /*0xf49be0*/ void InitalizeInfo(TopCurrencyInfo[] _viewInfos);
    /*0xf4d70c*/ void HandlerChangeInfo();
}

class ContentShopItem : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_priceParent;
    /*0x20*/ AtlasImage m_priceImage;
    /*0x28*/ LocalizeString m_priceText;
    /*0x30*/ AtlasImage m_badgeImage;
    /*0x38*/ LocalizeString m_badgeText;
    /*0x40*/ ItemTableRewardSlot m_itemSlot;
    /*0x48*/ UnityEngine.GameObject m_soldOutObject;
    /*0x50*/ UnityEngine.GameObject m_reddotObject;
    /*0x58*/ UnityEngine.Material m_grayScaleMaterial;
    /*0x60*/ int m_salePercent;
    /*0x64*/ bool m_isSoldOut;
    /*0x68*/ DefineContentShop.ContentPackageShopData m_contentPackageShopData;
    /*0x70*/ Rewards m_reward;
    /*0x138*/ long m_priceValue;

    /*0x10ecf78*/ ContentShopItem();
    /*0x10ec3d8*/ void InitializeItem(DefineContentShop.ContentPackageShopData contentPackageShopData, bool isSoldOut);
    /*0x10ec4dc*/ void SetItemSlot();
    /*0x10eca94*/ void SetReddot();
    /*0x10ec59c*/ void SetPriceUI();
    /*0x10ec7b8*/ void SetBadge(string badgeType, int badgePercent);
    /*0x10eca44*/ void SetSoldOut();
    /*0x10ecda0*/ void SetItemSlotMaterial(UnityEngine.Material material);
    /*0x10ec444*/ void SetReward();
    /*0x10ecc90*/ bool CheckReddotEquipList(System.Collections.Generic.List<PTShare.Define.SEquip> equipList);
    /*0x10ece88*/ void OnClickItem();
}

class ContentShopPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ LocalizeString m_shopTitleText;
    /*0x50*/ LocalizeString m_shopInfoText;
    /*0x58*/ LocalizeString m_shopResetTimeText;
    /*0x60*/ ScrollContent_ContentShopItem m_scrollContent;
    /*0x68*/ UnityEngine.GameObject m_stickGridLayoutParent;
    /*0x70*/ UnityEngine.GameObject m_stickPrefab;
    /*0x78*/ CashShopIcon[] m_categoryButtons;
    /*0x80*/ UnityEngine.RectTransform m_categoryScrollRect;
    /*0x88*/ UnityEngine.RectTransform m_minSizeRect;
    /*0x90*/ UnityEngine.Vector2 m_sizeDelta;
    /*0x98*/ DefineContentShop.ContentShopCategoryType m_currCategoryType;
    /*0xa0*/ System.Collections.Generic.List<DefineContentShop.ContentPackageShopData> m_currContentShopPackageList;
    /*0xa8*/ System.Collections.Generic.List<UnityEngine.GameObject> m_stickObjectList;
    /*0xb0*/ ContentShopPopup.INFO_TYPE m_infoType;
    /*0xb8*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0xc0*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0xf4a19c*/ ContentShopPopup();
    /*0xf47db4*/ void OnCreate();
    /*0xf47db8*/ void OnEnter();
    /*0xf4808c*/ void OnStart();
    /*0xf48090*/ void OnFinish();
    /*0xf48094*/ void OnLeave();
    /*0xf4836c*/ void OnDelete();
    /*0xf48370*/ void OnExit();
    /*0xf48444*/ void InitializePopup(DefineContentShop.ContentShopCategoryType select);
    /*0xf484f4*/ void SetHideCategory();
    /*0xf486cc*/ void UpdatePage();
    /*0xf48784*/ void UpdateCurrentCategoryData();
    /*0xf487e4*/ void UpdatePlayerCurrency();
    /*0xf48d28*/ void UpdateTitleText();
    /*0xf491e0*/ void UpdateInfoText(ContentShopPopup.INFO_TYPE infoType);
    /*0xf49728*/ void UpdateResetTimeText();
    /*0xf49b58*/ void UpdateCategoryButtons();
    /*0xf48ab8*/ void UpdateScrollContent();
    /*0xf48b50*/ void UpdateStickObject();
    /*0xf49dd8*/ void ChangeCategory(DefineContentShop.ContentShopCategoryType categoryType);
    /*0xf49df0*/ void OnClickChangeCategory(int categoryType);
    /*0xf49e08*/ void OnClickSwapInfo();
    /*0xf49f2c*/ void OnClickReset();
    /*0xf47e1c*/ void BindEvent();
    /*0xf480b8*/ void RemoveEvnet();
    /*0xf49fe0*/ void HandleRefreshPage();
    /*0xf49fe4*/ void HandleScrollContent(int index, ContentShopItem obj);
    /*0xf4872c*/ void StartRefreshTimer();
    /*0xf48320*/ void StopCoroutines();
    /*0xf4a130*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xf4a0c4*/ System.Collections.IEnumerator CoRefreshShop();
    /*0xf4a24c*/ void <OnExit>b__24_0();
    /*0xf4a2c8*/ void <CoRefreshShop>b__47_0();

    enum INFO_TYPE
    {
        NORMAL = 0,
        REQUIRE = 1,
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ ContentShopPopup <>4__this;
        /*0x18*/ int activeCount;

        /*0x10737dc*/ <>c__DisplayClass26_0();
        /*0x10737e4*/ void <SetHideCategory>b__0(TableData.TableData_Contentshop f);
    }

    class <CoUpdateTimer>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ContentShopPopup <>4__this;

        /*0x1073d34*/ <CoUpdateTimer>d__46(int <>1__state);
        /*0x1073d60*/ void System.IDisposable.Dispose();
        /*0x1073d64*/ bool MoveNext();
        /*0x1073dcc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1073dd4*/ void System.Collections.IEnumerator.Reset();
        /*0x1073e14*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshShop>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ContentShopPopup <>4__this;

        /*0x107398c*/ <CoRefreshShop>d__47(int <>1__state);
        /*0x10739b8*/ void System.IDisposable.Dispose();
        /*0x10739bc*/ bool MoveNext();
        /*0x1073ce4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1073cec*/ void System.Collections.IEnumerator.Reset();
        /*0x1073d2c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ContentShopPurchasePopup : GuiBase
{
    /*0x40*/ LocalizeString m_itemNameText;
    /*0x48*/ LocalizeString m_itemInfoText;
    /*0x50*/ LocalizeString m_itemOwnText;
    /*0x58*/ LocalizeString m_itemOwnCountText;
    /*0x60*/ AtlasImage m_costCurrencyImage;
    /*0x68*/ LocalizeString m_costCurrencyText;
    /*0x70*/ ItemTableRewardSlot m_itemTableRewardSlot;
    /*0x78*/ UnityEngine.UI.ScrollRect m_infoScrollRect;
    /*0x80*/ Rewards m_reward;
    /*0x148*/ PTShare.Define.Currency m_currencyType;
    /*0x150*/ long m_payValue;
    /*0x158*/ DefineContentShop.ContentPackageShopData m_contentPackageShopData;

    /*0xf4b254*/ ContentShopPurchasePopup();
    /*0xf4a2cc*/ void OnCreate();
    /*0xf4a2d0*/ void OnDelete();
    /*0xf4a2d4*/ void OnEnter();
    /*0xf4a340*/ void OnFinish();
    /*0xf4a344*/ void OnLeave();
    /*0xf4a348*/ void OnStart();
    /*0xf4a34c*/ void InitializePopup(DefineContentShop.ContentPackageShopData contentPackageShopData, Rewards reward, PTShare.Define.Currency currencyType, long payValue);
    /*0xf4a3bc*/ void UpdateItemSlot();
    /*0xf4a47c*/ void UpdateItemName();
    /*0xf4a6b4*/ void UpdateItemInfo();
    /*0xf4acf8*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0xf4a8dc*/ void UpdateItemOwnCount();
    /*0xf4ab18*/ void UpdateCost();
    /*0xf4ad64*/ void OnClickExit();
    /*0xf4ade4*/ void OnClickPurchase();
    /*0xf4b174*/ void Purchase();
    /*0xf4b25c*/ void <OnClickPurchase>b__26_0(bool _result);
    /*0xf4b268*/ void <Purchase>b__27_0(int equipId);

    class <CoLateScrollRectRefresh>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ContentShopPurchasePopup <>4__this;

        /*0x1073e1c*/ <CoLateScrollRectRefresh>d__22(int <>1__state);
        /*0x1073e48*/ void System.IDisposable.Dispose();
        /*0x1073e4c*/ bool MoveNext();
        /*0x1073f0c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1073f14*/ void System.Collections.IEnumerator.Reset();
        /*0x1073f54*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_dialogText;
    /*0x20*/ DialogBase.STATE m_state;
    /*0x28*/ DialogData m_dialogData;

    /*0x11efdc0*/ DialogBase();
    /*0x11efc74*/ DialogBase.STATE GetState();
    /*0x11efc7c*/ void SkipDialog();
    void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    void RollBackDialog(System.Action exitCallBack);
    void StopDialog();
    /*0x11efc80*/ void SetLocalize(string localizeKey);

    enum STATE
    {
        IN = 0,
        IDLE = 1,
        OUT = 2,
    }
}

enum DIALOG_PLAY_TYPE
{
    NONE = 0,
    AUTOPLAY_AUTOCLOSE = 1,
}

enum DIALOG_TYPE
{
    LEFT = 0,
    RIGHT = 1,
    TITLE = 2,
}

class DialogData
{
    /*0x10*/ float delay;
    /*0x14*/ bool clear;
    /*0x18*/ DIALOG_TYPE dialogType;
    /*0x1c*/ int characterId;
    /*0x20*/ string skinName;
    /*0x28*/ string localizeKey;
    /*0x30*/ TableData.TableData_Voice voiceData;
    /*0x38*/ DIALOG_PLAY_TYPE auto;

    /*0x11efdd0*/ DialogData(int characterId, SkinKeyType skinKeyType, bool useVoice);
    /*0x11efee8*/ DialogData(float delay, bool clear, DIALOG_TYPE dialogType, int characterId, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
    /*0x11effa8*/ DialogData(float delay, bool clear, DIALOG_TYPE dialogType, string skinName, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
    /*0x11efea0*/ void Init(float delay, bool clear, DIALOG_TYPE dialogType, int characterId, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
    /*0x11f005c*/ void Init(float delay, bool clear, DIALOG_TYPE dialogType, string skinName, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
}

class DialogPopup : GuiBase
{
    static /*0x0*/ System.Action OnExitDialog;
    /*0x40*/ DialogBase m_leftSkel;
    /*0x48*/ DialogBase m_rightSkel;
    /*0x50*/ DialogBase m_title;
    /*0x58*/ AtlasImage m_touchImage;
    /*0x60*/ int m_touchIndex;
    /*0x68*/ System.Collections.Generic.List<DialogData> m_dialogList;
    /*0x70*/ DialogData m_playDialog;
    /*0x78*/ DialogData m_nextDialog;
    /*0x80*/ UnityEngine.Coroutine m_waitCoroutine;

    static /*0x11f0c68*/ DialogPopup();
    static /*0x11f047c*/ void add_OnExitDialog(System.Action value);
    static /*0x11f0570*/ void remove_OnExitDialog(System.Action value);
    /*0x11f0bf0*/ DialogPopup();
    /*0x11f0664*/ void OnCreate();
    /*0x11f0668*/ void OnDelete();
    /*0x11f066c*/ void OnEnter();
    /*0x11f0670*/ void OnFinish();
    /*0x11f0674*/ void OnLeave();
    /*0x11f0678*/ void OnStart();
    /*0x11f067c*/ void OnExit();
    /*0x11f02f4*/ void InitPopup(DialogData dialog);
    /*0x11f08c4*/ void InitPopup(System.Collections.Generic.List<DialogData> dialogList);
    /*0x11f07cc*/ void PlayDialog();
    /*0x11f08f4*/ System.Collections.IEnumerator CoDelayPlay();
    /*0x11f0960*/ System.Collections.IEnumerator CoDelayPlay_AutoClose();
    /*0x11f09cc*/ void SetTouchColor();
    /*0x11f0714*/ void ClearDialog();
    /*0x11f0aa4*/ void OnClick();
    /*0x11f0c6c*/ void <CoDelayPlay>b__22_0();
    /*0x11f0d94*/ void <OnClick>b__26_0();

    class <CoDelayPlay>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogPopup <>4__this;

        /*0x10783fc*/ <CoDelayPlay>d__22(int <>1__state);
        /*0x1078428*/ void System.IDisposable.Dispose();
        /*0x107842c*/ bool MoveNext();
        /*0x107867c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078684*/ void System.Collections.IEnumerator.Reset();
        /*0x10786c4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ DialogPopup <>4__this;
        /*0x18*/ float audioTime;
        /*0x1c*/ bool isWaitEnd;
        /*0x20*/ System.Action<float> <>9__4;

        /*0x10781fc*/ <>c__DisplayClass23_0();
        /*0x1078204*/ void <CoDelayPlay_AutoClose>b__0();
        /*0x10783d0*/ void <CoDelayPlay_AutoClose>b__4(float time);
        /*0x10783e0*/ bool <CoDelayPlay_AutoClose>b__1();
        /*0x10783e8*/ void <CoDelayPlay_AutoClose>b__2();
        /*0x10783f4*/ bool <CoDelayPlay_AutoClose>b__3();
    }

    class <CoDelayPlay_AutoClose>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogPopup <>4__this;
        /*0x28*/ DialogPopup.<> <>8__1;
        /*0x30*/ DialogBase <target>5__2;

        /*0x10786cc*/ <CoDelayPlay_AutoClose>d__23(int <>1__state);
        /*0x10786f8*/ void System.IDisposable.Dispose();
        /*0x10786fc*/ bool MoveNext();
        /*0x1078b88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078b90*/ void System.Collections.IEnumerator.Reset();
        /*0x1078bd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogSkeleton : DialogBase
{
    /*0x30*/ Spine.Unity.SkeletonGraphic m_skeleton;
    /*0x38*/ UnityEngine.CanvasGroup m_textCanvas;
    /*0x40*/ UnityEngine.RectTransform m_moveRect;
    /*0x48*/ UnityEngine.CanvasGroup m_parentCanvasGroup;
    /*0x50*/ UnityEngine.Coroutine m_coroutine;
    /*0x58*/ int m_characterId;
    /*0x60*/ System.Action m_completeCallBack;
    /*0x68*/ System.Action m_enterCallBack;

    /*0x11f14bc*/ DialogSkeleton();
    /*0x11f0d98*/ float GetTimeScale();
    /*0x11f0db4*/ void SkipDialog();
    /*0x11f0f48*/ void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    /*0x11f1358*/ void RollBackDialog(System.Action exitCallBack);
    /*0x11f13dc*/ void StopDialog();
    /*0x11f11c0*/ void SetSkeleton(string skinName, string anim, bool loop);
    /*0x11f140c*/ void HandleCompleteAnim(Spine.TrackEntry trackEntry);
    /*0x11f0e68*/ void SetAnimation(string anim, bool loop);
    /*0x11f12ec*/ System.Collections.IEnumerator CoSparkSafe();
    /*0x11f1148*/ System.Collections.IEnumerator CoInitDialog(System.Action callBack);

    class <>c__DisplayClass10_0
    {
        /*0x10*/ DialogSkeleton <>4__this;
        /*0x18*/ System.Action enterCallBack;
        /*0x20*/ System.Action <>9__2;

        /*0x1078bd8*/ <>c__DisplayClass10_0();
        /*0x1078be0*/ void <PlayDialog>b__0();
        /*0x1078c68*/ void <PlayDialog>b__1();
        /*0x1078d34*/ void <PlayDialog>b__2();
    }

    class <CoSparkSafe>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogSkeleton <>4__this;

        /*0x1078f30*/ <CoSparkSafe>d__16(int <>1__state);
        /*0x1078f5c*/ void System.IDisposable.Dispose();
        /*0x1078f60*/ bool MoveNext();
        /*0x1078fe8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078ff0*/ void System.Collections.IEnumerator.Reset();
        /*0x1079030*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoInitDialog>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogSkeleton <>4__this;
        /*0x28*/ System.Action callBack;
        /*0x30*/ float <t>5__2;

        /*0x1078dc0*/ <CoInitDialog>d__17(int <>1__state);
        /*0x1078dec*/ void System.IDisposable.Dispose();
        /*0x1078df0*/ bool MoveNext();
        /*0x1078ee0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078ee8*/ void System.Collections.IEnumerator.Reset();
        /*0x1078f28*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogTalk : DialogBase
{
    /*0x30*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x38*/ float m_alphaTime;
    /*0x3c*/ float m_closeTime;

    /*0x11f1788*/ DialogTalk();
    /*0x11f14d4*/ float GetTotalPlayTime();
    /*0x11f14e0*/ void OnEnable();
    /*0x11f1500*/ void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    /*0x11f173c*/ void RollBackDialog(System.Action exitCallBack);
    /*0x11f1740*/ void StopDialog();
    /*0x11f1698*/ System.Collections.IEnumerator CoCanvasAlpha(float delay, float start, float end, float time, System.Action callBack);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ DialogData dialogData;
        /*0x18*/ DialogTalk <>4__this;

        /*0x1079038*/ <>c__DisplayClass5_0();
        /*0x1079040*/ void <PlayDialog>b__0();
        /*0x1079168*/ void <PlayDialog>b__1();
    }

    class <CoCanvasAlpha>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float delay;
        /*0x24*/ float time;
        /*0x28*/ DialogTalk <>4__this;
        /*0x30*/ float start;
        /*0x34*/ float end;
        /*0x38*/ System.Action callBack;
        /*0x40*/ float <t>5__2;
        /*0x44*/ float <speed>5__3;

        /*0x1079188*/ <CoCanvasAlpha>d__8(int <>1__state);
        /*0x10791b4*/ void System.IDisposable.Dispose();
        /*0x10791b8*/ bool MoveNext();
        /*0x1079310*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079318*/ void System.Collections.IEnumerator.Reset();
        /*0x1079358*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogTitle : DialogBase
{
    /*0x30*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x38*/ float m_moveY;
    /*0x40*/ UnityEngine.Coroutine m_coroutine;
    /*0x48*/ UnityEngine.Vector3 m_originalPosition;

    /*0x11f1ae8*/ DialogTitle();
    /*0x11f17a4*/ void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    /*0x11f1950*/ void RollBackDialog(System.Action exitCallBack);
    /*0x11f1aac*/ void StopDialog();
    /*0x11f18a8*/ void StopCoroutines();
    /*0x11f18d8*/ System.Collections.IEnumerator CoInitDialog(System.Action callBack);
    /*0x11f1a34*/ System.Collections.IEnumerator CoExitDialog(System.Action callBack);

    class <>c__DisplayClass4_0
    {
        /*0x10*/ DialogTitle <>4__this;
        /*0x18*/ System.Action enterCallBack;

        /*0x1079360*/ <>c__DisplayClass4_0();
        /*0x1079368*/ void <PlayDialog>b__0();
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ System.Action exitCallBack;

        /*0x1079398*/ <>c__DisplayClass5_0();
        /*0x10793a0*/ void <RollBackDialog>b__0();
    }

    class <CoInitDialog>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogTitle <>4__this;
        /*0x28*/ System.Action callBack;
        /*0x30*/ UnityEngine.Vector3 <endPosition>5__2;
        /*0x3c*/ float <t>5__3;

        /*0x1079548*/ <CoInitDialog>d__8(int <>1__state);
        /*0x1079574*/ void System.IDisposable.Dispose();
        /*0x1079578*/ bool MoveNext();
        /*0x10797b4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10797bc*/ void System.Collections.IEnumerator.Reset();
        /*0x10797fc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoExitDialog>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogTitle <>4__this;
        /*0x28*/ System.Action callBack;
        /*0x30*/ float <t>5__2;

        /*0x10793b4*/ <CoExitDialog>d__9(int <>1__state);
        /*0x10793e0*/ void System.IDisposable.Dispose();
        /*0x10793e4*/ bool MoveNext();
        /*0x10794f8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079500*/ void System.Collections.IEnumerator.Reset();
        /*0x1079540*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WinAnimation : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_WinAnimation;
    /*0x20*/ ParticleBase m_WinEffect;
    /*0x28*/ float m_fWaitTime;
    /*0x30*/ System.Collections.IEnumerator m_ieAnimate;

    /*0xe007fc*/ WinAnimation();
    /*0xe00680*/ void ShowAnimation();
    /*0xe00790*/ System.Collections.IEnumerator CoAnimate();
    /*0xe006e0*/ void SetActvieAnimSkel(bool _bEnable);
    /*0xe00728*/ void SetActiveEffect(bool _bEnable);

    class <CoAnimate>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WinAnimation <>4__this;

        /*0xd8c298*/ <CoAnimate>d__5(int <>1__state);
        /*0xd8c2c4*/ void System.IDisposable.Dispose();
        /*0xd8c2c8*/ bool MoveNext();
        /*0xd8c3a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8c3a8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8c3e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipChangeEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEquipEvent;
    /*0x18*/ ItemInfoSlot m_ItemBox;
    /*0x20*/ LocalizeString m_EquipName;
    /*0x28*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x30*/ LocalizeString m_TotalPower;
    /*0x38*/ HeroSlotInventory m_HeroSlot;
    /*0x40*/ UnityEngine.GameObject m_ChangeBtn;
    /*0x48*/ UnityEngine.GameObject m_EquipBtn;
    /*0x50*/ PTShare.Define.SHero m_ParentInfo;
    /*0x58*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x60*/ EquipSetItem m_EquipSetInfo;
    /*0x78*/ HeroEquipSet m_ChildInfo;

    static /*0x14ba9a4*/ EquipChangeEntity();
    static /*0x14b9fa8*/ void add_OnEquipEvent(System.Action<PTShare.Define.SHero> value);
    static /*0x14ba09c*/ void remove_OnEquipEvent(System.Action<PTShare.Define.SHero> value);
    /*0x14ba99c*/ EquipChangeEntity();
    /*0x14ba190*/ void InitializeEntity(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14ba54c*/ void InitializeEntity(PTShare.Define.SHero _hero, EquipSetItem _equip);
    /*0x14ba5cc*/ void InitializeEntity(PTShare.Define.SHero _hero, HeroEquipSet _equipset);
    /*0x14ba248*/ void SetInfomation(bool _bIsAmountSetItem, PTShare.Define.SEquip _equip);
    /*0x14ba1f8*/ void SetActionButton(bool _change, bool _equip);
    /*0x14ba64c*/ void OnClickChange();
    /*0x14ba7f4*/ void OnClickEquip();
}

class EquipPromoteStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatName;
    /*0x20*/ LocalizeString m_BefValue;
    /*0x28*/ LocalizeString m_AftValue;
    /*0x30*/ AtlasImage m_Arrow;
    /*0x38*/ float fBeforeValue;
    /*0x3c*/ float fAfterValue;

    /*0x14c0d9c*/ EquipPromoteStatusEntity();
    /*0x14bff18*/ void InitializeEntity(Battle.CharacterStat.StatType eStatType, Battle.CharacterStat beforeStatus, Battle.CharacterStat afterStatus);
    /*0x14c07b0*/ void InitializeEntity(Battle.CharacterStat.StatType eStatType, float beforeStatus, float afterStatus);
    /*0x14c0ab8*/ void InitializeEntityLv(float beforeLv, float afterLv);
    /*0x14c05a4*/ void SetMeasureValue(LocalizeString str, Battle.CharacterStat.StatType eStatType, float _Value, string _PlusStr);
    /*0x14c0790*/ bool IsSameValue();
    /*0x14c07a0*/ bool IsPlusValue();
}

class EquipmentStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatName;
    /*0x20*/ LocalizeString m_StatValue;
    /*0x28*/ LocalizeString m_AddStat;
    /*0x30*/ LocalizeString m_FullStatValue;
    /*0x38*/ UnityEngine.GameObject m_FullStatPadding;
    /*0x40*/ ParticleBase m_particle;

    /*0x114cd30*/ EquipmentStatusEntity();
    /*0x114bc50*/ void InitializeStatus(Battle.CharacterStat.StatType eType, TableData.TableData_Equipment equipment, int nLevel);
    /*0x114c050*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SHero hero, PTShare.Define.SEquip equip, string nameAdd, bool isFullStat);
    /*0x114c754*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SEquip equip, int nOffsetLevel);
    /*0x114c998*/ void InitializeLevel(int lv);
    /*0x114cad0*/ void ShowParticle(float delay);
    /*0x114cb90*/ void StatTextAlpha(float value);
    /*0x114be08*/ void Clear();
    /*0x114cc80*/ void SetParticle(bool enable);
    /*0x114be98*/ void SetStatValue(Battle.CharacterStat.StatType eType, LocalizeString parent, Battle.CharacterStat stat, string addOper);
    /*0x114c534*/ void SetMeasureValue(Battle.CharacterStat.StatType eType, LocalizeString parent, Battle.CharacterStat stat, string addOper);
    /*0x114c730*/ Battle.CharacterStat.StatType ConvertFullStatType(Battle.CharacterStat.StatType eType);
    /*0x114cc04*/ System.Collections.IEnumerator CoParticle(float delay);

    class <CoParticle>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float delay;
        /*0x28*/ EquipmentStatusEntity <>4__this;

        /*0x109ab34*/ <CoParticle>d__17(int <>1__state);
        /*0x109ab60*/ void System.IDisposable.Dispose();
        /*0x109ab64*/ bool MoveNext();
        /*0x109acd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109ace0*/ void System.Collections.IEnumerator.Reset();
        /*0x109ad20*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScrollContent_EquipPromoteStatusEntity : ScrollContent<EquipPromoteStatusEntity>
{
    /*0xe19304*/ ScrollContent_EquipPromoteStatusEntity();
}

class ScrollContent_EquipmentStatusEntity : ScrollContent<EquipmentStatusEntity>
{
    /*0xe1937c*/ ScrollContent_EquipmentStatusEntity();
}

class StatusInfomationSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<StatusEntity> m_liStatusEntity;
    /*0x20*/ string m_strCenterSeparator;
    /*0x28*/ string m_strAddSeparator;
    /*0x30*/ bool m_isUseSort;
    /*0x38*/ Battle.CharacterStat m_DefaultStatInfo;
    /*0x40*/ Battle.CharacterStat m_CurrentStatInfo;
    /*0x48*/ System.Collections.Generic.List<Battle.CharacterStat.StatType> m_defaultSortList;

    /*0xc9ba9c*/ StatusInfomationSubWindow();
    /*0xc9b290*/ void InitializeStatus(TableData.TableData_Equipment _equipment, Battle.CharacterStat _curStat, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b4ac*/ void InitializeStatus(Battle.CharacterStat _curStat, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b4c0*/ void InitializeStatus(Battle.CharacterStat _defStat, Battle.CharacterStat _curStat, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b4d8*/ void InitializeStatus(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b528*/ void InitializeStatusByEffect(Battle.CharacterStat _curStat);
    /*0xc9b558*/ System.Collections.IEnumerator CoEffectLevelUpParticle();
    /*0xc9b324*/ void SetStatusEntity(bool _isHideZeroStat, bool _isShortName);
    /*0xc9b5c4*/ void SetDefaultSortData();
    /*0xc9b6e0*/ void SortStatList(bool _isHideZeroStat);
    /*0xc9ba7c*/ float GetStat(Battle.CharacterStat _stat, Battle.CharacterStat.StatType _type);

    class <CoEffectLevelUpParticle>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StatusInfomationSubWindow <>4__this;
        /*0x28*/ int <length>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xcc37f8*/ <CoEffectLevelUpParticle>d__12(int <>1__state);
        /*0xcc3824*/ void System.IDisposable.Dispose();
        /*0xcc3828*/ bool MoveNext();
        /*0xcc3ab4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc3abc*/ void System.Collections.IEnumerator.Reset();
        /*0xcc3afc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FriendEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeStateEvent;
    /*0x18*/ LocalizeString m_PlayerName;
    /*0x20*/ LocalizeString m_TotalPower;
    /*0x28*/ LocalizeString m_Chapter;
    /*0x30*/ LocalizeString m_Server;
    /*0x38*/ LocalizeString m_OnlineStatus;
    /*0x40*/ AtlasImage m_ReceiveIcon;
    /*0x48*/ AtlasImage m_SendIcon;
    /*0x50*/ UnityEngine.GameObject m_OnlineIcon;
    /*0x58*/ PlayerProfileSlot m_ProfileSlot;
    /*0x60*/ PTShare.Define.SFriend m_FriendInfo;
    /*0x68*/ PTShare.Define.FriendShipRecvState m_eReceiveState;
    /*0x6c*/ PTShare.Define.FriendShipSendState m_eSendState;
    /*0x70*/ bool m_bOnline;

    static /*0x11ddc20*/ FriendEntity();
    static /*0x11dc838*/ void add_OnChangeStateEvent(System.Action value);
    static /*0x11dc92c*/ void remove_OnChangeStateEvent(System.Action value);
    /*0x11ddc18*/ FriendEntity();
    /*0x11dca20*/ void InitializePopup(PTShare.Define.SFriend _friend);
    /*0x11dca28*/ void SetViewStatus();
    /*0x11dd02c*/ void OnClickReceiveFriendShip();
    /*0x11dd45c*/ void OnClickSendFriendShip();
    /*0x11dd888*/ void OnClickFight();
    /*0x11dda98*/ void CallbackProtocolReceiveFriendShip();
    /*0x11ddb58*/ void CallbackProtocolSendFriendShip();
    /*0x11dd00c*/ bool IsPossiableReceive();
    /*0x11dd01c*/ bool IsPossiableSend();
    /*0x11ddc24*/ void <SetViewStatus>b__17_0();
}

class FriendGenericWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_FriendList m_ScrollContent_FriendList;
    /*0x20*/ FriendWindowDropdown m_FriendWindowDropdown;
    /*0x28*/ LocalizeString m_FShipAmountText;
    /*0x30*/ LocalizeString m_FriendAmountText;
    /*0x38*/ LocalizeString m_DailyLimitText;
    /*0x40*/ UnityEngine.GameObject m_NotFriend;
    /*0x48*/ FriendSortType m_eSortType;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SFriend> m_curFriendList;

    /*0x11df0a8*/ FriendGenericWindow();
    /*0x11ddc44*/ void OnEnable();
    /*0x11de22c*/ void OnDisable();
    /*0x11de51c*/ void InitializeWindow();
    /*0x11de638*/ void SetViewStatus();
    /*0x11de55c*/ void InitializeScroll();
    /*0x11deb34*/ void HandlerScrollContent(int _index, FriendEntity _instance);
    /*0x11debb8*/ void OpenManage();
    /*0x11dede4*/ void AllRecvSendFriendPoint();
    /*0x11df038*/ void CallbackProtocolAllRecvSend();
    /*0x11df05c*/ void HandlerDropdown(FriendSortType _type);
    /*0x11df084*/ void HandlerChangeFriendState();
    /*0x11df128*/ void <OpenManage>b__14_0();
}

class FriendManageEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeStateEvent;
    /*0x18*/ LocalizeString m_PlayerName;
    /*0x20*/ LocalizeString m_TotalPower;
    /*0x28*/ UnityEngine.UI.Button m_RequestBtn;
    /*0x30*/ LocalizeString m_RequestBtnText;
    /*0x38*/ UnityEngine.GameObject m_RequestBtnObject;
    /*0x40*/ UnityEngine.GameObject m_SelectBtnObject;
    /*0x48*/ PlayerProfileSlot m_ProfileSlot;
    /*0x50*/ FriendManageType m_eType;
    /*0x58*/ PTShare.Define.SPlayer m_PlayerInfo;
    /*0x60*/ PTShare.Define.SSearchPlayer m_PlayerSearchInfo;

    static /*0x11e04dc*/ FriendManageEntity();
    static /*0x11de138*/ void add_OnChangeStateEvent(System.Action value);
    static /*0x11de044*/ void remove_OnChangeStateEvent(System.Action value);
    /*0x11e04d4*/ FriendManageEntity();
    /*0x11df334*/ void InitializeEntity(FriendManageType _eType, PTShare.Define.SPlayer _player);
    /*0x11df4a4*/ void InitializeEntity(FriendManageType _eType, PTShare.Define.SSearchPlayer _player);
    /*0x11df344*/ void SetViewStatus(PTShare.Define.SPlayer _info);
    /*0x11df4b4*/ void SetViewStatus(PTShare.Define.SSearchPlayer _info);
    /*0x11df614*/ void SetButton();
    /*0x11df8a0*/ void SetActiveButton(bool _request, bool _select);
    /*0x11df8f0*/ void OnClickRequestButton();
    /*0x11dfd4c*/ void OnClickAcceptButton();
    /*0x11dff7c*/ void OnClickIgnoreButton();
    /*0x11e01ac*/ void CallbackProtocolRemoveBlacklist();
    /*0x11e0224*/ void CallbackProtocolInviteFriend();
    /*0x11e029c*/ void CallbackProtocolAcceptFriend();
    /*0x11e045c*/ void CallbackProtocolDenyFriend();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ PTShare.Define.SPlayer _info;

        /*0x10a05ec*/ <>c__DisplayClass15_0();
        /*0x10a05f4*/ void <SetViewStatus>b__0();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ PTShare.Define.SSearchPlayer _info;

        /*0x10a0614*/ <>c__DisplayClass16_0();
        /*0x10a061c*/ void <SetViewStatus>b__0();
    }
}

class FriendMercenaryWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<MercenarySlotEntity> m_liSoldierSlot;
    /*0x20*/ HeroInventoryPage_Rent m_RentInventoryPage;
    /*0x28*/ LocalizeString m_WeekTime;
    /*0x30*/ System.Collections.IEnumerator m_ieTimer;
    /*0x38*/ System.Collections.IEnumerator m_ieRefreshTimer;

    /*0x10a4200*/ FriendMercenaryWindow();
    /*0x10a3854*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> get_curRentList();
    /*0x10a38d4*/ void OnEnable();
    /*0x10a3a28*/ void OnDisable();
    /*0x10a3b2c*/ void InitializeWindow();
    /*0x10a3d14*/ void Initialize();
    /*0x10a3b50*/ void ClearMercenarySlot();
    /*0x10a3d4c*/ void SetMercenarySlot();
    /*0x10a3eec*/ void OnClickMercenaryManage();
    /*0x10a3c34*/ void LoadMercenaryList();
    /*0x10a4074*/ void CallbackLoadMercenary();
    /*0x10a40d8*/ void HandlerReturnMercenary();
    /*0x10a3e98*/ void StartTimer();
    /*0x10a40dc*/ void StopCoroutines();
    /*0x10a4128*/ System.Collections.IEnumerator CoTimer();
    /*0x10a4194*/ System.Collections.IEnumerator CoRefreshTimer();

    class <>c
    {
        static /*0x0*/ FriendMercenaryWindow.<> <>9;
        static /*0x8*/ System.Action <>9__13_1;
        static /*0x10*/ System.Action <>9__13_0;

        static /*0x10a20b0*/ <>c();
        /*0x10a2110*/ <>c();
        /*0x10a2118*/ void <OnClickMercenaryManage>b__13_0();
        /*0x10a23c0*/ void <OnClickMercenaryManage>b__13_1();
    }

    class <CoTimer>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FriendMercenaryWindow <>4__this;

        /*0x10a25d4*/ <CoTimer>d__19(int <>1__state);
        /*0x10a2600*/ void System.IDisposable.Dispose();
        /*0x10a2604*/ bool MoveNext();
        /*0x10a2be8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a2bf0*/ void System.Collections.IEnumerator.Reset();
        /*0x10a2c30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshTimer>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FriendMercenaryWindow <>4__this;

        /*0x10a2440*/ <CoRefreshTimer>d__20(int <>1__state);
        /*0x10a246c*/ void System.IDisposable.Dispose();
        /*0x10a2470*/ bool MoveNext();
        /*0x10a2584*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a258c*/ void System.Collections.IEnumerator.Reset();
        /*0x10a25cc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FriendWindowDropdown : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<FriendWindowDropdown.FriendToggle> m_liToggle;
    /*0x20*/ UnityEngine.GameObject m_ToggleBackground;
    /*0x28*/ UnityEngine.GameObject m_ToggleTemplete;
    /*0x30*/ UnityEngine.GameObject m_ToggleArrow;
    /*0x38*/ LocalizeString m_MainText;
    /*0x40*/ bool m_bIsShow;
    /*0x44*/ int _nArrIndex;
    /*0x48*/ System.Action<FriendSortType> OnChangeDropdownEvent;

    /*0x10a59fc*/ FriendWindowDropdown();
    /*0x10a5258*/ void add_OnChangeDropdownEvent(System.Action<FriendSortType> value);
    /*0x10a52f8*/ void remove_OnChangeDropdownEvent(System.Action<FriendSortType> value);
    /*0x10a5398*/ void OnEnable();
    /*0x10a5460*/ void OnDisable();
    /*0x10a54f0*/ void InitializeDropdown(FriendSortType _type);
    /*0x10a59c4*/ void ToggleDropdown();
    /*0x10a5718*/ void ViewDropdown(bool _isShow);
    /*0x10a5808*/ void SetDropdown();
    /*0x10a5520*/ void SetDropdownName(FriendSortType _type);
    /*0x10a59d4*/ void HandlerDropDown(FriendSortType _type);

    class FriendToggle
    {
        /*0x10*/ FriendSortType type;
        /*0x18*/ string keyName;
        /*0x20*/ UnityEngine.UI.Toggle toggle;

        /*0x10a2d2c*/ FriendToggle();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ FriendSortType _sortType;
        /*0x18*/ FriendWindowDropdown <>4__this;

        /*0x10a2c38*/ <>c__DisplayClass16_0();
        /*0x10a2c40*/ void <SetDropdown>b__0(bool ison);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ FriendSortType _type;

        /*0x10a2d00*/ <>c__DisplayClass17_0();
        /*0x10a2d08*/ bool <SetDropdownName>b__0(FriendWindowDropdown.FriendToggle x);
    }
}

class MercenaryLendRequestEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ HeroSlotInventory m_HeroSlot;
    /*0x20*/ PlayerProfileSlot m_ProfileSlot;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_TotalPower;
    /*0x38*/ PTShare.Define.SHero m_HeroInfo;
    /*0x40*/ long m_nPlayerid;
    /*0x48*/ PTShare.Define.SStatBonus m_StatBonus;
    /*0x50*/ PTShare.Define.SPlayer m_FriendInfo;

    static /*0x2b3cfa4*/ MercenaryLendRequestEntity();
    static /*0x2b3c484*/ void add_OnChangeEvent(System.Action value);
    static /*0x2b3c578*/ void remove_OnChangeEvent(System.Action value);
    /*0x2b3cf9c*/ MercenaryLendRequestEntity();
    /*0x2b3c66c*/ void InitializeEntity(long _reqPlayerid, PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
    /*0x2b3c758*/ void SetStatusView();
    /*0x2b3c948*/ void OnClickConfirm();
    /*0x2b3cb80*/ void OnClickIgnore();
    /*0x2b3cdb8*/ void CallbackHeroSlotClick(PTShare.Define.SHero _hero);
    /*0x2b3ceac*/ void CallbackProtocolConfirm();
    /*0x2b3cf24*/ void CallbackProtocolIgnore();
    /*0x2b3cfa8*/ void <SetStatusView>b__12_0();
}

class MercenaryLendedEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlot m_SlotInfo;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_TotalPower;
    /*0x30*/ PTShare.Define.SMercenaryLended m_LendedInfo;
    /*0x38*/ PTShare.Define.SFriend m_FriendInfo;
    /*0x40*/ PTShare.Define.SHero m_HeroInfo;

    /*0x2b3d2f0*/ MercenaryLendedEntity();
    /*0x2b3cfc8*/ void InitializeEntity(PTShare.Define.SMercenaryLended _lended);
    /*0x2b3d0d8*/ void SetStatusView();
    /*0x2b3d1fc*/ void OnClickHeroSlot(PTShare.Define.SHero _hero);
}

class MercenaryRentEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ HeroSlot m_SlotInfo;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_TotalPower;
    /*0x30*/ LocalizeString m_ProcessText;
    /*0x38*/ LocalizeString m_InviteCount;
    /*0x40*/ UnityEngine.GameObject m_RequestParent;
    /*0x48*/ UnityEngine.GameObject m_RentedParent;
    /*0x50*/ UnityEngine.GameObject m_InviteButton;
    /*0x58*/ UnityEngine.GameObject m_CancelButton;
    /*0x60*/ PTShare.Define.SMercenaryRent m_RentInfo;

    static /*0x2b404a4*/ MercenaryRentEntity();
    static /*0x2b3f86c*/ void add_OnChangeEvent(System.Action value);
    static /*0x2b3f960*/ void remove_OnChangeEvent(System.Action value);
    /*0x2b4049c*/ MercenaryRentEntity();
    /*0x2b3fa54*/ void InitializeEntity(PTShare.Define.SMercenaryRent _rent);
    /*0x2b3fa5c*/ void SetStatusView();
    /*0x2b3fcf4*/ void OnClickRequest();
    /*0x2b4017c*/ void OnClickCancel();
    /*0x2b402a8*/ void OnClickHeroSlot(PTShare.Define.SHero _hero);
    /*0x2b40388*/ void CallbackProtocolRent();
    /*0x2b40424*/ void CallbackProtocolCancel();
    /*0x2b3fe38*/ bool IsVaildCondition();
}

class MercenarySlotEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_Foothold;
    /*0x38*/ LocalizeString m_Nickname;
    /*0x40*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x48*/ PTShare.Define.SMercenaryRent m_MercenaryInfo;
    /*0x50*/ PTShare.Define.SHero m_HeroInfo;

    /*0x2b411bc*/ MercenarySlotEntity();
    /*0x2b40ca4*/ void InitializeSlot(PTShare.Define.SMercenaryRent _mercenary);
    /*0x2b40d94*/ void SetViewStatus();
    /*0x2b40cf4*/ PTShare.Define.SHero ConvertMercenaryToHero(PTShare.Define.SMercenaryRent _mercenary);
    /*0x2b410b8*/ void OnClick();
}

class AtticBuyPopup : GuiBase
{
    /*0x40*/ Spine.Unity.SkeletonGraphic m_singleSkel;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_multiSkel;
    /*0x50*/ ParticleBase m_singleParticle;
    /*0x58*/ ParticleBase m_multiParticle;
    /*0x60*/ System.Collections.Generic.List<ItemTableRewardSlot> m_itemList;
    /*0x68*/ UnityEngine.Vector2 m_posMinMaxX;
    /*0x70*/ UnityEngine.Vector2 m_posMinMaxY;
    /*0x78*/ UnityEngine.Vector2 m_jumpPowerMinMax;
    /*0x80*/ UnityEngine.Vector2 m_jumpDurationMinMax;
    /*0x88*/ int m_jumpCount;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_curSkel;
    /*0xa0*/ bool m_isSingle;
    /*0xa1*/ bool m_isGacha;
    /*0xa8*/ System.Action m_animEndCallBack;

    /*0xf801e0*/ AtticBuyPopup();
    /*0xf7f88c*/ void OnCreate();
    /*0xf7f890*/ void OnDelete();
    /*0xf7f894*/ void OnEnter();
    /*0xf7f898*/ void OnExit();
    /*0xf7f924*/ void OnFinish();
    /*0xf7f928*/ void OnLeave();
    /*0xf7f92c*/ void OnStart();
    /*0xf7f930*/ void InitPopup(bool isSingle, System.Collections.Generic.List<Rewards> rewardList);
    /*0xf7fc54*/ void SetBox(bool isSingle);
    /*0xf7fd6c*/ void OnClick();
    /*0xf8009c*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0xf80148*/ void HandleAnimCompleteOpenBox();
    /*0xf7ffe4*/ System.Collections.IEnumerator CoLatePlayOpenSoundSingle();
    /*0xf80040*/ System.Collections.IEnumerator CoLatePlayOpenSound();
    /*0xf80174*/ System.Collections.IEnumerator CoShowReward();
    /*0xf802d0*/ void <InitPopup>b__22_1();

    class <>c
    {
        static /*0x0*/ AtticBuyPopup.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__22_0;

        static /*0xd9ee00*/ <>c();
        /*0xd9ee60*/ <>c();
        /*0xd9ee68*/ void <InitPopup>b__22_0(ItemTableRewardSlot data);
    }

    class <CoLatePlayOpenSoundSingle>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9f0b0*/ <CoLatePlayOpenSoundSingle>d__27(int <>1__state);
        /*0xd9f0dc*/ void System.IDisposable.Dispose();
        /*0xd9f0e0*/ bool MoveNext();
        /*0xd9f1ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9f1f4*/ void System.Collections.IEnumerator.Reset();
        /*0xd9f234*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLatePlayOpenSound>d__28 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9ee98*/ <CoLatePlayOpenSound>d__28(int <>1__state);
        /*0xd9eec4*/ void System.IDisposable.Dispose();
        /*0xd9eec8*/ bool MoveNext();
        /*0xd9f060*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9f068*/ void System.Collections.IEnumerator.Reset();
        /*0xd9f0a8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AtticBuyPopup <>4__this;
        /*0x28*/ int <count>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xd9f23c*/ <CoShowReward>d__29(int <>1__state);
        /*0xd9f268*/ void System.IDisposable.Dispose();
        /*0xd9f26c*/ bool MoveNext();
        /*0xd9f778*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9f780*/ void System.Collections.IEnumerator.Reset();
        /*0xd9f7c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AtticGachaButton : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x18*/ AtlasImage m_PriceIcon;
    /*0x20*/ LocalizeString m_PriceAmount;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ int m_nGachaIndex;
    /*0x38*/ TableData.TableData_Highgacha m_GachaInfo;
    /*0x40*/ bool m_bIsEnough;
    /*0x41*/ bool m_bIsSubPrice;
    /*0x44*/ PTShare.Define.Wealth m_ePriceType;
    /*0x48*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x4c*/ int m_nItemId;
    /*0x50*/ int m_nAmount;

    static /*0xf817c8*/ AtticGachaButton();
    /*0xf817c0*/ AtticGachaButton();
    /*0xf8033c*/ void InitializeButton(int _index, TableData.TableData_Highgacha _base);
    /*0xf80478*/ void InitialzePrice();
    /*0xf808b4*/ void Refresh();
    /*0xf804e8*/ void SetPriceButton();
    /*0xf808d8*/ void OnClick();
    /*0xf81034*/ bool InValidClickCondition();
    /*0xf81318*/ void SendBuyProtocol();
    /*0xf810e0*/ bool IsNotEnough();
    /*0xf806d8*/ bool IsPossiblePrice(string _priceType, string _priceArg1, string _priceArg2);
    /*0xf80380*/ void BindEvent();
    /*0xf815c0*/ void RemoveEvent();
    /*0xf816b0*/ void HandleRefresh();
    /*0xf816d4*/ Rewards GetLuckyHeroReward();
    /*0xf817cc*/ void <OnClick>b__16_1(bool _result);
    /*0xf817d8*/ void <SendBuyProtocol>b__18_0(System.Collections.Generic.List<int> buyResult);

    class <>c
    {
        static /*0x0*/ AtticGachaButton.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__16_0;

        static /*0xd9f7c8*/ <>c();
        /*0xd9f828*/ <>c();
        /*0xd9f830*/ void <OnClick>b__16_0(bool confirm);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;
        /*0x18*/ AtticGachaButton <>4__this;

        /*0xd9f834*/ <>c__DisplayClass18_0();
        /*0xd9f83c*/ void <SendBuyProtocol>b__1(int data);
    }
}

class AtticHeroSelectPopup : GuiBase
{
    /*0x40*/ WishSlot m_selectHeroSlot;
    /*0x48*/ HeroPropertySlotWindow m_propertySlotWindow;
    /*0x50*/ ScrollContent_HeroWishSlot m_scrollContent;
    /*0x58*/ UnityEngine.UI.Button m_selectButton;
    /*0x60*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_heroList;
    /*0x68*/ int m_selectHeroId;
    /*0x6c*/ int m_selectFaction;
    /*0x70*/ System.Action exitCallBack;

    /*0xf82a94*/ AtticHeroSelectPopup();
    /*0xf819ec*/ void OnCreate();
    /*0xf819f0*/ void OnDelete();
    /*0xf819f4*/ void OnEnter();
    /*0xf819f8*/ void OnExit();
    /*0xf81df0*/ void OnFinish();
    /*0xf81df4*/ void OnLeave();
    /*0xf81df8*/ void OnStart();
    /*0xf81d00*/ int GetCurrentHeroId();
    /*0xf81dfc*/ void InitPopup(System.Action exitCallBack);
    /*0xf82040*/ void InitPropertySlot();
    /*0xf820d0*/ void InitSelectHero(int tableId);
    /*0xf81d80*/ void Release();
    /*0xf82174*/ void UpdateHeroList();
    /*0xf82404*/ void UpdateButton();
    /*0xf82698*/ void HandleChangeFaction(int faction);
    /*0xf826a0*/ void HandleScrollContent(int index, WishPropertySlot obj);
    /*0xf827a0*/ void HandleSelectHero(TableData.TableData_Unitbase unitBase);
    /*0xf81e48*/ void BindEvent();
    /*0xf824a8*/ void RemoveEvent();
    /*0xf827dc*/ void OnClickExit();
    /*0xf827e8*/ void OnClickConfirm();
    /*0xf82b0c*/ void <OnExit>b__11_0(bool confirm);
    /*0xf82b4c*/ bool <UpdateHeroList>b__20_1(TableData.TableData_Unitbase x);
    /*0xf82b70*/ void <OnClickConfirm>b__28_0();

    class <>c
    {
        static /*0x0*/ AtticHeroSelectPopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__20_0;

        static /*0xd9fa9c*/ <>c();
        /*0xd9fafc*/ <>c();
        /*0xd9fb04*/ bool <UpdateHeroList>b__20_0(TableData.TableData_Unitbase x);
    }
}

class AtticPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x40*/ GachaCharacter m_atticCharacter;
    /*0x48*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x50*/ AtlasImage m_luckyIcon;
    /*0x58*/ AtlasImage m_heroSelectIcon;
    /*0x60*/ UnityEngine.GameObject m_reddot;
    /*0x68*/ AtticGachaButton[] m_atticGachaButtons;

    static /*0xf83c14*/ AtticPopup();
    /*0xf83c0c*/ AtticPopup();
    /*0xf83138*/ int GetSelectHeroId();
    /*0xf831b8*/ void OnCreate();
    /*0xf831bc*/ void OnDelete();
    /*0xf831c0*/ void OnEnter();
    /*0xf831c4*/ void OnExit();
    /*0xf832d0*/ void OnFinish();
    /*0xf832d4*/ void OnLeave();
    /*0xf832d8*/ void OnStart();
    /*0xf832dc*/ void InitPopup();
    /*0xf83424*/ void InitCurrencyTop();
    /*0xf835c4*/ void InitButtons();
    /*0xf836c0*/ void UpdateReddot();
    /*0xf8332c*/ void BindEvent();
    /*0xf83760*/ void RemoveEvent();
    /*0xf83850*/ void HandleRefresh();
    /*0xf8388c*/ void OnClickHelp();
    /*0xf83930*/ void OnClickPercent();
    /*0xf83af0*/ void OnClickHeroSelect();
    /*0xf83c18*/ void <OnExit>b__11_0();
    /*0xf83c20*/ void <OnClickPercent>b__23_0();
    /*0xf83c90*/ void <OnClickHeroSelect>b__24_0();
}

class AtticRewardPercentPopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardPercentSlot m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x50*/ System.Collections.Generic.List<float> m_dropPercentList;
    /*0x58*/ System.Action exitCallBack;

    /*0xf843c0*/ AtticRewardPercentPopup();
    /*0xf83d24*/ void OnCreate();
    /*0xf83d28*/ void OnDelete();
    /*0xf83d2c*/ void OnEnter();
    /*0xf83d30*/ void OnExit();
    /*0xf83e94*/ void OnFinish();
    /*0xf83e98*/ void OnLeave();
    /*0xf83e9c*/ void OnStart();
    /*0xf83a4c*/ void InitPopup(System.Action exitCallBack);
    /*0xf83f7c*/ void UpdateData();
    /*0xf842c0*/ void HandleScrollContent(int index, RewardPercentSlot obj);
    /*0xf83ea0*/ void BindEvent();
    /*0xf83dc0*/ void RemoveEvent();
}

class GachaCharacter : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<bool> OnMoveDest;
    /*0x18*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x20*/ UnityEngine.Vector3 m_moveDist;
    /*0x2c*/ UnityEngine.Vector3 m_center;
    /*0x38*/ UnityEngine.Vector3 m_defaultScale;
    /*0x44*/ float m_speed;
    /*0x48*/ UnityEngine.RectTransform m_singleDest;
    /*0x50*/ UnityEngine.RectTransform m_multiDest;
    /*0x58*/ string m_curAnim;
    /*0x60*/ UnityEngine.Coroutine m_coroutine;
    /*0x68*/ int m_moveDest;
    /*0x70*/ System.Action m_callBack;

    static /*0x10bc780*/ GachaCharacter();
    /*0x10bc6f4*/ GachaCharacter();
    /*0x10bc1cc*/ void OnDisable();
    /*0x10ab964*/ void InitCharacter(int tableId);
    /*0x10bc24c*/ void SetAnimation(string anim, bool loop, System.Action callBack);
    /*0x10bc3e4*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x10bc398*/ void HandleOnMove();
    /*0x10bc504*/ void HandleOnMoveBox(bool isSingle);
    /*0x10bc568*/ void OnClick();
    /*0x10bc498*/ System.Collections.IEnumerator CoMove();

    class <CoMove>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector3 <dir>5__2;
        /*0x34*/ UnityEngine.Vector3 <dest>5__3;
        /*0x40*/ float <dist>5__4;

        /*0xf65180*/ <CoMove>d__19(int <>1__state);
        /*0xf651ac*/ void System.IDisposable.Dispose();
        /*0xf651b0*/ bool MoveNext();
        /*0xf654e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf654f0*/ void System.Collections.IEnumerator.Reset();
        /*0xf65530*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RewardPercentSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_itemInfoSlot;
    /*0x20*/ LocalizeString m_itemTitle;
    /*0x28*/ LocalizeString m_itemPercent;

    /*0x11a9d28*/ RewardPercentSlot();
    /*0x11a98c8*/ void InitSlot(Rewards item, float percent);
    /*0x11a9c84*/ void SetTitle(string value);
    /*0x11a9b9c*/ void SetPercent(float percent);
}

class ScrollContent_RewardPercentSlot : ScrollContent<RewardPercentSlot>
{
    /*0xe1b4c4*/ ScrollContent_RewardPercentSlot();
}

class GachaBonusSilder : UnityEngine.MonoBehaviour
{
    static int _nMaxCount = 100;
    /*0x18*/ UnityEngine.UI.Slider m_Silder;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ UnityEngine.GameObject m_FadeBackground;
    /*0x30*/ UnityEngine.GameObject m_RewardList;
    /*0x38*/ AtlasImage m_GeneralIcon;
    /*0x40*/ AtlasImage m_CardIcon;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> m_liCurBonus;
    /*0x50*/ GachaBonusSilder.SBonusIndex m_CurBonusIndex;
    /*0x60*/ System.Collections.IEnumerator m_IEnumarator;
    /*0x68*/ bool m_bIsReward;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_liRewards;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_liTotalRewards;

    /*0x10ba73c*/ GachaBonusSilder();
    /*0x10b9830*/ int get_OldBonus();
    /*0x10b9884*/ void set_OldBonus(int value);
    /*0x10b98dc*/ int get_CurBonus();
    /*0x10b9930*/ System.Collections.Generic.List<int> get_CurrentReward();
    /*0x10b9984*/ bool get_IsReceiveBonus();
    /*0x10b99d8*/ void set_IsReceiveBonus(bool value);
    /*0x10b9a34*/ void OnDisable();
    /*0x10b9ab4*/ void InitializeSilder();
    /*0x10b9ab8*/ void SetCurrentReward();
    /*0x10b9fe4*/ void SetSilderAmount();
    /*0x10ba0dc*/ void SetSilder(int _amount, int _maxamount);
    /*0x10b9cc8*/ void SetGachaBonus();
    /*0x10b9eb4*/ void SetSBonusIndex();
    /*0x10ba20c*/ void SetActiveReward(bool _enable);
    /*0x10ba25c*/ void ViewReward();
    /*0x10b9aac*/ void HideReward();
    /*0x10ba4f8*/ void StartReceiveBonus();
    /*0x10ba564*/ System.Collections.IEnumerator CoReceiveProcess();
    /*0x10ba5d0*/ void GetBonusReward();
    /*0x10ba7d4*/ void <SetGachaBonus>b__29_0(TableData.TableData_Gachabonus x);
    /*0x10ba884*/ bool <CoReceiveProcess>b__35_0();
    /*0x10ba88c*/ void <GetBonusReward>b__36_0();

    struct SBonusIndex
    {
        /*0x10*/ int Before;
        /*0x14*/ int Current;
        /*0x18*/ int After;
    }

    class <>c
    {
        static /*0x0*/ GachaBonusSilder.<> <>9;
        static /*0x8*/ System.Predicate<Rewards> <>9__26_0;

        static /*0xf64858*/ <>c();
        /*0xf648b8*/ <>c();
        /*0xf648c0*/ bool <SetCurrentReward>b__26_0(Rewards x);
    }

    class <CoReceiveProcess>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaBonusSilder <>4__this;

        /*0xf648d0*/ <CoReceiveProcess>d__35(int <>1__state);
        /*0xf648fc*/ void System.IDisposable.Dispose();
        /*0xf64900*/ bool MoveNext();
        /*0xf64bc8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64bd0*/ void System.Collections.IEnumerator.Reset();
        /*0xf64c10*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaButtonWindow : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    static int _nStartKeyIndex = 1;
    static int _nDefArrIndex = 0;
    static int _nNextArrIndex = 1;
    static float _fLimitDistance = 200;
    static float _fLimitNormalize = 0.800000011920929;
    /*0x18*/ GachaSelectScroll m_cGachaSelectScroll;
    /*0x20*/ LocalizeString m_TitleText;
    /*0x28*/ UnityEngine.UI.Outline m_TitleOutline;
    /*0x30*/ UnityEngine.GameObject m_ChangeButton;
    /*0x38*/ UnityEngine.GameObject m_TimerParent;
    /*0x40*/ LocalizeString m_TimerText;
    /*0x48*/ System.Collections.Generic.List<GachaPriceButton> m_liPriceButton;
    /*0x50*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x58*/ UnityEngine.UI.Image m_CanterImage;
    /*0x60*/ int m_nCurrentType;
    /*0x64*/ int m_nCurPropertyType;
    /*0x68*/ bool m_bIsPlayingAnimation;
    /*0x70*/ System.Collections.IEnumerator m_iePropertyTimer;
    /*0x78*/ System.Collections.IEnumerator m_ieAnimationTimer;
    /*0x80*/ System.Collections.IEnumerator m_ieRefreshTimer;
    /*0x88*/ UnityEngine.Vector3 m_vecInputTouch;
    /*0x94*/ int _CurPropertyType;
    /*0x98*/ TableData.TableData_Gacha _MainGachaInfo;
    /*0xa0*/ TableData.TableData_Gacha _SubGachaInfo;

    /*0x10bc12c*/ GachaButtonWindow();
    /*0x10baad0*/ void OnEnable();
    /*0x10bac54*/ void OnDisable();
    /*0x10bad80*/ void InitalizeWindow();
    /*0x10bae14*/ void SetTitleWithButton();
    /*0x10bb168*/ void SetActivePropertyGachaObjects(bool _enable);
    /*0x10bb1b0*/ void SetLocalizeTitle();
    /*0x10bb52c*/ void SetCenterImage();
    /*0x10bb038*/ bool IsPropertyGacha();
    /*0x10bb8c8*/ void OnClickChangeButton();
    /*0x10bb950*/ void OnClickMoveGachaType(bool _isLeft);
    /*0x10bbb90*/ void OnClickHelp();
    /*0x10bbb34*/ void StartCenterAnimation();
    /*0x10bbca8*/ System.Collections.IEnumerator CoAnimation();
    /*0x10bb800*/ void StartPropertyTimer(bool _enable);
    /*0x10bbd14*/ System.Collections.IEnumerator CoPropertyTimer();
    /*0x10bb864*/ void StartRefreshTimer(bool _enable);
    /*0x10bbd80*/ System.Collections.IEnumerator CoRefreshTimer();
    /*0x10bbdec*/ void HandlerChangeProperty(int _type);
    /*0x10bbe04*/ void HandlerDailyUpdate();
    /*0x10bbeb8*/ void HandlerSelectScrollItem(int _index);
    /*0x10bbf78*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10bc0a8*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10bc120*/ void SetTouchPosition(UnityEngine.Vector3 _pos);
    /*0x10bc008*/ void EndTouchEvent(UnityEngine.Vector3 _pos);
    /*0x10bc168*/ void <HandlerDailyUpdate>b__42_0();

    class <CoAnimation>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaButtonWindow <>4__this;

        /*0xf64c18*/ <CoAnimation>d__36(int <>1__state);
        /*0xf64c44*/ void System.IDisposable.Dispose();
        /*0xf64c48*/ bool MoveNext();
        /*0xf64de8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64df0*/ void System.Collections.IEnumerator.Reset();
        /*0xf64e30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPropertyTimer>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaButtonWindow <>4__this;

        /*0xf64e38*/ <CoPropertyTimer>d__38(int <>1__state);
        /*0xf64e64*/ void System.IDisposable.Dispose();
        /*0xf64e68*/ bool MoveNext();
        /*0xf64fa0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64fa8*/ void System.Collections.IEnumerator.Reset();
        /*0xf64fe8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshTimer>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaButtonWindow <>4__this;

        /*0xf64ff0*/ <CoRefreshTimer>d__40(int <>1__state);
        /*0xf6501c*/ void System.IDisposable.Dispose();
        /*0xf65020*/ bool MoveNext();
        /*0xf65130*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf65138*/ void System.Collections.IEnumerator.Reset();
        /*0xf65178*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaEpicEventProcess : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_eventSpineBG;
    /*0x28*/ Spine.Unity.SkeletonGraphic m_eventSpine;
    /*0x30*/ GachaResultCard m_resultCard;
    /*0x38*/ ParticleBase m_effect01;
    /*0x40*/ ParticleBase m_effect02;
    /*0x48*/ ParticleBase m_effect03;
    /*0x50*/ UnityEngine.Vector2 m_vecDefaultPosition;
    /*0x58*/ float m_fWaitTime;
    /*0x5c*/ float m_fAddScale;
    /*0x60*/ float m_fMoveTime;
    /*0x68*/ GachaResultCard copyCard;
    /*0x70*/ System.Collections.IEnumerator ieCompleteAnimation;
    /*0x78*/ System.Action OnEndEventCallback;

    /*0x10bdbb4*/ GachaEpicEventProcess();
    /*0x10bd1a8*/ void InitializeEvent(GachaResultCard _card, System.Action _endEventCallback);
    /*0x10bd5dc*/ void CompleteAnimationEvent(Spine.TrackEntry trackEntry);
    /*0x10bd730*/ void OpenAnimationEvent(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x10bd6e4*/ void StartAnimation();
    /*0x10bda00*/ System.Collections.IEnumerator CoCompleteWait();
    /*0x10bda6c*/ System.Collections.IEnumerator CoCompleteAnimation();
    /*0x10bd570*/ System.Collections.IEnumerator CoSetAnimColor();
    /*0x10bdad8*/ float CardMagnitude();
    /*0x10bdb80*/ void SetActive(bool _bEnable);
    /*0x10bd518*/ void SetActiveCard(bool _bEnable);
    /*0x10bd4b4*/ void SetActiveEffect(ParticleBase _base, bool _bEnable);
    /*0x10bd554*/ void SetAlpha(float _fAlpha);

    class <CoCompleteWait>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaEpicEventProcess <>4__this;
        /*0x28*/ float <waitTime>5__2;

        /*0xf65810*/ <CoCompleteWait>d__18(int <>1__state);
        /*0xf6583c*/ void System.IDisposable.Dispose();
        /*0xf65840*/ bool MoveNext();
        /*0xf65914*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6591c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6595c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCompleteAnimation>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaEpicEventProcess <>4__this;
        /*0x28*/ float <t>5__2;
        /*0x2c*/ float <power>5__3;
        /*0x30*/ UnityEngine.Vector3 <startPosition>5__4;
        /*0x3c*/ UnityEngine.Vector3 <endPosition>5__5;

        /*0xf65570*/ <CoCompleteAnimation>d__19(int <>1__state);
        /*0xf6559c*/ void System.IDisposable.Dispose();
        /*0xf655a0*/ bool MoveNext();
        /*0xf657c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf657c8*/ void System.Collections.IEnumerator.Reset();
        /*0xf65808*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSetAnimColor>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaEpicEventProcess <>4__this;

        /*0xf65964*/ <CoSetAnimColor>d__20(int <>1__state);
        /*0xf65990*/ void System.IDisposable.Dispose();
        /*0xf65994*/ bool MoveNext();
        /*0xf65a74*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf65a7c*/ void System.Collections.IEnumerator.Reset();
        /*0xf65abc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaLimitCard : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ AtlasImage m_CardImage;
    /*0x20*/ LocalizeString m_PropertyName;
    /*0x28*/ AtlasImage m_LimitIcon;
    /*0x30*/ LocalizeString m_LimitAmount;
    /*0x38*/ AtlasImage m_SelectEffect;
    /*0x40*/ int m_nPropertyType;
    /*0x44*/ int m_nBuyPrice;
    /*0x48*/ bool m_bIsBuy;
    /*0x50*/ UnityEngine.Color[] m_arrPropertyColor;
    /*0x58*/ System.Collections.IEnumerator m_ieAnimation;
    /*0x60*/ bool m_bIsPlayingAnimation;

    static /*0xebebf0*/ GachaLimitCard();
    static /*0xebda50*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xebdb44*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xebea34*/ GachaLimitCard();
    /*0xebdc38*/ void OnEnable();
    /*0xebdc78*/ void InitializeCard(int _type);
    /*0xebe040*/ void SetActiveSelectEffect(bool _enable);
    /*0xebdd8c*/ void SetResources(int _type);
    /*0xebe058*/ void SetUpdateTime();
    /*0xebe14c*/ void OnClick();
    /*0xebe970*/ void CallbackBuyFaction();
    /*0xebe974*/ void StartAnimation();
    /*0xebe9c8*/ System.Collections.IEnumerator CoAnimation();
    /*0xebe6d8*/ bool IsTimeLimit();
    /*0xebe930*/ bool IsVaildPrice();
    /*0xebebf4*/ void <OnClick>b__19_0(bool _result);

    class <CoAnimation>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaLimitCard <>4__this;

        /*0xf65ac4*/ <CoAnimation>d__22(int <>1__state);
        /*0xf65af0*/ void System.IDisposable.Dispose();
        /*0xf65af4*/ bool MoveNext();
        /*0xf65d2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf65d34*/ void System.Collections.IEnumerator.Reset();
        /*0xf65d74*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaPercentCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_frame;
    /*0x20*/ AtlasImage m_backGround;
    /*0x28*/ AtlasImage m_icon;
    /*0x30*/ LocalizeString m_percent;

    /*0xec08a0*/ GachaPercentCharacter();
    /*0xec05e8*/ void Init(int characterTableId, float percent);
    /*0xec072c*/ void InitSlime(int index, float percent);
}

class GachaPercentDesc : UnityEngine.MonoBehaviour
{
    static /*0x0*/ float PADDING;
    static /*0x4*/ int WISH_COUNT;
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ LocalizeString m_GradeName;
    /*0x28*/ AtlasImage m_GradeImage;
    /*0x30*/ UnityEngine.UI.Outline m_GradeOutline;
    /*0x38*/ UnityEngine.UI.Shadow m_GradeShadow;
    /*0x40*/ LocalizeString m_Percent;
    /*0x48*/ UnityEngine.UI.Outline m_percentOutline;
    /*0x50*/ ScrollContent_GachaPercentCharacter m_scrollContent;
    /*0x58*/ bool m_useTablePercent;
    /*0x5c*/ int m_dropPattern;
    /*0x60*/ int m_grade;
    /*0x64*/ float m_percent;
    /*0x68*/ float m_defaultPercent;
    /*0x6c*/ bool m_activeWishList;
    /*0x70*/ System.Collections.Generic.List<int> m_wishList;
    /*0x78*/ float m_wishPercent;
    /*0x7c*/ GachaFactionType m_factionType;
    /*0x80*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> m_gachaPercent;
    /*0x88*/ TableData.TableData_Gacha m_gachaData;

    static /*0xec1d44*/ GachaPercentDesc();
    /*0xec1c7c*/ GachaPercentDesc();
    /*0xec08a8*/ void OnDisable();
    /*0xec097c*/ void InitializeDesc(TableData.TableData_Gacha gachaData, int _grade, float _percent, int dropPattern, GachaFactionType factionType);
    /*0xec0b00*/ void SetTitle(int _grade, float _percent);
    /*0xec18c8*/ void SetGradeImage(int _grade);
    /*0xec1648*/ void SetGradeColor(UnityEngine.Color _color);
    /*0xec165c*/ void SetGradeOutline(UnityEngine.Color _color);
    /*0xec1724*/ void SetGradeShadow(UnityEngine.Color _color);
    /*0xec17ec*/ void SetPercentColor(UnityEngine.Color _color);
    /*0xec1800*/ void SetPercentOutline(UnityEngine.Color _color);
    /*0xec0ef8*/ void SetGachaPercentData();
    /*0xec1574*/ void SetUnitPercentList();
    /*0xec10cc*/ void SetWishData();
    /*0xec1a90*/ void HandleScrollContent(int index, GachaPercentCharacter obj);
    /*0xec1964*/ void UpdateSize();

    class <>c__DisplayClass32_0
    {
        /*0x10*/ int factionType;
        /*0x18*/ GachaPercentDesc <>4__this;

        /*0xf667c0*/ <>c__DisplayClass32_0();
        /*0xf667c8*/ void <SetWishData>b__0(int data);
    }

    class <>c__DisplayClass32_1
    {
        /*0x10*/ int i;
        /*0x18*/ GachaPercentDesc.<> CS$<>8__locals1;

        /*0xf66864*/ <>c__DisplayClass32_1();
        /*0xf6686c*/ bool <SetWishData>b__1(TableData.TableData_Gachaunitpercent data);
    }
}

class GachaPriceButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_PriceIcon;
    /*0x20*/ LocalizeString m_PriceAmount;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ bool m_bIsSingle;
    /*0x3c*/ int m_nGachaIndex;
    /*0x40*/ int m_nPropertyType;
    /*0x48*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x50*/ bool m_bIsEnough;
    /*0x51*/ bool m_bIsSubPrice;
    /*0x54*/ PTShare.Define.Wealth m_ePriceType;
    /*0x58*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x5c*/ int m_nItemId;
    /*0x60*/ int m_nAmount;

    /*0xec3614*/ GachaPriceButton();
    /*0xec2290*/ void InitializeButton(int _index, TableData.TableData_Gacha _base, bool _isSingle, int _type);
    /*0xec22c4*/ void InitialzePrice();
    /*0xec23ac*/ void SetPriceButton();
    /*0xec2790*/ void OnClick();
    /*0xec2c1c*/ bool InValidClickCondition();
    /*0xec2d54*/ void SendBuyProtocol();
    /*0xec330c*/ void CallbackBuyGacha(string[] args);
    /*0xec30b4*/ bool IsTimeLimit();
    /*0xec2e7c*/ bool IsNotEnough();
    /*0xec25b4*/ bool IsPossiblePrice(string _priceType, string _priceArg1, string _priceArg2);
    /*0xec361c*/ void <OnClick>b__17_0(bool _result);
}

class GachaPropertyCard : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ AtlasImage m_SelectEffect;
    /*0x20*/ AtlasImage m_CardImage;
    /*0x28*/ LocalizeString m_PropertyName;
    /*0x30*/ int m_nPropertyType;
    /*0x38*/ UnityEngine.Color[] m_arrPropertyColor;

    static /*0xec3c38*/ GachaPropertyCard();
    static /*0xec3628*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xec371c*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xec3a7c*/ GachaPropertyCard();
    /*0xec3810*/ void InitializeCard(int _type);
    /*0xec39d0*/ void OnClick();
    /*0xec3a64*/ void OnSelectCard(bool _enable);
}

class GachaResultCard : UnityEngine.MonoBehaviour
{
    static int _commonGrade = 1;
    static int _rareGrade = 2;
    static int _epicGrade = 4;
    /*0x18*/ UnityEngine.GameObject m_Parent;
    /*0x20*/ UnityEngine.GameObject m_CardButton;
    /*0x28*/ UnityEngine.GameObject m_AmountParent;
    /*0x30*/ AtlasImage m_CardBackground;
    /*0x38*/ AtlasImage m_CardFrame;
    /*0x40*/ AtlasImage m_newIconImage;
    /*0x48*/ UnityEngine.UI.Image m_TexutreIllust;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_SpineIllust;
    /*0x58*/ LocalizeString m_CardName;
    /*0x60*/ LocalizeString m_Amount;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_GeneralSkeleton;
    /*0x70*/ Spine.Unity.SkeletonGraphic m_PropertySkeleton;
    /*0x78*/ ParticleBase m_EpicEffect01;
    /*0x80*/ ParticleBase m_EpicEffect02;
    /*0x88*/ ParticleBase m_RareEffect01;
    /*0x90*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x98*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0xa0*/ int m_nIndex;
    /*0xa4*/ bool m_bIsProperty;
    /*0xa8*/ int m_nFactionID;
    /*0xb0*/ System.Action<bool> CallbackOpenCard;
    /*0xb8*/ bool m_bIsPlayingAnimation;
    /*0xb9*/ bool m_bIsOpen;
    /*0xba*/ bool m_bIsSingle;
    /*0xbb*/ bool m_bIsSingleSlideAnimation;
    /*0xbc*/ bool m_bIsPlayVoice;

    /*0xec5c68*/ GachaResultCard();
    /*0xec42dc*/ GachaEpicEventProcess get_m_EpicEventProcess();
    /*0xec4350*/ void InitializeCard(bool _isPropertyCard, int _indexId, int _type, bool isSingle, System.Action<bool> _callback);
    /*0xec4bd8*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xec4c9c*/ void SetGeneralSekeletonAnimation();
    /*0xec4d88*/ void OnClick(bool _bDonEpicEvent);
    /*0xec53bc*/ void OnClickEpicSound(bool _bDonEpicEvent);
    /*0xec571c*/ void CardOpenHandler(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xec58a8*/ void RunEffect01();
    /*0xec5948*/ void RunEffect02();
    /*0xec59b4*/ void RunFinally();
    /*0xec5254*/ void RunFinish(bool playVoice);
    /*0xec5ab0*/ void ShowEpicEffect();
    /*0xec5b24*/ void SetParticleParent(UnityEngine.Transform parent);
    /*0xec4bb8*/ void SetActiveButton(bool _enable);
    /*0xec4a08*/ void SetAlpha(float alpha);
    /*0xec5b94*/ void SetActiveIllust(bool _monsterEnable, bool _spineEnable);
    /*0xec5c00*/ void SetOffVoice();
    /*0xec4aac*/ void SetIllustSpine();
    /*0xec4b94*/ bool IsSlime();
    /*0xec4b70*/ bool IsEpic();
    /*0xec5a8c*/ bool IsRare();
    /*0xec5c08*/ bool IsPlayingAnimation();
    /*0xec5c10*/ bool IsOpen();
    /*0xec5c18*/ int GetIndex();
    /*0xec5c20*/ void CopyInitialize(GachaResultCard _card, bool _bCopyCallback);
    /*0xec51d8*/ void FastShow(bool _bIgnoreEffect);
    /*0xec5ccc*/ void <OnClick>b__34_0();
    /*0xec5cd4*/ void <OnClickEpicSound>b__35_0();
}

class GachaRewardPopup : RewardPopupBase
{
    /*0x60*/ UnityEngine.GameObject m_RewardTitleParent;
    /*0x68*/ ParticleBase m_RewardEffect;
    /*0x70*/ System.Collections.IEnumerator m_ieAnimate;

    /*0xec75a4*/ GachaRewardPopup();
    /*0xec7434*/ void OnCreate();
    /*0xec7438*/ void OnDelete();
    /*0xec743c*/ void OnEnter();
    /*0xec752c*/ void OnFinish();
    /*0xec7530*/ void OnLeave();
    /*0xec7534*/ void OnStart();
    /*0xec74e0*/ void StartAnimate();
    /*0xec7538*/ System.Collections.IEnumerator CoAnimate();
    /*0xec74c8*/ void SetActiveRewardTitle(bool _bEnable);

    class <CoAnimate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaRewardPopup <>4__this;

        /*0xf67550*/ <CoAnimate>d__10(int <>1__state);
        /*0xf6757c*/ void System.IDisposable.Dispose();
        /*0xf67580*/ bool MoveNext();
        /*0xf6764c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67654*/ void System.Collections.IEnumerator.Reset();
        /*0xf67694*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaSelectItem : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ UnityEngine.UI.Image m_BannerImage;
    /*0x20*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x28*/ int <ItemIndex>k__BackingField;

    static /*0xec844c*/ GachaSelectItem();
    static /*0xec75bc*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xec76b0*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xec8444*/ GachaSelectItem();
    /*0xec75ac*/ int get_ItemIndex();
    /*0xec75b4*/ void set_ItemIndex(int value);
    /*0xec77a4*/ void OnEnable();
    /*0xec7b14*/ void OnDisable();
    /*0xec7c44*/ void InitializeItem(TableData.TableData_Gacha _base);
    /*0xec7f48*/ void OnClick();
    /*0xec7fdc*/ void HandlerUpdateFaction();
    /*0xec8224*/ void HandlerChangeProperty(int _type);
}

class GachaSelectScroll : UnityEngine.MonoBehaviour
{
    static int _defArrIndex = 0;
    /*0x18*/ UnityEngine.GameObject m_ItemPrefab;
    /*0x20*/ UnityEngine.Transform m_ItemParent;
    /*0x28*/ System.Collections.Generic.List<GachaSelectItem> m_liSelectItem;
    /*0x30*/ float m_fWidth;
    /*0x34*/ int m_nCurrentItem;
    /*0x38*/ System.Collections.Generic.List<TableData.TableData_Gacha> m_liGachaBase;

    /*0xec9238*/ GachaSelectScroll();
    /*0xec8b68*/ void Awake();
    /*0xec9078*/ void InitializeSelectScroll(int _index);
    /*0xec8bdc*/ void InitializeGachaList();
    /*0xec8ec0*/ void InitializeItem();
    /*0xec907c*/ void SelectItem(int _index);
    /*0xec91b8*/ int GetCurrentIndexNumber(int _index, int _amount);
}

enum GACHA_TAB_TYPE
{
    BAR = 0,
    ATTIC = 1,
    FURNITURE = 2,
}

class GachaTabWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_barTabImage;
    /*0x20*/ AtlasImage m_atticTabImage;
    /*0x28*/ AtlasImage m_funitureTabImage;
    /*0x30*/ AtlasImage m_barFrameImage;
    /*0x38*/ AtlasImage m_atticFrameImage;
    /*0x40*/ AtlasImage m_furnitureFrameImage;
    /*0x48*/ UnityEngine.GameObject m_atticButton;
    /*0x50*/ UnityEngine.GameObject m_furnitureButton;
    /*0x58*/ GACHA_TAB_TYPE m_currTabType;

    /*0xeca414*/ GachaTabWindow();
    /*0xec9b1c*/ void OnEnable();
    /*0xec9b20*/ void InitTab();
    /*0xec9ca8*/ void UpdateIcon();
    /*0xec9ec4*/ void ExitPopup();
    /*0xec9fbc*/ void OnClickBar();
    /*0xeca12c*/ void OnClickAttic();
    /*0xeca2a0*/ void OnClickFurniture();

    class <>c
    {
        static /*0x0*/ GachaTabWindow.<> <>9;
        static /*0x8*/ System.Action <>9__13_0;
        static /*0x10*/ System.Action <>9__14_0;
        static /*0x18*/ System.Action <>9__15_0;

        static /*0xf67d7c*/ <>c();
        /*0xf67ddc*/ <>c();
        /*0xf67de4*/ void <OnClickBar>b__13_0();
        /*0xf67e64*/ void <OnClickAttic>b__14_0();
        /*0xf67ee4*/ void <OnClickFurniture>b__15_0();
    }
}

class ScrollContent_GachaPercentCharacter : ScrollContent<GachaPercentCharacter>
{
    /*0xe1982c*/ ScrollContent_GachaPercentCharacter();
}

class WishListEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_PropertyIcon;
    /*0x30*/ LocalizeString m_PropertyName;
    /*0x38*/ UnityEngine.GameObject m_NewString;
    /*0x40*/ System.Collections.Generic.List<WishSlot> m_liWishSlot;
    /*0x48*/ string[] _arrPropertyLocalize;
    /*0x50*/ int m_nPropertyType;
    /*0x58*/ System.Collections.Generic.List<int> m_liSelectUnit;

    static /*0xe01bb0*/ WishListEntity();
    static /*0xe00810*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xe00904*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xe0192c*/ WishListEntity();
    /*0xe009f8*/ void OnDisable();
    /*0xe00a4c*/ void InitalizeWishList(int _type, bool _isNewHero, string _unitvalue);
    /*0xe00f44*/ void OnClickList();
    /*0xe00fd8*/ void ChangeValueList(int _unitid);
    /*0xe00e58*/ void SetWishSlot();
    /*0xe016ac*/ void SetWishSlotRaycast(bool _enable);
    /*0xe00c0c*/ void SetActiveNewString(bool _enable);
    /*0xe00c24*/ void SetActiveBackground(bool _enable);
    /*0xe0178c*/ void SetFrame(string _path);
    /*0xe00c60*/ void SetPropertyIcon(int _factionId);
    /*0xe00d34*/ void SetPropertyName(int _factionId);
    /*0xe00ac8*/ void SetConvertList(string _unitvalue);
    /*0xe01800*/ bool IsFullList();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ int _unitid;

        /*0xd8c470*/ <>c__DisplayClass15_0();
        /*0xd8c478*/ bool <ChangeValueList>b__0(int x);
    }

    class <>c
    {
        static /*0x0*/ WishListEntity.<> <>9;
        static /*0x8*/ System.Predicate<int> <>9__15_1;
        static /*0x10*/ System.Predicate<int> <>9__24_0;

        static /*0xd8c3f0*/ <>c();
        /*0xd8c450*/ <>c();
        /*0xd8c458*/ bool <ChangeValueList>b__15_1(int x);
        /*0xd8c464*/ bool <IsFullList>b__24_0(int x);
    }
}

class WishListPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<WishListEntity> m_liListEntity;
    /*0x48*/ ScrollContent_HeroWishSlot m_cScrollWishSlot;
    /*0x50*/ UnityEngine.GameObject m_BottomWindow;
    /*0x58*/ bool m_bInitalized;
    /*0x5c*/ int m_nCurSelectType;
    /*0x60*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> m_dicPropertyUnitList;

    /*0xe03434*/ WishListPopup();
    /*0xe01bb4*/ System.Collections.Generic.List<string> get_m_liWishList();
    /*0xe01c08*/ void OnCreate();
    /*0xe01dac*/ void OnDelete();
    /*0xe01e00*/ void OnEnter();
    /*0xe02590*/ void OnStart();
    /*0xe02594*/ void OnFinish();
    /*0xe02598*/ void OnLeave();
    /*0xe027d0*/ void OnExit();
    /*0xe02548*/ void InitalizeWishList();
    /*0xe01c0c*/ void InitalizeDictionary();
    /*0xe02be0*/ void InitalizeScrollContent();
    /*0xe02acc*/ void InitalizeListEntity();
    /*0xe02e14*/ void UpdateListEntity();
    /*0xe02ebc*/ void HandlerScrollUpdate(int _index, WishPropertySlot _entity);
    /*0xe03108*/ void HandlerWishListChangeValue();
    /*0xe0310c*/ void HandlerOpenWishList(int _type);
    /*0xe0327c*/ void HandlerUpdateSelectSlot(TableData.TableData_Unitbase _base);
    /*0xe02c78*/ bool UsedNewHero(int _index);
    /*0xe02a20*/ bool IsFullWishLists();
    /*0xe034ac*/ void <OnExit>b__14_0(bool result);

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int i;

        /*0xd8c508*/ <>c__DisplayClass16_0();
        /*0xd8c510*/ bool <InitalizeDictionary>b__0(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ TableData.TableData_Unitbase _base;

        /*0xd8c5f8*/ <>c__DisplayClass23_0();
        /*0xd8c600*/ bool <HandlerUpdateSelectSlot>b__0(WishPropertySlot x);
    }

    class <>c
    {
        static /*0x0*/ WishListPopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__24_0;

        static /*0xd8c488*/ <>c();
        /*0xd8c4e8*/ <>c();
        /*0xd8c4f0*/ bool <UsedNewHero>b__24_0(TableData.TableData_Unitbase x);
    }
}

class WishPropertySlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<TableData.TableData_Unitbase> OnClickEvent;
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_Character;
    /*0x28*/ AtlasImage m_Frame;
    /*0x30*/ AtlasImage m_PropertyIcon;
    /*0x38*/ AtlasImage m_Fade;
    /*0x40*/ AtlasImage m_originalEpicIcon;
    /*0x48*/ UnityEngine.GameObject m_NewString;
    /*0x50*/ LocalizeString m_name;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;

    static /*0xe03ae0*/ WishPropertySlot();
    static /*0xe02360*/ void add_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    static /*0xe02178*/ void remove_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    /*0xe03ad8*/ WishPropertySlot();
    /*0xe02fdc*/ void InitalizeSlot(TableData.TableData_Unitbase _base);
    /*0xe039bc*/ void OnClick();
    /*0xe03a50*/ TableData.TableData_Unitbase GetBase();
    /*0xe033f8*/ void SetActiveFade();
    /*0xe03ac0*/ void SetActiveFade(bool enable);
    /*0xe03848*/ void SetActiveNewString(bool _enable);
    /*0xe03534*/ void SetProperty(int _type);
    /*0xe03638*/ void SetFrame(int _grade);
    /*0xe03740*/ void SetBackground(int _grade);
    /*0xe03860*/ void SetOriginalEpicClassIcon(int _grade);
    /*0xe0387c*/ void SetName(string _name);
    /*0xe03a58*/ bool IsUseUnitWishList();
}

class WishSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<TableData.TableData_Unitbase> OnClickEvent;
    /*0x18*/ AtlasImage m_Character;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_PlusIcon;
    /*0x38*/ AtlasImage m_originalEpicIcon;
    /*0x40*/ UnityEngine.GameObject m_NewString;
    /*0x48*/ int m_nUnitId;
    /*0x50*/ TableData.TableData_Unitbase m_BaseInfo;

    static /*0xe03e6c*/ WishSlot();
    static /*0xe02454*/ void add_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    static /*0xe0226c*/ void remove_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    /*0xe03e5c*/ WishSlot();
    /*0xe014c4*/ void InitalizeSlot(int _unitId);
    /*0xe01774*/ void SetActiveButtonRaycast(bool _enable);
    /*0xe03b44*/ void SetActiveNewString(bool _enable);
    /*0xe03ae4*/ void SetActiveCharacter(bool _enable);
    /*0xe03b5c*/ void SetFrame(int _grade);
    /*0xe03c68*/ void SetBackground(int _grade);
    /*0xe03b2c*/ void SetActivePlusIcon(bool _enable);
    /*0xe03d74*/ void SetOriginalEpicClassIcon(int _grade);
    /*0xe03d90*/ void OnClick();
}

class GuildWarCaptainInfo : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_Active;
    /*0x20*/ UnityEngine.GameObject m_DeActive;
    /*0x28*/ PlayerProfileSlot m_playerSlot;
    /*0x30*/ LocalizeString m_playerName;
    /*0x38*/ System.Collections.Generic.List<GuildWarCaptainStatusEntity> m_liStatusInfo;
    /*0x40*/ UnityEngine.GameObject m_deckReddt;
    /*0x48*/ PTShare.Define.GuildWarPosition eEditPosition;
    /*0x50*/ PTShare.Define.SGuildWarPlayer playerInfo;
    /*0x58*/ System.Action onClickCallback;

    /*0x11111d4*/ GuildWarCaptainInfo();
    /*0x111066c*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, System.Action onClick);
    /*0x11106ec*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SGuildWarPlayer player, System.Action onClick);
    /*0x1111038*/ void SetActiveDeckReddot(bool enable);
    /*0x1111100*/ void OnClick_Formation();
    /*0x11111c0*/ void OnClick_Captain();
    /*0x11111e4*/ void <OnClick_Formation>b__13_0();

    enum GuildWarCaptainStatus
    {
        RECORD = 0,
        MOST_WINS = 1,
        MASTER_SCORE = 2,
        End = 3,
    }
}

class GuildWarCaptainStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ LocalizeString m_Context;
    /*0x28*/ TooltipData_Desc m_TooltipData;

    /*0x111145c*/ GuildWarCaptainStatusEntity();
    /*0x1111058*/ void InitializeEntity(string iconName, string tooltip, string key, string[] args);
}

class GuildWarEditWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_editTapToggle;
    /*0x20*/ AtlasImage m_captainIcon;
    /*0x28*/ LocalizeString m_captainTitle;
    /*0x30*/ LocalizeString m_legionTitle;
    /*0x38*/ AtlasImage m_legionIcon;
    /*0x40*/ LocalizeString m_captainCount;
    /*0x48*/ LocalizeString m_legionCount;
    /*0x50*/ GuildWarLineBackground[] m_arrGuildWarLineBackground;
    /*0x58*/ ScrollContent_HeroGuildWarEditSlot m_guildEditSlotScroll;
    /*0x60*/ ScrollContent_GuildWarMemberEntity m_guildWarMemberScroll;
    /*0x68*/ LocalizeString m_CaptainSelectDesc;
    /*0x70*/ GuildWarCaptainInfo m_guildCaptainInfo;
    /*0x78*/ UnityEngine.GameObject m_legionParent;
    /*0x80*/ UnityEngine.GameObject m_captainParent;
    /*0x88*/ LocalizeString m_totalPower;
    /*0x90*/ UnityEngine.UI.Button m_cancelButton;
    /*0x98*/ UnityEngine.GameObject m_GuildWarTestButton;
    /*0xa0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> dicUnitInfo;
    /*0xa8*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SHero> dicCurrentPlayer;
    /*0xb0*/ System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer> liCurrentPlayer;
    /*0xb8*/ int nSelectCaptainPlayer;
    /*0xbc*/ PTShare.Define.GuildWarPosition eEditPosition;
    /*0xc0*/ System.Collections.IEnumerator CoEffectUpdater;
    /*0xc8*/ System.Collections.Generic.List<UnityEngine.RectTransform> m_toggleRectTransform;

    /*0x1115e10*/ GuildWarEditWindow();
    /*0x1112360*/ void Awake();
    /*0x1112660*/ void OnEnable();
    /*0x11127a8*/ void OnDisable();
    /*0x1112864*/ void Release();
    /*0x1112ad8*/ void InitializeWindow(PTShare.Define.GuildWarPosition ePosition);
    /*0x1112e94*/ void RefrashWindow(bool bRefreshScroll);
    /*0x1112ea4*/ void Initialize(PTShare.Define.GuildWarPosition ePosition, bool bRefreshScroll);
    /*0x1112adc*/ void InitializeToggle(PTShare.Define.GuildWarPosition ePosition);
    /*0x11139b0*/ void InitializeScroll_Edit(PTShare.Define.GuildWarPosition ePosition, bool bRefreshScroll);
    /*0x1113bd8*/ void HandlerEditScrollContent(int nIndex, HeroGuildWarEditSlot entity);
    /*0x1113d34*/ void InitializeScroll_Captain();
    /*0x1113f38*/ void SetScroll();
    /*0x1114720*/ void HandlerMemberScrollContent(int nIndex, GuildWarMemberEntity entity);
    /*0x1112954*/ void SetActiveCaptain(bool enable);
    /*0x1114a9c*/ bool IsCaptainCategory();
    /*0x1114ab8*/ void OnClick_Confirm();
    /*0x1115958*/ void OnClick_Cancel();
    /*0x1115a1c*/ void OnClick_GuildWarTest();
    /*0x11156fc*/ void SetFixCapation();
    /*0x11139a8*/ int GetCaptainCount();
    /*0x111275c*/ void StartEffect();
    /*0x1115a70*/ System.Collections.IEnumerator CoEffect();
    /*0x1115adc*/ void OnClickCaptainInfoCallback();
    /*0x1115c0c*/ void OnClickCaptainPlayerCallback(int nIndex);
    /*0x11153e0*/ bool IsImpossiablePlayingGuildWarContent();
    /*0x1115c78*/ void HeroGuildWarEditSlot_onLongPressEvent(PTShare.Define.SHero _hero);
    /*0x1115f50*/ void <Awake>b__24_0(TableData.TableData_Unitbase x);
    /*0x11160e0*/ void <InitializeToggle>b__31_0(bool on);
    /*0x111625c*/ void <InitializeToggle>b__31_1(bool on);
    /*0x11163d8*/ void <OnClick_Confirm>b__39_0(bool ok);
    /*0x11163e4*/ void <OnClick_Confirm>b__39_1(bool ok);
    /*0x11163f0*/ void <SetFixCapation>b__42_0();
    /*0x1116420*/ void <OnClickCaptainInfoCallback>b__46_0(System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer> list);

    class <>c
    {
        static /*0x0*/ GuildWarEditWindow.<> <>9;
        static /*0x8*/ System.Comparison<TableData.TableData_Unitbase> <>9__24_1;
        static /*0x10*/ System.Func<System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Unitbase>>, int> <>9__32_0;
        static /*0x18*/ System.Func<PTShare.Define.SGuildWarPlayer, bool> <>9__34_0;
        static /*0x20*/ System.Func<PTShare.Define.SGuildWarPlayer, int> <>9__35_0;
        static /*0x28*/ System.Func<PTShare.Define.SGuildWarPlayer, int> <>9__35_1;
        static /*0x30*/ System.Func<PTShare.Define.SGuildWarPlayer, int> <>9__35_2;
        static /*0x38*/ System.Predicate<PTShare.Define.SGuildWarPlayer> <>9__35_4;
        static /*0x40*/ System.Action<bool> <>9__39_2;

        static /*0xf72b30*/ <>c();
        /*0xf72b90*/ <>c();
        /*0xf72b98*/ int <Awake>b__24_1(TableData.TableData_Unitbase a, TableData.TableData_Unitbase b);
        /*0xf72bf0*/ int <InitializeScroll_Edit>b__32_0(System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> x);
        /*0xf72c44*/ bool <InitializeScroll_Captain>b__34_0(PTShare.Define.SGuildWarPlayer x);
        /*0xf72cb0*/ int <SetScroll>b__35_0(PTShare.Define.SGuildWarPlayer x);
        /*0xf72cc8*/ int <SetScroll>b__35_1(PTShare.Define.SGuildWarPlayer x);
        /*0xf72d3c*/ int <SetScroll>b__35_2(PTShare.Define.SGuildWarPlayer x);
        /*0xf72db0*/ bool <SetScroll>b__35_4(PTShare.Define.SGuildWarPlayer x);
        /*0xf72e24*/ void <OnClick_Confirm>b__39_2(bool ok);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ PTShare.Define.SGuildWarPlayer captain;

        /*0xf72eb8*/ <>c__DisplayClass35_0();
        /*0xf72ec0*/ bool <SetScroll>b__3(PTShare.Define.SGuildWarPlayer x);
    }

    class <CoEffect>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarEditWindow <>4__this;
        /*0x28*/ float <time>5__2;

        /*0xf72f28*/ <CoEffect>d__45(int <>1__state);
        /*0xf72f54*/ void System.IDisposable.Dispose();
        /*0xf72f58*/ bool MoveNext();
        /*0xf73140*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf73148*/ void System.Collections.IEnumerator.Reset();
        /*0xf73188*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf72ef0*/ <>c__DisplayClass49_0();
        /*0xf72ef8*/ bool <HeroGuildWarEditSlot_onLongPressEvent>b__0(PTShare.Define.SStatBonusHero x);
    }
}

class GuildWarLineBackground : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_FactionIcon;

    /*0x11183dc*/ GuildWarLineBackground();
    /*0x11129c0*/ void InitializeEntity(PropertyType eType);
}

class GuildWarMatchEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_EmblemSlot;
    /*0x20*/ LocalizeString m_GuildName;
    /*0x28*/ LocalizeString m_Power;
    /*0x30*/ LocalizeString m_Point;
    /*0x38*/ LocalizeString m_BtnText;
    /*0x40*/ AtlasImage m_BtnIcon;
    /*0x48*/ UnityEngine.UI.Button m_Button;
    /*0x50*/ PTShare.Define.SGuildWar guildInfo;

    /*0x111885c*/ GuildWarMatchEntity();
    /*0x11183e4*/ void InitializeEntity(PTShare.Define.SGuildWar data);
    /*0x1118624*/ void OnClick_Battle();
    /*0x1118864*/ void <OnClick_Battle>b__9_0(ServerProtocol.ResGuildWarChoice res);
}

class GuildWarRewardDetailEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_profileParent;
    /*0x20*/ PlayerProfileSlot m_profileSlot;
    /*0x28*/ AtlasImage m_rankIcon;
    /*0x30*/ LocalizeString m_rankCount;
    /*0x38*/ LocalizeString m_nickname;
    /*0x40*/ LocalizeString m_score;
    /*0x48*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;

    /*0x10f274c*/ GuildWarRewardDetailEntity();
    /*0x10f2184*/ void Release();
    /*0x10f22e4*/ void InitializeEntity(int _nRank, PTShare.Define.SContribution _playerinfo, string _strRewards);
    /*0x10f23ec*/ void InitializeEntity(int _nRank, string _strRewards);
    /*0x10f22e8*/ void Initialize(int _nRank, PTShare.Define.SContribution _playerinfo, string _strRewards);
    /*0x10f25b0*/ void SetRanks(int _nRank);
    /*0x10f23f8*/ void SetRewards(string rewards);

    class <>c
    {
        static /*0x0*/ GuildWarRewardDetailEntity.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__7_0;

        static /*0xf73ac8*/ <>c();
        /*0xf73b28*/ <>c();
        /*0xf73b30*/ void <Release>b__7_0(ItemTableRewardSlot x);
    }
}

class GuildWarSeasonTime : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString timeText;
    /*0x20*/ System.Collections.IEnumerator ieUpdater;
    /*0x28*/ System.Action onEndTimeCallback;
    /*0x30*/ System.Action onTickTimeCallback;

    /*0x10f4644*/ GuildWarSeasonTime();
    /*0x10f44ac*/ bool get_PossiableGuildWarBattle();
    /*0x10f4500*/ void Awake();
    /*0x10f3990*/ void InitializeTime(System.Action endTimeCallback, System.Action tickCallback);
    /*0x10f455c*/ void StartTimer();
    /*0x10f45a8*/ void StopTimer();
    /*0x10f45d8*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarSeasonTime <>4__this;
        /*0x28*/ bool <IsEndCheck>5__2;

        /*0xf73e48*/ <CoUpdate>d__10(int <>1__state);
        /*0xf73e74*/ void System.IDisposable.Dispose();
        /*0xf73e78*/ bool MoveNext();
        /*0xf74324*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf7432c*/ void System.Collections.IEnumerator.Reset();
        /*0xf7436c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroGuildWarEditSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x18*/ LocalizeString m_Nickname;
    /*0x20*/ HeroSlotInventory m_Slot;
    /*0x28*/ AtlasImage[] m_arrPositionIcon;
    /*0x30*/ AtlasImage m_selectEffect;
    /*0x38*/ TweenImageColor m_tweenATKColor;
    /*0x40*/ TweenImageColor m_tweenDEFColor;
    /*0x48*/ TableData.TableData_Unitbase tableInfo;
    /*0x50*/ PTShare.Define.SHero heroInfo;
    /*0x58*/ PTShare.Define.GuildWarPosition eEditPosition;

    static /*0xf34c58*/ HeroGuildWarEditSlot();
    static /*0xf33f38*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf3402c*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf34c48*/ HeroGuildWarEditSlot();
    /*0xf34120*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, TableData.TableData_Unitbase unitInfo, PTShare.Define.SHero data, bool bNonEffect);
    /*0xf3463c*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SHero data);
    /*0xf347b4*/ void InitializeEntity();
    /*0xf345cc*/ void SetActiveEffect(bool enable);
    /*0xf345a8*/ void SetActiveSlot(bool enable);
    /*0xf34804*/ void SetActiveBadge(PTShare.Define.GuildWarPosition ePosition);
    /*0xf3447c*/ void SetActiveBadge();
    /*0xf34884*/ void SetTweenColorTime(float fTime);
    /*0xf34924*/ void CustomLongPressEvent();
    /*0xf349b8*/ void CallbackSelectSlot(PTShare.Define.SHero hero);
    /*0xf34bd8*/ void CallbackSelectDisableSlot(TableData.TableData_Unitbase unit);

    class <>c
    {
        static /*0x0*/ HeroGuildWarEditSlot.<> <>9;
        static /*0x8*/ System.Func<AtlasImage, bool> <>9__12_0;
        static /*0x10*/ System.Func<AtlasImage, bool> <>9__13_0;

        static /*0x1058bc0*/ <>c();
        /*0x1058c20*/ <>c();
        /*0x1058c28*/ bool <InitializeEntity>b__12_0(AtlasImage x);
        /*0x1058c44*/ bool <InitializeEntity>b__13_0(AtlasImage x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ HeroGuildWarEditSlot <>4__this;
        /*0x18*/ PTShare.Define.SHero hero;

        /*0x1058c60*/ <>c__DisplayClass21_0();
        /*0x1058c68*/ void <CallbackSelectSlot>b__0(System.Collections.Generic.List<PTShare.Define.SLegionHero> list);
    }
}

class HeroGuildWarSelectHeroSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x18*/ LocalizeString m_Nickname;
    /*0x20*/ HeroSlotInventory m_Slot;
    /*0x28*/ AtlasImage[] m_arrPositionIcon;
    /*0x30*/ AtlasImage m_warningIcon;
    /*0x38*/ AtlasImage m_selectEffect;
    /*0x40*/ PTShare.Define.SLegionHero heroInfo;
    /*0x48*/ System.Action onChangeCallback;
    /*0x50*/ System.Action<int, string> onFailCallback;
    /*0x58*/ PTShare.Define.GuildWarPosition eEditPosition;

    static /*0xf355a0*/ HeroGuildWarSelectHeroSlot();
    static /*0xf34c5c*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf34d50*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf35590*/ HeroGuildWarSelectHeroSlot();
    /*0xf34e44*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SLegionHero data, System.Action onChange, System.Action<int, string> onFail);
    /*0xf352c4*/ void SetActiveShade(bool enable);
    /*0xf35194*/ void SetActiveBadge();
    /*0xf352e4*/ void CustomLongPressEvent();
    /*0xf35378*/ void CallbackSelectSlot(PTShare.Define.SHero hero);
    /*0xf354a4*/ void SetFormGuildWar();
    /*0xf355a4*/ void <SetFormGuildWar>b__17_0(PTShare.Define.SHero already, long alreadyId);
    /*0xf35710*/ void <SetFormGuildWar>b__17_2();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ PTShare.Define.SLegionHero data;

        /*0x1058d0c*/ <>c__DisplayClass12_0();
        /*0x1058d14*/ bool <InitializeEntity>b__0(PTShare.Define.SStatBonusHero x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.SHero already;
        /*0x18*/ long alreadyId;
        /*0x20*/ HeroGuildWarSelectHeroSlot <>4__this;

        /*0x1058d44*/ <>c__DisplayClass17_0();
        /*0x1058d4c*/ void <SetFormGuildWar>b__1();
    }
}

class HeroGuildWarUnSelectHeroSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x18*/ LocalizeString m_Nickname;
    /*0x20*/ HeroSlotInventory m_Slot;
    /*0x28*/ AtlasImage[] m_arrPositionIcon;
    /*0x30*/ AtlasImage m_selectEffect;
    /*0x38*/ PTShare.Define.SLegionHero heroInfo;
    /*0x40*/ System.Action<PTShare.Define.SHero> onChangeCallback;
    /*0x48*/ PTShare.Define.GuildWarPosition eEditPosition;

    static /*0xf35acc*/ HeroGuildWarUnSelectHeroSlot();
    static /*0xf3576c*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf35860*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf35abc*/ HeroGuildWarUnSelectHeroSlot();
    /*0xf35954*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SLegionHero data, bool bIsSelected, System.Action<PTShare.Define.SHero> onChange);
    /*0xf35a28*/ void CustomLongPressEvent();
}

class HeroBook : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ImageBackground;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_ImageCharacter;
    /*0x28*/ AtlasImage m_ImageFrame;
    /*0x30*/ AtlasImage m_ImagePropertyIcon;
    /*0x38*/ AtlasImage m_Fade;
    /*0x40*/ AtlasImage m_RedDot;
    /*0x48*/ LocalizeString m_UnitName;
    /*0x50*/ UnityEngine.Color[] m_ActiveColorList;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0xf2cc74*/ HeroBook();
    /*0xf2c334*/ void OnEnable();
    /*0xf2c40c*/ void OnDisable();
    /*0xf2c4b4*/ void Init(TableData.TableData_Unitbase _base);
    /*0xf2c644*/ void SetBackground(AtlasType _type, int _propertyid);
    /*0xf2c71c*/ void SetFrame(AtlasType _type, int _propertyid);
    /*0xf2c7f4*/ void SetPropertyIcon(AtlasType _type, int _propertyid);
    /*0xf2c8cc*/ void SetCharacterImage(int _id);
    /*0xf2c924*/ void OwnHeroCheck();
    /*0xf2ca64*/ int GetProperty();
    /*0xf2ca80*/ void OpenBook();
}

class HeroBookList : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_BookPrefab;
    /*0x20*/ AtlasImage m_gradeNameCardImage;
    /*0x28*/ UnityEngine.RectTransform m_ListParent;
    /*0x30*/ UnityEngine.UI.GridLayoutGroup m_GridLayout;
    /*0x38*/ UnityEngine.UI.ContentSizeFitter m_SizeFitter;
    /*0x40*/ System.Collections.Generic.List<HeroBook> m_liHeroBookList;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_liHeroList;
    /*0x50*/ bool IsInitalize;

    /*0xf2d4a8*/ HeroBookList();
    /*0xf2cd48*/ bool get_Initalized();
    /*0xf2cd50*/ void InitalizeHeroBook(int _grade);
    /*0xf2cd64*/ void SetHeroBookList(int _grade);
    /*0xf2cd60*/ void RefreshHeroBookList();
    /*0xf2cfc4*/ void HeroBookInitalize();
    /*0xf2d1c8*/ void InitBookEntity();
    /*0xf2d384*/ void SortHeroList();

    class <>c
    {
        static /*0x0*/ HeroBookList.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__11_0;
        static /*0x10*/ System.Comparison<TableData.TableData_Unitbase> <>9__15_0;

        static /*0x1057df0*/ <>c();
        /*0x1057e50*/ <>c();
        /*0x1057e58*/ bool <SetHeroBookList>b__11_0(TableData.TableData_Unitbase x);
        /*0x1057f20*/ int <SortHeroList>b__15_0(TableData.TableData_Unitbase a, TableData.TableData_Unitbase b);
    }
}

class HeroBookPage : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.LoopScrollRect m_cLoopVerticalHeroList;
    /*0x20*/ System.Collections.Generic.List<int> m_liViewGrade;

    /*0xf2dbd4*/ HeroBookPage();
    /*0xf2d520*/ void InitBook();
    /*0xf2d614*/ void InitalizeEvent();
    /*0xf2d978*/ void DeleteEvent();
    /*0xf2dac0*/ void HandleHeroBookEvent(int _type);
    /*0xf2db2c*/ void HandleHeroBookListUpdate(int _index, UnityEngine.Component _slot);
}

class HeroCharcterWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroNameWindow m_cHeroNameWindow;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x28*/ PTShare.Define.SHero m_HeroInfo;
    /*0x30*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0xf30108*/ HeroCharcterWindow();
    /*0xf2f794*/ void OnEnable();
    /*0xf2f7a0*/ void OnDisable();
    /*0xf2f7ac*/ void OnDestroy();
    /*0xf2f7b8*/ void Init(PTShare.Define.SHero _sHero, Spine.Unity.SkeletonDataAsset _asset, bool _starAnimation);
    /*0xf2fa1c*/ void Init(TableData.TableData_Unitbase _unitBase, Spine.Unity.SkeletonDataAsset _asset);
    /*0xf2f898*/ void InitalizeCharacter(Spine.Unity.SkeletonDataAsset _asset, int tableID);
    /*0xf2facc*/ void InitalizeCharacter(Spine.Unity.SkeletonDataAsset _asset, TableData.TableData_Unitbase _unitBase);
    /*0xf2fc40*/ void Refresh();
    /*0xf2fd74*/ void BindEvent();
    /*0xf2ff2c*/ void RemoveEvent();
    /*0xf300d4*/ void HandlerChangeEvent(PTShare.Define.SHero _hero);
}

class HeroInventoryPage : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_HeroSlot m_cScrollContentHeroSlot;
    /*0x20*/ HeroPropertySlotWindow m_cPropertyGroup;
    /*0x28*/ PropertyType m_eCurPropertyType;

    /*0xf3611c*/ HeroInventoryPage();
    /*0xf35ad0*/ void OnEnable();
    /*0xf35d7c*/ void OnDisable();
    /*0xf35fa8*/ void OnDestroy();
    void OnEnter();
    void OnLeave();
    void OnDelete();
    /*0xf3606c*/ void Start();
    void InitInventory();
    /*0xf36078*/ void InitPropertyGroup();
    /*0xf36108*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3610c*/ void HandleChangeProperty(int _type);
}

class HeroInventoryPage_Composition_GuildWar : HeroInventoryPage_Composition_New
{
    /*0xf368f8*/ HeroInventoryPage_Composition_GuildWar();
    /*0xf36124*/ void InitInventory();
    /*0xf36290*/ void SetHeroList();
    /*0xf3640c*/ void SetInventorySlotWithTroopSetting(HeroSlotInventory _slot, TroopSetting _setting);
    /*0xf36534*/ void HandleHeroSlotUpdate(int _index, HeroSlotInventory _slotInventoryBase);
}

class HeroInventoryPage_Composition_New : HeroInventoryPage
{
    /*0x30*/ System.Action<PTShare.Define.SHero> OnClickUnit;
    /*0x38*/ Battle.HeroSelectValue SelectMercenaryInfo;
    /*0x40*/ HeroTroopPopup_New m_TroopPopup;
    /*0x48*/ ScrollContent_HeroSlotInventory m_cScrollContentHeroSlotInventory;
    /*0x50*/ HeroSlotInventory m_baseHeroSlotInventoryPrefab;
    /*0x58*/ HeroSlotMaze m_baseHeroSlotMazePrefab;
    /*0x60*/ LocalizeString m_emptyText;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHero> m_lisHero;
    /*0x70*/ int m_nHeroSlotCount;
    /*0x78*/ HeroSlotInventory m_tmpHeroSlot;
    /*0x80*/ bool m_bLoadMercenary;
    /*0x84*/ Battle.GameModeType m_eCurGameMode;

    /*0xf368fc*/ HeroInventoryPage_Composition_New();
    /*0xf36974*/ System.Collections.Generic.List<HeroSlotInventory> get_GetInventorySlotList();
    /*0xf369c0*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf36a30*/ void Init(Battle.GameModeType _eGameMode);
    /*0xf36a78*/ void SetLoadMercenary();
    /*0xf36ab0*/ void InitPropertyGroup();
    /*0xf36154*/ void InitInventory();
    /*0xf36bec*/ void SetHeroList();
    /*0xf366f8*/ void RenewInventory(bool _bSetAllTroopSettings);
    /*0xf364dc*/ void SetInventorySlotWithTroopSetting(HeroSlotInventory _slot, TroopSetting _setting);
    /*0xf3710c*/ void SetInventoryPropertyType(PropertyType _ePropertyType);
    /*0xf3711c*/ void RefreshInventory();
    /*0xf37128*/ void ResetSelectAll();
    /*0xf37220*/ bool IsUseMercenaryHero();
    /*0xf370f8*/ bool IsConditionHero();
    /*0xf37348*/ void HandleHeroSlotUpdate(int _index, HeroSlotInventory _slotInventoryBase);
    /*0xf37504*/ void SetConditionHero(int _index, HeroSlotMaze heroSlotMaze);
    /*0xf37830*/ void OnEnter();
    /*0xf37844*/ void OnLeave();
    /*0xf37858*/ void OnDelete();
    /*0xf3785c*/ bool <SetHeroList>b__19_0(PTShare.Define.SMercenaryRent w);
    /*0xf3788c*/ void <RenewInventory>b__20_0(int tableID, int heroID, long playerID);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_Composition_New.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHero, bool> <>9__25_0;

        static /*0x1058e44*/ <>c();
        /*0x1058ea4*/ <>c();
        /*0x1058eac*/ bool <IsUseMercenaryHero>b__25_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ HeroInventoryPage_Composition_New <>4__this;
        /*0x18*/ int _index;
        /*0x20*/ ConditionHeroData heroData;

        /*0x1058f28*/ <>c__DisplayClass28_0();
        /*0x1058f30*/ bool <SetConditionHero>b__2(ConditionHeroData x);
        /*0x1058fd0*/ void <SetConditionHero>b__0();
        /*0x1059154*/ void <SetConditionHero>b__1();
    }
}

class HeroInventoryPage_Dismiss : HeroInventoryPage
{
    /*0x30*/ UnityEngine.GameObject m_EmptyText;
    /*0x38*/ LocalizeString m_HeroCountText;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liLevelHero;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liSelectHero;
    /*0x50*/ System.Action OnSelectSlotEvent;

    /*0xf38854*/ HeroInventoryPage_Dismiss();
    /*0xf378b4*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3793c*/ void add_OnSelectSlotEvent(System.Action value);
    /*0xf379dc*/ void remove_OnSelectSlotEvent(System.Action value);
    /*0xf37a7c*/ void OnEnter();
    /*0xf37b8c*/ void OnLeave();
    /*0xf37c48*/ void OnDelete();
    /*0xf30f74*/ void InitInventory(System.Action onSelectSlotCallback);
    /*0xf37c50*/ void InitInventory();
    /*0xf37ff4*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf38204*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf380e4*/ void SetSelectSlot(int nIndex, HeroSlot slotbase);
    /*0xf38520*/ void SetActiveSelect(int _index, HeroSlot _slot, bool isSelectCallback);
    /*0xf38458*/ void SetDeActiveSelect(int _index, HeroSlot _slot, bool isSelectCallback);
    /*0xf31384*/ bool IsSelectMoreHero();
    /*0xf385d8*/ System.Collections.Generic.List<PTShare.Define.SHero> GetSelectHeroList();
    /*0xf385e0*/ void SelectAll();
    /*0xf3191c*/ void SelectPropertys(System.Collections.Generic.List<PropertyType> propertyTypes);
    /*0xf3184c*/ void UnSelectHero(PTShare.Define.SHero hero);
    /*0xf38780*/ void HeroSlot_OnChangeHeroEvent(HeroSlot obj);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_Dismiss.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHero, bool> <>9__13_0;
        static /*0x10*/ System.Comparison<PTShare.Define.SHero> <>9__13_1;
        static /*0x18*/ System.Func<PTShare.Define.SHero, bool> <>9__21_0;

        static /*0x10592ac*/ <>c();
        /*0x105930c*/ <>c();
        /*0x1059314*/ bool <InitInventory>b__13_0(PTShare.Define.SHero w);
        /*0x1059374*/ int <InitInventory>b__13_1(PTShare.Define.SHero a, PTShare.Define.SHero b);
        /*0x10593f4*/ bool <SelectAll>b__21_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x1059414*/ <>c__DisplayClass15_0();
        /*0x105941c*/ bool <CallbackEntityEvent>b__0(PTShare.Define.SHero x);
        /*0x105944c*/ bool <CallbackEntityEvent>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ HeroSlot slotbase;

        /*0x105947c*/ <>c__DisplayClass16_0();
        /*0x1059484*/ bool <SetSelectSlot>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ System.Collections.Generic.List<PropertyType> propertyTypes;

        /*0x10594bc*/ <>c__DisplayClass22_0();
        /*0x10594c4*/ bool <SelectPropertys>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass22_1
    {
        /*0x10*/ PTShare.Define.SHero x;

        /*0x10595d4*/ <>c__DisplayClass22_1();
        /*0x10595dc*/ bool <SelectPropertys>b__1(PropertyType f);
    }
}

class HeroInventoryPage_Inven : HeroInventoryPage
{
    /*0x30*/ LocalizeString m_cHeroAmountText;
    /*0x38*/ LocalizeString m_NoHeroText;

    /*0xf39818*/ HeroInventoryPage_Inven();
    /*0xf388ec*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf38974*/ void InitalizeEvent();
    /*0xf38b44*/ void DeleteEvent();
    /*0xf38ef4*/ void InitInventory();
    /*0xf39030*/ void OnClickSlotButton();
    /*0xf3924c*/ void HandleInventoryEvent(int _type);
    /*0xf39414*/ void HandleIncreaseSlotEvent();
    /*0xf39498*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf39350*/ void SetAmountText(int _amount);
    /*0xf39648*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf39150*/ int GetMaxSlotAmount();
    /*0xf392d0*/ int GetHeroCount();
    /*0xf390d0*/ int GetSlotAmount();
    /*0xf397dc*/ void HandleChangeHeroEvent();
    /*0xf397e8*/ void OnEnter();
    /*0xf39810*/ void OnLeave();
    /*0xf39814*/ void OnDelete();
}

class HeroInventoryPage_Rent : HeroInventoryPage
{
    /*0x30*/ LocalizeString m_EmptyText;
    /*0x38*/ System.Collections.Generic.List<MercenaryPlayerSet> m_curRepresentativeMercenary;
    /*0x40*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<MercenaryPlayerSet>> m_dicPropertyRepresentative;
    /*0x48*/ int _nCurType;
    /*0x50*/ MercenaryPlayerSet _MercnearySet;

    /*0xf39ee0*/ HeroInventoryPage_Rent();
    /*0xf39820*/ void InitializePage();
    /*0xf398c0*/ void InitializeDictionary();
    /*0xf39a60*/ void CheckVaildDictionary(int _nType);
    /*0xf39b44*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf39bd0*/ void InitInventory();
    /*0xf39d10*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf39ed4*/ void OnEnter();
    /*0xf39ed8*/ void OnLeave();
    /*0xf39edc*/ void OnDelete();
}

class HeroInventoryPage_Reset : HeroInventoryPage
{
    static /*0x0*/ System.Action<bool, PTShare.Define.SHero> OnSelectSlotEvent;
    /*0x30*/ UnityEngine.GameObject m_EmptyText;
    /*0x38*/ LocalizeString m_HeroCountText;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liLevelHero;
    /*0x48*/ HeroWagonType eWagonType;
    /*0x50*/ PTShare.Define.SHero selectHero;

    static /*0xf3ba40*/ HeroInventoryPage_Reset();
    static /*0xf3a020*/ void add_OnSelectSlotEvent(System.Action<bool, PTShare.Define.SHero> value);
    static /*0xf3a114*/ void remove_OnSelectSlotEvent(System.Action<bool, PTShare.Define.SHero> value);
    static /*0xf3ba44*/ bool <InitInventory>g__Check|14_0(PTShare.Define.SHero y);
    /*0xf3b9c8*/ HeroInventoryPage_Reset();
    /*0xf39f98*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3a208*/ void OnEnter();
    /*0xf3a344*/ void OnLeave();
    /*0xf3a400*/ void OnDelete();
    /*0xf3a4f8*/ void InitInventory(HeroWagonType eType);
    /*0xf3a570*/ void InitInventory();
    /*0xf3b0d8*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf3b2c0*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3b1c8*/ void SetActiveSelect(int _index, HeroSlot _slot);
    /*0xf3b680*/ PTShare.Define.SHero GetSelectHero();
    /*0xf3b688*/ bool VaildSelectHero();
    /*0xf3b6ac*/ void ResetSelectHero();
    /*0xf3b7d4*/ void HandlerChangeHeroEvent(HeroSlot obj);
    /*0xf3ba98*/ bool <ResetSelectHero>b__20_0(PTShare.Define.SHero x);
    /*0xf3bac8*/ bool <HandlerChangeHeroEvent>b__21_0(PTShare.Define.SHero x);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_Reset.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SHero> <>9__14_1;
        static /*0x10*/ System.Func<PTShare.Define.SHero, bool> <>9__14_2;
        static /*0x18*/ System.Func<PTShare.Define.SHero, int> <>9__14_3;
        static /*0x20*/ System.Func<PTShare.Define.SHero, int> <>9__14_4;
        static /*0x28*/ System.Func<PTShare.Define.SHero, int> <>9__14_5;
        static /*0x30*/ System.Func<PTShare.Define.SHero, int> <>9__14_6;
        static /*0x38*/ System.Func<PTShare.Define.SHero, int> <>9__14_7;
        static /*0x40*/ System.Func<PTShare.Define.SHero, bool> <>9__14_12;
        static /*0x48*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, bool> <>9__14_8;
        static /*0x50*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, int> <>9__14_9;
        static /*0x58*/ System.Func<PTShare.Define.SHero, int> <>9__14_13;
        static /*0x60*/ System.Func<PTShare.Define.SHero, int> <>9__14_14;
        static /*0x68*/ System.Func<PTShare.Define.SHero, int> <>9__14_15;
        static /*0x70*/ System.Func<PTShare.Define.SHero, bool> <>9__14_16;
        static /*0x78*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, PTShare.Define.SHero> <>9__14_10;
        static /*0x80*/ System.Comparison<PTShare.Define.SHero> <>9__14_11;

        static /*0x1059600*/ <>c();
        /*0x1059660*/ <>c();
        /*0x1059668*/ bool <InitInventory>b__14_1(PTShare.Define.SHero x);
        /*0x105969c*/ bool <InitInventory>b__14_2(PTShare.Define.SHero w);
        /*0x1059700*/ int <InitInventory>b__14_3(PTShare.Define.SHero o);
        /*0x1059718*/ int <InitInventory>b__14_4(PTShare.Define.SHero x);
        /*0x1059730*/ int <InitInventory>b__14_5(PTShare.Define.SHero x);
        /*0x1059748*/ int <InitInventory>b__14_6(PTShare.Define.SHero x);
        /*0x1059760*/ int <InitInventory>b__14_7(PTShare.Define.SHero x);
        /*0x1059778*/ bool <InitInventory>b__14_8(System.Linq.IGrouping<int, PTShare.Define.SHero> x);
        /*0x105989c*/ bool <InitInventory>b__14_12(PTShare.Define.SHero y);
        /*0x1059900*/ int <InitInventory>b__14_9(System.Linq.IGrouping<int, PTShare.Define.SHero> k);
        /*0x10599a8*/ PTShare.Define.SHero <InitInventory>b__14_10(System.Linq.IGrouping<int, PTShare.Define.SHero> v);
        /*0x1059d18*/ int <InitInventory>b__14_13(PTShare.Define.SHero x);
        /*0x1059d30*/ int <InitInventory>b__14_14(PTShare.Define.SHero x);
        /*0x1059d48*/ int <InitInventory>b__14_15(PTShare.Define.SHero x);
        /*0x1059d60*/ bool <InitInventory>b__14_16(PTShare.Define.SHero x);
        /*0x1059d80*/ int <InitInventory>b__14_11(PTShare.Define.SHero a, PTShare.Define.SHero b);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ HeroInventoryPage_Reset <>4__this;

        /*0x1059dec*/ <>c__DisplayClass16_0();
        /*0x1059df4*/ bool <CallbackEntityEvent>b__0(PTShare.Define.SHero x);
        /*0x1059e24*/ bool <CallbackEntityEvent>b__1(PTShare.Define.SHero x);
    }
}

class HeroInventoryPage_RunGame : HeroInventoryPage
{
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHero> liTopHeroes;
    /*0x38*/ PTShare.Define.SHero selectHero;
    /*0x40*/ System.Action OnSelectCallback;

    /*0xf3cbbc*/ HeroInventoryPage_RunGame();
    /*0xf3baf8*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3bb80*/ void InitalizeEvent();
    /*0xf3bc88*/ void DeleteEvent();
    /*0xf3bd88*/ void InitInventory();
    /*0xf3c734*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf3c8b4*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3c9e4*/ void HandleChangeHeroEvent();
    /*0xf3c9f0*/ PTShare.Define.SHero GetHero();
    /*0xf3c360*/ void SetDefaultHero();
    /*0xf3c9f8*/ void SetHero(PTShare.Define.SHero hero);
    /*0xf3ca04*/ void SetSelectCallback(System.Action callback);
    /*0xf3ca0c*/ void ClearSelectCallback();
    /*0xf3ca14*/ void OnEnter();
    /*0xf3ca5c*/ void OnLeave();
    /*0xf3ca60*/ void OnDelete();
    /*0xf3ca64*/ void RenewTimers(System.Collections.Generic.List<RunGameManager.RunHeroSpanTime> _lisRunHeroCooltime);
    /*0xf3cc34*/ void <CallbackEntityEvent>b__9_0(HeroSlot x);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_RunGame.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHero, int> <>9__7_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, int> <>9__7_1;
        static /*0x18*/ System.Func<PTShare.Define.SHero, int> <>9__7_4;
        static /*0x20*/ System.Func<PTShare.Define.SHero, int> <>9__7_5;
        static /*0x28*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, PTShare.Define.SHero> <>9__7_2;
        static /*0x30*/ System.Predicate<PTShare.Define.SHero> <>9__7_3;
        static /*0x38*/ System.Func<PTShare.Define.SHero, int> <>9__12_4;
        static /*0x40*/ System.Func<PTShare.Define.SHero, int> <>9__12_3;

        static /*0x1059e5c*/ <>c();
        /*0x1059ebc*/ <>c();
        /*0x1059ec4*/ int <InitInventory>b__7_0(PTShare.Define.SHero x);
        /*0x1059edc*/ int <InitInventory>b__7_1(System.Linq.IGrouping<int, PTShare.Define.SHero> k);
        /*0x1059f84*/ PTShare.Define.SHero <InitInventory>b__7_2(System.Linq.IGrouping<int, PTShare.Define.SHero> v);
        /*0x105a17c*/ int <InitInventory>b__7_4(PTShare.Define.SHero x);
        /*0x105a194*/ int <InitInventory>b__7_5(PTShare.Define.SHero x);
        /*0x105a1ac*/ bool <InitInventory>b__7_3(PTShare.Define.SHero x);
        /*0x105a1cc*/ int <SetDefaultHero>b__12_4(PTShare.Define.SHero y);
        /*0x105a1e4*/ int <SetDefaultHero>b__12_3(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ HeroInventoryPage_RunGame <>4__this;
        /*0x18*/ bool isReturn;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHero> heroList;

        /*0x105a1fc*/ <>c__DisplayClass12_0();
        /*0x105a204*/ void <SetDefaultHero>b__0(HeroSlot x);
        /*0x105a334*/ void <SetDefaultHero>b__1(HeroSlot x);
        /*0x105a3f8*/ bool <SetDefaultHero>b__2(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ System.Collections.Generic.List<RunGameManager.RunHeroSpanTime> _lisRunHeroCooltime;

        /*0x105a594*/ <>c__DisplayClass19_0();
        /*0x105a59c*/ void <RenewTimers>b__0(HeroSlot x);
    }

    class <>c__DisplayClass19_1
    {
        /*0x10*/ HeroSlotInventory_RunGame slot;

        /*0x105a75c*/ <>c__DisplayClass19_1();
        /*0x105a764*/ bool <RenewTimers>b__1(RunGameManager.RunHeroSpanTime y);
    }
}

class HeroInventoryPage_SelectResonance : HeroInventoryPage
{
    /*0x30*/ UnityEngine.GameObject m_EmptyText;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liResonanceHero;
    /*0x40*/ PTShare.Define.SHero selectHero;

    /*0xf3d660*/ HeroInventoryPage_SelectResonance();
    /*0xf3cd20*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3cda8*/ void OnEnter();
    /*0xf3ce04*/ void OnLeave();
    /*0xf3ce08*/ void OnDelete();
    /*0xf3ce0c*/ void InitInventory();
    /*0xf3d354*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf3d508*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3d164*/ void SelectHero(PTShare.Define.SHero _hero);
    /*0xf3d444*/ void SetActiveSelect(int _index, HeroSlot _slot);
    /*0xf3d50c*/ PTShare.Define.SHero GetSelectHero();
    /*0xf3d514*/ bool VaildSelectHero();
    /*0xf3d538*/ void ResetSelectHero();
    /*0xf3d6d8*/ bool <ResetSelectHero>b__15_0(PTShare.Define.SHero x);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHero> _liMostHero;

        /*0x105a89c*/ <>c__DisplayClass8_0();
        /*0x105a8a4*/ bool <InitInventory>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass8_1
    {
        /*0x10*/ PTShare.Define.SHero x;

        /*0x105a9b0*/ <>c__DisplayClass8_1();
        /*0x105a9b8*/ bool <InitInventory>b__2(PTShare.Define.SHero y);
    }

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_SelectResonance.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SHero> <>9__8_0;

        static /*0x105a7a4*/ <>c();
        /*0x105a804*/ <>c();
        /*0x105a80c*/ bool <InitInventory>b__8_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ HeroInventoryPage_SelectResonance <>4__this;

        /*0x105a82c*/ <>c__DisplayClass11_0();
        /*0x105a834*/ bool <SelectHero>b__0(PTShare.Define.SHero x);
        /*0x105a864*/ bool <SelectHero>b__1(PTShare.Define.SHero x);
    }
}

class HeroPropertySlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnChangeCallBackProperty;
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ ParticleBase m_ParticleEffect;
    /*0x30*/ int m_nPropertyType;
    /*0x34*/ bool m_disableButton;

    static /*0x122bfe0*/ HeroPropertySlot();
    static /*0x1229cac*/ void add_OnChangeCallBackProperty(System.Action<int> value);
    static /*0x1229bb8*/ void remove_OnChangeCallBackProperty(System.Action<int> value);
    /*0x122bfd8*/ HeroPropertySlot();
    /*0x122bcdc*/ int get_PropertyType();
    /*0x122bce4*/ void InitProperty(int _type);
    /*0x122bdd0*/ void SelectProperty(bool _enable);
    /*0x122be9c*/ void SetDisablebutton(bool _disable);
    /*0x122bea8*/ void SetColorObject(UnityEngine.Color _color);
    /*0x122bcec*/ void SetIcon();
    /*0x122bf3c*/ void OnClick();
}

class HeroPropertySlotWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroPropertySlot> m_liHeroPropertySlot;
    /*0x20*/ int m_nCurProperty;
    /*0x24*/ bool m_fixedProperty;

    /*0x122c680*/ HeroPropertySlotWindow();
    /*0x122aa94*/ void InitalizeProperty();
    /*0x122c0f8*/ void InitalizeFixedProperty(int property);
    /*0x122c4bc*/ void Refresh();
    /*0x122a048*/ void Release();
    /*0x122c4d0*/ void HideProperty(PropertyType _eType);
    /*0x122c5d4*/ void SelectClickProperty(PropertyType _eType);
    /*0x122c64c*/ void CallbackClickProperty(int _type);
    /*0x122c408*/ void ChangeActiveProperty(int _type);
}

class HeroLevelUpButton : UnityEngine.UI.Button
{
    static float _fPressTime = 0.5;
    static float _fCallbackTime = 0.10000000149011612;
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnPressCallbackEvent;
    static /*0x8*/ System.Action<PTShare.Define.SHero> OnOutputCallbackEvent;
    /*0x100*/ PTShare.Define.SHero heroInfo;
    /*0x108*/ TableData.TableData_Unitlv unitlvInfo;
    /*0x110*/ int nLevelCount;
    /*0x114*/ float fPressTime;
    /*0x118*/ bool bIsPress;
    /*0x119*/ bool bIsRequireUpgrade;
    /*0x120*/ System.Collections.IEnumerator iePressCoroutine;
    /*0x128*/ LocalizeString buttonText;

    static /*0xf3efec*/ HeroLevelUpButton();
    static /*0xf2e114*/ void add_OnPressCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2e020*/ void remove_OnPressCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2e300*/ void add_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2e208*/ void remove_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf3efe4*/ HeroLevelUpButton();
    /*0xf3dae0*/ bool get_bIsSyncLimitLv();
    /*0xf3db7c*/ void Awake();
    /*0xf3dbdc*/ void OnEnable();
    /*0xf3dcdc*/ void OnDisable();
    /*0xf2e634*/ void InitializeButton(PTShare.Define.SHero _hero);
    /*0xf3e10c*/ void SendLevelupHero();
    /*0xf3e1f0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf3e470*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf3e424*/ void StartPressCoroutine();
    /*0xf3edb0*/ System.Collections.IEnumerator CoPress();
    /*0xf3eb24*/ void ShowSkillPopup(PTShare.Define.SHero _hero);
    /*0xf3ec64*/ void ShowToastMessage();
    /*0xf3ee1c*/ void HandlerTierUpResult(PTShare.Define.SHero _hero);
    /*0xf3eeec*/ void HandlerLevelUP();
    /*0xf3dda0*/ void SetContiditonButton();
    /*0xf3efd0*/ bool IsStopConditionLevel();
    /*0xf3e2dc*/ void MoveResonance();

    class <CoPress>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroLevelUpButton <>4__this;

        /*0x105af2c*/ <CoPress>d__26(int <>1__state);
        /*0x105af58*/ void System.IDisposable.Dispose();
        /*0x105af5c*/ bool MoveNext();
        /*0x105b2f4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105b2fc*/ void System.Collections.IEnumerator.Reset();
        /*0x105b33c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ HeroLevelUpButton.<> <>9;
        static /*0x8*/ System.Action <>9__33_1;
        static /*0x10*/ System.Action <>9__33_0;

        static /*0x105ac88*/ <>c();
        /*0x105ace8*/ <>c();
        /*0x105acf0*/ void <MoveResonance>b__33_0();
        /*0x105aeac*/ void <MoveResonance>b__33_1();
    }
}

class HeroButtonWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEquipmentButtonEvent;
    /*0x18*/ UnityEngine.UI.Button m_UnequipButton;
    /*0x20*/ HeroLevelUpButton m_LevelupButton;
    /*0x28*/ UnityEngine.UI.Button m_EquipButton;
    /*0x30*/ UnityEngine.GameObject m_FastButton;
    /*0x38*/ LocalizeString m_FastLevelString;
    /*0x40*/ HeroNeedItemWindow m_cMaterialGroup;
    /*0x48*/ UnityEngine.GameObject m_smartEquipReddot;
    /*0x50*/ float m_fFastButtonTime;
    /*0x58*/ PTShare.Define.SHero m_HeroInfo;
    /*0x60*/ TableData.TableData_Unitlv m_LevelInfo;
    /*0x68*/ System.Collections.Generic.List<Rewards> liFastRewards;
    /*0x70*/ System.Collections.IEnumerator ieFastButton;

    static /*0xf2f790*/ HeroButtonWindow();
    static /*0xf2dcd8*/ void add_OnEquipmentButtonEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2ddcc*/ void remove_OnEquipmentButtonEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf2f710*/ HeroButtonWindow();
    /*0xf2dc4c*/ int get_ResonanceMinLevel();
    /*0xf2dcd0*/ int get_FastLimitLevel();
    /*0xf2dec0*/ void OnEnable();
    /*0xf2e3f8*/ void OnDisable();
    /*0xf2e4e4*/ void OnDestroy();
    /*0xf2e5d0*/ void InitalizeButton(PTShare.Define.SHero _hero);
    /*0xf2e768*/ void OnClickUnEquip();
    /*0xf2ea14*/ void OnClickAllEquip();
    /*0xf2eb54*/ void CallbackUnEquipAll(PTShare.Define.SHero _hero);
    /*0xf2ebe8*/ void CallbackAutoEquip(PTShare.Define.SHero _hero);
    /*0xf2ef8c*/ void SetActiveUnequipButton(bool _enable);
    /*0xf2efd4*/ void SetActiveEquipButton(bool _enable);
    /*0xf2f01c*/ void SetActiveLevelupButton(bool _enable);
    /*0xf2f064*/ void SetInteractableLevelButton(bool _enable);
    /*0xf2e670*/ void SetSmartEquipReddot();
    /*0xf2f108*/ void HandlerActiveFastLevel(PTShare.Define.SHero _hero);
    /*0xf2f4a4*/ void OnClick_FastLevel();
    /*0xf2f2e8*/ int CaculationFastLevel();
    /*0xf2e008*/ void SetActiveFastButton(bool enable);
    /*0xf2f458*/ void ActiveFastLevelButton();
    /*0xf2f6a4*/ System.Collections.IEnumerator CoFastButton();
    /*0xf2f2cc*/ bool IsPossiableFastLevel();

    class <>c
    {
        static /*0x0*/ HeroButtonWindow.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SEquip> <>9__23_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SEquip> <>9__26_0;

        static /*0x1057f74*/ <>c();
        /*0x1057fd4*/ <>c();
        /*0x1057fdc*/ bool <OnClickUnEquip>b__23_0(PTShare.Define.SEquip x);
        /*0x1057ffc*/ bool <CallbackAutoEquip>b__26_0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SEquip> <>9__1;

        /*0x105801c*/ <>c__DisplayClass26_0();
        /*0x1058024*/ bool <CallbackAutoEquip>b__1(PTShare.Define.SEquip x);
    }

    class <CoFastButton>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroButtonWindow <>4__this;
        /*0x28*/ float <fTime>5__2;

        /*0x10580bc*/ <CoFastButton>d__37(int <>1__state);
        /*0x10580e8*/ void System.IDisposable.Dispose();
        /*0x10580ec*/ bool MoveNext();
        /*0x1058258*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1058260*/ void System.Collections.IEnumerator.Reset();
        /*0x10582a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroEquipmentSlot : ItemBoxBase
{
    /*0x2c*/ PTShare.Define.EquipParts m_eEquipType;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ AtlasImage m_EmptyOrLock;
    /*0x40*/ ParticleBase m_particle;
    /*0x48*/ PTShare.Define.SHero m_HeroInfo;
    /*0x50*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x58*/ PTShare.Define.SArtifact m_ArtifactInfo;
    /*0x60*/ TableData.TableData_Equipment m_TableInfo;

    /*0xf32c88*/ HeroEquipmentSlot();
    /*0xf31a90*/ PTShare.Define.EquipParts get_EquipType();
    /*0xf31a98*/ PTShare.Define.SEquip get_Equip();
    /*0xf31aa0*/ PTShare.Define.SArtifact get_Artifact();
    /*0xf31aa8*/ void OnDisable();
    /*0xf31bb0*/ void InitEquipment(PTShare.Define.SHero _hero);
    /*0xf31e78*/ void InitEquipment(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0xf31f1c*/ void InitSignature(PTShare.Define.SHero _hero);
    /*0xf3224c*/ void InitArtifact(PTShare.Define.SHero _hero, PTShare.Define.SArtifact _artifact);
    /*0xf32304*/ void OnClick();
    /*0xf31be0*/ void Release();
    /*0xf31eb8*/ void SetUseEquipment();
    /*0xf31fd0*/ void SetUseSignature();
    /*0xf322b0*/ void SetUseArtifact();
    /*0xf329b0*/ void SetReddot(bool _enable);
    /*0xf32908*/ void SetActiveEmptyOrLock(bool _enable);
    /*0xf32944*/ void SetEmptyOrLock(AtlasType _type, string _name);
    /*0xf32b18*/ void UpdateReddot();
    /*0xf32ba8*/ bool IsSamePartsType(int _type);
    /*0xf32a60*/ bool IsLockContent();
    /*0xf325e0*/ bool IsLockContentNotice();
    /*0xf31d6c*/ void BindEvent();
    /*0xf31aac*/ void RemoveEvent();
    /*0xf32bb8*/ void HandleChangeSignature(int heroId);
    /*0xf32c98*/ void <OnClick>b__19_0();
}

class HeroEquipmentWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroEquipmentSlot> m_liEquipmentSlot;
    /*0x20*/ System.Collections.Generic.List<AtlasImage> m_liFadeOut;
    /*0x28*/ UnlockComponent m_artifactLock;
    /*0x30*/ PTShare.Define.SHero m_HeroInfo;
    /*0x38*/ PTShare.Define.SArtifact m_ArtifactInfo;
    /*0x40*/ System.Collections.Generic.List<UnityEngine.Vector3> m_liEquipOriginalScale;
    /*0x48*/ UnityEngine.Coroutine m_equipCoroutine;

    /*0xf33808*/ HeroEquipmentWindow();
    /*0xf32d44*/ void InitalizeEquipSlot(PTShare.Define.SHero _hero, bool _isEquipEffect);
    /*0xf33554*/ void SetActiveEquipmentButton(bool _enable);
    /*0xf33614*/ void UpdateReddot();
    /*0xf3309c*/ void SetEquipSlot(bool _isEquipEffect);
    /*0xf336bc*/ void SetArtifactLock();
    /*0xf32e98*/ void SetOriginalScale();
    /*0xf33778*/ System.Collections.IEnumerator CoNewEquip(PTShare.Define.EquipParts ePart, int slotIndex, int infoIndex);

    class <>c__DisplayClass10_0
    {
        /*0x10*/ HeroEquipmentWindow <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SEquip> <>9__0;

        /*0x1058598*/ <>c__DisplayClass10_0();
        /*0x10585a0*/ bool <SetEquipSlot>b__0(PTShare.Define.SEquip x);
    }

    class <CoNewEquip>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroEquipmentWindow <>4__this;
        /*0x28*/ int slotIndex;
        /*0x2c*/ PTShare.Define.EquipParts ePart;
        /*0x30*/ int infoIndex;

        /*0x1058644*/ <CoNewEquip>d__13(int <>1__state);
        /*0x1058670*/ void System.IDisposable.Dispose();
        /*0x1058674*/ bool MoveNext();
        /*0x1058b70*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1058b78*/ void System.Collections.IEnumerator.Reset();
        /*0x1058bb8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroMercenaryWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ PlayerProfileSlot m_ProfileSlot;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ UnityEngine.GameObject m_ReturnButton;
    /*0x30*/ int m_nHeroid;
    /*0x38*/ ServerProtocol.ResAccountDetail m_DetailInfo;
    /*0x40*/ bool m_bIsExceptionMercenary;

    static /*0x1221a9c*/ HeroMercenaryWindow();
    static /*0x122140c*/ void add_OnChangeEvent(System.Action value);
    static /*0x1221500*/ void remove_OnChangeEvent(System.Action value);
    /*0x1221a94*/ HeroMercenaryWindow();
    /*0x12215f4*/ void InitializeWindow(long _playerid, int _heroid, bool _exceptionMercenary);
    /*0x12217b0*/ void SetStatusView(bool _exceptionMercenary);
    /*0x1221924*/ void OnClickReturnMercenary();
    /*0x1221a1c*/ void CallbackProtocolReturnMercenary();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HeroMercenaryWindow <>4__this;
        /*0x18*/ int _heroid;
        /*0x1c*/ bool _exceptionMercenary;

        /*0x105f804*/ <>c__DisplayClass9_0();
        /*0x105f80c*/ void <InitializeWindow>b__0(ServerProtocol.ResAccountDetail response);
    }
}

class HeroNeedItem : UnityEngine.MonoBehaviour
{
    static string DefaultColor = "#8C7E4E";
    /*0x18*/ LocalizeString m_Amount;
    /*0x20*/ UnityEngine.Color[] m_arrTextColor;
    /*0x28*/ long m_NeedAmount;
    /*0x30*/ long m_UseAmount;

    /*0x1222934*/ HeroNeedItem();
    /*0x12226dc*/ void InitalizeMaterial(long _needAmount, long _useAmount);
    /*0x1222724*/ void SetText();
}

class HeroNeedItemWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_NoticeText;
    /*0x20*/ UnityEngine.GameObject m_EntityParent;
    /*0x28*/ System.Collections.Generic.List<HeroNeedItem> m_liMaterialEntity;
    /*0x30*/ PTShare.Define.SHero m_HeroInfo;
    /*0x38*/ TableData.TableData_Unitlv m_LevelInfo;
    /*0x40*/ TableData.TableData_Unittierlv m_RankInfo;
    /*0x48*/ TableData.TableData_Unitgradelv m_GradelvInfo;

    /*0x12231a0*/ HeroNeedItemWindow();
    /*0x122293c*/ void InitalizeMaterialGroup(PTShare.Define.SHero _hero, TableData.TableData_Unitlv _unitlv);
    /*0x1222e8c*/ void InitializeMaterialGroup(System.Collections.Generic.List<Rewards> rewards);
    /*0x1222990*/ void InitalizeMaterials();
    /*0x1222f84*/ void SetMaterial(int _index, long _needAmount, long _useAmount);
    /*0x1223014*/ long GetGold();
    /*0x1223094*/ long GetHeroExp();
    /*0x1223114*/ long GetFeather();
    /*0x122325c*/ void <InitializeMaterialGroup>b__8_0(Rewards x);
}

class HeroSkillSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ AtlasImage m_Lock;
    /*0x28*/ AtlasImage m_UnLock;
    /*0x30*/ AtlasImage m_RedDot;
    /*0x38*/ AtlasImage m_LevelFrame;
    /*0x40*/ LocalizeString m_Level;
    /*0x48*/ AtlasImage m_SelectFrame;
    /*0x50*/ TooltipData_Skill m_TooltipSkillData;
    /*0x58*/ ParticleBase m_particleEffect;
    /*0x60*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x68*/ TableData.TableData_Unitlv m_UnitLvInfo;
    /*0x70*/ PTShare.Define.SHero m_HeroInfo;
    /*0x78*/ TableData.TableData_Skillbase m_SkillInfo;
    /*0x80*/ TableData.TableData_Skilllv m_SkillLvInfo;
    /*0x88*/ System.Collections.Generic.Dictionary<int, int> m_dicSkillLv;
    /*0x90*/ int m_slotIndex;

    /*0x12342b4*/ HeroSkillSlot();
    /*0x12336d8*/ void OnEnable();
    /*0x12337cc*/ void OnDisable();
    /*0x1233914*/ void InitalizeSlot(int _slotindex, PTShare.Define.SHero _hero, TableData.TableData_Skillbase _skill, int enterHeroLv);
    /*0x1233b74*/ void InitDicSkillLv();
    /*0x1233c44*/ void SetIcon(string _type, string _name);
    /*0x1233de8*/ void SetLock(bool _enable);
    /*0x1233e00*/ void SetRedDot(bool _enable);
    /*0x1233e18*/ void SetLevel();
    /*0x1233ed0*/ int GetSkillLevel();
    /*0x1233e80*/ void HideEffectOnlyObjects();
    /*0x1233d2c*/ bool IsHighTier(int _skillIndex);
    /*0x1233f50*/ void SkillLevelUpEffect(PTShare.Define.SHero hero, int enterLevel);
    /*0x1233f74*/ void HandleSkillLevelUp(PTShare.Define.SHero hero);
    /*0x1234148*/ System.Collections.IEnumerator CoUnlockEffect(int oldSkillLevel, int newSkillLevel);
    /*0x12341c8*/ System.Collections.IEnumerator CoParticleEffect();
    /*0x1234234*/ System.Collections.IEnumerator CoSkillLevelEffect(int oldSkillLevel, int newSkillLevel);
    /*0x123432c*/ void <HandleSkillLevelUp>b__28_0(bool isOn);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int _slotindex;
        /*0x18*/ PTShare.Define.SHero _hero;
        /*0x20*/ HeroSkillSlot <>4__this;

        /*0x10621dc*/ <>c__DisplayClass18_0();
        /*0x10621e4*/ void <InitalizeSlot>b__0(bool isOn);
    }

    class <CoUnlockEffect>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroSkillSlot <>4__this;
        /*0x28*/ int oldSkillLevel;
        /*0x2c*/ int newSkillLevel;
        /*0x30*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;
        /*0x38*/ int <i>5__3;

        /*0x1062920*/ <CoUnlockEffect>d__29(int <>1__state);
        /*0x106294c*/ void System.IDisposable.Dispose();
        /*0x1062950*/ bool MoveNext();
        /*0x1062da4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1062dac*/ void System.Collections.IEnumerator.Reset();
        /*0x1062dec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoParticleEffect>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroSkillSlot <>4__this;

        /*0x1062428*/ <CoParticleEffect>d__30(int <>1__state);
        /*0x1062454*/ void System.IDisposable.Dispose();
        /*0x1062458*/ bool MoveNext();
        /*0x106255c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1062564*/ void System.Collections.IEnumerator.Reset();
        /*0x10625a4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSkillLevelEffect>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int oldSkillLevel;
        /*0x24*/ int newSkillLevel;
        /*0x28*/ HeroSkillSlot <>4__this;
        /*0x30*/ float <t>5__2;
        /*0x34*/ float <speed>5__3;

        /*0x10625ac*/ <CoSkillLevelEffect>d__31(int <>1__state);
        /*0x10625d8*/ void System.IDisposable.Dispose();
        /*0x10625dc*/ bool MoveNext();
        /*0x10628d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10628d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1062918*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroSkillWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroSkillSlot> m_liHeroSkillSlot;
    /*0x20*/ PTShare.Define.SHero m_HeroInfo;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Skillbase> m_liSkillInfo;
    /*0x30*/ int m_enterHeroLv;

    /*0x1234f28*/ HeroSkillWindow();
    /*0x1234a04*/ void InitalizeSkillGroup(PTShare.Define.SHero _hero, int enterHeroLv);
    /*0x1234ca8*/ void SetSkillSlot();

    class <>c
    {
        static /*0x0*/ HeroSkillWindow.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__4_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__4_1;

        static /*0x1062df4*/ <>c();
        /*0x1062e54*/ <>c();
        /*0x1062e5c*/ int <InitalizeSkillGroup>b__4_0(TableData.TableData_Skillbase x);
        /*0x1062e74*/ TableData.TableData_Skillbase <InitalizeSkillGroup>b__4_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ int i;

        /*0x1062ec0*/ <>c__DisplayClass5_0();
        /*0x1062ec8*/ bool <SetSkillSlot>b__0(TableData.TableData_Skillbase x);
    }
}

class HeroStatusWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_TotalPower;
    /*0x20*/ LocalizeString m_LevelText;
    /*0x28*/ LocalizeString m_AttackText;
    /*0x30*/ LocalizeString m_DefenseText;
    /*0x38*/ LocalizeString m_HealthText;
    /*0x40*/ AtlasImage m_PropertyIcon;
    /*0x48*/ AtlasImage m_EquipTypeIcon;
    /*0x50*/ AtlasImage m_ClassIcon;
    /*0x58*/ TooltipData_Faction m_TooltipFactionData;
    /*0x60*/ TooltipData_IconDesc m_TooltipClassData;
    /*0x68*/ TooltipData_IconDesc m_TooltipEquipData;
    /*0x70*/ PTShare.Define.SHero m_HeroInfo;
    /*0x78*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x80*/ TableData.TableData_Unitlv m_UnitLvInfo;
    /*0x88*/ Battle.CharacterStat m_StatInfo;
    /*0x90*/ PTShare.Define.SStatBonus m_Statbonus;
    /*0x98*/ PTShare.Define.EquipmentType m_eEquipType;
    /*0x9c*/ UnitClassType m_eClassType;

    /*0x126f810*/ HeroStatusWindow();
    /*0x126eff0*/ void InitalizeStatus(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
    /*0x126f444*/ void InitalizeStatus_Dungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
    /*0x126f708*/ void OnClickStatusViewer();
    /*0x126f2b4*/ void SetText(LocalizeString _localize, string _value);
    /*0x126f790*/ void SetAtlasIcon(AtlasImage _icon, string _path);
    /*0x126f410*/ string GetHeroStatus(Battle.CharacterStat.StatType _type);
}

class HeroManageTooltip : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_ParentTransform;
    /*0x20*/ UnityEngine.RectTransform m_TextTransform;
    /*0x28*/ LocalizeString m_Desc;
    /*0x30*/ float m_fHideTime;
    /*0x38*/ System.Collections.IEnumerator ieCoroutine;

    /*0x121c450*/ HeroManageTooltip();
    /*0x121c258*/ void InitializeDesc(string _desckey);
    /*0x121c3bc*/ void Off();
    /*0x121c370*/ void StartCo();
    /*0x121c3e4*/ System.Collections.IEnumerator CoTimer();

    class <CoTimer>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManageTooltip <>4__this;
        /*0x28*/ float <_fTime>5__2;

        /*0x105d094*/ <CoTimer>d__8(int <>1__state);
        /*0x105d0c0*/ void System.IDisposable.Dispose();
        /*0x105d0c4*/ bool MoveNext();
        /*0x105d200*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105d208*/ void System.Collections.IEnumerator.Reset();
        /*0x105d248*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroNameWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_UnitName;
    /*0x20*/ LocalizeString m_NickName;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_Grade;
    /*0x38*/ AtlasImage m_gradeNameCardNormalImage;
    /*0x40*/ AtlasImage m_gradeNameCardEliteImage;
    /*0x48*/ UnityEngine.GameObject m_gradeStarParent;
    /*0x50*/ Spine.Unity.SkeletonGraphic[] m_gradeStar;
    /*0x58*/ UnityEngine.UI.Outline m_UnitOutline;
    /*0x60*/ UnityEngine.UI.Shadow m_UnitShadow;
    /*0x68*/ PTShare.Define.SHero m_HeroInfo;
    /*0x70*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0x12226d4*/ HeroNameWindow();
    /*0x1221aa0*/ void InitHeroName(PTShare.Define.SHero _hero);
    /*0x1221ac4*/ void Init(PTShare.Define.SHero _hero);
    /*0x12221dc*/ void InitHeroName_StarAnimation(PTShare.Define.SHero _hero);
    /*0x1222588*/ void AnimationState_InStar(Spine.TrackEntry trackEntry);
    /*0x1222624*/ void InitHeroName(TableData.TableData_Unitbase _hero);
    /*0x1222168*/ void SetEffectColor(UnityEngine.UI.Shadow _base, UnityEngine.Color _color);
    /*0x1221f90*/ void SetText(LocalizeString _str, string _key);
    /*0x1222154*/ void SetColor(LocalizeString _str, UnityEngine.Color _color);
    /*0x1222648*/ void SetBackground(AtlasType _type, int _grade);
    /*0x12220c8*/ void SetGrade(int _grade);
    /*0x1222184*/ void SetGradeNameCard(int _initGrade);
    /*0x1221ce0*/ void SetStar();
}

class HeroSelectWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_HeroSlot m_scrollContent;
    /*0x20*/ int m_index;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHero> m_heroList;
    /*0x30*/ System.Action<PTShare.Define.SHero> m_callBack;

    /*0x1233660*/ HeroSelectWindow();
    /*0x1233268*/ void OnDisable();
    /*0x1233340*/ void InitWindow(int index, System.Collections.Generic.List<ConditionHeroData> heroList, System.Action<PTShare.Define.SHero> onCallBack);
    /*0x1233550*/ void InitWindow(int index, System.Collections.Generic.List<PTShare.Define.SHero> heroList, System.Action<PTShare.Define.SHero> onCallBack);
    /*0x1233474*/ void BindEvent();
    /*0x123326c*/ void RemoveEvent();
    /*0x12335d4*/ void HandleScrollContent(int index, HeroSlot obj);
}

class HeroSkillUpSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_SkillIcon;
    /*0x20*/ AtlasImage m_LockIcon;
    /*0x28*/ AtlasImage m_UpIcon;
    /*0x30*/ LocalizeString m_SubTip;
    /*0x38*/ LocalizeString m_SkillLevel;
    /*0x40*/ LocalizeString m_SkillName;
    /*0x48*/ TableData.TableData_Skillbase m_skillInfo;

    /*0x12349fc*/ HeroSkillUpSlot();
    /*0x1234464*/ void InitalizeSkillUpSlot(TableData.TableData_Skillbase _skill, int _lv);
    /*0x1234758*/ void SetNewSkill();
    /*0x12348b0*/ void SetUpgradeSkill(bool _upgrade);
    /*0x1234598*/ void SetSkillIcon(string _type, string _name);
    /*0x1234824*/ void SetActiveLockIcon(bool _enable);
    /*0x123483c*/ void SetActiveUpIcon(bool _enable);
    /*0x1234854*/ void SetActiveSubTip(bool _enable);
    /*0x1234664*/ void SetTextKey(LocalizeString _str, string _key);
    /*0x123489c*/ void SetTextColor(LocalizeString _str, UnityEngine.Color _color);
}

class HeroSkillupWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Arrow;
    /*0x20*/ HeroSkillUpSlot m_FirstSlot;
    /*0x28*/ HeroSkillUpSlot m_SecondSlot;
    /*0x30*/ PTShare.Define.SHero m_HeroInfo;
    /*0x38*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x40*/ TableData.TableData_Unitlv m_UnitLvInfo;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Skillbase> m_liSkillInfo;
    /*0x50*/ TableData.TableData_Skilllv m_SkillInfo;
    /*0x58*/ UnitSkillLevel m_CurNewLevel;

    /*0x1267ba0*/ HeroSkillupWindow();
    /*0x126777c*/ void OnDisable();
    /*0x1267780*/ void InitalizeSkillUp(PTShare.Define.SHero _hero);
    /*0x126797c*/ void SetSkillSlot();
    /*0x1267b78*/ void SetActiveArrow(bool _enable);
    /*0x126787c*/ void SetFirstSlot(bool _enable);
    /*0x12678c4*/ void SetSecondSlot(bool _enable);
    /*0x1267b90*/ bool IsNewSkill();
    /*0x126790c*/ void GetSkillLvInfo();
}

class HeroSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<HeroSlot> OnChangeHeroEvent;
    /*0x18*/ HeroSlotCache m_cHeroSlotCache;
    /*0x20*/ UnityEngine.GameObject m_redDot;
    /*0x28*/ PTShare.Define.SHero m_shero;
    /*0x30*/ TableData.TableData_Unitbase m_baseInfo;
    /*0x38*/ System.Action<PTShare.Define.SHero> OnClickHeroAction;
    /*0x40*/ System.Action<TableData.TableData_Unitbase> OnClickUnitBaseAction;

    static /*0x126c27c*/ HeroSlot();
    static /*0x126a7f8*/ void add_OnChangeHeroEvent(System.Action<HeroSlot> value);
    static /*0x126a8ec*/ void remove_OnChangeHeroEvent(System.Action<HeroSlot> value);
    /*0x126c218*/ HeroSlot();
    /*0x126a9e0*/ void OnEnable();
    /*0x126a9ec*/ void OnDisable();
    /*0x126a9f8*/ void OnDestroy();
    /*0x126aa04*/ void Awake();
    /*0x126aaac*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126ae60*/ void Init(TableData.TableData_Unitbase _hero, System.Action<TableData.TableData_Unitbase> _callback);
    /*0x126af24*/ void Clear();
    /*0x126b120*/ void Release();
    /*0x126b180*/ void OnClick();
    /*0x126b208*/ UnitType GetUnitType();
    /*0x126b294*/ PTShare.Define.SHero GetSHero();
    /*0x126ac58*/ void SetHero(PTShare.Define.SHero _sHeroData);
    /*0x126b010*/ void ClearFrameBackground();
    /*0x126ad00*/ void InitalizeCharacter(string _skinName);
    /*0x126b30c*/ void CharacterMirrorX(bool _enable);
    /*0x126ad18*/ void SetProperty(int _factionid);
    /*0x126ad5c*/ void SetFrame(int _grade);
    /*0x126ad74*/ void SetBackground(int _grade);
    /*0x126ad8c*/ void SetLevel(int _level);
    /*0x126ad30*/ void SetOriginalEpicIcon(bool _enable);
    /*0x126aff4*/ void SetActiveCharacter(bool _enable);
    /*0x126acc8*/ void SetActiveProperty(bool _enable);
    /*0x126ace4*/ void SetActiveLevel(bool _enable);
    /*0x126b8d8*/ void SetChangeFramebyName();
    /*0x126b078*/ void SetActiveShade(bool _enable);
    /*0x126ba70*/ void SetActiveFrozen(bool _enable);
    /*0x126b04c*/ void SetActiveSelected(bool _enable);
    /*0x126b0dc*/ void SetActiveLock(bool _enable);
    /*0x126b0c0*/ void SetActiveFlag(bool _enable);
    /*0x126bc28*/ void SetFlagSprite(AtlasType _type, string _name);
    /*0x126adbc*/ void SetReddot(bool _enable);
    /*0x126b108*/ void SetAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size);
    /*0x126bdec*/ void AddLongPressEvent(UnityEngine.Events.UnityAction unityAction);
    /*0x126be2c*/ void RemoveLongPress();
    /*0x126be6c*/ void BindEvent();
    /*0x126bf30*/ void RemoveEvent();
    /*0x126ada4*/ void SetStar(int _amount);
    /*0x126c074*/ void SetLongPressEvent(UnityEngine.Events.UnityAction callback);
    /*0x126c0ec*/ void HandlerChangeEvent(PTShare.Define.SHero _hero);
}

class HeroSlotCache : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Character;
    /*0x20*/ AtlasImage m_ImageFrame;
    /*0x28*/ AtlasImage m_ImageBackground;
    /*0x30*/ AtlasImage m_ImageProperty;
    /*0x38*/ AtlasImage m_Flag;
    /*0x40*/ AtlasImage m_Lock;
    /*0x48*/ AtlasImage m_originalEpicIcon;
    /*0x50*/ AtlasImage m_Shade;
    /*0x58*/ AtlasImage m_frozen;
    /*0x60*/ LocalizeString m_cLevel;
    /*0x68*/ LocalizeString m_amount;
    /*0x70*/ UnityEngine.GameObject m_PropertyParent;
    /*0x78*/ UnityEngine.GameObject m_Selected;
    /*0x80*/ UnityEngine.GameObject m_LevelParent;
    /*0x88*/ CustomButton m_Button;
    /*0x90*/ AtlasImage[] m_arrGradeStar;
    /*0x98*/ PTShare.Define.SHero m_sHero;
    /*0xa0*/ ButtonLongPress m_buttonLongPress;

    /*0x126c8dc*/ HeroSlotCache();
    /*0x126c6f8*/ void Awake();
    /*0x126c8d4*/ void SetSHero(PTShare.Define.SHero _sHero);
    /*0x126b29c*/ void InitalizeCharacter(string _skinName);
    /*0x126b328*/ void CharacterOnMirrorX(bool _enable);
    /*0x126b374*/ void SetProperty(int _type);
    /*0x126b400*/ void SetFrame(int _grade);
    /*0x126b8f0*/ void OnDisableByFrameAndBG();
    /*0x126b48c*/ void SetBackground(int _grade);
    /*0x126b518*/ void SetLevel(int _level);
    /*0x126b6b0*/ void SetOriginalEpicIcon(bool _enable);
    /*0x126b6c8*/ void SetActiveCharacter(bool _enable);
    /*0x126b838*/ void SetActiveLevel(bool _enable);
    /*0x126b798*/ void SetActiveProperty(bool _enable);
    /*0x126b978*/ void SetActiveShade(bool _enable, bool _isEpic);
    /*0x126bab8*/ void SetActiveFrozen(bool _enable, bool _isEpic);
    /*0x126bbb0*/ void SetActiveSelected(bool _enable);
    /*0x126bbe0*/ void SetActiveFlag(bool _enable);
    /*0x126bc40*/ void SetFlagSprite(AtlasType _type, string _name);
    /*0x126bbc8*/ void SetActiveLock(bool _enable);
    /*0x126c08c*/ void SetLongPressButtonEvent(UnityEngine.Events.UnityAction callback);
    /*0x126be44*/ void RemoveLongPressEvent();
    /*0x126be04*/ void AddLongPressEvent(UnityEngine.Events.UnityAction unityAction);
    /*0x126bfe4*/ void SetGradeAmount(int _amount);
    /*0x126c810*/ void DefaultLongPressButton();
    /*0x126bcc8*/ void SetLocalizeAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size);
    /*0x126c8e4*/ void <DefaultLongPressButton>b__41_0();
}

class HeroSlotInventory : HeroSlot
{
    /*0x48*/ ButtonSound m_selectSound;
    /*0x4c*/ ButtonSound m_unSelectSound;
    /*0x50*/ System.Func<PTShare.Define.SHero, bool, bool, long, bool> OnClickUnit;
    /*0x58*/ System.Action<int, int, long> OnClickUnit_New;
    /*0x60*/ bool <IsHiredUnit>k__BackingField;
    /*0x64*/ int <TableID>k__BackingField;
    /*0x68*/ int <HeroID>k__BackingField;
    /*0x70*/ long <PlayerID>k__BackingField;
    /*0x78*/ bool <IsSelected>k__BackingField;
    /*0x79*/ bool <IsShaded>k__BackingField;

    /*0x126d188*/ HeroSlotInventory();
    /*0x126cdd8*/ bool get_IsHiredUnit();
    /*0x126cde0*/ void set_IsHiredUnit(bool value);
    /*0x126cdec*/ int get_TableID();
    /*0x126cdf4*/ void set_TableID(int value);
    /*0x126cdfc*/ int get_HeroID();
    /*0x126ce04*/ void set_HeroID(int value);
    /*0x126ce0c*/ long get_PlayerID();
    /*0x126ce14*/ void set_PlayerID(long value);
    /*0x126ce1c*/ bool get_IsSelected();
    /*0x126ce24*/ void set_IsSelected(bool value);
    /*0x126ce30*/ bool get_IsShaded();
    /*0x126ce38*/ void set_IsShaded(bool value);
    /*0x126ce44*/ int get_GetUnitGrade();
    /*0x126ce74*/ int get_GetUnitTableID();
    /*0x126ce90*/ int get_GetUnitHeroID();
    /*0x126cea8*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126cee4*/ void SetMercenaryInfo(PTShare.Define.SHero _hero);
    /*0x126cfb4*/ void OnClick();
    /*0x126d15c*/ void SetShade(bool _bShade);
    /*0x126d120*/ void SetSelected(bool _bSelected);
    /*0x126d168*/ void SetFriend();
}

class HeroSlotInventory_GuildWar : HeroSlotInventory
{
    /*0x80*/ UnityEngine.UI.Text m_NicknameText;
    /*0x88*/ AtlasImage m_SupportIcon;
    /*0x90*/ UnityEngine.UI.Text m_SupportCountText;

    /*0x126d544*/ HeroSlotInventory_GuildWar();
    /*0x126d1e8*/ void SetActiveSupportIcon(bool _bActive);
    /*0x126d200*/ void SetSupportIconCount(int _nCount);
    /*0x126d2c0*/ void SetNickname(string _sNickname);
    /*0x126d34c*/ void SetGuildWarInfo(PTShare.Define.SHero _sHero);
    /*0x126d3dc*/ void OnLongPress_GuildWar();
    /*0x126d548*/ bool <OnLongPress_GuildWar>b__7_0(PTShare.Define.SGuildWarHero x);
}

class HeroSlotInventory_GuildWarPlayerSelectSlot : HeroSlotInventory
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x80*/ AtlasImage m_GuildExistHero;
    /*0x88*/ AtlasImage m_OutSelected;
    /*0x90*/ AtlasImage[] m_PositionIcon;

    static /*0x126d8f4*/ HeroSlotInventory_GuildWarPlayerSelectSlot();
    static /*0x126d56c*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0x126d660*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0x126d8f0*/ HeroSlotInventory_GuildWarPlayerSelectSlot();
    /*0x126d754*/ void SetActiveExistHero(bool enable);
    /*0x126d76c*/ void SetActiveOutSelected(bool enable);
    /*0x126d784*/ void SetPosition(PTShare.Define.GuildWarPosition ePosition);
    /*0x126d85c*/ void CustomLongPressEvent();
}

class HeroSlotInventory_RunGame : HeroSlot
{
    /*0x48*/ UnityEngine.UI.Text m_LockTimeText;
    /*0x50*/ bool IsTimerLocked;

    /*0x126db74*/ HeroSlotInventory_RunGame();
    /*0x126d8f8*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126da04*/ void OnClick();
    /*0x126da14*/ void SetLockTimer(int _dRemainTime);
}

class HeroSlotMaze : HeroSlotInventory
{
    /*0x80*/ UnityEngine.UI.Slider m_hpSlider;
    /*0x88*/ UnityEngine.UI.Slider m_mpSlider;
    /*0x90*/ TooltipTargetUI m_tooltipTargetUI;
    /*0x98*/ TooltipData_Unit tooltipunit;
    /*0xa0*/ UnityEngine.GameObject m_mateMark;
    /*0xa8*/ bool m_fixedShade;
    /*0xac*/ Battle.GameModeType m_gameModeType;

    /*0x126e0a0*/ HeroSlotMaze();
    /*0x126dbdc*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126de0c*/ void Init(PTShare.Define.SHero _hero, Battle.GameModeType gameModeType, System.Action<PTShare.Define.SHero> _callback);
    /*0x126df74*/ void UseTooltip();
    /*0x126e028*/ void SetShade(bool _bShade);
    /*0x126e040*/ void SetMateIcon(bool isMate);
    /*0x126e058*/ void SetHpPercent(float percent);
    /*0x126e07c*/ void SetMpPercent(float percent);
    /*0x126dd44*/ ConditionHeroData FindHeroData(int heroId);
}

class HeroSlotSelect : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_emptySlot;
    /*0x50*/ int m_index;
    /*0x54*/ bool m_isEmpty;
    /*0x58*/ System.Action<int> m_click;

    /*0x126e494*/ HeroSlotSelect();
    /*0x126e104*/ bool IsEmpty();
    /*0x126e10c*/ void InitSlot(int index, System.Action<int> click);
    /*0x126e220*/ void InitSlot(int index, PTShare.Define.SHero sHero, System.Action<int> click);
    /*0x126e3d4*/ void OnClick_SHero(PTShare.Define.SHero sHero);
    /*0x126e434*/ void OnClick();
}

class HeroTroopPage : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_TroopTeamEntity m_ScrollContent;

    /*0x12702bc*/ HeroTroopPage();
    /*0x126f820*/ System.Collections.Generic.List<PTShare.Define.STroop> get_m_liTroop();
    /*0x126f8a0*/ void InitalizeEvent();
    /*0x126fb58*/ void DeleteEvent();
    /*0x126fff8*/ void InitializeTroop();
    /*0x1270060*/ void CheckInitialize();
    /*0x126fffc*/ void InitializeScroll();
    /*0x12701ac*/ void HandlerScrollContent(int _index, TroopTeamEntity _obj);
    /*0x1270274*/ void HandleHeroWindowEvent(int _type);
    /*0x12702b8*/ void HandleProtocolChange();
}

class HeroMainWindow : GuiBase
{
    static /*0x0*/ System.Action<int> OnChagneCurrentMenu;
    static /*0x8*/ System.Action OnExitEvent;
    /*0x40*/ ButtonTapBase[] m_arrButtonTapList;
    /*0x48*/ HeroBookPage m_cHeroBookPage;
    /*0x50*/ HeroInventoryPage_Inven m_cHeroInventoryPage;
    /*0x58*/ HeroTroopPage m_cHeroTroopPage;
    /*0x60*/ string[] m_arrLocalizeKey;
    /*0x68*/ string[] m_arrReddotKey;
    /*0x70*/ int m_nCurrentMenuType;

    static /*0xf3fd30*/ HeroMainWindow();
    static /*0xf2d884*/ void add_OnChagneCurrentMenu(System.Action<int> value);
    static /*0xf2d790*/ void remove_OnChagneCurrentMenu(System.Action<int> value);
    static /*0xf3f3b8*/ void add_OnExitEvent(System.Action value);
    static /*0xf3f4b0*/ void remove_OnExitEvent(System.Action value);
    /*0xf3fb18*/ HeroMainWindow();
    /*0xf3f5a8*/ void OnCreate();
    /*0xf3f720*/ void OnEnter();
    /*0xf3f8d4*/ void OnStart();
    /*0xf3f8d8*/ void OnFinish();
    /*0xf3f8dc*/ void OnLeave();
    /*0xf3f9c8*/ void OnDelete();
    /*0xf3f9cc*/ void OnExit();
    /*0xf3f5ac*/ void InitButton();
    /*0xf3fa88*/ void UpdateButton();
    /*0xf3f840*/ void SetCurrentMenu(int _type);
    /*0xf3fb00*/ void HandleCurrentChangeMenu(int _index);

    enum HeroMenuType
    {
        NONE = -1,
        INVENTORY = 0,
        TROOP = 1,
        BOOK = 2,
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int index;
        /*0x18*/ HeroMainWindow <>4__this;

        /*0x105b344*/ <>c__DisplayClass21_0();
        /*0x105b34c*/ void <InitButton>b__0();
    }
}

class ItemChangeAmount : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Amount;
    /*0x20*/ int m_nMaxAmount;
    /*0x24*/ int m_nAmount;

    /*0x1579a30*/ ItemChangeAmount();
    /*0x1579a18*/ void SetMaxAmount(int _maxAmount);
    /*0x1579a28*/ int GetAmount();
    void ChangeAmount(int _amount);
    int SetAmount(int _amount);
    void RefreshAmountText();
}

class ItemChangeAmountWindow : ItemChangeAmount
{
    static /*0x0*/ System.Action<int, int> OnChangeValue;
    /*0x28*/ UnityEngine.GameObject m_TotalAmountGroup;
    /*0x30*/ System.Collections.Generic.List<ItemChangeAmountWindow.AmountPrice> m_PriceGroup;
    /*0x38*/ ItemType m_eItemType;
    /*0x40*/ TableData.TableData_Item m_ItemInfo;
    /*0x48*/ PTShare.Define.SItem m_UserItemInfo;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_liItemReward;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_liIdleReward;
    /*0x60*/ TableData.TableData_Stageidle m_IdleInfo;
    /*0x68*/ bool m_bIsView;

    static /*0x157afd8*/ ItemChangeAmountWindow();
    static /*0x1579a94*/ void add_OnChangeValue(System.Action<int, int> value);
    static /*0x1579b88*/ void remove_OnChangeValue(System.Action<int, int> value);
    /*0x157af40*/ ItemChangeAmountWindow();
    /*0x1579a38*/ int get_UseItemCount();
    /*0x1579a54*/ int get_NeedItemCount();
    /*0x1579a70*/ int get_RewardSecTime();
    /*0x1579c7c*/ void InitializeWindow(ItemType _type, TableData.TableData_Item _item, bool _isAmountView);
    /*0x157a14c*/ void RefreshTotalAmount();
    /*0x1579ffc*/ void RefreshPriceGroup();
    /*0x157a1b0*/ void FixedAmount();
    /*0x157a4d4*/ void TimerAmount();
    /*0x157a9e0*/ void ChangeAmount(int _amount);
    /*0x157aac8*/ void ChangeFixedAmount(int _amount);
    /*0x157ac80*/ int SetAmount(int _amount);
    /*0x157aba8*/ int SetFixedAmount(int _amount);
    /*0x157ad68*/ void RefreshAmountText();
    /*0x157a108*/ bool IsSoulStone();
    /*0x157a118*/ bool InvaildSoulStone();
    /*0x157ae78*/ void RefreshNativeImage();
    /*0x157afdc*/ Rewards <InitializeWindow>b__19_0(Rewards x);

    class AmountPrice
    {
        /*0x10*/ UnityEngine.GameObject Object;
        /*0x18*/ AtlasImage Icon;
        /*0x20*/ LocalizeString Amount;

        /*0xe505ac*/ AmountPrice();
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ ItemChangeAmountWindow <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<Rewards> <>9__0;

        /*0xe50510*/ <>c__DisplayClass23_0();
        /*0xe50518*/ bool <TimerAmount>b__0(Rewards x);
    }
}

class SelectItemChangeAmountWindow : ItemChangeAmount
{
    static /*0x0*/ System.Action<int, int, int> OnChangeValue;
    /*0x28*/ int m_nIndex;
    /*0x2c*/ int m_nItemIndex;

    static /*0xe239c4*/ SelectItemChangeAmountWindow();
    static /*0xe23624*/ void add_OnChangeValue(System.Action<int, int, int> value);
    static /*0xe23718*/ void remove_OnChangeValue(System.Action<int, int, int> value);
    /*0xe239bc*/ SelectItemChangeAmountWindow();
    /*0xe2380c*/ void InitailizeAmount(int _arrIndex, int _itemIndex, int _amount, int _maxAmount);
    /*0xe23820*/ void ChangeAmount(int _amount);
    /*0xe238e4*/ void RefreshAmountText();
    /*0xe23980*/ int SetAmount(int _amount);
}

class ItemDecomposeInputWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.InputField m_inputField;
    /*0x20*/ System.Action<int> onSubmitCallback;

    /*0x157b128*/ ItemDecomposeInputWindow();
    /*0x157b030*/ void Initialize(System.Action<int> _onSubmitCallback);
    /*0x157b05c*/ void OnClickConfirm();
    /*0x157b100*/ void OnClickCancel();
}

enum ItemSelectBoxType
{
    UNIT = 0,
    ITEM = 1,
    EQUIP = 2,
}

class ItemSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemSelectSlot m_ItemBox;
    /*0x20*/ SelectItemChangeAmountWindow m_SelectAmountWindow;
    /*0x28*/ bool m_bIsTypeItem;

    /*0x1584594*/ ItemSelectEntity();
    /*0x158432c*/ void InitializeEntity(ItemSelectBoxType _type, int _arrIndex, int _itemIndex, int _amount, int _maxAmount);
    /*0x1584544*/ void RefreshEntity(int _maxAmount);
    /*0x158451c*/ void SetSelectItem(bool _enable);
}

class LoginPlatformView : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<LoginPlatformView.PlatformButton> m_liPlatformButton;

    /*0xfbae78*/ LoginPlatformView();
    /*0xfbac50*/ void InitializePlatform();

    class PlatformButton
    {
        /*0x10*/ PUBSDK.DefinePubSDK.PubLoginType platform;
        /*0x18*/ UnityEngine.UI.Button button;

        /*0xe5a8b4*/ PlatformButton();
    }

    class <>c__DisplayClass2_0
    {
        /*0x10*/ LoginPlatformView.PlatformButton x;

        /*0xe5a810*/ <>c__DisplayClass2_0();
        /*0xe5a818*/ void <InitializePlatform>b__2();
    }

    class <>c
    {
        static /*0x0*/ LoginPlatformView.<> <>9;
        static /*0x8*/ System.Predicate<LoginPlatformView.PlatformButton> <>9__2_0;
        static /*0x10*/ System.Action<LoginPlatformView.PlatformButton> <>9__2_1;

        static /*0xe5a698*/ <>c();
        /*0xe5a6f8*/ <>c();
        /*0xe5a700*/ bool <InitializePlatform>b__2_0(LoginPlatformView.PlatformButton x);
        /*0xe5a720*/ void <InitializePlatform>b__2_1(LoginPlatformView.PlatformButton x);
    }
}

class MailEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SMail> OnClickEvent;
    /*0x18*/ LocalizeString m_cMailTitle;
    /*0x20*/ LocalizeString m_cMailTime;
    /*0x28*/ AtlasImage m_cMailNewDot;
    /*0x30*/ AtlasImage m_cMailIcon;
    /*0x38*/ AtlasImage m_cMailBackground;
    /*0x40*/ ItemRewardGroup m_cItemRewardGroup;
    /*0x48*/ PTShare.Define.SMail m_MailInfo;
    /*0x50*/ System.Collections.Generic.List<string> m_MailTitleKey;

    static /*0xddf720*/ MailEntity();
    static /*0xddeb9c*/ void add_OnClickEvent(System.Action<PTShare.Define.SMail> value);
    static /*0xddec90*/ void remove_OnClickEvent(System.Action<PTShare.Define.SMail> value);
    /*0xddf6a8*/ MailEntity();
    /*0xdded84*/ void InitMailInfo(PTShare.Define.SMail _mail);
    /*0xddf4f4*/ void OnClickMail();
    /*0xddf5cc*/ string GetExpireDateToString();
    /*0xddf260*/ int GetExpireDateToInt();
    /*0xddf324*/ void AlreadyReceiveMail();

    class <>c
    {
        static /*0x0*/ MailEntity.<> <>9;
        static /*0x8*/ System.Converter<string, string> <>9__11_0;

        static /*0xe5c5fc*/ <>c();
        /*0xe5c65c*/ <>c();
        /*0xe5c664*/ string <InitMailInfo>b__11_0(string x);
    }
}

class MailPopup : GuiBase
{
    /*0x40*/ ScrollContent_Mail m_cScrollContent;
    /*0x48*/ UnityEngine.GameObject m_MailListGroup;
    /*0x50*/ MailView m_MailViewGroup;
    /*0x58*/ UnityEngine.GameObject m_EmptyMailText;
    /*0x60*/ UnityEngine.UI.Button m_LeftButton;
    /*0x68*/ UnityEngine.UI.Button m_RightButton;
    /*0x70*/ LocalizeString m_cLeftBtnText;
    /*0x78*/ LocalizeString m_cRightBtnText;
    /*0x80*/ PTShare.Define.SMail m_curMailInfo;

    /*0xde1f28*/ MailPopup();
    /*0xde081c*/ System.Collections.Generic.List<PTShare.Define.SMail> get_m_liMailList();
    /*0xde089c*/ bool get_UseReceiveMail();
    /*0xde0918*/ bool get_UseDeleteMail();
    /*0xde0994*/ void OnExit();
    /*0xde0cc8*/ void OnCreate();
    /*0xde0ccc*/ void OnEnter();
    /*0xde0f70*/ void OnStart();
    /*0xde0f74*/ void OnFinish();
    /*0xde0f78*/ void OnLeave();
    /*0xde10ac*/ void OnDelete();
    /*0xde10b0*/ void RemoveMailAll();
    /*0xde11cc*/ void OnRemoveMailAllEvent();
    /*0xde11f0*/ void TakeMail();
    /*0xde12ec*/ void TakeMail(System.Action<PTShare.Define.SProperty> _callback);
    /*0xde1388*/ void OnTakeMailEvent(PTShare.Define.SProperty _reward);
    /*0xde14c4*/ void TakeMailAll();
    /*0xde15b4*/ void OnTakeMailAllEvent(PTShare.Define.SProperty _reward);
    /*0xde15e4*/ void OnClickLeftButton();
    /*0xde1680*/ void OnClickRightButton();
    /*0xde0f04*/ void RefreshScrollContent();
    /*0xde16c8*/ void HandleTryItemUpdate(int _index, MailEntity _content);
    /*0xde1748*/ void HandlerClickMailEntity(PTShare.Define.SMail _mailInfo);
    /*0xde1a54*/ void HandlerRefreshWindow();
    /*0xde1abc*/ void CallbackEmptyMailEvent(PTShare.Define.SProperty _reward);
    /*0xde0a80*/ void OpenMailList();
    /*0xde1824*/ void OpenMailView(bool _emptyReward);
    /*0xde1c08*/ void RefreshInteractableButton(bool _leftbtn, bool _rightbtn);
    /*0xde13b8*/ void OpenRewardPopup(PTShare.Define.SProperty _reward);
    /*0xde1f30*/ bool <CallbackEmptyMailEvent>b__35_0(PTShare.Define.SMail x);
}

class MailView : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_cMailTitle;
    /*0x20*/ LocalizeString m_cMailContext;
    /*0x28*/ LocalizeString m_cMailExpire;
    /*0x30*/ UnityEngine.GameObject m_MailRewardGroup;
    /*0x38*/ ItemRewardGroup m_cItemRewardList;
    /*0x40*/ PTShare.Define.SMail m_MailInfo;
    /*0x48*/ System.Collections.Generic.List<string> m_MailStringKey;

    /*0xde238c*/ MailView();
    /*0xde1c50*/ void InitMailView(PTShare.Define.SMail _mail, bool _isEmpty);
    /*0xde1f60*/ void SetLocalString(LocalizeString _local, string _key);
    /*0xde0a5c*/ bool IsActive();
    /*0xde1bd4*/ void SetActive(bool _enable);
    /*0xde22b0*/ string GetExpireDateToString();
    /*0xde21ec*/ int GetExpireDateToInt();

    class <>c
    {
        static /*0x0*/ MailView.<> <>9;
        static /*0x8*/ System.Converter<string, string> <>9__8_0;

        static /*0xe5d08c*/ <>c();
        /*0xe5d0ec*/ <>c();
        /*0xe5d0f4*/ string <SetLocalString>b__8_0(string x);
    }
}

class AutoBattleCanvas : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Canvas m_Canvas;

    /*0xf863c0*/ AutoBattleCanvas();
    /*0xf86358*/ void Awake();
}

class BottomMenuBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ string m_strMenuName;
    /*0x20*/ AtlasImage ButtonFrame;
    /*0x28*/ AtlasImage ButtonIcon;
    /*0x30*/ string[] ButtonIconSprite;

    /*0x13645b4*/ BottomMenuBase();
    /*0x1364474*/ string get__MenuName();
    /*0x136447c*/ void ActiveButton(string _menuName);
}

class TopMenuBuyInApp : TopMenuChild
{
    /*0x30*/ TableData.TableData_Event m_eventData;
    /*0x38*/ TableData.TableData_Eventbuyinapp m_eventBuyInAppData;
    /*0x40*/ TableData.TableData_Eventpreset m_eventPreset;
    /*0x48*/ DefineEvent.TriggerData m_triggerData;

    /*0x117b0c0*/ TopMenuBuyInApp();
    /*0x117a944*/ void SetBuyInAppData(TableData.TableData_Event data);
    /*0x117af74*/ void ButtonEvent();
    /*0x117b04c*/ EventParentPopup ShowEventParent();
    /*0x117af78*/ void ShowBuyInApp();
    /*0x117b0d0*/ void <ShowBuyInApp>b__7_0();

    class <>c
    {
        static /*0x0*/ TopMenuBuyInApp.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Eventpage> <>9__7_1;

        static /*0xcd20f8*/ <>c();
        /*0xcd2158*/ <>c();
        /*0xcd2160*/ bool <ShowBuyInApp>b__7_1(TableData.TableData_Eventpage eventPageData);
    }
}

class TopMenuDaily : TopMenuChild
{
    /*0x117c02c*/ TopMenuDaily();
    /*0x117c028*/ void ButtonEvent();
}

class TopMenuEvent : TopMenuChild
{
    /*0x117c154*/ TopMenuEvent();
    /*0x117c034*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuEvent.<> <>9;
        static /*0x8*/ System.Action <>9__0_1;
        static /*0x10*/ System.Action <>9__0_0;

        static /*0xcd218c*/ <>c();
        /*0xcd21ec*/ <>c();
        /*0xcd21f4*/ void <ButtonEvent>b__0_0();
        /*0xcd233c*/ void <ButtonEvent>b__0_1();
    }
}

class TopMenuFriend : TopMenuChild
{
    /*0x117c2c8*/ TopMenuFriend();
    /*0x117c15c*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuFriend.<> <>9;
        static /*0x8*/ System.Action <>9__0_1;
        static /*0x10*/ System.Action <>9__0_0;

        static /*0xcd23bc*/ <>c();
        /*0xcd241c*/ <>c();
        /*0xcd2424*/ void <ButtonEvent>b__0_0();
        /*0xcd256c*/ void <ButtonEvent>b__0_1();
    }
}

class TopMenuInventory : TopMenuChild
{
    /*0x117c358*/ TopMenuInventory();
    /*0x117c2d0*/ void ButtonEvent();
}

class TopMenuLimitedSeller : TopMenuChild
{
    /*0x30*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x117c8a0*/ TopMenuLimitedSeller();
    /*0x117c360*/ void OnDisable();
    /*0x117c390*/ void OnEnable();
    /*0x117c44c*/ void SetTimeText();
    /*0x117c72c*/ void Init(TopMenuType _type, TableData.TableData_Menusettingbase _base);
    /*0x117c754*/ void ButtonEvent();
    /*0x117c3e0*/ System.Collections.IEnumerator CoUpdateTimer();

    class <>c
    {
        static /*0x0*/ TopMenuLimitedSeller.<> <>9;
        static /*0x8*/ System.Action <>9__5_0;

        static /*0xcd2618*/ <>c();
        /*0xcd2678*/ <>c();
        /*0xcd2680*/ void <ButtonEvent>b__5_0();
    }

    class <CoUpdateTimer>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TopMenuLimitedSeller <>4__this;
        /*0x28*/ System.TimeSpan <minTime>5__2;
        /*0x30*/ System.TimeSpan <secSpan>5__3;
        /*0x38*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__4;

        /*0xcd2708*/ <CoUpdateTimer>d__6(int <>1__state);
        /*0xcd2734*/ void System.IDisposable.Dispose();
        /*0xcd2738*/ bool MoveNext();
        /*0xcd2ce8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd2cf0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd2d30*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TopMenuNotice : TopMenuChild
{
    /*0x117c930*/ TopMenuNotice();
    /*0x117c8a8*/ void ButtonEvent();
}

class TopMenuPost : TopMenuChild
{
    /*0x117ca90*/ TopMenuPost();
    /*0x117c938*/ void ButtonEvent();
    /*0x117ca1c*/ void ShowMailPopup();
}

class TopMenuQuest : TopMenuChild
{
    /*0x117cbe0*/ TopMenuQuest();
    /*0x117ca98*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuQuest.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;

        static /*0xcd2d38*/ <>c();
        /*0xcd2d98*/ <>c();
        /*0xcd2da0*/ void <ButtonEvent>b__0_0();
    }
}

class TopMenuShop : TopMenuChild
{
    /*0x117cd58*/ TopMenuShop();
    /*0x117cbe8*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuShop.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;

        static /*0xcd2e20*/ <>c();
        /*0xcd2e80*/ <>c();
        /*0xcd2e88*/ void <ButtonEvent>b__0_0();
    }
}

class TopMenuSpecialSeller : TopMenuChild
{
    /*0x30*/ PTShare.Define.SInstant m_packetData;
    /*0x38*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x117ced4*/ TopMenuSpecialSeller();
    /*0x117cd60*/ void OnDisable();
    /*0x117cd90*/ void OnEnable();
    /*0x117ce4c*/ void Init(TopMenuType _type, TableData.TableData_Menusettingbase _base);
    /*0x117a8ec*/ void SetSpecialSellerData(PTShare.Define.SInstant packetData);
    /*0x117ce74*/ void ButtonEvent();
    /*0x117cde0*/ System.Collections.IEnumerator CoUpdateTimer();

    class <CoUpdateTimer>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TopMenuSpecialSeller <>4__this;
        /*0x28*/ System.TimeSpan <expireTime>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;
        /*0x38*/ System.TimeSpan <secSpan>5__4;

        /*0xcd2f10*/ <CoUpdateTimer>d__7(int <>1__state);
        /*0xcd2f3c*/ void System.IDisposable.Dispose();
        /*0xcd2f40*/ bool MoveNext();
        /*0xcd32dc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd32e4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3324*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TopMenuBase : UnityEngine.MonoBehaviour
{
    static /*0x0*/ TopMenuType[] EVENT_TOPMENUS;
    static /*0x8*/ TopMenuType[] SPECIALSELLER_TOPMENUS;
    static /*0x10*/ System.Action OnRefreshReddot;
    static /*0x18*/ System.Action OnOpenLeftMenu;
    /*0x18*/ UnityEngine.GameObject m_MenuPrefeb;
    /*0x20*/ MenuSpread m_MenuSpread;
    /*0x28*/ UnityEngine.UI.GridLayoutGroup m_GridLayoutGroup;
    /*0x30*/ System.Collections.Generic.List<TopMenuType> m_liDefaultMenu;
    /*0x38*/ bool m_useSpecialSeller;
    /*0x39*/ bool m_useBuyInapp;
    /*0x3a*/ bool m_useLimitedSeller;
    /*0x3b*/ bool m_leftMenu;
    /*0x40*/ UnityEngine.GameObject m_reddot;
    /*0x48*/ System.Collections.Generic.List<TopMenuChild> m_liChildMenu;

    static /*0x117ae88*/ TopMenuBase();
    /*0x117ae10*/ TopMenuBase();
    /*0x1178dc4*/ void OnEnable();
    /*0x1179198*/ void OnDisable();
    /*0x1178dc8*/ void BindEvent();
    /*0x117919c*/ void RemoveEvent();
    /*0x1179528*/ void Init();
    /*0x1179594*/ void SetMenu();
    /*0x117a7cc*/ void SetMenuSpecialSeller(TopMenuChild topMenuChild, int index);
    /*0x117a5c0*/ void SetMenuEvent(TopMenuChild topMenuChild);
    /*0x117aa18*/ void AddMenu(TopMenuType _type, bool _refresh);
    /*0x117ab60*/ void DelMenu(TopMenuType _type, bool _refresh);
    /*0x117aca8*/ void CleanMenus(TopMenuType[] topMenuTypes);
    /*0x117a55c*/ bool IsContainsMenu(TopMenuType check, TopMenuType[] topMenuType);
    /*0x1179fa0*/ void UpdateEvent();
    /*0x117a2f0*/ void UpdateSpecialSeller();
    /*0x117a1d4*/ void UpdateLimitedSeller();
    /*0x1179bb4*/ void UpdateReddot();
    /*0x117ada4*/ void SetActive(bool _enable);
    /*0x117add8*/ void HandleExpireSpecialSeller(PTShare.Define.SInstant sInstant);
    /*0x117addc*/ void HandleRefresh();
    /*0x117ade0*/ void HandleShow();

    class <>c
    {
        static /*0x0*/ TopMenuBase.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Event> <>9__21_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Event> <>9__26_0;

        static /*0xcd2030*/ <>c();
        /*0xcd2090*/ <>c();
        /*0xcd2098*/ bool <SetMenuEvent>b__21_0(TableData.TableData_Event data);
        /*0xcd20b0*/ bool <UpdateEvent>b__26_0(TableData.TableData_Event data);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ TopMenuType _type;

        /*0xcd20c8*/ <>c__DisplayClass22_0();
        /*0xcd20d0*/ bool <AddMenu>b__0(TopMenuType x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ TopMenuType _type;

        /*0xcd20e0*/ <>c__DisplayClass23_0();
        /*0xcd20e8*/ bool <DelMenu>b__0(TopMenuType x);
    }
}

class TopMenuCache : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ImageIcon;
    /*0x20*/ AtlasImage m_RedDot;
    /*0x28*/ LocalizeString m_cTitle;
    /*0x30*/ CustomButton m_cButton;
    /*0x38*/ UnityEngine.GameObject m_timerObject;
    /*0x40*/ LocalizeString m_timer;
    /*0x48*/ UnityEngine.GameObject m_hotIcon;

    /*0x117b8c4*/ TopMenuCache();
    /*0x117b23c*/ void SetActiveRedDot(bool _enable);
    /*0x117b278*/ RedDotBase GetRedDotComponent();
    /*0x117b2cc*/ void AddRedDotComponent(System.Type _componentType);
    /*0x117b308*/ void SetAtlasIcon(AtlasType _type, string _name);
    /*0x117b3c8*/ void SetAtlasDot(AtlasType _type, string _name);
    /*0x117b488*/ void SetHotIcon(bool enable);
    /*0x117b52c*/ void SetLocalizeKeyTitle(string _key);
    /*0x117b66c*/ void SetCustomTitle(string _title);
    /*0x117b710*/ void SetTimerEnable(bool _enable);
    /*0x117b758*/ void SetTimer(string timerStr);
    /*0x117b76c*/ void ClearAddButtonEvent(UnityEngine.Events.UnityAction _callback);
    /*0x117b820*/ void AddButtonEvent(UnityEngine.Events.UnityAction _callback);
}

class TopMenuChild : UnityEngine.MonoBehaviour
{
    /*0x18*/ TableData.TableData_Menusettingbase m_MenuInfo;
    /*0x20*/ TopMenuCache m_cTopMenuCache;
    /*0x28*/ TopMenuType <MenuType>k__BackingField;

    /*0x117b0c8*/ TopMenuChild();
    /*0x117b8cc*/ TopMenuType get_MenuType();
    /*0x117b8d4*/ void set_MenuType(TopMenuType value);
    /*0x117b8dc*/ bool get_IsUseCacheComponent();
    /*0x117b948*/ void Awake();
    /*0x117b99c*/ void Init(TopMenuType _type, TableData.TableData_Menusettingbase _base);
    /*0x117a508*/ void CacheComponent();
    /*0x117bb98*/ void SetRedDot();
    /*0x117bd28*/ void SetHotIcon(bool _enable);
    /*0x117bab8*/ void SetIcon(AtlasType _type, string _name);
    /*0x117bb10*/ void SetTitle(string _key);
    /*0x117bdb0*/ void SetCustomTitle(string _title);
    /*0x117bd6c*/ void SetTimerEnable(bool _enable);
    /*0x117bdf4*/ void SetTimer(string timerStr);
    /*0x117bb54*/ void SetButtonEvent(UnityEngine.Events.UnityAction _callback);
    /*0x117be44*/ void ButtonEvent();
}

enum TopMenuType
{
    NONE = 0,
    SHOP = 1,
    EVENT = 2,
    DAILY = 3,
    POST = 4,
    FRIEND = 5,
    INVENTORY = 6,
    QUEST = 7,
    NOTICE = 8,
    SPECIAL_SELLER = 9,
    EVENT_MENU = 10,
    LIMITED_SELLER = 11,
    FIRST_INAPP = 12,
    SPECIAL_SELLER_SELECT = 13,
    End = 14,
}

enum TopMenuPosition
{
    LEFT = 0,
    RIGHT = 1,
}

class TopMenuController : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<TopMenuBase> m_liTopMenuList;

    /*0x117c020*/ TopMenuController();
    /*0x117beb0*/ void InitializeMenu();
    /*0x117bf4c*/ TopMenuBase GetMenu(TopMenuPosition _pos);
    /*0x117bfc0*/ void AddMenu(TopMenuPosition _pos, TopMenuType _type);
    /*0x117bff0*/ void DelMenu(TopMenuPosition _pos, TopMenuType _type);
}

class Theme : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Image m_image;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_spine;
    /*0x28*/ UnityEngine.Sprite[] m_sprites;

    /*0x116bb38*/ Theme();
    /*0x116b958*/ void OnEnable();

    enum THEME_SPINE_NAME
    {
        normal = 0,
        spring = 1,
        summer = 2,
        fall = 3,
        winter = 4,
        year_01 = 5,
    }
}

class ThemeData
{
    /*0x10*/ UnityEngine.GameObject parent;
    /*0x18*/ MainMenuType[] activeMenuType;

    /*0x116bb40*/ ThemeData();
}

class ThemePopup : GuiBase
{
    /*0x40*/ ThemeData[] m_themeDatas;

    /*0x116bfd4*/ ThemePopup();
    /*0x116bb48*/ void OnCreate();
    /*0x116bb4c*/ void OnDelete();
    /*0x116bb50*/ void OnEnter();
    /*0x116bb54*/ void OnFinish();
    /*0x116bb58*/ void OnLeave();
    /*0x116bc18*/ void OnStart();
    /*0x116bc1c*/ void InitPopup();
    /*0x116be8c*/ void ActiveTheme(ThemeData themeData, MainMenuType currMenu);
    /*0x116bdc8*/ void BindEvent();
    /*0x116bb5c*/ void RemoveEvent();
    /*0x116bf0c*/ void HandleChangeMenu(MainMenuType menuType);
}

class TreasureboxGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject[] m_obTreasureBox;
    /*0x20*/ int[] RewardTime;
    /*0x28*/ int remainTime;
    /*0x30*/ System.Collections.IEnumerator m_IERegisterTime;

    /*0x1120350*/ TreasureboxGroup();
    /*0x111fdb8*/ System.DateTime get_LasttimeRewarded();
    /*0x111fe38*/ System.DateTime get_curNow();
    /*0x111feb8*/ void LoadTreaureBox();
    /*0x11201d8*/ void OnEnable();
    /*0x1120288*/ void OnDisable();
    /*0x112034c*/ void HandlerChangeUserInfo();
    /*0x112015c*/ System.Collections.IEnumerator IE_RegisterTresureBoxTime(int _fRemainTime);
    /*0x112012c*/ void ReleaseRigsterTime();

    class <IE_RegisterTresureBoxTime>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int _fRemainTime;
        /*0x28*/ TreasureboxGroup <>4__this;

        /*0xcd3b68*/ <IE_RegisterTresureBoxTime>d__12(int <>1__state);
        /*0xcd3b94*/ void System.IDisposable.Dispose();
        /*0xcd3b98*/ bool MoveNext();
        /*0xcd3c48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd3c50*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3c90*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum MainMenuType
{
    None = 0,
    CampainMainWindow = 1,
    ChatMainWindow = 2,
    AreaMainWindow = 3,
    HeroMainWindow = 4,
    CampMainWindow = 5,
    End = 6,
}

enum MainParentType
{
    NONE = 0,
    ONLYTOP = 1,
    ONLYTOPHIDEMENU = 2,
    ONLYBOTTOM = 3,
    ALL = 4,
    ALLHIDEMENU = 5,
}

class MainButtonWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<MainMenuType> OnChangeMainMenu;
    /*0x18*/ System.Collections.Generic.List<BottomMenuBase> m_liBottomMenuList;
    /*0x20*/ UnityEngine.GameObject m_TopParent;
    /*0x28*/ UnityEngine.GameObject m_BottomParent;
    /*0x30*/ UnityEngine.GameObject m_BottomCampainParent;
    /*0x38*/ UnityEngine.GameObject m_BottomMainParent;
    /*0x40*/ UnityEngine.GameObject m_BattleBtn;
    /*0x48*/ UnityEngine.GameObject m_BattleHardBtn;
    /*0x50*/ LocalizeString m_BattleBtnText;
    /*0x58*/ LocalizeString m_BattleHardBtnText;
    /*0x60*/ TopMenuController m_TopMenuContorller;
    /*0x68*/ UnityEngine.GameObject m_Leaflet;
    /*0x70*/ UnityEngine.GameObject m_GuildWar;
    /*0x78*/ UnityEngine.GameObject m_EventBoss;
    /*0x80*/ AtlasImage m_EventBossIcon;
    /*0x88*/ LocalizeString m_EventBossTitle;
    /*0x90*/ UnityEngine.GameObject m_EventRoulette;
    /*0x98*/ GuiBase m_CurMenu;
    /*0xa0*/ MainMenuType m_eMenuType;
    /*0xa8*/ System.Collections.Generic.Queue<int> m_QueueCode;
    /*0xb0*/ int[] m_DetachCode;

    static /*0xde5954*/ MainButtonWindow();
    static /*0xde240c*/ void add_OnChangeMainMenu(System.Action<MainMenuType> value);
    static /*0xde2500*/ void remove_OnChangeMainMenu(System.Action<MainMenuType> value);
    /*0xde5894*/ MainButtonWindow();
    /*0xde2404*/ MainMenuType get_CurrentMenuType();
    /*0xde25f4*/ void OnEnable();
    /*0xde3030*/ void OnDisable();
    /*0xde32d8*/ void OnClickSelectMenu(int _type);
    /*0xde3378*/ void EasterEgg(int type);
    /*0xde3588*/ void SelectMenu(MainMenuType _type);
    /*0xde34b4*/ void StartPageAnimation();
    /*0xde3630*/ void SetInterfaceView(MainParentType _viewType);
    /*0xde37e4*/ void SetTopBottomActiveController(bool _isTop, bool _isBottom);
    /*0xde37c8*/ TopMenuBase GetMenuBase(TopMenuPosition _position);
    /*0xde2aa0*/ void RefreshBattleButton();
    /*0xde2e5c*/ void SetEventBossView();
    /*0xde382c*/ void SetActiveBottomButton(string _name);
    /*0xde2d84*/ bool IsShowGuildWarIcon();
    /*0xde38e8*/ void OnClick_Battle();
    /*0xde3de8*/ void OnClick_Profile();
    /*0xde3e5c*/ void OnClick_WorldMap();
    /*0xde3fa4*/ UserData get_m_userData();
    /*0xde4034*/ void OnClick_IdleReward(bool _isFast);
    /*0xde4684*/ void OnClick_CashShop();
    /*0xde480c*/ void OnClick_Leaflet();
    /*0xde48cc*/ void OnClick_GuildWar();
    /*0xde4a10*/ void OnClick_House();
    /*0xde4f20*/ void OnClick_EventBoss();
    /*0xde50a4*/ void OnClick_EventRoulette();
    /*0xde50f8*/ void OnClick_Ads();
    void OnClickMenu<T>();
    /*0xde5178*/ void HandlerChangeMenu(MainMenuType _type);
    /*0xde56f4*/ void HandlerExit();
    /*0xde56fc*/ void HandlerChangeChapter();
    /*0xde578c*/ void HandlerDailyChange();
    /*0xde5858*/ void HandlerCheckGuildWarIcon(PTShare.Define.SGuild sGuild);
    /*0xde5958*/ void <StartPageAnimation>b__30_0();

    class <>c
    {
        static /*0x0*/ MainButtonWindow.<> <>9;
        static /*0x8*/ System.Action <>9__40_0;
        static /*0x10*/ System.Action <>9__44_0;
        static /*0x18*/ System.Action <>9__46_1;
        static /*0x20*/ System.Action <>9__46_0;
        static /*0x28*/ System.Action <>9__47_1;
        static /*0x30*/ System.Action <>9__47_0;
        static /*0x38*/ System.Action <>9__48_1;
        static /*0x40*/ System.Action <>9__48_0;

        static /*0xe5d1f8*/ <>c();
        /*0xe5d258*/ <>c();
        /*0xe5d260*/ void <OnClick_WorldMap>b__40_0();
        /*0xe5d348*/ void <OnClick_CashShop>b__44_0();
        /*0xe5d3d0*/ void <OnClick_GuildWar>b__46_0();
        /*0xe5d518*/ void <OnClick_GuildWar>b__46_1();
        /*0xe5d620*/ void <OnClick_House>b__47_0();
        /*0xe5d768*/ void <OnClick_House>b__47_1();
        /*0xe5d7e8*/ void <OnClick_EventBoss>b__48_0();
        /*0xe5d930*/ void <OnClick_EventBoss>b__48_1();
    }

    class <>c__DisplayClass43_0
    {
        /*0x10*/ bool _isFast;
        /*0x18*/ MainButtonWindow <>4__this;
        /*0x20*/ System.Action <>9__3;
        /*0x28*/ System.Action<PTShare.Define.SProperty> <>9__2;

        /*0xe5d984*/ <>c__DisplayClass43_0();
        /*0xe5d98c*/ void <OnClick_IdleReward>b__1(bool _instance);
        /*0xe5daa4*/ void <OnClick_IdleReward>b__2(PTShare.Define.SProperty _reward);
        /*0xe5dc30*/ void <OnClick_IdleReward>b__3();
        /*0xe5dcbc*/ void <OnClick_IdleReward>b__0(PTShare.Define.SProperty response);
    }
}

class MainUserWindow : GuiBase
{
    static /*0x0*/ System.Action OnMainWindowEvent;
    /*0x40*/ MainButtonWindow m_MainButtonWindow;

    static /*0xde989c*/ MainUserWindow();
    static /*0xde91bc*/ void add_OnMainWindowEvent(System.Action value);
    static /*0xde92b0*/ void remove_OnMainWindowEvent(System.Action value);
    /*0xde9894*/ MainUserWindow();
    /*0xde93a4*/ void OnCreate();
    /*0xde93fc*/ void OnEnter();
    /*0xde9510*/ void OnStart();
    /*0xde9514*/ void OnFinish();
    /*0xde9518*/ void OnLeave();
    /*0xde951c*/ void OnDelete();
    /*0xde9520*/ void OnExit();
    /*0xde9528*/ void InitalizeMenu(MainMenuType _type, bool useSubEvent);
    /*0xde9600*/ void SubEvent(MainMenuType _type);
    /*0xde9868*/ void RefreshBattleButton();
    /*0xde9878*/ MainMenuType GetCurrentMenuType();

    class <>c
    {
        static /*0x0*/ MainUserWindow.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;

        static /*0xe5df38*/ <>c();
        /*0xe5df98*/ <>c();
        /*0xe5dfa0*/ void <SubEvent>b__12_0();
    }
}

class LendGenericWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_MercenaryLendedEntity m_ScrollContent;
    /*0x20*/ UnityEngine.GameObject m_NothingText;

    /*0xfa8c78*/ LendGenericWindow();
    /*0xfa889c*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> get_curLendedList();
    /*0xfa891c*/ void OnEnable();
    /*0xfa8a48*/ void OnDisable();
    /*0xfa8b1c*/ void InitializeWindow();
    /*0xfa8b94*/ void InitializeScroll();
    /*0xfa8bf4*/ void HandlerScrollContent(int _index, MercenaryLendedEntity _obj);
}

class RequestLendWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_MercenaryLendRequestEntity m_ScrollContent;
    /*0x20*/ UnityEngine.GameObject m_NothingText;
    /*0x28*/ UnityEngine.UI.Button m_IgnoreButton;
    /*0x30*/ UnityEngine.UI.Button m_LendButton;
    /*0x38*/ System.Collections.Generic.List<MercenaryPlayerSet> m_liLendPlayer;

    /*0xf24760*/ RequestLendWindow();
    /*0xf23f94*/ void OnEnable();
    /*0xf24168*/ void OnDisable();
    /*0xf242b4*/ void InitializeWindow();
    /*0xf243a4*/ void InitializeScroll();
    /*0xf24400*/ void HandlerScrollContent(int _index, MercenaryLendRequestEntity _obj);
    /*0xf24514*/ void OnClickFastLend();
    /*0xf24634*/ void OnClickAllIgnoreLend();
    /*0xf24754*/ void CallbackProtocolFastLend();
    /*0xf24758*/ void CallbackProtocolAllIgnoreLend();
    /*0xf2475c*/ void HandlerChangeEvent();
}

class GestureButtonEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Desc;
    /*0x20*/ ANIMATION_CLIP eAnimationClip;
    /*0x28*/ Spine.Unity.SkeletonGraphic character;
    /*0x30*/ bool bIsLoop;

    /*0xed37a0*/ GestureButtonEntity();
    /*0xed3564*/ void InitializeEntity(Spine.Unity.SkeletonGraphic skeleCharacter, ANIMATION_CLIP eClipType, bool isLoop);
    /*0xed357c*/ void SetLocalizeButton(ANIMATION_CLIP eClipType);
    /*0xed36e4*/ void OnClick_Button();
}

class NoticeDescriptionView : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Description;
    /*0x20*/ LocalizeString m_Title;
    /*0x28*/ LocalizeString m_RegDate;
    /*0x30*/ UnityEngine.UI.Button m_LinkButton;
    /*0x38*/ UnityEngine.UI.Image m_Banner;
    /*0x40*/ UnityEngine.UI.ScrollRect m_NoticeScroll;
    /*0x48*/ PTShare.Define.SNotice noticeData;

    /*0x2b52aa4*/ NoticeDescriptionView();
    /*0x2b5259c*/ void OnDisable();
    /*0x2b526f0*/ void OnDestroy();
    /*0x2b52844*/ void Initialize(PTShare.Define.SNotice _data);
    /*0x2b529c0*/ System.Collections.IEnumerator CoScrollUpdate();
    /*0x2b52a2c*/ System.Collections.IEnumerator CoTextureUpdate();
    /*0x2b52a98*/ void OnClick_LinkButton();

    class <CoScrollUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ NoticeDescriptionView <>4__this;

        /*0x1089ccc*/ <CoScrollUpdate>d__10(int <>1__state);
        /*0x1089cf8*/ void System.IDisposable.Dispose();
        /*0x1089cfc*/ bool MoveNext();
        /*0x1089da8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1089db0*/ void System.Collections.IEnumerator.Reset();
        /*0x1089df0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTextureUpdate>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ NoticeDescriptionView <>4__this;
        /*0x28*/ UnityEngine.Networking.UnityWebRequest <www>5__2;

        /*0x1089df8*/ <CoTextureUpdate>d__11(int <>1__state);
        /*0x1089e24*/ void System.IDisposable.Dispose();
        /*0x1089e28*/ bool MoveNext();
        /*0x108a068*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108a070*/ void System.Collections.IEnumerator.Reset();
        /*0x108a0b0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class NoticeEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_title;
    /*0x20*/ LocalizeString m_releaseDate;
    /*0x28*/ UnityEngine.GameObject m_RedDot;
    /*0x30*/ PTShare.Define.SNotice noticeData;
    /*0x38*/ System.Action<PTShare.Define.SNotice> OnClickCallback;

    /*0x2b52dc8*/ NoticeEntity();
    /*0x2b52aac*/ void InitializeEntity(PTShare.Define.SNotice _data, System.Action<PTShare.Define.SNotice> _callback);
    /*0x2b52ce4*/ void OnClick();
}

class AccountPlatformEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_PlatformName;
    /*0x20*/ LocalizeString m_Email;
    /*0x28*/ LocalizeString m_ConversionButtonStr;
    /*0x30*/ AtlasImage m_PlatformIcon;
    /*0x38*/ UnityEngine.UI.Button m_ConversionButton;
    /*0x40*/ PUBSDK.DefinePubSDK.PubLoginType eLoginType;
    /*0x48*/ string strMail;

    /*0x120dfb4*/ AccountPlatformEntity();
    /*0x120d90c*/ void InitializeEntity(PUBSDK.DefinePubSDK.PubLoginType eType, string eMail);
    /*0x120d918*/ void SetView();
    /*0x120db5c*/ void SetPlatformIcon(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x120da64*/ void SetPlatformName(string str);
    /*0x120dbe8*/ void SetActiveButton(bool enable);
    /*0x120dd2c*/ void SetPlatformMail(string str);
    /*0x120dea8*/ void OnClick_Link();
}

class ChannelAllChannelView : UnityEngine.MonoBehaviour
{
    /*0x18*/ NewScrollRect_ChannelGroupEntity m_ChannelGroupScroll;
    /*0x20*/ UnityEngine.UI.ToggleGroup m_ChannelGroupToggle;
    /*0x28*/ NewScrollRect_ChannelSelectEntity m_ChannelEntityScroll;
    /*0x30*/ int m_nViewChannelLimit;
    /*0x34*/ int nCurrentSelectGroup;

    /*0xd6e354*/ ChannelAllChannelView();
    /*0xd6d1a8*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> get_AreaPlayerList();
    /*0xd6d228*/ int get_CurAreaNumber();
    /*0xd6d2a8*/ int get_CurMaxArea();
    /*0xd6d328*/ void OnDisable();
    /*0xd6d3ac*/ void InitializeView();
    /*0xd6d32c*/ void Release();
    /*0xd6d3d0*/ void InitializeScroll_ChannelGroup();
    /*0xd6d7ac*/ void Handler_ChannelGroup(int nIndex, ChannelGroupEntity ent);
    /*0xd6da98*/ void OnClickChannelGroupToggle(bool isOn);
    /*0xd6d898*/ System.ValueTuple<int, int> GetChannelMinMaxIndex(int nIndex);
    /*0xd6db3c*/ int GetSelectChannelGroup();
    /*0xd6d5c8*/ void InitializeScroll_ChannelEntity();
    /*0xd6dccc*/ void Handler_ChannelEntity(int nIndex, ChannelSelectEntity ent);
    /*0xd6e0e0*/ void OnClickChannelEntity(int nIndex);

    class <>c
    {
        static /*0x0*/ ChannelAllChannelView.<> <>9;
        static /*0x8*/ System.Func<ChannelGroupEntity, bool> <>9__18_0;

        static /*0xdacf68*/ <>c();
        /*0xdacfc8*/ <>c();
        /*0xdacfd0*/ bool <GetSelectChannelGroup>b__18_0(ChannelGroupEntity x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int curIndex;

        /*0xdacfec*/ <>c__DisplayClass20_0();
        /*0xdacff4*/ bool <Handler_ChannelEntity>b__0(PTShare.Define.SAreaPlayer x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int nIndex;

        /*0xdad018*/ <>c__DisplayClass21_0();
        /*0xdad020*/ void <OnClickChannelEntity>b__0(bool result);
    }
}

class ChannelBestChannelView : UnityEngine.MonoBehaviour
{
    /*0x18*/ NewScrollRect_ChannelSelectEntity m_ChannelEntityScroll;

    /*0xd6eb8c*/ ChannelBestChannelView();
    /*0xd6e364*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> get_AreaPlayerList();
    /*0xd6e3e4*/ int get_CurAreaNumber();
    /*0xd6e464*/ int get_CurMaxArea();
    /*0xd6e4e4*/ void OnDisable();
    /*0xd6e540*/ void InitializeView();
    /*0xd6e4e8*/ void Release();
    /*0xd6e544*/ void InitializeScroll_ChannelEntity();
    /*0xd6e794*/ void Handler_ChannelEntity(int nIndex, ChannelSelectEntity ent);
    /*0xd6e918*/ void OnClickChannelEntity(int nIndex);
    /*0xd6eb94*/ bool <InitializeScroll_ChannelEntity>b__10_0(PTShare.Define.SAreaPlayer x);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ int nIndex;

        /*0xdad0c8*/ <>c__DisplayClass12_0();
        /*0xdad0d0*/ void <OnClickChannelEntity>b__0(bool result);
    }
}

class ChannelGroupEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_ServerText;
    /*0x20*/ UnityEngine.UI.Toggle toggleParent;
    /*0x28*/ UnityEngine.Events.UnityAction<bool> onClickCallback;
    /*0x30*/ int nEntityIndex;

    /*0xd6ec94*/ ChannelGroupEntity();
    /*0xd6ebc4*/ UnityEngine.UI.Toggle get_toggle();
    /*0xd6ec64*/ void OnDestroy();
    /*0xd6d944*/ void InitializeEntity(UnityEngine.UI.ToggleGroup group, int nIndex, int nMin, int nMax, bool bIsOn, UnityEngine.Events.UnityAction<bool> onClick);
    /*0xd6ec6c*/ int GetIndex();
    /*0xd6ec74*/ bool IsOn();
    /*0xd6d77c*/ void OnEntity(bool enable);
}

class ChannelSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_ServerText;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ PlayerProfileSlot m_ProfileSlot;
    /*0x30*/ AtlasImage m_SelectFrame;
    /*0x38*/ AtlasImage m_NewImage;
    /*0x40*/ CustomButton buttonParent;
    /*0x48*/ PTShare.Define.SAreaPlayer areaInfo;
    /*0x50*/ int channelIndex;

    /*0xd6ee14*/ ChannelSelectEntity();
    /*0xd6ed0c*/ CustomButton get_button();
    /*0xd6edac*/ void OnDestroy();
    /*0xd6de8c*/ void InitializeEntity(int nChannelInfo, PTShare.Define.SAreaPlayer aInfo, bool bIsOn, bool bIsNew, UnityEngine.Events.UnityAction<int> onClick);
    /*0xd6ee0c*/ int GetChannelID();
    /*0xd6edcc*/ void SetActiveFrame(bool enable);
    /*0xd6edec*/ void SetActiveNew(bool enable);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ UnityEngine.Events.UnityAction<int> onClick;
        /*0x18*/ int nChannelInfo;

        /*0xdad178*/ <>c__DisplayClass11_0();
        /*0xdad180*/ void <InitializeEntity>b__0();
    }
}

class CommunityButtonEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ LocalizeString m_Title;
    /*0x28*/ string strCommunityType;

    /*0x10e572c*/ CommunityButtonEntity();
    /*0x10e5358*/ void InitializeEntity(string strType);
    /*0x10e54e0*/ void OnClick_Button();

    class <>c
    {
        static /*0x0*/ CommunityButtonEntity.<> <>9;
        static /*0x8*/ System.Action <>9__4_0;

        static /*0x106f184*/ <>c();
        /*0x106f1e4*/ <>c();
        /*0x106f1ec*/ void <OnClick_Button>b__4_0();
    }
}

class CustomProfileSlotEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_expire;

    /*0xf4e61c*/ CustomProfileSlotEntity();
    /*0xf4e458*/ PlayerProfileSlot get_Slot();
    /*0xf4e460*/ void InitializeSlot(PlayerProfileInfo _info, System.Action _callback, bool _isDisable);
    /*0xf4e4e0*/ void SetText(string _key);
}

class UserInfoViewEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_curNickName;
    /*0x20*/ LocalizeString m_curGuildName;
    /*0x28*/ LocalizeString m_curToken;
    /*0x30*/ LocalizeString m_curMsg;
    /*0x38*/ LocalizeString m_curPower;
    /*0x40*/ LocalizeString m_curCampaign;
    /*0x48*/ HeroOptionTroopSlot[] m_SlotTroop;
    /*0x50*/ PlayerProfileSlot m_PlayerSlot;
    /*0x58*/ AtlasImage m_curGender;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SHero> mCurRepresentativeHeros;

    /*0x10c7924*/ UserInfoViewEntity();
    /*0x10c6c38*/ SProfile get_mCurProfile();
    /*0x10c6cc0*/ void View(UserData _userData);
    /*0x10c7228*/ void OnClick_ViewUpdateNickName();
    /*0x10c72ac*/ void OnClick_ViewUpdateMessage();
    /*0x10c7320*/ void OnClick_ViewUpdateProfileImage();
    /*0x10c73a0*/ void OnClick_UpdateGender();
    /*0x10c7414*/ void OnClick_Account();
    /*0x10c74d4*/ void OnClick_Customer();
    /*0x10c75b8*/ void OnClick_ShowLanguage();
    /*0x10c762c*/ void OnClick_Community();
    /*0x10c76ec*/ void OnClick_PlayerIDPress();
    /*0x10c77cc*/ void LoadRepresentativeTroopSlot();
    /*0x10c7030*/ void LoadGender();
    /*0x10c7150*/ void LoadProfileImage();
}

class UserOptionViewEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_curBGMSlider;
    /*0x20*/ UnityEngine.UI.Slider m_curEffectSlider;
    /*0x28*/ UnityEngine.UI.Slider m_curVoiceSlider;
    /*0x30*/ UnityEngine.UI.Toggle SETTING_POWERSAVEING_MODE;
    /*0x38*/ UnityEngine.UI.Toggle SETTING_HP_VIEW;
    /*0x40*/ UnityEngine.UI.Toggle SETTING_PLAY_VIDEO;
    /*0x48*/ UnityEngine.UI.Toggle SETTING_COMBAT_TEXT_VIEW;
    /*0x50*/ UnityEngine.UI.Toggle SETTING_TOUCH_EFFECT_VIEW;
    /*0x58*/ UnityEngine.UI.Toggle SETTING_GACHA_NOTICE_VIEW;
    /*0x60*/ UnityEngine.UI.Toggle SETTING_WHISPER_NOTICE_VIEW;
    /*0x68*/ UnityEngine.UI.Toggle ALRAM_PushAll_Toggles;
    /*0x70*/ UnityEngine.UI.Toggle ALRAM_PushNight_Toggles;
    /*0x78*/ UnityEngine.UI.Toggle ALRAM_PushAdvertise_Toggles;
    /*0x80*/ UnityEngine.UI.Button COUPON_BUTTON;
    /*0x88*/ UnityEngine.UI.Button REGION_BUTTON;

    /*0x10c8dd0*/ UserOptionViewEntity();
    /*0x10c7bac*/ void View();
    /*0x10c7fe8*/ void LoadCombatToggle();
    /*0x10c888c*/ void OnClickPowerSaving(bool _isValue);
    /*0x10c8914*/ void OnClickHPView(bool _isValue);
    /*0x10c8608*/ void LoadAlarmToggle();
    /*0x10c899c*/ void CallbackPushOnOff();
    /*0x10c8a44*/ void OnClick_Privacy();
    /*0x10c8b28*/ void OnClick_Coupon();
    /*0x10c8ba8*/ void OnClick_MoveChannel();
    /*0x10c8c5c*/ void OnClick_MoveServer();
    /*0x10c8d1c*/ void OnClick_Credit();
    /*0x10c8dd8*/ void <LoadAlarmToggle>b__19_0(bool isOn);
    /*0x10c8f08*/ void <LoadAlarmToggle>b__19_1(bool isOn);
    /*0x10c9038*/ void <LoadAlarmToggle>b__19_2(bool isOn);

    class <>c
    {
        static /*0x0*/ UserOptionViewEntity.<> <>9;
        static /*0x8*/ UnityEngine.Events.UnityAction<float> <>9__15_0;
        static /*0x10*/ UnityEngine.Events.UnityAction<float> <>9__15_1;
        static /*0x18*/ UnityEngine.Events.UnityAction<float> <>9__15_2;
        static /*0x20*/ UnityEngine.Events.UnityAction<bool> <>9__16_0;
        static /*0x28*/ UnityEngine.Events.UnityAction<bool> <>9__16_1;
        static /*0x30*/ UnityEngine.Events.UnityAction<bool> <>9__16_2;
        static /*0x38*/ UnityEngine.Events.UnityAction<bool> <>9__16_3;
        static /*0x40*/ UnityEngine.Events.UnityAction<bool> <>9__16_4;

        static /*0xd8afd4*/ <>c();
        /*0xd8b034*/ <>c();
        /*0xd8b03c*/ void <View>b__15_0(float _value);
        /*0xd8b0b0*/ void <View>b__15_1(float _value);
        /*0xd8b124*/ void <View>b__15_2(float _value);
        /*0xd8b198*/ void <LoadCombatToggle>b__16_0(bool _instance);
        /*0xd8b220*/ void <LoadCombatToggle>b__16_1(bool _instance);
        /*0xd8b2a8*/ void <LoadCombatToggle>b__16_2(bool _instance);
        /*0xd8b330*/ void <LoadCombatToggle>b__16_3(bool _instance);
        /*0xd8b3b8*/ void <LoadCombatToggle>b__16_4(bool _instance);
    }
}

class HeroOptionTroopSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_obSelect;

    /*0x1223480*/ HeroOptionTroopSlot();
    /*0x12232e4*/ void DisableTroopSlot();
    /*0x1223430*/ void EnableTroopSlot();
    /*0x1223390*/ void SetSelect(bool _isSelect);
}

class OptionAccountPlatform : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<AccountPlatformEntity> m_liAccountPlatform;
    /*0x20*/ System.Collections.Generic.Dictionary<int, string> dicPlatformMail;

    /*0x11357b8*/ OptionAccountPlatform();
    /*0x11355d8*/ void Initialize();
}

class OptionSelectImage : UnityEngine.MonoBehaviour
{
    /*0x113cd78*/ OptionSelectImage();
    /*0x113cd70*/ void Start();
    /*0x113cd74*/ void Update();
}

class OptionSpecialSettings : UnityEngine.MonoBehaviour
{
    /*0x113cd88*/ OptionSpecialSettings();
    /*0x113cd80*/ void Start();
    /*0x113cd84*/ void Update();
}

class RegionSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_ServerName;
    /*0x20*/ AtlasImage m_BackImage;
    /*0x28*/ string url;
    /*0x30*/ ServerRegion eRegion;

    /*0x11c8b08*/ RegionSelectEntity();
    /*0x11c8720*/ void InitializeEntity(string serverName, ServerRegion region);
    /*0x11c8934*/ void OnClick_Button();
    /*0x11c8b64*/ void <OnClick_Button>b__5_0(bool result);
}

class ScrollContent_EditorTroop : ScrollContent<HeroOptionTroopSlot>
{
    /*0xe19214*/ ScrollContent_EditorTroop();
}

class OtherFormationSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroTroopSlot> m_liTroopSlot;
    /*0x20*/ LocalizeString m_TotalPower;
    /*0x28*/ System.Collections.Generic.List<FormationCharacterEntity> m_liCharacterEntity;
    /*0x30*/ PTShare.Define.SDeck m_ClearInfo;
    /*0x38*/ long m_lPlayerID;
    /*0x40*/ System.Collections.Generic.List<OtherFormationSubWindow.SHeroSlot> m_liHeroInfo;

    /*0x113e830*/ OtherFormationSubWindow();
    /*0x113e21c*/ void InitializeWindow(long _playerid, PTShare.Define.SDeck _clear);
    /*0x113e374*/ void SetStatusView();
    /*0x113e3c4*/ void SetTroopSlot();
    /*0x113e6a4*/ void SetCharacterView();
    /*0x113e928*/ void <SetTroopSlot>b__9_1(PTShare.Define.SHero _shero);

    struct SHeroSlot
    {
        /*0x10*/ int slot;
        /*0x18*/ PTShare.Define.SHero hero;
    }

    class <>c
    {
        static /*0x0*/ OtherFormationSubWindow.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SBattleHero, OtherFormationSubWindow.SHeroSlot> <>9__7_0;

        static /*0x108c1c0*/ <>c();
        /*0x108c220*/ <>c();
        /*0x108c228*/ OtherFormationSubWindow.SHeroSlot <InitializeWindow>b__7_0(PTShare.Define.SBattleHero x);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ int i;

        /*0x108c2dc*/ <>c__DisplayClass9_0();
        /*0x108c2e4*/ bool <SetTroopSlot>b__0(OtherFormationSubWindow.SHeroSlot x);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ int i;

        /*0x108c2c4*/ <>c__DisplayClass10_0();
        /*0x108c2cc*/ bool <SetCharacterView>b__0(OtherFormationSubWindow.SHeroSlot x);
    }
}

class OtherInfomationSubWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeStateEvent;
    /*0x18*/ PlayerProfileSlot m_ProfileSlot;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_Description;
    /*0x30*/ LocalizeString m_TotalPower;
    /*0x38*/ LocalizeString m_Campaign;
    /*0x40*/ LocalizeString m_GuildName;
    /*0x48*/ LocalizeString m_AccountID;
    /*0x50*/ LocalizeString m_BlackBtnText;
    /*0x58*/ LocalizeString m_InviteBtnText;
    /*0x60*/ AtlasImage m_SexIcon;
    /*0x68*/ System.Collections.Generic.List<HeroTroopSlot> m_liHeroSlot;
    /*0x70*/ UnityEngine.GameObject m_guildMemberSettingButtonObject;
    /*0x78*/ GuildManageWindow m_guildManageWindow;
    /*0x80*/ UnityEngine.GameObject m_ButtonParent;
    /*0x88*/ ServerProtocol.ResAccountDetail m_DetailInfo;
    /*0x90*/ bool m_bIsFriend;
    /*0x91*/ bool m_bIsBlacklist;
    /*0x92*/ bool m_bIsUsedGuild;

    static /*0x1140ec0*/ OtherInfomationSubWindow();
    static /*0x113ea24*/ void add_OnChangeStateEvent(System.Action value);
    static /*0x113eb18*/ void remove_OnChangeStateEvent(System.Action value);
    /*0x1140e48*/ OtherInfomationSubWindow();
    /*0x113ec0c*/ void InitializeWindow(ServerProtocol.ResAccountDetail _detail, bool isUsedGuild);
    /*0x113f534*/ void Refresh(ServerProtocol.ResAccountDetail _detail);
    /*0x113ed94*/ void SetStatusView();
    /*0x113f248*/ void SetFormation();
    /*0x113f5b0*/ void OnClickInviteFriend();
    /*0x113fab4*/ void OnClickBlacklist();
    /*0x113fea4*/ void OnClickWispher();
    /*0x114007c*/ void OnClickGuildMemberSetting();
    /*0x114030c*/ void OnClick_PlayerID();
    /*0x11403a4*/ void CallbackInviteFriend();
    /*0x114064c*/ void CallbackDeleteFriend();
    /*0x11408f4*/ void CallbackAddBlacklist();
    /*0x1140b9c*/ void CallbackDeleteBlacklist();
    /*0x1140e44*/ void CallBackDeletFriendPopup();
    /*0x1140ec4*/ void <OnClickInviteFriend>b__25_0(bool confirm);
    /*0x1140fd0*/ void <OnClickBlacklist>b__26_0(bool confirm);
    /*0x11410dc*/ bool <OnClickGuildMemberSetting>b__28_0(PTShare.Define.SGuildMember data);

    class <>c__DisplayClass24_0
    {
        /*0x10*/ OtherInfomationSubWindow <>4__this;
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SHero> _mainforce;
        /*0x20*/ System.Action<PTShare.Define.SHero> <>9__0;

        /*0x108c2f4*/ <>c__DisplayClass24_0();
        /*0x108c2fc*/ void <SetFormation>b__0(PTShare.Define.SHero _shero);
    }
}

class HeroPromoteInfoView : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroPromoteInfoView.GradeView m_sGradeView_Bef;
    /*0x40*/ HeroPromoteInfoView.GradeView m_sGradeView_Aft;
    /*0x68*/ HeroPromoteResultSlot m_cHeroSlotCache_Bef;
    /*0x70*/ HeroPromoteResultSlot m_cHeroSlotCache_Aft;

    /*0x1224920*/ HeroPromoteInfoView();
    /*0x1223b48*/ void View(PTShare.Define.SHero _tPrevious, PTShare.Define.SHero _tAfter);
    /*0x1224728*/ void SetGradeView(PTShare.Define.SHero _hero, TableData.TableData_Unitgradelv _maxlv, HeroPromoteInfoView.GradeView _targetView);

    struct GradeView
    {
        /*0x10*/ LocalizeString cCombatPower;
        /*0x18*/ LocalizeString cMaxLevel;
        /*0x20*/ LocalizeString cAttack;
        /*0x28*/ LocalizeString cDefensive;
        /*0x30*/ LocalizeString cStrength;
    }
}

class HeroPromoteFeedSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject MountedCard;
    /*0x50*/ AtlasImage m_PlusIcon;
    /*0x58*/ bool m_isFeed;

    /*0x12239dc*/ HeroPromoteFeedSlot();
    /*0x122359c*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback, HeroPromoteFeedSlot.SLOTTYPE _slotType);
    /*0x1223734*/ void InitMaterialSlot(PTShare.Define.SHero _hero, int _grade, System.Action<PTShare.Define.SHero> _callback, HeroPromoteFeedSlot.SLOTTYPE _slotType);
    /*0x12237b4*/ void SetFeedApply(bool _isFeed);
    /*0x12235dc*/ void UpdateSlotType(HeroPromoteFeedSlot.SLOTTYPE _slotType);
    /*0x12238d4*/ void Release();
    /*0x1223868*/ void SetActiveObject(bool _enable);
    /*0x122390c*/ void HandlerChangeEvent(PTShare.Define.SHero _hero);

    enum SLOTTYPE
    {
        CHARACTER_SLOT = 0,
        CHARACTER_OPECITY = 1,
        PLUS_SLOT = 2,
    }
}

class HeroPromoteMaterialSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_curSubSelect;
    /*0x50*/ UnityEngine.GameObject m_curMainSelect;
    /*0x58*/ TweenImageColor m_curSelectEffect;
    /*0x60*/ float m_durationTime;
    /*0x68*/ UnityEngine.GameObject m_ableIcon;
    /*0x70*/ bool <IsUnable>k__BackingField;
    /*0x71*/ bool <IsSelect>k__BackingField;
    /*0x72*/ bool <IsPromoteAble>k__BackingField;
    /*0x78*/ System.Action<HeroPromoteMaterialSlot> _onCallbackPromoteMaterialSlot;
    /*0x80*/ UnityEngine.Color32 m_cColor_Begin;
    /*0x84*/ UnityEngine.Color32 m_cColor_Target;

    /*0x1229748*/ HeroPromoteMaterialSlot();
    /*0x12296ac*/ bool get_IsUnable();
    /*0x12296b4*/ void set_IsUnable(bool value);
    /*0x12296c0*/ bool get_IsSelect();
    /*0x12296c8*/ void set_IsSelect(bool value);
    /*0x12296d4*/ bool get_IsPromoteAble();
    /*0x12296dc*/ void set_IsPromoteAble(bool value);
    /*0x1225f48*/ void Init(PTShare.Define.SHero _hero, int m_nCurProperty, System.Action<HeroPromoteMaterialSlot> _callback);
    /*0x12296e8*/ void OnClick();
    /*0x12261e4*/ void SetUnAble(bool _isUnAble);
    /*0x1225eb4*/ void SetSelectCard(bool _isSelect, int _nType);
    /*0x1226220*/ void SetSelectAble(bool _isAble);
    /*0x122616c*/ void SetRedDot(bool _isReddot);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ int m_nCurProperty;

        /*0x1060a08*/ <>c__DisplayClass20_0();
        /*0x1060a10*/ void <Init>b__0();
    }
}

class HeroPromotePopup : GuiBase
{
    /*0x40*/ HeroPromoteInvenlView m_cHeroPromoteInvenView;
    /*0x48*/ HeroPropertySlotWindow m_cHeroPropertySlotWindow;
    /*0x50*/ UnityEngine.GameObject m_obFastPromoteBtn;
    /*0x58*/ UnityEngine.GameObject m_obReccPromoteBtn;

    /*0x122ad80*/ HeroPromotePopup();
    /*0x12297e4*/ bool get_isFastPromote();
    /*0x1229880*/ bool get_isRecommendPromote();
    /*0x122991c*/ void OnCreate();
    /*0x1229920*/ void OnDelete();
    /*0x1229924*/ void OnEnter();
    /*0x1229e88*/ void OnFinish();
    /*0x1229e8c*/ void OnLeave();
    /*0x122a114*/ void OnStart();
    /*0x122a118*/ void OnExit();
    /*0x122a1ec*/ void OnClick_Promote();
    /*0x1229da0*/ void IsVisibleSettingForButtonOnFastOrRecommend();
    /*0x122a628*/ void OnClick_Recommend();
    /*0x122a798*/ void OnClick_FastPromote();
    /*0x122a6fc*/ void PromoteRecommendWindow(System.Collections.Generic.List<RecommendPromote> _recommendPromotes, bool _isFast, bool _isRec);
    /*0x122a9fc*/ void HandleChangeProperty(int _nindex);
    /*0x122aa14*/ void HandlerEventResultPromote(PTShare.Define.SHero _shero);
    /*0x122aa18*/ void HandlerResultbyMulti(System.Collections.Generic.List<PTShare.Define.SHero> _result, bool _isFast, bool _isRecomend);
    /*0x1229e4c*/ void InitWindow();
    /*0x122acd0*/ TableData.TableData_Contenthelp get_m_tContentHelp();
    /*0x122acdc*/ void OnClick_HelpWindow();
    /*0x122ad88*/ void <OnExit>b__14_0();
}

class HeroPromoteInfoPopup : GuiBase
{
    /*0x40*/ HeroPromoteInfoView m_cHeroPromoteInfoView;
    /*0x48*/ System.Collections.Generic.List<HeroSlot> m_cHeroSlotFeeds;
    /*0x50*/ int m_nMainHeroID;
    /*0x54*/ bool m_bUseHighUnit;
    /*0x58*/ PTShare.Define.SHero[] m_nSubHeroFeed;

    /*0x1224708*/ HeroPromoteInfoPopup();
    /*0x1223a40*/ int GetPromoteTargetCard();
    /*0x1223a48*/ void Init(PTShare.Define.SHero _tBefore, PTShare.Define.SHero[] _heroFeeds);
    /*0x1223ce0*/ void ViewFeeds(PTShare.Define.SHero[] _heroIDs);
    /*0x1223e04*/ void ClearSlot();
    /*0x1223f58*/ void OnClick_Promote();
    /*0x1224108*/ void ConfirmPromote();
    /*0x122460c*/ void OnCreate();
    /*0x1224610*/ void OnDelete();
    /*0x1224614*/ void OnEnter();
    /*0x1224680*/ void OnFinish();
    /*0x1224684*/ void OnLeave();
    /*0x1224688*/ void OnStart();
    /*0x122468c*/ void OnExit();
    /*0x1224710*/ void <OnClick_Promote>b__9_0(bool result);
}

class HeroPromoteInvenlView : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_HeroPromote ScrollContent_HeroPromoteMaterial;
    /*0x20*/ HeroPromoteFeedSlot _mCFeedSlotBaseMainTarget;
    /*0x28*/ HeroPromoteFeedSlot[] m_cFeedSlotSubTarget;
    /*0x30*/ HeroCharcterWindow m_cHeroCharacterWindow;
    /*0x38*/ LocalizeString m_noticeText;
    /*0x40*/ ParticleBase m_PromoteEffectIdle;
    /*0x48*/ ParticleBase m_PromoteEffectLight;
    /*0x50*/ int m_nCurProperty;
    /*0x58*/ System.Collections.Generic.List<PromoteSHero> m_curPromoteList;
    /*0x60*/ System.Collections.Generic.List<PromoteSHero> m_curPromotePossiableList;
    /*0x68*/ PromoteType m_ePromoteType;
    /*0x70*/ TableData.TableData_Unitgradelv TableGradelv;
    /*0x78*/ PTShare.Define.SHero m_sTargetMainHero;
    /*0x80*/ int nGetIndex;
    /*0x88*/ System.Collections.Generic.List<PTShare.Define.SHero> m_listTargetSubHero;
    /*0x90*/ int m_nSubCardIndex;

    /*0x1227a70*/ HeroPromoteInvenlView();
    /*0x1224928*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_haveMyHeroList();
    /*0x12249cc*/ TableData.TableData_Unitbase get_m_sUnitBase();
    /*0x12249ec*/ PTShare.Define.SHero GetTargetSHero();
    /*0x12249f4*/ PTShare.Define.SHero[] GetFeedsHero();
    /*0x1224a48*/ int[] GetPromoteFeeds();
    /*0x1224b44*/ void OnEnable();
    /*0x1224c1c*/ void OnDisable();
    /*0x1224cc4*/ void OnDestroy();
    /*0x1224d6c*/ void Init();
    /*0x1225630*/ void Release();
    /*0x1225400*/ void SetPropertyIndex(int _nIndex);
    /*0x1225b3c*/ void SetHeroSlot(int _index, HeroPromoteMaterialSlot _slot, PTShare.Define.SHero _hero);
    /*0x1226390*/ void HandlerHeroMaterial(int _index, HeroPromoteMaterialSlot _instance);
    /*0x1226480*/ void HandlerResultPromoteView(PTShare.Define.SHero _resHeroPromote);
    /*0x12264ac*/ void HandlerResultbyMulti(System.Collections.Generic.List<PTShare.Define.SHero> _result, bool _isFast, bool _isRecomend);
    /*0x12264d8*/ void SetTargetApplyFeedSlot(HeroPromoteMaterialSlot _SelectInvenCard, PTShare.Define.SHero _sHero, HeroPromoteFeedSlot _TargetCard, System.Action<PTShare.Define.SHero> _CallBack, int _nType);
    /*0x122655c*/ void RegisterSubCard(HeroPromoteMaterialSlot cHeroPromoteMaterialSlot);
    /*0x122665c*/ void ProcessUnRegisterSubCard(PTShare.Define.SHero _subHeroCard);
    /*0x1226ca8*/ void CreatePromoteReigsterCard(PTShare.Define.SHero _sHero);
    /*0x1226ed4*/ void HandlerHeroPrmoteRegisterCard(HeroPromoteMaterialSlot sHeroPromoteMaterialSlot);
    /*0x12268ec*/ void ProcessViewbySubCard(HeroPromoteMaterialSlot cHeroPromoteMaterialSlot);
    /*0x1227140*/ void RegisterMainCard(HeroPromoteMaterialSlot cHeroPromoteMaterialSlot);
    /*0x122737c*/ void InitMainCharacterView(PTShare.Define.SHero sHero, bool _isView);
    /*0x12270cc*/ bool IsSamePromoteRegisterCard(PTShare.Define.SHero _shero);
    /*0x1227524*/ void ClearPromoteRegisterCard();
    /*0x122757c*/ void ClearFeedSubCard();
    /*0x122710c*/ bool InValidMainTarget(PTShare.Define.SHero _sHero);
    /*0x1227628*/ void HandlerFeedMainUnRegisterCard(PTShare.Define.SHero _sHero);
    /*0x1225754*/ void ClearSlotInven(bool playSound);
    /*0x1227630*/ void HandlerFeedSubUnRegister(PTShare.Define.SHero _sHero);
    /*0x1227a68*/ void HandlerChangeHeroSlot();
    /*0x12258a4*/ void UpdateHeroPromote();
    /*0x1225b2c*/ bool UseTargetHero();
    /*0x1224fac*/ void SetActiveEffect(bool _bIdle, bool _bLight);
    /*0x1227508*/ void PlayParticle(ParticleBase _base, bool _bLoop, float _fSpeed);
    /*0x1227b88*/ PromoteSHero <SetPropertyIndex>b__28_0(PTShare.Define.SHero x);
    /*0x1227c0c*/ bool <SetPropertyIndex>b__28_1(PromoteSHero x);
    /*0x1227cfc*/ bool <RegisterMainCard>b__39_0(PromoteSHero x);
    /*0x1227dec*/ bool <UpdateHeroPromote>b__49_0(PromoteSHero x);
}

class ScrollContent_HeroPromote : ScrollContent<HeroPromoteMaterialSlot>
{
    /*0xe1a2f4*/ ScrollContent_HeroPromote();
}

class HeroPromoteRecmdPopup : GuiBase
{
    /*0x40*/ ScrollContent_RecPromote scrollContentRecPromote;
    /*0x48*/ LocalizeString m_info;
    /*0x50*/ System.Collections.Generic.List<RecommendPromote> m_recPromotes;
    /*0x58*/ bool m_isFastPromote;
    /*0x59*/ bool m_isRecPromote;

    /*0x122b9f8*/ HeroPromoteRecmdPopup();
    /*0x122ae18*/ void OnCreate();
    /*0x122ae1c*/ void OnEnter();
    /*0x122b078*/ void OnStart();
    /*0x122b07c*/ void OnFinish();
    /*0x122b238*/ void OnLeave();
    /*0x122b23c*/ void OnDelete();
    /*0x122b240*/ void OnExit();
    /*0x122a86c*/ void InitSetting(System.Collections.Generic.List<RecommendPromote> _tRecommendPromotes, bool _isFast, bool _isRec);
    /*0x122b2bc*/ void SetInfo(bool _isFast, bool _isRec);
    /*0x122b4d4*/ void HandlerItemUpdate(int _nindex, HeroRecommendSlot _instance);
    /*0x122b758*/ void OnClick_SendRequest();
    /*0x122b920*/ void HandlerSelectUpdate(int nIndex);

    class <>c
    {
        static /*0x0*/ HeroPromoteRecmdPopup.<> <>9;
        static /*0x8*/ System.Converter<RecommendPromote, RecommendPromote> <>9__12_0;
        static /*0x10*/ System.Predicate<RecommendPromote> <>9__15_0;

        static /*0x1060aa4*/ <>c();
        /*0x1060b04*/ <>c();
        /*0x1060b0c*/ RecommendPromote <InitSetting>b__12_0(RecommendPromote s);
        /*0x1060b28*/ bool <OnClick_SendRequest>b__15_0(RecommendPromote x);
    }
}

class HeroRecommendSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnSelectedRecomend;
    /*0x18*/ HeroSlotInventory m_cMainTarget;
    /*0x20*/ HeroSlotInventory[] m_cFeeds;
    /*0x28*/ HeroSlotInventory m_cMainResult;
    /*0x30*/ UnityEngine.GameObject m_obSelect;
    /*0x38*/ bool <IsSelect>k__BackingField;
    /*0x3c*/ int m_nCurIndex;

    static /*0x122c838*/ HeroRecommendSlot();
    static /*0x122af84*/ void add_OnSelectedRecomend(System.Action<int> value);
    static /*0x122b144*/ void remove_OnSelectedRecomend(System.Action<int> value);
    /*0x122c828*/ HeroRecommendSlot();
    /*0x122c688*/ bool get_IsSelect();
    /*0x122c690*/ void set_IsSelect(bool value);
    /*0x122b578*/ void Init(RecommendPromote _recommendPromote, int _nindex);
    /*0x122c748*/ void OnClick_Select();
    /*0x122c69c*/ void SetViewSelect(bool _isSelect);
}

class ScrollContent_RecPromote : ScrollContent<HeroRecommendSlot>
{
    /*0xe1b35c*/ ScrollContent_RecPromote();
}

class HeroPromoteResultPopup : GuiBase
{
    /*0x40*/ HeroCharcterWindow m_cHeroNameWindow;
    /*0x48*/ HeroPromoteInfoView m_cHeroPromoteInfoView;
    /*0x50*/ ParticleBase m_LvupEffect;
    /*0x58*/ PTShare.Define.SHero m_sHeroPrivous;
    /*0x60*/ PTShare.Define.SHero m_sHeroResult;

    /*0x122bb58*/ HeroPromoteResultPopup();
    /*0x122ba00*/ void OnCreate();
    /*0x122ba04*/ void OnDelete();
    /*0x122ba08*/ void OnEnter();
    /*0x122ba74*/ void OnFinish();
    /*0x122ba78*/ void OnLeave();
    /*0x122ba7c*/ void OnStart();
    /*0x122ba80*/ void OnExit();
    /*0x1229294*/ void SetInit(PTShare.Define.SHero _sHero);
    /*0x122bafc*/ System.Collections.IEnumerator CoAnimation();

    class <CoAnimation>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x1060b48*/ <CoAnimation>d__13(int <>1__state);
        /*0x1060b74*/ void System.IDisposable.Dispose();
        /*0x1060b78*/ bool MoveNext();
        /*0x1060c48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1060c50*/ void System.Collections.IEnumerator.Reset();
        /*0x1060c90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroPromoteResultSlot : HeroSlot
{
    /*0x48*/ AtlasImage m_gradeColor;
    /*0x50*/ AtlasImage m_gradeIcon;

    /*0x122bc78*/ HeroPromoteResultSlot();
    /*0x12248f4*/ void SetGrade(int _grade);
    /*0x122bb60*/ void SetGradeBG(int _grade);
    /*0x122bbec*/ void SetGradeIcon(int _grade);
}

class PveRankClearRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_countText;
    /*0x20*/ UnityEngine.GameObject m_checkMarker;
    /*0x28*/ System.Collections.Generic.List<ItemTableRewardSlot> m_itemRewardBoxList;
    /*0x30*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x101eaec*/ PveRankClearRewardEntity();
    /*0x101e61c*/ void InitEntity(TableData.TableData_Pveclearreward tableData);
    /*0x101e708*/ void SetCount(int count);
    /*0x101e7cc*/ void SetCheckMarker(bool enable);
    /*0x101e870*/ void SetRewards();

    class <>c
    {
        static /*0x0*/ PveRankClearRewardEntity.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__7_0;

        static /*0x10915dc*/ <>c();
        /*0x109163c*/ <>c();
        /*0x1091644*/ void <SetRewards>b__7_0(ItemTableRewardSlot data);
    }
}

class PveRankClearRewardPopup : GuiBase
{
    /*0x40*/ SeasonTimeText m_seasonTime;
    /*0x48*/ ScrollContent_PveRankClearRewardEntity m_scrollContent;
    /*0x50*/ PveRankEmblemSlot m_emblem;
    /*0x58*/ PveRankingBoardEntity m_my;
    /*0x60*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> m_data;

    /*0x101f4a4*/ PveRankClearRewardPopup();
    /*0x101eba4*/ void OnCreate();
    /*0x101eba8*/ void OnDelete();
    /*0x101ebac*/ void OnEnter();
    /*0x101ebb0*/ void OnExit();
    /*0x101ebb8*/ void OnFinish();
    /*0x101ebbc*/ void OnLeave();
    /*0x101ec94*/ void OnStart();
    /*0x101ec98*/ void InitPopup();
    /*0x101eecc*/ void BindEvent();
    /*0x101ebc0*/ void RemoveEvent();
    /*0x101f380*/ void HandleScrollContent(int index, PveRankClearRewardEntity obj);
    /*0x101f400*/ void OnClick_Help();
}

class PveRankEmblemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_emblem;
    /*0x20*/ LocalizeString m_level;
    /*0x28*/ LocalizeString m_noblityText;
    /*0x30*/ TableData.TableData_Pvenoblity m_noblity;

    /*0x101fce8*/ PveRankEmblemSlot();
    /*0x101f51c*/ void OnDisable();
    /*0x101f2a4*/ void InitSlot();
    /*0x101f528*/ void SetData();
    /*0x101fa48*/ void SetEmblem(string noblity);
    /*0x101f7fc*/ void SetLevel(System.ValueTuple<int, int> level);
    /*0x101f908*/ void SetNobility(string key);
    /*0x101f524*/ void BindEvent();
    /*0x101f520*/ void RemoveEvent();
}

class PveRankInfoEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_rankTitle;
    /*0x20*/ System.Collections.Generic.List<ItemTableRewardSlot> m_rewardSlotList;
    /*0x28*/ UnityEngine.GameObject m_myFrame;

    /*0x102013c*/ PveRankInfoEntity();
    /*0x101fcf0*/ void InitEntity(int rewardIndex, float percent, string reward);

    class <>c
    {
        static /*0x0*/ PveRankInfoEntity.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__3_0;

        static /*0x1091674*/ <>c();
        /*0x10916d4*/ <>c();
        /*0x10916dc*/ void <InitEntity>b__3_0(ItemTableRewardSlot data);
    }
}

class PveRankRewardInfoPopup : GuiBase
{
    /*0x40*/ ScrollContent_PveRankInfoEntity m_scrollContent;
    /*0x48*/ SeasonTimeText m_seasonTime;
    /*0x50*/ PveRankingBoardEntity m_my;
    /*0x58*/ System.Collections.Generic.List<string> m_rewardList;
    /*0x60*/ System.Collections.Generic.List<float> m_percentList;

    /*0x10209dc*/ PveRankRewardInfoPopup();
    /*0x10201b4*/ void OnCreate();
    /*0x10201b8*/ void OnDelete();
    /*0x10201bc*/ void OnEnter();
    /*0x10201c0*/ void OnExit();
    /*0x10201c8*/ void OnFinish();
    /*0x10201cc*/ void OnLeave();
    /*0x10202a4*/ void OnStart();
    /*0x10202a8*/ void InitPopup();
    /*0x10204c8*/ void BindEvent();
    /*0x10201d0*/ void RemoveEvent();
    /*0x1020914*/ void HandleScrollContent(int index, PveRankInfoEntity obj);
}

class PveRankTabWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ PveRankTabWindow.TAB_TYPE m_currWindow;
    /*0x20*/ UnityEngine.GameObject[] m_tabActiveIcons;

    /*0x1020dec*/ PveRankTabWindow();
    /*0x1020a94*/ void OnEnable();
    /*0x1020a98*/ void InitWindow();
    /*0x1020b3c*/ void OnClick_ClearReward();
    /*0x1020ccc*/ void OnClick_Shop();
    /*0x1020cd4*/ void OnClick_Ranking();
    /*0x1020b44*/ void OnClick(int _tabType);
    /*0x1020cdc*/ void ExitCurrPopup();
    /*0x1020df4*/ void <OnClick>b__8_0();
    /*0x1020e7c*/ void <OnClick>b__8_1();
    /*0x1020f30*/ void <OnClick>b__8_3();
    /*0x1020fc0*/ void <OnClick>b__8_2();
    /*0x10211bc*/ void <OnClick>b__8_4(ServerProtocol.ResPveRankingRanking instance);

    enum TAB_TYPE
    {
        CLEAR_REWARD = 0,
        SHOP = 1,
        RANKING = 2,
        NONE = 3,
    }
}

class PveRankingBoardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_RankIcon;
    /*0x20*/ PlayerProfileSlot m_ProfileSlot;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_Rank;
    /*0x38*/ LocalizeString m_Score;
    /*0x40*/ LocalizeString m_GuildName;
    /*0x48*/ LocalizeString m_rankPercent;
    /*0x50*/ GuildEmblemSlot m_GuildEmblemSlot;
    /*0x58*/ long m_lPlayerid;
    /*0x60*/ string m_strNickname;
    /*0x68*/ string m_strDetail;
    /*0x70*/ int m_nLevel;
    /*0x74*/ int m_nGender;
    /*0x78*/ PTShare.Define.SRanker m_rankInfo;

    /*0x1021d44*/ PveRankingBoardEntity();
    /*0x1021398*/ void OnEnable();
    /*0x1021470*/ void OnDisable();
    /*0x1021518*/ void InitializeEntity(int _rank, PTShare.Define.SRanker sRanker);
    /*0x101f0a4*/ void InitializeEntity_Self(int _rank, int _score, float _rankPercent, PTShare.Define.SGuildMini guild, bool showPercent);
    /*0x1021638*/ void SetProfile();
    /*0x10217e0*/ void SetRank(int _rank);
    /*0x1021758*/ void SetScore(int score);
    /*0x1021bc0*/ void SetRankPer(float percent);
    /*0x1021c64*/ void OnChangeUserHandler();
    /*0x1021d98*/ void <SetProfile>b__18_0();
}

class PveRankingBoardPopup : GuiBase
{
    /*0x40*/ ScrollContent_PveRankingBoardEntity m_scrollContent;
    /*0x48*/ PveRankingBoardEntity m_my;
    /*0x50*/ PveRankEmblemSlot m_emblemSlot;
    /*0x58*/ ServerProtocol.ResPveRankingRanking m_data;

    /*0x1022118*/ PveRankingBoardPopup();
    /*0x1021da4*/ void OnCreate();
    /*0x1021da8*/ void OnDelete();
    /*0x1021dac*/ void OnEnter();
    /*0x1021db0*/ void OnFinish();
    /*0x1021db4*/ void OnLeave();
    /*0x1021e8c*/ void OnStart();
    /*0x1021254*/ void InitPopup(ServerProtocol.ResPveRankingRanking instance);
    /*0x1021e90*/ void BindEvent();
    /*0x1021db8*/ void RemoveEvent();
    /*0x1021f6c*/ void HandleScrollContent(int index, PveRankingBoardEntity obj);
    /*0x1021ff8*/ void OnClick_RewardInfo();
    /*0x1022074*/ void OnClick_Help();
}

class PveStageEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_vsText;
    /*0x20*/ LocalizeString m_titleText;
    /*0x28*/ LocalizeString m_scoreText;
    /*0x30*/ UnityEngine.GameObject m_bonusParent;
    /*0x38*/ LocalizeString m_bonusText;
    /*0x40*/ System.Collections.Generic.List<AtlasImage> m_clearMarkers;
    /*0x48*/ AtlasImage m_gradeIcon;
    /*0x50*/ AtlasImage m_frame;
    /*0x58*/ AtlasImage m_top3Icon;
    /*0x60*/ PTShare.Define.SPveStage m_stageData;
    /*0x68*/ TableData.TableData_Pvechallenge m_challengeTableData;
    /*0x70*/ int m_number;
    /*0x74*/ int m_difficulty;

    /*0x1024c70*/ PveStageEntity();
    /*0x1023c98*/ void InitializeEntity(PTShare.Define.SPveStage stage, int number, int difficulty);
    /*0x1023df8*/ void SetTitle();
    /*0x1023f40*/ void SetVSCount();
    /*0x10240f4*/ void SetScore();
    /*0x1024254*/ void SetBonus();
    /*0x10243dc*/ void SetGrade();
    /*0x102452c*/ void SetClearMarker();
    /*0x102479c*/ void SetFrame();
    /*0x102485c*/ void SetTop3();
    /*0x1024a54*/ void OnClick_This();
    /*0x1024c78*/ bool <SetTop3>b__21_0(int score);

    class <>c
    {
        static /*0x0*/ PveStageEntity.<> <>9;
        static /*0x8*/ System.Action<AtlasImage> <>9__19_0;

        static /*0x10920a0*/ <>c();
        /*0x1092100*/ <>c();
        /*0x1092108*/ void <SetClearMarker>b__19_0(AtlasImage data);
    }
}

class PveStageWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<PveStageEntity> m_liStageEntity;
    /*0x20*/ AtlasImage m_tryItemIcon;
    /*0x28*/ LocalizeString m_tryItemCount;
    /*0x30*/ LocalizeString m_freeText;
    /*0x38*/ TabGroup m_tabGroup;
    /*0x40*/ TooltipData_Desc m_tooltipDesc;
    /*0x48*/ UnityEngine.Coroutine m_coroutine;

    /*0x1237144*/ PveStageWindow();
    /*0x12365f0*/ void InitializeWindow();
    /*0x1236d8c*/ void SetStageEntity(int index, PTShare.Define.SPveStage stage);
    /*0x1236818*/ void SetTryCount();
    /*0x12369c8*/ void SetFreeCount();
    /*0x1236c0c*/ void SetTooltip();
    /*0x1236ea4*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0x1236f10*/ void OnChangeDifficulty(int difficulty);

    class <>c
    {
        static /*0x0*/ PveStageWindow.<> <>9;
        static /*0x8*/ System.Action<PveStageEntity> <>9__7_0;
        static /*0x10*/ System.Action<PveStageEntity> <>9__13_0;

        static /*0x10921b4*/ <>c();
        /*0x1092214*/ <>c();
        /*0x109221c*/ void <InitializeWindow>b__7_0(PveStageEntity data);
        /*0x109224c*/ void <OnChangeDifficulty>b__13_0(PveStageEntity data);
    }

    class <CoUpdateTimer>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ PveStageWindow <>4__this;

        /*0x109227c*/ <CoUpdateTimer>d__12(int <>1__state);
        /*0x10922a8*/ void System.IDisposable.Dispose();
        /*0x10922ac*/ bool MoveNext();
        /*0x1092398*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10923a0*/ void System.Collections.IEnumerator.Reset();
        /*0x10923e0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class PveStatusWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_currentScore;
    /*0x28*/ LocalizeString m_currentRank;
    /*0x30*/ LocalizeString m_clearRewardCount;
    /*0x38*/ System.Collections.Generic.List<ItemTableRewardSlot> m_currentRewardSlots;
    /*0x40*/ System.Collections.Generic.List<ItemTableRewardSlot> m_clearRewardSlots;
    /*0x48*/ PveRankEmblemSlot m_emblemSlot;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_currentRewardList;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_clearRewardList;
    /*0x60*/ System.Collections.Generic.List<string> m_rewardTableList;

    /*0x1237cbc*/ PveStatusWindow();
    /*0x123714c*/ void InitializeWindow();
    /*0x1237198*/ void SetData();
    /*0x1237314*/ void SetProfileSlot();
    /*0x1237478*/ void SetScore();
    /*0x123754c*/ void SetRank();
    /*0x12373e8*/ void SetEmblem();
    /*0x12375f8*/ void SetCurrentReward();
    /*0x1237874*/ void SetNextClearReward();

    class <>c
    {
        static /*0x0*/ PveStatusWindow.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__16_0;
        static /*0x10*/ System.Action<ItemTableRewardSlot> <>9__17_0;
        static /*0x18*/ System.Action<ItemTableRewardSlot> <>9__17_1;

        static /*0xf8fd14*/ <>c();
        /*0xf8fd74*/ <>c();
        /*0xf8fd7c*/ void <SetCurrentReward>b__16_0(ItemTableRewardSlot data);
        /*0xf8fdac*/ void <SetNextClearReward>b__17_0(ItemTableRewardSlot data);
        /*0xf8fddc*/ void <SetNextClearReward>b__17_1(ItemTableRewardSlot data);
    }
}

class QuestDailyEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnClickRewardEvent;
    /*0x18*/ LocalizeString m_QuestName;
    /*0x20*/ LocalizeString m_AmountText;
    /*0x28*/ LocalizeString m_PointText;
    /*0x30*/ LocalizeString m_ButtonText;
    /*0x38*/ LocalizeString m_UnlockText;
    /*0x40*/ UnityEngine.UI.Button m_Button;
    /*0x48*/ UnityEngine.UI.Slider m_Slider;
    /*0x50*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x58*/ UnityEngine.GameObject m_BottomParent;
    /*0x60*/ UnityEngine.UI.Button m_MoveButton;
    /*0x68*/ int m_nIndex;
    /*0x70*/ QuestPackage m_PackageInfo;
    /*0x78*/ int m_nCount;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_liRewardInfo;
    /*0x88*/ QuestGroupType m_eGroupType;

    static /*0x123a6ac*/ QuestDailyEntity();
    static /*0x12384b4*/ void add_OnClickRewardEvent(System.Action value);
    static /*0x12385a8*/ void remove_OnClickRewardEvent(System.Action value);
    /*0x123a634*/ QuestDailyEntity();
    /*0x123869c*/ void InitializeEntity(int _nIndex, QuestGroupType _eType, QuestPackage _package, int _nCount);
    /*0x1238758*/ void SetStatusView();
    /*0x1239dc8*/ void OnCompleteQuest();
    /*0x1239f64*/ void OnUnlockContents();
    /*0x1239d2c*/ void SetCanvasGroup(float _fOpecity, bool _bRaycast);
    /*0x123a274*/ void OnClickReward();
    /*0x123a4fc*/ void OnClickMove();
}

class QuestDailySubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_QuestDailyEntity m_ScrollContent;
    /*0x20*/ QuestProgress m_Progress;
    /*0x28*/ QuestGroupType m_eQuestType;
    /*0x30*/ System.Collections.Generic.List<QuestPackage> m_liQuestList;
    /*0x38*/ Sort_QuestDailyCompare m_sortDailyCompare;
    /*0x40*/ Sort_QuestWeeklyCompare m_sortWeeklyCompare;
    /*0x48*/ UnityEngine.Coroutine m_ieRefreshCoroutine;

    /*0x123b69c*/ QuestDailySubWindow();
    /*0x123a6b0*/ PTShare.Define.SQuest get_curDailyQuest();
    /*0x123a730*/ PTShare.Define.SQuest get_curWeeklyQuest();
    /*0x123a7b0*/ void OnEnable();
    /*0x123a880*/ void OnDisable();
    /*0x123a940*/ bool IsOnReddot();
    /*0x123aacc*/ bool IsOnReddot(QuestGroupType _eType);
    /*0x123ac2c*/ void InitializeWindow(QuestGroupType _eType);
    /*0x123af88*/ void DeleteScrollEvent();
    /*0x123ac98*/ void InitializeScroll(bool _bMoveScroll);
    /*0x123b314*/ void HandlerScrollContent_Daily(int _index, QuestDailyEntity _obj);
    /*0x123b47c*/ void HandlerScrollContent_Weekly(int _index, QuestDailyEntity _obj);
    /*0x123b5e4*/ void HandlerTakeEntity();
    /*0x123af34*/ void StartRefreshTimer();
    /*0x123b620*/ System.Collections.IEnumerator CoRefresh(QuestGroupType _questGroupType);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ QuestDailySubWindow <>4__this;
        /*0x18*/ int _index;

        /*0xf8fe0c*/ <>c__DisplayClass18_0();
        /*0xf8fe14*/ bool <HandlerScrollContent_Daily>b__0(PTShare.Define.SQuestRow x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ QuestDailySubWindow <>4__this;
        /*0x18*/ int _index;

        /*0xf8feb4*/ <>c__DisplayClass19_0();
        /*0xf8febc*/ bool <HandlerScrollContent_Weekly>b__0(PTShare.Define.SQuestRow x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ QuestDailySubWindow <>4__this;
        /*0x18*/ QuestGroupType _questGroupType;

        /*0xf8ff5c*/ <>c__DisplayClass22_0();
        /*0xf8ff64*/ void <CoRefresh>b__0();
    }

    class <CoRefresh>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ QuestDailySubWindow <>4__this;
        /*0x28*/ QuestGroupType _questGroupType;
        /*0x30*/ QuestDailySubWindow.<> <>8__1;

        /*0xf8ff88*/ <CoRefresh>d__22(int <>1__state);
        /*0xf8ffb4*/ void System.IDisposable.Dispose();
        /*0xf8ffb8*/ bool MoveNext();
        /*0xf90258*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf90260*/ void System.Collections.IEnumerator.Reset();
        /*0xf902a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class Sort_QuestDailyCompare : System.Collections.Generic.IComparer<QuestPackage>
{
    /*0x1451e0c*/ Sort_QuestDailyCompare();
    /*0x1451b30*/ int Compare(QuestPackage x, QuestPackage y);

    class <>c__DisplayClass0_0
    {
        /*0x10*/ QuestPackage x;
        /*0x18*/ QuestPackage y;

        /*0xcc060c*/ <>c__DisplayClass0_0();
        /*0xcc0614*/ bool <Compare>b__0(PTShare.Define.SQuestRow a);
        /*0xcc064c*/ bool <Compare>b__1(PTShare.Define.SQuestRow a);
    }
}

class Sort_QuestWeeklyCompare : System.Collections.Generic.IComparer<QuestPackage>
{
    /*0x14523f4*/ Sort_QuestWeeklyCompare();
    /*0x1452118*/ int Compare(QuestPackage x, QuestPackage y);

    class <>c__DisplayClass0_0
    {
        /*0x10*/ QuestPackage x;
        /*0x18*/ QuestPackage y;

        /*0xcc06fc*/ <>c__DisplayClass0_0();
        /*0xcc0704*/ bool <Compare>b__0(PTShare.Define.SQuestRow a);
        /*0xcc073c*/ bool <Compare>b__1(PTShare.Define.SQuestRow a);
    }
}

class QuestGeneralEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnClickRewardEvent;
    /*0x18*/ LocalizeString m_QuestName;
    /*0x20*/ LocalizeString m_AmountText;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ LocalizeString m_UnlockText;
    /*0x38*/ UnityEngine.UI.Button m_Button;
    /*0x40*/ UnityEngine.UI.Button m_MoveButton;
    /*0x48*/ UnityEngine.UI.Slider m_Slider;
    /*0x50*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;
    /*0x58*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x60*/ int m_nIndex;
    /*0x68*/ QuestPackage m_PackageInfo;
    /*0x70*/ PTShare.Define.SMainQuest m_MainInfo;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_liRewardInfo;

    static /*0x123d1c8*/ QuestGeneralEntity();
    static /*0x123bee4*/ void add_OnClickRewardEvent(System.Action value);
    static /*0x123bfd8*/ void remove_OnClickRewardEvent(System.Action value);
    /*0x123d110*/ QuestGeneralEntity();
    /*0x123c0cc*/ void InitializeEntity(int _nIndex, QuestPackage _package, PTShare.Define.SMainQuest _mainquest);
    /*0x123c188*/ void SetStatusView();
    /*0x123c4dc*/ void SetRewards();
    /*0x123c6d0*/ void OnCompleteQuest();
    /*0x123c880*/ void OnUnlockContents();
    /*0x123c68c*/ void SetCanvasGroup(float _fOpecity, bool _bRaycast);
    /*0x123ca50*/ void OnClickReward();
    /*0x123cc78*/ void MoveContents();

    class <>c
    {
        static /*0x0*/ QuestGeneralEntity.<> <>9;
        static /*0x8*/ System.Action <>9__23_0;

        static /*0xf902a8*/ <>c();
        /*0xf90308*/ <>c();
        /*0xf90310*/ void <MoveContents>b__23_0();
    }
}

class QuestGrid : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<QuestSummary> m_liQuestSummary;
    /*0x20*/ Battle.GameModeType eGameModeType;
    /*0x28*/ System.Collections.Generic.List<QuestPackage> liQuestPackage;
    /*0x30*/ System.Collections.Generic.List<long> liQuestAmount;
    /*0x38*/ QuestAdvanceType[] _arrCampaign;
    /*0x40*/ QuestAdvanceType[] _arrTryTower;
    /*0x48*/ QuestAdvanceType[] _arrArena;
    /*0x50*/ QuestAdvanceType[] _arrMaze;
    /*0x58*/ QuestAdvanceType[] _arrSpiritTower;
    /*0x60*/ string[] _arrCampaignCondition;
    /*0x68*/ string[] _arrTryTowerCondition;
    /*0x70*/ string[] _arrGeneralAreaCondition;
    /*0x78*/ string[] _arrWorldAreaCondition;
    /*0x80*/ string[] _arrMazeCondition;
    /*0x88*/ string[] _arrSpiritTowerCondition;

    /*0x123e930*/ QuestGrid();
    /*0x123d48c*/ System.Collections.Generic.List<QuestPackage> get_liDailyPackage();
    /*0x123d514*/ System.Collections.Generic.List<QuestPackage> get_liWeeklyPackage();
    /*0x123d59c*/ System.Collections.Generic.List<QuestPackage> get_liMainPackage();
    /*0x123d624*/ void InitializeGrid(Battle.GameModeType _eMode);
    /*0x123d714*/ void ClearQuest();
    /*0x123d62c*/ void SetQuestList();
    /*0x123d7c4*/ void SetCampaign();
    /*0x123d81c*/ void SetTower();
    /*0x123d874*/ void SetArena();
    /*0x123d8cc*/ void SetWorldArena();
    /*0x123d924*/ void SetMaze();
    /*0x123d97c*/ void SetSpiritTower();
    /*0x123d9d4*/ void SetQuestSummary();
    /*0x123dc88*/ bool AddDailyQuest(QuestAdvanceType[] _params, string[] _args);
    /*0x123dfbc*/ bool AddWeeklyQuest(QuestAdvanceType[] _params, string[] _args);
    /*0x123e2f0*/ bool AddMainQuest(QuestAdvanceType[] _params, string[] _args);
    /*0x123e6e8*/ bool CheckConditionQuest(QuestPackage _package, string _arg);

    class <>c__DisplayClass31_0
    {
        /*0x10*/ PTShare.Define.SQuestRow x;

        /*0xf90314*/ <>c__DisplayClass31_0();
        /*0xf9031c*/ bool <AddDailyQuest>b__0(QuestPackage y);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ PTShare.Define.SQuestRow x;

        /*0xf90354*/ <>c__DisplayClass32_0();
        /*0xf9035c*/ bool <AddWeeklyQuest>b__0(QuestPackage y);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ PTShare.Define.SMainQuest x;

        /*0xf90394*/ <>c__DisplayClass33_0();
        /*0xf9039c*/ bool <AddMainQuest>b__0(QuestPackage y);
        /*0xf903d4*/ bool <AddMainQuest>b__1(QuestPackage y);
    }
}

class QuestMainSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_QuestGeneralEntity m_ScrollContent;
    /*0x20*/ System.Collections.Generic.List<QuestPackage> curQuestList;
    /*0x28*/ System.Collections.Generic.List<QuestPackage> curStepQuestList;
    /*0x30*/ Sort_QuestMainCompare sortQuestMain;

    /*0x12404cc*/ QuestMainSubWindow();
    /*0x123fb3c*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> get_curMainQuestStep();
    /*0x123fbbc*/ void OnEnable();
    /*0x123fd80*/ void OnDisable();
    /*0x123fec8*/ void InitializeWindow(bool _bFirstScroll);
    /*0x1240134*/ void AddQuest(PTShare.Define.SMainQuest _quest, int _nStepOffset, System.Collections.Generic.List<QuestPackage> _liQuest);
    /*0x1240370*/ void HandlerScrollContent(int _index, QuestGeneralEntity _obj);
    /*0x12404c4*/ void HandlerTakeMainQuest();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ PTShare.Define.SMainQuest _quest;
        /*0x18*/ int _nStepOffset;

        /*0xf904b4*/ <>c__DisplayClass9_0();
        /*0xf904bc*/ bool <AddQuest>b__0(QuestPackage x);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ QuestMainSubWindow <>4__this;
        /*0x18*/ int _index;

        /*0xf9040c*/ <>c__DisplayClass10_0();
        /*0xf90414*/ bool <HandlerScrollContent>b__0(PTShare.Define.SMainQuest x);
    }
}

class Sort_QuestMainCompare : System.Collections.Generic.IComparer<QuestPackage>
{
    /*0x1452110*/ Sort_QuestMainCompare();
    /*0x1451e14*/ int Compare(QuestPackage x, QuestPackage y);

    class <>c__DisplayClass0_0
    {
        /*0x10*/ QuestPackage x;
        /*0x18*/ QuestPackage y;

        /*0xcc0684*/ <>c__DisplayClass0_0();
        /*0xcc068c*/ bool <Compare>b__0(PTShare.Define.SMainQuest a);
        /*0xcc06c4*/ bool <Compare>b__1(PTShare.Define.SMainQuest a);
    }
}

class QuestProgress : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_CurrentPoint;
    /*0x20*/ LocalizeString m_Time;
    /*0x28*/ UnityEngine.UI.Slider m_PointSlider;
    /*0x30*/ System.Collections.Generic.List<QuestProgressEntity> m_liProgressEntity;
    /*0x38*/ QuestGroupType m_eQuestType;
    /*0x40*/ System.Collections.IEnumerator m_ieTimeUpdater;
    /*0x48*/ System.Collections.Generic.List<QuestPackage> curQuestPackage;

    /*0x124506c*/ QuestProgress();
    /*0x12447dc*/ PTShare.Define.SQuest get_curDailyQuest();
    /*0x124485c*/ PTShare.Define.SQuest get_curWeeklyQuest();
    /*0x12448dc*/ void OnEnable();
    /*0x12449c8*/ void OnDisable();
    /*0x123a958*/ bool IsOnReddot();
    /*0x123aae4*/ bool IsOnReddot(QuestGroupType _eType);
    /*0x123ac68*/ void InitializeProgress(QuestGroupType _eType);
    /*0x1244a80*/ void SetStatusView();
    /*0x1244bc8*/ void SetProgressEntity();
    /*0x1244e90*/ void HandlerExChangeEvent(int _nIndex);
    /*0x1244d9c*/ void StartTimer();
    /*0x1245000*/ System.Collections.IEnumerator CoUpdate();

    class <>c
    {
        static /*0x0*/ QuestProgress.<> <>9;
        static /*0x8*/ System.Predicate<QuestProgressEntity> <>9__13_0;

        static /*0xf93bbc*/ <>c();
        /*0xf93c1c*/ <>c();
        /*0xf93c24*/ bool <IsOnReddot>b__13_0(QuestProgressEntity entity);
    }

    class <CoUpdate>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ QuestProgress <>4__this;

        /*0xf93c40*/ <CoUpdate>d__20(int <>1__state);
        /*0xf93c6c*/ void System.IDisposable.Dispose();
        /*0xf93c70*/ bool MoveNext();
        /*0xf940b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf940b8*/ void System.Collections.IEnumerator.Reset();
        /*0xf940f8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class QuestProgressEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnExChagneEvent;
    /*0x18*/ AtlasImage m_BoxIcon;
    /*0x20*/ AtlasImage m_Background;
    /*0x28*/ UnityEngine.GameObject m_RewardParent;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ LocalizeString m_NeedPoint;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_treasureBoxSkel;
    /*0x48*/ QuestPackage m_QuestInfo;
    /*0x50*/ QuestGroupType m_eQuestType;
    /*0x54*/ int m_nIndex;
    /*0x58*/ int m_nPoint;
    /*0x5c*/ int m_nMaxPoint;
    /*0x60*/ bool m_bIsOpen;

    static /*0x1245894*/ QuestProgressEntity();
    static /*0x1243aa4*/ void add_OnExChagneEvent(System.Action<int> value);
    static /*0x1243768*/ void remove_OnExChagneEvent(System.Action<int> value);
    /*0x1245884*/ QuestProgressEntity();
    /*0x124512c*/ void OnDisable();
    /*0x1244df0*/ void InitializeEntity(QuestGroupType _eType, int _nIndex, QuestPackage _package, int _nPoint, int _nMaxPoint, bool _bOpen);
    /*0x124528c*/ bool IsOnReddot();
    /*0x1244f0c*/ void OpenBox(bool _bOpen);
    /*0x124513c*/ void SetTreasureBox();
    /*0x12452ac*/ void SetTreasureBox(string animName, bool loop);
    /*0x1245274*/ void SetReddot(bool _enable);
    /*0x1245334*/ void OnClick_RewardBox();
    /*0x12454e4*/ void ViewReward(bool isReceive);
    /*0x1245134*/ void HideReward();
    /*0x1245834*/ void SetActiveReward(bool _enable);
}

class QuestSummary : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Desc;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ QuestPackage questInfo;
    /*0x30*/ long amount;
    /*0x38*/ string color;

    /*0x1246a50*/ QuestSummary();
    /*0x123e6e0*/ void InitializeQuest(QuestPackage _packs, long _amount);
    /*0x1246688*/ void SetView();
}

class RacePastEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_CurrentSeqTitle;
    /*0x20*/ System.Collections.Generic.List<PlayerProfileSlot> m_liRunners;
    /*0x28*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;
    /*0x30*/ System.Collections.Generic.List<AtlasImage> m_liRunnerSelects;
    /*0x38*/ System.Collections.Generic.List<AtlasImage> m_liRunnerRanks;
    /*0x40*/ UnityEngine.GameObject m_RedDot;
    /*0x48*/ PTShare.Define.SRace raceData;
    /*0x50*/ System.Collections.Generic.List<Rewards> liRewards;

    /*0x124c538*/ RacePastEntity();
    /*0x124bb4c*/ void InitializeEntity(PTShare.Define.SRace data);
    /*0x124c130*/ void SetRewardEntity();
    /*0x124c3c8*/ void OnClick_Replay();

    class <>c__DisplayClass8_0
    {
        /*0x10*/ int i;

        /*0xf94a70*/ <>c__DisplayClass8_0();
        /*0xf94a78*/ bool <InitializeEntity>b__0(int x);
    }

    class <>c
    {
        static /*0x0*/ RacePastEntity.<> <>9;
        static /*0x8*/ System.Action<RunRaceResultData> <>9__10_0;

        static /*0xf94910*/ <>c();
        /*0xf94970*/ <>c();
        /*0xf94978*/ void <OnClick_Replay>b__10_0(RunRaceResultData data);
    }
}

class RacePlayerSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_Slot;
    /*0x20*/ AtlasImage m_CheckIcon;
    /*0x28*/ UnityEngine.UI.Button m_SelectBtn;
    /*0x30*/ LocalizeString m_BtnNormalText;
    /*0x38*/ LocalizeString m_BtnDisableText;
    /*0x40*/ int nUnitIndex;
    /*0x44*/ int nTrackIndex;
    /*0x48*/ System.Action onClickCallback;

    /*0x11b46f0*/ RacePlayerSelectEntity();
    /*0x11b4310*/ void InitializeEntity(int nSelectTrack, int nIndex, int nUnitID, System.Action callback);
    /*0x11b44f8*/ void OnClick();
    /*0x11b46f8*/ void <OnClick>b__9_0(bool result);
}

class RaceResultEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x28*/ RunRaceResultData dataInfo;
    /*0x30*/ int nTrackIndex;
    /*0x34*/ int nRankIndex;
    /*0x38*/ bool bIsCompleteAnimation;

    /*0x11b49c8*/ RaceResultEntity();
    /*0x11b47a4*/ void OnEnable();
    /*0x11b47d4*/ void OnDisable();
    /*0x11b47dc*/ void InitializeEntity(RunRaceResultData data, int nIndex, int nRank);
    /*0x11b4830*/ bool IsCompleteAnimation();
    /*0x11b4838*/ void StartAnimation();
    /*0x11b4864*/ System.Collections.IEnumerator CoAnimation();
    /*0x11b48d0*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);

    class <CoAnimation>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceResultEntity <>4__this;
        /*0x28*/ float <fTime>5__2;
        /*0x2c*/ float <fConstTime>5__3;

        /*0xf94a88*/ <CoAnimation>d__11(int <>1__state);
        /*0xf94ab4*/ void System.IDisposable.Dispose();
        /*0xf94ab8*/ bool MoveNext();
        /*0xf94d88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf94d90*/ void System.Collections.IEnumerator.Reset();
        /*0xf94dd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RaceRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_RankIcon;
    /*0x20*/ AtlasImage m_CheckIcon;
    /*0x28*/ ItemTableRewardSlot m_RewardBox;

    /*0x11b538c*/ RaceRewardEntity();
    /*0x11b5190*/ void InitializeEntity(int nRank, Rewards reward);
    /*0x11b52cc*/ void SetActiveCheck(bool enable);
}

class RaceViewEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_Slot;
    /*0x20*/ AtlasImage m_Hide;
    /*0x28*/ int nTrackIndex;
    /*0x2c*/ int nUnitIndex;
    /*0x30*/ System.Action<int> onClickCallback;

    /*0x11b94a8*/ RaceViewEntity();
    /*0x11b9380*/ void InitializeEntity(int nIndex, int nUnitID, System.Action<int> callback);
    /*0x11b948c*/ void SetActiveSelected(bool enable);
    /*0x11b94b0*/ void <InitializeEntity>b__5_0();
}

class RankBoardCategoryEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Tilte;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_Floor;
    /*0x30*/ PlayerProfileSlot m_ProfileSlot;
    /*0x38*/ AtlasImage m_RedDot;
    /*0x40*/ RankingBoardType m_eBoardType;

    /*0x11bb430*/ RankBoardCategoryEntity();
    /*0x11ba228*/ PTShare.Define.SBoardCampaignRanker get_CampaignInfo();
    /*0x11ba2a8*/ PTShare.Define.SBoardCampaignRanker get_HardCampaignInfo();
    /*0x11ba328*/ PTShare.Define.SBoardTowerRanker get_TowerInfo();
    /*0x11ba3a8*/ void OnEnable();
    /*0x11ba660*/ void OnDisable();
    /*0x11ba704*/ void InitializeEntity(RankingBoardType _eType);
    /*0x11ba714*/ void SetStatusView(RankingBoardType _eType);
    /*0x11bab6c*/ void NonPlayerView();
    /*0x11bacb8*/ void OnClick();
    /*0x11bb274*/ void CallbackOpenCategoryPopup(string _floor, int _rank);
    /*0x11bb388*/ void HandlerReceiveReward();
    /*0x11bb438*/ void <SetStatusView>b__15_0();
    /*0x11bb45c*/ void <SetStatusView>b__15_1();
    /*0x11bb480*/ void <SetStatusView>b__15_2();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ RankBoardCategoryEntity <>4__this;
        /*0x18*/ int _rank;
        /*0x20*/ string _floor;

        /*0xf96ec8*/ <>c__DisplayClass18_0();
        /*0xf96ed0*/ void <CallbackOpenCategoryPopup>b__0();
    }
}

class RankBoardFactionCategoryEntity : RankBoardCategoryEntity
{
    /*0x48*/ AtlasImage m_factionBG;
    /*0x50*/ AtlasImage m_factionIcon;
    /*0x58*/ int m_faction;

    /*0x11bbc68*/ RankBoardFactionCategoryEntity();
    /*0x11bb4a4*/ void InitializeEntity(RankingBoardType _eType);
    /*0x11bb56c*/ void InitFactionImage(RankingBoardType _eType);
    /*0x11bb678*/ void SetStatusView(RankingBoardType _eType);
    /*0x11bb920*/ void OnClick();
    /*0x11bbb54*/ void CallbackOpenCategoryPopup(string _point, int _rank);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ PTShare.Define.SBoardFactionRanker rankData;

        /*0xf97024*/ <>c__DisplayClass5_0();
        /*0xf9702c*/ void <SetStatusView>b__0();
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ RankBoardFactionCategoryEntity <>4__this;
        /*0x18*/ int _rank;
        /*0x20*/ string _point;

        /*0xf9704c*/ <>c__DisplayClass7_0();
        /*0xf97054*/ void <CallbackOpenCategoryPopup>b__0();
    }
}

class RankBoardRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_RankIcon;
    /*0x20*/ AtlasImage m_Friend;
    /*0x28*/ AtlasImage m_Guild;
    /*0x30*/ AtlasImage m_Icon;
    /*0x38*/ AtlasImage m_Background;
    /*0x40*/ AtlasImage m_FactionIcon;
    /*0x48*/ AtlasImage m_PowerIcon;
    /*0x50*/ PlayerProfileSlot m_ProfileSlot;
    /*0x58*/ LocalizeString m_Nickname;
    /*0x60*/ LocalizeString m_Floor;
    /*0x68*/ LocalizeString m_Rank;
    /*0x70*/ LocalizeString m_Power;
    /*0x78*/ LocalizeString m_Faction;
    /*0x80*/ UnityEngine.GameObject m_PointParent;
    /*0x88*/ UnityEngine.GameObject m_PowerParent;
    /*0x90*/ UnityEngine.GameObject m_FactionParent;
    /*0x98*/ RankingBoardType m_eBoardType;
    /*0xa0*/ PTShare.Define.SBoardCampaignRanker m_CampaignInfo;
    /*0xa8*/ PTShare.Define.SBoardTowerRanker m_TowerInfo;
    /*0xb0*/ PTShare.Define.SBoardFactionRanker m_FactionInfo;
    /*0xb8*/ PTShare.Define.SArenaRanker m_ArenaInfo;
    /*0xc0*/ int m_nRank;
    /*0xc8*/ long m_lPlayerid;
    /*0xd0*/ string m_strNickname;
    /*0xd8*/ string m_strFloor;
    /*0xe0*/ string m_strDetail;
    /*0xe8*/ int m_nLevel;
    /*0xec*/ int m_nGender;
    /*0xf0*/ string m_strIconName;
    /*0xf8*/ int m_factionValue;
    /*0x100*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x108*/ UnityEngine.GameObject m_totalDamageParent;
    /*0x110*/ GuildEmblemSlot m_guildEmblemProfileSlot;
    /*0x118*/ LocalizeString m_guildName;
    /*0x120*/ LocalizeString m_guildTotalDamage;
    /*0x128*/ GuildLevelSlot m_guildLevelSlot;
    /*0x130*/ PTShare.Define.SRanker m_rankData;
    /*0x138*/ PTShare.Define.SLongRanker m_longRankData;
    /*0x140*/ PTShare.Define.SRankerGuild m_rankerGuildData;

    /*0x11be750*/ RankBoardRankEntity();
    /*0x11bc410*/ void OnEnable();
    /*0x11bc578*/ void OnDisable();
    /*0x11bc690*/ void InitializeEntity(int _index, PTShare.Define.SBoardCampaignRanker _campaign, string _strIcon);
    /*0x11bcbb8*/ void InitializeEntity(int _index, PTShare.Define.SBoardTowerRanker _tower, string _strIcon);
    /*0x11bcbd4*/ void InitializeEntity(int _index, PTShare.Define.SBoardFactionRanker _faction, RankingBoardType boardType, string _strIcon);
    /*0x11bcbf0*/ void InitializeEntity(int _index, PTShare.Define.ArenaSubType _eType, PTShare.Define.SArenaRanker _arena, string _strIcon);
    /*0x11bcc2c*/ void InitializeEntity(RankingBoardType _eType, int _rank, string _floor, int _gender, string _strIcon);
    /*0x11bdef0*/ void InitializeEntity(RankingBoardType _eType, int _rank, string _floor, long _power, int _gender, string _strIcon);
    /*0x11bc6ac*/ void Initialize(RankingBoardType _eType, int _index, string _strIcon);
    /*0x11bd344*/ void SetProfile();
    /*0x11bd7b0*/ void SetRank(int _rank);
    /*0x11be244*/ void SetFriendOrGuild(RankingBoardType _eType);
    /*0x11be0b8*/ void SetCp(long cp);
    /*0x11bdbcc*/ void SetActiveFlag(bool _friend, bool _guild);
    /*0x11bdfdc*/ void SetBackground(bool active);
    /*0x11be380*/ void SetFactionBackGround(int faction);
    /*0x11be40c*/ void SetFactionIcon(int faction);
    /*0x11bd9c4*/ void SetFaction(RankingBoardType _eType);
    /*0x11bdac8*/ void SetRankTextColor(RankingBoardType _eType);
    /*0x11be498*/ void OnChangeUserHandler();
    /*0x11be578*/ void OnChangeWorldArenaHandler();
    /*0x11be678*/ PTShare.Define.SMiniPlayer rankData();
    /*0x11be690*/ long Score();
    /*0x11be6bc*/ PTShare.Define.SGuildMini Guild();
    /*0x11be6e4*/ void InitializeEntity(int _index, PTShare.Define.SRanker _guildbossRank, RankingBoardType boardType, string _strIcon);
    /*0x11be710*/ void InitializeEntity(int _index, PTShare.Define.SLongRanker _guildbossRank, RankingBoardType boardType, string _strIcon);
    /*0x11be730*/ void InitializeEntity(int _index, PTShare.Define.SRankerGuild _guildbossRank, RankingBoardType boardType, string _strIcon);
    /*0x11be148*/ void InitializeGuildBoss();
    /*0x11be704*/ void ClearData();
    /*0x11bd0e4*/ void SetGuildParent(bool enable);
    /*0x11bdc1c*/ void SetGuildData(PTShare.Define.SGuildMini guild, long score);
    /*0x11be7ac*/ void <SetProfile>b__39_0();
    /*0x11be7b8*/ void <SetProfile>b__39_1();
    /*0x11be7c4*/ void <SetProfile>b__39_2();
    /*0x11be7d0*/ void <SetProfile>b__39_3();
    /*0x11be7dc*/ void <SetProfile>b__39_4();
    /*0x11be7e8*/ void <SetProfile>b__39_5();
}

class RankBoardRewardEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnClickRewardEvent;
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ PlayerProfileSlot m_ProfileSlot;
    /*0x30*/ AtlasImage m_ActiveIcon;
    /*0x38*/ AtlasImage m_BackFrame;
    /*0x40*/ UnityEngine.UI.Button m_RewardButton;
    /*0x48*/ UnityEngine.GameObject m_CompleteRewardText;
    /*0x50*/ ScrollContent_StageReward m_ScrollContent;
    /*0x58*/ RankingBoardType m_eBoardType;
    /*0x60*/ QuestPackage m_QuestInfo;
    /*0x68*/ PTShare.Define.SBoardQuest m_BoardInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_liRewardInfo;

    static /*0x11bef3c*/ RankBoardRewardEntity();
    static /*0x11ba56c*/ void add_OnClickRewardEvent(System.Action value);
    static /*0x11ba478*/ void remove_OnClickRewardEvent(System.Action value);
    /*0x11bef34*/ RankBoardRewardEntity();
    /*0x11be7f4*/ void OnEnable();
    /*0x11be920*/ void OnDisable();
    /*0x11be9f4*/ void InitializeEntity(RankingBoardType _eType, QuestPackage _package, PTShare.Define.SBoardQuest _board);
    /*0x11beaac*/ void SetStatusView();
    /*0x11bed70*/ PTShare.Define.SMiniPlayer GetPlayer();
    /*0x11bed44*/ long GetPlayerID();
    /*0x11bece8*/ void InitializeScroll();
    /*0x11bed8c*/ void HandlerScrollContent(int _index, ItemTableRewardSlot _obj);
    /*0x11bee48*/ void OnClickReward();
    /*0x11bef40*/ void <SetStatusView>b__18_0();
    /*0x11bef70*/ void <OnClickReward>b__23_0();
}

class RelationIllustEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic[] m_arrCharacterIllust;
    /*0x20*/ TableData.TableData_Relation relationTableData;
    /*0x28*/ int[] arrCharaterIndex;
    /*0x30*/ bool[] arrCharacterUse;
    /*0x38*/ ShaderChanger_Gray[] m_arrShader;

    /*0x11ca300*/ RelationIllustEntity();
    /*0x11c9bb0*/ void InitializeEntity(TableData.TableData_Relation data);
    /*0x11ca0e4*/ void SetIllust();
}

class RelationListEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ UnityEngine.Transform m_Parent;
    /*0x28*/ UnityEngine.UI.Slider m_Slider;
    /*0x30*/ UnityEngine.GameObject m_RedDot;
    /*0x38*/ RelationIllustEntity relationIllustEntity;
    /*0x40*/ TableData.TableData_Relation relationTableData;
    /*0x48*/ PTShare.Define.SRelation relationData;
    /*0x50*/ int[] arrRelationUnitID;
    /*0x58*/ bool[] arrRelationUnitUse;

    /*0x11ca91c*/ RelationListEntity();
    /*0x11ca35c*/ void InitializeEntity(TableData.TableData_Relation data);
    /*0x11ca4cc*/ void Refresh();
    /*0x11ca5d8*/ void CreateRelationIllust();
    /*0x11ca734*/ void SetSlider();
    /*0x11ca7a0*/ void SetTitle(string key);
    /*0x11ca71c*/ void EnableRedDot(bool enable);
    /*0x11ca898*/ void OnClick();
}

class RelationStatusBar : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_LockParent;
    /*0x20*/ AtlasImage m_OpenParent;
    /*0x28*/ AtlasImage m_ActiveParent;
    /*0x30*/ AtlasImage m_LockIcon;
    /*0x38*/ ParticleBase m_OpenParticle;
    /*0x40*/ LocalizeString m_DeActiveText;
    /*0x48*/ LocalizeString m_StatusName;
    /*0x50*/ LocalizeString m_StatusValue;
    /*0x58*/ UnityEngine.GameObject m_RedDot;
    /*0x60*/ RelationStatus statusInfo;
    /*0x90*/ PTShare.Define.SRelation relationData;
    /*0x98*/ System.Action onClickCallback;
    /*0xa0*/ bool bIsPossibleActivate;

    /*0xf1ae70*/ RelationStatusBar();
    /*0xf1a254*/ void OnEnable();
    /*0xf1a2a4*/ void InitializeStatusBar(int nIndex, PTShare.Define.SRelation relation, RelationStatus status, System.Action onClick);
    /*0xf1a664*/ void InitLockProcess(bool condition);
    /*0xf1a520*/ void SetRedDot(bool enable);
    /*0xf1a540*/ void SetDeActiveText(string key);
    /*0xf1a4d8*/ void SetActiveLockParent(bool enable);
    /*0xf1a508*/ void SetActiveParent(bool enable);
    /*0xf1a4f0*/ void SetActiveOpenParent(bool enable);
    /*0xf1a4c0*/ void SetActiveLockIcon(bool enable);
    /*0xf1a25c*/ void SetActiveOpenParticle(bool enable);
    /*0xf1a944*/ void SetStatusText(string statType, float value);
    /*0xf1acf4*/ void OnClick();
    /*0xf1ad98*/ void StartUnlock();
    /*0xf1ae04*/ System.Collections.IEnumerator CoAnimate();

    class <CoAnimate>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RelationStatusBar <>4__this;

        /*0xf98af4*/ <CoAnimate>d__26(int <>1__state);
        /*0xf98b20*/ void System.IDisposable.Dispose();
        /*0xf98b24*/ bool MoveNext();
        /*0xf98be4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf98bec*/ void System.Collections.IEnumerator.Reset();
        /*0xf98c2c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RelationStoryEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Desc;
    /*0x20*/ AtlasImage m_LeftArrow;
    /*0x28*/ AtlasImage m_RightArrow;
    /*0x30*/ float m_defaultLineSpacing;
    /*0x38*/ System.Collections.Generic.List<string> m_liStoryText;
    /*0x40*/ TableData.TableData_Relation relationData;
    /*0x48*/ bool bInitializeStroy;
    /*0x4c*/ int m_nPageCount;

    /*0xf1b5dc*/ RelationStoryEntity();
    /*0xf1ae78*/ void InitializeEntity(TableData.TableData_Relation data);
    /*0xf1afa8*/ void InitializeSplitText();
    /*0xf1b4f8*/ void RefreshSplitText();
    /*0xf1b468*/ void RefreshArrow();
    /*0xf1b5a0*/ void OnClickNextOrPrevious(bool _isPrevious);
}

class HeroResonanceCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ UnityEngine.GameObject m_LevelParent;
    /*0x28*/ LocalizeString m_Level;
    /*0x30*/ ParticleBase m_Particle;
    /*0x38*/ PTShare.Define.SHero heroInfo;
    /*0x40*/ TableData.TableData_Unitbase baseInfo;

    /*0x122dd64*/ HeroResonanceCharacter();
    /*0x122d9f0*/ void InitializeCharacter(PTShare.Define.SHero _hero);
    /*0x122dba0*/ void Clear();
    /*0x122da2c*/ void SetView();
    /*0x122dc28*/ void PlayParticle();
    /*0x122dcf8*/ System.Collections.IEnumerator CoParticle();

    class <CoParticle>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonanceCharacter <>4__this;

        /*0x1060c98*/ <CoParticle>d__10(int <>1__state);
        /*0x1060cc4*/ void System.IDisposable.Dispose();
        /*0x1060cc8*/ bool MoveNext();
        /*0x1060dbc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1060dc4*/ void System.Collections.IEnumerator.Reset();
        /*0x1060e04*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroResonanceDropdown : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroResonanceDropdown.ResonanceToggle> m_liToggle;
    /*0x20*/ UnityEngine.GameObject m_ToggleBackground;
    /*0x28*/ UnityEngine.GameObject m_ToggleTemplete;
    /*0x30*/ bool m_bIsShow;
    /*0x38*/ System.Action<ResonanceSortType> OnChangeDropdownEvent;

    /*0x122e250*/ HeroResonanceDropdown();
    /*0x122dd6c*/ void add_OnChangeDropdownEvent(System.Action<ResonanceSortType> value);
    /*0x122de0c*/ void remove_OnChangeDropdownEvent(System.Action<ResonanceSortType> value);
    /*0x122deac*/ void OnEnable();
    /*0x122df74*/ void OnDisable();
    /*0x122e004*/ void InitializeDropdown(ResonanceSortType _type);
    /*0x122e238*/ void ToggleDropdown();
    /*0x122e02c*/ void ViewDropdown(bool _isShow);
    /*0x122e07c*/ void SetDropdown();
    /*0x122e248*/ void HandlerDropDown(ResonanceSortType _type);

    class ResonanceToggle
    {
        /*0x10*/ ResonanceSortType type;
        /*0x18*/ string keyName;
        /*0x20*/ UnityEngine.UI.Toggle toggle;

        /*0x1060e94*/ ResonanceToggle();
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ ResonanceSortType _sortType;
        /*0x18*/ HeroResonanceDropdown <>4__this;

        /*0x1060e0c*/ <>c__DisplayClass13_0();
        /*0x1060e14*/ void <SetDropdown>b__0(bool ison);
    }
}

class HeroResonanceSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ HeroSlotInventory m_HeroSlot;
    /*0x20*/ UnityEngine.GameObject m_TimerPatent;
    /*0x28*/ LocalizeString m_Timer;
    /*0x30*/ AtlasImage m_PlusIcon;
    /*0x38*/ UnityEngine.GameObject m_reddot;
    /*0x40*/ int nSlotIndex;
    /*0x48*/ PTShare.Define.SHero heroInfo;
    /*0x50*/ PTShare.Define.SResonanceHero resonanceInfo;
    /*0x58*/ System.DateTime slotopen;
    /*0x60*/ System.Collections.IEnumerator ieTimer;

    static /*0x12301b0*/ HeroResonanceSlot();
    static /*0x122f500*/ void add_OnChangeEvent(System.Action value);
    static /*0x122f5f4*/ void remove_OnChangeEvent(System.Action value);
    /*0x12301a8*/ HeroResonanceSlot();
    /*0x122f480*/ int get_nOpenResonanceCount();
    /*0x122f6e8*/ void InitializeSlot(int _nIndex, PTShare.Define.SResonanceHero _hero);
    /*0x122f950*/ void SetView();
    /*0x122fb80*/ void SetActiveObject(bool _bLock, bool _bPlus, bool _bFade);
    /*0x122fa2c*/ void SetReddot();
    /*0x122f9e0*/ void StartTimer();
    /*0x122fc40*/ System.Collections.IEnumerator CoTimer();
    /*0x122fcac*/ void CallbackSelectHero(PTShare.Define.SHero _hero);
    /*0x122fbe8*/ bool IsUnlockEmptySlot();
    /*0x122fc14*/ bool IsNextUnlockSlot();
    /*0x122fac0*/ bool IsCleaning();
    /*0x12301b4*/ void <CallbackSelectHero>b__21_2(bool result);

    class <CoTimer>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonanceSlot <>4__this;

        /*0x1061260*/ <CoTimer>d__20(int <>1__state);
        /*0x106128c*/ void System.IDisposable.Dispose();
        /*0x1061290*/ bool MoveNext();
        /*0x106148c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1061494*/ void System.Collections.IEnumerator.Reset();
        /*0x10614d4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ HeroResonanceSlot.<> <>9;
        static /*0x8*/ System.Action <>9__21_0;
        static /*0x10*/ System.Action <>9__21_1;

        static /*0x1061068*/ <>c();
        /*0x10610c8*/ <>c();
        /*0x10610d0*/ void <CallbackSelectHero>b__21_0();
        /*0x1061198*/ void <CallbackSelectHero>b__21_1();
    }
}

class ResonanceCrystalEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_crystal;
    /*0x20*/ int nIndex;
    /*0x28*/ System.Action onCompleteSpineCallback;

    /*0xf2619c*/ ResonanceCrystalEntity();
    /*0xf25d80*/ void Awake();
    /*0xf25da0*/ void InitializeEntity(int index);
    /*0xf25e68*/ void SetAnim(ResonanceCrystalEntity.CrystalAnim anim, bool loop, float time, System.Action callback);
    /*0xf26150*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xf26164*/ float GetCurrentAnimTime();

    enum CrystalAnim
    {
        IDLE_CRYSTAL = 0,
        IDLE_NO = 1,
        IN = 2,
        LEVEL_UP = 3,
    }
}

class HeroRewardController : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContents_HeroRewards scrollContentsHeroRewards;
    /*0x20*/ UnityEngine.RectTransform m_ScrollRectTransform;
    /*0x28*/ System.Collections.Generic.List<HeroRewardController.HeroRewardCount> m_tHeroes;

    /*0x1232fac*/ HeroRewardController();
    /*0x1232830*/ int get_Count();
    /*0x1232850*/ void InitRewards(System.Collections.Generic.List<PTShare.Define.SHero> _sHeros);
    /*0x1232c0c*/ void SetScrollLimit();
    /*0x1232d84*/ void HandlerHeroReward(int _nIndex, HeroSlotRewrad _instance);
    /*0x1232f28*/ void HandlerHeroSlotClick(PTShare.Define.SHero _sHero);

    struct HeroRewardCount
    {
        /*0x10*/ PTShare.Define.SHero hero;
        /*0x18*/ long amount;

        /*0xa8a030*/ HeroRewardCount(PTShare.Define.SHero _hero, long _amount);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ PTShare.Define.SHero s;

        /*0x10620e4*/ <>c__DisplayClass6_0();
        /*0x10620ec*/ bool <InitRewards>b__0(HeroRewardController.HeroRewardCount x);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ HeroRewardController.HeroRewardCount data;

        /*0x1062144*/ <>c__DisplayClass8_0();
        /*0x106214c*/ void <HandlerHeroReward>b__0();
    }
}

class HeroSlotRewrad : HeroSlot
{
    /*0x126e0a4*/ HeroSlotRewrad();
}

class ScrollContents_HeroRewards : ScrollContent<HeroSlotRewrad>
{
    /*0xe1bcbc*/ ScrollContents_HeroRewards();
}

class SignatureActivePopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot m_itemSlot;
    /*0x48*/ LocalizeString m_itemCount;
    /*0x50*/ TableData.TableData_Equipment m_equipTable;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_activeList;
    /*0x60*/ PTShare.Define.SHero m_hero;
    /*0x68*/ System.Action m_onSuccessCallBack;

    /*0xe2b518*/ SignatureActivePopup();
    /*0xe2aac0*/ void OnCreate();
    /*0xe2aac4*/ void OnDelete();
    /*0xe2aac8*/ void OnEnter();
    /*0xe2aacc*/ void OnFinish();
    /*0xe2aad0*/ void OnLeave();
    /*0xe2aad4*/ void OnStart();
    /*0xe2aad8*/ void OnExit();
    /*0xe2ab54*/ void InitPopup(PTShare.Define.SHero hero, System.Action onSuccessCallBack);
    /*0xe2ae3c*/ void SetItemSlot();
    /*0xe2afd8*/ void OnConfirm();
    /*0xe2b2b8*/ void OnPreview();
    /*0xe2b590*/ void <OnConfirm>b__15_0();
}

class SignatureItemPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_subTitle;
    /*0x50*/ ItemInfoSlot m_itemSlot;
    /*0x58*/ SignatureItemSkillInfo m_skillInfo;
    /*0x60*/ ScrollContent_EquipmentStatusEntity m_scrollContent;
    /*0x68*/ UnityEngine.UI.Slider m_slider;
    /*0x70*/ UnityEngine.UI.Button m_upgradeBtn;
    /*0x78*/ PTShare.Define.SHero m_hero;
    /*0x80*/ PTShare.Define.SEquip m_signatureItem;
    /*0x88*/ TableData.TableData_Equipment m_signatureItemTable;
    /*0x90*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_statList;

    /*0xe2d6b4*/ SignatureItemPopup();
    /*0xe2c598*/ void OnCreate();
    /*0xe2c59c*/ void OnDelete();
    /*0xe2c5a0*/ void OnEnter();
    /*0xe2c654*/ void OnFinish();
    /*0xe2c658*/ void OnLeave();
    /*0xe2c884*/ void OnStart();
    /*0xe2c888*/ void OnExit();
    /*0xe2b340*/ void InitPopup(PTShare.Define.SHero hero, bool preview);
    /*0xe2cb34*/ void SetData(PTShare.Define.SHero hero, int lv);
    /*0xe2cdb0*/ void SetTitle();
    /*0xe2cf20*/ void SetSubTitle();
    /*0xe2d1dc*/ void SetSkillInfo();
    /*0xe2d274*/ void SetButton();
    /*0xe2c904*/ void BindEvent();
    /*0xe2c65c*/ void RemoveEvent();
    /*0xe2d368*/ void HandleChangeSignature(int heroId);
    /*0xe2d40c*/ void HandleScrollRect(UnityEngine.Vector2 value);
    /*0xe2d45c*/ void HandleScrollContent(int index, EquipmentStatusEntity obj);
    /*0xe2d500*/ void OnSlider();
    /*0xe2d54c*/ void OnClickPromote();
    /*0xe2d620*/ void OnClickHelp();
    /*0xe2d72c*/ void <OnClickPromote>b__30_0();
}

class SignatureItemPromotePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ LocalizeString m_title;
    /*0x50*/ ItemInfoSlot m_signatureItemSlot;
    /*0x58*/ ItemTableRewardSlot m_itemSlot;
    /*0x60*/ ScrollContent_EquipPromoteStatusEntity m_scrollContent;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x70*/ LocalizeString m_itemCount;
    /*0x78*/ LocalizeString m_nextSkillLv;
    /*0x80*/ LocalizeString m_nextSkillDesc;
    /*0x88*/ UnityEngine.UI.Button m_confirmButton;
    /*0x90*/ UnityEngine.GameObject m_requireParent;
    /*0x98*/ UnityEngine.GameObject m_skillInfoParent;
    /*0xa0*/ ParticleBase m_particle;
    /*0xa8*/ UnityEngine.GameObject m_fastLevelupParent;
    /*0xb0*/ UnityEngine.UI.Button m_fastLevelupBtn;
    /*0xb8*/ LocalizeString m_fastLevelupText;
    /*0xc0*/ PTShare.Define.SHero m_hero;
    /*0xc8*/ PTShare.Define.SEquip m_equip;
    /*0xd0*/ bool m_isMaxLevel;
    /*0xd1*/ bool m_isEffect;
    /*0xd8*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_befStatList;
    /*0xe0*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_aftStatList;

    /*0x150b9c0*/ SignatureItemPromotePopup();
    /*0x150a2b4*/ void OnCreate();
    /*0x150a2b8*/ void OnDelete();
    /*0x150a2bc*/ void OnEnter();
    /*0x150a2c0*/ void OnFinish();
    /*0x150a2c4*/ void OnLeave();
    /*0x150a2c8*/ void OnStart();
    /*0x150a2cc*/ void OnExit();
    /*0x150a3e0*/ void InitPopup(PTShare.Define.SHero hero);
    /*0x150a738*/ void SetData();
    /*0x150b058*/ void SetTitle();
    /*0x150ad34*/ void SetNextSkillText();
    /*0x150aa54*/ void SetRequireItem();
    /*0x150b1b0*/ void SetFastLevelUp();
    /*0x150a65c*/ void BindEvent();
    /*0x150b468*/ void RemoveEvent();
    /*0x150b53c*/ void HandleScrollContent(int index, EquipPromoteStatusEntity obj);
    /*0x150b67c*/ void OnClickPromote();
    /*0x150b784*/ void OnClickFastPromote();
    /*0x150b954*/ System.Collections.IEnumerator CoEffect();
    /*0x150ba58*/ void <OnExit>b__28_0();
    /*0x150ba60*/ void <OnClickPromote>b__38_0();

    class <>c__DisplayClass39_0
    {
        /*0x10*/ SignatureItemPromotePopup <>4__this;
        /*0x18*/ System.ValueTuple<int, System.Collections.Generic.List<Rewards>> fastData;
        /*0x28*/ System.Action <>9__1;

        /*0xcbfa40*/ <>c__DisplayClass39_0();
        /*0xcbfa48*/ void <OnClickFastPromote>b__0(bool confirm);
        /*0xcbfb64*/ void <OnClickFastPromote>b__1();
    }

    class <CoEffect>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SignatureItemPromotePopup <>4__this;

        /*0xcbfc40*/ <CoEffect>d__40(int <>1__state);
        /*0xcbfc6c*/ void System.IDisposable.Dispose();
        /*0xcbfc70*/ bool MoveNext();
        /*0xcbfe4c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbfe54*/ void System.Collections.IEnumerator.Reset();
        /*0xcbfe94*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SignatureItemPromoteResultPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_window;
    /*0x48*/ ScrollContent_EquipmentStatusEntity m_scrollContent;
    /*0x50*/ LocalizeString m_skillInfo;
    /*0x58*/ ParticleBase m_skillUnlockParticle;
    /*0x60*/ PTShare.Define.SHero m_hero;
    /*0x68*/ PTShare.Define.SEquip m_signatureItem;
    /*0x70*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_statList;

    /*0x150c610*/ SignatureItemPromoteResultPopup();
    /*0x150bb20*/ void OnCreate();
    /*0x150bb24*/ void OnDelete();
    /*0x150bb28*/ void OnEnter();
    /*0x150bb2c*/ void OnFinish();
    /*0x150bb30*/ void OnLeave();
    /*0x150bb38*/ void OnStart();
    /*0x150bb3c*/ void OnExit();
    /*0x150bbb8*/ void InitPopup(PTShare.Define.SHero hero);
    /*0x150bdd8*/ void SetData(PTShare.Define.SHero hero);
    /*0x150c04c*/ void SetNextSkillText();
    /*0x150bcfc*/ void BindEvent();
    /*0x150c434*/ void RemoveEvent();
    /*0x150c508*/ void HandleScrollContent(int index, EquipmentStatusEntity obj);
    /*0x150c3c8*/ System.Collections.IEnumerator CoEffect();

    class <CoEffect>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SignatureItemPromoteResultPopup <>4__this;

        /*0xcbfe9c*/ <CoEffect>d__20(int <>1__state);
        /*0xcbfec8*/ void System.IDisposable.Dispose();
        /*0xcbfecc*/ bool MoveNext();
        /*0xcbffe0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbffe8*/ void System.Collections.IEnumerator.Reset();
        /*0xcc0028*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SignatureItemSkillInfo : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int SPECAIL_SKILL_SLOT;
    static /*0x4*/ int LV_STEP;
    /*0x18*/ AtlasImage m_baseSkillIcon;
    /*0x20*/ LocalizeString m_baseTitle;
    /*0x28*/ LocalizeString m_baseInfo;
    /*0x30*/ LocalizeString[] m_unlockInfos;
    /*0x38*/ LocalizeString[] m_unlockLevels;
    /*0x40*/ AtlasImage[] m_unlockIcons;
    /*0x48*/ UnityEngine.UI.Image[] m_unlockGuages;
    /*0x50*/ UnityEngine.GameObject[] m_lv1Objects;
    /*0x58*/ UnityEngine.GameObject[] m_lv2Objects;
    /*0x60*/ UnityEngine.GameObject[] m_lv3Objects;
    /*0x68*/ UnityEngine.GameObject[] m_lv4Objects;
    /*0x70*/ UnityEngine.RectTransform m_window;
    /*0x78*/ UnityEngine.Vector3[] m_windowSizes;
    /*0x80*/ System.Collections.Generic.List<int> m_unlockLevelList;
    /*0x88*/ PTShare.Define.SHero m_hero;
    /*0x90*/ PTShare.Define.SEquip m_signatureItem;
    /*0x98*/ TableData.TableData_Equipment m_signatureItemTable;

    static /*0x150d994*/ SignatureItemSkillInfo();
    /*0x150d91c*/ SignatureItemSkillInfo();
    /*0x150c688*/ void InitInfo(PTShare.Define.SHero hero, PTShare.Define.SEquip signatureItem, TableData.TableData_Equipment signatureItemTable);
    /*0x150c740*/ void SetData();
    /*0x150c824*/ void SetBaseSkill();
    /*0x150d674*/ void SetLvbject();
    /*0x150cec8*/ void SetUnlockInfos();
    /*0x150d1c4*/ void SetUnlockLevels();
    /*0x150d394*/ void SetUnlockIcons();
    /*0x150d4b4*/ void SetUnlockGuage();
    /*0x150d81c*/ void ReSizeWindow();

    class <>c
    {
        static /*0x0*/ SignatureItemSkillInfo.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__21_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__21_1;
        static /*0x18*/ System.Predicate<TableData.TableData_Skillbase> <>9__21_2;

        static /*0xcc0030*/ <>c();
        /*0xcc0090*/ <>c();
        /*0xcc0098*/ int <SetBaseSkill>b__21_0(TableData.TableData_Skillbase x);
        /*0xcc00b0*/ TableData.TableData_Skillbase <SetBaseSkill>b__21_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
        /*0xcc00fc*/ bool <SetBaseSkill>b__21_2(TableData.TableData_Skillbase data);
    }
}

class ScrollContents_VictoryUserInfo : ScrollContent<VictoryUserEntity>
{
    /*0xe1bd34*/ ScrollContents_VictoryUserInfo();
}

class TowerFloorEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ FormationCharacterEntity[] m_cCharacter;
    /*0x20*/ LocalizeString m_cFloorString;
    /*0x28*/ AtlasImage m_cBattleStart;
    /*0x30*/ AtlasImage m_cBackGround;
    /*0x38*/ UnityEngine.GameObject m_obClear;
    /*0x40*/ PlayerProfileSlot[] m_obCustomProfileSlot;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_gateSkeletonGraphic;
    /*0x50*/ TableData.TableData_Towerfloor m_CurrentTowerInfo;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.STowerUser> m_tTowerUser;
    /*0x60*/ TableData.TableData_Towerfloor m_tStageTowerInfo;
    /*0x68*/ string m_strRewards;
    /*0x70*/ bool m_isClear;
    /*0x71*/ bool m_isShowEffect;
    /*0x78*/ UnityEngine.Coroutine m_effectCoroutine;

    /*0x117f524*/ TowerFloorEntity();
    /*0x117e4c8*/ void InitUpdate(TableData.TableData_Towerfloor _stageTower, System.Collections.Generic.List<PTShare.Define.STowerUser> _sTowerUsers, bool isShowEffect);
    /*0x117eaac*/ void LoadEnemyInfo();
    /*0x117e820*/ void LoadStageInfoSetting();
    /*0x117ee2c*/ void SetBackGround(int faction);
    /*0x117e68c*/ void InitGate();
    /*0x117ef64*/ void BlockGate();
    /*0x117f038*/ void OpenGate();
    /*0x117eef8*/ System.Collections.IEnumerator CoClearEffect();
    /*0x117efcc*/ System.Collections.IEnumerator CoOpenTowerEffect();
    /*0x117ec14*/ void LoadUserInfos(System.Collections.Generic.List<PTShare.Define.STowerUser> _sTowerUsers);
    /*0x117f0b0*/ void OnClick_StageInfo();
    /*0x117f220*/ void OnClick_BattleStart();
    /*0x117f470*/ void HandlerCurrentTowerFriendUser();
    /*0x117f5b8*/ void <OnClick_StageInfo>b__24_0(System.Collections.Generic.List<PTShare.Define.STowerRecord> _instance);

    class <CoClearEffect>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TowerFloorEntity <>4__this;

        /*0xcd332c*/ <CoClearEffect>d__21(int <>1__state);
        /*0xcd3358*/ void System.IDisposable.Dispose();
        /*0xcd335c*/ bool MoveNext();
        /*0xcd35e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd35f0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3630*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoOpenTowerEffect>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TowerFloorEntity <>4__this;

        /*0xcd3638*/ <CoOpenTowerEffect>d__22(int <>1__state);
        /*0xcd3664*/ void System.IDisposable.Dispose();
        /*0xcd3668*/ bool MoveNext();
        /*0xcd37bc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd37c4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3804*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScrollContent_TowerFloor : ScrollContent<TowerFloorEntity>
{
    /*0xe1b794*/ ScrollContent_TowerFloor();
}

class ScrollContent_TowerUserInfoEntity : ScrollContent<TowerUserInfoEntity>
{
    /*0xe1b80c*/ ScrollContent_TowerUserInfoEntity();
}

class TowerStageInformationPopup : GuiBase
{
    /*0x40*/ ScrollContent_TowerUserInfoEntity m_cScrollContentTowerUserinfo;
    /*0x48*/ ScrollContent_StageReward m_cScrollContentStageReward;
    /*0x50*/ LocalizeString m_NoRecordText;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_tRewards;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.STowerRecord> m_tTowerRecords;
    /*0x68*/ int m_nBattleID;

    /*0x111e1f4*/ TowerStageInformationPopup();
    /*0x111dcd8*/ void OnCreate();
    /*0x111dddc*/ void OnDelete();
    /*0x111dde0*/ void OnEnter();
    /*0x111de4c*/ void OnFinish();
    /*0x111de50*/ void OnLeave();
    /*0x111de54*/ void OnStart();
    /*0x111de58*/ void OnExit();
    /*0x111ded4*/ void LoadStageInfo(System.Collections.Generic.List<PTShare.Define.STowerRecord> _towerRecords, string _rewards, int _nBattleID);
    /*0x111e098*/ void LoadStageInfo(System.ValueTuple<System.Collections.Generic.List<PTShare.Define.STowerRecord>, string, int> _datas);
    /*0x111e0a8*/ void HandlerTowerUserInfo(int _index, VictoryUserEntity _instance);
    /*0x111e030*/ void LoadRewards(System.Collections.Generic.List<Rewards> _rewards);
    /*0x111e138*/ void HandlerStageReward(int _index, ItemTableRewardSlot _instance);
}

class TowerUserInfoEntity : TowerUserSlotBase
{
    /*0x111e564*/ TowerUserInfoEntity();
}

class StageTowerDoorEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_propertyIcon;
    /*0x20*/ AtlasImage m_backGround;
    /*0x28*/ LocalizeString m_title;
    /*0x30*/ LocalizeString m_floor;
    /*0x38*/ UnityEngine.GameObject m_lockObject;
    /*0x40*/ LocalizeString m_openDay;
    /*0x48*/ bool m_isLock;
    /*0x4c*/ DefineStageTower.TOWER_TYPE m_towerType;

    /*0xc95ac0*/ StageTowerDoorEntity();
    /*0xc94ba0*/ void InitEntity(TableData.TableData_Tower towerData);
    /*0xc94cd4*/ void SetTitle(int faction);
    /*0xc94eb4*/ void SetProperty(int faction);
    /*0xc94fa8*/ void SetBackGround(int faction);
    /*0xc95130*/ void SetFloor(int floor);
    /*0xc9552c*/ void SetLockDoor(bool isLock, System.Collections.Generic.List<System.DayOfWeek> openDayList);
    /*0xc95258*/ void UpdateDoor(string enterDay);
    /*0xc95074*/ PTShare.Define.Faction GetCurFaction();
    /*0xc957b8*/ void OnClick();

    class <>c
    {
        static /*0x0*/ StageTowerDoorEntity.<> <>9;
        static /*0x8*/ System.Action <>9__16_0;

        static /*0xcc20c4*/ <>c();
        /*0xcc2124*/ <>c();
        /*0xcc212c*/ void <OnClick>b__16_0();
    }
}

class StageTowerListPopup : GuiBase
{
    /*0x40*/ StageTowerDoorEntity[] m_doorEntitys;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Tower> m_tableList;

    /*0xc95eb0*/ StageTowerListPopup();
    /*0xc95ad0*/ void OnCreate();
    /*0xc95ad4*/ void OnDelete();
    /*0xc95ad8*/ void OnEnter();
    /*0xc95adc*/ void OnExit();
    /*0xc95bd4*/ void OnFinish();
    /*0xc95bd8*/ void OnLeave();
    /*0xc95bdc*/ void OnStart();
    /*0xc95be0*/ void InitPopup();
    /*0xc95dd8*/ void OnClickExit();
    /*0xc95eac*/ void HandleDailyChange();
    /*0xc95f28*/ void <OnClickExit>b__10_0();
}

class StageTowerPopup : GuiBase
{
    static /*0x0*/ int SELECT_FLOOR;
    static /*0x4*/ float BASE_HEIGHT;
    /*0x40*/ ScrollContent_TowerFloor mScrollContentTowerFloor;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ TowerStageSort_Floor towerStageSort_Floor;
    /*0x58*/ System.Collections.Generic.List<TableData.TableData_Towerfloor> m_tStageTowerInfo;
    /*0x60*/ TableData.TableData_Towerfloor m_curStageTower;
    /*0x68*/ int m_curFloor;
    /*0x6c*/ int m_curFaction;
    /*0x70*/ int m_maxFloor;

    static /*0xc97b38*/ StageTowerPopup();
    /*0xc97a8c*/ StageTowerPopup();
    /*0xc95f34*/ void OnCreate();
    /*0xc95f38*/ void OnEnter();
    /*0xc96b80*/ void OnStart();
    /*0xc970bc*/ void OnFinish();
    /*0xc970c0*/ void OnLeave();
    /*0xc971b0*/ void OnDelete();
    /*0xc971b4*/ void OnExit();
    /*0xc96438*/ void InitStageInfo();
    /*0xc962f8*/ void InitMaxFloor();
    /*0xc972a8*/ void HandlerTowerFloor(int _index, TowerFloorEntity _instance);
    /*0xc96d34*/ void HandlerDailyChange();
    /*0xc975dc*/ void OnClick_Helper();
    /*0xc978bc*/ void OnClick_Story();
    /*0xc979ac*/ void OnClick_RankingBoard();
    /*0xc9673c*/ float GetScrollContentYPosition(int index);
    /*0xc968a4*/ void SetScrollContentY(float y, bool useDOTween, float doTweenDuration);
    /*0xc97a20*/ System.Collections.IEnumerator CoStageTowerClearEffect();
    /*0xc966d0*/ System.Collections.IEnumerator CoTowerAllClearPopup();
    /*0xc97b98*/ void <OnExit>b__8_0();
    /*0xc97c80*/ void <HandlerDailyChange>b__20_0(bool confirm);

    class <>c__DisplayClass3_0
    {
        /*0x10*/ StageTowerPopup <>4__this;
        /*0x18*/ int selectFloor;

        /*0xcc21d8*/ <>c__DisplayClass3_0();
        /*0xcc21e0*/ void <OnEnter>b__0(System.Collections.Generic.List<PTShare.Define.STowerUser> _instance);
    }

    class <CoStageTowerClearEffect>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StageTowerPopup <>4__this;
        /*0x28*/ int <selectFloor>5__2;

        /*0xcc2348*/ <CoStageTowerClearEffect>d__26(int <>1__state);
        /*0xcc2374*/ void System.IDisposable.Dispose();
        /*0xcc2378*/ bool MoveNext();
        /*0xcc2548*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2550*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2590*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTowerAllClearPopup>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StageTowerPopup <>4__this;

        /*0xcc2598*/ <CoTowerAllClearPopup>d__27(int <>1__state);
        /*0xcc25c4*/ void System.IDisposable.Dispose();
        /*0xcc25c8*/ bool MoveNext();
        /*0xcc2820*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2828*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2868*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TowerStageSort_Floor : System.Collections.Generic.IComparer<TableData.TableData_Towerfloor>
{
    /*0x111e2d4*/ TowerStageSort_Floor();
    /*0x111e2ac*/ int Compare(TableData.TableData_Towerfloor left, TableData.TableData_Towerfloor right);
}

class TowerRankEntity : TowerUserSlotBase
{
    /*0xd8*/ LocalizeString m_cRank;
    /*0xe0*/ AtlasImage m_RankImage;
    /*0xe8*/ LocalizeString m_cLastFloor;
    /*0xf0*/ LocalizeString m_cClearLocalize;

    /*0x111d408*/ TowerRankEntity();
    /*0x111ceb0*/ void InitUserInfo(long _lPlayerID, int _nTableID, string _nickName, int _nLevel, int _nFloor, System.DateTime _clear, int _index, string detailids);
    /*0x111d0cc*/ void LoadFloor(int _nFloor);
    /*0x111d1b0*/ void LoadClearTime(System.DateTime _clearTime);
    /*0x111d2d4*/ void SetRankImage(int _index);
}

class ScrollContent_TowerUserRank : ScrollContent<TowerRankEntity>
{
    /*0xe1b884*/ ScrollContent_TowerUserRank();
}

class TowerRankingPopup : GuiBase
{
    /*0x40*/ ScrollContent_TowerUserRank m_cScrollContentTowerUserRank;
    /*0x48*/ TowerRankEntity m_cTowerRankEntity;
    /*0x50*/ LocalizeString m_NoRecordText;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.STowerRanker> m_STowerUser;

    /*0x111dc60*/ TowerRankingPopup();
    /*0x111d418*/ void OnCreate();
    /*0x111d41c*/ void OnDelete();
    /*0x111d420*/ void OnEnter();
    /*0x111d5e0*/ void OnFinish();
    /*0x111d5e4*/ void OnLeave();
    /*0x111d6a0*/ void OnStart();
    /*0x111d6a4*/ void OnExit();
    /*0x111d720*/ UserData get_m_curUserData();
    /*0x111d7b0*/ SProfile get_m_tProfile();
    /*0x111d838*/ void HandlerTowerUserRank(int _index, TowerRankEntity _instance);
    /*0x111da7c*/ void HandlerLoadTowerRankingUser(ServerProtocol.ResTowerRanking _resTowerRanking);
}

class TowerUserSlotBase : VictoryUserEntity
{
    /*0xa8*/ LocalizeString m_cNickName;
    /*0xb0*/ LocalizeString m_cCombatPower;
    /*0xb8*/ UnityEngine.GameObject m_obGuild;
    /*0xc0*/ UnityEngine.GameObject m_obFriend;
    /*0xc8*/ UnityEngine.GameObject m_obCombat;
    /*0xd0*/ PlayerProfileSlot m_cHeroCustomProfileSlot;

    /*0x111d410*/ TowerUserSlotBase();
    /*0x111cf0c*/ void InitUserInfo(long _lPlayerID, int _nTableID, string _nickName, int _nLevel, int _nFloor, string detailids);
    /*0x111e56c*/ void SetCombatPower(long _combatPower);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ long _lPlayerID;
        /*0x18*/ int _nFloor;

        /*0xcd380c*/ <>c__DisplayClass6_0();
        /*0xcd3814*/ void <InitUserInfo>b__0();
    }
}

class StageVictoryUserPopup : GuiBase
{
    /*0x40*/ ScrollContents_VictoryUserInfo m_cScrollContentVictoryUserInfo;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> m_liCampaignRecord;
    /*0x50*/ int nBattleID;

    /*0xc97e4c*/ StageVictoryUserPopup();
    /*0xc97c8c*/ void OnCreate();
    /*0xc97c90*/ void OnDelete();
    /*0xc97c94*/ void OnEnter();
    /*0xc97d34*/ void OnFinish();
    /*0xc97d38*/ void OnLeave();
    /*0xc97d3c*/ void OnStart();
    /*0xc91570*/ void InitVictoryUserWindow(int _battleID, System.Collections.Generic.List<PTShare.Define.SCampaignRecord> _campaignRecords);
    /*0xc97d40*/ void HandlerEventItemUpdate(int _index, VictoryUserEntity _instance);
    /*0xc97dcc*/ void OnClickExit();
}

class HeroTroopSlot : HeroSlot
{
    /*0x48*/ AtlasImage m_PlusIcon;

    /*0x1308fa4*/ HeroTroopSlot();
    /*0x1308eac*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x1308f14*/ void SetActiveObject(bool _enable);
    /*0x1308efc*/ void SetActivePlusIcon(bool _enable);
}

class TroopCharacterViewEntity : UnityEngine.MonoBehaviour
{
    static int DEFAULT_LAYER = 5;
    static int DRAGGED_LAYER = 6;
    /*0x18*/ TroopCharacterViewGroup_New m_ViewGroup;
    /*0x20*/ UnityEngine.RectTransform m_TransMove;
    /*0x28*/ AtlasImage m_Foothold;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x38*/ UnityEngine.UI.Image m_ClickableImage;
    /*0x40*/ AtlasImage[] m_arrStar;
    /*0x48*/ UnityEngine.GameObject m_FactionLevelParent;
    /*0x50*/ LocalizeString m_LevelText;
    /*0x58*/ AtlasImage m_FactionImage;
    /*0x60*/ TooltipData_Unit m_UnitTooltipData;
    /*0x68*/ TooltipTargetUI m_TooltipTarget;
    /*0x70*/ ParticleBase m_FootholdEffect;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_BlindCharacter;
    /*0x80*/ UnityEngine.GameObject m_BlindButton;
    /*0x88*/ UnityEngine.GameObject m_BlindON;
    /*0x90*/ UnityEngine.GameObject m_BlindOFF;
    /*0x98*/ bool IsEmpty;
    /*0xa0*/ TableData.TableData_Unitbase <UnitBase>k__BackingField;
    /*0xa8*/ SUnitPreview <PreviewInfo>k__BackingField;
    /*0xbc*/ int <PositionNumber>k__BackingField;
    /*0xc0*/ int <GetUnitLevel>k__BackingField;
    /*0xc4*/ bool <IsEnemy>k__BackingField;
    /*0xc5*/ bool m_bDragged;
    /*0xc8*/ UnityEngine.Vector3 m_vecMovePOS;
    /*0xd4*/ UnityEngine.Vector2 m_vecSubPOS;
    /*0xdc*/ UnityEngine.Vector3 m_vecCharacterDefaultScale;
    /*0xe8*/ UnityEngine.Vector3 m_vecFootholdDefaultScale;
    /*0xf8*/ UnityEngine.RectTransform m_transParent;
    /*0x100*/ UnityEngine.RectTransform m_transFootHold;
    /*0x108*/ UnityEngine.RectTransform m_transCharacter;
    /*0x110*/ int m_nSiblingIndexOrigin;
    /*0x114*/ bool m_bClickable;
    /*0x118*/ PTShare.Define.SHero m_cacheSHero;

    /*0x1125920*/ TroopCharacterViewEntity();
    /*0x11239fc*/ TableData.TableData_Unitbase get_UnitBase();
    /*0x1123a04*/ void set_UnitBase(TableData.TableData_Unitbase value);
    /*0x1123a0c*/ SUnitPreview get_PreviewInfo();
    /*0x1123a20*/ void set_PreviewInfo(SUnitPreview value);
    /*0x1123a34*/ UnityEngine.Vector3 get_GetOriginPosition();
    /*0x1123a50*/ UnityEngine.Vector3 get_GetPosition();
    /*0x1123a6c*/ int get_GetSiblingIndex();
    /*0x1123a74*/ int get_PositionNumber();
    /*0x1123a7c*/ void set_PositionNumber(int value);
    /*0x1123a84*/ int get_GetUnitTableID();
    /*0x1123a8c*/ int get_GetUnitSkinID();
    /*0x1123ac0*/ int get_GetUnitLevel();
    /*0x1123ac8*/ void set_GetUnitLevel(int value);
    /*0x1123ad0*/ bool get_GetUnitBlind();
    /*0x1123ae0*/ bool get_IsEnemy();
    /*0x1123ae8*/ void set_IsEnemy(bool value);
    /*0x1123af4*/ Battle.GameModeType get_CurrentGameMode();
    /*0x1123b90*/ bool get_IsDefense();
    /*0x1123c2c*/ void Initialize(int _nPositionNumber);
    /*0x1123e54*/ void InitializeUnit(TableData.TableData_Unitbase _base, SUnitPreview _preview, int _nLevel, bool _bIsEnemy, bool _bSetSiblingOrigin);
    /*0x1124444*/ void ClearUnit();
    /*0x1124164*/ void ChangeState(TableData.TableData_Unitbase _base, SUnitPreview _preview);
    /*0x1124710*/ void RefreshState();
    /*0x1123d14*/ void SetPositionNumber(int _nPositionNumber);
    /*0x1124744*/ void SetClickable(bool _bEnable);
    /*0x11245d8*/ void ClearStarGrade();
    /*0x1124750*/ void OnDownCharacter(UnityEngine.EventSystems.BaseEventData _data);
    /*0x11248a4*/ void OnUpCharacter(UnityEngine.EventSystems.BaseEventData _data);
    /*0x1124d88*/ void OnDragCharacter(UnityEngine.EventSystems.BaseEventData _data);
    /*0x11254f8*/ bool IsExistUnitTalbeID(int _nUnitid);
    /*0x1124410*/ void SetSiblingToOrigin();
    /*0x11254dc*/ void SetSiblingToLast();
    /*0x112551c*/ void SetCharacterAlpha(float _fAlphaValue);
    /*0x11255ec*/ void SetPosition(UnityEngine.Vector3 _vecPosition);
    /*0x1125608*/ void SetSibling(int _nSiblingIndex);
    /*0x1125624*/ void SetPositionToOrigin();
    /*0x112480c*/ void PlayFootholdEffect(bool _bEnable, bool _bLoop, float _fSpeed);
    /*0x1125664*/ void SetUnitLevel(int _nLevel);
    /*0x1124434*/ bool IsBlind();
    /*0x1123d1c*/ void SetActiveBlindButton(bool _bEnable);
    /*0x1123dcc*/ void SetActiveBlindCharacter(bool _bEnable);
    /*0x1125740*/ void OnClickBlindButton();
    /*0x11256ec*/ void RefreshBlindButton();
    /*0x1124648*/ void SetBlindData(int index, bool blind);
}

class TroopCharacterViewEntity_GuildWar : TroopCharacterViewEntity
{
    /*0x120*/ UnityEngine.GameObject m_goMyUnitMarker;

    /*0x1125b40*/ TroopCharacterViewEntity_GuildWar();
    /*0x1125980*/ void Initialize(int _nPositionNumber);
    /*0x11259bc*/ void InitializeUnit(TableData.TableData_Unitbase _base, SUnitPreview _preview, int _nLevel, bool _bIsEnemy, bool _bSetSiblingOrigin);
    /*0x1125b04*/ void ClearUnit();
}

class TroopCharacterViewGroup_New : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroTroopPopup_New m_heroTroopPopup;
    /*0x20*/ System.Collections.Generic.List<TroopCharacterViewEntity> m_liCharacterEntity;
    /*0x28*/ int m_nDragEntityIndex;
    /*0x2c*/ int m_nChangedEntityIndex;
    /*0x30*/ float POSITION_CHANGE_DISTANCE;
    /*0x38*/ System.Collections.Generic.List<TroopCharacterViewEntity> m_lisCurrentViewEntity;

    /*0x1126bec*/ TroopCharacterViewGroup_New();
    /*0x1125b44*/ void InitializeGroup();
    /*0x1125d78*/ void SetFormation(System.Collections.Generic.List<int> _lisFormation);
    /*0x1125874*/ int GetBlindCount();
    /*0x1125ff0*/ int GetSiblingIndex(int _nIndex);
    /*0x112606c*/ void SetPreviewCharacter(int _nIndex, int _nLevel, ref TableData.TableData_Unitbase _tUnitBase, ref SUnitPreview _hero, bool _bIsEnemy, bool _bFirstInitialied);
    /*0x11262ec*/ void SetPreviewCharacterEmptyAll();
    /*0x11263d4*/ void SetPreivewCharacterEmpty(int _nIndex);
    /*0x11264b4*/ void SetBlindButton(bool enable);
    /*0x1124898*/ void TouchStart();
    /*0x1124d58*/ void TouchEndNoDrag(int _nUnitTableID);
    /*0x11249c4*/ void TouchEndWithDrag(bool _bPlayVoice);
    /*0x1124f80*/ void DragUnit(int _nPositionNumber, UnityEngine.Vector2 _vecPosition);
    /*0x112655c*/ void ChangeUnitInfo(int _nIndexA, int _nIndexB, bool _bSetSiblingOrigin);
}

class TroopTeamEntity : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerClickHandler
{
    static /*0x0*/ System.Action OnProtocolChangeEvent;
    /*0x18*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x20*/ UnityEngine.GameObject m_EditParent;
    /*0x28*/ LocalizeString m_TroopName;
    /*0x30*/ System.Collections.Generic.List<HeroTroopSlot> m_liHeroSlot;
    /*0x38*/ float m_MouseWaitTime;
    /*0x3c*/ int m_nIndex;
    /*0x40*/ bool m_isUseTroopData;
    /*0x41*/ bool m_isOpenMenu;
    /*0x48*/ PTShare.Define.STroop m_TroopInfo;
    /*0x50*/ string[] m_arrHeroIds;
    /*0x58*/ System.Collections.IEnumerator m_iMouseTimer;
    /*0x60*/ float m_fMouseTime;
    /*0x64*/ int nStartCount;
    /*0x68*/ int nSlotLength;

    static /*0x11292a0*/ TroopTeamEntity();
    static /*0x11283c4*/ void add_OnProtocolChangeEvent(System.Action value);
    static /*0x11284b8*/ void remove_OnProtocolChangeEvent(System.Action value);
    /*0x1129290*/ TroopTeamEntity();
    /*0x11285ac*/ void InitializeEntity(int _index);
    /*0x11289e0*/ void InitializeEntity(int _index, PTShare.Define.STroop _troop);
    /*0x1128c60*/ void ShowTroopPopup();
    /*0x1128d34*/ void OnChangeNameButton();
    /*0x1128db8*/ void OnSortButton();
    /*0x1128e90*/ void OnDeleteButton();
    /*0x112885c*/ void SetTroopName(string _name);
    /*0x11287f4*/ void SetActiveEdit(bool _enable);
    /*0x1128f68*/ void StartMouseTimer(bool _isStop);
    /*0x1128fcc*/ System.Collections.IEnumerator CoMouseDownTimer();
    /*0x1129038*/ bool IsChildrenObject();
    /*0x1129164*/ UnityEngine.GameObject GetCurrentEventSystemObject();
    /*0x11291d0*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11291e0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);

    class <CoMouseDownTimer>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TroopTeamEntity <>4__this;

        /*0xcd4878*/ <CoMouseDownTimer>d__26(int <>1__state);
        /*0xcd48a4*/ void System.IDisposable.Dispose();
        /*0xcd48a8*/ bool MoveNext();
        /*0xcd4ac8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd4ad0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd4b10*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TroopTeamEntitySelector : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler
{
    static /*0x0*/ System.Action<PTShare.Define.STroop> OnSelectEvent;
    /*0x18*/ AtlasImage m_Frame;
    /*0x20*/ LocalizeString m_TroopName;
    /*0x28*/ System.Collections.Generic.List<HeroTroopSlot> m_liHeroSlot;
    /*0x30*/ int m_nIndex;
    /*0x38*/ PTShare.Define.STroop m_TroopInfo;
    /*0x40*/ string[] m_arrHeroIds;
    /*0x48*/ int nStartCount;
    /*0x4c*/ int nSlotLength;

    static /*0x11299d8*/ TroopTeamEntitySelector();
    static /*0x11292a4*/ void add_OnSelectEvent(System.Action<PTShare.Define.STroop> value);
    static /*0x1129398*/ void remove_OnSelectEvent(System.Action<PTShare.Define.STroop> value);
    /*0x11299d0*/ TroopTeamEntitySelector();
    /*0x112948c*/ void InitializeEntity(int _index, PTShare.Define.STroop _troop, bool _isSelect);
    /*0x1129780*/ void SetTroopName(string _name);
    /*0x1129904*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
}

class VictoryUserEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_FriendIcon;
    /*0x20*/ AtlasImage m_GuildIcon;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_CombatPower;
    /*0x38*/ PlayerProfileSlot m_PlayerSlot;
    /*0x40*/ PTShare.Define.SCampaignRecord m_tCampaignRecord;
    /*0x48*/ PTShare.Define.STowerRecord m_tTowerRecord;
    /*0x50*/ System.Collections.Generic.List<Battle.BattleGraphValue> battleGraphValue;
    /*0x58*/ System.Collections.Generic.List<UnitSpawnInfo> m_tUnitStage;
    /*0x60*/ BattleGraph LeftBattleGraph;
    /*0x78*/ BattleGraph RightBattleGraph;
    /*0x90*/ int m_nBattleID;
    /*0x98*/ long m_nPlayerID;
    /*0xa0*/ Battle.GameModeType m_eGameMode;

    /*0x10d4404*/ VictoryUserEntity();
    /*0x10d3b34*/ void InitCampainUserInfo(int battleID, PTShare.Define.SCampaignRecord _campaignUser);
    /*0x10d404c*/ void InitTowerUserInfo(int battleID, PTShare.Define.STowerRecord _towerRecord);
    /*0x10d3fac*/ void SetViewStatus(int _gender, string _nickName, int _level, PTShare.Define.Relation _relation, long _combatPower);
    /*0x10d3c88*/ void InitGraphValue();
    /*0x10d41ec*/ void OnClick_Graph();
    /*0x10d44bc*/ void <InitCampainUserInfo>b__14_0();
    /*0x10d44dc*/ void <InitTowerUserInfo>b__15_0();
}

class StatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Battle.CharacterStat.StatType m_eStatType;
    /*0x20*/ LocalizeString m_StatText;
    /*0x28*/ LocalizeString m_StatValue;
    /*0x30*/ ParticleBase m_lvUpParticlePrefab;
    /*0x38*/ System.Text.StringBuilder m_StrBuilder;
    /*0x40*/ string m_strAddSeparator;
    /*0x48*/ ParticleBase m_tempParticle;

    /*0xc9b208*/ StatusEntity();
    /*0xc9abe0*/ void OnDisable();
    /*0xc9aca4*/ void InitializeStat(bool _checkActive, float _defValue, float _addValue, string _separator, string _addseparator, bool _isShortName);
    /*0xc9b028*/ void ShowParticle();
    /*0xc9aec8*/ string SetStatText(float _defValue, float _addValue);
    /*0xc9b0c0*/ void SetMeasureValue(float _Value);
    /*0xc9b1f8*/ Battle.CharacterStat.StatType GetStatType();
    /*0xc9b200*/ void SetStatType(Battle.CharacterStat.StatType statType);
    /*0xc9b054*/ System.Collections.IEnumerator CoEffectLvupParticle();
    /*0xc9abe4*/ void DestroyParticle();

    class <CoEffectLvupParticle>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StatusEntity <>4__this;

        /*0xcc35d8*/ <CoEffectLvupParticle>d__14(int <>1__state);
        /*0xcc3604*/ void System.IDisposable.Dispose();
        /*0xcc3608*/ bool MoveNext();
        /*0xcc37a8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc37b0*/ void System.Collections.IEnumerator.Reset();
        /*0xcc37f0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TitleSkinOptionSet
{
    /*0x10*/ bool isActive;
    /*0x18*/ string skinName;
    /*0x20*/ UnityEngine.GameObject effect;
    /*0x28*/ UnityEngine.AudioClip sound;
    /*0x30*/ UnityEngine.GameObject[] childs;

    /*0x11700fc*/ TitleSkinOptionSet();
}

class TitleSkinOption : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<TitleSkinOptionSet> m_liSkinSet;
    /*0x20*/ TitleSkinOptionSet selectSkin;

    /*0x11700f4*/ TitleSkinOption();
    /*0x116fa60*/ string GetRandomActiveSkinName();
    /*0x116fcb4*/ void DeActiveEffectAll();
    /*0x116fdd8*/ void DeActiveChildAll();
    /*0x116fefc*/ void ActiveSkinEffect();
    /*0x116ffa0*/ void ActiveChild();
    /*0x1170088*/ string GetTitleVoiceAudio();

    class <>c
    {
        static /*0x0*/ TitleSkinOption.<> <>9;
        static /*0x8*/ System.Func<TitleSkinOptionSet, bool> <>9__2_0;
        static /*0x10*/ System.Func<TitleSkinOptionSet, System.Guid> <>9__2_1;
        static /*0x18*/ System.Action<TitleSkinOptionSet> <>9__3_0;
        static /*0x20*/ System.Action<TitleSkinOptionSet> <>9__4_0;

        static /*0xcd11d8*/ <>c();
        /*0xcd1238*/ <>c();
        /*0xcd1240*/ bool <GetRandomActiveSkinName>b__2_0(TitleSkinOptionSet x);
        /*0xcd1258*/ System.Guid <GetRandomActiveSkinName>b__2_1(TitleSkinOptionSet x);
        /*0xcd12b4*/ void <DeActiveEffectAll>b__3_0(TitleSkinOptionSet x);
        /*0xcd134c*/ void <DeActiveChildAll>b__4_0(TitleSkinOptionSet x);
    }
}

class TooltipDataBase : UnityEngine.MonoBehaviour
{
    /*0x11712a0*/ TooltipDataBase();
    TooltipType GetTooltipType();
}

class TooltipData_Desc : TooltipDataBase
{
    /*0x18*/ string kDesc;
    /*0x20*/ System.Collections.Generic.List<string> paramList;

    /*0x11712e4*/ TooltipData_Desc();
    /*0x11712a8*/ TooltipType GetTooltipType();
    /*0x11712b0*/ void SetData(string _key);
}

class TooltipData_Equipment : TooltipDataBase
{
    /*0x18*/ int <equipID>k__BackingField;
    /*0x20*/ string <kEquipName>k__BackingField;
    /*0x28*/ string <kEquipDesc>k__BackingField;

    /*0x11713a0*/ TooltipData_Equipment();
    /*0x11712ec*/ int get_equipID();
    /*0x11712f4*/ void set_equipID(int value);
    /*0x11712fc*/ string get_kEquipName();
    /*0x1171304*/ void set_kEquipName(string value);
    /*0x117130c*/ string get_kEquipDesc();
    /*0x1171314*/ void set_kEquipDesc(string value);
    /*0x117131c*/ TooltipType GetTooltipType();
    /*0x1171324*/ void SetData(int _equipment_index);
    /*0x1171374*/ void SetData(TableData.TableData_Equipment _script);
}

class TooltipData_Faction : TooltipDataBase
{
    /*0x18*/ int factionID;

    /*0x11713b8*/ TooltipData_Faction();
    /*0x11713a8*/ TooltipType GetTooltipType();
    /*0x11713b0*/ void SetData(int _nFactionID);
}

class TooltipData_FactionHelp : TooltipDataBase
{
    /*0x11713c8*/ TooltipData_FactionHelp();
    /*0x11713c0*/ TooltipType GetTooltipType();
}

class TooltipData_Guild : TooltipDataBase
{
    /*0x18*/ TooltipData_Guild.GUILD_TOOLTIP_TYPE guildTooltipType;

    /*0x11713d8*/ TooltipData_Guild();
    /*0x11713d0*/ TooltipType GetTooltipType();

    enum GUILD_TOOLTIP_TYPE
    {
        GUILD_LEVEL = 0,
        GUILD_POINT = 1,
    }
}

class TooltipData_IconDesc : TooltipDataBase
{
    /*0x18*/ AtlasImage selectImage;
    /*0x20*/ string title;
    /*0x28*/ string desc;

    /*0x1171664*/ TooltipData_IconDesc();
    /*0x11713e0*/ TooltipType GetTooltipType();
    /*0x11713e8*/ void SetData(UnitClassType _classType);
    /*0x1171510*/ void SetData(PTShare.Define.EquipmentType _equipType, bool _isEquipment);
}

class TooltipData_Item : TooltipDataBase
{
    /*0x18*/ int <itemID>k__BackingField;
    /*0x20*/ string <kItemName>k__BackingField;
    /*0x28*/ string <kItemDesc>k__BackingField;

    /*0x11717dc*/ TooltipData_Item();
    /*0x11716b8*/ int get_itemID();
    /*0x11716c0*/ void set_itemID(int value);
    /*0x11716c8*/ string get_kItemName();
    /*0x11716d0*/ void set_kItemName(string value);
    /*0x11716d8*/ string get_kItemDesc();
    /*0x11716e0*/ void set_kItemDesc(string value);
    /*0x11716e8*/ TooltipType GetTooltipType();
    /*0x11716f0*/ void SetData(int _item_id);
    /*0x117172c*/ void SetData(TableData.TableData_Item _script);
}

class TooltipData_Percent : TooltipDataBase
{
    /*0x18*/ System.Collections.Generic.List<string> descList;
    /*0x20*/ System.Collections.Generic.List<float> percentList;

    /*0x1171c70*/ TooltipData_Percent();
    /*0x11717e4*/ TooltipType GetTooltipType();
    /*0x11717ec*/ void SetData(System.Collections.Generic.List<string> descList, System.Collections.Generic.List<float> percentList);
    /*0x11717f4*/ void SetData(System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> tableList);
}

class TooltipData_Skill : TooltipDataBase
{
    /*0x18*/ TableData.TableData_Skillbase m_skillBase;
    /*0x20*/ TableData.TableData_Skilllv m_skillLv;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> m_liSkillDesc;
    /*0x30*/ System.Collections.Generic.List<TableData.TableData_Unittierlv> m_liTierLv;
    /*0x38*/ int m_nLevel;
    /*0x40*/ System.Action<bool> OnClickAction;

    /*0x1171de4*/ TooltipData_Skill();
    /*0x1171c78*/ TooltipType GetTooltipType();
    /*0x1171c80*/ void SetData(TableData.TableData_Skillbase _base, TableData.TableData_Skilllv _skillLv, int _level, System.Action<bool> _onClickCallback);
}

class TooltipData_SkillClose : TooltipData_Skill
{
    /*0x1171e64*/ TooltipData_SkillClose();
    /*0x1171e5c*/ TooltipType GetTooltipType();
}

class TooltipData_TitleDesc : TooltipDataBase
{
    /*0x18*/ string title;
    /*0x20*/ string desc;
    /*0x28*/ System.Collections.Generic.List<string> paramList;
    /*0x30*/ bool isLocalKey;

    /*0x1171efc*/ TooltipData_TitleDesc();
    /*0x1171e68*/ TooltipType GetTooltipType();
    /*0x1171e70*/ void SetData(string _title, string _desc, string[] _pram);
    /*0x1171eec*/ void SetData(string _title, string _desc, bool _is_local_key);
}

class TooltipData_Unit : TooltipDataBase
{
    /*0x18*/ int <actorID>k__BackingField;
    /*0x20*/ TableData.TableData_Unitbase <unitBase>k__BackingField;
    /*0x28*/ int <unitLevel>k__BackingField;

    /*0x1171f68*/ TooltipData_Unit();
    /*0x1171f0c*/ int get_actorID();
    /*0x1171f14*/ void set_actorID(int value);
    /*0x1171f1c*/ TableData.TableData_Unitbase get_unitBase();
    /*0x1171f24*/ void set_unitBase(TableData.TableData_Unitbase value);
    /*0x1171f2c*/ int get_unitLevel();
    /*0x1171f34*/ void set_unitLevel(int value);
    /*0x1171f3c*/ TooltipType GetTooltipType();
    /*0x1171f44*/ void SetData(TableData.TableData_Unitbase _script, int _level);
}

class TooltipData_UnitList : TooltipDataBase
{
    /*0x18*/ System.Collections.Generic.List<TableData.TableData_Unitbase> <unitList>k__BackingField;

    /*0x1171f90*/ TooltipData_UnitList();
    /*0x1171f70*/ System.Collections.Generic.List<TableData.TableData_Unitbase> get_unitList();
    /*0x1171f78*/ void set_unitList(System.Collections.Generic.List<TableData.TableData_Unitbase> value);
    /*0x1171f80*/ TooltipType GetTooltipType();
    /*0x1171f88*/ void SetData(System.Collections.Generic.List<TableData.TableData_Unitbase> _script);
}

enum TooltipType
{
    Unknown = 0,
    Description = 1,
    TitleDescription = 2,
    Actor = 3,
    Equip = 4,
    Item = 5,
    Skill = 6,
    SkillClose = 7,
    Faction = 8,
    FactionHelp = 9,
    IconDescription = 10,
    Guild = 11,
    UnitList = 12,
    Percent = 13,
}

class TooltipLocalString : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Text[] tooltipTextArray;
    /*0x20*/ float sizeHight;
    /*0x24*/ float correctionHight;
    /*0x28*/ LocaleLanguageType[] correctionArray;
    /*0x30*/ UnityEngine.RectTransform rectTransform;
    /*0x38*/ TooltipLocalType _tooltipType;

    /*0x1172528*/ TooltipLocalString();
    /*0x1171f98*/ void Awake();
    /*0x1172030*/ void Init(TooltipLocalType _type, string[] _text);
    /*0x1172168*/ void Align(UnityEngine.Vector2 _start_pos);
    /*0x1172438*/ float GetTempHight();
    /*0x1172508*/ bool IsTextArray();
    /*0x11722f4*/ void SetTextSize(UnityEngine.UI.Text _text_ui, bool _isTitle, ref float _height);
}

class TooltipPercentGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_desc;
    /*0x20*/ LocalizeString m_percent;

    /*0x11726a0*/ TooltipPercentGroup();
    /*0x1172530*/ void Init(string desc, float percent);
}

enum TooltipAlignType
{
    None = 0,
    Top = 1,
    Left = 2,
    Right = 4,
    Bottom = 8,
}

class TooltipTargetUI : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler
{
    static /*0x0*/ bool _isShow;
    static /*0x8*/ TooltipUIBase _curTooltipUI;
    static /*0x10*/ TooltipTargetUI _curTooltipTarget;
    /*0x18*/ bool useTooltip;
    /*0x19*/ bool isHide;
    /*0x1c*/ UnityEngine.Vector2 tooltipOffset;
    /*0x24*/ TooltipAlignType alignType1;
    /*0x28*/ TooltipAlignType alignType2;
    /*0x2c*/ ButtonSound m_openSound;
    /*0x30*/ UnityEngine.Vector2 pressPosition;
    /*0x38*/ TooltipDataBase _tooltipData;
    /*0x40*/ System.Collections.IEnumerator m_ieShowTimer;

    static /*0x11738a4*/ TooltipTargetUI();
    static /*0x11726a8*/ bool get_isCurTooltipTarget();
    static /*0x1172748*/ TooltipUIBase ShowTooltipUI(TooltipTargetUI _target, UnityEngine.Vector2 _press_pos, TooltipAlignType _align1, TooltipAlignType _align2);
    static /*0x1172d5c*/ void SetPosition(TooltipTargetUI _target, UnityEngine.Vector2 _press_pos, UnityEngine.RectTransform _tooltip_transform, TooltipAlignType _align1, TooltipAlignType _align2);
    static /*0x1173110*/ void TouchHideTooltipUI();
    static /*0x1172a80*/ void HideTooltipUI();
    static /*0x1172fe4*/ TooltipAlignType GetAlignType(TooltipTargetUI _target, UnityEngine.RectTransform _tooltip_transform, int _width, int _height);
    static /*0x11730c0*/ UnityEngine.Vector2 GetAlignPos(TooltipAlignType _align_type, UnityEngine.Vector2 _default_pos, UnityEngine.Vector2 _tooltip_size, TooltipTargetUI _target);
    /*0x1173894*/ TooltipTargetUI();
    /*0x1173198*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11731c0*/ void OpenTooltip(UnityEngine.Vector2 _pressPosition);
    /*0x11734d0*/ System.Collections.IEnumerator OnProcess_DelayTime(float _delayTime);
    /*0x1173418*/ System.Collections.IEnumerator OnProcess_Delay();
    /*0x1173544*/ void OnDisable();
    /*0x1173484*/ void StartTimer();
    /*0x1173620*/ System.Collections.IEnumerator CoMouseDownTimer();
    /*0x117368c*/ bool IsChildrenObject();
    /*0x1173828*/ UnityEngine.GameObject GetCurrentEventSystemObject();

    class <OnProcess_DelayTime>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _delayTime;
        /*0x24*/ float <_delay_time>5__2;

        /*0xcd1e28*/ <OnProcess_DelayTime>d__22(int <>1__state);
        /*0xcd1e54*/ void System.IDisposable.Dispose();
        /*0xcd1e58*/ bool MoveNext();
        /*0xcd1edc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1ee4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1f24*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Delay>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TooltipTargetUI <>4__this;

        /*0xcd1c20*/ <OnProcess_Delay>d__23(int <>1__state);
        /*0xcd1c4c*/ void System.IDisposable.Dispose();
        /*0xcd1c50*/ bool MoveNext();
        /*0xcd1dd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1de0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1e20*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMouseDownTimer>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TooltipTargetUI <>4__this;

        /*0xcd1978*/ <CoMouseDownTimer>d__26(int <>1__state);
        /*0xcd19a4*/ void System.IDisposable.Dispose();
        /*0xcd19a8*/ bool MoveNext();
        /*0xcd1bd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1bd8*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1c18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TooltipUIBase : UnityEngine.MonoBehaviour
{
    static float BOTTOM_OFFSET = 20;
    static float TEXT_LINE_OFFSET = 10;
    /*0x18*/ UnityEngine.RectTransform <tooltipTransform>k__BackingField;
    /*0x20*/ UnityEngine.CanvasGroup <canvasGroup>k__BackingField;
    /*0x28*/ UnityEngine.Vector2 <defaultSize>k__BackingField;
    /*0x30*/ bool <isValidData>k__BackingField;

    /*0x1173fa4*/ TooltipUIBase();
    TooltipType GetTooltipType();
    void Initialize();
    void SetData(TooltipDataBase _input);
    void Clear();
    void Align();
    /*0x1173c78*/ UnityEngine.RectTransform get_tooltipTransform();
    /*0x1173c80*/ void set_tooltipTransform(UnityEngine.RectTransform value);
    /*0x1173c88*/ UnityEngine.CanvasGroup get_canvasGroup();
    /*0x1173c90*/ void set_canvasGroup(UnityEngine.CanvasGroup value);
    /*0x1173c98*/ UnityEngine.Vector2 get_defaultSize();
    /*0x1173ca0*/ void set_defaultSize(UnityEngine.Vector2 value);
    /*0x1173ca8*/ bool get_isValidData();
    /*0x1173cb0*/ void set_isValidData(bool value);
    /*0x1172bc4*/ bool InitData(TooltipDataBase _input);
    /*0x1172cec*/ void Show(bool IsDefalut);
    /*0x1173d74*/ void Hide();
    /*0x11733fc*/ void SetAlpha(float _alpha);
    /*0x1173cbc*/ bool IsValidData(TooltipDataBase _data);
    /*0x1173df0*/ void Awake();
    /*0x1173e90*/ void SetFont(UnityEngine.UI.Text _textTarget);
    void OnHide();
    void OnShow();
}

class TooltipUI_Desc : TooltipUIBase
{
    /*0x38*/ LocalizeString desc;
    /*0x40*/ UnityEngine.RectTransform m_DescTransform;

    /*0x11741a0*/ TooltipUI_Desc();
    /*0x1173fac*/ TooltipType GetTooltipType();
    /*0x1173fb4*/ void Initialize();
    /*0x1173fb8*/ void SetData(TooltipDataBase _input);
    /*0x1174128*/ void Clear();
    /*0x117412c*/ void Align();
    /*0x117407c*/ void SetDesc(string _key, string[] _params);
    /*0x1174198*/ void OnHide();
    /*0x117419c*/ void OnShow();
}

class TooltipUI_Equipment : TooltipUIBase
{
    /*0x38*/ ItemSelectSlot equipImage;
    /*0x40*/ LocalizeString equipName;
    /*0x48*/ LocalizeString desc;

    /*0x1174760*/ TooltipUI_Equipment();
    /*0x11741a8*/ TooltipType GetTooltipType();
    /*0x11741b0*/ void Initialize();
    /*0x11741b4*/ void SetData(TooltipDataBase _input);
    /*0x117458c*/ void Clear();
    /*0x117461c*/ void Align();
    /*0x1174260*/ void SetImage(int _equip_index);
    /*0x117430c*/ void SetName(string _key);
    /*0x117444c*/ void SetDesc(string _key);
    /*0x1174758*/ void OnHide();
    /*0x117475c*/ void OnShow();
}

class TooltipUI_Faction : TooltipUIBase
{
    static int _nMinFactionCount = 1;
    static int _nMaxFactionCount = 4;
    static int _nLightFaction = 6;
    static int _nDarkFaction = 5;
    /*0x38*/ AtlasImage m_GeneralBaseFaction;
    /*0x40*/ AtlasImage m_GeneralUpperFaction;
    /*0x48*/ AtlasImage m_GeneralLowerFaction;
    /*0x50*/ AtlasImage m_GeneralRightArrow;
    /*0x58*/ AtlasImage m_GeneralLeftArrow;
    /*0x60*/ AtlasImage m_SpecialLeftFaction;
    /*0x68*/ AtlasImage m_SpecialRightFaction;
    /*0x70*/ AtlasImage m_SpecialLeftArrow;
    /*0x78*/ AtlasImage m_SpecialRightArrow;
    /*0x80*/ LocalizeString m_FactionText;
    /*0x88*/ UnityEngine.GameObject m_GeneralFactionGroup;
    /*0x90*/ UnityEngine.GameObject m_SpecialFactionGroup;

    /*0x1174c18*/ TooltipUI_Faction();
    /*0x1174768*/ TooltipType GetTooltipType();
    /*0x1174770*/ void Align();
    /*0x1174774*/ void Clear();
    /*0x1174778*/ void Initialize();
    /*0x117477c*/ void SetData(TooltipDataBase _input);
    /*0x1174c10*/ void OnHide();
    /*0x1174c14*/ void OnShow();
}

class TooltipUI_FactionHelp : TooltipUIBase
{
    /*0x38*/ LocalizeString m_DescText;

    /*0x1174d74*/ TooltipUI_FactionHelp();
    /*0x1174c20*/ TooltipType GetTooltipType();
    /*0x1174c28*/ void Align();
    /*0x1174c2c*/ void Clear();
    /*0x1174c30*/ void Initialize();
    /*0x1174c34*/ void SetData(TooltipDataBase _input);
    /*0x1174d6c*/ void OnHide();
    /*0x1174d70*/ void OnShow();
}

class TooltipUI_Guild : TooltipUIBase
{
    /*0x38*/ LocalizeString title;
    /*0x40*/ LocalizeString desc;
    /*0x48*/ UnityEngine.RectTransform m_GridTransform;

    /*0x1175c00*/ TooltipUI_Guild();
    /*0x1174d7c*/ TooltipType GetTooltipType();
    /*0x1174d84*/ void Initialize();
    /*0x1174d88*/ void SetData(TooltipDataBase _input);
    /*0x1175a6c*/ void Clear();
    /*0x1175a70*/ void Align();
    /*0x1174e28*/ void SetTooltipTitle(TooltipData_Guild.GUILD_TOOLTIP_TYPE guildTooltipType);
    /*0x1174fec*/ void SetTooltipDesc(TooltipData_Guild.GUILD_TOOLTIP_TYPE guildTooltipType);
    /*0x1175bf8*/ void OnHide();
    /*0x1175bfc*/ void OnShow();
}

class TooltipUI_IconDesc : TooltipUIBase
{
    /*0x38*/ AtlasImage m_Icon;
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ LocalizeString m_Desc;
    /*0x50*/ UnityEngine.RectTransform m_IconRect;
    /*0x58*/ UnityEngine.RectTransform m_GridRect;

    /*0x1176098*/ TooltipUI_IconDesc();
    /*0x1175c08*/ TooltipType GetTooltipType();
    /*0x1175c10*/ void Align();
    /*0x1175de4*/ void Clear();
    /*0x1175de8*/ void Initialize();
    /*0x1175dec*/ void SetData(TooltipDataBase _input);
    /*0x1176090*/ void OnHide();
    /*0x1176094*/ void OnShow();
}

class TooltipUI_Item : TooltipUIBase
{
    /*0x38*/ LocalizeString itemName;
    /*0x40*/ LocalizeString desc;

    /*0x1176588*/ TooltipUI_Item();
    /*0x11760a0*/ TooltipType GetTooltipType();
    /*0x11760a8*/ void Initialize();
    /*0x11760ac*/ void SetData(TooltipDataBase _input);
    /*0x11763cc*/ void Clear();
    /*0x11763d0*/ void Align();
    /*0x117614c*/ void SetName(string _key);
    /*0x117628c*/ void SetDesc(string _key);
    /*0x1176580*/ void OnHide();
    /*0x1176584*/ void OnShow();
}

class TooltipUI_Percent : TooltipUIBase
{
    /*0x38*/ TooltipPercentGroup[] m_groups;

    /*0x11767b4*/ TooltipUI_Percent();
    /*0x1176590*/ TooltipType GetTooltipType();
    /*0x1176598*/ void Initialize();
    /*0x117659c*/ void SetData(TooltipDataBase _input);
    /*0x11767a4*/ void Clear();
    /*0x11767a8*/ void Align();
    /*0x11767ac*/ void OnHide();
    /*0x11767b0*/ void OnShow();
}

enum TooltipLocalType
{
    Nomal = 0,
    Grade = 1,
    Cooltime = 2,
    Affect1 = 3,
    Affect2 = 4,
    AcquireDesc = 5,
    AwakeSkillUpgrade = 6,
}

class TooltipUI_Skill : TooltipUIBase
{
    /*0x38*/ LocalizeString m_SkillName;
    /*0x40*/ LocalizeString m_SkillDesc;
    /*0x48*/ LocalizeString m_SkillType;
    /*0x50*/ System.Collections.Generic.List<LocalizeString> m_liSkillBonusDesc;
    /*0x58*/ UnityEngine.RectTransform m_GridTransform;
    /*0x60*/ TooltipData_Skill _data;

    /*0x117799c*/ TooltipUI_Skill();
    /*0x11767bc*/ TooltipType GetTooltipType();
    /*0x11767c4*/ void Align();
    /*0x1176950*/ void Clear();
    /*0x1176954*/ void Initialize();
    /*0x1176958*/ void OnHide();
    /*0x1176a08*/ void OnShow();
    /*0x1176ab8*/ void SetData(TooltipDataBase _input);
}

class TooltipUI_SkillClose : TooltipUI_Skill
{
    /*0x11779ac*/ TooltipUI_SkillClose();
    /*0x11779a4*/ TooltipType GetTooltipType();
}

class TooltipUI_TitleDesc : TooltipUIBase
{
    /*0x38*/ LocalizeString title;
    /*0x40*/ LocalizeString desc;
    /*0x48*/ UnityEngine.RectTransform m_GridTransform;

    /*0x1177e58*/ TooltipUI_TitleDesc();
    /*0x11779b4*/ TooltipType GetTooltipType();
    /*0x11779bc*/ void Initialize();
    /*0x11779c0*/ void SetData(TooltipDataBase _input);
    /*0x1177cc4*/ void Clear();
    /*0x1177cc8*/ void Align();
    /*0x1177a98*/ void SetTitle(string _key);
    /*0x1177bd8*/ void SetDesc(string _key, bool _is_local_key, string[] _params);
    /*0x1177e50*/ void OnHide();
    /*0x1177e54*/ void OnShow();
}

class TooltipUI_Unit : TooltipUIBase
{
    /*0x38*/ LocalizeString unitName;
    /*0x40*/ LocalizeString unitDesc;
    /*0x48*/ UnityEngine.RectTransform gridTransform;

    /*0x117895c*/ TooltipUI_Unit();
    /*0x1177e60*/ TooltipType GetTooltipType();
    /*0x1177e68*/ void Initialize();
    /*0x1177e6c*/ void SetData(TooltipDataBase _input);
    /*0x11787c4*/ void Clear();
    /*0x11787c8*/ void Align();
    /*0x1178628*/ void SetLocalize(string _name, string _desc);
    /*0x1178954*/ void OnHide();
    /*0x1178958*/ void OnShow();
}

class TooltipUI_UnitList : TooltipUIBase
{
    /*0x38*/ ScrollContent_HeroSlotInventory m_ScrollContent;
    /*0x40*/ TooltipData_UnitList data;

    /*0x1178b40*/ TooltipUI_UnitList();
    /*0x1178964*/ TooltipType GetTooltipType();
    /*0x117896c*/ void Initialize();
    /*0x1178970*/ void SetData(TooltipDataBase _input);
    /*0x1178a9c*/ void Clear();
    /*0x1178aa0*/ void Align();
    /*0x1178aa4*/ void OnHide();
    /*0x1178aa8*/ void OnShow();
    /*0x1178aac*/ void HandlerScrollContent(int nIndex, HeroSlotInventory slot);
}

class TopStatusWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_ExperienceBar;
    /*0x20*/ LocalizeString m_LevelNickname;
    /*0x28*/ LocalizeString m_TotalPower;
    /*0x30*/ LocalizeString m_Gold;
    /*0x38*/ LocalizeString m_Cash;
    /*0x40*/ PlayerProfileSlot m_customProfileSlot;

    /*0x117d7f0*/ TopStatusWindow();
    /*0x117cedc*/ PTShare.Define.SCurrency get_m_curCurreny();
    /*0x117cf5c*/ UserData get_m_curUserData();
    /*0x117cfec*/ SProfile get_m_curProfile();
    /*0x117d074*/ void Start();
    /*0x117d248*/ void OnEnable();
    /*0x117d420*/ void OnDisable();
    /*0x117d078*/ void InitalizeWindow();
    /*0x117d578*/ void SetLevelNickname(string _level, string _nickname);
    /*0x117d630*/ void SetExperience(long _exp, long _maxexp);
    /*0x117d61c*/ void SetTotalPower(string _total);
    /*0x117d6cc*/ void SetGold(string _gold);
    /*0x117d6e0*/ void SetCash(string _cash);
    /*0x117d6f4*/ void LoadProfile();
    /*0x117d7ec*/ void HandlerChagneEvent();
}

class GuildWarFormationSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ UnityEngine.GameObject m_goSelect;
    /*0x28*/ UnityEngine.GameObject m_goShade;
    /*0x30*/ UnityEngine.GameObject m_goLock;
    /*0x38*/ LocalizeString m_Title;
    /*0x40*/ System.Collections.Generic.List<GuildWarFormationDotEntity> m_liDotEntity;
    /*0x48*/ GuildWarFormationSelectPopup m_FormationSelectPopup;
    /*0x50*/ int m_nFormationIndex;
    /*0x58*/ System.Collections.Generic.Dictionary<int, int> dicCurrentTacticPosition;

    /*0x1116f38*/ GuildWarFormationSelectEntity();
    /*0x1116648*/ void Init(GuildWarFormationSelectPopup _FormationPopup, int _nFormationIndex, int _nCurrentFormationIndex);
    /*0x1116b44*/ void OnClickFormation(bool bSelectScroll);
    /*0x1116fb0*/ void <OnClickFormation>b__10_0(bool ok);
    /*0x1117084*/ void <OnClickFormation>b__10_1();
}

class ScrollContent_GuildWarFormationSelect : ScrollContent<GuildWarFormationSelectEntity>
{
    /*0xe19cdc*/ ScrollContent_GuildWarFormationSelect();
}

class FurnitureDismissSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_slot;
    /*0x20*/ UnityEngine.GameObject m_default;
    /*0x28*/ UnityEngine.GameObject m_select;
    /*0x30*/ PTShare.Define.SHousingObj m_data;
    /*0x38*/ System.Action<int> m_callBack;

    /*0x10a8440*/ FurnitureDismissSlot();
    /*0x10a82e0*/ void InitSlot(PTShare.Define.SHousingObj data, bool isSelect, System.Action<int> callBack);
    /*0x10a83d4*/ void OnClick();
}

class FurnitureDismissWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_notice;
    /*0x20*/ UnityEngine.GameObject m_notice2;
    /*0x28*/ UnityEngine.GameObject m_scrollParent;
    /*0x30*/ ScrollContent_FurnitureDismissSlot m_selectScrollContent;
    /*0x38*/ ScrollContent_FurnitureDismissSlot m_ownScrollContent;
    /*0x40*/ UnityEngine.UI.Button m_dismissBtn;
    /*0x48*/ LocalizeString m_selectBtnText;
    /*0x50*/ LocalizeString m_furnitureCountText;
    /*0x58*/ TabGroup m_tabGroup;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_furnitureList;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_selectList;
    /*0x70*/ FurnitureDismissWindow.TAB_TYPE m_currTab;

    /*0x10a9358*/ FurnitureDismissWindow();
    /*0x10a8448*/ void OnDisable();
    /*0x10a84f4*/ void InitializeWindow();
    /*0x10a8b64*/ void InitializeScroll();
    /*0x10a85fc*/ void UpdateData();
    /*0x10a8c5c*/ void UpdateScroll();
    /*0x10a8cdc*/ void HandleSelectContent(int nIndex, FurnitureDismissSlot slot);
    /*0x10a8de8*/ void HandleOwnContent(int nIndex, FurnitureDismissSlot slot);
    /*0x10a88d4*/ void RefreshPage();
    /*0x10a854c*/ void BindEvent();
    /*0x10a844c*/ void RemoveEvent();
    /*0x10a8f34*/ void OnClick_Store();
    /*0x10a8f38*/ void OnClickAll();
    /*0x10a903c*/ void OnClick_Dismiss();
    /*0x10a90ec*/ void OnClick_Help();
    /*0x10a9190*/ void HandleOnSelect(int objId);
    /*0x10a9328*/ void HandleChangeTab(int index);

    enum TAB_TYPE
    {
        ALL = 0,
        A = 1,
        S = 2,
        SS = 3,
        SSS = 4,
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ int objId;

        /*0x10a3410*/ <>c__DisplayClass27_0();
        /*0x10a3418*/ bool <HandleOnSelect>b__0(PTShare.Define.SHousingObj f);
    }
}

class HeroDismissSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_defaultSlot;
    /*0x50*/ UnityEngine.GameObject m_cacheSlot;

    /*0xf30e54*/ HeroDismissSlot();
    /*0xf30d9c*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
}

class HeroDismissSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_notice;
    /*0x20*/ UnityEngine.GameObject m_scrollParent;
    /*0x28*/ ScrollContent_HeroDismissSlot m_scrollContent;
    /*0x30*/ UnityEngine.UI.Button m_dismissBtn;
    /*0x38*/ HeroInventoryPage_Dismiss m_dismissPage;
    /*0x40*/ LocalizeString m_selectBtnText;

    /*0xf318dc*/ HeroDismissSubWindow();
    /*0xf30eb8*/ System.Collections.Generic.List<PTShare.Define.SHero> get_selectList();
    /*0xf30ed4*/ void InitializeWindow();
    /*0xf3115c*/ void InitializeScroll();
    /*0xf31214*/ void SetCountScroll();
    /*0xf3127c*/ void HandlerScrollContent(int nIndex, HeroDismissSlot slot);
    /*0xf30fe8*/ void RefreshPage();
    /*0xf313d8*/ void OnClick_Store();
    /*0xf313dc*/ void OnClick_Dismiss();
    /*0xf31484*/ void OnClick_AutoDismiss();
    /*0xf315e0*/ void OnClick_SelectAll();
    /*0xf3174c*/ void OnClick_Help();
    /*0xf317f0*/ void OnSelectHeroSlotCallback();
    /*0xf31814*/ void OnReleaseMaterialHeroSlotCallback(PTShare.Define.SHero hero);
    /*0xf318e4*/ void <OnClick_SelectAll>b__16_0(System.Collections.Generic.List<PropertyType> response);

    class <>c
    {
        static /*0x0*/ HeroDismissSubWindow.<> <>9;
        static /*0x8*/ System.Action<System.Collections.Generic.List<int>> <>9__15_0;

        static /*0x10584d0*/ <>c();
        /*0x1058530*/ <>c();
        /*0x1058538*/ void <OnClick_AutoDismiss>b__15_0(System.Collections.Generic.List<int> response);
    }
}

class HeroResetSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlotInventory m_HeroMaterialSlot;
    /*0x20*/ UnityEngine.UI.Button m_ResetButton;
    /*0x28*/ LocalizeString m_Price;
    /*0x30*/ LocalizeString m_ResetBtnText;
    /*0x38*/ LocalizeString m_ResetNotice;
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ AtlasImage m_PriceIcon;
    /*0x50*/ HeroInventoryPage_Reset m_HeroInvenPage;
    /*0x58*/ ItemRewardGroup m_RewardGroup;
    /*0x60*/ UnityEngine.GameObject m_Parent;
    /*0x68*/ HeroWagonType eWagonType;

    /*0x122d820*/ HeroResetSubWindow();
    /*0x122c83c*/ void OnEnable();
    /*0x122c930*/ void OnDisable();
    /*0x122c9ec*/ void InitializeWindow(HeroWagonType eType);
    /*0x122d07c*/ void SetTitle(HeroWagonType eType);
    /*0x122cc1c*/ void SetLocalizeButton(HeroWagonType eType);
    /*0x122cddc*/ void SetResetNotice(HeroWagonType eType);
    /*0x122cf9c*/ void SetPrice(HeroWagonType eType);
    /*0x122d23c*/ void SetActiveButton(bool _enable);
    /*0x122d25c*/ void SetActiveParent(bool _enable);
    /*0x122d274*/ void SetActiveResetNotice(bool _enable);
    /*0x122ca54*/ void SetView();
    /*0x122d2bc*/ void OnClick_Help();
    /*0x122d3bc*/ void OnClick_Reset();
    /*0x122d674*/ void HeroInventoryPage_Reset_OnSelectSlotEvent(bool _enable, PTShare.Define.SHero _hero);
    /*0x122d7b4*/ void CallbackHeroMaterialSlot(PTShare.Define.SHero _hero);
    /*0x122d7e8*/ void CallbackResetButton(int _heroid);
    /*0x122d828*/ void <OnClick_Reset>b__23_0(bool result);
}

class ResultPopup_WorldBoss : ResultPopupBase
{
    /*0x78*/ ItemRewardGroup m_exchagneItemGroup;
    /*0x80*/ UnityEngine.GameObject m_victory;
    /*0x88*/ LocalizeString m_totalDamageText;
    /*0x90*/ UnityEngine.UI.Slider m_slider;
    /*0x98*/ UnityEngine.GameObject[] m_loseObjects;
    /*0xa0*/ UnityEngine.GameObject[] m_winObjects;

    /*0x11a64b0*/ ResultPopup_WorldBoss();
    /*0x11a57b4*/ bool get_IsWin();
    /*0x11a5834*/ void OnCreate();
    /*0x11a5838*/ void OnEnter();
    /*0x11a583c*/ void OnStart();
    /*0x11a5840*/ void OnFinish();
    /*0x11a5844*/ void OnLeave();
    /*0x11a5848*/ void OnDelete();
    /*0x11a584c*/ void OnExit();
    /*0x11a58f0*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a6038*/ void InitializeWinReplay();
    /*0x11a5f64*/ void UpdateSubMenu();
    /*0x11a636c*/ void InitializeLose();
    /*0x11a6378*/ void OnNext();
    /*0x11a63f8*/ void OnRetry();
    /*0x11a644c*/ void OnShowGraph();
}

class WorldBossBanner : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_bannerObject;
    /*0x20*/ UnityEngine.GameObject m_bannerL;
    /*0x28*/ UnityEngine.GameObject m_bannerCenter;
    /*0x30*/ UnityEngine.GameObject m_bannerR;
    /*0x38*/ UnityEngine.CanvasGroup m_canvasGroup;

    /*0xe0a6e4*/ WorldBossBanner();
    /*0xe0a378*/ void OnEnable();
    /*0xe0a37c*/ void InitBanner();
}

class WorldBossEnable : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_target;
    /*0x20*/ ParticleBase m_particle;

    /*0xe0ab44*/ WorldBossEnable();
    /*0xe0a6ec*/ void OnEnable();
    /*0xe0a898*/ void OnDisable();
    /*0xe0a6f0*/ void Init();
    /*0xe0a98c*/ void BindEvent();
    /*0xe0a89c*/ void RemoveEvent();
}

class WorldBossIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_iconObject;
    /*0x20*/ WorldBossUICharacter m_character;
    /*0x28*/ LocalizeString m_grade;
    /*0x30*/ bool m_closeIcon;
    /*0x38*/ RedDotWorldBoss m_reddot;
    /*0x40*/ int m_index;

    /*0xe0b388*/ WorldBossIcon();
    /*0xe0ab4c*/ void InitIcon(int index, bool IsMove);
    /*0xe0ad74*/ void SetLocalPosition();
    /*0xe0adac*/ void SetCharacter();
    /*0xe0aea0*/ void SetGrade();
    /*0xe0afec*/ void OnClick();
    /*0xe0b304*/ void OnClickMission();
}

class WorldBossIconParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ WorldBossIcon m_worldBossButton;
    /*0x20*/ WorldBossIcon m_worldBossMissionButton;
    /*0x28*/ System.Collections.Generic.List<WorldBossIcon> m_iconList;

    /*0xe0ba18*/ WorldBossIconParent();
    /*0xe0b390*/ void OnEnable();
    /*0xe0b680*/ void OnDisable();
    /*0xe0b394*/ void Init();
    /*0xe0b774*/ void BindEvent();
    /*0xe0b684*/ void RemoveEvent();
    /*0xe0b86c*/ void HideAll();
}

class WorldBossInfo : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSkillSlot[] m_bossSkillSlots;
    /*0x20*/ LocalizeString m_bossLvText;
    /*0x28*/ LocalizeString m_bossNameText;
    /*0x30*/ LocalizeString m_bossInfoText;
    /*0x38*/ LocalizeString m_bossDamageText;
    /*0x40*/ LocalizeString m_bossCountText;
    /*0x48*/ UnityEngine.UI.Slider m_bossDamageSlider;
    /*0x50*/ ScrollContent_StageReward m_scrollContent;
    /*0x58*/ UnityEngine.UI.ScrollRect m_scrollInfoText;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_clearRewardList;

    /*0xe0cfac*/ WorldBossInfo();
    /*0xe0ba90*/ void OnDisable();
    /*0xe0bb68*/ void InitInfo();
    /*0xe0c588*/ void SetSkillList(int level);
    /*0xe0caac*/ void SetBossCount();
    /*0xe0cdec*/ int GetSkillLevel(TableData.TableData_Skilllv skillData, int tier);
    /*0xe0ccd4*/ void SetScrollContent();
    /*0xe0c3f4*/ void BindEvent();
    /*0xe0ba94*/ void RemoveEvent();
    /*0xe0cef0*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0xe0cd80*/ System.Collections.IEnumerator CoLateRefresh();

    class <>c
    {
        static /*0x0*/ WorldBossInfo.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__12_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__12_1;

        static /*0xd8d2ac*/ <>c();
        /*0xd8d30c*/ <>c();
        /*0xd8d314*/ int <SetSkillList>b__12_0(TableData.TableData_Skillbase x);
        /*0xd8d32c*/ TableData.TableData_Skillbase <SetSkillList>b__12_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
    }

    class <CoLateRefresh>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldBossInfo <>4__this;

        /*0xd8d378*/ <CoLateRefresh>d__19(int <>1__state);
        /*0xd8d3a4*/ void System.IDisposable.Dispose();
        /*0xd8d3a8*/ bool MoveNext();
        /*0xd8d468*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8d470*/ void System.Collections.IEnumerator.Reset();
        /*0xd8d4b0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldBossMissionPopup : GuiBase
{
    /*0x40*/ ScrollContent_TriggerMissionEntity m_scrollContent;
    /*0x48*/ int m_bossIndex;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> m_worldBossMissionList;

    /*0xe0e644*/ WorldBossMissionPopup();
    /*0xe0ded0*/ void OnCreate();
    /*0xe0ded4*/ void OnDelete();
    /*0xe0ded8*/ void OnEnter();
    /*0xe0dedc*/ void OnExit();
    /*0xe0df58*/ void OnFinish();
    /*0xe0df5c*/ void OnLeave();
    /*0xe0e0e0*/ void OnStart();
    /*0xe0e0e4*/ void InitPopup(int index);
    /*0xe0e218*/ void BindEvent();
    /*0xe0df60*/ void RemoveEvent();
    /*0xe0e3a0*/ void HandleRefresh();
    /*0xe0e3ac*/ void HandleScrollContent(int index, TriggerMissionEntity obj);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ WorldBossMissionPopup <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action <>9__2;

        /*0xd8dcc4*/ <>c__DisplayClass14_0();
        /*0xd8dccc*/ bool <HandleScrollContent>b__0(TableData.TableData_Worldbossmission data);
        /*0xd8ddbc*/ void <HandleScrollContent>b__1();
        /*0xd8df04*/ void <HandleScrollContent>b__2();
    }
}

class WorldBossPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_missionReddot;
    /*0x48*/ WorldBossInfo m_worldBossInfo;
    /*0x50*/ WorldBossUICharacter m_worldBossCharacter;
    /*0x58*/ LocalizeString m_exprireTimeText;
    /*0x60*/ UnityEngine.UI.Button m_battleButton;
    /*0x68*/ HeroManageTooltip m_tooltip;
    /*0x70*/ RedDotWorldBoss m_reddot;
    /*0x78*/ UnityEngine.Coroutine m_timer;

    /*0xe0f1c0*/ WorldBossPopup();
    /*0xe0e944*/ void OnCreate();
    /*0xe0e948*/ void OnDelete();
    /*0xe0e94c*/ void OnEnter();
    /*0xe0e950*/ void OnFinish();
    /*0xe0e954*/ void OnLeave();
    /*0xe0e958*/ void OnStart();
    /*0xe0e95c*/ void OnExit();
    /*0xe0e998*/ void InitPopup();
    /*0xe0ed60*/ void SetReddot(bool enable);
    /*0xe0ebb4*/ void SetButton();
    /*0xe0ecf4*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xe0ee04*/ void OnClickBoss();
    /*0xe0eebc*/ void OnClickHelp();
    /*0xe0ef60*/ void OnClickMission();
    /*0xe0f040*/ void OnClickBattle();

    class <CoUpdateTimer>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldBossPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;
        /*0x30*/ System.TimeSpan <timeSpan>5__3;
        /*0x38*/ System.TimeSpan <sec>5__4;

        /*0xd8e0cc*/ <CoUpdateTimer>d__18(int <>1__state);
        /*0xd8e0f8*/ void System.IDisposable.Dispose();
        /*0xd8e0fc*/ bool MoveNext();
        /*0xd8e3d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8e3e0*/ void System.Collections.IEnumerator.Reset();
        /*0xd8e420*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldBossUICharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_character;

    /*0xe0f9b4*/ WorldBossUICharacter();
    /*0xe0f4c8*/ void Init(int index, bool slotHide);
    /*0xe0afa4*/ void InitRequireShadow(int index, bool slotHide);
    /*0xe0f988*/ void InitShadow(int index, bool slotHide);
    /*0xe0f7b4*/ void SetFreeze(bool enable);
    /*0xe0f500*/ void SetBoss();
    /*0xe0f6e8*/ void HideSlot();
    /*0xe0f848*/ void SetBossShadow(bool isRequireCheck);
}

class WorldMapCloser : UnityEngine.MonoBehaviour
{
    /*0x18*/ int m_nChapterIndex;
    /*0x20*/ UnityEngine.UI.Image m_ParentImage;
    /*0x28*/ ShaderChanger_Dissolve m_Dissolve;

    /*0xe0fcb4*/ WorldMapCloser();
    /*0xe0f9bc*/ void Awake();
    /*0xe0fa54*/ void InitializeObject(int nCurrentChapter);
    /*0xe0fb8c*/ int GetChapter();
    /*0xe0fb94*/ void SetDissolve(System.Action onComplete);
    /*0xe0fc2c*/ System.Collections.IEnumerator CoDissolve(float _fSpeed, System.Action onComplete);

    class <CoDissolve>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fSpeed;
        /*0x28*/ WorldMapCloser <>4__this;
        /*0x30*/ System.Action onComplete;
        /*0x38*/ float <_fTime>5__2;

        /*0xd8e428*/ <CoDissolve>d__7(int <>1__state);
        /*0xd8e454*/ void System.IDisposable.Dispose();
        /*0xd8e458*/ bool MoveNext();
        /*0xd8e55c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8e564*/ void System.Collections.IEnumerator.Reset();
        /*0xd8e5a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AnimationTool
{
    static /*0x0*/ AnimationTool.AnimationShowType m_eStartType;
    static /*0x4*/ AnimationTool.AnimationShowType m_eEndType;
    static /*0x8*/ Spine.Unity.SkeletonGraphic m_Character;
    static /*0x10*/ bool[] m_arrSkillEnable;
    static /*0x18*/ AnimationTool.AnimationShowType m_eCurAnimation;
    static /*0x1c*/ int m_nAnimLoopCount;
    static /*0x20*/ int m_nCurAnimLoopCount;
    static /*0x24*/ bool m_bAnimComplete;

    static /*0xee02cc*/ AnimationTool();
    static /*0xedf5f0*/ void LinkCharacter(Spine.Unity.SkeletonGraphic _character, int _nUnitID);
    static /*0xedfa20*/ void CutLink();
    static /*0xedfba4*/ bool SetAnimation(AnimationTool.AnimationShowType _eAnimShowType, bool _bSameTypeIgnore, int _nLoopCount);
    static /*0xedfd68*/ bool ChangeAnimation(AnimationTool.AnimationShowType _eAnimShowType, int _nLoopCount);
    static /*0xee0164*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);

    enum AnimationShowType
    {
        IDLE = 0,
        MOVE = 1,
        WIN = 2,
        SKILL_SLOT0 = 3,
        SKILL_SLOT1 = 4,
        SKILL_SLOT2 = 5,
        SKILL_SLOT3 = 6,
        SKILL_SLOT4 = 7,
        RANDOM = 8,
    }
}

class AspectRatio
{
    static /*0xf76f9c*/ UnityEngine.Vector2 GetAspectRatio(int x, int y);
    static /*0xf77098*/ UnityEngine.Vector2 GetAspectRatio(UnityEngine.Vector2 xy);
    static /*0xf77184*/ UnityEngine.Vector2 GetAspectRatio(int x, int y, bool debug);
    static /*0xf77280*/ UnityEngine.Vector2 GetAspectRatio(UnityEngine.Vector2 xy, bool debug);
}

class CSVReader
{
    static /*0x0*/ string SPLIT_RE;
    static /*0x8*/ string LINE_SPLIT_RE;

    static /*0x1340d3c*/ CSVReader();
    static /*0x1340188*/ System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> Read(string file, bool useType);
    static /*0x1340230*/ System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> ReadString(string _data, bool useType);
    static /*0x13407a0*/ bool IsEmptyValues(string[] values);
    static /*0x1340834*/ System.Collections.Generic.Dictionary<string, string> ReadDic(UnityEngine.TextAsset data);
    static /*0x1340aa4*/ System.ValueTuple<System.String[], System.String[]> ReadColumnWithType(string _path);
    /*0x1340d34*/ CSVReader();
}

class CheatKeyWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.InputField m_InputField;
    /*0x20*/ UnityEngine.GameObject m_WindowParent;
    /*0x28*/ CheatMoveButton m_ButtonParent;
    /*0x30*/ System.Collections.Generic.List<UnityEngine.UI.InputField> m_liCheatField;
    /*0x38*/ System.Collections.Generic.List<LocalizeString> m_liCheatString;
    /*0x40*/ UnityEngine.UI.ScrollRect m_ScrollRect;
    /*0x48*/ UnityEngine.Transform m_HideParent;
    /*0x50*/ System.Collections.IEnumerator m_iePressUpdate;
    /*0x58*/ int m_nCount;
    /*0x60*/ System.Text.StringBuilder m_StringBuilder;

    /*0x10de9f0*/ CheatKeyWindow();
    /*0x10da818*/ UserData get_curUserData();
    /*0x10da8a8*/ void Awake();
    /*0x10daa5c*/ void OnEnable();
    /*0x10dae68*/ void OnDisable();
    /*0x10daff4*/ void OnExit();
    /*0x10db014*/ void InitializePopup();
    /*0x10db0b0*/ void OnConfirm();
    /*0x10de0f4*/ void HandlerResultCheat(string _result);
    /*0x10de85c*/ void HandlerLoginSuccessChecker();
    /*0x10de978*/ void HandleSubmitMessage(string _msg);
    /*0x10de90c*/ System.Collections.IEnumerator CoUpdate();
    /*0x10de7f0*/ System.Collections.IEnumerator CoScrollUpdate();
    /*0x10db068*/ bool IsAdminNotExit();

    class <CoUpdate>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CheatKeyWindow <>4__this;

        /*0x106ed98*/ <CoUpdate>d__21(int <>1__state);
        /*0x106edc4*/ void System.IDisposable.Dispose();
        /*0x106edc8*/ bool MoveNext();
        /*0x106eefc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106ef04*/ void System.Collections.IEnumerator.Reset();
        /*0x106ef44*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoScrollUpdate>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CheatKeyWindow <>4__this;

        /*0x106ec6c*/ <CoScrollUpdate>d__22(int <>1__state);
        /*0x106ec98*/ void System.IDisposable.Dispose();
        /*0x106ec9c*/ bool MoveNext();
        /*0x106ed48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106ed50*/ void System.Collections.IEnumerator.Reset();
        /*0x106ed90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CheatMoveButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEndDragHandler
{
    /*0x18*/ UnityEngine.RectTransform _transform;
    /*0x20*/ UnityEngine.RectTransform _canvasTransform;
    /*0x28*/ bool m_bIsDrag;
    /*0x30*/ System.Action OnClickEvent;

    /*0x10ded80*/ CheatMoveButton();
    /*0x10dea58*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10dea64*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10debc0*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10debc8*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10debe4*/ void Update();
}

class CacheWaitForSeconds : UnityEngine.CustomYieldInstruction
{
    /*0x10*/ float defaultTime;
    /*0x14*/ float time;

    /*0x1345908*/ CacheWaitForSeconds(float _time);
    /*0x13458ac*/ void set_SetTime(float value);
    /*0x13458b4*/ bool get_keepWaiting();
}

class CutSceneEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Sprite backgroundSprite;
    /*0x20*/ UnityEngine.Sprite characterSprite;
    /*0x28*/ Spine.Unity.SkeletonAnimation skeletonAnimation;
    /*0x30*/ string m_baseSkin;
    /*0x38*/ string m_backgroundBone;
    /*0x40*/ string m_characterBone;
    /*0x48*/ string m_offsetBone;
    /*0x50*/ CutSceneData cutData;

    /*0xf4ecec*/ CutSceneEntity();
    /*0xf4e638*/ Spine.Unity.SkeletonAnimation get_GetSkeleton();
    /*0xf4e690*/ void Initialize();
    /*0xf4ec54*/ void Initialize(int _nUnitID);
    /*0xf4ec90*/ void SetIndex(TableData.TableData_Unitbase _unit);
    /*0xf4ecac*/ void SetBackground(UnityEngine.Sprite _sprite);
    /*0xf4ecb4*/ void SetCharacter(UnityEngine.Sprite _sprite);
    /*0xf4ecbc*/ void SetCharacterOffsetX(float _x);
    /*0xf4eccc*/ void SetCharacterOffsetY(float _y);
    /*0xf4ecc4*/ void SetCharacterOffset(UnityEngine.Vector2 _vec);
    /*0xf4ecd4*/ void SetCharacterScaleX(float _x);
    /*0xf4ece4*/ void SetCharacterScaleY(float _y);
    /*0xf4ecdc*/ void SetCharacterScale(UnityEngine.Vector2 _vec);
    /*0xf4eae0*/ void SetAttachment(int _matIndex, Spine.Skin _skin, Spine.Skin.SkinEntry _entry, UnityEngine.Sprite _sprite);
    /*0xf4ebbc*/ void RefreshBone();
}

struct CutSceneData
{
    /*0x10*/ int id;
    /*0x14*/ float offestX;
    /*0x18*/ float offestY;
    /*0x1c*/ float scaleX;
    /*0x20*/ float scaleY;

    /*0xa85438*/ CutSceneData(int id);
}

class CutSceneLoader
{
    static /*0xf4ed44*/ CutSceneData LoadCutSceneData(int _index);
    /*0xf4efdc*/ CutSceneLoader();
}

class Debug
{
    static /*0x0*/ Debug.DebugType CurrentDebugType;
    static /*0x4*/ int DebugModeMaxTextLine;
    static /*0x8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<Debug.DebugInfo>> dicDebugLogList;

    static /*0xf5e618*/ Debug();
    static /*0xf5ddd8*/ void Break();
    static /*0xf5de34*/ void Log(object message);
    static /*0xf5df58*/ void Log(object message, UnityEngine.Object context);
    static /*0xf5e06c*/ void LogWarning(object message);
    static /*0xf5e190*/ void LogWarning(object message, UnityEngine.Object context);
    static /*0xf5e204*/ void LogError(object message);
    static /*0xf5e328*/ void LogError(object message, UnityEngine.Object context);
    static /*0xf5e39c*/ void DrawLine(UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color, float duration, bool depthTest);
    static /*0xf5e010*/ bool IsEnable();
    static /*0xf5e4b0*/ System.Collections.Generic.List<Debug.DebugInfo> GetCurrentDebugInfoList();
    static /*0xf5e550*/ void CleanDebugList(Debug.DebugType _eDebugType);

    enum DebugType
    {
        None = 0,
        Normal = 1,
        Warning = 2,
        Error = 3,
        Frame = 4,
        Memory = 5,
        End = 6,
    }

    struct DebugInfo
    {
        /*0x10*/ System.DateTime time;
        /*0x18*/ string text;

        /*0xa8a208*/ DebugInfo(string text);
    }
}

class DefineAccount
{
    static /*0x0*/ int MAX_FASTIDLE;

    static /*0xf5f854*/ DefineAccount();
    /*0xf5f84c*/ DefineAccount();
}

class DefineArtifact
{
    static int MAX_ARTIFACT_LEVEL = 5;

    /*0xf5f8a4*/ DefineArtifact();
}

struct BundleManifest
{
    /*0x10*/ string name;
    /*0x18*/ long bytes;
    /*0x20*/ string hash;
    /*0x28*/ string[] dependency;
    /*0x30*/ bool streamingasset;
    /*0x38*/ string path;

    /*0xa92e98*/ BundleManifest(string name, long bytes, string hash, string[] dependency, bool streamingasset);
    /*0xa92ea4*/ bool IsExistDependency();
}

class LoadedAssetBundle
{
    /*0x10*/ UnityEngine.AssetBundle assetBundle;
    /*0x18*/ int referencedCount;
    /*0x20*/ UsingAssetData usingData;
    /*0x28*/ string Name;

    /*0xfb1d08*/ LoadedAssetBundle(string n, UnityEngine.AssetBundle _asset_bundle);
    /*0xfb1d4c*/ void Unload();
    /*0xfb1ddc*/ void Finalize();
}

class UsingAssetData
{
    /*0x10*/ int refCount;
    /*0x18*/ string assetBundleName;
    /*0x20*/ LoadedAssetBundle loadedAssetBundle;

    /*0x10c9150*/ UsingAssetData();
}

enum AssetBundleSceneType
{
    None = 0,
    Battle = 1,
    Main = 2,
    Maze = 3,
    Dungeon = 4,
}

enum AssetBundleType
{
    Unknown = 0,
    GameBinData = 1,
    Localize = 2,
    Effect = 3,
    Scene = 4,
    Font = 5,
    Bgm = 6,
    Sfx_Unit = 7,
    Sfx_UI = 9,
    Sfx_MiniContents = 108,
    MapData = 8,
    Texture_Book = 10,
    Texture_Illust = 11,
    Texture_Illust_Monster = 49,
    Texture_Ingame = 12,
    Texture_Main = 13,
    Texture_Arena = 72,
    Texture_Dungeon = 105,
    Texture_Relation = 107,
    Texture_Minigame = 110,
    Prefab_Popup = 14,
    ui = 15,
    SkelectonData = 16,
    Atlas = 17,
    Chat = 18,
    Prefab_UI_Hero = 19,
    Prefab_UNIT = 20,
    Prefab_Projectile = 21,
    Prefab_Particle = 22,
    Prefab_Particle_BG = 100,
    Prefab_Particle_UI = 23,
    Prefab_WorldUI = 24,
    Prefab_UI_Tooltip = 25,
    Prefeb_UI_Arena = 50,
    Prefeb_UI_Battle = 51,
    Prefeb_UI_Debug = 52,
    Prefeb_UI_Equipment = 53,
    Prefeb_UI_Friend = 54,
    Prefeb_UI_Getcha = 55,
    Prefeb_UI_Graph = 56,
    Prefeb_UI_Guild = 57,
    Prefeb_UI_Inventory = 58,
    Prefeb_UI_Main = 59,
    Prefeb_UI_Maze = 60,
    Prefeb_UI_Notice = 61,
    Prefeb_UI_Option = 62,
    Prefeb_UI_Profile = 63,
    Prefeb_UI_Quest = 64,
    Prefeb_UI_Rankboard = 65,
    Prefeb_UI_Reddot = 66,
    Prefeb_UI_Resonating = 67,
    Prefeb_UI_Stage = 68,
    Prefeb_UI_Status = 69,
    Prefeb_UI_Tower = 70,
    Prefeb_UI_Troop = 71,
    Prefab_UI_Bounty = 101,
    Prefab_UI_Rungame = 102,
    Prefab_UI_Race = 103,
    Prefab_UI_Dungeon = 104,
    Prefab_UI_Relation = 106,
    Prefab_UI_Artifact = 109,
    Prefab_UI_Ads = 116,
    Tutorial = 26,
    AnimSyncData = 27,
    Voice_Tutorial = 28,
    Voice_UnitSkill = 29,
    Voice_UnitGeneral = 30,
    Prefab_UI_Common = 31,
    Prefab_UI_Mail = 32,
    Texture_HeroInfomation = 33,
    Prefab_UI_Campain = 34,
    ScriptableData = 35,
    Texture_Chapter = 36,
    Texture_Shop = 40,
    Texture_Event = 48,
    Texture_Housing = 115,
    Spine_UI_01 = 37,
    Spine_UI_02 = 42,
    Spine_UI_03 = 73,
    Spine_UI_04 = 111,
    Spine_UI_05 = 112,
    Spine_UI_ILLUST = 44,
    Prefab_CashShop = 38,
    LoadPage = 39,
    Prefab_ContentShop = 41,
    Prefab_UI_BattleBackground = 43,
    Prefab_UI_Event = 45,
    Prefab_UI_Pve = 113,
    Prefab_UI_Housing = 114,
    Skill_Animation = 46,
    CutSceneData = 47,
    End = 117,
    None = 0,
}

class ResExtension
{
    static string ASSET_BUNDLE = "pak";
    static string PREFAB = "prefab";
    static string SCENE = "unity";
    static string DB_SCRIPT = "bytes";
    static string UI_SPRITE = "png";
    static string SYNC_DATA = "bytes";
    static string JSON_DATA = "json";
    static string PROJECTILE_DATA = "bytes";
    static string SOUND_EFFECT = "wav";
    static string LOCALIZE_FILE = "bytes";
    static string TXT_DATA = "txt";
    static string BGM = "ogg";
    static string VOICE = "ogg";
    static string FONT = "ttf";
    static string ASSET = "asset";
    static string CSV_DATA = "csv";
    static string ATLAS = "spriteatlas";

    static /*0xf24b80*/ string GetAudioResExtension(AssetBundleType _eAssetBundleType);
    /*0xf24c04*/ ResExtension();
}

class AssetBundlePath
{
    static string ASSET_BUNDLE_PATH = "Pub_Assets/";
    static string ROOT_PATH = "Assets/Pub_Assets/";
    static string ANIM_SYNC_DATA = "Arts/Animation/SyncTool";
    static string ASSET_BUNDLE_SCENE_PATH = "Scenes";
    static string UNIT = "Arts/Animation/Spine";
    static string LOCALIZE = "Localize";
    static string FONT = "Font";
    static string SOUND_PATH = "Sounds/";
    static string BGM = "Sounds/BGM";
    static string SFX_UNIT = "Sounds/SFX/UnitSound";
    static string SFX_UI = "Sounds/SFX/UISound";
    static string SFX_MINICONTENTS = "Sounds/SFX/MiniContentsSound";
    static string VOICE_UNITSKILL = "Sounds/VOICE/UnitSkill";
    static string VOICE_UNITGENERAL = "Sounds/VOICE/UnitGeneral";
    static string VOICE_TUTORIAL = "Sounds/VOICE/Tutorial";
    static string SEQUENCE = "Sequence";
    static string MAPDATA = "MapData";
    static string ATLAS = "Atlas";
    static string TEXTURE_BOOK = "Texture/Hero/Book";
    static string TEXTURE_ILLUST = "Texture/Hero/Illust";
    static string TEXTURE_ILLUST_MONSTER = "Texture/Hero/illustMonster";
    static string TEXTURE_HEROINFOMATION = "Texture/Hero/Infomation";
    static string TEXTURE_INGAME = "Texture/Ingame";
    static string TEXTURE_MAIN = "Texture/Main";
    static string TEXTURE_CHAPTER = "Texture/Chapter";
    static string TEXTURE_SHOP = "Texture/Shop";
    static string TEXTURE_EVENT = "Texture/Event";
    static string TEXTURE_ARENA = "Texture/Arena";
    static string TEXTURE_DUNGEON = "Texture/Dungeon";
    static string TEXTURE_RELATION = "Texture/Relation";
    static string TEXTURE_MINIGAME = "Texture/Minigame";
    static string TEXTURE_HOUSING = "Texture/Housing";
    static string PREFAB_POPUP = "Prefabs/UI/Popup";
    static string PREFAB_UI_CAMPAIN = "Prefabs/UI/Campain";
    static string PREFAB_UI_COMMON = "Prefabs/UI/Common";
    static string PREFAB_UI_CHAT = "Prefabs/UI/Chatting";
    static string PREFAB_UI_HERO = "Prefabs/UI/Hero";
    static string PREFAB_UI_MAIL = "Prefabs/UI/Mail";
    static string PREFAB_UI_TOOLTIP = "Prefabs/UI/Tooltip";
    static string PREFEB_UI_ARENA = "Prefabs/UI/Arena";
    static string PREFEB_UI_BATTLE = "Prefabs/UI/Battle";
    static string PREFEB_UI_DEBUG = "Prefabs/UI/Debug";
    static string PREFEB_UI_EQUIPMENT = "Prefabs/UI/Equipment";
    static string PREFEB_UI_FRIEND = "Prefabs/UI/Friend";
    static string PREFEB_UI_GETCHA = "Prefabs/UI/Getcha";
    static string PREFEB_UI_GRAPH = "Prefabs/UI/Graph";
    static string PREFEB_UI_GUILD = "Prefabs/UI/Guild";
    static string PREFEB_UI_INVENTORY = "Prefabs/UI/Inventory";
    static string PREFEB_UI_MAIN = "Prefabs/UI/Main";
    static string PREFEB_UI_MAZE = "Prefabs/UI/Maze";
    static string PREFEB_UI_NOTICE = "Prefabs/UI/Notice";
    static string PREFEB_UI_OPTION = "Prefabs/UI/Option";
    static string PREFEB_UI_PROFILE = "Prefabs/UI/Profile";
    static string PREFEB_UI_QUEST = "Prefabs/UI/Quest";
    static string PREFEB_UI_RANKBOARD = "Prefabs/UI/RankBoard";
    static string PREFEB_UI_REDDOT = "Prefabs/UI/RedDot";
    static string PREFEB_UI_RESONATING = "Prefabs/UI/Resonating";
    static string PREFEB_UI_STAGE = "Prefabs/UI/Stage";
    static string PREFEB_UI_STATUS = "Prefabs/UI/Status";
    static string PREFEB_UI_TOWER = "Prefabs/UI/Tower";
    static string PREFEB_UI_TROOP = "Prefabs/UI/Troop";
    static string PREFEB_UI_BOUNTY = "Prefabs/UI/Bounty";
    static string PREFAB_UI_RUNGAME = "Prefabs/UI/Rungame";
    static string PREFAB_UI_RACE = "Prefabs/UI/Race";
    static string PREFAB_UI_DUNGEON = "Prefabs/UI/Dungeon";
    static string PREFAB_UI_RELATION = "Prefabs/UI/Relation";
    static string PREFAB_UI_ARTIFACT = "Prefabs/UI/Artifact";
    static string PREFAB_UI_ADS = "Prefabs/UI/Ads";
    static string TUTORIAL = "Tutorial";
    static string PREFAB_INGAME_UNIT = "Prefabs/InGame/Unit";
    static string PREFAB_INGAME_PROJECTILE = "Prefabs/InGame/Projectile";
    static string PREFAB_INGAME_WORLDUI = "Prefabs/InGame/WorldUI";
    static string PREFAB_INGAME_PARTICLE = "Arts/Effect/effect";
    static string PREFAB_INGAME_PARTICLE_BG = "Arts/Effect/effect_bg";
    static string PREFAB_INGAME_PARTICLE_UI = "Arts/Effect/effect_ui";
    static string SPINE_UI_01 = "Arts/ui_01";
    static string SPINE_UI_02 = "Arts/ui_02";
    static string SPINE_UI_03 = "Arts/ui_03";
    static string SPINE_UI_04 = "Arts/ui_04";
    static string SPINE_UI_05 = "Arts/ui_05";
    static string Spine_UI_ILLUST = "Arts/ui_illust";
    static string SCRIPTABLEDATA = "ScriptableData";
    static string PREFAB_UI_CASHSHOP = "Prefabs/UI/CashShop";
    static string PREFAB_UI_CONTENTSHOP = "Prefabs/UI/ContentShop";
    static string PREFAB_UI_BATTLEBACKGROUND = "Prefabs/UI/BattleBackground";
    static string PREFAB_UI_EVENT = "Prefabs/UI/Event";
    static string PREFAB_UI_PVE = "Prefabs/UI/Pve";
    static string PREFAB_UI_Housing = "Prefabs/UI/Housing";
    static string LOAD_PAGE = "Prefabs/LoadPage";
    static string SKILLANIMATION = "Arts/Animation/SkillAnimation";
    static string CUTSCENEDATA = "CutSceneData";

    static /*0xf78994*/ string GetPath(AssetBundleSceneType type);
    static /*0xf78480*/ string GetPath(AssetBundleType type);
    /*0xf7a3c8*/ AssetBundlePath();
}

class DefineAudio
{
    static float DEFAULT_BGM = 0.75;
    static float DEFAULT_SFX = 1;
    static string BGM_LOBBY = "Lobby";
    static string BGM_BATTLE = "Battle";
    static string BGM_GUILDBATTLE = "GuildWar";
    static string BGM_TUTORIAL = "Tutorial";
    static string BGM_DUNGEON = "Dungeon";
    static string BGM_RACE = "Race";
    static string BGM_WORLDBOSS = "WorldBoss";
    static string BGM_PVERANK = "PvERanking";
    static string BGM_STAGE_CLEAR = "Stage_Clear";
    static string GUILDBATTLE_DOUBLEKILL = "DoubleKill";
    static string GUILDBATTLE_TRIPLEKILL = "TripleKill";
    static string GUILDBATTLE_QUADRAKILL = "QuadraKill";
    static string GUILDBATTLE_PENTAKILL = "PentaKill";
    static string GUILDBATTLE_LEGENDARYKILL = "LegendaryKill";
    static string BREEZE_ULT_SONG = "50_ULT_SONG";
    static string WORLDBOSS_1_APPEAR_1 = "WORLDBOSS_1_APPEAR_1";
    static string WORLDBOSS_1_APPEAR_PRODUCTION_1 = "WORLDBOSS_1_APPEAR_PRODUCTION_1";
    static string WORLDBOSS_1_DEFEAT_1 = "WORLDBOSS_1_DEFEAT_1";
    static string WORLDBOSS_1_WIN_1 = "WORLDBOSS_1_WIN_1";
    static string WORLDBOSS_1_ULT_1 = "WORLDBOSS_1_ULT_1";
    static string WORLDBOSS_ULT_NIDDLE_EXP = "Hit_Expls";
    static /*0x0*/ int THEME_INDEX;

    static /*0xf5fbe8*/ DefineAudio();
    static /*0xf5f8ac*/ int GetThemeIndex();
    static /*0xf5fb2c*/ string GetBGM();
    /*0xf5fbe0*/ DefineAudio();
}

class DefineCashShop
{
    static /*0x0*/ int PUMPKIN_CATEGORY_INDEX;
    static /*0x4*/ int ADVENCED_CATEGORY_INDEX;
    static /*0x8*/ int OWL_CATEGORY_INDEX;
    static /*0xc*/ int NONE_LIMIT;
    static /*0x10*/ int PurchaseBillingType;
    static /*0x18*/ string BANNER_RESET_TIME_TEXT_OBJECT_NAME;
    static /*0x20*/ string CASH_SHOP_PRODUCT_PREFAB;
    static /*0x28*/ string DAILY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x30*/ string DAILY_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x38*/ string WEEKLY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x40*/ string WEEKLY_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x48*/ string MONTHLY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x50*/ string BEGINNER_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x58*/ string MONTHLY_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x60*/ string CASH_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x68*/ string LIMITED_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x70*/ string LIMITED_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x78*/ string HERO_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x80*/ string HERO_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x88*/ string SUBSCRIPTION_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x90*/ string SUBSCRIPTION_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x98*/ string PREMIUM_SUBSCRIPTION_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xa0*/ string PREMIUM_SUBSCRIPTION_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xa8*/ string PREMIUM_SUBSCRIPTION_SHOP_PACKAGE_BG_IMAGE_KEY2;
    static /*0xb0*/ string PREMIUM_SUBSCRIPTION_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY2;
    static /*0xb8*/ string GROW_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xc0*/ string GROW_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xc8*/ string SKEIN_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xd0*/ string SKEIN_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xd8*/ string BANNER_DAILY_PREFAB;
    static /*0xe0*/ string BANNER_WEEKLY_PREFAB;
    static /*0xe8*/ string BANNER_MONTHRY_PREFAB;
    static /*0xf0*/ string BANNER_CASH_PREFAB;
    static /*0xf8*/ string BANNER_LIMITED_PREFAB;
    static /*0x100*/ string BANNER_HERO_PREFAB;
    static /*0x108*/ string BANNER_BEGINNER_PREFAB;
    static /*0x110*/ string BANNER_GROWTH_PREFAB;
    static /*0x118*/ string BANNER_SKEIN_PREFAB;
    static /*0x120*/ string BANNER_SKIN_PREFAB;
    static /*0x128*/ string BADGE_TYPE_ADD;
    static /*0x130*/ string PREMIUM_SUBSCRIPTION_SHOP_PACKAGE_ID;
    static /*0x138*/ System.Collections.Generic.Dictionary<DefineCashShop.CashShopTabType, string> EnableBGImageKeys;
    static /*0x140*/ System.Collections.Generic.Dictionary<DefineCashShop.CashShopTabType, string> DisableBGImageKeys;

    static /*0xf616b0*/ DefineCashShop();
    static /*0xf6011c*/ bool get_SHOW_VIP();
    static /*0xf60194*/ DefineCashShop.CashShopCategoryType ConvertTabTypeToCategoryType(DefineCashShop.CashShopTabType tabType);
    static /*0xf601b4*/ void Purchase(string packageId, System.Action<string, int, int> callBack, System.Action failedCallBack, string selectarg);
    static /*0xf603cc*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopdaily shopData);
    static /*0xf60508*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopweekly shopData);
    static /*0xf6062c*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopmonthly shopData);
    static /*0xf60750*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopstar shopData);
    static /*0xf608cc*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshophero shopData);
    static /*0xf609f0*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopsubscription shopData);
    static /*0xf60b1c*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshoplimit shopData);
    static /*0xf61244*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopbeginner shopData);
    static /*0xf61350*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopskinpiece shopData);
    static /*0xf614b8*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopskin shopData);
    static /*0xf61628*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopquestreward shopData);
    static /*0xf61110*/ void <ConvertShopPackage>g__SetDateTime|60_1(ref System.DateTime start, ref System.DateTime end, TableData.TableData_Packagetime table);
    /*0xf616a8*/ DefineCashShop();

    enum CashShopCategoryType
    {
        Pumpkin = 0,
        Advenced = 1,
        Owl = 2,
        Skin = 3,
        Null = 4,
    }

    enum SpecialSellerType
    {
        COMMON = 0,
        SELECT = 1,
    }

    enum CashShopTabType
    {
        Daily = 0,
        Weekly = 1,
        Monthly = 2,
        Cash = 3,
        STAR = 3,
        Limited = 4,
        Subscription = 5,
        Hero = 6,
        Beginner = 7,
        Growth = 8,
        Special = 9,
        Skein = 10,
        Skin = 11,
        Null = 12,
    }

    enum CashShopDrawType
    {
        Draw1HN = 0,
        Draw1N = 1,
        Draw2N = 2,
        Draw3N = 3,
        Draw2L = 4,
        Draw3L = 5,
        DrawGrow1N = 6,
        Null = 7,
    }

    enum PRODUCT_TYPE
    {
        NORMAL = 0,
        FURNITURE = 1,
    }

    class CashShopProductItemData
    {
        /*0x10*/ string type;
        /*0x18*/ string key;
        /*0x20*/ int amount;

        /*0x107715c*/ CashShopProductItemData(string type, string key, int amount);
    }

    class CashShopPackageData
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ string FirstReset;
        /*0x60*/ int PurchaseCount;
        /*0x64*/ int PackagePrice;
        /*0x68*/ string PackageBadge;
        /*0x70*/ int BadgePercent;
        /*0x78*/ string FirstPackageProduct;
        /*0x80*/ string FirstBonusPackageProduct;
        /*0x88*/ string PackageProduct;
        /*0x90*/ string BonusPackageProduct;
        /*0x98*/ int SubscriptionDay;
        /*0xa0*/ string SubscriptionPoduct;
        /*0xa8*/ string PackageDesc;
        /*0xb0*/ string PackageSubDesc;
        /*0xb8*/ string PackageImg;
        /*0xc0*/ int VipPoint;
        /*0xc4*/ int SubScriptionLeftCount;
        /*0xc8*/ string Location;
        /*0xd0*/ string ProductType;
        /*0xd8*/ string BannerBGImageEnable;
        /*0xe0*/ string BannerBGImageDisable;

        /*0x1077154*/ CashShopPackageData();
    }

    class <>c__DisplayClass52_0
    {
        /*0x10*/ string packageId;
        /*0x18*/ System.Action<string, int, int> callBack;
        /*0x20*/ string packageKey;
        /*0x28*/ System.Action failedCallBack;
        /*0x30*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__2;
        /*0x38*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__5;
        /*0x40*/ System.Action<UnityEngine.Purchasing.Product> <>9__3;
        /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__4;

        /*0x10769ec*/ <>c__DisplayClass52_0();
        /*0x10769f4*/ void <Purchase>b__0(ServerProtocol.ResCashShopCheck _response);
        /*0x1076d44*/ void <Purchase>b__2(ServerProtocol.ResCashShopPurchase _resData);
        /*0x1076dc8*/ void <Purchase>b__3(UnityEngine.Purchasing.Product result);
        /*0x1077038*/ void <Purchase>b__5(ServerProtocol.ResCashShopPurchase res);
        /*0x10770b4*/ void <Purchase>b__4(PUBSDK.DefinePubSDK.PubProcessError failed);
        /*0x10770c8*/ void <Purchase>b__1(int _failed, string args);
    }

    class <>c
    {
        static /*0x0*/ DefineCashShop.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Packagetime> <>9__60_0;

        static /*0x1076964*/ <>c();
        /*0x10769c4*/ <>c();
        /*0x10769cc*/ bool <ConvertShopPackage>b__60_0(TableData.TableData_Packagetime f);
    }
}

class DefineColor
{
    /*0x11e40e0*/ DefineColor();
}

class DefineContentShop
{
    /*0x11e40e8*/ DefineContentShop();

    enum ContentShopCategoryType
    {
        NORMAL = 0,
        GUILD = 1,
        MAZE = 2,
        ARENA = 3,
        DISMISS = 4,
        PVERANKING = 5,
        NULL = 6,
    }

    enum ResetType
    {
        DAILY = 0,
        WEEKLY = 1,
        MONTHLY = 2,
        ROLLING = 3,
        FADE = 4,
        NULL = 5,
    }

    class ContentPackageShopData
    {
        /*0x10*/ int index;
        /*0x14*/ int subidx;
        /*0x18*/ int purchaseCount;
        /*0x1c*/ PTShare.Define.Currency payType;
        /*0x20*/ DefineContentShop.ContentShopCategoryType contentShopCategoryType;
        /*0x28*/ string packageBadge;
        /*0x30*/ int badgePercent;
        /*0x34*/ PTShare.Define.Wealth wealth;
        /*0x38*/ int tableId;
        /*0x3c*/ int itemCount;
        /*0x40*/ int price;

        /*0x1077200*/ ContentPackageShopData(int index, int subidx, int purchaseCount, PTShare.Define.Currency payType, DefineContentShop.ContentShopCategoryType contentShopCategoryType, string packageBadge, int badgePercent, PTShare.Define.Wealth wealth, int tableId, int itemCount, int price);
    }
}

class DefineEditorUtils
{
    static /*0x0*/ bool IsCampaignPathMakerOpened;

    static /*0x11e4218*/ DefineEditorUtils();
    /*0x11e4210*/ DefineEditorUtils();
}

enum FriendSortType
{
    NONE = 0,
    STATUS = 1,
    NICKNAME = 2,
}

class CFriendSort_ConnectionStatus : System.Collections.Generic.IComparer<PTShare.Define.SFriend>
{
    /*0x133df88*/ CFriendSort_ConnectionStatus();
    /*0x133df2c*/ int Compare(PTShare.Define.SFriend left, PTShare.Define.SFriend right);
}

class CFriendSort_Name : System.Collections.Generic.IComparer<PTShare.Define.SFriend>
{
    /*0x133dfbc*/ CFriendSort_Name();
    /*0x133df90*/ int Compare(PTShare.Define.SFriend left, PTShare.Define.SFriend right);
}

enum MeasureType
{
    None = 0,
    K = 1,
    M = 2,
    B = 3,
    T = 4,
    Q = 5,
    Max = 6,
}

enum PropertyType
{
    None = 0,
    Fire = 1,
    Wind = 2,
    Natrue = 3,
    Water = 4,
    Light = 5,
    Dark = 6,
    End = 7,
}

enum UnitGradeType
{
    None = 0,
    C = 1,
    B = 2,
    Bplus = 3,
    A = 4,
    Aplus = 5,
    S = 6,
    Splus = 7,
    SS = 8,
    SSplus = 9,
    SSS = 10,
    End = 11,
}

enum EquipSubType
{
    NONE = 0,
    ARTIFACT = 1,
    SIGNATURE = 2,
    HEAVYWEAPON = 3,
    LIGHTWEAPON = 4,
    STAFF = 5,
    HELM = 6,
    HOOD = 7,
    HAT = 8,
    HEAVYARMOR = 9,
    LIGHTARMOR = 10,
    CLOTHARMOR = 11,
    HEAVYBOOTS = 12,
    LIGHTBOOTS = 13,
    CLOTHBOOTS = 14,
    End = 15,
}

enum UnitClassType
{
    NONE = 0,
    KNIGHT = 1,
    MAGE = 2,
    SUPPORTER = 3,
    RANGER = 4,
    WARRIOR = 5,
}

enum UnitType
{
    NONE = 0,
    HERO = 1,
    MONSTER = 2,
    BOSS = 3,
    HERO_SKIN = 4,
}

enum UnitSkillLevel
{
    None = 0,
    SkillLV1 = 1,
    SkillLV2 = 2,
    SkillLV3 = 3,
    SkillLV4 = 4,
    End = 5,
}

enum OrganizationBuffType
{
    None = 0,
    Common3 = 1,
    Common2x3 = 2,
    Common4 = 3,
    Common5 = 4,
    Common3D1 = 5,
    Common3D2 = 6,
    Common4D1 = 7,
    Dark1 = 8,
    Dark2 = 9,
    Dark3 = 10,
    Dark4 = 11,
    Dark5 = 12,
}

enum PlayerType
{
    PLAYER = 0,
    FRIEND = 1,
}

enum PromoteType
{
    NONE = 0,
    SameUnit = 1,
    SameFaction = 2,
}

enum ItemRewardBoxType
{
    None = 0,
    Gold = 1,
    Cash = 2,
    HeroExp = 3,
    UserExp = 4,
    Dismiss = 5,
    Fship = 6,
    Crystal = 7,
    Item = 8,
    Equip = 9,
    Hero = 10,
    Skin = 11,
    HeroCard = 12,
    VipPoint = 13,
    MazeCoin = 14,
    RoyalExp = 15,
    BattleExp = 16,
    GuildCoin = 17,
    ArenaCoin = 18,
    WorldCoin = 19,
    DungeonCoin = 20,
    Artifact = 21,
    DungeonKey = 22,
    Frame = 23,
    PveCoin1 = 24,
    PveCoin2 = 25,
    HousingObj = 26,
    End = 27,
}

enum GachaFactionType
{
    None = 0,
    Random = 1,
    Rotation = 2,
    Select = 3,
    End = 4,
}

enum ItemInventoryType
{
    ALL = 0,
    EQUIPMENT = 1,
    ITEM = 2,
    FURNITURE = 3,
    End = 4,
}

enum ItemType
{
    None = 0,
    Consumable = 1,
    Choiceitem = 2,
    Choicehero = 3,
    Fixed = 4,
    Timer = 5,
    Random = 6,
    Recover = 7,
    Enhance = 8,
    SoulStone = 9,
    Equipment = 10,
    Artifact = 11,
    Event = 12,
    Ability = 13,
    End = 14,
}

enum QuestContentType
{
    None = 0,
    RankingBoard = 1,
    Quest = 2,
    End = 3,
}

enum QuestTargetType
{
    SERVER = 0,
    PERSONAL = 1,
}

enum QuestGroupType
{
    None = 0,
    STAGE = 1,
    TOWER = 2,
    FIRE = 3,
    WIND = 4,
    NATURE = 5,
    WATER = 6,
    DAILY = 7,
    WEEKLY = 8,
    MAIN = 9,
    DAILYEVENT = 10,
    HARDMODE = 11,
    End = 12,
}

enum QuestAdvanceType
{
    NONE = 0,
    ChapterClear = 1,
    PropertyPoint = 2,
    StageClear = 3,
    Gacha = 4,
    StageIdle = 5,
    StageTry = 6,
    HeroUpgrade = 7,
    EquipUpgrade = 8,
    Friend = 9,
    PrizeBoard = 10,
    Buy = 11,
    Arena = 12,
    HeroGet = 13,
    Level = 14,
    GetItem = 15,
    Move = 16,
    Labyrinth = 17,
    Resonance = 18,
    SpiritTowerClear = 19,
    HardMode = 20,
    End = 21,
}

enum ArenaType
{
    None = 0,
    Arena = 1,
    GuildWar = 2,
    End = 3,
}

enum ArenaRankType
{
    None = 0,
    Rank = 1,
    Range = 2,
    End = 3,
}

enum ProfileSkinType
{
    ICON = 0,
    PROFILE = 1,
    BACKGROUND = 2,
    GUILD = 3,
    End = 4,
}

enum TrainningStatusType
{
    Status = 0,
    Auto = 1,
}

interface IReward
{
    long get_Amount();
    void set_Amount(long value);
}

struct Rewards
{
    /*0x10*/ PTShare.Define.Wealth wealth;
    /*0x18*/ CURRENCY_Rewards Currency;
    /*0x28*/ ITEM_Rewards Item;
    /*0x38*/ HERO_Rewards Hero;
    /*0x50*/ EQUIP_Rewards Equip;
    /*0x60*/ USEREXP_Rewards UserExp;
    /*0x68*/ VIPPOINT_Rewards VipPoint;
    /*0x70*/ RESETPOINT_Rewards ResetPoint;
    /*0x80*/ ARTIFACT_Rewards Artifact;
    /*0x98*/ SKIN_Rewards Skin;
    /*0xa8*/ DUNGEONITEM_Rewards DungeonItem;
    /*0xb8*/ FRAME_Rewards Frame;
    /*0xc8*/ FURNITURE_Rewards Furniture;

    static /*0x11aa4e0*/ System.ValueTuple<Rewards, bool> op_Addition(Rewards a, Rewards b);
    static /*0x11aa748*/ Rewards op_Addition(Rewards a, int b);
    static /*0x11aa7c4*/ Rewards op_Multiply(Rewards a, int b);
    static /*0x11aa844*/ Rewards op_Multiply(Rewards a, long b);
}

struct ITEM_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Item tItem;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa82740*/ long get_Amount();
    /*0xa82748*/ void set_Amount(long value);
}

struct HERO_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Unitbase tUnit;
    /*0x18*/ long <Amount>k__BackingField;
    /*0x20*/ int grade;

    /*0xa8a788*/ long get_Amount();
    /*0xa8a790*/ void set_Amount(long value);
    /*0xa8a798*/ int get_Grade();
    /*0xa8a7c4*/ void set_Grade(int value);
}

struct EQUIP_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Equipment tEquipment;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xaa2c44*/ long get_Amount();
    /*0xaa2c4c*/ void set_Amount(long value);
}

struct CURRENCY_Rewards : IReward
{
    /*0x10*/ PTShare.Define.Currency CurrencyType;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa92ec4*/ long get_Amount();
    /*0xa92ecc*/ void set_Amount(long value);
}

struct USEREXP_Rewards : IReward
{
    /*0x10*/ long <Amount>k__BackingField;

    /*0xa8a31c*/ long get_Amount();
    /*0xa8a324*/ void set_Amount(long value);
}

struct VIPPOINT_Rewards : IReward
{
    /*0x10*/ long <Amount>k__BackingField;

    /*0xa8a530*/ long get_Amount();
    /*0xa8a538*/ void set_Amount(long value);
}

struct RESETPOINT_Rewards : IReward
{
    /*0x10*/ PTShare.Define.ResetPointType PointType;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8d03c*/ long get_Amount();
    /*0xa8d044*/ void set_Amount(long value);
}

struct ARTIFACT_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Artifact tArtifact;
    /*0x18*/ TableData.TableData_Equipment tEquipment;
    /*0x20*/ long <Amount>k__BackingField;

    /*0xa8d02c*/ long get_Amount();
    /*0xa8d034*/ void set_Amount(long value);
}

struct SKIN_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Skinbasic tSkin;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8e39c*/ long get_Amount();
    /*0xa8e3a4*/ void set_Amount(long value);
}

struct FRAME_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Profileskin tFrame;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8cd60*/ long get_Amount();
    /*0xa8cd68*/ void set_Amount(long value);
}

struct DUNGEONITEM_Rewards : IReward
{
    /*0x10*/ int id;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8544c*/ long get_Amount();
    /*0xa85454*/ void set_Amount(long value);
}

struct FURNITURE_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Furniture tFurniture;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8cdac*/ long get_Amount();
    /*0xa8cdb4*/ void set_Amount(long value);
}

struct SUnitPreview
{
    /*0x10*/ int tableID;
    /*0x14*/ int skinID;
    /*0x18*/ int grade;
    /*0x1c*/ float size;
    /*0x20*/ bool blind;

    /*0xa8e884*/ SUnitPreview(int _nTableID, int _nSkinID, int _nGrade, float _fSize, bool _bBlind);
    /*0xa8e89c*/ int GetSkinID();
    /*0xa8e8b4*/ void SetBlind(bool enable);
}

enum HEROGRADE
{
    NONE = 0,
    C = 1,
    B = 2,
    B_Plus = 3,
    A = 4,
    A_Plus = 5,
    S = 6,
    S_Plus = 7,
    SS = 8,
    SS_Plus = 9,
    SSS = 10,
    S1 = 11,
    S2 = 12,
    S3 = 13,
    S4 = 14,
    S5 = 15,
    S6 = 16,
    S7 = 17,
    S8 = 18,
    S9 = 19,
    S10 = 20,
    S11 = 21,
    S12 = 22,
    S13 = 23,
    S14 = 24,
    S15 = 25,
}

class RecommendPromote
{
    /*0x10*/ PTShare.Define.SHero MainHero;
    /*0x18*/ System.Collections.Generic.List<PTShare.Define.SHero> FeedHeros;
    /*0x20*/ bool isSelect;

    /*0x11c352c*/ RecommendPromote();
    /*0x11c33ac*/ RecommendPromote Clone();

    class <>c
    {
        static /*0x0*/ RecommendPromote.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SHero, PTShare.Define.SHero> <>9__3_0;

        static /*0xf981c0*/ <>c();
        /*0xf98220*/ <>c();
        /*0xf98228*/ PTShare.Define.SHero <Clone>b__3_0(PTShare.Define.SHero s);
    }
}

class UnitSpawnInfo
{
    /*0x10*/ int unitID;
    /*0x14*/ int skinID;
    /*0x18*/ int unitLV;
    /*0x1c*/ int unitGrade;
    /*0x20*/ int unitTier;
    /*0x24*/ int buffID;
    /*0x28*/ int signatureLV;
    /*0x2c*/ float hpRatio;
    /*0x30*/ float mpRatio;
    /*0x34*/ float multMPR;
    /*0x38*/ float addHP;
    /*0x3c*/ float addDMG;
    /*0x40*/ float size;
    /*0x44*/ bool isBoss;
    /*0x45*/ bool isBlind;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SEquip> equipList;
    /*0x50*/ System.Collections.Generic.List<int> abilityList;
    /*0x58*/ PTShare.Define.SArtifact artifact;

    static /*0x10c2dd0*/ System.Collections.Generic.List<PTShare.Define.SEquip> <.ctor>g__ChangeToSEquip|24_0(System.Collections.Generic.List<PTShare.Define.SVerifyEquip> _equips);
    /*0x10c249c*/ UnitSpawnInfo(int _unitID, int _unitLv, int _unitGrade, int _unitTier, int _signature, int _buffId, float _hpRatio, float _mpRatio, float _multiMRP, float _addhp, float _addDMG, float _size, bool _isBoss, PTShare.Define.SArtifact _artifact, System.Collections.Generic.List<PTShare.Define.SEquip> _lisSEquip);
    /*0x10c2658*/ UnitSpawnInfo(PTShare.Define.SHero _sHero);
    /*0x10c27f0*/ UnitSpawnInfo(PTShare.Define.SGuildWarHero _sHero);
    /*0x10c2988*/ UnitSpawnInfo(PTShare.Define.SBattleHero _sBattleHero, bool _bBlind);
    /*0x10c2b4c*/ UnitSpawnInfo(PTShare.Define.SVerifyHero _sVerifyHero);
    /*0x10c2f08*/ UnitSpawnInfo(PTShare.Define.SConditionHero _sConditionHero);
    /*0x10c2484*/ int get_GetSkinID();
    /*0x10c31b8*/ void SetEquip(System.Collections.Generic.List<PTShare.Define.SEquip> _lisEquip);
    /*0x10c32f4*/ PTShare.Define.SHero GetSHero();
}

class DefineHero
{
    static int MAX_HEROCOUNT = 5;
    static int MAX_HEROCOUNT_WORLDBOSS = 10;
    static int MAX_HEROCOUNT_PVE_RANKING = 10;
    static int MAX_HEROCOUNT_GUILDBATTLE_SLOT = 27;
    static int MAX_HEROCOUNT_GUILDBATTLE = 10;
    static int MAX_FACTION = 6;

    /*0x11e4edc*/ DefineHero();
}

class PromoteSHero
{
    /*0x10*/ bool isEnable;
    /*0x18*/ PTShare.Define.SHero sHero;

    /*0x1010d50*/ PromoteSHero(bool _isEnable, PTShare.Define.SHero _shero);
}

class HeroPromoteCompare_Sort : System.Collections.Generic.IComparer<PromoteSHero>
{
    /*0x1223594*/ HeroPromoteCompare_Sort();
    /*0x12234e4*/ int Compare(PromoteSHero left, PromoteSHero right);
}

class HeroInventory_Sort : System.Collections.Generic.IComparer<PTShare.Define.SHero>
{
    /*0xf36404*/ HeroInventory_Sort();
    /*0xf3d708*/ int Compare(PTShare.Define.SHero left, PTShare.Define.SHero right);
}

class ConditionHeroData
{
    /*0x10*/ PTShare.Define.SHero hero;
    /*0x18*/ int hpPercent;
    /*0x1c*/ int mpPercent;
    /*0x20*/ bool isMate;

    /*0x10e7a48*/ ConditionHeroData(PTShare.Define.SHero hero, int hpPercent, int mpPercent, bool isMate);
    /*0x10e7afc*/ ConditionHeroData(PTShare.Define.SMate mate, int factionId, int hpPercent, int mpPercent, bool isMate);
    /*0x10e77f4*/ float GetHpPercent100();
    /*0x10e7868*/ float GetMpPercent100();
    /*0x10e78dc*/ float GetHpPercent1();
    /*0x10e795c*/ float GetMpPercent1();
    /*0x10e79dc*/ void SetDefaultCondition();
}

enum LoadTaskType
{
    Login = 0,
    Initialize = 1,
    PatchInit = 2,
    PatchLoad = 3,
    System = 4,
    Scene = 5,
    Cache = 6,
    Prefab = 7,
    Custom = 8,
    DirectingProcess = 9,
    End = 10,
}

enum LocalizeCmdType
{
    text = 0,
    param = 1,
    key = 2,
    kr = 3,
    enter = 4,
    outline = 5,
    rank = 6,
    End = 7,
}

enum LocaleLanguageType
{
    Unknown = -1,
    English = 0,
    Korean = 1,
    Japanese = 2,
    ChineseSimplified = 3,
    ChineseTraditional = 4,
    French = 5,
    German = 6,
    Russian = 7,
    Thai = 8,
    Vietnamese = 9,
    Arabic = 10,
    Spanish = 11,
    Indonesian = 12,
    Italian = 13,
    Portuguese = 14,
    Global = 15,
    End = 16,
}

class CLanguageType
{
    static /*0x133f988*/ PTShare.Define.LanguageCode LanguageTypeToCountryCode(LocaleLanguageType type);
    static /*0x133f9ac*/ LocaleLanguageType CountryCodeToLanguageType(PTShare.Define.LanguageCode code);
    /*0x133f9cc*/ CLanguageType();
}

class LocalizeFileData
{
    /*0x10*/ string[] fontSymbol;

    /*0xfb2e74*/ LocalizeFileData();
}

class LocalizeCmd
{
    /*0x10*/ LocalizeCmdType <cmdType>k__BackingField;

    /*0xfb21b4*/ LocalizeCmd(LocalizeCmdType _cmd_type);
    /*0xfb21a4*/ LocalizeCmdType get_cmdType();
    /*0xfb21ac*/ void set_cmdType(LocalizeCmdType value);
    void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Text : LocalizeCmd
{
    /*0x18*/ string text;

    /*0xfb2988*/ LocalizeCmd_Text(string _text);
    /*0xfb29b8*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb29dc*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Param : LocalizeCmd
{
    /*0x14*/ int paramID;

    /*0xfb26b8*/ LocalizeCmd_Param(int _param_id);
    /*0xfb26e8*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb27f8*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Key : LocalizeCmd
{
    /*0x18*/ string key;

    /*0xfb2268*/ LocalizeCmd_Key(string _key);
    /*0xfb229c*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb23c0*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Kr : LocalizeCmd
{
    /*0x18*/ string param1;
    /*0x20*/ string param2;

    static /*0xfb24f8*/ bool hasJongSung(char charData);
    /*0xfb23c4*/ LocalizeCmd_Kr(string _param1, string _param2);
    /*0xfb2404*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb254c*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Enter : LocalizeCmd
{
    /*0xfb21e0*/ LocalizeCmd_Enter();
    /*0xfb220c*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb2264*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Outline : LocalizeCmd
{
    /*0x14*/ UnityEngine.Color outlineColor;

    /*0xfb2550*/ LocalizeCmd_Outline(UnityEngine.Color _color);
    /*0xfb25a4*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb25a8*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Rank : LocalizeCmd
{
    /*0x18*/ string[] paramsArray;

    /*0xfb27fc*/ LocalizeCmd_Rank(string[] _paramArray);
    /*0xfb2830*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb2984*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class DefineLocalize
{
    static /*0x0*/ string[] PROPERTYNAME;
    static /*0x8*/ string[] UNITGRADENAME;
    static /*0x10*/ string[] EQUIPGRADENAME;
    static /*0x18*/ string[] CURRENCYNAME;
    static /*0x20*/ string[] STATUSNAME;
    static /*0x28*/ string[] STATUSNAME_SHORT;
    static /*0x30*/ string[] HEROTYPENAME;
    static /*0x38*/ string[] EQUIPTYPENAME;
    static /*0x40*/ string[] PLATFORMNAME;
    static /*0x48*/ string[] ARENATIERNAME;

    static /*0x11e5804*/ DefineLocalize();
    /*0x11e57fc*/ DefineLocalize();
}

class DefineMenu
{
    static string MENU_CHATTING = "Chatting";
    static string MENU_CAMPAIN = "Campain";
    static string MENU_HERO = "Hero";

    /*0x11e7be8*/ DefineMenu();
}

class DefineObjectPool
{
    static AssetBundleType GENERIC_UI_POOL = 31;
    static AssetBundleType CAMPAIN_UI_POOL = 34;
    static AssetBundleType CHATTING_UI_POOL = 18;
    static AssetBundleType CASHSHOP_UI_POOL = 38;
    static string ITEM_BOX_BASE = "ItemBoxBase";
    static string ITEM_BOUNTY_BOX = "ItemBountyBox";
    static string ITEM_TABLE_BOX = "ItemTableRewardSlot";
    static string STAGEPOINT = "StagePoint";
    static string CHAPTERPOINT = "ChapterPoint";
    static string CURRENCYTOPENTITY = "CurrencyTopEntity";
    static string CHATCHANNELBUTTON = "ChatChannelButton";
    static string LEVELUPSTATUSUI = "LevelUpStatusUI";
    static string STATUSCHANGEUI = "StatusChangeUI";
    static /*0x0*/ string[] LEVELUPPARTICLE;

    static /*0x11e7bf8*/ DefineObjectPool();
    /*0x11e7bf0*/ DefineObjectPool();
}

enum ResonanceSortType
{
    NONE = 0,
    GRADE = 1,
    FACTION = 2,
}

class DefineResonance
{
    static int MaxCrystalProportionLevel = 10;

    /*0x11e7e0c*/ DefineResonance();
}

class DefineScene
{
    static string SCENETYPE = "scene";
    static string START_SERVERSELECT_SCENE = "StartServerSelect";
    static string SERVERSELECT_SCENE = "ServerSelect";
    static string RESTART_SCENE = "ReStart";
    static string LOGO_SCENE = "Logo";
    static string MAIN_SCENE = "Main";
    static string BATTLE_SCENE = "Battle";
    static string MAZE_SCENE = "Maze";
    static string DUNGEON_SCENE = "Dungeon";
    static string START_SYNCTOOL_SCENE = "StartSyncTool";
    static string SYNCTOOL_SCENE = "SyncTool";
    static string BATTLETOOL_SCENE = "BattleTool";
    static string CUT_SCENE = "CutScene";

    /*0x11e7e14*/ DefineScene();
}

enum ScreenEffectType
{
    Move = 0,
    Zoom = 1,
    Shake = 2,
    DarkChange = 3,
    ColorChange = 4,
    SpeedChange = 5,
    BackgroundEffect = 6,
    LookAtTarget = 7,
    ObjectShake = 8,
    MotionBlur = 9,
    Blur = 10,
    Bloom = 11,
    Grayscale = 12,
    Fisheye = 13,
    Vortex = 14,
    SunShafts = 15,
    Antialiasing = 16,
    Fade = 17,
    End = 18,
}

enum ScreenEffectFlag
{
    None = 0,
    IgnoreCameraMove = 1,
    IgnoreCameraZoom = 2,
    IgnoreCameraShake = 4,
    IgnoreDarkChange = 8,
    IgnoreColorChange = 16,
    IgnoreSpeedChange = 32,
    IgnoreBackgroundEffect = 64,
    IgnoreLookAtTarget = 128,
    IgnoreMotionBlur = 256,
    IgnoreBlur = 512,
    IgnoreBloom = 1024,
    IgnoreGrayscale = 2048,
    IgnoreFisheye = 4096,
    IgnoreVortex = 8192,
    IgnoreSunShafts = 16384,
}

struct ScreenEffectData_Move
{
    /*0x10*/ UnityEngine.Vector3 goalPos;
    /*0x1c*/ float transTimeExecute;
    /*0x20*/ float transTimeUndo;
    /*0x24*/ float fixedTime;
}

struct ScreenEffectData_Zoom
{
    /*0x10*/ float zoomSize;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
    /*0x1c*/ float fixedTime;
}

struct ScreenEffectData_Shake
{
    /*0x10*/ float shakePower;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
}

struct ScreenEffectData_DarkChange
{
    /*0x10*/ float ambientIntensity;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
    /*0x1c*/ float fixedTime;
}

struct ScreenEffectData_ColorChange
{
    /*0x10*/ UnityEngine.Color ambientColor;
    /*0x20*/ float transTimeExecute;
    /*0x24*/ float transTimeUndo;
    /*0x28*/ float fixedTime;
}

struct ScreenEffectData_SpeedChange
{
    /*0x10*/ float timeScale;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
    /*0x1c*/ float fixedTime;
}

struct ScreenEffectData_BackgroundEffect
{
    /*0x10*/ string effectName;
    /*0x18*/ UnityEngine.GameObject[] bgGroup;
    /*0x20*/ float transTimeExecute;
    /*0x24*/ float transTimeUndo;
    /*0x28*/ float fixedTime;
}

struct ScreenEffectData_LookAtTarget
{
    /*0x10*/ UnityEngine.Vector3 cameraPos;
    /*0x20*/ UnityEngine.Transform trTarget;
    /*0x28*/ float transTimeExecute;
    /*0x2c*/ float transTimeUndo;
    /*0x30*/ float fixedTime;
}

class ScreenEffectProcess
{
    static /*0x0*/ ScreenEffectProcess.DefaultCameraValue _defaultCameraValue;
    static /*0x20*/ UnityEngine.Vector3 _movingCameraPos;
    static /*0x2c*/ ScreenEffectProcess.DefaultAmbientValue _defaultAmbientValue;
    static /*0x40*/ ScreenEffectFlag _effectFlag;
    static /*0x48*/ System.Collections.Generic.Dictionary<UnityEngine.Camera, ScreenPostEffectController> _postEffectDic;
    /*0x10*/ ScreenEffectType _effectType;
    /*0x18*/ System.Collections.IEnumerator _curProcess_Execute;
    /*0x20*/ System.Collections.IEnumerator _curSubProcess_Execute;
    /*0x28*/ System.Collections.IEnumerator _curProcess_Undo;
    /*0x30*/ System.Collections.IEnumerator _curSubProcess_Undo;
    /*0x38*/ System.Action m_OnComplete;
    /*0x40*/ float fixedTime;
    /*0x44*/ float _transSpeed_Execute;
    /*0x48*/ float _transSpeed_Undo;

    static /*0x12a5370*/ ScreenEffectProcess();
    static /*0x12a1f8c*/ void SetDefaultCameraValue(UnityEngine.Camera _camera);
    static /*0x12a4cfc*/ void SetDefaultCameraPos(UnityEngine.Vector3 _pos);
    static /*0x12a4d98*/ UnityEngine.Vector3 GetDefaultCameraPos();
    static /*0x12a2144*/ void SetDefaultAmbientValue(float _intensity, UnityEngine.Color _color);
    static /*0x12a4e00*/ void AddFlag(ScreenEffectFlag _flag);
    static /*0x12a250c*/ void RemoveFlag(ScreenEffectFlag _flag);
    static /*0x12a4698*/ void ClearFlag();
    static /*0x12a4e70*/ bool IsFlag(ScreenEffectFlag _flag);
    static /*0x12a4ee0*/ ScreenPostEffectController GetPostEffectController(UnityEngine.Camera _camera);
    static /*0x12a46fc*/ void ClearPostEffectController();
    /*0x12a4c94*/ ScreenEffectProcess(ScreenEffectType _type);
    /*0x12a4ccc*/ ScreenEffectType get_effectType();
    /*0x12a2374*/ bool get_isProcessing();
    /*0x12a4cd4*/ bool get_isProcessing_Execute();
    /*0x12a4ce4*/ bool get_isProcessing_Undo();
    /*0x12a4cf4*/ ScreenEffectFlag GetCurIgnoreFlag();
    void ApplyDefault();
    System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a2e20*/ void set_transTime_Execute(float value);
    /*0x12a5054*/ float get_transTime_Execute();
    /*0x12a2e40*/ void set_transTime_Undo(float value);
    /*0x12a5074*/ float get_transTime_Undo();
    /*0x12a2e60*/ void Execute(System.Action _OnCompleteAction);
    /*0x12a2260*/ void Undo();
    /*0x12a2394*/ void Clear();
    /*0x12a5094*/ void StopProcess();
    /*0x12a51a4*/ void StopProcess_Execute();
    /*0x12a52a8*/ void StopProcess_Undo();
    /*0x12a5138*/ System.Collections.IEnumerator OnBaseProcess_Execute();
    /*0x12a523c*/ System.Collections.IEnumerator OnBaseProcess_Undo();
    /*0x12a5340*/ void InvokeOnComplete();

    struct DefaultCameraValue
    {
        /*0x10*/ UnityEngine.Vector3 pos;
        /*0x1c*/ float orthographicSize;
        /*0x20*/ UnityEngine.Quaternion rotation;
    }

    struct DefaultAmbientValue
    {
        /*0x10*/ float ambientIntensity;
        /*0x14*/ UnityEngine.Color ambientLight;
    }

    class <OnBaseProcess_Execute>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffectProcess <>4__this;
        /*0x28*/ float <_elapsed_time>5__2;

        /*0xf9d7d4*/ <OnBaseProcess_Execute>d__51(int <>1__state);
        /*0xf9d800*/ void System.IDisposable.Dispose();
        /*0xf9d804*/ bool MoveNext();
        /*0xf9daac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9dab4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9daf4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnBaseProcess_Undo>d__52 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffectProcess <>4__this;

        /*0xf9dafc*/ <OnBaseProcess_Undo>d__52(int <>1__state);
        /*0xf9db28*/ void System.IDisposable.Dispose();
        /*0xf9db2c*/ bool MoveNext();
        /*0xf9dc48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9dc50*/ void System.Collections.IEnumerator.Reset();
        /*0xf9dc90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class PostEffectProcess : ScreenEffectProcess
{
    /*0x50*/ UnityEngine.Camera _curPostEffectCamera;

    static /*0x100c314*/ PostEffectFlag GetScreenEffectTypeToPostEffectType(ScreenEffectType _type);
    /*0x100c154*/ PostEffectProcess(ScreenEffectType _type);
    /*0x100c1c8*/ void InitPostEffectCamera(UnityEngine.Camera _camera);
    /*0x100c254*/ void StopCurPostEffect();
    /*0x100c2ac*/ ScreenPostEffectController GetCurPostEffectController();
    /*0x100c338*/ void ApplyDefault();
    /*0x100c3b8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x100c3f8*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
}

class DefineSkeleton
{
    static string IDLE = "idle";
    static string IDLE_CLEAR = "idle_clear";
    static string IDLE_ENEMY = "idle_enemy";
    static string IDLE_UNARMED = "idle_unarmed";
    static string CLEARING = "clearing";
    static string RUN = "run";
    static string RUN_UNARMED = "run_unarmed";
    static string DUNGEON_IDLE = "idle_lantern";
    static string DUNGEON_RUN = "run_lantern";
    static string IN = "in";
    static string OUT = "out";
    static string UPGRADE = "upgrade";
    static string CLOSE = "close";
    static string OPEN = "open";
    static string IDLE_NO = "idle_no";
    static string IDLE_STAR = "idle_star";
    static string FALL_UNARMED = "cc_fall_unarmed";
    static string STUN_UNARMED = "cc_stun_unarmed";
    static float CHARACTER_OFFSET_Y = 142;
    static /*0x0*/ string[] PROPERTYCARDSKINNAME;

    static /*0x11e7e24*/ DefineSkeleton();
    /*0x11e7e1c*/ DefineSkeleton();
}

class DefineSpriteAtlas
{
    static string PROFILE_BORDER_DEFAULT = "Profile_Frame_0";
    static string PROFILE_BACKGROUND_DEFAULT = "Profile_Background_0";
    static string HEROSKINBACKGROUND = "Skin_Slot1";
    static string ARTIFACTBACKGROUND = "Character_Slot7_2";
    static string ARTIFACTFRAME = "Character_Frame7+";
    static string TRAININGICON = "Icon_Training1";
    static string DEFAULTSQUAREFRAME = "Square_Frame1";
    static string TIME = "Time1";
    static string REDDOT = "New1";
    static string PLUS = "Plus1";
    static string POWER = "Power1";
    static string GUILDPOINT = "GuildContri_Small1";
    static string CARDEFFECT_1 = "Effect1";
    static string CARDEFFECT_2 = "Effect2";
    static string Flag_Friend = "Friend2";
    static string Flag_Guild = "Guild1";
    static string Flag_Support = "Icon_Mercenary_Mark1";
    static string WIN_IMAGE_NAME = "Win_Flag1";
    static string LOSE_IMAGE_NAME = "Lose_Flag1";
    static string FREE_WORLDTICKET_NAME = "Icon_WorldArenaTicket_Free1_Small1";
    static string ARENA_POINT_CION = "ArenaPoint1_Small1";
    static string GUILD_MASTER_ICON = "Guild_Master1";
    static string GUILD_ELDER_ICON = "Guild_Elder1";
    static string GUILD_MERCENARY_ICON = "Guild_MercenaryCaptain1";
    static string GUILD_ATTACKCAPTAIN_ICON = "Icon_Guildwar_AttackCaptain1";
    static string GUILD_DEFENSECAPTAIN_ICON = "Icon_Guildwar_DefenseCaptain1";
    static string ADS_PACKAGE_ICON = "AD_AD";
    static /*0x0*/ string[] PROPERTYICON;
    static /*0x8*/ string[] ILLUSTBACKGROUND;
    static /*0x10*/ string[] ILLUSTFRAME;
    static /*0x18*/ string[] CUTSCENEBACKGROUND;
    static /*0x20*/ string[] HEROSLOTFRAME;
    static /*0x28*/ string[] HEROBATTLESLOTFRAME;
    static /*0x30*/ string[] HEROBATTLESLOTBACKGROUND;
    static /*0x38*/ string[] HEROSLOTBACKGROUND;
    static /*0x40*/ string[] EQUIPSLOTBACKGROUND;
    static /*0x48*/ string[] EQUIPSLOTFRAME;
    static /*0x50*/ string[] HEROSKINFRAME;
    static /*0x58*/ string[] ITEMSLOTFRAME;
    static /*0x60*/ string[] ITEMSLOTBACKGROUND;
    static /*0x68*/ string[] GACHAPROPERTYCARD_ENABLE;
    static /*0x70*/ string[] GACHAPROPERTYCARD_DISABLE;
    static /*0x78*/ string[] GACHAUNITFRAME;
    static /*0x80*/ string[] GACHAUNITBACKGROUND;
    static /*0x88*/ string[] UNITGRADETITLEBACKGROUND;
    static /*0x90*/ string[] UNITSHADE;
    static /*0x98*/ string[] UNITFROZEN;
    static /*0xa0*/ string[] UNITGRADETEXTIMAGE;
    static /*0xa8*/ string[] BATTLEHEALTHBAR;
    static /*0xb0*/ string[] BATTLESTEMINABAR;
    static /*0xb8*/ string[] BATTLESHIELDBAR;
    static /*0xc0*/ string[] BUTTON;
    static /*0xc8*/ string[] BUTTONPRESS;
    static /*0xd0*/ string[] MAILICON;
    static /*0xd8*/ string[] LOCKICON;
    static /*0xe0*/ string[] DEFAULTSLOTFRAME;
    static /*0xe8*/ string[] SUMMONSMALLFRAME;
    static /*0xf0*/ string[] STATUSTYPEICON;
    static /*0xf8*/ string[] CLASSTYPEICON;
    static /*0x100*/ string[] PROMOTE;
    static /*0x108*/ string[] FORMATION;
    static /*0x110*/ string[] SAVEICON;
    static /*0x118*/ string[] STATCOLORARROWICON;
    static /*0x120*/ string[] DEFAULTSQUARE;
    static /*0x128*/ string[] DEFAULTSQUAREBACKGROUND;
    static /*0x130*/ string[] COIN;
    static /*0x138*/ string[] EXP;
    static /*0x140*/ string[] CASH;
    static /*0x148*/ string[] HEART;
    static /*0x150*/ string[] DISMISS;
    static /*0x158*/ string[] CRYSTAL;
    static /*0x160*/ string[] HEROEXP;
    static /*0x168*/ string[] FEATHER;
    static /*0x170*/ string[] VIP;
    static /*0x178*/ string[] MAZECOIN;
    static /*0x180*/ string[] HEROCARD;
    static /*0x188*/ string[] GUILDCOIN;
    static /*0x190*/ string[] ARENACOIN;
    static /*0x198*/ string[] WORLDCOIN;
    static /*0x1a0*/ string[] DUNGEONCOIN;
    static /*0x1a8*/ string[] PVECOIN1;
    static /*0x1b0*/ string[] PVECOIN2;
    static /*0x1b8*/ string[] BATTLEPASSEXP;
    static /*0x1c0*/ string[] ROYALPASSEXP;
    static /*0x1c8*/ string[] RESETQUESTPOINT;
    static /*0x1d0*/ string[] ARROW;
    static /*0x1d8*/ string[] GENDER;
    static /*0x1e0*/ string[] HEROFOOTHOLD;
    static /*0x1e8*/ string[] SENDFSHIPICON;
    static /*0x1f0*/ string[] RECEIVEFSHIPICON;
    static /*0x1f8*/ string[] STAGESTATUS;
    static /*0x200*/ string[] RANKING_MAINICON;
    static /*0x208*/ string[] RANK;
    static /*0x210*/ string[] QUESTBOXICON;
    static /*0x218*/ string[] UPDOWNARROW;
    static /*0x220*/ string[] INFOILLUSTVIEWICON;
    static /*0x228*/ string GUILD_EMBLEM;
    static /*0x230*/ string[] GUILD_BUILDING;
    static /*0x238*/ string[] PLATFORM_ICON;
    static /*0x240*/ string NAMECARD_HERO_GRADE_SLIME;
    static /*0x248*/ string NAMECARD_HERO_GRADE_NORMAL;
    static /*0x250*/ string NAMECARD_HERO_GRADE_ELITE;
    static /*0x258*/ string[] ARENA_TIER_ICON_BIG;
    static /*0x260*/ string[] ARENA_TIER_ICON_SMALL;
    static /*0x268*/ string[] GUILD_BOSS_REWARD_BOX;
    static /*0x270*/ string[] FAST_ICON_NAME;
    static /*0x278*/ string[] DUNGEON_ITEM_ICON_SMALL;
    static /*0x280*/ string[] DUNGEON_ITEM_ICON_BIG;
    static /*0x288*/ string[] FACTION_RANK_BACKGROUND;
    static /*0x290*/ string[] FACTION_RANK_BANNER;
    static /*0x298*/ string[] FACTION_GUILD_LINE_TOPTITLE;
    static /*0x2a0*/ string[] GUILDWAR_FORMATION_BACKGROUND;
    static /*0x2a8*/ string[] PVEEMBLEM;
    static /*0x2b0*/ string[] PVECHECK;
    static /*0x2b8*/ string[] PVEFRAME;
    static /*0x2c0*/ string[] PVETOP3;
    static /*0x2c8*/ string[] FURNITURE_BACKGROUND;
    static /*0x2d0*/ string[] STAR_SLOT_SMALL;
    static /*0x2d8*/ string[] STAR_SLOT_BIG;
    static /*0x2e0*/ string[] ABILITY_GRADE;
    static /*0x2e8*/ string[] ABILITY_GRADE_ICON;
    static /*0x2f0*/ string[] ABILITY_BG;
    static /*0x2f8*/ string[] ABILITY_BG2;
    static /*0x300*/ string[] ROULETTE_BG;
    static /*0x308*/ string[] PASS_BUTTON;
    static /*0x310*/ string[] BATTLEPASS_LINE_DISABLE;
    static /*0x318*/ string[] BATTLEPASS_LINE_ENABLE;
    static /*0x320*/ string[] BATTLEPASS_SLOT_DISABLE;
    static /*0x328*/ string[] BATTLEPASS_SLOT_ENABLE;

    static /*0x11e7fb8*/ DefineSpriteAtlas();
    /*0x11e7fb0*/ DefineSpriteAtlas();
}

class DefineTexture
{
    static /*0x0*/ string[] BOOKBACKGROUND;
    static /*0x8*/ string[] BOOKFRAME;
    static /*0x10*/ string[] HEROINFOBACKGROUND;
    static /*0x18*/ string[] HEROINFOFRAME;
    static /*0x20*/ string[] HEROINFOSLOT;
    static /*0x28*/ string[] HEROBOOKFRAME;
    static /*0x30*/ string[] GACHAFACTIONBACKGROUND;
    static /*0x38*/ string[] GACHAFACTIONBANNER;
    static /*0x40*/ string[] ARENALISTBACKGROUND;

    static /*0x11eea44*/ DefineTexture();
    /*0x11eea3c*/ DefineTexture();
}

class EasingFunction
{
    static float NATURAL_LOG_OF_2 = 0.6931471824645996;

    static /*0x14b6950*/ float Linear(float start, float end, float value);
    static /*0x14b6958*/ float Spring(float start, float end, float value);
    static /*0x14b6a0c*/ float EaseInQuad(float start, float end, float value);
    static /*0x14b6a20*/ float EaseOutQuad(float start, float end, float value);
    static /*0x14b6a3c*/ float EaseInOutQuad(float start, float end, float value);
    static /*0x14b6a90*/ float EaseInCubic(float start, float end, float value);
    static /*0x14b6aa8*/ float EaseOutCubic(float start, float end, float value);
    static /*0x14b6ad0*/ float EaseInOutCubic(float start, float end, float value);
    static /*0x14b6b28*/ float EaseInQuart(float start, float end, float value);
    static /*0x14b6b44*/ float EaseOutQuart(float start, float end, float value);
    static /*0x14b6b6c*/ float EaseInOutQuart(float start, float end, float value);
    static /*0x14b6bc8*/ float EaseInQuint(float start, float end, float value);
    static /*0x14b6be8*/ float EaseOutQuint(float start, float end, float value);
    static /*0x14b6c18*/ float EaseInOutQuint(float start, float end, float value);
    static /*0x14b6c80*/ float EaseInSine(float start, float end, float value);
    static /*0x14b6cbc*/ float EaseOutSine(float start, float end, float value);
    static /*0x14b6cf4*/ float EaseInOutSine(float start, float end, float value);
    static /*0x14b6d3c*/ float EaseInExpo(float start, float end, float value);
    static /*0x14b6d78*/ float EaseOutExpo(float start, float end, float value);
    static /*0x14b6db4*/ float EaseInOutExpo(float start, float end, float value);
    static /*0x14b6e28*/ float EaseInCirc(float start, float end, float value);
    static /*0x14b6e78*/ float EaseOutCirc(float start, float end, float value);
    static /*0x14b6ec8*/ float EaseInOutCirc(float start, float end, float value);
    static /*0x14b6f4c*/ float EaseInBounce(float start, float end, float value);
    static /*0x14b6f88*/ float EaseOutBounce(float start, float end, float value);
    static /*0x14b7054*/ float EaseInOutBounce(float start, float end, float value);
    static /*0x14b70d8*/ float EaseInBack(float start, float end, float value);
    static /*0x14b7108*/ float EaseOutBack(float start, float end, float value);
    static /*0x14b7148*/ float EaseInOutBack(float start, float end, float value);
    static /*0x14b71cc*/ float EaseInElastic(float start, float end, float value);
    static /*0x14b7260*/ float EaseOutElastic(float start, float end, float value);
    static /*0x14b72f4*/ float EaseInOutElastic(float start, float end, float value);
    static /*0x14b73f4*/ float LinearD(float start, float end, float value);
    static /*0x14b73fc*/ float EaseInQuadD(float start, float end, float value);
    static /*0x14b740c*/ float EaseOutQuadD(float start, float end, float value);
    static /*0x14b7428*/ float EaseInOutQuadD(float start, float end, float value);
    static /*0x14b7450*/ float EaseInCubicD(float start, float end, float value);
    static /*0x14b7468*/ float EaseOutCubicD(float start, float end, float value);
    static /*0x14b7488*/ float EaseInOutCubicD(float start, float end, float value);
    static /*0x14b74b8*/ float EaseInQuartD(float start, float end, float value);
    static /*0x14b74d4*/ float EaseOutQuartD(float start, float end, float value);
    static /*0x14b74f8*/ float EaseInOutQuartD(float start, float end, float value);
    static /*0x14b7530*/ float EaseInQuintD(float start, float end, float value);
    static /*0x14b7550*/ float EaseOutQuintD(float start, float end, float value);
    static /*0x14b7578*/ float EaseInOutQuintD(float start, float end, float value);
    static /*0x14b75b0*/ float EaseInSineD(float start, float end, float value);
    static /*0x14b75fc*/ float EaseOutSineD(float start, float end, float value);
    static /*0x14b7630*/ float EaseInOutSineD(float start, float end, float value);
    static /*0x14b766c*/ float EaseInExpoD(float start, float end, float value);
    static /*0x14b76b4*/ float EaseOutExpoD(float start, float end, float value);
    static /*0x14b76f4*/ float EaseInOutExpoD(float start, float end, float value);
    static /*0x14b774c*/ float EaseInCircD(float start, float end, float value);
    static /*0x14b77a8*/ float EaseOutCircD(float start, float end, float value);
    static /*0x14b77f8*/ float EaseInOutCircD(float start, float end, float value);
    static /*0x14b7878*/ float EaseInBounceD(float start, float end, float value);
    static /*0x14b788c*/ float EaseOutBounceD(float start, float end, float value);
    static /*0x14b7914*/ float EaseInOutBounceD(float start, float end, float value);
    static /*0x14b7960*/ float EaseInBackD(float start, float end, float value);
    static /*0x14b7990*/ float EaseOutBackD(float start, float end, float value);
    static /*0x14b79cc*/ float EaseInOutBackD(float start, float end, float value);
    static /*0x14b7a5c*/ float EaseInElasticD(float start, float end, float value);
    static /*0x14b7b0c*/ float EaseOutElasticD(float start, float end, float value);
    static /*0x14b7bbc*/ float EaseInOutElasticD(float start, float end, float value);
    static /*0x14b7cec*/ float SpringD(float start, float end, float value);
    static /*0x14b7e50*/ EasingFunction.Function GetEasingFunction(EasingFunction.Ease easingFunction);
    static /*0x14b83c8*/ EasingFunction.Function GetEasingFunctionDerivative(EasingFunction.Ease easingFunction);

    enum Ease
    {
        EaseInQuad = 0,
        EaseOutQuad = 1,
        EaseInOutQuad = 2,
        EaseInCubic = 3,
        EaseOutCubic = 4,
        EaseInOutCubic = 5,
        EaseInQuart = 6,
        EaseOutQuart = 7,
        EaseInOutQuart = 8,
        EaseInQuint = 9,
        EaseOutQuint = 10,
        EaseInOutQuint = 11,
        EaseInSine = 12,
        EaseOutSine = 13,
        EaseInOutSine = 14,
        EaseInExpo = 15,
        EaseOutExpo = 16,
        EaseInOutExpo = 17,
        EaseInCirc = 18,
        EaseOutCirc = 19,
        EaseInOutCirc = 20,
        Linear = 21,
        Spring = 22,
        EaseInBounce = 23,
        EaseOutBounce = 24,
        EaseInOutBounce = 25,
        EaseInBack = 26,
        EaseOutBack = 27,
        EaseInOutBack = 28,
        EaseInElastic = 29,
        EaseOutElastic = 30,
        EaseInOutElastic = 31,
    }

    class Function : System.MulticastDelegate
    {
        /*0x1097dac*/ Function(object object, nint method);
        /*0x1097e0c*/ float Invoke(float s, float e, float v);
        /*0x1098078*/ System.IAsyncResult BeginInvoke(float s, float e, float v, System.AsyncCallback callback, object object);
        /*0x109812c*/ float EndInvoke(System.IAsyncResult result);
    }
}

class GradientEffect : UnityEngine.UI.BaseMeshEffect
{
    /*0x20*/ UnityEngine.Color32 topColor;
    /*0x24*/ UnityEngine.Color32 bottomColor;

    /*0xe5faa8*/ GradientEffect();
    /*0xe5f85c*/ void ModifyMesh(UnityEngine.UI.VertexHelper helper);
}

class BuffIconSpread : MenuSpread
{
    static string FACTION_BUFF_DARK_NAME = "DARKFACTION";
    static string FACTION_BUFF_NORMAL_NAME = "SAMEFACTION";
    /*0x68*/ System.Collections.Generic.List<BuffIconUI> m_lisBuffIcon;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> m_lisFactionBuff;
    /*0x78*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> m_lisFactionBuffDark;
    /*0x80*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> m_lisFactionBuffNormal;
    /*0x88*/ System.Collections.Generic.List<BuffIconSpread.BuffIconData> m_lisResultBuffIconData;
    /*0x90*/ System.Collections.Generic.List<int> m_lisResultBuffID;
    /*0x98*/ System.Collections.Generic.List<int> m_lisFactionCount;
    /*0xa0*/ bool m_bStartInitialized;
    /*0xa4*/ Helper_FactionBuff.FactionBuffType m_eFactionBuffType;

    /*0x16f1b98*/ BuffIconSpread();
    /*0x16f08b4*/ void StartInit();
    /*0x16f0b2c*/ System.Collections.Generic.List<int> Init(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x16f110c*/ void FindSameFactionCondition(BuffIconSpread.FactionType _eFactionType);
    /*0x16f1a1c*/ System.Collections.Generic.List<UnityEngine.GameObject> GetBuffImageObjectList();

    enum FactionType
    {
        NORMAL = 0,
        DEMON = 1,
    }

    struct BuffIconData
    {
        /*0x10*/ Battle.BuffIconType BuffType;
        /*0x14*/ int MaxLV;
        /*0x18*/ int LV;

        /*0xa82928*/ BuffIconData(Battle.BuffIconType _eBuffType, int _nMaxLV, int _nLV);
    }

    class <>c
    {
        static /*0x0*/ BuffIconSpread.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Factionbuff> <>9__13_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Factionbuff> <>9__13_1;

        static /*0xda51c0*/ <>c();
        /*0xda5220*/ <>c();
        /*0xda5228*/ bool <StartInit>b__13_0(TableData.TableData_Factionbuff x);
        /*0xda5284*/ bool <StartInit>b__13_1(TableData.TableData_Factionbuff x);
    }
}

class HeroSlotSpread : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.ParticleSystem m_SpawnParticleUI;
    /*0x20*/ UnityEngine.RectTransform m_MoveTrans;
    /*0x28*/ System.Collections.Generic.List<HeroSlotInventory> m_lisHeroSlot;
    /*0x30*/ System.Collections.Generic.List<UnityEngine.Vector3> m_lisSlotPosition;
    /*0x38*/ DG.Tweening.Sequence m_Sequence;
    /*0x40*/ float m_fOriginTransX;
    /*0x44*/ float m_fSlotGapDistanceX;
    /*0x48*/ int m_nOriginHeroCount;
    /*0x4c*/ bool m_bAlly;

    /*0x126e9d0*/ HeroSlotSpread();
    /*0x126e4f4*/ void Start();
    /*0x126e4f8*/ void InitPosition();
    /*0x126e6b8*/ void Init(bool _bAlly);
    /*0x126e8a8*/ void Renew();
    /*0x126ea88*/ void <Renew>b__12_0();
}

class MenuSpread : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_Parent;
    /*0x20*/ UnityEngine.UI.GridLayoutGroup m_GridLayoutGroup;
    /*0x28*/ UnityEngine.RectTransform m_ArrowIcon;
    /*0x30*/ bool m_bShowing;
    /*0x34*/ float m_fDefaultPadding;
    /*0x38*/ float m_fDefaultOffset;
    /*0x3c*/ float m_fAnimateSpeed;
    /*0x40*/ bool m_bArrowMirror;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.GameObject> m_GridItems;
    /*0x50*/ bool m_bPlayAnimate;
    /*0x54*/ int m_nMinItemCount;
    /*0x58*/ int m_nMaxItemCount;
    /*0x5c*/ float m_fSizeDeltaX;
    /*0x60*/ System.Collections.IEnumerator m_ieAnimation;

    /*0x2b3bfcc*/ MenuSpread();
    /*0x2b3ba08*/ void InitializeSpread(int _minItemCount, int _maxItemCount);
    /*0x2b3bd68*/ bool IsShowing();
    /*0x2b3bbc0*/ void Refresh(bool _isShowing, bool _isAnimate);
    /*0x2b3be68*/ void Show();
    /*0x2b3be1c*/ void StartAnimation();
    /*0x2b3bf04*/ System.Collections.IEnumerator CoAnimation();
    /*0x2b3bf70*/ bool UpdateSize(bool _condition1, bool _condition2, UnityEngine.Vector2 _increase, UnityEngine.Vector2 _decrease);
    /*0x2b3bd70*/ void SetActiveGridObjects(int _nViewCount);

    class <CoAnimation>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MenuSpread <>4__this;

        /*0x1087620*/ <CoAnimation>d__19(int <>1__state);
        /*0x108764c*/ void System.IDisposable.Dispose();
        /*0x1087650*/ bool MoveNext();
        /*0x1087848*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1087850*/ void System.Collections.IEnumerator.Reset();
        /*0x1087890*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct PathData
{
    /*0x10*/ int Index;
    /*0x14*/ float X;
    /*0x18*/ float Y;
    /*0x1c*/ float Offset;

    /*0xa8a8e8*/ UnityEngine.Vector2 GetVector();
    /*0xa8a8f0*/ float GetScaleOffset();
}

class PathMaker : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.EdgeCollider2D m_Path;

    /*0x1147c28*/ PathMaker();
    /*0x11479f8*/ int get_GetPointCount();
    /*0x1147a24*/ int get_GetPointMaxIndex();
    /*0x1147a54*/ UnityEngine.EdgeCollider2D get_PathCollider();
    /*0x1147a5c*/ UnityEngine.Vector2 GetPathIndex(int _index);
    /*0x1147ad0*/ void SetPath(System.Collections.Generic.List<PathData> _pathData);
}

class SafeArea : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_RectTransform;
    /*0x20*/ UnityEngine.Rect LastSafeArea;

    /*0x129fff0*/ SafeArea();
    /*0x129fe04*/ void Awake();
    /*0x129fe5c*/ void Refresh();
    /*0x129fedc*/ UnityEngine.Rect GetSafeArea();
    /*0x129fee4*/ void ApplySafeArea(UnityEngine.Rect r);
}

class BattleAudioGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ AssetBundleType HIT_AssetBundleType;
    /*0x20*/ string HIT_BLADE_NAME;
    /*0x28*/ string HIT_BLADE_C_NAME;
    /*0x30*/ string HIT_BLUNT_NAME;
    /*0x38*/ string HIT_BLUNT_C_NAME;
    /*0x40*/ string HIT_STAB_NAME;
    /*0x48*/ string HIT_STAB_C_NAME;
    /*0x50*/ string HIT_BULLET_NAME;
    /*0x58*/ string HIT_BULLET_C_NAME;
    /*0x60*/ string HIT_MAGIC_NAME;
    /*0x68*/ string HIT_MAGIC_C_NAME;
    /*0x70*/ string HIT_EXPLS_NAME;
    /*0x78*/ string HIT_ICE_NAME;
    /*0x80*/ string HIT_SHIELD_NAME;
    /*0x88*/ string HIT_HEAL_NAME;
    /*0x90*/ string HIT_BUFF_NAME;
    /*0x98*/ string HIT_DEBUFF_NAME;
    /*0xa0*/ AssetBundleType ULT_AssetBundleType;
    /*0xa8*/ string ULT_KNIGHT_NAME;
    /*0xb0*/ string ULT_MAGE_NAME;
    /*0xb8*/ string ULT_RANGER_NAME;
    /*0xc0*/ string ULT_SUPPORTER_NAME;
    /*0xc8*/ string ULT_WARRIOR_NAME;
    /*0xd0*/ AssetBundleType BUFF_AssetBundleType;
    /*0xd8*/ string BUFF_FREEZE_NAME;
    /*0xe0*/ AssetBundleType BGM_AssetBundleType;
    /*0xe8*/ string STAGE_CLEAR_NAME;
    /*0xf0*/ string STAGE_FAIL_NAME;

    /*0xf89284*/ BattleAudioGroup();
}

class BattleConstantsGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ float SkillCasterPauseDuration;
    /*0x1c*/ float SkillPauseDuration;
    /*0x20*/ float SkillFadeDuration;
    /*0x24*/ float SkillFadeAlpha;
    /*0x28*/ float SkillFadeDelay;
    /*0x2c*/ float IdleUnitDistanceY;
    /*0x30*/ float BattleResultDelay;
    /*0x34*/ int BattlePoseRandomDelay;
    /*0x38*/ float SlowMotionSpeed;
    /*0x3c*/ float ColorTweenSpeed;
    /*0x40*/ UnityEngine.Color InvincibleBuffColor;
    /*0x50*/ UnityEngine.Color RageBuffColor;
    /*0x60*/ float StartMoveSpeed;
    /*0x64*/ float HitFaceDuration;
    /*0x68*/ bool UsePlusSymbol;
    /*0x6c*/ float AddDamageFontDelay;
    /*0x70*/ float AddDamageFontScale;
    /*0x74*/ int TutorialRandomSeed;
    /*0x78*/ float VolumeChangeLerpTime;
    /*0x7c*/ float VolumeTargetBGM;
    /*0x80*/ float VolumeTargetSFX;
    /*0x84*/ UnityEngine.Color BossHitColor;
    /*0x94*/ float BossHitTime;
    /*0x98*/ float[] KillCountCooltimes;
    /*0xa0*/ float KillCutsceneCooltime;
    /*0xa4*/ int LevelMin;
    /*0xa8*/ int LevelMax;
    /*0xac*/ float Volume_SFX;

    /*0xf8a3dc*/ BattleConstantsGroup();
}

class BattleGizmoGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ UnityEngine.Color AreaColor;
    /*0x28*/ UnityEngine.Color ColliderColor_Allies;
    /*0x38*/ UnityEngine.Color ColliderColor_Enemies;
    /*0x48*/ UnityEngine.Color MoveColor_Allies;
    /*0x58*/ UnityEngine.Color MoveColor_Enemies;
    /*0x68*/ UnityEngine.Color TargetColor_Allies;
    /*0x78*/ UnityEngine.Color TargetColor_Enemies;
    /*0x88*/ UnityEngine.Color SightColor_Allies;
    /*0x98*/ UnityEngine.Color SightColor_Enemies;
    /*0xa8*/ UnityEngine.Color TickColor_Allies;
    /*0xb8*/ UnityEngine.Color TickColor_Enemies;
    /*0xc8*/ UnityEngine.Color CollisionColor_Allies;
    /*0xd8*/ UnityEngine.Color CollisionColor_Enemies;
    /*0xe8*/ float CollisionDuration;

    /*0xf8b3ec*/ BattleGizmoGroup();
}

class BattleNameGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ string DEFAULT_HIT;
    /*0x20*/ string SKILL_START;
    /*0x28*/ string SKILL_START_CUTSCENE;
    /*0x30*/ string KILL_CUTSCENE;
    /*0x38*/ string DEATH_DISSOLVE;
    /*0x40*/ string SHIELD_01;
    /*0x48*/ string SHIELD_02;
    /*0x50*/ string SHIELD_03;
    /*0x58*/ string SHIELD_04;
    /*0x60*/ string SHIELD_05;
    /*0x68*/ string UI_SKILL_ON;
    /*0x70*/ string CURE_EFFECT;
    /*0x78*/ string UNIT_09_SP_03;
    /*0x80*/ string UNIT_13_SP_03;
    /*0x88*/ string UNIT_22_ULT;
    /*0x90*/ string UNIT_26_ULT;
    /*0x98*/ string UNIT_28_SP_03;
    /*0xa0*/ string UNIT_44_SP_02;
    /*0xa8*/ string UNIT_47_SP_01;
    /*0xb0*/ string UNIT_47_SP_02_HEAL;
    /*0xb8*/ string UNIT_47_ULT_CURE;
    /*0xc0*/ string UNIT_47_ULT_SHIELD;
    /*0xc8*/ string UNIT_48_ULT_EXP;
    /*0xd0*/ string UNIT_48_ULT_HIT;
    /*0xd8*/ string UNIT_50_ULT;
    /*0xe0*/ string UNIT_57_SP_03;
    /*0xe8*/ string EVILPET_ULT_NIDDLE;
    /*0xf0*/ string EVILPET_ULT_EXP;
    /*0xf8*/ string EVILPET_ULT_SHIELD;
    /*0x100*/ string EVILPET_ULT_SHIELD_EXP;
    /*0x108*/ string EVILPET_ULT_SHIELD_HIT;
    /*0x110*/ string SLIME_01_SHIELD;
    /*0x118*/ string SLIME_02_SHIELD;
    /*0x120*/ string SLIME_03_SHIELD;
    /*0x128*/ string SLIME_04_SHIELD;
    /*0x130*/ string SLIME_05_SHIELD;
    /*0x138*/ string SLIME_06_SHIELD;
    /*0x140*/ string TUTORIAL_BG_DEATH_STAR;
    /*0x148*/ string UNIT_09_ULT_SWORD;
    /*0x150*/ string UNIT_12_ULT_BALL;
    /*0x158*/ string UNIT_36_ULT_ARROW;
    /*0x160*/ string UNIT_38_ULT_BULLET;
    /*0x168*/ string UNIT_44_ULT_SWORD;
    /*0x170*/ string CAMPAIN_BG_IMAGE_NAME_DEFAULT;

    /*0xe38ed8*/ BattleNameGroup();
}

class BuffIconNameGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ string[] FactionBuffPopupIconNames;

    /*0x16f08ac*/ BuffIconNameGroup();
}

class ColorGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ UnityEngine.Color[] ColorValues;

    /*0x10dfdf4*/ ColorGroup();
}

class IdleConstantsGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ float DialogueDurationMin;
    /*0x1c*/ float DialogueDurationMax;
    /*0x20*/ float DialogueDelayMin;
    /*0x24*/ float DialogueDelayMax;
    /*0x28*/ UnityEngine.Color DialogueTextColor;
    /*0x38*/ UnityEngine.Color DialogueImageColor;
    /*0x48*/ float DialogueExpandTime;
    /*0x4c*/ float DialogueShrinkTime;
    /*0x50*/ float DialogueFadeTime;
    /*0x54*/ float DialoguePrivatePercentage;

    /*0xd20a58*/ IdleConstantsGroup();
}

class RunGameSettings : UnityEngine.ScriptableObject
{
    /*0x18*/ int UnitID;
    /*0x1c*/ int UnitGrade;
    /*0x20*/ string StartpointName;
    /*0x28*/ int StartpointCount;
    /*0x30*/ string DestinationName;
    /*0x38*/ int DestinationCount;
    /*0x40*/ string StraightlineName;
    /*0x48*/ int StraightlineCount;
    /*0x50*/ string CrosslineName;
    /*0x58*/ int CrosslineCount;
    /*0x5c*/ int CrossSelectCount;
    /*0x60*/ float JumpCooltime;
    /*0x64*/ float FallStartSpeed;
    /*0x68*/ float UnitPositionX;
    /*0x6c*/ float BackgroundSpeed;
    /*0x70*/ float RewardDownEffectPositionY;
    /*0x74*/ float RewardUpEffectPositionY;
    /*0x78*/ string SFX_Jump;
    /*0x80*/ string SFX_Hit;
    /*0x88*/ string SFX_Slip;
    /*0x90*/ string SFX_Reward1;
    /*0x98*/ string SFX_Reward2;
    /*0xa0*/ string SFX_Reward3;
    /*0xa8*/ string SFX_Reward4;
    /*0xb0*/ string SFX_RewardLife;
    /*0xb8*/ string BGM_Default;
    /*0xc0*/ string BGM_Clear;
    /*0xc8*/ string BGM_Failed;

    /*0x1293724*/ RunGameSettings();
}

enum NewScrollType
{
    Horizontal = 0,
    Veratical = 1,
}

class NewScrollRect<T> : UnityEngine.EventSystems.UIBehaviour
{
    /*0x0*/ UnityEngine.UI.ScrollRect scrollRect;
    /*0x0*/ AssetBundleType m_eBundleType;
    /*0x0*/ NewScrollType m_eScrollType;
    /*0x0*/ UnityEngine.GameObject m_Prefab;
    /*0x0*/ int m_nPoolSize;
    /*0x0*/ float offsetTop;
    /*0x0*/ float offsetBottom;
    /*0x0*/ int nItemCount;
    /*0x0*/ bool bIsInitPool;
    /*0x0*/ System.Collections.Generic.List<T> liItems;
    /*0x0*/ System.Collections.Generic.List<UnityEngine.RectTransform> liItemsRect;
    /*0x0*/ System.Action<int, T> OnUpdateItemEvent;

    NewScrollRect();
    int get_ItemCount();
    void set_ItemCount(int value);
    int get_AddItemCount();
    void set_AddItemCount(int value);
    float get_HorizontalNormalizedPosition();
    void set_HorizontalNormalizedPosition(float value);
    float get_VerticalNormalizedPosition();
    void set_VerticalNormalizedPosition(float value);
    void Awake();
    void OnEnable();
    void OnDisable();
    void InitializeScroll();
    void IsExistFirstCreateItem();
    void CreateItem(int _index);
    void AddContentSize(float _value);
    void ClearContentSize();
    void RefreshContentSize();
    void InitializePool();
    T GetPoolObject();
    void ReturnPoolObject(UnityEngine.GameObject _obj);
    UnityEngine.RectTransform GetContent();
    UnityEngine.RectTransform GetViewport();
    void StopMovement();
    void OnChangeScroll(UnityEngine.Vector2 _vec);
    void SelectItemScroll(int _nIndex);
    bool UseRangeInItem(int _nIndex);
    void LastItemScroll();
    void FirstItemScroll();
    System.Collections.Generic.List<T> GetInstanceList();
    T GetInstance(int nIndex);
    float GetPosX(UnityEngine.RectTransform trans);
    float GetScrollPosX();
    float GetPosY(UnityEngine.RectTransform trans);
    float GetScrollPosY();
    void LateUpdate();
    void <IsExistFirstCreateItem>b__28_0(T x);
    void <RefreshContentSize>b__32_0(UnityEngine.RectTransform x);

    class <>c__DisplayClass50_0<T>
    {
        /*0x0*/ NewScrollRect<T> <>4__this;
        /*0x0*/ float _height;

        <>c__DisplayClass50_0();
        void <LateUpdate>b__0(UnityEngine.RectTransform x);
    }
}

class NewScrollRect_ChannelGroupEntity : NewScrollRect<ChannelGroupEntity>
{
    /*0x2b51980*/ NewScrollRect_ChannelGroupEntity();
}

class NewScrollRect_ChannelSelectEntity : NewScrollRect<ChannelSelectEntity>
{
    /*0x2b519cc*/ NewScrollRect_ChannelSelectEntity();
}

class NewScrollRect_ChatMessage : NewScrollRect<ChatMessage>
{
    /*0x2b51a18*/ NewScrollRect_ChatMessage();
}

class ScrollContent : UnityEngine.MonoBehaviour
{
    static int ITEM_EXTRA_COUNT = 1;
    /*0x18*/ UnityEngine.UI.ScrollRect scrollRect;
    /*0x20*/ UnityEngine.GameObject itemPrefab;
    /*0x28*/ ScrollContent.ScrollType scrollType;
    /*0x2c*/ ScrollContent.AlignType alignType;
    /*0x30*/ ScrollContent.AlignType itemAlignType;
    /*0x34*/ int lineCount;
    /*0x38*/ float itemScale;
    /*0x3c*/ ScrollContent.ItemMargin itemMargin;
    /*0x50*/ UnityEngine.RectTransform <contentTransform>k__BackingField;

    /*0xe183b0*/ ScrollContent();
    /*0xe183a0*/ UnityEngine.RectTransform get_contentTransform();
    /*0xe183a8*/ void set_contentTransform(UnityEngine.RectTransform value);
    int get_itemCount();
    void set_itemCount(int value);
    void Reset();
    void TryItemUpdate(int _item_index);
    void TryListUpdate(int _item_count);
    void TryListUpdate();
    int GetInstanceObjectIndex(UnityEngine.GameObject _item);
    UnityEngine.GameObject GetInstanceObject(int _item_index);

    enum ScrollType
    {
        Vertical = 0,
        Horizontal = 1,
    }

    enum AlignType
    {
        Left = 0,
        Center = 1,
        Right = 2,
    }

    struct ItemMargin
    {
        /*0x10*/ float left;
        /*0x14*/ float top;
        /*0x18*/ float right;
        /*0x1c*/ float bottom;
    }
}

class ScrollContent<T> : ScrollContent
{
    static /*0x0*/ System.Collections.Generic.List<int> _tempTableList;
    static /*0x0*/ System.Collections.Generic.List<T> _tempInstanceList;
    /*0x0*/ System.Action<int, T> eventItemUpdate;
    /*0x0*/ System.Collections.Generic.List<T> _instanceList;
    /*0x0*/ System.Collections.Generic.List<int> _itemIndexTable;
    /*0x0*/ UnityEngine.RectTransform _scrollrectTransform;
    /*0x0*/ UnityEngine.RectTransform _viewportTransform;
    /*0x0*/ int _curLeftTopIndex;
    /*0x0*/ int _curRightBottomIndex;
    /*0x0*/ float _scrollArea_Width;
    /*0x0*/ float _scrollArea_Height;
    /*0x0*/ int _viewRowItemCount;
    /*0x0*/ int _viewColumnItemCount;
    /*0x0*/ int _viewTotalItemCount;
    /*0x0*/ UnityEngine.Rect _rcItem;
    /*0x0*/ UnityEngine.Rect _rcView;
    /*0x0*/ bool _isValidItemPrefab;
    /*0x0*/ bool _isReserveUpdate;
    /*0x0*/ int _itemCount;

    static ScrollContent();
    ScrollContent();
    int get_itemCount();
    void set_itemCount(int value);
    void PreInit();
    void Awake();
    void Start();
    void OnEnable();
    void OnDisable();
    void Reset();
    void TryItemUpdate(int _item_index);
    void TryListUpdate(int _item_count);
    void TryListUpdate();
    bool ChangeItemPrefab(UnityEngine.GameObject prefab);
    int GetInstanceObjectIndex(UnityEngine.GameObject _item);
    UnityEngine.GameObject GetInstanceObject(int _item_index);
    int GetInstanceIndex(T _item);
    T GetInstance(int _item_index);
    System.Collections.Generic.List<T> GetInstnaceList();
    void SetScrollSettings(ScrollContent.ScrollType _eScrollType, ScrollContent.AlignType _eAlignType, ScrollContent.AlignType _eItemAlignType);
    void InitItem();
    void UpdateContentSize();
    void UpdateDefaultItemCount();
    void RefreshItemList();
    void SelectedItemIndex(int _index);
    float GetPosition(int _index, float _view_value, float _item_value);
    void OnValueChanged(UnityEngine.Vector2 _ratio);
    void FindItemIndex(UnityEngine.Vector2 _ratio, ref int _left_top_index, ref int _right_bottom_index);
    void OnDynamicAlign(bool _is_all);
    void SortInstanceList(ref int _fixed_start_index, ref int _fixed_end_index);
    void MoveInstance(int _start_index, int _move_count, int _insert_index);
    void CreateItemInstance(int _create_count);
    T CreateItemInstance();
    void RemoveItemInstance(int _remove_count);
    float GetItemPosX(int _item_index);
    float GetItemPosY(int _item_index);
    float GetItemWidth();
    float GetItemHeight();
    float GetContentWidth();
    float GetContentHeight();
    void ProcessMoveScroll(int _nIndex, float _fTime, float marginValue);
    void <Awake>b__23_0(UnityEngine.Vector2 _value);
}

class ScrollContent_ArtifactChangeEntity : ScrollContent<ArtifactChangeEntity>
{
    /*0xe189a4*/ ScrollContent_ArtifactChangeEntity();
}

class ScrollContent_AttendanceEntity : ScrollContent<AttendanceEntity>
{
    /*0xe18a1c*/ ScrollContent_AttendanceEntity();
}

class ScrollContent_BattlePassEntity : ScrollContent<BattlePassEntity>
{
    /*0xe18b0c*/ ScrollContent_BattlePassEntity();
}

class ScrollContent_CashShopPackageItem : ScrollContent<CashShopPackageItem>
{
    /*0xe18cec*/ ScrollContent_CashShopPackageItem();
}

class ScrollContent_ChannelGroupEntity : ScrollContent<ChannelGroupEntity>
{
    /*0xe18d64*/ ScrollContent_ChannelGroupEntity();
}

class ScrollContent_ChannelSelectEntity : ScrollContent<ChannelSelectEntity>
{
    /*0xe18ddc*/ ScrollContent_ChannelSelectEntity();
}

class ScrollContent_ChapterUserEntity : ScrollContent<ChapterUserEntity>
{
    /*0xe18e54*/ ScrollContent_ChapterUserEntity();
}

class ScrollContent_ChatBox : ScrollContent<ChatMessage>
{
    /*0xe18ecc*/ ScrollContent_ChatBox();
}

class ScrollContent_ChatChangeChannelEntity : ScrollContent<ChatChangeChannelEntity>
{
    /*0xe18f44*/ ScrollContent_ChatChangeChannelEntity();
}

class ScrollContent_ChatChannelEntity : ScrollContent<ChatChannelEntity>
{
    /*0xe18fbc*/ ScrollContent_ChatChannelEntity();
}

class ScrollContent_ChatEmoteEntity : ScrollContent<ChatEmoteEntity>
{
    /*0xe19034*/ ScrollContent_ChatEmoteEntity();
}

class ScrollContent_ContentShopItem : ScrollContent<ContentShopItem>
{
    /*0xe190ac*/ ScrollContent_ContentShopItem();
}

class ScrollContent_CustomProfileSlotEntity : ScrollContent<CustomProfileSlotEntity>
{
    /*0xe19124*/ ScrollContent_CustomProfileSlotEntity();
}

class ScrollContent_EquipChangeEntity : ScrollContent<EquipChangeEntity>
{
    /*0xe1928c*/ ScrollContent_EquipChangeEntity();
}

class ScrollContent_EventBannerEntity : ScrollContent<EventBannerEntity>
{
    /*0xe193f4*/ ScrollContent_EventBannerEntity();
}

class ScrollContent_EventExchangeEntity : ScrollContent<EventExchangeEntity>
{
    /*0xe1955c*/ ScrollContent_EventExchangeEntity();
}

class ScrollContent_EventMissionEntity : ScrollContent<EventMissionEntity>
{
    /*0xe195d4*/ ScrollContent_EventMissionEntity();
}

class ScrollContent_EventMissionPaybackEntity : ScrollContent<EventMissionPaybackEntity>
{
    /*0xe1964c*/ ScrollContent_EventMissionPaybackEntity();
}

class ScrollContent_FriendList : ScrollContent<FriendEntity>
{
    /*0xe196c4*/ ScrollContent_FriendList();
}

class ScrollContent_FriendManageEntity : ScrollContent<FriendManageEntity>
{
    /*0xe1973c*/ ScrollContent_FriendManageEntity();
}

class ScrollContent_FurnitureDismissSlot : ScrollContent<FurnitureDismissSlot>
{
    /*0xe197b4*/ ScrollContent_FurnitureDismissSlot();
}

class ScrollContent_GeneralArenaMatchEntity : ScrollContent<GeneralArenaMatchEntity>
{
    /*0xe198a4*/ ScrollContent_GeneralArenaMatchEntity();
}

class ScrollContent_GeneralArenaRecordEntity : ScrollContent<GeneralArenaRecordEntity>
{
    /*0xe1991c*/ ScrollContent_GeneralArenaRecordEntity();
}

class ScrollContent_GenericRankEntity : ScrollContent<GenericRankEntity>
{
    /*0xe19994*/ ScrollContent_GenericRankEntity();
}

class ScrollContent_GuildWarMatchEntity : ScrollContent<GuildWarMatchEntity>
{
    /*0xe19d54*/ ScrollContent_GuildWarMatchEntity();
}

class ScrollContent_GuildWarMemberEntity : ScrollContent<GuildWarMemberEntity>
{
    /*0xe19dcc*/ ScrollContent_GuildWarMemberEntity();
}

class ScrollContent_GuildWarRankEntity : ScrollContent<GuildWarRankEntity>
{
    /*0xe19e44*/ ScrollContent_GuildWarRankEntity();
}

class ScrollContent_GuildWarRecordEntity : ScrollContent<GuildWarRecordEntity>
{
    /*0xe19ebc*/ ScrollContent_GuildWarRecordEntity();
}

class ScrollContent_GuildWarRewardDetailEntity : ScrollContent<GuildWarRewardDetailEntity>
{
    /*0xe19f34*/ ScrollContent_GuildWarRewardDetailEntity();
}

class ScrollContent_GuildWarRewardEntity : ScrollContent<GuildWarRewardEntity>
{
    /*0xe19fac*/ ScrollContent_GuildWarRewardEntity();
}

class ScrollContent_HeroBookList : ScrollContent<HeroBookList>
{
    /*0xe1a09c*/ ScrollContent_HeroBookList();
}

class ScrollContent_HeroDismissSlot : ScrollContent<HeroDismissSlot>
{
    /*0xe1a114*/ ScrollContent_HeroDismissSlot();
}

class ScrollContent_HeroGuildWarEditSlot : ScrollContent<HeroGuildWarEditSlot>
{
    /*0xe1a18c*/ ScrollContent_HeroGuildWarEditSlot();
}

class ScrollContent_HeroGuildWarSelectHeroSlot : ScrollContent<HeroGuildWarSelectHeroSlot>
{
    /*0xe1a204*/ ScrollContent_HeroGuildWarSelectHeroSlot();
}

class ScrollContent_HeroGuildWarUnSelectHeroSlot : ScrollContent<HeroGuildWarUnSelectHeroSlot>
{
    /*0xe1a27c*/ ScrollContent_HeroGuildWarUnSelectHeroSlot();
}

class ScrollContent_HeroResonanceSlot : ScrollContent<HeroResonanceSlot>
{
    /*0xe1a36c*/ ScrollContent_HeroResonanceSlot();
}

class ScrollContent_HeroSlot : ScrollContent<HeroSlot>
{
    /*0xe1a3e4*/ ScrollContent_HeroSlot();
}

class ScrollContent_HeroSlotHousing : ScrollContent<HeroSlotHousing>
{
    /*0xe1a4d4*/ ScrollContent_HeroSlotHousing();
}

class ScrollContent_HeroSlotInventory : ScrollContent<HeroSlotInventory>
{
    /*0xe1a54c*/ ScrollContent_HeroSlotInventory();
}

class ScrollContent_HeroSlotMaze : ScrollContent<HeroSlotMaze>
{
    /*0xe1a5c4*/ ScrollContent_HeroSlotMaze();
}

class ScrollContent_HeroWishSlot : ScrollContent<WishPropertySlot>
{
    /*0xe1a63c*/ ScrollContent_HeroWishSlot();
}

class ScrollContent_ItemInfoSlot : ScrollContent<ItemInfoSlot>
{
    /*0xe1aaec*/ ScrollContent_ItemInfoSlot();
}

class ScrollContent_Mail : ScrollContent<MailEntity>
{
    /*0xe1abdc*/ ScrollContent_Mail();
}

class ScrollContent_MercenaryLendRequestEntity : ScrollContent<MercenaryLendRequestEntity>
{
    /*0xe1ac54*/ ScrollContent_MercenaryLendRequestEntity();
}

class ScrollContent_MercenaryLendedEntity : ScrollContent<MercenaryLendedEntity>
{
    /*0xe1accc*/ ScrollContent_MercenaryLendedEntity();
}

class ScrollContent_MercenaryRentEntity : ScrollContent<MercenaryRentEntity>
{
    /*0xe1ad44*/ ScrollContent_MercenaryRentEntity();
}

class ScrollContent_NoticeEntity : ScrollContent<NoticeEntity>
{
    /*0xe1adbc*/ ScrollContent_NoticeEntity();
}

class ScrollContent_PlayerProfileSlot : ScrollContent<PlayerProfileSlot>
{
    /*0xe1ae34*/ ScrollContent_PlayerProfileSlot();
}

class ScrollContent_PveRankClearRewardEntity : ScrollContent<PveRankClearRewardEntity>
{
    /*0xe1aeac*/ ScrollContent_PveRankClearRewardEntity();
}

class ScrollContent_PveRankInfoEntity : ScrollContent<PveRankInfoEntity>
{
    /*0xe1af24*/ ScrollContent_PveRankInfoEntity();
}

class ScrollContent_PveRankingBoardEntity : ScrollContent<PveRankingBoardEntity>
{
    /*0xe1af9c*/ ScrollContent_PveRankingBoardEntity();
}

class ScrollContent_QuestDailyEntity : ScrollContent<QuestDailyEntity>
{
    /*0xe1b014*/ ScrollContent_QuestDailyEntity();
}

class ScrollContent_QuestGeneralEntity : ScrollContent<QuestGeneralEntity>
{
    /*0xe1b08c*/ ScrollContent_QuestGeneralEntity();
}

class ScrollContent_RacePastEntity : ScrollContent<RacePastEntity>
{
    /*0xe1b104*/ ScrollContent_RacePastEntity();
}

class ScrollContent_RandomItemSlot : ScrollContent<RandomItemSlot>
{
    /*0xe1b17c*/ ScrollContent_RandomItemSlot();
}

class ScrollContent_RankBoardRankEntity : ScrollContent<RankBoardRankEntity>
{
    /*0xe1b1f4*/ ScrollContent_RankBoardRankEntity();
}

class ScrollContent_RankBoardRewardEntity : ScrollContent<RankBoardRewardEntity>
{
    /*0xe1b26c*/ ScrollContent_RankBoardRewardEntity();
}

class ScrollContent_RankRewardEntity : ScrollContent<RankRewardEntity>
{
    /*0xe1b2e4*/ ScrollContent_RankRewardEntity();
}

class ScrollContent_RelationListEntity : ScrollContent<RelationListEntity>
{
    /*0xe1b3d4*/ ScrollContent_RelationListEntity();
}

class ScrollContent_SelectItem : ScrollContent<ItemSelectEntity>
{
    /*0xe1b5b4*/ ScrollContent_SelectItem();
}

class ScrollContent_TriggerMissionEntity : ScrollContent<TriggerMissionEntity>
{
    /*0xe1b8fc*/ ScrollContent_TriggerMissionEntity();
}

class ScrollContent_TroopTeamEntity : ScrollContent<TroopTeamEntity>
{
    /*0xe1b974*/ ScrollContent_TroopTeamEntity();
}

class ScrollContent_TroopTeamEntitySelector : ScrollContent<TroopTeamEntitySelector>
{
    /*0xe1b9ec*/ ScrollContent_TroopTeamEntitySelector();
}

class ScrollContent_UpgradeEquipSlot : ScrollContent<UpgradeEquipSlot>
{
    /*0xe1ba64*/ ScrollContent_UpgradeEquipSlot();
}

class ScrollContent_WorldArenaFightEntity : ScrollContent<WorldArenaFightEntity>
{
    /*0xe1bb54*/ ScrollContent_WorldArenaFightEntity();
}

class ScrollContent_WorldArenaRankEntity : ScrollContent<WorldArenaRankEntity>
{
    /*0xe1bbcc*/ ScrollContent_WorldArenaRankEntity();
}

class ScrollContent_WorldArenaRewardEntity : ScrollContent<WorldArenaRewardEntity>
{
    /*0xe1bc44*/ ScrollContent_WorldArenaRewardEntity();
}

class TweenComponent : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.AnimationCurve m_aniCurve;
    /*0x20*/ bool m_useClamp;
    /*0x24*/ UnityEngine.Vector3 m_vStart;
    /*0x30*/ UnityEngine.Vector3 m_vTarget;
    /*0x3c*/ float m_fTime;
    /*0x40*/ bool m_bLoop;
    /*0x48*/ System.Collections.IEnumerator mEnumerator;

    /*0x11323b4*/ TweenComponent();
    /*0x1132288*/ void Init(UnityEngine.Vector3 _start, UnityEngine.Vector3 _target, float _fTime, bool _bLoop);
    /*0x11322f4*/ void OnlyInit(UnityEngine.Vector3 _start, UnityEngine.Vector3 _target, float _fTime, bool _bLoop);
    /*0x1132310*/ void Stop();
    void OnProcess(float _Time);
    /*0x1132340*/ System.Collections.IEnumerator ProcessAniCurve();
    /*0x11323ac*/ UnityEngine.AnimationCurve GetCurve();

    class <ProcessAniCurve>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TweenComponent <>4__this;
        /*0x28*/ float <factor>5__2;

        /*0xd8a20c*/ <ProcessAniCurve>d__11(int <>1__state);
        /*0xd8a238*/ void System.IDisposable.Dispose();
        /*0xd8a23c*/ bool MoveNext();
        /*0xd8a32c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8a334*/ void System.Collections.IEnumerator.Reset();
        /*0xd8a374*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TweenImageColor : TweenComponent
{
    /*0x50*/ UnityEngine.Color32 _beginColor;
    /*0x54*/ UnityEngine.Color32 _TargetColor;

    /*0x1132728*/ TweenImageColor();
    /*0x113241c*/ UnityEngine.Color32 GetCurrentBegionColor();
    /*0x1132424*/ UnityEngine.Color32 GetCurrentTargetColor();
    /*0x113242c*/ void Init(UnityEngine.Color _start, UnityEngine.Color _target, float _fTime, bool _bLoop);
    /*0x1132504*/ void OnlyInit(UnityEngine.Color _start, UnityEngine.Color _target, float _fTime, bool _bLoop);
    /*0x11325cc*/ void OnlyInit(float _fTime, bool _bLoop);
    /*0x1132634*/ void OnProcess(float _Time);
    /*0x113271c*/ void OnProcessColor(float _Time);
}

class TweenPosition : TweenComponent
{
    /*0x113283c*/ TweenPosition();
    /*0x1132770*/ void OnProcess(float _Time);
}

class TweenRotation : TweenComponent
{
    /*0x113290c*/ TweenRotation();
    /*0x1132840*/ void OnProcess(float _Time);
}

class TweenScale : TweenComponent
{
    /*0x11329dc*/ TweenScale();
    /*0x1132910*/ void OnProcess(float _Time);
}

class CustomButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    /*0x18*/ bool m_Mirror;
    /*0x20*/ UnityEngine.Events.UnityEvent m_ButtonAction;
    /*0x28*/ ButtonSound m_DownButtonSound;
    /*0x2c*/ ButtonSound m_UpButtonSound;
    /*0x30*/ UnityEngine.Vector2 m_Scale;
    /*0x38*/ System.Collections.Generic.List<UnityEngine.GameObject> m_ButtonObjectList;
    /*0x40*/ bool m_bIsEnabled;

    /*0xf4e3b8*/ CustomButton();
    /*0xf4df9c*/ bool get_Enabled();
    /*0xf4dfa4*/ void set_Enabled(bool value);
    /*0xf4dfb0*/ System.Action get_GetButtonAction();
    /*0xf4e028*/ UnityEngine.Events.UnityEvent get_GetButtonEvent();
    /*0xf4e030*/ void SetDownScale(UnityEngine.Vector2 scale);
    /*0xf4e038*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf4e1cc*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf4e1e8*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf4e324*/ void AddEvent(UnityEngine.Events.UnityAction evt);
    /*0xf4e340*/ void ClearEvent();
    /*0xf4e35c*/ void ResetEvent();
    /*0xf4e444*/ void <get_GetButtonAction>b__11_0();
}

class Utils
{
    static float FLOAT_EPSILON = 0.00009999999747378752;
    static /*0x0*/ int _encryptIntKeyNum;
    static /*0x4*/ float _encryptFloatKeyNum;
    static /*0x8*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<int, int>> _encriptIntDic;
    static /*0x10*/ System.Collections.Generic.Dictionary<float, System.ValueTuple<float, float>> _encriptFloatDic;
    static /*0x18*/ System.Globalization.Calendar _calender;

    static /*0x10d0f40*/ Utils();
    static T GetOrAddComponent<T>(UnityEngine.GameObject gameObject);
    static /*0x10c9158*/ void ResetLocalTransform(UnityEngine.Transform transform);
    static /*0x10c91b4*/ void SafeActive(UnityEngine.GameObject go, bool enable);
    static /*0x10c9254*/ void SafeActive(UnityEngine.MonoBehaviour mono, bool enable);
    static bool IsDefinedEnum<T>(string find_value);
    static /*0x10c9300*/ void SetLocalX(UnityEngine.Transform transform, float x);
    static /*0x10c9358*/ void SetLocalY(UnityEngine.Transform transform, float y);
    static /*0x10c93b0*/ void SetLocalZ(UnityEngine.Transform transform, float z);
    static T ParseEnum<T>(string parseString, T defaultValue);
    static T ParseEnum_Upper<T>(string parseString, T defaultValue);
    static /*0x10c9408*/ int[] ParseProfileIDs(string profileids);
    static /*0x10c95a0*/ int[] ParseProfileIDs(string profileids, char splitchar);
    static System.Collections.Generic.Dictionary<string, T> ToDictionaryEnum<T>(T enumList);
    static System.Collections.Generic.List<string> ToListEnum<T>(T enumList);
    static /*0x10c9738*/ bool IsWidthStratchMode(UnityEngine.RectTransform _rectTransform);
    static /*0x10c97f0*/ bool topStretch(UnityEngine.RectTransform uiObject);
    static /*0x10c9860*/ bool MiddleStretch(UnityEngine.RectTransform uiObject);
    static /*0x10c98d4*/ bool BottomStretch(UnityEngine.RectTransform uiObject);
    static /*0x10c993c*/ void SetLeft(UnityEngine.RectTransform rt, float left);
    static /*0x10c9980*/ void SetRight(UnityEngine.RectTransform rt, float right);
    static /*0x10c99c4*/ void SetTop(UnityEngine.RectTransform rt, float top);
    static /*0x10c9a08*/ void SetBottom(UnityEngine.RectTransform rt, float bottom);
    static /*0x10c9a4c*/ void ResetRect(UnityEngine.RectTransform rt);
    static /*0x10c9ad4*/ string DeleteEndWithSpace(string _message);
    static /*0x10c9bc4*/ void SetText(UnityEngine.UI.Text _text, string _textValue);
    static /*0x10c9be4*/ void SetLocalizeString(UnityEngine.UI.Text _text, string _localizeString);
    static /*0x10c9d10*/ void SetText(UnityEngine.UI.Text _text, string _textValue, UnityEngine.Color _textColor);
    static /*0x10c9d84*/ void SetText(UnityEngine.UI.Text _text, string _textValue, int _nTextSize);
    static /*0x10c9dc8*/ void SetText(UnityEngine.UI.Text _text, string _textValue, UnityEngine.Color _textColor, int _nTextSize);
    static /*0x10c9e50*/ void SetSkeletonGraphics(Spine.Unity.SkeletonGraphic _graphics, Spine.Unity.SkeletonDataAsset _asset, bool _duplicate, string _startingAnimName, string _skinName, bool _startingloop, bool _freeze, bool _overwrite);
    static /*0x10ca024*/ TableData.TableData_Unitbase SetSkeletonGraphics(Spine.Unity.SkeletonGraphic _graphics, TableData.TableData_Unitbase unitbase, PTShare.Define.SHero hero, bool _duplicate, string _startingAnimName, string _skinName, bool _startingloop, bool _freeze, bool _overwrite);
    static /*0x10ca1d8*/ TableData.TableData_Unitbase SetSkeletonGraphics(Spine.Unity.SkeletonGraphic _graphics, int _skinid, bool _duplicate, string _startingAnimName, string _skinName, bool _startingloop, bool _freeze, bool _overwrite);
    static /*0x10ca31c*/ string ReturnParams(System.Collections.Generic.Dictionary<int, int> _dics, char _char);
    static /*0x10ca690*/ string[] SplitJsonParams(string _rewardstr);
    static /*0x10ca724*/ UnityEngine.Color GetHtmlColor(string _html);
    static /*0x10ca7d0*/ string SafeHttlString(string str);
    static /*0x10ca84c*/ string Half2Full(string sHalf, string warningCode);
    static /*0x10ca998*/ string Trim(string data);
    static T1 GetReflection<T1, T2>(T2 data, string field);
    static /*0x10caacc*/ System.Collections.IEnumerator CoLateCallBack(System.Action callBack);
    static /*0x10cab38*/ System.Collections.IEnumerator CoScreenCapture(int sizeX, int sizeY, int destX, int destY, UnityEngine.Rect captureArea, System.Action<UnityEngine.Texture2D> callBack);
    static /*0x10cabf4*/ UnityEngine.Texture2D ResizeTexture(UnityEngine.Texture2D source, UnityEngine.Vector2 size);
    static /*0x10caf8c*/ bool isRooted();
    static /*0x10cb12c*/ bool IsEmulator();
    static /*0x10cb124*/ bool isRootedPrivate(string path);
    static /*0x10cb44c*/ void SetOpecity(UnityEngine.UI.Image _image, float _opecity);
    static /*0x10cb504*/ void SetRaycast(UnityEngine.UI.Graphic _graphic, bool _enable);
    static /*0x10cb528*/ void InGameUtilsInit();
    static /*0x10cb6c8*/ void EncryptInt(ref int key, int value);
    static /*0x10cb840*/ void EncryptFloat(ref float key, float value);
    static /*0x10cb9c0*/ int DecryptInt(int key);
    static /*0x10cbab8*/ float DecryptFloat(float key);
    static /*0x10cbbb8*/ void ClearFlag(ref Battle.CharacterFlag flag);
    static /*0x10cbbc0*/ void ClearFlag(ref Battle.BuffFlag flag);
    static /*0x10cbbc8*/ void ClearFlag(ref Battle.StateFlag flag);
    static /*0x10cbbd0*/ void ClearFlag(ref Battle.BattleStateType flag);
    static /*0x10cbbd8*/ void SetFlag(ref Battle.CharacterFlag flag, Battle.CharacterFlag value, bool boolean);
    static /*0x10cbc04*/ void SetFlag(ref Battle.BuffFlag flag, Battle.BuffFlag value, bool boolean);
    static /*0x10cbc30*/ void SetFlag(ref Battle.StateFlag flag, Battle.StateFlag value, bool boolean);
    static /*0x10cbc5c*/ void SetFlag(ref Battle.BattleStateType flag, Battle.BattleStateType value, bool boolean);
    static /*0x10cbc88*/ bool FlagEquals(Battle.CharacterFlag flag, Battle.CharacterFlag compare);
    static /*0x10cbc94*/ bool FlagEquals(Battle.BuffFlag flag, Battle.BuffFlag compare);
    static /*0x10cbca0*/ bool FlagEquals(Battle.StateFlag flag, Battle.StateFlag compare);
    static /*0x10cbcac*/ bool FlagEquals(Battle.BattleStateType flag, Battle.BattleStateType compare);
    static /*0x10cbcb8*/ Battle.Direction GetDirection(ref UnityEngine.Vector3 scale);
    static /*0x10cbccc*/ Battle.Direction GetDirection(ref UnityEngine.Vector2 scale);
    static /*0x10cbce0*/ Battle.Direction GetDirection(UnityEngine.Transform trans);
    static /*0x10cbd10*/ bool CheckUnitID(int _nUnitID);
    static /*0x10cbe44*/ bool IsHero(int _nUnitID);
    static /*0x10ca1c8*/ bool IsHeroMonster(int _nUnitID);
    static /*0x10cbe50*/ bool IsMonster(CharacterBase _character);
    static /*0x10cbee0*/ bool IsHeroMonster(CharacterBase _character);
    static /*0x10cbf70*/ bool IsHeroSlime(CharacterBase _character);
    static /*0x10cc000*/ void TransColliderCircleToRectangle(ref Battle.ColliderData _colliderData);
    static /*0x10cc02c*/ void TransColliderForIdleMode(ref Battle.ColliderData _colliderData);
    static /*0x10cc048*/ bool ColliderEquals(ref Battle.ColliderData a, ref Battle.ColliderData b);
    static /*0x10cc090*/ bool IsEqual(float x, float y);
    static /*0x10cc0c0*/ bool IsEqualOrLarge(float x, float y);
    static /*0x10cc0fc*/ bool IsEqualOrSmall(float x, float y);
    static System.Collections.Generic.List<T> SafeClear<T>(System.Collections.Generic.List<T> _list);
    static /*0x10cc138*/ string GetStringTime_MinSec(int _time);
    static /*0x10cc218*/ bool CheckCooltime(ref float _cooltime, float _deltaTime);
    static /*0x10cc250*/ void DebugWithParams(UnityEngine.Color _color, bool _spacing, object[] _params);
    static /*0x10cc394*/ System.Enum GetEnum(System.Type type, int value);
    static /*0x10cc4cc*/ int GetRoundInt(float _floatValue);
    static /*0x10cc4d4*/ float GetRound(float _floatValue);
    static /*0x10cc564*/ int ToInt(float _floatValue);
    static /*0x10cc5d0*/ int ToInt(double _doubleValue);
    static /*0x10cc63c*/ long ToLong(float _floatValue);
    static /*0x10cc6a8*/ long ToLong(double _doubleValue);
    static /*0x10cc714*/ TableData.TableData_Skillfx DeepCopy(TableData.TableData_Skillfx _skillFX);
    static /*0x10cc884*/ bool IsVisibleFrom(UnityEngine.Renderer renderer, UnityEngine.Camera camera);
    static /*0x10cc8f4*/ float GetEventTime(Spine.Animation anim, string eventName);
    static /*0x10ccaac*/ string[] GetEventNames(Spine.Animation anim);
    static /*0x10cccb8*/ void SetCurrencySpritem(AtlasImage _image, PTShare.Define.Currency _type, bool _isBig);
    static /*0x10cd088*/ void SetResetPointSprite(AtlasImage _image, PTShare.Define.ResetPointType _type, bool _isBig);
    static /*0x10cd1e8*/ void SetUserExpSpritem(AtlasImage _image, bool _isBig);
    static /*0x10cd2c0*/ void SetVipPointSpritem(AtlasImage _image, bool _isBig);
    static /*0x10c0fd0*/ void SetPropertySprite(AtlasImage _image, int _type);
    static /*0x10cd398*/ void SetIllustBgSprite(AtlasImage _image, int _type);
    static /*0x10cd4a0*/ void SetIllustFrameSprite(AtlasImage _image, int _type);
    static /*0x10cd5a8*/ void SetHeroSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10cd700*/ void SetHeroSlotBgSprite(AtlasImage _image, int _grade);
    static /*0x10cd858*/ void SetEquipSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10cd960*/ void SetEquipSlotBgSprite(AtlasImage _image, int _grade);
    static /*0x10cda68*/ void SetItemSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10cdb70*/ void SetItemSlotBgSprite(AtlasImage _image, int _grade);
    static /*0x10cdc78*/ void SetPropertyCardEnableSprite(AtlasImage _image, int _type);
    static /*0x10cdd80*/ void SetPropertyCardDisableSprite(AtlasImage _image, int _type);
    static /*0x10cde88*/ void SetGachaCardFrameSprite(AtlasImage _image, int _type);
    static /*0x10cdf8c*/ void SetGachaCardBackgroundSprite(AtlasImage _image, int _type);
    static /*0x10ce090*/ void SetGradeTitleBackgroundSprite(AtlasImage _image, int _grade);
    static /*0x10ce1e8*/ void SetGradeTextImageSprite(AtlasImage _image, int _grade);
    static /*0x10ce340*/ void SetStatusTypeIconSprite(AtlasImage _image, int _type);
    static /*0x10ce444*/ void SetClassTypeIconSprite(AtlasImage _image, int _type);
    static /*0x10ce54c*/ void SetSexIconSprite(AtlasImage _image, int _type);
    static /*0x10ce650*/ void SetHeroFootHoldSprite(AtlasImage _image, int _grade);
    static /*0x10c0d20*/ void SetHeroBattleSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10c0e78*/ void SetHeroBattleSlotBackgroundSprite(AtlasImage _image, int _grade);
    static /*0x10ce7a8*/ void SetGenderSprite(AtlasImage _image, int _gender);
    static /*0x10ce8ac*/ void SetGuildBuildingSprite(AtlasImage _image, int _position);
    static /*0x10ce97c*/ void SetGuildEmblemSprite(AtlasImage _image, int _index);
    static /*0x10cea6c*/ void SetPlatformIcon(AtlasImage _image, int _index);
    static /*0x10ceb74*/ void SetGradeNameCard(AtlasImage _image, int _initGrade);
    static /*0x10ceca4*/ AtlasImage SetTrainningStatusIcon(AtlasImage image, TrainningStatusType type, string value);
    static /*0x10ceec8*/ AtlasImage SetTierIcon(AtlasImage image, int tier, bool isBig);
    static /*0x10cf028*/ void SetGuildBossRewardBox(AtlasImage image, int step);
    static /*0x10cf114*/ void SetStageTowerBackground(AtlasImage image, int faction);
    static /*0x10cf220*/ void SetStageTowerDoorBackground(AtlasImage image, int faction);
    static /*0x10cf33c*/ void SetDungeonItemIcon(AtlasImage _image, int itemId, bool isBig);
    static /*0x10cf438*/ void SetFactionRankBgSprite(AtlasImage _image, int _type);
    static /*0x10cf540*/ void SetFactionRankBannerSprite(AtlasImage _image, int _type);
    static /*0x10cf648*/ void SetUpDownArrowIcon(AtlasImage _image, int _value);
    static /*0x10cf728*/ void SetFurnitureBG(AtlasImage _image, int _grade);
    static /*0x10cf7e8*/ void SetAbilityGrade(AtlasImage _image, int _grade);
    static /*0x10cf8ec*/ void SetAbilityGradeIcon(AtlasImage _image, int _grade);
    static /*0x10cfa30*/ void SetAbilityBG(AtlasImage _image, int _grade);
    static /*0x10cfb34*/ void SetAbilityBG2(AtlasImage _image, int _grade);
    static /*0x10cfc38*/ void SetRewardIcon(AtlasImage _image, Rewards _reward, bool _isBig);
    static /*0x10cfd64*/ void SetRewardSpinBG(AtlasImage _image, bool banner);
    static /*0x10cfe2c*/ void SetPveFrame(AtlasImage _image, int _difficulty);
    static /*0x10cff30*/ void SetPveTop3(AtlasImage _image, int _rank);
    static /*0x10d0034*/ void SetBattlePassButton(AtlasImage _image, int _pass);
    static /*0x10d0138*/ void SetBattlePassLine(AtlasImage _image, int _pass, bool _enable);
    static /*0x10d0268*/ void SetBattlePassSlot(AtlasImage _image, int _pass, bool _enable);
    static /*0x10d0398*/ int GetWeekIndex(System.DateTime now, int standYear, int standMonth, int count);
    static /*0x10d04b4*/ System.DateTime GetFirstSunday(int year, int month);
    static /*0x10d052c*/ System.DateTime GetWeekSunday(System.DateTime time);
    static /*0x10d0578*/ System.DateTime GetNextWeekSunday(System.DateTime time);
    static /*0x10d05e8*/ System.DateTime GetWeekMonday(System.DateTime time);
    static /*0x10d067c*/ System.DateTime GetNextWeekMonday(System.DateTime time);
    static /*0x10d0710*/ System.DateTime GetOffsetCurrentTime(System.DateTime time);
    static /*0x10d0804*/ string GetConvertString(System.DateTime time);

    class <>c
    {
        static /*0x0*/ Utils.<> <>9;
        static /*0x8*/ System.Func<string, int> <>9__10_0;
        static /*0x10*/ System.Func<string, int> <>9__11_0;
        static /*0x18*/ System.Func<char, bool> <>9__37_0;
        static /*0x20*/ System.Converter<Spine.Event, string> <>9__98_0;

        static /*0xd8b440*/ <>c();
        /*0xd8b4a0*/ <>c();
        /*0xd8b4a8*/ int <ParseProfileIDs>b__10_0(string s);
        /*0xd8b4b4*/ int <ParseProfileIDs>b__11_0(string s);
        /*0xd8b4c0*/ bool <Trim>b__37_0(char w);
        /*0xd8b4f8*/ string <GetEventNames>b__98_0(Spine.Event x);
    }

    class <CoLateCallBack>d__39 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action callBack;

        /*0xd8b554*/ <CoLateCallBack>d__39(int <>1__state);
        /*0xd8b580*/ void System.IDisposable.Dispose();
        /*0xd8b584*/ bool MoveNext();
        /*0xd8b5e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8b5e8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8b628*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoScreenCapture>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int sizeX;
        /*0x24*/ int sizeY;
        /*0x28*/ UnityEngine.Rect captureArea;
        /*0x38*/ int destX;
        /*0x3c*/ int destY;
        /*0x40*/ System.Action<UnityEngine.Texture2D> callBack;
        /*0x48*/ UnityEngine.Texture2D <texture>5__2;

        /*0xd8b630*/ <CoScreenCapture>d__40(int <>1__state);
        /*0xd8b65c*/ void System.IDisposable.Dispose();
        /*0xd8b660*/ bool MoveNext();
        /*0xd8b7c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8b7c8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8b808*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass97_0
    {
        /*0x10*/ string eventName;
        /*0x18*/ System.Func<Spine.Event, bool> <>9__0;

        /*0xd8b51c*/ <>c__DisplayClass97_0();
        /*0xd8b524*/ bool <GetEventTime>b__0(Spine.Event x);
    }
}

class CSVBank
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.String[]>> Map;

    static /*0x1340100*/ CSVBank();
    static /*0x133fa94*/ void Unzip(string zipFilePath);
}

class AnimSyncDataLoader
{
    static /*0x0*/ string load_character_name;

    static /*0xedd4c4*/ AnimSyncIntegratedDataLoader.LoadResult LoadSyncData(string sUnitBundleName, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, ref int[,] _EventCount);
    static /*0xeddb54*/ void SetEventInfo(ref AnimEventSaveInfo _src_data, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> _event_info_dic, ref int[,] _event_count);
    static /*0xeddcbc*/ void ForceMakeSyncData(TableData.TableData_Unitbase Unit_script, ref ActorAnimSyncData _result);
    static /*0xedd954*/ void Load_Binary(int readVer, System.IO.BinaryReader binReader, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, ref int[,] _EventCount, int iTotalEventCount);
    /*0xeddd6c*/ AnimSyncDataLoader();
}

enum ANIMEVENT_TYPE
{
    EFFECT = 0,
    SOUND = 1,
    SKILL_FX = 2,
    PROJECTILE = 3,
    SHADER = 4,
    CAMERA_SHAKE = 5,
}

enum ANIM_EVENT_COUNT
{
    MAX = 6,
}

struct AnimEventType
{
    static /*0xedcb84*/ string TypeToString(ANIMEVENT_TYPE eType);
    static /*0xedcc78*/ ANIMEVENT_TYPE TypeToEnum(string sType);
    static /*0xedcd40*/ bool IsAttackSync(ANIMEVENT_TYPE eType);
    static /*0xedcd50*/ bool IsScreenEffectSync(ANIMEVENT_TYPE eType);
}

struct FireEffectInfo
{
    /*0x10*/ string sEffectName;
    /*0x18*/ Battle.EffectTargetType eEffectTargetType;
    /*0x1c*/ Battle.EffectOwnerType eEffectOwnerType;
    /*0x20*/ AssetBundleType eAssetbundleType;
    /*0x24*/ BONE_TYPE eBoneType;
    /*0x28*/ EFFECT_ATTACH_TYPE eEffectAttachType;
    /*0x2c*/ EFFECT_FORWARD_TYPE eEffectForwardType;
    /*0x30*/ UnityEngine.Vector3 vEffectOffsetPos;
    /*0x3c*/ UnityEngine.Vector3 vEffectOffsetRot;
    /*0x48*/ bool isInheritOwnerScale;
    /*0x4c*/ float fAdjustmentPosition;
    /*0x50*/ float fModelRadius;
    /*0x54*/ float fModelScale;

    static /*0x11da0b8*/ FireEffectInfo GetInfo(AnimEvent animEvent);
    static /*0x11da0fc*/ FireEffectInfo GetInfo(string sEffectName, Battle.EffectTargetType eEffectTargetType, Battle.EffectOwnerType eEffectOwnerType, AssetBundleType _eAssetbundleType);
}

enum TELEPORT_HIT_TYPE
{
    BeginTeleportHit = 0,
    ToOriginalPosition = 1,
    ToForwardOfTarget = 2,
    ToBackwardOfTarget = 3,
    DontMoveOnlyAttack = 4,
}

struct TeleportHitType
{
    static /*0x1167708*/ string TypeToString(TELEPORT_HIT_TYPE eType);
    static /*0x11677fc*/ TELEPORT_HIT_TYPE TypeToEnum(string sType);
}

enum EFFECT_ATTACH_TYPE
{
    ONCE_POSITION = 0,
    ATTACH = 1,
    UPDATE = 2,
}

struct EffectAttachType
{
    static /*0x14b8940*/ string TypeToString(EFFECT_ATTACH_TYPE eType);
    static /*0x14b8a34*/ EFFECT_ATTACH_TYPE TypeToEnum(string sType);
}

enum EFFECT_FORWARD_TYPE
{
    ACTOR = 0,
    PARENT = 1,
    TEAM = 2,
}

struct EffectForwardType
{
    static /*0x14b8afc*/ string TypeToString(EFFECT_FORWARD_TYPE eType);
    static /*0x14b8bf0*/ EFFECT_FORWARD_TYPE TypeToEnum(string sType);
}

struct SYNC_DATA_VERSION
{
    static /*0x0*/ int ver;

    static /*0x129fdb4*/ SYNC_DATA_VERSION();
}

enum ANIMATION_CLIP
{
    NONE = 0,
    IDLE = 1,
    IDLE_UNARM = 2,
    IDLE_BDRAGON_SP_03 = 3,
    MOVE = 4,
    MOVE_UNARM = 5,
    JUMP = 6,
    JUMP_UNARM = 7,
    COUNTER = 8,
    STUN = 9,
    STUN_UNARM = 10,
    FREEZE = 11,
    SLEEP = 12,
    HORROR = 13,
    HORROR_UNARM = 14,
    FALL = 15,
    FALL_UNARM = 16,
    DEATH_01 = 17,
    DEATH_02 = 18,
    DEATH_03 = 19,
    DEATH_UNARM = 20,
    ATK_01 = 21,
    ATK_02 = 22,
    ULT_01 = 23,
    SP_01 = 24,
    SP_02 = 25,
    SP_03 = 26,
    WIN = 27,
    LOSE = 28,
    IN = 29,
    END = 30,
}

struct AnimState
{
    static /*0xedcd5c*/ string StateToString(ANIMATION_CLIP _anistate);
    static /*0xedcf1c*/ ANIMATION_CLIP StateToEnum(string sState);
}

enum BONE_TYPE
{
    Bip001_Footsteps = 0,
    Bip001_HeadTop = 1,
    Bip001_Spine = 2,
    Bip001_Head = 3,
    Bip001_L_Hand = 4,
    Bip001_R_Hand = 5,
    L_Weapon_Tail = 6,
    R_Weapon_Tail = 7,
    Locomotion = 8,
    Weapon_Enchant = 9,
}

struct BoneType
{
    static /*0x1363a18*/ string TypeToString_ForFindBone(BONE_TYPE eType);
    static /*0x1363b24*/ string TypeToString(BONE_TYPE eType);
    static /*0x1363c18*/ BONE_TYPE TypeToEnum_ForFindBone(string sType);
    static /*0x1363c40*/ BONE_TYPE TypeToEnum(string sType);
}

struct AnimEventSaveInfo
{
    /*0x10*/ string sAnimState;
    /*0x18*/ float timeTotal;
    /*0x1c*/ float timeHit;
    /*0x20*/ float normalHitRatio;
    /*0x28*/ string sEventType;
    /*0x30*/ string sEffectName;
    /*0x38*/ string sEffectTargetType;
    /*0x40*/ string sEffectOwnerType;
    /*0x48*/ string sSoundAssetBundleType;
    /*0x50*/ string sSoundName;
    /*0x58*/ float fSoundPlayDelay;
    /*0x60*/ string sProjectilePositionType;
    /*0x68*/ string sProjectileName;
    /*0x70*/ float _scfx_time_execute_trans;
    /*0x74*/ float _scfx_time_undo_trans;
    /*0x78*/ float _scfx_time_keep;
    /*0x7c*/ float _scfx_shake_power;
    /*0x80*/ string sUnitShaderType;
    /*0x88*/ float fUnitShaderDruation;
    /*0x90*/ string sSkillFXID;
}

class AnimEvent
{
    /*0x10*/ AssetBundleType assetBundleType;
    /*0x14*/ ANIMATION_CLIP eAnimState;
    /*0x18*/ AnimEventSaveInfo info;
    /*0xa0*/ ANIMEVENT_TYPE eEventType;
    /*0xa4*/ AssetBundleType eSoundAssetBundleType;
    /*0xa8*/ Battle.EffectTargetType eEffectTargetType;
    /*0xac*/ Battle.EffectOwnerType eEffectOwnerType;
    /*0xb0*/ Battle.BonePositionType eProjectileBoneType;
    /*0xb4*/ Battle.UnitShaderType eShaderType;
    /*0xb8*/ Battle.SkillFXID eSkillFXID;

    static /*0xedca5c*/ string EventTypeToString(AnimEvent sourceEvent);
    /*0xedc9f8*/ AnimEvent();
}

interface T
{
}

class Helper_ScreenEffect
{
    static /*0x110239c*/ void Apply_ShakeCamera(float _shake_power, float _fixed_time);
    static /*0x1102414*/ void Apply_MoveCamera(CharacterBase modelController, AnimEvent animEvent);
    static /*0x110247c*/ void Apply_ZoomCamera(AnimEvent animEvent, System.Action _OnCompleteAction);
    static /*0x1102480*/ void Apply_ShakeCamera(AnimEvent animEvent, System.Action _OnCompleteAction);
    static /*0x1102528*/ void Apply_DarkChange(AnimEvent animEvent);
    static /*0x110252c*/ void Apply_ColorChange(AnimEvent animEvent);
    static /*0x1102530*/ void Apply_GameSpeed(AnimEvent animEvent);
    /*0x1102534*/ Helper_ScreenEffect();
}

class AnimSyncIntegratedDataLoader
{
    static /*0x0*/ AnimSyncIntegratedDataLoader.LoadDataType load_data_type;
    static /*0x8*/ string load_character_name;
    static /*0x10*/ System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> load_event_dic;
    static /*0x18*/ int[,] load_event_count;

    static /*0xedf568*/ AnimSyncIntegratedDataLoader();
    static /*0xeddd74*/ AnimSyncIntegratedDataLoader.LoadResult LoadBinSyncData(string sActorBundleName, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, ref int[,] _EventCount);
    static /*0xede3ac*/ void LoadAnimationSaveInfo(int readVer, System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode);
    static /*0xede54c*/ void Read_Ver_7(System.IO.BinaryReader binReader, SimpleJSON.JSONNode item, ref AnimEventSaveInfo info);
    static /*0xede944*/ void Read_Ver_8(System.IO.BinaryReader binReader, SimpleJSON.JSONNode item, ref AnimEventSaveInfo info);
    static /*0xede9dc*/ void SetEventInfo(ref AnimEventSaveInfo _src_data);
    static /*0xededd8*/ void ForceMakeSyncData(TableData.TableData_Unitbase actor_script, ref ActorAnimSyncData _result);
    static /*0xedee88*/ void ForceMakeSyncData_Impl(ref ActorAnimSyncData _result, ANIMATION_CLIP eAnimState);
    static /*0xede244*/ void SetLoadInfo(AnimSyncIntegratedDataLoader.LoadDataType dataType, string bundleName, System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, int[,] _EventCount);
    static /*0xede4ac*/ void ClearLoadInfo();
    static /*0xede2f0*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref int ReadData);
    static /*0xeded1c*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref float ReadData);
    static /*0xedefe4*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref bool ReadData);
    static /*0xedec40*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref string ReadData);
    static /*0xedf188*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref UnityEngine.Vector3 ReadData);
    static /*0xedf41c*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref UnityEngine.Color ReadData);
    static /*0xedf0d8*/ string SetStringNormalize(string _str);
    static /*0xedf2bc*/ UnityEngine.Vector3 StringToVector3(string _strVector3);
    static /*0xedeb84*/ SimpleJSON.JSONNode refJSONValue(SimpleJSON.JSONNode rootNode, string nodeKey);
    /*0xedf560*/ AnimSyncIntegratedDataLoader();

    enum LoadResult
    {
        Success = 0,
        NotFoundSyncFile = 1,
        NotFoundJsonFile = 2,
        End_Steady = 3,
        Failed_Small_FileSize = 4,
        Failed_Invalid_Character_Name = 5,
        Failed_FileOpen = 6,
        Failed_OverVersion = 7,
        Failed_Nothing_OldVersion_Load_Function = 8,
        Failed_Read_Total_Event_Count = 9,
        Failed_Read_Version = 10,
        Failed_Read_CrashFile = 11,
        Failed_Read_Binreader_Allocate = 12,
    }

    enum LoadDataType
    {
        Binary = 0,
        Json = 1,
    }
}

class ActorAnimSyncData
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, ActorAnimSyncData> _cacheAnimSyncDic;
    /*0x10*/ System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> eventInfoDic;
    /*0x18*/ int[,] totalEventCount;

    static /*0x120e4f4*/ ActorAnimSyncData();
    static /*0x120e180*/ void Init();
    static /*0x120e30c*/ void LoadSyncData(TableData.TableData_Unitbase actor_script, ref ActorAnimSyncData _result);
    /*0x120e018*/ ActorAnimSyncData(string bundleName);
}

class TrackballCamera : UnityEngine.MonoBehaviour
{
    /*0x18*/ float distance;
    /*0x1c*/ float virtualTrackballDistance;
    /*0x20*/ UnityEngine.GameObject target;
    /*0x28*/ System.Nullable<UnityEngine.Vector3> lastMousePosition;
    /*0x38*/ UnityEngine.Vector3 mousePos;
    /*0x44*/ UnityEngine.Vector3 lastDir;
    /*0x50*/ UnityEngine.Vector3 lastTargetPos;
    /*0x5c*/ bool isDragging;
    /*0x5d*/ bool IsPanOn;
    /*0x60*/ UnityEngine.Camera previewCamera;
    /*0x68*/ float fOffsetTargetPosY;

    /*0x111f4a4*/ TrackballCamera();
    /*0x111eac8*/ void SetLastDirGoDefault();
    /*0x111eae0*/ void Init(UnityEngine.GameObject targetObject);
    /*0x111ec80*/ void UpdateByEditor();
    /*0x111f03c*/ UnityEngine.Quaternion FigureOutAxisAngleRotation(UnityEngine.Vector3 lastMousePosn, UnityEngine.Vector3 mousePosn);
    /*0x111f234*/ UnityEngine.Quaternion TrackBall(float p1x, float p1y, float p2x, float p2y, float radius);
    /*0x111f400*/ UnityEngine.Vector3 ProjectToSphere(float distance, float x, float y);
}

class UniClipboard
{
    static /*0x0*/ IBoard _board;

    static /*0x10bf950*/ IBoard get_board();
    static /*0x10bf9e0*/ void SetText(string str);
    static /*0x10bfa94*/ string GetText();
    /*0x10bfb44*/ UniClipboard();
}

interface IBoard
{
    void SetText(string str);
    string GetText();
}

class StandardBoard : IBoard
{
    static /*0x0*/ System.Reflection.PropertyInfo m_systemCopyBufferProperty;

    static /*0xc9a008*/ StandardBoard();
    static /*0xc99cb4*/ System.Reflection.PropertyInfo GetSystemCopyBufferProperty();
    /*0xc9a000*/ StandardBoard();
    /*0xc99ed8*/ void SetText(string str);
    /*0xc99f58*/ string GetText();
}

class AndroidBoard : IBoard
{
    /*0xedbdf0*/ AndroidBoard();
    /*0xedba54*/ void SetText(string str);
    /*0xedbce0*/ string GetText();
    /*0xedbb28*/ UnityEngine.AndroidJavaObject GetClipboardManager();
}

class ScrollIndexCallback2 : UnityEngine.MonoBehaviour
{
    static /*0x0*/ float[] randomWidths;
    /*0x18*/ UnityEngine.UI.Text text;
    /*0x20*/ UnityEngine.UI.LayoutElement element;

    static /*0xe1bf58*/ ScrollIndexCallback2();
    /*0xe1bf50*/ ScrollIndexCallback2();
    /*0xe1bdac*/ void ScrollCellIndex(int idx);
}

class ParticleVelocity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.ParticleSystem ps;
    /*0x20*/ float hSliderValue;
    /*0x28*/ System.Action<float> OnChangeValue;

    /*0x11440a0*/ ParticleVelocity();
    /*0x1143be8*/ void Start();
    /*0x1143ca8*/ void OnDestroy();
    /*0x1143cb0*/ void Update();
    /*0x1143cb4*/ void OnGUI();
    /*0x1143d94*/ void ParticleValue(float value);
    /*0x1143d9c*/ void PSRecursivelySpeed(UnityEngine.ParticleSystem particleSystem, float _value);
    /*0x11440b0*/ void <Start>b__3_0(float f);
}

class ScrollContent_Test : ScrollContent<ScrollTest_item>
{
    /*0xe1b71c*/ ScrollContent_Test();
}

class ScrollTest : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_Test m_cScrollContent;

    /*0xe21624*/ ScrollTest();
    /*0xe21470*/ void Awake();
    /*0xe21554*/ void Start();
    /*0xe21570*/ void OnScrollUpdateListItem(int _nindex, ScrollTest_item _instance);
}

class ScrollTest_item : UnityEngine.MonoBehaviour
{
    /*0xe2162c*/ ScrollTest_item();
    /*0xe21580*/ void Init_Item(int _nindex);
}

class DropDown_Custom : UnityEngine.UI.Dropdown
{
    /*0x11f4360*/ DropDown_Custom();
    /*0x11f4334*/ void Start();
}

class ServerSelectScene : UnityEngine.UI.Dropdown
{
    /*0xe26254*/ ServerSelectScene();
    /*0xe26228*/ void Start();
}

class ToggleTest : UnityEngine.MonoBehaviour
{
    /*0x1170744*/ ToggleTest();
    /*0x1170740*/ void Start();
}

class ButtonBase<T> : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<T> OnClickEvent;
    static /*0x0*/ System.Action<int, bool> OnClickSelfEvent;
    /*0x0*/ T m_ButtonType;
    /*0x0*/ AtlasType m_AtlasType;
    /*0x0*/ AtlasImage m_ButtonImage;
    /*0x0*/ string[] m_arrButtonAtlasName;
    /*0x0*/ int _nIndex;

    static ButtonBase();
    static void add_OnClickEvent(System.Action<T> value);
    static void remove_OnClickEvent(System.Action<T> value);
    static void add_OnClickSelfEvent(System.Action<int, bool> value);
    static void remove_OnClickSelfEvent(System.Action<int, bool> value);
    ButtonBase();
    T get_ButtonType();
    void InitializeButton(int _index, T _type);
    void OnClick();
    void ActiveButton(T _type);
    bool GetTypeEquals(T _type);
}

class ButtonMenuBase<T, K> : UnityEngine.MonoBehaviour
{
    /*0x0*/ System.Collections.Generic.List<K> m_liButton;
    /*0x0*/ int nStartCount;
    /*0x0*/ int nEndCount;
    /*0x0*/ int nIndex;
    /*0x0*/ T <ButtonType>k__BackingField;

    ButtonMenuBase();
    void OnEnable();
    void OnDisable();
    T get_ButtonType();
    void set_ButtonType(T value);
    void InitializeTab(T _type);
    ButtonBase<T> GetButton(T _type);
    void InitializeButton(T _type);
    void HandlerRefreshButton(T _type);

    class <>c__DisplayClass11_0<T, K>
    {
        /*0x0*/ T _type;

        <>c__DisplayClass11_0();
        bool <GetButton>b__0(K x);
    }
}

class FactionTab : ButtonBase<PropertyType>
{
    /*0x11d9e0c*/ FactionTab();
}

class FactionTabBase : ButtonMenuBase<PropertyType, FactionTab>
{
    /*0x11d9e84*/ FactionTabBase();
}

class InventoryTab : ButtonBase<InvenTapType>
{
    /*0x15741dc*/ InventoryTab();
}

enum InvenTapType
{
    ALL = 0,
    ITEM = 1,
    EQUIPMENT = 2,
}

class InventoryTabBase : ButtonMenuBase<InvenTapType, InventoryTab>
{
    /*0x1574254*/ InventoryTabBase();
}

class PuzzleManager : Singleton.Component.SingletonComponent<PuzzleManager>
{
    /*0x28*/ UnityEngine.GameObject m_Prefab;
    /*0x30*/ UnityEngine.Transform m_Parents;
    /*0x38*/ System.Collections.Generic.List<PuzzleParts> m_liPuzzleList;
    /*0x40*/ int m_nTurn;
    /*0x44*/ int m_nTime;
    /*0x48*/ bool m_bPlaying;

    /*0x101d0c8*/ PuzzleManager();
    /*0x101c63c*/ void AwakeInstance();
    /*0x101c640*/ bool InitInstance();
    /*0x101c648*/ void ReleaseInstance();
    /*0x101c64c*/ int get_Turn();
    /*0x101c654*/ int get_Time();
    /*0x101c65c*/ void set_Time(int value);
    /*0x101c664*/ bool get_Playing();
    /*0x101c66c*/ void StartPuzzle(UnityEngine.Transform parent);
    /*0x101caa0*/ void EndPuzzle();
    /*0x101c698*/ void Initalize();
    /*0x101cbe0*/ PuzzleParts GetParents();
    /*0x101cd58*/ void SetParentPuzzle(int _index);
    /*0x101cebc*/ void EndGame();
    /*0x101cec4*/ void ChangePuzzleEvent();
    /*0x101cef8*/ bool CheckCompletePuzzle();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int rand;

        /*0x109117c*/ <>c__DisplayClass18_0();
        /*0x1091184*/ bool <Initalize>b__0(int x);
    }

    class <>c
    {
        static /*0x0*/ PuzzleManager.<> <>9;
        static /*0x8*/ System.Predicate<PuzzleParts> <>9__19_0;

        static /*0x10910e0*/ <>c();
        /*0x1091140*/ <>c();
        /*0x1091148*/ bool <GetParents>b__19_0(PuzzleParts x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int _index;

        /*0x1091194*/ <>c__DisplayClass20_0();
        /*0x109119c*/ bool <SetParentPuzzle>b__0(PuzzleParts x);
    }
}

class PuzzleParts : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    static /*0x0*/ PuzzleParts m_cSelectPuzzle;
    static /*0x8*/ PuzzleParts m_cChangePuzzle;
    /*0x18*/ int X;
    /*0x1c*/ int Y;
    /*0x20*/ UnityEngine.U2D.SpriteAtlas m_BaseAtlas;
    /*0x28*/ UnityEngine.UI.Image m_Image;

    static /*0x101d69c*/ PuzzleParts();
    /*0x101d694*/ PuzzleParts();
    /*0x101cfbc*/ string get_GetIndex();
    /*0x101d154*/ void Awake();
    /*0x101cb60*/ void Init(int _index);
    /*0x101ce9c*/ void SetParent();
    /*0x101d1a8*/ void SetSize(float size);
    /*0x101cbd8*/ void SetPosition(int _X, int _Y);
    /*0x101d200*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x101d518*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x101d630*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
}

class PuzzleSystem : UnityEngine.MonoBehaviour
{
    /*0x18*/ float m_fRealtime;
    /*0x20*/ UnityEngine.UI.Text m_Timer;
    /*0x28*/ UnityEngine.UI.Text m_Turn;
    /*0x30*/ UnityEngine.UI.Text m_ButtonText;
    /*0x38*/ UnityEngine.Transform m_Parent;
    /*0x40*/ UnityEngine.WaitForSecondsRealtime _Realtime;

    /*0x101d8a0*/ PuzzleSystem();
    /*0x101d6a0*/ void StartGame();
    /*0x101d7c8*/ System.Collections.IEnumerator CoTimer();
    /*0x101d834*/ System.Collections.IEnumerator CoTurn();

    class <CoTimer>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ PuzzleSystem <>4__this;

        /*0x10911e8*/ <CoTimer>d__7(int <>1__state);
        /*0x1091214*/ void System.IDisposable.Dispose();
        /*0x1091218*/ bool MoveNext();
        /*0x10913e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10913ec*/ void System.Collections.IEnumerator.Reset();
        /*0x109142c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTurn>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ PuzzleSystem <>4__this;

        /*0x1091434*/ <CoTurn>d__8(int <>1__state);
        /*0x1091460*/ void System.IDisposable.Dispose();
        /*0x1091464*/ bool MoveNext();
        /*0x109158c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1091594*/ void System.Collections.IEnumerator.Reset();
        /*0x10915d4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TapTest : UnityEngine.MonoBehaviour
{
    /*0x18*/ InventoryTabBase m_InventoryTab;
    /*0x20*/ FactionTabBase m_FactionTab;

    /*0x1167700*/ TapTest();
    /*0x11671d0*/ void OnEnable();
    /*0x1167488*/ void OnDisable();
    /*0x1167674*/ void Awake();
    /*0x11676f4*/ void HandlerChangeInventoryTab(InvenTapType _type);
    /*0x11676f8*/ void HandlerSelfInventoryTab(int _index, bool _isSelf);
    /*0x11676fc*/ void HandlerChangeFactionTab(PropertyType _type);
}

class TitleTest : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Title;
    /*0x20*/ UnityEngine.GameObject m_TitleEffect;

    /*0x1170360*/ TitleTest();
    /*0x1170104*/ void Awake();
    /*0x1170178*/ System.Collections.IEnumerator CoDelay();
    /*0x11701e4*/ System.Collections.IEnumerator InTitleStartFixedFrame();
    /*0x1170250*/ void InTitleComplete(Spine.TrackEntry trackEntry);
    /*0x11702f4*/ void CompleteTitleInitialize();

    class <CoDelay>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TitleTest <>4__this;

        /*0xcd1430*/ <CoDelay>d__3(int <>1__state);
        /*0xcd145c*/ void System.IDisposable.Dispose();
        /*0xcd1460*/ bool MoveNext();
        /*0xcd1604*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd160c*/ void System.Collections.IEnumerator.Reset();
        /*0xcd164c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <InTitleStartFixedFrame>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TitleTest <>4__this;

        /*0xcd1654*/ <InTitleStartFixedFrame>d__4(int <>1__state);
        /*0xcd1680*/ void System.IDisposable.Dispose();
        /*0xcd1684*/ bool MoveNext();
        /*0xcd1740*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1748*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1788*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ColorChangedEvent : UnityEngine.Events.UnityEvent<UnityEngine.Color>
{
    /*0x10dfda8*/ ColorChangedEvent();
}

class HSVChangedEvent : UnityEngine.Events.UnityEvent<float, float, float>
{
    /*0x10f677c*/ HSVChangedEvent();
}

class TestCompression : UnityEngine.MonoBehaviour
{
    /*0x11688fc*/ TestCompression();
    /*0x11688f4*/ void Start();
    /*0x11688f8*/ void Update();
}

namespace JsonSyncKey
{
    class Anim
    {
        static string VERSION = "Version";
        static string TOTAL_EVENT_COUNT = "TotalEventCount";
        static string ANIMATION_CLIP = "sAnimState";
        static string TIME_TOTAL = "timeTotal";
        static string TIME_HIT = "timeHit";
        static string NORMAL_HIT_RATIO = "normalHitRatio";
        static string EVENT_TYPE = "sEventType";
        static string EFFECT_NAME = "sEffectName";
        static string EFFECT_TARGET_TYPE = "sEffectTargetType";
        static string EFFECT_OWNER_TYPE = "sEffectOwnerType";
        static string SOUND_NAME = "sSoundName";
        static string SOUND_PLAY_DELAY = "fSoundPlayDelay";
        static string PROJECTTILE_POSITION_TYPE = "sProjectilePositionType";
        static string PROJECTTILE_NAME = "sProjectileName";
        static string UNIT_SHADER_TYPE = "sUnitShaderType";
        static string UNIT_SHADER_DURATION = "fUnitShaderDruation";
        static string SKILL_FX_ID = "sSkillFXID";
        static string SOUND_ASSET_BUNDLE_TYPE = "sSoundAssetBundleType";
        static string SCFX_TIME_EXECUTE_TRANS = "_scfx_time_execute_trans";
        static string SCFX_TIME_UNDO_TRANS = "_scfx_time_undo_trans";
        static string SCFX_TIME_KEEP = "_scfx_time_keep";
        static string SCFX_SHAKE_POWER = "_scfx_shake_power";

        /*0xedc9f0*/ Anim();
    }
}

namespace Spine
{
    namespace Unity
    {
        namespace Modules
        {
            class SkeletonGraphicMultiObject : UnityEngine.MonoBehaviour, Spine.Unity.IAnimationStateComponent, Spine.Unity.ISkeletonComponent, Spine.Unity.ISkeletonAnimation, Spine.Unity.IHasSkeletonDataAsset
            {
                /*0x18*/ Spine.Unity.SkeletonDataAsset skeletonDataAsset;
                /*0x20*/ string initialSkinName;
                /*0x28*/ string startingAnimation;
                /*0x30*/ bool startingLoop;
                /*0x34*/ float timeScale;
                /*0x38*/ bool unscaledTime;
                /*0x39*/ bool freeze;
                /*0x40*/ UnityEngine.Material material;
                /*0x48*/ System.Collections.Generic.List<UnityEngine.CanvasRenderer> canvasRenderers;
                /*0x50*/ Spine.Unity.UpdateBonesDelegate UpdateLocal;
                /*0x58*/ Spine.Unity.UpdateBonesDelegate UpdateWorld;
                /*0x60*/ Spine.Unity.UpdateBonesDelegate UpdateComplete;
                /*0x68*/ Spine.Skeleton <Skeleton>k__BackingField;
                /*0x70*/ Spine.AnimationState <AnimationState>k__BackingField;
                /*0x78*/ bool passiveUpdate;
                /*0x80*/ Spine.Unity.MeshGenerator meshGenerator;
                /*0x88*/ Spine.Unity.SkeletonRendererInstruction currentInstruction;
                /*0x90*/ Spine.ExposedList<UnityEngine.Mesh> meshes;
                /*0x98*/ UnityEngine.Canvas canvas;
                /*0xa0*/ System.Collections.Generic.Dictionary<Spine.Slot, UnityEngine.Material> customSlotMaterialDic;
                /*0xa8*/ System.Collections.Generic.List<Spine.Slot> customSlotMaterialList;

                /*0x15102e4*/ SkeletonGraphicMultiObject();
                /*0x150ecb8*/ Spine.Unity.SkeletonDataAsset get_SkeletonDataAsset();
                /*0x150ecc0*/ void set_SkeletonDataAsset(Spine.Unity.SkeletonDataAsset value);
                /*0x150ecc8*/ void add_UpdateLocal(Spine.Unity.UpdateBonesDelegate value);
                /*0x150ed68*/ void remove_UpdateLocal(Spine.Unity.UpdateBonesDelegate value);
                /*0x150ee08*/ void add_UpdateWorld(Spine.Unity.UpdateBonesDelegate value);
                /*0x150eea8*/ void remove_UpdateWorld(Spine.Unity.UpdateBonesDelegate value);
                /*0x150ef48*/ void add_UpdateComplete(Spine.Unity.UpdateBonesDelegate value);
                /*0x150efe8*/ void remove_UpdateComplete(Spine.Unity.UpdateBonesDelegate value);
                /*0x150f088*/ Spine.Skeleton get_Skeleton();
                /*0x150f090*/ void set_Skeleton(Spine.Skeleton value);
                /*0x150f098*/ Spine.AnimationState get_AnimationState();
                /*0x150f0a0*/ void set_AnimationState(Spine.AnimationState value);
                /*0x150f0a8*/ Spine.Unity.MeshGenerator get_MeshGenerator();
                /*0x150f0b0*/ bool get_IsValid();
                /*0x150f0c0*/ UnityEngine.Canvas get_Canvas();
                /*0x150f184*/ UnityEngine.Bounds GetMeshBounds();
                /*0x150fae4*/ void OnValidate();
                /*0x150fc0c*/ void Awake();
                /*0x150fc20*/ void Clear();
                /*0x150feb8*/ void TrimRenderers();
                /*0x1510110*/ void Update();
                /*0x150fb28*/ void Update(float deltaTime);
                /*0x150fbfc*/ void LateUpdate();
                /*0x150f290*/ void Initialize(bool overwrite);
                /*0x150f4bc*/ void UpdateMesh();
                /*0x1510168*/ UnityEngine.Material SetCustomSlotMaterials(System.Collections.Generic.List<Spine.Slot> _lisCustomSlot);
            }
        }
    }
}

namespace UnityEngine
{
    namespace EventSystems
    {
        class GamePadInputModule : UnityEngine.EventSystems.BaseInputModule
        {
            /*0x48*/ float m_PrevActionTime;
            /*0x4c*/ UnityEngine.Vector2 m_LastMoveVector;
            /*0x54*/ int m_ConsecutiveMoveCount;
            /*0x58*/ string m_HorizontalAxis;
            /*0x60*/ string m_VerticalAxis;
            /*0x68*/ string m_SubmitButton;
            /*0x70*/ string m_CancelButton;
            /*0x78*/ float m_InputActionsPerSecond;
            /*0x7c*/ float m_RepeatDelay;

            /*0xeccafc*/ GamePadInputModule();
            /*0xeccbb0*/ float get_inputActionsPerSecond();
            /*0xeccbb8*/ void set_inputActionsPerSecond(float value);
            /*0xeccbc0*/ float get_repeatDelay();
            /*0xeccbc8*/ void set_repeatDelay(float value);
            /*0xeccbd0*/ string get_horizontalAxis();
            /*0xeccbd8*/ void set_horizontalAxis(string value);
            /*0xeccbe0*/ string get_verticalAxis();
            /*0xeccbe8*/ void set_verticalAxis(string value);
            /*0xeccbf0*/ string get_submitButton();
            /*0xeccbf8*/ void set_submitButton(string value);
            /*0xeccc00*/ string get_cancelButton();
            /*0xeccc08*/ void set_cancelButton(string value);
            /*0xeccc10*/ bool ShouldActivateModule();
            /*0xeccc8c*/ void ActivateModule();
            /*0xecce04*/ void DeactivateModule();
            /*0xecce0c*/ void Process();
            /*0xecd200*/ bool SendSubmitEventToSelectedObject();
            /*0xecd428*/ UnityEngine.Vector2 GetRawMoveVector();
            /*0xeccfcc*/ bool SendMoveEventToSelectedObject();
            /*0xecce68*/ bool SendUpdateEventToSelectedObject();
        }

        namespace Extensions
        {
            class AimerInputModule : UnityEngine.EventSystems.PointerInputModule
            {
                static /*0x0*/ UnityEngine.GameObject objectUnderAimer;
                /*0x58*/ string activateAxis;
                /*0x60*/ UnityEngine.Vector2 aimerOffset;

                /*0xeda930*/ AimerInputModule();
                /*0xeda984*/ void ActivateModule();
                /*0xedaa88*/ void Process();
                /*0xedb248*/ UnityEngine.EventSystems.PointerEventData GetAimerPointerEventData();
                /*0xedab2c*/ void ProcessInteraction(UnityEngine.EventSystems.PointerEventData pointer, bool pressed, bool released);
                /*0xedb390*/ void DeactivateModule();
            }
        }
    }

    namespace SignInWithApple
    {
        enum UserDetectionStatus
        {
            LikelyReal = 0,
            Unknown = 1,
            Unsupported = 2,
        }

        enum UserCredentialState
        {
            Revoked = 0,
            Authorized = 1,
            NotFound = 2,
        }

        struct UserInfo
        {
            /*0x10*/ string userId;
            /*0x18*/ string email;
            /*0x20*/ string displayName;
            /*0x28*/ string idToken;
            /*0x30*/ string error;
            /*0x38*/ UnityEngine.SignInWithApple.UserDetectionStatus userDetectionStatus;
        }

        class SignInWithAppleEvent : UnityEngine.Events.UnityEvent<UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs>
        {
            /*0xe2a9f0*/ SignInWithAppleEvent();
        }

        class SignInWithApple : UnityEngine.MonoBehaviour
        {
            static /*0x0*/ UnityEngine.SignInWithApple.SignInWithApple.Callback s_LoginCompletedCallback;
            static /*0x8*/ UnityEngine.SignInWithApple.SignInWithApple.Callback s_CredentialStateCallback;
            static /*0x10*/ System.Collections.Generic.Queue<System.Action> s_EventQueue;
            /*0x18*/ UnityEngine.SignInWithApple.SignInWithAppleEvent onLogin;
            /*0x20*/ UnityEngine.SignInWithApple.SignInWithAppleEvent onCredentialState;
            /*0x28*/ UnityEngine.SignInWithApple.SignInWithAppleEvent onError;

            static /*0xe2a968*/ SignInWithApple();
            static /*0xe29fe4*/ void LoginCompletedCallback(int result, UnityEngine.SignInWithApple.UserInfo info);
            static /*0xe2a0c0*/ void GetCredentialStateCallback(UnityEngine.SignInWithApple.UserCredentialState state);
            /*0xe2a960*/ SignInWithApple();
            /*0xe2a19c*/ void GetCredentialState(string userID);
            /*0xe2a228*/ void GetCredentialState(string userID, UnityEngine.SignInWithApple.SignInWithApple.Callback callback);
            /*0xe2a330*/ void GetCredentialStateInternal(string userID);
            /*0xe2a334*/ void Login();
            /*0xe2a3b0*/ void Login(UnityEngine.SignInWithApple.SignInWithApple.Callback callback);
            /*0xe2a484*/ void LoginInternal();
            /*0xe2a488*/ void TriggerOnLoginEvent(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
            /*0xe2a71c*/ void TriggerCredentialStateEvent(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
            /*0xe2a5f4*/ void TriggerOnErrorEvent(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
            /*0xe2a888*/ void Update();

            struct CallbackArgs
            {
                /*0x10*/ UnityEngine.SignInWithApple.UserCredentialState credentialState;
                /*0x18*/ UnityEngine.SignInWithApple.UserInfo userInfo;
                /*0x48*/ string error;
            }

            class Callback : System.MulticastDelegate
            {
                /*0xcbea9c*/ Callback(object object, nint method);
                /*0xcbeafc*/ void Invoke(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
                /*0xcbee04*/ System.IAsyncResult BeginInvoke(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args, System.AsyncCallback callback, object object);
                /*0xcbee94*/ void EndInvoke(System.IAsyncResult result);
            }

            class LoginCompleted : System.MulticastDelegate
            {
                /*0xcbf1e8*/ LoginCompleted(object object, nint method);
                /*0xcbf248*/ void Invoke(int result, UnityEngine.SignInWithApple.UserInfo info);
                /*0xcbf550*/ System.IAsyncResult BeginInvoke(int result, UnityEngine.SignInWithApple.UserInfo info, System.AsyncCallback callback, object object);
                /*0xcbf60c*/ void EndInvoke(System.IAsyncResult result);
            }

            class GetCredentialStateCompleted : System.MulticastDelegate
            {
                /*0xcbeea0*/ GetCredentialStateCompleted(object object, nint method);
                /*0xcbef00*/ void Invoke(UnityEngine.SignInWithApple.UserCredentialState state);
                /*0xcbf154*/ System.IAsyncResult BeginInvoke(UnityEngine.SignInWithApple.UserCredentialState state, System.AsyncCallback callback, object object);
                /*0xcbf1dc*/ void EndInvoke(System.IAsyncResult result);
            }

            class <>c__DisplayClass18_0
            {
                /*0x10*/ UnityEngine.SignInWithApple.SignInWithApple <>4__this;
                /*0x18*/ UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args;

                /*0xcbe8f8*/ <>c__DisplayClass18_0();
                /*0xcbe900*/ void <TriggerOnLoginEvent>b__0();
            }

            class <>c__DisplayClass19_0
            {
                /*0x10*/ UnityEngine.SignInWithApple.SignInWithApple <>4__this;
                /*0x18*/ UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args;

                /*0xcbe984*/ <>c__DisplayClass19_0();
                /*0xcbe98c*/ void <TriggerCredentialStateEvent>b__0();
            }

            class <>c__DisplayClass20_0
            {
                /*0x10*/ UnityEngine.SignInWithApple.SignInWithApple <>4__this;
                /*0x18*/ UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args;

                /*0xcbea10*/ <>c__DisplayClass20_0();
                /*0xcbea18*/ void <TriggerOnErrorEvent>b__0();
            }
        }
    }

    namespace UI
    {
        class LoopHorizontalScrollRect : UnityEngine.UI.LoopScrollRect
        {
            /*0xfbd7f4*/ LoopHorizontalScrollRect();
            /*0xfbca78*/ float GetSize(UnityEngine.RectTransform item);
            /*0xfbcca8*/ float GetDimension(UnityEngine.Vector2 vector);
            /*0xfbccb0*/ UnityEngine.Vector2 GetVector(float value);
            /*0xfbccbc*/ void Awake();
            /*0xfbcdd4*/ bool UpdateItems(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        }

        class LoopScrollDataSource
        {
            /*0xfbd930*/ LoopScrollDataSource();
            void ProvideData(UnityEngine.Transform transform, int idx);
        }

        class LoopScrollSendIndexSource : UnityEngine.UI.LoopScrollDataSource
        {
            static /*0x0*/ UnityEngine.UI.LoopScrollSendIndexSource Instance;

            static /*0xddde80*/ LoopScrollSendIndexSource();
            /*0xdddde8*/ LoopScrollSendIndexSource();
            /*0xddddf0*/ void ProvideData(UnityEngine.Transform transform, int idx);
        }

        class LoopScrollArraySource<T> : UnityEngine.UI.LoopScrollDataSource
        {
            /*0x0*/ T[] objectsToFill;

            LoopScrollArraySource(T[] objectsToFill);
            void ProvideData(UnityEngine.Transform transform, int idx);
        }

        class LoopScrollPrefabSource
        {
            /*0x10*/ UnityEngine.GameObject prefab;
            /*0x18*/ int poolSize;
            /*0x1c*/ bool inited;

            /*0xfbda00*/ LoopScrollPrefabSource();
            T GetObject<T>(AssetBundleType _assetBundleType);
            /*0xfbd938*/ void ReturnObject(UnityEngine.Transform go);
        }

        class LoopScrollRect : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IInitializePotentialDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IScrollHandler, UnityEngine.UI.ICanvasElement, UnityEngine.UI.ILayoutElement, UnityEngine.UI.ILayoutGroup, UnityEngine.UI.ILayoutController
        {
            /*0x18*/ AssetBundleType m_eAssetbundleType;
            /*0x20*/ System.Action<int, UnityEngine.Component> eventItemUpdate;
            /*0x28*/ UnityEngine.UI.LoopScrollPrefabSource prefabSource;
            /*0x30*/ int totalCount;
            /*0x38*/ UnityEngine.UI.LoopScrollDataSource dataSource;
            /*0x40*/ float threshold;
            /*0x44*/ bool reverseDirection;
            /*0x48*/ float rubberScale;
            /*0x4c*/ int itemTypeStart;
            /*0x50*/ int itemTypeEnd;
            /*0x54*/ int directionSign;
            /*0x58*/ float m_ContentSpacing;
            /*0x60*/ UnityEngine.UI.GridLayoutGroup m_GridLayout;
            /*0x68*/ int m_ContentConstraintCount;
            /*0x70*/ UnityEngine.RectTransform m_Content;
            /*0x78*/ bool m_Horizontal;
            /*0x79*/ bool m_Vertical;
            /*0x7c*/ UnityEngine.UI.LoopScrollRect.MovementType m_MovementType;
            /*0x80*/ float m_Elasticity;
            /*0x84*/ bool m_Inertia;
            /*0x88*/ float m_DecelerationRate;
            /*0x8c*/ float m_ScrollSensitivity;
            /*0x90*/ UnityEngine.RectTransform m_Viewport;
            /*0x98*/ UnityEngine.UI.Scrollbar m_HorizontalScrollbar;
            /*0xa0*/ UnityEngine.UI.Scrollbar m_VerticalScrollbar;
            /*0xa8*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility m_HorizontalScrollbarVisibility;
            /*0xac*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility m_VerticalScrollbarVisibility;
            /*0xb0*/ float m_HorizontalScrollbarSpacing;
            /*0xb4*/ float m_VerticalScrollbarSpacing;
            /*0xb8*/ UnityEngine.UI.LoopScrollRect.ScrollRectEvent m_OnValueChanged;
            /*0xc0*/ UnityEngine.Vector2 m_PointerStartLocalCursor;
            /*0xc8*/ UnityEngine.Vector2 m_ContentStartPosition;
            /*0xd0*/ UnityEngine.RectTransform m_ViewRect;
            /*0xd8*/ UnityEngine.Bounds m_ContentBounds;
            /*0xf0*/ UnityEngine.Bounds m_ViewBounds;
            /*0x108*/ UnityEngine.Vector2 m_Velocity;
            /*0x110*/ bool m_Dragging;
            /*0x114*/ UnityEngine.Vector2 m_PrevPosition;
            /*0x11c*/ UnityEngine.Bounds m_PrevContentBounds;
            /*0x134*/ UnityEngine.Bounds m_PrevViewBounds;
            /*0x14c*/ bool m_HasRebuiltLayout;
            /*0x14d*/ bool m_HSliderExpand;
            /*0x14e*/ bool m_VSliderExpand;
            /*0x150*/ float m_HSliderHeight;
            /*0x154*/ float m_VSliderWidth;
            /*0x158*/ UnityEngine.RectTransform m_Rect;
            /*0x160*/ UnityEngine.RectTransform m_HorizontalScrollbarRect;
            /*0x168*/ UnityEngine.RectTransform m_VerticalScrollbarRect;
            /*0x170*/ UnityEngine.DrivenRectTransformTracker m_Tracker;
            /*0x174*/ float <flexibleWidth>k__BackingField;
            /*0x178*/ UnityEngine.Vector3[] m_Corners;

            static /*0xfc03d4*/ float RubberDelta(float overStretching, float viewSize);
            /*0xfbd7f8*/ LoopScrollRect();
            /*0xfbda10*/ void set_objectsToFill(object[] value);
            float GetSize(UnityEngine.RectTransform item);
            float GetDimension(UnityEngine.Vector2 vector);
            UnityEngine.Vector2 GetVector(float value);
            /*0xfbcb30*/ float get_contentSpacing();
            /*0xfbdad4*/ int get_contentConstraintCount();
            /*0xfbdc24*/ int get_StartLine();
            /*0xfbdc54*/ int get_CurrentLines();
            /*0xfbdc88*/ int get_TotalLines();
            /*0xfbdcb8*/ bool UpdateItems(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
            /*0xfbdcc0*/ UnityEngine.RectTransform get_content();
            /*0xfbdcc8*/ void set_content(UnityEngine.RectTransform value);
            /*0xfbdcd0*/ bool get_horizontal();
            /*0xfbdcd8*/ void set_horizontal(bool value);
            /*0xfbdce4*/ bool get_vertical();
            /*0xfbdcec*/ void set_vertical(bool value);
            /*0xfbdcf8*/ UnityEngine.UI.LoopScrollRect.MovementType get_movementType();
            /*0xfbdd00*/ void set_movementType(UnityEngine.UI.LoopScrollRect.MovementType value);
            /*0xfbdd08*/ float get_elasticity();
            /*0xfbdd10*/ void set_elasticity(float value);
            /*0xfbdd18*/ bool get_inertia();
            /*0xfbdd20*/ void set_inertia(bool value);
            /*0xfbdd2c*/ float get_decelerationRate();
            /*0xfbdd34*/ void set_decelerationRate(float value);
            /*0xfbdd3c*/ float get_scrollSensitivity();
            /*0xfbdd44*/ void set_scrollSensitivity(float value);
            /*0xfbdd4c*/ UnityEngine.RectTransform get_viewport();
            /*0xfbdd54*/ void set_viewport(UnityEngine.RectTransform value);
            /*0xfbde28*/ UnityEngine.UI.Scrollbar get_horizontalScrollbar();
            /*0xfbde30*/ void set_horizontalScrollbar(UnityEngine.UI.Scrollbar value);
            /*0xfbdfdc*/ UnityEngine.UI.Scrollbar get_verticalScrollbar();
            /*0xfbdfe4*/ void set_verticalScrollbar(UnityEngine.UI.Scrollbar value);
            /*0xfbe190*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility get_horizontalScrollbarVisibility();
            /*0xfbe198*/ void set_horizontalScrollbarVisibility(UnityEngine.UI.LoopScrollRect.ScrollbarVisibility value);
            /*0xfbe1a0*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility get_verticalScrollbarVisibility();
            /*0xfbe1a8*/ void set_verticalScrollbarVisibility(UnityEngine.UI.LoopScrollRect.ScrollbarVisibility value);
            /*0xfbe1b0*/ float get_horizontalScrollbarSpacing();
            /*0xfbe1b8*/ void set_horizontalScrollbarSpacing(float value);
            /*0xfbe254*/ float get_verticalScrollbarSpacing();
            /*0xfbe25c*/ void set_verticalScrollbarSpacing(float value);
            /*0xfbe264*/ UnityEngine.UI.LoopScrollRect.ScrollRectEvent get_onValueChanged();
            /*0xfbe26c*/ void set_onValueChanged(UnityEngine.UI.LoopScrollRect.ScrollRectEvent value);
            /*0xfbe274*/ UnityEngine.RectTransform get_viewRect();
            /*0xfbe370*/ UnityEngine.Vector2 get_velocity();
            /*0xfbe37c*/ void set_velocity(UnityEngine.Vector2 value);
            /*0xfbe388*/ UnityEngine.RectTransform get_rectTransform();
            /*0xfbe428*/ void ClearCells();
            /*0xfbe4c0*/ void SrollToCell(int index, float speed);
            /*0xfbe6f0*/ System.Collections.IEnumerator ScrollToCellCoroutine(int index, float speed);
            /*0xfbe77c*/ void RefreshCells();
            /*0xfbe878*/ void RefillCellsFromEnd(int offset);
            /*0xfbeaac*/ void RefillCells(int offset, bool fillViewRect);
            /*0xfbd1fc*/ float NewItemAtStart();
            /*0xfbd5dc*/ float DeleteItemAtStart();
            /*0xfbd038*/ float NewItemAtEnd();
            /*0xfbd39c*/ float DeleteItemAtEnd();
            T InstantiateNextItem<T>(int itemIdx);
            /*0xfbed14*/ void Rebuild(UnityEngine.UI.CanvasUpdate executing);
            /*0xfbf7d4*/ void LayoutComplete();
            /*0xfbf7d8*/ void GraphicUpdateComplete();
            /*0xfbed78*/ void UpdateCachedData();
            /*0xfbf7dc*/ void OnEnable();
            /*0xfbf9b8*/ void OnDisable();
            /*0xfbfbfc*/ bool IsActive();
            /*0xfbfc88*/ void EnsureLayoutHasRebuilt();
            /*0xfbfd08*/ void StopMovement();
            /*0xfbfd34*/ void OnScroll(UnityEngine.EventSystems.PointerEventData data);
            /*0xfc0044*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc0080*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc018c*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc01b0*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc0424*/ void SetContentAnchoredPosition(UnityEngine.Vector2 position);
            /*0xfc04ec*/ void LateUpdate();
            /*0xfbf708*/ void UpdatePrevData();
            /*0xfbf43c*/ void UpdateScrollbars(UnityEngine.Vector2 offset);
            /*0xfc0b78*/ UnityEngine.Vector2 get_normalizedPosition();
            /*0xfc0e5c*/ void set_normalizedPosition(UnityEngine.Vector2 value);
            /*0xfc0bb4*/ float get_horizontalNormalizedPosition();
            /*0xfc11a0*/ void set_horizontalNormalizedPosition(float value);
            /*0xfc0d08*/ float get_verticalNormalizedPosition();
            /*0xfc11a8*/ void set_verticalNormalizedPosition(float value);
            /*0xfc11b0*/ void SetHorizontalNormalizedPosition(float value);
            /*0xfc11b8*/ void SetVerticalNormalizedPosition(float value);
            /*0xfc0e98*/ void SetNormalizedPosition(float value, int axis);
            /*0xfc11c0*/ void OnRectTransformDimensionsChange();
            /*0xfc11c4*/ bool get_hScrollingNeeded();
            /*0xfc122c*/ bool get_vScrollingNeeded();
            /*0xfc1294*/ void CalculateLayoutInputHorizontal();
            /*0xfc1298*/ void CalculateLayoutInputVertical();
            /*0xfc129c*/ float get_minWidth();
            /*0xfc12a4*/ float get_preferredWidth();
            /*0xfc12ac*/ float get_flexibleWidth();
            /*0xfc12b4*/ void set_flexibleWidth(float value);
            /*0xfc12bc*/ float get_minHeight();
            /*0xfc12c4*/ float get_preferredHeight();
            /*0xfc12cc*/ float get_flexibleHeight();
            /*0xfc12d4*/ int get_layoutPriority();
            /*0xfc12dc*/ void SetLayoutHorizontal();
            /*0xfc1a20*/ void SetLayoutVertical();
            /*0xfc09f4*/ void UpdateScrollbarVisibility();
            /*0xfc1b08*/ void UpdateScrollbarLayout();
            /*0xfbf14c*/ void UpdateBounds(bool updateItems);
            /*0xfc17b0*/ UnityEngine.Bounds GetBounds();
            /*0xfc1d84*/ UnityEngine.Bounds GetBounds4Item(int index);
            /*0xfbfe80*/ UnityEngine.Vector2 CalculateOffset(UnityEngine.Vector2 delta);
            /*0xfbe1c0*/ void SetDirty();
            /*0xfbdd5c*/ void SetDirtyCaching();
            /*0xfc2094*/ UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform();

            enum MovementType
            {
                Unrestricted = 0,
                Elastic = 1,
                Clamped = 2,
            }

            enum ScrollbarVisibility
            {
                Permanent = 0,
                AutoHide = 1,
                AutoHideAndExpandViewport = 2,
            }

            class ScrollRectEvent : UnityEngine.Events.UnityEvent<UnityEngine.Vector2>
            {
                /*0xe5c4a0*/ ScrollRectEvent();
            }

            class <ScrollToCellCoroutine>d__126 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ object <>2__current;
                /*0x20*/ UnityEngine.UI.LoopScrollRect <>4__this;
                /*0x28*/ int index;
                /*0x2c*/ float speed;
                /*0x30*/ bool <needMoving>5__2;

                /*0xe5bfa4*/ <ScrollToCellCoroutine>d__126(int <>1__state);
                /*0xe5bfd0*/ void System.IDisposable.Dispose();
                /*0xe5bfd4*/ bool MoveNext();
                /*0xe5c450*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                /*0xe5c458*/ void System.Collections.IEnumerator.Reset();
                /*0xe5c498*/ object System.Collections.IEnumerator.get_Current();
            }
        }

        class LoopVerticalScrollRect : UnityEngine.UI.LoopScrollRect
        {
            /*0xdde354*/ LoopVerticalScrollRect();
            /*0xdddee0*/ float GetSize(UnityEngine.RectTransform item);
            /*0xdddfa4*/ float GetDimension(UnityEngine.Vector2 vector);
            /*0xdddfac*/ UnityEngine.Vector2 GetVector(float value);
            /*0xdddfb8*/ void Awake();
            /*0xdde0d0*/ bool UpdateItems(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        }

        class ExtensionsToggle : UnityEngine.UI.Selectable, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.UI.ICanvasElement
        {
            /*0xf8*/ string UniqueID;
            /*0x100*/ UnityEngine.UI.ExtensionsToggle.ToggleTransition toggleTransition;
            /*0x108*/ UnityEngine.UI.Graphic graphic;
            /*0x110*/ UnityEngine.UI.ExtensionsToggleGroup m_Group;
            /*0x118*/ UnityEngine.UI.ExtensionsToggle.ToggleEvent onValueChanged;
            /*0x120*/ UnityEngine.UI.ExtensionsToggle.ToggleEventObject onToggleChanged;
            /*0x128*/ bool m_IsOn;

            /*0x11d8850*/ ExtensionsToggle();
            /*0x11d85b0*/ UnityEngine.UI.ExtensionsToggleGroup get_Group();
            /*0x11d85b8*/ void set_Group(UnityEngine.UI.ExtensionsToggleGroup value);
            /*0x11d8914*/ void Rebuild(UnityEngine.UI.CanvasUpdate executing);
            /*0x11d8918*/ void LayoutComplete();
            /*0x11d891c*/ void GraphicUpdateComplete();
            /*0x11d8920*/ void OnEnable();
            /*0x11d895c*/ void OnDisable();
            /*0x11d898c*/ void OnDidApplyAnimationProperties();
            /*0x11d85e8*/ void SetToggleGroup(UnityEngine.UI.ExtensionsToggleGroup newGroup, bool setMemberValue);
            /*0x11d8e24*/ bool get_IsOn();
            /*0x11d8e2c*/ void set_IsOn(bool value);
            /*0x11d8a68*/ void Set(bool value);
            /*0x11d8e38*/ void Set(bool value, bool sendCallback);
            /*0x11d8780*/ void PlayEffect(bool instant);
            /*0x11d9118*/ void Start();
            /*0x11d9120*/ void InternalToggle();
            /*0x11d9184*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
            /*0x11d91a4*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
            /*0x11d91a8*/ UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform();

            enum ToggleTransition
            {
                None = 0,
                Fade = 1,
            }

            class ToggleEvent : UnityEngine.Events.UnityEvent<bool>
            {
                /*0x10a015c*/ ToggleEvent();
            }

            class ToggleEventObject : UnityEngine.Events.UnityEvent<UnityEngine.UI.ExtensionsToggle>
            {
                /*0x10a01a8*/ ToggleEventObject();
            }
        }

        class ExtensionsToggleGroup : UnityEngine.EventSystems.UIBehaviour
        {
            /*0x18*/ bool m_AllowSwitchOff;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UI.ExtensionsToggle> m_Toggles;
            /*0x28*/ UnityEngine.UI.ExtensionsToggleGroup.ToggleGroupEvent onToggleGroupChanged;
            /*0x30*/ UnityEngine.UI.ExtensionsToggleGroup.ToggleGroupEvent onToggleGroupToggleChanged;
            /*0x38*/ UnityEngine.UI.ExtensionsToggle <SelectedToggle>k__BackingField;

            /*0x11d91d4*/ ExtensionsToggleGroup();
            /*0x11d91b0*/ bool get_AllowSwitchOff();
            /*0x11d91b8*/ void set_AllowSwitchOff(bool value);
            /*0x11d91c4*/ UnityEngine.UI.ExtensionsToggle get_SelectedToggle();
            /*0x11d91cc*/ void set_SelectedToggle(UnityEngine.UI.ExtensionsToggle value);
            /*0x11d9298*/ void ValidateToggleIsInGroup(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d8cc4*/ void NotifyToggleOn(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d8a74*/ void UnregisterToggle(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d93f4*/ void NotifyToggleChanged(bool isOn);
            /*0x11d8b9c*/ void RegisterToggle(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d8fb0*/ bool AnyTogglesOn();
            /*0x11d9458*/ System.Collections.Generic.IEnumerable<UnityEngine.UI.ExtensionsToggle> ActiveToggles();
            /*0x11d9574*/ void SetAllTogglesOff();
            /*0x11d9628*/ void HasTheGroupToggle(bool value);
            /*0x11d96e8*/ void HasAToggleFlipped(bool value);

            class ToggleGroupEvent : UnityEngine.Events.UnityEvent<bool>
            {
                /*0x10a028c*/ ToggleGroupEvent();
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UI.ExtensionsToggleGroup.<> <>9;
                static /*0x8*/ System.Predicate<UnityEngine.UI.ExtensionsToggle> <>9__18_0;
                static /*0x10*/ System.Func<UnityEngine.UI.ExtensionsToggle, bool> <>9__19_0;

                static /*0x10a01f4*/ <>c();
                /*0x10a0254*/ <>c();
                /*0x10a025c*/ bool <AnyTogglesOn>b__18_0(UnityEngine.UI.ExtensionsToggle x);
                /*0x10a0274*/ bool <ActiveToggles>b__19_0(UnityEngine.UI.ExtensionsToggle x);
            }
        }

        class ReturnKeyTriggersButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.EventSystems.IEventSystemHandler
        {
            /*0x18*/ UnityEngine.EventSystems.EventSystem _system;
            /*0x20*/ UnityEngine.UI.Button button;
            /*0x28*/ bool highlight;
            /*0x2c*/ float highlightDuration;

            /*0x11a66b0*/ ReturnKeyTriggersButton();
            /*0x11a64b8*/ void Start();
            /*0x11a6520*/ void RemoveHighlight();
            /*0x11a65a4*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
        }

        namespace Extensions
        {
            class Accordion : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.Accordion.Transition m_Transition;
                /*0x1c*/ float m_TransitionDuration;

                /*0x1209f48*/ Accordion();
                /*0x1209f28*/ UnityEngine.UI.Extensions.Accordion.Transition get_transition();
                /*0x1209f30*/ void set_transition(UnityEngine.UI.Extensions.Accordion.Transition value);
                /*0x1209f38*/ float get_transitionDuration();
                /*0x1209f40*/ void set_transitionDuration(float value);

                enum Transition
                {
                    Instant = 0,
                    Tween = 1,
                }
            }

            class AccordionElement : UnityEngine.UI.Toggle
            {
                /*0x11c*/ float m_MinHeight;
                /*0x120*/ UnityEngine.UI.Extensions.Accordion m_Accordion;
                /*0x128*/ UnityEngine.RectTransform m_RectTransform;
                /*0x130*/ UnityEngine.UI.LayoutElement m_LayoutElement;
                /*0x138*/ UnityEngine.UI.Extensions.Tweens.TweenRunner<UnityEngine.UI.Extensions.Tweens.FloatTween> m_FloatTweenRunner;

                /*0x1209f5c*/ AccordionElement();
                /*0x120a000*/ void Awake();
                /*0x120a17c*/ void OnValueChanged(bool state);
                /*0x120a2e0*/ float GetExpandedHeight();
                /*0x120a3d0*/ void StartTween(float startFloat, float targetFloat);
                /*0x120a53c*/ void SetHeight(float height);
            }

            class BoxSlider : UnityEngine.UI.Selectable, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IInitializePotentialDragHandler, UnityEngine.UI.ICanvasElement
            {
                /*0xf8*/ UnityEngine.RectTransform m_HandleRect;
                /*0x100*/ float m_MinValue;
                /*0x104*/ float m_MaxValue;
                /*0x108*/ bool m_WholeNumbers;
                /*0x10c*/ float m_ValueX;
                /*0x110*/ float m_ValueY;
                /*0x118*/ UnityEngine.UI.Extensions.BoxSlider.BoxSliderEvent m_OnValueChanged;
                /*0x120*/ UnityEngine.Transform m_HandleTransform;
                /*0x128*/ UnityEngine.RectTransform m_HandleContainerRect;
                /*0x130*/ UnityEngine.Vector2 m_Offset;
                /*0x138*/ UnityEngine.DrivenRectTransformTracker m_Tracker;

                static bool SetClass<T>(ref T currentValue, T newValue);
                static bool SetStruct<T>(ref T currentValue, T newValue);
                /*0x16efde8*/ BoxSlider();
                /*0x16ef620*/ UnityEngine.RectTransform get_HandleRect();
                /*0x16ef628*/ void set_HandleRect(UnityEngine.RectTransform value);
                /*0x16ef91c*/ float get_MinValue();
                /*0x16ef924*/ void set_MinValue(float value);
                /*0x16ef9cc*/ float get_MaxValue();
                /*0x16ef9d4*/ void set_MaxValue(float value);
                /*0x16efa6c*/ bool get_WholeNumbers();
                /*0x16efa74*/ void set_WholeNumbers(bool value);
                /*0x16efb0c*/ float get_ValueX();
                /*0x16efba8*/ void set_ValueX(float value);
                /*0x16efbb0*/ float get_NormalizedValueX();
                /*0x16efc1c*/ void set_NormalizedValueX(float value);
                /*0x16efc5c*/ float get_ValueY();
                /*0x16efcf8*/ void set_ValueY(float value);
                /*0x16efd00*/ float get_NormalizedValueY();
                /*0x16efd6c*/ void set_NormalizedValueY(float value);
                /*0x16efdac*/ UnityEngine.UI.Extensions.BoxSlider.BoxSliderEvent get_OnValueChanged();
                /*0x16efdb4*/ void set_OnValueChanged(UnityEngine.UI.Extensions.BoxSlider.BoxSliderEvent value);
                /*0x16efdbc*/ float get_StepSize();
                /*0x16efe9c*/ void Rebuild(UnityEngine.UI.CanvasUpdate executing);
                /*0x16efea0*/ void LayoutComplete();
                /*0x16efea4*/ void GraphicUpdateComplete();
                /*0x16efea8*/ void OnEnable();
                /*0x16f0194*/ void OnDisable();
                /*0x16ef6a8*/ void UpdateCachedReferences();
                /*0x16ef9bc*/ void SetX(float input);
                /*0x16efef8*/ void SetX(float input, bool sendCallback);
                /*0x16ef9c4*/ void SetY(float input);
                /*0x16f0048*/ void SetY(float input, bool sendCallback);
                /*0x16f01c4*/ void OnRectTransformDimensionsChange();
                /*0x16ef7b4*/ void UpdateVisuals();
                /*0x16f01ec*/ void UpdateDrag(UnityEngine.EventSystems.PointerEventData eventData, UnityEngine.Camera cam);
                /*0x16f0468*/ bool CanDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f04d0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f0698*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f06ec*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f0704*/ UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform();

                enum Direction
                {
                    LeftToRight = 0,
                    RightToLeft = 1,
                    BottomToTop = 2,
                    TopToBottom = 3,
                }

                class BoxSliderEvent : UnityEngine.Events.UnityEvent<float, float>
                {
                    /*0xda5174*/ BoxSliderEvent();
                }

                enum Axis
                {
                    Horizontal = 0,
                    Vertical = 1,
                }
            }

            class TiltWindow : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x18*/ UnityEngine.Vector2 range;
                /*0x20*/ UnityEngine.Transform mTrans;
                /*0x28*/ UnityEngine.Quaternion mStart;
                /*0x38*/ UnityEngine.Vector2 mRot;
                /*0x40*/ UnityEngine.Vector2 m_screenPos;

                /*0x116d924*/ TiltWindow();
                /*0x116d790*/ void Start();
                /*0x116d7d0*/ void Update();
                /*0x116d908*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            enum AutoCompleteSearchType
            {
                ArraySort = 0,
                Linq = 1,
            }

            class AutoCompleteComboBox : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color disabledTextColor;
                /*0x28*/ UnityEngine.UI.Extensions.DropDownListItem <SelectedItem>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<string> AvailableOptions;
                /*0x38*/ bool _isPanelActive;
                /*0x39*/ bool _hasDrawnOnce;
                /*0x40*/ UnityEngine.UI.InputField _mainInput;
                /*0x48*/ UnityEngine.RectTransform _inputRT;
                /*0x50*/ UnityEngine.RectTransform _rectTransform;
                /*0x58*/ UnityEngine.RectTransform _overlayRT;
                /*0x60*/ UnityEngine.RectTransform _scrollPanelRT;
                /*0x68*/ UnityEngine.RectTransform _scrollBarRT;
                /*0x70*/ UnityEngine.RectTransform _slidingAreaRT;
                /*0x78*/ UnityEngine.RectTransform _itemsPanelRT;
                /*0x80*/ UnityEngine.Canvas _canvas;
                /*0x88*/ UnityEngine.RectTransform _canvasRT;
                /*0x90*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x98*/ System.Collections.Generic.List<string> _panelItems;
                /*0xa0*/ System.Collections.Generic.List<string> _prunedPanelItems;
                /*0xa8*/ System.Collections.Generic.Dictionary<string, UnityEngine.GameObject> panelObjects;
                /*0xb0*/ UnityEngine.GameObject itemTemplate;
                /*0xb8*/ string <Text>k__BackingField;
                /*0xc0*/ float _scrollBarWidth;
                /*0xc4*/ int _itemsToDisplay;
                /*0xc8*/ bool SelectFirstItemOnStart;
                /*0xc9*/ bool _ChangeInputTextColorBasedOnMatchingItems;
                /*0xcc*/ UnityEngine.Color ValidSelectionTextColor;
                /*0xdc*/ UnityEngine.Color MatchingItemsRemainingTextColor;
                /*0xec*/ UnityEngine.Color NoItemsRemainingTextColor;
                /*0xfc*/ UnityEngine.UI.Extensions.AutoCompleteSearchType autocompleteSearchType;
                /*0x100*/ bool _selectionIsValid;
                /*0x108*/ UnityEngine.UI.Extensions.AutoCompleteComboBox.SelectionTextChangedEvent OnSelectionTextChanged;
                /*0x110*/ UnityEngine.UI.Extensions.AutoCompleteComboBox.SelectionValidityChangedEvent OnSelectionValidityChanged;
                /*0x118*/ UnityEngine.UI.Extensions.AutoCompleteComboBox.SelectionChangedEvent OnSelectionChanged;

                /*0xf87d94*/ AutoCompleteComboBox();
                /*0xf863c8*/ UnityEngine.UI.Extensions.DropDownListItem get_SelectedItem();
                /*0xf863d0*/ void set_SelectedItem(UnityEngine.UI.Extensions.DropDownListItem value);
                /*0xf863d8*/ string get_Text();
                /*0xf863e0*/ void set_Text(string value);
                /*0xf863e8*/ float get_ScrollBarWidth();
                /*0xf863f0*/ void set_ScrollBarWidth(float value);
                /*0xf867dc*/ int get_ItemsToDisplay();
                /*0xf867e4*/ void set_ItemsToDisplay(int value);
                /*0xf867ec*/ bool get_InputColorMatching();
                /*0xf867f4*/ void set_InputColorMatching(bool value);
                /*0xf868d0*/ void Awake();
                /*0xf86e18*/ void Start();
                /*0xf868d4*/ bool Initialize();
                /*0xf86f6c*/ void RebuildPanel();
                /*0xf86f30*/ void OnItemClicked(string item);
                /*0xf863f8*/ void RedrawPanel();
                /*0xf87678*/ void OnValueChanged(string currText);
                /*0xf86808*/ void SetInputTextColor();
                /*0xf86ebc*/ void ToggleDropdownPanel(bool directClick);
                /*0xf877ec*/ void PruneItems(string currText);
                /*0xf87800*/ void PruneItemsLinq(string currText);
                /*0xf87b0c*/ void PruneItemsArray(string currText);

                class SelectionChangedEvent : UnityEngine.Events.UnityEvent<string, bool>
                {
                    /*0xda07d4*/ SelectionChangedEvent();
                }

                class SelectionTextChangedEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xda0820*/ SelectionTextChangedEvent();
                }

                class SelectionValidityChangedEvent : UnityEngine.Events.UnityEvent<bool>
                {
                    /*0xda086c*/ SelectionValidityChangedEvent();
                }

                class <>c__DisplayClass54_0
                {
                    /*0x10*/ string textOfItem;
                    /*0x18*/ UnityEngine.UI.Extensions.AutoCompleteComboBox <>4__this;

                    /*0xda0748*/ <>c__DisplayClass54_0();
                    /*0xda0750*/ void <RebuildPanel>b__0();
                }

                class <>c__DisplayClass61_0
                {
                    /*0x10*/ string currText;

                    /*0xda0774*/ <>c__DisplayClass61_0();
                    /*0xda077c*/ bool <PruneItemsLinq>b__0(string x);
                    /*0xda07b0*/ bool <PruneItemsLinq>b__1(string x);
                }
            }

            class ComboBox : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color disabledTextColor;
                /*0x28*/ UnityEngine.UI.Extensions.DropDownListItem <SelectedItem>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<string> AvailableOptions;
                /*0x38*/ float _scrollBarWidth;
                /*0x3c*/ int _itemsToDisplay;
                /*0x40*/ UnityEngine.UI.Extensions.ComboBox.SelectionChangedEvent OnSelectionChanged;
                /*0x48*/ bool _isPanelActive;
                /*0x49*/ bool _hasDrawnOnce;
                /*0x50*/ UnityEngine.UI.InputField _mainInput;
                /*0x58*/ UnityEngine.RectTransform _inputRT;
                /*0x60*/ UnityEngine.RectTransform _rectTransform;
                /*0x68*/ UnityEngine.RectTransform _overlayRT;
                /*0x70*/ UnityEngine.RectTransform _scrollPanelRT;
                /*0x78*/ UnityEngine.RectTransform _scrollBarRT;
                /*0x80*/ UnityEngine.RectTransform _slidingAreaRT;
                /*0x88*/ UnityEngine.RectTransform _itemsPanelRT;
                /*0x90*/ UnityEngine.Canvas _canvas;
                /*0x98*/ UnityEngine.RectTransform _canvasRT;
                /*0xa0*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0xa8*/ System.Collections.Generic.List<string> _panelItems;
                /*0xb0*/ System.Collections.Generic.Dictionary<string, UnityEngine.GameObject> panelObjects;
                /*0xb8*/ UnityEngine.GameObject itemTemplate;
                /*0xc0*/ string <Text>k__BackingField;

                /*0x10e4598*/ ComboBox();
                /*0x10e33f4*/ UnityEngine.UI.Extensions.DropDownListItem get_SelectedItem();
                /*0x10e33fc*/ void set_SelectedItem(UnityEngine.UI.Extensions.DropDownListItem value);
                /*0x10e3404*/ string get_Text();
                /*0x10e340c*/ void set_Text(string value);
                /*0x10e3414*/ float get_ScrollBarWidth();
                /*0x10e341c*/ void set_ScrollBarWidth(float value);
                /*0x10e3808*/ int get_ItemsToDisplay();
                /*0x10e3810*/ void set_ItemsToDisplay(int value);
                /*0x10e3818*/ void Awake();
                /*0x10e381c*/ bool Initialize();
                /*0x10e3d24*/ void RebuildPanel();
                /*0x10e443c*/ void OnItemClicked(string item);
                /*0x10e3424*/ void RedrawPanel();
                /*0x10e44ec*/ void OnValueChanged(string currText);
                /*0x10e4478*/ void ToggleDropdownPanel(bool directClick);

                class SelectionChangedEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0x106f138*/ SelectionChangedEvent();
                }

                class <>c__DisplayClass38_0
                {
                    /*0x10*/ string textOfItem;
                    /*0x18*/ UnityEngine.UI.Extensions.ComboBox <>4__this;

                    /*0x106f10c*/ <>c__DisplayClass38_0();
                    /*0x106f114*/ void <RebuildPanel>b__0();
                }
            }

            class DropDownList : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color disabledTextColor;
                /*0x28*/ UnityEngine.UI.Extensions.DropDownListItem <SelectedItem>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.DropDownListItem> Items;
                /*0x38*/ bool OverrideHighlighted;
                /*0x39*/ bool _isPanelActive;
                /*0x3a*/ bool _hasDrawnOnce;
                /*0x40*/ UnityEngine.UI.Extensions.DropDownListButton _mainButton;
                /*0x48*/ UnityEngine.RectTransform _rectTransform;
                /*0x50*/ UnityEngine.RectTransform _overlayRT;
                /*0x58*/ UnityEngine.RectTransform _scrollPanelRT;
                /*0x60*/ UnityEngine.RectTransform _scrollBarRT;
                /*0x68*/ UnityEngine.RectTransform _slidingAreaRT;
                /*0x70*/ UnityEngine.RectTransform _itemsPanelRT;
                /*0x78*/ UnityEngine.Canvas _canvas;
                /*0x80*/ UnityEngine.RectTransform _canvasRT;
                /*0x88*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x90*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.DropDownListButton> _panelItems;
                /*0x98*/ UnityEngine.GameObject _itemTemplate;
                /*0xa0*/ float _scrollBarWidth;
                /*0xa4*/ int _selectedIndex;
                /*0xa8*/ int _itemsToDisplay;
                /*0xac*/ bool SelectFirstItemOnStart;
                /*0xb0*/ UnityEngine.UI.Extensions.DropDownList.SelectionChangedEvent OnSelectionChanged;

                /*0x11f4240*/ DropDownList();
                /*0x11f2d8c*/ UnityEngine.UI.Extensions.DropDownListItem get_SelectedItem();
                /*0x11f2d94*/ void set_SelectedItem(UnityEngine.UI.Extensions.DropDownListItem value);
                /*0x11f2d9c*/ float get_ScrollBarWidth();
                /*0x11f2da4*/ void set_ScrollBarWidth(float value);
                /*0x11f3198*/ int get_ItemsToDisplay();
                /*0x11f31a0*/ void set_ItemsToDisplay(int value);
                /*0x11f31a8*/ void Start();
                /*0x11f322c*/ bool Initialize();
                /*0x11f39bc*/ void RebuildPanel();
                /*0x11f37d8*/ void OnItemClicked(int indx);
                /*0x11f3ff0*/ void UpdateSelected();
                /*0x11f2dac*/ void RedrawPanel();
                /*0x11f3714*/ void ToggleDropdownPanel(bool directClick);

                class SelectionChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1079860*/ SelectionChangedEvent();
                }

                class <>c__DisplayClass35_0
                {
                    /*0x10*/ int ii;
                    /*0x18*/ UnityEngine.UI.Extensions.DropDownListItem item;
                    /*0x20*/ UnityEngine.UI.Extensions.DropDownList <>4__this;

                    /*0x1079804*/ <>c__DisplayClass35_0();
                    /*0x107980c*/ void <RebuildPanel>b__0();
                }
            }

            class DropDownListButton
            {
                /*0x10*/ UnityEngine.RectTransform rectTransform;
                /*0x18*/ UnityEngine.UI.Button btn;
                /*0x20*/ UnityEngine.UI.Text txt;
                /*0x28*/ UnityEngine.UI.Image btnImg;
                /*0x30*/ UnityEngine.UI.Image img;
                /*0x38*/ UnityEngine.GameObject gameobject;

                /*0x11f385c*/ DropDownListButton(UnityEngine.GameObject btnObj);
            }

            class DropDownListItem
            {
                /*0x10*/ string _caption;
                /*0x18*/ UnityEngine.Sprite _image;
                /*0x20*/ bool _isDisabled;
                /*0x28*/ string _id;
                /*0x30*/ System.Action OnSelect;
                /*0x38*/ System.Action OnUpdate;

                /*0x11f42dc*/ DropDownListItem(string caption, string inId, UnityEngine.Sprite image, bool disabled, System.Action onSelect);
                /*0x11f425c*/ string get_Caption();
                /*0x11f4264*/ void set_Caption(string value);
                /*0x11f4280*/ UnityEngine.Sprite get_Image();
                /*0x11f4288*/ void set_Image(UnityEngine.Sprite value);
                /*0x11f42a4*/ bool get_IsDisabled();
                /*0x11f42ac*/ void set_IsDisabled(bool value);
                /*0x11f42cc*/ string get_ID();
                /*0x11f42d4*/ void set_ID(string value);
            }

            class CooldownButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x18*/ float cooldownTimeout;
                /*0x1c*/ float cooldownSpeed;
                /*0x20*/ bool cooldownActive;
                /*0x21*/ bool cooldownInEffect;
                /*0x24*/ float cooldownTimeElapsed;
                /*0x28*/ float cooldownTimeRemaining;
                /*0x2c*/ int cooldownPercentRemaining;
                /*0x30*/ int cooldownPercentComplete;
                /*0x38*/ UnityEngine.EventSystems.PointerEventData buttonSource;
                /*0x40*/ UnityEngine.UI.Extensions.CooldownButton.CooldownButtonEvent OnCooldownStart;
                /*0x48*/ UnityEngine.UI.Extensions.CooldownButton.CooldownButtonEvent OnButtonClickDuringCooldown;
                /*0x50*/ UnityEngine.UI.Extensions.CooldownButton.CooldownButtonEvent OnCoolDownFinish;

                /*0xf4ce34*/ CooldownButton();
                /*0xf4cad4*/ float get_CooldownTimeout();
                /*0xf4cadc*/ void set_CooldownTimeout(float value);
                /*0xf4cae4*/ float get_CooldownSpeed();
                /*0xf4caec*/ void set_CooldownSpeed(float value);
                /*0xf4caf4*/ bool get_CooldownInEffect();
                /*0xf4cafc*/ bool get_CooldownActive();
                /*0xf4cb04*/ void set_CooldownActive(bool value);
                /*0xf4cb10*/ float get_CooldownTimeElapsed();
                /*0xf4cb18*/ void set_CooldownTimeElapsed(float value);
                /*0xf4cb20*/ float get_CooldownTimeRemaining();
                /*0xf4cb28*/ int get_CooldownPercentRemaining();
                /*0xf4cb30*/ int get_CooldownPercentComplete();
                /*0xf4cb38*/ void Update();
                /*0xf4cc74*/ void PauseCooldown();
                /*0xf4cc84*/ void RestartCooldown();
                /*0xf4cc98*/ void StartCooldown();
                /*0xf4cbf0*/ void StopCooldown();
                /*0xf4cd7c*/ void CancelCooldown();
                /*0xf4cd84*/ void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);

                class CooldownButtonEvent : UnityEngine.Events.UnityEvent<UnityEngine.EventSystems.PointerEventData.InputButton>
                {
                    /*0x10740a8*/ CooldownButtonEvent();
                }
            }

            class InputFocus : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.InputField _inputField;
                /*0x20*/ bool _ignoreNextActivation;

                /*0x15741b4*/ InputFocus();
                /*0x1573f90*/ void Start();
                /*0x1573fe4*/ void Update();
                /*0x1574058*/ void buttonPressed();
                /*0x1574114*/ void OnEndEdit(string textString);
            }

            class MultiTouchScrollRect : UnityEngine.UI.ScrollRect
            {
                /*0x128*/ int pid;

                /*0x2b439c4*/ MultiTouchScrollRect();
                /*0x2b43968*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2b43988*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2b439b4*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            class RadialSlider : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ bool isPointerDown;
                /*0x19*/ bool isPointerReleased;
                /*0x1a*/ bool lerpInProgress;
                /*0x1c*/ UnityEngine.Vector2 m_localPos;
                /*0x24*/ UnityEngine.Vector2 m_screenPos;
                /*0x2c*/ float m_targetAngle;
                /*0x30*/ float m_lerpTargetAngle;
                /*0x34*/ float m_startAngle;
                /*0x38*/ float m_currentLerpTime;
                /*0x3c*/ float m_lerpTime;
                /*0x40*/ UnityEngine.Camera m_eventCamera;
                /*0x48*/ UnityEngine.UI.Image m_image;
                /*0x50*/ UnityEngine.Color m_startColor;
                /*0x60*/ UnityEngine.Color m_endColor;
                /*0x70*/ bool m_lerpToTarget;
                /*0x78*/ UnityEngine.AnimationCurve m_lerpCurve;
                /*0x80*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderValueChangedEvent _onValueChanged;
                /*0x88*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderTextValueChangedEvent _onTextValueChanged;

                /*0x11ba080*/ RadialSlider();
                /*0x11b987c*/ float get_Angle();
                /*0x11b9994*/ void set_Angle(float value);
                /*0x11b9a84*/ float get_Value();
                /*0x11b9aa4*/ void set_Value(float value);
                /*0x11b9ab4*/ UnityEngine.Color get_EndColor();
                /*0x11b9ac0*/ void set_EndColor(UnityEngine.Color value);
                /*0x11b9acc*/ UnityEngine.Color get_StartColor();
                /*0x11b9ad8*/ void set_StartColor(UnityEngine.Color value);
                /*0x11b9ae4*/ bool get_LerpToTarget();
                /*0x11b9aec*/ void set_LerpToTarget(bool value);
                /*0x11b9af8*/ UnityEngine.AnimationCurve get_LerpCurve();
                /*0x11b9b00*/ void set_LerpCurve(UnityEngine.AnimationCurve value);
                /*0x11b9b80*/ bool get_LerpInProgress();
                /*0x11b98a8*/ UnityEngine.UI.Image get_RadialImage();
                /*0x11b9b88*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderValueChangedEvent get_onValueChanged();
                /*0x11b9b90*/ void set_onValueChanged(UnityEngine.UI.Extensions.RadialSlider.RadialSliderValueChangedEvent value);
                /*0x11b9b98*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderTextValueChangedEvent get_onTextValueChanged();
                /*0x11b9ba0*/ void set_onTextValueChanged(UnityEngine.UI.Extensions.RadialSlider.RadialSliderTextValueChangedEvent value);
                /*0x11b9ba8*/ void Awake();
                /*0x11b9c4c*/ void Update();
                /*0x11b99b0*/ void StartLerp(float targetAngle);
                /*0x11b9dbc*/ float GetAngleFromMousePoint();
                /*0x11b9a00*/ void UpdateRadialImage(float targetAngle);
                /*0x11b9ec4*/ void NotifyValueChanged();
                /*0x11b9fb4*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x11b9ff0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x11ba034*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x11ba064*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);

                class RadialSliderValueChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xf96e7c*/ RadialSliderValueChangedEvent();
                }

                class RadialSliderTextValueChangedEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xf96e30*/ RadialSliderTextValueChangedEvent();
                }
            }

            class ReorderableList : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.LayoutGroup ContentLayout;
                /*0x20*/ UnityEngine.RectTransform DraggableArea;
                /*0x28*/ bool IsDraggable;
                /*0x29*/ bool CloneDraggedObject;
                /*0x2a*/ bool IsDropable;
                /*0x2b*/ bool IsDisplacable;
                /*0x2c*/ int maxItems;
                /*0x30*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDropped;
                /*0x38*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementGrabbed;
                /*0x40*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementRemoved;
                /*0x48*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementAdded;
                /*0x50*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedFrom;
                /*0x58*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedTo;
                /*0x60*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedFromReturned;
                /*0x68*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedToReturned;
                /*0x70*/ UnityEngine.RectTransform _content;
                /*0x78*/ UnityEngine.UI.Extensions.ReorderableListContent _listContent;

                /*0xf1c7dc*/ ReorderableList();
                /*0xf1c154*/ UnityEngine.RectTransform get_Content();
                /*0xf1c1fc*/ UnityEngine.Canvas GetCanvas();
                /*0xf1c320*/ void Refresh();
                /*0xf1c4c4*/ void Start();
                /*0xf1c710*/ void TestReOrderableListTarget(UnityEngine.UI.Extensions.ReorderableList.ReorderableListEventStruct item);

                struct ReorderableListEventStruct
                {
                    /*0x10*/ UnityEngine.GameObject DroppedObject;
                    /*0x18*/ int FromIndex;
                    /*0x20*/ UnityEngine.UI.Extensions.ReorderableList FromList;
                    /*0x28*/ bool IsAClone;
                    /*0x30*/ UnityEngine.GameObject SourceObject;
                    /*0x38*/ int ToIndex;
                    /*0x40*/ UnityEngine.UI.Extensions.ReorderableList ToList;

                    /*0xa85604*/ void Cancel();
                }

                class ReorderableListHandler : UnityEngine.Events.UnityEvent<UnityEngine.UI.Extensions.ReorderableList.ReorderableListEventStruct>
                {
                    /*0xf98c94*/ ReorderableListHandler();
                }
            }

            class ReorderableListContent : UnityEngine.MonoBehaviour
            {
                /*0x18*/ System.Collections.Generic.List<UnityEngine.Transform> _cachedChildren;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.ReorderableListElement> _cachedListElement;
                /*0x28*/ UnityEngine.UI.Extensions.ReorderableListElement _ele;
                /*0x30*/ UnityEngine.UI.Extensions.ReorderableList _extList;
                /*0x38*/ UnityEngine.RectTransform _rect;

                /*0xf1ca48*/ ReorderableListContent();
                /*0xf1c904*/ void OnEnable();
                /*0xf1ca00*/ void OnTransformChildrenChanged();
                /*0xf1c3cc*/ void Init(UnityEngine.UI.Extensions.ReorderableList extList);
                /*0xf1c994*/ System.Collections.IEnumerator RefreshChildren();

                class <RefreshChildren>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.ReorderableListContent <>4__this;

                    /*0xf98ce0*/ <RefreshChildren>d__8(int <>1__state);
                    /*0xf98d0c*/ void System.IDisposable.Dispose();
                    /*0xf98d10*/ bool MoveNext();
                    /*0xf9903c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xf99044*/ void System.Collections.IEnumerator.Reset();
                    /*0xf99084*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class ReorderableListDebug : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Text DebugLabel;

                /*0xf1cf08*/ ReorderableListDebug();
                /*0xf1ca50*/ void Awake();
                /*0xf1cbb8*/ void ElementDropped(UnityEngine.UI.Extensions.ReorderableList.ReorderableListEventStruct droppedStruct);
            }

            class ReorderableListElement : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEndDragHandler
            {
                /*0x18*/ bool IsGrabbable;
                /*0x19*/ bool IsTransferable;
                /*0x1a*/ bool isDroppableInSpace;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.EventSystems.RaycastResult> _raycastResults;
                /*0x28*/ UnityEngine.UI.Extensions.ReorderableList _currentReorderableListRaycasted;
                /*0x30*/ int _fromIndex;
                /*0x38*/ UnityEngine.RectTransform _draggingObject;
                /*0x40*/ UnityEngine.UI.LayoutElement _draggingObjectLE;
                /*0x48*/ UnityEngine.Vector2 _draggingObjectOriginalSize;
                /*0x50*/ UnityEngine.RectTransform _fakeElement;
                /*0x58*/ UnityEngine.UI.LayoutElement _fakeElementLE;
                /*0x60*/ int _displacedFromIndex;
                /*0x68*/ UnityEngine.RectTransform _displacedObject;
                /*0x70*/ UnityEngine.UI.LayoutElement _displacedObjectLE;
                /*0x78*/ UnityEngine.Vector2 _displacedObjectOriginalSize;
                /*0x80*/ UnityEngine.UI.Extensions.ReorderableList _displacedObjectOriginList;
                /*0x88*/ bool _isDragging;
                /*0x90*/ UnityEngine.RectTransform _rect;
                /*0x98*/ UnityEngine.UI.Extensions.ReorderableList _reorderableList;
                /*0xa0*/ UnityEngine.CanvasGroup _canvasGroup;
                /*0xa8*/ bool isValid;

                /*0xf1ef68*/ ReorderableListElement();
                /*0xf1cf10*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xf1d8c0*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xf1e408*/ void displaceElement(int targetIndex, UnityEngine.Transform displaced);
                /*0xf1e0d8*/ void revertDisplacedElement();
                /*0xf1e8b4*/ void finishDisplacingElement();
                /*0xf1e998*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xf1d574*/ void CancelDrag();
                /*0xf1d358*/ void RefreshSizes();
                /*0xf1eed8*/ void Init(UnityEngine.UI.Extensions.ReorderableList reorderableList);
            }

            class RescaleDragPanel : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.Vector2 pointerOffset;
                /*0x20*/ UnityEngine.RectTransform canvasRectTransform;
                /*0x28*/ UnityEngine.RectTransform panelRectTransform;
                /*0x30*/ UnityEngine.Transform goTransform;

                /*0xf25718*/ RescaleDragPanel();
                /*0xf252b4*/ void Awake();
                /*0xf253f0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData data);
                /*0xf254ac*/ void OnDrag(UnityEngine.EventSystems.PointerEventData data);
                /*0xf25628*/ UnityEngine.Vector2 ClampToWindow(UnityEngine.EventSystems.PointerEventData data);
            }

            class RescalePanel : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.Vector2 minSize;
                /*0x20*/ UnityEngine.Vector2 maxSize;
                /*0x28*/ UnityEngine.RectTransform rectTransform;
                /*0x30*/ UnityEngine.Transform goTransform;
                /*0x38*/ UnityEngine.Vector2 currentPointerPosition;
                /*0x40*/ UnityEngine.Vector2 previousPointerPosition;
                /*0x48*/ UnityEngine.RectTransform thisRectTransform;
                /*0x50*/ UnityEngine.Vector2 sizeDelta;

                /*0xf25a44*/ RescalePanel();
                /*0xf25720*/ void Awake();
                /*0xf257cc*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData data);
                /*0xf25888*/ void OnDrag(UnityEngine.EventSystems.PointerEventData data);
            }

            class ResizePanel : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.Vector2 minSize;
                /*0x20*/ UnityEngine.Vector2 maxSize;
                /*0x28*/ UnityEngine.RectTransform rectTransform;
                /*0x30*/ UnityEngine.Vector2 currentPointerPosition;
                /*0x38*/ UnityEngine.Vector2 previousPointerPosition;
                /*0x40*/ float ratio;

                /*0xf25d78*/ ResizePanel();
                /*0xf25a4c*/ void Awake();
                /*0xf25b44*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData data);
                /*0xf25c00*/ void OnDrag(UnityEngine.EventSystems.PointerEventData data);
            }

            class Segment : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ int index;
                /*0x20*/ UnityEngine.UI.Extensions.SegmentedControl segmentedControl;
                /*0x28*/ UnityEngine.Sprite cutSprite;

                /*0xe21b58*/ Segment();
                /*0xe21778*/ bool get_leftmost();
                /*0xe21788*/ bool get_rightmost();
                /*0xe2181c*/ bool get_selected();
                /*0xe218f0*/ void set_selected(bool value);
                /*0xe218a4*/ UnityEngine.UI.Selectable get_button();
                /*0xe21b60*/ void Start();
                /*0xe21b8c*/ System.Collections.IEnumerator DelayedInit();
                /*0xe21bf8*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21c1c*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21ccc*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21cd0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21cd4*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21cd8*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xe21cdc*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xe21ce0*/ void OnEnable();
                /*0xe21d6c*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xe218f8*/ void SetSelected(bool value);
                /*0xe21d74*/ void Deselect();
                /*0xe21c20*/ void MaintainSelection();
                /*0xe21dec*/ void TransitionButton();
                /*0xe21df4*/ void TransitionButton(bool instant);
                /*0xe220fc*/ void StartColorTween(UnityEngine.Color targetColor, bool instant);
                /*0xe2221c*/ void ChangeTextColor(UnityEngine.Color targetColor);
                /*0xe22474*/ void DoSpriteSwap(UnityEngine.Sprite newSprite);
                /*0xe22540*/ void TriggerAnimation(string triggername);

                class <DelayedInit>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.Segment <>4__this;

                    /*0xcbdce8*/ <DelayedInit>d__14(int <>1__state);
                    /*0xcbdd14*/ void System.IDisposable.Dispose();
                    /*0xcbdd18*/ bool MoveNext();
                    /*0xcbddcc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbddd4*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbde14*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class SegmentedControl : UnityEngine.EventSystems.UIBehaviour
            {
                /*0x18*/ UnityEngine.UI.Selectable[] m_segments;
                /*0x20*/ UnityEngine.UI.Graphic m_separator;
                /*0x28*/ float m_separatorWidth;
                /*0x2c*/ bool m_allowSwitchingOff;
                /*0x30*/ int m_selectedSegmentIndex;
                /*0x38*/ UnityEngine.UI.Extensions.SegmentedControl.SegmentSelectedEvent m_onValueChanged;
                /*0x40*/ UnityEngine.UI.Selectable selectedSegment;

                static /*0xe2230c*/ UnityEngine.Sprite CutSprite(UnityEngine.Sprite sprite, bool leftmost, bool rightmost);
                /*0xe2324c*/ SegmentedControl();
                /*0xe22764*/ float get_SeparatorWidth();
                /*0xe217e4*/ UnityEngine.UI.Selectable[] get_segments();
                /*0xe22a18*/ UnityEngine.UI.Graphic get_separator();
                /*0xe22a20*/ void set_separator(UnityEngine.UI.Graphic value);
                /*0xe22fac*/ bool get_allowSwitchingOff();
                /*0xe22fb4*/ void set_allowSwitchingOff(bool value);
                /*0xe22fc0*/ int get_selectedSegmentIndex();
                /*0xe23028*/ void set_selectedSegmentIndex(int value);
                /*0xe2323c*/ UnityEngine.UI.Extensions.SegmentedControl.SegmentSelectedEvent get_onValueChanged();
                /*0xe23244*/ void set_onValueChanged(UnityEngine.UI.Extensions.SegmentedControl.SegmentSelectedEvent value);
                /*0xe232b8*/ void Start();
                /*0xe23378*/ void OnEnable();
                /*0xe2330c*/ System.Collections.IEnumerator DelayedInit();
                /*0xe228a8*/ UnityEngine.UI.Selectable[] GetChildSegments();
                /*0xe233a4*/ void RecreateSprites();
                /*0xe22a2c*/ void LayoutSegments();

                class SegmentSelectedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcbdf14*/ SegmentSelectedEvent();
                }

                class <DelayedInit>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.SegmentedControl <>4__this;

                    /*0xcbde1c*/ <DelayedInit>d__27(int <>1__state);
                    /*0xcbde48*/ void System.IDisposable.Dispose();
                    /*0xcbde4c*/ bool MoveNext();
                    /*0xcbdec4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbdecc*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbdf0c*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class ExampleSelectable : UnityEngine.MonoBehaviour, UnityEngine.UI.Extensions.IBoxSelectable
            {
                /*0x18*/ bool _selected;
                /*0x19*/ bool _preSelected;
                /*0x20*/ UnityEngine.SpriteRenderer spriteRenderer;
                /*0x28*/ UnityEngine.UI.Image image;
                /*0x30*/ UnityEngine.UI.Text text;

                /*0x11d6544*/ ExampleSelectable();
                /*0x11d6218*/ bool get_selected();
                /*0x11d6220*/ void set_selected(bool value);
                /*0x11d622c*/ bool get_preSelected();
                /*0x11d6234*/ void set_preSelected(bool value);
                /*0x11d6240*/ void Start();
                /*0x11d6304*/ void Update();
                /*0x11d654c*/ UnityEngine.Transform UnityEngine.UI.Extensions.IBoxSelectable.get_transform();
            }

            interface IBoxSelectable
            {
                bool get_selected();
                void set_selected(bool value);
                bool get_preSelected();
                void set_preSelected(bool value);
                UnityEngine.Transform get_transform();
            }

            class SelectionBox : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color color;
                /*0x28*/ UnityEngine.Sprite art;
                /*0x30*/ UnityEngine.Vector2 origin;
                /*0x38*/ UnityEngine.RectTransform selectionMask;
                /*0x40*/ UnityEngine.RectTransform boxRect;
                /*0x48*/ UnityEngine.UI.Extensions.IBoxSelectable[] selectables;
                /*0x50*/ UnityEngine.MonoBehaviour[] selectableGroup;
                /*0x58*/ UnityEngine.UI.Extensions.IBoxSelectable clickedBeforeDrag;
                /*0x60*/ UnityEngine.UI.Extensions.IBoxSelectable clickedAfterDrag;
                /*0x68*/ UnityEngine.UI.Extensions.SelectionBox.SelectionEvent onSelectionChange;

                /*0xe261c4*/ SelectionBox();
                /*0xe244cc*/ void ValidateCanvas();
                /*0xe2469c*/ void SetSelectableGroup(System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour> behaviourCollection);
                /*0xe24a18*/ void CreateBoxRect();
                /*0xe24b34*/ void ResetBoxRect();
                /*0xe24c70*/ void BeginSelection();
                /*0xe24f1c*/ bool PointIsValidAgainstSelectionMask(UnityEngine.Vector2 screenPoint);
                /*0xe25004*/ UnityEngine.UI.Extensions.IBoxSelectable GetSelectableAtMousePosition();
                /*0xe25784*/ void DragSelection();
                /*0xe25a4c*/ void ApplySingleClickDeselection();
                /*0xe25d20*/ void ApplyPreSelections();
                /*0xe254f4*/ UnityEngine.Vector2 GetScreenPointOfSelectable(UnityEngine.UI.Extensions.IBoxSelectable selectable);
                /*0xe25334*/ UnityEngine.Camera GetScreenPointCamera(UnityEngine.RectTransform rectTransform);
                /*0xe25ef0*/ UnityEngine.UI.Extensions.IBoxSelectable[] GetAllSelected();
                /*0xe260a8*/ void EndSelection();
                /*0xe2616c*/ void Start();
                /*0xe26198*/ void Update();

                class SelectionEvent : UnityEngine.Events.UnityEvent<UnityEngine.UI.Extensions.IBoxSelectable[]>
                {
                    /*0xcbe418*/ SelectionEvent();
                }
            }

            class Stepper : UnityEngine.EventSystems.UIBehaviour
            {
                /*0x18*/ UnityEngine.UI.Selectable[] _sides;
                /*0x20*/ int _value;
                /*0x24*/ int _minimum;
                /*0x28*/ int _maximum;
                /*0x2c*/ int _step;
                /*0x30*/ bool _wrap;
                /*0x38*/ UnityEngine.UI.Graphic _separator;
                /*0x40*/ float _separatorWidth;
                /*0x48*/ UnityEngine.UI.Extensions.Stepper.StepperValueChangedEvent _onValueChanged;

                static /*0xc9c730*/ UnityEngine.Sprite CutSprite(UnityEngine.Sprite sprite, bool leftmost);
                /*0xc9c26c*/ Stepper();
                /*0xc9bb0c*/ float get_separatorWidth();
                /*0xc9bc50*/ UnityEngine.UI.Selectable[] get_sides();
                /*0xc9bd5c*/ int get_value();
                /*0xc9bd64*/ void set_value(int value);
                /*0xc9bd6c*/ int get_minimum();
                /*0xc9bd74*/ void set_minimum(int value);
                /*0xc9bd7c*/ int get_maximum();
                /*0xc9bd84*/ void set_maximum(int value);
                /*0xc9bd8c*/ int get_step();
                /*0xc9bd94*/ void set_step(int value);
                /*0xc9bd9c*/ bool get_wrap();
                /*0xc9bda4*/ void set_wrap(bool value);
                /*0xc9bdb0*/ UnityEngine.UI.Graphic get_separator();
                /*0xc9bdb8*/ void set_separator(UnityEngine.UI.Graphic value);
                /*0xc9c25c*/ UnityEngine.UI.Extensions.Stepper.StepperValueChangedEvent get_onValueChanged();
                /*0xc9c264*/ void set_onValueChanged(UnityEngine.UI.Extensions.Stepper.StepperValueChangedEvent value);
                /*0xc9c2dc*/ void Start();
                /*0xc9c390*/ void OnEnable();
                /*0xc9c324*/ System.Collections.IEnumerator DelayedInit();
                /*0xc9bc88*/ UnityEngine.UI.Selectable[] GetSides();
                /*0xc9c460*/ void StepUp();
                /*0xc9c588*/ void StepDown();
                /*0xc9c468*/ void Step(int amount);
                /*0xc9c3bc*/ void DisableAtExtremes(UnityEngine.UI.Selectable[] sides);
                /*0xc9c594*/ void RecreateSprites(UnityEngine.UI.Selectable[] sides);
                /*0xc9be04*/ void LayoutSides(UnityEngine.UI.Selectable[] sides);

                class StepperValueChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcc3bf4*/ StepperValueChangedEvent();
                }

                class <DelayedInit>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.Stepper <>4__this;

                    /*0xcc3b04*/ <DelayedInit>d__38(int <>1__state);
                    /*0xcc3b30*/ void System.IDisposable.Dispose();
                    /*0xcc3b34*/ bool MoveNext();
                    /*0xcc3ba4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcc3bac*/ void System.Collections.IEnumerator.Reset();
                    /*0xcc3bec*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class StepperSide : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ UnityEngine.Sprite cutSprite;

                /*0xc9c9dc*/ StepperSide();
                /*0xc9c880*/ UnityEngine.UI.Selectable get_button();
                /*0xc9c8cc*/ UnityEngine.UI.Extensions.Stepper get_stepper();
                /*0xc9c918*/ bool get_leftmost();
                /*0xc9c9e4*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cbe8*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xc9cc10*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc18*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc20*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc28*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc30*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xc9cc38*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xc9ca28*/ void Press();
                /*0xc9cab0*/ void AdjustSprite(bool restore);
            }

            class TextPic : UnityEngine.UI.Text, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.ISelectHandler
            {
                static /*0x0*/ System.Text.RegularExpressions.Regex s_Regex;
                static /*0x8*/ System.Text.StringBuilder s_TextBuilder;
                static /*0x10*/ System.Text.RegularExpressions.Regex s_HrefRegex;
                /*0x100*/ System.Collections.Generic.List<UnityEngine.UI.Image> m_ImagesPool;
                /*0x108*/ System.Collections.Generic.List<UnityEngine.GameObject> culled_ImagesPool;
                /*0x110*/ bool clearImages;
                /*0x118*/ UnityEngine.Object thisLock;
                /*0x120*/ System.Collections.Generic.List<int> m_ImagesVertexIndex;
                /*0x128*/ string fixedString;
                /*0x130*/ bool m_ClickParents;
                /*0x131*/ bool updateQuad;
                /*0x138*/ string m_OutputText;
                /*0x140*/ UnityEngine.UI.Extensions.TextPic.IconName[] inspectorIconList;
                /*0x148*/ float ImageScalingFactor;
                /*0x150*/ string hyperlinkColor;
                /*0x158*/ UnityEngine.Vector2 imageOffset;
                /*0x160*/ UnityEngine.UI.Button button;
                /*0x168*/ System.Collections.Generic.List<UnityEngine.Vector2> positions;
                /*0x170*/ string previousText;
                /*0x178*/ bool isCreating_m_HrefInfos;
                /*0x180*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.TextPic.HrefInfo> m_HrefInfos;
                /*0x188*/ UnityEngine.UI.Extensions.TextPic.HrefClickEvent m_OnHrefClick;

                static /*0x116b850*/ TextPic();
                /*0x116b5fc*/ TextPic();
                /*0x1168904*/ bool get_AllowClickParents();
                /*0x116890c*/ void set_AllowClickParents(bool value);
                /*0x1168918*/ void SetVerticesDirty();
                /*0x1168944*/ void Start();
                /*0x11689a8*/ void ResetIconList();
                /*0x1168a4c*/ void UpdateQuadImage();
                /*0x116a1a8*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper toFill);
                /*0x116a760*/ UnityEngine.UI.Extensions.TextPic.HrefClickEvent get_onHrefClick();
                /*0x116a768*/ void set_onHrefClick(UnityEngine.UI.Extensions.TextPic.HrefClickEvent value);
                /*0x1169494*/ string GetOutputText();
                /*0x116a770*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x116a9dc*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x116abbc*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x116addc*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x116afbc*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x116b19c*/ void LateUpdate();
                /*0x11689d0*/ void Reset_m_HrefInfos();
                /*0x116b39c*/ void OnEnable();
                /*0x116b4d0*/ void OnDisable();

                struct IconName
                {
                    /*0x10*/ string name;
                    /*0x18*/ UnityEngine.Sprite sprite;
                    /*0x20*/ UnityEngine.Vector2 offset;
                    /*0x28*/ UnityEngine.Vector2 scale;
                }

                class HrefClickEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xcd0c24*/ HrefClickEvent();
                }

                class HrefInfo
                {
                    /*0x10*/ int startIndex;
                    /*0x14*/ int endIndex;
                    /*0x18*/ string name;
                    /*0x20*/ System.Collections.Generic.List<UnityEngine.Rect> boxes;

                    /*0xcd0c70*/ HrefInfo();
                }

                class <>c
                {
                    static /*0x0*/ UnityEngine.UI.Extensions.TextPic.<> <>9;
                    static /*0x8*/ System.Predicate<UnityEngine.UI.Image> <>9__25_0;

                    static /*0xcd0b54*/ <>c();
                    /*0xcd0bb4*/ <>c();
                    /*0xcd0bbc*/ bool <UpdateQuadImage>b__25_0(UnityEngine.UI.Image image);
                }
            }

            class UI_Knob : UnityEngine.UI.Selectable, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IInitializePotentialDragHandler
            {
                /*0xf8*/ UnityEngine.UI.Extensions.UI_Knob.Direction direction;
                /*0xfc*/ float knobValue;
                /*0x100*/ float maxValue;
                /*0x104*/ int loops;
                /*0x108*/ bool clampOutput01;
                /*0x109*/ bool snapToPosition;
                /*0x10c*/ int snapStepsPerLoop;
                /*0x110*/ UnityEngine.UI.Extensions.KnobFloatValueEvent OnValueChanged;
                /*0x118*/ float _currentLoops;
                /*0x11c*/ float _previousValue;
                /*0x120*/ float _initAngle;
                /*0x124*/ float _currentAngle;
                /*0x128*/ UnityEngine.Vector2 _currentVector;
                /*0x130*/ UnityEngine.Quaternion _initRotation;
                /*0x140*/ bool _canDrag;
                /*0x141*/ bool _screenSpaceOverlay;

                /*0x236abf4*/ UI_Knob();
                /*0x236a5b4*/ void Awake();
                /*0x236a62c*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a634*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a640*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a648*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a734*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236aa94*/ void SnapToPosition(ref float knobValue);
                /*0x236ab64*/ void InvokeEvents(float value);
                /*0x236abdc*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);

                enum Direction
                {
                    CW = 0,
                    CCW = 1,
                }
            }

            class KnobFloatValueEvent : UnityEngine.Events.UnityEvent<float>
            {
                /*0xfa8850*/ KnobFloatValueEvent();
            }

            class BestFitOutline : UnityEngine.UI.Shadow
            {
                /*0x1362368*/ BestFitOutline();
                /*0x1362370*/ void ModifyMesh(UnityEngine.Mesh mesh);
            }

            class CUIBezierCurve : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ int CubicBezierCurvePtNum;
                /*0x18*/ UnityEngine.Vector3[] controlPoints;
                /*0x20*/ System.Action OnRefresh;

                static /*0x134198c*/ CUIBezierCurve();
                /*0x1341984*/ CUIBezierCurve();
                /*0x1341678*/ UnityEngine.Vector3[] get_ControlPoints();
                /*0x1341680*/ void Refresh();
                /*0x1341694*/ UnityEngine.Vector3 GetPoint(float _time);
                /*0x1341768*/ UnityEngine.Vector3 GetTangent(float _time);
                /*0x1341838*/ void ReportSet();
            }

            class CUIGraphic : UnityEngine.UI.BaseMeshEffect
            {
                static /*0x0*/ int bottomCurveIdx;
                static /*0x4*/ int topCurveIdx;
                /*0x20*/ bool isCurved;
                /*0x21*/ bool isLockWithRatio;
                /*0x24*/ float resolution;
                /*0x28*/ UnityEngine.RectTransform rectTrans;
                /*0x30*/ UnityEngine.UI.Graphic uiGraphic;
                /*0x38*/ UnityEngine.UI.Extensions.CUIGraphic refCUIGraphic;
                /*0x40*/ UnityEngine.UI.Extensions.CUIBezierCurve[] refCurves;
                /*0x48*/ UnityEngine.UI.Extensions.Vector3_Array2D[] refCurvesControlRatioPoints;
                /*0x50*/ System.Collections.Generic.List<UnityEngine.UIVertex> reuse_quads;

                static /*0x13445dc*/ CUIGraphic();
                /*0x1344554*/ CUIGraphic();
                /*0x13419dc*/ bool get_IsCurved();
                /*0x13419e4*/ bool get_IsLockWithRatio();
                /*0x13419ec*/ UnityEngine.RectTransform get_RectTrans();
                /*0x13419f4*/ UnityEngine.UI.Graphic get_UIGraphic();
                /*0x13419fc*/ UnityEngine.UI.Extensions.CUIGraphic get_RefCUIGraphic();
                /*0x1341a04*/ UnityEngine.UI.Extensions.CUIBezierCurve[] get_RefCurves();
                /*0x1341a0c*/ UnityEngine.UI.Extensions.Vector3_Array2D[] get_RefCurvesControlRatioPoints();
                /*0x1341a14*/ void solveDoubleEquationWithVector(float _x_1, float _y_1, float _x_2, float _y_2, UnityEngine.Vector3 _constant_1, UnityEngine.Vector3 _contant_2, ref UnityEngine.Vector3 _x, ref UnityEngine.Vector3 _y);
                /*0x1341b30*/ UnityEngine.UIVertex uiVertexLerp(UnityEngine.UIVertex _a, UnityEngine.UIVertex _b, float _time);
                /*0x1341e3c*/ UnityEngine.UIVertex uiVertexBerp(UnityEngine.UIVertex v_bottomLeft, UnityEngine.UIVertex v_topLeft, UnityEngine.UIVertex v_topRight, UnityEngine.UIVertex v_bottomRight, float _xTime, float _yTime);
                /*0x1341f5c*/ void tessellateQuad(System.Collections.Generic.List<UnityEngine.UIVertex> _quads, int _thisQuadIdx);
                /*0x13426c8*/ void tessellateGraphic(System.Collections.Generic.List<UnityEngine.UIVertex> _verts);
                /*0x1342bec*/ void OnRectTransformDimensionsChange();
                /*0x1342e34*/ void Refresh();
                /*0x13430f4*/ void Awake();
                /*0x1343124*/ void OnEnable();
                /*0x1343154*/ void ReportSet();
                /*0x13435e0*/ void FixTextToRectTrans();
                /*0x1343858*/ void ReferenceCUIForBCurves();
                /*0x1343fd4*/ void ModifyMesh(UnityEngine.Mesh _mesh);
                /*0x1344160*/ void ModifyMesh(UnityEngine.UI.VertexHelper _vh);
                /*0x1344244*/ void modifyVertices(System.Collections.Generic.List<UnityEngine.UIVertex> _verts);
                /*0x1342bfc*/ void UpdateCurveControlPointPositions();
                /*0x1343f1c*/ UnityEngine.Vector3 GetBCurveSandwichSpacePoint(float _xTime, float _yTime);
                /*0x134449c*/ UnityEngine.Vector3 GetBCurveSandwichSpaceTangent(float _xTime, float _yTime);
            }

            class CUIImage : UnityEngine.UI.Extensions.CUIGraphic
            {
                static /*0x0*/ int SlicedImageCornerRefVertexIdx;
                static /*0x4*/ int FilledImageCornerRefVertexIdx;
                /*0x58*/ UnityEngine.Vector2 cornerPosRatio;
                /*0x60*/ UnityEngine.Vector2 oriCornerPosRatio;

                static /*0x1344ee4*/ CUIImage();
                static /*0x1344638*/ int ImageTypeCornerRefVertexIdx(UnityEngine.UI.Image.Type _type);
                /*0x1344e5c*/ CUIImage();
                /*0x13446c8*/ UnityEngine.Vector2 get_OriCornerPosRatio();
                /*0x13446d0*/ UnityEngine.UI.Image get_UIImage();
                /*0x134474c*/ void ReportSet();
                /*0x13447e8*/ void modifyVertices(System.Collections.Generic.List<UnityEngine.UIVertex> _verts);
            }

            struct Vector3_Array2D
            {
                /*0x10*/ UnityEngine.Vector3[] array;

                /*0xa8a6dc*/ UnityEngine.Vector3 get_Item(int _idx);
                /*0xa8a6e4*/ void set_Item(int _idx, UnityEngine.Vector3 value);
            }

            class CUIText : UnityEngine.UI.Extensions.CUIGraphic
            {
                /*0x1344fdc*/ CUIText();
                /*0x1344f40*/ void ReportSet();
            }

            class CurvedText : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.AnimationCurve _curveForText;
                /*0x28*/ float _curveMultiplier;
                /*0x30*/ UnityEngine.RectTransform rectTrans;

                /*0xf4df54*/ CurvedText();
                /*0xf4db78*/ UnityEngine.AnimationCurve get_CurveForText();
                /*0xf4db80*/ void set_CurveForText(UnityEngine.AnimationCurve value);
                /*0xf4dbb0*/ float get_CurveMultiplier();
                /*0xf4dbb8*/ void set_CurveMultiplier(float value);
                /*0xf4dbe8*/ void Awake();
                /*0xf4dc54*/ void OnEnable();
                /*0xf4dcc0*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
                /*0xf4de28*/ void OnRectTransformDimensionsChange();
            }

            class CylinderText : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ float radius;

                /*0xf4f3e8*/ CylinderText();
                /*0xf4f258*/ void Awake();
                /*0xf4f288*/ void OnEnable();
                /*0xf4f2b8*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class Gradient : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.UI.Extensions.GradientMode _gradientMode;
                /*0x24*/ UnityEngine.UI.Extensions.GradientDir _gradientDir;
                /*0x28*/ bool _overwriteAllColor;
                /*0x2c*/ UnityEngine.Color _vertex1;
                /*0x3c*/ UnityEngine.Color _vertex2;
                /*0x50*/ UnityEngine.UI.Graphic targetGraphic;

                /*0xed57e8*/ Gradient();
                /*0xed5054*/ UnityEngine.UI.Extensions.GradientMode get_GradientMode();
                /*0xed505c*/ void set_GradientMode(UnityEngine.UI.Extensions.GradientMode value);
                /*0xed508c*/ UnityEngine.UI.Extensions.GradientDir get_GradientDir();
                /*0xed5094*/ void set_GradientDir(UnityEngine.UI.Extensions.GradientDir value);
                /*0xed50c4*/ bool get_OverwriteAllColor();
                /*0xed50cc*/ void set_OverwriteAllColor(bool value);
                /*0xed5100*/ UnityEngine.Color get_Vertex1();
                /*0xed510c*/ void set_Vertex1(UnityEngine.Color value);
                /*0xed5140*/ UnityEngine.Color get_Vertex2();
                /*0xed514c*/ void set_Vertex2(UnityEngine.Color value);
                /*0xed5180*/ void Awake();
                /*0xed51d4*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
                /*0xed57a0*/ bool CompareCarefully(UnityEngine.Color col1, UnityEngine.Color col2);
            }

            enum GradientMode
            {
                Global = 0,
                Local = 1,
            }

            enum GradientDir
            {
                Vertical = 0,
                Horizontal = 1,
                DiagonalLeftToRight = 2,
                DiagonalRightToLeft = 3,
            }

            class Gradient2 : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.UI.Extensions.Gradient2.Type _gradientType;
                /*0x24*/ UnityEngine.UI.Extensions.Gradient2.Blend _blendMode;
                /*0x28*/ bool _modifyVertices;
                /*0x2c*/ float _offset;
                /*0x30*/ float _zoom;
                /*0x38*/ UnityEngine.Gradient _effectGradient;

                /*0xed8108*/ Gradient2();
                /*0xed582c*/ UnityEngine.UI.Extensions.Gradient2.Blend get_BlendMode();
                /*0xed5834*/ void set_BlendMode(UnityEngine.UI.Extensions.Gradient2.Blend value);
                /*0xed5864*/ UnityEngine.Gradient get_EffectGradient();
                /*0xed586c*/ void set_EffectGradient(UnityEngine.Gradient value);
                /*0xed589c*/ UnityEngine.UI.Extensions.Gradient2.Type get_GradientType();
                /*0xed58a4*/ void set_GradientType(UnityEngine.UI.Extensions.Gradient2.Type value);
                /*0xed58d4*/ bool get_ModifyVertices();
                /*0xed58dc*/ void set_ModifyVertices(bool value);
                /*0xed5910*/ float get_Offset();
                /*0xed5918*/ void set_Offset(float value);
                /*0xed5948*/ float get_Zoom();
                /*0xed5950*/ void set_Zoom(float value);
                /*0xed5980*/ void ModifyMesh(UnityEngine.UI.VertexHelper helper);
                /*0xed67f8*/ UnityEngine.Rect GetBounds(System.Collections.Generic.List<UnityEngine.UIVertex> vertices);
                /*0xed69b8*/ void SplitTrianglesAtGradientStops(System.Collections.Generic.List<UnityEngine.UIVertex> _vertexList, UnityEngine.Rect bounds, float zoomOffset, UnityEngine.UI.VertexHelper helper);
                /*0xed7de0*/ float[] GetPositions(System.Collections.Generic.List<UnityEngine.UIVertex> _vertexList, int index);
                /*0xed7a54*/ System.Collections.Generic.List<float> FindStops(float zoomOffset, UnityEngine.Rect bounds);
                /*0xed7fb4*/ UnityEngine.UIVertex CreateSplitVertex(UnityEngine.UIVertex vertex1, UnityEngine.UIVertex vertex2, float stop);
                /*0xed79fc*/ UnityEngine.Color BlendColor(UnityEngine.Color colorA, UnityEngine.Color colorB);

                enum Type
                {
                    Horizontal = 0,
                    Vertical = 1,
                    Radial = 2,
                    Diamond = 3,
                }

                enum Blend
                {
                    Override = 0,
                    Add = 1,
                    Multiply = 2,
                }

                class <>c
                {
                    static /*0x0*/ UnityEngine.UI.Extensions.Gradient2.<> <>9;
                    static /*0x8*/ System.Func<UnityEngine.UIVertex, float> <>9__24_0;
                    static /*0x10*/ System.Func<UnityEngine.UIVertex, float> <>9__24_1;

                    static /*0xf68d80*/ <>c();
                    /*0xf68de0*/ <>c();
                    /*0xf68de8*/ float <ModifyMesh>b__24_0(UnityEngine.UIVertex v);
                    /*0xf68df0*/ float <ModifyMesh>b__24_1(UnityEngine.UIVertex v);
                }
            }

            class LetterSpacing : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ float m_spacing;

                /*0xfa8eb0*/ LetterSpacing();
                /*0xfa8eb8*/ float get_spacing();
                /*0xfa8ec0*/ void set_spacing(float value);
                /*0xfa8f90*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class MonoSpacing : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ float m_spacing;
                /*0x24*/ float HalfCharWidth;
                /*0x28*/ bool UseHalfCharWidth;
                /*0x30*/ UnityEngine.RectTransform rectTransform;
                /*0x38*/ UnityEngine.UI.Text text;

                /*0x2b42ff4*/ MonoSpacing();
                /*0x2b43004*/ void Awake();
                /*0x2b4311c*/ float get_Spacing();
                /*0x2b43124*/ void set_Spacing(float value);
                /*0x2b431f4*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class NicerOutline : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.Color m_EffectColor;
                /*0x30*/ UnityEngine.Vector2 m_EffectDistance;
                /*0x38*/ bool m_UseGraphicAlpha;
                /*0x40*/ System.Collections.Generic.List<UnityEngine.UIVertex> m_Verts;

                /*0x2b524b0*/ NicerOutline();
                /*0x2b51a64*/ UnityEngine.Color get_effectColor();
                /*0x2b51a70*/ void set_effectColor(UnityEngine.Color value);
                /*0x2b51b50*/ UnityEngine.Vector2 get_effectDistance();
                /*0x2b51b58*/ void set_effectDistance(UnityEngine.Vector2 value);
                /*0x2b51c70*/ bool get_useGraphicAlpha();
                /*0x2b51c78*/ void set_useGraphicAlpha(bool value);
                /*0x2b51d40*/ void ApplyShadowZeroAlloc(System.Collections.Generic.List<UnityEngine.UIVertex> verts, UnityEngine.Color32 color, int start, int end, float x, float y);
                /*0x2b52008*/ void ApplyShadow(System.Collections.Generic.List<UnityEngine.UIVertex> verts, UnityEngine.Color32 color, int start, int end, float x, float y);
                /*0x2b520e8*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class RaycastMask : UnityEngine.MonoBehaviour, UnityEngine.ICanvasRaycastFilter
            {
                /*0x18*/ UnityEngine.UI.Image _image;
                /*0x20*/ UnityEngine.Sprite _sprite;

                /*0x11c3338*/ RaycastMask();
                /*0x11c2d68*/ void Start();
                /*0x11c2dbc*/ bool IsRaycastLocationValid(UnityEngine.Vector2 sp, UnityEngine.Camera eventCamera);
            }

            class UIAdditiveEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x1132bf8*/ UIAdditiveEffect();
                /*0x11329e0*/ void Start();
                /*0x11329e4*/ void SetMaterial();
                /*0x1132bf4*/ void OnValidate();
            }

            class UIImageCrop : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;
                /*0x20*/ UnityEngine.Material mat;
                /*0x28*/ int XCropProperty;
                /*0x2c*/ int YCropProperty;
                /*0x30*/ float XCrop;
                /*0x34*/ float YCrop;

                /*0x235e3c8*/ UIImageCrop();
                /*0x235e0b0*/ void Start();
                /*0x235e0b4*/ void SetMaterial();
                /*0x235e31c*/ void OnValidate();
                /*0x235e350*/ void SetXCrop(float xcrop);
                /*0x235e38c*/ void SetYCrop(float ycrop);
            }

            class UILinearDodgeEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x2362e88*/ UILinearDodgeEffect();
                /*0x2362c70*/ void Start();
                /*0x2362c74*/ void SetMaterial();
                /*0x2362e84*/ void OnValidate();
            }

            class UIMultiplyEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x23630a8*/ UIMultiplyEffect();
                /*0x2362e90*/ void Start();
                /*0x2362e94*/ void SetMaterial();
                /*0x23630a4*/ void OnValidate();
            }

            class UIScreenEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x2365ce8*/ UIScreenEffect();
                /*0x2365ad0*/ void Start();
                /*0x2365ad4*/ void SetMaterial();
                /*0x2365ce4*/ void OnValidate();
            }

            class UISoftAdditiveEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x2368144*/ UISoftAdditiveEffect();
                /*0x2367f2c*/ void Start();
                /*0x2367f30*/ void SetMaterial();
                /*0x2368140*/ void OnValidate();
            }

            class ShineEffect : UnityEngine.UI.MaskableGraphic
            {
                /*0xd0*/ float yoffset;
                /*0xd4*/ float width;

                /*0xe2976c*/ ShineEffect();
                /*0xe2904c*/ float get_Yoffset();
                /*0xe29054*/ void set_Yoffset(float value);
                /*0xe29090*/ float get_Width();
                /*0xe29098*/ void set_Width(float value);
                /*0xe290d4*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0xe29650*/ void Triangulate(UnityEngine.UI.VertexHelper vh);
            }

            class ShineEffector : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.ShineEffect effector;
                /*0x20*/ UnityEngine.GameObject effectRoot;
                /*0x28*/ float yOffset;
                /*0x2c*/ float width;
                /*0x30*/ UnityEngine.RectTransform effectorRect;

                /*0xe29ea0*/ ShineEffector();
                /*0xe29780*/ float get_YOffset();
                /*0xe29788*/ void set_YOffset(float value);
                /*0xe2985c*/ void OnEnable();
                /*0xe29d34*/ void OnValidate();
                /*0xe297b8*/ void ChangeVal(float value);
                /*0xe29e00*/ void OnDestroy();
            }

            class SoftMaskScript : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Material mat;
                /*0x20*/ UnityEngine.Canvas cachedCanvas;
                /*0x28*/ UnityEngine.Transform cachedCanvasTransform;
                /*0x30*/ UnityEngine.Vector3[] m_WorldCorners;
                /*0x38*/ UnityEngine.Vector3[] m_CanvasCorners;
                /*0x40*/ UnityEngine.RectTransform MaskArea;
                /*0x48*/ UnityEngine.Texture AlphaMask;
                /*0x50*/ float CutOff;
                /*0x54*/ bool HardBlend;
                /*0x55*/ bool FlipAlphaMask;
                /*0x56*/ bool DontClipMaskScalingRect;
                /*0x58*/ UnityEngine.Vector2 maskOffset;
                /*0x60*/ UnityEngine.Vector2 maskScale;

                /*0x1451aac*/ SoftMaskScript();
                /*0x14513cc*/ void Start();
                /*0x1451724*/ void Update();
                /*0x14517a8*/ void SetMask();
                /*0x1451948*/ UnityEngine.Rect GetCanvasRect();
            }

            class UIFlippable : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ bool m_Horizontal;
                /*0x21*/ bool m_Veritical;

                /*0x235d588*/ UIFlippable();
                /*0x235d3a4*/ bool get_horizontal();
                /*0x235d3ac*/ void set_horizontal(bool value);
                /*0x235d3b8*/ bool get_vertical();
                /*0x235d3c0*/ void set_vertical(bool value);
                /*0x235d3cc*/ void ModifyMesh(UnityEngine.UI.VertexHelper verts);
            }

            class UIParticleSystem : UnityEngine.UI.MaskableGraphic
            {
                /*0xd0*/ bool fixedTime;
                /*0xd1*/ bool use3dRotation;
                /*0xd8*/ UnityEngine.Transform _transform;
                /*0xe0*/ UnityEngine.ParticleSystem pSystem;
                /*0xe8*/ UnityEngine.ParticleSystem.Particle[] particles;
                /*0xf0*/ UnityEngine.UIVertex[] _quad;
                /*0xf8*/ UnityEngine.Vector4 imageUV;
                /*0x108*/ UnityEngine.ParticleSystem.TextureSheetAnimationModule textureSheetAnimation;
                /*0x110*/ int textureSheetAnimationFrames;
                /*0x114*/ UnityEngine.Vector2 textureSheetAnimationFrameSize;
                /*0x120*/ UnityEngine.ParticleSystemRenderer pRenderer;
                /*0x128*/ UnityEngine.Material currentMaterial;
                /*0x130*/ UnityEngine.Texture currentTexture;
                /*0x138*/ UnityEngine.ParticleSystem.MainModule mainModule;

                /*0x23645fc*/ UIParticleSystem();
                /*0x23630b0*/ UnityEngine.Texture get_mainTexture();
                /*0x23630b8*/ bool Initialize();
                /*0x2363594*/ void Awake();
                /*0x23635dc*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x2364154*/ void Update();
                /*0x2364368*/ void LateUpdate();
                /*0x23645f4*/ void OnDestroy();
            }

            class CardExpanding2D : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float lerpSpeed;
                /*0x20*/ UnityEngine.RectTransform buttonRect;
                /*0x28*/ UnityEngine.Vector2 closeButtonMin;
                /*0x30*/ UnityEngine.Vector2 closeButtonMax;
                /*0x38*/ UnityEngine.Vector2 cardSize;
                /*0x40*/ UnityEngine.Vector2 pageSize;
                /*0x48*/ UnityEngine.Vector2 cardCenter;
                /*0x50*/ UnityEngine.Vector2 pageCenter;
                /*0x58*/ UnityEngine.Vector2 cardMin;
                /*0x60*/ UnityEngine.Vector2 cardMax;
                /*0x68*/ UnityEngine.Vector2 pageMin;
                /*0x70*/ UnityEngine.Vector2 pageMax;
                /*0x78*/ UnityEngine.RectTransform rectTrans;
                /*0x80*/ int animationActive;

                /*0x153e0c0*/ CardExpanding2D();
                /*0x153d8e0*/ void Start();
                /*0x153da24*/ void Update();
                /*0x153dfec*/ void ToggleCard();
            }

            class CardPopup2D : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float rotationSpeed;
                /*0x1c*/ float centeringSpeed;
                /*0x20*/ bool singleScene;
                /*0x28*/ UnityEngine.Rigidbody rbody;
                /*0x30*/ bool isFalling;
                /*0x34*/ UnityEngine.Vector3 cardFallRotation;
                /*0x40*/ bool fallToZero;
                /*0x44*/ float startZPos;

                /*0x153f4f4*/ CardPopup2D();
                /*0x153f0fc*/ void Start();
                /*0x153f180*/ void Update();
                /*0x153f498*/ void CardEnter();
                /*0x153f4a4*/ void CardFallAway(float fallRotation);
            }

            class CardStack2D : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ bool canUseHorizontalAxis;
                /*0x18*/ float cardMoveSpeed;
                /*0x1c*/ float buttonCooldownTime;
                /*0x20*/ int cardZMultiplier;
                /*0x24*/ bool useDefaultUsedXPos;
                /*0x28*/ int usedCardXPos;
                /*0x30*/ UnityEngine.Transform[] cards;
                /*0x38*/ int cardArrayOffset;
                /*0x40*/ UnityEngine.Vector3[] cardPositions;
                /*0x48*/ int xPowerDifference;

                static /*0x153fbcc*/ CardStack2D();
                /*0x153fba0*/ CardStack2D();
                /*0x153f508*/ void Start();
                /*0x153f818*/ void Update();
                /*0x153fb34*/ System.Collections.IEnumerator ButtonCooldown();

                class <ButtonCooldown>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.CardStack2D <>4__this;

                    /*0xda8bf0*/ <ButtonCooldown>d__12(int <>1__state);
                    /*0xda8c1c*/ void System.IDisposable.Dispose();
                    /*0xda8c20*/ bool MoveNext();
                    /*0xda8d44*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xda8d4c*/ void System.Collections.IEnumerator.Reset();
                    /*0xda8d8c*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class CardExpanding3D : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float lerpSpeed;
                /*0x1c*/ float cornerSize;
                /*0x20*/ UnityEngine.RectTransform[] cardCorners;
                /*0x28*/ UnityEngine.RectTransform[] cardEdges;
                /*0x30*/ UnityEngine.RectTransform cardCenter;
                /*0x38*/ bool cardAutoSize;
                /*0x3c*/ UnityEngine.Vector2 cardSize;
                /*0x44*/ UnityEngine.Vector2 cardPosition;
                /*0x4c*/ int cardSuperness;
                /*0x50*/ bool pageAutoSize;
                /*0x54*/ UnityEngine.Vector2 pageSize;
                /*0x5c*/ UnityEngine.Vector2 pagePosition;
                /*0x64*/ int pageSuperness;
                /*0x68*/ int animationActive;
                /*0x70*/ UnityEngine.Vector2[] nextCornerPos;
                /*0x78*/ UnityEngine.Vector2[] nextEdgePos;
                /*0x80*/ UnityEngine.Vector2[] nextEdgeScale;
                /*0x88*/ UnityEngine.Vector2 nextCenterScale;
                /*0x90*/ UnityEngine.Vector2 nextPos;
                /*0x98*/ int nextSuperness;
                /*0xa0*/ UnityEngine.RectTransform rect;
                /*0xa8*/ UnityEngine.Vector2 nextMin;
                /*0xb0*/ UnityEngine.Vector2 nextMax;

                /*0x153f058*/ CardExpanding3D();
                /*0x153e16c*/ void Start();
                /*0x153e30c*/ void Update();
                /*0x153e9b0*/ void ToggleCard();
            }

            class MeshCreator : UnityEngine.MonoBehaviour
            {
                /*0x2b41388*/ MeshCreator();
                /*0x2b411c4*/ void CreateMesh(System.Collections.Generic.List<UnityEngine.Vector2> points);
            }

            class SuperellipsePoints : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float xLimits;
                /*0x1c*/ float yLimits;
                /*0x20*/ float superness;
                /*0x24*/ float lastXLim;
                /*0x28*/ float lastYLim;
                /*0x2c*/ float lastSuper;
                /*0x30*/ int levelOfDetail;
                /*0x34*/ int lastLoD;
                /*0x38*/ UnityEngine.Material material;
                /*0x40*/ System.Collections.Generic.List<UnityEngine.Vector2> pointList;

                /*0xc9d4c0*/ SuperellipsePoints();
                /*0xc9d1f4*/ void Start();
                /*0xc9d3d0*/ void Update();
                /*0xc9d278*/ void RecalculateSuperellipse();
                /*0xc9d480*/ float Superellipse(float a, float b, float x, float n);
            }

            class Triangulator
            {
                /*0x10*/ System.Collections.Generic.List<UnityEngine.Vector2> m_points;

                /*0x11203d0*/ Triangulator(UnityEngine.Vector2[] points);
                /*0x1120488*/ int[] Triangulate();
                /*0x1120758*/ float Area();
                /*0x112087c*/ bool Snip(int u, int v, int w, int n, int[] V);
                /*0x1120ac0*/ bool InsideTriangle(UnityEngine.Vector2 A, UnityEngine.Vector2 B, UnityEngine.Vector2 C, UnityEngine.Vector2 P);
            }

            class ContentScrollSnapHorizontal : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler
            {
                /*0x18*/ bool ignoreInactiveItems;
                /*0x1c*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo startInfo;
                /*0x30*/ UnityEngine.GameObject prevButton;
                /*0x38*/ UnityEngine.GameObject nextButton;
                /*0x40*/ UnityEngine.GameObject pagination;
                /*0x48*/ int snappingVelocityThreshold;
                /*0x4c*/ bool jumpToItem;
                /*0x50*/ float lerpTime;
                /*0x58*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.StartMovementEvent m_StartMovementEvent;
                /*0x60*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.CurrentItemChangeEvent m_CurrentItemChangeEvent;
                /*0x68*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.FoundItemToSnapToEvent m_FoundItemToSnapToEvent;
                /*0x70*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.SnappedToItemEvent m_SnappedToItemEvent;
                /*0x78*/ UnityEngine.UI.ScrollRect scrollRect;
                /*0x80*/ UnityEngine.RectTransform scrollRectTransform;
                /*0x88*/ UnityEngine.RectTransform contentTransform;
                /*0x90*/ System.Collections.Generic.List<UnityEngine.Vector3> contentPositions;
                /*0x98*/ UnityEngine.Vector3 lerpTarget;
                /*0xa4*/ float totalScrollableWidth;
                /*0xa8*/ UnityEngine.DrivenRectTransformTracker tracker;
                /*0xac*/ float mLerpTime;
                /*0xb0*/ int _closestItem;
                /*0xb4*/ bool mSliding;
                /*0xb5*/ bool mLerping;

                /*0x10ebf90*/ ContentScrollSnapHorizontal();
                /*0x10ea494*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.StartMovementEvent get_MovementStarted();
                /*0x10ea49c*/ void set_MovementStarted(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.StartMovementEvent value);
                /*0x10ea4a4*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.CurrentItemChangeEvent get_CurrentItemChanged();
                /*0x10ea4ac*/ void set_CurrentItemChanged(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.CurrentItemChangeEvent value);
                /*0x10ea4b4*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.FoundItemToSnapToEvent get_ItemFoundToSnap();
                /*0x10ea4bc*/ void set_ItemFoundToSnap(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.FoundItemToSnapToEvent value);
                /*0x10ea4c4*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.SnappedToItemEvent get_ItemSnappedTo();
                /*0x10ea4cc*/ void set_ItemSnappedTo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.SnappedToItemEvent value);
                /*0x10ea4d4*/ bool get_ContentIsHorizonalLayoutGroup();
                /*0x10ea56c*/ bool get_Moving();
                /*0x10ea58c*/ bool get_Sliding();
                /*0x10ea594*/ bool get_Lerping();
                /*0x10ea59c*/ int get_ClosestItemIndex();
                /*0x10ea7c4*/ int get_LerpTargetIndex();
                /*0x10ea820*/ void Awake();
                /*0x10eae38*/ void OnDisable();
                /*0x10eaa5c*/ void SetupDrivenTransforms();
                /*0x10ead40*/ void SetupSnapScroll();
                /*0x10eae44*/ void SetupWithHorizontalLayoutGroup();
                /*0x10eb22c*/ void SetupWithCalculatedSpacing();
                /*0x10ead78*/ void GoTo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo info);
                /*0x10eb6e4*/ void GoToChild(int index, bool jump);
                /*0x10eb9ac*/ void GoToContentPos(int index, bool jump);
                /*0x10ebb38*/ void NextItem();
                /*0x10ebba4*/ void PreviousItem();
                /*0x10ebc10*/ void UpdateLayout();
                /*0x10ebc34*/ void UpdateLayoutAndMoveTo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo info);
                /*0x10ebc78*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData ped);
                /*0x10ebcc4*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData ped);
                /*0x10ebd14*/ void Update();
                /*0x10ebeb8*/ System.Collections.IEnumerator SlideAndLerp();
                /*0x10ebf24*/ System.Collections.IEnumerator LerpToContent();
                /*0x10ebaac*/ void StopMovement();
                /*0x10ebdb0*/ void ChangePaginationInfo(int targetScreen);
                /*0x10eb634*/ UnityEngine.Vector2 DstFromTopLeftOfTransformToTopLeftOfParent(UnityEngine.RectTransform rt);
                /*0x10ea60c*/ UnityEngine.Vector3 FindClosestFrom(UnityEngine.Vector3 start);
                /*0x10ec0d0*/ void <Awake>b__51_0();
                /*0x10ec0d4*/ void <Awake>b__51_1();

                class StartMovementEvent : UnityEngine.Events.UnityEvent
                {
                    /*0x1072ba8*/ StartMovementEvent();
                }

                class CurrentItemChangeEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1072a9c*/ CurrentItemChangeEvent();
                }

                class FoundItemToSnapToEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1072ae8*/ FoundItemToSnapToEvent();
                }

                class SnappedToItemEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1072b5c*/ SnappedToItemEvent();
                }

                struct MoveInfo
                {
                    /*0x10*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo.IndexType indexType;
                    /*0x14*/ int index;
                    /*0x18*/ bool jump;
                    /*0x1c*/ float duration;

                    /*0xa8a154*/ MoveInfo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo.IndexType _indexType, int _index);
                    /*0xa8a168*/ MoveInfo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo.IndexType _indexType, int _index, bool _jump, float _duration);

                    enum IndexType
                    {
                        childIndex = 0,
                        positionIndex = 1,
                    }
                }

                class <SlideAndLerp>d__67 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal <>4__this;

                    /*0x10727d0*/ <SlideAndLerp>d__67(int <>1__state);
                    /*0x10727fc*/ void System.IDisposable.Dispose();
                    /*0x1072800*/ bool MoveNext();
                    /*0x1072a4c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0x1072a54*/ void System.Collections.IEnumerator.Reset();
                    /*0x1072a94*/ object System.Collections.IEnumerator.get_Current();
                }

                class <LerpToContent>d__68 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal <>4__this;
                    /*0x28*/ UnityEngine.Vector3 <originalContentPos>5__2;
                    /*0x34*/ float <elapsedTime>5__3;

                    /*0x10725b8*/ <LerpToContent>d__68(int <>1__state);
                    /*0x10725e4*/ void System.IDisposable.Dispose();
                    /*0x10725e8*/ bool MoveNext();
                    /*0x1072780*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0x1072788*/ void System.Collections.IEnumerator.Reset();
                    /*0x10727c8*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class CurvedLayout : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ UnityEngine.Vector3 CurveOffset;
                /*0x64*/ UnityEngine.Vector3 itemAxis;
                /*0x70*/ float itemSize;
                /*0x74*/ float centerpoint;

                /*0xf4db68*/ CurvedLayout();
                /*0xf4d838*/ void OnEnable();
                /*0xf4db58*/ void SetLayoutHorizontal();
                /*0xf4db5c*/ void SetLayoutVertical();
                /*0xf4db60*/ void CalculateLayoutInputVertical();
                /*0xf4db64*/ void CalculateLayoutInputHorizontal();
                /*0xf4d860*/ void CalculateRadial();
            }

            class FancyScrollView<TData, TContext> : UnityEngine.MonoBehaviour
            {
                /*0x0*/ float cellInterval;
                /*0x0*/ float cellOffset;
                /*0x0*/ bool loop;
                /*0x0*/ UnityEngine.GameObject cellBase;
                /*0x0*/ UnityEngine.Transform cellContainer;
                /*0x0*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.FancyScrollViewCell<TData, TContext>> cells;
                /*0x0*/ float currentPosition;
                /*0x0*/ System.Collections.Generic.List<TData> cellData;
                /*0x0*/ TContext <Context>k__BackingField;

                FancyScrollView();
                TContext get_Context();
                void set_Context(TContext value);
                void SetContext(TContext context);
                void UpdateContents();
                void UpdatePosition(float position, bool forceUpdateContents);
                void UpdateCell(UnityEngine.UI.Extensions.FancyScrollViewCell<TData, TContext> cell, int dataIndex, bool forceUpdateContents);
                UnityEngine.UI.Extensions.FancyScrollViewCell<TData, TContext> CreateCell();
                int GetCircularIndex(int index, int maxSize);
            }

            class FancyScrollViewNullContext
            {
                /*0x11d9ed0*/ FancyScrollViewNullContext();
            }

            class FancyScrollView<TData> : UnityEngine.UI.Extensions.FancyScrollView<TData, UnityEngine.UI.Extensions.FancyScrollViewNullContext>
            {
                FancyScrollView();
            }

            class FancyScrollViewCell<TData, TContext> : UnityEngine.MonoBehaviour
            {
                /*0x0*/ int <DataIndex>k__BackingField;
                /*0x0*/ TContext <Context>k__BackingField;

                FancyScrollViewCell();
                int get_DataIndex();
                void set_DataIndex(int value);
                bool get_IsVisible();
                TContext get_Context();
                void set_Context(TContext value);
                void SetContext(TContext context);
                void SetVisible(bool visible);
                void UpdateContent(TData itemData);
                void UpdatePosition(float position);
            }

            class FancyScrollViewCell<TData> : UnityEngine.UI.Extensions.FancyScrollViewCell<TData, UnityEngine.UI.Extensions.FancyScrollViewNullContext>
            {
                FancyScrollViewCell();
            }

            class FlowLayoutGroup : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ float SpacingX;
                /*0x5c*/ float SpacingY;
                /*0x60*/ bool ExpandHorizontalSpacing;
                /*0x61*/ bool ChildForceExpandWidth;
                /*0x62*/ bool ChildForceExpandHeight;
                /*0x63*/ bool invertOrder;
                /*0x64*/ float _layoutHeight;
                /*0x68*/ float _layoutWidth;
                /*0x6c*/ UnityEngine.UI.Extensions.FlowLayoutGroup.Axis m_StartAxis;
                /*0x70*/ System.Collections.Generic.IList<UnityEngine.RectTransform> _itemList;

                /*0x11dc124*/ FlowLayoutGroup();
                /*0x11da704*/ UnityEngine.UI.Extensions.FlowLayoutGroup.Axis get_startAxis();
                /*0x11da70c*/ void set_startAxis(UnityEngine.UI.Extensions.FlowLayoutGroup.Axis value);
                /*0x11da76c*/ void CalculateLayoutInputHorizontal();
                /*0x11db18c*/ void SetLayoutHorizontal();
                /*0x11db198*/ void SetLayoutVertical();
                /*0x11db1a4*/ void CalculateLayoutInputVertical();
                /*0x11db31c*/ bool get_IsCenterAlign();
                /*0x11db348*/ bool get_IsRightAlign();
                /*0x11db374*/ bool get_IsMiddleAlign();
                /*0x11db398*/ bool get_IsLowerAlign();
                /*0x11da8e4*/ float SetLayout(int axis, bool layoutInput);
                /*0x11db3bc*/ float CalculateRowVerticalOffset(float groupHeight, float yOffset, float currentRowHeight);
                /*0x11dba64*/ float CalculateColHorizontalOffset(float groupWidth, float xOffset, float currentColWidth);
                /*0x11db404*/ void LayoutRow(System.Collections.Generic.IList<UnityEngine.RectTransform> contents, float rowWidth, float rowHeight, float maxWidth, float xOffset, float yOffset, int axis);
                /*0x11dbabc*/ void LayoutCol(System.Collections.Generic.IList<UnityEngine.RectTransform> contents, float colWidth, float colHeight, float maxHeight, float xOffset, float yOffset, int axis);
                /*0x11da824*/ float GetGreatestMinimumChildWidth();
                /*0x11db25c*/ float GetGreatestMinimumChildHeigth();

                enum Axis
                {
                    Horizontal = 0,
                    Vertical = 1,
                }
            }

            class HorizontalScrollSnap : UnityEngine.UI.Extensions.ScrollSnapBase, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x130bbfc*/ HorizontalScrollSnap();
                /*0x130ae1c*/ void Start();
                /*0x130af48*/ void Update();
                /*0x130b18c*/ bool IsRectMovingSlowerThanThreshold(float startingSpeed);
                /*0x130b1ec*/ void DistributePages();
                /*0x130b448*/ void AddChild(UnityEngine.GameObject GO);
                /*0x130b450*/ void AddChild(UnityEngine.GameObject GO, bool WorldPositionStays);
                /*0x130b598*/ void RemoveChild(int index, ref UnityEngine.GameObject ChildRemoved);
                /*0x130b5a4*/ void RemoveChild(int index, bool WorldPositionStays, ref UnityEngine.GameObject ChildRemoved);
                /*0x130b708*/ void RemoveAllChildren(ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x130b714*/ void RemoveAllChildren(bool WorldPositionStays, ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x130b530*/ void SetScrollContainerPosition();
                /*0x130aeac*/ void UpdateLayout();
                /*0x130b90c*/ void OnRectTransformDimensionsChange();
                /*0x130b974*/ void OnEnable();
                /*0x130ba3c*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            interface IScrollSnap
            {
                void ChangePage(int page);
                void SetLerp(bool value);
                int CurrentPage();
                void StartScreenChange();
            }

            class RadialLayout : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ float fDistance;
                /*0x5c*/ float MinAngle;
                /*0x60*/ float MaxAngle;
                /*0x64*/ float StartAngle;
                /*0x68*/ bool OnlyLayoutVisible;

                /*0x11b9874*/ RadialLayout();
                /*0x11b9508*/ void OnEnable();
                /*0x11b9864*/ void SetLayoutHorizontal();
                /*0x11b9868*/ void SetLayoutVertical();
                /*0x11b986c*/ void CalculateLayoutInputVertical();
                /*0x11b9870*/ void CalculateLayoutInputHorizontal();
                /*0x11b9530*/ void CalculateRadial();
            }

            class ScrollPositionController : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.RectTransform viewport;
                /*0x20*/ UnityEngine.UI.Extensions.ScrollPositionController.ScrollDirection directionOfRecognize;
                /*0x24*/ UnityEngine.UI.Extensions.ScrollPositionController.MovementType movementType;
                /*0x28*/ float elasticity;
                /*0x2c*/ float scrollSensitivity;
                /*0x30*/ bool inertia;
                /*0x34*/ float decelerationRate;
                /*0x38*/ UnityEngine.UI.Extensions.ScrollPositionController.Snap snap;
                /*0x44*/ int dataCount;
                /*0x48*/ UnityEngine.UI.Extensions.ScrollPositionController.AutoScrollState autoScrollState;
                /*0x50*/ System.Action<float> onUpdatePosition;
                /*0x58*/ System.Action<int> onItemSelected;
                /*0x60*/ UnityEngine.Vector2 pointerStartLocalPosition;
                /*0x68*/ float dragStartScrollPosition;
                /*0x6c*/ float prevScrollPosition;
                /*0x70*/ float currentScrollPosition;
                /*0x74*/ bool dragging;
                /*0x78*/ float velocity;

                /*0xe1cb30*/ ScrollPositionController();
                /*0xe1bfe8*/ void OnUpdatePosition(System.Action<float> onUpdatePosition);
                /*0xe1bff0*/ void OnItemSelected(System.Action<int> onItemSelected);
                /*0xe1bff8*/ void SetDataCount(int dataCount);
                /*0xe1c000*/ void ScrollTo(int index, float duration);
                /*0xe1c19c*/ void JumpTo(int index);
                /*0xe1c270*/ void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1c36c*/ void UnityEngine.EventSystems.IDragHandler.OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1c608*/ void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1c51c*/ float GetViewportSize();
                /*0xe1c578*/ float CalculateOffset(float position);
                /*0xe1c1fc*/ void UpdatePosition(float position);
                /*0xe1c12c*/ void ItemSelected(int index);
                /*0xe1c5b8*/ float RubberDelta(float overStretching, float viewSize);
                /*0xe1c62c*/ void Update();
                /*0xe1c0c4*/ int CalculateDestinationIndex(int index);
                /*0xe1caa0*/ int CalculateClosestIndex(int index);
                /*0xe1c0e8*/ float GetCircularPosition(float position, int length);
                /*0xe1ca48*/ float EaseInOutCubic(float start, float end, float value);

                enum ScrollDirection
                {
                    Vertical = 0,
                    Horizontal = 1,
                }

                enum MovementType
                {
                    Unrestricted = 0,
                    Elastic = 1,
                    Clamped = 2,
                }

                struct Snap
                {
                    /*0x10*/ bool Enable;
                    /*0x14*/ float VelocityThreshold;
                    /*0x18*/ float Duration;
                }

                class AutoScrollState
                {
                    /*0x10*/ bool Enable;
                    /*0x11*/ bool Elastic;
                    /*0x14*/ float Duration;
                    /*0x18*/ float StartTime;
                    /*0x1c*/ float EndScrollPosition;

                    /*0xcbd204*/ AutoScrollState();
                    /*0xcbd1f4*/ void Reset();
                }
            }

            class ScrollSnap : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.UI.Extensions.IScrollSnap
            {
                /*0x18*/ UnityEngine.UI.ScrollRect _scroll_rect;
                /*0x20*/ UnityEngine.RectTransform _scrollRectTransform;
                /*0x28*/ UnityEngine.Transform _listContainerTransform;
                /*0x30*/ int _pages;
                /*0x34*/ int _startingPage;
                /*0x38*/ UnityEngine.Vector3[] _pageAnchorPositions;
                /*0x40*/ UnityEngine.Vector3 _lerpTarget;
                /*0x4c*/ bool _lerp;
                /*0x50*/ float _listContainerMinPosition;
                /*0x54*/ float _listContainerMaxPosition;
                /*0x58*/ float _listContainerSize;
                /*0x60*/ UnityEngine.RectTransform _listContainerRectTransform;
                /*0x68*/ UnityEngine.Vector2 _listContainerCachedSize;
                /*0x70*/ float _itemSize;
                /*0x74*/ int _itemsCount;
                /*0x78*/ bool _startDrag;
                /*0x7c*/ UnityEngine.Vector3 _positionOnDragStart;
                /*0x88*/ int _pageOnDragStart;
                /*0x8c*/ bool _fastSwipeTimer;
                /*0x90*/ int _fastSwipeCounter;
                /*0x94*/ int _fastSwipeTarget;
                /*0x98*/ UnityEngine.UI.Button NextButton;
                /*0xa0*/ UnityEngine.UI.Button PrevButton;
                /*0xa8*/ int ItemsVisibleAtOnce;
                /*0xac*/ bool AutoLayoutItems;
                /*0xad*/ bool LinkScrolbarSteps;
                /*0xae*/ bool LinkScrolrectScrollSensitivity;
                /*0xaf*/ bool UseFastSwipe;
                /*0xb0*/ int FastSwipeThreshold;
                /*0xb8*/ UnityEngine.UI.Extensions.ScrollSnap.PageSnapChange onPageChange;
                /*0xc0*/ UnityEngine.UI.Extensions.ScrollSnap.ScrollDirection direction;
                /*0xc4*/ bool fastSwipe;

                /*0xe1f3dc*/ ScrollSnap();
                /*0xe1da00*/ void add_onPageChange(UnityEngine.UI.Extensions.ScrollSnap.PageSnapChange value);
                /*0xe1daa0*/ void remove_onPageChange(UnityEngine.UI.Extensions.ScrollSnap.PageSnapChange value);
                /*0xe1db40*/ void Start();
                /*0xe1de80*/ void UpdateListItemsSize();
                /*0xe1e5e4*/ void UpdateListItemPositions();
                /*0xe1eeec*/ void ResetPage();
                /*0xe1ed40*/ void UpdateScrollbar(bool linkSteps);
                /*0xe1ef6c*/ void LateUpdate();
                /*0xe1f0e0*/ void NextScreen();
                /*0xe1f188*/ void PreviousScreen();
                /*0xe1f228*/ void NextScreenCommand();
                /*0xe1f2c4*/ void PrevScreenCommand();
                /*0xe1ebac*/ int CurrentPage();
                /*0xe1f35c*/ void SetLerp(bool value);
                /*0xe1f368*/ void ChangePage(int page);
                /*0xe1ec38*/ void PageChanged(int currentPage);
                /*0xe180c8*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe18194*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe18368*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1f3d8*/ void StartScreenChange();
                /*0xe1f408*/ void <Start>b__35_0();
                /*0xe1f40c*/ void <Start>b__35_1();

                enum ScrollDirection
                {
                    Horizontal = 0,
                    Vertical = 1,
                }

                class PageSnapChange : System.MulticastDelegate
                {
                    /*0xcbd77c*/ PageSnapChange(object object, nint method);
                    /*0xcbd7dc*/ void Invoke(int page);
                    /*0xcbda08*/ System.IAsyncResult BeginInvoke(int page, System.AsyncCallback callback, object object);
                    /*0xcbda90*/ void EndInvoke(System.IAsyncResult result);
                }
            }

            class ScrollSnapBase : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.UI.Extensions.IScrollSnap
            {
                /*0x18*/ UnityEngine.Rect panelDimensions;
                /*0x28*/ UnityEngine.RectTransform _screensContainer;
                /*0x30*/ bool _isVertical;
                /*0x34*/ int _screens;
                /*0x38*/ float _scrollStartPosition;
                /*0x3c*/ float _childSize;
                /*0x40*/ float _childPos;
                /*0x44*/ float _maskSize;
                /*0x48*/ UnityEngine.Vector2 _childAnchorPoint;
                /*0x50*/ UnityEngine.UI.ScrollRect _scroll_rect;
                /*0x58*/ UnityEngine.Vector3 _lerp_target;
                /*0x64*/ bool _lerp;
                /*0x65*/ bool _pointerDown;
                /*0x66*/ bool _settled;
                /*0x68*/ UnityEngine.Vector3 _startPosition;
                /*0x74*/ int _currentPage;
                /*0x78*/ int _previousPage;
                /*0x7c*/ int _halfNoVisibleItems;
                /*0x80*/ bool _moveStarted;
                /*0x81*/ bool _isInfinate;
                /*0x84*/ int _infiniteWindow;
                /*0x88*/ float _infiniteOffset;
                /*0x8c*/ int _bottomItem;
                /*0x90*/ int _topItem;
                /*0x94*/ int StartingScreen;
                /*0x98*/ float PageStep;
                /*0xa0*/ UnityEngine.GameObject Pagination;
                /*0xa8*/ UnityEngine.GameObject PrevButton;
                /*0xb0*/ UnityEngine.GameObject NextButton;
                /*0xb8*/ float transitionSpeed;
                /*0xbc*/ bool UseHardSwipe;
                /*0xbd*/ bool UseFastSwipe;
                /*0xc0*/ int FastSwipeThreshold;
                /*0xc4*/ int SwipeVelocityThreshold;
                /*0xc8*/ bool UseTimeScale;
                /*0xd0*/ UnityEngine.RectTransform MaskArea;
                /*0xd8*/ float MaskBuffer;
                /*0xdc*/ bool JumpOnEnable;
                /*0xdd*/ bool RestartOnEnable;
                /*0xde*/ bool UseParentTransform;
                /*0xe0*/ UnityEngine.GameObject[] ChildObjects;
                /*0xe8*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeStartEvent m_OnSelectionChangeStartEvent;
                /*0xf0*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionPageChangedEvent m_OnSelectionPageChangedEvent;
                /*0xf8*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeEndEvent m_OnSelectionChangeEndEvent;

                /*0xe20fec*/ ScrollSnapBase();
                /*0xe1f410*/ int get_CurrentPage();
                /*0xe1f418*/ void set_CurrentPage(int value);
                /*0xe1fb34*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeStartEvent get_OnSelectionChangeStartEvent();
                /*0xe1fb3c*/ void set_OnSelectionChangeStartEvent(UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeStartEvent value);
                /*0xe1fb44*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionPageChangedEvent get_OnSelectionPageChangedEvent();
                /*0xe1fb4c*/ void set_OnSelectionPageChangedEvent(UnityEngine.UI.Extensions.ScrollSnapBase.SelectionPageChangedEvent value);
                /*0xe1fb54*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeEndEvent get_OnSelectionChangeEndEvent();
                /*0xe1fb5c*/ void set_OnSelectionChangeEndEvent(UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeEndEvent value);
                /*0xe1fb64*/ void Awake();
                /*0xe1ff10*/ void InitialiseChildObjects();
                /*0xe20258*/ void InitialiseChildObjectsFromScene();
                /*0xe1ffe0*/ void InitialiseChildObjectsFromArray();
                /*0xe1f628*/ void UpdateVisible();
                /*0xe20418*/ void NextScreen();
                /*0xe20600*/ void PreviousScreen();
                /*0xe20678*/ void GoToScreen(int screenIndex);
                /*0xe206f0*/ int GetPageforPosition(UnityEngine.Vector3 pos);
                /*0xe2081c*/ bool IsRectSettledOnaPage(UnityEngine.Vector3 pos);
                /*0xe204cc*/ void GetPositionforPage(int page, ref UnityEngine.Vector3 target);
                /*0xe2095c*/ void ScrollToClosestElement();
                /*0xe1fb08*/ void OnCurrentScreenChange(int currentScreen);
                /*0xe209d0*/ void ChangeBulletsInfo(int targetScreen);
                /*0xe20ad8*/ void ToggleNavigationButtons(int targetScreen);
                /*0xe20c28*/ void OnValidate();
                /*0xe20498*/ void StartScreenChange();
                /*0xe1fab0*/ void ScreenChange();
                /*0xe20e7c*/ void EndScreenChange();
                /*0xe20ee4*/ UnityEngine.Transform CurrentPageObject();
                /*0xe20f08*/ void CurrentPageObject(ref UnityEngine.Transform returnObject);
                /*0xe20f44*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe20f88*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe20f90*/ int UnityEngine.UI.Extensions.IScrollSnap.CurrentPage();
                /*0xe20fdc*/ void SetLerp(bool value);
                /*0xe20fe8*/ void ChangePage(int page);
                /*0xe210d8*/ void <Awake>b__59_0();
                /*0xe210dc*/ void <Awake>b__59_1();

                class SelectionChangeStartEvent : UnityEngine.Events.UnityEvent
                {
                    /*0xcbdae8*/ SelectionChangeStartEvent();
                }

                class SelectionPageChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcbdaf0*/ SelectionPageChangedEvent();
                }

                class SelectionChangeEndEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcbda9c*/ SelectionChangeEndEvent();
                }
            }

            class ScrollSnapScrollbarHelper : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.UI.Extensions.IScrollSnap ss;

                /*0xe21468*/ ScrollSnapScrollbarHelper();
                /*0xe210e0*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe2121c*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe212cc*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21460*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21464*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe210e4*/ void OnScrollBarDown();
                /*0xe212d0*/ void OnScrollBarUp();
            }

            class TableLayoutGroup : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ UnityEngine.UI.Extensions.TableLayoutGroup.Corner startCorner;
                /*0x60*/ float[] columnWidths;
                /*0x68*/ float minimumRowHeight;
                /*0x6c*/ bool flexibleRowHeight;
                /*0x70*/ float columnSpacing;
                /*0x74*/ float rowSpacing;
                /*0x78*/ float[] preferredRowHeights;

                /*0xca2064*/ TableLayoutGroup();
                /*0xca15d8*/ UnityEngine.UI.Extensions.TableLayoutGroup.Corner get_StartCorner();
                /*0xca15e0*/ void set_StartCorner(UnityEngine.UI.Extensions.TableLayoutGroup.Corner value);
                /*0xca1640*/ float[] get_ColumnWidths();
                /*0xca1648*/ void set_ColumnWidths(float[] value);
                /*0xca16a8*/ float get_MinimumRowHeight();
                /*0xca16b0*/ void set_MinimumRowHeight(float value);
                /*0xca1710*/ bool get_FlexibleRowHeight();
                /*0xca1718*/ void set_FlexibleRowHeight(bool value);
                /*0xca1778*/ float get_ColumnSpacing();
                /*0xca1780*/ void set_ColumnSpacing(float value);
                /*0xca17e0*/ float get_RowSpacing();
                /*0xca17e8*/ void set_RowSpacing(float value);
                /*0xca1848*/ void CalculateLayoutInputHorizontal();
                /*0xca1944*/ void CalculateLayoutInputVertical();
                /*0xca1bfc*/ void SetLayoutHorizontal();
                /*0xca1e4c*/ void SetLayoutVertical();

                enum Corner
                {
                    UpperLeft = 0,
                    UpperRight = 1,
                    LowerLeft = 2,
                    LowerRight = 3,
                }
            }

            class TileSizeFitter : UnityEngine.EventSystems.UIBehaviour, UnityEngine.UI.ILayoutSelfController, UnityEngine.UI.ILayoutController
            {
                /*0x18*/ UnityEngine.Vector2 m_Border;
                /*0x20*/ UnityEngine.Vector2 m_TileSize;
                /*0x28*/ UnityEngine.RectTransform m_Rect;
                /*0x30*/ UnityEngine.DrivenRectTransformTracker m_Tracker;

                /*0x116d754*/ TileSizeFitter();
                /*0x116d1ec*/ UnityEngine.Vector2 get_Border();
                /*0x116d1f4*/ void set_Border(UnityEngine.Vector2 value);
                /*0x116d2c4*/ UnityEngine.Vector2 get_TileSize();
                /*0x116d2cc*/ void set_TileSize(UnityEngine.Vector2 value);
                /*0x116d360*/ UnityEngine.RectTransform get_rectTransform();
                /*0x116d400*/ void OnEnable();
                /*0x116d448*/ void OnDisable();
                /*0x116d4d4*/ void OnRectTransformDimensionsChange();
                /*0x116d4d8*/ void UpdateRect();
                /*0x116d65c*/ UnityEngine.Vector2 GetParentSize();
                /*0x116d74c*/ void SetLayoutHorizontal();
                /*0x116d750*/ void SetLayoutVertical();
                /*0x116d288*/ void SetDirty();
            }

            class UIVerticalScroller : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.ScrollRect scrollRect;
                /*0x20*/ UnityEngine.RectTransform center;
                /*0x28*/ UnityEngine.RectTransform elementSize;
                /*0x30*/ UnityEngine.Vector2 elementShrinkage;
                /*0x38*/ UnityEngine.Vector2 minScale;
                /*0x40*/ int startingIndex;
                /*0x44*/ bool stopMomentumOnEnd;
                /*0x45*/ bool disableUnfocused;
                /*0x48*/ UnityEngine.GameObject scrollUpButton;
                /*0x50*/ UnityEngine.GameObject scrollDownButton;
                /*0x58*/ UnityEngine.UI.Extensions.UIVerticalScroller.IntEvent OnButtonClicked;
                /*0x60*/ UnityEngine.UI.Extensions.UIVerticalScroller.IntEvent OnFocusChanged;
                /*0x68*/ UnityEngine.GameObject[] _arrayOfElements;
                /*0x70*/ int <focusedElementIndex>k__BackingField;
                /*0x78*/ string <result>k__BackingField;
                /*0x80*/ float[] distReposition;
                /*0x88*/ float[] distance;

                /*0x2368188*/ UIVerticalScroller();
                /*0x23681ac*/ UIVerticalScroller(UnityEngine.RectTransform center, UnityEngine.RectTransform elementSize, UnityEngine.UI.ScrollRect scrollRect, UnityEngine.GameObject[] arrayOfElements);
                /*0x236814c*/ int get_focusedElementIndex();
                /*0x2368154*/ void set_focusedElementIndex(int value);
                /*0x236815c*/ string get_result();
                /*0x2368164*/ void set_result(string value);
                /*0x236816c*/ UnityEngine.RectTransform get_scrollingPanel();
                /*0x2368218*/ void Awake();
                /*0x236845c*/ void updateChildren(int startingIndex, UnityEngine.GameObject[] arrayOfElements);
                /*0x23688f0*/ void Start();
                /*0x2368a94*/ void Update();
                /*0x2368ed4*/ void ScrollingElements();
                /*0x2368854*/ void SnapToElement(int element);
                /*0x2368fb8*/ void ScrollUp();
                /*0x23690b4*/ void ScrollDown();
                /*0x2369170*/ void <Start>b__29_0();
                /*0x2369174*/ void <Start>b__29_1();

                class IntEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xd8a47c*/ IntEvent();
                }

                class <>c__DisplayClass28_0
                {
                    /*0x10*/ int j;
                    /*0x18*/ UnityEngine.UI.Extensions.UIVerticalScroller <>4__this;

                    /*0xd8a414*/ <>c__DisplayClass28_0();
                    /*0xd8a41c*/ void <updateChildren>b__0();
                }
            }

            class VerticalScrollSnap : UnityEngine.UI.Extensions.ScrollSnapBase, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x10d3b2c*/ VerticalScrollSnap();
                /*0x10d2d40*/ void Start();
                /*0x10d2e70*/ void Update();
                /*0x10d30b4*/ bool IsRectMovingSlowerThanThreshold(float startingSpeed);
                /*0x10d3114*/ void DistributePages();
                /*0x10d3370*/ void AddChild(UnityEngine.GameObject GO);
                /*0x10d3378*/ void AddChild(UnityEngine.GameObject GO, bool WorldPositionStays);
                /*0x10d34c0*/ void RemoveChild(int index, ref UnityEngine.GameObject ChildRemoved);
                /*0x10d34cc*/ void RemoveChild(int index, bool WorldPositionStays, ref UnityEngine.GameObject ChildRemoved);
                /*0x10d3630*/ void RemoveAllChildren(ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x10d363c*/ void RemoveAllChildren(bool WorldPositionStays, ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x10d3458*/ void SetScrollContainerPosition();
                /*0x10d2dd4*/ void UpdateLayout();
                /*0x10d3834*/ void OnRectTransformDimensionsChange();
                /*0x10d389c*/ void OnEnable();
                /*0x10d3964*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            class Menu<T> : UnityEngine.UI.Extensions.Menu
            {
                static /*0x0*/ T <Instance>k__BackingField;

                static T get_Instance();
                static void set_Instance(T value);
                static void Open();
                static void Close();
                Menu();
                void Awake();
                void OnDestroy();
                void OnBackPressed();
            }

            class Menu : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool DestroyWhenClosed;
                /*0x19*/ bool DisableMenusUnderneath;

                /*0x2b3aabc*/ Menu();
                void OnBackPressed();
            }

            class MenuManager : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ UnityEngine.UI.Extensions.MenuManager <Instance>k__BackingField;
                /*0x18*/ UnityEngine.UI.Extensions.Menu[] menuScreens;
                /*0x20*/ int startScreen;
                /*0x28*/ System.Collections.Generic.Stack<UnityEngine.UI.Extensions.Menu> menuStack;

                static /*0x2b3ab40*/ UnityEngine.UI.Extensions.MenuManager get_Instance();
                static /*0x2b3ab8c*/ void set_Instance(UnityEngine.UI.Extensions.MenuManager value);
                /*0x2b3b6a4*/ MenuManager();
                /*0x2b3ab20*/ UnityEngine.UI.Extensions.Menu[] get_MenuScreens();
                /*0x2b3ab28*/ void set_MenuScreens(UnityEngine.UI.Extensions.Menu[] value);
                /*0x2b3ab30*/ int get_StartScreen();
                /*0x2b3ab38*/ void set_StartScreen(int value);
                /*0x2b3abdc*/ void Start();
                /*0x2b3afd4*/ void OnDestroy();
                /*0x2b3acf0*/ UnityEngine.GameObject CreateInstance(string MenuName);
                /*0x2b3b11c*/ void CreateInstance(string MenuName, ref UnityEngine.GameObject menuInstance);
                /*0x2b3ad9c*/ void OpenMenu(UnityEngine.UI.Extensions.Menu menuInstance);
                /*0x2b3b020*/ UnityEngine.GameObject GetPrefab(string PrefabName);
                /*0x2b3b1d4*/ void CloseMenu(UnityEngine.UI.Extensions.Menu menu);
                /*0x2b3b3fc*/ void CloseTopMenu();
                /*0x2b3b5e0*/ void Update();
            }

            class MenuExtensions
            {
                static /*0x2b3aacc*/ UnityEngine.UI.Extensions.Menu GetMenu(UnityEngine.GameObject go);
            }

            class SimpleMenu<T> : UnityEngine.UI.Extensions.Menu<T>
            {
                static void Show();
                static void Hide();
                SimpleMenu();
            }

            class DiamondGraph : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf8*/ float m_a;
                /*0xfc*/ float m_b;
                /*0x100*/ float m_c;
                /*0x104*/ float m_d;

                /*0x11f1e70*/ DiamondGraph();
                /*0x11f1b24*/ float get_A();
                /*0x11f1b2c*/ void set_A(float value);
                /*0x11f1b34*/ float get_B();
                /*0x11f1b3c*/ void set_B(float value);
                /*0x11f1b44*/ float get_C();
                /*0x11f1b4c*/ void set_C(float value);
                /*0x11f1b54*/ float get_D();
                /*0x11f1b5c*/ void set_D(float value);
                /*0x11f1b64*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class UICircle : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf5*/ bool ArcInvert;
                /*0xf8*/ float Arc;
                /*0xfc*/ int ArcSteps;
                /*0x100*/ int ArcRotation;
                /*0x104*/ float Progress;
                /*0x108*/ float _progress;
                /*0x10c*/ UnityEngine.Color ProgressColor;
                /*0x11c*/ bool Fill;
                /*0x120*/ float Thickness;
                /*0x124*/ int Padding;
                /*0x128*/ System.Collections.Generic.List<int> indices;
                /*0x130*/ System.Collections.Generic.List<UnityEngine.UIVertex> vertices;
                /*0x138*/ UnityEngine.Vector2 uvCenter;

                /*0x235c314*/ UICircle();
                /*0x235ba84*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x235c1ac*/ void SetProgress(float progress);
                /*0x235c1c0*/ void SetArcSteps(int steps);
                /*0x235c1d4*/ void SetInvertArc(bool invert);
                /*0x235c1ec*/ void SetArcRotation(int rotation);
                /*0x235c200*/ void SetFill(bool fill);
                /*0x235c218*/ void SetBaseColor(UnityEngine.Color color);
                /*0x235c254*/ void UpdateBaseAlpha(float value);
                /*0x235c2b4*/ void SetProgressColor(UnityEngine.Color color);
                /*0x235c2d4*/ void UpdateProgressAlpha(float value);
                /*0x235c2e8*/ void SetPadding(int padding);
                /*0x235c2fc*/ void SetThickness(int thickness);
            }

            class UICornerCut : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf8*/ UnityEngine.Vector2 cornerSize;
                /*0x100*/ bool m_cutUL;
                /*0x101*/ bool m_cutUR;
                /*0x102*/ bool m_cutLL;
                /*0x103*/ bool m_cutLR;
                /*0x104*/ bool m_makeColumns;
                /*0x105*/ bool m_useColorUp;
                /*0x108*/ UnityEngine.Color32 m_colorUp;
                /*0x10c*/ bool m_useColorDown;
                /*0x110*/ UnityEngine.Color32 m_colorDown;

                static /*0x235ccc4*/ void AddSquare(UnityEngine.Rect rect, UnityEngine.Rect rectUV, UnityEngine.Color32 color32, UnityEngine.UI.VertexHelper vh);
                static /*0x235cb94*/ void AddSquare(UnityEngine.Vector2 a, UnityEngine.Vector2 b, UnityEngine.Vector2 c, UnityEngine.Vector2 d, UnityEngine.Rect rectUV, UnityEngine.Color32 color32, UnityEngine.UI.VertexHelper vh);
                static /*0x235ce78*/ int AddVert(float x, float y, UnityEngine.Rect area, UnityEngine.Color32 color32, UnityEngine.UI.VertexHelper vh);
                /*0x235cf88*/ UICornerCut();
                /*0x235c4e0*/ bool get_CutUL();
                /*0x235c4e8*/ void set_CutUL(bool value);
                /*0x235c500*/ bool get_CutUR();
                /*0x235c508*/ void set_CutUR(bool value);
                /*0x235c520*/ bool get_CutLL();
                /*0x235c528*/ void set_CutLL(bool value);
                /*0x235c540*/ bool get_CutLR();
                /*0x235c548*/ void set_CutLR(bool value);
                /*0x235c560*/ bool get_MakeColumns();
                /*0x235c568*/ void set_MakeColumns(bool value);
                /*0x235c580*/ bool get_UseColorUp();
                /*0x235c588*/ void set_UseColorUp(bool value);
                /*0x235c594*/ UnityEngine.Color32 get_ColorUp();
                /*0x235c59c*/ void set_ColorUp(UnityEngine.Color32 value);
                /*0x235c5a4*/ bool get_UseColorDown();
                /*0x235c5ac*/ void set_UseColorDown(bool value);
                /*0x235c5b8*/ UnityEngine.Color32 get_ColorDown();
                /*0x235c5c0*/ void set_ColorDown(UnityEngine.Color32 value);
                /*0x235c5c8*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class UIGridRenderer : UnityEngine.UI.Extensions.UILineRenderer
            {
                /*0x120*/ int m_GridColumns;
                /*0x124*/ int m_GridRows;

                /*0x235dd70*/ UIGridRenderer();
                /*0x235d81c*/ int get_GridColumns();
                /*0x235d824*/ void set_GridColumns(int value);
                /*0x235d848*/ int get_GridRows();
                /*0x235d850*/ void set_GridRows(int value);
                /*0x235d874*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class UILineRenderer : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                static float MIN_MITER_JOIN = 0.2617993950843811;
                static float MIN_BEVEL_NICE_JOIN = 0.5235987901687622;
                static /*0x0*/ UnityEngine.Vector2 UV_TOP_LEFT;
                static /*0x8*/ UnityEngine.Vector2 UV_BOTTOM_LEFT;
                static /*0x10*/ UnityEngine.Vector2 UV_TOP_CENTER_LEFT;
                static /*0x18*/ UnityEngine.Vector2 UV_TOP_CENTER_RIGHT;
                static /*0x20*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_LEFT;
                static /*0x28*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_RIGHT;
                static /*0x30*/ UnityEngine.Vector2 UV_TOP_RIGHT;
                static /*0x38*/ UnityEngine.Vector2 UV_BOTTOM_RIGHT;
                static /*0x40*/ UnityEngine.Vector2[] startUvs;
                static /*0x48*/ UnityEngine.Vector2[] middleUvs;
                static /*0x50*/ UnityEngine.Vector2[] endUvs;
                static /*0x58*/ UnityEngine.Vector2[] fullUvs;
                /*0xf8*/ UnityEngine.Vector2[] m_points;
                /*0x100*/ System.Collections.Generic.List<UnityEngine.Vector2[]> m_segments;
                /*0x108*/ float lineThickness;
                /*0x10c*/ bool relativeSize;
                /*0x10d*/ bool lineList;
                /*0x10e*/ bool lineCaps;
                /*0x110*/ int bezierSegmentsPerCurve;
                /*0x114*/ UnityEngine.UI.Extensions.UILineRenderer.JoinType LineJoins;
                /*0x118*/ UnityEngine.UI.Extensions.UILineRenderer.BezierType BezierMode;
                /*0x11c*/ bool drivenExternally;

                /*0x235dd7c*/ UILineRenderer();
                /*0x235e870*/ float get_LineThickness();
                /*0x235e878*/ void set_LineThickness(float value);
                /*0x235e88c*/ bool get_RelativeSize();
                /*0x235e850*/ void set_RelativeSize(bool value);
                /*0x235e894*/ bool get_LineList();
                /*0x235e89c*/ void set_LineList(bool value);
                /*0x235e8b4*/ bool get_LineCaps();
                /*0x235e8bc*/ void set_LineCaps(bool value);
                /*0x235e8d4*/ int get_BezierSegmentsPerCurve();
                /*0x235e8dc*/ void set_BezierSegmentsPerCurve(int value);
                /*0x235e8e4*/ UnityEngine.Vector2[] get_Points();
                /*0x235d7c0*/ void set_Points(UnityEngine.Vector2[] value);
                /*0x235e8ec*/ System.Collections.Generic.List<UnityEngine.Vector2[]> get_Segments();
                /*0x235e8f4*/ void set_Segments(System.Collections.Generic.List<UnityEngine.Vector2[]> value);
                /*0x235e908*/ void PopulateMesh(UnityEngine.UI.VertexHelper vh, UnityEngine.Vector2[] pointsToDraw);
                /*0x235dc40*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x235f820*/ UnityEngine.UIVertex[] CreateLineCap(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRenderer.SegmentType type);
                /*0x235f978*/ UnityEngine.UIVertex[] CreateLineSegment(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRenderer.SegmentType type);
                /*0x235fe04*/ void GeneratedUVs();
                /*0x236024c*/ void ResolutionToNativeSize(float distance);

                enum SegmentType
                {
                    Start = 0,
                    Middle = 1,
                    End = 2,
                    Full = 3,
                }

                enum JoinType
                {
                    Bevel = 0,
                    Miter = 1,
                }

                enum BezierType
                {
                    None = 0,
                    Quick = 1,
                    Basic = 2,
                    Improved = 3,
                    Catenary = 4,
                }
            }

            class UILineRendererList : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                static float MIN_MITER_JOIN = 0.2617993950843811;
                static float MIN_BEVEL_NICE_JOIN = 0.5235987901687622;
                static /*0x0*/ UnityEngine.Vector2 UV_TOP_LEFT;
                static /*0x8*/ UnityEngine.Vector2 UV_BOTTOM_LEFT;
                static /*0x10*/ UnityEngine.Vector2 UV_TOP_CENTER_LEFT;
                static /*0x18*/ UnityEngine.Vector2 UV_TOP_CENTER_RIGHT;
                static /*0x20*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_LEFT;
                static /*0x28*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_RIGHT;
                static /*0x30*/ UnityEngine.Vector2 UV_TOP_RIGHT;
                static /*0x38*/ UnityEngine.Vector2 UV_BOTTOM_RIGHT;
                static /*0x40*/ UnityEngine.Vector2[] startUvs;
                static /*0x48*/ UnityEngine.Vector2[] middleUvs;
                static /*0x50*/ UnityEngine.Vector2[] endUvs;
                static /*0x58*/ UnityEngine.Vector2[] fullUvs;
                /*0xf8*/ System.Collections.Generic.List<UnityEngine.Vector2> m_points;
                /*0x100*/ float lineThickness;
                /*0x104*/ bool relativeSize;
                /*0x105*/ bool lineList;
                /*0x106*/ bool lineCaps;
                /*0x108*/ int bezierSegmentsPerCurve;
                /*0x10c*/ UnityEngine.UI.Extensions.UILineRendererList.JoinType LineJoins;
                /*0x110*/ UnityEngine.UI.Extensions.UILineRendererList.BezierType BezierMode;
                /*0x114*/ bool drivenExternally;

                /*0x23621e0*/ UILineRendererList();
                /*0x2360418*/ float get_LineThickness();
                /*0x2360420*/ void set_LineThickness(float value);
                /*0x2360434*/ bool get_RelativeSize();
                /*0x236043c*/ void set_RelativeSize(bool value);
                /*0x2360454*/ bool get_LineList();
                /*0x236045c*/ void set_LineList(bool value);
                /*0x2360474*/ bool get_LineCaps();
                /*0x236047c*/ void set_LineCaps(bool value);
                /*0x2360494*/ int get_BezierSegmentsPerCurve();
                /*0x236049c*/ void set_BezierSegmentsPerCurve(int value);
                /*0x23604a4*/ System.Collections.Generic.List<UnityEngine.Vector2> get_Points();
                /*0x23604ac*/ void set_Points(System.Collections.Generic.List<UnityEngine.Vector2> value);
                /*0x23604d0*/ void AddPoint(UnityEngine.Vector2 pointToAdd);
                /*0x2360550*/ void RemovePoint(UnityEngine.Vector2 pointToRemove);
                /*0x23605d0*/ void ClearPoints();
                /*0x2360638*/ void PopulateMesh(UnityEngine.UI.VertexHelper vh, System.Collections.Generic.List<UnityEngine.Vector2> pointsToDraw);
                /*0x2361cc4*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x23618f4*/ UnityEngine.UIVertex[] CreateLineCap(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRendererList.SegmentType type);
                /*0x2361a4c*/ UnityEngine.UIVertex[] CreateLineSegment(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRendererList.SegmentType type);
                /*0x2361d64*/ void GeneratedUVs();
                /*0x2362128*/ void ResolutionToNativeSize(float distance);

                enum SegmentType
                {
                    Start = 0,
                    Middle = 1,
                    End = 2,
                    Full = 3,
                }

                enum JoinType
                {
                    Bevel = 0,
                    Miter = 1,
                }

                enum BezierType
                {
                    None = 0,
                    Quick = 1,
                    Basic = 2,
                    Improved = 3,
                    Catenary = 4,
                }
            }

            class UILineTextureRenderer : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf8*/ UnityEngine.Rect m_UVRect;
                /*0x108*/ UnityEngine.Vector2[] m_points;
                /*0x110*/ float LineThickness;
                /*0x114*/ bool UseMargins;
                /*0x118*/ UnityEngine.Vector2 Margin;
                /*0x120*/ bool relativeSize;

                /*0x2362bd4*/ UILineTextureRenderer();
                /*0x2362250*/ UnityEngine.Rect get_uvRect();
                /*0x2362260*/ void set_uvRect(UnityEngine.Rect value);
                /*0x23622f8*/ UnityEngine.Vector2[] get_Points();
                /*0x2362300*/ void set_Points(UnityEngine.Vector2[] value);
                /*0x2362324*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x2362b58*/ UnityEngine.Vector3 RotatePointAroundPivot(UnityEngine.Vector3 point, UnityEngine.Vector3 pivot, UnityEngine.Vector3 angles);
            }

            class UIPolygon : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf5*/ bool fill;
                /*0xf8*/ float thickness;
                /*0xfc*/ int sides;
                /*0x100*/ float rotation;
                /*0x108*/ float[] VerticesDistances;
                /*0x110*/ float size;

                /*0x2364c34*/ UIPolygon();
                /*0x2364674*/ void DrawPolygon(int _sides);
                /*0x236473c*/ void DrawPolygon(int _sides, float[] _VerticesDistances);
                /*0x2364754*/ void DrawPolygon(int _sides, float[] _VerticesDistances, float _rotation);
                /*0x2364770*/ void Update();
                /*0x2364890*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            enum ResolutionMode
            {
                None = 0,
                PerSegment = 1,
                PerLine = 2,
            }

            class UIPrimitiveBase : UnityEngine.UI.MaskableGraphic, UnityEngine.UI.ILayoutElement, UnityEngine.ICanvasRaycastFilter
            {
                static /*0x0*/ UnityEngine.Material s_ETC1DefaultUI;
                /*0xd0*/ System.Collections.Generic.List<UnityEngine.Vector2> outputList;
                /*0xd8*/ UnityEngine.Sprite m_Sprite;
                /*0xe0*/ UnityEngine.Sprite m_OverrideSprite;
                /*0xe8*/ float m_EventAlphaThreshold;
                /*0xec*/ UnityEngine.UI.Extensions.ResolutionMode m_improveResolution;
                /*0xf0*/ float m_Resolution;
                /*0xf4*/ bool m_useNativeSize;

                static /*0x2365acc*/ UIPrimitiveBase();
                static /*0x2364e50*/ UnityEngine.Material get_defaultETC1GraphicMaterial();
                /*0x235c458*/ UIPrimitiveBase();
                /*0x2364ccc*/ UnityEngine.Sprite get_sprite();
                /*0x2364cd4*/ void set_sprite(UnityEngine.Sprite value);
                /*0x2364d5c*/ UnityEngine.Sprite get_overrideSprite();
                /*0x2364d60*/ void set_overrideSprite(UnityEngine.Sprite value);
                /*0x23601c8*/ UnityEngine.Sprite get_activeSprite();
                /*0x2364de8*/ float get_eventAlphaThreshold();
                /*0x2364df0*/ void set_eventAlphaThreshold(float value);
                /*0x2364df8*/ UnityEngine.UI.Extensions.ResolutionMode get_ImproveResolution();
                /*0x2364e00*/ void set_ImproveResolution(UnityEngine.UI.Extensions.ResolutionMode value);
                /*0x2364e14*/ float get_Resoloution();
                /*0x2364e1c*/ void set_Resoloution(float value);
                /*0x2364e30*/ bool get_UseNativeSize();
                /*0x2364e38*/ void set_UseNativeSize(bool value);
                /*0x2364f50*/ UnityEngine.Texture get_mainTexture();
                /*0x23650f4*/ bool get_hasBorder();
                /*0x2360304*/ float get_pixelsPerUnit();
                /*0x23651bc*/ UnityEngine.Material get_material();
                /*0x236531c*/ void set_material(UnityEngine.Material value);
                /*0x235fbf0*/ UnityEngine.UIVertex[] SetVbo(UnityEngine.Vector2[] vertices, UnityEngine.Vector2[] uvs);
                /*0x235f778*/ UnityEngine.Vector2[] IncreaseResolution(UnityEngine.Vector2[] input);
                /*0x2361504*/ System.Collections.Generic.List<UnityEngine.Vector2> IncreaseResolution(System.Collections.Generic.List<UnityEngine.Vector2> input);
                /*0x2365324*/ void GeneratedUVs();
                /*0x2365328*/ void ResolutionToNativeSize(float distance);
                /*0x236532c*/ void CalculateLayoutInputHorizontal();
                /*0x2365330*/ void CalculateLayoutInputVertical();
                /*0x2365334*/ float get_minWidth();
                /*0x236533c*/ float get_preferredWidth();
                /*0x2365410*/ float get_flexibleWidth();
                /*0x2365418*/ float get_minHeight();
                /*0x2365420*/ float get_preferredHeight();
                /*0x23654f4*/ float get_flexibleHeight();
                /*0x23654fc*/ int get_layoutPriority();
                /*0x2365504*/ bool IsRaycastLocationValid(UnityEngine.Vector2 screenPoint, UnityEngine.Camera eventCamera);
                /*0x2365908*/ UnityEngine.Vector2 MapCoordinate(UnityEngine.Vector2 local, UnityEngine.Rect rect);
                /*0x236597c*/ UnityEngine.Vector4 GetAdjustedBorders(UnityEngine.Vector4 border, UnityEngine.Rect rect);
                /*0x2365a98*/ void OnEnable();
            }

            enum NavigationMode
            {
                Auto = 0,
                Manual = 1,
            }

            class TabNavigationHelper : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.EventSystems.EventSystem _system;
                /*0x20*/ UnityEngine.UI.Selectable StartingObject;
                /*0x28*/ UnityEngine.UI.Selectable LastObject;
                /*0x30*/ UnityEngine.UI.Selectable[] NavigationPath;
                /*0x38*/ UnityEngine.UI.Extensions.NavigationMode NavigationMode;
                /*0x3c*/ bool CircularNavigation;

                /*0xc9ee88*/ TabNavigationHelper();
                /*0xc9e554*/ void Start();
                /*0xc9e7b8*/ void Update();
                /*0xc9e6f8*/ void SelectDefaultObject(ref UnityEngine.UI.Selectable next);
                /*0xc9ecec*/ void selectGameObject(UnityEngine.UI.Selectable selectable);
            }

            class BoundTooltipItem : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ UnityEngine.UI.Extensions.BoundTooltipItem instance;
                /*0x18*/ UnityEngine.UI.Text TooltipText;
                /*0x20*/ UnityEngine.Vector3 ToolTipOffset;

                static /*0x1364788*/ UnityEngine.UI.Extensions.BoundTooltipItem get_Instance();
                /*0x1364868*/ BoundTooltipItem();
                /*0x13645bc*/ bool get_IsActive();
                /*0x13645e0*/ void Awake();
                /*0x13646c0*/ void ShowTooltip(string text, UnityEngine.Vector3 pos);
                /*0x1364698*/ void HideTooltip();
            }

            class BoundTooltipTrigger : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ string text;
                /*0x20*/ bool useMousePosition;
                /*0x24*/ UnityEngine.Vector3 offset;

                /*0x1364988*/ BoundTooltipTrigger();
                /*0x1364870*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x136492c*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x1364964*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x1364984*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x13648d8*/ void StartHover(UnityEngine.Vector3 position);
                /*0x1364968*/ void StopHover();
            }

            class HoverTooltip : UnityEngine.MonoBehaviour
            {
                /*0x18*/ int horizontalPadding;
                /*0x1c*/ int verticalPadding;
                /*0x20*/ UnityEngine.UI.Text thisText;
                /*0x28*/ UnityEngine.UI.HorizontalLayoutGroup hlG;
                /*0x30*/ UnityEngine.RectTransform bgImage;
                /*0x38*/ UnityEngine.UI.Image bgImageSource;
                /*0x40*/ bool firstUpdate;
                /*0x41*/ bool inside;
                /*0x44*/ UnityEngine.RenderMode GUIMode;
                /*0x48*/ UnityEngine.Camera GUICamera;
                /*0x50*/ UnityEngine.Vector3 lowerLeft;
                /*0x5c*/ UnityEngine.Vector3 upperRight;
                /*0x68*/ float currentYScaleFactor;
                /*0x6c*/ float currentXScaleFactor;
                /*0x70*/ float defaultYOffset;
                /*0x74*/ float defaultXOffset;
                /*0x78*/ float tooltipRealHeight;
                /*0x7c*/ float tooltipRealWidth;

                /*0xd20548*/ HoverTooltip();
                /*0xd1f878*/ void Start();
                /*0xd1fab8*/ void SetTooltip(string text);
                /*0xd20084*/ void SetTooltip(string[] texts);
                /*0xd20190*/ void SetTooltip(string text, bool test);
                /*0xd1fc28*/ void OnScreenSpaceCamera();
                /*0xd201d8*/ void HideTooltip();
                /*0xd202a0*/ void Update();
                /*0xd202e4*/ void LayoutInit();
                /*0xd1fb00*/ void NewTooltip();
                /*0xd20438*/ void ActivateTooltipVisibility();
                /*0xd1f9ac*/ void HideTooltipVisibility();
            }

            class ToolTip : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ UnityEngine.UI.Extensions.ToolTip instance;
                /*0x18*/ UnityEngine.UI.Text _text;
                /*0x20*/ UnityEngine.RectTransform _rectTransform;
                /*0x28*/ UnityEngine.RectTransform canvasRectTransform;
                /*0x30*/ UnityEngine.Canvas canvas;
                /*0x38*/ bool tooltipTriggersCanForceCanvasUpdate;
                /*0x40*/ UnityEngine.UI.LayoutGroup _layoutGroup;
                /*0x48*/ bool _inside;
                /*0x4c*/ float width;
                /*0x50*/ float height;
                /*0x54*/ float YShift;
                /*0x58*/ float xShift;
                /*0x5c*/ UnityEngine.RenderMode guiMode;
                /*0x60*/ UnityEngine.Camera _guiCamera;
                /*0x68*/ UnityEngine.Vector3 screenLowerLeft;
                /*0x74*/ UnityEngine.Vector3 screenUpperRight;
                /*0x80*/ UnityEngine.Vector3 shiftingVector;
                /*0x8c*/ UnityEngine.Vector3 baseTooltipPos;
                /*0x98*/ UnityEngine.Vector3 newTTPos;
                /*0xa4*/ UnityEngine.Vector3 adjustedNewTTPos;
                /*0xb0*/ UnityEngine.Vector3 adjustedTTLocalPos;
                /*0xbc*/ UnityEngine.Vector3 shifterForBorders;
                /*0xc8*/ float borderTest;

                static /*0x11707d0*/ UnityEngine.UI.Extensions.ToolTip get_Instance();
                /*0x1171298*/ ToolTip();
                /*0x117074c*/ UnityEngine.Camera get_GuiCamera();
                /*0x11708b0*/ void Reset();
                /*0x1170918*/ void Awake();
                /*0x1170ab4*/ void SetTooltip(string ttext, UnityEngine.Vector3 basePos, bool refreshCanvasesBeforeGetSize);
                /*0x1170bf4*/ void HideTooltip();
                /*0x1170c30*/ void Update();
                /*0x1170c44*/ void RefreshTooltipSize();
                /*0x1170bd0*/ void ContextualTooltipUpdate(bool refreshCanvasesBeforeGettingSize);
                /*0x1170cf8*/ void OnScreenSpaceCamera(bool refreshCanvasesBeforeGettingSize);
                /*0x1171074*/ void OnScreenSpaceOverlay(bool refreshCanvasesBeforeGettingSize);
            }

            class TooltipTrigger : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ string text;
                /*0x20*/ UnityEngine.UI.Extensions.TooltipTrigger.TooltipPositioningType tooltipPositioningType;
                /*0x24*/ bool isChildOfOverlayCanvas;
                /*0x25*/ bool hovered;
                /*0x28*/ UnityEngine.Vector3 offset;

                /*0x1173c70*/ TooltipTrigger();
                /*0x11738a8*/ void Start();
                /*0x117395c*/ bool get_WorldToScreenIsRequired();
                /*0x11739c4*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x1173b3c*/ System.Collections.IEnumerator HoveredMouseFollowingLoop();
                /*0x1173ba8*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x1173c48*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x1173c6c*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x1173ae0*/ void StartHover(UnityEngine.Vector3 position, bool shouldCanvasUpdate);
                /*0x1173c4c*/ void StopHover();

                enum TooltipPositioningType
                {
                    mousePosition = 0,
                    mousePositionAndFollow = 1,
                    transformPosition = 2,
                }

                class <HoveredMouseFollowingLoop>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.TooltipTrigger <>4__this;

                    /*0xcd1f2c*/ <HoveredMouseFollowingLoop>d__10(int <>1__state);
                    /*0xcd1f58*/ void System.IDisposable.Dispose();
                    /*0xcd1f5c*/ bool MoveNext();
                    /*0xcd1fe0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcd1fe8*/ void System.Collections.IEnumerator.Reset();
                    /*0xcd2028*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class UIWindowBase : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEndDragHandler
            {
                static /*0x0*/ bool ResetCoords;
                /*0x18*/ UnityEngine.RectTransform m_transform;
                /*0x20*/ bool _isDragging;
                /*0x24*/ UnityEngine.Vector3 m_originalCoods;
                /*0x30*/ UnityEngine.Canvas m_canvas;
                /*0x38*/ UnityEngine.RectTransform m_canvasRectTransform;
                /*0x40*/ int KeepWindowInCanvas;

                static /*0x2369810*/ UIWindowBase();
                /*0x23697d4*/ UIWindowBase();
                /*0x2369178*/ void Start();
                /*0x2369218*/ void Update();
                /*0x2369318*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2369708*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x23697cc*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2369294*/ void resetCoordinatePosition();
                /*0x23693d0*/ UnityEngine.Vector3 ScreenToCanvas(UnityEngine.Vector3 screenPosition);
            }

            class BezierPath
            {
                /*0x10*/ int SegmentsPerCurve;
                /*0x14*/ float MINIMUM_SQR_DISTANCE;
                /*0x18*/ float DIVISION_THRESHOLD;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.Vector2> controlPoints;
                /*0x28*/ int curveCount;

                /*0x1362800*/ BezierPath();
                /*0x1362890*/ void SetControlPoints(System.Collections.Generic.List<UnityEngine.Vector2> newControlPoints);
                /*0x1362954*/ void SetControlPoints(UnityEngine.Vector2[] newControlPoints);
                /*0x1362a18*/ System.Collections.Generic.List<UnityEngine.Vector2> GetControlPoints();
                /*0x1362a20*/ void Interpolate(System.Collections.Generic.List<UnityEngine.Vector2> segmentPoints, float scale);
                /*0x1362d3c*/ void SamplePoints(System.Collections.Generic.List<UnityEngine.Vector2> sourcePoints, float minSqrDistance, float maxSqrDistance, float scale);
                /*0x13630ac*/ UnityEngine.Vector2 CalculateBezierPoint(int curveIndex, float t);
                /*0x1363278*/ System.Collections.Generic.List<UnityEngine.Vector2> GetDrawingPoints0();
                /*0x136339c*/ System.Collections.Generic.List<UnityEngine.Vector2> GetDrawingPoints1();
                /*0x1363610*/ System.Collections.Generic.List<UnityEngine.Vector2> GetDrawingPoints2();
                /*0x1363718*/ System.Collections.Generic.List<UnityEngine.Vector2> FindDrawingPoints(int curveIndex);
                /*0x1363834*/ int FindDrawingPoints(int curveIndex, float t0, float t1, System.Collections.Generic.List<UnityEngine.Vector2> pointList, int insertionIndex);
                /*0x136320c*/ UnityEngine.Vector2 CalculateBezierPoint(float t, UnityEngine.Vector2 p0, UnityEngine.Vector2 p1, UnityEngine.Vector2 p2, UnityEngine.Vector2 p3);
            }

            class CLZF2
            {
                static /*0x0*/ uint HLOG;
                static /*0x4*/ uint HSIZE;
                static /*0x8*/ uint MAX_LIT;
                static /*0xc*/ uint MAX_OFF;
                static /*0x10*/ uint MAX_REF;
                static /*0x18*/ long[] HashTable;

                static /*0x133f8d0*/ CLZF2();
                static /*0x133ed2c*/ byte[] Compress(byte[] inputBytes);
                static /*0x133f5c8*/ byte[] Decompress(byte[] inputBytes);
                static /*0x133ee38*/ int lzf_compress(byte[] input, ref byte[] output);
                static /*0x133f6d4*/ int lzf_decompress(byte[] input, ref byte[] output);
            }

            class CableCurve
            {
                static /*0x0*/ UnityEngine.Vector2[] emptyCurve;
                /*0x10*/ UnityEngine.Vector2 m_start;
                /*0x18*/ UnityEngine.Vector2 m_end;
                /*0x20*/ float m_slack;
                /*0x24*/ int m_steps;
                /*0x28*/ bool m_regen;
                /*0x30*/ UnityEngine.Vector2[] points;

                static /*0x1345814*/ CableCurve();
                /*0x1345230*/ CableCurve();
                /*0x13452f4*/ CableCurve(UnityEngine.Vector2[] inputPoints);
                /*0x1345368*/ CableCurve(System.Collections.Generic.List<UnityEngine.Vector2> inputPoints);
                /*0x1345434*/ CableCurve(UnityEngine.UI.Extensions.CableCurve v);
                /*0x134504c*/ bool get_regenPoints();
                /*0x1345054*/ void set_regenPoints(bool value);
                /*0x1345060*/ UnityEngine.Vector2 get_start();
                /*0x1345068*/ void set_start(UnityEngine.Vector2 value);
                /*0x13450a0*/ UnityEngine.Vector2 get_end();
                /*0x13450a8*/ void set_end(UnityEngine.Vector2 value);
                /*0x13450e0*/ float get_slack();
                /*0x13450e8*/ void set_slack(float value);
                /*0x134512c*/ int get_steps();
                /*0x1345134*/ void set_steps(int value);
                /*0x1345174*/ UnityEngine.Vector2 get_midPoint();
                /*0x1345498*/ UnityEngine.Vector2[] Points();
            }

            class Circle
            {
                /*0x10*/ float xAxis;
                /*0x14*/ float yAxis;
                /*0x18*/ int steps;

                /*0x10df180*/ Circle(float radius);
                /*0x10df1bc*/ Circle(float radius, int steps);
                /*0x10df1f8*/ Circle(float xAxis, float yAxis);
                /*0x10df238*/ Circle(float xAxis, float yAxis, int steps);
                /*0x10df150*/ float get_X();
                /*0x10df158*/ void set_X(float value);
                /*0x10df160*/ float get_Y();
                /*0x10df168*/ void set_Y(float value);
                /*0x10df170*/ int get_Steps();
                /*0x10df178*/ void set_Steps(int value);
                /*0x10df278*/ UnityEngine.Vector2 Evaluate(float t);
                /*0x10df2e4*/ void Evaluate(float t, ref UnityEngine.Vector2 eval);
            }

            class DragCorrector : UnityEngine.MonoBehaviour
            {
                /*0x18*/ int baseTH;
                /*0x1c*/ int basePPI;
                /*0x20*/ int dragTH;

                /*0x11f1fb8*/ DragCorrector();
                /*0x11f1edc*/ void Start();
            }

            class ExtentionMethods
            {
                static T GetOrAddComponent<T>(UnityEngine.GameObject child);
            }

            class InputFieldEnterSubmit : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.InputFieldEnterSubmit.EnterSubmitEvent EnterSubmit;
                /*0x20*/ bool defocusInput;
                /*0x28*/ UnityEngine.UI.InputField _input;

                /*0x1573f80*/ InputFieldEnterSubmit();
                /*0x1573dbc*/ void Awake();
                /*0x1573ea0*/ void OnEndEdit(string txt);

                class EnterSubmitEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xe4f6f4*/ EnterSubmitEvent();
                }
            }

            class NonDrawingGraphic : UnityEngine.UI.MaskableGraphic
            {
                /*0x2b52594*/ NonDrawingGraphic();
                /*0x2b52570*/ void SetMaterialDirty();
                /*0x2b52574*/ void SetVerticesDirty();
                /*0x2b52578*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class PPIViewer : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Text label;

                /*0x1141ad4*/ PPIViewer();
                /*0x114199c*/ void Awake();
                /*0x11419f0*/ void Start();
            }

            class PaginationManager : UnityEngine.UI.ToggleGroup
            {
                /*0x28*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_PaginationChildren;
                /*0x30*/ UnityEngine.UI.Extensions.ScrollSnapBase scrollSnap;
                /*0x38*/ bool isAClick;

                /*0x1141f40*/ PaginationManager();
                /*0x1141f24*/ int get_CurrentPage();
                /*0x1141f48*/ void Start();
                /*0x1142430*/ void GoToScreen(int pageNo);
                /*0x114244c*/ void ToggleClick(UnityEngine.UI.Toggle target);
                /*0x11424ec*/ void ToggleClick(bool toggle);
                /*0x11425b8*/ void ToggleClick(int target);
                /*0x1142398*/ void SetToggleGraphics(int pageNo);
                /*0x11425e0*/ void OnPageChangeEnd(int pageNo);
            }

            class ReadOnlyAttribute : UnityEngine.PropertyAttribute
            {
                /*0x11c33a4*/ ReadOnlyAttribute();
            }

            class ScrollConflictManager : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.UI.ScrollRect ParentScrollRect;
                /*0x20*/ UnityEngine.UI.Extensions.ScrollSnap ParentScrollSnap;
                /*0x28*/ UnityEngine.UI.ScrollRect _myScrollRect;
                /*0x30*/ bool scrollOther;
                /*0x31*/ bool scrollOtherHorizontally;

                /*0xe18398*/ ScrollConflictManager();
                /*0xe17ecc*/ void Awake();
                /*0xe18028*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1811c*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe18300*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            class ScrollRectEx : UnityEngine.UI.ScrollRect
            {
                /*0x128*/ bool routeToParent;

                /*0xe1d260*/ ScrollRectEx();
                void DoForParents<T>(System.Action<T> action);
                /*0xe1cbd0*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1ccc8*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1cdd4*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1cf94*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1d0a0*/ void OnScroll(UnityEngine.EventSystems.PointerEventData eventData);

                class <>c__DisplayClass2_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd20c*/ <>c__DisplayClass2_0();
                    /*0xcbd214*/ void <OnInitializePotentialDrag>b__0(UnityEngine.EventSystems.IInitializePotentialDragHandler parent);
                }

                class <>c__DisplayClass3_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd2d0*/ <>c__DisplayClass3_0();
                    /*0xcbd2d8*/ void <OnDrag>b__0(UnityEngine.EventSystems.IDragHandler parent);
                }

                class <>c__DisplayClass4_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd394*/ <>c__DisplayClass4_0();
                    /*0xcbd39c*/ void <OnBeginDrag>b__0(UnityEngine.EventSystems.IBeginDragHandler parent);
                }

                class <>c__DisplayClass5_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd458*/ <>c__DisplayClass5_0();
                    /*0xcbd460*/ void <OnEndDrag>b__0(UnityEngine.EventSystems.IEndDragHandler parent);
                }

                class <>c__DisplayClass6_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd51c*/ <>c__DisplayClass6_0();
                    /*0xcbd524*/ void <OnScroll>b__0(UnityEngine.EventSystems.IScrollHandler parent);
                }
            }

            class ScrollRectExtensions
            {
                static /*0xe1d268*/ void ScrollToTop(UnityEngine.UI.ScrollRect scrollRect);
                static /*0xe1d288*/ void ScrollToBottom(UnityEngine.UI.ScrollRect scrollRect);
            }

            class ScrollRectLinker : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool clamp;
                /*0x20*/ UnityEngine.UI.ScrollRect controllingScrollRect;
                /*0x28*/ UnityEngine.UI.ScrollRect scrollRect;

                /*0xe1d454*/ ScrollRectLinker();
                /*0xe1d2a8*/ void Awake();
                /*0xe1d3e4*/ void MirrorPos(UnityEngine.Vector2 scrollPos);
            }

            class ScrollRectTweener : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x18*/ UnityEngine.UI.ScrollRect scrollRect;
                /*0x20*/ UnityEngine.Vector2 startPos;
                /*0x28*/ UnityEngine.Vector2 targetPos;
                /*0x30*/ bool wasHorizontal;
                /*0x31*/ bool wasVertical;
                /*0x34*/ float moveSpeed;
                /*0x38*/ bool disableDragWhileTweening;

                /*0xe1d9ec*/ ScrollRectTweener();
                /*0xe1d464*/ void Awake();
                /*0xe1d4d0*/ void ScrollHorizontal(float normalizedX);
                /*0xe1d570*/ void ScrollHorizontal(float normalizedX, float duration);
                /*0xe1d638*/ void ScrollVertical(float normalizedY);
                /*0xe1d694*/ void ScrollVertical(float normalizedY, float duration);
                /*0xe1d530*/ void Scroll(UnityEngine.Vector2 normalizedPos);
                /*0xe1d6e0*/ float GetScrollDuration(UnityEngine.Vector2 normalizedPos);
                /*0xe1d7ac*/ UnityEngine.Vector2 DeNormalize(UnityEngine.Vector2 normalizedPos);
                /*0xe1d758*/ UnityEngine.Vector2 GetCurrentPos();
                /*0xe1d5c0*/ void Scroll(UnityEngine.Vector2 normalizedPos, float duration);
                /*0xe1d884*/ System.Collections.IEnumerator DoMove(float duration);
                /*0xe1d900*/ UnityEngine.Vector2 EaseVector(float currentTime, UnityEngine.Vector2 startValue, UnityEngine.Vector2 changeInValue, float duration);
                /*0xe1d96c*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1d97c*/ void StopScroll();
                /*0xe1d858*/ void LockScrollability();
                /*0xe1d9b8*/ void RestoreScrollability();

                class <DoMove>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ float duration;
                    /*0x28*/ UnityEngine.UI.Extensions.ScrollRectTweener <>4__this;
                    /*0x30*/ UnityEngine.Vector2 <posOffset>5__2;
                    /*0x38*/ float <currentTime>5__3;

                    /*0xcbd5e0*/ <DoMove>d__17(int <>1__state);
                    /*0xcbd60c*/ void System.IDisposable.Dispose();
                    /*0xcbd610*/ bool MoveNext();
                    /*0xcbd72c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbd734*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbd774*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class SelectableScaler : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
            {
                /*0x18*/ UnityEngine.AnimationCurve animCurve;
                /*0x20*/ float speed;
                /*0x24*/ UnityEngine.Vector3 initScale;
                /*0x30*/ UnityEngine.Transform target;
                /*0x38*/ UnityEngine.UI.Selectable selectable;

                /*0xe244bc*/ SelectableScaler();
                /*0xe240a4*/ UnityEngine.UI.Selectable get_Target();
                /*0xe24144*/ void Awake();
                /*0xe241ec*/ void OnEnable();
                /*0xe24214*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe242fc*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe243e4*/ System.Collections.IEnumerator ScaleIN();
                /*0xe24450*/ System.Collections.IEnumerator ScaleOUT();

                class <ScaleIN>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.SelectableScaler <>4__this;
                    /*0x28*/ float <t>5__2;
                    /*0x2c*/ float <maxT>5__3;

                    /*0xcbdfd4*/ <ScaleIN>d__11(int <>1__state);
                    /*0xcbe000*/ void System.IDisposable.Dispose();
                    /*0xcbe004*/ bool MoveNext();
                    /*0xcbe194*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbe19c*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbe1dc*/ object System.Collections.IEnumerator.get_Current();
                }

                class <ScaleOUT>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.SelectableScaler <>4__this;
                    /*0x28*/ float <t>5__2;
                    /*0x2c*/ float <maxT>5__3;

                    /*0xcbe1e4*/ <ScaleOUT>d__12(int <>1__state);
                    /*0xcbe210*/ void System.IDisposable.Dispose();
                    /*0xcbe214*/ bool MoveNext();
                    /*0xcbe3c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbe3d0*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbe410*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class SetPropertyUtility
            {
                static /*0xe2791c*/ bool SetColor(ref UnityEngine.Color currentValue, UnityEngine.Color newValue);
                static bool SetStruct<T>(ref T currentValue, T newValue);
                static bool SetClass<T>(ref T currentValue, T newValue);
            }

            class UIExtensionMethods
            {
                static /*0x235cff8*/ UnityEngine.Canvas GetParentCanvas(UnityEngine.RectTransform rt);
                static /*0x235d150*/ UnityEngine.Vector2 TransformInputBasedOnCanvasType(UnityEngine.Vector2 input, UnityEngine.Canvas canvas);
                static /*0x235d264*/ UnityEngine.Vector3 TransformInputBasedOnCanvasType(UnityEngine.Vector2 input, UnityEngine.RectTransform rt);
                static /*0x235d1c0*/ UnityEngine.Camera GetEventCamera(UnityEngine.Canvas input);
            }

            class UIHighlightable : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler
            {
                /*0x18*/ UnityEngine.UI.Graphic m_Graphic;
                /*0x20*/ bool m_Highlighted;
                /*0x21*/ bool m_Pressed;
                /*0x22*/ bool m_Interactable;
                /*0x23*/ bool m_ClickToHold;
                /*0x24*/ UnityEngine.Color NormalColor;
                /*0x34*/ UnityEngine.Color HighlightedColor;
                /*0x44*/ UnityEngine.Color PressedColor;
                /*0x54*/ UnityEngine.Color DisabledColor;
                /*0x68*/ UnityEngine.UI.Extensions.UIHighlightable.InteractableChangedEvent OnInteractableChanged;

                /*0x235e044*/ UIHighlightable();
                /*0x235ddec*/ bool get_Interactable();
                /*0x235ddf4*/ void set_Interactable(bool value);
                /*0x235ded8*/ bool get_ClickToHold();
                /*0x235dee0*/ void set_ClickToHold(bool value);
                /*0x235deec*/ void Awake();
                /*0x235df40*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235df8c*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235dfd4*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235e030*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235de6c*/ void HighlightInteractable(UnityEngine.UI.Graphic graphic);

                class InteractableChangedEvent : UnityEngine.Events.UnityEvent<bool>
                {
                    /*0xd8a37c*/ InteractableChangedEvent();
                }
            }

            class UILineConnector : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.RectTransform[] transforms;
                /*0x20*/ UnityEngine.Vector2[] previousPositions;
                /*0x28*/ UnityEngine.RectTransform canvas;
                /*0x30*/ UnityEngine.RectTransform rt;
                /*0x38*/ UnityEngine.UI.Extensions.UILineRenderer lr;

                /*0x235e868*/ UILineConnector();
                /*0x235e3d0*/ void Awake();
                /*0x235e480*/ void Update();
            }

            class UIScrollToSelection : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.UIScrollToSelection.ScrollType scrollDirection;
                /*0x1c*/ float scrollSpeed;
                /*0x20*/ bool cancelScrollOnInput;
                /*0x28*/ System.Collections.Generic.List<UnityEngine.KeyCode> cancelScrollKeycodes;
                /*0x30*/ UnityEngine.RectTransform <ScrollWindow>k__BackingField;
                /*0x38*/ UnityEngine.UI.ScrollRect <TargetScrollRect>k__BackingField;
                /*0x40*/ UnityEngine.GameObject <LastCheckedGameObject>k__BackingField;
                /*0x48*/ UnityEngine.RectTransform <CurrentTargetRectTransform>k__BackingField;
                /*0x50*/ bool <IsManualScrollingAvailable>k__BackingField;

                /*0x2367478*/ UIScrollToSelection();
                /*0x2366a2c*/ UnityEngine.RectTransform get_LayoutListGroup();
                /*0x2366ab8*/ UnityEngine.UI.Extensions.UIScrollToSelection.ScrollType get_ScrollDirection();
                /*0x2366ac0*/ float get_ScrollSpeed();
                /*0x2366ac8*/ bool get_CancelScrollOnInput();
                /*0x2366ad0*/ System.Collections.Generic.List<UnityEngine.KeyCode> get_CancelScrollKeycodes();
                /*0x2366ad8*/ UnityEngine.RectTransform get_ScrollWindow();
                /*0x2366ae0*/ void set_ScrollWindow(UnityEngine.RectTransform value);
                /*0x2366ae8*/ UnityEngine.UI.ScrollRect get_TargetScrollRect();
                /*0x2366af0*/ void set_TargetScrollRect(UnityEngine.UI.ScrollRect value);
                /*0x2366af8*/ UnityEngine.EventSystems.EventSystem get_CurrentEventSystem();
                /*0x2366b54*/ UnityEngine.GameObject get_LastCheckedGameObject();
                /*0x2366b5c*/ void set_LastCheckedGameObject(UnityEngine.GameObject value);
                /*0x2366b64*/ UnityEngine.GameObject get_CurrentSelectedGameObject();
                /*0x2366bd0*/ UnityEngine.RectTransform get_CurrentTargetRectTransform();
                /*0x2366bd8*/ void set_CurrentTargetRectTransform(UnityEngine.RectTransform value);
                /*0x2366be0*/ bool get_IsManualScrollingAvailable();
                /*0x2366be8*/ void set_IsManualScrollingAvailable(bool value);
                /*0x2366bf4*/ void Awake();
                /*0x2366c70*/ void Start();
                /*0x2366c74*/ void Update();
                /*0x2366ca0*/ void UpdateReferences();
                /*0x2366e40*/ void CheckIfScrollingShouldBeLocked();
                /*0x2366efc*/ void ScrollRectToLevelSelection();
                /*0x23670dc*/ void UpdateVerticalScrollPosition(UnityEngine.RectTransform selection);
                /*0x2367288*/ void UpdateHorizontalScrollPosition(UnityEngine.RectTransform selection);
                /*0x2367438*/ float GetScrollOffset(float position, float listAnchorPosition, float targetLength, float maskLength);

                enum ScrollType
                {
                    VERTICAL = 0,
                    HORIZONTAL = 1,
                    BOTH = 2,
                }
            }

            class UIScrollToSelectionXY : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float scrollSpeed;
                /*0x20*/ UnityEngine.RectTransform layoutListGroup;
                /*0x28*/ UnityEngine.RectTransform targetScrollObject;
                /*0x30*/ bool scrollToSelection;
                /*0x38*/ UnityEngine.RectTransform scrollWindow;
                /*0x40*/ UnityEngine.UI.ScrollRect targetScrollRect;

                /*0x236792c*/ UIScrollToSelectionXY();
                /*0x23674fc*/ void Start();
                /*0x2367578*/ void Update();
                /*0x236757c*/ void ScrollRectToLevelSelection();
            }

            class UISelectableExtension : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
            {
                /*0x18*/ UnityEngine.UI.Extensions.UISelectableExtension.UIButtonEvent OnButtonPress;
                /*0x20*/ UnityEngine.UI.Extensions.UISelectableExtension.UIButtonEvent OnButtonRelease;
                /*0x28*/ UnityEngine.UI.Extensions.UISelectableExtension.UIButtonEvent OnButtonHeld;
                /*0x30*/ bool _pressed;
                /*0x38*/ UnityEngine.EventSystems.PointerEventData _heldEventData;

                /*0x2367abc*/ UISelectableExtension();
                /*0x2367944*/ void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x23679bc*/ void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2367a30*/ void Update();
                /*0x2367aa4*/ void TestClicked();
                /*0x2367aa8*/ void TestPressed();
                /*0x2367aac*/ void TestReleased();
                /*0x2367ab0*/ void TestHold();
                /*0x2367ab4*/ void OnDisable();

                class UIButtonEvent : UnityEngine.Events.UnityEvent<UnityEngine.EventSystems.PointerEventData.InputButton>
                {
                    /*0xd8a3c8*/ UIButtonEvent();
                }
            }

            class UI_InfiniteScroll : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool InitByUser;
                /*0x20*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x28*/ UnityEngine.UI.ContentSizeFitter _contentSizeFitter;
                /*0x30*/ UnityEngine.UI.VerticalLayoutGroup _verticalLayoutGroup;
                /*0x38*/ UnityEngine.UI.HorizontalLayoutGroup _horizontalLayoutGroup;
                /*0x40*/ UnityEngine.UI.GridLayoutGroup _gridLayoutGroup;
                /*0x48*/ bool _isVertical;
                /*0x49*/ bool _isHorizontal;
                /*0x4c*/ float _disableMarginX;
                /*0x50*/ float _disableMarginY;
                /*0x54*/ bool _hasDisabledGridComponents;
                /*0x58*/ System.Collections.Generic.List<UnityEngine.RectTransform> items;
                /*0x60*/ UnityEngine.Vector2 _newAnchoredPosition;
                /*0x68*/ float _treshold;
                /*0x6c*/ int _itemCount;
                /*0x70*/ float _recordOffsetX;
                /*0x74*/ float _recordOffsetY;

                /*0x236a528*/ UI_InfiniteScroll();
                /*0x2369814*/ void Awake();
                /*0x2369824*/ void Init();
                /*0x2369cd8*/ void DisableGridComponents();
                /*0x2369fa0*/ void OnScroll(UnityEngine.Vector2 pos);
            }

            class UI_ScrollRectOcclusion : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool InitByUser;
                /*0x20*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x28*/ UnityEngine.UI.ContentSizeFitter _contentSizeFitter;
                /*0x30*/ UnityEngine.UI.VerticalLayoutGroup _verticalLayoutGroup;
                /*0x38*/ UnityEngine.UI.HorizontalLayoutGroup _horizontalLayoutGroup;
                /*0x40*/ UnityEngine.UI.GridLayoutGroup _gridLayoutGroup;
                /*0x48*/ bool _isVertical;
                /*0x49*/ bool _isHorizontal;
                /*0x4c*/ float _disableMarginX;
                /*0x50*/ float _disableMarginY;
                /*0x54*/ bool hasDisabledGridComponents;
                /*0x58*/ System.Collections.Generic.List<UnityEngine.RectTransform> items;

                /*0x10bf6d8*/ UI_ScrollRectOcclusion();
                /*0x10bebf8*/ void Awake();
                /*0x10bec08*/ void Init();
                /*0x10bf044*/ void DisableGridComponents();
                /*0x10bf2c8*/ void OnScroll(UnityEngine.Vector2 pos);
            }

            class UI_TweenScale : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.AnimationCurve animCurve;
                /*0x20*/ float speed;
                /*0x24*/ bool isLoop;
                /*0x25*/ bool playAtAwake;
                /*0x26*/ bool isUniform;
                /*0x28*/ UnityEngine.AnimationCurve animCurveY;
                /*0x30*/ UnityEngine.Vector3 initScale;
                /*0x40*/ UnityEngine.Transform myTransform;
                /*0x48*/ UnityEngine.Vector3 newScale;

                /*0x10bf8fc*/ UI_TweenScale();
                /*0x10bf750*/ void Awake();
                /*0x10bf7d4*/ void Play();
                /*0x10bf824*/ System.Collections.IEnumerator Tween();
                /*0x10bf890*/ void ResetTween();

                class <Tween>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.UI_TweenScale <>4__this;
                    /*0x28*/ float <t>5__2;
                    /*0x2c*/ float <maxT>5__3;

                    /*0xd8a4c8*/ <Tween>d__11(int <>1__state);
                    /*0xd8a4f4*/ void System.IDisposable.Dispose();
                    /*0xd8a4f8*/ bool MoveNext();
                    /*0xd8a6c4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xd8a6cc*/ void System.Collections.IEnumerator.Reset();
                    /*0xd8a70c*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class RectTransformExtension
            {
                static /*0x11c3534*/ UnityEngine.Vector2 switchToRectTransform(UnityEngine.RectTransform from, UnityEngine.RectTransform to);
            }

            class VRCursor : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float xSens;
                /*0x1c*/ float ySens;
                /*0x20*/ UnityEngine.Collider currentCollider;

                /*0x10d26d8*/ VRCursor();
                /*0x10d1fd8*/ void Update();
                /*0x10d2308*/ void OnTriggerEnter(UnityEngine.Collider other);
                /*0x10d24d8*/ void OnTriggerExit(UnityEngine.Collider other);
            }

            class VRInputModule : UnityEngine.EventSystems.BaseInputModule
            {
                static /*0x0*/ UnityEngine.GameObject targetObject;
                static /*0x8*/ UnityEngine.UI.Extensions.VRInputModule _singleton;
                static /*0x10*/ bool mouseClicked;
                static /*0x14*/ UnityEngine.Vector3 cursorPosition;

                static /*0x10d2140*/ void PointerSubmit(UnityEngine.GameObject obj);
                static /*0x10d2510*/ void PointerExit(UnityEngine.GameObject obj);
                static /*0x10d2344*/ void PointerEnter(UnityEngine.GameObject obj);
                /*0x10d27c8*/ VRInputModule();
                /*0x10d26e0*/ void Awake();
                /*0x10d2730*/ void Process();
            }

            namespace ColorPicker
            {
                class ColorImage : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Image image;

                    /*0x10dffcc*/ ColorImage();
                    /*0x10dfdfc*/ void Awake();
                    /*0x10dfee4*/ void OnDestroy();
                    /*0x10dffa8*/ void ColorChanged(UnityEngine.Color newColor);
                }

                class ColorLabel : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorValues type;
                    /*0x28*/ string prefix;
                    /*0x30*/ float minValue;
                    /*0x34*/ float maxValue;
                    /*0x38*/ int precision;
                    /*0x40*/ UnityEngine.UI.Text label;

                    /*0x10e05f0*/ ColorLabel();
                    /*0x10dffd4*/ void Awake();
                    /*0x10e0028*/ void OnEnable();
                    /*0x10e01d8*/ void OnDestroy();
                    /*0x10e037c*/ void ColorChanged(UnityEngine.Color color);
                    /*0x10e0488*/ void HSVChanged(float hue, float sateration, float value);
                    /*0x10e0380*/ void UpdateValue();
                    /*0x10e053c*/ string ConvertToDisplayString(float value);
                }

                class ColorPickerControl : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ float _hue;
                    /*0x1c*/ float _saturation;
                    /*0x20*/ float _brightness;
                    /*0x24*/ float _red;
                    /*0x28*/ float _green;
                    /*0x2c*/ float _blue;
                    /*0x30*/ float _alpha;
                    /*0x38*/ ColorChangedEvent onValueChanged;
                    /*0x40*/ HSVChangedEvent onHSVChanged;
                    /*0x48*/ bool hsvSlidersOn;
                    /*0x50*/ System.Collections.Generic.List<UnityEngine.GameObject> hsvSliders;
                    /*0x58*/ bool rgbSlidersOn;
                    /*0x60*/ System.Collections.Generic.List<UnityEngine.GameObject> rgbSliders;
                    /*0x68*/ UnityEngine.GameObject alphaSlider;

                    /*0x10e0d7c*/ ColorPickerControl();
                    /*0x10e064c*/ void SetHSVSlidersOn(bool value);
                    /*0x10e07e8*/ void SetRGBSlidersOn(bool value);
                    /*0x10e0984*/ void Update();
                    /*0x10e0988*/ UnityEngine.Color get_CurrentColor();
                    /*0x10e09c0*/ void set_CurrentColor(UnityEngine.Color value);
                    /*0x10e0b38*/ void Start();
                    /*0x10e0b3c*/ float get_H();
                    /*0x10e0b44*/ void set_H(float value);
                    /*0x10e0bcc*/ float get_S();
                    /*0x10e0bd4*/ void set_S(float value);
                    /*0x10e0c0c*/ float get_V();
                    /*0x10e0c14*/ void set_V(float value);
                    /*0x10e0c4c*/ float get_R();
                    /*0x10e0c54*/ void set_R(float value);
                    /*0x10e0c8c*/ float get_G();
                    /*0x10e0c94*/ void set_G(float value);
                    /*0x10e0ccc*/ float get_B();
                    /*0x10e0cd4*/ void set_B(float value);
                    /*0x10e0d0c*/ float get_A();
                    /*0x10e0d14*/ void set_A(float value);
                    /*0x10e0a44*/ void RGBChanged();
                    /*0x10e0b7c*/ void HSVChanged();
                    /*0x10e0aac*/ void SendChangedEvent();
                    /*0x10e0d2c*/ void AssignColor(UnityEngine.UI.Extensions.ColorPicker.ColorValues type, float value);
                    /*0x10e048c*/ float GetValue(UnityEngine.UI.Extensions.ColorPicker.ColorValues type);
                }

                class ColorPickerPresets : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.GameObject presetPrefab;
                    /*0x28*/ int maxPresets;
                    /*0x30*/ UnityEngine.Color[] predefinedPresets;
                    /*0x38*/ System.Collections.Generic.List<UnityEngine.Color> presets;
                    /*0x40*/ UnityEngine.UI.Image createPresetImage;
                    /*0x48*/ UnityEngine.Transform createButton;
                    /*0x50*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerPresets.SaveType saveMode;
                    /*0x58*/ string playerPrefsKey;

                    /*0x10e1a04*/ ColorPickerPresets();
                    /*0x10e0e84*/ string get_JsonFilePath();
                    /*0x10e0ef4*/ void Reset();
                    /*0x10e0f74*/ void Awake();
                    /*0x10e110c*/ void CreatePresetButton();
                    /*0x10e1144*/ void LoadPresets(UnityEngine.UI.Extensions.ColorPicker.ColorPickerPresets.SaveType saveType);
                    /*0x10e14a8*/ void SavePresets(UnityEngine.UI.Extensions.ColorPicker.ColorPickerPresets.SaveType saveType);
                    /*0x10e1728*/ void CreatePreset(UnityEngine.Color color, bool loading);
                    /*0x10e1934*/ void CreatePreset(UnityEngine.Color color);
                    /*0x10e1944*/ void PresetSelect(UnityEngine.UI.Image sender);
                    /*0x10e1988*/ void HSVChanged(float h, float s, float v);
                    /*0x10e19e0*/ void ColorChanged(UnityEngine.Color color);

                    enum SaveType
                    {
                        None = 0,
                        PlayerPrefs = 1,
                        JsonFile = 2,
                    }

                    class JsonColor
                    {
                        /*0x10*/ UnityEngine.Color32[] colors;

                        /*0x106f104*/ JsonColor();
                        /*0x106ef4c*/ void SetColors(UnityEngine.Color[] colorsIn);
                        /*0x106f030*/ UnityEngine.Color[] GetColors();
                    }
                }

                class ColorPickerTester : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.Renderer pickerRenderer;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;

                    /*0x10e1b9c*/ ColorPickerTester();
                    /*0x10e1a84*/ void Awake();
                    /*0x10e1ad8*/ void Start();
                    /*0x10e1ba4*/ void <Start>b__3_0(UnityEngine.Color color);
                }

                class ColorSampler : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
                {
                    /*0x18*/ UnityEngine.Vector2 m_screenPos;
                    /*0x20*/ UnityEngine.UI.Button sampler;
                    /*0x28*/ UnityEngine.RectTransform sampleRectTransform;
                    /*0x30*/ UnityEngine.UI.Outline samplerOutline;
                    /*0x38*/ UnityEngine.Texture2D screenCapture;
                    /*0x40*/ ColorChangedEvent oncolorSelected;
                    /*0x48*/ UnityEngine.Color color;

                    /*0x10e2100*/ ColorSampler();
                    /*0x10e1c00*/ void OnEnable();
                    /*0x10e1ce8*/ void OnDisable();
                    /*0x10e1dd0*/ void Update();
                    /*0x10e1ec4*/ void HandleSamplerColoring();
                    /*0x10e2038*/ void SelectColor();
                    /*0x10e20a0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                    /*0x10e20bc*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                    /*0x10e20e4*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                }

                class ColorSlider : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl ColorPicker;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorValues type;
                    /*0x28*/ UnityEngine.UI.Slider slider;
                    /*0x30*/ bool listen;

                    /*0x10e2670*/ ColorSlider();
                    /*0x10e2160*/ void Awake();
                    /*0x10e2360*/ void OnDestroy();
                    /*0x10e253c*/ void ColorChanged(UnityEngine.Color newColor);
                    /*0x10e25b8*/ void HSVChanged(float hue, float saturation, float value);
                    /*0x10e2620*/ void SliderChanged(float newValue);
                }

                class ColorSliderImage : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorValues type;
                    /*0x24*/ UnityEngine.UI.Slider.Direction direction;
                    /*0x28*/ UnityEngine.UI.RawImage image;

                    /*0x10e33ec*/ ColorSliderImage();
                    /*0x10e2680*/ UnityEngine.RectTransform get_RectTransform();
                    /*0x10e26e4*/ void Awake();
                    /*0x10e2f84*/ void OnEnable();
                    /*0x10e3134*/ void OnDisable();
                    /*0x10e32d8*/ void OnDestroy();
                    /*0x10e339c*/ void ColorChanged(UnityEngine.Color newColor);
                    /*0x10e33c4*/ void ColorChanged(float hue, float saturation, float value);
                    /*0x10e2810*/ void RegenerateTexture();
                }

                enum ColorValues
                {
                    R = 0,
                    G = 1,
                    B = 2,
                    A = 3,
                    Hue = 4,
                    Saturation = 5,
                    Value = 6,
                }

                class HSVUtil
                {
                    static /*0x10f67c8*/ UnityEngine.UI.Extensions.ColorPicker.HsvColor ConvertRgbToHsv(UnityEngine.Color color);
                    static /*0x10f6830*/ UnityEngine.UI.Extensions.ColorPicker.HsvColor ConvertRgbToHsv(double r, double b, double g);
                    static /*0x10f6984*/ UnityEngine.Color ConvertHsvToRgb(double h, double s, double v, float alpha);
                }

                struct HsvColor
                {
                    /*0x10*/ double H;
                    /*0x18*/ double S;
                    /*0x20*/ double V;

                    /*0xa826f0*/ HsvColor(double h, double s, double v);
                    /*0xa82690*/ float get_NormalizedH();
                    /*0xa826a8*/ void set_NormalizedH(float value);
                    /*0xa826c0*/ float get_NormalizedS();
                    /*0xa826cc*/ void set_NormalizedS(float value);
                    /*0xa826d8*/ float get_NormalizedV();
                    /*0xa826e4*/ void set_NormalizedV(float value);
                    /*0xa826fc*/ string ToString();
                }

                class HexColorField : UnityEngine.MonoBehaviour
                {
                    static string hexRegex = "^#?(?:[0-9a-fA-F]{3,4}){1,2}$";
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl ColorPicker;
                    /*0x20*/ bool displayAlpha;
                    /*0x28*/ UnityEngine.UI.InputField hexInputField;

                    static /*0x130a444*/ bool HexToColor(string hex, ref UnityEngine.Color32 color);
                    /*0x130a8a4*/ HexColorField();
                    /*0x1309e34*/ void Awake();
                    /*0x1309fa4*/ void OnDestroy();
                    /*0x130a0f4*/ void UpdateHex(UnityEngine.Color newColor);
                    /*0x130a380*/ void UpdateColor(string newHex);
                    /*0x130a13c*/ string ColorToHex(UnityEngine.Color32 color);
                }

                class SVBoxSlider : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Extensions.BoxSlider slider;
                    /*0x28*/ UnityEngine.UI.RawImage image;
                    /*0x30*/ float lastH;
                    /*0x34*/ bool listen;

                    /*0x129fd18*/ SVBoxSlider();
                    /*0x129f4b0*/ UnityEngine.RectTransform get_RectTransform();
                    /*0x129f514*/ void Awake();
                    /*0x129f7e4*/ void OnEnable();
                    /*0x129f994*/ void OnDisable();
                    /*0x129fb38*/ void OnDestroy();
                    /*0x129fbfc*/ void SliderChanged(float saturation, float value);
                    /*0x129fc64*/ void HSVChanged(float h, float s, float v);
                    /*0x129f590*/ void RegenerateSVTexture();
                }
            }

            namespace Tweens
            {
                struct FloatTween : UnityEngine.UI.Extensions.Tweens.ITweenValue
                {
                    /*0x10*/ float m_StartFloat;
                    /*0x14*/ float m_TargetFloat;
                    /*0x18*/ float m_Duration;
                    /*0x1c*/ bool m_IgnoreTimeScale;
                    /*0x20*/ UnityEngine.UI.Extensions.Tweens.FloatTween.FloatTweenCallback m_Target;
                    /*0x28*/ UnityEngine.UI.Extensions.Tweens.FloatTween.FloatFinishCallback m_Finish;

                    /*0xa8cf60*/ float get_startFloat();
                    /*0xa8cf68*/ void set_startFloat(float value);
                    /*0xa8cf70*/ float get_targetFloat();
                    /*0xa8cf78*/ void set_targetFloat(float value);
                    /*0xa8cf80*/ float get_duration();
                    /*0xa8cf88*/ void set_duration(float value);
                    /*0xa8cf90*/ bool get_ignoreTimeScale();
                    /*0xa8cf98*/ void set_ignoreTimeScale(bool value);
                    /*0xa8cfa4*/ void TweenValue(float floatPercentage);
                    /*0xa8cfac*/ void AddOnChangedCallback(UnityEngine.Events.UnityAction<float> callback);
                    /*0xa8cfb4*/ void AddOnFinishCallback(UnityEngine.Events.UnityAction callback);
                    /*0xa8cfbc*/ bool GetIgnoreTimescale();
                    /*0xa8cfc4*/ float GetDuration();
                    /*0xa8cfcc*/ bool ValidTarget();
                    /*0xa8cfdc*/ void Finished();

                    class FloatTweenCallback : UnityEngine.Events.UnityEvent<float>
                    {
                        /*0x10a02e0*/ FloatTweenCallback();
                    }

                    class FloatFinishCallback : UnityEngine.Events.UnityEvent
                    {
                        /*0x10a02d8*/ FloatFinishCallback();
                    }
                }

                interface ITweenValue
                {
                    void TweenValue(float floatPercentage);
                    bool get_ignoreTimeScale();
                    float get_duration();
                    bool ValidTarget();
                    void Finished();
                }

                class TweenRunner<T>
                {
                    /*0x0*/ UnityEngine.MonoBehaviour m_CoroutineContainer;
                    /*0x0*/ System.Collections.IEnumerator m_Tween;

                    static System.Collections.IEnumerator Start(T tweenInfo);
                    TweenRunner();
                    void Init(UnityEngine.MonoBehaviour coroutineContainer);
                    void StartTween(T info);

                    class <Start>d__2<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                    {
                        /*0x0*/ int <>1__state;
                        /*0x0*/ object <>2__current;
                        /*0x0*/ T tweenInfo;
                        /*0x0*/ float <elapsedTime>5__2;

                        <Start>d__2(int <>1__state);
                        void System.IDisposable.Dispose();
                        bool MoveNext();
                        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                        void System.Collections.IEnumerator.Reset();
                        object System.Collections.IEnumerator.get_Current();
                    }
                }
            }
        }
    }
}

namespace SG
{
    class PoolObject : UnityEngine.MonoBehaviour
    {
        /*0x18*/ string poolName;
        /*0x20*/ bool isPooled;

        /*0x100b42c*/ PoolObject();
    }

    enum PoolInflationType
    {
        INCREMENT = 0,
        DOUBLE = 1,
    }

    class Pool
    {
        /*0x10*/ System.Collections.Generic.Stack<SG.PoolObject> availableObjStack;
        /*0x18*/ UnityEngine.GameObject rootObj;
        /*0x20*/ SG.PoolInflationType inflationType;
        /*0x28*/ string poolName;
        /*0x30*/ int objectsInUse;

        /*0x114a1dc*/ Pool(string poolName, UnityEngine.GameObject poolObjectPrefab, UnityEngine.GameObject rootPoolObj, int initialCount, SG.PoolInflationType type);
        /*0x114a440*/ void AddObjectToPool(SG.PoolObject po);
        /*0x114a530*/ void populatePool(int initialCount);
        T NextAvailableObject<T>(bool autoActive);
        /*0x114a61c*/ void ReturnObjectToPool(SG.PoolObject po);
    }

    class InitOnStart : UnityEngine.MonoBehaviour
    {
        /*0x18*/ int totalCount;

        /*0x15733a8*/ InitOnStart();
        /*0x15731e0*/ void Start();
        /*0x15732b8*/ void HandlerProvideData(int arg1, UnityEngine.Component arg2);
        /*0x1573328*/ void OnApplicationQuit();
    }
}

namespace DefineQuest
{
    enum MoveContentsType
    {
        None = 0,
        Main = 1,
        Hero = 2,
        Friend = 3,
        Pub = 4,
        StageTower = 5,
        GeneralArena = 6,
        WorldArena = 7,
        GuildRaid = 8,
        PrizeBoard = 9,
        Heo = 10,
        Maze = 11,
        ContentShop = 12,
        ContentShop_Maze = 13,
        Resonance = 14,
        GoddessTemple = 15,
        Guild = 16,
        Bounty = 17,
        Dungeon = 18,
        Community = 19,
        Minigame = 20,
        CashShop_Star = 21,
        FactionTower = 22,
        WorldBoss = 23,
        PveRanking = 24,
        Housing = 25,
        Ability = 26,
        EventBoss = 27,
        URL = 0,
    }

    enum StageIdleType
    {
        All = 0,
        Idle = 1,
        Instance = 2,
    }

    enum StageTryType
    {
        Stage = 0,
        StageTower = 1,
    }

    enum HeroUpgradeKind
    {
        Level = 0,
        Enhance = 1,
    }

    enum UpgradeGroup
    {
        All = 0,
        Grade = 1,
    }

    enum FriendPointKind
    {
        Send = 0,
        Reception = 1,
    }

    enum PrizeBoardKind
    {
        Single = 0,
        Collaboration = 1,
    }

    enum ShopGroupType
    {
        All = 0,
        Content = 1,
        Guild = 2,
        Labyrinth = 3,
    }

    enum ArenaKind
    {
        Arena = 0,
        WorldArena = 1,
    }

    enum ArenaCountType
    {
        Win = 0,
        Point = 1,
    }

    enum HeroGetGroupType
    {
        All = 0,
        Faction = 1,
        Grade = 2,
    }

    enum LevelGroupType
    {
        Account = 0,
        Character = 1,
    }

    enum GetContentType
    {
        All = 0,
        Stage = 1,
        StageIdle = 2,
    }

    enum MoveGroupType
    {
        Site = 0,
        Content = 1,
    }

    enum ResonanceGroupType
    {
        Slot = 0,
        Level = 1,
    }
}

namespace ServerProtocol
{
    class IRequestCommon
    {
        /*0x10*/ string token;

        /*0xd207f8*/ IRequestCommon();
    }

    class IResponseCommon
    {
        /*0x10*/ int result;

        /*0xd20800*/ IResponseCommon();
    }

    class IResponseCommonV2 : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string table;

        /*0xd20808*/ IResponseCommonV2();
    }

    class IResponseCommonV3 : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xd20810*/ IResponseCommonV3();
    }

    enum ProtocolType
    {
        None = 0,
        Ability = 1,
        Account = 2,
        AD = 3,
        Admin = 4,
        Arena = 5,
        Attic = 6,
        Balance = 7,
        Board = 8,
        Bounty = 9,
        Campaign = 10,
        CashShop = 11,
        ContentShop = 12,
        CurrencyShop = 13,
        Dungeon = 14,
        Equip = 15,
        Event = 16,
        Friend = 17,
        Gacha = 18,
        Gate = 19,
        Growth = 20,
        Guild = 21,
        GuildWar = 22,
        HardCampaign = 23,
        Hero = 24,
        Housing = 25,
        HousingObj = 26,
        Item = 27,
        Mail = 28,
        Manufacture = 29,
        Maze = 30,
        Mercenary = 31,
        Mission = 32,
        PveRanking = 33,
        Quest = 34,
        Race = 35,
        Relation = 36,
        Resonance = 37,
        RunGame = 38,
        Skin = 39,
        Tower = 40,
        Troop = 41,
        WorldArena = 42,
        WorldBoss = 43,
        End = 44,
    }

    enum ProtocolSubType
    {
        None = 0,
        AcceptReq = 1,
        AcceptReqAll = 2,
        Activate = 3,
        AllPoint = 4,
        ArtifactEquip = 5,
        ArtifactReinforce = 6,
        ArtifactSwap = 7,
        ArtifactUnequip = 8,
        Assign = 9,
        Attach = 10,
        AttendReward = 11,
        AutoEquip = 12,
        Begin = 13,
        Blacklist = 14,
        BlacklistRemove = 15,
        Blacks = 16,
        BookReward = 17,
        BossHistory = 18,
        BossOpen = 19,
        Buddy = 20,
        BuffReset = 21,
        Buy = 22,
        BuyFactionPool = 23,
        BuyTactic = 24,
        Campaign = 25,
        CancelQuit = 26,
        Check = 27,
        Choice = 28,
        Claim = 29,
        Clean = 30,
        ClearEnd = 31,
        ClearStart = 32,
        CoinReward = 33,
        Commit = 34,
        CommitWishList = 35,
        Complete = 36,
        Confirm = 37,
        ConfirmFactionBonus = 38,
        Console = 39,
        Contribution = 40,
        Coupon = 41,
        Create = 42,
        CurrencyRoll = 43,
        Data = 44,
        Deck = 45,
        Delete = 46,
        DenyReq = 47,
        DenyReqAll = 48,
        Detach = 49,
        Detail = 50,
        Devolve = 51,
        Dice = 52,
        Dismiss = 53,
        Dispatch = 54,
        Enter = 55,
        Equip = 56,
        Exchange = 57,
        ExploreCancel = 58,
        ExploreContinue = 59,
        ExploreStart = 60,
        Export = 61,
        ExtendSlot = 62,
        FastOpen = 63,
        FinalReward = 64,
        Finish = 65,
        First = 66,
        Form = 67,
        FormDetail = 68,
        FreeRoll = 69,
        FreeRoulette = 70,
        Friends = 71,
        GuildRanking = 72,
        HardCampaign = 73,
        Heal = 74,
        Heroes = 75,
        HeroPoint = 76,
        History = 77,
        Idle = 78,
        Import = 79,
        Inbox = 80,
        Info = 81,
        Init = 82,
        Insert = 83,
        Instant = 84,
        Inven = 85,
        Item = 86,
        ItemRoll = 87,
        Jail = 88,
        Kick = 89,
        Language = 90,
        Leave = 91,
        Lend = 92,
        LendDeny = 93,
        LendDenyAll = 94,
        LendFast = 95,
        LendList = 96,
        LevelUp = 97,
        Like = 98,
        List = 99,
        Load = 100,
        Localize = 101,
        Lock = 102,
        Login = 103,
        Logout = 104,
        Main = 105,
        Make = 106,
        Mate = 107,
        MateReset = 108,
        Member = 109,
        MopUp = 110,
        Move = 111,
        MoveArea = 112,
        MyFormHero = 113,
        New = 114,
        NextChapter = 115,
        Notice = 116,
        Office = 117,
        Open = 118,
        OpenEnd = 119,
        OpenStart = 120,
        Others = 121,
        Participate = 122,
        PassRefresh = 123,
        PassReward = 124,
        Players = 125,
        Pop = 126,
        PreviewIdle = 127,
        Progress = 128,
        Promote = 129,
        PromoteMulti = 130,
        Purchase = 131,
        Push = 132,
        Quit = 133,
        Rank = 134,
        Ranking = 135,
        Receive = 136,
        ReceiveAll = 137,
        Recommend = 138,
        Refresh = 139,
        Reinforce = 140,
        ReleaseSupporter = 141,
        Remove = 142,
        RemoveAll = 143,
        Rent = 144,
        RentCancel = 145,
        RentList = 146,
        RentReturn = 147,
        Replay = 148,
        Requestors = 149,
        Reset = 150,
        ResetFactionBonus = 151,
        Revert = 152,
        Revival = 153,
        Reward = 154,
        RewardList = 155,
        Roll = 156,
        Roulette = 157,
        Save = 158,
        SaveList = 159,
        SaveName = 160,
        Search = 161,
        Sell = 162,
        SendPoint = 163,
        SendReq = 164,
        SetAuth = 165,
        SetAutoDismiss = 166,
        SetCamp = 167,
        SetCaptain = 168,
        SetForm = 169,
        SetParticipate = 170,
        SetPosition = 171,
        SetSupporter = 172,
        Signature = 173,
        Sparring = 174,
        Supporter = 175,
        Take = 176,
        TakeAll = 177,
        TakeMain = 178,
        TakePoint = 179,
        TakeReward = 180,
        Ticket = 181,
        TopFive = 182,
        Tower = 183,
        Training = 184,
        Transcend = 185,
        Tutorial = 186,
        Unequip = 187,
        UnequipAll = 188,
        Unlock = 189,
        UnsetForm = 190,
        Update = 191,
        UpdateAttend = 192,
        UpdateDeck = 193,
        UpdateHeroes = 194,
        UpdateInfo = 195,
        UpdateName = 196,
        UpdateNickName = 197,
        UpdateOrder = 198,
        UpdateProfile = 199,
        Upgrade = 200,
        Use = 201,
        VerifyBegin = 202,
        VerifyFinish = 203,
        View = 204,
        VIPReward = 205,
        Visit = 206,
        VisitSite = 207,
        Vote = 208,
        Wagon = 209,
        Wall = 210,
        Zone = 211,
    }

    class ReqAccountLogin
    {
        /*0x10*/ string ip;
        /*0x18*/ string guestid;
        /*0x20*/ string firebasetoken;
        /*0x28*/ string pushtoken;
        /*0x30*/ int billingtype;

        /*0xf1fcf8*/ ReqAccountLogin(string ip, string guestid, string firebasetoken, string pushtoken, int billingtype);
    }

    class ResAccountLogin : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.DateTime now;

        /*0xf24838*/ ResAccountLogin();
    }

    class ResAccountLogin_Normal : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ string token;
        /*0x28*/ string chatip;
        /*0x30*/ long exp;
        /*0x38*/ int vippoint;
        /*0x3c*/ int campaignchapter;
        /*0x40*/ int hcampaignchapter;
        /*0x48*/ System.Collections.Generic.List<int> towerfloors;
        /*0x50*/ bool admin;
        /*0x54*/ int guildid;
        /*0x58*/ string guildname;
        /*0x60*/ PTShare.Define.SCurrency currency;
        /*0x68*/ System.DateTime lastidle;
        /*0x70*/ int heroslot;
        /*0x78*/ string language;
        /*0x80*/ long tutorial;
        /*0x88*/ PTShare.Define.SPlayer basic;
        /*0x90*/ string message;
        /*0x98*/ System.Collections.Generic.List<PTShare.Define.SPass> passs;
        /*0xa0*/ bool olduser;
        /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SImageBanner> ibanners;
        /*0xb0*/ System.Collections.Generic.List<PTShare.Define.SNotice> notices;

        /*0xf24848*/ ResAccountLogin_Normal();
    }

    class ResAccountLogin_Ban : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ System.DateTime endtime;
        /*0x28*/ string reason;

        /*0xf24840*/ ResAccountLogin_Ban();
    }

    class ResAccountLogin_Quitting : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ System.DateTime realquittime;

        /*0xf24850*/ ResAccountLogin_Quitting();
    }

    class ResAccountLogin_ServerStop : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ System.DateTime stopendplan;

        /*0xf24858*/ ResAccountLogin_ServerStop();
    }

    class ReqAccountAttach : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string firebasetoken;

        /*0xf1fb48*/ ReqAccountAttach(string token, string firebasetoken);
    }

    class ResAccountAttach : ServerProtocol.IResponseCommon
    {
        /*0xf24800*/ ResAccountAttach();
    }

    class ReqAccountDetach : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string guestid;

        /*0xf1fbb8*/ ReqAccountDetach(string token, string guestid);
    }

    class ResAccountDetach : ServerProtocol.IResponseCommon
    {
        /*0xf24810*/ ResAccountDetach();
    }

    class ReqAccountLogout : ServerProtocol.IRequestCommon
    {
        /*0xf1fd4c*/ ReqAccountLogout();
    }

    class ResAccountLogout : ServerProtocol.IResponseCommon
    {
        /*0xf24860*/ ResAccountLogout();
    }

    class ReqAccountLanguage : ServerProtocol.IRequestCommon
    {
        /*0xf1fccc*/ ReqAccountLanguage(string token);
    }

    class ResAccountLanguage : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int channel;
        /*0x24*/ int maxchannel;

        /*0xf24830*/ ResAccountLanguage();
    }

    class ReqAccountPlayers : ServerProtocol.IRequestCommon
    {
        /*0xf1fde8*/ ReqAccountPlayers(string token);
    }

    class ResAccountPlayers : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int maxarea;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> list;

        /*0xf24880*/ ResAccountPlayers();
    }

    class ReqAccountMoveArea : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int area;

        /*0xf1fd54*/ ReqAccountMoveArea(string token, int area);
    }

    class ResAccountMoveArea : ServerProtocol.IResponseCommon
    {
        /*0xf24868*/ ResAccountMoveArea();
    }

    class ReqAccountNew : ServerProtocol.IRequestCommon
    {
        /*0xf1fd90*/ ReqAccountNew(string token);
    }

    class ResAccountNew : ServerProtocol.IResponseCommon
    {
        /*0x14*/ bool newmail;
        /*0x15*/ bool newfriend;
        /*0x16*/ bool newbook;
        /*0x17*/ bool newboard;
        /*0x18*/ bool newquest;
        /*0x19*/ bool newcashshop;
        /*0x1a*/ bool newnotice;
        /*0x1b*/ bool newbounty;
        /*0x1c*/ bool newguild;
        /*0x1d*/ bool newrace;
        /*0x20*/ System.Collections.Generic.List<int> newworldbossidxs;
        /*0x28*/ bool newlike;

        /*0xf24870*/ ResAccountNew();
    }

    class ReqAccountFirst : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string battlever;

        /*0xf1fc54*/ ReqAccountFirst(string token, string battlever);
    }

    class ResAccountFirst : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SEquip> equiplist;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> herolist;
        /*0x40*/ int resonancelv;
        /*0x44*/ int fastidle;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SBook> booklist;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRented> rentedlist;
        /*0x58*/ PTShare.Define.SModeCount usemercenary;
        /*0x60*/ System.Collections.Generic.List<PTShare.Define.SPassReward> passrewards;
        /*0x68*/ System.Collections.Generic.List<PTShare.Define.SGoods> products;
        /*0x70*/ System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> subscripts;
        /*0x78*/ System.Collections.Generic.List<string> firsts;
        /*0x80*/ System.Collections.Generic.List<string> stores;
        /*0x88*/ System.Collections.Generic.List<PTShare.Define.SEventExchange> exchanges;
        /*0x90*/ bool nickfree;
        /*0x98*/ System.DateTime beginnerend;
        /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SInstant> instants;
        /*0xa8*/ System.Collections.Generic.List<int> arenaheroids;
        /*0xb0*/ System.Collections.Generic.List<int> worldarenaheroids;
        /*0xb8*/ System.Collections.Generic.List<int> worldarenaheroblinds;
        /*0xc0*/ int warheroid;
        /*0xc8*/ long highestcp;
        /*0xd0*/ System.Collections.Generic.List<long> blackids;
        /*0xd8*/ System.Collections.Generic.List<int> viprewardlvs;
        /*0xe0*/ PTShare.Define.SStatBonus statbonus;
        /*0xe8*/ System.Collections.Generic.List<string> wishlist;
        /*0xf0*/ System.Collections.Generic.List<PTShare.Define.SRelation> relations;
        /*0xf8*/ bool purchaseoff;
        /*0x100*/ System.Collections.Generic.List<PTShare.Define.SArtifact> artifacts;
        /*0x108*/ System.Collections.Generic.List<PTShare.Define.SSkin> skins;
        /*0x110*/ System.Collections.Generic.List<PTShare.Define.SSkin> equipskins;
        /*0x118*/ PTShare.Define.SDefeat defeat;
        /*0x120*/ System.Collections.Generic.List<int> towergoups;
        /*0x128*/ int arenawincount;
        /*0x130*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> frames;
        /*0x138*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> backgrounds;
        /*0x140*/ bool unlimitresonance;
        /*0x144*/ int resonancecount;
        /*0x148*/ System.Collections.Generic.List<int> attackwbossindices;
        /*0x150*/ int luckyhero;
        /*0x158*/ System.Collections.Generic.List<int> rungameamounts;
        /*0x160*/ System.Collections.Generic.List<PTShare.Define.SRunHero> runheroes;
        /*0x168*/ int housingopenfloor;
        /*0x170*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> housingobjs;
        /*0x178*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;
        /*0x180*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> housingheroes;
        /*0x188*/ int todaylikesend;
        /*0x18c*/ int todaylikerecv;
        /*0x190*/ long acclikerecv;
        /*0x198*/ System.Collections.Generic.List<PTShare.Define.SHousingGoods> housingproducts;
        /*0x1a0*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x1a8*/ string housinggroup;
        /*0x1b0*/ System.DateTime housingfloortime;
        /*0x1b8*/ int freeability;
        /*0x1c0*/ System.Collections.Generic.List<PTShare.Define.SAbilityGroup> abilities;
        /*0x1c8*/ System.Collections.Generic.List<PTShare.Define.SEventBoss> evtbosses;
        /*0x1d0*/ int evrolettefree;
        /*0x1d8*/ System.Collections.Generic.List<int> autodismiss;
        /*0x1e0*/ System.Collections.Generic.List<string> ads;

        /*0xf24820*/ ResAccountFirst();
    }

    class ReqUpdateNickname : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string nickname;

        /*0xf23b88*/ ReqUpdateNickname(string token, string nickname);
    }

    class ResUpdateNickname : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SCurrency currency;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf2523c*/ ResUpdateNickname();
    }

    class ReqUpdateProfile : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string profileids;
        /*0x20*/ int gender;
        /*0x28*/ string message;
        /*0x30*/ string language;

        /*0xf23bc0*/ ReqUpdateProfile(string token, string profileids, int gender, string message, string language);
    }

    class ResUpdateProfile : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.Dictionary<string, string> communityurl;

        /*0xf25244*/ ResUpdateProfile();
    }

    class ReqAccountDetail : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long targetid;
        /*0x20*/ string campaign;
        /*0x28*/ int faction;
        /*0x2c*/ int floor;
        /*0x30*/ int arena;

        /*0xf1fbf0*/ ReqAccountDetail(string token, long targetid, string campaign, int faction, int floor, int arena);
    }

    class ResAccountDetail : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SPlayer basic;
        /*0x20*/ string message;
        /*0x28*/ int relation;
        /*0x2c*/ int position;
        /*0x30*/ string guildname;
        /*0x38*/ string lang;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SHero> mainforce;
        /*0x48*/ PTShare.Define.SStatBonus statbonus;
        /*0x50*/ PTShare.Define.SDeck deck;
        /*0x58*/ long acclikerecv;

        /*0xf24818*/ ResAccountDetail();
    }

    class ReqAccountQuit : ServerProtocol.IRequestCommon
    {
        /*0xf1fe40*/ ReqAccountQuit(string token);
    }

    class ResAccountQuit : ServerProtocol.IResponseCommon
    {
        /*0xf24890*/ ResAccountQuit();
    }

    class ReqAccountCancelQuit
    {
        /*0x10*/ string guestid;
        /*0x18*/ string firebasetoken;

        /*0xf1fb80*/ ReqAccountCancelQuit(string guestid, string firebasetoken);
    }

    class ResAccountCancelQuit : ServerProtocol.IResponseCommon
    {
        /*0xf24808*/ ResAccountCancelQuit();
    }

    class ReqAccountPreviewIdle : ServerProtocol.IRequestCommon
    {
        /*0xf1fe14*/ ReqAccountPreviewIdle(string token);
    }

    class ResAccountPreviewIdle : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;

        /*0xf24888*/ ResAccountPreviewIdle();
    }

    class ReqAccountIdle : ServerProtocol.IRequestCommon
    {
        /*0x18*/ bool fast;

        /*0xf1fc8c*/ ReqAccountIdle(string token, bool fast);
    }

    class ResAccountIdle : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.DateTime lastidle;
        /*0x38*/ int fastidle;
        /*0x40*/ PTShare.Define.SProperty gain;
        /*0x48*/ PTShare.Define.SProperty levelupgain;

        /*0xf24828*/ ResAccountIdle();
    }

    class ReqAccountNotice : ServerProtocol.IRequestCommon
    {
        /*0xf1fdbc*/ ReqAccountNotice(string token);
    }

    class ResAccountNotice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SNotice> notices;

        /*0xf24878*/ ResAccountNotice();
    }

    class ReqAccountTutorial : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long tutorial;

        /*0xf1fe6c*/ ReqAccountTutorial(string token, long tutorial);
    }

    class ResAccountTutorial : ServerProtocol.IResponseCommon
    {
        /*0xf24898*/ ResAccountTutorial();
    }

    class ReqAccountUpdateAttend : ServerProtocol.IRequestCommon
    {
        /*0xf1fea4*/ ReqAccountUpdateAttend(string token);
    }

    class ResAccountUpdateAttend : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SAttend> attends;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SAttendReward> attendrewards;

        /*0xf248a0*/ ResAccountUpdateAttend();
    }

    class ReqADFinalReward : ServerProtocol.IRequestCommon
    {
        /*0xf1fa14*/ ReqADFinalReward(string token);
    }

    class ResADFinalReward : ServerProtocol.IResponseCommonV3
    {
        /*0xf247d8*/ ResADFinalReward();
    }

    class ReqAdminConsole : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string input;

        /*0xf1fed0*/ ReqAdminConsole(string token, string input);
    }

    class ResAdminConsole : ServerProtocol.IResponseCommon
    {
        /*0x14*/ bool apply;
        /*0x18*/ string output;
        /*0x20*/ string key;
        /*0x28*/ System.DateTime arg0;
        /*0x30*/ string arg1;
        /*0x38*/ int arg2;

        /*0xf248a8*/ ResAdminConsole();
    }

    class ReqAdminExport : ServerProtocol.IRequestCommon
    {
        /*0xf1ff08*/ ReqAdminExport(string token);
    }

    class ReqAdminImport : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string file;

        /*0xf1ff34*/ ReqAdminImport(string token, string file);
    }

    class ResAdminImport : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string output;

        /*0xf248b0*/ ResAdminImport();
    }

    class ReqAdminVerifyBegin : ServerProtocol.IRequestCommon
    {
        /*0xf1ff6c*/ ReqAdminVerifyBegin(string token);
    }

    class ResAdminVerifyBegin : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SReplay> replays;

        /*0xf248b8*/ ResAdminVerifyBegin();
    }

    class ReqAdminVerifyFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;
        /*0x20*/ int score;

        /*0xf1ff98*/ ReqAdminVerifyFinish(string token, string replayid, int score);
    }

    class ResAdminVerifyFinish : ServerProtocol.IResponseCommon
    {
        /*0xf248c0*/ ResAdminVerifyFinish();
    }

    class ReqArenaMain : ServerProtocol.IRequestCommon
    {
        /*0xf200dc*/ ReqArenaMain(string token);
    }

    class ResArenaMain : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int rank;
        /*0x24*/ int tier;
        /*0x28*/ int worldrank;

        /*0xf248e8*/ ResArenaMain();
    }

    class ReqArenaEnter : ServerProtocol.IRequestCommon
    {
        /*0xf20014*/ ReqArenaEnter(string token);
    }

    class ResArenaEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int mypoint;
        /*0x30*/ long mycp;
        /*0x38*/ int arenafree;
        /*0x3c*/ int rewardindex;

        /*0xf248d0*/ ResArenaEnter();
    }

    class ReqArenaUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf20170*/ ReqArenaUpdateDeck(string token, string heroids);
    }

    class ResArenaUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0xf24908*/ ResArenaUpdateDeck();
    }

    class ReqArenaTicket : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf20134*/ ReqArenaTicket(string token, int count);
    }

    class ResArenaTicket : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24900*/ ResArenaTicket();
    }

    class ReqArenaSearch : ServerProtocol.IRequestCommon
    {
        /*0xf20108*/ ReqArenaSearch(string token);
    }

    class ResArenaSearch : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> targets;

        /*0xf248f8*/ ResArenaSearch();
    }

    class ReqArenaHistory : ServerProtocol.IRequestCommon
    {
        /*0xf200b0*/ ReqArenaHistory(string token);
    }

    class ResArenaHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> histories;

        /*0xf248e0*/ ResArenaHistory();
    }

    class ReqArenaChoice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int seqid;

        /*0xf1ffd8*/ ReqArenaChoice(string token, int seqid);
    }

    class ResArenaChoice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ PTShare.Define.SBattleSide side;

        /*0xf248c8*/ ResArenaChoice();
    }

    class ReqArenaFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ long rcp;
        /*0x28*/ string statistics;
        /*0x30*/ string heroids;
        /*0x38*/ bool win;
        /*0x40*/ string hpmps;

        /*0xf20040*/ ReqArenaFinish(string token, long lcp, long rcp, string statistics, string heroids, bool win, string hpmps);
    }

    class ResArenaFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int myrank;
        /*0x34*/ int myrankmove;
        /*0x38*/ int myscore_before;
        /*0x3c*/ int myscore_after;
        /*0x40*/ int vsscore_before;
        /*0x44*/ int vsscore_after;

        /*0xf248d8*/ ResArenaFinish();
    }

    class ReqArenaReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf1f570*/ ReqArenaReplay(string token, string replayid);
    }

    class ResArenaReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SArenaReplay replay;

        /*0xf248f0*/ ResArenaReplay();
    }

    class ReqBalanceData
    {
        /*0x10*/ string md5;

        /*0xf20224*/ ReqBalanceData(string md5);
    }

    class ReqBalanceLocalize
    {
        /*0x10*/ string code;

        /*0xf20250*/ ReqBalanceLocalize(string code);
    }

    class ReqBoardEnter : ServerProtocol.IRequestCommon
    {
        /*0xf202a8*/ ReqBoardEnter(string token);
    }

    class ResBoardEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newcampaign;
        /*0x21*/ bool newhcampaign;
        /*0x22*/ bool newtower;
        /*0x28*/ System.Collections.Generic.List<bool> newfactions;
        /*0x30*/ PTShare.Define.SBoardCampaignRanker campaign1st;
        /*0x38*/ PTShare.Define.SBoardCampaignRanker hardcampaign1st;
        /*0x40*/ PTShare.Define.SBoardTowerRanker tower1st;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> faction1sts;

        /*0xf24928*/ ResBoardEnter();
    }

    class ReqBoardCampaign : ServerProtocol.IRequestCommon
    {
        /*0xf2027c*/ ReqBoardCampaign(string token);
    }

    class ResBoardCampaign : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ string mycampaign;

        /*0xf24920*/ ResBoardCampaign();
    }

    class ReqBoardTower : ServerProtocol.IRequestCommon
    {
        /*0xf203b8*/ ReqBoardTower(string token);
    }

    class ResBoardTower : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myfloor;

        /*0xf24950*/ ResBoardTower();
    }

    class ReqBoardHardCampaign : ServerProtocol.IRequestCommon
    {
        /*0xf202d4*/ ReqBoardHardCampaign(string token);
    }

    class ResBoardHardCampaign : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ string mycampaign;

        /*0xf24930*/ ResBoardHardCampaign();
    }

    class ReqBoardHeroPoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int faction;

        /*0xf20300*/ ReqBoardHeroPoint(string token, int faction);
    }

    class ResBoardHeroPoint : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int mypoint;

        /*0xf24938*/ ResBoardHeroPoint();
    }

    class ReqBoardRewardList : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf2033c*/ ReqBoardRewardList(string token, int type);
    }

    class ResBoardRewardList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardQuest> list;

        /*0xf24940*/ ResBoardRewardList();
    }

    class ReqBoardTakeReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x1c*/ int index;

        /*0xf20378*/ ReqBoardTakeReward(string token, int type, int index);
    }

    class ResBoardTakeReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;

        /*0xf24948*/ ResBoardTakeReward();
    }

    class ReqBountyEnter : ServerProtocol.IRequestCommon
    {
        /*0xf20424*/ ReqBountyEnter(string token);
    }

    class ResBountyEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int level;
        /*0x24*/ int solocount;
        /*0x28*/ int teamcount;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SBountyQuest> quests;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> supporters;

        /*0xf24960*/ ResBountyEnter();
    }

    class ReqBountyDispatch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string ids;
        /*0x20*/ string heroids;

        /*0xf203e4*/ ReqBountyDispatch(string token, string ids, string heroids);
    }

    class ResBountyDispatch : ServerProtocol.IResponseCommonV2
    {
        /*0xf24958*/ ResBountyDispatch();
    }

    class ReqBountyReceive : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int id;

        /*0xf20450*/ ReqBountyReceive(string token, int id);
    }

    class ResBountyReceive : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ bool levelup;
        /*0x34*/ int level;
        /*0x38*/ int solocount;
        /*0x3c*/ int teamcount;
        /*0x40*/ PTShare.Define.SProperty gain;

        /*0xf24968*/ ResBountyReceive();
    }

    class ReqBountyReceiveAll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf2048c*/ ReqBountyReceiveAll(string token, int type);
    }

    class ResBountyReceiveAll : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ bool levelup;
        /*0x34*/ int level;
        /*0x38*/ int solocount;
        /*0x3c*/ int teamcount;
        /*0x40*/ PTShare.Define.SProperty gain;
        /*0x48*/ System.Collections.Generic.List<int> recvedids;

        /*0xf24970*/ ResBountyReceiveAll();
    }

    class ReqBountyReset : ServerProtocol.IRequestCommon
    {
        /*0xf20504*/ ReqBountyReset(string token);
    }

    class ResBountyReset : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBountyQuest> quests;

        /*0xf24980*/ ResBountyReset();
    }

    class ReqBountySupporter : ServerProtocol.IRequestCommon
    {
        /*0xf2056c*/ ReqBountySupporter(string token);
    }

    class ResBountySupporter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> supporters;

        /*0xf24990*/ ResBountySupporter();
    }

    class ReqBountySetSupporter : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf20530*/ ReqBountySetSupporter(string token, int heroid);
    }

    class ResBountySetSupporter : ServerProtocol.IResponseCommonV2
    {
        /*0xf24988*/ ResBountySetSupporter();
    }

    class ReqBountyReleaseSupporter : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf204c8*/ ReqBountyReleaseSupporter(string token, int heroid);
    }

    class ResBountyReleaseSupporter : ServerProtocol.IResponseCommonV2
    {
        /*0xf24978*/ ResBountyReleaseSupporter();
    }

    class ReqCampaignBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf20598*/ ReqCampaignBegin(string token, string heroids);
    }

    class ResCampaignBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;
        /*0x40*/ string campaign;

        /*0xf24998*/ ResCampaignBegin();
    }

    class ReqCampaignFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf205fc*/ ReqCampaignFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResCampaignFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ string campaign;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SProperty lvupreward;
        /*0x38*/ PTShare.Define.SCurrency currency;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x48*/ PTShare.Define.SPass newpass;
        /*0x50*/ PTShare.Define.SModeCount usemercenary;

        /*0xf249a8*/ ResCampaignFinish();
    }

    class ReqCampaignNextChapter : ServerProtocol.IRequestCommon
    {
        /*0xf20688*/ ReqCampaignNextChapter(string token);
    }

    class ResCampaignNextChapter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int oldchapter;
        /*0x24*/ int newchapter;

        /*0xf249b8*/ ResCampaignNextChapter();
    }

    class ReqCampaignInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;

        /*0xf20650*/ ReqCampaignInfo(string token, string campaign);
    }

    class ResCampaignInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> infos;

        /*0xf249b0*/ ResCampaignInfo();
    }

    class ReqCampaignReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;
        /*0x20*/ long playerid;

        /*0xf1f4dc*/ ReqCampaignReplay(string token, string campaign, long playerid);
    }

    class ResCampaignReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCampaignReplay replay;

        /*0xf249c0*/ ResCampaignReplay();
    }

    class ReqCampaignBuddy : ServerProtocol.IRequestCommon
    {
        /*0xf205d0*/ ReqCampaignBuddy(string token);
    }

    class ResCampaignBuddy : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> people;

        /*0xf249a0*/ ResCampaignBuddy();
    }

    class ReqCashShopClaim : ServerProtocol.IRequestCommon
    {
        /*0xf206f4*/ ReqCashShopClaim(string token);
    }

    class ResCashShopClaim : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newrecv;

        /*0xf249d0*/ ResCashShopClaim();
    }

    class ReqCashShopCheck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string packageid;
        /*0x20*/ string selectarg;

        /*0xf206b4*/ ReqCashShopCheck(string token, string packageid, string selectarg);
    }

    class ResCashShopCheck : ServerProtocol.IResponseCommon
    {
        /*0xf249c8*/ ResCashShopCheck();
    }

    class ReqCashShopPurchase : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string packageid;
        /*0x20*/ int type;
        /*0x28*/ string purchasetoken;

        /*0xf20758*/ ReqCashShopPurchase(string token, string packageid, int type, string purchasetoken);
    }

    class ResCashShopPurchase : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string packageid;
        /*0x20*/ int vippoint;
        /*0x24*/ int premiumid;

        /*0xf249e0*/ ResCashShopPurchase();
    }

    class ReqCashShopVIPReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int viplevel;

        /*0xf207a8*/ ReqCashShopVIPReward(string token, int viplevel);
    }

    class ResCashShopVIPReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf249e8*/ ResCashShopVIPReward();
    }

    class ReqCashShopInstant : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string trigger;

        /*0xf20720*/ ReqCashShopInstant(string token, string trigger);
    }

    class ResCashShopInstant : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int index;
        /*0x28*/ System.DateTime expire;

        /*0xf249d8*/ ResCashShopInstant();
    }

    class ReqContentShopEnter : ServerProtocol.IRequestCommon
    {
        /*0xf207e4*/ ReqContentShopEnter(string token);
    }

    class ResContentShopEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SContentShopReset> resetcnts;
        /*0x28*/ System.Collections.Generic.List<string> goods;

        /*0xf249f0*/ ResContentShopEnter();
    }

    class ReqContentShopPurchase : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf20810*/ ReqContentShopPurchase(string token, int index);
    }

    class ResContentShopPurchase : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int newequipid;
        /*0x34*/ int newbonusid;

        /*0xf249f8*/ ResContentShopPurchase();
    }

    class ReqContentShopReset : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf2084c*/ ReqContentShopReset(string token, int index);
    }

    class ResContentShopReset : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SCurrency currency;
        /*0x20*/ System.Collections.Generic.List<string> goods;

        /*0xf24a00*/ ResContentShopReset();
    }

    class ReqDungeonEnter : ServerProtocol.IRequestCommon
    {
        /*0xf20928*/ ReqDungeonEnter(string token);
    }

    class ResDungeonEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int playingid;
        /*0x24*/ float progress;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SDungeon> unlocks;

        /*0xf24a20*/ ResDungeonEnter();
    }

    class ReqDungeonExploreStart : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int id;

        /*0xf209ac*/ ReqDungeonExploreStart(string token, int id);
    }

    class ResDungeonExploreStart : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.Dictionary<string, int> randomtileids;

        /*0xf24a38*/ ResDungeonExploreStart();
    }

    class ReqDungeonExploreContinue : ServerProtocol.IRequestCommon
    {
        /*0xf20980*/ ReqDungeonExploreContinue(string token);
    }

    class ResDungeonExploreContinue : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SDungeonPlay play;

        /*0xf24a30*/ ResDungeonExploreContinue();
    }

    class ReqDungeonExploreCancel : ServerProtocol.IRequestCommon
    {
        /*0xf20954*/ ReqDungeonExploreCancel(string token);
    }

    class ResDungeonExploreCancel : ServerProtocol.IResponseCommonV2
    {
        /*0xf24a28*/ ResDungeonExploreCancel();
    }

    class ReqDungeonMove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string way;

        /*0xf20ad4*/ ReqDungeonMove(string token, string way);
    }

    class ResDungeonMove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int posx;
        /*0x24*/ int posy;
        /*0x28*/ float progress;
        /*0x30*/ string forceway;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf24a70*/ ResDungeonMove();
    }

    class ResDungeonMove_Battle : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
        /*0x48*/ PTShare.Define.SProperty battlereward;

        /*0xf24a78*/ ResDungeonMove_Battle();
    }

    class ResDungeonMove_Jail : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int heroid;

        /*0xf24ac0*/ ResDungeonMove_Jail();
    }

    class ResDungeonMove_Escape : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int hammer;

        /*0xf24ab0*/ ResDungeonMove_Escape();
    }

    class ResDungeonMove_Bomb : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int bombcount;

        /*0xf24a80*/ ResDungeonMove_Bomb();
    }

    class ResDungeonMove_BombClear : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ string cleartile;

        /*0xf24a88*/ ResDungeonMove_BombClear();
    }

    class ResDungeonMove_BuffReset : ServerProtocol.ResDungeonMove
    {
        /*0xf24a98*/ ResDungeonMove_BuffReset();
    }

    class ResDungeonMove_Buff : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int addatk;
        /*0x44*/ int adddef;
        /*0x48*/ PTShare.Define.SDungeonBuff buff;

        /*0xf24a90*/ ResDungeonMove_Buff();
    }

    class ResDungeonMove_Debuff : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int subatk;
        /*0x44*/ int subdef;
        /*0x48*/ PTShare.Define.SDungeonBuff buff;

        /*0xf24aa8*/ ResDungeonMove_Debuff();
    }

    class ResDungeonMove_RandomReward : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ PTShare.Define.SCurrency currency;
        /*0x48*/ int makegold;
        /*0x4c*/ int makehexp;
        /*0x50*/ PTShare.Define.SProperty reward;

        /*0xf24ad0*/ ResDungeonMove_RandomReward();
    }

    class ResDungeonMove_ConditionReward : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ PTShare.Define.SCurrency currency;
        /*0x48*/ bool achieve;
        /*0x50*/ PTShare.Define.SProperty reward;
        /*0x58*/ int score;
        /*0x5c*/ int goalscore;

        /*0xf24aa0*/ ResDungeonMove_ConditionReward();
    }

    class ResDungeonMove_Trap : ServerProtocol.ResDungeonMove
    {
        /*0xf24ad8*/ ResDungeonMove_Trap();
    }

    class ResDungeonMove_Mate : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;

        /*0xf24ac8*/ ResDungeonMove_Mate();
    }

    class ResDungeonMove_Etc : ServerProtocol.ResDungeonMove
    {
        /*0xf24ab8*/ ResDungeonMove_Etc();
    }

    class ReqDungeonCoinReward : ServerProtocol.IRequestCommon
    {
        /*0xf208fc*/ ReqDungeonCoinReward(string token);
    }

    class ResDungeonCoinReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int index;
        /*0x38*/ PTShare.Define.SProperty gain;

        /*0xf24a18*/ ResDungeonCoinReward();
    }

    class ReqDungeonJail : ServerProtocol.IRequestCommon
    {
        /*0xf20a6c*/ ReqDungeonJail(string token);
    }

    class ResDungeonJail : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int hammer;
        /*0x24*/ int escapeheroid;

        /*0xf24a60*/ ResDungeonJail();
    }

    class ReqDungeonBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf208c4*/ ReqDungeonBegin(string token, string heroids);
    }

    class ResDungeonBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> myheroes;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> vsheroes;

        /*0xf24a10*/ ResDungeonBegin();
    }

    class ReqDungeonFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ bool win;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf209e8*/ ReqDungeonFinish(string token, long lcp, bool win, string playdata, string hpmps);
    }

    class ResDungeonFinish : ServerProtocol.IResponseCommonV3
    {
        /*0xf24a40*/ ResDungeonFinish();
    }

    class ResDungeonFinish_Victory : ServerProtocol.ResDungeonFinish
    {
        /*0x30*/ PTShare.Define.SProperty battlereward;

        /*0xf24a50*/ ResDungeonFinish_Victory();
    }

    class ResDungeonFinish_Defeat : ServerProtocol.ResDungeonFinish
    {
        /*0x30*/ int posx;
        /*0x34*/ int posy;

        /*0xf24a48*/ ResDungeonFinish_Defeat();
    }

    class ReqDungeonHeal : ServerProtocol.IRequestCommon
    {
        /*0xf20a40*/ ReqDungeonHeal(string token);
    }

    class ResDungeonHeal : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf24a58*/ ResDungeonHeal();
    }

    class ReqDungeonRevival : ServerProtocol.IRequestCommon
    {
        /*0xf20b38*/ ReqDungeonRevival(string token);
    }

    class ResDungeonRevival : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCondition revivalhero;

        /*0xf24ae8*/ ResDungeonRevival();
    }

    class ReqDungeonMate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf20a98*/ ReqDungeonMate(string token, int tableid);
    }

    class ResDungeonMate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SMate mate;

        /*0xf24a68*/ ResDungeonMate();
    }

    class ReqDungeonWall : ServerProtocol.IRequestCommon
    {
        /*0xf20b64*/ ReqDungeonWall(string token);
    }

    class ResDungeonWall : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int doorkey;

        /*0xf24af0*/ ResDungeonWall();
    }

    class ReqDungeonProgress : ServerProtocol.IRequestCommon
    {
        /*0xf20b0c*/ ReqDungeonProgress(string token);
    }

    class ResDungeonProgress : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SDungeonCondition> progresses;

        /*0xf24ae0*/ ResDungeonProgress();
    }

    class ReqDungeonAssign : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf20888*/ ReqDungeonAssign(string token, int heroid);
    }

    class ResDungeonAssign : ServerProtocol.IResponseCommonV2
    {
        /*0xf24a08*/ ResDungeonAssign();
    }

    class ReqEquipResetFactionBonus : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int equipid;

        /*0xf20c84*/ ReqEquipResetFactionBonus(string token, int equipid);
    }

    class ResEquipResetFactionBonus : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int equipid;
        /*0x24*/ int newbonusid;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b18*/ ResEquipResetFactionBonus();
    }

    class ReqEquipConfirmFactionBonus : ServerProtocol.IRequestCommon
    {
        /*0xf20bcc*/ ReqEquipConfirmFactionBonus(string token);
    }

    class ResEquipConfirmFactionBonus : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int equipid;
        /*0x24*/ int newbonusid;

        /*0xf24b00*/ ResEquipConfirmFactionBonus();
    }

    class ReqEquipPromote : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int equipid;

        /*0xf20bf8*/ ReqEquipPromote(string token, int equipid);
    }

    class ResEquipPromote : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SEquip equip;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b08*/ ResEquipPromote();
    }

    class ReqEquipReinforce : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int equipid;
        /*0x20*/ string feedequipids;
        /*0x28*/ string feeditemids;

        /*0xf20c34*/ ReqEquipReinforce(string token, int equipid, string feedequipids, string feeditemids);
    }

    class ResEquipReinforce : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SEquip equip;
        /*0x38*/ System.Collections.Generic.List<int> feedidlist;

        /*0xf24b10*/ ResEquipReinforce();
    }

    class ReqEquipArtifactReinforce : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int artifactid;

        /*0xf20b90*/ ReqEquipArtifactReinforce(string token, int artifactid);
    }

    class ResEquipArtifactReinforce : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int artifactlv;

        /*0xf24af8*/ ResEquipArtifactReinforce();
    }

    class ReqEquipSignature : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int count;

        /*0xf20cc0*/ ReqEquipSignature(string token, int heroid, int count);
    }

    class ResEquipSignature : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int signaturelv;

        /*0xf24b20*/ ResEquipSignature();
    }

    class ReqEventCoupon : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string serial;

        /*0xf20dbc*/ ReqEventCoupon(string token, string serial);
    }

    class ResEventCoupon : ServerProtocol.IResponseCommonV2
    {
        /*0xf24b40*/ ResEventCoupon();
    }

    class ReqEventAttendReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int rewardid;

        /*0xf20d00*/ ReqEventAttendReward(string token, int rewardid);
    }

    class ResEventAttendReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty rewards;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b28*/ ResEventAttendReward();
    }

    class ReqEventPassRefresh : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;

        /*0xf20ec4*/ ReqEventPassRefresh(string token, int eventid);
    }

    class ResEventPassRefresh : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SPass pass;

        /*0xf24b60*/ ResEventPassRefresh();
    }

    class ReqEventPassReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf20f00*/ ReqEventPassReward(string token, int index);
    }

    class ResEventPassReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int state;
        /*0x28*/ PTShare.Define.SProperty rewards;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b68*/ ResEventPassReward();
    }

    class ReqEventExchange : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;
        /*0x1c*/ int count;

        /*0xf20df4*/ ReqEventExchange(string token, int index, int count);
    }

    class ResEventExchange : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b48*/ ResEventExchange();
    }

    class ReqEventBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x20*/ string heroids;

        /*0xf20d3c*/ ReqEventBegin(string token, int bossindex, string heroids);
    }

    class ResEventBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf24b30*/ ResEventBegin();
    }

    class ReqEventFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf20e34*/ ReqEventFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResEventFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;
        /*0x40*/ PTShare.Define.SModeCount usemercenary;

        /*0xf24b50*/ ResEventFinish();
    }

    class ReqEventMopUp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf20e88*/ ReqEventMopUp(string token, int bossindex);
    }

    class ResEventMopUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;

        /*0xf24b58*/ ResEventMopUp();
    }

    class ReqEventBossHistory : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf20d80*/ ReqEventBossHistory(string token, int bossindex);
    }

    class ResEventBossHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> histories;

        /*0xf24b38*/ ResEventBossHistory();
    }

    class ReqEventReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf20f3c*/ ReqEventReplay(string token, string replayid);
    }

    class ResEventReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildBossReplay replay;

        /*0xf24b70*/ ResEventReplay();
    }

    class ReqEventRoulette : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;
        /*0x1c*/ int priceid;

        /*0xf20f74*/ ReqEventRoulette(string token, int eventid, int priceid);
    }

    class ResEventRoulette : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int vippoint;
        /*0x3c*/ int evrolettefree;

        /*0xf24b78*/ ResEventRoulette();
    }

    class ReqFriendFriends : ServerProtocol.IRequestCommon
    {
        /*0xf21124*/ ReqFriendFriends(string token);
    }

    class ResFriendFriends : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int todayrecv;
        /*0x24*/ int todaysend;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SFriend> friendlist;
        /*0x30*/ bool newrequestor;
        /*0x31*/ bool newmercenary;

        /*0xf24c44*/ ResFriendFriends();
    }

    class ReqFriendRequestors : ServerProtocol.IRequestCommon
    {
        /*0xf21150*/ ReqFriendRequestors(string token);
    }

    class ResFriendRequestors : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> reqlist;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SFriend> friendlist;

        /*0xf24c4c*/ ResFriendRequestors();
    }

    class ReqFriendBlacks : ServerProtocol.IRequestCommon
    {
        /*0xf21088*/ ReqFriendBlacks(string token);
    }

    class ResFriendBlacks : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> blacklist;

        /*0xf24c2c*/ ResFriendBlacks();
    }

    class ReqFriendSearch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string query;

        /*0xf2117c*/ ReqFriendSearch(string token, string query);
    }

    class ResFriendSearch : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> list;

        /*0xf24c54*/ ResFriendSearch();
    }

    class ReqFriendSend : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf211b4*/ ReqFriendSend(string token, long toplayerid);
    }

    class ResFriendSend : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long toplayerid;

        /*0xf24c5c*/ ResFriendSend();
    }

    class ReqFriendAccept : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long acceptplayerid;

        /*0xf20fb4*/ ReqFriendAccept(string token, long acceptplayerid);
    }

    class ResFriendAccept : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SFriend acceptplayer;

        /*0xf24c0c*/ ResFriendAccept();
    }

    class ReqFriendDeny : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long denyplayerid;

        /*0xf210ec*/ ReqFriendDeny(string token, long denyplayerid);
    }

    class ResFriendDeny : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long denyplayerid;

        /*0xf24c3c*/ ResFriendDeny();
    }

    class ReqFriendDelete : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long delplayerid;

        /*0xf210b4*/ ReqFriendDelete(string token, long delplayerid);
    }

    class ResFriendDelete : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long delplayerid;

        /*0xf24c34*/ ResFriendDelete();
    }

    class ReqFriendTakePoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long fromplayerid;

        /*0xf2125c*/ ReqFriendTakePoint(string token, long fromplayerid);
    }

    class ResFriendTakePoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long fromplayerid;
        /*0x38*/ int todayrecv;

        /*0xf24c74*/ ResFriendTakePoint();
    }

    class ReqFriendSendPoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf211ec*/ ReqFriendSendPoint(string token, long toplayerid);
    }

    class ResFriendSendPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long toplayerid;
        /*0x38*/ int todaysend;

        /*0xf24c64*/ ResFriendSendPoint();
    }

    class ReqFriendAllPoint : ServerProtocol.IRequestCommon
    {
        /*0xf20fec*/ ReqFriendAllPoint(string token);
    }

    class ResFriendAllPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int todayrecv;
        /*0x34*/ int todaysend;
        /*0x38*/ System.Collections.Generic.List<long> recvlist;
        /*0x40*/ System.Collections.Generic.List<long> sendlist;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SFriend> friendlist;

        /*0xf24c14*/ ResFriendAllPoint();
    }

    class ReqFriendBlacklist : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21018*/ ReqFriendBlacklist(string token, long playerid);
    }

    class ResFriendBlacklist : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SPlayer player;

        /*0xf24c1c*/ ResFriendBlacklist();
    }

    class ReqFriendBlacklistRemove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long delplayerid;

        /*0xf21050*/ ReqFriendBlacklistRemove(string token, long delplayerid);
    }

    class ResFriendBlacklistRemove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long delplayerid;

        /*0xf24c24*/ ResFriendBlacklistRemove();
    }

    class ReqFriendSparring : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf21224*/ ReqFriendSparring(string token, long toplayerid);
    }

    class ResFriendSparring : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long cp;
        /*0x28*/ PTShare.Define.SStatBonus statbonus;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> decks;

        /*0xf24c6c*/ ResFriendSparring();
    }

    class ReqGachaBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int gachaid;
        /*0x1c*/ int priceid;
        /*0x20*/ int factionid;

        /*0xf21294*/ ReqGachaBuy(string token, int gachaid, int priceid, int factionid);
    }

    class ResGachaBuy : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ bool recvbonus;
        /*0x3c*/ int oldaccgacha;
        /*0x40*/ int newaccgacha;
        /*0x48*/ string buyresult;

        /*0xf24c7c*/ ResGachaBuy();
    }

    class ReqGachaEnter : ServerProtocol.IRequestCommon
    {
        /*0xf21358*/ ReqGachaEnter(string token);
    }

    class ResGachaEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int accgacha;
        /*0x28*/ System.Collections.Generic.List<bool> pools;

        /*0xf24c94*/ ResGachaEnter();
    }

    class ReqGachaBuyFactionPool : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int factionid;

        /*0xf212e4*/ ReqGachaBuyFactionPool(string token, int factionid);
    }

    class ResGachaBuyFactionPool : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int factionid;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24c84*/ ResGachaBuyFactionPool();
    }

    class ReqGachaCommitWishList : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string herotableids;

        /*0xf21320*/ ReqGachaCommitWishList(string token, string herotableids);
    }

    class ResGachaCommitWishList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<string> wishlist;

        /*0xf24c8c*/ ResGachaCommitWishList();
    }

    class ReqGachaSetAutoDismiss : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string herotableids;

        /*0xf21384*/ ReqGachaSetAutoDismiss(string token, string herotableids);
    }

    class ResGachaSetAutoDismiss : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> autodismiss;

        /*0xf24c9c*/ ResGachaSetAutoDismiss();
    }

    class ReqGateZone
    {
        /*0xf213f4*/ ReqGateZone();
    }

    class ResGateZone : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string zone;

        /*0xf24cac*/ ResGateZone();
    }

    class ReqGateInit
    {
        /*0x10*/ int ver;
        /*0x14*/ int billingtype;

        /*0xf213bc*/ ReqGateInit(int ver, int billingtype);
    }

    class ResGateInit : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.DateTime now;
        /*0x20*/ System.DateTime stopendplan;
        /*0x28*/ string ip;
        /*0x30*/ int protocolver;
        /*0x34*/ bool randomguestid;
        /*0x35*/ bool couponvisible;
        /*0x36*/ bool zoneselect;
        /*0x38*/ string zone;
        /*0x40*/ string privacyurl;
        /*0x48*/ string termsurl;
        /*0x50*/ string customerurl;
        /*0x58*/ string marketurl;
        /*0x60*/ string bundleurl;
        /*0x68*/ System.Collections.Generic.Dictionary<string, string> communityurl;
        /*0x70*/ string refundurl;

        /*0xf24ca4*/ ResGateInit();
    }

    class ReqGrowthEnter : ServerProtocol.IRequestCommon
    {
        /*0xf213fc*/ ReqGrowthEnter(string token);
    }

    class ResGrowthEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGrowth> list;

        /*0xf24cb4*/ ResGrowthEnter();
    }

    class ReqGrowthTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf21428*/ ReqGrowthTake(string token, int index);
    }

    class ResGrowthTake : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf24cbc*/ ResGrowthTake();
    }

    class ReqGuildSearch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string query;

        /*0xf219ac*/ ReqGuildSearch(string token, string query);
    }

    class ResGuildSearch : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> list;

        /*0xf24d74*/ ResGuildSearch();
    }

    class ReqGuildRecommend : ServerProtocol.IRequestCommon
    {
        /*0xf2191c*/ ReqGuildRecommend(string token);
    }

    class ResGuildRecommend : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int guildid;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> list;

        /*0xf24d5c*/ ResGuildRecommend();
    }

    class ReqGuildDetail : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int guildid;

        /*0xf216e4*/ ReqGuildDetail(string token, int guildid);
    }

    class ResGuildDetail : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuild info;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;

        /*0xf24d0c*/ ResGuildDetail();
    }

    class ReqGuildCreate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string name;
        /*0x20*/ int emblemid;
        /*0x24*/ int accepttype;
        /*0x28*/ string guide;
        /*0x30*/ string lang;
        /*0x38*/ int reqlevel;

        /*0xf215c0*/ ReqGuildCreate(string token, string name, int emblemid, int accepttype, string guide, string lang, int reqlevel);
    }

    class ResGuildCreate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x30*/ PTShare.Define.SGuild info;
        /*0x38*/ PTShare.Define.SGuildMember member;

        /*0xf24cf4*/ ResGuildCreate();
    }

    class ReqGuildEnter : ServerProtocol.IRequestCommon
    {
        /*0xf21758*/ ReqGuildEnter(string token);
    }

    class ResGuildEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuild info;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;
        /*0x30*/ int todaypoint;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> bosses;
        /*0x40*/ bool newrequestor;
        /*0x41*/ bool newoffice;
        /*0x42*/ bool newguildwar;
        /*0x44*/ int joinsecs;
        /*0x48*/ long oldmasterid;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> frames;

        /*0xf24d1c*/ ResGuildEnter();
    }

    class ReqGuildSendReq : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int guildid;

        /*0xf219e4*/ ReqGuildSendReq(string token, int guildid);
    }

    class ResGuildSendReq : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool requested;
        /*0x28*/ PTShare.Define.SGuild info;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;

        /*0xf24d7c*/ ResGuildSendReq();
    }

    class ReqGuildUpdateInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int emblemid;
        /*0x1c*/ int frameid;
        /*0x20*/ int accepttype;
        /*0x28*/ string guide;
        /*0x30*/ string lang;
        /*0x38*/ int reqlevel;
        /*0x40*/ string notice;

        /*0xf21af0*/ ReqGuildUpdateInfo(string token, int emblemid, int frameid, int accepttype, string guide, string lang, int reqlevel, string notice);
    }

    class ResGuildUpdateInfo : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d9c*/ ResGuildUpdateInfo();
    }

    class ReqUpdateName : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string name;

        /*0xf23b50*/ ReqUpdateName(string token, string name);
    }

    class ResUpdateName : ServerProtocol.IResponseCommonV3
    {
        /*0xf25234*/ ResUpdateName();
    }

    class ReqGuildRequestors : ServerProtocol.IRequestCommon
    {
        /*0xf21980*/ ReqGuildRequestors(string token);
    }

    class ResGuildRequestors : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> list;

        /*0xf24d6c*/ ResGuildRequestors();
    }

    class ReqGuildAcceptReq : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21464*/ ReqGuildAcceptReq(string token, long playerid);
    }

    class ResGuildAcceptReq : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildMember member;

        /*0xf24cc4*/ ResGuildAcceptReq();
    }

    class ReqGuildAcceptReqAll : ServerProtocol.IRequestCommon
    {
        /*0xf2149c*/ ReqGuildAcceptReqAll(string token);
    }

    class ResGuildAcceptReqAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;

        /*0xf24ccc*/ ResGuildAcceptReqAll();
    }

    class ReqGuildDenyReq : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21680*/ ReqGuildDenyReq(string token, long playerid);
    }

    class ResGuildDenyReq : ServerProtocol.IResponseCommonV2
    {
        /*0xf24cfc*/ ResGuildDenyReq();
    }

    class ReqGuildDenyReqAll : ServerProtocol.IRequestCommon
    {
        /*0xf216b8*/ ReqGuildDenyReqAll(string token);
    }

    class ResGuildDenyReqAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int denycount;

        /*0xf24d04*/ ResGuildDenyReqAll();
    }

    class ReqGuildSetCamp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int x;
        /*0x1c*/ int y;
        /*0x20*/ long playerid;

        /*0xf21a60*/ ReqGuildSetCamp(string token, int x, int y, long playerid);
    }

    class ResGuildSetCamp : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d8c*/ ResGuildSetCamp();
    }

    class ReqGuildLeave : ServerProtocol.IRequestCommon
    {
        /*0xf2184c*/ ReqGuildLeave(string token);
    }

    class ResGuildLeave : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d3c*/ ResGuildLeave();
    }

    class ReqGuildKick : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21814*/ ReqGuildKick(string token, long playerid);
    }

    class ResGuildKick : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d34*/ ResGuildKick();
    }

    class ReqGuildDevolve : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21720*/ ReqGuildDevolve(string token, long playerid);
    }

    class ResGuildDevolve : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d14*/ ResGuildDevolve();
    }

    class ReqGuildSetPosition : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;
        /*0x20*/ int position;

        /*0xf21ab0*/ ReqGuildSetPosition(string token, long playerid, int position);
    }

    class ResGuildSetPosition : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d94*/ ResGuildSetPosition();
    }

    class ReqGuildSetAuth : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;
        /*0x20*/ int auth;

        /*0xf21a20*/ ReqGuildSetAuth(string token, long playerid, int auth);
    }

    class ResGuildSetAuth : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d84*/ ResGuildSetAuth();
    }

    class ReqGuildOffice : ServerProtocol.IRequestCommon
    {
        /*0xf218b4*/ ReqGuildOffice(string token);
    }

    class ResGuildOffice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int wastecount;

        /*0xf24d4c*/ ResGuildOffice();
    }

    class ReqGuildClean : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf21584*/ ReqGuildClean(string token, int count);
    }

    class ResGuildClean : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int wastecount;

        /*0xf24cec*/ ResGuildClean();
    }

    class ReqGuildBossOpen : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf21548*/ ReqGuildBossOpen(string token, int bossindex);
    }

    class ResGuildBossOpen : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long lastdamage;

        /*0xf24ce4*/ ResGuildBossOpen();
    }

    class ReqGuildBossHistory : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf2150c*/ ReqGuildBossHistory(string token, int bossindex);
    }

    class ResGuildBossHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> histories;

        /*0xf24cdc*/ ResGuildBossHistory();
    }

    class ReqGuildBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x20*/ string heroids;

        /*0xf214c8*/ ReqGuildBegin(string token, int bossindex, string heroids);
    }

    class ResGuildBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf24cd4*/ ResGuildBegin();
    }

    class ReqGuildFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf21784*/ ReqGuildFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResGuildFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;
        /*0x40*/ PTShare.Define.SModeCount usemercenary;

        /*0xf24d24*/ ResGuildFinish();
    }

    class ReqGuildMopUp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf21878*/ ReqGuildMopUp(string token, int bossindex);
    }

    class ResGuildMopUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;

        /*0xf24d44*/ ResGuildMopUp();
    }

    class ReqGuildReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf21948*/ ReqGuildReplay(string token, string replayid);
    }

    class ResGuildReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildBossReplay replay;

        /*0xf24d64*/ ResGuildReplay();
    }

    class ReqGuildRanking : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf218e0*/ ReqGuildRanking(string token, int index);
    }

    class ResGuildRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SLongRanker> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ long myscore;
        /*0x38*/ PTShare.Define.SGuildMini myguild;

        /*0xf24d54*/ ResGuildRanking();
    }

    class ReqGuildGuildRanking : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf217d8*/ ReqGuildGuildRanking(string token, int index);
    }

    class ResGuildGuildRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRankerGuild> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ long myscore;
        /*0x38*/ PTShare.Define.SGuildMini myguild;

        /*0xf24d2c*/ ResGuildGuildRanking();
    }

    class ReqGuildWarEnter : ServerProtocol.IRequestCommon
    {
        /*0xf21ca8*/ ReqGuildWarEnter(string token);
    }

    class ResGuildWarEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newform;
        /*0x21*/ bool newmyhero;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> rankguilds;
        /*0x30*/ int myguildrank;
        /*0x34*/ int myguildpoint;
        /*0x38*/ long myguildcp;
        /*0x40*/ int rewardindex;
        /*0x44*/ int newauth;
        /*0x48*/ PTShare.Define.SGuildWarReward newreward;
        /*0x50*/ int warauth;
        /*0x58*/ System.Collections.Generic.List<int> tacticids;

        /*0xf24dc4*/ ResGuildWarEnter();
    }

    class ReqGuildWarMember : ServerProtocol.IRequestCommon
    {
        /*0xf21dec*/ ReqGuildWarMember(string token);
    }

    class ResGuildWarMember : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer> members;

        /*0xf24dec*/ ResGuildWarMember();
    }

    class ReqGuildWarSetCaptain : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;
        /*0x20*/ int auth;

        /*0xf21ebc*/ ReqGuildWarSetCaptain(string token, long playerid, int auth);
    }

    class ResGuildWarSetCaptain : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildWarPlayer attackcaptain;
        /*0x28*/ PTShare.Define.SGuildWarPlayer defensecaptain;

        /*0xf24e0c*/ ResGuildWarSetCaptain();
    }

    class ReqGuildWarForm : ServerProtocol.IRequestCommon
    {
        /*0xf21d54*/ ReqGuildWarForm(string token);
    }

    class ResGuildWarForm : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newatkdeck;
        /*0x21*/ bool newdefdeck;
        /*0x28*/ PTShare.Define.SGuildWarForm attack;
        /*0x30*/ PTShare.Define.SGuildWarForm defense;

        /*0xf24dd4*/ ResGuildWarForm();
    }

    class ReqGuildWarFormDetail : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x1c*/ int tableid;

        /*0xf21d80*/ ReqGuildWarFormDetail(string token, int type, int tableid);
    }

    class ResGuildWarFormDetail : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> heroes;

        /*0xf24ddc*/ ResGuildWarFormDetail();
    }

    class ReqGuildWarSetForm : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x20*/ string uniqueid;
        /*0x28*/ bool confirm;
        /*0x30*/ string unsetuniqueid;

        /*0xf21efc*/ ReqGuildWarSetForm(string token, int type, string uniqueid, bool confirm, string unsetuniqueid);
    }

    class ResGuildWarSetForm : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero already;
        /*0x28*/ long alreadyplayerid;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> formheroes;

        /*0xf24e14*/ ResGuildWarSetForm();
    }

    class ReqGuildWarUnsetForm : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x20*/ string uniqueid;

        /*0xf21f98*/ ReqGuildWarUnsetForm(string token, int type, string uniqueid);
    }

    class ResGuildWarUnsetForm : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e24*/ ResGuildWarUnsetForm();
    }

    class ReqGuildWarMyFormHero : ServerProtocol.IRequestCommon
    {
        /*0xf21e18*/ ReqGuildWarMyFormHero(string token);
    }

    class ResGuildWarMyFormHero : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int atkheroid;
        /*0x24*/ int defheroid;

        /*0xf24df4*/ ResGuildWarMyFormHero();
    }

    class ReqGuildWarBuyTactic : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tacticid;

        /*0xf21bc8*/ ReqGuildWarBuyTactic(string token, int tacticid);
    }

    class ResGuildWarBuyTactic : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int guildpoint;

        /*0xf24da4*/ ResGuildWarBuyTactic();
    }

    class ReqGuildWarDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf21c6c*/ ReqGuildWarDeck(string token, int type);
    }

    class ResGuildWarDeck : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int tacticid;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> heroes;

        /*0xf24dbc*/ ResGuildWarDeck();
    }

    class ReqGuildWarUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x1c*/ int tacticid;
        /*0x20*/ string uniqueids;

        /*0xf21fdc*/ ReqGuildWarUpdateDeck(string token, int type, int tacticid, string uniqueids);
    }

    class ResGuildWarUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> defheroes;

        /*0xf24e2c*/ ResGuildWarUpdateDeck();
    }

    class ReqGuildWarSearch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ bool reset;

        /*0xf21e7c*/ ReqGuildWarSearch(string token, bool reset);
    }

    class ResGuildWarSearch : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> targets;
        /*0x38*/ int ticket;
        /*0x3c*/ int buylimit;

        /*0xf24e04*/ ResGuildWarSearch();
    }

    class ReqGuildWarChoice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int guildid;

        /*0xf21c04*/ ReqGuildWarChoice(string token, int guildid);
    }

    class ResGuildWarChoice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ PTShare.Define.SGuildWarTactic attack;
        /*0x30*/ PTShare.Define.SGuildWarTactic defense;

        /*0xf24dac*/ ResGuildWarChoice();
    }

    class ReqGuildWarFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ long rcp;
        /*0x28*/ string statistics;
        /*0x30*/ int tacticid;
        /*0x38*/ string uniqueids;
        /*0x40*/ bool win;
        /*0x48*/ string hpmps;
        /*0x50*/ string output;

        /*0xf21cd4*/ ReqGuildWarFinish(string token, long lcp, long rcp, string statistics, int tacticid, string uniqueids, bool win, string hpmps, string output);
    }

    class ResGuildWarFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int myrank;
        /*0x24*/ int myrankmove;
        /*0x28*/ int mypoint_before;
        /*0x2c*/ int mypoint_after;
        /*0x30*/ int vspoint_before;
        /*0x34*/ int vspoint_after;
        /*0x38*/ int ticket;

        /*0xf24dcc*/ ResGuildWarFinish();
    }

    class ReqGuildWarHistory : ServerProtocol.IRequestCommon
    {
        /*0xf21dc0*/ ReqGuildWarHistory(string token);
    }

    class ResGuildWarHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHistory> histories;

        /*0xf24de4*/ ResGuildWarHistory();
    }

    class ReqGuildWarReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf21e44*/ ReqGuildWarReplay(string token, string replayid);
    }

    class ResGuildWarReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SArenaReplay replay;

        /*0xf24dfc*/ ResGuildWarReplay();
    }

    class ReqGuildWarContribution : ServerProtocol.IRequestCommon
    {
        /*0xf21c40*/ ReqGuildWarContribution(string token);
    }

    class ResGuildWarContribution : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int rewardindex;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SContribution> members;

        /*0xf24db4*/ ResGuildWarContribution();
    }

    class ReqGuildWarTicket : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf21f5c*/ ReqGuildWarTicket(string token, int count);
    }

    class ResGuildWarTicket : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int ticket;

        /*0xf24e1c*/ ResGuildWarTicket();
    }

    class ReqHeroInven : ServerProtocol.IRequestCommon
    {
        /*0xf2239c*/ ReqHeroInven(string token);
    }

    class ResHeroInven : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHero> herolist;

        /*0xf24eac*/ ResHeroInven();
    }

    class ReqHeroEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int equipid;

        /*0xf22330*/ ReqHeroEquip(string token, int heroid, int equipid);
    }

    class ResHeroEquip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int type;
        /*0x24*/ int equipid;
        /*0x28*/ PTShare.Define.SHero hero;
        /*0x30*/ int relequipid;
        /*0x38*/ PTShare.Define.SHero relhero;

        /*0xf24e9c*/ ResHeroEquip();
    }

    class ReqHeroUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int equipid;

        /*0xf2251c*/ ReqHeroUnequip(string token, int heroid, int equipid);
    }

    class ResHeroUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero hero;
        /*0x28*/ int equipid;

        /*0xf24edc*/ ResHeroUnequip();
    }

    class ReqHeroAutoEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf22280*/ ReqHeroAutoEquip(string token, int heroid);
    }

    class ResHeroAutoEquip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero hero;

        /*0xf24e84*/ ResHeroAutoEquip();
    }

    class ReqHeroAllUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf22188*/ ReqHeroAllUnequip(string token, int heroid);
    }

    class ResHeroAllUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero hero;

        /*0xf24e64*/ ResHeroAllUnequip();
    }

    class ReqHeroPromote : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ string feedheroids;

        /*0xf22464*/ ReqHeroPromote(string token, int heroid, string feedheroids);
    }

    class ResHeroPromote : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int heroid;
        /*0x34*/ int grade;
        /*0x38*/ System.Collections.Generic.List<int> feedidlist;
        /*0x40*/ PTShare.Define.SProperty gain;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SLvHero> top5;

        /*0xf24ec4*/ ResHeroPromote();
    }

    class ReqHeroPromoteMulti : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf224a8*/ ReqHeroPromoteMulti(string token, string heroids);
    }

    class ResHeroPromoteMulti : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<int> heroids;
        /*0x38*/ System.Collections.Generic.List<int> grades;
        /*0x40*/ System.Collections.Generic.List<int> feedids;
        /*0x48*/ PTShare.Define.SProperty gain;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SLvHero> top5;

        /*0xf24ecc*/ ResHeroPromoteMulti();
    }

    class ReqHeroLevelUp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int count;
        /*0x20*/ bool fast;

        /*0xf223c8*/ ReqHeroLevelUp(string token, int heroid, int count, bool fast);
    }

    class ResHeroLevelUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int heroid;
        /*0x34*/ int level;
        /*0x38*/ int resonancelv;

        /*0xf24eb4*/ ResHeroLevelUp();
    }

    class ReqHeroLock : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ bool locking;

        /*0xf2241c*/ ReqHeroLock(string token, int heroid, bool locking);
    }

    class ResHeroLock : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int heroid;
        /*0x24*/ bool locking;

        /*0xf24ebc*/ ResHeroLock();
    }

    class ReqHeroExtendSlot : ServerProtocol.IRequestCommon
    {
        /*0xf22370*/ ReqHeroExtendSlot(string token);
    }

    class ResHeroExtendSlot : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int heroslot;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24ea4*/ ResHeroExtendSlot();
    }

    class ReqHeroBookReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf222bc*/ ReqHeroBookReward(string token, int tableid);
    }

    class ResHeroBookReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int tableid;
        /*0x28*/ PTShare.Define.SCurrency currency;

        /*0xf24e8c*/ ResHeroBookReward();
    }

    class ReqHeroRevert : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf224e0*/ ReqHeroRevert(string token, int heroid);
    }

    class ResHeroRevert : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf24ed4*/ ResHeroRevert();
    }

    class ReqHeroWagon : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf2255c*/ ReqHeroWagon(string token, int heroid);
    }

    class ResHeroWagon : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int heroid;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SLvHero> top5;

        /*0xf24ee4*/ ResHeroWagon();
    }

    class ReqHeroDismiss : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf222f8*/ ReqHeroDismiss(string token, string heroids);
    }

    class ResHeroDismiss : ServerProtocol.IResponseCommonV3
    {
        /*0xf24e94*/ ResHeroDismiss();
    }

    class ReqHeroArtifactEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int artifactid;

        /*0xf221c4*/ ReqHeroArtifactEquip(string token, int heroid, int artifactid);
    }

    class ResHeroArtifactEquip : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e6c*/ ResHeroArtifactEquip();
    }

    class ReqHeroArtifactSwap : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int destheroid;

        /*0xf22204*/ ReqHeroArtifactSwap(string token, int heroid, int destheroid);
    }

    class ResHeroArtifactSwap : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e74*/ ResHeroArtifactSwap();
    }

    class ReqHeroArtifactUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf22244*/ ReqHeroArtifactUnequip(string token, int heroid);
    }

    class ResHeroArtifactUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e7c*/ ResHeroArtifactUnequip();
    }

    class ReqItemUse : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;
        /*0x1c*/ int count;
        /*0x20*/ string choice;

        /*0xf22bdc*/ ReqItemUse(string token, int tableid, int count, string choice);
    }

    class ResItemUse : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int tableid;
        /*0x24*/ int count;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf24fac*/ ResItemUse();
    }

    class ReqMailInbox : ServerProtocol.IRequestCommon
    {
        /*0xf22c2c*/ ReqMailInbox(string token);
    }

    class ResMailInbox : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMail> mails;

        /*0xf24fb4*/ ResMailInbox();
    }

    class ReqMailTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int mailid;

        /*0xf22cc0*/ ReqMailTake(string token, int mailid);
    }

    class ResMailTake : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int mailid;

        /*0xf24fcc*/ ResMailTake();
    }

    class ResMailTake_Empty : ServerProtocol.ResMailTake
    {
        /*0xf24fe4*/ ResMailTake_Empty();
    }

    class ResMailTake_Attached : ServerProtocol.ResMailTake
    {
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;

        /*0xf24fdc*/ ResMailTake_Attached();
    }

    class ReqMailRemove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int mailid;

        /*0xf22c58*/ ReqMailRemove(string token, int mailid);
    }

    class ResMailRemove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int mailid;

        /*0xf24fbc*/ ResMailRemove();
    }

    class ReqMailTakeAll : ServerProtocol.IRequestCommon
    {
        /*0xf22cfc*/ ReqMailTakeAll(string token);
    }

    class ResMailTakeAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> mailids;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;

        /*0xf24fd4*/ ResMailTakeAll();
    }

    class ReqMailRemoveAll : ServerProtocol.IRequestCommon
    {
        /*0xf22c94*/ ReqMailRemoveAll(string token);
    }

    class ResMailRemoveAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> mailids;

        /*0xf24fc4*/ ResMailRemoveAll();
    }

    class ReqManufactureEnter : ServerProtocol.IRequestCommon
    {
        /*0xf22d28*/ ReqManufactureEnter(string token);
    }

    class ResManufactureEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ float percent;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SManufacture> status;

        /*0xf24fec*/ ResManufactureEnter();
    }

    class ReqManufactureInsert : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;
        /*0x1c*/ int amount;

        /*0xf22d54*/ ReqManufactureInsert(string token, int index, int amount);
    }

    class ResManufactureInsert : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int pushcnt;
        /*0x34*/ float percent;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SManufacture> status;

        /*0xf24ff4*/ ResManufactureInsert();
    }

    class ReqMazeEnter : ServerProtocol.IRequestCommon
    {
        /*0xf22e14*/ ReqMazeEnter(string token);
    }

    class ResMazeEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool firstenter;
        /*0x28*/ PTShare.Define.SMaze maze;
        /*0x30*/ PTShare.Define.SPay decidecost;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SMate> mates;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
        /*0x58*/ PTShare.Define.SProperty battlereward;
        /*0x60*/ System.Collections.Generic.List<int> dicevalues;
        /*0x68*/ int battleindex;

        /*0xf2503c*/ ResMazeEnter();
    }

    class ReqMazeDice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int decide;
        /*0x1c*/ bool iscash;

        /*0xf22dcc*/ ReqMazeDice(string token, int decide, bool iscash);
    }

    class ResMazeDice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int dicevalue;
        /*0x28*/ PTShare.Define.SPay decidecost;
        /*0x30*/ int pos;
        /*0x38*/ PTShare.Define.SCurrency currency;

        /*0xf25004*/ ResMazeDice();
    }

    class ResMazeDice_Battle : ServerProtocol.ResMazeDice
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
        /*0x48*/ PTShare.Define.SProperty battlereward;
        /*0x50*/ int type;
        /*0x54*/ int battleindex;

        /*0xf2500c*/ ResMazeDice_Battle();
    }

    class ResMazeDice_Mate : ServerProtocol.ResMazeDice
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;

        /*0xf25024*/ ResMazeDice_Mate();
    }

    class ResMazeDice_Reward : ServerProtocol.ResMazeDice
    {
        /*0x40*/ PTShare.Define.SProperty reward;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf25034*/ ResMazeDice_Reward();
    }

    class ResMazeDice_Revival : ServerProtocol.ResMazeDice
    {
        /*0x40*/ int heroid;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf2502c*/ ResMazeDice_Revival();
    }

    class ResMazeDice_Heal : ServerProtocol.ResMazeDice
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf2501c*/ ResMazeDice_Heal();
    }

    class ResMazeDice_Etc : ServerProtocol.ResMazeDice
    {
        /*0xf25014*/ ResMazeDice_Etc();
    }

    class ReqMazeBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf22d94*/ ReqMazeBegin(string token, string heroids);
    }

    class ResMazeBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> myheroes;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> vsheroes;

        /*0xf24ffc*/ ResMazeBegin();
    }

    class ReqMazeFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ bool win;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf22e40*/ ReqMazeFinish(string token, long lcp, bool win, string playdata, string hpmps);
    }

    class ResMazeFinish : ServerProtocol.IResponseCommonV3
    {
        /*0xf25044*/ ResMazeFinish();
    }

    class ResMazeFinish_Victory : ServerProtocol.ResMazeFinish
    {
        /*0x30*/ PTShare.Define.SMaze maze;
        /*0x38*/ PTShare.Define.SProperty battlereward;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passpoints;

        /*0xf25054*/ ResMazeFinish_Victory();
    }

    class ResMazeFinish_Defeat : ServerProtocol.ResMazeFinish
    {
        /*0xf2504c*/ ResMazeFinish_Defeat();
    }

    class ReqMazeMate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf22ef0*/ ReqMazeMate(string token, int tableid);
    }

    class ResMazeMate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SMate mate;

        /*0xf2506c*/ ResMazeMate();
    }

    class ReqMazeItem : ServerProtocol.IRequestCommon
    {
        /*0xf22ec4*/ ReqMazeItem(string token);
    }

    class ResMazeItem : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf25064*/ ResMazeItem();
    }

    class ReqMazeRoll : ServerProtocol.IRequestCommon
    {
        /*0xf22f58*/ ReqMazeRoll(string token);
    }

    class ResMazeRoll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> dicevalues;

        /*0xf2507c*/ ResMazeRoll();
    }

    class ReqMazeMateReset : ServerProtocol.IRequestCommon
    {
        /*0xf22f2c*/ ReqMazeMateReset(string token);
    }

    class ResMazeMateReset : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;

        /*0xf25074*/ ResMazeMateReset();
    }

    class ReqMazeInfo : ServerProtocol.IRequestCommon
    {
        /*0xf22e98*/ ReqMazeInfo(string token);
    }

    class ResMazeInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> semienemies;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> bossenemies;
        /*0x30*/ int semiindex;
        /*0x34*/ int bossindex;

        /*0xf2505c*/ ResMazeInfo();
    }

    class ReqMercenaryRentList : ServerProtocol.IRequestCommon
    {
        /*0xf23110*/ ReqMercenaryRentList(string token);
    }

    class ResMercenaryRentList : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> rentlist;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> mercenarys;
        /*0x28*/ bool newlend;

        /*0xf250bc*/ ResMercenaryRentList();
    }

    class ReqMercenaryRent : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;

        /*0xf23090*/ ReqMercenaryRent(string token, long toplayerid, int heroid);
    }

    class ResMercenaryRent : ServerProtocol.IResponseCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;
        /*0x24*/ int reqcount;

        /*0xf250ac*/ ResMercenaryRent();
    }

    class ReqMercenaryRentCancel : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;

        /*0xf230d0*/ ReqMercenaryRentCancel(string token, long toplayerid, int heroid);
    }

    class ResMercenaryRentCancel : ServerProtocol.IResponseCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;
        /*0x24*/ int reqcount;

        /*0xf250b4*/ ResMercenaryRentCancel();
    }

    class ReqMercenaryRentReturn : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;

        /*0xf2313c*/ ReqMercenaryRentReturn(string token, long toplayerid, int heroid);
    }

    class ResMercenaryRentReturn : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SMercenaryRent mercenary;

        /*0xf250c4*/ ResMercenaryRentReturn();
    }

    class ReqMercenaryLendList : ServerProtocol.IRequestCommon
    {
        /*0xf23064*/ ReqMercenaryLendList(string token);
    }

    class ResMercenaryLendList : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLend> lendlist;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> lendedlist;

        /*0xf250a4*/ ResMercenaryLendList();
    }

    class ReqMercenaryLend : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ long toplayerid;

        /*0xf22f84*/ ReqMercenaryLend(string token, int heroid, long toplayerid);
    }

    class ResMercenaryLend : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SMercenaryLended lended;

        /*0xf25084*/ ResMercenaryLend();
    }

    class ReqMercenaryLendDeny : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ long toplayerid;

        /*0xf22fc8*/ ReqMercenaryLendDeny(string token, int heroid, long toplayerid);
    }

    class ResMercenaryLendDeny : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SMercenaryLend lend;

        /*0xf2508c*/ ResMercenaryLendDeny();
    }

    class ReqMercenaryLendDenyAll : ServerProtocol.IRequestCommon
    {
        /*0xf2300c*/ ReqMercenaryLendDenyAll(string token);
    }

    class ResMercenaryLendDenyAll : ServerProtocol.IResponseCommon
    {
        /*0xf25094*/ ResMercenaryLendDenyAll();
    }

    class ReqMercenaryLendFast : ServerProtocol.IRequestCommon
    {
        /*0xf23038*/ ReqMercenaryLendFast(string token);
    }

    class ResMercenaryLendFast : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> lendedlist;

        /*0xf2509c*/ ResMercenaryLendFast();
    }

    class ReqMissionEnter : ServerProtocol.IRequestCommon
    {
        /*0xf2317c*/ ReqMissionEnter(string token);
    }

    class ResMissionEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMission> list;

        /*0xf250cc*/ ResMissionEnter();
    }

    class ReqMissionTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf231e4*/ ReqMissionTake(string token, int index);
    }

    class ResMissionTake : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int gainpoint;
        /*0x24*/ int totalpoint;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf250dc*/ ResMissionTake();
    }

    class ReqMissionExchange : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf231a8*/ ReqMissionExchange(string token, int index);
    }

    class ResMissionExchange : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf250d4*/ ResMissionExchange();
    }

    class ReqQuestNew : ServerProtocol.IRequestCommon
    {
        /*0xf233a4*/ ReqQuestNew(string token);
    }

    class ResQuestNew : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newquest;

        /*0xf25114*/ ResQuestNew();
    }

    class ReqQuestVisitSite : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string sitename;

        /*0xf2344c*/ ReqQuestVisitSite(string token, string sitename);
    }

    class ResQuestVisitSite : ServerProtocol.IResponseCommonV2
    {
        /*0xf2512c*/ ResQuestVisitSite();
    }

    class ReqQuestEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23338*/ ReqQuestEnter(string token);
    }

    class ResQuestEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SQuest daily;
        /*0x28*/ PTShare.Define.SQuest weekly;
        /*0x30*/ PTShare.Define.SQuest dailyevent;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> main;

        /*0xf25104*/ ResQuestEnter();
    }

    class ReqQuestTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;
        /*0x1c*/ int index;

        /*0xf233d0*/ ReqQuestTake(string token, int eventid, int index);
    }

    class ResQuestTake : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int index;
        /*0x34*/ int gainpoint;
        /*0x38*/ int questpoint;

        /*0xf2511c*/ ResQuestTake();
    }

    class ReqQuestExchange : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;
        /*0x1c*/ int index;

        /*0xf23364*/ ReqQuestExchange(string token, int eventid, int index);
    }

    class ResQuestExchange : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int index;
        /*0x38*/ PTShare.Define.SProperty gain;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passpoints;
        /*0x48*/ int vippoint;

        /*0xf2510c*/ ResQuestExchange();
    }

    class ReqQuestTakeMain : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf23410*/ ReqQuestTakeMain(string token, int index);
    }

    class ResQuestTakeMain : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SMainQuest info;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x40*/ int vippoint;

        /*0xf25124*/ ResQuestTakeMain();
    }

    class ReqRaceEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23484*/ ReqRaceEnter(string token);
    }

    class ResRaceEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int curseq;
        /*0x24*/ bool outoftime;
        /*0x28*/ int votetrack;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SRunner> runners;
        /*0x38*/ int prevotetrack;
        /*0x3c*/ bool newrecv;

        /*0xf25134*/ ResRaceEnter();
    }

    class ReqRaceRanking : ServerProtocol.IRequestCommon
    {
        /*0xf234dc*/ ReqRaceRanking(string token);
    }

    class ResRaceRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myscore;
        /*0x30*/ PTShare.Define.SGuildMini myguild;

        /*0xf25144*/ ResRaceRanking();
    }

    class ReqRaceVote : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int track;

        /*0xf23580*/ ReqRaceVote(string token, int track);
    }

    class ResRaceVote : ServerProtocol.IResponseCommonV2
    {
        /*0xf2515c*/ ResRaceVote();
    }

    class ReqRaceReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int seq;

        /*0xf23508*/ ReqRaceReward(string token, int seq);
    }

    class ResRaceReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty rewards;

        /*0xf2514c*/ ResRaceReward();
    }

    class ReqRaceList : ServerProtocol.IRequestCommon
    {
        /*0xf234b0*/ ReqRaceList(string token);
    }

    class ResRaceList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRace> races;

        /*0xf2513c*/ ResRaceList();
    }

    class ReqRaceView : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int seq;

        /*0xf23544*/ ReqRaceView(string token, int seq);
    }

    class ResRaceView : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ RunRaceResultData raceinfo;

        /*0xf25154*/ ResRaceView();
    }

    class ReqResonanceEnter : ServerProtocol.IRequestCommon
    {
        /*0xf235f8*/ ReqResonanceEnter(string token);
    }

    class ResResonanceEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int resonanceslot;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SResonanceSlot> cleanings;
        /*0x30*/ System.Collections.Generic.List<int> top5ids;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> herolist;
        /*0x40*/ int level;

        /*0xf25174*/ ResResonanceEnter();
    }

    class ReqResonanceOpen : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf23650*/ ReqResonanceOpen(string token, int type);
    }

    class ResResonanceOpen : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int resonanceslot;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf25184*/ ResResonanceOpen();
    }

    class ReqResonanceClean : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int syncid;

        /*0xf235bc*/ ReqResonanceClean(string token, int syncid);
    }

    class ResResonanceClean : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf2516c*/ ResResonanceClean();
    }

    class ReqResonancePush : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int syncid;
        /*0x1c*/ int heroid;

        /*0xf236c8*/ ReqResonancePush(string token, int syncid, int heroid);
    }

    class ResResonancePush : ServerProtocol.IResponseCommonV2
    {
        /*0xf25194*/ ResResonancePush();
    }

    class ReqResonancePop : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf2368c*/ ReqResonancePop(string token, int heroid);
    }

    class ResResonancePop : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int syncid;

        /*0xf2518c*/ ResResonancePop();
    }

    class ReqResonanceUnlock : ServerProtocol.IRequestCommon
    {
        /*0xf23744*/ ReqResonanceUnlock(string token);
    }

    class ResResonanceUnlock : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SResonanceSlot> cleanings;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> herolist;

        /*0xf251a4*/ ResResonanceUnlock();
    }

    class ReqResonanceReinforce : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf23708*/ ReqResonanceReinforce(string token, int count);
    }

    class ResResonanceReinforce : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int count;

        /*0xf2519c*/ ResResonanceReinforce();
    }

    class ReqResonanceLevelUp : ServerProtocol.IRequestCommon
    {
        /*0xf23624*/ ReqResonanceLevelUp(string token);
    }

    class ResResonanceLevelUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int level;

        /*0xf2517c*/ ResResonanceLevelUp();
    }

    class ReqRelationActivate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf18e4c*/ ReqRelationActivate(string token, int index);
    }

    class ResRelationActivate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int relationlevel;

        /*0xf25164*/ ResRelationActivate();
    }

    class ReqSkinBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int skinid;

        /*0xf237f4*/ ReqSkinBuy(string token, int skinid);
    }

    class ResSkinBuy : ServerProtocol.IResponseCommonV3
    {
        /*0xf251bc*/ ResSkinBuy();
    }

    class ReqSkinEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int skinid;

        /*0xf23830*/ ReqSkinEquip(string token, int skinid);
    }

    class ResSkinEquip : ServerProtocol.IResponseCommonV2
    {
        /*0xf251c4*/ ResSkinEquip();
    }

    class ReqSkinUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int skinid;

        /*0xf2386c*/ ReqSkinUnequip(string token, int skinid);
    }

    class ResSkinUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0xf251cc*/ ResSkinUnequip();
    }

    class ReqTowerBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;
        /*0x20*/ int factionid;

        /*0xf238a8*/ ReqTowerBegin(string token, string heroids, int factionid);
    }

    class ResTowerBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;
        /*0x40*/ int towerfloor;

        /*0xf251d4*/ ResTowerBegin();
    }

    class ReqTowerFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf238e8*/ ReqTowerFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResTowerFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int towerfloor;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ PTShare.Define.SModeCount usemercenary;

        /*0xf251dc*/ ResTowerFinish();
    }

    class ReqTowerRanking : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int factionid;

        /*0xf239b8*/ ReqTowerRanking(string token, int factionid);
    }

    class ResTowerRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STowerRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myfloor;
        /*0x30*/ System.DateTime myclear;

        /*0xf251f4*/ ResTowerRanking();
    }

    class ReqTowerOthers : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int factionid;

        /*0xf2397c*/ ReqTowerOthers(string token, int factionid);
    }

    class ResTowerOthers : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STowerUser> users;

        /*0xf251ec*/ ResTowerOthers();
    }

    class ReqTowerInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x1c*/ int factionid;

        /*0xf2393c*/ ReqTowerInfo(string token, int floor, int factionid);
    }

    class ResTowerInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STowerRecord> infos;

        /*0xf251e4*/ ResTowerInfo();
    }

    class ReqTowerReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x20*/ long playerid;
        /*0x28*/ int factionid;

        /*0xf1f51c*/ ReqTowerReplay(string token, int floor, long playerid, int factionid);
    }

    class ResTowerReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.STowerReplay replay;

        /*0xf251fc*/ ResTowerReplay();
    }

    class ReqTroopLoad : ServerProtocol.IRequestCommon
    {
        /*0xf239f4*/ ReqTroopLoad(string token);
    }

    class ResTroopLoad : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STroop> troops;

        /*0xf25204*/ ResTroopLoad();
    }

    class ReqTroopMake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string name;
        /*0x20*/ string heroids;

        /*0xf23a20*/ ReqTroopMake(string token, string name, string heroids);
    }

    class ResTroopMake : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.STroop troop;

        /*0xf2520c*/ ResTroopMake();
    }

    class ReqTroopUpdateName : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;
        /*0x20*/ string name;

        /*0xf23ad8*/ ReqTroopUpdateName(string token, long index, string name);
    }

    class ResTroopUpdateName : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;
        /*0x28*/ string name;

        /*0xf25224*/ ResTroopUpdateName();
    }

    class ReqTroopUpdateOrder : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;

        /*0xf23b18*/ ReqTroopUpdateOrder(string token, long index);
    }

    class ResTroopUpdateOrder : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;
        /*0x28*/ long newindex;

        /*0xf2522c*/ ResTroopUpdateOrder();
    }

    class ReqTroopUpdateHeroes : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;
        /*0x20*/ string heroids;

        /*0xf23a98*/ ReqTroopUpdateHeroes(string token, long index, string heroids);
    }

    class ResTroopUpdateHeroes : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;
        /*0x28*/ string heroids;

        /*0xf2521c*/ ResTroopUpdateHeroes();
    }

    class ReqTroopRemove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;

        /*0xf23a60*/ ReqTroopRemove(string token, long index);
    }

    class ResTroopRemove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;

        /*0xf25214*/ ResTroopRemove();
    }

    class ReqWorldArenaEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23ca4*/ ReqWorldArenaEnter(string token);
    }

    class ResWorldArenaEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaRanker> ranks;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> targets;
        /*0x30*/ int currentseason;
        /*0x34*/ int mytier;
        /*0x38*/ int mytoprank;
        /*0x3c*/ int myrank;
        /*0x40*/ int mypoint;
        /*0x44*/ int mytoptier;
        /*0x48*/ int mytoppoint;
        /*0x50*/ long mycp;
        /*0x58*/ int arenafree;
        /*0x60*/ System.DateTime refreshfree;

        /*0xf25254*/ ResWorldArenaEnter();
    }

    class ReqWorldArenaUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;
        /*0x20*/ string blinds;

        /*0xf23e2c*/ ReqWorldArenaUpdateDeck(string token, string heroids, string blinds);
    }

    class ResWorldArenaUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0xf2528c*/ ResWorldArenaUpdateDeck();
    }

    class ReqWorldArenaTicket : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf23dc4*/ ReqWorldArenaTicket(string token, int count);
    }

    class ResWorldArenaTicket : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf2527c*/ ResWorldArenaTicket();
    }

    class ReqWorldArenaRefresh : ServerProtocol.IRequestCommon
    {
        /*0xf23d6c*/ ReqWorldArenaRefresh(string token);
    }

    class ResWorldArenaRefresh : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> targets;
        /*0x38*/ System.DateTime refreshfree;

        /*0xf2526c*/ ResWorldArenaRefresh();
    }

    class ReqWorldArenaHistory : ServerProtocol.IRequestCommon
    {
        /*0xf23d40*/ ReqWorldArenaHistory(string token);
    }

    class ResWorldArenaHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> histories;

        /*0xf25264*/ ResWorldArenaHistory();
    }

    class ReqWorldArenaChoice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf23c6c*/ ReqWorldArenaChoice(string token, long toplayerid);
    }

    class ResWorldArenaChoice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ PTShare.Define.SBattleSide side;

        /*0xf2524c*/ ResWorldArenaChoice();
    }

    class ReqWorldArenaFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ long rcp;
        /*0x28*/ string statistics;
        /*0x30*/ string heroids;
        /*0x38*/ bool win;
        /*0x40*/ string hpmps;

        /*0xf23cd0*/ ReqWorldArenaFinish(string token, long lcp, long rcp, string statistics, string heroids, bool win, string hpmps);
    }

    class ResWorldArenaFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int myrank;
        /*0x34*/ int myrankmove;
        /*0x38*/ int myscore_before;
        /*0x3c*/ int myscore_after;
        /*0x40*/ int vsscore_before;
        /*0x44*/ int vsscore_after;

        /*0xf2525c*/ ResWorldArenaFinish();
    }

    class ReqWorldArenaTraining : ServerProtocol.IRequestCommon
    {
        /*0xf23e00*/ ReqWorldArenaTraining(string token);
    }

    class ResWorldArenaTraining : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int lv;

        /*0xf25284*/ ResWorldArenaTraining();
    }

    class ReqWorldArenaTakeReward : ServerProtocol.IRequestCommon
    {
        /*0xf23d98*/ ReqWorldArenaTakeReward(string token);
    }

    class ResWorldArenaReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int mytoptier;
        /*0x3c*/ int mytoppoint;
        /*0x40*/ bool newmail;

        /*0xf25274*/ ResWorldArenaReward();
    }

    class ReqAtticBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int gachaid;
        /*0x1c*/ int priceid;

        /*0xf201a8*/ ReqAtticBuy(string token, int gachaid, int priceid);
    }

    class ResAtticBuy : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ System.Collections.Generic.List<int> buyresult;

        /*0xf24910*/ ResAtticBuy();
    }

    class ReqAtticCommit : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int herotableid;

        /*0xf201e8*/ ReqAtticCommit(string token, int herotableid);
    }

    class ResAtticCommit : ServerProtocol.IResponseCommonV2
    {
        /*0xf24918*/ ResAtticCommit();
    }

    class ReqWorldBossEnter : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf23eb0*/ ReqWorldBossEnter(string token, int bossindex);
    }

    class ResWorldBossEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int prevrank;
        /*0x28*/ PTShare.Define.SWorldBoss data;

        /*0xf2529c*/ ResWorldBossEnter();
    }

    class ReqWorldBossTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x1c*/ int index;

        /*0xf23f54*/ ReqWorldBossTake(string token, int bossindex, int index);
    }

    class ResWorldBossTake : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ PTShare.Define.SMainQuest mission;

        /*0xf252ac*/ ResWorldBossTake();
    }

    class ReqWorldBossBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x20*/ string heroids;

        /*0xf23e6c*/ ReqWorldBossBegin(string token, int bossindex, string heroids);
    }

    class ResWorldBossBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf25294*/ ResWorldBossBegin();
    }

    class ReqWorldBossFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;
        /*0x38*/ bool win;

        /*0xf23eec*/ ReqWorldBossFinish(string token, long lcp, string statistics, string playdata, string hpmps, bool win);
    }

    class ResWorldBossFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ PTShare.Define.SWorldBoss data;

        /*0xf252a4*/ ResWorldBossFinish();
    }

    class ReqAbilityFreeRoll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf1facc*/ ReqAbilityFreeRoll(string token, int tableid);
    }

    class ResAbilityFreeRoll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int freeability;
        /*0x28*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247f0*/ ResAbilityFreeRoll();
    }

    class ReqAbilityCurrencyRoll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;
        /*0x1c*/ int currency;
        /*0x20*/ int lockability;

        /*0xf1fa7c*/ ReqAbilityCurrencyRoll(string token, int tableid, int currency, int lockability);
    }

    class ResAbilityCurrencyRoll : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247e8*/ ResAbilityCurrencyRoll();
    }

    class ReqAbilityItemRoll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;
        /*0x1c*/ int itemid;

        /*0xf1fb08*/ ReqAbilityItemRoll(string token, int tableid, int itemid);
    }

    class ResAbilityItemRoll : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247f8*/ ResAbilityItemRoll();
    }

    class ReqAbilityConfirm : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf1fa40*/ ReqAbilityConfirm(string token, int tableid);
    }

    class ResAbilityConfirm : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247e0*/ ResAbilityConfirm();
    }

    class ReqPveRankingEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23270*/ ReqPveRankingEnter(string token);
    }

    class ResPveRankingEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int myrank;
        /*0x24*/ int currentleague;
        /*0x28*/ int currentpercent;
        /*0x2c*/ int clearcount;
        /*0x30*/ System.DateTime pvefreex;
        /*0x38*/ int pvefreey;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPveStage> stagelist;
        /*0x48*/ int rewardindex;

        /*0xf250ec*/ ResPveRankingEnter();
    }

    class ReqPveRankingRanking : ServerProtocol.IRequestCommon
    {
        /*0xf2330c*/ ReqPveRankingRanking(string token);
    }

    class ResPveRankingRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int rewardindex;
        /*0x24*/ int myrank;
        /*0x28*/ PTShare.Define.SGuildMini myguild;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SRanker> ranks;

        /*0xf250fc*/ ResPveRankingRanking();
    }

    class ReqPveRankingBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int difficulty;
        /*0x1c*/ int challenge;
        /*0x20*/ string heroids;

        /*0xf23220*/ ReqPveRankingBegin(string token, int difficulty, int challenge, string heroids);
    }

    class ResPveRankingBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf250e4*/ ResPveRankingBegin();
    }

    class ReqPveRankingFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ bool win;
        /*0x28*/ string statistics;
        /*0x30*/ string playdata;
        /*0x38*/ string hpmps;
        /*0x40*/ int playms;

        /*0xf2329c*/ ReqPveRankingFinish(string token, long lcp, bool win, string statistics, string playdata, string hpmps, int playms);
    }

    class ResPveRankingFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int rewardindex;
        /*0x34*/ int challenge;
        /*0x38*/ int getscore;
        /*0x3c*/ int level;
        /*0x40*/ int currentpercent;
        /*0x48*/ PTShare.Define.SProperty gain;
        /*0x50*/ PTShare.Define.SProperty levelupgain;
        /*0x58*/ System.DateTime pvefreex;
        /*0x60*/ int pvefreey;

        /*0xf250f4*/ ResPveRankingFinish();
    }

    class ReqRunGameReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ string recvs;
        /*0x28*/ bool clear;

        /*0xf2379c*/ ReqRunGameReward(string token, int heroid, string recvs, bool clear);
    }

    class ResRunGameReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x38*/ System.Collections.Generic.List<int> prevamounts;
        /*0x40*/ System.Collections.Generic.List<int> rungameamounts;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SRunHero> runheroes;

        /*0xf251b4*/ ResRunGameReward();
    }

    class ReqRunGameRanking : ServerProtocol.IRequestCommon
    {
        /*0xf23770*/ ReqRunGameRanking(string token);
    }

    class ResRunGameRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myscore;
        /*0x30*/ PTShare.Define.SGuildMini myguild;

        /*0xf251ac*/ ResRunGameRanking();
    }

    class ReqHousingEnter : ServerProtocol.IRequestCommon
    {
        /*0xf22694*/ ReqHousingEnter(string token);
    }

    class ResHousingEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ int todaylikerecv;
        /*0x30*/ long acclikerecv;

        /*0xf24f0c*/ ResHousingEnter();
    }

    class ReqHousingFastOpen : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;

        /*0xf226c0*/ ReqHousingFastOpen(string token, int floor);
    }

    class ResHousingFastOpen : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int housingopenfloor;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;
        /*0x40*/ System.DateTime housingfloortime;

        /*0xf24f14*/ ResHousingFastOpen();
    }

    class ReqHousingOpenStart : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;

        /*0xf2293c*/ ReqHousingOpenStart(string token, int floor);
    }

    class ResHousingOpenStart : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.DateTime housingfloortime;

        /*0xf24f64*/ ResHousingOpenStart();
    }

    class ReqHousingOpenEnd : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;

        /*0xf22900*/ ReqHousingOpenEnd(string token, int floor);
    }

    class ResHousingOpenEnd : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int housingopenfloor;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;
        /*0x30*/ System.DateTime housingfloortime;

        /*0xf24f5c*/ ResHousingOpenEnd();
    }

    class ReqHousingUpdate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x20*/ string setobjs;
        /*0x28*/ string unsetobjids;

        /*0xf22b0c*/ ReqHousingUpdate(string token, int floor, string setobjs, string unsetobjids);
    }

    class ResHousingUpdate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> housingobjs;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x30*/ string housinggroup;

        /*0xf24f94*/ ResHousingUpdate();
    }

    class ReqHousingUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string setheroes;
        /*0x20*/ string unsetunitids;

        /*0xf22b5c*/ ReqHousingUpdateDeck(string token, string setheroes, string unsetunitids);
    }

    class ResHousingUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> housingheroes;

        /*0xf24f9c*/ ResHousingUpdateDeck();
    }

    class ReqHousingVisit : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int floor;

        /*0xf22b9c*/ ReqHousingVisit(string token, long toplayerid, int floor);
    }

    class ResHousingVisit : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SVisitor toplayer;
        /*0x28*/ int curfloor;
        /*0x2c*/ int openfloor;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> housingobjs;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SCoreHero> heroes;
        /*0x40*/ long acclikerecv;

        /*0xf24fa4*/ ResHousingVisit();
    }

    class ReqHousingSendPoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf22a90*/ ReqHousingSendPoint(string token, long toplayerid);
    }

    class ResHousingSendPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long toplayerid;
        /*0x38*/ int todaylikesend;

        /*0xf24f84*/ ResHousingSendPoint();
    }

    class ReqHousingTakePoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long fromplayerid;
        /*0x20*/ long dayid;

        /*0xf22ac8*/ ReqHousingTakePoint(string token, long fromplayerid, int dayid);
    }

    class ResHousingTakePoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long fromplayerid;
        /*0x38*/ int todaylikerecv;

        /*0xf24f8c*/ ResHousingTakePoint();
    }

    class ReqHousingHistory : ServerProtocol.IRequestCommon
    {
        /*0xf226fc*/ ReqHousingHistory(string token);
    }

    class ResHousingHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SVisitor> visitors;

        /*0xf24f1c*/ ResHousingHistory();
    }

    class ReqHousingAllPoint : ServerProtocol.IRequestCommon
    {
        /*0xf22598*/ ReqHousingAllPoint(string token);
    }

    class ResHousingAllPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SVisitor> visitors;
        /*0x38*/ int todaylikerecv;

        /*0xf24eec*/ ResHousingAllPoint();
    }

    class ReqHousingClearStart : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x1c*/ int wasteid;

        /*0xf22618*/ ReqHousingClearStart(string token, int floor, int wasteid);
    }

    class ResHousingClearStart : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;

        /*0xf24efc*/ ResHousingClearStart();
    }

    class ReqHousingClearEnd : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x1c*/ int wasteid;
        /*0x20*/ bool fast;

        /*0xf225c4*/ ReqHousingClearEnd(string token, int floor, int wasteid, bool fast);
    }

    class ResHousingClearEnd : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;

        /*0xf24ef4*/ ResHousingClearEnd();
    }

    class ReqHousingSaveList : ServerProtocol.IRequestCommon
    {
        /*0xf229c8*/ ReqHousingSaveList(string token);
    }

    class ResHousingSaveList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingSave> housingsaves;

        /*0xf24f74*/ ResHousingSaveList();
    }

    class ReqHousingSave : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int slot;
        /*0x1c*/ int floor;
        /*0x20*/ string thumb;

        /*0xf22978*/ ReqHousingSave(string token, int slot, int floor, string thumb);
    }

    class ResHousingSave : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingSave> housingsaves;

        /*0xf24f6c*/ ResHousingSave();
    }

    class ReqHousingSaveName : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int slot;
        /*0x20*/ string name;

        /*0xf229f4*/ ReqHousingSaveName(string token, int slot, string name);
    }

    class ResHousingSaveName : ServerProtocol.IResponseCommonV2
    {
        /*0xf24f7c*/ ResHousingSaveName();
    }

    class ReqHousingDelete : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int slot;

        /*0xf22658*/ ReqHousingDelete(string token, int slot);
    }

    class ResHousingDelete : ServerProtocol.IResponseCommonV2
    {
        /*0xf24f04*/ ResHousingDelete();
    }

    class ReqHousingObjSell : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string housingobjids;

        /*0xf22884*/ ReqHousingObjSell(string token, string housingobjids);
    }

    class ResHousingObjSell : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x38*/ string housinggroup;

        /*0xf24f4c*/ ResHousingObjSell();
    }

    class ReqHousingObjBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int gachaid;
        /*0x1c*/ int priceid;

        /*0xf22728*/ ReqHousingObjBuy(string token, int gachaid, int priceid);
    }

    class ResHousingObjBuy : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> housingobjs;

        /*0xf24f24*/ ResHousingObjBuy();
    }

    class ReqHousingObjDismiss : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string housingobjids;

        /*0xf227b0*/ ReqHousingObjDismiss(string token, string housingobjids);
    }

    class ResHousingObjDismiss : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x38*/ string housinggroup;

        /*0xf24f34*/ ResHousingObjDismiss();
    }

    class ReqHousingObjPurchase : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;
        /*0x20*/ string loc;
        /*0x28*/ int unsetid;

        /*0xf22830*/ ReqHousingObjPurchase(string token, int index, string loc, int unsetid);
    }

    class ResHousingObjPurchase : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SHousingObj housingobj;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x40*/ string housinggroup;

        /*0xf24f44*/ ResHousingObjPurchase();
    }

    class ReqHousingObjUpgrade : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int housingobjid;
        /*0x20*/ string feedobjids;

        /*0xf228bc*/ ReqHousingObjUpgrade(string token, int housingobjid, string feedobjids);
    }

    class ResHousingObjUpgrade : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHousingObj housingobj;
        /*0x28*/ System.Collections.Generic.List<int> feedidlist;

        /*0xf24f54*/ ResHousingObjUpgrade();
    }

    class ReqHousingObjComplete : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int housingobjid;
        /*0x1c*/ bool fast;

        /*0xf22768*/ ReqHousingObjComplete(string token, int housingobjid, bool fast);
    }

    class ResHousingObjComplete : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SHousingObj housingobj;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x40*/ string housinggroup;

        /*0xf24f2c*/ ResHousingObjComplete();
    }

    class ReqHousingObjLock : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int housingobjid;
        /*0x1c*/ bool locking;

        /*0xf227e8*/ ReqHousingObjLock(string token, int housingobjid, bool locking);
    }

    class ResHousingObjLock : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int housingobjid;
        /*0x24*/ bool locking;

        /*0xf24f3c*/ ResHousingObjLock();
    }

    class ReqHardCampaignBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf2202c*/ ReqHardCampaignBegin(string token, string heroids);
    }

    class ResHardCampaignBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;
        /*0x40*/ string hcampaign;

        /*0xf24e34*/ ResHardCampaignBegin();
    }

    class ReqHardCampaignFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf22090*/ ReqHardCampaignFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResHardCampaignFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ string hcampaign;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SProperty lvupreward;
        /*0x38*/ PTShare.Define.SCurrency currency;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x48*/ PTShare.Define.SPass newpass;
        /*0x50*/ PTShare.Define.SModeCount usemercenary;

        /*0xf24e44*/ ResHardCampaignFinish();
    }

    class ReqHardCampaignNextChapter : ServerProtocol.IRequestCommon
    {
        /*0xf2211c*/ ReqHardCampaignNextChapter(string token);
    }

    class ResHardCampaignNextChapter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int oldhchapter;
        /*0x24*/ int newhchapter;

        /*0xf24e54*/ ResHardCampaignNextChapter();
    }

    class ReqHardCampaignInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;

        /*0xf220e4*/ ReqHardCampaignInfo(string token, string campaign);
    }

    class ResHardCampaignInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> infos;

        /*0xf24e4c*/ ResHardCampaignInfo();
    }

    class ReqHardCampaignReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;
        /*0x20*/ long playerid;

        /*0xf22148*/ ReqHardCampaignReplay(string token, string campaign, long playerid);
    }

    class ResHardCampaignReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCampaignReplay replay;

        /*0xf24e5c*/ ResHardCampaignReplay();
    }

    class ReqHardCampaignBuddy : ServerProtocol.IRequestCommon
    {
        /*0xf22064*/ ReqHardCampaignBuddy(string token);
    }

    class ResHardCampaignBuddy : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> people;

        /*0xf24e3c*/ ResHardCampaignBuddy();
    }
}

namespace DefineHack
{
    enum LT_ABUSE_TYPE
    {
        INVALID = 0,
        SQLITE = 1,
        UNIT_STAT = 2,
        ASSET = 3,
        AI = 4,
        MEMORY = 5,
        SKILL_COOLTIME = 6,
        END = 7,
    }
}

namespace DataStorage
{
    class Manager
    {
        static /*0xde98a0*/ void Init();
        static /*0xde9950*/ void Reset(bool _with_user_info);
        static /*0xde99fc*/ void Logout();
    }

    class PrefsManager
    {
        static /*0x0*/ string mHashCode;

        static /*0x100e000*/ void Init();
        static /*0x100e07c*/ string GetPathHash();
        static /*0x100e0c8*/ void DeleteAll();
        static /*0x100e0d0*/ void DeleteKey(string key);
        static /*0x100e0d8*/ float GetFloat(string key, float defaultValue);
        static /*0x100e0e0*/ float GetFloat(string key);
        static /*0x100e0e8*/ int GetInt(string key, int defaultValue);
        static /*0x100e0f0*/ int GetInt(string key);
        static /*0x100e0f8*/ string GetString(string key, string defaultValue);
        static /*0x100e100*/ string GetString(string key);
        static /*0x100e108*/ bool HasKey(string key);
        static /*0x100e110*/ void Save();
        static /*0x100e118*/ void SetFloat(string key, float value);
        static /*0x100e120*/ void SetInt(string key, int value);
        static /*0x100e128*/ void SetString(string key, string value);
    }

    class Option_Game
    {
        static string OPTION_LANGUAGE = "option_language";
        static string OPTION_POWER_SAVEING = "option_power_saveing";
        static string OPTION_TOUCH_EFFECT = "option_touch_effect";
        static string OPTION_GACHA_NOTICE = "option_gacha_notice";
        static string OPTION_MOVIE_PLAY = "option_movie_play";
        static string OPTION_WHISPER_NOTICE = "option_whisper_notice";
        static string OPTION_HP_VIEW = "option_hp_view";
        static string OPTION_GUILDBATTLE_HP_VIEW = "option_guildbattle_hp_view";
        static string OPTION_GUILDBATTLE_BUFF_VIEW = "option_guildbattle_buff_view";
        static string OPTION_GUILDBATTLE_DAMAGE_VIEW = "option_guildbattle_damage_view";
        static string OPTION_COMBAT_TEXT_VIEW = "option_combat_text_view";
        static string USER_GUEST_ID = "option_user_guest";
        static string USER_LOGIN_PLATFORM = "option_user_platform";
        static string USER_PRIVACY_AGREE = "user_privacy_agree";
        static string USER_REGION_SERVER = "user_region_server";
        static string USER_CAMERA_PERMISSION = "user_camera_permission";
        static bool Default_POWER_SAVEING = true;
        static bool Default_TOUCH_EFFECT = true;
        static bool Default_GACHA_NOTICE = true;
        static bool Default_MOVIE_PLAY = true;
        static bool Default_WHISPER_NOTICE = true;
        static bool Default_HP_VIEW = true;
        static bool Default_COMBAT_TEXT_VIEW = true;
        static /*0x0*/ string Default_USER_GUESTID;
        static /*0x8*/ ServerRegion Default_USER_REGION_SERVER;

        static /*0x113df78*/ Option_Game();
        static /*0x113cd90*/ void ApplyOption();
        static /*0x113d1d8*/ void Reset(bool _with_language);
        static /*0x113d394*/ void SaveLanguage(LocaleLanguageType _type, bool _dont_apply, bool _force);
        static /*0x113d614*/ void SaveLanguage(PTShare.Define.LanguageCode _code, bool _dont_apply, bool _force);
        static /*0x113b59c*/ LocaleLanguageType LanguageType();
        static /*0x113d6a0*/ PTShare.Define.LanguageCode LanguageCode();
        static /*0x113d700*/ LocaleLanguageType LoadLanguage(bool _force, bool _resource);
        static /*0x113d2b4*/ LocaleLanguageType GetDefaultLanguageType();
        static /*0x113cdfc*/ bool LoadPowerSaving();
        static /*0x113bb40*/ void SavePowerSaving(bool _save);
        static /*0x113cea8*/ bool LoadTouchEffect();
        static /*0x113bfcc*/ void SaveTouchEffect(bool _save);
        static /*0x113cf54*/ bool LoadPlayVideo();
        static /*0x113bd58*/ void SavePlayVideo(bool _save);
        static /*0x113d000*/ bool LoadHpView();
        static /*0x113bc4c*/ void SaveHpView(bool _save);
        static /*0x113aa28*/ void SaveGuildBattleHpView(bool _save);
        static /*0x113a740*/ bool LoadGuildBattleHpView();
        static /*0x113aa90*/ void SaveGuildBattleBuffView(bool _save);
        static /*0x113a7ec*/ bool LoadGuildBattleBuffView();
        static /*0x113aaf8*/ void SaveGuildBattleDamageView(bool _save);
        static /*0x113a894*/ bool LoadGuildBattleDamageView();
        static /*0x113d0ac*/ bool LoadCombatTextView();
        static /*0x113be64*/ void SaveCombatTextView(bool _save);
        static /*0x113d158*/ string LoadUserGuestID();
        static /*0x113d7b4*/ void SaveUserRandomID(int length);
        static /*0x113d4bc*/ void SaveUserGuestID(string _guestID);
        static /*0x113d9bc*/ string LoadLoginPlatform();
        static /*0x113da68*/ void SaveLoginPlatform(PUBSDK.DefinePubSDK.PubLoginType _ePlatform);
        static /*0x113db18*/ void SavePrivacyAgree(bool enable);
        static /*0x113db70*/ bool LoadPrivacyAgree();
        static /*0x113d514*/ void SaveUserRegionServer(ServerRegion region);
        static /*0x113dbc8*/ string LoadUserRegionServer();
        static /*0x113dce4*/ ServerRegion LoadUserRegion();
        static /*0x113de18*/ void SaveUserCameraPermission(bool enable);
        static /*0x113de70*/ bool LoadUserCameraPermission();
        static /*0x113c0d8*/ void SaveGachaNotice(bool _enable);
        static /*0x113dec8*/ bool LoadGachaNotice();
        static /*0x113c1d4*/ void SaveWhisperNotice(bool _enable);
        static /*0x113df20*/ bool LoadWhisperNotice();

        class <>c
        {
            static /*0x0*/ DataStorage.Option_Game.<> <>9;
            static /*0x8*/ System.Func<char, System.Guid> <>9__50_0;

            static /*0x108c0fc*/ <>c();
            /*0x108c15c*/ <>c();
            /*0x108c164*/ System.Guid <SaveUserRandomID>b__50_0(char x);
        }
    }

    class Option_Sound
    {
        static string OPTION_BGM_VOLUME = "option_bgm_volume";
        static string OPTION_EFFECT_VOLUME = "option_effect_volume";
        static string OPTION_VOICE_VOLUME = "option_voice_volume";
        static float Default_BGMVolume = 1;
        static float Default_EffectVolume = 1;
        static float Default_VoiceVolume = 1;

        static /*0x113dfe8*/ void ApplyOption();
        static /*0x113e0e4*/ void Reset();
        static /*0x113e114*/ void SaveBGMVolume(float _volumn);
        static /*0x113e000*/ float LoadBGMVolume();
        static /*0x113e16c*/ void SaveEffectVolume(float _volumn);
        static /*0x113e04c*/ float LoadEffectVolume();
        static /*0x113e1c4*/ void SaveVoiceVolume(float _volumn);
        static /*0x113e098*/ float LoadVoiceVolume();
    }

    class OPTION_ALRAM
    {
        static string OPTION_PUSH_TIMEZONE = "option_push_timezone";
        static string OPTION_PUSH_GENERIC_TOPIC = "option_push_generic";
        static string OPTION_PUSH_GENERIC_NIGHT_TOPIC = "option_push_generic_night";
        static string OPTION_PUSH_ADVERTISE_TOPIC = "option_push_adverse";
        static string OPTION_PUSH_GENERIC_ENABLE = "option_push_generic_enable";
        static string OPTION_PUSH_GENERIC_NIGHT_ENABLE = "option_push_generic_night_enable";
        static string OPTION_PUSH_ADVERTISE_ENABLE = "option_push_adverse_enable";

        static /*0x2b53418*/ void ApplyOption();
        static /*0x2b5341c*/ void Reset();
        static /*0x2b53680*/ string LoadCurrentTimeZone();
        static /*0x2b536e0*/ void SaveCurrentTimeZone();
        static /*0x2b53780*/ System.ValueTuple<bool, string> LoadPushGeneric();
        static /*0x2b5389c*/ System.ValueTuple<bool, string> LoadPushGenericNight();
        static /*0x2b539b8*/ System.ValueTuple<bool, string> LoadPushAdvertise();
        static /*0x2b534a0*/ void SavePushGeneric(bool enable, string topic);
        static /*0x2b53540*/ void SavePushGenericNight(bool enable, string topic);
        static /*0x2b535e0*/ void SavePushAdverse(bool enable, string topic);
    }

    class DATA_PLAYINFO
    {
        static int DEFAULT_REPRESENTATIVE_TROOP_HEROID = 0;
        static string DEFAULT_LOCALIZE_MD5_KEY = "";
        static string Balance_MD5_KEY = "BalanceMD5Key";
        static string Localize_MD5_KEY = "localizeMD5";
        static string USER_TROOP_KEY = "option_data_playerinfo_user_key";
        static string USER_CAMPAIGN_MODE = "USER_CAMPAIGN_MODE";
        static /*0x0*/ System.Collections.Generic.List<int> m_listRepresentative;

        static /*0xf52370*/ DATA_PLAYINFO();
        static /*0xf51e90*/ void Reset();
        static /*0xf51fcc*/ void ApplyOption();
        static /*0xf5218c*/ void SaveLocalizeMD5(string _localizemd5);
        static /*0xf521e4*/ void SaveBalanceMD5(string _balancemd5);
        static /*0xf5223c*/ string LoadBalanceMD5();
        static /*0xf52024*/ System.Collections.Generic.List<int> LoadRepresentative();
        static /*0xf5229c*/ bool LoadCampaignModeIsHard();
        static /*0xf51eec*/ void SaveCampaignModeIsHard(bool _isHard);
    }

    class DATA_TUTORIAL
    {
        static /*0xf52dd0*/ long GetTutorialBitData();
        static /*0xf52e88*/ void SetTutorialBitData(long bitData);
        static /*0xf52f3c*/ void ClearTutorial(int tutorialIndex);
        static /*0xf52fcc*/ int LoadTutorial(int tutorialIndex);
    }

    class DATA_BATTLE
    {
        static string GIZMO = "gizmo";
        static string GIZMO_ON = "gizmo_on";
        static string SHOW_STAT = "show_stat";
        static string SHOW_AVOID = "show_avoid";
        static string SHOW_HAST = "show_hast";
        static string AUTO = "auto";
        static string FAST = "fast";

        static /*0xf4fbb8*/ void ApplyOption();
        static /*0xf4fbbc*/ void SetAuto(bool _bAuto);
        static /*0xf4fcc0*/ bool GetAuto();
        static /*0xf4fdbc*/ void SetFast(int _nFastPhase);
        static /*0xf4fec0*/ int GetFast();
        static /*0xf4ffb4*/ void SetTroop(DataStorage.DATA_BATTLE.TroopModeType _eModeType, Battle.HeroSelectValue[] _arrHeroSelect);
        static /*0xf502c8*/ System.Collections.Generic.List<Battle.HeroSelectValue> GetTroop(DataStorage.DATA_BATTLE.TroopModeType _eModeType);
        static /*0xf505f0*/ string GetTroopToString(DataStorage.DATA_BATTLE.TroopModeType _eModeType);

        enum TroopModeType
        {
            NONE = 0,
            CAMPAIN = 1,
            CAMPAIN_CLEAR = 2,
            DEMO = 3,
            TOWER = 4,
            TOWER_FIRE = 5,
            TOWER_WIND = 6,
            TOWER_NATURE = 7,
            TOWER_WATER = 8,
            ARENA = 9,
            ARENA_HIGH = 10,
            MAZE = 11,
            GUILD_HUNT = 12,
            GUILD_BATTLE = 13,
            DUNGEON = 14,
            WORLDBOSS = 15,
            PVE_RANKING = 16,
            EVENT_BOSS = 17,
            LAST = 18,
        }

        class <>c
        {
            static /*0x0*/ DataStorage.DATA_BATTLE.<> <>9;
            static /*0x8*/ System.Func<Battle.HeroSelectValue, string> <>9__13_0;
            static /*0x10*/ System.Func<Battle.HeroSelectValue, string> <>9__13_1;
            static /*0x18*/ System.Func<string, Battle.HeroSelectValue> <>9__14_0;

            static /*0x10740f4*/ <>c();
            /*0x1074154*/ <>c();
            /*0x107415c*/ string <SetTroop>b__13_0(Battle.HeroSelectValue s);
            /*0x107417c*/ string <SetTroop>b__13_1(Battle.HeroSelectValue s);
            /*0x107419c*/ Battle.HeroSelectValue <GetTroop>b__14_0(string s);
        }
    }

    class DATA_GACHA
    {
        static string CURRENT_PROPERTY = "current_property";

        static /*0xf51760*/ void ApplyOption();
        static /*0xf51840*/ void Reset();
        static /*0xf517f0*/ void SetCurrentProperty(PropertyType _type);
        static /*0xf51850*/ PropertyType GetCurrentProperty();
        static /*0xf51848*/ void ClearCurrentProperty();
    }

    class DATA_CHATTING
    {
        static string READ_IN_CHATCOUNT = "read_in_chatcount{0}";

        static /*0xf50b5c*/ int GetReadInChattingCount(string _uniqueKey);
        static /*0xf50bb8*/ long GetReadInChattingTime(string _uniqueKey);
        static /*0xf50cd8*/ void SetReadInChattingCount(string _uniqueKey, int _count);
        static /*0xf50e1c*/ void AddReadInChattingCount(string _uniqueKey, int _count);
    }

    class DATA_CASHSHOP
    {
        static string PACKAGE_NEW_ITEM_REDDOT_KEY = "CashShopNewItemReddot{0}";
        static string PACKAGE_LIMITED_LAST_START_DATETIME_KEY = "LimitedLastStartDateTime";

        static /*0xf50980*/ bool GetNewItemReddot(DefineCashShop.CashShopTabType tabType);
        static /*0xf50a18*/ string GetLastStartDateTime();
        static /*0xf50a78*/ void SetLastStartDateTime(string startDateTime);
        static /*0xf50ac8*/ void SetNewItemReddot(DefineCashShop.CashShopTabType tabType, bool value);
    }

    class DATA_MAZE
    {
        static string SHOW_HEAL_TILE = "ShowHealTilePopup";
        static string SHOW_REVIVE_TILE = "ShowReviveTilePopup";
        static string MAZE_ZOOM_VALUE = "MazeZoomValue";
        static string MAZE_FAST = "MazeFast";

        static /*0xf51b8c*/ void Reset();
        static /*0xf51bfc*/ bool IsShowHealTile();
        static /*0xf51c54*/ bool IsShowReviveTile();
        static /*0xf51cac*/ float GetZoomValue();
        static /*0xf51cf8*/ bool GetFast();
        static /*0xf51d50*/ void SetZoomValue(float value);
        static /*0xf51da8*/ void SetFast(bool fast);
        static /*0xf51df8*/ void DontShowHealPopup();
        static /*0xf51e44*/ void DontShowRevivePopup();
    }

    class DATA_PLAYRECORD
    {
        static string PLAYRECORD_FIRST_REVIEW = "play_record_first_review";
        static string PLAYRECORD_REVIEW = "play_record_review";
        static string PLAYRECORD_REVIEW_COUNT = "play_record_review_count";
        static string PLAYRECORD_IMAGEBANNER_ENABLE = "play_record_imagebanner_enable";
        static string PLAYRECORD_NOTICE = "play_record_notice_";

        static /*0xf523f8*/ void Reset();
        static /*0xf524d4*/ void SetReadReview(bool enable);
        static /*0xf5252c*/ void SetReadFirstReview(bool enable);
        static /*0xf52584*/ void AddReviewCount(int count);
        static /*0xf525e4*/ int GetReviewCount();
        static /*0xf52470*/ void ClearReviewCount();
        static /*0xf52630*/ bool GetReadReview();
        static /*0xf52688*/ bool GetReadFirstReview();
        static /*0xf5240c*/ void ClearReview();
        static /*0xf526e0*/ void SetIgnoreImageBanner();
        static /*0xf527b0*/ bool GetEnableImageBanner();
        static /*0xf5296c*/ void SetReadNotice(int id, bool read);
        static /*0xf529f0*/ bool HasNotice(int id);
        static /*0xf52a60*/ bool GetReadNotice(int id);
    }

    class DATA_GUILD
    {
        static string GUILD_LAST_LEVEL = "GuildLastLevel";
        static string SHOW_GUILD_LEVELUP_EFFECT = "IsGuildLevelUp";
        static string GUILDWAR_CONTENTHELP = "guildwarcontenthelp";

        static /*0xf5189c*/ void Reset();
        static /*0xf519c0*/ bool IsShowGuildLevelupEffect();
        static /*0xf518c0*/ void SetLevel(int level);
        static /*0xf51a18*/ void UpdateLevel(int level);
        static /*0xf51918*/ void EnableGuildLevelupEffect(bool enable);
        static /*0xf51a90*/ bool IsShowGuildWarContentHelp();
        static /*0xf51970*/ void SetShowGuildWarContentHelp(bool enable);
    }

    class DATA_DUNGEON
    {
        static string defaultKey = "ShowDungeonPopup";
        static string zoomKey = "DungeonZoomValue";
        static string miniMapZoomKey = "DungeonMiniMapZoomValue";
        static string clearKey = "ShowDungeonClearPopup{0}";
        static string openDoorKey = "ShowOpenDoor{0}";
        static string FastKey = "DungeonFast";

        static /*0xf51098*/ void Reset();
        static /*0xf51180*/ float GetZoomValue();
        static /*0xf511cc*/ void SetZoomValue(float value);
        static /*0xf51224*/ float GetMinimapZoomValue();
        static /*0xf51270*/ void SetMiniMapZoomValue(float value);
        static /*0xf512c8*/ bool IsShowTile(DefineDungeon.TILETYPE tileType);
        static /*0xf5139c*/ void DontShowPopup(DefineDungeon.TILETYPE tileType);
        static /*0xf51468*/ bool IsShowClearPopup(int dungeonID);
        static /*0xf51500*/ bool IsFast();
        static /*0xf51558*/ void SetFast(bool isFast);
        static /*0xf515a8*/ void DontShowClearPopup(int dungeonID);
        static /*0xf51638*/ bool IsShowOpenDoor(int dungeonID);
        static /*0xf516d0*/ void DontShowOpenDoor(int dungeonID);
    }

    class DATA_RACE
    {
        static string RACE_LASTED_REPLAY = "race_lasted_replay";

        static /*0xf52b90*/ void Reset();
        static /*0xf52b98*/ void SetLastedReplay(int nSeq);
        static /*0xf52bf0*/ int GetLastedReplay();
    }

    class DATA_RESET_EQUIP
    {
        static string RESET_EQUIP_ID = "ResetEquipID";
        static string RESET_FACTION_ID = "ResetFactionID";

        static /*0xf52c3c*/ void Reset();
        static /*0xf52cac*/ void SetResetEquipData(int id, int factionId);
        static /*0xf52d2c*/ bool IsDontSelectionEquip(int id);
        static /*0xf52d88*/ int GetFaction();
    }

    class DATA_WORLDBOSS
    {
        static string SHOW_BANNER_KEY = "ShowWorldBossBanner{0}";
        static string SHOW_TUTORIAL_KEY = "ShowWorldBossTutorial{0}";

        static /*0xf5305c*/ bool IsShowBanner(int id);
        static /*0xf530f4*/ void DontShowBanner(int id);
        static /*0xf53184*/ bool IsShowTutorial(int id);
        static /*0xf5321c*/ void DontShowTutorial(int id);
    }

    class DATA_HOUSING
    {
        static string ZOOM_VALUE_KEY = "HousingZoomValue";

        static /*0xf51ae8*/ void SetZoomValue(float value);
        static /*0xf51b40*/ float GetZoomValue();
    }

    class DATA_ABILITY
    {
        static string DEFAULT_ABILITY_LOCK_KEY = "Ability_Lock{0}_{1}";
        static string WAIT_CONFIRM_KEY = "AbilityWaitConfirm";
        static string WAIT_CONFIRM_USER_KEY = "AbilityWaitConfirmUserKey";
        static string SELECT_HERO_KEY = "AbilitySelectHeroKey";
        static string CONFIRM_ABILITY_COUNT_KEY = "AbilityConfirmCount";
        static string DEFAFULT_CONFIRM_ABILITY_KEY = "AbilityConfirm{0}";
        static string ALARM_KEY = "AbilityAlarmKey";

        static /*0xf4f3f0*/ void SetLock(int heroId, int slot, bool abilityLock);
        static /*0xf4f4a8*/ bool GetLock(int heroId, int slot);
        static /*0xf4f55c*/ bool IsWaitConfirm();
        static /*0xf4f680*/ int GetSelecHeroTableId();
        static /*0xf4f6cc*/ void SetSelectHeroTableId(int heroTableId);
        static /*0xf4f71c*/ System.Collections.Generic.List<int> GetConfirmAbilityList();
        static /*0xf4f864*/ void SetConfirmData(int heroTableId, System.Collections.Generic.List<int> abilitys);
        static /*0xf4fa68*/ void EndConfirm();
        static /*0xf4fb10*/ void SetAlarm(bool enable);
        static /*0xf4fb60*/ bool IsOnAlarm();
    }

    class DATA_DISMISS
    {
        static string DEFAULT_KEY = "{0}_DissmissSelect";

        static /*0xf50f6c*/ bool IsSelect(int tableId);
        static /*0xf51004*/ void SetSelect(int tableId, bool select);
    }

    class DATA_PVERANK
    {
        static string DIFFICULTY_KEY = "PveDifficulty";

        static /*0xf52af4*/ int GetDifficult();
        static /*0xf52b40*/ void SetDifficult(int difficult);
    }
}

namespace Singleton
{
    class AbleInstance
    {
        static /*0x0*/ bool isAble;

        static /*0x1209ed8*/ AbleInstance();
    }

    namespace Component
    {
        class SingletonComponent : UnityEngine.MonoBehaviour
        {
            static /*0x0*/ bool _isProcessing_Release;
            static /*0x8*/ System.Collections.Generic.List<Singleton.Component.SingletonComponent> singletonList;
            static /*0x10*/ UnityEngine.GameObject DontDestroyParent;
            /*0x18*/ string initInstanceError;

            static /*0x150e61c*/ SingletonComponent();
            static /*0x150dca8*/ void PushSingleton(Singleton.Component.SingletonComponent _obj);
            static /*0x150df34*/ bool InitSingletons();
            static /*0x150e0d8*/ void ReleaseSingletons();
            static /*0x150dde4*/ void InitInstanceDontDestroyParent();
            static /*0x150e4b0*/ void RenewDontDestroyParent();
            /*0x150e5c8*/ SingletonComponent();
            void AwakeSingleton();
            bool Initialize();
            void ReleaseSingleton();
        }

        class SingletonComponent<T> : Singleton.Component.SingletonComponent
        {
            static /*0x0*/ T m_instance;
            /*0x0*/ bool _initialized;

            static bool IsQuitting();
            static T get_Instance();
            SingletonComponent();
            bool get_isInitialized();
            bool Initialize();
            void AwakeSingleton();
            void ReleaseSingleton();
            void AwakeInstance();
            bool InitInstance();
            void ReleaseInstance();
            void Awake();
            void OnApplicationQuit();
        }
    }

    namespace Data
    {
        class SingletonData
        {
            static /*0x0*/ System.Collections.Generic.List<Singleton.Data.SingletonData> singletonList;
            /*0x10*/ string initInstanceError;

            static /*0x150ead4*/ SingletonData();
            static /*0x150e6b8*/ void PushSingleton(Singleton.Data.SingletonData _obj);
            static /*0x150e780*/ bool InitSingletons();
            static /*0x150e8e8*/ void ReleaseSingletons();
            /*0x150ea80*/ SingletonData();
            bool Initialize();
            void ReleaseSingleton();
        }

        class SingletonData<T> : Singleton.Data.SingletonData
        {
            static /*0x0*/ T m_instance;
            /*0x0*/ bool _initialized;

            static SingletonData();
            static T get_Instance();
            SingletonData();
            bool get_IsInitialized();
            bool Initialize();
            void ReleaseSingleton();
            bool InitInstance();
            void ReleaseInstance();
        }
    }
}

namespace PTShare
{
    namespace Define
    {
        class Ver
        {
            static /*0x0*/ string Tag;
            static /*0x8*/ int PROTOCOL_VERSION;
            static /*0x10*/ string ZipPw;

            static /*0x10d2860*/ Ver();
        }

        enum ErrorCode
        {
            HTTPERROR = -404,
            FAILED = -1,
            SUCCESS = 0,
            HTTP_PARAMETER_FORMAT = 1,
            WRONG_GOOGLE_TOKEN = 2,
            WRONG_GOOGLE_LOGIN_RESPONSE_DATA = 3,
            WRONG_GOOGLE_APPID = 4,
            FACEBOOK1 = 5,
            FACEBOOK2 = 6,
            ALREADY_PLAYER_EXIST = 7,
            ALREADY_GOOGLEID_EXIST = 8,
            ALREADY_FACEBOOKID_EXIST = 9,
            NOT_ADMIN_ACCOUNT = 10,
            NO_HERO = 11,
            DUPLICATE_HERO = 12,
            WRONG_ID = 13,
            MAX_MY_FRIEND_SLOT = 14,
            MAX_TARGET_FRIEND_SLOT = 15,
            ALREADY_REQUESTED = 16,
            ALREADY_FRIEND = 17,
            WRONG_GAMETOKEN = 18,
            CANNOT_ALLOW_CONNECT = 19,
            DUPLICATE_CONNECT = 20,
            CHATCORE_FIRST = 21,
            MONGO_DB_ERROR = 22,
            EXPIRED_TOKEN = 23,
            NO_PLAYER = 24,
            NO_SEND_SHIPPOINT = 25,
            ALREADY_TAKE_SHIPPOINT = 26,
            ALREADY_SEND_SHIPPOINT = 27,
            ALREADY_HAVE_GUILD = 28,
            NAME_DUPLICATE = 29,
            MAX_GUILD_REQUEST_SLOT = 30,
            DONT_HAVE_GUILD = 31,
            NOT_ENOUGH_GOLD = 32,
            NOT_ENOUGH_STAR = 33,
            NOT_ENOUGH_HEROEXP = 34,
            NO_MATCH_KEY = 35,
            EXCEED_CHAT_MAX_LENGTH = 36,
            EXCEED_NICKNAME_MAX_LENGTH = 37,
            REDIS_DB_ERROR = 38,
            FAIL_LEAVE_GROUP = 39,
            FAIL_ENTER_GROUP = 40,
            WRONG_GOOGLE_PURCHASE_TOKEN = 41,
            TARGET_NO_PLAYER = 42,
            NOT_FRIEND = 43,
            ALREADY_IN_GUILD = 44,
            NOT_MY_HERO = 45,
            WRONG_EQUIPID = 46,
            WRONG_HEROID = 47,
            NOT_MY_EQUIP = 48,
            ALREADY_EQUIPED = 49,
            ALREADY_OTHER_HERO_EQUIPED = 50,
            ALREADY_UNEQUIPED = 51,
            MAX_STAR = 52,
            MAX_GRADE = 53,
            WRONG_ITEM_TABLEID = 54,
            NOT_ENOUGH_ITEM_COUNT = 55,
            NO_ACCOUNT = 56,
            MY_ACCOUNT_ID = 57,
            ALREADY_REGISTERED_COUPON = 58,
            WRONG_BATTLETYPE = 59,
            TOO_LONGTIME = 60,
            NO_DEFENSE_DECK = 61,
            ERROR_APPLE_VERIFY = 62,
            WRONG_MAILID = 63,
            ALREADY_RECVED = 64,
            NOT_RECVED_YET = 65,
            NO_ATTACHED = 66,
            ALREADY_DELETED = 67,
            NOT_ENOUGH_FRIENDSHIP = 68,
            NOT_ENOUGH_CRYSTAL = 69,
            NO_AUTH = 70,
            WRONG_GUILDID = 71,
            GUILD_CLOSED = 72,
            NOT_ENOUGH_LEVEL = 73,
            ALREADY_TAKED = 74,
            NOT_ENOUGH_COUNT = 75,
            ATTACHED_MAIL = 76,
            ALREADY_READ = 77,
            ALREADY_EXCHANGED = 78,
            NOT_ENOUGH_QUESTPOINT = 79,
            EXCEED_NICKNAME_MIN_LENGTH = 80,
            WRONG_SERVER_INDEX = 81,
            SAME_SERVER_INDEX = 82,
            NOT_ALLOW_NICKNAME = 83,
            NOT_ENOUGH_DISMISSCOIN = 84,
            MAX_HERO_SLOT = 85,
            NOT_ENOUGH_HERO_SLOT = 86,
            MAX_LEVEL = 87,
            WRONG_FEED_QUANTITY = 88,
            WRONG_FEED_FACTION = 89,
            DIFFERENT_FEED_TABLEID = 90,
            WRONG_FEED_GRADE = 91,
            UNUSABLE_ITEM = 92,
            NOT_ENOUGH_HEROCARD = 93,
            WRONG_FACTION = 94,
            WRONG_SLOTID = 95,
            NO_ARCHIVE_DATA = 96,
            WRONG_USE_COUNT = 97,
            WRONG_NUMBER = 98,
            WRONG_COUNT = 99,
            SERVER_EXCEPTION = 100,
            WRONG_CHOICE_COUNT = 101,
            WRONG_CHOICE_ID = 102,
            WRONG_HERO_TABLEID = 103,
            EXCESS_HERO_ID = 104,
            TOO_LOW_LEVEL = 105,
            NO_COUNT = 106,
            NO_NEXT_YET = 107,
            MAX_MY_REQUEST_FRIEND_SLOT = 108,
            MAX_HIS_REQUEST_FRIEND_SLOT = 109,
            NO_RESET_EQUIP = 110,
            NO_PROMOTE_EQUIP_A = 111,
            WRONG_CLASS_TYPE = 112,
            NO_REINFORCE_EQUIP = 113,
            NO_PROMOTE_EQUIP_B = 114,
            NO_PROMOTE_EQUIP_C = 115,
            MAX_TODAY_RECV_COUNT = 116,
            MAX_TODAY_SEND_COUNT = 117,
            MAX_TODAY_RECV_SEND_COUNT = 118,
            BLACKLIST = 119,
            ALREADY_LEND = 120,
            NOT_MY_LEND = 121,
            MAX_RENT_COUNT = 122,
            NO_RENT_REQUESTED = 123,
            NOT_RECENT_FRIEND = 124,
            HTTP_PARAMETER_FORMAT_B = 125,
            HTTP_PARAMETER_FORMAT_C = 126,
            ONLY_ALLOW_ONE_HERO_RENT = 127,
            FAIL_RENT_AUTH = 128,
            ALREADY_USED_MERCENARY = 129,
            ALREADY_BLACKLIST = 130,
            WRONG_FLOOR = 131,
            ALREADY_CLEARED = 132,
            NOT_CLEARED_YET = 133,
            NO_BEGIN = 134,
            WRONG_STATISTICS = 135,
            NO_BOSS_CAMPAIGN = 136,
            INCOMPLETE_QUEST = 137,
            NO_MYSELF = 138,
            DIFFERENT_CHAPTER = 139,
            UNLOCK_CONTENT = 140,
            DIFFERENT_TAG = 141,
            NOT_COMPLETED_YET = 142,
            NO_MORE_QUEST = 143,
            WRONG_PACKAGEID = 144,
            NO_PURCHASE_TIME = 145,
            NO_PURCHASE_OVER_COUNT = 146,
            ALREADY_SUBSCRIPTION = 147,
            NOBODY = 148,
            ERROR_GOOGLE_VERIFY = 149,
            SEASON_REST_TIME = 150,
            NO_CHOICE = 151,
            ALREADY_CONFIRMED = 152,
            WRONG_MAZE_TILE = 153,
            NO_BATTLE_DEADHERO = 154,
            NO_HEAL_TARGET = 155,
            NO_ENEMY_DATA = 156,
            SLOT_CLEANING = 157,
            SYNCHRONIZING_LEVEL = 158,
            NOT_PUSHED_HERO = 159,
            NOT_ENOUGH_MAZECOIN = 160,
            LOW_RESONANCE_LEVEL = 161,
            NO_ENHANCE_ITEM = 162,
            RELOGIN = 163,
            NO_NORMAL_TILE = 164,
            ALREADY_LAST = 165,
            BALANCE_TABLE_ERROR = 166,
            LOCKING_HERO = 167,
            WRONG_BORDER_ID = 168,
            WRONG_BACKGROUND_ID = 169,
            NO_BLACKLIST = 170,
            SYSTEM_ERROR = 171,
            NO_SSS_FILE = 172,
            NO_PASS_PREMIUM = 173,
            NOT_ALLOW_RECV = 174,
            NOT_EXPIRED_YET = 175,
            EXPIRED_EVENT = 176,
            WRONG_IP = 177,
            MAX_RESONANCE_SLOT = 178,
            ALREADY_USED_UID = 179,
            ALREADY_USED = 180,
            WRONG_PURCHSAGE_STATE = 181,
            WRONG_CONSUMPTION_STATE = 182,
            NOT_YET_OPEN = 183,
            CLOSED = 184,
            NO_SERIAL = 185,
            REMOVED_ACCOUNT = 186,
            NO_QUITTING = 187,
            NOT_START_YET = 188,
            NO_MORE_STAGE = 189,
            EXPIRED_GOODS = 190,
            ALREADY_PREMIUM = 191,
            NO_GROWTH_PURCHASE = 192,
            LOW_CLIENT_VERSION = 193,
            WRONG_LANGUAGE_CODE = 194,
            TARGET_HAS_NO_ARENAPOINT = 195,
            ALREADY_USED_NICKNAME = 196,
            MAINTENANCE = 197,
            WRONG_HPMP = 198,
            DIFF_REPLAY_VERSION = 199,
            NEED_FIREBASE_JSON = 200,
            NEED_PURCHASE_JSON = 201,
            HACK_DETECTED = 202,
            NOT_ENOUGH_GUILDCOIN = 203,
            NOT_ENOUGH_ARENACOIN = 204,
            NOT_ENOUGH_WORLDCOIN = 205,
            NO_TIER_YET = 206,
            NO_WORLDARENA_DATA = 207,
            MAX_SUPPORTER = 208,
            NO_NEED_SUPPORTER = 209,
            ALREADY_OTHER_SUPPORTING = 210,
            NOT_ENOUGH_FACTION = 211,
            NOT_ENOUGH_GRADE = 212,
            NOT_ENOUGH_SUPPORTER = 213,
            NO_DISPATCH = 214,
            NO_RECEIVE_DATA = 215,
            NO_REVERT_GRADE = 216,
            FULL_GUILD_MEMBER = 217,
            SOMEONE_EXIST = 218,
            OUT_OF_LOCATION = 219,
            NO_CHANGED = 220,
            FULL_GUILD_SUBMASTER = 221,
            FULL_GUILD_GENERAL = 222,
            NO_JOIN_REQUEST = 223,
            WRONG_CREATE_VALUE = 224,
            WRONG_UPDATE_VALUE = 225,
            LIMIT_GUILD_RESIGNUP = 226,
            NO_WASTE = 227,
            NOT_MY_GROUPID = 228,
            INVALID_GROUPID = 229,
            NO_MORE_HUNTING_COUNT = 230,
            NOT_OPENED = 231,
            ALREADY_OPENED = 232,
            NOT_ENOUGH_CONTRIBUTION = 233,
            NO_DAMAGE_RECORD = 234,
            YET_SUPPORTING = 235,
            NO_MEMBER = 236,
            SOMEONE_CAMP_EXISTS = 237,
            NOT_SET_AUTH_YET = 238,
            NOT_VOTE_TIME = 239,
            ALREADY_VOTED = 240,
            NO_VOTE = 241,
            NO_REWARD = 242,
            EXCEED_GUILDNAME_MIN_LENGTH = 243,
            EXCEED_GUILDNAME_MAX_LENGTH = 244,
            COMPLETE_ALL_TODAY = 245,
            HIGH_CLIENT_VERSION = 246,
            NO_TILE = 247,
            NO_PLAYING_DATA = 248,
            ALREADY_HAVE = 249,
            NOT_ENOUGH_HAMMER = 250,
            NOT_ENOUGH_DUNGEONCOIN = 251,
            JAIL_HERO = 252,
            NEED_TWO_OVER_HEROES = 253,
            NO_LOWEST_HERO = 254,
            WRONG_MOVE = 255,
            NOT_ENOUGH_DOORKEY = 256,
            MUST_FIGHT = 257,
            WRONG_DAY_OF_WEEK = 258,
            EXCEED_DAILY_CHALLENGE_TOWER = 259,
            NOT_ENOUGH_CURRENY = 260,
            NOT_ENOUGH_GUILDPOINT = 261,
            NO_REVENGE = 262,
            ALREADY_SAME_HERO = 263,
            NOT_ENOUGH_GUILDWAR_TICKET = 264,
            DEFAULT_TACTIC = 265,
            DONT_HAVE_TACTIC = 266,
            INVALID_FORMAT = 267,
            DATA_CHANGED = 268,
            EXCEED_ENTRY_COUNT = 269,
            TARGET_HAS_NO_GUILDWARPOINT = 270,
            GUILDWAR_BATTLE_TERM = 271,
            NO_DUAL_CAPTAIN = 272,
            NOT_PURCHASE_GUILDMEMBER = 273,
            ALREADY_ATTACK_FORM = 274,
            ALREADY_DEFENSE_FORM = 275,
            ALREADY_UNLOCKED = 276,
            MAX_STEP = 277,
            NOT_ENOUGH_STEP = 278,
            EXPIRED_BORDER = 279,
            EXPIRED_BACKGROUND = 280,
            EXPIRED_GUILDBORDER = 281,
            TIME_ERROR = 282,
            ON_BROKEN_TILE = 283,
            ALREADY_PLACED_HERO = 284,
            NO_PLACE_DEADHERO = 285,
            SEASON_CHANGED = 286,
            NOT_ENOUGH_PVECOIN1 = 287,
            NOT_ENOUGH_PVECOIN2 = 288,
            GRADE_OVERLAP = 289,
            NO_HOUSE_YET = 290,
            NOT_USED_COUPON = 291,
            NOT_ALLOWED = 292,
            HIDE_HERO_MAX = 293,
            NO_PURCHASE_APPLE = 294,
        }

        class GTrigger
        {
            static /*0x0*/ string ARENA_BATTLE;
            static /*0x8*/ string ARENA_BATTLE_WIN;
            static /*0x10*/ string ASCEND;
            static /*0x18*/ string EQUIPMENT_UPGRADE;
            static /*0x20*/ string FRIENDSHIP;
            static /*0x28*/ string GACHA;
            static /*0x30*/ string MAZE_CLEAR;
            static /*0x38*/ string SHOP_BUY;
            static /*0x40*/ string TAKE_IDLE;
            static /*0x48*/ string TRY;
            static /*0x50*/ string CAMPAIGN_CLEAR;
            static /*0x58*/ string HARDCAMPAIGN_CLEAR;
            static /*0x60*/ string TOWER_CLEAR;
            static /*0x68*/ string TOWER_SPIRIT_CLEAR;
            static /*0x70*/ string TOWER_FIRE_CLEAR;
            static /*0x78*/ string TOWER_WIND_CLEAR;
            static /*0x80*/ string TOWER_NATURAL_CLEAR;
            static /*0x88*/ string TOWER_WATER_CLEAR;
            static /*0x90*/ string USER_LEVEL;
            static /*0x98*/ string CHAPTER_CLEAR;
            static /*0xa0*/ string HARDCHAPTER_CLEAR;
            static /*0xa8*/ string PVERANKING_CLEAR;
            static /*0xb0*/ string DISPATCH;
            static /*0xb8*/ string HERO_LEVELUP;
            static /*0xc0*/ string VOTE_RACE;
            static /*0xc8*/ string CLEAN_GUILDROOM;
            static /*0xd0*/ string PURCHASE_STORE;
            static /*0xd8*/ string PURCHASE_GOODS;
            static /*0xe0*/ string FIRST_PURCHASE_STORE;
            static /*0xe8*/ string FIRST_PURCHASE_GOODS;
            static /*0xf0*/ string GUILDBOSS_BATTLE_FINISH;
            static /*0xf8*/ string SPEND;
            static /*0x100*/ string FURNITURE_BUY;
            static /*0x108*/ string FURNITURE_GACHA;
            static /*0x110*/ string FURNITURE_GET;
            static /*0x118*/ string LOGIN;
            static /*0x120*/ string HOUSING;
            static /*0x128*/ string TAKE;

            static /*0x10b1f20*/ GTrigger();
        }

        class AppPushTopic
        {
            static /*0x0*/ string ALWAYS;
            static /*0x8*/ string NODAWN;
            static /*0x10*/ string ADVERTISE;

            static /*0xee0384*/ AppPushTopic();
        }

        class ChatId
        {
            static string Area = "Area";
            static string Lang = "Lang";
            static string Guild = "Guild";
            static string Talk = "Talk";
        }

        class SizeInfo
        {
            static /*0x0*/ int MAX_UTF8_ALLCHAR_LENGTH;
            static /*0x4*/ int MAX_UTF8_ENGLISH_LENGTH;
            static /*0x8*/ int MAX_GROUPID_HAVE_COUNT;
            static /*0xc*/ int MAX_GROUPID_LETTER_LENGTH;
            static /*0x10*/ int MAX_GROUPID_BYTE_LENGTH;
            static /*0x14*/ int MAX_TOKEN_LETTER_LENGTH;
            static /*0x18*/ int MAX_TOKEN_BYTE_LENGTH;
            static /*0x1c*/ int MAX_CHAT_LETTER_LENGTH;
            static /*0x20*/ int MAX_CHAT_BYTE_LENGTH;
            static /*0x24*/ int MIN_NICKNAME_LETTER_LENGTH;
            static /*0x28*/ int MAX_NICKNAME_LETTER_LENGTH;
            static /*0x2c*/ int MIN_GUILDNAME_LETTER_LENGTH;
            static /*0x30*/ int MAX_GUILDNAME_LETTER_LENGTH;
            static /*0x34*/ int MAX_NICKNAME_BYTE_LENGTH;
            static /*0x38*/ int DATETIME_LENGTH;
            static /*0x3c*/ int MAX_PAST_CHAT_COUNT;
            static /*0x40*/ int MAX_PAST_ROOM_COUNT;
            static /*0x44*/ int RECV_BUFFER_BYTE_LENGTH;
            static /*0x48*/ int MIN_RECV_BUFFER_BYTE_LENGTH;
            static /*0x4c*/ int MESSAGE_STRUCT_LENGTH;

            static /*0x150eb5c*/ SizeInfo();
        }

        class GameValue
        {
            static /*0x0*/ int MAX_HP_RATIO;
            static /*0x4*/ int MAX_MP_RATIO;
            static /*0x8*/ float CONVERT_VALUE_HP;
            static /*0xc*/ float CONVERT_VALUE_MP;
            static /*0x10*/ int SCORE_HACK;
            static /*0x14*/ int SCORE_DOUBT;
            static /*0x18*/ int SCORE_PASS;
            static /*0x1c*/ int EXEMPTED_COUNT;

            static /*0xecff2c*/ GameValue();
        }

        class SSSFile
        {
            static /*0x0*/ sbyte[] Header;
            static /*0x8*/ sbyte[] HeaderV2;
            static /*0x10*/ sbyte[] HeaderV3;

            static /*0x129f2e0*/ SSSFile();
        }

        class Data
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<string, int> HeroGradeMap;
            static /*0x8*/ System.Collections.Generic.Dictionary<int, int> BountyStarGradeMap;
            static /*0x10*/ System.Collections.Generic.Dictionary<string, int> EquipGradeMap;
            static /*0x18*/ System.Collections.Generic.Dictionary<int, string> PveGradeMap;
            static /*0x20*/ System.Collections.Generic.Dictionary<string, int> FactionMap;
            static /*0x28*/ System.Collections.Generic.Dictionary<string, string> CompanyMap;
            static /*0x30*/ System.Collections.Generic.Dictionary<string, int> HousingGradeMap;
            static /*0x38*/ System.Collections.Generic.Dictionary<string, int> AbilityGradeMap;
            static /*0x40*/ System.Collections.Generic.Dictionary<int, string> HeroGradeRevMap;
            static /*0x48*/ System.Collections.Generic.Dictionary<int, string> EquipGradeRevMap;
            static /*0x50*/ System.Collections.Generic.Dictionary<int, string> FactionRevMap;
            static /*0x58*/ System.Collections.Generic.Dictionary<int, string> HousingGradeRevMap;
            static /*0x60*/ System.Collections.Generic.Dictionary<int, string> AbilityGradeRevMap;

            static /*0xf5ccfc*/ Data();

            class <>c
            {
                static /*0x0*/ PTShare.Define.Data.<> <>9;

                static /*0x10762fc*/ <>c();
                /*0x107635c*/ <>c();
                /*0x1076364*/ int <.cctor>b__13_0(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x10763a4*/ string <.cctor>b__13_1(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x10763e4*/ int <.cctor>b__13_2(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x1076424*/ string <.cctor>b__13_3(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x1076464*/ int <.cctor>b__13_4(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x10764a4*/ string <.cctor>b__13_5(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x10764e4*/ int <.cctor>b__13_6(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x1076524*/ string <.cctor>b__13_7(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x1076564*/ int <.cctor>b__13_8(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x10765a4*/ string <.cctor>b__13_9(System.Collections.Generic.KeyValuePair<string, int> v);
            }
        }

        enum Wealth
        {
            CURRENCY = 0,
            ITEM = 1,
            HERO = 2,
            EQUIP = 3,
            USEREXP = 4,
            VIPPOINT = 5,
            RESETPOINT = 6,
            SKIN = 7,
            ARTIFACT = 8,
            DUNGEONITEM = 9,
            FRAME = 10,
            FURNITURE = 11,
        }

        enum Currency
        {
            GOLD = 0,
            STAR = 1,
            FSHIP = 2,
            CRYSTAL = 3,
            HERO_EXP = 4,
            DISMISS = 5,
            HEROCARD = 6,
            MAZECOIN = 7,
            GUILDCOIN = 8,
            ARENACOIN = 9,
            WORLDCOIN = 10,
            DUNGEONCOIN = 11,
            PVECOIN1 = 12,
            PVECOIN2 = 13,
        }

        enum ResetPointType
        {
            DAILYQUESTPOINT = 0,
            WEEKLYQUESTPOINT = 1,
            ROYALEXP = 2,
            BATTLEEXP = 3,
        }

        enum EventCheckType
        {
            NULL = -1,
            DAY = 0,
            FIXDAY = 1,
            CONTINUE = 2,
        }

        enum BillingType
        {
            NONE = 0,
            GOOGLE = 1,
            APPLE = 2,
            ONESTORE = 3,
        }

        enum Gender
        {
            NONE = 0,
            MALE = 1,
            FEMALE = 2,
        }

        enum Relation
        {
            NO_RELATION = 0,
            FRIEND = 1,
            GUILD = 2,
            FRIEND_GUILD = 3,
        }

        enum QuestType
        {
            DAILY = 0,
            WEEKLY = 1,
            MAIN = 2,
        }

        enum ClassType
        {
            KNIGHT = 0,
            RANGER = 1,
            WARRIOR = 2,
            MAGE = 3,
            SUPPORTER = 4,
        }

        enum FriendShipRecvState
        {
            NO_RECV = 0,
            RECVED = 1,
            TAKED = 2,
        }

        enum FriendShipSendState
        {
            NO_SEND = 0,
            SENDED = 1,
        }

        enum RankingBoardRewardState
        {
            INCOMPLETE = 0,
            NO_RECV = 1,
            RECVED = 2,
        }

        enum GuildAcceptType
        {
            IMMEDIATELY = 0,
            CERTIFICATION = 1,
            IMMPOSSIBLE = 2,
        }

        enum EquipParts
        {
            NONE = -1,
            HELMET = 0,
            ARMOR = 1,
            WEAPON = 2,
            BOOTS = 3,
            SIGNATURE = 4,
            ARTIFACT = 5,
            MAX = 6,
        }

        enum EquipmentType
        {
            NONE = -1,
            INT = 0,
            DEX = 1,
            STR = 2,
        }

        enum Faction
        {
            NONE = 0,
            FIRE = 1,
            WIND = 2,
            NATURAL = 3,
            WATER = 4,
            LIGHT = 5,
            DARK = 6,
        }

        enum BattleType
        {
            CAMPAIGN = 0,
            TOWER = 1,
            MAZE = 2,
            ARENA = 3,
            GUILDBOSS = 4,
            DUNGEON = 5,
            WORLDBOSS = 6,
            PVERANKING = 7,
            EVENTBOSS = 8,
            HARDCAMPAIGN = 9,
        }

        enum ServerCheatKey
        {
            UNKNOWN = 0,
            HELP = 1,
            ALLHERO = 2,
            BOUNTYLV = 3,
            BOUNTYTEAMRESET = 4,
            CURRENCY = 5,
            FORMAT = 6,
            FUTURE = 7,
            GACHA = 8,
            GACHACOUNT = 9,
            GAIN = 10,
            GENEQUIP = 11,
            GENHERO = 12,
            GENITEM = 13,
            GENMAIL = 14,
            GETEQUIP = 15,
            CALLEQUIP = 16,
            GETITEM = 17,
            GETUNIT = 18,
            GMOFF = 19,
            HEROSLOT = 20,
            IDLE = 21,
            JUMP = 22,
            JUMPT = 23,
            JUMPFIRE = 24,
            JUMPWIND = 25,
            JUMPNATURAL = 26,
            JUMPWATER = 27,
            MOVELAST = 28,
            NEWMAZE = 29,
            NEXTHEAL = 30,
            NEXTREVIVAL = 31,
            FASTMAZE = 32,
            NOW = 33,
            VERIFY = 34,
            VERIFY_REPLAY = 35,
            GOLD = 36,
            STAR = 37,
            FSHIP = 38,
            CRYSTAL = 39,
            HERO_EXP = 40,
            DISMISS = 41,
            HEROCARD = 42,
            MAZECOIN = 43,
            GUILDCOIN = 44,
            ARENACOIN = 45,
            WORLDCOIN = 46,
            DUNGEONCOIN = 47,
            PVECOIN1 = 48,
            PVECOIN2 = 49,
            EXPORT = 50,
            IMPORT = 51,
            PUSH = 52,
            QUIT = 53,
            QUITCANCEL = 54,
            TUTORIALSKIP = 55,
            PASSEXP = 56,
            JOINWORLDARENA = 57,
            GUILDPOINT = 58,
            PASSPURCHASE = 59,
            TRAINING = 60,
            ARTIFACT = 61,
            SHOWWELLCOME = 62,
            RLEVEL = 63,
            DARAK = 64,
            UNEQUIPSIGNATURE = 65,
            USERLEVEL = 66,
            NEWRUNGAME = 67,
            GENFURNITURE = 68,
            NEWHOUSING = 69,
            SETHERO = 70,
            SETEQUIP = 71,
            NEWRELATION = 72,
            NEWABILITY = 73,
            SETABILITY = 74,
            CPLV = 75,
            SETWORLDARENAPOINT = 76,
            JUMPH = 77,
        }

        enum ChannelType
        {
            GROUP = 0,
            WHISPER = 1,
        }

        enum MainQuestStatus
        {
            NOT_COMPLETE = 0,
            COMPLETED = 1,
            INDISTINGUISHABLE = 2,
            NO_MORE = 3,
        }

        enum GuildWarAuth
        {
            NONE = 0,
            DEFEND = 1,
            ATTACK = 2,
        }

        enum LanguageCode
        {
            KR = 0,
            EN = 1,
            JP = 2,
            CNS = 3,
            CNT = 4,
            FR = 5,
            DE = 6,
            RU = 7,
            TH = 8,
            VI = 9,
            AR = 10,
            ES = 11,
            IN = 12,
            IT = 13,
            BR = 14,
        }

        enum REWARD_STATE
        {
            NONE = -1,
            FREE = 0,
            CHARGE = 1,
            ALL = 2,
        }

        enum ArenaSubType
        {
            NONE = 0,
            GENERAL = 1,
            WORLD = 2,
        }

        enum BountyType
        {
            SOLO = 0,
            TEAM = 1,
        }

        enum CommunityType
        {
            None = 0,
            Facebook = 1,
            Discord = 2,
            NaverCafe = 3,
            Twitter = 4,
            Lobi = 5,
            End = 6,
        }

        enum GuildWarPosition
        {
            None = 0,
            General = 1,
            AttackCaptain = 2,
            Attacker = 3,
            DefendCaptain = 4,
            Defender = 5,
        }

        enum LegionStatus
        {
            ATTACK = 0,
            DEFENSE = 1,
            NORMAL = 2,
            USING = 3,
        }

        enum MazeEnemies
        {
            NONE = 0,
            SEMI = 1,
            BOSS = 2,
        }

        enum HousingObjState
        {
            NONE = 0,
            LEVEL_UP = 1,
        }

        enum HousingGachaPriceType
        {
            GachaCost_x1 = 0,
            GachaCost_x10 = 1,
            Gachaitem_x1 = 2,
            Gachaitem_x10 = 3,
        }

        enum ContentEffectType
        {
            None = 0,
            Time = 1,
            Gold = 2,
            Jewel = 3,
            Hero_exp = 4,
            Hero_inven = 5,
            Crystal = 6,
            Ruby = 7,
            Equipment = 8,
            Tombstone = 9,
            Element_Growth = 10,
            Element_Evolution = 11,
            Element_Element = 12,
            FurnitureLevelUpSpeed = 13,
            WasteSpeed = 14,
            Furniture_Upgrade = 15,
            Furniture_Sell = 16,
            Maze_gold = 17,
            Maze_heroexp = 18,
            Bounty_Reward = 19,
            Guildboss_gold = 20,
            CrystalRoom = 21,
            Arena_Reward_Jewel = 22,
            Arena_Reward_Gold = 23,
            WorldArena_Reward_Jewel = 24,
            WorldArena_Reward_Gold = 25,
            WorldArena_Reward_trainning = 26,
            Bounty_Solo_gold = 27,
            Bounty_Solo_jewel = 28,
            Bounty_Solo_tiara = 29,
            Bounty_team_gold = 30,
            Bounty_team_jewel = 31,
            Bounty_team_tiara = 32,
        }

        class ItemId
        {
            static int Jewel = 1;
            static int PrincessTiara = 203;
            static int AbilityGoldCube = 12;
            static int AbilityRubyCube = 13;
            static int AbilityCrystalCube = 14;
            static int AbilityDiamondCube = 15;
        }

        enum LockAbilityType
        {
            NONE = 1,
            FIRST = 2,
            SECOND = 4,
            THIRD = 8,
        }

        enum AbilityOptionType
        {
            hp_up = 1,
            atk_up = 2,
            def_up = 3,
            dodg_up = 4,
            acc_up = 5,
            rghp_up = 6,
            shp_up = 7,
            hp_up_per = 8,
            atk_up_per = 9,
            def_up_per = 10,
            level_up_hp_up = 11,
            level_up_atk_up = 12,
            level_up_def_up = 13,
            debuff_atk_dmg_up = 14,
            buff_time_up = 15,
            mp_heal_up = 16,
            faction_dmg_penalty_down = 17,
            bossmonster_dmg = 18,
            skill_cooltime_down = 19,
            sig_level_atk_up_per = 20,
            sig_level_def_up_per = 21,
            sig_level_hp_up_per = 22,
            crir_up = 23,
            cridmg_up = 24,
            cridmg_down = 25,
            ccr_up = 26,
            hp_restore_up_per = 27,
            mp_restore_up_per = 28,
        }

        enum AbilityGrade
        {
            A = 1,
            S = 2,
            SS = 3,
            SSS = 4,
        }

        class SCurrency
        {
            /*0x10*/ long gold;
            /*0x18*/ long star;
            /*0x20*/ long heroexp;
            /*0x28*/ long fship;
            /*0x30*/ long crystal;
            /*0x38*/ long dismiss;
            /*0x40*/ long herocard;
            /*0x48*/ long mazecoin;
            /*0x50*/ long guildcoin;
            /*0x58*/ long arenacoin;
            /*0x60*/ long worldcoin;
            /*0x68*/ long dungeoncoin;
            /*0x70*/ long pvecoin1;
            /*0x78*/ long pvecoin2;

            static /*0x129730c*/ PTShare.Define.SCurrency op_Addition(PTShare.Define.SCurrency p1, PTShare.Define.SCurrency p2);
            static /*0x1297498*/ PTShare.Define.SCurrency op_Subtraction(PTShare.Define.SCurrency p1, PTShare.Define.SCurrency p2);
            static /*0x12976e0*/ PTShare.Define.SCurrency op_Multiply(PTShare.Define.SCurrency p1, int mul);
            /*0x1296594*/ SCurrency();
            /*0x129661c*/ SCurrency(System.Collections.Generic.IEnumerable<PTShare.Define.SCurrency> datas);
            /*0x1296fe4*/ SCurrency(long _gold, long _star, long _heroexp, long _fship, long _crystal, long _dismiss, long _herocard, long _mazecoin, long _guildcoin, long _arenacoin, long _worldcoin, long _dungeoncoin, long _pvecoin1, long _pvecoin2);
            /*0x1297094*/ SCurrency(PTShare.Define.SCurrency input);
            /*0x129659c*/ bool IsEmpty();
            /*0x1297134*/ void Add(PTShare.Define.Currency type, long amount);
            /*0x1297224*/ long GetAmount(PTShare.Define.Currency type);

            class <>c
            {
                static /*0x0*/ PTShare.Define.SCurrency.<> <>9;
                static /*0x8*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_0;
                static /*0x10*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_1;
                static /*0x18*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_2;
                static /*0x20*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_3;
                static /*0x28*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_4;
                static /*0x30*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_5;
                static /*0x38*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_6;
                static /*0x40*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_7;
                static /*0x48*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_8;
                static /*0x50*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_9;
                static /*0x58*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_10;
                static /*0x60*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_11;
                static /*0x68*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_12;
                static /*0x70*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_13;

                static /*0xf9c3a8*/ <>c();
                /*0xf9c408*/ <>c();
                /*0xf9c410*/ long <.ctor>b__16_0(PTShare.Define.SCurrency d);
                /*0xf9c428*/ long <.ctor>b__16_1(PTShare.Define.SCurrency d);
                /*0xf9c440*/ long <.ctor>b__16_2(PTShare.Define.SCurrency d);
                /*0xf9c458*/ long <.ctor>b__16_3(PTShare.Define.SCurrency d);
                /*0xf9c470*/ long <.ctor>b__16_4(PTShare.Define.SCurrency d);
                /*0xf9c488*/ long <.ctor>b__16_5(PTShare.Define.SCurrency d);
                /*0xf9c4a0*/ long <.ctor>b__16_6(PTShare.Define.SCurrency d);
                /*0xf9c4b8*/ long <.ctor>b__16_7(PTShare.Define.SCurrency d);
                /*0xf9c4d0*/ long <.ctor>b__16_8(PTShare.Define.SCurrency d);
                /*0xf9c4e8*/ long <.ctor>b__16_9(PTShare.Define.SCurrency d);
                /*0xf9c500*/ long <.ctor>b__16_10(PTShare.Define.SCurrency d);
                /*0xf9c518*/ long <.ctor>b__16_11(PTShare.Define.SCurrency d);
                /*0xf9c530*/ long <.ctor>b__16_12(PTShare.Define.SCurrency d);
                /*0xf9c548*/ long <.ctor>b__16_13(PTShare.Define.SCurrency d);
            }
        }

        class SImageBanner
        {
            /*0x10*/ string imageurl;
            /*0x18*/ string linkurl;

            /*0x1298910*/ SImageBanner();
        }

        class SGuildWarReward
        {
            /*0x10*/ int rank;
            /*0x14*/ int index;

            /*0x1298414*/ SGuildWarReward();
        }

        class SNotice
        {
            /*0x10*/ int id;
            /*0x18*/ string imageurl;
            /*0x20*/ string title;
            /*0x28*/ string body;
            /*0x30*/ System.DateTime begin;
            /*0x38*/ System.DateTime expire;

            /*0x129a304*/ SNotice();
        }

        class SAttend
        {
            /*0x10*/ int eventid;
            /*0x14*/ int groupid;
            /*0x18*/ int accdays;
            /*0x1c*/ int chaindays;
            /*0x20*/ int maxchaindays;
            /*0x28*/ System.Collections.Generic.List<int> fixdays;

            /*0x12964b4*/ SAttend();
        }

        class SAttendReward
        {
            /*0x10*/ int rewardid;
            /*0x14*/ int index;

            /*0x12964bc*/ SAttendReward();
        }

        class SInstant
        {
            /*0x10*/ int index;
            /*0x18*/ string trigger;
            /*0x20*/ System.DateTime expire;

            /*0x1298918*/ SInstant();
        }

        class SPass
        {
            /*0x10*/ int eventid;
            /*0x14*/ int resetpoint;
            /*0x18*/ bool premium;
            /*0x20*/ System.DateTime expire;

            /*0x129a30c*/ SPass();
        }

        class SPassReward
        {
            /*0x10*/ int index;
            /*0x14*/ int state;

            /*0x129a370*/ SPassReward();
        }

        class STroop
        {
            /*0x10*/ long index;
            /*0x18*/ string name;
            /*0x20*/ string heroids;

            /*0x129f46c*/ STroop();
        }

        class SBook
        {
            /*0x10*/ int tableid;
            /*0x14*/ int maxgrade;
            /*0x18*/ bool recved;

            /*0x1296514*/ SBook();
        }

        class SArenaTarget : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long cp;
            /*0x38*/ int arenapoint;

            /*0x12964a4*/ SArenaTarget();
        }

        class SArenaRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long cp;
            /*0x38*/ int arenapoint;

            /*0x1296484*/ SArenaRanker();
        }

        class SWorldArenaTarget : PTShare.Define.SWorldArenaRanker
        {
            /*0x58*/ int result;

            /*0x129fd9c*/ SWorldArenaTarget();
        }

        class SWorldArenaRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int rank;
            /*0x34*/ int tier;
            /*0x38*/ long cp;
            /*0x40*/ int score;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> heroes;
            /*0x50*/ System.Collections.Generic.List<int> blinds;

            /*0x129fd8c*/ SWorldArenaRanker();
        }

        class SWorldArenaRewards
        {
            /*0x10*/ PTShare.Define.SProperty rewards;
            /*0x18*/ int beforeTier;
            /*0x1c*/ int afterTier;
            /*0x20*/ int beforeRank;
            /*0x24*/ int afterRank;

            /*0x129fd94*/ SWorldArenaRewards();
        }

        class SWorldBossRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int cp;
            /*0x34*/ int step;
            /*0x38*/ long damage;

            /*0x129fdac*/ SWorldBossRanker();
        }

        class SRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int score;
            /*0x38*/ PTShare.Define.SGuildMini guild;

            /*0x129f290*/ SRanker();
        }

        class SLongRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long score;
            /*0x38*/ PTShare.Define.SGuildMini guild;

            /*0x1299a20*/ SLongRanker();
        }

        class SRankerGuild : PTShare.Define.SGuildMini
        {
            /*0x30*/ long score;

            /*0x129f298*/ SRankerGuild();
        }

        class SWorldBoss
        {
            /*0x10*/ bool clear;
            /*0x18*/ long damage;
            /*0x20*/ int count;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> missions;

            /*0x129fda4*/ SWorldBoss();
        }

        class SGoods
        {
            /*0x10*/ string packageid;
            /*0x18*/ int purchasecount;

            /*0x1298050*/ SGoods();
        }

        class SSubscriptGoods
        {
            /*0x10*/ string packageid;
            /*0x18*/ int subscriptioncount;

            /*0x129f43c*/ SSubscriptGoods();
        }

        class SReplay
        {
            /*0x10*/ string replayid;
            /*0x18*/ int randomseed;
            /*0x20*/ string arg;
            /*0x28*/ PTShare.Define.SVerifySide left;
            /*0x30*/ PTShare.Define.SVerifySide right;
            /*0x38*/ string playdata;

            /*0x129f2b0*/ SReplay();
        }

        class SProperty
        {
            /*0x10*/ int userexp;
            /*0x14*/ int vippoint;
            /*0x18*/ PTShare.Define.SCurrency currency;
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SEquip> equips;
            /*0x30*/ System.Collections.Generic.List<PTShare.Define.SSkin> skins;
            /*0x38*/ System.Collections.Generic.List<PTShare.Define.SLittleHero> heroes;
            /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passpoints;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SArtifact> artifacts;
            /*0x50*/ System.Collections.Generic.List<PTShare.Define.SFrame> frames;
            /*0x58*/ System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> housingobjs;

            static /*0x129a7a0*/ PTShare.Define.SProperty Create(System.Collections.Generic.IEnumerable<PTShare.Define.SProperty> list);
            static /*0x129c414*/ System.Collections.Generic.List<System.ValueTuple<PTShare.Define.Wealth, string, string>> Parse(string rewards);
            static /*0x129d460*/ PTShare.Define.SProperty WithBonus(string rewards, int percent);
            static /*0x129dae0*/ PTShare.Define.SProperty op_Addition(PTShare.Define.SProperty p1, PTShare.Define.SProperty p2);
            static /*0x129e2e0*/ PTShare.Define.SProperty op_Subtraction(PTShare.Define.SProperty p1, PTShare.Define.SProperty p2);
            static /*0x129eb24*/ PTShare.Define.SProperty op_Multiply(PTShare.Define.SProperty p1, int mul);
            /*0x129a638*/ SProperty();
            /*0x129a8e0*/ SProperty(string rewards, int mul);
            /*0x129a640*/ bool IsEmpty();
            /*0x129ae74*/ void AddEquip(int tableid, int bonusid);
            /*0x129af5c*/ void SubEquip(int tableid, int bonusid);
            /*0x129b08c*/ void AddEquip(PTShare.Define.SEquip equip);
            /*0x129b138*/ void AddHero(int tableid, int grade, int level);
            /*0x129b228*/ void SubHero(int tableid, int grade, int level);
            /*0x129b36c*/ void AddItem(int tableid, int count);
            /*0x129b530*/ void SubItem(int tableid, int count);
            /*0x129b6f8*/ void AddItem(PTShare.Define.SItem item);
            /*0x129b714*/ void AddSkin(int tableid);
            /*0x129b7f8*/ void AddArtifact(int tableid, int level);
            /*0x129b8d8*/ void SubArtifact(int tableid, int level);
            /*0x129ba08*/ void AddSkin(PTShare.Define.SSkin skin);
            /*0x129bab4*/ void SubSkin(PTShare.Define.SSkin skin);
            /*0x129bbe0*/ void AddCurrency(PTShare.Define.Currency type, long amount);
            /*0x129bc68*/ void AddPassPoint(string pointname, int point);
            /*0x129be2c*/ void SubPassPoint(string pointname, int point);
            /*0x129bff4*/ void AddFrame(string type, int id);
            /*0x129c0d8*/ void SubFrame(string type, int id);
            /*0x129c20c*/ void AddHousingObj(int id);
            /*0x129c2e8*/ void SubHousingObj(int id);
            /*0x129a920*/ void Parse(string rewards, int mul);
            /*0x129c750*/ void AddReward(string rewards, int amount);
            /*0x129cd8c*/ void Merge(PTShare.Define.SProperty data);
            /*0x129d228*/ int GetItemCount(int itemid);
            /*0x129d32c*/ int GetJewelCount();
            /*0x129f1a4*/ void <Merge>b__37_0(PTShare.Define.SEquip v);
            /*0x129f1c4*/ void <Merge>b__37_1(PTShare.Define.SLittleHero v);
            /*0x129f1e4*/ void <Merge>b__37_2(PTShare.Define.SItem v);
            /*0x129f200*/ void <Merge>b__37_3(PTShare.Define.SSkin v);
            /*0x129f204*/ void <Merge>b__37_4(PTShare.Define.SPassPoint v);
            /*0x129f224*/ void <Merge>b__37_5(PTShare.Define.SArtifact v);
            /*0x129f240*/ void <Merge>b__37_6(PTShare.Define.SFrame v);
            /*0x129f260*/ void <Merge>b__37_7(PTShare.Define.SMiniHousingObj v);

            class <>c__DisplayClass13_0
            {
                /*0x10*/ PTShare.Define.SProperty data;

                /*0xf9c760*/ <>c__DisplayClass13_0();
                /*0xf9c768*/ void <Create>b__0(PTShare.Define.SProperty f);
            }

            class <>c__DisplayClass16_0
            {
                /*0x10*/ int tableid;
                /*0x14*/ int bonusid;

                /*0xf9c794*/ <>c__DisplayClass16_0();
                /*0xf9c79c*/ bool <SubEquip>b__0(PTShare.Define.SEquip f);
            }

            class <>c__DisplayClass19_0
            {
                /*0x10*/ int tableid;
                /*0x14*/ int grade;
                /*0x18*/ int level;

                /*0xf9c7d8*/ <>c__DisplayClass19_0();
                /*0xf9c7e0*/ bool <SubHero>b__0(PTShare.Define.SLittleHero f);
            }

            class <>c__DisplayClass20_0
            {
                /*0x10*/ int tableid;

                /*0xf9c82c*/ <>c__DisplayClass20_0();
                /*0xf9c834*/ bool <AddItem>b__0(PTShare.Define.SItem i);
            }

            class <>c__DisplayClass21_0
            {
                /*0x10*/ int tableid;

                /*0xf9c858*/ <>c__DisplayClass21_0();
                /*0xf9c860*/ bool <SubItem>b__0(PTShare.Define.SItem i);
            }

            class <>c__DisplayClass25_0
            {
                /*0x10*/ int tableid;
                /*0x14*/ int level;

                /*0xf9c884*/ <>c__DisplayClass25_0();
                /*0xf9c88c*/ bool <SubArtifact>b__0(PTShare.Define.SArtifact f);
            }

            class <>c__DisplayClass27_0
            {
                /*0x10*/ PTShare.Define.SSkin skin;

                /*0xf9c8c8*/ <>c__DisplayClass27_0();
                /*0xf9c8d0*/ bool <SubSkin>b__0(PTShare.Define.SSkin f);
            }

            class <>c__DisplayClass29_0
            {
                /*0x10*/ string pointname;

                /*0xf9c900*/ <>c__DisplayClass29_0();
                /*0xf9c908*/ bool <AddPassPoint>b__0(PTShare.Define.SPassPoint i);
            }

            class <>c__DisplayClass30_0
            {
                /*0x10*/ string pointname;

                /*0xf9c92c*/ <>c__DisplayClass30_0();
                /*0xf9c934*/ bool <SubPassPoint>b__0(PTShare.Define.SPassPoint i);
            }

            class <>c__DisplayClass32_0
            {
                /*0x10*/ string type;
                /*0x18*/ int id;

                /*0xf9c958*/ <>c__DisplayClass32_0();
                /*0xf9c960*/ bool <SubFrame>b__0(PTShare.Define.SFrame f);
            }

            class <>c__DisplayClass34_0
            {
                /*0x10*/ int id;

                /*0xf9c9b4*/ <>c__DisplayClass34_0();
                /*0xf9c9bc*/ bool <SubHousingObj>b__0(PTShare.Define.SMiniHousingObj f);
            }

            class <>c
            {
                static /*0x0*/ PTShare.Define.SProperty.<> <>9;
                static /*0x8*/ System.Func<char, bool> <>9__36_0;
                static /*0x10*/ System.Func<PTShare.Define.SItem, bool> <>9__39_0;
                static /*0x18*/ System.Func<char, bool> <>9__40_0;

                static /*0xf9c678*/ <>c();
                /*0xf9c6d8*/ <>c();
                /*0xf9c6e0*/ bool <AddReward>b__36_0(char w);
                /*0xf9c710*/ bool <GetJewelCount>b__39_0(PTShare.Define.SItem v);
                /*0xf9c730*/ bool <Parse>b__40_0(char w);
            }

            class <>c__DisplayClass38_0
            {
                /*0x10*/ int itemid;

                /*0xf9c9e0*/ <>c__DisplayClass38_0();
                /*0xf9c9e8*/ bool <GetItemCount>b__0(PTShare.Define.SItem v);
            }

            class <>c__DisplayClass42_0
            {
                /*0x10*/ PTShare.Define.SProperty val;

                /*0xf9ca0c*/ <>c__DisplayClass42_0();
                /*0xf9ca14*/ void <op_Addition>b__0(PTShare.Define.SEquip v);
                /*0xf9ca40*/ void <op_Addition>b__1(PTShare.Define.SEquip v);
                /*0xf9ca6c*/ void <op_Addition>b__2(PTShare.Define.SLittleHero v);
                /*0xf9ca9c*/ void <op_Addition>b__3(PTShare.Define.SLittleHero v);
                /*0xf9cacc*/ void <op_Addition>b__4(PTShare.Define.SItem v);
                /*0xf9caf8*/ void <op_Addition>b__5(PTShare.Define.SItem v);
                /*0xf9cb24*/ void <op_Addition>b__6(PTShare.Define.SSkin v);
                /*0xf9cb40*/ void <op_Addition>b__7(PTShare.Define.SSkin v);
                /*0xf9cb5c*/ void <op_Addition>b__8(PTShare.Define.SPassPoint v);
                /*0xf9cb88*/ void <op_Addition>b__9(PTShare.Define.SPassPoint v);
                /*0xf9cbb4*/ void <op_Addition>b__10(PTShare.Define.SArtifact v);
                /*0xf9cbe0*/ void <op_Addition>b__11(PTShare.Define.SArtifact v);
                /*0xf9cc0c*/ void <op_Addition>b__12(PTShare.Define.SFrame v);
                /*0xf9cc38*/ void <op_Addition>b__13(PTShare.Define.SFrame v);
                /*0xf9cc64*/ void <op_Addition>b__14(PTShare.Define.SMiniHousingObj v);
                /*0xf9cc8c*/ void <op_Addition>b__15(PTShare.Define.SMiniHousingObj v);
            }

            class <>c__DisplayClass43_0
            {
                /*0x10*/ PTShare.Define.SProperty val;

                /*0xf9ccb4*/ <>c__DisplayClass43_0();
                /*0xf9ccbc*/ void <op_Subtraction>b__0(PTShare.Define.SEquip v);
                /*0xf9cce8*/ void <op_Subtraction>b__1(PTShare.Define.SEquip v);
                /*0xf9cd14*/ void <op_Subtraction>b__2(PTShare.Define.SLittleHero v);
                /*0xf9cd44*/ void <op_Subtraction>b__3(PTShare.Define.SLittleHero v);
                /*0xf9cd74*/ void <op_Subtraction>b__4(PTShare.Define.SItem v);
                /*0xf9cda0*/ void <op_Subtraction>b__5(PTShare.Define.SItem v);
                /*0xf9cdcc*/ void <op_Subtraction>b__6(PTShare.Define.SSkin v);
                /*0xf9cde8*/ void <op_Subtraction>b__7(PTShare.Define.SSkin v);
                /*0xf9ce04*/ void <op_Subtraction>b__8(PTShare.Define.SPassPoint v);
                /*0xf9ce30*/ void <op_Subtraction>b__9(PTShare.Define.SPassPoint v);
                /*0xf9ce5c*/ void <op_Subtraction>b__10(PTShare.Define.SArtifact v);
                /*0xf9ce88*/ void <op_Subtraction>b__11(PTShare.Define.SArtifact v);
                /*0xf9ceb4*/ void <op_Subtraction>b__12(PTShare.Define.SFrame v);
                /*0xf9cee0*/ void <op_Subtraction>b__13(PTShare.Define.SFrame v);
                /*0xf9cf0c*/ void <op_Subtraction>b__14(PTShare.Define.SMiniHousingObj v);
                /*0xf9cf34*/ void <op_Subtraction>b__15(PTShare.Define.SMiniHousingObj v);
            }

            class <>c__DisplayClass44_0
            {
                /*0x10*/ int mul;
                /*0x18*/ PTShare.Define.SProperty val;

                /*0xf9cf5c*/ <>c__DisplayClass44_0();
                /*0xf9cf64*/ void <op_Multiply>b__0(PTShare.Define.SEquip v);
                /*0xf9d09c*/ void <op_Multiply>b__1(PTShare.Define.SLittleHero v);
                /*0xf9d1d4*/ void <op_Multiply>b__2(PTShare.Define.SItem v);
                /*0xf9d208*/ void <op_Multiply>b__3(PTShare.Define.SPassPoint v);
                /*0xf9d240*/ void <op_Multiply>b__4(PTShare.Define.SArtifact v);
                /*0xf9d26c*/ void <op_Multiply>b__5(PTShare.Define.SFrame v);
                /*0xf9d3a4*/ void <op_Multiply>b__6(PTShare.Define.SSkin v);
                /*0xf9d4dc*/ void <op_Multiply>b__7(PTShare.Define.SMiniHousingObj v);
            }

            class <>c__DisplayClass44_1
            {
                /*0x10*/ PTShare.Define.SEquip v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals1;

                /*0xf9d094*/ <>c__DisplayClass44_1();
                /*0xf9d614*/ void <op_Multiply>b__8(int f);
            }

            class <>c__DisplayClass44_2
            {
                /*0x10*/ PTShare.Define.SLittleHero v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals2;

                /*0xf9d1cc*/ <>c__DisplayClass44_2();
                /*0xf9d64c*/ void <op_Multiply>b__9(int f);
            }

            class <>c__DisplayClass44_3
            {
                /*0x10*/ PTShare.Define.SFrame v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals3;

                /*0xf9d39c*/ <>c__DisplayClass44_3();
                /*0xf9d684*/ void <op_Multiply>b__10(int f);
            }

            class <>c__DisplayClass44_4
            {
                /*0x10*/ PTShare.Define.SSkin v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals4;

                /*0xf9d4d4*/ <>c__DisplayClass44_4();
                /*0xf9d6bc*/ void <op_Multiply>b__11(int f);
            }

            class <>c__DisplayClass44_5
            {
                /*0x10*/ PTShare.Define.SMiniHousingObj v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals5;

                /*0xf9d60c*/ <>c__DisplayClass44_5();
                /*0xf9d6f0*/ void <op_Multiply>b__12(int f);
            }
        }

        class SGrowth
        {
            /*0x10*/ string packageid;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SGrowthRow> achieves;

            /*0x1298058*/ SGrowth();
        }

        class SRelationMini
        {
            /*0x10*/ int index;
            /*0x14*/ int level;

            /*0x129f2a8*/ SRelationMini();
        }

        class SDungeonCommon
        {
            /*0x10*/ int dungeonid;
            /*0x18*/ System.Collections.Generic.List<string> coinrewardrecvs;
            /*0x20*/ System.Collections.Generic.List<string> condrewardrecvs;

            /*0x1297820*/ SDungeonCommon();
        }

        class SDungeon : PTShare.Define.SDungeonCommon
        {
            /*0x28*/ float progress;
            /*0x2c*/ int makecoin;

            /*0x1297818*/ SDungeon();
        }

        class SDungeonPlay : PTShare.Define.SDungeonCommon
        {
            /*0x28*/ int posx;
            /*0x2c*/ int posy;
            /*0x30*/ int doorkey;
            /*0x34*/ int hammer;
            /*0x38*/ bool mustbattle;
            /*0x40*/ PTShare.Define.SDungeonBuff buff;
            /*0x48*/ System.Collections.Generic.Dictionary<string, int> randomtileids;
            /*0x50*/ System.Collections.Generic.Dictionary<string, int> jailheroids;
            /*0x58*/ System.Collections.Generic.Dictionary<string, int> wallheroids;
            /*0x60*/ System.Collections.Generic.List<string> opentiles;
            /*0x68*/ System.Collections.Generic.List<string> usedtiles;
            /*0x70*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
            /*0x78*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;
            /*0x80*/ System.Collections.Generic.List<PTShare.Define.SMate> mates;
            /*0x88*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;
            /*0x90*/ string bombtile;
            /*0x98*/ int bombcount;

            /*0x1297838*/ SDungeonPlay();
        }

        class SDungeonBuff
        {
            /*0x10*/ int atk;
            /*0x14*/ int def;

            /*0x1297828*/ SDungeonBuff();
        }

        class SAbility
        {
            /*0x10*/ int index;
            /*0x14*/ int valueindex;
            /*0x18*/ int grade;

            /*0x129645c*/ SAbility();
        }

        class SAbilityGroup
        {
            /*0x10*/ int tableid;
            /*0x14*/ int abilitygrade;
            /*0x18*/ System.Collections.Generic.List<int> abilitys;

            /*0x1296464*/ SAbilityGroup();
        }

        class SVerifyHousingObj
        {
            /*0x10*/ int tableid;
            /*0x14*/ int lv;

            /*0x129fd74*/ SVerifyHousingObj();
        }

        class SStatBonus
        {
            /*0x10*/ int traininglv;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SRelationMini> relations;
            /*0x20*/ PTShare.Define.SDungeonBuff dungeonbuff;
            /*0x28*/ int resonancecount;
            /*0x30*/ string housinggroup;

            /*0x129f434*/ SStatBonus();
            /*0x129f3f8*/ void Clone(PTShare.Define.SStatBonus clone);
        }

        class SGrowthRow
        {
            /*0x10*/ int index;
            /*0x14*/ int score;
            /*0x18*/ bool recved;

            /*0x1298060*/ SGrowthRow();
        }

        class SQuest
        {
            /*0x10*/ int point;
            /*0x18*/ System.Collections.Generic.List<int> exchanges;
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SQuestRow> list;

            /*0x129a2f4*/ SQuest();
        }

        class SMission : PTShare.Define.SQuest
        {
            /*0x28*/ int eventid;
            /*0x30*/ System.DateTime begin;
            /*0x38*/ int step;

            /*0x129a2ec*/ SMission();
        }

        class SEventExchange
        {
            /*0x10*/ int index;
            /*0x14*/ int count;

            /*0x1297964*/ SEventExchange();
        }

        class SQuestRow
        {
            /*0x10*/ int index;
            /*0x14*/ int score;

            /*0x129f280*/ SQuestRow();
        }

        class SMainQuest
        {
            /*0x10*/ int index;
            /*0x14*/ int step;
            /*0x18*/ long score;
            /*0x20*/ int status;

            /*0x1299a38*/ SMainQuest();
        }

        class SItem
        {
            /*0x10*/ int tableid;
            /*0x14*/ int count;

            /*0x1298ffc*/ SItem();
            /*0x1299004*/ SItem(int _tableid, int _count);
        }

        class SCommonSide
        {
            /*0x10*/ int tacticid;
            /*0x18*/ PTShare.Define.SStatBonus bonus;

            /*0x12964e4*/ SCommonSide();
        }

        class SBattleSide : PTShare.Define.SCommonSide
        {
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> heroes;

            /*0x12964dc*/ SBattleSide();
        }

        class SVerifySide : PTShare.Define.SCommonSide
        {
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> heroes;

            /*0x129fd7c*/ SVerifySide();
        }

        class SVerifyHero : PTShare.Define.SSmallHero
        {
            /*0x28*/ PTShare.Define.SArtifact artifact;
            /*0x30*/ int signature;
            /*0x38*/ System.Collections.Generic.List<PTShare.Define.SVerifyEquip> equips;
            /*0x40*/ PTShare.Define.SStatBonus statbonus;
            /*0x48*/ System.Collections.Generic.List<int> abilitys;
            /*0x50*/ int bhp;
            /*0x54*/ int bmp;
            /*0x58*/ int ehp;
            /*0x5c*/ int emp;

            /*0x129fd64*/ SVerifyHero();
            /*0x129fd30*/ long get_WorldBossBeginHP();
            /*0x129fd48*/ void set_WorldBossBeginHP(long value);
        }

        class SBattleHero : PTShare.Define.SSmallHero
        {
            /*0x28*/ PTShare.Define.SArtifact artifact;
            /*0x30*/ int signature;
            /*0x38*/ System.Collections.Generic.List<PTShare.Define.SEquip> equips;
            /*0x40*/ PTShare.Define.SStatBonus statbonus;
            /*0x48*/ System.Collections.Generic.List<int> abilitys;

            /*0x12964c4*/ SBattleHero();
        }

        class SConditionHero : PTShare.Define.SBattleHero
        {
            /*0x50*/ int hp;
            /*0x54*/ int mp;

            /*0x1296554*/ SConditionHero();
        }

        class SGuildWarTactic
        {
            /*0x10*/ int tableid;
            /*0x14*/ int tacticid;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> heroes;

            /*0x129841c*/ SGuildWarTactic();
        }

        class SDungeonCondition
        {
            /*0x10*/ int posx;
            /*0x14*/ int posy;
            /*0x18*/ int score;
            /*0x1c*/ int goalscore;

            /*0x1297830*/ SDungeonCondition();
        }

        class SDeck
        {
            /*0x10*/ string profileids;
            /*0x18*/ int level;
            /*0x20*/ long cp;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

            /*0x1297808*/ SDeck();
        }

        class SHero
        {
            /*0x10*/ int heroid;
            /*0x14*/ int tableid;
            /*0x18*/ int skinid;
            /*0x1c*/ int factionid;
            /*0x20*/ int grade;
            /*0x24*/ int level;
            /*0x28*/ bool locking;
            /*0x2c*/ int levelsync;
            /*0x30*/ System.Collections.Generic.List<PTShare.Define.SEquip> equips;
            /*0x38*/ PTShare.Define.SArtifact artifact;
            /*0x40*/ int signature;
            /*0x48*/ System.Collections.Generic.List<int> abilitys;

            /*0x12983f4*/ SHero();
            /*0x1298424*/ PTShare.Define.SHero Clone();
            void Clone<T>(ref T target, bool deep);
            /*0x12986f4*/ int GetSkinID();

            class <>c
            {
                static /*0x0*/ PTShare.Define.SHero.<> <>9;
                static /*0x8*/ System.Converter<PTShare.Define.SEquip, PTShare.Define.SEquip> <>9__12_0;
                static /*0x10*/ System.Converter<int, int> <>9__12_1;

                static /*0xf9c5ec*/ <>c();
                /*0xf9c64c*/ <>c();
                /*0xf9c654*/ PTShare.Define.SEquip <Clone>b__12_0(PTShare.Define.SEquip e);
                /*0xf9c670*/ int <Clone>b__12_1(int a);
            }

            class <>c__13<T>
            {
                static /*0x0*/ PTShare.Define.SHero.<>c__13<T> <>9;
                static /*0x0*/ System.Converter<PTShare.Define.SEquip, PTShare.Define.SEquip> <>9__13_0;
                static /*0x0*/ System.Converter<int, int> <>9__13_1;

                static <>c__13();
                <>c__13();
                PTShare.Define.SEquip <Clone>b__13_0(PTShare.Define.SEquip e);
                int <Clone>b__13_1(int a);
            }
        }

        class SResonanceSlot
        {
            /*0x10*/ int slot;
            /*0x18*/ System.DateTime open;

            /*0x129f2c8*/ SResonanceSlot();
        }

        class SLegionHero : PTShare.Define.SStatBonusHero
        {
            /*0x60*/ string nickname;
            /*0x68*/ string uniqueid;
            /*0x70*/ int status;

            /*0x129904c*/ SLegionHero();
        }

        class SGuildWarHero : PTShare.Define.SHero
        {
            /*0x50*/ long playerid;
            /*0x58*/ string nickname;
            /*0x60*/ string uniqueid;
            /*0x68*/ int deckid;

            /*0x12983b0*/ SGuildWarHero();
            /*0x12980c0*/ PTShare.Define.SGuildWarHero CloneGuildWarHero();
            /*0x12983c0*/ void OverlapSlotInfo(PTShare.Define.SGuildWarHero hero);

            class <>c
            {
                static /*0x0*/ PTShare.Define.SGuildWarHero.<> <>9;
                static /*0x8*/ System.Converter<PTShare.Define.SEquip, PTShare.Define.SEquip> <>9__4_0;
                static /*0x10*/ System.Converter<int, int> <>9__4_1;

                static /*0xf9c560*/ <>c();
                /*0xf9c5c0*/ <>c();
                /*0xf9c5c8*/ PTShare.Define.SEquip <CloneGuildWarHero>b__4_0(PTShare.Define.SEquip e);
                /*0xf9c5e4*/ int <CloneGuildWarHero>b__4_1(int a);
            }
        }

        class SGuildWarBattleHero : PTShare.Define.SBattleHero
        {
            /*0x50*/ string nickname;
            /*0x58*/ string uniqueid;

            /*0x12980a8*/ SGuildWarBattleHero();
        }

        class SResonanceHero : PTShare.Define.SHero
        {
            /*0x50*/ int slot;
            /*0x54*/ int reallevel;

            /*0x129f2b8*/ SResonanceHero();
        }

        class SMercenaryRented : PTShare.Define.SHero
        {
            /*0x50*/ long playerid;
            /*0x58*/ string nickname;

            /*0x1299a80*/ SMercenaryRented();
        }

        class SStatBonusHero : PTShare.Define.SHero
        {
            /*0x50*/ long playerid;
            /*0x58*/ PTShare.Define.SStatBonus bonus;

            /*0x129905c*/ SStatBonusHero();
        }

        class SMercenaryRent : PTShare.Define.SMercenaryRented
        {
            /*0x60*/ string reservedname;
            /*0x68*/ bool myreq;
            /*0x6c*/ int reqcount;

            /*0x1299a70*/ SMercenaryRent();
        }

        class SMercenaryLend
        {
            /*0x10*/ int heroid;
            /*0x18*/ System.Collections.Generic.List<long> reqplayerids;

            /*0x1299a60*/ SMercenaryLend();
        }

        class SMercenaryLended
        {
            /*0x10*/ int heroid;
            /*0x18*/ long reservedplayerid;
            /*0x20*/ string reservedname;

            /*0x1299a68*/ SMercenaryLended();
        }

        class SLvHero
        {
            /*0x10*/ int heroid;
            /*0x14*/ int level;

            /*0x1299a28*/ SLvHero();
        }

        class SPassPoint
        {
            /*0x10*/ string name;
            /*0x18*/ int point;

            /*0x129a314*/ SPassPoint(string _name, int _point);
        }

        class SCoreHero
        {
            /*0x10*/ int tableid;
            /*0x14*/ int grade;
            /*0x18*/ int level;
            /*0x1c*/ int skinid;

            /*0x129658c*/ SCoreHero();
            /*0x1296574*/ int GetSkinID();
        }

        class SLittleHero : PTShare.Define.SCoreHero
        {
            /*0x20*/ int heroid;

            /*0x1296524*/ SLittleHero();
        }

        class SSmallHero : PTShare.Define.SCoreHero
        {
            /*0x20*/ int slot;

            /*0x12964d4*/ SSmallHero();
        }

        class SContentShopReset
        {
            /*0x10*/ int index;
            /*0x14*/ int resetcnt;

            /*0x1296564*/ SContentShopReset();
        }

        class SHistory : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ System.DateTime time;
            /*0x38*/ string replayid;
            /*0x40*/ long cp;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> myheroes;
            /*0x50*/ string statistics;

            /*0x129647c*/ SHistory();
        }

        class SGuildBossHistory : PTShare.Define.SHistory
        {
            /*0x58*/ long damage;

            /*0x1298080*/ SGuildBossHistory();
        }

        class SArenaHistory : PTShare.Define.SHistory
        {
            /*0x58*/ int scoreadd;
            /*0x5c*/ int side;
            /*0x60*/ long vscp;
            /*0x68*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> vsheroes;
            /*0x70*/ bool revenge;

            /*0x1296474*/ SArenaHistory();
        }

        class SGuildWarHistory
        {
            /*0x10*/ System.DateTime time;
            /*0x18*/ string replayid;
            /*0x20*/ PTShare.Define.SMiniPlayer attacker;
            /*0x28*/ PTShare.Define.SGuildMini lguild;
            /*0x30*/ PTShare.Define.SGuildWarTactic lside;
            /*0x38*/ PTShare.Define.SGuildMini rguild;
            /*0x40*/ PTShare.Define.SGuildWarTactic rside;
            /*0x48*/ string statistics;
            /*0x50*/ int scoreadd;
            /*0x54*/ int side;
            /*0x58*/ string output;

            /*0x1298404*/ SGuildWarHistory();
        }

        class SVerifyEquip
        {
            /*0x10*/ int tableid;
            /*0x14*/ int lv;
            /*0x18*/ int bonusid;

            /*0x1297848*/ SVerifyEquip();
        }

        class SEquip : PTShare.Define.SVerifyEquip
        {
            /*0x1c*/ int equipid;
            /*0x20*/ int exp;

            /*0x1297840*/ SEquip();
            /*0x1297850*/ SEquip(int _nTableID);
            /*0x1297884*/ SEquip(PTShare.Define.SVerifyEquip _verifyEquip);
            /*0x12978d0*/ PTShare.Define.SEquip Clone();
        }

        class SPlayer : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int area;
            /*0x38*/ string campaign;
            /*0x40*/ System.DateTime lastwin;
            /*0x48*/ string hcampaign;
            /*0x50*/ System.DateTime hlastwin;
            /*0x58*/ long cp;
            /*0x60*/ System.DateTime lastaccess;

            /*0x1298048*/ SPlayer();
        }

        class SFriend : PTShare.Define.SPlayer
        {
            /*0x68*/ int recvstate;
            /*0x6c*/ int sendstate;

            /*0x1298040*/ SFriend();
        }

        class SGuildMember : PTShare.Define.SPlayer
        {
            /*0x68*/ int position;
            /*0x6c*/ int auth;
            /*0x70*/ int warauth;
            /*0x74*/ int point;
            /*0x78*/ string camppos;

            /*0x1298090*/ SGuildMember();
        }

        class SSearchPlayer : PTShare.Define.SPlayer
        {
            /*0x68*/ bool send;

            /*0x129f3f0*/ SSearchPlayer();
        }

        class SContribution : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int warcb;

            /*0x129656c*/ SContribution();
        }

        class SGuildWarForm
        {
            /*0x10*/ PTShare.Define.SGuildWarPlayer captain;
            /*0x18*/ System.Collections.Generic.List<int> tableids;
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> heroes;

            /*0x12980b8*/ SGuildWarForm();
        }

        class SGuildWarPlayer : PTShare.Define.SPlayer
        {
            /*0x68*/ int warauth;
            /*0x6c*/ int atkwin;
            /*0x70*/ int atkcmaxwin;
            /*0x74*/ int atklose;
            /*0x78*/ int defwin;
            /*0x7c*/ int defcmaxwin;
            /*0x80*/ int gcscore;
            /*0x88*/ PTShare.Define.SStatBonus statbonus;

            /*0x129840c*/ SGuildWarPlayer();
        }

        class SCampaignRecord : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long cp;
            /*0x38*/ int relation;
            /*0x40*/ string campaign;
            /*0x48*/ string statistics;
            /*0x50*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> myheroes;

            /*0x129653c*/ SCampaignRecord();
        }

        class SGameReplay
        {
            /*0x10*/ long playerid;
            /*0x18*/ int randomseed;
            /*0x20*/ PTShare.Define.SBattleSide left;
            /*0x28*/ string playdata;

            /*0x129649c*/ SGameReplay();
        }

        class SCampaignReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ string campaign;

            /*0x1296544*/ SCampaignReplay();
        }

        class STowerReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ int floor;

            /*0x129f45c*/ STowerReplay();
        }

        class SArenaReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ PTShare.Define.SBattleSide right;

            /*0x1296494*/ SArenaReplay();
        }

        class SGuildBossReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ int bossindex;

            /*0x1298088*/ SGuildBossReplay();
        }

        class SBoardFiveRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ System.DateTime complete;

            /*0x12964fc*/ SBoardFiveRanker();
        }

        class SAreaPlayer
        {
            /*0x10*/ int area;
            /*0x18*/ string nickname;
            /*0x20*/ string profileids;
            /*0x28*/ int level;

            /*0x129646c*/ SAreaPlayer();
        }

        class SMiniPlayer
        {
            /*0x10*/ long playerid;
            /*0x18*/ string nickname;
            /*0x20*/ string profileids;
            /*0x28*/ int gender;
            /*0x2c*/ int level;

            /*0x129648c*/ SMiniPlayer();
        }

        class SBoardCampaignRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ string campaign;

            /*0x12964ec*/ SBoardCampaignRanker();
        }

        class SBoardFactionRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int point;

            /*0x12964f4*/ SBoardFactionRanker();
        }

        class STowerBase : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int floor;

            /*0x129f444*/ STowerBase();
        }

        class SBoardTowerRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int floor;

            /*0x129650c*/ SBoardTowerRanker();
        }

        class SBoardQuest
        {
            /*0x10*/ int index;
            /*0x18*/ PTShare.Define.SMiniPlayer first;
            /*0x20*/ bool recved;

            /*0x1296504*/ SBoardQuest();
        }

        class STowerRanker : PTShare.Define.STowerBase
        {
            /*0x38*/ System.DateTime clear;

            /*0x129f44c*/ STowerRanker();
        }

        class STowerUser : PTShare.Define.STowerBase
        {
            /*0x34*/ int relation;

            /*0x129f464*/ STowerUser();
        }

        class STowerRecord : PTShare.Define.STowerBase
        {
            /*0x38*/ long cp;
            /*0x40*/ string statistics;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> myheroes;

            /*0x129f454*/ STowerRecord();
        }

        class SGuildMini
        {
            /*0x10*/ int guildid;
            /*0x18*/ string name;
            /*0x20*/ int level;
            /*0x24*/ int emblemid;
            /*0x28*/ int frameid;

            /*0x1298070*/ SGuildMini();
        }

        class SGuildSummary : PTShare.Define.SGuildMini
        {
            /*0x2c*/ int point;
            /*0x30*/ int membercnt;
            /*0x34*/ bool sendreq;

            /*0x1298098*/ SGuildSummary();
        }

        class SGuild : PTShare.Define.SGuildMini
        {
            /*0x30*/ System.DateTime create;
            /*0x38*/ string lang;
            /*0x40*/ int exp;
            /*0x44*/ int todayexp;
            /*0x48*/ int point;
            /*0x50*/ string notice;
            /*0x58*/ int accepttype;
            /*0x5c*/ int reqlevel;
            /*0x60*/ string guide;

            /*0x1298068*/ SGuild();
        }

        class SGuildWar : PTShare.Define.SGuild
        {
            /*0x68*/ int warpoint;
            /*0x70*/ long cp;

            /*0x12980a0*/ SGuildWar();
        }

        class SGuildBoss
        {
            /*0x10*/ int index;
            /*0x18*/ System.DateTime expire;
            /*0x20*/ int count;
            /*0x28*/ long lastdamage;
            /*0x30*/ long topplayerid;
            /*0x38*/ long topdamage;

            /*0x1298078*/ SGuildBoss();
        }

        class SEventBoss
        {
            /*0x10*/ int index;
            /*0x14*/ int count;
            /*0x18*/ long lastdamage;

            /*0x129795c*/ SEventBoss();
        }

        class SManufacture
        {
            /*0x10*/ int index;
            /*0x14*/ int pushcnt;

            /*0x1299a40*/ SManufacture();
        }

        class SMail
        {
            /*0x10*/ int mailid;
            /*0x18*/ System.DateTime post;
            /*0x20*/ System.DateTime expire;
            /*0x28*/ string title;
            /*0x30*/ string body;
            /*0x38*/ PTShare.Define.SProperty attached;
            /*0x40*/ bool recved;

            /*0x1299a30*/ SMail();
        }

        class SBountyQuest
        {
            /*0x10*/ int id;
            /*0x14*/ int index;
            /*0x18*/ int faction1;
            /*0x1c*/ int faction2;
            /*0x20*/ System.DateTime expire;
            /*0x28*/ System.Collections.Generic.List<string> dispatchids;
            /*0x30*/ System.DateTime finish;

            /*0x1296534*/ SBountyQuest();
        }

        class SBountyHero : PTShare.Define.SLittleHero
        {
            /*0x28*/ string helpnick;
            /*0x30*/ int questid;

            /*0x129651c*/ SBountyHero();
        }

        class SBountyHeroExtend : PTShare.Define.SBountyHero
        {
            /*0x38*/ long playerid;
            /*0x40*/ string nickname;

            /*0x129652c*/ SBountyHeroExtend();
        }

        class SCondition
        {
            /*0x10*/ int heroid;
            /*0x14*/ int hp;
            /*0x18*/ int mp;

            /*0x129654c*/ SCondition();
        }

        class SPay
        {
            /*0x10*/ PTShare.Define.SCurrency currency;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

            /*0x129a378*/ SPay();
        }

        class SMaze
        {
            /*0x10*/ bool clear;
            /*0x14*/ int step;
            /*0x18*/ int courseid;
            /*0x20*/ int[] tileids;
            /*0x28*/ int pos;
            /*0x2c*/ bool tiledone;
            /*0x30*/ System.Collections.Generic.List<int> history;

            /*0x1299a58*/ SMaze();
        }

        class SMateCandidate
        {
            /*0x10*/ int tableid;
            /*0x14*/ int level;
            /*0x18*/ int grade;

            /*0x1299a50*/ SMateCandidate();
        }

        class SMate : PTShare.Define.SMateCandidate
        {
            /*0x1c*/ int heroid;

            /*0x1299a48*/ SMate();
        }

        class SRelation
        {
            /*0x10*/ int index;
            /*0x14*/ int relationlevel;
            /*0x18*/ int activatelevel;

            /*0x129f2a0*/ SRelation();
        }

        class SRunner
        {
            /*0x10*/ int tableid;
            /*0x14*/ int votecnt;

            /*0x129f2d8*/ SRunner();
        }

        class SRace
        {
            /*0x10*/ int seq;
            /*0x14*/ int votetrack;
            /*0x18*/ System.Collections.Generic.Dictionary<int, int> unit;
            /*0x20*/ System.Collections.Generic.List<int> rank;
            /*0x28*/ bool confirm;

            /*0x129f288*/ SRace();
        }

        class SModeCount
        {
            /*0x10*/ int campaign;
            /*0x14*/ int tower;
            /*0x18*/ int towerfire;
            /*0x1c*/ int towerwind;
            /*0x20*/ int towernatural;
            /*0x24*/ int towerwater;
            /*0x28*/ int guildboss;
            /*0x2c*/ int worldboss;
            /*0x30*/ int eventboss;

            /*0x129a2fc*/ SModeCount();
        }

        class SDefeat
        {
            /*0x10*/ int campaign;
            /*0x14*/ int tower;
            /*0x18*/ int hcampaign;

            /*0x1297810*/ SDefeat();
        }

        class SSkin
        {
            /*0x10*/ int index;

            /*0x129b7f0*/ SSkin();
        }

        class SArtifact
        {
            /*0x10*/ int artifactid;
            /*0x14*/ int level;

            /*0x12964ac*/ SArtifact();
        }

        class SProfileDecorate
        {
            /*0x10*/ int index;
            /*0x18*/ System.DateTime expire;

            /*0x129a630*/ SProfileDecorate();
        }

        class SFrame
        {
            /*0x10*/ string type;
            /*0x18*/ int index;

            /*0x1298038*/ SFrame();
        }

        class SPveStage
        {
            /*0x10*/ System.Collections.Generic.List<PTShare.Define.SPveStage.SData> difficultys;

            /*0x129f278*/ SPveStage();

            class SData
            {
                /*0x10*/ int lastedgrade;
                /*0x14*/ int score;

                /*0xf9d724*/ SData();
            }
        }

        class SRunHero
        {
            /*0x10*/ int heroid;
            /*0x18*/ System.DateTime time;

            /*0x129f2d0*/ SRunHero();
        }

        class SMiniHousingObj
        {
            /*0x10*/ int housingobjid;
            /*0x14*/ int tableid;

            /*0x12988e0*/ SMiniHousingObj();
        }

        class SHousingObjLocation
        {
            /*0x10*/ int floor;
            /*0x14*/ int layer;
            /*0x18*/ int x;
            /*0x1c*/ int y;
            /*0x20*/ int rot;

            /*0x12988f0*/ SHousingObjLocation();
            /*0x12987d8*/ PTShare.Define.SHousingObjLocation Clone();
        }

        class SHousingObj : PTShare.Define.SMiniHousingObj
        {
            /*0x18*/ int lv;
            /*0x1c*/ int exp;
            /*0x20*/ PTShare.Define.SHousingObjLocation loc;
            /*0x28*/ PTShare.Define.SHousingObjCondition state;
            /*0x30*/ bool locking;

            /*0x12987d0*/ SHousingObj();
            /*0x1298724*/ PTShare.Define.SHousingObj Clone();
        }

        class SHousingObjCondition
        {
            /*0x10*/ int state;
            /*0x18*/ string arg;
            /*0x20*/ System.DateTime time;

            /*0x12988e8*/ SHousingObjCondition();
            /*0x1298864*/ PTShare.Define.SHousingObjCondition Clone();
        }

        class SHousingWaste
        {
            /*0x10*/ int wasteid;
            /*0x14*/ int floor;
            /*0x18*/ System.DateTime time;

            /*0x1298908*/ SHousingWaste();
        }

        class SHousingHero
        {
            /*0x10*/ int floor;
            /*0x14*/ int tableid;

            /*0x129871c*/ SHousingHero();
        }

        class SHousingGoods
        {
            /*0x10*/ int index;
            /*0x14*/ int count;

            /*0x1298714*/ SHousingGoods();
        }

        class SVisitor : PTShare.Define.SPlayer
        {
            /*0x68*/ int dayid;
            /*0x6c*/ int recvstate;
            /*0x70*/ int sendstate;
            /*0x78*/ System.DateTime visittime;

            /*0x129fd84*/ SVisitor();
        }

        class SHousingSaveObj
        {
            /*0x10*/ int housingobjid;
            /*0x14*/ int layer;
            /*0x18*/ int x;
            /*0x1c*/ int y;
            /*0x20*/ int rot;

            /*0x1298900*/ SHousingSaveObj();
        }

        class SHousingSave
        {
            /*0x10*/ int slot;
            /*0x18*/ string name;
            /*0x20*/ string thumb;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHousingSaveObj> housingobjs;

            /*0x12988f8*/ SHousingSave();
        }

        class SHousingEffect
        {
            /*0x10*/ int type;
            /*0x14*/ float value;

            /*0x129870c*/ SHousingEffect();
        }
    }
}

namespace Assets
{
    namespace Scripts
    {
        class ChatComponent : ChatApp.Shared.Hubs.IChatHubReceiver
        {
            /*0x10*/ System.Threading.CancellationTokenSource mShutdownCancellation;
            /*0x18*/ Grpc.Core.ChannelBase mChannel;
            /*0x20*/ ChatApp.Shared.Hubs.IChatHub mStreaming;
            /*0x28*/ bool mLogout;
            /*0x30*/ ChatServerLogger mLogger;

            /*0x132b2bc*/ ChatComponent(ChatServerLogger logger);
            /*0x132b334*/ void OnDestroy();
            /*0x132b3f8*/ bool Logined();
            /*0x132b408*/ System.Threading.Tasks.Task InitializeClientAsync();
            /*0x132b524*/ void RegisterDisconnectEvent(ChatApp.Shared.Hubs.IChatHub streamingClient);
            /*0x132b5f0*/ System.Threading.Tasks.Task ReconnectInitializedServer();
            /*0x132b6f4*/ System.Threading.Tasks.Task ReconnectServerAsync();
            /*0x132b7f8*/ void Login(string token);
            /*0x132b8c0*/ void UpdatePlayer();
            /*0x132b984*/ void Lucky(string nickname, int unitid);
            /*0x1329ee4*/ void MoveLangChannel(int channel);
            /*0x132ba58*/ void GroupChat(string groupid, string msg);
            /*0x132bb2c*/ void PrivateChat(long playerid, string msg);
            /*0x132bc00*/ void AdminNotice(string notice);
            /*0x132bcc8*/ void UpdateGuildWarDefenseDeck(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
            /*0x132bd90*/ System.Threading.Tasks.Task UpdateAllCp(long allcp);
            /*0x132beb0*/ System.Threading.Tasks.Task UpdateArenaCp(long arncp);
            /*0x132bfd0*/ System.Threading.Tasks.Task UpdateWorldArenaCp(long wldcp);
            /*0x132c0f0*/ System.Threading.Tasks.Task UpdateGuildWarCp(long warcp);
            /*0x132c210*/ void ExitPrivate(long playerid);
            /*0x132c2d8*/ void Logout();
            /*0x132c39c*/ void OnLogin(int result, System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.Room> rooms);
            /*0x132c3b8*/ void OnGroupChat(int result, string groupid, ChatApp.Shared.MessagePackObjects.SMessage chat);
            /*0x132c608*/ void OnPrivateChat(int result, ChatApp.Shared.MessagePackObjects.SMessage chat);
            /*0x132c6b8*/ void OnMoveLangChannel(int result, ChatApp.Shared.MessagePackObjects.Room newroom);
            /*0x132c6d4*/ void OnLucky(int unitid, string nickname);
            /*0x132c6e8*/ void OnAdminNotice(string notice);
            /*0x132c6fc*/ void OnUpdatedGuildWarHero(int heroid);

            struct <OnDestroy>d__6 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82b38*/ void MoveNext();
                /*0xa82b40*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <InitializeClientAsync>d__8 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ System.Runtime.CompilerServices.TaskAwaiter<ChatApp.Shared.Hubs.IChatHub> <>u__1;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__2;

                /*0xa82ad4*/ void MoveNext();
                /*0xa82adc*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <RegisterDisconnectEvent>d__9 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ ChatApp.Shared.Hubs.IChatHub streamingClient;
                /*0x40*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x48*/ object <>7__wrap1;
                /*0x50*/ int <>7__wrap2;
                /*0x58*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a074*/ void MoveNext();
                /*0xa8a07c*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <ReconnectInitializedServer>d__10 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a04c*/ void MoveNext();
                /*0xa8a054*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <ReconnectServerAsync>d__11 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ System.Runtime.CompilerServices.TaskAwaiter<ChatApp.Shared.Hubs.IChatHub> <>u__1;

                /*0xa8a060*/ void MoveNext();
                /*0xa8a068*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <Login>d__12 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string token;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82ae8*/ void MoveNext();
                /*0xa82af0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdatePlayer>d__13 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0d8*/ void MoveNext();
                /*0xa8a0e0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <Lucky>d__14 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string nickname;
                /*0x48*/ int unitid;
                /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82b10*/ void MoveNext();
                /*0xa82b18*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <MoveLangChannel>d__15 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ int channel;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82b24*/ void MoveNext();
                /*0xa82b2c*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <GroupChat>d__16 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string groupid;
                /*0x48*/ string msg;
                /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82ac0*/ void MoveNext();
                /*0xa82ac8*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <PrivateChat>d__17 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ long playerid;
                /*0x48*/ string msg;
                /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a038*/ void MoveNext();
                /*0xa8a040*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <AdminNotice>d__18 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string notice;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82a98*/ void MoveNext();
                /*0xa82aa0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateGuildWarDefenseDeck>d__19 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0c4*/ void MoveNext();
                /*0xa8a0cc*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateAllCp>d__20 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long allcp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a088*/ void MoveNext();
                /*0xa8a090*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateArenaCp>d__21 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long arncp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a09c*/ void MoveNext();
                /*0xa8a0a4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateWorldArenaCp>d__22 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long wldcp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0ec*/ void MoveNext();
                /*0xa8a0f4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateGuildWarCp>d__23 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long warcp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0b0*/ void MoveNext();
                /*0xa8a0b8*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <ExitPrivate>d__24 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ long playerid;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82aac*/ void MoveNext();
                /*0xa82ab4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <Logout>d__25 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82afc*/ void MoveNext();
                /*0xa82b04*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }
        }

        class InitialSettings
        {
            static /*0x15733b8*/ void RegisterResolvers();
            static /*0x15736cc*/ void OnRuntimeInitialize();
            /*0x157383c*/ InitialSettings();
        }

        namespace Server
        {
            class Functions
            {
                static /*0x10a5a04*/ int PveFreeTicketCnt(System.DateTime now, System.DateTime valx, int valy);
                static /*0x10a5b58*/ int StringHash(string str);
                static /*0x10a5bd8*/ int ParseTimeSpan(string data);
                static /*0x10a5e80*/ string ParseTriggerByQuestGroupId(TableData.TableGroup table, string questgroupid);
                static /*0x10a5fbc*/ System.ValueTuple<string, int> ParseTriggerByQuestId(TableData.TableGroup table, string questid);

                class <>c__DisplayClass2_0
                {
                    /*0x10*/ System.Collections.Generic.Dictionary<char, int> table;
                    /*0x18*/ char[] divb;
                    /*0x20*/ int idx;

                    /*0x10a2d34*/ <>c__DisplayClass2_0();
                    /*0x10a2d3c*/ bool <ParseTimeSpan>b__0(char w);
                    /*0x10a2da0*/ int <ParseTimeSpan>b__1(string m);
                }

                class <>c__DisplayClass3_0
                {
                    /*0x10*/ string questgroupid;

                    /*0x10a2e48*/ <>c__DisplayClass3_0();
                    /*0x10a2e50*/ bool <ParseTriggerByQuestGroupId>b__0(TableData.TableData_Questgroup f);
                }

                class <>c__DisplayClass4_0
                {
                    /*0x10*/ string questid;
                    /*0x18*/ TableData.TableData_Queststageclear t9;

                    /*0x10a2e74*/ <>c__DisplayClass4_0();
                    /*0x10a2e7c*/ bool <ParseTriggerByQuestId>b__0(TableData.TableData_Queststageidle d);
                    /*0x10a2ea0*/ bool <ParseTriggerByQuestId>b__1(TableData.TableData_Queststagetry d);
                    /*0x10a2ec4*/ bool <ParseTriggerByQuestId>b__2(TableData.TableData_Questheroupgrade d);
                    /*0x10a2ee8*/ bool <ParseTriggerByQuestId>b__3(TableData.TableData_Questequipupgrade d);
                    /*0x10a2f0c*/ bool <ParseTriggerByQuestId>b__4(TableData.TableData_Questfriend d);
                    /*0x10a2f30*/ bool <ParseTriggerByQuestId>b__5(TableData.TableData_Questgacha d);
                    /*0x10a2f54*/ bool <ParseTriggerByQuestId>b__6(TableData.TableData_Questlabyrinth d);
                    /*0x10a2f78*/ bool <ParseTriggerByQuestId>b__7(TableData.TableData_Questbuy d);
                    /*0x10a2f9c*/ bool <ParseTriggerByQuestId>b__8(TableData.TableData_Questarena d);
                    /*0x10a2fc0*/ bool <ParseTriggerByQuestId>b__9(TableData.TableData_Queststageclear d);
                    /*0x10a2fe4*/ bool <ParseTriggerByQuestId>b__14(TableData.TableData_Stage s);
                    /*0x10a3014*/ bool <ParseTriggerByQuestId>b__15(TableData.TableData_Towernormal s);
                    /*0x10a3044*/ bool <ParseTriggerByQuestId>b__16(TableData.TableData_Towerfire s);
                    /*0x10a3074*/ bool <ParseTriggerByQuestId>b__17(TableData.TableData_Towerwind s);
                    /*0x10a30a4*/ bool <ParseTriggerByQuestId>b__18(TableData.TableData_Towernatural s);
                    /*0x10a30d4*/ bool <ParseTriggerByQuestId>b__19(TableData.TableData_Towerwater s);
                    /*0x10a3104*/ bool <ParseTriggerByQuestId>b__10(TableData.TableData_Questlevel d);
                    /*0x10a3128*/ bool <ParseTriggerByQuestId>b__11(TableData.TableData_Questchapterclear d);
                    /*0x10a314c*/ bool <ParseTriggerByQuestId>b__12(TableData.TableData_Questprizeboard d);
                    /*0x10a3170*/ bool <ParseTriggerByQuestId>b__13(TableData.TableData_Questspirittowerclear d);
                }
            }
        }
    }
}

namespace ChatSystem
{
    class ChannelInfo
    {
        /*0x10*/ PTShare.Define.ChannelType type;
        /*0x18*/ string uniquekey;
        /*0x20*/ string channelname;

        /*0xd6ec9c*/ ChannelInfo(string _channelname);
        /*0xd6eccc*/ ChannelInfo(string _nickname, string _playerid);
    }

    class ChatLog
    {
        /*0x10*/ ChatApp.Shared.MessagePackObjects.SMessage message;
        /*0x18*/ UnityEngine.Vector2 textsize;
        /*0x20*/ UnityEngine.Vector2 backgroundsize;
        /*0x28*/ UnityEngine.Vector2 parentsize;

        /*0x132e03c*/ ChatLog(ChatApp.Shared.MessagePackObjects.SMessage message);
    }

    enum ChannelArgsType
    {
        Channel = 0,
        Nickname = 1,
        End = 2,
    }
}

namespace Atlas
{
    class AtlasComponent<T> : UnityEngine.MonoBehaviour
    {
        /*0x0*/ T m_Component;
        /*0x0*/ string m_strName;
        /*0x0*/ AtlasType m_eAtlasType;
        /*0x0*/ bool m_bInitialized;

        AtlasComponent();
        AtlasType get_AtlasType();
        T get_Parent();
        bool get_IsUseParent();
        void Initialize();
        void Start();
        void OnEnable();
        void OnEnableMethod();
        void OnDisable();
        void OnDisableMethod();
        void SetAtlas(AtlasType _type, string _path);
        void SetType(AtlasType _type);
        void SetColor(UnityEngine.Color _color);
        void SetOpecity(float _opecity);
        void RefreshImage();
        UnityEngine.Sprite GetSprite();
        void SetSprite(UnityEngine.Sprite _sprite);
    }
}

namespace MessagePack
{
    namespace Formatters
    {
        namespace ChatApp
        {
            namespace Shared
            {
                namespace MessagePackObjects
                {
                    class RoomFormatter : MessagePack.Formatters.IMessagePackFormatter<ChatApp.Shared.MessagePackObjects.Room>, MessagePack.Formatters.IMessagePackFormatter
                    {
                        /*0x11ab61c*/ RoomFormatter();
                        /*0x11aa918*/ void Serialize(ref MessagePack.MessagePackWriter writer, ChatApp.Shared.MessagePackObjects.Room value, MessagePack.MessagePackSerializerOptions options);
                        /*0x11ab1f8*/ ChatApp.Shared.MessagePackObjects.Room Deserialize(ref MessagePack.MessagePackReader reader, MessagePack.MessagePackSerializerOptions options);
                    }

                    class SMessageFormatter : MessagePack.Formatters.IMessagePackFormatter<ChatApp.Shared.MessagePackObjects.SMessage>, MessagePack.Formatters.IMessagePackFormatter
                    {
                        /*0x129a2e4*/ SMessageFormatter();
                        /*0x1299ae8*/ void Serialize(ref MessagePack.MessagePackWriter writer, ChatApp.Shared.MessagePackObjects.SMessage value, MessagePack.MessagePackSerializerOptions options);
                        /*0x1299e10*/ ChatApp.Shared.MessagePackObjects.SMessage Deserialize(ref MessagePack.MessagePackReader reader, MessagePack.MessagePackSerializerOptions options);
                    }

                    class WarJoinInfoFormatter : MessagePack.Formatters.IMessagePackFormatter<ChatApp.Shared.MessagePackObjects.WarJoinInfo>, MessagePack.Formatters.IMessagePackFormatter
                    {
                        /*0xdfeaf0*/ WarJoinInfoFormatter();
                        /*0xdfe2b4*/ void Serialize(ref MessagePack.MessagePackWriter writer, ChatApp.Shared.MessagePackObjects.WarJoinInfo value, MessagePack.MessagePackSerializerOptions options);
                        /*0xdfe954*/ ChatApp.Shared.MessagePackObjects.WarJoinInfo Deserialize(ref MessagePack.MessagePackReader reader, MessagePack.MessagePackSerializerOptions options);
                    }
                }
            }
        }
    }

    namespace Resolvers
    {
        class GeneratedResolver : MessagePack.IFormatterResolver
        {
            static /*0x0*/ MessagePack.IFormatterResolver Instance;

            static /*0xed2c1c*/ GeneratedResolver();
            /*0xed2c14*/ GeneratedResolver();
            MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>();

            class FormatterCache<T>
            {
                static /*0x0*/ MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

                static FormatterCache();
            }
        }

        class GeneratedResolverGetFormatterHelper
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<System.Type, int> lookup;

            static /*0xed2c7c*/ GeneratedResolverGetFormatterHelper();
            static /*0xed2e24*/ object GetFormatter(System.Type t);
        }
    }
}

namespace ChatApp
{
    namespace Shared
    {
        namespace MessagePackObjects
        {
            struct WarJoinInfo
            {
                /*0x10*/ long <playerid>k__BackingField;
                /*0x18*/ int <heroid>k__BackingField;
                /*0x20*/ long <cp>k__BackingField;

                /*0xa82b4c*/ long get_playerid();
                /*0xa82b54*/ void set_playerid(long value);
                /*0xa82b5c*/ int get_heroid();
                /*0xa82b64*/ void set_heroid(int value);
                /*0xa82b6c*/ long get_cp();
                /*0xa82b74*/ void set_cp(long value);
            }

            class Room
            {
                /*0x10*/ int <channeltype>k__BackingField;
                /*0x18*/ string <groupid>k__BackingField;
                /*0x20*/ long <toplayerid>k__BackingField;
                /*0x28*/ string <nickname>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.SMessage> <records>k__BackingField;

                /*0x11aa910*/ Room();
                /*0x11aa8c0*/ int get_channeltype();
                /*0x11aa8c8*/ void set_channeltype(int value);
                /*0x11aa8d0*/ string get_groupid();
                /*0x11aa8d8*/ void set_groupid(string value);
                /*0x11aa8e0*/ long get_toplayerid();
                /*0x11aa8e8*/ void set_toplayerid(long value);
                /*0x11aa8f0*/ string get_nickname();
                /*0x11aa8f8*/ void set_nickname(string value);
                /*0x11aa900*/ System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.SMessage> get_records();
                /*0x11aa908*/ void set_records(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.SMessage> value);
            }

            class SMessage
            {
                /*0x10*/ System.DateTime <time>k__BackingField;
                /*0x18*/ long <playerid>k__BackingField;
                /*0x20*/ string <nickname>k__BackingField;
                /*0x28*/ string <profileids>k__BackingField;
                /*0x30*/ string <msg>k__BackingField;

                /*0x1299ae0*/ SMessage();
                /*0x1299a90*/ System.DateTime get_time();
                /*0x1299a98*/ void set_time(System.DateTime value);
                /*0x1299aa0*/ long get_playerid();
                /*0x1299aa8*/ void set_playerid(long value);
                /*0x1299ab0*/ string get_nickname();
                /*0x1299ab8*/ void set_nickname(string value);
                /*0x1299ac0*/ string get_profileids();
                /*0x1299ac8*/ void set_profileids(string value);
                /*0x1299ad0*/ string get_msg();
                /*0x1299ad8*/ void set_msg(string value);
            }
        }

        namespace Hubs
        {
            class ChatHubClient : MagicOnion.Client.StreamingHubClientBase<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, ChatApp.Shared.Hubs.IChatHub, MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, MagicOnion.IStreamingHubMarker, MagicOnion.IServiceMarker
            {
                static /*0x0*/ Grpc.Core.Method<System.Byte[], System.Byte[]> method;
                /*0xc0*/ ChatApp.Shared.Hubs.IChatHub __fireAndForgetClient;

                static /*0x132dea8*/ ChatHubClient();
                /*0x132cd34*/ ChatHubClient(Grpc.Core.CallInvoker callInvoker, string host, Grpc.Core.CallOptions option, MessagePack.MessagePackSerializerOptions serializerOptions, MagicOnion.Client.IMagicOnionClientLogger logger);
                /*0x132ccd0*/ Grpc.Core.Method<System.Byte[], System.Byte[]> get_DuplexStreamingAsyncMethod();
                /*0x132ce1c*/ ChatApp.Shared.Hubs.IChatHub FireAndForget();
                /*0x132ce24*/ void OnBroadcastEvent(int methodId, System.ArraySegment<byte> data);
                /*0x132d5b4*/ void OnResponseEvent(int methodId, object taskCompletionSource, System.ArraySegment<byte> data);
                /*0x132d82c*/ System.Threading.Tasks.Task LoginAsync(string token);
                /*0x132d890*/ System.Threading.Tasks.Task UpdatePlayerAsync();
                /*0x132d91c*/ System.Threading.Tasks.Task LuckyAsync(string nickname, int unitid);
                /*0x132d9bc*/ System.Threading.Tasks.Task MoveLangChannelAsync(int channel);
                /*0x132da20*/ System.Threading.Tasks.Task GroupChatAsync(string groupid, string msg);
                /*0x132dac0*/ System.Threading.Tasks.Task PrivateChatAsync(long playerid, string msg);
                /*0x132db60*/ System.Threading.Tasks.Task AdminNoticeAsync(string notice);
                /*0x132dbc4*/ System.Threading.Tasks.Task UpdateGuildWarDefenseDeckAsync(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
                /*0x132dc28*/ System.Threading.Tasks.Task UpdateAllCpAsync(long allcp);
                /*0x132dc8c*/ System.Threading.Tasks.Task UpdateArenaCpAsync(long arncp);
                /*0x132dcf0*/ System.Threading.Tasks.Task UpdateWorldArenaCpAsync(long wldcp);
                /*0x132dd54*/ System.Threading.Tasks.Task UpdateGuildWarCpAsync(long warcp);
                /*0x132ddb8*/ System.Threading.Tasks.Task ExitPrivateAsync(long playerid);
                /*0x132de1c*/ System.Threading.Tasks.Task LogoutAsync();
                /*0x132dfa4*/ System.Threading.Tasks.Task MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub,ChatApp.Shared.Hubs.IChatHubReceiver>.DisposeAsync();
                /*0x132dff0*/ System.Threading.Tasks.Task MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub,ChatApp.Shared.Hubs.IChatHubReceiver>.WaitForDisconnect();

                class FireAndForgetClient : ChatApp.Shared.Hubs.IChatHub, MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, MagicOnion.IStreamingHubMarker, MagicOnion.IServiceMarker
                {
                    /*0x10*/ ChatApp.Shared.Hubs.ChatHubClient __parent;

                    /*0x106d74c*/ FireAndForgetClient(ChatApp.Shared.Hubs.ChatHubClient parentClient);
                    /*0x106d778*/ ChatApp.Shared.Hubs.IChatHub FireAndForget();
                    /*0x106d7b8*/ System.Threading.Tasks.Task DisposeAsync();
                    /*0x106d7f8*/ System.Threading.Tasks.Task WaitForDisconnect();
                    /*0x106d838*/ System.Threading.Tasks.Task LoginAsync(string token);
                    /*0x106d8a4*/ System.Threading.Tasks.Task UpdatePlayerAsync();
                    /*0x106d93c*/ System.Threading.Tasks.Task LuckyAsync(string nickname, int unitid);
                    /*0x106d9e8*/ System.Threading.Tasks.Task MoveLangChannelAsync(int channel);
                    /*0x106da54*/ System.Threading.Tasks.Task GroupChatAsync(string groupid, string msg);
                    /*0x106db00*/ System.Threading.Tasks.Task PrivateChatAsync(long playerid, string msg);
                    /*0x106dbac*/ System.Threading.Tasks.Task AdminNoticeAsync(string notice);
                    /*0x106dc18*/ System.Threading.Tasks.Task UpdateGuildWarDefenseDeckAsync(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
                    /*0x106dc84*/ System.Threading.Tasks.Task UpdateAllCpAsync(long allcp);
                    /*0x106dcf0*/ System.Threading.Tasks.Task UpdateArenaCpAsync(long arncp);
                    /*0x106dd5c*/ System.Threading.Tasks.Task UpdateWorldArenaCpAsync(long wldcp);
                    /*0x106ddc8*/ System.Threading.Tasks.Task UpdateGuildWarCpAsync(long warcp);
                    /*0x106de34*/ System.Threading.Tasks.Task ExitPrivateAsync(long playerid);
                    /*0x106dea0*/ System.Threading.Tasks.Task LogoutAsync();
                }
            }

            interface IChatHub : MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, MagicOnion.IStreamingHubMarker, MagicOnion.IServiceMarker
            {
                System.Threading.Tasks.Task LoginAsync(string token);
                System.Threading.Tasks.Task UpdatePlayerAsync();
                System.Threading.Tasks.Task LuckyAsync(string nickname, int unitid);
                System.Threading.Tasks.Task MoveLangChannelAsync(int channel);
                System.Threading.Tasks.Task GroupChatAsync(string groupid, string msg);
                System.Threading.Tasks.Task PrivateChatAsync(long playerid, string msg);
                System.Threading.Tasks.Task AdminNoticeAsync(string notice);
                System.Threading.Tasks.Task UpdateGuildWarDefenseDeckAsync(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
                System.Threading.Tasks.Task UpdateAllCpAsync(long allcp);
                System.Threading.Tasks.Task UpdateArenaCpAsync(long arncp);
                System.Threading.Tasks.Task UpdateWorldArenaCpAsync(long wldcp);
                System.Threading.Tasks.Task UpdateGuildWarCpAsync(long warcp);
                System.Threading.Tasks.Task ExitPrivateAsync(long playerid);
                System.Threading.Tasks.Task LogoutAsync();
            }

            interface IChatHubReceiver
            {
                void OnLogin(int result, System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.Room> rooms);
                void OnGroupChat(int result, string groupid, ChatApp.Shared.MessagePackObjects.SMessage chat);
                void OnPrivateChat(int result, ChatApp.Shared.MessagePackObjects.SMessage chat);
                void OnMoveLangChannel(int result, ChatApp.Shared.MessagePackObjects.Room newroom);
                void OnLucky(int unitid, string nickname);
                void OnAdminNotice(string notice);
                void OnUpdatedGuildWarHero(int heroid);
            }
        }
    }
}

namespace MagicOnion
{
    class MagicOnionInitializer
    {
        static /*0x0*/ bool isRegistered;

        static /*0xdde4fc*/ MagicOnionInitializer();
        static /*0xdde35c*/ void Register();

        class <>c
        {
            static /*0x0*/ MagicOnion.MagicOnionInitializer.<> <>9;
            static /*0x8*/ System.Func<Grpc.Core.CallInvoker, ChatApp.Shared.Hubs.IChatHubReceiver, string, Grpc.Core.CallOptions, MessagePack.MessagePackSerializerOptions, MagicOnion.Client.IMagicOnionClientLogger, ChatApp.Shared.Hubs.IChatHub> <>9__1_0;

            static /*0xe5c4ec*/ <>c();
            /*0xe5c54c*/ <>c();
            /*0xe5c554*/ ChatApp.Shared.Hubs.IChatHub <Register>b__1_0(Grpc.Core.CallInvoker a, ChatApp.Shared.Hubs.IChatHubReceiver _, string b, Grpc.Core.CallOptions c, MessagePack.MessagePackSerializerOptions d, MagicOnion.Client.IMagicOnionClientLogger e);
        }
    }

    namespace Resolvers
    {
        class MagicOnionResolver : MessagePack.IFormatterResolver
        {
            static /*0x0*/ MessagePack.IFormatterResolver Instance;

            static /*0xdde508*/ MagicOnionResolver();
            /*0xdde500*/ MagicOnionResolver();
            MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>();

            class FormatterCache<T>
            {
                static /*0x0*/ MessagePack.Formatters.IMessagePackFormatter<T> formatter;

                static FormatterCache();
            }
        }

        class MagicOnionResolverGetFormatterHelper
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<System.Type, int> lookup;

            static /*0xdde568*/ MagicOnionResolverGetFormatterHelper();
            static /*0xdde848*/ object GetFormatter(System.Type t);
        }
    }
}

namespace TableData
{
    class TableGroup
    {
        /*0x10*/ TableData.AbilityGradeTable AbilityGradeTable;
        /*0x18*/ TableData.AbilityOptionValueTable AbilityOptionValueTable;
        /*0x20*/ TableData.AbilityPercentTable AbilityPercentTable;
        /*0x28*/ TableData.AbilityResetTable AbilityResetTable;
        /*0x30*/ TableData.BattleCampaignTable BattleCampaignTable;
        /*0x38*/ TableData.BattleDungeonTable BattleDungeonTable;
        /*0x40*/ TableData.BattleGuildbossTable BattleGuildbossTable;
        /*0x48*/ TableData.BattleHardCampaignTable BattleHardCampaignTable;
        /*0x50*/ TableData.BattleIdleTable BattleIdleTable;
        /*0x58*/ TableData.BattleTowerTable BattleTowerTable;
        /*0x60*/ TableData.BattleTutorialTable BattleTutorialTable;
        /*0x68*/ TableData.BountyLVTable BountyLVTable;
        /*0x70*/ TableData.BountyQuestTable BountyQuestTable;
        /*0x78*/ TableData.MenuSettingBaseTable MenuSettingBaseTable;
        /*0x80*/ TableData.ProductDataTable ProductDataTable;
        /*0x88*/ TableData.TriggerDataTable TriggerDataTable;
        /*0x90*/ TableData.ConfigTable ConfigTable;
        /*0x98*/ TableData.FBEventLogTable FBEventLogTable;
        /*0xa0*/ TableData.ArenaTable ArenaTable;
        /*0xa8*/ TableData.ArenaRankTable ArenaRankTable;
        /*0xb0*/ TableData.ChapterTable ChapterTable;
        /*0xb8*/ TableData.ChestTable ChestTable;
        /*0xc0*/ TableData.ContentHelpTable ContentHelpTable;
        /*0xc8*/ TableData.ContentUnlockTable ContentUnlockTable;
        /*0xd0*/ TableData.EmoticonTable EmoticonTable;
        /*0xd8*/ TableData.FastIdleTable FastIdleTable;
        /*0xe0*/ TableData.FriendTable FriendTable;
        /*0xe8*/ TableData.GachaTable GachaTable;
        /*0xf0*/ TableData.GachaBonusTable GachaBonusTable;
        /*0xf8*/ TableData.GachaDropPatternTable GachaDropPatternTable;
        /*0x100*/ TableData.GachaUnitPercentTable GachaUnitPercentTable;
        /*0x108*/ TableData.HardChapterTable HardChapterTable;
        /*0x110*/ TableData.HardStageTable HardStageTable;
        /*0x118*/ TableData.HeroLvSyncTable HeroLvSyncTable;
        /*0x120*/ TableData.IdleUnitTipDialogTable IdleUnitTipDialogTable;
        /*0x128*/ TableData.ItemTable ItemTable;
        /*0x130*/ TableData.MazeBattleTable MazeBattleTable;
        /*0x138*/ TableData.MazeCourseTable MazeCourseTable;
        /*0x140*/ TableData.MazeMateEquipTable MazeMateEquipTable;
        /*0x148*/ TableData.ProfileSkinTable ProfileSkinTable;
        /*0x150*/ TableData.StageTable StageTable;
        /*0x158*/ TableData.StageIdleTable StageIdleTable;
        /*0x160*/ TableData.SystemBasicTable SystemBasicTable;
        /*0x168*/ TableData.TowerTable TowerTable;
        /*0x170*/ TableData.TowerFireTable TowerFireTable;
        /*0x178*/ TableData.TowerNaturalTable TowerNaturalTable;
        /*0x180*/ TableData.TowerNormalTable TowerNormalTable;
        /*0x188*/ TableData.TowerWaterTable TowerWaterTable;
        /*0x190*/ TableData.TowerWindTable TowerWindTable;
        /*0x198*/ TableData.TutorialTable TutorialTable;
        /*0x1a0*/ TableData.TutorialBattleHeroTable TutorialBattleHeroTable;
        /*0x1a8*/ TableData.UserLvExpTable UserLvExpTable;
        /*0x1b0*/ TableData.VipTable VipTable;
        /*0x1b8*/ TableData.GuildTable GuildTable;
        /*0x1c0*/ TableData.GuildBossTable GuildBossTable;
        /*0x1c8*/ TableData.GuildHuntingRewardTable GuildHuntingRewardTable;
        /*0x1d0*/ TableData.GuildLevelTable GuildLevelTable;
        /*0x1d8*/ TableData.GuildWarTable GuildWarTable;
        /*0x1e0*/ TableData.GuildWarOrganizeTable GuildWarOrganizeTable;
        /*0x1e8*/ TableData.GuildWarPointTable GuildWarPointTable;
        /*0x1f0*/ TableData.GuildWarRankTable GuildWarRankTable;
        /*0x1f8*/ TableData.GuildWarRankGroupTable GuildWarRankGroupTable;
        /*0x200*/ TableData.GuildWarRankRewardTable GuildWarRankRewardTable;
        /*0x208*/ TableData.GuildWarTacticTable GuildWarTacticTable;
        /*0x210*/ TableData.GuildWasteTable GuildWasteTable;
        /*0x218*/ TableData.HighDropRateTable HighDropRateTable;
        /*0x220*/ TableData.HighGachaTable HighGachaTable;
        /*0x228*/ TableData.RevertTable RevertTable;
        /*0x230*/ TableData.TrainingRoomTable TrainingRoomTable;
        /*0x238*/ TableData.WorldArenaTable WorldArenaTable;
        /*0x240*/ TableData.WorldArenaChampRewardTable WorldArenaChampRewardTable;
        /*0x248*/ TableData.WorldArenaMatchingPointTable WorldArenaMatchingPointTable;
        /*0x250*/ TableData.WorldArenaTierTable WorldArenaTierTable;
        /*0x258*/ TableData.DungeonTable DungeonTable;
        /*0x260*/ TableData.DungeonDialogTable DungeonDialogTable;
        /*0x268*/ TableData.DungeonDialogDirectionTable DungeonDialogDirectionTable;
        /*0x270*/ TableData.DungeonGroupTable DungeonGroupTable;
        /*0x278*/ TableData.DungeonMapTable DungeonMapTable;
        /*0x280*/ TableData.DungeonMateEquipTable DungeonMateEquipTable;
        /*0x288*/ TableData.DungeonRewardTable DungeonRewardTable;
        /*0x290*/ TableData.DungeonSettingTable DungeonSettingTable;
        /*0x298*/ TableData.DungeonTileTable DungeonTileTable;
        /*0x2a0*/ TableData.EventTable EventTable;
        /*0x2a8*/ TableData.EventAttendanceTable EventAttendanceTable;
        /*0x2b0*/ TableData.EventBossTable EventBossTable;
        /*0x2b8*/ TableData.EventBossRewardTable EventBossRewardTable;
        /*0x2c0*/ TableData.EventBuyInAppTable EventBuyInAppTable;
        /*0x2c8*/ TableData.EventCompleteTable EventCompleteTable;
        /*0x2d0*/ TableData.EventCompleteMissionTable EventCompleteMissionTable;
        /*0x2d8*/ TableData.EventCurrencyLocalTable EventCurrencyLocalTable;
        /*0x2e0*/ TableData.EventExchangeTable EventExchangeTable;
        /*0x2e8*/ TableData.EventGroupTable EventGroupTable;
        /*0x2f0*/ TableData.EventHotTimeTable EventHotTimeTable;
        /*0x2f8*/ TableData.EventMissionTable EventMissionTable;
        /*0x300*/ TableData.EventMissionPointTable EventMissionPointTable;
        /*0x308*/ TableData.EventPageTable EventPageTable;
        /*0x310*/ TableData.EventPassTable EventPassTable;
        /*0x318*/ TableData.EventPassRewardTable EventPassRewardTable;
        /*0x320*/ TableData.EventPresetTable EventPresetTable;
        /*0x328*/ TableData.EventQuestTable EventQuestTable;
        /*0x330*/ TableData.EventQuestGroupTable EventQuestGroupTable;
        /*0x338*/ TableData.EventRouletteTable EventRouletteTable;
        /*0x340*/ TableData.EventSelectTable EventSelectTable;
        /*0x348*/ TableData.EventSingleTable EventSingleTable;
        /*0x350*/ TableData.EventTimeSectionTable EventTimeSectionTable;
        /*0x358*/ TableData.FurnitureTable FurnitureTable;
        /*0x360*/ TableData.FurnitureContentsEffectTable FurnitureContentsEffectTable;
        /*0x368*/ TableData.FurnitureEffectTypeTable FurnitureEffectTypeTable;
        /*0x370*/ TableData.FurnitureExpTable FurnitureExpTable;
        /*0x378*/ TableData.FurnitureHeroEffectTable FurnitureHeroEffectTable;
        /*0x380*/ TableData.FurnitureLevelTypeListTable FurnitureLevelTypeListTable;
        /*0x388*/ TableData.FurnitureLevelupTable FurnitureLevelupTable;
        /*0x390*/ TableData.FurnitureSetTable FurnitureSetTable;
        /*0x398*/ TableData.FurnitureShopTable FurnitureShopTable;
        /*0x3a0*/ TableData.FurnitureShopListTable FurnitureShopListTable;
        /*0x3a8*/ TableData.HousingTable HousingTable;
        /*0x3b0*/ TableData.HousingDismissTable HousingDismissTable;
        /*0x3b8*/ TableData.HousingFloorTable HousingFloorTable;
        /*0x3c0*/ TableData.HousingFloorPatternTable HousingFloorPatternTable;
        /*0x3c8*/ TableData.HousingGachaTable HousingGachaTable;
        /*0x3d0*/ TableData.AdvanceEquipTable AdvanceEquipTable;
        /*0x3d8*/ TableData.ArtifactTable ArtifactTable;
        /*0x3e0*/ TableData.BasicTable BasicTable;
        /*0x3e8*/ TableData.BuffTable BuffTable;
        /*0x3f0*/ TableData.DemoDataTable DemoDataTable;
        /*0x3f8*/ TableData.EnhanceEquipTable EnhanceEquipTable;
        /*0x400*/ TableData.EquipmentTable EquipmentTable;
        /*0x408*/ TableData.FactionBuffTable FactionBuffTable;
        /*0x410*/ TableData.SkillBaseTable SkillBaseTable;
        /*0x418*/ TableData.SkillDescTable SkillDescTable;
        /*0x420*/ TableData.SkillExtraTable SkillExtraTable;
        /*0x428*/ TableData.SkillFXTable SkillFXTable;
        /*0x430*/ TableData.SkillLVTable SkillLVTable;
        /*0x438*/ TableData.UnitBaseTable UnitBaseTable;
        /*0x440*/ TableData.UnitGradeTable UnitGradeTable;
        /*0x448*/ TableData.UnitGradeLVTable UnitGradeLVTable;
        /*0x450*/ TableData.UnitLVTable UnitLVTable;
        /*0x458*/ TableData.UnitTierTable UnitTierTable;
        /*0x460*/ TableData.UnitTierLVTable UnitTierLVTable;
        /*0x468*/ TableData.PveChallengeTable PveChallengeTable;
        /*0x470*/ TableData.PveClearRewardTable PveClearRewardTable;
        /*0x478*/ TableData.PveNoblityTable PveNoblityTable;
        /*0x480*/ TableData.QuestTable QuestTable;
        /*0x488*/ TableData.QuestArenaTable QuestArenaTable;
        /*0x490*/ TableData.QuestBuyTable QuestBuyTable;
        /*0x498*/ TableData.QuestChapterClearTable QuestChapterClearTable;
        /*0x4a0*/ TableData.QuestEquipUpgradeTable QuestEquipUpgradeTable;
        /*0x4a8*/ TableData.QuestFriendTable QuestFriendTable;
        /*0x4b0*/ TableData.QuestGachaTable QuestGachaTable;
        /*0x4b8*/ TableData.QuestGetItemTable QuestGetItemTable;
        /*0x4c0*/ TableData.QuestGroupTable QuestGroupTable;
        /*0x4c8*/ TableData.QuestHeroGetTable QuestHeroGetTable;
        /*0x4d0*/ TableData.QuestHeroUpgradeTable QuestHeroUpgradeTable;
        /*0x4d8*/ TableData.QuestLabyrinthTable QuestLabyrinthTable;
        /*0x4e0*/ TableData.QuestLevelTable QuestLevelTable;
        /*0x4e8*/ TableData.QuestMoveTable QuestMoveTable;
        /*0x4f0*/ TableData.QuestPrizeBoardTable QuestPrizeBoardTable;
        /*0x4f8*/ TableData.QuestPropertyPointTable QuestPropertyPointTable;
        /*0x500*/ TableData.QuestResonanceTable QuestResonanceTable;
        /*0x508*/ TableData.QuestSpiritTowerClearTable QuestSpiritTowerClearTable;
        /*0x510*/ TableData.QuestStageClearTable QuestStageClearTable;
        /*0x518*/ TableData.QuestStageIdleTable QuestStageIdleTable;
        /*0x520*/ TableData.QuestStageTryTable QuestStageTryTable;
        /*0x528*/ TableData.RaceAccelTable RaceAccelTable;
        /*0x530*/ TableData.RaceRewardTable RaceRewardTable;
        /*0x538*/ TableData.RaceTileTable RaceTileTable;
        /*0x540*/ TableData.RelationTable RelationTable;
        /*0x548*/ TableData.RunLifeTable RunLifeTable;
        /*0x550*/ TableData.RunRewardTable RunRewardTable;
        /*0x558*/ TableData.CashShopBeginnerTable CashShopBeginnerTable;
        /*0x560*/ TableData.CashShopDailyTable CashShopDailyTable;
        /*0x568*/ TableData.CashShopHeroTable CashShopHeroTable;
        /*0x570*/ TableData.CashShopIndexTable CashShopIndexTable;
        /*0x578*/ TableData.CashShopInstantTable CashShopInstantTable;
        /*0x580*/ TableData.CashShopLimitTable CashShopLimitTable;
        /*0x588*/ TableData.CashShopMonthlyTable CashShopMonthlyTable;
        /*0x590*/ TableData.CashShopQuestTable CashShopQuestTable;
        /*0x598*/ TableData.CashShopQuestRewardTable CashShopQuestRewardTable;
        /*0x5a0*/ TableData.CashShopSkinTable CashShopSkinTable;
        /*0x5a8*/ TableData.CashShopSkinPieceTable CashShopSkinPieceTable;
        /*0x5b0*/ TableData.CashShopStarTable CashShopStarTable;
        /*0x5b8*/ TableData.CashShopSubscriptionTable CashShopSubscriptionTable;
        /*0x5c0*/ TableData.CashShopWeeklyTable CashShopWeeklyTable;
        /*0x5c8*/ TableData.ContentShopTable ContentShopTable;
        /*0x5d0*/ TableData.ContentShopArrangementTable ContentShopArrangementTable;
        /*0x5d8*/ TableData.PackageProductGroupTable PackageProductGroupTable;
        /*0x5e0*/ TableData.PackageTimeTable PackageTimeTable;
        /*0x5e8*/ TableData.SkinBasicTable SkinBasicTable;
        /*0x5f0*/ TableData.VoiceTable VoiceTable;
        /*0x5f8*/ TableData.ArenaConfigTable ArenaConfigTable;
        /*0x600*/ TableData.WorldArenaTier2Table WorldArenaTier2Table;
        /*0x608*/ TableData.WorldBossMissionTable WorldBossMissionTable;
        /*0x610*/ TableData.WorldBossStepTable WorldBossStepTable;

        /*0xc9f480*/ TableGroup();
    }

    class CSVTableReader
    {
        static /*0x0*/ string mPath;
        static /*0x8*/ string mTraceMessage;

        static /*0x1340dc4*/ void SetPath(string path);
        static /*0x1340e14*/ string TraceMessage();
        static /*0x1340e60*/ void Read_Resource(string file, System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func);
        static /*0x1340f04*/ void Read(string file, System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func, bool resources);

        class ParseBool : System.MulticastDelegate
        {
            /*0xda5884*/ ParseBool(object object, nint method);
            /*0xda58e4*/ bool Invoke(string v);
            /*0xda5c68*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda5c8c*/ bool EndInvoke(System.IAsyncResult result);
        }

        class ParseInt : System.MulticastDelegate
        {
            /*0xda60e8*/ ParseInt(object object, nint method);
            /*0xda6148*/ int Invoke(string v);
            /*0xda64c8*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda64ec*/ int EndInvoke(System.IAsyncResult result);
        }

        class ParseLong : System.MulticastDelegate
        {
            /*0xda6518*/ ParseLong(object object, nint method);
            /*0xda6578*/ long Invoke(string v);
            /*0xda68f8*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda691c*/ long EndInvoke(System.IAsyncResult result);
        }

        class ParseFloat : System.MulticastDelegate
        {
            /*0xda5cb8*/ ParseFloat(object object, nint method);
            /*0xda5d18*/ float Invoke(string v);
            /*0xda6098*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda60bc*/ float EndInvoke(System.IAsyncResult result);
        }

        class ParseString : System.MulticastDelegate
        {
            /*0xda6948*/ ParseString(object object, nint method);
            /*0xda69a8*/ string Invoke(string v);
            /*0xda6d28*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda6d4c*/ string EndInvoke(System.IAsyncResult result);
        }

        class Reader
        {
            /*0x10*/ string <CsvFileName>k__BackingField;
            /*0x18*/ int <Row>k__BackingField;
            /*0x20*/ string <ColName>k__BackingField;

            /*0xda74e4*/ Reader();
            /*0xda6d58*/ string get_CsvFileName();
            /*0xda6d60*/ void set_CsvFileName(string value);
            /*0xda6d68*/ int get_Row();
            /*0xda6d70*/ void set_Row(int value);
            /*0xda6d78*/ string get_ColName();
            /*0xda6d80*/ void set_ColName(string value);
            /*0xda6d88*/ string TraceMessage();
            /*0xda6e1c*/ void Read(string file, System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func, bool resources);

            class <>c__DisplayClass13_0
            {
                /*0x10*/ TableData.CSVTableReader.Reader <>4__this;
                /*0x18*/ int colcnt;
                /*0x20*/ System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func;

                /*0xd8f64c*/ <>c__DisplayClass13_0();
                /*0xd8f654*/ void <Read>g__ParseRow|0(System.Func<int, System.ValueTuple<string, string>> kvfunc);
            }

            class <>c__DisplayClass13_1
            {
                /*0x10*/ System.Collections.Generic.List<System.String[]> filedat;
                /*0x18*/ TableData.CSVTableReader.Reader.<> CS$<>8__locals1;

                /*0xd8fbb8*/ <>c__DisplayClass13_1();
                /*0xd8fbc0*/ System.ValueTuple<string, string> <Read>b__1(int p);
            }

            class <>c__DisplayClass13_2
            {
                /*0x10*/ CsvHelper.CsvReader csv;

                /*0xd8fce4*/ <>c__DisplayClass13_2();
                /*0xd8fcec*/ System.ValueTuple<string, string> <Read>b__2(int p);
            }

            class <>c__DisplayClass13_3
            {
                /*0x10*/ System.Collections.Generic.Dictionary<string, string> smap;
                /*0x18*/ System.Collections.Generic.Dictionary<string, int> imap;
                /*0x20*/ System.Collections.Generic.Dictionary<string, bool> bmap;
                /*0x28*/ System.Collections.Generic.Dictionary<string, long> lmap;
                /*0x30*/ System.Collections.Generic.Dictionary<string, float> fmap;
                /*0x38*/ TableData.CSVTableReader.Reader.<> CS$<>8__locals2;

                /*0xd8fbb0*/ <>c__DisplayClass13_3();
                /*0xd8fdbc*/ string <Read>b__3(string s);
                /*0xd8fe34*/ int <Read>b__4(string i);
                /*0xd8feac*/ bool <Read>b__5(string b);
                /*0xd8ff24*/ long <Read>b__6(string l);
                /*0xd8ff9c*/ float <Read>b__7(string f);
            }
        }
    }

    class TableData_Abilitypercent
    {
        /*0x10*/ int index;
        /*0x18*/ string AbilityOptionID;
        /*0x20*/ string AbilityName;
        /*0x28*/ float AbilityAGrade;
        /*0x2c*/ float AbilitySGrade;
        /*0x30*/ float AbilitySSGrade;
        /*0x34*/ float AbilitySSSGrade;

        /*0xc9eea0*/ TableData_Abilitypercent();
    }

    class AbilityPercentTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> List;

        /*0x12065a8*/ AbilityPercentTable();
        /*0x12066a0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Abilityoptionvalue
    {
        /*0x10*/ int index;
        /*0x18*/ string AbilityValueType;
        /*0x20*/ string AbilityOptionID;
        /*0x28*/ string AbilityGrade;
        /*0x30*/ int ValueIndex;
        /*0x34*/ int AbilityValueCondition;
        /*0x38*/ float AbilityValue;
        /*0x3c*/ float AbilityValuePercent;

        /*0xc9ee98*/ TableData_Abilityoptionvalue();
    }

    class AbilityOptionValueTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> List;

        /*0x1205118*/ AbilityOptionValueTable();
        /*0x1205210*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Abilitygrade
    {
        /*0x10*/ string AbilityGrade;
        /*0x18*/ string OptionGrade;
        /*0x20*/ float OptionSlot1;
        /*0x24*/ float OptionSlot2;
        /*0x28*/ float OptionSlot3;

        /*0xc9ee90*/ TableData_Abilitygrade();
    }

    class AbilityGradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilitygrade> List;

        /*0x12029b4*/ AbilityGradeTable();
        /*0x1202aac*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Abilityreset
    {
        /*0x10*/ string AbilityGrade;
        /*0x18*/ int GoldCost;
        /*0x1c*/ int StarCost;
        /*0x20*/ bool OptionLock;
        /*0x24*/ int OptionLock1CostGold;
        /*0x28*/ int OptionLock1CostStar;
        /*0x2c*/ int OptionLock2CostGold;
        /*0x30*/ int OptionLock2CostStar;
        /*0x34*/ float OptionUpgradePercent;

        /*0xc9eea8*/ TableData_Abilityreset();
    }

    class AbilityResetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilityreset> List;

        /*0x1209bbc*/ AbilityResetTable();
        /*0x1209cb4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Stagebattle
    {
        /*0x10*/ int Index;
        /*0x18*/ string StageName;
        /*0x20*/ float UnlockCP;
        /*0x28*/ string BattleType;
        /*0x30*/ int BossPOS;
        /*0x34*/ float BossSizeUp;
        /*0x38*/ int BossAddHP;
        /*0x3c*/ int BossAddDMG;
        /*0x40*/ int MonsterAddHP;
        /*0x44*/ int MonsterAddDMG;
        /*0x48*/ float EnemyAddMP_CF;
        /*0x4c*/ int HeroINIT_MP;
        /*0x50*/ float HeroINIT_MP_CF;
        /*0x58*/ string FG_IMG;
        /*0x60*/ string BG_IMG;
        /*0x68*/ string ENV_IMG;
        /*0x70*/ bool CorrectionApply;
        /*0x78*/ long View_Cp;
        /*0x80*/ int[] EnemyN_ID;
        /*0x88*/ int[] EnemyN_Grade;
        /*0x90*/ int[] EnemyN_Tier;
        /*0x98*/ int[] EnemyN_LV;
        /*0xa0*/ int[] EnemyN_MP;
        /*0xa8*/ int[] EnemyN_INITBuff;
        /*0xb0*/ int[] Enemy1_EquipN;
        /*0xb8*/ int[] Enemy2_EquipN;
        /*0xc0*/ int[] Enemy3_EquipN;
        /*0xc8*/ int[] Enemy4_EquipN;
        /*0xd0*/ int[] Enemy5_EquipN;
        /*0xd8*/ int[] ViewEnemyN_LV;

        /*0xc9eee8*/ TableData_Stagebattle();
    }

    class TableData_Battlecampaign : TableData.TableData_Stagebattle
    {
        /*0xc9eee0*/ TableData_Battlecampaign();
    }

    class BattleCampaignTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battlecampaign> List;

        /*0xf8930c*/ BattleCampaignTable();
        /*0xf89404*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battlehardcampaign : TableData.TableData_Stagebattle
    {
        /*0xc9ef00*/ TableData_Battlehardcampaign();
    }

    class BattleHardCampaignTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battlehardcampaign> List;

        /*0xe30ee0*/ BattleHardCampaignTable();
        /*0xe30fd8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battletower : TableData.TableData_Stagebattle
    {
        /*0xc9ef10*/ TableData_Battletower();
    }

    class BattleTowerTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battletower> List;

        /*0x1360358*/ BattleTowerTable();
        /*0x1360450*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battledungeon : TableData.TableData_Stagebattle
    {
        /*0xc9eef0*/ TableData_Battledungeon();
    }

    class BattleDungeonTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battledungeon> List;

        /*0xf8a4a0*/ BattleDungeonTable();
        /*0xf8a598*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battleidle : TableData.TableData_Stagebattle
    {
        /*0xc9ef08*/ TableData_Battleidle();
    }

    class BattleIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battleidle> List;

        /*0xe31fb0*/ BattleIdleTable();
        /*0xe320a8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battletutorial : TableData.TableData_Stagebattle
    {
        /*0xc9ef18*/ TableData_Battletutorial();
    }

    class BattleTutorialTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battletutorial> List;

        /*0x136141c*/ BattleTutorialTable();
        /*0x1361514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battleguildboss : TableData.TableData_Stagebattle
    {
        /*0xc9eef8*/ TableData_Battleguildboss();
    }

    class BattleGuildbossTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battleguildboss> List;

        /*0xe2ff94*/ BattleGuildbossTable();
        /*0xe3008c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Bountylv
    {
        /*0x10*/ int LV;
        /*0x14*/ int Quest_STAR6;
        /*0x18*/ int Quest_STAR5;
        /*0x1c*/ int Quest_STAR4;
        /*0x20*/ int Quest_STAR3;
        /*0x24*/ int Quest_STAR2;
        /*0x28*/ int Quest_STAR1;
        /*0x2c*/ int C_RewardDust;
        /*0x30*/ int C_RewardGold;
        /*0x34*/ int C_RewardSoul;
        /*0x38*/ int C_RewardStar;
        /*0x3c*/ int Lvup_SoloStar;
        /*0x40*/ int Lvup_SoloQty;
        /*0x44*/ int Lvup_TeamStar;
        /*0x48*/ int Lvup_TeamQty;
        /*0x50*/ string Lvup_Desc;
        /*0x58*/ string Lvup_SoloCond;
        /*0x60*/ string Lvup_TeamCond;

        /*0xc9ef20*/ TableData_Bountylv();
    }

    class BountyLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Bountylv> List;

        /*0x136d3b0*/ BountyLVTable();
        /*0x136d4a8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Bountyquest
    {
        /*0x10*/ int Index;
        /*0x18*/ string BountyType;
        /*0x20*/ int Star;
        /*0x28*/ string Reward;
        /*0x30*/ int SpendTime;
        /*0x34*/ int StarUnitQty;
        /*0x38*/ int Faction1Qty;
        /*0x3c*/ int Faction2Qty;

        /*0xc9ef28*/ TableData_Bountyquest();
    }

    class BountyQuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Bountyquest> List;

        /*0x16ee2ec*/ BountyQuestTable();
        /*0x16ee3e4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Menusettingbase
    {
        /*0x10*/ int Index;
        /*0x18*/ string Key;
        /*0x20*/ string Name;
        /*0x28*/ string AssBundle;
        /*0x30*/ string Icon;
        /*0x38*/ string Component;
        /*0x40*/ string RedDotComponent;
        /*0x48*/ bool HotIcon;

        /*0xc9f260*/ TableData_Menusettingbase();
    }

    class MenuSettingBaseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Menusettingbase> List;

        /*0x2b3b71c*/ MenuSettingBaseTable();
        /*0x2b3b814*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Productdata
    {
        /*0x10*/ int Index;
        /*0x18*/ string ConsumeType;
        /*0x20*/ string Product;

        /*0xc9f278*/ TableData_Productdata();
    }

    class ProductDataTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Productdata> List;

        /*0x100e130*/ ProductDataTable();
        /*0x100e228*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Triggerdata
    {
        /*0x10*/ string Trigger;
        /*0x18*/ string Main;
        /*0x20*/ string Sub;
        /*0x28*/ string UsedParam;
        /*0x30*/ int OutMissionCountParam;
        /*0x38*/ string Title;
        /*0x40*/ string Desc;
        /*0x48*/ string GTE_Title;
        /*0x50*/ string GTE_Desc;
        /*0x58*/ string UnlockContent;
        /*0x60*/ string MoveContentsType;

        /*0xc9f3e8*/ TableData_Triggerdata();
    }

    class TriggerDataTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Triggerdata> List;

        /*0x1120b3c*/ TriggerDataTable();
        /*0x1120c34*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Config
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9efb8*/ TableData_Config();
    }

    class ConfigTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Config> List;

        /*0x10e83c8*/ ConfigTable();
        /*0x10e84c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Fbeventlog
    {
        /*0x10*/ string type;
        /*0x18*/ string typeValue;
        /*0x20*/ string key;
        /*0x28*/ bool isSameKeyValue;

        /*0xc9f110*/ TableData_Fbeventlog();
    }

    class FBEventLogTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> List;

        /*0x11d97a8*/ FBEventLogTable();
        /*0x11d98a0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Item
    {
        /*0x10*/ int Index;
        /*0x18*/ string Name;
        /*0x20*/ string Description;
        /*0x28*/ string Type;
        /*0x30*/ int Quality;
        /*0x34*/ int BuyPriceDiamond;
        /*0x38*/ string RandomPercent;
        /*0x40*/ string Containments;
        /*0x48*/ int RewardTime;
        /*0x4c*/ int Count;
        /*0x50*/ int SoulStoneGrade;
        /*0x54*/ int UseLevelLimit;
        /*0x58*/ int HPCharge;
        /*0x5c*/ int MPCharge;
        /*0x60*/ string UIIcon;
        /*0x68*/ string UISmallIcon;
        /*0x70*/ int FactionID;
        /*0x74*/ int EquipExp;

        /*0xc9f240*/ TableData_Item();
    }

    class ItemTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Item> List;

        /*0x1585968*/ ItemTable();
        /*0x1585a60*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gacha
    {
        /*0x10*/ int Index;
        /*0x14*/ int Category;
        /*0x18*/ string Name;
        /*0x20*/ int GachaCount;
        /*0x28*/ string PriceType;
        /*0x30*/ string PriceArg1;
        /*0x38*/ string PriceArg2;
        /*0x40*/ string SubPricetype;
        /*0x48*/ string SubPriceArg1;
        /*0x50*/ string SubPriceArg2;
        /*0x58*/ string FactionType;
        /*0x60*/ int DropPattern;
        /*0x64*/ int GachaProgressPt;
        /*0x68*/ string TitleColor;
        /*0x70*/ string TitleOutColor;
        /*0x78*/ string UnitDropPercent;
        /*0x80*/ string Background;
        /*0x88*/ string Background_Small;
        /*0x90*/ string LogID;

        /*0xc9f170*/ TableData_Gacha();
    }

    class GachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gacha> List;

        /*0xeca41c*/ GachaTable();
        /*0xeca514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gachabonus
    {
        /*0x10*/ int Index;
        /*0x14*/ int UpgradePt;
        /*0x18*/ int Count;
        /*0x20*/ string Rewards;

        /*0xc9f178*/ TableData_Gachabonus();
    }

    class GachaBonusTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> List;

        /*0x10ba898*/ GachaBonusTable();
        /*0x10ba990*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gachadroppattern
    {
        /*0x10*/ int index;
        /*0x18*/ string DropGrade;
        /*0x20*/ string DropPercent;
        /*0x28*/ string NewGrade;
        /*0x30*/ string NewPercent;

        /*0xc9f180*/ TableData_Gachadroppattern();
    }

    class GachaDropPatternTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gachadroppattern> List;

        /*0x10bcf48*/ GachaDropPatternTable();
        /*0x10bd040*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gachaunitpercent
    {
        /*0x10*/ int Index;
        /*0x14*/ float UnitDropPercent1;
        /*0x18*/ float UnitDropPercent2;
        /*0x1c*/ float UnitDropPercent3;
        /*0x20*/ float UnitDropPercent4;

        /*0xc9f188*/ TableData_Gachaunitpercent();
    }

    class GachaUnitPercentTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> List;

        /*0xeca8ac*/ GachaUnitPercentTable();
        /*0xeca9a4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Stage
    {
        /*0x10*/ int Index;
        /*0x14*/ int ChapterID;
        /*0x18*/ int StageID;
        /*0x20*/ string MappiontName;
        /*0x28*/ int ChallengeTimes;
        /*0x2c*/ int UserExp;
        /*0x30*/ string Rewards;
        /*0x38*/ string Type;
        /*0x40*/ string Desctription;
        /*0x48*/ bool InfoView;

        /*0xc9354c*/ TableData_Stage();
    }

    class StageTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Stage> List;

        /*0xc94864*/ StageTable();
        /*0xc9495c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Hardstage
    {
        /*0x10*/ int Index;
        /*0x14*/ int ChapterID;
        /*0x18*/ int StageID;
        /*0x20*/ string MappiontName;
        /*0x28*/ int ChallengeTimes;
        /*0x2c*/ int UserExp;
        /*0x30*/ string Rewards;
        /*0x38*/ string Type;
        /*0x40*/ string Desctription;
        /*0x48*/ bool InfoView;

        /*0xc935e8*/ TableData_Hardstage();
    }

    class HardStageTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Hardstage> List;

        /*0x10f6d68*/ HardStageTable();
        /*0x10f6e60*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Stageidle
    {
        /*0x10*/ int Index;
        /*0x14*/ int StageBattle;
        /*0x18*/ int BasicRewardCD;
        /*0x20*/ string BasicReward;
        /*0x28*/ int UserExp;
        /*0x30*/ string CurrencyReward1;
        /*0x38*/ int[] ItemIDN;
        /*0x40*/ int[] ChestIDN;
        /*0x48*/ int[] ItemCDN;
        /*0x50*/ int[] ChestCDN;
        /*0x58*/ string[] RandomItemNCD;

        /*0xc8fc84*/ TableData_Stageidle();
    }

    class StageIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Stageidle> List;

        /*0xc8f158*/ StageIdleTable();
        /*0xc8f250*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Chest
    {
        /*0x10*/ int Index;
        /*0x14*/ float ChestPercent;
        /*0x18*/ int ChestItem1;
        /*0x1c*/ int ChestItem2;
        /*0x20*/ int ChestItem3;
        /*0x24*/ int ChestItem4;
        /*0x28*/ int ChestItem5;
        /*0x2c*/ int ChestItem6;
        /*0x30*/ int ChestItem7;
        /*0x34*/ int ChestItem8;
        /*0x38*/ int ChestItem9;
        /*0x3c*/ int ChestItem10;
        /*0x40*/ int ChestItem11;
        /*0x44*/ int ChestItem12;

        /*0xc9efb0*/ TableData_Chest();
    }

    class ChestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Chest> List;

        /*0x10ded88*/ ChestTable();
        /*0x10dee80*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Tower
    {
        /*0x10*/ int Index;
        /*0x18*/ string TowerId;
        /*0x20*/ string EnterDay;
        /*0x28*/ int UseFaction;
        /*0x2c*/ int DailyChallengeFloor;
        /*0x30*/ string ContentId;

        /*0xc9f3b0*/ TableData_Tower();
    }

    class TowerTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Tower> List;

        /*0x111e2dc*/ TowerTable();
        /*0x111e3d4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerfloor
    {
        /*0x10*/ int FloorID;
        /*0x14*/ int BattleID;
        /*0x18*/ bool Enable;
        /*0x20*/ string Rewards;

        /*0xc97288*/ TableData_Towerfloor();
    }

    class TableData_Towernormal : TableData.TableData_Towerfloor
    {
        /*0xc9f3c8*/ TableData_Towernormal();
    }

    class TowerNormalTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towernormal> List;

        /*0x111cc64*/ TowerNormalTable();
        /*0x111cd5c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerfire : TableData.TableData_Towerfloor
    {
        /*0xc9f3b8*/ TableData_Towerfire();
    }

    class TowerFireTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towerfire> List;

        /*0x117e27c*/ TowerFireTable();
        /*0x117e374*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerwind : TableData.TableData_Towerfloor
    {
        /*0xc9f3d8*/ TableData_Towerwind();
    }

    class TowerWindTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towerwind> List;

        /*0x111e87c*/ TowerWindTable();
        /*0x111e974*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towernatural : TableData.TableData_Towerfloor
    {
        /*0xc9f3c0*/ TableData_Towernatural();
    }

    class TowerNaturalTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towernatural> List;

        /*0x111ca18*/ TowerNaturalTable();
        /*0x111cb10*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerwater : TableData.TableData_Towerfloor
    {
        /*0xc9f3d0*/ TableData_Towerwater();
    }

    class TowerWaterTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towerwater> List;

        /*0x111e630*/ TowerWaterTable();
        /*0x111e728*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Systembasic
    {
        /*0x10*/ int UNIT_SLOT_MAX;
        /*0x14*/ int UNIT_SLOT_DEF;
        /*0x18*/ int UNIT_SLOT_DIA;
        /*0x1c*/ int UNIT_SLOT_CNT;
        /*0x20*/ int UNIT_SLOT_EXT_DIA;
        /*0x24*/ int UNIT_SLOT_EXT;
        /*0x28*/ int NICK_EDIT_DIA;
        /*0x2c*/ int BUY_PROPERTY_PRICE;
        /*0x30*/ int BUY_PROPERTY_LIMIT;
        /*0x34*/ int BUY_GACHA_LIMIT;
        /*0x38*/ string FirstCharGet;
        /*0x40*/ string BasicCurrency;
        /*0x48*/ int EnhanceGold;
        /*0x4c*/ int StageIdleTime;
        /*0x50*/ string SignatureGet;
        /*0x58*/ float Wishlist;
        /*0x5c*/ int MazeResetTime;
        /*0x60*/ string MazeDecideMove;
        /*0x68*/ int MazeDecideMoveIncrease;
        /*0x6c*/ int MazeDecideMoveLimit;
        /*0x70*/ int MazeHealItem;
        /*0x74*/ int MazeHealItemLv;
        /*0x78*/ int HeroResetCost;
        /*0x7c*/ int NormalShopRefresh;
        /*0x80*/ int NormalShopRefresh_EXT_DIA;
        /*0x84*/ int NormalShopRefresh_MAX_DIA;
        /*0x88*/ int LabyrinthShopRefresh;
        /*0x8c*/ int LeaveGameDelayDay;
        /*0x90*/ int GuildShopRefresh;
        /*0x94*/ int GuildShopRefresh_EXT_DIA;
        /*0x98*/ int GuildShopRefresh_MAX_DIA;
        /*0x9c*/ int ArenaShopRefresh;
        /*0xa0*/ int DismissShopRefresh;
        /*0xa4*/ int PveRankingShopRefresh;
        /*0xa8*/ int PveRankingShopRefresh_EXT_DIA;
        /*0xac*/ int PveRankingShopRefresh_MAX_DIA;
        /*0xb0*/ int MazeMateListReset;
        /*0xb4*/ int TiersReviverCount;
        /*0xb8*/ int TiersHpRecover;

        /*0xc9e094*/ TableData_Systembasic();
    }

    class SystemBasicTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Systembasic> List;

        /*0xc9d8d4*/ SystemBasicTable();
        /*0xc9d9cc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contenthelp
    {
        /*0x10*/ int Index;
        /*0x18*/ string ContentId;
        /*0x20*/ string HelpId;
        /*0x28*/ string StoryId;
        /*0x30*/ string RoleId;
        /*0x38*/ bool helponoff;
        /*0x39*/ bool Storyonoff;
        /*0x3a*/ bool Roleonoff;
        /*0x40*/ string Priority;

        /*0xc9efc0*/ TableData_Contenthelp();
    }

    class ContentHelpTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contenthelp> List;

        /*0x10ea178*/ ContentHelpTable();
        /*0x10ea270*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Fastidle
    {
        /*0x10*/ int Index;
        /*0x14*/ int FastIdleCash;

        /*0xc9f108*/ TableData_Fastidle();
    }

    class FastIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Fastidle> List;

        /*0x11d9ed8*/ FastIdleTable();
        /*0x11d9fd0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Friend
    {
        /*0x10*/ int MaxFriendCount;
        /*0x14*/ int DailyFshipGive;
        /*0x18*/ int DailyFshipTake;
        /*0x1c*/ int MaxFriendApply;
        /*0x20*/ int SupplyMercenaryCount;
        /*0x24*/ int RequestMercenaryCount;
        /*0x28*/ int RequestMercenaryGrade;
        /*0x2c*/ int OfflineTime;

        /*0xc9f118*/ TableData_Friend();
    }

    class FriendTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Friend> List;

        /*0x10a4f88*/ FriendTable();
        /*0x10a5080*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Userlvexp
    {
        /*0x10*/ int index;
        /*0x14*/ int NextLvExp;
        /*0x18*/ string LvUpReward;

        /*0xc9f430*/ TableData_Userlvexp();
    }

    class UserLvExpTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Userlvexp> List;

        /*0x10c799c*/ UserLvExpTable();
        /*0x10c7a94*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contentunlock
    {
        /*0x10*/ int Index;
        /*0x18*/ string ContentId;
        /*0x20*/ bool ViewType;
        /*0x28*/ string QuestGroupId;
        /*0x30*/ string ContentTitle;
        /*0x38*/ string ContentDescription;

        /*0xc9efd8*/ TableData_Contentunlock();
    }

    class ContentUnlockTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contentunlock> List;

        /*0xf4c6fc*/ ContentUnlockTable();
        /*0xf4c7f4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Chapter
    {
        /*0x10*/ int Index;
        /*0x18*/ string ChapterName;
        /*0x20*/ string ChapterDesc;
        /*0x28*/ string ChapterImage;
        /*0x30*/ bool Enable;
        /*0x38*/ string GetEnableEquip;
        /*0x40*/ string GetEnableItem;

        /*0xc9efa8*/ TableData_Chapter();
    }

    class ChapterTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Chapter> List;

        /*0xd71760*/ ChapterTable();
        /*0xd71858*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Hardchapter
    {
        /*0x10*/ int Index;
        /*0x18*/ string ChapterName;
        /*0x20*/ string ChapterDesc;
        /*0x28*/ string ChapterImage;
        /*0x30*/ bool Enable;
        /*0x38*/ string GetEnableEquip;
        /*0x40*/ string GetEnableItem;

        /*0xc9f1f0*/ TableData_Hardchapter();
    }

    class HardChapterTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Hardchapter> List;

        /*0x10f6aa4*/ HardChapterTable();
        /*0x10f6b9c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Tutorial
    {
        /*0x10*/ int Index;
        /*0x14*/ int Group;
        /*0x18*/ float DelayTime;
        /*0x20*/ string StartType;
        /*0x28*/ string BeginType;
        /*0x30*/ string TutorialType;
        /*0x38*/ string UnlockEffect;
        /*0x40*/ int BattleStage;
        /*0x44*/ int StageRequire;
        /*0x48*/ int ChapterRequire;
        /*0x4c*/ int UnlockRequire;
        /*0x50*/ bool ReadyAnotherChapter;
        /*0x51*/ bool ReadyEquipUp;
        /*0x58*/ string ProcessType;
        /*0x60*/ string ButtonType;
        /*0x68*/ string selectUI;
        /*0x70*/ string CreateUI;
        /*0x78*/ int CursorRotaion;
        /*0x80*/ string ProcessSceneName;
        /*0x88*/ bool IsBattlePause;
        /*0x8c*/ float DialogTime;
        /*0x90*/ string DialogType;
        /*0x98*/ bool DialogClear;
        /*0x99*/ bool Dialog;
        /*0x9a*/ bool DialogIsLeft;
        /*0xa0*/ string DialogIcon;
        /*0xa8*/ string DialogText;
        /*0xb0*/ float DialogPositionY;
        /*0xb4*/ bool Refeat;
        /*0xb5*/ bool Skip;
        /*0xb8*/ int Priority;
        /*0xc0*/ string Voice;

        /*0xc9f3f0*/ TableData_Tutorial();
    }

    class TutorialTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Tutorial> List;

        /*0x112d680*/ TutorialTable();
        /*0x112d778*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Tutorialbattlehero
    {
        /*0x10*/ int Index;
        /*0x14*/ int Hero_POS;
        /*0x18*/ int Hero1_ID;
        /*0x1c*/ int Hero_Grade;
        /*0x20*/ int Hero_LV;
        /*0x28*/ int[] Hero_EquipN;

        /*0xc9f3f8*/ TableData_Tutorialbattlehero();
    }

    class TutorialBattleHeroTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Tutorialbattlehero> List;

        /*0x11299dc*/ TutorialBattleHeroTable();
        /*0x1129ad4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Arena
    {
        /*0x10*/ int Index;
        /*0x18*/ string ArenaType;
        /*0x20*/ int SeasonTerm;
        /*0x24*/ int SeasonStartPoint;
        /*0x28*/ int DailyFreeTicket;
        /*0x2c*/ int GroupCountMax;
        /*0x30*/ int GroupPeopleMin;
        /*0x34*/ int SearchAPtRange;
        /*0x38*/ int AddSearchAPtRange;
        /*0x3c*/ int AddSearchAPtRangeMax;
        /*0x40*/ string ArenaBattleReward;
        /*0x48*/ int ArenaEntryItem;
        /*0x4c*/ int ArenaCalculationTime;
        /*0x50*/ int ArenaPreCalculationTime;

        /*0xc9eeb8*/ TableData_Arena();
    }

    class ArenaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Arena> List;

        /*0xee9ce8*/ ArenaTable();
        /*0xee9de0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Arenarank
    {
        /*0x10*/ int Index;
        /*0x18*/ string ArenaType;
        /*0x20*/ string RankType;
        /*0x28*/ int RankCount;
        /*0x30*/ string DailyReward;
        /*0x38*/ string SeasonReward;

        /*0xc9eec8*/ TableData_Arenarank();
    }

    class ArenaRankTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Arenarank> List;

        /*0xee9260*/ ArenaRankTable();
        /*0xee9358*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Mazecourse
    {
        /*0x10*/ int index;
        /*0x14*/ int MazeID;
        /*0x18*/ string CourseType;
        /*0x20*/ int CourseCount;

        /*0xc9f250*/ TableData_Mazecourse();
    }

    class MazeCourseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Mazecourse> List;

        /*0xdecb54*/ MazeCourseTable();
        /*0xdecc4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Mazebattle
    {
        /*0x10*/ int Index;
        /*0x14*/ int Chapter;
        /*0x18*/ int Floor;
        /*0x20*/ string Type;
        /*0x28*/ int Level;
        /*0x2c*/ int Grade;
        /*0x30*/ int EquipGrade;
        /*0x34*/ int AddHp;
        /*0x38*/ int AddDMG;
        /*0x3c*/ int KnightLimit;
        /*0x40*/ int WarriorLimit;
        /*0x44*/ int SupporterLimit;
        /*0x48*/ int RangerLimit;
        /*0x4c*/ int MageLimit;
        /*0x50*/ string Reward;
        /*0x58*/ bool CorrectionApply;
        /*0x5c*/ int View_Cp;
        /*0x60*/ int[] ViewEnemyN_LV;

        /*0xc9f248*/ TableData_Mazebattle();
    }

    class MazeBattleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Mazebattle> List;

        /*0xdeb434*/ MazeBattleTable();
        /*0xdeb52c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Mazemateequip
    {
        /*0x10*/ int Index;
        /*0x14*/ int MazeMateGrade;
        /*0x18*/ int[] EquipSlotN;

        /*0xc9f258*/ TableData_Mazemateequip();
    }

    class MazeMateEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Mazemateequip> List;

        /*0xdf1c88*/ MazeMateEquipTable();
        /*0xdf1d80*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Herolvsync
    {
        /*0x10*/ int SyncSlotOpen;
        /*0x18*/ string SyncSlotUnlockCurrency;
        /*0x20*/ int SyncSlotUnlockCurrencyAdd;
        /*0x28*/ string SyncSlotUnlockPrice;
        /*0x30*/ int SyncSlotUnlockPriceAdd;
        /*0x34*/ int SlotCleanTime;
        /*0x38*/ string SlotCleanQuick;
        /*0x40*/ int SyncBaseHeroLvGap;
        /*0x44*/ int SyncBaseHeroLvGapUnlockUnit;
        /*0x48*/ int SyncSlotMax;
        /*0x4c*/ int LevelUpStepCount;
        /*0x50*/ int AddMaxLevelGrade;
        /*0x54*/ int AddMaxLevel;
        /*0x58*/ int MaxLevel;

        /*0xc9f1f8*/ TableData_Herolvsync();
    }

    class HeroLvSyncTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Herolvsync> List;

        /*0xf3eff0*/ HeroLvSyncTable();
        /*0xf3f0e8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Idleunittipdialog
    {
        /*0x10*/ int UnitID;
        /*0x18*/ string IdleDialogType;
        /*0x20*/ string DialogKey1;
        /*0x28*/ string DialogKey2;
        /*0x30*/ string DialogKey3;
        /*0x38*/ string DialogKey4;
        /*0x40*/ string DialogKey5;
        /*0x48*/ string DialogKey6;
        /*0x50*/ string DialogKey7;
        /*0x58*/ string DialogKey8;
        /*0x60*/ string DialogKey9;
        /*0x68*/ string DialogKey10;
        /*0x70*/ string DialogKey11;
        /*0x78*/ string DialogKey12;
        /*0x80*/ string DialogKey13;
        /*0x88*/ string DialogKey14;
        /*0x90*/ string DialogKey15;
        /*0x98*/ string DialogKey16;
        /*0xa0*/ string DialogKey17;

        /*0xc9f238*/ TableData_Idleunittipdialog();
    }

    class IdleUnitTipDialogTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Idleunittipdialog> List;

        /*0xd21538*/ IdleUnitTipDialogTable();
        /*0xd21630*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Profileskin
    {
        /*0x10*/ string ProfileSkinType;
        /*0x18*/ int index;
        /*0x1c*/ bool Use;
        /*0x20*/ string ProfileSkinName;
        /*0x28*/ string ProfileSkinDesc;
        /*0x30*/ string ProfileSkinImage;
        /*0x38*/ bool IsFree;
        /*0x3c*/ int FrameDate;
        /*0x40*/ string ProfileSkinGetDesc;
        /*0x48*/ string ProfileEffectName;

        /*0xc9f280*/ TableData_Profileskin();
    }

    class ProfileSkinTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Profileskin> List;

        /*0x100e6f8*/ ProfileSkinTable();
        /*0x100e7f0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Emoticon
    {
        /*0x10*/ int index;
        /*0x18*/ string Chat;
        /*0x20*/ string Image;

        /*0xc9f030*/ TableData_Emoticon();
    }

    class EmoticonTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Emoticon> List;

        /*0x14b9030*/ EmoticonTable();
        /*0x14b9128*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Vip
    {
        /*0x10*/ int VIPLevel;
        /*0x14*/ int VIPLevelUpPoint;
        /*0x18*/ string VIPReward;
        /*0x20*/ int StageIdleGold;
        /*0x24*/ int StageIdleHeroexp;
        /*0x28*/ int FastIdleCount;
        /*0x2c*/ int ArenaDailyFree;
        /*0x30*/ int HeroSlotCount;
        /*0x34*/ int SoloBountyQty;
        /*0x38*/ int TeamBountyQty;
        /*0x3c*/ int StageIdleTimeUp;
        /*0x40*/ int HuntingCountUp;
        /*0x44*/ bool UnlockArenaBattleSkip;
        /*0x45*/ bool UnlockBountyAutofill;
        /*0x46*/ bool HuntingFast;
        /*0x47*/ bool UnlockBattleAccelx3;
        /*0x48*/ int MazeBattleGold;
        /*0x4c*/ bool UnlockRaceSkip;
        /*0x50*/ int ArenaWinRewardCount;
        /*0x54*/ bool UnlockBattleAccelx4;

        /*0xc9f438*/ TableData_Vip();
    }

    class VipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Vip> List;

        /*0xdfcbb8*/ VipTable();
        /*0xdfccb0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarena
    {
        /*0x10*/ int InterimDay;
        /*0x14*/ int InterimCalTime;
        /*0x18*/ int ArenaPreCalTime;
        /*0x1c*/ int ResetPoint;
        /*0x20*/ int ArenaEntryItem;
        /*0x24*/ int DailyFreeTicket;
        /*0x28*/ int SearchAPtRange;
        /*0x2c*/ int AddSearchAPtRange;
        /*0x30*/ int AddSearchAptRangeMax;
        /*0x34*/ int TrainingRoationMax;
        /*0x38*/ int ChannelCount;
        /*0x3c*/ int WDCount_Asia1;
        /*0x40*/ int WDCount_Asia2;
        /*0x44*/ int WDCount_Europe;
        /*0x48*/ int WDCount_NorthAmerica;

        /*0xc9f448*/ TableData_Worldarena();
    }

    class WorldArenaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarena> List;

        /*0xe0982c*/ WorldArenaTable();
        /*0xe09924*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenatier
    {
        /*0x10*/ int index;
        /*0x14*/ int TierGrade;
        /*0x18*/ string TierName;
        /*0x20*/ bool Open;
        /*0x24*/ int GroupPeopleMin;
        /*0x28*/ int GroupPeopleMax;
        /*0x2c*/ int Raise;
        /*0x30*/ int Drop;
        /*0x38*/ string BattleReward;
        /*0x40*/ string RaiseReward;
        /*0x48*/ string StayReward;
        /*0x50*/ string DropReward;
        /*0x58*/ string SeasonReward;

        /*0xc9f460*/ TableData_Worldarenatier();
    }

    class WorldArenaTierTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenatier> List;

        /*0xe09fc4*/ WorldArenaTierTable();
        /*0xe0a0bc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenamatchingpoint
    {
        /*0x10*/ int Index;
        /*0x14*/ int ListPosition;
        /*0x18*/ int MatchingAPt;
        /*0x1c*/ int AttWinAPt;
        /*0x20*/ int AttLoseAPt;
        /*0x24*/ int DefWinAPt;
        /*0x28*/ int DefLoseAPt;

        /*0xc9f458*/ TableData_Worldarenamatchingpoint();
    }

    class WorldArenaMatchingPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenamatchingpoint> List;

        /*0xe057f0*/ WorldArenaMatchingPointTable();
        /*0xe058e8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenachampreward
    {
        /*0x10*/ int Index;
        /*0x18*/ string RankType;
        /*0x20*/ int RankCount;
        /*0x24*/ int RankRange;
        /*0x28*/ string ClosingReward;

        /*0xc9f450*/ TableData_Worldarenachampreward();
    }

    class WorldArenaChampRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenachampreward> List;

        /*0xe040bc*/ WorldArenaChampRewardTable();
        /*0xe041b4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Trainingroom
    {
        /*0x10*/ int index;
        /*0x18*/ string StepType;
        /*0x20*/ string Contents;
        /*0x28*/ float RaiseCount;
        /*0x30*/ string BasicCost;
        /*0x38*/ string RoationRaiseCost;

        /*0xc9f3e0*/ TableData_Trainingroom();
    }

    class TrainingRoomTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> List;

        /*0x111f51c*/ TrainingRoomTable();
        /*0x111f614*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Revert
    {
        /*0x10*/ int index;
        /*0x18*/ string RevertHeroGrade;
        /*0x20*/ int RevertApCount;
        /*0x24*/ int RevertItemCount;
        /*0x28*/ bool RevertUse;

        /*0xc9f368*/ TableData_Revert();
    }

    class RevertTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Revert> List;

        /*0x11a66cc*/ RevertTable();
        /*0x11a67c4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guild
    {
        /*0x10*/ int GuildSignupLvMin;
        /*0x14*/ int GuildSignupLvMax;
        /*0x18*/ int GuildSignupLvExt;
        /*0x1c*/ int GuildReSignUpTime;
        /*0x20*/ int GuildSameReSignUpTime;
        /*0x24*/ int GuildListMax;
        /*0x28*/ int HuntingTime;
        /*0x2c*/ int HuntingCount;
        /*0x30*/ int HuntingRecordListCount;
        /*0x34*/ int GuildBDDayilyLimit;
        /*0x38*/ string GuildWasteTime;
        /*0x40*/ string GuildWasteCount;
        /*0x48*/ int GuildRoomPeopleCount;
        /*0x4c*/ int GuildRoadPeopleCount;
        /*0x50*/ string GuildCreateCost;
        /*0x58*/ string GuildNameChange;
        /*0x60*/ int GuildGeneralTime;
        /*0x64*/ int GuildMasterChangeDay;
        /*0x68*/ int ChangeGuildMasterRequireDay;

        /*0xc9f190*/ TableData_Guild();
    }

    class GuildTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guild> List;

        /*0x110d18c*/ GuildTable();
        /*0x110d284*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildlevel
    {
        /*0x10*/ int index;
        /*0x14*/ int GuildLV;
        /*0x18*/ int GuildPointLvUp;
        /*0x1c*/ int GuildMemberCount;
        /*0x20*/ int GuildPointHoldLimit;
        /*0x24*/ int GuildPointPersonalLimit;
        /*0x28*/ int GuildSubMasterCount;
        /*0x2c*/ int GuildGneralCount;
        /*0x30*/ string GuildCrestUnlock;
        /*0x38*/ int GuildMapExtend;
        /*0x3c*/ int GuildMapMember;

        /*0xc9f1a8*/ TableData_Guildlevel();
    }

    class GuildLevelTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildlevel> List;

        /*0xe73720*/ GuildLevelTable();
        /*0xe73818*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwaste
    {
        /*0x10*/ int GuildLv;
        /*0x14*/ int Percent;
        /*0x18*/ string Reward;

        /*0xc9f1e8*/ TableData_Guildwaste();
    }

    class GuildWasteTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwaste> List;

        /*0x10f5d70*/ GuildWasteTable();
        /*0x10f5e68*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildboss
    {
        /*0x10*/ int index;
        /*0x18*/ string BossType;
        /*0x20*/ int ChallengeTimes;
        /*0x24*/ int BattleID;
        /*0x28*/ int BossID;
        /*0x2c*/ int HuntingRewardID;
        /*0x30*/ int RequireContribution;
        /*0x34*/ int RemainTime;
        /*0x38*/ int TryTime;

        /*0xc9f198*/ TableData_Guildboss();
    }

    class GuildBossTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildboss> List;

        /*0xe64e54*/ GuildBossTable();
        /*0xe64f4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildhuntingreward
    {
        /*0x10*/ int index;
        /*0x14*/ int HuntingRewardID;
        /*0x18*/ int HuntingRewardStep;
        /*0x20*/ long StepUpDamage;
        /*0x28*/ string HuntingBasicReward;
        /*0x30*/ string DailyBestReward;
        /*0x38*/ string HuntingItem;
        /*0x40*/ float HuntingItemDropPercent;
        /*0x44*/ int HuntingChestARate;
        /*0x48*/ string HuntingEquipA;
        /*0x50*/ int HuntingChestBRate;
        /*0x58*/ string HuntingEquipB;
        /*0x60*/ int HuntingChestCRate;
        /*0x68*/ string HuntingEquipC;
        /*0x70*/ int HuntingChestDRate;
        /*0x78*/ string HuntingEquipD;
        /*0x80*/ int HuntingChestERate;
        /*0x88*/ string HuntingEquipE;
        /*0x90*/ int HuntingChestFRate;
        /*0x98*/ string HuntingEquipF;
        /*0xa0*/ int HuntingChestGRate;
        /*0xa8*/ string HuntingEquipG;
        /*0xb0*/ string EqiupRewardView;

        /*0xc9f1a0*/ TableData_Guildhuntingreward();
    }

    class GuildHuntingRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildhuntingreward> List;

        /*0xe70c74*/ GuildHuntingRewardTable();
        /*0xe70d6c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwar
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9f1b0*/ TableData_Guildwar();
    }

    class GuildWarTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwar> List;

        /*0x10f4ce8*/ GuildWarTable();
        /*0x10f4de0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarpoint
    {
        /*0x10*/ int Index;
        /*0x14*/ int ListPosition;
        /*0x18*/ int MatchingAPt;
        /*0x1c*/ int AtkWinAPt;
        /*0x20*/ int AtkLoseAPt;
        /*0x24*/ int DefWinAPt;
        /*0x28*/ int DefLoseAPt;

        /*0xc9f1c0*/ TableData_Guildwarpoint();
    }

    class GuildWarPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarpoint> List;

        /*0x1119de4*/ GuildWarPointTable();
        /*0x1119edc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarorganize
    {
        /*0x10*/ string Position;
        /*0x18*/ string Key;
        /*0x20*/ string Valuse;

        /*0xc9f1b8*/ TableData_Guildwarorganize();
    }

    class GuildWarOrganizeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarorganize> List;

        /*0x1119bdc*/ GuildWarOrganizeTable();
        /*0x1119cd4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarrank
    {
        /*0x10*/ int Index;
        /*0x14*/ int RewardGroupKey;
        /*0x18*/ string RankType;
        /*0x20*/ int RankCount;
        /*0x24*/ int GuildPointReward;
        /*0x28*/ string GuildArenaRankRewardGroup;

        /*0xc9f1c8*/ TableData_Guildwarrank();
    }

    class GuildWarRankTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> List;

        /*0x10efcb8*/ GuildWarRankTable();
        /*0x10efdb0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarrankreward
    {
        /*0x10*/ int Index;
        /*0x18*/ string GuildArenaRankRewardGroup;
        /*0x20*/ string[] RankNReward;

        /*0xc9f1d8*/ TableData_Guildwarrankreward();
    }

    class GuildWarRankRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarrankreward> List;

        /*0x10ee954*/ GuildWarRankRewardTable();
        /*0x10eea4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarrankgroup
    {
        /*0x10*/ int Index;
        /*0x14*/ int Season;
        /*0x18*/ int RewardGroupKey;

        /*0xc9f1d0*/ TableData_Guildwarrankgroup();
    }

    class GuildWarRankGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarrankgroup> List;

        /*0x10ee74c*/ GuildWarRankGroupTable();
        /*0x10ee844*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwartactic
    {
        /*0x10*/ int TacticID;
        /*0x18*/ string Class;
        /*0x20*/ string Position;

        /*0xc9f1e0*/ TableData_Guildwartactic();
    }

    class GuildWarTacticTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwartactic> List;

        /*0x10f4ec8*/ GuildWarTacticTable();
        /*0x10f4fc0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Highgacha
    {
        /*0x10*/ int Index;
        /*0x18*/ string Name;
        /*0x20*/ int GachaCount;
        /*0x28*/ string PriceType;
        /*0x30*/ string PriceArg1;
        /*0x38*/ string PriceArg2;
        /*0x40*/ string SubPricetype;
        /*0x48*/ string SubPriceArg1;
        /*0x50*/ string SubPriceArg2;
        /*0x58*/ string LogID;

        /*0xc9f208*/ TableData_Highgacha();
    }

    class HighGachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Highgacha> List;

        /*0x130aaf4*/ HighGachaTable();
        /*0x130abec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Highdroprate
    {
        /*0x10*/ int index;
        /*0x14*/ float DropPercent;
        /*0x18*/ string DropReward;
        /*0x20*/ int DropLimit;

        /*0xc9f200*/ TableData_Highdroprate();
    }

    class HighDropRateTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Highdroprate> List;

        /*0x130a8ac*/ HighDropRateTable();
        /*0x130a9a4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeon
    {
        /*0x10*/ int DungeonID;
        /*0x18*/ string Unlock1;
        /*0x20*/ string Unlock2;
        /*0x28*/ int DungeonCoinLimit;
        /*0x2c*/ int DailyGoldLimit;
        /*0x30*/ int DailyHeroExpLimit;
        /*0x38*/ string Randomtile;
        /*0x40*/ string RandomtileCount;
        /*0x48*/ string DungeonBG;
        /*0x50*/ string DungeonTitle;
        /*0x58*/ string DungeonDesc;
        /*0x60*/ string BattleTilePopupTitle;
        /*0x68*/ string BattleTilePopupDesc;
        /*0x70*/ string BattleReward;
        /*0x78*/ string BossBattleReward;
        /*0x80*/ string RandomRewardGacha;
        /*0x88*/ string RandomReward;
        /*0x90*/ int CoinRewardTileCost;
        /*0x94*/ bool WallKeyUse;

        /*0xc9efe8*/ TableData_Dungeon();
    }

    class DungeonTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeon> List;

        /*0x14b3c18*/ DungeonTable();
        /*0x14b3d10*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonsetting
    {
        /*0x10*/ int DungeonViewRange;
        /*0x14*/ int DungeonAfterViewRange;
        /*0x18*/ int DungeonUseHeroLv;

        /*0xc9f020*/ TableData_Dungeonsetting();
    }

    class DungeonSettingTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonsetting> List;

        /*0x12f02d0*/ DungeonSettingTable();
        /*0x12f03c8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonmap
    {
        /*0x10*/ int DungeonID;
        /*0x14*/ int PositionX;
        /*0x18*/ int PositionY;
        /*0x1c*/ int TileID;
        /*0x20*/ int Group;
        /*0x28*/ string Parameters;

        /*0xc9f008*/ TableData_Dungeonmap();
    }

    class DungeonMapTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonmap> List;

        /*0x12ea400*/ DungeonMapTable();
        /*0x12ea4f8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeongroup
    {
        /*0x10*/ int index;
        /*0x14*/ int DungeonID;
        /*0x18*/ int DungeonLevel;
        /*0x1c*/ int BattleStage;
        /*0x20*/ int EnemyLvMin;
        /*0x24*/ int EnemyLvMax;
        /*0x28*/ int MonsterAddHP;
        /*0x2c*/ int MonsterAddDMG;
        /*0x30*/ string Element;
        /*0x38*/ int KnightLimit;
        /*0x3c*/ int WarriorLimit;
        /*0x40*/ int SupporterLimit;
        /*0x44*/ int RangerLimit;
        /*0x48*/ int MageLimit;
        /*0x50*/ int[] EnemyNGrade;
        /*0x58*/ int[] EquipGradeNMin;
        /*0x60*/ int[] EquipGradeNMax;

        /*0xc9f000*/ TableData_Dungeongroup();
    }

    class DungeonGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeongroup> List;

        /*0x12da168*/ DungeonGroupTable();
        /*0x12da260*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeontile
    {
        /*0x10*/ int Index;
        /*0x18*/ string TileType;
        /*0x20*/ string TileImage;
        /*0x28*/ string ObjectImage;
        /*0x30*/ string Attribute;
        /*0x38*/ string ObjectPositon;
        /*0x40*/ string TileValue;
        /*0x48*/ bool TileKeep;
        /*0x50*/ string ViewType;
        /*0x58*/ bool UsedViewType;

        /*0xc9f028*/ TableData_Dungeontile();
    }

    class DungeonTileTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeontile> List;

        /*0x14b6364*/ DungeonTileTable();
        /*0x14b645c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeondialog
    {
        /*0x10*/ int DungeonID;
        /*0x18*/ string Trigger;
        /*0x20*/ int Group;
        /*0x24*/ float DialogDelayTime;
        /*0x28*/ bool DialogClear;
        /*0x29*/ bool DialogIsLeft;
        /*0x2c*/ int HeroID;
        /*0x30*/ string DialogText;
        /*0x38*/ bool direction;

        /*0xc9eff0*/ TableData_Dungeondialog();
    }

    class DungeonDialogTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeondialog> List;

        /*0x11f6ec8*/ DungeonDialogTable();
        /*0x11f6fc0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonmateequip
    {
        /*0x10*/ int Index;
        /*0x14*/ int DungeonMateGrade;
        /*0x18*/ int[] EquipSlotN;

        /*0xc9f010*/ TableData_Dungeonmateequip();
    }

    class DungeonMateEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonmateequip> List;

        /*0x12ea688*/ DungeonMateEquipTable();
        /*0x12ea780*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonreward
    {
        /*0x10*/ int DungeonID;
        /*0x14*/ int PositionX;
        /*0x18*/ int PositionY;
        /*0x20*/ string Reward;
        /*0x28*/ string OpenCondition;
        /*0x30*/ bool MiniMapView;

        /*0xc9f018*/ TableData_Dungeonreward();
    }

    class DungeonRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> List;

        /*0x12efc80*/ DungeonRewardTable();
        /*0x12efd78*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeondialogdirection
    {
        /*0x10*/ int DungeonID;
        /*0x14*/ int PositionX;
        /*0x18*/ int PositionY;
        /*0x1c*/ int CharID;

        /*0xc9eff8*/ TableData_Dungeondialogdirection();
    }

    class DungeonDialogDirectionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection> List;

        /*0x11f6204*/ DungeonDialogDirectionTable();
        /*0x11f62fc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Event
    {
        /*0x10*/ int EventID;
        /*0x18*/ string EventName;
        /*0x20*/ string CategoryType;
        /*0x28*/ string EventType;
        /*0x30*/ int TypeEventID;
        /*0x38*/ string EventStartDate;
        /*0x40*/ string EventEndDate;
        /*0x48*/ int MissionEventBonusDay;
        /*0x4c*/ int EventTimeSectionID;
        /*0x50*/ int EventPreset;
        /*0x58*/ string EventMissionStepCondition;
        /*0x60*/ string EventExchangeRefund;
        /*0x68*/ string LogID;
        /*0x70*/ string MailTitle;
        /*0x78*/ string MailDesc;
        /*0x80*/ bool EventListShow;
        /*0x81*/ bool SubMenuShow;
        /*0x88*/ string SubMenuEventKey;
        /*0x90*/ string ContentsID;
        /*0x98*/ string TapBottonTitle;

        /*0xc9f048*/ TableData_Event();
    }

    class EventTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Event> List;

        /*0x11d4b58*/ EventTable();
        /*0x11d4c50*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpage
    {
        /*0x10*/ int index;
        /*0x14*/ int EventPageID;
        /*0x18*/ string EventPagePrefab;
        /*0x20*/ string EventEntityName;
        /*0x28*/ string EventPageText;
        /*0x30*/ string EventPageImage;
        /*0x38*/ string EventPageFormPos;
        /*0x40*/ string EventPageEffect;
        /*0x48*/ string TextInlineColor;
        /*0x50*/ string TextOutlineColor;

        /*0xc9f0b0*/ TableData_Eventpage();
    }

    class EventPageTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpage> List;

        /*0x11cf550*/ EventPageTable();
        /*0x11cf648*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventtimesection
    {
        /*0x10*/ int index;
        /*0x14*/ int EventID;
        /*0x18*/ string EventTimeWeek;
        /*0x20*/ int EventTimeDay;
        /*0x28*/ string EventTimeSectionStart;
        /*0x30*/ string EventeTimeSectionEnd;

        /*0xc9f0f8*/ TableData_Eventtimesection();
    }

    class EventTimeSectionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventtimesection> List;

        /*0x11d5028*/ EventTimeSectionTable();
        /*0x11d5120*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventsingle
    {
        /*0x10*/ int index;
        /*0x14*/ int EventSingleID;
        /*0x18*/ string EventSingleReward;

        /*0xc9f0f0*/ TableData_Eventsingle();
    }

    class EventSingleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventsingle> List;

        /*0x11d4948*/ EventSingleTable();
        /*0x11d4a40*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventgroup
    {
        /*0x10*/ int index;
        /*0x14*/ int EventGroupID;
        /*0x18*/ string EventSingleReward;

        /*0xc9f090*/ TableData_Eventgroup();
    }

    class EventGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventgroup> List;

        /*0x11599a4*/ EventGroupTable();
        /*0x1159a9c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventselect
    {
        /*0x10*/ int index;
        /*0x14*/ int EventSelectID;
        /*0x18*/ string EventSelectCount;
        /*0x20*/ string EventSelectReward;

        /*0xc9f0e8*/ TableData_Eventselect();
    }

    class EventSelectTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventselect> List;

        /*0x11d4710*/ EventSelectTable();
        /*0x11d4808*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventbuyinapp
    {
        /*0x10*/ int index;
        /*0x14*/ int EventBuyInAppID;
        /*0x18*/ string Trigger;
        /*0x20*/ string BuyInAppReward;

        /*0xc9f068*/ TableData_Eventbuyinapp();
    }

    class EventBuyInAppTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventbuyinapp> List;

        /*0x1152d04*/ EventBuyInAppTable();
        /*0x1152dfc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventexchange
    {
        /*0x10*/ int index;
        /*0x14*/ int EventExchageID;
        /*0x18*/ string EventCurrency;
        /*0x20*/ string EventExchageReward;
        /*0x28*/ int EventExchangeLimit;
        /*0x2c*/ bool Reddot;

        /*0xc9f088*/ TableData_Eventexchange();
    }

    class EventExchangeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> List;

        /*0x1159708*/ EventExchangeTable();
        /*0x1159800*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventattendance
    {
        /*0x10*/ int index;
        /*0x14*/ int EventCheckID;
        /*0x18*/ int AttendanceGroup;
        /*0x1c*/ int AttendanceGroupStart;
        /*0x20*/ string EventCheckType;
        /*0x28*/ int EventCheckDay;
        /*0x30*/ string EventCheckReward;
        /*0x38*/ string Log;

        /*0xc9f050*/ TableData_Eventattendance();
    }

    class EventAttendanceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> List;

        /*0x114d8c8*/ EventAttendanceTable();
        /*0x114d9c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventmission
    {
        /*0x10*/ int index;
        /*0x14*/ int EventMissionID;
        /*0x18*/ int EventMissionStep;
        /*0x20*/ string Trigger;
        /*0x28*/ int MissonCount;
        /*0x2c*/ int EventMissonPoint;
        /*0x30*/ string EventMissionStepReward;

        /*0xc9f0a0*/ TableData_Eventmission();
    }

    class EventMissionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventmission> List;

        /*0x11cf2a0*/ EventMissionTable();
        /*0x11cf398*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventmissionpoint
    {
        /*0x10*/ int index;
        /*0x14*/ int EventMissionID;
        /*0x18*/ int EventMissionPointCount;
        /*0x20*/ string PointReward;

        /*0xc9f0a8*/ TableData_Eventmissionpoint();
    }

    class EventMissionPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> List;

        /*0x11cc1fc*/ EventMissionPointTable();
        /*0x11cc2f4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventhottime
    {
        /*0x10*/ int index;
        /*0x14*/ int HotTimeID;
        /*0x18*/ int HotTimeIncrease;
        /*0x20*/ string HotTimeLocation;
        /*0x28*/ string HotTimeTargetCurrency;
        /*0x30*/ int HotTimeTargetItem;

        /*0xc9f098*/ TableData_Eventhottime();
    }

    class EventHotTimeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventhottime> List;

        /*0x1159bb4*/ EventHotTimeTable();
        /*0x1159cac*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpass
    {
        /*0x10*/ int EventID;
        /*0x18*/ string PassName;
        /*0x20*/ string CategoryType;
        /*0x28*/ string Trigger;
        /*0x30*/ string ResetPointType;
        /*0x38*/ int TermDays;
        /*0x3c*/ bool Repeat;
        /*0x40*/ int EventPreset;
        /*0x48*/ string PassInappID;
        /*0x50*/ string NotReceivedMailName;
        /*0x58*/ string NotReceivedMaildesc;
        /*0x60*/ bool EventListShow;
        /*0x61*/ bool SubMenuShow;
        /*0x68*/ string SubMenuEventTitle;
        /*0x70*/ string ContentsID;
        /*0x78*/ int VipPoint;

        /*0xc9f0b8*/ TableData_Eventpass();
    }

    class EventPassTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpass> List;

        /*0x11cfe48*/ EventPassTable();
        /*0x11cff40*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpassreward
    {
        /*0x10*/ int index;
        /*0x14*/ int EventID;
        /*0x18*/ int PassStepCount;
        /*0x20*/ string PassBasicReward;
        /*0x28*/ string PassPayReward;

        /*0xc9f0c0*/ TableData_Eventpassreward();
    }

    class EventPassRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> List;

        /*0x11cfbe8*/ EventPassRewardTable();
        /*0x11cfce0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventcurrencylocal
    {
        /*0x10*/ int index;
        /*0x18*/ string Type;
        /*0x20*/ int EventID;
        /*0x28*/ string Trigger;
        /*0x30*/ string Reward;

        /*0xc9f080*/ TableData_Eventcurrencylocal();
    }

    class EventCurrencyLocalTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> List;

        /*0x11568b8*/ EventCurrencyLocalTable();
        /*0x11569b0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpreset
    {
        /*0x10*/ int index;
        /*0x14*/ int EventPageID;
        /*0x18*/ string EventBannerImage;
        /*0x20*/ string EventBannerTitleText;
        /*0x28*/ string BannerTitleColorInline;
        /*0x30*/ string BannerTitleColorOutline;
        /*0x38*/ string EventBannerInfoText;
        /*0x40*/ string BannerinfoColor;

        /*0xc9f0c8*/ TableData_Eventpreset();
    }

    class EventPresetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpreset> List;

        /*0x11d0dd8*/ EventPresetTable();
        /*0x11d0ed0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventquest
    {
        /*0x10*/ int index;
        /*0x14*/ int EventQuestID;
        /*0x18*/ string EventGroup;

        /*0xc9f0d0*/ TableData_Eventquest();
    }

    class EventQuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventquest> List;

        /*0x11d39fc*/ EventQuestTable();
        /*0x11d3af4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventquestgroup
    {
        /*0x10*/ int index;
        /*0x18*/ string EventQuestType;
        /*0x20*/ string EventQuestGroup;
        /*0x28*/ string EventQuestTrigger;
        /*0x30*/ int EventQuestCount;
        /*0x38*/ string EventQuestPoint;

        /*0xc9f0d8*/ TableData_Eventquestgroup();
    }

    class EventQuestGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> List;

        /*0x11d1250*/ EventQuestGroupTable();
        /*0x11d1348*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventboss
    {
        /*0x10*/ int index;
        /*0x14*/ int EventBossID;
        /*0x18*/ int ChallengeTimes;
        /*0x1c*/ int BattleID;
        /*0x20*/ int BossID;
        /*0x24*/ int EventBossRewardID;
        /*0x28*/ int EventBossTryCount;
        /*0x2c*/ int HuntingRecordListCount;
        /*0x30*/ string ShortCutIcon;

        /*0xc9f058*/ TableData_Eventboss();
    }

    class EventBossTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventboss> List;

        /*0x1152a04*/ EventBossTable();
        /*0x1152afc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventbossreward
    {
        /*0x10*/ int index;
        /*0x14*/ int EventBossRewardID;
        /*0x18*/ int EventBossRewardStep;
        /*0x20*/ long EventBossStepUpDamage;
        /*0x28*/ string EventBossBasicReward;
        /*0x30*/ string EventBossDropItemPercent;
        /*0x38*/ string EventBossDropItemReward;

        /*0xc9f060*/ TableData_Eventbossreward();
    }

    class EventBossRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventbossreward> List;

        /*0x1152744*/ EventBossRewardTable();
        /*0x115283c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventcomplete
    {
        /*0x10*/ int index;
        /*0x14*/ int EventCompleteID;
        /*0x18*/ int EventCompleteMissionID;
        /*0x20*/ string ExchageCurrency;
        /*0x28*/ int CompleteCount;

        /*0xc9f070*/ TableData_Eventcomplete();
    }

    class EventCompleteTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> List;

        /*0x1156528*/ EventCompleteTable();
        /*0x1156620*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventcompletemission
    {
        /*0x10*/ int index;
        /*0x14*/ int EventCompleteMissionID;
        /*0x18*/ string RewardTarget;
        /*0x20*/ string Trigger;
        /*0x28*/ string EventCompleteMissionReward;

        /*0xc9f078*/ TableData_Eventcompletemission();
    }

    class EventCompleteMissionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> List;

        /*0x1154cb0*/ EventCompleteMissionTable();
        /*0x1154da8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventroulette
    {
        /*0x10*/ int index;
        /*0x14*/ int EventID;
        /*0x18*/ float RoulettePercent;
        /*0x1c*/ int RouletteRewardCP;
        /*0x20*/ string RouletteReward;
        /*0x28*/ bool RouletteBanner;
        /*0x30*/ string Atlas;
        /*0x38*/ string RewardImage;

        /*0xc9f0e0*/ TableData_Eventroulette();
    }

    class EventRouletteTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> List;

        /*0x11d441c*/ EventRouletteTable();
        /*0x11d4514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housing
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9f210*/ TableData_Housing();
    }

    class HousingTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housing> List;

        /*0xd1bc58*/ HousingTable();
        /*0xd1bd50*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housingdismiss
    {
        /*0x10*/ int index;
        /*0x18*/ string FurnitureGrade;
        /*0x20*/ string DismissReward;

        /*0xc9f218*/ TableData_Housingdismiss();
    }

    class HousingDismissTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housingdismiss> List;

        /*0x130cf38*/ HousingDismissTable();
        /*0x130d030*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housingfloor
    {
        /*0x10*/ int Floor;
        /*0x18*/ string Floor_OpenCost;
        /*0x20*/ int Floor_OpenFastCost;
        /*0x24*/ int Floor_HeroCountMax;
        /*0x28*/ int FloorWaste_Count;
        /*0x30*/ string FloorWaste_ClearCost;
        /*0x38*/ int FloorWaste_HeroCount;
        /*0x3c*/ int FloorWaste_ClearTime;
        /*0x40*/ int FloorWaste_FastCost;
        /*0x44*/ int FurnitureEffectUseValue;
        /*0x48*/ int OpenTimeUnlock;

        /*0xc9f220*/ TableData_Housingfloor();
    }

    class HousingFloorTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housingfloor> List;

        /*0x131a6a4*/ HousingFloorTable();
        /*0x131a79c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housinggacha
    {
        /*0x10*/ int GachaListGroup;
        /*0x14*/ int FurnitureID;
        /*0x18*/ float Furniture_GachaPercent;

        /*0xc9f230*/ TableData_Housinggacha();
    }

    class HousingGachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housinggacha> List;

        /*0x131a9f4*/ HousingGachaTable();
        /*0x131aaec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housingfloorpattern
    {
        /*0x10*/ string PatternID;
        /*0x18*/ string Pattern;
        /*0x20*/ string StairImage;
        /*0x28*/ string Image;

        /*0xc9f228*/ TableData_Housingfloorpattern();
    }

    class HousingFloorPatternTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housingfloorpattern> List;

        /*0x1319d94*/ HousingFloorPatternTable();
        /*0x1319e8c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furniture
    {
        /*0x10*/ int FurnitureID;
        /*0x18*/ string FurnitureImage;
        /*0x20*/ string FurnitureName;
        /*0x28*/ string FurniturePrefab;
        /*0x30*/ string FurnitureLayerType;
        /*0x38*/ string FurnitureType;
        /*0x40*/ string TileWallTypeID;
        /*0x48*/ string FurnitureSet;
        /*0x50*/ bool Furniture_Use_WallGroud;
        /*0x58*/ string Furniture_Grade;
        /*0x60*/ string Furniture_EffectLevelType;
        /*0x68*/ bool Furniture_Interaction;
        /*0x70*/ string Furniture_InteractionHero;
        /*0x78*/ int Furniture_InteractionCoolTime;
        /*0x7c*/ int Furniture_SellPrice;
        /*0x80*/ string FurnitureDesc;
        /*0x88*/ int Furniture_PlaceLimit;

        /*0xc9f120*/ TableData_Furniture();
    }

    class FurnitureTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furniture> List;

        /*0x10adca8*/ FurnitureTable();
        /*0x10adda0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureleveltypelist
    {
        /*0x10*/ string Furniture_LevelUpType;
        /*0x18*/ string Furniture_EffectType;
        /*0x20*/ int FurnitureEffect_Level;
        /*0x24*/ int ContentsEffectID;
        /*0x28*/ int HeroEffectID;
        /*0x2c*/ int HeroID;
        /*0x30*/ float FurnitureEffect_DismissAdd;

        /*0xc9f148*/ TableData_Furnitureleveltypelist();
    }

    class FurnitureLevelTypeListTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> List;

        /*0x10acf4c*/ FurnitureLevelTypeListTable();
        /*0x10ad044*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureeffecttype
    {
        /*0x10*/ string Type;
        /*0x18*/ float FurnitureEffectMax;
        /*0x20*/ string FurnitureEffectLocalize;
        /*0x28*/ string AtlasType;
        /*0x30*/ string TypeIcon;

        /*0xc9f130*/ TableData_Furnitureeffecttype();
    }

    class FurnitureEffectTypeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> List;

        /*0x10a93f0*/ FurnitureEffectTypeTable();
        /*0x10a94e8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureshop
    {
        /*0x10*/ int index;
        /*0x18*/ string Furniture_GroupSalePeriodStart;
        /*0x20*/ string Furniture_GroupSalePeriodEnd;
        /*0x28*/ int FurnitureGroup;
        /*0x2c*/ bool PeriodLocateMain;
        /*0x30*/ int GachaGroup;

        /*0xc9f160*/ TableData_Furnitureshop();
    }

    class FurnitureShopTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureshop> List;

        /*0x10ada0c*/ FurnitureShopTable();
        /*0x10adb04*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureshoplist
    {
        /*0x10*/ int index;
        /*0x14*/ int FurnitureShopGroup;
        /*0x18*/ int FurnitureID;
        /*0x20*/ string FurnitureSet;
        /*0x28*/ string Furniture_SalePrice;
        /*0x30*/ string PackageID;
        /*0x38*/ int PackagePrice;
        /*0x40*/ string Furniture_SaleDiscount;
        /*0x48*/ int Furniture_BuyLimit;

        /*0xc9f168*/ TableData_Furnitureshoplist();
    }

    class FurnitureShopListTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> List;

        /*0x10ad70c*/ FurnitureShopListTable();
        /*0x10ad804*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureset
    {
        /*0x10*/ string FurnitureSet;
        /*0x18*/ string FurnitureSetName;
        /*0x20*/ string FurnitureSetImage;
        /*0x28*/ string FurnitureSetDesc;

        /*0xc9f158*/ TableData_Furnitureset();
    }

    class FurnitureSetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureset> List;

        /*0x10ad4dc*/ FurnitureSetTable();
        /*0x10ad5d4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furniturecontentseffect
    {
        /*0x10*/ int ContentsEffectID;
        /*0x18*/ string Name;
        /*0x20*/ string EffectType;
        /*0x28*/ float EffectValue;

        /*0xc9f128*/ TableData_Furniturecontentseffect();
    }

    class FurnitureContentsEffectTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furniturecontentseffect> List;

        /*0x10a7a10*/ FurnitureContentsEffectTable();
        /*0x10a7b08*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureheroeffect
    {
        /*0x10*/ int HeroEffectID;
        /*0x18*/ string HeroEffectName;
        /*0x20*/ string GroupType;
        /*0x28*/ string[] ParamTypeN;
        /*0x30*/ float[] ParamQtyN;

        /*0xc9f140*/ TableData_Furnitureheroeffect();
    }

    class FurnitureHeroEffectTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureheroeffect> List;

        /*0x10acb38*/ FurnitureHeroEffectTable();
        /*0x10acc30*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureexp
    {
        /*0x10*/ int index;
        /*0x18*/ string FurnitureGrade;
        /*0x20*/ int FurnitureExp;

        /*0xc9f138*/ TableData_Furnitureexp();
    }

    class FurnitureExpTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureexp> List;

        /*0x10a9650*/ FurnitureExpTable();
        /*0x10a9748*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furniturelevelup
    {
        /*0x10*/ int index;
        /*0x14*/ int FurnitrueLevel;
        /*0x18*/ int GradeA;
        /*0x1c*/ int GradeS;
        /*0x20*/ int GradeSS;
        /*0x24*/ int GradeSSS;
        /*0x28*/ int FurnitureEffect_UpgradeTime;
        /*0x2c*/ int FurnitureEffect_UpgradeFastCost;

        /*0xc9f150*/ TableData_Furniturelevelup();
    }

    class FurnitureLevelupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furniturelevelup> List;

        /*0x10ad20c*/ FurnitureLevelupTable();
        /*0x10ad304*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Basic
    {
        /*0x10*/ float KILL_MP_CHARGE;
        /*0x14*/ float UNIT_GRADE_PCRI;
        /*0x18*/ float UNIT_GRADE_MCRI;
        /*0x1c*/ float UNIT_GRADE_DODG;
        /*0x20*/ float UNIT_GRADE_SPD;
        /*0x24*/ float UNIT_GRADE_HAST;
        /*0x28*/ float UNIT_GRADE_ACC;
        /*0x2c*/ float UNIT_LV_PCRI;
        /*0x30*/ float UNIT_LV_MCRI;
        /*0x34*/ float UNIT_LV_DODG;
        /*0x38*/ float UNIT_LV_SPD;
        /*0x3c*/ float UNIT_LV_HAST;
        /*0x40*/ float UNIT_LV_ACC;
        /*0x44*/ float UNIT_TIER_PCRI;
        /*0x48*/ float UNIT_TIER_MCRI;
        /*0x4c*/ float UNIT_TIER_DODG;
        /*0x50*/ float UNIT_TIER_SPD;
        /*0x54*/ float UNIT_TIER_HAST;
        /*0x58*/ float UNIT_TIER_ACC;
        /*0x5c*/ float ATTC_HP_COEF;
        /*0x60*/ float ATTC_ATK_COEF;
        /*0x64*/ float ATTC_DEF_COEF;
        /*0x68*/ float ATTC_MR_COEF;
        /*0x6c*/ float ATTC_PCRI_COEF;
        /*0x70*/ float ATTC_MCRI_COEF;
        /*0x74*/ float ATTC_DODG_COEF;
        /*0x78*/ float ATTC_SPD_COEF;
        /*0x7c*/ float ATTC_HAST_COEF;
        /*0x80*/ float ATTC_ACC_COEF;
        /*0x84*/ float ATTC_RGHP_COEF;
        /*0x88*/ float ATTC_PRDC_COEF;
        /*0x8c*/ float ATTC_MRDC_COEF;
        /*0x90*/ float COUNTER_DMG;

        /*0xc9eed8*/ TableData_Basic();
    }

    class BasicTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Basic> List;

        /*0xf88bcc*/ BasicTable();
        /*0xf88cc4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitbase
    {
        /*0x10*/ int Index;
        /*0x14*/ int ID;
        /*0x18*/ string UnitType;
        /*0x20*/ bool Enable;
        /*0x28*/ string Name;
        /*0x30*/ string Nick;
        /*0x38*/ string AttackType;
        /*0x40*/ string Class;
        /*0x48*/ string EquipmentType;
        /*0x50*/ int FactionID;
        /*0x54*/ int INITGrade;
        /*0x58*/ int MaxGrade;
        /*0x5c*/ float HP;
        /*0x60*/ float HP_CF;
        /*0x64*/ float ATK;
        /*0x68*/ float ATK_CF;
        /*0x6c*/ float DEF;
        /*0x70*/ float DEF_CF;
        /*0x74*/ float MR;
        /*0x78*/ float MR_CF;
        /*0x7c*/ float MP;
        /*0x80*/ float MPR;
        /*0x84*/ float SPD;
        /*0x88*/ float PCRI;
        /*0x8c*/ float MCRI;
        /*0x90*/ string ColliderType;
        /*0x98*/ float ColliderX;
        /*0x9c*/ float ColliderY;
        /*0xa0*/ bool Signiture;
        /*0xa4*/ int SIGUnlockGrade;
        /*0xa8*/ string Story;
        /*0xb0*/ string UnitDESC;
        /*0xb8*/ string SpineDataName;
        /*0xc0*/ string SpineSkinName;
        /*0xc8*/ float SpineHitBodyDegree;
        /*0xcc*/ bool SpineHitHeadTurn;
        /*0xcd*/ bool SpineHitFaceChange;
        /*0xd0*/ string IllustNameOriginal;
        /*0xd8*/ string IllustNameSmall;
        /*0xe0*/ string BattleIllustName;
        /*0xe8*/ string DeathSoundName;
        /*0xf0*/ bool NewHero;
        /*0xf4*/ int OriginUnitID;
        /*0xf8*/ int SignatureID;
        /*0xfc*/ int EnemyMazeAppearance;
        /*0x100*/ int MateMazeAppearance;

        /*0xc9f400*/ TableData_Unitbase();
    }

    class UnitBaseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitbase> List;

        /*0x10bfb4c*/ UnitBaseTable();
        /*0x10bfc44*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitgrade
    {
        /*0x10*/ int ID;
        /*0x14*/ int Grade;
        /*0x18*/ int MaxTier;
        /*0x1c*/ float HP;
        /*0x20*/ float AddHP;
        /*0x24*/ float ATK;
        /*0x28*/ float AddATK;
        /*0x2c*/ float DEF;
        /*0x30*/ float AddDEF;
        /*0x34*/ float MR;
        /*0x38*/ float AddMR;

        /*0xc9f408*/ TableData_Unitgrade();
    }

    class UnitGradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitgrade> List;

        /*0x10c1c34*/ UnitGradeTable();
        /*0x10c1d2c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitlv
    {
        /*0x10*/ int LV;
        /*0x14*/ int Tier;
        /*0x18*/ int GoldCost;
        /*0x1c*/ int UnitExpCost;
        /*0x20*/ int TierRequire;
        /*0x24*/ float HP;
        /*0x28*/ float ATK;
        /*0x2c*/ float DEF;
        /*0x30*/ float MR;
        /*0x34*/ int JewelCost;

        /*0xc9f418*/ TableData_Unitlv();
    }

    class UnitLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitlv> List;

        /*0x10c1f84*/ UnitLVTable();
        /*0x10c207c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unittier
    {
        /*0x10*/ int ID;
        /*0x14*/ int Tier;
        /*0x18*/ float HP;
        /*0x1c*/ float ATK;
        /*0x20*/ float DEF;
        /*0x24*/ float MR;

        /*0xc9f420*/ TableData_Unittier();
    }

    class UnitTierTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unittier> List;

        /*0x10c41b4*/ UnitTierTable();
        /*0x10c42ac*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitgradelv
    {
        /*0x10*/ int Grade;
        /*0x14*/ bool Upgradable;
        /*0x18*/ int MaxLV;
        /*0x20*/ string Name;
        /*0x28*/ string Color;
        /*0x30*/ string OutColor;
        /*0x38*/ string ShadowColor;
        /*0x40*/ string CostType;
        /*0x48*/ int CostGrade;
        /*0x4c*/ int CostQTY;

        /*0xc9f410*/ TableData_Unitgradelv();
    }

    class UnitGradeLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitgradelv> List;

        /*0x10c18f8*/ UnitGradeLVTable();
        /*0x10c19f0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unittierlv
    {
        /*0x10*/ int Tier;
        /*0x18*/ string UpgradeCost1;
        /*0x20*/ int UpgradeCost2;
        /*0x24*/ int UpgradeCost3;
        /*0x28*/ int TargetLV;

        /*0xc9f428*/ TableData_Unittierlv();
    }

    class UnitTierLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unittierlv> List;

        /*0x10c3f54*/ UnitTierLVTable();
        /*0x10c404c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skillbase
    {
        /*0x10*/ int Index;
        /*0x14*/ int ID;
        /*0x18*/ int CasterID;
        /*0x1c*/ int SkillSlot;
        /*0x20*/ string SkillName;
        /*0x28*/ string SkillType;
        /*0x30*/ string ActiveType;
        /*0x38*/ string PasvCOND;
        /*0x40*/ float PParam1;
        /*0x44*/ float PParam2;
        /*0x48*/ float PParam3;
        /*0x4c*/ float PParam4;
        /*0x50*/ string AttackType;
        /*0x58*/ int PriorityIDLE;
        /*0x5c*/ int PriorityMOVE;
        /*0x60*/ float MPCost;
        /*0x64*/ float MPGain;
        /*0x68*/ float CD;
        /*0x6c*/ float CDINIT;
        /*0x70*/ float CDGlobal;
        /*0x78*/ string SightColliderType;
        /*0x80*/ float SightX;
        /*0x84*/ float SightY;
        /*0x88*/ string StartSoundName;
        /*0x90*/ bool UseIdle;
        /*0x98*/ string AtlasType;
        /*0xa0*/ string IconName;
        /*0xa8*/ string FindColliderType;
        /*0xb0*/ float FindX;
        /*0xb4*/ float FindY;
        /*0xb8*/ float KillMP;

        /*0xc9f380*/ TableData_Skillbase();
    }

    class SkillBaseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skillbase> List;

        /*0x1510484*/ SkillBaseTable();
        /*0x151057c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skillfx
    {
        /*0x10*/ int Index;
        /*0x14*/ int ID;
        /*0x18*/ string SkillFXName;
        /*0x20*/ int SkillBaseID;
        /*0x24*/ int SkillLV;
        /*0x28*/ string COEFType;
        /*0x30*/ string COEFSet;
        /*0x38*/ float COEFNum;
        /*0x3c*/ float MPPay;
        /*0x40*/ string TargetType1;
        /*0x48*/ string TargetType2;
        /*0x50*/ string TargetType3;
        /*0x58*/ string RangePOSType;
        /*0x60*/ string RangeDIRType;
        /*0x68*/ string RangeColliderType;
        /*0x70*/ float RangeX;
        /*0x74*/ float RangeY;
        /*0x78*/ int BuffID;
        /*0x80*/ string BuffCOND;
        /*0x88*/ float BParam1;
        /*0x8c*/ float BParam2;
        /*0x90*/ float BParam3;
        /*0x94*/ float BParam4;
        /*0x98*/ float KnockBack;
        /*0xa0*/ string SkillDESC;
        /*0xa8*/ string SkillFXType;
        /*0xb0*/ float FParam1;
        /*0xb4*/ float FParam2;
        /*0xb8*/ float FParam3;
        /*0xbc*/ float FParam4;
        /*0xc0*/ string BuffTargetType;
        /*0xc8*/ string Hit_WpnType;
        /*0xd0*/ int MaxCollision;
        /*0xd4*/ bool Buff_MPPay;

        /*0xc9f398*/ TableData_Skillfx();
    }

    class SkillFXTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skillfx> List;

        /*0x15115c4*/ SkillFXTable();
        /*0x15116bc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skilllv
    {
        /*0x10*/ int Index;
        /*0x14*/ int MaxGrade;
        /*0x18*/ int SkillSlot;
        /*0x1c*/ int SkillLV1;
        /*0x20*/ int SkillLV2;
        /*0x24*/ int SkillLV3;
        /*0x28*/ int SkillLV4;

        /*0xc9f3a0*/ TableData_Skilllv();
    }

    class SkillLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skilllv> List;

        /*0x14502f4*/ SkillLVTable();
        /*0x14503ec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Buff
    {
        /*0x10*/ int ID;
        /*0x18*/ string Name;
        /*0x20*/ float Time;
        /*0x28*/ string Origin;
        /*0x30*/ string HP_B;
        /*0x38*/ float HP_F;
        /*0x3c*/ float HP_M;
        /*0x40*/ string RGHP_B;
        /*0x48*/ float RGHP_F;
        /*0x4c*/ float RGHP_M;
        /*0x50*/ string ATK_B;
        /*0x58*/ float ATK_F;
        /*0x5c*/ float ATK_M;
        /*0x60*/ string DEF_B;
        /*0x68*/ float DEF_F;
        /*0x6c*/ float DEF_M;
        /*0x70*/ string MR_B;
        /*0x78*/ float MR_F;
        /*0x7c*/ float MR_M;
        /*0x80*/ float MPR_F;
        /*0x84*/ float MPR_M;
        /*0x88*/ float PCRI;
        /*0x8c*/ float MCRI;
        /*0x90*/ float PCRIR;
        /*0x94*/ float MCRIR;
        /*0x98*/ float CRIDMG;
        /*0x9c*/ float CRIDMGR;
        /*0xa0*/ float DODG;
        /*0xa4*/ float SPD;
        /*0xa8*/ float HAST;
        /*0xac*/ float ACC;
        /*0xb0*/ float PRDC;
        /*0xb4*/ float MRDC;
        /*0xb8*/ float SHP;
        /*0xbc*/ float CCR;
        /*0xc0*/ bool UseStat;
        /*0xc8*/ string ShieldType;
        /*0xd0*/ string ShieldHP_B;
        /*0xd8*/ float ShieldHP_F;
        /*0xe0*/ string Effect1;
        /*0xe8*/ string Effect2;
        /*0xf0*/ string Effect3;
        /*0xf8*/ bool Stackable;
        /*0xfc*/ int MaxStack;
        /*0x100*/ bool ClearDeath;
        /*0x101*/ bool Removable;
        /*0x104*/ float Param1;
        /*0x108*/ float Param2;
        /*0x10c*/ float Param3;
        /*0x110*/ float Param4;
        /*0x118*/ string BuffType;
        /*0x120*/ string IconName;

        /*0xc9ef30*/ TableData_Buff();
    }

    class BuffTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Buff> List;

        /*0x16f2224*/ BuffTable();
        /*0x16f231c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Equipment
    {
        /*0x10*/ int Index;
        /*0x18*/ string Name;
        /*0x20*/ string ClassType;
        /*0x28*/ string Type;
        /*0x30*/ string EquipSlot;
        /*0x38*/ int Grade;
        /*0x3c*/ float HP;
        /*0x40*/ float AddHP;
        /*0x44*/ float HP_Per;
        /*0x48*/ float AddHP_Per;
        /*0x4c*/ float ATK;
        /*0x50*/ float AddATK;
        /*0x54*/ float ATK_Per;
        /*0x58*/ float AddATK_Per;
        /*0x5c*/ float DEF;
        /*0x60*/ float AddDEF;
        /*0x64*/ float DEF_Per;
        /*0x68*/ float AddDEF_Per;
        /*0x6c*/ float MR;
        /*0x70*/ float AddMR;
        /*0x74*/ float MR_Per;
        /*0x78*/ float AddMR_Per;
        /*0x7c*/ float PCRI;
        /*0x80*/ float AddPCRI;
        /*0x84*/ float MCRI;
        /*0x88*/ float AddMCRI;
        /*0x8c*/ float DODG;
        /*0x90*/ float AddDODG;
        /*0x94*/ float SPD;
        /*0x98*/ float AddSPD;
        /*0x9c*/ float HAST;
        /*0xa0*/ float AddHAST;
        /*0xa4*/ float ACC;
        /*0xa8*/ float AddACC;
        /*0xac*/ float RGHP;
        /*0xb0*/ float AddRGHP;
        /*0xb4*/ float PRDC;
        /*0xb8*/ float AddPRDC;
        /*0xbc*/ float MRDC;
        /*0xc0*/ float AddMRDC;
        /*0xc4*/ float SHP;
        /*0xc8*/ float AddSHP;
        /*0xcc*/ float FactionBonusChance;
        /*0xd0*/ float FactionBonusRate;
        /*0xd8*/ string FactionBonusChange;
        /*0xe0*/ int Purchase;
        /*0xe4*/ float SellDisc;
        /*0xe8*/ string SellPrice1;
        /*0xf0*/ string SellPrice2;
        /*0xf8*/ int SellPrice3;
        /*0xfc*/ int EnhanceEquip;
        /*0x100*/ int AdvanceEquip;
        /*0x108*/ string Description;
        /*0x110*/ string AtlasType;
        /*0x118*/ string IconName;
        /*0x120*/ int EquipExp;

        /*0xc9f040*/ TableData_Equipment();
    }

    class EquipmentTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Equipment> List;

        /*0x114cd38*/ EquipmentTable();
        /*0x114ce30*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Enhanceequip
    {
        /*0x10*/ int Index;
        /*0x14*/ int MaxGrade;
        /*0x18*/ int[] GradeExpN;

        /*0xc9f038*/ TableData_Enhanceequip();
    }

    class EnhanceEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Enhanceequip> List;

        /*0x14b9a38*/ EnhanceEquipTable();
        /*0x14b9b30*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Advanceequip
    {
        /*0x10*/ int ClassGroup;
        /*0x14*/ int AdvanceGrade;
        /*0x18*/ string RequireCost;

        /*0xc9eeb0*/ TableData_Advanceequip();
    }

    class AdvanceEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Advanceequip> List;

        /*0xed9bb8*/ AdvanceEquipTable();
        /*0xed9cb0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Factionbuff
    {
        /*0x10*/ int Index;
        /*0x18*/ string CondType;
        /*0x20*/ int CondNum1;
        /*0x24*/ int CondNum2;
        /*0x28*/ string Buff1_Stat;
        /*0x30*/ int Buff1_ID;
        /*0x34*/ int Buff1_MaxLV;
        /*0x38*/ int Buff1_LV;
        /*0x40*/ string Buff2_Stat;
        /*0x48*/ int Buff2_ID;
        /*0x4c*/ int Buff2_MaxLV;
        /*0x50*/ int Buff2_LV;

        /*0xc9f100*/ TableData_Factionbuff();
    }

    class FactionBuffTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> List;

        /*0x11d9a94*/ FactionBuffTable();
        /*0x11d9b8c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skilldesc
    {
        /*0x10*/ int Index;
        /*0x14*/ int CasterID;
        /*0x18*/ int SkillSlot;
        /*0x1c*/ int SkillLV;
        /*0x20*/ string SkillDESC;

        /*0xc9f388*/ TableData_Skilldesc();
    }

    class SkillDescTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> List;

        /*0x1510b10*/ SkillDescTable();
        /*0x1510c08*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Demodata
    {
        /*0x10*/ int Index;
        /*0x14*/ int Hero_Buff;
        /*0x18*/ int Ally1_ID;
        /*0x1c*/ int Ally2_ID;
        /*0x20*/ int Ally_Grade;
        /*0x24*/ int Ally_Tier;
        /*0x28*/ int Ally_LV;
        /*0x2c*/ float Ally_Time;
        /*0x30*/ int Ally_Qty;
        /*0x34*/ int Enemy1_ID;
        /*0x38*/ int Enemy2_ID;
        /*0x3c*/ int Enemy_Grade;
        /*0x40*/ int Enemy_Tier;
        /*0x44*/ int Enemy_LV;
        /*0x48*/ float Enemy_Time;
        /*0x4c*/ int Enemy_Qty;

        /*0xc9efe0*/ TableData_Demodata();
    }

    class DemoDataTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Demodata> List;

        /*0x11ef85c*/ DemoDataTable();
        /*0x11ef954*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Artifact
    {
        /*0x10*/ int EquipID;
        /*0x14*/ int EquipLV;
        /*0x18*/ float CD;
        /*0x1c*/ float CDINIT;
        /*0x20*/ string SightColliderType;
        /*0x28*/ float SightX;
        /*0x2c*/ float SightY;
        /*0x30*/ int StartBuffID;
        /*0x34*/ int BuffID;
        /*0x38*/ int SkillFXID;
        /*0x3c*/ int SkillFXLV;
        /*0x40*/ float Param1;
        /*0x44*/ float Param2;
        /*0x48*/ float Param3;
        /*0x4c*/ float Param4;
        /*0x50*/ float Param5;
        /*0x58*/ string EffectDesc;
        /*0x60*/ string GetDesc;
        /*0x68*/ string Move;
        /*0x70*/ bool Enable;

        /*0xc9eed0*/ TableData_Artifact();
    }

    class ArtifactTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Artifact> List;

        /*0xeefc4c*/ ArtifactTable();
        /*0xeefd44*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skillextra
    {
        /*0x10*/ int ID;
        /*0x18*/ string Type;
        /*0x20*/ float Param1;
        /*0x24*/ float Param2;
        /*0x28*/ float Param3;
        /*0x2c*/ float Param4;
        /*0x30*/ float Param5;

        /*0xc9f390*/ TableData_Skillextra();
    }

    class SkillExtraTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skillextra> List;

        /*0x1510e04*/ SkillExtraTable();
        /*0x1510efc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Pvenoblity
    {
        /*0x10*/ int idx;
        /*0x18*/ string Noblity;
        /*0x20*/ int Challenge1_ID;
        /*0x24*/ int Challenge2_ID;
        /*0x28*/ int Challenge3_ID;
        /*0x30*/ string[] AccountReward_TN;

        /*0xc9f298*/ TableData_Pvenoblity();
    }

    class PveNoblityTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Pvenoblity> List;

        /*0x101e144*/ PveNoblityTable();
        /*0x101e23c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Pvechallenge
    {
        /*0x10*/ int Challenge_ID;
        /*0x18*/ string Challenge_Name;
        /*0x20*/ int Challenge_Lv;
        /*0x28*/ string Clear_Reward;
        /*0x30*/ int Clear_UserExp;
        /*0x38*/ string Ally_Formation;
        /*0x40*/ string Enemy_Formation;
        /*0x48*/ string Enemy_ID;
        /*0x50*/ string Enemy_Grade;
        /*0x58*/ string Enemy_Eq;
        /*0x60*/ string Enemy_AddHP;
        /*0x68*/ int Bg_Map;
        /*0x70*/ string[] Enemy_LV_N;
        /*0x78*/ string[] Enemy_Tier_N;

        /*0xc9f288*/ TableData_Pvechallenge();
    }

    class PveChallengeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Pvechallenge> List;

        /*0x101d908*/ PveChallengeTable();
        /*0x101da00*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Pveclearreward
    {
        /*0x10*/ int ClearCount;
        /*0x18*/ string Reward;

        /*0xc9f290*/ TableData_Pveclearreward();
    }

    class PveClearRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> List;

        /*0x101df5c*/ PveClearRewardTable();
        /*0x101e054*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Quest
    {
        /*0x10*/ int Index;
        /*0x18*/ string Content;
        /*0x20*/ string Target;
        /*0x28*/ string Group;
        /*0x30*/ string QuestGroupID;
        /*0x38*/ bool ViewQuest;
        /*0x40*/ string Move;
        /*0x48*/ string RequireQuestGroupId;
        /*0x50*/ bool ViewType;
        /*0x51*/ bool QuestListView;
        /*0x54*/ int Priority;

        /*0xc9f2a0*/ TableData_Quest();
    }

    class QuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Quest> List;

        /*0x1246aa4*/ QuestTable();
        /*0x1246b9c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questgroup
    {
        /*0x10*/ int Index;
        /*0x18*/ string TYPE;
        /*0x20*/ string QuestGroupID;
        /*0x28*/ string QuestID;
        /*0x30*/ int QuestStep;
        /*0x38*/ string Rewards;
        /*0x40*/ int VipPoint;

        /*0xc9f2e0*/ TableData_Questgroup();
    }

    class QuestGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questgroup> List;

        /*0x123eee4*/ QuestGroupTable();
        /*0x123efdc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questpropertypoint
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int FactionID;
        /*0x24*/ int ClearPoint;
        /*0x28*/ string QuestName;

        /*0xc9f318*/ TableData_Questpropertypoint();
    }

    class QuestPropertyPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questpropertypoint> List;

        /*0x1245898*/ QuestPropertyPointTable();
        /*0x1245990*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questchapterclear
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int ChapterID;
        /*0x28*/ string QuestName;

        /*0xc9f2b8*/ TableData_Questchapterclear();
    }

    class QuestChapterClearTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questchapterclear> List;

        /*0x123827c*/ QuestChapterClearTable();
        /*0x1238374*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Queststageclear
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int BattleID;
        /*0x28*/ string QuestName;

        /*0xc9f330*/ TableData_Queststageclear();
    }

    class QuestStageClearTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Queststageclear> List;

        /*0x1245f90*/ QuestStageClearTable();
        /*0x1246088*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questgacha
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int FactionID;
        /*0x2c*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2d0*/ TableData_Questgacha();
    }

    class QuestGachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questgacha> List;

        /*0x123bc5c*/ QuestGachaTable();
        /*0x123bd54*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Queststageidle
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string IdleKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f338*/ TableData_Queststageidle();
    }

    class QuestStageIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Queststageidle> List;

        /*0x12461c8*/ QuestStageIdleTable();
        /*0x12462c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Queststagetry
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Contents;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f340*/ TableData_Queststagetry();
    }

    class QuestStageTryTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Queststagetry> List;

        /*0x1246428*/ QuestStageTryTable();
        /*0x1246520*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questheroupgrade
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string UpgradeKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2f0*/ TableData_Questheroupgrade();
    }

    class QuestHeroUpgradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questheroupgrade> List;

        /*0x123f41c*/ QuestHeroUpgradeTable();
        /*0x123f514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questequipupgrade
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int Grade;
        /*0x2c*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2c0*/ TableData_Questequipupgrade();
    }

    class QuestEquipUpgradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questequipupgrade> List;

        /*0x123b774*/ QuestEquipUpgradeTable();
        /*0x123b86c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questfriend
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string PointKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2c8*/ TableData_Questfriend();
    }

    class QuestFriendTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questfriend> List;

        /*0x123b9fc*/ QuestFriendTable();
        /*0x123baf4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questprizeboard
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string PrizeKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f310*/ TableData_Questprizeboard();
    }

    class QuestPrizeBoardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questprizeboard> List;

        /*0x124457c*/ QuestPrizeBoardTable();
        /*0x1244674*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questbuy
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string ShopGroup;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2b0*/ TableData_Questbuy();
    }

    class QuestBuyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questbuy> List;

        /*0x123801c*/ QuestBuyTable();
        /*0x1238114*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questarena
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string ArenaKind;
        /*0x28*/ string CountGroup;
        /*0x30*/ int Count;
        /*0x38*/ string QuestName;

        /*0xc9f2a8*/ TableData_Questarena();
    }

    class QuestArenaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questarena> List;

        /*0x1237d94*/ QuestArenaTable();
        /*0x1237e8c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questheroget
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int GroupDetail;
        /*0x2c*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2e8*/ TableData_Questheroget();
    }

    class QuestHeroGetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questheroget> List;

        /*0x123f194*/ QuestHeroGetTable();
        /*0x123f28c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questlevel
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f300*/ TableData_Questlevel();
    }

    class QuestLevelTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questlevel> List;

        /*0x123f8dc*/ QuestLevelTable();
        /*0x123f9d4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questgetitem
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string GetGroup;
        /*0x28*/ string ItemType;
        /*0x30*/ string ItemId;
        /*0x38*/ long Count;
        /*0x40*/ string QuestName;

        /*0xc9f2d8*/ TableData_Questgetitem();
    }

    class QuestGetItemTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questgetitem> List;

        /*0x123d1cc*/ QuestGetItemTable();
        /*0x123d2c4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questmove
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ string MoveContent;
        /*0x30*/ int Count;
        /*0x38*/ string QuestName;

        /*0xc9f308*/ TableData_Questmove();
    }

    class QuestMoveTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questmove> List;

        /*0x1241d9c*/ QuestMoveTable();
        /*0x1241e94*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questlabyrinth
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int ClearFloor;
        /*0x24*/ int Count;
        /*0x28*/ string QuestName;

        /*0xc9f2f8*/ TableData_Questlabyrinth();
    }

    class QuestLabyrinthTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questlabyrinth> List;

        /*0x123f67c*/ QuestLabyrinthTable();
        /*0x123f774*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questresonance
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f320*/ TableData_Questresonance();
    }

    class QuestResonanceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questresonance> List;

        /*0x1245af8*/ QuestResonanceTable();
        /*0x1245bf0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questspirittowerclear
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int Floor;
        /*0x28*/ string QuestName;

        /*0xc9f328*/ TableData_Questspirittowerclear();
    }

    class QuestSpiritTowerClearTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questspirittowerclear> List;

        /*0x1245d58*/ QuestSpiritTowerClearTable();
        /*0x1245e50*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Racetile
    {
        /*0x10*/ int Index;
        /*0x18*/ string TileType;
        /*0x20*/ string TileSpriteName;
        /*0x28*/ float Percent;
        /*0x2c*/ int Limit;
        /*0x30*/ int Interval;
        /*0x38*/ string AnimType;
        /*0x40*/ int StartOffset;
        /*0x44*/ float BeginTileTime;
        /*0x48*/ float BeginSpeedValue;
        /*0x4c*/ float FinishTileTime;
        /*0x50*/ float FinishSpeedValue;
        /*0x54*/ bool EnableObject;
        /*0x58*/ string ObjectSpriteName;
        /*0x60*/ float ObjectOffsetX;
        /*0x64*/ float ObjectOffsetY;

        /*0xc9f358*/ TableData_Racetile();
    }

    class RaceTileTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Racetile> List;

        /*0x11b8f4c*/ RaceTileTable();
        /*0x11b9044*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Raceaccel
    {
        /*0x10*/ int Index;
        /*0x14*/ float Speed;
        /*0x18*/ float Percent;
        /*0x1c*/ int Limit;

        /*0xc9f348*/ TableData_Raceaccel();
    }

    class RaceAccelTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> List;

        /*0x1246e20*/ RaceAccelTable();
        /*0x1246f18*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Racereward
    {
        /*0x10*/ int Reward_IDX;
        /*0x18*/ string Race_Reward1;
        /*0x20*/ string Race_Reward2;
        /*0x28*/ string Race_Reward3;

        /*0xc9f350*/ TableData_Racereward();
    }

    class RaceRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Racereward> List;

        /*0x11b5394*/ RaceRewardTable();
        /*0x11b548c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Relation
    {
        /*0x10*/ int Relation_Idx;
        /*0x14*/ bool Enable;
        /*0x18*/ string Relation_Name;
        /*0x20*/ int Total_Hero;
        /*0x28*/ string LV1_Grade1;
        /*0x30*/ int LV1_Qty1;
        /*0x38*/ string LV1_Grade2;
        /*0x40*/ int LV1_Qty2;
        /*0x48*/ string LV1_StatType1;
        /*0x50*/ float LV1_StatQty1;
        /*0x58*/ string LV1_StatType2;
        /*0x60*/ float LV1_StatQty2;
        /*0x68*/ string LV2_Grade1;
        /*0x70*/ int LV2_Qty1;
        /*0x78*/ string LV2_Grade2;
        /*0x80*/ int LV2_Qty2;
        /*0x88*/ string LV2_StatType1;
        /*0x90*/ float LV2_StatQty1;
        /*0x98*/ string LV3_Grade1;
        /*0xa0*/ int LV3_Qty1;
        /*0xa8*/ string LV3_Grade2;
        /*0xb0*/ int LV3_Qty2;
        /*0xb8*/ string LV3_StatType1;
        /*0xc0*/ float LV3_StatQty1;
        /*0xc8*/ string LV4_Grade1;
        /*0xd0*/ int LV4_Qty1;
        /*0xd8*/ string LV4_Grade2;
        /*0xe0*/ int LV4_Qty2;
        /*0xe8*/ string LV4_StatType1;
        /*0xf0*/ float LV4_StatQty1;
        /*0xf8*/ string LV5_Grade1;
        /*0x100*/ int LV5_Qty1;
        /*0x108*/ string LV5_Grade2;
        /*0x110*/ int LV5_Qty2;
        /*0x118*/ string LV5_StatType1;
        /*0x120*/ float LV5_StatQty1;
        /*0x128*/ string LV6_Grade1;
        /*0x130*/ int LV6_Qty1;
        /*0x138*/ string LV6_Grade2;
        /*0x140*/ int LV6_Qty2;
        /*0x148*/ string LV6_StatType1;
        /*0x150*/ float LV6_StatQty1;
        /*0x158*/ string LV7_Grade1;
        /*0x160*/ int LV7_Qty1;
        /*0x168*/ string LV7_Grade2;
        /*0x170*/ int LV7_Qty2;
        /*0x178*/ string LV7_StatType1;
        /*0x180*/ float LV7_StatQty1;
        /*0x188*/ string LV8_Grade1;
        /*0x190*/ int LV8_Qty1;
        /*0x198*/ string LV8_Grade2;
        /*0x1a0*/ int LV8_Qty2;
        /*0x1a8*/ string LV8_StatType1;
        /*0x1b0*/ float LV8_StatQty1;
        /*0x1b8*/ int[] HeroN_ID;

        /*0xc9f360*/ TableData_Relation();
    }

    class RelationTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Relation> List;

        /*0xf1b660*/ RelationTable();
        /*0xf1b758*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Runreward
    {
        /*0x10*/ int Reward_IDX;
        /*0x14*/ int UserLV;
        /*0x18*/ int[] RewardN_Max;
        /*0x20*/ string[] RewardN_One;

        /*0xc9f378*/ TableData_Runreward();
    }

    class RunRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Runreward> List;

        /*0x1295ff4*/ RunRewardTable();
        /*0x12960ec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Runlife
    {
        /*0x10*/ int Unit_ID;
        /*0x14*/ int A_Life;
        /*0x18*/ int S_Life;
        /*0x1c*/ int SS_Life;
        /*0x20*/ int SSS_Life;
        /*0x24*/ float Mov_Spd;
        /*0x28*/ float MovAni_Spd;
        /*0x2c*/ float JumpAni_Spd;
        /*0x30*/ float Inv_Time;

        /*0xc9f370*/ TableData_Runlife();
    }

    class RunLifeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Runlife> List;

        /*0x12952cc*/ RunLifeTable();
        /*0x12953c4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopindex
    {
        /*0x10*/ string PackageId;
        /*0x18*/ string IOS;
        /*0x20*/ string Android;
        /*0x28*/ string Onestore;

        /*0xc9ef50*/ TableData_Cashshopindex();
    }

    class CashShopIndexTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopindex> List;

        /*0x15424d4*/ CashShopIndexTable();
        /*0x15425cc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshoplimit
    {
        /*0x10*/ int Index;
        /*0x18*/ string TimeKey;
        /*0x20*/ string PackageId;
        /*0x28*/ string PackageName;
        /*0x30*/ string PackageArrangement;
        /*0x38*/ string ResetType;
        /*0x40*/ int PurchaseCount;
        /*0x44*/ int PackagePrice;
        /*0x48*/ string PackageBadge;
        /*0x50*/ int BadgePercent;
        /*0x58*/ string FirstPackageProduct;
        /*0x60*/ string ProductType;
        /*0x68*/ string PackageProduct;
        /*0x70*/ string BonusPackageProduct;
        /*0x78*/ string PackageDesc;
        /*0x80*/ string PackageImg;
        /*0x88*/ string BannerBGImageEnable;
        /*0x90*/ string BannerBGImageDisable;
        /*0x98*/ int VipPoint;
        /*0xa0*/ string Location;
        /*0xa8*/ string PackageSubDesc;

        /*0xc9ef60*/ TableData_Cashshoplimit();
    }

    class CashShopLimitTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshoplimit> List;

        /*0x1542b44*/ CashShopLimitTable();
        /*0x1542c3c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopdaily
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9ef40*/ TableData_Cashshopdaily();
    }

    class CashShopDailyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopdaily> List;

        /*0x1540d28*/ CashShopDailyTable();
        /*0x1540e20*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopweekly
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9efa0*/ TableData_Cashshopweekly();
    }

    class CashShopWeeklyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopweekly> List;

        /*0xd6cb14*/ CashShopWeeklyTable();
        /*0xd6cc0c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopmonthly
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9ef68*/ TableData_Cashshopmonthly();
    }

    class CashShopMonthlyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopmonthly> List;

        /*0x15486c0*/ CashShopMonthlyTable();
        /*0x15487b8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopstar
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ string FirstReset;
        /*0x60*/ int PurchaseCount;
        /*0x64*/ int PackagePrice;
        /*0x68*/ string PackageBadge;
        /*0x70*/ int BadgePercent;
        /*0x78*/ string FirstPackageProduct;
        /*0x80*/ string FirstBonusPackageProduct;
        /*0x88*/ string PackageProduct;
        /*0x90*/ string BonusPackageProduct;
        /*0x98*/ string PackageDesc;
        /*0xa0*/ string PackageImg;
        /*0xa8*/ int VipPoint;

        /*0xc9ef90*/ TableData_Cashshopstar();
    }

    class CashShopStarTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopstar> List;

        /*0xd6b8b0*/ CashShopStarTable();
        /*0xd6b9a8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshophero
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;
        /*0xa0*/ string TitleInlineColor;
        /*0xa8*/ string TitleOutlineColor;
        /*0xb0*/ string DescInlineColor;
        /*0xb8*/ string DescOutlineColor;

        /*0xc9ef48*/ TableData_Cashshophero();
    }

    class CashShopHeroTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshophero> List;

        /*0x1541d18*/ CashShopHeroTable();
        /*0x1541e10*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopsubscription
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string PackageKind;
        /*0x78*/ string FirstPackageProduct;
        /*0x80*/ string PackageProduct;
        /*0x88*/ string BonusPackageProduct;
        /*0x90*/ int SubscriptionDay;
        /*0x98*/ string SubscriptionProduct;
        /*0xa0*/ string PackageDesc;
        /*0xa8*/ string PackageImg;
        /*0xb0*/ int VipPoint;

        /*0xc9ef98*/ TableData_Cashshopsubscription();
    }

    class CashShopSubscriptionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopsubscription> List;

        /*0xd6bd90*/ CashShopSubscriptionTable();
        /*0xd6be88*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopbeginner
    {
        /*0x10*/ int Index;
        /*0x18*/ string PackageId;
        /*0x20*/ string PackageName;
        /*0x28*/ string PackageArrangement;
        /*0x30*/ string ResetType;
        /*0x38*/ int PurchaseCount;
        /*0x3c*/ int PackagePrice;
        /*0x40*/ string PackageBadge;
        /*0x48*/ int BadgePercent;
        /*0x50*/ string FirstPackageProduct;
        /*0x58*/ string PackageProduct;
        /*0x60*/ string BonusPackageProduct;
        /*0x68*/ int SubscriptionDay;
        /*0x70*/ string SubscriptionProduct;
        /*0x78*/ string PackageDesc;
        /*0x80*/ string PackageImg;
        /*0x88*/ int VipPoint;

        /*0xc9ef38*/ TableData_Cashshopbeginner();
    }

    class CashShopBeginnerTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopbeginner> List;

        /*0x15408e8*/ CashShopBeginnerTable();
        /*0x15409e0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopinstant
    {
        /*0x10*/ int Index;
        /*0x18*/ string RequireTrigger;
        /*0x20*/ string RequireTriggerRate;
        /*0x28*/ string Type;
        /*0x30*/ string RemainTimeKind;
        /*0x38*/ int RemainTimeCount;
        /*0x40*/ string PackageId;
        /*0x48*/ string PackageName;
        /*0x50*/ int PackagePrice;
        /*0x58*/ string PackageBadge;
        /*0x60*/ int BadgePercent;
        /*0x68*/ string PackageDesc;
        /*0x70*/ string PackageImg;
        /*0x78*/ int VipPoint;
        /*0x80*/ string PackageSubDesc;
        /*0x88*/ string SubMenuKey;
        /*0x90*/ int Priority;

        /*0xc9ef58*/ TableData_Cashshopinstant();
    }

    class CashShopInstantTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopinstant> List;

        /*0x1542704*/ CashShopInstantTable();
        /*0x15427fc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Packageproductgroup
    {
        /*0x10*/ string PackageId;
        /*0x18*/ int Group;
        /*0x20*/ string Product;

        /*0xc9f268*/ TableData_Packageproductgroup();
    }

    class PackageProductGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> List;

        /*0x1141adc*/ PackageProductGroupTable();
        /*0x1141bd4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopquest
    {
        /*0x10*/ int Index;
        /*0x18*/ string PackageId;
        /*0x20*/ string PackageName;
        /*0x28*/ string PackageArrangement;
        /*0x30*/ int PackagePrice;
        /*0x38*/ string PackageBadge;
        /*0x40*/ int BadgePercent;
        /*0x48*/ string PackageDesc;
        /*0x50*/ string PackageImg;
        /*0x58*/ int VipPoint;

        /*0xc9ef70*/ TableData_Cashshopquest();
    }

    class CashShopQuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopquest> List;

        /*0xd69464*/ CashShopQuestTable();
        /*0xd6955c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopquestreward
    {
        /*0x10*/ int index;
        /*0x18*/ string ShopId;
        /*0x20*/ string Trigger;
        /*0x28*/ string Reward;

        /*0xc9ef78*/ TableData_Cashshopquestreward();
    }

    class CashShopQuestRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopquestreward> List;

        /*0xd6922c*/ CashShopQuestRewardTable();
        /*0xd69324*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contentshop
    {
        /*0x10*/ int Index;
        /*0x18*/ string ShopCatogoryId;
        /*0x20*/ string ResetType;
        /*0x28*/ string RequireQuestGroupId;
        /*0x30*/ string UseCurrency;
        /*0x38*/ string LogID;

        /*0xc9efc8*/ TableData_Contentshop();
    }

    class ContentShopTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contentshop> List;

        /*0xf4bec0*/ ContentShopTable();
        /*0xf4bfb8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contentshoparrangement
    {
        /*0x10*/ int Index;
        /*0x14*/ int SubIndex;
        /*0x18*/ string ShopCategoryID;
        /*0x20*/ string PackageBadge;
        /*0x28*/ string PayType;
        /*0x30*/ string PackageGroup1;
        /*0x38*/ string PackageGroup2;
        /*0x40*/ string PackageGroup3;
        /*0x48*/ string PackageGroup4;

        /*0xc9efd0*/ TableData_Contentshoparrangement();
    }

    class ContentShopArrangementTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contentshoparrangement> List;

        /*0x10ec0d8*/ ContentShopArrangementTable();
        /*0x10ec1d0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Packagetime
    {
        /*0x10*/ string TimeKey;
        /*0x18*/ string StartDate;
        /*0x20*/ string EndDate;
        /*0x28*/ int RepeatDay;

        /*0xc9f270*/ TableData_Packagetime();
    }

    class PackageTimeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Packagetime> List;

        /*0x1141cec*/ PackageTimeTable();
        /*0x1141de4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopskinpiece
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9ef88*/ TableData_Cashshopskinpiece();
    }

    class CashShopSkinPieceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopskinpiece> List;

        /*0xd6af18*/ CashShopSkinPieceTable();
        /*0xd6b010*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopskin
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;
        /*0xa0*/ string PackageSubDesc;
        /*0xa8*/ string TitleInlineColor;
        /*0xb0*/ string TitleOutlineColor;

        /*0xc9ef80*/ TableData_Cashshopskin();
    }

    class CashShopSkinTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopskin> List;

        /*0xd6b3a8*/ CashShopSkinTable();
        /*0xd6b4a0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skinbasic
    {
        /*0x10*/ int Index;
        /*0x14*/ int UnitID;
        /*0x18*/ string Name;
        /*0x20*/ string MoveShopPackage;
        /*0x28*/ string RequireItem;
        /*0x30*/ string UIIcon;
        /*0x38*/ string DuplicateReturn;

        /*0xc9f3a8*/ TableData_Skinbasic();
    }

    class SkinBasicTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> List;

        /*0x145059c*/ SkinBasicTable();
        /*0x1450694*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Voice
    {
        /*0x10*/ int UnitID;
        /*0x18*/ string Key;
        /*0x20*/ string Valuse;
        /*0x28*/ string AssetbundleType;

        /*0xc9f440*/ TableData_Voice();
    }

    class VoiceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Voice> List;

        /*0xdfd098*/ VoiceTable();
        /*0xdfd190*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Arenaconfig
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9eec0*/ TableData_Arenaconfig();
    }

    class ArenaConfigTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Arenaconfig> List;

        /*0xee3d54*/ ArenaConfigTable();
        /*0xee3e4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenatier2
    {
        /*0x10*/ int TierStep;
        /*0x18*/ string TierName;
        /*0x20*/ string TierGroupName;
        /*0x28*/ int RaisePoint;
        /*0x2c*/ int RaiseRank;
        /*0x30*/ string BattleWinReward;
        /*0x38*/ string RaiseReward;
        /*0x40*/ string TierReward;
        /*0x48*/ string DailyReward;
        /*0x50*/ string SeasonReward;
        /*0x58*/ int NewseasonBasicPoint;
        /*0x5c*/ float newseasonPlusPoint;
        /*0x60*/ string BestPointReward;

        /*0xc9f468*/ TableData_Worldarenatier2();
    }

    class WorldArenaTier2Table
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenatier2> List;

        /*0xe09c14*/ WorldArenaTier2Table();
        /*0xe09d0c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldbossstep
    {
        /*0x10*/ int StepID;
        /*0x18*/ string GradeName;
        /*0x20*/ int BattleID;
        /*0x24*/ int WorldBossID;
        /*0x28*/ int WorldBossLevel;
        /*0x2c*/ int WorldBossGrade;
        /*0x30*/ int StartBuff;
        /*0x38*/ string BasicReward;
        /*0x40*/ string StepReward;

        /*0xc9f478*/ TableData_Worldbossstep();
    }

    class WorldBossStepTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldbossstep> List;

        /*0xe0f1c8*/ WorldBossStepTable();
        /*0xe0f2c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldbossmission
    {
        /*0x10*/ int Index;
        /*0x14*/ int StepID;
        /*0x18*/ int WorldBossID;
        /*0x1c*/ int MissionStep;
        /*0x20*/ string Trigger;
        /*0x28*/ string MissionReward;

        /*0xc9f470*/ TableData_Worldbossmission();
    }

    class WorldBossMissionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> List;

        /*0xe0e6bc*/ WorldBossMissionTable();
        /*0xe0e7b4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }
}

namespace Battle
{
    class Constants
    {
        static int VERIFY_CLIENT = 1;
        static int VERIFY_SERVER = 2;
        static string REPLAY_NO_AUTO_NO_SKILL = "NoAutoNoSkill";
        static float BATTLE_SPEED_IDLE = 0.800000011920929;
        static float BATTLE_SPEED_NORMAL = 0.800000011920929;
        static float BATTLE_SPEED_FAST_X2 = 1;
        static float BATTLE_SPEED_FAST_X3 = 1.399999976158142;
        static float BATTLE_SPEED_FAST_X4 = 1.7000000476837158;
        static float TARGET_DELTA_TIME = 0.016599999740719795;
        static float GAME_SPEED_MULT = 1.25;
        static float DELTA_TIME_SYNC = 0.020749999210238457;
        static float DELTA_TIME_REAL = 0.020749999210238457;
        static float HPSP_RECOVERY_TICK_TIME = 0.10000000149011612;
        static float ONE_SECOND_TICK_TIME = 1;
        static float CRITICAL_DAMAGE_MULT = 2;
        static float COIN_FLYING_SPEED = 2;
        static float COIN_FALLEN_SPEED_MIN = 0.5;
        static float COIN_FALLEN_SPEED_MAX = 1.5;
        static float BOSS_ITEM_SPEED = 5;
        static float PROJECTILE_DEFAULT_POSZ = -1;
        static float PROJECTILE_DEFAULT_POSZ_SYNCTOOL = 9;
        static float PARTICLE_DEFAULT_POSZ = -1.100000023841858;
        static float SIN_45_DEGREE = 0.7071067690849304;
        static float COLLISION_CHECK_POSITION_INTERVAL = 0.30000001192092896;
        static float COLLISION_CHECK_POSITION_MIN_DISTANCE = 0.20000000298023224;
        static string COLOR_PROPERTY_NAME = "_Color";
        static string BLACKTINT_PROPERTY_NAME = "_Black";
        static int FACTION_FIRE = 1;
        static int FACTION_WIND = 2;
        static int FACTION_EARTH = 3;
        static int FACTION_WATER = 4;
        static int FACTION_GOD = 5;
        static int FACTION_DEMON = 6;
        static int FACTION_OTHER = 7;
        static float BUFF_EXIT_WHEN_OWNER_SKILL_END = -1;
        static float BUFF_EXIT_WHEN_CASTER_SKILL_END = -2;
        static float BUFF_NO_TIME_LIMIT = 9999;
        static string BUFF_BASE_STAT_DAMAGE_NAME = "RECENT_DAMAGE";
        static string ANIM_COIN_IN_NAME = "in";
        static string ANIM_IDLE_NAME = "idle";
        static string ANIM_IDLE_UNARM_NAME = "idle_unarmed";
        static string ANIM_IDLE_BDRAGON_SP_03_NAME = "idle_Bdragon_sp_03";
        static string ANIM_MOVE_NAME = "run";
        static string ANIM_MOVE_UNARM_NAME = "run_unarmed";
        static string ANIM_JUMP_NAME = "jump";
        static string ANIM_JUMP_UNARM_NAME = "jump_unarmed";
        static string ANIM_COUNTER_NAME = "cc_counter";
        static string ANIM_STUN_NAME = "cc_stun";
        static string ANIM_STUN_UNARM_NAME = "cc_stun_unarmed";
        static string ANIM_FREEZE_NAME = "cc_freeze";
        static string ANIM_SLEEP_NAME = "cc_sleep";
        static string ANIM_HORROR_NAME = "cc_terror";
        static string ANIM_HORROR_UNARM_NAME = "cc_terror_unarmed";
        static string ANIM_FALL_NAME = "cc_fall";
        static string ANIM_FALL_UNARM_NAME = "cc_fall_unarmed";
        static string ANIM_DEATH_01_NAME = "dead_01";
        static string ANIM_DEATH_02_NAME = "dead_02";
        static string ANIM_DEATH_03_NAME = "dead_03";
        static string ANIM_DEATH_UNARM_NAME = "dead_unarmed";
        static string ANIM_ATK_01_NAME = "atk_01";
        static string ANIM_ATK_02_NAME = "atk_02";
        static string ANIM_SP_01_NAME = "sp_01";
        static string ANIM_SP_02_NAME = "sp_02";
        static string ANIM_SP_03_NAME = "sp_03";
        static string ANIM_ULT_01_NAME = "ult";
        static string ANIM_WIN_NAME = "win";
        static string ANIM_LOSE_NAME = "lose";
        static string ANIM_ATTACK_HIT_NAME = "hit";
        static string ANIM_SPECIAL_SKILL_EFFECT_NAME = "effect";
        static string ANIM_FINISH_NAME = "finish";
        static string ANIM_BONE_HEAD_NAME = "head";
        static string ANIM_BONE_FIRE_NAME = "fire_point";
        static string ANIM_BONE_BODY01_NAME = "body_01";
        static string ANIM_BONE_BODY02_NAME = "body_02";
        static string ANIM_SLOT_CENTER_NAME = "position_center";
        static string ANIM_SLOT_SIDE_NAME = "position_side";
        static string ANIM_EYE_IN_01_SLOT_NAME = "eye_in_01";
        static string ANIM_EYE_IN_02_SLOT_NAME = "eye_in_hit";
        static string ANIM_EYE_IN_02_ATTACH_NAME = "eye_in_hit";
        static string ANIM_EYE_OUT_01_SLOT_NAME = "eye_out_01";
        static string ANIM_EYE_OUT_02_SLOT_NAME = "eye_out_hit";
        static string ANIM_EYE_OUT_02_ATTACH_NAME = "eye_out_hit";
        static string ANIM_MOUTH_01_SLOT_NAME = "mouth_01";
        static string ANIM_MOUTH_02_SLOT_NAME = "mouth_hit";
        static string ANIM_MOUTH_02_ATTACH_NAME = "mouth_hit";
        static string ANIM_EVENT_DISSOLVE_NAME = "dissolve";
        static float ANIM_HIT_ROTATION_DEGREES = 30;
        static float ANIM_HIT_ROTATION_SPEED = 25;
        static AssetBundleType UNIT_POOL_NAME = 20;
        static AssetBundleType PROJECTILE_POOL_NAME = 21;
        static AssetBundleType PARTICLE_POOL_NAME = 22;
        static AssetBundleType PARTICLE_BG_POOL_NAME = 100;
        static AssetBundleType PARTICLE_UI_POOL_NAME = 23;
        static AssetBundleType WORLD_UI_POOL_NAME = 24;
        static AssetBundleType TOOLTIP_UI_POOL_NAME = 25;
        static string UNIT_NAME = "Unit";
        static string UNIT_BOSS_BIG_NAME = "Unit_Boss_Big";
        static string DAMAGE_MARKER_NAME = "DamageMarker";
        static string DROP_COIN_NAME = "DropCoin";
        static string BOSS_DROP_ITEM_NAME = "BossDropItem";
        static string BUFF_ICON_NAME = "BuffIcon";
        static string SUPPORT_CUTSCENE_ALLY_NAME = "SupportCutScene_Ally";
        static string SUPPORT_CUTSCENE_ENEMY_NAME = "SupportCutScene_Enemy";
        static float END_TO_IDLE_DELAY = 2;
        static float START_HAST_DISTANCE_BATTLE = 2;
        static float START_HAST_DISTANCE_DEMO = 2;
        static float PREVIEW_POSX_FACTOR = 2;
        static int ATTACK_AMOUNT_UNLIMITED = -1;
        static float STAMINA_GAIN_SPEED = 0.5;
        static float ATTACKED_GAIN_MP = 0.5;
        static float PROJECTILE_DEFAULT_SPEED = 10;
        static float PROJECTILE_FALLEN_DEFAULT_SPEED = 20;
        static float PROJECTILE_BOMB_DEFAULT_HEIGHT = 3;
        static float PROJECTILE_BOMB_DEFAULT_TIME = 1.5;
        static float PROJECTILE_MAX_DISTANCE = 10;
        static float DEMO_SPAWN_DELAY_TIME_MIN = 5;
        static float DEMO_SPAWN_DELAY_TIME_MAX = 10;
        static int IDLE_SPAWN_MONSTER_AMOUNT_MAX = 4;
        static float START_HAST_IDLE = 50;
        static float START_HAST_DISTANCE_IDLE = 1;
        static float SPAWN_POSX_GAP_MAX = 1.2000000476837158;
        static float BATTLE_AREA_LIMIT_POSX_IDLE = 5;
        static float IDLE_SPAWN_DELAY_TIME_MIN = 0.5;
        static float IDLE_SPAWN_DELAY_TIME_MAX = 3;
        static int DEMO_SPAWN_ALLY_AMOUNT_MAX = 3;
        static int DEMO_SPAWN_ENEMY_AMOUNT_MAX = 4;
        static float HPBAR_POSY_INC = 0.5;
        static float DAMAGE_MARKER_TIME = 0.44999998807907104;
        static float DAMAGE_MARKER_SPEED = 0.699999988079071;
        static /*0x0*/ BattleNameGroup Names;
        static /*0x8*/ BattleConstantsGroup BattleConstants;
        static /*0x10*/ BattleAudioGroup Audios;
        static /*0x18*/ BuffIconNameGroup BuffIconNames;
        static /*0x20*/ IdleConstantsGroup IdleConstants;
        static /*0x28*/ BattleGizmoGroup Gizmos;
        static /*0x30*/ UnityEngine.Vector2 VECTOR2_ZERO;
        static /*0x38*/ UnityEngine.Vector3 COIN_DESTINATION;
        static /*0x44*/ UnityEngine.Vector3 COIN_SCALE_DEFAULT;
        static /*0x50*/ UnityEngine.Vector3 DefaultCharacterScale;
        static /*0x5c*/ UnityEngine.Vector3 WorldBossEvilPetScale;
        static /*0x68*/ UnityEngine.Vector3 DefaultCharacterWorldUICanvasScale;
        static /*0x74*/ UnityEngine.Vector3 DefaultProjectileScale;
        static /*0x80*/ UnityEngine.Color ANIM_SKILL_FADE_COLOR;
        static /*0x90*/ float BATTLE_AREA_LIMIT_POSX_BATTLE;
        static /*0x94*/ float BATTLE_AREA_LIMIT_POSY_UPPER_BATTLE;
        static /*0x98*/ float BATTLE_AREA_LIMIT_POSY_UNDER_BATTLE;
        static /*0x9c*/ Battle.ColliderData PROJECTILE_DEFAULT_COLLIDER;
        static /*0xa8*/ Battle.ColliderData COLLIDER_NULL;
        static /*0xb4*/ Battle.ColliderData COLLIDER_INFINITE;
        static /*0xc0*/ UnityEngine.Vector2 WORLDBOSS_POSITION;
        static /*0xc8*/ UnityEngine.Vector2 WORLDBOSS_PLAYER_AREA_CENTER_POSITION;
        static /*0xd0*/ UnityEngine.Vector2 WORLDBOSS_NEAR_ATTACK_COLLIDER_POS;
        static /*0xd8*/ UnityEngine.Vector2 WORLDBOSS_FAR_ATTACK_COLLIDER_POS;
        static /*0xe0*/ Battle.ColliderData WORLDBOSS_NEAR_ATTACK_COLLIDER;
        static /*0xec*/ Battle.ColliderData WORLDBOSS_FAR_ATTACK_COLLIDER;
        static /*0xf8*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV1_1;
        static /*0x100*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV1_2;
        static /*0x108*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV2_1;
        static /*0x110*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV2_2;
        static /*0x118*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV2_3;
        static /*0x120*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV1_1;
        static /*0x128*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV1_2;
        static /*0x130*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV1_3;
        static /*0x138*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_1;
        static /*0x140*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_2;
        static /*0x148*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_3;
        static /*0x150*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_4;
        static /*0x158*/ float DEFAULT_CAMERA_RATIO;
        static /*0x15c*/ UnityEngine.Vector3 SKILL_UI_UP_VECTOR;
        static /*0x168*/ float GW_TimeLimit;
        static /*0x16c*/ float GW_SupportorCooltime;
        static /*0x170*/ float GW_CCTimeMult;
        static /*0x174*/ float GW_SupportAddMPPerSecond;
        static /*0x178*/ int PveRanking_LimitTime;
        static /*0x17c*/ float UnlockCP_Arena;
        static /*0x180*/ float UnlockCP_WorldArena;
        static /*0x184*/ float MonsterCharRate;
        static /*0x188*/ float UnlockCP_PveRanking;

        static /*0x10e9e4c*/ Constants();
        static /*0x10e9650*/ void Initialize();
        static /*0x10e9cbc*/ int get_MAX_HP_RATIO();
        static /*0x10e9d20*/ int get_MAX_MP_RATIO();
        static /*0x10e9d84*/ float get_MULT_HP_RATIO();
        static /*0x10e9de8*/ float get_MULT_MP_RATIO();
    }

    enum GameModeType
    {
        NONE = 0,
        CAMPAIN = 1,
        DEMO = 2,
        DPS = 3,
        IDLE = 4,
        TOWER = 5,
        TOWER_FACTION = 6,
        ARENA = 7,
        ARENA_HIGH = 8,
        MAZE = 9,
        FRIEND_BATTLE = 10,
        GUILD_WAR = 11,
        GUILD_HUNT = 12,
        DUNGEON = 13,
        WORLDBOSS = 14,
        PVE_RANKING = 15,
        LAST = 16,
    }

    enum BattleStateType
    {
        NONE = 0,
        NORMAL = 1,
        NORMAL_NO_TROOP = 2,
        REPLAY_SELECT = 3,
        REPLAY_CURRENT = 4,
        REPLAY_VERIFY = 5,
        CUSTOM = 6,
        TUTORIAL = 7,
    }

    enum StageBattleType
    {
        NONE = 0,
        NORMAL = 1,
        BOSS = 2,
        IDLE = 3,
        TOWER = 4,
        GUILDBOSS = 5,
        WORLDBOSS = 6,
        LAST = 7,
    }

    enum BattleSpeedType
    {
        TOGGLE_FAST_X2 = 0,
        TOGGLE_FAST_X3 = 1,
        TOGGLE_FAST_X4 = 2,
        IDLE = 3,
        NORMAL = 4,
        FAST_X2 = 5,
        FAST_X3 = 6,
        FAST_X4 = 7,
    }

    enum InGameStateType
    {
        NONE = 0,
        INITIALIZE = 1,
        READY = 2,
        PREVIEW = 3,
        PLAY = 4,
        PLAY_DPS = 5,
        PLAY_DEMO = 6,
        PLAY_VERIFY = 7,
        IDLE = 8,
        PAUSE = 9,
        PAUSE_SKILL = 10,
        GAMEOVER = 11,
        GAMEOVER_VERIFY = 12,
        WORLDBOSS_PREV = 13,
        LAST = 14,
    }

    enum InGameStateMethodType
    {
        FIRST = 0,
        START_01 = 1,
        START_02 = 2,
        START_03 = 3,
        START_LAST = 4,
        UPDATE_FIRST = 5,
        UPDATE = 6,
        UPDATE_LAST = 7,
        UPDATE_SYNC_READY = 8,
        UPDATE_SYNC_1 = 9,
        UPDATE_SYNC_2 = 10,
        UPDATE_SYNC_3 = 11,
        UPDATE_SYNC_4 = 12,
        UPDATE_SYNC_5 = 13,
        UPDATE_SYNC_LAST = 14,
        EXIT_FIRST = 15,
        EXIT = 16,
        EXIT_LAST = 17,
        LAST = 18,
    }

    enum BuffConditionType
    {
        NONE = 0,
        CHANCE = 1,
        HP_LOWER = 2,
        CRITICAL = 3,
    }

    enum BuffTargetType
    {
        NONE = 0,
        SELF = 1,
        TARGET = 2,
        HIT = 3,
    }

    enum CharacterFlag
    {
        NONE = 0,
        PLAYER = 1,
        DEATH = 2,
        MAIN_IDLE = 4,
        SKILL_ULT = 8,
        PAUSED = 16,
        VICTORY = 32,
        DEFEAT = 64,
        EMPTY01 = 128,
        SYNCTOOL_ONLY = 256,
        UNIT_MAIN = 512,
        NO_EQUIP = 1024,
        DEATH_REMOVE = 2048,
        NO_STATUSBAR = 4096,
        REPLAY = 8192,
        EMPTY02 = 16384,
        START = 32768,
        SUMMONER_DEMO = 65536,
        SUMMONER = 131072,
        KNOCKBACK = 262144,
        GAMEEND = 524288,
        LAST = 512,
    }

    enum BuffFlag
    {
        NONE = 0,
        DEBUFF = 1,
        INVINCIBLE = 2,
        INVISIBLE = 4,
        HORROR = 8,
        LAUNCH = 16,
        SILENCE = 32,
        FALL = 64,
        NO_EQUIP = 128,
        NO_LESS_HP = 256,
        SHIELD = 512,
        STUN = 1024,
        DARKNESS = 2048,
        DOT_DAMAGE = 4096,
        BUFF = 8192,
        BLIND = 16384,
        CHARM = 32768,
        PROVOKE = 65536,
        FREEZE = 131072,
        SLEEP = 262144,
        NO_SKILL = 524288,
        BLOOD = 1048576,
        EMPTY1 = 2097152,
        EMPTY2 = 4194304,
        EMPTY3 = 8388608,
        EMPTY4 = 16777216,
        EMPTY5 = 33554432,
        EMPTY6 = 67108864,
        EMPTY7 = 134217728,
        EMPTY8 = 268435456,
        EMPTY9 = 536870912,
        EMPTY10 = 1073741824,
    }

    enum StateFlag
    {
        NONE = 0,
        StateEnable = 1,
        RecursiveEnable = 2,
        Skill = 4,
        SpecialSkill = 8,
        DefaultAttack = 16,
        UnderControl = 32,
    }

    enum BuffEffectType
    {
        NONE = 0,
        STAT = 1,
        STAT_HOUSING = 2,
        STAT_HOUSING_MAX = 3,
        CHARM = 4,
        CHARM_ENABLE_ULT = 5,
        SLEEP = 6,
        HORROR = 7,
        HORROR_P2 = 8,
        LAUNCH = 9,
        LAUNCH_KNOCKBACK = 10,
        FALL = 11,
        STUN = 12,
        FREEZE = 13,
        BLIND = 14,
        SILENCE = 15,
        DARKNESS = 16,
        PROVOKE = 17,
        PROVOKE_TARGET = 18,
        NOSKILL = 19,
        NOSKILL_ENABLE_ATK = 20,
        NOSKILL_ULT = 21,
        NOSKILL_PASSIVE = 22,
        NOEQUIP = 23,
        NOLESSHP = 24,
        INVISIBLE = 25,
        INVINCIBLE = 26,
        INVINCIBLE_COLOR = 27,
        IMMUNE_DEBUFF = 28,
        IMMUNE_CC = 29,
        IMMUNE_CC_GUILDBOSS = 30,
        IMMUNE_KNOCKBACK = 31,
        IMMUNE_HP_DAMAGE = 32,
        CHANGE_BUFF = 33,
        CHANGE_BUFF_OWNER = 34,
        SHIELD = 35,
        SHIELD_SLIME = 36,
        SHIELD_BABA = 37,
        SHIELD_BABA_SIG = 38,
        SHIELD_RDRAGON_SIG = 39,
        SHIELD_FIANCE_SIG = 40,
        SHIELD_AMOUNT_PARAM0 = 41,
        ADDBUFF_LESSHP = 42,
        ADDBUFF_HIT = 43,
        ADDBUFF_ATTACK = 44,
        ADDBUFF_CRITICAL = 45,
        ADDBUFF_DODGE = 46,
        ADDBUFF_RENEW_P2 = 47,
        ADDMP = 48,
        MULT_HIT_DAMAGE = 49,
        MULT_HIT_DAMAGE_ATTACKTYPE = 50,
        RELEASE_DAMAGE_MAGIC = 51,
        RELEASE_BUFF = 52,
        RELEASE_BUFF_P2 = 53,
        RELEASE_BUFF_CASTER = 54,
        RELEASE_BUFF_REMOVED = 55,
        RELEASE_BUFF_REMOVED_P2 = 56,
        RELEASE_ADDMP = 57,
        RELEASE_ADDMP_P2 = 58,
        RELEASE_DEATH = 59,
        RESTORE_HP = 60,
        RESTORE_HP_P2 = 61,
        RESTORE_MP = 62,
        RESTORE_HP_MP = 63,
        ICE_FROST = 64,
        ICE_FREEZE = 65,
        REDHOOD_MARK = 66,
        REDHOOD_BLOOD = 67,
        FLOWER_PROVOKE_TARGET = 68,
        RENEW_KILL = 69,
        MULT_DAMAGE_CRITICAL = 70,
        MULT_DAMAGE_BLOOD = 71,
        MULT_MPPAY = 72,
        MULT_COOLTIME = 73,
        MULT_COOLTIME_P3 = 74,
        DOT_DAMAGE = 75,
        DOT_DAMAGE_PERHP = 76,
        DOT_DAMAGE_PERHP_P2 = 77,
        DOT_MP = 78,
        DOT_MP_P3 = 79,
        BLOOD = 80,
        BLOOD_PERHP = 81,
        BURN = 82,
        STACK_ADD = 83,
        STACK_CHANGE = 84,
        REFLECTION = 85,
        SACRIFICE = 86,
        IGNORE_DAMAGE_PERHP = 87,
        AVOID_MAGICAL = 88,
        BOSS_STACK_GUILD = 89,
        PIRATE_MARK = 90,
        SPADE = 91,
        HEART = 92,
        CLOVER = 93,
        DIAMOND = 94,
        BABA_DOTHEAL = 95,
        CRUSADER_REVENGE = 96,
        LADYDEATH_DEBUFF = 97,
        LADYDEATH_HORROR = 98,
        DARKELF_BLOOD = 99,
        DARKELF_MARK = 100,
        DARKELF_BIND = 101,
        NUN_RELOAD = 102,
        COOK_BUFF = 103,
        COOK_DOTHEAL = 104,
        COOK_FOOD = 105,
        FIANCE_THORN = 106,
        FIANCE_REFLECTION = 107,
        FIANCE_SIG_REFLECTION = 108,
        RABBIT_CRITICAL = 109,
        RABBIT_SIG_INVISIBLE = 110,
        SWORDCAT_DODGE = 111,
        FLOWER_SEED = 112,
        MIDDLE_MULT_HIT_DAMAGE = 113,
        BDRAGON_DOT_MP = 114,
        QUEEN_MARK = 115,
        QUEEN_BUFF_NOLIMIT_KILLS = 116,
        QUEEN_SLOW = 117,
        REDHEAD_HORROR = 118,
        ASS_MARK = 119,
        RDRAGON_MARK = 120,
        AKIMBO_CRITICAL = 121,
        AKIMBO_MAGNUM = 122,
        AKIMBO_MAGAZINE = 123,
        GDRAGON_RAGE = 124,
        MIKO_DEFDOWN = 125,
        MIKO_SLEEP = 126,
        SUGAR_POWDER = 127,
        SUGAR_DOTHEAL = 128,
        WATER_BLOOD_MULT = 129,
        WATER_FREEZE = 130,
        GUITAR_BROKEN = 131,
        SABRE_SENTENCE = 132,
        CLERIC_RETREAT = 133,
        PARU_DOTHEAL = 134,
        PARU_DEFENSE_MISS = 135,
        PARU_DEFENSE_CC = 136,
        PAJAMA_SMILE = 137,
        EVILPET_REFLECTION = 138,
        EVILPET_DELAY = 139,
        GAMBLER_CHARM = 140,
        BULLYGIRL_SHIELD = 141,
        MIDNIGHT_MARK = 142,
    }

    enum SkillSlotType
    {
        ATK = 0,
        ULT = 1,
        SP01 = 2,
        SP02 = 3,
        SP03 = 4,
    }

    enum BuffIconID
    {
        NONE = 0,
        Bleeding1_Debuffs = 1,
    }

    enum DamageMarkType
    {
        NONE = 0,
        MARK = 1,
        MARK_CRITICAL = 2,
    }

    enum StateRecursiveType
    {
        NONE = 0,
        ENABLE = 1,
        DISENABLE = 2,
    }

    enum PassiveConditionType
    {
        NONE = 0,
        START = 1,
        COOLDOWN = 2,
        DEATH = 3,
        DEATH_TARGET_ATTACKER = 4,
        FREE = 5,
        NOTFREE = 6,
        KILL = 7,
        HP_UNDER = 8,
        HP_OVER = 9,
        HP_CHANGE_UNDER = 10,
        HP_CHANGE_OVER = 11,
        HP_EVILPET = 12,
        HP_RABBIT = 13,
        CHANCE = 14,
        ALTERNATIVE = 15,
        SKILLCHANGE = 16,
        CHANGE_FX = 17,
        DEADSUMMON = 18,
        DEADALLYSUMMON = 19,
        DAMAGE = 20,
        DAMAGE_CHANCE = 21,
        ATTACK = 22,
        ATTACK_SKILLFX = 23,
        USESKILL = 24,
        SLOTSKILL = 25,
        START_SKILLFX = 26,
        DEADALLY = 27,
        DODGE = 28,
        CRITICAL = 29,
        BUFFEXIST = 30,
        BUFFEND = 31,
        ADDFX = 32,
        ADDBUFF_CC = 33,
        HITBUFF_CC = 34,
        SHP = 35,
        SABRE_LAUNCH = 36,
        CLERIC_RETREAT = 37,
        DEATHSCYTHE_SIG_DEATH = 38,
        PAJAMA_INVISIBLE = 39,
        BULLYGIRL_SIG_SHIELD_REMOVED = 40,
        LADYDEATH_SLOTSKILL = 41,
        REDHOOD_NOTFREE = 42,
        SHAMAN_HORROR = 43,
    }

    enum BuffType
    {
        NONE = 0,
        BUFF = 1,
        DEBUFF = 2,
    }

    enum ShieldType
    {
        NONE = 0,
        ALL = 1,
        PHYSICAL = 2,
        MAGICAL = 3,
    }

    enum Direction
    {
        NONE = 0,
        LEFT = 1,
        RIGHT = 2,
        SIDE = 3,
    }

    enum TargetType1
    {
        NONE = 0,
        ALLY = 1,
        ALLY_ALL = 2,
        SELF = 3,
        ENEMY = 4,
    }

    enum TargetType2
    {
        NULL = 0,
        PHYSICAL = 1,
        MAGICAL = 2,
    }

    enum TargetType3
    {
        NONE = 0,
        TARGET = 1,
        TARGET_PASSIVE = 2,
        CENTER = 3,
        RANDOM = 4,
        NEAR = 5,
        NEAR_FRONT = 6,
        NEAR_CENTER = 7,
        NEAR_ALLY = 8,
        FAR = 9,
        STRONG = 10,
        WEAK = 11,
        MAX_ATK = 12,
        MAX_DEF = 13,
        MAX_MP = 14,
        MAX_HP = 15,
        MAX_HP_RATIO = 16,
        MAX_BUFF_CC = 17,
        MIN_ATK = 18,
        MIN_HP = 19,
        MIN_HP_RATIO = 20,
        MIN_DEF = 21,
        MIN_TOTALHP = 22,
        MAX_TOTALHP = 23,
        NEXT = 24,
    }

    enum TargetPosType
    {
        CENTER = 0,
        SIDE = 1,
    }

    enum ColliderType
    {
        CIRCLE = 0,
        RECTANGLE = 1,
    }

    enum SkillType
    {
        DEFAULT = 0,
        NORMAL = 1,
        SPECIAL = 2,
        SIGNATURE = 3,
    }

    enum ActiveType
    {
        ACTIVE = 0,
        PASSIVE = 1,
    }

    enum AttackType
    {
        NONE = 0,
        PHYSICAL = 1,
        MAGICAL = 2,
        HEAL = 3,
    }

    enum Hit_WpnType
    {
        NONE = 0,
        HIT_BLADE = 1,
        HIT_BLADE_C = 2,
        HIT_BLUNT = 3,
        HIT_BLUNT_C = 4,
        HIT_STAB = 5,
        HIT_STAB_C = 6,
        HIT_BULLET = 7,
        HIT_BULLET_C = 8,
        HIT_MAGIC = 9,
        HIT_MAGIC_C = 10,
        HIT_EXPLS = 11,
        HIT_ICE = 12,
        HIT_SHIELD = 13,
        HIT_HEAL = 14,
        HIT_BUFF = 15,
        HIT_DEBUFF = 16,
    }

    enum RangePositionType
    {
        SELF = 0,
        SELF_FIREPOINT = 1,
        TARGET = 2,
        TARGET_FORWARD = 3,
        TARGET_BACKWARD = 4,
        CENTER = 5,
    }

    enum RangeDirectionType
    {
        FORWARD = 0,
        ALL = 1,
    }

    enum UnitListType
    {
        UNIT_ALL_CURRENT = 0,
        UNIT_ALLIES_CURRENT = 1,
        UNIT_ENEMIES_CURRENT = 2,
        UNIT_ALL_MAIN = 3,
        UNIT_ALLIES_MAIN = 4,
        UNIT_ENEMIES_MAIN = 5,
    }

    enum UnitShaderType
    {
        ORIGINAL = 0,
        DISSOLVE = 1,
        LAST = 2,
    }

    enum BonePositionType
    {
        CENTER = 0,
        ROOT = 1,
        HEAD = 2,
        FIREPOINT = 3,
    }

    enum EffectTargetType
    {
        SELF = 0,
        TARGET = 1,
        COLLISION = 2,
        CENTER = 3,
    }

    enum EffectOwnerType
    {
        NONE = 0,
        CASTER = 1,
        TARGET = 2,
    }

    enum BuffOriginType
    {
        OWNER = 0,
        CASTER = 1,
        STAT_OWNER_SHIELD_CASTER = 2,
        STAT_CASTER_SHIELD_OWNER = 3,
    }

    enum BattleGraphType
    {
        NONE = 0,
        DAMAGE = 1,
        HEAL = 2,
        HIT = 3,
        KILL = 4,
    }

    enum BuffIconType
    {
        NONE = 0,
        ATK = 1,
        HP = 2,
        DEF = 3,
        MPPAY = 4,
        CRI = 5,
        CDMG = 6,
        HAST = 7,
    }

    enum HousingBuffParamType
    {
        HP = 0,
        MPR = 1,
        ATK = 2,
        DEF = 3,
        MR = 4,
        PCRI = 5,
        MCRI = 6,
        DODG = 7,
        SPD = 8,
        HAST = 9,
        ACC = 10,
        RGHP = 11,
        PRDC = 12,
        MRDC = 13,
        SHP = 14,
        PARAM1 = 15,
        PARAM2 = 16,
        PARAM3 = 17,
        PARAM4 = 18,
        LENGTH = 19,
    }

    class SkillEnumGroup
    {
        /*0x10*/ Battle.RangePositionType rangePOSType;
        /*0x14*/ Battle.RangeDirectionType rangeDIRType;
        /*0x18*/ Battle.CharacterStat.StatType COEFType;
        /*0x1c*/ Battle.TargetType1 targetType1;
        /*0x20*/ Battle.TargetType2 targetType2;
        /*0x24*/ Battle.TargetType3 targetType3;
        /*0x28*/ Battle.Hit_WpnType hitWeaponType;
        /*0x2c*/ Battle.ColliderType rangeColliderType;
        /*0x30*/ Battle.SkillFXType skillFXType;
        /*0x34*/ Battle.BuffConditionType buffConditionType;
        /*0x38*/ Battle.BuffTargetType buffTargetType;

        /*0x1510d70*/ SkillEnumGroup(Battle.RangePositionType _eRangePOSType, Battle.RangeDirectionType _eRangeDIRType, Battle.CharacterStat.StatType _eCOEFType, Battle.TargetType1 _eTargetType1, Battle.TargetType2 _eTargetType2, Battle.TargetType3 _eTargetType3, Battle.Hit_WpnType _eHitWeaponType, Battle.ColliderType _eRangeColliderType, Battle.SkillFXType _eSkillFXType, Battle.BuffConditionType _eBuffConditionType, Battle.BuffTargetType _eBuffTargetType);
    }

    struct ColliderData
    {
        /*0x10*/ Battle.ColliderType Type;
        /*0x14*/ float X;
        /*0x18*/ float Y;

        static /*0x10dfa74*/ Battle.ColliderData get_NullCollider();
        static /*0x10dfadc*/ Battle.ColliderData get_InfiniteCollider();
        static /*0x10dfc2c*/ bool op_Equality(Battle.ColliderData _a, Battle.ColliderData _b);
        static /*0x10dfc68*/ bool op_Inequality(Battle.ColliderData _a, Battle.ColliderData _b);
        /*0xa8a6ec*/ ColliderData(Battle.ColliderType _type, float _lengthX, float _lengthY);
        /*0xa8a6f8*/ bool IsColliderNull();
        /*0xa8a700*/ bool Equals(object obj);
        /*0xa8a708*/ bool Equals(Battle.ColliderData _sCollider);
        /*0xa8a744*/ int GetHashCode();
    }

    struct DamageResult
    {
        /*0x10*/ bool isKill;
        /*0x11*/ bool isCritical;
        /*0x14*/ float damage;

        static /*0xf5cc94*/ Battle.DamageResult get_NoDamage();
        static /*0xf5ccb4*/ Battle.DamageResult op_Addition(Battle.DamageResult A, Battle.DamageResult B);
        /*0xa854a8*/ DamageResult(bool _bKill, bool _bCritical, float _fDamage);
    }

    enum StatTransferFlag
    {
        NONE = 0,
        IGNORE_SHIELD = 1,
        ADD_DAMAGE = 2,
        IGNORE_DEF = 3,
    }

    struct StatTransfer
    {
        /*0x10*/ Battle.AttackType AttackType;
        /*0x14*/ Battle.Hit_WpnType HitWeaponType;
        /*0x18*/ float ACC;
        /*0x1c*/ float Damage;
        /*0x20*/ float DamageMULT_ForStageData;
        /*0x24*/ float CRI;
        /*0x28*/ float CRIMult;
        /*0x2c*/ float MPPAY;
        /*0x30*/ int FactionID;
        /*0x34*/ int SkillID;
        /*0x38*/ Battle.StatTransferFlag flag;
        /*0x3c*/ float DamageMult;

        static /*0xc9a798*/ Battle.StatTransfer GetHealStat(float _fHealAmount, float _fDamageMult);
        /*0xa382cc*/ StatTransfer(Battle.AttackType _eAttackType, float _fDamage, float _fDamageMULT, Battle.Hit_WpnType _eWeaponType);
        /*0xa382ec*/ StatTransfer(Battle.AttackType _eAttackType, float _fDamage, int _nFactionID, int _nSkillID);
        /*0xa38308*/ StatTransfer(Battle.AttackType _eAttackType, float _fACC, float _fDamage, float _fDamageMULT, float _fCRI, float _fCRIMULT, float _fMPPAY, int _nFationID, int _nSkillID, Battle.Hit_WpnType _eWeaponType);
        /*0xa38324*/ void SetFlag(Battle.StatTransferFlag _flag, bool _boolean);
        /*0xa38350*/ bool FlagEquals(Battle.StatTransferFlag _flag);
        /*0xa38360*/ void ClearFlag();
    }

    class CharacterStat
    {
        /*0x10*/ float HP;
        /*0x14*/ float HP_P;
        /*0x18*/ float MP;
        /*0x1c*/ float MPR;
        /*0x20*/ float ATK;
        /*0x24*/ float ATK_P;
        /*0x28*/ float DEF;
        /*0x2c*/ float DEF_P;
        /*0x30*/ float MR;
        /*0x34*/ float MR_P;
        /*0x38*/ float PCRI;
        /*0x3c*/ float MCRI;
        /*0x40*/ float DODG;
        /*0x44*/ float SPD;
        /*0x48*/ float HAST;
        /*0x4c*/ float ACC;
        /*0x50*/ float RGHP;
        /*0x54*/ float PRDC;
        /*0x58*/ float MRDC;
        /*0x5c*/ float SHP;
        /*0x60*/ float PCRIR;
        /*0x64*/ float MCRIR;
        /*0x68*/ float CRIDMG;
        /*0x6c*/ float CRIDMGR;
        /*0x70*/ float CCR;

        static /*0x1324bc8*/ Battle.CharacterStat op_Addition(Battle.CharacterStat _statA, Battle.CharacterStat _statB);
        static /*0x1324dec*/ Battle.CharacterStat op_Subtraction(Battle.CharacterStat _statA, Battle.CharacterStat _statB);
        static /*0x1325010*/ Battle.CharacterStat GetDefaultStat(PTShare.Define.SHero _hero);
        static /*0x1325054*/ Battle.CharacterStat GetDefaultStat(int _nUnitID, int _nUnitLV, int _nUnitGrade, int _nUnitTier);
        static /*0x1325114*/ Battle.CharacterStat GetDefaultStat(TableData.TableData_Unitbase _base, TableData.TableData_Unitlv _lv, TableData.TableData_Unitgrade _grade, TableData.TableData_Unittier _tier, TableData.TableData_Basic _basic);
        static /*0x13254e0*/ Battle.CharacterStat GetRelationStat(int nLevel, TableData.TableData_Relation relation);
        static /*0x1325c60*/ Battle.CharacterStat GetFurnitureStat(TableData.TableData_Furnitureheroeffect furnitureStat);
        static /*0x1326084*/ Battle.CharacterStat GetAbilityStat(System.Collections.Generic.List<int> _lisAbilityIndex, int _nUnitLevel, int _nSignatureLevel);
        static /*0x13269a4*/ Battle.CharacterStat GetBonusStat(int nUnitID, int nUnitLv, PTShare.Define.SStatBonus bonus);
        static /*0x1326f8c*/ Battle.CharacterStat GetEquipmentStat(int _nEquipmentID, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x1326fbc*/ Battle.CharacterStat GetEquipmentStat(TableData.TableData_Equipment _equipment, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x1327030*/ long GetEquipmentCP(int _nEquipmentID, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x1327060*/ long GetEquipmentCP(TableData.TableData_Equipment _equipment, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x13272e0*/ long GetRaiseTrainingStatCP(Battle.CharacterStat.StatType type);
        static /*0x1327420*/ bool GetReadySmartEquip(int _nEquipmentID, int _nEquipmentLV, bool _bFactionBonus, int _factionId);
        static /*0x132786c*/ Battle.CharacterStat PercentageToNormalStat(Battle.CharacterStat _baseStat, Battle.CharacterStat _percentageStat);
        static /*0x132795c*/ Battle.CharacterStat op_Multiply(Battle.CharacterStat _stat, float _fMultValue);
        /*0x13241bc*/ CharacterStat();
        /*0x13241c4*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP);
        /*0x13242c0*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP, float _PCRIR, float _MCRIR, float _CRIDMG, float _CRIDMGR, float _CCR);
        /*0x1324408*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP, float _HP_P, float _ATK_P, float _DEF_P, float _MR_P);
        /*0x1324524*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP, float _PCRIR, float _MCRIR, float _CRIDMG, float _CRIDMGR, float _CCR, float _HP_P, float _ATK_P, float _DEF_P, float _MR_P);
        /*0x132468c*/ CharacterStat(TableData.TableData_Unitbase _UnitBaseData);
        /*0x1324750*/ CharacterStat(TableData.TableData_Unitlv _UnitLVData);
        /*0x13247d8*/ CharacterStat(TableData.TableData_Unitgrade _UnitGradeData);
        /*0x1324860*/ CharacterStat(TableData.TableData_Unittier _UnitTierData);
        /*0x13248e8*/ CharacterStat(TableData.TableData_Basic _BalanceData);
        /*0x13249e4*/ CharacterStat(TableData.TableData_Equipment _EquipmentData, int _nEquipmentLV, bool _bFactionBonus);
        /*0x1324730*/ void InitStat();
        /*0x1327698*/ float GetStat(Battle.CharacterStat.StatType _eStatType);
        /*0x13270dc*/ long GetCP();
        /*0x1327760*/ float GetValue(Battle.CharacterStat.StatType eType);

        enum StatType
        {
            NONE = 0,
            HP = 1,
            MP = 2,
            MPR = 3,
            ATK = 4,
            DEF = 5,
            MR = 6,
            PCRI = 7,
            MCRI = 8,
            DODG = 9,
            SPD = 10,
            HAST = 11,
            ACC = 12,
            RGHP = 13,
            PRDC = 14,
            MRDC = 15,
            SHP = 16,
            HP_P = 17,
            ATK_P = 18,
            DEF_P = 19,
            MR_P = 20,
            PCRIR = 21,
            MCRIR = 22,
            CRIDMG = 23,
            CRIDMGR = 24,
            CCR = 25,
            END = 26,
        }

        class <>c__DisplayClass45_0
        {
            /*0x10*/ TableData.TableData_Relation relation;

            /*0xdad374*/ <>c__DisplayClass45_0();
            /*0xdad37c*/ bool <GetBonusStat>b__0(PTShare.Define.SRelationMini x);
        }
    }

    struct ProjectileBoneType
    {
        static /*0x100f684*/ string TypeToString(Battle.BonePositionType eType);
        static /*0x100f778*/ Battle.BonePositionType TypeToEnum(string sType);
    }

    struct EffectTargetTypeConverter
    {
        static /*0x14b8e74*/ string TypeToString(Battle.EffectTargetType eType);
        static /*0x14b8f68*/ Battle.EffectTargetType TypeToEnum(string sType);
    }

    struct EffectOwnerTypeConverter
    {
        static /*0x14b8cb8*/ string TypeToString(Battle.EffectOwnerType eType);
        static /*0x14b8dac*/ Battle.EffectOwnerType TypeToEnum(string sType);
    }

    struct UnitShaderInfo
    {
        static /*0x10c22c8*/ string TypeToString(Battle.UnitShaderType eType);
        static /*0x10c23bc*/ Battle.UnitShaderType TypeToEunm(string sType);
    }

    class HeroSelectValue
    {
        /*0x10*/ int HeroID;
        /*0x18*/ long PlayerID;

        static /*0x1233100*/ Battle.HeroSelectValue StringToValue(string _sStr);
        /*0x1233024*/ HeroSelectValue(int _nHeroID);
        /*0x1233054*/ HeroSelectValue(int _nHeroID, long _nPlayerID);
        /*0x1233090*/ string ToString();
    }

    struct SoundDelayInfo
    {
        /*0x10*/ AssetBundleType <eAssetBundleType>k__BackingField;
        /*0x18*/ string <sSoundName>k__BackingField;
        /*0x20*/ bool <bLoop>k__BackingField;

        /*0xa99c90*/ SoundDelayInfo(AssetBundleType _eAssetBundleType, string _sSoundName, bool _bLoop);
        /*0xa99c5c*/ AssetBundleType get_eAssetBundleType();
        /*0xa99c64*/ void set_eAssetBundleType(AssetBundleType value);
        /*0xa99c6c*/ string get_sSoundName();
        /*0xa99c74*/ void set_sSoundName(string value);
        /*0xa99c7c*/ bool get_bLoop();
        /*0xa99c84*/ void set_bLoop(bool value);
    }

    class BattleGraphValue
    {
        /*0x10*/ double TotalDamage;
        /*0x18*/ double TotalHit;
        /*0x20*/ double TotalHeal;
        /*0x28*/ int Kills;
        /*0x30*/ string skinName;
        /*0x38*/ int unitID;
        /*0x3c*/ int factionID;
        /*0x40*/ int level;
        /*0x44*/ int grade;

        /*0xe2f65c*/ BattleGraphValue();
        /*0xe2f664*/ BattleGraphValue(Battle.BattleGraphValue _graph);
        /*0xe2f634*/ void Init(double _dDamage, double _dHit, double _dHeal, string _sSkinName, int _nUnitID, int _nFactionID, int _nLevel, int _nGrade);
        /*0xe2f64c*/ void UpdateUnitInfo(string _sSkinName, int _nUnitID, int _nFactionID, int _nLevel, int _nGrade);
    }

    class HousingFactionBuffParamData
    {
        static int PARAM_LENGHTH = 2;
        /*0x10*/ string[] paramTypes;
        /*0x18*/ float[] paramValues;

        static /*0x131537c*/ Battle.HousingFactionBuffParamData op_Addition(Battle.HousingFactionBuffParamData a, Battle.HousingFactionBuffParamData b);
        /*0x131524c*/ HousingFactionBuffParamData(string _paramType1, float _paramValue1, string _paramType2, float _paramValue2);
    }

    enum UnitNameID
    {
        NONE = 0,
        REDEYE = 1,
        PLUMEHAT = 2,
        BROWNPONY = 3,
        CARROT = 4,
        SKYBLUE = 5,
        GOLDSHIELD = 6,
        MONK = 7,
        REDHOOD = 8,
        HIGHELF = 9,
        BULLYGIRL = 10,
        BLACKSMITH = 11,
        PIRATE = 12,
        GAMBLER = 13,
        BABA = 14,
        CRUSADER = 15,
        JUNGLE = 16,
        LADYDEATH = 17,
        DARKELF = 18,
        NUN = 19,
        ICE = 20,
        COOK = 21,
        FIANCE = 22,
        ALCHEMY = 23,
        RABBIT = 24,
        SWORDCAT = 25,
        FLOWER = 26,
        MIDDLE = 27,
        BDRAGON = 28,
        QUEEN = 29,
        GDRAGON = 30,
        REDHEAD = 31,
        DUALCROSS = 32,
        ASS = 33,
        FOXY = 34,
        PRIEST = 35,
        MIKO = 36,
        RDRAGON = 37,
        AKIMBO = 38,
        SUGAR = 39,
        WATER = 40,
        GUITAR = 41,
        HARP = 42,
        DEATHSCYTHE = 43,
        SABRE = 44,
        TULU = 45,
        GOM = 46,
        CLERIC = 47,
        FLORA = 48,
        PARU = 49,
        BREEZE = 50,
        PAJAMA = 51,
        MIDNIGHT = 52,
        LAMPLIGHT = 53,
        IDOL = 54,
        DARKTEMPLAR = 55,
        TAILOR = 56,
        SHAMAN = 57,
        SLIME_HERO_01 = 901,
        SLIME_HERO_02 = 902,
        SLIME_HERO_03 = 903,
        SLIME_HERO_04 = 904,
        SLIME_HERO_05 = 905,
        SLIME_HERO_06 = 906,
        LAST_HERO = 907,
        START_MONSTER = 1000,
        SLIME_01 = 1001,
        SLIME_02 = 1002,
        SLIME_03 = 1003,
        SLIME_04 = 1004,
        SLIME_05 = 1005,
        SLIME_06 = 1006,
        MUSHROOM_01 = 1007,
        MUSHROOM_02 = 1008,
        MUSHROOM_03 = 1009,
        MUSHROOM_04 = 1010,
        MUSHROOM_05 = 1011,
        MUSHROOM_06 = 1012,
        LAST_MONSTER = 1013,
        START_HERO_MONSTER = 2000,
        REDEYE_H = 2001,
        PLUMEHAT_H = 2002,
        BROWNPONY_H = 2003,
        CARROT_H = 2004,
        SKYBLUE_H = 2005,
        GOLDSHIELD_H = 2006,
        MONK_H = 2007,
        REDHOOD_H = 2008,
        HIGHELF_H = 2009,
        BULLYGIRL_H = 2010,
        BLACKSMITH_H = 2011,
        PIRATE_H = 2012,
        GAMBLER_H = 2013,
        BABA_H = 2014,
        JUNGLE_H = 2015,
        LADYDEATH_H = 2016,
        DARKELF_H = 2017,
        NUN_H = 2018,
        FIANCE_H = 2019,
        ALCHEMY_H = 2020,
        RABBIT_H = 2021,
        SWORDCAT_H = 2022,
        FLOWER_H = 2023,
        MIDDLE_H = 2024,
        BDRAGON_H = 2025,
        QUEEN_H = 2026,
        REDHEAD_H = 2027,
        DUALCROSS_H = 2028,
        ASS_H = 2029,
        FOXY_H = 2030,
        PRIEST_H = 2031,
        MIKO_H = 2032,
        RDRAGON_H = 2033,
        SUGAR_H = 2034,
        WATER_H = 2035,
        GUITAR_H = 2036,
        HARP_H = 2037,
        DEATHSCYTHE_H = 2038,
        SABRE_H = 2039,
        TULU_H = 2040,
        GOM_H = 2041,
        CLERIC_H = 2042,
        FLORA_H = 2043,
        PARU_H = 2044,
        BREEZE_H = 2045,
        PAJAMA_H = 2046,
        MIDNIGHT_H = 2047,
        LAMPLIGHT_H = 2048,
        IDOL_H = 2049,
        LAST_HERO_MONSTER = 2050,
        START_BOSS_MONSTER = 3000,
        SUITCAT = 3001,
        JACKRABBIT = 3002,
        EVILPET = 3003,
        CAKE = 3004,
        LAST_BOSS_MONSTER = 3005,
        START_UNIT_SKIN = 10000,
        END_UNIT_SKIN = 19999,
        LAST = 20000,
    }

    enum BuffID
    {
        NONE = 0,
        SILENCE_DEMO = 1,
        NOSKILL_STARTHAST = 2,
        NOLESSHP_50 = 3,
        BATTLE_END_POSE = 15,
        STAT_HOUSING_MAX = 9999,
        factionbuff_16 = 84,
        factionbuff_20 = 85,
        factionbuff_24 = 86,
        factionbuff_11 = 87,
        factionbuff_5 = 88,
        factionbuff_2 = 89,
        factionbuff_12 = 90,
        factionbuff_9 = 91,
        factionbuff_6 = 92,
        factionbuff_3 = 93,
        factionbuff_18 = 94,
        factionbuff_22 = 95,
        BULLYGIRL_DEBUFF_LV1 = 1021,
        BULLYGIRL_DEBUFF_LV2 = 1022,
        BULLYGIRL_DEBUFF_LV4 = 1023,
        GAMBLER_SPADE = 1341,
        GAMBLER_HEART = 1343,
        GAMBLER_CLOVER = 1345,
        GAMBLER_DIAMOND = 1347,
        BABA_DOT_HEAL = 1431,
        SABRE_SP02_SNARE_LV1 = 4431,
        SABRE_SP02_SNARE_LV2 = 4432,
        SABRE_SP02_SNARE_LV3 = 4433,
        ARTIFACT_KASIM_NECKLACE_SHIELD = 1000034,
        HOUSING_STAT = 10000001,
        HOUSING_FACTION_BUFF_MPPAYMULT = 10000003,
        HOUSING_FACTION_BUFF_CDMGMULT = 10000004,
    }

    enum ArtifactID
    {
        NONE = 0,
        KASIM_SHIELD = 20001,
        KASIM_WING = 20002,
        KASIM_NECKLACE = 20003,
        KASIM_EARRING = 20004,
        KASIM_GLASS = 20005,
        KASIM_CROWN = 20006,
        KASIM_HEART = 20007,
    }

    enum StateAndSkillID
    {
        NONE = 0,
        IDLE = 1,
        MOVE = 2,
        DEATH = 3,
        MOVE_STARTHAST = 4,
        LAUNCH = 5,
        SILENCE = 6,
        STUN = 7,
        FREEZE = 8,
        SLEEP = 9,
        FALL = 10,
        ICE_SP_02 = 20031,
        ICE_SP_03 = 20041,
        FIANCE_ULT_01 = 22011,
        FIANCE_H_ULT_01 = 2022011,
        RABBIT_ATK = 24001,
        RABBIT_ULT = 24011,
        RABBIT_SP_01 = 24021,
        RABBIT_SP_02 = 24031,
        SWORDCAT_ATK = 25001,
        SWORDCAT_ULT = 25011,
        SWORDCAT_SP01 = 25021,
        SWORDCAT_SP02 = 25031,
        SWORDCAT_SP03 = 25041,
        QUEEN_ATK = 29001,
        QUEEN_SP01 = 29021,
        ALCHEMY_SP01 = 23021,
        AKIMBO_SP01 = 38021,
        AKIMBO_SP02 = 38031,
        SABRE_ULT = 44011,
        SABRE_SP01 = 44021,
        CLERIC_SP01 = 47021,
        BREEZE_ULT = 50011,
        LAMPLIGHT_SP01 = 53021,
    }

    enum SkillFXID
    {
        NONE = 0,
        REDEYE_0_FX1 = 10011,
        REDEYE_1_FX1 = 10111,
        REDEYE_2_FX1 = 10211,
        REDEYE_3_FX1 = 10311,
        REDEYE_3_FX2 = 10312,
        REDEYE_H_0_FX1 = 20010011,
        REDEYE_H_1_FX1 = 20010111,
        PLUMEHAT_0_FX1 = 20011,
        PLUMEHAT_1_FX1 = 20111,
        PLUMEHAT_2_FX1 = 20211,
        PLUMEHAT_2_FX2 = 20212,
        PLUMEHAT_3_FX1 = 20311,
        PLUMEHAT_H_0_FX1 = 20020011,
        PLUMEHAT_H_1_FX1 = 20020111,
        BROWNPONY_0_FX1 = 30011,
        BROWNPONY_1_FX1 = 30111,
        BROWNPONY_2_FX1 = 30211,
        BROWNPONY_2_FX2 = 30212,
        BROWNPONY_3_FX1 = 30311,
        BROWNPONY_H_0_FX1 = 20030011,
        BROWNPONY_H_1_FX1 = 20030111,
        CARROT_0_FX1 = 40011,
        CARROT_1_FX1 = 40111,
        CARROT_1_FX2 = 40112,
        CARROT_2_FX1 = 40211,
        CARROT_3_FX1 = 40311,
        CARROT_3_FX2 = 40312,
        CARROT_H_0_FX1 = 20040011,
        CARROT_H_1_FX1 = 20040111,
        CARROT_H_1_FX2 = 20040112,
        SKYBLUE_0_FX1 = 50011,
        SKYBLUE_1_FX1 = 50111,
        SKYBLUE_2_FX1 = 50211,
        SKYBLUE_3_FX1 = 50311,
        SKYBLUE_H_0_FX1 = 20050011,
        SKYBLUE_H_1_FX1 = 20050111,
        GOLDSHIELD_0_FX1 = 60011,
        GOLDSHIELD_1_FX1 = 60111,
        GOLDSHIELD_2_FX1 = 60211,
        GOLDSHIELD_H_0_FX1 = 20060011,
        GOLDSHIELD_H_1_FX1 = 20060111,
        MONK_0_FX1 = 70011,
        MONK_1_FX1 = 70111,
        MONK_2_FX1 = 70211,
        MONK_3_FX1 = 70311,
        MONK_H_0_FX1 = 20070011,
        MONK_H_1_FX1 = 20070111,
        REDHOOD_0_FX1 = 80011,
        REDHOOD_1_FX1 = 80111,
        REDHOOD_2_FX1 = 80211,
        REDHOOD_3_FX1 = 80311,
        REDHOOD_4_FX1 = 80411,
        REDHOOD_H_0_FX1 = 20080011,
        REDHOOD_H_1_FX1 = 20080111,
        HIGHELF_0_FX1 = 90011,
        HIGHELF_1_FX1 = 90111,
        HIGHELF_1_FX2 = 90112,
        HIGHELF_2_FX1 = 90211,
        HIGHELF_3_1_FX1 = 90311,
        HIGHELF_3_2_FX1 = 90321,
        HIGHELF_4_FX1 = 90411,
        HIGHELF_H_0_FX1 = 20090011,
        HIGHELF_H_1_FX1 = 20090111,
        HIGHELF_H_1_FX2 = 20090112,
        BULLYGIRL_0_FX1 = 100011,
        BULLYGIRL_1_FX1 = 100111,
        BULLYGIRL_2_FX1 = 100211,
        BULLYGIRL_2_FX2 = 100212,
        BULLYGIRL_3_FX1 = 100311,
        BULLYGIRL_4_FX1 = 100411,
        BULLYGIRL_H_0_FX1 = 20100011,
        BULLYGIRL_H_1_FX1 = 20100111,
        BLACKSMITH_0_FX1 = 110011,
        BLACKSMITH_1_FX1 = 110111,
        BLACKSMITH_2_FX1 = 110211,
        BLACKSMITH_3_FX1 = 110311,
        BLACKSMITH_3_FX2 = 110312,
        BLACKSMITH_4_FX1 = 110411,
        BLACKSMITH_H_0_FX1 = 20110011,
        BLACKSMITH_H_1_FX1 = 20110111,
        PIRATE_0_FX1 = 120011,
        PIRATE_1_FX1 = 120111,
        PIRATE_1_FX2 = 120112,
        PIRATE_2_FX1 = 120211,
        PIRATE_3_FX1 = 120311,
        PIRATE_3_FX2 = 120312,
        PIRATE_4_FX1 = 120411,
        PIRATE_H_0_FX1 = 20120011,
        PIRATE_H_1_FX1 = 20120111,
        PIRATE_H_1_FX2 = 20120112,
        GAMBLER_0_FX1 = 130011,
        GAMBLER_1_FX1 = 130111,
        GAMBLER_1_FX2 = 130112,
        GAMBLER_2_FX1 = 130211,
        GAMBLER_2_FX2 = 130212,
        GAMBLER_3_FX1 = 130311,
        GAMBLER_3_FX2 = 130312,
        GAMBLER_4_FX1 = 130411,
        GAMBLER_4_FX2 = 130412,
        GAMBLER_4_FX3 = 130413,
        GAMBLER_4_FX4 = 130414,
        GAMBLER_4_FX5 = 130415,
        GAMBLER_H_0_FX1 = 20130011,
        GAMBLER_H_1_FX1 = 20130111,
        GAMBLER_H_1_FX2 = 20130112,
        BABA_0_FX1 = 140011,
        BABA_1_FX1 = 140111,
        BABA_1_FX2 = 140112,
        BABA_2_FX1 = 140211,
        BABA_3_FX1 = 140311,
        BABA_4_FX1 = 140411,
        BABA_H_0_FX1 = 20140011,
        BABA_H_1_FX1 = 20140111,
        BABA_H_1_FX2 = 20140112,
        CRUSADER_0_FX1 = 150011,
        CRUSADER_1_FX1 = 150111,
        CRUSADER_1_FX2 = 150112,
        CRUSADER_1_FX3 = 150113,
        CRUSADER_2_FX1 = 150211,
        CRUSADER_2_FX2 = 150212,
        CRUSADER_3_FX1 = 150311,
        CRUSADER_4_FX1 = 150411,
        JUNGLE_0_FX1 = 160011,
        JUNGLE_1_FX1 = 160111,
        JUNGLE_2_FX1 = 160211,
        JUNGLE_3_FX1 = 160311,
        JUNGLE_H_0_FX1 = 20160011,
        JUNGLE_H_1_FX1 = 20160111,
        LADYDEATH_0_FX1 = 170011,
        LADYDEATH_1_FX1 = 170111,
        LADYDEATH_1_FX2 = 170112,
        LADYDEATH_2_FX1 = 170211,
        LADYDEATH_3_FX1 = 170311,
        LADYDEATH_4_FX1 = 170411,
        LADYDEATH_SIG_HORROR = 171511,
        LADYDEATH_SIG_CURE = 171513,
        LADYDEATH_H_0_FX1 = 170011,
        LADYDEATH_H_1_FX1 = 170111,
        LADYDEATH_H_1_FX2 = 170112,
        DARKELF_0_FX1 = 180011,
        DARKELF_1_FX1 = 180111,
        DARKELF_1_FX2 = 180112,
        DARKELF_2_FX1 = 180211,
        DARKELF_3_FX1 = 180311,
        DARKELF_4_FX1 = 180411,
        DARKELF_SIG_FX1 = 181511,
        DARKELF_H_0_FX1 = 20180011,
        DARKELF_H_1_FX1 = 20180111,
        DARKELF_H_1_FX2 = 20180112,
        NUN_0_FX1 = 190011,
        NUN_1_FX1 = 190111,
        NUN_2_FX1 = 190211,
        NUN_3_FX1 = 190311,
        NUN_4_FX1 = 190411,
        NUN_4_FX2 = 190421,
        NUN_H_0_FX1 = 20190011,
        NUN_H_1_FX1 = 20190111,
        ICE_0_FX1 = 200011,
        ICE_1_FX1 = 200111,
        ICE_2_FX1 = 200211,
        ICE_3_FX1 = 200311,
        ICE_3_FX2 = 200312,
        ICE_4_FX1 = 200411,
        ICE_4_FX2 = 200412,
        COOK_0_FX1 = 210011,
        COOK_1_FX1 = 210111,
        COOK_2_FX1 = 210211,
        COOK_3_FX1 = 210311,
        COOK_4_FX1 = 210411,
        FIANCE_0_FX1 = 220011,
        FIANCE_1_FX1 = 220111,
        FIANCE_1_FX2 = 220112,
        FIANCE_2_FX1 = 220211,
        FIANCE_3_FX1 = 220311,
        FIANCE_4_FX1 = 220411,
        FIANCE_H_0_FX1 = 20220011,
        FIANCE_H_1_FX1 = 20220111,
        FIANCE_H_1_FX2 = 20220112,
        ALCHEMY_0_FX1 = 230011,
        ALCHEMY_1_FX1 = 230111,
        ALCHEMY_1_FX2 = 230112,
        ALCHEMY_2_FX1 = 230211,
        ALCHEMY_3_FX1 = 230311,
        ALCHEMY_H_0_FX1 = 20230011,
        ALCHEMY_H_1_FX1 = 20230111,
        ALCHEMY_H_1_FX2 = 20230112,
        RABBIT_0_FX1 = 240011,
        RABBIT_1_FX1 = 240111,
        RABBIT_2_FX1 = 240211,
        RABBIT_H_0_FX1 = 20240011,
        RABBIT_H_1_FX1 = 20240111,
        SWORDCAT_0_FX1 = 250011,
        SWORDCAT_1_FX1 = 250111,
        SWORDCAT_1_FX2 = 250112,
        SWORDCAT_2_FX1 = 250211,
        SWORDCAT_3_FX1 = 250311,
        SWORDCAT_H_0_FX1 = 20250011,
        SWORDCAT_H_1_FX1 = 20250111,
        SWORDCAT_H_1_FX2 = 20250112,
        FLOWER_0_FX1 = 260011,
        FLOWER_1_FX1 = 260111,
        FLOWER_2_FX1 = 260211,
        FLOWER_3_FX1 = 260311,
        FLOWER_4_FX1 = 260411,
        FLOWER_H_0_FX1 = 20260011,
        FLOWER_H_1_FX1 = 20260111,
        MIDDLE_0_FX1 = 270011,
        MIDDLE_1_FX1 = 270111,
        MIDDLE_2_FX1 = 270211,
        MIDDLE_3_FX1 = 270311,
        MIDDLE_4_FX1 = 270411,
        MIDDLE_H_0_FX1 = 270011,
        MIDDLE_H_1_FX1 = 270111,
        BDRAGON_0_FX1 = 280011,
        BDRAGON_1_FX1 = 280111,
        BDRAGON_1_FX2 = 280112,
        BDRAGON_2_FX1 = 280211,
        BDRAGON_2_FX2 = 280212,
        BDRAGON_3_FX1 = 280311,
        BDRAGON_3_FX2 = 280312,
        BDRAGON_4_FX1 = 280411,
        BDRAGON_4_FX2 = 280412,
        BDRAGON_4_FX3 = 280413,
        BDRAGON_H_0_FX1 = 20280011,
        BDRAGON_H_1_FX1 = 20280111,
        BDRAGON_H_1_FX2 = 20280112,
        QUEEN_0_FX1 = 290011,
        QUEEN_1_FX1 = 290111,
        QUEEN_1_FX2 = 290112,
        QUEEN_2_FX1 = 290211,
        QUEEN_3_FX1 = 290311,
        QUEEN_4_FX1 = 290411,
        QUEEN_H_0_FX1 = 20290011,
        QUEEN_H_1_FX1 = 20290111,
        QUEEN_H_1_FX2 = 20290112,
        GDRAGON_0_FX1 = 300011,
        GDRAGON_1_FX1 = 300111,
        GDRAGON_2_FX1 = 300211,
        GDRAGON_2_FX2 = 300212,
        GDRAGON_3_FX1 = 300311,
        GDRAGON_4_FX1 = 300411,
        REDHEAD_0_FX1 = 310011,
        REDHEAD_1_FX1 = 310111,
        REDHEAD_2_FX1 = 310211,
        REDHEAD_3_FX1 = 310311,
        REDHEAD_H_0_FX1 = 20310011,
        REDHEAD_H_1_FX1 = 20310111,
        DUALCROSS_0_FX1 = 320011,
        DUALCROSS_1_FX1 = 320111,
        DUALCROSS_1_FX2 = 320112,
        DUALCROSS_2_FX1 = 320211,
        DUALCROSS_3_FX1 = 320311,
        DUALCROSS_4_FX1 = 320411,
        DUALCROSS_H_0_FX1 = 20320011,
        DUALCROSS_H_1_FX1 = 20320111,
        DUALCROSS_H_1_FX2 = 20320112,
        ASS_0_FX1 = 330011,
        ASS_1_FX1 = 330111,
        ASS_1_FX2 = 330112,
        ASS_2_FX1 = 330211,
        ASS_3_FX1 = 330311,
        ASS_H_0_FX1 = 20330011,
        ASS_H_1_FX1 = 20330111,
        ASS_H_1_FX2 = 20330112,
        FOXY_0_FX1 = 340011,
        FOXY_1_FX1 = 340111,
        FOXY_2_FX1 = 340211,
        FOXY_3_FX1 = 340311,
        FOXY_4_FX1 = 340411,
        FOXY_H_0_FX1 = 20340011,
        FOXY_H_1_FX1 = 20340111,
        PRIEST_0_FX1 = 350011,
        PRIEST_1_FX1 = 350111,
        PRIEST_2_FX1 = 350211,
        PRIEST_3_FX1 = 350311,
        PRIEST_H_0_FX1 = 20350011,
        PRIEST_H_1_FX1 = 20350111,
        MIKO_0_FX1 = 360011,
        MIKO_1_FX1 = 360111,
        MIKO_2_FX1 = 360211,
        MIKO_4_FX1 = 360411,
        MIKO_H_0_FX1 = 20360011,
        MIKO_H_1_FX1 = 20360111,
        RDRAGON_0_FX1 = 370011,
        RDRAGON_1_FX1 = 370111,
        RDRAGON_1_FX2 = 370112,
        RDRAGON_2_FX1 = 370211,
        RDRAGON_3_FX1 = 370311,
        RDRAGON_H_0_FX1 = 20370011,
        RDRAGON_H_1_FX1 = 20370111,
        RDRAGON_H_1_FX2 = 20370112,
        AKIMBO_0_FX1 = 380011,
        AKIMBO_1_FX1 = 380111,
        AKIMBO_1_FX2 = 380112,
        AKIMBO_2_FX1 = 380211,
        AKIMBO_3_FX1 = 380311,
        AKIMBO_SIG_FX1 = 381511,
        SUGAR_0_FX1 = 390011,
        SUGAR_1_FX1 = 390111,
        SUGAR_1_FX2 = 390112,
        SUGAR_2_FX1 = 390211,
        SUGAR_3_FX1 = 390311,
        SUGAR_4_FX1 = 390411,
        SUGAR_SIG_HEAL = 391511,
        SUGAR_H_0_FX1 = 20390011,
        SUGAR_H_1_FX1 = 20390111,
        SUGAR_H_1_FX2 = 20390112,
        WATER_0_FX1 = 400011,
        WATER_1_FX1 = 400111,
        WATER_2_FX1 = 400211,
        WATER_3_FX1 = 400311,
        WATER_4_FX1 = 400411,
        WATER_H_0_FX1 = 20400011,
        WATER_H_1_FX1 = 20400111,
        GUITAR_0_FX1 = 410011,
        GUITAR_1_FX1 = 410111,
        GUITAR_1_FX2 = 410112,
        GUITAR_2_FX1 = 410211,
        GUITAR_3_FX1 = 410311,
        GUITAR_4_FX1 = 410411,
        GUITAR_H_0_FX1 = 20410011,
        GUITAR_H_1_FX1 = 20410111,
        GUITAR_H_1_FX2 = 20410112,
        GUITAR_H_2_FX1 = 20410211,
        GUITAR_H_3_FX1 = 20410311,
        GUITAR_H_4_FX1 = 20410411,
        HARP_0_FX1 = 420011,
        HARP_1_FX1 = 420111,
        HARP_1_FX2 = 420112,
        HARP_2_FX1 = 420211,
        HARP_3_FX1 = 420311,
        HARP_4_FX1 = 420411,
        HARP_H_0_FX1 = 20420011,
        HARP_H_1_FX1 = 20420111,
        HARP_H_2_FX1 = 20420211,
        HARP_H_3_FX1 = 20420311,
        HARP_H_4_FX1 = 20420411,
        DEATHSCYTHE_0_FX1 = 430011,
        DEATHSCYTHE_1_FX1 = 430111,
        DEATHSCYTHE_2_FX1 = 430211,
        DEATHSCYTHE_3_FX1 = 430311,
        DEATHSCYTHE_4_FX1 = 430411,
        DEATHSCYTHE_H_0_FX1 = 20430011,
        DEATHSCYTHE_H_1_FX1 = 20430111,
        DEATHSCYTHE_H_2_FX1 = 20430211,
        DEATHSCYTHE_H_3_FX1 = 20430311,
        DEATHSCYTHE_H_4_FX1 = 20430411,
        SABRE_0_FX1 = 440011,
        SABRE_1_FX1 = 440111,
        SABRE_2_FX1 = 440211,
        SABRE_2_FX2 = 440212,
        SABRE_3_FX1 = 440311,
        SABRE_4_FX1 = 440411,
        SABRE_5_FX1 = 440511,
        SABRE_H_0_FX1 = 20440011,
        SABRE_H_1_FX1 = 20440111,
        SABRE_H_2_FX1 = 20440211,
        SABRE_H_2_FX2 = 20440212,
        SABRE_H_3_FX1 = 20440311,
        SABRE_H_4_FX1 = 20440411,
        SABRE_H_5_FX1 = 20440511,
        TULU_0_FX1 = 450011,
        TULU_1_FX1 = 450111,
        TULU_2_FX1 = 450211,
        TULU_3_FX1 = 450311,
        TULU_H_0_FX1 = 20450011,
        TULU_H_1_FX1 = 20450111,
        TULU_H_2_FX1 = 20450211,
        TULU_H_3_FX1 = 20450311,
        GOM_0_FX1 = 460011,
        GOM_1_FX1 = 460111,
        GOM_2_FX1 = 460211,
        GOM_2_FX2 = 460212,
        GOM_3_FX1 = 460311,
        GOM_H_0_FX1 = 20460011,
        GOM_H_1_FX1 = 20460111,
        GOM_H_2_FX1 = 20460211,
        GOM_H_2_FX2 = 20460212,
        GOM_H_3_FX1 = 20460311,
        CLERIC_0_FX1 = 470011,
        CLERIC_1_FX1 = 470111,
        CLERIC_1_FX2 = 470112,
        CLERIC_2_FX1 = 470211,
        CLERIC_3_FX1 = 470311,
        CLERIC_4_FX1 = 470411,
        CLERIC_H_0_FX1 = 20470011,
        CLERIC_H_1_FX1 = 20470111,
        CLERIC_H_1_FX2 = 20470112,
        CLERIC_H_2_FX1 = 20470211,
        CLERIC_H_3_FX1 = 20470311,
        CLERIC_H_4_FX1 = 20470411,
        FLORA_0_FX1 = 480011,
        FLORA_1_FX1 = 480111,
        FLORA_2_FX1 = 480211,
        FLORA_3_FX1 = 480311,
        FLORA_H_0_FX1 = 20480011,
        FLORA_H_1_FX1 = 20480111,
        FLORA_H_2_FX1 = 20480211,
        FLORA_H_3_FX1 = 20480311,
        PARU_0_FX1 = 490011,
        PARU_1_FX1 = 490111,
        PARU_1_FX2 = 490112,
        PARU_2_FX1 = 490211,
        PARU_2_FX2 = 490212,
        PARU_3_FX1 = 490311,
        PARU_H_0_FX1 = 20490011,
        PARU_H_1_FX1 = 20490111,
        PARU_H_1_FX2 = 20490112,
        PARU_H_2_FX1 = 20490211,
        PARU_H_2_FX2 = 20490212,
        PARU_H_3_FX1 = 20490311,
        BREEZE_0_FX1 = 500011,
        BREEZE_1_FX1 = 500111,
        BREEZE_1_FX2 = 500112,
        BREEZE_2_FX1 = 500211,
        BREEZE_2_FX2 = 500212,
        BREEZE_3_FX1 = 500311,
        BREEZE_3_FX2 = 500312,
        BREEZE_H_0_FX1 = 20500011,
        BREEZE_H_1_FX1 = 20500111,
        BREEZE_H_1_FX2 = 20500112,
        BREEZE_H_2_FX1 = 20500211,
        BREEZE_H_2_FX2 = 20500212,
        BREEZE_H_3_FX1 = 20500311,
        BREEZE_H_3_FX2 = 20500312,
        PAJAMA_0_FX1 = 510011,
        PAJAMA_1_FX1 = 510111,
        PAJAMA_1_FX2 = 510112,
        PAJAMA_1_FX3 = 510113,
        PAJAMA_1_FX4 = 510114,
        PAJAMA_2_FX1 = 510211,
        PAJAMA_3_FX1 = 510311,
        PAJAMA_4_FX1 = 510411,
        PAJAMA_4_FX2 = 510412,
        PAJAMA_4_FX3 = 510413,
        PAJAMA_H_0_FX1 = 20510011,
        PAJAMA_H_1_FX1 = 20510111,
        PAJAMA_H_1_FX2 = 20510112,
        PAJAMA_H_1_FX3 = 20510113,
        PAJAMA_H_1_FX4 = 20510114,
        PAJAMA_H_2_FX1 = 20510211,
        PAJAMA_H_3_FX1 = 20510311,
        PAJAMA_H_4_FX1 = 20510411,
        PAJAMA_H_4_FX2 = 20510412,
        PAJAMA_H_4_FX3 = 20510413,
        MIDNIGHT_0_FX1 = 520011,
        MIDNIGHT_1_FX1 = 520111,
        MIDNIGHT_1_FX2 = 520112,
        MIDNIGHT_1_FX3 = 520113,
        MIDNIGHT_1_FX4 = 520114,
        MIDNIGHT_2_FX1 = 520211,
        MIDNIGHT_2_FX2 = 520212,
        MIDNIGHT_2_FX3 = 520213,
        MIDNIGHT_3_FX1 = 520311,
        MIDNIGHT_3_FX2 = 520312,
        MIDNIGHT_4_FX1 = 520411,
        MIDNIGHT_H_0_FX1 = 20520011,
        MIDNIGHT_H_1_FX1 = 20520111,
        MIDNIGHT_H_1_FX2 = 20520112,
        MIDNIGHT_H_1_FX3 = 20520113,
        MIDNIGHT_H_1_FX4 = 20520114,
        MIDNIGHT_H_2_FX1 = 20520211,
        MIDNIGHT_H_2_FX2 = 20520212,
        MIDNIGHT_H_2_FX3 = 20520213,
        MIDNIGHT_H_3_FX1 = 20520311,
        MIDNIGHT_H_3_FX2 = 20520312,
        MIDNIGHT_H_4_FX1 = 20520411,
        LAMPLIGHT_0_FX1 = 530011,
        LAMPLIGHT_1_FX1 = 530111,
        LAMPLIGHT_2_FX1 = 530211,
        LAMPLIGHT_2_FX2 = 530212,
        LAMPLIGHT_3_FX1 = 530311,
        LAMPLIGHT_4_FX1 = 530411,
        LAMPLIGHT_H_0_FX1 = 20530011,
        LAMPLIGHT_H_1_FX1 = 20530111,
        LAMPLIGHT_H_2_FX1 = 20530211,
        LAMPLIGHT_H_2_FX2 = 20530212,
        LAMPLIGHT_H_3_FX1 = 20530311,
        LAMPLIGHT_H_4_FX1 = 20530411,
        IDOL_0_FX1 = 540011,
        IDOL_1_FX1 = 540111,
        IDOL_1_FX2 = 540112,
        IDOL_2_FX1 = 540211,
        IDOL_3_FX1 = 540311,
        IDOL_3_FX2 = 540312,
        IDOL_4_FX1 = 540411,
        IDOL_4_FX2 = 540412,
        IDOL_H_0_FX1 = 20540011,
        IDOL_H_1_FX1 = 20540111,
        IDOL_H_1_FX2 = 20540112,
        IDOL_H_2_FX1 = 20540211,
        IDOL_H_3_FX1 = 20540311,
        IDOL_H_3_FX2 = 20540312,
        IDOL_H_4_FX1 = 20540411,
        IDOL_H_4_FX2 = 20540412,
        DARKTEMPLAR_0_FX1 = 550011,
        DARKTEMPLAR_1_FX1 = 550111,
        DARKTEMPLAR_2_FX1 = 550211,
        DARKTEMPLAR_2_FX2 = 550212,
        DARKTEMPLAR_3_FX1 = 550311,
        DARKTEMPLAR_3_FX2 = 550312,
        DARKTEMPLAR_4_FX1 = 550411,
        DARKTEMPLAR_H_0_FX1 = 20550011,
        DARKTEMPLAR_H_1_FX1 = 20550111,
        DARKTEMPLAR_H_2_FX1 = 20550211,
        DARKTEMPLAR_H_2_FX2 = 20550212,
        DARKTEMPLAR_H_3_FX1 = 20550311,
        DARKTEMPLAR_H_3_FX2 = 20550312,
        DARKTEMPLAR_H_4_FX1 = 20550411,
        TAILOR_0_FX1 = 560011,
        TAILOR_1_FX1 = 560111,
        TAILOR_2_FX1 = 560211,
        TAILOR_3_FX1 = 560311,
        TAILOR_4_FX1 = 560411,
        TAILOR_SIG_FX1 = 561511,
        TAILOR_H_0_FX1 = 20560011,
        TAILOR_H_1_FX1 = 20560111,
        TAILOR_H_2_FX1 = 20560211,
        TAILOR_H_3_FX1 = 20560311,
        TAILOR_H_4_FX1 = 20560411,
        SHAMAN_0_FX1 = 570011,
        SHAMAN_1_FX1 = 570111,
        SHAMAN_2_FX1 = 570211,
        SHAMAN_3_FX1 = 570311,
        SHAMAN_4_FX1 = 570411,
        SHAMAN_H_0_FX1 = 20570011,
        SHAMAN_H_1_FX1 = 20570111,
        SHAMAN_H_2_FX1 = 20570211,
        SHAMAN_H_3_FX1 = 20570311,
        SHAMAN_H_4_FX1 = 20570411,
        SLIME01_HERO_0_FX1 = 9010011,
        SLIME01_HERO_1_FX1 = 9010111,
        SLIME01_HERO_1_FX2 = 9010112,
        SLIME02_HERO_0_FX1 = 9020011,
        SLIME02_HERO_1_FX1 = 9020111,
        SLIME02_HERO_1_FX2 = 9020112,
        SLIME03_HERO_0_FX1 = 9030011,
        SLIME03_HERO_1_FX1 = 9030111,
        SLIME03_HERO_1_FX2 = 9030112,
        SLIME04_HERO_0_FX1 = 9040011,
        SLIME04_HERO_1_FX1 = 9040111,
        SLIME04_HERO_1_FX2 = 9040112,
        SLIME05_HERO_0_FX1 = 9050011,
        SLIME05_HERO_1_FX1 = 9050111,
        SLIME05_HERO_1_FX2 = 9050112,
        SLIME06_HERO_0_FX1 = 9060011,
        SLIME06_HERO_1_FX1 = 9060111,
        SLIME06_HERO_1_FX2 = 9060112,
        SLIME01_0_FX1 = 10010011,
        SLIME01_1_FX1 = 10010111,
        SLIME01_1_FX2 = 10010112,
        SLIME02_0_FX1 = 10020011,
        SLIME02_1_FX1 = 10020111,
        SLIME02_1_FX2 = 10020112,
        SLIME03_0_FX1 = 10030011,
        SLIME03_1_FX1 = 10030111,
        SLIME03_1_FX2 = 10030112,
        SLIME04_0_FX1 = 10040011,
        SLIME04_1_FX1 = 10040111,
        SLIME04_1_FX2 = 10040112,
        SLIME05_0_FX1 = 10050011,
        SLIME05_1_FX1 = 10050111,
        SLIME05_1_FX2 = 10050112,
        SLIME06_0_FX1 = 10060011,
        SLIME06_1_FX1 = 10060111,
        SLIME06_1_FX2 = 10060112,
        MUSHROM01_0_FX1 = 10070011,
        MUSHROM01_1_FX1 = 10070111,
        MUSHROM02_0_FX1 = 10080011,
        MUSHROM02_1_FX1 = 10080111,
        MUSHROM03_0_FX1 = 10090011,
        MUSHROM03_1_FX1 = 10090111,
        MUSHROM04_0_FX1 = 10100011,
        MUSHROM04_1_FX1 = 10100111,
        MUSHROM05_0_FX1 = 10110011,
        MUSHROM05_1_FX1 = 10110111,
        MUSHROM06_0_FX1 = 10120011,
        MUSHROM06_1_FX1 = 10120111,
        SUITCAT_0_FX1 = 30010011,
        SUITCAT_2_FX1 = 30010211,
        SUITCAT_3_FX1 = 30010311,
        JACKRABBIT_0_FX1 = 30020011,
        JACKRABBIT_2_FX1 = 30020211,
        JACKRABBIT_3_FX1 = 30020311,
        EVILPET_0_FX1 = 30030011,
        EVILPET_1_FX1 = 30030111,
        EVILPET_2_FX1 = 30030211,
        EVILPET_3_FX1 = 30030311,
        EVILPET_4_FX1 = 30030411,
        CAKE_0_FX1 = 30040011,
        CAKE_2_FX1 = 30040211,
        CAKE_3_FX1 = 30040311,
    }

    enum SkillFXID_REDEYE
    {
        NONE = 0,
        REDEYE_0_FX1 = 10011,
        REDEYE_1_FX1 = 10111,
        REDEYE_2_FX1 = 10211,
        REDEYE_2_FX2 = 10212,
        REDEYE_3_FX1 = 10311,
        REDEYE_3_FX2 = 10312,
    }

    enum SkillFXID_REDEYE_H
    {
        NONE = 0,
        REDEYE_H_0_FX1 = 20010011,
        REDEYE_H_1_FX1 = 20010111,
    }

    enum SkillFXID_PLUMEHAT
    {
        NONE = 0,
        PLUMEHAT_0_FX1 = 20011,
        PLUMEHAT_1_FX1 = 20111,
        PLUMEHAT_2_FX1 = 20211,
        PLUMEHAT_2_FX2 = 20212,
        PLUMEHAT_3_FX1 = 20311,
    }

    enum SkillFXID_PLUMEHAT_H
    {
        NONE = 0,
        PLUMEHAT_H_0_FX1 = 20020011,
        PLUMEHAT_H_1_FX1 = 20020111,
    }

    enum SkillFXID_BROWNPONY
    {
        NONE = 0,
        BROWNPONY_0_FX1 = 30011,
        BROWNPONY_1_FX1 = 30111,
        BROWNPONY_2_FX1 = 30211,
        BROWNPONY_2_FX2 = 30212,
        BROWNPONY_3_FX1 = 30311,
    }

    enum SkillFXID_BROWNPONY_H
    {
        NONE = 0,
        BROWNPONY_H_0_FX1 = 20030011,
        BROWNPONY_H_1_FX1 = 20030111,
    }

    enum SkillFXID_CARROT
    {
        NONE = 0,
        CARROT_0_FX1 = 40011,
        CARROT_1_FX1 = 40111,
        CARROT_1_FX2 = 40112,
        CARROT_2_FX1 = 40211,
        CARROT_3_FX1 = 40311,
        CARROT_3_FX2 = 40312,
    }

    enum SkillFXID_CARROT_H
    {
        NONE = 0,
        CARROT_H_0_FX1 = 20040011,
        CARROT_H_1_FX1 = 20040111,
        CARROT_H_1_FX2 = 20040112,
    }

    enum SkillFXID_SKYBLUE
    {
        NONE = 0,
        SKYBLUE_0_FX1 = 50011,
        SKYBLUE_1_FX1 = 50111,
        SKYBLUE_2_FX1 = 50211,
        SKYBLUE_3_FX1 = 50311,
    }

    enum SkillFXID_SKYBLUE_H
    {
        NONE = 0,
        SKYBLUE_H_0_FX1 = 20050011,
        SKYBLUE_H_1_FX1 = 20050111,
    }

    enum SkillFXID_GOLDSHIELD
    {
        NONE = 0,
        GOLDSHIELD_0_FX1 = 60011,
        GOLDSHIELD_1_FX1 = 60111,
        GOLDSHIELD_2_FX1 = 60211,
    }

    enum SkillFXID_GOLDSHIELD_H
    {
        NONE = 0,
        GOLDSHIELD_H_0_FX1 = 20060011,
        GOLDSHIELD_H_1_FX1 = 20060111,
    }

    enum SkillFXID_MONK
    {
        NONE = 0,
        MONK_0_FX1 = 70011,
        MONK_1_FX1 = 70111,
        MONK_2_FX1 = 70211,
        MONK_3_FX1 = 70311,
    }

    enum SkillFXID_MONK_H
    {
        NONE = 0,
        MONK_H_0_FX1 = 20070011,
        MONK_H_1_FX1 = 20070111,
    }

    enum SkillFXID_REDHOOD
    {
        NONE = 0,
        REDHOOD_0_FX1 = 80011,
        REDHOOD_1_FX1 = 80111,
        REDHOOD_2_FX1 = 80211,
        REDHOOD_3_FX1 = 80311,
        REDHOOD_4_FX1 = 8411,
    }

    enum SkillFXID_REDHOOD_H
    {
        NONE = 0,
        REDHOOD_H_0_FX1 = 20080011,
        REDHOOD_H_1_FX1 = 20080111,
    }

    enum SkillFXID_HIGHELF
    {
        NONE = 0,
        HIGHELF_0_FX1 = 90011,
        HIGHELF_1_FX1 = 90111,
        HIGHELF_1_FX2 = 90112,
        HIGHELF_2_FX1 = 90211,
        HIGHELF_3_1_FX1 = 90311,
        HIGHELF_3_2_FX1 = 90321,
        HIGHELF_4_FX1 = 90411,
    }

    enum SkillFXID_HIGHELF_H
    {
        NONE = 0,
        HIGHELF_H_0_FX1 = 20090011,
        HIGHELF_H_1_FX1 = 20090111,
        HIGHELF_H_1_FX2 = 20090112,
    }

    enum SkillFXID_BULLYGIRL
    {
        NONE = 0,
        BULLYGIRL_0_FX1 = 100011,
        BULLYGIRL_1_FX1 = 100111,
        BULLYGIRL_2_FX1 = 100211,
        BULLYGIRL_2_FX2 = 100212,
        BULLYGIRL_3_FX1 = 100311,
        BULLYGIRL_4_FX1 = 100411,
    }

    enum SkillFXID_BULLYGIRL_H
    {
        NONE = 0,
        BULLYGIRL_H_0_FX1 = 20100011,
        BULLYGIRL_H_1_FX1 = 20100111,
    }

    enum SkillFXID_BLACKSMITH
    {
        NONE = 0,
        BLACKSMITH_0_FX1 = 110011,
        BLACKSMITH_1_FX1 = 110111,
        BLACKSMITH_2_FX1 = 110211,
        BLACKSMITH_3_FX1 = 110311,
        BLACKSMITH_3_FX2 = 110312,
        BLACKSMITH_4_FX1 = 110411,
    }

    enum SkillFXID_BLACKSMITH_H
    {
        NONE = 0,
        BLACKSMITH_H_0_FX1 = 20110011,
        BLACKSMITH_H_1_FX1 = 20110111,
    }

    enum SkillFXID_PIRATE
    {
        NONE = 0,
        PIRATE_0_FX1 = 120011,
        PIRATE_1_FX1 = 120111,
        PIRATE_1_FX2 = 120112,
        PIRATE_2_FX1 = 120211,
        PIRATE_3_FX1 = 120311,
        PIRATE_3_FX2 = 120312,
        PIRATE_4_FX1 = 120411,
    }

    enum SkillFXID_PIRATE_H
    {
        NONE = 0,
        PIRATE_H_0_FX1 = 20120011,
        PIRATE_H_1_FX1 = 20120111,
        PIRATE_H_1_FX2 = 20120112,
    }

    enum SkillFXID_GAMBLER
    {
        NONE = 0,
        GAMBLER_0_FX1 = 130011,
        GAMBLER_1_FX1 = 130111,
        GAMBLER_1_FX2 = 130112,
        GAMBLER_2_FX1 = 130211,
        GAMBLER_2_FX2 = 130212,
        GAMBLER_3_FX1 = 130311,
        GAMBLER_3_FX2 = 130312,
        GAMBLER_4_FX1 = 130411,
        GAMBLER_4_FX2 = 130412,
        GAMBLER_4_FX3 = 130413,
        GAMBLER_4_FX4 = 130414,
        GAMBLER_4_FX5 = 130415,
    }

    enum SkillFXID_GAMBLER_H
    {
        NONE = 0,
        GAMBLER_H_0_FX1 = 20130011,
        GAMBLER_H_1_FX1 = 20130111,
        GAMBLER_H_1_FX2 = 20130112,
    }

    enum SkillFXID_BABA
    {
        NONE = 0,
        BABA_0_FX1 = 140011,
        BABA_1_FX1 = 140111,
        BABA_1_FX2 = 140112,
        BABA_2_FX1 = 140211,
        BABA_3_FX1 = 140311,
        BABA_4_FX1 = 140411,
    }

    enum SkillFXID_BABA_H
    {
        NONE = 0,
        BABA_H_0_FX1 = 20140011,
        BABA_H_1_FX1 = 20140111,
        BABA_H_1_FX2 = 20140112,
    }

    enum SkillFXID_CRUSADER
    {
        NONE = 0,
        CRUSADER_0_FX1 = 150011,
        CRUSADER_1_FX1 = 150111,
        CRUSADER_1_FX2 = 150112,
        CRUSADER_1_FX3 = 150113,
        CRUSADER_2_FX1 = 150211,
        CRUSADER_2_FX2 = 150212,
        CRUSADER_3_FX1 = 150311,
        CRUSADER_4_FX1 = 150411,
    }

    enum SkillFXID_JUNGLE
    {
        NONE = 0,
        JUNGLE_0_FX1 = 160011,
        JUNGLE_1_FX1 = 160111,
        JUNGLE_2_FX1 = 160211,
        JUNGLE_3_FX1 = 160311,
    }

    enum SkillFXID_JUNGLE_H
    {
        NONE = 0,
        JUNGLE_H_0_FX1 = 20160011,
        JUNGLE_H_1_FX1 = 20160111,
    }

    enum SkillFXID_LADYDEATH
    {
        NONE = 0,
        LADYDEATH_0_FX1 = 170011,
        LADYDEATH_1_FX1 = 170111,
        LADYDEATH_1_FX2 = 170112,
        LADYDEATH_2_FX1 = 170211,
        LADYDEATH_3_FX1 = 170311,
        LADYDEATH_4_FX1 = 170411,
    }

    enum SkillFXID_LADYDEATH_H
    {
        NONE = 0,
        LADYDEATH_H_0_FX1 = 170011,
        LADYDEATH_H_1_FX1 = 170111,
        LADYDEATH_H_1_FX2 = 170112,
    }

    enum SkillFXID_DARKELF
    {
        NONE = 0,
        DARKELF_0_FX1 = 180011,
        DARKELF_1_FX1 = 180111,
        DARKELF_1_FX2 = 180112,
        DARKELF_2_FX1 = 180211,
        DARKELF_3_FX1 = 180311,
        DARKELF_4_FX1 = 180411,
    }

    enum SkillFXID_DARKELF_H
    {
        NONE = 0,
        DARKELF_H_0_FX1 = 20180011,
        DARKELF_H_1_FX1 = 20180111,
        DARKELF_H_1_FX2 = 20180112,
    }

    enum SkillFXID_NUN
    {
        NONE = 0,
        NUN_0_FX1 = 190011,
        NUN_1_FX1 = 190111,
        NUN_2_FX1 = 190211,
        NUN_3_FX1 = 190311,
        NUN_4_FX1 = 190411,
        NUN_4_FX2 = 190421,
    }

    enum SkillFXID_NUN_H
    {
        NONE = 0,
        NUN_H_0_FX1 = 20190011,
        NUN_H_1_FX1 = 20190111,
    }

    enum SkillFXID_ICE
    {
        NONE = 0,
        ICE_0_FX1 = 200011,
        ICE_1_FX1 = 200111,
        ICE_2_FX1 = 200211,
        ICE_3_FX1 = 200311,
        ICE_3_FX2 = 200312,
        ICE_4_FX1 = 200411,
        ICE_4_FX2 = 200412,
    }

    enum SkillFXID_COOK
    {
        NONE = 0,
        COOK_0_FX1 = 210011,
        COOK_1_FX1 = 210111,
        COOK_2_FX1 = 210211,
        COOK_3_FX1 = 210311,
        COOK_4_FX1 = 210411,
    }

    enum SkillFXID_FIANCE
    {
        NONE = 0,
        FIANCE_0_FX1 = 220011,
        FIANCE_1_FX1 = 220111,
        FIANCE_1_FX2 = 220112,
        FIANCE_2_FX1 = 220211,
        FIANCE_3_FX1 = 220311,
        FIANCE_4_FX1 = 220411,
    }

    enum SkillFXID_FIANCE_H
    {
        NONE = 0,
        FIANCE_H_0_FX1 = 20220011,
        FIANCE_H_1_FX1 = 20220111,
        FIANCE_H_1_FX2 = 20220112,
    }

    enum SkillFXID_ALCHEMY
    {
        NONE = 0,
        ALCHEMY_0_FX1 = 230011,
        ALCHEMY_1_FX1 = 230111,
        ALCHEMY_1_FX2 = 230112,
        ALCHEMY_2_FX1 = 230211,
        ALCHEMY_3_FX1 = 230311,
    }

    enum SkillFXID_ALCHEMY_H
    {
        NONE = 0,
        ALCHEMY_H_0_FX1 = 20230011,
        ALCHEMY_H_1_FX1 = 20230111,
        ALCHEMY_H_1_FX2 = 20230112,
    }

    enum SkillFXID_RABBIT
    {
        NONE = 0,
        RABBIT_0_FX1 = 240011,
        RABBIT_1_FX1 = 240111,
        RABBIT_2_FX1 = 240211,
    }

    enum SkillFXID_RABBIT_H
    {
        NONE = 0,
        RABBIT_0_FX1 = 20240011,
        RABBIT_1_FX1 = 20240111,
    }

    enum SkillFXID_SWORDCAT
    {
        NONE = 0,
        SWORDCAT_0_FX1 = 250011,
        SWORDCAT_1_FX1 = 250111,
        SWORDCAT_1_FX2 = 250112,
        SWORDCAT_2_FX1 = 250211,
        SWORDCAT_3_FX1 = 250311,
    }

    enum SkillFXID_SWORDCAT_H
    {
        NONE = 0,
        SWORDCAT_H_0_FX1 = 20250011,
        SWORDCAT_H_1_FX1 = 20250111,
        SWORDCAT_H_1_FX2 = 20250112,
    }

    enum SkillFXID_FLOWER
    {
        NONE = 0,
        FLOWER_0_FX1 = 260011,
        FLOWER_1_FX1 = 260111,
        FLOWER_2_FX1 = 260211,
        FLOWER_3_FX1 = 260311,
        FLOWER_4_FX1 = 260411,
    }

    enum SkillFXID_FLOWER_H
    {
        NONE = 0,
        FLOWER_H_0_FX1 = 20260011,
        FLOWER_H_1_FX1 = 20260111,
    }

    enum SkillFXID_MIDDLE
    {
        NONE = 0,
        MIDDLE_0_FX1 = 270011,
        MIDDLE_1_FX1 = 270111,
        MIDDLE_2_FX1 = 270211,
        MIDDLE_3_FX1 = 270311,
        MIDDLE_4_FX1 = 270411,
    }

    enum SkillFXID_MIDDLE_H
    {
        NONE = 0,
        MIDDLE_H_0_FX1 = 270011,
        MIDDLE_H_1_FX1 = 270111,
    }

    enum SkillFXID_BDRAGON
    {
        NONE = 0,
        BDRAGON_0_FX1 = 280011,
        BDRAGON_1_FX1 = 280111,
        BDRAGON_1_FX2 = 280112,
        BDRAGON_2_FX1 = 280211,
        BDRAGON_2_FX2 = 280212,
        BDRAGON_3_FX1 = 280311,
        BDRAGON_3_FX2 = 280312,
        BDRAGON_4_FX1 = 280411,
        BDRAGON_4_FX2 = 280412,
        BDRAGON_4_FX3 = 280413,
    }

    enum SkillFXID_BDRAGON_H
    {
        NONE = 0,
        BDRAGON_H_0_FX1 = 20280011,
        BDRAGON_H_1_FX1 = 20280111,
        BDRAGON_H_1_FX2 = 20280112,
    }

    enum SkillFXID_QUEEN
    {
        NONE = 0,
        QUEEN_0_FX1 = 290011,
        QUEEN_1_FX1 = 290111,
        QUEEN_1_FX2 = 290112,
        QUEEN_2_FX1 = 290211,
        QUEEN_3_FX1 = 290311,
        QUEEN_4_FX1 = 290411,
    }

    enum SkillFXID_QUEEN_H
    {
        NONE = 0,
        QUEEN_H_0_FX1 = 20290011,
        QUEEN_H_1_FX1 = 20290111,
        QUEEN_H_1_FX2 = 20290112,
    }

    enum SkillFXID_GDRAGON
    {
        NONE = 0,
        GDRAGON_0_FX1 = 300011,
        GDRAGON_1_FX1 = 300111,
        GDRAGON_2_FX1 = 300211,
        GDRAGON_2_FX2 = 300212,
        GDRAGON_3_FX1 = 300311,
        GDRAGON_4_FX1 = 300411,
    }

    enum SkillFXID_REDHEAD
    {
        NONE = 0,
        REDHEAD_0_FX1 = 310011,
        REDHEAD_1_FX1 = 310111,
        REDHEAD_2_FX1 = 310211,
        REDHEAD_3_FX1 = 310311,
    }

    enum SkillFXID_REDHEAD_H
    {
        NONE = 0,
        REDHEAD_H_0_FX1 = 20310011,
        REDHEAD_H_1_FX1 = 20310111,
    }

    enum SkillFXID_DUALCROSS
    {
        NONE = 0,
        DUALCROSS_0_FX1 = 320011,
        DUALCROSS_1_FX1 = 320111,
        DUALCROSS_1_FX2 = 320112,
        DUALCROSS_2_FX1 = 320211,
        DUALCROSS_3_FX1 = 320311,
        DUALCROSS_4_FX1 = 320411,
    }

    enum SkillFXID_DUALCROSS_H
    {
        NONE = 0,
        DUALCROSS_H_0_FX1 = 20320011,
        DUALCROSS_H_1_FX1 = 20320111,
        DUALCROSS_H_1_FX2 = 20320112,
    }

    enum SkillFXID_ASS
    {
        NONE = 0,
        ASS_0_FX1 = 330011,
        ASS_1_FX1 = 330111,
        ASS_1_FX2 = 330112,
        ASS_2_FX1 = 330211,
        ASS_3_FX1 = 330311,
    }

    enum SkillFXID_ASS_H
    {
        NONE = 0,
        ASS_H_0_FX1 = 20330011,
        ASS_H_1_FX1 = 20330111,
        ASS_H_1_FX2 = 20330112,
    }

    enum SkillFXID_FOXY
    {
        NONE = 0,
        FOXY_0_FX1 = 340011,
        FOXY_1_FX1 = 340111,
        FOXY_2_FX1 = 340211,
        FOXY_3_FX1 = 340311,
        FOXY_4_FX1 = 340411,
    }

    enum SkillFXID_FOXY_H
    {
        NONE = 0,
        FOXY_H_0_FX1 = 20340011,
        FOXY_H_1_FX1 = 20340111,
    }

    enum SkillFXID_PRIEST
    {
        NONE = 0,
        PRIEST_0_FX1 = 350011,
        PRIEST_1_FX1 = 350111,
        PRIEST_2_FX1 = 350211,
        PRIEST_3_FX1 = 350311,
    }

    enum SkillFXID_PRIEST_H
    {
        NONE = 0,
        PRIEST_H_0_FX1 = 20350011,
        PRIEST_H_1_FX1 = 20350111,
    }

    enum SkillFXID_MIKO
    {
        NONE = 0,
        MIKO_0_FX1 = 360011,
        MIKO_1_FX1 = 360111,
        MIKO_2_FX1 = 360211,
        MIKO_4_FX1 = 360411,
    }

    enum SkillFXID_MIKO_H
    {
        NONE = 0,
        MIKO_H_0_FX1 = 20360011,
        MIKO_H_1_FX1 = 20360111,
    }

    enum SkillFXID_RDRAGON
    {
        NONE = 0,
        RDRAGON_0_FX1 = 370011,
        RDRAGON_1_FX1 = 370111,
        RDRAGON_1_FX2 = 370112,
        RDRAGON_2_FX1 = 370211,
        RDRAGON_3_FX1 = 370311,
    }

    enum SkillFXID_RDRAGON_H
    {
        NONE = 0,
        RDRAGON_H_0_FX1 = 20370011,
        RDRAGON_H_1_FX1 = 20370111,
        RDRAGON_H_1_FX2 = 20370112,
    }

    enum SkillFXID_AKIMBO
    {
        NONE = 0,
        AKIMBO_0_FX1 = 380011,
        AKIMBO_1_FX1 = 380111,
        AKIMBO_1_FX2 = 380112,
        AKIMBO_2_FX1 = 380211,
        AKIMBO_3_FX1 = 380311,
    }

    enum SkillFXID_SUGAR
    {
        NONE = 0,
        SUGAR_0_FX1 = 390011,
        SUGAR_1_FX1 = 390111,
        SUGAR_1_FX2 = 390112,
        SUGAR_2_FX1 = 390211,
        SUGAR_3_FX1 = 390311,
        SUGAR_4_FX1 = 390411,
    }

    enum SkillFXID_SUGAR_H
    {
        NONE = 0,
        SUGAR_H_0_FX1 = 20390011,
        SUGAR_H_1_FX1 = 20390111,
        SUGAR_H_1_FX2 = 20390112,
    }

    enum SkillFXID_WATER
    {
        NONE = 0,
        WATER_0_FX1 = 400011,
        WATER_1_FX1 = 400111,
        WATER_2_FX1 = 400211,
        WATER_3_FX1 = 400311,
        WATER_4_FX1 = 400411,
    }

    enum SkillFXID_WATER_H
    {
        NONE = 0,
        WATER_H_0_FX1 = 20400011,
        WATER_H_1_FX1 = 20400111,
    }

    enum SkillFXID_GUITAR
    {
        NONE = 0,
        GUITAR_0_FX1 = 410011,
        GUITAR_1_FX1 = 410111,
        GUITAR_1_FX2 = 410112,
        GUITAR_2_FX1 = 410211,
        GUITAR_3_FX1 = 410311,
        GUITAR_4_FX1 = 410411,
    }

    enum SkillFXID_GUITAR_H
    {
        NONE = 0,
        GUITAR_H_0_FX1 = 20410011,
        GUITAR_H_1_FX1 = 20410111,
        GUITAR_H_1_FX2 = 20410112,
        GUITAR_H_2_FX1 = 20410211,
        GUITAR_H_3_FX1 = 20410311,
        GUITAR_H_4_FX1 = 20410411,
    }

    enum SkillFXID_HARP
    {
        NONE = 0,
        HARP_0_FX1 = 420011,
        HARP_1_FX1 = 420111,
        HARP_1_FX2 = 420112,
        HARP_2_FX1 = 420211,
        HARP_3_FX1 = 420311,
        HARP_4_FX1 = 420411,
    }

    enum SkillFXID_HARP_H
    {
        NONE = 0,
        HARP_H_0_FX1 = 20420011,
        HARP_H_1_FX1 = 20420111,
        HARP_H_1_FX2 = 20420112,
        HARP_H_2_FX1 = 20420211,
        HARP_H_3_FX1 = 20420311,
        HARP_H_4_FX1 = 20420411,
    }

    enum SkillFXID_DEATHSCYTHE
    {
        NONE = 0,
        DEATHSCYTHE_0_FX1 = 430011,
        DEATHSCYTHE_1_FX1 = 430111,
        DEATHSCYTHE_2_FX1 = 430211,
        DEATHSCYTHE_3_FX1 = 430311,
        DEATHSCYTHE_4_FX1 = 430411,
    }

    enum SkillFXID_DEATHSCYTHE_H
    {
        NONE = 0,
        DEATHSCYTHE_H_0_FX1 = 20430011,
        DEATHSCYTHE_H_1_FX1 = 20430111,
        DEATHSCYTHE_H_2_FX1 = 20430211,
        DEATHSCYTHE_H_3_FX1 = 20430311,
        DEATHSCYTHE_H_4_FX1 = 20430411,
    }

    enum SkillFXID_SABRE
    {
        NONE = 0,
        SABRE_0_FX1 = 440011,
        SABRE_1_FX1 = 440111,
        SABRE_2_FX1 = 440211,
        SABRE_2_FX2 = 440212,
        SABRE_3_FX1 = 440311,
        SABRE_4_FX1 = 440411,
        SABRE_5_FX1 = 440511,
    }

    enum SkillFXID_SABRE_H
    {
        NONE = 0,
        SABRE_H_0_FX1 = 20440011,
        SABRE_H_1_FX1 = 20440111,
        SABRE_H_2_FX1 = 20440211,
        SABRE_H_2_FX2 = 20440212,
        SABRE_H_3_FX1 = 20440311,
        SABRE_H_4_FX1 = 20440411,
        SABRE_H_5_FX1 = 20440511,
    }

    enum SkillFXID_TULU
    {
        NONE = 0,
        TULU_0_FX1 = 450011,
        TULU_1_FX1 = 450111,
        TULU_2_FX1 = 450211,
        TULU_3_FX1 = 450311,
    }

    enum SkillFXID_TULU_H
    {
        NONE = 0,
        TULU_H_0_FX1 = 20450011,
        TULU_H_1_FX1 = 20450111,
        TULU_H_2_FX1 = 20450211,
        TULU_H_3_FX1 = 20450311,
    }

    enum SkillFXID_GOM
    {
        NONE = 0,
        GOM_0_FX1 = 460011,
        GOM_1_FX1 = 460111,
        GOM_2_FX1 = 460211,
        GOM_2_FX2 = 460212,
        GOM_3_FX1 = 460311,
    }

    enum SkillFXID_GOM_H
    {
        NONE = 0,
        GOM_H_0_FX1 = 20460011,
        GOM_H_1_FX1 = 20460111,
        GOM_H_2_FX1 = 20460211,
        GOM_H_2_FX2 = 20460212,
        GOM_H_3_FX1 = 20460311,
    }

    enum SkillFXID_CLERIC
    {
        NONE = 0,
        CLERIC_0_FX1 = 470011,
        CLERIC_1_FX1 = 470111,
        CLERIC_1_FX2 = 470112,
        CLERIC_2_FX1 = 470211,
        CLERIC_3_FX1 = 470311,
        CLERIC_4_FX1 = 470411,
    }

    enum SkillFXID_CLERIC_H
    {
        NONE = 0,
        CLERIC_H_0_FX1 = 20470011,
        CLERIC_H_1_FX1 = 20470111,
        CLERIC_H_1_FX2 = 20470112,
        CLERIC_H_2_FX1 = 20470211,
        CLERIC_H_3_FX1 = 20470311,
        CLERIC_H_4_FX1 = 20470411,
    }

    enum SkillFXID_FLORA
    {
        NONE = 0,
        FLORA_0_FX1 = 480011,
        FLORA_1_FX1 = 480111,
        FLORA_2_FX1 = 480211,
        FLORA_3_FX1 = 480311,
    }

    enum SkillFXID_FLORA_H
    {
        NONE = 0,
        FLORA_H_0_FX1 = 20480011,
        FLORA_H_1_FX1 = 20480111,
        FLORA_H_2_FX1 = 20480211,
        FLORA_H_3_FX1 = 20480311,
    }

    enum SkillFXID_PARU
    {
        NONE = 0,
        PARU_0_FX1 = 490011,
        PARU_1_FX1 = 490111,
        PARU_1_FX2 = 490112,
        PARU_2_FX1 = 490211,
        PARU_2_FX2 = 490212,
        PARU_3_FX1 = 490311,
    }

    enum SkillFXID_PARU_H
    {
        NONE = 0,
        PARU_H_0_FX1 = 20490011,
        PARU_H_1_FX1 = 20490111,
        PARU_H_1_FX2 = 20490112,
        PARU_H_2_FX1 = 20490211,
        PARU_H_2_FX2 = 20490212,
        PARU_H_3_FX1 = 20490311,
    }

    enum SkillFXID_BREEZE
    {
        NONE = 0,
        BREEZE_0_FX1 = 500011,
        BREEZE_1_FX1 = 500111,
        BREEZE_1_FX2 = 500112,
        BREEZE_2_FX1 = 500211,
        BREEZE_2_FX2 = 500212,
        BREEZE_3_FX1 = 500311,
        BREEZE_3_FX2 = 500312,
    }

    enum SkillFXID_BREEZE_H
    {
        NONE = 0,
        BREEZE_H_0_FX1 = 20500011,
        BREEZE_H_1_FX1 = 20500111,
        BREEZE_H_1_FX2 = 20500112,
        BREEZE_H_2_FX1 = 20500211,
        BREEZE_H_2_FX2 = 20500212,
        BREEZE_H_3_FX1 = 20500311,
        BREEZE_H_3_FX2 = 20500312,
    }

    enum SkillFXID_PAJAMA
    {
        NONE = 0,
        PAJAMA_0_FX1 = 510011,
        PAJAMA_1_FX1 = 510111,
        PAJAMA_1_FX2 = 510112,
        PAJAMA_1_FX3 = 510113,
        PAJAMA_1_FX4 = 510114,
        PAJAMA_2_FX1 = 510211,
        PAJAMA_3_FX1 = 510311,
        PAJAMA_4_FX1 = 510411,
        PAJAMA_4_FX2 = 510412,
        PAJAMA_4_FX3 = 510413,
    }

    enum SkillFXID_PAJAMA_H
    {
        NONE = 0,
        PAJAMA_H_0_FX1 = 20510011,
        PAJAMA_H_1_FX1 = 20510111,
        PAJAMA_H_1_FX2 = 20510112,
        PAJAMA_H_1_FX3 = 20510113,
        PAJAMA_H_1_FX4 = 20510114,
        PAJAMA_H_2_FX1 = 20510211,
        PAJAMA_H_3_FX1 = 20510311,
        PAJAMA_H_4_FX1 = 20510411,
        PAJAMA_H_4_FX2 = 20510412,
        PAJAMA_H_4_FX3 = 20510413,
    }

    enum SkillFXID_MIDNIGHT
    {
        NONE = 0,
        MIDNIGHT_0_FX1 = 520011,
        MIDNIGHT_1_FX1 = 520111,
        MIDNIGHT_1_FX2 = 520112,
        MIDNIGHT_1_FX3 = 520113,
        MIDNIGHT_1_FX4 = 520114,
        MIDNIGHT_2_FX1 = 520211,
        MIDNIGHT_2_FX2 = 520212,
        MIDNIGHT_2_FX3 = 520213,
        MIDNIGHT_3_FX1 = 520311,
        MIDNIGHT_3_FX2 = 520312,
        MIDNIGHT_4_FX1 = 520411,
    }

    enum SkillFXID_MIDNIGHT_H
    {
        NONE = 0,
        MIDNIGHT_H_0_FX1 = 20520011,
        MIDNIGHT_H_1_FX1 = 20520111,
        MIDNIGHT_H_1_FX2 = 20520112,
        MIDNIGHT_H_1_FX3 = 20520113,
        MIDNIGHT_H_1_FX4 = 20520114,
        MIDNIGHT_H_2_FX1 = 20520211,
        MIDNIGHT_H_2_FX2 = 20520212,
        MIDNIGHT_H_2_FX3 = 20520213,
        MIDNIGHT_H_3_FX1 = 20520311,
        MIDNIGHT_H_3_FX2 = 20520312,
        MIDNIGHT_H_4_FX1 = 20520411,
    }

    enum SkillFXID_LAMPLIGHT
    {
        NONE = 0,
        LAMPLIGHT_0_FX1 = 530011,
        LAMPLIGHT_1_FX1 = 530111,
        LAMPLIGHT_2_FX1 = 530211,
        LAMPLIGHT_2_FX2 = 530212,
        LAMPLIGHT_3_FX1 = 530311,
        LAMPLIGHT_4_FX1 = 530411,
    }

    enum SkillFXID_LAMPLIGHT_H
    {
        NONE = 0,
        LAMPLIGHT_H_0_FX1 = 20530011,
        LAMPLIGHT_H_1_FX1 = 20530111,
        LAMPLIGHT_H_2_FX1 = 20530211,
        LAMPLIGHT_H_2_FX2 = 20530212,
        LAMPLIGHT_H_3_FX1 = 20530311,
        LAMPLIGHT_H_4_FX1 = 20530411,
    }

    enum SkillFXID_IDOL
    {
        NONE = 0,
        IDOL_0_FX1 = 540011,
        IDOL_1_FX1 = 540111,
        IDOL_1_FX2 = 540112,
        IDOL_2_FX1 = 540211,
        IDOL_3_FX1 = 540311,
        IDOL_3_FX2 = 540312,
        IDOL_4_FX1 = 540411,
        IDOL_4_FX2 = 540412,
    }

    enum SkillFXID_IDOL_H
    {
        NONE = 0,
        IDOL_H_0_FX1 = 20540011,
        IDOL_H_1_FX1 = 20540111,
        IDOL_H_1_FX2 = 20540112,
        IDOL_H_2_FX1 = 20540211,
        IDOL_H_3_FX1 = 20540311,
        IDOL_H_3_FX2 = 20540312,
        IDOL_H_4_FX1 = 20540411,
        IDOL_H_4_FX2 = 20540412,
    }

    enum SkillFXID_DARKTEMPLAR
    {
        NONE = 0,
        DARKTEMPLAR_0_FX1 = 550011,
        DARKTEMPLAR_1_FX1 = 550111,
        DARKTEMPLAR_2_FX1 = 550211,
        DARKTEMPLAR_2_FX2 = 550212,
        DARKTEMPLAR_3_FX1 = 550311,
        DARKTEMPLAR_3_FX2 = 550312,
        DARKTEMPLAR_4_FX1 = 550411,
    }

    enum SkillFXID_DARKTEMPLAR_H
    {
        NONE = 0,
        DARKTEMPLAR_H_0_FX1 = 20550011,
        DARKTEMPLAR_H_1_FX1 = 20550111,
        DARKTEMPLAR_H_2_FX1 = 20550211,
        DARKTEMPLAR_H_2_FX2 = 20550212,
        DARKTEMPLAR_H_3_FX1 = 20550311,
        DARKTEMPLAR_H_3_FX2 = 20550312,
        DARKTEMPLAR_H_4_FX1 = 20550411,
    }

    enum SkillFXID_TAILOR
    {
        NONE = 0,
        TAILOR_0_FX1 = 560011,
        TAILOR_1_FX1 = 560111,
        TAILOR_2_FX1 = 560211,
        TAILOR_3_FX1 = 560311,
        TAILOR_4_FX1 = 560411,
    }

    enum SkillFXID_TAILOR_H
    {
        NONE = 0,
        TAILOR_H_0_FX1 = 20560011,
        TAILOR_H_1_FX1 = 20560111,
        TAILOR_H_2_FX1 = 20560211,
        TAILOR_H_3_FX1 = 20560311,
        TAILOR_H_4_FX1 = 20560411,
    }

    enum SkillFXID_SHAMAN
    {
        NONE = 0,
        SHAMAN_0_FX1 = 570011,
        SHAMAN_1_FX1 = 570111,
        SHAMAN_2_FX1 = 570211,
        SHAMAN_3_FX1 = 570311,
        SHAMAN_4_FX1 = 570411,
    }

    enum SkillFXID_SHAMAN_H
    {
        NONE = 0,
        SHAMAN_H_0_FX1 = 20570011,
        SHAMAN_H_1_FX1 = 20570111,
        SHAMAN_H_2_FX1 = 20570211,
        SHAMAN_H_3_FX1 = 20570311,
        SHAMAN_H_4_FX1 = 20570411,
    }

    enum SkillFXID_SLIME_HERO_01
    {
        NONE = 0,
        SLIME01_HERO_0_FX1 = 9010011,
        SLIME01_HERO_1_FX1 = 9010111,
        SLIME01_HERO_1_FX2 = 9010112,
    }

    enum SkillFXID_SLIME_HERO_02
    {
        NONE = 0,
        SLIME02_HERO_0_FX1 = 9020011,
        SLIME02_HERO_1_FX1 = 9020111,
        SLIME02_HERO_1_FX2 = 9020112,
    }

    enum SkillFXID_SLIME_HERO_03
    {
        NONE = 0,
        SLIME03_HERO_0_FX1 = 9030011,
        SLIME03_HERO_1_FX1 = 9030111,
        SLIME03_HERO_1_FX2 = 9030112,
    }

    enum SkillFXID_SLIME_HERO_04
    {
        NONE = 0,
        SLIME04_HERO_0_FX1 = 9040011,
        SLIME04_HERO_1_FX1 = 9040111,
        SLIME04_HERO_1_FX2 = 9040112,
    }

    enum SkillFXID_SLIME_HERO_05
    {
        NONE = 0,
        SLIME05_HERO_0_FX1 = 9050011,
        SLIME05_HERO_1_FX1 = 9050111,
        SLIME05_HERO_1_FX2 = 9050112,
    }

    enum SkillFXID_SLIME_HERO_06
    {
        NONE = 0,
        SLIME06_HERO_0_FX1 = 9060011,
        SLIME06_HERO_1_FX1 = 9060111,
        SLIME06_HERO_1_FX2 = 9060112,
    }

    enum SkillFXID_SLIME01
    {
        NONE = 0,
        SLIME01_0_FX1 = 10010011,
        SLIME01_1_FX1 = 10010111,
        SLIME01_1_FX2 = 10010112,
    }

    enum SkillFXID_SLIME02
    {
        NONE = 0,
        SLIME02_0_FX1 = 10020011,
        SLIME02_1_FX1 = 10020111,
        SLIME02_1_FX2 = 10020112,
    }

    enum SkillFXID_SLIME03
    {
        NONE = 0,
        SLIME03_0_FX1 = 10030011,
        SLIME03_1_FX1 = 10030111,
        SLIME03_1_FX2 = 10030112,
    }

    enum SkillFXID_SLIME04
    {
        NONE = 0,
        SLIME04_0_FX1 = 10040011,
        SLIME04_1_FX1 = 10040111,
        SLIME04_1_FX2 = 10040112,
    }

    enum SkillFXID_SLIME05
    {
        NONE = 0,
        SLIME05_0_FX1 = 10050011,
        SLIME05_1_FX1 = 10050111,
        SLIME05_1_FX2 = 10050112,
    }

    enum SkillFXID_SLIME06
    {
        NONE = 0,
        SLIME06_0_FX1 = 10060011,
        SLIME06_1_FX1 = 10060111,
        SLIME06_1_FX2 = 10060112,
    }

    enum SkillFXID_MUSHROOM01
    {
        NONE = 0,
        MUSHROM01_0_FX1 = 10070011,
        MUSHROM01_1_FX1 = 10070111,
    }

    enum SkillFXID_MUSHROOM02
    {
        NONE = 0,
        MUSHROM02_0_FX1 = 10080011,
        MUSHROM02_1_FX1 = 10080111,
    }

    enum SkillFXID_MUSHROOM03
    {
        NONE = 0,
        MUSHROM03_0_FX1 = 10090011,
        MUSHROM03_1_FX1 = 10090111,
    }

    enum SkillFXID_MUSHROOM04
    {
        NONE = 0,
        MUSHROM04_0_FX1 = 10100011,
        MUSHROM04_1_FX1 = 10100111,
    }

    enum SkillFXID_MUSHROOM05
    {
        NONE = 0,
        MUSHROM05_0_FX1 = 10110011,
        MUSHROM05_1_FX1 = 10110111,
    }

    enum SkillFXID_MUSHROOM06
    {
        NONE = 0,
        MUSHROM06_0_FX1 = 10120011,
        MUSHROM06_1_FX1 = 10120111,
    }

    enum SkillFXID_SUITCAT
    {
        NONE = 0,
        SUITCAT_0_FX1 = 30010011,
        SUITCAT_2_FX1 = 30010211,
        SUITCAT_3_FX1 = 30010311,
    }

    enum SkillFXID_JACKRABBIT
    {
        NONE = 0,
        JACKRABBIT_0_FX1 = 30020011,
        JACKRABBIT_2_FX1 = 30020211,
        JACKRABBIT_3_FX1 = 30020311,
    }

    enum SkillFXID_EVILPET
    {
        NONE = 0,
        EVILPET_0_FX1 = 30030011,
        EVILPET_1_FX1 = 30030111,
        EVILPET_2_FX1 = 30030211,
        EVILPET_3_FX1 = 30030311,
        EVILPET_4_FX1 = 30030411,
    }

    enum SkillFXID_CAKE
    {
        NONE = 0,
        CAKE_0_FX1 = 30040011,
        CAKE_2_FX1 = 30040211,
        CAKE_3_FX1 = 30040311,
    }

    enum SkillFXType
    {
        NONE = 0,
        ATTACK = 1,
        ATTACK_ADDMP = 2,
        ATTACK_BUFFEXIT = 3,
        ATTACK_BUFFEXIT_FORCE = 4,
        CUSTOM = 5,
        HEAL = 6,
        BUFF = 7,
        BUFF_BUFFEXIT = 8,
        BUFF_MULTICOUNT = 9,
        DEBUFF = 10,
        WARP = 11,
        TICK = 12,
        TICK_BUFF = 13,
        TICK_FOLLOW = 14,
        TICK_CURE = 15,
        CURE = 16,
        CURE_BUFFEXIT = 17,
        CURE_CC = 18,
        REMOVE_BUFF = 19,
        CHANGE_SKILLFX = 20,
        CHANGE_BUFF = 21,
        CHANGE_BUFF_3PREV1POST = 22,
        ADDMP = 23,
        ADDHP_RATIO = 24,
        SPAWN = 25,
        QUEEN_SIG_ADDHP_RATIO = 26,
    }

    enum SkillExtraID
    {
        NONE = 0,
        DEATHSCYTHE_SIGNATURE_LV0 = 4301,
        DEATHSCYTHE_SIGNATURE_LV10 = 4302,
        DEATHSCYTHE_SIGNATURE_LV20 = 4303,
        DEATHSCYTHE_SIGNATURE_LV30 = 4304,
        SWORDCAT_SIGNATURE_LV30 = 2501,
        GAMBLER_SIGNATURE_LV20 = 1301,
        COOK_SIGNATURE_LV0 = 2101,
        COOK_SIGNATURE_LV10 = 2102,
        COOK_SIGNATURE_LV20 = 2103,
        COOK_SIGNATURE_LV30 = 2104,
        IDOL_SIGNATURE_LV10 = 5401,
        IDOL_SIGNATURE_LV20 = 5402,
        IDOL_SIGNATURE_LV30 = 5403,
        AKIMBO_SIGNATURE_LV0 = 3801,
        AKIMBO_SIGNATURE_LV10 = 3802,
        AKIMBO_SIGNATURE_LV20 = 3803,
        DUALCROSS_SIGNATURE_LV0 = 3201,
        DUALCROSS_SIGNATURE_LV10 = 3202,
        DUALCROSS_SIGNATURE_LV20 = 3203,
        DUALCROSS_SIGNATURE_LV30 = 3204,
        MIKO_SIGNATURE_LV20 = 3601,
        MIKO_SIGNATURE_LV30 = 3602,
        MIDDLE_SIGANTURE_LV0 = 2701,
        MIDDLE_SIGANTURE_LV10 = 2702,
        MIDDLE_SIGANTURE_LV20 = 2703,
        MIDDLE_SIGANTURE_LV30 = 2704,
        FOXY_SIGNATURE_LV0 = 3401,
        FOXY_SIGNATURE_LV10 = 3402,
        FOXY_SIGNATURE_LV20 = 3403,
        FOXY_SIGNATURE_LV30 = 3404,
        MIDNIGHT_SIGNATURE_LV0 = 5201,
        MIDNIGHT_SIGNATURE_LV10 = 5202,
        MIDNIGHT_SIGNATURE_LV20 = 5203,
        MIDNIGHT_SIGNATURE_LV30 = 5204,
        NUN_SIGNATURE_LV0 = 1901,
        NUN_SIGNATURE_LV10 = 1902,
        NUN_SIGNATURE_LV20 = 1903,
        NUN_SIGNATURE_LV30 = 1904,
        HIGHELF_SIGNATURE_LV0 = 901,
        HIGHELF_SIGNATURE_LV10 = 902,
        HIGHELF_SIGNATURE_LV20 = 903,
        HIGHELF_SIGNATURE_LV30 = 904,
        PAJAMA_SIGNATURE_LV0 = 5101,
        PAJAMA_SIGNATURE_LV10 = 5102,
        PAJAMA_SIGNATURE_LV20 = 5103,
        PAJAMA_SIGNATURE_LV30 = 5104,
    }

    struct SkillFXID_Converter
    {
        static /*0x15110c4*/ System.Type GetEnumType(string enumName);
        static /*0x15111e4*/ System.Enum GetEnumByUnitID(int _nUnitID, Battle.SkillFXID _eSkillFXID);
        static /*0x1511404*/ Battle.SkillFXID IntToEnum(int _nSkillFXID);
        static /*0x1511408*/ string EnumToString(Battle.SkillFXID eType);
        static /*0x15114fc*/ Battle.SkillFXID StringToEnum(string sType);
    }
}

namespace OneStore
{
    class ALC_CallbackManager : UnityEngine.MonoBehaviour
    {
        static /*0x0*/ System.Action<string> CheckLicenseGrantedEvent;
        static /*0x8*/ System.Action CheckLicenseDeniedEvent;
        static /*0x10*/ System.Action<string> CheckLicenseErrorEvent;
        static /*0x18*/ System.Action<bool> VerifyLicenseEvent;
        static /*0x20*/ System.Collections.Generic.Dictionary<OneStore.ALC_CallbackManager.CallBackType, string> definedString;

        static /*0x1200298*/ ALC_CallbackManager();
        static /*0x11ff5f0*/ void add_CheckLicenseGrantedEvent(System.Action<string> value);
        static /*0x11ff6e4*/ void remove_CheckLicenseGrantedEvent(System.Action<string> value);
        static /*0x11ff7d8*/ void add_CheckLicenseDeniedEvent(System.Action value);
        static /*0x11ff8d0*/ void remove_CheckLicenseDeniedEvent(System.Action value);
        static /*0x11ff9c8*/ void add_CheckLicenseErrorEvent(System.Action<string> value);
        static /*0x11ffac0*/ void remove_CheckLicenseErrorEvent(System.Action<string> value);
        static /*0x11ffbb8*/ void add_VerifyLicenseEvent(System.Action<bool> value);
        static /*0x11ffcb0*/ void remove_VerifyLicenseEvent(System.Action<bool> value);
        static /*0x120009c*/ string FindStringFromCallBackType(string data, OneStore.ALC_CallbackManager.CallBackType type);
        /*0x1200290*/ ALC_CallbackManager();
        /*0x11ffda8*/ void CheckLicenseListener(string callback);
        /*0x12001d4*/ void VerifyListener(string callback);

        enum CallBackType
        {
            Granted = 0,
            Denied = 1,
            ErrorResult = 2,
        }
    }

    class ALC_Manager
    {
        static /*0x0*/ UnityEngine.AndroidJavaObject requestAdapter;
        static /*0x8*/ UnityEngine.AndroidJavaClass jClass;

        static /*0x12003b4*/ ALC_Manager();
        static /*0x1200524*/ void CheckLicense(string base64encodedPublicKey, string policy);
        static /*0x1200650*/ void VerifyLicense(string base64encodedPublicKey, string signedData, string signature);
        static /*0x12007b0*/ void Destroy();
        /*0x12008dc*/ ALC_Manager();
        /*0x120051c*/ void Finalize();
    }

    class ALC_Response
    {
        /*0x10*/ string license;
        /*0x18*/ string signature;

        /*0x12009d0*/ ALC_Response();
        /*0x12008e4*/ string ToString();
    }

    class ErrorResult
    {
        /*0x10*/ int code;
        /*0x18*/ string description;

        /*0x114d8c0*/ ErrorResult();
        /*0x114d7a8*/ string ToString();
    }

    class ALC_ResultListener : UnityEngine.MonoBehaviour
    {
        static /*0x0*/ System.Action<string, string> PrintLog;

        static /*0x12009d8*/ void add_PrintLog(System.Action<string, string> value);
        static /*0x1200a94*/ void remove_PrintLog(System.Action<string, string> value);
        /*0x1201460*/ ALC_ResultListener();
        /*0x1200b50*/ void Awake();
        /*0x1200d54*/ void OnDestroy();
        /*0x1200f58*/ void CheckLicenseGrantedEvent(string data);
        /*0x1201200*/ void CheckLicenseDeniedEvent();
        /*0x120129c*/ void CheckLicenseErrorEvent(string result);
        /*0x1201390*/ void VerifyLicenseEvent(bool result);
        /*0x120145c*/ void ALC_ResultListener_PrintLog(string arg1, string arg2);

        class ErrorType
        {
            static int SERVICE_UNAVAILABLE = 2000;
            static int ERROR_DATA_PARSING = 2001;
            static int SERVICE_TIMEOUT = 2100;
            static int USER_LOGIN_CANCELED = 2101;
            static int ONESTORE_SERVICE_INSTALLING = 2102;
            static int INSTALL_USER_CANCELED = 2103;
            static int NOT_FOREGROUND = 2104;
            static int RESULT_SERVICE_UNAVAILABLE = 2;
            static int RESULT_ALC_UNAVAILABLE = 3;
            static int RESULT_DEVELOPER_ERROR = 5;
            static int RESULT_ERROR = 6;
            static int UNKNOWN_ERROR = -1;
        }
    }
}

namespace Gaa
{
    class GaaIapCallManager
    {
        static /*0x0*/ string TAG;
        static /*0x8*/ UnityEngine.AndroidJavaObject iapRequestAdapter;
        static /*0x10*/ UnityEngine.AndroidJavaClass jc;
        static /*0x18*/ bool isServiceCreated;

        static /*0x10b25e8*/ GaaIapCallManager();
        static /*0x10b2428*/ void ServiceAvailableEvent(bool value);
        static /*0x10b2494*/ bool IsServiceAvailable();
        static /*0x10b24f8*/ void CheckServiceAvailable();
        static /*0x10b2a40*/ void StartConnection(string publicKey);
        static /*0x10b2b40*/ void QueryPurchases(string type);
        static /*0x10b2c44*/ void QueryProductDetails(string[] products, string productType);
        static /*0x10b2ef4*/ void LaunchPurchaseFlow(Gaa.PurchaseFlowParams param);
        static /*0x10b300c*/ void Consume(Gaa.PurchaseData purchaseData, string devPayload);
        static /*0x10b3150*/ void Acknowledge(Gaa.PurchaseData purchaseData, string devPayload);
        static /*0x10b3294*/ void ManageRecurringProduct(Gaa.PurchaseData purchaseData, string recurringAction);
        static /*0x10b33d8*/ void LaunchUpdateOrInstallFlow();
        static /*0x10b3504*/ void LaunchLoginFlow();
        static /*0x10b3630*/ void GetStoreInfo();
        static /*0x10b375c*/ void Destroy();
        /*0x10b3898*/ GaaIapCallManager();
        /*0x10b28ac*/ void Finalize();

        class <>c
        {
            static /*0x0*/ Gaa.GaaIapCallManager.<> <>9;
            static /*0x8*/ System.Converter<string, string> <>9__11_0;

            static /*0xf64710*/ <>c();
            /*0xf64770*/ <>c();
            /*0xf64778*/ string <QueryProductDetails>b__11_0(string i);
        }
    }

    class GaaIapResultListener : UnityEngine.MonoBehaviour
    {
        static /*0x0*/ string TAG;
        static /*0x8*/ System.Action<bool> OnLoadingVisibility;
        static /*0x10*/ System.Action<Gaa.IapResult> PurchaseClientStateResponse;
        static /*0x18*/ System.Action<System.Collections.Generic.List<Gaa.ProductDetail>> OnProductDetailsResponse;
        static /*0x20*/ System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> OnPurchaseUpdatedResponse;
        static /*0x28*/ System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> OnQueryPurchasesResponse;
        static /*0x30*/ System.Action<Gaa.PurchaseData> OnConsumeSuccessResponse;
        static /*0x38*/ System.Action<Gaa.PurchaseData> OnAcknowledgeSuccessResponse;
        static /*0x40*/ System.Action<Gaa.PurchaseData, string> OnManageRecurringResponse;
        static /*0x48*/ System.Action<string, string> SendLog;
        /*0x18*/ System.Collections.Generic.List<Gaa.PurchaseData> purchases;
        /*0x20*/ System.Collections.Generic.List<string> signatures;
        /*0x28*/ System.Collections.Generic.List<Gaa.ProductDetail> products;

        static /*0x10b97cc*/ GaaIapResultListener();
        static /*0x10b618c*/ void add_OnLoadingVisibility(System.Action<bool> value);
        static /*0x10b6284*/ void remove_OnLoadingVisibility(System.Action<bool> value);
        static /*0x10b637c*/ void add_PurchaseClientStateResponse(System.Action<Gaa.IapResult> value);
        static /*0x10b6474*/ void remove_PurchaseClientStateResponse(System.Action<Gaa.IapResult> value);
        static /*0x10b656c*/ void add_OnProductDetailsResponse(System.Action<System.Collections.Generic.List<Gaa.ProductDetail>> value);
        static /*0x10b6664*/ void remove_OnProductDetailsResponse(System.Action<System.Collections.Generic.List<Gaa.ProductDetail>> value);
        static /*0x10b675c*/ void add_OnPurchaseUpdatedResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b6854*/ void remove_OnPurchaseUpdatedResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b694c*/ void add_OnQueryPurchasesResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b6a44*/ void remove_OnQueryPurchasesResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b6b3c*/ void add_OnConsumeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6c34*/ void remove_OnConsumeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6d2c*/ void add_OnAcknowledgeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6e24*/ void remove_OnAcknowledgeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6f1c*/ void add_OnManageRecurringResponse(System.Action<Gaa.PurchaseData, string> value);
        static /*0x10b7014*/ void remove_OnManageRecurringResponse(System.Action<Gaa.PurchaseData, string> value);
        static /*0x10b710c*/ void add_SendLog(System.Action<string, string> value);
        static /*0x10b7204*/ void remove_SendLog(System.Action<string, string> value);
        static /*0x10b80d4*/ void HandleError(string tag, Gaa.IapResult iapResult);
        /*0x10b96d4*/ GaaIapResultListener();
        /*0x10b72fc*/ void Awake();
        /*0x10b77a8*/ void OnDestroy();
        /*0x10b7be4*/ void PurchaseClientStateEvent(Gaa.IapResult iapResult);
        /*0x10b7cc4*/ void PurchaseUpdatedSuccessEvent(Gaa.PurchaseData purchaseData, string signature, int count, int totalCount);
        /*0x10b8010*/ void PurchaseUpdatedErrorEvent(Gaa.IapResult iapResult);
        /*0x10b83d8*/ void QueryPurchasesSuccessEvent(Gaa.PurchaseData purchaseData, string signature, int count, int totalCount);
        /*0x10b8724*/ void QueryPurchasesErrorEvent(Gaa.IapResult iapResult);
        /*0x10b87e8*/ void ProductDetailsSuccessEvent(Gaa.ProductDetail productDetail, int count, int totalCount);
        /*0x10b8bd0*/ void ProductDetailsErrorEvent(Gaa.IapResult iapResult);
        /*0x10b8c94*/ void ConsumeSuccessEvent(Gaa.PurchaseData purchaseData);
        /*0x10b8e30*/ void ConsumeErrorEvent(Gaa.IapResult iapResult);
        /*0x10b8ef4*/ void AcknowledgeSuccessEvent(Gaa.PurchaseData purchaseData);
        /*0x10b9090*/ void AcknowledgeErrorEvent(Gaa.IapResult iapResult);
        /*0x10b9154*/ void RecurringSuccessEvent(Gaa.PurchaseData purchaseData, string action);
        /*0x10b9304*/ void RecurringErrorEvent(Gaa.IapResult iapResult);
        /*0x10b93c8*/ void StoreInfoEvent(string result);
        /*0x10b948c*/ void LoginFlowEvent(Gaa.IapResult iapResult);
        /*0x10b95b0*/ void UpdateOrInstallFlowEvent(Gaa.IapResult iapResult);

        class <>c
        {
            static /*0x0*/ Gaa.GaaIapResultListener.<> <>9;
            static /*0x8*/ System.Comparison<Gaa.ProductDetail> <>9__38_0;

            static /*0xf64798*/ <>c();
            /*0xf647f8*/ <>c();
            /*0xf64800*/ int <ProductDetailsSuccessEvent>b__38_0(Gaa.ProductDetail a, Gaa.ProductDetail b);
        }
    }

    class PurchaseResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;
        /*0x18*/ Gaa.PurchaseData purchaseData;
        /*0x20*/ string signature;
        /*0x28*/ int count;
        /*0x2c*/ int totalCount;

        /*0x101c634*/ PurchaseResponse();
        /*0x101c434*/ string ToString();
    }

    class Signature
    {
        /*0x10*/ string signature;

        /*0xe2aab8*/ Signature();
        /*0xe2aa3c*/ string ToString();
    }

    class ProductDetailResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;
        /*0x18*/ Gaa.ProductDetail productDetail;
        /*0x20*/ int count;
        /*0x24*/ int totalCount;

        /*0x100e6e8*/ ProductDetailResponse();
        /*0x100e520*/ string ToString();
    }

    class RecurringResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;
        /*0x18*/ Gaa.PurchaseData purchaseData;
        /*0x20*/ string signature;
        /*0x28*/ string action;

        /*0x11c3964*/ RecurringResponse();
        /*0x11c37bc*/ string ToString();
    }

    class ProductDetail
    {
        /*0x10*/ string productId;
        /*0x18*/ string type;
        /*0x20*/ string price;
        /*0x28*/ string priceAmountMicros;
        /*0x30*/ string priceCurrencyCode;
        /*0x38*/ string title;

        /*0x100e518*/ ProductDetail();
        /*0x100e340*/ string ToString();
    }

    class PurchaseData
    {
        /*0x10*/ string orderId;
        /*0x18*/ string packageName;
        /*0x20*/ string productId;
        /*0x28*/ long purchaseTime;
        /*0x30*/ string purchaseId;
        /*0x38*/ string purchaseToken;
        /*0x40*/ string developerPayload;
        /*0x48*/ int purchaseState;
        /*0x4c*/ int recurringState;
        /*0x50*/ int acknowledgeState;

        /*0x101c3e4*/ PurchaseData();
        /*0x101c0c4*/ bool IsAcknowledged();
        /*0x101c0d4*/ string ToString();
    }

    class IapResultResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;

        /*0xd20a50*/ IapResultResponse();
        /*0xd20a30*/ string ToString();
    }

    class IapResult
    {
        /*0x10*/ int code;
        /*0x18*/ string message;

        /*0xd20a28*/ IapResult();
        /*0xd20828*/ bool IsSuccess();
        /*0xd20838*/ string ToString();
    }

    class PurchaseFlowParams
    {
        /*0x10*/ string productId;
        /*0x18*/ string productType;
        /*0x20*/ string productName;
        /*0x28*/ string devPayload;
        /*0x30*/ string gameUserId;
        /*0x38*/ bool promotionApplicable;

        /*0x101c3ec*/ PurchaseFlowParams();
    }

    class ResponseCode
    {
        static int RESULT_OK = 0;
        static int RESULT_USER_CANCELED = 1;
        static int RESULT_SERVICE_UNAVAILABLE = 2;
        static int RESULT_BILLING_UNAVAILABLE = 3;
        static int RESULT_ITEM_UNAVAILABLE = 4;
        static int RESULT_DEVELOPER_ERROR = 5;
        static int RESULT_ERROR = 6;
        static int RESULT_ITEM_ALREADY_OWNED = 7;
        static int RESULT_ITEM_NOT_OWNED = 8;
        static int RESULT_FAIL = 9;
        static int RESULT_NEED_LOGIN = 10;
        static int RESULT_NEED_UPDATE = 11;
        static int RESULT_SECURITY_ERROR = 12;
        static int RESULT_BLOCKED_APP = 13;
        static int RESULT_NOT_SUPPORT_SANDBOX = 14;
        static int RESULT_EMERGENCY_ERROR = 99999;
        static int ERROR_DATA_PARSING = 1001;
        static int ERROR_SIGNATURE_VERIFICATION = 1002;
        static int ERROR_ILLEGAL_ARGUMENT = 1003;
        static int ERROR_UNDEFINED_CODE = 1004;
        static int ERROR_SIGNATURE_NOT_VALIDATION = 1005;
        static int ERROR_UPDATE_OR_INSTALL = 1006;
        static int ERROR_SERVICE_DISCONNECTED = 1007;
        static int ERROR_FEATURE_NOT_SUPPORTED = 1008;
        static int ERROR_SERVICE_TIMEOUT = 1009;

        /*0xf29bf0*/ ResponseCode();
    }

    class RecurringAction
    {
        static string REACTIVATE = "reactivate";
        static string CANCEL = "cancel";

        /*0x11c37b4*/ RecurringAction();
    }

    class RecurringState
    {
        static int NON_AUTO_PRODUCT = -1;
        static int RECURRING = 0;
        static int CANCEL = 1;

        /*0x11c396c*/ RecurringState();
    }

    class AcknowledgeState
    {
        static int UNSPECIFIED_STATE = -1;
        static int NOT_ACKNOWLEDGED = 0;
        static int ACKNOWLEDGED = 1;

        /*0x120e008*/ AcknowledgeState();
    }

    class ProductType
    {
        static string INAPP = "inapp";
        static string AUTO = "auto";
        static string ALL = "all";

        /*0x100e6f0*/ ProductType();
    }
}

namespace PUBSDK
{
    class DefinePubSDK
    {
        static string Google = "google.com";
        static string Facebook = "facebook.com";
        static string Apple = "apple.com";

        /*0x11e7e04*/ DefinePubSDK();

        enum PubLoginType
        {
            None = 0,
            Guest = 1,
            Google = 2,
            Facebook = 3,
            Apple = 4,
            End = 5,
        }

        enum PubProcessError
        {
            NONE = 0,
            ERROR_SDKINITIALIZE = 1,
            ERROR_PLATFORMINITIALIZE = 2,
            ERROR_FIREBASEAPP = 3,
            ERROR_AUTH = 4,
            ERROR_LOGIN = 5,
            ERROR_NOTLOGIN = 6,
            ERROR_LOGOUT = 7,
            ERROR_ALREADYLOGIN = 8,
            ERROR_GETTOKEN = 9,
            ERROR_ALREADYLINKPLATFORM = 10,
            ERROR_ALREADYUNLINKPLATFORM = 11,
            ERROR_LINKPLATFORM = 12,
            ERROR_UNLINKPLATFORM = 13,
            ERORR_PUSHTOKEN = 14,
            ERROR_INAPPPURCHASE = 15,
        }
    }

    class PubSDKProcesser : UnityEngine.MonoBehaviour, UnityEngine.Purchasing.IStoreListener
    {
        static /*0x0*/ string FbPushToken;
        static /*0x8*/ UnityEngine.Purchasing.IStoreController storeController;
        static /*0x10*/ UnityEngine.Purchasing.IExtensionProvider extensionProvider;
        static /*0x18*/ PUBSDK.PubSDKProcesser instance;
        static /*0x20*/ bool isInitialized;
        /*0x18*/ System.Action OnFirebaseInitSuccessEvent;
        /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> OnFirebaseInitFailEvent;
        /*0x28*/ System.Action OnRequestFirebaseAuthEvent;
        /*0x30*/ bool IsInitializedPush;
        /*0x38*/ System.Action<UnityEngine.Purchasing.Product> OnReceiptEvent;
        /*0x40*/ System.Action OnIAPInitializeEvent;
        /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> OnPurchaseFailEvent;
        /*0x50*/ System.Collections.Generic.List<UnityEngine.Purchasing.Product> liProductData;
        /*0x58*/ System.Collections.Generic.List<PUBSDK.PubReceiptRecord> liReceiptRecord;
        /*0x60*/ UnityEngine.SignInWithApple.SignInWithApple apple;
        /*0x68*/ Google.GoogleSignInUser googleUser;
        /*0x70*/ PUBSDK.PubSDKSettings settings;

        static /*0x101bd08*/ PubSDKProcesser();
        static /*0x1012614*/ PUBSDK.PubSDKProcesser get_Instance();
        static /*0x101aa18*/ bool get_IsInitialized();
        static /*0x101aa7c*/ void set_IsInitialized(bool value);
        static /*0x1012b38*/ void Initialize(System.Action onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101bd00*/ PubSDKProcesser();
        /*0x1012f8c*/ void add_OnRequestFirebaseAuthEvent(System.Action value);
        /*0x1013530*/ void remove_OnRequestFirebaseAuthEvent(System.Action value);
        /*0x10189ac*/ Firebase.FirebaseApp get_FbApp();
        /*0x1018a08*/ Firebase.Auth.FirebaseAuth get_FbAuth();
        /*0x1018a88*/ Firebase.Auth.FirebaseUser get_FbUser();
        /*0x1018ab8*/ void CallbackCheckAndFixDependencies(System.Threading.Tasks.Task<Firebase.DependencyStatus> task);
        /*0x1010e70*/ void EventLog(string key, string value);
        /*0x1018ee8*/ bool IsLoggined();
        /*0x1018f24*/ bool IsGuest();
        /*0x1018f58*/ void RequestAnonymous(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101902c*/ void RequestPlatformLogin(Firebase.Auth.Credential credential, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101910c*/ void RequestLinkPlatform(Firebase.Auth.Credential credential, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail, System.Action onException);
        /*0x10143ac*/ void GetAuthToken(bool bRefresh, System.Action<string> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x10191f4*/ void AuthSignOut(System.Action onSuccess);
        /*0x101923c*/ void OnMessageReceived(object sender, Firebase.Messaging.MessageReceivedEventArgs e);
        /*0x1019240*/ void OnTokenReceived(object sender, Firebase.Messaging.TokenReceivedEventArgs e);
        /*0x1012db8*/ void GetPushToken(System.Action<string> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onError);
        /*0x10192c8*/ string GetPushToken();
        /*0x101932c*/ System.Threading.Tasks.Task SubscribeTopic(bool subscribe, string topic);
        /*0x10179e8*/ void SetCrashlyticsLog(string log);
        /*0x10179a4*/ void SetCrashlyticsKey(string key, string value);
        /*0x1019448*/ System.Threading.Tasks.Task<bool> TaskException(System.Threading.Tasks.Task task, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail, PUBSDK.DefinePubSDK.PubProcessError error);
        /*0x1019588*/ bool IsLinkPlatform(string provider);
        /*0x1019698*/ bool IsLinkPlatformVerifyEMail(string provider, string eMail);
        /*0x1017bd0*/ void GetLinkEmail(System.Collections.Generic.Dictionary<int, string> mail);
        /*0x1017a28*/ System.Collections.Generic.List<PUBSDK.DefinePubSDK.PubLoginType> GetLinkPlatformList();
        /*0x1019834*/ PUBSDK.DefinePubSDK.PubLoginType GetReturnProviderLoginType(string provider);
        /*0x1012990*/ bool get_IsPurchaseInitialized();
        /*0x1016aac*/ void InitializePurchasing(System.Collections.Generic.List<UnityEngine.Purchasing.ProductDefinition> productlist, System.Action onInitialized);
        /*0x10198fc*/ void OnInitialized(UnityEngine.Purchasing.IStoreController controller, UnityEngine.Purchasing.IExtensionProvider extensions);
        /*0x1019a48*/ void OnInitializeFailed(UnityEngine.Purchasing.InitializationFailureReason error);
        /*0x1019ab4*/ void OnPurchaseFailed(UnityEngine.Purchasing.Product product, UnityEngine.Purchasing.PurchaseFailureReason failureReason);
        /*0x1019b14*/ UnityEngine.Purchasing.PurchaseProcessingResult ProcessPurchase(UnityEngine.Purchasing.PurchaseEventArgs purchaseEvent);
        /*0x1019dd0*/ string GetProductID(UnityEngine.Purchasing.Product _product);
        /*0x10175a4*/ void RestorePurchase(System.Action<PUBSDK.PubReceiptRecord> onRestore);
        /*0x1019f04*/ System.Collections.IEnumerator CoRestorePurchase(System.Action<PUBSDK.PubReceiptRecord> onRestore);
        /*0x1016e98*/ void BuyProduct(string productId, string customKey, System.Action<UnityEngine.Purchasing.Product> callback, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101a024*/ System.Collections.Generic.List<UnityEngine.Purchasing.Product> GetProductData();
        /*0x1019f7c*/ void AddReceipt(PUBSDK.PubReceiptRecord record);
        /*0x101a02c*/ void SetReceiptList(System.Collections.Generic.List<PUBSDK.PubReceiptRecord> receipt);
        /*0x1019d64*/ void ClearReceiptList();
        /*0x1019cb0*/ System.Collections.Generic.List<PUBSDK.PubReceiptRecord> GetReceiptList();
        /*0x101a0c0*/ void InitOneStore();
        /*0x101a0c4*/ bool get_IsInitializedApple();
        /*0x101a130*/ void OnAppleLoginCallback(bool isLogin, UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs cb, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101a50c*/ string GenerateNonce(string _rawNonce);
        /*0x101a670*/ void OnCompleteInitialize();
        /*0x101a73c*/ void OnHideUnity(bool bShow);
        /*0x101a6e0*/ bool IsFacebookInitialized();
        /*0x101a758*/ bool IsFacebookLoggined();
        /*0x101a7b4*/ string get_WebClientID();
        /*0x101a7d0*/ Google.GoogleSignIn get_GoogleSign();
        /*0x101a82c*/ void GoogleSignOut();
        /*0x101a870*/ bool IsGoogleLoggined();
        /*0x101a880*/ void Awake();
        /*0x101aae8*/ System.Collections.IEnumerator InitSDK(System.Action onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101ab68*/ void InitPlatform();
        /*0x1013d38*/ bool AutoLogin(System.Action<Firebase.Auth.FirebaseUser> onSuccess);
        /*0x1013dc8*/ void Login(PUBSDK.DefinePubSDK.PubLoginType eLoginType, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x1015cac*/ void LinkPlatform(PUBSDK.DefinePubSDK.PubLoginType eLoginType, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101ad88*/ void Logout(PUBSDK.DefinePubSDK.PubLoginType eLoginType, System.Action onFinish);
        /*0x1013abc*/ void Logout(System.Action onFinish);
        /*0x101aff4*/ PUBSDK.PubSDKSettings Settings();
        /*0x101affc*/ void InitFirebase(System.Action onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101ab8c*/ void InitGuestSign();
        /*0x101ab90*/ void InitGoogleSign();
        /*0x101ac4c*/ void InitFacebookSign();
        /*0x101ad84*/ void InitAppleSign();
        /*0x101b0fc*/ void LoginGuest(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b1b4*/ void LoginGoogle(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b288*/ void LoginFacebook(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b554*/ void LoginApple(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b694*/ void LogoutGuest(System.Action onFinish);
        /*0x101b698*/ void LogoutGoogle(System.Action onFinish);
        /*0x101b6d0*/ void LogoutFacebook(System.Action onFinish);
        /*0x101b770*/ void LogoutApple(System.Action onFinish);
        /*0x101b784*/ void LinkGoogle(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b858*/ void LinkFacebook(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101bba8*/ void LinkApple(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101bd80*/ void <CallbackCheckAndFixDependencies>b__13_0(System.Threading.Tasks.Task a);
        /*0x101bd94*/ void <CallbackCheckAndFixDependencies>b__13_1(System.Threading.Tasks.Task a);
        /*0x101bda8*/ PUBSDK.DefinePubSDK.PubLoginType <GetLinkPlatformList>b__33_0(Firebase.Auth.IUserInfo x);
        /*0x101be5c*/ bool <CoRestorePurchase>b__51_0();
        /*0x101be60*/ void <OnAppleLoginCallback>b__62_2();

        class <>c__DisplayClass17_0
        {
            /*0x10*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e194*/ <>c__DisplayClass17_0();
            /*0x108e19c*/ void <RequestAnonymous>b__0(System.Threading.Tasks.Task<Firebase.Auth.FirebaseUser> task);
        }

        struct <RequestAnonymous>d__17 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x40*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x48*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a2b0*/ void MoveNext();
            /*0xa8a2b8*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass18_0
        {
            /*0x10*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e27c*/ <>c__DisplayClass18_0();
            /*0x108e284*/ void <RequestPlatformLogin>b__0(System.Threading.Tasks.Task<Firebase.Auth.FirebaseUser> task);
        }

        struct <RequestPlatformLogin>d__18 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x40*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x48*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x50*/ Firebase.Auth.Credential credential;
            /*0x58*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a2d8*/ void MoveNext();
            /*0xa8a2e0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass19_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ Firebase.Auth.Credential credential;
            /*0x20*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x28*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x30*/ System.Func<Firebase.Auth.IUserInfo, bool> <>9__1;

            /*0x108e364*/ <>c__DisplayClass19_0();
            /*0x108e36c*/ void <RequestLinkPlatform>b__0(System.Threading.Tasks.Task<Firebase.Auth.FirebaseUser> task);
            /*0x108e5a4*/ bool <RequestLinkPlatform>b__1(Firebase.Auth.IUserInfo x);
        }

        struct <RequestLinkPlatform>d__19 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x40*/ Firebase.Auth.Credential credential;
            /*0x48*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x50*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x58*/ System.Action onException;
            /*0x60*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a2c4*/ void MoveNext();
            /*0xa8a2cc*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass20_0
        {
            /*0x10*/ System.Action<string> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e684*/ <>c__DisplayClass20_0();
            /*0x108e68c*/ void <GetAuthToken>b__0(System.Threading.Tasks.Task<string> task);
        }

        class <>c__DisplayClass24_0
        {
            /*0x10*/ System.Action<string> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onError;

            /*0x108e76c*/ <>c__DisplayClass24_0();
            /*0x108e774*/ void <GetPushToken>b__0(System.Threading.Tasks.Task<string> task);
        }

        struct <SubscribeTopic>d__26 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
            /*0x30*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x38*/ string topic;
            /*0x40*/ bool subscribe;
            /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

            /*0xa8a2ec*/ void MoveNext();
            /*0xa8a2f4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        struct <TaskException>d__29 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder<bool> <>t__builder;
            /*0x30*/ System.Threading.Tasks.Task task;
            /*0x38*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x40*/ PUBSDK.DefinePubSDK.PubProcessError error;
            /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

            /*0xa8a300*/ void MoveNext();
            /*0xa8a308*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass30_0
        {
            /*0x10*/ string provider;

            /*0x108e854*/ <>c__DisplayClass30_0();
            /*0x108e85c*/ bool <IsLinkPlatform>b__0(Firebase.Auth.IUserInfo x);
        }

        class <>c__DisplayClass31_0
        {
            /*0x10*/ string provider;

            /*0x108e920*/ <>c__DisplayClass31_0();
            /*0x108e928*/ bool <IsLinkPlatformVerifyEMail>b__0(Firebase.Auth.IUserInfo x);
        }

        class <>c__DisplayClass44_0
        {
            /*0x10*/ UnityEngine.Purchasing.ConfigurationBuilder builder;

            /*0x108e9ec*/ <>c__DisplayClass44_0();
            /*0x108e9f4*/ void <InitializePurchasing>b__0(UnityEngine.Purchasing.ProductDefinition x);
        }

        class <>c__DisplayClass48_0
        {
            /*0x10*/ UnityEngine.Purchasing.PurchaseEventArgs purchaseEvent;

            /*0x108ea20*/ <>c__DisplayClass48_0();
            /*0x108ea28*/ bool <ProcessPurchase>b__0(PUBSDK.PubReceiptRecord x);
        }

        class <CoRestorePurchase>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x28*/ System.Action<PUBSDK.PubReceiptRecord> onRestore;

            /*0x108ed90*/ <CoRestorePurchase>d__51(int <>1__state);
            /*0x108edbc*/ void System.IDisposable.Dispose();
            /*0x108edc0*/ bool MoveNext();
            /*0x108f088*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x108f090*/ void System.Collections.IEnumerator.Reset();
            /*0x108f0d0*/ object System.Collections.IEnumerator.get_Current();
        }

        class <>c__DisplayClass62_0
        {
            /*0x10*/ string nonce;

            /*0x108ea64*/ <>c__DisplayClass62_0();
            /*0x108ea6c*/ void <OnAppleLoginCallback>b__1(char x);
        }

        class <>c
        {
            static /*0x0*/ PUBSDK.PubSDKProcesser.<> <>9;
            static /*0x8*/ System.Func<char, System.Guid> <>9__62_0;
            static /*0x10*/ System.Action <>9__85_0;
            static /*0x18*/ System.Action<bool> <>9__85_3;

            static /*0x108d7e0*/ <>c();
            /*0x108d840*/ <>c();
            /*0x108d848*/ System.Guid <OnAppleLoginCallback>b__62_0(char Matrix4x4);
            /*0x108d8a4*/ void <InitSDK>b__85_0();
            /*0x108d944*/ void <InitSDK>b__85_3(bool _result);
        }

        class <>c__DisplayClass85_0
        {
            /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__1;

            /*0x108eab8*/ <>c__DisplayClass85_0();
            /*0x108eac0*/ void <InitSDK>b__1(PUBSDK.DefinePubSDK.PubProcessError error);
        }

        class <>c__DisplayClass85_1
        {
            /*0x10*/ float fWaitTime;
            /*0x14*/ float fEndTime;

            /*0x108eba0*/ <>c__DisplayClass85_1();
            /*0x108eba8*/ bool <InitSDK>b__2();
        }

        class <InitSDK>d__85 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x28*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x30*/ PUBSDK.PubSDKProcesser.<> <>8__1;
            /*0x38*/ PUBSDK.PubSDKProcesser.<> <>8__2;
            /*0x40*/ System.Action onSuccess;

            /*0x108f0d8*/ <InitSDK>d__85(int <>1__state);
            /*0x108f104*/ void System.IDisposable.Dispose();
            /*0x108f108*/ bool MoveNext();
            /*0x108f76c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x108f774*/ void System.Collections.IEnumerator.Reset();
            /*0x108f7b4*/ object System.Collections.IEnumerator.get_Current();
        }

        class <>c__DisplayClass99_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108ec84*/ <>c__DisplayClass99_0();
            /*0x108ec8c*/ void <LoginGoogle>b__0(System.Threading.Tasks.Task<Google.GoogleSignInUser> task);
        }

        struct <LoginGoogle>d__99 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x40*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a29c*/ void MoveNext();
            /*0xa8a2a4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass100_0
        {
            /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x18*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x20*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;

            /*0x108d9a0*/ <>c__DisplayClass100_0();
            /*0x108d9a8*/ void <LoginFacebook>b__0(Facebook.Unity.ILoginResult cb);
        }

        class <>c__DisplayClass101_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108dbec*/ <>c__DisplayClass101_0();
            /*0x108dbf4*/ void <LoginApple>b__0(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
        }

        class <>c__DisplayClass106_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x28*/ System.Action <>9__2;

            /*0x108dc50*/ <>c__DisplayClass106_0();
            /*0x108dc58*/ void <LinkGoogle>b__1(System.Threading.Tasks.Task<Google.GoogleSignInUser> task);
            /*0x108de00*/ void <LinkGoogle>b__2();
            /*0x108de1c*/ void <LinkGoogle>b__0();
        }

        struct <LinkGoogle>d__106 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x40*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a288*/ void MoveNext();
            /*0xa8a290*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass107_0
        {
            /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x18*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x20*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x28*/ System.Action <>9__2;

            /*0x108de38*/ <>c__DisplayClass107_0();
            /*0x108de40*/ void <LinkFacebook>b__0(Facebook.Unity.ILoginResult cb);
            /*0x108e0f0*/ void <LinkFacebook>b__2();
            /*0x108e110*/ void <LinkFacebook>b__1();
        }

        class <>c__DisplayClass108_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e130*/ <>c__DisplayClass108_0();
            /*0x108e138*/ void <LinkApple>b__0(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
        }
    }

    class PubReceiptRecord
    {
        /*0x10*/ UnityEngine.Purchasing.Product product;
        /*0x18*/ string productid;
        /*0x20*/ string customkey;

        /*0x1018974*/ PubReceiptRecord(string productid, string customkey);
    }

    enum ALCPolicy
    {
        Flexible = 0,
        Strict = 1,
    }

    class PubSDKUtils
    {
        static /*0x101be6c*/ void PubLog(object obj);
        static /*0x101bf34*/ void PubWLog(object obj);
        static /*0x101bffc*/ void PubELog(object obj);
    }

    class PubSDKSettings : UnityEngine.ScriptableObject
    {
        /*0x18*/ string googleClientID;
        /*0x20*/ PUBSDK.ALCPolicy oneStorePolicy;
        /*0x28*/ string oneStorePublicKey;

        /*0x101be64*/ PubSDKSettings();
    }
}

namespace Google
{
    interface FutureAPIImpl<T>
    {
        bool get_Pending();
        Google.GoogleSignInStatusCode get_Status();
        T get_Result();
    }

    class Future<T>
    {
        /*0x0*/ Google.FutureAPIImpl<T> apiImpl;

        Future(Google.FutureAPIImpl<T> impl);
        bool get_Pending();
        Google.GoogleSignInStatusCode get_Status();
        T get_Result();
        System.Collections.IEnumerator WaitForResult(System.Threading.Tasks.TaskCompletionSource<T> tcs);
        bool <WaitForResult>b__8_0();

        class <WaitForResult>d__8<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x0*/ int <>1__state;
            /*0x0*/ object <>2__current;
            /*0x0*/ Google.Future<T> <>4__this;
            /*0x0*/ System.Threading.Tasks.TaskCompletionSource<T> tcs;

            <WaitForResult>d__8(int <>1__state);
            void System.IDisposable.Dispose();
            bool MoveNext();
            object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            void System.Collections.IEnumerator.Reset();
            object System.Collections.IEnumerator.get_Current();
        }
    }

    class GoogleSignIn
    {
        static /*0x0*/ Google.GoogleSignIn theInstance;
        static /*0x8*/ Google.GoogleSignInConfiguration theConfiguration;
        /*0x10*/ Google.ISignInImpl impl;

        static /*0xed415c*/ GoogleSignIn();
        static /*0xed37b0*/ void set_Configuration(Google.GoogleSignInConfiguration value);
        static /*0xed38d4*/ Google.GoogleSignInConfiguration get_Configuration();
        static /*0xed3938*/ Google.GoogleSignIn get_DefaultInstance();
        /*0xed3c3c*/ GoogleSignIn(Google.Impl.GoogleSignInImpl impl);
        /*0xed3c68*/ void EnableDebugLogging(bool flag);
        /*0xed3d28*/ System.Threading.Tasks.Task<Google.GoogleSignInUser> SignIn();
        /*0xed3e74*/ System.Threading.Tasks.Task<Google.GoogleSignInUser> SignInSilently();
        /*0xed3fc4*/ void SignOut();
        /*0xed40ac*/ void Disconnect();

        class SignInException : System.Exception
        {
            /*0x88*/ Google.GoogleSignInStatusCode <Status>k__BackingField;

            /*0xf68b50*/ SignInException(Google.GoogleSignInStatusCode status);
            /*0xf68bc8*/ SignInException(Google.GoogleSignInStatusCode status, string message);
            /*0xf68c48*/ SignInException(Google.GoogleSignInStatusCode status, string message, System.Exception innerException);
            /*0xf68cd8*/ SignInException(Google.GoogleSignInStatusCode status, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
            /*0xf68d70*/ Google.GoogleSignInStatusCode get_Status();
            /*0xf68d78*/ void set_Status(Google.GoogleSignInStatusCode value);
        }
    }

    interface ISignInImpl
    {
        Google.Future<Google.GoogleSignInUser> SignIn();
        Google.Future<Google.GoogleSignInUser> SignInSilently();
        void EnableDebugLogging(bool flag);
        void SignOut();
        void Disconnect();
    }

    class GoogleSignInConfiguration
    {
        /*0x10*/ bool UseGameSignIn;
        /*0x18*/ string WebClientId;
        /*0x20*/ bool RequestAuthCode;
        /*0x21*/ bool ForceTokenRefresh;
        /*0x22*/ bool RequestEmail;
        /*0x23*/ bool RequestIdToken;
        /*0x24*/ bool RequestProfile;
        /*0x25*/ bool HidePopups;
        /*0x28*/ string AccountName;
        /*0x30*/ System.Collections.Generic.IEnumerable<string> AdditionalScopes;

        /*0xed4160*/ GoogleSignInConfiguration();
    }

    enum GoogleSignInStatusCode
    {
        SuccessCached = -1,
        Success = 0,
        ApiNotConnected = 1,
        Canceled = 2,
        Interrupted = 3,
        InvalidAccount = 4,
        Timeout = 5,
        DeveloperError = 6,
        InternalError = 7,
        NetworkError = 8,
        Error = 9,
    }

    class GoogleSignInUser
    {
        /*0x10*/ string <AuthCode>k__BackingField;
        /*0x18*/ string <Email>k__BackingField;
        /*0x20*/ string <IdToken>k__BackingField;
        /*0x28*/ string <DisplayName>k__BackingField;
        /*0x30*/ string <GivenName>k__BackingField;
        /*0x38*/ string <FamilyName>k__BackingField;
        /*0x40*/ System.Uri <ImageUrl>k__BackingField;
        /*0x48*/ string <UserId>k__BackingField;

        /*0xed504c*/ GoogleSignInUser();
        /*0xed4fcc*/ string get_AuthCode();
        /*0xed4fd4*/ void set_AuthCode(string value);
        /*0xed4fdc*/ string get_Email();
        /*0xed4fe4*/ void set_Email(string value);
        /*0xed4fec*/ string get_IdToken();
        /*0xed4ff4*/ void set_IdToken(string value);
        /*0xed4ffc*/ string get_DisplayName();
        /*0xed5004*/ void set_DisplayName(string value);
        /*0xed500c*/ string get_GivenName();
        /*0xed5014*/ void set_GivenName(string value);
        /*0xed501c*/ string get_FamilyName();
        /*0xed5024*/ void set_FamilyName(string value);
        /*0xed502c*/ System.Uri get_ImageUrl();
        /*0xed5034*/ void set_ImageUrl(System.Uri value);
        /*0xed503c*/ string get_UserId();
        /*0xed5044*/ void set_UserId(string value);
    }

    namespace Impl
    {
        class BaseObject : System.IDisposable
        {
            static /*0x0*/ System.Runtime.InteropServices.HandleRef nullSelf;
            /*0x10*/ System.Runtime.InteropServices.HandleRef selfHandleRef;

            static /*0xf88bc8*/ BaseObject();
            static /*0xf88960*/ string OutParamsToString(Google.Impl.BaseObject.OutStringMethod outStringMethod);
            /*0xf88770*/ BaseObject(nint intPtr);
            /*0xf887c0*/ System.Runtime.InteropServices.HandleRef SelfPtr();
            /*0xf888f4*/ void Dispose();

            class OutStringMethod : System.MulticastDelegate
            {
                /*0xda0b3c*/ OutStringMethod(object object, nint method);
                /*0xda0b9c*/ nuint Invoke(byte[] out_bytes, nuint out_size);
                /*0xda0dec*/ System.IAsyncResult BeginInvoke(byte[] out_bytes, nuint out_size, System.AsyncCallback callback, object object);
                /*0xda0e80*/ nuint EndInvoke(System.IAsyncResult result);
            }
        }

        class GoogleSignInImpl : Google.Impl.BaseObject, Google.ISignInImpl
        {
            static string DllName = "native-googlesignin";

            static /*0xed421c*/ nint GoogleSignIn_Create(nint data);
            static /*0xed44a4*/ void GoogleSignIn_EnableDebugLogging(System.Runtime.InteropServices.HandleRef self, bool flag);
            static /*0xed4298*/ bool GoogleSignIn_Configure(System.Runtime.InteropServices.HandleRef self, bool useGameSignIn, string webClientId, bool requestAuthCode, bool forceTokenRefresh, bool requestEmail, bool requestIdToken, bool hidePopups, string[] additionalScopes, int scopeCount, string accountName);
            static /*0xed45ec*/ nint GoogleSignIn_SignIn(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4720*/ nint GoogleSignIn_SignInSilently(System.Runtime.InteropServices.HandleRef self);
            static /*0xed47b8*/ void GoogleSignIn_Signout(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4850*/ void GoogleSignIn_Disconnect(System.Runtime.InteropServices.HandleRef self);
            static /*0xed48d0*/ void GoogleSignIn_DisposeFuture(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4950*/ bool GoogleSignIn_Pending(System.Runtime.InteropServices.HandleRef self);
            static /*0xed49d8*/ nint GoogleSignIn_Result(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4a54*/ int GoogleSignIn_Status(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4ad0*/ nuint GoogleSignIn_GetServerAuthCode(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4b70*/ nuint GoogleSignIn_GetDisplayName(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4c10*/ nuint GoogleSignIn_GetEmail(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4cb0*/ nuint GoogleSignIn_GetFamilyName(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4d50*/ nuint GoogleSignIn_GetGivenName(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4df0*/ nuint GoogleSignIn_GetIdToken(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4e90*/ nuint GoogleSignIn_GetImageUrl(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4f2c*/ nuint GoogleSignIn_GetUserId(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4168*/ nint GetPlayerActivity();
            /*0xed3a70*/ GoogleSignInImpl(Google.GoogleSignInConfiguration configuration);
            /*0xed447c*/ void EnableDebugLogging(bool flag);
            /*0xed4534*/ Google.Future<Google.GoogleSignInUser> SignIn();
            /*0xed4668*/ Google.Future<Google.GoogleSignInUser> SignInSilently();
            /*0xed47a0*/ void SignOut();
            /*0xed4838*/ void Disconnect();
        }

        class NativeFuture : Google.Impl.BaseObject, Google.FutureAPIImpl<Google.GoogleSignInUser>
        {
            /*0x2b439d4*/ NativeFuture(nint ptr);
            /*0x2b43a48*/ void Dispose();
            /*0x2b43a7c*/ bool get_Pending();
            /*0x2b43a98*/ Google.GoogleSignInUser get_Result();
            /*0x2b43e30*/ Google.GoogleSignInStatusCode get_Status();

            class <>c__DisplayClass5_0
            {
                /*0x10*/ System.Runtime.InteropServices.HandleRef userPtr;

                /*0x1088ce4*/ <>c__DisplayClass5_0();
                /*0x1088cec*/ nuint <get_Result>b__0(byte[] out_string, nuint out_size);
                /*0x1088d08*/ nuint <get_Result>b__1(byte[] out_string, nuint out_size);
                /*0x1088d24*/ nuint <get_Result>b__2(byte[] out_string, nuint out_size);
                /*0x1088d40*/ nuint <get_Result>b__3(byte[] out_string, nuint out_size);
                /*0x1088d5c*/ nuint <get_Result>b__4(byte[] out_string, nuint out_size);
                /*0x1088d78*/ nuint <get_Result>b__5(byte[] out_string, nuint out_size);
                /*0x1088d94*/ nuint <get_Result>b__6(byte[] out_string, nuint out_size);
                /*0x1088db0*/ nuint <get_Result>b__7(byte[] out_string, nuint out_size);
            }
        }

        class SignInHelperObject : UnityEngine.MonoBehaviour
        {
            static /*0x0*/ Google.Impl.SignInHelperObject instance;

            static /*0xe29eb4*/ Google.Impl.SignInHelperObject get_Instance();
            /*0xe29fdc*/ SignInHelperObject();
        }
    }
}

namespace GoogleMobileAds
{
    namespace Mediation
    {
        class FyberClientFactory
        {
            static /*0x10b1a40*/ GoogleMobileAds.Common.Mediation.Fyber.IFyberClient CreateFyberClient();
            /*0x10b1f18*/ FyberClientFactory();
        }

        class IronSourceClientFactory
        {
            static /*0x1574388*/ GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient IronSourceInstance();
            /*0x157467c*/ IronSourceClientFactory();
        }

        class UnityAdsClientFactory
        {
            static /*0x10c4440*/ GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient UnityAdsInstance();
            /*0x10c4ac4*/ UnityAdsClientFactory();
        }

        class VungleClientFactory
        {
            static /*0xdfd670*/ GoogleMobileAds.Common.Mediation.Vungle.IVungleClient VungleInstance();
            /*0xdfdfe4*/ VungleClientFactory();
        }
    }

    namespace Android
    {
        namespace Mediation
        {
            namespace Vungle
            {
                class VungleClient : GoogleMobileAds.Common.Mediation.Vungle.IVungleClient
                {
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.Vungle.VungleClient instance;

                    static /*0xdfdf84*/ VungleClient();
                    static /*0xdfd76c*/ GoogleMobileAds.Android.Mediation.Vungle.VungleClient get_Instance();
                    /*0xdfd764*/ VungleClient();
                    /*0xdfd7d0*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    /*0xdfd81c*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    /*0xdfda2c*/ GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    /*0xdfde3c*/ string GetCurrentConsentMessageVersion();
                }
            }

            namespace UnityAds
            {
                class UnityAdsClient : GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient
                {
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.UnityAds.UnityAdsClient instance;

                    static /*0x10c4a64*/ UnityAdsClient();
                    static /*0x10c4620*/ GoogleMobileAds.Android.Mediation.UnityAds.UnityAdsClient get_Instance();
                    /*0x10c4618*/ UnityAdsClient();
                    /*0x10c4684*/ void SetGDPRConsentMetaData(bool consent);
                }
            }

            namespace IronSource
            {
                class IronSourceClient : GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient
                {
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.IronSource.IronSourceClient instance;

                    static /*0x157461c*/ IronSourceClient();
                    static /*0x1574484*/ GoogleMobileAds.Android.Mediation.IronSource.IronSourceClient get_Instance();
                    /*0x157447c*/ IronSourceClient();
                    /*0x15744e8*/ void SetConsent(bool consent);
                }
            }

            namespace Fyber
            {
                class FyberClient : GoogleMobileAds.Common.Mediation.Fyber.IFyberClient
                {
                    static string INNERACTIVE_AD_MANAGER_CLASS = "com.fyber.inneractive.sdk.external.InneractiveAdManager";
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.Fyber.FyberClient instance;

                    static /*0x10b1eb8*/ FyberClient();
                    static /*0x10b1ae4*/ GoogleMobileAds.Android.Mediation.Fyber.FyberClient get_Instance();
                    /*0x10b1adc*/ FyberClient();
                    /*0x10b1b48*/ void SetGDPRConsent(bool consent);
                    /*0x10b1c7c*/ void SetGDPRConsentString(string consentString);
                    /*0x10b1d84*/ void ClearGDPRConsentData();
                }
            }
        }
    }

    namespace Common
    {
        namespace Mediation
        {
            namespace Vungle
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.Vungle.IVungleClient
                {
                    /*0x11f43f0*/ DummyClient();
                    /*0x11f43f8*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    /*0x11f43fc*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    /*0x11f4400*/ GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    /*0x11f4408*/ string GetCurrentConsentMessageVersion();
                }

                interface IVungleClient
                {
                    void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    string GetCurrentConsentMessageVersion();
                }
            }

            namespace UnityAds
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient
                {
                    /*0x11f43e4*/ DummyClient();
                    /*0x11f43ec*/ void SetGDPRConsentMetaData(bool consent);
                }

                interface IUnityAdsClient
                {
                    void SetGDPRConsentMetaData(bool consent);
                }
            }

            namespace IronSource
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient
                {
                    /*0x11f43d8*/ DummyClient();
                    /*0x11f43e0*/ void SetConsent(bool consent);
                }

                interface IIronSourceClient
                {
                    void SetConsent(bool consent);
                }
            }

            namespace Fyber
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.Fyber.IFyberClient
                {
                    /*0x11f43c4*/ DummyClient();
                    /*0x11f43cc*/ void SetGDPRConsent(bool consent);
                    /*0x11f43d0*/ void SetGDPRConsentString(string consentString);
                    /*0x11f43d4*/ void ClearGDPRConsentData();
                }

                interface IFyberClient
                {
                    void SetGDPRConsent(bool consent);
                    void SetGDPRConsentString(string consentString);
                    void ClearGDPRConsentData();
                }
            }
        }
    }

    namespace Api
    {
        namespace Mediation
        {
            class MediationExtras
            {
                /*0x10*/ System.Collections.Generic.Dictionary<string, string> <Extras>k__BackingField;

                /*0x2b3aa40*/ MediationExtras();
                /*0x2b3aa30*/ System.Collections.Generic.Dictionary<string, string> get_Extras();
                /*0x2b3aa38*/ void set_Extras(System.Collections.Generic.Dictionary<string, string> value);
                string get_AndroidMediationExtraBuilderClassName();
                string get_IOSMediationExtraBuilderClassName();
            }

            namespace Vungle
            {
                enum VungleConsent
                {
                    UNKNOWN = 0,
                    ACCEPTED = 1,
                    DENIED = 2,
                }

                class Vungle
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.Vungle.IVungleClient client;

                    static /*0xdfd714*/ Vungle();
                    static /*0xdfd2d0*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    static /*0xdfd3b4*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    static /*0xdfd4ac*/ GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    static /*0xdfd58c*/ string GetCurrentConsentMessageVersion();
                    static /*0xdfd66c*/ GoogleMobileAds.Common.Mediation.Vungle.IVungleClient GetVungleClient();
                    /*0xdfd70c*/ Vungle();
                }

                class VungleInterstitialMediationExtras : GoogleMobileAds.Api.Mediation.Vungle.VungleMediationExtras
                {
                    /*0xdfdfec*/ VungleInterstitialMediationExtras();
                    /*0xdfdffc*/ string get_AndroidMediationExtraBuilderClassName();
                }

                class VungleMediationExtras : GoogleMobileAds.Api.Mediation.MediationExtras
                {
                    static string AllPlacementsKey = "all_placements";
                    static string UserIdKey = "user_id";
                    static string SoundEnabledKey = "sound_enabled";

                    /*0xdfdff4*/ VungleMediationExtras();
                    /*0xdfe040*/ string get_IOSMediationExtraBuilderClassName();
                    /*0xdfe084*/ void SetAllPlacements(string[] allPlacements);
                    /*0xdfe128*/ void SetUserId(string userId);
                    /*0xdfe1a4*/ void SetSoundEnabled(bool soundEnabled);
                }

                class VungleRewardedVideoMediationExtras : GoogleMobileAds.Api.Mediation.Vungle.VungleMediationExtras
                {
                    /*0xdfe238*/ VungleRewardedVideoMediationExtras();
                    /*0xdfe240*/ string get_AndroidMediationExtraBuilderClassName();
                }
            }

            namespace UnityAds
            {
                class UnityAds
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient client;

                    static /*0x10c45c8*/ UnityAds();
                    static /*0x10c443c*/ GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient GetUnityAdsClient();
                    static /*0x10c44dc*/ void SetGDPRConsentMetaData(bool consent);
                    /*0x10c45c0*/ UnityAds();
                }
            }

            namespace IronSource
            {
                class IronSource
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient client;

                    static /*0x157442c*/ IronSource();
                    static /*0x15742a0*/ void SetConsent(bool consent);
                    static /*0x1574384*/ GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient GetIronSourceClient();
                    /*0x1574424*/ IronSource();
                }
            }

            namespace Fyber
            {
                class Fyber
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.Fyber.IFyberClient client;

                    static /*0x10b19f0*/ Fyber();
                    static /*0x10b172c*/ void SetGDPRConsent(bool consent);
                    static /*0x10b1810*/ void SetGDPRConsentString(string consentString);
                    static /*0x10b1908*/ void ClearGDPRConsentData();
                    /*0x10b19e8*/ Fyber();
                }
            }
        }
    }
}

namespace Gamepub
{
    class NativeGamepub
    {
        static /*0x0*/ UnityEngine.AndroidJavaClass pluginClass;
        static /*0x8*/ UnityEngine.AndroidJavaObject pluginInstance;
        static /*0x10*/ bool isInitialize;

        static /*0x2b44158*/ NativeGamepub();
        static /*0x2b43e4c*/ void Init();
        static /*0x2b44020*/ void ApplicationQuit();
        /*0x2b44150*/ NativeGamepub();
    }
}

namespace DPSTest
{
    enum UnitSelectType
    {
        HERO = 0,
        PUPPET1 = 1,
        PUPPET2 = 2,
        PUPPET3 = 3,
        PUPPET4 = 4,
        PUPPET5 = 5,
        LENGTH = 6,
    }

    enum PuppetSelectType
    {
        NONE = 0,
        FIRE = 1,
        WIND = 2,
        NATURE = 3,
        WATER = 4,
        LIGHT = 5,
        DARK = 6,
        LENGTH = 7,
    }

    enum EquipSelectType
    {
        ALL = 0,
        WEAPON = 1,
        HELMET = 2,
        ARMOR = 3,
        BOOTS = 4,
        ARTIFACT = 5,
        LENGTH = 6,
    }

    enum ArtifactSelectType
    {
        NONE = 0,
        SHIELD = 1,
        CLOAK = 2,
        NECKLACE = 3,
        EARRING = 4,
        GLASS = 5,
        CROWN = 6,
        HEART = 7,
        LENGTH = 8,
    }

    enum PositionSelectType
    {
        FRONT_UPPER = 0,
        FRONT_BOTTOM = 1,
        BACK_UPPER = 2,
        BACK_MIDDLE = 3,
        BACK_BOTTOM = 4,
        LENGTH = 5,
    }

    enum GradeSelectType
    {
        NONE = 0,
        C = 1,
        C_PLUS = 2,
        B = 3,
        B_PLUS = 4,
        A = 5,
        A_PLUS = 6,
        S = 7,
        S_PLUS = 8,
        SS = 9,
        SS_PLUS = 10,
        SSS = 11,
        LENGTH = 12,
    }

    class UnitSetting
    {
        /*0x10*/ int ID;
        /*0x14*/ int Grade;
        /*0x18*/ int Level;
        /*0x1c*/ DPSTest.PositionSelectType SpawnPosition;
        /*0x20*/ DPSTest.EquipSetting[] EquipSettings;

        /*0x10c22ac*/ UnitSetting();
    }

    class EquipSetting
    {
        /*0x10*/ int Grade;
        /*0x14*/ int Level;
        /*0x18*/ bool FactionBuff;
        /*0x1c*/ DPSTest.ArtifactSelectType ArtifactType;

        /*0x14c2354*/ EquipSetting();
    }
}

namespace DG
{
    namespace Tweening
    {
        class DOTweenModuleAudio
        {
            static /*0xf532ac*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOFade(UnityEngine.AudioSource target, float endValue, float duration);
            static /*0xf5346c*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOPitch(UnityEngine.AudioSource target, float endValue, float duration);
            static /*0xf53604*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOSetFloat(UnityEngine.Audio.AudioMixer target, string floatName, float endValue, float duration);
            static /*0xf537a0*/ int DOComplete(UnityEngine.Audio.AudioMixer target, bool withCallbacks);
            static /*0xf53814*/ int DOKill(UnityEngine.Audio.AudioMixer target, bool complete);
            static /*0xf53888*/ int DOFlip(UnityEngine.Audio.AudioMixer target);
            static /*0xf538ec*/ int DOGoto(UnityEngine.Audio.AudioMixer target, float to, bool andPlay);
            static /*0xf53970*/ int DOPause(UnityEngine.Audio.AudioMixer target);
            static /*0xf539d4*/ int DOPlay(UnityEngine.Audio.AudioMixer target);
            static /*0xf53a38*/ int DOPlayBackwards(UnityEngine.Audio.AudioMixer target);
            static /*0xf53a9c*/ int DOPlayForward(UnityEngine.Audio.AudioMixer target);
            static /*0xf53b00*/ int DORestart(UnityEngine.Audio.AudioMixer target);
            static /*0xf53b6c*/ int DORewind(UnityEngine.Audio.AudioMixer target);
            static /*0xf53bd4*/ int DOSmoothRewind(UnityEngine.Audio.AudioMixer target);
            static /*0xf53c38*/ int DOTogglePause(UnityEngine.Audio.AudioMixer target);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.AudioSource target;

                /*0x1074468*/ <>c__DisplayClass0_0();
                /*0x1074470*/ float <DOFade>b__0();
                /*0x107448c*/ void <DOFade>b__1(float x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.AudioSource target;

                /*0x10744a8*/ <>c__DisplayClass1_0();
                /*0x10744b0*/ float <DOPitch>b__0();
                /*0x10744cc*/ void <DOPitch>b__1(float x);
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.Audio.AudioMixer target;
                /*0x18*/ string floatName;

                /*0x10744e8*/ <>c__DisplayClass2_0();
                /*0x10744f0*/ float <DOSetFloat>b__0();
                /*0x1074530*/ void <DOSetFloat>b__1(float x);
            }
        }

        class DOTweenModulePhysics
        {
            static /*0xf53c9c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMove(UnityEngine.Rigidbody target, UnityEngine.Vector3 endValue, float duration, bool snapping);
            static /*0xf53e68*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMoveX(UnityEngine.Rigidbody target, float endValue, float duration, bool snapping);
            static /*0xf54028*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMoveY(UnityEngine.Rigidbody target, float endValue, float duration, bool snapping);
            static /*0xf541e8*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMoveZ(UnityEngine.Rigidbody target, float endValue, float duration, bool snapping);
            static /*0xf543a8*/ DG.Tweening.Core.TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions> DORotate(UnityEngine.Rigidbody target, UnityEngine.Vector3 endValue, float duration, DG.Tweening.RotateMode mode);
            static /*0xf54570*/ DG.Tweening.Core.TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions> DOLookAt(UnityEngine.Rigidbody target, UnityEngine.Vector3 towards, float duration, DG.Tweening.AxisConstraint axisConstraint, System.Nullable<UnityEngine.Vector3> up);
            static /*0xf547b4*/ DG.Tweening.Sequence DOJump(UnityEngine.Rigidbody target, UnityEngine.Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping);
            static /*0xf54cac*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOPath(UnityEngine.Rigidbody target, UnityEngine.Vector3[] path, float duration, DG.Tweening.PathType pathType, DG.Tweening.PathMode pathMode, int resolution, System.Nullable<UnityEngine.Color> gizmoColor);
            static /*0xf54f18*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOLocalPath(UnityEngine.Rigidbody target, UnityEngine.Vector3[] path, float duration, DG.Tweening.PathType pathType, DG.Tweening.PathMode pathMode, int resolution, System.Nullable<UnityEngine.Color> gizmoColor);
            static /*0xf55198*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOPath(UnityEngine.Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, DG.Tweening.PathMode pathMode);
            static /*0xf55378*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOLocalPath(UnityEngine.Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, DG.Tweening.PathMode pathMode);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x1074554*/ <>c__DisplayClass0_0();
                /*0x107455c*/ UnityEngine.Vector3 <DOMove>b__0();
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x107469c*/ <>c__DisplayClass1_0();
                /*0x10746a4*/ UnityEngine.Vector3 <DOMoveX>b__0();
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10746c0*/ <>c__DisplayClass2_0();
                /*0x10746c8*/ UnityEngine.Vector3 <DOMoveY>b__0();
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10746e4*/ <>c__DisplayClass3_0();
                /*0x10746ec*/ UnityEngine.Vector3 <DOMoveZ>b__0();
            }

            class <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x1074708*/ <>c__DisplayClass4_0();
                /*0x1074710*/ UnityEngine.Quaternion <DORotate>b__0();
            }

            class <>c__DisplayClass5_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x107472c*/ <>c__DisplayClass5_0();
                /*0x1074734*/ UnityEngine.Quaternion <DOLookAt>b__0();
            }

            class <>c__DisplayClass6_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;
                /*0x18*/ float startPosY;
                /*0x1c*/ bool offsetYSet;
                /*0x20*/ float offsetY;
                /*0x28*/ DG.Tweening.Sequence s;
                /*0x30*/ UnityEngine.Vector3 endValue;
                /*0x40*/ DG.Tweening.Tween yTween;

                /*0x1074750*/ <>c__DisplayClass6_0();
                /*0x1074758*/ UnityEngine.Vector3 <DOJump>b__0();
                /*0x1074774*/ void <DOJump>b__1();
                /*0x10747a8*/ UnityEngine.Vector3 <DOJump>b__2();
                /*0x10747c4*/ UnityEngine.Vector3 <DOJump>b__3();
                /*0x10747e0*/ void <DOJump>b__4();
            }

            class <>c__DisplayClass7_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10748a0*/ <>c__DisplayClass7_0();
                /*0x10748a8*/ UnityEngine.Vector3 <DOPath>b__0();
            }

            class <>c__DisplayClass8_0
            {
                /*0x10*/ UnityEngine.Transform trans;
                /*0x18*/ UnityEngine.Rigidbody target;

                /*0x10748c4*/ <>c__DisplayClass8_0();
                /*0x10748cc*/ UnityEngine.Vector3 <DOLocalPath>b__0();
                /*0x10748e8*/ void <DOLocalPath>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass9_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10749e8*/ <>c__DisplayClass9_0();
                /*0x10749f0*/ UnityEngine.Vector3 <DOPath>b__0();
            }

            class <>c__DisplayClass10_0
            {
                /*0x10*/ UnityEngine.Transform trans;
                /*0x18*/ UnityEngine.Rigidbody target;

                /*0x1074578*/ <>c__DisplayClass10_0();
                /*0x1074580*/ UnityEngine.Vector3 <DOLocalPath>b__0();
                /*0x107459c*/ void <DOLocalPath>b__1(UnityEngine.Vector3 x);
            }
        }

        class DOTweenModulePhysics2D
        {
            static /*0xf55564*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMove(UnityEngine.Rigidbody2D target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf55728*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMoveX(UnityEngine.Rigidbody2D target, float endValue, float duration, bool snapping);
            static /*0xf558e4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMoveY(UnityEngine.Rigidbody2D target, float endValue, float duration, bool snapping);
            static /*0xf55aa0*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DORotate(UnityEngine.Rigidbody2D target, float endValue, float duration);
            static /*0xf55c3c*/ DG.Tweening.Sequence DOJump(UnityEngine.Rigidbody2D target, UnityEngine.Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a0c*/ <>c__DisplayClass0_0();
                /*0x1074a14*/ UnityEngine.Vector2 <DOMove>b__0();
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a30*/ <>c__DisplayClass1_0();
                /*0x1074a38*/ UnityEngine.Vector2 <DOMoveX>b__0();
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a54*/ <>c__DisplayClass2_0();
                /*0x1074a5c*/ UnityEngine.Vector2 <DOMoveY>b__0();
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a78*/ <>c__DisplayClass3_0();
                /*0x1074a80*/ float <DORotate>b__0();
            }

            class <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;
                /*0x18*/ float startPosY;
                /*0x1c*/ bool offsetYSet;
                /*0x20*/ float offsetY;
                /*0x28*/ DG.Tweening.Sequence s;
                /*0x30*/ UnityEngine.Vector2 endValue;
                /*0x38*/ DG.Tweening.Tween yTween;

                /*0x1074a9c*/ <>c__DisplayClass4_0();
                /*0x1074aa4*/ UnityEngine.Vector2 <DOJump>b__0();
                /*0x1074ac0*/ void <DOJump>b__1(UnityEngine.Vector2 x);
                /*0x1074adc*/ void <DOJump>b__2();
                /*0x1074b10*/ UnityEngine.Vector2 <DOJump>b__3();
                /*0x1074b2c*/ void <DOJump>b__4(UnityEngine.Vector2 x);
                /*0x1074b48*/ void <DOJump>b__5();
            }
        }

        class DOTweenModuleSprite
        {
            static /*0xf56064*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.SpriteRenderer target, UnityEngine.Color endValue, float duration);
            static /*0xf56224*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.SpriteRenderer target, float endValue, float duration);
            static /*0xf563bc*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.SpriteRenderer target, UnityEngine.Gradient gradient, float duration);
            static /*0xf565a8*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.SpriteRenderer target, UnityEngine.Color endValue, float duration);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.SpriteRenderer target;

                /*0x1074c00*/ <>c__DisplayClass0_0();
                /*0x1074c08*/ UnityEngine.Color <DOColor>b__0();
                /*0x1074c24*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.SpriteRenderer target;

                /*0x1074c40*/ <>c__DisplayClass1_0();
                /*0x1074c48*/ UnityEngine.Color <DOFade>b__0();
                /*0x1074c64*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.SpriteRenderer target;

                /*0x1074c80*/ <>c__DisplayClass3_0();
                /*0x1074c88*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x1074c94*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }
        }

        class DOTweenModuleUI
        {
            static /*0xf567f4*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOFade(UnityEngine.CanvasGroup target, float endValue, float duration);
            static /*0xf5698c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Graphic target, UnityEngine.Color endValue, float duration);
            static /*0xf56b4c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Graphic target, float endValue, float duration);
            static /*0xf56ce4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Image target, UnityEngine.Color endValue, float duration);
            static /*0xf56ea4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Image target, float endValue, float duration);
            static /*0xf5703c*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOFillAmount(UnityEngine.UI.Image target, float endValue, float duration);
            static /*0xf571f8*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.UI.Image target, UnityEngine.Gradient gradient, float duration);
            static /*0xf573ec*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOFlexibleSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf575a4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMinSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf5775c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPreferredSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf57914*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Outline target, UnityEngine.Color endValue, float duration);
            static /*0xf57ad4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Outline target, float endValue, float duration);
            static /*0xf57c6c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOScale(UnityEngine.UI.Outline target, UnityEngine.Vector2 endValue, float duration);
            static /*0xf57e14*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf57fcc*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPosX(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf5817c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPosY(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf5832c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3D(UnityEngine.RectTransform target, UnityEngine.Vector3 endValue, float duration, bool snapping);
            static /*0xf584ec*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DX(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf586a0*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DY(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf58854*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DZ(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf58a08*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorMax(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf58bc0*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorMin(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf58d78*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPivot(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration);
            static /*0xf58f20*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPivotX(UnityEngine.RectTransform target, float endValue, float duration);
            static /*0xf590cc*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPivotY(UnityEngine.RectTransform target, float endValue, float duration);
            static /*0xf59278*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOSizeDelta(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf59430*/ DG.Tweening.Tweener DOPunchAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 punch, float duration, int vibrato, float elasticity, bool snapping);
            static /*0xf595f8*/ DG.Tweening.Tweener DOShakeAnchorPos(UnityEngine.RectTransform target, float duration, float strength, int vibrato, float randomness, bool snapping, bool fadeOut);
            static /*0xf597e0*/ DG.Tweening.Tweener DOShakeAnchorPos(UnityEngine.RectTransform target, float duration, UnityEngine.Vector2 strength, int vibrato, float randomness, bool snapping, bool fadeOut);
            static /*0xf599d0*/ DG.Tweening.Sequence DOJumpAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping);
            static /*0xf59dfc*/ DG.Tweening.Tweener DONormalizedPos(UnityEngine.UI.ScrollRect target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf59fa8*/ DG.Tweening.Tweener DOHorizontalNormalizedPos(UnityEngine.UI.ScrollRect target, float endValue, float duration, bool snapping);
            static /*0xf5a144*/ DG.Tweening.Tweener DOVerticalNormalizedPos(UnityEngine.UI.ScrollRect target, float endValue, float duration, bool snapping);
            static /*0xf5a2e0*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOValue(UnityEngine.UI.Slider target, float endValue, float duration, bool snapping);
            static /*0xf5a488*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Text target, UnityEngine.Color endValue, float duration);
            static /*0xf5a648*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Text target, float endValue, float duration);
            static /*0xf5a7e0*/ DG.Tweening.Core.TweenerCore<string, string, DG.Tweening.Plugins.Options.StringOptions> DOText(UnityEngine.UI.Text target, string endValue, float duration, bool richTextEnabled, DG.Tweening.ScrambleMode scrambleMode, string scrambleChars);
            static /*0xf5aa24*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Graphic target, UnityEngine.Color endValue, float duration);
            static /*0xf5ac78*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Image target, UnityEngine.Color endValue, float duration);
            static /*0xf5aecc*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Text target, UnityEngine.Color endValue, float duration);

            class Utils
            {
                static /*0x1075c7c*/ UnityEngine.Vector2 SwitchToRectTransform(UnityEngine.RectTransform from, UnityEngine.RectTransform to);
            }

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.CanvasGroup target;

                /*0x1074d40*/ <>c__DisplayClass0_0();
                /*0x1074d48*/ float <DOFade>b__0();
                /*0x1074d64*/ void <DOFade>b__1(float x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.UI.Graphic target;

                /*0x1075008*/ <>c__DisplayClass1_0();
                /*0x1075010*/ UnityEngine.Color <DOColor>b__0();
                /*0x1075034*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.UI.Graphic target;

                /*0x107541c*/ <>c__DisplayClass2_0();
                /*0x1075424*/ UnityEngine.Color <DOFade>b__0();
                /*0x1075448*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.UI.Image target;

                /*0x1075944*/ <>c__DisplayClass3_0();
                /*0x107594c*/ UnityEngine.Color <DOColor>b__0();
                /*0x1075970*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.UI.Image target;

                /*0x1075994*/ <>c__DisplayClass4_0();
                /*0x107599c*/ UnityEngine.Color <DOFade>b__0();
                /*0x10759c0*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass5_0
            {
                /*0x10*/ UnityEngine.UI.Image target;

                /*0x10759e4*/ <>c__DisplayClass5_0();
                /*0x10759ec*/ float <DOFillAmount>b__0();
                /*0x1075a08*/ void <DOFillAmount>b__1(float x);
            }

            class <>c__DisplayClass7_0
            {
                /*0x10*/ UnityEngine.UI.LayoutElement target;

                /*0x1075a24*/ <>c__DisplayClass7_0();
                /*0x1075a2c*/ UnityEngine.Vector2 <DOFlexibleSize>b__0();
                /*0x1075a90*/ void <DOFlexibleSize>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass8_0
            {
                /*0x10*/ UnityEngine.UI.LayoutElement target;

                /*0x1075aec*/ <>c__DisplayClass8_0();
                /*0x1075af4*/ UnityEngine.Vector2 <DOMinSize>b__0();
                /*0x1075b58*/ void <DOMinSize>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass9_0
            {
                /*0x10*/ UnityEngine.UI.LayoutElement target;

                /*0x1075bb4*/ <>c__DisplayClass9_0();
                /*0x1075bbc*/ UnityEngine.Vector2 <DOPreferredSize>b__0();
                /*0x1075c20*/ void <DOPreferredSize>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass10_0
            {
                /*0x10*/ UnityEngine.UI.Outline target;

                /*0x1074d80*/ <>c__DisplayClass10_0();
                /*0x1074d88*/ UnityEngine.Color <DOColor>b__0();
                /*0x1074da8*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass11_0
            {
                /*0x10*/ UnityEngine.UI.Outline target;

                /*0x1074dc4*/ <>c__DisplayClass11_0();
                /*0x1074dcc*/ UnityEngine.Color <DOFade>b__0();
                /*0x1074dec*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass12_0
            {
                /*0x10*/ UnityEngine.UI.Outline target;

                /*0x1074e08*/ <>c__DisplayClass12_0();
                /*0x1074e10*/ UnityEngine.Vector2 <DOScale>b__0();
                /*0x1074e2c*/ void <DOScale>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass13_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074e48*/ <>c__DisplayClass13_0();
                /*0x1074e50*/ UnityEngine.Vector2 <DOAnchorPos>b__0();
                /*0x1074e6c*/ void <DOAnchorPos>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass14_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074e88*/ <>c__DisplayClass14_0();
                /*0x1074e90*/ UnityEngine.Vector2 <DOAnchorPosX>b__0();
                /*0x1074eac*/ void <DOAnchorPosX>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass15_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074ec8*/ <>c__DisplayClass15_0();
                /*0x1074ed0*/ UnityEngine.Vector2 <DOAnchorPosY>b__0();
                /*0x1074eec*/ void <DOAnchorPosY>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass16_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074f08*/ <>c__DisplayClass16_0();
                /*0x1074f10*/ UnityEngine.Vector3 <DOAnchorPos3D>b__0();
                /*0x1074f2c*/ void <DOAnchorPos3D>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass17_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074f48*/ <>c__DisplayClass17_0();
                /*0x1074f50*/ UnityEngine.Vector3 <DOAnchorPos3DX>b__0();
                /*0x1074f6c*/ void <DOAnchorPos3DX>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass18_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074f88*/ <>c__DisplayClass18_0();
                /*0x1074f90*/ UnityEngine.Vector3 <DOAnchorPos3DY>b__0();
                /*0x1074fac*/ void <DOAnchorPos3DY>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass19_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074fc8*/ <>c__DisplayClass19_0();
                /*0x1074fd0*/ UnityEngine.Vector3 <DOAnchorPos3DZ>b__0();
                /*0x1074fec*/ void <DOAnchorPos3DZ>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass20_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075058*/ <>c__DisplayClass20_0();
                /*0x1075060*/ UnityEngine.Vector2 <DOAnchorMax>b__0();
                /*0x107507c*/ void <DOAnchorMax>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass21_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075098*/ <>c__DisplayClass21_0();
                /*0x10750a0*/ UnityEngine.Vector2 <DOAnchorMin>b__0();
                /*0x10750bc*/ void <DOAnchorMin>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass22_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x10750d8*/ <>c__DisplayClass22_0();
                /*0x10750e0*/ UnityEngine.Vector2 <DOPivot>b__0();
                /*0x10750fc*/ void <DOPivot>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass23_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075118*/ <>c__DisplayClass23_0();
                /*0x1075120*/ UnityEngine.Vector2 <DOPivotX>b__0();
                /*0x107513c*/ void <DOPivotX>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass24_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075158*/ <>c__DisplayClass24_0();
                /*0x1075160*/ UnityEngine.Vector2 <DOPivotY>b__0();
                /*0x107517c*/ void <DOPivotY>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass25_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075198*/ <>c__DisplayClass25_0();
                /*0x10751a0*/ UnityEngine.Vector2 <DOSizeDelta>b__0();
                /*0x10751bc*/ void <DOSizeDelta>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass26_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x10751d8*/ <>c__DisplayClass26_0();
                /*0x10751e0*/ UnityEngine.Vector3 <DOPunchAnchorPos>b__0();
                /*0x1075208*/ void <DOPunchAnchorPos>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass27_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075224*/ <>c__DisplayClass27_0();
                /*0x107522c*/ UnityEngine.Vector3 <DOShakeAnchorPos>b__0();
                /*0x1075254*/ void <DOShakeAnchorPos>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass28_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075270*/ <>c__DisplayClass28_0();
                /*0x1075278*/ UnityEngine.Vector3 <DOShakeAnchorPos>b__0();
                /*0x10752a0*/ void <DOShakeAnchorPos>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass29_0
            {
                /*0x10*/ UnityEngine.RectTransform target;
                /*0x18*/ float startPosY;
                /*0x1c*/ bool offsetYSet;
                /*0x20*/ float offsetY;
                /*0x28*/ DG.Tweening.Sequence s;
                /*0x30*/ UnityEngine.Vector2 endValue;

                /*0x10752bc*/ <>c__DisplayClass29_0();
                /*0x10752c4*/ UnityEngine.Vector2 <DOJumpAnchorPos>b__0();
                /*0x10752e0*/ void <DOJumpAnchorPos>b__1(UnityEngine.Vector2 x);
                /*0x10752fc*/ void <DOJumpAnchorPos>b__2();
                /*0x1075330*/ UnityEngine.Vector2 <DOJumpAnchorPos>b__3();
                /*0x107534c*/ void <DOJumpAnchorPos>b__4(UnityEngine.Vector2 x);
                /*0x1075368*/ void <DOJumpAnchorPos>b__5();
            }

            class <>c__DisplayClass30_0
            {
                /*0x10*/ UnityEngine.UI.ScrollRect target;

                /*0x107546c*/ <>c__DisplayClass30_0();
                /*0x1075474*/ UnityEngine.Vector2 <DONormalizedPos>b__0();
                /*0x10754c8*/ void <DONormalizedPos>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass31_0
            {
                /*0x10*/ UnityEngine.UI.ScrollRect target;

                /*0x1075514*/ <>c__DisplayClass31_0();
                /*0x107551c*/ float <DOHorizontalNormalizedPos>b__0();
                /*0x1075538*/ void <DOHorizontalNormalizedPos>b__1(float x);
            }

            class <>c__DisplayClass32_0
            {
                /*0x10*/ UnityEngine.UI.ScrollRect target;

                /*0x1075554*/ <>c__DisplayClass32_0();
                /*0x107555c*/ float <DOVerticalNormalizedPos>b__0();
                /*0x1075578*/ void <DOVerticalNormalizedPos>b__1(float x);
            }

            class <>c__DisplayClass33_0
            {
                /*0x10*/ UnityEngine.UI.Slider target;

                /*0x1075594*/ <>c__DisplayClass33_0();
                /*0x107559c*/ float <DOValue>b__0();
                /*0x10755c0*/ void <DOValue>b__1(float x);
            }

            class <>c__DisplayClass34_0
            {
                /*0x10*/ UnityEngine.UI.Text target;

                /*0x10755e4*/ <>c__DisplayClass34_0();
                /*0x10755ec*/ UnityEngine.Color <DOColor>b__0();
                /*0x1075610*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass35_0
            {
                /*0x10*/ UnityEngine.UI.Text target;

                /*0x1075634*/ <>c__DisplayClass35_0();
                /*0x107563c*/ UnityEngine.Color <DOFade>b__0();
                /*0x1075660*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass36_0
            {
                /*0x10*/ UnityEngine.UI.Text target;

                /*0x1075684*/ <>c__DisplayClass36_0();
                /*0x107568c*/ string <DOText>b__0();
                /*0x10756b0*/ void <DOText>b__1(string x);
            }

            class <>c__DisplayClass37_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.UI.Graphic target;

                /*0x10756d4*/ <>c__DisplayClass37_0();
                /*0x10756dc*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x10756e8*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass38_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.UI.Image target;

                /*0x10757a4*/ <>c__DisplayClass38_0();
                /*0x10757ac*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x10757b8*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass39_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.UI.Text target;

                /*0x1075874*/ <>c__DisplayClass39_0();
                /*0x107587c*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x1075888*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }
        }

        class DOTweenModuleUnityVersion
        {
            static /*0xf5b120*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.Material target, UnityEngine.Gradient gradient, float duration);
            static /*0xf5b310*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.Material target, UnityEngine.Gradient gradient, string property, float duration);
            static /*0xf5b514*/ UnityEngine.CustomYieldInstruction WaitForCompletion(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b5d4*/ UnityEngine.CustomYieldInstruction WaitForRewind(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b694*/ UnityEngine.CustomYieldInstruction WaitForKill(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b754*/ UnityEngine.CustomYieldInstruction WaitForElapsedLoops(DG.Tweening.Tween t, int elapsedLoops, bool returnCustomYieldInstruction);
            static /*0xf5b824*/ UnityEngine.CustomYieldInstruction WaitForPosition(DG.Tweening.Tween t, float position, bool returnCustomYieldInstruction);
            static /*0xf5b8f4*/ UnityEngine.CustomYieldInstruction WaitForStart(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b9b4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOOffset(UnityEngine.Material target, UnityEngine.Vector2 endValue, int propertyID, float duration);
            static /*0xf5bbcc*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOTiling(UnityEngine.Material target, UnityEngine.Vector2 endValue, int propertyID, float duration);

            class <>c__DisplayClass8_0
            {
                /*0x10*/ UnityEngine.Material target;
                /*0x18*/ int propertyID;

                /*0x1075ec0*/ <>c__DisplayClass8_0();
                /*0x1075ec8*/ UnityEngine.Vector2 <DOOffset>b__0();
                /*0x1075eec*/ void <DOOffset>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass9_0
            {
                /*0x10*/ UnityEngine.Material target;
                /*0x18*/ int propertyID;

                /*0x1075f10*/ <>c__DisplayClass9_0();
                /*0x1075f18*/ UnityEngine.Vector2 <DOTiling>b__0();
                /*0x1075f3c*/ void <DOTiling>b__1(UnityEngine.Vector2 x);
            }
        }

        class DOTweenCYInstruction
        {
            class WaitForCompletion : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x10741dc*/ WaitForCompletion(DG.Tweening.Tween tween);
                /*0x10741a8*/ bool get_keepWaiting();
            }

            class WaitForRewind : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x10743dc*/ WaitForRewind(DG.Tweening.Tween tween);
                /*0x1074378*/ bool get_keepWaiting();
            }

            class WaitForKill : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x10742ac*/ WaitForKill(DG.Tweening.Tween tween);
                /*0x1074290*/ bool get_keepWaiting();
            }

            class WaitForElapsedLoops : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;
                /*0x18*/ int elapsedLoops;

                /*0x1074254*/ WaitForElapsedLoops(DG.Tweening.Tween tween, int elapsedLoops);
                /*0x1074208*/ bool get_keepWaiting();
            }

            class WaitForPosition : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;
                /*0x18*/ float position;

                /*0x107433c*/ WaitForPosition(DG.Tweening.Tween tween, float position);
                /*0x10742d8*/ bool get_keepWaiting();
            }

            class WaitForStart : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x107443c*/ WaitForStart(DG.Tweening.Tween tween);
                /*0x1074408*/ bool get_keepWaiting();
            }
        }

        class DOTweenModuleUtils
        {
            static /*0x0*/ bool _initialized;

            static /*0xf5bde4*/ void Init();
            static /*0xf5bea8*/ void Preserver();

            class Physics
            {
                static /*0x1075f60*/ void SetOrientationOnPath(DG.Tweening.Plugins.Options.PathOptions options, DG.Tweening.Tween t, UnityEngine.Quaternion newRot, UnityEngine.Transform trans);
                static /*0x1076064*/ bool HasRigidbody2D(UnityEngine.Component target);
                static /*0x10760fc*/ bool HasRigidbody(UnityEngine.Component target);
                static /*0x1076194*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> CreateDOTweenPathTween(UnityEngine.MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, DG.Tweening.PathMode pathMode);
            }
        }
    }
}

namespace com
{
    namespace adjust
    {
        namespace sdk
        {
            enum JSONBinaryTag
            {
                Array = 1,
                Class = 2,
                Value = 3,
                IntValue = 4,
                DoubleValue = 5,
                BoolValue = 6,
                FloatValue = 7,
            }

            class JSONNode
            {
                static /*0xfa7924*/ com.adjust.sdk.JSONNode op_Implicit(string s);
                static /*0xfa7984*/ string op_Implicit(com.adjust.sdk.JSONNode d);
                static /*0xfa79d0*/ bool op_Equality(com.adjust.sdk.JSONNode a, object b);
                static /*0xfa7a64*/ bool op_Inequality(com.adjust.sdk.JSONNode a, object b);
                static /*0xfa5c74*/ string Escape(string aText);
                static /*0xfa3d48*/ com.adjust.sdk.JSONNode Parse(string aJSON);
                static /*0xfa7c08*/ com.adjust.sdk.JSONNode Deserialize(System.IO.BinaryReader aReader);
                static /*0xfa7fd0*/ com.adjust.sdk.JSONNode LoadFromCompressedFile(string aFileName);
                static /*0xfa8024*/ com.adjust.sdk.JSONNode LoadFromCompressedStream(System.IO.Stream aData);
                static /*0xfa8078*/ com.adjust.sdk.JSONNode LoadFromCompressedBase64(string aBase64);
                static /*0xfa80cc*/ com.adjust.sdk.JSONNode LoadFromStream(System.IO.Stream aData);
                static /*0xfa822c*/ com.adjust.sdk.JSONNode LoadFromBase64(string aBase64);
                /*0xfa4f24*/ JSONNode();
                /*0xfa72c8*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa72cc*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa72d4*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa72d8*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa72e0*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa72e4*/ string get_Value();
                /*0xfa7328*/ void set_Value(string value);
                /*0xfa732c*/ int get_Count();
                /*0xfa7334*/ void Add(com.adjust.sdk.JSONNode aItem);
                /*0xfa7398*/ com.adjust.sdk.JSONNode Remove(string aKey);
                /*0xfa73a0*/ com.adjust.sdk.JSONNode Remove(int aIndex);
                /*0xfa73a8*/ com.adjust.sdk.JSONNode Remove(com.adjust.sdk.JSONNode aNode);
                /*0xfa73b0*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_Childs();
                /*0xfa740c*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_DeepChilds();
                /*0xfa7478*/ string ToString();
                /*0xfa74bc*/ string ToString(string aPrefix);
                /*0xfa7500*/ int get_AsInt();
                /*0xfa7540*/ void set_AsInt(int value);
                /*0xfa7580*/ float get_AsFloat();
                /*0xfa75c4*/ void set_AsFloat(float value);
                /*0xfa7604*/ double get_AsDouble();
                /*0xfa76a4*/ void set_AsDouble(double value);
                /*0xfa76e4*/ bool get_AsBool();
                /*0xfa77a8*/ void set_AsBool(bool value);
                /*0xfa782c*/ com.adjust.sdk.JSONArray get_AsArray();
                /*0xfa78a8*/ com.adjust.sdk.JSONClass get_AsObject();
                /*0xfa7a80*/ bool Equals(object obj);
                /*0xfa6d60*/ int GetHashCode();
                /*0xfa7a8c*/ void Serialize(System.IO.BinaryWriter aWriter);
                /*0xfa7a90*/ void SaveToStream(System.IO.Stream aData);
                /*0xfa7b0c*/ void SaveToCompressedStream(System.IO.Stream aData);
                /*0xfa7b60*/ void SaveToCompressedFile(string aFileName);
                /*0xfa7bb4*/ string SaveToCompressedBase64();

                class <get_Childs>d__17 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;

                    /*0xe518cc*/ <get_Childs>d__17(int <>1__state);
                    /*0xe51904*/ void System.IDisposable.Dispose();
                    /*0xe51908*/ bool MoveNext();
                    /*0xe51920*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe51928*/ void System.Collections.IEnumerator.Reset();
                    /*0xe51968*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe51970*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe51a04*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }

                class <get_DeepChilds>d__19 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;
                    /*0x28*/ com.adjust.sdk.JSONNode <>4__this;
                    /*0x30*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> <>7__wrap1;
                    /*0x38*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> <>7__wrap2;

                    /*0xe51a08*/ <get_DeepChilds>d__19(int <>1__state);
                    /*0xe51a40*/ void System.IDisposable.Dispose();
                    /*0xe51c48*/ bool MoveNext();
                    /*0xe51b8c*/ void <>m__Finally1();
                    /*0xe51ad0*/ void <>m__Finally2();
                    /*0xe52080*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe52088*/ void System.Collections.IEnumerator.Reset();
                    /*0xe520c8*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe520d0*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe52178*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }
            }

            class JSONArray : com.adjust.sdk.JSONNode, System.Collections.IEnumerable
            {
                /*0x10*/ System.Collections.Generic.List<com.adjust.sdk.JSONNode> m_List;

                /*0xfa4eac*/ JSONArray();
                /*0xfa4478*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa4560*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa4618*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa4678*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa46dc*/ int get_Count();
                /*0xfa4728*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa478c*/ com.adjust.sdk.JSONNode Remove(int aIndex);
                /*0xfa484c*/ com.adjust.sdk.JSONNode Remove(com.adjust.sdk.JSONNode aNode);
                /*0xfa48b8*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_Childs();
                /*0xfa4924*/ System.Collections.IEnumerator GetEnumerator();
                /*0xfa4990*/ string ToString();
                /*0xfa4b6c*/ string ToString(string aPrefix);
                /*0xfa4dc4*/ void Serialize(System.IO.BinaryWriter aWriter);

                class <get_Childs>d__13 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;
                    /*0x28*/ com.adjust.sdk.JSONArray <>4__this;
                    /*0x30*/ System.Collections.Generic.List.Enumerator<com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe50f98*/ <get_Childs>d__13(int <>1__state);
                    /*0xe50fd0*/ void System.IDisposable.Dispose();
                    /*0xe51040*/ bool MoveNext();
                    /*0xe50fec*/ void <>m__Finally1();
                    /*0xe511b4*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe511bc*/ void System.Collections.IEnumerator.Reset();
                    /*0xe511fc*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe51204*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe512ac*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }

                class <GetEnumerator>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ com.adjust.sdk.JSONArray <>4__this;
                    /*0x28*/ System.Collections.Generic.List.Enumerator<com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe50d38*/ <GetEnumerator>d__14(int <>1__state);
                    /*0xe50d64*/ void System.IDisposable.Dispose();
                    /*0xe50dd4*/ bool MoveNext();
                    /*0xe50d80*/ void <>m__Finally1();
                    /*0xe50f48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xe50f50*/ void System.Collections.IEnumerator.Reset();
                    /*0xe50f90*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class JSONClass : com.adjust.sdk.JSONNode, System.Collections.IEnumerable
            {
                /*0x10*/ System.Collections.Generic.Dictionary<string, com.adjust.sdk.JSONNode> m_Dict;

                /*0xfa6494*/ JSONClass();
                /*0xfa4f2c*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa5034*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa5104*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa51b0*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa5290*/ int get_Count();
                /*0xfa52e4*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa5430*/ com.adjust.sdk.JSONNode Remove(string aKey);
                /*0xfa5500*/ com.adjust.sdk.JSONNode Remove(int aIndex);
                /*0xfa55e8*/ com.adjust.sdk.JSONNode Remove(com.adjust.sdk.JSONNode aNode);
                /*0xfa57b4*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_Childs();
                /*0xfa5820*/ System.Collections.IEnumerator GetEnumerator();
                /*0xfa588c*/ string ToString();
                /*0xfa5e40*/ string ToString(string aPrefix);
                /*0xfa6298*/ void Serialize(System.IO.BinaryWriter aWriter);

                class <>c__DisplayClass12_0
                {
                    /*0x10*/ com.adjust.sdk.JSONNode aNode;

                    /*0xe512b0*/ <>c__DisplayClass12_0();
                    /*0xe512b8*/ bool <Remove>b__0(System.Collections.Generic.KeyValuePair<string, com.adjust.sdk.JSONNode> k);
                }

                class <get_Childs>d__14 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;
                    /*0x28*/ com.adjust.sdk.JSONClass <>4__this;
                    /*0x30*/ System.Collections.Generic.Dictionary.Enumerator<string, com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe515a0*/ <get_Childs>d__14(int <>1__state);
                    /*0xe515d8*/ void System.IDisposable.Dispose();
                    /*0xe51648*/ bool MoveNext();
                    /*0xe515f4*/ void <>m__Finally1();
                    /*0xe517d0*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe517d8*/ void System.Collections.IEnumerator.Reset();
                    /*0xe51818*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe51820*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe518c8*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }

                class <GetEnumerator>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ com.adjust.sdk.JSONClass <>4__this;
                    /*0x28*/ System.Collections.Generic.Dictionary.Enumerator<string, com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe5130c*/ <GetEnumerator>d__15(int <>1__state);
                    /*0xe51338*/ void System.IDisposable.Dispose();
                    /*0xe513a8*/ bool MoveNext();
                    /*0xe51354*/ void <>m__Finally1();
                    /*0xe51550*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xe51558*/ void System.Collections.IEnumerator.Reset();
                    /*0xe51598*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class JSONData : com.adjust.sdk.JSONNode
            {
                /*0x10*/ string m_Data;

                /*0xfa651c*/ JSONData(string aData);
                /*0xfa6548*/ JSONData(float aData);
                /*0xfa658c*/ JSONData(double aData);
                /*0xfa65d0*/ JSONData(bool aData);
                /*0xfa660c*/ JSONData(int aData);
                /*0xfa650c*/ string get_Value();
                /*0xfa6514*/ void set_Value(string value);
                /*0xfa6648*/ string ToString();
                /*0xfa66a4*/ string ToString(string aPrefix);
                /*0xfa6700*/ void Serialize(System.IO.BinaryWriter aWriter);
            }

            class JSONLazyCreator : com.adjust.sdk.JSONNode
            {
                /*0x10*/ com.adjust.sdk.JSONNode m_Node;
                /*0x18*/ string m_Key;

                static /*0xfa6d10*/ bool op_Equality(com.adjust.sdk.JSONLazyCreator a, object b);
                static /*0xfa6d28*/ bool op_Inequality(com.adjust.sdk.JSONLazyCreator a, object b);
                /*0xfa4534*/ JSONLazyCreator(com.adjust.sdk.JSONNode aNode);
                /*0xfa4ffc*/ JSONLazyCreator(com.adjust.sdk.JSONNode aNode, string aKey);
                /*0xfa69c4*/ void Set(com.adjust.sdk.JSONNode aVal);
                /*0xfa6a24*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa6a84*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa6b08*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa6b74*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa6c00*/ void Add(com.adjust.sdk.JSONNode aItem);
                /*0xfa6c84*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa6d40*/ bool Equals(object obj);
                /*0xfa6d58*/ int GetHashCode();
                /*0xfa6d68*/ string ToString();
                /*0xfa6dac*/ string ToString(string aPrefix);
                /*0xfa6df0*/ int get_AsInt();
                /*0xfa6e70*/ void set_AsInt(int value);
                /*0xfa6ef4*/ float get_AsFloat();
                /*0xfa6f74*/ void set_AsFloat(float value);
                /*0xfa6ff8*/ double get_AsDouble();
                /*0xfa7078*/ void set_AsDouble(double value);
                /*0xfa70fc*/ bool get_AsBool();
                /*0xfa717c*/ void set_AsBool(bool value);
                /*0xfa7200*/ com.adjust.sdk.JSONArray get_AsArray();
                /*0xfa7264*/ com.adjust.sdk.JSONClass get_AsObject();
            }

            class JSON
            {
                static /*0xfa3d44*/ com.adjust.sdk.JSONNode Parse(string aJSON);
            }

            class AdjustAndroid
            {
                static string sdkPrefix = "unity4.28.0";
                static /*0x0*/ bool launchDeferredDeeplink;
                static /*0x8*/ UnityEngine.AndroidJavaClass ajcAdjust;
                static /*0x10*/ UnityEngine.AndroidJavaObject ajoCurrentActivity;
                static /*0x18*/ com.adjust.sdk.AdjustAndroid.DeferredDeeplinkListener onDeferredDeeplinkListener;
                static /*0x20*/ com.adjust.sdk.AdjustAndroid.AttributionChangeListener onAttributionChangedListener;
                static /*0x28*/ com.adjust.sdk.AdjustAndroid.EventTrackingFailedListener onEventTrackingFailedListener;
                static /*0x30*/ com.adjust.sdk.AdjustAndroid.EventTrackingSucceededListener onEventTrackingSucceededListener;
                static /*0x38*/ com.adjust.sdk.AdjustAndroid.SessionTrackingFailedListener onSessionTrackingFailedListener;
                static /*0x40*/ com.adjust.sdk.AdjustAndroid.SessionTrackingSucceededListener onSessionTrackingSucceededListener;

                static /*0x12157b4*/ AdjustAndroid();
                static /*0x120f0dc*/ void Start(com.adjust.sdk.AdjustConfig adjustConfig);
                static /*0x121061c*/ void TrackEvent(com.adjust.sdk.AdjustEvent adjustEvent);
                static /*0x1210da8*/ bool IsEnabled();
                static /*0x1210c24*/ void SetEnabled(bool enabled);
                static /*0x1210f48*/ void SetOfflineMode(bool enabled);
                static /*0x121177c*/ void SendFirstPackages();
                static /*0x12110d4*/ void SetDeviceToken(string deviceToken);
                static /*0x1213558*/ string GetAdid();
                static /*0x1211260*/ void GdprForgetMe();
                static /*0x12113c0*/ void DisableThirdPartySharing();
                static /*0x12136f0*/ com.adjust.sdk.AdjustAttribution GetAttribution();
                static /*0x1211918*/ void AddSessionPartnerParameter(string key, string value);
                static /*0x1211b3c*/ void AddSessionCallbackParameter(string key, string value);
                static /*0x1211d50*/ void RemoveSessionPartnerParameter(string key);
                static /*0x1211f38*/ void RemoveSessionCallbackParameter(string key);
                static /*0x1212118*/ void ResetSessionPartnerParameters();
                static /*0x1212324*/ void ResetSessionCallbackParameters();
                static /*0x1211528*/ void AppWillOpenUrl(string url);
                static /*0x1212548*/ void TrackAdRevenue(string source, string payload);
                static /*0x12127e8*/ void TrackPlayStoreSubscription(com.adjust.sdk.AdjustPlayStoreSubscription subscription);
                static /*0x1212e10*/ void TrackThirdPartySharing(com.adjust.sdk.AdjustThirdPartySharing thirdPartySharing);
                static /*0x12133b8*/ void TrackMeasurementConsent(bool measurementConsent);
                static /*0x120ee84*/ void OnPause();
                static /*0x120efb0*/ void OnResume();
                static /*0x1214338*/ void SetReferrer(string referrer);
                static /*0x12144cc*/ void GetGoogleAdId(System.Action<string> onDeviceIdsRead);
                static /*0x1214690*/ string GetAmazonAdId();
                static /*0x1214170*/ string GetSdkVersion();
                static /*0x121480c*/ void SetTestOptions(System.Collections.Generic.Dictionary<string, string> testOptions);
                static /*0x1214a7c*/ bool IsAppSecretSet(com.adjust.sdk.AdjustConfig adjustConfig);
                /*0x12157ac*/ AdjustAndroid();

                class AttributionChangeListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustAttribution> callback;

                    /*0xe14a88*/ AttributionChangeListener(System.Action<com.adjust.sdk.AdjustAttribution> pCallback);
                    /*0xe14b18*/ void onAttributionChanged(UnityEngine.AndroidJavaObject attribution);
                }

                class DeferredDeeplinkListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<string> callback;

                    /*0xd97cb0*/ DeferredDeeplinkListener(System.Action<string> pCallback);
                    /*0xd97d40*/ bool launchReceivedDeeplink(UnityEngine.AndroidJavaObject deeplink);
                }

                class EventTrackingSucceededListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustEventSuccess> callback;

                    /*0xd986c0*/ EventTrackingSucceededListener(System.Action<com.adjust.sdk.AdjustEventSuccess> pCallback);
                    /*0xd98750*/ void onFinishedEventTrackingSucceeded(UnityEngine.AndroidJavaObject eventSuccessData);
                }

                class EventTrackingFailedListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustEventFailure> callback;

                    /*0xd980ec*/ EventTrackingFailedListener(System.Action<com.adjust.sdk.AdjustEventFailure> pCallback);
                    /*0xd9817c*/ void onFinishedEventTrackingFailed(UnityEngine.AndroidJavaObject eventFailureData);
                }

                class SessionTrackingSucceededListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustSessionSuccess> callback;

                    /*0xd9913c*/ SessionTrackingSucceededListener(System.Action<com.adjust.sdk.AdjustSessionSuccess> pCallback);
                    /*0xd991cc*/ void onFinishedSessionTrackingSucceeded(UnityEngine.AndroidJavaObject sessionSuccessData);
                }

                class SessionTrackingFailedListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustSessionFailure> callback;

                    /*0xd98c60*/ SessionTrackingFailedListener(System.Action<com.adjust.sdk.AdjustSessionFailure> pCallback);
                    /*0xd98cf0*/ void onFinishedSessionTrackingFailed(UnityEngine.AndroidJavaObject sessionFailureData);
                }

                class DeviceIdsReadListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<string> onPlayAdIdReadCallback;

                    /*0xd97ec8*/ DeviceIdsReadListener(System.Action<string> pCallback);
                    /*0xd97f58*/ void onGoogleAdIdRead(string playAdId);
                    /*0xd97fc8*/ void onGoogleAdIdRead(UnityEngine.AndroidJavaObject ajoAdId);
                }
            }

            class Adjust : UnityEngine.MonoBehaviour
            {
                static string errorMsgEditor = "[Adjust]: SDK can not be used in Editor.";
                static string errorMsgStart = "[Adjust]: SDK not started. Start it manually using the 'start' method.";
                static string errorMsgPlatform = "[Adjust]: SDK can only be used in Android, iOS, Windows Phone 8.1, Windows Store or Universal Windows apps.";
                /*0x18*/ bool startManually;
                /*0x19*/ bool eventBuffering;
                /*0x1a*/ bool sendInBackground;
                /*0x1b*/ bool launchDeferredDeeplink;
                /*0x20*/ string appToken;
                /*0x28*/ com.adjust.sdk.AdjustLogLevel logLevel;
                /*0x2c*/ com.adjust.sdk.AdjustEnvironment environment;

                static /*0x120ed98*/ void start(com.adjust.sdk.AdjustConfig adjustConfig);
                static /*0x12105ac*/ void trackEvent(com.adjust.sdk.AdjustEvent adjustEvent);
                static /*0x1210bc4*/ void setEnabled(bool enabled);
                static /*0x1210d50*/ bool isEnabled();
                static /*0x1210ee8*/ void setOfflineMode(bool enabled);
                static /*0x1211074*/ void setDeviceToken(string deviceToken);
                static /*0x1211208*/ void gdprForgetMe();
                static /*0x1211368*/ void disableThirdPartySharing();
                static /*0x12114c8*/ void appWillOpenUrl(string url);
                static /*0x1211724*/ void sendFirstPackages();
                static /*0x12118a8*/ void addSessionPartnerParameter(string key, string value);
                static /*0x1211acc*/ void addSessionCallbackParameter(string key, string value);
                static /*0x1211cf0*/ void removeSessionPartnerParameter(string key);
                static /*0x1211ed8*/ void removeSessionCallbackParameter(string key);
                static /*0x12120c0*/ void resetSessionPartnerParameters();
                static /*0x12122cc*/ void resetSessionCallbackParameters();
                static /*0x12124d8*/ void trackAdRevenue(string source, string payload);
                static /*0x1212784*/ void trackAppStoreSubscription(com.adjust.sdk.AdjustAppStoreSubscription subscription);
                static /*0x1212788*/ void trackPlayStoreSubscription(com.adjust.sdk.AdjustPlayStoreSubscription subscription);
                static /*0x1212db0*/ void trackThirdPartySharing(com.adjust.sdk.AdjustThirdPartySharing thirdPartySharing);
                static /*0x1213358*/ void trackMeasurementConsent(bool measurementConsent);
                static /*0x12134e4*/ void requestTrackingAuthorizationWithCompletionHandler(System.Action<int> statusCallback, string sceneName);
                static /*0x12134e8*/ void updateConversionValue(int conversionValue);
                static /*0x12134ec*/ int getAppTrackingAuthorizationStatus();
                static /*0x12134f4*/ string getAdid();
                static /*0x1213698*/ com.adjust.sdk.AdjustAttribution getAttribution();
                static /*0x1214074*/ string getWinAdid();
                static /*0x12140c0*/ string getIdfa();
                static /*0x121410c*/ string getSdkVersion();
                static /*0x12142d8*/ void setReferrer(string referrer);
                static /*0x121446c*/ void getGoogleAdId(System.Action<string> onDeviceIdsRead);
                static /*0x121462c*/ string getAmazonAdId();
                static /*0x120eba0*/ bool IsEditor();
                static /*0x12147ac*/ void SetTestOptions(System.Collections.Generic.Dictionary<string, string> testOptions);
                /*0x121495c*/ Adjust();
                /*0x120ea78*/ void Awake();
                /*0x120ee08*/ void OnApplicationPause(bool pauseStatus);
            }

            class AdjustAppStoreSubscription
            {
                /*0x10*/ string price;
                /*0x18*/ string currency;
                /*0x20*/ string transactionId;
                /*0x28*/ string receipt;
                /*0x30*/ string billingStore;
                /*0x38*/ string transactionDate;
                /*0x40*/ string salesRegion;
                /*0x48*/ System.Collections.Generic.List<string> partnerList;
                /*0x50*/ System.Collections.Generic.List<string> callbackList;

                /*0x12158d0*/ AdjustAppStoreSubscription(string price, string currency, string transactionId, string receipt);
                /*0x121591c*/ void setTransactionDate(string transactionDate);
                /*0x1215924*/ void setSalesRegion(string salesRegion);
                /*0x121592c*/ void addCallbackParameter(string key, string value);
                /*0x12159f8*/ void addPartnerParameter(string key, string value);
            }

            class AdjustAttribution
            {
                /*0x10*/ string <adid>k__BackingField;
                /*0x18*/ string <network>k__BackingField;
                /*0x20*/ string <adgroup>k__BackingField;
                /*0x28*/ string <campaign>k__BackingField;
                /*0x30*/ string <creative>k__BackingField;
                /*0x38*/ string <clickLabel>k__BackingField;
                /*0x40*/ string <trackerName>k__BackingField;
                /*0x48*/ string <trackerToken>k__BackingField;
                /*0x50*/ string <costType>k__BackingField;
                /*0x58*/ System.Nullable<double> <costAmount>k__BackingField;
                /*0x68*/ string <costCurrency>k__BackingField;

                /*0x1214af4*/ AdjustAttribution();
                /*0x1215b78*/ AdjustAttribution(string jsonString);
                /*0x1215f8c*/ AdjustAttribution(System.Collections.Generic.Dictionary<string, string> dicAttributionData);
                /*0x1215ac4*/ string get_adid();
                /*0x1215acc*/ void set_adid(string value);
                /*0x1215ad4*/ string get_network();
                /*0x1215adc*/ void set_network(string value);
                /*0x1215ae4*/ string get_adgroup();
                /*0x1215aec*/ void set_adgroup(string value);
                /*0x1215af4*/ string get_campaign();
                /*0x1215afc*/ void set_campaign(string value);
                /*0x1215b04*/ string get_creative();
                /*0x1215b0c*/ void set_creative(string value);
                /*0x1215b14*/ string get_clickLabel();
                /*0x1215b1c*/ void set_clickLabel(string value);
                /*0x1215b24*/ string get_trackerName();
                /*0x1215b2c*/ void set_trackerName(string value);
                /*0x1215b34*/ string get_trackerToken();
                /*0x1215b3c*/ void set_trackerToken(string value);
                /*0x1215b44*/ string get_costType();
                /*0x1215b4c*/ void set_costType(string value);
                /*0x1215b54*/ System.Nullable<double> get_costAmount();
                /*0x1215b60*/ void set_costAmount(System.Nullable<double> value);
                /*0x1215b68*/ string get_costCurrency();
                /*0x1215b70*/ void set_costCurrency(string value);
            }

            class AdjustConfig
            {
                static string AdjustUrlStrategyChina = "china";
                static string AdjustUrlStrategyIndia = "india";
                static string AdjustDataResidencyEU = "data-residency-eu";
                static string AdjustAdRevenueSourceMopub = "mopub";
                static string AdjustAdRevenueSourceAdmob = "admob";
                static string AdjustAdRevenueSourceFbNativeAd = "facebook_native_ad";
                static string AdjustAdRevenueSourceFbAudienceNetwork = "facebook_audience_network";
                static string AdjustAdRevenueSourceIronsource = "ironsource";
                static string AdjustAdRevenueSourceFyber = "fyber";
                static string AdjustAdRevenueSourceAerserv = "aerserv";
                static string AdjustAdRevenueSourceAppodeal = "appodeal";
                static string AdjustAdRevenueSourceAdincube = "adincube";
                static string AdjustAdRevenueSourceFusePowered = "fusepowered";
                static string AdjustAdRevenueSourceAddaptr = "addapptr";
                static string AdjustAdRevenueSourceMillenialMediation = "millennial_mediation";
                static string AdjustAdRevenueSourceFlurry = "flurry";
                static string AdjustAdRevenueSourceAdmost = "admost";
                static string AdjustAdRevenueSourceDeltadna = "deltadna";
                static string AdjustAdRevenueSourceUpsight = "upsight";
                static string AdjustAdRevenueSourceUnityads = "unityads";
                static string AdjustAdRevenueSourceAdtoapp = "adtoapp";
                static string AdjustAdRevenueSourceTapdaq = "tapdaq";
                /*0x10*/ string appToken;
                /*0x18*/ string sceneName;
                /*0x20*/ string userAgent;
                /*0x28*/ string defaultTracker;
                /*0x30*/ string externalDeviceId;
                /*0x38*/ string urlStrategy;
                /*0x40*/ System.Nullable<long> info1;
                /*0x50*/ System.Nullable<long> info2;
                /*0x60*/ System.Nullable<long> info3;
                /*0x70*/ System.Nullable<long> info4;
                /*0x80*/ System.Nullable<long> secretId;
                /*0x90*/ System.Nullable<double> delayStart;
                /*0xa0*/ System.Nullable<bool> isDeviceKnown;
                /*0xa2*/ System.Nullable<bool> sendInBackground;
                /*0xa4*/ System.Nullable<bool> eventBufferingEnabled;
                /*0xa6*/ System.Nullable<bool> allowSuppressLogLevel;
                /*0xa8*/ System.Nullable<bool> needsCost;
                /*0xaa*/ bool launchDeferredDeeplink;
                /*0xac*/ System.Nullable<com.adjust.sdk.AdjustLogLevel> logLevel;
                /*0xb4*/ com.adjust.sdk.AdjustEnvironment environment;
                /*0xb8*/ System.Action<string> deferredDeeplinkDelegate;
                /*0xc0*/ System.Action<com.adjust.sdk.AdjustEventSuccess> eventSuccessDelegate;
                /*0xc8*/ System.Action<com.adjust.sdk.AdjustEventFailure> eventFailureDelegate;
                /*0xd0*/ System.Action<com.adjust.sdk.AdjustSessionSuccess> sessionSuccessDelegate;
                /*0xd8*/ System.Action<com.adjust.sdk.AdjustSessionFailure> sessionFailureDelegate;
                /*0xe0*/ System.Action<com.adjust.sdk.AdjustAttribution> attributionChangedDelegate;
                /*0xe8*/ System.Nullable<bool> readImei;
                /*0xea*/ System.Nullable<bool> preinstallTrackingEnabled;
                /*0xf0*/ string processName;
                /*0xf8*/ System.Nullable<bool> allowiAdInfoReading;
                /*0xfa*/ System.Nullable<bool> allowAdServicesInfoReading;
                /*0xfc*/ System.Nullable<bool> allowIdfaReading;
                /*0xfe*/ System.Nullable<bool> skAdNetworkHandling;
                /*0x100*/ System.Action<string> logDelegate;

                /*0x1216318*/ AdjustConfig(string appToken, com.adjust.sdk.AdjustEnvironment environment);
                /*0x120eba8*/ AdjustConfig(string appToken, com.adjust.sdk.AdjustEnvironment environment, bool allowSuppressLogLevel);
                /*0x120ec54*/ void setLogLevel(com.adjust.sdk.AdjustLogLevel logLevel);
                /*0x1216388*/ void setDefaultTracker(string defaultTracker);
                /*0x1216390*/ void setExternalDeviceId(string externalDeviceId);
                /*0x1216398*/ void setLaunchDeferredDeeplink(bool launchDeferredDeeplink);
                /*0x120ecc0*/ void setSendInBackground(bool sendInBackground);
                /*0x120ed2c*/ void setEventBufferingEnabled(bool eventBufferingEnabled);
                /*0x12163a4*/ void setNeedsCost(bool needsCost);
                /*0x1216410*/ void setDelayStart(double delayStart);
                /*0x1216484*/ void setUserAgent(string userAgent);
                /*0x121648c*/ void setIsDeviceKnown(bool isDeviceKnown);
                /*0x12164f8*/ void setUrlStrategy(string urlStrategy);
                /*0x1216500*/ void deactivateSKAdNetworkHandling();
                /*0x1216568*/ void setDeferredDeeplinkDelegate(System.Action<string> deferredDeeplinkDelegate, string sceneName);
                /*0x1216574*/ System.Action<string> getDeferredDeeplinkDelegate();
                /*0x121657c*/ void setAttributionChangedDelegate(System.Action<com.adjust.sdk.AdjustAttribution> attributionChangedDelegate, string sceneName);
                /*0x1216588*/ System.Action<com.adjust.sdk.AdjustAttribution> getAttributionChangedDelegate();
                /*0x1216590*/ void setEventSuccessDelegate(System.Action<com.adjust.sdk.AdjustEventSuccess> eventSuccessDelegate, string sceneName);
                /*0x121659c*/ System.Action<com.adjust.sdk.AdjustEventSuccess> getEventSuccessDelegate();
                /*0x12165a4*/ void setEventFailureDelegate(System.Action<com.adjust.sdk.AdjustEventFailure> eventFailureDelegate, string sceneName);
                /*0x12165b0*/ System.Action<com.adjust.sdk.AdjustEventFailure> getEventFailureDelegate();
                /*0x12165b8*/ void setSessionSuccessDelegate(System.Action<com.adjust.sdk.AdjustSessionSuccess> sessionSuccessDelegate, string sceneName);
                /*0x12165c4*/ System.Action<com.adjust.sdk.AdjustSessionSuccess> getSessionSuccessDelegate();
                /*0x12165cc*/ void setSessionFailureDelegate(System.Action<com.adjust.sdk.AdjustSessionFailure> sessionFailureDelegate, string sceneName);
                /*0x12165d8*/ System.Action<com.adjust.sdk.AdjustSessionFailure> getSessionFailureDelegate();
                /*0x12165e0*/ void setAppSecret(long secretId, long info1, long info2, long info3, long info4);
                /*0x12166e4*/ void setAllowiAdInfoReading(bool allowiAdInfoReading);
                /*0x1216750*/ void setAllowAdServicesInfoReading(bool allowAdServicesInfoReading);
                /*0x12167bc*/ void setAllowIdfaReading(bool allowIdfaReading);
                /*0x1216828*/ void setProcessName(string processName);
                /*0x1216830*/ void setReadMobileEquipmentIdentity(bool readMobileEquipmentIdentity);
                /*0x1216834*/ void setPreinstallTrackingEnabled(bool preinstallTrackingEnabled);
                /*0x12168a0*/ void setLogDelegate(System.Action<string> logDelegate);
            }

            enum AdjustEnvironment
            {
                Sandbox = 0,
                Production = 1,
            }

            class AdjustEnvironmentExtension
            {
                static /*0x12168a8*/ string ToLowercaseString(com.adjust.sdk.AdjustEnvironment adjustEnvironment);
            }

            class AdjustEvent
            {
                /*0x10*/ string currency;
                /*0x18*/ string eventToken;
                /*0x20*/ string callbackId;
                /*0x28*/ string transactionId;
                /*0x30*/ System.Nullable<double> revenue;
                /*0x40*/ System.Collections.Generic.List<string> partnerList;
                /*0x48*/ System.Collections.Generic.List<string> callbackList;
                /*0x50*/ string receipt;
                /*0x58*/ bool isReceiptSet;

                /*0x1216928*/ AdjustEvent(string eventToken);
                /*0x1216958*/ void setRevenue(double amount, string currency);
                /*0x12169dc*/ void addCallbackParameter(string key, string value);
                /*0x1216aa8*/ void addPartnerParameter(string key, string value);
                /*0x1216b74*/ void setTransactionId(string transactionId);
                /*0x1216b7c*/ void setCallbackId(string callbackId);
                /*0x1216b84*/ void setReceipt(string receipt, string transactionId);
            }

            class AdjustEventFailure
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ string <EventToken>k__BackingField;
                /*0x30*/ string <CallbackId>k__BackingField;
                /*0x38*/ bool <WillRetry>k__BackingField;
                /*0x40*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1216c0c*/ AdjustEventFailure();
                /*0x1216c14*/ AdjustEventFailure(System.Collections.Generic.Dictionary<string, string> eventFailureDataMap);
                /*0x1217248*/ AdjustEventFailure(string jsonString);
                /*0x1216b98*/ string get_Adid();
                /*0x1216ba0*/ void set_Adid(string value);
                /*0x1216ba8*/ string get_Message();
                /*0x1216bb0*/ void set_Message(string value);
                /*0x1216bb8*/ string get_Timestamp();
                /*0x1216bc0*/ void set_Timestamp(string value);
                /*0x1216bc8*/ string get_EventToken();
                /*0x1216bd0*/ void set_EventToken(string value);
                /*0x1216bd8*/ string get_CallbackId();
                /*0x1216be0*/ void set_CallbackId(string value);
                /*0x1216be8*/ bool get_WillRetry();
                /*0x1216bf0*/ void set_WillRetry(bool value);
                /*0x1216bfc*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1216c04*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x12174a0*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x12175a8*/ string GetJsonResponse();
            }

            class AdjustEventSuccess
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ string <EventToken>k__BackingField;
                /*0x30*/ string <CallbackId>k__BackingField;
                /*0x38*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1217d98*/ AdjustEventSuccess();
                /*0x1217da0*/ AdjustEventSuccess(System.Collections.Generic.Dictionary<string, string> eventSuccessDataMap);
                /*0x1217f7c*/ AdjustEventSuccess(string jsonString);
                /*0x1217d38*/ string get_Adid();
                /*0x1217d40*/ void set_Adid(string value);
                /*0x1217d48*/ string get_Message();
                /*0x1217d50*/ void set_Message(string value);
                /*0x1217d58*/ string get_Timestamp();
                /*0x1217d60*/ void set_Timestamp(string value);
                /*0x1217d68*/ string get_EventToken();
                /*0x1217d70*/ void set_EventToken(string value);
                /*0x1217d78*/ string get_CallbackId();
                /*0x1217d80*/ void set_CallbackId(string value);
                /*0x1217d88*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1217d90*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x1218178*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x1218280*/ string GetJsonResponse();
            }

            enum AdjustLogLevel
            {
                Verbose = 1,
                Debug = 2,
                Info = 3,
                Warn = 4,
                Error = 5,
                Assert = 6,
                Suppress = 7,
            }

            class AdjustLogLevelExtension
            {
                static /*0x12182e4*/ string ToLowercaseString(com.adjust.sdk.AdjustLogLevel AdjustLogLevel);
                static /*0x12149c4*/ string ToUppercaseString(com.adjust.sdk.AdjustLogLevel AdjustLogLevel);
            }

            class AdjustPlayStoreSubscription
            {
                /*0x10*/ string price;
                /*0x18*/ string currency;
                /*0x20*/ string sku;
                /*0x28*/ string orderId;
                /*0x30*/ string signature;
                /*0x38*/ string purchaseToken;
                /*0x40*/ string billingStore;
                /*0x48*/ string purchaseTime;
                /*0x50*/ System.Collections.Generic.List<string> partnerList;
                /*0x58*/ System.Collections.Generic.List<string> callbackList;

                /*0x1218ac8*/ AdjustPlayStoreSubscription(string price, string currency, string sku, string orderId, string signature, string purchaseToken);
                /*0x1218b28*/ void setPurchaseTime(string purchaseTime);
                /*0x1218b30*/ void addCallbackParameter(string key, string value);
                /*0x1218bfc*/ void addPartnerParameter(string key, string value);
            }

            class AdjustSessionFailure
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ bool <WillRetry>k__BackingField;
                /*0x30*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1218d1c*/ AdjustSessionFailure();
                /*0x1218d24*/ AdjustSessionFailure(System.Collections.Generic.Dictionary<string, string> sessionFailureDataMap);
                /*0x1218f4c*/ AdjustSessionFailure(string jsonString);
                /*0x1218cc8*/ string get_Adid();
                /*0x1218cd0*/ void set_Adid(string value);
                /*0x1218cd8*/ string get_Message();
                /*0x1218ce0*/ void set_Message(string value);
                /*0x1218ce8*/ string get_Timestamp();
                /*0x1218cf0*/ void set_Timestamp(string value);
                /*0x1218cf8*/ bool get_WillRetry();
                /*0x1218d00*/ void set_WillRetry(bool value);
                /*0x1218d0c*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1218d14*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x1219174*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x121927c*/ string GetJsonResponse();
            }

            class AdjustSessionSuccess
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1219320*/ AdjustSessionSuccess();
                /*0x1219328*/ AdjustSessionSuccess(System.Collections.Generic.Dictionary<string, string> sessionSuccessDataMap);
                /*0x12194d4*/ AdjustSessionSuccess(string jsonString);
                /*0x12192e0*/ string get_Adid();
                /*0x12192e8*/ void set_Adid(string value);
                /*0x12192f0*/ string get_Message();
                /*0x12192f8*/ void set_Message(string value);
                /*0x1219300*/ string get_Timestamp();
                /*0x1219308*/ void set_Timestamp(string value);
                /*0x1219310*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1219318*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x12196a0*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x12197a8*/ string GetJsonResponse();
            }

            class AdjustThirdPartySharing
            {
                /*0x10*/ System.Nullable<bool> isEnabled;
                /*0x18*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> granularOptions;

                /*0x121980c*/ AdjustThirdPartySharing(System.Nullable<bool> isEnabled);
                /*0x1219898*/ void addGranularOption(string partnerName, string key, string value);
            }

            class AdjustUtils
            {
                static /*0x0*/ string KeyAdid;
                static /*0x8*/ string KeyMessage;
                static /*0x10*/ string KeyNetwork;
                static /*0x18*/ string KeyAdgroup;
                static /*0x20*/ string KeyCampaign;
                static /*0x28*/ string KeyCreative;
                static /*0x30*/ string KeyWillRetry;
                static /*0x38*/ string KeyTimestamp;
                static /*0x40*/ string KeyCallbackId;
                static /*0x48*/ string KeyEventToken;
                static /*0x50*/ string KeyClickLabel;
                static /*0x58*/ string KeyTrackerName;
                static /*0x60*/ string KeyTrackerToken;
                static /*0x68*/ string KeyJsonResponse;
                static /*0x70*/ string KeyCostType;
                static /*0x78*/ string KeyCostAmount;
                static /*0x80*/ string KeyCostCurrency;
                static /*0x88*/ string KeyTestOptionsBaseUrl;
                static /*0x90*/ string KeyTestOptionsGdprUrl;
                static /*0x98*/ string KeyTestOptionsSubscriptionUrl;
                static /*0xa0*/ string KeyTestOptionsExtraPath;
                static /*0xa8*/ string KeyTestOptionsBasePath;
                static /*0xb0*/ string KeyTestOptionsGdprPath;
                static /*0xb8*/ string KeyTestOptionsDeleteState;
                static /*0xc0*/ string KeyTestOptionsUseTestConnectionOptions;
                static /*0xc8*/ string KeyTestOptionsTimerIntervalInMilliseconds;
                static /*0xd0*/ string KeyTestOptionsTimerStartInMilliseconds;
                static /*0xd8*/ string KeyTestOptionsSessionIntervalInMilliseconds;
                static /*0xe0*/ string KeyTestOptionsSubsessionIntervalInMilliseconds;
                static /*0xe8*/ string KeyTestOptionsTeardown;
                static /*0xf0*/ string KeyTestOptionsNoBackoffWait;
                static /*0xf8*/ string KeyTestOptionsiAdFrameworkEnabled;
                static /*0x100*/ string KeyTestOptionsAdServicesFrameworkEnabled;

                static /*0x1219d98*/ AdjustUtils();
                static /*0x1219a04*/ int ConvertLogLevel(System.Nullable<com.adjust.sdk.AdjustLogLevel> logLevel);
                static /*0x1219a7c*/ int ConvertBool(System.Nullable<bool> value);
                static /*0x1219afc*/ double ConvertDouble(System.Nullable<double> value);
                static /*0x1219b74*/ long ConvertLong(System.Nullable<long> value);
                static /*0x1219bec*/ string ConvertListToJson(System.Collections.Generic.List<string> list);
                static /*0x121760c*/ string GetJsonResponseCompact(System.Collections.Generic.Dictionary<string, object> dictionary);
                static /*0x1215e74*/ string GetJsonString(com.adjust.sdk.JSONNode node, string key);
                static /*0x1216e6c*/ void WriteJsonResponseDictionary(com.adjust.sdk.JSONClass jsonObject, System.Collections.Generic.Dictionary<string, object> output);
                static /*0x121626c*/ string TryGetValue(System.Collections.Generic.Dictionary<string, string> dictionary, string key);
                static /*0x1214afc*/ UnityEngine.AndroidJavaObject TestOptionsMap2AndroidJavaObject(System.Collections.Generic.Dictionary<string, string> testOptionsMap, UnityEngine.AndroidJavaObject ajoCurrentActivity);
                /*0x1219d90*/ AdjustUtils();
            }
        }
    }
}

class <PrivateImplementationDetails>
{
    static /*0x0*/ <PrivateImplementationDetails> 025FB29C6A4973A8802D7EB55927B707571013F6A2087F5C81C5B01160AFA357;
    static /*0x100*/ <PrivateImplementationDetails> 0CFB8E54CB2E3FC258367388CE81637E1EC2DF4604A3E90297955E679EE907C2;
    static /*0x130*/ <PrivateImplementationDetails> 0EDB951A90ED696D0B29CCA3F3323A2D22265B9EB74D5E14B56CA2FEF70AD73F;
    static /*0x140*/ <PrivateImplementationDetails> 16EABE83DA955DFAA32F37FA3036FD8966C7FD64CA25C3B6F7739453FBAB6663;
    static /*0x150*/ <PrivateImplementationDetails> 363E36084BBB0306805877162A3EAD9F65A9BB6166FE2CD6E51E55EEBBB70545;
    static /*0x18c*/ <PrivateImplementationDetails> 44CE851CDCC7F82580CF8AF07787E6EE5017CA7236555FA87E73ED8C5A4058DE;
    static /*0x1a0*/ <PrivateImplementationDetails> 49F2DEA87CDF2E9177664BBBB2ECC559EEA7CB79BF20F2A55A4460C102BCA819;
    static /*0x1ac*/ <PrivateImplementationDetails> 54C9F664711A0609C8934B9797737200FC7025DA91E12B41F4633B4E2B59B953;
    static /*0x1ec*/ <PrivateImplementationDetails> 57355AC3303C148F11AEF7CB179456B9232CDE33A818DFDA2C2FCB9325749A6B;
    static /*0x1f4*/ int 5FF92E0EF669766129352061FAA51A038F426D450DD6AB9567EE65DBAA0DB8C6;
    static /*0x1f8*/ <PrivateImplementationDetails> 7245C6EDC4E42F6CBA60411578646C131C02961F7FC3C8135BB0B4C5AE6886E9;
    static /*0x20c*/ int 726ECF3D13F2E4C4ECBB837E4B58D0E8AAF152054B89ACFDC5E2523FBE1AACDC;
    static /*0x210*/ <PrivateImplementationDetails> 77B4B5142BA07390E3E262BC90995001825EDDB287CD88F6567EE165BF5569EA;
    static /*0x220*/ <PrivateImplementationDetails> 921C803ABFA6AC88F44F7AB19198E5C137D1C7183E8E6912757A6263E8DEE0A5;
    static /*0x244*/ <PrivateImplementationDetails> 9DD9822B1B52DEB94F14650E73602EC50FA255C03E91F7F4BB8870ED52BBA4F9;
    static /*0x258*/ <PrivateImplementationDetails> A3D2C8538AD5B65BCF147F28BE0081387B37CAE106D6C87B41A0BB4BEB82B604;
    static /*0x268*/ <PrivateImplementationDetails> C7AB7E65103F0D09119A404A750CC912384111FCC3150F3E301D2DD3CAE12011;
    static /*0x274*/ int CF15116372057E5FA75FB8C1CD7A847237A7E6FB92799CBCA29600FD473A53E9;
    static /*0x278*/ <PrivateImplementationDetails> D100D0BAFA9A5E9F839A8A035B7D0F403923BD75AFD0A740E0FD257DB23E9C69;
    static /*0x28c*/ <PrivateImplementationDetails> D5ACA10B446B978E570CE7E0FBA8B267A7647AC18ABA3337221C0112C53B8517;
    static /*0x38c*/ <PrivateImplementationDetails> D8D76B4895FBCFA1ACBFA1646EA92AE03ACB4E4EEE79674F1750751115A63D25;
    static /*0x3a4*/ <PrivateImplementationDetails> E4950866B039A9CA640997AE9E94BA3EC5A36B3B0A3EFD7064F16308A86859CC;
    static /*0x3b4*/ <PrivateImplementationDetails> ED785057DE2C9CD3C18377B3B239CE52477625B0A44241926A10A3B83D044A0A;
    static /*0x3c0*/ <PrivateImplementationDetails> FCC708741B2B156D55A630BE4F4407A8B5F51C71455C056849BEB55D1A8C8263;

    static /*0x11ff570*/ uint ComputeStringHash(string s);

    struct __StaticArrayInitTypeSize=7
    {
    }

    struct __StaticArrayInitTypeSize=12
    {
    }

    struct __StaticArrayInitTypeSize=16
    {
    }

    struct __StaticArrayInitTypeSize=20
    {
    }

    struct __StaticArrayInitTypeSize=24
    {
    }

    struct __StaticArrayInitTypeSize=36
    {
    }

    struct __StaticArrayInitTypeSize=48
    {
    }

    struct __StaticArrayInitTypeSize=60
    {
    }

    struct __StaticArrayInitTypeSize=64
    {
    }

    struct __StaticArrayInitTypeSize=256
    {
    }
}
