    /*0x11a9d38*/ void OnEnter();
    /*0x11a9dd0*/ void OnFinish();
    /*0x11a9dd4*/ void OnLeave();
    /*0x11a9dd8*/ void OnStart();
    /*0x11a9d84*/ void StartAnimate();
    /*0x11a9ddc*/ System.Collections.IEnumerator CoAnimate();
    /*0x11a9d6c*/ void SetActiveRewardTitle(bool _bEnable);

    class <CoAnimate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RewardPopup <>4__this;

        /*0xf9b9c0*/ <CoAnimate>d__10(int <>1__state);
        /*0xf9b9ec*/ void System.IDisposable.Dispose();
        /*0xf9b9f0*/ bool MoveNext();
        /*0xf9babc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9bac4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9bb04*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RunGameCurrentRewardPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<RunRewardLimitEntity> m_lisRewardEntity;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.UI.Slider> m_lisSlider;
    /*0x50*/ System.Collections.Generic.List<UnityEngine.UI.Text> m_lisAmountText;
    /*0x58*/ LocalizeString m_RenewTimerText;

    /*0x11abbb0*/ RunGameCurrentRewardPopup();
    /*0x11ab624*/ void OnCreate();
    /*0x11ab628*/ void OnDelete();
    /*0x11ab62c*/ void OnEnter();
    /*0x11ab630*/ void OnFinish();
    /*0x11ab634*/ void OnLeave();
    /*0x11ab638*/ void OnStart();
    /*0x11ab63c*/ void SetRewardSlider(int _nRewardIndex, float _fCurrentAmount, float _fMaxAmount);
    /*0x11ab790*/ void Init();
    /*0x11aba88*/ void SetTimerUTC(System.TimeSpan _remainTimeSpan);
}

class RunGameHelpPopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_BackgroundImageTrans;

    /*0x11abbd8*/ RunGameHelpPopup();
    /*0x11abbb8*/ void OnCreate();
    /*0x11abbbc*/ void OnDelete();
    /*0x11abbc0*/ void OnEnter();
    /*0x11abbc4*/ void OnFinish();
    /*0x11abbc8*/ void OnLeave();
    /*0x11abbcc*/ void OnStart();
    /*0x11abbd0*/ UnityEngine.RectTransform GetBackgroundImageRect();
}

class RunGameRewardPopup : GuiBase
{
    /*0x40*/ Spine.Unity.SkeletonGraphic m_Victory;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Lose;
    /*0x50*/ RunRewardLimitGroup m_VictoryGroup;
    /*0x58*/ UnityEngine.GameObject m_ClearRewardSlotParent;
    /*0x60*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;
    /*0x68*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liClearRewardSlot;
    /*0x70*/ UnityEngine.UI.Text m_ClearBounsText;
    /*0x78*/ bool bIsPlayingAnimation;
    /*0x79*/ bool bIsWin;
    /*0x80*/ System.Collections.Generic.List<Rewards> liRewards_Original;
    /*0x88*/ System.Collections.Generic.List<Rewards> liClearRewards_Original;
    /*0x90*/ System.Collections.Generic.List<Rewards> liRewards;
    /*0x98*/ System.Collections.Generic.List<Rewards> liClearRewards;

    static /*0x1293548*/ Rewards <DecreaseRewardCount>g__GetDecreaseAmount|24_0(Rewards reward, long amount, ref RunGameRewardPopup.<> );
    /*0x129365c*/ RunGameRewardPopup();
    /*0x12928dc*/ void OnCreate();
    /*0x12928e0*/ void OnDelete();
    /*0x12928e4*/ void OnEnter();
    /*0x12928e8*/ void OnFinish();
    /*0x12928ec*/ void OnLeave();
    /*0x12928f0*/ void OnStart();
    /*0x12928f4*/ void OnExit();
    /*0x1292990*/ void InitializePopup(bool _bWin);
    /*0x1292cdc*/ void RenewRewardSlots(System.Collections.Generic.List<Rewards> _lisRewards, System.Collections.Generic.List<Rewards> _lisClearRewards, bool _bDisableZero);
    /*0x129318c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x12932d8*/ System.Collections.IEnumerator CoDecreaseReward();
    /*0x1293344*/ void DecreaseRewardCount(System.Collections.Generic.List<Rewards> originalRewards, System.Collections.Generic.List<Rewards> showRewards, int _nDecreaseRatio);
    /*0x12935d8*/ void OnClick_Restart();

    class <CoDecreaseReward>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RunGameRewardPopup <>4__this;
        /*0x28*/ int <decreaseRatio>5__2;

        /*0xf9c1d0*/ <CoDecreaseReward>d__23(int <>1__state);
        /*0xf9c1fc*/ void System.IDisposable.Dispose();
        /*0xf9c200*/ bool MoveNext();
        /*0xf9c320*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9c328*/ void System.Collections.IEnumerator.Reset();
        /*0xf9c368*/ object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass24_0
    {
        /*0x10*/ int _nDecreaseRatio;
    }
}

class ServerSelectWindow : UnityEngine.MonoBehaviour
{
    static string PLAYERPREFS_SELECTED_SERVER_INDEX = "SelectedServerIndex";
    /*0x18*/ UnityEngine.UI.InputField m_inputTextField;
    /*0x20*/ DropDown_Custom m_DropDown;
    /*0x28*/ System.Collections.Generic.List<string> m_Addresses;

    /*0xe26e88*/ ServerSelectWindow();
    /*0xe263e4*/ void Awake();
    /*0xe26e90*/ void <Awake>b__4_5(int idx);

    class <>c
    {
        static /*0x0*/ ServerSelectWindow.<> <>9;
        static /*0x8*/ System.Func<string, System.String[]> <>9__4_0;
        static /*0x10*/ System.Func<System.String[], string> <>9__4_1;
        static /*0x18*/ System.Func<System.String[], string> <>9__4_2;
        static /*0x20*/ System.Func<System.String[], bool> <>9__4_3;
        static /*0x28*/ System.Func<System.String[], string> <>9__4_4;
        static /*0x30*/ UnityEngine.Events.UnityAction<string> <>9__4_6;

        static /*0xcbe528*/ <>c();
        /*0xcbe588*/ <>c();
        /*0xcbe590*/ string[] <Awake>b__4_0(string s);
        /*0xcbe614*/ string <Awake>b__4_1(string[] t);
        /*0xcbe688*/ string <Awake>b__4_2(string[] t);
        /*0xcbe6bc*/ bool <Awake>b__4_3(string[] t);
        /*0xcbe754*/ string <Awake>b__4_4(string[] t);
        /*0xcbe7c8*/ void <Awake>b__4_6(string id);
    }
}

enum StageCurrentUserType
{
    NONE = 0,
    STAGE = 1,
    CHAPTER = 2,
    TOWER = 3,
}

class StageCurrentUserPopup : GuiBase
{
    /*0x40*/ ScrollContent_ChapterUserEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_liPlayerList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.STowerUser> m_liTowerUserList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> m_liCampaignUserList;
    /*0x68*/ StageCurrentUserType m_eUserType;

    /*0x1456564*/ StageCurrentUserPopup();
    /*0x1455d30*/ void OnCreate();
    /*0x1455d34*/ void OnDelete();
    /*0x1455d38*/ void OnEnter();
    /*0x1455e64*/ void OnFinish();
    /*0x1455edc*/ void OnLeave();
    /*0x1455fb0*/ void OnStart();
    /*0x1455fb4*/ void OnExit();
    /*0x1456030*/ void InitializePopup(StageCurrentUserType _eType, System.Collections.Generic.List<PTShare.Define.SPlayer> _player);
    /*0x14563c8*/ void InitializePopup(StageCurrentUserType _eType, System.Collections.Generic.List<PTShare.Define.STowerUser> _towerUsers);
    /*0x1456154*/ void SetTitle(StageCurrentUserType _eType);
    /*0x14560ec*/ void InitializeScroll();
    /*0x1456468*/ void HandlerScrollContent(int _index, ChapterUserEntity _obj);
}

class StoryDescPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_desc;

    /*0xc9cdf4*/ StoryDescPopup();
    /*0xc9cc40*/ void OnCreate();
    /*0xc9cc44*/ void OnDelete();
    /*0xc9cc48*/ void OnEnter();
    /*0xc9cc4c*/ void OnFinish();
    /*0xc9cc50*/ void OnLeave();
    /*0xc9cc54*/ void OnStart();
    /*0xc9cc58*/ void InitPopup(string desc, string title);
}

class TermsPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_ToggleAll;
    /*0x48*/ System.Collections.Generic.List<TermsPopup.TermToggle> m_liTermToggle;
    /*0x50*/ System.Collections.Generic.List<TermsPopup.TermToggle> m_liPushToggle;
    /*0x58*/ UnityEngine.UI.Button m_ConfirmButton;
    /*0x60*/ System.Action OnAgreeCallback;
    /*0x68*/ bool bIsAllToggleCheck;

    /*0x1168550*/ TermsPopup();
    /*0x116793c*/ void OnCreate();
    /*0x1167940*/ void OnDelete();
    /*0x1167944*/ void OnEnter();
    /*0x1167948*/ void OnFinish();
    /*0x116794c*/ void OnLeave();
    /*0x1167950*/ void OnStart();
    /*0x1167954*/ void OnExit();
    /*0x1167958*/ void InitializePopup(System.Action cbAgree);
    /*0x1167b48*/ void SetToggle();
    /*0x1167cf8*/ void RefreshButtonEnable();
    /*0x1167e3c*/ void OnClick_Privacy();
    /*0x1167edc*/ void OnClick_Terms();
    /*0x1167f7c*/ void OnClick_Confirm();
    /*0x1168350*/ string GetAgreePush(bool isNight, bool isAgree);
    /*0x1168558*/ void <SetToggle>b__15_0(bool isOn);
    /*0x11686bc*/ void <SetToggle>b__15_1(TermsPopup.TermToggle t);
    /*0x11687d8*/ void <SetToggle>b__15_2(TermsPopup.TermToggle t);

    class TermToggle
    {
        /*0x10*/ UnityEngine.UI.Toggle toggle;
        /*0x18*/ bool isOn;

        /*0xcd0b4c*/ TermToggle();
    }

    class <>c
    {
        static /*0x0*/ TermsPopup.<> <>9;
        static /*0x8*/ System.Action<TermsPopup.TermToggle> <>9__14_0;
        static /*0x10*/ System.Action<TermsPopup.TermToggle> <>9__14_1;
        static /*0x18*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_6;
        static /*0x20*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_7;
        static /*0x28*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_9;
        static /*0x30*/ System.Func<TermsPopup.TermToggle, bool> <>9__15_10;
        static /*0x38*/ System.Predicate<TermsPopup.TermToggle> <>9__16_0;
        static /*0x40*/ System.Predicate<TermsPopup.TermToggle> <>9__19_0;
        static /*0x48*/ System.Converter<TermsPopup.TermToggle, bool> <>9__19_1;

        static /*0xcd046c*/ <>c();
        /*0xcd04cc*/ <>c();
        /*0xcd04d4*/ void <InitializePopup>b__14_0(TermsPopup.TermToggle x);
        /*0xcd04fc*/ void <InitializePopup>b__14_1(TermsPopup.TermToggle x);
        /*0xcd0524*/ bool <SetToggle>b__15_6(TermsPopup.TermToggle x);
        /*0xcd053c*/ bool <SetToggle>b__15_7(TermsPopup.TermToggle x);
        /*0xcd0554*/ bool <SetToggle>b__15_9(TermsPopup.TermToggle x);
        /*0xcd056c*/ bool <SetToggle>b__15_10(TermsPopup.TermToggle x);
        /*0xcd0584*/ bool <RefreshButtonEnable>b__16_0(TermsPopup.TermToggle x);
        /*0xcd05a4*/ bool <OnClick_Confirm>b__19_0(TermsPopup.TermToggle x);
        /*0xcd05c4*/ bool <OnClick_Confirm>b__19_1(TermsPopup.TermToggle x);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ bool isOn;

        /*0xcd05dc*/ <>c__DisplayClass15_0();
        /*0xcd05e4*/ void <SetToggle>b__3(TermsPopup.TermToggle x);
        /*0xcd0610*/ void <SetToggle>b__4(TermsPopup.TermToggle x);
    }

    class <>c__DisplayClass15_1
    {
        /*0x10*/ TermsPopup.TermToggle t;
        /*0x18*/ TermsPopup <>4__this;

        /*0xcd063c*/ <>c__DisplayClass15_1();
        /*0xcd0644*/ void <SetToggle>b__5(bool isOn);
    }

    class <>c__DisplayClass15_2
    {
        /*0x10*/ TermsPopup.TermToggle t;
        /*0x18*/ TermsPopup <>4__this;

        /*0xcd08c4*/ <>c__DisplayClass15_2();
        /*0xcd08cc*/ void <SetToggle>b__8(bool isOn);
    }
}

class ToastMessagePopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_ParentTransform;
    /*0x48*/ LocalizeString m_ViewText;
    /*0x50*/ UnityEngine.Vector3 m_defaultAnchoredPosition;
    /*0x5c*/ float fDuration_Time;
    /*0x60*/ System.Collections.IEnumerator IE_ProcessView;

    /*0x1170704*/ ToastMessagePopup();
    /*0x1170368*/ void Show(string _message, float _duration);
    /*0x1170500*/ void Show(string _message, float _duration, string[] _params);
    /*0x11705b0*/ void Show(string _message, float _duration, UnityEngine.Vector3 _addPosition, string[] _params);
    /*0x11704b4*/ void CoSetup();
    /*0x1170678*/ System.Collections.IEnumerator CoViewMessage();
    /*0x11706e4*/ void OnExit();
    /*0x11706ec*/ void OnCreate();
    /*0x11706f0*/ void OnEnter();
    /*0x11706f4*/ void OnStart();
    /*0x11706f8*/ void OnFinish();
    /*0x11706fc*/ void OnLeave();
    /*0x1170700*/ void OnDelete();

    class <CoViewMessage>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ToastMessagePopup <>4__this;
        /*0x28*/ float <_fTime>5__2;

        /*0xcd1790*/ <CoViewMessage>d__9(int <>1__state);
        /*0xcd17bc*/ void System.IDisposable.Dispose();
        /*0xcd17c0*/ bool MoveNext();
        /*0xcd1928*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1930*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1970*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TroopChangeNamePopup : GuiBase
{
    static /*0x0*/ System.Action OnChangeNameEvent;
    /*0x40*/ UnityEngine.UI.InputField m_InputField;
    /*0x48*/ PTShare.Define.STroop m_TroopInfo;

    static /*0x11239f8*/ TroopChangeNamePopup();
    /*0x11239f0*/ TroopChangeNamePopup();
    /*0x11235bc*/ void OnCreate();
    /*0x11235c0*/ void OnDelete();
    /*0x11235c4*/ void OnEnter();
    /*0x1123630*/ void OnFinish();
    /*0x1123634*/ void OnLeave();
    /*0x1123638*/ void OnStart();
    /*0x112363c*/ void OnExit();
    /*0x11236b8*/ void InitializePopup(PTShare.Define.STroop m_troop);
    /*0x11236e4*/ void OnConfirm();
}

class VerifyCountPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Text m_Text;

    /*0x10d2d38*/ VerifyCountPopup();
    /*0x10d2958*/ void OnCreate();
    /*0x10d295c*/ void OnDelete();
    /*0x10d2960*/ void OnEnter();
    /*0x10d2964*/ void OnStart();
    /*0x10d2968*/ void OnExit();
    /*0x10d296c*/ void OnFinish();
    /*0x10d2970*/ void OnLeave();
    /*0x10d2974*/ void RenewCount();
    /*0x10d2a18*/ string GetVerifyCountString();
}

struct WorldArenaNewRecordData
{
    /*0x10*/ WorldArenaRecordType recordType;
    /*0x14*/ int before;
    /*0x18*/ int after;
    /*0x20*/ System.Collections.Generic.List<Rewards> reward;
}

class WorldArenaNewRecordPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ UnityEngine.GameObject m_pointObejcts;
    /*0x50*/ UnityEngine.GameObject m_tierObejcts;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_animRecord;
    /*0x60*/ LocalizeString m_currentRank;
    /*0x68*/ LocalizeString m_raiseRank;
    /*0x70*/ AtlasImage m_befTierIcon;
    /*0x78*/ AtlasImage m_aftTierIcon;
    /*0x80*/ LocalizeString m_befTierName;
    /*0x88*/ LocalizeString m_aftTierName;
    /*0x90*/ System.Collections.Generic.List<WorldArenaNewRecordRewardEntity> m_liRewardSlot;
    /*0x98*/ System.Collections.Generic.Queue<WorldArenaNewRecordData> m_items;
    /*0xa0*/ WorldArenaNewRecordData m_currentData;
    /*0xb8*/ bool m_bPlayingAnim;

    /*0xe06404*/ WorldArenaNewRecordPopup();
    /*0xe05a98*/ void OnCreate();
    /*0xe05a9c*/ void OnDelete();
    /*0xe05aa0*/ void OnEnter();
    /*0xe05aa4*/ void OnFinish();
    /*0xe05aa8*/ void OnLeave();
    /*0xe05aac*/ void OnStart();
    /*0xe05ab0*/ void OnExit();
    /*0xe05cd8*/ void Initialize(WorldArenaNewRecordData[] datas);
    /*0xe05ab4*/ void Dequeue();
    /*0xe05dd0*/ void SetData();
    /*0xe06320*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xe06324*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
}

enum WorldArenaTapType
{
    Fight = 0,
    Ranking = 1,
    Reward = 2,
    End = 3,
}

class WorldArenaPopup : GuiBase
{
    /*0x40*/ AtlasImage m_tier;
    /*0x48*/ LocalizeString m_tierName;
    /*0x50*/ LocalizeString m_currentScoreText;
    /*0x58*/ LocalizeString m_baseScoreText;
    /*0x60*/ LocalizeString m_totalDefense;
    /*0x68*/ SeasonTimeText m_limitTime;
    /*0x70*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x78*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggles;
    /*0x80*/ WorldArenaFightParent m_fightParent;
    /*0x88*/ WorldArenaRankParent m_rankParent;
    /*0x90*/ WorldArenaRewardParent m_rewardParent;
    /*0x98*/ WorldArenaTapType m_eCurrentTapType;
    /*0xa0*/ System.Collections.IEnumerator m_ieCoUpdate;

    /*0xe079b4*/ WorldArenaPopup();
    /*0xe06484*/ int get_CurrentTier();
    /*0xe06504*/ TableData.TableData_Worldarenatier2 get_CurrentTierConfig();
    /*0xe0651c*/ void OnCreate();
    /*0xe06520*/ void OnDelete();
    /*0xe06524*/ void OnEnter();
    /*0xe06618*/ void OnFinish();
    /*0xe0661c*/ void OnLeave();
    /*0xe066f0*/ void OnStart();
    /*0xe066f4*/ void OnExit();
    /*0xe066e4*/ void Release();
    /*0xe06770*/ void InitializePopup(WorldArenaTapType _eTap);
    /*0xe06c40*/ void ReInitialize();
    /*0xe06c50*/ void Initialize(WorldArenaTapType _eTap);
    /*0xe071fc*/ void InitializeToggle(WorldArenaTapType _eTap);
    /*0xe074dc*/ void SetActiveContext(WorldArenaTapType _eType);
    /*0xe068e4*/ void RefreshTopCurrencyWindow();
    /*0xe07684*/ void OnClick_Record();
    /*0xe07708*/ void OnClick_Edit();
    /*0xe07798*/ void OnClick_Trainning();
    /*0xe07818*/ void OnClick_Help();
    /*0xe078bc*/ void HandlerBuyArenaTicket(int _nAmount);
    /*0xe074a0*/ void StartUpdate(System.Collections.IEnumerator co, System.Collections.IEnumerator met);
    /*0xe07434*/ System.Collections.IEnumerator CoUpdate();
    /*0xe07948*/ System.Collections.IEnumerator CoWaitSeason();

    class <>c__DisplayClass25_0
    {
        /*0x10*/ WorldArenaPopup <>4__this;
        /*0x18*/ WorldArenaTapType _eTap;

        /*0xd8c754*/ <>c__DisplayClass25_0();
        /*0xd8c75c*/ void <InitializePopup>b__0();
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ WorldArenaTapType tapType;
        /*0x18*/ WorldArenaPopup <>4__this;

        /*0xd8c79c*/ <>c__DisplayClass28_0();
        /*0xd8c7a4*/ void <InitializeToggle>b__0(bool on);
    }

    class <CoUpdate>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaPopup <>4__this;

        /*0xd8c7d0*/ <CoUpdate>d__37(int <>1__state);
        /*0xd8c7fc*/ void System.IDisposable.Dispose();
        /*0xd8c800*/ bool MoveNext();
        /*0xd8c924*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8c92c*/ void System.Collections.IEnumerator.Reset();
        /*0xd8c96c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoWaitSeason>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaPopup <>4__this;

        /*0xd8c974*/ <CoWaitSeason>d__38(int <>1__state);
        /*0xd8c9a0*/ void System.IDisposable.Dispose();
        /*0xd8c9a4*/ bool MoveNext();
        /*0xd8cac4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8cacc*/ void System.Collections.IEnumerator.Reset();
        /*0xd8cb0c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldmapPopup : GuiBase
{
    static float m_fMaxScale = 1.5;
    static float m_fMinScale = 0.800000011920929;
    static float m_fPower = 0.05000000074505806;
    /*0x40*/ PathMaker m_WorldMapPath;
    /*0x48*/ UnityEngine.UI.ScrollRect m_ScrollRect;
    /*0x50*/ UnityEngine.UI.GridLayoutGroup m_GridLayoutGroup;
    /*0x58*/ UnityEngine.RectTransform m_worldBoss;
    /*0x60*/ AtlasImage m_worldFrame;
    /*0x68*/ AtlasImage m_worldTitleFrame;
    /*0x70*/ AtlasImage m_normalIcon;
    /*0x78*/ AtlasImage m_normalFrame;
    /*0x80*/ AtlasImage m_hardIcon;
    /*0x88*/ AtlasImage m_hardFrame;
    /*0x90*/ System.Collections.Generic.List<ChapterPoint> m_liChapterPoint;
    /*0x98*/ System.Collections.Generic.Dictionary<int, WorldMapCloser> m_dicChapterCloser;
    /*0xa0*/ System.Collections.IEnumerator m_ieRefreshPosition;
    /*0xa8*/ int m_nViewChapter;
    /*0xac*/ bool m_bIsPlayAnimation;
    /*0xb0*/ System.Collections.Generic.List<PathData> m_worldMapData;
    /*0xb8*/ UnityEngine.Vector2 m_vecFirStartPosition;
    /*0xc0*/ UnityEngine.Vector2 m_vecSecStartPosition;
    /*0xc8*/ UnityEngine.Vector2 m_vecFirEndPosition;
    /*0xd0*/ UnityEngine.Vector2 m_vecSecEndPosition;
    /*0xd8*/ UnityEngine.Vector2 m_vecScrollPosition;
    /*0xe0*/ float m_fStartDistance;
    /*0xe4*/ float m_fEndDistance;
    /*0xe8*/ float m_fFactor;
    /*0xec*/ bool m_bIsTouch;
    /*0xf0*/ UnityEngine.Vector2 m_vecTouchPosition;
    /*0xf8*/ UnityEngine.Vector2 m_vecViewPosition;

    /*0xe1237c*/ WorldmapPopup();
    /*0xe10204*/ void OnCreate();
    /*0xe10208*/ void OnDelete();
    /*0xe1020c*/ void OnEnter();
    /*0xe102e4*/ void OnFinish();
    /*0xe102e8*/ void OnLeave();
    /*0xe10398*/ void OnStart();
    /*0xe1039c*/ void OnExit();
    /*0xe10470*/ void InitializePopup(bool _isNextChapter, bool _useWorldBoss);
    /*0xe106b0*/ void CreateMapPath();
    /*0xe10a7c*/ void SetWorldMap();
    /*0xe11474*/ void SetActiveFriendPosition(bool _enable);
    /*0xe10e80*/ void SetScrollPosition(int _chapter);
    /*0xe10ed8*/ void SetScrollWorldBoss();
    /*0xe1161c*/ void MoveScrollPosition(int _chapter);
    /*0xe11534*/ System.Collections.IEnumerator CoRefreshPosition(int _chapter);
    /*0xe115b0*/ System.Collections.IEnumerator CoRefreshWorldBoss();
    /*0xe11880*/ System.Collections.IEnumerator CoCurrentChapterFlag(int _chapter);
    /*0xe118fc*/ System.Collections.IEnumerator CoCurrentChapterDissolve(int _chapter);
    /*0xe10f24*/ void RefreshChapterCloser();
    /*0xe11978*/ void HandlerNextChapterEvent();
    /*0xe11988*/ void Update();
    /*0xe11ffc*/ void OnClickDiffMode(int _diff);
    /*0xe1223c*/ void RefreshCampaignMode(StageDifficult diff);
    /*0xe112c8*/ void SetHardMode();
    /*0xe1111c*/ void SetNormalMode();
    /*0xe12488*/ void <OnExit>b__22_0();

    class <CoRefreshPosition>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;
        /*0x28*/ int _chapter;

        /*0xd8ef10*/ <CoRefreshPosition>d__30(int <>1__state);
        /*0xd8ef3c*/ void System.IDisposable.Dispose();
        /*0xd8ef40*/ bool MoveNext();
        /*0xd8f2ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8f2f4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8f334*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshWorldBoss>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;

        /*0xd8f33c*/ <CoRefreshWorldBoss>d__31(int <>1__state);
        /*0xd8f368*/ void System.IDisposable.Dispose();
        /*0xd8f36c*/ bool MoveNext();
        /*0xd8f5fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8f604*/ void System.Collections.IEnumerator.Reset();
        /*0xd8f644*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ WorldmapPopup <>4__this;
        /*0x18*/ int _chapter;

        /*0xd8e9d0*/ <>c__DisplayClass32_0();
        /*0xd8e9d8*/ bool <CoCurrentChapterFlag>b__0();
    }

    class <CoCurrentChapterFlag>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;
        /*0x28*/ int _chapter;

        /*0xd8ecfc*/ <CoCurrentChapterFlag>d__32(int <>1__state);
        /*0xd8ed28*/ void System.IDisposable.Dispose();
        /*0xd8ed2c*/ bool MoveNext();
        /*0xd8eec0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8eec8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8ef08*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ bool bResult;

        /*0xd8ea5c*/ <>c__DisplayClass33_0();
        /*0xd8ea64*/ void <CoCurrentChapterDissolve>b__0();
        /*0xd8ea70*/ bool <CoCurrentChapterDissolve>b__1();
    }

    class <CoCurrentChapterDissolve>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldmapPopup <>4__this;
        /*0x28*/ int _chapter;

        /*0xd8eac8*/ <CoCurrentChapterDissolve>d__33(int <>1__state);
        /*0xd8eaf4*/ void System.IDisposable.Dispose();
        /*0xd8eaf8*/ bool MoveNext();
        /*0xd8ecac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8ecb4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8ecf4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ WorldmapPopup <>4__this;
        /*0x18*/ StageDifficult diff;

        /*0xd8ea78*/ <>c__DisplayClass51_0();
        /*0xd8ea80*/ void <OnClickDiffMode>b__0();
        /*0xd8eaa4*/ void <OnClickDiffMode>b__1();
    }
}

class LogoTitleSet
{
    /*0x10*/ string skinName;
    /*0x18*/ UnityEngine.GameObject effect;

    /*0xfbca70*/ LogoTitleSet();
}

class LogoSceneInitializer : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Video.VideoPlayer m_VideoPlayer;
    /*0x20*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_Title;
    /*0x28*/ TitleSkinOption m_TitleOption;
    /*0x30*/ UnityEngine.GameObject m_LetterBox;
    /*0x38*/ int m_AlphaCount;
    /*0x40*/ UnityEngine.GameObject m_Parent;
    /*0x48*/ LoginPlatformView m_LoginPlatform;
    /*0x50*/ UnityEngine.UI.Text m_Version;
    /*0x58*/ bool checkGateInit;

    /*0xfbc610*/ LogoSceneInitializer();
    /*0xfbae80*/ void OnEnable();
    /*0xfbafc4*/ void OnDisable();
    /*0xfbb114*/ void Awake();
    /*0xfbb3ac*/ System.Collections.IEnumerator M_VideoPlayerStartFixedFrame();
    /*0xfbb418*/ System.Collections.IEnumerator ProcessFadeOutLogo();
    /*0xfbb484*/ System.Collections.IEnumerator InitializeTitle();
    /*0xfbb4f0*/ System.Collections.IEnumerator InTitleStartFixedFrame();
    /*0xfbb54c*/ System.Collections.IEnumerator InTitlePlaySfx();
    /*0xfbb5a8*/ void InTitleComplete(Spine.TrackEntry trackEntry);
    /*0xfbb64c*/ void CompleteTitleInitialize();
    /*0xfbb34c*/ void SetActiveUIParent(bool _bEnable);
    /*0xfbb364*/ void SetActivePlatform(bool _bEnable);
    /*0xfbb7cc*/ void InitVersion();
    /*0xfbb89c*/ void HandlerLoginAnimation();
    /*0xfbbc90*/ void HandlerLoadUpdateTop();
    /*0xfbbe74*/ void HandlerSceneChange();
    /*0xfbbf54*/ void CompleteTitleAnimation(Spine.TrackEntry trackEntry);
    /*0xfbc100*/ void HandlerLoginFailEvent();
    /*0xfbc108*/ void EndDownloadBundleEvent();
    /*0xfbbab8*/ void StartLogin();
    /*0xfbbff8*/ void GotoMainScene();
    /*0xfbc294*/ void HandlerShowPopupEvent();
    /*0xfbc420*/ System.Collections.IEnumerator CoProtocolVersionCheck();
    /*0xfbc48c*/ void Send_GateCheck();
    /*0xfbc558*/ System.Collections.IEnumerator CoBalanceTableDownload();
    /*0xfbc5b4*/ System.Collections.IEnumerator CoGateZone();
    /*0xfbc620*/ bool <CoProtocolVersionCheck>b__31_0();
    /*0xfbc628*/ void <Send_GateCheck>b__32_0(bool success, PTShare.Define.ErrorCode code);

    class <M_VideoPlayerStartFixedFrame>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;

        /*0xe5bc8c*/ <M_VideoPlayerStartFixedFrame>d__12(int <>1__state);
        /*0xe5bcb8*/ void System.IDisposable.Dispose();
        /*0xe5bcbc*/ bool MoveNext();
        /*0xe5bdec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5bdf4*/ void System.Collections.IEnumerator.Reset();
        /*0xe5be34*/ object System.Collections.IEnumerator.get_Current();
    }

    class <ProcessFadeOutLogo>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;
        /*0x28*/ float <decreaseAlpha>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xe5be3c*/ <ProcessFadeOutLogo>d__13(int <>1__state);
        /*0xe5be68*/ void System.IDisposable.Dispose();
        /*0xe5be6c*/ bool MoveNext();
        /*0xe5bf54*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5bf5c*/ void System.Collections.IEnumerator.Reset();
        /*0xe5bf9c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ bool dataInitialized;

        /*0xe5abf4*/ <>c__DisplayClass14_0();
        /*0xe5abfc*/ bool <InitializeTitle>b__1();
    }

    class <>c
    {
        static /*0x0*/ LogoSceneInitializer.<> <>9;
        static /*0x8*/ System.Func<bool> <>9__14_0;
        static /*0x10*/ System.Func<bool> <>9__14_2;
        static /*0x18*/ System.Action <>9__23_0;
        static /*0x20*/ System.Action<bool> <>9__32_1;

        static /*0xe5a8bc*/ <>c();
        /*0xe5a91c*/ <>c();
        /*0xe5a924*/ bool <InitializeTitle>b__14_0();
        /*0xe5a980*/ bool <InitializeTitle>b__14_2();
        /*0xe5aa0c*/ void <HandlerLoadUpdateTop>b__23_0();
        /*0xe5ab0c*/ void <Send_GateCheck>b__32_1(bool result);
    }

    class <InitializeTitle>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;
        /*0x28*/ LogoSceneInitializer.<> <>8__1;

        /*0xe5b5fc*/ <InitializeTitle>d__14(int <>1__state);
        /*0xe5b628*/ void System.IDisposable.Dispose();
        /*0xe5b62c*/ bool MoveNext();
        /*0xe5bc3c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5bc44*/ void System.Collections.IEnumerator.Reset();
        /*0xe5bc84*/ object System.Collections.IEnumerator.get_Current();
    }

    class <InTitleStartFixedFrame>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5b4f0*/ <InTitleStartFixedFrame>d__15(int <>1__state);
        /*0xe5b51c*/ void System.IDisposable.Dispose();
        /*0xe5b520*/ bool MoveNext();
        /*0xe5b5ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b5b4*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b5f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <InTitlePlaySfx>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5b388*/ <InTitlePlaySfx>d__16(int <>1__state);
        /*0xe5b3b4*/ void System.IDisposable.Dispose();
        /*0xe5b3b8*/ bool MoveNext();
        /*0xe5b4a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b4a8*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b4e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoProtocolVersionCheck>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LogoSceneInitializer <>4__this;

        /*0xe5b1fc*/ <CoProtocolVersionCheck>d__31(int <>1__state);
        /*0xe5b228*/ void System.IDisposable.Dispose();
        /*0xe5b22c*/ bool MoveNext();
        /*0xe5b338*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b340*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b380*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ bool _isloaded;

        /*0xe5ac04*/ <>c__DisplayClass33_0();
        /*0xe5ac0c*/ void <CoBalanceTableDownload>b__0(bool _result);
        /*0xe5ad58*/ bool <CoBalanceTableDownload>b__1();
    }

    class <CoBalanceTableDownload>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5ad7c*/ <CoBalanceTableDownload>d__33(int <>1__state);
        /*0xe5ada8*/ void System.IDisposable.Dispose();
        /*0xe5adac*/ bool MoveNext();
        /*0xe5af8c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5af94*/ void System.Collections.IEnumerator.Reset();
        /*0xe5afd4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ bool _isloaded;

        /*0xe5ad60*/ <>c__DisplayClass34_0();
        /*0xe5ad68*/ void <CoGateZone>b__0();
        /*0xe5ad74*/ bool <CoGateZone>b__1();
    }

    class <CoGateZone>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe5afdc*/ <CoGateZone>d__34(int <>1__state);
        /*0xe5b008*/ void System.IDisposable.Dispose();
        /*0xe5b00c*/ bool MoveNext();
        /*0xe5b1ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5b1b4*/ void System.Collections.IEnumerator.Reset();
        /*0xe5b1f4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ReStart : UnityEngine.MonoBehaviour
{
    /*0x11c339c*/ ReStart();
    /*0x11c3340*/ System.Collections.IEnumerator Start();

    class <Start>d__0 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf97e90*/ <Start>d__0(int <>1__state);
        /*0xf97ebc*/ void System.IDisposable.Dispose();
        /*0xf97ec0*/ bool MoveNext();
        /*0xf98170*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf98178*/ void System.Collections.IEnumerator.Reset();
        /*0xf981b8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ServerSelectSceneInitializer : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Button m_GameStartButton;

    /*0xe263dc*/ ServerSelectSceneInitializer();
    /*0xe262b8*/ void Awake();

    class <>c
    {
        static /*0x0*/ ServerSelectSceneInitializer.<> <>9;
        static /*0x8*/ UnityEngine.Events.UnityAction <>9__1_0;

        static /*0xcbe464*/ <>c();
        /*0xcbe4c4*/ <>c();
        /*0xcbe4cc*/ void <Awake>b__1_0();
    }
}

class StartServerSelect : UnityEngine.MonoBehaviour
{
    /*0xc9a068*/ StartServerSelect();
    /*0xc9a00c*/ System.Collections.IEnumerator Start();

    class <Start>d__0 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcc2958*/ <Start>d__0(int <>1__state);
        /*0xcc2984*/ void System.IDisposable.Dispose();
        /*0xcc2988*/ bool MoveNext();
        /*0xcc2b88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2b90*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2bd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class StartSyncTool : UnityEngine.MonoBehaviour
{
    /*0xc9a0cc*/ StartSyncTool();
    /*0xc9a070*/ System.Collections.IEnumerator Start();

    class <Start>d__0 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcc2bd8*/ <Start>d__0(int <>1__state);
        /*0xcc2c04*/ void System.IDisposable.Dispose();
        /*0xcc2c08*/ bool MoveNext();
        /*0xcc2e08*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2e10*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2e50*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum RaceTileType
{
    NONE = 0,
    NORMAL = 1,
    START = 2,
    FINISH = 3,
    ICE = 4,
    SCREAM = 5,
    FALL = 6,
    JUMP = 7,
}

class RunRaceResultData
{
    /*0x10*/ System.Collections.Generic.Dictionary<int, int> Unit;
    /*0x18*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<RaceTileType>> Tile;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<float>> Speed;
    /*0x28*/ System.Collections.Generic.List<int> Rank;
    /*0x30*/ System.Collections.Generic.Dictionary<int, float> Time;

    /*0x12956c4*/ RunRaceResultData();
    /*0x12955cc*/ int GetPlayers();
    /*0x1295620*/ int GetBlockCount();
    /*0x1295840*/ void Clear();
}

class RaceSimulrator
{
    /*0x10*/ int nMaxSpeedCount;
    /*0x14*/ int nBlockCount;
    /*0x18*/ int nTrapBlockCount;
    /*0x20*/ RunRaceResultData data;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> RunAccelData;

    /*0x11b837c*/ RaceSimulrator();
    /*0x11b63b0*/ System.Collections.Generic.List<TableData.TableData_Racetile> get_RunTileData();
    /*0x11b63fc*/ float get_BlockInterval();
    /*0x11b644c*/ int get_JoinPlayer();
    /*0x11b6494*/ float get_MaxDistance();
    /*0x11b64c0*/ float get_OriginSpeed();
    /*0x11b6510*/ float get_MoveFrameSpeed();
    /*0x11b651c*/ int get_SplitAccelInterval();
    /*0x11b6564*/ void Setup(int seed);
    /*0x11b6600*/ void SetupRunner(System.Random rnd);
    /*0x11b6934*/ void SetupTile(System.Random rnd);
    /*0x11b6e84*/ void SetupSpeed(System.Random rnd);
    /*0x11b7a80*/ void CalulationTime();
    /*0x11b8374*/ RunRaceResultData GetResult();
    /*0x11b7094*/ RaceTileType <SetupTile>g__GetRandomTile|21_2(System.Random random, int playerNumber);
    /*0x11b777c*/ float <SetupSpeed>g__GetRandomSpeed|22_0(System.Random random, int playerNumber);

    class <>c
    {
        static /*0x0*/ RaceSimulrator.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Unitbase, bool> <>9__20_0;
        static /*0x10*/ System.Func<TableData.TableData_Unitbase, int> <>9__20_1;
        static /*0x18*/ System.Func<TableData.TableData_Racetile, int> <>9__21_0;
        static /*0x20*/ System.Func<TableData.TableData_Racetile, int> <>9__21_1;
        static /*0x28*/ System.Func<TableData.TableData_Racetile, float> <>9__21_3;
        static /*0x30*/ System.Func<TableData.TableData_Raceaccel, float> <>9__22_1;
        static /*0x38*/ System.Func<System.Collections.Generic.KeyValuePair<int, float>, float> <>9__23_2;

        static /*0xf96554*/ <>c();
        /*0xf965b4*/ <>c();
        /*0xf965bc*/ bool <SetupRunner>b__20_0(TableData.TableData_Unitbase w);
        /*0xf965ec*/ int <SetupRunner>b__20_1(TableData.TableData_Unitbase s);
        /*0xf96604*/ int <SetupTile>b__21_0(TableData.TableData_Racetile x);
        /*0xf96634*/ int <SetupTile>b__21_1(TableData.TableData_Racetile x);
        /*0xf96700*/ float <SetupTile>b__21_3(TableData.TableData_Racetile x);
        /*0xf96718*/ float <SetupSpeed>b__22_1(TableData.TableData_Raceaccel x);
        /*0xf96730*/ float <CalulationTime>b__23_2(System.Collections.Generic.KeyValuePair<int, float> x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int i;
        /*0x18*/ RaceSimulrator <>4__this;

        /*0xf9677c*/ <>c__DisplayClass21_0();
        /*0xf96784*/ bool <SetupTile>b__4(RaceTileType x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ TableData.TableData_Raceaccel tableData;

        /*0xf9686c*/ <>c__DisplayClass22_0();
        /*0xf96874*/ bool <SetupSpeed>b__2(float x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ RaceSimulrator <>4__this;
        /*0x18*/ int i;

        /*0xf96898*/ <>c__DisplayClass23_0();
    }

    class <>c__DisplayClass23_1
    {
        /*0x10*/ int nNextIndex;
        /*0x18*/ RaceSimulrator.<> CS$<>8__locals1;
        /*0x20*/ System.Predicate<TableData.TableData_Racetile> <>9__0;
        /*0x28*/ System.Predicate<TableData.TableData_Racetile> <>9__1;

        /*0xf968a0*/ <>c__DisplayClass23_1();
        /*0xf968a8*/ bool <CalulationTime>b__0(TableData.TableData_Racetile x);
        /*0xf969cc*/ bool <CalulationTime>b__1(TableData.TableData_Racetile x);
    }
}

class ShaderController : UnityEngine.MonoBehaviour
{
    /*0x18*/ string Property;
    /*0x20*/ float RangeValue2;
    /*0x28*/ UnityEngine.Material m_Material;

    /*0xe28d80*/ ShaderController();
    /*0xe28c2c*/ void Awake();
    /*0xe28d28*/ void LateUpdate();
}

class AdsRewardSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ TableManager.Ads.AdsRewardType m_eRewardType;
    /*0x20*/ LocalizeString m_title;
    /*0x28*/ AtlasImage m_rewardIcon;
    /*0x30*/ AtlasImage m_hide;
    /*0x38*/ LocalizeString m_rewardText;

    /*0xed9ba8*/ AdsRewardSlot();
    /*0xed9714*/ bool get_IsAlready();
    /*0xed976c*/ void Initialize();
    /*0xed9b34*/ void OnClick();
}

class AreaMainWindow : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;

    static /*0xee1b18*/ AreaMainWindow();
    static /*0xee042c*/ void add_OnExitEvent(System.Action value);
    static /*0xee0520*/ void remove_OnExitEvent(System.Action value);
    /*0xee1b10*/ AreaMainWindow();
    /*0xee0614*/ void OnCreate();
    /*0xee0618*/ void OnEnter();
    /*0xee061c*/ void OnStart();
    /*0xee0620*/ void OnFinish();
    /*0xee0624*/ void OnLeave();
    /*0xee0628*/ void OnDelete();
    /*0xee068c*/ void OnExit();
    /*0xee0714*/ void InitalizeArea();
    /*0xee0718*/ void OnClickPeaksoftime();
    /*0xee071c*/ void OnClickWonders();
    /*0xee0720*/ void OnClickKingsTower(bool showEffect);
    /*0xee0918*/ void OnClickMaze();
    /*0xee09b8*/ void OnClickAreaHeroes();
    /*0xee09c8*/ void OnClickAreaHeroes(PTShare.Define.ArenaSubType eType, bool showEffect, bool isBattleToArea);
    /*0xee10ec*/ void OnClickBountyBoard();
    /*0xee1248*/ void OnClickMinigame();
    /*0xee13d0*/ void OnClickDungeon();
    /*0xee152c*/ void OnClickPveRanking();

    class <>c
    {
        static /*0x0*/ AreaMainWindow.<> <>9;
        static /*0x8*/ System.Action <>9__13_0;
        static /*0x10*/ System.Action <>9__17_0;
        static /*0x18*/ System.Action <>9__18_0;
        static /*0x20*/ System.Action <>9__19_1;
        static /*0x28*/ System.Action <>9__19_0;
        static /*0x30*/ System.Action <>9__20_1;
        static /*0x38*/ System.Action <>9__20_0;
        static /*0x40*/ System.Action<bool> <>9__20_2;

        static /*0xd99d50*/ <>c();
        /*0xd99db0*/ <>c();
        /*0xd99db8*/ void <OnClickKingsTower>b__13_0();
        /*0xd99e3c*/ void <OnClickBountyBoard>b__17_0();
        /*0xd99eec*/ void <OnClickMinigame>b__18_0();
        /*0xd99f60*/ void <OnClickDungeon>b__19_0();
        /*0xd9a0a8*/ void <OnClickDungeon>b__19_1();
        /*0xd9a128*/ void <OnClickPveRanking>b__20_0();
        /*0xd9a270*/ void <OnClickPveRanking>b__20_1();
        /*0xd9a2f0*/ void <OnClickPveRanking>b__20_2(bool _result);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ bool isBattleToArea;
        /*0x14*/ PTShare.Define.ArenaSubType eType;

        /*0xd9a2f4*/ <>c__DisplayClass16_0();
        /*0xd9a2fc*/ void <OnClickAreaHeroes>b__0();
    }
}

class ArenaCategoryEntity : CategoryEntityBase<PTShare.Define.ArenaSubType>
{
    /*0x60*/ UnityEngine.GameObject m_JoinLock;
    /*0x68*/ AtlasImage m_CenterTier;
    /*0x70*/ LocalizeString m_TierName;

    /*0xee3d08*/ ArenaCategoryEntity();
    /*0xee1b1c*/ void InitializeEntity(PTShare.Define.ArenaSubType eType);
    /*0xee1cc4*/ void SetBackground();
    /*0xee1f08*/ void SetSeasonText();
    /*0xee206c*/ void SetPanel();
    /*0xee239c*/ void SetTopRightButton();
    /*0xee2638*/ void SetTitleText();
    /*0xee1b80*/ void SetJoinLock();
    /*0xee28a4*/ void SetActiveTier(bool enable);
    /*0xee28bc*/ void SetTier();
    /*0xee2af4*/ void OnClick();

    class <>c
    {
        static /*0x0*/ ArenaCategoryEntity.<> <>9;
        static /*0x8*/ UnityEngine.Events.UnityAction <>9__7_0;
        static /*0x10*/ System.Action<bool> <>9__12_0;
        static /*0x18*/ System.Action<bool> <>9__12_1;

        static /*0xd9a4a0*/ <>c();
        /*0xd9a500*/ <>c();
        /*0xd9a508*/ void <SetTopRightButton>b__7_0();
        /*0xd9a588*/ void <OnClick>b__12_0(bool _result);
        /*0xd9a58c*/ void <OnClick>b__12_1(bool _result);
    }
}

class ArenaLimitNotice : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_limitText;

    /*0xee4164*/ ArenaLimitNotice();
    /*0xee3f34*/ void Init();
    /*0xee413c*/ void Hide();
}

class ArenaTrainningProcess : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_TrainningCount;
    /*0x20*/ LocalizeString m_MaxMaterialNotice;
    /*0x28*/ System.Collections.Generic.List<ArenaTrainningProcess.TrainningMaterials> m_liMaterials;
    /*0x30*/ System.Collections.Generic.List<ArenaTrainningProcess.TrainningStatus> m_liStatus;
    /*0x38*/ System.Collections.Generic.List<Rewards> liTrainningRewards;
    /*0x40*/ int nGroupCurIndex;
    /*0x44*/ int nIndivCurIndex;

    /*0xeeb870*/ ArenaTrainningProcess();
    /*0xeeae64*/ int get_TrainingRotationMax();
    /*0xeea91c*/ void InitializeProcess(int groupCur, int indivCur);
    /*0xeeae70*/ void SetTrainningCount(int index);
    /*0xeeb6a4*/ void SetStatus(int index);
    /*0xeeaf38*/ void SetMaterials();
    /*0xeeb7fc*/ TrainningStatusEntity GetCurrentEntity();

    class TrainningMaterials
    {
        /*0x10*/ UnityEngine.GameObject parent;
        /*0x18*/ AtlasImage currencyIcon;
        /*0x20*/ LocalizeString currencyAmount;
        /*0x28*/ TooltipData_Desc desc;

        /*0xd9d200*/ TrainningMaterials();
    }

    class TrainningStatus
    {
        /*0x10*/ TrainningStatusEntity parent;
        /*0x18*/ AtlasImage arrow;

        /*0xd9d208*/ TrainningStatus();
    }

    class <>c
    {
        static /*0x0*/ ArenaTrainningProcess.<> <>9;
        static /*0x8*/ System.Action<ArenaTrainningProcess.TrainningMaterials> <>9__14_0;

        static /*0xd9d170*/ <>c();
        /*0xd9d1d0*/ <>c();
        /*0xd9d1d8*/ void <SetMaterials>b__14_0(ArenaTrainningProcess.TrainningMaterials x);
    }
}

class GeneralArenaMatchEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_PlayerSlot;
    /*0x20*/ AtlasImage m_BtnIcon;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_Power;
    /*0x38*/ LocalizeString m_Score;
    /*0x40*/ LocalizeString m_ButtonText;
    /*0x48*/ PTShare.Define.SArenaTarget targetInfo;
    /*0x50*/ PTShare.Define.ArenaSubType eArenaCategoryType;
    /*0x54*/ int index;

    /*0xed0a94*/ GeneralArenaMatchEntity();
    /*0xecfff8*/ TableData.TableData_Item get_TicketItem();
    /*0xed00e4*/ void InitializeEntity(PTShare.Define.ArenaSubType _eType, PTShare.Define.SArenaTarget _target, int _index);
    /*0xed00f0*/ void SetView();
    /*0xed04b8*/ void OnClick_Battle();
    /*0xed0910*/ void CallbackBattle();
    /*0xed0a08*/ void HandlerBuyArenaTicket(int _nAmount);
    /*0xed0010*/ int GetArenaNeedItemID();
    /*0xed0aa4*/ void <SetView>b__12_0();
    /*0xed0ac4*/ void <SetView>b__12_1();
}

class GeneralArenaRecordEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_PlayerSlot;
    /*0x20*/ UnityEngine.UI.Button m_Button;
    /*0x28*/ AtlasImage m_BtnIcon;
    /*0x30*/ LocalizeString m_ButtonText;
    /*0x38*/ LocalizeString m_Score;
    /*0x40*/ LocalizeString m_Nickname;
    /*0x48*/ LocalizeString m_LastedTime;
    /*0x50*/ int index;
    /*0x58*/ PTShare.Define.SArenaHistory historyInfo;
    /*0x60*/ PTShare.Define.ArenaSubType eArenaCategoryType;

    /*0xed27fc*/ GeneralArenaRecordEntity();
    /*0xed1b34*/ TableData.TableData_Item get_TicketItem();
    /*0xed1c20*/ void InitializeEntity(PTShare.Define.ArenaSubType _eType, PTShare.Define.SArenaHistory _history, int index);
    /*0xed1c30*/ void SetView();
    /*0xed222c*/ void OnClick_Graph();
    /*0xed23ec*/ void OnClick_Revenge();
    /*0xed2704*/ void CallbackBattle();
    /*0xed1b4c*/ int GetArenaNeedItemID();
    /*0xed280c*/ void <SetView>b__13_0();
    /*0xed282c*/ void <SetView>b__13_1();
}

class GuildWarRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Selected;
    /*0x20*/ AtlasImage m_RankIcon;
    /*0x28*/ UnityEngine.GameObject m_PointParent;
    /*0x30*/ UnityEngine.GameObject m_ButtonParent;
    /*0x38*/ LocalizeString m_RankCount;
    /*0x40*/ LocalizeString m_PointAmount;
    /*0x48*/ int nRankIndex;
    /*0x50*/ TableData.TableData_Guildwarrank rankInfo;

    /*0x10f3368*/ GuildWarRewardEntity();
    /*0x10f2e84*/ void Release();
    /*0x10f2efc*/ void InitializeEntity(int nIndex, TableData.TableData_Guildwarrank data, bool bSelected);
    /*0x10f31e0*/ void OnClick_RewardDetail();
    /*0x10f3280*/ void OnClick_RewardDetailSelf();
}

class HeroWorldArenaSlot : HeroSlot
{
    /*0x48*/ AtlasImage m_blind;

    /*0x1309dd0*/ HeroWorldArenaSlot();
    /*0x1309d48*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x1309d78*/ void Clear();
    /*0x1309db8*/ void SetActiveBlind(bool enable);
}

class StartTrainningAnimation : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_Enemy;
    /*0x28*/ ParticleBase m_HitEffect;
    /*0x30*/ UnityEngine.UI.Slider m_Slider;
    /*0x38*/ LocalizeString m_TrainningText;
    /*0x40*/ TableData.TableData_Unitbase unitData;
    /*0x48*/ ActorAnimSyncData syncData;
    /*0x50*/ AnimEvent atkAnimEvent;
    /*0x58*/ System.Action onFinishCallback;

    /*0xc9a738*/ StartTrainningAnimation();
    /*0xc9a0d4*/ void InitializeAnimation(int nStatID, System.Action finishCallback);
    /*0xc9a5c8*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xc9a680*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xc9a55c*/ System.Collections.IEnumerator CoProcess();

    class <>c
    {
        static /*0x0*/ StartTrainningAnimation.<> <>9;
        static /*0x8*/ System.Predicate<AnimEvent> <>9__9_0;

        static /*0xcc2e58*/ <>c();
        /*0xcc2eb8*/ <>c();
        /*0xcc2ec0*/ bool <InitializeAnimation>b__9_0(AnimEvent x);
    }

    class <CoProcess>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StartTrainningAnimation <>4__this;

        /*0xcc2ee0*/ <CoProcess>d__12(int <>1__state);
        /*0xcc2f0c*/ void System.IDisposable.Dispose();
        /*0xcc2f10*/ bool MoveNext();
        /*0xcc32a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc32ac*/ void System.Collections.IEnumerator.Reset();
        /*0xcc32ec*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TierRewardGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardBox;
    /*0x20*/ LocalizeString m_SpecChar;
    /*0x28*/ LocalizeString m_Title;
    /*0x30*/ System.Collections.Generic.List<Rewards> liRewards;

    /*0x116c2b4*/ TierRewardGroup();
    /*0x116bfdc*/ void InitializeGroup(System.Collections.Generic.List<Rewards> rewards, string specChar, string title);
    /*0x116c138*/ void SetRewards(System.Collections.Generic.List<Rewards> rewards);
}

class TrainningStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_Selected;
    /*0x20*/ AtlasImage m_Icon;
    /*0x28*/ ParticleBase m_Effect;
    /*0x30*/ float ParticleSpeed;

    /*0x111f9ac*/ TrainningStatusEntity();
    /*0x111f7b4*/ void OnEnable();
    /*0x111f7ec*/ void InitializeEntity(TableData.TableData_Trainingroom basic);
    /*0x111f8a8*/ void SelectStatus(bool enable);
    /*0x111f8c0*/ void StartParticle(System.Action finishCallback);
    /*0x111f934*/ System.Collections.IEnumerator CoParticleEffect(System.Action finishCallback);

    class <CoParticleEffect>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TrainningStatusEntity <>4__this;
        /*0x28*/ System.Action finishCallback;

        /*0xcd38a8*/ <CoParticleEffect>d__8(int <>1__state);
        /*0xcd38d4*/ void System.IDisposable.Dispose();
        /*0xcd38d8*/ bool MoveNext();
        /*0xcd39c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd39c8*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3a08*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TrainningStatusInfomation : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatusName;
    /*0x20*/ LocalizeString m_BeforeValue;
    /*0x28*/ LocalizeString m_AfterValue;
    /*0x30*/ AtlasImage m_Arrow;
    /*0x38*/ ParticleBase m_Particle;
    /*0x40*/ float m_ParticleSpeed;

    /*0x111fda8*/ TrainningStatusInfomation();
    /*0x111f9bc*/ void OnEnable();
    /*0x111f9f4*/ void InitializeInfomation(int index, int groupCur, int indivCur);
    /*0x111fcd0*/ void StartParticle();
    /*0x111fd3c*/ System.Collections.IEnumerator CoParticle();

    class <CoParticle>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TrainningStatusInfomation <>4__this;

        /*0xcd3a10*/ <CoParticle>d__9(int <>1__state);
        /*0xcd3a3c*/ void System.IDisposable.Dispose();
        /*0xcd3a40*/ bool MoveNext();
        /*0xcd3b18*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd3b20*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3b60*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldArenaBestRewardParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_tierRewardSlot;
    /*0x20*/ LocalizeString m_tierRewardText;
    /*0x28*/ UnityEngine.GameObject m_rankRewardClearIcon;
    /*0x30*/ UnityEngine.GameObject m_tierRewardClearIcon;

    /*0xe040b4*/ WorldArenaBestRewardParent();
    /*0xe03e70*/ void Initialize();
}

class WorldArenaFightEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_playerName;
    /*0x28*/ LocalizeString m_playerScore;
    /*0x30*/ LocalizeString m_totalAttack;
    /*0x38*/ System.Collections.Generic.List<HeroWorldArenaSlot> m_liDefenseHeroes;
    /*0x40*/ UnityEngine.GameObject m_ResultWin;
    /*0x48*/ PTShare.Define.SWorldArenaTarget m_targetData;

    /*0xe04bf8*/ WorldArenaFightEntity();
    /*0xe0431c*/ void Release();
    /*0xe04440*/ void Initialize(PTShare.Define.SWorldArenaTarget data);
    /*0xe048c8*/ void OnClick();
    /*0xe04480*/ void Settings_Localize();
    /*0xe04598*/ void Settings_Heroes();
    /*0xe04c00*/ void <OnClick>b__9_0();

    class <>c
    {
        static /*0x0*/ WorldArenaFightEntity.<> <>9;
        static /*0x8*/ System.Action<HeroWorldArenaSlot> <>9__7_0;
        static /*0x10*/ System.Action<HeroWorldArenaSlot> <>9__11_0;

        static /*0xd8c6ac*/ <>c();
        /*0xd8c70c*/ <>c();
        /*0xd8c714*/ void <Release>b__7_0(HeroWorldArenaSlot x);
        /*0xd8c734*/ void <Settings_Heroes>b__11_0(HeroWorldArenaSlot x);
    }
}

class WorldArenaFightParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_WorldArenaFightEntity m_scrollContent;
    /*0x20*/ UnityEngine.GameObject m_daliyParent;
    /*0x28*/ LocalizeString m_daliyTimeText;
    /*0x30*/ WorldArenaRefreshButton m_refreshButton;

    /*0xe057e8*/ WorldArenaFightParent();
    /*0xe04cec*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> get_targets();
    /*0xe04d6c*/ void OnEnable();
    /*0xe04efc*/ void Initialize();
    /*0xe04ea0*/ void Initialize(bool onEnabled);
    /*0xe04f04*/ void Release();
    /*0xe04fbc*/ void InitializeScroll();
    /*0xe05090*/ void UpdateScrollContent(int index, WorldArenaFightEntity entity);
    /*0xe05110*/ void SyncListDaily_Coroutine();
    /*0xe053f0*/ void SyncListSeason_Coroutine();
}

class WorldArenaNewRecordRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_rewardSlot;
    /*0x20*/ LocalizeString m_rewardAmount;

    /*0xe0647c*/ WorldArenaNewRecordRewardEntity();
    /*0xe061c4*/ void Initialize(Rewards _reward);
}

class WorldArenaRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_playerName;
    /*0x28*/ LocalizeString m_playerScore;
    /*0x30*/ LocalizeString m_totalAttack;
    /*0x38*/ System.Collections.Generic.List<HeroWorldArenaSlot> m_liDefenseHeroes;
    /*0x40*/ LocalizeString m_rankText;
    /*0x48*/ AtlasImage m_RankIcon;
    /*0x50*/ PTShare.Define.SWorldArenaRanker m_targetData;

    /*0xe0863c*/ WorldArenaRankEntity();
    /*0xe079c4*/ void Release();
    /*0xe07f4c*/ void Initialize(PTShare.Define.SWorldArenaRanker data);
    /*0xe08324*/ void Initialize_Self();
    /*0xe07d08*/ void Settings_Localize();
    /*0xe07f8c*/ void Settings_Heroes();

    class <>c
    {
        static /*0x0*/ WorldArenaRankEntity.<> <>9;
        static /*0x8*/ System.Action<HeroWorldArenaSlot> <>9__8_0;
        static /*0x10*/ System.Action<HeroWorldArenaSlot> <>9__12_0;

        static /*0xd8cb14*/ <>c();
        /*0xd8cb74*/ <>c();
        /*0xd8cb7c*/ void <Release>b__8_0(HeroWorldArenaSlot x);
        /*0xd8cb9c*/ void <Settings_Heroes>b__12_0(HeroWorldArenaSlot x);
    }
}

class WorldArenaRankParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_WorldArenaRankEntity m_scrollContent;
    /*0x20*/ WorldArenaRankEntity m_myRank;
    /*0x28*/ LocalizeString m_noMemberText;

    /*0xe08a08*/ WorldArenaRankParent();
    /*0xe08644*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaRanker> get_targets();
    /*0xe086c4*/ void OnEnable();
    /*0xe075d0*/ void Initialize();
    /*0xe087f8*/ void Initialize(bool onEnabled);
    /*0xe088b0*/ void Release();
    /*0xe08900*/ void InitializeScroll();
    /*0xe08988*/ void UpdateScrollContent(int index, WorldArenaRankEntity entity);
}

class WorldArenaRefreshButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_buttonImage;
    /*0x20*/ LocalizeString m_buttonString;
    /*0x28*/ UnityEngine.UI.Outline m_buttonOutline;
    /*0x30*/ System.Collections.IEnumerator m_ieUpdate;

    /*0xe08e14*/ WorldArenaRefreshButton();
    /*0xe04f24*/ void Release();
    /*0xe05044*/ void Initialize();
    /*0xe08a7c*/ void OnClick_ResetButton();
    /*0xe08d34*/ void ResetList();
    /*0xe08a10*/ System.Collections.IEnumerator CoUpdate();
    /*0xe08e1c*/ void <OnClick_ResetButton>b__6_0(bool result);
    /*0xe08e28*/ void <ResetList>b__7_0();

    class <CoUpdate>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaRefreshButton <>4__this;

        /*0xd8cbbc*/ <CoUpdate>d__8(int <>1__state);
        /*0xd8cbe8*/ void System.IDisposable.Dispose();
        /*0xd8cbec*/ bool MoveNext();
        /*0xd8d0b4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8d0bc*/ void System.Collections.IEnumerator.Reset();
        /*0xd8d0fc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldArenaRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_tierIcon;
    /*0x20*/ UnityEngine.GameObject m_select;
    /*0x28*/ LocalizeString m_tier;
    /*0x30*/ LocalizeString m_tierName;
    /*0x38*/ WorldArenaRewardSlot[] m_seasonRewards;
    /*0x40*/ WorldArenaRewardSlot[] m_dailyRewards;
    /*0x48*/ WorldArenaRewardSlot[] m_tierRewards;
    /*0x50*/ TableData.TableData_Worldarenatier2 m_tierData;

    /*0xe095b8*/ WorldArenaRewardEntity();
    /*0xe08eb0*/ void InitEntity(int tierStep);
    /*0xe08f20*/ void SetTier();
    /*0xe09264*/ void SetReward(string rewards, WorldArenaRewardSlot[] target);
}

class WorldArenaRewardParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_WorldArenaRewardEntity m_scrollContent;
    /*0x20*/ WorldArenaBestRewardParent m_bestReward;
    /*0x28*/ int m_tierCount;

    /*0xe0981c*/ WorldArenaRewardParent();
    /*0xe075d8*/ void Initialize();
    /*0xe095c0*/ void BindEvent();
    /*0xe09708*/ void RemoveEvent();
    /*0xe097dc*/ void HandleScrollContent(int index, WorldArenaRewardEntity obj);
    /*0xe0969c*/ System.Collections.IEnumerator CoScrollDelay();

    class <CoScrollDelay>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldArenaRewardParent <>4__this;

        /*0xd8d104*/ <CoScrollDelay>d__7(int <>1__state);
        /*0xd8d130*/ void System.IDisposable.Dispose();
        /*0xd8d134*/ bool MoveNext();
        /*0xd8d25c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8d264*/ void System.Collections.IEnumerator.Reset();
        /*0xd8d2a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldArenaRewardSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_itemSlot;
    /*0x20*/ LocalizeString m_amount;

    /*0xe09824*/ WorldArenaRewardSlot();
    /*0xe09430*/ void SetReward(Rewards reward);
}

class ArtifactChangeEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEquipEvent;
    /*0x18*/ ItemInfoSlot m_InfoSlot;
    /*0x20*/ HeroSlotInventory m_EquipHeroSlot;
    /*0x28*/ LocalizeString m_ArtifactName;
    /*0x30*/ LocalizeString m_GetDesc;
    /*0x38*/ UnityEngine.GameObject m_EquipBtn;
    /*0x40*/ UnityEngine.GameObject m_ChangeBtn;
    /*0x48*/ UnityEngine.GameObject m_MoveBtn;
    /*0x50*/ UnityEngine.GameObject m_AlreadyDesc;
    /*0x58*/ AtlasImage m_Line;
    /*0x60*/ AtlasImage m_Lock;
    /*0x68*/ TableData.TableData_Equipment equipmentInfo;
    /*0x70*/ PTShare.Define.SArtifact artifactData;
    /*0x78*/ PTShare.Define.SHero heroInfo;
    /*0x80*/ PTShare.Define.SHero equipHeroInfo;

    static /*0xeecb28*/ ArtifactChangeEntity();
    /*0xeecb20*/ ArtifactChangeEntity();
    /*0xeebc94*/ bool get_IsUseArtifact();
    /*0xeebca4*/ bool get_IsEquipHero();
    /*0xeebcb4*/ bool get_IsSameEquipArtifact();
    /*0xeebcec*/ void InitializeEntity(PTShare.Define.SHero hero, TableData.TableData_Artifact artifact);
    /*0xeec0c8*/ void Release();
    /*0xeec22c*/ void SetActiveHeroSlot(bool enable);
    /*0xeec268*/ void SetActiveButton(bool equip, bool change, bool move);
    /*0xeec2d0*/ void SetActiveAlreadyDesc(bool enable);
    /*0xeec428*/ void SetActiveLine(bool enable);
    /*0xeec2f0*/ bool IsUnlockMoveContent();
    /*0xeec440*/ void OnClick_Equip();
    /*0xeec740*/ void OnClick_Change();
    /*0xeeca38*/ void OnClick_Move();
}

class ArtifactMaterial : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_MaterialIcon;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ Rewards rewardInfo;

    /*0xeef74c*/ ArtifactMaterial();
    /*0xeef354*/ void InitializeEntity(Rewards reward);
    /*0xeef388*/ void SetMaterial();
    /*0xeef484*/ void SetAmount();
}

class ArtifactPassiveDescEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ActiveIcon;
    /*0x20*/ UnityEngine.UI.Outline m_DescriptionOutline;
    /*0x28*/ LocalizeString m_Description;
    /*0x30*/ UnityEngine.Color m_ActiveColor;
    /*0x40*/ UnityEngine.Color m_ActiveOutColor;
    /*0x50*/ UnityEngine.Color m_DeActiveColor;
    /*0x60*/ UnityEngine.Color m_DeActiveOutColor;
    /*0x70*/ TableData.TableData_Artifact artifactData;
    /*0x78*/ PTShare.Define.SArtifact artifactInfo;

    /*0xeef7d8*/ ArtifactPassiveDescEntity();
    /*0xeee1fc*/ void InitializeEntity(TableData.TableData_Artifact artifact, PTShare.Define.SArtifact data);
    /*0xeef754*/ void SetActiveIcon(bool enable);
    /*0xeef76c*/ void SetDesc(UnityEngine.Color color, UnityEngine.Color outColor);
}

class ArtifactStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatName;
    /*0x20*/ LocalizeString m_StatValue;
    /*0x28*/ LocalizeString m_AddStat;

    /*0xeefc44*/ ArtifactStatusEntity();
    /*0xeee824*/ void InitializeStatus(Battle.CharacterStat.StatType eType, TableData.TableData_Artifact artifact, int nLevel, string color);
    /*0xeee37c*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SHero hero, PTShare.Define.SArtifact artifact, string color);
    /*0xeef998*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SArtifact artifact, int nOffsetLevel, string color);
    /*0xeef7e0*/ void SetStatValue(Battle.CharacterStat.StatType eType, LocalizeString parent, Battle.CharacterStat stat, string addOper);
}

class ArtifactUpgradeResult : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_BefArtifact;
    /*0x20*/ ItemInfoSlot m_AftArtifact;
    /*0x28*/ ArtifactUpgradeStatusGroup m_StatusGroup;
    /*0x30*/ LocalizeString m_EffectDesc;
    /*0x38*/ System.Action OnExitCallback;

    /*0xef0684*/ ArtifactUpgradeResult();
    /*0xef0120*/ void InitializeResult(PTShare.Define.SHero hero, System.Action exitCallback);
    /*0xef0634*/ void OnClick_Exit();
}

class ArtifactUpgradeStatusGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<AtlasImage> m_liBefStar;
    /*0x20*/ System.Collections.Generic.List<AtlasImage> m_liAftStar;
    /*0x28*/ PTShare.Define.SArtifact artifactInfo;
    /*0x30*/ TableData.TableData_Equipment equipmentData;
    /*0x38*/ System.Collections.Generic.List<ArtifactStatusEntity> liStatusEntity;

    /*0xef07e0*/ ArtifactUpgradeStatusGroup();
    /*0xef068c*/ void Release();
    /*0xef0354*/ void InitializeGroup(PTShare.Define.SArtifact _artifact, TableData.TableData_Equipment _equipment, string _color);

    class <>c
    {
        static /*0x0*/ ArtifactUpgradeStatusGroup.<> <>9;
        static /*0x8*/ System.Action<ArtifactStatusEntity> <>9__5_0;

        static /*0xd9dd34*/ <>c();
        /*0xd9dd94*/ <>c();
        /*0xd9dd9c*/ void <Release>b__5_0(ArtifactStatusEntity x);
    }
}

class BattleGuildWarTopUI : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_GuildEmblemSlot_Ally;
    /*0x20*/ GuildEmblemSlot m_GuildEmblemSlot_Enemy;
    /*0x28*/ GuildLevelSlot m_GuildLevelSlot_Ally;
    /*0x30*/ GuildLevelSlot m_GuildLevelSlot_Enemy;
    /*0x38*/ LocalizeString m_GuildName_Ally;
    /*0x40*/ LocalizeString m_GuildName_Enemy;
    /*0x48*/ UnityEngine.GameObject m_goVSImage;
    /*0x50*/ UnityEngine.GameObject m_goAttackImage;
    /*0x58*/ UnityEngine.GameObject m_goDefenseImage;

    /*0xe2ff8c*/ BattleGuildWarTopUI();
    /*0xe2fe10*/ void InitGuildEmblem(int _nEmblemID, int _nFrameID, int _nLevel, string _sGuildName, bool _bAlly);
    /*0xe2feb8*/ void SetVSImage(BattleGuildWarTopUI.VSImageType _eImageType);

    enum VSImageType
    {
        VS = 0,
        ATTACK = 1,
        DEFENSE = 2,
    }
}

class BattleMainWindow : GuiBase
{
    /*0x40*/ bool <IsInitializeUIEnd>k__BackingField;
    /*0x48*/ LocalizeString m_LimitTime;
    /*0x50*/ LocalizeString m_CoinAmount;
    /*0x58*/ LocalizeString m_ChastAmount;
    /*0x60*/ AtlasImage m_Auto;
    /*0x68*/ AtlasImage m_Fast;
    /*0x70*/ AtlasImage m_Fastest;
    /*0x78*/ UnityEngine.GameObject m_goSkip;
    /*0x80*/ UnityEngine.GameObject m_goPause;
    /*0x88*/ UnityEngine.GameObject m_goAuto;
    /*0x90*/ UnityEngine.GameObject m_goAutoParticle;
    /*0x98*/ AtlasImage m_Fast_X2;
    /*0xa0*/ AtlasImage m_Fast_X3;
    /*0xa8*/ AtlasImage m_Fast_X4;
    /*0xb0*/ UnityEngine.GameObject m_goFast_X2;
    /*0xb8*/ UnityEngine.GameObject m_goFast_X3;
    /*0xc0*/ UnityEngine.GameObject m_goFast_X4;
    /*0xc8*/ UnityEngine.GameObject m_goFast_X2_Particle;
    /*0xd0*/ UnityEngine.GameObject m_goFast_X3_Particle;
    /*0xd8*/ UnityEngine.GameObject m_goFast_X4_Particle;
    /*0xe0*/ UnitBattleStatusSlot[] m_UnitStatusSlotList;
    /*0xe8*/ UnityEngine.RectTransform m_rectStatusSlotParent;
    /*0xf0*/ BuffIconSpread m_BuffSpreadAlly;
    /*0xf8*/ BuffIconSpread m_BuffSpreadEnemy;
    /*0x100*/ UnityEngine.GameObject m_bottomLeftUI;
    /*0x108*/ UnityEngine.GameObject m_bottomRightUI;
    /*0x110*/ TweenPosition m_unitBattleStatusTween;
    /*0x118*/ UnityEngine.GameObject m_ReplayText;
    /*0x120*/ UnityEngine.GameObject m_goBossUIs;
    /*0x128*/ UnityEngine.UI.Slider m_BossDamageSlider;
    /*0x130*/ AtlasImage m_BossTreasureImage;
    /*0x138*/ LocalizeString m_BossTreasureCountText;
    /*0x140*/ LocalizeString m_BossDamageText;
    /*0x148*/ UnityEngine.UI.Text m_BossBuffCountText;
    /*0x150*/ UnityEngine.GameObject m_goDPSTestParent;
    /*0x158*/ UnityEngine.UI.Text m_textDPSTestLeft;
    /*0x160*/ UnityEngine.UI.Text m_textDPSTestRight;
    /*0x168*/ bool m_hideUnitBattleStatusTween;
    /*0x16c*/ UnityEngine.Vector3 m_unitBattleStatusStartPosition;
    /*0x178*/ UnityEngine.Vector3 m_unitBattleStatusDestPosition;
    /*0x184*/ UnityEngine.Vector3 m_vecStatusSlotParentOriginPOS;
    /*0x190*/ double m_dCurrentBossDamageSliderMax;
    /*0x198*/ double m_dPrevBossDamageSliderMax;
    /*0x1a0*/ DG.Tweening.Sequence m_Seq;
    /*0x1a8*/ Battle.BattleSpeedType m_eCurrentSpeedType;
    /*0x1b0*/ System.Collections.Generic.List<CharacterBase> tmp_lisUnits;
    /*0x1b8*/ int tmp_nPositionNumber;

    static /*0xe34618*/ bool <SetAutoButton>g__IsActiveAutoButton|68_0();
    /*0xe36b20*/ BattleMainWindow();
    /*0xe32efc*/ bool get_IsInitializeUIEnd();
    /*0xe32f04*/ void set_IsInitializeUIEnd(bool value);
    /*0xe32f10*/ UnityEngine.Color get_AutoInterfaceColor();
    /*0xe32f7c*/ bool get_IsUnlockSpeed3X();
    /*0xe32fd0*/ bool get_IsUnlockSpeed4X();
    /*0xe33024*/ void OnCreate();
    /*0xe33028*/ void OnEnter();
    /*0xe336c4*/ void OnStart();
    /*0xe33834*/ void OnDelete();
    /*0xe33838*/ void OnFinish();
    /*0xe3383c*/ void OnLeave();
    /*0xe33ad8*/ void OnExit();
    /*0xe33bb4*/ void InitializeInGameUI();
    /*0xe336c8*/ void SkillSlotTweenInitalize();
    /*0xe3311c*/ void InitalizeAddEventForBattle();
    /*0xe33ea0*/ void SetActiveGameSpeedButton(Battle.BattleSpeedType _eSpeedType);
    /*0xe34038*/ void SetTime(int _second);
    /*0xe3451c*/ void SetTime(float _second);
    /*0xe340f4*/ void SetReplayText();
    /*0xe34184*/ void SetAutoButton();
    /*0xe346b4*/ void SetBuffIconUI();
    /*0xe34b94*/ void SetActiveBuffIcons(bool _bActive);
    /*0xe330cc*/ void SetActiveBottomUIs(bool _bActiveLeft, bool _bActiveRight);
    /*0xe34bf4*/ void SetCoinAmount(long _amount);
    /*0xe34c38*/ void SetChastAmount(long _amount);
    /*0xe34c7c*/ void SetActiveBossUIs(bool _bActive);
    /*0xe342d0*/ void SetTextBossDamage(double _dCurrentDamage, double _dTargetDamage);
    /*0xe341c8*/ void SetTextBossBuffCount(int _nCount);
    /*0xe343f0*/ void SetBossTreasureIcon(int _step);
    /*0xe33adc*/ void OpenPause();
    /*0xe34c94*/ void SkipGame();
    /*0xe34ce8*/ void SetGameSpeedButton();
    /*0xe34e58*/ void SetToggleAuto();
    /*0xe33408*/ void StartBattle();
    /*0xe35b00*/ UnitBattleStatusSlot GetUnitStatusSlot(int _index);
    /*0xe35b3c*/ void HandleInitInGameUI();
    /*0xe35b48*/ void HandleChangeTime(float _curTime);
    /*0xe35b4c*/ void HandleInitStatusSlot();
    /*0xe35f3c*/ void StatusSlotTweenAnimation();
    /*0xe36100*/ void HandleTouchSkillOn(bool _isOn, int _index);
    /*0xe36154*/ void ShowUnitBattleStatusSlot(bool isDelay);
    /*0xe3626c*/ void HideUnitBattleStatusSlot();
    /*0xe36344*/ void HideTutorialUI(bool hideLeft, bool hideRight);
    /*0xe3639c*/ void RefreshUI_DPS();
    /*0xe36b3c*/ void <StatusSlotTweenAnimation>b__89_0();
}

class BattleMainWindow_GuildWar : GuiBase
{
    /*0x40*/ bool <IsInitializeUIEnd>k__BackingField;
    /*0x48*/ LocalizeString m_LimitTime;
    /*0x50*/ BattleGuildWarTopUI m_BattleTopUI;
    /*0x58*/ HeroSlotSpread m_HeroSlotSpread_Ally;
    /*0x60*/ HeroSlotSpread m_HeroSlotSpread_Enemy;
    /*0x68*/ GuildWarStartAnimation m_StartAnimation;
    /*0x70*/ UnityEngine.UI.Text m_CPTextAlly;
    /*0x78*/ UnityEngine.UI.Text m_CPTextEnemy;
    /*0x80*/ UnityEngine.UI.Text m_UnitCountTextAlly;
    /*0x88*/ UnityEngine.UI.Text m_UnitCountTextEnemy;
    /*0x90*/ UnityEngine.UI.Slider m_HPBarAlly;
    /*0x98*/ UnityEngine.UI.Slider m_HPBarEnemy;
    /*0xa0*/ AtlasImage m_Fast_X2;
    /*0xa8*/ AtlasImage m_Fast_X3;
    /*0xb0*/ AtlasImage m_Fast_X4;
    /*0xb8*/ UnityEngine.GameObject m_goFast_X2;
    /*0xc0*/ UnityEngine.GameObject m_goFast_X3;
    /*0xc8*/ UnityEngine.GameObject m_goFast_X4;
    /*0xd0*/ UnityEngine.GameObject m_goFast_X2_Particle;
    /*0xd8*/ UnityEngine.GameObject m_goFast_X3_Particle;
    /*0xe0*/ UnityEngine.GameObject m_goFast_X4_Particle;
    /*0xe8*/ UnityEngine.GameObject m_goBottomLeftUI;
    /*0xf0*/ UnityEngine.GameObject m_goBottomRightUI;
    /*0xf8*/ UnityEngine.GameObject m_goBottomUI;
    /*0x100*/ UnityEngine.GameObject m_goTopUI;
    /*0x108*/ TweenPosition m_unitBattleStatusTween;
    /*0x110*/ UnityEngine.GameObject m_ReplayText;
    /*0x118*/ UnityEngine.Vector3 m_unitBattleStatusStartPosition;
    /*0x124*/ UnityEngine.Vector3 m_unitBattleStatusDestPosition;
    /*0x130*/ UnityEngine.Vector3 m_vecStatusSlotParentOriginPOS;
    /*0x13c*/ Battle.BattleSpeedType m_eCurrentSpeedType;
    /*0x140*/ float m_fCurDelayUpdateHP;
    /*0x144*/ int tmp_nPositionNumber;

    /*0xe386c0*/ BattleMainWindow_GuildWar();
    /*0xe36c98*/ bool get_IsInitializeUIEnd();
    /*0xe36ca0*/ void set_IsInitializeUIEnd(bool value);
    /*0xe36cac*/ bool get_IsUnlockSpeed3X();
    /*0xe36d00*/ bool get_IsUnlockSpeed4X();
    /*0xe36d54*/ void OnCreate();
    /*0xe36d58*/ void OnEnter();
    /*0xe3704c*/ void OnStart();
    /*0xe370a0*/ void OnDelete();
    /*0xe370a4*/ void OnFinish();
    /*0xe370a8*/ void OnLeave();
    /*0xe37290*/ void OnExit();
    /*0xe3736c*/ void InitializeForSimulation();
    /*0xe37824*/ void InitializeForVerify();
    /*0xe37910*/ void InitializeInGameUI();
    /*0xe37de8*/ void StartInitHeroSlotSpread();
    /*0xe38180*/ void InitHeroSlotSpread(bool _bAlly);
    /*0xe381ac*/ void SkillSlotTweenInitalize();
    /*0xe374b8*/ void InitalizeAddEventForBattle();
    /*0xe38318*/ void Update();
    /*0xe37a50*/ void SetActiveGameSpeedButton(Battle.BattleSpeedType _eSpeedType);
    /*0xe37be8*/ void SetTime(int _second);
    /*0xe38420*/ void SetTime(float _second);
    /*0xe37ca4*/ void SetReplayText();
    /*0xe37d34*/ void SetCPText();
    /*0xe380ac*/ void SetUnitCountText(bool _bAlly, int _nCount);
    /*0xe36f90*/ void SetActiveBottomUIs(bool _bActiveLeft, bool _bActiveRight);
    /*0xe37294*/ void OpenPause();
    /*0xe384f0*/ void SkipGame();
    /*0xe38544*/ void SetGameSpeedButton();
    /*0xe377a4*/ void StartBattle();
    /*0xe386b4*/ void HandleInitInGameUI();
    /*0xe386b8*/ void HandleChangeTime(float _curTime);
    /*0xe386bc*/ void HandleInitStatusSlot();
    /*0xe36fe0*/ System.Collections.IEnumerator <OnEnter>g__CoDelayedOnEnter|39_0();
    /*0xe386c8*/ void <OnEnter>b__39_1();

    class <<OnEnter>g__CoDelayedOnEnter|39_0>d : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BattleMainWindow_GuildWar <>4__this;

        /*0xda0f34*/ <<OnEnter>g__CoDelayedOnEnter|39_0>d(int <>1__state);
        /*0xda0f60*/ void System.IDisposable.Dispose();
        /*0xda0f64*/ bool MoveNext();
        /*0xda11fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda1204*/ void System.Collections.IEnumerator.Reset();
        /*0xda1244*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BattleMainWindow_WorldBoss : BattleMainWindow
{
    /*0x1c0*/ BuffIconSpread m_BuffSpreadAlly2;
    /*0x1c8*/ UnityEngine.Transform m_BuffIconTrans;
    /*0x1d0*/ LocalizeString m_BossNameString;
    /*0x1d8*/ UnityEngine.UI.Text m_BossLevelText;
    /*0x1e0*/ UnityEngine.GameObject m_goLoadingBlackMask;

    /*0xe38ed0*/ BattleMainWindow_WorldBoss();
    /*0xe3874c*/ UnityEngine.Transform get_BuffIconTrans();
    /*0xe38754*/ void SetBuffIconUI();
    /*0xe387f0*/ void SetActiveBuffIcons(bool _bActive);
    /*0xe38838*/ void StatusSlotTweenAnimation();
    /*0xe38844*/ void SetActiveBossUIs(bool _bActive);
    /*0xe38848*/ void OnEnter();
    /*0xe388e8*/ void InitializeInGameUI();
    /*0xe38928*/ void OnButtonSkipBossStartAnimation();
    /*0xe38ab0*/ void SetActiveSkipButton(bool _bActive);
    /*0xe38988*/ void StartWorldBossUI();
    /*0xe38ad0*/ void SetBossNameLocalize();
    /*0xe38cec*/ void SetBossLevel(int _nLevel);
    /*0xe38d80*/ void SetWorldBossHPSlider(float _fCurrentHP, float _fMaxHP, float _fRatioHP);
}

class BattleGraphEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_DamageSlider;
    /*0x20*/ UnityEngine.UI.Slider m_HitSlider;
    /*0x28*/ UnityEngine.UI.Slider m_HealSlider;
    /*0x30*/ LocalizeString m_DamageText;
    /*0x38*/ LocalizeString m_HitText;
    /*0x40*/ LocalizeString m_HealText;
    /*0x48*/ HeroSlotCache m_HeroSlot;

    /*0xf8b72c*/ BattleGraphEntity();
    /*0xf8b4f4*/ void Init(Battle.BattleGraphValue _totalGraphValue, Battle.BattleGraphValue _battleGraphValue);
}

class BattleGraphEntity_GuildWar : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlotCache m_HeroSlot;
    /*0x20*/ UnityEngine.GameObject m_goArrow;
    /*0x28*/ UnityEngine.GameObject m_goMVP;
    /*0x30*/ UnityEngine.UI.Image m_BarDamage;
    /*0x38*/ UnityEngine.UI.Image m_BarHit;
    /*0x40*/ UnityEngine.UI.Image m_BarHeal;
    /*0x48*/ UnityEngine.UI.Text m_TextKills;
    /*0x50*/ Battle.BattleGraphValue m_GraphValue;
    /*0x58*/ float m_fOriginWidth;
    /*0x5c*/ bool m_bAlly;

    /*0xf8bf88*/ BattleGraphEntity_GuildWar();
    /*0xf8b734*/ void Init(bool _bMVP, bool _bAlly, double _dMaxDamage, double _dMaxHit, double _dMaxHeal, Battle.BattleGraphValue _currentValue);
    /*0xf8bb50*/ void OnClickScore();
    /*0xf8be84*/ void OnClickHeroSlot();
}

class BattleGraphWindow : UnityEngine.MonoBehaviour
{
    static string WIN_TEXT = "WIN!";
    static string LOSE_TEXT = "LOSE";
    /*0x18*/ System.Collections.Generic.List<BattleGraphEntity> m_lisGraphEntity;
    /*0x20*/ LocalizeString m_WinText;
    /*0x28*/ AtlasImage m_WinImage;
    /*0x30*/ LocalizeString m_TotalCPText;
    /*0x38*/ LocalizeString m_UserNameText;
    /*0x40*/ PlayerProfileSlot m_ProfileSlot;
    /*0x48*/ Battle.BattleGraphValue m_TotalValue;
    /*0x50*/ UnityEngine.Color WIN_COLOR;
    /*0x60*/ UnityEngine.Color LOSE_COLOR;

    /*0xe2fb8c*/ BattleGraphWindow();
    /*0xe2f6dc*/ void Init(bool _bWin, PlayerProfileInfo _playerProfileInfo, string _sTotalPower, string _sUserName, System.Collections.Generic.List<Battle.BattleGraphValue> _lisBattleGraphValue);
    /*0xe2fb34*/ void UpdateProfileSlot(PlayerProfileInfo _playerProfileInfo);
}

class BattleGraphWindow_GuildWar : UnityEngine.MonoBehaviour
{
    static string WIN_TEXT = "WIN!";
    static string LOSE_TEXT = "LOSE";
    /*0x18*/ bool m_IsAlly;
    /*0x20*/ ScrollContent_BattleGraphEntity m_Scrollcontent;
    /*0x28*/ System.Collections.Generic.List<Battle.BattleGraphValue> m_lisBattleGraphValue;
    /*0x30*/ LocalizeString m_WinText;
    /*0x38*/ AtlasImage m_WinImage;
    /*0x40*/ LocalizeString m_TotalCPText;
    /*0x48*/ LocalizeString m_UserNameText;
    /*0x50*/ GuildEmblemSlot m_GuildEmblemSlot;
    /*0x58*/ GuildLevelSlot m_GuildLevelSlot;
    /*0x60*/ UnityEngine.Color WIN_COLOR;
    /*0x70*/ UnityEngine.Color LOSE_COLOR;
    /*0x80*/ double m_dMaxValueDamage;
    /*0x88*/ double m_dMaxValueHit;
    /*0x90*/ double m_dMaxValueHeal;
    /*0x98*/ int m_nScrollContentUpdateCount;
    /*0x9c*/ bool m_bWin;

    /*0xe2fdcc*/ BattleGraphWindow_GuildWar();
    /*0xe2efd4*/ void Init(bool _bWin, string _sTotalPower, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValue);
    /*0xe2ec74*/ void InitGuildEmblem(int _nEmblemID, int _nGuildLevel, string _sGuildName);
    /*0xe2fc4c*/ void HandleBattleGraphEntityUpdate(int _nIndex, BattleGraphEntity_GuildWar _entity);

    class <>c
    {
        static /*0x0*/ BattleGraphWindow_GuildWar.<> <>9;
        static /*0x8*/ System.Predicate<Battle.BattleGraphValue> <>9__18_0;

        static /*0xda0eac*/ <>c();
        /*0xda0f0c*/ <>c();
        /*0xda0f14*/ bool <Init>b__18_0(Battle.BattleGraphValue x);
    }
}

class ScrollContent_BattleGraphEntity : ScrollContent<BattleGraphEntity_GuildWar>
{
    /*0xe18a94*/ ScrollContent_BattleGraphEntity();
}

struct GuildWarAnimInfo
{
    /*0x10*/ int unitID;
    /*0x18*/ string guildName;
    /*0x20*/ int emblemID;

    /*0xa8a86c*/ GuildWarAnimInfo(int unitID, string guildName, int emblemID);
    /*0xa8a87c*/ GuildWarAnimInfo(int unitID, PTShare.Define.SGuild guild);
}

class GuildWarStartAnimation : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_AllyUnitGraphic;
    /*0x20*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_EnemyUnitGraphic;
    /*0x28*/ Spine.Unity.SkeletonGraphic m_VSGraphic;
    /*0x30*/ UnityEngine.CanvasGroup m_AllyEmblemCanvas;
    /*0x38*/ UnityEngine.CanvasGroup m_EnemyEmblemCanvas;
    /*0x40*/ GuildEmblemSlot m_AllyEmblem;
    /*0x48*/ GuildEmblemSlot m_EnemyEmblem;
    /*0x50*/ GuildLevelSlot m_AllyGuildLevel;
    /*0x58*/ GuildLevelSlot m_EnemyGuildLevel;
    /*0x60*/ LocalizeString m_AllyGuildName;
    /*0x68*/ LocalizeString m_EnemyGuildName;
    /*0x70*/ float m_fWaitTime;
    /*0x78*/ GuildWarAnimInfo allyInfo;
    /*0x90*/ GuildWarAnimInfo enemyInfo;
    /*0xa8*/ UnityEngine.Vector2 allyEmblemOriginPosition;
    /*0xb0*/ UnityEngine.Vector2 enemyEmblemOriginPosition;
    /*0xb8*/ System.Action onFinishCallback;

    /*0x10f4cd8*/ GuildWarStartAnimation();
    /*0x10f464c*/ void Awake();
    /*0x10f46ac*/ void InitAnimation(GuildWarAnimInfo ally, GuildWarAnimInfo enemy, System.Action finishCallback);
    /*0x10f4820*/ void InitializeGuildEmblem(int emblemIndex, int level, bool isAlly);
    /*0x10f489c*/ void Release();
    /*0x10f471c*/ void StartAnimation();
    /*0x10f4a20*/ void AnimationState_Start(Spine.TrackEntry trackEntry);
    /*0x10f4b2c*/ void EndAnimation();
    /*0x10f4c8c*/ void AnimationState_End(Spine.TrackEntry trackEntry);
    /*0x10f494c*/ void InitAnim(Spine.Unity.Modules.SkeletonGraphicMultiObject skel, int unitID, string anim);
    /*0x10f49a0*/ System.Collections.IEnumerator CoCanvasAnim(bool isReverse);
    /*0x10f4ac0*/ System.Collections.IEnumerator CoUpdate();

    class <CoCanvasAnim>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool isReverse;
        /*0x28*/ GuildWarStartAnimation <>4__this;
        /*0x30*/ float <fTime>5__2;

        /*0xf74374*/ <CoCanvasAnim>d__26(int <>1__state);
        /*0xf743a0*/ void System.IDisposable.Dispose();
        /*0xf743a4*/ bool MoveNext();
        /*0xf744a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf744ac*/ void System.Collections.IEnumerator.Reset();
        /*0xf744ec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoUpdate>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarStartAnimation <>4__this;
        /*0x28*/ float <fTime>5__2;

        /*0xf744f4*/ <CoUpdate>d__27(int <>1__state);
        /*0xf74520*/ void System.IDisposable.Dispose();
        /*0xf74524*/ bool MoveNext();
        /*0xf745f0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf745f8*/ void System.Collections.IEnumerator.Reset();
        /*0xf74638*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroBattleSlot : UnityEngine.MonoBehaviour
{
    /*0xf2c32c*/ HeroBattleSlot();
    /*0xf2c324*/ void Start();
    /*0xf2c328*/ void Update();
}

class HeroStageInfoSlotBase : HeroSlot
{
    static /*0x0*/ System.Action<UnitSpawnInfo> OnClickUnitStage;
    /*0x48*/ UnityEngine.GameObject bossmark;
    /*0x50*/ TooltipData_Unit tooltipunit;

    static /*0x126eec4*/ HeroStageInfoSlotBase();
    /*0x126ee64*/ HeroStageInfoSlotBase();
    /*0x126ec18*/ void Init(UnitSpawnInfo _unitStage, System.Action<UnitSpawnInfo> _callBack);
    /*0x126edc0*/ void SetBoss(bool _isBoss);
}

class ScrollContent_StageReward : ScrollContent<ItemTableRewardSlot>
{
    /*0xe1b6a4*/ ScrollContent_StageReward();
}

class StageInformationPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleStage;
    /*0x48*/ LocalizeString m_descStage;
    /*0x50*/ UnityEngine.GameObject m_btnStart;
    /*0x58*/ UnityEngine.GameObject m_btnHardStart;
    /*0x60*/ HeroStageInfoSlotBase[] m_cHeroStageInfoSlots;
    /*0x68*/ ScrollContent_StageReward _mScrollContentStageReward;
    /*0x70*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x78*/ UnityEngine.GameObject m_EmptyDescription;
    /*0x80*/ CustomButton m_InfoBtn;
    /*0x88*/ TableData.TableData_Stage m_tStage;
    /*0x90*/ TableData.TableData_Hardstage m_tHardstage;
    /*0x98*/ System.Collections.Generic.List<Rewards> m_tRewards;
    /*0xa0*/ CompareStageUnit compareSortStageUnit;

    /*0xc91424*/ StageInformationPopup();
    /*0xc8fc8c*/ void OnCreate();
    /*0xc8fc90*/ void OnEnter();
    /*0xc8fd30*/ void OnStart();
    /*0xc8fd34*/ void OnFinish();
    /*0xc8fd38*/ void OnLeave();
    /*0xc8fd3c*/ void OnDelete();
    /*0xc8fd40*/ bool get_IsHard();
    /*0xc8fdd8*/ string get_stageDesc();
    /*0xc8fe18*/ string get_stageReward();
    /*0xc8fe58*/ int get_stageUserExp();
    /*0xc8fe98*/ string get_stageType();
    /*0xc8fed8*/ string get_stageMapPoint();
    /*0xc8ff18*/ int get_stageIndex();
    /*0xc8ff58*/ int get_stageID();
    /*0xc8ff98*/ void InitView(int _chapterid, int _stageid);
    /*0xc90b1c*/ System.Collections.IEnumerator CoScrollRefresh();
    /*0xc90690*/ void InitStageInfoLocal(string _mapPointName, string _localizeKey);
    /*0xc90558*/ void InValidStageStartButton();
    /*0xc908dc*/ void InitOtherTeams(System.Collections.Generic.List<UnitSpawnInfo> _unitStages);
    /*0xc90ccc*/ void OnClick_BattleStart();
    /*0xc90874*/ void InitRewardSetting(System.Collections.Generic.List<Rewards> _rewards);
    /*0xc90e70*/ void HandlerTableStageReward(int _index, ItemTableRewardSlot _instance);
    /*0xc90f2c*/ void OnClick_ChapterInfo();
    /*0xc913a4*/ void OnClickExit();
    /*0xc914c8*/ void <OnClick_ChapterInfo>b__43_0(ServerProtocol.ResCampaignInfo _instance);
    /*0xc91620*/ void <OnClick_ChapterInfo>b__43_1(ServerProtocol.ResHardCampaignInfo _instance);

    class <CoScrollRefresh>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StageInformationPopup <>4__this;

        /*0xcc0f38*/ <CoScrollRefresh>d__36(int <>1__state);
        /*0xcc0f64*/ void System.IDisposable.Dispose();
        /*0xcc0f68*/ bool MoveNext();
        /*0xcc1014*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc101c*/ void System.Collections.IEnumerator.Reset();
        /*0xcc105c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CompareStageUnit : System.Collections.Generic.IComparer<UnitSpawnInfo>
{
    /*0x10e5c60*/ CompareStageUnit();
    /*0x10e5c18*/ int Compare(UnitSpawnInfo x, UnitSpawnInfo y);
}

class ScrollContent_HeroBattleSlot : ScrollContent<HeroBattleSlot>
{
    /*0xe1a024*/ ScrollContent_HeroBattleSlot();
}

class ButtonLongPress : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IPointerExitHandler
{
    /*0x18*/ float holdTime;
    /*0x20*/ UnityEngine.Events.UnityEvent onLongPress;

    /*0x1336580*/ ButtonLongPress();
    /*0x1336468*/ void SetPressTime(float _fHoldTime);
    /*0x1336470*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x13364c4*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336514*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336564*/ void OnLongPress();
}

class ButtonPress : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IPointerExitHandler
{
    /*0x18*/ float longPressTime;
    /*0x20*/ UnityEngine.Events.UnityEvent onPress;
    /*0x28*/ UnityEngine.Events.UnityEvent onLongPress;
    /*0x30*/ float m_downTime;
    /*0x38*/ UnityEngine.Coroutine m_coroutine;

    /*0x1336774*/ ButtonPress();
    /*0x13365ec*/ void OnDisable();
    /*0x133664c*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336714*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x1336744*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x133661c*/ void StopCoroutine();
    /*0x13366a8*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ButtonPress <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xda5348*/ <CoUpdate>d__10(int <>1__state);
        /*0xda5374*/ void System.IDisposable.Dispose();
        /*0xda5378*/ bool MoveNext();
        /*0xda5464*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda546c*/ void System.Collections.IEnumerator.Reset();
        /*0xda54ac*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ButtonTapBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_RectButton;
    /*0x20*/ AtlasImage m_ImageButton;
    /*0x28*/ LocalizeString m_Text;
    /*0x30*/ UnityEngine.UI.Outline m_TextOutline;
    /*0x38*/ UnityEngine.UI.Shadow m_TextShadow;
    /*0x40*/ AtlasImage m_RedDot;
    /*0x48*/ UnityEngine.Color[] m_ColorText;
    /*0x50*/ UnityEngine.Color[] m_ColorOutline;
    /*0x58*/ UnityEngine.Color[] m_ColorShadow;
    /*0x60*/ UnityEngine.Vector2[] m_ButtonSize;
    /*0x68*/ System.Action OnPressAction;

    /*0x1336d2c*/ ButtonTapBase();
    /*0x1336800*/ void SetButton(string _name, System.Action _pressEvent, bool _active, string redDotKey);
    /*0x1336920*/ void ActionButton(bool _active);
    /*0x1336c70*/ UnityEngine.RectTransform GetRectTransform();
    /*0x1336c78*/ UnityEngine.GameObject GetReddot();
    /*0x1336c94*/ void SelectButton();
    /*0x1336d14*/ void SetRedDot(bool _enable);
    /*0x1336ac4*/ void AddReddot(string redDotKey);
}

class CampMainWindow : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ UnityEngine.UI.ScrollRect m_ScrollRect;
    /*0x48*/ float m_fResetScrollPosition;

    static /*0x1346864*/ CampMainWindow();
    static /*0x134593c*/ void add_OnExitEvent(System.Action value);
    static /*0x1345a30*/ void remove_OnExitEvent(System.Action value);
    /*0x1346850*/ CampMainWindow();
    /*0x1345b24*/ void OnCreate();
    /*0x1345b28*/ void OnEnter();
    /*0x1345b68*/ void OnStart();
    /*0x1345b6c*/ void OnFinish();
    /*0x1345b70*/ void OnLeave();
    /*0x1345b74*/ void OnDelete();
    /*0x1345bd8*/ void OnExit();
    /*0x1345c60*/ void OnClickCart();
    /*0x1345da8*/ void OnClickRankingBoard();
    /*0x1345ef0*/ void OnClickStore();
    /*0x134600c*/ void OnClickNobletavern();
    /*0x1346064*/ void OnClickResonating();
    /*0x13461ac*/ void OnClickAscension();
    /*0x13462f4*/ void OnClickLibrary();
    /*0x134643c*/ void OnClickGuild();
    /*0x134669c*/ void OnClick_House();
    /*0x1345b4c*/ void ChangeScrollVerticalPosition(float _value);

    class <>c
    {
        static /*0x0*/ CampMainWindow.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;
        static /*0x10*/ System.Action <>9__13_1;
        static /*0x18*/ System.Action <>9__13_0;
        static /*0x20*/ System.Action <>9__14_1;
        static /*0x28*/ System.Action <>9__14_0;
        static /*0x30*/ System.Action <>9__16_1;
        static /*0x38*/ System.Action <>9__16_0;
        static /*0x40*/ System.Action <>9__17_0;
        static /*0x48*/ System.Action <>9__18_0;
        static /*0x50*/ System.Action <>9__19_2;
        static /*0x58*/ System.Action <>9__19_0;
        static /*0x60*/ System.Action <>9__19_5;
        static /*0x68*/ System.Action <>9__19_3;
        static /*0x70*/ System.Action <>9__19_4;
        static /*0x78*/ System.Action<bool> <>9__19_1;
        static /*0x80*/ System.Action <>9__20_1;
        static /*0x88*/ System.Action <>9__20_0;

        static /*0xda74ec*/ <>c();
        /*0xda754c*/ <>c();
        /*0xda7554*/ void <OnClickCart>b__12_0();
        /*0xda75d8*/ void <OnClickRankingBoard>b__13_0();
        /*0xda7720*/ void <OnClickRankingBoard>b__13_1();
        /*0xda77a0*/ void <OnClickStore>b__14_0();
        /*0xda78e8*/ void <OnClickStore>b__14_1();
        /*0xda796c*/ void <OnClickResonating>b__16_0();
        /*0xda7ab4*/ void <OnClickResonating>b__16_1();
        /*0xda7b34*/ void <OnClickAscension>b__17_0();
        /*0xda7bd4*/ void <OnClickLibrary>b__18_0();
        /*0xda7c54*/ void <OnClickGuild>b__19_0();
        /*0xda7d70*/ void <OnClickGuild>b__19_2();
        /*0xda7e1c*/ void <OnClickGuild>b__19_1(bool instance);
        /*0xda806c*/ void <OnClickGuild>b__19_3();
        /*0xda81b4*/ void <OnClickGuild>b__19_5();
        /*0xda8260*/ void <OnClickGuild>b__19_4();
        /*0xda834c*/ void <OnClick_House>b__20_0();
        /*0xda8494*/ void <OnClick_House>b__20_1();
    }
}

class ChapterPoint : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_FlagSkeleton;
    /*0x20*/ LocalizeString m_ChapterName;
    /*0x28*/ UnityEngine.GameObject m_FriendParent;
    /*0x30*/ UnityEngine.GameObject m_MyPosition;
    /*0x38*/ UnityEngine.RectTransform m_NameParent;
    /*0x40*/ System.Collections.Generic.List<PlayerMapPosition> m_FriendPosition;
    /*0x48*/ int m_nChapterID;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_liPlayerInfo;
    /*0x58*/ UnityEngine.RectTransform m_rectTransform;
    /*0x60*/ UnityEngine.RectTransform m_PointRect;
    /*0x68*/ System.Collections.IEnumerator m_coroutine;
    /*0x70*/ bool <IsAnimation>k__BackingField;

    /*0xd703b4*/ ChapterPoint();
    /*0xd6f360*/ UnityEngine.RectTransform get_recttransform();
    /*0xd6f3bc*/ bool get_IsAnimation();
    /*0xd6f3c4*/ void set_IsAnimation(bool value);
    /*0xd6f3d0*/ StageDifficult get_StageDiff();
    /*0xd6f450*/ void InitalizePoint(int _chapterIndex, int _currentChapter);
    /*0xd6fba8*/ void OnClick();
    /*0xd6fe74*/ int GetChapterID();
    /*0xd6f834*/ void SetViewPosition();
    /*0xd6fe7c*/ void SetActiveMyPosition(bool _enable);
    /*0xd700fc*/ void SetActiveFriendPosition(bool _enable);
    /*0xd6f7e0*/ void SetImageScale(UnityEngine.Vector3 _scale);
    /*0xd7011c*/ void SetActiveChapterPoint(bool _enable);
    /*0xd70120*/ void SetLocalPosition(UnityEngine.Vector3 _vec);
    /*0xd7016c*/ void SetChapterID(int _id);
    /*0xd6fe9c*/ void SetPlayerPosition();
    /*0xd6f508*/ void SetSekelton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xd70174*/ System.Collections.IEnumerator CoFirstInitializeSkeleton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xd70204*/ void StartClearEvent();
    /*0xd70314*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);

    class <CoFirstInitializeSkeleton>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ Spine.Unity.SkeletonGraphic _grap;
        /*0x28*/ string _anim;
        /*0x30*/ float _timescale;
        /*0x38*/ ChapterPoint <>4__this;

        /*0xdad1d8*/ <CoFirstInitializeSkeleton>d__31(int <>1__state);
        /*0xdad204*/ void System.IDisposable.Dispose();
        /*0xdad208*/ bool MoveNext();
        /*0xdad324*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdad32c*/ void System.Collections.IEnumerator.Reset();
        /*0xdad36c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ChapterUserEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_FriendIcon;
    /*0x20*/ AtlasImage m_GuildIcon;
    /*0x28*/ AtlasImage m_SexIcon;
    /*0x30*/ LocalizeString m_Nickname;
    /*0x38*/ PlayerProfileSlot m_PlayerSlot;
    /*0x40*/ PTShare.Define.SPlayer m_PlayerInfo;
    /*0x48*/ PTShare.Define.STowerUser m_TowerUserInfo;
    /*0x50*/ PTShare.Define.SCampaignRecord m_tCampaignRecord;

    /*0xd71e08*/ ChapterUserEntity();
    /*0xd71a24*/ void InitializeUser(PTShare.Define.SPlayer _player);
    /*0xd71c04*/ void InitializeUser(PTShare.Define.STowerUser _tTowerUser);
    /*0xd71d04*/ void InitializeUser(PTShare.Define.SCampaignRecord _tCampaignRecord);
    /*0xd71b20*/ void SetViewStatus(int _gender, string _nickName, int _level, PTShare.Define.Relation _relation);
    /*0xd71e04*/ void OnClick();
    /*0xd71e10*/ void <InitializeUser>b__8_0();
    /*0xd71e30*/ void <InitializeUser>b__9_0();
    /*0xd71e50*/ void <InitializeUser>b__10_0();
}

class PlayerMapPosition : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Arrow;
    /*0x20*/ UnityEngine.GameObject m_Effect;
    /*0x28*/ UnityEngine.GameObject m_Sword;
    /*0x30*/ PlayerProfileSlot m_ProfileSlot;
    /*0x38*/ PlayerMapPosition.PlayerMapType m_eMapType;
    /*0x3c*/ PlayerType m_ePlayerType;
    /*0x40*/ int m_nChapterID;
    /*0x48*/ TableData.TableData_Stage m_StageInfo;
    /*0x50*/ PTShare.Define.SPlayer m_PlayerInfo;

    /*0x1148dcc*/ PlayerMapPosition();
    /*0x114822c*/ UserData get_curPlayerData();
    /*0x11482bc*/ StageDifficult get_StageDiff();
    /*0x114833c*/ void Init(TableData.TableData_Stage _stage);
    /*0x1148580*/ void Init(TableData.TableData_Stage _stage, PTShare.Define.SPlayer _player);
    /*0x1148678*/ void Init(int _chapterid, PTShare.Define.SPlayer _player);
    /*0x1148428*/ void InitializePosition(PlayerType _type, TableData.TableData_Stage _stage);
    /*0x114876c*/ void InitializePosition(int _chapterid);
    /*0x1148894*/ void SetActive(bool _enable);
    /*0x11488c8*/ void SetLocalScale(UnityEngine.Vector3 _scale);
    /*0x1148914*/ void SetLocalPosition(UnityEngine.Vector3 _vec);
    /*0x1148960*/ bool IsCurrentStage();
    /*0x1148a40*/ void CallbackOnClickProfile();

    enum PlayerMapType
    {
        NONE = 0,
        STAGE = 1,
        CHAPTER = 2,
        End = 3,
    }
}

class StagePoint : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_StageSkeleton;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_FlagSkeleton;
    /*0x28*/ UnityEngine.GameObject m_StageNameParent;
    /*0x30*/ UnityEngine.UI.Text m_StageName;
    /*0x38*/ PlayerMapPosition m_MyPosition;
    /*0x40*/ UnityEngine.GameObject m_FriendParent;
    /*0x48*/ System.Collections.Generic.List<PlayerMapPosition> m_FriendPosition;
    /*0x50*/ Battle.StageBattleType m_eStageType;
    /*0x58*/ TableData.TableData_Stage m_StageInfo;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_liPlayerInfo;
    /*0x68*/ bool m_bIsClear;
    /*0x69*/ bool m_bIsBoss;
    /*0x6a*/ bool m_bIsStory;
    /*0x6c*/ int m_nCurrentStage;
    /*0x70*/ UnityEngine.RectTransform m_PointRect;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_ParentSkeleton;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;
    /*0x88*/ bool <IsAnimation>k__BackingField;

    /*0xc947e4*/ StagePoint();
    /*0xc9381c*/ bool get_IsAnimation();
    /*0xc93824*/ void set_IsAnimation(bool value);
    /*0xc93830*/ StageDifficult get_StageDiff();
    /*0xc938b0*/ void InitalizePoint(int _chapterIndex, int _stageIndex, int _maxStage, int _currentStage);
    /*0xc9416c*/ void OnClick();
    /*0xc93f7c*/ void SetViewPosition();
    /*0xc942d0*/ void SetActiveMyPosition(bool _enable);
    /*0xc93f60*/ void SetImageScale(UnityEngine.Vector3 _scale);
    /*0xc944c4*/ void SetActiveStagePoint(bool _enable);
    /*0xc94504*/ void StartClearEvent();
    /*0xc94614*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xc946b4*/ void SetLocalPosition(UnityEngine.Vector3 _vec);
    /*0xc94700*/ void SetLocalScale(float _offset);
    /*0xc942f0*/ void SetPlayerPosition();
    /*0xc93bf8*/ void SetSekelton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xc94754*/ System.Collections.IEnumerator CoFirstInitializeSkeleton(Spine.Unity.SkeletonGraphic _grap, string _anim, float _timescale);
    /*0xc94214*/ bool IsCurrentStage();

    class <CoFirstInitializeSkeleton>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ Spine.Unity.SkeletonGraphic _grap;
        /*0x28*/ string _anim;
        /*0x30*/ float _timescale;
        /*0x38*/ StagePoint <>4__this;

        /*0xcc1f28*/ <CoFirstInitializeSkeleton>d__35(int <>1__state);
        /*0xcc1f54*/ void System.IDisposable.Dispose();
        /*0xcc1f58*/ bool MoveNext();
        /*0xcc2074*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc207c*/ void System.Collections.IEnumerator.Reset();
        /*0xcc20bc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CampainMainWindow : GuiBase
{
    static /*0x0*/ System.Action OnAnimationEndEvent;
    /*0x40*/ UnityEngine.UI.Image m_ImageBackground;
    /*0x48*/ UnityEngine.UI.Image m_ImageBottomground;
    /*0x50*/ PathMaker m_cPathBackground;
    /*0x58*/ UnityEngine.RectTransform IdleSpawnTrans;
    /*0x60*/ System.Collections.Generic.List<PathData> m_liPathData;
    /*0x68*/ System.Collections.Generic.List<TableData.TableData_Stage> m_liStageData;
    /*0x70*/ System.Collections.Generic.List<StagePoint> m_liStagePointList;
    /*0x78*/ int m_nCurrentMapIndex;
    /*0x7c*/ int m_nCurrentStage;
    /*0x80*/ bool m_bIsPlayingAnimation;
    /*0x84*/ int _nStartCount;
    /*0x88*/ int _nEndCount;

    static /*0x153d894*/ CampainMainWindow();
    static /*0x153c214*/ void add_OnAnimationEndEvent(System.Action value);
    static /*0x153c308*/ void remove_OnAnimationEndEvent(System.Action value);
    /*0x153d81c*/ CampainMainWindow();
    /*0x153c3fc*/ void OnCreate();
    /*0x153c730*/ void OnEnter();
    /*0x153cabc*/ void OnStart();
    /*0x153cac0*/ void OnFinish();
    /*0x153cac4*/ void OnLeave();
    /*0x153d110*/ void OnDelete();
    /*0x153d174*/ void OnExit();
    /*0x153d1c8*/ void InitalizeCampain();
    /*0x153d2e8*/ void SetCurrentMap(int _mapIndex);
    /*0x153ccb0*/ void SetStagePoint();
    /*0x153d2f0*/ void ChangeCurrentMap(int _mapIndex);
    /*0x153c4a4*/ void SetMapSprite(int _mapIndex);
    /*0x153d3c4*/ void SetCurrentStage(int _stage);
    /*0x153d3cc*/ void HandlerUpdateCampaign();
    /*0x153d3d8*/ void HandlerUpdateFriendPosition();
    /*0x153d498*/ void StartDirectingProcess();
    /*0x153d690*/ System.Collections.IEnumerator CoDirecting(int _nBeforeStage);
    /*0x153d70c*/ System.Collections.IEnumerator CoStageAnimation(int _beforeStage, int _nextStage);
    /*0x153d78c*/ UnityEngine.Vector2 GetAnchoredPosition();
    /*0x153d7f0*/ float GetAnchoredPositionY();
    /*0x153d898*/ void <OnEnter>b__16_0();
    /*0x153d8bc*/ void <OnEnter>b__16_1();

    class <>c
    {
        static /*0x0*/ CampainMainWindow.<> <>9;
        static /*0x8*/ System.Func<bool> <>9__31_0;

        static /*0xda8514*/ <>c();
        /*0xda8574*/ <>c();
        /*0xda857c*/ bool <CoDirecting>b__31_0();
    }

    class <CoDirecting>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CampainMainWindow <>4__this;
        /*0x28*/ int _nBeforeStage;

        /*0xda86ac*/ <CoDirecting>d__31(int <>1__state);
        /*0xda86d8*/ void System.IDisposable.Dispose();
        /*0xda86dc*/ bool MoveNext();
        /*0xda894c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda8954*/ void System.Collections.IEnumerator.Reset();
        /*0xda8994*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ CampainMainWindow <>4__this;
        /*0x18*/ int _beforeStage;

        /*0xda8620*/ <>c__DisplayClass32_0();
        /*0xda8628*/ bool <CoStageAnimation>b__0();
    }

    class <CoStageAnimation>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CampainMainWindow <>4__this;
        /*0x28*/ int _beforeStage;
        /*0x2c*/ int _nextStage;

        /*0xda899c*/ <CoStageAnimation>d__32(int <>1__state);
        /*0xda89c8*/ void System.IDisposable.Dispose();
        /*0xda89cc*/ bool MoveNext();
        /*0xda8ba0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda8ba8*/ void System.Collections.IEnumerator.Reset();
        /*0xda8be8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopBanner : UnityEngine.MonoBehaviour
{
    /*0x18*/ DefineCashShop.CashShopTabType m_currTab;
    /*0x20*/ UnityEngine.GameObject m_currBanner;
    /*0x28*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x15408d8*/ CashShopBanner();
    /*0x153fc1c*/ void OnEnable();
    /*0x153fcd8*/ void OnDisable();
    /*0x153fd08*/ void InitBanner(DefineCashShop.CashShopTabType tab);
    /*0x153fdac*/ void UpdateBanner();
    /*0x1540004*/ void ShowBanner(string key);
    /*0x1540238*/ void DestroyBanner();
    /*0x15402e0*/ void UpdateBannerResetTime();
    /*0x154037c*/ void UpdateBannerResetTimeByBeginner();
    /*0x15405b0*/ void UpdateBannerResetTimeByTab();
    /*0x153fc6c*/ System.Collections.IEnumerator CoUpdateTimer();

    class <CoUpdateTimer>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopBanner <>4__this;

        /*0xda8d94*/ <CoUpdateTimer>d__12(int <>1__state);
        /*0xda8dc0*/ void System.IDisposable.Dispose();
        /*0xda8dc4*/ bool MoveNext();
        /*0xda8e2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda8e34*/ void System.Collections.IEnumerator.Reset();
        /*0xda8e74*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopGrowBanner : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Button m_button;
    /*0x20*/ LocalizeString m_priceText;
    /*0x28*/ UnityEngine.GameObject m_descParent;
    /*0x30*/ LocalizeString m_descText;

    /*0x1541d10*/ CashShopGrowBanner();
    /*0x15411b8*/ void OnEnable();
    /*0x15411e8*/ void OnDisable();
    /*0x15411bc*/ void InitBanner();
    /*0x15417a8*/ void UpdateBanner();
    /*0x15417ac*/ void UpdateButton();
    /*0x15411ec*/ void SetPrice();
    /*0x1541498*/ void SetDesc();
    /*0x154199c*/ void OnClickGrowPassPurchase();
    /*0x1541b9c*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);

    class <>c
    {
        static /*0x0*/ CashShopGrowBanner.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Cashshopquest> <>9__9_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Cashshopquest> <>9__10_0;
        static /*0x18*/ System.Predicate<TableData.TableData_Cashshopquest> <>9__11_0;

        static /*0xda8e7c*/ <>c();
        /*0xda8edc*/ <>c();
        /*0xda8ee4*/ bool <SetPrice>b__9_0(TableData.TableData_Cashshopquest data);
        /*0xda8f58*/ bool <SetDesc>b__10_0(TableData.TableData_Cashshopquest data);
        /*0xda8fcc*/ bool <OnClickGrowPassPurchase>b__11_0(TableData.TableData_Cashshopquest data);
    }
}

class CashShopIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage[] m_atlasImages;
    /*0x20*/ LocalizeString[] m_texts;
    /*0x28*/ UnityEngine.GameObject[] m_unSelectDisabled;
    /*0x30*/ UnityEngine.Color m_imageSelectColor;
    /*0x40*/ UnityEngine.Color m_textSelectColor;
    /*0x50*/ UnityEngine.Color m_unSelectColor;

    /*0x1542480*/ CashShopIcon();
    /*0x1542248*/ void Select();
    /*0x1542440*/ void UnSelect();
    /*0x1542288*/ void SetAtlasColor(UnityEngine.Color color);
    /*0x1542328*/ void SetTextColor(UnityEngine.Color color);
    /*0x15423c4*/ void SetObject(bool enable);
}

class CashShopPackageItem : UnityEngine.MonoBehaviour
{
    static int PRODUCT_MAX_COUNT = 3;
    /*0x18*/ AtlasImage m_backGroundImage;
    /*0x20*/ AtlasImage m_mainImage;
    /*0x28*/ AtlasImage m_badgeImage;
    /*0x30*/ AtlasImage m_bonusImage;
    /*0x38*/ LocalizeString m_badgeText;
    /*0x40*/ LocalizeString m_bonusAmountText;
    /*0x48*/ LocalizeString m_priceText;
    /*0x50*/ UnityEngine.UI.Text m_priceText2;
    /*0x58*/ LocalizeString m_purchaseCountText;
    /*0x60*/ LocalizeString m_nameText;
    /*0x68*/ LocalizeString m_descText;
    /*0x70*/ LocalizeString m_restTimeText;
    /*0x78*/ UnityEngine.GameObject m_soldOutObject;
    /*0x80*/ UnityEngine.GameObject m_resetTimeObject;
    /*0x88*/ UnityEngine.GameObject m_productListParent;
    /*0x90*/ UnityEngine.GameObject m_reddot;
    /*0x98*/ UnityEngine.GameObject m_dontOwnerObject;
    /*0xa0*/ UnityEngine.Coroutine m_resetTimer;
    /*0xa8*/ System.Collections.Generic.List<Rewards> m_productRewardDataList;
    /*0xb0*/ System.Collections.Generic.List<ItemTableRewardSlot> m_productItemObjectList;
    /*0xb8*/ DefineCashShop.CashShopPackageData m_cashShopPackageData;
    /*0xc0*/ DefineCashShop.CashShopTabType m_tabType;
    /*0xc4*/ DefineCashShop.CashShopDrawType m_drawType;

    /*0x154bf94*/ CashShopPackageItem();
    /*0x1548b50*/ void OnDisable();
    /*0x1548b80*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x15495b4*/ void SetName(string name);
    /*0x154a7c0*/ void SetDesc(string desc);
    /*0x154a984*/ void SetDontOwnerHero();
    /*0x154ab6c*/ void SetColor();
    /*0x1548f80*/ void SetBadge(string badgeType, int badgePercent);
    /*0x15493ac*/ void SetBonus(string bonusPackage);
    /*0x1548eac*/ void SetBackGround();
    /*0x154b6d4*/ void SetBackGroundWidth();
    /*0x154b3d0*/ void SetBackGroundHeight();
    /*0x1549830*/ void SetPurchaseCount();
    /*0x154b880*/ void SetPrice();
    /*0x154bac4*/ void SetPrice2();
    /*0x15499d4*/ void SetResetTime();
    /*0x1549de4*/ void SetReddot();
    /*0x154bd9c*/ void SetSoldOut();
    /*0x1548d1c*/ void SetLocation();
    /*0x1549ea4*/ void ParserProduct();
    /*0x154a098*/ void ShowProductItems();
    /*0x154b278*/ long GetBonusStarValue();
    /*0x154be50*/ void OnClickPurchase();
    /*0x154bd30*/ System.Collections.IEnumerator CoUpdateResetTime();
    /*0x154c058*/ bool <SetColor>b__29_0(TableData.TableData_Cashshophero data);
    /*0x154c088*/ bool <SetColor>b__29_1(TableData.TableData_Cashshopskin data);
    /*0x154c0b8*/ bool <SetBackGroundHeight>b__34_0(TableData.TableData_Cashshopsubscription data);

    class <>c__DisplayClass43_0
    {
        /*0x10*/ int heroID;
        /*0x18*/ CashShopPackageItem <>4__this;

        /*0xdaba98*/ <>c__DisplayClass43_0();
        /*0xdabaa0*/ void <ShowProductItems>b__0();
    }

    class <CoUpdateResetTime>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopPackageItem <>4__this;
        /*0x28*/ System.TimeSpan <timeSpan>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;

        /*0xdabb2c*/ <CoUpdateResetTime>d__46(int <>1__state);
        /*0xdabb58*/ void System.IDisposable.Dispose();
        /*0xdabb5c*/ bool MoveNext();
        /*0xdac01c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdac024*/ void System.Collections.IEnumerator.Reset();
        /*0xdac064*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopPackageItemGrowth : CashShopPackageItem
{
    /*0xc8*/ UnityEngine.UI.Button m_button;
    /*0xd0*/ LocalizeString m_scoreText;
    /*0xd8*/ DefineEvent.TriggerData m_triggerData;
    /*0xe0*/ PTShare.Define.SGrowthRow m_growthRow;
    /*0xe8*/ int m_destScore;

    /*0x154c8c4*/ CashShopPackageItemGrowth();
    /*0x154c0e8*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x154c154*/ void SetData(DefineCashShop.CashShopPackageData shopPackage);
    /*0x154c468*/ void UpdateButton();
    /*0x154c2f4*/ void SetScore();
    /*0x154c59c*/ bool IsClear();
    /*0x154c5d0*/ void SetBackGroundWidth();
    /*0x154c680*/ void SetSoldOut();
    /*0x154c71c*/ void SetDesc(string desc);
    /*0x154c808*/ void OnClickPurchase();
    /*0x154c8c8*/ void <OnClickPurchase>b__13_0();

    class <>c__DisplayClass6_0
    {
        /*0x10*/ DefineCashShop.CashShopPackageData shopPackage;

        /*0xdac06c*/ <>c__DisplayClass6_0();
        /*0xdac074*/ bool <SetData>b__0(PTShare.Define.SGrowthRow data);
    }
}

class CashShopPackageItemSkin : CashShopPackageItem
{
    /*0xc8*/ UnityEngine.UI.Button m_buyButton;

    /*0x154ccc4*/ CashShopPackageItemSkin();
    /*0x154c8fc*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x154c900*/ void SetDesc(string desc);
    /*0x154caec*/ void SetEnableBuyButton(bool enable);
    /*0x154cb90*/ void OnClickLookSkin();
}

class CashShopPackageItemSubScription : CashShopPackageItem
{
    /*0xc8*/ AtlasImage[] m_directRewardImages;
    /*0xd0*/ LocalizeString[] m_directRewardTexts;
    /*0xd8*/ AtlasImage[] m_dailyRewardImages;
    /*0xe0*/ LocalizeString[] m_dailyRewardTexts;
    /*0xe8*/ AtlasImage[] m_accumulateRewardImages;
    /*0xf0*/ LocalizeString[] m_accumulateRewardTexts;
    /*0xf8*/ UnityEngine.GameObject m_soldOutDisableObject;
    /*0x100*/ UnityEngine.GameObject m_vipObject;
    /*0x108*/ LocalizeString m_subscriptLeftTimeText;
    /*0x110*/ System.Collections.Generic.List<long> m_accCurrencys;

    /*0x154de8c*/ CashShopPackageItemSubScription();
    /*0x154ccc8*/ void InitializePackageItem(DefineCashShop.CashShopPackageData shopPackage, DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopDrawType drawType);
    /*0x154cd6c*/ void SetDirectReward();
    /*0x154d2ec*/ void SetDailyReward();
    /*0x154d96c*/ void SetSoldOut();
    /*0x154d9dc*/ void SetPrice();
    /*0x154dc20*/ void SetPrice2();
    /*0x154d834*/ void SetLeftTimeText();
    /*0x154d758*/ void SetAccReward();
}

class CashShopPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ CashShopBanner m_banner;
    /*0x50*/ ScrollContent_CashShopPackageItem m_scrollContentVertical1N;
    /*0x58*/ ScrollContent_CashShopPackageItem m_scrollContentVertical1HN;
    /*0x60*/ ScrollContent_CashShopPackageItem m_scrollContentVertical1N_Growth;
    /*0x68*/ ScrollContent_CashShopPackageItem m_scrollContentVertical3N;
    /*0x70*/ CashShopPackageItem m_cashShop3NPrefab;
    /*0x78*/ CashShopPackageItem m_cashShop3N_NewPrefab;
    /*0x80*/ CashShopPackageItem m_cashShop3N_BeginnerPrefab;
    /*0x88*/ CashShopPackageItem m_cashShop1HNPrefab;
    /*0x90*/ CashShopPackageItem m_cashShop1HN_NewPrefab;
    /*0x98*/ UnityEngine.GameObject m_cashShopSubjectParent;
    /*0xa0*/ CashShopPackageItem[] m_cashShopSubjects;
    /*0xa8*/ UnityEngine.GameObject[] m_cashShopSubCategorys;
    /*0xb0*/ CashShopIcon[] m_cashShopMainCategoryIcons;
    /*0xb8*/ CashShopIcon[] m_cashShopIcons;
    /*0xc0*/ ScrollContent_CashShopPackageItem m_currScrollContent;
    /*0xc8*/ DefineCashShop.CashShopDrawType m_drawType;
    /*0xcc*/ DefineCashShop.CashShopCategoryType m_currCategoryType;
    /*0xd0*/ DefineCashShop.CashShopTabType m_currTab;
    /*0xd8*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> m_currPackageData;
    /*0xe0*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0xe8*/ UnityEngine.GameObject m_vipObject;

    /*0x15512b8*/ CashShopPopup();
    /*0x154df00*/ void OnCreate();
    /*0x154df04*/ void OnEnter();
    /*0x154df08*/ void OnStart();
    /*0x154df0c*/ void OnFinish();
    /*0x154df10*/ void OnLeave();
    /*0x154e294*/ void OnDelete();
    /*0x154e298*/ void OnExit();
    /*0x154e3a0*/ void InitializePopup(DefineCashShop.CashShopCategoryType select, DefineCashShop.CashShopTabType tabType);
    /*0x154e780*/ void SetPlayerCurrency();
    /*0x154e8dc*/ void UpdatePage();
    /*0x154e980*/ void UpdateTabBtn();
    /*0x154eb58*/ void UpdateCurrentPackageData();
    /*0x1550a20*/ void UpdateGrowthPackageData();
    /*0x1550b14*/ PTShare.Define.SGoods GetPurchaseData(string packageId);
    /*0x15500f8*/ void UpdateScrollContent();
    /*0x154ffac*/ void UpdateCategoryUI();
    /*0x154ff8c*/ void UpdateBanner();
    /*0x154fd5c*/ void UpdateDrawType();
    /*0x1550dc8*/ void OnClickShowVipInfo();
    /*0x1550e90*/ void OnClickShowRefund();
    /*0x1550f04*/ void OnClickCategoryChange(int categoryType);
    /*0x1550f5c*/ void OnClickTabChange(int tabType);
    /*0x155089c*/ void TabChange(DefineCashShop.CashShopTabType tabType);
    /*0x1550f08*/ void CategoryChange(DefineCashShop.CashShopCategoryType categoryType);
    /*0x154e758*/ void CategoryChange(DefineCashShop.CashShopCategoryType categoryType, DefineCashShop.CashShopTabType cashShopTabType);
    /*0x1550c9c*/ void BindEventCurrentContent();
    /*0x154e0c8*/ void RemoveScrollContentEvent();
    /*0x1550f60*/ void HandleScrollContent(int index, CashShopPackageItem obj);
    /*0x1550ff0*/ void HandleItemPurchaseSuccess(string packageId);
    /*0x15512b4*/ void HandleRefreshShop();
    /*0x1550c20*/ System.Collections.IEnumerator CoShopRefresh(float time);
    /*0x1551344*/ void <OnExit>b__29_0();
    /*0x155134c*/ void <UpdateGrowthPackageData>b__35_0(TableData.TableData_Cashshopquestreward f);

    class <>c__DisplayClass30_0
    {
        /*0x10*/ CashShopPopup <>4__this;
        /*0x18*/ DefineCashShop.CashShopCategoryType select;
        /*0x1c*/ DefineCashShop.CashShopTabType tabType;

        /*0xdac0a4*/ <>c__DisplayClass30_0();
        /*0xdac0ac*/ void <InitializePopup>b__0();
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ CashShopPopup <>4__this;
        /*0x18*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> m_removeList;

        /*0xdac0d0*/ <>c__DisplayClass34_0();
        /*0xdac0d8*/ void <UpdateCurrentPackageData>b__1(TableData.TableData_Cashshopdaily f);
        /*0xdac180*/ void <UpdateCurrentPackageData>b__2(TableData.TableData_Cashshopweekly f);
        /*0xdac228*/ void <UpdateCurrentPackageData>b__3(TableData.TableData_Cashshopmonthly f);
        /*0xdac2d0*/ void <UpdateCurrentPackageData>b__4(TableData.TableData_Cashshopstar f);
        /*0xdac378*/ void <UpdateCurrentPackageData>b__5(TableData.TableData_Cashshoplimit f);
        /*0xdac420*/ void <UpdateCurrentPackageData>b__6(TableData.TableData_Cashshopsubscription f);
        /*0xdac4c8*/ void <UpdateCurrentPackageData>b__7(TableData.TableData_Cashshophero f);
        /*0xdac570*/ void <UpdateCurrentPackageData>b__8(TableData.TableData_Cashshopbeginner f);
        /*0xdac618*/ void <UpdateCurrentPackageData>b__9(TableData.TableData_Cashshopskinpiece f);
        /*0xdac6c0*/ void <UpdateCurrentPackageData>b__10(TableData.TableData_Cashshopskin f);
        /*0xdac768*/ void <UpdateCurrentPackageData>b__0(DefineCashShop.CashShopPackageData data);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ string packageId;

        /*0xdac868*/ <>c__DisplayClass36_0();
        /*0xdac870*/ bool <GetPurchaseData>b__0(PTShare.Define.SGoods packet);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ CashShopPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<TableData.TableData_Cashshopsubscription> <>9__0;

        /*0xdac89c*/ <>c__DisplayClass37_0();
        /*0xdac8a4*/ bool <UpdateScrollContent>b__0(TableData.TableData_Cashshopsubscription data);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ DefineCashShop.CashShopTabType tabType;
        /*0x18*/ CashShopPopup <>4__this;

        /*0xdac93c*/ <>c__DisplayClass45_0();
        /*0xdac944*/ void <TabChange>b__0();
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ string packageId;

        /*0xdac9f0*/ <>c__DisplayClass51_0();
        /*0xdac9f8*/ bool <HandleItemPurchaseSuccess>b__0(DefineCashShop.CashShopPackageData data);
        /*0xdaca1c*/ bool <HandleItemPurchaseSuccess>b__1(DefineCashShop.CashShopPackageData data);
    }

    class <CoShopRefresh>d__53 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ CashShopPopup <>4__this;

        /*0xdaca40*/ <CoShopRefresh>d__53(int <>1__state);
        /*0xdaca6c*/ void System.IDisposable.Dispose();
        /*0xdaca70*/ bool MoveNext();
        /*0xdacb30*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdacb38*/ void System.Collections.IEnumerator.Reset();
        /*0xdacb78*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CashShopPurchasePopup : GuiBase
{
    /*0x40*/ ScrollContent_StageReward m_scrollContent;
    /*0x48*/ LocalizeString m_popupNameText;
    /*0x50*/ LocalizeString m_popupSubDesc;
    /*0x58*/ LocalizeString m_purchaseCountText;
    /*0x60*/ UnityEngine.RectTransform m_scrollRect;
    /*0x68*/ UnityEngine.Vector2 m_defaultSize;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardDataList;
    /*0x78*/ DefineCashShop.CashShopPackageData m_cashShopPackageData;
    /*0x80*/ DefineCashShop.CashShopTabType m_currTab;

    /*0xd68fd8*/ CashShopPurchasePopup();
    /*0xd67228*/ void OnCreate();
    /*0xd6722c*/ void OnDelete();
    /*0xd67230*/ void OnEnter();
    /*0xd6729c*/ void OnFinish();
    /*0xd672a0*/ void OnLeave();
    /*0xd67374*/ void OnStart();
    /*0xd67378*/ void OnExit();
    /*0xd673f4*/ void InitializePopup(DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopPackageData cashShopPackageData, System.Collections.Generic.List<Rewards> rewardDataList);
    /*0xd676b0*/ void SetLocalizeName();
    /*0xd67dc4*/ void SetSubDesc();
    /*0xd67f64*/ void SetPurchaseCount();
    /*0xd68400*/ void SetRectSize();
    /*0xd6827c*/ bool AddVipPointReward();
    /*0xd684cc*/ void SuccessPurchase(ServerProtocol.ResCashShopPurchase resData);
    /*0xd684ec*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0xd687a0*/ void OnPurchaseRequest();
    /*0xd68ae4*/ void Purchase(int billingType);
    /*0xd68ddc*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0xd69010*/ void <OnPurchaseRequest>b__24_0(ServerProtocol.ResCashShopPurchase _resData);
    /*0xd690e0*/ void <OnPurchaseRequest>b__24_1(ServerProtocol.ResCashShopCheck _response);
    /*0xd6914c*/ void <OnPurchaseRequest>b__24_2(int _failed, string args);

    class <>c__DisplayClass25_0
    {
        /*0x10*/ CashShopPurchasePopup <>4__this;
        /*0x18*/ int billingType;
        /*0x20*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__2;

        /*0xdacb80*/ <>c__DisplayClass25_0();
        /*0xdacb88*/ void <Purchase>b__0(ServerProtocol.ResCashShopPurchase _resData);
        /*0xdacbd0*/ void <Purchase>b__1(UnityEngine.Purchasing.Product result);
        /*0xdace10*/ void <Purchase>b__2(ServerProtocol.ResCashShopPurchase res);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ CashShopPurchasePopup <>4__this;
        /*0x18*/ int index;

        /*0xdace48*/ <>c__DisplayClass26_0();
        /*0xdace50*/ void <HandleScrollContent>b__0();
    }
}

class CashShopSelectPurchasePopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardSelectSlot m_scrollContent;
    /*0x48*/ SelectRewardWindow m_selectWindow;
    /*0x50*/ UnityEngine.UI.Button m_confirmButton;
    /*0x58*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> m_dataList;
    /*0x60*/ System.Collections.Generic.List<int> m_confirmList;
    /*0x68*/ System.Collections.Generic.List<int> m_fixList;
    /*0x70*/ int m_currGroup;
    /*0x74*/ int m_vipPoint;
    /*0x78*/ string m_packageId;
    /*0x80*/ PTShare.Define.SInstant m_sInstant;

    /*0xd6ae24*/ CashShopSelectPurchasePopup();
    /*0xd6978c*/ void OnCreate();
    /*0xd69790*/ void OnDelete();
    /*0xd69794*/ void OnEnter();
    /*0xd69798*/ void OnFinish();
    /*0xd6979c*/ void OnLeave();
    /*0xd69874*/ void OnStart();
    /*0xd69878*/ void OnExit();
    /*0xd69880*/ bool IsAllSelect();
    /*0xd69928*/ System.Collections.Generic.List<Rewards> FindReward(int group, int index);
    /*0xd69ab8*/ string FindProduct(int group, int index);
    /*0xd69bcc*/ void InitPopup(PTShare.Define.SInstant sInstant, int vipPoint);
    /*0xd6a33c*/ void InitPopup(string packageId, int vipPoint);
    /*0xd69e38*/ void InitData(string packageId);
    /*0xd6a230*/ void UpdatePopup();
    /*0xd6a3a8*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0xd69d5c*/ void BindEvent();
    /*0xd697a0*/ void RemoveEvent();
    /*0xd6a654*/ void HandleScrollContent(int index, RewardSelectSlot obj);
    /*0xd6a870*/ void HandleOnClick(int index);
    /*0xd6ab14*/ void HandleSelect(int index);
    /*0xd6aba4*/ void OnClickPurchase();

    class <>c__DisplayClass20_0
    {
        /*0x10*/ PTShare.Define.SInstant sInstant;

        /*0xdacf30*/ <>c__DisplayClass20_0();
        /*0xdacf38*/ bool <InitPopup>b__0(TableData.TableData_Cashshopinstant data);
    }
}

class CashShopVIPInfo : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_slider;
    /*0x20*/ LocalizeString m_vipPointSliderText;
    /*0x28*/ LocalizeString m_vipPointInfoText;
    /*0x30*/ UnityEngine.GameObject m_reddot;

    /*0xd6cb0c*/ CashShopVIPInfo();
    /*0xd6c298*/ void OnEnable();
    /*0xd6c4e8*/ void OnDisable();
    /*0xd6c474*/ void UpdateVip();
    /*0xd6c640*/ void SetSliderUI(int vipPoint);
    /*0xd6c880*/ void SetTextUI(int vipPoint);
    /*0xd6ca2c*/ void UpdateVIP();
    /*0xd6cb04*/ void HandleChangeUserInfo();
    /*0xd6cb08*/ void HandleReceiveReward();
}

class RefundPopup : GuiBase
{
    /*0x11c8718*/ RefundPopup();
    /*0x11c8468*/ void OnCreate();
    /*0x11c846c*/ void OnDelete();
    /*0x11c8470*/ void OnEnter();
    /*0x11c84dc*/ void OnFinish();
    /*0x11c84e0*/ void OnLeave();
    /*0x11c84e4*/ void OnStart();
    /*0x11c84e8*/ void OnExit();
    /*0x11c8564*/ void OnClickOpenTermsOfService();
    /*0x11c867c*/ void OnClickOpenPrivacyPolicy();
    /*0x11c8600*/ void OpenURL(string url);
}

class RewardSelectSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemInfoSlot;
    /*0x20*/ UnityEngine.GameObject m_emptySlot;
    /*0x28*/ int m_index;
    /*0x2c*/ bool m_isEmpty;
    /*0x30*/ System.Action<int> m_click;

    /*0x11aa4d8*/ RewardSelectSlot();
    /*0x11aa0b4*/ bool IsEmpty();
    /*0x11aa0bc*/ void InitSlot(int index, System.Action<int> click);
    /*0x11aa1d0*/ void InitSlotVip(long vipAmount);
    /*0x11aa2dc*/ void InitSlot(int index, Rewards reward, System.Action<int> click);
    /*0x11aa478*/ void OnClick();
}

class ScrollContent_RewardSelectSlot : ScrollContent<RewardSelectSlot>
{
    /*0xe1b53c*/ ScrollContent_RewardSelectSlot();
}

class ScrollContent_VipInfoEntity : ScrollContent<VipInfoEntity>
{
    /*0xe1badc*/ ScrollContent_VipInfoEntity();
}

class SelectRewardWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x20*/ int m_index;
    /*0x28*/ System.Collections.Generic.List<Rewards> m_rewards;
    /*0x30*/ System.Action<int> m_callBack;

    /*0xe2409c*/ SelectRewardWindow();
    /*0xe23d20*/ void OnDisable();
    /*0xe23df8*/ void InitWindow(int index, System.Collections.Generic.List<Rewards> rewardList, System.Action<int> onCallBack);
    /*0xe23e7c*/ void BindEvent();
    /*0xe23d24*/ void RemoveEvent();
    /*0xe23f58*/ void HandleScrollContent(int index, ItemInfoSlot obj);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ SelectRewardWindow <>4__this;
        /*0x18*/ int index;

        /*0xcbdf60*/ <>c__DisplayClass8_0();
        /*0xcbdf68*/ void <HandleScrollContent>b__0();
    }
}

class VipInfoEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_newImage;
    /*0x20*/ AtlasImage m_upImage;
    /*0x28*/ LocalizeString m_text;
    /*0x30*/ int m_type;

    /*0x10d4658*/ VipInfoEntity();
    /*0x10d44fc*/ void InitEntity(int type, string str);
}

class VipRewardPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ LocalizeString m_vipTitleText;
    /*0x50*/ LocalizeString m_vipLvText;
    /*0x58*/ LocalizeString m_vipDescText;
    /*0x60*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x68*/ ScrollContent_VipInfoEntity m_vipScrollContent;
    /*0x70*/ UnityEngine.GameObject m_prevBtnObject;
    /*0x78*/ UnityEngine.GameObject m_nextBtnObject;
    /*0x80*/ UnityEngine.UI.Button m_rewardButton;
    /*0x88*/ UnityEngine.GameObject m_rewardReddot;
    /*0x90*/ UnityEngine.GameObject m_unlockObject;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_unlockTitle;
    /*0xa0*/ ParticleBase m_unlockEffect;
    /*0xa8*/ System.Collections.Generic.List<Rewards> m_rewardDataList;
    /*0xb0*/ System.Collections.Generic.List<System.ValueTuple<int, string>> m_infoList;
    /*0xb8*/ UnityEngine.Coroutine m_coroutine;
    /*0xc0*/ int m_selectLv;

    /*0x10d7100*/ VipRewardPopup();
    /*0x10d4660*/ void OnCreate();
    /*0x10d4664*/ void OnDelete();
    /*0x10d4668*/ void OnEnter();
    /*0x10d466c*/ void OnFinish();
    /*0x10d4670*/ void OnLeave();
    /*0x10d47e8*/ void OnStart();
    /*0x10d47ec*/ void OnExit();
    /*0x10d4868*/ void InitializeVip(bool showUnlock);
    /*0x10d4b70*/ void UpdateUI();
    /*0x10d4c10*/ void UpdateData();
    /*0x10d4c70*/ void UpdateVipReward();
    /*0x10d4d58*/ void UpdateVipTitle();
    /*0x10d4e88*/ void UpdateVipDesc();
    /*0x10d4fe4*/ void UpdateVipLv();
    /*0x10d5114*/ void UpdateVipInfo();
    /*0x10d4bc4*/ void StartUnlockEffect();
    /*0x10d664c*/ System.Collections.IEnumerator CoShowUnlockEffect();
    /*0x10d5498*/ void AddNewVipInfo();
    /*0x10d5abc*/ void AddUpdateVipInfo();
    /*0x10d60a0*/ void AddHoldVipInfo();
    /*0x10d67fc*/ void AddInfoList(int type, string str);
    /*0x10d66e0*/ string AddInfo(bool isAdd, string localizeKey, int value);
    /*0x10d6a74*/ string AddInfo(bool isAdd, string localizeKey, float value);
    /*0x10d68cc*/ string AddInfo(bool isAdd, string localizeKey, bool value);
    /*0x10d66b8*/ bool IsNewContent(int oldValue, int newValue);
    /*0x10d6bbc*/ bool IsNewContent(float oldValue, float newValue);
    /*0x10d68b0*/ bool IsNewContent(bool oldValue, bool newValue);
    /*0x10d6a00*/ bool IsUpdateContent(int oldValue, int newValue);
    /*0x10d6bf8*/ bool IsUpdateContent(float oldValue, float newValue);
    /*0x10d6a24*/ bool IsUpdateContent(bool oldValue, bool newValue);
    /*0x10d6a38*/ bool IsHoldContent(int oldValue, int newValue);
    /*0x10d6c10*/ bool IsHoldContent(float oldValue, float newValue);
    /*0x10d6a54*/ bool IsHoldContent(bool oldValue, bool newValue);
    /*0x10d6bac*/ bool IsActiveContent(int oldValue, int newValue);
    /*0x10d6bc4*/ bool IsActiveContent(float oldValue, float newValue);
    /*0x10d6bec*/ bool IsActiveContent(bool oldValue, bool newValue);
    /*0x10d5374*/ void UpdateBtn();
    /*0x10d51c0*/ void UpdateRewardBtn();
    /*0x10d6c40*/ void OnClickPrevVip();
    /*0x10d6cec*/ void OnClickNextVip();
    /*0x10d6dc0*/ void OnClickReward();
    /*0x10d6e78*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0x10d7044*/ void HandleInfoScrollContent(int index, VipInfoEntity obj);
    /*0x10d71b8*/ void <OnClickReward>b__57_0();

    class <CoShowUnlockEffect>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ VipRewardPopup <>4__this;

        /*0xd8bba0*/ <CoShowUnlockEffect>d__33(int <>1__state);
        /*0xd8bbcc*/ void System.IDisposable.Dispose();
        /*0xd8bbd0*/ bool MoveNext();
        /*0xd8bd9c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8bda4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8bde4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ChatMainWindow : GuiBase
{
    static int nMaxChatLog = 100;
    static float nChatMessageLimitTime = 1;
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ NewScrollRect_ChatMessage m_cLoopScroll;
    /*0x48*/ UnityEngine.CanvasGroup m_ScrollCanvasGroup;
    /*0x50*/ LocalizeString m_ChannelText;
    /*0x58*/ UnityEngine.UI.InputField m_ChatInputField;
    /*0x60*/ UnityEngine.GameObject m_LeaveBtnParent;
    /*0x68*/ ChatEmoteWindow m_ChatEmoteWindow;
    /*0x70*/ ChatChannelParent m_ChatChannelParent;
    /*0x78*/ bool bIsInitializeChannel;
    /*0x80*/ System.DateTime dtChatTime;
    /*0x88*/ bool ChatReady;

    static /*0x13305b4*/ ChatMainWindow();
    static /*0x132e294*/ void add_OnExitEvent(System.Action value);
    static /*0x132e388*/ void remove_OnExitEvent(System.Action value);
    /*0x1330540*/ ChatMainWindow();
    /*0x132e180*/ ChatServerLogger get_logger();
    /*0x132e1d4*/ bool get_ChatLogined();
    /*0x132e238*/ ChatSystem.ChannelInfo get_curInfo();
    /*0x132e258*/ System.Collections.Generic.List<ChatSystem.ChatLog> get_chatlog();
    /*0x132e47c*/ void OnCreate();
    /*0x132e5d8*/ void OnEnter();
    /*0x132eba0*/ void OnStart();
    /*0x132eba4*/ void OnFinish();
    /*0x132eba8*/ void OnLeave();
    /*0x132ed34*/ void OnDelete();
    /*0x132ed40*/ void OnExit();
    /*0x132ea1c*/ void ChannelInitalize();
    /*0x132c480*/ void UpdateChatList(bool _bIsAdd);
    /*0x132efb4*/ void HandleSubmitMessage(string _msg);
    /*0x132f064*/ void SendChatMessage(string customText);
    /*0x132f600*/ void HandlerScrollItemUpdate(int _index, ChatMessage _instance);
    /*0x132f91c*/ void HandlerRefreshScroll(int _index);
    /*0x132fab0*/ void AddWispherChannel(long _lPlayerid, string _strNickname, bool _bSelectBtn);
    /*0x132ee60*/ void RefreshChannel();
    /*0x132fc20*/ string SetChannelLocalizeName(ChatSystem.ChannelInfo info);
    /*0x132fb80*/ void MoveChannel(ChatSystem.ChannelInfo _channel);
    /*0x1330194*/ void OnClick_LeaveButton();
    /*0x1330300*/ void OnClick_ChannelList();
    /*0x1330164*/ bool EqualsChannelInfo(ChatSystem.ChannelInfo _left, ChatSystem.ChannelInfo _right);
    /*0x13303d0*/ void OpenEmoteWindow();
    /*0x1330474*/ void CallbackEmoteChat(string emote);
    /*0x13304ac*/ void HandlerChangeChennl(ChatSystem.ChannelInfo info);
}

class ChatChangeChannelEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ AtlasImage m_Background;
    /*0x28*/ int nCurChannelIdx;
    /*0x2c*/ int nIdx;

    /*0x1329fb0*/ ChatChangeChannelEntity();
    /*0x1329cd8*/ void InitializeEntity(string strTitle, int nCurChannel, int nIndex);
    /*0x1329de0*/ void OnClick_Button();
}

class ChatChannelEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<ChatSystem.ChannelInfo> OnChangeChannelEvent;
    /*0x18*/ LocalizeString m_ChannelName;
    /*0x20*/ LocalizeString m_LastedMsg;
    /*0x28*/ LocalizeString m_LastedTime;
    /*0x30*/ AtlasImage m_Icon;
    /*0x38*/ AtlasImage m_Background;
    /*0x40*/ GuildEmblemSlot m_GuildEmblemSlot;
    /*0x48*/ UnityEngine.GameObject m_RedDot;
    /*0x50*/ LocalizeString m_NonReadCount;
    /*0x58*/ ChatSystem.ChannelInfo channelInfo;

    static /*0x132b00c*/ ChatChannelEntity();
    /*0x132b004*/ ChatChannelEntity();
    /*0x132a474*/ ChatSystem.ChannelInfo get_curInfo();
    /*0x132a4d0*/ ChatSystem.ChatLog get_curLastedMsg();
    /*0x132a550*/ void InitializeEntity(ChatSystem.ChannelInfo info);
    /*0x132a9e8*/ string SetChannelLocalizeName(ChatSystem.ChannelInfo info);
    /*0x132af2c*/ void OnClick_Button();
}

class ChatChannelParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ChatChannelEntity m_ScrollContent;

    /*0x132b2b4*/ ChatChannelParent();
    /*0x132b010*/ System.Collections.Generic.List<ChatSystem.ChannelInfo> get_InfoList();
    /*0x132b06c*/ void OnEnable();
    /*0x132b090*/ void OnDisable();
    /*0x132b094*/ void OnDestroy();
    /*0x132b098*/ void InitializeParent();
    /*0x132b09c*/ void InitializeScroll();
    /*0x132b190*/ void HandlerScrollContent(int index, ChatChannelEntity entity);
    /*0x132b210*/ void OnClick_ChangeLangChannel();
    /*0x132b28c*/ void OnClick_Exit();
}

class ChatEmoteEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ImoteIcon;
    /*0x20*/ TableData.TableData_Emoticon imoteData;
    /*0x28*/ System.Action<string> OnClickCallback;

    /*0x132c890*/ ChatEmoteEntity();
    /*0x132c7a4*/ void InitializeEntity(TableData.TableData_Emoticon emote, System.Action<string> callback);
    /*0x132c824*/ void OnClick();
}

class ChatEmoteWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ChatEmoteEntity m_ScrollContent;
    /*0x20*/ System.Action<string> OnChatCallback;

    /*0x132ccc8*/ ChatEmoteWindow();
    /*0x132c898*/ System.Collections.Generic.List<TableData.TableData_Emoticon> get_EmoteTableList();
    /*0x132c8e4*/ void OnEnable();
    /*0x132ca10*/ void OnDisable();
    /*0x132cb10*/ void InitializeWindow(System.Action<string> onChatCallback);
    /*0x132cb54*/ void InitializeScrollContent();
    /*0x132cc14*/ void HandlerScrollContent(int index, ChatEmoteEntity obj);
    /*0x132cae8*/ void OpenCloseWindow();
}

class ChatMessage : UnityEngine.MonoBehaviour
{
    /*0x18*/ ChatParts[] m_ChatParts;
    /*0x20*/ UnityEngine.UI.LayoutElement m_LayoutElement;
    /*0x28*/ UnityEngine.RectTransform rectTransform;
    /*0x30*/ ChatUserType chatUserType;

    /*0x1330714*/ ChatMessage();
    /*0x13305b8*/ void Awake();
    /*0x132f6ec*/ void SetMessage(int _index, float _widht, ChatSystem.ChatLog _data);
}

enum ChatUserType
{
    Other = 0,
    Player = 1,
}

class ChatParts : UnityEngine.MonoBehaviour
{
    static float fOffsetX = 34;
    static float fOffsetY = 30;
    static /*0x0*/ System.Action<int> OnUpdateEvent;
    /*0x18*/ ChatUserType m_eChatType;
    /*0x20*/ PlayerProfileSlot m_PlayerSlot;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_Time;
    /*0x38*/ LocalizeString m_Message;
    /*0x40*/ AtlasImage m_MessageIcon;
    /*0x48*/ AtlasImage m_MessageBoxImage;
    /*0x50*/ UnityEngine.RectTransform m_slotParentTransform;
    /*0x58*/ UnityEngine.RectTransform m_msggroupTransform;
    /*0x60*/ UnityEngine.RectTransform m_mbTransform;
    /*0x68*/ UnityEngine.RectTransform m_msgTransform;
    /*0x70*/ UnityEngine.UI.HorizontalLayoutGroup m_horizontalGroup;
    /*0x78*/ UnityEngine.RectTransform m_hidembTransform;
    /*0x80*/ UnityEngine.RectTransform m_hidemsgTransform;
    /*0x88*/ LocalizeString m_hideMessage;
    /*0x90*/ UnityEngine.RectTransform rectTransform;
    /*0x98*/ ChatApp.Shared.MessagePackObjects.SMessage message;
    /*0xa0*/ int nIndex;
    /*0xa4*/ float fMaxWidth;

    static /*0x1330b64*/ ChatParts();
    static /*0x132e928*/ void add_OnUpdateEvent(System.Action<int> value);
    static /*0x132e834*/ void remove_OnUpdateEvent(System.Action<int> value);
    /*0x1330b54*/ ChatParts();
    /*0x133071c*/ void Awake();
    /*0x133060c*/ void Initialize(int _index, UnityEngine.UI.LayoutElement _element, UnityEngine.RectTransform _parent, float _maxWidth, ChatSystem.ChatLog _data);
    /*0x1330770*/ void SetTextWithSlot();
    /*0x1330994*/ bool ImoteCheck();
    /*0x1330ac4*/ void OnClick_PressMessage();
    /*0x1330914*/ System.Collections.IEnumerator CoUpdate(UnityEngine.RectTransform _parent, UnityEngine.UI.LayoutElement _element);
    /*0x1330b4c*/ ChatUserType GetChatType();
    /*0x1330b68*/ void <SetTextWithSlot>b__26_0();

    class <CoUpdate>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ChatParts <>4__this;
        /*0x28*/ UnityEngine.RectTransform _parent;
        /*0x30*/ UnityEngine.UI.LayoutElement _element;

        /*0x106df38*/ <CoUpdate>d__29(int <>1__state);
        /*0x106df64*/ void System.IDisposable.Dispose();
        /*0x106df68*/ bool MoveNext();
        /*0x106e35c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106e364*/ void System.Collections.IEnumerator.Reset();
        /*0x106e3a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ChatWhisperNotify : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnWhisper;
    /*0x18*/ LocalizeString m_whisperName;
    /*0x20*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x28*/ UnityEngine.GameObject m_startPosition;
    /*0x30*/ UnityEngine.Coroutine m_coroutine;

    static /*0x10da814*/ ChatWhisperNotify();
    /*0x10da80c*/ ChatWhisperNotify();
    /*0x10da464*/ void OnEnable();
    /*0x10da620*/ void OnDisable();
    /*0x10da4bc*/ void BindEvent();
    /*0x10da690*/ void RemoveEvent();
    /*0x10da780*/ void HandleWhisper();
    /*0x10da5b4*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ChatWhisperNotify <>4__this;

        /*0x106e870*/ <CoUpdate>d__10(int <>1__state);
        /*0x106e89c*/ void System.IDisposable.Dispose();
        /*0x106e8a0*/ bool MoveNext();
        /*0x106ec1c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106ec24*/ void System.Collections.IEnumerator.Reset();
        /*0x106ec64*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AmountSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_amount;
    /*0x20*/ AtlasImage m_icon;
    /*0x28*/ bool m_isBigIcon;

    /*0xedba4c*/ AmountSlot();
    /*0xedb3bc*/ void InitSlot(Rewards rewards);
    /*0xedb550*/ void InitSlot(AtlasType atlasType, string icon, long amount);
    /*0xedb600*/ void InitSlot(PTShare.Define.Currency currency);
    /*0xedb70c*/ void InitSlot(PTShare.Define.Currency currency, long amount);
    /*0xedb804*/ void InitSlotSlashOwn(Rewards rewards);
}

class CategoryEntityBase<T> : UnityEngine.MonoBehaviour
{
    /*0x0*/ UnityEngine.UI.Image m_Background;
    /*0x0*/ LocalizeString m_Title;
    /*0x0*/ SeasonTimeText m_SeasonText;
    /*0x0*/ CategoryEntityInPanel m_LeftPanel;
    /*0x0*/ CategoryEntityInPanel m_RightPanel;
    /*0x0*/ CustomButton m_TopRightButton;
    /*0x0*/ AtlasImage m_TopRightBtnIcon;
    /*0x0*/ LocalizeString m_TopRightBtnText;
    /*0x0*/ T eCategoryType;

    CategoryEntityBase();
    void InitializeEntity(T eType);
    void SetBackground();
    void SetSeasonText();
    void SetPanel();
    void SetTopRightButton();
    void SetTitleText();
    void SetActiveLeftPanel(bool enable);
    void SetActiveRightPanel(bool enable);
    void SetActiveTopRightButton(bool enable);
    void SetActiveSeasonText(bool enable);
    void OnClick();
}

class CategoryEntityInPanel : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ AtlasImage m_Icon;
    /*0x28*/ LocalizeString m_Desc;

    /*0xd6d1a0*/ CategoryEntityInPanel();
    /*0xd6cfa4*/ void InitializePanel(string titleKey, string descKey, AtlasType atlasType, string atlasName);
}

class ContentsBuildingTitle : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ string m_LocalKey;

    /*0xf4ca80*/ ContentsBuildingTitle();
    /*0xf4c998*/ void OnEnable();
}

class CurrencyTopEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ TooltipData_Desc m_TooltipDesc;
    /*0x30*/ TopCurrencyInfo m_currencyInfo;

    /*0xf4d4ac*/ CurrencyTopEntity();
    /*0xf4cee8*/ void InitializeEntity(TopCurrencyInfo _info);
    /*0xf4cf04*/ void SetEntity();
    /*0xf4cfec*/ void SetCurrency();
    /*0xf4d134*/ void SetItem(string customvalue);
    /*0xf4d390*/ void SetDungeonItem();
}

class DragPressEvent : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
{
    /*0x18*/ float m_longpressEventTime;
    /*0x1c*/ float m_dragEventValue;
    /*0x20*/ UnityEngine.Vector2 m_downPosition;
    /*0x28*/ UnityEngine.Vector2 m_prevPosition;
    /*0x30*/ float m_downTime;
    /*0x38*/ System.Action m_downEvent;
    /*0x40*/ System.Action<bool> m_upEvent;
    /*0x48*/ System.Action<UnityEngine.Vector2> m_longpressEvent;
    /*0x50*/ System.Action<UnityEngine.Vector2> m_dragEvent;
    /*0x58*/ UnityEngine.EventSystems.PointerEventData m_pointerEventData;
    /*0x60*/ bool m_isDrag;

    /*0x11f25f0*/ DragPressEvent();
    /*0x11f1fcc*/ UnityEngine.EventSystems.PointerEventData GetPointerEventData();
    /*0x11f1fd4*/ void SetDragEventValue(float value);
    /*0x11f1fdc*/ void SetLongPressEventTime(float time);
    /*0x11f1fe4*/ void AddDownEvent(System.Action callBack);
    /*0x11f2060*/ void RemoveDownEvent(System.Action callBack);
    /*0x11f20dc*/ void AddUpEvent(System.Action<bool> callBack);
    /*0x11f2158*/ void RemoveUpEvent(System.Action<bool> callBack);
    /*0x11f21d4*/ void AddLongPressEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f2250*/ void RemoveLongPressEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f22cc*/ void AddDragEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f2348*/ void RemoveDragEvent(System.Action<UnityEngine.Vector2> callBack);
    /*0x11f23c4*/ void ClearEvent();
    /*0x11f23cc*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f2428*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f24c4*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
}

class FormationCharacterEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ UnityEngine.GameObject m_StatusParent;
    /*0x28*/ AtlasImage m_FactionIcon;
    /*0x30*/ AtlasImage m_Foothold;
    /*0x38*/ LocalizeString m_LevelText;
    /*0x40*/ ShaderChanger m_shaderChanger;
    /*0x48*/ AtlasImage[] m_arrStar;
    /*0x50*/ PTShare.Define.SHero m_HeroInfo;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x60*/ long m_lPlayerID;

    /*0x11dc830*/ FormationCharacterEntity();
    /*0x11dc19c*/ void InitializeEntity(long _playerid, PTShare.Define.SHero _hero);
    /*0x11dc558*/ void InitializeEntity(int _slotIndex, TableData.TableData_Stagebattle _battle);
    /*0x11dc2c8*/ void SetStatusView(int _factionID, int _grade, int _level);
    /*0x11dc64c*/ void SetActiveViewStatus(bool _enable);
    /*0x11dc664*/ void SetDead();
    /*0x11dc738*/ void DoFade();
    /*0x11dc7c4*/ System.Collections.IEnumerator CoDissolve();
    /*0x11dc214*/ void Clear();

    class <CoDissolve>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FormationCharacterEntity <>4__this;
        /*0x28*/ float <speed>5__2;
        /*0x2c*/ float <t>5__3;

        /*0x10a032c*/ <CoDissolve>d__16(int <>1__state);
        /*0x10a0358*/ void System.IDisposable.Dispose();
        /*0x10a035c*/ bool MoveNext();
        /*0x10a059c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a05a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10a05e4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GenericRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_guildIcon;
    /*0x20*/ UnityEngine.GameObject m_friendIcon;
    /*0x28*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x30*/ AtlasImage m_rankIcon;
    /*0x38*/ LocalizeString m_rankText;
    /*0x40*/ LocalizeString m_nameText;
    /*0x48*/ LocalizeString m_totalCP;
    /*0x50*/ UnityEngine.GameObject m_rankPointParent;
    /*0x58*/ LocalizeString m_rankPoint;
    /*0x60*/ UnityEngine.GameObject m_subRankPointParent;
    /*0x68*/ LocalizeString m_subRankPoint;

    /*0xed355c*/ GenericRankEntity();
    /*0xed2fb4*/ void InitEntity(int rank, PTShare.Define.SMiniPlayer sMiniPlayer, int cp);
    /*0xed3380*/ void InitEntity(int rank, PTShare.Define.SMiniPlayer sMiniPlayer, int cp, string rankPoint);
    /*0xed3464*/ void InitEntity(int rank, PTShare.Define.SMiniPlayer sMiniPlayer, int cp, string rankPoint, string subRankPoint);
    /*0xed31cc*/ void SetRank(int _rank);
}

class ItemBoxBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemBoxCache m_ItemRewardCache;
    /*0x20*/ DG.Tweening.Sequence m_Sequence;
    /*0x28*/ ItemType m_eItemType;

    /*0x15790e4*/ ItemBoxBase();
    /*0x15752d8*/ UnityEngine.CanvasGroup GetCanvasGroup();
    /*0x15752f4*/ void Awake();
    /*0x1575348*/ void SetActiveClear();
    /*0x15756cc*/ void QuickInitReward(Rewards _rewards);
    /*0x1576668*/ void QuickInitItem(TableData.TableData_Item _item);
    /*0x1575924*/ void QuickInitItem(TableData.TableData_Item _item, long _amount);
    /*0x15767a8*/ void ConsolidateInitItem(TableData.TableData_Item _item, long _amount);
    /*0x1575928*/ void QuickInitHero(TableData.TableData_Unitbase _base, int _defaultGrade);
    /*0x1576a8c*/ void QuickInitCurrency(PTShare.Define.Currency _currency);
    /*0x1575920*/ void QuickInitCurrency(PTShare.Define.Currency _currency, long _amount);
    /*0x1576ac4*/ void ConsolidateInitCurrency(PTShare.Define.Currency _currency, long _amount);
    /*0x1575dac*/ void QuickInitUserExp(long _amount);
    /*0x1576c70*/ void ConsolidateInitUserExp(long _amount);
    /*0x1575db0*/ void QuickInitVipPoint(long _amount);
    /*0x1576dbc*/ void ConsolidateInitVipPoint(long _amount);
    /*0x1575db4*/ void QuickInitResetPoint(PTShare.Define.ResetPointType _type, long _amount);
    /*0x1575a40*/ void QuickInitEquipment(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, long _amount, int _factionid);
    /*0x1576f18*/ void QuickInitSignature(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user);
    /*0x1575ca4*/ void QuickInitArtifact(TableData.TableData_Equipment _table, PTShare.Define.SArtifact _user);
    /*0x15760ac*/ void QuickInitSkin(TableData.TableData_Skinbasic _table, PTShare.Define.SSkin _skin);
    /*0x1575f30*/ void QuickInitDungeonItem(int _id, long _amount);
    /*0x15770b8*/ void QuickInitEquipmentGradeIcon(int _grade);
    /*0x1576130*/ void QuickInitFrameDecorate(TableData.TableData_Profileskin data, int expire);
    /*0x15772a0*/ void QuickInitFurniture(PTShare.Define.SHousingObj data);
    /*0x1576484*/ void QuickInitFurniture(TableData.TableData_Furniture data, long amount, int lv);
    /*0x15756bc*/ void SetButtonEvent(System.Action _callback);
    /*0x1576c60*/ void AddButtonEvent(System.Action _callback);
    /*0x15774a4*/ void ClearButtonEvent();
    /*0x1576a4c*/ void SetCharacter(string _skinName);
    /*0x157554c*/ void SetActiveCharacter(bool _enable);
    /*0x15775d4*/ void SetEnableBackgroundButton(bool _enable);
    /*0x1577098*/ void SetBackgroundSkin();
    /*0x1577064*/ void SetBackgroundArtifact();
    /*0x1577054*/ void SetBackgroundSignature(int _lv);
    /*0x1577024*/ void SetBackgroundEquip(int _grade);
    /*0x1576a6c*/ void SetBackgroundHero(int _grade);
    /*0x1576a38*/ void SetDefaultBackground(bool _another);
    /*0x1577084*/ void SetFrameSkin(bool _isSkin);
    /*0x1577074*/ void SetFrameArtifact();
    /*0x1577044*/ void SetFrameSignature(int _lv);
    /*0x1577014*/ void SetFrameEquip(int _grade);
    /*0x1576a5c*/ void SetFrameHero(int _grade);
    /*0x1576a28*/ void SetDefaultFrame();
    /*0x1576a18*/ void SetBackgroundItem(int _grade);
    /*0x1576a08*/ void SetFrameItem(int _grade);
    /*0x15755a8*/ void SetActivePropertyEffect(bool _enable);
    /*0x1575588*/ void SetActiveProperty(bool _enable);
    /*0x15769d8*/ void SetProperty(int _type);
    /*0x1575560*/ void SetActiveIcon(bool _enable);
    /*0x1576c50*/ void SetCurrencyIcon(PTShare.Define.Currency _type);
    /*0x1576dac*/ void SetUserExpIcon();
    /*0x1576ef8*/ void SetVipPointIcon();
    /*0x1576f08*/ void SetResetPointIcon(PTShare.Define.ResetPointType _type);
    /*0x15770a8*/ void SetDungeonIcon(int _id);
    /*0x15755c8*/ void SetActiveGrade(bool _enable);
    /*0x15755e8*/ void SetActiveHeroGrade(bool _enable);
    /*0x1577034*/ void SetGradeAmount(int _amount);
    /*0x1576a7c*/ void SetHeroGradeAmount(int _amount);
    /*0x1577218*/ void SetIconRandom(PTShare.Define.Wealth wealth);
    /*0x15769e8*/ void SetIconSprite(AtlasType _type, string _name);
    /*0x157892c*/ void SetActiveFrame(bool _enable);
    /*0x1575574*/ void SetActiveGlow(bool _enable);
    /*0x1575688*/ void SetAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size, bool useMeasure);
    /*0x1578b18*/ void SetActiveAdvance(bool _enable);
    /*0x1578b50*/ void SetAdvanceAmount(int _grade);
    /*0x1575608*/ void SetActiveDeco(bool _enable);
    /*0x1575628*/ void SetActiveTimer(bool _enable);
    /*0x1575648*/ void SetActiveItemTypeIcon(bool _enable);
    /*0x15769f8*/ void SetTimer(int _hour);
    /*0x1578d14*/ void SetItemTypeIcon(AtlasType _type, string _name);
    /*0x157553c*/ void SetAlpha(float _fAlpha);
    /*0x1575668*/ void SetOriginalEpicIcon(bool _enable);
    /*0x157569c*/ void SetCheckIcon(bool _enable);
    /*0x1578e70*/ void ShowTooltip(string titleKey, string descKey);
    /*0x1578fac*/ void PlayingZoomAnimation(float _fSpeed, float _fZoomScale);
    /*0x1579080*/ void PlayingGradeStarAnimation(int _amount, float _fDelay);
    /*0x1578ffc*/ System.Collections.IEnumerator CoZoomAnimation(float _fSpeed, float _fZoomScale);
    void OnClick();
    /*0x15790ec*/ void <ConsolidateInitUserExp>b__15_0();
    /*0x157923c*/ void <ConsolidateInitVipPoint>b__17_0();
    /*0x157938c*/ void <QuickInitResetPoint>b__18_0();
    /*0x15794dc*/ void <QuickInitResetPoint>b__18_1();
    /*0x157962c*/ void <QuickInitDungeonItem>b__23_0();
    /*0x157977c*/ void <QuickInitDungeonItem>b__23_1();
    /*0x15798cc*/ void <CoZoomAnimation>b__79_0();

    class <>c__DisplayClass13_0
    {
        /*0x10*/ ItemBoxBase <>4__this;
        /*0x18*/ PTShare.Define.Currency _currency;

        /*0xe4f740*/ <>c__DisplayClass13_0();
        /*0xe4f748*/ void <ConsolidateInitCurrency>b__0();
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ int _grade;
        /*0x18*/ ItemBoxBase <>4__this;

        /*0xe4f8d0*/ <>c__DisplayClass24_0();
        /*0xe4f8d8*/ void <QuickInitEquipmentGradeIcon>b__0();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ ItemBoxBase <>4__this;
        /*0x18*/ string result;
        /*0x20*/ TableData.TableData_Profileskin data;

        /*0xe4fc20*/ <>c__DisplayClass25_0();
        /*0xe4fc28*/ void <QuickInitFrameDecorate>b__0();
    }

    class <CoZoomAnimation>d__79 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fSpeed;
        /*0x28*/ ItemBoxBase <>4__this;
        /*0x30*/ float _fZoomScale;
        /*0x34*/ float <_fTime>5__2;

        /*0xe4fd7c*/ <CoZoomAnimation>d__79(int <>1__state);
        /*0xe4fda8*/ void System.IDisposable.Dispose();
        /*0xe4fdac*/ bool MoveNext();
        /*0xe4ffec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4fff4*/ void System.Collections.IEnumerator.Reset();
        /*0xe50034*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ItemBoxCache : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_FactionIcon;
    /*0x30*/ AtlasImage m_FactionEffect;
    /*0x38*/ AtlasImage m_Glow;
    /*0x40*/ AtlasImage m_Character;
    /*0x48*/ AtlasImage m_OriginalEpicIcon;
    /*0x50*/ AtlasImage[] m_arrHeroStar;
    /*0x58*/ AtlasImage m_Icon;
    /*0x60*/ AtlasImage m_ItemTypeIcon;
    /*0x68*/ AtlasImage m_checkIcon;
    /*0x70*/ AtlasImage[] m_arrGradeStar;
    /*0x78*/ UnityEngine.GameObject m_FactionParent;
    /*0x80*/ UnityEngine.GameObject m_EquipGradeParent;
    /*0x88*/ UnityEngine.GameObject m_AdvanceGradeParent;
    /*0x90*/ UnityEngine.GameObject m_DecoEffect;
    /*0x98*/ UnityEngine.GameObject m_TimerParent;
    /*0xa0*/ UnityEngine.GameObject m_HeroGradeParent;
    /*0xa8*/ LocalizeString m_Amount;
    /*0xb0*/ LocalizeString m_Advance;
    /*0xb8*/ LocalizeString m_TimerText;
    /*0xc0*/ CustomButton m_BackgroundButton;
    /*0xc8*/ TooltipTargetUI m_TooltipTargetUI;
    /*0xd0*/ TooltipData_TitleDesc m_TooltipTitleDesc;
    /*0xd8*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0xe0*/ bool m_ShowTextAmountZero;
    /*0xe8*/ UnityEngine.RectTransform rectTransform;

    /*0x1579a10*/ ItemBoxCache();
    /*0x15798dc*/ UnityEngine.RectTransform get_RectTransform();
    /*0x157997c*/ UnityEngine.CanvasGroup GetCanvasGroup();
    /*0x15775e8*/ void SetButtonEnabled(bool _enable);
    /*0x15772e4*/ void SetButtonEvent(System.Action _callback);
    /*0x15773cc*/ void AddButtonEvent(System.Action _callback);
    /*0x15774c0*/ void ClearButtonEvent();
    /*0x157767c*/ void SetAtlasBackgroundSkin();
    /*0x1577748*/ void SetAtlasBackgroundArtifact();
    /*0x1577814*/ void SetAtlasBackgroundSignature(int _lv);
    /*0x1577950*/ void SetAtlasBackgroundEquip(int _grade);
    /*0x1577a2c*/ void SetAtlasBackgroundHero(int _grade);
    /*0x15781e4*/ void SetAtlasBackgroundItem(int _grade);
    /*0x1577b08*/ void SetDefaultBackground(bool _another);
    /*0x1578940*/ void SetActiveFrame(bool _enable);
    /*0x1577c30*/ void SetAtlasFrameSkin(bool _isSkin);
    /*0x1577d58*/ void SetAtlasFrameArtifact();
    /*0x1577e24*/ void SetAtlasFrameSignature(int _lv);
    /*0x1577f60*/ void SetAtlasFrameEquip(int _grade);
    /*0x157803c*/ void SetAtlasFrameHero(int _grade);
    /*0x15782c0*/ void SetAtlasFrameItem(int _grade);
    /*0x1578118*/ void SetDefaultFrame();
    /*0x1578458*/ void SetActiveIcon(bool _enable);
    /*0x15784a0*/ void SetCurrencyIcon(PTShare.Define.Currency _type);
    /*0x1578530*/ void SetUserExpIcon();
    /*0x15785ac*/ void SetVipPointIcon();
    /*0x1578628*/ void SetResetPointIcon(PTShare.Define.ResetPointType _type);
    /*0x15786b8*/ void SetDungeonItemIcon(int _id);
    /*0x1578894*/ void SetAtlasIcon(AtlasType _type, string _name);
    /*0x15783cc*/ void SetPropertyIcon(int _type);
    /*0x157839c*/ void SetActivePropertyEffect(bool _enable);
    /*0x1578748*/ void SetActiveGrade(bool _enable);
    /*0x1578760*/ void SetActiveHeroGrade(bool _enable);
    /*0x1578778*/ void SetGradeAmount(int _amount);
    /*0x1578808*/ void SetHeroGradeAmount(int _amount);
    /*0x15783b4*/ void SetActiveProperty(bool _enable);
    /*0x1578988*/ void SetActiveGlow(bool _enable);
    /*0x157758c*/ void SetActiveCharacter(bool _enable);
    /*0x15774d4*/ void InitalizeCharacter(string _skinName);
    /*0x15789d0*/ void SetLocalizeAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size, bool useMeasure);
    /*0x1578b38*/ void SetActiveAdvance(bool _enable);
    /*0x1578b60*/ void SetAdvanceAmount(int _grade);
    /*0x1578be8*/ void SetActiveDeco(bool _enable);
    /*0x1578c00*/ void SetActiveTimer(bool _enable);
    /*0x1578c18*/ void SetActiveItemTypeIcon(bool _enable);
    /*0x1578e58*/ void SetCheckIcon(bool _enable);
    /*0x1578d24*/ void SetItemTypeIcon(AtlasType _type, string _name);
    /*0x1578c30*/ void SetTimer(int _hour);
    /*0x1578d9c*/ void SetAlpha(float _fAlpha);
    /*0x1578e40*/ void SetOriginalEpicIcon(bool _enable);
    /*0x15790b8*/ void PlayingGradeStarAnimation(int _amount, float _delay);
    /*0x1579984*/ System.Collections.IEnumerator CoStarScaler(int _amount, float _delay);

    class <>c__DisplayClass31_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe5003c*/ <>c__DisplayClass31_0();
        /*0xe50044*/ void <SetButtonEvent>b__0();
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe50058*/ <>c__DisplayClass32_0();
        /*0xe50060*/ void <AddButtonEvent>b__0();
    }

    class <CoStarScaler>d__78 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ItemBoxCache <>4__this;
        /*0x28*/ int _amount;
        /*0x2c*/ float _delay;
        /*0x30*/ UnityEngine.Vector3[] <originalScale>5__2;
        /*0x38*/ float <t>5__3;

        /*0xe50074*/ <CoStarScaler>d__78(int <>1__state);
        /*0xe500a0*/ void System.IDisposable.Dispose();
        /*0xe500a4*/ bool MoveNext();
        /*0xe504c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe504c8*/ void System.Collections.IEnumerator.Reset();
        /*0xe50508*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ItemInfoSlot : ItemBoxBase
{
    /*0x30*/ UnityEngine.GameObject m_RedDot;
    /*0x38*/ int m_nItemIndex;
    /*0x3c*/ int m_nEquipIndex;
    /*0x40*/ int m_nArtifactIndex;
    /*0x44*/ int m_nProfileSkinIndex;
    /*0x48*/ int m_nFurnitureIndex;
    /*0x4c*/ int m_nParentHeroFaction;
    /*0x50*/ int m_nFurnitureLv;
    /*0x58*/ PTShare.Define.SEquip m_UserEquipInfo;
    /*0x60*/ PTShare.Define.SArtifact m_UserArtifactInfo;
    /*0x68*/ EquipSetItem m_EquipSetInfo;
    /*0x80*/ TableData.TableData_Equipment m_TableEquipInfo;
    /*0x88*/ TableData.TableData_Artifact m_TableArtifactInfo;
    /*0x90*/ TableData.TableData_Profileskin m_TableProfileSkin;
    /*0x98*/ PTShare.Define.SHousingObj m_housingObj;
    /*0xa0*/ HousingObjSet m_housingObjSet;
    /*0xa8*/ TableData.TableData_Furniture m_TableFurniture;
    /*0xb0*/ TableData.TableData_Item m_ItemInfo;

    /*0x157ee94*/ ItemInfoSlot();
    /*0x157de20*/ void InitItemBox(PTShare.Define.SEquip _equip, int _heroFactionId);
    /*0x157dfd0*/ void InitItemBox(TableData.TableData_Equipment _equip);
    /*0x157e07c*/ void InitItemBox(TableData.TableData_Artifact _artifact);
    /*0x157e124*/ void InitItemBox(PTShare.Define.SArtifact _artifact);
    /*0x157e19c*/ void InitItemBox(EquipSetItem _equip, int _heroFactionId);
    /*0x157e228*/ void InitItemBox(PTShare.Define.SItem _item);
    /*0x1574a34*/ void InitItemBox(TableData.TableData_Item _item);
    /*0x157e2f8*/ void InitItemBox(TableData.TableData_Profileskin _data, int _expire);
    /*0x157e338*/ void InitItemBox(TableData.TableData_Furniture _data, int amount, int lv);
    /*0x157e380*/ void InitItemBox(PTShare.Define.SHousingObj _data, int amount);
    /*0x157e3f8*/ void InitItemBox(HousingObjSet _data);
    /*0x157de90*/ void ClearData();
    /*0x157de9c*/ void RefreshRedDot();
    /*0x157e498*/ void OnClick();
    /*0x157e50c*/ void OnClickItem();
    /*0x157e778*/ void OnClickEquip();
    /*0x157e808*/ void OnClickArtifact();
    /*0x157e894*/ void OnClickFurniture();
}

class ItemSelectSlot : ItemBoxBase
{
    static /*0x0*/ System.Action<int, int> OnSelectItem;
    /*0x2c*/ ItemSelectBoxType m_eType;
    /*0x30*/ int m_nArrIndex;
    /*0x34*/ int m_nUnitIndex;
    /*0x38*/ int m_nEquipIndex;
    /*0x3c*/ int m_nItemIndex;
    /*0x40*/ TableData.TableData_Unitbase m_UnitInfo;
    /*0x48*/ TableData.TableData_Equipment m_EquipInfo;
    /*0x50*/ TableData.TableData_Item m_ItemInfo;

    static /*0x1584b04*/ ItemSelectSlot();
    static /*0x158459c*/ void add_OnSelectItem(System.Action<int, int> value);
    static /*0x1584690*/ void remove_OnSelectItem(System.Action<int, int> value);
    /*0x1584afc*/ ItemSelectSlot();
    /*0x1584408*/ void InitItemBox(ItemSelectBoxType _type, int _arrIndex, int _itemIndex);
    /*0x15847bc*/ void InitItem();
    /*0x15847e8*/ void InitEquip();
    /*0x1584790*/ void InitCharacter();
    /*0x1584784*/ void SetIndex(int _unit, int _item, int _equip);
    /*0x1584868*/ void OnClick();
}

class ItemRewardBox : ItemBoxBase
{
    /*0x2c*/ ItemRewardBoxType m_eRewardType;
    /*0x30*/ TableData.TableData_Item m_ItemInfo;
    /*0x38*/ TableData.TableData_Equipment m_EquipTableInfo;
    /*0x40*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x48*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x50*/ TableData.TableData_Skinbasic m_SkinInfo;
    /*0x58*/ TableData.TableData_Equipment m_ArtifactTableInfo;
    /*0x60*/ PTShare.Define.SArtifact m_ArtifactInfo;
    /*0x68*/ PTShare.Define.SFrame m_FrameInfo;
    /*0x70*/ TableData.TableData_Furniture m_HousingInfo;
    /*0x78*/ int m_unitGrade;

    /*0x1582c10*/ ItemRewardBox();
    /*0x1582334*/ void InitItemBox(ItemReward _reward);
    /*0x1582904*/ void OnClick();
    /*0x1582504*/ void LoadItem(PTShare.Define.SItem _item);
    /*0x1582840*/ void LoadAsset(long _amount);
    /*0x15825c4*/ void LoadEquip(EquipSetItem _equip);
    /*0x1582478*/ void LoadHero(PTShare.Define.SLittleHero _hero, long _amount);
    /*0x1582618*/ void LoadSkin(PTShare.Define.SSkin _skin);
    /*0x1582654*/ void LoadArtifact(PTShare.Define.SArtifact _artifact);
    /*0x1582698*/ void LoadFrame(PTShare.Define.SFrame _frame);
    /*0x15827fc*/ void LoadHousingObj(PTShare.Define.SMiniHousingObj _housing);
}

class ItemTableRewardSlot : ItemBoxBase
{
    /*0x30*/ Rewards m_RewardInfo;

    /*0x1586890*/ ItemTableRewardSlot();
    /*0x157b534*/ void InitializeBox(Rewards _reward);
    /*0x1585dd0*/ void InitializeCurrency();
    /*0x1585ed4*/ void InitializeUserExp();
    /*0x1585edc*/ void InitializeVipPoint();
    /*0x1585ee4*/ void InitializeResetPoint();
    /*0x1585ddc*/ void InitializeItem();
    /*0x1585de4*/ void InitializeHero();
    /*0x1585e5c*/ void InitializeEquip();
    /*0x1585ef0*/ void InitializeArtifact();
    /*0x1585f60*/ void InitializeSkin();
    /*0x1585fe0*/ void InitializeDungeonItem();
    /*0x1585fec*/ void InitializeFrame();
    /*0x1586008*/ void InitializeFurniture();
    /*0x1586014*/ void OnClick();
    /*0x1586408*/ void OnClickSound();
    /*0x15864a4*/ void SetAmountFontSize(int _size);
    /*0x1586558*/ void SetLocalizeMaterialAmount(Rewards _rewards, UnityEngine.TextAnchor _anchor, int _size);
}

class UpgradeEquipSlot : ItemBoxBase
{
    static /*0x0*/ System.Action<int, int, int> OnSelectItemEvent;
    /*0x30*/ LocalizeString m_MaterialAmount;
    /*0x38*/ UnityEngine.GameObject m_DecreaseButton;
    /*0x40*/ UpgradeEquipSlot.SLOT_TYPE m_slotType;
    /*0x48*/ PTShare.Define.SEquip m_EquipUserInfo;
    /*0x50*/ TableData.TableData_Equipment m_EquipTableInfo;
    /*0x58*/ PTShare.Define.SItem m_ItemUserInfo;
    /*0x60*/ TableData.TableData_Item m_ItemTableInfo;
    /*0x68*/ PTShare.Define.SHousingObj m_furnitureInfo;
    /*0x70*/ TableData.TableData_Furniture m_furnitureTableInfo;
    /*0x78*/ int m_nIndex;
    /*0x7c*/ int m_nAmount;
    /*0x80*/ int m_nMaxAmount;

    static /*0x10c6b8c*/ UpgradeEquipSlot();
    static /*0x10c63b8*/ void add_OnSelectItemEvent(System.Action<int, int, int> value);
    static /*0x10c64ac*/ void remove_OnSelectItemEvent(System.Action<int, int, int> value);
    /*0x10c6b84*/ UpgradeEquipSlot();
    /*0x10c65a0*/ void InitializeSlot(int _index, PTShare.Define.SEquip _user, TableData.TableData_Equipment _table, int _amount, int _maxAmount);
    /*0x10c66fc*/ void InitializeSlot(int _index, PTShare.Define.SItem _item, TableData.TableData_Item _table, int _amount, int _maxAmount);
    /*0x10c6718*/ void InitializeSlot(int _index, PTShare.Define.SHousingObj _furniture, TableData.TableData_Furniture _table, int _amount, int _maxAmount);
    /*0x10c65bc*/ void CommonInitialize(UpgradeEquipSlot.SLOT_TYPE _slotType, int _nIndex, int _nAmount, int _nMaxAmount);
    /*0x10c6748*/ void RefreshAmount(int _addAmount);
    /*0x10c6734*/ void SetMaterialAmount(string _text);
    /*0x10c6830*/ int GetExp();
    /*0x10c6918*/ void OnClick();
    /*0x10c6a78*/ void DecreaseClick();

    enum SLOT_TYPE
    {
        ITEM = 0,
        EQUIP = 1,
        FURNITURE = 2,
    }
}

class RandomItemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_itemSlot;
    /*0x20*/ LocalizeString m_percent;

    /*0x11ba220*/ RandomItemSlot();
    /*0x11ba130*/ void InitSlot(Rewards reward, float percent);
}

class SkinInfoSlot : ItemBoxBase
{
    /*0x30*/ UnityEngine.GameObject m_UnUseText;
    /*0x38*/ AtlasImage m_UnUseShadowSkin;
    /*0x40*/ TableData.TableData_Unitbase unitInfo;
    /*0x48*/ System.Action<int> onClickCallback;

    /*0x1450a14*/ SkinInfoSlot();
    /*0x145084c*/ void InitSkinSlot(TableData.TableData_Unitbase unit, System.Action<int> callback);
    /*0x1450988*/ void SetActiveSkinShadow(bool enable);
    /*0x14509a8*/ void OnClick();
}

struct ItemReward
{
    /*0x10*/ ItemRewardBoxType RewardType;
    /*0x18*/ PTShare.Define.SItem ItemInfo;
    /*0x20*/ EquipSetItem EquipSetInfo;
    /*0x38*/ PTShare.Define.SLittleHero HeroInfo;
    /*0x40*/ PTShare.Define.SSkin SkinInfo;
    /*0x48*/ PTShare.Define.SArtifact Artifact;
    /*0x50*/ PTShare.Define.SFrame Frame;
    /*0x58*/ PTShare.Define.SMiniHousingObj Housing;
    /*0x60*/ long Amount;

    /*0xaa544c*/ ItemReward(ItemRewardBoxType _rewardType, long _amount);
    /*0xaa5454*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SItem _item);
    /*0xaa545c*/ ItemReward(ItemRewardBoxType _rewardType, EquipSetItem _equip);
    /*0xaa5490*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SLittleHero _hero);
    /*0xaa5498*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SSkin _skin);
    /*0xaa54a0*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SArtifact _artifact);
    /*0xaa54a8*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SFrame _frame);
    /*0xaa54b0*/ ItemReward(ItemRewardBoxType _rewardType, PTShare.Define.SMiniHousingObj _housingObj);
}

class ItemRewardGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ bool m_bDeactiveClick;
    /*0x20*/ ScrollContent_ItemReward m_cScrollContentItemReward;
    /*0x28*/ bool m_bFadeActive;
    /*0x2c*/ int m_nViewLimit;
    /*0x30*/ PTShare.Define.SProperty m_PropertyInfo;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> m_tHeroRewards;
    /*0x40*/ System.Collections.Generic.List<ItemReward> m_liRewardBoxList;
    /*0x48*/ ItemRewardBoxType[] m_arrIgnoreType;
    /*0x50*/ UnityEngine.RectTransform m_ScrollRectTransform;

    /*0x1584274*/ ItemRewardGroup();
    /*0x1582c18*/ int get_Count();
    /*0x1582c38*/ void OnEnable();
    /*0x1582cd8*/ void InitRewardGroup(PTShare.Define.SProperty _property, bool _onFade, int _viewLimit, ItemRewardBoxType[] _ignoreType);
    /*0x1583714*/ void InitRewardGroup_DungeonKey(PTShare.Define.SProperty _property, bool _onFade, int _viewLimit, ItemRewardBoxType[] _ignoreType);
    /*0x1583838*/ void SetScrollLimit();
    /*0x1583690*/ void InitializeScroll();
    /*0x15839b0*/ void HandlerItemReward(int _index, ItemRewardBox _instance);
    /*0x1582da0*/ void SetSAsset();
    /*0x15830a0*/ void SetSItem();
    /*0x1583774*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, long _amount);
    /*0x1583e98*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SItem _item);
    /*0x1583dc4*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, EquipSetItem _equip);
    /*0x1583b50*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SLittleHero _hero);
    /*0x1583a94*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SSkin _skin);
    /*0x1583f54*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SArtifact _artifact);
    /*0x1584010*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SFrame _frame);
    /*0x15840cc*/ void AddItemRewardBox(ItemRewardBoxType _rewardType, PTShare.Define.SMiniHousingObj _housingObj);
    /*0x1582d28*/ void RemoveAll();
    /*0x1584230*/ bool IsIgnoreType(ItemRewardBoxType _type);
    /*0x1584188*/ bool IsPossiableCondition(ItemRewardBoxType _type);

    class <>c
    {
        static /*0x0*/ ItemRewardGroup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SLittleHero> <>9__18_0;
        static /*0x10*/ System.Comparison<EquipSetItem> <>9__18_1;
        static /*0x18*/ System.Comparison<PTShare.Define.SItem> <>9__18_2;

        static /*0xe50b4c*/ <>c();
        /*0xe50bac*/ <>c();
        /*0xe50bb4*/ int <SetSItem>b__18_0(PTShare.Define.SLittleHero a, PTShare.Define.SLittleHero b);
        /*0xe50bdc*/ int <SetSItem>b__18_1(EquipSetItem a, EquipSetItem b);
        /*0xe50c0c*/ int <SetSItem>b__18_2(PTShare.Define.SItem a, PTShare.Define.SItem b);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ PTShare.Define.SLittleHero _hero;
        /*0x18*/ ItemRewardGroup <>4__this;

        /*0xe50c64*/ <>c__DisplayClass22_0();
        /*0xe50c6c*/ bool <AddItemRewardBox>b__0(ItemReward x);
    }
}

class LetterBox : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform left;
    /*0x20*/ UnityEngine.RectTransform right;
    /*0x28*/ UnityEngine.RectTransform top;
    /*0x30*/ UnityEngine.RectTransform bottom;
    /*0x38*/ float defailtWiden;

    /*0xfa8ea0*/ LetterBox();
    /*0xfa8c80*/ void Start();
}

enum PlayerProfileType
{
    NONE = 0,
    GENERIC = 1,
    HIDELEVEL = 2,
    HIDELEVELSHOWTIER = 3,
    HIDESEX = 4,
    HIDELEVELWITHSEX = 5,
    HIDELEVELWITHSEXSHOWTIER = 6,
    MONSTER = 7,
    USETOUCHEVENT_MONSTER = 8,
    End = 9,
}

struct ProfileSlotDetail
{
    /*0x10*/ int tableid;
    /*0x14*/ int frameid;
    /*0x18*/ int backgroundid;

    static /*0x100ecf0*/ ProfileSlotDetail GetAccountDetail();
    /*0xa89440*/ ProfileSlotDetail(string _ids);
    /*0xa89448*/ string GetProfileIds();
}

struct PlayerProfileInfo
{
    /*0x10*/ PlayerProfileType type;
    /*0x18*/ long playerid;
    /*0x20*/ ProfileSlotDetail detail;
    /*0x2c*/ int level;
    /*0x30*/ int gender;

    /*0xa8a904*/ PlayerProfileInfo(PlayerProfileType type);
    /*0xa8a90c*/ PlayerProfileInfo(PlayerProfileType type, long playerid, string detailids, int level, int gender);
    /*0xa8a974*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SBoardCampaignRanker _campaignRank);
    /*0xa8a97c*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SBoardTowerRanker _towerRank);
    /*0xa8a984*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SBoardFiveRanker _fiveRank);
    /*0xa8a98c*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SPlayer _player);
    /*0xa8a994*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SSearchPlayer _player);
    /*0xa8a99c*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.STowerUser _tower);
    /*0xa8a9a4*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SFriend _friend);
    /*0xa8a9ac*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SMiniPlayer _miniPlayer);
    /*0xa8a9b4*/ PlayerProfileInfo(int _nTableID, bool _useTouchEvent);
    /*0xa8a9c0*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SCampaignRecord _camapignRecord);
    /*0xa8a9c8*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.STowerRecord _towerRecord);
    /*0xa8a9d0*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaTarget _target);
    /*0xa8a9d8*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaTarget _target, int _nTier);
    /*0xa8a9e0*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaHistory _target);
    /*0xa8a9e8*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SArenaHistory _target, int _nTier);
    /*0xa8a9f0*/ PlayerProfileInfo(PlayerProfileType type, ArenaTargetUser _target);
    /*0xa8aa1c*/ PlayerProfileInfo(PlayerProfileType type, ArenaTargetUser _target, int _nTier);
    /*0xa8aa48*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SAreaPlayer _target);
    /*0xa8aa50*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SGuildBossHistory _target);
    /*0xa8aa58*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SGuildMember _target);
    /*0xa8aa60*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SGuildWarPlayer _target);
    /*0xa8aa68*/ PlayerProfileInfo(PlayerProfileType type, PTShare.Define.SWorldArenaRanker _target);
}

class PlayerProfileSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ProfileIcon;
    /*0x20*/ AtlasImage m_ProfileFrame;
    /*0x28*/ AtlasImage m_ProfileBackground;
    /*0x30*/ AtlasImage m_ProfileSex;
    /*0x38*/ AtlasImage m_ProfileTier;
    /*0x40*/ LocalizeString m_PlayerLevel;
    /*0x48*/ UnityEngine.GameObject m_LevelParent;
    /*0x50*/ Coffee.UIEffects.UIShiny m_UIShiny;
    /*0x58*/ PlayerProfileInfo m_ProfileInfo;
    /*0x80*/ TableData.TableData_Unitbase m_Unitbase;
    /*0x88*/ System.Action OnClickEvent;
    /*0x90*/ UnityEngine.RectTransform rectTransform;
    /*0x98*/ bool m_EnableUIShiny;
    /*0x99*/ bool m_Enabled;

    /*0x114a178*/ PlayerProfileSlot();
    /*0x1149890*/ void OnEnable();
    /*0x1149968*/ void OnDisable();
    /*0x1149a10*/ void OnDestroy();
    /*0x1137d68*/ void InitializeSlot(PlayerProfileInfo _info, System.Action _callback, bool _bDisable);
    /*0x1149ef0*/ void DefaultUser();
    /*0x1138854*/ void SetDisable(bool _bDisable);
    /*0x11389c8*/ void SetDetail(ProfileSlotDetail _detail);
    /*0x1149ad4*/ void SetLevel(int _level);
    /*0x1149bd4*/ void SetFrame(int _frameid);
    /*0x1149d2c*/ void SetBackground(int _backgroundid);
    /*0x1149dd4*/ void SetSex(int _gender);
    /*0x1149b14*/ void SetIcon(int _tableid);
    /*0x1149e60*/ void SetTier(int _nTier);
    /*0x1149f70*/ void SetActiveIcon(bool _enable);
    /*0x1149a44*/ void SetActiveLevel(bool _enable);
    /*0x1149a80*/ void SetActiveSex(bool _enable);
    /*0x1149abc*/ void SetActiveTier(bool _enable);
    /*0x1149f88*/ UnityEngine.RectTransform GetRectTransform();
    /*0x11397dc*/ ProfileSlotDetail GetDetail();
    /*0x1149a18*/ bool IsConditionShowLevel();
    /*0x1149a5c*/ bool IsConditionShowSex();
    /*0x1149a98*/ bool IsConcitionShowTier();
    /*0x114a028*/ bool IsConditionChangeEvent();
    /*0x114a0d8*/ bool IsConditionClickEvent();
    /*0x114a0e8*/ void OnClick();
    /*0x114a108*/ void PlayerInfoChangeEvent();
}

class RankRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<ItemTableRewardSlot> m_rewardSlotList;
    /*0x20*/ AtlasImage m_rankIcon;
    /*0x28*/ LocalizeString m_rankText;
    /*0x30*/ UnityEngine.GameObject m_playerGroupFrame;
    /*0x38*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x11bf580*/ RankRewardEntity();
    /*0x11bf02c*/ void InitEntity(int rankValue, ArenaRankType rankType, System.Collections.Generic.List<Rewards> rewardList, bool isPlayerGroup);
    /*0x11bf228*/ void SetRankIcon(int rank);
    /*0x11bf3a4*/ void SetRewardSlot();
}

class RewardExportPopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardExportSlot m_showScrollContent;
    /*0x48*/ ScrollContent_RewardExportSlot m_outputScrollContent;
    /*0x50*/ UnityEngine.UI.InputField m_filter;
    /*0x58*/ LocalizeString m_name;
    /*0x60*/ UnityEngine.GameObject m_outputAddParent;
    /*0x68*/ ItemTableRewardSlot m_outputSlot;
    /*0x70*/ UnityEngine.UI.InputField m_inputField;
    /*0x78*/ int m_currIndex;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x88*/ System.Collections.Generic.List<Rewards> m_outputList;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_showList;

    /*0x11a96dc*/ RewardExportPopup();
    /*0x11a6b00*/ void OnCreate();
    /*0x11a6b04*/ void OnDelete();
    /*0x11a6b08*/ void OnEnter();
    /*0x11a6b0c*/ void OnFinish();
    /*0x11a6b10*/ void OnLeave();
    /*0x11a6b14*/ void OnStart();
    /*0x11a6b18*/ void InitPopup();
    /*0x11a7c68*/ void DrawShowContent();
    /*0x11a6d64*/ void AddShowCurrency();
    /*0x11a6e30*/ void AddShowItem();
    /*0x11a70ac*/ void AddShowHero();
    /*0x11a7290*/ void AddShowEquip();
    /*0x11a750c*/ void AddShowFurniture();
    /*0x11a7780*/ void AddShowSkin();
    /*0x11a79f4*/ void AddShowProfile();
    /*0x11a7ccc*/ void OnClickFilter();
    /*0x11a6c24*/ void BindEvent();
    /*0x11a7e68*/ void RemoveEvent();
    /*0x11a7fa0*/ void HandleShowScrollContent(int index, RewardExportSlot slot);
    /*0x11a8134*/ void HandleOutputScrollContent(int index, RewardExportSlot slot);
    /*0x11a82f8*/ void HandleClickShow(int index);
    /*0x11a874c*/ void HandleClickOutput(int index);
    /*0x11a8918*/ void OnClickOutput();
    /*0x11a8e20*/ void OnClickCancel();
    /*0x11a8e40*/ void OnClickExport();
    /*0x11a9500*/ void OnClickTab(int value);
    /*0x11a978c*/ void <AddShowHero>b__21_1(TableData.TableData_Unitbase f);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;
        /*0x18*/ System.Action<TableData.TableData_Item> <>9__1;

        /*0xf9b210*/ <>c__DisplayClass20_0();
        /*0xf9b218*/ void <AddShowItem>b__1(TableData.TableData_Item f);
    }

    class <>c
    {
        static /*0x0*/ RewardExportPopup.<> <>9;
        static /*0x8*/ System.Comparison<Rewards> <>9__20_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Unitbase> <>9__21_0;
        static /*0x18*/ System.Comparison<Rewards> <>9__22_0;
        static /*0x20*/ System.Comparison<Rewards> <>9__23_1;
        static /*0x28*/ System.Comparison<Rewards> <>9__24_1;
        static /*0x30*/ System.Comparison<Rewards> <>9__25_1;

        static /*0xf9af98*/ <>c();
        /*0xf9aff8*/ <>c();
        /*0xf9b000*/ int <AddShowItem>b__20_0(Rewards lhs, Rewards rhs);
        /*0xf9b048*/ bool <AddShowHero>b__21_0(TableData.TableData_Unitbase x);
        /*0xf9b0f0*/ int <AddShowEquip>b__22_0(Rewards lhs, Rewards rhs);
        /*0xf9b138*/ int <AddShowFurniture>b__23_1(Rewards lhs, Rewards rhs);
        /*0xf9b180*/ int <AddShowSkin>b__24_1(Rewards lhs, Rewards rhs);
        /*0xf9b1c8*/ int <AddShowProfile>b__25_1(Rewards lhs, Rewards rhs);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;
        /*0x18*/ System.Action<TableData.TableData_Equipment> <>9__1;

        /*0xf9b2d8*/ <>c__DisplayClass22_0();
        /*0xf9b2e0*/ void <AddShowEquip>b__1(TableData.TableData_Equipment f);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0xf9b3c8*/ <>c__DisplayClass23_0();
        /*0xf9b3d0*/ void <AddShowFurniture>b__0(TableData.TableData_Furniture f);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0xf9b488*/ <>c__DisplayClass24_0();
        /*0xf9b490*/ void <AddShowSkin>b__0(TableData.TableData_Skinbasic f);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0xf9b568*/ <>c__DisplayClass25_0();
        /*0xf9b570*/ void <AddShowProfile>b__0(TableData.TableData_Profileskin f);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ string name;
        /*0x18*/ RewardExportPopup <>4__this;

        /*0xf9b62c*/ <>c__DisplayClass26_0();
        /*0xf9b634*/ void <OnClickFilter>b__0(Rewards f);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ RewardExportPopup <>4__this;
        /*0x18*/ int index;

        /*0xf9b904*/ <>c__DisplayClass32_0();
        /*0xf9b90c*/ void <HandleClickOutput>b__0(bool confirm);
    }
}

class RewardExportSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_slot;
    /*0x20*/ int m_index;
    /*0x28*/ System.Action<int> m_callback;

    /*0x11a98c0*/ RewardExportSlot();
    /*0x11a82d0*/ void SetAmount(long value);
    /*0x11a80b8*/ void InitSlot(Rewards reward, int index, System.Action<int> callback);
    /*0x11a9860*/ void OnClick();
}

class ScrollContent_RewardExportSlot : ScrollContent<RewardExportSlot>
{
    /*0xe1b44c*/ ScrollContent_RewardExportSlot();
}

class IdleRewardPopup : RewardPopupBase
{
    /*0x60*/ LocalizeString m_cLocalizeTime;
    /*0x68*/ LocalizeString m_cLocalizeGold;
    /*0x70*/ LocalizeString m_cLocalizeCash;
    /*0x78*/ LocalizeString m_cLocalizeExp;
    /*0x80*/ UnityEngine.UI.Button m_RewardButton;
    /*0x88*/ System.TimeSpan clearTime;
    /*0x90*/ int flowClearTimeTick;
    /*0x98*/ System.Collections.IEnumerator OnProcessFlowTime;

    /*0xd210d0*/ IdleRewardPopup();
    /*0xd20a6c*/ void OnCreate();
    /*0xd20a70*/ void OnEnter();
    /*0xd20a74*/ void OnStart();
    /*0xd20a78*/ void OnFinish();
    /*0xd20a7c*/ void OnLeave();
    /*0xd20a80*/ void OnDelete();
    /*0xd20a84*/ void Initialize(System.DateTime _clearTime, PTShare.Define.SProperty _reward, System.Action _exitCallback, ItemRewardBoxType[] _ignoreType);
    /*0xd20c9c*/ void LoadStageIdle();
    /*0xd20c30*/ System.Collections.IEnumerator IE_FlowTime();
    /*0xd20e4c*/ void OnExit();
    /*0xd20ee0*/ void OnClick_SendAccountIdle();
    /*0xd20fd8*/ void OnClick_SendAccountIdlebyFast();
    /*0xd21144*/ void <OnClick_SendAccountIdle>b__18_0(PTShare.Define.SProperty _reward);
    /*0xd21310*/ void <OnClick_SendAccountIdlebyFast>b__19_0(PTShare.Define.SProperty _reward);

    class <IE_FlowTime>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ IdleRewardPopup <>4__this;
        /*0x28*/ int <_maxTimeTick>5__2;

        /*0xe4d5ac*/ <IE_FlowTime>d__16(int <>1__state);
        /*0xe4d5d8*/ void System.IDisposable.Dispose();
        /*0xe4d5dc*/ bool MoveNext();
        /*0xe4d8c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4d8d0*/ void System.Collections.IEnumerator.Reset();
        /*0xe4d910*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ IdleRewardPopup.<> <>9;
        static /*0x8*/ System.Action <>9__18_1;
        static /*0x10*/ System.Action <>9__19_1;

        static /*0xe4d48c*/ <>c();
        /*0xe4d4ec*/ <>c();
        /*0xe4d4f4*/ void <OnClick_SendAccountIdle>b__18_1();
        /*0xe4d550*/ void <OnClick_SendAccountIdlebyFast>b__19_1();
    }
}

class ScrollContent_ItemReward : ScrollContent<ItemRewardBox>
{
    /*0xe1ab64*/ ScrollContent_ItemReward();
}

class ScrollContentArrow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x20*/ UnityEngine.RectTransform m_scrollContent;
    /*0x28*/ UnityEngine.GameObject m_scrollTopArrow;
    /*0x30*/ UnityEngine.GameObject m_scrollBottomArrow;
    /*0x38*/ float m_arrowSpeed;
    /*0x3c*/ bool m_isHorizontal;

    /*0xe1882c*/ ScrollContentArrow();
    /*0xe183c4*/ void OnEnable();
    /*0xe18568*/ void OnDisable();
    /*0xe184d4*/ void ResetScroll();
    /*0xe18408*/ void BindEvent();
    /*0xe1856c*/ void RemoveEvent();
    /*0xe18630*/ void HandleDragScroll(UnityEngine.Vector2 value);
    /*0xe184fc*/ System.Collections.IEnumerator CoScale();

    class <CoScale>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScrollContentArrow <>4__this;
        /*0x28*/ float <t>5__2;
        /*0x2c*/ float <value>5__3;

        /*0xcbd014*/ <CoScale>d__12(int <>1__state);
        /*0xcbd040*/ void System.IDisposable.Dispose();
        /*0xcbd044*/ bool MoveNext();
        /*0xcbd1a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbd1ac*/ void System.Collections.IEnumerator.Reset();
        /*0xcbd1ec*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SeasonTimeText : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_localizeText;
    /*0x20*/ int nTerm;
    /*0x24*/ int nSeason;
    /*0x28*/ System.DateTime dtDefaultTime;
    /*0x30*/ string strNormalKey;
    /*0x38*/ string strSecKey;
    /*0x40*/ System.Collections.IEnumerator ieTime;

    /*0xe21770*/ SeasonTimeText();
    /*0xe21634*/ void OnDisable();
    /*0xe21694*/ void InitializeText(int term, System.DateTime defaultTime, string normalKey, string secKey);
    /*0xe216f4*/ void InitializeText(int season, int term, System.DateTime defaultTime, string normalKey, string secKey);
    /*0xe216a8*/ void StartTimer();
    /*0xe21664*/ void StopCoroutines();
    /*0xe21704*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SeasonTimeText <>4__this;

        /*0xcbdb3c*/ <CoUpdate>d__12(int <>1__state);
        /*0xcbdb68*/ void System.IDisposable.Dispose();
        /*0xcbdb6c*/ bool MoveNext();
        /*0xcbdc98*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbdca0*/ void System.Collections.IEnumerator.Reset();
        /*0xcbdce0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SingleTabData
{
    /*0x10*/ UnityEngine.GameObject go;
    /*0x18*/ string toastMessage;

    /*0x150dc54*/ SingleTabData();
}

class SingleTab : UnityEngine.MonoBehaviour
{
    /*0x18*/ ButtonSound m_onClickSound;
    /*0x20*/ SingleTabData[] m_tabs;
    /*0x28*/ int m_currentIndex;
    /*0x30*/ System.Action<int> m_callBack;

    /*0x150dc44*/ SingleTab();
    /*0x150d9f4*/ void InitTab(int tabIndex, System.Action<int> callBack);
    /*0x150db88*/ void Clear();
    /*0x150da00*/ void UpdateTab(int tabIndex, bool showToast);
    /*0x150db9c*/ void OnClick();
}

class StatusChangeUI : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_ATKParent;
    /*0x20*/ UnityEngine.GameObject m_DEFParent;
    /*0x28*/ UnityEngine.GameObject m_HPParent;
    /*0x30*/ UnityEngine.GameObject m_GroupParent;
    /*0x38*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x40*/ LocalizeString m_ATKTitle;
    /*0x48*/ LocalizeString m_DEFTitle;
    /*0x50*/ LocalizeString m_HPTitle;
    /*0x58*/ LocalizeString m_ATKAmount;
    /*0x60*/ LocalizeString m_DEFAmount;
    /*0x68*/ LocalizeString m_HPAmount;
    /*0x70*/ float m_fOffestY;
    /*0x74*/ float m_fFixedTime;
    /*0x78*/ float m_fHideTime;
    /*0x7c*/ float m_fUpSpeed;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;

    /*0xc9abcc*/ StatusChangeUI();
    /*0xc9a804*/ void OnDisable();
    /*0xc9a834*/ void InitializeUI(Battle.CharacterStat _stat);
    /*0xc9a8f0*/ void SetAmount(LocalizeString targetTitle, LocalizeString targetAmount, float value);
    /*0xc9ab14*/ void StartAnimate();
    /*0xc9ab60*/ System.Collections.IEnumerator CoAnimation();

    class <CoAnimation>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StatusChangeUI <>4__this;
        /*0x28*/ float <_time>5__2;

        /*0xcc32f4*/ <CoAnimation>d__20(int <>1__state);
        /*0xcc3320*/ void System.IDisposable.Dispose();
        /*0xcc3324*/ bool MoveNext();
        /*0xcc3588*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc3590*/ void System.Collections.IEnumerator.Reset();
        /*0xcc35d0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TabButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler
{
    /*0x18*/ int m_tabIndex;
    /*0x20*/ UnityEngine.GameObject[] m_enableObjects;
    /*0x28*/ UnityEngine.GameObject[] m_disableObjects;
    /*0x30*/ TabGroup m_tabGroup;

    /*0xc9e35c*/ TabButton();
    /*0xc9e0b4*/ void SetTabGroup(TabGroup tabGroup);
    /*0xc9e138*/ void OnChange(bool enable);
    /*0xc9e204*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
}

class TabGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ TabButton[] m_tabButtons;
    /*0x20*/ System.Action<int> m_callBacks;

    /*0xc9e54c*/ TabGroup();
    /*0xc9e364*/ void OnEnable();
    /*0xc9e3d0*/ void InitGroup(int index);
    /*0xc9e44c*/ void AddEvent(System.Action<int> changeEvent);
    /*0xc9e4c8*/ void RemoveEvent(System.Action<int> changeEvent);
    /*0xc9e544*/ void ClearEvent();
    /*0xc9e294*/ void OnChange(int index);
}

class TableRewardController : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_StageReward m_ScrollContent;
    /*0x20*/ System.Collections.Generic.List<Rewards> m_liRewards;
    /*0x28*/ UnityEngine.RectTransform m_ScrollRectTransform;

    /*0x1167158*/ TableRewardController();
    /*0x1166690*/ int get_Count();
    /*0x11666b0*/ void OnEnable();
    /*0x11667dc*/ void OnDisable();
    /*0x11668b0*/ void InitTableReward(System.Collections.Generic.List<Rewards> _rewards, bool _combine);
    /*0x1166f24*/ void SetScrollLimit();
    /*0x1166ea0*/ void InitializeScroll();
    /*0x116709c*/ void HandlerScrollContent(int _index, ItemTableRewardSlot _obj);

    class <>c__DisplayClass7_0
    {
        /*0x10*/ Rewards h;

        /*0xcd03cc*/ <>c__DisplayClass7_0();
        /*0xcd03d4*/ bool <InitTableReward>b__2(Rewards x);
    }

    class <>c
    {
        static /*0x0*/ TableRewardController.<> <>9;
        static /*0x8*/ System.Func<Rewards, bool> <>9__7_0;
        static /*0x10*/ System.Predicate<Rewards> <>9__7_1;

        static /*0xcd0344*/ <>c();
        /*0xcd03a4*/ <>c();
        /*0xcd03ac*/ bool <InitTableReward>b__7_0(Rewards x);
        /*0xcd03bc*/ bool <InitTableReward>b__7_1(Rewards x);
    }
}

class TouchEffectWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ bool m_isTouchView;
    static /*0x8*/ System.Action<UnityEngine.Vector3> OnTouchWorldPositionEvent;
    static /*0x10*/ System.Action<UnityEngine.Vector3> OnTouchLocalPositionEvent;
    /*0x18*/ ParticleBase m_cParticle;
    /*0x20*/ UnityEngine.RectTransform m_rectTransform;
    /*0x28*/ UnityEngine.RectTransform m_curTransform;
    /*0x30*/ UnityEngine.Camera m_cCurCam;
    /*0x38*/ UnityEngine.Vector2 m_localCursor;

    static /*0x117e218*/ TouchEffectWindow();
    static /*0x117d7f8*/ void add_OnTouchWorldPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117d8f0*/ void remove_OnTouchWorldPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117d9e8*/ void add_OnTouchLocalPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117dae0*/ void remove_OnTouchLocalPositionEvent(System.Action<UnityEngine.Vector3> value);
    static /*0x117e110*/ void SetTouchView(bool enable);
    /*0x117e1e8*/ TouchEffectWindow();
    /*0x117dbd8*/ void Awake();
    /*0x117dd14*/ void Start();
    /*0x117dda8*/ void OnDestroy();
    /*0x117dea8*/ void Update();
    /*0x117e17c*/ void HandlerTouchEffectView(bool _isValue);
}

class TriggerMissionEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_questName;
    /*0x20*/ LocalizeString m_amountText;
    /*0x28*/ LocalizeString m_buttonText;
    /*0x30*/ UnityEngine.UI.Button m_rewardButton;
    /*0x38*/ UnityEngine.UI.Button m_moveButton;
    /*0x40*/ UnityEngine.UI.Slider m_slider;
    /*0x48*/ System.Collections.Generic.List<ItemTableRewardSlot> m_rewardSlotList;
    /*0x50*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x58*/ LocalizeString m_lockText;
    /*0x60*/ long m_missionCount;
    /*0x68*/ DefineEvent.TriggerData m_triggerData;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x78*/ System.Action m_rewardCallBack;

    /*0x1123504*/ TriggerMissionEntity();
    /*0x11227b0*/ void InitEntity(bool titleIsDesc, string trigger, long score, bool isClear, System.Collections.Generic.List<Rewards> rewards, System.Action rewardCallBack);
    /*0x11230b0*/ void InitEntity(bool titleIsDesc, string trigger, long score, bool isClear, int missionCount, System.Collections.Generic.List<Rewards> rewards, System.Action rewardCallBack);
    /*0x1122f90*/ void SetLockUI();
    /*0x1122b60*/ void SetEnable(bool enable);
    /*0x1122db4*/ void SetRewardList();
    /*0x1123468*/ void SetCanvasGroup(float alpha, bool raycast);
    /*0x11234ac*/ void OnClickMove();
    /*0x11234c8*/ void OnClickReward();
}

class UIGridLineRenderer : UnityEngine.MonoBehaviour
{
    /*0x18*/ int lineCount;
    /*0x1c*/ UnityEngine.Vector2 baseSize;
    /*0x24*/ float dist;
    /*0x28*/ UnityEngine.UI.Extensions.UILineRenderer m_grid;

    /*0x235d7e4*/ UIGridLineRenderer();
    /*0x235d590*/ void UpdateLine();
}

class UISkeletonCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_baseCharacterSkel;
    /*0x20*/ string m_idleAnimName;
    /*0x28*/ bool m_isSlime;
    /*0x30*/ string m_curAnim;
    /*0x38*/ System.Action OnCompleteCallBack;
    /*0x40*/ System.Action OnClickCallBack;

    /*0x2367ed4*/ UISkeletonCharacter();
    /*0x2367ac4*/ bool IsSlime();
    /*0x2367acc*/ void InitCharacter(int index);
    /*0x2367c30*/ void SetAnimation(string anim, bool loop, float timeScale, System.Action onCompleteAnimationCallBack);
    /*0x2367e30*/ void PlayingIdle();
    /*0x2367e8c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x2367ec0*/ void OnClick();
}

class WorldNoticeWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Collections.Generic.Queue<WorldNoticeWindow.WorldNotice> qUserNoticeList;
    static /*0x8*/ System.Collections.Generic.Queue<WorldNoticeWindow.WorldNotice> qAdminNoticeList;
    /*0x18*/ UnityEngine.GameObject m_Parent;
    /*0x20*/ UnityEngine.RectTransform m_Mask;
    /*0x28*/ LocalizeString m_Desc;
    /*0x30*/ UnityEngine.RectTransform m_DescRectTransform;

    static /*0xe10154*/ WorldNoticeWindow();
    static /*0xe0fdf8*/ void ClearNotice();
    static /*0xe0fe94*/ void InitNotice(string _desc, float _fFlowSpeed, bool _bIgnoreCondition, bool _bIsAdminNotice);
    /*0xe1014c*/ WorldNoticeWindow();
    /*0xe0fcbc*/ void Awake();
    /*0xe0fda0*/ void OnDestroy();
    /*0xe0fd34*/ System.Collections.IEnumerator CoUpdate();
    /*0xe0ffa0*/ bool IsNotViewCondition(bool _bIgnore);

    struct WorldNotice
    {
        /*0x10*/ float speed;
        /*0x18*/ string text;
        /*0x20*/ bool ignorecontidion;

        /*0xa827f8*/ WorldNotice(float speed, string text, bool ignorecontidion);
    }

    class <CoUpdate>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldNoticeWindow <>4__this;
        /*0x28*/ WorldNoticeWindow.WorldNotice <_notice>5__2;

        /*0xd8e5ac*/ <CoUpdate>d__11(int <>1__state);
        /*0xd8e5d8*/ void System.IDisposable.Dispose();
        /*0xd8e5dc*/ bool MoveNext();
        /*0xd8e96c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8e974*/ void System.Collections.IEnumerator.Reset();
        /*0xd8e9b4*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct TopCurrencyInfo
{
    /*0x10*/ PTShare.Define.Wealth wealth;
    /*0x14*/ PTShare.Define.Currency currency;
    /*0x18*/ int id;
    /*0x20*/ long amount;
    /*0x28*/ AtlasType atlasType;
    /*0x30*/ string iconName;
    /*0x38*/ string customValue;
    /*0x40*/ string tooltip;

    /*0xa8ab88*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, PTShare.Define.Currency currency);
    /*0xa8ab90*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, int id);
    /*0xa8ab98*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, PTShare.Define.Currency currency, long amount);
    /*0xa8aba0*/ TopCurrencyInfo(PTShare.Define.Wealth wealth, int id, long amount);
    /*0xa8aba8*/ TopCurrencyInfo(AtlasType atlasType, string iconName, string customValue, string tooltip);
}

class CurrencyTopWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform m_Parent;
    /*0x20*/ System.Collections.Generic.List<CurrencyTopEntity> m_liCurrencyEntity;
    /*0x28*/ int nStartCount;
    /*0x2c*/ int nEndCount;

    /*0xf4d7c0*/ CurrencyTopWindow();
    /*0xf4d4b4*/ void OnEnable();
    /*0xf4d608*/ void OnDisable();
    /*0xf49be0*/ void InitalizeInfo(TopCurrencyInfo[] _viewInfos);
    /*0xf4d70c*/ void HandlerChangeInfo();
}

class ContentShopItem : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_priceParent;
    /*0x20*/ AtlasImage m_priceImage;
    /*0x28*/ LocalizeString m_priceText;
    /*0x30*/ AtlasImage m_badgeImage;
    /*0x38*/ LocalizeString m_badgeText;
    /*0x40*/ ItemTableRewardSlot m_itemSlot;
    /*0x48*/ UnityEngine.GameObject m_soldOutObject;
    /*0x50*/ UnityEngine.GameObject m_reddotObject;
    /*0x58*/ UnityEngine.Material m_grayScaleMaterial;
    /*0x60*/ int m_salePercent;
    /*0x64*/ bool m_isSoldOut;
    /*0x68*/ DefineContentShop.ContentPackageShopData m_contentPackageShopData;
    /*0x70*/ Rewards m_reward;
    /*0x138*/ long m_priceValue;

    /*0x10ecf78*/ ContentShopItem();
    /*0x10ec3d8*/ void InitializeItem(DefineContentShop.ContentPackageShopData contentPackageShopData, bool isSoldOut);
    /*0x10ec4dc*/ void SetItemSlot();
    /*0x10eca94*/ void SetReddot();
    /*0x10ec59c*/ void SetPriceUI();
    /*0x10ec7b8*/ void SetBadge(string badgeType, int badgePercent);
    /*0x10eca44*/ void SetSoldOut();
    /*0x10ecda0*/ void SetItemSlotMaterial(UnityEngine.Material material);
    /*0x10ec444*/ void SetReward();
    /*0x10ecc90*/ bool CheckReddotEquipList(System.Collections.Generic.List<PTShare.Define.SEquip> equipList);
    /*0x10ece88*/ void OnClickItem();
}

class ContentShopPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ LocalizeString m_shopTitleText;
    /*0x50*/ LocalizeString m_shopInfoText;
    /*0x58*/ LocalizeString m_shopResetTimeText;
    /*0x60*/ ScrollContent_ContentShopItem m_scrollContent;
    /*0x68*/ UnityEngine.GameObject m_stickGridLayoutParent;
    /*0x70*/ UnityEngine.GameObject m_stickPrefab;
    /*0x78*/ CashShopIcon[] m_categoryButtons;
    /*0x80*/ UnityEngine.RectTransform m_categoryScrollRect;
    /*0x88*/ UnityEngine.RectTransform m_minSizeRect;
    /*0x90*/ UnityEngine.Vector2 m_sizeDelta;
    /*0x98*/ DefineContentShop.ContentShopCategoryType m_currCategoryType;
    /*0xa0*/ System.Collections.Generic.List<DefineContentShop.ContentPackageShopData> m_currContentShopPackageList;
    /*0xa8*/ System.Collections.Generic.List<UnityEngine.GameObject> m_stickObjectList;
    /*0xb0*/ ContentShopPopup.INFO_TYPE m_infoType;
    /*0xb8*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0xc0*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0xf4a19c*/ ContentShopPopup();
    /*0xf47db4*/ void OnCreate();
    /*0xf47db8*/ void OnEnter();
    /*0xf4808c*/ void OnStart();
    /*0xf48090*/ void OnFinish();
    /*0xf48094*/ void OnLeave();
    /*0xf4836c*/ void OnDelete();
    /*0xf48370*/ void OnExit();
    /*0xf48444*/ void InitializePopup(DefineContentShop.ContentShopCategoryType select);
    /*0xf484f4*/ void SetHideCategory();
    /*0xf486cc*/ void UpdatePage();
    /*0xf48784*/ void UpdateCurrentCategoryData();
    /*0xf487e4*/ void UpdatePlayerCurrency();
    /*0xf48d28*/ void UpdateTitleText();
    /*0xf491e0*/ void UpdateInfoText(ContentShopPopup.INFO_TYPE infoType);
    /*0xf49728*/ void UpdateResetTimeText();
    /*0xf49b58*/ void UpdateCategoryButtons();
    /*0xf48ab8*/ void UpdateScrollContent();
    /*0xf48b50*/ void UpdateStickObject();
    /*0xf49dd8*/ void ChangeCategory(DefineContentShop.ContentShopCategoryType categoryType);
    /*0xf49df0*/ void OnClickChangeCategory(int categoryType);
    /*0xf49e08*/ void OnClickSwapInfo();
    /*0xf49f2c*/ void OnClickReset();
    /*0xf47e1c*/ void BindEvent();
    /*0xf480b8*/ void RemoveEvnet();
    /*0xf49fe0*/ void HandleRefreshPage();
    /*0xf49fe4*/ void HandleScrollContent(int index, ContentShopItem obj);
    /*0xf4872c*/ void StartRefreshTimer();
    /*0xf48320*/ void StopCoroutines();
    /*0xf4a130*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xf4a0c4*/ System.Collections.IEnumerator CoRefreshShop();
    /*0xf4a24c*/ void <OnExit>b__24_0();
    /*0xf4a2c8*/ void <CoRefreshShop>b__47_0();

    enum INFO_TYPE
    {
        NORMAL = 0,
        REQUIRE = 1,
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ ContentShopPopup <>4__this;
        /*0x18*/ int activeCount;

        /*0x10737dc*/ <>c__DisplayClass26_0();
        /*0x10737e4*/ void <SetHideCategory>b__0(TableData.TableData_Contentshop f);
    }

    class <CoUpdateTimer>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ContentShopPopup <>4__this;

        /*0x1073d34*/ <CoUpdateTimer>d__46(int <>1__state);
        /*0x1073d60*/ void System.IDisposable.Dispose();
        /*0x1073d64*/ bool MoveNext();
        /*0x1073dcc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1073dd4*/ void System.Collections.IEnumerator.Reset();
        /*0x1073e14*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshShop>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ContentShopPopup <>4__this;

        /*0x107398c*/ <CoRefreshShop>d__47(int <>1__state);
        /*0x10739b8*/ void System.IDisposable.Dispose();
        /*0x10739bc*/ bool MoveNext();
        /*0x1073ce4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1073cec*/ void System.Collections.IEnumerator.Reset();
        /*0x1073d2c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ContentShopPurchasePopup : GuiBase
{
    /*0x40*/ LocalizeString m_itemNameText;
    /*0x48*/ LocalizeString m_itemInfoText;
    /*0x50*/ LocalizeString m_itemOwnText;
    /*0x58*/ LocalizeString m_itemOwnCountText;
    /*0x60*/ AtlasImage m_costCurrencyImage;
    /*0x68*/ LocalizeString m_costCurrencyText;
    /*0x70*/ ItemTableRewardSlot m_itemTableRewardSlot;
    /*0x78*/ UnityEngine.UI.ScrollRect m_infoScrollRect;
    /*0x80*/ Rewards m_reward;
    /*0x148*/ PTShare.Define.Currency m_currencyType;
    /*0x150*/ long m_payValue;
    /*0x158*/ DefineContentShop.ContentPackageShopData m_contentPackageShopData;

    /*0xf4b254*/ ContentShopPurchasePopup();
    /*0xf4a2cc*/ void OnCreate();
    /*0xf4a2d0*/ void OnDelete();
    /*0xf4a2d4*/ void OnEnter();
    /*0xf4a340*/ void OnFinish();
    /*0xf4a344*/ void OnLeave();
    /*0xf4a348*/ void OnStart();
    /*0xf4a34c*/ void InitializePopup(DefineContentShop.ContentPackageShopData contentPackageShopData, Rewards reward, PTShare.Define.Currency currencyType, long payValue);
    /*0xf4a3bc*/ void UpdateItemSlot();
    /*0xf4a47c*/ void UpdateItemName();
    /*0xf4a6b4*/ void UpdateItemInfo();
    /*0xf4acf8*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0xf4a8dc*/ void UpdateItemOwnCount();
    /*0xf4ab18*/ void UpdateCost();
    /*0xf4ad64*/ void OnClickExit();
    /*0xf4ade4*/ void OnClickPurchase();
    /*0xf4b174*/ void Purchase();
    /*0xf4b25c*/ void <OnClickPurchase>b__26_0(bool _result);
    /*0xf4b268*/ void <Purchase>b__27_0(int equipId);

    class <CoLateScrollRectRefresh>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ContentShopPurchasePopup <>4__this;

        /*0x1073e1c*/ <CoLateScrollRectRefresh>d__22(int <>1__state);
        /*0x1073e48*/ void System.IDisposable.Dispose();
        /*0x1073e4c*/ bool MoveNext();
        /*0x1073f0c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1073f14*/ void System.Collections.IEnumerator.Reset();
        /*0x1073f54*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_dialogText;
    /*0x20*/ DialogBase.STATE m_state;
    /*0x28*/ DialogData m_dialogData;

    /*0x11efdc0*/ DialogBase();
    /*0x11efc74*/ DialogBase.STATE GetState();
    /*0x11efc7c*/ void SkipDialog();
    void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    void RollBackDialog(System.Action exitCallBack);
    void StopDialog();
    /*0x11efc80*/ void SetLocalize(string localizeKey);

    enum STATE
    {
        IN = 0,
        IDLE = 1,
        OUT = 2,
    }
}

enum DIALOG_PLAY_TYPE
{
    NONE = 0,
    AUTOPLAY_AUTOCLOSE = 1,
}

enum DIALOG_TYPE
{
    LEFT = 0,
    RIGHT = 1,
    TITLE = 2,
}

class DialogData
{
    /*0x10*/ float delay;
    /*0x14*/ bool clear;
    /*0x18*/ DIALOG_TYPE dialogType;
    /*0x1c*/ int characterId;
    /*0x20*/ string skinName;
    /*0x28*/ string localizeKey;
    /*0x30*/ TableData.TableData_Voice voiceData;
    /*0x38*/ DIALOG_PLAY_TYPE auto;

    /*0x11efdd0*/ DialogData(int characterId, SkinKeyType skinKeyType, bool useVoice);
    /*0x11efee8*/ DialogData(float delay, bool clear, DIALOG_TYPE dialogType, int characterId, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
    /*0x11effa8*/ DialogData(float delay, bool clear, DIALOG_TYPE dialogType, string skinName, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
    /*0x11efea0*/ void Init(float delay, bool clear, DIALOG_TYPE dialogType, int characterId, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
    /*0x11f005c*/ void Init(float delay, bool clear, DIALOG_TYPE dialogType, string skinName, string localizeKey, DIALOG_PLAY_TYPE auto, TableData.TableData_Voice voiceData);
}

class DialogPopup : GuiBase
{
    static /*0x0*/ System.Action OnExitDialog;
    /*0x40*/ DialogBase m_leftSkel;
    /*0x48*/ DialogBase m_rightSkel;
    /*0x50*/ DialogBase m_title;
    /*0x58*/ AtlasImage m_touchImage;
    /*0x60*/ int m_touchIndex;
    /*0x68*/ System.Collections.Generic.List<DialogData> m_dialogList;
    /*0x70*/ DialogData m_playDialog;
    /*0x78*/ DialogData m_nextDialog;
    /*0x80*/ UnityEngine.Coroutine m_waitCoroutine;

    static /*0x11f0c68*/ DialogPopup();
    static /*0x11f047c*/ void add_OnExitDialog(System.Action value);
    static /*0x11f0570*/ void remove_OnExitDialog(System.Action value);
    /*0x11f0bf0*/ DialogPopup();
    /*0x11f0664*/ void OnCreate();
    /*0x11f0668*/ void OnDelete();
    /*0x11f066c*/ void OnEnter();
    /*0x11f0670*/ void OnFinish();
    /*0x11f0674*/ void OnLeave();
    /*0x11f0678*/ void OnStart();
    /*0x11f067c*/ void OnExit();
    /*0x11f02f4*/ void InitPopup(DialogData dialog);
    /*0x11f08c4*/ void InitPopup(System.Collections.Generic.List<DialogData> dialogList);
    /*0x11f07cc*/ void PlayDialog();
    /*0x11f08f4*/ System.Collections.IEnumerator CoDelayPlay();
    /*0x11f0960*/ System.Collections.IEnumerator CoDelayPlay_AutoClose();
    /*0x11f09cc*/ void SetTouchColor();
    /*0x11f0714*/ void ClearDialog();
    /*0x11f0aa4*/ void OnClick();
    /*0x11f0c6c*/ void <CoDelayPlay>b__22_0();
    /*0x11f0d94*/ void <OnClick>b__26_0();

    class <CoDelayPlay>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogPopup <>4__this;

        /*0x10783fc*/ <CoDelayPlay>d__22(int <>1__state);
        /*0x1078428*/ void System.IDisposable.Dispose();
        /*0x107842c*/ bool MoveNext();
        /*0x107867c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078684*/ void System.Collections.IEnumerator.Reset();
        /*0x10786c4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ DialogPopup <>4__this;
        /*0x18*/ float audioTime;
        /*0x1c*/ bool isWaitEnd;
        /*0x20*/ System.Action<float> <>9__4;

        /*0x10781fc*/ <>c__DisplayClass23_0();
        /*0x1078204*/ void <CoDelayPlay_AutoClose>b__0();
        /*0x10783d0*/ void <CoDelayPlay_AutoClose>b__4(float time);
        /*0x10783e0*/ bool <CoDelayPlay_AutoClose>b__1();
        /*0x10783e8*/ void <CoDelayPlay_AutoClose>b__2();
        /*0x10783f4*/ bool <CoDelayPlay_AutoClose>b__3();
    }

    class <CoDelayPlay_AutoClose>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogPopup <>4__this;
        /*0x28*/ DialogPopup.<> <>8__1;
        /*0x30*/ DialogBase <target>5__2;

        /*0x10786cc*/ <CoDelayPlay_AutoClose>d__23(int <>1__state);
        /*0x10786f8*/ void System.IDisposable.Dispose();
        /*0x10786fc*/ bool MoveNext();
        /*0x1078b88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078b90*/ void System.Collections.IEnumerator.Reset();
        /*0x1078bd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogSkeleton : DialogBase
{
    /*0x30*/ Spine.Unity.SkeletonGraphic m_skeleton;
    /*0x38*/ UnityEngine.CanvasGroup m_textCanvas;
    /*0x40*/ UnityEngine.RectTransform m_moveRect;
    /*0x48*/ UnityEngine.CanvasGroup m_parentCanvasGroup;
    /*0x50*/ UnityEngine.Coroutine m_coroutine;
    /*0x58*/ int m_characterId;
    /*0x60*/ System.Action m_completeCallBack;
    /*0x68*/ System.Action m_enterCallBack;

    /*0x11f14bc*/ DialogSkeleton();
    /*0x11f0d98*/ float GetTimeScale();
    /*0x11f0db4*/ void SkipDialog();
    /*0x11f0f48*/ void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    /*0x11f1358*/ void RollBackDialog(System.Action exitCallBack);
    /*0x11f13dc*/ void StopDialog();
    /*0x11f11c0*/ void SetSkeleton(string skinName, string anim, bool loop);
    /*0x11f140c*/ void HandleCompleteAnim(Spine.TrackEntry trackEntry);
    /*0x11f0e68*/ void SetAnimation(string anim, bool loop);
    /*0x11f12ec*/ System.Collections.IEnumerator CoSparkSafe();
    /*0x11f1148*/ System.Collections.IEnumerator CoInitDialog(System.Action callBack);

    class <>c__DisplayClass10_0
    {
        /*0x10*/ DialogSkeleton <>4__this;
        /*0x18*/ System.Action enterCallBack;
        /*0x20*/ System.Action <>9__2;

        /*0x1078bd8*/ <>c__DisplayClass10_0();
        /*0x1078be0*/ void <PlayDialog>b__0();
        /*0x1078c68*/ void <PlayDialog>b__1();
        /*0x1078d34*/ void <PlayDialog>b__2();
    }

    class <CoSparkSafe>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogSkeleton <>4__this;

        /*0x1078f30*/ <CoSparkSafe>d__16(int <>1__state);
        /*0x1078f5c*/ void System.IDisposable.Dispose();
        /*0x1078f60*/ bool MoveNext();
        /*0x1078fe8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078ff0*/ void System.Collections.IEnumerator.Reset();
        /*0x1079030*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoInitDialog>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogSkeleton <>4__this;
        /*0x28*/ System.Action callBack;
        /*0x30*/ float <t>5__2;

        /*0x1078dc0*/ <CoInitDialog>d__17(int <>1__state);
        /*0x1078dec*/ void System.IDisposable.Dispose();
        /*0x1078df0*/ bool MoveNext();
        /*0x1078ee0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1078ee8*/ void System.Collections.IEnumerator.Reset();
        /*0x1078f28*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogTalk : DialogBase
{
    /*0x30*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x38*/ float m_alphaTime;
    /*0x3c*/ float m_closeTime;

    /*0x11f1788*/ DialogTalk();
    /*0x11f14d4*/ float GetTotalPlayTime();
    /*0x11f14e0*/ void OnEnable();
    /*0x11f1500*/ void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    /*0x11f173c*/ void RollBackDialog(System.Action exitCallBack);
    /*0x11f1740*/ void StopDialog();
    /*0x11f1698*/ System.Collections.IEnumerator CoCanvasAlpha(float delay, float start, float end, float time, System.Action callBack);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ DialogData dialogData;
        /*0x18*/ DialogTalk <>4__this;

        /*0x1079038*/ <>c__DisplayClass5_0();
        /*0x1079040*/ void <PlayDialog>b__0();
        /*0x1079168*/ void <PlayDialog>b__1();
    }

    class <CoCanvasAlpha>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float delay;
        /*0x24*/ float time;
        /*0x28*/ DialogTalk <>4__this;
        /*0x30*/ float start;
        /*0x34*/ float end;
        /*0x38*/ System.Action callBack;
        /*0x40*/ float <t>5__2;
        /*0x44*/ float <speed>5__3;

        /*0x1079188*/ <CoCanvasAlpha>d__8(int <>1__state);
        /*0x10791b4*/ void System.IDisposable.Dispose();
        /*0x10791b8*/ bool MoveNext();
        /*0x1079310*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079318*/ void System.Collections.IEnumerator.Reset();
        /*0x1079358*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DialogTitle : DialogBase
{
    /*0x30*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x38*/ float m_moveY;
    /*0x40*/ UnityEngine.Coroutine m_coroutine;
    /*0x48*/ UnityEngine.Vector3 m_originalPosition;

    /*0x11f1ae8*/ DialogTitle();
    /*0x11f17a4*/ void PlayDialog(DialogData dialogData, System.Action enterCallBack);
    /*0x11f1950*/ void RollBackDialog(System.Action exitCallBack);
    /*0x11f1aac*/ void StopDialog();
    /*0x11f18a8*/ void StopCoroutines();
    /*0x11f18d8*/ System.Collections.IEnumerator CoInitDialog(System.Action callBack);
    /*0x11f1a34*/ System.Collections.IEnumerator CoExitDialog(System.Action callBack);

    class <>c__DisplayClass4_0
    {
        /*0x10*/ DialogTitle <>4__this;
        /*0x18*/ System.Action enterCallBack;

        /*0x1079360*/ <>c__DisplayClass4_0();
        /*0x1079368*/ void <PlayDialog>b__0();
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ System.Action exitCallBack;

        /*0x1079398*/ <>c__DisplayClass5_0();
        /*0x10793a0*/ void <RollBackDialog>b__0();
    }

    class <CoInitDialog>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogTitle <>4__this;
        /*0x28*/ System.Action callBack;
        /*0x30*/ UnityEngine.Vector3 <endPosition>5__2;
        /*0x3c*/ float <t>5__3;

        /*0x1079548*/ <CoInitDialog>d__8(int <>1__state);
        /*0x1079574*/ void System.IDisposable.Dispose();
        /*0x1079578*/ bool MoveNext();
        /*0x10797b4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10797bc*/ void System.Collections.IEnumerator.Reset();
        /*0x10797fc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoExitDialog>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DialogTitle <>4__this;
        /*0x28*/ System.Action callBack;
        /*0x30*/ float <t>5__2;

        /*0x10793b4*/ <CoExitDialog>d__9(int <>1__state);
        /*0x10793e0*/ void System.IDisposable.Dispose();
        /*0x10793e4*/ bool MoveNext();
        /*0x10794f8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079500*/ void System.Collections.IEnumerator.Reset();
        /*0x1079540*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WinAnimation : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_WinAnimation;
    /*0x20*/ ParticleBase m_WinEffect;
    /*0x28*/ float m_fWaitTime;
    /*0x30*/ System.Collections.IEnumerator m_ieAnimate;

    /*0xe007fc*/ WinAnimation();
    /*0xe00680*/ void ShowAnimation();
    /*0xe00790*/ System.Collections.IEnumerator CoAnimate();
    /*0xe006e0*/ void SetActvieAnimSkel(bool _bEnable);
    /*0xe00728*/ void SetActiveEffect(bool _bEnable);

    class <CoAnimate>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WinAnimation <>4__this;

        /*0xd8c298*/ <CoAnimate>d__5(int <>1__state);
        /*0xd8c2c4*/ void System.IDisposable.Dispose();
        /*0xd8c2c8*/ bool MoveNext();
        /*0xd8c3a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8c3a8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8c3e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipChangeEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEquipEvent;
    /*0x18*/ ItemInfoSlot m_ItemBox;
    /*0x20*/ LocalizeString m_EquipName;
    /*0x28*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x30*/ LocalizeString m_TotalPower;
    /*0x38*/ HeroSlotInventory m_HeroSlot;
    /*0x40*/ UnityEngine.GameObject m_ChangeBtn;
    /*0x48*/ UnityEngine.GameObject m_EquipBtn;
    /*0x50*/ PTShare.Define.SHero m_ParentInfo;
    /*0x58*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x60*/ EquipSetItem m_EquipSetInfo;
    /*0x78*/ HeroEquipSet m_ChildInfo;

    static /*0x14ba9a4*/ EquipChangeEntity();
    static /*0x14b9fa8*/ void add_OnEquipEvent(System.Action<PTShare.Define.SHero> value);
    static /*0x14ba09c*/ void remove_OnEquipEvent(System.Action<PTShare.Define.SHero> value);
    /*0x14ba99c*/ EquipChangeEntity();
    /*0x14ba190*/ void InitializeEntity(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14ba54c*/ void InitializeEntity(PTShare.Define.SHero _hero, EquipSetItem _equip);
    /*0x14ba5cc*/ void InitializeEntity(PTShare.Define.SHero _hero, HeroEquipSet _equipset);
    /*0x14ba248*/ void SetInfomation(bool _bIsAmountSetItem, PTShare.Define.SEquip _equip);
    /*0x14ba1f8*/ void SetActionButton(bool _change, bool _equip);
    /*0x14ba64c*/ void OnClickChange();
    /*0x14ba7f4*/ void OnClickEquip();
}

class EquipPromoteStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatName;
    /*0x20*/ LocalizeString m_BefValue;
    /*0x28*/ LocalizeString m_AftValue;
    /*0x30*/ AtlasImage m_Arrow;
    /*0x38*/ float fBeforeValue;
    /*0x3c*/ float fAfterValue;

    /*0x14c0d9c*/ EquipPromoteStatusEntity();
    /*0x14bff18*/ void InitializeEntity(Battle.CharacterStat.StatType eStatType, Battle.CharacterStat beforeStatus, Battle.CharacterStat afterStatus);
    /*0x14c07b0*/ void InitializeEntity(Battle.CharacterStat.StatType eStatType, float beforeStatus, float afterStatus);
    /*0x14c0ab8*/ void InitializeEntityLv(float beforeLv, float afterLv);
    /*0x14c05a4*/ void SetMeasureValue(LocalizeString str, Battle.CharacterStat.StatType eStatType, float _Value, string _PlusStr);
    /*0x14c0790*/ bool IsSameValue();
    /*0x14c07a0*/ bool IsPlusValue();
}

class EquipmentStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_StatName;
    /*0x20*/ LocalizeString m_StatValue;
    /*0x28*/ LocalizeString m_AddStat;
    /*0x30*/ LocalizeString m_FullStatValue;
    /*0x38*/ UnityEngine.GameObject m_FullStatPadding;
    /*0x40*/ ParticleBase m_particle;

    /*0x114cd30*/ EquipmentStatusEntity();
    /*0x114bc50*/ void InitializeStatus(Battle.CharacterStat.StatType eType, TableData.TableData_Equipment equipment, int nLevel);
    /*0x114c050*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SHero hero, PTShare.Define.SEquip equip, string nameAdd, bool isFullStat);
    /*0x114c754*/ void InitializeStatus(Battle.CharacterStat.StatType eType, PTShare.Define.SEquip equip, int nOffsetLevel);
    /*0x114c998*/ void InitializeLevel(int lv);
    /*0x114cad0*/ void ShowParticle(float delay);
    /*0x114cb90*/ void StatTextAlpha(float value);
    /*0x114be08*/ void Clear();
    /*0x114cc80*/ void SetParticle(bool enable);
    /*0x114be98*/ void SetStatValue(Battle.CharacterStat.StatType eType, LocalizeString parent, Battle.CharacterStat stat, string addOper);
    /*0x114c534*/ void SetMeasureValue(Battle.CharacterStat.StatType eType, LocalizeString parent, Battle.CharacterStat stat, string addOper);
    /*0x114c730*/ Battle.CharacterStat.StatType ConvertFullStatType(Battle.CharacterStat.StatType eType);
    /*0x114cc04*/ System.Collections.IEnumerator CoParticle(float delay);

    class <CoParticle>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float delay;
        /*0x28*/ EquipmentStatusEntity <>4__this;

        /*0x109ab34*/ <CoParticle>d__17(int <>1__state);
        /*0x109ab60*/ void System.IDisposable.Dispose();
        /*0x109ab64*/ bool MoveNext();
        /*0x109acd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109ace0*/ void System.Collections.IEnumerator.Reset();
        /*0x109ad20*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScrollContent_EquipPromoteStatusEntity : ScrollContent<EquipPromoteStatusEntity>
{
    /*0xe19304*/ ScrollContent_EquipPromoteStatusEntity();
}

class ScrollContent_EquipmentStatusEntity : ScrollContent<EquipmentStatusEntity>
{
    /*0xe1937c*/ ScrollContent_EquipmentStatusEntity();
}

class StatusInfomationSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<StatusEntity> m_liStatusEntity;
    /*0x20*/ string m_strCenterSeparator;
    /*0x28*/ string m_strAddSeparator;
    /*0x30*/ bool m_isUseSort;
    /*0x38*/ Battle.CharacterStat m_DefaultStatInfo;
    /*0x40*/ Battle.CharacterStat m_CurrentStatInfo;
    /*0x48*/ System.Collections.Generic.List<Battle.CharacterStat.StatType> m_defaultSortList;

    /*0xc9ba9c*/ StatusInfomationSubWindow();
    /*0xc9b290*/ void InitializeStatus(TableData.TableData_Equipment _equipment, Battle.CharacterStat _curStat, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b4ac*/ void InitializeStatus(Battle.CharacterStat _curStat, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b4c0*/ void InitializeStatus(Battle.CharacterStat _defStat, Battle.CharacterStat _curStat, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b4d8*/ void InitializeStatus(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus, bool _isHideZeroStat, bool _isShortName);
    /*0xc9b528*/ void InitializeStatusByEffect(Battle.CharacterStat _curStat);
    /*0xc9b558*/ System.Collections.IEnumerator CoEffectLevelUpParticle();
    /*0xc9b324*/ void SetStatusEntity(bool _isHideZeroStat, bool _isShortName);
    /*0xc9b5c4*/ void SetDefaultSortData();
    /*0xc9b6e0*/ void SortStatList(bool _isHideZeroStat);
    /*0xc9ba7c*/ float GetStat(Battle.CharacterStat _stat, Battle.CharacterStat.StatType _type);

    class <CoEffectLevelUpParticle>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StatusInfomationSubWindow <>4__this;
        /*0x28*/ int <length>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xcc37f8*/ <CoEffectLevelUpParticle>d__12(int <>1__state);
        /*0xcc3824*/ void System.IDisposable.Dispose();
        /*0xcc3828*/ bool MoveNext();
        /*0xcc3ab4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc3abc*/ void System.Collections.IEnumerator.Reset();
        /*0xcc3afc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FriendEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeStateEvent;
    /*0x18*/ LocalizeString m_PlayerName;
    /*0x20*/ LocalizeString m_TotalPower;
    /*0x28*/ LocalizeString m_Chapter;
    /*0x30*/ LocalizeString m_Server;
    /*0x38*/ LocalizeString m_OnlineStatus;
    /*0x40*/ AtlasImage m_ReceiveIcon;
    /*0x48*/ AtlasImage m_SendIcon;
    /*0x50*/ UnityEngine.GameObject m_OnlineIcon;
    /*0x58*/ PlayerProfileSlot m_ProfileSlot;
    /*0x60*/ PTShare.Define.SFriend m_FriendInfo;
    /*0x68*/ PTShare.Define.FriendShipRecvState m_eReceiveState;
    /*0x6c*/ PTShare.Define.FriendShipSendState m_eSendState;
    /*0x70*/ bool m_bOnline;

    static /*0x11ddc20*/ FriendEntity();
    static /*0x11dc838*/ void add_OnChangeStateEvent(System.Action value);
    static /*0x11dc92c*/ void remove_OnChangeStateEvent(System.Action value);
    /*0x11ddc18*/ FriendEntity();
    /*0x11dca20*/ void InitializePopup(PTShare.Define.SFriend _friend);
    /*0x11dca28*/ void SetViewStatus();
    /*0x11dd02c*/ void OnClickReceiveFriendShip();
    /*0x11dd45c*/ void OnClickSendFriendShip();
    /*0x11dd888*/ void OnClickFight();
    /*0x11dda98*/ void CallbackProtocolReceiveFriendShip();
    /*0x11ddb58*/ void CallbackProtocolSendFriendShip();
    /*0x11dd00c*/ bool IsPossiableReceive();
    /*0x11dd01c*/ bool IsPossiableSend();
    /*0x11ddc24*/ void <SetViewStatus>b__17_0();
}

class FriendGenericWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_FriendList m_ScrollContent_FriendList;
    /*0x20*/ FriendWindowDropdown m_FriendWindowDropdown;
    /*0x28*/ LocalizeString m_FShipAmountText;
    /*0x30*/ LocalizeString m_FriendAmountText;
    /*0x38*/ LocalizeString m_DailyLimitText;
    /*0x40*/ UnityEngine.GameObject m_NotFriend;
    /*0x48*/ FriendSortType m_eSortType;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SFriend> m_curFriendList;

    /*0x11df0a8*/ FriendGenericWindow();
    /*0x11ddc44*/ void OnEnable();
    /*0x11de22c*/ void OnDisable();
    /*0x11de51c*/ void InitializeWindow();
    /*0x11de638*/ void SetViewStatus();
    /*0x11de55c*/ void InitializeScroll();
    /*0x11deb34*/ void HandlerScrollContent(int _index, FriendEntity _instance);
    /*0x11debb8*/ void OpenManage();
    /*0x11dede4*/ void AllRecvSendFriendPoint();
    /*0x11df038*/ void CallbackProtocolAllRecvSend();
    /*0x11df05c*/ void HandlerDropdown(FriendSortType _type);
    /*0x11df084*/ void HandlerChangeFriendState();
    /*0x11df128*/ void <OpenManage>b__14_0();
}

class FriendManageEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeStateEvent;
    /*0x18*/ LocalizeString m_PlayerName;
    /*0x20*/ LocalizeString m_TotalPower;
    /*0x28*/ UnityEngine.UI.Button m_RequestBtn;
    /*0x30*/ LocalizeString m_RequestBtnText;
    /*0x38*/ UnityEngine.GameObject m_RequestBtnObject;
    /*0x40*/ UnityEngine.GameObject m_SelectBtnObject;
    /*0x48*/ PlayerProfileSlot m_ProfileSlot;
    /*0x50*/ FriendManageType m_eType;
    /*0x58*/ PTShare.Define.SPlayer m_PlayerInfo;
    /*0x60*/ PTShare.Define.SSearchPlayer m_PlayerSearchInfo;

    static /*0x11e04dc*/ FriendManageEntity();
    static /*0x11de138*/ void add_OnChangeStateEvent(System.Action value);
    static /*0x11de044*/ void remove_OnChangeStateEvent(System.Action value);
    /*0x11e04d4*/ FriendManageEntity();
    /*0x11df334*/ void InitializeEntity(FriendManageType _eType, PTShare.Define.SPlayer _player);
    /*0x11df4a4*/ void InitializeEntity(FriendManageType _eType, PTShare.Define.SSearchPlayer _player);
    /*0x11df344*/ void SetViewStatus(PTShare.Define.SPlayer _info);
    /*0x11df4b4*/ void SetViewStatus(PTShare.Define.SSearchPlayer _info);
    /*0x11df614*/ void SetButton();
    /*0x11df8a0*/ void SetActiveButton(bool _request, bool _select);
    /*0x11df8f0*/ void OnClickRequestButton();
    /*0x11dfd4c*/ void OnClickAcceptButton();
    /*0x11dff7c*/ void OnClickIgnoreButton();
    /*0x11e01ac*/ void CallbackProtocolRemoveBlacklist();
    /*0x11e0224*/ void CallbackProtocolInviteFriend();
    /*0x11e029c*/ void CallbackProtocolAcceptFriend();
    /*0x11e045c*/ void CallbackProtocolDenyFriend();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ PTShare.Define.SPlayer _info;

        /*0x10a05ec*/ <>c__DisplayClass15_0();
        /*0x10a05f4*/ void <SetViewStatus>b__0();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ PTShare.Define.SSearchPlayer _info;

        /*0x10a0614*/ <>c__DisplayClass16_0();
        /*0x10a061c*/ void <SetViewStatus>b__0();
    }
}

class FriendMercenaryWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<MercenarySlotEntity> m_liSoldierSlot;
    /*0x20*/ HeroInventoryPage_Rent m_RentInventoryPage;
    /*0x28*/ LocalizeString m_WeekTime;
    /*0x30*/ System.Collections.IEnumerator m_ieTimer;
    /*0x38*/ System.Collections.IEnumerator m_ieRefreshTimer;

    /*0x10a4200*/ FriendMercenaryWindow();
    /*0x10a3854*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> get_curRentList();
    /*0x10a38d4*/ void OnEnable();
    /*0x10a3a28*/ void OnDisable();
    /*0x10a3b2c*/ void InitializeWindow();
    /*0x10a3d14*/ void Initialize();
    /*0x10a3b50*/ void ClearMercenarySlot();
    /*0x10a3d4c*/ void SetMercenarySlot();
    /*0x10a3eec*/ void OnClickMercenaryManage();
    /*0x10a3c34*/ void LoadMercenaryList();
    /*0x10a4074*/ void CallbackLoadMercenary();
    /*0x10a40d8*/ void HandlerReturnMercenary();
    /*0x10a3e98*/ void StartTimer();
    /*0x10a40dc*/ void StopCoroutines();
    /*0x10a4128*/ System.Collections.IEnumerator CoTimer();
    /*0x10a4194*/ System.Collections.IEnumerator CoRefreshTimer();

    class <>c
    {
        static /*0x0*/ FriendMercenaryWindow.<> <>9;
        static /*0x8*/ System.Action <>9__13_1;
        static /*0x10*/ System.Action <>9__13_0;

        static /*0x10a20b0*/ <>c();
        /*0x10a2110*/ <>c();
        /*0x10a2118*/ void <OnClickMercenaryManage>b__13_0();
        /*0x10a23c0*/ void <OnClickMercenaryManage>b__13_1();
    }

    class <CoTimer>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FriendMercenaryWindow <>4__this;

        /*0x10a25d4*/ <CoTimer>d__19(int <>1__state);
        /*0x10a2600*/ void System.IDisposable.Dispose();
        /*0x10a2604*/ bool MoveNext();
        /*0x10a2be8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a2bf0*/ void System.Collections.IEnumerator.Reset();
        /*0x10a2c30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshTimer>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FriendMercenaryWindow <>4__this;

        /*0x10a2440*/ <CoRefreshTimer>d__20(int <>1__state);
        /*0x10a246c*/ void System.IDisposable.Dispose();
        /*0x10a2470*/ bool MoveNext();
        /*0x10a2584*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a258c*/ void System.Collections.IEnumerator.Reset();
        /*0x10a25cc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FriendWindowDropdown : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<FriendWindowDropdown.FriendToggle> m_liToggle;
    /*0x20*/ UnityEngine.GameObject m_ToggleBackground;
    /*0x28*/ UnityEngine.GameObject m_ToggleTemplete;
    /*0x30*/ UnityEngine.GameObject m_ToggleArrow;
    /*0x38*/ LocalizeString m_MainText;
    /*0x40*/ bool m_bIsShow;
    /*0x44*/ int _nArrIndex;
    /*0x48*/ System.Action<FriendSortType> OnChangeDropdownEvent;

    /*0x10a59fc*/ FriendWindowDropdown();
    /*0x10a5258*/ void add_OnChangeDropdownEvent(System.Action<FriendSortType> value);
    /*0x10a52f8*/ void remove_OnChangeDropdownEvent(System.Action<FriendSortType> value);
    /*0x10a5398*/ void OnEnable();
    /*0x10a5460*/ void OnDisable();
    /*0x10a54f0*/ void InitializeDropdown(FriendSortType _type);
    /*0x10a59c4*/ void ToggleDropdown();
    /*0x10a5718*/ void ViewDropdown(bool _isShow);
    /*0x10a5808*/ void SetDropdown();
    /*0x10a5520*/ void SetDropdownName(FriendSortType _type);
    /*0x10a59d4*/ void HandlerDropDown(FriendSortType _type);

    class FriendToggle
    {
        /*0x10*/ FriendSortType type;
        /*0x18*/ string keyName;
        /*0x20*/ UnityEngine.UI.Toggle toggle;

        /*0x10a2d2c*/ FriendToggle();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ FriendSortType _sortType;
        /*0x18*/ FriendWindowDropdown <>4__this;

        /*0x10a2c38*/ <>c__DisplayClass16_0();
        /*0x10a2c40*/ void <SetDropdown>b__0(bool ison);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ FriendSortType _type;

        /*0x10a2d00*/ <>c__DisplayClass17_0();
        /*0x10a2d08*/ bool <SetDropdownName>b__0(FriendWindowDropdown.FriendToggle x);
    }
}

class MercenaryLendRequestEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ HeroSlotInventory m_HeroSlot;
    /*0x20*/ PlayerProfileSlot m_ProfileSlot;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_TotalPower;
    /*0x38*/ PTShare.Define.SHero m_HeroInfo;
    /*0x40*/ long m_nPlayerid;
    /*0x48*/ PTShare.Define.SStatBonus m_StatBonus;
    /*0x50*/ PTShare.Define.SPlayer m_FriendInfo;

    static /*0x2b3cfa4*/ MercenaryLendRequestEntity();
    static /*0x2b3c484*/ void add_OnChangeEvent(System.Action value);
    static /*0x2b3c578*/ void remove_OnChangeEvent(System.Action value);
    /*0x2b3cf9c*/ MercenaryLendRequestEntity();
    /*0x2b3c66c*/ void InitializeEntity(long _reqPlayerid, PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
    /*0x2b3c758*/ void SetStatusView();
    /*0x2b3c948*/ void OnClickConfirm();
    /*0x2b3cb80*/ void OnClickIgnore();
    /*0x2b3cdb8*/ void CallbackHeroSlotClick(PTShare.Define.SHero _hero);
    /*0x2b3ceac*/ void CallbackProtocolConfirm();
    /*0x2b3cf24*/ void CallbackProtocolIgnore();
    /*0x2b3cfa8*/ void <SetStatusView>b__12_0();
}

class MercenaryLendedEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlot m_SlotInfo;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_TotalPower;
    /*0x30*/ PTShare.Define.SMercenaryLended m_LendedInfo;
    /*0x38*/ PTShare.Define.SFriend m_FriendInfo;
    /*0x40*/ PTShare.Define.SHero m_HeroInfo;

    /*0x2b3d2f0*/ MercenaryLendedEntity();
    /*0x2b3cfc8*/ void InitializeEntity(PTShare.Define.SMercenaryLended _lended);
    /*0x2b3d0d8*/ void SetStatusView();
    /*0x2b3d1fc*/ void OnClickHeroSlot(PTShare.Define.SHero _hero);
}

class MercenaryRentEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ HeroSlot m_SlotInfo;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_TotalPower;
    /*0x30*/ LocalizeString m_ProcessText;
    /*0x38*/ LocalizeString m_InviteCount;
    /*0x40*/ UnityEngine.GameObject m_RequestParent;
    /*0x48*/ UnityEngine.GameObject m_RentedParent;
    /*0x50*/ UnityEngine.GameObject m_InviteButton;
    /*0x58*/ UnityEngine.GameObject m_CancelButton;
    /*0x60*/ PTShare.Define.SMercenaryRent m_RentInfo;

    static /*0x2b404a4*/ MercenaryRentEntity();
    static /*0x2b3f86c*/ void add_OnChangeEvent(System.Action value);
    static /*0x2b3f960*/ void remove_OnChangeEvent(System.Action value);
    /*0x2b4049c*/ MercenaryRentEntity();
    /*0x2b3fa54*/ void InitializeEntity(PTShare.Define.SMercenaryRent _rent);
    /*0x2b3fa5c*/ void SetStatusView();
    /*0x2b3fcf4*/ void OnClickRequest();
    /*0x2b4017c*/ void OnClickCancel();
    /*0x2b402a8*/ void OnClickHeroSlot(PTShare.Define.SHero _hero);
    /*0x2b40388*/ void CallbackProtocolRent();
    /*0x2b40424*/ void CallbackProtocolCancel();
    /*0x2b3fe38*/ bool IsVaildCondition();
}

class MercenarySlotEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_Foothold;
    /*0x38*/ LocalizeString m_Nickname;
    /*0x40*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x48*/ PTShare.Define.SMercenaryRent m_MercenaryInfo;
    /*0x50*/ PTShare.Define.SHero m_HeroInfo;

    /*0x2b411bc*/ MercenarySlotEntity();
    /*0x2b40ca4*/ void InitializeSlot(PTShare.Define.SMercenaryRent _mercenary);
    /*0x2b40d94*/ void SetViewStatus();
    /*0x2b40cf4*/ PTShare.Define.SHero ConvertMercenaryToHero(PTShare.Define.SMercenaryRent _mercenary);
    /*0x2b410b8*/ void OnClick();
}

class AtticBuyPopup : GuiBase
{
    /*0x40*/ Spine.Unity.SkeletonGraphic m_singleSkel;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_multiSkel;
    /*0x50*/ ParticleBase m_singleParticle;
    /*0x58*/ ParticleBase m_multiParticle;
    /*0x60*/ System.Collections.Generic.List<ItemTableRewardSlot> m_itemList;
    /*0x68*/ UnityEngine.Vector2 m_posMinMaxX;
    /*0x70*/ UnityEngine.Vector2 m_posMinMaxY;
    /*0x78*/ UnityEngine.Vector2 m_jumpPowerMinMax;
    /*0x80*/ UnityEngine.Vector2 m_jumpDurationMinMax;
    /*0x88*/ int m_jumpCount;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_curSkel;
    /*0xa0*/ bool m_isSingle;
    /*0xa1*/ bool m_isGacha;
    /*0xa8*/ System.Action m_animEndCallBack;

    /*0xf801e0*/ AtticBuyPopup();
    /*0xf7f88c*/ void OnCreate();
    /*0xf7f890*/ void OnDelete();
    /*0xf7f894*/ void OnEnter();
    /*0xf7f898*/ void OnExit();
    /*0xf7f924*/ void OnFinish();
    /*0xf7f928*/ void OnLeave();
    /*0xf7f92c*/ void OnStart();
    /*0xf7f930*/ void InitPopup(bool isSingle, System.Collections.Generic.List<Rewards> rewardList);
    /*0xf7fc54*/ void SetBox(bool isSingle);
    /*0xf7fd6c*/ void OnClick();
    /*0xf8009c*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0xf80148*/ void HandleAnimCompleteOpenBox();
    /*0xf7ffe4*/ System.Collections.IEnumerator CoLatePlayOpenSoundSingle();
    /*0xf80040*/ System.Collections.IEnumerator CoLatePlayOpenSound();
    /*0xf80174*/ System.Collections.IEnumerator CoShowReward();
    /*0xf802d0*/ void <InitPopup>b__22_1();

    class <>c
    {
        static /*0x0*/ AtticBuyPopup.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__22_0;

        static /*0xd9ee00*/ <>c();
        /*0xd9ee60*/ <>c();
        /*0xd9ee68*/ void <InitPopup>b__22_0(ItemTableRewardSlot data);
    }

    class <CoLatePlayOpenSoundSingle>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9f0b0*/ <CoLatePlayOpenSoundSingle>d__27(int <>1__state);
        /*0xd9f0dc*/ void System.IDisposable.Dispose();
        /*0xd9f0e0*/ bool MoveNext();
        /*0xd9f1ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9f1f4*/ void System.Collections.IEnumerator.Reset();
        /*0xd9f234*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLatePlayOpenSound>d__28 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9ee98*/ <CoLatePlayOpenSound>d__28(int <>1__state);
        /*0xd9eec4*/ void System.IDisposable.Dispose();
        /*0xd9eec8*/ bool MoveNext();
        /*0xd9f060*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9f068*/ void System.Collections.IEnumerator.Reset();
        /*0xd9f0a8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AtticBuyPopup <>4__this;
        /*0x28*/ int <count>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xd9f23c*/ <CoShowReward>d__29(int <>1__state);
        /*0xd9f268*/ void System.IDisposable.Dispose();
        /*0xd9f26c*/ bool MoveNext();
        /*0xd9f778*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9f780*/ void System.Collections.IEnumerator.Reset();
        /*0xd9f7c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AtticGachaButton : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x18*/ AtlasImage m_PriceIcon;
    /*0x20*/ LocalizeString m_PriceAmount;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ int m_nGachaIndex;
    /*0x38*/ TableData.TableData_Highgacha m_GachaInfo;
    /*0x40*/ bool m_bIsEnough;
    /*0x41*/ bool m_bIsSubPrice;
    /*0x44*/ PTShare.Define.Wealth m_ePriceType;
    /*0x48*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x4c*/ int m_nItemId;
    /*0x50*/ int m_nAmount;

    static /*0xf817c8*/ AtticGachaButton();
    /*0xf817c0*/ AtticGachaButton();
    /*0xf8033c*/ void InitializeButton(int _index, TableData.TableData_Highgacha _base);
    /*0xf80478*/ void InitialzePrice();
    /*0xf808b4*/ void Refresh();
    /*0xf804e8*/ void SetPriceButton();
    /*0xf808d8*/ void OnClick();
    /*0xf81034*/ bool InValidClickCondition();
    /*0xf81318*/ void SendBuyProtocol();
    /*0xf810e0*/ bool IsNotEnough();
    /*0xf806d8*/ bool IsPossiblePrice(string _priceType, string _priceArg1, string _priceArg2);
    /*0xf80380*/ void BindEvent();
    /*0xf815c0*/ void RemoveEvent();
    /*0xf816b0*/ void HandleRefresh();
    /*0xf816d4*/ Rewards GetLuckyHeroReward();
    /*0xf817cc*/ void <OnClick>b__16_1(bool _result);
    /*0xf817d8*/ void <SendBuyProtocol>b__18_0(System.Collections.Generic.List<int> buyResult);

    class <>c
    {
        static /*0x0*/ AtticGachaButton.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__16_0;

        static /*0xd9f7c8*/ <>c();
        /*0xd9f828*/ <>c();
        /*0xd9f830*/ void <OnClick>b__16_0(bool confirm);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;
        /*0x18*/ AtticGachaButton <>4__this;

        /*0xd9f834*/ <>c__DisplayClass18_0();
        /*0xd9f83c*/ void <SendBuyProtocol>b__1(int data);
    }
}

class AtticHeroSelectPopup : GuiBase
{
    /*0x40*/ WishSlot m_selectHeroSlot;
    /*0x48*/ HeroPropertySlotWindow m_propertySlotWindow;
    /*0x50*/ ScrollContent_HeroWishSlot m_scrollContent;
    /*0x58*/ UnityEngine.UI.Button m_selectButton;
    /*0x60*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_heroList;
    /*0x68*/ int m_selectHeroId;
    /*0x6c*/ int m_selectFaction;
    /*0x70*/ System.Action exitCallBack;

    /*0xf82a94*/ AtticHeroSelectPopup();
    /*0xf819ec*/ void OnCreate();
    /*0xf819f0*/ void OnDelete();
    /*0xf819f4*/ void OnEnter();
    /*0xf819f8*/ void OnExit();
    /*0xf81df0*/ void OnFinish();
    /*0xf81df4*/ void OnLeave();
    /*0xf81df8*/ void OnStart();
    /*0xf81d00*/ int GetCurrentHeroId();
    /*0xf81dfc*/ void InitPopup(System.Action exitCallBack);
    /*0xf82040*/ void InitPropertySlot();
    /*0xf820d0*/ void InitSelectHero(int tableId);
    /*0xf81d80*/ void Release();
    /*0xf82174*/ void UpdateHeroList();
    /*0xf82404*/ void UpdateButton();
    /*0xf82698*/ void HandleChangeFaction(int faction);
    /*0xf826a0*/ void HandleScrollContent(int index, WishPropertySlot obj);
    /*0xf827a0*/ void HandleSelectHero(TableData.TableData_Unitbase unitBase);
    /*0xf81e48*/ void BindEvent();
    /*0xf824a8*/ void RemoveEvent();
    /*0xf827dc*/ void OnClickExit();
    /*0xf827e8*/ void OnClickConfirm();
    /*0xf82b0c*/ void <OnExit>b__11_0(bool confirm);
    /*0xf82b4c*/ bool <UpdateHeroList>b__20_1(TableData.TableData_Unitbase x);
    /*0xf82b70*/ void <OnClickConfirm>b__28_0();

    class <>c
    {
        static /*0x0*/ AtticHeroSelectPopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__20_0;

        static /*0xd9fa9c*/ <>c();
        /*0xd9fafc*/ <>c();
        /*0xd9fb04*/ bool <UpdateHeroList>b__20_0(TableData.TableData_Unitbase x);
    }
}

class AtticPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x40*/ GachaCharacter m_atticCharacter;
    /*0x48*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x50*/ AtlasImage m_luckyIcon;
    /*0x58*/ AtlasImage m_heroSelectIcon;
    /*0x60*/ UnityEngine.GameObject m_reddot;
    /*0x68*/ AtticGachaButton[] m_atticGachaButtons;

    static /*0xf83c14*/ AtticPopup();
    /*0xf83c0c*/ AtticPopup();
    /*0xf83138*/ int GetSelectHeroId();
    /*0xf831b8*/ void OnCreate();
    /*0xf831bc*/ void OnDelete();
    /*0xf831c0*/ void OnEnter();
    /*0xf831c4*/ void OnExit();
    /*0xf832d0*/ void OnFinish();
    /*0xf832d4*/ void OnLeave();
    /*0xf832d8*/ void OnStart();
    /*0xf832dc*/ void InitPopup();
    /*0xf83424*/ void InitCurrencyTop();
    /*0xf835c4*/ void InitButtons();
    /*0xf836c0*/ void UpdateReddot();
    /*0xf8332c*/ void BindEvent();
    /*0xf83760*/ void RemoveEvent();
    /*0xf83850*/ void HandleRefresh();
    /*0xf8388c*/ void OnClickHelp();
    /*0xf83930*/ void OnClickPercent();
    /*0xf83af0*/ void OnClickHeroSelect();
    /*0xf83c18*/ void <OnExit>b__11_0();
    /*0xf83c20*/ void <OnClickPercent>b__23_0();
    /*0xf83c90*/ void <OnClickHeroSelect>b__24_0();
}

class AtticRewardPercentPopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardPercentSlot m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x50*/ System.Collections.Generic.List<float> m_dropPercentList;
    /*0x58*/ System.Action exitCallBack;

    /*0xf843c0*/ AtticRewardPercentPopup();
    /*0xf83d24*/ void OnCreate();
    /*0xf83d28*/ void OnDelete();
    /*0xf83d2c*/ void OnEnter();
    /*0xf83d30*/ void OnExit();
    /*0xf83e94*/ void OnFinish();
    /*0xf83e98*/ void OnLeave();
    /*0xf83e9c*/ void OnStart();
    /*0xf83a4c*/ void InitPopup(System.Action exitCallBack);
    /*0xf83f7c*/ void UpdateData();
    /*0xf842c0*/ void HandleScrollContent(int index, RewardPercentSlot obj);
    /*0xf83ea0*/ void BindEvent();
    /*0xf83dc0*/ void RemoveEvent();
}

class GachaCharacter : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<bool> OnMoveDest;
    /*0x18*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x20*/ UnityEngine.Vector3 m_moveDist;
    /*0x2c*/ UnityEngine.Vector3 m_center;
    /*0x38*/ UnityEngine.Vector3 m_defaultScale;
    /*0x44*/ float m_speed;
    /*0x48*/ UnityEngine.RectTransform m_singleDest;
    /*0x50*/ UnityEngine.RectTransform m_multiDest;
    /*0x58*/ string m_curAnim;
    /*0x60*/ UnityEngine.Coroutine m_coroutine;
    /*0x68*/ int m_moveDest;
    /*0x70*/ System.Action m_callBack;

    static /*0x10bc780*/ GachaCharacter();
    /*0x10bc6f4*/ GachaCharacter();
    /*0x10bc1cc*/ void OnDisable();
    /*0x10ab964*/ void InitCharacter(int tableId);
    /*0x10bc24c*/ void SetAnimation(string anim, bool loop, System.Action callBack);
    /*0x10bc3e4*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x10bc398*/ void HandleOnMove();
    /*0x10bc504*/ void HandleOnMoveBox(bool isSingle);
    /*0x10bc568*/ void OnClick();
    /*0x10bc498*/ System.Collections.IEnumerator CoMove();

    class <CoMove>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector3 <dir>5__2;
        /*0x34*/ UnityEngine.Vector3 <dest>5__3;
        /*0x40*/ float <dist>5__4;

        /*0xf65180*/ <CoMove>d__19(int <>1__state);
        /*0xf651ac*/ void System.IDisposable.Dispose();
        /*0xf651b0*/ bool MoveNext();
        /*0xf654e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf654f0*/ void System.Collections.IEnumerator.Reset();
        /*0xf65530*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RewardPercentSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_itemInfoSlot;
    /*0x20*/ LocalizeString m_itemTitle;
    /*0x28*/ LocalizeString m_itemPercent;

    /*0x11a9d28*/ RewardPercentSlot();
    /*0x11a98c8*/ void InitSlot(Rewards item, float percent);
    /*0x11a9c84*/ void SetTitle(string value);
    /*0x11a9b9c*/ void SetPercent(float percent);
}

class ScrollContent_RewardPercentSlot : ScrollContent<RewardPercentSlot>
{
    /*0xe1b4c4*/ ScrollContent_RewardPercentSlot();
}

class GachaBonusSilder : UnityEngine.MonoBehaviour
{
    static int _nMaxCount = 100;
    /*0x18*/ UnityEngine.UI.Slider m_Silder;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ UnityEngine.GameObject m_FadeBackground;
    /*0x30*/ UnityEngine.GameObject m_RewardList;
    /*0x38*/ AtlasImage m_GeneralIcon;
    /*0x40*/ AtlasImage m_CardIcon;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> m_liCurBonus;
    /*0x50*/ GachaBonusSilder.SBonusIndex m_CurBonusIndex;
    /*0x60*/ System.Collections.IEnumerator m_IEnumarator;
    /*0x68*/ bool m_bIsReward;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_liRewards;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_liTotalRewards;

    /*0x10ba73c*/ GachaBonusSilder();
    /*0x10b9830*/ int get_OldBonus();
    /*0x10b9884*/ void set_OldBonus(int value);
    /*0x10b98dc*/ int get_CurBonus();
    /*0x10b9930*/ System.Collections.Generic.List<int> get_CurrentReward();
    /*0x10b9984*/ bool get_IsReceiveBonus();
    /*0x10b99d8*/ void set_IsReceiveBonus(bool value);
    /*0x10b9a34*/ void OnDisable();
    /*0x10b9ab4*/ void InitializeSilder();
    /*0x10b9ab8*/ void SetCurrentReward();
    /*0x10b9fe4*/ void SetSilderAmount();
    /*0x10ba0dc*/ void SetSilder(int _amount, int _maxamount);
    /*0x10b9cc8*/ void SetGachaBonus();
    /*0x10b9eb4*/ void SetSBonusIndex();
    /*0x10ba20c*/ void SetActiveReward(bool _enable);
    /*0x10ba25c*/ void ViewReward();
    /*0x10b9aac*/ void HideReward();
    /*0x10ba4f8*/ void StartReceiveBonus();
    /*0x10ba564*/ System.Collections.IEnumerator CoReceiveProcess();
    /*0x10ba5d0*/ void GetBonusReward();
    /*0x10ba7d4*/ void <SetGachaBonus>b__29_0(TableData.TableData_Gachabonus x);
    /*0x10ba884*/ bool <CoReceiveProcess>b__35_0();
    /*0x10ba88c*/ void <GetBonusReward>b__36_0();

    struct SBonusIndex
    {
        /*0x10*/ int Before;
        /*0x14*/ int Current;
        /*0x18*/ int After;
    }

    class <>c
    {
        static /*0x0*/ GachaBonusSilder.<> <>9;
        static /*0x8*/ System.Predicate<Rewards> <>9__26_0;

        static /*0xf64858*/ <>c();
        /*0xf648b8*/ <>c();
        /*0xf648c0*/ bool <SetCurrentReward>b__26_0(Rewards x);
    }

    class <CoReceiveProcess>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaBonusSilder <>4__this;

        /*0xf648d0*/ <CoReceiveProcess>d__35(int <>1__state);
        /*0xf648fc*/ void System.IDisposable.Dispose();
        /*0xf64900*/ bool MoveNext();
        /*0xf64bc8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64bd0*/ void System.Collections.IEnumerator.Reset();
        /*0xf64c10*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaButtonWindow : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    static int _nStartKeyIndex = 1;
    static int _nDefArrIndex = 0;
    static int _nNextArrIndex = 1;
    static float _fLimitDistance = 200;
    static float _fLimitNormalize = 0.800000011920929;
    /*0x18*/ GachaSelectScroll m_cGachaSelectScroll;
    /*0x20*/ LocalizeString m_TitleText;
    /*0x28*/ UnityEngine.UI.Outline m_TitleOutline;
    /*0x30*/ UnityEngine.GameObject m_ChangeButton;
    /*0x38*/ UnityEngine.GameObject m_TimerParent;
    /*0x40*/ LocalizeString m_TimerText;
    /*0x48*/ System.Collections.Generic.List<GachaPriceButton> m_liPriceButton;
    /*0x50*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x58*/ UnityEngine.UI.Image m_CanterImage;
    /*0x60*/ int m_nCurrentType;
    /*0x64*/ int m_nCurPropertyType;
    /*0x68*/ bool m_bIsPlayingAnimation;
    /*0x70*/ System.Collections.IEnumerator m_iePropertyTimer;
    /*0x78*/ System.Collections.IEnumerator m_ieAnimationTimer;
    /*0x80*/ System.Collections.IEnumerator m_ieRefreshTimer;
    /*0x88*/ UnityEngine.Vector3 m_vecInputTouch;
    /*0x94*/ int _CurPropertyType;
    /*0x98*/ TableData.TableData_Gacha _MainGachaInfo;
    /*0xa0*/ TableData.TableData_Gacha _SubGachaInfo;

    /*0x10bc12c*/ GachaButtonWindow();
    /*0x10baad0*/ void OnEnable();
    /*0x10bac54*/ void OnDisable();
    /*0x10bad80*/ void InitalizeWindow();
    /*0x10bae14*/ void SetTitleWithButton();
    /*0x10bb168*/ void SetActivePropertyGachaObjects(bool _enable);
    /*0x10bb1b0*/ void SetLocalizeTitle();
    /*0x10bb52c*/ void SetCenterImage();
    /*0x10bb038*/ bool IsPropertyGacha();
    /*0x10bb8c8*/ void OnClickChangeButton();
    /*0x10bb950*/ void OnClickMoveGachaType(bool _isLeft);
    /*0x10bbb90*/ void OnClickHelp();
    /*0x10bbb34*/ void StartCenterAnimation();
    /*0x10bbca8*/ System.Collections.IEnumerator CoAnimation();
    /*0x10bb800*/ void StartPropertyTimer(bool _enable);
    /*0x10bbd14*/ System.Collections.IEnumerator CoPropertyTimer();
    /*0x10bb864*/ void StartRefreshTimer(bool _enable);
    /*0x10bbd80*/ System.Collections.IEnumerator CoRefreshTimer();
    /*0x10bbdec*/ void HandlerChangeProperty(int _type);
    /*0x10bbe04*/ void HandlerDailyUpdate();
    /*0x10bbeb8*/ void HandlerSelectScrollItem(int _index);
    /*0x10bbf78*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10bc0a8*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10bc120*/ void SetTouchPosition(UnityEngine.Vector3 _pos);
    /*0x10bc008*/ void EndTouchEvent(UnityEngine.Vector3 _pos);
    /*0x10bc168*/ void <HandlerDailyUpdate>b__42_0();

    class <CoAnimation>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaButtonWindow <>4__this;

        /*0xf64c18*/ <CoAnimation>d__36(int <>1__state);
        /*0xf64c44*/ void System.IDisposable.Dispose();
        /*0xf64c48*/ bool MoveNext();
        /*0xf64de8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64df0*/ void System.Collections.IEnumerator.Reset();
        /*0xf64e30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPropertyTimer>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaButtonWindow <>4__this;

        /*0xf64e38*/ <CoPropertyTimer>d__38(int <>1__state);
        /*0xf64e64*/ void System.IDisposable.Dispose();
        /*0xf64e68*/ bool MoveNext();
        /*0xf64fa0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64fa8*/ void System.Collections.IEnumerator.Reset();
        /*0xf64fe8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshTimer>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaButtonWindow <>4__this;

        /*0xf64ff0*/ <CoRefreshTimer>d__40(int <>1__state);
        /*0xf6501c*/ void System.IDisposable.Dispose();
        /*0xf65020*/ bool MoveNext();
        /*0xf65130*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf65138*/ void System.Collections.IEnumerator.Reset();
        /*0xf65178*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaEpicEventProcess : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_eventSpineBG;
    /*0x28*/ Spine.Unity.SkeletonGraphic m_eventSpine;
    /*0x30*/ GachaResultCard m_resultCard;
    /*0x38*/ ParticleBase m_effect01;
    /*0x40*/ ParticleBase m_effect02;
    /*0x48*/ ParticleBase m_effect03;
    /*0x50*/ UnityEngine.Vector2 m_vecDefaultPosition;
    /*0x58*/ float m_fWaitTime;
    /*0x5c*/ float m_fAddScale;
    /*0x60*/ float m_fMoveTime;
    /*0x68*/ GachaResultCard copyCard;
    /*0x70*/ System.Collections.IEnumerator ieCompleteAnimation;
    /*0x78*/ System.Action OnEndEventCallback;

    /*0x10bdbb4*/ GachaEpicEventProcess();
    /*0x10bd1a8*/ void InitializeEvent(GachaResultCard _card, System.Action _endEventCallback);
    /*0x10bd5dc*/ void CompleteAnimationEvent(Spine.TrackEntry trackEntry);
    /*0x10bd730*/ void OpenAnimationEvent(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x10bd6e4*/ void StartAnimation();
    /*0x10bda00*/ System.Collections.IEnumerator CoCompleteWait();
    /*0x10bda6c*/ System.Collections.IEnumerator CoCompleteAnimation();
    /*0x10bd570*/ System.Collections.IEnumerator CoSetAnimColor();
    /*0x10bdad8*/ float CardMagnitude();
    /*0x10bdb80*/ void SetActive(bool _bEnable);
    /*0x10bd518*/ void SetActiveCard(bool _bEnable);
    /*0x10bd4b4*/ void SetActiveEffect(ParticleBase _base, bool _bEnable);
    /*0x10bd554*/ void SetAlpha(float _fAlpha);

    class <CoCompleteWait>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaEpicEventProcess <>4__this;
        /*0x28*/ float <waitTime>5__2;

        /*0xf65810*/ <CoCompleteWait>d__18(int <>1__state);
        /*0xf6583c*/ void System.IDisposable.Dispose();
        /*0xf65840*/ bool MoveNext();
        /*0xf65914*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6591c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6595c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCompleteAnimation>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaEpicEventProcess <>4__this;
        /*0x28*/ float <t>5__2;
        /*0x2c*/ float <power>5__3;
        /*0x30*/ UnityEngine.Vector3 <startPosition>5__4;
        /*0x3c*/ UnityEngine.Vector3 <endPosition>5__5;

        /*0xf65570*/ <CoCompleteAnimation>d__19(int <>1__state);
        /*0xf6559c*/ void System.IDisposable.Dispose();
        /*0xf655a0*/ bool MoveNext();
        /*0xf657c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf657c8*/ void System.Collections.IEnumerator.Reset();
        /*0xf65808*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSetAnimColor>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaEpicEventProcess <>4__this;

        /*0xf65964*/ <CoSetAnimColor>d__20(int <>1__state);
        /*0xf65990*/ void System.IDisposable.Dispose();
        /*0xf65994*/ bool MoveNext();
        /*0xf65a74*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf65a7c*/ void System.Collections.IEnumerator.Reset();
        /*0xf65abc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaLimitCard : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ AtlasImage m_CardImage;
    /*0x20*/ LocalizeString m_PropertyName;
    /*0x28*/ AtlasImage m_LimitIcon;
    /*0x30*/ LocalizeString m_LimitAmount;
    /*0x38*/ AtlasImage m_SelectEffect;
    /*0x40*/ int m_nPropertyType;
    /*0x44*/ int m_nBuyPrice;
    /*0x48*/ bool m_bIsBuy;
    /*0x50*/ UnityEngine.Color[] m_arrPropertyColor;
    /*0x58*/ System.Collections.IEnumerator m_ieAnimation;
    /*0x60*/ bool m_bIsPlayingAnimation;

    static /*0xebebf0*/ GachaLimitCard();
    static /*0xebda50*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xebdb44*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xebea34*/ GachaLimitCard();
    /*0xebdc38*/ void OnEnable();
    /*0xebdc78*/ void InitializeCard(int _type);
    /*0xebe040*/ void SetActiveSelectEffect(bool _enable);
    /*0xebdd8c*/ void SetResources(int _type);
    /*0xebe058*/ void SetUpdateTime();
    /*0xebe14c*/ void OnClick();
    /*0xebe970*/ void CallbackBuyFaction();
    /*0xebe974*/ void StartAnimation();
    /*0xebe9c8*/ System.Collections.IEnumerator CoAnimation();
    /*0xebe6d8*/ bool IsTimeLimit();
    /*0xebe930*/ bool IsVaildPrice();
    /*0xebebf4*/ void <OnClick>b__19_0(bool _result);

    class <CoAnimation>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaLimitCard <>4__this;

        /*0xf65ac4*/ <CoAnimation>d__22(int <>1__state);
        /*0xf65af0*/ void System.IDisposable.Dispose();
        /*0xf65af4*/ bool MoveNext();
        /*0xf65d2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf65d34*/ void System.Collections.IEnumerator.Reset();
        /*0xf65d74*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaPercentCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_frame;
    /*0x20*/ AtlasImage m_backGround;
    /*0x28*/ AtlasImage m_icon;
    /*0x30*/ LocalizeString m_percent;

    /*0xec08a0*/ GachaPercentCharacter();
    /*0xec05e8*/ void Init(int characterTableId, float percent);
    /*0xec072c*/ void InitSlime(int index, float percent);
}

class GachaPercentDesc : UnityEngine.MonoBehaviour
{
    static /*0x0*/ float PADDING;
    static /*0x4*/ int WISH_COUNT;
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ LocalizeString m_GradeName;
    /*0x28*/ AtlasImage m_GradeImage;
    /*0x30*/ UnityEngine.UI.Outline m_GradeOutline;
    /*0x38*/ UnityEngine.UI.Shadow m_GradeShadow;
    /*0x40*/ LocalizeString m_Percent;
    /*0x48*/ UnityEngine.UI.Outline m_percentOutline;
    /*0x50*/ ScrollContent_GachaPercentCharacter m_scrollContent;
    /*0x58*/ bool m_useTablePercent;
    /*0x5c*/ int m_dropPattern;
    /*0x60*/ int m_grade;
    /*0x64*/ float m_percent;
    /*0x68*/ float m_defaultPercent;
    /*0x6c*/ bool m_activeWishList;
    /*0x70*/ System.Collections.Generic.List<int> m_wishList;
    /*0x78*/ float m_wishPercent;
    /*0x7c*/ GachaFactionType m_factionType;
    /*0x80*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> m_gachaPercent;
    /*0x88*/ TableData.TableData_Gacha m_gachaData;

    static /*0xec1d44*/ GachaPercentDesc();
    /*0xec1c7c*/ GachaPercentDesc();
    /*0xec08a8*/ void OnDisable();
    /*0xec097c*/ void InitializeDesc(TableData.TableData_Gacha gachaData, int _grade, float _percent, int dropPattern, GachaFactionType factionType);
    /*0xec0b00*/ void SetTitle(int _grade, float _percent);
    /*0xec18c8*/ void SetGradeImage(int _grade);
    /*0xec1648*/ void SetGradeColor(UnityEngine.Color _color);
    /*0xec165c*/ void SetGradeOutline(UnityEngine.Color _color);
    /*0xec1724*/ void SetGradeShadow(UnityEngine.Color _color);
    /*0xec17ec*/ void SetPercentColor(UnityEngine.Color _color);
    /*0xec1800*/ void SetPercentOutline(UnityEngine.Color _color);
    /*0xec0ef8*/ void SetGachaPercentData();
    /*0xec1574*/ void SetUnitPercentList();
    /*0xec10cc*/ void SetWishData();
    /*0xec1a90*/ void HandleScrollContent(int index, GachaPercentCharacter obj);
    /*0xec1964*/ void UpdateSize();

    class <>c__DisplayClass32_0
    {
        /*0x10*/ int factionType;
        /*0x18*/ GachaPercentDesc <>4__this;

        /*0xf667c0*/ <>c__DisplayClass32_0();
        /*0xf667c8*/ void <SetWishData>b__0(int data);
    }

    class <>c__DisplayClass32_1
    {
        /*0x10*/ int i;
        /*0x18*/ GachaPercentDesc.<> CS$<>8__locals1;

        /*0xf66864*/ <>c__DisplayClass32_1();
        /*0xf6686c*/ bool <SetWishData>b__1(TableData.TableData_Gachaunitpercent data);
    }
}

class GachaPriceButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_PriceIcon;
    /*0x20*/ LocalizeString m_PriceAmount;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ bool m_bIsSingle;
    /*0x3c*/ int m_nGachaIndex;
    /*0x40*/ int m_nPropertyType;
    /*0x48*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x50*/ bool m_bIsEnough;
    /*0x51*/ bool m_bIsSubPrice;
    /*0x54*/ PTShare.Define.Wealth m_ePriceType;
    /*0x58*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x5c*/ int m_nItemId;
    /*0x60*/ int m_nAmount;

    /*0xec3614*/ GachaPriceButton();
    /*0xec2290*/ void InitializeButton(int _index, TableData.TableData_Gacha _base, bool _isSingle, int _type);
    /*0xec22c4*/ void InitialzePrice();
    /*0xec23ac*/ void SetPriceButton();
    /*0xec2790*/ void OnClick();
    /*0xec2c1c*/ bool InValidClickCondition();
    /*0xec2d54*/ void SendBuyProtocol();
    /*0xec330c*/ void CallbackBuyGacha(string[] args);
    /*0xec30b4*/ bool IsTimeLimit();
    /*0xec2e7c*/ bool IsNotEnough();
    /*0xec25b4*/ bool IsPossiblePrice(string _priceType, string _priceArg1, string _priceArg2);
    /*0xec361c*/ void <OnClick>b__17_0(bool _result);
}

class GachaPropertyCard : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ AtlasImage m_SelectEffect;
    /*0x20*/ AtlasImage m_CardImage;
    /*0x28*/ LocalizeString m_PropertyName;
    /*0x30*/ int m_nPropertyType;
    /*0x38*/ UnityEngine.Color[] m_arrPropertyColor;

    static /*0xec3c38*/ GachaPropertyCard();
    static /*0xec3628*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xec371c*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xec3a7c*/ GachaPropertyCard();
    /*0xec3810*/ void InitializeCard(int _type);
    /*0xec39d0*/ void OnClick();
    /*0xec3a64*/ void OnSelectCard(bool _enable);
}

class GachaResultCard : UnityEngine.MonoBehaviour
{
    static int _commonGrade = 1;
    static int _rareGrade = 2;
    static int _epicGrade = 4;
    /*0x18*/ UnityEngine.GameObject m_Parent;
    /*0x20*/ UnityEngine.GameObject m_CardButton;
    /*0x28*/ UnityEngine.GameObject m_AmountParent;
    /*0x30*/ AtlasImage m_CardBackground;
    /*0x38*/ AtlasImage m_CardFrame;
    /*0x40*/ AtlasImage m_newIconImage;
    /*0x48*/ UnityEngine.UI.Image m_TexutreIllust;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_SpineIllust;
    /*0x58*/ LocalizeString m_CardName;
    /*0x60*/ LocalizeString m_Amount;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_GeneralSkeleton;
    /*0x70*/ Spine.Unity.SkeletonGraphic m_PropertySkeleton;
    /*0x78*/ ParticleBase m_EpicEffect01;
    /*0x80*/ ParticleBase m_EpicEffect02;
    /*0x88*/ ParticleBase m_RareEffect01;
    /*0x90*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x98*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0xa0*/ int m_nIndex;
    /*0xa4*/ bool m_bIsProperty;
    /*0xa8*/ int m_nFactionID;
    /*0xb0*/ System.Action<bool> CallbackOpenCard;
    /*0xb8*/ bool m_bIsPlayingAnimation;
    /*0xb9*/ bool m_bIsOpen;
    /*0xba*/ bool m_bIsSingle;
    /*0xbb*/ bool m_bIsSingleSlideAnimation;
    /*0xbc*/ bool m_bIsPlayVoice;

    /*0xec5c68*/ GachaResultCard();
    /*0xec42dc*/ GachaEpicEventProcess get_m_EpicEventProcess();
    /*0xec4350*/ void InitializeCard(bool _isPropertyCard, int _indexId, int _type, bool isSingle, System.Action<bool> _callback);
    /*0xec4bd8*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xec4c9c*/ void SetGeneralSekeletonAnimation();
    /*0xec4d88*/ void OnClick(bool _bDonEpicEvent);
    /*0xec53bc*/ void OnClickEpicSound(bool _bDonEpicEvent);
    /*0xec571c*/ void CardOpenHandler(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xec58a8*/ void RunEffect01();
    /*0xec5948*/ void RunEffect02();
    /*0xec59b4*/ void RunFinally();
    /*0xec5254*/ void RunFinish(bool playVoice);
    /*0xec5ab0*/ void ShowEpicEffect();
    /*0xec5b24*/ void SetParticleParent(UnityEngine.Transform parent);
    /*0xec4bb8*/ void SetActiveButton(bool _enable);
    /*0xec4a08*/ void SetAlpha(float alpha);
    /*0xec5b94*/ void SetActiveIllust(bool _monsterEnable, bool _spineEnable);
    /*0xec5c00*/ void SetOffVoice();
    /*0xec4aac*/ void SetIllustSpine();
    /*0xec4b94*/ bool IsSlime();
    /*0xec4b70*/ bool IsEpic();
    /*0xec5a8c*/ bool IsRare();
    /*0xec5c08*/ bool IsPlayingAnimation();
    /*0xec5c10*/ bool IsOpen();
    /*0xec5c18*/ int GetIndex();
    /*0xec5c20*/ void CopyInitialize(GachaResultCard _card, bool _bCopyCallback);
    /*0xec51d8*/ void FastShow(bool _bIgnoreEffect);
    /*0xec5ccc*/ void <OnClick>b__34_0();
    /*0xec5cd4*/ void <OnClickEpicSound>b__35_0();
}

class GachaRewardPopup : RewardPopupBase
{
    /*0x60*/ UnityEngine.GameObject m_RewardTitleParent;
    /*0x68*/ ParticleBase m_RewardEffect;
    /*0x70*/ System.Collections.IEnumerator m_ieAnimate;

    /*0xec75a4*/ GachaRewardPopup();
    /*0xec7434*/ void OnCreate();
    /*0xec7438*/ void OnDelete();
    /*0xec743c*/ void OnEnter();
    /*0xec752c*/ void OnFinish();
    /*0xec7530*/ void OnLeave();
    /*0xec7534*/ void OnStart();
    /*0xec74e0*/ void StartAnimate();
    /*0xec7538*/ System.Collections.IEnumerator CoAnimate();
    /*0xec74c8*/ void SetActiveRewardTitle(bool _bEnable);

    class <CoAnimate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaRewardPopup <>4__this;

        /*0xf67550*/ <CoAnimate>d__10(int <>1__state);
        /*0xf6757c*/ void System.IDisposable.Dispose();
        /*0xf67580*/ bool MoveNext();
        /*0xf6764c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67654*/ void System.Collections.IEnumerator.Reset();
        /*0xf67694*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaSelectItem : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ UnityEngine.UI.Image m_BannerImage;
    /*0x20*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x28*/ int <ItemIndex>k__BackingField;

    static /*0xec844c*/ GachaSelectItem();
    static /*0xec75bc*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xec76b0*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xec8444*/ GachaSelectItem();
    /*0xec75ac*/ int get_ItemIndex();
    /*0xec75b4*/ void set_ItemIndex(int value);
    /*0xec77a4*/ void OnEnable();
    /*0xec7b14*/ void OnDisable();
    /*0xec7c44*/ void InitializeItem(TableData.TableData_Gacha _base);
    /*0xec7f48*/ void OnClick();
    /*0xec7fdc*/ void HandlerUpdateFaction();
    /*0xec8224*/ void HandlerChangeProperty(int _type);
}

class GachaSelectScroll : UnityEngine.MonoBehaviour
{
    static int _defArrIndex = 0;
    /*0x18*/ UnityEngine.GameObject m_ItemPrefab;
    /*0x20*/ UnityEngine.Transform m_ItemParent;
    /*0x28*/ System.Collections.Generic.List<GachaSelectItem> m_liSelectItem;
    /*0x30*/ float m_fWidth;
    /*0x34*/ int m_nCurrentItem;
    /*0x38*/ System.Collections.Generic.List<TableData.TableData_Gacha> m_liGachaBase;

    /*0xec9238*/ GachaSelectScroll();
    /*0xec8b68*/ void Awake();
    /*0xec9078*/ void InitializeSelectScroll(int _index);
    /*0xec8bdc*/ void InitializeGachaList();
    /*0xec8ec0*/ void InitializeItem();
    /*0xec907c*/ void SelectItem(int _index);
    /*0xec91b8*/ int GetCurrentIndexNumber(int _index, int _amount);
}

enum GACHA_TAB_TYPE
{
    BAR = 0,
    ATTIC = 1,
    FURNITURE = 2,
}

class GachaTabWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_barTabImage;
    /*0x20*/ AtlasImage m_atticTabImage;
    /*0x28*/ AtlasImage m_funitureTabImage;
    /*0x30*/ AtlasImage m_barFrameImage;
    /*0x38*/ AtlasImage m_atticFrameImage;
    /*0x40*/ AtlasImage m_furnitureFrameImage;
    /*0x48*/ UnityEngine.GameObject m_atticButton;
    /*0x50*/ UnityEngine.GameObject m_furnitureButton;
    /*0x58*/ GACHA_TAB_TYPE m_currTabType;

    /*0xeca414*/ GachaTabWindow();
    /*0xec9b1c*/ void OnEnable();
    /*0xec9b20*/ void InitTab();
    /*0xec9ca8*/ void UpdateIcon();
    /*0xec9ec4*/ void ExitPopup();
    /*0xec9fbc*/ void OnClickBar();
    /*0xeca12c*/ void OnClickAttic();
    /*0xeca2a0*/ void OnClickFurniture();

    class <>c
    {
        static /*0x0*/ GachaTabWindow.<> <>9;
        static /*0x8*/ System.Action <>9__13_0;
        static /*0x10*/ System.Action <>9__14_0;
        static /*0x18*/ System.Action <>9__15_0;

        static /*0xf67d7c*/ <>c();
        /*0xf67ddc*/ <>c();
        /*0xf67de4*/ void <OnClickBar>b__13_0();
        /*0xf67e64*/ void <OnClickAttic>b__14_0();
        /*0xf67ee4*/ void <OnClickFurniture>b__15_0();
    }
}

class ScrollContent_GachaPercentCharacter : ScrollContent<GachaPercentCharacter>
{
    /*0xe1982c*/ ScrollContent_GachaPercentCharacter();
}

class WishListEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnClickEvent;
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_PropertyIcon;
    /*0x30*/ LocalizeString m_PropertyName;
    /*0x38*/ UnityEngine.GameObject m_NewString;
    /*0x40*/ System.Collections.Generic.List<WishSlot> m_liWishSlot;
    /*0x48*/ string[] _arrPropertyLocalize;
    /*0x50*/ int m_nPropertyType;
    /*0x58*/ System.Collections.Generic.List<int> m_liSelectUnit;

    static /*0xe01bb0*/ WishListEntity();
    static /*0xe00810*/ void add_OnClickEvent(System.Action<int> value);
    static /*0xe00904*/ void remove_OnClickEvent(System.Action<int> value);
    /*0xe0192c*/ WishListEntity();
    /*0xe009f8*/ void OnDisable();
    /*0xe00a4c*/ void InitalizeWishList(int _type, bool _isNewHero, string _unitvalue);
    /*0xe00f44*/ void OnClickList();
    /*0xe00fd8*/ void ChangeValueList(int _unitid);
    /*0xe00e58*/ void SetWishSlot();
    /*0xe016ac*/ void SetWishSlotRaycast(bool _enable);
    /*0xe00c0c*/ void SetActiveNewString(bool _enable);
    /*0xe00c24*/ void SetActiveBackground(bool _enable);
    /*0xe0178c*/ void SetFrame(string _path);
    /*0xe00c60*/ void SetPropertyIcon(int _factionId);
    /*0xe00d34*/ void SetPropertyName(int _factionId);
    /*0xe00ac8*/ void SetConvertList(string _unitvalue);
    /*0xe01800*/ bool IsFullList();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ int _unitid;

        /*0xd8c470*/ <>c__DisplayClass15_0();
        /*0xd8c478*/ bool <ChangeValueList>b__0(int x);
    }

    class <>c
    {
        static /*0x0*/ WishListEntity.<> <>9;
        static /*0x8*/ System.Predicate<int> <>9__15_1;
        static /*0x10*/ System.Predicate<int> <>9__24_0;

        static /*0xd8c3f0*/ <>c();
        /*0xd8c450*/ <>c();
        /*0xd8c458*/ bool <ChangeValueList>b__15_1(int x);
        /*0xd8c464*/ bool <IsFullList>b__24_0(int x);
    }
}

class WishListPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<WishListEntity> m_liListEntity;
    /*0x48*/ ScrollContent_HeroWishSlot m_cScrollWishSlot;
    /*0x50*/ UnityEngine.GameObject m_BottomWindow;
    /*0x58*/ bool m_bInitalized;
    /*0x5c*/ int m_nCurSelectType;
    /*0x60*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> m_dicPropertyUnitList;

    /*0xe03434*/ WishListPopup();
    /*0xe01bb4*/ System.Collections.Generic.List<string> get_m_liWishList();
    /*0xe01c08*/ void OnCreate();
    /*0xe01dac*/ void OnDelete();
    /*0xe01e00*/ void OnEnter();
    /*0xe02590*/ void OnStart();
    /*0xe02594*/ void OnFinish();
    /*0xe02598*/ void OnLeave();
    /*0xe027d0*/ void OnExit();
    /*0xe02548*/ void InitalizeWishList();
    /*0xe01c0c*/ void InitalizeDictionary();
    /*0xe02be0*/ void InitalizeScrollContent();
    /*0xe02acc*/ void InitalizeListEntity();
    /*0xe02e14*/ void UpdateListEntity();
    /*0xe02ebc*/ void HandlerScrollUpdate(int _index, WishPropertySlot _entity);
    /*0xe03108*/ void HandlerWishListChangeValue();
    /*0xe0310c*/ void HandlerOpenWishList(int _type);
    /*0xe0327c*/ void HandlerUpdateSelectSlot(TableData.TableData_Unitbase _base);
    /*0xe02c78*/ bool UsedNewHero(int _index);
    /*0xe02a20*/ bool IsFullWishLists();
    /*0xe034ac*/ void <OnExit>b__14_0(bool result);

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int i;

        /*0xd8c508*/ <>c__DisplayClass16_0();
        /*0xd8c510*/ bool <InitalizeDictionary>b__0(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ TableData.TableData_Unitbase _base;

        /*0xd8c5f8*/ <>c__DisplayClass23_0();
        /*0xd8c600*/ bool <HandlerUpdateSelectSlot>b__0(WishPropertySlot x);
    }

    class <>c
    {
        static /*0x0*/ WishListPopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__24_0;

        static /*0xd8c488*/ <>c();
        /*0xd8c4e8*/ <>c();
        /*0xd8c4f0*/ bool <UsedNewHero>b__24_0(TableData.TableData_Unitbase x);
    }
}

class WishPropertySlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<TableData.TableData_Unitbase> OnClickEvent;
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_Character;
    /*0x28*/ AtlasImage m_Frame;
    /*0x30*/ AtlasImage m_PropertyIcon;
    /*0x38*/ AtlasImage m_Fade;
    /*0x40*/ AtlasImage m_originalEpicIcon;
    /*0x48*/ UnityEngine.GameObject m_NewString;
    /*0x50*/ LocalizeString m_name;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;

    static /*0xe03ae0*/ WishPropertySlot();
    static /*0xe02360*/ void add_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    static /*0xe02178*/ void remove_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    /*0xe03ad8*/ WishPropertySlot();
    /*0xe02fdc*/ void InitalizeSlot(TableData.TableData_Unitbase _base);
    /*0xe039bc*/ void OnClick();
    /*0xe03a50*/ TableData.TableData_Unitbase GetBase();
    /*0xe033f8*/ void SetActiveFade();
    /*0xe03ac0*/ void SetActiveFade(bool enable);
    /*0xe03848*/ void SetActiveNewString(bool _enable);
    /*0xe03534*/ void SetProperty(int _type);
    /*0xe03638*/ void SetFrame(int _grade);
    /*0xe03740*/ void SetBackground(int _grade);
    /*0xe03860*/ void SetOriginalEpicClassIcon(int _grade);
    /*0xe0387c*/ void SetName(string _name);
    /*0xe03a58*/ bool IsUseUnitWishList();
}

class WishSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<TableData.TableData_Unitbase> OnClickEvent;
    /*0x18*/ AtlasImage m_Character;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_PlusIcon;
    /*0x38*/ AtlasImage m_originalEpicIcon;
    /*0x40*/ UnityEngine.GameObject m_NewString;
    /*0x48*/ int m_nUnitId;
    /*0x50*/ TableData.TableData_Unitbase m_BaseInfo;

    static /*0xe03e6c*/ WishSlot();
    static /*0xe02454*/ void add_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    static /*0xe0226c*/ void remove_OnClickEvent(System.Action<TableData.TableData_Unitbase> value);
    /*0xe03e5c*/ WishSlot();
    /*0xe014c4*/ void InitalizeSlot(int _unitId);
    /*0xe01774*/ void SetActiveButtonRaycast(bool _enable);
    /*0xe03b44*/ void SetActiveNewString(bool _enable);
    /*0xe03ae4*/ void SetActiveCharacter(bool _enable);
    /*0xe03b5c*/ void SetFrame(int _grade);
    /*0xe03c68*/ void SetBackground(int _grade);
    /*0xe03b2c*/ void SetActivePlusIcon(bool _enable);
    /*0xe03d74*/ void SetOriginalEpicClassIcon(int _grade);
    /*0xe03d90*/ void OnClick();
}

class GuildWarCaptainInfo : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_Active;
    /*0x20*/ UnityEngine.GameObject m_DeActive;
    /*0x28*/ PlayerProfileSlot m_playerSlot;
    /*0x30*/ LocalizeString m_playerName;
    /*0x38*/ System.Collections.Generic.List<GuildWarCaptainStatusEntity> m_liStatusInfo;
    /*0x40*/ UnityEngine.GameObject m_deckReddt;
    /*0x48*/ PTShare.Define.GuildWarPosition eEditPosition;
    /*0x50*/ PTShare.Define.SGuildWarPlayer playerInfo;
    /*0x58*/ System.Action onClickCallback;

    /*0x11111d4*/ GuildWarCaptainInfo();
    /*0x111066c*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, System.Action onClick);
    /*0x11106ec*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SGuildWarPlayer player, System.Action onClick);
    /*0x1111038*/ void SetActiveDeckReddot(bool enable);
    /*0x1111100*/ void OnClick_Formation();
    /*0x11111c0*/ void OnClick_Captain();
    /*0x11111e4*/ void <OnClick_Formation>b__13_0();

    enum GuildWarCaptainStatus
    {
        RECORD = 0,
        MOST_WINS = 1,
        MASTER_SCORE = 2,
        End = 3,
    }
}

class GuildWarCaptainStatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ LocalizeString m_Context;
    /*0x28*/ TooltipData_Desc m_TooltipData;

    /*0x111145c*/ GuildWarCaptainStatusEntity();
    /*0x1111058*/ void InitializeEntity(string iconName, string tooltip, string key, string[] args);
}

class GuildWarEditWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_editTapToggle;
    /*0x20*/ AtlasImage m_captainIcon;
    /*0x28*/ LocalizeString m_captainTitle;
    /*0x30*/ LocalizeString m_legionTitle;
    /*0x38*/ AtlasImage m_legionIcon;
    /*0x40*/ LocalizeString m_captainCount;
    /*0x48*/ LocalizeString m_legionCount;
    /*0x50*/ GuildWarLineBackground[] m_arrGuildWarLineBackground;
    /*0x58*/ ScrollContent_HeroGuildWarEditSlot m_guildEditSlotScroll;
    /*0x60*/ ScrollContent_GuildWarMemberEntity m_guildWarMemberScroll;
    /*0x68*/ LocalizeString m_CaptainSelectDesc;
    /*0x70*/ GuildWarCaptainInfo m_guildCaptainInfo;
    /*0x78*/ UnityEngine.GameObject m_legionParent;
    /*0x80*/ UnityEngine.GameObject m_captainParent;
    /*0x88*/ LocalizeString m_totalPower;
    /*0x90*/ UnityEngine.UI.Button m_cancelButton;
    /*0x98*/ UnityEngine.GameObject m_GuildWarTestButton;
    /*0xa0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> dicUnitInfo;
    /*0xa8*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SHero> dicCurrentPlayer;
    /*0xb0*/ System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer> liCurrentPlayer;
    /*0xb8*/ int nSelectCaptainPlayer;
    /*0xbc*/ PTShare.Define.GuildWarPosition eEditPosition;
    /*0xc0*/ System.Collections.IEnumerator CoEffectUpdater;
    /*0xc8*/ System.Collections.Generic.List<UnityEngine.RectTransform> m_toggleRectTransform;

    /*0x1115e10*/ GuildWarEditWindow();
    /*0x1112360*/ void Awake();
    /*0x1112660*/ void OnEnable();
    /*0x11127a8*/ void OnDisable();
    /*0x1112864*/ void Release();
    /*0x1112ad8*/ void InitializeWindow(PTShare.Define.GuildWarPosition ePosition);
    /*0x1112e94*/ void RefrashWindow(bool bRefreshScroll);
    /*0x1112ea4*/ void Initialize(PTShare.Define.GuildWarPosition ePosition, bool bRefreshScroll);
    /*0x1112adc*/ void InitializeToggle(PTShare.Define.GuildWarPosition ePosition);
    /*0x11139b0*/ void InitializeScroll_Edit(PTShare.Define.GuildWarPosition ePosition, bool bRefreshScroll);
    /*0x1113bd8*/ void HandlerEditScrollContent(int nIndex, HeroGuildWarEditSlot entity);
    /*0x1113d34*/ void InitializeScroll_Captain();
    /*0x1113f38*/ void SetScroll();
    /*0x1114720*/ void HandlerMemberScrollContent(int nIndex, GuildWarMemberEntity entity);
    /*0x1112954*/ void SetActiveCaptain(bool enable);
    /*0x1114a9c*/ bool IsCaptainCategory();
    /*0x1114ab8*/ void OnClick_Confirm();
    /*0x1115958*/ void OnClick_Cancel();
    /*0x1115a1c*/ void OnClick_GuildWarTest();
    /*0x11156fc*/ void SetFixCapation();
    /*0x11139a8*/ int GetCaptainCount();
    /*0x111275c*/ void StartEffect();
    /*0x1115a70*/ System.Collections.IEnumerator CoEffect();
    /*0x1115adc*/ void OnClickCaptainInfoCallback();
    /*0x1115c0c*/ void OnClickCaptainPlayerCallback(int nIndex);
    /*0x11153e0*/ bool IsImpossiablePlayingGuildWarContent();
    /*0x1115c78*/ void HeroGuildWarEditSlot_onLongPressEvent(PTShare.Define.SHero _hero);
    /*0x1115f50*/ void <Awake>b__24_0(TableData.TableData_Unitbase x);
    /*0x11160e0*/ void <InitializeToggle>b__31_0(bool on);
    /*0x111625c*/ void <InitializeToggle>b__31_1(bool on);
    /*0x11163d8*/ void <OnClick_Confirm>b__39_0(bool ok);
    /*0x11163e4*/ void <OnClick_Confirm>b__39_1(bool ok);
    /*0x11163f0*/ void <SetFixCapation>b__42_0();
    /*0x1116420*/ void <OnClickCaptainInfoCallback>b__46_0(System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer> list);

    class <>c
    {
        static /*0x0*/ GuildWarEditWindow.<> <>9;
        static /*0x8*/ System.Comparison<TableData.TableData_Unitbase> <>9__24_1;
        static /*0x10*/ System.Func<System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Unitbase>>, int> <>9__32_0;
        static /*0x18*/ System.Func<PTShare.Define.SGuildWarPlayer, bool> <>9__34_0;
        static /*0x20*/ System.Func<PTShare.Define.SGuildWarPlayer, int> <>9__35_0;
        static /*0x28*/ System.Func<PTShare.Define.SGuildWarPlayer, int> <>9__35_1;
        static /*0x30*/ System.Func<PTShare.Define.SGuildWarPlayer, int> <>9__35_2;
        static /*0x38*/ System.Predicate<PTShare.Define.SGuildWarPlayer> <>9__35_4;
        static /*0x40*/ System.Action<bool> <>9__39_2;

        static /*0xf72b30*/ <>c();
        /*0xf72b90*/ <>c();
        /*0xf72b98*/ int <Awake>b__24_1(TableData.TableData_Unitbase a, TableData.TableData_Unitbase b);
        /*0xf72bf0*/ int <InitializeScroll_Edit>b__32_0(System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> x);
        /*0xf72c44*/ bool <InitializeScroll_Captain>b__34_0(PTShare.Define.SGuildWarPlayer x);
        /*0xf72cb0*/ int <SetScroll>b__35_0(PTShare.Define.SGuildWarPlayer x);
        /*0xf72cc8*/ int <SetScroll>b__35_1(PTShare.Define.SGuildWarPlayer x);
        /*0xf72d3c*/ int <SetScroll>b__35_2(PTShare.Define.SGuildWarPlayer x);
        /*0xf72db0*/ bool <SetScroll>b__35_4(PTShare.Define.SGuildWarPlayer x);
        /*0xf72e24*/ void <OnClick_Confirm>b__39_2(bool ok);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ PTShare.Define.SGuildWarPlayer captain;

        /*0xf72eb8*/ <>c__DisplayClass35_0();
        /*0xf72ec0*/ bool <SetScroll>b__3(PTShare.Define.SGuildWarPlayer x);
    }

    class <CoEffect>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarEditWindow <>4__this;
        /*0x28*/ float <time>5__2;

        /*0xf72f28*/ <CoEffect>d__45(int <>1__state);
        /*0xf72f54*/ void System.IDisposable.Dispose();
        /*0xf72f58*/ bool MoveNext();
        /*0xf73140*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf73148*/ void System.Collections.IEnumerator.Reset();
        /*0xf73188*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf72ef0*/ <>c__DisplayClass49_0();
        /*0xf72ef8*/ bool <HeroGuildWarEditSlot_onLongPressEvent>b__0(PTShare.Define.SStatBonusHero x);
    }
}

class GuildWarLineBackground : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ AtlasImage m_FactionIcon;

    /*0x11183dc*/ GuildWarLineBackground();
    /*0x11129c0*/ void InitializeEntity(PropertyType eType);
}

class GuildWarMatchEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_EmblemSlot;
    /*0x20*/ LocalizeString m_GuildName;
    /*0x28*/ LocalizeString m_Power;
    /*0x30*/ LocalizeString m_Point;
    /*0x38*/ LocalizeString m_BtnText;
    /*0x40*/ AtlasImage m_BtnIcon;
    /*0x48*/ UnityEngine.UI.Button m_Button;
    /*0x50*/ PTShare.Define.SGuildWar guildInfo;

    /*0x111885c*/ GuildWarMatchEntity();
    /*0x11183e4*/ void InitializeEntity(PTShare.Define.SGuildWar data);
    /*0x1118624*/ void OnClick_Battle();
    /*0x1118864*/ void <OnClick_Battle>b__9_0(ServerProtocol.ResGuildWarChoice res);
}

class GuildWarRewardDetailEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_profileParent;
    /*0x20*/ PlayerProfileSlot m_profileSlot;
    /*0x28*/ AtlasImage m_rankIcon;
    /*0x30*/ LocalizeString m_rankCount;
    /*0x38*/ LocalizeString m_nickname;
    /*0x40*/ LocalizeString m_score;
    /*0x48*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;

    /*0x10f274c*/ GuildWarRewardDetailEntity();
    /*0x10f2184*/ void Release();
    /*0x10f22e4*/ void InitializeEntity(int _nRank, PTShare.Define.SContribution _playerinfo, string _strRewards);
    /*0x10f23ec*/ void InitializeEntity(int _nRank, string _strRewards);
    /*0x10f22e8*/ void Initialize(int _nRank, PTShare.Define.SContribution _playerinfo, string _strRewards);
    /*0x10f25b0*/ void SetRanks(int _nRank);
    /*0x10f23f8*/ void SetRewards(string rewards);

    class <>c
    {
        static /*0x0*/ GuildWarRewardDetailEntity.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__7_0;

        static /*0xf73ac8*/ <>c();
        /*0xf73b28*/ <>c();
        /*0xf73b30*/ void <Release>b__7_0(ItemTableRewardSlot x);
    }
}

class GuildWarSeasonTime : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString timeText;
    /*0x20*/ System.Collections.IEnumerator ieUpdater;
    /*0x28*/ System.Action onEndTimeCallback;
    /*0x30*/ System.Action onTickTimeCallback;

    /*0x10f4644*/ GuildWarSeasonTime();
    /*0x10f44ac*/ bool get_PossiableGuildWarBattle();
    /*0x10f4500*/ void Awake();
    /*0x10f3990*/ void InitializeTime(System.Action endTimeCallback, System.Action tickCallback);
    /*0x10f455c*/ void StartTimer();
    /*0x10f45a8*/ void StopTimer();
    /*0x10f45d8*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarSeasonTime <>4__this;
        /*0x28*/ bool <IsEndCheck>5__2;

        /*0xf73e48*/ <CoUpdate>d__10(int <>1__state);
        /*0xf73e74*/ void System.IDisposable.Dispose();
        /*0xf73e78*/ bool MoveNext();
        /*0xf74324*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf7432c*/ void System.Collections.IEnumerator.Reset();
        /*0xf7436c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroGuildWarEditSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x18*/ LocalizeString m_Nickname;
    /*0x20*/ HeroSlotInventory m_Slot;
    /*0x28*/ AtlasImage[] m_arrPositionIcon;
    /*0x30*/ AtlasImage m_selectEffect;
    /*0x38*/ TweenImageColor m_tweenATKColor;
    /*0x40*/ TweenImageColor m_tweenDEFColor;
    /*0x48*/ TableData.TableData_Unitbase tableInfo;
    /*0x50*/ PTShare.Define.SHero heroInfo;
    /*0x58*/ PTShare.Define.GuildWarPosition eEditPosition;

    static /*0xf34c58*/ HeroGuildWarEditSlot();
    static /*0xf33f38*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf3402c*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf34c48*/ HeroGuildWarEditSlot();
    /*0xf34120*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, TableData.TableData_Unitbase unitInfo, PTShare.Define.SHero data, bool bNonEffect);
    /*0xf3463c*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SHero data);
    /*0xf347b4*/ void InitializeEntity();
    /*0xf345cc*/ void SetActiveEffect(bool enable);
    /*0xf345a8*/ void SetActiveSlot(bool enable);
    /*0xf34804*/ void SetActiveBadge(PTShare.Define.GuildWarPosition ePosition);
    /*0xf3447c*/ void SetActiveBadge();
    /*0xf34884*/ void SetTweenColorTime(float fTime);
    /*0xf34924*/ void CustomLongPressEvent();
    /*0xf349b8*/ void CallbackSelectSlot(PTShare.Define.SHero hero);
    /*0xf34bd8*/ void CallbackSelectDisableSlot(TableData.TableData_Unitbase unit);

    class <>c
    {
        static /*0x0*/ HeroGuildWarEditSlot.<> <>9;
        static /*0x8*/ System.Func<AtlasImage, bool> <>9__12_0;
        static /*0x10*/ System.Func<AtlasImage, bool> <>9__13_0;

        static /*0x1058bc0*/ <>c();
        /*0x1058c20*/ <>c();
        /*0x1058c28*/ bool <InitializeEntity>b__12_0(AtlasImage x);
        /*0x1058c44*/ bool <InitializeEntity>b__13_0(AtlasImage x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ HeroGuildWarEditSlot <>4__this;
        /*0x18*/ PTShare.Define.SHero hero;

        /*0x1058c60*/ <>c__DisplayClass21_0();
        /*0x1058c68*/ void <CallbackSelectSlot>b__0(System.Collections.Generic.List<PTShare.Define.SLegionHero> list);
    }
}

class HeroGuildWarSelectHeroSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x18*/ LocalizeString m_Nickname;
    /*0x20*/ HeroSlotInventory m_Slot;
    /*0x28*/ AtlasImage[] m_arrPositionIcon;
    /*0x30*/ AtlasImage m_warningIcon;
    /*0x38*/ AtlasImage m_selectEffect;
    /*0x40*/ PTShare.Define.SLegionHero heroInfo;
    /*0x48*/ System.Action onChangeCallback;
    /*0x50*/ System.Action<int, string> onFailCallback;
    /*0x58*/ PTShare.Define.GuildWarPosition eEditPosition;

    static /*0xf355a0*/ HeroGuildWarSelectHeroSlot();
    static /*0xf34c5c*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf34d50*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf35590*/ HeroGuildWarSelectHeroSlot();
    /*0xf34e44*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SLegionHero data, System.Action onChange, System.Action<int, string> onFail);
    /*0xf352c4*/ void SetActiveShade(bool enable);
    /*0xf35194*/ void SetActiveBadge();
    /*0xf352e4*/ void CustomLongPressEvent();
    /*0xf35378*/ void CallbackSelectSlot(PTShare.Define.SHero hero);
    /*0xf354a4*/ void SetFormGuildWar();
    /*0xf355a4*/ void <SetFormGuildWar>b__17_0(PTShare.Define.SHero already, long alreadyId);
    /*0xf35710*/ void <SetFormGuildWar>b__17_2();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ PTShare.Define.SLegionHero data;

        /*0x1058d0c*/ <>c__DisplayClass12_0();
        /*0x1058d14*/ bool <InitializeEntity>b__0(PTShare.Define.SStatBonusHero x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.SHero already;
        /*0x18*/ long alreadyId;
        /*0x20*/ HeroGuildWarSelectHeroSlot <>4__this;

        /*0x1058d44*/ <>c__DisplayClass17_0();
        /*0x1058d4c*/ void <SetFormGuildWar>b__1();
    }
}

class HeroGuildWarUnSelectHeroSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x18*/ LocalizeString m_Nickname;
    /*0x20*/ HeroSlotInventory m_Slot;
    /*0x28*/ AtlasImage[] m_arrPositionIcon;
    /*0x30*/ AtlasImage m_selectEffect;
    /*0x38*/ PTShare.Define.SLegionHero heroInfo;
    /*0x40*/ System.Action<PTShare.Define.SHero> onChangeCallback;
    /*0x48*/ PTShare.Define.GuildWarPosition eEditPosition;

    static /*0xf35acc*/ HeroGuildWarUnSelectHeroSlot();
    static /*0xf3576c*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf35860*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf35abc*/ HeroGuildWarUnSelectHeroSlot();
    /*0xf35954*/ void InitializeEntity(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SLegionHero data, bool bIsSelected, System.Action<PTShare.Define.SHero> onChange);
    /*0xf35a28*/ void CustomLongPressEvent();
}

class HeroBook : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ImageBackground;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_ImageCharacter;
    /*0x28*/ AtlasImage m_ImageFrame;
    /*0x30*/ AtlasImage m_ImagePropertyIcon;
    /*0x38*/ AtlasImage m_Fade;
    /*0x40*/ AtlasImage m_RedDot;
    /*0x48*/ LocalizeString m_UnitName;
    /*0x50*/ UnityEngine.Color[] m_ActiveColorList;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0xf2cc74*/ HeroBook();
    /*0xf2c334*/ void OnEnable();
    /*0xf2c40c*/ void OnDisable();
    /*0xf2c4b4*/ void Init(TableData.TableData_Unitbase _base);
    /*0xf2c644*/ void SetBackground(AtlasType _type, int _propertyid);
    /*0xf2c71c*/ void SetFrame(AtlasType _type, int _propertyid);
    /*0xf2c7f4*/ void SetPropertyIcon(AtlasType _type, int _propertyid);
    /*0xf2c8cc*/ void SetCharacterImage(int _id);
    /*0xf2c924*/ void OwnHeroCheck();
    /*0xf2ca64*/ int GetProperty();
    /*0xf2ca80*/ void OpenBook();
}

class HeroBookList : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_BookPrefab;
    /*0x20*/ AtlasImage m_gradeNameCardImage;
    /*0x28*/ UnityEngine.RectTransform m_ListParent;
    /*0x30*/ UnityEngine.UI.GridLayoutGroup m_GridLayout;
    /*0x38*/ UnityEngine.UI.ContentSizeFitter m_SizeFitter;
    /*0x40*/ System.Collections.Generic.List<HeroBook> m_liHeroBookList;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_liHeroList;
    /*0x50*/ bool IsInitalize;

    /*0xf2d4a8*/ HeroBookList();
    /*0xf2cd48*/ bool get_Initalized();
    /*0xf2cd50*/ void InitalizeHeroBook(int _grade);
    /*0xf2cd64*/ void SetHeroBookList(int _grade);
    /*0xf2cd60*/ void RefreshHeroBookList();
    /*0xf2cfc4*/ void HeroBookInitalize();
    /*0xf2d1c8*/ void InitBookEntity();
    /*0xf2d384*/ void SortHeroList();

    class <>c
    {
        static /*0x0*/ HeroBookList.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__11_0;
        static /*0x10*/ System.Comparison<TableData.TableData_Unitbase> <>9__15_0;

        static /*0x1057df0*/ <>c();
        /*0x1057e50*/ <>c();
        /*0x1057e58*/ bool <SetHeroBookList>b__11_0(TableData.TableData_Unitbase x);
        /*0x1057f20*/ int <SortHeroList>b__15_0(TableData.TableData_Unitbase a, TableData.TableData_Unitbase b);
    }
}

class HeroBookPage : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.LoopScrollRect m_cLoopVerticalHeroList;
    /*0x20*/ System.Collections.Generic.List<int> m_liViewGrade;

    /*0xf2dbd4*/ HeroBookPage();
    /*0xf2d520*/ void InitBook();
    /*0xf2d614*/ void InitalizeEvent();
    /*0xf2d978*/ void DeleteEvent();
    /*0xf2dac0*/ void HandleHeroBookEvent(int _type);
    /*0xf2db2c*/ void HandleHeroBookListUpdate(int _index, UnityEngine.Component _slot);
}

class HeroCharcterWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroNameWindow m_cHeroNameWindow;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x28*/ PTShare.Define.SHero m_HeroInfo;
    /*0x30*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0xf30108*/ HeroCharcterWindow();
    /*0xf2f794*/ void OnEnable();
    /*0xf2f7a0*/ void OnDisable();
    /*0xf2f7ac*/ void OnDestroy();
    /*0xf2f7b8*/ void Init(PTShare.Define.SHero _sHero, Spine.Unity.SkeletonDataAsset _asset, bool _starAnimation);
    /*0xf2fa1c*/ void Init(TableData.TableData_Unitbase _unitBase, Spine.Unity.SkeletonDataAsset _asset);
    /*0xf2f898*/ void InitalizeCharacter(Spine.Unity.SkeletonDataAsset _asset, int tableID);
    /*0xf2facc*/ void InitalizeCharacter(Spine.Unity.SkeletonDataAsset _asset, TableData.TableData_Unitbase _unitBase);
    /*0xf2fc40*/ void Refresh();
    /*0xf2fd74*/ void BindEvent();
    /*0xf2ff2c*/ void RemoveEvent();
    /*0xf300d4*/ void HandlerChangeEvent(PTShare.Define.SHero _hero);
}

class HeroInventoryPage : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_HeroSlot m_cScrollContentHeroSlot;
    /*0x20*/ HeroPropertySlotWindow m_cPropertyGroup;
    /*0x28*/ PropertyType m_eCurPropertyType;

    /*0xf3611c*/ HeroInventoryPage();
    /*0xf35ad0*/ void OnEnable();
    /*0xf35d7c*/ void OnDisable();
    /*0xf35fa8*/ void OnDestroy();
    void OnEnter();
    void OnLeave();
    void OnDelete();
    /*0xf3606c*/ void Start();
    void InitInventory();
    /*0xf36078*/ void InitPropertyGroup();
    /*0xf36108*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3610c*/ void HandleChangeProperty(int _type);
}

class HeroInventoryPage_Composition_GuildWar : HeroInventoryPage_Composition_New
{
    /*0xf368f8*/ HeroInventoryPage_Composition_GuildWar();
    /*0xf36124*/ void InitInventory();
    /*0xf36290*/ void SetHeroList();
    /*0xf3640c*/ void SetInventorySlotWithTroopSetting(HeroSlotInventory _slot, TroopSetting _setting);
    /*0xf36534*/ void HandleHeroSlotUpdate(int _index, HeroSlotInventory _slotInventoryBase);
}

class HeroInventoryPage_Composition_New : HeroInventoryPage
{
    /*0x30*/ System.Action<PTShare.Define.SHero> OnClickUnit;
    /*0x38*/ Battle.HeroSelectValue SelectMercenaryInfo;
    /*0x40*/ HeroTroopPopup_New m_TroopPopup;
    /*0x48*/ ScrollContent_HeroSlotInventory m_cScrollContentHeroSlotInventory;
    /*0x50*/ HeroSlotInventory m_baseHeroSlotInventoryPrefab;
    /*0x58*/ HeroSlotMaze m_baseHeroSlotMazePrefab;
    /*0x60*/ LocalizeString m_emptyText;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHero> m_lisHero;
    /*0x70*/ int m_nHeroSlotCount;
    /*0x78*/ HeroSlotInventory m_tmpHeroSlot;
    /*0x80*/ bool m_bLoadMercenary;
    /*0x84*/ Battle.GameModeType m_eCurGameMode;

    /*0xf368fc*/ HeroInventoryPage_Composition_New();
    /*0xf36974*/ System.Collections.Generic.List<HeroSlotInventory> get_GetInventorySlotList();
    /*0xf369c0*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf36a30*/ void Init(Battle.GameModeType _eGameMode);
    /*0xf36a78*/ void SetLoadMercenary();
    /*0xf36ab0*/ void InitPropertyGroup();
    /*0xf36154*/ void InitInventory();
    /*0xf36bec*/ void SetHeroList();
    /*0xf366f8*/ void RenewInventory(bool _bSetAllTroopSettings);
    /*0xf364dc*/ void SetInventorySlotWithTroopSetting(HeroSlotInventory _slot, TroopSetting _setting);
    /*0xf3710c*/ void SetInventoryPropertyType(PropertyType _ePropertyType);
    /*0xf3711c*/ void RefreshInventory();
    /*0xf37128*/ void ResetSelectAll();
    /*0xf37220*/ bool IsUseMercenaryHero();
    /*0xf370f8*/ bool IsConditionHero();
    /*0xf37348*/ void HandleHeroSlotUpdate(int _index, HeroSlotInventory _slotInventoryBase);
    /*0xf37504*/ void SetConditionHero(int _index, HeroSlotMaze heroSlotMaze);
    /*0xf37830*/ void OnEnter();
    /*0xf37844*/ void OnLeave();
    /*0xf37858*/ void OnDelete();
    /*0xf3785c*/ bool <SetHeroList>b__19_0(PTShare.Define.SMercenaryRent w);
    /*0xf3788c*/ void <RenewInventory>b__20_0(int tableID, int heroID, long playerID);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_Composition_New.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHero, bool> <>9__25_0;

        static /*0x1058e44*/ <>c();
        /*0x1058ea4*/ <>c();
        /*0x1058eac*/ bool <IsUseMercenaryHero>b__25_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ HeroInventoryPage_Composition_New <>4__this;
        /*0x18*/ int _index;
        /*0x20*/ ConditionHeroData heroData;

        /*0x1058f28*/ <>c__DisplayClass28_0();
        /*0x1058f30*/ bool <SetConditionHero>b__2(ConditionHeroData x);
        /*0x1058fd0*/ void <SetConditionHero>b__0();
        /*0x1059154*/ void <SetConditionHero>b__1();
    }
}

class HeroInventoryPage_Dismiss : HeroInventoryPage
{
    /*0x30*/ UnityEngine.GameObject m_EmptyText;
    /*0x38*/ LocalizeString m_HeroCountText;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liLevelHero;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liSelectHero;
    /*0x50*/ System.Action OnSelectSlotEvent;

    /*0xf38854*/ HeroInventoryPage_Dismiss();
    /*0xf378b4*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3793c*/ void add_OnSelectSlotEvent(System.Action value);
    /*0xf379dc*/ void remove_OnSelectSlotEvent(System.Action value);
    /*0xf37a7c*/ void OnEnter();
    /*0xf37b8c*/ void OnLeave();
    /*0xf37c48*/ void OnDelete();
    /*0xf30f74*/ void InitInventory(System.Action onSelectSlotCallback);
    /*0xf37c50*/ void InitInventory();
    /*0xf37ff4*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf38204*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf380e4*/ void SetSelectSlot(int nIndex, HeroSlot slotbase);
    /*0xf38520*/ void SetActiveSelect(int _index, HeroSlot _slot, bool isSelectCallback);
    /*0xf38458*/ void SetDeActiveSelect(int _index, HeroSlot _slot, bool isSelectCallback);
    /*0xf31384*/ bool IsSelectMoreHero();
    /*0xf385d8*/ System.Collections.Generic.List<PTShare.Define.SHero> GetSelectHeroList();
    /*0xf385e0*/ void SelectAll();
    /*0xf3191c*/ void SelectPropertys(System.Collections.Generic.List<PropertyType> propertyTypes);
    /*0xf3184c*/ void UnSelectHero(PTShare.Define.SHero hero);
    /*0xf38780*/ void HeroSlot_OnChangeHeroEvent(HeroSlot obj);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_Dismiss.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHero, bool> <>9__13_0;
        static /*0x10*/ System.Comparison<PTShare.Define.SHero> <>9__13_1;
        static /*0x18*/ System.Func<PTShare.Define.SHero, bool> <>9__21_0;

        static /*0x10592ac*/ <>c();
        /*0x105930c*/ <>c();
        /*0x1059314*/ bool <InitInventory>b__13_0(PTShare.Define.SHero w);
        /*0x1059374*/ int <InitInventory>b__13_1(PTShare.Define.SHero a, PTShare.Define.SHero b);
        /*0x10593f4*/ bool <SelectAll>b__21_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x1059414*/ <>c__DisplayClass15_0();
        /*0x105941c*/ bool <CallbackEntityEvent>b__0(PTShare.Define.SHero x);
        /*0x105944c*/ bool <CallbackEntityEvent>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ HeroSlot slotbase;

        /*0x105947c*/ <>c__DisplayClass16_0();
        /*0x1059484*/ bool <SetSelectSlot>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ System.Collections.Generic.List<PropertyType> propertyTypes;

        /*0x10594bc*/ <>c__DisplayClass22_0();
        /*0x10594c4*/ bool <SelectPropertys>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass22_1
    {
        /*0x10*/ PTShare.Define.SHero x;

        /*0x10595d4*/ <>c__DisplayClass22_1();
        /*0x10595dc*/ bool <SelectPropertys>b__1(PropertyType f);
    }
}

class HeroInventoryPage_Inven : HeroInventoryPage
{
    /*0x30*/ LocalizeString m_cHeroAmountText;
    /*0x38*/ LocalizeString m_NoHeroText;

    /*0xf39818*/ HeroInventoryPage_Inven();
    /*0xf388ec*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf38974*/ void InitalizeEvent();
    /*0xf38b44*/ void DeleteEvent();
    /*0xf38ef4*/ void InitInventory();
    /*0xf39030*/ void OnClickSlotButton();
    /*0xf3924c*/ void HandleInventoryEvent(int _type);
    /*0xf39414*/ void HandleIncreaseSlotEvent();
    /*0xf39498*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf39350*/ void SetAmountText(int _amount);
    /*0xf39648*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf39150*/ int GetMaxSlotAmount();
    /*0xf392d0*/ int GetHeroCount();
    /*0xf390d0*/ int GetSlotAmount();
    /*0xf397dc*/ void HandleChangeHeroEvent();
    /*0xf397e8*/ void OnEnter();
    /*0xf39810*/ void OnLeave();
    /*0xf39814*/ void OnDelete();
}

class HeroInventoryPage_Rent : HeroInventoryPage
{
    /*0x30*/ LocalizeString m_EmptyText;
    /*0x38*/ System.Collections.Generic.List<MercenaryPlayerSet> m_curRepresentativeMercenary;
    /*0x40*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<MercenaryPlayerSet>> m_dicPropertyRepresentative;
    /*0x48*/ int _nCurType;
    /*0x50*/ MercenaryPlayerSet _MercnearySet;

    /*0xf39ee0*/ HeroInventoryPage_Rent();
    /*0xf39820*/ void InitializePage();
    /*0xf398c0*/ void InitializeDictionary();
    /*0xf39a60*/ void CheckVaildDictionary(int _nType);
    /*0xf39b44*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf39bd0*/ void InitInventory();
    /*0xf39d10*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf39ed4*/ void OnEnter();
    /*0xf39ed8*/ void OnLeave();
    /*0xf39edc*/ void OnDelete();
}

class HeroInventoryPage_Reset : HeroInventoryPage
{
    static /*0x0*/ System.Action<bool, PTShare.Define.SHero> OnSelectSlotEvent;
    /*0x30*/ UnityEngine.GameObject m_EmptyText;
    /*0x38*/ LocalizeString m_HeroCountText;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liLevelHero;
    /*0x48*/ HeroWagonType eWagonType;
    /*0x50*/ PTShare.Define.SHero selectHero;

    static /*0xf3ba40*/ HeroInventoryPage_Reset();
    static /*0xf3a020*/ void add_OnSelectSlotEvent(System.Action<bool, PTShare.Define.SHero> value);
    static /*0xf3a114*/ void remove_OnSelectSlotEvent(System.Action<bool, PTShare.Define.SHero> value);
    static /*0xf3ba44*/ bool <InitInventory>g__Check|14_0(PTShare.Define.SHero y);
    /*0xf3b9c8*/ HeroInventoryPage_Reset();
    /*0xf39f98*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3a208*/ void OnEnter();
    /*0xf3a344*/ void OnLeave();
    /*0xf3a400*/ void OnDelete();
    /*0xf3a4f8*/ void InitInventory(HeroWagonType eType);
    /*0xf3a570*/ void InitInventory();
    /*0xf3b0d8*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf3b2c0*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3b1c8*/ void SetActiveSelect(int _index, HeroSlot _slot);
    /*0xf3b680*/ PTShare.Define.SHero GetSelectHero();
    /*0xf3b688*/ bool VaildSelectHero();
    /*0xf3b6ac*/ void ResetSelectHero();
    /*0xf3b7d4*/ void HandlerChangeHeroEvent(HeroSlot obj);
    /*0xf3ba98*/ bool <ResetSelectHero>b__20_0(PTShare.Define.SHero x);
    /*0xf3bac8*/ bool <HandlerChangeHeroEvent>b__21_0(PTShare.Define.SHero x);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_Reset.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SHero> <>9__14_1;
        static /*0x10*/ System.Func<PTShare.Define.SHero, bool> <>9__14_2;
        static /*0x18*/ System.Func<PTShare.Define.SHero, int> <>9__14_3;
        static /*0x20*/ System.Func<PTShare.Define.SHero, int> <>9__14_4;
        static /*0x28*/ System.Func<PTShare.Define.SHero, int> <>9__14_5;
        static /*0x30*/ System.Func<PTShare.Define.SHero, int> <>9__14_6;
        static /*0x38*/ System.Func<PTShare.Define.SHero, int> <>9__14_7;
        static /*0x40*/ System.Func<PTShare.Define.SHero, bool> <>9__14_12;
        static /*0x48*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, bool> <>9__14_8;
        static /*0x50*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, int> <>9__14_9;
        static /*0x58*/ System.Func<PTShare.Define.SHero, int> <>9__14_13;
        static /*0x60*/ System.Func<PTShare.Define.SHero, int> <>9__14_14;
        static /*0x68*/ System.Func<PTShare.Define.SHero, int> <>9__14_15;
        static /*0x70*/ System.Func<PTShare.Define.SHero, bool> <>9__14_16;
        static /*0x78*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, PTShare.Define.SHero> <>9__14_10;
        static /*0x80*/ System.Comparison<PTShare.Define.SHero> <>9__14_11;

        static /*0x1059600*/ <>c();
        /*0x1059660*/ <>c();
        /*0x1059668*/ bool <InitInventory>b__14_1(PTShare.Define.SHero x);
        /*0x105969c*/ bool <InitInventory>b__14_2(PTShare.Define.SHero w);
        /*0x1059700*/ int <InitInventory>b__14_3(PTShare.Define.SHero o);
        /*0x1059718*/ int <InitInventory>b__14_4(PTShare.Define.SHero x);
        /*0x1059730*/ int <InitInventory>b__14_5(PTShare.Define.SHero x);
        /*0x1059748*/ int <InitInventory>b__14_6(PTShare.Define.SHero x);
        /*0x1059760*/ int <InitInventory>b__14_7(PTShare.Define.SHero x);
        /*0x1059778*/ bool <InitInventory>b__14_8(System.Linq.IGrouping<int, PTShare.Define.SHero> x);
        /*0x105989c*/ bool <InitInventory>b__14_12(PTShare.Define.SHero y);
        /*0x1059900*/ int <InitInventory>b__14_9(System.Linq.IGrouping<int, PTShare.Define.SHero> k);
        /*0x10599a8*/ PTShare.Define.SHero <InitInventory>b__14_10(System.Linq.IGrouping<int, PTShare.Define.SHero> v);
        /*0x1059d18*/ int <InitInventory>b__14_13(PTShare.Define.SHero x);
        /*0x1059d30*/ int <InitInventory>b__14_14(PTShare.Define.SHero x);
        /*0x1059d48*/ int <InitInventory>b__14_15(PTShare.Define.SHero x);
        /*0x1059d60*/ bool <InitInventory>b__14_16(PTShare.Define.SHero x);
        /*0x1059d80*/ int <InitInventory>b__14_11(PTShare.Define.SHero a, PTShare.Define.SHero b);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ HeroInventoryPage_Reset <>4__this;

        /*0x1059dec*/ <>c__DisplayClass16_0();
        /*0x1059df4*/ bool <CallbackEntityEvent>b__0(PTShare.Define.SHero x);
        /*0x1059e24*/ bool <CallbackEntityEvent>b__1(PTShare.Define.SHero x);
    }
}

class HeroInventoryPage_RunGame : HeroInventoryPage
{
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHero> liTopHeroes;
    /*0x38*/ PTShare.Define.SHero selectHero;
    /*0x40*/ System.Action OnSelectCallback;

    /*0xf3cbbc*/ HeroInventoryPage_RunGame();
    /*0xf3baf8*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3bb80*/ void InitalizeEvent();
    /*0xf3bc88*/ void DeleteEvent();
    /*0xf3bd88*/ void InitInventory();
    /*0xf3c734*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf3c8b4*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3c9e4*/ void HandleChangeHeroEvent();
    /*0xf3c9f0*/ PTShare.Define.SHero GetHero();
    /*0xf3c360*/ void SetDefaultHero();
    /*0xf3c9f8*/ void SetHero(PTShare.Define.SHero hero);
    /*0xf3ca04*/ void SetSelectCallback(System.Action callback);
    /*0xf3ca0c*/ void ClearSelectCallback();
    /*0xf3ca14*/ void OnEnter();
    /*0xf3ca5c*/ void OnLeave();
    /*0xf3ca60*/ void OnDelete();
    /*0xf3ca64*/ void RenewTimers(System.Collections.Generic.List<RunGameManager.RunHeroSpanTime> _lisRunHeroCooltime);
    /*0xf3cc34*/ void <CallbackEntityEvent>b__9_0(HeroSlot x);

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_RunGame.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHero, int> <>9__7_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, int> <>9__7_1;
        static /*0x18*/ System.Func<PTShare.Define.SHero, int> <>9__7_4;
        static /*0x20*/ System.Func<PTShare.Define.SHero, int> <>9__7_5;
        static /*0x28*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, PTShare.Define.SHero> <>9__7_2;
        static /*0x30*/ System.Predicate<PTShare.Define.SHero> <>9__7_3;
        static /*0x38*/ System.Func<PTShare.Define.SHero, int> <>9__12_4;
        static /*0x40*/ System.Func<PTShare.Define.SHero, int> <>9__12_3;

        static /*0x1059e5c*/ <>c();
        /*0x1059ebc*/ <>c();
        /*0x1059ec4*/ int <InitInventory>b__7_0(PTShare.Define.SHero x);
        /*0x1059edc*/ int <InitInventory>b__7_1(System.Linq.IGrouping<int, PTShare.Define.SHero> k);
        /*0x1059f84*/ PTShare.Define.SHero <InitInventory>b__7_2(System.Linq.IGrouping<int, PTShare.Define.SHero> v);
        /*0x105a17c*/ int <InitInventory>b__7_4(PTShare.Define.SHero x);
        /*0x105a194*/ int <InitInventory>b__7_5(PTShare.Define.SHero x);
        /*0x105a1ac*/ bool <InitInventory>b__7_3(PTShare.Define.SHero x);
        /*0x105a1cc*/ int <SetDefaultHero>b__12_4(PTShare.Define.SHero y);
        /*0x105a1e4*/ int <SetDefaultHero>b__12_3(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ HeroInventoryPage_RunGame <>4__this;
        /*0x18*/ bool isReturn;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHero> heroList;

        /*0x105a1fc*/ <>c__DisplayClass12_0();
        /*0x105a204*/ void <SetDefaultHero>b__0(HeroSlot x);
        /*0x105a334*/ void <SetDefaultHero>b__1(HeroSlot x);
        /*0x105a3f8*/ bool <SetDefaultHero>b__2(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ System.Collections.Generic.List<RunGameManager.RunHeroSpanTime> _lisRunHeroCooltime;

        /*0x105a594*/ <>c__DisplayClass19_0();
        /*0x105a59c*/ void <RenewTimers>b__0(HeroSlot x);
    }

    class <>c__DisplayClass19_1
    {
        /*0x10*/ HeroSlotInventory_RunGame slot;

        /*0x105a75c*/ <>c__DisplayClass19_1();
        /*0x105a764*/ bool <RenewTimers>b__1(RunGameManager.RunHeroSpanTime y);
    }
}

class HeroInventoryPage_SelectResonance : HeroInventoryPage
{
    /*0x30*/ UnityEngine.GameObject m_EmptyText;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liResonanceHero;
    /*0x40*/ PTShare.Define.SHero selectHero;

    /*0xf3d660*/ HeroInventoryPage_SelectResonance();
    /*0xf3cd20*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_liHeroList();
    /*0xf3cda8*/ void OnEnter();
    /*0xf3ce04*/ void OnLeave();
    /*0xf3ce08*/ void OnDelete();
    /*0xf3ce0c*/ void InitInventory();
    /*0xf3d354*/ void HandleHeroSlotUpdate(int _index, HeroSlot slotBase);
    /*0xf3d508*/ void CallbackEntityEvent(PTShare.Define.SHero _hero);
    /*0xf3d164*/ void SelectHero(PTShare.Define.SHero _hero);
    /*0xf3d444*/ void SetActiveSelect(int _index, HeroSlot _slot);
    /*0xf3d50c*/ PTShare.Define.SHero GetSelectHero();
    /*0xf3d514*/ bool VaildSelectHero();
    /*0xf3d538*/ void ResetSelectHero();
    /*0xf3d6d8*/ bool <ResetSelectHero>b__15_0(PTShare.Define.SHero x);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHero> _liMostHero;

        /*0x105a89c*/ <>c__DisplayClass8_0();
        /*0x105a8a4*/ bool <InitInventory>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass8_1
    {
        /*0x10*/ PTShare.Define.SHero x;

        /*0x105a9b0*/ <>c__DisplayClass8_1();
        /*0x105a9b8*/ bool <InitInventory>b__2(PTShare.Define.SHero y);
    }

    class <>c
    {
        static /*0x0*/ HeroInventoryPage_SelectResonance.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SHero> <>9__8_0;

        static /*0x105a7a4*/ <>c();
        /*0x105a804*/ <>c();
        /*0x105a80c*/ bool <InitInventory>b__8_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ HeroInventoryPage_SelectResonance <>4__this;

        /*0x105a82c*/ <>c__DisplayClass11_0();
        /*0x105a834*/ bool <SelectHero>b__0(PTShare.Define.SHero x);
        /*0x105a864*/ bool <SelectHero>b__1(PTShare.Define.SHero x);
    }
}

class HeroPropertySlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnChangeCallBackProperty;
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ ParticleBase m_ParticleEffect;
    /*0x30*/ int m_nPropertyType;
    /*0x34*/ bool m_disableButton;

    static /*0x122bfe0*/ HeroPropertySlot();
    static /*0x1229cac*/ void add_OnChangeCallBackProperty(System.Action<int> value);
    static /*0x1229bb8*/ void remove_OnChangeCallBackProperty(System.Action<int> value);
    /*0x122bfd8*/ HeroPropertySlot();
    /*0x122bcdc*/ int get_PropertyType();
    /*0x122bce4*/ void InitProperty(int _type);
    /*0x122bdd0*/ void SelectProperty(bool _enable);
    /*0x122be9c*/ void SetDisablebutton(bool _disable);
    /*0x122bea8*/ void SetColorObject(UnityEngine.Color _color);
    /*0x122bcec*/ void SetIcon();
    /*0x122bf3c*/ void OnClick();
}

class HeroPropertySlotWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroPropertySlot> m_liHeroPropertySlot;
    /*0x20*/ int m_nCurProperty;
    /*0x24*/ bool m_fixedProperty;

    /*0x122c680*/ HeroPropertySlotWindow();
    /*0x122aa94*/ void InitalizeProperty();
    /*0x122c0f8*/ void InitalizeFixedProperty(int property);
    /*0x122c4bc*/ void Refresh();
    /*0x122a048*/ void Release();
    /*0x122c4d0*/ void HideProperty(PropertyType _eType);
    /*0x122c5d4*/ void SelectClickProperty(PropertyType _eType);
    /*0x122c64c*/ void CallbackClickProperty(int _type);
    /*0x122c408*/ void ChangeActiveProperty(int _type);
}

class HeroLevelUpButton : UnityEngine.UI.Button
{
    static float _fPressTime = 0.5;
    static float _fCallbackTime = 0.10000000149011612;
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnPressCallbackEvent;
    static /*0x8*/ System.Action<PTShare.Define.SHero> OnOutputCallbackEvent;
    /*0x100*/ PTShare.Define.SHero heroInfo;
    /*0x108*/ TableData.TableData_Unitlv unitlvInfo;
    /*0x110*/ int nLevelCount;
    /*0x114*/ float fPressTime;
    /*0x118*/ bool bIsPress;
    /*0x119*/ bool bIsRequireUpgrade;
    /*0x120*/ System.Collections.IEnumerator iePressCoroutine;
    /*0x128*/ LocalizeString buttonText;

    static /*0xf3efec*/ HeroLevelUpButton();
    static /*0xf2e114*/ void add_OnPressCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2e020*/ void remove_OnPressCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2e300*/ void add_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2e208*/ void remove_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf3efe4*/ HeroLevelUpButton();
    /*0xf3dae0*/ bool get_bIsSyncLimitLv();
    /*0xf3db7c*/ void Awake();
    /*0xf3dbdc*/ void OnEnable();
    /*0xf3dcdc*/ void OnDisable();
    /*0xf2e634*/ void InitializeButton(PTShare.Define.SHero _hero);
    /*0xf3e10c*/ void SendLevelupHero();
    /*0xf3e1f0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf3e470*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf3e424*/ void StartPressCoroutine();
    /*0xf3edb0*/ System.Collections.IEnumerator CoPress();
    /*0xf3eb24*/ void ShowSkillPopup(PTShare.Define.SHero _hero);
    /*0xf3ec64*/ void ShowToastMessage();
    /*0xf3ee1c*/ void HandlerTierUpResult(PTShare.Define.SHero _hero);
    /*0xf3eeec*/ void HandlerLevelUP();
    /*0xf3dda0*/ void SetContiditonButton();
    /*0xf3efd0*/ bool IsStopConditionLevel();
    /*0xf3e2dc*/ void MoveResonance();

    class <CoPress>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroLevelUpButton <>4__this;

        /*0x105af2c*/ <CoPress>d__26(int <>1__state);
        /*0x105af58*/ void System.IDisposable.Dispose();
        /*0x105af5c*/ bool MoveNext();
        /*0x105b2f4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105b2fc*/ void System.Collections.IEnumerator.Reset();
        /*0x105b33c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ HeroLevelUpButton.<> <>9;
        static /*0x8*/ System.Action <>9__33_1;
        static /*0x10*/ System.Action <>9__33_0;

        static /*0x105ac88*/ <>c();
        /*0x105ace8*/ <>c();
        /*0x105acf0*/ void <MoveResonance>b__33_0();
        /*0x105aeac*/ void <MoveResonance>b__33_1();
    }
}

class HeroButtonWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEquipmentButtonEvent;
    /*0x18*/ UnityEngine.UI.Button m_UnequipButton;
    /*0x20*/ HeroLevelUpButton m_LevelupButton;
    /*0x28*/ UnityEngine.UI.Button m_EquipButton;
    /*0x30*/ UnityEngine.GameObject m_FastButton;
    /*0x38*/ LocalizeString m_FastLevelString;
    /*0x40*/ HeroNeedItemWindow m_cMaterialGroup;
    /*0x48*/ UnityEngine.GameObject m_smartEquipReddot;
    /*0x50*/ float m_fFastButtonTime;
    /*0x58*/ PTShare.Define.SHero m_HeroInfo;
    /*0x60*/ TableData.TableData_Unitlv m_LevelInfo;
    /*0x68*/ System.Collections.Generic.List<Rewards> liFastRewards;
    /*0x70*/ System.Collections.IEnumerator ieFastButton;

    static /*0xf2f790*/ HeroButtonWindow();
    static /*0xf2dcd8*/ void add_OnEquipmentButtonEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2ddcc*/ void remove_OnEquipmentButtonEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf2f710*/ HeroButtonWindow();
    /*0xf2dc4c*/ int get_ResonanceMinLevel();
    /*0xf2dcd0*/ int get_FastLimitLevel();
    /*0xf2dec0*/ void OnEnable();
    /*0xf2e3f8*/ void OnDisable();
    /*0xf2e4e4*/ void OnDestroy();
    /*0xf2e5d0*/ void InitalizeButton(PTShare.Define.SHero _hero);
    /*0xf2e768*/ void OnClickUnEquip();
    /*0xf2ea14*/ void OnClickAllEquip();
    /*0xf2eb54*/ void CallbackUnEquipAll(PTShare.Define.SHero _hero);
    /*0xf2ebe8*/ void CallbackAutoEquip(PTShare.Define.SHero _hero);
    /*0xf2ef8c*/ void SetActiveUnequipButton(bool _enable);
    /*0xf2efd4*/ void SetActiveEquipButton(bool _enable);
    /*0xf2f01c*/ void SetActiveLevelupButton(bool _enable);
    /*0xf2f064*/ void SetInteractableLevelButton(bool _enable);
    /*0xf2e670*/ void SetSmartEquipReddot();
    /*0xf2f108*/ void HandlerActiveFastLevel(PTShare.Define.SHero _hero);
    /*0xf2f4a4*/ void OnClick_FastLevel();
    /*0xf2f2e8*/ int CaculationFastLevel();
    /*0xf2e008*/ void SetActiveFastButton(bool enable);
    /*0xf2f458*/ void ActiveFastLevelButton();
    /*0xf2f6a4*/ System.Collections.IEnumerator CoFastButton();
    /*0xf2f2cc*/ bool IsPossiableFastLevel();

    class <>c
    {
        static /*0x0*/ HeroButtonWindow.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SEquip> <>9__23_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SEquip> <>9__26_0;

        static /*0x1057f74*/ <>c();
        /*0x1057fd4*/ <>c();
        /*0x1057fdc*/ bool <OnClickUnEquip>b__23_0(PTShare.Define.SEquip x);
        /*0x1057ffc*/ bool <CallbackAutoEquip>b__26_0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SEquip> <>9__1;

        /*0x105801c*/ <>c__DisplayClass26_0();
        /*0x1058024*/ bool <CallbackAutoEquip>b__1(PTShare.Define.SEquip x);
    }

    class <CoFastButton>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroButtonWindow <>4__this;
        /*0x28*/ float <fTime>5__2;

        /*0x10580bc*/ <CoFastButton>d__37(int <>1__state);
        /*0x10580e8*/ void System.IDisposable.Dispose();
        /*0x10580ec*/ bool MoveNext();
        /*0x1058258*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1058260*/ void System.Collections.IEnumerator.Reset();
        /*0x10582a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroEquipmentSlot : ItemBoxBase
{
    /*0x2c*/ PTShare.Define.EquipParts m_eEquipType;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ AtlasImage m_EmptyOrLock;
    /*0x40*/ ParticleBase m_particle;
    /*0x48*/ PTShare.Define.SHero m_HeroInfo;
    /*0x50*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x58*/ PTShare.Define.SArtifact m_ArtifactInfo;
    /*0x60*/ TableData.TableData_Equipment m_TableInfo;

    /*0xf32c88*/ HeroEquipmentSlot();
    /*0xf31a90*/ PTShare.Define.EquipParts get_EquipType();
    /*0xf31a98*/ PTShare.Define.SEquip get_Equip();
    /*0xf31aa0*/ PTShare.Define.SArtifact get_Artifact();
    /*0xf31aa8*/ void OnDisable();
    /*0xf31bb0*/ void InitEquipment(PTShare.Define.SHero _hero);
    /*0xf31e78*/ void InitEquipment(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0xf31f1c*/ void InitSignature(PTShare.Define.SHero _hero);
    /*0xf3224c*/ void InitArtifact(PTShare.Define.SHero _hero, PTShare.Define.SArtifact _artifact);
    /*0xf32304*/ void OnClick();
    /*0xf31be0*/ void Release();
    /*0xf31eb8*/ void SetUseEquipment();
    /*0xf31fd0*/ void SetUseSignature();
    /*0xf322b0*/ void SetUseArtifact();
    /*0xf329b0*/ void SetReddot(bool _enable);
    /*0xf32908*/ void SetActiveEmptyOrLock(bool _enable);
    /*0xf32944*/ void SetEmptyOrLock(AtlasType _type, string _name);
    /*0xf32b18*/ void UpdateReddot();
    /*0xf32ba8*/ bool IsSamePartsType(int _type);
    /*0xf32a60*/ bool IsLockContent();
    /*0xf325e0*/ bool IsLockContentNotice();
    /*0xf31d6c*/ void BindEvent();
    /*0xf31aac*/ void RemoveEvent();
    /*0xf32bb8*/ void HandleChangeSignature(int heroId);
    /*0xf32c98*/ void <OnClick>b__19_0();
}

class HeroEquipmentWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroEquipmentSlot> m_liEquipmentSlot;
    /*0x20*/ System.Collections.Generic.List<AtlasImage> m_liFadeOut;
    /*0x28*/ UnlockComponent m_artifactLock;
    /*0x30*/ PTShare.Define.SHero m_HeroInfo;
    /*0x38*/ PTShare.Define.SArtifact m_ArtifactInfo;
    /*0x40*/ System.Collections.Generic.List<UnityEngine.Vector3> m_liEquipOriginalScale;
    /*0x48*/ UnityEngine.Coroutine m_equipCoroutine;

    /*0xf33808*/ HeroEquipmentWindow();
    /*0xf32d44*/ void InitalizeEquipSlot(PTShare.Define.SHero _hero, bool _isEquipEffect);
    /*0xf33554*/ void SetActiveEquipmentButton(bool _enable);
    /*0xf33614*/ void UpdateReddot();
    /*0xf3309c*/ void SetEquipSlot(bool _isEquipEffect);
    /*0xf336bc*/ void SetArtifactLock();
    /*0xf32e98*/ void SetOriginalScale();
    /*0xf33778*/ System.Collections.IEnumerator CoNewEquip(PTShare.Define.EquipParts ePart, int slotIndex, int infoIndex);

    class <>c__DisplayClass10_0
    {
        /*0x10*/ HeroEquipmentWindow <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SEquip> <>9__0;

        /*0x1058598*/ <>c__DisplayClass10_0();
        /*0x10585a0*/ bool <SetEquipSlot>b__0(PTShare.Define.SEquip x);
    }

    class <CoNewEquip>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroEquipmentWindow <>4__this;
        /*0x28*/ int slotIndex;
        /*0x2c*/ PTShare.Define.EquipParts ePart;
        /*0x30*/ int infoIndex;

        /*0x1058644*/ <CoNewEquip>d__13(int <>1__state);
        /*0x1058670*/ void System.IDisposable.Dispose();
        /*0x1058674*/ bool MoveNext();
        /*0x1058b70*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1058b78*/ void System.Collections.IEnumerator.Reset();
        /*0x1058bb8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroMercenaryWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ PlayerProfileSlot m_ProfileSlot;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ UnityEngine.GameObject m_ReturnButton;
    /*0x30*/ int m_nHeroid;
    /*0x38*/ ServerProtocol.ResAccountDetail m_DetailInfo;
    /*0x40*/ bool m_bIsExceptionMercenary;

    static /*0x1221a9c*/ HeroMercenaryWindow();
    static /*0x122140c*/ void add_OnChangeEvent(System.Action value);
    static /*0x1221500*/ void remove_OnChangeEvent(System.Action value);
    /*0x1221a94*/ HeroMercenaryWindow();
    /*0x12215f4*/ void InitializeWindow(long _playerid, int _heroid, bool _exceptionMercenary);
    /*0x12217b0*/ void SetStatusView(bool _exceptionMercenary);
    /*0x1221924*/ void OnClickReturnMercenary();
    /*0x1221a1c*/ void CallbackProtocolReturnMercenary();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HeroMercenaryWindow <>4__this;
        /*0x18*/ int _heroid;
        /*0x1c*/ bool _exceptionMercenary;

        /*0x105f804*/ <>c__DisplayClass9_0();
        /*0x105f80c*/ void <InitializeWindow>b__0(ServerProtocol.ResAccountDetail response);
    }
}

class HeroNeedItem : UnityEngine.MonoBehaviour
{
    static string DefaultColor = "#8C7E4E";
    /*0x18*/ LocalizeString m_Amount;
    /*0x20*/ UnityEngine.Color[] m_arrTextColor;
    /*0x28*/ long m_NeedAmount;
    /*0x30*/ long m_UseAmount;

    /*0x1222934*/ HeroNeedItem();
    /*0x12226dc*/ void InitalizeMaterial(long _needAmount, long _useAmount);
    /*0x1222724*/ void SetText();
}

class HeroNeedItemWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_NoticeText;
    /*0x20*/ UnityEngine.GameObject m_EntityParent;
    /*0x28*/ System.Collections.Generic.List<HeroNeedItem> m_liMaterialEntity;
    /*0x30*/ PTShare.Define.SHero m_HeroInfo;
    /*0x38*/ TableData.TableData_Unitlv m_LevelInfo;
    /*0x40*/ TableData.TableData_Unittierlv m_RankInfo;
    /*0x48*/ TableData.TableData_Unitgradelv m_GradelvInfo;

    /*0x12231a0*/ HeroNeedItemWindow();
    /*0x122293c*/ void InitalizeMaterialGroup(PTShare.Define.SHero _hero, TableData.TableData_Unitlv _unitlv);
    /*0x1222e8c*/ void InitializeMaterialGroup(System.Collections.Generic.List<Rewards> rewards);
    /*0x1222990*/ void InitalizeMaterials();
    /*0x1222f84*/ void SetMaterial(int _index, long _needAmount, long _useAmount);
    /*0x1223014*/ long GetGold();
    /*0x1223094*/ long GetHeroExp();
    /*0x1223114*/ long GetFeather();
    /*0x122325c*/ void <InitializeMaterialGroup>b__8_0(Rewards x);
}

class HeroSkillSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ AtlasImage m_Lock;
    /*0x28*/ AtlasImage m_UnLock;
    /*0x30*/ AtlasImage m_RedDot;
    /*0x38*/ AtlasImage m_LevelFrame;
    /*0x40*/ LocalizeString m_Level;
    /*0x48*/ AtlasImage m_SelectFrame;
    /*0x50*/ TooltipData_Skill m_TooltipSkillData;
    /*0x58*/ ParticleBase m_particleEffect;
    /*0x60*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x68*/ TableData.TableData_Unitlv m_UnitLvInfo;
    /*0x70*/ PTShare.Define.SHero m_HeroInfo;
    /*0x78*/ TableData.TableData_Skillbase m_SkillInfo;
    /*0x80*/ TableData.TableData_Skilllv m_SkillLvInfo;
    /*0x88*/ System.Collections.Generic.Dictionary<int, int> m_dicSkillLv;
    /*0x90*/ int m_slotIndex;

    /*0x12342b4*/ HeroSkillSlot();
    /*0x12336d8*/ void OnEnable();
    /*0x12337cc*/ void OnDisable();
    /*0x1233914*/ void InitalizeSlot(int _slotindex, PTShare.Define.SHero _hero, TableData.TableData_Skillbase _skill, int enterHeroLv);
    /*0x1233b74*/ void InitDicSkillLv();
    /*0x1233c44*/ void SetIcon(string _type, string _name);
    /*0x1233de8*/ void SetLock(bool _enable);
    /*0x1233e00*/ void SetRedDot(bool _enable);
    /*0x1233e18*/ void SetLevel();
    /*0x1233ed0*/ int GetSkillLevel();
    /*0x1233e80*/ void HideEffectOnlyObjects();
    /*0x1233d2c*/ bool IsHighTier(int _skillIndex);
    /*0x1233f50*/ void SkillLevelUpEffect(PTShare.Define.SHero hero, int enterLevel);
    /*0x1233f74*/ void HandleSkillLevelUp(PTShare.Define.SHero hero);
    /*0x1234148*/ System.Collections.IEnumerator CoUnlockEffect(int oldSkillLevel, int newSkillLevel);
    /*0x12341c8*/ System.Collections.IEnumerator CoParticleEffect();
    /*0x1234234*/ System.Collections.IEnumerator CoSkillLevelEffect(int oldSkillLevel, int newSkillLevel);
    /*0x123432c*/ void <HandleSkillLevelUp>b__28_0(bool isOn);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int _slotindex;
        /*0x18*/ PTShare.Define.SHero _hero;
        /*0x20*/ HeroSkillSlot <>4__this;

        /*0x10621dc*/ <>c__DisplayClass18_0();
        /*0x10621e4*/ void <InitalizeSlot>b__0(bool isOn);
    }

    class <CoUnlockEffect>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroSkillSlot <>4__this;
        /*0x28*/ int oldSkillLevel;
        /*0x2c*/ int newSkillLevel;
        /*0x30*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;
        /*0x38*/ int <i>5__3;

        /*0x1062920*/ <CoUnlockEffect>d__29(int <>1__state);
        /*0x106294c*/ void System.IDisposable.Dispose();
        /*0x1062950*/ bool MoveNext();
        /*0x1062da4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1062dac*/ void System.Collections.IEnumerator.Reset();
        /*0x1062dec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoParticleEffect>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroSkillSlot <>4__this;

        /*0x1062428*/ <CoParticleEffect>d__30(int <>1__state);
        /*0x1062454*/ void System.IDisposable.Dispose();
        /*0x1062458*/ bool MoveNext();
        /*0x106255c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1062564*/ void System.Collections.IEnumerator.Reset();
        /*0x10625a4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSkillLevelEffect>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int oldSkillLevel;
        /*0x24*/ int newSkillLevel;
        /*0x28*/ HeroSkillSlot <>4__this;
        /*0x30*/ float <t>5__2;
        /*0x34*/ float <speed>5__3;

        /*0x10625ac*/ <CoSkillLevelEffect>d__31(int <>1__state);
        /*0x10625d8*/ void System.IDisposable.Dispose();
        /*0x10625dc*/ bool MoveNext();
        /*0x10628d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10628d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1062918*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroSkillWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroSkillSlot> m_liHeroSkillSlot;
    /*0x20*/ PTShare.Define.SHero m_HeroInfo;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Skillbase> m_liSkillInfo;
    /*0x30*/ int m_enterHeroLv;

    /*0x1234f28*/ HeroSkillWindow();
    /*0x1234a04*/ void InitalizeSkillGroup(PTShare.Define.SHero _hero, int enterHeroLv);
    /*0x1234ca8*/ void SetSkillSlot();

    class <>c
    {
        static /*0x0*/ HeroSkillWindow.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__4_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__4_1;

        static /*0x1062df4*/ <>c();
        /*0x1062e54*/ <>c();
        /*0x1062e5c*/ int <InitalizeSkillGroup>b__4_0(TableData.TableData_Skillbase x);
        /*0x1062e74*/ TableData.TableData_Skillbase <InitalizeSkillGroup>b__4_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ int i;

        /*0x1062ec0*/ <>c__DisplayClass5_0();
        /*0x1062ec8*/ bool <SetSkillSlot>b__0(TableData.TableData_Skillbase x);
    }
}

class HeroStatusWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_TotalPower;
    /*0x20*/ LocalizeString m_LevelText;
    /*0x28*/ LocalizeString m_AttackText;
    /*0x30*/ LocalizeString m_DefenseText;
    /*0x38*/ LocalizeString m_HealthText;
    /*0x40*/ AtlasImage m_PropertyIcon;
    /*0x48*/ AtlasImage m_EquipTypeIcon;
    /*0x50*/ AtlasImage m_ClassIcon;
    /*0x58*/ TooltipData_Faction m_TooltipFactionData;
    /*0x60*/ TooltipData_IconDesc m_TooltipClassData;
    /*0x68*/ TooltipData_IconDesc m_TooltipEquipData;
    /*0x70*/ PTShare.Define.SHero m_HeroInfo;
    /*0x78*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x80*/ TableData.TableData_Unitlv m_UnitLvInfo;
    /*0x88*/ Battle.CharacterStat m_StatInfo;
    /*0x90*/ PTShare.Define.SStatBonus m_Statbonus;
    /*0x98*/ PTShare.Define.EquipmentType m_eEquipType;
    /*0x9c*/ UnitClassType m_eClassType;

    /*0x126f810*/ HeroStatusWindow();
    /*0x126eff0*/ void InitalizeStatus(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
    /*0x126f444*/ void InitalizeStatus_Dungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
    /*0x126f708*/ void OnClickStatusViewer();
    /*0x126f2b4*/ void SetText(LocalizeString _localize, string _value);
    /*0x126f790*/ void SetAtlasIcon(AtlasImage _icon, string _path);
    /*0x126f410*/ string GetHeroStatus(Battle.CharacterStat.StatType _type);
}

class HeroManageTooltip : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_ParentTransform;
    /*0x20*/ UnityEngine.RectTransform m_TextTransform;
    /*0x28*/ LocalizeString m_Desc;
    /*0x30*/ float m_fHideTime;
    /*0x38*/ System.Collections.IEnumerator ieCoroutine;

    /*0x121c450*/ HeroManageTooltip();
    /*0x121c258*/ void InitializeDesc(string _desckey);
    /*0x121c3bc*/ void Off();
    /*0x121c370*/ void StartCo();
    /*0x121c3e4*/ System.Collections.IEnumerator CoTimer();

    class <CoTimer>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManageTooltip <>4__this;
        /*0x28*/ float <_fTime>5__2;

        /*0x105d094*/ <CoTimer>d__8(int <>1__state);
        /*0x105d0c0*/ void System.IDisposable.Dispose();
        /*0x105d0c4*/ bool MoveNext();
        /*0x105d200*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105d208*/ void System.Collections.IEnumerator.Reset();
        /*0x105d248*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroNameWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_UnitName;
    /*0x20*/ LocalizeString m_NickName;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_Grade;
    /*0x38*/ AtlasImage m_gradeNameCardNormalImage;
    /*0x40*/ AtlasImage m_gradeNameCardEliteImage;
    /*0x48*/ UnityEngine.GameObject m_gradeStarParent;
    /*0x50*/ Spine.Unity.SkeletonGraphic[] m_gradeStar;
    /*0x58*/ UnityEngine.UI.Outline m_UnitOutline;
    /*0x60*/ UnityEngine.UI.Shadow m_UnitShadow;
    /*0x68*/ PTShare.Define.SHero m_HeroInfo;
    /*0x70*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0x12226d4*/ HeroNameWindow();
    /*0x1221aa0*/ void InitHeroName(PTShare.Define.SHero _hero);
    /*0x1221ac4*/ void Init(PTShare.Define.SHero _hero);
    /*0x12221dc*/ void InitHeroName_StarAnimation(PTShare.Define.SHero _hero);
    /*0x1222588*/ void AnimationState_InStar(Spine.TrackEntry trackEntry);
    /*0x1222624*/ void InitHeroName(TableData.TableData_Unitbase _hero);
    /*0x1222168*/ void SetEffectColor(UnityEngine.UI.Shadow _base, UnityEngine.Color _color);
    /*0x1221f90*/ void SetText(LocalizeString _str, string _key);
    /*0x1222154*/ void SetColor(LocalizeString _str, UnityEngine.Color _color);
    /*0x1222648*/ void SetBackground(AtlasType _type, int _grade);
    /*0x12220c8*/ void SetGrade(int _grade);
    /*0x1222184*/ void SetGradeNameCard(int _initGrade);
    /*0x1221ce0*/ void SetStar();
}

class HeroSelectWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_HeroSlot m_scrollContent;
    /*0x20*/ int m_index;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHero> m_heroList;
    /*0x30*/ System.Action<PTShare.Define.SHero> m_callBack;

    /*0x1233660*/ HeroSelectWindow();
    /*0x1233268*/ void OnDisable();
    /*0x1233340*/ void InitWindow(int index, System.Collections.Generic.List<ConditionHeroData> heroList, System.Action<PTShare.Define.SHero> onCallBack);
    /*0x1233550*/ void InitWindow(int index, System.Collections.Generic.List<PTShare.Define.SHero> heroList, System.Action<PTShare.Define.SHero> onCallBack);
    /*0x1233474*/ void BindEvent();
    /*0x123326c*/ void RemoveEvent();
    /*0x12335d4*/ void HandleScrollContent(int index, HeroSlot obj);
}

class HeroSkillUpSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_SkillIcon;
    /*0x20*/ AtlasImage m_LockIcon;
    /*0x28*/ AtlasImage m_UpIcon;
    /*0x30*/ LocalizeString m_SubTip;
    /*0x38*/ LocalizeString m_SkillLevel;
    /*0x40*/ LocalizeString m_SkillName;
    /*0x48*/ TableData.TableData_Skillbase m_skillInfo;

    /*0x12349fc*/ HeroSkillUpSlot();
    /*0x1234464*/ void InitalizeSkillUpSlot(TableData.TableData_Skillbase _skill, int _lv);
    /*0x1234758*/ void SetNewSkill();
    /*0x12348b0*/ void SetUpgradeSkill(bool _upgrade);
    /*0x1234598*/ void SetSkillIcon(string _type, string _name);
    /*0x1234824*/ void SetActiveLockIcon(bool _enable);
    /*0x123483c*/ void SetActiveUpIcon(bool _enable);
    /*0x1234854*/ void SetActiveSubTip(bool _enable);
    /*0x1234664*/ void SetTextKey(LocalizeString _str, string _key);
    /*0x123489c*/ void SetTextColor(LocalizeString _str, UnityEngine.Color _color);
}

class HeroSkillupWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Arrow;
    /*0x20*/ HeroSkillUpSlot m_FirstSlot;
    /*0x28*/ HeroSkillUpSlot m_SecondSlot;
    /*0x30*/ PTShare.Define.SHero m_HeroInfo;
    /*0x38*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x40*/ TableData.TableData_Unitlv m_UnitLvInfo;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Skillbase> m_liSkillInfo;
    /*0x50*/ TableData.TableData_Skilllv m_SkillInfo;
    /*0x58*/ UnitSkillLevel m_CurNewLevel;

    /*0x1267ba0*/ HeroSkillupWindow();
    /*0x126777c*/ void OnDisable();
    /*0x1267780*/ void InitalizeSkillUp(PTShare.Define.SHero _hero);
    /*0x126797c*/ void SetSkillSlot();
    /*0x1267b78*/ void SetActiveArrow(bool _enable);
    /*0x126787c*/ void SetFirstSlot(bool _enable);
    /*0x12678c4*/ void SetSecondSlot(bool _enable);
    /*0x1267b90*/ bool IsNewSkill();
    /*0x126790c*/ void GetSkillLvInfo();
}

class HeroSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<HeroSlot> OnChangeHeroEvent;
    /*0x18*/ HeroSlotCache m_cHeroSlotCache;
    /*0x20*/ UnityEngine.GameObject m_redDot;
    /*0x28*/ PTShare.Define.SHero m_shero;
    /*0x30*/ TableData.TableData_Unitbase m_baseInfo;
    /*0x38*/ System.Action<PTShare.Define.SHero> OnClickHeroAction;
    /*0x40*/ System.Action<TableData.TableData_Unitbase> OnClickUnitBaseAction;

    static /*0x126c27c*/ HeroSlot();
    static /*0x126a7f8*/ void add_OnChangeHeroEvent(System.Action<HeroSlot> value);
    static /*0x126a8ec*/ void remove_OnChangeHeroEvent(System.Action<HeroSlot> value);
    /*0x126c218*/ HeroSlot();
    /*0x126a9e0*/ void OnEnable();
    /*0x126a9ec*/ void OnDisable();
    /*0x126a9f8*/ void OnDestroy();
    /*0x126aa04*/ void Awake();
    /*0x126aaac*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126ae60*/ void Init(TableData.TableData_Unitbase _hero, System.Action<TableData.TableData_Unitbase> _callback);
    /*0x126af24*/ void Clear();
    /*0x126b120*/ void Release();
    /*0x126b180*/ void OnClick();
    /*0x126b208*/ UnitType GetUnitType();
    /*0x126b294*/ PTShare.Define.SHero GetSHero();
    /*0x126ac58*/ void SetHero(PTShare.Define.SHero _sHeroData);
    /*0x126b010*/ void ClearFrameBackground();
    /*0x126ad00*/ void InitalizeCharacter(string _skinName);
    /*0x126b30c*/ void CharacterMirrorX(bool _enable);
    /*0x126ad18*/ void SetProperty(int _factionid);
    /*0x126ad5c*/ void SetFrame(int _grade);
    /*0x126ad74*/ void SetBackground(int _grade);
    /*0x126ad8c*/ void SetLevel(int _level);
    /*0x126ad30*/ void SetOriginalEpicIcon(bool _enable);
    /*0x126aff4*/ void SetActiveCharacter(bool _enable);
    /*0x126acc8*/ void SetActiveProperty(bool _enable);
    /*0x126ace4*/ void SetActiveLevel(bool _enable);
    /*0x126b8d8*/ void SetChangeFramebyName();
    /*0x126b078*/ void SetActiveShade(bool _enable);
    /*0x126ba70*/ void SetActiveFrozen(bool _enable);
    /*0x126b04c*/ void SetActiveSelected(bool _enable);
    /*0x126b0dc*/ void SetActiveLock(bool _enable);
    /*0x126b0c0*/ void SetActiveFlag(bool _enable);
    /*0x126bc28*/ void SetFlagSprite(AtlasType _type, string _name);
    /*0x126adbc*/ void SetReddot(bool _enable);
    /*0x126b108*/ void SetAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size);
    /*0x126bdec*/ void AddLongPressEvent(UnityEngine.Events.UnityAction unityAction);
    /*0x126be2c*/ void RemoveLongPress();
    /*0x126be6c*/ void BindEvent();
    /*0x126bf30*/ void RemoveEvent();
    /*0x126ada4*/ void SetStar(int _amount);
    /*0x126c074*/ void SetLongPressEvent(UnityEngine.Events.UnityAction callback);
    /*0x126c0ec*/ void HandlerChangeEvent(PTShare.Define.SHero _hero);
}

class HeroSlotCache : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Character;
    /*0x20*/ AtlasImage m_ImageFrame;
    /*0x28*/ AtlasImage m_ImageBackground;
    /*0x30*/ AtlasImage m_ImageProperty;
    /*0x38*/ AtlasImage m_Flag;
    /*0x40*/ AtlasImage m_Lock;
    /*0x48*/ AtlasImage m_originalEpicIcon;
    /*0x50*/ AtlasImage m_Shade;
    /*0x58*/ AtlasImage m_frozen;
    /*0x60*/ LocalizeString m_cLevel;
    /*0x68*/ LocalizeString m_amount;
    /*0x70*/ UnityEngine.GameObject m_PropertyParent;
    /*0x78*/ UnityEngine.GameObject m_Selected;
    /*0x80*/ UnityEngine.GameObject m_LevelParent;
    /*0x88*/ CustomButton m_Button;
    /*0x90*/ AtlasImage[] m_arrGradeStar;
    /*0x98*/ PTShare.Define.SHero m_sHero;
    /*0xa0*/ ButtonLongPress m_buttonLongPress;

    /*0x126c8dc*/ HeroSlotCache();
    /*0x126c6f8*/ void Awake();
    /*0x126c8d4*/ void SetSHero(PTShare.Define.SHero _sHero);
    /*0x126b29c*/ void InitalizeCharacter(string _skinName);
    /*0x126b328*/ void CharacterOnMirrorX(bool _enable);
    /*0x126b374*/ void SetProperty(int _type);
    /*0x126b400*/ void SetFrame(int _grade);
    /*0x126b8f0*/ void OnDisableByFrameAndBG();
    /*0x126b48c*/ void SetBackground(int _grade);
    /*0x126b518*/ void SetLevel(int _level);
    /*0x126b6b0*/ void SetOriginalEpicIcon(bool _enable);
    /*0x126b6c8*/ void SetActiveCharacter(bool _enable);
    /*0x126b838*/ void SetActiveLevel(bool _enable);
    /*0x126b798*/ void SetActiveProperty(bool _enable);
    /*0x126b978*/ void SetActiveShade(bool _enable, bool _isEpic);
    /*0x126bab8*/ void SetActiveFrozen(bool _enable, bool _isEpic);
    /*0x126bbb0*/ void SetActiveSelected(bool _enable);
    /*0x126bbe0*/ void SetActiveFlag(bool _enable);
    /*0x126bc40*/ void SetFlagSprite(AtlasType _type, string _name);
    /*0x126bbc8*/ void SetActiveLock(bool _enable);
    /*0x126c08c*/ void SetLongPressButtonEvent(UnityEngine.Events.UnityAction callback);
    /*0x126be44*/ void RemoveLongPressEvent();
    /*0x126be04*/ void AddLongPressEvent(UnityEngine.Events.UnityAction unityAction);
    /*0x126bfe4*/ void SetGradeAmount(int _amount);
    /*0x126c810*/ void DefaultLongPressButton();
    /*0x126bcc8*/ void SetLocalizeAmount(long _amount, UnityEngine.TextAnchor _anchor, int _size);
    /*0x126c8e4*/ void <DefaultLongPressButton>b__41_0();
}

class HeroSlotInventory : HeroSlot
{
    /*0x48*/ ButtonSound m_selectSound;
    /*0x4c*/ ButtonSound m_unSelectSound;
    /*0x50*/ System.Func<PTShare.Define.SHero, bool, bool, long, bool> OnClickUnit;
    /*0x58*/ System.Action<int, int, long> OnClickUnit_New;
    /*0x60*/ bool <IsHiredUnit>k__BackingField;
    /*0x64*/ int <TableID>k__BackingField;
    /*0x68*/ int <HeroID>k__BackingField;
    /*0x70*/ long <PlayerID>k__BackingField;
    /*0x78*/ bool <IsSelected>k__BackingField;
    /*0x79*/ bool <IsShaded>k__BackingField;

    /*0x126d188*/ HeroSlotInventory();
    /*0x126cdd8*/ bool get_IsHiredUnit();
    /*0x126cde0*/ void set_IsHiredUnit(bool value);
    /*0x126cdec*/ int get_TableID();
    /*0x126cdf4*/ void set_TableID(int value);
    /*0x126cdfc*/ int get_HeroID();
    /*0x126ce04*/ void set_HeroID(int value);
    /*0x126ce0c*/ long get_PlayerID();
    /*0x126ce14*/ void set_PlayerID(long value);
    /*0x126ce1c*/ bool get_IsSelected();
    /*0x126ce24*/ void set_IsSelected(bool value);
    /*0x126ce30*/ bool get_IsShaded();
    /*0x126ce38*/ void set_IsShaded(bool value);
    /*0x126ce44*/ int get_GetUnitGrade();
    /*0x126ce74*/ int get_GetUnitTableID();
    /*0x126ce90*/ int get_GetUnitHeroID();
    /*0x126cea8*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126cee4*/ void SetMercenaryInfo(PTShare.Define.SHero _hero);
    /*0x126cfb4*/ void OnClick();
    /*0x126d15c*/ void SetShade(bool _bShade);
    /*0x126d120*/ void SetSelected(bool _bSelected);
    /*0x126d168*/ void SetFriend();
}

class HeroSlotInventory_GuildWar : HeroSlotInventory
{
    /*0x80*/ UnityEngine.UI.Text m_NicknameText;
    /*0x88*/ AtlasImage m_SupportIcon;
    /*0x90*/ UnityEngine.UI.Text m_SupportCountText;

    /*0x126d544*/ HeroSlotInventory_GuildWar();
    /*0x126d1e8*/ void SetActiveSupportIcon(bool _bActive);
    /*0x126d200*/ void SetSupportIconCount(int _nCount);
    /*0x126d2c0*/ void SetNickname(string _sNickname);
    /*0x126d34c*/ void SetGuildWarInfo(PTShare.Define.SHero _sHero);
    /*0x126d3dc*/ void OnLongPress_GuildWar();
    /*0x126d548*/ bool <OnLongPress_GuildWar>b__7_0(PTShare.Define.SGuildWarHero x);
}

class HeroSlotInventory_GuildWarPlayerSelectSlot : HeroSlotInventory
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> onLongPressEvent;
    /*0x80*/ AtlasImage m_GuildExistHero;
    /*0x88*/ AtlasImage m_OutSelected;
    /*0x90*/ AtlasImage[] m_PositionIcon;

    static /*0x126d8f4*/ HeroSlotInventory_GuildWarPlayerSelectSlot();
    static /*0x126d56c*/ void add_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    static /*0x126d660*/ void remove_onLongPressEvent(System.Action<PTShare.Define.SHero> value);
    /*0x126d8f0*/ HeroSlotInventory_GuildWarPlayerSelectSlot();
    /*0x126d754*/ void SetActiveExistHero(bool enable);
    /*0x126d76c*/ void SetActiveOutSelected(bool enable);
    /*0x126d784*/ void SetPosition(PTShare.Define.GuildWarPosition ePosition);
    /*0x126d85c*/ void CustomLongPressEvent();
}

class HeroSlotInventory_RunGame : HeroSlot
{
    /*0x48*/ UnityEngine.UI.Text m_LockTimeText;
    /*0x50*/ bool IsTimerLocked;

    /*0x126db74*/ HeroSlotInventory_RunGame();
    /*0x126d8f8*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126da04*/ void OnClick();
    /*0x126da14*/ void SetLockTimer(int _dRemainTime);
}

class HeroSlotMaze : HeroSlotInventory
{
    /*0x80*/ UnityEngine.UI.Slider m_hpSlider;
    /*0x88*/ UnityEngine.UI.Slider m_mpSlider;
    /*0x90*/ TooltipTargetUI m_tooltipTargetUI;
    /*0x98*/ TooltipData_Unit tooltipunit;
    /*0xa0*/ UnityEngine.GameObject m_mateMark;
    /*0xa8*/ bool m_fixedShade;
    /*0xac*/ Battle.GameModeType m_gameModeType;

    /*0x126e0a0*/ HeroSlotMaze();
    /*0x126dbdc*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x126de0c*/ void Init(PTShare.Define.SHero _hero, Battle.GameModeType gameModeType, System.Action<PTShare.Define.SHero> _callback);
    /*0x126df74*/ void UseTooltip();
    /*0x126e028*/ void SetShade(bool _bShade);
    /*0x126e040*/ void SetMateIcon(bool isMate);
    /*0x126e058*/ void SetHpPercent(float percent);
    /*0x126e07c*/ void SetMpPercent(float percent);
    /*0x126dd44*/ ConditionHeroData FindHeroData(int heroId);
}

class HeroSlotSelect : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_emptySlot;
    /*0x50*/ int m_index;
    /*0x54*/ bool m_isEmpty;
    /*0x58*/ System.Action<int> m_click;

    /*0x126e494*/ HeroSlotSelect();
    /*0x126e104*/ bool IsEmpty();
    /*0x126e10c*/ void InitSlot(int index, System.Action<int> click);
    /*0x126e220*/ void InitSlot(int index, PTShare.Define.SHero sHero, System.Action<int> click);
    /*0x126e3d4*/ void OnClick_SHero(PTShare.Define.SHero sHero);
    /*0x126e434*/ void OnClick();
}

class HeroTroopPage : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_TroopTeamEntity m_ScrollContent;

    /*0x12702bc*/ HeroTroopPage();
    /*0x126f820*/ System.Collections.Generic.List<PTShare.Define.STroop> get_m_liTroop();
    /*0x126f8a0*/ void InitalizeEvent();
    /*0x126fb58*/ void DeleteEvent();
    /*0x126fff8*/ void InitializeTroop();
    /*0x1270060*/ void CheckInitialize();
    /*0x126fffc*/ void InitializeScroll();
    /*0x12701ac*/ void HandlerScrollContent(int _index, TroopTeamEntity _obj);
    /*0x1270274*/ void HandleHeroWindowEvent(int _type);
    /*0x12702b8*/ void HandleProtocolChange();
}

class HeroMainWindow : GuiBase
{
    static /*0x0*/ System.Action<int> OnChagneCurrentMenu;
    static /*0x8*/ System.Action OnExitEvent;
    /*0x40*/ ButtonTapBase[] m_arrButtonTapList;
    /*0x48*/ HeroBookPage m_cHeroBookPage;
    /*0x50*/ HeroInventoryPage_Inven m_cHeroInventoryPage;
    /*0x58*/ HeroTroopPage m_cHeroTroopPage;
    /*0x60*/ string[] m_arrLocalizeKey;
    /*0x68*/ string[] m_arrReddotKey;
    /*0x70*/ int m_nCurrentMenuType;

    static /*0xf3fd30*/ HeroMainWindow();
    static /*0xf2d884*/ void add_OnChagneCurrentMenu(System.Action<int> value);
    static /*0xf2d790*/ void remove_OnChagneCurrentMenu(System.Action<int> value);
    static /*0xf3f3b8*/ void add_OnExitEvent(System.Action value);
    static /*0xf3f4b0*/ void remove_OnExitEvent(System.Action value);
    /*0xf3fb18*/ HeroMainWindow();
    /*0xf3f5a8*/ void OnCreate();
    /*0xf3f720*/ void OnEnter();
    /*0xf3f8d4*/ void OnStart();
    /*0xf3f8d8*/ void OnFinish();
    /*0xf3f8dc*/ void OnLeave();
    /*0xf3f9c8*/ void OnDelete();
    /*0xf3f9cc*/ void OnExit();
    /*0xf3f5ac*/ void InitButton();
    /*0xf3fa88*/ void UpdateButton();
    /*0xf3f840*/ void SetCurrentMenu(int _type);
    /*0xf3fb00*/ void HandleCurrentChangeMenu(int _index);

    enum HeroMenuType
    {
        NONE = -1,
        INVENTORY = 0,
        TROOP = 1,
        BOOK = 2,
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int index;
        /*0x18*/ HeroMainWindow <>4__this;

        /*0x105b344*/ <>c__DisplayClass21_0();
        /*0x105b34c*/ void <InitButton>b__0();
    }
}

class ItemChangeAmount : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Amount;
    /*0x20*/ int m_nMaxAmount;
    /*0x24*/ int m_nAmount;

    /*0x1579a30*/ ItemChangeAmount();
    /*0x1579a18*/ void SetMaxAmount(int _maxAmount);
    /*0x1579a28*/ int GetAmount();
    void ChangeAmount(int _amount);
    int SetAmount(int _amount);
    void RefreshAmountText();
}

class ItemChangeAmountWindow : ItemChangeAmount
{
    static /*0x0*/ System.Action<int, int> OnChangeValue;
    /*0x28*/ UnityEngine.GameObject m_TotalAmountGroup;
    /*0x30*/ System.Collections.Generic.List<ItemChangeAmountWindow.AmountPrice> m_PriceGroup;
    /*0x38*/ ItemType m_eItemType;
    /*0x40*/ TableData.TableData_Item m_ItemInfo;
    /*0x48*/ PTShare.Define.SItem m_UserItemInfo;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_liItemReward;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_liIdleReward;
    /*0x60*/ TableData.TableData_Stageidle m_IdleInfo;
    /*0x68*/ bool m_bIsView;

    static /*0x157afd8*/ ItemChangeAmountWindow();
    static /*0x1579a94*/ void add_OnChangeValue(System.Action<int, int> value);
    static /*0x1579b88*/ void remove_OnChangeValue(System.Action<int, int> value);
    /*0x157af40*/ ItemChangeAmountWindow();
    /*0x1579a38*/ int get_UseItemCount();
    /*0x1579a54*/ int get_NeedItemCount();
    /*0x1579a70*/ int get_RewardSecTime();
    /*0x1579c7c*/ void InitializeWindow(ItemType _type, TableData.TableData_Item _item, bool _isAmountView);
    /*0x157a14c*/ void RefreshTotalAmount();
    /*0x1579ffc*/ void RefreshPriceGroup();
    /*0x157a1b0*/ void FixedAmount();
    /*0x157a4d4*/ void TimerAmount();
    /*0x157a9e0*/ void ChangeAmount(int _amount);
    /*0x157aac8*/ void ChangeFixedAmount(int _amount);
    /*0x157ac80*/ int SetAmount(int _amount);
    /*0x157aba8*/ int SetFixedAmount(int _amount);
    /*0x157ad68*/ void RefreshAmountText();
    /*0x157a108*/ bool IsSoulStone();
    /*0x157a118*/ bool InvaildSoulStone();
    /*0x157ae78*/ void RefreshNativeImage();
    /*0x157afdc*/ Rewards <InitializeWindow>b__19_0(Rewards x);

    class AmountPrice
    {
        /*0x10*/ UnityEngine.GameObject Object;
        /*0x18*/ AtlasImage Icon;
        /*0x20*/ LocalizeString Amount;

        /*0xe505ac*/ AmountPrice();
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ ItemChangeAmountWindow <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<Rewards> <>9__0;

        /*0xe50510*/ <>c__DisplayClass23_0();
        /*0xe50518*/ bool <TimerAmount>b__0(Rewards x);
    }
}

class SelectItemChangeAmountWindow : ItemChangeAmount
{
    static /*0x0*/ System.Action<int, int, int> OnChangeValue;
    /*0x28*/ int m_nIndex;
    /*0x2c*/ int m_nItemIndex;

    static /*0xe239c4*/ SelectItemChangeAmountWindow();
    static /*0xe23624*/ void add_OnChangeValue(System.Action<int, int, int> value);
    static /*0xe23718*/ void remove_OnChangeValue(System.Action<int, int, int> value);
    /*0xe239bc*/ SelectItemChangeAmountWindow();
    /*0xe2380c*/ void InitailizeAmount(int _arrIndex, int _itemIndex, int _amount, int _maxAmount);
    /*0xe23820*/ void ChangeAmount(int _amount);
    /*0xe238e4*/ void RefreshAmountText();
    /*0xe23980*/ int SetAmount(int _amount);
}

class ItemDecomposeInputWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.InputField m_inputField;
    /*0x20*/ System.Action<int> onSubmitCallback;

    /*0x157b128*/ ItemDecomposeInputWindow();
    /*0x157b030*/ void Initialize(System.Action<int> _onSubmitCallback);
    /*0x157b05c*/ void OnClickConfirm();
    /*0x157b100*/ void OnClickCancel();
}

enum ItemSelectBoxType
{
    UNIT = 0,
    ITEM = 1,
    EQUIP = 2,
}

class ItemSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemSelectSlot m_ItemBox;
    /*0x20*/ SelectItemChangeAmountWindow m_SelectAmountWindow;
    /*0x28*/ bool m_bIsTypeItem;

    /*0x1584594*/ ItemSelectEntity();
    /*0x158432c*/ void InitializeEntity(ItemSelectBoxType _type, int _arrIndex, int _itemIndex, int _amount, int _maxAmount);
    /*0x1584544*/ void RefreshEntity(int _maxAmount);
    /*0x158451c*/ void SetSelectItem(bool _enable);
}

class LoginPlatformView : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<LoginPlatformView.PlatformButton> m_liPlatformButton;

    /*0xfbae78*/ LoginPlatformView();
    /*0xfbac50*/ void InitializePlatform();

    class PlatformButton
    {
        /*0x10*/ PUBSDK.DefinePubSDK.PubLoginType platform;
        /*0x18*/ UnityEngine.UI.Button button;

        /*0xe5a8b4*/ PlatformButton();
    }

    class <>c__DisplayClass2_0
    {
        /*0x10*/ LoginPlatformView.PlatformButton x;

        /*0xe5a810*/ <>c__DisplayClass2_0();
        /*0xe5a818*/ void <InitializePlatform>b__2();
    }

    class <>c
    {
        static /*0x0*/ LoginPlatformView.<> <>9;
        static /*0x8*/ System.Predicate<LoginPlatformView.PlatformButton> <>9__2_0;
        static /*0x10*/ System.Action<LoginPlatformView.PlatformButton> <>9__2_1;

        static /*0xe5a698*/ <>c();
        /*0xe5a6f8*/ <>c();
        /*0xe5a700*/ bool <InitializePlatform>b__2_0(LoginPlatformView.PlatformButton x);
        /*0xe5a720*/ void <InitializePlatform>b__2_1(LoginPlatformView.PlatformButton x);
    }
}

class MailEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<PTShare.Define.SMail> OnClickEvent;
    /*0x18*/ LocalizeString m_cMailTitle;
    /*0x20*/ LocalizeString m_cMailTime;
    /*0x28*/ AtlasImage m_cMailNewDot;
    /*0x30*/ AtlasImage m_cMailIcon;
    /*0x38*/ AtlasImage m_cMailBackground;
    /*0x40*/ ItemRewardGroup m_cItemRewardGroup;
    /*0x48*/ PTShare.Define.SMail m_MailInfo;
    /*0x50*/ System.Collections.Generic.List<string> m_MailTitleKey;

    static /*0xddf720*/ MailEntity();
    static /*0xddeb9c*/ void add_OnClickEvent(System.Action<PTShare.Define.SMail> value);
    static /*0xddec90*/ void remove_OnClickEvent(System.Action<PTShare.Define.SMail> value);
    /*0xddf6a8*/ MailEntity();
    /*0xdded84*/ void InitMailInfo(PTShare.Define.SMail _mail);
    /*0xddf4f4*/ void OnClickMail();
    /*0xddf5cc*/ string GetExpireDateToString();
    /*0xddf260*/ int GetExpireDateToInt();
    /*0xddf324*/ void AlreadyReceiveMail();

    class <>c
    {
        static /*0x0*/ MailEntity.<> <>9;
        static /*0x8*/ System.Converter<string, string> <>9__11_0;

        static /*0xe5c5fc*/ <>c();
        /*0xe5c65c*/ <>c();
        /*0xe5c664*/ string <InitMailInfo>b__11_0(string x);
    }
}

class MailPopup : GuiBase
{
    /*0x40*/ ScrollContent_Mail m_cScrollContent;
    /*0x48*/ UnityEngine.GameObject m_MailListGroup;
    /*0x50*/ MailView m_MailViewGroup;
    /*0x58*/ UnityEngine.GameObject m_EmptyMailText;
    /*0x60*/ UnityEngine.UI.Button m_LeftButton;
    /*0x68*/ UnityEngine.UI.Button m_RightButton;
    /*0x70*/ LocalizeString m_cLeftBtnText;
    /*0x78*/ LocalizeString m_cRightBtnText;
    /*0x80*/ PTShare.Define.SMail m_curMailInfo;

    /*0xde1f28*/ MailPopup();
    /*0xde081c*/ System.Collections.Generic.List<PTShare.Define.SMail> get_m_liMailList();
    /*0xde089c*/ bool get_UseReceiveMail();
    /*0xde0918*/ bool get_UseDeleteMail();
    /*0xde0994*/ void OnExit();
    /*0xde0cc8*/ void OnCreate();
    /*0xde0ccc*/ void OnEnter();
    /*0xde0f70*/ void OnStart();
    /*0xde0f74*/ void OnFinish();
    /*0xde0f78*/ void OnLeave();
    /*0xde10ac*/ void OnDelete();
    /*0xde10b0*/ void RemoveMailAll();
    /*0xde11cc*/ void OnRemoveMailAllEvent();
    /*0xde11f0*/ void TakeMail();
    /*0xde12ec*/ void TakeMail(System.Action<PTShare.Define.SProperty> _callback);
    /*0xde1388*/ void OnTakeMailEvent(PTShare.Define.SProperty _reward);
    /*0xde14c4*/ void TakeMailAll();
    /*0xde15b4*/ void OnTakeMailAllEvent(PTShare.Define.SProperty _reward);
    /*0xde15e4*/ void OnClickLeftButton();
    /*0xde1680*/ void OnClickRightButton();
    /*0xde0f04*/ void RefreshScrollContent();
    /*0xde16c8*/ void HandleTryItemUpdate(int _index, MailEntity _content);
    /*0xde1748*/ void HandlerClickMailEntity(PTShare.Define.SMail _mailInfo);
    /*0xde1a54*/ void HandlerRefreshWindow();
    /*0xde1abc*/ void CallbackEmptyMailEvent(PTShare.Define.SProperty _reward);
    /*0xde0a80*/ void OpenMailList();
    /*0xde1824*/ void OpenMailView(bool _emptyReward);
    /*0xde1c08*/ void RefreshInteractableButton(bool _leftbtn, bool _rightbtn);
    /*0xde13b8*/ void OpenRewardPopup(PTShare.Define.SProperty _reward);
    /*0xde1f30*/ bool <CallbackEmptyMailEvent>b__35_0(PTShare.Define.SMail x);
}

class MailView : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_cMailTitle;
    /*0x20*/ LocalizeString m_cMailContext;
    /*0x28*/ LocalizeString m_cMailExpire;
    /*0x30*/ UnityEngine.GameObject m_MailRewardGroup;
    /*0x38*/ ItemRewardGroup m_cItemRewardList;
    /*0x40*/ PTShare.Define.SMail m_MailInfo;
    /*0x48*/ System.Collections.Generic.List<string> m_MailStringKey;

    /*0xde238c*/ MailView();
    /*0xde1c50*/ void InitMailView(PTShare.Define.SMail _mail, bool _isEmpty);
    /*0xde1f60*/ void SetLocalString(LocalizeString _local, string _key);
    /*0xde0a5c*/ bool IsActive();
    /*0xde1bd4*/ void SetActive(bool _enable);
    /*0xde22b0*/ string GetExpireDateToString();
    /*0xde21ec*/ int GetExpireDateToInt();

    class <>c
    {
        static /*0x0*/ MailView.<> <>9;
        static /*0x8*/ System.Converter<string, string> <>9__8_0;

        static /*0xe5d08c*/ <>c();
        /*0xe5d0ec*/ <>c();
        /*0xe5d0f4*/ string <SetLocalString>b__8_0(string x);
    }
}

class AutoBattleCanvas : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Canvas m_Canvas;

    /*0xf863c0*/ AutoBattleCanvas();
    /*0xf86358*/ void Awake();
}

class BottomMenuBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ string m_strMenuName;
    /*0x20*/ AtlasImage ButtonFrame;
    /*0x28*/ AtlasImage ButtonIcon;
    /*0x30*/ string[] ButtonIconSprite;

    /*0x13645b4*/ BottomMenuBase();
    /*0x1364474*/ string get__MenuName();
    /*0x136447c*/ void ActiveButton(string _menuName);
}

class TopMenuBuyInApp : TopMenuChild
{
    /*0x30*/ TableData.TableData_Event m_eventData;
    /*0x38*/ TableData.TableData_Eventbuyinapp m_eventBuyInAppData;
    /*0x40*/ TableData.TableData_Eventpreset m_eventPreset;
    /*0x48*/ DefineEvent.TriggerData m_triggerData;

    /*0x117b0c0*/ TopMenuBuyInApp();
    /*0x117a944*/ void SetBuyInAppData(TableData.TableData_Event data);
    /*0x117af74*/ void ButtonEvent();
    /*0x117b04c*/ EventParentPopup ShowEventParent();
    /*0x117af78*/ void ShowBuyInApp();
    /*0x117b0d0*/ void <ShowBuyInApp>b__7_0();

    class <>c
    {
        static /*0x0*/ TopMenuBuyInApp.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Eventpage> <>9__7_1;

        static /*0xcd20f8*/ <>c();
        /*0xcd2158*/ <>c();
        /*0xcd2160*/ bool <ShowBuyInApp>b__7_1(TableData.TableData_Eventpage eventPageData);
    }
}

class TopMenuDaily : TopMenuChild
{
    /*0x117c02c*/ TopMenuDaily();
    /*0x117c028*/ void ButtonEvent();
}

class TopMenuEvent : TopMenuChild
{
    /*0x117c154*/ TopMenuEvent();
    /*0x117c034*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuEvent.<> <>9;
        static /*0x8*/ System.Action <>9__0_1;
        static /*0x10*/ System.Action <>9__0_0;

        static /*0xcd218c*/ <>c();
        /*0xcd21ec*/ <>c();
        /*0xcd21f4*/ void <ButtonEvent>b__0_0();
        /*0xcd233c*/ void <ButtonEvent>b__0_1();
    }
}

class TopMenuFriend : TopMenuChild
{
    /*0x117c2c8*/ TopMenuFriend();
    /*0x117c15c*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuFriend.<> <>9;
        static /*0x8*/ System.Action <>9__0_1;
        static /*0x10*/ System.Action <>9__0_0;

        static /*0xcd23bc*/ <>c();
        /*0xcd241c*/ <>c();
        /*0xcd2424*/ void <ButtonEvent>b__0_0();
        /*0xcd256c*/ void <ButtonEvent>b__0_1();
    }
}

class TopMenuInventory : TopMenuChild
{
    /*0x117c358*/ TopMenuInventory();
    /*0x117c2d0*/ void ButtonEvent();
}

class TopMenuLimitedSeller : TopMenuChild
{
    /*0x30*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x117c8a0*/ TopMenuLimitedSeller();
    /*0x117c360*/ void OnDisable();
    /*0x117c390*/ void OnEnable();
    /*0x117c44c*/ void SetTimeText();
    /*0x117c72c*/ void Init(TopMenuType _type, TableData.TableData_Menusettingbase _base);
    /*0x117c754*/ void ButtonEvent();
    /*0x117c3e0*/ System.Collections.IEnumerator CoUpdateTimer();

    class <>c
    {
        static /*0x0*/ TopMenuLimitedSeller.<> <>9;
        static /*0x8*/ System.Action <>9__5_0;

        static /*0xcd2618*/ <>c();
        /*0xcd2678*/ <>c();
        /*0xcd2680*/ void <ButtonEvent>b__5_0();
    }

    class <CoUpdateTimer>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TopMenuLimitedSeller <>4__this;
        /*0x28*/ System.TimeSpan <minTime>5__2;
        /*0x30*/ System.TimeSpan <secSpan>5__3;
        /*0x38*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__4;

        /*0xcd2708*/ <CoUpdateTimer>d__6(int <>1__state);
        /*0xcd2734*/ void System.IDisposable.Dispose();
        /*0xcd2738*/ bool MoveNext();
        /*0xcd2ce8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd2cf0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd2d30*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TopMenuNotice : TopMenuChild
{
    /*0x117c930*/ TopMenuNotice();
    /*0x117c8a8*/ void ButtonEvent();
}

class TopMenuPost : TopMenuChild
{
    /*0x117ca90*/ TopMenuPost();
    /*0x117c938*/ void ButtonEvent();
    /*0x117ca1c*/ void ShowMailPopup();
}

class TopMenuQuest : TopMenuChild
{
    /*0x117cbe0*/ TopMenuQuest();
    /*0x117ca98*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuQuest.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;

        static /*0xcd2d38*/ <>c();
        /*0xcd2d98*/ <>c();
        /*0xcd2da0*/ void <ButtonEvent>b__0_0();
    }
}

class TopMenuShop : TopMenuChild
{
    /*0x117cd58*/ TopMenuShop();
    /*0x117cbe8*/ void ButtonEvent();

    class <>c
    {
        static /*0x0*/ TopMenuShop.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;

        static /*0xcd2e20*/ <>c();
        /*0xcd2e80*/ <>c();
        /*0xcd2e88*/ void <ButtonEvent>b__0_0();
    }
}

class TopMenuSpecialSeller : TopMenuChild
{
    /*0x30*/ PTShare.Define.SInstant m_packetData;
    /*0x38*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x117ced4*/ TopMenuSpecialSeller();
    /*0x117cd60*/ void OnDisable();
    /*0x117cd90*/ void OnEnable();
    /*0x117ce4c*/ void Init(TopMenuType _type, TableData.TableData_Menusettingbase _base);
    /*0x117a8ec*/ void SetSpecialSellerData(PTShare.Define.SInstant packetData);
    /*0x117ce74*/ void ButtonEvent();
    /*0x117cde0*/ System.Collections.IEnumerator CoUpdateTimer();

    class <CoUpdateTimer>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TopMenuSpecialSeller <>4__this;
        /*0x28*/ System.TimeSpan <expireTime>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;
        /*0x38*/ System.TimeSpan <secSpan>5__4;

        /*0xcd2f10*/ <CoUpdateTimer>d__7(int <>1__state);
        /*0xcd2f3c*/ void System.IDisposable.Dispose();
        /*0xcd2f40*/ bool MoveNext();
        /*0xcd32dc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd32e4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3324*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TopMenuBase : UnityEngine.MonoBehaviour
{
    static /*0x0*/ TopMenuType[] EVENT_TOPMENUS;
    static /*0x8*/ TopMenuType[] SPECIALSELLER_TOPMENUS;
    static /*0x10*/ System.Action OnRefreshReddot;
    static /*0x18*/ System.Action OnOpenLeftMenu;
    /*0x18*/ UnityEngine.GameObject m_MenuPrefeb;
    /*0x20*/ MenuSpread m_MenuSpread;
    /*0x28*/ UnityEngine.UI.GridLayoutGroup m_GridLayoutGroup;
    /*0x30*/ System.Collections.Generic.List<TopMenuType> m_liDefaultMenu;
    /*0x38*/ bool m_useSpecialSeller;
    /*0x39*/ bool m_useBuyInapp;
    /*0x3a*/ bool m_useLimitedSeller;
    /*0x3b*/ bool m_leftMenu;
    /*0x40*/ UnityEngine.GameObject m_reddot;
    /*0x48*/ System.Collections.Generic.List<TopMenuChild> m_liChildMenu;

    static /*0x117ae88*/ TopMenuBase();
    /*0x117ae10*/ TopMenuBase();
    /*0x1178dc4*/ void OnEnable();
    /*0x1179198*/ void OnDisable();
    /*0x1178dc8*/ void BindEvent();
    /*0x117919c*/ void RemoveEvent();
    /*0x1179528*/ void Init();
    /*0x1179594*/ void SetMenu();
    /*0x117a7cc*/ void SetMenuSpecialSeller(TopMenuChild topMenuChild, int index);
    /*0x117a5c0*/ void SetMenuEvent(TopMenuChild topMenuChild);
    /*0x117aa18*/ void AddMenu(TopMenuType _type, bool _refresh);
    /*0x117ab60*/ void DelMenu(TopMenuType _type, bool _refresh);
    /*0x117aca8*/ void CleanMenus(TopMenuType[] topMenuTypes);
    /*0x117a55c*/ bool IsContainsMenu(TopMenuType check, TopMenuType[] topMenuType);
    /*0x1179fa0*/ void UpdateEvent();
    /*0x117a2f0*/ void UpdateSpecialSeller();
    /*0x117a1d4*/ void UpdateLimitedSeller();
    /*0x1179bb4*/ void UpdateReddot();
    /*0x117ada4*/ void SetActive(bool _enable);
    /*0x117add8*/ void HandleExpireSpecialSeller(PTShare.Define.SInstant sInstant);
    /*0x117addc*/ void HandleRefresh();
    /*0x117ade0*/ void HandleShow();

    class <>c
    {
        static /*0x0*/ TopMenuBase.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Event> <>9__21_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Event> <>9__26_0;

        static /*0xcd2030*/ <>c();
        /*0xcd2090*/ <>c();
        /*0xcd2098*/ bool <SetMenuEvent>b__21_0(TableData.TableData_Event data);
        /*0xcd20b0*/ bool <UpdateEvent>b__26_0(TableData.TableData_Event data);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ TopMenuType _type;

        /*0xcd20c8*/ <>c__DisplayClass22_0();
        /*0xcd20d0*/ bool <AddMenu>b__0(TopMenuType x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ TopMenuType _type;

        /*0xcd20e0*/ <>c__DisplayClass23_0();
        /*0xcd20e8*/ bool <DelMenu>b__0(TopMenuType x);
    }
}

class TopMenuCache : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_ImageIcon;
    /*0x20*/ AtlasImage m_RedDot;
    /*0x28*/ LocalizeString m_cTitle;
    /*0x30*/ CustomButton m_cButton;
    /*0x38*/ UnityEngine.GameObject m_timerObject;
    /*0x40*/ LocalizeString m_timer;
    /*0x48*/ UnityEngine.GameObject m_hotIcon;

    /*0x117b8c4*/ TopMenuCache();
    /*0x117b23c*/ void SetActiveRedDot(bool _enable);
    /*0x117b278*/ RedDotBase GetRedDotComponent();
    /*0x117b2cc*/ void AddRedDotComponent(System.Type _componentType);
    /*0x117b308*/ void SetAtlasIcon(AtlasType _type, string _name);
    /*0x117b3c8*/ void SetAtlasDot(AtlasType _type, string _name);
    /*0x117b488*/ void SetHotIcon(bool enable);
    /*0x117b52c*/ void SetLocalizeKeyTitle(string _key);
    /*0x117b66c*/ void SetCustomTitle(string _title);
    /*0x117b710*/ void SetTimerEnable(bool _enable);
    /*0x117b758*/ void SetTimer(string timerStr);
    /*0x117b76c*/ void ClearAddButtonEvent(UnityEngine.Events.UnityAction _callback);
    /*0x117b820*/ void AddButtonEvent(UnityEngine.Events.UnityAction _callback);
}

class TopMenuChild : UnityEngine.MonoBehaviour
{
    /*0x18*/ TableData.TableData_Menusettingbase m_MenuInfo;
    /*0x20*/ TopMenuCache m_cTopMenuCache;
    /*0x28*/ TopMenuType <MenuType>k__BackingField;

    /*0x117b0c8*/ TopMenuChild();
    /*0x117b8cc*/ TopMenuType get_MenuType();
    /*0x117b8d4*/ void set_MenuType(TopMenuType value);
    /*0x117b8dc*/ bool get_IsUseCacheComponent();
    /*0x117b948*/ void Awake();
    /*0x117b99c*/ void Init(TopMenuType _type, TableData.TableData_Menusettingbase _base);
    /*0x117a508*/ void CacheComponent();
    /*0x117bb98*/ void SetRedDot();
    /*0x117bd28*/ void SetHotIcon(bool _enable);
    /*0x117bab8*/ void SetIcon(AtlasType _type, string _name);
    /*0x117bb10*/ void SetTitle(string _key);
    /*0x117bdb0*/ void SetCustomTitle(string _title);
    /*0x117bd6c*/ void SetTimerEnable(bool _enable);
    /*0x117bdf4*/ void SetTimer(string timerStr);
    /*0x117bb54*/ void SetButtonEvent(UnityEngine.Events.UnityAction _callback);
    /*0x117be44*/ void ButtonEvent();
}

enum TopMenuType
{
    NONE = 0,
    SHOP = 1,
    EVENT = 2,
    DAILY = 3,
    POST = 4,
    FRIEND = 5,
    INVENTORY = 6,
    QUEST = 7,
    NOTICE = 8,
    SPECIAL_SELLER = 9,
    EVENT_MENU = 10,
    LIMITED_SELLER = 11,
    FIRST_INAPP = 12,
    SPECIAL_SELLER_SELECT = 13,
    End = 14,
}

enum TopMenuPosition
{
    LEFT = 0,
    RIGHT = 1,
}

class TopMenuController : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<TopMenuBase> m_liTopMenuList;

    /*0x117c020*/ TopMenuController();
    /*0x117beb0*/ void InitializeMenu();
    /*0x117bf4c*/ TopMenuBase GetMenu(TopMenuPosition _pos);
    /*0x117bfc0*/ void AddMenu(TopMenuPosition _pos, TopMenuType _type);
    /*0x117bff0*/ void DelMenu(TopMenuPosition _pos, TopMenuType _type);
}

class Theme : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Image m_image;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_spine;
    /*0x28*/ UnityEngine.Sprite[] m_sprites;

    /*0x116bb38*/ Theme();
    /*0x116b958*/ void OnEnable();

    enum THEME_SPINE_NAME
    {
        normal = 0,
        spring = 1,
        summer = 2,
        fall = 3,
        winter = 4,
        year_01 = 5,
    }
}

class ThemeData
{
    /*0x10*/ UnityEngine.GameObject parent;
    /*0x18*/ MainMenuType[] activeMenuType;

    /*0x116bb40*/ ThemeData();
}

class ThemePopup : GuiBase
{
    /*0x40*/ ThemeData[] m_themeDatas;

    /*0x116bfd4*/ ThemePopup();
    /*0x116bb48*/ void OnCreate();
    /*0x116bb4c*/ void OnDelete();
    /*0x116bb50*/ void OnEnter();
    /*0x116bb54*/ void OnFinish();
    /*0x116bb58*/ void OnLeave();
    /*0x116bc18*/ void OnStart();
    /*0x116bc1c*/ void InitPopup();
    /*0x116be8c*/ void ActiveTheme(ThemeData themeData, MainMenuType currMenu);
    /*0x116bdc8*/ void BindEvent();
    /*0x116bb5c*/ void RemoveEvent();
    /*0x116bf0c*/ void HandleChangeMenu(MainMenuType menuType);
}

class TreasureboxGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject[] m_obTreasureBox;
    /*0x20*/ int[] RewardTime;
    /*0x28*/ int remainTime;
    /*0x30*/ System.Collections.IEnumerator m_IERegisterTime;

    /*0x1120350*/ TreasureboxGroup();
    /*0x111fdb8*/ System.DateTime get_LasttimeRewarded();
    /*0x111fe38*/ System.DateTime get_curNow();
    /*0x111feb8*/ void LoadTreaureBox();
    /*0x11201d8*/ void OnEnable();
    /*0x1120288*/ void OnDisable();
    /*0x112034c*/ void HandlerChangeUserInfo();
    /*0x112015c*/ System.Collections.IEnumerator IE_RegisterTresureBoxTime(int _fRemainTime);
    /*0x112012c*/ void ReleaseRigsterTime();

    class <IE_RegisterTresureBoxTime>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int _fRemainTime;
        /*0x28*/ TreasureboxGroup <>4__this;

        /*0xcd3b68*/ <IE_RegisterTresureBoxTime>d__12(int <>1__state);
        /*0xcd3b94*/ void System.IDisposable.Dispose();
        /*0xcd3b98*/ bool MoveNext();
        /*0xcd3c48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd3c50*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3c90*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum MainMenuType
{
    None = 0,
    CampainMainWindow = 1,
    ChatMainWindow = 2,
    AreaMainWindow = 3,
    HeroMainWindow = 4,
    CampMainWindow = 5,
    End = 6,
}

enum MainParentType
{
    NONE = 0,
    ONLYTOP = 1,
    ONLYTOPHIDEMENU = 2,
    ONLYBOTTOM = 3,
    ALL = 4,
    ALLHIDEMENU = 5,
}

class MainButtonWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<MainMenuType> OnChangeMainMenu;
    /*0x18*/ System.Collections.Generic.List<BottomMenuBase> m_liBottomMenuList;
    /*0x20*/ UnityEngine.GameObject m_TopParent;
    /*0x28*/ UnityEngine.GameObject m_BottomParent;
    /*0x30*/ UnityEngine.GameObject m_BottomCampainParent;
    /*0x38*/ UnityEngine.GameObject m_BottomMainParent;
    /*0x40*/ UnityEngine.GameObject m_BattleBtn;
    /*0x48*/ UnityEngine.GameObject m_BattleHardBtn;
    /*0x50*/ LocalizeString m_BattleBtnText;
    /*0x58*/ LocalizeString m_BattleHardBtnText;
    /*0x60*/ TopMenuController m_TopMenuContorller;
    /*0x68*/ UnityEngine.GameObject m_Leaflet;
    /*0x70*/ UnityEngine.GameObject m_GuildWar;
    /*0x78*/ UnityEngine.GameObject m_EventBoss;
    /*0x80*/ AtlasImage m_EventBossIcon;
    /*0x88*/ LocalizeString m_EventBossTitle;
    /*0x90*/ UnityEngine.GameObject m_EventRoulette;
    /*0x98*/ GuiBase m_CurMenu;
    /*0xa0*/ MainMenuType m_eMenuType;
    /*0xa8*/ System.Collections.Generic.Queue<int> m_QueueCode;
    /*0xb0*/ int[] m_DetachCode;

    static /*0xde5954*/ MainButtonWindow();
    static /*0xde240c*/ void add_OnChangeMainMenu(System.Action<MainMenuType> value);
    static /*0xde2500*/ void remove_OnChangeMainMenu(System.Action<MainMenuType> value);
    /*0xde5894*/ MainButtonWindow();
    /*0xde2404*/ MainMenuType get_CurrentMenuType();
    /*0xde25f4*/ void OnEnable();
    /*0xde3030*/ void OnDisable();
    /*0xde32d8*/ void OnClickSelectMenu(int _type);
    /*0xde3378*/ void EasterEgg(int type);
    /*0xde3588*/ void SelectMenu(MainMenuType _type);
    /*0xde34b4*/ void StartPageAnimation();
    /*0xde3630*/ void SetInterfaceView(MainParentType _viewType);
    /*0xde37e4*/ void SetTopBottomActiveController(bool _isTop, bool _isBottom);
    /*0xde37c8*/ TopMenuBase GetMenuBase(TopMenuPosition _position);
    /*0xde2aa0*/ void RefreshBattleButton();
    /*0xde2e5c*/ void SetEventBossView();
    /*0xde382c*/ void SetActiveBottomButton(string _name);
    /*0xde2d84*/ bool IsShowGuildWarIcon();
    /*0xde38e8*/ void OnClick_Battle();
    /*0xde3de8*/ void OnClick_Profile();
    /*0xde3e5c*/ void OnClick_WorldMap();
    /*0xde3fa4*/ UserData get_m_userData();
    /*0xde4034*/ void OnClick_IdleReward(bool _isFast);
    /*0xde4684*/ void OnClick_CashShop();
    /*0xde480c*/ void OnClick_Leaflet();
    /*0xde48cc*/ void OnClick_GuildWar();
    /*0xde4a10*/ void OnClick_House();
    /*0xde4f20*/ void OnClick_EventBoss();
    /*0xde50a4*/ void OnClick_EventRoulette();
    /*0xde50f8*/ void OnClick_Ads();
    void OnClickMenu<T>();
    /*0xde5178*/ void HandlerChangeMenu(MainMenuType _type);
    /*0xde56f4*/ void HandlerExit();
    /*0xde56fc*/ void HandlerChangeChapter();
    /*0xde578c*/ void HandlerDailyChange();
    /*0xde5858*/ void HandlerCheckGuildWarIcon(PTShare.Define.SGuild sGuild);
    /*0xde5958*/ void <StartPageAnimation>b__30_0();

    class <>c
    {
        static /*0x0*/ MainButtonWindow.<> <>9;
        static /*0x8*/ System.Action <>9__40_0;
        static /*0x10*/ System.Action <>9__44_0;
        static /*0x18*/ System.Action <>9__46_1;
        static /*0x20*/ System.Action <>9__46_0;
        static /*0x28*/ System.Action <>9__47_1;
        static /*0x30*/ System.Action <>9__47_0;
        static /*0x38*/ System.Action <>9__48_1;
        static /*0x40*/ System.Action <>9__48_0;

        static /*0xe5d1f8*/ <>c();
        /*0xe5d258*/ <>c();
        /*0xe5d260*/ void <OnClick_WorldMap>b__40_0();
        /*0xe5d348*/ void <OnClick_CashShop>b__44_0();
        /*0xe5d3d0*/ void <OnClick_GuildWar>b__46_0();
        /*0xe5d518*/ void <OnClick_GuildWar>b__46_1();
        /*0xe5d620*/ void <OnClick_House>b__47_0();
        /*0xe5d768*/ void <OnClick_House>b__47_1();
        /*0xe5d7e8*/ void <OnClick_EventBoss>b__48_0();
        /*0xe5d930*/ void <OnClick_EventBoss>b__48_1();
    }

    class <>c__DisplayClass43_0
    {
        /*0x10*/ bool _isFast;
        /*0x18*/ MainButtonWindow <>4__this;
        /*0x20*/ System.Action <>9__3;
        /*0x28*/ System.Action<PTShare.Define.SProperty> <>9__2;

        /*0xe5d984*/ <>c__DisplayClass43_0();
        /*0xe5d98c*/ void <OnClick_IdleReward>b__1(bool _instance);
        /*0xe5daa4*/ void <OnClick_IdleReward>b__2(PTShare.Define.SProperty _reward);
        /*0xe5dc30*/ void <OnClick_IdleReward>b__3();
        /*0xe5dcbc*/ void <OnClick_IdleReward>b__0(PTShare.Define.SProperty response);
    }
}

class MainUserWindow : GuiBase
{
    static /*0x0*/ System.Action OnMainWindowEvent;
    /*0x40*/ MainButtonWindow m_MainButtonWindow;

    static /*0xde989c*/ MainUserWindow();
    static /*0xde91bc*/ void add_OnMainWindowEvent(System.Action value);
    static /*0xde92b0*/ void remove_OnMainWindowEvent(System.Action value);
    /*0xde9894*/ MainUserWindow();
    /*0xde93a4*/ void OnCreate();
    /*0xde93fc*/ void OnEnter();
    /*0xde9510*/ void OnStart();
    /*0xde9514*/ void OnFinish();
    /*0xde9518*/ void OnLeave();
    /*0xde951c*/ void OnDelete();
    /*0xde9520*/ void OnExit();
    /*0xde9528*/ void InitalizeMenu(MainMenuType _type, bool useSubEvent);
    /*0xde9600*/ void SubEvent(MainMenuType _type);
    /*0xde9868*/ void RefreshBattleButton();
    /*0xde9878*/ MainMenuType GetCurrentMenuType();

    class <>c
    {
        static /*0x0*/ MainUserWindow.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;

        static /*0xe5df38*/ <>c();
        /*0xe5df98*/ <>c();
        /*0xe5dfa0*/ void <SubEvent>b__12_0();
    }
}

class LendGenericWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_MercenaryLendedEntity m_ScrollContent;
    /*0x20*/ UnityEngine.GameObject m_NothingText;

    /*0xfa8c78*/ LendGenericWindow();
    /*0xfa889c*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> get_curLendedList();
    /*0xfa891c*/ void OnEnable();
    /*0xfa8a48*/ void OnDisable();
    /*0xfa8b1c*/ void InitializeWindow();
    /*0xfa8b94*/ void InitializeScroll();
    /*0xfa8bf4*/ void HandlerScrollContent(int _index, MercenaryLendedEntity _obj);
}

class RequestLendWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_MercenaryLendRequestEntity m_ScrollContent;
    /*0x20*/ UnityEngine.GameObject m_NothingText;
    /*0x28*/ UnityEngine.UI.Button m_IgnoreButton;
    /*0x30*/ UnityEngine.UI.Button m_LendButton;
    /*0x38*/ System.Collections.Generic.List<MercenaryPlayerSet> m_liLendPlayer;

    /*0xf24760*/ RequestLendWindow();
    /*0xf23f94*/ void OnEnable();
    /*0xf24168*/ void OnDisable();
    /*0xf242b4*/ void InitializeWindow();
    /*0xf243a4*/ void InitializeScroll();
    /*0xf24400*/ void HandlerScrollContent(int _index, MercenaryLendRequestEntity _obj);
    /*0xf24514*/ void OnClickFastLend();
    /*0xf24634*/ void OnClickAllIgnoreLend();
    /*0xf24754*/ void CallbackProtocolFastLend();
    /*0xf24758*/ void CallbackProtocolAllIgnoreLend();
    /*0xf2475c*/ void HandlerChangeEvent();
}

class GestureButtonEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Desc;
    /*0x20*/ ANIMATION_CLIP eAnimationClip;
    /*0x28*/ Spine.Unity.SkeletonGraphic character;
    /*0x30*/ bool bIsLoop;

    /*0xed37a0*/ GestureButtonEntity();
    /*0xed3564*/ void InitializeEntity(Spine.Unity.SkeletonGraphic skeleCharacter, ANIMATION_CLIP eClipType, bool isLoop);
    /*0xed357c*/ void SetLocalizeButton(ANIMATION_CLIP eClipType);
    /*0xed36e4*/ void OnClick_Button();
}

class NoticeDescriptionView : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Description;
    /*0x20*/ LocalizeString m_Title;
    /*0x28*/ LocalizeString m_RegDate;
    /*0x30*/ UnityEngine.UI.Button m_LinkButton;
    /*0x38*/ UnityEngine.UI.Image m_Banner;
    /*0x40*/ UnityEngine.UI.ScrollRect m_NoticeScroll;
    /*0x48*/ PTShare.Define.SNotice noticeData;

    /*0x2b52aa4*/ NoticeDescriptionView();
    /*0x2b5259c*/ void OnDisable();
    /*0x2b526f0*/ void OnDestroy();
    /*0x2b52844*/ void Initialize(PTShare.Define.SNotice _data);
    /*0x2b529c0*/ System.Collections.IEnumerator CoScrollUpdate();
    /*0x2b52a2c*/ System.Collections.IEnumerator CoTextureUpdate();
    /*0x2b52a98*/ void OnClick_LinkButton();

    class <CoScrollUpdate>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ NoticeDescriptionView <>4__this;

        /*0x1089ccc*/ <CoScrollUpdate>d__10(int <>1__state);
        /*0x1089cf8*/ void System.IDisposable.Dispose();
        /*0x1089cfc*/ bool MoveNext();
        /*0x1089da8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1089db0*/ void System.Collections.IEnumerator.Reset();
        /*0x1089df0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTextureUpdate>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ NoticeDescriptionView <>4__this;
        /*0x28*/ UnityEngine.Networking.UnityWebRequest <www>5__2;

        /*0x1089df8*/ <CoTextureUpdate>d__11(int <>1__state);
        /*0x1089e24*/ void System.IDisposable.Dispose();
        /*0x1089e28*/ bool MoveNext();
        /*0x108a068*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108a070*/ void System.Collections.IEnumerator.Reset();
        /*0x108a0b0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class NoticeEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_title;
    /*0x20*/ LocalizeString m_releaseDate;
    /*0x28*/ UnityEngine.GameObject m_RedDot;
    /*0x30*/ PTShare.Define.SNotice noticeData;
    /*0x38*/ System.Action<PTShare.Define.SNotice> OnClickCallback;

    /*0x2b52dc8*/ NoticeEntity();
    /*0x2b52aac*/ void InitializeEntity(PTShare.Define.SNotice _data, System.Action<PTShare.Define.SNotice> _callback);
    /*0x2b52ce4*/ void OnClick();
}

class AccountPlatformEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_PlatformName;
    /*0x20*/ LocalizeString m_Email;
    /*0x28*/ LocalizeString m_ConversionButtonStr;
    /*0x30*/ AtlasImage m_PlatformIcon;
    /*0x38*/ UnityEngine.UI.Button m_ConversionButton;
    /*0x40*/ PUBSDK.DefinePubSDK.PubLoginType eLoginType;
    /*0x48*/ string strMail;

    /*0x120dfb4*/ AccountPlatformEntity();
    /*0x120d90c*/ void InitializeEntity(PUBSDK.DefinePubSDK.PubLoginType eType, string eMail);
    /*0x120d918*/ void SetView();
    /*0x120db5c*/ void SetPlatformIcon(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x120da64*/ void SetPlatformName(string str);
    /*0x120dbe8*/ void SetActiveButton(bool enable);
    /*0x120dd2c*/ void SetPlatformMail(string str);
    /*0x120dea8*/ void OnClick_Link();
}

class ChannelAllChannelView : UnityEngine.MonoBehaviour
{
    /*0x18*/ NewScrollRect_ChannelGroupEntity m_ChannelGroupScroll;
    /*0x20*/ UnityEngine.UI.ToggleGroup m_ChannelGroupToggle;
    /*0x28*/ NewScrollRect_ChannelSelectEntity m_ChannelEntityScroll;
    /*0x30*/ int m_nViewChannelLimit;
    /*0x34*/ int nCurrentSelectGroup;

    /*0xd6e354*/ ChannelAllChannelView();
    /*0xd6d1a8*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> get_AreaPlayerList();
    /*0xd6d228*/ int get_CurAreaNumber();
    /*0xd6d2a8*/ int get_CurMaxArea();
    /*0xd6d328*/ void OnDisable();
    /*0xd6d3ac*/ void InitializeView();
    /*0xd6d32c*/ void Release();
    /*0xd6d3d0*/ void InitializeScroll_ChannelGroup();
    /*0xd6d7ac*/ void Handler_ChannelGroup(int nIndex, ChannelGroupEntity ent);
    /*0xd6da98*/ void OnClickChannelGroupToggle(bool isOn);
    /*0xd6d898*/ System.ValueTuple<int, int> GetChannelMinMaxIndex(int nIndex);
    /*0xd6db3c*/ int GetSelectChannelGroup();
    /*0xd6d5c8*/ void InitializeScroll_ChannelEntity();
    /*0xd6dccc*/ void Handler_ChannelEntity(int nIndex, ChannelSelectEntity ent);
    /*0xd6e0e0*/ void OnClickChannelEntity(int nIndex);

    class <>c
    {
        static /*0x0*/ ChannelAllChannelView.<> <>9;
        static /*0x8*/ System.Func<ChannelGroupEntity, bool> <>9__18_0;

        static /*0xdacf68*/ <>c();
        /*0xdacfc8*/ <>c();
        /*0xdacfd0*/ bool <GetSelectChannelGroup>b__18_0(ChannelGroupEntity x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int curIndex;

        /*0xdacfec*/ <>c__DisplayClass20_0();
        /*0xdacff4*/ bool <Handler_ChannelEntity>b__0(PTShare.Define.SAreaPlayer x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int nIndex;

        /*0xdad018*/ <>c__DisplayClass21_0();
        /*0xdad020*/ void <OnClickChannelEntity>b__0(bool result);
    }
}

class ChannelBestChannelView : UnityEngine.MonoBehaviour
{
    /*0x18*/ NewScrollRect_ChannelSelectEntity m_ChannelEntityScroll;

    /*0xd6eb8c*/ ChannelBestChannelView();
    /*0xd6e364*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> get_AreaPlayerList();
    /*0xd6e3e4*/ int get_CurAreaNumber();
    /*0xd6e464*/ int get_CurMaxArea();
    /*0xd6e4e4*/ void OnDisable();
    /*0xd6e540*/ void InitializeView();
    /*0xd6e4e8*/ void Release();
    /*0xd6e544*/ void InitializeScroll_ChannelEntity();
    /*0xd6e794*/ void Handler_ChannelEntity(int nIndex, ChannelSelectEntity ent);
    /*0xd6e918*/ void OnClickChannelEntity(int nIndex);
    /*0xd6eb94*/ bool <InitializeScroll_ChannelEntity>b__10_0(PTShare.Define.SAreaPlayer x);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ int nIndex;

        /*0xdad0c8*/ <>c__DisplayClass12_0();
        /*0xdad0d0*/ void <OnClickChannelEntity>b__0(bool result);
    }
}

class ChannelGroupEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_ServerText;
    /*0x20*/ UnityEngine.UI.Toggle toggleParent;
    /*0x28*/ UnityEngine.Events.UnityAction<bool> onClickCallback;
    /*0x30*/ int nEntityIndex;

    /*0xd6ec94*/ ChannelGroupEntity();
    /*0xd6ebc4*/ UnityEngine.UI.Toggle get_toggle();
    /*0xd6ec64*/ void OnDestroy();
    /*0xd6d944*/ void InitializeEntity(UnityEngine.UI.ToggleGroup group, int nIndex, int nMin, int nMax, bool bIsOn, UnityEngine.Events.UnityAction<bool> onClick);
    /*0xd6ec6c*/ int GetIndex();
    /*0xd6ec74*/ bool IsOn();
    /*0xd6d77c*/ void OnEntity(bool enable);
}

class ChannelSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_ServerText;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ PlayerProfileSlot m_ProfileSlot;
    /*0x30*/ AtlasImage m_SelectFrame;
    /*0x38*/ AtlasImage m_NewImage;
    /*0x40*/ CustomButton buttonParent;
    /*0x48*/ PTShare.Define.SAreaPlayer areaInfo;
    /*0x50*/ int channelIndex;

    /*0xd6ee14*/ ChannelSelectEntity();
    /*0xd6ed0c*/ CustomButton get_button();
    /*0xd6edac*/ void OnDestroy();
    /*0xd6de8c*/ void InitializeEntity(int nChannelInfo, PTShare.Define.SAreaPlayer aInfo, bool bIsOn, bool bIsNew, UnityEngine.Events.UnityAction<int> onClick);
    /*0xd6ee0c*/ int GetChannelID();
    /*0xd6edcc*/ void SetActiveFrame(bool enable);
    /*0xd6edec*/ void SetActiveNew(bool enable);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ UnityEngine.Events.UnityAction<int> onClick;
        /*0x18*/ int nChannelInfo;

        /*0xdad178*/ <>c__DisplayClass11_0();
        /*0xdad180*/ void <InitializeEntity>b__0();
    }
}

class CommunityButtonEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Icon;
    /*0x20*/ LocalizeString m_Title;
    /*0x28*/ string strCommunityType;

    /*0x10e572c*/ CommunityButtonEntity();
    /*0x10e5358*/ void InitializeEntity(string strType);
    /*0x10e54e0*/ void OnClick_Button();

    class <>c
    {
        static /*0x0*/ CommunityButtonEntity.<> <>9;
        static /*0x8*/ System.Action <>9__4_0;

        static /*0x106f184*/ <>c();
        /*0x106f1e4*/ <>c();
        /*0x106f1ec*/ void <OnClick_Button>b__4_0();
    }
}

class CustomProfileSlotEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_expire;

    /*0xf4e61c*/ CustomProfileSlotEntity();
    /*0xf4e458*/ PlayerProfileSlot get_Slot();
    /*0xf4e460*/ void InitializeSlot(PlayerProfileInfo _info, System.Action _callback, bool _isDisable);
    /*0xf4e4e0*/ void SetText(string _key);
}

class UserInfoViewEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_curNickName;
    /*0x20*/ LocalizeString m_curGuildName;
    /*0x28*/ LocalizeString m_curToken;
    /*0x30*/ LocalizeString m_curMsg;
    /*0x38*/ LocalizeString m_curPower;
    /*0x40*/ LocalizeString m_curCampaign;
    /*0x48*/ HeroOptionTroopSlot[] m_SlotTroop;
    /*0x50*/ PlayerProfileSlot m_PlayerSlot;
    /*0x58*/ AtlasImage m_curGender;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SHero> mCurRepresentativeHeros;

    /*0x10c7924*/ UserInfoViewEntity();
    /*0x10c6c38*/ SProfile get_mCurProfile();
    /*0x10c6cc0*/ void View(UserData _userData);
    /*0x10c7228*/ void OnClick_ViewUpdateNickName();
    /*0x10c72ac*/ void OnClick_ViewUpdateMessage();
    /*0x10c7320*/ void OnClick_ViewUpdateProfileImage();
    /*0x10c73a0*/ void OnClick_UpdateGender();
    /*0x10c7414*/ void OnClick_Account();
    /*0x10c74d4*/ void OnClick_Customer();
    /*0x10c75b8*/ void OnClick_ShowLanguage();
    /*0x10c762c*/ void OnClick_Community();
    /*0x10c76ec*/ void OnClick_PlayerIDPress();
    /*0x10c77cc*/ void LoadRepresentativeTroopSlot();
    /*0x10c7030*/ void LoadGender();
    /*0x10c7150*/ void LoadProfileImage();
}

class UserOptionViewEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_curBGMSlider;
    /*0x20*/ UnityEngine.UI.Slider m_curEffectSlider;
    /*0x28*/ UnityEngine.UI.Slider m_curVoiceSlider;
    /*0x30*/ UnityEngine.UI.Toggle SETTING_POWERSAVEING_MODE;
    /*0x38*/ UnityEngine.UI.Toggle SETTING_HP_VIEW;
    /*0x40*/ UnityEngine.UI.Toggle SETTING_PLAY_VIDEO;
    /*0x48*/ UnityEngine.UI.Toggle SETTING_COMBAT_TEXT_VIEW;
    /*0x50*/ UnityEngine.UI.Toggle SETTING_TOUCH_EFFECT_VIEW;
    /*0x58*/ UnityEngine.UI.Toggle SETTING_GACHA_NOTICE_VIEW;
    /*0x60*/ UnityEngine.UI.Toggle SETTING_WHISPER_NOTICE_VIEW;
    /*0x68*/ UnityEngine.UI.Toggle ALRAM_PushAll_Toggles;
    /*0x70*/ UnityEngine.UI.Toggle ALRAM_PushNight_Toggles;
    /*0x78*/ UnityEngine.UI.Toggle ALRAM_PushAdvertise_Toggles;
    /*0x80*/ UnityEngine.UI.Button COUPON_BUTTON;
    /*0x88*/ UnityEngine.UI.Button REGION_BUTTON;

    /*0x10c8dd0*/ UserOptionViewEntity();
    /*0x10c7bac*/ void View();
    /*0x10c7fe8*/ void LoadCombatToggle();
    /*0x10c888c*/ void OnClickPowerSaving(bool _isValue);
    /*0x10c8914*/ void OnClickHPView(bool _isValue);
    /*0x10c8608*/ void LoadAlarmToggle();
    /*0x10c899c*/ void CallbackPushOnOff();
    /*0x10c8a44*/ void OnClick_Privacy();
    /*0x10c8b28*/ void OnClick_Coupon();
    /*0x10c8ba8*/ void OnClick_MoveChannel();
    /*0x10c8c5c*/ void OnClick_MoveServer();
    /*0x10c8d1c*/ void OnClick_Credit();
    /*0x10c8dd8*/ void <LoadAlarmToggle>b__19_0(bool isOn);
    /*0x10c8f08*/ void <LoadAlarmToggle>b__19_1(bool isOn);
    /*0x10c9038*/ void <LoadAlarmToggle>b__19_2(bool isOn);

    class <>c
    {
        static /*0x0*/ UserOptionViewEntity.<> <>9;
        static /*0x8*/ UnityEngine.Events.UnityAction<float> <>9__15_0;
        static /*0x10*/ UnityEngine.Events.UnityAction<float> <>9__15_1;
        static /*0x18*/ UnityEngine.Events.UnityAction<float> <>9__15_2;
        static /*0x20*/ UnityEngine.Events.UnityAction<bool> <>9__16_0;
        static /*0x28*/ UnityEngine.Events.UnityAction<bool> <>9__16_1;
        static /*0x30*/ UnityEngine.Events.UnityAction<bool> <>9__16_2;
        static /*0x38*/ UnityEngine.Events.UnityAction<bool> <>9__16_3;
        static /*0x40*/ UnityEngine.Events.UnityAction<bool> <>9__16_4;

        static /*0xd8afd4*/ <>c();
        /*0xd8b034*/ <>c();
        /*0xd8b03c*/ void <View>b__15_0(float _value);
        /*0xd8b0b0*/ void <View>b__15_1(float _value);
        /*0xd8b124*/ void <View>b__15_2(float _value);
        /*0xd8b198*/ void <LoadCombatToggle>b__16_0(bool _instance);
        /*0xd8b220*/ void <LoadCombatToggle>b__16_1(bool _instance);
        /*0xd8b2a8*/ void <LoadCombatToggle>b__16_2(bool _instance);
        /*0xd8b330*/ void <LoadCombatToggle>b__16_3(bool _instance);
        /*0xd8b3b8*/ void <LoadCombatToggle>b__16_4(bool _instance);
    }
}

class HeroOptionTroopSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_obSelect;

    /*0x1223480*/ HeroOptionTroopSlot();
    /*0x12232e4*/ void DisableTroopSlot();
    /*0x1223430*/ void EnableTroopSlot();
    /*0x1223390*/ void SetSelect(bool _isSelect);
}

class OptionAccountPlatform : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<AccountPlatformEntity> m_liAccountPlatform;
    /*0x20*/ System.Collections.Generic.Dictionary<int, string> dicPlatformMail;

    /*0x11357b8*/ OptionAccountPlatform();
    /*0x11355d8*/ void Initialize();
}

class OptionSelectImage : UnityEngine.MonoBehaviour
{
    /*0x113cd78*/ OptionSelectImage();
    /*0x113cd70*/ void Start();
    /*0x113cd74*/ void Update();
}

class OptionSpecialSettings : UnityEngine.MonoBehaviour
{
    /*0x113cd88*/ OptionSpecialSettings();
    /*0x113cd80*/ void Start();
    /*0x113cd84*/ void Update();
}

class RegionSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_ServerName;
    /*0x20*/ AtlasImage m_BackImage;
    /*0x28*/ string url;
    /*0x30*/ ServerRegion eRegion;

    /*0x11c8b08*/ RegionSelectEntity();
    /*0x11c8720*/ void InitializeEntity(string serverName, ServerRegion region);
    /*0x11c8934*/ void OnClick_Button();
    /*0x11c8b64*/ void <OnClick_Button>b__5_0(bool result);
}

class ScrollContent_EditorTroop : ScrollContent<HeroOptionTroopSlot>
{
    /*0xe19214*/ ScrollContent_EditorTroop();
}

class OtherFormationSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroTroopSlot> m_liTroopSlot;
    /*0x20*/ LocalizeString m_TotalPower;
    /*0x28*/ System.Collections.Generic.List<FormationCharacterEntity> m_liCharacterEntity;
    /*0x30*/ PTShare.Define.SDeck m_ClearInfo;
    /*0x38*/ long m_lPlayerID;
    /*0x40*/ System.Collections.Generic.List<OtherFormationSubWindow.SHeroSlot> m_liHeroInfo;

    /*0x113e830*/ OtherFormationSubWindow();
    /*0x113e21c*/ void InitializeWindow(long _playerid, PTShare.Define.SDeck _clear);
    /*0x113e374*/ void SetStatusView();
    /*0x113e3c4*/ void SetTroopSlot();
    /*0x113e6a4*/ void SetCharacterView();
    /*0x113e928*/ void <SetTroopSlot>b__9_1(PTShare.Define.SHero _shero);

    struct SHeroSlot
    {
        /*0x10*/ int slot;
        /*0x18*/ PTShare.Define.SHero hero;
    }

    class <>c
    {
        static /*0x0*/ OtherFormationSubWindow.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SBattleHero, OtherFormationSubWindow.SHeroSlot> <>9__7_0;

        static /*0x108c1c0*/ <>c();
        /*0x108c220*/ <>c();
        /*0x108c228*/ OtherFormationSubWindow.SHeroSlot <InitializeWindow>b__7_0(PTShare.Define.SBattleHero x);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ int i;

        /*0x108c2dc*/ <>c__DisplayClass9_0();
        /*0x108c2e4*/ bool <SetTroopSlot>b__0(OtherFormationSubWindow.SHeroSlot x);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ int i;

        /*0x108c2c4*/ <>c__DisplayClass10_0();
        /*0x108c2cc*/ bool <SetCharacterView>b__0(OtherFormationSubWindow.SHeroSlot x);
    }
}

class OtherInfomationSubWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeStateEvent;
    /*0x18*/ PlayerProfileSlot m_ProfileSlot;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_Description;
    /*0x30*/ LocalizeString m_TotalPower;
    /*0x38*/ LocalizeString m_Campaign;
    /*0x40*/ LocalizeString m_GuildName;
    /*0x48*/ LocalizeString m_AccountID;
    /*0x50*/ LocalizeString m_BlackBtnText;
    /*0x58*/ LocalizeString m_InviteBtnText;
    /*0x60*/ AtlasImage m_SexIcon;
    /*0x68*/ System.Collections.Generic.List<HeroTroopSlot> m_liHeroSlot;
    /*0x70*/ UnityEngine.GameObject m_guildMemberSettingButtonObject;
    /*0x78*/ GuildManageWindow m_guildManageWindow;
    /*0x80*/ UnityEngine.GameObject m_ButtonParent;
    /*0x88*/ ServerProtocol.ResAccountDetail m_DetailInfo;
    /*0x90*/ bool m_bIsFriend;
    /*0x91*/ bool m_bIsBlacklist;
    /*0x92*/ bool m_bIsUsedGuild;

    static /*0x1140ec0*/ OtherInfomationSubWindow();
    static /*0x113ea24*/ void add_OnChangeStateEvent(System.Action value);
    static /*0x113eb18*/ void remove_OnChangeStateEvent(System.Action value);
    /*0x1140e48*/ OtherInfomationSubWindow();
    /*0x113ec0c*/ void InitializeWindow(ServerProtocol.ResAccountDetail _detail, bool isUsedGuild);
    /*0x113f534*/ void Refresh(ServerProtocol.ResAccountDetail _detail);
    /*0x113ed94*/ void SetStatusView();
    /*0x113f248*/ void SetFormation();
    /*0x113f5b0*/ void OnClickInviteFriend();
    /*0x113fab4*/ void OnClickBlacklist();
    /*0x113fea4*/ void OnClickWispher();
    /*0x114007c*/ void OnClickGuildMemberSetting();
    /*0x114030c*/ void OnClick_PlayerID();
    /*0x11403a4*/ void CallbackInviteFriend();
    /*0x114064c*/ void CallbackDeleteFriend();
    /*0x11408f4*/ void CallbackAddBlacklist();
    /*0x1140b9c*/ void CallbackDeleteBlacklist();
    /*0x1140e44*/ void CallBackDeletFriendPopup();
    /*0x1140ec4*/ void <OnClickInviteFriend>b__25_0(bool confirm);
    /*0x1140fd0*/ void <OnClickBlacklist>b__26_0(bool confirm);
    /*0x11410dc*/ bool <OnClickGuildMemberSetting>b__28_0(PTShare.Define.SGuildMember data);

    class <>c__DisplayClass24_0
    {
        /*0x10*/ OtherInfomationSubWindow <>4__this;
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SHero> _mainforce;
        /*0x20*/ System.Action<PTShare.Define.SHero> <>9__0;

        /*0x108c2f4*/ <>c__DisplayClass24_0();
        /*0x108c2fc*/ void <SetFormation>b__0(PTShare.Define.SHero _shero);
    }
}

class HeroPromoteInfoView : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroPromoteInfoView.GradeView m_sGradeView_Bef;
    /*0x40*/ HeroPromoteInfoView.GradeView m_sGradeView_Aft;
    /*0x68*/ HeroPromoteResultSlot m_cHeroSlotCache_Bef;
    /*0x70*/ HeroPromoteResultSlot m_cHeroSlotCache_Aft;

    /*0x1224920*/ HeroPromoteInfoView();
    /*0x1223b48*/ void View(PTShare.Define.SHero _tPrevious, PTShare.Define.SHero _tAfter);
    /*0x1224728*/ void SetGradeView(PTShare.Define.SHero _hero, TableData.TableData_Unitgradelv _maxlv, HeroPromoteInfoView.GradeView _targetView);

    struct GradeView
    {
        /*0x10*/ LocalizeString cCombatPower;
        /*0x18*/ LocalizeString cMaxLevel;
        /*0x20*/ LocalizeString cAttack;
        /*0x28*/ LocalizeString cDefensive;
        /*0x30*/ LocalizeString cStrength;
    }
}

class HeroPromoteFeedSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject MountedCard;
    /*0x50*/ AtlasImage m_PlusIcon;
    /*0x58*/ bool m_isFeed;

    /*0x12239dc*/ HeroPromoteFeedSlot();
    /*0x122359c*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback, HeroPromoteFeedSlot.SLOTTYPE _slotType);
    /*0x1223734*/ void InitMaterialSlot(PTShare.Define.SHero _hero, int _grade, System.Action<PTShare.Define.SHero> _callback, HeroPromoteFeedSlot.SLOTTYPE _slotType);
    /*0x12237b4*/ void SetFeedApply(bool _isFeed);
    /*0x12235dc*/ void UpdateSlotType(HeroPromoteFeedSlot.SLOTTYPE _slotType);
    /*0x12238d4*/ void Release();
    /*0x1223868*/ void SetActiveObject(bool _enable);
    /*0x122390c*/ void HandlerChangeEvent(PTShare.Define.SHero _hero);

    enum SLOTTYPE
    {
        CHARACTER_SLOT = 0,
        CHARACTER_OPECITY = 1,
        PLUS_SLOT = 2,
    }
}

class HeroPromoteMaterialSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_curSubSelect;
    /*0x50*/ UnityEngine.GameObject m_curMainSelect;
    /*0x58*/ TweenImageColor m_curSelectEffect;
    /*0x60*/ float m_durationTime;
    /*0x68*/ UnityEngine.GameObject m_ableIcon;
    /*0x70*/ bool <IsUnable>k__BackingField;
    /*0x71*/ bool <IsSelect>k__BackingField;
    /*0x72*/ bool <IsPromoteAble>k__BackingField;
    /*0x78*/ System.Action<HeroPromoteMaterialSlot> _onCallbackPromoteMaterialSlot;
    /*0x80*/ UnityEngine.Color32 m_cColor_Begin;
    /*0x84*/ UnityEngine.Color32 m_cColor_Target;

    /*0x1229748*/ HeroPromoteMaterialSlot();
    /*0x12296ac*/ bool get_IsUnable();
    /*0x12296b4*/ void set_IsUnable(bool value);
    /*0x12296c0*/ bool get_IsSelect();
    /*0x12296c8*/ void set_IsSelect(bool value);
    /*0x12296d4*/ bool get_IsPromoteAble();
    /*0x12296dc*/ void set_IsPromoteAble(bool value);
    /*0x1225f48*/ void Init(PTShare.Define.SHero _hero, int m_nCurProperty, System.Action<HeroPromoteMaterialSlot> _callback);
    /*0x12296e8*/ void OnClick();
    /*0x12261e4*/ void SetUnAble(bool _isUnAble);
    /*0x1225eb4*/ void SetSelectCard(bool _isSelect, int _nType);
    /*0x1226220*/ void SetSelectAble(bool _isAble);
    /*0x122616c*/ void SetRedDot(bool _isReddot);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ int m_nCurProperty;

        /*0x1060a08*/ <>c__DisplayClass20_0();
        /*0x1060a10*/ void <Init>b__0();
    }
}

class HeroPromotePopup : GuiBase
{
    /*0x40*/ HeroPromoteInvenlView m_cHeroPromoteInvenView;
    /*0x48*/ HeroPropertySlotWindow m_cHeroPropertySlotWindow;
    /*0x50*/ UnityEngine.GameObject m_obFastPromoteBtn;
    /*0x58*/ UnityEngine.GameObject m_obReccPromoteBtn;

    /*0x122ad80*/ HeroPromotePopup();
    /*0x12297e4*/ bool get_isFastPromote();
    /*0x1229880*/ bool get_isRecommendPromote();
    /*0x122991c*/ void OnCreate();
    /*0x1229920*/ void OnDelete();
    /*0x1229924*/ void OnEnter();
    /*0x1229e88*/ void OnFinish();
    /*0x1229e8c*/ void OnLeave();
    /*0x122a114*/ void OnStart();
    /*0x122a118*/ void OnExit();
    /*0x122a1ec*/ void OnClick_Promote();
    /*0x1229da0*/ void IsVisibleSettingForButtonOnFastOrRecommend();
    /*0x122a628*/ void OnClick_Recommend();
    /*0x122a798*/ void OnClick_FastPromote();
    /*0x122a6fc*/ void PromoteRecommendWindow(System.Collections.Generic.List<RecommendPromote> _recommendPromotes, bool _isFast, bool _isRec);
    /*0x122a9fc*/ void HandleChangeProperty(int _nindex);
    /*0x122aa14*/ void HandlerEventResultPromote(PTShare.Define.SHero _shero);
    /*0x122aa18*/ void HandlerResultbyMulti(System.Collections.Generic.List<PTShare.Define.SHero> _result, bool _isFast, bool _isRecomend);
    /*0x1229e4c*/ void InitWindow();
    /*0x122acd0*/ TableData.TableData_Contenthelp get_m_tContentHelp();
    /*0x122acdc*/ void OnClick_HelpWindow();
    /*0x122ad88*/ void <OnExit>b__14_0();
}

class HeroPromoteInfoPopup : GuiBase
{
    /*0x40*/ HeroPromoteInfoView m_cHeroPromoteInfoView;
    /*0x48*/ System.Collections.Generic.List<HeroSlot> m_cHeroSlotFeeds;
    /*0x50*/ int m_nMainHeroID;
    /*0x54*/ bool m_bUseHighUnit;
    /*0x58*/ PTShare.Define.SHero[] m_nSubHeroFeed;

    /*0x1224708*/ HeroPromoteInfoPopup();
    /*0x1223a40*/ int GetPromoteTargetCard();
    /*0x1223a48*/ void Init(PTShare.Define.SHero _tBefore, PTShare.Define.SHero[] _heroFeeds);
    /*0x1223ce0*/ void ViewFeeds(PTShare.Define.SHero[] _heroIDs);
    /*0x1223e04*/ void ClearSlot();
    /*0x1223f58*/ void OnClick_Promote();
    /*0x1224108*/ void ConfirmPromote();
    /*0x122460c*/ void OnCreate();
    /*0x1224610*/ void OnDelete();
    /*0x1224614*/ void OnEnter();
    /*0x1224680*/ void OnFinish();
    /*0x1224684*/ void OnLeave();
    /*0x1224688*/ void OnStart();
    /*0x122468c*/ void OnExit();
    /*0x1224710*/ void <OnClick_Promote>b__9_0(bool result);
}

class HeroPromoteInvenlView : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_HeroPromote ScrollContent_HeroPromoteMaterial;
    /*0x20*/ HeroPromoteFeedSlot _mCFeedSlotBaseMainTarget;
    /*0x28*/ HeroPromoteFeedSlot[] m_cFeedSlotSubTarget;
    /*0x30*/ HeroCharcterWindow m_cHeroCharacterWindow;
    /*0x38*/ LocalizeString m_noticeText;
    /*0x40*/ ParticleBase m_PromoteEffectIdle;
    /*0x48*/ ParticleBase m_PromoteEffectLight;
    /*0x50*/ int m_nCurProperty;
    /*0x58*/ System.Collections.Generic.List<PromoteSHero> m_curPromoteList;
    /*0x60*/ System.Collections.Generic.List<PromoteSHero> m_curPromotePossiableList;
    /*0x68*/ PromoteType m_ePromoteType;
    /*0x70*/ TableData.TableData_Unitgradelv TableGradelv;
    /*0x78*/ PTShare.Define.SHero m_sTargetMainHero;
    /*0x80*/ int nGetIndex;
    /*0x88*/ System.Collections.Generic.List<PTShare.Define.SHero> m_listTargetSubHero;
    /*0x90*/ int m_nSubCardIndex;

    /*0x1227a70*/ HeroPromoteInvenlView();
    /*0x1224928*/ System.Collections.Generic.List<PTShare.Define.SHero> get_m_haveMyHeroList();
    /*0x12249cc*/ TableData.TableData_Unitbase get_m_sUnitBase();
    /*0x12249ec*/ PTShare.Define.SHero GetTargetSHero();
    /*0x12249f4*/ PTShare.Define.SHero[] GetFeedsHero();
    /*0x1224a48*/ int[] GetPromoteFeeds();
    /*0x1224b44*/ void OnEnable();
    /*0x1224c1c*/ void OnDisable();
    /*0x1224cc4*/ void OnDestroy();
    /*0x1224d6c*/ void Init();
    /*0x1225630*/ void Release();
    /*0x1225400*/ void SetPropertyIndex(int _nIndex);
    /*0x1225b3c*/ void SetHeroSlot(int _index, HeroPromoteMaterialSlot _slot, PTShare.Define.SHero _hero);
    /*0x1226390*/ void HandlerHeroMaterial(int _index, HeroPromoteMaterialSlot _instance);
    /*0x1226480*/ void HandlerResultPromoteView(PTShare.Define.SHero _resHeroPromote);
    /*0x12264ac*/ void HandlerResultbyMulti(System.Collections.Generic.List<PTShare.Define.SHero> _result, bool _isFast, bool _isRecomend);
    /*0x12264d8*/ void SetTargetApplyFeedSlot(HeroPromoteMaterialSlot _SelectInvenCard, PTShare.Define.SHero _sHero, HeroPromoteFeedSlot _TargetCard, System.Action<PTShare.Define.SHero> _CallBack, int _nType);
    /*0x122655c*/ void RegisterSubCard(HeroPromoteMaterialSlot cHeroPromoteMaterialSlot);
    /*0x122665c*/ void ProcessUnRegisterSubCard(PTShare.Define.SHero _subHeroCard);
    /*0x1226ca8*/ void CreatePromoteReigsterCard(PTShare.Define.SHero _sHero);
    /*0x1226ed4*/ void HandlerHeroPrmoteRegisterCard(HeroPromoteMaterialSlot sHeroPromoteMaterialSlot);
    /*0x12268ec*/ void ProcessViewbySubCard(HeroPromoteMaterialSlot cHeroPromoteMaterialSlot);
    /*0x1227140*/ void RegisterMainCard(HeroPromoteMaterialSlot cHeroPromoteMaterialSlot);
    /*0x122737c*/ void InitMainCharacterView(PTShare.Define.SHero sHero, bool _isView);
    /*0x12270cc*/ bool IsSamePromoteRegisterCard(PTShare.Define.SHero _shero);
    /*0x1227524*/ void ClearPromoteRegisterCard();
    /*0x122757c*/ void ClearFeedSubCard();
    /*0x122710c*/ bool InValidMainTarget(PTShare.Define.SHero _sHero);
    /*0x1227628*/ void HandlerFeedMainUnRegisterCard(PTShare.Define.SHero _sHero);
    /*0x1225754*/ void ClearSlotInven(bool playSound);
    /*0x1227630*/ void HandlerFeedSubUnRegister(PTShare.Define.SHero _sHero);
    /*0x1227a68*/ void HandlerChangeHeroSlot();
    /*0x12258a4*/ void UpdateHeroPromote();
    /*0x1225b2c*/ bool UseTargetHero();
    /*0x1224fac*/ void SetActiveEffect(bool _bIdle, bool _bLight);
    /*0x1227508*/ void PlayParticle(ParticleBase _base, bool _bLoop, float _fSpeed);
    /*0x1227b88*/ PromoteSHero <SetPropertyIndex>b__28_0(PTShare.Define.SHero x);
    /*0x1227c0c*/ bool <SetPropertyIndex>b__28_1(PromoteSHero x);
    /*0x1227cfc*/ bool <RegisterMainCard>b__39_0(PromoteSHero x);
    /*0x1227dec*/ bool <UpdateHeroPromote>b__49_0(PromoteSHero x);
}

class ScrollContent_HeroPromote : ScrollContent<HeroPromoteMaterialSlot>
{
    /*0xe1a2f4*/ ScrollContent_HeroPromote();
}

class HeroPromoteRecmdPopup : GuiBase
{
    /*0x40*/ ScrollContent_RecPromote scrollContentRecPromote;
    /*0x48*/ LocalizeString m_info;
    /*0x50*/ System.Collections.Generic.List<RecommendPromote> m_recPromotes;
    /*0x58*/ bool m_isFastPromote;
    /*0x59*/ bool m_isRecPromote;

    /*0x122b9f8*/ HeroPromoteRecmdPopup();
    /*0x122ae18*/ void OnCreate();
    /*0x122ae1c*/ void OnEnter();
    /*0x122b078*/ void OnStart();
    /*0x122b07c*/ void OnFinish();
    /*0x122b238*/ void OnLeave();
    /*0x122b23c*/ void OnDelete();
    /*0x122b240*/ void OnExit();
    /*0x122a86c*/ void InitSetting(System.Collections.Generic.List<RecommendPromote> _tRecommendPromotes, bool _isFast, bool _isRec);
    /*0x122b2bc*/ void SetInfo(bool _isFast, bool _isRec);
    /*0x122b4d4*/ void HandlerItemUpdate(int _nindex, HeroRecommendSlot _instance);
    /*0x122b758*/ void OnClick_SendRequest();
    /*0x122b920*/ void HandlerSelectUpdate(int nIndex);

    class <>c
    {
        static /*0x0*/ HeroPromoteRecmdPopup.<> <>9;
        static /*0x8*/ System.Converter<RecommendPromote, RecommendPromote> <>9__12_0;
        static /*0x10*/ System.Predicate<RecommendPromote> <>9__15_0;

        static /*0x1060aa4*/ <>c();
        /*0x1060b04*/ <>c();
        /*0x1060b0c*/ RecommendPromote <InitSetting>b__12_0(RecommendPromote s);
        /*0x1060b28*/ bool <OnClick_SendRequest>b__15_0(RecommendPromote x);
    }
}

class HeroRecommendSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnSelectedRecomend;
    /*0x18*/ HeroSlotInventory m_cMainTarget;
    /*0x20*/ HeroSlotInventory[] m_cFeeds;
    /*0x28*/ HeroSlotInventory m_cMainResult;
    /*0x30*/ UnityEngine.GameObject m_obSelect;
    /*0x38*/ bool <IsSelect>k__BackingField;
    /*0x3c*/ int m_nCurIndex;

    static /*0x122c838*/ HeroRecommendSlot();
    static /*0x122af84*/ void add_OnSelectedRecomend(System.Action<int> value);
    static /*0x122b144*/ void remove_OnSelectedRecomend(System.Action<int> value);
    /*0x122c828*/ HeroRecommendSlot();
    /*0x122c688*/ bool get_IsSelect();
    /*0x122c690*/ void set_IsSelect(bool value);
    /*0x122b578*/ void Init(RecommendPromote _recommendPromote, int _nindex);
    /*0x122c748*/ void OnClick_Select();
    /*0x122c69c*/ void SetViewSelect(bool _isSelect);
}

class ScrollContent_RecPromote : ScrollContent<HeroRecommendSlot>
{
    /*0xe1b35c*/ ScrollContent_RecPromote();
}

class HeroPromoteResultPopup : GuiBase
{
    /*0x40*/ HeroCharcterWindow m_cHeroNameWindow;
    /*0x48*/ HeroPromoteInfoView m_cHeroPromoteInfoView;
    /*0x50*/ ParticleBase m_LvupEffect;
    /*0x58*/ PTShare.Define.SHero m_sHeroPrivous;
    /*0x60*/ PTShare.Define.SHero m_sHeroResult;

    /*0x122bb58*/ HeroPromoteResultPopup();
    /*0x122ba00*/ void OnCreate();
    /*0x122ba04*/ void OnDelete();
    /*0x122ba08*/ void OnEnter();
    /*0x122ba74*/ void OnFinish();
    /*0x122ba78*/ void OnLeave();
    /*0x122ba7c*/ void OnStart();
    /*0x122ba80*/ void OnExit();
    /*0x1229294*/ void SetInit(PTShare.Define.SHero _sHero);
    /*0x122bafc*/ System.Collections.IEnumerator CoAnimation();

    class <CoAnimation>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x1060b48*/ <CoAnimation>d__13(int <>1__state);
        /*0x1060b74*/ void System.IDisposable.Dispose();
        /*0x1060b78*/ bool MoveNext();
        /*0x1060c48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1060c50*/ void System.Collections.IEnumerator.Reset();
        /*0x1060c90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroPromoteResultSlot : HeroSlot
{
    /*0x48*/ AtlasImage m_gradeColor;
    /*0x50*/ AtlasImage m_gradeIcon;

    /*0x122bc78*/ HeroPromoteResultSlot();
    /*0x12248f4*/ void SetGrade(int _grade);
    /*0x122bb60*/ void SetGradeBG(int _grade);
    /*0x122bbec*/ void SetGradeIcon(int _grade);
}

class PveRankClearRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_countText;
    /*0x20*/ UnityEngine.GameObject m_checkMarker;
    /*0x28*/ System.Collections.Generic.List<ItemTableRewardSlot> m_itemRewardBoxList;
    /*0x30*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x101eaec*/ PveRankClearRewardEntity();
    /*0x101e61c*/ void InitEntity(TableData.TableData_Pveclearreward tableData);
    /*0x101e708*/ void SetCount(int count);
    /*0x101e7cc*/ void SetCheckMarker(bool enable);
    /*0x101e870*/ void SetRewards();

    class <>c
    {
        static /*0x0*/ PveRankClearRewardEntity.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__7_0;

        static /*0x10915dc*/ <>c();
        /*0x109163c*/ <>c();
        /*0x1091644*/ void <SetRewards>b__7_0(ItemTableRewardSlot data);
    }
}

class PveRankClearRewardPopup : GuiBase
{
    /*0x40*/ SeasonTimeText m_seasonTime;
    /*0x48*/ ScrollContent_PveRankClearRewardEntity m_scrollContent;
    /*0x50*/ PveRankEmblemSlot m_emblem;
    /*0x58*/ PveRankingBoardEntity m_my;
    /*0x60*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> m_data;

    /*0x101f4a4*/ PveRankClearRewardPopup();
    /*0x101eba4*/ void OnCreate();
    /*0x101eba8*/ void OnDelete();
    /*0x101ebac*/ void OnEnter();
    /*0x101ebb0*/ void OnExit();
    /*0x101ebb8*/ void OnFinish();
    /*0x101ebbc*/ void OnLeave();
    /*0x101ec94*/ void OnStart();
    /*0x101ec98*/ void InitPopup();
    /*0x101eecc*/ void BindEvent();
    /*0x101ebc0*/ void RemoveEvent();
    /*0x101f380*/ void HandleScrollContent(int index, PveRankClearRewardEntity obj);
    /*0x101f400*/ void OnClick_Help();
}

class PveRankEmblemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_emblem;
    /*0x20*/ LocalizeString m_level;
    /*0x28*/ LocalizeString m_noblityText;
    /*0x30*/ TableData.TableData_Pvenoblity m_noblity;

    /*0x101fce8*/ PveRankEmblemSlot();
    /*0x101f51c*/ void OnDisable();
    /*0x101f2a4*/ void InitSlot();
    /*0x101f528*/ void SetData();
    /*0x101fa48*/ void SetEmblem(string noblity);
    /*0x101f7fc*/ void SetLevel(System.ValueTuple<int, int> level);
    /*0x101f908*/ void SetNobility(string key);
    /*0x101f524*/ void BindEvent();
    /*0x101f520*/ void RemoveEvent();
}

class PveRankInfoEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_rankTitle;
    /*0x20*/ System.Collections.Generic.List<ItemTableRewardSlot> m_rewardSlotList;
    /*0x28*/ UnityEngine.GameObject m_myFrame;

    /*0x102013c*/ PveRankInfoEntity();
    /*0x101fcf0*/ void InitEntity(int rewardIndex, float percent, string reward);

    class <>c
    {
        static /*0x0*/ PveRankInfoEntity.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__3_0;

        static /*0x1091674*/ <>c();
        /*0x10916d4*/ <>c();
        /*0x10916dc*/ void <InitEntity>b__3_0(ItemTableRewardSlot data);
    }
}

class PveRankRewardInfoPopup : GuiBase
{
    /*0x40*/ ScrollContent_PveRankInfoEntity m_scrollContent;
    /*0x48*/ SeasonTimeText m_seasonTime;
    /*0x50*/ PveRankingBoardEntity m_my;
    /*0x58*/ System.Collections.Generic.List<string> m_rewardList;
    /*0x60*/ System.Collections.Generic.List<float> m_percentList;

    /*0x10209dc*/ PveRankRewardInfoPopup();
    /*0x10201b4*/ void OnCreate();
    /*0x10201b8*/ void OnDelete();
    /*0x10201bc*/ void OnEnter();
    /*0x10201c0*/ void OnExit();
    /*0x10201c8*/ void OnFinish();
    /*0x10201cc*/ void OnLeave();
    /*0x10202a4*/ void OnStart();
    /*0x10202a8*/ void InitPopup();
    /*0x10204c8*/ void BindEvent();
    /*0x10201d0*/ void RemoveEvent();
    /*0x1020914*/ void HandleScrollContent(int index, PveRankInfoEntity obj);
}

class PveRankTabWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ PveRankTabWindow.TAB_TYPE m_currWindow;
    /*0x20*/ UnityEngine.GameObject[] m_tabActiveIcons;

    /*0x1020dec*/ PveRankTabWindow();
    /*0x1020a94*/ void OnEnable();
    /*0x1020a98*/ void InitWindow();
    /*0x1020b3c*/ void OnClick_ClearReward();
    /*0x1020ccc*/ void OnClick_Shop();
    /*0x1020cd4*/ void OnClick_Ranking();
    /*0x1020b44*/ void OnClick(int _tabType);
    /*0x1020cdc*/ void ExitCurrPopup();
    /*0x1020df4*/ void <OnClick>b__8_0();
    /*0x1020e7c*/ void <OnClick>b__8_1();
    /*0x1020f30*/ void <OnClick>b__8_3();
    /*0x1020fc0*/ void <OnClick>b__8_2();
    /*0x10211bc*/ void <OnClick>b__8_4(ServerProtocol.ResPveRankingRanking instance);

    enum TAB_TYPE
    {
        CLEAR_REWARD = 0,
        SHOP = 1,
        RANKING = 2,
        NONE = 3,
    }
}

class PveRankingBoardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_RankIcon;
    /*0x20*/ PlayerProfileSlot m_ProfileSlot;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_Rank;
    /*0x38*/ LocalizeString m_Score;
    /*0x40*/ LocalizeString m_GuildName;
    /*0x48*/ LocalizeString m_rankPercent;
    /*0x50*/ GuildEmblemSlot m_GuildEmblemSlot;
    /*0x58*/ long m_lPlayerid;
    /*0x60*/ string m_strNickname;
    /*0x68*/ string m_strDetail;
    /*0x70*/ int m_nLevel;
    /*0x74*/ int m_nGender;
    /*0x78*/ PTShare.Define.SRanker m_rankInfo;

    /*0x1021d44*/ PveRankingBoardEntity();
    /*0x1021398*/ void OnEnable();
    /*0x1021470*/ void OnDisable();
    /*0x1021518*/ void InitializeEntity(int _rank, PTShare.Define.SRanker sRanker);
    /*0x101f0a4*/ void InitializeEntity_Self(int _rank, int _score, float _rankPercent, PTShare.Define.SGuildMini guild, bool showPercent);
    /*0x1021638*/ void SetProfile();
    /*0x10217e0*/ void SetRank(int _rank);
    /*0x1021758*/ void SetScore(int score);
    /*0x1021bc0*/ void SetRankPer(float percent);
    /*0x1021c64*/ void OnChangeUserHandler();
    /*0x1021d98*/ void <SetProfile>b__18_0();
}

class PveRankingBoardPopup : GuiBase
{
    /*0x40*/ ScrollContent_PveRankingBoardEntity m_scrollContent;
    /*0x48*/ PveRankingBoardEntity m_my;
    /*0x50*/ PveRankEmblemSlot m_emblemSlot;
    /*0x58*/ ServerProtocol.ResPveRankingRanking m_data;

    /*0x1022118*/ PveRankingBoardPopup();
    /*0x1021da4*/ void OnCreate();
    /*0x1021da8*/ void OnDelete();
    /*0x1021dac*/ void OnEnter();
    /*0x1021db0*/ void OnFinish();
    /*0x1021db4*/ void OnLeave();
    /*0x1021e8c*/ void OnStart();
    /*0x1021254*/ void InitPopup(ServerProtocol.ResPveRankingRanking instance);
    /*0x1021e90*/ void BindEvent();
    /*0x1021db8*/ void RemoveEvent();
    /*0x1021f6c*/ void HandleScrollContent(int index, PveRankingBoardEntity obj);
    /*0x1021ff8*/ void OnClick_RewardInfo();
    /*0x1022074*/ void OnClick_Help();
}

class PveStageEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_vsText;
    /*0x20*/ LocalizeString m_titleText;
    /*0x28*/ LocalizeString m_scoreText;
    /*0x30*/ UnityEngine.GameObject m_bonusParent;
    /*0x38*/ LocalizeString m_bonusText;
    /*0x40*/ System.Collections.Generic.List<AtlasImage> m_clearMarkers;
    /*0x48*/ AtlasImage m_gradeIcon;
    /*0x50*/ AtlasImage m_frame;
    /*0x58*/ AtlasImage m_top3Icon;
    /*0x60*/ PTShare.Define.SPveStage m_stageData;
    /*0x68*/ TableData.TableData_Pvechallenge m_challengeTableData;
    /*0x70*/ int m_number;
    /*0x74*/ int m_difficulty;

    /*0x1024c70*/ PveStageEntity();
    /*0x1023c98*/ void InitializeEntity(PTShare.Define.SPveStage stage, int number, int difficulty);
    /*0x1023df8*/ void SetTitle();
    /*0x1023f40*/ void SetVSCount();
    /*0x10240f4*/ void SetScore();
    /*0x1024254*/ void SetBonus();
    /*0x10243dc*/ void SetGrade();
    /*0x102452c*/ void SetClearMarker();
    /*0x102479c*/ void SetFrame();
    /*0x102485c*/ void SetTop3();
    /*0x1024a54*/ void OnClick_This();
    /*0x1024c78*/ bool <SetTop3>b__21_0(int score);

    class <>c
    {
        static /*0x0*/ PveStageEntity.<> <>9;
        static /*0x8*/ System.Action<AtlasImage> <>9__19_0;

        static /*0x10920a0*/ <>c();
        /*0x1092100*/ <>c();
        /*0x1092108*/ void <SetClearMarker>b__19_0(AtlasImage data);
    }
}

class PveStageWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<PveStageEntity> m_liStageEntity;
    /*0x20*/ AtlasImage m_tryItemIcon;
    /*0x28*/ LocalizeString m_tryItemCount;
    /*0x30*/ LocalizeString m_freeText;
    /*0x38*/ TabGroup m_tabGroup;
    /*0x40*/ TooltipData_Desc m_tooltipDesc;
    /*0x48*/ UnityEngine.Coroutine m_coroutine;

    /*0x1237144*/ PveStageWindow();
    /*0x12365f0*/ void InitializeWindow();
    /*0x1236d8c*/ void SetStageEntity(int index, PTShare.Define.SPveStage stage);
    /*0x1236818*/ void SetTryCount();
    /*0x12369c8*/ void SetFreeCount();
    /*0x1236c0c*/ void SetTooltip();
    /*0x1236ea4*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0x1236f10*/ void OnChangeDifficulty(int difficulty);

    class <>c
    {
        static /*0x0*/ PveStageWindow.<> <>9;
        static /*0x8*/ System.Action<PveStageEntity> <>9__7_0;
        static /*0x10*/ System.Action<PveStageEntity> <>9__13_0;

        static /*0x10921b4*/ <>c();
        /*0x1092214*/ <>c();
        /*0x109221c*/ void <InitializeWindow>b__7_0(PveStageEntity data);
        /*0x109224c*/ void <OnChangeDifficulty>b__13_0(PveStageEntity data);
    }

    class <CoUpdateTimer>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ PveStageWindow <>4__this;

        /*0x109227c*/ <CoUpdateTimer>d__12(int <>1__state);
        /*0x10922a8*/ void System.IDisposable.Dispose();
        /*0x10922ac*/ bool MoveNext();
        /*0x1092398*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10923a0*/ void System.Collections.IEnumerator.Reset();
        /*0x10923e0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class PveStatusWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_currentScore;
    /*0x28*/ LocalizeString m_currentRank;
    /*0x30*/ LocalizeString m_clearRewardCount;
    /*0x38*/ System.Collections.Generic.List<ItemTableRewardSlot> m_currentRewardSlots;
    /*0x40*/ System.Collections.Generic.List<ItemTableRewardSlot> m_clearRewardSlots;
    /*0x48*/ PveRankEmblemSlot m_emblemSlot;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_currentRewardList;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_clearRewardList;
    /*0x60*/ System.Collections.Generic.List<string> m_rewardTableList;

    /*0x1237cbc*/ PveStatusWindow();
    /*0x123714c*/ void InitializeWindow();
    /*0x1237198*/ void SetData();
    /*0x1237314*/ void SetProfileSlot();
    /*0x1237478*/ void SetScore();
    /*0x123754c*/ void SetRank();
    /*0x12373e8*/ void SetEmblem();
    /*0x12375f8*/ void SetCurrentReward();
    /*0x1237874*/ void SetNextClearReward();

    class <>c
    {
        static /*0x0*/ PveStatusWindow.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__16_0;
        static /*0x10*/ System.Action<ItemTableRewardSlot> <>9__17_0;
        static /*0x18*/ System.Action<ItemTableRewardSlot> <>9__17_1;

        static /*0xf8fd14*/ <>c();
        /*0xf8fd74*/ <>c();
        /*0xf8fd7c*/ void <SetCurrentReward>b__16_0(ItemTableRewardSlot data);
        /*0xf8fdac*/ void <SetNextClearReward>b__17_0(ItemTableRewardSlot data);
        /*0xf8fddc*/ void <SetNextClearReward>b__17_1(ItemTableRewardSlot data);
    }
}

class QuestDailyEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnClickRewardEvent;
    /*0x18*/ LocalizeString m_QuestName;
    /*0x20*/ LocalizeString m_AmountText;
    /*0x28*/ LocalizeString m_PointText;
    /*0x30*/ LocalizeString m_ButtonText;
    /*0x38*/ LocalizeString m_UnlockText;
    /*0x40*/ UnityEngine.UI.Button m_Button;
    /*0x48*/ UnityEngine.UI.Slider m_Slider;
    /*0x50*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x58*/ UnityEngine.GameObject m_BottomParent;
    /*0x60*/ UnityEngine.UI.Button m_MoveButton;
    /*0x68*/ int m_nIndex;
    /*0x70*/ QuestPackage m_PackageInfo;
    /*0x78*/ int m_nCount;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_liRewardInfo;
    /*0x88*/ QuestGroupType m_eGroupType;

    static /*0x123a6ac*/ QuestDailyEntity();
    static /*0x12384b4*/ void add_OnClickRewardEvent(System.Action value);
    static /*0x12385a8*/ void remove_OnClickRewardEvent(System.Action value);
    /*0x123a634*/ QuestDailyEntity();
    /*0x123869c*/ void InitializeEntity(int _nIndex, QuestGroupType _eType, QuestPackage _package, int _nCount);
    /*0x1238758*/ void SetStatusView();
    /*0x1239dc8*/ void OnCompleteQuest();
    /*0x1239f64*/ void OnUnlockContents();
    /*0x1239d2c*/ void SetCanvasGroup(float _fOpecity, bool _bRaycast);
    /*0x123a274*/ void OnClickReward();
    /*0x123a4fc*/ void OnClickMove();
}

class QuestDailySubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_QuestDailyEntity m_ScrollContent;
    /*0x20*/ QuestProgress m_Progress;
    /*0x28*/ QuestGroupType m_eQuestType;
    /*0x30*/ System.Collections.Generic.List<QuestPackage> m_liQuestList;
    /*0x38*/ Sort_QuestDailyCompare m_sortDailyCompare;
    /*0x40*/ Sort_QuestWeeklyCompare m_sortWeeklyCompare;
    /*0x48*/ UnityEngine.Coroutine m_ieRefreshCoroutine;

    /*0x123b69c*/ QuestDailySubWindow();
    /*0x123a6b0*/ PTShare.Define.SQuest get_curDailyQuest();
    /*0x123a730*/ PTShare.Define.SQuest get_curWeeklyQuest();
    /*0x123a7b0*/ void OnEnable();
    /*0x123a880*/ void OnDisable();
    /*0x123a940*/ bool IsOnReddot();
    /*0x123aacc*/ bool IsOnReddot(QuestGroupType _eType);
    /*0x123ac2c*/ void InitializeWindow(QuestGroupType _eType);
    /*0x123af88*/ void DeleteScrollEvent();
    /*0x123ac98*/ void InitializeScroll(bool _bMoveScroll);
    /*0x123b314*/ void HandlerScrollContent_Daily(int _index, QuestDailyEntity _obj);
    /*0x123b47c*/ void HandlerScrollContent_Weekly(int _index, QuestDailyEntity _obj);
    /*0x123b5e4*/ void HandlerTakeEntity();
    /*0x123af34*/ void StartRefreshTimer();
    /*0x123b620*/ System.Collections.IEnumerator CoRefresh(QuestGroupType _questGroupType);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ QuestDailySubWindow <>4__this;
        /*0x18*/ int _index;

        /*0xf8fe0c*/ <>c__DisplayClass18_0();
        /*0xf8fe14*/ bool <HandlerScrollContent_Daily>b__0(PTShare.Define.SQuestRow x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ QuestDailySubWindow <>4__this;
        /*0x18*/ int _index;

        /*0xf8feb4*/ <>c__DisplayClass19_0();
        /*0xf8febc*/ bool <HandlerScrollContent_Weekly>b__0(PTShare.Define.SQuestRow x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ QuestDailySubWindow <>4__this;
        /*0x18*/ QuestGroupType _questGroupType;

        /*0xf8ff5c*/ <>c__DisplayClass22_0();
        /*0xf8ff64*/ void <CoRefresh>b__0();
    }

    class <CoRefresh>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ QuestDailySubWindow <>4__this;
        /*0x28*/ QuestGroupType _questGroupType;
        /*0x30*/ QuestDailySubWindow.<> <>8__1;

        /*0xf8ff88*/ <CoRefresh>d__22(int <>1__state);
        /*0xf8ffb4*/ void System.IDisposable.Dispose();
        /*0xf8ffb8*/ bool MoveNext();
        /*0xf90258*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf90260*/ void System.Collections.IEnumerator.Reset();
        /*0xf902a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class Sort_QuestDailyCompare : System.Collections.Generic.IComparer<QuestPackage>
{
    /*0x1451e0c*/ Sort_QuestDailyCompare();
    /*0x1451b30*/ int Compare(QuestPackage x, QuestPackage y);

    class <>c__DisplayClass0_0
    {
        /*0x10*/ QuestPackage x;
        /*0x18*/ QuestPackage y;

        /*0xcc060c*/ <>c__DisplayClass0_0();
        /*0xcc0614*/ bool <Compare>b__0(PTShare.Define.SQuestRow a);
        /*0xcc064c*/ bool <Compare>b__1(PTShare.Define.SQuestRow a);
    }
}

class Sort_QuestWeeklyCompare : System.Collections.Generic.IComparer<QuestPackage>
{
    /*0x14523f4*/ Sort_QuestWeeklyCompare();
    /*0x1452118*/ int Compare(QuestPackage x, QuestPackage y);

    class <>c__DisplayClass0_0
    {
        /*0x10*/ QuestPackage x;
        /*0x18*/ QuestPackage y;

        /*0xcc06fc*/ <>c__DisplayClass0_0();
        /*0xcc0704*/ bool <Compare>b__0(PTShare.Define.SQuestRow a);
        /*0xcc073c*/ bool <Compare>b__1(PTShare.Define.SQuestRow a);
    }
}

class QuestGeneralEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnClickRewardEvent;
    /*0x18*/ LocalizeString m_QuestName;
    /*0x20*/ LocalizeString m_AmountText;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ LocalizeString m_UnlockText;
    /*0x38*/ UnityEngine.UI.Button m_Button;
    /*0x40*/ UnityEngine.UI.Button m_MoveButton;
    /*0x48*/ UnityEngine.UI.Slider m_Slider;
    /*0x50*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;
    /*0x58*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x60*/ int m_nIndex;
    /*0x68*/ QuestPackage m_PackageInfo;
    /*0x70*/ PTShare.Define.SMainQuest m_MainInfo;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_liRewardInfo;

    static /*0x123d1c8*/ QuestGeneralEntity();
    static /*0x123bee4*/ void add_OnClickRewardEvent(System.Action value);
    static /*0x123bfd8*/ void remove_OnClickRewardEvent(System.Action value);
    /*0x123d110*/ QuestGeneralEntity();
    /*0x123c0cc*/ void InitializeEntity(int _nIndex, QuestPackage _package, PTShare.Define.SMainQuest _mainquest);
    /*0x123c188*/ void SetStatusView();
    /*0x123c4dc*/ void SetRewards();
    /*0x123c6d0*/ void OnCompleteQuest();
    /*0x123c880*/ void OnUnlockContents();
    /*0x123c68c*/ void SetCanvasGroup(float _fOpecity, bool _bRaycast);
    /*0x123ca50*/ void OnClickReward();
    /*0x123cc78*/ void MoveContents();

    class <>c
    {
        static /*0x0*/ QuestGeneralEntity.<> <>9;
        static /*0x8*/ System.Action <>9__23_0;

        static /*0xf902a8*/ <>c();
        /*0xf90308*/ <>c();
        /*0xf90310*/ void <MoveContents>b__23_0();
    }
}

class QuestGrid : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<QuestSummary> m_liQuestSummary;
    /*0x20*/ Battle.GameModeType eGameModeType;
    /*0x28*/ System.Collections.Generic.List<QuestPackage> liQuestPackage;
    /*0x30*/ System.Collections.Generic.List<long> liQuestAmount;
    /*0x38*/ QuestAdvanceType[] _arrCampaign;
    /*0x40*/ QuestAdvanceType[] _arrTryTower;
    /*0x48*/ QuestAdvanceType[] _arrArena;
    /*0x50*/ QuestAdvanceType[] _arrMaze;
    /*0x58*/ QuestAdvanceType[] _arrSpiritTower;
    /*0x60*/ string[] _arrCampaignCondition;
    /*0x68*/ string[] _arrTryTowerCondition;
    /*0x70*/ string[] _arrGeneralAreaCondition;
    /*0x78*/ string[] _arrWorldAreaCondition;
    /*0x80*/ string[] _arrMazeCondition;
    /*0x88*/ string[] _arrSpiritTowerCondition;

    /*0x123e930*/ QuestGrid();
    /*0x123d48c*/ System.Collections.Generic.List<QuestPackage> get_liDailyPackage();
    /*0x123d514*/ System.Collections.Generic.List<QuestPackage> get_liWeeklyPackage();
    /*0x123d59c*/ System.Collections.Generic.List<QuestPackage> get_liMainPackage();
    /*0x123d624*/ void InitializeGrid(Battle.GameModeType _eMode);
    /*0x123d714*/ void ClearQuest();
    /*0x123d62c*/ void SetQuestList();
    /*0x123d7c4*/ void SetCampaign();
    /*0x123d81c*/ void SetTower();
    /*0x123d874*/ void SetArena();
    /*0x123d8cc*/ void SetWorldArena();
    /*0x123d924*/ void SetMaze();
    /*0x123d97c*/ void SetSpiritTower();
    /*0x123d9d4*/ void SetQuestSummary();
    /*0x123dc88*/ bool AddDailyQuest(QuestAdvanceType[] _params, string[] _args);
    /*0x123dfbc*/ bool AddWeeklyQuest(QuestAdvanceType[] _params, string[] _args);
    /*0x123e2f0*/ bool AddMainQuest(QuestAdvanceType[] _params, string[] _args);
    /*0x123e6e8*/ bool CheckConditionQuest(QuestPackage _package, string _arg);

    class <>c__DisplayClass31_0
    {
        /*0x10*/ PTShare.Define.SQuestRow x;

        /*0xf90314*/ <>c__DisplayClass31_0();
        /*0xf9031c*/ bool <AddDailyQuest>b__0(QuestPackage y);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ PTShare.Define.SQuestRow x;

        /*0xf90354*/ <>c__DisplayClass32_0();
        /*0xf9035c*/ bool <AddWeeklyQuest>b__0(QuestPackage y);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ PTShare.Define.SMainQuest x;

        /*0xf90394*/ <>c__DisplayClass33_0();
        /*0xf9039c*/ bool <AddMainQuest>b__0(QuestPackage y);
        /*0xf903d4*/ bool <AddMainQuest>b__1(QuestPackage y);
    }
}

class QuestMainSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_QuestGeneralEntity m_ScrollContent;
    /*0x20*/ System.Collections.Generic.List<QuestPackage> curQuestList;
    /*0x28*/ System.Collections.Generic.List<QuestPackage> curStepQuestList;
    /*0x30*/ Sort_QuestMainCompare sortQuestMain;

    /*0x12404cc*/ QuestMainSubWindow();
    /*0x123fb3c*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> get_curMainQuestStep();
    /*0x123fbbc*/ void OnEnable();
    /*0x123fd80*/ void OnDisable();
    /*0x123fec8*/ void InitializeWindow(bool _bFirstScroll);
    /*0x1240134*/ void AddQuest(PTShare.Define.SMainQuest _quest, int _nStepOffset, System.Collections.Generic.List<QuestPackage> _liQuest);
    /*0x1240370*/ void HandlerScrollContent(int _index, QuestGeneralEntity _obj);
    /*0x12404c4*/ void HandlerTakeMainQuest();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ PTShare.Define.SMainQuest _quest;
        /*0x18*/ int _nStepOffset;

        /*0xf904b4*/ <>c__DisplayClass9_0();
        /*0xf904bc*/ bool <AddQuest>b__0(QuestPackage x);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ QuestMainSubWindow <>4__this;
        /*0x18*/ int _index;

        /*0xf9040c*/ <>c__DisplayClass10_0();
        /*0xf90414*/ bool <HandlerScrollContent>b__0(PTShare.Define.SMainQuest x);
    }
}

class Sort_QuestMainCompare : System.Collections.Generic.IComparer<QuestPackage>
{
    /*0x1452110*/ Sort_QuestMainCompare();
    /*0x1451e14*/ int Compare(QuestPackage x, QuestPackage y);

    class <>c__DisplayClass0_0
    {
        /*0x10*/ QuestPackage x;
        /*0x18*/ QuestPackage y;

        /*0xcc0684*/ <>c__DisplayClass0_0();
        /*0xcc068c*/ bool <Compare>b__0(PTShare.Define.SMainQuest a);
        /*0xcc06c4*/ bool <Compare>b__1(PTShare.Define.SMainQuest a);
    }
}

class QuestProgress : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_CurrentPoint;
    /*0x20*/ LocalizeString m_Time;
    /*0x28*/ UnityEngine.UI.Slider m_PointSlider;
    /*0x30*/ System.Collections.Generic.List<QuestProgressEntity> m_liProgressEntity;
    /*0x38*/ QuestGroupType m_eQuestType;
    /*0x40*/ System.Collections.IEnumerator m_ieTimeUpdater;
    /*0x48*/ System.Collections.Generic.List<QuestPackage> curQuestPackage;

    /*0x124506c*/ QuestProgress();
    /*0x12447dc*/ PTShare.Define.SQuest get_curDailyQuest();
    /*0x124485c*/ PTShare.Define.SQuest get_curWeeklyQuest();
    /*0x12448dc*/ void OnEnable();
    /*0x12449c8*/ void OnDisable();
    /*0x123a958*/ bool IsOnReddot();
    /*0x123aae4*/ bool IsOnReddot(QuestGroupType _eType);
    /*0x123ac68*/ void InitializeProgress(QuestGroupType _eType);
    /*0x1244a80*/ void SetStatusView();
    /*0x1244bc8*/ void SetProgressEntity();
    /*0x1244e90*/ void HandlerExChangeEvent(int _nIndex);
    /*0x1244d9c*/ void StartTimer();
    /*0x1245000*/ System.Collections.IEnumerator CoUpdate();

    class <>c
    {
        static /*0x0*/ QuestProgress.<> <>9;
        static /*0x8*/ System.Predicate<QuestProgressEntity> <>9__13_0;

        static /*0xf93bbc*/ <>c();
        /*0xf93c1c*/ <>c();
        /*0xf93c24*/ bool <IsOnReddot>b__13_0(QuestProgressEntity entity);
    }

    class <CoUpdate>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ QuestProgress <>4__this;

        /*0xf93c40*/ <CoUpdate>d__20(int <>1__state);
        /*0xf93c6c*/ void System.IDisposable.Dispose();
        /*0xf93c70*/ bool MoveNext();
        /*0xf940b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf940b8*/ void System.Collections.IEnumerator.Reset();
        /*0xf940f8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class QuestProgressEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnExChagneEvent;
    /*0x18*/ AtlasImage m_BoxIcon;
    /*0x20*/ AtlasImage m_Background;
    /*0x28*/ UnityEngine.GameObject m_RewardParent;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ LocalizeString m_NeedPoint;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_treasureBoxSkel;
    /*0x48*/ QuestPackage m_QuestInfo;
    /*0x50*/ QuestGroupType m_eQuestType;
    /*0x54*/ int m_nIndex;
    /*0x58*/ int m_nPoint;
    /*0x5c*/ int m_nMaxPoint;
    /*0x60*/ bool m_bIsOpen;

    static /*0x1245894*/ QuestProgressEntity();
    static /*0x1243aa4*/ void add_OnExChagneEvent(System.Action<int> value);
    static /*0x1243768*/ void remove_OnExChagneEvent(System.Action<int> value);
    /*0x1245884*/ QuestProgressEntity();
    /*0x124512c*/ void OnDisable();
    /*0x1244df0*/ void InitializeEntity(QuestGroupType _eType, int _nIndex, QuestPackage _package, int _nPoint, int _nMaxPoint, bool _bOpen);
    /*0x124528c*/ bool IsOnReddot();
    /*0x1244f0c*/ void OpenBox(bool _bOpen);
    /*0x124513c*/ void SetTreasureBox();
    /*0x12452ac*/ void SetTreasureBox(string animName, bool loop);
    /*0x1245274*/ void SetReddot(bool _enable);
    /*0x1245334*/ void OnClick_RewardBox();
    /*0x12454e4*/ void ViewReward(bool isReceive);
    /*0x1245134*/ void HideReward();
    /*0x1245834*/ void SetActiveReward(bool _enable);
}

class QuestSummary : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Desc;
    /*0x20*/ LocalizeString m_Amount;
    /*0x28*/ QuestPackage questInfo;
    /*0x30*/ long amount;
    /*0x38*/ string color;

    /*0x1246a50*/ QuestSummary();
    /*0x123e6e0*/ void InitializeQuest(QuestPackage _packs, long _amount);
    /*0x1246688*/ void SetView();
}

class RacePastEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_CurrentSeqTitle;
    /*0x20*/ System.Collections.Generic.List<PlayerProfileSlot> m_liRunners;
    /*0x28*/ System.Collections.Generic.List<ItemTableRewardSlot> m_liRewardSlot;
    /*0x30*/ System.Collections.Generic.List<AtlasImage> m_liRunnerSelects;
    /*0x38*/ System.Collections.Generic.List<AtlasImage> m_liRunnerRanks;
    /*0x40*/ UnityEngine.GameObject m_RedDot;
    /*0x48*/ PTShare.Define.SRace raceData;
    /*0x50*/ System.Collections.Generic.List<Rewards> liRewards;

    /*0x124c538*/ RacePastEntity();
    /*0x124bb4c*/ void InitializeEntity(PTShare.Define.SRace data);
    /*0x124c130*/ void SetRewardEntity();
    /*0x124c3c8*/ void OnClick_Replay();

    class <>c__DisplayClass8_0
    {
        /*0x10*/ int i;

        /*0xf94a70*/ <>c__DisplayClass8_0();
        /*0xf94a78*/ bool <InitializeEntity>b__0(int x);
    }

    class <>c
    {
        static /*0x0*/ RacePastEntity.<> <>9;
        static /*0x8*/ System.Action<RunRaceResultData> <>9__10_0;

        static /*0xf94910*/ <>c();
        /*0xf94970*/ <>c();
        /*0xf94978*/ void <OnClick_Replay>b__10_0(RunRaceResultData data);
    }
}

class RacePlayerSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_Slot;
    /*0x20*/ AtlasImage m_CheckIcon;
    /*0x28*/ UnityEngine.UI.Button m_SelectBtn;
    /*0x30*/ LocalizeString m_BtnNormalText;
    /*0x38*/ LocalizeString m_BtnDisableText;
    /*0x40*/ int nUnitIndex;
    /*0x44*/ int nTrackIndex;
    /*0x48*/ System.Action onClickCallback;

    /*0x11b46f0*/ RacePlayerSelectEntity();
    /*0x11b4310*/ void InitializeEntity(int nSelectTrack, int nIndex, int nUnitID, System.Action callback);
    /*0x11b44f8*/ void OnClick();
    /*0x11b46f8*/ void <OnClick>b__9_0(bool result);
}

class RaceResultEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x28*/ RunRaceResultData dataInfo;
    /*0x30*/ int nTrackIndex;
    /*0x34*/ int nRankIndex;
    /*0x38*/ bool bIsCompleteAnimation;

    /*0x11b49c8*/ RaceResultEntity();
    /*0x11b47a4*/ void OnEnable();
    /*0x11b47d4*/ void OnDisable();
    /*0x11b47dc*/ void InitializeEntity(RunRaceResultData data, int nIndex, int nRank);
    /*0x11b4830*/ bool IsCompleteAnimation();
    /*0x11b4838*/ void StartAnimation();
    /*0x11b4864*/ System.Collections.IEnumerator CoAnimation();
    /*0x11b48d0*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);

    class <CoAnimation>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceResultEntity <>4__this;
        /*0x28*/ float <fTime>5__2;
        /*0x2c*/ float <fConstTime>5__3;

        /*0xf94a88*/ <CoAnimation>d__11(int <>1__state);
        /*0xf94ab4*/ void System.IDisposable.Dispose();
        /*0xf94ab8*/ bool MoveNext();
        /*0xf94d88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf94d90*/ void System.Collections.IEnumerator.Reset();
        /*0xf94dd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RaceRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_RankIcon;
    /*0x20*/ AtlasImage m_CheckIcon;
    /*0x28*/ ItemTableRewardSlot m_RewardBox;

    /*0x11b538c*/ RaceRewardEntity();
    /*0x11b5190*/ void InitializeEntity(int nRank, Rewards reward);
    /*0x11b52cc*/ void SetActiveCheck(bool enable);
}

class RaceViewEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_Slot;
    /*0x20*/ AtlasImage m_Hide;
    /*0x28*/ int nTrackIndex;
    /*0x2c*/ int nUnitIndex;
    /*0x30*/ System.Action<int> onClickCallback;

    /*0x11b94a8*/ RaceViewEntity();
    /*0x11b9380*/ void InitializeEntity(int nIndex, int nUnitID, System.Action<int> callback);
    /*0x11b948c*/ void SetActiveSelected(bool enable);
    /*0x11b94b0*/ void <InitializeEntity>b__5_0();
}

class RankBoardCategoryEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Tilte;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ LocalizeString m_Floor;
    /*0x30*/ PlayerProfileSlot m_ProfileSlot;
    /*0x38*/ AtlasImage m_RedDot;
    /*0x40*/ RankingBoardType m_eBoardType;

    /*0x11bb430*/ RankBoardCategoryEntity();
    /*0x11ba228*/ PTShare.Define.SBoardCampaignRanker get_CampaignInfo();
    /*0x11ba2a8*/ PTShare.Define.SBoardCampaignRanker get_HardCampaignInfo();
    /*0x11ba328*/ PTShare.Define.SBoardTowerRanker get_TowerInfo();
    /*0x11ba3a8*/ void OnEnable();
    /*0x11ba660*/ void OnDisable();
    /*0x11ba704*/ void InitializeEntity(RankingBoardType _eType);
    /*0x11ba714*/ void SetStatusView(RankingBoardType _eType);
    /*0x11bab6c*/ void NonPlayerView();
    /*0x11bacb8*/ void OnClick();
    /*0x11bb274*/ void CallbackOpenCategoryPopup(string _floor, int _rank);
    /*0x11bb388*/ void HandlerReceiveReward();
    /*0x11bb438*/ void <SetStatusView>b__15_0();
    /*0x11bb45c*/ void <SetStatusView>b__15_1();
    /*0x11bb480*/ void <SetStatusView>b__15_2();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ RankBoardCategoryEntity <>4__this;
        /*0x18*/ int _rank;
        /*0x20*/ string _floor;

        /*0xf96ec8*/ <>c__DisplayClass18_0();
        /*0xf96ed0*/ void <CallbackOpenCategoryPopup>b__0();
    }
}

class RankBoardFactionCategoryEntity : RankBoardCategoryEntity
{
    /*0x48*/ AtlasImage m_factionBG;
    /*0x50*/ AtlasImage m_factionIcon;
    /*0x58*/ int m_faction;

    /*0x11bbc68*/ RankBoardFactionCategoryEntity();
    /*0x11bb4a4*/ void InitializeEntity(RankingBoardType _eType);
    /*0x11bb56c*/ void InitFactionImage(RankingBoardType _eType);
    /*0x11bb678*/ void SetStatusView(RankingBoardType _eType);
    /*0x11bb920*/ void OnClick();
    /*0x11bbb54*/ void CallbackOpenCategoryPopup(string _point, int _rank);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ PTShare.Define.SBoardFactionRanker rankData;

        /*0xf97024*/ <>c__DisplayClass5_0();
        /*0xf9702c*/ void <SetStatusView>b__0();
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ RankBoardFactionCategoryEntity <>4__this;
        /*0x18*/ int _rank;
        /*0x20*/ string _point;

        /*0xf9704c*/ <>c__DisplayClass7_0();
        /*0xf97054*/ void <CallbackOpenCategoryPopup>b__0();
    }
}

class RankBoardRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_RankIcon;
    /*0x20*/ AtlasImage m_Friend;
    /*0x28*/ AtlasImage m_Guild;
    /*0x30*/ AtlasImage m_Icon;
    /*0x38*/ AtlasImage m_Background;
    /*0x40*/ AtlasImage m_FactionIcon;
    /*0x48*/ AtlasImage m_PowerIcon;
    /*0x50*/ PlayerProfileSlot m_ProfileSlot;
    /*0x58*/ LocalizeString m_Nickname;
    /*0x60*/ LocalizeString m_Floor;
    /*0x68*/ LocalizeString m_Rank;
    /*0x70*/ LocalizeString m_Power;
    /*0x78*/ LocalizeString m_Faction;
    /*0x80*/ UnityEngine.GameObject m_PointParent;
    /*0x88*/ UnityEngine.GameObject m_PowerParent;
    /*0x90*/ UnityEngine.GameObject m_FactionParent;
    /*0x98*/ RankingBoardType m_eBoardType;
    /*0xa0*/ PTShare.Define.SBoardCampaignRanker m_CampaignInfo;
    /*0xa8*/ PTShare.Define.SBoardTowerRanker m_TowerInfo;
    /*0xb0*/ PTShare.Define.SBoardFactionRanker m_FactionInfo;
    /*0xb8*/ PTShare.Define.SArenaRanker m_ArenaInfo;
    /*0xc0*/ int m_nRank;
    /*0xc8*/ long m_lPlayerid;
    /*0xd0*/ string m_strNickname;
    /*0xd8*/ string m_strFloor;
    /*0xe0*/ string m_strDetail;
    /*0xe8*/ int m_nLevel;
    /*0xec*/ int m_nGender;
    /*0xf0*/ string m_strIconName;
    /*0xf8*/ int m_factionValue;
    /*0x100*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x108*/ UnityEngine.GameObject m_totalDamageParent;
    /*0x110*/ GuildEmblemSlot m_guildEmblemProfileSlot;
    /*0x118*/ LocalizeString m_guildName;
    /*0x120*/ LocalizeString m_guildTotalDamage;
    /*0x128*/ GuildLevelSlot m_guildLevelSlot;
    /*0x130*/ PTShare.Define.SRanker m_rankData;
    /*0x138*/ PTShare.Define.SLongRanker m_longRankData;
    /*0x140*/ PTShare.Define.SRankerGuild m_rankerGuildData;

    /*0x11be750*/ RankBoardRankEntity();
    /*0x11bc410*/ void OnEnable();
    /*0x11bc578*/ void OnDisable();
    /*0x11bc690*/ void InitializeEntity(int _index, PTShare.Define.SBoardCampaignRanker _campaign, string _strIcon);
    /*0x11bcbb8*/ void InitializeEntity(int _index, PTShare.Define.SBoardTowerRanker _tower, string _strIcon);
    /*0x11bcbd4*/ void InitializeEntity(int _index, PTShare.Define.SBoardFactionRanker _faction, RankingBoardType boardType, string _strIcon);
    /*0x11bcbf0*/ void InitializeEntity(int _index, PTShare.Define.ArenaSubType _eType, PTShare.Define.SArenaRanker _arena, string _strIcon);
    /*0x11bcc2c*/ void InitializeEntity(RankingBoardType _eType, int _rank, string _floor, int _gender, string _strIcon);
    /*0x11bdef0*/ void InitializeEntity(RankingBoardType _eType, int _rank, string _floor, long _power, int _gender, string _strIcon);
    /*0x11bc6ac*/ void Initialize(RankingBoardType _eType, int _index, string _strIcon);
    /*0x11bd344*/ void SetProfile();
    /*0x11bd7b0*/ void SetRank(int _rank);
    /*0x11be244*/ void SetFriendOrGuild(RankingBoardType _eType);
    /*0x11be0b8*/ void SetCp(long cp);
    /*0x11bdbcc*/ void SetActiveFlag(bool _friend, bool _guild);
    /*0x11bdfdc*/ void SetBackground(bool active);
    /*0x11be380*/ void SetFactionBackGround(int faction);
    /*0x11be40c*/ void SetFactionIcon(int faction);
    /*0x11bd9c4*/ void SetFaction(RankingBoardType _eType);
    /*0x11bdac8*/ void SetRankTextColor(RankingBoardType _eType);
    /*0x11be498*/ void OnChangeUserHandler();
    /*0x11be578*/ void OnChangeWorldArenaHandler();
    /*0x11be678*/ PTShare.Define.SMiniPlayer rankData();
    /*0x11be690*/ long Score();
    /*0x11be6bc*/ PTShare.Define.SGuildMini Guild();
    /*0x11be6e4*/ void InitializeEntity(int _index, PTShare.Define.SRanker _guildbossRank, RankingBoardType boardType, string _strIcon);
    /*0x11be710*/ void InitializeEntity(int _index, PTShare.Define.SLongRanker _guildbossRank, RankingBoardType boardType, string _strIcon);
    /*0x11be730*/ void InitializeEntity(int _index, PTShare.Define.SRankerGuild _guildbossRank, RankingBoardType boardType, string _strIcon);
    /*0x11be148*/ void InitializeGuildBoss();
    /*0x11be704*/ void ClearData();
    /*0x11bd0e4*/ void SetGuildParent(bool enable);
    /*0x11bdc1c*/ void SetGuildData(PTShare.Define.SGuildMini guild, long score);
    /*0x11be7ac*/ void <SetProfile>b__39_0();
    /*0x11be7b8*/ void <SetProfile>b__39_1();
    /*0x11be7c4*/ void <SetProfile>b__39_2();
    /*0x11be7d0*/ void <SetProfile>b__39_3();
    /*0x11be7dc*/ void <SetProfile>b__39_4();
    /*0x11be7e8*/ void <SetProfile>b__39_5();
}

class RankBoardRewardEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnClickRewardEvent;
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ LocalizeString m_Nickname;
    /*0x28*/ PlayerProfileSlot m_ProfileSlot;
    /*0x30*/ AtlasImage m_ActiveIcon;
    /*0x38*/ AtlasImage m_BackFrame;
    /*0x40*/ UnityEngine.UI.Button m_RewardButton;
    /*0x48*/ UnityEngine.GameObject m_CompleteRewardText;
    /*0x50*/ ScrollContent_StageReward m_ScrollContent;
    /*0x58*/ RankingBoardType m_eBoardType;
    /*0x60*/ QuestPackage m_QuestInfo;
    /*0x68*/ PTShare.Define.SBoardQuest m_BoardInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_liRewardInfo;

    static /*0x11bef3c*/ RankBoardRewardEntity();
    static /*0x11ba56c*/ void add_OnClickRewardEvent(System.Action value);
    static /*0x11ba478*/ void remove_OnClickRewardEvent(System.Action value);
    /*0x11bef34*/ RankBoardRewardEntity();
    /*0x11be7f4*/ void OnEnable();
    /*0x11be920*/ void OnDisable();
    /*0x11be9f4*/ void InitializeEntity(RankingBoardType _eType, QuestPackage _package, PTShare.Define.SBoardQuest _board);
    /*0x11beaac*/ void SetStatusView();
    /*0x11bed70*/ PTShare.Define.SMiniPlayer GetPlayer();
    /*0x11bed44*/ long GetPlayerID();
    /*0x11bece8*/ void InitializeScroll();
    /*0x11bed8c*/ void HandlerScrollContent(int _index, ItemTableRewardSlot _obj);
    /*0x11bee48*/ void OnClickReward();
    /*0x11bef40*/ void <SetStatusView>b__18_0();
    /*0x11bef70*/ void <OnClickReward>b__23_0();
}

class RelationIllustEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic[] m_arrCharacterIllust;
    /*0x20*/ TableData.TableData_Relation relationTableData;
    /*0x28*/ int[] arrCharaterIndex;
    /*0x30*/ bool[] arrCharacterUse;
    /*0x38*/ ShaderChanger_Gray[] m_arrShader;

    /*0x11ca300*/ RelationIllustEntity();
    /*0x11c9bb0*/ void InitializeEntity(TableData.TableData_Relation data);
    /*0x11ca0e4*/ void SetIllust();
}

class RelationListEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Title;
    /*0x20*/ UnityEngine.Transform m_Parent;
    /*0x28*/ UnityEngine.UI.Slider m_Slider;
    /*0x30*/ UnityEngine.GameObject m_RedDot;
    /*0x38*/ RelationIllustEntity relationIllustEntity;
    /*0x40*/ TableData.TableData_Relation relationTableData;
    /*0x48*/ PTShare.Define.SRelation relationData;
    /*0x50*/ int[] arrRelationUnitID;
    /*0x58*/ bool[] arrRelationUnitUse;

    /*0x11ca91c*/ RelationListEntity();
    /*0x11ca35c*/ void InitializeEntity(TableData.TableData_Relation data);
    /*0x11ca4cc*/ void Refresh();
    /*0x11ca5d8*/ void CreateRelationIllust();
    /*0x11ca734*/ void SetSlider();
    /*0x11ca7a0*/ void SetTitle(string key);
    /*0x11ca71c*/ void EnableRedDot(bool enable);
    /*0x11ca898*/ void OnClick();
}

class RelationStatusBar : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_LockParent;
    /*0x20*/ AtlasImage m_OpenParent;
    /*0x28*/ AtlasImage m_ActiveParent;
    /*0x30*/ AtlasImage m_LockIcon;
    /*0x38*/ ParticleBase m_OpenParticle;
    /*0x40*/ LocalizeString m_DeActiveText;
    /*0x48*/ LocalizeString m_StatusName;
    /*0x50*/ LocalizeString m_StatusValue;
    /*0x58*/ UnityEngine.GameObject m_RedDot;
    /*0x60*/ RelationStatus statusInfo;
    /*0x90*/ PTShare.Define.SRelation relationData;
    /*0x98*/ System.Action onClickCallback;
    /*0xa0*/ bool bIsPossibleActivate;

    /*0xf1ae70*/ RelationStatusBar();
    /*0xf1a254*/ void OnEnable();
    /*0xf1a2a4*/ void InitializeStatusBar(int nIndex, PTShare.Define.SRelation relation, RelationStatus status, System.Action onClick);
    /*0xf1a664*/ void InitLockProcess(bool condition);
    /*0xf1a520*/ void SetRedDot(bool enable);
    /*0xf1a540*/ void SetDeActiveText(string key);
    /*0xf1a4d8*/ void SetActiveLockParent(bool enable);
    /*0xf1a508*/ void SetActiveParent(bool enable);
    /*0xf1a4f0*/ void SetActiveOpenParent(bool enable);
    /*0xf1a4c0*/ void SetActiveLockIcon(bool enable);
    /*0xf1a25c*/ void SetActiveOpenParticle(bool enable);
    /*0xf1a944*/ void SetStatusText(string statType, float value);
    /*0xf1acf4*/ void OnClick();
    /*0xf1ad98*/ void StartUnlock();
    /*0xf1ae04*/ System.Collections.IEnumerator CoAnimate();

    class <CoAnimate>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RelationStatusBar <>4__this;

        /*0xf98af4*/ <CoAnimate>d__26(int <>1__state);
        /*0xf98b20*/ void System.IDisposable.Dispose();
        /*0xf98b24*/ bool MoveNext();
        /*0xf98be4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf98bec*/ void System.Collections.IEnumerator.Reset();
        /*0xf98c2c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RelationStoryEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Desc;
    /*0x20*/ AtlasImage m_LeftArrow;
    /*0x28*/ AtlasImage m_RightArrow;
    /*0x30*/ float m_defaultLineSpacing;
    /*0x38*/ System.Collections.Generic.List<string> m_liStoryText;
    /*0x40*/ TableData.TableData_Relation relationData;
    /*0x48*/ bool bInitializeStroy;
    /*0x4c*/ int m_nPageCount;

    /*0xf1b5dc*/ RelationStoryEntity();
    /*0xf1ae78*/ void InitializeEntity(TableData.TableData_Relation data);
    /*0xf1afa8*/ void InitializeSplitText();
    /*0xf1b4f8*/ void RefreshSplitText();
    /*0xf1b468*/ void RefreshArrow();
    /*0xf1b5a0*/ void OnClickNextOrPrevious(bool _isPrevious);
}

class HeroResonanceCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x20*/ UnityEngine.GameObject m_LevelParent;
    /*0x28*/ LocalizeString m_Level;
    /*0x30*/ ParticleBase m_Particle;
    /*0x38*/ PTShare.Define.SHero heroInfo;
    /*0x40*/ TableData.TableData_Unitbase baseInfo;

    /*0x122dd64*/ HeroResonanceCharacter();
    /*0x122d9f0*/ void InitializeCharacter(PTShare.Define.SHero _hero);
    /*0x122dba0*/ void Clear();
    /*0x122da2c*/ void SetView();
    /*0x122dc28*/ void PlayParticle();
    /*0x122dcf8*/ System.Collections.IEnumerator CoParticle();

    class <CoParticle>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonanceCharacter <>4__this;

        /*0x1060c98*/ <CoParticle>d__10(int <>1__state);
        /*0x1060cc4*/ void System.IDisposable.Dispose();
        /*0x1060cc8*/ bool MoveNext();
        /*0x1060dbc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1060dc4*/ void System.Collections.IEnumerator.Reset();
        /*0x1060e04*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroResonanceDropdown : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<HeroResonanceDropdown.ResonanceToggle> m_liToggle;
    /*0x20*/ UnityEngine.GameObject m_ToggleBackground;
    /*0x28*/ UnityEngine.GameObject m_ToggleTemplete;
    /*0x30*/ bool m_bIsShow;
    /*0x38*/ System.Action<ResonanceSortType> OnChangeDropdownEvent;

    /*0x122e250*/ HeroResonanceDropdown();
    /*0x122dd6c*/ void add_OnChangeDropdownEvent(System.Action<ResonanceSortType> value);
    /*0x122de0c*/ void remove_OnChangeDropdownEvent(System.Action<ResonanceSortType> value);
    /*0x122deac*/ void OnEnable();
    /*0x122df74*/ void OnDisable();
    /*0x122e004*/ void InitializeDropdown(ResonanceSortType _type);
    /*0x122e238*/ void ToggleDropdown();
    /*0x122e02c*/ void ViewDropdown(bool _isShow);
    /*0x122e07c*/ void SetDropdown();
    /*0x122e248*/ void HandlerDropDown(ResonanceSortType _type);

    class ResonanceToggle
    {
        /*0x10*/ ResonanceSortType type;
        /*0x18*/ string keyName;
        /*0x20*/ UnityEngine.UI.Toggle toggle;

        /*0x1060e94*/ ResonanceToggle();
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ ResonanceSortType _sortType;
        /*0x18*/ HeroResonanceDropdown <>4__this;

        /*0x1060e0c*/ <>c__DisplayClass13_0();
        /*0x1060e14*/ void <SetDropdown>b__0(bool ison);
    }
}

class HeroResonanceSlot : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x18*/ HeroSlotInventory m_HeroSlot;
    /*0x20*/ UnityEngine.GameObject m_TimerPatent;
    /*0x28*/ LocalizeString m_Timer;
    /*0x30*/ AtlasImage m_PlusIcon;
    /*0x38*/ UnityEngine.GameObject m_reddot;
    /*0x40*/ int nSlotIndex;
    /*0x48*/ PTShare.Define.SHero heroInfo;
    /*0x50*/ PTShare.Define.SResonanceHero resonanceInfo;
    /*0x58*/ System.DateTime slotopen;
    /*0x60*/ System.Collections.IEnumerator ieTimer;

    static /*0x12301b0*/ HeroResonanceSlot();
    static /*0x122f500*/ void add_OnChangeEvent(System.Action value);
    static /*0x122f5f4*/ void remove_OnChangeEvent(System.Action value);
    /*0x12301a8*/ HeroResonanceSlot();
    /*0x122f480*/ int get_nOpenResonanceCount();
    /*0x122f6e8*/ void InitializeSlot(int _nIndex, PTShare.Define.SResonanceHero _hero);
    /*0x122f950*/ void SetView();
    /*0x122fb80*/ void SetActiveObject(bool _bLock, bool _bPlus, bool _bFade);
    /*0x122fa2c*/ void SetReddot();
    /*0x122f9e0*/ void StartTimer();
    /*0x122fc40*/ System.Collections.IEnumerator CoTimer();
    /*0x122fcac*/ void CallbackSelectHero(PTShare.Define.SHero _hero);
    /*0x122fbe8*/ bool IsUnlockEmptySlot();
    /*0x122fc14*/ bool IsNextUnlockSlot();
    /*0x122fac0*/ bool IsCleaning();
    /*0x12301b4*/ void <CallbackSelectHero>b__21_2(bool result);

    class <CoTimer>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonanceSlot <>4__this;

        /*0x1061260*/ <CoTimer>d__20(int <>1__state);
        /*0x106128c*/ void System.IDisposable.Dispose();
        /*0x1061290*/ bool MoveNext();
        /*0x106148c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1061494*/ void System.Collections.IEnumerator.Reset();
        /*0x10614d4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ HeroResonanceSlot.<> <>9;
        static /*0x8*/ System.Action <>9__21_0;
        static /*0x10*/ System.Action <>9__21_1;

        static /*0x1061068*/ <>c();
        /*0x10610c8*/ <>c();
        /*0x10610d0*/ void <CallbackSelectHero>b__21_0();
        /*0x1061198*/ void <CallbackSelectHero>b__21_1();
    }
}

class ResonanceCrystalEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_crystal;
    /*0x20*/ int nIndex;
    /*0x28*/ System.Action onCompleteSpineCallback;

    /*0xf2619c*/ ResonanceCrystalEntity();
    /*0xf25d80*/ void Awake();
    /*0xf25da0*/ void InitializeEntity(int index);
    /*0xf25e68*/ void SetAnim(ResonanceCrystalEntity.CrystalAnim anim, bool loop, float time, System.Action callback);
    /*0xf26150*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0xf26164*/ float GetCurrentAnimTime();

    enum CrystalAnim
    {
        IDLE_CRYSTAL = 0,
        IDLE_NO = 1,
        IN = 2,
        LEVEL_UP = 3,
    }
}

class HeroRewardController : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContents_HeroRewards scrollContentsHeroRewards;
    /*0x20*/ UnityEngine.RectTransform m_ScrollRectTransform;
    /*0x28*/ System.Collections.Generic.List<HeroRewardController.HeroRewardCount> m_tHeroes;

    /*0x1232fac*/ HeroRewardController();
    /*0x1232830*/ int get_Count();
    /*0x1232850*/ void InitRewards(System.Collections.Generic.List<PTShare.Define.SHero> _sHeros);
    /*0x1232c0c*/ void SetScrollLimit();
    /*0x1232d84*/ void HandlerHeroReward(int _nIndex, HeroSlotRewrad _instance);
    /*0x1232f28*/ void HandlerHeroSlotClick(PTShare.Define.SHero _sHero);

    struct HeroRewardCount
    {
        /*0x10*/ PTShare.Define.SHero hero;
        /*0x18*/ long amount;

        /*0xa8a030*/ HeroRewardCount(PTShare.Define.SHero _hero, long _amount);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ PTShare.Define.SHero s;

        /*0x10620e4*/ <>c__DisplayClass6_0();
        /*0x10620ec*/ bool <InitRewards>b__0(HeroRewardController.HeroRewardCount x);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ HeroRewardController.HeroRewardCount data;

        /*0x1062144*/ <>c__DisplayClass8_0();
        /*0x106214c*/ void <HandlerHeroReward>b__0();
    }
}

class HeroSlotRewrad : HeroSlot
{
    /*0x126e0a4*/ HeroSlotRewrad();
}

class ScrollContents_HeroRewards : ScrollContent<HeroSlotRewrad>
{
    /*0xe1bcbc*/ ScrollContents_HeroRewards();
}

class SignatureActivePopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot m_itemSlot;
    /*0x48*/ LocalizeString m_itemCount;
    /*0x50*/ TableData.TableData_Equipment m_equipTable;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_activeList;
    /*0x60*/ PTShare.Define.SHero m_hero;
    /*0x68*/ System.Action m_onSuccessCallBack;

    /*0xe2b518*/ SignatureActivePopup();
    /*0xe2aac0*/ void OnCreate();
    /*0xe2aac4*/ void OnDelete();
    /*0xe2aac8*/ void OnEnter();
    /*0xe2aacc*/ void OnFinish();
    /*0xe2aad0*/ void OnLeave();
    /*0xe2aad4*/ void OnStart();
    /*0xe2aad8*/ void OnExit();
    /*0xe2ab54*/ void InitPopup(PTShare.Define.SHero hero, System.Action onSuccessCallBack);
    /*0xe2ae3c*/ void SetItemSlot();
    /*0xe2afd8*/ void OnConfirm();
    /*0xe2b2b8*/ void OnPreview();
    /*0xe2b590*/ void <OnConfirm>b__15_0();
}

class SignatureItemPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_subTitle;
    /*0x50*/ ItemInfoSlot m_itemSlot;
    /*0x58*/ SignatureItemSkillInfo m_skillInfo;
    /*0x60*/ ScrollContent_EquipmentStatusEntity m_scrollContent;
    /*0x68*/ UnityEngine.UI.Slider m_slider;
    /*0x70*/ UnityEngine.UI.Button m_upgradeBtn;
    /*0x78*/ PTShare.Define.SHero m_hero;
    /*0x80*/ PTShare.Define.SEquip m_signatureItem;
    /*0x88*/ TableData.TableData_Equipment m_signatureItemTable;
    /*0x90*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_statList;

    /*0xe2d6b4*/ SignatureItemPopup();
    /*0xe2c598*/ void OnCreate();
    /*0xe2c59c*/ void OnDelete();
    /*0xe2c5a0*/ void OnEnter();
    /*0xe2c654*/ void OnFinish();
    /*0xe2c658*/ void OnLeave();
    /*0xe2c884*/ void OnStart();
    /*0xe2c888*/ void OnExit();
    /*0xe2b340*/ void InitPopup(PTShare.Define.SHero hero, bool preview);
    /*0xe2cb34*/ void SetData(PTShare.Define.SHero hero, int lv);
    /*0xe2cdb0*/ void SetTitle();
    /*0xe2cf20*/ void SetSubTitle();
    /*0xe2d1dc*/ void SetSkillInfo();
    /*0xe2d274*/ void SetButton();
    /*0xe2c904*/ void BindEvent();
    /*0xe2c65c*/ void RemoveEvent();
    /*0xe2d368*/ void HandleChangeSignature(int heroId);
    /*0xe2d40c*/ void HandleScrollRect(UnityEngine.Vector2 value);
    /*0xe2d45c*/ void HandleScrollContent(int index, EquipmentStatusEntity obj);
    /*0xe2d500*/ void OnSlider();
    /*0xe2d54c*/ void OnClickPromote();
    /*0xe2d620*/ void OnClickHelp();
    /*0xe2d72c*/ void <OnClickPromote>b__30_0();
}

class SignatureItemPromotePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ LocalizeString m_title;
    /*0x50*/ ItemInfoSlot m_signatureItemSlot;
    /*0x58*/ ItemTableRewardSlot m_itemSlot;
    /*0x60*/ ScrollContent_EquipPromoteStatusEntity m_scrollContent;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x70*/ LocalizeString m_itemCount;
    /*0x78*/ LocalizeString m_nextSkillLv;
    /*0x80*/ LocalizeString m_nextSkillDesc;
    /*0x88*/ UnityEngine.UI.Button m_confirmButton;
    /*0x90*/ UnityEngine.GameObject m_requireParent;
    /*0x98*/ UnityEngine.GameObject m_skillInfoParent;
    /*0xa0*/ ParticleBase m_particle;
    /*0xa8*/ UnityEngine.GameObject m_fastLevelupParent;
    /*0xb0*/ UnityEngine.UI.Button m_fastLevelupBtn;
    /*0xb8*/ LocalizeString m_fastLevelupText;
    /*0xc0*/ PTShare.Define.SHero m_hero;
    /*0xc8*/ PTShare.Define.SEquip m_equip;
    /*0xd0*/ bool m_isMaxLevel;
    /*0xd1*/ bool m_isEffect;
    /*0xd8*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_befStatList;
    /*0xe0*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_aftStatList;

    /*0x150b9c0*/ SignatureItemPromotePopup();
    /*0x150a2b4*/ void OnCreate();
    /*0x150a2b8*/ void OnDelete();
    /*0x150a2bc*/ void OnEnter();
    /*0x150a2c0*/ void OnFinish();
    /*0x150a2c4*/ void OnLeave();
    /*0x150a2c8*/ void OnStart();
    /*0x150a2cc*/ void OnExit();
    /*0x150a3e0*/ void InitPopup(PTShare.Define.SHero hero);
    /*0x150a738*/ void SetData();
    /*0x150b058*/ void SetTitle();
    /*0x150ad34*/ void SetNextSkillText();
    /*0x150aa54*/ void SetRequireItem();
    /*0x150b1b0*/ void SetFastLevelUp();
    /*0x150a65c*/ void BindEvent();
    /*0x150b468*/ void RemoveEvent();
    /*0x150b53c*/ void HandleScrollContent(int index, EquipPromoteStatusEntity obj);
    /*0x150b67c*/ void OnClickPromote();
    /*0x150b784*/ void OnClickFastPromote();
    /*0x150b954*/ System.Collections.IEnumerator CoEffect();
    /*0x150ba58*/ void <OnExit>b__28_0();
    /*0x150ba60*/ void <OnClickPromote>b__38_0();

    class <>c__DisplayClass39_0
    {
        /*0x10*/ SignatureItemPromotePopup <>4__this;
        /*0x18*/ System.ValueTuple<int, System.Collections.Generic.List<Rewards>> fastData;
        /*0x28*/ System.Action <>9__1;

        /*0xcbfa40*/ <>c__DisplayClass39_0();
        /*0xcbfa48*/ void <OnClickFastPromote>b__0(bool confirm);
        /*0xcbfb64*/ void <OnClickFastPromote>b__1();
    }

    class <CoEffect>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SignatureItemPromotePopup <>4__this;

        /*0xcbfc40*/ <CoEffect>d__40(int <>1__state);
        /*0xcbfc6c*/ void System.IDisposable.Dispose();
        /*0xcbfc70*/ bool MoveNext();
        /*0xcbfe4c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbfe54*/ void System.Collections.IEnumerator.Reset();
        /*0xcbfe94*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SignatureItemPromoteResultPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_window;
    /*0x48*/ ScrollContent_EquipmentStatusEntity m_scrollContent;
    /*0x50*/ LocalizeString m_skillInfo;
    /*0x58*/ ParticleBase m_skillUnlockParticle;
    /*0x60*/ PTShare.Define.SHero m_hero;
    /*0x68*/ PTShare.Define.SEquip m_signatureItem;
    /*0x70*/ System.Collections.Generic.List<System.ValueTuple<Battle.CharacterStat.StatType, float>> m_statList;

    /*0x150c610*/ SignatureItemPromoteResultPopup();
    /*0x150bb20*/ void OnCreate();
    /*0x150bb24*/ void OnDelete();
    /*0x150bb28*/ void OnEnter();
    /*0x150bb2c*/ void OnFinish();
    /*0x150bb30*/ void OnLeave();
    /*0x150bb38*/ void OnStart();
    /*0x150bb3c*/ void OnExit();
    /*0x150bbb8*/ void InitPopup(PTShare.Define.SHero hero);
    /*0x150bdd8*/ void SetData(PTShare.Define.SHero hero);
    /*0x150c04c*/ void SetNextSkillText();
    /*0x150bcfc*/ void BindEvent();
    /*0x150c434*/ void RemoveEvent();
    /*0x150c508*/ void HandleScrollContent(int index, EquipmentStatusEntity obj);
    /*0x150c3c8*/ System.Collections.IEnumerator CoEffect();

    class <CoEffect>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SignatureItemPromoteResultPopup <>4__this;

        /*0xcbfe9c*/ <CoEffect>d__20(int <>1__state);
        /*0xcbfec8*/ void System.IDisposable.Dispose();
        /*0xcbfecc*/ bool MoveNext();
        /*0xcbffe0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbffe8*/ void System.Collections.IEnumerator.Reset();
        /*0xcc0028*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SignatureItemSkillInfo : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int SPECAIL_SKILL_SLOT;
    static /*0x4*/ int LV_STEP;
    /*0x18*/ AtlasImage m_baseSkillIcon;
    /*0x20*/ LocalizeString m_baseTitle;
    /*0x28*/ LocalizeString m_baseInfo;
    /*0x30*/ LocalizeString[] m_unlockInfos;
    /*0x38*/ LocalizeString[] m_unlockLevels;
    /*0x40*/ AtlasImage[] m_unlockIcons;
    /*0x48*/ UnityEngine.UI.Image[] m_unlockGuages;
    /*0x50*/ UnityEngine.GameObject[] m_lv1Objects;
    /*0x58*/ UnityEngine.GameObject[] m_lv2Objects;
    /*0x60*/ UnityEngine.GameObject[] m_lv3Objects;
    /*0x68*/ UnityEngine.GameObject[] m_lv4Objects;
    /*0x70*/ UnityEngine.RectTransform m_window;
    /*0x78*/ UnityEngine.Vector3[] m_windowSizes;
    /*0x80*/ System.Collections.Generic.List<int> m_unlockLevelList;
    /*0x88*/ PTShare.Define.SHero m_hero;
    /*0x90*/ PTShare.Define.SEquip m_signatureItem;
    /*0x98*/ TableData.TableData_Equipment m_signatureItemTable;

    static /*0x150d994*/ SignatureItemSkillInfo();
    /*0x150d91c*/ SignatureItemSkillInfo();
    /*0x150c688*/ void InitInfo(PTShare.Define.SHero hero, PTShare.Define.SEquip signatureItem, TableData.TableData_Equipment signatureItemTable);
    /*0x150c740*/ void SetData();
    /*0x150c824*/ void SetBaseSkill();
    /*0x150d674*/ void SetLvbject();
    /*0x150cec8*/ void SetUnlockInfos();
    /*0x150d1c4*/ void SetUnlockLevels();
    /*0x150d394*/ void SetUnlockIcons();
    /*0x150d4b4*/ void SetUnlockGuage();
    /*0x150d81c*/ void ReSizeWindow();

    class <>c
    {
        static /*0x0*/ SignatureItemSkillInfo.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__21_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__21_1;
        static /*0x18*/ System.Predicate<TableData.TableData_Skillbase> <>9__21_2;

        static /*0xcc0030*/ <>c();
        /*0xcc0090*/ <>c();
        /*0xcc0098*/ int <SetBaseSkill>b__21_0(TableData.TableData_Skillbase x);
        /*0xcc00b0*/ TableData.TableData_Skillbase <SetBaseSkill>b__21_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
        /*0xcc00fc*/ bool <SetBaseSkill>b__21_2(TableData.TableData_Skillbase data);
    }
}

class ScrollContents_VictoryUserInfo : ScrollContent<VictoryUserEntity>
{
    /*0xe1bd34*/ ScrollContents_VictoryUserInfo();
}

class TowerFloorEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ FormationCharacterEntity[] m_cCharacter;
    /*0x20*/ LocalizeString m_cFloorString;
    /*0x28*/ AtlasImage m_cBattleStart;
    /*0x30*/ AtlasImage m_cBackGround;
    /*0x38*/ UnityEngine.GameObject m_obClear;
    /*0x40*/ PlayerProfileSlot[] m_obCustomProfileSlot;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_gateSkeletonGraphic;
    /*0x50*/ TableData.TableData_Towerfloor m_CurrentTowerInfo;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.STowerUser> m_tTowerUser;
    /*0x60*/ TableData.TableData_Towerfloor m_tStageTowerInfo;
    /*0x68*/ string m_strRewards;
    /*0x70*/ bool m_isClear;
    /*0x71*/ bool m_isShowEffect;
    /*0x78*/ UnityEngine.Coroutine m_effectCoroutine;

    /*0x117f524*/ TowerFloorEntity();
    /*0x117e4c8*/ void InitUpdate(TableData.TableData_Towerfloor _stageTower, System.Collections.Generic.List<PTShare.Define.STowerUser> _sTowerUsers, bool isShowEffect);
    /*0x117eaac*/ void LoadEnemyInfo();
    /*0x117e820*/ void LoadStageInfoSetting();
    /*0x117ee2c*/ void SetBackGround(int faction);
    /*0x117e68c*/ void InitGate();
    /*0x117ef64*/ void BlockGate();
    /*0x117f038*/ void OpenGate();
    /*0x117eef8*/ System.Collections.IEnumerator CoClearEffect();
    /*0x117efcc*/ System.Collections.IEnumerator CoOpenTowerEffect();
    /*0x117ec14*/ void LoadUserInfos(System.Collections.Generic.List<PTShare.Define.STowerUser> _sTowerUsers);
    /*0x117f0b0*/ void OnClick_StageInfo();
    /*0x117f220*/ void OnClick_BattleStart();
    /*0x117f470*/ void HandlerCurrentTowerFriendUser();
    /*0x117f5b8*/ void <OnClick_StageInfo>b__24_0(System.Collections.Generic.List<PTShare.Define.STowerRecord> _instance);

    class <CoClearEffect>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TowerFloorEntity <>4__this;

        /*0xcd332c*/ <CoClearEffect>d__21(int <>1__state);
        /*0xcd3358*/ void System.IDisposable.Dispose();
        /*0xcd335c*/ bool MoveNext();
        /*0xcd35e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd35f0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3630*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoOpenTowerEffect>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TowerFloorEntity <>4__this;

        /*0xcd3638*/ <CoOpenTowerEffect>d__22(int <>1__state);
        /*0xcd3664*/ void System.IDisposable.Dispose();
        /*0xcd3668*/ bool MoveNext();
        /*0xcd37bc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd37c4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd3804*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScrollContent_TowerFloor : ScrollContent<TowerFloorEntity>
{
    /*0xe1b794*/ ScrollContent_TowerFloor();
}

class ScrollContent_TowerUserInfoEntity : ScrollContent<TowerUserInfoEntity>
{
    /*0xe1b80c*/ ScrollContent_TowerUserInfoEntity();
}

class TowerStageInformationPopup : GuiBase
{
    /*0x40*/ ScrollContent_TowerUserInfoEntity m_cScrollContentTowerUserinfo;
    /*0x48*/ ScrollContent_StageReward m_cScrollContentStageReward;
    /*0x50*/ LocalizeString m_NoRecordText;
    /*0x58*/ System.Collections.Generic.List<Rewards> m_tRewards;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.STowerRecord> m_tTowerRecords;
    /*0x68*/ int m_nBattleID;

    /*0x111e1f4*/ TowerStageInformationPopup();
    /*0x111dcd8*/ void OnCreate();
    /*0x111dddc*/ void OnDelete();
    /*0x111dde0*/ void OnEnter();
    /*0x111de4c*/ void OnFinish();
    /*0x111de50*/ void OnLeave();
    /*0x111de54*/ void OnStart();
    /*0x111de58*/ void OnExit();
    /*0x111ded4*/ void LoadStageInfo(System.Collections.Generic.List<PTShare.Define.STowerRecord> _towerRecords, string _rewards, int _nBattleID);
    /*0x111e098*/ void LoadStageInfo(System.ValueTuple<System.Collections.Generic.List<PTShare.Define.STowerRecord>, string, int> _datas);
    /*0x111e0a8*/ void HandlerTowerUserInfo(int _index, VictoryUserEntity _instance);
    /*0x111e030*/ void LoadRewards(System.Collections.Generic.List<Rewards> _rewards);
    /*0x111e138*/ void HandlerStageReward(int _index, ItemTableRewardSlot _instance);
}

class TowerUserInfoEntity : TowerUserSlotBase
{
    /*0x111e564*/ TowerUserInfoEntity();
}

class StageTowerDoorEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_propertyIcon;
    /*0x20*/ AtlasImage m_backGround;
    /*0x28*/ LocalizeString m_title;
    /*0x30*/ LocalizeString m_floor;
    /*0x38*/ UnityEngine.GameObject m_lockObject;
    /*0x40*/ LocalizeString m_openDay;
    /*0x48*/ bool m_isLock;
    /*0x4c*/ DefineStageTower.TOWER_TYPE m_towerType;

    /*0xc95ac0*/ StageTowerDoorEntity();
    /*0xc94ba0*/ void InitEntity(TableData.TableData_Tower towerData);
    /*0xc94cd4*/ void SetTitle(int faction);
    /*0xc94eb4*/ void SetProperty(int faction);
    /*0xc94fa8*/ void SetBackGround(int faction);
    /*0xc95130*/ void SetFloor(int floor);
    /*0xc9552c*/ void SetLockDoor(bool isLock, System.Collections.Generic.List<System.DayOfWeek> openDayList);
    /*0xc95258*/ void UpdateDoor(string enterDay);
    /*0xc95074*/ PTShare.Define.Faction GetCurFaction();
    /*0xc957b8*/ void OnClick();

    class <>c
    {
        static /*0x0*/ StageTowerDoorEntity.<> <>9;
        static /*0x8*/ System.Action <>9__16_0;

        static /*0xcc20c4*/ <>c();
        /*0xcc2124*/ <>c();
        /*0xcc212c*/ void <OnClick>b__16_0();
    }
}

class StageTowerListPopup : GuiBase
{
    /*0x40*/ StageTowerDoorEntity[] m_doorEntitys;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Tower> m_tableList;

    /*0xc95eb0*/ StageTowerListPopup();
    /*0xc95ad0*/ void OnCreate();
    /*0xc95ad4*/ void OnDelete();
    /*0xc95ad8*/ void OnEnter();
    /*0xc95adc*/ void OnExit();
    /*0xc95bd4*/ void OnFinish();
    /*0xc95bd8*/ void OnLeave();
    /*0xc95bdc*/ void OnStart();
    /*0xc95be0*/ void InitPopup();
    /*0xc95dd8*/ void OnClickExit();
    /*0xc95eac*/ void HandleDailyChange();
    /*0xc95f28*/ void <OnClickExit>b__10_0();
}

class StageTowerPopup : GuiBase
{
    static /*0x0*/ int SELECT_FLOOR;
    static /*0x4*/ float BASE_HEIGHT;
    /*0x40*/ ScrollContent_TowerFloor mScrollContentTowerFloor;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ TowerStageSort_Floor towerStageSort_Floor;
    /*0x58*/ System.Collections.Generic.List<TableData.TableData_Towerfloor> m_tStageTowerInfo;
    /*0x60*/ TableData.TableData_Towerfloor m_curStageTower;
    /*0x68*/ int m_curFloor;
    /*0x6c*/ int m_curFaction;
    /*0x70*/ int m_maxFloor;

    static /*0xc97b38*/ StageTowerPopup();
    /*0xc97a8c*/ StageTowerPopup();
    /*0xc95f34*/ void OnCreate();
    /*0xc95f38*/ void OnEnter();
    /*0xc96b80*/ void OnStart();
    /*0xc970bc*/ void OnFinish();
    /*0xc970c0*/ void OnLeave();
    /*0xc971b0*/ void OnDelete();
    /*0xc971b4*/ void OnExit();
    /*0xc96438*/ void InitStageInfo();
    /*0xc962f8*/ void InitMaxFloor();
    /*0xc972a8*/ void HandlerTowerFloor(int _index, TowerFloorEntity _instance);
    /*0xc96d34*/ void HandlerDailyChange();
    /*0xc975dc*/ void OnClick_Helper();
    /*0xc978bc*/ void OnClick_Story();
    /*0xc979ac*/ void OnClick_RankingBoard();
    /*0xc9673c*/ float GetScrollContentYPosition(int index);
    /*0xc968a4*/ void SetScrollContentY(float y, bool useDOTween, float doTweenDuration);
    /*0xc97a20*/ System.Collections.IEnumerator CoStageTowerClearEffect();
    /*0xc966d0*/ System.Collections.IEnumerator CoTowerAllClearPopup();
    /*0xc97b98*/ void <OnExit>b__8_0();
    /*0xc97c80*/ void <HandlerDailyChange>b__20_0(bool confirm);

    class <>c__DisplayClass3_0
    {
        /*0x10*/ StageTowerPopup <>4__this;
        /*0x18*/ int selectFloor;

        /*0xcc21d8*/ <>c__DisplayClass3_0();
        /*0xcc21e0*/ void <OnEnter>b__0(System.Collections.Generic.List<PTShare.Define.STowerUser> _instance);
    }

    class <CoStageTowerClearEffect>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StageTowerPopup <>4__this;
        /*0x28*/ int <selectFloor>5__2;

        /*0xcc2348*/ <CoStageTowerClearEffect>d__26(int <>1__state);
        /*0xcc2374*/ void System.IDisposable.Dispose();
        /*0xcc2378*/ bool MoveNext();
        /*0xcc2548*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2550*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2590*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTowerAllClearPopup>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StageTowerPopup <>4__this;

        /*0xcc2598*/ <CoTowerAllClearPopup>d__27(int <>1__state);
        /*0xcc25c4*/ void System.IDisposable.Dispose();
        /*0xcc25c8*/ bool MoveNext();
        /*0xcc2820*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc2828*/ void System.Collections.IEnumerator.Reset();
        /*0xcc2868*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TowerStageSort_Floor : System.Collections.Generic.IComparer<TableData.TableData_Towerfloor>
{
    /*0x111e2d4*/ TowerStageSort_Floor();
    /*0x111e2ac*/ int Compare(TableData.TableData_Towerfloor left, TableData.TableData_Towerfloor right);
}

class TowerRankEntity : TowerUserSlotBase
{
    /*0xd8*/ LocalizeString m_cRank;
    /*0xe0*/ AtlasImage m_RankImage;
    /*0xe8*/ LocalizeString m_cLastFloor;
    /*0xf0*/ LocalizeString m_cClearLocalize;

    /*0x111d408*/ TowerRankEntity();
    /*0x111ceb0*/ void InitUserInfo(long _lPlayerID, int _nTableID, string _nickName, int _nLevel, int _nFloor, System.DateTime _clear, int _index, string detailids);
    /*0x111d0cc*/ void LoadFloor(int _nFloor);
    /*0x111d1b0*/ void LoadClearTime(System.DateTime _clearTime);
    /*0x111d2d4*/ void SetRankImage(int _index);
}

class ScrollContent_TowerUserRank : ScrollContent<TowerRankEntity>
{
    /*0xe1b884*/ ScrollContent_TowerUserRank();
}

class TowerRankingPopup : GuiBase
{
    /*0x40*/ ScrollContent_TowerUserRank m_cScrollContentTowerUserRank;
    /*0x48*/ TowerRankEntity m_cTowerRankEntity;
    /*0x50*/ LocalizeString m_NoRecordText;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.STowerRanker> m_STowerUser;

    /*0x111dc60*/ TowerRankingPopup();
    /*0x111d418*/ void OnCreate();
    /*0x111d41c*/ void OnDelete();
    /*0x111d420*/ void OnEnter();
    /*0x111d5e0*/ void OnFinish();
    /*0x111d5e4*/ void OnLeave();
    /*0x111d6a0*/ void OnStart();
    /*0x111d6a4*/ void OnExit();
    /*0x111d720*/ UserData get_m_curUserData();
    /*0x111d7b0*/ SProfile get_m_tProfile();
    /*0x111d838*/ void HandlerTowerUserRank(int _index, TowerRankEntity _instance);
    /*0x111da7c*/ void HandlerLoadTowerRankingUser(ServerProtocol.ResTowerRanking _resTowerRanking);
}

class TowerUserSlotBase : VictoryUserEntity
{
    /*0xa8*/ LocalizeString m_cNickName;
    /*0xb0*/ LocalizeString m_cCombatPower;
    /*0xb8*/ UnityEngine.GameObject m_obGuild;
    /*0xc0*/ UnityEngine.GameObject m_obFriend;
    /*0xc8*/ UnityEngine.GameObject m_obCombat;
    /*0xd0*/ PlayerProfileSlot m_cHeroCustomProfileSlot;

    /*0x111d410*/ TowerUserSlotBase();
    /*0x111cf0c*/ void InitUserInfo(long _lPlayerID, int _nTableID, string _nickName, int _nLevel, int _nFloor, string detailids);
    /*0x111e56c*/ void SetCombatPower(long _combatPower);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ long _lPlayerID;
        /*0x18*/ int _nFloor;

        /*0xcd380c*/ <>c__DisplayClass6_0();
        /*0xcd3814*/ void <InitUserInfo>b__0();
    }
}

class StageVictoryUserPopup : GuiBase
{
    /*0x40*/ ScrollContents_VictoryUserInfo m_cScrollContentVictoryUserInfo;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> m_liCampaignRecord;
    /*0x50*/ int nBattleID;

    /*0xc97e4c*/ StageVictoryUserPopup();
    /*0xc97c8c*/ void OnCreate();
    /*0xc97c90*/ void OnDelete();
    /*0xc97c94*/ void OnEnter();
    /*0xc97d34*/ void OnFinish();
    /*0xc97d38*/ void OnLeave();
    /*0xc97d3c*/ void OnStart();
    /*0xc91570*/ void InitVictoryUserWindow(int _battleID, System.Collections.Generic.List<PTShare.Define.SCampaignRecord> _campaignRecords);
    /*0xc97d40*/ void HandlerEventItemUpdate(int _index, VictoryUserEntity _instance);
    /*0xc97dcc*/ void OnClickExit();
}

class HeroTroopSlot : HeroSlot
{
    /*0x48*/ AtlasImage m_PlusIcon;

    /*0x1308fa4*/ HeroTroopSlot();
    /*0x1308eac*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
    /*0x1308f14*/ void SetActiveObject(bool _enable);
    /*0x1308efc*/ void SetActivePlusIcon(bool _enable);
}

class TroopCharacterViewEntity : UnityEngine.MonoBehaviour
{
    static int DEFAULT_LAYER = 5;
    static int DRAGGED_LAYER = 6;
    /*0x18*/ TroopCharacterViewGroup_New m_ViewGroup;
    /*0x20*/ UnityEngine.RectTransform m_TransMove;
    /*0x28*/ AtlasImage m_Foothold;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x38*/ UnityEngine.UI.Image m_ClickableImage;
    /*0x40*/ AtlasImage[] m_arrStar;
    /*0x48*/ UnityEngine.GameObject m_FactionLevelParent;
    /*0x50*/ LocalizeString m_LevelText;
    /*0x58*/ AtlasImage m_FactionImage;
    /*0x60*/ TooltipData_Unit m_UnitTooltipData;
    /*0x68*/ TooltipTargetUI m_TooltipTarget;
    /*0x70*/ ParticleBase m_FootholdEffect;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_BlindCharacter;
    /*0x80*/ UnityEngine.GameObject m_BlindButton;
    /*0x88*/ UnityEngine.GameObject m_BlindON;
    /*0x90*/ UnityEngine.GameObject m_BlindOFF;
    /*0x98*/ bool IsEmpty;
    /*0xa0*/ TableData.TableData_Unitbase <UnitBase>k__BackingField;
    /*0xa8*/ SUnitPreview <PreviewInfo>k__BackingField;
    /*0xbc*/ int <PositionNumber>k__BackingField;
    /*0xc0*/ int <GetUnitLevel>k__BackingField;
    /*0xc4*/ bool <IsEnemy>k__BackingField;
    /*0xc5*/ bool m_bDragged;
    /*0xc8*/ UnityEngine.Vector3 m_vecMovePOS;
    /*0xd4*/ UnityEngine.Vector2 m_vecSubPOS;
    /*0xdc*/ UnityEngine.Vector3 m_vecCharacterDefaultScale;
    /*0xe8*/ UnityEngine.Vector3 m_vecFootholdDefaultScale;
    /*0xf8*/ UnityEngine.RectTransform m_transParent;
    /*0x100*/ UnityEngine.RectTransform m_transFootHold;
    /*0x108*/ UnityEngine.RectTransform m_transCharacter;
    /*0x110*/ int m_nSiblingIndexOrigin;
    /*0x114*/ bool m_bClickable;
    /*0x118*/ PTShare.Define.SHero m_cacheSHero;

    /*0x1125920*/ TroopCharacterViewEntity();
    /*0x11239fc*/ TableData.TableData_Unitbase get_UnitBase();
    /*0x1123a04*/ void set_UnitBase(TableData.TableData_Unitbase value);
    /*0x1123a0c*/ SUnitPreview get_PreviewInfo();
    /*0x1123a20*/ void set_PreviewInfo(SUnitPreview value);
    /*0x1123a34*/ UnityEngine.Vector3 get_GetOriginPosition();
    /*0x1123a50*/ UnityEngine.Vector3 get_GetPosition();
    /*0x1123a6c*/ int get_GetSiblingIndex();
    /*0x1123a74*/ int get_PositionNumber();
    /*0x1123a7c*/ void set_PositionNumber(int value);
    /*0x1123a84*/ int get_GetUnitTableID();
    /*0x1123a8c*/ int get_GetUnitSkinID();
    /*0x1123ac0*/ int get_GetUnitLevel();
    /*0x1123ac8*/ void set_GetUnitLevel(int value);
    /*0x1123ad0*/ bool get_GetUnitBlind();
    /*0x1123ae0*/ bool get_IsEnemy();
    /*0x1123ae8*/ void set_IsEnemy(bool value);
    /*0x1123af4*/ Battle.GameModeType get_CurrentGameMode();
    /*0x1123b90*/ bool get_IsDefense();
    /*0x1123c2c*/ void Initialize(int _nPositionNumber);
    /*0x1123e54*/ void InitializeUnit(TableData.TableData_Unitbase _base, SUnitPreview _preview, int _nLevel, bool _bIsEnemy, bool _bSetSiblingOrigin);
    /*0x1124444*/ void ClearUnit();
    /*0x1124164*/ void ChangeState(TableData.TableData_Unitbase _base, SUnitPreview _preview);
    /*0x1124710*/ void RefreshState();
    /*0x1123d14*/ void SetPositionNumber(int _nPositionNumber);
    /*0x1124744*/ void SetClickable(bool _bEnable);
    /*0x11245d8*/ void ClearStarGrade();
    /*0x1124750*/ void OnDownCharacter(UnityEngine.EventSystems.BaseEventData _data);
    /*0x11248a4*/ void OnUpCharacter(UnityEngine.EventSystems.BaseEventData _data);
    /*0x1124d88*/ void OnDragCharacter(UnityEngine.EventSystems.BaseEventData _data);
    /*0x11254f8*/ bool IsExistUnitTalbeID(int _nUnitid);
    /*0x1124410*/ void SetSiblingToOrigin();
    /*0x11254dc*/ void SetSiblingToLast();
    /*0x112551c*/ void SetCharacterAlpha(float _fAlphaValue);
    /*0x11255ec*/ void SetPosition(UnityEngine.Vector3 _vecPosition);
    /*0x1125608*/ void SetSibling(int _nSiblingIndex);
    /*0x1125624*/ void SetPositionToOrigin();
    /*0x112480c*/ void PlayFootholdEffect(bool _bEnable, bool _bLoop, float _fSpeed);
    /*0x1125664*/ void SetUnitLevel(int _nLevel);
    /*0x1124434*/ bool IsBlind();
    /*0x1123d1c*/ void SetActiveBlindButton(bool _bEnable);
    /*0x1123dcc*/ void SetActiveBlindCharacter(bool _bEnable);
    /*0x1125740*/ void OnClickBlindButton();
    /*0x11256ec*/ void RefreshBlindButton();
    /*0x1124648*/ void SetBlindData(int index, bool blind);
}

class TroopCharacterViewEntity_GuildWar : TroopCharacterViewEntity
{
    /*0x120*/ UnityEngine.GameObject m_goMyUnitMarker;

    /*0x1125b40*/ TroopCharacterViewEntity_GuildWar();
    /*0x1125980*/ void Initialize(int _nPositionNumber);
    /*0x11259bc*/ void InitializeUnit(TableData.TableData_Unitbase _base, SUnitPreview _preview, int _nLevel, bool _bIsEnemy, bool _bSetSiblingOrigin);
    /*0x1125b04*/ void ClearUnit();
}

class TroopCharacterViewGroup_New : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroTroopPopup_New m_heroTroopPopup;
    /*0x20*/ System.Collections.Generic.List<TroopCharacterViewEntity> m_liCharacterEntity;
    /*0x28*/ int m_nDragEntityIndex;
    /*0x2c*/ int m_nChangedEntityIndex;
    /*0x30*/ float POSITION_CHANGE_DISTANCE;
    /*0x38*/ System.Collections.Generic.List<TroopCharacterViewEntity> m_lisCurrentViewEntity;

    /*0x1126bec*/ TroopCharacterViewGroup_New();
    /*0x1125b44*/ void InitializeGroup();
    /*0x1125d78*/ void SetFormation(System.Collections.Generic.List<int> _lisFormation);
    /*0x1125874*/ int GetBlindCount();
    /*0x1125ff0*/ int GetSiblingIndex(int _nIndex);
    /*0x112606c*/ void SetPreviewCharacter(int _nIndex, int _nLevel, ref TableData.TableData_Unitbase _tUnitBase, ref SUnitPreview _hero, bool _bIsEnemy, bool _bFirstInitialied);
    /*0x11262ec*/ void SetPreviewCharacterEmptyAll();
    /*0x11263d4*/ void SetPreivewCharacterEmpty(int _nIndex);
    /*0x11264b4*/ void SetBlindButton(bool enable);
    /*0x1124898*/ void TouchStart();
    /*0x1124d58*/ void TouchEndNoDrag(int _nUnitTableID);
    /*0x11249c4*/ void TouchEndWithDrag(bool _bPlayVoice);
    /*0x1124f80*/ void DragUnit(int _nPositionNumber, UnityEngine.Vector2 _vecPosition);
    /*0x112655c*/ void ChangeUnitInfo(int _nIndexA, int _nIndexB, bool _bSetSiblingOrigin);
}

class TroopTeamEntity : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerClickHandler
{
    static /*0x0*/ System.Action OnProtocolChangeEvent;
    /*0x18*/ UnityEngine.CanvasGroup m_CanvasGroup;
    /*0x20*/ UnityEngine.GameObject m_EditParent;
    /*0x28*/ LocalizeString m_TroopName;
    /*0x30*/ System.Collections.Generic.List<HeroTroopSlot> m_liHeroSlot;
    /*0x38*/ float m_MouseWaitTime;
    /*0x3c*/ int m_nIndex;
    /*0x40*/ bool m_isUseTroopData;
    /*0x41*/ bool m_isOpenMenu;
    /*0x48*/ PTShare.Define.STroop m_TroopInfo;
    /*0x50*/ string[] m_arrHeroIds;
    /*0x58*/ System.Collections.IEnumerator m_iMouseTimer;
    /*0x60*/ float m_fMouseTime;
    /*0x64*/ int nStartCount;
    /*0x68*/ int nSlotLength;

    static /*0x11292a0*/ TroopTeamEntity();
    static /*0x11283c4*/ void add_OnProtocolChangeEvent(System.Action value);
    static /*0x11284b8*/ void remove_OnProtocolChangeEvent(System.Action value);
    /*0x1129290*/ TroopTeamEntity();
    /*0x11285ac*/ void InitializeEntity(int _index);
    /*0x11289e0*/ void InitializeEntity(int _index, PTShare.Define.STroop _troop);
    /*0x1128c60*/ void ShowTroopPopup();
    /*0x1128d34*/ void OnChangeNameButton();
    /*0x1128db8*/ void OnSortButton();
    /*0x1128e90*/ void OnDeleteButton();
    /*0x112885c*/ void SetTroopName(string _name);
    /*0x11287f4*/ void SetActiveEdit(bool _enable);
    /*0x1128f68*/ void StartMouseTimer(bool _isStop);
    /*0x1128fcc*/ System.Collections.IEnumerator CoMouseDownTimer();
    /*0x1129038*/ bool IsChildrenObject();
    /*0x1129164*/ UnityEngine.GameObject GetCurrentEventSystemObject();
    /*0x11291d0*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11291e0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);

    class <CoMouseDownTimer>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TroopTeamEntity <>4__this;

        /*0xcd4878*/ <CoMouseDownTimer>d__26(int <>1__state);
        /*0xcd48a4*/ void System.IDisposable.Dispose();
        /*0xcd48a8*/ bool MoveNext();
        /*0xcd4ac8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd4ad0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd4b10*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TroopTeamEntitySelector : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler
{
    static /*0x0*/ System.Action<PTShare.Define.STroop> OnSelectEvent;
    /*0x18*/ AtlasImage m_Frame;
    /*0x20*/ LocalizeString m_TroopName;
    /*0x28*/ System.Collections.Generic.List<HeroTroopSlot> m_liHeroSlot;
    /*0x30*/ int m_nIndex;
    /*0x38*/ PTShare.Define.STroop m_TroopInfo;
    /*0x40*/ string[] m_arrHeroIds;
    /*0x48*/ int nStartCount;
    /*0x4c*/ int nSlotLength;

    static /*0x11299d8*/ TroopTeamEntitySelector();
    static /*0x11292a4*/ void add_OnSelectEvent(System.Action<PTShare.Define.STroop> value);
    static /*0x1129398*/ void remove_OnSelectEvent(System.Action<PTShare.Define.STroop> value);
    /*0x11299d0*/ TroopTeamEntitySelector();
    /*0x112948c*/ void InitializeEntity(int _index, PTShare.Define.STroop _troop, bool _isSelect);
    /*0x1129780*/ void SetTroopName(string _name);
    /*0x1129904*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
}

class VictoryUserEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_FriendIcon;
    /*0x20*/ AtlasImage m_GuildIcon;
    /*0x28*/ LocalizeString m_Nickname;
    /*0x30*/ LocalizeString m_CombatPower;
    /*0x38*/ PlayerProfileSlot m_PlayerSlot;
    /*0x40*/ PTShare.Define.SCampaignRecord m_tCampaignRecord;
    /*0x48*/ PTShare.Define.STowerRecord m_tTowerRecord;
    /*0x50*/ System.Collections.Generic.List<Battle.BattleGraphValue> battleGraphValue;
    /*0x58*/ System.Collections.Generic.List<UnitSpawnInfo> m_tUnitStage;
    /*0x60*/ BattleGraph LeftBattleGraph;
    /*0x78*/ BattleGraph RightBattleGraph;
    /*0x90*/ int m_nBattleID;
    /*0x98*/ long m_nPlayerID;
    /*0xa0*/ Battle.GameModeType m_eGameMode;

    /*0x10d4404*/ VictoryUserEntity();
    /*0x10d3b34*/ void InitCampainUserInfo(int battleID, PTShare.Define.SCampaignRecord _campaignUser);
    /*0x10d404c*/ void InitTowerUserInfo(int battleID, PTShare.Define.STowerRecord _towerRecord);
    /*0x10d3fac*/ void SetViewStatus(int _gender, string _nickName, int _level, PTShare.Define.Relation _relation, long _combatPower);
    /*0x10d3c88*/ void InitGraphValue();
    /*0x10d41ec*/ void OnClick_Graph();
    /*0x10d44bc*/ void <InitCampainUserInfo>b__14_0();
    /*0x10d44dc*/ void <InitTowerUserInfo>b__15_0();
}

class StatusEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ Battle.CharacterStat.StatType m_eStatType;
    /*0x20*/ LocalizeString m_StatText;
    /*0x28*/ LocalizeString m_StatValue;
    /*0x30*/ ParticleBase m_lvUpParticlePrefab;
    /*0x38*/ System.Text.StringBuilder m_StrBuilder;
    /*0x40*/ string m_strAddSeparator;
    /*0x48*/ ParticleBase m_tempParticle;

    /*0xc9b208*/ StatusEntity();
    /*0xc9abe0*/ void OnDisable();
    /*0xc9aca4*/ void InitializeStat(bool _checkActive, float _defValue, float _addValue, string _separator, string _addseparator, bool _isShortName);
    /*0xc9b028*/ void ShowParticle();
    /*0xc9aec8*/ string SetStatText(float _defValue, float _addValue);
    /*0xc9b0c0*/ void SetMeasureValue(float _Value);
    /*0xc9b1f8*/ Battle.CharacterStat.StatType GetStatType();
    /*0xc9b200*/ void SetStatType(Battle.CharacterStat.StatType statType);
    /*0xc9b054*/ System.Collections.IEnumerator CoEffectLvupParticle();
    /*0xc9abe4*/ void DestroyParticle();

    class <CoEffectLvupParticle>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ StatusEntity <>4__this;

        /*0xcc35d8*/ <CoEffectLvupParticle>d__14(int <>1__state);
        /*0xcc3604*/ void System.IDisposable.Dispose();
        /*0xcc3608*/ bool MoveNext();
        /*0xcc37a8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc37b0*/ void System.Collections.IEnumerator.Reset();
        /*0xcc37f0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TitleSkinOptionSet
{
    /*0x10*/ bool isActive;
    /*0x18*/ string skinName;
    /*0x20*/ UnityEngine.GameObject effect;
    /*0x28*/ UnityEngine.AudioClip sound;
    /*0x30*/ UnityEngine.GameObject[] childs;

    /*0x11700fc*/ TitleSkinOptionSet();
}

class TitleSkinOption : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<TitleSkinOptionSet> m_liSkinSet;
    /*0x20*/ TitleSkinOptionSet selectSkin;

    /*0x11700f4*/ TitleSkinOption();
    /*0x116fa60*/ string GetRandomActiveSkinName();
    /*0x116fcb4*/ void DeActiveEffectAll();
    /*0x116fdd8*/ void DeActiveChildAll();
    /*0x116fefc*/ void ActiveSkinEffect();
    /*0x116ffa0*/ void ActiveChild();
    /*0x1170088*/ string GetTitleVoiceAudio();

    class <>c
    {
        static /*0x0*/ TitleSkinOption.<> <>9;
        static /*0x8*/ System.Func<TitleSkinOptionSet, bool> <>9__2_0;
        static /*0x10*/ System.Func<TitleSkinOptionSet, System.Guid> <>9__2_1;
        static /*0x18*/ System.Action<TitleSkinOptionSet> <>9__3_0;
        static /*0x20*/ System.Action<TitleSkinOptionSet> <>9__4_0;

        static /*0xcd11d8*/ <>c();
        /*0xcd1238*/ <>c();
        /*0xcd1240*/ bool <GetRandomActiveSkinName>b__2_0(TitleSkinOptionSet x);
        /*0xcd1258*/ System.Guid <GetRandomActiveSkinName>b__2_1(TitleSkinOptionSet x);
        /*0xcd12b4*/ void <DeActiveEffectAll>b__3_0(TitleSkinOptionSet x);
        /*0xcd134c*/ void <DeActiveChildAll>b__4_0(TitleSkinOptionSet x);
    }
}

class TooltipDataBase : UnityEngine.MonoBehaviour
{
    /*0x11712a0*/ TooltipDataBase();
    TooltipType GetTooltipType();
}

class TooltipData_Desc : TooltipDataBase
{
    /*0x18*/ string kDesc;
    /*0x20*/ System.Collections.Generic.List<string> paramList;

    /*0x11712e4*/ TooltipData_Desc();
    /*0x11712a8*/ TooltipType GetTooltipType();
    /*0x11712b0*/ void SetData(string _key);
}

class TooltipData_Equipment : TooltipDataBase
{
    /*0x18*/ int <equipID>k__BackingField;
    /*0x20*/ string <kEquipName>k__BackingField;
    /*0x28*/ string <kEquipDesc>k__BackingField;

    /*0x11713a0*/ TooltipData_Equipment();
    /*0x11712ec*/ int get_equipID();
    /*0x11712f4*/ void set_equipID(int value);
    /*0x11712fc*/ string get_kEquipName();
    /*0x1171304*/ void set_kEquipName(string value);
    /*0x117130c*/ string get_kEquipDesc();
    /*0x1171314*/ void set_kEquipDesc(string value);
    /*0x117131c*/ TooltipType GetTooltipType();
    /*0x1171324*/ void SetData(int _equipment_index);
    /*0x1171374*/ void SetData(TableData.TableData_Equipment _script);
}

class TooltipData_Faction : TooltipDataBase
{
    /*0x18*/ int factionID;

    /*0x11713b8*/ TooltipData_Faction();
    /*0x11713a8*/ TooltipType GetTooltipType();
    /*0x11713b0*/ void SetData(int _nFactionID);
}

class TooltipData_FactionHelp : TooltipDataBase
{
    /*0x11713c8*/ TooltipData_FactionHelp();
    /*0x11713c0*/ TooltipType GetTooltipType();
}

class TooltipData_Guild : TooltipDataBase
{
    /*0x18*/ TooltipData_Guild.GUILD_TOOLTIP_TYPE guildTooltipType;

    /*0x11713d8*/ TooltipData_Guild();
    /*0x11713d0*/ TooltipType GetTooltipType();

    enum GUILD_TOOLTIP_TYPE
    {
        GUILD_LEVEL = 0,
        GUILD_POINT = 1,
    }
}

class TooltipData_IconDesc : TooltipDataBase
{
    /*0x18*/ AtlasImage selectImage;
    /*0x20*/ string title;
    /*0x28*/ string desc;

    /*0x1171664*/ TooltipData_IconDesc();
    /*0x11713e0*/ TooltipType GetTooltipType();
    /*0x11713e8*/ void SetData(UnitClassType _classType);
    /*0x1171510*/ void SetData(PTShare.Define.EquipmentType _equipType, bool _isEquipment);
}

class TooltipData_Item : TooltipDataBase
{
    /*0x18*/ int <itemID>k__BackingField;
    /*0x20*/ string <kItemName>k__BackingField;
    /*0x28*/ string <kItemDesc>k__BackingField;

    /*0x11717dc*/ TooltipData_Item();
    /*0x11716b8*/ int get_itemID();
    /*0x11716c0*/ void set_itemID(int value);
    /*0x11716c8*/ string get_kItemName();
    /*0x11716d0*/ void set_kItemName(string value);
    /*0x11716d8*/ string get_kItemDesc();
    /*0x11716e0*/ void set_kItemDesc(string value);
    /*0x11716e8*/ TooltipType GetTooltipType();
    /*0x11716f0*/ void SetData(int _item_id);
    /*0x117172c*/ void SetData(TableData.TableData_Item _script);
}

class TooltipData_Percent : TooltipDataBase
{
    /*0x18*/ System.Collections.Generic.List<string> descList;
    /*0x20*/ System.Collections.Generic.List<float> percentList;

    /*0x1171c70*/ TooltipData_Percent();
    /*0x11717e4*/ TooltipType GetTooltipType();
    /*0x11717ec*/ void SetData(System.Collections.Generic.List<string> descList, System.Collections.Generic.List<float> percentList);
    /*0x11717f4*/ void SetData(System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> tableList);
}

class TooltipData_Skill : TooltipDataBase
{
    /*0x18*/ TableData.TableData_Skillbase m_skillBase;
    /*0x20*/ TableData.TableData_Skilllv m_skillLv;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> m_liSkillDesc;
    /*0x30*/ System.Collections.Generic.List<TableData.TableData_Unittierlv> m_liTierLv;
    /*0x38*/ int m_nLevel;
    /*0x40*/ System.Action<bool> OnClickAction;

    /*0x1171de4*/ TooltipData_Skill();
    /*0x1171c78*/ TooltipType GetTooltipType();
    /*0x1171c80*/ void SetData(TableData.TableData_Skillbase _base, TableData.TableData_Skilllv _skillLv, int _level, System.Action<bool> _onClickCallback);
}

class TooltipData_SkillClose : TooltipData_Skill
{
    /*0x1171e64*/ TooltipData_SkillClose();
    /*0x1171e5c*/ TooltipType GetTooltipType();
}

class TooltipData_TitleDesc : TooltipDataBase
{
    /*0x18*/ string title;
    /*0x20*/ string desc;
    /*0x28*/ System.Collections.Generic.List<string> paramList;
    /*0x30*/ bool isLocalKey;

    /*0x1171efc*/ TooltipData_TitleDesc();
    /*0x1171e68*/ TooltipType GetTooltipType();
    /*0x1171e70*/ void SetData(string _title, string _desc, string[] _pram);
    /*0x1171eec*/ void SetData(string _title, string _desc, bool _is_local_key);
}

class TooltipData_Unit : TooltipDataBase
{
    /*0x18*/ int <actorID>k__BackingField;
    /*0x20*/ TableData.TableData_Unitbase <unitBase>k__BackingField;
    /*0x28*/ int <unitLevel>k__BackingField;

    /*0x1171f68*/ TooltipData_Unit();
    /*0x1171f0c*/ int get_actorID();
    /*0x1171f14*/ void set_actorID(int value);
    /*0x1171f1c*/ TableData.TableData_Unitbase get_unitBase();
    /*0x1171f24*/ void set_unitBase(TableData.TableData_Unitbase value);
    /*0x1171f2c*/ int get_unitLevel();
    /*0x1171f34*/ void set_unitLevel(int value);
    /*0x1171f3c*/ TooltipType GetTooltipType();
    /*0x1171f44*/ void SetData(TableData.TableData_Unitbase _script, int _level);
}

class TooltipData_UnitList : TooltipDataBase
{
    /*0x18*/ System.Collections.Generic.List<TableData.TableData_Unitbase> <unitList>k__BackingField;

    /*0x1171f90*/ TooltipData_UnitList();
    /*0x1171f70*/ System.Collections.Generic.List<TableData.TableData_Unitbase> get_unitList();
    /*0x1171f78*/ void set_unitList(System.Collections.Generic.List<TableData.TableData_Unitbase> value);
    /*0x1171f80*/ TooltipType GetTooltipType();
    /*0x1171f88*/ void SetData(System.Collections.Generic.List<TableData.TableData_Unitbase> _script);
}

enum TooltipType
{
    Unknown = 0,
    Description = 1,
    TitleDescription = 2,
    Actor = 3,
    Equip = 4,
    Item = 5,
    Skill = 6,
    SkillClose = 7,
    Faction = 8,
    FactionHelp = 9,
    IconDescription = 10,
    Guild = 11,
    UnitList = 12,
    Percent = 13,
}

class TooltipLocalString : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Text[] tooltipTextArray;
    /*0x20*/ float sizeHight;
    /*0x24*/ float correctionHight;
    /*0x28*/ LocaleLanguageType[] correctionArray;
    /*0x30*/ UnityEngine.RectTransform rectTransform;
    /*0x38*/ TooltipLocalType _tooltipType;

    /*0x1172528*/ TooltipLocalString();
    /*0x1171f98*/ void Awake();
    /*0x1172030*/ void Init(TooltipLocalType _type, string[] _text);
    /*0x1172168*/ void Align(UnityEngine.Vector2 _start_pos);
    /*0x1172438*/ float GetTempHight();
    /*0x1172508*/ bool IsTextArray();
    /*0x11722f4*/ void SetTextSize(UnityEngine.UI.Text _text_ui, bool _isTitle, ref float _height);
}

class TooltipPercentGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_desc;
    /*0x20*/ LocalizeString m_percent;

    /*0x11726a0*/ TooltipPercentGroup();
    /*0x1172530*/ void Init(string desc, float percent);
}

enum TooltipAlignType
{
    None = 0,
    Top = 1,
    Left = 2,
    Right = 4,
    Bottom = 8,
}

class TooltipTargetUI : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler
{
    static /*0x0*/ bool _isShow;
    static /*0x8*/ TooltipUIBase _curTooltipUI;
    static /*0x10*/ TooltipTargetUI _curTooltipTarget;
    /*0x18*/ bool useTooltip;
    /*0x19*/ bool isHide;
    /*0x1c*/ UnityEngine.Vector2 tooltipOffset;
    /*0x24*/ TooltipAlignType alignType1;
    /*0x28*/ TooltipAlignType alignType2;
    /*0x2c*/ ButtonSound m_openSound;
    /*0x30*/ UnityEngine.Vector2 pressPosition;
    /*0x38*/ TooltipDataBase _tooltipData;
    /*0x40*/ System.Collections.IEnumerator m_ieShowTimer;

    static /*0x11738a4*/ TooltipTargetUI();
    static /*0x11726a8*/ bool get_isCurTooltipTarget();
    static /*0x1172748*/ TooltipUIBase ShowTooltipUI(TooltipTargetUI _target, UnityEngine.Vector2 _press_pos, TooltipAlignType _align1, TooltipAlignType _align2);
    static /*0x1172d5c*/ void SetPosition(TooltipTargetUI _target, UnityEngine.Vector2 _press_pos, UnityEngine.RectTransform _tooltip_transform, TooltipAlignType _align1, TooltipAlignType _align2);
    static /*0x1173110*/ void TouchHideTooltipUI();
    static /*0x1172a80*/ void HideTooltipUI();
    static /*0x1172fe4*/ TooltipAlignType GetAlignType(TooltipTargetUI _target, UnityEngine.RectTransform _tooltip_transform, int _width, int _height);
    static /*0x11730c0*/ UnityEngine.Vector2 GetAlignPos(TooltipAlignType _align_type, UnityEngine.Vector2 _default_pos, UnityEngine.Vector2 _tooltip_size, TooltipTargetUI _target);
    /*0x1173894*/ TooltipTargetUI();
    /*0x1173198*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11731c0*/ void OpenTooltip(UnityEngine.Vector2 _pressPosition);
    /*0x11734d0*/ System.Collections.IEnumerator OnProcess_DelayTime(float _delayTime);
    /*0x1173418*/ System.Collections.IEnumerator OnProcess_Delay();
    /*0x1173544*/ void OnDisable();
    /*0x1173484*/ void StartTimer();
    /*0x1173620*/ System.Collections.IEnumerator CoMouseDownTimer();
    /*0x117368c*/ bool IsChildrenObject();
    /*0x1173828*/ UnityEngine.GameObject GetCurrentEventSystemObject();

    class <OnProcess_DelayTime>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _delayTime;
        /*0x24*/ float <_delay_time>5__2;

        /*0xcd1e28*/ <OnProcess_DelayTime>d__22(int <>1__state);
        /*0xcd1e54*/ void System.IDisposable.Dispose();
        /*0xcd1e58*/ bool MoveNext();
        /*0xcd1edc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1ee4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1f24*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Delay>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TooltipTargetUI <>4__this;

        /*0xcd1c20*/ <OnProcess_Delay>d__23(int <>1__state);
        /*0xcd1c4c*/ void System.IDisposable.Dispose();
        /*0xcd1c50*/ bool MoveNext();
        /*0xcd1dd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1de0*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1e20*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMouseDownTimer>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TooltipTargetUI <>4__this;

        /*0xcd1978*/ <CoMouseDownTimer>d__26(int <>1__state);
        /*0xcd19a4*/ void System.IDisposable.Dispose();
        /*0xcd19a8*/ bool MoveNext();
        /*0xcd1bd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1bd8*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1c18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TooltipUIBase : UnityEngine.MonoBehaviour
{
    static float BOTTOM_OFFSET = 20;
    static float TEXT_LINE_OFFSET = 10;
    /*0x18*/ UnityEngine.RectTransform <tooltipTransform>k__BackingField;
    /*0x20*/ UnityEngine.CanvasGroup <canvasGroup>k__BackingField;
    /*0x28*/ UnityEngine.Vector2 <defaultSize>k__BackingField;
    /*0x30*/ bool <isValidData>k__BackingField;

    /*0x1173fa4*/ TooltipUIBase();
    TooltipType GetTooltipType();
    void Initialize();
    void SetData(TooltipDataBase _input);
    void Clear();
    void Align();
    /*0x1173c78*/ UnityEngine.RectTransform get_tooltipTransform();
    /*0x1173c80*/ void set_tooltipTransform(UnityEngine.RectTransform value);
    /*0x1173c88*/ UnityEngine.CanvasGroup get_canvasGroup();
    /*0x1173c90*/ void set_canvasGroup(UnityEngine.CanvasGroup value);
    /*0x1173c98*/ UnityEngine.Vector2 get_defaultSize();
    /*0x1173ca0*/ void set_defaultSize(UnityEngine.Vector2 value);
    /*0x1173ca8*/ bool get_isValidData();
    /*0x1173cb0*/ void set_isValidData(bool value);
    /*0x1172bc4*/ bool InitData(TooltipDataBase _input);
    /*0x1172cec*/ void Show(bool IsDefalut);
    /*0x1173d74*/ void Hide();
    /*0x11733fc*/ void SetAlpha(float _alpha);
    /*0x1173cbc*/ bool IsValidData(TooltipDataBase _data);
    /*0x1173df0*/ void Awake();
    /*0x1173e90*/ void SetFont(UnityEngine.UI.Text _textTarget);
    void OnHide();
    void OnShow();
}

class TooltipUI_Desc : TooltipUIBase
{
    /*0x38*/ LocalizeString desc;
    /*0x40*/ UnityEngine.RectTransform m_DescTransform;

    /*0x11741a0*/ TooltipUI_Desc();
    /*0x1173fac*/ TooltipType GetTooltipType();
    /*0x1173fb4*/ void Initialize();
    /*0x1173fb8*/ void SetData(TooltipDataBase _input);
    /*0x1174128*/ void Clear();
    /*0x117412c*/ void Align();
    /*0x117407c*/ void SetDesc(string _key, string[] _params);
    /*0x1174198*/ void OnHide();
    /*0x117419c*/ void OnShow();
}

class TooltipUI_Equipment : TooltipUIBase
{
    /*0x38*/ ItemSelectSlot equipImage;
    /*0x40*/ LocalizeString equipName;
    /*0x48*/ LocalizeString desc;

    /*0x1174760*/ TooltipUI_Equipment();
    /*0x11741a8*/ TooltipType GetTooltipType();
    /*0x11741b0*/ void Initialize();
    /*0x11741b4*/ void SetData(TooltipDataBase _input);
    /*0x117458c*/ void Clear();
    /*0x117461c*/ void Align();
    /*0x1174260*/ void SetImage(int _equip_index);
    /*0x117430c*/ void SetName(string _key);
    /*0x117444c*/ void SetDesc(string _key);
    /*0x1174758*/ void OnHide();
    /*0x117475c*/ void OnShow();
}

class TooltipUI_Faction : TooltipUIBase
{
    static int _nMinFactionCount = 1;
    static int _nMaxFactionCount = 4;
    static int _nLightFaction = 6;
    static int _nDarkFaction = 5;
    /*0x38*/ AtlasImage m_GeneralBaseFaction;
    /*0x40*/ AtlasImage m_GeneralUpperFaction;
    /*0x48*/ AtlasImage m_GeneralLowerFaction;
    /*0x50*/ AtlasImage m_GeneralRightArrow;
    /*0x58*/ AtlasImage m_GeneralLeftArrow;
    /*0x60*/ AtlasImage m_SpecialLeftFaction;
    /*0x68*/ AtlasImage m_SpecialRightFaction;
    /*0x70*/ AtlasImage m_SpecialLeftArrow;
    /*0x78*/ AtlasImage m_SpecialRightArrow;
    /*0x80*/ LocalizeString m_FactionText;
    /*0x88*/ UnityEngine.GameObject m_GeneralFactionGroup;
    /*0x90*/ UnityEngine.GameObject m_SpecialFactionGroup;

    /*0x1174c18*/ TooltipUI_Faction();
    /*0x1174768*/ TooltipType GetTooltipType();
    /*0x1174770*/ void Align();
    /*0x1174774*/ void Clear();
    /*0x1174778*/ void Initialize();
    /*0x117477c*/ void SetData(TooltipDataBase _input);
    /*0x1174c10*/ void OnHide();
    /*0x1174c14*/ void OnShow();
}

class TooltipUI_FactionHelp : TooltipUIBase
{
    /*0x38*/ LocalizeString m_DescText;

    /*0x1174d74*/ TooltipUI_FactionHelp();
    /*0x1174c20*/ TooltipType GetTooltipType();
    /*0x1174c28*/ void Align();
    /*0x1174c2c*/ void Clear();
    /*0x1174c30*/ void Initialize();
    /*0x1174c34*/ void SetData(TooltipDataBase _input);
    /*0x1174d6c*/ void OnHide();
    /*0x1174d70*/ void OnShow();
}

class TooltipUI_Guild : TooltipUIBase
{
    /*0x38*/ LocalizeString title;
    /*0x40*/ LocalizeString desc;
    /*0x48*/ UnityEngine.RectTransform m_GridTransform;

    /*0x1175c00*/ TooltipUI_Guild();
    /*0x1174d7c*/ TooltipType GetTooltipType();
    /*0x1174d84*/ void Initialize();
    /*0x1174d88*/ void SetData(TooltipDataBase _input);
    /*0x1175a6c*/ void Clear();
    /*0x1175a70*/ void Align();
    /*0x1174e28*/ void SetTooltipTitle(TooltipData_Guild.GUILD_TOOLTIP_TYPE guildTooltipType);
    /*0x1174fec*/ void SetTooltipDesc(TooltipData_Guild.GUILD_TOOLTIP_TYPE guildTooltipType);
    /*0x1175bf8*/ void OnHide();
    /*0x1175bfc*/ void OnShow();
}

class TooltipUI_IconDesc : TooltipUIBase
{
    /*0x38*/ AtlasImage m_Icon;
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ LocalizeString m_Desc;
    /*0x50*/ UnityEngine.RectTransform m_IconRect;
    /*0x58*/ UnityEngine.RectTransform m_GridRect;

    /*0x1176098*/ TooltipUI_IconDesc();
    /*0x1175c08*/ TooltipType GetTooltipType();
    /*0x1175c10*/ void Align();
    /*0x1175de4*/ void Clear();
    /*0x1175de8*/ void Initialize();
    /*0x1175dec*/ void SetData(TooltipDataBase _input);
    /*0x1176090*/ void OnHide();
    /*0x1176094*/ void OnShow();
}

class TooltipUI_Item : TooltipUIBase
{
    /*0x38*/ LocalizeString itemName;
    /*0x40*/ LocalizeString desc;

    /*0x1176588*/ TooltipUI_Item();
    /*0x11760a0*/ TooltipType GetTooltipType();
    /*0x11760a8*/ void Initialize();
    /*0x11760ac*/ void SetData(TooltipDataBase _input);
    /*0x11763cc*/ void Clear();
    /*0x11763d0*/ void Align();
    /*0x117614c*/ void SetName(string _key);
    /*0x117628c*/ void SetDesc(string _key);
    /*0x1176580*/ void OnHide();
    /*0x1176584*/ void OnShow();
}

class TooltipUI_Percent : TooltipUIBase
{
    /*0x38*/ TooltipPercentGroup[] m_groups;

    /*0x11767b4*/ TooltipUI_Percent();
    /*0x1176590*/ TooltipType GetTooltipType();
    /*0x1176598*/ void Initialize();
    /*0x117659c*/ void SetData(TooltipDataBase _input);
    /*0x11767a4*/ void Clear();
    /*0x11767a8*/ void Align();
    /*0x11767ac*/ void OnHide();
    /*0x11767b0*/ void OnShow();
}

enum TooltipLocalType
{
    Nomal = 0,
    Grade = 1,
    Cooltime = 2,
    Affect1 = 3,
    Affect2 = 4,
    AcquireDesc = 5,
    AwakeSkillUpgrade = 6,
}

class TooltipUI_Skill : TooltipUIBase
{
    /*0x38*/ LocalizeString m_SkillName;
    /*0x40*/ LocalizeString m_SkillDesc;
    /*0x48*/ LocalizeString m_SkillType;
    /*0x50*/ System.Collections.Generic.List<LocalizeString> m_liSkillBonusDesc;
    /*0x58*/ UnityEngine.RectTransform m_GridTransform;
    /*0x60*/ TooltipData_Skill _data;

    /*0x117799c*/ TooltipUI_Skill();
    /*0x11767bc*/ TooltipType GetTooltipType();
    /*0x11767c4*/ void Align();
    /*0x1176950*/ void Clear();
    /*0x1176954*/ void Initialize();
    /*0x1176958*/ void OnHide();
    /*0x1176a08*/ void OnShow();
    /*0x1176ab8*/ void SetData(TooltipDataBase _input);
}

class TooltipUI_SkillClose : TooltipUI_Skill
{
    /*0x11779ac*/ TooltipUI_SkillClose();
    /*0x11779a4*/ TooltipType GetTooltipType();
}

class TooltipUI_TitleDesc : TooltipUIBase
{
    /*0x38*/ LocalizeString title;
    /*0x40*/ LocalizeString desc;
    /*0x48*/ UnityEngine.RectTransform m_GridTransform;

    /*0x1177e58*/ TooltipUI_TitleDesc();
    /*0x11779b4*/ TooltipType GetTooltipType();
    /*0x11779bc*/ void Initialize();
    /*0x11779c0*/ void SetData(TooltipDataBase _input);
    /*0x1177cc4*/ void Clear();
    /*0x1177cc8*/ void Align();
    /*0x1177a98*/ void SetTitle(string _key);
    /*0x1177bd8*/ void SetDesc(string _key, bool _is_local_key, string[] _params);
    /*0x1177e50*/ void OnHide();
    /*0x1177e54*/ void OnShow();
}

class TooltipUI_Unit : TooltipUIBase
{
    /*0x38*/ LocalizeString unitName;
    /*0x40*/ LocalizeString unitDesc;
    /*0x48*/ UnityEngine.RectTransform gridTransform;

    /*0x117895c*/ TooltipUI_Unit();
    /*0x1177e60*/ TooltipType GetTooltipType();
    /*0x1177e68*/ void Initialize();
    /*0x1177e6c*/ void SetData(TooltipDataBase _input);
    /*0x11787c4*/ void Clear();
    /*0x11787c8*/ void Align();
    /*0x1178628*/ void SetLocalize(string _name, string _desc);
    /*0x1178954*/ void OnHide();
    /*0x1178958*/ void OnShow();
}

class TooltipUI_UnitList : TooltipUIBase
{
    /*0x38*/ ScrollContent_HeroSlotInventory m_ScrollContent;
    /*0x40*/ TooltipData_UnitList data;

    /*0x1178b40*/ TooltipUI_UnitList();
    /*0x1178964*/ TooltipType GetTooltipType();
    /*0x117896c*/ void Initialize();
    /*0x1178970*/ void SetData(TooltipDataBase _input);
    /*0x1178a9c*/ void Clear();
    /*0x1178aa0*/ void Align();
    /*0x1178aa4*/ void OnHide();
    /*0x1178aa8*/ void OnShow();
    /*0x1178aac*/ void HandlerScrollContent(int nIndex, HeroSlotInventory slot);
}

class TopStatusWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_ExperienceBar;
    /*0x20*/ LocalizeString m_LevelNickname;
    /*0x28*/ LocalizeString m_TotalPower;
    /*0x30*/ LocalizeString m_Gold;
    /*0x38*/ LocalizeString m_Cash;
    /*0x40*/ PlayerProfileSlot m_customProfileSlot;

    /*0x117d7f0*/ TopStatusWindow();
    /*0x117cedc*/ PTShare.Define.SCurrency get_m_curCurreny();
    /*0x117cf5c*/ UserData get_m_curUserData();
    /*0x117cfec*/ SProfile get_m_curProfile();
    /*0x117d074*/ void Start();
    /*0x117d248*/ void OnEnable();
    /*0x117d420*/ void OnDisable();
    /*0x117d078*/ void InitalizeWindow();
    /*0x117d578*/ void SetLevelNickname(string _level, string _nickname);
    /*0x117d630*/ void SetExperience(long _exp, long _maxexp);
    /*0x117d61c*/ void SetTotalPower(string _total);
    /*0x117d6cc*/ void SetGold(string _gold);
    /*0x117d6e0*/ void SetCash(string _cash);
    /*0x117d6f4*/ void LoadProfile();
    /*0x117d7ec*/ void HandlerChagneEvent();
}

class GuildWarFormationSelectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_Background;
    /*0x20*/ UnityEngine.GameObject m_goSelect;
    /*0x28*/ UnityEngine.GameObject m_goShade;
    /*0x30*/ UnityEngine.GameObject m_goLock;
    /*0x38*/ LocalizeString m_Title;
    /*0x40*/ System.Collections.Generic.List<GuildWarFormationDotEntity> m_liDotEntity;
    /*0x48*/ GuildWarFormationSelectPopup m_FormationSelectPopup;
    /*0x50*/ int m_nFormationIndex;
    /*0x58*/ System.Collections.Generic.Dictionary<int, int> dicCurrentTacticPosition;

    /*0x1116f38*/ GuildWarFormationSelectEntity();
    /*0x1116648*/ void Init(GuildWarFormationSelectPopup _FormationPopup, int _nFormationIndex, int _nCurrentFormationIndex);
    /*0x1116b44*/ void OnClickFormation(bool bSelectScroll);
    /*0x1116fb0*/ void <OnClickFormation>b__10_0(bool ok);
    /*0x1117084*/ void <OnClickFormation>b__10_1();
}

class ScrollContent_GuildWarFormationSelect : ScrollContent<GuildWarFormationSelectEntity>
{
    /*0xe19cdc*/ ScrollContent_GuildWarFormationSelect();
}

class FurnitureDismissSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_slot;
    /*0x20*/ UnityEngine.GameObject m_default;
    /*0x28*/ UnityEngine.GameObject m_select;
    /*0x30*/ PTShare.Define.SHousingObj m_data;
    /*0x38*/ System.Action<int> m_callBack;

    /*0x10a8440*/ FurnitureDismissSlot();
    /*0x10a82e0*/ void InitSlot(PTShare.Define.SHousingObj data, bool isSelect, System.Action<int> callBack);
    /*0x10a83d4*/ void OnClick();
}

class FurnitureDismissWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_notice;
    /*0x20*/ UnityEngine.GameObject m_notice2;
    /*0x28*/ UnityEngine.GameObject m_scrollParent;
    /*0x30*/ ScrollContent_FurnitureDismissSlot m_selectScrollContent;
    /*0x38*/ ScrollContent_FurnitureDismissSlot m_ownScrollContent;
    /*0x40*/ UnityEngine.UI.Button m_dismissBtn;
    /*0x48*/ LocalizeString m_selectBtnText;
    /*0x50*/ LocalizeString m_furnitureCountText;
    /*0x58*/ TabGroup m_tabGroup;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_furnitureList;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_selectList;
    /*0x70*/ FurnitureDismissWindow.TAB_TYPE m_currTab;

    /*0x10a9358*/ FurnitureDismissWindow();
    /*0x10a8448*/ void OnDisable();
    /*0x10a84f4*/ void InitializeWindow();
    /*0x10a8b64*/ void InitializeScroll();
    /*0x10a85fc*/ void UpdateData();
    /*0x10a8c5c*/ void UpdateScroll();
    /*0x10a8cdc*/ void HandleSelectContent(int nIndex, FurnitureDismissSlot slot);
    /*0x10a8de8*/ void HandleOwnContent(int nIndex, FurnitureDismissSlot slot);
    /*0x10a88d4*/ void RefreshPage();
    /*0x10a854c*/ void BindEvent();
    /*0x10a844c*/ void RemoveEvent();
    /*0x10a8f34*/ void OnClick_Store();
    /*0x10a8f38*/ void OnClickAll();
    /*0x10a903c*/ void OnClick_Dismiss();
    /*0x10a90ec*/ void OnClick_Help();
    /*0x10a9190*/ void HandleOnSelect(int objId);
    /*0x10a9328*/ void HandleChangeTab(int index);

    enum TAB_TYPE
    {
        ALL = 0,
        A = 1,
        S = 2,
        SS = 3,
        SSS = 4,
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ int objId;

        /*0x10a3410*/ <>c__DisplayClass27_0();
        /*0x10a3418*/ bool <HandleOnSelect>b__0(PTShare.Define.SHousingObj f);
    }
}

class HeroDismissSlot : HeroSlot
{
    /*0x48*/ UnityEngine.GameObject m_defaultSlot;
    /*0x50*/ UnityEngine.GameObject m_cacheSlot;

    /*0xf30e54*/ HeroDismissSlot();
    /*0xf30d9c*/ void Init(PTShare.Define.SHero _hero, System.Action<PTShare.Define.SHero> _callback);
}

class HeroDismissSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_notice;
    /*0x20*/ UnityEngine.GameObject m_scrollParent;
    /*0x28*/ ScrollContent_HeroDismissSlot m_scrollContent;
    /*0x30*/ UnityEngine.UI.Button m_dismissBtn;
    /*0x38*/ HeroInventoryPage_Dismiss m_dismissPage;
    /*0x40*/ LocalizeString m_selectBtnText;

    /*0xf318dc*/ HeroDismissSubWindow();
    /*0xf30eb8*/ System.Collections.Generic.List<PTShare.Define.SHero> get_selectList();
    /*0xf30ed4*/ void InitializeWindow();
    /*0xf3115c*/ void InitializeScroll();
    /*0xf31214*/ void SetCountScroll();
    /*0xf3127c*/ void HandlerScrollContent(int nIndex, HeroDismissSlot slot);
    /*0xf30fe8*/ void RefreshPage();
    /*0xf313d8*/ void OnClick_Store();
    /*0xf313dc*/ void OnClick_Dismiss();
    /*0xf31484*/ void OnClick_AutoDismiss();
    /*0xf315e0*/ void OnClick_SelectAll();
    /*0xf3174c*/ void OnClick_Help();
    /*0xf317f0*/ void OnSelectHeroSlotCallback();
    /*0xf31814*/ void OnReleaseMaterialHeroSlotCallback(PTShare.Define.SHero hero);
    /*0xf318e4*/ void <OnClick_SelectAll>b__16_0(System.Collections.Generic.List<PropertyType> response);

    class <>c
    {
        static /*0x0*/ HeroDismissSubWindow.<> <>9;
        static /*0x8*/ System.Action<System.Collections.Generic.List<int>> <>9__15_0;

        static /*0x10584d0*/ <>c();
        /*0x1058530*/ <>c();
        /*0x1058538*/ void <OnClick_AutoDismiss>b__15_0(System.Collections.Generic.List<int> response);
    }
}

class HeroResetSubWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlotInventory m_HeroMaterialSlot;
    /*0x20*/ UnityEngine.UI.Button m_ResetButton;
    /*0x28*/ LocalizeString m_Price;
    /*0x30*/ LocalizeString m_ResetBtnText;
    /*0x38*/ LocalizeString m_ResetNotice;
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ AtlasImage m_PriceIcon;
    /*0x50*/ HeroInventoryPage_Reset m_HeroInvenPage;
    /*0x58*/ ItemRewardGroup m_RewardGroup;
    /*0x60*/ UnityEngine.GameObject m_Parent;
    /*0x68*/ HeroWagonType eWagonType;

    /*0x122d820*/ HeroResetSubWindow();
    /*0x122c83c*/ void OnEnable();
    /*0x122c930*/ void OnDisable();
    /*0x122c9ec*/ void InitializeWindow(HeroWagonType eType);
    /*0x122d07c*/ void SetTitle(HeroWagonType eType);
    /*0x122cc1c*/ void SetLocalizeButton(HeroWagonType eType);
    /*0x122cddc*/ void SetResetNotice(HeroWagonType eType);
    /*0x122cf9c*/ void SetPrice(HeroWagonType eType);
    /*0x122d23c*/ void SetActiveButton(bool _enable);
    /*0x122d25c*/ void SetActiveParent(bool _enable);
    /*0x122d274*/ void SetActiveResetNotice(bool _enable);
    /*0x122ca54*/ void SetView();
    /*0x122d2bc*/ void OnClick_Help();
    /*0x122d3bc*/ void OnClick_Reset();
    /*0x122d674*/ void HeroInventoryPage_Reset_OnSelectSlotEvent(bool _enable, PTShare.Define.SHero _hero);
    /*0x122d7b4*/ void CallbackHeroMaterialSlot(PTShare.Define.SHero _hero);
    /*0x122d7e8*/ void CallbackResetButton(int _heroid);
    /*0x122d828*/ void <OnClick_Reset>b__23_0(bool result);
}

class ResultPopup_WorldBoss : ResultPopupBase
{
    /*0x78*/ ItemRewardGroup m_exchagneItemGroup;
    /*0x80*/ UnityEngine.GameObject m_victory;
    /*0x88*/ LocalizeString m_totalDamageText;
    /*0x90*/ UnityEngine.UI.Slider m_slider;
    /*0x98*/ UnityEngine.GameObject[] m_loseObjects;
    /*0xa0*/ UnityEngine.GameObject[] m_winObjects;

    /*0x11a64b0*/ ResultPopup_WorldBoss();
    /*0x11a57b4*/ bool get_IsWin();
    /*0x11a5834*/ void OnCreate();
    /*0x11a5838*/ void OnEnter();
    /*0x11a583c*/ void OnStart();
    /*0x11a5840*/ void OnFinish();
    /*0x11a5844*/ void OnLeave();
    /*0x11a5848*/ void OnDelete();
    /*0x11a584c*/ void OnExit();
    /*0x11a58f0*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a6038*/ void InitializeWinReplay();
    /*0x11a5f64*/ void UpdateSubMenu();
    /*0x11a636c*/ void InitializeLose();
    /*0x11a6378*/ void OnNext();
    /*0x11a63f8*/ void OnRetry();
    /*0x11a644c*/ void OnShowGraph();
}

class WorldBossBanner : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_bannerObject;
    /*0x20*/ UnityEngine.GameObject m_bannerL;
    /*0x28*/ UnityEngine.GameObject m_bannerCenter;
    /*0x30*/ UnityEngine.GameObject m_bannerR;
    /*0x38*/ UnityEngine.CanvasGroup m_canvasGroup;

    /*0xe0a6e4*/ WorldBossBanner();
    /*0xe0a378*/ void OnEnable();
    /*0xe0a37c*/ void InitBanner();
}

class WorldBossEnable : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_target;
    /*0x20*/ ParticleBase m_particle;

    /*0xe0ab44*/ WorldBossEnable();
    /*0xe0a6ec*/ void OnEnable();
    /*0xe0a898*/ void OnDisable();
    /*0xe0a6f0*/ void Init();
    /*0xe0a98c*/ void BindEvent();
    /*0xe0a89c*/ void RemoveEvent();
}

class WorldBossIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_iconObject;
    /*0x20*/ WorldBossUICharacter m_character;
    /*0x28*/ LocalizeString m_grade;
    /*0x30*/ bool m_closeIcon;
    /*0x38*/ RedDotWorldBoss m_reddot;
    /*0x40*/ int m_index;

    /*0xe0b388*/ WorldBossIcon();
    /*0xe0ab4c*/ void InitIcon(int index, bool IsMove);
    /*0xe0ad74*/ void SetLocalPosition();
    /*0xe0adac*/ void SetCharacter();
    /*0xe0aea0*/ void SetGrade();
    /*0xe0afec*/ void OnClick();
    /*0xe0b304*/ void OnClickMission();
}

class WorldBossIconParent : UnityEngine.MonoBehaviour
{
    /*0x18*/ WorldBossIcon m_worldBossButton;
    /*0x20*/ WorldBossIcon m_worldBossMissionButton;
    /*0x28*/ System.Collections.Generic.List<WorldBossIcon> m_iconList;

    /*0xe0ba18*/ WorldBossIconParent();
    /*0xe0b390*/ void OnEnable();
    /*0xe0b680*/ void OnDisable();
    /*0xe0b394*/ void Init();
    /*0xe0b774*/ void BindEvent();
    /*0xe0b684*/ void RemoveEvent();
    /*0xe0b86c*/ void HideAll();
}

class WorldBossInfo : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSkillSlot[] m_bossSkillSlots;
    /*0x20*/ LocalizeString m_bossLvText;
    /*0x28*/ LocalizeString m_bossNameText;
    /*0x30*/ LocalizeString m_bossInfoText;
    /*0x38*/ LocalizeString m_bossDamageText;
    /*0x40*/ LocalizeString m_bossCountText;
    /*0x48*/ UnityEngine.UI.Slider m_bossDamageSlider;
    /*0x50*/ ScrollContent_StageReward m_scrollContent;
    /*0x58*/ UnityEngine.UI.ScrollRect m_scrollInfoText;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_clearRewardList;

    /*0xe0cfac*/ WorldBossInfo();
    /*0xe0ba90*/ void OnDisable();
    /*0xe0bb68*/ void InitInfo();
    /*0xe0c588*/ void SetSkillList(int level);
    /*0xe0caac*/ void SetBossCount();
    /*0xe0cdec*/ int GetSkillLevel(TableData.TableData_Skilllv skillData, int tier);
    /*0xe0ccd4*/ void SetScrollContent();
    /*0xe0c3f4*/ void BindEvent();
    /*0xe0ba94*/ void RemoveEvent();
    /*0xe0cef0*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0xe0cd80*/ System.Collections.IEnumerator CoLateRefresh();

    class <>c
    {
        static /*0x0*/ WorldBossInfo.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__12_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__12_1;

        static /*0xd8d2ac*/ <>c();
        /*0xd8d30c*/ <>c();
        /*0xd8d314*/ int <SetSkillList>b__12_0(TableData.TableData_Skillbase x);
        /*0xd8d32c*/ TableData.TableData_Skillbase <SetSkillList>b__12_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
    }

    class <CoLateRefresh>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldBossInfo <>4__this;

        /*0xd8d378*/ <CoLateRefresh>d__19(int <>1__state);
        /*0xd8d3a4*/ void System.IDisposable.Dispose();
        /*0xd8d3a8*/ bool MoveNext();
        /*0xd8d468*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8d470*/ void System.Collections.IEnumerator.Reset();
        /*0xd8d4b0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldBossMissionPopup : GuiBase
{
    /*0x40*/ ScrollContent_TriggerMissionEntity m_scrollContent;
    /*0x48*/ int m_bossIndex;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> m_worldBossMissionList;

    /*0xe0e644*/ WorldBossMissionPopup();
    /*0xe0ded0*/ void OnCreate();
    /*0xe0ded4*/ void OnDelete();
    /*0xe0ded8*/ void OnEnter();
    /*0xe0dedc*/ void OnExit();
    /*0xe0df58*/ void OnFinish();
    /*0xe0df5c*/ void OnLeave();
    /*0xe0e0e0*/ void OnStart();
    /*0xe0e0e4*/ void InitPopup(int index);
    /*0xe0e218*/ void BindEvent();
    /*0xe0df60*/ void RemoveEvent();
    /*0xe0e3a0*/ void HandleRefresh();
    /*0xe0e3ac*/ void HandleScrollContent(int index, TriggerMissionEntity obj);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ WorldBossMissionPopup <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action <>9__2;

        /*0xd8dcc4*/ <>c__DisplayClass14_0();
        /*0xd8dccc*/ bool <HandleScrollContent>b__0(TableData.TableData_Worldbossmission data);
        /*0xd8ddbc*/ void <HandleScrollContent>b__1();
        /*0xd8df04*/ void <HandleScrollContent>b__2();
    }
}

class WorldBossPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_missionReddot;
    /*0x48*/ WorldBossInfo m_worldBossInfo;
    /*0x50*/ WorldBossUICharacter m_worldBossCharacter;
    /*0x58*/ LocalizeString m_exprireTimeText;
    /*0x60*/ UnityEngine.UI.Button m_battleButton;
    /*0x68*/ HeroManageTooltip m_tooltip;
    /*0x70*/ RedDotWorldBoss m_reddot;
    /*0x78*/ UnityEngine.Coroutine m_timer;

    /*0xe0f1c0*/ WorldBossPopup();
    /*0xe0e944*/ void OnCreate();
    /*0xe0e948*/ void OnDelete();
    /*0xe0e94c*/ void OnEnter();
    /*0xe0e950*/ void OnFinish();
    /*0xe0e954*/ void OnLeave();
    /*0xe0e958*/ void OnStart();
    /*0xe0e95c*/ void OnExit();
    /*0xe0e998*/ void InitPopup();
    /*0xe0ed60*/ void SetReddot(bool enable);
    /*0xe0ebb4*/ void SetButton();
    /*0xe0ecf4*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xe0ee04*/ void OnClickBoss();
    /*0xe0eebc*/ void OnClickHelp();
    /*0xe0ef60*/ void OnClickMission();
    /*0xe0f040*/ void OnClickBattle();

    class <CoUpdateTimer>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WorldBossPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;
        /*0x30*/ System.TimeSpan <timeSpan>5__3;
        /*0x38*/ System.TimeSpan <sec>5__4;

        /*0xd8e0cc*/ <CoUpdateTimer>d__18(int <>1__state);
        /*0xd8e0f8*/ void System.IDisposable.Dispose();
        /*0xd8e0fc*/ bool MoveNext();
        /*0xd8e3d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8e3e0*/ void System.Collections.IEnumerator.Reset();
        /*0xd8e420*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldBossUICharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_character;

    /*0xe0f9b4*/ WorldBossUICharacter();
    /*0xe0f4c8*/ void Init(int index, bool slotHide);
    /*0xe0afa4*/ void InitRequireShadow(int index, bool slotHide);
    /*0xe0f988*/ void InitShadow(int index, bool slotHide);
    /*0xe0f7b4*/ void SetFreeze(bool enable);
    /*0xe0f500*/ void SetBoss();
    /*0xe0f6e8*/ void HideSlot();
    /*0xe0f848*/ void SetBossShadow(bool isRequireCheck);
}

class WorldMapCloser : UnityEngine.MonoBehaviour
{
    /*0x18*/ int m_nChapterIndex;
    /*0x20*/ UnityEngine.UI.Image m_ParentImage;
    /*0x28*/ ShaderChanger_Dissolve m_Dissolve;

    /*0xe0fcb4*/ WorldMapCloser();
    /*0xe0f9bc*/ void Awake();
    /*0xe0fa54*/ void InitializeObject(int nCurrentChapter);
    /*0xe0fb8c*/ int GetChapter();
    /*0xe0fb94*/ void SetDissolve(System.Action onComplete);
    /*0xe0fc2c*/ System.Collections.IEnumerator CoDissolve(float _fSpeed, System.Action onComplete);

    class <CoDissolve>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fSpeed;
        /*0x28*/ WorldMapCloser <>4__this;
        /*0x30*/ System.Action onComplete;
        /*0x38*/ float <_fTime>5__2;

        /*0xd8e428*/ <CoDissolve>d__7(int <>1__state);
        /*0xd8e454*/ void System.IDisposable.Dispose();
        /*0xd8e458*/ bool MoveNext();
        /*0xd8e55c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8e564*/ void System.Collections.IEnumerator.Reset();
        /*0xd8e5a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AnimationTool
{
    static /*0x0*/ AnimationTool.AnimationShowType m_eStartType;
    static /*0x4*/ AnimationTool.AnimationShowType m_eEndType;
    static /*0x8*/ Spine.Unity.SkeletonGraphic m_Character;
    static /*0x10*/ bool[] m_arrSkillEnable;
    static /*0x18*/ AnimationTool.AnimationShowType m_eCurAnimation;
    static /*0x1c*/ int m_nAnimLoopCount;
    static /*0x20*/ int m_nCurAnimLoopCount;
    static /*0x24*/ bool m_bAnimComplete;

    static /*0xee02cc*/ AnimationTool();
    static /*0xedf5f0*/ void LinkCharacter(Spine.Unity.SkeletonGraphic _character, int _nUnitID);
    static /*0xedfa20*/ void CutLink();
    static /*0xedfba4*/ bool SetAnimation(AnimationTool.AnimationShowType _eAnimShowType, bool _bSameTypeIgnore, int _nLoopCount);
    static /*0xedfd68*/ bool ChangeAnimation(AnimationTool.AnimationShowType _eAnimShowType, int _nLoopCount);
    static /*0xee0164*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);

    enum AnimationShowType
    {
        IDLE = 0,
        MOVE = 1,
        WIN = 2,
        SKILL_SLOT0 = 3,
        SKILL_SLOT1 = 4,
        SKILL_SLOT2 = 5,
        SKILL_SLOT3 = 6,
        SKILL_SLOT4 = 7,
        RANDOM = 8,
    }
}

class AspectRatio
{
    static /*0xf76f9c*/ UnityEngine.Vector2 GetAspectRatio(int x, int y);
    static /*0xf77098*/ UnityEngine.Vector2 GetAspectRatio(UnityEngine.Vector2 xy);
    static /*0xf77184*/ UnityEngine.Vector2 GetAspectRatio(int x, int y, bool debug);
    static /*0xf77280*/ UnityEngine.Vector2 GetAspectRatio(UnityEngine.Vector2 xy, bool debug);
}

class CSVReader
{
    static /*0x0*/ string SPLIT_RE;
    static /*0x8*/ string LINE_SPLIT_RE;

    static /*0x1340d3c*/ CSVReader();
    static /*0x1340188*/ System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> Read(string file, bool useType);
    static /*0x1340230*/ System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> ReadString(string _data, bool useType);
    static /*0x13407a0*/ bool IsEmptyValues(string[] values);
    static /*0x1340834*/ System.Collections.Generic.Dictionary<string, string> ReadDic(UnityEngine.TextAsset data);
    static /*0x1340aa4*/ System.ValueTuple<System.String[], System.String[]> ReadColumnWithType(string _path);
    /*0x1340d34*/ CSVReader();
}

class CheatKeyWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.InputField m_InputField;
    /*0x20*/ UnityEngine.GameObject m_WindowParent;
    /*0x28*/ CheatMoveButton m_ButtonParent;
    /*0x30*/ System.Collections.Generic.List<UnityEngine.UI.InputField> m_liCheatField;
    /*0x38*/ System.Collections.Generic.List<LocalizeString> m_liCheatString;
    /*0x40*/ UnityEngine.UI.ScrollRect m_ScrollRect;
    /*0x48*/ UnityEngine.Transform m_HideParent;
    /*0x50*/ System.Collections.IEnumerator m_iePressUpdate;
    /*0x58*/ int m_nCount;
    /*0x60*/ System.Text.StringBuilder m_StringBuilder;

    /*0x10de9f0*/ CheatKeyWindow();
    /*0x10da818*/ UserData get_curUserData();
    /*0x10da8a8*/ void Awake();
    /*0x10daa5c*/ void OnEnable();
    /*0x10dae68*/ void OnDisable();
    /*0x10daff4*/ void OnExit();
    /*0x10db014*/ void InitializePopup();
    /*0x10db0b0*/ void OnConfirm();
    /*0x10de0f4*/ void HandlerResultCheat(string _result);
    /*0x10de85c*/ void HandlerLoginSuccessChecker();
    /*0x10de978*/ void HandleSubmitMessage(string _msg);
    /*0x10de90c*/ System.Collections.IEnumerator CoUpdate();
    /*0x10de7f0*/ System.Collections.IEnumerator CoScrollUpdate();
    /*0x10db068*/ bool IsAdminNotExit();

    class <CoUpdate>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CheatKeyWindow <>4__this;

        /*0x106ed98*/ <CoUpdate>d__21(int <>1__state);
        /*0x106edc4*/ void System.IDisposable.Dispose();
        /*0x106edc8*/ bool MoveNext();
        /*0x106eefc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106ef04*/ void System.Collections.IEnumerator.Reset();
        /*0x106ef44*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoScrollUpdate>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CheatKeyWindow <>4__this;

        /*0x106ec6c*/ <CoScrollUpdate>d__22(int <>1__state);
        /*0x106ec98*/ void System.IDisposable.Dispose();
        /*0x106ec9c*/ bool MoveNext();
        /*0x106ed48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106ed50*/ void System.Collections.IEnumerator.Reset();
        /*0x106ed90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CheatMoveButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEndDragHandler
{
    /*0x18*/ UnityEngine.RectTransform _transform;
    /*0x20*/ UnityEngine.RectTransform _canvasTransform;
    /*0x28*/ bool m_bIsDrag;
    /*0x30*/ System.Action OnClickEvent;

    /*0x10ded80*/ CheatMoveButton();
    /*0x10dea58*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10dea64*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10debc0*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10debc8*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x10debe4*/ void Update();
}

class CacheWaitForSeconds : UnityEngine.CustomYieldInstruction
{
    /*0x10*/ float defaultTime;
    /*0x14*/ float time;

    /*0x1345908*/ CacheWaitForSeconds(float _time);
    /*0x13458ac*/ void set_SetTime(float value);
    /*0x13458b4*/ bool get_keepWaiting();
}

class CutSceneEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Sprite backgroundSprite;
    /*0x20*/ UnityEngine.Sprite characterSprite;
    /*0x28*/ Spine.Unity.SkeletonAnimation skeletonAnimation;
    /*0x30*/ string m_baseSkin;
    /*0x38*/ string m_backgroundBone;
    /*0x40*/ string m_characterBone;
    /*0x48*/ string m_offsetBone;
    /*0x50*/ CutSceneData cutData;

    /*0xf4ecec*/ CutSceneEntity();
    /*0xf4e638*/ Spine.Unity.SkeletonAnimation get_GetSkeleton();
    /*0xf4e690*/ void Initialize();
    /*0xf4ec54*/ void Initialize(int _nUnitID);
    /*0xf4ec90*/ void SetIndex(TableData.TableData_Unitbase _unit);
    /*0xf4ecac*/ void SetBackground(UnityEngine.Sprite _sprite);
    /*0xf4ecb4*/ void SetCharacter(UnityEngine.Sprite _sprite);
    /*0xf4ecbc*/ void SetCharacterOffsetX(float _x);
    /*0xf4eccc*/ void SetCharacterOffsetY(float _y);
    /*0xf4ecc4*/ void SetCharacterOffset(UnityEngine.Vector2 _vec);
    /*0xf4ecd4*/ void SetCharacterScaleX(float _x);
    /*0xf4ece4*/ void SetCharacterScaleY(float _y);
    /*0xf4ecdc*/ void SetCharacterScale(UnityEngine.Vector2 _vec);
    /*0xf4eae0*/ void SetAttachment(int _matIndex, Spine.Skin _skin, Spine.Skin.SkinEntry _entry, UnityEngine.Sprite _sprite);
    /*0xf4ebbc*/ void RefreshBone();
}

struct CutSceneData
{
    /*0x10*/ int id;
    /*0x14*/ float offestX;
    /*0x18*/ float offestY;
    /*0x1c*/ float scaleX;
    /*0x20*/ float scaleY;

    /*0xa85438*/ CutSceneData(int id);
}

class CutSceneLoader
{
    static /*0xf4ed44*/ CutSceneData LoadCutSceneData(int _index);
    /*0xf4efdc*/ CutSceneLoader();
}

class Debug
{
    static /*0x0*/ Debug.DebugType CurrentDebugType;
    static /*0x4*/ int DebugModeMaxTextLine;
    static /*0x8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<Debug.DebugInfo>> dicDebugLogList;

    static /*0xf5e618*/ Debug();
    static /*0xf5ddd8*/ void Break();
    static /*0xf5de34*/ void Log(object message);
    static /*0xf5df58*/ void Log(object message, UnityEngine.Object context);
    static /*0xf5e06c*/ void LogWarning(object message);
    static /*0xf5e190*/ void LogWarning(object message, UnityEngine.Object context);
    static /*0xf5e204*/ void LogError(object message);
    static /*0xf5e328*/ void LogError(object message, UnityEngine.Object context);
    static /*0xf5e39c*/ void DrawLine(UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color, float duration, bool depthTest);
    static /*0xf5e010*/ bool IsEnable();
    static /*0xf5e4b0*/ System.Collections.Generic.List<Debug.DebugInfo> GetCurrentDebugInfoList();
    static /*0xf5e550*/ void CleanDebugList(Debug.DebugType _eDebugType);

    enum DebugType
    {
        None = 0,
        Normal = 1,
        Warning = 2,
        Error = 3,
        Frame = 4,
        Memory = 5,
        End = 6,
    }

    struct DebugInfo
    {
        /*0x10*/ System.DateTime time;
        /*0x18*/ string text;

        /*0xa8a208*/ DebugInfo(string text);
    }
}

class DefineAccount
{
    static /*0x0*/ int MAX_FASTIDLE;

    static /*0xf5f854*/ DefineAccount();
    /*0xf5f84c*/ DefineAccount();
}

class DefineArtifact
{
    static int MAX_ARTIFACT_LEVEL = 5;

    /*0xf5f8a4*/ DefineArtifact();
}

struct BundleManifest
{
    /*0x10*/ string name;
    /*0x18*/ long bytes;
    /*0x20*/ string hash;
    /*0x28*/ string[] dependency;
    /*0x30*/ bool streamingasset;
    /*0x38*/ string path;

    /*0xa92e98*/ BundleManifest(string name, long bytes, string hash, string[] dependency, bool streamingasset);
    /*0xa92ea4*/ bool IsExistDependency();
}

class LoadedAssetBundle
{
    /*0x10*/ UnityEngine.AssetBundle assetBundle;
    /*0x18*/ int referencedCount;
    /*0x20*/ UsingAssetData usingData;
    /*0x28*/ string Name;

    /*0xfb1d08*/ LoadedAssetBundle(string n, UnityEngine.AssetBundle _asset_bundle);
    /*0xfb1d4c*/ void Unload();
    /*0xfb1ddc*/ void Finalize();
}

class UsingAssetData
{
    /*0x10*/ int refCount;
    /*0x18*/ string assetBundleName;
    /*0x20*/ LoadedAssetBundle loadedAssetBundle;

    /*0x10c9150*/ UsingAssetData();
}

enum AssetBundleSceneType
{
    None = 0,
    Battle = 1,
    Main = 2,
    Maze = 3,
    Dungeon = 4,
}

enum AssetBundleType
{
    Unknown = 0,
    GameBinData = 1,
    Localize = 2,
    Effect = 3,
    Scene = 4,
    Font = 5,
    Bgm = 6,
    Sfx_Unit = 7,
    Sfx_UI = 9,
    Sfx_MiniContents = 108,
    MapData = 8,
    Texture_Book = 10,
    Texture_Illust = 11,
    Texture_Illust_Monster = 49,
    Texture_Ingame = 12,
    Texture_Main = 13,
    Texture_Arena = 72,
    Texture_Dungeon = 105,
    Texture_Relation = 107,
    Texture_Minigame = 110,
    Prefab_Popup = 14,
    ui = 15,
    SkelectonData = 16,
    Atlas = 17,
    Chat = 18,
    Prefab_UI_Hero = 19,
    Prefab_UNIT = 20,
    Prefab_Projectile = 21,
    Prefab_Particle = 22,
    Prefab_Particle_BG = 100,
    Prefab_Particle_UI = 23,
    Prefab_WorldUI = 24,
    Prefab_UI_Tooltip = 25,
    Prefeb_UI_Arena = 50,
    Prefeb_UI_Battle = 51,
    Prefeb_UI_Debug = 52,
    Prefeb_UI_Equipment = 53,
    Prefeb_UI_Friend = 54,
    Prefeb_UI_Getcha = 55,
    Prefeb_UI_Graph = 56,
    Prefeb_UI_Guild = 57,
    Prefeb_UI_Inventory = 58,
    Prefeb_UI_Main = 59,
    Prefeb_UI_Maze = 60,
    Prefeb_UI_Notice = 61,
    Prefeb_UI_Option = 62,
    Prefeb_UI_Profile = 63,
    Prefeb_UI_Quest = 64,
    Prefeb_UI_Rankboard = 65,
    Prefeb_UI_Reddot = 66,
    Prefeb_UI_Resonating = 67,
    Prefeb_UI_Stage = 68,
    Prefeb_UI_Status = 69,
    Prefeb_UI_Tower = 70,
    Prefeb_UI_Troop = 71,
    Prefab_UI_Bounty = 101,
    Prefab_UI_Rungame = 102,
    Prefab_UI_Race = 103,
    Prefab_UI_Dungeon = 104,
    Prefab_UI_Relation = 106,
    Prefab_UI_Artifact = 109,
    Prefab_UI_Ads = 116,
    Tutorial = 26,
    AnimSyncData = 27,
    Voice_Tutorial = 28,
    Voice_UnitSkill = 29,
    Voice_UnitGeneral = 30,
    Prefab_UI_Common = 31,
    Prefab_UI_Mail = 32,
    Texture_HeroInfomation = 33,
    Prefab_UI_Campain = 34,
    ScriptableData = 35,
    Texture_Chapter = 36,
    Texture_Shop = 40,
    Texture_Event = 48,
    Texture_Housing = 115,
    Spine_UI_01 = 37,
    Spine_UI_02 = 42,
    Spine_UI_03 = 73,
    Spine_UI_04 = 111,
    Spine_UI_05 = 112,
    Spine_UI_ILLUST = 44,
    Prefab_CashShop = 38,
    LoadPage = 39,
    Prefab_ContentShop = 41,
    Prefab_UI_BattleBackground = 43,
    Prefab_UI_Event = 45,
    Prefab_UI_Pve = 113,
    Prefab_UI_Housing = 114,
    Skill_Animation = 46,
    CutSceneData = 47,
    End = 117,
    None = 0,
}

class ResExtension
{
    static string ASSET_BUNDLE = "pak";
    static string PREFAB = "prefab";
    static string SCENE = "unity";
    static string DB_SCRIPT = "bytes";
    static string UI_SPRITE = "png";
    static string SYNC_DATA = "bytes";
    static string JSON_DATA = "json";
    static string PROJECTILE_DATA = "bytes";
    static string SOUND_EFFECT = "wav";
    static string LOCALIZE_FILE = "bytes";
    static string TXT_DATA = "txt";
    static string BGM = "ogg";
    static string VOICE = "ogg";
    static string FONT = "ttf";
    static string ASSET = "asset";
    static string CSV_DATA = "csv";
    static string ATLAS = "spriteatlas";

    static /*0xf24b80*/ string GetAudioResExtension(AssetBundleType _eAssetBundleType);
    /*0xf24c04*/ ResExtension();
}

class AssetBundlePath
{
    static string ASSET_BUNDLE_PATH = "Pub_Assets/";
    static string ROOT_PATH = "Assets/Pub_Assets/";
    static string ANIM_SYNC_DATA = "Arts/Animation/SyncTool";
    static string ASSET_BUNDLE_SCENE_PATH = "Scenes";
    static string UNIT = "Arts/Animation/Spine";
    static string LOCALIZE = "Localize";
    static string FONT = "Font";
    static string SOUND_PATH = "Sounds/";
    static string BGM = "Sounds/BGM";
    static string SFX_UNIT = "Sounds/SFX/UnitSound";
    static string SFX_UI = "Sounds/SFX/UISound";
    static string SFX_MINICONTENTS = "Sounds/SFX/MiniContentsSound";
    static string VOICE_UNITSKILL = "Sounds/VOICE/UnitSkill";
    static string VOICE_UNITGENERAL = "Sounds/VOICE/UnitGeneral";
    static string VOICE_TUTORIAL = "Sounds/VOICE/Tutorial";
    static string SEQUENCE = "Sequence";
    static string MAPDATA = "MapData";
    static string ATLAS = "Atlas";
    static string TEXTURE_BOOK = "Texture/Hero/Book";
    static string TEXTURE_ILLUST = "Texture/Hero/Illust";
    static string TEXTURE_ILLUST_MONSTER = "Texture/Hero/illustMonster";
    static string TEXTURE_HEROINFOMATION = "Texture/Hero/Infomation";
    static string TEXTURE_INGAME = "Texture/Ingame";
    static string TEXTURE_MAIN = "Texture/Main";
    static string TEXTURE_CHAPTER = "Texture/Chapter";
    static string TEXTURE_SHOP = "Texture/Shop";
    static string TEXTURE_EVENT = "Texture/Event";
    static string TEXTURE_ARENA = "Texture/Arena";
    static string TEXTURE_DUNGEON = "Texture/Dungeon";
    static string TEXTURE_RELATION = "Texture/Relation";
    static string TEXTURE_MINIGAME = "Texture/Minigame";
    static string TEXTURE_HOUSING = "Texture/Housing";
    static string PREFAB_POPUP = "Prefabs/UI/Popup";
    static string PREFAB_UI_CAMPAIN = "Prefabs/UI/Campain";
    static string PREFAB_UI_COMMON = "Prefabs/UI/Common";
    static string PREFAB_UI_CHAT = "Prefabs/UI/Chatting";
    static string PREFAB_UI_HERO = "Prefabs/UI/Hero";
    static string PREFAB_UI_MAIL = "Prefabs/UI/Mail";
    static string PREFAB_UI_TOOLTIP = "Prefabs/UI/Tooltip";
    static string PREFEB_UI_ARENA = "Prefabs/UI/Arena";
    static string PREFEB_UI_BATTLE = "Prefabs/UI/Battle";
    static string PREFEB_UI_DEBUG = "Prefabs/UI/Debug";
    static string PREFEB_UI_EQUIPMENT = "Prefabs/UI/Equipment";
    static string PREFEB_UI_FRIEND = "Prefabs/UI/Friend";
    static string PREFEB_UI_GETCHA = "Prefabs/UI/Getcha";
    static string PREFEB_UI_GRAPH = "Prefabs/UI/Graph";
    static string PREFEB_UI_GUILD = "Prefabs/UI/Guild";
    static string PREFEB_UI_INVENTORY = "Prefabs/UI/Inventory";
    static string PREFEB_UI_MAIN = "Prefabs/UI/Main";
    static string PREFEB_UI_MAZE = "Prefabs/UI/Maze";
    static string PREFEB_UI_NOTICE = "Prefabs/UI/Notice";
    static string PREFEB_UI_OPTION = "Prefabs/UI/Option";
    static string PREFEB_UI_PROFILE = "Prefabs/UI/Profile";
    static string PREFEB_UI_QUEST = "Prefabs/UI/Quest";
    static string PREFEB_UI_RANKBOARD = "Prefabs/UI/RankBoard";
    static string PREFEB_UI_REDDOT = "Prefabs/UI/RedDot";
    static string PREFEB_UI_RESONATING = "Prefabs/UI/Resonating";
    static string PREFEB_UI_STAGE = "Prefabs/UI/Stage";
    static string PREFEB_UI_STATUS = "Prefabs/UI/Status";
    static string PREFEB_UI_TOWER = "Prefabs/UI/Tower";
    static string PREFEB_UI_TROOP = "Prefabs/UI/Troop";
    static string PREFEB_UI_BOUNTY = "Prefabs/UI/Bounty";
    static string PREFAB_UI_RUNGAME = "Prefabs/UI/Rungame";
    static string PREFAB_UI_RACE = "Prefabs/UI/Race";
    static string PREFAB_UI_DUNGEON = "Prefabs/UI/Dungeon";
    static string PREFAB_UI_RELATION = "Prefabs/UI/Relation";
    static string PREFAB_UI_ARTIFACT = "Prefabs/UI/Artifact";
    static string PREFAB_UI_ADS = "Prefabs/UI/Ads";
    static string TUTORIAL = "Tutorial";
    static string PREFAB_INGAME_UNIT = "Prefabs/InGame/Unit";
    static string PREFAB_INGAME_PROJECTILE = "Prefabs/InGame/Projectile";
    static string PREFAB_INGAME_WORLDUI = "Prefabs/InGame/WorldUI";
    static string PREFAB_INGAME_PARTICLE = "Arts/Effect/effect";
    static string PREFAB_INGAME_PARTICLE_BG = "Arts/Effect/effect_bg";
    static string PREFAB_INGAME_PARTICLE_UI = "Arts/Effect/effect_ui";
    static string SPINE_UI_01 = "Arts/ui_01";
    static string SPINE_UI_02 = "Arts/ui_02";
    static string SPINE_UI_03 = "Arts/ui_03";
    static string SPINE_UI_04 = "Arts/ui_04";
    static string SPINE_UI_05 = "Arts/ui_05";
    static string Spine_UI_ILLUST = "Arts/ui_illust";
    static string SCRIPTABLEDATA = "ScriptableData";
    static string PREFAB_UI_CASHSHOP = "Prefabs/UI/CashShop";
    static string PREFAB_UI_CONTENTSHOP = "Prefabs/UI/ContentShop";
    static string PREFAB_UI_BATTLEBACKGROUND = "Prefabs/UI/BattleBackground";
    static string PREFAB_UI_EVENT = "Prefabs/UI/Event";
    static string PREFAB_UI_PVE = "Prefabs/UI/Pve";
    static string PREFAB_UI_Housing = "Prefabs/UI/Housing";
    static string LOAD_PAGE = "Prefabs/LoadPage";
    static string SKILLANIMATION = "Arts/Animation/SkillAnimation";
    static string CUTSCENEDATA = "CutSceneData";

    static /*0xf78994*/ string GetPath(AssetBundleSceneType type);
    static /*0xf78480*/ string GetPath(AssetBundleType type);
    /*0xf7a3c8*/ AssetBundlePath();
}

class DefineAudio
{
    static float DEFAULT_BGM = 0.75;
    static float DEFAULT_SFX = 1;
    static string BGM_LOBBY = "Lobby";
    static string BGM_BATTLE = "Battle";
    static string BGM_GUILDBATTLE = "GuildWar";
    static string BGM_TUTORIAL = "Tutorial";
    static string BGM_DUNGEON = "Dungeon";
    static string BGM_RACE = "Race";
    static string BGM_WORLDBOSS = "WorldBoss";
    static string BGM_PVERANK = "PvERanking";
    static string BGM_STAGE_CLEAR = "Stage_Clear";
    static string GUILDBATTLE_DOUBLEKILL = "DoubleKill";
    static string GUILDBATTLE_TRIPLEKILL = "TripleKill";
    static string GUILDBATTLE_QUADRAKILL = "QuadraKill";
    static string GUILDBATTLE_PENTAKILL = "PentaKill";
    static string GUILDBATTLE_LEGENDARYKILL = "LegendaryKill";
    static string BREEZE_ULT_SONG = "50_ULT_SONG";
    static string WORLDBOSS_1_APPEAR_1 = "WORLDBOSS_1_APPEAR_1";
    static string WORLDBOSS_1_APPEAR_PRODUCTION_1 = "WORLDBOSS_1_APPEAR_PRODUCTION_1";
    static string WORLDBOSS_1_DEFEAT_1 = "WORLDBOSS_1_DEFEAT_1";
    static string WORLDBOSS_1_WIN_1 = "WORLDBOSS_1_WIN_1";
    static string WORLDBOSS_1_ULT_1 = "WORLDBOSS_1_ULT_1";
    static string WORLDBOSS_ULT_NIDDLE_EXP = "Hit_Expls";
    static /*0x0*/ int THEME_INDEX;

    static /*0xf5fbe8*/ DefineAudio();
    static /*0xf5f8ac*/ int GetThemeIndex();
    static /*0xf5fb2c*/ string GetBGM();
    /*0xf5fbe0*/ DefineAudio();
}

class DefineCashShop
{
    static /*0x0*/ int PUMPKIN_CATEGORY_INDEX;
    static /*0x4*/ int ADVENCED_CATEGORY_INDEX;
    static /*0x8*/ int OWL_CATEGORY_INDEX;
    static /*0xc*/ int NONE_LIMIT;
    static /*0x10*/ int PurchaseBillingType;
    static /*0x18*/ string BANNER_RESET_TIME_TEXT_OBJECT_NAME;
    static /*0x20*/ string CASH_SHOP_PRODUCT_PREFAB;
    static /*0x28*/ string DAILY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x30*/ string DAILY_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x38*/ string WEEKLY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x40*/ string WEEKLY_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x48*/ string MONTHLY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x50*/ string BEGINNER_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x58*/ string MONTHLY_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x60*/ string CASH_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x68*/ string LIMITED_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x70*/ string LIMITED_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x78*/ string HERO_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x80*/ string HERO_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x88*/ string SUBSCRIPTION_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x90*/ string SUBSCRIPTION_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0x98*/ string PREMIUM_SUBSCRIPTION_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xa0*/ string PREMIUM_SUBSCRIPTION_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xa8*/ string PREMIUM_SUBSCRIPTION_SHOP_PACKAGE_BG_IMAGE_KEY2;
    static /*0xb0*/ string PREMIUM_SUBSCRIPTION_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY2;
    static /*0xb8*/ string GROW_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xc0*/ string GROW_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xc8*/ string SKEIN_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xd0*/ string SKEIN_GRAY_SHOP_PACKAGE_BG_IMAGE_KEY;
    static /*0xd8*/ string BANNER_DAILY_PREFAB;
    static /*0xe0*/ string BANNER_WEEKLY_PREFAB;
    static /*0xe8*/ string BANNER_MONTHRY_PREFAB;
    static /*0xf0*/ string BANNER_CASH_PREFAB;
    static /*0xf8*/ string BANNER_LIMITED_PREFAB;
    static /*0x100*/ string BANNER_HERO_PREFAB;
    static /*0x108*/ string BANNER_BEGINNER_PREFAB;
    static /*0x110*/ string BANNER_GROWTH_PREFAB;
    static /*0x118*/ string BANNER_SKEIN_PREFAB;
    static /*0x120*/ string BANNER_SKIN_PREFAB;
    static /*0x128*/ string BADGE_TYPE_ADD;
    static /*0x130*/ string PREMIUM_SUBSCRIPTION_SHOP_PACKAGE_ID;
    static /*0x138*/ System.Collections.Generic.Dictionary<DefineCashShop.CashShopTabType, string> EnableBGImageKeys;
    static /*0x140*/ System.Collections.Generic.Dictionary<DefineCashShop.CashShopTabType, string> DisableBGImageKeys;

    static /*0xf616b0*/ DefineCashShop();
    static /*0xf6011c*/ bool get_SHOW_VIP();
    static /*0xf60194*/ DefineCashShop.CashShopCategoryType ConvertTabTypeToCategoryType(DefineCashShop.CashShopTabType tabType);
    static /*0xf601b4*/ void Purchase(string packageId, System.Action<string, int, int> callBack, System.Action failedCallBack, string selectarg);
    static /*0xf603cc*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopdaily shopData);
    static /*0xf60508*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopweekly shopData);
    static /*0xf6062c*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopmonthly shopData);
    static /*0xf60750*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopstar shopData);
    static /*0xf608cc*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshophero shopData);
    static /*0xf609f0*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopsubscription shopData);
    static /*0xf60b1c*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshoplimit shopData);
    static /*0xf61244*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopbeginner shopData);
    static /*0xf61350*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopskinpiece shopData);
    static /*0xf614b8*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopskin shopData);
    static /*0xf61628*/ DefineCashShop.CashShopPackageData ConvertShopPackage(TableData.TableData_Cashshopquestreward shopData);
    static /*0xf61110*/ void <ConvertShopPackage>g__SetDateTime|60_1(ref System.DateTime start, ref System.DateTime end, TableData.TableData_Packagetime table);
    /*0xf616a8*/ DefineCashShop();

    enum CashShopCategoryType
    {
        Pumpkin = 0,
        Advenced = 1,
        Owl = 2,
        Skin = 3,
        Null = 4,
    }

    enum SpecialSellerType
    {
        COMMON = 0,
        SELECT = 1,
    }

    enum CashShopTabType
    {
        Daily = 0,
        Weekly = 1,
        Monthly = 2,
        Cash = 3,
        STAR = 3,
        Limited = 4,
        Subscription = 5,
        Hero = 6,
        Beginner = 7,
        Growth = 8,
        Special = 9,
        Skein = 10,
        Skin = 11,
        Null = 12,
    }

    enum CashShopDrawType
    {
        Draw1HN = 0,
        Draw1N = 1,
        Draw2N = 2,
        Draw3N = 3,
        Draw2L = 4,
        Draw3L = 5,
        DrawGrow1N = 6,
        Null = 7,
    }

    enum PRODUCT_TYPE
    {
        NORMAL = 0,
        FURNITURE = 1,
    }

    class CashShopProductItemData
    {
        /*0x10*/ string type;
        /*0x18*/ string key;
        /*0x20*/ int amount;

        /*0x107715c*/ CashShopProductItemData(string type, string key, int amount);
    }

    class CashShopPackageData
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ string FirstReset;
        /*0x60*/ int PurchaseCount;
        /*0x64*/ int PackagePrice;
        /*0x68*/ string PackageBadge;
        /*0x70*/ int BadgePercent;
        /*0x78*/ string FirstPackageProduct;
        /*0x80*/ string FirstBonusPackageProduct;
        /*0x88*/ string PackageProduct;
        /*0x90*/ string BonusPackageProduct;
        /*0x98*/ int SubscriptionDay;
        /*0xa0*/ string SubscriptionPoduct;
        /*0xa8*/ string PackageDesc;
        /*0xb0*/ string PackageSubDesc;
        /*0xb8*/ string PackageImg;
        /*0xc0*/ int VipPoint;
        /*0xc4*/ int SubScriptionLeftCount;
        /*0xc8*/ string Location;
        /*0xd0*/ string ProductType;
        /*0xd8*/ string BannerBGImageEnable;
        /*0xe0*/ string BannerBGImageDisable;

        /*0x1077154*/ CashShopPackageData();
    }

    class <>c__DisplayClass52_0
    {
        /*0x10*/ string packageId;
        /*0x18*/ System.Action<string, int, int> callBack;
        /*0x20*/ string packageKey;
        /*0x28*/ System.Action failedCallBack;
        /*0x30*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__2;
        /*0x38*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__5;
        /*0x40*/ System.Action<UnityEngine.Purchasing.Product> <>9__3;
        /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__4;

        /*0x10769ec*/ <>c__DisplayClass52_0();
        /*0x10769f4*/ void <Purchase>b__0(ServerProtocol.ResCashShopCheck _response);
        /*0x1076d44*/ void <Purchase>b__2(ServerProtocol.ResCashShopPurchase _resData);
        /*0x1076dc8*/ void <Purchase>b__3(UnityEngine.Purchasing.Product result);
        /*0x1077038*/ void <Purchase>b__5(ServerProtocol.ResCashShopPurchase res);
        /*0x10770b4*/ void <Purchase>b__4(PUBSDK.DefinePubSDK.PubProcessError failed);
        /*0x10770c8*/ void <Purchase>b__1(int _failed, string args);
    }

    class <>c
    {
        static /*0x0*/ DefineCashShop.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Packagetime> <>9__60_0;

        static /*0x1076964*/ <>c();
        /*0x10769c4*/ <>c();
        /*0x10769cc*/ bool <ConvertShopPackage>b__60_0(TableData.TableData_Packagetime f);
    }
}

class DefineColor
{
    /*0x11e40e0*/ DefineColor();
}

class DefineContentShop
{
    /*0x11e40e8*/ DefineContentShop();

    enum ContentShopCategoryType
    {
        NORMAL = 0,
        GUILD = 1,
        MAZE = 2,
        ARENA = 3,
        DISMISS = 4,
        PVERANKING = 5,
        NULL = 6,
    }

    enum ResetType
    {
        DAILY = 0,
        WEEKLY = 1,
        MONTHLY = 2,
        ROLLING = 3,
        FADE = 4,
        NULL = 5,
    }

    class ContentPackageShopData
    {
        /*0x10*/ int index;
        /*0x14*/ int subidx;
        /*0x18*/ int purchaseCount;
        /*0x1c*/ PTShare.Define.Currency payType;
        /*0x20*/ DefineContentShop.ContentShopCategoryType contentShopCategoryType;
        /*0x28*/ string packageBadge;
        /*0x30*/ int badgePercent;
        /*0x34*/ PTShare.Define.Wealth wealth;
        /*0x38*/ int tableId;
        /*0x3c*/ int itemCount;
        /*0x40*/ int price;

        /*0x1077200*/ ContentPackageShopData(int index, int subidx, int purchaseCount, PTShare.Define.Currency payType, DefineContentShop.ContentShopCategoryType contentShopCategoryType, string packageBadge, int badgePercent, PTShare.Define.Wealth wealth, int tableId, int itemCount, int price);
    }
}

class DefineEditorUtils
{
    static /*0x0*/ bool IsCampaignPathMakerOpened;

    static /*0x11e4218*/ DefineEditorUtils();
    /*0x11e4210*/ DefineEditorUtils();
}

enum FriendSortType
{
    NONE = 0,
    STATUS = 1,
    NICKNAME = 2,
}

class CFriendSort_ConnectionStatus : System.Collections.Generic.IComparer<PTShare.Define.SFriend>
{
    /*0x133df88*/ CFriendSort_ConnectionStatus();
    /*0x133df2c*/ int Compare(PTShare.Define.SFriend left, PTShare.Define.SFriend right);
}

class CFriendSort_Name : System.Collections.Generic.IComparer<PTShare.Define.SFriend>
{
    /*0x133dfbc*/ CFriendSort_Name();
    /*0x133df90*/ int Compare(PTShare.Define.SFriend left, PTShare.Define.SFriend right);
}

enum MeasureType
{
    None = 0,
    K = 1,
    M = 2,
    B = 3,
    T = 4,
    Q = 5,
    Max = 6,
}

enum PropertyType
{
    None = 0,
    Fire = 1,
    Wind = 2,
    Natrue = 3,
    Water = 4,
    Light = 5,
    Dark = 6,
    End = 7,
}

enum UnitGradeType
{
    None = 0,
    C = 1,
    B = 2,
    Bplus = 3,
    A = 4,
    Aplus = 5,
    S = 6,
    Splus = 7,
    SS = 8,
    SSplus = 9,
    SSS = 10,
    End = 11,
}

enum EquipSubType
{
    NONE = 0,
    ARTIFACT = 1,
    SIGNATURE = 2,
    HEAVYWEAPON = 3,
    LIGHTWEAPON = 4,
    STAFF = 5,
    HELM = 6,
    HOOD = 7,
    HAT = 8,
    HEAVYARMOR = 9,
    LIGHTARMOR = 10,
    CLOTHARMOR = 11,
    HEAVYBOOTS = 12,
    LIGHTBOOTS = 13,
    CLOTHBOOTS = 14,
    End = 15,
}

enum UnitClassType
{
    NONE = 0,
    KNIGHT = 1,
    MAGE = 2,
    SUPPORTER = 3,
    RANGER = 4,
    WARRIOR = 5,
}

enum UnitType
{
    NONE = 0,
    HERO = 1,
    MONSTER = 2,
    BOSS = 3,
    HERO_SKIN = 4,
}

enum UnitSkillLevel
{
    None = 0,
    SkillLV1 = 1,
    SkillLV2 = 2,
    SkillLV3 = 3,
    SkillLV4 = 4,
    End = 5,
}

enum OrganizationBuffType
{
    None = 0,
    Common3 = 1,
    Common2x3 = 2,
    Common4 = 3,
    Common5 = 4,
    Common3D1 = 5,
    Common3D2 = 6,
    Common4D1 = 7,
    Dark1 = 8,
    Dark2 = 9,
    Dark3 = 10,
    Dark4 = 11,
    Dark5 = 12,
}

enum PlayerType
{
    PLAYER = 0,
    FRIEND = 1,
}

enum PromoteType
{
    NONE = 0,
    SameUnit = 1,
    SameFaction = 2,
}

enum ItemRewardBoxType
{
    None = 0,
    Gold = 1,
    Cash = 2,
    HeroExp = 3,
    UserExp = 4,
    Dismiss = 5,
    Fship = 6,
    Crystal = 7,
    Item = 8,
    Equip = 9,
    Hero = 10,
    Skin = 11,
    HeroCard = 12,
    VipPoint = 13,
    MazeCoin = 14,
    RoyalExp = 15,
    BattleExp = 16,
    GuildCoin = 17,
    ArenaCoin = 18,
    WorldCoin = 19,
    DungeonCoin = 20,
    Artifact = 21,
    DungeonKey = 22,
    Frame = 23,
    PveCoin1 = 24,
    PveCoin2 = 25,
    HousingObj = 26,
    End = 27,
}

enum GachaFactionType
{
    None = 0,
    Random = 1,
    Rotation = 2,
    Select = 3,
    End = 4,
}

enum ItemInventoryType
{
    ALL = 0,
    EQUIPMENT = 1,
    ITEM = 2,
    FURNITURE = 3,
    End = 4,
}

enum ItemType
{
    None = 0,
    Consumable = 1,
    Choiceitem = 2,
    Choicehero = 3,
    Fixed = 4,
    Timer = 5,
    Random = 6,
    Recover = 7,
    Enhance = 8,
    SoulStone = 9,
    Equipment = 10,
    Artifact = 11,
    Event = 12,
    Ability = 13,
    End = 14,
}

enum QuestContentType
{
    None = 0,
    RankingBoard = 1,
    Quest = 2,
    End = 3,
}

enum QuestTargetType
{
    SERVER = 0,
    PERSONAL = 1,
}

enum QuestGroupType
{
    None = 0,
    STAGE = 1,
    TOWER = 2,
    FIRE = 3,
    WIND = 4,
    NATURE = 5,
    WATER = 6,
    DAILY = 7,
    WEEKLY = 8,
    MAIN = 9,
    DAILYEVENT = 10,
    HARDMODE = 11,
    End = 12,
}

enum QuestAdvanceType
{
    NONE = 0,
    ChapterClear = 1,
    PropertyPoint = 2,
    StageClear = 3,
    Gacha = 4,
    StageIdle = 5,
    StageTry = 6,
    HeroUpgrade = 7,
    EquipUpgrade = 8,
    Friend = 9,
    PrizeBoard = 10,
    Buy = 11,
    Arena = 12,
    HeroGet = 13,
    Level = 14,
    GetItem = 15,
    Move = 16,
    Labyrinth = 17,
    Resonance = 18,
    SpiritTowerClear = 19,
    HardMode = 20,
    End = 21,
}

enum ArenaType
{
    None = 0,
    Arena = 1,
    GuildWar = 2,
    End = 3,
}

enum ArenaRankType
{
    None = 0,
    Rank = 1,
    Range = 2,
    End = 3,
}

enum ProfileSkinType
{
    ICON = 0,
    PROFILE = 1,
    BACKGROUND = 2,
    GUILD = 3,
    End = 4,
}

enum TrainningStatusType
{
    Status = 0,
    Auto = 1,
}

interface IReward
{
    long get_Amount();
    void set_Amount(long value);
}

struct Rewards
{
    /*0x10*/ PTShare.Define.Wealth wealth;
    /*0x18*/ CURRENCY_Rewards Currency;
    /*0x28*/ ITEM_Rewards Item;
    /*0x38*/ HERO_Rewards Hero;
    /*0x50*/ EQUIP_Rewards Equip;
    /*0x60*/ USEREXP_Rewards UserExp;
    /*0x68*/ VIPPOINT_Rewards VipPoint;
    /*0x70*/ RESETPOINT_Rewards ResetPoint;
    /*0x80*/ ARTIFACT_Rewards Artifact;
    /*0x98*/ SKIN_Rewards Skin;
    /*0xa8*/ DUNGEONITEM_Rewards DungeonItem;
    /*0xb8*/ FRAME_Rewards Frame;
    /*0xc8*/ FURNITURE_Rewards Furniture;

    static /*0x11aa4e0*/ System.ValueTuple<Rewards, bool> op_Addition(Rewards a, Rewards b);
    static /*0x11aa748*/ Rewards op_Addition(Rewards a, int b);
    static /*0x11aa7c4*/ Rewards op_Multiply(Rewards a, int b);
    static /*0x11aa844*/ Rewards op_Multiply(Rewards a, long b);
}

struct ITEM_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Item tItem;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa82740*/ long get_Amount();
    /*0xa82748*/ void set_Amount(long value);
}

struct HERO_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Unitbase tUnit;
    /*0x18*/ long <Amount>k__BackingField;
    /*0x20*/ int grade;

    /*0xa8a788*/ long get_Amount();
    /*0xa8a790*/ void set_Amount(long value);
    /*0xa8a798*/ int get_Grade();
    /*0xa8a7c4*/ void set_Grade(int value);
}

struct EQUIP_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Equipment tEquipment;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xaa2c44*/ long get_Amount();
    /*0xaa2c4c*/ void set_Amount(long value);
}

struct CURRENCY_Rewards : IReward
{
    /*0x10*/ PTShare.Define.Currency CurrencyType;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa92ec4*/ long get_Amount();
    /*0xa92ecc*/ void set_Amount(long value);
}

struct USEREXP_Rewards : IReward
{
    /*0x10*/ long <Amount>k__BackingField;

    /*0xa8a31c*/ long get_Amount();
    /*0xa8a324*/ void set_Amount(long value);
}

struct VIPPOINT_Rewards : IReward
{
    /*0x10*/ long <Amount>k__BackingField;

    /*0xa8a530*/ long get_Amount();
    /*0xa8a538*/ void set_Amount(long value);
}

struct RESETPOINT_Rewards : IReward
{
    /*0x10*/ PTShare.Define.ResetPointType PointType;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8d03c*/ long get_Amount();
    /*0xa8d044*/ void set_Amount(long value);
}

struct ARTIFACT_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Artifact tArtifact;
    /*0x18*/ TableData.TableData_Equipment tEquipment;
    /*0x20*/ long <Amount>k__BackingField;

    /*0xa8d02c*/ long get_Amount();
    /*0xa8d034*/ void set_Amount(long value);
}

struct SKIN_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Skinbasic tSkin;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8e39c*/ long get_Amount();
    /*0xa8e3a4*/ void set_Amount(long value);
}

struct FRAME_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Profileskin tFrame;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8cd60*/ long get_Amount();
    /*0xa8cd68*/ void set_Amount(long value);
}

struct DUNGEONITEM_Rewards : IReward
{
    /*0x10*/ int id;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8544c*/ long get_Amount();
    /*0xa85454*/ void set_Amount(long value);
}

struct FURNITURE_Rewards : IReward
{
    /*0x10*/ TableData.TableData_Furniture tFurniture;
    /*0x18*/ long <Amount>k__BackingField;

    /*0xa8cdac*/ long get_Amount();
    /*0xa8cdb4*/ void set_Amount(long value);
}

struct SUnitPreview
{
    /*0x10*/ int tableID;
    /*0x14*/ int skinID;
    /*0x18*/ int grade;
    /*0x1c*/ float size;
    /*0x20*/ bool blind;

    /*0xa8e884*/ SUnitPreview(int _nTableID, int _nSkinID, int _nGrade, float _fSize, bool _bBlind);
    /*0xa8e89c*/ int GetSkinID();
    /*0xa8e8b4*/ void SetBlind(bool enable);
}

enum HEROGRADE
{
    NONE = 0,
    C = 1,
    B = 2,
    B_Plus = 3,
    A = 4,
    A_Plus = 5,
    S = 6,
    S_Plus = 7,
    SS = 8,
    SS_Plus = 9,
    SSS = 10,
    S1 = 11,
    S2 = 12,
    S3 = 13,
    S4 = 14,
    S5 = 15,
    S6 = 16,
    S7 = 17,
    S8 = 18,
    S9 = 19,
    S10 = 20,
    S11 = 21,
    S12 = 22,
    S13 = 23,
    S14 = 24,
    S15 = 25,
}

class RecommendPromote
{
    /*0x10*/ PTShare.Define.SHero MainHero;
    /*0x18*/ System.Collections.Generic.List<PTShare.Define.SHero> FeedHeros;
    /*0x20*/ bool isSelect;

    /*0x11c352c*/ RecommendPromote();
    /*0x11c33ac*/ RecommendPromote Clone();

    class <>c
    {
        static /*0x0*/ RecommendPromote.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SHero, PTShare.Define.SHero> <>9__3_0;

        static /*0xf981c0*/ <>c();
        /*0xf98220*/ <>c();
        /*0xf98228*/ PTShare.Define.SHero <Clone>b__3_0(PTShare.Define.SHero s);
    }
}

class UnitSpawnInfo
{
    /*0x10*/ int unitID;
    /*0x14*/ int skinID;
    /*0x18*/ int unitLV;
    /*0x1c*/ int unitGrade;
    /*0x20*/ int unitTier;
    /*0x24*/ int buffID;
    /*0x28*/ int signatureLV;
    /*0x2c*/ float hpRatio;
    /*0x30*/ float mpRatio;
    /*0x34*/ float multMPR;
    /*0x38*/ float addHP;
    /*0x3c*/ float addDMG;
    /*0x40*/ float size;
    /*0x44*/ bool isBoss;
    /*0x45*/ bool isBlind;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SEquip> equipList;
    /*0x50*/ System.Collections.Generic.List<int> abilityList;
    /*0x58*/ PTShare.Define.SArtifact artifact;

    static /*0x10c2dd0*/ System.Collections.Generic.List<PTShare.Define.SEquip> <.ctor>g__ChangeToSEquip|24_0(System.Collections.Generic.List<PTShare.Define.SVerifyEquip> _equips);
    /*0x10c249c*/ UnitSpawnInfo(int _unitID, int _unitLv, int _unitGrade, int _unitTier, int _signature, int _buffId, float _hpRatio, float _mpRatio, float _multiMRP, float _addhp, float _addDMG, float _size, bool _isBoss, PTShare.Define.SArtifact _artifact, System.Collections.Generic.List<PTShare.Define.SEquip> _lisSEquip);
    /*0x10c2658*/ UnitSpawnInfo(PTShare.Define.SHero _sHero);
    /*0x10c27f0*/ UnitSpawnInfo(PTShare.Define.SGuildWarHero _sHero);
    /*0x10c2988*/ UnitSpawnInfo(PTShare.Define.SBattleHero _sBattleHero, bool _bBlind);
    /*0x10c2b4c*/ UnitSpawnInfo(PTShare.Define.SVerifyHero _sVerifyHero);
    /*0x10c2f08*/ UnitSpawnInfo(PTShare.Define.SConditionHero _sConditionHero);
    /*0x10c2484*/ int get_GetSkinID();
    /*0x10c31b8*/ void SetEquip(System.Collections.Generic.List<PTShare.Define.SEquip> _lisEquip);
    /*0x10c32f4*/ PTShare.Define.SHero GetSHero();
}

class DefineHero
{
    static int MAX_HEROCOUNT = 5;
    static int MAX_HEROCOUNT_WORLDBOSS = 10;
    static int MAX_HEROCOUNT_PVE_RANKING = 10;
    static int MAX_HEROCOUNT_GUILDBATTLE_SLOT = 27;
    static int MAX_HEROCOUNT_GUILDBATTLE = 10;
    static int MAX_FACTION = 6;

    /*0x11e4edc*/ DefineHero();
}

class PromoteSHero
{
    /*0x10*/ bool isEnable;
    /*0x18*/ PTShare.Define.SHero sHero;

    /*0x1010d50*/ PromoteSHero(bool _isEnable, PTShare.Define.SHero _shero);
}

class HeroPromoteCompare_Sort : System.Collections.Generic.IComparer<PromoteSHero>
{
    /*0x1223594*/ HeroPromoteCompare_Sort();
    /*0x12234e4*/ int Compare(PromoteSHero left, PromoteSHero right);
}

class HeroInventory_Sort : System.Collections.Generic.IComparer<PTShare.Define.SHero>
{
    /*0xf36404*/ HeroInventory_Sort();
    /*0xf3d708*/ int Compare(PTShare.Define.SHero left, PTShare.Define.SHero right);
}

class ConditionHeroData
{
    /*0x10*/ PTShare.Define.SHero hero;
    /*0x18*/ int hpPercent;
    /*0x1c*/ int mpPercent;
    /*0x20*/ bool isMate;

    /*0x10e7a48*/ ConditionHeroData(PTShare.Define.SHero hero, int hpPercent, int mpPercent, bool isMate);
    /*0x10e7afc*/ ConditionHeroData(PTShare.Define.SMate mate, int factionId, int hpPercent, int mpPercent, bool isMate);
    /*0x10e77f4*/ float GetHpPercent100();
    /*0x10e7868*/ float GetMpPercent100();
    /*0x10e78dc*/ float GetHpPercent1();
    /*0x10e795c*/ float GetMpPercent1();
    /*0x10e79dc*/ void SetDefaultCondition();
}

enum LoadTaskType
{
    Login = 0,
    Initialize = 1,
    PatchInit = 2,
    PatchLoad = 3,
    System = 4,
    Scene = 5,
    Cache = 6,
    Prefab = 7,
    Custom = 8,
    DirectingProcess = 9,
    End = 10,
}

enum LocalizeCmdType
{
    text = 0,
    param = 1,
    key = 2,
    kr = 3,
    enter = 4,
    outline = 5,
    rank = 6,
    End = 7,
}

enum LocaleLanguageType
{
    Unknown = -1,
    English = 0,
    Korean = 1,
    Japanese = 2,
    ChineseSimplified = 3,
    ChineseTraditional = 4,
    French = 5,
    German = 6,
    Russian = 7,
    Thai = 8,
    Vietnamese = 9,
    Arabic = 10,
    Spanish = 11,
    Indonesian = 12,
    Italian = 13,
    Portuguese = 14,
    Global = 15,
    End = 16,
}

class CLanguageType
{
    static /*0x133f988*/ PTShare.Define.LanguageCode LanguageTypeToCountryCode(LocaleLanguageType type);
    static /*0x133f9ac*/ LocaleLanguageType CountryCodeToLanguageType(PTShare.Define.LanguageCode code);
    /*0x133f9cc*/ CLanguageType();
}

class LocalizeFileData
{
    /*0x10*/ string[] fontSymbol;

    /*0xfb2e74*/ LocalizeFileData();
}

class LocalizeCmd
{
    /*0x10*/ LocalizeCmdType <cmdType>k__BackingField;

    /*0xfb21b4*/ LocalizeCmd(LocalizeCmdType _cmd_type);
    /*0xfb21a4*/ LocalizeCmdType get_cmdType();
    /*0xfb21ac*/ void set_cmdType(LocalizeCmdType value);
    void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Text : LocalizeCmd
{
    /*0x18*/ string text;

    /*0xfb2988*/ LocalizeCmd_Text(string _text);
    /*0xfb29b8*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb29dc*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Param : LocalizeCmd
{
    /*0x14*/ int paramID;

    /*0xfb26b8*/ LocalizeCmd_Param(int _param_id);
    /*0xfb26e8*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb27f8*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Key : LocalizeCmd
{
    /*0x18*/ string key;

    /*0xfb2268*/ LocalizeCmd_Key(string _key);
    /*0xfb229c*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb23c0*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Kr : LocalizeCmd
{
    /*0x18*/ string param1;
    /*0x20*/ string param2;

    static /*0xfb24f8*/ bool hasJongSung(char charData);
    /*0xfb23c4*/ LocalizeCmd_Kr(string _param1, string _param2);
    /*0xfb2404*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb254c*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Enter : LocalizeCmd
{
    /*0xfb21e0*/ LocalizeCmd_Enter();
    /*0xfb220c*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb2264*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Outline : LocalizeCmd
{
    /*0x14*/ UnityEngine.Color outlineColor;

    /*0xfb2550*/ LocalizeCmd_Outline(UnityEngine.Color _color);
    /*0xfb25a4*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb25a8*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class LocalizeCmd_Rank : LocalizeCmd
{
    /*0x18*/ string[] paramsArray;

    /*0xfb27fc*/ LocalizeCmd_Rank(string[] _paramArray);
    /*0xfb2830*/ void Execute_AppendString(System.Text.StringBuilder _sb, string[] _arg);
    /*0xfb2984*/ void Execute_ComponentExtend(UnityEngine.UI.Text _target);
}

class DefineLocalize
{
    static /*0x0*/ string[] PROPERTYNAME;
    static /*0x8*/ string[] UNITGRADENAME;
    static /*0x10*/ string[] EQUIPGRADENAME;
    static /*0x18*/ string[] CURRENCYNAME;
    static /*0x20*/ string[] STATUSNAME;
    static /*0x28*/ string[] STATUSNAME_SHORT;
    static /*0x30*/ string[] HEROTYPENAME;
    static /*0x38*/ string[] EQUIPTYPENAME;
    static /*0x40*/ string[] PLATFORMNAME;
    static /*0x48*/ string[] ARENATIERNAME;

    static /*0x11e5804*/ DefineLocalize();
    /*0x11e57fc*/ DefineLocalize();
}

class DefineMenu
{
    static string MENU_CHATTING = "Chatting";
    static string MENU_CAMPAIN = "Campain";
    static string MENU_HERO = "Hero";

    /*0x11e7be8*/ DefineMenu();
}

class DefineObjectPool
{
    static AssetBundleType GENERIC_UI_POOL = 31;
    static AssetBundleType CAMPAIN_UI_POOL = 34;
    static AssetBundleType CHATTING_UI_POOL = 18;
    static AssetBundleType CASHSHOP_UI_POOL = 38;
    static string ITEM_BOX_BASE = "ItemBoxBase";
    static string ITEM_BOUNTY_BOX = "ItemBountyBox";
    static string ITEM_TABLE_BOX = "ItemTableRewardSlot";
    static string STAGEPOINT = "StagePoint";
    static string CHAPTERPOINT = "ChapterPoint";
    static string CURRENCYTOPENTITY = "CurrencyTopEntity";
    static string CHATCHANNELBUTTON = "ChatChannelButton";
    static string LEVELUPSTATUSUI = "LevelUpStatusUI";
    static string STATUSCHANGEUI = "StatusChangeUI";
    static /*0x0*/ string[] LEVELUPPARTICLE;

    static /*0x11e7bf8*/ DefineObjectPool();
    /*0x11e7bf0*/ DefineObjectPool();
}

enum ResonanceSortType
{
    NONE = 0,
    GRADE = 1,
    FACTION = 2,
}

class DefineResonance
{
    static int MaxCrystalProportionLevel = 10;

    /*0x11e7e0c*/ DefineResonance();
}

class DefineScene
{
    static string SCENETYPE = "scene";
    static string START_SERVERSELECT_SCENE = "StartServerSelect";
    static string SERVERSELECT_SCENE = "ServerSelect";
    static string RESTART_SCENE = "ReStart";
    static string LOGO_SCENE = "Logo";
    static string MAIN_SCENE = "Main";
    static string BATTLE_SCENE = "Battle";
    static string MAZE_SCENE = "Maze";
    static string DUNGEON_SCENE = "Dungeon";
    static string START_SYNCTOOL_SCENE = "StartSyncTool";
    static string SYNCTOOL_SCENE = "SyncTool";
    static string BATTLETOOL_SCENE = "BattleTool";
    static string CUT_SCENE = "CutScene";

    /*0x11e7e14*/ DefineScene();
}

enum ScreenEffectType
{
    Move = 0,
    Zoom = 1,
    Shake = 2,
    DarkChange = 3,
    ColorChange = 4,
    SpeedChange = 5,
    BackgroundEffect = 6,
    LookAtTarget = 7,
    ObjectShake = 8,
    MotionBlur = 9,
    Blur = 10,
    Bloom = 11,
    Grayscale = 12,
    Fisheye = 13,
    Vortex = 14,
    SunShafts = 15,
    Antialiasing = 16,
    Fade = 17,
    End = 18,
}

enum ScreenEffectFlag
{
    None = 0,
    IgnoreCameraMove = 1,
    IgnoreCameraZoom = 2,
    IgnoreCameraShake = 4,
    IgnoreDarkChange = 8,
    IgnoreColorChange = 16,
    IgnoreSpeedChange = 32,
    IgnoreBackgroundEffect = 64,
    IgnoreLookAtTarget = 128,
    IgnoreMotionBlur = 256,
    IgnoreBlur = 512,
    IgnoreBloom = 1024,
    IgnoreGrayscale = 2048,
    IgnoreFisheye = 4096,
    IgnoreVortex = 8192,
    IgnoreSunShafts = 16384,
}

struct ScreenEffectData_Move
{
    /*0x10*/ UnityEngine.Vector3 goalPos;
    /*0x1c*/ float transTimeExecute;
    /*0x20*/ float transTimeUndo;
    /*0x24*/ float fixedTime;
}

struct ScreenEffectData_Zoom
{
    /*0x10*/ float zoomSize;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
    /*0x1c*/ float fixedTime;
}

struct ScreenEffectData_Shake
{
    /*0x10*/ float shakePower;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
}

struct ScreenEffectData_DarkChange
{
    /*0x10*/ float ambientIntensity;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
    /*0x1c*/ float fixedTime;
}

struct ScreenEffectData_ColorChange
{
    /*0x10*/ UnityEngine.Color ambientColor;
    /*0x20*/ float transTimeExecute;
    /*0x24*/ float transTimeUndo;
    /*0x28*/ float fixedTime;
}

struct ScreenEffectData_SpeedChange
{
    /*0x10*/ float timeScale;
    /*0x14*/ float transTimeExecute;
    /*0x18*/ float transTimeUndo;
    /*0x1c*/ float fixedTime;
}

struct ScreenEffectData_BackgroundEffect
{
    /*0x10*/ string effectName;
    /*0x18*/ UnityEngine.GameObject[] bgGroup;
    /*0x20*/ float transTimeExecute;
    /*0x24*/ float transTimeUndo;
    /*0x28*/ float fixedTime;
}

struct ScreenEffectData_LookAtTarget
{
    /*0x10*/ UnityEngine.Vector3 cameraPos;
    /*0x20*/ UnityEngine.Transform trTarget;
    /*0x28*/ float transTimeExecute;
    /*0x2c*/ float transTimeUndo;
    /*0x30*/ float fixedTime;
}

class ScreenEffectProcess
{
    static /*0x0*/ ScreenEffectProcess.DefaultCameraValue _defaultCameraValue;
    static /*0x20*/ UnityEngine.Vector3 _movingCameraPos;
    static /*0x2c*/ ScreenEffectProcess.DefaultAmbientValue _defaultAmbientValue;
    static /*0x40*/ ScreenEffectFlag _effectFlag;
    static /*0x48*/ System.Collections.Generic.Dictionary<UnityEngine.Camera, ScreenPostEffectController> _postEffectDic;
    /*0x10*/ ScreenEffectType _effectType;
    /*0x18*/ System.Collections.IEnumerator _curProcess_Execute;
    /*0x20*/ System.Collections.IEnumerator _curSubProcess_Execute;
    /*0x28*/ System.Collections.IEnumerator _curProcess_Undo;
    /*0x30*/ System.Collections.IEnumerator _curSubProcess_Undo;
    /*0x38*/ System.Action m_OnComplete;
    /*0x40*/ float fixedTime;
    /*0x44*/ float _transSpeed_Execute;
    /*0x48*/ float _transSpeed_Undo;

    static /*0x12a5370*/ ScreenEffectProcess();
    static /*0x12a1f8c*/ void SetDefaultCameraValue(UnityEngine.Camera _camera);
    static /*0x12a4cfc*/ void SetDefaultCameraPos(UnityEngine.Vector3 _pos);
    static /*0x12a4d98*/ UnityEngine.Vector3 GetDefaultCameraPos();
    static /*0x12a2144*/ void SetDefaultAmbientValue(float _intensity, UnityEngine.Color _color);
    static /*0x12a4e00*/ void AddFlag(ScreenEffectFlag _flag);
    static /*0x12a250c*/ void RemoveFlag(ScreenEffectFlag _flag);
    static /*0x12a4698*/ void ClearFlag();
    static /*0x12a4e70*/ bool IsFlag(ScreenEffectFlag _flag);
    static /*0x12a4ee0*/ ScreenPostEffectController GetPostEffectController(UnityEngine.Camera _camera);
    static /*0x12a46fc*/ void ClearPostEffectController();
    /*0x12a4c94*/ ScreenEffectProcess(ScreenEffectType _type);
    /*0x12a4ccc*/ ScreenEffectType get_effectType();
    /*0x12a2374*/ bool get_isProcessing();
    /*0x12a4cd4*/ bool get_isProcessing_Execute();
    /*0x12a4ce4*/ bool get_isProcessing_Undo();
    /*0x12a4cf4*/ ScreenEffectFlag GetCurIgnoreFlag();
    void ApplyDefault();
    System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a2e20*/ void set_transTime_Execute(float value);
    /*0x12a5054*/ float get_transTime_Execute();
    /*0x12a2e40*/ void set_transTime_Undo(float value);
    /*0x12a5074*/ float get_transTime_Undo();
    /*0x12a2e60*/ void Execute(System.Action _OnCompleteAction);
    /*0x12a2260*/ void Undo();
    /*0x12a2394*/ void Clear();
    /*0x12a5094*/ void StopProcess();
    /*0x12a51a4*/ void StopProcess_Execute();
    /*0x12a52a8*/ void StopProcess_Undo();
    /*0x12a5138*/ System.Collections.IEnumerator OnBaseProcess_Execute();
    /*0x12a523c*/ System.Collections.IEnumerator OnBaseProcess_Undo();
    /*0x12a5340*/ void InvokeOnComplete();

    struct DefaultCameraValue
    {
        /*0x10*/ UnityEngine.Vector3 pos;
        /*0x1c*/ float orthographicSize;
        /*0x20*/ UnityEngine.Quaternion rotation;
    }

    struct DefaultAmbientValue
    {
        /*0x10*/ float ambientIntensity;
        /*0x14*/ UnityEngine.Color ambientLight;
    }

    class <OnBaseProcess_Execute>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffectProcess <>4__this;
        /*0x28*/ float <_elapsed_time>5__2;

        /*0xf9d7d4*/ <OnBaseProcess_Execute>d__51(int <>1__state);
        /*0xf9d800*/ void System.IDisposable.Dispose();
        /*0xf9d804*/ bool MoveNext();
        /*0xf9daac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9dab4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9daf4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnBaseProcess_Undo>d__52 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffectProcess <>4__this;

        /*0xf9dafc*/ <OnBaseProcess_Undo>d__52(int <>1__state);
        /*0xf9db28*/ void System.IDisposable.Dispose();
        /*0xf9db2c*/ bool MoveNext();
        /*0xf9dc48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9dc50*/ void System.Collections.IEnumerator.Reset();
        /*0xf9dc90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class PostEffectProcess : ScreenEffectProcess
{
    /*0x50*/ UnityEngine.Camera _curPostEffectCamera;

    static /*0x100c314*/ PostEffectFlag GetScreenEffectTypeToPostEffectType(ScreenEffectType _type);
    /*0x100c154*/ PostEffectProcess(ScreenEffectType _type);
    /*0x100c1c8*/ void InitPostEffectCamera(UnityEngine.Camera _camera);
    /*0x100c254*/ void StopCurPostEffect();
    /*0x100c2ac*/ ScreenPostEffectController GetCurPostEffectController();
    /*0x100c338*/ void ApplyDefault();
    /*0x100c3b8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x100c3f8*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
}

class DefineSkeleton
{
    static string IDLE = "idle";
    static string IDLE_CLEAR = "idle_clear";
    static string IDLE_ENEMY = "idle_enemy";
    static string IDLE_UNARMED = "idle_unarmed";
    static string CLEARING = "clearing";
    static string RUN = "run";
    static string RUN_UNARMED = "run_unarmed";
    static string DUNGEON_IDLE = "idle_lantern";
    static string DUNGEON_RUN = "run_lantern";
    static string IN = "in";
    static string OUT = "out";
    static string UPGRADE = "upgrade";
    static string CLOSE = "close";
    static string OPEN = "open";
    static string IDLE_NO = "idle_no";
    static string IDLE_STAR = "idle_star";
    static string FALL_UNARMED = "cc_fall_unarmed";
    static string STUN_UNARMED = "cc_stun_unarmed";
    static float CHARACTER_OFFSET_Y = 142;
    static /*0x0*/ string[] PROPERTYCARDSKINNAME;

    static /*0x11e7e24*/ DefineSkeleton();
    /*0x11e7e1c*/ DefineSkeleton();
}

class DefineSpriteAtlas
{
    static string PROFILE_BORDER_DEFAULT = "Profile_Frame_0";
    static string PROFILE_BACKGROUND_DEFAULT = "Profile_Background_0";
    static string HEROSKINBACKGROUND = "Skin_Slot1";
    static string ARTIFACTBACKGROUND = "Character_Slot7_2";
    static string ARTIFACTFRAME = "Character_Frame7+";
    static string TRAININGICON = "Icon_Training1";
    static string DEFAULTSQUAREFRAME = "Square_Frame1";
    static string TIME = "Time1";
    static string REDDOT = "New1";
    static string PLUS = "Plus1";
    static string POWER = "Power1";
    static string GUILDPOINT = "GuildContri_Small1";
    static string CARDEFFECT_1 = "Effect1";
    static string CARDEFFECT_2 = "Effect2";
    static string Flag_Friend = "Friend2";
    static string Flag_Guild = "Guild1";
    static string Flag_Support = "Icon_Mercenary_Mark1";
    static string WIN_IMAGE_NAME = "Win_Flag1";
    static string LOSE_IMAGE_NAME = "Lose_Flag1";
    static string FREE_WORLDTICKET_NAME = "Icon_WorldArenaTicket_Free1_Small1";
    static string ARENA_POINT_CION = "ArenaPoint1_Small1";
    static string GUILD_MASTER_ICON = "Guild_Master1";
    static string GUILD_ELDER_ICON = "Guild_Elder1";
    static string GUILD_MERCENARY_ICON = "Guild_MercenaryCaptain1";
    static string GUILD_ATTACKCAPTAIN_ICON = "Icon_Guildwar_AttackCaptain1";
    static string GUILD_DEFENSECAPTAIN_ICON = "Icon_Guildwar_DefenseCaptain1";
    static string ADS_PACKAGE_ICON = "AD_AD";
    static /*0x0*/ string[] PROPERTYICON;
    static /*0x8*/ string[] ILLUSTBACKGROUND;
    static /*0x10*/ string[] ILLUSTFRAME;
    static /*0x18*/ string[] CUTSCENEBACKGROUND;
    static /*0x20*/ string[] HEROSLOTFRAME;
    static /*0x28*/ string[] HEROBATTLESLOTFRAME;
    static /*0x30*/ string[] HEROBATTLESLOTBACKGROUND;
    static /*0x38*/ string[] HEROSLOTBACKGROUND;
    static /*0x40*/ string[] EQUIPSLOTBACKGROUND;
    static /*0x48*/ string[] EQUIPSLOTFRAME;
    static /*0x50*/ string[] HEROSKINFRAME;
    static /*0x58*/ string[] ITEMSLOTFRAME;
    static /*0x60*/ string[] ITEMSLOTBACKGROUND;
    static /*0x68*/ string[] GACHAPROPERTYCARD_ENABLE;
    static /*0x70*/ string[] GACHAPROPERTYCARD_DISABLE;
    static /*0x78*/ string[] GACHAUNITFRAME;
    static /*0x80*/ string[] GACHAUNITBACKGROUND;
    static /*0x88*/ string[] UNITGRADETITLEBACKGROUND;
    static /*0x90*/ string[] UNITSHADE;
    static /*0x98*/ string[] UNITFROZEN;
    static /*0xa0*/ string[] UNITGRADETEXTIMAGE;
    static /*0xa8*/ string[] BATTLEHEALTHBAR;
    static /*0xb0*/ string[] BATTLESTEMINABAR;
    static /*0xb8*/ string[] BATTLESHIELDBAR;
    static /*0xc0*/ string[] BUTTON;
    static /*0xc8*/ string[] BUTTONPRESS;
    static /*0xd0*/ string[] MAILICON;
    static /*0xd8*/ string[] LOCKICON;
    static /*0xe0*/ string[] DEFAULTSLOTFRAME;
    static /*0xe8*/ string[] SUMMONSMALLFRAME;
    static /*0xf0*/ string[] STATUSTYPEICON;
    static /*0xf8*/ string[] CLASSTYPEICON;
    static /*0x100*/ string[] PROMOTE;
    static /*0x108*/ string[] FORMATION;
    static /*0x110*/ string[] SAVEICON;
    static /*0x118*/ string[] STATCOLORARROWICON;
    static /*0x120*/ string[] DEFAULTSQUARE;
    static /*0x128*/ string[] DEFAULTSQUAREBACKGROUND;
    static /*0x130*/ string[] COIN;
    static /*0x138*/ string[] EXP;
    static /*0x140*/ string[] CASH;
    static /*0x148*/ string[] HEART;
    static /*0x150*/ string[] DISMISS;
    static /*0x158*/ string[] CRYSTAL;
    static /*0x160*/ string[] HEROEXP;
    static /*0x168*/ string[] FEATHER;
    static /*0x170*/ string[] VIP;
    static /*0x178*/ string[] MAZECOIN;
    static /*0x180*/ string[] HEROCARD;
    static /*0x188*/ string[] GUILDCOIN;
    static /*0x190*/ string[] ARENACOIN;
    static /*0x198*/ string[] WORLDCOIN;
    static /*0x1a0*/ string[] DUNGEONCOIN;
    static /*0x1a8*/ string[] PVECOIN1;
    static /*0x1b0*/ string[] PVECOIN2;
    static /*0x1b8*/ string[] BATTLEPASSEXP;
    static /*0x1c0*/ string[] ROYALPASSEXP;
    static /*0x1c8*/ string[] RESETQUESTPOINT;
    static /*0x1d0*/ string[] ARROW;
    static /*0x1d8*/ string[] GENDER;
    static /*0x1e0*/ string[] HEROFOOTHOLD;
    static /*0x1e8*/ string[] SENDFSHIPICON;
    static /*0x1f0*/ string[] RECEIVEFSHIPICON;
    static /*0x1f8*/ string[] STAGESTATUS;
    static /*0x200*/ string[] RANKING_MAINICON;
    static /*0x208*/ string[] RANK;
    static /*0x210*/ string[] QUESTBOXICON;
    static /*0x218*/ string[] UPDOWNARROW;
    static /*0x220*/ string[] INFOILLUSTVIEWICON;
    static /*0x228*/ string GUILD_EMBLEM;
    static /*0x230*/ string[] GUILD_BUILDING;
    static /*0x238*/ string[] PLATFORM_ICON;
    static /*0x240*/ string NAMECARD_HERO_GRADE_SLIME;
    static /*0x248*/ string NAMECARD_HERO_GRADE_NORMAL;
    static /*0x250*/ string NAMECARD_HERO_GRADE_ELITE;
    static /*0x258*/ string[] ARENA_TIER_ICON_BIG;
    static /*0x260*/ string[] ARENA_TIER_ICON_SMALL;
    static /*0x268*/ string[] GUILD_BOSS_REWARD_BOX;
    static /*0x270*/ string[] FAST_ICON_NAME;
    static /*0x278*/ string[] DUNGEON_ITEM_ICON_SMALL;
    static /*0x280*/ string[] DUNGEON_ITEM_ICON_BIG;
    static /*0x288*/ string[] FACTION_RANK_BACKGROUND;
    static /*0x290*/ string[] FACTION_RANK_BANNER;
    static /*0x298*/ string[] FACTION_GUILD_LINE_TOPTITLE;
    static /*0x2a0*/ string[] GUILDWAR_FORMATION_BACKGROUND;
    static /*0x2a8*/ string[] PVEEMBLEM;
    static /*0x2b0*/ string[] PVECHECK;
    static /*0x2b8*/ string[] PVEFRAME;
    static /*0x2c0*/ string[] PVETOP3;
    static /*0x2c8*/ string[] FURNITURE_BACKGROUND;
    static /*0x2d0*/ string[] STAR_SLOT_SMALL;
    static /*0x2d8*/ string[] STAR_SLOT_BIG;
    static /*0x2e0*/ string[] ABILITY_GRADE;
    static /*0x2e8*/ string[] ABILITY_GRADE_ICON;
    static /*0x2f0*/ string[] ABILITY_BG;
    static /*0x2f8*/ string[] ABILITY_BG2;
    static /*0x300*/ string[] ROULETTE_BG;
    static /*0x308*/ string[] PASS_BUTTON;
    static /*0x310*/ string[] BATTLEPASS_LINE_DISABLE;
    static /*0x318*/ string[] BATTLEPASS_LINE_ENABLE;
    static /*0x320*/ string[] BATTLEPASS_SLOT_DISABLE;
    static /*0x328*/ string[] BATTLEPASS_SLOT_ENABLE;

    static /*0x11e7fb8*/ DefineSpriteAtlas();
    /*0x11e7fb0*/ DefineSpriteAtlas();
}

class DefineTexture
{
    static /*0x0*/ string[] BOOKBACKGROUND;
    static /*0x8*/ string[] BOOKFRAME;
    static /*0x10*/ string[] HEROINFOBACKGROUND;
    static /*0x18*/ string[] HEROINFOFRAME;
    static /*0x20*/ string[] HEROINFOSLOT;
    static /*0x28*/ string[] HEROBOOKFRAME;
    static /*0x30*/ string[] GACHAFACTIONBACKGROUND;
    static /*0x38*/ string[] GACHAFACTIONBANNER;
    static /*0x40*/ string[] ARENALISTBACKGROUND;

    static /*0x11eea44*/ DefineTexture();
    /*0x11eea3c*/ DefineTexture();
}

class EasingFunction
{
    static float NATURAL_LOG_OF_2 = 0.6931471824645996;

    static /*0x14b6950*/ float Linear(float start, float end, float value);
    static /*0x14b6958*/ float Spring(float start, float end, float value);
    static /*0x14b6a0c*/ float EaseInQuad(float start, float end, float value);
    static /*0x14b6a20*/ float EaseOutQuad(float start, float end, float value);
    static /*0x14b6a3c*/ float EaseInOutQuad(float start, float end, float value);
    static /*0x14b6a90*/ float EaseInCubic(float start, float end, float value);
    static /*0x14b6aa8*/ float EaseOutCubic(float start, float end, float value);
    static /*0x14b6ad0*/ float EaseInOutCubic(float start, float end, float value);
    static /*0x14b6b28*/ float EaseInQuart(float start, float end, float value);
    static /*0x14b6b44*/ float EaseOutQuart(float start, float end, float value);
    static /*0x14b6b6c*/ float EaseInOutQuart(float start, float end, float value);
    static /*0x14b6bc8*/ float EaseInQuint(float start, float end, float value);
    static /*0x14b6be8*/ float EaseOutQuint(float start, float end, float value);
    static /*0x14b6c18*/ float EaseInOutQuint(float start, float end, float value);
    static /*0x14b6c80*/ float EaseInSine(float start, float end, float value);
    static /*0x14b6cbc*/ float EaseOutSine(float start, float end, float value);
    static /*0x14b6cf4*/ float EaseInOutSine(float start, float end, float value);
    static /*0x14b6d3c*/ float EaseInExpo(float start, float end, float value);
    static /*0x14b6d78*/ float EaseOutExpo(float start, float end, float value);
    static /*0x14b6db4*/ float EaseInOutExpo(float start, float end, float value);
    static /*0x14b6e28*/ float EaseInCirc(float start, float end, float value);
    static /*0x14b6e78*/ float EaseOutCirc(float start, float end, float value);
    static /*0x14b6ec8*/ float EaseInOutCirc(float start, float end, float value);
    static /*0x14b6f4c*/ float EaseInBounce(float start, float end, float value);
    static /*0x14b6f88*/ float EaseOutBounce(float start, float end, float value);
    static /*0x14b7054*/ float EaseInOutBounce(float start, float end, float value);
    static /*0x14b70d8*/ float EaseInBack(float start, float end, float value);
    static /*0x14b7108*/ float EaseOutBack(float start, float end, float value);
    static /*0x14b7148*/ float EaseInOutBack(float start, float end, float value);
    static /*0x14b71cc*/ float EaseInElastic(float start, float end, float value);
    static /*0x14b7260*/ float EaseOutElastic(float start, float end, float value);
    static /*0x14b72f4*/ float EaseInOutElastic(float start, float end, float value);
    static /*0x14b73f4*/ float LinearD(float start, float end, float value);
    static /*0x14b73fc*/ float EaseInQuadD(float start, float end, float value);
    static /*0x14b740c*/ float EaseOutQuadD(float start, float end, float value);
    static /*0x14b7428*/ float EaseInOutQuadD(float start, float end, float value);
    static /*0x14b7450*/ float EaseInCubicD(float start, float end, float value);
    static /*0x14b7468*/ float EaseOutCubicD(float start, float end, float value);
    static /*0x14b7488*/ float EaseInOutCubicD(float start, float end, float value);
    static /*0x14b74b8*/ float EaseInQuartD(float start, float end, float value);
    static /*0x14b74d4*/ float EaseOutQuartD(float start, float end, float value);
    static /*0x14b74f8*/ float EaseInOutQuartD(float start, float end, float value);
    static /*0x14b7530*/ float EaseInQuintD(float start, float end, float value);
    static /*0x14b7550*/ float EaseOutQuintD(float start, float end, float value);
    static /*0x14b7578*/ float EaseInOutQuintD(float start, float end, float value);
    static /*0x14b75b0*/ float EaseInSineD(float start, float end, float value);
    static /*0x14b75fc*/ float EaseOutSineD(float start, float end, float value);
    static /*0x14b7630*/ float EaseInOutSineD(float start, float end, float value);
    static /*0x14b766c*/ float EaseInExpoD(float start, float end, float value);
    static /*0x14b76b4*/ float EaseOutExpoD(float start, float end, float value);
    static /*0x14b76f4*/ float EaseInOutExpoD(float start, float end, float value);
    static /*0x14b774c*/ float EaseInCircD(float start, float end, float value);
    static /*0x14b77a8*/ float EaseOutCircD(float start, float end, float value);
    static /*0x14b77f8*/ float EaseInOutCircD(float start, float end, float value);
    static /*0x14b7878*/ float EaseInBounceD(float start, float end, float value);
    static /*0x14b788c*/ float EaseOutBounceD(float start, float end, float value);
    static /*0x14b7914*/ float EaseInOutBounceD(float start, float end, float value);
    static /*0x14b7960*/ float EaseInBackD(float start, float end, float value);
    static /*0x14b7990*/ float EaseOutBackD(float start, float end, float value);
    static /*0x14b79cc*/ float EaseInOutBackD(float start, float end, float value);
    static /*0x14b7a5c*/ float EaseInElasticD(float start, float end, float value);
    static /*0x14b7b0c*/ float EaseOutElasticD(float start, float end, float value);
    static /*0x14b7bbc*/ float EaseInOutElasticD(float start, float end, float value);
    static /*0x14b7cec*/ float SpringD(float start, float end, float value);
    static /*0x14b7e50*/ EasingFunction.Function GetEasingFunction(EasingFunction.Ease easingFunction);
    static /*0x14b83c8*/ EasingFunction.Function GetEasingFunctionDerivative(EasingFunction.Ease easingFunction);

    enum Ease
    {
        EaseInQuad = 0,
        EaseOutQuad = 1,
        EaseInOutQuad = 2,
        EaseInCubic = 3,
        EaseOutCubic = 4,
        EaseInOutCubic = 5,
        EaseInQuart = 6,
        EaseOutQuart = 7,
        EaseInOutQuart = 8,
        EaseInQuint = 9,
        EaseOutQuint = 10,
        EaseInOutQuint = 11,
        EaseInSine = 12,
        EaseOutSine = 13,
        EaseInOutSine = 14,
        EaseInExpo = 15,
        EaseOutExpo = 16,
        EaseInOutExpo = 17,
        EaseInCirc = 18,
        EaseOutCirc = 19,
        EaseInOutCirc = 20,
        Linear = 21,
        Spring = 22,
        EaseInBounce = 23,
        EaseOutBounce = 24,
        EaseInOutBounce = 25,
        EaseInBack = 26,
        EaseOutBack = 27,
        EaseInOutBack = 28,
        EaseInElastic = 29,
        EaseOutElastic = 30,
        EaseInOutElastic = 31,
    }

    class Function : System.MulticastDelegate
    {
        /*0x1097dac*/ Function(object object, nint method);
        /*0x1097e0c*/ float Invoke(float s, float e, float v);
        /*0x1098078*/ System.IAsyncResult BeginInvoke(float s, float e, float v, System.AsyncCallback callback, object object);
        /*0x109812c*/ float EndInvoke(System.IAsyncResult result);
    }
}

class GradientEffect : UnityEngine.UI.BaseMeshEffect
{
    /*0x20*/ UnityEngine.Color32 topColor;
    /*0x24*/ UnityEngine.Color32 bottomColor;

    /*0xe5faa8*/ GradientEffect();
    /*0xe5f85c*/ void ModifyMesh(UnityEngine.UI.VertexHelper helper);
}

class BuffIconSpread : MenuSpread
{
    static string FACTION_BUFF_DARK_NAME = "DARKFACTION";
    static string FACTION_BUFF_NORMAL_NAME = "SAMEFACTION";
    /*0x68*/ System.Collections.Generic.List<BuffIconUI> m_lisBuffIcon;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> m_lisFactionBuff;
    /*0x78*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> m_lisFactionBuffDark;
    /*0x80*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> m_lisFactionBuffNormal;
    /*0x88*/ System.Collections.Generic.List<BuffIconSpread.BuffIconData> m_lisResultBuffIconData;
    /*0x90*/ System.Collections.Generic.List<int> m_lisResultBuffID;
    /*0x98*/ System.Collections.Generic.List<int> m_lisFactionCount;
    /*0xa0*/ bool m_bStartInitialized;
    /*0xa4*/ Helper_FactionBuff.FactionBuffType m_eFactionBuffType;

    /*0x16f1b98*/ BuffIconSpread();
    /*0x16f08b4*/ void StartInit();
    /*0x16f0b2c*/ System.Collections.Generic.List<int> Init(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x16f110c*/ void FindSameFactionCondition(BuffIconSpread.FactionType _eFactionType);
    /*0x16f1a1c*/ System.Collections.Generic.List<UnityEngine.GameObject> GetBuffImageObjectList();

    enum FactionType
    {
        NORMAL = 0,
        DEMON = 1,
    }

    struct BuffIconData
    {
        /*0x10*/ Battle.BuffIconType BuffType;
        /*0x14*/ int MaxLV;
        /*0x18*/ int LV;

        /*0xa82928*/ BuffIconData(Battle.BuffIconType _eBuffType, int _nMaxLV, int _nLV);
    }

    class <>c
    {
        static /*0x0*/ BuffIconSpread.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Factionbuff> <>9__13_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Factionbuff> <>9__13_1;

        static /*0xda51c0*/ <>c();
        /*0xda5220*/ <>c();
        /*0xda5228*/ bool <StartInit>b__13_0(TableData.TableData_Factionbuff x);
        /*0xda5284*/ bool <StartInit>b__13_1(TableData.TableData_Factionbuff x);
    }
}

class HeroSlotSpread : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.ParticleSystem m_SpawnParticleUI;
    /*0x20*/ UnityEngine.RectTransform m_MoveTrans;
    /*0x28*/ System.Collections.Generic.List<HeroSlotInventory> m_lisHeroSlot;
    /*0x30*/ System.Collections.Generic.List<UnityEngine.Vector3> m_lisSlotPosition;
    /*0x38*/ DG.Tweening.Sequence m_Sequence;
    /*0x40*/ float m_fOriginTransX;
    /*0x44*/ float m_fSlotGapDistanceX;
    /*0x48*/ int m_nOriginHeroCount;
    /*0x4c*/ bool m_bAlly;

    /*0x126e9d0*/ HeroSlotSpread();
    /*0x126e4f4*/ void Start();
    /*0x126e4f8*/ void InitPosition();
    /*0x126e6b8*/ void Init(bool _bAlly);
    /*0x126e8a8*/ void Renew();
    /*0x126ea88*/ void <Renew>b__12_0();
}

class MenuSpread : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_Parent;
    /*0x20*/ UnityEngine.UI.GridLayoutGroup m_GridLayoutGroup;
    /*0x28*/ UnityEngine.RectTransform m_ArrowIcon;
    /*0x30*/ bool m_bShowing;
    /*0x34*/ float m_fDefaultPadding;
    /*0x38*/ float m_fDefaultOffset;
    /*0x3c*/ float m_fAnimateSpeed;
    /*0x40*/ bool m_bArrowMirror;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.GameObject> m_GridItems;
    /*0x50*/ bool m_bPlayAnimate;
    /*0x54*/ int m_nMinItemCount;
    /*0x58*/ int m_nMaxItemCount;
    /*0x5c*/ float m_fSizeDeltaX;
    /*0x60*/ System.Collections.IEnumerator m_ieAnimation;

    /*0x2b3bfcc*/ MenuSpread();
    /*0x2b3ba08*/ void InitializeSpread(int _minItemCount, int _maxItemCount);
    /*0x2b3bd68*/ bool IsShowing();
    /*0x2b3bbc0*/ void Refresh(bool _isShowing, bool _isAnimate);
    /*0x2b3be68*/ void Show();
    /*0x2b3be1c*/ void StartAnimation();
    /*0x2b3bf04*/ System.Collections.IEnumerator CoAnimation();
    /*0x2b3bf70*/ bool UpdateSize(bool _condition1, bool _condition2, UnityEngine.Vector2 _increase, UnityEngine.Vector2 _decrease);
    /*0x2b3bd70*/ void SetActiveGridObjects(int _nViewCount);

    class <CoAnimation>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MenuSpread <>4__this;

        /*0x1087620*/ <CoAnimation>d__19(int <>1__state);
        /*0x108764c*/ void System.IDisposable.Dispose();
        /*0x1087650*/ bool MoveNext();
        /*0x1087848*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1087850*/ void System.Collections.IEnumerator.Reset();
        /*0x1087890*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct PathData
{
    /*0x10*/ int Index;
    /*0x14*/ float X;
    /*0x18*/ float Y;
    /*0x1c*/ float Offset;

    /*0xa8a8e8*/ UnityEngine.Vector2 GetVector();
    /*0xa8a8f0*/ float GetScaleOffset();
}

class PathMaker : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.EdgeCollider2D m_Path;

    /*0x1147c28*/ PathMaker();
    /*0x11479f8*/ int get_GetPointCount();
    /*0x1147a24*/ int get_GetPointMaxIndex();
    /*0x1147a54*/ UnityEngine.EdgeCollider2D get_PathCollider();
    /*0x1147a5c*/ UnityEngine.Vector2 GetPathIndex(int _index);
    /*0x1147ad0*/ void SetPath(System.Collections.Generic.List<PathData> _pathData);
}

class SafeArea : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_RectTransform;
    /*0x20*/ UnityEngine.Rect LastSafeArea;

    /*0x129fff0*/ SafeArea();
    /*0x129fe04*/ void Awake();
    /*0x129fe5c*/ void Refresh();
    /*0x129fedc*/ UnityEngine.Rect GetSafeArea();
    /*0x129fee4*/ void ApplySafeArea(UnityEngine.Rect r);
}

class BattleAudioGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ AssetBundleType HIT_AssetBundleType;
    /*0x20*/ string HIT_BLADE_NAME;
    /*0x28*/ string HIT_BLADE_C_NAME;
    /*0x30*/ string HIT_BLUNT_NAME;
    /*0x38*/ string HIT_BLUNT_C_NAME;
    /*0x40*/ string HIT_STAB_NAME;
    /*0x48*/ string HIT_STAB_C_NAME;
    /*0x50*/ string HIT_BULLET_NAME;
    /*0x58*/ string HIT_BULLET_C_NAME;
    /*0x60*/ string HIT_MAGIC_NAME;
    /*0x68*/ string HIT_MAGIC_C_NAME;
    /*0x70*/ string HIT_EXPLS_NAME;
    /*0x78*/ string HIT_ICE_NAME;
    /*0x80*/ string HIT_SHIELD_NAME;
    /*0x88*/ string HIT_HEAL_NAME;
    /*0x90*/ string HIT_BUFF_NAME;
    /*0x98*/ string HIT_DEBUFF_NAME;
    /*0xa0*/ AssetBundleType ULT_AssetBundleType;
    /*0xa8*/ string ULT_KNIGHT_NAME;
    /*0xb0*/ string ULT_MAGE_NAME;
    /*0xb8*/ string ULT_RANGER_NAME;
    /*0xc0*/ string ULT_SUPPORTER_NAME;
    /*0xc8*/ string ULT_WARRIOR_NAME;
    /*0xd0*/ AssetBundleType BUFF_AssetBundleType;
    /*0xd8*/ string BUFF_FREEZE_NAME;
    /*0xe0*/ AssetBundleType BGM_AssetBundleType;
    /*0xe8*/ string STAGE_CLEAR_NAME;
    /*0xf0*/ string STAGE_FAIL_NAME;

    /*0xf89284*/ BattleAudioGroup();
}

class BattleConstantsGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ float SkillCasterPauseDuration;
    /*0x1c*/ float SkillPauseDuration;
    /*0x20*/ float SkillFadeDuration;
    /*0x24*/ float SkillFadeAlpha;
    /*0x28*/ float SkillFadeDelay;
    /*0x2c*/ float IdleUnitDistanceY;
    /*0x30*/ float BattleResultDelay;
    /*0x34*/ int BattlePoseRandomDelay;
    /*0x38*/ float SlowMotionSpeed;
    /*0x3c*/ float ColorTweenSpeed;
    /*0x40*/ UnityEngine.Color InvincibleBuffColor;
    /*0x50*/ UnityEngine.Color RageBuffColor;
    /*0x60*/ float StartMoveSpeed;
    /*0x64*/ float HitFaceDuration;
    /*0x68*/ bool UsePlusSymbol;
    /*0x6c*/ float AddDamageFontDelay;
    /*0x70*/ float AddDamageFontScale;
    /*0x74*/ int TutorialRandomSeed;
    /*0x78*/ float VolumeChangeLerpTime;
    /*0x7c*/ float VolumeTargetBGM;
    /*0x80*/ float VolumeTargetSFX;
    /*0x84*/ UnityEngine.Color BossHitColor;
    /*0x94*/ float BossHitTime;
    /*0x98*/ float[] KillCountCooltimes;
    /*0xa0*/ float KillCutsceneCooltime;
    /*0xa4*/ int LevelMin;
    /*0xa8*/ int LevelMax;
    /*0xac*/ float Volume_SFX;

    /*0xf8a3dc*/ BattleConstantsGroup();
}

class BattleGizmoGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ UnityEngine.Color AreaColor;
    /*0x28*/ UnityEngine.Color ColliderColor_Allies;
    /*0x38*/ UnityEngine.Color ColliderColor_Enemies;
    /*0x48*/ UnityEngine.Color MoveColor_Allies;
    /*0x58*/ UnityEngine.Color MoveColor_Enemies;
    /*0x68*/ UnityEngine.Color TargetColor_Allies;
    /*0x78*/ UnityEngine.Color TargetColor_Enemies;
    /*0x88*/ UnityEngine.Color SightColor_Allies;
    /*0x98*/ UnityEngine.Color SightColor_Enemies;
    /*0xa8*/ UnityEngine.Color TickColor_Allies;
    /*0xb8*/ UnityEngine.Color TickColor_Enemies;
    /*0xc8*/ UnityEngine.Color CollisionColor_Allies;
    /*0xd8*/ UnityEngine.Color CollisionColor_Enemies;
    /*0xe8*/ float CollisionDuration;

    /*0xf8b3ec*/ BattleGizmoGroup();
}

class BattleNameGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ string DEFAULT_HIT;
    /*0x20*/ string SKILL_START;
    /*0x28*/ string SKILL_START_CUTSCENE;
    /*0x30*/ string KILL_CUTSCENE;
    /*0x38*/ string DEATH_DISSOLVE;
    /*0x40*/ string SHIELD_01;
    /*0x48*/ string SHIELD_02;
    /*0x50*/ string SHIELD_03;
    /*0x58*/ string SHIELD_04;
    /*0x60*/ string SHIELD_05;
    /*0x68*/ string UI_SKILL_ON;
    /*0x70*/ string CURE_EFFECT;
    /*0x78*/ string UNIT_09_SP_03;
    /*0x80*/ string UNIT_13_SP_03;
    /*0x88*/ string UNIT_22_ULT;
    /*0x90*/ string UNIT_26_ULT;
    /*0x98*/ string UNIT_28_SP_03;
    /*0xa0*/ string UNIT_44_SP_02;
    /*0xa8*/ string UNIT_47_SP_01;
    /*0xb0*/ string UNIT_47_SP_02_HEAL;
    /*0xb8*/ string UNIT_47_ULT_CURE;
    /*0xc0*/ string UNIT_47_ULT_SHIELD;
    /*0xc8*/ string UNIT_48_ULT_EXP;
    /*0xd0*/ string UNIT_48_ULT_HIT;
    /*0xd8*/ string UNIT_50_ULT;
    /*0xe0*/ string UNIT_57_SP_03;
    /*0xe8*/ string EVILPET_ULT_NIDDLE;
    /*0xf0*/ string EVILPET_ULT_EXP;
    /*0xf8*/ string EVILPET_ULT_SHIELD;
    /*0x100*/ string EVILPET_ULT_SHIELD_EXP;
    /*0x108*/ string EVILPET_ULT_SHIELD_HIT;
    /*0x110*/ string SLIME_01_SHIELD;
    /*0x118*/ string SLIME_02_SHIELD;
    /*0x120*/ string SLIME_03_SHIELD;
    /*0x128*/ string SLIME_04_SHIELD;
    /*0x130*/ string SLIME_05_SHIELD;
    /*0x138*/ string SLIME_06_SHIELD;
    /*0x140*/ string TUTORIAL_BG_DEATH_STAR;
    /*0x148*/ string UNIT_09_ULT_SWORD;
    /*0x150*/ string UNIT_12_ULT_BALL;
    /*0x158*/ string UNIT_36_ULT_ARROW;
    /*0x160*/ string UNIT_38_ULT_BULLET;
    /*0x168*/ string UNIT_44_ULT_SWORD;
    /*0x170*/ string CAMPAIN_BG_IMAGE_NAME_DEFAULT;

    /*0xe38ed8*/ BattleNameGroup();
}

class BuffIconNameGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ string[] FactionBuffPopupIconNames;

    /*0x16f08ac*/ BuffIconNameGroup();
}

class ColorGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ UnityEngine.Color[] ColorValues;

    /*0x10dfdf4*/ ColorGroup();
}

class IdleConstantsGroup : UnityEngine.ScriptableObject
{
    /*0x18*/ float DialogueDurationMin;
    /*0x1c*/ float DialogueDurationMax;
    /*0x20*/ float DialogueDelayMin;
    /*0x24*/ float DialogueDelayMax;
    /*0x28*/ UnityEngine.Color DialogueTextColor;
    /*0x38*/ UnityEngine.Color DialogueImageColor;
    /*0x48*/ float DialogueExpandTime;
    /*0x4c*/ float DialogueShrinkTime;
    /*0x50*/ float DialogueFadeTime;
    /*0x54*/ float DialoguePrivatePercentage;

    /*0xd20a58*/ IdleConstantsGroup();
}

class RunGameSettings : UnityEngine.ScriptableObject
{
    /*0x18*/ int UnitID;
    /*0x1c*/ int UnitGrade;
    /*0x20*/ string StartpointName;
    /*0x28*/ int StartpointCount;
    /*0x30*/ string DestinationName;
    /*0x38*/ int DestinationCount;
    /*0x40*/ string StraightlineName;
    /*0x48*/ int StraightlineCount;
    /*0x50*/ string CrosslineName;
    /*0x58*/ int CrosslineCount;
    /*0x5c*/ int CrossSelectCount;
    /*0x60*/ float JumpCooltime;
    /*0x64*/ float FallStartSpeed;
    /*0x68*/ float UnitPositionX;
    /*0x6c*/ float BackgroundSpeed;
    /*0x70*/ float RewardDownEffectPositionY;
    /*0x74*/ float RewardUpEffectPositionY;
    /*0x78*/ string SFX_Jump;
    /*0x80*/ string SFX_Hit;
    /*0x88*/ string SFX_Slip;
    /*0x90*/ string SFX_Reward1;
    /*0x98*/ string SFX_Reward2;
    /*0xa0*/ string SFX_Reward3;
    /*0xa8*/ string SFX_Reward4;
    /*0xb0*/ string SFX_RewardLife;
    /*0xb8*/ string BGM_Default;
    /*0xc0*/ string BGM_Clear;
    /*0xc8*/ string BGM_Failed;

    /*0x1293724*/ RunGameSettings();
}

enum NewScrollType
{
    Horizontal = 0,
    Veratical = 1,
}

class NewScrollRect<T> : UnityEngine.EventSystems.UIBehaviour
{
    /*0x0*/ UnityEngine.UI.ScrollRect scrollRect;
    /*0x0*/ AssetBundleType m_eBundleType;
    /*0x0*/ NewScrollType m_eScrollType;
    /*0x0*/ UnityEngine.GameObject m_Prefab;
    /*0x0*/ int m_nPoolSize;
    /*0x0*/ float offsetTop;
    /*0x0*/ float offsetBottom;
    /*0x0*/ int nItemCount;
    /*0x0*/ bool bIsInitPool;
    /*0x0*/ System.Collections.Generic.List<T> liItems;
    /*0x0*/ System.Collections.Generic.List<UnityEngine.RectTransform> liItemsRect;
    /*0x0*/ System.Action<int, T> OnUpdateItemEvent;

    NewScrollRect();
    int get_ItemCount();
    void set_ItemCount(int value);
    int get_AddItemCount();
    void set_AddItemCount(int value);
    float get_HorizontalNormalizedPosition();
    void set_HorizontalNormalizedPosition(float value);
    float get_VerticalNormalizedPosition();
    void set_VerticalNormalizedPosition(float value);
    void Awake();
    void OnEnable();
    void OnDisable();
    void InitializeScroll();
    void IsExistFirstCreateItem();
    void CreateItem(int _index);
    void AddContentSize(float _value);
    void ClearContentSize();
    void RefreshContentSize();
    void InitializePool();
    T GetPoolObject();
    void ReturnPoolObject(UnityEngine.GameObject _obj);
    UnityEngine.RectTransform GetContent();
    UnityEngine.RectTransform GetViewport();
    void StopMovement();
    void OnChangeScroll(UnityEngine.Vector2 _vec);
    void SelectItemScroll(int _nIndex);
    bool UseRangeInItem(int _nIndex);
    void LastItemScroll();
    void FirstItemScroll();
    System.Collections.Generic.List<T> GetInstanceList();
    T GetInstance(int nIndex);
    float GetPosX(UnityEngine.RectTransform trans);
    float GetScrollPosX();
    float GetPosY(UnityEngine.RectTransform trans);
    float GetScrollPosY();
    void LateUpdate();
    void <IsExistFirstCreateItem>b__28_0(T x);
    void <RefreshContentSize>b__32_0(UnityEngine.RectTransform x);

    class <>c__DisplayClass50_0<T>
    {
        /*0x0*/ NewScrollRect<T> <>4__this;
        /*0x0*/ float _height;

        <>c__DisplayClass50_0();
        void <LateUpdate>b__0(UnityEngine.RectTransform x);
    }
}

class NewScrollRect_ChannelGroupEntity : NewScrollRect<ChannelGroupEntity>
{
    /*0x2b51980*/ NewScrollRect_ChannelGroupEntity();
}

class NewScrollRect_ChannelSelectEntity : NewScrollRect<ChannelSelectEntity>
{
    /*0x2b519cc*/ NewScrollRect_ChannelSelectEntity();
}

class NewScrollRect_ChatMessage : NewScrollRect<ChatMessage>
{
    /*0x2b51a18*/ NewScrollRect_ChatMessage();
}

class ScrollContent : UnityEngine.MonoBehaviour
{
    static int ITEM_EXTRA_COUNT = 1;
    /*0x18*/ UnityEngine.UI.ScrollRect scrollRect;
    /*0x20*/ UnityEngine.GameObject itemPrefab;
    /*0x28*/ ScrollContent.ScrollType scrollType;
    /*0x2c*/ ScrollContent.AlignType alignType;
    /*0x30*/ ScrollContent.AlignType itemAlignType;
    /*0x34*/ int lineCount;
    /*0x38*/ float itemScale;
    /*0x3c*/ ScrollContent.ItemMargin itemMargin;
    /*0x50*/ UnityEngine.RectTransform <contentTransform>k__BackingField;

    /*0xe183b0*/ ScrollContent();
    /*0xe183a0*/ UnityEngine.RectTransform get_contentTransform();
    /*0xe183a8*/ void set_contentTransform(UnityEngine.RectTransform value);
    int get_itemCount();
    void set_itemCount(int value);
    void Reset();
    void TryItemUpdate(int _item_index);
    void TryListUpdate(int _item_count);
    void TryListUpdate();
    int GetInstanceObjectIndex(UnityEngine.GameObject _item);
    UnityEngine.GameObject GetInstanceObject(int _item_index);

    enum ScrollType
    {
        Vertical = 0,
        Horizontal = 1,
    }

    enum AlignType
    {
        Left = 0,
        Center = 1,
        Right = 2,
    }

    struct ItemMargin
    {
        /*0x10*/ float left;
        /*0x14*/ float top;
        /*0x18*/ float right;
        /*0x1c*/ float bottom;
    }
}

class ScrollContent<T> : ScrollContent
{
    static /*0x0*/ System.Collections.Generic.List<int> _tempTableList;
    static /*0x0*/ System.Collections.Generic.List<T> _tempInstanceList;
    /*0x0*/ System.Action<int, T> eventItemUpdate;
    /*0x0*/ System.Collections.Generic.List<T> _instanceList;
    /*0x0*/ System.Collections.Generic.List<int> _itemIndexTable;
    /*0x0*/ UnityEngine.RectTransform _scrollrectTransform;
    /*0x0*/ UnityEngine.RectTransform _viewportTransform;
    /*0x0*/ int _curLeftTopIndex;
    /*0x0*/ int _curRightBottomIndex;
    /*0x0*/ float _scrollArea_Width;
    /*0x0*/ float _scrollArea_Height;
    /*0x0*/ int _viewRowItemCount;
    /*0x0*/ int _viewColumnItemCount;
    /*0x0*/ int _viewTotalItemCount;
    /*0x0*/ UnityEngine.Rect _rcItem;
    /*0x0*/ UnityEngine.Rect _rcView;
    /*0x0*/ bool _isValidItemPrefab;
    /*0x0*/ bool _isReserveUpdate;
    /*0x0*/ int _itemCount;

    static ScrollContent();
    ScrollContent();
    int get_itemCount();
    void set_itemCount(int value);
    void PreInit();
    void Awake();
    void Start();
    void OnEnable();
    void OnDisable();
    void Reset();
    void TryItemUpdate(int _item_index);
    void TryListUpdate(int _item_count);
    void TryListUpdate();
    bool ChangeItemPrefab(UnityEngine.GameObject prefab);
    int GetInstanceObjectIndex(UnityEngine.GameObject _item);
    UnityEngine.GameObject GetInstanceObject(int _item_index);
    int GetInstanceIndex(T _item);
    T GetInstance(int _item_index);
    System.Collections.Generic.List<T> GetInstnaceList();
    void SetScrollSettings(ScrollContent.ScrollType _eScrollType, ScrollContent.AlignType _eAlignType, ScrollContent.AlignType _eItemAlignType);
    void InitItem();
    void UpdateContentSize();
    void UpdateDefaultItemCount();
    void RefreshItemList();
    void SelectedItemIndex(int _index);
    float GetPosition(int _index, float _view_value, float _item_value);
    void OnValueChanged(UnityEngine.Vector2 _ratio);
    void FindItemIndex(UnityEngine.Vector2 _ratio, ref int _left_top_index, ref int _right_bottom_index);
    void OnDynamicAlign(bool _is_all);
    void SortInstanceList(ref int _fixed_start_index, ref int _fixed_end_index);
    void MoveInstance(int _start_index, int _move_count, int _insert_index);
    void CreateItemInstance(int _create_count);
    T CreateItemInstance();
    void RemoveItemInstance(int _remove_count);
    float GetItemPosX(int _item_index);
    float GetItemPosY(int _item_index);
    float GetItemWidth();
    float GetItemHeight();
    float GetContentWidth();
    float GetContentHeight();
    void ProcessMoveScroll(int _nIndex, float _fTime, float marginValue);
    void <Awake>b__23_0(UnityEngine.Vector2 _value);
}

class ScrollContent_ArtifactChangeEntity : ScrollContent<ArtifactChangeEntity>
{
    /*0xe189a4*/ ScrollContent_ArtifactChangeEntity();
}

class ScrollContent_AttendanceEntity : ScrollContent<AttendanceEntity>
{
    /*0xe18a1c*/ ScrollContent_AttendanceEntity();
}

class ScrollContent_BattlePassEntity : ScrollContent<BattlePassEntity>
{
    /*0xe18b0c*/ ScrollContent_BattlePassEntity();
}

class ScrollContent_CashShopPackageItem : ScrollContent<CashShopPackageItem>
{
    /*0xe18cec*/ ScrollContent_CashShopPackageItem();
}

class ScrollContent_ChannelGroupEntity : ScrollContent<ChannelGroupEntity>
{
    /*0xe18d64*/ ScrollContent_ChannelGroupEntity();
}

class ScrollContent_ChannelSelectEntity : ScrollContent<ChannelSelectEntity>
{
    /*0xe18ddc*/ ScrollContent_ChannelSelectEntity();
}

class ScrollContent_ChapterUserEntity : ScrollContent<ChapterUserEntity>
{
    /*0xe18e54*/ ScrollContent_ChapterUserEntity();
}

class ScrollContent_ChatBox : ScrollContent<ChatMessage>
{
    /*0xe18ecc*/ ScrollContent_ChatBox();
}

class ScrollContent_ChatChangeChannelEntity : ScrollContent<ChatChangeChannelEntity>
{
    /*0xe18f44*/ ScrollContent_ChatChangeChannelEntity();
}

class ScrollContent_ChatChannelEntity : ScrollContent<ChatChannelEntity>
{
    /*0xe18fbc*/ ScrollContent_ChatChannelEntity();
}

class ScrollContent_ChatEmoteEntity : ScrollContent<ChatEmoteEntity>
{
    /*0xe19034*/ ScrollContent_ChatEmoteEntity();
}

class ScrollContent_ContentShopItem : ScrollContent<ContentShopItem>
{
    /*0xe190ac*/ ScrollContent_ContentShopItem();
}

class ScrollContent_CustomProfileSlotEntity : ScrollContent<CustomProfileSlotEntity>
{
    /*0xe19124*/ ScrollContent_CustomProfileSlotEntity();
}

class ScrollContent_EquipChangeEntity : ScrollContent<EquipChangeEntity>
{
    /*0xe1928c*/ ScrollContent_EquipChangeEntity();
}

class ScrollContent_EventBannerEntity : ScrollContent<EventBannerEntity>
{
    /*0xe193f4*/ ScrollContent_EventBannerEntity();
}

class ScrollContent_EventExchangeEntity : ScrollContent<EventExchangeEntity>
{
    /*0xe1955c*/ ScrollContent_EventExchangeEntity();
}

class ScrollContent_EventMissionEntity : ScrollContent<EventMissionEntity>
{
    /*0xe195d4*/ ScrollContent_EventMissionEntity();
}

class ScrollContent_EventMissionPaybackEntity : ScrollContent<EventMissionPaybackEntity>
{
    /*0xe1964c*/ ScrollContent_EventMissionPaybackEntity();
}

class ScrollContent_FriendList : ScrollContent<FriendEntity>
{
    /*0xe196c4*/ ScrollContent_FriendList();
}

class ScrollContent_FriendManageEntity : ScrollContent<FriendManageEntity>
{
    /*0xe1973c*/ ScrollContent_FriendManageEntity();
}

class ScrollContent_FurnitureDismissSlot : ScrollContent<FurnitureDismissSlot>
{
    /*0xe197b4*/ ScrollContent_FurnitureDismissSlot();
}

class ScrollContent_GeneralArenaMatchEntity : ScrollContent<GeneralArenaMatchEntity>
{
    /*0xe198a4*/ ScrollContent_GeneralArenaMatchEntity();
}

class ScrollContent_GeneralArenaRecordEntity : ScrollContent<GeneralArenaRecordEntity>
{
    /*0xe1991c*/ ScrollContent_GeneralArenaRecordEntity();
}

class ScrollContent_GenericRankEntity : ScrollContent<GenericRankEntity>
{
    /*0xe19994*/ ScrollContent_GenericRankEntity();
}

class ScrollContent_GuildWarMatchEntity : ScrollContent<GuildWarMatchEntity>
{
    /*0xe19d54*/ ScrollContent_GuildWarMatchEntity();
}

class ScrollContent_GuildWarMemberEntity : ScrollContent<GuildWarMemberEntity>
{
    /*0xe19dcc*/ ScrollContent_GuildWarMemberEntity();
}

class ScrollContent_GuildWarRankEntity : ScrollContent<GuildWarRankEntity>
{
    /*0xe19e44*/ ScrollContent_GuildWarRankEntity();
}

class ScrollContent_GuildWarRecordEntity : ScrollContent<GuildWarRecordEntity>
{
    /*0xe19ebc*/ ScrollContent_GuildWarRecordEntity();
}

class ScrollContent_GuildWarRewardDetailEntity : ScrollContent<GuildWarRewardDetailEntity>
{
    /*0xe19f34*/ ScrollContent_GuildWarRewardDetailEntity();
}

class ScrollContent_GuildWarRewardEntity : ScrollContent<GuildWarRewardEntity>
{
    /*0xe19fac*/ ScrollContent_GuildWarRewardEntity();
}

class ScrollContent_HeroBookList : ScrollContent<HeroBookList>
{
    /*0xe1a09c*/ ScrollContent_HeroBookList();
}

class ScrollContent_HeroDismissSlot : ScrollContent<HeroDismissSlot>
{
    /*0xe1a114*/ ScrollContent_HeroDismissSlot();
}

class ScrollContent_HeroGuildWarEditSlot : ScrollContent<HeroGuildWarEditSlot>
{
    /*0xe1a18c*/ ScrollContent_HeroGuildWarEditSlot();
}

class ScrollContent_HeroGuildWarSelectHeroSlot : ScrollContent<HeroGuildWarSelectHeroSlot>
{
    /*0xe1a204*/ ScrollContent_HeroGuildWarSelectHeroSlot();
}

class ScrollContent_HeroGuildWarUnSelectHeroSlot : ScrollContent<HeroGuildWarUnSelectHeroSlot>
{
    /*0xe1a27c*/ ScrollContent_HeroGuildWarUnSelectHeroSlot();
}

class ScrollContent_HeroResonanceSlot : ScrollContent<HeroResonanceSlot>
{
    /*0xe1a36c*/ ScrollContent_HeroResonanceSlot();
}

class ScrollContent_HeroSlot : ScrollContent<HeroSlot>
{
    /*0xe1a3e4*/ ScrollContent_HeroSlot();
}

class ScrollContent_HeroSlotHousing : ScrollContent<HeroSlotHousing>
{
    /*0xe1a4d4*/ ScrollContent_HeroSlotHousing();
}

class ScrollContent_HeroSlotInventory : ScrollContent<HeroSlotInventory>
{
    /*0xe1a54c*/ ScrollContent_HeroSlotInventory();
}

class ScrollContent_HeroSlotMaze : ScrollContent<HeroSlotMaze>
{
    /*0xe1a5c4*/ ScrollContent_HeroSlotMaze();
}

class ScrollContent_HeroWishSlot : ScrollContent<WishPropertySlot>
{
    /*0xe1a63c*/ ScrollContent_HeroWishSlot();
}

class ScrollContent_ItemInfoSlot : ScrollContent<ItemInfoSlot>
{
    /*0xe1aaec*/ ScrollContent_ItemInfoSlot();
}

class ScrollContent_Mail : ScrollContent<MailEntity>
{
    /*0xe1abdc*/ ScrollContent_Mail();
}

class ScrollContent_MercenaryLendRequestEntity : ScrollContent<MercenaryLendRequestEntity>
{
    /*0xe1ac54*/ ScrollContent_MercenaryLendRequestEntity();
}

class ScrollContent_MercenaryLendedEntity : ScrollContent<MercenaryLendedEntity>
{
    /*0xe1accc*/ ScrollContent_MercenaryLendedEntity();
}

class ScrollContent_MercenaryRentEntity : ScrollContent<MercenaryRentEntity>
{
    /*0xe1ad44*/ ScrollContent_MercenaryRentEntity();
}

class ScrollContent_NoticeEntity : ScrollContent<NoticeEntity>
{
    /*0xe1adbc*/ ScrollContent_NoticeEntity();
}

class ScrollContent_PlayerProfileSlot : ScrollContent<PlayerProfileSlot>
{
    /*0xe1ae34*/ ScrollContent_PlayerProfileSlot();
}

class ScrollContent_PveRankClearRewardEntity : ScrollContent<PveRankClearRewardEntity>
{
    /*0xe1aeac*/ ScrollContent_PveRankClearRewardEntity();
}

class ScrollContent_PveRankInfoEntity : ScrollContent<PveRankInfoEntity>
{
    /*0xe1af24*/ ScrollContent_PveRankInfoEntity();
}

class ScrollContent_PveRankingBoardEntity : ScrollContent<PveRankingBoardEntity>
{
    /*0xe1af9c*/ ScrollContent_PveRankingBoardEntity();
}

class ScrollContent_QuestDailyEntity : ScrollContent<QuestDailyEntity>
{
    /*0xe1b014*/ ScrollContent_QuestDailyEntity();
}

class ScrollContent_QuestGeneralEntity : ScrollContent<QuestGeneralEntity>
{
    /*0xe1b08c*/ ScrollContent_QuestGeneralEntity();
}

class ScrollContent_RacePastEntity : ScrollContent<RacePastEntity>
{
    /*0xe1b104*/ ScrollContent_RacePastEntity();
}

class ScrollContent_RandomItemSlot : ScrollContent<RandomItemSlot>
{
    /*0xe1b17c*/ ScrollContent_RandomItemSlot();
}

class ScrollContent_RankBoardRankEntity : ScrollContent<RankBoardRankEntity>
{
    /*0xe1b1f4*/ ScrollContent_RankBoardRankEntity();
}

class ScrollContent_RankBoardRewardEntity : ScrollContent<RankBoardRewardEntity>
{
    /*0xe1b26c*/ ScrollContent_RankBoardRewardEntity();
}

class ScrollContent_RankRewardEntity : ScrollContent<RankRewardEntity>
{
    /*0xe1b2e4*/ ScrollContent_RankRewardEntity();
}

class ScrollContent_RelationListEntity : ScrollContent<RelationListEntity>
{
    /*0xe1b3d4*/ ScrollContent_RelationListEntity();
}

class ScrollContent_SelectItem : ScrollContent<ItemSelectEntity>
{
    /*0xe1b5b4*/ ScrollContent_SelectItem();
}

class ScrollContent_TriggerMissionEntity : ScrollContent<TriggerMissionEntity>
{
    /*0xe1b8fc*/ ScrollContent_TriggerMissionEntity();
}

class ScrollContent_TroopTeamEntity : ScrollContent<TroopTeamEntity>
{
    /*0xe1b974*/ ScrollContent_TroopTeamEntity();
}

class ScrollContent_TroopTeamEntitySelector : ScrollContent<TroopTeamEntitySelector>
{
    /*0xe1b9ec*/ ScrollContent_TroopTeamEntitySelector();
}

class ScrollContent_UpgradeEquipSlot : ScrollContent<UpgradeEquipSlot>
{
    /*0xe1ba64*/ ScrollContent_UpgradeEquipSlot();
}

class ScrollContent_WorldArenaFightEntity : ScrollContent<WorldArenaFightEntity>
{
    /*0xe1bb54*/ ScrollContent_WorldArenaFightEntity();
}

class ScrollContent_WorldArenaRankEntity : ScrollContent<WorldArenaRankEntity>
{
    /*0xe1bbcc*/ ScrollContent_WorldArenaRankEntity();
}

class ScrollContent_WorldArenaRewardEntity : ScrollContent<WorldArenaRewardEntity>
{
    /*0xe1bc44*/ ScrollContent_WorldArenaRewardEntity();
}

class TweenComponent : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.AnimationCurve m_aniCurve;
    /*0x20*/ bool m_useClamp;
    /*0x24*/ UnityEngine.Vector3 m_vStart;
    /*0x30*/ UnityEngine.Vector3 m_vTarget;
    /*0x3c*/ float m_fTime;
    /*0x40*/ bool m_bLoop;
    /*0x48*/ System.Collections.IEnumerator mEnumerator;

    /*0x11323b4*/ TweenComponent();
    /*0x1132288*/ void Init(UnityEngine.Vector3 _start, UnityEngine.Vector3 _target, float _fTime, bool _bLoop);
    /*0x11322f4*/ void OnlyInit(UnityEngine.Vector3 _start, UnityEngine.Vector3 _target, float _fTime, bool _bLoop);
    /*0x1132310*/ void Stop();
    void OnProcess(float _Time);
    /*0x1132340*/ System.Collections.IEnumerator ProcessAniCurve();
    /*0x11323ac*/ UnityEngine.AnimationCurve GetCurve();

    class <ProcessAniCurve>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TweenComponent <>4__this;
        /*0x28*/ float <factor>5__2;

        /*0xd8a20c*/ <ProcessAniCurve>d__11(int <>1__state);
        /*0xd8a238*/ void System.IDisposable.Dispose();
        /*0xd8a23c*/ bool MoveNext();
        /*0xd8a32c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8a334*/ void System.Collections.IEnumerator.Reset();
        /*0xd8a374*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TweenImageColor : TweenComponent
{
    /*0x50*/ UnityEngine.Color32 _beginColor;
    /*0x54*/ UnityEngine.Color32 _TargetColor;

    /*0x1132728*/ TweenImageColor();
    /*0x113241c*/ UnityEngine.Color32 GetCurrentBegionColor();
    /*0x1132424*/ UnityEngine.Color32 GetCurrentTargetColor();
    /*0x113242c*/ void Init(UnityEngine.Color _start, UnityEngine.Color _target, float _fTime, bool _bLoop);
    /*0x1132504*/ void OnlyInit(UnityEngine.Color _start, UnityEngine.Color _target, float _fTime, bool _bLoop);
    /*0x11325cc*/ void OnlyInit(float _fTime, bool _bLoop);
    /*0x1132634*/ void OnProcess(float _Time);
    /*0x113271c*/ void OnProcessColor(float _Time);
}

class TweenPosition : TweenComponent
{
    /*0x113283c*/ TweenPosition();
    /*0x1132770*/ void OnProcess(float _Time);
}

class TweenRotation : TweenComponent
{
    /*0x113290c*/ TweenRotation();
    /*0x1132840*/ void OnProcess(float _Time);
}

class TweenScale : TweenComponent
{
    /*0x11329dc*/ TweenScale();
    /*0x1132910*/ void OnProcess(float _Time);
}

class CustomButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    /*0x18*/ bool m_Mirror;
    /*0x20*/ UnityEngine.Events.UnityEvent m_ButtonAction;
    /*0x28*/ ButtonSound m_DownButtonSound;
    /*0x2c*/ ButtonSound m_UpButtonSound;
    /*0x30*/ UnityEngine.Vector2 m_Scale;
    /*0x38*/ System.Collections.Generic.List<UnityEngine.GameObject> m_ButtonObjectList;
    /*0x40*/ bool m_bIsEnabled;

    /*0xf4e3b8*/ CustomButton();
    /*0xf4df9c*/ bool get_Enabled();
    /*0xf4dfa4*/ void set_Enabled(bool value);
    /*0xf4dfb0*/ System.Action get_GetButtonAction();
    /*0xf4e028*/ UnityEngine.Events.UnityEvent get_GetButtonEvent();
    /*0xf4e030*/ void SetDownScale(UnityEngine.Vector2 scale);
    /*0xf4e038*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf4e1cc*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf4e1e8*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0xf4e324*/ void AddEvent(UnityEngine.Events.UnityAction evt);
    /*0xf4e340*/ void ClearEvent();
    /*0xf4e35c*/ void ResetEvent();
    /*0xf4e444*/ void <get_GetButtonAction>b__11_0();
}

class Utils
{
    static float FLOAT_EPSILON = 0.00009999999747378752;
    static /*0x0*/ int _encryptIntKeyNum;
    static /*0x4*/ float _encryptFloatKeyNum;
    static /*0x8*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<int, int>> _encriptIntDic;
    static /*0x10*/ System.Collections.Generic.Dictionary<float, System.ValueTuple<float, float>> _encriptFloatDic;
    static /*0x18*/ System.Globalization.Calendar _calender;

    static /*0x10d0f40*/ Utils();
    static T GetOrAddComponent<T>(UnityEngine.GameObject gameObject);
    static /*0x10c9158*/ void ResetLocalTransform(UnityEngine.Transform transform);
    static /*0x10c91b4*/ void SafeActive(UnityEngine.GameObject go, bool enable);
    static /*0x10c9254*/ void SafeActive(UnityEngine.MonoBehaviour mono, bool enable);
    static bool IsDefinedEnum<T>(string find_value);
    static /*0x10c9300*/ void SetLocalX(UnityEngine.Transform transform, float x);
    static /*0x10c9358*/ void SetLocalY(UnityEngine.Transform transform, float y);
    static /*0x10c93b0*/ void SetLocalZ(UnityEngine.Transform transform, float z);
    static T ParseEnum<T>(string parseString, T defaultValue);
    static T ParseEnum_Upper<T>(string parseString, T defaultValue);
    static /*0x10c9408*/ int[] ParseProfileIDs(string profileids);
    static /*0x10c95a0*/ int[] ParseProfileIDs(string profileids, char splitchar);
    static System.Collections.Generic.Dictionary<string, T> ToDictionaryEnum<T>(T enumList);
    static System.Collections.Generic.List<string> ToListEnum<T>(T enumList);
    static /*0x10c9738*/ bool IsWidthStratchMode(UnityEngine.RectTransform _rectTransform);
    static /*0x10c97f0*/ bool topStretch(UnityEngine.RectTransform uiObject);
    static /*0x10c9860*/ bool MiddleStretch(UnityEngine.RectTransform uiObject);
    static /*0x10c98d4*/ bool BottomStretch(UnityEngine.RectTransform uiObject);
    static /*0x10c993c*/ void SetLeft(UnityEngine.RectTransform rt, float left);
    static /*0x10c9980*/ void SetRight(UnityEngine.RectTransform rt, float right);
    static /*0x10c99c4*/ void SetTop(UnityEngine.RectTransform rt, float top);
    static /*0x10c9a08*/ void SetBottom(UnityEngine.RectTransform rt, float bottom);
    static /*0x10c9a4c*/ void ResetRect(UnityEngine.RectTransform rt);
    static /*0x10c9ad4*/ string DeleteEndWithSpace(string _message);
    static /*0x10c9bc4*/ void SetText(UnityEngine.UI.Text _text, string _textValue);
    static /*0x10c9be4*/ void SetLocalizeString(UnityEngine.UI.Text _text, string _localizeString);
    static /*0x10c9d10*/ void SetText(UnityEngine.UI.Text _text, string _textValue, UnityEngine.Color _textColor);
    static /*0x10c9d84*/ void SetText(UnityEngine.UI.Text _text, string _textValue, int _nTextSize);
    static /*0x10c9dc8*/ void SetText(UnityEngine.UI.Text _text, string _textValue, UnityEngine.Color _textColor, int _nTextSize);
    static /*0x10c9e50*/ void SetSkeletonGraphics(Spine.Unity.SkeletonGraphic _graphics, Spine.Unity.SkeletonDataAsset _asset, bool _duplicate, string _startingAnimName, string _skinName, bool _startingloop, bool _freeze, bool _overwrite);
    static /*0x10ca024*/ TableData.TableData_Unitbase SetSkeletonGraphics(Spine.Unity.SkeletonGraphic _graphics, TableData.TableData_Unitbase unitbase, PTShare.Define.SHero hero, bool _duplicate, string _startingAnimName, string _skinName, bool _startingloop, bool _freeze, bool _overwrite);
    static /*0x10ca1d8*/ TableData.TableData_Unitbase SetSkeletonGraphics(Spine.Unity.SkeletonGraphic _graphics, int _skinid, bool _duplicate, string _startingAnimName, string _skinName, bool _startingloop, bool _freeze, bool _overwrite);
    static /*0x10ca31c*/ string ReturnParams(System.Collections.Generic.Dictionary<int, int> _dics, char _char);
    static /*0x10ca690*/ string[] SplitJsonParams(string _rewardstr);
    static /*0x10ca724*/ UnityEngine.Color GetHtmlColor(string _html);
    static /*0x10ca7d0*/ string SafeHttlString(string str);
    static /*0x10ca84c*/ string Half2Full(string sHalf, string warningCode);
    static /*0x10ca998*/ string Trim(string data);
    static T1 GetReflection<T1, T2>(T2 data, string field);
    static /*0x10caacc*/ System.Collections.IEnumerator CoLateCallBack(System.Action callBack);
    static /*0x10cab38*/ System.Collections.IEnumerator CoScreenCapture(int sizeX, int sizeY, int destX, int destY, UnityEngine.Rect captureArea, System.Action<UnityEngine.Texture2D> callBack);
    static /*0x10cabf4*/ UnityEngine.Texture2D ResizeTexture(UnityEngine.Texture2D source, UnityEngine.Vector2 size);
    static /*0x10caf8c*/ bool isRooted();
    static /*0x10cb12c*/ bool IsEmulator();
    static /*0x10cb124*/ bool isRootedPrivate(string path);
    static /*0x10cb44c*/ void SetOpecity(UnityEngine.UI.Image _image, float _opecity);
    static /*0x10cb504*/ void SetRaycast(UnityEngine.UI.Graphic _graphic, bool _enable);
    static /*0x10cb528*/ void InGameUtilsInit();
    static /*0x10cb6c8*/ void EncryptInt(ref int key, int value);
    static /*0x10cb840*/ void EncryptFloat(ref float key, float value);
    static /*0x10cb9c0*/ int DecryptInt(int key);
    static /*0x10cbab8*/ float DecryptFloat(float key);
    static /*0x10cbbb8*/ void ClearFlag(ref Battle.CharacterFlag flag);
    static /*0x10cbbc0*/ void ClearFlag(ref Battle.BuffFlag flag);
    static /*0x10cbbc8*/ void ClearFlag(ref Battle.StateFlag flag);
    static /*0x10cbbd0*/ void ClearFlag(ref Battle.BattleStateType flag);
    static /*0x10cbbd8*/ void SetFlag(ref Battle.CharacterFlag flag, Battle.CharacterFlag value, bool boolean);
    static /*0x10cbc04*/ void SetFlag(ref Battle.BuffFlag flag, Battle.BuffFlag value, bool boolean);
    static /*0x10cbc30*/ void SetFlag(ref Battle.StateFlag flag, Battle.StateFlag value, bool boolean);
    static /*0x10cbc5c*/ void SetFlag(ref Battle.BattleStateType flag, Battle.BattleStateType value, bool boolean);
    static /*0x10cbc88*/ bool FlagEquals(Battle.CharacterFlag flag, Battle.CharacterFlag compare);
    static /*0x10cbc94*/ bool FlagEquals(Battle.BuffFlag flag, Battle.BuffFlag compare);
    static /*0x10cbca0*/ bool FlagEquals(Battle.StateFlag flag, Battle.StateFlag compare);
    static /*0x10cbcac*/ bool FlagEquals(Battle.BattleStateType flag, Battle.BattleStateType compare);
    static /*0x10cbcb8*/ Battle.Direction GetDirection(ref UnityEngine.Vector3 scale);
    static /*0x10cbccc*/ Battle.Direction GetDirection(ref UnityEngine.Vector2 scale);
    static /*0x10cbce0*/ Battle.Direction GetDirection(UnityEngine.Transform trans);
    static /*0x10cbd10*/ bool CheckUnitID(int _nUnitID);
    static /*0x10cbe44*/ bool IsHero(int _nUnitID);
    static /*0x10ca1c8*/ bool IsHeroMonster(int _nUnitID);
    static /*0x10cbe50*/ bool IsMonster(CharacterBase _character);
    static /*0x10cbee0*/ bool IsHeroMonster(CharacterBase _character);
    static /*0x10cbf70*/ bool IsHeroSlime(CharacterBase _character);
    static /*0x10cc000*/ void TransColliderCircleToRectangle(ref Battle.ColliderData _colliderData);
    static /*0x10cc02c*/ void TransColliderForIdleMode(ref Battle.ColliderData _colliderData);
    static /*0x10cc048*/ bool ColliderEquals(ref Battle.ColliderData a, ref Battle.ColliderData b);
    static /*0x10cc090*/ bool IsEqual(float x, float y);
    static /*0x10cc0c0*/ bool IsEqualOrLarge(float x, float y);
    static /*0x10cc0fc*/ bool IsEqualOrSmall(float x, float y);
    static System.Collections.Generic.List<T> SafeClear<T>(System.Collections.Generic.List<T> _list);
    static /*0x10cc138*/ string GetStringTime_MinSec(int _time);
    static /*0x10cc218*/ bool CheckCooltime(ref float _cooltime, float _deltaTime);
    static /*0x10cc250*/ void DebugWithParams(UnityEngine.Color _color, bool _spacing, object[] _params);
    static /*0x10cc394*/ System.Enum GetEnum(System.Type type, int value);
    static /*0x10cc4cc*/ int GetRoundInt(float _floatValue);
    static /*0x10cc4d4*/ float GetRound(float _floatValue);
    static /*0x10cc564*/ int ToInt(float _floatValue);
    static /*0x10cc5d0*/ int ToInt(double _doubleValue);
    static /*0x10cc63c*/ long ToLong(float _floatValue);
    static /*0x10cc6a8*/ long ToLong(double _doubleValue);
    static /*0x10cc714*/ TableData.TableData_Skillfx DeepCopy(TableData.TableData_Skillfx _skillFX);
    static /*0x10cc884*/ bool IsVisibleFrom(UnityEngine.Renderer renderer, UnityEngine.Camera camera);
    static /*0x10cc8f4*/ float GetEventTime(Spine.Animation anim, string eventName);
    static /*0x10ccaac*/ string[] GetEventNames(Spine.Animation anim);
    static /*0x10cccb8*/ void SetCurrencySpritem(AtlasImage _image, PTShare.Define.Currency _type, bool _isBig);
    static /*0x10cd088*/ void SetResetPointSprite(AtlasImage _image, PTShare.Define.ResetPointType _type, bool _isBig);
    static /*0x10cd1e8*/ void SetUserExpSpritem(AtlasImage _image, bool _isBig);
    static /*0x10cd2c0*/ void SetVipPointSpritem(AtlasImage _image, bool _isBig);
    static /*0x10c0fd0*/ void SetPropertySprite(AtlasImage _image, int _type);
    static /*0x10cd398*/ void SetIllustBgSprite(AtlasImage _image, int _type);
    static /*0x10cd4a0*/ void SetIllustFrameSprite(AtlasImage _image, int _type);
    static /*0x10cd5a8*/ void SetHeroSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10cd700*/ void SetHeroSlotBgSprite(AtlasImage _image, int _grade);
    static /*0x10cd858*/ void SetEquipSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10cd960*/ void SetEquipSlotBgSprite(AtlasImage _image, int _grade);
    static /*0x10cda68*/ void SetItemSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10cdb70*/ void SetItemSlotBgSprite(AtlasImage _image, int _grade);
    static /*0x10cdc78*/ void SetPropertyCardEnableSprite(AtlasImage _image, int _type);
    static /*0x10cdd80*/ void SetPropertyCardDisableSprite(AtlasImage _image, int _type);
    static /*0x10cde88*/ void SetGachaCardFrameSprite(AtlasImage _image, int _type);
    static /*0x10cdf8c*/ void SetGachaCardBackgroundSprite(AtlasImage _image, int _type);
    static /*0x10ce090*/ void SetGradeTitleBackgroundSprite(AtlasImage _image, int _grade);
    static /*0x10ce1e8*/ void SetGradeTextImageSprite(AtlasImage _image, int _grade);
    static /*0x10ce340*/ void SetStatusTypeIconSprite(AtlasImage _image, int _type);
    static /*0x10ce444*/ void SetClassTypeIconSprite(AtlasImage _image, int _type);
    static /*0x10ce54c*/ void SetSexIconSprite(AtlasImage _image, int _type);
    static /*0x10ce650*/ void SetHeroFootHoldSprite(AtlasImage _image, int _grade);
    static /*0x10c0d20*/ void SetHeroBattleSlotFrameSprite(AtlasImage _image, int _grade);
    static /*0x10c0e78*/ void SetHeroBattleSlotBackgroundSprite(AtlasImage _image, int _grade);
    static /*0x10ce7a8*/ void SetGenderSprite(AtlasImage _image, int _gender);
    static /*0x10ce8ac*/ void SetGuildBuildingSprite(AtlasImage _image, int _position);
    static /*0x10ce97c*/ void SetGuildEmblemSprite(AtlasImage _image, int _index);
    static /*0x10cea6c*/ void SetPlatformIcon(AtlasImage _image, int _index);
    static /*0x10ceb74*/ void SetGradeNameCard(AtlasImage _image, int _initGrade);
    static /*0x10ceca4*/ AtlasImage SetTrainningStatusIcon(AtlasImage image, TrainningStatusType type, string value);
    static /*0x10ceec8*/ AtlasImage SetTierIcon(AtlasImage image, int tier, bool isBig);
    static /*0x10cf028*/ void SetGuildBossRewardBox(AtlasImage image, int step);
    static /*0x10cf114*/ void SetStageTowerBackground(AtlasImage image, int faction);
    static /*0x10cf220*/ void SetStageTowerDoorBackground(AtlasImage image, int faction);
    static /*0x10cf33c*/ void SetDungeonItemIcon(AtlasImage _image, int itemId, bool isBig);
    static /*0x10cf438*/ void SetFactionRankBgSprite(AtlasImage _image, int _type);
    static /*0x10cf540*/ void SetFactionRankBannerSprite(AtlasImage _image, int _type);
    static /*0x10cf648*/ void SetUpDownArrowIcon(AtlasImage _image, int _value);
    static /*0x10cf728*/ void SetFurnitureBG(AtlasImage _image, int _grade);
    static /*0x10cf7e8*/ void SetAbilityGrade(AtlasImage _image, int _grade);
    static /*0x10cf8ec*/ void SetAbilityGradeIcon(AtlasImage _image, int _grade);
    static /*0x10cfa30*/ void SetAbilityBG(AtlasImage _image, int _grade);
    static /*0x10cfb34*/ void SetAbilityBG2(AtlasImage _image, int _grade);
    static /*0x10cfc38*/ void SetRewardIcon(AtlasImage _image, Rewards _reward, bool _isBig);
    static /*0x10cfd64*/ void SetRewardSpinBG(AtlasImage _image, bool banner);
    static /*0x10cfe2c*/ void SetPveFrame(AtlasImage _image, int _difficulty);
    static /*0x10cff30*/ void SetPveTop3(AtlasImage _image, int _rank);
    static /*0x10d0034*/ void SetBattlePassButton(AtlasImage _image, int _pass);
    static /*0x10d0138*/ void SetBattlePassLine(AtlasImage _image, int _pass, bool _enable);
    static /*0x10d0268*/ void SetBattlePassSlot(AtlasImage _image, int _pass, bool _enable);
    static /*0x10d0398*/ int GetWeekIndex(System.DateTime now, int standYear, int standMonth, int count);
    static /*0x10d04b4*/ System.DateTime GetFirstSunday(int year, int month);
    static /*0x10d052c*/ System.DateTime GetWeekSunday(System.DateTime time);
    static /*0x10d0578*/ System.DateTime GetNextWeekSunday(System.DateTime time);
    static /*0x10d05e8*/ System.DateTime GetWeekMonday(System.DateTime time);
    static /*0x10d067c*/ System.DateTime GetNextWeekMonday(System.DateTime time);
    static /*0x10d0710*/ System.DateTime GetOffsetCurrentTime(System.DateTime time);
    static /*0x10d0804*/ string GetConvertString(System.DateTime time);

    class <>c
    {
        static /*0x0*/ Utils.<> <>9;
        static /*0x8*/ System.Func<string, int> <>9__10_0;
        static /*0x10*/ System.Func<string, int> <>9__11_0;
        static /*0x18*/ System.Func<char, bool> <>9__37_0;
        static /*0x20*/ System.Converter<Spine.Event, string> <>9__98_0;

        static /*0xd8b440*/ <>c();
        /*0xd8b4a0*/ <>c();
        /*0xd8b4a8*/ int <ParseProfileIDs>b__10_0(string s);
        /*0xd8b4b4*/ int <ParseProfileIDs>b__11_0(string s);
        /*0xd8b4c0*/ bool <Trim>b__37_0(char w);
        /*0xd8b4f8*/ string <GetEventNames>b__98_0(Spine.Event x);
    }

    class <CoLateCallBack>d__39 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action callBack;

        /*0xd8b554*/ <CoLateCallBack>d__39(int <>1__state);
        /*0xd8b580*/ void System.IDisposable.Dispose();
        /*0xd8b584*/ bool MoveNext();
        /*0xd8b5e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8b5e8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8b628*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoScreenCapture>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int sizeX;
        /*0x24*/ int sizeY;
        /*0x28*/ UnityEngine.Rect captureArea;
        /*0x38*/ int destX;
        /*0x3c*/ int destY;
        /*0x40*/ System.Action<UnityEngine.Texture2D> callBack;
        /*0x48*/ UnityEngine.Texture2D <texture>5__2;

        /*0xd8b630*/ <CoScreenCapture>d__40(int <>1__state);
        /*0xd8b65c*/ void System.IDisposable.Dispose();
        /*0xd8b660*/ bool MoveNext();
        /*0xd8b7c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8b7c8*/ void System.Collections.IEnumerator.Reset();
        /*0xd8b808*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass97_0
    {
        /*0x10*/ string eventName;
        /*0x18*/ System.Func<Spine.Event, bool> <>9__0;

        /*0xd8b51c*/ <>c__DisplayClass97_0();
        /*0xd8b524*/ bool <GetEventTime>b__0(Spine.Event x);
    }
}

class CSVBank
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.String[]>> Map;

    static /*0x1340100*/ CSVBank();
    static /*0x133fa94*/ void Unzip(string zipFilePath);
}

class AnimSyncDataLoader
{
    static /*0x0*/ string load_character_name;

    static /*0xedd4c4*/ AnimSyncIntegratedDataLoader.LoadResult LoadSyncData(string sUnitBundleName, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, ref int[,] _EventCount);
    static /*0xeddb54*/ void SetEventInfo(ref AnimEventSaveInfo _src_data, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> _event_info_dic, ref int[,] _event_count);
    static /*0xeddcbc*/ void ForceMakeSyncData(TableData.TableData_Unitbase Unit_script, ref ActorAnimSyncData _result);
    static /*0xedd954*/ void Load_Binary(int readVer, System.IO.BinaryReader binReader, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, ref int[,] _EventCount, int iTotalEventCount);
    /*0xeddd6c*/ AnimSyncDataLoader();
}

enum ANIMEVENT_TYPE
{
    EFFECT = 0,
    SOUND = 1,
    SKILL_FX = 2,
    PROJECTILE = 3,
    SHADER = 4,
    CAMERA_SHAKE = 5,
}

enum ANIM_EVENT_COUNT
{
    MAX = 6,
}

struct AnimEventType
{
    static /*0xedcb84*/ string TypeToString(ANIMEVENT_TYPE eType);
    static /*0xedcc78*/ ANIMEVENT_TYPE TypeToEnum(string sType);
    static /*0xedcd40*/ bool IsAttackSync(ANIMEVENT_TYPE eType);
    static /*0xedcd50*/ bool IsScreenEffectSync(ANIMEVENT_TYPE eType);
}

struct FireEffectInfo
{
    /*0x10*/ string sEffectName;
    /*0x18*/ Battle.EffectTargetType eEffectTargetType;
    /*0x1c*/ Battle.EffectOwnerType eEffectOwnerType;
    /*0x20*/ AssetBundleType eAssetbundleType;
    /*0x24*/ BONE_TYPE eBoneType;
    /*0x28*/ EFFECT_ATTACH_TYPE eEffectAttachType;
    /*0x2c*/ EFFECT_FORWARD_TYPE eEffectForwardType;
    /*0x30*/ UnityEngine.Vector3 vEffectOffsetPos;
    /*0x3c*/ UnityEngine.Vector3 vEffectOffsetRot;
    /*0x48*/ bool isInheritOwnerScale;
    /*0x4c*/ float fAdjustmentPosition;
    /*0x50*/ float fModelRadius;
    /*0x54*/ float fModelScale;

    static /*0x11da0b8*/ FireEffectInfo GetInfo(AnimEvent animEvent);
    static /*0x11da0fc*/ FireEffectInfo GetInfo(string sEffectName, Battle.EffectTargetType eEffectTargetType, Battle.EffectOwnerType eEffectOwnerType, AssetBundleType _eAssetbundleType);
}

enum TELEPORT_HIT_TYPE
{
    BeginTeleportHit = 0,
    ToOriginalPosition = 1,
    ToForwardOfTarget = 2,
    ToBackwardOfTarget = 3,
    DontMoveOnlyAttack = 4,
}

struct TeleportHitType
{
    static /*0x1167708*/ string TypeToString(TELEPORT_HIT_TYPE eType);
    static /*0x11677fc*/ TELEPORT_HIT_TYPE TypeToEnum(string sType);
}

enum EFFECT_ATTACH_TYPE
{
    ONCE_POSITION = 0,
    ATTACH = 1,
    UPDATE = 2,
}

struct EffectAttachType
{
    static /*0x14b8940*/ string TypeToString(EFFECT_ATTACH_TYPE eType);
    static /*0x14b8a34*/ EFFECT_ATTACH_TYPE TypeToEnum(string sType);
}

enum EFFECT_FORWARD_TYPE
{
    ACTOR = 0,
    PARENT = 1,
    TEAM = 2,
}

struct EffectForwardType
{
    static /*0x14b8afc*/ string TypeToString(EFFECT_FORWARD_TYPE eType);
    static /*0x14b8bf0*/ EFFECT_FORWARD_TYPE TypeToEnum(string sType);
}

struct SYNC_DATA_VERSION
{
    static /*0x0*/ int ver;

    static /*0x129fdb4*/ SYNC_DATA_VERSION();
}

enum ANIMATION_CLIP
{
    NONE = 0,
    IDLE = 1,
    IDLE_UNARM = 2,
    IDLE_BDRAGON_SP_03 = 3,
    MOVE = 4,
    MOVE_UNARM = 5,
    JUMP = 6,
    JUMP_UNARM = 7,
    COUNTER = 8,
    STUN = 9,
    STUN_UNARM = 10,
    FREEZE = 11,
    SLEEP = 12,
    HORROR = 13,
    HORROR_UNARM = 14,
    FALL = 15,
    FALL_UNARM = 16,
    DEATH_01 = 17,
    DEATH_02 = 18,
    DEATH_03 = 19,
    DEATH_UNARM = 20,
    ATK_01 = 21,
    ATK_02 = 22,
    ULT_01 = 23,
    SP_01 = 24,
    SP_02 = 25,
    SP_03 = 26,
    WIN = 27,
    LOSE = 28,
    IN = 29,
    END = 30,
}

struct AnimState
{
    static /*0xedcd5c*/ string StateToString(ANIMATION_CLIP _anistate);
    static /*0xedcf1c*/ ANIMATION_CLIP StateToEnum(string sState);
}

enum BONE_TYPE
{
    Bip001_Footsteps = 0,
    Bip001_HeadTop = 1,
    Bip001_Spine = 2,
    Bip001_Head = 3,
    Bip001_L_Hand = 4,
    Bip001_R_Hand = 5,
    L_Weapon_Tail = 6,
    R_Weapon_Tail = 7,
    Locomotion = 8,
    Weapon_Enchant = 9,
}

struct BoneType
{
    static /*0x1363a18*/ string TypeToString_ForFindBone(BONE_TYPE eType);
    static /*0x1363b24*/ string TypeToString(BONE_TYPE eType);
    static /*0x1363c18*/ BONE_TYPE TypeToEnum_ForFindBone(string sType);
    static /*0x1363c40*/ BONE_TYPE TypeToEnum(string sType);
}

struct AnimEventSaveInfo
{
    /*0x10*/ string sAnimState;
    /*0x18*/ float timeTotal;
    /*0x1c*/ float timeHit;
    /*0x20*/ float normalHitRatio;
    /*0x28*/ string sEventType;
    /*0x30*/ string sEffectName;
    /*0x38*/ string sEffectTargetType;
    /*0x40*/ string sEffectOwnerType;
    /*0x48*/ string sSoundAssetBundleType;
    /*0x50*/ string sSoundName;
    /*0x58*/ float fSoundPlayDelay;
    /*0x60*/ string sProjectilePositionType;
    /*0x68*/ string sProjectileName;
    /*0x70*/ float _scfx_time_execute_trans;
    /*0x74*/ float _scfx_time_undo_trans;
    /*0x78*/ float _scfx_time_keep;
    /*0x7c*/ float _scfx_shake_power;
    /*0x80*/ string sUnitShaderType;
    /*0x88*/ float fUnitShaderDruation;
    /*0x90*/ string sSkillFXID;
}

class AnimEvent
{
    /*0x10*/ AssetBundleType assetBundleType;
    /*0x14*/ ANIMATION_CLIP eAnimState;
    /*0x18*/ AnimEventSaveInfo info;
    /*0xa0*/ ANIMEVENT_TYPE eEventType;
    /*0xa4*/ AssetBundleType eSoundAssetBundleType;
    /*0xa8*/ Battle.EffectTargetType eEffectTargetType;
    /*0xac*/ Battle.EffectOwnerType eEffectOwnerType;
    /*0xb0*/ Battle.BonePositionType eProjectileBoneType;
    /*0xb4*/ Battle.UnitShaderType eShaderType;
    /*0xb8*/ Battle.SkillFXID eSkillFXID;

    static /*0xedca5c*/ string EventTypeToString(AnimEvent sourceEvent);
    /*0xedc9f8*/ AnimEvent();
}

class Helper_AnimEvent
{
    static /*0x10f7850*/ void ClearAnimEvent(string charName, AnimEvent animEvent);
    static /*0x10f788c*/ void ClearAnimEventSaveInfo(ref AnimEventSaveInfo info);
    static /*0x10f7a34*/ void SetSaveInfo(string charName, AnimEvent animEvent, ANIMATION_CLIP eAnimState, ref AnimEventSaveInfo info);
    static /*0x10f7b84*/ string IgnoreCloneString(string _charName);
    static /*0x10f7bd8*/ void ClearEventCount(ref int[,] _EventCount);
    static /*0x10f7c48*/ float ClampTeleportHitOffset(float fSpeed);
    static /*0x10f7b44*/ float ClampScreenEffect_ExecuteTransTime(float time);
    static /*0x10f7b54*/ float ClampScreenEffect_UndoTransTime(float time);
    static /*0x10f7b64*/ float ClampScreenEffect_KeepTime(float time);
    static /*0x10f7c58*/ float ClampScreenEffect_ZoomSize(float factor);
    static /*0x10f7b74*/ float ClampScreenEffect_ShakePoer(float factor);
    static /*0x10f7c68*/ float ClampScreenEffect_DarkIntensity(float factor);
    static /*0x10f7c78*/ float ClampScreenEffect_Speed(float factor);
    static /*0x10f7c8c*/ float ClampAdjustmentPosition(float _offset);
    static /*0x10f7c9c*/ float ClampShaderDuration(float _factor);
    /*0x10f7cac*/ Helper_AnimEvent();
}

class Helper_ScreenEffect
{
    static /*0x110239c*/ void Apply_ShakeCamera(float _shake_power, float _fixed_time);
    static /*0x1102414*/ void Apply_MoveCamera(CharacterBase modelController, AnimEvent animEvent);
    static /*0x110247c*/ void Apply_ZoomCamera(AnimEvent animEvent, System.Action _OnCompleteAction);
    static /*0x1102480*/ void Apply_ShakeCamera(AnimEvent animEvent, System.Action _OnCompleteAction);
    static /*0x1102528*/ void Apply_DarkChange(AnimEvent animEvent);
    static /*0x110252c*/ void Apply_ColorChange(AnimEvent animEvent);
    static /*0x1102530*/ void Apply_GameSpeed(AnimEvent animEvent);
    /*0x1102534*/ Helper_ScreenEffect();
}

class AnimSyncIntegratedDataLoader
{
    static /*0x0*/ AnimSyncIntegratedDataLoader.LoadDataType load_data_type;
    static /*0x8*/ string load_character_name;
    static /*0x10*/ System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> load_event_dic;
    static /*0x18*/ int[,] load_event_count;

    static /*0xedf568*/ AnimSyncIntegratedDataLoader();
    static /*0xeddd74*/ AnimSyncIntegratedDataLoader.LoadResult LoadBinSyncData(string sActorBundleName, ref System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, ref int[,] _EventCount);
    static /*0xede3ac*/ void LoadAnimationSaveInfo(int readVer, System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode);
    static /*0xede54c*/ void Read_Ver_7(System.IO.BinaryReader binReader, SimpleJSON.JSONNode item, ref AnimEventSaveInfo info);
    static /*0xede944*/ void Read_Ver_8(System.IO.BinaryReader binReader, SimpleJSON.JSONNode item, ref AnimEventSaveInfo info);
    static /*0xede9dc*/ void SetEventInfo(ref AnimEventSaveInfo _src_data);
    static /*0xededd8*/ void ForceMakeSyncData(TableData.TableData_Unitbase actor_script, ref ActorAnimSyncData _result);
    static /*0xedee88*/ void ForceMakeSyncData_Impl(ref ActorAnimSyncData _result, ANIMATION_CLIP eAnimState);
    static /*0xede244*/ void SetLoadInfo(AnimSyncIntegratedDataLoader.LoadDataType dataType, string bundleName, System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> dicEventInfo, int[,] _EventCount);
    static /*0xede4ac*/ void ClearLoadInfo();
    static /*0xede2f0*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref int ReadData);
    static /*0xeded1c*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref float ReadData);
    static /*0xedefe4*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref bool ReadData);
    static /*0xedec40*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref string ReadData);
    static /*0xedf188*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref UnityEngine.Vector3 ReadData);
    static /*0xedf41c*/ void Read(System.IO.BinaryReader binReader, SimpleJSON.JSONNode jsonNode, ref UnityEngine.Color ReadData);
    static /*0xedf0d8*/ string SetStringNormalize(string _str);
    static /*0xedf2bc*/ UnityEngine.Vector3 StringToVector3(string _strVector3);
    static /*0xedeb84*/ SimpleJSON.JSONNode refJSONValue(SimpleJSON.JSONNode rootNode, string nodeKey);
    /*0xedf560*/ AnimSyncIntegratedDataLoader();

    enum LoadResult
    {
        Success = 0,
        NotFoundSyncFile = 1,
        NotFoundJsonFile = 2,
        End_Steady = 3,
        Failed_Small_FileSize = 4,
        Failed_Invalid_Character_Name = 5,
        Failed_FileOpen = 6,
        Failed_OverVersion = 7,
        Failed_Nothing_OldVersion_Load_Function = 8,
        Failed_Read_Total_Event_Count = 9,
        Failed_Read_Version = 10,
        Failed_Read_CrashFile = 11,
        Failed_Read_Binreader_Allocate = 12,
    }

    enum LoadDataType
    {
        Binary = 0,
        Json = 1,
    }
}

class ActorAnimSyncData
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, ActorAnimSyncData> _cacheAnimSyncDic;
    /*0x10*/ System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> eventInfoDic;
    /*0x18*/ int[,] totalEventCount;

    static /*0x120e4f4*/ ActorAnimSyncData();
    static /*0x120e180*/ void Init();
    static /*0x120e30c*/ void LoadSyncData(TableData.TableData_Unitbase actor_script, ref ActorAnimSyncData _result);
    /*0x120e018*/ ActorAnimSyncData(string bundleName);
}

class TrackballCamera : UnityEngine.MonoBehaviour
{
    /*0x18*/ float distance;
    /*0x1c*/ float virtualTrackballDistance;
    /*0x20*/ UnityEngine.GameObject target;
    /*0x28*/ System.Nullable<UnityEngine.Vector3> lastMousePosition;
    /*0x38*/ UnityEngine.Vector3 mousePos;
    /*0x44*/ UnityEngine.Vector3 lastDir;
    /*0x50*/ UnityEngine.Vector3 lastTargetPos;
    /*0x5c*/ bool isDragging;
    /*0x5d*/ bool IsPanOn;
    /*0x60*/ UnityEngine.Camera previewCamera;
    /*0x68*/ float fOffsetTargetPosY;

    /*0x111f4a4*/ TrackballCamera();
    /*0x111eac8*/ void SetLastDirGoDefault();
    /*0x111eae0*/ void Init(UnityEngine.GameObject targetObject);
    /*0x111ec80*/ void UpdateByEditor();
    /*0x111f03c*/ UnityEngine.Quaternion FigureOutAxisAngleRotation(UnityEngine.Vector3 lastMousePosn, UnityEngine.Vector3 mousePosn);
    /*0x111f234*/ UnityEngine.Quaternion TrackBall(float p1x, float p1y, float p2x, float p2y, float radius);
    /*0x111f400*/ UnityEngine.Vector3 ProjectToSphere(float distance, float x, float y);
}

class UniClipboard
{
    static /*0x0*/ IBoard _board;

    static /*0x10bf950*/ IBoard get_board();
    static /*0x10bf9e0*/ void SetText(string str);
    static /*0x10bfa94*/ string GetText();
    /*0x10bfb44*/ UniClipboard();
}

interface IBoard
{
    void SetText(string str);
    string GetText();
}

class StandardBoard : IBoard
{
    static /*0x0*/ System.Reflection.PropertyInfo m_systemCopyBufferProperty;

    static /*0xc9a008*/ StandardBoard();
    static /*0xc99cb4*/ System.Reflection.PropertyInfo GetSystemCopyBufferProperty();
    /*0xc9a000*/ StandardBoard();
    /*0xc99ed8*/ void SetText(string str);
    /*0xc99f58*/ string GetText();
}

class AndroidBoard : IBoard
{
    /*0xedbdf0*/ AndroidBoard();
    /*0xedba54*/ void SetText(string str);
    /*0xedbce0*/ string GetText();
    /*0xedbb28*/ UnityEngine.AndroidJavaObject GetClipboardManager();
}

class ScrollIndexCallback2 : UnityEngine.MonoBehaviour
{
    static /*0x0*/ float[] randomWidths;
    /*0x18*/ UnityEngine.UI.Text text;
    /*0x20*/ UnityEngine.UI.LayoutElement element;

    static /*0xe1bf58*/ ScrollIndexCallback2();
    /*0xe1bf50*/ ScrollIndexCallback2();
    /*0xe1bdac*/ void ScrollCellIndex(int idx);
}

class ParticleVelocity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.ParticleSystem ps;
    /*0x20*/ float hSliderValue;
    /*0x28*/ System.Action<float> OnChangeValue;

    /*0x11440a0*/ ParticleVelocity();
    /*0x1143be8*/ void Start();
    /*0x1143ca8*/ void OnDestroy();
    /*0x1143cb0*/ void Update();
    /*0x1143cb4*/ void OnGUI();
    /*0x1143d94*/ void ParticleValue(float value);
    /*0x1143d9c*/ void PSRecursivelySpeed(UnityEngine.ParticleSystem particleSystem, float _value);
    /*0x11440b0*/ void <Start>b__3_0(float f);
}

class ScrollContent_Test : ScrollContent<ScrollTest_item>
{
    /*0xe1b71c*/ ScrollContent_Test();
}

class ScrollTest : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_Test m_cScrollContent;

    /*0xe21624*/ ScrollTest();
    /*0xe21470*/ void Awake();
    /*0xe21554*/ void Start();
    /*0xe21570*/ void OnScrollUpdateListItem(int _nindex, ScrollTest_item _instance);
}

class ScrollTest_item : UnityEngine.MonoBehaviour
{
    /*0xe2162c*/ ScrollTest_item();
    /*0xe21580*/ void Init_Item(int _nindex);
}

class DropDown_Custom : UnityEngine.UI.Dropdown
{
    /*0x11f4360*/ DropDown_Custom();
    /*0x11f4334*/ void Start();
}

class ServerSelectScene : UnityEngine.UI.Dropdown
{
    /*0xe26254*/ ServerSelectScene();
    /*0xe26228*/ void Start();
}

class ToggleTest : UnityEngine.MonoBehaviour
{
    /*0x1170744*/ ToggleTest();
    /*0x1170740*/ void Start();
}

class ButtonBase<T> : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<T> OnClickEvent;
    static /*0x0*/ System.Action<int, bool> OnClickSelfEvent;
    /*0x0*/ T m_ButtonType;
    /*0x0*/ AtlasType m_AtlasType;
    /*0x0*/ AtlasImage m_ButtonImage;
    /*0x0*/ string[] m_arrButtonAtlasName;
    /*0x0*/ int _nIndex;

    static ButtonBase();
    static void add_OnClickEvent(System.Action<T> value);
    static void remove_OnClickEvent(System.Action<T> value);
    static void add_OnClickSelfEvent(System.Action<int, bool> value);
    static void remove_OnClickSelfEvent(System.Action<int, bool> value);
    ButtonBase();
    T get_ButtonType();
    void InitializeButton(int _index, T _type);
    void OnClick();
    void ActiveButton(T _type);
    bool GetTypeEquals(T _type);
}

class ButtonMenuBase<T, K> : UnityEngine.MonoBehaviour
{
    /*0x0*/ System.Collections.Generic.List<K> m_liButton;
    /*0x0*/ int nStartCount;
    /*0x0*/ int nEndCount;
    /*0x0*/ int nIndex;
    /*0x0*/ T <ButtonType>k__BackingField;

    ButtonMenuBase();
    void OnEnable();
    void OnDisable();
    T get_ButtonType();
    void set_ButtonType(T value);
    void InitializeTab(T _type);
    ButtonBase<T> GetButton(T _type);
    void InitializeButton(T _type);
    void HandlerRefreshButton(T _type);

    class <>c__DisplayClass11_0<T, K>
    {
        /*0x0*/ T _type;

        <>c__DisplayClass11_0();
        bool <GetButton>b__0(K x);
    }
}

class FactionTab : ButtonBase<PropertyType>
{
    /*0x11d9e0c*/ FactionTab();
}

class FactionTabBase : ButtonMenuBase<PropertyType, FactionTab>
{
    /*0x11d9e84*/ FactionTabBase();
}

class InventoryTab : ButtonBase<InvenTapType>
{
    /*0x15741dc*/ InventoryTab();
}

enum InvenTapType
{
    ALL = 0,
    ITEM = 1,
    EQUIPMENT = 2,
}

class InventoryTabBase : ButtonMenuBase<InvenTapType, InventoryTab>
{
    /*0x1574254*/ InventoryTabBase();
}

class PuzzleManager : Singleton.Component.SingletonComponent<PuzzleManager>
{
    /*0x28*/ UnityEngine.GameObject m_Prefab;
    /*0x30*/ UnityEngine.Transform m_Parents;
    /*0x38*/ System.Collections.Generic.List<PuzzleParts> m_liPuzzleList;
    /*0x40*/ int m_nTurn;
    /*0x44*/ int m_nTime;
    /*0x48*/ bool m_bPlaying;

    /*0x101d0c8*/ PuzzleManager();
    /*0x101c63c*/ void AwakeInstance();
    /*0x101c640*/ bool InitInstance();
    /*0x101c648*/ void ReleaseInstance();
    /*0x101c64c*/ int get_Turn();
    /*0x101c654*/ int get_Time();
    /*0x101c65c*/ void set_Time(int value);
    /*0x101c664*/ bool get_Playing();
    /*0x101c66c*/ void StartPuzzle(UnityEngine.Transform parent);
    /*0x101caa0*/ void EndPuzzle();
    /*0x101c698*/ void Initalize();
    /*0x101cbe0*/ PuzzleParts GetParents();
    /*0x101cd58*/ void SetParentPuzzle(int _index);
    /*0x101cebc*/ void EndGame();
    /*0x101cec4*/ void ChangePuzzleEvent();
    /*0x101cef8*/ bool CheckCompletePuzzle();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int rand;

        /*0x109117c*/ <>c__DisplayClass18_0();
        /*0x1091184*/ bool <Initalize>b__0(int x);
    }

    class <>c
    {
        static /*0x0*/ PuzzleManager.<> <>9;
        static /*0x8*/ System.Predicate<PuzzleParts> <>9__19_0;

        static /*0x10910e0*/ <>c();
        /*0x1091140*/ <>c();
        /*0x1091148*/ bool <GetParents>b__19_0(PuzzleParts x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int _index;

        /*0x1091194*/ <>c__DisplayClass20_0();
        /*0x109119c*/ bool <SetParentPuzzle>b__0(PuzzleParts x);
    }
}

class PuzzleParts : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    static /*0x0*/ PuzzleParts m_cSelectPuzzle;
    static /*0x8*/ PuzzleParts m_cChangePuzzle;
    /*0x18*/ int X;
    /*0x1c*/ int Y;
    /*0x20*/ UnityEngine.U2D.SpriteAtlas m_BaseAtlas;
    /*0x28*/ UnityEngine.UI.Image m_Image;

    static /*0x101d69c*/ PuzzleParts();
    /*0x101d694*/ PuzzleParts();
    /*0x101cfbc*/ string get_GetIndex();
    /*0x101d154*/ void Awake();
    /*0x101cb60*/ void Init(int _index);
    /*0x101ce9c*/ void SetParent();
    /*0x101d1a8*/ void SetSize(float size);
    /*0x101cbd8*/ void SetPosition(int _X, int _Y);
    /*0x101d200*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x101d518*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x101d630*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
}

class PuzzleSystem : UnityEngine.MonoBehaviour
{
    /*0x18*/ float m_fRealtime;
    /*0x20*/ UnityEngine.UI.Text m_Timer;
    /*0x28*/ UnityEngine.UI.Text m_Turn;
    /*0x30*/ UnityEngine.UI.Text m_ButtonText;
    /*0x38*/ UnityEngine.Transform m_Parent;
    /*0x40*/ UnityEngine.WaitForSecondsRealtime _Realtime;

    /*0x101d8a0*/ PuzzleSystem();
    /*0x101d6a0*/ void StartGame();
    /*0x101d7c8*/ System.Collections.IEnumerator CoTimer();
    /*0x101d834*/ System.Collections.IEnumerator CoTurn();

    class <CoTimer>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ PuzzleSystem <>4__this;

        /*0x10911e8*/ <CoTimer>d__7(int <>1__state);
        /*0x1091214*/ void System.IDisposable.Dispose();
        /*0x1091218*/ bool MoveNext();
        /*0x10913e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10913ec*/ void System.Collections.IEnumerator.Reset();
        /*0x109142c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTurn>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ PuzzleSystem <>4__this;

        /*0x1091434*/ <CoTurn>d__8(int <>1__state);
        /*0x1091460*/ void System.IDisposable.Dispose();
        /*0x1091464*/ bool MoveNext();
        /*0x109158c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1091594*/ void System.Collections.IEnumerator.Reset();
        /*0x10915d4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TapTest : UnityEngine.MonoBehaviour
{
    /*0x18*/ InventoryTabBase m_InventoryTab;
    /*0x20*/ FactionTabBase m_FactionTab;

    /*0x1167700*/ TapTest();
    /*0x11671d0*/ void OnEnable();
    /*0x1167488*/ void OnDisable();
    /*0x1167674*/ void Awake();
    /*0x11676f4*/ void HandlerChangeInventoryTab(InvenTapType _type);
    /*0x11676f8*/ void HandlerSelfInventoryTab(int _index, bool _isSelf);
    /*0x11676fc*/ void HandlerChangeFactionTab(PropertyType _type);
}

class TitleTest : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Title;
    /*0x20*/ UnityEngine.GameObject m_TitleEffect;

    /*0x1170360*/ TitleTest();
    /*0x1170104*/ void Awake();
    /*0x1170178*/ System.Collections.IEnumerator CoDelay();
    /*0x11701e4*/ System.Collections.IEnumerator InTitleStartFixedFrame();
    /*0x1170250*/ void InTitleComplete(Spine.TrackEntry trackEntry);
    /*0x11702f4*/ void CompleteTitleInitialize();

    class <CoDelay>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TitleTest <>4__this;

        /*0xcd1430*/ <CoDelay>d__3(int <>1__state);
        /*0xcd145c*/ void System.IDisposable.Dispose();
        /*0xcd1460*/ bool MoveNext();
        /*0xcd1604*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd160c*/ void System.Collections.IEnumerator.Reset();
        /*0xcd164c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <InTitleStartFixedFrame>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TitleTest <>4__this;

        /*0xcd1654*/ <InTitleStartFixedFrame>d__4(int <>1__state);
        /*0xcd1680*/ void System.IDisposable.Dispose();
        /*0xcd1684*/ bool MoveNext();
        /*0xcd1740*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1748*/ void System.Collections.IEnumerator.Reset();
        /*0xcd1788*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ColorChangedEvent : UnityEngine.Events.UnityEvent<UnityEngine.Color>
{
    /*0x10dfda8*/ ColorChangedEvent();
}

class HSVChangedEvent : UnityEngine.Events.UnityEvent<float, float, float>
{
    /*0x10f677c*/ HSVChangedEvent();
}

class TestCompression : UnityEngine.MonoBehaviour
{
    /*0x11688fc*/ TestCompression();
    /*0x11688f4*/ void Start();
    /*0x11688f8*/ void Update();
}

namespace JsonSyncKey
{
    class Anim
    {
        static string VERSION = "Version";
        static string TOTAL_EVENT_COUNT = "TotalEventCount";
        static string ANIMATION_CLIP = "sAnimState";
        static string TIME_TOTAL = "timeTotal";
        static string TIME_HIT = "timeHit";
        static string NORMAL_HIT_RATIO = "normalHitRatio";
        static string EVENT_TYPE = "sEventType";
        static string EFFECT_NAME = "sEffectName";
        static string EFFECT_TARGET_TYPE = "sEffectTargetType";
        static string EFFECT_OWNER_TYPE = "sEffectOwnerType";
        static string SOUND_NAME = "sSoundName";
        static string SOUND_PLAY_DELAY = "fSoundPlayDelay";
        static string PROJECTTILE_POSITION_TYPE = "sProjectilePositionType";
        static string PROJECTTILE_NAME = "sProjectileName";
        static string UNIT_SHADER_TYPE = "sUnitShaderType";
        static string UNIT_SHADER_DURATION = "fUnitShaderDruation";
        static string SKILL_FX_ID = "sSkillFXID";
        static string SOUND_ASSET_BUNDLE_TYPE = "sSoundAssetBundleType";
        static string SCFX_TIME_EXECUTE_TRANS = "_scfx_time_execute_trans";
        static string SCFX_TIME_UNDO_TRANS = "_scfx_time_undo_trans";
        static string SCFX_TIME_KEEP = "_scfx_time_keep";
        static string SCFX_SHAKE_POWER = "_scfx_shake_power";

        /*0xedc9f0*/ Anim();
    }
}

namespace Spine
{
    namespace Unity
    {
        namespace Modules
        {
            class SkeletonGraphicMultiObject : UnityEngine.MonoBehaviour, Spine.Unity.IAnimationStateComponent, Spine.Unity.ISkeletonComponent, Spine.Unity.ISkeletonAnimation, Spine.Unity.IHasSkeletonDataAsset
            {
                /*0x18*/ Spine.Unity.SkeletonDataAsset skeletonDataAsset;
                /*0x20*/ string initialSkinName;
                /*0x28*/ string startingAnimation;
                /*0x30*/ bool startingLoop;
                /*0x34*/ float timeScale;
                /*0x38*/ bool unscaledTime;
                /*0x39*/ bool freeze;
                /*0x40*/ UnityEngine.Material material;
                /*0x48*/ System.Collections.Generic.List<UnityEngine.CanvasRenderer> canvasRenderers;
                /*0x50*/ Spine.Unity.UpdateBonesDelegate UpdateLocal;
                /*0x58*/ Spine.Unity.UpdateBonesDelegate UpdateWorld;
                /*0x60*/ Spine.Unity.UpdateBonesDelegate UpdateComplete;
                /*0x68*/ Spine.Skeleton <Skeleton>k__BackingField;
                /*0x70*/ Spine.AnimationState <AnimationState>k__BackingField;
                /*0x78*/ bool passiveUpdate;
                /*0x80*/ Spine.Unity.MeshGenerator meshGenerator;
                /*0x88*/ Spine.Unity.SkeletonRendererInstruction currentInstruction;
                /*0x90*/ Spine.ExposedList<UnityEngine.Mesh> meshes;
                /*0x98*/ UnityEngine.Canvas canvas;
                /*0xa0*/ System.Collections.Generic.Dictionary<Spine.Slot, UnityEngine.Material> customSlotMaterialDic;
                /*0xa8*/ System.Collections.Generic.List<Spine.Slot> customSlotMaterialList;

                /*0x15102e4*/ SkeletonGraphicMultiObject();
                /*0x150ecb8*/ Spine.Unity.SkeletonDataAsset get_SkeletonDataAsset();
                /*0x150ecc0*/ void set_SkeletonDataAsset(Spine.Unity.SkeletonDataAsset value);
                /*0x150ecc8*/ void add_UpdateLocal(Spine.Unity.UpdateBonesDelegate value);
                /*0x150ed68*/ void remove_UpdateLocal(Spine.Unity.UpdateBonesDelegate value);
                /*0x150ee08*/ void add_UpdateWorld(Spine.Unity.UpdateBonesDelegate value);
                /*0x150eea8*/ void remove_UpdateWorld(Spine.Unity.UpdateBonesDelegate value);
                /*0x150ef48*/ void add_UpdateComplete(Spine.Unity.UpdateBonesDelegate value);
                /*0x150efe8*/ void remove_UpdateComplete(Spine.Unity.UpdateBonesDelegate value);
                /*0x150f088*/ Spine.Skeleton get_Skeleton();
                /*0x150f090*/ void set_Skeleton(Spine.Skeleton value);
                /*0x150f098*/ Spine.AnimationState get_AnimationState();
                /*0x150f0a0*/ void set_AnimationState(Spine.AnimationState value);
                /*0x150f0a8*/ Spine.Unity.MeshGenerator get_MeshGenerator();
                /*0x150f0b0*/ bool get_IsValid();
                /*0x150f0c0*/ UnityEngine.Canvas get_Canvas();
                /*0x150f184*/ UnityEngine.Bounds GetMeshBounds();
                /*0x150fae4*/ void OnValidate();
                /*0x150fc0c*/ void Awake();
                /*0x150fc20*/ void Clear();
                /*0x150feb8*/ void TrimRenderers();
                /*0x1510110*/ void Update();
                /*0x150fb28*/ void Update(float deltaTime);
                /*0x150fbfc*/ void LateUpdate();
                /*0x150f290*/ void Initialize(bool overwrite);
                /*0x150f4bc*/ void UpdateMesh();
                /*0x1510168*/ UnityEngine.Material SetCustomSlotMaterials(System.Collections.Generic.List<Spine.Slot> _lisCustomSlot);
            }
        }
    }
}

namespace UnityEngine
{
    namespace EventSystems
    {
        class GamePadInputModule : UnityEngine.EventSystems.BaseInputModule
        {
            /*0x48*/ float m_PrevActionTime;
            /*0x4c*/ UnityEngine.Vector2 m_LastMoveVector;
            /*0x54*/ int m_ConsecutiveMoveCount;
            /*0x58*/ string m_HorizontalAxis;
            /*0x60*/ string m_VerticalAxis;
            /*0x68*/ string m_SubmitButton;
            /*0x70*/ string m_CancelButton;
            /*0x78*/ float m_InputActionsPerSecond;
            /*0x7c*/ float m_RepeatDelay;

            /*0xeccafc*/ GamePadInputModule();
            /*0xeccbb0*/ float get_inputActionsPerSecond();
            /*0xeccbb8*/ void set_inputActionsPerSecond(float value);
            /*0xeccbc0*/ float get_repeatDelay();
            /*0xeccbc8*/ void set_repeatDelay(float value);
            /*0xeccbd0*/ string get_horizontalAxis();
            /*0xeccbd8*/ void set_horizontalAxis(string value);
            /*0xeccbe0*/ string get_verticalAxis();
            /*0xeccbe8*/ void set_verticalAxis(string value);
            /*0xeccbf0*/ string get_submitButton();
            /*0xeccbf8*/ void set_submitButton(string value);
            /*0xeccc00*/ string get_cancelButton();
            /*0xeccc08*/ void set_cancelButton(string value);
            /*0xeccc10*/ bool ShouldActivateModule();
            /*0xeccc8c*/ void ActivateModule();
            /*0xecce04*/ void DeactivateModule();
            /*0xecce0c*/ void Process();
            /*0xecd200*/ bool SendSubmitEventToSelectedObject();
            /*0xecd428*/ UnityEngine.Vector2 GetRawMoveVector();
            /*0xeccfcc*/ bool SendMoveEventToSelectedObject();
            /*0xecce68*/ bool SendUpdateEventToSelectedObject();
        }

        namespace Extensions
        {
            class AimerInputModule : UnityEngine.EventSystems.PointerInputModule
            {
                static /*0x0*/ UnityEngine.GameObject objectUnderAimer;
                /*0x58*/ string activateAxis;
                /*0x60*/ UnityEngine.Vector2 aimerOffset;

                /*0xeda930*/ AimerInputModule();
                /*0xeda984*/ void ActivateModule();
                /*0xedaa88*/ void Process();
                /*0xedb248*/ UnityEngine.EventSystems.PointerEventData GetAimerPointerEventData();
                /*0xedab2c*/ void ProcessInteraction(UnityEngine.EventSystems.PointerEventData pointer, bool pressed, bool released);
                /*0xedb390*/ void DeactivateModule();
            }
        }
    }

    namespace SignInWithApple
    {
        enum UserDetectionStatus
        {
            LikelyReal = 0,
            Unknown = 1,
            Unsupported = 2,
        }

        enum UserCredentialState
        {
            Revoked = 0,
            Authorized = 1,
            NotFound = 2,
        }

        struct UserInfo
        {
            /*0x10*/ string userId;
            /*0x18*/ string email;
            /*0x20*/ string displayName;
            /*0x28*/ string idToken;
            /*0x30*/ string error;
            /*0x38*/ UnityEngine.SignInWithApple.UserDetectionStatus userDetectionStatus;
        }

        class SignInWithAppleEvent : UnityEngine.Events.UnityEvent<UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs>
        {
            /*0xe2a9f0*/ SignInWithAppleEvent();
        }

        class SignInWithApple : UnityEngine.MonoBehaviour
        {
            static /*0x0*/ UnityEngine.SignInWithApple.SignInWithApple.Callback s_LoginCompletedCallback;
            static /*0x8*/ UnityEngine.SignInWithApple.SignInWithApple.Callback s_CredentialStateCallback;
            static /*0x10*/ System.Collections.Generic.Queue<System.Action> s_EventQueue;
            /*0x18*/ UnityEngine.SignInWithApple.SignInWithAppleEvent onLogin;
            /*0x20*/ UnityEngine.SignInWithApple.SignInWithAppleEvent onCredentialState;
            /*0x28*/ UnityEngine.SignInWithApple.SignInWithAppleEvent onError;

            static /*0xe2a968*/ SignInWithApple();
            static /*0xe29fe4*/ void LoginCompletedCallback(int result, UnityEngine.SignInWithApple.UserInfo info);
            static /*0xe2a0c0*/ void GetCredentialStateCallback(UnityEngine.SignInWithApple.UserCredentialState state);
            /*0xe2a960*/ SignInWithApple();
            /*0xe2a19c*/ void GetCredentialState(string userID);
            /*0xe2a228*/ void GetCredentialState(string userID, UnityEngine.SignInWithApple.SignInWithApple.Callback callback);
            /*0xe2a330*/ void GetCredentialStateInternal(string userID);
            /*0xe2a334*/ void Login();
            /*0xe2a3b0*/ void Login(UnityEngine.SignInWithApple.SignInWithApple.Callback callback);
            /*0xe2a484*/ void LoginInternal();
            /*0xe2a488*/ void TriggerOnLoginEvent(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
            /*0xe2a71c*/ void TriggerCredentialStateEvent(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
            /*0xe2a5f4*/ void TriggerOnErrorEvent(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
            /*0xe2a888*/ void Update();

            struct CallbackArgs
            {
                /*0x10*/ UnityEngine.SignInWithApple.UserCredentialState credentialState;
                /*0x18*/ UnityEngine.SignInWithApple.UserInfo userInfo;
                /*0x48*/ string error;
            }

            class Callback : System.MulticastDelegate
            {
                /*0xcbea9c*/ Callback(object object, nint method);
                /*0xcbeafc*/ void Invoke(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
                /*0xcbee04*/ System.IAsyncResult BeginInvoke(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args, System.AsyncCallback callback, object object);
                /*0xcbee94*/ void EndInvoke(System.IAsyncResult result);
            }

            class LoginCompleted : System.MulticastDelegate
            {
                /*0xcbf1e8*/ LoginCompleted(object object, nint method);
                /*0xcbf248*/ void Invoke(int result, UnityEngine.SignInWithApple.UserInfo info);
                /*0xcbf550*/ System.IAsyncResult BeginInvoke(int result, UnityEngine.SignInWithApple.UserInfo info, System.AsyncCallback callback, object object);
                /*0xcbf60c*/ void EndInvoke(System.IAsyncResult result);
            }

            class GetCredentialStateCompleted : System.MulticastDelegate
            {
                /*0xcbeea0*/ GetCredentialStateCompleted(object object, nint method);
                /*0xcbef00*/ void Invoke(UnityEngine.SignInWithApple.UserCredentialState state);
                /*0xcbf154*/ System.IAsyncResult BeginInvoke(UnityEngine.SignInWithApple.UserCredentialState state, System.AsyncCallback callback, object object);
                /*0xcbf1dc*/ void EndInvoke(System.IAsyncResult result);
            }

            class <>c__DisplayClass18_0
            {
                /*0x10*/ UnityEngine.SignInWithApple.SignInWithApple <>4__this;
                /*0x18*/ UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args;

                /*0xcbe8f8*/ <>c__DisplayClass18_0();
                /*0xcbe900*/ void <TriggerOnLoginEvent>b__0();
            }

            class <>c__DisplayClass19_0
            {
                /*0x10*/ UnityEngine.SignInWithApple.SignInWithApple <>4__this;
                /*0x18*/ UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args;

                /*0xcbe984*/ <>c__DisplayClass19_0();
                /*0xcbe98c*/ void <TriggerCredentialStateEvent>b__0();
            }

            class <>c__DisplayClass20_0
            {
                /*0x10*/ UnityEngine.SignInWithApple.SignInWithApple <>4__this;
                /*0x18*/ UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args;

                /*0xcbea10*/ <>c__DisplayClass20_0();
                /*0xcbea18*/ void <TriggerOnErrorEvent>b__0();
            }
        }
    }

    namespace UI
    {
        class LoopHorizontalScrollRect : UnityEngine.UI.LoopScrollRect
        {
            /*0xfbd7f4*/ LoopHorizontalScrollRect();
            /*0xfbca78*/ float GetSize(UnityEngine.RectTransform item);
            /*0xfbcca8*/ float GetDimension(UnityEngine.Vector2 vector);
            /*0xfbccb0*/ UnityEngine.Vector2 GetVector(float value);
            /*0xfbccbc*/ void Awake();
            /*0xfbcdd4*/ bool UpdateItems(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        }

        class LoopScrollDataSource
        {
            /*0xfbd930*/ LoopScrollDataSource();
            void ProvideData(UnityEngine.Transform transform, int idx);
        }

        class LoopScrollSendIndexSource : UnityEngine.UI.LoopScrollDataSource
        {
            static /*0x0*/ UnityEngine.UI.LoopScrollSendIndexSource Instance;

            static /*0xddde80*/ LoopScrollSendIndexSource();
            /*0xdddde8*/ LoopScrollSendIndexSource();
            /*0xddddf0*/ void ProvideData(UnityEngine.Transform transform, int idx);
        }

        class LoopScrollArraySource<T> : UnityEngine.UI.LoopScrollDataSource
        {
            /*0x0*/ T[] objectsToFill;

            LoopScrollArraySource(T[] objectsToFill);
            void ProvideData(UnityEngine.Transform transform, int idx);
        }

        class LoopScrollPrefabSource
        {
            /*0x10*/ UnityEngine.GameObject prefab;
            /*0x18*/ int poolSize;
            /*0x1c*/ bool inited;

            /*0xfbda00*/ LoopScrollPrefabSource();
            T GetObject<T>(AssetBundleType _assetBundleType);
            /*0xfbd938*/ void ReturnObject(UnityEngine.Transform go);
        }

        class LoopScrollRect : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IInitializePotentialDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IScrollHandler, UnityEngine.UI.ICanvasElement, UnityEngine.UI.ILayoutElement, UnityEngine.UI.ILayoutGroup, UnityEngine.UI.ILayoutController
        {
            /*0x18*/ AssetBundleType m_eAssetbundleType;
            /*0x20*/ System.Action<int, UnityEngine.Component> eventItemUpdate;
            /*0x28*/ UnityEngine.UI.LoopScrollPrefabSource prefabSource;
            /*0x30*/ int totalCount;
            /*0x38*/ UnityEngine.UI.LoopScrollDataSource dataSource;
            /*0x40*/ float threshold;
            /*0x44*/ bool reverseDirection;
            /*0x48*/ float rubberScale;
            /*0x4c*/ int itemTypeStart;
            /*0x50*/ int itemTypeEnd;
            /*0x54*/ int directionSign;
            /*0x58*/ float m_ContentSpacing;
            /*0x60*/ UnityEngine.UI.GridLayoutGroup m_GridLayout;
            /*0x68*/ int m_ContentConstraintCount;
            /*0x70*/ UnityEngine.RectTransform m_Content;
            /*0x78*/ bool m_Horizontal;
            /*0x79*/ bool m_Vertical;
            /*0x7c*/ UnityEngine.UI.LoopScrollRect.MovementType m_MovementType;
            /*0x80*/ float m_Elasticity;
            /*0x84*/ bool m_Inertia;
            /*0x88*/ float m_DecelerationRate;
            /*0x8c*/ float m_ScrollSensitivity;
            /*0x90*/ UnityEngine.RectTransform m_Viewport;
            /*0x98*/ UnityEngine.UI.Scrollbar m_HorizontalScrollbar;
            /*0xa0*/ UnityEngine.UI.Scrollbar m_VerticalScrollbar;
            /*0xa8*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility m_HorizontalScrollbarVisibility;
            /*0xac*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility m_VerticalScrollbarVisibility;
            /*0xb0*/ float m_HorizontalScrollbarSpacing;
            /*0xb4*/ float m_VerticalScrollbarSpacing;
            /*0xb8*/ UnityEngine.UI.LoopScrollRect.ScrollRectEvent m_OnValueChanged;
            /*0xc0*/ UnityEngine.Vector2 m_PointerStartLocalCursor;
            /*0xc8*/ UnityEngine.Vector2 m_ContentStartPosition;
            /*0xd0*/ UnityEngine.RectTransform m_ViewRect;
            /*0xd8*/ UnityEngine.Bounds m_ContentBounds;
            /*0xf0*/ UnityEngine.Bounds m_ViewBounds;
            /*0x108*/ UnityEngine.Vector2 m_Velocity;
            /*0x110*/ bool m_Dragging;
            /*0x114*/ UnityEngine.Vector2 m_PrevPosition;
            /*0x11c*/ UnityEngine.Bounds m_PrevContentBounds;
            /*0x134*/ UnityEngine.Bounds m_PrevViewBounds;
            /*0x14c*/ bool m_HasRebuiltLayout;
            /*0x14d*/ bool m_HSliderExpand;
            /*0x14e*/ bool m_VSliderExpand;
            /*0x150*/ float m_HSliderHeight;
            /*0x154*/ float m_VSliderWidth;
            /*0x158*/ UnityEngine.RectTransform m_Rect;
            /*0x160*/ UnityEngine.RectTransform m_HorizontalScrollbarRect;
            /*0x168*/ UnityEngine.RectTransform m_VerticalScrollbarRect;
            /*0x170*/ UnityEngine.DrivenRectTransformTracker m_Tracker;
            /*0x174*/ float <flexibleWidth>k__BackingField;
            /*0x178*/ UnityEngine.Vector3[] m_Corners;

            static /*0xfc03d4*/ float RubberDelta(float overStretching, float viewSize);
            /*0xfbd7f8*/ LoopScrollRect();
            /*0xfbda10*/ void set_objectsToFill(object[] value);
            float GetSize(UnityEngine.RectTransform item);
            float GetDimension(UnityEngine.Vector2 vector);
            UnityEngine.Vector2 GetVector(float value);
            /*0xfbcb30*/ float get_contentSpacing();
            /*0xfbdad4*/ int get_contentConstraintCount();
            /*0xfbdc24*/ int get_StartLine();
            /*0xfbdc54*/ int get_CurrentLines();
            /*0xfbdc88*/ int get_TotalLines();
            /*0xfbdcb8*/ bool UpdateItems(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
            /*0xfbdcc0*/ UnityEngine.RectTransform get_content();
            /*0xfbdcc8*/ void set_content(UnityEngine.RectTransform value);
            /*0xfbdcd0*/ bool get_horizontal();
            /*0xfbdcd8*/ void set_horizontal(bool value);
            /*0xfbdce4*/ bool get_vertical();
            /*0xfbdcec*/ void set_vertical(bool value);
            /*0xfbdcf8*/ UnityEngine.UI.LoopScrollRect.MovementType get_movementType();
            /*0xfbdd00*/ void set_movementType(UnityEngine.UI.LoopScrollRect.MovementType value);
            /*0xfbdd08*/ float get_elasticity();
            /*0xfbdd10*/ void set_elasticity(float value);
            /*0xfbdd18*/ bool get_inertia();
            /*0xfbdd20*/ void set_inertia(bool value);
            /*0xfbdd2c*/ float get_decelerationRate();
            /*0xfbdd34*/ void set_decelerationRate(float value);
            /*0xfbdd3c*/ float get_scrollSensitivity();
            /*0xfbdd44*/ void set_scrollSensitivity(float value);
            /*0xfbdd4c*/ UnityEngine.RectTransform get_viewport();
            /*0xfbdd54*/ void set_viewport(UnityEngine.RectTransform value);
            /*0xfbde28*/ UnityEngine.UI.Scrollbar get_horizontalScrollbar();
            /*0xfbde30*/ void set_horizontalScrollbar(UnityEngine.UI.Scrollbar value);
            /*0xfbdfdc*/ UnityEngine.UI.Scrollbar get_verticalScrollbar();
            /*0xfbdfe4*/ void set_verticalScrollbar(UnityEngine.UI.Scrollbar value);
            /*0xfbe190*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility get_horizontalScrollbarVisibility();
            /*0xfbe198*/ void set_horizontalScrollbarVisibility(UnityEngine.UI.LoopScrollRect.ScrollbarVisibility value);
            /*0xfbe1a0*/ UnityEngine.UI.LoopScrollRect.ScrollbarVisibility get_verticalScrollbarVisibility();
            /*0xfbe1a8*/ void set_verticalScrollbarVisibility(UnityEngine.UI.LoopScrollRect.ScrollbarVisibility value);
            /*0xfbe1b0*/ float get_horizontalScrollbarSpacing();
            /*0xfbe1b8*/ void set_horizontalScrollbarSpacing(float value);
            /*0xfbe254*/ float get_verticalScrollbarSpacing();
            /*0xfbe25c*/ void set_verticalScrollbarSpacing(float value);
            /*0xfbe264*/ UnityEngine.UI.LoopScrollRect.ScrollRectEvent get_onValueChanged();
            /*0xfbe26c*/ void set_onValueChanged(UnityEngine.UI.LoopScrollRect.ScrollRectEvent value);
            /*0xfbe274*/ UnityEngine.RectTransform get_viewRect();
            /*0xfbe370*/ UnityEngine.Vector2 get_velocity();
            /*0xfbe37c*/ void set_velocity(UnityEngine.Vector2 value);
            /*0xfbe388*/ UnityEngine.RectTransform get_rectTransform();
            /*0xfbe428*/ void ClearCells();
            /*0xfbe4c0*/ void SrollToCell(int index, float speed);
            /*0xfbe6f0*/ System.Collections.IEnumerator ScrollToCellCoroutine(int index, float speed);
            /*0xfbe77c*/ void RefreshCells();
            /*0xfbe878*/ void RefillCellsFromEnd(int offset);
            /*0xfbeaac*/ void RefillCells(int offset, bool fillViewRect);
            /*0xfbd1fc*/ float NewItemAtStart();
            /*0xfbd5dc*/ float DeleteItemAtStart();
            /*0xfbd038*/ float NewItemAtEnd();
            /*0xfbd39c*/ float DeleteItemAtEnd();
            T InstantiateNextItem<T>(int itemIdx);
            /*0xfbed14*/ void Rebuild(UnityEngine.UI.CanvasUpdate executing);
            /*0xfbf7d4*/ void LayoutComplete();
            /*0xfbf7d8*/ void GraphicUpdateComplete();
            /*0xfbed78*/ void UpdateCachedData();
            /*0xfbf7dc*/ void OnEnable();
            /*0xfbf9b8*/ void OnDisable();
            /*0xfbfbfc*/ bool IsActive();
            /*0xfbfc88*/ void EnsureLayoutHasRebuilt();
            /*0xfbfd08*/ void StopMovement();
            /*0xfbfd34*/ void OnScroll(UnityEngine.EventSystems.PointerEventData data);
            /*0xfc0044*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc0080*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc018c*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc01b0*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
            /*0xfc0424*/ void SetContentAnchoredPosition(UnityEngine.Vector2 position);
            /*0xfc04ec*/ void LateUpdate();
            /*0xfbf708*/ void UpdatePrevData();
            /*0xfbf43c*/ void UpdateScrollbars(UnityEngine.Vector2 offset);
            /*0xfc0b78*/ UnityEngine.Vector2 get_normalizedPosition();
            /*0xfc0e5c*/ void set_normalizedPosition(UnityEngine.Vector2 value);
            /*0xfc0bb4*/ float get_horizontalNormalizedPosition();
            /*0xfc11a0*/ void set_horizontalNormalizedPosition(float value);
            /*0xfc0d08*/ float get_verticalNormalizedPosition();
            /*0xfc11a8*/ void set_verticalNormalizedPosition(float value);
            /*0xfc11b0*/ void SetHorizontalNormalizedPosition(float value);
            /*0xfc11b8*/ void SetVerticalNormalizedPosition(float value);
            /*0xfc0e98*/ void SetNormalizedPosition(float value, int axis);
            /*0xfc11c0*/ void OnRectTransformDimensionsChange();
            /*0xfc11c4*/ bool get_hScrollingNeeded();
            /*0xfc122c*/ bool get_vScrollingNeeded();
            /*0xfc1294*/ void CalculateLayoutInputHorizontal();
            /*0xfc1298*/ void CalculateLayoutInputVertical();
            /*0xfc129c*/ float get_minWidth();
            /*0xfc12a4*/ float get_preferredWidth();
            /*0xfc12ac*/ float get_flexibleWidth();
            /*0xfc12b4*/ void set_flexibleWidth(float value);
            /*0xfc12bc*/ float get_minHeight();
            /*0xfc12c4*/ float get_preferredHeight();
            /*0xfc12cc*/ float get_flexibleHeight();
            /*0xfc12d4*/ int get_layoutPriority();
            /*0xfc12dc*/ void SetLayoutHorizontal();
            /*0xfc1a20*/ void SetLayoutVertical();
            /*0xfc09f4*/ void UpdateScrollbarVisibility();
            /*0xfc1b08*/ void UpdateScrollbarLayout();
            /*0xfbf14c*/ void UpdateBounds(bool updateItems);
            /*0xfc17b0*/ UnityEngine.Bounds GetBounds();
            /*0xfc1d84*/ UnityEngine.Bounds GetBounds4Item(int index);
            /*0xfbfe80*/ UnityEngine.Vector2 CalculateOffset(UnityEngine.Vector2 delta);
            /*0xfbe1c0*/ void SetDirty();
            /*0xfbdd5c*/ void SetDirtyCaching();
            /*0xfc2094*/ UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform();

            enum MovementType
            {
                Unrestricted = 0,
                Elastic = 1,
                Clamped = 2,
            }

            enum ScrollbarVisibility
            {
                Permanent = 0,
                AutoHide = 1,
                AutoHideAndExpandViewport = 2,
            }

            class ScrollRectEvent : UnityEngine.Events.UnityEvent<UnityEngine.Vector2>
            {
                /*0xe5c4a0*/ ScrollRectEvent();
            }

            class <ScrollToCellCoroutine>d__126 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ object <>2__current;
                /*0x20*/ UnityEngine.UI.LoopScrollRect <>4__this;
                /*0x28*/ int index;
                /*0x2c*/ float speed;
                /*0x30*/ bool <needMoving>5__2;

                /*0xe5bfa4*/ <ScrollToCellCoroutine>d__126(int <>1__state);
                /*0xe5bfd0*/ void System.IDisposable.Dispose();
                /*0xe5bfd4*/ bool MoveNext();
                /*0xe5c450*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                /*0xe5c458*/ void System.Collections.IEnumerator.Reset();
                /*0xe5c498*/ object System.Collections.IEnumerator.get_Current();
            }
        }

        class LoopVerticalScrollRect : UnityEngine.UI.LoopScrollRect
        {
            /*0xdde354*/ LoopVerticalScrollRect();
            /*0xdddee0*/ float GetSize(UnityEngine.RectTransform item);
            /*0xdddfa4*/ float GetDimension(UnityEngine.Vector2 vector);
            /*0xdddfac*/ UnityEngine.Vector2 GetVector(float value);
            /*0xdddfb8*/ void Awake();
            /*0xdde0d0*/ bool UpdateItems(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        }

        class ExtensionsToggle : UnityEngine.UI.Selectable, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.UI.ICanvasElement
        {
            /*0xf8*/ string UniqueID;
            /*0x100*/ UnityEngine.UI.ExtensionsToggle.ToggleTransition toggleTransition;
            /*0x108*/ UnityEngine.UI.Graphic graphic;
            /*0x110*/ UnityEngine.UI.ExtensionsToggleGroup m_Group;
            /*0x118*/ UnityEngine.UI.ExtensionsToggle.ToggleEvent onValueChanged;
            /*0x120*/ UnityEngine.UI.ExtensionsToggle.ToggleEventObject onToggleChanged;
            /*0x128*/ bool m_IsOn;

            /*0x11d8850*/ ExtensionsToggle();
            /*0x11d85b0*/ UnityEngine.UI.ExtensionsToggleGroup get_Group();
            /*0x11d85b8*/ void set_Group(UnityEngine.UI.ExtensionsToggleGroup value);
            /*0x11d8914*/ void Rebuild(UnityEngine.UI.CanvasUpdate executing);
            /*0x11d8918*/ void LayoutComplete();
            /*0x11d891c*/ void GraphicUpdateComplete();
            /*0x11d8920*/ void OnEnable();
            /*0x11d895c*/ void OnDisable();
            /*0x11d898c*/ void OnDidApplyAnimationProperties();
            /*0x11d85e8*/ void SetToggleGroup(UnityEngine.UI.ExtensionsToggleGroup newGroup, bool setMemberValue);
            /*0x11d8e24*/ bool get_IsOn();
            /*0x11d8e2c*/ void set_IsOn(bool value);
            /*0x11d8a68*/ void Set(bool value);
            /*0x11d8e38*/ void Set(bool value, bool sendCallback);
            /*0x11d8780*/ void PlayEffect(bool instant);
            /*0x11d9118*/ void Start();
            /*0x11d9120*/ void InternalToggle();
            /*0x11d9184*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
            /*0x11d91a4*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
            /*0x11d91a8*/ UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform();

            enum ToggleTransition
            {
                None = 0,
                Fade = 1,
            }

            class ToggleEvent : UnityEngine.Events.UnityEvent<bool>
            {
                /*0x10a015c*/ ToggleEvent();
            }

            class ToggleEventObject : UnityEngine.Events.UnityEvent<UnityEngine.UI.ExtensionsToggle>
            {
                /*0x10a01a8*/ ToggleEventObject();
            }
        }

        class ExtensionsToggleGroup : UnityEngine.EventSystems.UIBehaviour
        {
            /*0x18*/ bool m_AllowSwitchOff;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UI.ExtensionsToggle> m_Toggles;
            /*0x28*/ UnityEngine.UI.ExtensionsToggleGroup.ToggleGroupEvent onToggleGroupChanged;
            /*0x30*/ UnityEngine.UI.ExtensionsToggleGroup.ToggleGroupEvent onToggleGroupToggleChanged;
            /*0x38*/ UnityEngine.UI.ExtensionsToggle <SelectedToggle>k__BackingField;

            /*0x11d91d4*/ ExtensionsToggleGroup();
            /*0x11d91b0*/ bool get_AllowSwitchOff();
            /*0x11d91b8*/ void set_AllowSwitchOff(bool value);
            /*0x11d91c4*/ UnityEngine.UI.ExtensionsToggle get_SelectedToggle();
            /*0x11d91cc*/ void set_SelectedToggle(UnityEngine.UI.ExtensionsToggle value);
            /*0x11d9298*/ void ValidateToggleIsInGroup(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d8cc4*/ void NotifyToggleOn(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d8a74*/ void UnregisterToggle(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d93f4*/ void NotifyToggleChanged(bool isOn);
            /*0x11d8b9c*/ void RegisterToggle(UnityEngine.UI.ExtensionsToggle toggle);
            /*0x11d8fb0*/ bool AnyTogglesOn();
            /*0x11d9458*/ System.Collections.Generic.IEnumerable<UnityEngine.UI.ExtensionsToggle> ActiveToggles();
            /*0x11d9574*/ void SetAllTogglesOff();
            /*0x11d9628*/ void HasTheGroupToggle(bool value);
            /*0x11d96e8*/ void HasAToggleFlipped(bool value);

            class ToggleGroupEvent : UnityEngine.Events.UnityEvent<bool>
            {
                /*0x10a028c*/ ToggleGroupEvent();
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UI.ExtensionsToggleGroup.<> <>9;
                static /*0x8*/ System.Predicate<UnityEngine.UI.ExtensionsToggle> <>9__18_0;
                static /*0x10*/ System.Func<UnityEngine.UI.ExtensionsToggle, bool> <>9__19_0;

                static /*0x10a01f4*/ <>c();
                /*0x10a0254*/ <>c();
                /*0x10a025c*/ bool <AnyTogglesOn>b__18_0(UnityEngine.UI.ExtensionsToggle x);
                /*0x10a0274*/ bool <ActiveToggles>b__19_0(UnityEngine.UI.ExtensionsToggle x);
            }
        }

        class ReturnKeyTriggersButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.EventSystems.IEventSystemHandler
        {
            /*0x18*/ UnityEngine.EventSystems.EventSystem _system;
            /*0x20*/ UnityEngine.UI.Button button;
            /*0x28*/ bool highlight;
            /*0x2c*/ float highlightDuration;

            /*0x11a66b0*/ ReturnKeyTriggersButton();
            /*0x11a64b8*/ void Start();
            /*0x11a6520*/ void RemoveHighlight();
            /*0x11a65a4*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
        }

        namespace Extensions
        {
            class Accordion : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.Accordion.Transition m_Transition;
                /*0x1c*/ float m_TransitionDuration;

                /*0x1209f48*/ Accordion();
                /*0x1209f28*/ UnityEngine.UI.Extensions.Accordion.Transition get_transition();
                /*0x1209f30*/ void set_transition(UnityEngine.UI.Extensions.Accordion.Transition value);
                /*0x1209f38*/ float get_transitionDuration();
                /*0x1209f40*/ void set_transitionDuration(float value);

                enum Transition
                {
                    Instant = 0,
                    Tween = 1,
                }
            }

            class AccordionElement : UnityEngine.UI.Toggle
            {
                /*0x11c*/ float m_MinHeight;
                /*0x120*/ UnityEngine.UI.Extensions.Accordion m_Accordion;
                /*0x128*/ UnityEngine.RectTransform m_RectTransform;
                /*0x130*/ UnityEngine.UI.LayoutElement m_LayoutElement;
                /*0x138*/ UnityEngine.UI.Extensions.Tweens.TweenRunner<UnityEngine.UI.Extensions.Tweens.FloatTween> m_FloatTweenRunner;

                /*0x1209f5c*/ AccordionElement();
                /*0x120a000*/ void Awake();
                /*0x120a17c*/ void OnValueChanged(bool state);
                /*0x120a2e0*/ float GetExpandedHeight();
                /*0x120a3d0*/ void StartTween(float startFloat, float targetFloat);
                /*0x120a53c*/ void SetHeight(float height);
            }

            class BoxSlider : UnityEngine.UI.Selectable, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IInitializePotentialDragHandler, UnityEngine.UI.ICanvasElement
            {
                /*0xf8*/ UnityEngine.RectTransform m_HandleRect;
                /*0x100*/ float m_MinValue;
                /*0x104*/ float m_MaxValue;
                /*0x108*/ bool m_WholeNumbers;
                /*0x10c*/ float m_ValueX;
                /*0x110*/ float m_ValueY;
                /*0x118*/ UnityEngine.UI.Extensions.BoxSlider.BoxSliderEvent m_OnValueChanged;
                /*0x120*/ UnityEngine.Transform m_HandleTransform;
                /*0x128*/ UnityEngine.RectTransform m_HandleContainerRect;
                /*0x130*/ UnityEngine.Vector2 m_Offset;
                /*0x138*/ UnityEngine.DrivenRectTransformTracker m_Tracker;

                static bool SetClass<T>(ref T currentValue, T newValue);
                static bool SetStruct<T>(ref T currentValue, T newValue);
                /*0x16efde8*/ BoxSlider();
                /*0x16ef620*/ UnityEngine.RectTransform get_HandleRect();
                /*0x16ef628*/ void set_HandleRect(UnityEngine.RectTransform value);
                /*0x16ef91c*/ float get_MinValue();
                /*0x16ef924*/ void set_MinValue(float value);
                /*0x16ef9cc*/ float get_MaxValue();
                /*0x16ef9d4*/ void set_MaxValue(float value);
                /*0x16efa6c*/ bool get_WholeNumbers();
                /*0x16efa74*/ void set_WholeNumbers(bool value);
                /*0x16efb0c*/ float get_ValueX();
                /*0x16efba8*/ void set_ValueX(float value);
                /*0x16efbb0*/ float get_NormalizedValueX();
                /*0x16efc1c*/ void set_NormalizedValueX(float value);
                /*0x16efc5c*/ float get_ValueY();
                /*0x16efcf8*/ void set_ValueY(float value);
                /*0x16efd00*/ float get_NormalizedValueY();
                /*0x16efd6c*/ void set_NormalizedValueY(float value);
                /*0x16efdac*/ UnityEngine.UI.Extensions.BoxSlider.BoxSliderEvent get_OnValueChanged();
                /*0x16efdb4*/ void set_OnValueChanged(UnityEngine.UI.Extensions.BoxSlider.BoxSliderEvent value);
                /*0x16efdbc*/ float get_StepSize();
                /*0x16efe9c*/ void Rebuild(UnityEngine.UI.CanvasUpdate executing);
                /*0x16efea0*/ void LayoutComplete();
                /*0x16efea4*/ void GraphicUpdateComplete();
                /*0x16efea8*/ void OnEnable();
                /*0x16f0194*/ void OnDisable();
                /*0x16ef6a8*/ void UpdateCachedReferences();
                /*0x16ef9bc*/ void SetX(float input);
                /*0x16efef8*/ void SetX(float input, bool sendCallback);
                /*0x16ef9c4*/ void SetY(float input);
                /*0x16f0048*/ void SetY(float input, bool sendCallback);
                /*0x16f01c4*/ void OnRectTransformDimensionsChange();
                /*0x16ef7b4*/ void UpdateVisuals();
                /*0x16f01ec*/ void UpdateDrag(UnityEngine.EventSystems.PointerEventData eventData, UnityEngine.Camera cam);
                /*0x16f0468*/ bool CanDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f04d0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f0698*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f06ec*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x16f0704*/ UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform();

                enum Direction
                {
                    LeftToRight = 0,
                    RightToLeft = 1,
                    BottomToTop = 2,
                    TopToBottom = 3,
                }

                class BoxSliderEvent : UnityEngine.Events.UnityEvent<float, float>
                {
                    /*0xda5174*/ BoxSliderEvent();
                }

                enum Axis
                {
                    Horizontal = 0,
                    Vertical = 1,
                }
            }

            class TiltWindow : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x18*/ UnityEngine.Vector2 range;
                /*0x20*/ UnityEngine.Transform mTrans;
                /*0x28*/ UnityEngine.Quaternion mStart;
                /*0x38*/ UnityEngine.Vector2 mRot;
                /*0x40*/ UnityEngine.Vector2 m_screenPos;

                /*0x116d924*/ TiltWindow();
                /*0x116d790*/ void Start();
                /*0x116d7d0*/ void Update();
                /*0x116d908*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            enum AutoCompleteSearchType
            {
                ArraySort = 0,
                Linq = 1,
            }

            class AutoCompleteComboBox : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color disabledTextColor;
                /*0x28*/ UnityEngine.UI.Extensions.DropDownListItem <SelectedItem>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<string> AvailableOptions;
                /*0x38*/ bool _isPanelActive;
                /*0x39*/ bool _hasDrawnOnce;
                /*0x40*/ UnityEngine.UI.InputField _mainInput;
                /*0x48*/ UnityEngine.RectTransform _inputRT;
                /*0x50*/ UnityEngine.RectTransform _rectTransform;
                /*0x58*/ UnityEngine.RectTransform _overlayRT;
                /*0x60*/ UnityEngine.RectTransform _scrollPanelRT;
                /*0x68*/ UnityEngine.RectTransform _scrollBarRT;
                /*0x70*/ UnityEngine.RectTransform _slidingAreaRT;
                /*0x78*/ UnityEngine.RectTransform _itemsPanelRT;
                /*0x80*/ UnityEngine.Canvas _canvas;
                /*0x88*/ UnityEngine.RectTransform _canvasRT;
                /*0x90*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x98*/ System.Collections.Generic.List<string> _panelItems;
                /*0xa0*/ System.Collections.Generic.List<string> _prunedPanelItems;
                /*0xa8*/ System.Collections.Generic.Dictionary<string, UnityEngine.GameObject> panelObjects;
                /*0xb0*/ UnityEngine.GameObject itemTemplate;
                /*0xb8*/ string <Text>k__BackingField;
                /*0xc0*/ float _scrollBarWidth;
                /*0xc4*/ int _itemsToDisplay;
                /*0xc8*/ bool SelectFirstItemOnStart;
                /*0xc9*/ bool _ChangeInputTextColorBasedOnMatchingItems;
                /*0xcc*/ UnityEngine.Color ValidSelectionTextColor;
                /*0xdc*/ UnityEngine.Color MatchingItemsRemainingTextColor;
                /*0xec*/ UnityEngine.Color NoItemsRemainingTextColor;
                /*0xfc*/ UnityEngine.UI.Extensions.AutoCompleteSearchType autocompleteSearchType;
                /*0x100*/ bool _selectionIsValid;
                /*0x108*/ UnityEngine.UI.Extensions.AutoCompleteComboBox.SelectionTextChangedEvent OnSelectionTextChanged;
                /*0x110*/ UnityEngine.UI.Extensions.AutoCompleteComboBox.SelectionValidityChangedEvent OnSelectionValidityChanged;
                /*0x118*/ UnityEngine.UI.Extensions.AutoCompleteComboBox.SelectionChangedEvent OnSelectionChanged;

                /*0xf87d94*/ AutoCompleteComboBox();
                /*0xf863c8*/ UnityEngine.UI.Extensions.DropDownListItem get_SelectedItem();
                /*0xf863d0*/ void set_SelectedItem(UnityEngine.UI.Extensions.DropDownListItem value);
                /*0xf863d8*/ string get_Text();
                /*0xf863e0*/ void set_Text(string value);
                /*0xf863e8*/ float get_ScrollBarWidth();
                /*0xf863f0*/ void set_ScrollBarWidth(float value);
                /*0xf867dc*/ int get_ItemsToDisplay();
                /*0xf867e4*/ void set_ItemsToDisplay(int value);
                /*0xf867ec*/ bool get_InputColorMatching();
                /*0xf867f4*/ void set_InputColorMatching(bool value);
                /*0xf868d0*/ void Awake();
                /*0xf86e18*/ void Start();
                /*0xf868d4*/ bool Initialize();
                /*0xf86f6c*/ void RebuildPanel();
                /*0xf86f30*/ void OnItemClicked(string item);
                /*0xf863f8*/ void RedrawPanel();
                /*0xf87678*/ void OnValueChanged(string currText);
                /*0xf86808*/ void SetInputTextColor();
                /*0xf86ebc*/ void ToggleDropdownPanel(bool directClick);
                /*0xf877ec*/ void PruneItems(string currText);
                /*0xf87800*/ void PruneItemsLinq(string currText);
                /*0xf87b0c*/ void PruneItemsArray(string currText);

                class SelectionChangedEvent : UnityEngine.Events.UnityEvent<string, bool>
                {
                    /*0xda07d4*/ SelectionChangedEvent();
                }

                class SelectionTextChangedEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xda0820*/ SelectionTextChangedEvent();
                }

                class SelectionValidityChangedEvent : UnityEngine.Events.UnityEvent<bool>
                {
                    /*0xda086c*/ SelectionValidityChangedEvent();
                }

                class <>c__DisplayClass54_0
                {
                    /*0x10*/ string textOfItem;
                    /*0x18*/ UnityEngine.UI.Extensions.AutoCompleteComboBox <>4__this;

                    /*0xda0748*/ <>c__DisplayClass54_0();
                    /*0xda0750*/ void <RebuildPanel>b__0();
                }

                class <>c__DisplayClass61_0
                {
                    /*0x10*/ string currText;

                    /*0xda0774*/ <>c__DisplayClass61_0();
                    /*0xda077c*/ bool <PruneItemsLinq>b__0(string x);
                    /*0xda07b0*/ bool <PruneItemsLinq>b__1(string x);
                }
            }

            class ComboBox : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color disabledTextColor;
                /*0x28*/ UnityEngine.UI.Extensions.DropDownListItem <SelectedItem>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<string> AvailableOptions;
                /*0x38*/ float _scrollBarWidth;
                /*0x3c*/ int _itemsToDisplay;
                /*0x40*/ UnityEngine.UI.Extensions.ComboBox.SelectionChangedEvent OnSelectionChanged;
                /*0x48*/ bool _isPanelActive;
                /*0x49*/ bool _hasDrawnOnce;
                /*0x50*/ UnityEngine.UI.InputField _mainInput;
                /*0x58*/ UnityEngine.RectTransform _inputRT;
                /*0x60*/ UnityEngine.RectTransform _rectTransform;
                /*0x68*/ UnityEngine.RectTransform _overlayRT;
                /*0x70*/ UnityEngine.RectTransform _scrollPanelRT;
                /*0x78*/ UnityEngine.RectTransform _scrollBarRT;
                /*0x80*/ UnityEngine.RectTransform _slidingAreaRT;
                /*0x88*/ UnityEngine.RectTransform _itemsPanelRT;
                /*0x90*/ UnityEngine.Canvas _canvas;
                /*0x98*/ UnityEngine.RectTransform _canvasRT;
                /*0xa0*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0xa8*/ System.Collections.Generic.List<string> _panelItems;
                /*0xb0*/ System.Collections.Generic.Dictionary<string, UnityEngine.GameObject> panelObjects;
                /*0xb8*/ UnityEngine.GameObject itemTemplate;
                /*0xc0*/ string <Text>k__BackingField;

                /*0x10e4598*/ ComboBox();
                /*0x10e33f4*/ UnityEngine.UI.Extensions.DropDownListItem get_SelectedItem();
                /*0x10e33fc*/ void set_SelectedItem(UnityEngine.UI.Extensions.DropDownListItem value);
                /*0x10e3404*/ string get_Text();
                /*0x10e340c*/ void set_Text(string value);
                /*0x10e3414*/ float get_ScrollBarWidth();
                /*0x10e341c*/ void set_ScrollBarWidth(float value);
                /*0x10e3808*/ int get_ItemsToDisplay();
                /*0x10e3810*/ void set_ItemsToDisplay(int value);
                /*0x10e3818*/ void Awake();
                /*0x10e381c*/ bool Initialize();
                /*0x10e3d24*/ void RebuildPanel();
                /*0x10e443c*/ void OnItemClicked(string item);
                /*0x10e3424*/ void RedrawPanel();
                /*0x10e44ec*/ void OnValueChanged(string currText);
                /*0x10e4478*/ void ToggleDropdownPanel(bool directClick);

                class SelectionChangedEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0x106f138*/ SelectionChangedEvent();
                }

                class <>c__DisplayClass38_0
                {
                    /*0x10*/ string textOfItem;
                    /*0x18*/ UnityEngine.UI.Extensions.ComboBox <>4__this;

                    /*0x106f10c*/ <>c__DisplayClass38_0();
                    /*0x106f114*/ void <RebuildPanel>b__0();
                }
            }

            class DropDownList : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color disabledTextColor;
                /*0x28*/ UnityEngine.UI.Extensions.DropDownListItem <SelectedItem>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.DropDownListItem> Items;
                /*0x38*/ bool OverrideHighlighted;
                /*0x39*/ bool _isPanelActive;
                /*0x3a*/ bool _hasDrawnOnce;
                /*0x40*/ UnityEngine.UI.Extensions.DropDownListButton _mainButton;
                /*0x48*/ UnityEngine.RectTransform _rectTransform;
                /*0x50*/ UnityEngine.RectTransform _overlayRT;
                /*0x58*/ UnityEngine.RectTransform _scrollPanelRT;
                /*0x60*/ UnityEngine.RectTransform _scrollBarRT;
                /*0x68*/ UnityEngine.RectTransform _slidingAreaRT;
                /*0x70*/ UnityEngine.RectTransform _itemsPanelRT;
                /*0x78*/ UnityEngine.Canvas _canvas;
                /*0x80*/ UnityEngine.RectTransform _canvasRT;
                /*0x88*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x90*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.DropDownListButton> _panelItems;
                /*0x98*/ UnityEngine.GameObject _itemTemplate;
                /*0xa0*/ float _scrollBarWidth;
                /*0xa4*/ int _selectedIndex;
                /*0xa8*/ int _itemsToDisplay;
                /*0xac*/ bool SelectFirstItemOnStart;
                /*0xb0*/ UnityEngine.UI.Extensions.DropDownList.SelectionChangedEvent OnSelectionChanged;

                /*0x11f4240*/ DropDownList();
                /*0x11f2d8c*/ UnityEngine.UI.Extensions.DropDownListItem get_SelectedItem();
                /*0x11f2d94*/ void set_SelectedItem(UnityEngine.UI.Extensions.DropDownListItem value);
                /*0x11f2d9c*/ float get_ScrollBarWidth();
                /*0x11f2da4*/ void set_ScrollBarWidth(float value);
                /*0x11f3198*/ int get_ItemsToDisplay();
                /*0x11f31a0*/ void set_ItemsToDisplay(int value);
                /*0x11f31a8*/ void Start();
                /*0x11f322c*/ bool Initialize();
                /*0x11f39bc*/ void RebuildPanel();
                /*0x11f37d8*/ void OnItemClicked(int indx);
                /*0x11f3ff0*/ void UpdateSelected();
                /*0x11f2dac*/ void RedrawPanel();
                /*0x11f3714*/ void ToggleDropdownPanel(bool directClick);

                class SelectionChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1079860*/ SelectionChangedEvent();
                }

                class <>c__DisplayClass35_0
                {
                    /*0x10*/ int ii;
                    /*0x18*/ UnityEngine.UI.Extensions.DropDownListItem item;
                    /*0x20*/ UnityEngine.UI.Extensions.DropDownList <>4__this;

                    /*0x1079804*/ <>c__DisplayClass35_0();
                    /*0x107980c*/ void <RebuildPanel>b__0();
                }
            }

            class DropDownListButton
            {
                /*0x10*/ UnityEngine.RectTransform rectTransform;
                /*0x18*/ UnityEngine.UI.Button btn;
                /*0x20*/ UnityEngine.UI.Text txt;
                /*0x28*/ UnityEngine.UI.Image btnImg;
                /*0x30*/ UnityEngine.UI.Image img;
                /*0x38*/ UnityEngine.GameObject gameobject;

                /*0x11f385c*/ DropDownListButton(UnityEngine.GameObject btnObj);
            }

            class DropDownListItem
            {
                /*0x10*/ string _caption;
                /*0x18*/ UnityEngine.Sprite _image;
                /*0x20*/ bool _isDisabled;
                /*0x28*/ string _id;
                /*0x30*/ System.Action OnSelect;
                /*0x38*/ System.Action OnUpdate;

                /*0x11f42dc*/ DropDownListItem(string caption, string inId, UnityEngine.Sprite image, bool disabled, System.Action onSelect);
                /*0x11f425c*/ string get_Caption();
                /*0x11f4264*/ void set_Caption(string value);
                /*0x11f4280*/ UnityEngine.Sprite get_Image();
                /*0x11f4288*/ void set_Image(UnityEngine.Sprite value);
                /*0x11f42a4*/ bool get_IsDisabled();
                /*0x11f42ac*/ void set_IsDisabled(bool value);
                /*0x11f42cc*/ string get_ID();
                /*0x11f42d4*/ void set_ID(string value);
            }

            class CooldownButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x18*/ float cooldownTimeout;
                /*0x1c*/ float cooldownSpeed;
                /*0x20*/ bool cooldownActive;
                /*0x21*/ bool cooldownInEffect;
                /*0x24*/ float cooldownTimeElapsed;
                /*0x28*/ float cooldownTimeRemaining;
                /*0x2c*/ int cooldownPercentRemaining;
                /*0x30*/ int cooldownPercentComplete;
                /*0x38*/ UnityEngine.EventSystems.PointerEventData buttonSource;
                /*0x40*/ UnityEngine.UI.Extensions.CooldownButton.CooldownButtonEvent OnCooldownStart;
                /*0x48*/ UnityEngine.UI.Extensions.CooldownButton.CooldownButtonEvent OnButtonClickDuringCooldown;
                /*0x50*/ UnityEngine.UI.Extensions.CooldownButton.CooldownButtonEvent OnCoolDownFinish;

                /*0xf4ce34*/ CooldownButton();
                /*0xf4cad4*/ float get_CooldownTimeout();
                /*0xf4cadc*/ void set_CooldownTimeout(float value);
                /*0xf4cae4*/ float get_CooldownSpeed();
                /*0xf4caec*/ void set_CooldownSpeed(float value);
                /*0xf4caf4*/ bool get_CooldownInEffect();
                /*0xf4cafc*/ bool get_CooldownActive();
                /*0xf4cb04*/ void set_CooldownActive(bool value);
                /*0xf4cb10*/ float get_CooldownTimeElapsed();
                /*0xf4cb18*/ void set_CooldownTimeElapsed(float value);
                /*0xf4cb20*/ float get_CooldownTimeRemaining();
                /*0xf4cb28*/ int get_CooldownPercentRemaining();
                /*0xf4cb30*/ int get_CooldownPercentComplete();
                /*0xf4cb38*/ void Update();
                /*0xf4cc74*/ void PauseCooldown();
                /*0xf4cc84*/ void RestartCooldown();
                /*0xf4cc98*/ void StartCooldown();
                /*0xf4cbf0*/ void StopCooldown();
                /*0xf4cd7c*/ void CancelCooldown();
                /*0xf4cd84*/ void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);

                class CooldownButtonEvent : UnityEngine.Events.UnityEvent<UnityEngine.EventSystems.PointerEventData.InputButton>
                {
                    /*0x10740a8*/ CooldownButtonEvent();
                }
            }

            class InputFocus : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.InputField _inputField;
                /*0x20*/ bool _ignoreNextActivation;

                /*0x15741b4*/ InputFocus();
                /*0x1573f90*/ void Start();
                /*0x1573fe4*/ void Update();
                /*0x1574058*/ void buttonPressed();
                /*0x1574114*/ void OnEndEdit(string textString);
            }

            class MultiTouchScrollRect : UnityEngine.UI.ScrollRect
            {
                /*0x128*/ int pid;

                /*0x2b439c4*/ MultiTouchScrollRect();
                /*0x2b43968*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2b43988*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2b439b4*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            class RadialSlider : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ bool isPointerDown;
                /*0x19*/ bool isPointerReleased;
                /*0x1a*/ bool lerpInProgress;
                /*0x1c*/ UnityEngine.Vector2 m_localPos;
                /*0x24*/ UnityEngine.Vector2 m_screenPos;
                /*0x2c*/ float m_targetAngle;
                /*0x30*/ float m_lerpTargetAngle;
                /*0x34*/ float m_startAngle;
                /*0x38*/ float m_currentLerpTime;
                /*0x3c*/ float m_lerpTime;
                /*0x40*/ UnityEngine.Camera m_eventCamera;
                /*0x48*/ UnityEngine.UI.Image m_image;
                /*0x50*/ UnityEngine.Color m_startColor;
                /*0x60*/ UnityEngine.Color m_endColor;
                /*0x70*/ bool m_lerpToTarget;
                /*0x78*/ UnityEngine.AnimationCurve m_lerpCurve;
                /*0x80*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderValueChangedEvent _onValueChanged;
                /*0x88*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderTextValueChangedEvent _onTextValueChanged;

                /*0x11ba080*/ RadialSlider();
                /*0x11b987c*/ float get_Angle();
                /*0x11b9994*/ void set_Angle(float value);
                /*0x11b9a84*/ float get_Value();
                /*0x11b9aa4*/ void set_Value(float value);
                /*0x11b9ab4*/ UnityEngine.Color get_EndColor();
                /*0x11b9ac0*/ void set_EndColor(UnityEngine.Color value);
                /*0x11b9acc*/ UnityEngine.Color get_StartColor();
                /*0x11b9ad8*/ void set_StartColor(UnityEngine.Color value);
                /*0x11b9ae4*/ bool get_LerpToTarget();
                /*0x11b9aec*/ void set_LerpToTarget(bool value);
                /*0x11b9af8*/ UnityEngine.AnimationCurve get_LerpCurve();
                /*0x11b9b00*/ void set_LerpCurve(UnityEngine.AnimationCurve value);
                /*0x11b9b80*/ bool get_LerpInProgress();
                /*0x11b98a8*/ UnityEngine.UI.Image get_RadialImage();
                /*0x11b9b88*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderValueChangedEvent get_onValueChanged();
                /*0x11b9b90*/ void set_onValueChanged(UnityEngine.UI.Extensions.RadialSlider.RadialSliderValueChangedEvent value);
                /*0x11b9b98*/ UnityEngine.UI.Extensions.RadialSlider.RadialSliderTextValueChangedEvent get_onTextValueChanged();
                /*0x11b9ba0*/ void set_onTextValueChanged(UnityEngine.UI.Extensions.RadialSlider.RadialSliderTextValueChangedEvent value);
                /*0x11b9ba8*/ void Awake();
                /*0x11b9c4c*/ void Update();
                /*0x11b99b0*/ void StartLerp(float targetAngle);
                /*0x11b9dbc*/ float GetAngleFromMousePoint();
                /*0x11b9a00*/ void UpdateRadialImage(float targetAngle);
                /*0x11b9ec4*/ void NotifyValueChanged();
                /*0x11b9fb4*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x11b9ff0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x11ba034*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x11ba064*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);

                class RadialSliderValueChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xf96e7c*/ RadialSliderValueChangedEvent();
                }

                class RadialSliderTextValueChangedEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xf96e30*/ RadialSliderTextValueChangedEvent();
                }
            }

            class ReorderableList : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.LayoutGroup ContentLayout;
                /*0x20*/ UnityEngine.RectTransform DraggableArea;
                /*0x28*/ bool IsDraggable;
                /*0x29*/ bool CloneDraggedObject;
                /*0x2a*/ bool IsDropable;
                /*0x2b*/ bool IsDisplacable;
                /*0x2c*/ int maxItems;
                /*0x30*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDropped;
                /*0x38*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementGrabbed;
                /*0x40*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementRemoved;
                /*0x48*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementAdded;
                /*0x50*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedFrom;
                /*0x58*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedTo;
                /*0x60*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedFromReturned;
                /*0x68*/ UnityEngine.UI.Extensions.ReorderableList.ReorderableListHandler OnElementDisplacedToReturned;
                /*0x70*/ UnityEngine.RectTransform _content;
                /*0x78*/ UnityEngine.UI.Extensions.ReorderableListContent _listContent;

                /*0xf1c7dc*/ ReorderableList();
                /*0xf1c154*/ UnityEngine.RectTransform get_Content();
                /*0xf1c1fc*/ UnityEngine.Canvas GetCanvas();
                /*0xf1c320*/ void Refresh();
                /*0xf1c4c4*/ void Start();
                /*0xf1c710*/ void TestReOrderableListTarget(UnityEngine.UI.Extensions.ReorderableList.ReorderableListEventStruct item);

                struct ReorderableListEventStruct
                {
                    /*0x10*/ UnityEngine.GameObject DroppedObject;
                    /*0x18*/ int FromIndex;
                    /*0x20*/ UnityEngine.UI.Extensions.ReorderableList FromList;
                    /*0x28*/ bool IsAClone;
                    /*0x30*/ UnityEngine.GameObject SourceObject;
                    /*0x38*/ int ToIndex;
                    /*0x40*/ UnityEngine.UI.Extensions.ReorderableList ToList;

                    /*0xa85604*/ void Cancel();
                }

                class ReorderableListHandler : UnityEngine.Events.UnityEvent<UnityEngine.UI.Extensions.ReorderableList.ReorderableListEventStruct>
                {
                    /*0xf98c94*/ ReorderableListHandler();
                }
            }

            class ReorderableListContent : UnityEngine.MonoBehaviour
            {
                /*0x18*/ System.Collections.Generic.List<UnityEngine.Transform> _cachedChildren;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.ReorderableListElement> _cachedListElement;
                /*0x28*/ UnityEngine.UI.Extensions.ReorderableListElement _ele;
                /*0x30*/ UnityEngine.UI.Extensions.ReorderableList _extList;
                /*0x38*/ UnityEngine.RectTransform _rect;

                /*0xf1ca48*/ ReorderableListContent();
                /*0xf1c904*/ void OnEnable();
                /*0xf1ca00*/ void OnTransformChildrenChanged();
                /*0xf1c3cc*/ void Init(UnityEngine.UI.Extensions.ReorderableList extList);
                /*0xf1c994*/ System.Collections.IEnumerator RefreshChildren();

                class <RefreshChildren>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.ReorderableListContent <>4__this;

                    /*0xf98ce0*/ <RefreshChildren>d__8(int <>1__state);
                    /*0xf98d0c*/ void System.IDisposable.Dispose();
                    /*0xf98d10*/ bool MoveNext();
                    /*0xf9903c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xf99044*/ void System.Collections.IEnumerator.Reset();
                    /*0xf99084*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class ReorderableListDebug : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Text DebugLabel;

                /*0xf1cf08*/ ReorderableListDebug();
                /*0xf1ca50*/ void Awake();
                /*0xf1cbb8*/ void ElementDropped(UnityEngine.UI.Extensions.ReorderableList.ReorderableListEventStruct droppedStruct);
            }

            class ReorderableListElement : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEndDragHandler
            {
                /*0x18*/ bool IsGrabbable;
                /*0x19*/ bool IsTransferable;
                /*0x1a*/ bool isDroppableInSpace;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.EventSystems.RaycastResult> _raycastResults;
                /*0x28*/ UnityEngine.UI.Extensions.ReorderableList _currentReorderableListRaycasted;
                /*0x30*/ int _fromIndex;
                /*0x38*/ UnityEngine.RectTransform _draggingObject;
                /*0x40*/ UnityEngine.UI.LayoutElement _draggingObjectLE;
                /*0x48*/ UnityEngine.Vector2 _draggingObjectOriginalSize;
                /*0x50*/ UnityEngine.RectTransform _fakeElement;
                /*0x58*/ UnityEngine.UI.LayoutElement _fakeElementLE;
                /*0x60*/ int _displacedFromIndex;
                /*0x68*/ UnityEngine.RectTransform _displacedObject;
                /*0x70*/ UnityEngine.UI.LayoutElement _displacedObjectLE;
                /*0x78*/ UnityEngine.Vector2 _displacedObjectOriginalSize;
                /*0x80*/ UnityEngine.UI.Extensions.ReorderableList _displacedObjectOriginList;
                /*0x88*/ bool _isDragging;
                /*0x90*/ UnityEngine.RectTransform _rect;
                /*0x98*/ UnityEngine.UI.Extensions.ReorderableList _reorderableList;
                /*0xa0*/ UnityEngine.CanvasGroup _canvasGroup;
                /*0xa8*/ bool isValid;

                /*0xf1ef68*/ ReorderableListElement();
                /*0xf1cf10*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xf1d8c0*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xf1e408*/ void displaceElement(int targetIndex, UnityEngine.Transform displaced);
                /*0xf1e0d8*/ void revertDisplacedElement();
                /*0xf1e8b4*/ void finishDisplacingElement();
                /*0xf1e998*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xf1d574*/ void CancelDrag();
                /*0xf1d358*/ void RefreshSizes();
                /*0xf1eed8*/ void Init(UnityEngine.UI.Extensions.ReorderableList reorderableList);
            }

            class RescaleDragPanel : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.Vector2 pointerOffset;
                /*0x20*/ UnityEngine.RectTransform canvasRectTransform;
                /*0x28*/ UnityEngine.RectTransform panelRectTransform;
                /*0x30*/ UnityEngine.Transform goTransform;

                /*0xf25718*/ RescaleDragPanel();
                /*0xf252b4*/ void Awake();
                /*0xf253f0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData data);
                /*0xf254ac*/ void OnDrag(UnityEngine.EventSystems.PointerEventData data);
                /*0xf25628*/ UnityEngine.Vector2 ClampToWindow(UnityEngine.EventSystems.PointerEventData data);
            }

            class RescalePanel : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.Vector2 minSize;
                /*0x20*/ UnityEngine.Vector2 maxSize;
                /*0x28*/ UnityEngine.RectTransform rectTransform;
                /*0x30*/ UnityEngine.Transform goTransform;
                /*0x38*/ UnityEngine.Vector2 currentPointerPosition;
                /*0x40*/ UnityEngine.Vector2 previousPointerPosition;
                /*0x48*/ UnityEngine.RectTransform thisRectTransform;
                /*0x50*/ UnityEngine.Vector2 sizeDelta;

                /*0xf25a44*/ RescalePanel();
                /*0xf25720*/ void Awake();
                /*0xf257cc*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData data);
                /*0xf25888*/ void OnDrag(UnityEngine.EventSystems.PointerEventData data);
            }

            class ResizePanel : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.Vector2 minSize;
                /*0x20*/ UnityEngine.Vector2 maxSize;
                /*0x28*/ UnityEngine.RectTransform rectTransform;
                /*0x30*/ UnityEngine.Vector2 currentPointerPosition;
                /*0x38*/ UnityEngine.Vector2 previousPointerPosition;
                /*0x40*/ float ratio;

                /*0xf25d78*/ ResizePanel();
                /*0xf25a4c*/ void Awake();
                /*0xf25b44*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData data);
                /*0xf25c00*/ void OnDrag(UnityEngine.EventSystems.PointerEventData data);
            }

            class Segment : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ int index;
                /*0x20*/ UnityEngine.UI.Extensions.SegmentedControl segmentedControl;
                /*0x28*/ UnityEngine.Sprite cutSprite;

                /*0xe21b58*/ Segment();
                /*0xe21778*/ bool get_leftmost();
                /*0xe21788*/ bool get_rightmost();
                /*0xe2181c*/ bool get_selected();
                /*0xe218f0*/ void set_selected(bool value);
                /*0xe218a4*/ UnityEngine.UI.Selectable get_button();
                /*0xe21b60*/ void Start();
                /*0xe21b8c*/ System.Collections.IEnumerator DelayedInit();
                /*0xe21bf8*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21c1c*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21ccc*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21cd0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21cd4*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21cd8*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xe21cdc*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xe21ce0*/ void OnEnable();
                /*0xe21d6c*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xe218f8*/ void SetSelected(bool value);
                /*0xe21d74*/ void Deselect();
                /*0xe21c20*/ void MaintainSelection();
                /*0xe21dec*/ void TransitionButton();
                /*0xe21df4*/ void TransitionButton(bool instant);
                /*0xe220fc*/ void StartColorTween(UnityEngine.Color targetColor, bool instant);
                /*0xe2221c*/ void ChangeTextColor(UnityEngine.Color targetColor);
                /*0xe22474*/ void DoSpriteSwap(UnityEngine.Sprite newSprite);
                /*0xe22540*/ void TriggerAnimation(string triggername);

                class <DelayedInit>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.Segment <>4__this;

                    /*0xcbdce8*/ <DelayedInit>d__14(int <>1__state);
                    /*0xcbdd14*/ void System.IDisposable.Dispose();
                    /*0xcbdd18*/ bool MoveNext();
                    /*0xcbddcc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbddd4*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbde14*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class SegmentedControl : UnityEngine.EventSystems.UIBehaviour
            {
                /*0x18*/ UnityEngine.UI.Selectable[] m_segments;
                /*0x20*/ UnityEngine.UI.Graphic m_separator;
                /*0x28*/ float m_separatorWidth;
                /*0x2c*/ bool m_allowSwitchingOff;
                /*0x30*/ int m_selectedSegmentIndex;
                /*0x38*/ UnityEngine.UI.Extensions.SegmentedControl.SegmentSelectedEvent m_onValueChanged;
                /*0x40*/ UnityEngine.UI.Selectable selectedSegment;

                static /*0xe2230c*/ UnityEngine.Sprite CutSprite(UnityEngine.Sprite sprite, bool leftmost, bool rightmost);
                /*0xe2324c*/ SegmentedControl();
                /*0xe22764*/ float get_SeparatorWidth();
                /*0xe217e4*/ UnityEngine.UI.Selectable[] get_segments();
                /*0xe22a18*/ UnityEngine.UI.Graphic get_separator();
                /*0xe22a20*/ void set_separator(UnityEngine.UI.Graphic value);
                /*0xe22fac*/ bool get_allowSwitchingOff();
                /*0xe22fb4*/ void set_allowSwitchingOff(bool value);
                /*0xe22fc0*/ int get_selectedSegmentIndex();
                /*0xe23028*/ void set_selectedSegmentIndex(int value);
                /*0xe2323c*/ UnityEngine.UI.Extensions.SegmentedControl.SegmentSelectedEvent get_onValueChanged();
                /*0xe23244*/ void set_onValueChanged(UnityEngine.UI.Extensions.SegmentedControl.SegmentSelectedEvent value);
                /*0xe232b8*/ void Start();
                /*0xe23378*/ void OnEnable();
                /*0xe2330c*/ System.Collections.IEnumerator DelayedInit();
                /*0xe228a8*/ UnityEngine.UI.Selectable[] GetChildSegments();
                /*0xe233a4*/ void RecreateSprites();
                /*0xe22a2c*/ void LayoutSegments();

                class SegmentSelectedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcbdf14*/ SegmentSelectedEvent();
                }

                class <DelayedInit>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.SegmentedControl <>4__this;

                    /*0xcbde1c*/ <DelayedInit>d__27(int <>1__state);
                    /*0xcbde48*/ void System.IDisposable.Dispose();
                    /*0xcbde4c*/ bool MoveNext();
                    /*0xcbdec4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbdecc*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbdf0c*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class ExampleSelectable : UnityEngine.MonoBehaviour, UnityEngine.UI.Extensions.IBoxSelectable
            {
                /*0x18*/ bool _selected;
                /*0x19*/ bool _preSelected;
                /*0x20*/ UnityEngine.SpriteRenderer spriteRenderer;
                /*0x28*/ UnityEngine.UI.Image image;
                /*0x30*/ UnityEngine.UI.Text text;

                /*0x11d6544*/ ExampleSelectable();
                /*0x11d6218*/ bool get_selected();
                /*0x11d6220*/ void set_selected(bool value);
                /*0x11d622c*/ bool get_preSelected();
                /*0x11d6234*/ void set_preSelected(bool value);
                /*0x11d6240*/ void Start();
                /*0x11d6304*/ void Update();
                /*0x11d654c*/ UnityEngine.Transform UnityEngine.UI.Extensions.IBoxSelectable.get_transform();
            }

            interface IBoxSelectable
            {
                bool get_selected();
                void set_selected(bool value);
                bool get_preSelected();
                void set_preSelected(bool value);
                UnityEngine.Transform get_transform();
            }

            class SelectionBox : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Color color;
                /*0x28*/ UnityEngine.Sprite art;
                /*0x30*/ UnityEngine.Vector2 origin;
                /*0x38*/ UnityEngine.RectTransform selectionMask;
                /*0x40*/ UnityEngine.RectTransform boxRect;
                /*0x48*/ UnityEngine.UI.Extensions.IBoxSelectable[] selectables;
                /*0x50*/ UnityEngine.MonoBehaviour[] selectableGroup;
                /*0x58*/ UnityEngine.UI.Extensions.IBoxSelectable clickedBeforeDrag;
                /*0x60*/ UnityEngine.UI.Extensions.IBoxSelectable clickedAfterDrag;
                /*0x68*/ UnityEngine.UI.Extensions.SelectionBox.SelectionEvent onSelectionChange;

                /*0xe261c4*/ SelectionBox();
                /*0xe244cc*/ void ValidateCanvas();
                /*0xe2469c*/ void SetSelectableGroup(System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour> behaviourCollection);
                /*0xe24a18*/ void CreateBoxRect();
                /*0xe24b34*/ void ResetBoxRect();
                /*0xe24c70*/ void BeginSelection();
                /*0xe24f1c*/ bool PointIsValidAgainstSelectionMask(UnityEngine.Vector2 screenPoint);
                /*0xe25004*/ UnityEngine.UI.Extensions.IBoxSelectable GetSelectableAtMousePosition();
                /*0xe25784*/ void DragSelection();
                /*0xe25a4c*/ void ApplySingleClickDeselection();
                /*0xe25d20*/ void ApplyPreSelections();
                /*0xe254f4*/ UnityEngine.Vector2 GetScreenPointOfSelectable(UnityEngine.UI.Extensions.IBoxSelectable selectable);
                /*0xe25334*/ UnityEngine.Camera GetScreenPointCamera(UnityEngine.RectTransform rectTransform);
                /*0xe25ef0*/ UnityEngine.UI.Extensions.IBoxSelectable[] GetAllSelected();
                /*0xe260a8*/ void EndSelection();
                /*0xe2616c*/ void Start();
                /*0xe26198*/ void Update();

                class SelectionEvent : UnityEngine.Events.UnityEvent<UnityEngine.UI.Extensions.IBoxSelectable[]>
                {
                    /*0xcbe418*/ SelectionEvent();
                }
            }

            class Stepper : UnityEngine.EventSystems.UIBehaviour
            {
                /*0x18*/ UnityEngine.UI.Selectable[] _sides;
                /*0x20*/ int _value;
                /*0x24*/ int _minimum;
                /*0x28*/ int _maximum;
                /*0x2c*/ int _step;
                /*0x30*/ bool _wrap;
                /*0x38*/ UnityEngine.UI.Graphic _separator;
                /*0x40*/ float _separatorWidth;
                /*0x48*/ UnityEngine.UI.Extensions.Stepper.StepperValueChangedEvent _onValueChanged;

                static /*0xc9c730*/ UnityEngine.Sprite CutSprite(UnityEngine.Sprite sprite, bool leftmost);
                /*0xc9c26c*/ Stepper();
                /*0xc9bb0c*/ float get_separatorWidth();
                /*0xc9bc50*/ UnityEngine.UI.Selectable[] get_sides();
                /*0xc9bd5c*/ int get_value();
                /*0xc9bd64*/ void set_value(int value);
                /*0xc9bd6c*/ int get_minimum();
                /*0xc9bd74*/ void set_minimum(int value);
                /*0xc9bd7c*/ int get_maximum();
                /*0xc9bd84*/ void set_maximum(int value);
                /*0xc9bd8c*/ int get_step();
                /*0xc9bd94*/ void set_step(int value);
                /*0xc9bd9c*/ bool get_wrap();
                /*0xc9bda4*/ void set_wrap(bool value);
                /*0xc9bdb0*/ UnityEngine.UI.Graphic get_separator();
                /*0xc9bdb8*/ void set_separator(UnityEngine.UI.Graphic value);
                /*0xc9c25c*/ UnityEngine.UI.Extensions.Stepper.StepperValueChangedEvent get_onValueChanged();
                /*0xc9c264*/ void set_onValueChanged(UnityEngine.UI.Extensions.Stepper.StepperValueChangedEvent value);
                /*0xc9c2dc*/ void Start();
                /*0xc9c390*/ void OnEnable();
                /*0xc9c324*/ System.Collections.IEnumerator DelayedInit();
                /*0xc9bc88*/ UnityEngine.UI.Selectable[] GetSides();
                /*0xc9c460*/ void StepUp();
                /*0xc9c588*/ void StepDown();
                /*0xc9c468*/ void Step(int amount);
                /*0xc9c3bc*/ void DisableAtExtremes(UnityEngine.UI.Selectable[] sides);
                /*0xc9c594*/ void RecreateSprites(UnityEngine.UI.Selectable[] sides);
                /*0xc9be04*/ void LayoutSides(UnityEngine.UI.Selectable[] sides);

                class StepperValueChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcc3bf4*/ StepperValueChangedEvent();
                }

                class <DelayedInit>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.Stepper <>4__this;

                    /*0xcc3b04*/ <DelayedInit>d__38(int <>1__state);
                    /*0xcc3b30*/ void System.IDisposable.Dispose();
                    /*0xcc3b34*/ bool MoveNext();
                    /*0xcc3ba4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcc3bac*/ void System.Collections.IEnumerator.Reset();
                    /*0xcc3bec*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class StepperSide : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.ISubmitHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ UnityEngine.Sprite cutSprite;

                /*0xc9c9dc*/ StepperSide();
                /*0xc9c880*/ UnityEngine.UI.Selectable get_button();
                /*0xc9c8cc*/ UnityEngine.UI.Extensions.Stepper get_stepper();
                /*0xc9c918*/ bool get_leftmost();
                /*0xc9c9e4*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cbe8*/ void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xc9cc10*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc18*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc20*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc28*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xc9cc30*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xc9cc38*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0xc9ca28*/ void Press();
                /*0xc9cab0*/ void AdjustSprite(bool restore);
            }

            class TextPic : UnityEngine.UI.Text, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.ISelectHandler
            {
                static /*0x0*/ System.Text.RegularExpressions.Regex s_Regex;
                static /*0x8*/ System.Text.StringBuilder s_TextBuilder;
                static /*0x10*/ System.Text.RegularExpressions.Regex s_HrefRegex;
                /*0x100*/ System.Collections.Generic.List<UnityEngine.UI.Image> m_ImagesPool;
                /*0x108*/ System.Collections.Generic.List<UnityEngine.GameObject> culled_ImagesPool;
                /*0x110*/ bool clearImages;
                /*0x118*/ UnityEngine.Object thisLock;
                /*0x120*/ System.Collections.Generic.List<int> m_ImagesVertexIndex;
                /*0x128*/ string fixedString;
                /*0x130*/ bool m_ClickParents;
                /*0x131*/ bool updateQuad;
                /*0x138*/ string m_OutputText;
                /*0x140*/ UnityEngine.UI.Extensions.TextPic.IconName[] inspectorIconList;
                /*0x148*/ float ImageScalingFactor;
                /*0x150*/ string hyperlinkColor;
                /*0x158*/ UnityEngine.Vector2 imageOffset;
                /*0x160*/ UnityEngine.UI.Button button;
                /*0x168*/ System.Collections.Generic.List<UnityEngine.Vector2> positions;
                /*0x170*/ string previousText;
                /*0x178*/ bool isCreating_m_HrefInfos;
                /*0x180*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.TextPic.HrefInfo> m_HrefInfos;
                /*0x188*/ UnityEngine.UI.Extensions.TextPic.HrefClickEvent m_OnHrefClick;

                static /*0x116b850*/ TextPic();
                /*0x116b5fc*/ TextPic();
                /*0x1168904*/ bool get_AllowClickParents();
                /*0x116890c*/ void set_AllowClickParents(bool value);
                /*0x1168918*/ void SetVerticesDirty();
                /*0x1168944*/ void Start();
                /*0x11689a8*/ void ResetIconList();
                /*0x1168a4c*/ void UpdateQuadImage();
                /*0x116a1a8*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper toFill);
                /*0x116a760*/ UnityEngine.UI.Extensions.TextPic.HrefClickEvent get_onHrefClick();
                /*0x116a768*/ void set_onHrefClick(UnityEngine.UI.Extensions.TextPic.HrefClickEvent value);
                /*0x1169494*/ string GetOutputText();
                /*0x116a770*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x116a9dc*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x116abbc*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x116addc*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x116afbc*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x116b19c*/ void LateUpdate();
                /*0x11689d0*/ void Reset_m_HrefInfos();
                /*0x116b39c*/ void OnEnable();
                /*0x116b4d0*/ void OnDisable();

                struct IconName
                {
                    /*0x10*/ string name;
                    /*0x18*/ UnityEngine.Sprite sprite;
                    /*0x20*/ UnityEngine.Vector2 offset;
                    /*0x28*/ UnityEngine.Vector2 scale;
                }

                class HrefClickEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xcd0c24*/ HrefClickEvent();
                }

                class HrefInfo
                {
                    /*0x10*/ int startIndex;
                    /*0x14*/ int endIndex;
                    /*0x18*/ string name;
                    /*0x20*/ System.Collections.Generic.List<UnityEngine.Rect> boxes;

                    /*0xcd0c70*/ HrefInfo();
                }

                class <>c
                {
                    static /*0x0*/ UnityEngine.UI.Extensions.TextPic.<> <>9;
                    static /*0x8*/ System.Predicate<UnityEngine.UI.Image> <>9__25_0;

                    static /*0xcd0b54*/ <>c();
                    /*0xcd0bb4*/ <>c();
                    /*0xcd0bbc*/ bool <UpdateQuadImage>b__25_0(UnityEngine.UI.Image image);
                }
            }

            class UI_Knob : UnityEngine.UI.Selectable, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IInitializePotentialDragHandler
            {
                /*0xf8*/ UnityEngine.UI.Extensions.UI_Knob.Direction direction;
                /*0xfc*/ float knobValue;
                /*0x100*/ float maxValue;
                /*0x104*/ int loops;
                /*0x108*/ bool clampOutput01;
                /*0x109*/ bool snapToPosition;
                /*0x10c*/ int snapStepsPerLoop;
                /*0x110*/ UnityEngine.UI.Extensions.KnobFloatValueEvent OnValueChanged;
                /*0x118*/ float _currentLoops;
                /*0x11c*/ float _previousValue;
                /*0x120*/ float _initAngle;
                /*0x124*/ float _currentAngle;
                /*0x128*/ UnityEngine.Vector2 _currentVector;
                /*0x130*/ UnityEngine.Quaternion _initRotation;
                /*0x140*/ bool _canDrag;
                /*0x141*/ bool _screenSpaceOverlay;

                /*0x236abf4*/ UI_Knob();
                /*0x236a5b4*/ void Awake();
                /*0x236a62c*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a634*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a640*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a648*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236a734*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x236aa94*/ void SnapToPosition(ref float knobValue);
                /*0x236ab64*/ void InvokeEvents(float value);
                /*0x236abdc*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);

                enum Direction
                {
                    CW = 0,
                    CCW = 1,
                }
            }

            class KnobFloatValueEvent : UnityEngine.Events.UnityEvent<float>
            {
                /*0xfa8850*/ KnobFloatValueEvent();
            }

            class BestFitOutline : UnityEngine.UI.Shadow
            {
                /*0x1362368*/ BestFitOutline();
                /*0x1362370*/ void ModifyMesh(UnityEngine.Mesh mesh);
            }

            class CUIBezierCurve : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ int CubicBezierCurvePtNum;
                /*0x18*/ UnityEngine.Vector3[] controlPoints;
                /*0x20*/ System.Action OnRefresh;

                static /*0x134198c*/ CUIBezierCurve();
                /*0x1341984*/ CUIBezierCurve();
                /*0x1341678*/ UnityEngine.Vector3[] get_ControlPoints();
                /*0x1341680*/ void Refresh();
                /*0x1341694*/ UnityEngine.Vector3 GetPoint(float _time);
                /*0x1341768*/ UnityEngine.Vector3 GetTangent(float _time);
                /*0x1341838*/ void ReportSet();
            }

            class CUIGraphic : UnityEngine.UI.BaseMeshEffect
            {
                static /*0x0*/ int bottomCurveIdx;
                static /*0x4*/ int topCurveIdx;
                /*0x20*/ bool isCurved;
                /*0x21*/ bool isLockWithRatio;
                /*0x24*/ float resolution;
                /*0x28*/ UnityEngine.RectTransform rectTrans;
                /*0x30*/ UnityEngine.UI.Graphic uiGraphic;
                /*0x38*/ UnityEngine.UI.Extensions.CUIGraphic refCUIGraphic;
                /*0x40*/ UnityEngine.UI.Extensions.CUIBezierCurve[] refCurves;
                /*0x48*/ UnityEngine.UI.Extensions.Vector3_Array2D[] refCurvesControlRatioPoints;
                /*0x50*/ System.Collections.Generic.List<UnityEngine.UIVertex> reuse_quads;

                static /*0x13445dc*/ CUIGraphic();
                /*0x1344554*/ CUIGraphic();
                /*0x13419dc*/ bool get_IsCurved();
                /*0x13419e4*/ bool get_IsLockWithRatio();
                /*0x13419ec*/ UnityEngine.RectTransform get_RectTrans();
                /*0x13419f4*/ UnityEngine.UI.Graphic get_UIGraphic();
                /*0x13419fc*/ UnityEngine.UI.Extensions.CUIGraphic get_RefCUIGraphic();
                /*0x1341a04*/ UnityEngine.UI.Extensions.CUIBezierCurve[] get_RefCurves();
                /*0x1341a0c*/ UnityEngine.UI.Extensions.Vector3_Array2D[] get_RefCurvesControlRatioPoints();
                /*0x1341a14*/ void solveDoubleEquationWithVector(float _x_1, float _y_1, float _x_2, float _y_2, UnityEngine.Vector3 _constant_1, UnityEngine.Vector3 _contant_2, ref UnityEngine.Vector3 _x, ref UnityEngine.Vector3 _y);
                /*0x1341b30*/ UnityEngine.UIVertex uiVertexLerp(UnityEngine.UIVertex _a, UnityEngine.UIVertex _b, float _time);
                /*0x1341e3c*/ UnityEngine.UIVertex uiVertexBerp(UnityEngine.UIVertex v_bottomLeft, UnityEngine.UIVertex v_topLeft, UnityEngine.UIVertex v_topRight, UnityEngine.UIVertex v_bottomRight, float _xTime, float _yTime);
                /*0x1341f5c*/ void tessellateQuad(System.Collections.Generic.List<UnityEngine.UIVertex> _quads, int _thisQuadIdx);
                /*0x13426c8*/ void tessellateGraphic(System.Collections.Generic.List<UnityEngine.UIVertex> _verts);
                /*0x1342bec*/ void OnRectTransformDimensionsChange();
                /*0x1342e34*/ void Refresh();
                /*0x13430f4*/ void Awake();
                /*0x1343124*/ void OnEnable();
                /*0x1343154*/ void ReportSet();
                /*0x13435e0*/ void FixTextToRectTrans();
                /*0x1343858*/ void ReferenceCUIForBCurves();
                /*0x1343fd4*/ void ModifyMesh(UnityEngine.Mesh _mesh);
                /*0x1344160*/ void ModifyMesh(UnityEngine.UI.VertexHelper _vh);
                /*0x1344244*/ void modifyVertices(System.Collections.Generic.List<UnityEngine.UIVertex> _verts);
                /*0x1342bfc*/ void UpdateCurveControlPointPositions();
                /*0x1343f1c*/ UnityEngine.Vector3 GetBCurveSandwichSpacePoint(float _xTime, float _yTime);
                /*0x134449c*/ UnityEngine.Vector3 GetBCurveSandwichSpaceTangent(float _xTime, float _yTime);
            }

            class CUIImage : UnityEngine.UI.Extensions.CUIGraphic
            {
                static /*0x0*/ int SlicedImageCornerRefVertexIdx;
                static /*0x4*/ int FilledImageCornerRefVertexIdx;
                /*0x58*/ UnityEngine.Vector2 cornerPosRatio;
                /*0x60*/ UnityEngine.Vector2 oriCornerPosRatio;

                static /*0x1344ee4*/ CUIImage();
                static /*0x1344638*/ int ImageTypeCornerRefVertexIdx(UnityEngine.UI.Image.Type _type);
                /*0x1344e5c*/ CUIImage();
                /*0x13446c8*/ UnityEngine.Vector2 get_OriCornerPosRatio();
                /*0x13446d0*/ UnityEngine.UI.Image get_UIImage();
                /*0x134474c*/ void ReportSet();
                /*0x13447e8*/ void modifyVertices(System.Collections.Generic.List<UnityEngine.UIVertex> _verts);
            }

            struct Vector3_Array2D
            {
                /*0x10*/ UnityEngine.Vector3[] array;

                /*0xa8a6dc*/ UnityEngine.Vector3 get_Item(int _idx);
                /*0xa8a6e4*/ void set_Item(int _idx, UnityEngine.Vector3 value);
            }

            class CUIText : UnityEngine.UI.Extensions.CUIGraphic
            {
                /*0x1344fdc*/ CUIText();
                /*0x1344f40*/ void ReportSet();
            }

            class CurvedText : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.AnimationCurve _curveForText;
                /*0x28*/ float _curveMultiplier;
                /*0x30*/ UnityEngine.RectTransform rectTrans;

                /*0xf4df54*/ CurvedText();
                /*0xf4db78*/ UnityEngine.AnimationCurve get_CurveForText();
                /*0xf4db80*/ void set_CurveForText(UnityEngine.AnimationCurve value);
                /*0xf4dbb0*/ float get_CurveMultiplier();
                /*0xf4dbb8*/ void set_CurveMultiplier(float value);
                /*0xf4dbe8*/ void Awake();
                /*0xf4dc54*/ void OnEnable();
                /*0xf4dcc0*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
                /*0xf4de28*/ void OnRectTransformDimensionsChange();
            }

            class CylinderText : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ float radius;

                /*0xf4f3e8*/ CylinderText();
                /*0xf4f258*/ void Awake();
                /*0xf4f288*/ void OnEnable();
                /*0xf4f2b8*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class Gradient : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.UI.Extensions.GradientMode _gradientMode;
                /*0x24*/ UnityEngine.UI.Extensions.GradientDir _gradientDir;
                /*0x28*/ bool _overwriteAllColor;
                /*0x2c*/ UnityEngine.Color _vertex1;
                /*0x3c*/ UnityEngine.Color _vertex2;
                /*0x50*/ UnityEngine.UI.Graphic targetGraphic;

                /*0xed57e8*/ Gradient();
                /*0xed5054*/ UnityEngine.UI.Extensions.GradientMode get_GradientMode();
                /*0xed505c*/ void set_GradientMode(UnityEngine.UI.Extensions.GradientMode value);
                /*0xed508c*/ UnityEngine.UI.Extensions.GradientDir get_GradientDir();
                /*0xed5094*/ void set_GradientDir(UnityEngine.UI.Extensions.GradientDir value);
                /*0xed50c4*/ bool get_OverwriteAllColor();
                /*0xed50cc*/ void set_OverwriteAllColor(bool value);
                /*0xed5100*/ UnityEngine.Color get_Vertex1();
                /*0xed510c*/ void set_Vertex1(UnityEngine.Color value);
                /*0xed5140*/ UnityEngine.Color get_Vertex2();
                /*0xed514c*/ void set_Vertex2(UnityEngine.Color value);
                /*0xed5180*/ void Awake();
                /*0xed51d4*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
                /*0xed57a0*/ bool CompareCarefully(UnityEngine.Color col1, UnityEngine.Color col2);
            }

            enum GradientMode
            {
                Global = 0,
                Local = 1,
            }

            enum GradientDir
            {
                Vertical = 0,
                Horizontal = 1,
                DiagonalLeftToRight = 2,
                DiagonalRightToLeft = 3,
            }

            class Gradient2 : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.UI.Extensions.Gradient2.Type _gradientType;
                /*0x24*/ UnityEngine.UI.Extensions.Gradient2.Blend _blendMode;
                /*0x28*/ bool _modifyVertices;
                /*0x2c*/ float _offset;
                /*0x30*/ float _zoom;
                /*0x38*/ UnityEngine.Gradient _effectGradient;

                /*0xed8108*/ Gradient2();
                /*0xed582c*/ UnityEngine.UI.Extensions.Gradient2.Blend get_BlendMode();
                /*0xed5834*/ void set_BlendMode(UnityEngine.UI.Extensions.Gradient2.Blend value);
                /*0xed5864*/ UnityEngine.Gradient get_EffectGradient();
                /*0xed586c*/ void set_EffectGradient(UnityEngine.Gradient value);
                /*0xed589c*/ UnityEngine.UI.Extensions.Gradient2.Type get_GradientType();
                /*0xed58a4*/ void set_GradientType(UnityEngine.UI.Extensions.Gradient2.Type value);
                /*0xed58d4*/ bool get_ModifyVertices();
                /*0xed58dc*/ void set_ModifyVertices(bool value);
                /*0xed5910*/ float get_Offset();
                /*0xed5918*/ void set_Offset(float value);
                /*0xed5948*/ float get_Zoom();
                /*0xed5950*/ void set_Zoom(float value);
                /*0xed5980*/ void ModifyMesh(UnityEngine.UI.VertexHelper helper);
                /*0xed67f8*/ UnityEngine.Rect GetBounds(System.Collections.Generic.List<UnityEngine.UIVertex> vertices);
                /*0xed69b8*/ void SplitTrianglesAtGradientStops(System.Collections.Generic.List<UnityEngine.UIVertex> _vertexList, UnityEngine.Rect bounds, float zoomOffset, UnityEngine.UI.VertexHelper helper);
                /*0xed7de0*/ float[] GetPositions(System.Collections.Generic.List<UnityEngine.UIVertex> _vertexList, int index);
                /*0xed7a54*/ System.Collections.Generic.List<float> FindStops(float zoomOffset, UnityEngine.Rect bounds);
                /*0xed7fb4*/ UnityEngine.UIVertex CreateSplitVertex(UnityEngine.UIVertex vertex1, UnityEngine.UIVertex vertex2, float stop);
                /*0xed79fc*/ UnityEngine.Color BlendColor(UnityEngine.Color colorA, UnityEngine.Color colorB);

                enum Type
                {
                    Horizontal = 0,
                    Vertical = 1,
                    Radial = 2,
                    Diamond = 3,
                }

                enum Blend
                {
                    Override = 0,
                    Add = 1,
                    Multiply = 2,
                }

                class <>c
                {
                    static /*0x0*/ UnityEngine.UI.Extensions.Gradient2.<> <>9;
                    static /*0x8*/ System.Func<UnityEngine.UIVertex, float> <>9__24_0;
                    static /*0x10*/ System.Func<UnityEngine.UIVertex, float> <>9__24_1;

                    static /*0xf68d80*/ <>c();
                    /*0xf68de0*/ <>c();
                    /*0xf68de8*/ float <ModifyMesh>b__24_0(UnityEngine.UIVertex v);
                    /*0xf68df0*/ float <ModifyMesh>b__24_1(UnityEngine.UIVertex v);
                }
            }

            class LetterSpacing : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ float m_spacing;

                /*0xfa8eb0*/ LetterSpacing();
                /*0xfa8eb8*/ float get_spacing();
                /*0xfa8ec0*/ void set_spacing(float value);
                /*0xfa8f90*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class MonoSpacing : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ float m_spacing;
                /*0x24*/ float HalfCharWidth;
                /*0x28*/ bool UseHalfCharWidth;
                /*0x30*/ UnityEngine.RectTransform rectTransform;
                /*0x38*/ UnityEngine.UI.Text text;

                /*0x2b42ff4*/ MonoSpacing();
                /*0x2b43004*/ void Awake();
                /*0x2b4311c*/ float get_Spacing();
                /*0x2b43124*/ void set_Spacing(float value);
                /*0x2b431f4*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class NicerOutline : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ UnityEngine.Color m_EffectColor;
                /*0x30*/ UnityEngine.Vector2 m_EffectDistance;
                /*0x38*/ bool m_UseGraphicAlpha;
                /*0x40*/ System.Collections.Generic.List<UnityEngine.UIVertex> m_Verts;

                /*0x2b524b0*/ NicerOutline();
                /*0x2b51a64*/ UnityEngine.Color get_effectColor();
                /*0x2b51a70*/ void set_effectColor(UnityEngine.Color value);
                /*0x2b51b50*/ UnityEngine.Vector2 get_effectDistance();
                /*0x2b51b58*/ void set_effectDistance(UnityEngine.Vector2 value);
                /*0x2b51c70*/ bool get_useGraphicAlpha();
                /*0x2b51c78*/ void set_useGraphicAlpha(bool value);
                /*0x2b51d40*/ void ApplyShadowZeroAlloc(System.Collections.Generic.List<UnityEngine.UIVertex> verts, UnityEngine.Color32 color, int start, int end, float x, float y);
                /*0x2b52008*/ void ApplyShadow(System.Collections.Generic.List<UnityEngine.UIVertex> verts, UnityEngine.Color32 color, int start, int end, float x, float y);
                /*0x2b520e8*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
            }

            class RaycastMask : UnityEngine.MonoBehaviour, UnityEngine.ICanvasRaycastFilter
            {
                /*0x18*/ UnityEngine.UI.Image _image;
                /*0x20*/ UnityEngine.Sprite _sprite;

                /*0x11c3338*/ RaycastMask();
                /*0x11c2d68*/ void Start();
                /*0x11c2dbc*/ bool IsRaycastLocationValid(UnityEngine.Vector2 sp, UnityEngine.Camera eventCamera);
            }

            class UIAdditiveEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x1132bf8*/ UIAdditiveEffect();
                /*0x11329e0*/ void Start();
                /*0x11329e4*/ void SetMaterial();
                /*0x1132bf4*/ void OnValidate();
            }

            class UIImageCrop : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;
                /*0x20*/ UnityEngine.Material mat;
                /*0x28*/ int XCropProperty;
                /*0x2c*/ int YCropProperty;
                /*0x30*/ float XCrop;
                /*0x34*/ float YCrop;

                /*0x235e3c8*/ UIImageCrop();
                /*0x235e0b0*/ void Start();
                /*0x235e0b4*/ void SetMaterial();
                /*0x235e31c*/ void OnValidate();
                /*0x235e350*/ void SetXCrop(float xcrop);
                /*0x235e38c*/ void SetYCrop(float ycrop);
            }

            class UILinearDodgeEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x2362e88*/ UILinearDodgeEffect();
                /*0x2362c70*/ void Start();
                /*0x2362c74*/ void SetMaterial();
                /*0x2362e84*/ void OnValidate();
            }

            class UIMultiplyEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x23630a8*/ UIMultiplyEffect();
                /*0x2362e90*/ void Start();
                /*0x2362e94*/ void SetMaterial();
                /*0x23630a4*/ void OnValidate();
            }

            class UIScreenEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x2365ce8*/ UIScreenEffect();
                /*0x2365ad0*/ void Start();
                /*0x2365ad4*/ void SetMaterial();
                /*0x2365ce4*/ void OnValidate();
            }

            class UISoftAdditiveEffect : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.MaskableGraphic mGraphic;

                /*0x2368144*/ UISoftAdditiveEffect();
                /*0x2367f2c*/ void Start();
                /*0x2367f30*/ void SetMaterial();
                /*0x2368140*/ void OnValidate();
            }

            class ShineEffect : UnityEngine.UI.MaskableGraphic
            {
                /*0xd0*/ float yoffset;
                /*0xd4*/ float width;

                /*0xe2976c*/ ShineEffect();
                /*0xe2904c*/ float get_Yoffset();
                /*0xe29054*/ void set_Yoffset(float value);
                /*0xe29090*/ float get_Width();
                /*0xe29098*/ void set_Width(float value);
                /*0xe290d4*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0xe29650*/ void Triangulate(UnityEngine.UI.VertexHelper vh);
            }

            class ShineEffector : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.ShineEffect effector;
                /*0x20*/ UnityEngine.GameObject effectRoot;
                /*0x28*/ float yOffset;
                /*0x2c*/ float width;
                /*0x30*/ UnityEngine.RectTransform effectorRect;

                /*0xe29ea0*/ ShineEffector();
                /*0xe29780*/ float get_YOffset();
                /*0xe29788*/ void set_YOffset(float value);
                /*0xe2985c*/ void OnEnable();
                /*0xe29d34*/ void OnValidate();
                /*0xe297b8*/ void ChangeVal(float value);
                /*0xe29e00*/ void OnDestroy();
            }

            class SoftMaskScript : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.Material mat;
                /*0x20*/ UnityEngine.Canvas cachedCanvas;
                /*0x28*/ UnityEngine.Transform cachedCanvasTransform;
                /*0x30*/ UnityEngine.Vector3[] m_WorldCorners;
                /*0x38*/ UnityEngine.Vector3[] m_CanvasCorners;
                /*0x40*/ UnityEngine.RectTransform MaskArea;
                /*0x48*/ UnityEngine.Texture AlphaMask;
                /*0x50*/ float CutOff;
                /*0x54*/ bool HardBlend;
                /*0x55*/ bool FlipAlphaMask;
                /*0x56*/ bool DontClipMaskScalingRect;
                /*0x58*/ UnityEngine.Vector2 maskOffset;
                /*0x60*/ UnityEngine.Vector2 maskScale;

                /*0x1451aac*/ SoftMaskScript();
                /*0x14513cc*/ void Start();
                /*0x1451724*/ void Update();
                /*0x14517a8*/ void SetMask();
                /*0x1451948*/ UnityEngine.Rect GetCanvasRect();
            }

            class UIFlippable : UnityEngine.UI.BaseMeshEffect
            {
                /*0x20*/ bool m_Horizontal;
                /*0x21*/ bool m_Veritical;

                /*0x235d588*/ UIFlippable();
                /*0x235d3a4*/ bool get_horizontal();
                /*0x235d3ac*/ void set_horizontal(bool value);
                /*0x235d3b8*/ bool get_vertical();
                /*0x235d3c0*/ void set_vertical(bool value);
                /*0x235d3cc*/ void ModifyMesh(UnityEngine.UI.VertexHelper verts);
            }

            class UIParticleSystem : UnityEngine.UI.MaskableGraphic
            {
                /*0xd0*/ bool fixedTime;
                /*0xd1*/ bool use3dRotation;
                /*0xd8*/ UnityEngine.Transform _transform;
                /*0xe0*/ UnityEngine.ParticleSystem pSystem;
                /*0xe8*/ UnityEngine.ParticleSystem.Particle[] particles;
                /*0xf0*/ UnityEngine.UIVertex[] _quad;
                /*0xf8*/ UnityEngine.Vector4 imageUV;
                /*0x108*/ UnityEngine.ParticleSystem.TextureSheetAnimationModule textureSheetAnimation;
                /*0x110*/ int textureSheetAnimationFrames;
                /*0x114*/ UnityEngine.Vector2 textureSheetAnimationFrameSize;
                /*0x120*/ UnityEngine.ParticleSystemRenderer pRenderer;
                /*0x128*/ UnityEngine.Material currentMaterial;
                /*0x130*/ UnityEngine.Texture currentTexture;
                /*0x138*/ UnityEngine.ParticleSystem.MainModule mainModule;

                /*0x23645fc*/ UIParticleSystem();
                /*0x23630b0*/ UnityEngine.Texture get_mainTexture();
                /*0x23630b8*/ bool Initialize();
                /*0x2363594*/ void Awake();
                /*0x23635dc*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x2364154*/ void Update();
                /*0x2364368*/ void LateUpdate();
                /*0x23645f4*/ void OnDestroy();
            }

            class CardExpanding2D : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float lerpSpeed;
                /*0x20*/ UnityEngine.RectTransform buttonRect;
                /*0x28*/ UnityEngine.Vector2 closeButtonMin;
                /*0x30*/ UnityEngine.Vector2 closeButtonMax;
                /*0x38*/ UnityEngine.Vector2 cardSize;
                /*0x40*/ UnityEngine.Vector2 pageSize;
                /*0x48*/ UnityEngine.Vector2 cardCenter;
                /*0x50*/ UnityEngine.Vector2 pageCenter;
                /*0x58*/ UnityEngine.Vector2 cardMin;
                /*0x60*/ UnityEngine.Vector2 cardMax;
                /*0x68*/ UnityEngine.Vector2 pageMin;
                /*0x70*/ UnityEngine.Vector2 pageMax;
                /*0x78*/ UnityEngine.RectTransform rectTrans;
                /*0x80*/ int animationActive;

                /*0x153e0c0*/ CardExpanding2D();
                /*0x153d8e0*/ void Start();
                /*0x153da24*/ void Update();
                /*0x153dfec*/ void ToggleCard();
            }

            class CardPopup2D : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float rotationSpeed;
                /*0x1c*/ float centeringSpeed;
                /*0x20*/ bool singleScene;
                /*0x28*/ UnityEngine.Rigidbody rbody;
                /*0x30*/ bool isFalling;
                /*0x34*/ UnityEngine.Vector3 cardFallRotation;
                /*0x40*/ bool fallToZero;
                /*0x44*/ float startZPos;

                /*0x153f4f4*/ CardPopup2D();
                /*0x153f0fc*/ void Start();
                /*0x153f180*/ void Update();
                /*0x153f498*/ void CardEnter();
                /*0x153f4a4*/ void CardFallAway(float fallRotation);
            }

            class CardStack2D : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ bool canUseHorizontalAxis;
                /*0x18*/ float cardMoveSpeed;
                /*0x1c*/ float buttonCooldownTime;
                /*0x20*/ int cardZMultiplier;
                /*0x24*/ bool useDefaultUsedXPos;
                /*0x28*/ int usedCardXPos;
                /*0x30*/ UnityEngine.Transform[] cards;
                /*0x38*/ int cardArrayOffset;
                /*0x40*/ UnityEngine.Vector3[] cardPositions;
                /*0x48*/ int xPowerDifference;

                static /*0x153fbcc*/ CardStack2D();
                /*0x153fba0*/ CardStack2D();
                /*0x153f508*/ void Start();
                /*0x153f818*/ void Update();
                /*0x153fb34*/ System.Collections.IEnumerator ButtonCooldown();

                class <ButtonCooldown>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.CardStack2D <>4__this;

                    /*0xda8bf0*/ <ButtonCooldown>d__12(int <>1__state);
                    /*0xda8c1c*/ void System.IDisposable.Dispose();
                    /*0xda8c20*/ bool MoveNext();
                    /*0xda8d44*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xda8d4c*/ void System.Collections.IEnumerator.Reset();
                    /*0xda8d8c*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class CardExpanding3D : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float lerpSpeed;
                /*0x1c*/ float cornerSize;
                /*0x20*/ UnityEngine.RectTransform[] cardCorners;
                /*0x28*/ UnityEngine.RectTransform[] cardEdges;
                /*0x30*/ UnityEngine.RectTransform cardCenter;
                /*0x38*/ bool cardAutoSize;
                /*0x3c*/ UnityEngine.Vector2 cardSize;
                /*0x44*/ UnityEngine.Vector2 cardPosition;
                /*0x4c*/ int cardSuperness;
                /*0x50*/ bool pageAutoSize;
                /*0x54*/ UnityEngine.Vector2 pageSize;
                /*0x5c*/ UnityEngine.Vector2 pagePosition;
                /*0x64*/ int pageSuperness;
                /*0x68*/ int animationActive;
                /*0x70*/ UnityEngine.Vector2[] nextCornerPos;
                /*0x78*/ UnityEngine.Vector2[] nextEdgePos;
                /*0x80*/ UnityEngine.Vector2[] nextEdgeScale;
                /*0x88*/ UnityEngine.Vector2 nextCenterScale;
                /*0x90*/ UnityEngine.Vector2 nextPos;
                /*0x98*/ int nextSuperness;
                /*0xa0*/ UnityEngine.RectTransform rect;
                /*0xa8*/ UnityEngine.Vector2 nextMin;
                /*0xb0*/ UnityEngine.Vector2 nextMax;

                /*0x153f058*/ CardExpanding3D();
                /*0x153e16c*/ void Start();
                /*0x153e30c*/ void Update();
                /*0x153e9b0*/ void ToggleCard();
            }

            class MeshCreator : UnityEngine.MonoBehaviour
            {
                /*0x2b41388*/ MeshCreator();
                /*0x2b411c4*/ void CreateMesh(System.Collections.Generic.List<UnityEngine.Vector2> points);
            }

            class SuperellipsePoints : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float xLimits;
                /*0x1c*/ float yLimits;
                /*0x20*/ float superness;
                /*0x24*/ float lastXLim;
                /*0x28*/ float lastYLim;
                /*0x2c*/ float lastSuper;
                /*0x30*/ int levelOfDetail;
                /*0x34*/ int lastLoD;
                /*0x38*/ UnityEngine.Material material;
                /*0x40*/ System.Collections.Generic.List<UnityEngine.Vector2> pointList;

                /*0xc9d4c0*/ SuperellipsePoints();
                /*0xc9d1f4*/ void Start();
                /*0xc9d3d0*/ void Update();
                /*0xc9d278*/ void RecalculateSuperellipse();
                /*0xc9d480*/ float Superellipse(float a, float b, float x, float n);
            }

            class Triangulator
            {
                /*0x10*/ System.Collections.Generic.List<UnityEngine.Vector2> m_points;

                /*0x11203d0*/ Triangulator(UnityEngine.Vector2[] points);
                /*0x1120488*/ int[] Triangulate();
                /*0x1120758*/ float Area();
                /*0x112087c*/ bool Snip(int u, int v, int w, int n, int[] V);
                /*0x1120ac0*/ bool InsideTriangle(UnityEngine.Vector2 A, UnityEngine.Vector2 B, UnityEngine.Vector2 C, UnityEngine.Vector2 P);
            }

            class ContentScrollSnapHorizontal : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler
            {
                /*0x18*/ bool ignoreInactiveItems;
                /*0x1c*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo startInfo;
                /*0x30*/ UnityEngine.GameObject prevButton;
                /*0x38*/ UnityEngine.GameObject nextButton;
                /*0x40*/ UnityEngine.GameObject pagination;
                /*0x48*/ int snappingVelocityThreshold;
                /*0x4c*/ bool jumpToItem;
                /*0x50*/ float lerpTime;
                /*0x58*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.StartMovementEvent m_StartMovementEvent;
                /*0x60*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.CurrentItemChangeEvent m_CurrentItemChangeEvent;
                /*0x68*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.FoundItemToSnapToEvent m_FoundItemToSnapToEvent;
                /*0x70*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.SnappedToItemEvent m_SnappedToItemEvent;
                /*0x78*/ UnityEngine.UI.ScrollRect scrollRect;
                /*0x80*/ UnityEngine.RectTransform scrollRectTransform;
                /*0x88*/ UnityEngine.RectTransform contentTransform;
                /*0x90*/ System.Collections.Generic.List<UnityEngine.Vector3> contentPositions;
                /*0x98*/ UnityEngine.Vector3 lerpTarget;
                /*0xa4*/ float totalScrollableWidth;
                /*0xa8*/ UnityEngine.DrivenRectTransformTracker tracker;
                /*0xac*/ float mLerpTime;
                /*0xb0*/ int _closestItem;
                /*0xb4*/ bool mSliding;
                /*0xb5*/ bool mLerping;

                /*0x10ebf90*/ ContentScrollSnapHorizontal();
                /*0x10ea494*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.StartMovementEvent get_MovementStarted();
                /*0x10ea49c*/ void set_MovementStarted(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.StartMovementEvent value);
                /*0x10ea4a4*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.CurrentItemChangeEvent get_CurrentItemChanged();
                /*0x10ea4ac*/ void set_CurrentItemChanged(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.CurrentItemChangeEvent value);
                /*0x10ea4b4*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.FoundItemToSnapToEvent get_ItemFoundToSnap();
                /*0x10ea4bc*/ void set_ItemFoundToSnap(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.FoundItemToSnapToEvent value);
                /*0x10ea4c4*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.SnappedToItemEvent get_ItemSnappedTo();
                /*0x10ea4cc*/ void set_ItemSnappedTo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.SnappedToItemEvent value);
                /*0x10ea4d4*/ bool get_ContentIsHorizonalLayoutGroup();
                /*0x10ea56c*/ bool get_Moving();
                /*0x10ea58c*/ bool get_Sliding();
                /*0x10ea594*/ bool get_Lerping();
                /*0x10ea59c*/ int get_ClosestItemIndex();
                /*0x10ea7c4*/ int get_LerpTargetIndex();
                /*0x10ea820*/ void Awake();
                /*0x10eae38*/ void OnDisable();
                /*0x10eaa5c*/ void SetupDrivenTransforms();
                /*0x10ead40*/ void SetupSnapScroll();
                /*0x10eae44*/ void SetupWithHorizontalLayoutGroup();
                /*0x10eb22c*/ void SetupWithCalculatedSpacing();
                /*0x10ead78*/ void GoTo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo info);
                /*0x10eb6e4*/ void GoToChild(int index, bool jump);
                /*0x10eb9ac*/ void GoToContentPos(int index, bool jump);
                /*0x10ebb38*/ void NextItem();
                /*0x10ebba4*/ void PreviousItem();
                /*0x10ebc10*/ void UpdateLayout();
                /*0x10ebc34*/ void UpdateLayoutAndMoveTo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo info);
                /*0x10ebc78*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData ped);
                /*0x10ebcc4*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData ped);
                /*0x10ebd14*/ void Update();
                /*0x10ebeb8*/ System.Collections.IEnumerator SlideAndLerp();
                /*0x10ebf24*/ System.Collections.IEnumerator LerpToContent();
                /*0x10ebaac*/ void StopMovement();
                /*0x10ebdb0*/ void ChangePaginationInfo(int targetScreen);
                /*0x10eb634*/ UnityEngine.Vector2 DstFromTopLeftOfTransformToTopLeftOfParent(UnityEngine.RectTransform rt);
                /*0x10ea60c*/ UnityEngine.Vector3 FindClosestFrom(UnityEngine.Vector3 start);
                /*0x10ec0d0*/ void <Awake>b__51_0();
                /*0x10ec0d4*/ void <Awake>b__51_1();

                class StartMovementEvent : UnityEngine.Events.UnityEvent
                {
                    /*0x1072ba8*/ StartMovementEvent();
                }

                class CurrentItemChangeEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1072a9c*/ CurrentItemChangeEvent();
                }

                class FoundItemToSnapToEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1072ae8*/ FoundItemToSnapToEvent();
                }

                class SnappedToItemEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0x1072b5c*/ SnappedToItemEvent();
                }

                struct MoveInfo
                {
                    /*0x10*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo.IndexType indexType;
                    /*0x14*/ int index;
                    /*0x18*/ bool jump;
                    /*0x1c*/ float duration;

                    /*0xa8a154*/ MoveInfo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo.IndexType _indexType, int _index);
                    /*0xa8a168*/ MoveInfo(UnityEngine.UI.Extensions.ContentScrollSnapHorizontal.MoveInfo.IndexType _indexType, int _index, bool _jump, float _duration);

                    enum IndexType
                    {
                        childIndex = 0,
                        positionIndex = 1,
                    }
                }

                class <SlideAndLerp>d__67 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal <>4__this;

                    /*0x10727d0*/ <SlideAndLerp>d__67(int <>1__state);
                    /*0x10727fc*/ void System.IDisposable.Dispose();
                    /*0x1072800*/ bool MoveNext();
                    /*0x1072a4c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0x1072a54*/ void System.Collections.IEnumerator.Reset();
                    /*0x1072a94*/ object System.Collections.IEnumerator.get_Current();
                }

                class <LerpToContent>d__68 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.ContentScrollSnapHorizontal <>4__this;
                    /*0x28*/ UnityEngine.Vector3 <originalContentPos>5__2;
                    /*0x34*/ float <elapsedTime>5__3;

                    /*0x10725b8*/ <LerpToContent>d__68(int <>1__state);
                    /*0x10725e4*/ void System.IDisposable.Dispose();
                    /*0x10725e8*/ bool MoveNext();
                    /*0x1072780*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0x1072788*/ void System.Collections.IEnumerator.Reset();
                    /*0x10727c8*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class CurvedLayout : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ UnityEngine.Vector3 CurveOffset;
                /*0x64*/ UnityEngine.Vector3 itemAxis;
                /*0x70*/ float itemSize;
                /*0x74*/ float centerpoint;

                /*0xf4db68*/ CurvedLayout();
                /*0xf4d838*/ void OnEnable();
                /*0xf4db58*/ void SetLayoutHorizontal();
                /*0xf4db5c*/ void SetLayoutVertical();
                /*0xf4db60*/ void CalculateLayoutInputVertical();
                /*0xf4db64*/ void CalculateLayoutInputHorizontal();
                /*0xf4d860*/ void CalculateRadial();
            }

            class FancyScrollView<TData, TContext> : UnityEngine.MonoBehaviour
            {
                /*0x0*/ float cellInterval;
                /*0x0*/ float cellOffset;
                /*0x0*/ bool loop;
                /*0x0*/ UnityEngine.GameObject cellBase;
                /*0x0*/ UnityEngine.Transform cellContainer;
                /*0x0*/ System.Collections.Generic.List<UnityEngine.UI.Extensions.FancyScrollViewCell<TData, TContext>> cells;
                /*0x0*/ float currentPosition;
                /*0x0*/ System.Collections.Generic.List<TData> cellData;
                /*0x0*/ TContext <Context>k__BackingField;

                FancyScrollView();
                TContext get_Context();
                void set_Context(TContext value);
                void SetContext(TContext context);
                void UpdateContents();
                void UpdatePosition(float position, bool forceUpdateContents);
                void UpdateCell(UnityEngine.UI.Extensions.FancyScrollViewCell<TData, TContext> cell, int dataIndex, bool forceUpdateContents);
                UnityEngine.UI.Extensions.FancyScrollViewCell<TData, TContext> CreateCell();
                int GetCircularIndex(int index, int maxSize);
            }

            class FancyScrollViewNullContext
            {
                /*0x11d9ed0*/ FancyScrollViewNullContext();
            }

            class FancyScrollView<TData> : UnityEngine.UI.Extensions.FancyScrollView<TData, UnityEngine.UI.Extensions.FancyScrollViewNullContext>
            {
                FancyScrollView();
            }

            class FancyScrollViewCell<TData, TContext> : UnityEngine.MonoBehaviour
            {
                /*0x0*/ int <DataIndex>k__BackingField;
                /*0x0*/ TContext <Context>k__BackingField;

                FancyScrollViewCell();
                int get_DataIndex();
                void set_DataIndex(int value);
                bool get_IsVisible();
                TContext get_Context();
                void set_Context(TContext value);
                void SetContext(TContext context);
                void SetVisible(bool visible);
                void UpdateContent(TData itemData);
                void UpdatePosition(float position);
            }

            class FancyScrollViewCell<TData> : UnityEngine.UI.Extensions.FancyScrollViewCell<TData, UnityEngine.UI.Extensions.FancyScrollViewNullContext>
            {
                FancyScrollViewCell();
            }

            class FlowLayoutGroup : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ float SpacingX;
                /*0x5c*/ float SpacingY;
                /*0x60*/ bool ExpandHorizontalSpacing;
                /*0x61*/ bool ChildForceExpandWidth;
                /*0x62*/ bool ChildForceExpandHeight;
                /*0x63*/ bool invertOrder;
                /*0x64*/ float _layoutHeight;
                /*0x68*/ float _layoutWidth;
                /*0x6c*/ UnityEngine.UI.Extensions.FlowLayoutGroup.Axis m_StartAxis;
                /*0x70*/ System.Collections.Generic.IList<UnityEngine.RectTransform> _itemList;

                /*0x11dc124*/ FlowLayoutGroup();
                /*0x11da704*/ UnityEngine.UI.Extensions.FlowLayoutGroup.Axis get_startAxis();
                /*0x11da70c*/ void set_startAxis(UnityEngine.UI.Extensions.FlowLayoutGroup.Axis value);
                /*0x11da76c*/ void CalculateLayoutInputHorizontal();
                /*0x11db18c*/ void SetLayoutHorizontal();
                /*0x11db198*/ void SetLayoutVertical();
                /*0x11db1a4*/ void CalculateLayoutInputVertical();
                /*0x11db31c*/ bool get_IsCenterAlign();
                /*0x11db348*/ bool get_IsRightAlign();
                /*0x11db374*/ bool get_IsMiddleAlign();
                /*0x11db398*/ bool get_IsLowerAlign();
                /*0x11da8e4*/ float SetLayout(int axis, bool layoutInput);
                /*0x11db3bc*/ float CalculateRowVerticalOffset(float groupHeight, float yOffset, float currentRowHeight);
                /*0x11dba64*/ float CalculateColHorizontalOffset(float groupWidth, float xOffset, float currentColWidth);
                /*0x11db404*/ void LayoutRow(System.Collections.Generic.IList<UnityEngine.RectTransform> contents, float rowWidth, float rowHeight, float maxWidth, float xOffset, float yOffset, int axis);
                /*0x11dbabc*/ void LayoutCol(System.Collections.Generic.IList<UnityEngine.RectTransform> contents, float colWidth, float colHeight, float maxHeight, float xOffset, float yOffset, int axis);
                /*0x11da824*/ float GetGreatestMinimumChildWidth();
                /*0x11db25c*/ float GetGreatestMinimumChildHeigth();

                enum Axis
                {
                    Horizontal = 0,
                    Vertical = 1,
                }
            }

            class HorizontalScrollSnap : UnityEngine.UI.Extensions.ScrollSnapBase, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x130bbfc*/ HorizontalScrollSnap();
                /*0x130ae1c*/ void Start();
                /*0x130af48*/ void Update();
                /*0x130b18c*/ bool IsRectMovingSlowerThanThreshold(float startingSpeed);
                /*0x130b1ec*/ void DistributePages();
                /*0x130b448*/ void AddChild(UnityEngine.GameObject GO);
                /*0x130b450*/ void AddChild(UnityEngine.GameObject GO, bool WorldPositionStays);
                /*0x130b598*/ void RemoveChild(int index, ref UnityEngine.GameObject ChildRemoved);
                /*0x130b5a4*/ void RemoveChild(int index, bool WorldPositionStays, ref UnityEngine.GameObject ChildRemoved);
                /*0x130b708*/ void RemoveAllChildren(ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x130b714*/ void RemoveAllChildren(bool WorldPositionStays, ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x130b530*/ void SetScrollContainerPosition();
                /*0x130aeac*/ void UpdateLayout();
                /*0x130b90c*/ void OnRectTransformDimensionsChange();
                /*0x130b974*/ void OnEnable();
                /*0x130ba3c*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            interface IScrollSnap
            {
                void ChangePage(int page);
                void SetLerp(bool value);
                int CurrentPage();
                void StartScreenChange();
            }

            class RadialLayout : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ float fDistance;
                /*0x5c*/ float MinAngle;
                /*0x60*/ float MaxAngle;
                /*0x64*/ float StartAngle;
                /*0x68*/ bool OnlyLayoutVisible;

                /*0x11b9874*/ RadialLayout();
                /*0x11b9508*/ void OnEnable();
                /*0x11b9864*/ void SetLayoutHorizontal();
                /*0x11b9868*/ void SetLayoutVertical();
                /*0x11b986c*/ void CalculateLayoutInputVertical();
                /*0x11b9870*/ void CalculateLayoutInputHorizontal();
                /*0x11b9530*/ void CalculateRadial();
            }

            class ScrollPositionController : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.RectTransform viewport;
                /*0x20*/ UnityEngine.UI.Extensions.ScrollPositionController.ScrollDirection directionOfRecognize;
                /*0x24*/ UnityEngine.UI.Extensions.ScrollPositionController.MovementType movementType;
                /*0x28*/ float elasticity;
                /*0x2c*/ float scrollSensitivity;
                /*0x30*/ bool inertia;
                /*0x34*/ float decelerationRate;
                /*0x38*/ UnityEngine.UI.Extensions.ScrollPositionController.Snap snap;
                /*0x44*/ int dataCount;
                /*0x48*/ UnityEngine.UI.Extensions.ScrollPositionController.AutoScrollState autoScrollState;
                /*0x50*/ System.Action<float> onUpdatePosition;
                /*0x58*/ System.Action<int> onItemSelected;
                /*0x60*/ UnityEngine.Vector2 pointerStartLocalPosition;
                /*0x68*/ float dragStartScrollPosition;
                /*0x6c*/ float prevScrollPosition;
                /*0x70*/ float currentScrollPosition;
                /*0x74*/ bool dragging;
                /*0x78*/ float velocity;

                /*0xe1cb30*/ ScrollPositionController();
                /*0xe1bfe8*/ void OnUpdatePosition(System.Action<float> onUpdatePosition);
                /*0xe1bff0*/ void OnItemSelected(System.Action<int> onItemSelected);
                /*0xe1bff8*/ void SetDataCount(int dataCount);
                /*0xe1c000*/ void ScrollTo(int index, float duration);
                /*0xe1c19c*/ void JumpTo(int index);
                /*0xe1c270*/ void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1c36c*/ void UnityEngine.EventSystems.IDragHandler.OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1c608*/ void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1c51c*/ float GetViewportSize();
                /*0xe1c578*/ float CalculateOffset(float position);
                /*0xe1c1fc*/ void UpdatePosition(float position);
                /*0xe1c12c*/ void ItemSelected(int index);
                /*0xe1c5b8*/ float RubberDelta(float overStretching, float viewSize);
                /*0xe1c62c*/ void Update();
                /*0xe1c0c4*/ int CalculateDestinationIndex(int index);
                /*0xe1caa0*/ int CalculateClosestIndex(int index);
                /*0xe1c0e8*/ float GetCircularPosition(float position, int length);
                /*0xe1ca48*/ float EaseInOutCubic(float start, float end, float value);

                enum ScrollDirection
                {
                    Vertical = 0,
                    Horizontal = 1,
                }

                enum MovementType
                {
                    Unrestricted = 0,
                    Elastic = 1,
                    Clamped = 2,
                }

                struct Snap
                {
                    /*0x10*/ bool Enable;
                    /*0x14*/ float VelocityThreshold;
                    /*0x18*/ float Duration;
                }

                class AutoScrollState
                {
                    /*0x10*/ bool Enable;
                    /*0x11*/ bool Elastic;
                    /*0x14*/ float Duration;
                    /*0x18*/ float StartTime;
                    /*0x1c*/ float EndScrollPosition;

                    /*0xcbd204*/ AutoScrollState();
                    /*0xcbd1f4*/ void Reset();
                }
            }

            class ScrollSnap : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.UI.Extensions.IScrollSnap
            {
                /*0x18*/ UnityEngine.UI.ScrollRect _scroll_rect;
                /*0x20*/ UnityEngine.RectTransform _scrollRectTransform;
                /*0x28*/ UnityEngine.Transform _listContainerTransform;
                /*0x30*/ int _pages;
                /*0x34*/ int _startingPage;
                /*0x38*/ UnityEngine.Vector3[] _pageAnchorPositions;
                /*0x40*/ UnityEngine.Vector3 _lerpTarget;
                /*0x4c*/ bool _lerp;
                /*0x50*/ float _listContainerMinPosition;
                /*0x54*/ float _listContainerMaxPosition;
                /*0x58*/ float _listContainerSize;
                /*0x60*/ UnityEngine.RectTransform _listContainerRectTransform;
                /*0x68*/ UnityEngine.Vector2 _listContainerCachedSize;
                /*0x70*/ float _itemSize;
                /*0x74*/ int _itemsCount;
                /*0x78*/ bool _startDrag;
                /*0x7c*/ UnityEngine.Vector3 _positionOnDragStart;
                /*0x88*/ int _pageOnDragStart;
                /*0x8c*/ bool _fastSwipeTimer;
                /*0x90*/ int _fastSwipeCounter;
                /*0x94*/ int _fastSwipeTarget;
                /*0x98*/ UnityEngine.UI.Button NextButton;
                /*0xa0*/ UnityEngine.UI.Button PrevButton;
                /*0xa8*/ int ItemsVisibleAtOnce;
                /*0xac*/ bool AutoLayoutItems;
                /*0xad*/ bool LinkScrolbarSteps;
                /*0xae*/ bool LinkScrolrectScrollSensitivity;
                /*0xaf*/ bool UseFastSwipe;
                /*0xb0*/ int FastSwipeThreshold;
                /*0xb8*/ UnityEngine.UI.Extensions.ScrollSnap.PageSnapChange onPageChange;
                /*0xc0*/ UnityEngine.UI.Extensions.ScrollSnap.ScrollDirection direction;
                /*0xc4*/ bool fastSwipe;

                /*0xe1f3dc*/ ScrollSnap();
                /*0xe1da00*/ void add_onPageChange(UnityEngine.UI.Extensions.ScrollSnap.PageSnapChange value);
                /*0xe1daa0*/ void remove_onPageChange(UnityEngine.UI.Extensions.ScrollSnap.PageSnapChange value);
                /*0xe1db40*/ void Start();
                /*0xe1de80*/ void UpdateListItemsSize();
                /*0xe1e5e4*/ void UpdateListItemPositions();
                /*0xe1eeec*/ void ResetPage();
                /*0xe1ed40*/ void UpdateScrollbar(bool linkSteps);
                /*0xe1ef6c*/ void LateUpdate();
                /*0xe1f0e0*/ void NextScreen();
                /*0xe1f188*/ void PreviousScreen();
                /*0xe1f228*/ void NextScreenCommand();
                /*0xe1f2c4*/ void PrevScreenCommand();
                /*0xe1ebac*/ int CurrentPage();
                /*0xe1f35c*/ void SetLerp(bool value);
                /*0xe1f368*/ void ChangePage(int page);
                /*0xe1ec38*/ void PageChanged(int currentPage);
                /*0xe180c8*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe18194*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe18368*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1f3d8*/ void StartScreenChange();
                /*0xe1f408*/ void <Start>b__35_0();
                /*0xe1f40c*/ void <Start>b__35_1();

                enum ScrollDirection
                {
                    Horizontal = 0,
                    Vertical = 1,
                }

                class PageSnapChange : System.MulticastDelegate
                {
                    /*0xcbd77c*/ PageSnapChange(object object, nint method);
                    /*0xcbd7dc*/ void Invoke(int page);
                    /*0xcbda08*/ System.IAsyncResult BeginInvoke(int page, System.AsyncCallback callback, object object);
                    /*0xcbda90*/ void EndInvoke(System.IAsyncResult result);
                }
            }

            class ScrollSnapBase : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.UI.Extensions.IScrollSnap
            {
                /*0x18*/ UnityEngine.Rect panelDimensions;
                /*0x28*/ UnityEngine.RectTransform _screensContainer;
                /*0x30*/ bool _isVertical;
                /*0x34*/ int _screens;
                /*0x38*/ float _scrollStartPosition;
                /*0x3c*/ float _childSize;
                /*0x40*/ float _childPos;
                /*0x44*/ float _maskSize;
                /*0x48*/ UnityEngine.Vector2 _childAnchorPoint;
                /*0x50*/ UnityEngine.UI.ScrollRect _scroll_rect;
                /*0x58*/ UnityEngine.Vector3 _lerp_target;
                /*0x64*/ bool _lerp;
                /*0x65*/ bool _pointerDown;
                /*0x66*/ bool _settled;
                /*0x68*/ UnityEngine.Vector3 _startPosition;
                /*0x74*/ int _currentPage;
                /*0x78*/ int _previousPage;
                /*0x7c*/ int _halfNoVisibleItems;
                /*0x80*/ bool _moveStarted;
                /*0x81*/ bool _isInfinate;
                /*0x84*/ int _infiniteWindow;
                /*0x88*/ float _infiniteOffset;
                /*0x8c*/ int _bottomItem;
                /*0x90*/ int _topItem;
                /*0x94*/ int StartingScreen;
                /*0x98*/ float PageStep;
                /*0xa0*/ UnityEngine.GameObject Pagination;
                /*0xa8*/ UnityEngine.GameObject PrevButton;
                /*0xb0*/ UnityEngine.GameObject NextButton;
                /*0xb8*/ float transitionSpeed;
                /*0xbc*/ bool UseHardSwipe;
                /*0xbd*/ bool UseFastSwipe;
                /*0xc0*/ int FastSwipeThreshold;
                /*0xc4*/ int SwipeVelocityThreshold;
                /*0xc8*/ bool UseTimeScale;
                /*0xd0*/ UnityEngine.RectTransform MaskArea;
                /*0xd8*/ float MaskBuffer;
                /*0xdc*/ bool JumpOnEnable;
                /*0xdd*/ bool RestartOnEnable;
                /*0xde*/ bool UseParentTransform;
                /*0xe0*/ UnityEngine.GameObject[] ChildObjects;
                /*0xe8*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeStartEvent m_OnSelectionChangeStartEvent;
                /*0xf0*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionPageChangedEvent m_OnSelectionPageChangedEvent;
                /*0xf8*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeEndEvent m_OnSelectionChangeEndEvent;

                /*0xe20fec*/ ScrollSnapBase();
                /*0xe1f410*/ int get_CurrentPage();
                /*0xe1f418*/ void set_CurrentPage(int value);
                /*0xe1fb34*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeStartEvent get_OnSelectionChangeStartEvent();
                /*0xe1fb3c*/ void set_OnSelectionChangeStartEvent(UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeStartEvent value);
                /*0xe1fb44*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionPageChangedEvent get_OnSelectionPageChangedEvent();
                /*0xe1fb4c*/ void set_OnSelectionPageChangedEvent(UnityEngine.UI.Extensions.ScrollSnapBase.SelectionPageChangedEvent value);
                /*0xe1fb54*/ UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeEndEvent get_OnSelectionChangeEndEvent();
                /*0xe1fb5c*/ void set_OnSelectionChangeEndEvent(UnityEngine.UI.Extensions.ScrollSnapBase.SelectionChangeEndEvent value);
                /*0xe1fb64*/ void Awake();
                /*0xe1ff10*/ void InitialiseChildObjects();
                /*0xe20258*/ void InitialiseChildObjectsFromScene();
                /*0xe1ffe0*/ void InitialiseChildObjectsFromArray();
                /*0xe1f628*/ void UpdateVisible();
                /*0xe20418*/ void NextScreen();
                /*0xe20600*/ void PreviousScreen();
                /*0xe20678*/ void GoToScreen(int screenIndex);
                /*0xe206f0*/ int GetPageforPosition(UnityEngine.Vector3 pos);
                /*0xe2081c*/ bool IsRectSettledOnaPage(UnityEngine.Vector3 pos);
                /*0xe204cc*/ void GetPositionforPage(int page, ref UnityEngine.Vector3 target);
                /*0xe2095c*/ void ScrollToClosestElement();
                /*0xe1fb08*/ void OnCurrentScreenChange(int currentScreen);
                /*0xe209d0*/ void ChangeBulletsInfo(int targetScreen);
                /*0xe20ad8*/ void ToggleNavigationButtons(int targetScreen);
                /*0xe20c28*/ void OnValidate();
                /*0xe20498*/ void StartScreenChange();
                /*0xe1fab0*/ void ScreenChange();
                /*0xe20e7c*/ void EndScreenChange();
                /*0xe20ee4*/ UnityEngine.Transform CurrentPageObject();
                /*0xe20f08*/ void CurrentPageObject(ref UnityEngine.Transform returnObject);
                /*0xe20f44*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe20f88*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe20f90*/ int UnityEngine.UI.Extensions.IScrollSnap.CurrentPage();
                /*0xe20fdc*/ void SetLerp(bool value);
                /*0xe20fe8*/ void ChangePage(int page);
                /*0xe210d8*/ void <Awake>b__59_0();
                /*0xe210dc*/ void <Awake>b__59_1();

                class SelectionChangeStartEvent : UnityEngine.Events.UnityEvent
                {
                    /*0xcbdae8*/ SelectionChangeStartEvent();
                }

                class SelectionPageChangedEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcbdaf0*/ SelectionPageChangedEvent();
                }

                class SelectionChangeEndEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xcbda9c*/ SelectionChangeEndEvent();
                }
            }

            class ScrollSnapScrollbarHelper : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.UI.Extensions.IScrollSnap ss;

                /*0xe21468*/ ScrollSnapScrollbarHelper();
                /*0xe210e0*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe2121c*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe212cc*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21460*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe21464*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe210e4*/ void OnScrollBarDown();
                /*0xe212d0*/ void OnScrollBarUp();
            }

            class TableLayoutGroup : UnityEngine.UI.LayoutGroup
            {
                /*0x58*/ UnityEngine.UI.Extensions.TableLayoutGroup.Corner startCorner;
                /*0x60*/ float[] columnWidths;
                /*0x68*/ float minimumRowHeight;
                /*0x6c*/ bool flexibleRowHeight;
                /*0x70*/ float columnSpacing;
                /*0x74*/ float rowSpacing;
                /*0x78*/ float[] preferredRowHeights;

                /*0xca2064*/ TableLayoutGroup();
                /*0xca15d8*/ UnityEngine.UI.Extensions.TableLayoutGroup.Corner get_StartCorner();
                /*0xca15e0*/ void set_StartCorner(UnityEngine.UI.Extensions.TableLayoutGroup.Corner value);
                /*0xca1640*/ float[] get_ColumnWidths();
                /*0xca1648*/ void set_ColumnWidths(float[] value);
                /*0xca16a8*/ float get_MinimumRowHeight();
                /*0xca16b0*/ void set_MinimumRowHeight(float value);
                /*0xca1710*/ bool get_FlexibleRowHeight();
                /*0xca1718*/ void set_FlexibleRowHeight(bool value);
                /*0xca1778*/ float get_ColumnSpacing();
                /*0xca1780*/ void set_ColumnSpacing(float value);
                /*0xca17e0*/ float get_RowSpacing();
                /*0xca17e8*/ void set_RowSpacing(float value);
                /*0xca1848*/ void CalculateLayoutInputHorizontal();
                /*0xca1944*/ void CalculateLayoutInputVertical();
                /*0xca1bfc*/ void SetLayoutHorizontal();
                /*0xca1e4c*/ void SetLayoutVertical();

                enum Corner
                {
                    UpperLeft = 0,
                    UpperRight = 1,
                    LowerLeft = 2,
                    LowerRight = 3,
                }
            }

            class TileSizeFitter : UnityEngine.EventSystems.UIBehaviour, UnityEngine.UI.ILayoutSelfController, UnityEngine.UI.ILayoutController
            {
                /*0x18*/ UnityEngine.Vector2 m_Border;
                /*0x20*/ UnityEngine.Vector2 m_TileSize;
                /*0x28*/ UnityEngine.RectTransform m_Rect;
                /*0x30*/ UnityEngine.DrivenRectTransformTracker m_Tracker;

                /*0x116d754*/ TileSizeFitter();
                /*0x116d1ec*/ UnityEngine.Vector2 get_Border();
                /*0x116d1f4*/ void set_Border(UnityEngine.Vector2 value);
                /*0x116d2c4*/ UnityEngine.Vector2 get_TileSize();
                /*0x116d2cc*/ void set_TileSize(UnityEngine.Vector2 value);
                /*0x116d360*/ UnityEngine.RectTransform get_rectTransform();
                /*0x116d400*/ void OnEnable();
                /*0x116d448*/ void OnDisable();
                /*0x116d4d4*/ void OnRectTransformDimensionsChange();
                /*0x116d4d8*/ void UpdateRect();
                /*0x116d65c*/ UnityEngine.Vector2 GetParentSize();
                /*0x116d74c*/ void SetLayoutHorizontal();
                /*0x116d750*/ void SetLayoutVertical();
                /*0x116d288*/ void SetDirty();
            }

            class UIVerticalScroller : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.ScrollRect scrollRect;
                /*0x20*/ UnityEngine.RectTransform center;
                /*0x28*/ UnityEngine.RectTransform elementSize;
                /*0x30*/ UnityEngine.Vector2 elementShrinkage;
                /*0x38*/ UnityEngine.Vector2 minScale;
                /*0x40*/ int startingIndex;
                /*0x44*/ bool stopMomentumOnEnd;
                /*0x45*/ bool disableUnfocused;
                /*0x48*/ UnityEngine.GameObject scrollUpButton;
                /*0x50*/ UnityEngine.GameObject scrollDownButton;
                /*0x58*/ UnityEngine.UI.Extensions.UIVerticalScroller.IntEvent OnButtonClicked;
                /*0x60*/ UnityEngine.UI.Extensions.UIVerticalScroller.IntEvent OnFocusChanged;
                /*0x68*/ UnityEngine.GameObject[] _arrayOfElements;
                /*0x70*/ int <focusedElementIndex>k__BackingField;
                /*0x78*/ string <result>k__BackingField;
                /*0x80*/ float[] distReposition;
                /*0x88*/ float[] distance;

                /*0x2368188*/ UIVerticalScroller();
                /*0x23681ac*/ UIVerticalScroller(UnityEngine.RectTransform center, UnityEngine.RectTransform elementSize, UnityEngine.UI.ScrollRect scrollRect, UnityEngine.GameObject[] arrayOfElements);
                /*0x236814c*/ int get_focusedElementIndex();
                /*0x2368154*/ void set_focusedElementIndex(int value);
                /*0x236815c*/ string get_result();
                /*0x2368164*/ void set_result(string value);
                /*0x236816c*/ UnityEngine.RectTransform get_scrollingPanel();
                /*0x2368218*/ void Awake();
                /*0x236845c*/ void updateChildren(int startingIndex, UnityEngine.GameObject[] arrayOfElements);
                /*0x23688f0*/ void Start();
                /*0x2368a94*/ void Update();
                /*0x2368ed4*/ void ScrollingElements();
                /*0x2368854*/ void SnapToElement(int element);
                /*0x2368fb8*/ void ScrollUp();
                /*0x23690b4*/ void ScrollDown();
                /*0x2369170*/ void <Start>b__29_0();
                /*0x2369174*/ void <Start>b__29_1();

                class IntEvent : UnityEngine.Events.UnityEvent<int>
                {
                    /*0xd8a47c*/ IntEvent();
                }

                class <>c__DisplayClass28_0
                {
                    /*0x10*/ int j;
                    /*0x18*/ UnityEngine.UI.Extensions.UIVerticalScroller <>4__this;

                    /*0xd8a414*/ <>c__DisplayClass28_0();
                    /*0xd8a41c*/ void <updateChildren>b__0();
                }
            }

            class VerticalScrollSnap : UnityEngine.UI.Extensions.ScrollSnapBase, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x10d3b2c*/ VerticalScrollSnap();
                /*0x10d2d40*/ void Start();
                /*0x10d2e70*/ void Update();
                /*0x10d30b4*/ bool IsRectMovingSlowerThanThreshold(float startingSpeed);
                /*0x10d3114*/ void DistributePages();
                /*0x10d3370*/ void AddChild(UnityEngine.GameObject GO);
                /*0x10d3378*/ void AddChild(UnityEngine.GameObject GO, bool WorldPositionStays);
                /*0x10d34c0*/ void RemoveChild(int index, ref UnityEngine.GameObject ChildRemoved);
                /*0x10d34cc*/ void RemoveChild(int index, bool WorldPositionStays, ref UnityEngine.GameObject ChildRemoved);
                /*0x10d3630*/ void RemoveAllChildren(ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x10d363c*/ void RemoveAllChildren(bool WorldPositionStays, ref UnityEngine.GameObject[] ChildrenRemoved);
                /*0x10d3458*/ void SetScrollContainerPosition();
                /*0x10d2dd4*/ void UpdateLayout();
                /*0x10d3834*/ void OnRectTransformDimensionsChange();
                /*0x10d389c*/ void OnEnable();
                /*0x10d3964*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            class Menu<T> : UnityEngine.UI.Extensions.Menu
            {
                static /*0x0*/ T <Instance>k__BackingField;

                static T get_Instance();
                static void set_Instance(T value);
                static void Open();
                static void Close();
                Menu();
                void Awake();
                void OnDestroy();
                void OnBackPressed();
            }

            class Menu : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool DestroyWhenClosed;
                /*0x19*/ bool DisableMenusUnderneath;

                /*0x2b3aabc*/ Menu();
                void OnBackPressed();
            }

            class MenuManager : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ UnityEngine.UI.Extensions.MenuManager <Instance>k__BackingField;
                /*0x18*/ UnityEngine.UI.Extensions.Menu[] menuScreens;
                /*0x20*/ int startScreen;
                /*0x28*/ System.Collections.Generic.Stack<UnityEngine.UI.Extensions.Menu> menuStack;

                static /*0x2b3ab40*/ UnityEngine.UI.Extensions.MenuManager get_Instance();
                static /*0x2b3ab8c*/ void set_Instance(UnityEngine.UI.Extensions.MenuManager value);
                /*0x2b3b6a4*/ MenuManager();
                /*0x2b3ab20*/ UnityEngine.UI.Extensions.Menu[] get_MenuScreens();
                /*0x2b3ab28*/ void set_MenuScreens(UnityEngine.UI.Extensions.Menu[] value);
                /*0x2b3ab30*/ int get_StartScreen();
                /*0x2b3ab38*/ void set_StartScreen(int value);
                /*0x2b3abdc*/ void Start();
                /*0x2b3afd4*/ void OnDestroy();
                /*0x2b3acf0*/ UnityEngine.GameObject CreateInstance(string MenuName);
                /*0x2b3b11c*/ void CreateInstance(string MenuName, ref UnityEngine.GameObject menuInstance);
                /*0x2b3ad9c*/ void OpenMenu(UnityEngine.UI.Extensions.Menu menuInstance);
                /*0x2b3b020*/ UnityEngine.GameObject GetPrefab(string PrefabName);
                /*0x2b3b1d4*/ void CloseMenu(UnityEngine.UI.Extensions.Menu menu);
                /*0x2b3b3fc*/ void CloseTopMenu();
                /*0x2b3b5e0*/ void Update();
            }

            class MenuExtensions
            {
                static /*0x2b3aacc*/ UnityEngine.UI.Extensions.Menu GetMenu(UnityEngine.GameObject go);
            }

            class SimpleMenu<T> : UnityEngine.UI.Extensions.Menu<T>
            {
                static void Show();
                static void Hide();
                SimpleMenu();
            }

            class DiamondGraph : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf8*/ float m_a;
                /*0xfc*/ float m_b;
                /*0x100*/ float m_c;
                /*0x104*/ float m_d;

                /*0x11f1e70*/ DiamondGraph();
                /*0x11f1b24*/ float get_A();
                /*0x11f1b2c*/ void set_A(float value);
                /*0x11f1b34*/ float get_B();
                /*0x11f1b3c*/ void set_B(float value);
                /*0x11f1b44*/ float get_C();
                /*0x11f1b4c*/ void set_C(float value);
                /*0x11f1b54*/ float get_D();
                /*0x11f1b5c*/ void set_D(float value);
                /*0x11f1b64*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class UICircle : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf5*/ bool ArcInvert;
                /*0xf8*/ float Arc;
                /*0xfc*/ int ArcSteps;
                /*0x100*/ int ArcRotation;
                /*0x104*/ float Progress;
                /*0x108*/ float _progress;
                /*0x10c*/ UnityEngine.Color ProgressColor;
                /*0x11c*/ bool Fill;
                /*0x120*/ float Thickness;
                /*0x124*/ int Padding;
                /*0x128*/ System.Collections.Generic.List<int> indices;
                /*0x130*/ System.Collections.Generic.List<UnityEngine.UIVertex> vertices;
                /*0x138*/ UnityEngine.Vector2 uvCenter;

                /*0x235c314*/ UICircle();
                /*0x235ba84*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x235c1ac*/ void SetProgress(float progress);
                /*0x235c1c0*/ void SetArcSteps(int steps);
                /*0x235c1d4*/ void SetInvertArc(bool invert);
                /*0x235c1ec*/ void SetArcRotation(int rotation);
                /*0x235c200*/ void SetFill(bool fill);
                /*0x235c218*/ void SetBaseColor(UnityEngine.Color color);
                /*0x235c254*/ void UpdateBaseAlpha(float value);
                /*0x235c2b4*/ void SetProgressColor(UnityEngine.Color color);
                /*0x235c2d4*/ void UpdateProgressAlpha(float value);
                /*0x235c2e8*/ void SetPadding(int padding);
                /*0x235c2fc*/ void SetThickness(int thickness);
            }

            class UICornerCut : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf8*/ UnityEngine.Vector2 cornerSize;
                /*0x100*/ bool m_cutUL;
                /*0x101*/ bool m_cutUR;
                /*0x102*/ bool m_cutLL;
                /*0x103*/ bool m_cutLR;
                /*0x104*/ bool m_makeColumns;
                /*0x105*/ bool m_useColorUp;
                /*0x108*/ UnityEngine.Color32 m_colorUp;
                /*0x10c*/ bool m_useColorDown;
                /*0x110*/ UnityEngine.Color32 m_colorDown;

                static /*0x235ccc4*/ void AddSquare(UnityEngine.Rect rect, UnityEngine.Rect rectUV, UnityEngine.Color32 color32, UnityEngine.UI.VertexHelper vh);
                static /*0x235cb94*/ void AddSquare(UnityEngine.Vector2 a, UnityEngine.Vector2 b, UnityEngine.Vector2 c, UnityEngine.Vector2 d, UnityEngine.Rect rectUV, UnityEngine.Color32 color32, UnityEngine.UI.VertexHelper vh);
                static /*0x235ce78*/ int AddVert(float x, float y, UnityEngine.Rect area, UnityEngine.Color32 color32, UnityEngine.UI.VertexHelper vh);
                /*0x235cf88*/ UICornerCut();
                /*0x235c4e0*/ bool get_CutUL();
                /*0x235c4e8*/ void set_CutUL(bool value);
                /*0x235c500*/ bool get_CutUR();
                /*0x235c508*/ void set_CutUR(bool value);
                /*0x235c520*/ bool get_CutLL();
                /*0x235c528*/ void set_CutLL(bool value);
                /*0x235c540*/ bool get_CutLR();
                /*0x235c548*/ void set_CutLR(bool value);
                /*0x235c560*/ bool get_MakeColumns();
                /*0x235c568*/ void set_MakeColumns(bool value);
                /*0x235c580*/ bool get_UseColorUp();
                /*0x235c588*/ void set_UseColorUp(bool value);
                /*0x235c594*/ UnityEngine.Color32 get_ColorUp();
                /*0x235c59c*/ void set_ColorUp(UnityEngine.Color32 value);
                /*0x235c5a4*/ bool get_UseColorDown();
                /*0x235c5ac*/ void set_UseColorDown(bool value);
                /*0x235c5b8*/ UnityEngine.Color32 get_ColorDown();
                /*0x235c5c0*/ void set_ColorDown(UnityEngine.Color32 value);
                /*0x235c5c8*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class UIGridRenderer : UnityEngine.UI.Extensions.UILineRenderer
            {
                /*0x120*/ int m_GridColumns;
                /*0x124*/ int m_GridRows;

                /*0x235dd70*/ UIGridRenderer();
                /*0x235d81c*/ int get_GridColumns();
                /*0x235d824*/ void set_GridColumns(int value);
                /*0x235d848*/ int get_GridRows();
                /*0x235d850*/ void set_GridRows(int value);
                /*0x235d874*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class UILineRenderer : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                static float MIN_MITER_JOIN = 0.2617993950843811;
                static float MIN_BEVEL_NICE_JOIN = 0.5235987901687622;
                static /*0x0*/ UnityEngine.Vector2 UV_TOP_LEFT;
                static /*0x8*/ UnityEngine.Vector2 UV_BOTTOM_LEFT;
                static /*0x10*/ UnityEngine.Vector2 UV_TOP_CENTER_LEFT;
                static /*0x18*/ UnityEngine.Vector2 UV_TOP_CENTER_RIGHT;
                static /*0x20*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_LEFT;
                static /*0x28*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_RIGHT;
                static /*0x30*/ UnityEngine.Vector2 UV_TOP_RIGHT;
                static /*0x38*/ UnityEngine.Vector2 UV_BOTTOM_RIGHT;
                static /*0x40*/ UnityEngine.Vector2[] startUvs;
                static /*0x48*/ UnityEngine.Vector2[] middleUvs;
                static /*0x50*/ UnityEngine.Vector2[] endUvs;
                static /*0x58*/ UnityEngine.Vector2[] fullUvs;
                /*0xf8*/ UnityEngine.Vector2[] m_points;
                /*0x100*/ System.Collections.Generic.List<UnityEngine.Vector2[]> m_segments;
                /*0x108*/ float lineThickness;
                /*0x10c*/ bool relativeSize;
                /*0x10d*/ bool lineList;
                /*0x10e*/ bool lineCaps;
                /*0x110*/ int bezierSegmentsPerCurve;
                /*0x114*/ UnityEngine.UI.Extensions.UILineRenderer.JoinType LineJoins;
                /*0x118*/ UnityEngine.UI.Extensions.UILineRenderer.BezierType BezierMode;
                /*0x11c*/ bool drivenExternally;

                /*0x235dd7c*/ UILineRenderer();
                /*0x235e870*/ float get_LineThickness();
                /*0x235e878*/ void set_LineThickness(float value);
                /*0x235e88c*/ bool get_RelativeSize();
                /*0x235e850*/ void set_RelativeSize(bool value);
                /*0x235e894*/ bool get_LineList();
                /*0x235e89c*/ void set_LineList(bool value);
                /*0x235e8b4*/ bool get_LineCaps();
                /*0x235e8bc*/ void set_LineCaps(bool value);
                /*0x235e8d4*/ int get_BezierSegmentsPerCurve();
                /*0x235e8dc*/ void set_BezierSegmentsPerCurve(int value);
                /*0x235e8e4*/ UnityEngine.Vector2[] get_Points();
                /*0x235d7c0*/ void set_Points(UnityEngine.Vector2[] value);
                /*0x235e8ec*/ System.Collections.Generic.List<UnityEngine.Vector2[]> get_Segments();
                /*0x235e8f4*/ void set_Segments(System.Collections.Generic.List<UnityEngine.Vector2[]> value);
                /*0x235e908*/ void PopulateMesh(UnityEngine.UI.VertexHelper vh, UnityEngine.Vector2[] pointsToDraw);
                /*0x235dc40*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x235f820*/ UnityEngine.UIVertex[] CreateLineCap(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRenderer.SegmentType type);
                /*0x235f978*/ UnityEngine.UIVertex[] CreateLineSegment(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRenderer.SegmentType type);
                /*0x235fe04*/ void GeneratedUVs();
                /*0x236024c*/ void ResolutionToNativeSize(float distance);

                enum SegmentType
                {
                    Start = 0,
                    Middle = 1,
                    End = 2,
                    Full = 3,
                }

                enum JoinType
                {
                    Bevel = 0,
                    Miter = 1,
                }

                enum BezierType
                {
                    None = 0,
                    Quick = 1,
                    Basic = 2,
                    Improved = 3,
                    Catenary = 4,
                }
            }

            class UILineRendererList : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                static float MIN_MITER_JOIN = 0.2617993950843811;
                static float MIN_BEVEL_NICE_JOIN = 0.5235987901687622;
                static /*0x0*/ UnityEngine.Vector2 UV_TOP_LEFT;
                static /*0x8*/ UnityEngine.Vector2 UV_BOTTOM_LEFT;
                static /*0x10*/ UnityEngine.Vector2 UV_TOP_CENTER_LEFT;
                static /*0x18*/ UnityEngine.Vector2 UV_TOP_CENTER_RIGHT;
                static /*0x20*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_LEFT;
                static /*0x28*/ UnityEngine.Vector2 UV_BOTTOM_CENTER_RIGHT;
                static /*0x30*/ UnityEngine.Vector2 UV_TOP_RIGHT;
                static /*0x38*/ UnityEngine.Vector2 UV_BOTTOM_RIGHT;
                static /*0x40*/ UnityEngine.Vector2[] startUvs;
                static /*0x48*/ UnityEngine.Vector2[] middleUvs;
                static /*0x50*/ UnityEngine.Vector2[] endUvs;
                static /*0x58*/ UnityEngine.Vector2[] fullUvs;
                /*0xf8*/ System.Collections.Generic.List<UnityEngine.Vector2> m_points;
                /*0x100*/ float lineThickness;
                /*0x104*/ bool relativeSize;
                /*0x105*/ bool lineList;
                /*0x106*/ bool lineCaps;
                /*0x108*/ int bezierSegmentsPerCurve;
                /*0x10c*/ UnityEngine.UI.Extensions.UILineRendererList.JoinType LineJoins;
                /*0x110*/ UnityEngine.UI.Extensions.UILineRendererList.BezierType BezierMode;
                /*0x114*/ bool drivenExternally;

                /*0x23621e0*/ UILineRendererList();
                /*0x2360418*/ float get_LineThickness();
                /*0x2360420*/ void set_LineThickness(float value);
                /*0x2360434*/ bool get_RelativeSize();
                /*0x236043c*/ void set_RelativeSize(bool value);
                /*0x2360454*/ bool get_LineList();
                /*0x236045c*/ void set_LineList(bool value);
                /*0x2360474*/ bool get_LineCaps();
                /*0x236047c*/ void set_LineCaps(bool value);
                /*0x2360494*/ int get_BezierSegmentsPerCurve();
                /*0x236049c*/ void set_BezierSegmentsPerCurve(int value);
                /*0x23604a4*/ System.Collections.Generic.List<UnityEngine.Vector2> get_Points();
                /*0x23604ac*/ void set_Points(System.Collections.Generic.List<UnityEngine.Vector2> value);
                /*0x23604d0*/ void AddPoint(UnityEngine.Vector2 pointToAdd);
                /*0x2360550*/ void RemovePoint(UnityEngine.Vector2 pointToRemove);
                /*0x23605d0*/ void ClearPoints();
                /*0x2360638*/ void PopulateMesh(UnityEngine.UI.VertexHelper vh, System.Collections.Generic.List<UnityEngine.Vector2> pointsToDraw);
                /*0x2361cc4*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x23618f4*/ UnityEngine.UIVertex[] CreateLineCap(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRendererList.SegmentType type);
                /*0x2361a4c*/ UnityEngine.UIVertex[] CreateLineSegment(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.UI.Extensions.UILineRendererList.SegmentType type);
                /*0x2361d64*/ void GeneratedUVs();
                /*0x2362128*/ void ResolutionToNativeSize(float distance);

                enum SegmentType
                {
                    Start = 0,
                    Middle = 1,
                    End = 2,
                    Full = 3,
                }

                enum JoinType
                {
                    Bevel = 0,
                    Miter = 1,
                }

                enum BezierType
                {
                    None = 0,
                    Quick = 1,
                    Basic = 2,
                    Improved = 3,
                    Catenary = 4,
                }
            }

            class UILineTextureRenderer : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf8*/ UnityEngine.Rect m_UVRect;
                /*0x108*/ UnityEngine.Vector2[] m_points;
                /*0x110*/ float LineThickness;
                /*0x114*/ bool UseMargins;
                /*0x118*/ UnityEngine.Vector2 Margin;
                /*0x120*/ bool relativeSize;

                /*0x2362bd4*/ UILineTextureRenderer();
                /*0x2362250*/ UnityEngine.Rect get_uvRect();
                /*0x2362260*/ void set_uvRect(UnityEngine.Rect value);
                /*0x23622f8*/ UnityEngine.Vector2[] get_Points();
                /*0x2362300*/ void set_Points(UnityEngine.Vector2[] value);
                /*0x2362324*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
                /*0x2362b58*/ UnityEngine.Vector3 RotatePointAroundPivot(UnityEngine.Vector3 point, UnityEngine.Vector3 pivot, UnityEngine.Vector3 angles);
            }

            class UIPolygon : UnityEngine.UI.Extensions.UIPrimitiveBase
            {
                /*0xf5*/ bool fill;
                /*0xf8*/ float thickness;
                /*0xfc*/ int sides;
                /*0x100*/ float rotation;
                /*0x108*/ float[] VerticesDistances;
                /*0x110*/ float size;

                /*0x2364c34*/ UIPolygon();
                /*0x2364674*/ void DrawPolygon(int _sides);
                /*0x236473c*/ void DrawPolygon(int _sides, float[] _VerticesDistances);
                /*0x2364754*/ void DrawPolygon(int _sides, float[] _VerticesDistances, float _rotation);
                /*0x2364770*/ void Update();
                /*0x2364890*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            enum ResolutionMode
            {
                None = 0,
                PerSegment = 1,
                PerLine = 2,
            }

            class UIPrimitiveBase : UnityEngine.UI.MaskableGraphic, UnityEngine.UI.ILayoutElement, UnityEngine.ICanvasRaycastFilter
            {
                static /*0x0*/ UnityEngine.Material s_ETC1DefaultUI;
                /*0xd0*/ System.Collections.Generic.List<UnityEngine.Vector2> outputList;
                /*0xd8*/ UnityEngine.Sprite m_Sprite;
                /*0xe0*/ UnityEngine.Sprite m_OverrideSprite;
                /*0xe8*/ float m_EventAlphaThreshold;
                /*0xec*/ UnityEngine.UI.Extensions.ResolutionMode m_improveResolution;
                /*0xf0*/ float m_Resolution;
                /*0xf4*/ bool m_useNativeSize;

                static /*0x2365acc*/ UIPrimitiveBase();
                static /*0x2364e50*/ UnityEngine.Material get_defaultETC1GraphicMaterial();
                /*0x235c458*/ UIPrimitiveBase();
                /*0x2364ccc*/ UnityEngine.Sprite get_sprite();
                /*0x2364cd4*/ void set_sprite(UnityEngine.Sprite value);
                /*0x2364d5c*/ UnityEngine.Sprite get_overrideSprite();
                /*0x2364d60*/ void set_overrideSprite(UnityEngine.Sprite value);
                /*0x23601c8*/ UnityEngine.Sprite get_activeSprite();
                /*0x2364de8*/ float get_eventAlphaThreshold();
                /*0x2364df0*/ void set_eventAlphaThreshold(float value);
                /*0x2364df8*/ UnityEngine.UI.Extensions.ResolutionMode get_ImproveResolution();
                /*0x2364e00*/ void set_ImproveResolution(UnityEngine.UI.Extensions.ResolutionMode value);
                /*0x2364e14*/ float get_Resoloution();
                /*0x2364e1c*/ void set_Resoloution(float value);
                /*0x2364e30*/ bool get_UseNativeSize();
                /*0x2364e38*/ void set_UseNativeSize(bool value);
                /*0x2364f50*/ UnityEngine.Texture get_mainTexture();
                /*0x23650f4*/ bool get_hasBorder();
                /*0x2360304*/ float get_pixelsPerUnit();
                /*0x23651bc*/ UnityEngine.Material get_material();
                /*0x236531c*/ void set_material(UnityEngine.Material value);
                /*0x235fbf0*/ UnityEngine.UIVertex[] SetVbo(UnityEngine.Vector2[] vertices, UnityEngine.Vector2[] uvs);
                /*0x235f778*/ UnityEngine.Vector2[] IncreaseResolution(UnityEngine.Vector2[] input);
                /*0x2361504*/ System.Collections.Generic.List<UnityEngine.Vector2> IncreaseResolution(System.Collections.Generic.List<UnityEngine.Vector2> input);
                /*0x2365324*/ void GeneratedUVs();
                /*0x2365328*/ void ResolutionToNativeSize(float distance);
                /*0x236532c*/ void CalculateLayoutInputHorizontal();
                /*0x2365330*/ void CalculateLayoutInputVertical();
                /*0x2365334*/ float get_minWidth();
                /*0x236533c*/ float get_preferredWidth();
                /*0x2365410*/ float get_flexibleWidth();
                /*0x2365418*/ float get_minHeight();
                /*0x2365420*/ float get_preferredHeight();
                /*0x23654f4*/ float get_flexibleHeight();
                /*0x23654fc*/ int get_layoutPriority();
                /*0x2365504*/ bool IsRaycastLocationValid(UnityEngine.Vector2 screenPoint, UnityEngine.Camera eventCamera);
                /*0x2365908*/ UnityEngine.Vector2 MapCoordinate(UnityEngine.Vector2 local, UnityEngine.Rect rect);
                /*0x236597c*/ UnityEngine.Vector4 GetAdjustedBorders(UnityEngine.Vector4 border, UnityEngine.Rect rect);
                /*0x2365a98*/ void OnEnable();
            }

            enum NavigationMode
            {
                Auto = 0,
                Manual = 1,
            }

            class TabNavigationHelper : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.EventSystems.EventSystem _system;
                /*0x20*/ UnityEngine.UI.Selectable StartingObject;
                /*0x28*/ UnityEngine.UI.Selectable LastObject;
                /*0x30*/ UnityEngine.UI.Selectable[] NavigationPath;
                /*0x38*/ UnityEngine.UI.Extensions.NavigationMode NavigationMode;
                /*0x3c*/ bool CircularNavigation;

                /*0xc9ee88*/ TabNavigationHelper();
                /*0xc9e554*/ void Start();
                /*0xc9e7b8*/ void Update();
                /*0xc9e6f8*/ void SelectDefaultObject(ref UnityEngine.UI.Selectable next);
                /*0xc9ecec*/ void selectGameObject(UnityEngine.UI.Selectable selectable);
            }

            class BoundTooltipItem : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ UnityEngine.UI.Extensions.BoundTooltipItem instance;
                /*0x18*/ UnityEngine.UI.Text TooltipText;
                /*0x20*/ UnityEngine.Vector3 ToolTipOffset;

                static /*0x1364788*/ UnityEngine.UI.Extensions.BoundTooltipItem get_Instance();
                /*0x1364868*/ BoundTooltipItem();
                /*0x13645bc*/ bool get_IsActive();
                /*0x13645e0*/ void Awake();
                /*0x13646c0*/ void ShowTooltip(string text, UnityEngine.Vector3 pos);
                /*0x1364698*/ void HideTooltip();
            }

            class BoundTooltipTrigger : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ string text;
                /*0x20*/ bool useMousePosition;
                /*0x24*/ UnityEngine.Vector3 offset;

                /*0x1364988*/ BoundTooltipTrigger();
                /*0x1364870*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x136492c*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x1364964*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x1364984*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x13648d8*/ void StartHover(UnityEngine.Vector3 position);
                /*0x1364968*/ void StopHover();
            }

            class HoverTooltip : UnityEngine.MonoBehaviour
            {
                /*0x18*/ int horizontalPadding;
                /*0x1c*/ int verticalPadding;
                /*0x20*/ UnityEngine.UI.Text thisText;
                /*0x28*/ UnityEngine.UI.HorizontalLayoutGroup hlG;
                /*0x30*/ UnityEngine.RectTransform bgImage;
                /*0x38*/ UnityEngine.UI.Image bgImageSource;
                /*0x40*/ bool firstUpdate;
                /*0x41*/ bool inside;
                /*0x44*/ UnityEngine.RenderMode GUIMode;
                /*0x48*/ UnityEngine.Camera GUICamera;
                /*0x50*/ UnityEngine.Vector3 lowerLeft;
                /*0x5c*/ UnityEngine.Vector3 upperRight;
                /*0x68*/ float currentYScaleFactor;
                /*0x6c*/ float currentXScaleFactor;
                /*0x70*/ float defaultYOffset;
                /*0x74*/ float defaultXOffset;
                /*0x78*/ float tooltipRealHeight;
                /*0x7c*/ float tooltipRealWidth;

                /*0xd20548*/ HoverTooltip();
                /*0xd1f878*/ void Start();
                /*0xd1fab8*/ void SetTooltip(string text);
                /*0xd20084*/ void SetTooltip(string[] texts);
                /*0xd20190*/ void SetTooltip(string text, bool test);
                /*0xd1fc28*/ void OnScreenSpaceCamera();
                /*0xd201d8*/ void HideTooltip();
                /*0xd202a0*/ void Update();
                /*0xd202e4*/ void LayoutInit();
                /*0xd1fb00*/ void NewTooltip();
                /*0xd20438*/ void ActivateTooltipVisibility();
                /*0xd1f9ac*/ void HideTooltipVisibility();
            }

            class ToolTip : UnityEngine.MonoBehaviour
            {
                static /*0x0*/ UnityEngine.UI.Extensions.ToolTip instance;
                /*0x18*/ UnityEngine.UI.Text _text;
                /*0x20*/ UnityEngine.RectTransform _rectTransform;
                /*0x28*/ UnityEngine.RectTransform canvasRectTransform;
                /*0x30*/ UnityEngine.Canvas canvas;
                /*0x38*/ bool tooltipTriggersCanForceCanvasUpdate;
                /*0x40*/ UnityEngine.UI.LayoutGroup _layoutGroup;
                /*0x48*/ bool _inside;
                /*0x4c*/ float width;
                /*0x50*/ float height;
                /*0x54*/ float YShift;
                /*0x58*/ float xShift;
                /*0x5c*/ UnityEngine.RenderMode guiMode;
                /*0x60*/ UnityEngine.Camera _guiCamera;
                /*0x68*/ UnityEngine.Vector3 screenLowerLeft;
                /*0x74*/ UnityEngine.Vector3 screenUpperRight;
                /*0x80*/ UnityEngine.Vector3 shiftingVector;
                /*0x8c*/ UnityEngine.Vector3 baseTooltipPos;
                /*0x98*/ UnityEngine.Vector3 newTTPos;
                /*0xa4*/ UnityEngine.Vector3 adjustedNewTTPos;
                /*0xb0*/ UnityEngine.Vector3 adjustedTTLocalPos;
                /*0xbc*/ UnityEngine.Vector3 shifterForBorders;
                /*0xc8*/ float borderTest;

                static /*0x11707d0*/ UnityEngine.UI.Extensions.ToolTip get_Instance();
                /*0x1171298*/ ToolTip();
                /*0x117074c*/ UnityEngine.Camera get_GuiCamera();
                /*0x11708b0*/ void Reset();
                /*0x1170918*/ void Awake();
                /*0x1170ab4*/ void SetTooltip(string ttext, UnityEngine.Vector3 basePos, bool refreshCanvasesBeforeGetSize);
                /*0x1170bf4*/ void HideTooltip();
                /*0x1170c30*/ void Update();
                /*0x1170c44*/ void RefreshTooltipSize();
                /*0x1170bd0*/ void ContextualTooltipUpdate(bool refreshCanvasesBeforeGettingSize);
                /*0x1170cf8*/ void OnScreenSpaceCamera(bool refreshCanvasesBeforeGettingSize);
                /*0x1171074*/ void OnScreenSpaceOverlay(bool refreshCanvasesBeforeGettingSize);
            }

            class TooltipTrigger : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.ISelectHandler, UnityEngine.EventSystems.IDeselectHandler
            {
                /*0x18*/ string text;
                /*0x20*/ UnityEngine.UI.Extensions.TooltipTrigger.TooltipPositioningType tooltipPositioningType;
                /*0x24*/ bool isChildOfOverlayCanvas;
                /*0x25*/ bool hovered;
                /*0x28*/ UnityEngine.Vector3 offset;

                /*0x1173c70*/ TooltipTrigger();
                /*0x11738a8*/ void Start();
                /*0x117395c*/ bool get_WorldToScreenIsRequired();
                /*0x11739c4*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x1173b3c*/ System.Collections.IEnumerator HoveredMouseFollowingLoop();
                /*0x1173ba8*/ void OnSelect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x1173c48*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x1173c6c*/ void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData);
                /*0x1173ae0*/ void StartHover(UnityEngine.Vector3 position, bool shouldCanvasUpdate);
                /*0x1173c4c*/ void StopHover();

                enum TooltipPositioningType
                {
                    mousePosition = 0,
                    mousePositionAndFollow = 1,
                    transformPosition = 2,
                }

                class <HoveredMouseFollowingLoop>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.TooltipTrigger <>4__this;

                    /*0xcd1f2c*/ <HoveredMouseFollowingLoop>d__10(int <>1__state);
                    /*0xcd1f58*/ void System.IDisposable.Dispose();
                    /*0xcd1f5c*/ bool MoveNext();
                    /*0xcd1fe0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcd1fe8*/ void System.Collections.IEnumerator.Reset();
                    /*0xcd2028*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class UIWindowBase : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEndDragHandler
            {
                static /*0x0*/ bool ResetCoords;
                /*0x18*/ UnityEngine.RectTransform m_transform;
                /*0x20*/ bool _isDragging;
                /*0x24*/ UnityEngine.Vector3 m_originalCoods;
                /*0x30*/ UnityEngine.Canvas m_canvas;
                /*0x38*/ UnityEngine.RectTransform m_canvasRectTransform;
                /*0x40*/ int KeepWindowInCanvas;

                static /*0x2369810*/ UIWindowBase();
                /*0x23697d4*/ UIWindowBase();
                /*0x2369178*/ void Start();
                /*0x2369218*/ void Update();
                /*0x2369318*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2369708*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x23697cc*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2369294*/ void resetCoordinatePosition();
                /*0x23693d0*/ UnityEngine.Vector3 ScreenToCanvas(UnityEngine.Vector3 screenPosition);
            }

            class BezierPath
            {
                /*0x10*/ int SegmentsPerCurve;
                /*0x14*/ float MINIMUM_SQR_DISTANCE;
                /*0x18*/ float DIVISION_THRESHOLD;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.Vector2> controlPoints;
                /*0x28*/ int curveCount;

                /*0x1362800*/ BezierPath();
                /*0x1362890*/ void SetControlPoints(System.Collections.Generic.List<UnityEngine.Vector2> newControlPoints);
                /*0x1362954*/ void SetControlPoints(UnityEngine.Vector2[] newControlPoints);
                /*0x1362a18*/ System.Collections.Generic.List<UnityEngine.Vector2> GetControlPoints();
                /*0x1362a20*/ void Interpolate(System.Collections.Generic.List<UnityEngine.Vector2> segmentPoints, float scale);
                /*0x1362d3c*/ void SamplePoints(System.Collections.Generic.List<UnityEngine.Vector2> sourcePoints, float minSqrDistance, float maxSqrDistance, float scale);
                /*0x13630ac*/ UnityEngine.Vector2 CalculateBezierPoint(int curveIndex, float t);
                /*0x1363278*/ System.Collections.Generic.List<UnityEngine.Vector2> GetDrawingPoints0();
                /*0x136339c*/ System.Collections.Generic.List<UnityEngine.Vector2> GetDrawingPoints1();
                /*0x1363610*/ System.Collections.Generic.List<UnityEngine.Vector2> GetDrawingPoints2();
                /*0x1363718*/ System.Collections.Generic.List<UnityEngine.Vector2> FindDrawingPoints(int curveIndex);
                /*0x1363834*/ int FindDrawingPoints(int curveIndex, float t0, float t1, System.Collections.Generic.List<UnityEngine.Vector2> pointList, int insertionIndex);
                /*0x136320c*/ UnityEngine.Vector2 CalculateBezierPoint(float t, UnityEngine.Vector2 p0, UnityEngine.Vector2 p1, UnityEngine.Vector2 p2, UnityEngine.Vector2 p3);
            }

            class CLZF2
            {
                static /*0x0*/ uint HLOG;
                static /*0x4*/ uint HSIZE;
                static /*0x8*/ uint MAX_LIT;
                static /*0xc*/ uint MAX_OFF;
                static /*0x10*/ uint MAX_REF;
                static /*0x18*/ long[] HashTable;

                static /*0x133f8d0*/ CLZF2();
                static /*0x133ed2c*/ byte[] Compress(byte[] inputBytes);
                static /*0x133f5c8*/ byte[] Decompress(byte[] inputBytes);
                static /*0x133ee38*/ int lzf_compress(byte[] input, ref byte[] output);
                static /*0x133f6d4*/ int lzf_decompress(byte[] input, ref byte[] output);
            }

            class CableCurve
            {
                static /*0x0*/ UnityEngine.Vector2[] emptyCurve;
                /*0x10*/ UnityEngine.Vector2 m_start;
                /*0x18*/ UnityEngine.Vector2 m_end;
                /*0x20*/ float m_slack;
                /*0x24*/ int m_steps;
                /*0x28*/ bool m_regen;
                /*0x30*/ UnityEngine.Vector2[] points;

                static /*0x1345814*/ CableCurve();
                /*0x1345230*/ CableCurve();
                /*0x13452f4*/ CableCurve(UnityEngine.Vector2[] inputPoints);
                /*0x1345368*/ CableCurve(System.Collections.Generic.List<UnityEngine.Vector2> inputPoints);
                /*0x1345434*/ CableCurve(UnityEngine.UI.Extensions.CableCurve v);
                /*0x134504c*/ bool get_regenPoints();
                /*0x1345054*/ void set_regenPoints(bool value);
                /*0x1345060*/ UnityEngine.Vector2 get_start();
                /*0x1345068*/ void set_start(UnityEngine.Vector2 value);
                /*0x13450a0*/ UnityEngine.Vector2 get_end();
                /*0x13450a8*/ void set_end(UnityEngine.Vector2 value);
                /*0x13450e0*/ float get_slack();
                /*0x13450e8*/ void set_slack(float value);
                /*0x134512c*/ int get_steps();
                /*0x1345134*/ void set_steps(int value);
                /*0x1345174*/ UnityEngine.Vector2 get_midPoint();
                /*0x1345498*/ UnityEngine.Vector2[] Points();
            }

            class Circle
            {
                /*0x10*/ float xAxis;
                /*0x14*/ float yAxis;
                /*0x18*/ int steps;

                /*0x10df180*/ Circle(float radius);
                /*0x10df1bc*/ Circle(float radius, int steps);
                /*0x10df1f8*/ Circle(float xAxis, float yAxis);
                /*0x10df238*/ Circle(float xAxis, float yAxis, int steps);
                /*0x10df150*/ float get_X();
                /*0x10df158*/ void set_X(float value);
                /*0x10df160*/ float get_Y();
                /*0x10df168*/ void set_Y(float value);
                /*0x10df170*/ int get_Steps();
                /*0x10df178*/ void set_Steps(int value);
                /*0x10df278*/ UnityEngine.Vector2 Evaluate(float t);
                /*0x10df2e4*/ void Evaluate(float t, ref UnityEngine.Vector2 eval);
            }

            class DragCorrector : UnityEngine.MonoBehaviour
            {
                /*0x18*/ int baseTH;
                /*0x1c*/ int basePPI;
                /*0x20*/ int dragTH;

                /*0x11f1fb8*/ DragCorrector();
                /*0x11f1edc*/ void Start();
            }

            class ExtentionMethods
            {
                static T GetOrAddComponent<T>(UnityEngine.GameObject child);
            }

            class InputFieldEnterSubmit : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.InputFieldEnterSubmit.EnterSubmitEvent EnterSubmit;
                /*0x20*/ bool defocusInput;
                /*0x28*/ UnityEngine.UI.InputField _input;

                /*0x1573f80*/ InputFieldEnterSubmit();
                /*0x1573dbc*/ void Awake();
                /*0x1573ea0*/ void OnEndEdit(string txt);

                class EnterSubmitEvent : UnityEngine.Events.UnityEvent<string>
                {
                    /*0xe4f6f4*/ EnterSubmitEvent();
                }
            }

            class NonDrawingGraphic : UnityEngine.UI.MaskableGraphic
            {
                /*0x2b52594*/ NonDrawingGraphic();
                /*0x2b52570*/ void SetMaterialDirty();
                /*0x2b52574*/ void SetVerticesDirty();
                /*0x2b52578*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }

            class PPIViewer : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Text label;

                /*0x1141ad4*/ PPIViewer();
                /*0x114199c*/ void Awake();
                /*0x11419f0*/ void Start();
            }

            class PaginationManager : UnityEngine.UI.ToggleGroup
            {
                /*0x28*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_PaginationChildren;
                /*0x30*/ UnityEngine.UI.Extensions.ScrollSnapBase scrollSnap;
                /*0x38*/ bool isAClick;

                /*0x1141f40*/ PaginationManager();
                /*0x1141f24*/ int get_CurrentPage();
                /*0x1141f48*/ void Start();
                /*0x1142430*/ void GoToScreen(int pageNo);
                /*0x114244c*/ void ToggleClick(UnityEngine.UI.Toggle target);
                /*0x11424ec*/ void ToggleClick(bool toggle);
                /*0x11425b8*/ void ToggleClick(int target);
                /*0x1142398*/ void SetToggleGraphics(int pageNo);
                /*0x11425e0*/ void OnPageChangeEnd(int pageNo);
            }

            class ReadOnlyAttribute : UnityEngine.PropertyAttribute
            {
                /*0x11c33a4*/ ReadOnlyAttribute();
            }

            class ScrollConflictManager : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler
            {
                /*0x18*/ UnityEngine.UI.ScrollRect ParentScrollRect;
                /*0x20*/ UnityEngine.UI.Extensions.ScrollSnap ParentScrollSnap;
                /*0x28*/ UnityEngine.UI.ScrollRect _myScrollRect;
                /*0x30*/ bool scrollOther;
                /*0x31*/ bool scrollOtherHorizontally;

                /*0xe18398*/ ScrollConflictManager();
                /*0xe17ecc*/ void Awake();
                /*0xe18028*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1811c*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe18300*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
            }

            class ScrollRectEx : UnityEngine.UI.ScrollRect
            {
                /*0x128*/ bool routeToParent;

                /*0xe1d260*/ ScrollRectEx();
                void DoForParents<T>(System.Action<T> action);
                /*0xe1cbd0*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1ccc8*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1cdd4*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1cf94*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1d0a0*/ void OnScroll(UnityEngine.EventSystems.PointerEventData eventData);

                class <>c__DisplayClass2_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd20c*/ <>c__DisplayClass2_0();
                    /*0xcbd214*/ void <OnInitializePotentialDrag>b__0(UnityEngine.EventSystems.IInitializePotentialDragHandler parent);
                }

                class <>c__DisplayClass3_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd2d0*/ <>c__DisplayClass3_0();
                    /*0xcbd2d8*/ void <OnDrag>b__0(UnityEngine.EventSystems.IDragHandler parent);
                }

                class <>c__DisplayClass4_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd394*/ <>c__DisplayClass4_0();
                    /*0xcbd39c*/ void <OnBeginDrag>b__0(UnityEngine.EventSystems.IBeginDragHandler parent);
                }

                class <>c__DisplayClass5_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd458*/ <>c__DisplayClass5_0();
                    /*0xcbd460*/ void <OnEndDrag>b__0(UnityEngine.EventSystems.IEndDragHandler parent);
                }

                class <>c__DisplayClass6_0
                {
                    /*0x10*/ UnityEngine.EventSystems.PointerEventData eventData;

                    /*0xcbd51c*/ <>c__DisplayClass6_0();
                    /*0xcbd524*/ void <OnScroll>b__0(UnityEngine.EventSystems.IScrollHandler parent);
                }
            }

            class ScrollRectExtensions
            {
                static /*0xe1d268*/ void ScrollToTop(UnityEngine.UI.ScrollRect scrollRect);
                static /*0xe1d288*/ void ScrollToBottom(UnityEngine.UI.ScrollRect scrollRect);
            }

            class ScrollRectLinker : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool clamp;
                /*0x20*/ UnityEngine.UI.ScrollRect controllingScrollRect;
                /*0x28*/ UnityEngine.UI.ScrollRect scrollRect;

                /*0xe1d454*/ ScrollRectLinker();
                /*0xe1d2a8*/ void Awake();
                /*0xe1d3e4*/ void MirrorPos(UnityEngine.Vector2 scrollPos);
            }

            class ScrollRectTweener : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEventSystemHandler
            {
                /*0x18*/ UnityEngine.UI.ScrollRect scrollRect;
                /*0x20*/ UnityEngine.Vector2 startPos;
                /*0x28*/ UnityEngine.Vector2 targetPos;
                /*0x30*/ bool wasHorizontal;
                /*0x31*/ bool wasVertical;
                /*0x34*/ float moveSpeed;
                /*0x38*/ bool disableDragWhileTweening;

                /*0xe1d9ec*/ ScrollRectTweener();
                /*0xe1d464*/ void Awake();
                /*0xe1d4d0*/ void ScrollHorizontal(float normalizedX);
                /*0xe1d570*/ void ScrollHorizontal(float normalizedX, float duration);
                /*0xe1d638*/ void ScrollVertical(float normalizedY);
                /*0xe1d694*/ void ScrollVertical(float normalizedY, float duration);
                /*0xe1d530*/ void Scroll(UnityEngine.Vector2 normalizedPos);
                /*0xe1d6e0*/ float GetScrollDuration(UnityEngine.Vector2 normalizedPos);
                /*0xe1d7ac*/ UnityEngine.Vector2 DeNormalize(UnityEngine.Vector2 normalizedPos);
                /*0xe1d758*/ UnityEngine.Vector2 GetCurrentPos();
                /*0xe1d5c0*/ void Scroll(UnityEngine.Vector2 normalizedPos, float duration);
                /*0xe1d884*/ System.Collections.IEnumerator DoMove(float duration);
                /*0xe1d900*/ UnityEngine.Vector2 EaseVector(float currentTime, UnityEngine.Vector2 startValue, UnityEngine.Vector2 changeInValue, float duration);
                /*0xe1d96c*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe1d97c*/ void StopScroll();
                /*0xe1d858*/ void LockScrollability();
                /*0xe1d9b8*/ void RestoreScrollability();

                class <DoMove>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ float duration;
                    /*0x28*/ UnityEngine.UI.Extensions.ScrollRectTweener <>4__this;
                    /*0x30*/ UnityEngine.Vector2 <posOffset>5__2;
                    /*0x38*/ float <currentTime>5__3;

                    /*0xcbd5e0*/ <DoMove>d__17(int <>1__state);
                    /*0xcbd60c*/ void System.IDisposable.Dispose();
                    /*0xcbd610*/ bool MoveNext();
                    /*0xcbd72c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbd734*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbd774*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class SelectableScaler : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
            {
                /*0x18*/ UnityEngine.AnimationCurve animCurve;
                /*0x20*/ float speed;
                /*0x24*/ UnityEngine.Vector3 initScale;
                /*0x30*/ UnityEngine.Transform target;
                /*0x38*/ UnityEngine.UI.Selectable selectable;

                /*0xe244bc*/ SelectableScaler();
                /*0xe240a4*/ UnityEngine.UI.Selectable get_Target();
                /*0xe24144*/ void Awake();
                /*0xe241ec*/ void OnEnable();
                /*0xe24214*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe242fc*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0xe243e4*/ System.Collections.IEnumerator ScaleIN();
                /*0xe24450*/ System.Collections.IEnumerator ScaleOUT();

                class <ScaleIN>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.SelectableScaler <>4__this;
                    /*0x28*/ float <t>5__2;
                    /*0x2c*/ float <maxT>5__3;

                    /*0xcbdfd4*/ <ScaleIN>d__11(int <>1__state);
                    /*0xcbe000*/ void System.IDisposable.Dispose();
                    /*0xcbe004*/ bool MoveNext();
                    /*0xcbe194*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbe19c*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbe1dc*/ object System.Collections.IEnumerator.get_Current();
                }

                class <ScaleOUT>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.SelectableScaler <>4__this;
                    /*0x28*/ float <t>5__2;
                    /*0x2c*/ float <maxT>5__3;

                    /*0xcbe1e4*/ <ScaleOUT>d__12(int <>1__state);
                    /*0xcbe210*/ void System.IDisposable.Dispose();
                    /*0xcbe214*/ bool MoveNext();
                    /*0xcbe3c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xcbe3d0*/ void System.Collections.IEnumerator.Reset();
                    /*0xcbe410*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class SetPropertyUtility
            {
                static /*0xe2791c*/ bool SetColor(ref UnityEngine.Color currentValue, UnityEngine.Color newValue);
                static bool SetStruct<T>(ref T currentValue, T newValue);
                static bool SetClass<T>(ref T currentValue, T newValue);
            }

            class UIExtensionMethods
            {
                static /*0x235cff8*/ UnityEngine.Canvas GetParentCanvas(UnityEngine.RectTransform rt);
                static /*0x235d150*/ UnityEngine.Vector2 TransformInputBasedOnCanvasType(UnityEngine.Vector2 input, UnityEngine.Canvas canvas);
                static /*0x235d264*/ UnityEngine.Vector3 TransformInputBasedOnCanvasType(UnityEngine.Vector2 input, UnityEngine.RectTransform rt);
                static /*0x235d1c0*/ UnityEngine.Camera GetEventCamera(UnityEngine.Canvas input);
            }

            class UIHighlightable : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerEnterHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerExitHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerUpHandler
            {
                /*0x18*/ UnityEngine.UI.Graphic m_Graphic;
                /*0x20*/ bool m_Highlighted;
                /*0x21*/ bool m_Pressed;
                /*0x22*/ bool m_Interactable;
                /*0x23*/ bool m_ClickToHold;
                /*0x24*/ UnityEngine.Color NormalColor;
                /*0x34*/ UnityEngine.Color HighlightedColor;
                /*0x44*/ UnityEngine.Color PressedColor;
                /*0x54*/ UnityEngine.Color DisabledColor;
                /*0x68*/ UnityEngine.UI.Extensions.UIHighlightable.InteractableChangedEvent OnInteractableChanged;

                /*0x235e044*/ UIHighlightable();
                /*0x235ddec*/ bool get_Interactable();
                /*0x235ddf4*/ void set_Interactable(bool value);
                /*0x235ded8*/ bool get_ClickToHold();
                /*0x235dee0*/ void set_ClickToHold(bool value);
                /*0x235deec*/ void Awake();
                /*0x235df40*/ void OnPointerEnter(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235df8c*/ void OnPointerExit(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235dfd4*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235e030*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x235de6c*/ void HighlightInteractable(UnityEngine.UI.Graphic graphic);

                class InteractableChangedEvent : UnityEngine.Events.UnityEvent<bool>
                {
                    /*0xd8a37c*/ InteractableChangedEvent();
                }
            }

            class UILineConnector : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.RectTransform[] transforms;
                /*0x20*/ UnityEngine.Vector2[] previousPositions;
                /*0x28*/ UnityEngine.RectTransform canvas;
                /*0x30*/ UnityEngine.RectTransform rt;
                /*0x38*/ UnityEngine.UI.Extensions.UILineRenderer lr;

                /*0x235e868*/ UILineConnector();
                /*0x235e3d0*/ void Awake();
                /*0x235e480*/ void Update();
            }

            class UIScrollToSelection : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.UI.Extensions.UIScrollToSelection.ScrollType scrollDirection;
                /*0x1c*/ float scrollSpeed;
                /*0x20*/ bool cancelScrollOnInput;
                /*0x28*/ System.Collections.Generic.List<UnityEngine.KeyCode> cancelScrollKeycodes;
                /*0x30*/ UnityEngine.RectTransform <ScrollWindow>k__BackingField;
                /*0x38*/ UnityEngine.UI.ScrollRect <TargetScrollRect>k__BackingField;
                /*0x40*/ UnityEngine.GameObject <LastCheckedGameObject>k__BackingField;
                /*0x48*/ UnityEngine.RectTransform <CurrentTargetRectTransform>k__BackingField;
                /*0x50*/ bool <IsManualScrollingAvailable>k__BackingField;

                /*0x2367478*/ UIScrollToSelection();
                /*0x2366a2c*/ UnityEngine.RectTransform get_LayoutListGroup();
                /*0x2366ab8*/ UnityEngine.UI.Extensions.UIScrollToSelection.ScrollType get_ScrollDirection();
                /*0x2366ac0*/ float get_ScrollSpeed();
                /*0x2366ac8*/ bool get_CancelScrollOnInput();
                /*0x2366ad0*/ System.Collections.Generic.List<UnityEngine.KeyCode> get_CancelScrollKeycodes();
                /*0x2366ad8*/ UnityEngine.RectTransform get_ScrollWindow();
                /*0x2366ae0*/ void set_ScrollWindow(UnityEngine.RectTransform value);
                /*0x2366ae8*/ UnityEngine.UI.ScrollRect get_TargetScrollRect();
                /*0x2366af0*/ void set_TargetScrollRect(UnityEngine.UI.ScrollRect value);
                /*0x2366af8*/ UnityEngine.EventSystems.EventSystem get_CurrentEventSystem();
                /*0x2366b54*/ UnityEngine.GameObject get_LastCheckedGameObject();
                /*0x2366b5c*/ void set_LastCheckedGameObject(UnityEngine.GameObject value);
                /*0x2366b64*/ UnityEngine.GameObject get_CurrentSelectedGameObject();
                /*0x2366bd0*/ UnityEngine.RectTransform get_CurrentTargetRectTransform();
                /*0x2366bd8*/ void set_CurrentTargetRectTransform(UnityEngine.RectTransform value);
                /*0x2366be0*/ bool get_IsManualScrollingAvailable();
                /*0x2366be8*/ void set_IsManualScrollingAvailable(bool value);
                /*0x2366bf4*/ void Awake();
                /*0x2366c70*/ void Start();
                /*0x2366c74*/ void Update();
                /*0x2366ca0*/ void UpdateReferences();
                /*0x2366e40*/ void CheckIfScrollingShouldBeLocked();
                /*0x2366efc*/ void ScrollRectToLevelSelection();
                /*0x23670dc*/ void UpdateVerticalScrollPosition(UnityEngine.RectTransform selection);
                /*0x2367288*/ void UpdateHorizontalScrollPosition(UnityEngine.RectTransform selection);
                /*0x2367438*/ float GetScrollOffset(float position, float listAnchorPosition, float targetLength, float maskLength);

                enum ScrollType
                {
                    VERTICAL = 0,
                    HORIZONTAL = 1,
                    BOTH = 2,
                }
            }

            class UIScrollToSelectionXY : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float scrollSpeed;
                /*0x20*/ UnityEngine.RectTransform layoutListGroup;
                /*0x28*/ UnityEngine.RectTransform targetScrollObject;
                /*0x30*/ bool scrollToSelection;
                /*0x38*/ UnityEngine.RectTransform scrollWindow;
                /*0x40*/ UnityEngine.UI.ScrollRect targetScrollRect;

                /*0x236792c*/ UIScrollToSelectionXY();
                /*0x23674fc*/ void Start();
                /*0x2367578*/ void Update();
                /*0x236757c*/ void ScrollRectToLevelSelection();
            }

            class UISelectableExtension : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
            {
                /*0x18*/ UnityEngine.UI.Extensions.UISelectableExtension.UIButtonEvent OnButtonPress;
                /*0x20*/ UnityEngine.UI.Extensions.UISelectableExtension.UIButtonEvent OnButtonRelease;
                /*0x28*/ UnityEngine.UI.Extensions.UISelectableExtension.UIButtonEvent OnButtonHeld;
                /*0x30*/ bool _pressed;
                /*0x38*/ UnityEngine.EventSystems.PointerEventData _heldEventData;

                /*0x2367abc*/ UISelectableExtension();
                /*0x2367944*/ void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x23679bc*/ void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                /*0x2367a30*/ void Update();
                /*0x2367aa4*/ void TestClicked();
                /*0x2367aa8*/ void TestPressed();
                /*0x2367aac*/ void TestReleased();
                /*0x2367ab0*/ void TestHold();
                /*0x2367ab4*/ void OnDisable();

                class UIButtonEvent : UnityEngine.Events.UnityEvent<UnityEngine.EventSystems.PointerEventData.InputButton>
                {
                    /*0xd8a3c8*/ UIButtonEvent();
                }
            }

            class UI_InfiniteScroll : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool InitByUser;
                /*0x20*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x28*/ UnityEngine.UI.ContentSizeFitter _contentSizeFitter;
                /*0x30*/ UnityEngine.UI.VerticalLayoutGroup _verticalLayoutGroup;
                /*0x38*/ UnityEngine.UI.HorizontalLayoutGroup _horizontalLayoutGroup;
                /*0x40*/ UnityEngine.UI.GridLayoutGroup _gridLayoutGroup;
                /*0x48*/ bool _isVertical;
                /*0x49*/ bool _isHorizontal;
                /*0x4c*/ float _disableMarginX;
                /*0x50*/ float _disableMarginY;
                /*0x54*/ bool _hasDisabledGridComponents;
                /*0x58*/ System.Collections.Generic.List<UnityEngine.RectTransform> items;
                /*0x60*/ UnityEngine.Vector2 _newAnchoredPosition;
                /*0x68*/ float _treshold;
                /*0x6c*/ int _itemCount;
                /*0x70*/ float _recordOffsetX;
                /*0x74*/ float _recordOffsetY;

                /*0x236a528*/ UI_InfiniteScroll();
                /*0x2369814*/ void Awake();
                /*0x2369824*/ void Init();
                /*0x2369cd8*/ void DisableGridComponents();
                /*0x2369fa0*/ void OnScroll(UnityEngine.Vector2 pos);
            }

            class UI_ScrollRectOcclusion : UnityEngine.MonoBehaviour
            {
                /*0x18*/ bool InitByUser;
                /*0x20*/ UnityEngine.UI.ScrollRect _scrollRect;
                /*0x28*/ UnityEngine.UI.ContentSizeFitter _contentSizeFitter;
                /*0x30*/ UnityEngine.UI.VerticalLayoutGroup _verticalLayoutGroup;
                /*0x38*/ UnityEngine.UI.HorizontalLayoutGroup _horizontalLayoutGroup;
                /*0x40*/ UnityEngine.UI.GridLayoutGroup _gridLayoutGroup;
                /*0x48*/ bool _isVertical;
                /*0x49*/ bool _isHorizontal;
                /*0x4c*/ float _disableMarginX;
                /*0x50*/ float _disableMarginY;
                /*0x54*/ bool hasDisabledGridComponents;
                /*0x58*/ System.Collections.Generic.List<UnityEngine.RectTransform> items;

                /*0x10bf6d8*/ UI_ScrollRectOcclusion();
                /*0x10bebf8*/ void Awake();
                /*0x10bec08*/ void Init();
                /*0x10bf044*/ void DisableGridComponents();
                /*0x10bf2c8*/ void OnScroll(UnityEngine.Vector2 pos);
            }

            class UI_TweenScale : UnityEngine.MonoBehaviour
            {
                /*0x18*/ UnityEngine.AnimationCurve animCurve;
                /*0x20*/ float speed;
                /*0x24*/ bool isLoop;
                /*0x25*/ bool playAtAwake;
                /*0x26*/ bool isUniform;
                /*0x28*/ UnityEngine.AnimationCurve animCurveY;
                /*0x30*/ UnityEngine.Vector3 initScale;
                /*0x40*/ UnityEngine.Transform myTransform;
                /*0x48*/ UnityEngine.Vector3 newScale;

                /*0x10bf8fc*/ UI_TweenScale();
                /*0x10bf750*/ void Awake();
                /*0x10bf7d4*/ void Play();
                /*0x10bf824*/ System.Collections.IEnumerator Tween();
                /*0x10bf890*/ void ResetTween();

                class <Tween>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ UnityEngine.UI.Extensions.UI_TweenScale <>4__this;
                    /*0x28*/ float <t>5__2;
                    /*0x2c*/ float <maxT>5__3;

                    /*0xd8a4c8*/ <Tween>d__11(int <>1__state);
                    /*0xd8a4f4*/ void System.IDisposable.Dispose();
                    /*0xd8a4f8*/ bool MoveNext();
                    /*0xd8a6c4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xd8a6cc*/ void System.Collections.IEnumerator.Reset();
                    /*0xd8a70c*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class RectTransformExtension
            {
                static /*0x11c3534*/ UnityEngine.Vector2 switchToRectTransform(UnityEngine.RectTransform from, UnityEngine.RectTransform to);
            }

            class VRCursor : UnityEngine.MonoBehaviour
            {
                /*0x18*/ float xSens;
                /*0x1c*/ float ySens;
                /*0x20*/ UnityEngine.Collider currentCollider;

                /*0x10d26d8*/ VRCursor();
                /*0x10d1fd8*/ void Update();
                /*0x10d2308*/ void OnTriggerEnter(UnityEngine.Collider other);
                /*0x10d24d8*/ void OnTriggerExit(UnityEngine.Collider other);
            }

            class VRInputModule : UnityEngine.EventSystems.BaseInputModule
            {
                static /*0x0*/ UnityEngine.GameObject targetObject;
                static /*0x8*/ UnityEngine.UI.Extensions.VRInputModule _singleton;
                static /*0x10*/ bool mouseClicked;
                static /*0x14*/ UnityEngine.Vector3 cursorPosition;

                static /*0x10d2140*/ void PointerSubmit(UnityEngine.GameObject obj);
                static /*0x10d2510*/ void PointerExit(UnityEngine.GameObject obj);
                static /*0x10d2344*/ void PointerEnter(UnityEngine.GameObject obj);
                /*0x10d27c8*/ VRInputModule();
                /*0x10d26e0*/ void Awake();
                /*0x10d2730*/ void Process();
            }

            namespace ColorPicker
            {
                class ColorImage : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Image image;

                    /*0x10dffcc*/ ColorImage();
                    /*0x10dfdfc*/ void Awake();
                    /*0x10dfee4*/ void OnDestroy();
                    /*0x10dffa8*/ void ColorChanged(UnityEngine.Color newColor);
                }

                class ColorLabel : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorValues type;
                    /*0x28*/ string prefix;
                    /*0x30*/ float minValue;
                    /*0x34*/ float maxValue;
                    /*0x38*/ int precision;
                    /*0x40*/ UnityEngine.UI.Text label;

                    /*0x10e05f0*/ ColorLabel();
                    /*0x10dffd4*/ void Awake();
                    /*0x10e0028*/ void OnEnable();
                    /*0x10e01d8*/ void OnDestroy();
                    /*0x10e037c*/ void ColorChanged(UnityEngine.Color color);
                    /*0x10e0488*/ void HSVChanged(float hue, float sateration, float value);
                    /*0x10e0380*/ void UpdateValue();
                    /*0x10e053c*/ string ConvertToDisplayString(float value);
                }

                class ColorPickerControl : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ float _hue;
                    /*0x1c*/ float _saturation;
                    /*0x20*/ float _brightness;
                    /*0x24*/ float _red;
                    /*0x28*/ float _green;
                    /*0x2c*/ float _blue;
                    /*0x30*/ float _alpha;
                    /*0x38*/ ColorChangedEvent onValueChanged;
                    /*0x40*/ HSVChangedEvent onHSVChanged;
                    /*0x48*/ bool hsvSlidersOn;
                    /*0x50*/ System.Collections.Generic.List<UnityEngine.GameObject> hsvSliders;
                    /*0x58*/ bool rgbSlidersOn;
                    /*0x60*/ System.Collections.Generic.List<UnityEngine.GameObject> rgbSliders;
                    /*0x68*/ UnityEngine.GameObject alphaSlider;

                    /*0x10e0d7c*/ ColorPickerControl();
                    /*0x10e064c*/ void SetHSVSlidersOn(bool value);
                    /*0x10e07e8*/ void SetRGBSlidersOn(bool value);
                    /*0x10e0984*/ void Update();
                    /*0x10e0988*/ UnityEngine.Color get_CurrentColor();
                    /*0x10e09c0*/ void set_CurrentColor(UnityEngine.Color value);
                    /*0x10e0b38*/ void Start();
                    /*0x10e0b3c*/ float get_H();
                    /*0x10e0b44*/ void set_H(float value);
                    /*0x10e0bcc*/ float get_S();
                    /*0x10e0bd4*/ void set_S(float value);
                    /*0x10e0c0c*/ float get_V();
                    /*0x10e0c14*/ void set_V(float value);
                    /*0x10e0c4c*/ float get_R();
                    /*0x10e0c54*/ void set_R(float value);
                    /*0x10e0c8c*/ float get_G();
                    /*0x10e0c94*/ void set_G(float value);
                    /*0x10e0ccc*/ float get_B();
                    /*0x10e0cd4*/ void set_B(float value);
                    /*0x10e0d0c*/ float get_A();
                    /*0x10e0d14*/ void set_A(float value);
                    /*0x10e0a44*/ void RGBChanged();
                    /*0x10e0b7c*/ void HSVChanged();
                    /*0x10e0aac*/ void SendChangedEvent();
                    /*0x10e0d2c*/ void AssignColor(UnityEngine.UI.Extensions.ColorPicker.ColorValues type, float value);
                    /*0x10e048c*/ float GetValue(UnityEngine.UI.Extensions.ColorPicker.ColorValues type);
                }

                class ColorPickerPresets : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.GameObject presetPrefab;
                    /*0x28*/ int maxPresets;
                    /*0x30*/ UnityEngine.Color[] predefinedPresets;
                    /*0x38*/ System.Collections.Generic.List<UnityEngine.Color> presets;
                    /*0x40*/ UnityEngine.UI.Image createPresetImage;
                    /*0x48*/ UnityEngine.Transform createButton;
                    /*0x50*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerPresets.SaveType saveMode;
                    /*0x58*/ string playerPrefsKey;

                    /*0x10e1a04*/ ColorPickerPresets();
                    /*0x10e0e84*/ string get_JsonFilePath();
                    /*0x10e0ef4*/ void Reset();
                    /*0x10e0f74*/ void Awake();
                    /*0x10e110c*/ void CreatePresetButton();
                    /*0x10e1144*/ void LoadPresets(UnityEngine.UI.Extensions.ColorPicker.ColorPickerPresets.SaveType saveType);
                    /*0x10e14a8*/ void SavePresets(UnityEngine.UI.Extensions.ColorPicker.ColorPickerPresets.SaveType saveType);
                    /*0x10e1728*/ void CreatePreset(UnityEngine.Color color, bool loading);
                    /*0x10e1934*/ void CreatePreset(UnityEngine.Color color);
                    /*0x10e1944*/ void PresetSelect(UnityEngine.UI.Image sender);
                    /*0x10e1988*/ void HSVChanged(float h, float s, float v);
                    /*0x10e19e0*/ void ColorChanged(UnityEngine.Color color);

                    enum SaveType
                    {
                        None = 0,
                        PlayerPrefs = 1,
                        JsonFile = 2,
                    }

                    class JsonColor
                    {
                        /*0x10*/ UnityEngine.Color32[] colors;

                        /*0x106f104*/ JsonColor();
                        /*0x106ef4c*/ void SetColors(UnityEngine.Color[] colorsIn);
                        /*0x106f030*/ UnityEngine.Color[] GetColors();
                    }
                }

                class ColorPickerTester : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.Renderer pickerRenderer;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;

                    /*0x10e1b9c*/ ColorPickerTester();
                    /*0x10e1a84*/ void Awake();
                    /*0x10e1ad8*/ void Start();
                    /*0x10e1ba4*/ void <Start>b__3_0(UnityEngine.Color color);
                }

                class ColorSampler : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
                {
                    /*0x18*/ UnityEngine.Vector2 m_screenPos;
                    /*0x20*/ UnityEngine.UI.Button sampler;
                    /*0x28*/ UnityEngine.RectTransform sampleRectTransform;
                    /*0x30*/ UnityEngine.UI.Outline samplerOutline;
                    /*0x38*/ UnityEngine.Texture2D screenCapture;
                    /*0x40*/ ColorChangedEvent oncolorSelected;
                    /*0x48*/ UnityEngine.Color color;

                    /*0x10e2100*/ ColorSampler();
                    /*0x10e1c00*/ void OnEnable();
                    /*0x10e1ce8*/ void OnDisable();
                    /*0x10e1dd0*/ void Update();
                    /*0x10e1ec4*/ void HandleSamplerColoring();
                    /*0x10e2038*/ void SelectColor();
                    /*0x10e20a0*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
                    /*0x10e20bc*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
                    /*0x10e20e4*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
                }

                class ColorSlider : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl ColorPicker;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorValues type;
                    /*0x28*/ UnityEngine.UI.Slider slider;
                    /*0x30*/ bool listen;

                    /*0x10e2670*/ ColorSlider();
                    /*0x10e2160*/ void Awake();
                    /*0x10e2360*/ void OnDestroy();
                    /*0x10e253c*/ void ColorChanged(UnityEngine.Color newColor);
                    /*0x10e25b8*/ void HSVChanged(float hue, float saturation, float value);
                    /*0x10e2620*/ void SliderChanged(float newValue);
                }

                class ColorSliderImage : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Extensions.ColorPicker.ColorValues type;
                    /*0x24*/ UnityEngine.UI.Slider.Direction direction;
                    /*0x28*/ UnityEngine.UI.RawImage image;

                    /*0x10e33ec*/ ColorSliderImage();
                    /*0x10e2680*/ UnityEngine.RectTransform get_RectTransform();
                    /*0x10e26e4*/ void Awake();
                    /*0x10e2f84*/ void OnEnable();
                    /*0x10e3134*/ void OnDisable();
                    /*0x10e32d8*/ void OnDestroy();
                    /*0x10e339c*/ void ColorChanged(UnityEngine.Color newColor);
                    /*0x10e33c4*/ void ColorChanged(float hue, float saturation, float value);
                    /*0x10e2810*/ void RegenerateTexture();
                }

                enum ColorValues
                {
                    R = 0,
                    G = 1,
                    B = 2,
                    A = 3,
                    Hue = 4,
                    Saturation = 5,
                    Value = 6,
                }

                class HSVUtil
                {
                    static /*0x10f67c8*/ UnityEngine.UI.Extensions.ColorPicker.HsvColor ConvertRgbToHsv(UnityEngine.Color color);
                    static /*0x10f6830*/ UnityEngine.UI.Extensions.ColorPicker.HsvColor ConvertRgbToHsv(double r, double b, double g);
                    static /*0x10f6984*/ UnityEngine.Color ConvertHsvToRgb(double h, double s, double v, float alpha);
                }

                struct HsvColor
                {
                    /*0x10*/ double H;
                    /*0x18*/ double S;
                    /*0x20*/ double V;

                    /*0xa826f0*/ HsvColor(double h, double s, double v);
                    /*0xa82690*/ float get_NormalizedH();
                    /*0xa826a8*/ void set_NormalizedH(float value);
                    /*0xa826c0*/ float get_NormalizedS();
                    /*0xa826cc*/ void set_NormalizedS(float value);
                    /*0xa826d8*/ float get_NormalizedV();
                    /*0xa826e4*/ void set_NormalizedV(float value);
                    /*0xa826fc*/ string ToString();
                }

                class HexColorField : UnityEngine.MonoBehaviour
                {
                    static string hexRegex = "^#?(?:[0-9a-fA-F]{3,4}){1,2}$";
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl ColorPicker;
                    /*0x20*/ bool displayAlpha;
                    /*0x28*/ UnityEngine.UI.InputField hexInputField;

                    static /*0x130a444*/ bool HexToColor(string hex, ref UnityEngine.Color32 color);
                    /*0x130a8a4*/ HexColorField();
                    /*0x1309e34*/ void Awake();
                    /*0x1309fa4*/ void OnDestroy();
                    /*0x130a0f4*/ void UpdateHex(UnityEngine.Color newColor);
                    /*0x130a380*/ void UpdateColor(string newHex);
                    /*0x130a13c*/ string ColorToHex(UnityEngine.Color32 color);
                }

                class SVBoxSlider : UnityEngine.MonoBehaviour
                {
                    /*0x18*/ UnityEngine.UI.Extensions.ColorPicker.ColorPickerControl picker;
                    /*0x20*/ UnityEngine.UI.Extensions.BoxSlider slider;
                    /*0x28*/ UnityEngine.UI.RawImage image;
                    /*0x30*/ float lastH;
                    /*0x34*/ bool listen;

                    /*0x129fd18*/ SVBoxSlider();
                    /*0x129f4b0*/ UnityEngine.RectTransform get_RectTransform();
                    /*0x129f514*/ void Awake();
                    /*0x129f7e4*/ void OnEnable();
                    /*0x129f994*/ void OnDisable();
                    /*0x129fb38*/ void OnDestroy();
                    /*0x129fbfc*/ void SliderChanged(float saturation, float value);
                    /*0x129fc64*/ void HSVChanged(float h, float s, float v);
                    /*0x129f590*/ void RegenerateSVTexture();
                }
            }

            namespace Tweens
            {
                struct FloatTween : UnityEngine.UI.Extensions.Tweens.ITweenValue
                {
                    /*0x10*/ float m_StartFloat;
                    /*0x14*/ float m_TargetFloat;
                    /*0x18*/ float m_Duration;
                    /*0x1c*/ bool m_IgnoreTimeScale;
                    /*0x20*/ UnityEngine.UI.Extensions.Tweens.FloatTween.FloatTweenCallback m_Target;
                    /*0x28*/ UnityEngine.UI.Extensions.Tweens.FloatTween.FloatFinishCallback m_Finish;

                    /*0xa8cf60*/ float get_startFloat();
                    /*0xa8cf68*/ void set_startFloat(float value);
                    /*0xa8cf70*/ float get_targetFloat();
                    /*0xa8cf78*/ void set_targetFloat(float value);
                    /*0xa8cf80*/ float get_duration();
                    /*0xa8cf88*/ void set_duration(float value);
                    /*0xa8cf90*/ bool get_ignoreTimeScale();
                    /*0xa8cf98*/ void set_ignoreTimeScale(bool value);
                    /*0xa8cfa4*/ void TweenValue(float floatPercentage);
                    /*0xa8cfac*/ void AddOnChangedCallback(UnityEngine.Events.UnityAction<float> callback);
                    /*0xa8cfb4*/ void AddOnFinishCallback(UnityEngine.Events.UnityAction callback);
                    /*0xa8cfbc*/ bool GetIgnoreTimescale();
                    /*0xa8cfc4*/ float GetDuration();
                    /*0xa8cfcc*/ bool ValidTarget();
                    /*0xa8cfdc*/ void Finished();

                    class FloatTweenCallback : UnityEngine.Events.UnityEvent<float>
                    {
                        /*0x10a02e0*/ FloatTweenCallback();
                    }

                    class FloatFinishCallback : UnityEngine.Events.UnityEvent
                    {
                        /*0x10a02d8*/ FloatFinishCallback();
                    }
                }

                interface ITweenValue
                {
                    void TweenValue(float floatPercentage);
                    bool get_ignoreTimeScale();
                    float get_duration();
                    bool ValidTarget();
                    void Finished();
                }

                class TweenRunner<T>
                {
                    /*0x0*/ UnityEngine.MonoBehaviour m_CoroutineContainer;
                    /*0x0*/ System.Collections.IEnumerator m_Tween;

                    static System.Collections.IEnumerator Start(T tweenInfo);
                    TweenRunner();
                    void Init(UnityEngine.MonoBehaviour coroutineContainer);
                    void StartTween(T info);

                    class <Start>d__2<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                    {
                        /*0x0*/ int <>1__state;
                        /*0x0*/ object <>2__current;
                        /*0x0*/ T tweenInfo;
                        /*0x0*/ float <elapsedTime>5__2;

                        <Start>d__2(int <>1__state);
                        void System.IDisposable.Dispose();
                        bool MoveNext();
                        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                        void System.Collections.IEnumerator.Reset();
                        object System.Collections.IEnumerator.get_Current();
                    }
                }
            }
        }
    }
}

namespace SG
{
    class PoolObject : UnityEngine.MonoBehaviour
    {
        /*0x18*/ string poolName;
        /*0x20*/ bool isPooled;

        /*0x100b42c*/ PoolObject();
    }

    enum PoolInflationType
    {
        INCREMENT = 0,
        DOUBLE = 1,
    }

    class Pool
    {
        /*0x10*/ System.Collections.Generic.Stack<SG.PoolObject> availableObjStack;
        /*0x18*/ UnityEngine.GameObject rootObj;
        /*0x20*/ SG.PoolInflationType inflationType;
        /*0x28*/ string poolName;
        /*0x30*/ int objectsInUse;

        /*0x114a1dc*/ Pool(string poolName, UnityEngine.GameObject poolObjectPrefab, UnityEngine.GameObject rootPoolObj, int initialCount, SG.PoolInflationType type);
        /*0x114a440*/ void AddObjectToPool(SG.PoolObject po);
        /*0x114a530*/ void populatePool(int initialCount);
        T NextAvailableObject<T>(bool autoActive);
        /*0x114a61c*/ void ReturnObjectToPool(SG.PoolObject po);
    }

    class InitOnStart : UnityEngine.MonoBehaviour
    {
        /*0x18*/ int totalCount;

        /*0x15733a8*/ InitOnStart();
        /*0x15731e0*/ void Start();
        /*0x15732b8*/ void HandlerProvideData(int arg1, UnityEngine.Component arg2);
        /*0x1573328*/ void OnApplicationQuit();
    }
}

namespace DefineQuest
{
    enum MoveContentsType
    {
        None = 0,
        Main = 1,
        Hero = 2,
        Friend = 3,
        Pub = 4,
        StageTower = 5,
        GeneralArena = 6,
        WorldArena = 7,
        GuildRaid = 8,
        PrizeBoard = 9,
        Heo = 10,
        Maze = 11,
        ContentShop = 12,
        ContentShop_Maze = 13,
        Resonance = 14,
        GoddessTemple = 15,
        Guild = 16,
        Bounty = 17,
        Dungeon = 18,
        Community = 19,
        Minigame = 20,
        CashShop_Star = 21,
        FactionTower = 22,
        WorldBoss = 23,
        PveRanking = 24,
        Housing = 25,
        Ability = 26,
        EventBoss = 27,
        URL = 0,
    }

    enum StageIdleType
    {
        All = 0,
        Idle = 1,
        Instance = 2,
    }

    enum StageTryType
    {
        Stage = 0,
        StageTower = 1,
    }

    enum HeroUpgradeKind
    {
        Level = 0,
        Enhance = 1,
    }

    enum UpgradeGroup
    {
        All = 0,
        Grade = 1,
    }

    enum FriendPointKind
    {
        Send = 0,
        Reception = 1,
    }

    enum PrizeBoardKind
    {
        Single = 0,
        Collaboration = 1,
    }

    enum ShopGroupType
    {
        All = 0,
        Content = 1,
        Guild = 2,
        Labyrinth = 3,
    }

    enum ArenaKind
    {
        Arena = 0,
        WorldArena = 1,
    }

    enum ArenaCountType
    {
        Win = 0,
        Point = 1,
    }

    enum HeroGetGroupType
    {
        All = 0,
        Faction = 1,
        Grade = 2,
    }

    enum LevelGroupType
    {
        Account = 0,
        Character = 1,
    }

    enum GetContentType
    {
        All = 0,
        Stage = 1,
        StageIdle = 2,
    }

    enum MoveGroupType
    {
        Site = 0,
        Content = 1,
    }

    enum ResonanceGroupType
    {
        Slot = 0,
        Level = 1,
    }
}

namespace ServerProtocol
{
    class IRequestCommon
    {
        /*0x10*/ string token;

        /*0xd207f8*/ IRequestCommon();
    }

    class IResponseCommon
    {
        /*0x10*/ int result;

        /*0xd20800*/ IResponseCommon();
    }

    class IResponseCommonV2 : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string table;

        /*0xd20808*/ IResponseCommonV2();
    }

    class IResponseCommonV3 : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xd20810*/ IResponseCommonV3();
    }

    enum ProtocolType
    {
        None = 0,
        Ability = 1,
        Account = 2,
        AD = 3,
        Admin = 4,
        Arena = 5,
        Attic = 6,
        Balance = 7,
        Board = 8,
        Bounty = 9,
        Campaign = 10,
        CashShop = 11,
        ContentShop = 12,
        CurrencyShop = 13,
        Dungeon = 14,
        Equip = 15,
        Event = 16,
        Friend = 17,
        Gacha = 18,
        Gate = 19,
        Growth = 20,
        Guild = 21,
        GuildWar = 22,
        HardCampaign = 23,
        Hero = 24,
        Housing = 25,
        HousingObj = 26,
        Item = 27,
        Mail = 28,
        Manufacture = 29,
        Maze = 30,
        Mercenary = 31,
        Mission = 32,
        PveRanking = 33,
        Quest = 34,
        Race = 35,
        Relation = 36,
        Resonance = 37,
        RunGame = 38,
        Skin = 39,
        Tower = 40,
        Troop = 41,
        WorldArena = 42,
        WorldBoss = 43,
        End = 44,
    }

    enum ProtocolSubType
    {
        None = 0,
        AcceptReq = 1,
        AcceptReqAll = 2,
        Activate = 3,
        AllPoint = 4,
        ArtifactEquip = 5,
        ArtifactReinforce = 6,
        ArtifactSwap = 7,
        ArtifactUnequip = 8,
        Assign = 9,
        Attach = 10,
        AttendReward = 11,
        AutoEquip = 12,
        Begin = 13,
        Blacklist = 14,
        BlacklistRemove = 15,
        Blacks = 16,
        BookReward = 17,
        BossHistory = 18,
        BossOpen = 19,
        Buddy = 20,
        BuffReset = 21,
        Buy = 22,
        BuyFactionPool = 23,
        BuyTactic = 24,
        Campaign = 25,
        CancelQuit = 26,
        Check = 27,
        Choice = 28,
        Claim = 29,
        Clean = 30,
        ClearEnd = 31,
        ClearStart = 32,
        CoinReward = 33,
        Commit = 34,
        CommitWishList = 35,
        Complete = 36,
        Confirm = 37,
        ConfirmFactionBonus = 38,
        Console = 39,
        Contribution = 40,
        Coupon = 41,
        Create = 42,
        CurrencyRoll = 43,
        Data = 44,
        Deck = 45,
        Delete = 46,
        DenyReq = 47,
        DenyReqAll = 48,
        Detach = 49,
        Detail = 50,
        Devolve = 51,
        Dice = 52,
        Dismiss = 53,
        Dispatch = 54,
        Enter = 55,
        Equip = 56,
        Exchange = 57,
        ExploreCancel = 58,
        ExploreContinue = 59,
        ExploreStart = 60,
        Export = 61,
        ExtendSlot = 62,
        FastOpen = 63,
        FinalReward = 64,
        Finish = 65,
        First = 66,
        Form = 67,
        FormDetail = 68,
        FreeRoll = 69,
        FreeRoulette = 70,
        Friends = 71,
        GuildRanking = 72,
        HardCampaign = 73,
        Heal = 74,
        Heroes = 75,
        HeroPoint = 76,
        History = 77,
        Idle = 78,
        Import = 79,
        Inbox = 80,
        Info = 81,
        Init = 82,
        Insert = 83,
        Instant = 84,
        Inven = 85,
        Item = 86,
        ItemRoll = 87,
        Jail = 88,
        Kick = 89,
        Language = 90,
        Leave = 91,
        Lend = 92,
        LendDeny = 93,
        LendDenyAll = 94,
        LendFast = 95,
        LendList = 96,
        LevelUp = 97,
        Like = 98,
        List = 99,
        Load = 100,
        Localize = 101,
        Lock = 102,
        Login = 103,
        Logout = 104,
        Main = 105,
        Make = 106,
        Mate = 107,
        MateReset = 108,
        Member = 109,
        MopUp = 110,
        Move = 111,
        MoveArea = 112,
        MyFormHero = 113,
        New = 114,
        NextChapter = 115,
        Notice = 116,
        Office = 117,
        Open = 118,
        OpenEnd = 119,
        OpenStart = 120,
        Others = 121,
        Participate = 122,
        PassRefresh = 123,
        PassReward = 124,
        Players = 125,
        Pop = 126,
        PreviewIdle = 127,
        Progress = 128,
        Promote = 129,
        PromoteMulti = 130,
        Purchase = 131,
        Push = 132,
        Quit = 133,
        Rank = 134,
        Ranking = 135,
        Receive = 136,
        ReceiveAll = 137,
        Recommend = 138,
        Refresh = 139,
        Reinforce = 140,
        ReleaseSupporter = 141,
        Remove = 142,
        RemoveAll = 143,
        Rent = 144,
        RentCancel = 145,
        RentList = 146,
        RentReturn = 147,
        Replay = 148,
        Requestors = 149,
        Reset = 150,
        ResetFactionBonus = 151,
        Revert = 152,
        Revival = 153,
        Reward = 154,
        RewardList = 155,
        Roll = 156,
        Roulette = 157,
        Save = 158,
        SaveList = 159,
        SaveName = 160,
        Search = 161,
        Sell = 162,
        SendPoint = 163,
        SendReq = 164,
        SetAuth = 165,
        SetAutoDismiss = 166,
        SetCamp = 167,
        SetCaptain = 168,
        SetForm = 169,
        SetParticipate = 170,
        SetPosition = 171,
        SetSupporter = 172,
        Signature = 173,
        Sparring = 174,
        Supporter = 175,
        Take = 176,
        TakeAll = 177,
        TakeMain = 178,
        TakePoint = 179,
        TakeReward = 180,
        Ticket = 181,
        TopFive = 182,
        Tower = 183,
        Training = 184,
        Transcend = 185,
        Tutorial = 186,
        Unequip = 187,
        UnequipAll = 188,
        Unlock = 189,
        UnsetForm = 190,
        Update = 191,
        UpdateAttend = 192,
        UpdateDeck = 193,
        UpdateHeroes = 194,
        UpdateInfo = 195,
        UpdateName = 196,
        UpdateNickName = 197,
        UpdateOrder = 198,
        UpdateProfile = 199,
        Upgrade = 200,
        Use = 201,
        VerifyBegin = 202,
        VerifyFinish = 203,
        View = 204,
        VIPReward = 205,
        Visit = 206,
        VisitSite = 207,
        Vote = 208,
        Wagon = 209,
        Wall = 210,
        Zone = 211,
    }

    class ReqAccountLogin
    {
        /*0x10*/ string ip;
        /*0x18*/ string guestid;
        /*0x20*/ string firebasetoken;
        /*0x28*/ string pushtoken;
        /*0x30*/ int billingtype;

        /*0xf1fcf8*/ ReqAccountLogin(string ip, string guestid, string firebasetoken, string pushtoken, int billingtype);
    }

    class ResAccountLogin : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.DateTime now;

        /*0xf24838*/ ResAccountLogin();
    }

    class ResAccountLogin_Normal : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ string token;
        /*0x28*/ string chatip;
        /*0x30*/ long exp;
        /*0x38*/ int vippoint;
        /*0x3c*/ int campaignchapter;
        /*0x40*/ int hcampaignchapter;
        /*0x48*/ System.Collections.Generic.List<int> towerfloors;
        /*0x50*/ bool admin;
        /*0x54*/ int guildid;
        /*0x58*/ string guildname;
        /*0x60*/ PTShare.Define.SCurrency currency;
        /*0x68*/ System.DateTime lastidle;
        /*0x70*/ int heroslot;
        /*0x78*/ string language;
        /*0x80*/ long tutorial;
        /*0x88*/ PTShare.Define.SPlayer basic;
        /*0x90*/ string message;
        /*0x98*/ System.Collections.Generic.List<PTShare.Define.SPass> passs;
        /*0xa0*/ bool olduser;
        /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SImageBanner> ibanners;
        /*0xb0*/ System.Collections.Generic.List<PTShare.Define.SNotice> notices;

        /*0xf24848*/ ResAccountLogin_Normal();
    }

    class ResAccountLogin_Ban : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ System.DateTime endtime;
        /*0x28*/ string reason;

        /*0xf24840*/ ResAccountLogin_Ban();
    }

    class ResAccountLogin_Quitting : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ System.DateTime realquittime;

        /*0xf24850*/ ResAccountLogin_Quitting();
    }

    class ResAccountLogin_ServerStop : ServerProtocol.ResAccountLogin
    {
        /*0x20*/ System.DateTime stopendplan;

        /*0xf24858*/ ResAccountLogin_ServerStop();
    }

    class ReqAccountAttach : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string firebasetoken;

        /*0xf1fb48*/ ReqAccountAttach(string token, string firebasetoken);
    }

    class ResAccountAttach : ServerProtocol.IResponseCommon
    {
        /*0xf24800*/ ResAccountAttach();
    }

    class ReqAccountDetach : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string guestid;

        /*0xf1fbb8*/ ReqAccountDetach(string token, string guestid);
    }

    class ResAccountDetach : ServerProtocol.IResponseCommon
    {
        /*0xf24810*/ ResAccountDetach();
    }

    class ReqAccountLogout : ServerProtocol.IRequestCommon
    {
        /*0xf1fd4c*/ ReqAccountLogout();
    }

    class ResAccountLogout : ServerProtocol.IResponseCommon
    {
        /*0xf24860*/ ResAccountLogout();
    }

    class ReqAccountLanguage : ServerProtocol.IRequestCommon
    {
        /*0xf1fccc*/ ReqAccountLanguage(string token);
    }

    class ResAccountLanguage : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int channel;
        /*0x24*/ int maxchannel;

        /*0xf24830*/ ResAccountLanguage();
    }

    class ReqAccountPlayers : ServerProtocol.IRequestCommon
    {
        /*0xf1fde8*/ ReqAccountPlayers(string token);
    }

    class ResAccountPlayers : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int maxarea;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> list;

        /*0xf24880*/ ResAccountPlayers();
    }

    class ReqAccountMoveArea : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int area;

        /*0xf1fd54*/ ReqAccountMoveArea(string token, int area);
    }

    class ResAccountMoveArea : ServerProtocol.IResponseCommon
    {
        /*0xf24868*/ ResAccountMoveArea();
    }

    class ReqAccountNew : ServerProtocol.IRequestCommon
    {
        /*0xf1fd90*/ ReqAccountNew(string token);
    }

    class ResAccountNew : ServerProtocol.IResponseCommon
    {
        /*0x14*/ bool newmail;
        /*0x15*/ bool newfriend;
        /*0x16*/ bool newbook;
        /*0x17*/ bool newboard;
        /*0x18*/ bool newquest;
        /*0x19*/ bool newcashshop;
        /*0x1a*/ bool newnotice;
        /*0x1b*/ bool newbounty;
        /*0x1c*/ bool newguild;
        /*0x1d*/ bool newrace;
        /*0x20*/ System.Collections.Generic.List<int> newworldbossidxs;
        /*0x28*/ bool newlike;

        /*0xf24870*/ ResAccountNew();
    }

    class ReqAccountFirst : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string battlever;

        /*0xf1fc54*/ ReqAccountFirst(string token, string battlever);
    }

    class ResAccountFirst : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SEquip> equiplist;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> herolist;
        /*0x40*/ int resonancelv;
        /*0x44*/ int fastidle;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SBook> booklist;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRented> rentedlist;
        /*0x58*/ PTShare.Define.SModeCount usemercenary;
        /*0x60*/ System.Collections.Generic.List<PTShare.Define.SPassReward> passrewards;
        /*0x68*/ System.Collections.Generic.List<PTShare.Define.SGoods> products;
        /*0x70*/ System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> subscripts;
        /*0x78*/ System.Collections.Generic.List<string> firsts;
        /*0x80*/ System.Collections.Generic.List<string> stores;
        /*0x88*/ System.Collections.Generic.List<PTShare.Define.SEventExchange> exchanges;
        /*0x90*/ bool nickfree;
        /*0x98*/ System.DateTime beginnerend;
        /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SInstant> instants;
        /*0xa8*/ System.Collections.Generic.List<int> arenaheroids;
        /*0xb0*/ System.Collections.Generic.List<int> worldarenaheroids;
        /*0xb8*/ System.Collections.Generic.List<int> worldarenaheroblinds;
        /*0xc0*/ int warheroid;
        /*0xc8*/ long highestcp;
        /*0xd0*/ System.Collections.Generic.List<long> blackids;
        /*0xd8*/ System.Collections.Generic.List<int> viprewardlvs;
        /*0xe0*/ PTShare.Define.SStatBonus statbonus;
        /*0xe8*/ System.Collections.Generic.List<string> wishlist;
        /*0xf0*/ System.Collections.Generic.List<PTShare.Define.SRelation> relations;
        /*0xf8*/ bool purchaseoff;
        /*0x100*/ System.Collections.Generic.List<PTShare.Define.SArtifact> artifacts;
        /*0x108*/ System.Collections.Generic.List<PTShare.Define.SSkin> skins;
        /*0x110*/ System.Collections.Generic.List<PTShare.Define.SSkin> equipskins;
        /*0x118*/ PTShare.Define.SDefeat defeat;
        /*0x120*/ System.Collections.Generic.List<int> towergoups;
        /*0x128*/ int arenawincount;
        /*0x130*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> frames;
        /*0x138*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> backgrounds;
        /*0x140*/ bool unlimitresonance;
        /*0x144*/ int resonancecount;
        /*0x148*/ System.Collections.Generic.List<int> attackwbossindices;
        /*0x150*/ int luckyhero;
        /*0x158*/ System.Collections.Generic.List<int> rungameamounts;
        /*0x160*/ System.Collections.Generic.List<PTShare.Define.SRunHero> runheroes;
        /*0x168*/ int housingopenfloor;
        /*0x170*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> housingobjs;
        /*0x178*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;
        /*0x180*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> housingheroes;
        /*0x188*/ int todaylikesend;
        /*0x18c*/ int todaylikerecv;
        /*0x190*/ long acclikerecv;
        /*0x198*/ System.Collections.Generic.List<PTShare.Define.SHousingGoods> housingproducts;
        /*0x1a0*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x1a8*/ string housinggroup;
        /*0x1b0*/ System.DateTime housingfloortime;
        /*0x1b8*/ int freeability;
        /*0x1c0*/ System.Collections.Generic.List<PTShare.Define.SAbilityGroup> abilities;
        /*0x1c8*/ System.Collections.Generic.List<PTShare.Define.SEventBoss> evtbosses;
        /*0x1d0*/ int evrolettefree;
        /*0x1d8*/ System.Collections.Generic.List<int> autodismiss;
        /*0x1e0*/ System.Collections.Generic.List<string> ads;

        /*0xf24820*/ ResAccountFirst();
    }

    class ReqUpdateNickname : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string nickname;

        /*0xf23b88*/ ReqUpdateNickname(string token, string nickname);
    }

    class ResUpdateNickname : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SCurrency currency;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf2523c*/ ResUpdateNickname();
    }

    class ReqUpdateProfile : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string profileids;
        /*0x20*/ int gender;
        /*0x28*/ string message;
        /*0x30*/ string language;

        /*0xf23bc0*/ ReqUpdateProfile(string token, string profileids, int gender, string message, string language);
    }

    class ResUpdateProfile : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.Dictionary<string, string> communityurl;

        /*0xf25244*/ ResUpdateProfile();
    }

    class ReqAccountDetail : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long targetid;
        /*0x20*/ string campaign;
        /*0x28*/ int faction;
        /*0x2c*/ int floor;
        /*0x30*/ int arena;

        /*0xf1fbf0*/ ReqAccountDetail(string token, long targetid, string campaign, int faction, int floor, int arena);
    }

    class ResAccountDetail : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SPlayer basic;
        /*0x20*/ string message;
        /*0x28*/ int relation;
        /*0x2c*/ int position;
        /*0x30*/ string guildname;
        /*0x38*/ string lang;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SHero> mainforce;
        /*0x48*/ PTShare.Define.SStatBonus statbonus;
        /*0x50*/ PTShare.Define.SDeck deck;
        /*0x58*/ long acclikerecv;

        /*0xf24818*/ ResAccountDetail();
    }

    class ReqAccountQuit : ServerProtocol.IRequestCommon
    {
        /*0xf1fe40*/ ReqAccountQuit(string token);
    }

    class ResAccountQuit : ServerProtocol.IResponseCommon
    {
        /*0xf24890*/ ResAccountQuit();
    }

    class ReqAccountCancelQuit
    {
        /*0x10*/ string guestid;
        /*0x18*/ string firebasetoken;

        /*0xf1fb80*/ ReqAccountCancelQuit(string guestid, string firebasetoken);
    }

    class ResAccountCancelQuit : ServerProtocol.IResponseCommon
    {
        /*0xf24808*/ ResAccountCancelQuit();
    }

    class ReqAccountPreviewIdle : ServerProtocol.IRequestCommon
    {
        /*0xf1fe14*/ ReqAccountPreviewIdle(string token);
    }

    class ResAccountPreviewIdle : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;

        /*0xf24888*/ ResAccountPreviewIdle();
    }

    class ReqAccountIdle : ServerProtocol.IRequestCommon
    {
        /*0x18*/ bool fast;

        /*0xf1fc8c*/ ReqAccountIdle(string token, bool fast);
    }

    class ResAccountIdle : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.DateTime lastidle;
        /*0x38*/ int fastidle;
        /*0x40*/ PTShare.Define.SProperty gain;
        /*0x48*/ PTShare.Define.SProperty levelupgain;

        /*0xf24828*/ ResAccountIdle();
    }

    class ReqAccountNotice : ServerProtocol.IRequestCommon
    {
        /*0xf1fdbc*/ ReqAccountNotice(string token);
    }

    class ResAccountNotice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SNotice> notices;

        /*0xf24878*/ ResAccountNotice();
    }

    class ReqAccountTutorial : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long tutorial;

        /*0xf1fe6c*/ ReqAccountTutorial(string token, long tutorial);
    }

    class ResAccountTutorial : ServerProtocol.IResponseCommon
    {
        /*0xf24898*/ ResAccountTutorial();
    }

    class ReqAccountUpdateAttend : ServerProtocol.IRequestCommon
    {
        /*0xf1fea4*/ ReqAccountUpdateAttend(string token);
    }

    class ResAccountUpdateAttend : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SAttend> attends;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SAttendReward> attendrewards;

        /*0xf248a0*/ ResAccountUpdateAttend();
    }

    class ReqADFinalReward : ServerProtocol.IRequestCommon
    {
        /*0xf1fa14*/ ReqADFinalReward(string token);
    }

    class ResADFinalReward : ServerProtocol.IResponseCommonV3
    {
        /*0xf247d8*/ ResADFinalReward();
    }

    class ReqAdminConsole : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string input;

        /*0xf1fed0*/ ReqAdminConsole(string token, string input);
    }

    class ResAdminConsole : ServerProtocol.IResponseCommon
    {
        /*0x14*/ bool apply;
        /*0x18*/ string output;
        /*0x20*/ string key;
        /*0x28*/ System.DateTime arg0;
        /*0x30*/ string arg1;
        /*0x38*/ int arg2;

        /*0xf248a8*/ ResAdminConsole();
    }

    class ReqAdminExport : ServerProtocol.IRequestCommon
    {
        /*0xf1ff08*/ ReqAdminExport(string token);
    }

    class ReqAdminImport : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string file;

        /*0xf1ff34*/ ReqAdminImport(string token, string file);
    }

    class ResAdminImport : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string output;

        /*0xf248b0*/ ResAdminImport();
    }

    class ReqAdminVerifyBegin : ServerProtocol.IRequestCommon
    {
        /*0xf1ff6c*/ ReqAdminVerifyBegin(string token);
    }

    class ResAdminVerifyBegin : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SReplay> replays;

        /*0xf248b8*/ ResAdminVerifyBegin();
    }

    class ReqAdminVerifyFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;
        /*0x20*/ int score;

        /*0xf1ff98*/ ReqAdminVerifyFinish(string token, string replayid, int score);
    }

    class ResAdminVerifyFinish : ServerProtocol.IResponseCommon
    {
        /*0xf248c0*/ ResAdminVerifyFinish();
    }

    class ReqArenaMain : ServerProtocol.IRequestCommon
    {
        /*0xf200dc*/ ReqArenaMain(string token);
    }

    class ResArenaMain : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int rank;
        /*0x24*/ int tier;
        /*0x28*/ int worldrank;

        /*0xf248e8*/ ResArenaMain();
    }

    class ReqArenaEnter : ServerProtocol.IRequestCommon
    {
        /*0xf20014*/ ReqArenaEnter(string token);
    }

    class ResArenaEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int mypoint;
        /*0x30*/ long mycp;
        /*0x38*/ int arenafree;
        /*0x3c*/ int rewardindex;

        /*0xf248d0*/ ResArenaEnter();
    }

    class ReqArenaUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf20170*/ ReqArenaUpdateDeck(string token, string heroids);
    }

    class ResArenaUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0xf24908*/ ResArenaUpdateDeck();
    }

    class ReqArenaTicket : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf20134*/ ReqArenaTicket(string token, int count);
    }

    class ResArenaTicket : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24900*/ ResArenaTicket();
    }

    class ReqArenaSearch : ServerProtocol.IRequestCommon
    {
        /*0xf20108*/ ReqArenaSearch(string token);
    }

    class ResArenaSearch : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> targets;

        /*0xf248f8*/ ResArenaSearch();
    }

    class ReqArenaHistory : ServerProtocol.IRequestCommon
    {
        /*0xf200b0*/ ReqArenaHistory(string token);
    }

    class ResArenaHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> histories;

        /*0xf248e0*/ ResArenaHistory();
    }

    class ReqArenaChoice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int seqid;

        /*0xf1ffd8*/ ReqArenaChoice(string token, int seqid);
    }

    class ResArenaChoice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ PTShare.Define.SBattleSide side;

        /*0xf248c8*/ ResArenaChoice();
    }

    class ReqArenaFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ long rcp;
        /*0x28*/ string statistics;
        /*0x30*/ string heroids;
        /*0x38*/ bool win;
        /*0x40*/ string hpmps;

        /*0xf20040*/ ReqArenaFinish(string token, long lcp, long rcp, string statistics, string heroids, bool win, string hpmps);
    }

    class ResArenaFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int myrank;
        /*0x34*/ int myrankmove;
        /*0x38*/ int myscore_before;
        /*0x3c*/ int myscore_after;
        /*0x40*/ int vsscore_before;
        /*0x44*/ int vsscore_after;

        /*0xf248d8*/ ResArenaFinish();
    }

    class ReqArenaReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf1f570*/ ReqArenaReplay(string token, string replayid);
    }

    class ResArenaReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SArenaReplay replay;

        /*0xf248f0*/ ResArenaReplay();
    }

    class ReqBalanceData
    {
        /*0x10*/ string md5;

        /*0xf20224*/ ReqBalanceData(string md5);
    }

    class ReqBalanceLocalize
    {
        /*0x10*/ string code;

        /*0xf20250*/ ReqBalanceLocalize(string code);
    }

    class ReqBoardEnter : ServerProtocol.IRequestCommon
    {
        /*0xf202a8*/ ReqBoardEnter(string token);
    }

    class ResBoardEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newcampaign;
        /*0x21*/ bool newhcampaign;
        /*0x22*/ bool newtower;
        /*0x28*/ System.Collections.Generic.List<bool> newfactions;
        /*0x30*/ PTShare.Define.SBoardCampaignRanker campaign1st;
        /*0x38*/ PTShare.Define.SBoardCampaignRanker hardcampaign1st;
        /*0x40*/ PTShare.Define.SBoardTowerRanker tower1st;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> faction1sts;

        /*0xf24928*/ ResBoardEnter();
    }

    class ReqBoardCampaign : ServerProtocol.IRequestCommon
    {
        /*0xf2027c*/ ReqBoardCampaign(string token);
    }

    class ResBoardCampaign : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ string mycampaign;

        /*0xf24920*/ ResBoardCampaign();
    }

    class ReqBoardTower : ServerProtocol.IRequestCommon
    {
        /*0xf203b8*/ ReqBoardTower(string token);
    }

    class ResBoardTower : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myfloor;

        /*0xf24950*/ ResBoardTower();
    }

    class ReqBoardHardCampaign : ServerProtocol.IRequestCommon
    {
        /*0xf202d4*/ ReqBoardHardCampaign(string token);
    }

    class ResBoardHardCampaign : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ string mycampaign;

        /*0xf24930*/ ResBoardHardCampaign();
    }

    class ReqBoardHeroPoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int faction;

        /*0xf20300*/ ReqBoardHeroPoint(string token, int faction);
    }

    class ResBoardHeroPoint : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int mypoint;

        /*0xf24938*/ ResBoardHeroPoint();
    }

    class ReqBoardRewardList : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf2033c*/ ReqBoardRewardList(string token, int type);
    }

    class ResBoardRewardList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBoardQuest> list;

        /*0xf24940*/ ResBoardRewardList();
    }

    class ReqBoardTakeReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x1c*/ int index;

        /*0xf20378*/ ReqBoardTakeReward(string token, int type, int index);
    }

    class ResBoardTakeReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;

        /*0xf24948*/ ResBoardTakeReward();
    }

    class ReqBountyEnter : ServerProtocol.IRequestCommon
    {
        /*0xf20424*/ ReqBountyEnter(string token);
    }

    class ResBountyEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int level;
        /*0x24*/ int solocount;
        /*0x28*/ int teamcount;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SBountyQuest> quests;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> supporters;

        /*0xf24960*/ ResBountyEnter();
    }

    class ReqBountyDispatch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string ids;
        /*0x20*/ string heroids;

        /*0xf203e4*/ ReqBountyDispatch(string token, string ids, string heroids);
    }

    class ResBountyDispatch : ServerProtocol.IResponseCommonV2
    {
        /*0xf24958*/ ResBountyDispatch();
    }

    class ReqBountyReceive : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int id;

        /*0xf20450*/ ReqBountyReceive(string token, int id);
    }

    class ResBountyReceive : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ bool levelup;
        /*0x34*/ int level;
        /*0x38*/ int solocount;
        /*0x3c*/ int teamcount;
        /*0x40*/ PTShare.Define.SProperty gain;

        /*0xf24968*/ ResBountyReceive();
    }

    class ReqBountyReceiveAll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf2048c*/ ReqBountyReceiveAll(string token, int type);
    }

    class ResBountyReceiveAll : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ bool levelup;
        /*0x34*/ int level;
        /*0x38*/ int solocount;
        /*0x3c*/ int teamcount;
        /*0x40*/ PTShare.Define.SProperty gain;
        /*0x48*/ System.Collections.Generic.List<int> recvedids;

        /*0xf24970*/ ResBountyReceiveAll();
    }

    class ReqBountyReset : ServerProtocol.IRequestCommon
    {
        /*0xf20504*/ ReqBountyReset(string token);
    }

    class ResBountyReset : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBountyQuest> quests;

        /*0xf24980*/ ResBountyReset();
    }

    class ReqBountySupporter : ServerProtocol.IRequestCommon
    {
        /*0xf2056c*/ ReqBountySupporter(string token);
    }

    class ResBountySupporter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> supporters;

        /*0xf24990*/ ResBountySupporter();
    }

    class ReqBountySetSupporter : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf20530*/ ReqBountySetSupporter(string token, int heroid);
    }

    class ResBountySetSupporter : ServerProtocol.IResponseCommonV2
    {
        /*0xf24988*/ ResBountySetSupporter();
    }

    class ReqBountyReleaseSupporter : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf204c8*/ ReqBountyReleaseSupporter(string token, int heroid);
    }

    class ResBountyReleaseSupporter : ServerProtocol.IResponseCommonV2
    {
        /*0xf24978*/ ResBountyReleaseSupporter();
    }

    class ReqCampaignBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf20598*/ ReqCampaignBegin(string token, string heroids);
    }

    class ResCampaignBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;
        /*0x40*/ string campaign;

        /*0xf24998*/ ResCampaignBegin();
    }

    class ReqCampaignFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf205fc*/ ReqCampaignFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResCampaignFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ string campaign;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SProperty lvupreward;
        /*0x38*/ PTShare.Define.SCurrency currency;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x48*/ PTShare.Define.SPass newpass;
        /*0x50*/ PTShare.Define.SModeCount usemercenary;

        /*0xf249a8*/ ResCampaignFinish();
    }

    class ReqCampaignNextChapter : ServerProtocol.IRequestCommon
    {
        /*0xf20688*/ ReqCampaignNextChapter(string token);
    }

    class ResCampaignNextChapter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int oldchapter;
        /*0x24*/ int newchapter;

        /*0xf249b8*/ ResCampaignNextChapter();
    }

    class ReqCampaignInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;

        /*0xf20650*/ ReqCampaignInfo(string token, string campaign);
    }

    class ResCampaignInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> infos;

        /*0xf249b0*/ ResCampaignInfo();
    }

    class ReqCampaignReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;
        /*0x20*/ long playerid;

        /*0xf1f4dc*/ ReqCampaignReplay(string token, string campaign, long playerid);
    }

    class ResCampaignReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCampaignReplay replay;

        /*0xf249c0*/ ResCampaignReplay();
    }

    class ReqCampaignBuddy : ServerProtocol.IRequestCommon
    {
        /*0xf205d0*/ ReqCampaignBuddy(string token);
    }

    class ResCampaignBuddy : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> people;

        /*0xf249a0*/ ResCampaignBuddy();
    }

    class ReqCashShopClaim : ServerProtocol.IRequestCommon
    {
        /*0xf206f4*/ ReqCashShopClaim(string token);
    }

    class ResCashShopClaim : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newrecv;

        /*0xf249d0*/ ResCashShopClaim();
    }

    class ReqCashShopCheck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string packageid;
        /*0x20*/ string selectarg;

        /*0xf206b4*/ ReqCashShopCheck(string token, string packageid, string selectarg);
    }

    class ResCashShopCheck : ServerProtocol.IResponseCommon
    {
        /*0xf249c8*/ ResCashShopCheck();
    }

    class ReqCashShopPurchase : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string packageid;
        /*0x20*/ int type;
        /*0x28*/ string purchasetoken;

        /*0xf20758*/ ReqCashShopPurchase(string token, string packageid, int type, string purchasetoken);
    }

    class ResCashShopPurchase : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string packageid;
        /*0x20*/ int vippoint;
        /*0x24*/ int premiumid;

        /*0xf249e0*/ ResCashShopPurchase();
    }

    class ReqCashShopVIPReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int viplevel;

        /*0xf207a8*/ ReqCashShopVIPReward(string token, int viplevel);
    }

    class ResCashShopVIPReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf249e8*/ ResCashShopVIPReward();
    }

    class ReqCashShopInstant : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string trigger;

        /*0xf20720*/ ReqCashShopInstant(string token, string trigger);
    }

    class ResCashShopInstant : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int index;
        /*0x28*/ System.DateTime expire;

        /*0xf249d8*/ ResCashShopInstant();
    }

    class ReqContentShopEnter : ServerProtocol.IRequestCommon
    {
        /*0xf207e4*/ ReqContentShopEnter(string token);
    }

    class ResContentShopEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SContentShopReset> resetcnts;
        /*0x28*/ System.Collections.Generic.List<string> goods;

        /*0xf249f0*/ ResContentShopEnter();
    }

    class ReqContentShopPurchase : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf20810*/ ReqContentShopPurchase(string token, int index);
    }

    class ResContentShopPurchase : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int newequipid;
        /*0x34*/ int newbonusid;

        /*0xf249f8*/ ResContentShopPurchase();
    }

    class ReqContentShopReset : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf2084c*/ ReqContentShopReset(string token, int index);
    }

    class ResContentShopReset : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SCurrency currency;
        /*0x20*/ System.Collections.Generic.List<string> goods;

        /*0xf24a00*/ ResContentShopReset();
    }

    class ReqDungeonEnter : ServerProtocol.IRequestCommon
    {
        /*0xf20928*/ ReqDungeonEnter(string token);
    }

    class ResDungeonEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int playingid;
        /*0x24*/ float progress;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SDungeon> unlocks;

        /*0xf24a20*/ ResDungeonEnter();
    }

    class ReqDungeonExploreStart : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int id;

        /*0xf209ac*/ ReqDungeonExploreStart(string token, int id);
    }

    class ResDungeonExploreStart : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.Dictionary<string, int> randomtileids;

        /*0xf24a38*/ ResDungeonExploreStart();
    }

    class ReqDungeonExploreContinue : ServerProtocol.IRequestCommon
    {
        /*0xf20980*/ ReqDungeonExploreContinue(string token);
    }

    class ResDungeonExploreContinue : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SDungeonPlay play;

        /*0xf24a30*/ ResDungeonExploreContinue();
    }

    class ReqDungeonExploreCancel : ServerProtocol.IRequestCommon
    {
        /*0xf20954*/ ReqDungeonExploreCancel(string token);
    }

    class ResDungeonExploreCancel : ServerProtocol.IResponseCommonV2
    {
        /*0xf24a28*/ ResDungeonExploreCancel();
    }

    class ReqDungeonMove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string way;

        /*0xf20ad4*/ ReqDungeonMove(string token, string way);
    }

    class ResDungeonMove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int posx;
        /*0x24*/ int posy;
        /*0x28*/ float progress;
        /*0x30*/ string forceway;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf24a70*/ ResDungeonMove();
    }

    class ResDungeonMove_Battle : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
        /*0x48*/ PTShare.Define.SProperty battlereward;

        /*0xf24a78*/ ResDungeonMove_Battle();
    }

    class ResDungeonMove_Jail : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int heroid;

        /*0xf24ac0*/ ResDungeonMove_Jail();
    }

    class ResDungeonMove_Escape : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int hammer;

        /*0xf24ab0*/ ResDungeonMove_Escape();
    }

    class ResDungeonMove_Bomb : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int bombcount;

        /*0xf24a80*/ ResDungeonMove_Bomb();
    }

    class ResDungeonMove_BombClear : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ string cleartile;

        /*0xf24a88*/ ResDungeonMove_BombClear();
    }

    class ResDungeonMove_BuffReset : ServerProtocol.ResDungeonMove
    {
        /*0xf24a98*/ ResDungeonMove_BuffReset();
    }

    class ResDungeonMove_Buff : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int addatk;
        /*0x44*/ int adddef;
        /*0x48*/ PTShare.Define.SDungeonBuff buff;

        /*0xf24a90*/ ResDungeonMove_Buff();
    }

    class ResDungeonMove_Debuff : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ int subatk;
        /*0x44*/ int subdef;
        /*0x48*/ PTShare.Define.SDungeonBuff buff;

        /*0xf24aa8*/ ResDungeonMove_Debuff();
    }

    class ResDungeonMove_RandomReward : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ PTShare.Define.SCurrency currency;
        /*0x48*/ int makegold;
        /*0x4c*/ int makehexp;
        /*0x50*/ PTShare.Define.SProperty reward;

        /*0xf24ad0*/ ResDungeonMove_RandomReward();
    }

    class ResDungeonMove_ConditionReward : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ PTShare.Define.SCurrency currency;
        /*0x48*/ bool achieve;
        /*0x50*/ PTShare.Define.SProperty reward;
        /*0x58*/ int score;
        /*0x5c*/ int goalscore;

        /*0xf24aa0*/ ResDungeonMove_ConditionReward();
    }

    class ResDungeonMove_Trap : ServerProtocol.ResDungeonMove
    {
        /*0xf24ad8*/ ResDungeonMove_Trap();
    }

    class ResDungeonMove_Mate : ServerProtocol.ResDungeonMove
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;

        /*0xf24ac8*/ ResDungeonMove_Mate();
    }

    class ResDungeonMove_Etc : ServerProtocol.ResDungeonMove
    {
        /*0xf24ab8*/ ResDungeonMove_Etc();
    }

    class ReqDungeonCoinReward : ServerProtocol.IRequestCommon
    {
        /*0xf208fc*/ ReqDungeonCoinReward(string token);
    }

    class ResDungeonCoinReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int index;
        /*0x38*/ PTShare.Define.SProperty gain;

        /*0xf24a18*/ ResDungeonCoinReward();
    }

    class ReqDungeonJail : ServerProtocol.IRequestCommon
    {
        /*0xf20a6c*/ ReqDungeonJail(string token);
    }

    class ResDungeonJail : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int hammer;
        /*0x24*/ int escapeheroid;

        /*0xf24a60*/ ResDungeonJail();
    }

    class ReqDungeonBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf208c4*/ ReqDungeonBegin(string token, string heroids);
    }

    class ResDungeonBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> myheroes;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> vsheroes;

        /*0xf24a10*/ ResDungeonBegin();
    }

    class ReqDungeonFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ bool win;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf209e8*/ ReqDungeonFinish(string token, long lcp, bool win, string playdata, string hpmps);
    }

    class ResDungeonFinish : ServerProtocol.IResponseCommonV3
    {
        /*0xf24a40*/ ResDungeonFinish();
    }

    class ResDungeonFinish_Victory : ServerProtocol.ResDungeonFinish
    {
        /*0x30*/ PTShare.Define.SProperty battlereward;

        /*0xf24a50*/ ResDungeonFinish_Victory();
    }

    class ResDungeonFinish_Defeat : ServerProtocol.ResDungeonFinish
    {
        /*0x30*/ int posx;
        /*0x34*/ int posy;

        /*0xf24a48*/ ResDungeonFinish_Defeat();
    }

    class ReqDungeonHeal : ServerProtocol.IRequestCommon
    {
        /*0xf20a40*/ ReqDungeonHeal(string token);
    }

    class ResDungeonHeal : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf24a58*/ ResDungeonHeal();
    }

    class ReqDungeonRevival : ServerProtocol.IRequestCommon
    {
        /*0xf20b38*/ ReqDungeonRevival(string token);
    }

    class ResDungeonRevival : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCondition revivalhero;

        /*0xf24ae8*/ ResDungeonRevival();
    }

    class ReqDungeonMate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf20a98*/ ReqDungeonMate(string token, int tableid);
    }

    class ResDungeonMate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SMate mate;

        /*0xf24a68*/ ResDungeonMate();
    }

    class ReqDungeonWall : ServerProtocol.IRequestCommon
    {
        /*0xf20b64*/ ReqDungeonWall(string token);
    }

    class ResDungeonWall : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int doorkey;

        /*0xf24af0*/ ResDungeonWall();
    }

    class ReqDungeonProgress : ServerProtocol.IRequestCommon
    {
        /*0xf20b0c*/ ReqDungeonProgress(string token);
    }

    class ResDungeonProgress : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SDungeonCondition> progresses;

        /*0xf24ae0*/ ResDungeonProgress();
    }

    class ReqDungeonAssign : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf20888*/ ReqDungeonAssign(string token, int heroid);
    }

    class ResDungeonAssign : ServerProtocol.IResponseCommonV2
    {
        /*0xf24a08*/ ResDungeonAssign();
    }

    class ReqEquipResetFactionBonus : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int equipid;

        /*0xf20c84*/ ReqEquipResetFactionBonus(string token, int equipid);
    }

    class ResEquipResetFactionBonus : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int equipid;
        /*0x24*/ int newbonusid;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b18*/ ResEquipResetFactionBonus();
    }

    class ReqEquipConfirmFactionBonus : ServerProtocol.IRequestCommon
    {
        /*0xf20bcc*/ ReqEquipConfirmFactionBonus(string token);
    }

    class ResEquipConfirmFactionBonus : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int equipid;
        /*0x24*/ int newbonusid;

        /*0xf24b00*/ ResEquipConfirmFactionBonus();
    }

    class ReqEquipPromote : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int equipid;

        /*0xf20bf8*/ ReqEquipPromote(string token, int equipid);
    }

    class ResEquipPromote : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SEquip equip;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b08*/ ResEquipPromote();
    }

    class ReqEquipReinforce : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int equipid;
        /*0x20*/ string feedequipids;
        /*0x28*/ string feeditemids;

        /*0xf20c34*/ ReqEquipReinforce(string token, int equipid, string feedequipids, string feeditemids);
    }

    class ResEquipReinforce : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SEquip equip;
        /*0x38*/ System.Collections.Generic.List<int> feedidlist;

        /*0xf24b10*/ ResEquipReinforce();
    }

    class ReqEquipArtifactReinforce : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int artifactid;

        /*0xf20b90*/ ReqEquipArtifactReinforce(string token, int artifactid);
    }

    class ResEquipArtifactReinforce : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int artifactlv;

        /*0xf24af8*/ ResEquipArtifactReinforce();
    }

    class ReqEquipSignature : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int count;

        /*0xf20cc0*/ ReqEquipSignature(string token, int heroid, int count);
    }

    class ResEquipSignature : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int signaturelv;

        /*0xf24b20*/ ResEquipSignature();
    }

    class ReqEventCoupon : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string serial;

        /*0xf20dbc*/ ReqEventCoupon(string token, string serial);
    }

    class ResEventCoupon : ServerProtocol.IResponseCommonV2
    {
        /*0xf24b40*/ ResEventCoupon();
    }

    class ReqEventAttendReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int rewardid;

        /*0xf20d00*/ ReqEventAttendReward(string token, int rewardid);
    }

    class ResEventAttendReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty rewards;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b28*/ ResEventAttendReward();
    }

    class ReqEventPassRefresh : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;

        /*0xf20ec4*/ ReqEventPassRefresh(string token, int eventid);
    }

    class ResEventPassRefresh : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SPass pass;

        /*0xf24b60*/ ResEventPassRefresh();
    }

    class ReqEventPassReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf20f00*/ ReqEventPassReward(string token, int index);
    }

    class ResEventPassReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int state;
        /*0x28*/ PTShare.Define.SProperty rewards;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b68*/ ResEventPassReward();
    }

    class ReqEventExchange : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;
        /*0x1c*/ int count;

        /*0xf20df4*/ ReqEventExchange(string token, int index, int count);
    }

    class ResEventExchange : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24b48*/ ResEventExchange();
    }

    class ReqEventBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x20*/ string heroids;

        /*0xf20d3c*/ ReqEventBegin(string token, int bossindex, string heroids);
    }

    class ResEventBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf24b30*/ ResEventBegin();
    }

    class ReqEventFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf20e34*/ ReqEventFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResEventFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;
        /*0x40*/ PTShare.Define.SModeCount usemercenary;

        /*0xf24b50*/ ResEventFinish();
    }

    class ReqEventMopUp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf20e88*/ ReqEventMopUp(string token, int bossindex);
    }

    class ResEventMopUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;

        /*0xf24b58*/ ResEventMopUp();
    }

    class ReqEventBossHistory : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf20d80*/ ReqEventBossHistory(string token, int bossindex);
    }

    class ResEventBossHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> histories;

        /*0xf24b38*/ ResEventBossHistory();
    }

    class ReqEventReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf20f3c*/ ReqEventReplay(string token, string replayid);
    }

    class ResEventReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildBossReplay replay;

        /*0xf24b70*/ ResEventReplay();
    }

    class ReqEventRoulette : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;
        /*0x1c*/ int priceid;

        /*0xf20f74*/ ReqEventRoulette(string token, int eventid, int priceid);
    }

    class ResEventRoulette : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int vippoint;
        /*0x3c*/ int evrolettefree;

        /*0xf24b78*/ ResEventRoulette();
    }

    class ReqFriendFriends : ServerProtocol.IRequestCommon
    {
        /*0xf21124*/ ReqFriendFriends(string token);
    }

    class ResFriendFriends : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int todayrecv;
        /*0x24*/ int todaysend;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SFriend> friendlist;
        /*0x30*/ bool newrequestor;
        /*0x31*/ bool newmercenary;

        /*0xf24c44*/ ResFriendFriends();
    }

    class ReqFriendRequestors : ServerProtocol.IRequestCommon
    {
        /*0xf21150*/ ReqFriendRequestors(string token);
    }

    class ResFriendRequestors : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> reqlist;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SFriend> friendlist;

        /*0xf24c4c*/ ResFriendRequestors();
    }

    class ReqFriendBlacks : ServerProtocol.IRequestCommon
    {
        /*0xf21088*/ ReqFriendBlacks(string token);
    }

    class ResFriendBlacks : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> blacklist;

        /*0xf24c2c*/ ResFriendBlacks();
    }

    class ReqFriendSearch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string query;

        /*0xf2117c*/ ReqFriendSearch(string token, string query);
    }

    class ResFriendSearch : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> list;

        /*0xf24c54*/ ResFriendSearch();
    }

    class ReqFriendSend : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf211b4*/ ReqFriendSend(string token, long toplayerid);
    }

    class ResFriendSend : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long toplayerid;

        /*0xf24c5c*/ ResFriendSend();
    }

    class ReqFriendAccept : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long acceptplayerid;

        /*0xf20fb4*/ ReqFriendAccept(string token, long acceptplayerid);
    }

    class ResFriendAccept : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SFriend acceptplayer;

        /*0xf24c0c*/ ResFriendAccept();
    }

    class ReqFriendDeny : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long denyplayerid;

        /*0xf210ec*/ ReqFriendDeny(string token, long denyplayerid);
    }

    class ResFriendDeny : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long denyplayerid;

        /*0xf24c3c*/ ResFriendDeny();
    }

    class ReqFriendDelete : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long delplayerid;

        /*0xf210b4*/ ReqFriendDelete(string token, long delplayerid);
    }

    class ResFriendDelete : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long delplayerid;

        /*0xf24c34*/ ResFriendDelete();
    }

    class ReqFriendTakePoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long fromplayerid;

        /*0xf2125c*/ ReqFriendTakePoint(string token, long fromplayerid);
    }

    class ResFriendTakePoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long fromplayerid;
        /*0x38*/ int todayrecv;

        /*0xf24c74*/ ResFriendTakePoint();
    }

    class ReqFriendSendPoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf211ec*/ ReqFriendSendPoint(string token, long toplayerid);
    }

    class ResFriendSendPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long toplayerid;
        /*0x38*/ int todaysend;

        /*0xf24c64*/ ResFriendSendPoint();
    }

    class ReqFriendAllPoint : ServerProtocol.IRequestCommon
    {
        /*0xf20fec*/ ReqFriendAllPoint(string token);
    }

    class ResFriendAllPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int todayrecv;
        /*0x34*/ int todaysend;
        /*0x38*/ System.Collections.Generic.List<long> recvlist;
        /*0x40*/ System.Collections.Generic.List<long> sendlist;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SFriend> friendlist;

        /*0xf24c14*/ ResFriendAllPoint();
    }

    class ReqFriendBlacklist : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21018*/ ReqFriendBlacklist(string token, long playerid);
    }

    class ResFriendBlacklist : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SPlayer player;

        /*0xf24c1c*/ ResFriendBlacklist();
    }

    class ReqFriendBlacklistRemove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long delplayerid;

        /*0xf21050*/ ReqFriendBlacklistRemove(string token, long delplayerid);
    }

    class ResFriendBlacklistRemove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long delplayerid;

        /*0xf24c24*/ ResFriendBlacklistRemove();
    }

    class ReqFriendSparring : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf21224*/ ReqFriendSparring(string token, long toplayerid);
    }

    class ResFriendSparring : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long cp;
        /*0x28*/ PTShare.Define.SStatBonus statbonus;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> decks;

        /*0xf24c6c*/ ResFriendSparring();
    }

    class ReqGachaBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int gachaid;
        /*0x1c*/ int priceid;
        /*0x20*/ int factionid;

        /*0xf21294*/ ReqGachaBuy(string token, int gachaid, int priceid, int factionid);
    }

    class ResGachaBuy : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ bool recvbonus;
        /*0x3c*/ int oldaccgacha;
        /*0x40*/ int newaccgacha;
        /*0x48*/ string buyresult;

        /*0xf24c7c*/ ResGachaBuy();
    }

    class ReqGachaEnter : ServerProtocol.IRequestCommon
    {
        /*0xf21358*/ ReqGachaEnter(string token);
    }

    class ResGachaEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int accgacha;
        /*0x28*/ System.Collections.Generic.List<bool> pools;

        /*0xf24c94*/ ResGachaEnter();
    }

    class ReqGachaBuyFactionPool : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int factionid;

        /*0xf212e4*/ ReqGachaBuyFactionPool(string token, int factionid);
    }

    class ResGachaBuyFactionPool : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int factionid;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24c84*/ ResGachaBuyFactionPool();
    }

    class ReqGachaCommitWishList : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string herotableids;

        /*0xf21320*/ ReqGachaCommitWishList(string token, string herotableids);
    }

    class ResGachaCommitWishList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<string> wishlist;

        /*0xf24c8c*/ ResGachaCommitWishList();
    }

    class ReqGachaSetAutoDismiss : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string herotableids;

        /*0xf21384*/ ReqGachaSetAutoDismiss(string token, string herotableids);
    }

    class ResGachaSetAutoDismiss : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> autodismiss;

        /*0xf24c9c*/ ResGachaSetAutoDismiss();
    }

    class ReqGateZone
    {
        /*0xf213f4*/ ReqGateZone();
    }

    class ResGateZone : ServerProtocol.IResponseCommon
    {
        /*0x18*/ string zone;

        /*0xf24cac*/ ResGateZone();
    }

    class ReqGateInit
    {
        /*0x10*/ int ver;
        /*0x14*/ int billingtype;

        /*0xf213bc*/ ReqGateInit(int ver, int billingtype);
    }

    class ResGateInit : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.DateTime now;
        /*0x20*/ System.DateTime stopendplan;
        /*0x28*/ string ip;
        /*0x30*/ int protocolver;
        /*0x34*/ bool randomguestid;
        /*0x35*/ bool couponvisible;
        /*0x36*/ bool zoneselect;
        /*0x38*/ string zone;
        /*0x40*/ string privacyurl;
        /*0x48*/ string termsurl;
        /*0x50*/ string customerurl;
        /*0x58*/ string marketurl;
        /*0x60*/ string bundleurl;
        /*0x68*/ System.Collections.Generic.Dictionary<string, string> communityurl;
        /*0x70*/ string refundurl;

        /*0xf24ca4*/ ResGateInit();
    }

    class ReqGrowthEnter : ServerProtocol.IRequestCommon
    {
        /*0xf213fc*/ ReqGrowthEnter(string token);
    }

    class ResGrowthEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGrowth> list;

        /*0xf24cb4*/ ResGrowthEnter();
    }

    class ReqGrowthTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf21428*/ ReqGrowthTake(string token, int index);
    }

    class ResGrowthTake : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf24cbc*/ ResGrowthTake();
    }

    class ReqGuildSearch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string query;

        /*0xf219ac*/ ReqGuildSearch(string token, string query);
    }

    class ResGuildSearch : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> list;

        /*0xf24d74*/ ResGuildSearch();
    }

    class ReqGuildRecommend : ServerProtocol.IRequestCommon
    {
        /*0xf2191c*/ ReqGuildRecommend(string token);
    }

    class ResGuildRecommend : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int guildid;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> list;

        /*0xf24d5c*/ ResGuildRecommend();
    }

    class ReqGuildDetail : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int guildid;

        /*0xf216e4*/ ReqGuildDetail(string token, int guildid);
    }

    class ResGuildDetail : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuild info;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;

        /*0xf24d0c*/ ResGuildDetail();
    }

    class ReqGuildCreate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string name;
        /*0x20*/ int emblemid;
        /*0x24*/ int accepttype;
        /*0x28*/ string guide;
        /*0x30*/ string lang;
        /*0x38*/ int reqlevel;

        /*0xf215c0*/ ReqGuildCreate(string token, string name, int emblemid, int accepttype, string guide, string lang, int reqlevel);
    }

    class ResGuildCreate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x30*/ PTShare.Define.SGuild info;
        /*0x38*/ PTShare.Define.SGuildMember member;

        /*0xf24cf4*/ ResGuildCreate();
    }

    class ReqGuildEnter : ServerProtocol.IRequestCommon
    {
        /*0xf21758*/ ReqGuildEnter(string token);
    }

    class ResGuildEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuild info;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;
        /*0x30*/ int todaypoint;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> bosses;
        /*0x40*/ bool newrequestor;
        /*0x41*/ bool newoffice;
        /*0x42*/ bool newguildwar;
        /*0x44*/ int joinsecs;
        /*0x48*/ long oldmasterid;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> frames;

        /*0xf24d1c*/ ResGuildEnter();
    }

    class ReqGuildSendReq : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int guildid;

        /*0xf219e4*/ ReqGuildSendReq(string token, int guildid);
    }

    class ResGuildSendReq : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool requested;
        /*0x28*/ PTShare.Define.SGuild info;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;

        /*0xf24d7c*/ ResGuildSendReq();
    }

    class ReqGuildUpdateInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int emblemid;
        /*0x1c*/ int frameid;
        /*0x20*/ int accepttype;
        /*0x28*/ string guide;
        /*0x30*/ string lang;
        /*0x38*/ int reqlevel;
        /*0x40*/ string notice;

        /*0xf21af0*/ ReqGuildUpdateInfo(string token, int emblemid, int frameid, int accepttype, string guide, string lang, int reqlevel, string notice);
    }

    class ResGuildUpdateInfo : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d9c*/ ResGuildUpdateInfo();
    }

    class ReqUpdateName : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string name;

        /*0xf23b50*/ ReqUpdateName(string token, string name);
    }

    class ResUpdateName : ServerProtocol.IResponseCommonV3
    {
        /*0xf25234*/ ResUpdateName();
    }

    class ReqGuildRequestors : ServerProtocol.IRequestCommon
    {
        /*0xf21980*/ ReqGuildRequestors(string token);
    }

    class ResGuildRequestors : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> list;

        /*0xf24d6c*/ ResGuildRequestors();
    }

    class ReqGuildAcceptReq : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21464*/ ReqGuildAcceptReq(string token, long playerid);
    }

    class ResGuildAcceptReq : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildMember member;

        /*0xf24cc4*/ ResGuildAcceptReq();
    }

    class ReqGuildAcceptReqAll : ServerProtocol.IRequestCommon
    {
        /*0xf2149c*/ ReqGuildAcceptReqAll(string token);
    }

    class ResGuildAcceptReqAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> members;

        /*0xf24ccc*/ ResGuildAcceptReqAll();
    }

    class ReqGuildDenyReq : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21680*/ ReqGuildDenyReq(string token, long playerid);
    }

    class ResGuildDenyReq : ServerProtocol.IResponseCommonV2
    {
        /*0xf24cfc*/ ResGuildDenyReq();
    }

    class ReqGuildDenyReqAll : ServerProtocol.IRequestCommon
    {
        /*0xf216b8*/ ReqGuildDenyReqAll(string token);
    }

    class ResGuildDenyReqAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int denycount;

        /*0xf24d04*/ ResGuildDenyReqAll();
    }

    class ReqGuildSetCamp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int x;
        /*0x1c*/ int y;
        /*0x20*/ long playerid;

        /*0xf21a60*/ ReqGuildSetCamp(string token, int x, int y, long playerid);
    }

    class ResGuildSetCamp : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d8c*/ ResGuildSetCamp();
    }

    class ReqGuildLeave : ServerProtocol.IRequestCommon
    {
        /*0xf2184c*/ ReqGuildLeave(string token);
    }

    class ResGuildLeave : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d3c*/ ResGuildLeave();
    }

    class ReqGuildKick : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21814*/ ReqGuildKick(string token, long playerid);
    }

    class ResGuildKick : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d34*/ ResGuildKick();
    }

    class ReqGuildDevolve : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;

        /*0xf21720*/ ReqGuildDevolve(string token, long playerid);
    }

    class ResGuildDevolve : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d14*/ ResGuildDevolve();
    }

    class ReqGuildSetPosition : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;
        /*0x20*/ int position;

        /*0xf21ab0*/ ReqGuildSetPosition(string token, long playerid, int position);
    }

    class ResGuildSetPosition : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d94*/ ResGuildSetPosition();
    }

    class ReqGuildSetAuth : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;
        /*0x20*/ int auth;

        /*0xf21a20*/ ReqGuildSetAuth(string token, long playerid, int auth);
    }

    class ResGuildSetAuth : ServerProtocol.IResponseCommonV2
    {
        /*0xf24d84*/ ResGuildSetAuth();
    }

    class ReqGuildOffice : ServerProtocol.IRequestCommon
    {
        /*0xf218b4*/ ReqGuildOffice(string token);
    }

    class ResGuildOffice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int wastecount;

        /*0xf24d4c*/ ResGuildOffice();
    }

    class ReqGuildClean : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf21584*/ ReqGuildClean(string token, int count);
    }

    class ResGuildClean : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int wastecount;

        /*0xf24cec*/ ResGuildClean();
    }

    class ReqGuildBossOpen : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf21548*/ ReqGuildBossOpen(string token, int bossindex);
    }

    class ResGuildBossOpen : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long lastdamage;

        /*0xf24ce4*/ ResGuildBossOpen();
    }

    class ReqGuildBossHistory : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf2150c*/ ReqGuildBossHistory(string token, int bossindex);
    }

    class ResGuildBossHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> histories;

        /*0xf24cdc*/ ResGuildBossHistory();
    }

    class ReqGuildBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x20*/ string heroids;

        /*0xf214c8*/ ReqGuildBegin(string token, int bossindex, string heroids);
    }

    class ResGuildBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf24cd4*/ ResGuildBegin();
    }

    class ReqGuildFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf21784*/ ReqGuildFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResGuildFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;
        /*0x40*/ PTShare.Define.SModeCount usemercenary;

        /*0xf24d24*/ ResGuildFinish();
    }

    class ReqGuildMopUp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf21878*/ ReqGuildMopUp(string token, int bossindex);
    }

    class ResGuildMopUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int huntingcount;

        /*0xf24d44*/ ResGuildMopUp();
    }

    class ReqGuildReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf21948*/ ReqGuildReplay(string token, string replayid);
    }

    class ResGuildReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildBossReplay replay;

        /*0xf24d64*/ ResGuildReplay();
    }

    class ReqGuildRanking : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf218e0*/ ReqGuildRanking(string token, int index);
    }

    class ResGuildRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SLongRanker> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ long myscore;
        /*0x38*/ PTShare.Define.SGuildMini myguild;

        /*0xf24d54*/ ResGuildRanking();
    }

    class ReqGuildGuildRanking : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf217d8*/ ReqGuildGuildRanking(string token, int index);
    }

    class ResGuildGuildRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRankerGuild> ranks;
        /*0x28*/ int myrank;
        /*0x30*/ long myscore;
        /*0x38*/ PTShare.Define.SGuildMini myguild;

        /*0xf24d2c*/ ResGuildGuildRanking();
    }

    class ReqGuildWarEnter : ServerProtocol.IRequestCommon
    {
        /*0xf21ca8*/ ReqGuildWarEnter(string token);
    }

    class ResGuildWarEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newform;
        /*0x21*/ bool newmyhero;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> rankguilds;
        /*0x30*/ int myguildrank;
        /*0x34*/ int myguildpoint;
        /*0x38*/ long myguildcp;
        /*0x40*/ int rewardindex;
        /*0x44*/ int newauth;
        /*0x48*/ PTShare.Define.SGuildWarReward newreward;
        /*0x50*/ int warauth;
        /*0x58*/ System.Collections.Generic.List<int> tacticids;

        /*0xf24dc4*/ ResGuildWarEnter();
    }

    class ReqGuildWarMember : ServerProtocol.IRequestCommon
    {
        /*0xf21dec*/ ReqGuildWarMember(string token);
    }

    class ResGuildWarMember : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer> members;

        /*0xf24dec*/ ResGuildWarMember();
    }

    class ReqGuildWarSetCaptain : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long playerid;
        /*0x20*/ int auth;

        /*0xf21ebc*/ ReqGuildWarSetCaptain(string token, long playerid, int auth);
    }

    class ResGuildWarSetCaptain : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SGuildWarPlayer attackcaptain;
        /*0x28*/ PTShare.Define.SGuildWarPlayer defensecaptain;

        /*0xf24e0c*/ ResGuildWarSetCaptain();
    }

    class ReqGuildWarForm : ServerProtocol.IRequestCommon
    {
        /*0xf21d54*/ ReqGuildWarForm(string token);
    }

    class ResGuildWarForm : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newatkdeck;
        /*0x21*/ bool newdefdeck;
        /*0x28*/ PTShare.Define.SGuildWarForm attack;
        /*0x30*/ PTShare.Define.SGuildWarForm defense;

        /*0xf24dd4*/ ResGuildWarForm();
    }

    class ReqGuildWarFormDetail : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x1c*/ int tableid;

        /*0xf21d80*/ ReqGuildWarFormDetail(string token, int type, int tableid);
    }

    class ResGuildWarFormDetail : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> heroes;

        /*0xf24ddc*/ ResGuildWarFormDetail();
    }

    class ReqGuildWarSetForm : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x20*/ string uniqueid;
        /*0x28*/ bool confirm;
        /*0x30*/ string unsetuniqueid;

        /*0xf21efc*/ ReqGuildWarSetForm(string token, int type, string uniqueid, bool confirm, string unsetuniqueid);
    }

    class ResGuildWarSetForm : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero already;
        /*0x28*/ long alreadyplayerid;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> formheroes;

        /*0xf24e14*/ ResGuildWarSetForm();
    }

    class ReqGuildWarUnsetForm : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x20*/ string uniqueid;

        /*0xf21f98*/ ReqGuildWarUnsetForm(string token, int type, string uniqueid);
    }

    class ResGuildWarUnsetForm : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e24*/ ResGuildWarUnsetForm();
    }

    class ReqGuildWarMyFormHero : ServerProtocol.IRequestCommon
    {
        /*0xf21e18*/ ReqGuildWarMyFormHero(string token);
    }

    class ResGuildWarMyFormHero : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int atkheroid;
        /*0x24*/ int defheroid;

        /*0xf24df4*/ ResGuildWarMyFormHero();
    }

    class ReqGuildWarBuyTactic : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tacticid;

        /*0xf21bc8*/ ReqGuildWarBuyTactic(string token, int tacticid);
    }

    class ResGuildWarBuyTactic : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int guildpoint;

        /*0xf24da4*/ ResGuildWarBuyTactic();
    }

    class ReqGuildWarDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf21c6c*/ ReqGuildWarDeck(string token, int type);
    }

    class ResGuildWarDeck : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int tacticid;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> heroes;

        /*0xf24dbc*/ ResGuildWarDeck();
    }

    class ReqGuildWarUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;
        /*0x1c*/ int tacticid;
        /*0x20*/ string uniqueids;

        /*0xf21fdc*/ ReqGuildWarUpdateDeck(string token, int type, int tacticid, string uniqueids);
    }

    class ResGuildWarUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> defheroes;

        /*0xf24e2c*/ ResGuildWarUpdateDeck();
    }

    class ReqGuildWarSearch : ServerProtocol.IRequestCommon
    {
        /*0x18*/ bool reset;

        /*0xf21e7c*/ ReqGuildWarSearch(string token, bool reset);
    }

    class ResGuildWarSearch : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> targets;
        /*0x38*/ int ticket;
        /*0x3c*/ int buylimit;

        /*0xf24e04*/ ResGuildWarSearch();
    }

    class ReqGuildWarChoice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int guildid;

        /*0xf21c04*/ ReqGuildWarChoice(string token, int guildid);
    }

    class ResGuildWarChoice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ PTShare.Define.SGuildWarTactic attack;
        /*0x30*/ PTShare.Define.SGuildWarTactic defense;

        /*0xf24dac*/ ResGuildWarChoice();
    }

    class ReqGuildWarFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ long rcp;
        /*0x28*/ string statistics;
        /*0x30*/ int tacticid;
        /*0x38*/ string uniqueids;
        /*0x40*/ bool win;
        /*0x48*/ string hpmps;
        /*0x50*/ string output;

        /*0xf21cd4*/ ReqGuildWarFinish(string token, long lcp, long rcp, string statistics, int tacticid, string uniqueids, bool win, string hpmps, string output);
    }

    class ResGuildWarFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int myrank;
        /*0x24*/ int myrankmove;
        /*0x28*/ int mypoint_before;
        /*0x2c*/ int mypoint_after;
        /*0x30*/ int vspoint_before;
        /*0x34*/ int vspoint_after;
        /*0x38*/ int ticket;

        /*0xf24dcc*/ ResGuildWarFinish();
    }

    class ReqGuildWarHistory : ServerProtocol.IRequestCommon
    {
        /*0xf21dc0*/ ReqGuildWarHistory(string token);
    }

    class ResGuildWarHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHistory> histories;

        /*0xf24de4*/ ResGuildWarHistory();
    }

    class ReqGuildWarReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string replayid;

        /*0xf21e44*/ ReqGuildWarReplay(string token, string replayid);
    }

    class ResGuildWarReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SArenaReplay replay;

        /*0xf24dfc*/ ResGuildWarReplay();
    }

    class ReqGuildWarContribution : ServerProtocol.IRequestCommon
    {
        /*0xf21c40*/ ReqGuildWarContribution(string token);
    }

    class ResGuildWarContribution : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int rewardindex;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SContribution> members;

        /*0xf24db4*/ ResGuildWarContribution();
    }

    class ReqGuildWarTicket : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf21f5c*/ ReqGuildWarTicket(string token, int count);
    }

    class ResGuildWarTicket : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int ticket;

        /*0xf24e1c*/ ResGuildWarTicket();
    }

    class ReqHeroInven : ServerProtocol.IRequestCommon
    {
        /*0xf2239c*/ ReqHeroInven(string token);
    }

    class ResHeroInven : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHero> herolist;

        /*0xf24eac*/ ResHeroInven();
    }

    class ReqHeroEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int equipid;

        /*0xf22330*/ ReqHeroEquip(string token, int heroid, int equipid);
    }

    class ResHeroEquip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int type;
        /*0x24*/ int equipid;
        /*0x28*/ PTShare.Define.SHero hero;
        /*0x30*/ int relequipid;
        /*0x38*/ PTShare.Define.SHero relhero;

        /*0xf24e9c*/ ResHeroEquip();
    }

    class ReqHeroUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int equipid;

        /*0xf2251c*/ ReqHeroUnequip(string token, int heroid, int equipid);
    }

    class ResHeroUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero hero;
        /*0x28*/ int equipid;

        /*0xf24edc*/ ResHeroUnequip();
    }

    class ReqHeroAutoEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf22280*/ ReqHeroAutoEquip(string token, int heroid);
    }

    class ResHeroAutoEquip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero hero;

        /*0xf24e84*/ ResHeroAutoEquip();
    }

    class ReqHeroAllUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf22188*/ ReqHeroAllUnequip(string token, int heroid);
    }

    class ResHeroAllUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHero hero;

        /*0xf24e64*/ ResHeroAllUnequip();
    }

    class ReqHeroPromote : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ string feedheroids;

        /*0xf22464*/ ReqHeroPromote(string token, int heroid, string feedheroids);
    }

    class ResHeroPromote : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int heroid;
        /*0x34*/ int grade;
        /*0x38*/ System.Collections.Generic.List<int> feedidlist;
        /*0x40*/ PTShare.Define.SProperty gain;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SLvHero> top5;

        /*0xf24ec4*/ ResHeroPromote();
    }

    class ReqHeroPromoteMulti : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf224a8*/ ReqHeroPromoteMulti(string token, string heroids);
    }

    class ResHeroPromoteMulti : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<int> heroids;
        /*0x38*/ System.Collections.Generic.List<int> grades;
        /*0x40*/ System.Collections.Generic.List<int> feedids;
        /*0x48*/ PTShare.Define.SProperty gain;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SLvHero> top5;

        /*0xf24ecc*/ ResHeroPromoteMulti();
    }

    class ReqHeroLevelUp : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int count;
        /*0x20*/ bool fast;

        /*0xf223c8*/ ReqHeroLevelUp(string token, int heroid, int count, bool fast);
    }

    class ResHeroLevelUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int heroid;
        /*0x34*/ int level;
        /*0x38*/ int resonancelv;

        /*0xf24eb4*/ ResHeroLevelUp();
    }

    class ReqHeroLock : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ bool locking;

        /*0xf2241c*/ ReqHeroLock(string token, int heroid, bool locking);
    }

    class ResHeroLock : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int heroid;
        /*0x24*/ bool locking;

        /*0xf24ebc*/ ResHeroLock();
    }

    class ReqHeroExtendSlot : ServerProtocol.IRequestCommon
    {
        /*0xf22370*/ ReqHeroExtendSlot(string token);
    }

    class ResHeroExtendSlot : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int heroslot;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf24ea4*/ ResHeroExtendSlot();
    }

    class ReqHeroBookReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf222bc*/ ReqHeroBookReward(string token, int tableid);
    }

    class ResHeroBookReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int tableid;
        /*0x28*/ PTShare.Define.SCurrency currency;

        /*0xf24e8c*/ ResHeroBookReward();
    }

    class ReqHeroRevert : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf224e0*/ ReqHeroRevert(string token, int heroid);
    }

    class ResHeroRevert : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf24ed4*/ ResHeroRevert();
    }

    class ReqHeroWagon : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf2255c*/ ReqHeroWagon(string token, int heroid);
    }

    class ResHeroWagon : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int heroid;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SLvHero> top5;

        /*0xf24ee4*/ ResHeroWagon();
    }

    class ReqHeroDismiss : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf222f8*/ ReqHeroDismiss(string token, string heroids);
    }

    class ResHeroDismiss : ServerProtocol.IResponseCommonV3
    {
        /*0xf24e94*/ ResHeroDismiss();
    }

    class ReqHeroArtifactEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int artifactid;

        /*0xf221c4*/ ReqHeroArtifactEquip(string token, int heroid, int artifactid);
    }

    class ResHeroArtifactEquip : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e6c*/ ResHeroArtifactEquip();
    }

    class ReqHeroArtifactSwap : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x1c*/ int destheroid;

        /*0xf22204*/ ReqHeroArtifactSwap(string token, int heroid, int destheroid);
    }

    class ResHeroArtifactSwap : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e74*/ ResHeroArtifactSwap();
    }

    class ReqHeroArtifactUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf22244*/ ReqHeroArtifactUnequip(string token, int heroid);
    }

    class ResHeroArtifactUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0xf24e7c*/ ResHeroArtifactUnequip();
    }

    class ReqItemUse : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;
        /*0x1c*/ int count;
        /*0x20*/ string choice;

        /*0xf22bdc*/ ReqItemUse(string token, int tableid, int count, string choice);
    }

    class ResItemUse : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int tableid;
        /*0x24*/ int count;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ PTShare.Define.SProperty gain;

        /*0xf24fac*/ ResItemUse();
    }

    class ReqMailInbox : ServerProtocol.IRequestCommon
    {
        /*0xf22c2c*/ ReqMailInbox(string token);
    }

    class ResMailInbox : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMail> mails;

        /*0xf24fb4*/ ResMailInbox();
    }

    class ReqMailTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int mailid;

        /*0xf22cc0*/ ReqMailTake(string token, int mailid);
    }

    class ResMailTake : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int mailid;

        /*0xf24fcc*/ ResMailTake();
    }

    class ResMailTake_Empty : ServerProtocol.ResMailTake
    {
        /*0xf24fe4*/ ResMailTake_Empty();
    }

    class ResMailTake_Attached : ServerProtocol.ResMailTake
    {
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;

        /*0xf24fdc*/ ResMailTake_Attached();
    }

    class ReqMailRemove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int mailid;

        /*0xf22c58*/ ReqMailRemove(string token, int mailid);
    }

    class ResMailRemove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int mailid;

        /*0xf24fbc*/ ResMailRemove();
    }

    class ReqMailTakeAll : ServerProtocol.IRequestCommon
    {
        /*0xf22cfc*/ ReqMailTakeAll(string token);
    }

    class ResMailTakeAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> mailids;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;

        /*0xf24fd4*/ ResMailTakeAll();
    }

    class ReqMailRemoveAll : ServerProtocol.IRequestCommon
    {
        /*0xf22c94*/ ReqMailRemoveAll(string token);
    }

    class ResMailRemoveAll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> mailids;

        /*0xf24fc4*/ ResMailRemoveAll();
    }

    class ReqManufactureEnter : ServerProtocol.IRequestCommon
    {
        /*0xf22d28*/ ReqManufactureEnter(string token);
    }

    class ResManufactureEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ float percent;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SManufacture> status;

        /*0xf24fec*/ ResManufactureEnter();
    }

    class ReqManufactureInsert : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;
        /*0x1c*/ int amount;

        /*0xf22d54*/ ReqManufactureInsert(string token, int index, int amount);
    }

    class ResManufactureInsert : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int pushcnt;
        /*0x34*/ float percent;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SManufacture> status;

        /*0xf24ff4*/ ResManufactureInsert();
    }

    class ReqMazeEnter : ServerProtocol.IRequestCommon
    {
        /*0xf22e14*/ ReqMazeEnter(string token);
    }

    class ResMazeEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool firstenter;
        /*0x28*/ PTShare.Define.SMaze maze;
        /*0x30*/ PTShare.Define.SPay decidecost;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SMate> mates;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;
        /*0x50*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
        /*0x58*/ PTShare.Define.SProperty battlereward;
        /*0x60*/ System.Collections.Generic.List<int> dicevalues;
        /*0x68*/ int battleindex;

        /*0xf2503c*/ ResMazeEnter();
    }

    class ReqMazeDice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int decide;
        /*0x1c*/ bool iscash;

        /*0xf22dcc*/ ReqMazeDice(string token, int decide, bool iscash);
    }

    class ResMazeDice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int dicevalue;
        /*0x28*/ PTShare.Define.SPay decidecost;
        /*0x30*/ int pos;
        /*0x38*/ PTShare.Define.SCurrency currency;

        /*0xf25004*/ ResMazeDice();
    }

    class ResMazeDice_Battle : ServerProtocol.ResMazeDice
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
        /*0x48*/ PTShare.Define.SProperty battlereward;
        /*0x50*/ int type;
        /*0x54*/ int battleindex;

        /*0xf2500c*/ ResMazeDice_Battle();
    }

    class ResMazeDice_Mate : ServerProtocol.ResMazeDice
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;

        /*0xf25024*/ ResMazeDice_Mate();
    }

    class ResMazeDice_Reward : ServerProtocol.ResMazeDice
    {
        /*0x40*/ PTShare.Define.SProperty reward;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf25034*/ ResMazeDice_Reward();
    }

    class ResMazeDice_Revival : ServerProtocol.ResMazeDice
    {
        /*0x40*/ int heroid;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf2502c*/ ResMazeDice_Revival();
    }

    class ResMazeDice_Heal : ServerProtocol.ResMazeDice
    {
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf2501c*/ ResMazeDice_Heal();
    }

    class ResMazeDice_Etc : ServerProtocol.ResMazeDice
    {
        /*0xf25014*/ ResMazeDice_Etc();
    }

    class ReqMazeBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf22d94*/ ReqMazeBegin(string token, string heroids);
    }

    class ResMazeBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> myheroes;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> vsheroes;

        /*0xf24ffc*/ ResMazeBegin();
    }

    class ReqMazeFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ bool win;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf22e40*/ ReqMazeFinish(string token, long lcp, bool win, string playdata, string hpmps);
    }

    class ResMazeFinish : ServerProtocol.IResponseCommonV3
    {
        /*0xf25044*/ ResMazeFinish();
    }

    class ResMazeFinish_Victory : ServerProtocol.ResMazeFinish
    {
        /*0x30*/ PTShare.Define.SMaze maze;
        /*0x38*/ PTShare.Define.SProperty battlereward;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passpoints;

        /*0xf25054*/ ResMazeFinish_Victory();
    }

    class ResMazeFinish_Defeat : ServerProtocol.ResMazeFinish
    {
        /*0xf2504c*/ ResMazeFinish_Defeat();
    }

    class ReqMazeMate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf22ef0*/ ReqMazeMate(string token, int tableid);
    }

    class ResMazeMate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SMate mate;

        /*0xf2506c*/ ResMazeMate();
    }

    class ReqMazeItem : ServerProtocol.IRequestCommon
    {
        /*0xf22ec4*/ ReqMazeItem(string token);
    }

    class ResMazeItem : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;

        /*0xf25064*/ ResMazeItem();
    }

    class ReqMazeRoll : ServerProtocol.IRequestCommon
    {
        /*0xf22f58*/ ReqMazeRoll(string token);
    }

    class ResMazeRoll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<int> dicevalues;

        /*0xf2507c*/ ResMazeRoll();
    }

    class ReqMazeMateReset : ServerProtocol.IRequestCommon
    {
        /*0xf22f2c*/ ReqMazeMateReset(string token);
    }

    class ResMazeMateReset : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;

        /*0xf25074*/ ResMazeMateReset();
    }

    class ReqMazeInfo : ServerProtocol.IRequestCommon
    {
        /*0xf22e98*/ ReqMazeInfo(string token);
    }

    class ResMazeInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> semienemies;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> bossenemies;
        /*0x30*/ int semiindex;
        /*0x34*/ int bossindex;

        /*0xf2505c*/ ResMazeInfo();
    }

    class ReqMercenaryRentList : ServerProtocol.IRequestCommon
    {
        /*0xf23110*/ ReqMercenaryRentList(string token);
    }

    class ResMercenaryRentList : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> rentlist;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> mercenarys;
        /*0x28*/ bool newlend;

        /*0xf250bc*/ ResMercenaryRentList();
    }

    class ReqMercenaryRent : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;

        /*0xf23090*/ ReqMercenaryRent(string token, long toplayerid, int heroid);
    }

    class ResMercenaryRent : ServerProtocol.IResponseCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;
        /*0x24*/ int reqcount;

        /*0xf250ac*/ ResMercenaryRent();
    }

    class ReqMercenaryRentCancel : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;

        /*0xf230d0*/ ReqMercenaryRentCancel(string token, long toplayerid, int heroid);
    }

    class ResMercenaryRentCancel : ServerProtocol.IResponseCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;
        /*0x24*/ int reqcount;

        /*0xf250b4*/ ResMercenaryRentCancel();
    }

    class ReqMercenaryRentReturn : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int heroid;

        /*0xf2313c*/ ReqMercenaryRentReturn(string token, long toplayerid, int heroid);
    }

    class ResMercenaryRentReturn : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SMercenaryRent mercenary;

        /*0xf250c4*/ ResMercenaryRentReturn();
    }

    class ReqMercenaryLendList : ServerProtocol.IRequestCommon
    {
        /*0xf23064*/ ReqMercenaryLendList(string token);
    }

    class ResMercenaryLendList : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLend> lendlist;
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> lendedlist;

        /*0xf250a4*/ ResMercenaryLendList();
    }

    class ReqMercenaryLend : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ long toplayerid;

        /*0xf22f84*/ ReqMercenaryLend(string token, int heroid, long toplayerid);
    }

    class ResMercenaryLend : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SMercenaryLended lended;

        /*0xf25084*/ ResMercenaryLend();
    }

    class ReqMercenaryLendDeny : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ long toplayerid;

        /*0xf22fc8*/ ReqMercenaryLendDeny(string token, int heroid, long toplayerid);
    }

    class ResMercenaryLendDeny : ServerProtocol.IResponseCommon
    {
        /*0x18*/ PTShare.Define.SMercenaryLend lend;

        /*0xf2508c*/ ResMercenaryLendDeny();
    }

    class ReqMercenaryLendDenyAll : ServerProtocol.IRequestCommon
    {
        /*0xf2300c*/ ReqMercenaryLendDenyAll(string token);
    }

    class ResMercenaryLendDenyAll : ServerProtocol.IResponseCommon
    {
        /*0xf25094*/ ResMercenaryLendDenyAll();
    }

    class ReqMercenaryLendFast : ServerProtocol.IRequestCommon
    {
        /*0xf23038*/ ReqMercenaryLendFast(string token);
    }

    class ResMercenaryLendFast : ServerProtocol.IResponseCommon
    {
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> lendedlist;

        /*0xf2509c*/ ResMercenaryLendFast();
    }

    class ReqMissionEnter : ServerProtocol.IRequestCommon
    {
        /*0xf2317c*/ ReqMissionEnter(string token);
    }

    class ResMissionEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMission> list;

        /*0xf250cc*/ ResMissionEnter();
    }

    class ReqMissionTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf231e4*/ ReqMissionTake(string token, int index);
    }

    class ResMissionTake : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int gainpoint;
        /*0x24*/ int totalpoint;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf250dc*/ ResMissionTake();
    }

    class ReqMissionExchange : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf231a8*/ ReqMissionExchange(string token, int index);
    }

    class ResMissionExchange : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf250d4*/ ResMissionExchange();
    }

    class ReqQuestNew : ServerProtocol.IRequestCommon
    {
        /*0xf233a4*/ ReqQuestNew(string token);
    }

    class ResQuestNew : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ bool newquest;

        /*0xf25114*/ ResQuestNew();
    }

    class ReqQuestVisitSite : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string sitename;

        /*0xf2344c*/ ReqQuestVisitSite(string token, string sitename);
    }

    class ResQuestVisitSite : ServerProtocol.IResponseCommonV2
    {
        /*0xf2512c*/ ResQuestVisitSite();
    }

    class ReqQuestEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23338*/ ReqQuestEnter(string token);
    }

    class ResQuestEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SQuest daily;
        /*0x28*/ PTShare.Define.SQuest weekly;
        /*0x30*/ PTShare.Define.SQuest dailyevent;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> main;

        /*0xf25104*/ ResQuestEnter();
    }

    class ReqQuestTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;
        /*0x1c*/ int index;

        /*0xf233d0*/ ReqQuestTake(string token, int eventid, int index);
    }

    class ResQuestTake : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int index;
        /*0x34*/ int gainpoint;
        /*0x38*/ int questpoint;

        /*0xf2511c*/ ResQuestTake();
    }

    class ReqQuestExchange : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int eventid;
        /*0x1c*/ int index;

        /*0xf23364*/ ReqQuestExchange(string token, int eventid, int index);
    }

    class ResQuestExchange : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int index;
        /*0x38*/ PTShare.Define.SProperty gain;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passpoints;
        /*0x48*/ int vippoint;

        /*0xf2510c*/ ResQuestExchange();
    }

    class ReqQuestTakeMain : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf23410*/ ReqQuestTakeMain(string token, int index);
    }

    class ResQuestTakeMain : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SMainQuest info;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x40*/ int vippoint;

        /*0xf25124*/ ResQuestTakeMain();
    }

    class ReqRaceEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23484*/ ReqRaceEnter(string token);
    }

    class ResRaceEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int curseq;
        /*0x24*/ bool outoftime;
        /*0x28*/ int votetrack;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SRunner> runners;
        /*0x38*/ int prevotetrack;
        /*0x3c*/ bool newrecv;

        /*0xf25134*/ ResRaceEnter();
    }

    class ReqRaceRanking : ServerProtocol.IRequestCommon
    {
        /*0xf234dc*/ ReqRaceRanking(string token);
    }

    class ResRaceRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myscore;
        /*0x30*/ PTShare.Define.SGuildMini myguild;

        /*0xf25144*/ ResRaceRanking();
    }

    class ReqRaceVote : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int track;

        /*0xf23580*/ ReqRaceVote(string token, int track);
    }

    class ResRaceVote : ServerProtocol.IResponseCommonV2
    {
        /*0xf2515c*/ ResRaceVote();
    }

    class ReqRaceReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int seq;

        /*0xf23508*/ ReqRaceReward(string token, int seq);
    }

    class ResRaceReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty rewards;

        /*0xf2514c*/ ResRaceReward();
    }

    class ReqRaceList : ServerProtocol.IRequestCommon
    {
        /*0xf234b0*/ ReqRaceList(string token);
    }

    class ResRaceList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRace> races;

        /*0xf2513c*/ ResRaceList();
    }

    class ReqRaceView : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int seq;

        /*0xf23544*/ ReqRaceView(string token, int seq);
    }

    class ResRaceView : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ RunRaceResultData raceinfo;

        /*0xf25154*/ ResRaceView();
    }

    class ReqResonanceEnter : ServerProtocol.IRequestCommon
    {
        /*0xf235f8*/ ReqResonanceEnter(string token);
    }

    class ResResonanceEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int resonanceslot;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SResonanceSlot> cleanings;
        /*0x30*/ System.Collections.Generic.List<int> top5ids;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> herolist;
        /*0x40*/ int level;

        /*0xf25174*/ ResResonanceEnter();
    }

    class ReqResonanceOpen : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int type;

        /*0xf23650*/ ReqResonanceOpen(string token, int type);
    }

    class ResResonanceOpen : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int resonanceslot;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf25184*/ ResResonanceOpen();
    }

    class ReqResonanceClean : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int syncid;

        /*0xf235bc*/ ReqResonanceClean(string token, int syncid);
    }

    class ResResonanceClean : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf2516c*/ ResResonanceClean();
    }

    class ReqResonancePush : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int syncid;
        /*0x1c*/ int heroid;

        /*0xf236c8*/ ReqResonancePush(string token, int syncid, int heroid);
    }

    class ResResonancePush : ServerProtocol.IResponseCommonV2
    {
        /*0xf25194*/ ResResonancePush();
    }

    class ReqResonancePop : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;

        /*0xf2368c*/ ReqResonancePop(string token, int heroid);
    }

    class ResResonancePop : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int syncid;

        /*0xf2518c*/ ResResonancePop();
    }

    class ReqResonanceUnlock : ServerProtocol.IRequestCommon
    {
        /*0xf23744*/ ReqResonanceUnlock(string token);
    }

    class ResResonanceUnlock : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SResonanceSlot> cleanings;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> herolist;

        /*0xf251a4*/ ResResonanceUnlock();
    }

    class ReqResonanceReinforce : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf23708*/ ReqResonanceReinforce(string token, int count);
    }

    class ResResonanceReinforce : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int count;

        /*0xf2519c*/ ResResonanceReinforce();
    }

    class ReqResonanceLevelUp : ServerProtocol.IRequestCommon
    {
        /*0xf23624*/ ReqResonanceLevelUp(string token);
    }

    class ResResonanceLevelUp : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int level;

        /*0xf2517c*/ ResResonanceLevelUp();
    }

    class ReqRelationActivate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;

        /*0xf18e4c*/ ReqRelationActivate(string token, int index);
    }

    class ResRelationActivate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int relationlevel;

        /*0xf25164*/ ResRelationActivate();
    }

    class ReqSkinBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int skinid;

        /*0xf237f4*/ ReqSkinBuy(string token, int skinid);
    }

    class ResSkinBuy : ServerProtocol.IResponseCommonV3
    {
        /*0xf251bc*/ ResSkinBuy();
    }

    class ReqSkinEquip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int skinid;

        /*0xf23830*/ ReqSkinEquip(string token, int skinid);
    }

    class ResSkinEquip : ServerProtocol.IResponseCommonV2
    {
        /*0xf251c4*/ ResSkinEquip();
    }

    class ReqSkinUnequip : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int skinid;

        /*0xf2386c*/ ReqSkinUnequip(string token, int skinid);
    }

    class ResSkinUnequip : ServerProtocol.IResponseCommonV2
    {
        /*0xf251cc*/ ResSkinUnequip();
    }

    class ReqTowerBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;
        /*0x20*/ int factionid;

        /*0xf238a8*/ ReqTowerBegin(string token, string heroids, int factionid);
    }

    class ResTowerBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;
        /*0x40*/ int towerfloor;

        /*0xf251d4*/ ResTowerBegin();
    }

    class ReqTowerFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf238e8*/ ReqTowerFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResTowerFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int towerfloor;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SCurrency currency;
        /*0x38*/ PTShare.Define.SModeCount usemercenary;

        /*0xf251dc*/ ResTowerFinish();
    }

    class ReqTowerRanking : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int factionid;

        /*0xf239b8*/ ReqTowerRanking(string token, int factionid);
    }

    class ResTowerRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STowerRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myfloor;
        /*0x30*/ System.DateTime myclear;

        /*0xf251f4*/ ResTowerRanking();
    }

    class ReqTowerOthers : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int factionid;

        /*0xf2397c*/ ReqTowerOthers(string token, int factionid);
    }

    class ResTowerOthers : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STowerUser> users;

        /*0xf251ec*/ ResTowerOthers();
    }

    class ReqTowerInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x1c*/ int factionid;

        /*0xf2393c*/ ReqTowerInfo(string token, int floor, int factionid);
    }

    class ResTowerInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STowerRecord> infos;

        /*0xf251e4*/ ResTowerInfo();
    }

    class ReqTowerReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x20*/ long playerid;
        /*0x28*/ int factionid;

        /*0xf1f51c*/ ReqTowerReplay(string token, int floor, long playerid, int factionid);
    }

    class ResTowerReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.STowerReplay replay;

        /*0xf251fc*/ ResTowerReplay();
    }

    class ReqTroopLoad : ServerProtocol.IRequestCommon
    {
        /*0xf239f4*/ ReqTroopLoad(string token);
    }

    class ResTroopLoad : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.STroop> troops;

        /*0xf25204*/ ResTroopLoad();
    }

    class ReqTroopMake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string name;
        /*0x20*/ string heroids;

        /*0xf23a20*/ ReqTroopMake(string token, string name, string heroids);
    }

    class ResTroopMake : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.STroop troop;

        /*0xf2520c*/ ResTroopMake();
    }

    class ReqTroopUpdateName : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;
        /*0x20*/ string name;

        /*0xf23ad8*/ ReqTroopUpdateName(string token, long index, string name);
    }

    class ResTroopUpdateName : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;
        /*0x28*/ string name;

        /*0xf25224*/ ResTroopUpdateName();
    }

    class ReqTroopUpdateOrder : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;

        /*0xf23b18*/ ReqTroopUpdateOrder(string token, long index);
    }

    class ResTroopUpdateOrder : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;
        /*0x28*/ long newindex;

        /*0xf2522c*/ ResTroopUpdateOrder();
    }

    class ReqTroopUpdateHeroes : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;
        /*0x20*/ string heroids;

        /*0xf23a98*/ ReqTroopUpdateHeroes(string token, long index, string heroids);
    }

    class ResTroopUpdateHeroes : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;
        /*0x28*/ string heroids;

        /*0xf2521c*/ ResTroopUpdateHeroes();
    }

    class ReqTroopRemove : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long index;

        /*0xf23a60*/ ReqTroopRemove(string token, long index);
    }

    class ResTroopRemove : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ long index;

        /*0xf25214*/ ResTroopRemove();
    }

    class ReqWorldArenaEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23ca4*/ ReqWorldArenaEnter(string token);
    }

    class ResWorldArenaEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaRanker> ranks;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> targets;
        /*0x30*/ int currentseason;
        /*0x34*/ int mytier;
        /*0x38*/ int mytoprank;
        /*0x3c*/ int myrank;
        /*0x40*/ int mypoint;
        /*0x44*/ int mytoptier;
        /*0x48*/ int mytoppoint;
        /*0x50*/ long mycp;
        /*0x58*/ int arenafree;
        /*0x60*/ System.DateTime refreshfree;

        /*0xf25254*/ ResWorldArenaEnter();
    }

    class ReqWorldArenaUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;
        /*0x20*/ string blinds;

        /*0xf23e2c*/ ReqWorldArenaUpdateDeck(string token, string heroids, string blinds);
    }

    class ResWorldArenaUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0xf2528c*/ ResWorldArenaUpdateDeck();
    }

    class ReqWorldArenaTicket : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int count;

        /*0xf23dc4*/ ReqWorldArenaTicket(string token, int count);
    }

    class ResWorldArenaTicket : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCurrency currency;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

        /*0xf2527c*/ ResWorldArenaTicket();
    }

    class ReqWorldArenaRefresh : ServerProtocol.IRequestCommon
    {
        /*0xf23d6c*/ ReqWorldArenaRefresh(string token);
    }

    class ResWorldArenaRefresh : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> targets;
        /*0x38*/ System.DateTime refreshfree;

        /*0xf2526c*/ ResWorldArenaRefresh();
    }

    class ReqWorldArenaHistory : ServerProtocol.IRequestCommon
    {
        /*0xf23d40*/ ReqWorldArenaHistory(string token);
    }

    class ResWorldArenaHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> histories;

        /*0xf25264*/ ResWorldArenaHistory();
    }

    class ReqWorldArenaChoice : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf23c6c*/ ReqWorldArenaChoice(string token, long toplayerid);
    }

    class ResWorldArenaChoice : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ PTShare.Define.SBattleSide side;

        /*0xf2524c*/ ResWorldArenaChoice();
    }

    class ReqWorldArenaFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ long rcp;
        /*0x28*/ string statistics;
        /*0x30*/ string heroids;
        /*0x38*/ bool win;
        /*0x40*/ string hpmps;

        /*0xf23cd0*/ ReqWorldArenaFinish(string token, long lcp, long rcp, string statistics, string heroids, bool win, string hpmps);
    }

    class ResWorldArenaFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int myrank;
        /*0x34*/ int myrankmove;
        /*0x38*/ int myscore_before;
        /*0x3c*/ int myscore_after;
        /*0x40*/ int vsscore_before;
        /*0x44*/ int vsscore_after;

        /*0xf2525c*/ ResWorldArenaFinish();
    }

    class ReqWorldArenaTraining : ServerProtocol.IRequestCommon
    {
        /*0xf23e00*/ ReqWorldArenaTraining(string token);
    }

    class ResWorldArenaTraining : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int lv;

        /*0xf25284*/ ResWorldArenaTraining();
    }

    class ReqWorldArenaTakeReward : ServerProtocol.IRequestCommon
    {
        /*0xf23d98*/ ReqWorldArenaTakeReward(string token);
    }

    class ResWorldArenaReward : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ int mytoptier;
        /*0x3c*/ int mytoppoint;
        /*0x40*/ bool newmail;

        /*0xf25274*/ ResWorldArenaReward();
    }

    class ReqAtticBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int gachaid;
        /*0x1c*/ int priceid;

        /*0xf201a8*/ ReqAtticBuy(string token, int gachaid, int priceid);
    }

    class ResAtticBuy : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ System.Collections.Generic.List<int> buyresult;

        /*0xf24910*/ ResAtticBuy();
    }

    class ReqAtticCommit : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int herotableid;

        /*0xf201e8*/ ReqAtticCommit(string token, int herotableid);
    }

    class ResAtticCommit : ServerProtocol.IResponseCommonV2
    {
        /*0xf24918*/ ResAtticCommit();
    }

    class ReqWorldBossEnter : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;

        /*0xf23eb0*/ ReqWorldBossEnter(string token, int bossindex);
    }

    class ResWorldBossEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int prevrank;
        /*0x28*/ PTShare.Define.SWorldBoss data;

        /*0xf2529c*/ ResWorldBossEnter();
    }

    class ReqWorldBossTake : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x1c*/ int index;

        /*0xf23f54*/ ReqWorldBossTake(string token, int bossindex, int index);
    }

    class ResWorldBossTake : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ PTShare.Define.SMainQuest mission;

        /*0xf252ac*/ ResWorldBossTake();
    }

    class ReqWorldBossBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int bossindex;
        /*0x20*/ string heroids;

        /*0xf23e6c*/ ReqWorldBossBegin(string token, int bossindex, string heroids);
    }

    class ResWorldBossBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf25294*/ ResWorldBossBegin();
    }

    class ReqWorldBossFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;
        /*0x38*/ bool win;

        /*0xf23eec*/ ReqWorldBossFinish(string token, long lcp, string statistics, string playdata, string hpmps, bool win);
    }

    class ResWorldBossFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SProperty gain;
        /*0x38*/ PTShare.Define.SWorldBoss data;

        /*0xf252a4*/ ResWorldBossFinish();
    }

    class ReqAbilityFreeRoll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf1facc*/ ReqAbilityFreeRoll(string token, int tableid);
    }

    class ResAbilityFreeRoll : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int freeability;
        /*0x28*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247f0*/ ResAbilityFreeRoll();
    }

    class ReqAbilityCurrencyRoll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;
        /*0x1c*/ int currency;
        /*0x20*/ int lockability;

        /*0xf1fa7c*/ ReqAbilityCurrencyRoll(string token, int tableid, int currency, int lockability);
    }

    class ResAbilityCurrencyRoll : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247e8*/ ResAbilityCurrencyRoll();
    }

    class ReqAbilityItemRoll : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;
        /*0x1c*/ int itemid;

        /*0xf1fb08*/ ReqAbilityItemRoll(string token, int tableid, int itemid);
    }

    class ResAbilityItemRoll : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247f8*/ ResAbilityItemRoll();
    }

    class ReqAbilityConfirm : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int tableid;

        /*0xf1fa40*/ ReqAbilityConfirm(string token, int tableid);
    }

    class ResAbilityConfirm : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SAbilityGroup newability;

        /*0xf247e0*/ ResAbilityConfirm();
    }

    class ReqPveRankingEnter : ServerProtocol.IRequestCommon
    {
        /*0xf23270*/ ReqPveRankingEnter(string token);
    }

    class ResPveRankingEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int myrank;
        /*0x24*/ int currentleague;
        /*0x28*/ int currentpercent;
        /*0x2c*/ int clearcount;
        /*0x30*/ System.DateTime pvefreex;
        /*0x38*/ int pvefreey;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPveStage> stagelist;
        /*0x48*/ int rewardindex;

        /*0xf250ec*/ ResPveRankingEnter();
    }

    class ReqPveRankingRanking : ServerProtocol.IRequestCommon
    {
        /*0xf2330c*/ ReqPveRankingRanking(string token);
    }

    class ResPveRankingRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int rewardindex;
        /*0x24*/ int myrank;
        /*0x28*/ PTShare.Define.SGuildMini myguild;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SRanker> ranks;

        /*0xf250fc*/ ResPveRankingRanking();
    }

    class ReqPveRankingBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int difficulty;
        /*0x1c*/ int challenge;
        /*0x20*/ string heroids;

        /*0xf23220*/ ReqPveRankingBegin(string token, int difficulty, int challenge, string heroids);
    }

    class ResPveRankingBegin : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int randomseed;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

        /*0xf250e4*/ ResPveRankingBegin();
    }

    class ReqPveRankingFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ bool win;
        /*0x28*/ string statistics;
        /*0x30*/ string playdata;
        /*0x38*/ string hpmps;
        /*0x40*/ int playms;

        /*0xf2329c*/ ReqPveRankingFinish(string token, long lcp, bool win, string statistics, string playdata, string hpmps, int playms);
    }

    class ResPveRankingFinish : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int rewardindex;
        /*0x34*/ int challenge;
        /*0x38*/ int getscore;
        /*0x3c*/ int level;
        /*0x40*/ int currentpercent;
        /*0x48*/ PTShare.Define.SProperty gain;
        /*0x50*/ PTShare.Define.SProperty levelupgain;
        /*0x58*/ System.DateTime pvefreex;
        /*0x60*/ int pvefreey;

        /*0xf250f4*/ ResPveRankingFinish();
    }

    class ReqRunGameReward : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int heroid;
        /*0x20*/ string recvs;
        /*0x28*/ bool clear;

        /*0xf2379c*/ ReqRunGameReward(string token, int heroid, string recvs, bool clear);
    }

    class ResRunGameReward : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ PTShare.Define.SCurrency currency;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x38*/ System.Collections.Generic.List<int> prevamounts;
        /*0x40*/ System.Collections.Generic.List<int> rungameamounts;
        /*0x48*/ System.Collections.Generic.List<PTShare.Define.SRunHero> runheroes;

        /*0xf251b4*/ ResRunGameReward();
    }

    class ReqRunGameRanking : ServerProtocol.IRequestCommon
    {
        /*0xf23770*/ ReqRunGameRanking(string token);
    }

    class ResRunGameRanking : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRanker> ranks;
        /*0x28*/ int myrank;
        /*0x2c*/ int myscore;
        /*0x30*/ PTShare.Define.SGuildMini myguild;

        /*0xf251ac*/ ResRunGameRanking();
    }

    class ReqHousingEnter : ServerProtocol.IRequestCommon
    {
        /*0xf22694*/ ReqHousingEnter(string token);
    }

    class ResHousingEnter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ int todaylikerecv;
        /*0x30*/ long acclikerecv;

        /*0xf24f0c*/ ResHousingEnter();
    }

    class ReqHousingFastOpen : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;

        /*0xf226c0*/ ReqHousingFastOpen(string token, int floor);
    }

    class ResHousingFastOpen : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int housingopenfloor;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;
        /*0x40*/ System.DateTime housingfloortime;

        /*0xf24f14*/ ResHousingFastOpen();
    }

    class ReqHousingOpenStart : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;

        /*0xf2293c*/ ReqHousingOpenStart(string token, int floor);
    }

    class ResHousingOpenStart : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.DateTime housingfloortime;

        /*0xf24f64*/ ResHousingOpenStart();
    }

    class ReqHousingOpenEnd : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;

        /*0xf22900*/ ReqHousingOpenEnd(string token, int floor);
    }

    class ResHousingOpenEnd : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int housingopenfloor;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;
        /*0x30*/ System.DateTime housingfloortime;

        /*0xf24f5c*/ ResHousingOpenEnd();
    }

    class ReqHousingUpdate : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x20*/ string setobjs;
        /*0x28*/ string unsetobjids;

        /*0xf22b0c*/ ReqHousingUpdate(string token, int floor, string setobjs, string unsetobjids);
    }

    class ResHousingUpdate : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> housingobjs;
        /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x30*/ string housinggroup;

        /*0xf24f94*/ ResHousingUpdate();
    }

    class ReqHousingUpdateDeck : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string setheroes;
        /*0x20*/ string unsetunitids;

        /*0xf22b5c*/ ReqHousingUpdateDeck(string token, string setheroes, string unsetunitids);
    }

    class ResHousingUpdateDeck : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> housingheroes;

        /*0xf24f9c*/ ResHousingUpdateDeck();
    }

    class ReqHousingVisit : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;
        /*0x20*/ int floor;

        /*0xf22b9c*/ ReqHousingVisit(string token, long toplayerid, int floor);
    }

    class ResHousingVisit : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SVisitor toplayer;
        /*0x28*/ int curfloor;
        /*0x2c*/ int openfloor;
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> housingobjs;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SCoreHero> heroes;
        /*0x40*/ long acclikerecv;

        /*0xf24fa4*/ ResHousingVisit();
    }

    class ReqHousingSendPoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long toplayerid;

        /*0xf22a90*/ ReqHousingSendPoint(string token, long toplayerid);
    }

    class ResHousingSendPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long toplayerid;
        /*0x38*/ int todaylikesend;

        /*0xf24f84*/ ResHousingSendPoint();
    }

    class ReqHousingTakePoint : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long fromplayerid;
        /*0x20*/ long dayid;

        /*0xf22ac8*/ ReqHousingTakePoint(string token, long fromplayerid, int dayid);
    }

    class ResHousingTakePoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ long fromplayerid;
        /*0x38*/ int todaylikerecv;

        /*0xf24f8c*/ ResHousingTakePoint();
    }

    class ReqHousingHistory : ServerProtocol.IRequestCommon
    {
        /*0xf226fc*/ ReqHousingHistory(string token);
    }

    class ResHousingHistory : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SVisitor> visitors;

        /*0xf24f1c*/ ResHousingHistory();
    }

    class ReqHousingAllPoint : ServerProtocol.IRequestCommon
    {
        /*0xf22598*/ ReqHousingAllPoint(string token);
    }

    class ResHousingAllPoint : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SVisitor> visitors;
        /*0x38*/ int todaylikerecv;

        /*0xf24eec*/ ResHousingAllPoint();
    }

    class ReqHousingClearStart : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x1c*/ int wasteid;

        /*0xf22618*/ ReqHousingClearStart(string token, int floor, int wasteid);
    }

    class ResHousingClearStart : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;

        /*0xf24efc*/ ResHousingClearStart();
    }

    class ReqHousingClearEnd : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int floor;
        /*0x1c*/ int wasteid;
        /*0x20*/ bool fast;

        /*0xf225c4*/ ReqHousingClearEnd(string token, int floor, int wasteid, bool fast);
    }

    class ResHousingClearEnd : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> housingwastes;

        /*0xf24ef4*/ ResHousingClearEnd();
    }

    class ReqHousingSaveList : ServerProtocol.IRequestCommon
    {
        /*0xf229c8*/ ReqHousingSaveList(string token);
    }

    class ResHousingSaveList : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingSave> housingsaves;

        /*0xf24f74*/ ResHousingSaveList();
    }

    class ReqHousingSave : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int slot;
        /*0x1c*/ int floor;
        /*0x20*/ string thumb;

        /*0xf22978*/ ReqHousingSave(string token, int slot, int floor, string thumb);
    }

    class ResHousingSave : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHousingSave> housingsaves;

        /*0xf24f6c*/ ResHousingSave();
    }

    class ReqHousingSaveName : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int slot;
        /*0x20*/ string name;

        /*0xf229f4*/ ReqHousingSaveName(string token, int slot, string name);
    }

    class ResHousingSaveName : ServerProtocol.IResponseCommonV2
    {
        /*0xf24f7c*/ ResHousingSaveName();
    }

    class ReqHousingDelete : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int slot;

        /*0xf22658*/ ReqHousingDelete(string token, int slot);
    }

    class ResHousingDelete : ServerProtocol.IResponseCommonV2
    {
        /*0xf24f04*/ ResHousingDelete();
    }

    class ReqHousingObjSell : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string housingobjids;

        /*0xf22884*/ ReqHousingObjSell(string token, string housingobjids);
    }

    class ResHousingObjSell : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x38*/ string housinggroup;

        /*0xf24f4c*/ ResHousingObjSell();
    }

    class ReqHousingObjBuy : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int gachaid;
        /*0x1c*/ int priceid;

        /*0xf22728*/ ReqHousingObjBuy(string token, int gachaid, int priceid);
    }

    class ResHousingObjBuy : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> housingobjs;

        /*0xf24f24*/ ResHousingObjBuy();
    }

    class ReqHousingObjDismiss : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string housingobjids;

        /*0xf227b0*/ ReqHousingObjDismiss(string token, string housingobjids);
    }

    class ResHousingObjDismiss : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x38*/ string housinggroup;

        /*0xf24f34*/ ResHousingObjDismiss();
    }

    class ReqHousingObjPurchase : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int index;
        /*0x20*/ string loc;
        /*0x28*/ int unsetid;

        /*0xf22830*/ ReqHousingObjPurchase(string token, int index, string loc, int unsetid);
    }

    class ResHousingObjPurchase : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SHousingObj housingobj;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x40*/ string housinggroup;

        /*0xf24f44*/ ResHousingObjPurchase();
    }

    class ReqHousingObjUpgrade : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int housingobjid;
        /*0x20*/ string feedobjids;

        /*0xf228bc*/ ReqHousingObjUpgrade(string token, int housingobjid, string feedobjids);
    }

    class ResHousingObjUpgrade : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SHousingObj housingobj;
        /*0x28*/ System.Collections.Generic.List<int> feedidlist;

        /*0xf24f54*/ ResHousingObjUpgrade();
    }

    class ReqHousingObjComplete : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int housingobjid;
        /*0x1c*/ bool fast;

        /*0xf22768*/ ReqHousingObjComplete(string token, int housingobjid, bool fast);
    }

    class ResHousingObjComplete : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ PTShare.Define.SHousingObj housingobj;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingeffects;
        /*0x40*/ string housinggroup;

        /*0xf24f2c*/ ResHousingObjComplete();
    }

    class ReqHousingObjLock : ServerProtocol.IRequestCommon
    {
        /*0x18*/ int housingobjid;
        /*0x1c*/ bool locking;

        /*0xf227e8*/ ReqHousingObjLock(string token, int housingobjid, bool locking);
    }

    class ResHousingObjLock : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int housingobjid;
        /*0x24*/ bool locking;

        /*0xf24f3c*/ ResHousingObjLock();
    }

    class ReqHardCampaignBegin : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string heroids;

        /*0xf2202c*/ ReqHardCampaignBegin(string token, string heroids);
    }

    class ResHardCampaignBegin : ServerProtocol.IResponseCommonV3
    {
        /*0x30*/ int randomseed;
        /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;
        /*0x40*/ string hcampaign;

        /*0xf24e34*/ ResHardCampaignBegin();
    }

    class ReqHardCampaignFinish : ServerProtocol.IRequestCommon
    {
        /*0x18*/ long lcp;
        /*0x20*/ string statistics;
        /*0x28*/ string playdata;
        /*0x30*/ string hpmps;

        /*0xf22090*/ ReqHardCampaignFinish(string token, long lcp, string statistics, string playdata, string hpmps);
    }

    class ResHardCampaignFinish : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ string hcampaign;
        /*0x28*/ PTShare.Define.SProperty gain;
        /*0x30*/ PTShare.Define.SProperty lvupreward;
        /*0x38*/ PTShare.Define.SCurrency currency;
        /*0x40*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
        /*0x48*/ PTShare.Define.SPass newpass;
        /*0x50*/ PTShare.Define.SModeCount usemercenary;

        /*0xf24e44*/ ResHardCampaignFinish();
    }

    class ReqHardCampaignNextChapter : ServerProtocol.IRequestCommon
    {
        /*0xf2211c*/ ReqHardCampaignNextChapter(string token);
    }

    class ResHardCampaignNextChapter : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ int oldhchapter;
        /*0x24*/ int newhchapter;

        /*0xf24e54*/ ResHardCampaignNextChapter();
    }

    class ReqHardCampaignInfo : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;

        /*0xf220e4*/ ReqHardCampaignInfo(string token, string campaign);
    }

    class ResHardCampaignInfo : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SCampaignRecord> infos;

        /*0xf24e4c*/ ResHardCampaignInfo();
    }

    class ReqHardCampaignReplay : ServerProtocol.IRequestCommon
    {
        /*0x18*/ string campaign;
        /*0x20*/ long playerid;

        /*0xf22148*/ ReqHardCampaignReplay(string token, string campaign, long playerid);
    }

    class ResHardCampaignReplay : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ PTShare.Define.SCampaignReplay replay;

        /*0xf24e5c*/ ResHardCampaignReplay();
    }

    class ReqHardCampaignBuddy : ServerProtocol.IRequestCommon
    {
        /*0xf22064*/ ReqHardCampaignBuddy(string token);
    }

    class ResHardCampaignBuddy : ServerProtocol.IResponseCommonV2
    {
        /*0x20*/ System.Collections.Generic.List<PTShare.Define.SPlayer> people;

        /*0xf24e3c*/ ResHardCampaignBuddy();
    }
}

namespace DefineHack
{
    enum LT_ABUSE_TYPE
    {
        INVALID = 0,
        SQLITE = 1,
        UNIT_STAT = 2,
        ASSET = 3,
        AI = 4,
        MEMORY = 5,
        SKILL_COOLTIME = 6,
        END = 7,
    }
}

namespace DataStorage
{
    class Manager
    {
        static /*0xde98a0*/ void Init();
        static /*0xde9950*/ void Reset(bool _with_user_info);
        static /*0xde99fc*/ void Logout();
    }

    class PrefsManager
    {
        static /*0x0*/ string mHashCode;

        static /*0x100e000*/ void Init();
        static /*0x100e07c*/ string GetPathHash();
        static /*0x100e0c8*/ void DeleteAll();
        static /*0x100e0d0*/ void DeleteKey(string key);
        static /*0x100e0d8*/ float GetFloat(string key, float defaultValue);
        static /*0x100e0e0*/ float GetFloat(string key);
        static /*0x100e0e8*/ int GetInt(string key, int defaultValue);
        static /*0x100e0f0*/ int GetInt(string key);
        static /*0x100e0f8*/ string GetString(string key, string defaultValue);
        static /*0x100e100*/ string GetString(string key);
        static /*0x100e108*/ bool HasKey(string key);
        static /*0x100e110*/ void Save();
        static /*0x100e118*/ void SetFloat(string key, float value);
        static /*0x100e120*/ void SetInt(string key, int value);
        static /*0x100e128*/ void SetString(string key, string value);
    }

    class Option_Game
    {
        static string OPTION_LANGUAGE = "option_language";
        static string OPTION_POWER_SAVEING = "option_power_saveing";
        static string OPTION_TOUCH_EFFECT = "option_touch_effect";
        static string OPTION_GACHA_NOTICE = "option_gacha_notice";
        static string OPTION_MOVIE_PLAY = "option_movie_play";
        static string OPTION_WHISPER_NOTICE = "option_whisper_notice";
        static string OPTION_HP_VIEW = "option_hp_view";
        static string OPTION_GUILDBATTLE_HP_VIEW = "option_guildbattle_hp_view";
        static string OPTION_GUILDBATTLE_BUFF_VIEW = "option_guildbattle_buff_view";
        static string OPTION_GUILDBATTLE_DAMAGE_VIEW = "option_guildbattle_damage_view";
        static string OPTION_COMBAT_TEXT_VIEW = "option_combat_text_view";
        static string USER_GUEST_ID = "option_user_guest";
        static string USER_LOGIN_PLATFORM = "option_user_platform";
        static string USER_PRIVACY_AGREE = "user_privacy_agree";
        static string USER_REGION_SERVER = "user_region_server";
        static string USER_CAMERA_PERMISSION = "user_camera_permission";
        static bool Default_POWER_SAVEING = true;
        static bool Default_TOUCH_EFFECT = true;
        static bool Default_GACHA_NOTICE = true;
        static bool Default_MOVIE_PLAY = true;
        static bool Default_WHISPER_NOTICE = true;
        static bool Default_HP_VIEW = true;
        static bool Default_COMBAT_TEXT_VIEW = true;
        static /*0x0*/ string Default_USER_GUESTID;
        static /*0x8*/ ServerRegion Default_USER_REGION_SERVER;

        static /*0x113df78*/ Option_Game();
        static /*0x113cd90*/ void ApplyOption();
        static /*0x113d1d8*/ void Reset(bool _with_language);
        static /*0x113d394*/ void SaveLanguage(LocaleLanguageType _type, bool _dont_apply, bool _force);
        static /*0x113d614*/ void SaveLanguage(PTShare.Define.LanguageCode _code, bool _dont_apply, bool _force);
        static /*0x113b59c*/ LocaleLanguageType LanguageType();
        static /*0x113d6a0*/ PTShare.Define.LanguageCode LanguageCode();
        static /*0x113d700*/ LocaleLanguageType LoadLanguage(bool _force, bool _resource);
        static /*0x113d2b4*/ LocaleLanguageType GetDefaultLanguageType();
        static /*0x113cdfc*/ bool LoadPowerSaving();
        static /*0x113bb40*/ void SavePowerSaving(bool _save);
        static /*0x113cea8*/ bool LoadTouchEffect();
        static /*0x113bfcc*/ void SaveTouchEffect(bool _save);
        static /*0x113cf54*/ bool LoadPlayVideo();
        static /*0x113bd58*/ void SavePlayVideo(bool _save);
        static /*0x113d000*/ bool LoadHpView();
        static /*0x113bc4c*/ void SaveHpView(bool _save);
        static /*0x113aa28*/ void SaveGuildBattleHpView(bool _save);
        static /*0x113a740*/ bool LoadGuildBattleHpView();
        static /*0x113aa90*/ void SaveGuildBattleBuffView(bool _save);
        static /*0x113a7ec*/ bool LoadGuildBattleBuffView();
        static /*0x113aaf8*/ void SaveGuildBattleDamageView(bool _save);
        static /*0x113a894*/ bool LoadGuildBattleDamageView();
        static /*0x113d0ac*/ bool LoadCombatTextView();
        static /*0x113be64*/ void SaveCombatTextView(bool _save);
        static /*0x113d158*/ string LoadUserGuestID();
        static /*0x113d7b4*/ void SaveUserRandomID(int length);
        static /*0x113d4bc*/ void SaveUserGuestID(string _guestID);
        static /*0x113d9bc*/ string LoadLoginPlatform();
        static /*0x113da68*/ void SaveLoginPlatform(PUBSDK.DefinePubSDK.PubLoginType _ePlatform);
        static /*0x113db18*/ void SavePrivacyAgree(bool enable);
        static /*0x113db70*/ bool LoadPrivacyAgree();
        static /*0x113d514*/ void SaveUserRegionServer(ServerRegion region);
        static /*0x113dbc8*/ string LoadUserRegionServer();
        static /*0x113dce4*/ ServerRegion LoadUserRegion();
        static /*0x113de18*/ void SaveUserCameraPermission(bool enable);
        static /*0x113de70*/ bool LoadUserCameraPermission();
        static /*0x113c0d8*/ void SaveGachaNotice(bool _enable);
        static /*0x113dec8*/ bool LoadGachaNotice();
        static /*0x113c1d4*/ void SaveWhisperNotice(bool _enable);
        static /*0x113df20*/ bool LoadWhisperNotice();

        class <>c
        {
            static /*0x0*/ DataStorage.Option_Game.<> <>9;
            static /*0x8*/ System.Func<char, System.Guid> <>9__50_0;

            static /*0x108c0fc*/ <>c();
            /*0x108c15c*/ <>c();
            /*0x108c164*/ System.Guid <SaveUserRandomID>b__50_0(char x);
        }
    }

    class Option_Sound
    {
        static string OPTION_BGM_VOLUME = "option_bgm_volume";
        static string OPTION_EFFECT_VOLUME = "option_effect_volume";
        static string OPTION_VOICE_VOLUME = "option_voice_volume";
        static float Default_BGMVolume = 1;
        static float Default_EffectVolume = 1;
        static float Default_VoiceVolume = 1;

        static /*0x113dfe8*/ void ApplyOption();
        static /*0x113e0e4*/ void Reset();
        static /*0x113e114*/ void SaveBGMVolume(float _volumn);
        static /*0x113e000*/ float LoadBGMVolume();
        static /*0x113e16c*/ void SaveEffectVolume(float _volumn);
        static /*0x113e04c*/ float LoadEffectVolume();
        static /*0x113e1c4*/ void SaveVoiceVolume(float _volumn);
        static /*0x113e098*/ float LoadVoiceVolume();
    }

    class OPTION_ALRAM
    {
        static string OPTION_PUSH_TIMEZONE = "option_push_timezone";
        static string OPTION_PUSH_GENERIC_TOPIC = "option_push_generic";
        static string OPTION_PUSH_GENERIC_NIGHT_TOPIC = "option_push_generic_night";
        static string OPTION_PUSH_ADVERTISE_TOPIC = "option_push_adverse";
        static string OPTION_PUSH_GENERIC_ENABLE = "option_push_generic_enable";
        static string OPTION_PUSH_GENERIC_NIGHT_ENABLE = "option_push_generic_night_enable";
        static string OPTION_PUSH_ADVERTISE_ENABLE = "option_push_adverse_enable";

        static /*0x2b53418*/ void ApplyOption();
        static /*0x2b5341c*/ void Reset();
        static /*0x2b53680*/ string LoadCurrentTimeZone();
        static /*0x2b536e0*/ void SaveCurrentTimeZone();
        static /*0x2b53780*/ System.ValueTuple<bool, string> LoadPushGeneric();
        static /*0x2b5389c*/ System.ValueTuple<bool, string> LoadPushGenericNight();
        static /*0x2b539b8*/ System.ValueTuple<bool, string> LoadPushAdvertise();
        static /*0x2b534a0*/ void SavePushGeneric(bool enable, string topic);
        static /*0x2b53540*/ void SavePushGenericNight(bool enable, string topic);
        static /*0x2b535e0*/ void SavePushAdverse(bool enable, string topic);
    }

    class DATA_PLAYINFO
    {
        static int DEFAULT_REPRESENTATIVE_TROOP_HEROID = 0;
        static string DEFAULT_LOCALIZE_MD5_KEY = "";
        static string Balance_MD5_KEY = "BalanceMD5Key";
        static string Localize_MD5_KEY = "localizeMD5";
        static string USER_TROOP_KEY = "option_data_playerinfo_user_key";
        static string USER_CAMPAIGN_MODE = "USER_CAMPAIGN_MODE";
        static /*0x0*/ System.Collections.Generic.List<int> m_listRepresentative;

        static /*0xf52370*/ DATA_PLAYINFO();
        static /*0xf51e90*/ void Reset();
        static /*0xf51fcc*/ void ApplyOption();
        static /*0xf5218c*/ void SaveLocalizeMD5(string _localizemd5);
        static /*0xf521e4*/ void SaveBalanceMD5(string _balancemd5);
        static /*0xf5223c*/ string LoadBalanceMD5();
        static /*0xf52024*/ System.Collections.Generic.List<int> LoadRepresentative();
        static /*0xf5229c*/ bool LoadCampaignModeIsHard();
        static /*0xf51eec*/ void SaveCampaignModeIsHard(bool _isHard);
    }

    class DATA_TUTORIAL
    {
        static /*0xf52dd0*/ long GetTutorialBitData();
        static /*0xf52e88*/ void SetTutorialBitData(long bitData);
        static /*0xf52f3c*/ void ClearTutorial(int tutorialIndex);
        static /*0xf52fcc*/ int LoadTutorial(int tutorialIndex);
    }

    class DATA_BATTLE
    {
        static string GIZMO = "gizmo";
        static string GIZMO_ON = "gizmo_on";
        static string SHOW_STAT = "show_stat";
        static string SHOW_AVOID = "show_avoid";
        static string SHOW_HAST = "show_hast";
        static string AUTO = "auto";
        static string FAST = "fast";

        static /*0xf4fbb8*/ void ApplyOption();
        static /*0xf4fbbc*/ void SetAuto(bool _bAuto);
        static /*0xf4fcc0*/ bool GetAuto();
        static /*0xf4fdbc*/ void SetFast(int _nFastPhase);
        static /*0xf4fec0*/ int GetFast();
        static /*0xf4ffb4*/ void SetTroop(DataStorage.DATA_BATTLE.TroopModeType _eModeType, Battle.HeroSelectValue[] _arrHeroSelect);
        static /*0xf502c8*/ System.Collections.Generic.List<Battle.HeroSelectValue> GetTroop(DataStorage.DATA_BATTLE.TroopModeType _eModeType);
        static /*0xf505f0*/ string GetTroopToString(DataStorage.DATA_BATTLE.TroopModeType _eModeType);

        enum TroopModeType
        {
            NONE = 0,
            CAMPAIN = 1,
            CAMPAIN_CLEAR = 2,
            DEMO = 3,
            TOWER = 4,
            TOWER_FIRE = 5,
            TOWER_WIND = 6,
            TOWER_NATURE = 7,
            TOWER_WATER = 8,
            ARENA = 9,
            ARENA_HIGH = 10,
            MAZE = 11,
            GUILD_HUNT = 12,
            GUILD_BATTLE = 13,
            DUNGEON = 14,
            WORLDBOSS = 15,
            PVE_RANKING = 16,
            EVENT_BOSS = 17,
            LAST = 18,
        }

        class <>c
        {
            static /*0x0*/ DataStorage.DATA_BATTLE.<> <>9;
            static /*0x8*/ System.Func<Battle.HeroSelectValue, string> <>9__13_0;
            static /*0x10*/ System.Func<Battle.HeroSelectValue, string> <>9__13_1;
            static /*0x18*/ System.Func<string, Battle.HeroSelectValue> <>9__14_0;

            static /*0x10740f4*/ <>c();
            /*0x1074154*/ <>c();
            /*0x107415c*/ string <SetTroop>b__13_0(Battle.HeroSelectValue s);
            /*0x107417c*/ string <SetTroop>b__13_1(Battle.HeroSelectValue s);
            /*0x107419c*/ Battle.HeroSelectValue <GetTroop>b__14_0(string s);
        }
    }

    class DATA_GACHA
    {
        static string CURRENT_PROPERTY = "current_property";

        static /*0xf51760*/ void ApplyOption();
        static /*0xf51840*/ void Reset();
        static /*0xf517f0*/ void SetCurrentProperty(PropertyType _type);
        static /*0xf51850*/ PropertyType GetCurrentProperty();
        static /*0xf51848*/ void ClearCurrentProperty();
    }

    class DATA_CHATTING
    {
        static string READ_IN_CHATCOUNT = "read_in_chatcount{0}";

        static /*0xf50b5c*/ int GetReadInChattingCount(string _uniqueKey);
        static /*0xf50bb8*/ long GetReadInChattingTime(string _uniqueKey);
        static /*0xf50cd8*/ void SetReadInChattingCount(string _uniqueKey, int _count);
        static /*0xf50e1c*/ void AddReadInChattingCount(string _uniqueKey, int _count);
    }

    class DATA_CASHSHOP
    {
        static string PACKAGE_NEW_ITEM_REDDOT_KEY = "CashShopNewItemReddot{0}";
        static string PACKAGE_LIMITED_LAST_START_DATETIME_KEY = "LimitedLastStartDateTime";

        static /*0xf50980*/ bool GetNewItemReddot(DefineCashShop.CashShopTabType tabType);
        static /*0xf50a18*/ string GetLastStartDateTime();
        static /*0xf50a78*/ void SetLastStartDateTime(string startDateTime);
        static /*0xf50ac8*/ void SetNewItemReddot(DefineCashShop.CashShopTabType tabType, bool value);
    }

    class DATA_MAZE
    {
        static string SHOW_HEAL_TILE = "ShowHealTilePopup";
        static string SHOW_REVIVE_TILE = "ShowReviveTilePopup";
        static string MAZE_ZOOM_VALUE = "MazeZoomValue";
        static string MAZE_FAST = "MazeFast";

        static /*0xf51b8c*/ void Reset();
        static /*0xf51bfc*/ bool IsShowHealTile();
        static /*0xf51c54*/ bool IsShowReviveTile();
        static /*0xf51cac*/ float GetZoomValue();
        static /*0xf51cf8*/ bool GetFast();
        static /*0xf51d50*/ void SetZoomValue(float value);
        static /*0xf51da8*/ void SetFast(bool fast);
        static /*0xf51df8*/ void DontShowHealPopup();
        static /*0xf51e44*/ void DontShowRevivePopup();
    }

    class DATA_PLAYRECORD
    {
        static string PLAYRECORD_FIRST_REVIEW = "play_record_first_review";
        static string PLAYRECORD_REVIEW = "play_record_review";
        static string PLAYRECORD_REVIEW_COUNT = "play_record_review_count";
        static string PLAYRECORD_IMAGEBANNER_ENABLE = "play_record_imagebanner_enable";
        static string PLAYRECORD_NOTICE = "play_record_notice_";

        static /*0xf523f8*/ void Reset();
        static /*0xf524d4*/ void SetReadReview(bool enable);
        static /*0xf5252c*/ void SetReadFirstReview(bool enable);
        static /*0xf52584*/ void AddReviewCount(int count);
        static /*0xf525e4*/ int GetReviewCount();
        static /*0xf52470*/ void ClearReviewCount();
        static /*0xf52630*/ bool GetReadReview();
        static /*0xf52688*/ bool GetReadFirstReview();
        static /*0xf5240c*/ void ClearReview();
        static /*0xf526e0*/ void SetIgnoreImageBanner();
        static /*0xf527b0*/ bool GetEnableImageBanner();
        static /*0xf5296c*/ void SetReadNotice(int id, bool read);
        static /*0xf529f0*/ bool HasNotice(int id);
        static /*0xf52a60*/ bool GetReadNotice(int id);
    }

    class DATA_GUILD
    {
        static string GUILD_LAST_LEVEL = "GuildLastLevel";
        static string SHOW_GUILD_LEVELUP_EFFECT = "IsGuildLevelUp";
        static string GUILDWAR_CONTENTHELP = "guildwarcontenthelp";

        static /*0xf5189c*/ void Reset();
        static /*0xf519c0*/ bool IsShowGuildLevelupEffect();
        static /*0xf518c0*/ void SetLevel(int level);
        static /*0xf51a18*/ void UpdateLevel(int level);
        static /*0xf51918*/ void EnableGuildLevelupEffect(bool enable);
        static /*0xf51a90*/ bool IsShowGuildWarContentHelp();
        static /*0xf51970*/ void SetShowGuildWarContentHelp(bool enable);
    }

    class DATA_DUNGEON
    {
        static string defaultKey = "ShowDungeonPopup";
        static string zoomKey = "DungeonZoomValue";
        static string miniMapZoomKey = "DungeonMiniMapZoomValue";
        static string clearKey = "ShowDungeonClearPopup{0}";
        static string openDoorKey = "ShowOpenDoor{0}";
        static string FastKey = "DungeonFast";

        static /*0xf51098*/ void Reset();
        static /*0xf51180*/ float GetZoomValue();
        static /*0xf511cc*/ void SetZoomValue(float value);
        static /*0xf51224*/ float GetMinimapZoomValue();
        static /*0xf51270*/ void SetMiniMapZoomValue(float value);
        static /*0xf512c8*/ bool IsShowTile(DefineDungeon.TILETYPE tileType);
        static /*0xf5139c*/ void DontShowPopup(DefineDungeon.TILETYPE tileType);
        static /*0xf51468*/ bool IsShowClearPopup(int dungeonID);
        static /*0xf51500*/ bool IsFast();
        static /*0xf51558*/ void SetFast(bool isFast);
        static /*0xf515a8*/ void DontShowClearPopup(int dungeonID);
        static /*0xf51638*/ bool IsShowOpenDoor(int dungeonID);
        static /*0xf516d0*/ void DontShowOpenDoor(int dungeonID);
    }

    class DATA_RACE
    {
        static string RACE_LASTED_REPLAY = "race_lasted_replay";

        static /*0xf52b90*/ void Reset();
        static /*0xf52b98*/ void SetLastedReplay(int nSeq);
        static /*0xf52bf0*/ int GetLastedReplay();
    }

    class DATA_RESET_EQUIP
    {
        static string RESET_EQUIP_ID = "ResetEquipID";
        static string RESET_FACTION_ID = "ResetFactionID";

        static /*0xf52c3c*/ void Reset();
        static /*0xf52cac*/ void SetResetEquipData(int id, int factionId);
        static /*0xf52d2c*/ bool IsDontSelectionEquip(int id);
        static /*0xf52d88*/ int GetFaction();
    }

    class DATA_WORLDBOSS
    {
        static string SHOW_BANNER_KEY = "ShowWorldBossBanner{0}";
        static string SHOW_TUTORIAL_KEY = "ShowWorldBossTutorial{0}";

        static /*0xf5305c*/ bool IsShowBanner(int id);
        static /*0xf530f4*/ void DontShowBanner(int id);
        static /*0xf53184*/ bool IsShowTutorial(int id);
        static /*0xf5321c*/ void DontShowTutorial(int id);
    }

    class DATA_HOUSING
    {
        static string ZOOM_VALUE_KEY = "HousingZoomValue";

        static /*0xf51ae8*/ void SetZoomValue(float value);
        static /*0xf51b40*/ float GetZoomValue();
    }

    class DATA_ABILITY
    {
        static string DEFAULT_ABILITY_LOCK_KEY = "Ability_Lock{0}_{1}";
        static string WAIT_CONFIRM_KEY = "AbilityWaitConfirm";
        static string WAIT_CONFIRM_USER_KEY = "AbilityWaitConfirmUserKey";
        static string SELECT_HERO_KEY = "AbilitySelectHeroKey";
        static string CONFIRM_ABILITY_COUNT_KEY = "AbilityConfirmCount";
        static string DEFAFULT_CONFIRM_ABILITY_KEY = "AbilityConfirm{0}";
        static string ALARM_KEY = "AbilityAlarmKey";

        static /*0xf4f3f0*/ void SetLock(int heroId, int slot, bool abilityLock);
        static /*0xf4f4a8*/ bool GetLock(int heroId, int slot);
        static /*0xf4f55c*/ bool IsWaitConfirm();
        static /*0xf4f680*/ int GetSelecHeroTableId();
        static /*0xf4f6cc*/ void SetSelectHeroTableId(int heroTableId);
        static /*0xf4f71c*/ System.Collections.Generic.List<int> GetConfirmAbilityList();
        static /*0xf4f864*/ void SetConfirmData(int heroTableId, System.Collections.Generic.List<int> abilitys);
        static /*0xf4fa68*/ void EndConfirm();
        static /*0xf4fb10*/ void SetAlarm(bool enable);
        static /*0xf4fb60*/ bool IsOnAlarm();
    }

    class DATA_DISMISS
    {
        static string DEFAULT_KEY = "{0}_DissmissSelect";

        static /*0xf50f6c*/ bool IsSelect(int tableId);
        static /*0xf51004*/ void SetSelect(int tableId, bool select);
    }

    class DATA_PVERANK
    {
        static string DIFFICULTY_KEY = "PveDifficulty";

        static /*0xf52af4*/ int GetDifficult();
        static /*0xf52b40*/ void SetDifficult(int difficult);
    }
}

namespace Singleton
{
    class AbleInstance
    {
        static /*0x0*/ bool isAble;

        static /*0x1209ed8*/ AbleInstance();
    }

    namespace Component
    {
        class SingletonComponent : UnityEngine.MonoBehaviour
        {
            static /*0x0*/ bool _isProcessing_Release;
            static /*0x8*/ System.Collections.Generic.List<Singleton.Component.SingletonComponent> singletonList;
            static /*0x10*/ UnityEngine.GameObject DontDestroyParent;
            /*0x18*/ string initInstanceError;

            static /*0x150e61c*/ SingletonComponent();
            static /*0x150dca8*/ void PushSingleton(Singleton.Component.SingletonComponent _obj);
            static /*0x150df34*/ bool InitSingletons();
            static /*0x150e0d8*/ void ReleaseSingletons();
            static /*0x150dde4*/ void InitInstanceDontDestroyParent();
            static /*0x150e4b0*/ void RenewDontDestroyParent();
            /*0x150e5c8*/ SingletonComponent();
            void AwakeSingleton();
            bool Initialize();
            void ReleaseSingleton();
        }

        class SingletonComponent<T> : Singleton.Component.SingletonComponent
        {
            static /*0x0*/ T m_instance;
            /*0x0*/ bool _initialized;

            static bool IsQuitting();
            static T get_Instance();
            SingletonComponent();
            bool get_isInitialized();
            bool Initialize();
            void AwakeSingleton();
            void ReleaseSingleton();
            void AwakeInstance();
            bool InitInstance();
            void ReleaseInstance();
            void Awake();
            void OnApplicationQuit();
        }
    }

    namespace Data
    {
        class SingletonData
        {
            static /*0x0*/ System.Collections.Generic.List<Singleton.Data.SingletonData> singletonList;
            /*0x10*/ string initInstanceError;

            static /*0x150ead4*/ SingletonData();
            static /*0x150e6b8*/ void PushSingleton(Singleton.Data.SingletonData _obj);
            static /*0x150e780*/ bool InitSingletons();
            static /*0x150e8e8*/ void ReleaseSingletons();
            /*0x150ea80*/ SingletonData();
            bool Initialize();
            void ReleaseSingleton();
        }

        class SingletonData<T> : Singleton.Data.SingletonData
        {
            static /*0x0*/ T m_instance;
            /*0x0*/ bool _initialized;

            static SingletonData();
            static T get_Instance();
            SingletonData();
            bool get_IsInitialized();
            bool Initialize();
            void ReleaseSingleton();
            bool InitInstance();
            void ReleaseInstance();
        }
    }
}

namespace PTShare
{
    namespace Define
    {
        class Ver
        {
            static /*0x0*/ string Tag;
            static /*0x8*/ int PROTOCOL_VERSION;
            static /*0x10*/ string ZipPw;

            static /*0x10d2860*/ Ver();
        }

        enum ErrorCode
        {
            HTTPERROR = -404,
            FAILED = -1,
            SUCCESS = 0,
            HTTP_PARAMETER_FORMAT = 1,
            WRONG_GOOGLE_TOKEN = 2,
            WRONG_GOOGLE_LOGIN_RESPONSE_DATA = 3,
            WRONG_GOOGLE_APPID = 4,
            FACEBOOK1 = 5,
            FACEBOOK2 = 6,
            ALREADY_PLAYER_EXIST = 7,
            ALREADY_GOOGLEID_EXIST = 8,
            ALREADY_FACEBOOKID_EXIST = 9,
            NOT_ADMIN_ACCOUNT = 10,
            NO_HERO = 11,
            DUPLICATE_HERO = 12,
            WRONG_ID = 13,
            MAX_MY_FRIEND_SLOT = 14,
            MAX_TARGET_FRIEND_SLOT = 15,
            ALREADY_REQUESTED = 16,
            ALREADY_FRIEND = 17,
            WRONG_GAMETOKEN = 18,
            CANNOT_ALLOW_CONNECT = 19,
            DUPLICATE_CONNECT = 20,
            CHATCORE_FIRST = 21,
            MONGO_DB_ERROR = 22,
            EXPIRED_TOKEN = 23,
            NO_PLAYER = 24,
            NO_SEND_SHIPPOINT = 25,
            ALREADY_TAKE_SHIPPOINT = 26,
            ALREADY_SEND_SHIPPOINT = 27,
            ALREADY_HAVE_GUILD = 28,
            NAME_DUPLICATE = 29,
            MAX_GUILD_REQUEST_SLOT = 30,
            DONT_HAVE_GUILD = 31,
            NOT_ENOUGH_GOLD = 32,
            NOT_ENOUGH_STAR = 33,
            NOT_ENOUGH_HEROEXP = 34,
            NO_MATCH_KEY = 35,
            EXCEED_CHAT_MAX_LENGTH = 36,
            EXCEED_NICKNAME_MAX_LENGTH = 37,
            REDIS_DB_ERROR = 38,
            FAIL_LEAVE_GROUP = 39,
            FAIL_ENTER_GROUP = 40,
            WRONG_GOOGLE_PURCHASE_TOKEN = 41,
            TARGET_NO_PLAYER = 42,
            NOT_FRIEND = 43,
            ALREADY_IN_GUILD = 44,
            NOT_MY_HERO = 45,
            WRONG_EQUIPID = 46,
            WRONG_HEROID = 47,
            NOT_MY_EQUIP = 48,
            ALREADY_EQUIPED = 49,
            ALREADY_OTHER_HERO_EQUIPED = 50,
            ALREADY_UNEQUIPED = 51,
            MAX_STAR = 52,
            MAX_GRADE = 53,
            WRONG_ITEM_TABLEID = 54,
            NOT_ENOUGH_ITEM_COUNT = 55,
            NO_ACCOUNT = 56,
            MY_ACCOUNT_ID = 57,
            ALREADY_REGISTERED_COUPON = 58,
            WRONG_BATTLETYPE = 59,
            TOO_LONGTIME = 60,
            NO_DEFENSE_DECK = 61,
            ERROR_APPLE_VERIFY = 62,
            WRONG_MAILID = 63,
            ALREADY_RECVED = 64,
            NOT_RECVED_YET = 65,
            NO_ATTACHED = 66,
            ALREADY_DELETED = 67,
            NOT_ENOUGH_FRIENDSHIP = 68,
            NOT_ENOUGH_CRYSTAL = 69,
            NO_AUTH = 70,
            WRONG_GUILDID = 71,
            GUILD_CLOSED = 72,
            NOT_ENOUGH_LEVEL = 73,
            ALREADY_TAKED = 74,
            NOT_ENOUGH_COUNT = 75,
            ATTACHED_MAIL = 76,
            ALREADY_READ = 77,
            ALREADY_EXCHANGED = 78,
            NOT_ENOUGH_QUESTPOINT = 79,
            EXCEED_NICKNAME_MIN_LENGTH = 80,
            WRONG_SERVER_INDEX = 81,
            SAME_SERVER_INDEX = 82,
            NOT_ALLOW_NICKNAME = 83,
            NOT_ENOUGH_DISMISSCOIN = 84,
            MAX_HERO_SLOT = 85,
            NOT_ENOUGH_HERO_SLOT = 86,
            MAX_LEVEL = 87,
            WRONG_FEED_QUANTITY = 88,
            WRONG_FEED_FACTION = 89,
            DIFFERENT_FEED_TABLEID = 90,
            WRONG_FEED_GRADE = 91,
            UNUSABLE_ITEM = 92,
            NOT_ENOUGH_HEROCARD = 93,
            WRONG_FACTION = 94,
            WRONG_SLOTID = 95,
            NO_ARCHIVE_DATA = 96,
            WRONG_USE_COUNT = 97,
            WRONG_NUMBER = 98,
            WRONG_COUNT = 99,
            SERVER_EXCEPTION = 100,
            WRONG_CHOICE_COUNT = 101,
            WRONG_CHOICE_ID = 102,
            WRONG_HERO_TABLEID = 103,
            EXCESS_HERO_ID = 104,
            TOO_LOW_LEVEL = 105,
            NO_COUNT = 106,
            NO_NEXT_YET = 107,
            MAX_MY_REQUEST_FRIEND_SLOT = 108,
            MAX_HIS_REQUEST_FRIEND_SLOT = 109,
            NO_RESET_EQUIP = 110,
            NO_PROMOTE_EQUIP_A = 111,
            WRONG_CLASS_TYPE = 112,
            NO_REINFORCE_EQUIP = 113,
            NO_PROMOTE_EQUIP_B = 114,
            NO_PROMOTE_EQUIP_C = 115,
            MAX_TODAY_RECV_COUNT = 116,
            MAX_TODAY_SEND_COUNT = 117,
            MAX_TODAY_RECV_SEND_COUNT = 118,
            BLACKLIST = 119,
            ALREADY_LEND = 120,
            NOT_MY_LEND = 121,
            MAX_RENT_COUNT = 122,
            NO_RENT_REQUESTED = 123,
            NOT_RECENT_FRIEND = 124,
            HTTP_PARAMETER_FORMAT_B = 125,
            HTTP_PARAMETER_FORMAT_C = 126,
            ONLY_ALLOW_ONE_HERO_RENT = 127,
            FAIL_RENT_AUTH = 128,
            ALREADY_USED_MERCENARY = 129,
            ALREADY_BLACKLIST = 130,
            WRONG_FLOOR = 131,
            ALREADY_CLEARED = 132,
            NOT_CLEARED_YET = 133,
            NO_BEGIN = 134,
            WRONG_STATISTICS = 135,
            NO_BOSS_CAMPAIGN = 136,
            INCOMPLETE_QUEST = 137,
            NO_MYSELF = 138,
            DIFFERENT_CHAPTER = 139,
            UNLOCK_CONTENT = 140,
            DIFFERENT_TAG = 141,
            NOT_COMPLETED_YET = 142,
            NO_MORE_QUEST = 143,
            WRONG_PACKAGEID = 144,
            NO_PURCHASE_TIME = 145,
            NO_PURCHASE_OVER_COUNT = 146,
            ALREADY_SUBSCRIPTION = 147,
            NOBODY = 148,
            ERROR_GOOGLE_VERIFY = 149,
            SEASON_REST_TIME = 150,
            NO_CHOICE = 151,
            ALREADY_CONFIRMED = 152,
            WRONG_MAZE_TILE = 153,
            NO_BATTLE_DEADHERO = 154,
            NO_HEAL_TARGET = 155,
            NO_ENEMY_DATA = 156,
            SLOT_CLEANING = 157,
            SYNCHRONIZING_LEVEL = 158,
            NOT_PUSHED_HERO = 159,
            NOT_ENOUGH_MAZECOIN = 160,
            LOW_RESONANCE_LEVEL = 161,
            NO_ENHANCE_ITEM = 162,
            RELOGIN = 163,
            NO_NORMAL_TILE = 164,
            ALREADY_LAST = 165,
            BALANCE_TABLE_ERROR = 166,
            LOCKING_HERO = 167,
            WRONG_BORDER_ID = 168,
            WRONG_BACKGROUND_ID = 169,
            NO_BLACKLIST = 170,
            SYSTEM_ERROR = 171,
            NO_SSS_FILE = 172,
            NO_PASS_PREMIUM = 173,
            NOT_ALLOW_RECV = 174,
            NOT_EXPIRED_YET = 175,
            EXPIRED_EVENT = 176,
            WRONG_IP = 177,
            MAX_RESONANCE_SLOT = 178,
            ALREADY_USED_UID = 179,
            ALREADY_USED = 180,
            WRONG_PURCHSAGE_STATE = 181,
            WRONG_CONSUMPTION_STATE = 182,
            NOT_YET_OPEN = 183,
            CLOSED = 184,
            NO_SERIAL = 185,
            REMOVED_ACCOUNT = 186,
            NO_QUITTING = 187,
            NOT_START_YET = 188,
            NO_MORE_STAGE = 189,
            EXPIRED_GOODS = 190,
            ALREADY_PREMIUM = 191,
            NO_GROWTH_PURCHASE = 192,
            LOW_CLIENT_VERSION = 193,
            WRONG_LANGUAGE_CODE = 194,
            TARGET_HAS_NO_ARENAPOINT = 195,
            ALREADY_USED_NICKNAME = 196,
            MAINTENANCE = 197,
            WRONG_HPMP = 198,
            DIFF_REPLAY_VERSION = 199,
            NEED_FIREBASE_JSON = 200,
            NEED_PURCHASE_JSON = 201,
            HACK_DETECTED = 202,
            NOT_ENOUGH_GUILDCOIN = 203,
            NOT_ENOUGH_ARENACOIN = 204,
            NOT_ENOUGH_WORLDCOIN = 205,
            NO_TIER_YET = 206,
            NO_WORLDARENA_DATA = 207,
            MAX_SUPPORTER = 208,
            NO_NEED_SUPPORTER = 209,
            ALREADY_OTHER_SUPPORTING = 210,
            NOT_ENOUGH_FACTION = 211,
            NOT_ENOUGH_GRADE = 212,
            NOT_ENOUGH_SUPPORTER = 213,
            NO_DISPATCH = 214,
            NO_RECEIVE_DATA = 215,
            NO_REVERT_GRADE = 216,
            FULL_GUILD_MEMBER = 217,
            SOMEONE_EXIST = 218,
            OUT_OF_LOCATION = 219,
            NO_CHANGED = 220,
            FULL_GUILD_SUBMASTER = 221,
            FULL_GUILD_GENERAL = 222,
            NO_JOIN_REQUEST = 223,
            WRONG_CREATE_VALUE = 224,
            WRONG_UPDATE_VALUE = 225,
            LIMIT_GUILD_RESIGNUP = 226,
            NO_WASTE = 227,
            NOT_MY_GROUPID = 228,
            INVALID_GROUPID = 229,
            NO_MORE_HUNTING_COUNT = 230,
            NOT_OPENED = 231,
            ALREADY_OPENED = 232,
            NOT_ENOUGH_CONTRIBUTION = 233,
            NO_DAMAGE_RECORD = 234,
            YET_SUPPORTING = 235,
            NO_MEMBER = 236,
            SOMEONE_CAMP_EXISTS = 237,
            NOT_SET_AUTH_YET = 238,
            NOT_VOTE_TIME = 239,
            ALREADY_VOTED = 240,
            NO_VOTE = 241,
            NO_REWARD = 242,
            EXCEED_GUILDNAME_MIN_LENGTH = 243,
            EXCEED_GUILDNAME_MAX_LENGTH = 244,
            COMPLETE_ALL_TODAY = 245,
            HIGH_CLIENT_VERSION = 246,
            NO_TILE = 247,
            NO_PLAYING_DATA = 248,
            ALREADY_HAVE = 249,
            NOT_ENOUGH_HAMMER = 250,
            NOT_ENOUGH_DUNGEONCOIN = 251,
            JAIL_HERO = 252,
            NEED_TWO_OVER_HEROES = 253,
            NO_LOWEST_HERO = 254,
            WRONG_MOVE = 255,
            NOT_ENOUGH_DOORKEY = 256,
            MUST_FIGHT = 257,
            WRONG_DAY_OF_WEEK = 258,
            EXCEED_DAILY_CHALLENGE_TOWER = 259,
            NOT_ENOUGH_CURRENY = 260,
            NOT_ENOUGH_GUILDPOINT = 261,
            NO_REVENGE = 262,
            ALREADY_SAME_HERO = 263,
            NOT_ENOUGH_GUILDWAR_TICKET = 264,
            DEFAULT_TACTIC = 265,
            DONT_HAVE_TACTIC = 266,
            INVALID_FORMAT = 267,
            DATA_CHANGED = 268,
            EXCEED_ENTRY_COUNT = 269,
            TARGET_HAS_NO_GUILDWARPOINT = 270,
            GUILDWAR_BATTLE_TERM = 271,
            NO_DUAL_CAPTAIN = 272,
            NOT_PURCHASE_GUILDMEMBER = 273,
            ALREADY_ATTACK_FORM = 274,
            ALREADY_DEFENSE_FORM = 275,
            ALREADY_UNLOCKED = 276,
            MAX_STEP = 277,
            NOT_ENOUGH_STEP = 278,
            EXPIRED_BORDER = 279,
            EXPIRED_BACKGROUND = 280,
            EXPIRED_GUILDBORDER = 281,
            TIME_ERROR = 282,
            ON_BROKEN_TILE = 283,
            ALREADY_PLACED_HERO = 284,
            NO_PLACE_DEADHERO = 285,
            SEASON_CHANGED = 286,
            NOT_ENOUGH_PVECOIN1 = 287,
            NOT_ENOUGH_PVECOIN2 = 288,
            GRADE_OVERLAP = 289,
            NO_HOUSE_YET = 290,
            NOT_USED_COUPON = 291,
            NOT_ALLOWED = 292,
            HIDE_HERO_MAX = 293,
            NO_PURCHASE_APPLE = 294,
        }

        class GTrigger
        {
            static /*0x0*/ string ARENA_BATTLE;
            static /*0x8*/ string ARENA_BATTLE_WIN;
            static /*0x10*/ string ASCEND;
            static /*0x18*/ string EQUIPMENT_UPGRADE;
            static /*0x20*/ string FRIENDSHIP;
            static /*0x28*/ string GACHA;
            static /*0x30*/ string MAZE_CLEAR;
            static /*0x38*/ string SHOP_BUY;
            static /*0x40*/ string TAKE_IDLE;
            static /*0x48*/ string TRY;
            static /*0x50*/ string CAMPAIGN_CLEAR;
            static /*0x58*/ string HARDCAMPAIGN_CLEAR;
            static /*0x60*/ string TOWER_CLEAR;
            static /*0x68*/ string TOWER_SPIRIT_CLEAR;
            static /*0x70*/ string TOWER_FIRE_CLEAR;
            static /*0x78*/ string TOWER_WIND_CLEAR;
            static /*0x80*/ string TOWER_NATURAL_CLEAR;
            static /*0x88*/ string TOWER_WATER_CLEAR;
            static /*0x90*/ string USER_LEVEL;
            static /*0x98*/ string CHAPTER_CLEAR;
            static /*0xa0*/ string HARDCHAPTER_CLEAR;
            static /*0xa8*/ string PVERANKING_CLEAR;
            static /*0xb0*/ string DISPATCH;
            static /*0xb8*/ string HERO_LEVELUP;
            static /*0xc0*/ string VOTE_RACE;
            static /*0xc8*/ string CLEAN_GUILDROOM;
            static /*0xd0*/ string PURCHASE_STORE;
            static /*0xd8*/ string PURCHASE_GOODS;
            static /*0xe0*/ string FIRST_PURCHASE_STORE;
            static /*0xe8*/ string FIRST_PURCHASE_GOODS;
            static /*0xf0*/ string GUILDBOSS_BATTLE_FINISH;
            static /*0xf8*/ string SPEND;
            static /*0x100*/ string FURNITURE_BUY;
            static /*0x108*/ string FURNITURE_GACHA;
            static /*0x110*/ string FURNITURE_GET;
            static /*0x118*/ string LOGIN;
            static /*0x120*/ string HOUSING;
            static /*0x128*/ string TAKE;

            static /*0x10b1f20*/ GTrigger();
        }

        class AppPushTopic
        {
            static /*0x0*/ string ALWAYS;
            static /*0x8*/ string NODAWN;
            static /*0x10*/ string ADVERTISE;

            static /*0xee0384*/ AppPushTopic();
        }

        class ChatId
        {
            static string Area = "Area";
            static string Lang = "Lang";
            static string Guild = "Guild";
            static string Talk = "Talk";
        }

        class SizeInfo
        {
            static /*0x0*/ int MAX_UTF8_ALLCHAR_LENGTH;
            static /*0x4*/ int MAX_UTF8_ENGLISH_LENGTH;
            static /*0x8*/ int MAX_GROUPID_HAVE_COUNT;
            static /*0xc*/ int MAX_GROUPID_LETTER_LENGTH;
            static /*0x10*/ int MAX_GROUPID_BYTE_LENGTH;
            static /*0x14*/ int MAX_TOKEN_LETTER_LENGTH;
            static /*0x18*/ int MAX_TOKEN_BYTE_LENGTH;
            static /*0x1c*/ int MAX_CHAT_LETTER_LENGTH;
            static /*0x20*/ int MAX_CHAT_BYTE_LENGTH;
            static /*0x24*/ int MIN_NICKNAME_LETTER_LENGTH;
            static /*0x28*/ int MAX_NICKNAME_LETTER_LENGTH;
            static /*0x2c*/ int MIN_GUILDNAME_LETTER_LENGTH;
            static /*0x30*/ int MAX_GUILDNAME_LETTER_LENGTH;
            static /*0x34*/ int MAX_NICKNAME_BYTE_LENGTH;
            static /*0x38*/ int DATETIME_LENGTH;
            static /*0x3c*/ int MAX_PAST_CHAT_COUNT;
            static /*0x40*/ int MAX_PAST_ROOM_COUNT;
            static /*0x44*/ int RECV_BUFFER_BYTE_LENGTH;
            static /*0x48*/ int MIN_RECV_BUFFER_BYTE_LENGTH;
            static /*0x4c*/ int MESSAGE_STRUCT_LENGTH;

            static /*0x150eb5c*/ SizeInfo();
        }

        class GameValue
        {
            static /*0x0*/ int MAX_HP_RATIO;
            static /*0x4*/ int MAX_MP_RATIO;
            static /*0x8*/ float CONVERT_VALUE_HP;
            static /*0xc*/ float CONVERT_VALUE_MP;
            static /*0x10*/ int SCORE_HACK;
            static /*0x14*/ int SCORE_DOUBT;
            static /*0x18*/ int SCORE_PASS;
            static /*0x1c*/ int EXEMPTED_COUNT;

            static /*0xecff2c*/ GameValue();
        }

        class SSSFile
        {
            static /*0x0*/ sbyte[] Header;
            static /*0x8*/ sbyte[] HeaderV2;
            static /*0x10*/ sbyte[] HeaderV3;

            static /*0x129f2e0*/ SSSFile();
        }

        class Data
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<string, int> HeroGradeMap;
            static /*0x8*/ System.Collections.Generic.Dictionary<int, int> BountyStarGradeMap;
            static /*0x10*/ System.Collections.Generic.Dictionary<string, int> EquipGradeMap;
            static /*0x18*/ System.Collections.Generic.Dictionary<int, string> PveGradeMap;
            static /*0x20*/ System.Collections.Generic.Dictionary<string, int> FactionMap;
            static /*0x28*/ System.Collections.Generic.Dictionary<string, string> CompanyMap;
            static /*0x30*/ System.Collections.Generic.Dictionary<string, int> HousingGradeMap;
            static /*0x38*/ System.Collections.Generic.Dictionary<string, int> AbilityGradeMap;
            static /*0x40*/ System.Collections.Generic.Dictionary<int, string> HeroGradeRevMap;
            static /*0x48*/ System.Collections.Generic.Dictionary<int, string> EquipGradeRevMap;
            static /*0x50*/ System.Collections.Generic.Dictionary<int, string> FactionRevMap;
            static /*0x58*/ System.Collections.Generic.Dictionary<int, string> HousingGradeRevMap;
            static /*0x60*/ System.Collections.Generic.Dictionary<int, string> AbilityGradeRevMap;

            static /*0xf5ccfc*/ Data();

            class <>c
            {
                static /*0x0*/ PTShare.Define.Data.<> <>9;

                static /*0x10762fc*/ <>c();
                /*0x107635c*/ <>c();
                /*0x1076364*/ int <.cctor>b__13_0(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x10763a4*/ string <.cctor>b__13_1(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x10763e4*/ int <.cctor>b__13_2(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x1076424*/ string <.cctor>b__13_3(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x1076464*/ int <.cctor>b__13_4(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x10764a4*/ string <.cctor>b__13_5(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x10764e4*/ int <.cctor>b__13_6(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x1076524*/ string <.cctor>b__13_7(System.Collections.Generic.KeyValuePair<string, int> v);
                /*0x1076564*/ int <.cctor>b__13_8(System.Collections.Generic.KeyValuePair<string, int> k);
                /*0x10765a4*/ string <.cctor>b__13_9(System.Collections.Generic.KeyValuePair<string, int> v);
            }
        }

        enum Wealth
        {
            CURRENCY = 0,
            ITEM = 1,
            HERO = 2,
            EQUIP = 3,
            USEREXP = 4,
            VIPPOINT = 5,
            RESETPOINT = 6,
            SKIN = 7,
            ARTIFACT = 8,
            DUNGEONITEM = 9,
            FRAME = 10,
            FURNITURE = 11,
        }

        enum Currency
        {
            GOLD = 0,
            STAR = 1,
            FSHIP = 2,
            CRYSTAL = 3,
            HERO_EXP = 4,
            DISMISS = 5,
            HEROCARD = 6,
            MAZECOIN = 7,
            GUILDCOIN = 8,
            ARENACOIN = 9,
            WORLDCOIN = 10,
            DUNGEONCOIN = 11,
            PVECOIN1 = 12,
            PVECOIN2 = 13,
        }

        enum ResetPointType
        {
            DAILYQUESTPOINT = 0,
            WEEKLYQUESTPOINT = 1,
            ROYALEXP = 2,
            BATTLEEXP = 3,
        }

        enum EventCheckType
        {
            NULL = -1,
            DAY = 0,
            FIXDAY = 1,
            CONTINUE = 2,
        }

        enum BillingType
        {
            NONE = 0,
            GOOGLE = 1,
            APPLE = 2,
            ONESTORE = 3,
        }

        enum Gender
        {
            NONE = 0,
            MALE = 1,
            FEMALE = 2,
        }

        enum Relation
        {
            NO_RELATION = 0,
            FRIEND = 1,
            GUILD = 2,
            FRIEND_GUILD = 3,
        }

        enum QuestType
        {
            DAILY = 0,
            WEEKLY = 1,
            MAIN = 2,
        }

        enum ClassType
        {
            KNIGHT = 0,
            RANGER = 1,
            WARRIOR = 2,
            MAGE = 3,
            SUPPORTER = 4,
        }

        enum FriendShipRecvState
        {
            NO_RECV = 0,
            RECVED = 1,
            TAKED = 2,
        }

        enum FriendShipSendState
        {
            NO_SEND = 0,
            SENDED = 1,
        }

        enum RankingBoardRewardState
        {
            INCOMPLETE = 0,
            NO_RECV = 1,
            RECVED = 2,
        }

        enum GuildAcceptType
        {
            IMMEDIATELY = 0,
            CERTIFICATION = 1,
            IMMPOSSIBLE = 2,
        }

        enum EquipParts
        {
            NONE = -1,
            HELMET = 0,
            ARMOR = 1,
            WEAPON = 2,
            BOOTS = 3,
            SIGNATURE = 4,
            ARTIFACT = 5,
            MAX = 6,
        }

        enum EquipmentType
        {
            NONE = -1,
            INT = 0,
            DEX = 1,
            STR = 2,
        }

        enum Faction
        {
            NONE = 0,
            FIRE = 1,
            WIND = 2,
            NATURAL = 3,
            WATER = 4,
            LIGHT = 5,
            DARK = 6,
        }

        enum BattleType
        {
            CAMPAIGN = 0,
            TOWER = 1,
            MAZE = 2,
            ARENA = 3,
            GUILDBOSS = 4,
            DUNGEON = 5,
            WORLDBOSS = 6,
            PVERANKING = 7,
            EVENTBOSS = 8,
            HARDCAMPAIGN = 9,
        }

        enum ServerCheatKey
        {
            UNKNOWN = 0,
            HELP = 1,
            ALLHERO = 2,
            BOUNTYLV = 3,
            BOUNTYTEAMRESET = 4,
            CURRENCY = 5,
            FORMAT = 6,
            FUTURE = 7,
            GACHA = 8,
            GACHACOUNT = 9,
            GAIN = 10,
            GENEQUIP = 11,
            GENHERO = 12,
            GENITEM = 13,
            GENMAIL = 14,
            GETEQUIP = 15,
            CALLEQUIP = 16,
            GETITEM = 17,
            GETUNIT = 18,
            GMOFF = 19,
            HEROSLOT = 20,
            IDLE = 21,
            JUMP = 22,
            JUMPT = 23,
            JUMPFIRE = 24,
            JUMPWIND = 25,
            JUMPNATURAL = 26,
            JUMPWATER = 27,
            MOVELAST = 28,
            NEWMAZE = 29,
            NEXTHEAL = 30,
            NEXTREVIVAL = 31,
            FASTMAZE = 32,
            NOW = 33,
            VERIFY = 34,
            VERIFY_REPLAY = 35,
            GOLD = 36,
            STAR = 37,
            FSHIP = 38,
            CRYSTAL = 39,
            HERO_EXP = 40,
            DISMISS = 41,
            HEROCARD = 42,
            MAZECOIN = 43,
            GUILDCOIN = 44,
            ARENACOIN = 45,
            WORLDCOIN = 46,
            DUNGEONCOIN = 47,
            PVECOIN1 = 48,
            PVECOIN2 = 49,
            EXPORT = 50,
            IMPORT = 51,
            PUSH = 52,
            QUIT = 53,
            QUITCANCEL = 54,
            TUTORIALSKIP = 55,
            PASSEXP = 56,
            JOINWORLDARENA = 57,
            GUILDPOINT = 58,
            PASSPURCHASE = 59,
            TRAINING = 60,
            ARTIFACT = 61,
            SHOWWELLCOME = 62,
            RLEVEL = 63,
            DARAK = 64,
            UNEQUIPSIGNATURE = 65,
            USERLEVEL = 66,
            NEWRUNGAME = 67,
            GENFURNITURE = 68,
            NEWHOUSING = 69,
            SETHERO = 70,
            SETEQUIP = 71,
            NEWRELATION = 72,
            NEWABILITY = 73,
            SETABILITY = 74,
            CPLV = 75,
            SETWORLDARENAPOINT = 76,
            JUMPH = 77,
        }

        enum ChannelType
        {
            GROUP = 0,
            WHISPER = 1,
        }

        enum MainQuestStatus
        {
            NOT_COMPLETE = 0,
            COMPLETED = 1,
            INDISTINGUISHABLE = 2,
            NO_MORE = 3,
        }

        enum GuildWarAuth
        {
            NONE = 0,
            DEFEND = 1,
            ATTACK = 2,
        }

        enum LanguageCode
        {
            KR = 0,
            EN = 1,
            JP = 2,
            CNS = 3,
            CNT = 4,
            FR = 5,
            DE = 6,
            RU = 7,
            TH = 8,
            VI = 9,
            AR = 10,
            ES = 11,
            IN = 12,
            IT = 13,
            BR = 14,
        }

        enum REWARD_STATE
        {
            NONE = -1,
            FREE = 0,
            CHARGE = 1,
            ALL = 2,
        }

        enum ArenaSubType
        {
            NONE = 0,
            GENERAL = 1,
            WORLD = 2,
        }

        enum BountyType
        {
            SOLO = 0,
            TEAM = 1,
        }

        enum CommunityType
        {
            None = 0,
            Facebook = 1,
            Discord = 2,
            NaverCafe = 3,
            Twitter = 4,
            Lobi = 5,
            End = 6,
        }

        enum GuildWarPosition
        {
            None = 0,
            General = 1,
            AttackCaptain = 2,
            Attacker = 3,
            DefendCaptain = 4,
            Defender = 5,
        }

        enum LegionStatus
        {
            ATTACK = 0,
            DEFENSE = 1,
            NORMAL = 2,
            USING = 3,
        }

        enum MazeEnemies
        {
            NONE = 0,
            SEMI = 1,
            BOSS = 2,
        }

        enum HousingObjState
        {
            NONE = 0,
            LEVEL_UP = 1,
        }

        enum HousingGachaPriceType
        {
            GachaCost_x1 = 0,
            GachaCost_x10 = 1,
            Gachaitem_x1 = 2,
            Gachaitem_x10 = 3,
        }

        enum ContentEffectType
        {
            None = 0,
            Time = 1,
            Gold = 2,
            Jewel = 3,
            Hero_exp = 4,
            Hero_inven = 5,
            Crystal = 6,
            Ruby = 7,
            Equipment = 8,
            Tombstone = 9,
            Element_Growth = 10,
            Element_Evolution = 11,
            Element_Element = 12,
            FurnitureLevelUpSpeed = 13,
            WasteSpeed = 14,
            Furniture_Upgrade = 15,
            Furniture_Sell = 16,
            Maze_gold = 17,
            Maze_heroexp = 18,
            Bounty_Reward = 19,
            Guildboss_gold = 20,
            CrystalRoom = 21,
            Arena_Reward_Jewel = 22,
            Arena_Reward_Gold = 23,
            WorldArena_Reward_Jewel = 24,
            WorldArena_Reward_Gold = 25,
            WorldArena_Reward_trainning = 26,
            Bounty_Solo_gold = 27,
            Bounty_Solo_jewel = 28,
            Bounty_Solo_tiara = 29,
            Bounty_team_gold = 30,
            Bounty_team_jewel = 31,
            Bounty_team_tiara = 32,
        }

        class ItemId
        {
            static int Jewel = 1;
            static int PrincessTiara = 203;
            static int AbilityGoldCube = 12;
            static int AbilityRubyCube = 13;
            static int AbilityCrystalCube = 14;
            static int AbilityDiamondCube = 15;
        }

        enum LockAbilityType
        {
            NONE = 1,
            FIRST = 2,
            SECOND = 4,
            THIRD = 8,
        }

        enum AbilityOptionType
        {
            hp_up = 1,
            atk_up = 2,
            def_up = 3,
            dodg_up = 4,
            acc_up = 5,
            rghp_up = 6,
            shp_up = 7,
            hp_up_per = 8,
            atk_up_per = 9,
            def_up_per = 10,
            level_up_hp_up = 11,
            level_up_atk_up = 12,
            level_up_def_up = 13,
            debuff_atk_dmg_up = 14,
            buff_time_up = 15,
            mp_heal_up = 16,
            faction_dmg_penalty_down = 17,
            bossmonster_dmg = 18,
            skill_cooltime_down = 19,
            sig_level_atk_up_per = 20,
            sig_level_def_up_per = 21,
            sig_level_hp_up_per = 22,
            crir_up = 23,
            cridmg_up = 24,
            cridmg_down = 25,
            ccr_up = 26,
            hp_restore_up_per = 27,
            mp_restore_up_per = 28,
        }

        enum AbilityGrade
        {
            A = 1,
            S = 2,
            SS = 3,
            SSS = 4,
        }

        class SCurrency
        {
            /*0x10*/ long gold;
            /*0x18*/ long star;
            /*0x20*/ long heroexp;
            /*0x28*/ long fship;
            /*0x30*/ long crystal;
            /*0x38*/ long dismiss;
            /*0x40*/ long herocard;
            /*0x48*/ long mazecoin;
            /*0x50*/ long guildcoin;
            /*0x58*/ long arenacoin;
            /*0x60*/ long worldcoin;
            /*0x68*/ long dungeoncoin;
            /*0x70*/ long pvecoin1;
            /*0x78*/ long pvecoin2;

            static /*0x129730c*/ PTShare.Define.SCurrency op_Addition(PTShare.Define.SCurrency p1, PTShare.Define.SCurrency p2);
            static /*0x1297498*/ PTShare.Define.SCurrency op_Subtraction(PTShare.Define.SCurrency p1, PTShare.Define.SCurrency p2);
            static /*0x12976e0*/ PTShare.Define.SCurrency op_Multiply(PTShare.Define.SCurrency p1, int mul);
            /*0x1296594*/ SCurrency();
            /*0x129661c*/ SCurrency(System.Collections.Generic.IEnumerable<PTShare.Define.SCurrency> datas);
            /*0x1296fe4*/ SCurrency(long _gold, long _star, long _heroexp, long _fship, long _crystal, long _dismiss, long _herocard, long _mazecoin, long _guildcoin, long _arenacoin, long _worldcoin, long _dungeoncoin, long _pvecoin1, long _pvecoin2);
            /*0x1297094*/ SCurrency(PTShare.Define.SCurrency input);
            /*0x129659c*/ bool IsEmpty();
            /*0x1297134*/ void Add(PTShare.Define.Currency type, long amount);
            /*0x1297224*/ long GetAmount(PTShare.Define.Currency type);

            class <>c
            {
                static /*0x0*/ PTShare.Define.SCurrency.<> <>9;
                static /*0x8*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_0;
                static /*0x10*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_1;
                static /*0x18*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_2;
                static /*0x20*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_3;
                static /*0x28*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_4;
                static /*0x30*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_5;
                static /*0x38*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_6;
                static /*0x40*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_7;
                static /*0x48*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_8;
                static /*0x50*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_9;
                static /*0x58*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_10;
                static /*0x60*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_11;
                static /*0x68*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_12;
                static /*0x70*/ System.Func<PTShare.Define.SCurrency, long> <>9__16_13;

                static /*0xf9c3a8*/ <>c();
                /*0xf9c408*/ <>c();
                /*0xf9c410*/ long <.ctor>b__16_0(PTShare.Define.SCurrency d);
                /*0xf9c428*/ long <.ctor>b__16_1(PTShare.Define.SCurrency d);
                /*0xf9c440*/ long <.ctor>b__16_2(PTShare.Define.SCurrency d);
                /*0xf9c458*/ long <.ctor>b__16_3(PTShare.Define.SCurrency d);
                /*0xf9c470*/ long <.ctor>b__16_4(PTShare.Define.SCurrency d);
                /*0xf9c488*/ long <.ctor>b__16_5(PTShare.Define.SCurrency d);
                /*0xf9c4a0*/ long <.ctor>b__16_6(PTShare.Define.SCurrency d);
                /*0xf9c4b8*/ long <.ctor>b__16_7(PTShare.Define.SCurrency d);
                /*0xf9c4d0*/ long <.ctor>b__16_8(PTShare.Define.SCurrency d);
                /*0xf9c4e8*/ long <.ctor>b__16_9(PTShare.Define.SCurrency d);
                /*0xf9c500*/ long <.ctor>b__16_10(PTShare.Define.SCurrency d);
                /*0xf9c518*/ long <.ctor>b__16_11(PTShare.Define.SCurrency d);
                /*0xf9c530*/ long <.ctor>b__16_12(PTShare.Define.SCurrency d);
                /*0xf9c548*/ long <.ctor>b__16_13(PTShare.Define.SCurrency d);
            }
        }

        class SImageBanner
        {
            /*0x10*/ string imageurl;
            /*0x18*/ string linkurl;

            /*0x1298910*/ SImageBanner();
        }

        class SGuildWarReward
        {
            /*0x10*/ int rank;
            /*0x14*/ int index;

            /*0x1298414*/ SGuildWarReward();
        }

        class SNotice
        {
            /*0x10*/ int id;
            /*0x18*/ string imageurl;
            /*0x20*/ string title;
            /*0x28*/ string body;
            /*0x30*/ System.DateTime begin;
            /*0x38*/ System.DateTime expire;

            /*0x129a304*/ SNotice();
        }

        class SAttend
        {
            /*0x10*/ int eventid;
            /*0x14*/ int groupid;
            /*0x18*/ int accdays;
            /*0x1c*/ int chaindays;
            /*0x20*/ int maxchaindays;
            /*0x28*/ System.Collections.Generic.List<int> fixdays;

            /*0x12964b4*/ SAttend();
        }

        class SAttendReward
        {
            /*0x10*/ int rewardid;
            /*0x14*/ int index;

            /*0x12964bc*/ SAttendReward();
        }

        class SInstant
        {
            /*0x10*/ int index;
            /*0x18*/ string trigger;
            /*0x20*/ System.DateTime expire;

            /*0x1298918*/ SInstant();
        }

        class SPass
        {
            /*0x10*/ int eventid;
            /*0x14*/ int resetpoint;
            /*0x18*/ bool premium;
            /*0x20*/ System.DateTime expire;

            /*0x129a30c*/ SPass();
        }

        class SPassReward
        {
            /*0x10*/ int index;
            /*0x14*/ int state;

            /*0x129a370*/ SPassReward();
        }

        class STroop
        {
            /*0x10*/ long index;
            /*0x18*/ string name;
            /*0x20*/ string heroids;

            /*0x129f46c*/ STroop();
        }

        class SBook
        {
            /*0x10*/ int tableid;
            /*0x14*/ int maxgrade;
            /*0x18*/ bool recved;

            /*0x1296514*/ SBook();
        }

        class SArenaTarget : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long cp;
            /*0x38*/ int arenapoint;

            /*0x12964a4*/ SArenaTarget();
        }

        class SArenaRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long cp;
            /*0x38*/ int arenapoint;

            /*0x1296484*/ SArenaRanker();
        }

        class SWorldArenaTarget : PTShare.Define.SWorldArenaRanker
        {
            /*0x58*/ int result;

            /*0x129fd9c*/ SWorldArenaTarget();
        }

        class SWorldArenaRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int rank;
            /*0x34*/ int tier;
            /*0x38*/ long cp;
            /*0x40*/ int score;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> heroes;
            /*0x50*/ System.Collections.Generic.List<int> blinds;

            /*0x129fd8c*/ SWorldArenaRanker();
        }

        class SWorldArenaRewards
        {
            /*0x10*/ PTShare.Define.SProperty rewards;
            /*0x18*/ int beforeTier;
            /*0x1c*/ int afterTier;
            /*0x20*/ int beforeRank;
            /*0x24*/ int afterRank;

            /*0x129fd94*/ SWorldArenaRewards();
        }

        class SWorldBossRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int cp;
            /*0x34*/ int step;
            /*0x38*/ long damage;

            /*0x129fdac*/ SWorldBossRanker();
        }

        class SRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int score;
            /*0x38*/ PTShare.Define.SGuildMini guild;

            /*0x129f290*/ SRanker();
        }

        class SLongRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long score;
            /*0x38*/ PTShare.Define.SGuildMini guild;

            /*0x1299a20*/ SLongRanker();
        }

        class SRankerGuild : PTShare.Define.SGuildMini
        {
            /*0x30*/ long score;

            /*0x129f298*/ SRankerGuild();
        }

        class SWorldBoss
        {
            /*0x10*/ bool clear;
            /*0x18*/ long damage;
            /*0x20*/ int count;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> missions;

            /*0x129fda4*/ SWorldBoss();
        }

        class SGoods
        {
            /*0x10*/ string packageid;
            /*0x18*/ int purchasecount;

            /*0x1298050*/ SGoods();
        }

        class SSubscriptGoods
        {
            /*0x10*/ string packageid;
            /*0x18*/ int subscriptioncount;

            /*0x129f43c*/ SSubscriptGoods();
        }

        class SReplay
        {
            /*0x10*/ string replayid;
            /*0x18*/ int randomseed;
            /*0x20*/ string arg;
            /*0x28*/ PTShare.Define.SVerifySide left;
            /*0x30*/ PTShare.Define.SVerifySide right;
            /*0x38*/ string playdata;

            /*0x129f2b0*/ SReplay();
        }

        class SProperty
        {
            /*0x10*/ int userexp;
            /*0x14*/ int vippoint;
            /*0x18*/ PTShare.Define.SCurrency currency;
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> items;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SEquip> equips;
            /*0x30*/ System.Collections.Generic.List<PTShare.Define.SSkin> skins;
            /*0x38*/ System.Collections.Generic.List<PTShare.Define.SLittleHero> heroes;
            /*0x40*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passpoints;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SArtifact> artifacts;
            /*0x50*/ System.Collections.Generic.List<PTShare.Define.SFrame> frames;
            /*0x58*/ System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> housingobjs;

            static /*0x129a7a0*/ PTShare.Define.SProperty Create(System.Collections.Generic.IEnumerable<PTShare.Define.SProperty> list);
            static /*0x129c414*/ System.Collections.Generic.List<System.ValueTuple<PTShare.Define.Wealth, string, string>> Parse(string rewards);
            static /*0x129d460*/ PTShare.Define.SProperty WithBonus(string rewards, int percent);
            static /*0x129dae0*/ PTShare.Define.SProperty op_Addition(PTShare.Define.SProperty p1, PTShare.Define.SProperty p2);
            static /*0x129e2e0*/ PTShare.Define.SProperty op_Subtraction(PTShare.Define.SProperty p1, PTShare.Define.SProperty p2);
            static /*0x129eb24*/ PTShare.Define.SProperty op_Multiply(PTShare.Define.SProperty p1, int mul);
            /*0x129a638*/ SProperty();
            /*0x129a8e0*/ SProperty(string rewards, int mul);
            /*0x129a640*/ bool IsEmpty();
            /*0x129ae74*/ void AddEquip(int tableid, int bonusid);
            /*0x129af5c*/ void SubEquip(int tableid, int bonusid);
            /*0x129b08c*/ void AddEquip(PTShare.Define.SEquip equip);
            /*0x129b138*/ void AddHero(int tableid, int grade, int level);
            /*0x129b228*/ void SubHero(int tableid, int grade, int level);
            /*0x129b36c*/ void AddItem(int tableid, int count);
            /*0x129b530*/ void SubItem(int tableid, int count);
            /*0x129b6f8*/ void AddItem(PTShare.Define.SItem item);
            /*0x129b714*/ void AddSkin(int tableid);
            /*0x129b7f8*/ void AddArtifact(int tableid, int level);
            /*0x129b8d8*/ void SubArtifact(int tableid, int level);
            /*0x129ba08*/ void AddSkin(PTShare.Define.SSkin skin);
            /*0x129bab4*/ void SubSkin(PTShare.Define.SSkin skin);
            /*0x129bbe0*/ void AddCurrency(PTShare.Define.Currency type, long amount);
            /*0x129bc68*/ void AddPassPoint(string pointname, int point);
            /*0x129be2c*/ void SubPassPoint(string pointname, int point);
            /*0x129bff4*/ void AddFrame(string type, int id);
            /*0x129c0d8*/ void SubFrame(string type, int id);
            /*0x129c20c*/ void AddHousingObj(int id);
            /*0x129c2e8*/ void SubHousingObj(int id);
            /*0x129a920*/ void Parse(string rewards, int mul);
            /*0x129c750*/ void AddReward(string rewards, int amount);
            /*0x129cd8c*/ void Merge(PTShare.Define.SProperty data);
            /*0x129d228*/ int GetItemCount(int itemid);
            /*0x129d32c*/ int GetJewelCount();
            /*0x129f1a4*/ void <Merge>b__37_0(PTShare.Define.SEquip v);
            /*0x129f1c4*/ void <Merge>b__37_1(PTShare.Define.SLittleHero v);
            /*0x129f1e4*/ void <Merge>b__37_2(PTShare.Define.SItem v);
            /*0x129f200*/ void <Merge>b__37_3(PTShare.Define.SSkin v);
            /*0x129f204*/ void <Merge>b__37_4(PTShare.Define.SPassPoint v);
            /*0x129f224*/ void <Merge>b__37_5(PTShare.Define.SArtifact v);
            /*0x129f240*/ void <Merge>b__37_6(PTShare.Define.SFrame v);
            /*0x129f260*/ void <Merge>b__37_7(PTShare.Define.SMiniHousingObj v);

            class <>c__DisplayClass13_0
            {
                /*0x10*/ PTShare.Define.SProperty data;

                /*0xf9c760*/ <>c__DisplayClass13_0();
                /*0xf9c768*/ void <Create>b__0(PTShare.Define.SProperty f);
            }

            class <>c__DisplayClass16_0
            {
                /*0x10*/ int tableid;
                /*0x14*/ int bonusid;

                /*0xf9c794*/ <>c__DisplayClass16_0();
                /*0xf9c79c*/ bool <SubEquip>b__0(PTShare.Define.SEquip f);
            }

            class <>c__DisplayClass19_0
            {
                /*0x10*/ int tableid;
                /*0x14*/ int grade;
                /*0x18*/ int level;

                /*0xf9c7d8*/ <>c__DisplayClass19_0();
                /*0xf9c7e0*/ bool <SubHero>b__0(PTShare.Define.SLittleHero f);
            }

            class <>c__DisplayClass20_0
            {
                /*0x10*/ int tableid;

                /*0xf9c82c*/ <>c__DisplayClass20_0();
                /*0xf9c834*/ bool <AddItem>b__0(PTShare.Define.SItem i);
            }

            class <>c__DisplayClass21_0
            {
                /*0x10*/ int tableid;

                /*0xf9c858*/ <>c__DisplayClass21_0();
                /*0xf9c860*/ bool <SubItem>b__0(PTShare.Define.SItem i);
            }

            class <>c__DisplayClass25_0
            {
                /*0x10*/ int tableid;
                /*0x14*/ int level;

                /*0xf9c884*/ <>c__DisplayClass25_0();
                /*0xf9c88c*/ bool <SubArtifact>b__0(PTShare.Define.SArtifact f);
            }

            class <>c__DisplayClass27_0
            {
                /*0x10*/ PTShare.Define.SSkin skin;

                /*0xf9c8c8*/ <>c__DisplayClass27_0();
                /*0xf9c8d0*/ bool <SubSkin>b__0(PTShare.Define.SSkin f);
            }

            class <>c__DisplayClass29_0
            {
                /*0x10*/ string pointname;

                /*0xf9c900*/ <>c__DisplayClass29_0();
                /*0xf9c908*/ bool <AddPassPoint>b__0(PTShare.Define.SPassPoint i);
            }

            class <>c__DisplayClass30_0
            {
                /*0x10*/ string pointname;

                /*0xf9c92c*/ <>c__DisplayClass30_0();
                /*0xf9c934*/ bool <SubPassPoint>b__0(PTShare.Define.SPassPoint i);
            }

            class <>c__DisplayClass32_0
            {
                /*0x10*/ string type;
                /*0x18*/ int id;

                /*0xf9c958*/ <>c__DisplayClass32_0();
                /*0xf9c960*/ bool <SubFrame>b__0(PTShare.Define.SFrame f);
            }

            class <>c__DisplayClass34_0
            {
                /*0x10*/ int id;

                /*0xf9c9b4*/ <>c__DisplayClass34_0();
                /*0xf9c9bc*/ bool <SubHousingObj>b__0(PTShare.Define.SMiniHousingObj f);
            }

            class <>c
            {
                static /*0x0*/ PTShare.Define.SProperty.<> <>9;
                static /*0x8*/ System.Func<char, bool> <>9__36_0;
                static /*0x10*/ System.Func<PTShare.Define.SItem, bool> <>9__39_0;
                static /*0x18*/ System.Func<char, bool> <>9__40_0;

                static /*0xf9c678*/ <>c();
                /*0xf9c6d8*/ <>c();
                /*0xf9c6e0*/ bool <AddReward>b__36_0(char w);
                /*0xf9c710*/ bool <GetJewelCount>b__39_0(PTShare.Define.SItem v);
                /*0xf9c730*/ bool <Parse>b__40_0(char w);
            }

            class <>c__DisplayClass38_0
            {
                /*0x10*/ int itemid;

                /*0xf9c9e0*/ <>c__DisplayClass38_0();
                /*0xf9c9e8*/ bool <GetItemCount>b__0(PTShare.Define.SItem v);
            }

            class <>c__DisplayClass42_0
            {
                /*0x10*/ PTShare.Define.SProperty val;

                /*0xf9ca0c*/ <>c__DisplayClass42_0();
                /*0xf9ca14*/ void <op_Addition>b__0(PTShare.Define.SEquip v);
                /*0xf9ca40*/ void <op_Addition>b__1(PTShare.Define.SEquip v);
                /*0xf9ca6c*/ void <op_Addition>b__2(PTShare.Define.SLittleHero v);
                /*0xf9ca9c*/ void <op_Addition>b__3(PTShare.Define.SLittleHero v);
                /*0xf9cacc*/ void <op_Addition>b__4(PTShare.Define.SItem v);
                /*0xf9caf8*/ void <op_Addition>b__5(PTShare.Define.SItem v);
                /*0xf9cb24*/ void <op_Addition>b__6(PTShare.Define.SSkin v);
                /*0xf9cb40*/ void <op_Addition>b__7(PTShare.Define.SSkin v);
                /*0xf9cb5c*/ void <op_Addition>b__8(PTShare.Define.SPassPoint v);
                /*0xf9cb88*/ void <op_Addition>b__9(PTShare.Define.SPassPoint v);
                /*0xf9cbb4*/ void <op_Addition>b__10(PTShare.Define.SArtifact v);
                /*0xf9cbe0*/ void <op_Addition>b__11(PTShare.Define.SArtifact v);
                /*0xf9cc0c*/ void <op_Addition>b__12(PTShare.Define.SFrame v);
                /*0xf9cc38*/ void <op_Addition>b__13(PTShare.Define.SFrame v);
                /*0xf9cc64*/ void <op_Addition>b__14(PTShare.Define.SMiniHousingObj v);
                /*0xf9cc8c*/ void <op_Addition>b__15(PTShare.Define.SMiniHousingObj v);
            }

            class <>c__DisplayClass43_0
            {
                /*0x10*/ PTShare.Define.SProperty val;

                /*0xf9ccb4*/ <>c__DisplayClass43_0();
                /*0xf9ccbc*/ void <op_Subtraction>b__0(PTShare.Define.SEquip v);
                /*0xf9cce8*/ void <op_Subtraction>b__1(PTShare.Define.SEquip v);
                /*0xf9cd14*/ void <op_Subtraction>b__2(PTShare.Define.SLittleHero v);
                /*0xf9cd44*/ void <op_Subtraction>b__3(PTShare.Define.SLittleHero v);
                /*0xf9cd74*/ void <op_Subtraction>b__4(PTShare.Define.SItem v);
                /*0xf9cda0*/ void <op_Subtraction>b__5(PTShare.Define.SItem v);
                /*0xf9cdcc*/ void <op_Subtraction>b__6(PTShare.Define.SSkin v);
                /*0xf9cde8*/ void <op_Subtraction>b__7(PTShare.Define.SSkin v);
                /*0xf9ce04*/ void <op_Subtraction>b__8(PTShare.Define.SPassPoint v);
                /*0xf9ce30*/ void <op_Subtraction>b__9(PTShare.Define.SPassPoint v);
                /*0xf9ce5c*/ void <op_Subtraction>b__10(PTShare.Define.SArtifact v);
                /*0xf9ce88*/ void <op_Subtraction>b__11(PTShare.Define.SArtifact v);
                /*0xf9ceb4*/ void <op_Subtraction>b__12(PTShare.Define.SFrame v);
                /*0xf9cee0*/ void <op_Subtraction>b__13(PTShare.Define.SFrame v);
                /*0xf9cf0c*/ void <op_Subtraction>b__14(PTShare.Define.SMiniHousingObj v);
                /*0xf9cf34*/ void <op_Subtraction>b__15(PTShare.Define.SMiniHousingObj v);
            }

            class <>c__DisplayClass44_0
            {
                /*0x10*/ int mul;
                /*0x18*/ PTShare.Define.SProperty val;

                /*0xf9cf5c*/ <>c__DisplayClass44_0();
                /*0xf9cf64*/ void <op_Multiply>b__0(PTShare.Define.SEquip v);
                /*0xf9d09c*/ void <op_Multiply>b__1(PTShare.Define.SLittleHero v);
                /*0xf9d1d4*/ void <op_Multiply>b__2(PTShare.Define.SItem v);
                /*0xf9d208*/ void <op_Multiply>b__3(PTShare.Define.SPassPoint v);
                /*0xf9d240*/ void <op_Multiply>b__4(PTShare.Define.SArtifact v);
                /*0xf9d26c*/ void <op_Multiply>b__5(PTShare.Define.SFrame v);
                /*0xf9d3a4*/ void <op_Multiply>b__6(PTShare.Define.SSkin v);
                /*0xf9d4dc*/ void <op_Multiply>b__7(PTShare.Define.SMiniHousingObj v);
            }

            class <>c__DisplayClass44_1
            {
                /*0x10*/ PTShare.Define.SEquip v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals1;

                /*0xf9d094*/ <>c__DisplayClass44_1();
                /*0xf9d614*/ void <op_Multiply>b__8(int f);
            }

            class <>c__DisplayClass44_2
            {
                /*0x10*/ PTShare.Define.SLittleHero v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals2;

                /*0xf9d1cc*/ <>c__DisplayClass44_2();
                /*0xf9d64c*/ void <op_Multiply>b__9(int f);
            }

            class <>c__DisplayClass44_3
            {
                /*0x10*/ PTShare.Define.SFrame v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals3;

                /*0xf9d39c*/ <>c__DisplayClass44_3();
                /*0xf9d684*/ void <op_Multiply>b__10(int f);
            }

            class <>c__DisplayClass44_4
            {
                /*0x10*/ PTShare.Define.SSkin v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals4;

                /*0xf9d4d4*/ <>c__DisplayClass44_4();
                /*0xf9d6bc*/ void <op_Multiply>b__11(int f);
            }

            class <>c__DisplayClass44_5
            {
                /*0x10*/ PTShare.Define.SMiniHousingObj v;
                /*0x18*/ PTShare.Define.SProperty.<> CS$<>8__locals5;

                /*0xf9d60c*/ <>c__DisplayClass44_5();
                /*0xf9d6f0*/ void <op_Multiply>b__12(int f);
            }
        }

        class SGrowth
        {
            /*0x10*/ string packageid;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SGrowthRow> achieves;

            /*0x1298058*/ SGrowth();
        }

        class SRelationMini
        {
            /*0x10*/ int index;
            /*0x14*/ int level;

            /*0x129f2a8*/ SRelationMini();
        }

        class SDungeonCommon
        {
            /*0x10*/ int dungeonid;
            /*0x18*/ System.Collections.Generic.List<string> coinrewardrecvs;
            /*0x20*/ System.Collections.Generic.List<string> condrewardrecvs;

            /*0x1297820*/ SDungeonCommon();
        }

        class SDungeon : PTShare.Define.SDungeonCommon
        {
            /*0x28*/ float progress;
            /*0x2c*/ int makecoin;

            /*0x1297818*/ SDungeon();
        }

        class SDungeonPlay : PTShare.Define.SDungeonCommon
        {
            /*0x28*/ int posx;
            /*0x2c*/ int posy;
            /*0x30*/ int doorkey;
            /*0x34*/ int hammer;
            /*0x38*/ bool mustbattle;
            /*0x40*/ PTShare.Define.SDungeonBuff buff;
            /*0x48*/ System.Collections.Generic.Dictionary<string, int> randomtileids;
            /*0x50*/ System.Collections.Generic.Dictionary<string, int> jailheroids;
            /*0x58*/ System.Collections.Generic.Dictionary<string, int> wallheroids;
            /*0x60*/ System.Collections.Generic.List<string> opentiles;
            /*0x68*/ System.Collections.Generic.List<string> usedtiles;
            /*0x70*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> enemies;
            /*0x78*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> candidates;
            /*0x80*/ System.Collections.Generic.List<PTShare.Define.SMate> mates;
            /*0x88*/ System.Collections.Generic.List<PTShare.Define.SCondition> conditions;
            /*0x90*/ string bombtile;
            /*0x98*/ int bombcount;

            /*0x1297838*/ SDungeonPlay();
        }

        class SDungeonBuff
        {
            /*0x10*/ int atk;
            /*0x14*/ int def;

            /*0x1297828*/ SDungeonBuff();
        }

        class SAbility
        {
            /*0x10*/ int index;
            /*0x14*/ int valueindex;
            /*0x18*/ int grade;

            /*0x129645c*/ SAbility();
        }

        class SAbilityGroup
        {
            /*0x10*/ int tableid;
            /*0x14*/ int abilitygrade;
            /*0x18*/ System.Collections.Generic.List<int> abilitys;

            /*0x1296464*/ SAbilityGroup();
        }

        class SVerifyHousingObj
        {
            /*0x10*/ int tableid;
            /*0x14*/ int lv;

            /*0x129fd74*/ SVerifyHousingObj();
        }

        class SStatBonus
        {
            /*0x10*/ int traininglv;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SRelationMini> relations;
            /*0x20*/ PTShare.Define.SDungeonBuff dungeonbuff;
            /*0x28*/ int resonancecount;
            /*0x30*/ string housinggroup;

            /*0x129f434*/ SStatBonus();
            /*0x129f3f8*/ void Clone(PTShare.Define.SStatBonus clone);
        }

        class SGrowthRow
        {
            /*0x10*/ int index;
            /*0x14*/ int score;
            /*0x18*/ bool recved;

            /*0x1298060*/ SGrowthRow();
        }

        class SQuest
        {
            /*0x10*/ int point;
            /*0x18*/ System.Collections.Generic.List<int> exchanges;
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SQuestRow> list;

            /*0x129a2f4*/ SQuest();
        }

        class SMission : PTShare.Define.SQuest
        {
            /*0x28*/ int eventid;
            /*0x30*/ System.DateTime begin;
            /*0x38*/ int step;

            /*0x129a2ec*/ SMission();
        }

        class SEventExchange
        {
            /*0x10*/ int index;
            /*0x14*/ int count;

            /*0x1297964*/ SEventExchange();
        }

        class SQuestRow
        {
            /*0x10*/ int index;
            /*0x14*/ int score;

            /*0x129f280*/ SQuestRow();
        }

        class SMainQuest
        {
            /*0x10*/ int index;
            /*0x14*/ int step;
            /*0x18*/ long score;
            /*0x20*/ int status;

            /*0x1299a38*/ SMainQuest();
        }

        class SItem
        {
            /*0x10*/ int tableid;
            /*0x14*/ int count;

            /*0x1298ffc*/ SItem();
            /*0x1299004*/ SItem(int _tableid, int _count);
        }

        class SCommonSide
        {
            /*0x10*/ int tacticid;
            /*0x18*/ PTShare.Define.SStatBonus bonus;

            /*0x12964e4*/ SCommonSide();
        }

        class SBattleSide : PTShare.Define.SCommonSide
        {
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> heroes;

            /*0x12964dc*/ SBattleSide();
        }

        class SVerifySide : PTShare.Define.SCommonSide
        {
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> heroes;

            /*0x129fd7c*/ SVerifySide();
        }

        class SVerifyHero : PTShare.Define.SSmallHero
        {
            /*0x28*/ PTShare.Define.SArtifact artifact;
            /*0x30*/ int signature;
            /*0x38*/ System.Collections.Generic.List<PTShare.Define.SVerifyEquip> equips;
            /*0x40*/ PTShare.Define.SStatBonus statbonus;
            /*0x48*/ System.Collections.Generic.List<int> abilitys;
            /*0x50*/ int bhp;
            /*0x54*/ int bmp;
            /*0x58*/ int ehp;
            /*0x5c*/ int emp;

            /*0x129fd64*/ SVerifyHero();
            /*0x129fd30*/ long get_WorldBossBeginHP();
            /*0x129fd48*/ void set_WorldBossBeginHP(long value);
        }

        class SBattleHero : PTShare.Define.SSmallHero
        {
            /*0x28*/ PTShare.Define.SArtifact artifact;
            /*0x30*/ int signature;
            /*0x38*/ System.Collections.Generic.List<PTShare.Define.SEquip> equips;
            /*0x40*/ PTShare.Define.SStatBonus statbonus;
            /*0x48*/ System.Collections.Generic.List<int> abilitys;

            /*0x12964c4*/ SBattleHero();
        }

        class SConditionHero : PTShare.Define.SBattleHero
        {
            /*0x50*/ int hp;
            /*0x54*/ int mp;

            /*0x1296554*/ SConditionHero();
        }

        class SGuildWarTactic
        {
            /*0x10*/ int tableid;
            /*0x14*/ int tacticid;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> heroes;

            /*0x129841c*/ SGuildWarTactic();
        }

        class SDungeonCondition
        {
            /*0x10*/ int posx;
            /*0x14*/ int posy;
            /*0x18*/ int score;
            /*0x1c*/ int goalscore;

            /*0x1297830*/ SDungeonCondition();
        }

        class SDeck
        {
            /*0x10*/ string profileids;
            /*0x18*/ int level;
            /*0x20*/ long cp;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> myheroes;

            /*0x1297808*/ SDeck();
        }

        class SHero
        {
            /*0x10*/ int heroid;
            /*0x14*/ int tableid;
            /*0x18*/ int skinid;
            /*0x1c*/ int factionid;
            /*0x20*/ int grade;
            /*0x24*/ int level;
            /*0x28*/ bool locking;
            /*0x2c*/ int levelsync;
            /*0x30*/ System.Collections.Generic.List<PTShare.Define.SEquip> equips;
            /*0x38*/ PTShare.Define.SArtifact artifact;
            /*0x40*/ int signature;
            /*0x48*/ System.Collections.Generic.List<int> abilitys;

            /*0x12983f4*/ SHero();
            /*0x1298424*/ PTShare.Define.SHero Clone();
            void Clone<T>(ref T target, bool deep);
            /*0x12986f4*/ int GetSkinID();

            class <>c
            {
                static /*0x0*/ PTShare.Define.SHero.<> <>9;
                static /*0x8*/ System.Converter<PTShare.Define.SEquip, PTShare.Define.SEquip> <>9__12_0;
                static /*0x10*/ System.Converter<int, int> <>9__12_1;

                static /*0xf9c5ec*/ <>c();
                /*0xf9c64c*/ <>c();
                /*0xf9c654*/ PTShare.Define.SEquip <Clone>b__12_0(PTShare.Define.SEquip e);
                /*0xf9c670*/ int <Clone>b__12_1(int a);
            }

            class <>c__13<T>
            {
                static /*0x0*/ PTShare.Define.SHero.<>c__13<T> <>9;
                static /*0x0*/ System.Converter<PTShare.Define.SEquip, PTShare.Define.SEquip> <>9__13_0;
                static /*0x0*/ System.Converter<int, int> <>9__13_1;

                static <>c__13();
                <>c__13();
                PTShare.Define.SEquip <Clone>b__13_0(PTShare.Define.SEquip e);
                int <Clone>b__13_1(int a);
            }
        }

        class SResonanceSlot
        {
            /*0x10*/ int slot;
            /*0x18*/ System.DateTime open;

            /*0x129f2c8*/ SResonanceSlot();
        }

        class SLegionHero : PTShare.Define.SStatBonusHero
        {
            /*0x60*/ string nickname;
            /*0x68*/ string uniqueid;
            /*0x70*/ int status;

            /*0x129904c*/ SLegionHero();
        }

        class SGuildWarHero : PTShare.Define.SHero
        {
            /*0x50*/ long playerid;
            /*0x58*/ string nickname;
            /*0x60*/ string uniqueid;
            /*0x68*/ int deckid;

            /*0x12983b0*/ SGuildWarHero();
            /*0x12980c0*/ PTShare.Define.SGuildWarHero CloneGuildWarHero();
            /*0x12983c0*/ void OverlapSlotInfo(PTShare.Define.SGuildWarHero hero);

            class <>c
            {
                static /*0x0*/ PTShare.Define.SGuildWarHero.<> <>9;
                static /*0x8*/ System.Converter<PTShare.Define.SEquip, PTShare.Define.SEquip> <>9__4_0;
                static /*0x10*/ System.Converter<int, int> <>9__4_1;

                static /*0xf9c560*/ <>c();
                /*0xf9c5c0*/ <>c();
                /*0xf9c5c8*/ PTShare.Define.SEquip <CloneGuildWarHero>b__4_0(PTShare.Define.SEquip e);
                /*0xf9c5e4*/ int <CloneGuildWarHero>b__4_1(int a);
            }
        }

        class SGuildWarBattleHero : PTShare.Define.SBattleHero
        {
            /*0x50*/ string nickname;
            /*0x58*/ string uniqueid;

            /*0x12980a8*/ SGuildWarBattleHero();
        }

        class SResonanceHero : PTShare.Define.SHero
        {
            /*0x50*/ int slot;
            /*0x54*/ int reallevel;

            /*0x129f2b8*/ SResonanceHero();
        }

        class SMercenaryRented : PTShare.Define.SHero
        {
            /*0x50*/ long playerid;
            /*0x58*/ string nickname;

            /*0x1299a80*/ SMercenaryRented();
        }

        class SStatBonusHero : PTShare.Define.SHero
        {
            /*0x50*/ long playerid;
            /*0x58*/ PTShare.Define.SStatBonus bonus;

            /*0x129905c*/ SStatBonusHero();
        }

        class SMercenaryRent : PTShare.Define.SMercenaryRented
        {
            /*0x60*/ string reservedname;
            /*0x68*/ bool myreq;
            /*0x6c*/ int reqcount;

            /*0x1299a70*/ SMercenaryRent();
        }

        class SMercenaryLend
        {
            /*0x10*/ int heroid;
            /*0x18*/ System.Collections.Generic.List<long> reqplayerids;

            /*0x1299a60*/ SMercenaryLend();
        }

        class SMercenaryLended
        {
            /*0x10*/ int heroid;
            /*0x18*/ long reservedplayerid;
            /*0x20*/ string reservedname;

            /*0x1299a68*/ SMercenaryLended();
        }

        class SLvHero
        {
            /*0x10*/ int heroid;
            /*0x14*/ int level;

            /*0x1299a28*/ SLvHero();
        }

        class SPassPoint
        {
            /*0x10*/ string name;
            /*0x18*/ int point;

            /*0x129a314*/ SPassPoint(string _name, int _point);
        }

        class SCoreHero
        {
            /*0x10*/ int tableid;
            /*0x14*/ int grade;
            /*0x18*/ int level;
            /*0x1c*/ int skinid;

            /*0x129658c*/ SCoreHero();
            /*0x1296574*/ int GetSkinID();
        }

        class SLittleHero : PTShare.Define.SCoreHero
        {
            /*0x20*/ int heroid;

            /*0x1296524*/ SLittleHero();
        }

        class SSmallHero : PTShare.Define.SCoreHero
        {
            /*0x20*/ int slot;

            /*0x12964d4*/ SSmallHero();
        }

        class SContentShopReset
        {
            /*0x10*/ int index;
            /*0x14*/ int resetcnt;

            /*0x1296564*/ SContentShopReset();
        }

        class SHistory : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ System.DateTime time;
            /*0x38*/ string replayid;
            /*0x40*/ long cp;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> myheroes;
            /*0x50*/ string statistics;

            /*0x129647c*/ SHistory();
        }

        class SGuildBossHistory : PTShare.Define.SHistory
        {
            /*0x58*/ long damage;

            /*0x1298080*/ SGuildBossHistory();
        }

        class SArenaHistory : PTShare.Define.SHistory
        {
            /*0x58*/ int scoreadd;
            /*0x5c*/ int side;
            /*0x60*/ long vscp;
            /*0x68*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> vsheroes;
            /*0x70*/ bool revenge;

            /*0x1296474*/ SArenaHistory();
        }

        class SGuildWarHistory
        {
            /*0x10*/ System.DateTime time;
            /*0x18*/ string replayid;
            /*0x20*/ PTShare.Define.SMiniPlayer attacker;
            /*0x28*/ PTShare.Define.SGuildMini lguild;
            /*0x30*/ PTShare.Define.SGuildWarTactic lside;
            /*0x38*/ PTShare.Define.SGuildMini rguild;
            /*0x40*/ PTShare.Define.SGuildWarTactic rside;
            /*0x48*/ string statistics;
            /*0x50*/ int scoreadd;
            /*0x54*/ int side;
            /*0x58*/ string output;

            /*0x1298404*/ SGuildWarHistory();
        }

        class SVerifyEquip
        {
            /*0x10*/ int tableid;
            /*0x14*/ int lv;
            /*0x18*/ int bonusid;

            /*0x1297848*/ SVerifyEquip();
        }

        class SEquip : PTShare.Define.SVerifyEquip
        {
            /*0x1c*/ int equipid;
            /*0x20*/ int exp;

            /*0x1297840*/ SEquip();
            /*0x1297850*/ SEquip(int _nTableID);
            /*0x1297884*/ SEquip(PTShare.Define.SVerifyEquip _verifyEquip);
            /*0x12978d0*/ PTShare.Define.SEquip Clone();
        }

        class SPlayer : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int area;
            /*0x38*/ string campaign;
            /*0x40*/ System.DateTime lastwin;
            /*0x48*/ string hcampaign;
            /*0x50*/ System.DateTime hlastwin;
            /*0x58*/ long cp;
            /*0x60*/ System.DateTime lastaccess;

            /*0x1298048*/ SPlayer();
        }

        class SFriend : PTShare.Define.SPlayer
        {
            /*0x68*/ int recvstate;
            /*0x6c*/ int sendstate;

            /*0x1298040*/ SFriend();
        }

        class SGuildMember : PTShare.Define.SPlayer
        {
            /*0x68*/ int position;
            /*0x6c*/ int auth;
            /*0x70*/ int warauth;
            /*0x74*/ int point;
            /*0x78*/ string camppos;

            /*0x1298090*/ SGuildMember();
        }

        class SSearchPlayer : PTShare.Define.SPlayer
        {
            /*0x68*/ bool send;

            /*0x129f3f0*/ SSearchPlayer();
        }

        class SContribution : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int warcb;

            /*0x129656c*/ SContribution();
        }

        class SGuildWarForm
        {
            /*0x10*/ PTShare.Define.SGuildWarPlayer captain;
            /*0x18*/ System.Collections.Generic.List<int> tableids;
            /*0x20*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> heroes;

            /*0x12980b8*/ SGuildWarForm();
        }

        class SGuildWarPlayer : PTShare.Define.SPlayer
        {
            /*0x68*/ int warauth;
            /*0x6c*/ int atkwin;
            /*0x70*/ int atkcmaxwin;
            /*0x74*/ int atklose;
            /*0x78*/ int defwin;
            /*0x7c*/ int defcmaxwin;
            /*0x80*/ int gcscore;
            /*0x88*/ PTShare.Define.SStatBonus statbonus;

            /*0x129840c*/ SGuildWarPlayer();
        }

        class SCampaignRecord : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ long cp;
            /*0x38*/ int relation;
            /*0x40*/ string campaign;
            /*0x48*/ string statistics;
            /*0x50*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> myheroes;

            /*0x129653c*/ SCampaignRecord();
        }

        class SGameReplay
        {
            /*0x10*/ long playerid;
            /*0x18*/ int randomseed;
            /*0x20*/ PTShare.Define.SBattleSide left;
            /*0x28*/ string playdata;

            /*0x129649c*/ SGameReplay();
        }

        class SCampaignReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ string campaign;

            /*0x1296544*/ SCampaignReplay();
        }

        class STowerReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ int floor;

            /*0x129f45c*/ STowerReplay();
        }

        class SArenaReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ PTShare.Define.SBattleSide right;

            /*0x1296494*/ SArenaReplay();
        }

        class SGuildBossReplay : PTShare.Define.SGameReplay
        {
            /*0x30*/ int bossindex;

            /*0x1298088*/ SGuildBossReplay();
        }

        class SBoardFiveRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ System.DateTime complete;

            /*0x12964fc*/ SBoardFiveRanker();
        }

        class SAreaPlayer
        {
            /*0x10*/ int area;
            /*0x18*/ string nickname;
            /*0x20*/ string profileids;
            /*0x28*/ int level;

            /*0x129646c*/ SAreaPlayer();
        }

        class SMiniPlayer
        {
            /*0x10*/ long playerid;
            /*0x18*/ string nickname;
            /*0x20*/ string profileids;
            /*0x28*/ int gender;
            /*0x2c*/ int level;

            /*0x129648c*/ SMiniPlayer();
        }

        class SBoardCampaignRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ string campaign;

            /*0x12964ec*/ SBoardCampaignRanker();
        }

        class SBoardFactionRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int point;

            /*0x12964f4*/ SBoardFactionRanker();
        }

        class STowerBase : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int floor;

            /*0x129f444*/ STowerBase();
        }

        class SBoardTowerRanker : PTShare.Define.SMiniPlayer
        {
            /*0x30*/ int floor;

            /*0x129650c*/ SBoardTowerRanker();
        }

        class SBoardQuest
        {
            /*0x10*/ int index;
            /*0x18*/ PTShare.Define.SMiniPlayer first;
            /*0x20*/ bool recved;

            /*0x1296504*/ SBoardQuest();
        }

        class STowerRanker : PTShare.Define.STowerBase
        {
            /*0x38*/ System.DateTime clear;

            /*0x129f44c*/ STowerRanker();
        }

        class STowerUser : PTShare.Define.STowerBase
        {
            /*0x34*/ int relation;

            /*0x129f464*/ STowerUser();
        }

        class STowerRecord : PTShare.Define.STowerBase
        {
            /*0x38*/ long cp;
            /*0x40*/ string statistics;
            /*0x48*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> myheroes;

            /*0x129f454*/ STowerRecord();
        }

        class SGuildMini
        {
            /*0x10*/ int guildid;
            /*0x18*/ string name;
            /*0x20*/ int level;
            /*0x24*/ int emblemid;
            /*0x28*/ int frameid;

            /*0x1298070*/ SGuildMini();
        }

        class SGuildSummary : PTShare.Define.SGuildMini
        {
            /*0x2c*/ int point;
            /*0x30*/ int membercnt;
            /*0x34*/ bool sendreq;

            /*0x1298098*/ SGuildSummary();
        }

        class SGuild : PTShare.Define.SGuildMini
        {
            /*0x30*/ System.DateTime create;
            /*0x38*/ string lang;
            /*0x40*/ int exp;
            /*0x44*/ int todayexp;
            /*0x48*/ int point;
            /*0x50*/ string notice;
            /*0x58*/ int accepttype;
            /*0x5c*/ int reqlevel;
            /*0x60*/ string guide;

            /*0x1298068*/ SGuild();
        }

        class SGuildWar : PTShare.Define.SGuild
        {
            /*0x68*/ int warpoint;
            /*0x70*/ long cp;

            /*0x12980a0*/ SGuildWar();
        }

        class SGuildBoss
        {
            /*0x10*/ int index;
            /*0x18*/ System.DateTime expire;
            /*0x20*/ int count;
            /*0x28*/ long lastdamage;
            /*0x30*/ long topplayerid;
            /*0x38*/ long topdamage;

            /*0x1298078*/ SGuildBoss();
        }

        class SEventBoss
        {
            /*0x10*/ int index;
            /*0x14*/ int count;
            /*0x18*/ long lastdamage;

            /*0x129795c*/ SEventBoss();
        }

        class SManufacture
        {
            /*0x10*/ int index;
            /*0x14*/ int pushcnt;

            /*0x1299a40*/ SManufacture();
        }

        class SMail
        {
            /*0x10*/ int mailid;
            /*0x18*/ System.DateTime post;
            /*0x20*/ System.DateTime expire;
            /*0x28*/ string title;
            /*0x30*/ string body;
            /*0x38*/ PTShare.Define.SProperty attached;
            /*0x40*/ bool recved;

            /*0x1299a30*/ SMail();
        }

        class SBountyQuest
        {
            /*0x10*/ int id;
            /*0x14*/ int index;
            /*0x18*/ int faction1;
            /*0x1c*/ int faction2;
            /*0x20*/ System.DateTime expire;
            /*0x28*/ System.Collections.Generic.List<string> dispatchids;
            /*0x30*/ System.DateTime finish;

            /*0x1296534*/ SBountyQuest();
        }

        class SBountyHero : PTShare.Define.SLittleHero
        {
            /*0x28*/ string helpnick;
            /*0x30*/ int questid;

            /*0x129651c*/ SBountyHero();
        }

        class SBountyHeroExtend : PTShare.Define.SBountyHero
        {
            /*0x38*/ long playerid;
            /*0x40*/ string nickname;

            /*0x129652c*/ SBountyHeroExtend();
        }

        class SCondition
        {
            /*0x10*/ int heroid;
            /*0x14*/ int hp;
            /*0x18*/ int mp;

            /*0x129654c*/ SCondition();
        }

        class SPay
        {
            /*0x10*/ PTShare.Define.SCurrency currency;
            /*0x18*/ System.Collections.Generic.List<PTShare.Define.SItem> items;

            /*0x129a378*/ SPay();
        }

        class SMaze
        {
            /*0x10*/ bool clear;
            /*0x14*/ int step;
            /*0x18*/ int courseid;
            /*0x20*/ int[] tileids;
            /*0x28*/ int pos;
            /*0x2c*/ bool tiledone;
            /*0x30*/ System.Collections.Generic.List<int> history;

            /*0x1299a58*/ SMaze();
        }

        class SMateCandidate
        {
            /*0x10*/ int tableid;
            /*0x14*/ int level;
            /*0x18*/ int grade;

            /*0x1299a50*/ SMateCandidate();
        }

        class SMate : PTShare.Define.SMateCandidate
        {
            /*0x1c*/ int heroid;

            /*0x1299a48*/ SMate();
        }

        class SRelation
        {
            /*0x10*/ int index;
            /*0x14*/ int relationlevel;
            /*0x18*/ int activatelevel;

            /*0x129f2a0*/ SRelation();
        }

        class SRunner
        {
            /*0x10*/ int tableid;
            /*0x14*/ int votecnt;

            /*0x129f2d8*/ SRunner();
        }

        class SRace
        {
            /*0x10*/ int seq;
            /*0x14*/ int votetrack;
            /*0x18*/ System.Collections.Generic.Dictionary<int, int> unit;
            /*0x20*/ System.Collections.Generic.List<int> rank;
            /*0x28*/ bool confirm;

            /*0x129f288*/ SRace();
        }

        class SModeCount
        {
            /*0x10*/ int campaign;
            /*0x14*/ int tower;
            /*0x18*/ int towerfire;
            /*0x1c*/ int towerwind;
            /*0x20*/ int towernatural;
            /*0x24*/ int towerwater;
            /*0x28*/ int guildboss;
            /*0x2c*/ int worldboss;
            /*0x30*/ int eventboss;

            /*0x129a2fc*/ SModeCount();
        }

        class SDefeat
        {
            /*0x10*/ int campaign;
            /*0x14*/ int tower;
            /*0x18*/ int hcampaign;

            /*0x1297810*/ SDefeat();
        }

        class SSkin
        {
            /*0x10*/ int index;

            /*0x129b7f0*/ SSkin();
        }

        class SArtifact
        {
            /*0x10*/ int artifactid;
            /*0x14*/ int level;

            /*0x12964ac*/ SArtifact();
        }

        class SProfileDecorate
        {
            /*0x10*/ int index;
            /*0x18*/ System.DateTime expire;

            /*0x129a630*/ SProfileDecorate();
        }

        class SFrame
        {
            /*0x10*/ string type;
            /*0x18*/ int index;

            /*0x1298038*/ SFrame();
        }

        class SPveStage
        {
            /*0x10*/ System.Collections.Generic.List<PTShare.Define.SPveStage.SData> difficultys;

            /*0x129f278*/ SPveStage();

            class SData
            {
                /*0x10*/ int lastedgrade;
                /*0x14*/ int score;

                /*0xf9d724*/ SData();
            }
        }

        class SRunHero
        {
            /*0x10*/ int heroid;
            /*0x18*/ System.DateTime time;

            /*0x129f2d0*/ SRunHero();
        }

        class SMiniHousingObj
        {
            /*0x10*/ int housingobjid;
            /*0x14*/ int tableid;

            /*0x12988e0*/ SMiniHousingObj();
        }

        class SHousingObjLocation
        {
            /*0x10*/ int floor;
            /*0x14*/ int layer;
            /*0x18*/ int x;
            /*0x1c*/ int y;
            /*0x20*/ int rot;

            /*0x12988f0*/ SHousingObjLocation();
            /*0x12987d8*/ PTShare.Define.SHousingObjLocation Clone();
        }

        class SHousingObj : PTShare.Define.SMiniHousingObj
        {
            /*0x18*/ int lv;
            /*0x1c*/ int exp;
            /*0x20*/ PTShare.Define.SHousingObjLocation loc;
            /*0x28*/ PTShare.Define.SHousingObjCondition state;
            /*0x30*/ bool locking;

            /*0x12987d0*/ SHousingObj();
            /*0x1298724*/ PTShare.Define.SHousingObj Clone();
        }

        class SHousingObjCondition
        {
            /*0x10*/ int state;
            /*0x18*/ string arg;
            /*0x20*/ System.DateTime time;

            /*0x12988e8*/ SHousingObjCondition();
            /*0x1298864*/ PTShare.Define.SHousingObjCondition Clone();
        }

        class SHousingWaste
        {
            /*0x10*/ int wasteid;
            /*0x14*/ int floor;
            /*0x18*/ System.DateTime time;

            /*0x1298908*/ SHousingWaste();
        }

        class SHousingHero
        {
            /*0x10*/ int floor;
            /*0x14*/ int tableid;

            /*0x129871c*/ SHousingHero();
        }

        class SHousingGoods
        {
            /*0x10*/ int index;
            /*0x14*/ int count;

            /*0x1298714*/ SHousingGoods();
        }

        class SVisitor : PTShare.Define.SPlayer
        {
            /*0x68*/ int dayid;
            /*0x6c*/ int recvstate;
            /*0x70*/ int sendstate;
            /*0x78*/ System.DateTime visittime;

            /*0x129fd84*/ SVisitor();
        }

        class SHousingSaveObj
        {
            /*0x10*/ int housingobjid;
            /*0x14*/ int layer;
            /*0x18*/ int x;
            /*0x1c*/ int y;
            /*0x20*/ int rot;

            /*0x1298900*/ SHousingSaveObj();
        }

        class SHousingSave
        {
            /*0x10*/ int slot;
            /*0x18*/ string name;
            /*0x20*/ string thumb;
            /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHousingSaveObj> housingobjs;

            /*0x12988f8*/ SHousingSave();
        }

        class SHousingEffect
        {
            /*0x10*/ int type;
            /*0x14*/ float value;

            /*0x129870c*/ SHousingEffect();
        }
    }
}

namespace Assets
{
    namespace Scripts
    {
        class ChatComponent : ChatApp.Shared.Hubs.IChatHubReceiver
        {
            /*0x10*/ System.Threading.CancellationTokenSource mShutdownCancellation;
            /*0x18*/ Grpc.Core.ChannelBase mChannel;
            /*0x20*/ ChatApp.Shared.Hubs.IChatHub mStreaming;
            /*0x28*/ bool mLogout;
            /*0x30*/ ChatServerLogger mLogger;

            /*0x132b2bc*/ ChatComponent(ChatServerLogger logger);
            /*0x132b334*/ void OnDestroy();
            /*0x132b3f8*/ bool Logined();
            /*0x132b408*/ System.Threading.Tasks.Task InitializeClientAsync();
            /*0x132b524*/ void RegisterDisconnectEvent(ChatApp.Shared.Hubs.IChatHub streamingClient);
            /*0x132b5f0*/ System.Threading.Tasks.Task ReconnectInitializedServer();
            /*0x132b6f4*/ System.Threading.Tasks.Task ReconnectServerAsync();
            /*0x132b7f8*/ void Login(string token);
            /*0x132b8c0*/ void UpdatePlayer();
            /*0x132b984*/ void Lucky(string nickname, int unitid);
            /*0x1329ee4*/ void MoveLangChannel(int channel);
            /*0x132ba58*/ void GroupChat(string groupid, string msg);
            /*0x132bb2c*/ void PrivateChat(long playerid, string msg);
            /*0x132bc00*/ void AdminNotice(string notice);
            /*0x132bcc8*/ void UpdateGuildWarDefenseDeck(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
            /*0x132bd90*/ System.Threading.Tasks.Task UpdateAllCp(long allcp);
            /*0x132beb0*/ System.Threading.Tasks.Task UpdateArenaCp(long arncp);
            /*0x132bfd0*/ System.Threading.Tasks.Task UpdateWorldArenaCp(long wldcp);
            /*0x132c0f0*/ System.Threading.Tasks.Task UpdateGuildWarCp(long warcp);
            /*0x132c210*/ void ExitPrivate(long playerid);
            /*0x132c2d8*/ void Logout();
            /*0x132c39c*/ void OnLogin(int result, System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.Room> rooms);
            /*0x132c3b8*/ void OnGroupChat(int result, string groupid, ChatApp.Shared.MessagePackObjects.SMessage chat);
            /*0x132c608*/ void OnPrivateChat(int result, ChatApp.Shared.MessagePackObjects.SMessage chat);
            /*0x132c6b8*/ void OnMoveLangChannel(int result, ChatApp.Shared.MessagePackObjects.Room newroom);
            /*0x132c6d4*/ void OnLucky(int unitid, string nickname);
            /*0x132c6e8*/ void OnAdminNotice(string notice);
            /*0x132c6fc*/ void OnUpdatedGuildWarHero(int heroid);

            struct <OnDestroy>d__6 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82b38*/ void MoveNext();
                /*0xa82b40*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <InitializeClientAsync>d__8 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ System.Runtime.CompilerServices.TaskAwaiter<ChatApp.Shared.Hubs.IChatHub> <>u__1;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__2;

                /*0xa82ad4*/ void MoveNext();
                /*0xa82adc*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <RegisterDisconnectEvent>d__9 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ ChatApp.Shared.Hubs.IChatHub streamingClient;
                /*0x40*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x48*/ object <>7__wrap1;
                /*0x50*/ int <>7__wrap2;
                /*0x58*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a074*/ void MoveNext();
                /*0xa8a07c*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <ReconnectInitializedServer>d__10 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a04c*/ void MoveNext();
                /*0xa8a054*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <ReconnectServerAsync>d__11 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ System.Runtime.CompilerServices.TaskAwaiter<ChatApp.Shared.Hubs.IChatHub> <>u__1;

                /*0xa8a060*/ void MoveNext();
                /*0xa8a068*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <Login>d__12 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string token;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82ae8*/ void MoveNext();
                /*0xa82af0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdatePlayer>d__13 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0d8*/ void MoveNext();
                /*0xa8a0e0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <Lucky>d__14 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string nickname;
                /*0x48*/ int unitid;
                /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82b10*/ void MoveNext();
                /*0xa82b18*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <MoveLangChannel>d__15 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ int channel;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82b24*/ void MoveNext();
                /*0xa82b2c*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <GroupChat>d__16 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string groupid;
                /*0x48*/ string msg;
                /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82ac0*/ void MoveNext();
                /*0xa82ac8*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <PrivateChat>d__17 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ long playerid;
                /*0x48*/ string msg;
                /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a038*/ void MoveNext();
                /*0xa8a040*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <AdminNotice>d__18 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ string notice;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82a98*/ void MoveNext();
                /*0xa82aa0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateGuildWarDefenseDeck>d__19 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0c4*/ void MoveNext();
                /*0xa8a0cc*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateAllCp>d__20 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long allcp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a088*/ void MoveNext();
                /*0xa8a090*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateArenaCp>d__21 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long arncp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a09c*/ void MoveNext();
                /*0xa8a0a4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateWorldArenaCp>d__22 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long wldcp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0ec*/ void MoveNext();
                /*0xa8a0f4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <UpdateGuildWarCp>d__23 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
                /*0x30*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x38*/ long warcp;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa8a0b0*/ void MoveNext();
                /*0xa8a0b8*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <ExitPrivate>d__24 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ long playerid;
                /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82aac*/ void MoveNext();
                /*0xa82ab4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }

            struct <Logout>d__25 : System.Runtime.CompilerServices.IAsyncStateMachine
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
                /*0x38*/ Assets.Scripts.ChatComponent <>4__this;
                /*0x40*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

                /*0xa82afc*/ void MoveNext();
                /*0xa82b04*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
            }
        }

        class InitialSettings
        {
            static /*0x15733b8*/ void RegisterResolvers();
            static /*0x15736cc*/ void OnRuntimeInitialize();
            /*0x157383c*/ InitialSettings();
        }

        namespace Server
        {
            class Functions
            {
                static /*0x10a5a04*/ int PveFreeTicketCnt(System.DateTime now, System.DateTime valx, int valy);
                static /*0x10a5b58*/ int StringHash(string str);
                static /*0x10a5bd8*/ int ParseTimeSpan(string data);
                static /*0x10a5e80*/ string ParseTriggerByQuestGroupId(TableData.TableGroup table, string questgroupid);
                static /*0x10a5fbc*/ System.ValueTuple<string, int> ParseTriggerByQuestId(TableData.TableGroup table, string questid);

                class <>c__DisplayClass2_0
                {
                    /*0x10*/ System.Collections.Generic.Dictionary<char, int> table;
                    /*0x18*/ char[] divb;
                    /*0x20*/ int idx;

                    /*0x10a2d34*/ <>c__DisplayClass2_0();
                    /*0x10a2d3c*/ bool <ParseTimeSpan>b__0(char w);
                    /*0x10a2da0*/ int <ParseTimeSpan>b__1(string m);
                }

                class <>c__DisplayClass3_0
                {
                    /*0x10*/ string questgroupid;

                    /*0x10a2e48*/ <>c__DisplayClass3_0();
                    /*0x10a2e50*/ bool <ParseTriggerByQuestGroupId>b__0(TableData.TableData_Questgroup f);
                }

                class <>c__DisplayClass4_0
                {
                    /*0x10*/ string questid;
                    /*0x18*/ TableData.TableData_Queststageclear t9;

                    /*0x10a2e74*/ <>c__DisplayClass4_0();
                    /*0x10a2e7c*/ bool <ParseTriggerByQuestId>b__0(TableData.TableData_Queststageidle d);
                    /*0x10a2ea0*/ bool <ParseTriggerByQuestId>b__1(TableData.TableData_Queststagetry d);
                    /*0x10a2ec4*/ bool <ParseTriggerByQuestId>b__2(TableData.TableData_Questheroupgrade d);
                    /*0x10a2ee8*/ bool <ParseTriggerByQuestId>b__3(TableData.TableData_Questequipupgrade d);
                    /*0x10a2f0c*/ bool <ParseTriggerByQuestId>b__4(TableData.TableData_Questfriend d);
                    /*0x10a2f30*/ bool <ParseTriggerByQuestId>b__5(TableData.TableData_Questgacha d);
                    /*0x10a2f54*/ bool <ParseTriggerByQuestId>b__6(TableData.TableData_Questlabyrinth d);
                    /*0x10a2f78*/ bool <ParseTriggerByQuestId>b__7(TableData.TableData_Questbuy d);
                    /*0x10a2f9c*/ bool <ParseTriggerByQuestId>b__8(TableData.TableData_Questarena d);
                    /*0x10a2fc0*/ bool <ParseTriggerByQuestId>b__9(TableData.TableData_Queststageclear d);
                    /*0x10a2fe4*/ bool <ParseTriggerByQuestId>b__14(TableData.TableData_Stage s);
                    /*0x10a3014*/ bool <ParseTriggerByQuestId>b__15(TableData.TableData_Towernormal s);
                    /*0x10a3044*/ bool <ParseTriggerByQuestId>b__16(TableData.TableData_Towerfire s);
                    /*0x10a3074*/ bool <ParseTriggerByQuestId>b__17(TableData.TableData_Towerwind s);
                    /*0x10a30a4*/ bool <ParseTriggerByQuestId>b__18(TableData.TableData_Towernatural s);
                    /*0x10a30d4*/ bool <ParseTriggerByQuestId>b__19(TableData.TableData_Towerwater s);
                    /*0x10a3104*/ bool <ParseTriggerByQuestId>b__10(TableData.TableData_Questlevel d);
                    /*0x10a3128*/ bool <ParseTriggerByQuestId>b__11(TableData.TableData_Questchapterclear d);
                    /*0x10a314c*/ bool <ParseTriggerByQuestId>b__12(TableData.TableData_Questprizeboard d);
                    /*0x10a3170*/ bool <ParseTriggerByQuestId>b__13(TableData.TableData_Questspirittowerclear d);
                }
            }
        }
    }
}

namespace ChatSystem
{
    class ChannelInfo
    {
        /*0x10*/ PTShare.Define.ChannelType type;
        /*0x18*/ string uniquekey;
        /*0x20*/ string channelname;

        /*0xd6ec9c*/ ChannelInfo(string _channelname);
        /*0xd6eccc*/ ChannelInfo(string _nickname, string _playerid);
    }

    class ChatLog
    {
        /*0x10*/ ChatApp.Shared.MessagePackObjects.SMessage message;
        /*0x18*/ UnityEngine.Vector2 textsize;
        /*0x20*/ UnityEngine.Vector2 backgroundsize;
        /*0x28*/ UnityEngine.Vector2 parentsize;

        /*0x132e03c*/ ChatLog(ChatApp.Shared.MessagePackObjects.SMessage message);
    }

    enum ChannelArgsType
    {
        Channel = 0,
        Nickname = 1,
        End = 2,
    }
}

namespace Atlas
{
    class AtlasComponent<T> : UnityEngine.MonoBehaviour
    {
        /*0x0*/ T m_Component;
        /*0x0*/ string m_strName;
        /*0x0*/ AtlasType m_eAtlasType;
        /*0x0*/ bool m_bInitialized;

        AtlasComponent();
        AtlasType get_AtlasType();
        T get_Parent();
        bool get_IsUseParent();
        void Initialize();
        void Start();
        void OnEnable();
        void OnEnableMethod();
        void OnDisable();
        void OnDisableMethod();
        void SetAtlas(AtlasType _type, string _path);
        void SetType(AtlasType _type);
        void SetColor(UnityEngine.Color _color);
        void SetOpecity(float _opecity);
        void RefreshImage();
        UnityEngine.Sprite GetSprite();
        void SetSprite(UnityEngine.Sprite _sprite);
    }
}

namespace MessagePack
{
    namespace Formatters
    {
        namespace ChatApp
        {
            namespace Shared
            {
                namespace MessagePackObjects
                {
                    class RoomFormatter : MessagePack.Formatters.IMessagePackFormatter<ChatApp.Shared.MessagePackObjects.Room>, MessagePack.Formatters.IMessagePackFormatter
                    {
                        /*0x11ab61c*/ RoomFormatter();
                        /*0x11aa918*/ void Serialize(ref MessagePack.MessagePackWriter writer, ChatApp.Shared.MessagePackObjects.Room value, MessagePack.MessagePackSerializerOptions options);
                        /*0x11ab1f8*/ ChatApp.Shared.MessagePackObjects.Room Deserialize(ref MessagePack.MessagePackReader reader, MessagePack.MessagePackSerializerOptions options);
                    }

                    class SMessageFormatter : MessagePack.Formatters.IMessagePackFormatter<ChatApp.Shared.MessagePackObjects.SMessage>, MessagePack.Formatters.IMessagePackFormatter
                    {
                        /*0x129a2e4*/ SMessageFormatter();
                        /*0x1299ae8*/ void Serialize(ref MessagePack.MessagePackWriter writer, ChatApp.Shared.MessagePackObjects.SMessage value, MessagePack.MessagePackSerializerOptions options);
                        /*0x1299e10*/ ChatApp.Shared.MessagePackObjects.SMessage Deserialize(ref MessagePack.MessagePackReader reader, MessagePack.MessagePackSerializerOptions options);
                    }

                    class WarJoinInfoFormatter : MessagePack.Formatters.IMessagePackFormatter<ChatApp.Shared.MessagePackObjects.WarJoinInfo>, MessagePack.Formatters.IMessagePackFormatter
                    {
                        /*0xdfeaf0*/ WarJoinInfoFormatter();
                        /*0xdfe2b4*/ void Serialize(ref MessagePack.MessagePackWriter writer, ChatApp.Shared.MessagePackObjects.WarJoinInfo value, MessagePack.MessagePackSerializerOptions options);
                        /*0xdfe954*/ ChatApp.Shared.MessagePackObjects.WarJoinInfo Deserialize(ref MessagePack.MessagePackReader reader, MessagePack.MessagePackSerializerOptions options);
                    }
                }
            }
        }
    }

    namespace Resolvers
    {
        class GeneratedResolver : MessagePack.IFormatterResolver
        {
            static /*0x0*/ MessagePack.IFormatterResolver Instance;

            static /*0xed2c1c*/ GeneratedResolver();
            /*0xed2c14*/ GeneratedResolver();
            MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>();

            class FormatterCache<T>
            {
                static /*0x0*/ MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

                static FormatterCache();
            }
        }

        class GeneratedResolverGetFormatterHelper
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<System.Type, int> lookup;

            static /*0xed2c7c*/ GeneratedResolverGetFormatterHelper();
            static /*0xed2e24*/ object GetFormatter(System.Type t);
        }
    }
}

namespace ChatApp
{
    namespace Shared
    {
        namespace MessagePackObjects
        {
            struct WarJoinInfo
            {
                /*0x10*/ long <playerid>k__BackingField;
                /*0x18*/ int <heroid>k__BackingField;
                /*0x20*/ long <cp>k__BackingField;

                /*0xa82b4c*/ long get_playerid();
                /*0xa82b54*/ void set_playerid(long value);
                /*0xa82b5c*/ int get_heroid();
                /*0xa82b64*/ void set_heroid(int value);
                /*0xa82b6c*/ long get_cp();
                /*0xa82b74*/ void set_cp(long value);
            }

            class Room
            {
                /*0x10*/ int <channeltype>k__BackingField;
                /*0x18*/ string <groupid>k__BackingField;
                /*0x20*/ long <toplayerid>k__BackingField;
                /*0x28*/ string <nickname>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.SMessage> <records>k__BackingField;

                /*0x11aa910*/ Room();
                /*0x11aa8c0*/ int get_channeltype();
                /*0x11aa8c8*/ void set_channeltype(int value);
                /*0x11aa8d0*/ string get_groupid();
                /*0x11aa8d8*/ void set_groupid(string value);
                /*0x11aa8e0*/ long get_toplayerid();
                /*0x11aa8e8*/ void set_toplayerid(long value);
                /*0x11aa8f0*/ string get_nickname();
                /*0x11aa8f8*/ void set_nickname(string value);
                /*0x11aa900*/ System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.SMessage> get_records();
                /*0x11aa908*/ void set_records(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.SMessage> value);
            }

            class SMessage
            {
                /*0x10*/ System.DateTime <time>k__BackingField;
                /*0x18*/ long <playerid>k__BackingField;
                /*0x20*/ string <nickname>k__BackingField;
                /*0x28*/ string <profileids>k__BackingField;
                /*0x30*/ string <msg>k__BackingField;

                /*0x1299ae0*/ SMessage();
                /*0x1299a90*/ System.DateTime get_time();
                /*0x1299a98*/ void set_time(System.DateTime value);
                /*0x1299aa0*/ long get_playerid();
                /*0x1299aa8*/ void set_playerid(long value);
                /*0x1299ab0*/ string get_nickname();
                /*0x1299ab8*/ void set_nickname(string value);
                /*0x1299ac0*/ string get_profileids();
                /*0x1299ac8*/ void set_profileids(string value);
                /*0x1299ad0*/ string get_msg();
                /*0x1299ad8*/ void set_msg(string value);
            }
        }

        namespace Hubs
        {
            class ChatHubClient : MagicOnion.Client.StreamingHubClientBase<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, ChatApp.Shared.Hubs.IChatHub, MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, MagicOnion.IStreamingHubMarker, MagicOnion.IServiceMarker
            {
                static /*0x0*/ Grpc.Core.Method<System.Byte[], System.Byte[]> method;
                /*0xc0*/ ChatApp.Shared.Hubs.IChatHub __fireAndForgetClient;

                static /*0x132dea8*/ ChatHubClient();
                /*0x132cd34*/ ChatHubClient(Grpc.Core.CallInvoker callInvoker, string host, Grpc.Core.CallOptions option, MessagePack.MessagePackSerializerOptions serializerOptions, MagicOnion.Client.IMagicOnionClientLogger logger);
                /*0x132ccd0*/ Grpc.Core.Method<System.Byte[], System.Byte[]> get_DuplexStreamingAsyncMethod();
                /*0x132ce1c*/ ChatApp.Shared.Hubs.IChatHub FireAndForget();
                /*0x132ce24*/ void OnBroadcastEvent(int methodId, System.ArraySegment<byte> data);
                /*0x132d5b4*/ void OnResponseEvent(int methodId, object taskCompletionSource, System.ArraySegment<byte> data);
                /*0x132d82c*/ System.Threading.Tasks.Task LoginAsync(string token);
                /*0x132d890*/ System.Threading.Tasks.Task UpdatePlayerAsync();
                /*0x132d91c*/ System.Threading.Tasks.Task LuckyAsync(string nickname, int unitid);
                /*0x132d9bc*/ System.Threading.Tasks.Task MoveLangChannelAsync(int channel);
                /*0x132da20*/ System.Threading.Tasks.Task GroupChatAsync(string groupid, string msg);
                /*0x132dac0*/ System.Threading.Tasks.Task PrivateChatAsync(long playerid, string msg);
                /*0x132db60*/ System.Threading.Tasks.Task AdminNoticeAsync(string notice);
                /*0x132dbc4*/ System.Threading.Tasks.Task UpdateGuildWarDefenseDeckAsync(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
                /*0x132dc28*/ System.Threading.Tasks.Task UpdateAllCpAsync(long allcp);
                /*0x132dc8c*/ System.Threading.Tasks.Task UpdateArenaCpAsync(long arncp);
                /*0x132dcf0*/ System.Threading.Tasks.Task UpdateWorldArenaCpAsync(long wldcp);
                /*0x132dd54*/ System.Threading.Tasks.Task UpdateGuildWarCpAsync(long warcp);
                /*0x132ddb8*/ System.Threading.Tasks.Task ExitPrivateAsync(long playerid);
                /*0x132de1c*/ System.Threading.Tasks.Task LogoutAsync();
                /*0x132dfa4*/ System.Threading.Tasks.Task MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub,ChatApp.Shared.Hubs.IChatHubReceiver>.DisposeAsync();
                /*0x132dff0*/ System.Threading.Tasks.Task MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub,ChatApp.Shared.Hubs.IChatHubReceiver>.WaitForDisconnect();

                class FireAndForgetClient : ChatApp.Shared.Hubs.IChatHub, MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, MagicOnion.IStreamingHubMarker, MagicOnion.IServiceMarker
                {
                    /*0x10*/ ChatApp.Shared.Hubs.ChatHubClient __parent;

                    /*0x106d74c*/ FireAndForgetClient(ChatApp.Shared.Hubs.ChatHubClient parentClient);
                    /*0x106d778*/ ChatApp.Shared.Hubs.IChatHub FireAndForget();
                    /*0x106d7b8*/ System.Threading.Tasks.Task DisposeAsync();
                    /*0x106d7f8*/ System.Threading.Tasks.Task WaitForDisconnect();
                    /*0x106d838*/ System.Threading.Tasks.Task LoginAsync(string token);
                    /*0x106d8a4*/ System.Threading.Tasks.Task UpdatePlayerAsync();
                    /*0x106d93c*/ System.Threading.Tasks.Task LuckyAsync(string nickname, int unitid);
                    /*0x106d9e8*/ System.Threading.Tasks.Task MoveLangChannelAsync(int channel);
                    /*0x106da54*/ System.Threading.Tasks.Task GroupChatAsync(string groupid, string msg);
                    /*0x106db00*/ System.Threading.Tasks.Task PrivateChatAsync(long playerid, string msg);
                    /*0x106dbac*/ System.Threading.Tasks.Task AdminNoticeAsync(string notice);
                    /*0x106dc18*/ System.Threading.Tasks.Task UpdateGuildWarDefenseDeckAsync(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
                    /*0x106dc84*/ System.Threading.Tasks.Task UpdateAllCpAsync(long allcp);
                    /*0x106dcf0*/ System.Threading.Tasks.Task UpdateArenaCpAsync(long arncp);
                    /*0x106dd5c*/ System.Threading.Tasks.Task UpdateWorldArenaCpAsync(long wldcp);
                    /*0x106ddc8*/ System.Threading.Tasks.Task UpdateGuildWarCpAsync(long warcp);
                    /*0x106de34*/ System.Threading.Tasks.Task ExitPrivateAsync(long playerid);
                    /*0x106dea0*/ System.Threading.Tasks.Task LogoutAsync();
                }
            }

            interface IChatHub : MagicOnion.IStreamingHub<ChatApp.Shared.Hubs.IChatHub, ChatApp.Shared.Hubs.IChatHubReceiver>, MagicOnion.IStreamingHubMarker, MagicOnion.IServiceMarker
            {
                System.Threading.Tasks.Task LoginAsync(string token);
                System.Threading.Tasks.Task UpdatePlayerAsync();
                System.Threading.Tasks.Task LuckyAsync(string nickname, int unitid);
                System.Threading.Tasks.Task MoveLangChannelAsync(int channel);
                System.Threading.Tasks.Task GroupChatAsync(string groupid, string msg);
                System.Threading.Tasks.Task PrivateChatAsync(long playerid, string msg);
                System.Threading.Tasks.Task AdminNoticeAsync(string notice);
                System.Threading.Tasks.Task UpdateGuildWarDefenseDeckAsync(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.WarJoinInfo> decks);
                System.Threading.Tasks.Task UpdateAllCpAsync(long allcp);
                System.Threading.Tasks.Task UpdateArenaCpAsync(long arncp);
                System.Threading.Tasks.Task UpdateWorldArenaCpAsync(long wldcp);
                System.Threading.Tasks.Task UpdateGuildWarCpAsync(long warcp);
                System.Threading.Tasks.Task ExitPrivateAsync(long playerid);
                System.Threading.Tasks.Task LogoutAsync();
            }

            interface IChatHubReceiver
            {
                void OnLogin(int result, System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.Room> rooms);
                void OnGroupChat(int result, string groupid, ChatApp.Shared.MessagePackObjects.SMessage chat);
                void OnPrivateChat(int result, ChatApp.Shared.MessagePackObjects.SMessage chat);
                void OnMoveLangChannel(int result, ChatApp.Shared.MessagePackObjects.Room newroom);
                void OnLucky(int unitid, string nickname);
                void OnAdminNotice(string notice);
                void OnUpdatedGuildWarHero(int heroid);
            }
        }
    }
}

namespace MagicOnion
{
    class MagicOnionInitializer
    {
        static /*0x0*/ bool isRegistered;

        static /*0xdde4fc*/ MagicOnionInitializer();
        static /*0xdde35c*/ void Register();

        class <>c
        {
            static /*0x0*/ MagicOnion.MagicOnionInitializer.<> <>9;
            static /*0x8*/ System.Func<Grpc.Core.CallInvoker, ChatApp.Shared.Hubs.IChatHubReceiver, string, Grpc.Core.CallOptions, MessagePack.MessagePackSerializerOptions, MagicOnion.Client.IMagicOnionClientLogger, ChatApp.Shared.Hubs.IChatHub> <>9__1_0;

            static /*0xe5c4ec*/ <>c();
            /*0xe5c54c*/ <>c();
            /*0xe5c554*/ ChatApp.Shared.Hubs.IChatHub <Register>b__1_0(Grpc.Core.CallInvoker a, ChatApp.Shared.Hubs.IChatHubReceiver _, string b, Grpc.Core.CallOptions c, MessagePack.MessagePackSerializerOptions d, MagicOnion.Client.IMagicOnionClientLogger e);
        }
    }

    namespace Resolvers
    {
        class MagicOnionResolver : MessagePack.IFormatterResolver
        {
            static /*0x0*/ MessagePack.IFormatterResolver Instance;

            static /*0xdde508*/ MagicOnionResolver();
            /*0xdde500*/ MagicOnionResolver();
            MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>();

            class FormatterCache<T>
            {
                static /*0x0*/ MessagePack.Formatters.IMessagePackFormatter<T> formatter;

                static FormatterCache();
            }
        }

        class MagicOnionResolverGetFormatterHelper
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<System.Type, int> lookup;

            static /*0xdde568*/ MagicOnionResolverGetFormatterHelper();
            static /*0xdde848*/ object GetFormatter(System.Type t);
        }
    }
}

namespace TableData
{
    class TableGroup
    {
        /*0x10*/ TableData.AbilityGradeTable AbilityGradeTable;
        /*0x18*/ TableData.AbilityOptionValueTable AbilityOptionValueTable;
        /*0x20*/ TableData.AbilityPercentTable AbilityPercentTable;
        /*0x28*/ TableData.AbilityResetTable AbilityResetTable;
        /*0x30*/ TableData.BattleCampaignTable BattleCampaignTable;
        /*0x38*/ TableData.BattleDungeonTable BattleDungeonTable;
        /*0x40*/ TableData.BattleGuildbossTable BattleGuildbossTable;
        /*0x48*/ TableData.BattleHardCampaignTable BattleHardCampaignTable;
        /*0x50*/ TableData.BattleIdleTable BattleIdleTable;
        /*0x58*/ TableData.BattleTowerTable BattleTowerTable;
        /*0x60*/ TableData.BattleTutorialTable BattleTutorialTable;
        /*0x68*/ TableData.BountyLVTable BountyLVTable;
        /*0x70*/ TableData.BountyQuestTable BountyQuestTable;
        /*0x78*/ TableData.MenuSettingBaseTable MenuSettingBaseTable;
        /*0x80*/ TableData.ProductDataTable ProductDataTable;
        /*0x88*/ TableData.TriggerDataTable TriggerDataTable;
        /*0x90*/ TableData.ConfigTable ConfigTable;
        /*0x98*/ TableData.FBEventLogTable FBEventLogTable;
        /*0xa0*/ TableData.ArenaTable ArenaTable;
        /*0xa8*/ TableData.ArenaRankTable ArenaRankTable;
        /*0xb0*/ TableData.ChapterTable ChapterTable;
        /*0xb8*/ TableData.ChestTable ChestTable;
        /*0xc0*/ TableData.ContentHelpTable ContentHelpTable;
        /*0xc8*/ TableData.ContentUnlockTable ContentUnlockTable;
        /*0xd0*/ TableData.EmoticonTable EmoticonTable;
        /*0xd8*/ TableData.FastIdleTable FastIdleTable;
        /*0xe0*/ TableData.FriendTable FriendTable;
        /*0xe8*/ TableData.GachaTable GachaTable;
        /*0xf0*/ TableData.GachaBonusTable GachaBonusTable;
        /*0xf8*/ TableData.GachaDropPatternTable GachaDropPatternTable;
        /*0x100*/ TableData.GachaUnitPercentTable GachaUnitPercentTable;
        /*0x108*/ TableData.HardChapterTable HardChapterTable;
        /*0x110*/ TableData.HardStageTable HardStageTable;
        /*0x118*/ TableData.HeroLvSyncTable HeroLvSyncTable;
        /*0x120*/ TableData.IdleUnitTipDialogTable IdleUnitTipDialogTable;
        /*0x128*/ TableData.ItemTable ItemTable;
        /*0x130*/ TableData.MazeBattleTable MazeBattleTable;
        /*0x138*/ TableData.MazeCourseTable MazeCourseTable;
        /*0x140*/ TableData.MazeMateEquipTable MazeMateEquipTable;
        /*0x148*/ TableData.ProfileSkinTable ProfileSkinTable;
        /*0x150*/ TableData.StageTable StageTable;
        /*0x158*/ TableData.StageIdleTable StageIdleTable;
        /*0x160*/ TableData.SystemBasicTable SystemBasicTable;
        /*0x168*/ TableData.TowerTable TowerTable;
        /*0x170*/ TableData.TowerFireTable TowerFireTable;
        /*0x178*/ TableData.TowerNaturalTable TowerNaturalTable;
        /*0x180*/ TableData.TowerNormalTable TowerNormalTable;
        /*0x188*/ TableData.TowerWaterTable TowerWaterTable;
        /*0x190*/ TableData.TowerWindTable TowerWindTable;
        /*0x198*/ TableData.TutorialTable TutorialTable;
        /*0x1a0*/ TableData.TutorialBattleHeroTable TutorialBattleHeroTable;
        /*0x1a8*/ TableData.UserLvExpTable UserLvExpTable;
        /*0x1b0*/ TableData.VipTable VipTable;
        /*0x1b8*/ TableData.GuildTable GuildTable;
        /*0x1c0*/ TableData.GuildBossTable GuildBossTable;
        /*0x1c8*/ TableData.GuildHuntingRewardTable GuildHuntingRewardTable;
        /*0x1d0*/ TableData.GuildLevelTable GuildLevelTable;
        /*0x1d8*/ TableData.GuildWarTable GuildWarTable;
        /*0x1e0*/ TableData.GuildWarOrganizeTable GuildWarOrganizeTable;
        /*0x1e8*/ TableData.GuildWarPointTable GuildWarPointTable;
        /*0x1f0*/ TableData.GuildWarRankTable GuildWarRankTable;
        /*0x1f8*/ TableData.GuildWarRankGroupTable GuildWarRankGroupTable;
        /*0x200*/ TableData.GuildWarRankRewardTable GuildWarRankRewardTable;
        /*0x208*/ TableData.GuildWarTacticTable GuildWarTacticTable;
        /*0x210*/ TableData.GuildWasteTable GuildWasteTable;
        /*0x218*/ TableData.HighDropRateTable HighDropRateTable;
        /*0x220*/ TableData.HighGachaTable HighGachaTable;
        /*0x228*/ TableData.RevertTable RevertTable;
        /*0x230*/ TableData.TrainingRoomTable TrainingRoomTable;
        /*0x238*/ TableData.WorldArenaTable WorldArenaTable;
        /*0x240*/ TableData.WorldArenaChampRewardTable WorldArenaChampRewardTable;
        /*0x248*/ TableData.WorldArenaMatchingPointTable WorldArenaMatchingPointTable;
        /*0x250*/ TableData.WorldArenaTierTable WorldArenaTierTable;
        /*0x258*/ TableData.DungeonTable DungeonTable;
        /*0x260*/ TableData.DungeonDialogTable DungeonDialogTable;
        /*0x268*/ TableData.DungeonDialogDirectionTable DungeonDialogDirectionTable;
        /*0x270*/ TableData.DungeonGroupTable DungeonGroupTable;
        /*0x278*/ TableData.DungeonMapTable DungeonMapTable;
        /*0x280*/ TableData.DungeonMateEquipTable DungeonMateEquipTable;
        /*0x288*/ TableData.DungeonRewardTable DungeonRewardTable;
        /*0x290*/ TableData.DungeonSettingTable DungeonSettingTable;
        /*0x298*/ TableData.DungeonTileTable DungeonTileTable;
        /*0x2a0*/ TableData.EventTable EventTable;
        /*0x2a8*/ TableData.EventAttendanceTable EventAttendanceTable;
        /*0x2b0*/ TableData.EventBossTable EventBossTable;
        /*0x2b8*/ TableData.EventBossRewardTable EventBossRewardTable;
        /*0x2c0*/ TableData.EventBuyInAppTable EventBuyInAppTable;
        /*0x2c8*/ TableData.EventCompleteTable EventCompleteTable;
        /*0x2d0*/ TableData.EventCompleteMissionTable EventCompleteMissionTable;
        /*0x2d8*/ TableData.EventCurrencyLocalTable EventCurrencyLocalTable;
        /*0x2e0*/ TableData.EventExchangeTable EventExchangeTable;
        /*0x2e8*/ TableData.EventGroupTable EventGroupTable;
        /*0x2f0*/ TableData.EventHotTimeTable EventHotTimeTable;
        /*0x2f8*/ TableData.EventMissionTable EventMissionTable;
        /*0x300*/ TableData.EventMissionPointTable EventMissionPointTable;
        /*0x308*/ TableData.EventPageTable EventPageTable;
        /*0x310*/ TableData.EventPassTable EventPassTable;
        /*0x318*/ TableData.EventPassRewardTable EventPassRewardTable;
        /*0x320*/ TableData.EventPresetTable EventPresetTable;
        /*0x328*/ TableData.EventQuestTable EventQuestTable;
        /*0x330*/ TableData.EventQuestGroupTable EventQuestGroupTable;
        /*0x338*/ TableData.EventRouletteTable EventRouletteTable;
        /*0x340*/ TableData.EventSelectTable EventSelectTable;
        /*0x348*/ TableData.EventSingleTable EventSingleTable;
        /*0x350*/ TableData.EventTimeSectionTable EventTimeSectionTable;
        /*0x358*/ TableData.FurnitureTable FurnitureTable;
        /*0x360*/ TableData.FurnitureContentsEffectTable FurnitureContentsEffectTable;
        /*0x368*/ TableData.FurnitureEffectTypeTable FurnitureEffectTypeTable;
        /*0x370*/ TableData.FurnitureExpTable FurnitureExpTable;
        /*0x378*/ TableData.FurnitureHeroEffectTable FurnitureHeroEffectTable;
        /*0x380*/ TableData.FurnitureLevelTypeListTable FurnitureLevelTypeListTable;
        /*0x388*/ TableData.FurnitureLevelupTable FurnitureLevelupTable;
        /*0x390*/ TableData.FurnitureSetTable FurnitureSetTable;
        /*0x398*/ TableData.FurnitureShopTable FurnitureShopTable;
        /*0x3a0*/ TableData.FurnitureShopListTable FurnitureShopListTable;
        /*0x3a8*/ TableData.HousingTable HousingTable;
        /*0x3b0*/ TableData.HousingDismissTable HousingDismissTable;
        /*0x3b8*/ TableData.HousingFloorTable HousingFloorTable;
        /*0x3c0*/ TableData.HousingFloorPatternTable HousingFloorPatternTable;
        /*0x3c8*/ TableData.HousingGachaTable HousingGachaTable;
        /*0x3d0*/ TableData.AdvanceEquipTable AdvanceEquipTable;
        /*0x3d8*/ TableData.ArtifactTable ArtifactTable;
        /*0x3e0*/ TableData.BasicTable BasicTable;
        /*0x3e8*/ TableData.BuffTable BuffTable;
        /*0x3f0*/ TableData.DemoDataTable DemoDataTable;
        /*0x3f8*/ TableData.EnhanceEquipTable EnhanceEquipTable;
        /*0x400*/ TableData.EquipmentTable EquipmentTable;
        /*0x408*/ TableData.FactionBuffTable FactionBuffTable;
        /*0x410*/ TableData.SkillBaseTable SkillBaseTable;
        /*0x418*/ TableData.SkillDescTable SkillDescTable;
        /*0x420*/ TableData.SkillExtraTable SkillExtraTable;
        /*0x428*/ TableData.SkillFXTable SkillFXTable;
        /*0x430*/ TableData.SkillLVTable SkillLVTable;
        /*0x438*/ TableData.UnitBaseTable UnitBaseTable;
        /*0x440*/ TableData.UnitGradeTable UnitGradeTable;
        /*0x448*/ TableData.UnitGradeLVTable UnitGradeLVTable;
        /*0x450*/ TableData.UnitLVTable UnitLVTable;
        /*0x458*/ TableData.UnitTierTable UnitTierTable;
        /*0x460*/ TableData.UnitTierLVTable UnitTierLVTable;
        /*0x468*/ TableData.PveChallengeTable PveChallengeTable;
        /*0x470*/ TableData.PveClearRewardTable PveClearRewardTable;
        /*0x478*/ TableData.PveNoblityTable PveNoblityTable;
        /*0x480*/ TableData.QuestTable QuestTable;
        /*0x488*/ TableData.QuestArenaTable QuestArenaTable;
        /*0x490*/ TableData.QuestBuyTable QuestBuyTable;
        /*0x498*/ TableData.QuestChapterClearTable QuestChapterClearTable;
        /*0x4a0*/ TableData.QuestEquipUpgradeTable QuestEquipUpgradeTable;
        /*0x4a8*/ TableData.QuestFriendTable QuestFriendTable;
        /*0x4b0*/ TableData.QuestGachaTable QuestGachaTable;
        /*0x4b8*/ TableData.QuestGetItemTable QuestGetItemTable;
        /*0x4c0*/ TableData.QuestGroupTable QuestGroupTable;
        /*0x4c8*/ TableData.QuestHeroGetTable QuestHeroGetTable;
        /*0x4d0*/ TableData.QuestHeroUpgradeTable QuestHeroUpgradeTable;
        /*0x4d8*/ TableData.QuestLabyrinthTable QuestLabyrinthTable;
        /*0x4e0*/ TableData.QuestLevelTable QuestLevelTable;
        /*0x4e8*/ TableData.QuestMoveTable QuestMoveTable;
        /*0x4f0*/ TableData.QuestPrizeBoardTable QuestPrizeBoardTable;
        /*0x4f8*/ TableData.QuestPropertyPointTable QuestPropertyPointTable;
        /*0x500*/ TableData.QuestResonanceTable QuestResonanceTable;
        /*0x508*/ TableData.QuestSpiritTowerClearTable QuestSpiritTowerClearTable;
        /*0x510*/ TableData.QuestStageClearTable QuestStageClearTable;
        /*0x518*/ TableData.QuestStageIdleTable QuestStageIdleTable;
        /*0x520*/ TableData.QuestStageTryTable QuestStageTryTable;
        /*0x528*/ TableData.RaceAccelTable RaceAccelTable;
        /*0x530*/ TableData.RaceRewardTable RaceRewardTable;
        /*0x538*/ TableData.RaceTileTable RaceTileTable;
        /*0x540*/ TableData.RelationTable RelationTable;
        /*0x548*/ TableData.RunLifeTable RunLifeTable;
        /*0x550*/ TableData.RunRewardTable RunRewardTable;
        /*0x558*/ TableData.CashShopBeginnerTable CashShopBeginnerTable;
        /*0x560*/ TableData.CashShopDailyTable CashShopDailyTable;
        /*0x568*/ TableData.CashShopHeroTable CashShopHeroTable;
        /*0x570*/ TableData.CashShopIndexTable CashShopIndexTable;
        /*0x578*/ TableData.CashShopInstantTable CashShopInstantTable;
        /*0x580*/ TableData.CashShopLimitTable CashShopLimitTable;
        /*0x588*/ TableData.CashShopMonthlyTable CashShopMonthlyTable;
        /*0x590*/ TableData.CashShopQuestTable CashShopQuestTable;
        /*0x598*/ TableData.CashShopQuestRewardTable CashShopQuestRewardTable;
        /*0x5a0*/ TableData.CashShopSkinTable CashShopSkinTable;
        /*0x5a8*/ TableData.CashShopSkinPieceTable CashShopSkinPieceTable;
        /*0x5b0*/ TableData.CashShopStarTable CashShopStarTable;
        /*0x5b8*/ TableData.CashShopSubscriptionTable CashShopSubscriptionTable;
        /*0x5c0*/ TableData.CashShopWeeklyTable CashShopWeeklyTable;
        /*0x5c8*/ TableData.ContentShopTable ContentShopTable;
        /*0x5d0*/ TableData.ContentShopArrangementTable ContentShopArrangementTable;
        /*0x5d8*/ TableData.PackageProductGroupTable PackageProductGroupTable;
        /*0x5e0*/ TableData.PackageTimeTable PackageTimeTable;
        /*0x5e8*/ TableData.SkinBasicTable SkinBasicTable;
        /*0x5f0*/ TableData.VoiceTable VoiceTable;
        /*0x5f8*/ TableData.ArenaConfigTable ArenaConfigTable;
        /*0x600*/ TableData.WorldArenaTier2Table WorldArenaTier2Table;
        /*0x608*/ TableData.WorldBossMissionTable WorldBossMissionTable;
        /*0x610*/ TableData.WorldBossStepTable WorldBossStepTable;

        /*0xc9f480*/ TableGroup();
    }

    class CSVTableReader
    {
        static /*0x0*/ string mPath;
        static /*0x8*/ string mTraceMessage;

        static /*0x1340dc4*/ void SetPath(string path);
        static /*0x1340e14*/ string TraceMessage();
        static /*0x1340e60*/ void Read_Resource(string file, System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func);
        static /*0x1340f04*/ void Read(string file, System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func, bool resources);

        class ParseBool : System.MulticastDelegate
        {
            /*0xda5884*/ ParseBool(object object, nint method);
            /*0xda58e4*/ bool Invoke(string v);
            /*0xda5c68*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda5c8c*/ bool EndInvoke(System.IAsyncResult result);
        }

        class ParseInt : System.MulticastDelegate
        {
            /*0xda60e8*/ ParseInt(object object, nint method);
            /*0xda6148*/ int Invoke(string v);
            /*0xda64c8*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda64ec*/ int EndInvoke(System.IAsyncResult result);
        }

        class ParseLong : System.MulticastDelegate
        {
            /*0xda6518*/ ParseLong(object object, nint method);
            /*0xda6578*/ long Invoke(string v);
            /*0xda68f8*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda691c*/ long EndInvoke(System.IAsyncResult result);
        }

        class ParseFloat : System.MulticastDelegate
        {
            /*0xda5cb8*/ ParseFloat(object object, nint method);
            /*0xda5d18*/ float Invoke(string v);
            /*0xda6098*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda60bc*/ float EndInvoke(System.IAsyncResult result);
        }

        class ParseString : System.MulticastDelegate
        {
            /*0xda6948*/ ParseString(object object, nint method);
            /*0xda69a8*/ string Invoke(string v);
            /*0xda6d28*/ System.IAsyncResult BeginInvoke(string v, System.AsyncCallback callback, object object);
            /*0xda6d4c*/ string EndInvoke(System.IAsyncResult result);
        }

        class Reader
        {
            /*0x10*/ string <CsvFileName>k__BackingField;
            /*0x18*/ int <Row>k__BackingField;
            /*0x20*/ string <ColName>k__BackingField;

            /*0xda74e4*/ Reader();
            /*0xda6d58*/ string get_CsvFileName();
            /*0xda6d60*/ void set_CsvFileName(string value);
            /*0xda6d68*/ int get_Row();
            /*0xda6d70*/ void set_Row(int value);
            /*0xda6d78*/ string get_ColName();
            /*0xda6d80*/ void set_ColName(string value);
            /*0xda6d88*/ string TraceMessage();
            /*0xda6e1c*/ void Read(string file, System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func, bool resources);

            class <>c__DisplayClass13_0
            {
                /*0x10*/ TableData.CSVTableReader.Reader <>4__this;
                /*0x18*/ int colcnt;
                /*0x20*/ System.Action<TableData.CSVTableReader.ParseString, TableData.CSVTableReader.ParseInt, TableData.CSVTableReader.ParseBool, TableData.CSVTableReader.ParseLong, TableData.CSVTableReader.ParseFloat> func;

                /*0xd8f64c*/ <>c__DisplayClass13_0();
                /*0xd8f654*/ void <Read>g__ParseRow|0(System.Func<int, System.ValueTuple<string, string>> kvfunc);
            }

            class <>c__DisplayClass13_1
            {
                /*0x10*/ System.Collections.Generic.List<System.String[]> filedat;
                /*0x18*/ TableData.CSVTableReader.Reader.<> CS$<>8__locals1;

                /*0xd8fbb8*/ <>c__DisplayClass13_1();
                /*0xd8fbc0*/ System.ValueTuple<string, string> <Read>b__1(int p);
            }

            class <>c__DisplayClass13_2
            {
                /*0x10*/ CsvHelper.CsvReader csv;

                /*0xd8fce4*/ <>c__DisplayClass13_2();
                /*0xd8fcec*/ System.ValueTuple<string, string> <Read>b__2(int p);
            }

            class <>c__DisplayClass13_3
            {
                /*0x10*/ System.Collections.Generic.Dictionary<string, string> smap;
                /*0x18*/ System.Collections.Generic.Dictionary<string, int> imap;
                /*0x20*/ System.Collections.Generic.Dictionary<string, bool> bmap;
                /*0x28*/ System.Collections.Generic.Dictionary<string, long> lmap;
                /*0x30*/ System.Collections.Generic.Dictionary<string, float> fmap;
                /*0x38*/ TableData.CSVTableReader.Reader.<> CS$<>8__locals2;

                /*0xd8fbb0*/ <>c__DisplayClass13_3();
                /*0xd8fdbc*/ string <Read>b__3(string s);
                /*0xd8fe34*/ int <Read>b__4(string i);
                /*0xd8feac*/ bool <Read>b__5(string b);
                /*0xd8ff24*/ long <Read>b__6(string l);
                /*0xd8ff9c*/ float <Read>b__7(string f);
            }
        }
    }

    class TableData_Abilitypercent
    {
        /*0x10*/ int index;
        /*0x18*/ string AbilityOptionID;
        /*0x20*/ string AbilityName;
        /*0x28*/ float AbilityAGrade;
        /*0x2c*/ float AbilitySGrade;
        /*0x30*/ float AbilitySSGrade;
        /*0x34*/ float AbilitySSSGrade;

        /*0xc9eea0*/ TableData_Abilitypercent();
    }

    class AbilityPercentTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> List;

        /*0x12065a8*/ AbilityPercentTable();
        /*0x12066a0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Abilityoptionvalue
    {
        /*0x10*/ int index;
        /*0x18*/ string AbilityValueType;
        /*0x20*/ string AbilityOptionID;
        /*0x28*/ string AbilityGrade;
        /*0x30*/ int ValueIndex;
        /*0x34*/ int AbilityValueCondition;
        /*0x38*/ float AbilityValue;
        /*0x3c*/ float AbilityValuePercent;

        /*0xc9ee98*/ TableData_Abilityoptionvalue();
    }

    class AbilityOptionValueTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> List;

        /*0x1205118*/ AbilityOptionValueTable();
        /*0x1205210*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Abilitygrade
    {
        /*0x10*/ string AbilityGrade;
        /*0x18*/ string OptionGrade;
        /*0x20*/ float OptionSlot1;
        /*0x24*/ float OptionSlot2;
        /*0x28*/ float OptionSlot3;

        /*0xc9ee90*/ TableData_Abilitygrade();
    }

    class AbilityGradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilitygrade> List;

        /*0x12029b4*/ AbilityGradeTable();
        /*0x1202aac*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Abilityreset
    {
        /*0x10*/ string AbilityGrade;
        /*0x18*/ int GoldCost;
        /*0x1c*/ int StarCost;
        /*0x20*/ bool OptionLock;
        /*0x24*/ int OptionLock1CostGold;
        /*0x28*/ int OptionLock1CostStar;
        /*0x2c*/ int OptionLock2CostGold;
        /*0x30*/ int OptionLock2CostStar;
        /*0x34*/ float OptionUpgradePercent;

        /*0xc9eea8*/ TableData_Abilityreset();
    }

    class AbilityResetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Abilityreset> List;

        /*0x1209bbc*/ AbilityResetTable();
        /*0x1209cb4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Stagebattle
    {
        /*0x10*/ int Index;
        /*0x18*/ string StageName;
        /*0x20*/ float UnlockCP;
        /*0x28*/ string BattleType;
        /*0x30*/ int BossPOS;
        /*0x34*/ float BossSizeUp;
        /*0x38*/ int BossAddHP;
        /*0x3c*/ int BossAddDMG;
        /*0x40*/ int MonsterAddHP;
        /*0x44*/ int MonsterAddDMG;
        /*0x48*/ float EnemyAddMP_CF;
        /*0x4c*/ int HeroINIT_MP;
        /*0x50*/ float HeroINIT_MP_CF;
        /*0x58*/ string FG_IMG;
        /*0x60*/ string BG_IMG;
        /*0x68*/ string ENV_IMG;
        /*0x70*/ bool CorrectionApply;
        /*0x78*/ long View_Cp;
        /*0x80*/ int[] EnemyN_ID;
        /*0x88*/ int[] EnemyN_Grade;
        /*0x90*/ int[] EnemyN_Tier;
        /*0x98*/ int[] EnemyN_LV;
        /*0xa0*/ int[] EnemyN_MP;
        /*0xa8*/ int[] EnemyN_INITBuff;
        /*0xb0*/ int[] Enemy1_EquipN;
        /*0xb8*/ int[] Enemy2_EquipN;
        /*0xc0*/ int[] Enemy3_EquipN;
        /*0xc8*/ int[] Enemy4_EquipN;
        /*0xd0*/ int[] Enemy5_EquipN;
        /*0xd8*/ int[] ViewEnemyN_LV;

        /*0xc9eee8*/ TableData_Stagebattle();
    }

    class TableData_Battlecampaign : TableData.TableData_Stagebattle
    {
        /*0xc9eee0*/ TableData_Battlecampaign();
    }

    class BattleCampaignTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battlecampaign> List;

        /*0xf8930c*/ BattleCampaignTable();
        /*0xf89404*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battlehardcampaign : TableData.TableData_Stagebattle
    {
        /*0xc9ef00*/ TableData_Battlehardcampaign();
    }

    class BattleHardCampaignTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battlehardcampaign> List;

        /*0xe30ee0*/ BattleHardCampaignTable();
        /*0xe30fd8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battletower : TableData.TableData_Stagebattle
    {
        /*0xc9ef10*/ TableData_Battletower();
    }

    class BattleTowerTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battletower> List;

        /*0x1360358*/ BattleTowerTable();
        /*0x1360450*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battledungeon : TableData.TableData_Stagebattle
    {
        /*0xc9eef0*/ TableData_Battledungeon();
    }

    class BattleDungeonTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battledungeon> List;

        /*0xf8a4a0*/ BattleDungeonTable();
        /*0xf8a598*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battleidle : TableData.TableData_Stagebattle
    {
        /*0xc9ef08*/ TableData_Battleidle();
    }

    class BattleIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battleidle> List;

        /*0xe31fb0*/ BattleIdleTable();
        /*0xe320a8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battletutorial : TableData.TableData_Stagebattle
    {
        /*0xc9ef18*/ TableData_Battletutorial();
    }

    class BattleTutorialTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battletutorial> List;

        /*0x136141c*/ BattleTutorialTable();
        /*0x1361514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Battleguildboss : TableData.TableData_Stagebattle
    {
        /*0xc9eef8*/ TableData_Battleguildboss();
    }

    class BattleGuildbossTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Battleguildboss> List;

        /*0xe2ff94*/ BattleGuildbossTable();
        /*0xe3008c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Bountylv
    {
        /*0x10*/ int LV;
        /*0x14*/ int Quest_STAR6;
        /*0x18*/ int Quest_STAR5;
        /*0x1c*/ int Quest_STAR4;
        /*0x20*/ int Quest_STAR3;
        /*0x24*/ int Quest_STAR2;
        /*0x28*/ int Quest_STAR1;
        /*0x2c*/ int C_RewardDust;
        /*0x30*/ int C_RewardGold;
        /*0x34*/ int C_RewardSoul;
        /*0x38*/ int C_RewardStar;
        /*0x3c*/ int Lvup_SoloStar;
        /*0x40*/ int Lvup_SoloQty;
        /*0x44*/ int Lvup_TeamStar;
        /*0x48*/ int Lvup_TeamQty;
        /*0x50*/ string Lvup_Desc;
        /*0x58*/ string Lvup_SoloCond;
        /*0x60*/ string Lvup_TeamCond;

        /*0xc9ef20*/ TableData_Bountylv();
    }

    class BountyLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Bountylv> List;

        /*0x136d3b0*/ BountyLVTable();
        /*0x136d4a8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Bountyquest
    {
        /*0x10*/ int Index;
        /*0x18*/ string BountyType;
        /*0x20*/ int Star;
        /*0x28*/ string Reward;
        /*0x30*/ int SpendTime;
        /*0x34*/ int StarUnitQty;
        /*0x38*/ int Faction1Qty;
        /*0x3c*/ int Faction2Qty;

        /*0xc9ef28*/ TableData_Bountyquest();
    }

    class BountyQuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Bountyquest> List;

        /*0x16ee2ec*/ BountyQuestTable();
        /*0x16ee3e4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Menusettingbase
    {
        /*0x10*/ int Index;
        /*0x18*/ string Key;
        /*0x20*/ string Name;
        /*0x28*/ string AssBundle;
        /*0x30*/ string Icon;
        /*0x38*/ string Component;
        /*0x40*/ string RedDotComponent;
        /*0x48*/ bool HotIcon;

        /*0xc9f260*/ TableData_Menusettingbase();
    }

    class MenuSettingBaseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Menusettingbase> List;

        /*0x2b3b71c*/ MenuSettingBaseTable();
        /*0x2b3b814*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Productdata
    {
        /*0x10*/ int Index;
        /*0x18*/ string ConsumeType;
        /*0x20*/ string Product;

        /*0xc9f278*/ TableData_Productdata();
    }

    class ProductDataTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Productdata> List;

        /*0x100e130*/ ProductDataTable();
        /*0x100e228*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Triggerdata
    {
        /*0x10*/ string Trigger;
        /*0x18*/ string Main;
        /*0x20*/ string Sub;
        /*0x28*/ string UsedParam;
        /*0x30*/ int OutMissionCountParam;
        /*0x38*/ string Title;
        /*0x40*/ string Desc;
        /*0x48*/ string GTE_Title;
        /*0x50*/ string GTE_Desc;
        /*0x58*/ string UnlockContent;
        /*0x60*/ string MoveContentsType;

        /*0xc9f3e8*/ TableData_Triggerdata();
    }

    class TriggerDataTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Triggerdata> List;

        /*0x1120b3c*/ TriggerDataTable();
        /*0x1120c34*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Config
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9efb8*/ TableData_Config();
    }

    class ConfigTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Config> List;

        /*0x10e83c8*/ ConfigTable();
        /*0x10e84c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Fbeventlog
    {
        /*0x10*/ string type;
        /*0x18*/ string typeValue;
        /*0x20*/ string key;
        /*0x28*/ bool isSameKeyValue;

        /*0xc9f110*/ TableData_Fbeventlog();
    }

    class FBEventLogTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> List;

        /*0x11d97a8*/ FBEventLogTable();
        /*0x11d98a0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Item
    {
        /*0x10*/ int Index;
        /*0x18*/ string Name;
        /*0x20*/ string Description;
        /*0x28*/ string Type;
        /*0x30*/ int Quality;
        /*0x34*/ int BuyPriceDiamond;
        /*0x38*/ string RandomPercent;
        /*0x40*/ string Containments;
        /*0x48*/ int RewardTime;
        /*0x4c*/ int Count;
        /*0x50*/ int SoulStoneGrade;
        /*0x54*/ int UseLevelLimit;
        /*0x58*/ int HPCharge;
        /*0x5c*/ int MPCharge;
        /*0x60*/ string UIIcon;
        /*0x68*/ string UISmallIcon;
        /*0x70*/ int FactionID;
        /*0x74*/ int EquipExp;

        /*0xc9f240*/ TableData_Item();
    }

    class ItemTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Item> List;

        /*0x1585968*/ ItemTable();
        /*0x1585a60*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gacha
    {
        /*0x10*/ int Index;
        /*0x14*/ int Category;
        /*0x18*/ string Name;
        /*0x20*/ int GachaCount;
        /*0x28*/ string PriceType;
        /*0x30*/ string PriceArg1;
        /*0x38*/ string PriceArg2;
        /*0x40*/ string SubPricetype;
        /*0x48*/ string SubPriceArg1;
        /*0x50*/ string SubPriceArg2;
        /*0x58*/ string FactionType;
        /*0x60*/ int DropPattern;
        /*0x64*/ int GachaProgressPt;
        /*0x68*/ string TitleColor;
        /*0x70*/ string TitleOutColor;
        /*0x78*/ string UnitDropPercent;
        /*0x80*/ string Background;
        /*0x88*/ string Background_Small;
        /*0x90*/ string LogID;

        /*0xc9f170*/ TableData_Gacha();
    }

    class GachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gacha> List;

        /*0xeca41c*/ GachaTable();
        /*0xeca514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gachabonus
    {
        /*0x10*/ int Index;
        /*0x14*/ int UpgradePt;
        /*0x18*/ int Count;
        /*0x20*/ string Rewards;

        /*0xc9f178*/ TableData_Gachabonus();
    }

    class GachaBonusTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> List;

        /*0x10ba898*/ GachaBonusTable();
        /*0x10ba990*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gachadroppattern
    {
        /*0x10*/ int index;
        /*0x18*/ string DropGrade;
        /*0x20*/ string DropPercent;
        /*0x28*/ string NewGrade;
        /*0x30*/ string NewPercent;

        /*0xc9f180*/ TableData_Gachadroppattern();
    }

    class GachaDropPatternTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gachadroppattern> List;

        /*0x10bcf48*/ GachaDropPatternTable();
        /*0x10bd040*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Gachaunitpercent
    {
        /*0x10*/ int Index;
        /*0x14*/ float UnitDropPercent1;
        /*0x18*/ float UnitDropPercent2;
        /*0x1c*/ float UnitDropPercent3;
        /*0x20*/ float UnitDropPercent4;

        /*0xc9f188*/ TableData_Gachaunitpercent();
    }

    class GachaUnitPercentTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> List;

        /*0xeca8ac*/ GachaUnitPercentTable();
        /*0xeca9a4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Stage
    {
        /*0x10*/ int Index;
        /*0x14*/ int ChapterID;
        /*0x18*/ int StageID;
        /*0x20*/ string MappiontName;
        /*0x28*/ int ChallengeTimes;
        /*0x2c*/ int UserExp;
        /*0x30*/ string Rewards;
        /*0x38*/ string Type;
        /*0x40*/ string Desctription;
        /*0x48*/ bool InfoView;

        /*0xc9354c*/ TableData_Stage();
    }

    class StageTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Stage> List;

        /*0xc94864*/ StageTable();
        /*0xc9495c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Hardstage
    {
        /*0x10*/ int Index;
        /*0x14*/ int ChapterID;
        /*0x18*/ int StageID;
        /*0x20*/ string MappiontName;
        /*0x28*/ int ChallengeTimes;
        /*0x2c*/ int UserExp;
        /*0x30*/ string Rewards;
        /*0x38*/ string Type;
        /*0x40*/ string Desctription;
        /*0x48*/ bool InfoView;

        /*0xc935e8*/ TableData_Hardstage();
    }

    class HardStageTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Hardstage> List;

        /*0x10f6d68*/ HardStageTable();
        /*0x10f6e60*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Stageidle
    {
        /*0x10*/ int Index;
        /*0x14*/ int StageBattle;
        /*0x18*/ int BasicRewardCD;
        /*0x20*/ string BasicReward;
        /*0x28*/ int UserExp;
        /*0x30*/ string CurrencyReward1;
        /*0x38*/ int[] ItemIDN;
        /*0x40*/ int[] ChestIDN;
        /*0x48*/ int[] ItemCDN;
        /*0x50*/ int[] ChestCDN;
        /*0x58*/ string[] RandomItemNCD;

        /*0xc8fc84*/ TableData_Stageidle();
    }

    class StageIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Stageidle> List;

        /*0xc8f158*/ StageIdleTable();
        /*0xc8f250*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Chest
    {
        /*0x10*/ int Index;
        /*0x14*/ float ChestPercent;
        /*0x18*/ int ChestItem1;
        /*0x1c*/ int ChestItem2;
        /*0x20*/ int ChestItem3;
        /*0x24*/ int ChestItem4;
        /*0x28*/ int ChestItem5;
        /*0x2c*/ int ChestItem6;
        /*0x30*/ int ChestItem7;
        /*0x34*/ int ChestItem8;
        /*0x38*/ int ChestItem9;
        /*0x3c*/ int ChestItem10;
        /*0x40*/ int ChestItem11;
        /*0x44*/ int ChestItem12;

        /*0xc9efb0*/ TableData_Chest();
    }

    class ChestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Chest> List;

        /*0x10ded88*/ ChestTable();
        /*0x10dee80*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Tower
    {
        /*0x10*/ int Index;
        /*0x18*/ string TowerId;
        /*0x20*/ string EnterDay;
        /*0x28*/ int UseFaction;
        /*0x2c*/ int DailyChallengeFloor;
        /*0x30*/ string ContentId;

        /*0xc9f3b0*/ TableData_Tower();
    }

    class TowerTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Tower> List;

        /*0x111e2dc*/ TowerTable();
        /*0x111e3d4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerfloor
    {
        /*0x10*/ int FloorID;
        /*0x14*/ int BattleID;
        /*0x18*/ bool Enable;
        /*0x20*/ string Rewards;

        /*0xc97288*/ TableData_Towerfloor();
    }

    class TableData_Towernormal : TableData.TableData_Towerfloor
    {
        /*0xc9f3c8*/ TableData_Towernormal();
    }

    class TowerNormalTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towernormal> List;

        /*0x111cc64*/ TowerNormalTable();
        /*0x111cd5c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerfire : TableData.TableData_Towerfloor
    {
        /*0xc9f3b8*/ TableData_Towerfire();
    }

    class TowerFireTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towerfire> List;

        /*0x117e27c*/ TowerFireTable();
        /*0x117e374*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerwind : TableData.TableData_Towerfloor
    {
        /*0xc9f3d8*/ TableData_Towerwind();
    }

    class TowerWindTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towerwind> List;

        /*0x111e87c*/ TowerWindTable();
        /*0x111e974*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towernatural : TableData.TableData_Towerfloor
    {
        /*0xc9f3c0*/ TableData_Towernatural();
    }

    class TowerNaturalTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towernatural> List;

        /*0x111ca18*/ TowerNaturalTable();
        /*0x111cb10*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Towerwater : TableData.TableData_Towerfloor
    {
        /*0xc9f3d0*/ TableData_Towerwater();
    }

    class TowerWaterTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Towerwater> List;

        /*0x111e630*/ TowerWaterTable();
        /*0x111e728*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Systembasic
    {
        /*0x10*/ int UNIT_SLOT_MAX;
        /*0x14*/ int UNIT_SLOT_DEF;
        /*0x18*/ int UNIT_SLOT_DIA;
        /*0x1c*/ int UNIT_SLOT_CNT;
        /*0x20*/ int UNIT_SLOT_EXT_DIA;
        /*0x24*/ int UNIT_SLOT_EXT;
        /*0x28*/ int NICK_EDIT_DIA;
        /*0x2c*/ int BUY_PROPERTY_PRICE;
        /*0x30*/ int BUY_PROPERTY_LIMIT;
        /*0x34*/ int BUY_GACHA_LIMIT;
        /*0x38*/ string FirstCharGet;
        /*0x40*/ string BasicCurrency;
        /*0x48*/ int EnhanceGold;
        /*0x4c*/ int StageIdleTime;
        /*0x50*/ string SignatureGet;
        /*0x58*/ float Wishlist;
        /*0x5c*/ int MazeResetTime;
        /*0x60*/ string MazeDecideMove;
        /*0x68*/ int MazeDecideMoveIncrease;
        /*0x6c*/ int MazeDecideMoveLimit;
        /*0x70*/ int MazeHealItem;
        /*0x74*/ int MazeHealItemLv;
        /*0x78*/ int HeroResetCost;
        /*0x7c*/ int NormalShopRefresh;
        /*0x80*/ int NormalShopRefresh_EXT_DIA;
        /*0x84*/ int NormalShopRefresh_MAX_DIA;
        /*0x88*/ int LabyrinthShopRefresh;
        /*0x8c*/ int LeaveGameDelayDay;
        /*0x90*/ int GuildShopRefresh;
        /*0x94*/ int GuildShopRefresh_EXT_DIA;
        /*0x98*/ int GuildShopRefresh_MAX_DIA;
        /*0x9c*/ int ArenaShopRefresh;
        /*0xa0*/ int DismissShopRefresh;
        /*0xa4*/ int PveRankingShopRefresh;
        /*0xa8*/ int PveRankingShopRefresh_EXT_DIA;
        /*0xac*/ int PveRankingShopRefresh_MAX_DIA;
        /*0xb0*/ int MazeMateListReset;
        /*0xb4*/ int TiersReviverCount;
        /*0xb8*/ int TiersHpRecover;

        /*0xc9e094*/ TableData_Systembasic();
    }

    class SystemBasicTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Systembasic> List;

        /*0xc9d8d4*/ SystemBasicTable();
        /*0xc9d9cc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contenthelp
    {
        /*0x10*/ int Index;
        /*0x18*/ string ContentId;
        /*0x20*/ string HelpId;
        /*0x28*/ string StoryId;
        /*0x30*/ string RoleId;
        /*0x38*/ bool helponoff;
        /*0x39*/ bool Storyonoff;
        /*0x3a*/ bool Roleonoff;
        /*0x40*/ string Priority;

        /*0xc9efc0*/ TableData_Contenthelp();
    }

    class ContentHelpTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contenthelp> List;

        /*0x10ea178*/ ContentHelpTable();
        /*0x10ea270*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Fastidle
    {
        /*0x10*/ int Index;
        /*0x14*/ int FastIdleCash;

        /*0xc9f108*/ TableData_Fastidle();
    }

    class FastIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Fastidle> List;

        /*0x11d9ed8*/ FastIdleTable();
        /*0x11d9fd0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Friend
    {
        /*0x10*/ int MaxFriendCount;
        /*0x14*/ int DailyFshipGive;
        /*0x18*/ int DailyFshipTake;
        /*0x1c*/ int MaxFriendApply;
        /*0x20*/ int SupplyMercenaryCount;
        /*0x24*/ int RequestMercenaryCount;
        /*0x28*/ int RequestMercenaryGrade;
        /*0x2c*/ int OfflineTime;

        /*0xc9f118*/ TableData_Friend();
    }

    class FriendTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Friend> List;

        /*0x10a4f88*/ FriendTable();
        /*0x10a5080*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Userlvexp
    {
        /*0x10*/ int index;
        /*0x14*/ int NextLvExp;
        /*0x18*/ string LvUpReward;

        /*0xc9f430*/ TableData_Userlvexp();
    }

    class UserLvExpTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Userlvexp> List;

        /*0x10c799c*/ UserLvExpTable();
        /*0x10c7a94*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contentunlock
    {
        /*0x10*/ int Index;
        /*0x18*/ string ContentId;
        /*0x20*/ bool ViewType;
        /*0x28*/ string QuestGroupId;
        /*0x30*/ string ContentTitle;
        /*0x38*/ string ContentDescription;

        /*0xc9efd8*/ TableData_Contentunlock();
    }

    class ContentUnlockTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contentunlock> List;

        /*0xf4c6fc*/ ContentUnlockTable();
        /*0xf4c7f4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Chapter
    {
        /*0x10*/ int Index;
        /*0x18*/ string ChapterName;
        /*0x20*/ string ChapterDesc;
        /*0x28*/ string ChapterImage;
        /*0x30*/ bool Enable;
        /*0x38*/ string GetEnableEquip;
        /*0x40*/ string GetEnableItem;

        /*0xc9efa8*/ TableData_Chapter();
    }

    class ChapterTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Chapter> List;

        /*0xd71760*/ ChapterTable();
        /*0xd71858*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Hardchapter
    {
        /*0x10*/ int Index;
        /*0x18*/ string ChapterName;
        /*0x20*/ string ChapterDesc;
        /*0x28*/ string ChapterImage;
        /*0x30*/ bool Enable;
        /*0x38*/ string GetEnableEquip;
        /*0x40*/ string GetEnableItem;

        /*0xc9f1f0*/ TableData_Hardchapter();
    }

    class HardChapterTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Hardchapter> List;

        /*0x10f6aa4*/ HardChapterTable();
        /*0x10f6b9c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Tutorial
    {
        /*0x10*/ int Index;
        /*0x14*/ int Group;
        /*0x18*/ float DelayTime;
        /*0x20*/ string StartType;
        /*0x28*/ string BeginType;
        /*0x30*/ string TutorialType;
        /*0x38*/ string UnlockEffect;
        /*0x40*/ int BattleStage;
        /*0x44*/ int StageRequire;
        /*0x48*/ int ChapterRequire;
        /*0x4c*/ int UnlockRequire;
        /*0x50*/ bool ReadyAnotherChapter;
        /*0x51*/ bool ReadyEquipUp;
        /*0x58*/ string ProcessType;
        /*0x60*/ string ButtonType;
        /*0x68*/ string selectUI;
        /*0x70*/ string CreateUI;
        /*0x78*/ int CursorRotaion;
        /*0x80*/ string ProcessSceneName;
        /*0x88*/ bool IsBattlePause;
        /*0x8c*/ float DialogTime;
        /*0x90*/ string DialogType;
        /*0x98*/ bool DialogClear;
        /*0x99*/ bool Dialog;
        /*0x9a*/ bool DialogIsLeft;
        /*0xa0*/ string DialogIcon;
        /*0xa8*/ string DialogText;
        /*0xb0*/ float DialogPositionY;
        /*0xb4*/ bool Refeat;
        /*0xb5*/ bool Skip;
        /*0xb8*/ int Priority;
        /*0xc0*/ string Voice;

        /*0xc9f3f0*/ TableData_Tutorial();
    }

    class TutorialTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Tutorial> List;

        /*0x112d680*/ TutorialTable();
        /*0x112d778*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Tutorialbattlehero
    {
        /*0x10*/ int Index;
        /*0x14*/ int Hero_POS;
        /*0x18*/ int Hero1_ID;
        /*0x1c*/ int Hero_Grade;
        /*0x20*/ int Hero_LV;
        /*0x28*/ int[] Hero_EquipN;

        /*0xc9f3f8*/ TableData_Tutorialbattlehero();
    }

    class TutorialBattleHeroTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Tutorialbattlehero> List;

        /*0x11299dc*/ TutorialBattleHeroTable();
        /*0x1129ad4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Arena
    {
        /*0x10*/ int Index;
        /*0x18*/ string ArenaType;
        /*0x20*/ int SeasonTerm;
        /*0x24*/ int SeasonStartPoint;
        /*0x28*/ int DailyFreeTicket;
        /*0x2c*/ int GroupCountMax;
        /*0x30*/ int GroupPeopleMin;
        /*0x34*/ int SearchAPtRange;
        /*0x38*/ int AddSearchAPtRange;
        /*0x3c*/ int AddSearchAPtRangeMax;
        /*0x40*/ string ArenaBattleReward;
        /*0x48*/ int ArenaEntryItem;
        /*0x4c*/ int ArenaCalculationTime;
        /*0x50*/ int ArenaPreCalculationTime;

        /*0xc9eeb8*/ TableData_Arena();
    }

    class ArenaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Arena> List;

        /*0xee9ce8*/ ArenaTable();
        /*0xee9de0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Arenarank
    {
        /*0x10*/ int Index;
        /*0x18*/ string ArenaType;
        /*0x20*/ string RankType;
        /*0x28*/ int RankCount;
        /*0x30*/ string DailyReward;
        /*0x38*/ string SeasonReward;

        /*0xc9eec8*/ TableData_Arenarank();
    }

    class ArenaRankTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Arenarank> List;

        /*0xee9260*/ ArenaRankTable();
        /*0xee9358*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Mazecourse
    {
        /*0x10*/ int index;
        /*0x14*/ int MazeID;
        /*0x18*/ string CourseType;
        /*0x20*/ int CourseCount;

        /*0xc9f250*/ TableData_Mazecourse();
    }

    class MazeCourseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Mazecourse> List;

        /*0xdecb54*/ MazeCourseTable();
        /*0xdecc4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Mazebattle
    {
        /*0x10*/ int Index;
        /*0x14*/ int Chapter;
        /*0x18*/ int Floor;
        /*0x20*/ string Type;
        /*0x28*/ int Level;
        /*0x2c*/ int Grade;
        /*0x30*/ int EquipGrade;
        /*0x34*/ int AddHp;
        /*0x38*/ int AddDMG;
        /*0x3c*/ int KnightLimit;
        /*0x40*/ int WarriorLimit;
        /*0x44*/ int SupporterLimit;
        /*0x48*/ int RangerLimit;
        /*0x4c*/ int MageLimit;
        /*0x50*/ string Reward;
        /*0x58*/ bool CorrectionApply;
        /*0x5c*/ int View_Cp;
        /*0x60*/ int[] ViewEnemyN_LV;

        /*0xc9f248*/ TableData_Mazebattle();
    }

    class MazeBattleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Mazebattle> List;

        /*0xdeb434*/ MazeBattleTable();
        /*0xdeb52c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Mazemateequip
    {
        /*0x10*/ int Index;
        /*0x14*/ int MazeMateGrade;
        /*0x18*/ int[] EquipSlotN;

        /*0xc9f258*/ TableData_Mazemateequip();
    }

    class MazeMateEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Mazemateequip> List;

        /*0xdf1c88*/ MazeMateEquipTable();
        /*0xdf1d80*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Herolvsync
    {
        /*0x10*/ int SyncSlotOpen;
        /*0x18*/ string SyncSlotUnlockCurrency;
        /*0x20*/ int SyncSlotUnlockCurrencyAdd;
        /*0x28*/ string SyncSlotUnlockPrice;
        /*0x30*/ int SyncSlotUnlockPriceAdd;
        /*0x34*/ int SlotCleanTime;
        /*0x38*/ string SlotCleanQuick;
        /*0x40*/ int SyncBaseHeroLvGap;
        /*0x44*/ int SyncBaseHeroLvGapUnlockUnit;
        /*0x48*/ int SyncSlotMax;
        /*0x4c*/ int LevelUpStepCount;
        /*0x50*/ int AddMaxLevelGrade;
        /*0x54*/ int AddMaxLevel;
        /*0x58*/ int MaxLevel;

        /*0xc9f1f8*/ TableData_Herolvsync();
    }

    class HeroLvSyncTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Herolvsync> List;

        /*0xf3eff0*/ HeroLvSyncTable();
        /*0xf3f0e8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Idleunittipdialog
    {
        /*0x10*/ int UnitID;
        /*0x18*/ string IdleDialogType;
        /*0x20*/ string DialogKey1;
        /*0x28*/ string DialogKey2;
        /*0x30*/ string DialogKey3;
        /*0x38*/ string DialogKey4;
        /*0x40*/ string DialogKey5;
        /*0x48*/ string DialogKey6;
        /*0x50*/ string DialogKey7;
        /*0x58*/ string DialogKey8;
        /*0x60*/ string DialogKey9;
        /*0x68*/ string DialogKey10;
        /*0x70*/ string DialogKey11;
        /*0x78*/ string DialogKey12;
        /*0x80*/ string DialogKey13;
        /*0x88*/ string DialogKey14;
        /*0x90*/ string DialogKey15;
        /*0x98*/ string DialogKey16;
        /*0xa0*/ string DialogKey17;

        /*0xc9f238*/ TableData_Idleunittipdialog();
    }

    class IdleUnitTipDialogTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Idleunittipdialog> List;

        /*0xd21538*/ IdleUnitTipDialogTable();
        /*0xd21630*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Profileskin
    {
        /*0x10*/ string ProfileSkinType;
        /*0x18*/ int index;
        /*0x1c*/ bool Use;
        /*0x20*/ string ProfileSkinName;
        /*0x28*/ string ProfileSkinDesc;
        /*0x30*/ string ProfileSkinImage;
        /*0x38*/ bool IsFree;
        /*0x3c*/ int FrameDate;
        /*0x40*/ string ProfileSkinGetDesc;
        /*0x48*/ string ProfileEffectName;

        /*0xc9f280*/ TableData_Profileskin();
    }

    class ProfileSkinTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Profileskin> List;

        /*0x100e6f8*/ ProfileSkinTable();
        /*0x100e7f0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Emoticon
    {
        /*0x10*/ int index;
        /*0x18*/ string Chat;
        /*0x20*/ string Image;

        /*0xc9f030*/ TableData_Emoticon();
    }

    class EmoticonTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Emoticon> List;

        /*0x14b9030*/ EmoticonTable();
        /*0x14b9128*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Vip
    {
        /*0x10*/ int VIPLevel;
        /*0x14*/ int VIPLevelUpPoint;
        /*0x18*/ string VIPReward;
        /*0x20*/ int StageIdleGold;
        /*0x24*/ int StageIdleHeroexp;
        /*0x28*/ int FastIdleCount;
        /*0x2c*/ int ArenaDailyFree;
        /*0x30*/ int HeroSlotCount;
        /*0x34*/ int SoloBountyQty;
        /*0x38*/ int TeamBountyQty;
        /*0x3c*/ int StageIdleTimeUp;
        /*0x40*/ int HuntingCountUp;
        /*0x44*/ bool UnlockArenaBattleSkip;
        /*0x45*/ bool UnlockBountyAutofill;
        /*0x46*/ bool HuntingFast;
        /*0x47*/ bool UnlockBattleAccelx3;
        /*0x48*/ int MazeBattleGold;
        /*0x4c*/ bool UnlockRaceSkip;
        /*0x50*/ int ArenaWinRewardCount;
        /*0x54*/ bool UnlockBattleAccelx4;

        /*0xc9f438*/ TableData_Vip();
    }

    class VipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Vip> List;

        /*0xdfcbb8*/ VipTable();
        /*0xdfccb0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarena
    {
        /*0x10*/ int InterimDay;
        /*0x14*/ int InterimCalTime;
        /*0x18*/ int ArenaPreCalTime;
        /*0x1c*/ int ResetPoint;
        /*0x20*/ int ArenaEntryItem;
        /*0x24*/ int DailyFreeTicket;
        /*0x28*/ int SearchAPtRange;
        /*0x2c*/ int AddSearchAPtRange;
        /*0x30*/ int AddSearchAptRangeMax;
        /*0x34*/ int TrainingRoationMax;
        /*0x38*/ int ChannelCount;
        /*0x3c*/ int WDCount_Asia1;
        /*0x40*/ int WDCount_Asia2;
        /*0x44*/ int WDCount_Europe;
        /*0x48*/ int WDCount_NorthAmerica;

        /*0xc9f448*/ TableData_Worldarena();
    }

    class WorldArenaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarena> List;

        /*0xe0982c*/ WorldArenaTable();
        /*0xe09924*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenatier
    {
        /*0x10*/ int index;
        /*0x14*/ int TierGrade;
        /*0x18*/ string TierName;
        /*0x20*/ bool Open;
        /*0x24*/ int GroupPeopleMin;
        /*0x28*/ int GroupPeopleMax;
        /*0x2c*/ int Raise;
        /*0x30*/ int Drop;
        /*0x38*/ string BattleReward;
        /*0x40*/ string RaiseReward;
        /*0x48*/ string StayReward;
        /*0x50*/ string DropReward;
        /*0x58*/ string SeasonReward;

        /*0xc9f460*/ TableData_Worldarenatier();
    }

    class WorldArenaTierTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenatier> List;

        /*0xe09fc4*/ WorldArenaTierTable();
        /*0xe0a0bc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenamatchingpoint
    {
        /*0x10*/ int Index;
        /*0x14*/ int ListPosition;
        /*0x18*/ int MatchingAPt;
        /*0x1c*/ int AttWinAPt;
        /*0x20*/ int AttLoseAPt;
        /*0x24*/ int DefWinAPt;
        /*0x28*/ int DefLoseAPt;

        /*0xc9f458*/ TableData_Worldarenamatchingpoint();
    }

    class WorldArenaMatchingPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenamatchingpoint> List;

        /*0xe057f0*/ WorldArenaMatchingPointTable();
        /*0xe058e8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenachampreward
    {
        /*0x10*/ int Index;
        /*0x18*/ string RankType;
        /*0x20*/ int RankCount;
        /*0x24*/ int RankRange;
        /*0x28*/ string ClosingReward;

        /*0xc9f450*/ TableData_Worldarenachampreward();
    }

    class WorldArenaChampRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenachampreward> List;

        /*0xe040bc*/ WorldArenaChampRewardTable();
        /*0xe041b4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Trainingroom
    {
        /*0x10*/ int index;
        /*0x18*/ string StepType;
        /*0x20*/ string Contents;
        /*0x28*/ float RaiseCount;
        /*0x30*/ string BasicCost;
        /*0x38*/ string RoationRaiseCost;

        /*0xc9f3e0*/ TableData_Trainingroom();
    }

    class TrainingRoomTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> List;

        /*0x111f51c*/ TrainingRoomTable();
        /*0x111f614*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Revert
    {
        /*0x10*/ int index;
        /*0x18*/ string RevertHeroGrade;
        /*0x20*/ int RevertApCount;
        /*0x24*/ int RevertItemCount;
        /*0x28*/ bool RevertUse;

        /*0xc9f368*/ TableData_Revert();
    }

    class RevertTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Revert> List;

        /*0x11a66cc*/ RevertTable();
        /*0x11a67c4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guild
    {
        /*0x10*/ int GuildSignupLvMin;
        /*0x14*/ int GuildSignupLvMax;
        /*0x18*/ int GuildSignupLvExt;
        /*0x1c*/ int GuildReSignUpTime;
        /*0x20*/ int GuildSameReSignUpTime;
        /*0x24*/ int GuildListMax;
        /*0x28*/ int HuntingTime;
        /*0x2c*/ int HuntingCount;
        /*0x30*/ int HuntingRecordListCount;
        /*0x34*/ int GuildBDDayilyLimit;
        /*0x38*/ string GuildWasteTime;
        /*0x40*/ string GuildWasteCount;
        /*0x48*/ int GuildRoomPeopleCount;
        /*0x4c*/ int GuildRoadPeopleCount;
        /*0x50*/ string GuildCreateCost;
        /*0x58*/ string GuildNameChange;
        /*0x60*/ int GuildGeneralTime;
        /*0x64*/ int GuildMasterChangeDay;
        /*0x68*/ int ChangeGuildMasterRequireDay;

        /*0xc9f190*/ TableData_Guild();
    }

    class GuildTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guild> List;

        /*0x110d18c*/ GuildTable();
        /*0x110d284*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildlevel
    {
        /*0x10*/ int index;
        /*0x14*/ int GuildLV;
        /*0x18*/ int GuildPointLvUp;
        /*0x1c*/ int GuildMemberCount;
        /*0x20*/ int GuildPointHoldLimit;
        /*0x24*/ int GuildPointPersonalLimit;
        /*0x28*/ int GuildSubMasterCount;
        /*0x2c*/ int GuildGneralCount;
        /*0x30*/ string GuildCrestUnlock;
        /*0x38*/ int GuildMapExtend;
        /*0x3c*/ int GuildMapMember;

        /*0xc9f1a8*/ TableData_Guildlevel();
    }

    class GuildLevelTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildlevel> List;

        /*0xe73720*/ GuildLevelTable();
        /*0xe73818*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwaste
    {
        /*0x10*/ int GuildLv;
        /*0x14*/ int Percent;
        /*0x18*/ string Reward;

        /*0xc9f1e8*/ TableData_Guildwaste();
    }

    class GuildWasteTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwaste> List;

        /*0x10f5d70*/ GuildWasteTable();
        /*0x10f5e68*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildboss
    {
        /*0x10*/ int index;
        /*0x18*/ string BossType;
        /*0x20*/ int ChallengeTimes;
        /*0x24*/ int BattleID;
        /*0x28*/ int BossID;
        /*0x2c*/ int HuntingRewardID;
        /*0x30*/ int RequireContribution;
        /*0x34*/ int RemainTime;
        /*0x38*/ int TryTime;

        /*0xc9f198*/ TableData_Guildboss();
    }

    class GuildBossTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildboss> List;

        /*0xe64e54*/ GuildBossTable();
        /*0xe64f4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildhuntingreward
    {
        /*0x10*/ int index;
        /*0x14*/ int HuntingRewardID;
        /*0x18*/ int HuntingRewardStep;
        /*0x20*/ long StepUpDamage;
        /*0x28*/ string HuntingBasicReward;
        /*0x30*/ string DailyBestReward;
        /*0x38*/ string HuntingItem;
        /*0x40*/ float HuntingItemDropPercent;
        /*0x44*/ int HuntingChestARate;
        /*0x48*/ string HuntingEquipA;
        /*0x50*/ int HuntingChestBRate;
        /*0x58*/ string HuntingEquipB;
        /*0x60*/ int HuntingChestCRate;
        /*0x68*/ string HuntingEquipC;
        /*0x70*/ int HuntingChestDRate;
        /*0x78*/ string HuntingEquipD;
        /*0x80*/ int HuntingChestERate;
        /*0x88*/ string HuntingEquipE;
        /*0x90*/ int HuntingChestFRate;
        /*0x98*/ string HuntingEquipF;
        /*0xa0*/ int HuntingChestGRate;
        /*0xa8*/ string HuntingEquipG;
        /*0xb0*/ string EqiupRewardView;

        /*0xc9f1a0*/ TableData_Guildhuntingreward();
    }

    class GuildHuntingRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildhuntingreward> List;

        /*0xe70c74*/ GuildHuntingRewardTable();
        /*0xe70d6c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwar
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9f1b0*/ TableData_Guildwar();
    }

    class GuildWarTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwar> List;

        /*0x10f4ce8*/ GuildWarTable();
        /*0x10f4de0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarpoint
    {
        /*0x10*/ int Index;
        /*0x14*/ int ListPosition;
        /*0x18*/ int MatchingAPt;
        /*0x1c*/ int AtkWinAPt;
        /*0x20*/ int AtkLoseAPt;
        /*0x24*/ int DefWinAPt;
        /*0x28*/ int DefLoseAPt;

        /*0xc9f1c0*/ TableData_Guildwarpoint();
    }

    class GuildWarPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarpoint> List;

        /*0x1119de4*/ GuildWarPointTable();
        /*0x1119edc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarorganize
    {
        /*0x10*/ string Position;
        /*0x18*/ string Key;
        /*0x20*/ string Valuse;

        /*0xc9f1b8*/ TableData_Guildwarorganize();
    }

    class GuildWarOrganizeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarorganize> List;

        /*0x1119bdc*/ GuildWarOrganizeTable();
        /*0x1119cd4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarrank
    {
        /*0x10*/ int Index;
        /*0x14*/ int RewardGroupKey;
        /*0x18*/ string RankType;
        /*0x20*/ int RankCount;
        /*0x24*/ int GuildPointReward;
        /*0x28*/ string GuildArenaRankRewardGroup;

        /*0xc9f1c8*/ TableData_Guildwarrank();
    }

    class GuildWarRankTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> List;

        /*0x10efcb8*/ GuildWarRankTable();
        /*0x10efdb0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarrankreward
    {
        /*0x10*/ int Index;
        /*0x18*/ string GuildArenaRankRewardGroup;
        /*0x20*/ string[] RankNReward;

        /*0xc9f1d8*/ TableData_Guildwarrankreward();
    }

    class GuildWarRankRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarrankreward> List;

        /*0x10ee954*/ GuildWarRankRewardTable();
        /*0x10eea4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwarrankgroup
    {
        /*0x10*/ int Index;
        /*0x14*/ int Season;
        /*0x18*/ int RewardGroupKey;

        /*0xc9f1d0*/ TableData_Guildwarrankgroup();
    }

    class GuildWarRankGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwarrankgroup> List;

        /*0x10ee74c*/ GuildWarRankGroupTable();
        /*0x10ee844*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Guildwartactic
    {
        /*0x10*/ int TacticID;
        /*0x18*/ string Class;
        /*0x20*/ string Position;

        /*0xc9f1e0*/ TableData_Guildwartactic();
    }

    class GuildWarTacticTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Guildwartactic> List;

        /*0x10f4ec8*/ GuildWarTacticTable();
        /*0x10f4fc0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Highgacha
    {
        /*0x10*/ int Index;
        /*0x18*/ string Name;
        /*0x20*/ int GachaCount;
        /*0x28*/ string PriceType;
        /*0x30*/ string PriceArg1;
        /*0x38*/ string PriceArg2;
        /*0x40*/ string SubPricetype;
        /*0x48*/ string SubPriceArg1;
        /*0x50*/ string SubPriceArg2;
        /*0x58*/ string LogID;

        /*0xc9f208*/ TableData_Highgacha();
    }

    class HighGachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Highgacha> List;

        /*0x130aaf4*/ HighGachaTable();
        /*0x130abec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Highdroprate
    {
        /*0x10*/ int index;
        /*0x14*/ float DropPercent;
        /*0x18*/ string DropReward;
        /*0x20*/ int DropLimit;

        /*0xc9f200*/ TableData_Highdroprate();
    }

    class HighDropRateTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Highdroprate> List;

        /*0x130a8ac*/ HighDropRateTable();
        /*0x130a9a4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeon
    {
        /*0x10*/ int DungeonID;
        /*0x18*/ string Unlock1;
        /*0x20*/ string Unlock2;
        /*0x28*/ int DungeonCoinLimit;
        /*0x2c*/ int DailyGoldLimit;
        /*0x30*/ int DailyHeroExpLimit;
        /*0x38*/ string Randomtile;
        /*0x40*/ string RandomtileCount;
        /*0x48*/ string DungeonBG;
        /*0x50*/ string DungeonTitle;
        /*0x58*/ string DungeonDesc;
        /*0x60*/ string BattleTilePopupTitle;
        /*0x68*/ string BattleTilePopupDesc;
        /*0x70*/ string BattleReward;
        /*0x78*/ string BossBattleReward;
        /*0x80*/ string RandomRewardGacha;
        /*0x88*/ string RandomReward;
        /*0x90*/ int CoinRewardTileCost;
        /*0x94*/ bool WallKeyUse;

        /*0xc9efe8*/ TableData_Dungeon();
    }

    class DungeonTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeon> List;

        /*0x14b3c18*/ DungeonTable();
        /*0x14b3d10*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonsetting
    {
        /*0x10*/ int DungeonViewRange;
        /*0x14*/ int DungeonAfterViewRange;
        /*0x18*/ int DungeonUseHeroLv;

        /*0xc9f020*/ TableData_Dungeonsetting();
    }

    class DungeonSettingTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonsetting> List;

        /*0x12f02d0*/ DungeonSettingTable();
        /*0x12f03c8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonmap
    {
        /*0x10*/ int DungeonID;
        /*0x14*/ int PositionX;
        /*0x18*/ int PositionY;
        /*0x1c*/ int TileID;
        /*0x20*/ int Group;
        /*0x28*/ string Parameters;

        /*0xc9f008*/ TableData_Dungeonmap();
    }

    class DungeonMapTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonmap> List;

        /*0x12ea400*/ DungeonMapTable();
        /*0x12ea4f8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeongroup
    {
        /*0x10*/ int index;
        /*0x14*/ int DungeonID;
        /*0x18*/ int DungeonLevel;
        /*0x1c*/ int BattleStage;
        /*0x20*/ int EnemyLvMin;
        /*0x24*/ int EnemyLvMax;
        /*0x28*/ int MonsterAddHP;
        /*0x2c*/ int MonsterAddDMG;
        /*0x30*/ string Element;
        /*0x38*/ int KnightLimit;
        /*0x3c*/ int WarriorLimit;
        /*0x40*/ int SupporterLimit;
        /*0x44*/ int RangerLimit;
        /*0x48*/ int MageLimit;
        /*0x50*/ int[] EnemyNGrade;
        /*0x58*/ int[] EquipGradeNMin;
        /*0x60*/ int[] EquipGradeNMax;

        /*0xc9f000*/ TableData_Dungeongroup();
    }

    class DungeonGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeongroup> List;

        /*0x12da168*/ DungeonGroupTable();
        /*0x12da260*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeontile
    {
        /*0x10*/ int Index;
        /*0x18*/ string TileType;
        /*0x20*/ string TileImage;
        /*0x28*/ string ObjectImage;
        /*0x30*/ string Attribute;
        /*0x38*/ string ObjectPositon;
        /*0x40*/ string TileValue;
        /*0x48*/ bool TileKeep;
        /*0x50*/ string ViewType;
        /*0x58*/ bool UsedViewType;

        /*0xc9f028*/ TableData_Dungeontile();
    }

    class DungeonTileTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeontile> List;

        /*0x14b6364*/ DungeonTileTable();
        /*0x14b645c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeondialog
    {
        /*0x10*/ int DungeonID;
        /*0x18*/ string Trigger;
        /*0x20*/ int Group;
        /*0x24*/ float DialogDelayTime;
        /*0x28*/ bool DialogClear;
        /*0x29*/ bool DialogIsLeft;
        /*0x2c*/ int HeroID;
        /*0x30*/ string DialogText;
        /*0x38*/ bool direction;

        /*0xc9eff0*/ TableData_Dungeondialog();
    }

    class DungeonDialogTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeondialog> List;

        /*0x11f6ec8*/ DungeonDialogTable();
        /*0x11f6fc0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonmateequip
    {
        /*0x10*/ int Index;
        /*0x14*/ int DungeonMateGrade;
        /*0x18*/ int[] EquipSlotN;

        /*0xc9f010*/ TableData_Dungeonmateequip();
    }

    class DungeonMateEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonmateequip> List;

        /*0x12ea688*/ DungeonMateEquipTable();
        /*0x12ea780*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeonreward
    {
        /*0x10*/ int DungeonID;
        /*0x14*/ int PositionX;
        /*0x18*/ int PositionY;
        /*0x20*/ string Reward;
        /*0x28*/ string OpenCondition;
        /*0x30*/ bool MiniMapView;

        /*0xc9f018*/ TableData_Dungeonreward();
    }

    class DungeonRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> List;

        /*0x12efc80*/ DungeonRewardTable();
        /*0x12efd78*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Dungeondialogdirection
    {
        /*0x10*/ int DungeonID;
        /*0x14*/ int PositionX;
        /*0x18*/ int PositionY;
        /*0x1c*/ int CharID;

        /*0xc9eff8*/ TableData_Dungeondialogdirection();
    }

    class DungeonDialogDirectionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection> List;

        /*0x11f6204*/ DungeonDialogDirectionTable();
        /*0x11f62fc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Event
    {
        /*0x10*/ int EventID;
        /*0x18*/ string EventName;
        /*0x20*/ string CategoryType;
        /*0x28*/ string EventType;
        /*0x30*/ int TypeEventID;
        /*0x38*/ string EventStartDate;
        /*0x40*/ string EventEndDate;
        /*0x48*/ int MissionEventBonusDay;
        /*0x4c*/ int EventTimeSectionID;
        /*0x50*/ int EventPreset;
        /*0x58*/ string EventMissionStepCondition;
        /*0x60*/ string EventExchangeRefund;
        /*0x68*/ string LogID;
        /*0x70*/ string MailTitle;
        /*0x78*/ string MailDesc;
        /*0x80*/ bool EventListShow;
        /*0x81*/ bool SubMenuShow;
        /*0x88*/ string SubMenuEventKey;
        /*0x90*/ string ContentsID;
        /*0x98*/ string TapBottonTitle;

        /*0xc9f048*/ TableData_Event();
    }

    class EventTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Event> List;

        /*0x11d4b58*/ EventTable();
        /*0x11d4c50*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpage
    {
        /*0x10*/ int index;
        /*0x14*/ int EventPageID;
        /*0x18*/ string EventPagePrefab;
        /*0x20*/ string EventEntityName;
        /*0x28*/ string EventPageText;
        /*0x30*/ string EventPageImage;
        /*0x38*/ string EventPageFormPos;
        /*0x40*/ string EventPageEffect;
        /*0x48*/ string TextInlineColor;
        /*0x50*/ string TextOutlineColor;

        /*0xc9f0b0*/ TableData_Eventpage();
    }

    class EventPageTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpage> List;

        /*0x11cf550*/ EventPageTable();
        /*0x11cf648*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventtimesection
    {
        /*0x10*/ int index;
        /*0x14*/ int EventID;
        /*0x18*/ string EventTimeWeek;
        /*0x20*/ int EventTimeDay;
        /*0x28*/ string EventTimeSectionStart;
        /*0x30*/ string EventeTimeSectionEnd;

        /*0xc9f0f8*/ TableData_Eventtimesection();
    }

    class EventTimeSectionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventtimesection> List;

        /*0x11d5028*/ EventTimeSectionTable();
        /*0x11d5120*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventsingle
    {
        /*0x10*/ int index;
        /*0x14*/ int EventSingleID;
        /*0x18*/ string EventSingleReward;

        /*0xc9f0f0*/ TableData_Eventsingle();
    }

    class EventSingleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventsingle> List;

        /*0x11d4948*/ EventSingleTable();
        /*0x11d4a40*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventgroup
    {
        /*0x10*/ int index;
        /*0x14*/ int EventGroupID;
        /*0x18*/ string EventSingleReward;

        /*0xc9f090*/ TableData_Eventgroup();
    }

    class EventGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventgroup> List;

        /*0x11599a4*/ EventGroupTable();
        /*0x1159a9c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventselect
    {
        /*0x10*/ int index;
        /*0x14*/ int EventSelectID;
        /*0x18*/ string EventSelectCount;
        /*0x20*/ string EventSelectReward;

        /*0xc9f0e8*/ TableData_Eventselect();
    }

    class EventSelectTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventselect> List;

        /*0x11d4710*/ EventSelectTable();
        /*0x11d4808*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventbuyinapp
    {
        /*0x10*/ int index;
        /*0x14*/ int EventBuyInAppID;
        /*0x18*/ string Trigger;
        /*0x20*/ string BuyInAppReward;

        /*0xc9f068*/ TableData_Eventbuyinapp();
    }

    class EventBuyInAppTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventbuyinapp> List;

        /*0x1152d04*/ EventBuyInAppTable();
        /*0x1152dfc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventexchange
    {
        /*0x10*/ int index;
        /*0x14*/ int EventExchageID;
        /*0x18*/ string EventCurrency;
        /*0x20*/ string EventExchageReward;
        /*0x28*/ int EventExchangeLimit;
        /*0x2c*/ bool Reddot;

        /*0xc9f088*/ TableData_Eventexchange();
    }

    class EventExchangeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> List;

        /*0x1159708*/ EventExchangeTable();
        /*0x1159800*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventattendance
    {
        /*0x10*/ int index;
        /*0x14*/ int EventCheckID;
        /*0x18*/ int AttendanceGroup;
        /*0x1c*/ int AttendanceGroupStart;
        /*0x20*/ string EventCheckType;
        /*0x28*/ int EventCheckDay;
        /*0x30*/ string EventCheckReward;
        /*0x38*/ string Log;

        /*0xc9f050*/ TableData_Eventattendance();
    }

    class EventAttendanceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> List;

        /*0x114d8c8*/ EventAttendanceTable();
        /*0x114d9c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventmission
    {
        /*0x10*/ int index;
        /*0x14*/ int EventMissionID;
        /*0x18*/ int EventMissionStep;
        /*0x20*/ string Trigger;
        /*0x28*/ int MissonCount;
        /*0x2c*/ int EventMissonPoint;
        /*0x30*/ string EventMissionStepReward;

        /*0xc9f0a0*/ TableData_Eventmission();
    }

    class EventMissionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventmission> List;

        /*0x11cf2a0*/ EventMissionTable();
        /*0x11cf398*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventmissionpoint
    {
        /*0x10*/ int index;
        /*0x14*/ int EventMissionID;
        /*0x18*/ int EventMissionPointCount;
        /*0x20*/ string PointReward;

        /*0xc9f0a8*/ TableData_Eventmissionpoint();
    }

    class EventMissionPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> List;

        /*0x11cc1fc*/ EventMissionPointTable();
        /*0x11cc2f4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventhottime
    {
        /*0x10*/ int index;
        /*0x14*/ int HotTimeID;
        /*0x18*/ int HotTimeIncrease;
        /*0x20*/ string HotTimeLocation;
        /*0x28*/ string HotTimeTargetCurrency;
        /*0x30*/ int HotTimeTargetItem;

        /*0xc9f098*/ TableData_Eventhottime();
    }

    class EventHotTimeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventhottime> List;

        /*0x1159bb4*/ EventHotTimeTable();
        /*0x1159cac*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpass
    {
        /*0x10*/ int EventID;
        /*0x18*/ string PassName;
        /*0x20*/ string CategoryType;
        /*0x28*/ string Trigger;
        /*0x30*/ string ResetPointType;
        /*0x38*/ int TermDays;
        /*0x3c*/ bool Repeat;
        /*0x40*/ int EventPreset;
        /*0x48*/ string PassInappID;
        /*0x50*/ string NotReceivedMailName;
        /*0x58*/ string NotReceivedMaildesc;
        /*0x60*/ bool EventListShow;
        /*0x61*/ bool SubMenuShow;
        /*0x68*/ string SubMenuEventTitle;
        /*0x70*/ string ContentsID;
        /*0x78*/ int VipPoint;

        /*0xc9f0b8*/ TableData_Eventpass();
    }

    class EventPassTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpass> List;

        /*0x11cfe48*/ EventPassTable();
        /*0x11cff40*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpassreward
    {
        /*0x10*/ int index;
        /*0x14*/ int EventID;
        /*0x18*/ int PassStepCount;
        /*0x20*/ string PassBasicReward;
        /*0x28*/ string PassPayReward;

        /*0xc9f0c0*/ TableData_Eventpassreward();
    }

    class EventPassRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> List;

        /*0x11cfbe8*/ EventPassRewardTable();
        /*0x11cfce0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventcurrencylocal
    {
        /*0x10*/ int index;
        /*0x18*/ string Type;
        /*0x20*/ int EventID;
        /*0x28*/ string Trigger;
        /*0x30*/ string Reward;

        /*0xc9f080*/ TableData_Eventcurrencylocal();
    }

    class EventCurrencyLocalTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> List;

        /*0x11568b8*/ EventCurrencyLocalTable();
        /*0x11569b0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventpreset
    {
        /*0x10*/ int index;
        /*0x14*/ int EventPageID;
        /*0x18*/ string EventBannerImage;
        /*0x20*/ string EventBannerTitleText;
        /*0x28*/ string BannerTitleColorInline;
        /*0x30*/ string BannerTitleColorOutline;
        /*0x38*/ string EventBannerInfoText;
        /*0x40*/ string BannerinfoColor;

        /*0xc9f0c8*/ TableData_Eventpreset();
    }

    class EventPresetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventpreset> List;

        /*0x11d0dd8*/ EventPresetTable();
        /*0x11d0ed0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventquest
    {
        /*0x10*/ int index;
        /*0x14*/ int EventQuestID;
        /*0x18*/ string EventGroup;

        /*0xc9f0d0*/ TableData_Eventquest();
    }

    class EventQuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventquest> List;

        /*0x11d39fc*/ EventQuestTable();
        /*0x11d3af4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventquestgroup
    {
        /*0x10*/ int index;
        /*0x18*/ string EventQuestType;
        /*0x20*/ string EventQuestGroup;
        /*0x28*/ string EventQuestTrigger;
        /*0x30*/ int EventQuestCount;
        /*0x38*/ string EventQuestPoint;

        /*0xc9f0d8*/ TableData_Eventquestgroup();
    }

    class EventQuestGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> List;

        /*0x11d1250*/ EventQuestGroupTable();
        /*0x11d1348*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventboss
    {
        /*0x10*/ int index;
        /*0x14*/ int EventBossID;
        /*0x18*/ int ChallengeTimes;
        /*0x1c*/ int BattleID;
        /*0x20*/ int BossID;
        /*0x24*/ int EventBossRewardID;
        /*0x28*/ int EventBossTryCount;
        /*0x2c*/ int HuntingRecordListCount;
        /*0x30*/ string ShortCutIcon;

        /*0xc9f058*/ TableData_Eventboss();
    }

    class EventBossTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventboss> List;

        /*0x1152a04*/ EventBossTable();
        /*0x1152afc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventbossreward
    {
        /*0x10*/ int index;
        /*0x14*/ int EventBossRewardID;
        /*0x18*/ int EventBossRewardStep;
        /*0x20*/ long EventBossStepUpDamage;
        /*0x28*/ string EventBossBasicReward;
        /*0x30*/ string EventBossDropItemPercent;
        /*0x38*/ string EventBossDropItemReward;

        /*0xc9f060*/ TableData_Eventbossreward();
    }

    class EventBossRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventbossreward> List;

        /*0x1152744*/ EventBossRewardTable();
        /*0x115283c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventcomplete
    {
        /*0x10*/ int index;
        /*0x14*/ int EventCompleteID;
        /*0x18*/ int EventCompleteMissionID;
        /*0x20*/ string ExchageCurrency;
        /*0x28*/ int CompleteCount;

        /*0xc9f070*/ TableData_Eventcomplete();
    }

    class EventCompleteTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> List;

        /*0x1156528*/ EventCompleteTable();
        /*0x1156620*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventcompletemission
    {
        /*0x10*/ int index;
        /*0x14*/ int EventCompleteMissionID;
        /*0x18*/ string RewardTarget;
        /*0x20*/ string Trigger;
        /*0x28*/ string EventCompleteMissionReward;

        /*0xc9f078*/ TableData_Eventcompletemission();
    }

    class EventCompleteMissionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> List;

        /*0x1154cb0*/ EventCompleteMissionTable();
        /*0x1154da8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Eventroulette
    {
        /*0x10*/ int index;
        /*0x14*/ int EventID;
        /*0x18*/ float RoulettePercent;
        /*0x1c*/ int RouletteRewardCP;
        /*0x20*/ string RouletteReward;
        /*0x28*/ bool RouletteBanner;
        /*0x30*/ string Atlas;
        /*0x38*/ string RewardImage;

        /*0xc9f0e0*/ TableData_Eventroulette();
    }

    class EventRouletteTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> List;

        /*0x11d441c*/ EventRouletteTable();
        /*0x11d4514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housing
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9f210*/ TableData_Housing();
    }

    class HousingTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housing> List;

        /*0xd1bc58*/ HousingTable();
        /*0xd1bd50*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housingdismiss
    {
        /*0x10*/ int index;
        /*0x18*/ string FurnitureGrade;
        /*0x20*/ string DismissReward;

        /*0xc9f218*/ TableData_Housingdismiss();
    }

    class HousingDismissTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housingdismiss> List;

        /*0x130cf38*/ HousingDismissTable();
        /*0x130d030*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housingfloor
    {
        /*0x10*/ int Floor;
        /*0x18*/ string Floor_OpenCost;
        /*0x20*/ int Floor_OpenFastCost;
        /*0x24*/ int Floor_HeroCountMax;
        /*0x28*/ int FloorWaste_Count;
        /*0x30*/ string FloorWaste_ClearCost;
        /*0x38*/ int FloorWaste_HeroCount;
        /*0x3c*/ int FloorWaste_ClearTime;
        /*0x40*/ int FloorWaste_FastCost;
        /*0x44*/ int FurnitureEffectUseValue;
        /*0x48*/ int OpenTimeUnlock;

        /*0xc9f220*/ TableData_Housingfloor();
    }

    class HousingFloorTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housingfloor> List;

        /*0x131a6a4*/ HousingFloorTable();
        /*0x131a79c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housinggacha
    {
        /*0x10*/ int GachaListGroup;
        /*0x14*/ int FurnitureID;
        /*0x18*/ float Furniture_GachaPercent;

        /*0xc9f230*/ TableData_Housinggacha();
    }

    class HousingGachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housinggacha> List;

        /*0x131a9f4*/ HousingGachaTable();
        /*0x131aaec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Housingfloorpattern
    {
        /*0x10*/ string PatternID;
        /*0x18*/ string Pattern;
        /*0x20*/ string StairImage;
        /*0x28*/ string Image;

        /*0xc9f228*/ TableData_Housingfloorpattern();
    }

    class HousingFloorPatternTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Housingfloorpattern> List;

        /*0x1319d94*/ HousingFloorPatternTable();
        /*0x1319e8c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furniture
    {
        /*0x10*/ int FurnitureID;
        /*0x18*/ string FurnitureImage;
        /*0x20*/ string FurnitureName;
        /*0x28*/ string FurniturePrefab;
        /*0x30*/ string FurnitureLayerType;
        /*0x38*/ string FurnitureType;
        /*0x40*/ string TileWallTypeID;
        /*0x48*/ string FurnitureSet;
        /*0x50*/ bool Furniture_Use_WallGroud;
        /*0x58*/ string Furniture_Grade;
        /*0x60*/ string Furniture_EffectLevelType;
        /*0x68*/ bool Furniture_Interaction;
        /*0x70*/ string Furniture_InteractionHero;
        /*0x78*/ int Furniture_InteractionCoolTime;
        /*0x7c*/ int Furniture_SellPrice;
        /*0x80*/ string FurnitureDesc;
        /*0x88*/ int Furniture_PlaceLimit;

        /*0xc9f120*/ TableData_Furniture();
    }

    class FurnitureTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furniture> List;

        /*0x10adca8*/ FurnitureTable();
        /*0x10adda0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureleveltypelist
    {
        /*0x10*/ string Furniture_LevelUpType;
        /*0x18*/ string Furniture_EffectType;
        /*0x20*/ int FurnitureEffect_Level;
        /*0x24*/ int ContentsEffectID;
        /*0x28*/ int HeroEffectID;
        /*0x2c*/ int HeroID;
        /*0x30*/ float FurnitureEffect_DismissAdd;

        /*0xc9f148*/ TableData_Furnitureleveltypelist();
    }

    class FurnitureLevelTypeListTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> List;

        /*0x10acf4c*/ FurnitureLevelTypeListTable();
        /*0x10ad044*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureeffecttype
    {
        /*0x10*/ string Type;
        /*0x18*/ float FurnitureEffectMax;
        /*0x20*/ string FurnitureEffectLocalize;
        /*0x28*/ string AtlasType;
        /*0x30*/ string TypeIcon;

        /*0xc9f130*/ TableData_Furnitureeffecttype();
    }

    class FurnitureEffectTypeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> List;

        /*0x10a93f0*/ FurnitureEffectTypeTable();
        /*0x10a94e8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureshop
    {
        /*0x10*/ int index;
        /*0x18*/ string Furniture_GroupSalePeriodStart;
        /*0x20*/ string Furniture_GroupSalePeriodEnd;
        /*0x28*/ int FurnitureGroup;
        /*0x2c*/ bool PeriodLocateMain;
        /*0x30*/ int GachaGroup;

        /*0xc9f160*/ TableData_Furnitureshop();
    }

    class FurnitureShopTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureshop> List;

        /*0x10ada0c*/ FurnitureShopTable();
        /*0x10adb04*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureshoplist
    {
        /*0x10*/ int index;
        /*0x14*/ int FurnitureShopGroup;
        /*0x18*/ int FurnitureID;
        /*0x20*/ string FurnitureSet;
        /*0x28*/ string Furniture_SalePrice;
        /*0x30*/ string PackageID;
        /*0x38*/ int PackagePrice;
        /*0x40*/ string Furniture_SaleDiscount;
        /*0x48*/ int Furniture_BuyLimit;

        /*0xc9f168*/ TableData_Furnitureshoplist();
    }

    class FurnitureShopListTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> List;

        /*0x10ad70c*/ FurnitureShopListTable();
        /*0x10ad804*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureset
    {
        /*0x10*/ string FurnitureSet;
        /*0x18*/ string FurnitureSetName;
        /*0x20*/ string FurnitureSetImage;
        /*0x28*/ string FurnitureSetDesc;

        /*0xc9f158*/ TableData_Furnitureset();
    }

    class FurnitureSetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureset> List;

        /*0x10ad4dc*/ FurnitureSetTable();
        /*0x10ad5d4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furniturecontentseffect
    {
        /*0x10*/ int ContentsEffectID;
        /*0x18*/ string Name;
        /*0x20*/ string EffectType;
        /*0x28*/ float EffectValue;

        /*0xc9f128*/ TableData_Furniturecontentseffect();
    }

    class FurnitureContentsEffectTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furniturecontentseffect> List;

        /*0x10a7a10*/ FurnitureContentsEffectTable();
        /*0x10a7b08*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureheroeffect
    {
        /*0x10*/ int HeroEffectID;
        /*0x18*/ string HeroEffectName;
        /*0x20*/ string GroupType;
        /*0x28*/ string[] ParamTypeN;
        /*0x30*/ float[] ParamQtyN;

        /*0xc9f140*/ TableData_Furnitureheroeffect();
    }

    class FurnitureHeroEffectTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureheroeffect> List;

        /*0x10acb38*/ FurnitureHeroEffectTable();
        /*0x10acc30*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furnitureexp
    {
        /*0x10*/ int index;
        /*0x18*/ string FurnitureGrade;
        /*0x20*/ int FurnitureExp;

        /*0xc9f138*/ TableData_Furnitureexp();
    }

    class FurnitureExpTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furnitureexp> List;

        /*0x10a9650*/ FurnitureExpTable();
        /*0x10a9748*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Furniturelevelup
    {
        /*0x10*/ int index;
        /*0x14*/ int FurnitrueLevel;
        /*0x18*/ int GradeA;
        /*0x1c*/ int GradeS;
        /*0x20*/ int GradeSS;
        /*0x24*/ int GradeSSS;
        /*0x28*/ int FurnitureEffect_UpgradeTime;
        /*0x2c*/ int FurnitureEffect_UpgradeFastCost;

        /*0xc9f150*/ TableData_Furniturelevelup();
    }

    class FurnitureLevelupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Furniturelevelup> List;

        /*0x10ad20c*/ FurnitureLevelupTable();
        /*0x10ad304*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Basic
    {
        /*0x10*/ float KILL_MP_CHARGE;
        /*0x14*/ float UNIT_GRADE_PCRI;
        /*0x18*/ float UNIT_GRADE_MCRI;
        /*0x1c*/ float UNIT_GRADE_DODG;
        /*0x20*/ float UNIT_GRADE_SPD;
        /*0x24*/ float UNIT_GRADE_HAST;
        /*0x28*/ float UNIT_GRADE_ACC;
        /*0x2c*/ float UNIT_LV_PCRI;
        /*0x30*/ float UNIT_LV_MCRI;
        /*0x34*/ float UNIT_LV_DODG;
        /*0x38*/ float UNIT_LV_SPD;
        /*0x3c*/ float UNIT_LV_HAST;
        /*0x40*/ float UNIT_LV_ACC;
        /*0x44*/ float UNIT_TIER_PCRI;
        /*0x48*/ float UNIT_TIER_MCRI;
        /*0x4c*/ float UNIT_TIER_DODG;
        /*0x50*/ float UNIT_TIER_SPD;
        /*0x54*/ float UNIT_TIER_HAST;
        /*0x58*/ float UNIT_TIER_ACC;
        /*0x5c*/ float ATTC_HP_COEF;
        /*0x60*/ float ATTC_ATK_COEF;
        /*0x64*/ float ATTC_DEF_COEF;
        /*0x68*/ float ATTC_MR_COEF;
        /*0x6c*/ float ATTC_PCRI_COEF;
        /*0x70*/ float ATTC_MCRI_COEF;
        /*0x74*/ float ATTC_DODG_COEF;
        /*0x78*/ float ATTC_SPD_COEF;
        /*0x7c*/ float ATTC_HAST_COEF;
        /*0x80*/ float ATTC_ACC_COEF;
        /*0x84*/ float ATTC_RGHP_COEF;
        /*0x88*/ float ATTC_PRDC_COEF;
        /*0x8c*/ float ATTC_MRDC_COEF;
        /*0x90*/ float COUNTER_DMG;

        /*0xc9eed8*/ TableData_Basic();
    }

    class BasicTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Basic> List;

        /*0xf88bcc*/ BasicTable();
        /*0xf88cc4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitbase
    {
        /*0x10*/ int Index;
        /*0x14*/ int ID;
        /*0x18*/ string UnitType;
        /*0x20*/ bool Enable;
        /*0x28*/ string Name;
        /*0x30*/ string Nick;
        /*0x38*/ string AttackType;
        /*0x40*/ string Class;
        /*0x48*/ string EquipmentType;
        /*0x50*/ int FactionID;
        /*0x54*/ int INITGrade;
        /*0x58*/ int MaxGrade;
        /*0x5c*/ float HP;
        /*0x60*/ float HP_CF;
        /*0x64*/ float ATK;
        /*0x68*/ float ATK_CF;
        /*0x6c*/ float DEF;
        /*0x70*/ float DEF_CF;
        /*0x74*/ float MR;
        /*0x78*/ float MR_CF;
        /*0x7c*/ float MP;
        /*0x80*/ float MPR;
        /*0x84*/ float SPD;
        /*0x88*/ float PCRI;
        /*0x8c*/ float MCRI;
        /*0x90*/ string ColliderType;
        /*0x98*/ float ColliderX;
        /*0x9c*/ float ColliderY;
        /*0xa0*/ bool Signiture;
        /*0xa4*/ int SIGUnlockGrade;
        /*0xa8*/ string Story;
        /*0xb0*/ string UnitDESC;
        /*0xb8*/ string SpineDataName;
        /*0xc0*/ string SpineSkinName;
        /*0xc8*/ float SpineHitBodyDegree;
        /*0xcc*/ bool SpineHitHeadTurn;
        /*0xcd*/ bool SpineHitFaceChange;
        /*0xd0*/ string IllustNameOriginal;
        /*0xd8*/ string IllustNameSmall;
        /*0xe0*/ string BattleIllustName;
        /*0xe8*/ string DeathSoundName;
        /*0xf0*/ bool NewHero;
        /*0xf4*/ int OriginUnitID;
        /*0xf8*/ int SignatureID;
        /*0xfc*/ int EnemyMazeAppearance;
        /*0x100*/ int MateMazeAppearance;

        /*0xc9f400*/ TableData_Unitbase();
    }

    class UnitBaseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitbase> List;

        /*0x10bfb4c*/ UnitBaseTable();
        /*0x10bfc44*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitgrade
    {
        /*0x10*/ int ID;
        /*0x14*/ int Grade;
        /*0x18*/ int MaxTier;
        /*0x1c*/ float HP;
        /*0x20*/ float AddHP;
        /*0x24*/ float ATK;
        /*0x28*/ float AddATK;
        /*0x2c*/ float DEF;
        /*0x30*/ float AddDEF;
        /*0x34*/ float MR;
        /*0x38*/ float AddMR;

        /*0xc9f408*/ TableData_Unitgrade();
    }

    class UnitGradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitgrade> List;

        /*0x10c1c34*/ UnitGradeTable();
        /*0x10c1d2c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitlv
    {
        /*0x10*/ int LV;
        /*0x14*/ int Tier;
        /*0x18*/ int GoldCost;
        /*0x1c*/ int UnitExpCost;
        /*0x20*/ int TierRequire;
        /*0x24*/ float HP;
        /*0x28*/ float ATK;
        /*0x2c*/ float DEF;
        /*0x30*/ float MR;
        /*0x34*/ int JewelCost;

        /*0xc9f418*/ TableData_Unitlv();
    }

    class UnitLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitlv> List;

        /*0x10c1f84*/ UnitLVTable();
        /*0x10c207c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unittier
    {
        /*0x10*/ int ID;
        /*0x14*/ int Tier;
        /*0x18*/ float HP;
        /*0x1c*/ float ATK;
        /*0x20*/ float DEF;
        /*0x24*/ float MR;

        /*0xc9f420*/ TableData_Unittier();
    }

    class UnitTierTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unittier> List;

        /*0x10c41b4*/ UnitTierTable();
        /*0x10c42ac*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unitgradelv
    {
        /*0x10*/ int Grade;
        /*0x14*/ bool Upgradable;
        /*0x18*/ int MaxLV;
        /*0x20*/ string Name;
        /*0x28*/ string Color;
        /*0x30*/ string OutColor;
        /*0x38*/ string ShadowColor;
        /*0x40*/ string CostType;
        /*0x48*/ int CostGrade;
        /*0x4c*/ int CostQTY;

        /*0xc9f410*/ TableData_Unitgradelv();
    }

    class UnitGradeLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitgradelv> List;

        /*0x10c18f8*/ UnitGradeLVTable();
        /*0x10c19f0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Unittierlv
    {
        /*0x10*/ int Tier;
        /*0x18*/ string UpgradeCost1;
        /*0x20*/ int UpgradeCost2;
        /*0x24*/ int UpgradeCost3;
        /*0x28*/ int TargetLV;

        /*0xc9f428*/ TableData_Unittierlv();
    }

    class UnitTierLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unittierlv> List;

        /*0x10c3f54*/ UnitTierLVTable();
        /*0x10c404c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skillbase
    {
        /*0x10*/ int Index;
        /*0x14*/ int ID;
        /*0x18*/ int CasterID;
        /*0x1c*/ int SkillSlot;
        /*0x20*/ string SkillName;
        /*0x28*/ string SkillType;
        /*0x30*/ string ActiveType;
        /*0x38*/ string PasvCOND;
        /*0x40*/ float PParam1;
        /*0x44*/ float PParam2;
        /*0x48*/ float PParam3;
        /*0x4c*/ float PParam4;
        /*0x50*/ string AttackType;
        /*0x58*/ int PriorityIDLE;
        /*0x5c*/ int PriorityMOVE;
        /*0x60*/ float MPCost;
        /*0x64*/ float MPGain;
        /*0x68*/ float CD;
        /*0x6c*/ float CDINIT;
        /*0x70*/ float CDGlobal;
        /*0x78*/ string SightColliderType;
        /*0x80*/ float SightX;
        /*0x84*/ float SightY;
        /*0x88*/ string StartSoundName;
        /*0x90*/ bool UseIdle;
        /*0x98*/ string AtlasType;
        /*0xa0*/ string IconName;
        /*0xa8*/ string FindColliderType;
        /*0xb0*/ float FindX;
        /*0xb4*/ float FindY;
        /*0xb8*/ float KillMP;

        /*0xc9f380*/ TableData_Skillbase();
    }

    class SkillBaseTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skillbase> List;

        /*0x1510484*/ SkillBaseTable();
        /*0x151057c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skillfx
    {
        /*0x10*/ int Index;
        /*0x14*/ int ID;
        /*0x18*/ string SkillFXName;
        /*0x20*/ int SkillBaseID;
        /*0x24*/ int SkillLV;
        /*0x28*/ string COEFType;
        /*0x30*/ string COEFSet;
        /*0x38*/ float COEFNum;
        /*0x3c*/ float MPPay;
        /*0x40*/ string TargetType1;
        /*0x48*/ string TargetType2;
        /*0x50*/ string TargetType3;
        /*0x58*/ string RangePOSType;
        /*0x60*/ string RangeDIRType;
        /*0x68*/ string RangeColliderType;
        /*0x70*/ float RangeX;
        /*0x74*/ float RangeY;
        /*0x78*/ int BuffID;
        /*0x80*/ string BuffCOND;
        /*0x88*/ float BParam1;
        /*0x8c*/ float BParam2;
        /*0x90*/ float BParam3;
        /*0x94*/ float BParam4;
        /*0x98*/ float KnockBack;
        /*0xa0*/ string SkillDESC;
        /*0xa8*/ string SkillFXType;
        /*0xb0*/ float FParam1;
        /*0xb4*/ float FParam2;
        /*0xb8*/ float FParam3;
        /*0xbc*/ float FParam4;
        /*0xc0*/ string BuffTargetType;
        /*0xc8*/ string Hit_WpnType;
        /*0xd0*/ int MaxCollision;
        /*0xd4*/ bool Buff_MPPay;

        /*0xc9f398*/ TableData_Skillfx();
    }

    class SkillFXTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skillfx> List;

        /*0x15115c4*/ SkillFXTable();
        /*0x15116bc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skilllv
    {
        /*0x10*/ int Index;
        /*0x14*/ int MaxGrade;
        /*0x18*/ int SkillSlot;
        /*0x1c*/ int SkillLV1;
        /*0x20*/ int SkillLV2;
        /*0x24*/ int SkillLV3;
        /*0x28*/ int SkillLV4;

        /*0xc9f3a0*/ TableData_Skilllv();
    }

    class SkillLVTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skilllv> List;

        /*0x14502f4*/ SkillLVTable();
        /*0x14503ec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Buff
    {
        /*0x10*/ int ID;
        /*0x18*/ string Name;
        /*0x20*/ float Time;
        /*0x28*/ string Origin;
        /*0x30*/ string HP_B;
        /*0x38*/ float HP_F;
        /*0x3c*/ float HP_M;
        /*0x40*/ string RGHP_B;
        /*0x48*/ float RGHP_F;
        /*0x4c*/ float RGHP_M;
        /*0x50*/ string ATK_B;
        /*0x58*/ float ATK_F;
        /*0x5c*/ float ATK_M;
        /*0x60*/ string DEF_B;
        /*0x68*/ float DEF_F;
        /*0x6c*/ float DEF_M;
        /*0x70*/ string MR_B;
        /*0x78*/ float MR_F;
        /*0x7c*/ float MR_M;
        /*0x80*/ float MPR_F;
        /*0x84*/ float MPR_M;
        /*0x88*/ float PCRI;
        /*0x8c*/ float MCRI;
        /*0x90*/ float PCRIR;
        /*0x94*/ float MCRIR;
        /*0x98*/ float CRIDMG;
        /*0x9c*/ float CRIDMGR;
        /*0xa0*/ float DODG;
        /*0xa4*/ float SPD;
        /*0xa8*/ float HAST;
        /*0xac*/ float ACC;
        /*0xb0*/ float PRDC;
        /*0xb4*/ float MRDC;
        /*0xb8*/ float SHP;
        /*0xbc*/ float CCR;
        /*0xc0*/ bool UseStat;
        /*0xc8*/ string ShieldType;
        /*0xd0*/ string ShieldHP_B;
        /*0xd8*/ float ShieldHP_F;
        /*0xe0*/ string Effect1;
        /*0xe8*/ string Effect2;
        /*0xf0*/ string Effect3;
        /*0xf8*/ bool Stackable;
        /*0xfc*/ int MaxStack;
        /*0x100*/ bool ClearDeath;
        /*0x101*/ bool Removable;
        /*0x104*/ float Param1;
        /*0x108*/ float Param2;
        /*0x10c*/ float Param3;
        /*0x110*/ float Param4;
        /*0x118*/ string BuffType;
        /*0x120*/ string IconName;

        /*0xc9ef30*/ TableData_Buff();
    }

    class BuffTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Buff> List;

        /*0x16f2224*/ BuffTable();
        /*0x16f231c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Equipment
    {
        /*0x10*/ int Index;
        /*0x18*/ string Name;
        /*0x20*/ string ClassType;
        /*0x28*/ string Type;
        /*0x30*/ string EquipSlot;
        /*0x38*/ int Grade;
        /*0x3c*/ float HP;
        /*0x40*/ float AddHP;
        /*0x44*/ float HP_Per;
        /*0x48*/ float AddHP_Per;
        /*0x4c*/ float ATK;
        /*0x50*/ float AddATK;
        /*0x54*/ float ATK_Per;
        /*0x58*/ float AddATK_Per;
        /*0x5c*/ float DEF;
        /*0x60*/ float AddDEF;
        /*0x64*/ float DEF_Per;
        /*0x68*/ float AddDEF_Per;
        /*0x6c*/ float MR;
        /*0x70*/ float AddMR;
        /*0x74*/ float MR_Per;
        /*0x78*/ float AddMR_Per;
        /*0x7c*/ float PCRI;
        /*0x80*/ float AddPCRI;
        /*0x84*/ float MCRI;
        /*0x88*/ float AddMCRI;
        /*0x8c*/ float DODG;
        /*0x90*/ float AddDODG;
        /*0x94*/ float SPD;
        /*0x98*/ float AddSPD;
        /*0x9c*/ float HAST;
        /*0xa0*/ float AddHAST;
        /*0xa4*/ float ACC;
        /*0xa8*/ float AddACC;
        /*0xac*/ float RGHP;
        /*0xb0*/ float AddRGHP;
        /*0xb4*/ float PRDC;
        /*0xb8*/ float AddPRDC;
        /*0xbc*/ float MRDC;
        /*0xc0*/ float AddMRDC;
        /*0xc4*/ float SHP;
        /*0xc8*/ float AddSHP;
        /*0xcc*/ float FactionBonusChance;
        /*0xd0*/ float FactionBonusRate;
        /*0xd8*/ string FactionBonusChange;
        /*0xe0*/ int Purchase;
        /*0xe4*/ float SellDisc;
        /*0xe8*/ string SellPrice1;
        /*0xf0*/ string SellPrice2;
        /*0xf8*/ int SellPrice3;
        /*0xfc*/ int EnhanceEquip;
        /*0x100*/ int AdvanceEquip;
        /*0x108*/ string Description;
        /*0x110*/ string AtlasType;
        /*0x118*/ string IconName;
        /*0x120*/ int EquipExp;

        /*0xc9f040*/ TableData_Equipment();
    }

    class EquipmentTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Equipment> List;

        /*0x114cd38*/ EquipmentTable();
        /*0x114ce30*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Enhanceequip
    {
        /*0x10*/ int Index;
        /*0x14*/ int MaxGrade;
        /*0x18*/ int[] GradeExpN;

        /*0xc9f038*/ TableData_Enhanceequip();
    }

    class EnhanceEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Enhanceequip> List;

        /*0x14b9a38*/ EnhanceEquipTable();
        /*0x14b9b30*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Advanceequip
    {
        /*0x10*/ int ClassGroup;
        /*0x14*/ int AdvanceGrade;
        /*0x18*/ string RequireCost;

        /*0xc9eeb0*/ TableData_Advanceequip();
    }

    class AdvanceEquipTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Advanceequip> List;

        /*0xed9bb8*/ AdvanceEquipTable();
        /*0xed9cb0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Factionbuff
    {
        /*0x10*/ int Index;
        /*0x18*/ string CondType;
        /*0x20*/ int CondNum1;
        /*0x24*/ int CondNum2;
        /*0x28*/ string Buff1_Stat;
        /*0x30*/ int Buff1_ID;
        /*0x34*/ int Buff1_MaxLV;
        /*0x38*/ int Buff1_LV;
        /*0x40*/ string Buff2_Stat;
        /*0x48*/ int Buff2_ID;
        /*0x4c*/ int Buff2_MaxLV;
        /*0x50*/ int Buff2_LV;

        /*0xc9f100*/ TableData_Factionbuff();
    }

    class FactionBuffTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> List;

        /*0x11d9a94*/ FactionBuffTable();
        /*0x11d9b8c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skilldesc
    {
        /*0x10*/ int Index;
        /*0x14*/ int CasterID;
        /*0x18*/ int SkillSlot;
        /*0x1c*/ int SkillLV;
        /*0x20*/ string SkillDESC;

        /*0xc9f388*/ TableData_Skilldesc();
    }

    class SkillDescTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> List;

        /*0x1510b10*/ SkillDescTable();
        /*0x1510c08*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Demodata
    {
        /*0x10*/ int Index;
        /*0x14*/ int Hero_Buff;
        /*0x18*/ int Ally1_ID;
        /*0x1c*/ int Ally2_ID;
        /*0x20*/ int Ally_Grade;
        /*0x24*/ int Ally_Tier;
        /*0x28*/ int Ally_LV;
        /*0x2c*/ float Ally_Time;
        /*0x30*/ int Ally_Qty;
        /*0x34*/ int Enemy1_ID;
        /*0x38*/ int Enemy2_ID;
        /*0x3c*/ int Enemy_Grade;
        /*0x40*/ int Enemy_Tier;
        /*0x44*/ int Enemy_LV;
        /*0x48*/ float Enemy_Time;
        /*0x4c*/ int Enemy_Qty;

        /*0xc9efe0*/ TableData_Demodata();
    }

    class DemoDataTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Demodata> List;

        /*0x11ef85c*/ DemoDataTable();
        /*0x11ef954*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Artifact
    {
        /*0x10*/ int EquipID;
        /*0x14*/ int EquipLV;
        /*0x18*/ float CD;
        /*0x1c*/ float CDINIT;
        /*0x20*/ string SightColliderType;
        /*0x28*/ float SightX;
        /*0x2c*/ float SightY;
        /*0x30*/ int StartBuffID;
        /*0x34*/ int BuffID;
        /*0x38*/ int SkillFXID;
        /*0x3c*/ int SkillFXLV;
        /*0x40*/ float Param1;
        /*0x44*/ float Param2;
        /*0x48*/ float Param3;
        /*0x4c*/ float Param4;
        /*0x50*/ float Param5;
        /*0x58*/ string EffectDesc;
        /*0x60*/ string GetDesc;
        /*0x68*/ string Move;
        /*0x70*/ bool Enable;

        /*0xc9eed0*/ TableData_Artifact();
    }

    class ArtifactTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Artifact> List;

        /*0xeefc4c*/ ArtifactTable();
        /*0xeefd44*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skillextra
    {
        /*0x10*/ int ID;
        /*0x18*/ string Type;
        /*0x20*/ float Param1;
        /*0x24*/ float Param2;
        /*0x28*/ float Param3;
        /*0x2c*/ float Param4;
        /*0x30*/ float Param5;

        /*0xc9f390*/ TableData_Skillextra();
    }

    class SkillExtraTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skillextra> List;

        /*0x1510e04*/ SkillExtraTable();
        /*0x1510efc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Pvenoblity
    {
        /*0x10*/ int idx;
        /*0x18*/ string Noblity;
        /*0x20*/ int Challenge1_ID;
        /*0x24*/ int Challenge2_ID;
        /*0x28*/ int Challenge3_ID;
        /*0x30*/ string[] AccountReward_TN;

        /*0xc9f298*/ TableData_Pvenoblity();
    }

    class PveNoblityTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Pvenoblity> List;

        /*0x101e144*/ PveNoblityTable();
        /*0x101e23c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Pvechallenge
    {
        /*0x10*/ int Challenge_ID;
        /*0x18*/ string Challenge_Name;
        /*0x20*/ int Challenge_Lv;
        /*0x28*/ string Clear_Reward;
        /*0x30*/ int Clear_UserExp;
        /*0x38*/ string Ally_Formation;
        /*0x40*/ string Enemy_Formation;
        /*0x48*/ string Enemy_ID;
        /*0x50*/ string Enemy_Grade;
        /*0x58*/ string Enemy_Eq;
        /*0x60*/ string Enemy_AddHP;
        /*0x68*/ int Bg_Map;
        /*0x70*/ string[] Enemy_LV_N;
        /*0x78*/ string[] Enemy_Tier_N;

        /*0xc9f288*/ TableData_Pvechallenge();
    }

    class PveChallengeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Pvechallenge> List;

        /*0x101d908*/ PveChallengeTable();
        /*0x101da00*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Pveclearreward
    {
        /*0x10*/ int ClearCount;
        /*0x18*/ string Reward;

        /*0xc9f290*/ TableData_Pveclearreward();
    }

    class PveClearRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> List;

        /*0x101df5c*/ PveClearRewardTable();
        /*0x101e054*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Quest
    {
        /*0x10*/ int Index;
        /*0x18*/ string Content;
        /*0x20*/ string Target;
        /*0x28*/ string Group;
        /*0x30*/ string QuestGroupID;
        /*0x38*/ bool ViewQuest;
        /*0x40*/ string Move;
        /*0x48*/ string RequireQuestGroupId;
        /*0x50*/ bool ViewType;
        /*0x51*/ bool QuestListView;
        /*0x54*/ int Priority;

        /*0xc9f2a0*/ TableData_Quest();
    }

    class QuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Quest> List;

        /*0x1246aa4*/ QuestTable();
        /*0x1246b9c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questgroup
    {
        /*0x10*/ int Index;
        /*0x18*/ string TYPE;
        /*0x20*/ string QuestGroupID;
        /*0x28*/ string QuestID;
        /*0x30*/ int QuestStep;
        /*0x38*/ string Rewards;
        /*0x40*/ int VipPoint;

        /*0xc9f2e0*/ TableData_Questgroup();
    }

    class QuestGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questgroup> List;

        /*0x123eee4*/ QuestGroupTable();
        /*0x123efdc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questpropertypoint
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int FactionID;
        /*0x24*/ int ClearPoint;
        /*0x28*/ string QuestName;

        /*0xc9f318*/ TableData_Questpropertypoint();
    }

    class QuestPropertyPointTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questpropertypoint> List;

        /*0x1245898*/ QuestPropertyPointTable();
        /*0x1245990*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questchapterclear
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int ChapterID;
        /*0x28*/ string QuestName;

        /*0xc9f2b8*/ TableData_Questchapterclear();
    }

    class QuestChapterClearTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questchapterclear> List;

        /*0x123827c*/ QuestChapterClearTable();
        /*0x1238374*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Queststageclear
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int BattleID;
        /*0x28*/ string QuestName;

        /*0xc9f330*/ TableData_Queststageclear();
    }

    class QuestStageClearTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Queststageclear> List;

        /*0x1245f90*/ QuestStageClearTable();
        /*0x1246088*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questgacha
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int FactionID;
        /*0x2c*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2d0*/ TableData_Questgacha();
    }

    class QuestGachaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questgacha> List;

        /*0x123bc5c*/ QuestGachaTable();
        /*0x123bd54*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Queststageidle
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string IdleKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f338*/ TableData_Queststageidle();
    }

    class QuestStageIdleTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Queststageidle> List;

        /*0x12461c8*/ QuestStageIdleTable();
        /*0x12462c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Queststagetry
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Contents;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f340*/ TableData_Queststagetry();
    }

    class QuestStageTryTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Queststagetry> List;

        /*0x1246428*/ QuestStageTryTable();
        /*0x1246520*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questheroupgrade
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string UpgradeKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2f0*/ TableData_Questheroupgrade();
    }

    class QuestHeroUpgradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questheroupgrade> List;

        /*0x123f41c*/ QuestHeroUpgradeTable();
        /*0x123f514*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questequipupgrade
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int Grade;
        /*0x2c*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2c0*/ TableData_Questequipupgrade();
    }

    class QuestEquipUpgradeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questequipupgrade> List;

        /*0x123b774*/ QuestEquipUpgradeTable();
        /*0x123b86c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questfriend
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string PointKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2c8*/ TableData_Questfriend();
    }

    class QuestFriendTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questfriend> List;

        /*0x123b9fc*/ QuestFriendTable();
        /*0x123baf4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questprizeboard
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string PrizeKind;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f310*/ TableData_Questprizeboard();
    }

    class QuestPrizeBoardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questprizeboard> List;

        /*0x124457c*/ QuestPrizeBoardTable();
        /*0x1244674*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questbuy
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string ShopGroup;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2b0*/ TableData_Questbuy();
    }

    class QuestBuyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questbuy> List;

        /*0x123801c*/ QuestBuyTable();
        /*0x1238114*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questarena
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string ArenaKind;
        /*0x28*/ string CountGroup;
        /*0x30*/ int Count;
        /*0x38*/ string QuestName;

        /*0xc9f2a8*/ TableData_Questarena();
    }

    class QuestArenaTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questarena> List;

        /*0x1237d94*/ QuestArenaTable();
        /*0x1237e8c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questheroget
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int GroupDetail;
        /*0x2c*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f2e8*/ TableData_Questheroget();
    }

    class QuestHeroGetTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questheroget> List;

        /*0x123f194*/ QuestHeroGetTable();
        /*0x123f28c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questlevel
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f300*/ TableData_Questlevel();
    }

    class QuestLevelTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questlevel> List;

        /*0x123f8dc*/ QuestLevelTable();
        /*0x123f9d4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questgetitem
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string GetGroup;
        /*0x28*/ string ItemType;
        /*0x30*/ string ItemId;
        /*0x38*/ long Count;
        /*0x40*/ string QuestName;

        /*0xc9f2d8*/ TableData_Questgetitem();
    }

    class QuestGetItemTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questgetitem> List;

        /*0x123d1cc*/ QuestGetItemTable();
        /*0x123d2c4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questmove
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ string MoveContent;
        /*0x30*/ int Count;
        /*0x38*/ string QuestName;

        /*0xc9f308*/ TableData_Questmove();
    }

    class QuestMoveTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questmove> List;

        /*0x1241d9c*/ QuestMoveTable();
        /*0x1241e94*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questlabyrinth
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int ClearFloor;
        /*0x24*/ int Count;
        /*0x28*/ string QuestName;

        /*0xc9f2f8*/ TableData_Questlabyrinth();
    }

    class QuestLabyrinthTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questlabyrinth> List;

        /*0x123f67c*/ QuestLabyrinthTable();
        /*0x123f774*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questresonance
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ string Group;
        /*0x28*/ int Count;
        /*0x30*/ string QuestName;

        /*0xc9f320*/ TableData_Questresonance();
    }

    class QuestResonanceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questresonance> List;

        /*0x1245af8*/ QuestResonanceTable();
        /*0x1245bf0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Questspirittowerclear
    {
        /*0x10*/ int Index;
        /*0x18*/ string QuestID;
        /*0x20*/ int Floor;
        /*0x28*/ string QuestName;

        /*0xc9f328*/ TableData_Questspirittowerclear();
    }

    class QuestSpiritTowerClearTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Questspirittowerclear> List;

        /*0x1245d58*/ QuestSpiritTowerClearTable();
        /*0x1245e50*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Racetile
    {
        /*0x10*/ int Index;
        /*0x18*/ string TileType;
        /*0x20*/ string TileSpriteName;
        /*0x28*/ float Percent;
        /*0x2c*/ int Limit;
        /*0x30*/ int Interval;
        /*0x38*/ string AnimType;
        /*0x40*/ int StartOffset;
        /*0x44*/ float BeginTileTime;
        /*0x48*/ float BeginSpeedValue;
        /*0x4c*/ float FinishTileTime;
        /*0x50*/ float FinishSpeedValue;
        /*0x54*/ bool EnableObject;
        /*0x58*/ string ObjectSpriteName;
        /*0x60*/ float ObjectOffsetX;
        /*0x64*/ float ObjectOffsetY;

        /*0xc9f358*/ TableData_Racetile();
    }

    class RaceTileTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Racetile> List;

        /*0x11b8f4c*/ RaceTileTable();
        /*0x11b9044*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Raceaccel
    {
        /*0x10*/ int Index;
        /*0x14*/ float Speed;
        /*0x18*/ float Percent;
        /*0x1c*/ int Limit;

        /*0xc9f348*/ TableData_Raceaccel();
    }

    class RaceAccelTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> List;

        /*0x1246e20*/ RaceAccelTable();
        /*0x1246f18*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Racereward
    {
        /*0x10*/ int Reward_IDX;
        /*0x18*/ string Race_Reward1;
        /*0x20*/ string Race_Reward2;
        /*0x28*/ string Race_Reward3;

        /*0xc9f350*/ TableData_Racereward();
    }

    class RaceRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Racereward> List;

        /*0x11b5394*/ RaceRewardTable();
        /*0x11b548c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Relation
    {
        /*0x10*/ int Relation_Idx;
        /*0x14*/ bool Enable;
        /*0x18*/ string Relation_Name;
        /*0x20*/ int Total_Hero;
        /*0x28*/ string LV1_Grade1;
        /*0x30*/ int LV1_Qty1;
        /*0x38*/ string LV1_Grade2;
        /*0x40*/ int LV1_Qty2;
        /*0x48*/ string LV1_StatType1;
        /*0x50*/ float LV1_StatQty1;
        /*0x58*/ string LV1_StatType2;
        /*0x60*/ float LV1_StatQty2;
        /*0x68*/ string LV2_Grade1;
        /*0x70*/ int LV2_Qty1;
        /*0x78*/ string LV2_Grade2;
        /*0x80*/ int LV2_Qty2;
        /*0x88*/ string LV2_StatType1;
        /*0x90*/ float LV2_StatQty1;
        /*0x98*/ string LV3_Grade1;
        /*0xa0*/ int LV3_Qty1;
        /*0xa8*/ string LV3_Grade2;
        /*0xb0*/ int LV3_Qty2;
        /*0xb8*/ string LV3_StatType1;
        /*0xc0*/ float LV3_StatQty1;
        /*0xc8*/ string LV4_Grade1;
        /*0xd0*/ int LV4_Qty1;
        /*0xd8*/ string LV4_Grade2;
        /*0xe0*/ int LV4_Qty2;
        /*0xe8*/ string LV4_StatType1;
        /*0xf0*/ float LV4_StatQty1;
        /*0xf8*/ string LV5_Grade1;
        /*0x100*/ int LV5_Qty1;
        /*0x108*/ string LV5_Grade2;
        /*0x110*/ int LV5_Qty2;
        /*0x118*/ string LV5_StatType1;
        /*0x120*/ float LV5_StatQty1;
        /*0x128*/ string LV6_Grade1;
        /*0x130*/ int LV6_Qty1;
        /*0x138*/ string LV6_Grade2;
        /*0x140*/ int LV6_Qty2;
        /*0x148*/ string LV6_StatType1;
        /*0x150*/ float LV6_StatQty1;
        /*0x158*/ string LV7_Grade1;
        /*0x160*/ int LV7_Qty1;
        /*0x168*/ string LV7_Grade2;
        /*0x170*/ int LV7_Qty2;
        /*0x178*/ string LV7_StatType1;
        /*0x180*/ float LV7_StatQty1;
        /*0x188*/ string LV8_Grade1;
        /*0x190*/ int LV8_Qty1;
        /*0x198*/ string LV8_Grade2;
        /*0x1a0*/ int LV8_Qty2;
        /*0x1a8*/ string LV8_StatType1;
        /*0x1b0*/ float LV8_StatQty1;
        /*0x1b8*/ int[] HeroN_ID;

        /*0xc9f360*/ TableData_Relation();
    }

    class RelationTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Relation> List;

        /*0xf1b660*/ RelationTable();
        /*0xf1b758*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Runreward
    {
        /*0x10*/ int Reward_IDX;
        /*0x14*/ int UserLV;
        /*0x18*/ int[] RewardN_Max;
        /*0x20*/ string[] RewardN_One;

        /*0xc9f378*/ TableData_Runreward();
    }

    class RunRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Runreward> List;

        /*0x1295ff4*/ RunRewardTable();
        /*0x12960ec*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Runlife
    {
        /*0x10*/ int Unit_ID;
        /*0x14*/ int A_Life;
        /*0x18*/ int S_Life;
        /*0x1c*/ int SS_Life;
        /*0x20*/ int SSS_Life;
        /*0x24*/ float Mov_Spd;
        /*0x28*/ float MovAni_Spd;
        /*0x2c*/ float JumpAni_Spd;
        /*0x30*/ float Inv_Time;

        /*0xc9f370*/ TableData_Runlife();
    }

    class RunLifeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Runlife> List;

        /*0x12952cc*/ RunLifeTable();
        /*0x12953c4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopindex
    {
        /*0x10*/ string PackageId;
        /*0x18*/ string IOS;
        /*0x20*/ string Android;
        /*0x28*/ string Onestore;

        /*0xc9ef50*/ TableData_Cashshopindex();
    }

    class CashShopIndexTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopindex> List;

        /*0x15424d4*/ CashShopIndexTable();
        /*0x15425cc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshoplimit
    {
        /*0x10*/ int Index;
        /*0x18*/ string TimeKey;
        /*0x20*/ string PackageId;
        /*0x28*/ string PackageName;
        /*0x30*/ string PackageArrangement;
        /*0x38*/ string ResetType;
        /*0x40*/ int PurchaseCount;
        /*0x44*/ int PackagePrice;
        /*0x48*/ string PackageBadge;
        /*0x50*/ int BadgePercent;
        /*0x58*/ string FirstPackageProduct;
        /*0x60*/ string ProductType;
        /*0x68*/ string PackageProduct;
        /*0x70*/ string BonusPackageProduct;
        /*0x78*/ string PackageDesc;
        /*0x80*/ string PackageImg;
        /*0x88*/ string BannerBGImageEnable;
        /*0x90*/ string BannerBGImageDisable;
        /*0x98*/ int VipPoint;
        /*0xa0*/ string Location;
        /*0xa8*/ string PackageSubDesc;

        /*0xc9ef60*/ TableData_Cashshoplimit();
    }

    class CashShopLimitTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshoplimit> List;

        /*0x1542b44*/ CashShopLimitTable();
        /*0x1542c3c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopdaily
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9ef40*/ TableData_Cashshopdaily();
    }

    class CashShopDailyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopdaily> List;

        /*0x1540d28*/ CashShopDailyTable();
        /*0x1540e20*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopweekly
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9efa0*/ TableData_Cashshopweekly();
    }

    class CashShopWeeklyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopweekly> List;

        /*0xd6cb14*/ CashShopWeeklyTable();
        /*0xd6cc0c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopmonthly
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9ef68*/ TableData_Cashshopmonthly();
    }

    class CashShopMonthlyTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopmonthly> List;

        /*0x15486c0*/ CashShopMonthlyTable();
        /*0x15487b8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopstar
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ string FirstReset;
        /*0x60*/ int PurchaseCount;
        /*0x64*/ int PackagePrice;
        /*0x68*/ string PackageBadge;
        /*0x70*/ int BadgePercent;
        /*0x78*/ string FirstPackageProduct;
        /*0x80*/ string FirstBonusPackageProduct;
        /*0x88*/ string PackageProduct;
        /*0x90*/ string BonusPackageProduct;
        /*0x98*/ string PackageDesc;
        /*0xa0*/ string PackageImg;
        /*0xa8*/ int VipPoint;

        /*0xc9ef90*/ TableData_Cashshopstar();
    }

    class CashShopStarTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopstar> List;

        /*0xd6b8b0*/ CashShopStarTable();
        /*0xd6b9a8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshophero
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;
        /*0xa0*/ string TitleInlineColor;
        /*0xa8*/ string TitleOutlineColor;
        /*0xb0*/ string DescInlineColor;
        /*0xb8*/ string DescOutlineColor;

        /*0xc9ef48*/ TableData_Cashshophero();
    }

    class CashShopHeroTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshophero> List;

        /*0x1541d18*/ CashShopHeroTable();
        /*0x1541e10*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopsubscription
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string PackageKind;
        /*0x78*/ string FirstPackageProduct;
        /*0x80*/ string PackageProduct;
        /*0x88*/ string BonusPackageProduct;
        /*0x90*/ int SubscriptionDay;
        /*0x98*/ string SubscriptionProduct;
        /*0xa0*/ string PackageDesc;
        /*0xa8*/ string PackageImg;
        /*0xb0*/ int VipPoint;

        /*0xc9ef98*/ TableData_Cashshopsubscription();
    }

    class CashShopSubscriptionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopsubscription> List;

        /*0xd6bd90*/ CashShopSubscriptionTable();
        /*0xd6be88*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopbeginner
    {
        /*0x10*/ int Index;
        /*0x18*/ string PackageId;
        /*0x20*/ string PackageName;
        /*0x28*/ string PackageArrangement;
        /*0x30*/ string ResetType;
        /*0x38*/ int PurchaseCount;
        /*0x3c*/ int PackagePrice;
        /*0x40*/ string PackageBadge;
        /*0x48*/ int BadgePercent;
        /*0x50*/ string FirstPackageProduct;
        /*0x58*/ string PackageProduct;
        /*0x60*/ string BonusPackageProduct;
        /*0x68*/ int SubscriptionDay;
        /*0x70*/ string SubscriptionProduct;
        /*0x78*/ string PackageDesc;
        /*0x80*/ string PackageImg;
        /*0x88*/ int VipPoint;

        /*0xc9ef38*/ TableData_Cashshopbeginner();
    }

    class CashShopBeginnerTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopbeginner> List;

        /*0x15408e8*/ CashShopBeginnerTable();
        /*0x15409e0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopinstant
    {
        /*0x10*/ int Index;
        /*0x18*/ string RequireTrigger;
        /*0x20*/ string RequireTriggerRate;
        /*0x28*/ string Type;
        /*0x30*/ string RemainTimeKind;
        /*0x38*/ int RemainTimeCount;
        /*0x40*/ string PackageId;
        /*0x48*/ string PackageName;
        /*0x50*/ int PackagePrice;
        /*0x58*/ string PackageBadge;
        /*0x60*/ int BadgePercent;
        /*0x68*/ string PackageDesc;
        /*0x70*/ string PackageImg;
        /*0x78*/ int VipPoint;
        /*0x80*/ string PackageSubDesc;
        /*0x88*/ string SubMenuKey;
        /*0x90*/ int Priority;

        /*0xc9ef58*/ TableData_Cashshopinstant();
    }

    class CashShopInstantTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopinstant> List;

        /*0x1542704*/ CashShopInstantTable();
        /*0x15427fc*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Packageproductgroup
    {
        /*0x10*/ string PackageId;
        /*0x18*/ int Group;
        /*0x20*/ string Product;

        /*0xc9f268*/ TableData_Packageproductgroup();
    }

    class PackageProductGroupTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> List;

        /*0x1141adc*/ PackageProductGroupTable();
        /*0x1141bd4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopquest
    {
        /*0x10*/ int Index;
        /*0x18*/ string PackageId;
        /*0x20*/ string PackageName;
        /*0x28*/ string PackageArrangement;
        /*0x30*/ int PackagePrice;
        /*0x38*/ string PackageBadge;
        /*0x40*/ int BadgePercent;
        /*0x48*/ string PackageDesc;
        /*0x50*/ string PackageImg;
        /*0x58*/ int VipPoint;

        /*0xc9ef70*/ TableData_Cashshopquest();
    }

    class CashShopQuestTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopquest> List;

        /*0xd69464*/ CashShopQuestTable();
        /*0xd6955c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopquestreward
    {
        /*0x10*/ int index;
        /*0x18*/ string ShopId;
        /*0x20*/ string Trigger;
        /*0x28*/ string Reward;

        /*0xc9ef78*/ TableData_Cashshopquestreward();
    }

    class CashShopQuestRewardTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopquestreward> List;

        /*0xd6922c*/ CashShopQuestRewardTable();
        /*0xd69324*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contentshop
    {
        /*0x10*/ int Index;
        /*0x18*/ string ShopCatogoryId;
        /*0x20*/ string ResetType;
        /*0x28*/ string RequireQuestGroupId;
        /*0x30*/ string UseCurrency;
        /*0x38*/ string LogID;

        /*0xc9efc8*/ TableData_Contentshop();
    }

    class ContentShopTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contentshop> List;

        /*0xf4bec0*/ ContentShopTable();
        /*0xf4bfb8*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Contentshoparrangement
    {
        /*0x10*/ int Index;
        /*0x14*/ int SubIndex;
        /*0x18*/ string ShopCategoryID;
        /*0x20*/ string PackageBadge;
        /*0x28*/ string PayType;
        /*0x30*/ string PackageGroup1;
        /*0x38*/ string PackageGroup2;
        /*0x40*/ string PackageGroup3;
        /*0x48*/ string PackageGroup4;

        /*0xc9efd0*/ TableData_Contentshoparrangement();
    }

    class ContentShopArrangementTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Contentshoparrangement> List;

        /*0x10ec0d8*/ ContentShopArrangementTable();
        /*0x10ec1d0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Packagetime
    {
        /*0x10*/ string TimeKey;
        /*0x18*/ string StartDate;
        /*0x20*/ string EndDate;
        /*0x28*/ int RepeatDay;

        /*0xc9f270*/ TableData_Packagetime();
    }

    class PackageTimeTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Packagetime> List;

        /*0x1141cec*/ PackageTimeTable();
        /*0x1141de4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopskinpiece
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;

        /*0xc9ef88*/ TableData_Cashshopskinpiece();
    }

    class CashShopSkinPieceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopskinpiece> List;

        /*0xd6af18*/ CashShopSkinPieceTable();
        /*0xd6b010*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Cashshopskin
    {
        /*0x10*/ int Index;
        /*0x18*/ string StartDate;
        /*0x20*/ string StartTime;
        /*0x28*/ string EndDate;
        /*0x30*/ string EndTime;
        /*0x38*/ string PackageId;
        /*0x40*/ string PackageName;
        /*0x48*/ string PackageArrangement;
        /*0x50*/ string ResetType;
        /*0x58*/ int PurchaseCount;
        /*0x5c*/ int PackagePrice;
        /*0x60*/ string PackageBadge;
        /*0x68*/ int BadgePercent;
        /*0x70*/ string FirstPackageProduct;
        /*0x78*/ string PackageProduct;
        /*0x80*/ string BonusPackageProduct;
        /*0x88*/ string PackageDesc;
        /*0x90*/ string PackageImg;
        /*0x98*/ int VipPoint;
        /*0xa0*/ string PackageSubDesc;
        /*0xa8*/ string TitleInlineColor;
        /*0xb0*/ string TitleOutlineColor;

        /*0xc9ef80*/ TableData_Cashshopskin();
    }

    class CashShopSkinTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Cashshopskin> List;

        /*0xd6b3a8*/ CashShopSkinTable();
        /*0xd6b4a0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Skinbasic
    {
        /*0x10*/ int Index;
        /*0x14*/ int UnitID;
        /*0x18*/ string Name;
        /*0x20*/ string MoveShopPackage;
        /*0x28*/ string RequireItem;
        /*0x30*/ string UIIcon;
        /*0x38*/ string DuplicateReturn;

        /*0xc9f3a8*/ TableData_Skinbasic();
    }

    class SkinBasicTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> List;

        /*0x145059c*/ SkinBasicTable();
        /*0x1450694*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Voice
    {
        /*0x10*/ int UnitID;
        /*0x18*/ string Key;
        /*0x20*/ string Valuse;
        /*0x28*/ string AssetbundleType;

        /*0xc9f440*/ TableData_Voice();
    }

    class VoiceTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Voice> List;

        /*0xdfd098*/ VoiceTable();
        /*0xdfd190*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Arenaconfig
    {
        /*0x10*/ string Name;
        /*0x18*/ string Value;

        /*0xc9eec0*/ TableData_Arenaconfig();
    }

    class ArenaConfigTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Arenaconfig> List;

        /*0xee3d54*/ ArenaConfigTable();
        /*0xee3e4c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldarenatier2
    {
        /*0x10*/ int TierStep;
        /*0x18*/ string TierName;
        /*0x20*/ string TierGroupName;
        /*0x28*/ int RaisePoint;
        /*0x2c*/ int RaiseRank;
        /*0x30*/ string BattleWinReward;
        /*0x38*/ string RaiseReward;
        /*0x40*/ string TierReward;
        /*0x48*/ string DailyReward;
        /*0x50*/ string SeasonReward;
        /*0x58*/ int NewseasonBasicPoint;
        /*0x5c*/ float newseasonPlusPoint;
        /*0x60*/ string BestPointReward;

        /*0xc9f468*/ TableData_Worldarenatier2();
    }

    class WorldArenaTier2Table
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldarenatier2> List;

        /*0xe09c14*/ WorldArenaTier2Table();
        /*0xe09d0c*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldbossstep
    {
        /*0x10*/ int StepID;
        /*0x18*/ string GradeName;
        /*0x20*/ int BattleID;
        /*0x24*/ int WorldBossID;
        /*0x28*/ int WorldBossLevel;
        /*0x2c*/ int WorldBossGrade;
        /*0x30*/ int StartBuff;
        /*0x38*/ string BasicReward;
        /*0x40*/ string StepReward;

        /*0xc9f478*/ TableData_Worldbossstep();
    }

    class WorldBossStepTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldbossstep> List;

        /*0xe0f1c8*/ WorldBossStepTable();
        /*0xe0f2c0*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class TableData_Worldbossmission
    {
        /*0x10*/ int Index;
        /*0x14*/ int StepID;
        /*0x18*/ int WorldBossID;
        /*0x1c*/ int MissionStep;
        /*0x20*/ string Trigger;
        /*0x28*/ string MissionReward;

        /*0xc9f470*/ TableData_Worldbossmission();
    }

    class WorldBossMissionTable
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> List;

        /*0xe0e6bc*/ WorldBossMissionTable();
        /*0xe0e7b4*/ void <.ctor>b__1_0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }
}

namespace Battle
{
    class Constants
    {
        static int VERIFY_CLIENT = 1;
        static int VERIFY_SERVER = 2;
        static string REPLAY_NO_AUTO_NO_SKILL = "NoAutoNoSkill";
        static float BATTLE_SPEED_IDLE = 0.800000011920929;
        static float BATTLE_SPEED_NORMAL = 0.800000011920929;
        static float BATTLE_SPEED_FAST_X2 = 1;
        static float BATTLE_SPEED_FAST_X3 = 1.399999976158142;
        static float BATTLE_SPEED_FAST_X4 = 1.7000000476837158;
        static float TARGET_DELTA_TIME = 0.016599999740719795;
        static float GAME_SPEED_MULT = 1.25;
        static float DELTA_TIME_SYNC = 0.020749999210238457;
        static float DELTA_TIME_REAL = 0.020749999210238457;
        static float HPSP_RECOVERY_TICK_TIME = 0.10000000149011612;
        static float ONE_SECOND_TICK_TIME = 1;
        static float CRITICAL_DAMAGE_MULT = 2;
        static float COIN_FLYING_SPEED = 2;
        static float COIN_FALLEN_SPEED_MIN = 0.5;
        static float COIN_FALLEN_SPEED_MAX = 1.5;
        static float BOSS_ITEM_SPEED = 5;
        static float PROJECTILE_DEFAULT_POSZ = -1;
        static float PROJECTILE_DEFAULT_POSZ_SYNCTOOL = 9;
        static float PARTICLE_DEFAULT_POSZ = -1.100000023841858;
        static float SIN_45_DEGREE = 0.7071067690849304;
        static float COLLISION_CHECK_POSITION_INTERVAL = 0.30000001192092896;
        static float COLLISION_CHECK_POSITION_MIN_DISTANCE = 0.20000000298023224;
        static string COLOR_PROPERTY_NAME = "_Color";
        static string BLACKTINT_PROPERTY_NAME = "_Black";
        static int FACTION_FIRE = 1;
        static int FACTION_WIND = 2;
        static int FACTION_EARTH = 3;
        static int FACTION_WATER = 4;
        static int FACTION_GOD = 5;
        static int FACTION_DEMON = 6;
        static int FACTION_OTHER = 7;
        static float BUFF_EXIT_WHEN_OWNER_SKILL_END = -1;
        static float BUFF_EXIT_WHEN_CASTER_SKILL_END = -2;
        static float BUFF_NO_TIME_LIMIT = 9999;
        static string BUFF_BASE_STAT_DAMAGE_NAME = "RECENT_DAMAGE";
        static string ANIM_COIN_IN_NAME = "in";
        static string ANIM_IDLE_NAME = "idle";
        static string ANIM_IDLE_UNARM_NAME = "idle_unarmed";
        static string ANIM_IDLE_BDRAGON_SP_03_NAME = "idle_Bdragon_sp_03";
        static string ANIM_MOVE_NAME = "run";
        static string ANIM_MOVE_UNARM_NAME = "run_unarmed";
        static string ANIM_JUMP_NAME = "jump";
        static string ANIM_JUMP_UNARM_NAME = "jump_unarmed";
        static string ANIM_COUNTER_NAME = "cc_counter";
        static string ANIM_STUN_NAME = "cc_stun";
        static string ANIM_STUN_UNARM_NAME = "cc_stun_unarmed";
        static string ANIM_FREEZE_NAME = "cc_freeze";
        static string ANIM_SLEEP_NAME = "cc_sleep";
        static string ANIM_HORROR_NAME = "cc_terror";
        static string ANIM_HORROR_UNARM_NAME = "cc_terror_unarmed";
        static string ANIM_FALL_NAME = "cc_fall";
        static string ANIM_FALL_UNARM_NAME = "cc_fall_unarmed";
        static string ANIM_DEATH_01_NAME = "dead_01";
        static string ANIM_DEATH_02_NAME = "dead_02";
        static string ANIM_DEATH_03_NAME = "dead_03";
        static string ANIM_DEATH_UNARM_NAME = "dead_unarmed";
        static string ANIM_ATK_01_NAME = "atk_01";
        static string ANIM_ATK_02_NAME = "atk_02";
        static string ANIM_SP_01_NAME = "sp_01";
        static string ANIM_SP_02_NAME = "sp_02";
        static string ANIM_SP_03_NAME = "sp_03";
        static string ANIM_ULT_01_NAME = "ult";
        static string ANIM_WIN_NAME = "win";
        static string ANIM_LOSE_NAME = "lose";
        static string ANIM_ATTACK_HIT_NAME = "hit";
        static string ANIM_SPECIAL_SKILL_EFFECT_NAME = "effect";
        static string ANIM_FINISH_NAME = "finish";
        static string ANIM_BONE_HEAD_NAME = "head";
        static string ANIM_BONE_FIRE_NAME = "fire_point";
        static string ANIM_BONE_BODY01_NAME = "body_01";
        static string ANIM_BONE_BODY02_NAME = "body_02";
        static string ANIM_SLOT_CENTER_NAME = "position_center";
        static string ANIM_SLOT_SIDE_NAME = "position_side";
        static string ANIM_EYE_IN_01_SLOT_NAME = "eye_in_01";
        static string ANIM_EYE_IN_02_SLOT_NAME = "eye_in_hit";
        static string ANIM_EYE_IN_02_ATTACH_NAME = "eye_in_hit";
        static string ANIM_EYE_OUT_01_SLOT_NAME = "eye_out_01";
        static string ANIM_EYE_OUT_02_SLOT_NAME = "eye_out_hit";
        static string ANIM_EYE_OUT_02_ATTACH_NAME = "eye_out_hit";
        static string ANIM_MOUTH_01_SLOT_NAME = "mouth_01";
        static string ANIM_MOUTH_02_SLOT_NAME = "mouth_hit";
        static string ANIM_MOUTH_02_ATTACH_NAME = "mouth_hit";
        static string ANIM_EVENT_DISSOLVE_NAME = "dissolve";
        static float ANIM_HIT_ROTATION_DEGREES = 30;
        static float ANIM_HIT_ROTATION_SPEED = 25;
        static AssetBundleType UNIT_POOL_NAME = 20;
        static AssetBundleType PROJECTILE_POOL_NAME = 21;
        static AssetBundleType PARTICLE_POOL_NAME = 22;
        static AssetBundleType PARTICLE_BG_POOL_NAME = 100;
        static AssetBundleType PARTICLE_UI_POOL_NAME = 23;
        static AssetBundleType WORLD_UI_POOL_NAME = 24;
        static AssetBundleType TOOLTIP_UI_POOL_NAME = 25;
        static string UNIT_NAME = "Unit";
        static string UNIT_BOSS_BIG_NAME = "Unit_Boss_Big";
        static string DAMAGE_MARKER_NAME = "DamageMarker";
        static string DROP_COIN_NAME = "DropCoin";
        static string BOSS_DROP_ITEM_NAME = "BossDropItem";
        static string BUFF_ICON_NAME = "BuffIcon";
        static string SUPPORT_CUTSCENE_ALLY_NAME = "SupportCutScene_Ally";
        static string SUPPORT_CUTSCENE_ENEMY_NAME = "SupportCutScene_Enemy";
        static float END_TO_IDLE_DELAY = 2;
        static float START_HAST_DISTANCE_BATTLE = 2;
        static float START_HAST_DISTANCE_DEMO = 2;
        static float PREVIEW_POSX_FACTOR = 2;
        static int ATTACK_AMOUNT_UNLIMITED = -1;
        static float STAMINA_GAIN_SPEED = 0.5;
        static float ATTACKED_GAIN_MP = 0.5;
        static float PROJECTILE_DEFAULT_SPEED = 10;
        static float PROJECTILE_FALLEN_DEFAULT_SPEED = 20;
        static float PROJECTILE_BOMB_DEFAULT_HEIGHT = 3;
        static float PROJECTILE_BOMB_DEFAULT_TIME = 1.5;
        static float PROJECTILE_MAX_DISTANCE = 10;
        static float DEMO_SPAWN_DELAY_TIME_MIN = 5;
        static float DEMO_SPAWN_DELAY_TIME_MAX = 10;
        static int IDLE_SPAWN_MONSTER_AMOUNT_MAX = 4;
        static float START_HAST_IDLE = 50;
        static float START_HAST_DISTANCE_IDLE = 1;
        static float SPAWN_POSX_GAP_MAX = 1.2000000476837158;
        static float BATTLE_AREA_LIMIT_POSX_IDLE = 5;
        static float IDLE_SPAWN_DELAY_TIME_MIN = 0.5;
        static float IDLE_SPAWN_DELAY_TIME_MAX = 3;
        static int DEMO_SPAWN_ALLY_AMOUNT_MAX = 3;
        static int DEMO_SPAWN_ENEMY_AMOUNT_MAX = 4;
        static float HPBAR_POSY_INC = 0.5;
        static float DAMAGE_MARKER_TIME = 0.44999998807907104;
        static float DAMAGE_MARKER_SPEED = 0.699999988079071;
        static /*0x0*/ BattleNameGroup Names;
        static /*0x8*/ BattleConstantsGroup BattleConstants;
        static /*0x10*/ BattleAudioGroup Audios;
        static /*0x18*/ BuffIconNameGroup BuffIconNames;
        static /*0x20*/ IdleConstantsGroup IdleConstants;
        static /*0x28*/ BattleGizmoGroup Gizmos;
        static /*0x30*/ UnityEngine.Vector2 VECTOR2_ZERO;
        static /*0x38*/ UnityEngine.Vector3 COIN_DESTINATION;
        static /*0x44*/ UnityEngine.Vector3 COIN_SCALE_DEFAULT;
        static /*0x50*/ UnityEngine.Vector3 DefaultCharacterScale;
        static /*0x5c*/ UnityEngine.Vector3 WorldBossEvilPetScale;
        static /*0x68*/ UnityEngine.Vector3 DefaultCharacterWorldUICanvasScale;
        static /*0x74*/ UnityEngine.Vector3 DefaultProjectileScale;
        static /*0x80*/ UnityEngine.Color ANIM_SKILL_FADE_COLOR;
        static /*0x90*/ float BATTLE_AREA_LIMIT_POSX_BATTLE;
        static /*0x94*/ float BATTLE_AREA_LIMIT_POSY_UPPER_BATTLE;
        static /*0x98*/ float BATTLE_AREA_LIMIT_POSY_UNDER_BATTLE;
        static /*0x9c*/ Battle.ColliderData PROJECTILE_DEFAULT_COLLIDER;
        static /*0xa8*/ Battle.ColliderData COLLIDER_NULL;
        static /*0xb4*/ Battle.ColliderData COLLIDER_INFINITE;
        static /*0xc0*/ UnityEngine.Vector2 WORLDBOSS_POSITION;
        static /*0xc8*/ UnityEngine.Vector2 WORLDBOSS_PLAYER_AREA_CENTER_POSITION;
        static /*0xd0*/ UnityEngine.Vector2 WORLDBOSS_NEAR_ATTACK_COLLIDER_POS;
        static /*0xd8*/ UnityEngine.Vector2 WORLDBOSS_FAR_ATTACK_COLLIDER_POS;
        static /*0xe0*/ Battle.ColliderData WORLDBOSS_NEAR_ATTACK_COLLIDER;
        static /*0xec*/ Battle.ColliderData WORLDBOSS_FAR_ATTACK_COLLIDER;
        static /*0xf8*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV1_1;
        static /*0x100*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV1_2;
        static /*0x108*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV2_1;
        static /*0x110*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV2_2;
        static /*0x118*/ UnityEngine.Vector2 WORLDBOSS_NEAR_NIDDLE_ATTACK_POS_LV2_3;
        static /*0x120*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV1_1;
        static /*0x128*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV1_2;
        static /*0x130*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV1_3;
        static /*0x138*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_1;
        static /*0x140*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_2;
        static /*0x148*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_3;
        static /*0x150*/ UnityEngine.Vector2 WORLDBOSS_FAR_NIDDLE_ATTACK_POS_LV2_4;
        static /*0x158*/ float DEFAULT_CAMERA_RATIO;
        static /*0x15c*/ UnityEngine.Vector3 SKILL_UI_UP_VECTOR;
        static /*0x168*/ float GW_TimeLimit;
        static /*0x16c*/ float GW_SupportorCooltime;
        static /*0x170*/ float GW_CCTimeMult;
        static /*0x174*/ float GW_SupportAddMPPerSecond;
        static /*0x178*/ int PveRanking_LimitTime;
        static /*0x17c*/ float UnlockCP_Arena;
        static /*0x180*/ float UnlockCP_WorldArena;
        static /*0x184*/ float MonsterCharRate;
        static /*0x188*/ float UnlockCP_PveRanking;

        static /*0x10e9e4c*/ Constants();
        static /*0x10e9650*/ void Initialize();
        static /*0x10e9cbc*/ int get_MAX_HP_RATIO();
        static /*0x10e9d20*/ int get_MAX_MP_RATIO();
        static /*0x10e9d84*/ float get_MULT_HP_RATIO();
        static /*0x10e9de8*/ float get_MULT_MP_RATIO();
    }

    enum GameModeType
    {
        NONE = 0,
        CAMPAIN = 1,
        DEMO = 2,
        DPS = 3,
        IDLE = 4,
        TOWER = 5,
        TOWER_FACTION = 6,
        ARENA = 7,
        ARENA_HIGH = 8,
        MAZE = 9,
        FRIEND_BATTLE = 10,
        GUILD_WAR = 11,
        GUILD_HUNT = 12,
        DUNGEON = 13,
        WORLDBOSS = 14,
        PVE_RANKING = 15,
        LAST = 16,
    }

    enum BattleStateType
    {
        NONE = 0,
        NORMAL = 1,
        NORMAL_NO_TROOP = 2,
        REPLAY_SELECT = 3,
        REPLAY_CURRENT = 4,
        REPLAY_VERIFY = 5,
        CUSTOM = 6,
        TUTORIAL = 7,
    }

    enum StageBattleType
    {
        NONE = 0,
        NORMAL = 1,
        BOSS = 2,
        IDLE = 3,
        TOWER = 4,
        GUILDBOSS = 5,
        WORLDBOSS = 6,
        LAST = 7,
    }

    enum BattleSpeedType
    {
        TOGGLE_FAST_X2 = 0,
        TOGGLE_FAST_X3 = 1,
        TOGGLE_FAST_X4 = 2,
        IDLE = 3,
        NORMAL = 4,
        FAST_X2 = 5,
        FAST_X3 = 6,
        FAST_X4 = 7,
    }

    enum InGameStateType
    {
        NONE = 0,
        INITIALIZE = 1,
        READY = 2,
        PREVIEW = 3,
        PLAY = 4,
        PLAY_DPS = 5,
        PLAY_DEMO = 6,
        PLAY_VERIFY = 7,
        IDLE = 8,
        PAUSE = 9,
        PAUSE_SKILL = 10,
        GAMEOVER = 11,
        GAMEOVER_VERIFY = 12,
        WORLDBOSS_PREV = 13,
        LAST = 14,
    }

    enum InGameStateMethodType
    {
        FIRST = 0,
        START_01 = 1,
        START_02 = 2,
        START_03 = 3,
        START_LAST = 4,
        UPDATE_FIRST = 5,
        UPDATE = 6,
        UPDATE_LAST = 7,
        UPDATE_SYNC_READY = 8,
        UPDATE_SYNC_1 = 9,
        UPDATE_SYNC_2 = 10,
        UPDATE_SYNC_3 = 11,
        UPDATE_SYNC_4 = 12,
        UPDATE_SYNC_5 = 13,
        UPDATE_SYNC_LAST = 14,
        EXIT_FIRST = 15,
        EXIT = 16,
        EXIT_LAST = 17,
        LAST = 18,
    }

    enum BuffConditionType
    {
        NONE = 0,
        CHANCE = 1,
        HP_LOWER = 2,
        CRITICAL = 3,
    }

    enum BuffTargetType
    {
        NONE = 0,
        SELF = 1,
        TARGET = 2,
        HIT = 3,
    }

    enum CharacterFlag
    {
        NONE = 0,
        PLAYER = 1,
        DEATH = 2,
        MAIN_IDLE = 4,
        SKILL_ULT = 8,
        PAUSED = 16,
        VICTORY = 32,
        DEFEAT = 64,
        EMPTY01 = 128,
        SYNCTOOL_ONLY = 256,
        UNIT_MAIN = 512,
        NO_EQUIP = 1024,
        DEATH_REMOVE = 2048,
        NO_STATUSBAR = 4096,
        REPLAY = 8192,
        EMPTY02 = 16384,
        START = 32768,
        SUMMONER_DEMO = 65536,
        SUMMONER = 131072,
        KNOCKBACK = 262144,
        GAMEEND = 524288,
        LAST = 512,
    }

    enum BuffFlag
    {
        NONE = 0,
        DEBUFF = 1,
        INVINCIBLE = 2,
        INVISIBLE = 4,
        HORROR = 8,
        LAUNCH = 16,
        SILENCE = 32,
        FALL = 64,
        NO_EQUIP = 128,
        NO_LESS_HP = 256,
        SHIELD = 512,
        STUN = 1024,
        DARKNESS = 2048,
        DOT_DAMAGE = 4096,
        BUFF = 8192,
        BLIND = 16384,
        CHARM = 32768,
        PROVOKE = 65536,
        FREEZE = 131072,
        SLEEP = 262144,
        NO_SKILL = 524288,
        BLOOD = 1048576,
        EMPTY1 = 2097152,
        EMPTY2 = 4194304,
        EMPTY3 = 8388608,
        EMPTY4 = 16777216,
        EMPTY5 = 33554432,
        EMPTY6 = 67108864,
        EMPTY7 = 134217728,
        EMPTY8 = 268435456,
        EMPTY9 = 536870912,
        EMPTY10 = 1073741824,
    }

    enum StateFlag
    {
        NONE = 0,
        StateEnable = 1,
        RecursiveEnable = 2,
        Skill = 4,
        SpecialSkill = 8,
        DefaultAttack = 16,
        UnderControl = 32,
    }

    enum BuffEffectType
    {
        NONE = 0,
        STAT = 1,
        STAT_HOUSING = 2,
        STAT_HOUSING_MAX = 3,
        CHARM = 4,
        CHARM_ENABLE_ULT = 5,
        SLEEP = 6,
        HORROR = 7,
        HORROR_P2 = 8,
        LAUNCH = 9,
        LAUNCH_KNOCKBACK = 10,
        FALL = 11,
        STUN = 12,
        FREEZE = 13,
        BLIND = 14,
        SILENCE = 15,
        DARKNESS = 16,
        PROVOKE = 17,
        PROVOKE_TARGET = 18,
        NOSKILL = 19,
        NOSKILL_ENABLE_ATK = 20,
        NOSKILL_ULT = 21,
        NOSKILL_PASSIVE = 22,
        NOEQUIP = 23,
        NOLESSHP = 24,
        INVISIBLE = 25,
        INVINCIBLE = 26,
        INVINCIBLE_COLOR = 27,
        IMMUNE_DEBUFF = 28,
        IMMUNE_CC = 29,
        IMMUNE_CC_GUILDBOSS = 30,
        IMMUNE_KNOCKBACK = 31,
        IMMUNE_HP_DAMAGE = 32,
        CHANGE_BUFF = 33,
        CHANGE_BUFF_OWNER = 34,
        SHIELD = 35,
        SHIELD_SLIME = 36,
        SHIELD_BABA = 37,
        SHIELD_BABA_SIG = 38,
        SHIELD_RDRAGON_SIG = 39,
        SHIELD_FIANCE_SIG = 40,
        SHIELD_AMOUNT_PARAM0 = 41,
        ADDBUFF_LESSHP = 42,
        ADDBUFF_HIT = 43,
        ADDBUFF_ATTACK = 44,
        ADDBUFF_CRITICAL = 45,
        ADDBUFF_DODGE = 46,
        ADDBUFF_RENEW_P2 = 47,
        ADDMP = 48,
        MULT_HIT_DAMAGE = 49,
        MULT_HIT_DAMAGE_ATTACKTYPE = 50,
        RELEASE_DAMAGE_MAGIC = 51,
        RELEASE_BUFF = 52,
        RELEASE_BUFF_P2 = 53,
        RELEASE_BUFF_CASTER = 54,
        RELEASE_BUFF_REMOVED = 55,
        RELEASE_BUFF_REMOVED_P2 = 56,
        RELEASE_ADDMP = 57,
        RELEASE_ADDMP_P2 = 58,
        RELEASE_DEATH = 59,
        RESTORE_HP = 60,
        RESTORE_HP_P2 = 61,
        RESTORE_MP = 62,
        RESTORE_HP_MP = 63,
        ICE_FROST = 64,
        ICE_FREEZE = 65,
        REDHOOD_MARK = 66,
        REDHOOD_BLOOD = 67,
        FLOWER_PROVOKE_TARGET = 68,
        RENEW_KILL = 69,
        MULT_DAMAGE_CRITICAL = 70,
        MULT_DAMAGE_BLOOD = 71,
        MULT_MPPAY = 72,
        MULT_COOLTIME = 73,
        MULT_COOLTIME_P3 = 74,
        DOT_DAMAGE = 75,
        DOT_DAMAGE_PERHP = 76,
        DOT_DAMAGE_PERHP_P2 = 77,
        DOT_MP = 78,
        DOT_MP_P3 = 79,
        BLOOD = 80,
        BLOOD_PERHP = 81,
        BURN = 82,
        STACK_ADD = 83,
        STACK_CHANGE = 84,
        REFLECTION = 85,
        SACRIFICE = 86,
        IGNORE_DAMAGE_PERHP = 87,
        AVOID_MAGICAL = 88,
        BOSS_STACK_GUILD = 89,
        PIRATE_MARK = 90,
        SPADE = 91,
        HEART = 92,
        CLOVER = 93,
        DIAMOND = 94,
        BABA_DOTHEAL = 95,
        CRUSADER_REVENGE = 96,
        LADYDEATH_DEBUFF = 97,
        LADYDEATH_HORROR = 98,
        DARKELF_BLOOD = 99,
        DARKELF_MARK = 100,
        DARKELF_BIND = 101,
        NUN_RELOAD = 102,
        COOK_BUFF = 103,
        COOK_DOTHEAL = 104,
        COOK_FOOD = 105,
        FIANCE_THORN = 106,
        FIANCE_REFLECTION = 107,
        FIANCE_SIG_REFLECTION = 108,
        RABBIT_CRITICAL = 109,
        RABBIT_SIG_INVISIBLE = 110,
        SWORDCAT_DODGE = 111,
        FLOWER_SEED = 112,
        MIDDLE_MULT_HIT_DAMAGE = 113,
        BDRAGON_DOT_MP = 114,
        QUEEN_MARK = 115,
        QUEEN_BUFF_NOLIMIT_KILLS = 116,
        QUEEN_SLOW = 117,
        REDHEAD_HORROR = 118,
        ASS_MARK = 119,
        RDRAGON_MARK = 120,
        AKIMBO_CRITICAL = 121,
        AKIMBO_MAGNUM = 122,
        AKIMBO_MAGAZINE = 123,
        GDRAGON_RAGE = 124,
        MIKO_DEFDOWN = 125,
        MIKO_SLEEP = 126,
        SUGAR_POWDER = 127,
        SUGAR_DOTHEAL = 128,
        WATER_BLOOD_MULT = 129,
        WATER_FREEZE = 130,
        GUITAR_BROKEN = 131,
        SABRE_SENTENCE = 132,
        CLERIC_RETREAT = 133,
        PARU_DOTHEAL = 134,
        PARU_DEFENSE_MISS = 135,
        PARU_DEFENSE_CC = 136,
        PAJAMA_SMILE = 137,
        EVILPET_REFLECTION = 138,
        EVILPET_DELAY = 139,
        GAMBLER_CHARM = 140,
        BULLYGIRL_SHIELD = 141,
        MIDNIGHT_MARK = 142,
    }

    enum SkillSlotType
    {
        ATK = 0,
        ULT = 1,
        SP01 = 2,
        SP02 = 3,
        SP03 = 4,
    }

    enum BuffIconID
    {
        NONE = 0,
        Bleeding1_Debuffs = 1,
    }

    enum DamageMarkType
    {
        NONE = 0,
        MARK = 1,
        MARK_CRITICAL = 2,
    }

    enum StateRecursiveType
    {
        NONE = 0,
        ENABLE = 1,
        DISENABLE = 2,
    }

    enum PassiveConditionType
    {
        NONE = 0,
        START = 1,
        COOLDOWN = 2,
        DEATH = 3,
        DEATH_TARGET_ATTACKER = 4,
        FREE = 5,
        NOTFREE = 6,
        KILL = 7,
        HP_UNDER = 8,
        HP_OVER = 9,
        HP_CHANGE_UNDER = 10,
        HP_CHANGE_OVER = 11,
        HP_EVILPET = 12,
        HP_RABBIT = 13,
        CHANCE = 14,
        ALTERNATIVE = 15,
        SKILLCHANGE = 16,
        CHANGE_FX = 17,
        DEADSUMMON = 18,
        DEADALLYSUMMON = 19,
        DAMAGE = 20,
        DAMAGE_CHANCE = 21,
        ATTACK = 22,
        ATTACK_SKILLFX = 23,
        USESKILL = 24,
        SLOTSKILL = 25,
        START_SKILLFX = 26,
        DEADALLY = 27,
        DODGE = 28,
        CRITICAL = 29,
        BUFFEXIST = 30,
        BUFFEND = 31,
        ADDFX = 32,
        ADDBUFF_CC = 33,
        HITBUFF_CC = 34,
        SHP = 35,
        SABRE_LAUNCH = 36,
        CLERIC_RETREAT = 37,
        DEATHSCYTHE_SIG_DEATH = 38,
        PAJAMA_INVISIBLE = 39,
        BULLYGIRL_SIG_SHIELD_REMOVED = 40,
        LADYDEATH_SLOTSKILL = 41,
        REDHOOD_NOTFREE = 42,
        SHAMAN_HORROR = 43,
    }

    enum BuffType
    {
        NONE = 0,
        BUFF = 1,
        DEBUFF = 2,
    }

    enum ShieldType
    {
        NONE = 0,
        ALL = 1,
        PHYSICAL = 2,
        MAGICAL = 3,
    }

    enum Direction
    {
        NONE = 0,
        LEFT = 1,
        RIGHT = 2,
        SIDE = 3,
    }

    enum TargetType1
    {
        NONE = 0,
        ALLY = 1,
        ALLY_ALL = 2,
        SELF = 3,
        ENEMY = 4,
    }

    enum TargetType2
    {
        NULL = 0,
        PHYSICAL = 1,
        MAGICAL = 2,
    }

    enum TargetType3
    {
        NONE = 0,
        TARGET = 1,
        TARGET_PASSIVE = 2,
        CENTER = 3,
        RANDOM = 4,
        NEAR = 5,
        NEAR_FRONT = 6,
        NEAR_CENTER = 7,
        NEAR_ALLY = 8,
        FAR = 9,
        STRONG = 10,
        WEAK = 11,
        MAX_ATK = 12,
        MAX_DEF = 13,
        MAX_MP = 14,
        MAX_HP = 15,
        MAX_HP_RATIO = 16,
        MAX_BUFF_CC = 17,
        MIN_ATK = 18,
        MIN_HP = 19,
        MIN_HP_RATIO = 20,
        MIN_DEF = 21,
        MIN_TOTALHP = 22,
        MAX_TOTALHP = 23,
        NEXT = 24,
    }

    enum TargetPosType
    {
        CENTER = 0,
        SIDE = 1,
    }

    enum ColliderType
    {
        CIRCLE = 0,
        RECTANGLE = 1,
    }

    enum SkillType
    {
        DEFAULT = 0,
        NORMAL = 1,
        SPECIAL = 2,
        SIGNATURE = 3,
    }

    enum ActiveType
    {
        ACTIVE = 0,
        PASSIVE = 1,
    }

    enum AttackType
    {
        NONE = 0,
        PHYSICAL = 1,
        MAGICAL = 2,
        HEAL = 3,
    }

    enum Hit_WpnType
    {
        NONE = 0,
        HIT_BLADE = 1,
        HIT_BLADE_C = 2,
        HIT_BLUNT = 3,
        HIT_BLUNT_C = 4,
        HIT_STAB = 5,
        HIT_STAB_C = 6,
        HIT_BULLET = 7,
        HIT_BULLET_C = 8,
        HIT_MAGIC = 9,
        HIT_MAGIC_C = 10,
        HIT_EXPLS = 11,
        HIT_ICE = 12,
        HIT_SHIELD = 13,
        HIT_HEAL = 14,
        HIT_BUFF = 15,
        HIT_DEBUFF = 16,
    }

    enum RangePositionType
    {
        SELF = 0,
        SELF_FIREPOINT = 1,
        TARGET = 2,
        TARGET_FORWARD = 3,
        TARGET_BACKWARD = 4,
        CENTER = 5,
    }

    enum RangeDirectionType
    {
        FORWARD = 0,
        ALL = 1,
    }

    enum UnitListType
    {
        UNIT_ALL_CURRENT = 0,
        UNIT_ALLIES_CURRENT = 1,
        UNIT_ENEMIES_CURRENT = 2,
        UNIT_ALL_MAIN = 3,
        UNIT_ALLIES_MAIN = 4,
        UNIT_ENEMIES_MAIN = 5,
    }

    enum UnitShaderType
    {
        ORIGINAL = 0,
        DISSOLVE = 1,
        LAST = 2,
    }

    enum BonePositionType
    {
        CENTER = 0,
        ROOT = 1,
        HEAD = 2,
        FIREPOINT = 3,
    }

    enum EffectTargetType
    {
        SELF = 0,
        TARGET = 1,
        COLLISION = 2,
        CENTER = 3,
    }

    enum EffectOwnerType
    {
        NONE = 0,
        CASTER = 1,
        TARGET = 2,
    }

    enum BuffOriginType
    {
        OWNER = 0,
        CASTER = 1,
        STAT_OWNER_SHIELD_CASTER = 2,
        STAT_CASTER_SHIELD_OWNER = 3,
    }

    enum BattleGraphType
    {
        NONE = 0,
        DAMAGE = 1,
        HEAL = 2,
        HIT = 3,
        KILL = 4,
    }

    enum BuffIconType
    {
        NONE = 0,
        ATK = 1,
        HP = 2,
        DEF = 3,
        MPPAY = 4,
        CRI = 5,
        CDMG = 6,
        HAST = 7,
    }

    enum HousingBuffParamType
    {
        HP = 0,
        MPR = 1,
        ATK = 2,
        DEF = 3,
        MR = 4,
        PCRI = 5,
        MCRI = 6,
        DODG = 7,
        SPD = 8,
        HAST = 9,
        ACC = 10,
        RGHP = 11,
        PRDC = 12,
        MRDC = 13,
        SHP = 14,
        PARAM1 = 15,
        PARAM2 = 16,
        PARAM3 = 17,
        PARAM4 = 18,
        LENGTH = 19,
    }

    class SkillEnumGroup
    {
        /*0x10*/ Battle.RangePositionType rangePOSType;
        /*0x14*/ Battle.RangeDirectionType rangeDIRType;
        /*0x18*/ Battle.CharacterStat.StatType COEFType;
        /*0x1c*/ Battle.TargetType1 targetType1;
        /*0x20*/ Battle.TargetType2 targetType2;
        /*0x24*/ Battle.TargetType3 targetType3;
        /*0x28*/ Battle.Hit_WpnType hitWeaponType;
        /*0x2c*/ Battle.ColliderType rangeColliderType;
        /*0x30*/ Battle.SkillFXType skillFXType;
        /*0x34*/ Battle.BuffConditionType buffConditionType;
        /*0x38*/ Battle.BuffTargetType buffTargetType;

        /*0x1510d70*/ SkillEnumGroup(Battle.RangePositionType _eRangePOSType, Battle.RangeDirectionType _eRangeDIRType, Battle.CharacterStat.StatType _eCOEFType, Battle.TargetType1 _eTargetType1, Battle.TargetType2 _eTargetType2, Battle.TargetType3 _eTargetType3, Battle.Hit_WpnType _eHitWeaponType, Battle.ColliderType _eRangeColliderType, Battle.SkillFXType _eSkillFXType, Battle.BuffConditionType _eBuffConditionType, Battle.BuffTargetType _eBuffTargetType);
    }

    struct ColliderData
    {
        /*0x10*/ Battle.ColliderType Type;
        /*0x14*/ float X;
        /*0x18*/ float Y;

        static /*0x10dfa74*/ Battle.ColliderData get_NullCollider();
        static /*0x10dfadc*/ Battle.ColliderData get_InfiniteCollider();
        static /*0x10dfc2c*/ bool op_Equality(Battle.ColliderData _a, Battle.ColliderData _b);
        static /*0x10dfc68*/ bool op_Inequality(Battle.ColliderData _a, Battle.ColliderData _b);
        /*0xa8a6ec*/ ColliderData(Battle.ColliderType _type, float _lengthX, float _lengthY);
        /*0xa8a6f8*/ bool IsColliderNull();
        /*0xa8a700*/ bool Equals(object obj);
        /*0xa8a708*/ bool Equals(Battle.ColliderData _sCollider);
        /*0xa8a744*/ int GetHashCode();
    }

    struct DamageResult
    {
        /*0x10*/ bool isKill;
        /*0x11*/ bool isCritical;
        /*0x14*/ float damage;

        static /*0xf5cc94*/ Battle.DamageResult get_NoDamage();
        static /*0xf5ccb4*/ Battle.DamageResult op_Addition(Battle.DamageResult A, Battle.DamageResult B);
        /*0xa854a8*/ DamageResult(bool _bKill, bool _bCritical, float _fDamage);
    }

    enum StatTransferFlag
    {
        NONE = 0,
        IGNORE_SHIELD = 1,
        ADD_DAMAGE = 2,
        IGNORE_DEF = 3,
    }

    struct StatTransfer
    {
        /*0x10*/ Battle.AttackType AttackType;
        /*0x14*/ Battle.Hit_WpnType HitWeaponType;
        /*0x18*/ float ACC;
        /*0x1c*/ float Damage;
        /*0x20*/ float DamageMULT_ForStageData;
        /*0x24*/ float CRI;
        /*0x28*/ float CRIMult;
        /*0x2c*/ float MPPAY;
        /*0x30*/ int FactionID;
        /*0x34*/ int SkillID;
        /*0x38*/ Battle.StatTransferFlag flag;
        /*0x3c*/ float DamageMult;

        static /*0xc9a798*/ Battle.StatTransfer GetHealStat(float _fHealAmount, float _fDamageMult);
        /*0xa382cc*/ StatTransfer(Battle.AttackType _eAttackType, float _fDamage, float _fDamageMULT, Battle.Hit_WpnType _eWeaponType);
        /*0xa382ec*/ StatTransfer(Battle.AttackType _eAttackType, float _fDamage, int _nFactionID, int _nSkillID);
        /*0xa38308*/ StatTransfer(Battle.AttackType _eAttackType, float _fACC, float _fDamage, float _fDamageMULT, float _fCRI, float _fCRIMULT, float _fMPPAY, int _nFationID, int _nSkillID, Battle.Hit_WpnType _eWeaponType);
        /*0xa38324*/ void SetFlag(Battle.StatTransferFlag _flag, bool _boolean);
        /*0xa38350*/ bool FlagEquals(Battle.StatTransferFlag _flag);
        /*0xa38360*/ void ClearFlag();
    }

    class CharacterStat
    {
        /*0x10*/ float HP;
        /*0x14*/ float HP_P;
        /*0x18*/ float MP;
        /*0x1c*/ float MPR;
        /*0x20*/ float ATK;
        /*0x24*/ float ATK_P;
        /*0x28*/ float DEF;
        /*0x2c*/ float DEF_P;
        /*0x30*/ float MR;
        /*0x34*/ float MR_P;
        /*0x38*/ float PCRI;
        /*0x3c*/ float MCRI;
        /*0x40*/ float DODG;
        /*0x44*/ float SPD;
        /*0x48*/ float HAST;
        /*0x4c*/ float ACC;
        /*0x50*/ float RGHP;
        /*0x54*/ float PRDC;
        /*0x58*/ float MRDC;
        /*0x5c*/ float SHP;
        /*0x60*/ float PCRIR;
        /*0x64*/ float MCRIR;
        /*0x68*/ float CRIDMG;
        /*0x6c*/ float CRIDMGR;
        /*0x70*/ float CCR;

        static /*0x1324bc8*/ Battle.CharacterStat op_Addition(Battle.CharacterStat _statA, Battle.CharacterStat _statB);
        static /*0x1324dec*/ Battle.CharacterStat op_Subtraction(Battle.CharacterStat _statA, Battle.CharacterStat _statB);
        static /*0x1325010*/ Battle.CharacterStat GetDefaultStat(PTShare.Define.SHero _hero);
        static /*0x1325054*/ Battle.CharacterStat GetDefaultStat(int _nUnitID, int _nUnitLV, int _nUnitGrade, int _nUnitTier);
        static /*0x1325114*/ Battle.CharacterStat GetDefaultStat(TableData.TableData_Unitbase _base, TableData.TableData_Unitlv _lv, TableData.TableData_Unitgrade _grade, TableData.TableData_Unittier _tier, TableData.TableData_Basic _basic);
        static /*0x13254e0*/ Battle.CharacterStat GetRelationStat(int nLevel, TableData.TableData_Relation relation);
        static /*0x1325c60*/ Battle.CharacterStat GetFurnitureStat(TableData.TableData_Furnitureheroeffect furnitureStat);
        static /*0x1326084*/ Battle.CharacterStat GetAbilityStat(System.Collections.Generic.List<int> _lisAbilityIndex, int _nUnitLevel, int _nSignatureLevel);
        static /*0x13269a4*/ Battle.CharacterStat GetBonusStat(int nUnitID, int nUnitLv, PTShare.Define.SStatBonus bonus);
        static /*0x1326f8c*/ Battle.CharacterStat GetEquipmentStat(int _nEquipmentID, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x1326fbc*/ Battle.CharacterStat GetEquipmentStat(TableData.TableData_Equipment _equipment, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x1327030*/ long GetEquipmentCP(int _nEquipmentID, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x1327060*/ long GetEquipmentCP(TableData.TableData_Equipment _equipment, int _nEquipmentLV, bool _bFactionBonus);
        static /*0x13272e0*/ long GetRaiseTrainingStatCP(Battle.CharacterStat.StatType type);
        static /*0x1327420*/ bool GetReadySmartEquip(int _nEquipmentID, int _nEquipmentLV, bool _bFactionBonus, int _factionId);
        static /*0x132786c*/ Battle.CharacterStat PercentageToNormalStat(Battle.CharacterStat _baseStat, Battle.CharacterStat _percentageStat);
        static /*0x132795c*/ Battle.CharacterStat op_Multiply(Battle.CharacterStat _stat, float _fMultValue);
        /*0x13241bc*/ CharacterStat();
        /*0x13241c4*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP);
        /*0x13242c0*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP, float _PCRIR, float _MCRIR, float _CRIDMG, float _CRIDMGR, float _CCR);
        /*0x1324408*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP, float _HP_P, float _ATK_P, float _DEF_P, float _MR_P);
        /*0x1324524*/ CharacterStat(float _HP, float _MP, float _MPR, float _ATK, float _DEF, float _MR, float _PCRI, float _MCRI, float _DODG, float _SPD, float _HAST, float _ACC, float _RGHP, float _PRDC, float _MRDC, float _SHP, float _PCRIR, float _MCRIR, float _CRIDMG, float _CRIDMGR, float _CCR, float _HP_P, float _ATK_P, float _DEF_P, float _MR_P);
        /*0x132468c*/ CharacterStat(TableData.TableData_Unitbase _UnitBaseData);
        /*0x1324750*/ CharacterStat(TableData.TableData_Unitlv _UnitLVData);
        /*0x13247d8*/ CharacterStat(TableData.TableData_Unitgrade _UnitGradeData);
        /*0x1324860*/ CharacterStat(TableData.TableData_Unittier _UnitTierData);
        /*0x13248e8*/ CharacterStat(TableData.TableData_Basic _BalanceData);
        /*0x13249e4*/ CharacterStat(TableData.TableData_Equipment _EquipmentData, int _nEquipmentLV, bool _bFactionBonus);
        /*0x1324730*/ void InitStat();
        /*0x1327698*/ float GetStat(Battle.CharacterStat.StatType _eStatType);
        /*0x13270dc*/ long GetCP();
        /*0x1327760*/ float GetValue(Battle.CharacterStat.StatType eType);

        enum StatType
        {
            NONE = 0,
            HP = 1,
            MP = 2,
            MPR = 3,
            ATK = 4,
            DEF = 5,
            MR = 6,
            PCRI = 7,
            MCRI = 8,
            DODG = 9,
            SPD = 10,
            HAST = 11,
            ACC = 12,
            RGHP = 13,
            PRDC = 14,
            MRDC = 15,
            SHP = 16,
            HP_P = 17,
            ATK_P = 18,
            DEF_P = 19,
            MR_P = 20,
            PCRIR = 21,
            MCRIR = 22,
            CRIDMG = 23,
            CRIDMGR = 24,
            CCR = 25,
            END = 26,
        }

        class <>c__DisplayClass45_0
        {
            /*0x10*/ TableData.TableData_Relation relation;

            /*0xdad374*/ <>c__DisplayClass45_0();
            /*0xdad37c*/ bool <GetBonusStat>b__0(PTShare.Define.SRelationMini x);
        }
    }

    struct ProjectileBoneType
    {
        static /*0x100f684*/ string TypeToString(Battle.BonePositionType eType);
        static /*0x100f778*/ Battle.BonePositionType TypeToEnum(string sType);
    }

    struct EffectTargetTypeConverter
    {
        static /*0x14b8e74*/ string TypeToString(Battle.EffectTargetType eType);
        static /*0x14b8f68*/ Battle.EffectTargetType TypeToEnum(string sType);
    }

    struct EffectOwnerTypeConverter
    {
        static /*0x14b8cb8*/ string TypeToString(Battle.EffectOwnerType eType);
        static /*0x14b8dac*/ Battle.EffectOwnerType TypeToEnum(string sType);
    }

    struct UnitShaderInfo
    {
        static /*0x10c22c8*/ string TypeToString(Battle.UnitShaderType eType);
        static /*0x10c23bc*/ Battle.UnitShaderType TypeToEunm(string sType);
    }

    class HeroSelectValue
    {
        /*0x10*/ int HeroID;
        /*0x18*/ long PlayerID;

        static /*0x1233100*/ Battle.HeroSelectValue StringToValue(string _sStr);
        /*0x1233024*/ HeroSelectValue(int _nHeroID);
        /*0x1233054*/ HeroSelectValue(int _nHeroID, long _nPlayerID);
        /*0x1233090*/ string ToString();
    }

    struct SoundDelayInfo
    {
        /*0x10*/ AssetBundleType <eAssetBundleType>k__BackingField;
        /*0x18*/ string <sSoundName>k__BackingField;
        /*0x20*/ bool <bLoop>k__BackingField;

        /*0xa99c90*/ SoundDelayInfo(AssetBundleType _eAssetBundleType, string _sSoundName, bool _bLoop);
        /*0xa99c5c*/ AssetBundleType get_eAssetBundleType();
        /*0xa99c64*/ void set_eAssetBundleType(AssetBundleType value);
        /*0xa99c6c*/ string get_sSoundName();
        /*0xa99c74*/ void set_sSoundName(string value);
        /*0xa99c7c*/ bool get_bLoop();
        /*0xa99c84*/ void set_bLoop(bool value);
    }

    class BattleGraphValue
    {
        /*0x10*/ double TotalDamage;
        /*0x18*/ double TotalHit;
        /*0x20*/ double TotalHeal;
        /*0x28*/ int Kills;
        /*0x30*/ string skinName;
        /*0x38*/ int unitID;
        /*0x3c*/ int factionID;
        /*0x40*/ int level;
        /*0x44*/ int grade;

        /*0xe2f65c*/ BattleGraphValue();
        /*0xe2f664*/ BattleGraphValue(Battle.BattleGraphValue _graph);
        /*0xe2f634*/ void Init(double _dDamage, double _dHit, double _dHeal, string _sSkinName, int _nUnitID, int _nFactionID, int _nLevel, int _nGrade);
        /*0xe2f64c*/ void UpdateUnitInfo(string _sSkinName, int _nUnitID, int _nFactionID, int _nLevel, int _nGrade);
    }

    class HousingFactionBuffParamData
    {
        static int PARAM_LENGHTH = 2;
        /*0x10*/ string[] paramTypes;
        /*0x18*/ float[] paramValues;

        static /*0x131537c*/ Battle.HousingFactionBuffParamData op_Addition(Battle.HousingFactionBuffParamData a, Battle.HousingFactionBuffParamData b);
        /*0x131524c*/ HousingFactionBuffParamData(string _paramType1, float _paramValue1, string _paramType2, float _paramValue2);
    }

    enum UnitNameID
    {
        NONE = 0,
        REDEYE = 1,
        PLUMEHAT = 2,
        BROWNPONY = 3,
        CARROT = 4,
        SKYBLUE = 5,
        GOLDSHIELD = 6,
        MONK = 7,
        REDHOOD = 8,
        HIGHELF = 9,
        BULLYGIRL = 10,
        BLACKSMITH = 11,
        PIRATE = 12,
        GAMBLER = 13,
        BABA = 14,
        CRUSADER = 15,
        JUNGLE = 16,
        LADYDEATH = 17,
        DARKELF = 18,
        NUN = 19,
        ICE = 20,
        COOK = 21,
        FIANCE = 22,
        ALCHEMY = 23,
        RABBIT = 24,
        SWORDCAT = 25,
        FLOWER = 26,
        MIDDLE = 27,
        BDRAGON = 28,
        QUEEN = 29,
        GDRAGON = 30,
        REDHEAD = 31,
        DUALCROSS = 32,
        ASS = 33,
        FOXY = 34,
        PRIEST = 35,
        MIKO = 36,
        RDRAGON = 37,
        AKIMBO = 38,
        SUGAR = 39,
        WATER = 40,
        GUITAR = 41,
        HARP = 42,
        DEATHSCYTHE = 43,
        SABRE = 44,
        TULU = 45,
        GOM = 46,
        CLERIC = 47,
        FLORA = 48,
        PARU = 49,
        BREEZE = 50,
        PAJAMA = 51,
        MIDNIGHT = 52,
        LAMPLIGHT = 53,
        IDOL = 54,
        DARKTEMPLAR = 55,
        TAILOR = 56,
        SHAMAN = 57,
        SLIME_HERO_01 = 901,
        SLIME_HERO_02 = 902,
        SLIME_HERO_03 = 903,
        SLIME_HERO_04 = 904,
        SLIME_HERO_05 = 905,
        SLIME_HERO_06 = 906,
        LAST_HERO = 907,
        START_MONSTER = 1000,
        SLIME_01 = 1001,
        SLIME_02 = 1002,
        SLIME_03 = 1003,
        SLIME_04 = 1004,
        SLIME_05 = 1005,
        SLIME_06 = 1006,
        MUSHROOM_01 = 1007,
        MUSHROOM_02 = 1008,
        MUSHROOM_03 = 1009,
        MUSHROOM_04 = 1010,
        MUSHROOM_05 = 1011,
        MUSHROOM_06 = 1012,
        LAST_MONSTER = 1013,
        START_HERO_MONSTER = 2000,
        REDEYE_H = 2001,
        PLUMEHAT_H = 2002,
        BROWNPONY_H = 2003,
        CARROT_H = 2004,
        SKYBLUE_H = 2005,
        GOLDSHIELD_H = 2006,
        MONK_H = 2007,
        REDHOOD_H = 2008,
        HIGHELF_H = 2009,
        BULLYGIRL_H = 2010,
        BLACKSMITH_H = 2011,
        PIRATE_H = 2012,
        GAMBLER_H = 2013,
        BABA_H = 2014,
        JUNGLE_H = 2015,
        LADYDEATH_H = 2016,
        DARKELF_H = 2017,
        NUN_H = 2018,
        FIANCE_H = 2019,
        ALCHEMY_H = 2020,
        RABBIT_H = 2021,
        SWORDCAT_H = 2022,
        FLOWER_H = 2023,
        MIDDLE_H = 2024,
        BDRAGON_H = 2025,
        QUEEN_H = 2026,
        REDHEAD_H = 2027,
        DUALCROSS_H = 2028,
        ASS_H = 2029,
        FOXY_H = 2030,
        PRIEST_H = 2031,
        MIKO_H = 2032,
        RDRAGON_H = 2033,
        SUGAR_H = 2034,
        WATER_H = 2035,
        GUITAR_H = 2036,
        HARP_H = 2037,
        DEATHSCYTHE_H = 2038,
        SABRE_H = 2039,
        TULU_H = 2040,
        GOM_H = 2041,
        CLERIC_H = 2042,
        FLORA_H = 2043,
        PARU_H = 2044,
        BREEZE_H = 2045,
        PAJAMA_H = 2046,
        MIDNIGHT_H = 2047,
        LAMPLIGHT_H = 2048,
        IDOL_H = 2049,
        LAST_HERO_MONSTER = 2050,
        START_BOSS_MONSTER = 3000,
        SUITCAT = 3001,
        JACKRABBIT = 3002,
        EVILPET = 3003,
        CAKE = 3004,
        LAST_BOSS_MONSTER = 3005,
        START_UNIT_SKIN = 10000,
        END_UNIT_SKIN = 19999,
        LAST = 20000,
    }

    enum BuffID
    {
        NONE = 0,
        SILENCE_DEMO = 1,
        NOSKILL_STARTHAST = 2,
        NOLESSHP_50 = 3,
        BATTLE_END_POSE = 15,
        STAT_HOUSING_MAX = 9999,
        factionbuff_16 = 84,
        factionbuff_20 = 85,
        factionbuff_24 = 86,
        factionbuff_11 = 87,
        factionbuff_5 = 88,
        factionbuff_2 = 89,
        factionbuff_12 = 90,
        factionbuff_9 = 91,
        factionbuff_6 = 92,
        factionbuff_3 = 93,
        factionbuff_18 = 94,
        factionbuff_22 = 95,
        BULLYGIRL_DEBUFF_LV1 = 1021,
        BULLYGIRL_DEBUFF_LV2 = 1022,
        BULLYGIRL_DEBUFF_LV4 = 1023,
        GAMBLER_SPADE = 1341,
        GAMBLER_HEART = 1343,
        GAMBLER_CLOVER = 1345,
        GAMBLER_DIAMOND = 1347,
        BABA_DOT_HEAL = 1431,
        SABRE_SP02_SNARE_LV1 = 4431,
        SABRE_SP02_SNARE_LV2 = 4432,
        SABRE_SP02_SNARE_LV3 = 4433,
        ARTIFACT_KASIM_NECKLACE_SHIELD = 1000034,
        HOUSING_STAT = 10000001,
        HOUSING_FACTION_BUFF_MPPAYMULT = 10000003,
        HOUSING_FACTION_BUFF_CDMGMULT = 10000004,
    }

    enum ArtifactID
    {
        NONE = 0,
        KASIM_SHIELD = 20001,
        KASIM_WING = 20002,
        KASIM_NECKLACE = 20003,
        KASIM_EARRING = 20004,
        KASIM_GLASS = 20005,
        KASIM_CROWN = 20006,
        KASIM_HEART = 20007,
    }

    enum StateAndSkillID
    {
        NONE = 0,
        IDLE = 1,
        MOVE = 2,
        DEATH = 3,
        MOVE_STARTHAST = 4,
        LAUNCH = 5,
        SILENCE = 6,
        STUN = 7,
        FREEZE = 8,
        SLEEP = 9,
        FALL = 10,
        ICE_SP_02 = 20031,
        ICE_SP_03 = 20041,
        FIANCE_ULT_01 = 22011,
        FIANCE_H_ULT_01 = 2022011,
        RABBIT_ATK = 24001,
        RABBIT_ULT = 24011,
        RABBIT_SP_01 = 24021,
        RABBIT_SP_02 = 24031,
        SWORDCAT_ATK = 25001,
        SWORDCAT_ULT = 25011,
        SWORDCAT_SP01 = 25021,
        SWORDCAT_SP02 = 25031,
        SWORDCAT_SP03 = 25041,
        QUEEN_ATK = 29001,
        QUEEN_SP01 = 29021,
        ALCHEMY_SP01 = 23021,
        AKIMBO_SP01 = 38021,
        AKIMBO_SP02 = 38031,
        SABRE_ULT = 44011,
        SABRE_SP01 = 44021,
        CLERIC_SP01 = 47021,
        BREEZE_ULT = 50011,
        LAMPLIGHT_SP01 = 53021,
    }

    enum SkillFXID
    {
        NONE = 0,
        REDEYE_0_FX1 = 10011,
        REDEYE_1_FX1 = 10111,
        REDEYE_2_FX1 = 10211,
        REDEYE_3_FX1 = 10311,
        REDEYE_3_FX2 = 10312,
        REDEYE_H_0_FX1 = 20010011,
        REDEYE_H_1_FX1 = 20010111,
        PLUMEHAT_0_FX1 = 20011,
        PLUMEHAT_1_FX1 = 20111,
        PLUMEHAT_2_FX1 = 20211,
        PLUMEHAT_2_FX2 = 20212,
        PLUMEHAT_3_FX1 = 20311,
        PLUMEHAT_H_0_FX1 = 20020011,
        PLUMEHAT_H_1_FX1 = 20020111,
        BROWNPONY_0_FX1 = 30011,
        BROWNPONY_1_FX1 = 30111,
        BROWNPONY_2_FX1 = 30211,
        BROWNPONY_2_FX2 = 30212,
        BROWNPONY_3_FX1 = 30311,
        BROWNPONY_H_0_FX1 = 20030011,
        BROWNPONY_H_1_FX1 = 20030111,
        CARROT_0_FX1 = 40011,
        CARROT_1_FX1 = 40111,
        CARROT_1_FX2 = 40112,
        CARROT_2_FX1 = 40211,
        CARROT_3_FX1 = 40311,
        CARROT_3_FX2 = 40312,
        CARROT_H_0_FX1 = 20040011,
        CARROT_H_1_FX1 = 20040111,
        CARROT_H_1_FX2 = 20040112,
        SKYBLUE_0_FX1 = 50011,
        SKYBLUE_1_FX1 = 50111,
        SKYBLUE_2_FX1 = 50211,
        SKYBLUE_3_FX1 = 50311,
        SKYBLUE_H_0_FX1 = 20050011,
        SKYBLUE_H_1_FX1 = 20050111,
        GOLDSHIELD_0_FX1 = 60011,
        GOLDSHIELD_1_FX1 = 60111,
        GOLDSHIELD_2_FX1 = 60211,
        GOLDSHIELD_H_0_FX1 = 20060011,
        GOLDSHIELD_H_1_FX1 = 20060111,
        MONK_0_FX1 = 70011,
        MONK_1_FX1 = 70111,
        MONK_2_FX1 = 70211,
        MONK_3_FX1 = 70311,
        MONK_H_0_FX1 = 20070011,
        MONK_H_1_FX1 = 20070111,
        REDHOOD_0_FX1 = 80011,
        REDHOOD_1_FX1 = 80111,
        REDHOOD_2_FX1 = 80211,
        REDHOOD_3_FX1 = 80311,
        REDHOOD_4_FX1 = 80411,
        REDHOOD_H_0_FX1 = 20080011,
        REDHOOD_H_1_FX1 = 20080111,
        HIGHELF_0_FX1 = 90011,
        HIGHELF_1_FX1 = 90111,
        HIGHELF_1_FX2 = 90112,
        HIGHELF_2_FX1 = 90211,
        HIGHELF_3_1_FX1 = 90311,
        HIGHELF_3_2_FX1 = 90321,
        HIGHELF_4_FX1 = 90411,
        HIGHELF_H_0_FX1 = 20090011,
        HIGHELF_H_1_FX1 = 20090111,
        HIGHELF_H_1_FX2 = 20090112,
        BULLYGIRL_0_FX1 = 100011,
        BULLYGIRL_1_FX1 = 100111,
        BULLYGIRL_2_FX1 = 100211,
        BULLYGIRL_2_FX2 = 100212,
        BULLYGIRL_3_FX1 = 100311,
        BULLYGIRL_4_FX1 = 100411,
        BULLYGIRL_H_0_FX1 = 20100011,
        BULLYGIRL_H_1_FX1 = 20100111,
        BLACKSMITH_0_FX1 = 110011,
        BLACKSMITH_1_FX1 = 110111,
        BLACKSMITH_2_FX1 = 110211,
        BLACKSMITH_3_FX1 = 110311,
        BLACKSMITH_3_FX2 = 110312,
        BLACKSMITH_4_FX1 = 110411,
        BLACKSMITH_H_0_FX1 = 20110011,
        BLACKSMITH_H_1_FX1 = 20110111,
        PIRATE_0_FX1 = 120011,
        PIRATE_1_FX1 = 120111,
        PIRATE_1_FX2 = 120112,
        PIRATE_2_FX1 = 120211,
        PIRATE_3_FX1 = 120311,
        PIRATE_3_FX2 = 120312,
        PIRATE_4_FX1 = 120411,
        PIRATE_H_0_FX1 = 20120011,
        PIRATE_H_1_FX1 = 20120111,
        PIRATE_H_1_FX2 = 20120112,
        GAMBLER_0_FX1 = 130011,
        GAMBLER_1_FX1 = 130111,
        GAMBLER_1_FX2 = 130112,
        GAMBLER_2_FX1 = 130211,
        GAMBLER_2_FX2 = 130212,
        GAMBLER_3_FX1 = 130311,
        GAMBLER_3_FX2 = 130312,
        GAMBLER_4_FX1 = 130411,
        GAMBLER_4_FX2 = 130412,
        GAMBLER_4_FX3 = 130413,
        GAMBLER_4_FX4 = 130414,
        GAMBLER_4_FX5 = 130415,
        GAMBLER_H_0_FX1 = 20130011,
        GAMBLER_H_1_FX1 = 20130111,
        GAMBLER_H_1_FX2 = 20130112,
        BABA_0_FX1 = 140011,
        BABA_1_FX1 = 140111,
        BABA_1_FX2 = 140112,
        BABA_2_FX1 = 140211,
        BABA_3_FX1 = 140311,
        BABA_4_FX1 = 140411,
        BABA_H_0_FX1 = 20140011,
        BABA_H_1_FX1 = 20140111,
        BABA_H_1_FX2 = 20140112,
        CRUSADER_0_FX1 = 150011,
        CRUSADER_1_FX1 = 150111,
        CRUSADER_1_FX2 = 150112,
        CRUSADER_1_FX3 = 150113,
        CRUSADER_2_FX1 = 150211,
        CRUSADER_2_FX2 = 150212,
        CRUSADER_3_FX1 = 150311,
        CRUSADER_4_FX1 = 150411,
        JUNGLE_0_FX1 = 160011,
        JUNGLE_1_FX1 = 160111,
        JUNGLE_2_FX1 = 160211,
        JUNGLE_3_FX1 = 160311,
        JUNGLE_H_0_FX1 = 20160011,
        JUNGLE_H_1_FX1 = 20160111,
        LADYDEATH_0_FX1 = 170011,
        LADYDEATH_1_FX1 = 170111,
        LADYDEATH_1_FX2 = 170112,
        LADYDEATH_2_FX1 = 170211,
        LADYDEATH_3_FX1 = 170311,
        LADYDEATH_4_FX1 = 170411,
        LADYDEATH_SIG_HORROR = 171511,
        LADYDEATH_SIG_CURE = 171513,
        LADYDEATH_H_0_FX1 = 170011,
        LADYDEATH_H_1_FX1 = 170111,
        LADYDEATH_H_1_FX2 = 170112,
        DARKELF_0_FX1 = 180011,
        DARKELF_1_FX1 = 180111,
        DARKELF_1_FX2 = 180112,
        DARKELF_2_FX1 = 180211,
        DARKELF_3_FX1 = 180311,
        DARKELF_4_FX1 = 180411,
        DARKELF_SIG_FX1 = 181511,
        DARKELF_H_0_FX1 = 20180011,
        DARKELF_H_1_FX1 = 20180111,
        DARKELF_H_1_FX2 = 20180112,
        NUN_0_FX1 = 190011,
        NUN_1_FX1 = 190111,
        NUN_2_FX1 = 190211,
        NUN_3_FX1 = 190311,
        NUN_4_FX1 = 190411,
        NUN_4_FX2 = 190421,
        NUN_H_0_FX1 = 20190011,
        NUN_H_1_FX1 = 20190111,
        ICE_0_FX1 = 200011,
        ICE_1_FX1 = 200111,
        ICE_2_FX1 = 200211,
        ICE_3_FX1 = 200311,
        ICE_3_FX2 = 200312,
        ICE_4_FX1 = 200411,
        ICE_4_FX2 = 200412,
        COOK_0_FX1 = 210011,
        COOK_1_FX1 = 210111,
        COOK_2_FX1 = 210211,
        COOK_3_FX1 = 210311,
        COOK_4_FX1 = 210411,
        FIANCE_0_FX1 = 220011,
        FIANCE_1_FX1 = 220111,
        FIANCE_1_FX2 = 220112,
        FIANCE_2_FX1 = 220211,
        FIANCE_3_FX1 = 220311,
        FIANCE_4_FX1 = 220411,
        FIANCE_H_0_FX1 = 20220011,
        FIANCE_H_1_FX1 = 20220111,
        FIANCE_H_1_FX2 = 20220112,
        ALCHEMY_0_FX1 = 230011,
        ALCHEMY_1_FX1 = 230111,
        ALCHEMY_1_FX2 = 230112,
        ALCHEMY_2_FX1 = 230211,
        ALCHEMY_3_FX1 = 230311,
        ALCHEMY_H_0_FX1 = 20230011,
        ALCHEMY_H_1_FX1 = 20230111,
        ALCHEMY_H_1_FX2 = 20230112,
        RABBIT_0_FX1 = 240011,
        RABBIT_1_FX1 = 240111,
        RABBIT_2_FX1 = 240211,
        RABBIT_H_0_FX1 = 20240011,
        RABBIT_H_1_FX1 = 20240111,
        SWORDCAT_0_FX1 = 250011,
        SWORDCAT_1_FX1 = 250111,
        SWORDCAT_1_FX2 = 250112,
        SWORDCAT_2_FX1 = 250211,
        SWORDCAT_3_FX1 = 250311,
        SWORDCAT_H_0_FX1 = 20250011,
        SWORDCAT_H_1_FX1 = 20250111,
        SWORDCAT_H_1_FX2 = 20250112,
        FLOWER_0_FX1 = 260011,
        FLOWER_1_FX1 = 260111,
        FLOWER_2_FX1 = 260211,
        FLOWER_3_FX1 = 260311,
        FLOWER_4_FX1 = 260411,
        FLOWER_H_0_FX1 = 20260011,
        FLOWER_H_1_FX1 = 20260111,
        MIDDLE_0_FX1 = 270011,
        MIDDLE_1_FX1 = 270111,
        MIDDLE_2_FX1 = 270211,
        MIDDLE_3_FX1 = 270311,
        MIDDLE_4_FX1 = 270411,
        MIDDLE_H_0_FX1 = 270011,
        MIDDLE_H_1_FX1 = 270111,
        BDRAGON_0_FX1 = 280011,
        BDRAGON_1_FX1 = 280111,
        BDRAGON_1_FX2 = 280112,
        BDRAGON_2_FX1 = 280211,
        BDRAGON_2_FX2 = 280212,
        BDRAGON_3_FX1 = 280311,
        BDRAGON_3_FX2 = 280312,
        BDRAGON_4_FX1 = 280411,
        BDRAGON_4_FX2 = 280412,
        BDRAGON_4_FX3 = 280413,
        BDRAGON_H_0_FX1 = 20280011,
        BDRAGON_H_1_FX1 = 20280111,
        BDRAGON_H_1_FX2 = 20280112,
        QUEEN_0_FX1 = 290011,
        QUEEN_1_FX1 = 290111,
        QUEEN_1_FX2 = 290112,
        QUEEN_2_FX1 = 290211,
        QUEEN_3_FX1 = 290311,
        QUEEN_4_FX1 = 290411,
        QUEEN_H_0_FX1 = 20290011,
        QUEEN_H_1_FX1 = 20290111,
        QUEEN_H_1_FX2 = 20290112,
        GDRAGON_0_FX1 = 300011,
        GDRAGON_1_FX1 = 300111,
        GDRAGON_2_FX1 = 300211,
        GDRAGON_2_FX2 = 300212,
        GDRAGON_3_FX1 = 300311,
        GDRAGON_4_FX1 = 300411,
        REDHEAD_0_FX1 = 310011,
        REDHEAD_1_FX1 = 310111,
        REDHEAD_2_FX1 = 310211,
        REDHEAD_3_FX1 = 310311,
        REDHEAD_H_0_FX1 = 20310011,
        REDHEAD_H_1_FX1 = 20310111,
        DUALCROSS_0_FX1 = 320011,
        DUALCROSS_1_FX1 = 320111,
        DUALCROSS_1_FX2 = 320112,
        DUALCROSS_2_FX1 = 320211,
        DUALCROSS_3_FX1 = 320311,
        DUALCROSS_4_FX1 = 320411,
        DUALCROSS_H_0_FX1 = 20320011,
        DUALCROSS_H_1_FX1 = 20320111,
        DUALCROSS_H_1_FX2 = 20320112,
        ASS_0_FX1 = 330011,
        ASS_1_FX1 = 330111,
        ASS_1_FX2 = 330112,
        ASS_2_FX1 = 330211,
        ASS_3_FX1 = 330311,
        ASS_H_0_FX1 = 20330011,
        ASS_H_1_FX1 = 20330111,
        ASS_H_1_FX2 = 20330112,
        FOXY_0_FX1 = 340011,
        FOXY_1_FX1 = 340111,
        FOXY_2_FX1 = 340211,
        FOXY_3_FX1 = 340311,
        FOXY_4_FX1 = 340411,
        FOXY_H_0_FX1 = 20340011,
        FOXY_H_1_FX1 = 20340111,
        PRIEST_0_FX1 = 350011,
        PRIEST_1_FX1 = 350111,
        PRIEST_2_FX1 = 350211,
        PRIEST_3_FX1 = 350311,
        PRIEST_H_0_FX1 = 20350011,
        PRIEST_H_1_FX1 = 20350111,
        MIKO_0_FX1 = 360011,
        MIKO_1_FX1 = 360111,
        MIKO_2_FX1 = 360211,
        MIKO_4_FX1 = 360411,
        MIKO_H_0_FX1 = 20360011,
        MIKO_H_1_FX1 = 20360111,
        RDRAGON_0_FX1 = 370011,
        RDRAGON_1_FX1 = 370111,
        RDRAGON_1_FX2 = 370112,
        RDRAGON_2_FX1 = 370211,
        RDRAGON_3_FX1 = 370311,
        RDRAGON_H_0_FX1 = 20370011,
        RDRAGON_H_1_FX1 = 20370111,
        RDRAGON_H_1_FX2 = 20370112,
        AKIMBO_0_FX1 = 380011,
        AKIMBO_1_FX1 = 380111,
        AKIMBO_1_FX2 = 380112,
        AKIMBO_2_FX1 = 380211,
        AKIMBO_3_FX1 = 380311,
        AKIMBO_SIG_FX1 = 381511,
        SUGAR_0_FX1 = 390011,
        SUGAR_1_FX1 = 390111,
        SUGAR_1_FX2 = 390112,
        SUGAR_2_FX1 = 390211,
        SUGAR_3_FX1 = 390311,
        SUGAR_4_FX1 = 390411,
        SUGAR_SIG_HEAL = 391511,
        SUGAR_H_0_FX1 = 20390011,
        SUGAR_H_1_FX1 = 20390111,
        SUGAR_H_1_FX2 = 20390112,
        WATER_0_FX1 = 400011,
        WATER_1_FX1 = 400111,
        WATER_2_FX1 = 400211,
        WATER_3_FX1 = 400311,
        WATER_4_FX1 = 400411,
        WATER_H_0_FX1 = 20400011,
        WATER_H_1_FX1 = 20400111,
        GUITAR_0_FX1 = 410011,
        GUITAR_1_FX1 = 410111,
        GUITAR_1_FX2 = 410112,
        GUITAR_2_FX1 = 410211,
        GUITAR_3_FX1 = 410311,
        GUITAR_4_FX1 = 410411,
        GUITAR_H_0_FX1 = 20410011,
        GUITAR_H_1_FX1 = 20410111,
        GUITAR_H_1_FX2 = 20410112,
        GUITAR_H_2_FX1 = 20410211,
        GUITAR_H_3_FX1 = 20410311,
        GUITAR_H_4_FX1 = 20410411,
        HARP_0_FX1 = 420011,
        HARP_1_FX1 = 420111,
        HARP_1_FX2 = 420112,
        HARP_2_FX1 = 420211,
        HARP_3_FX1 = 420311,
        HARP_4_FX1 = 420411,
        HARP_H_0_FX1 = 20420011,
        HARP_H_1_FX1 = 20420111,
        HARP_H_2_FX1 = 20420211,
        HARP_H_3_FX1 = 20420311,
        HARP_H_4_FX1 = 20420411,
        DEATHSCYTHE_0_FX1 = 430011,
        DEATHSCYTHE_1_FX1 = 430111,
        DEATHSCYTHE_2_FX1 = 430211,
        DEATHSCYTHE_3_FX1 = 430311,
        DEATHSCYTHE_4_FX1 = 430411,
        DEATHSCYTHE_H_0_FX1 = 20430011,
        DEATHSCYTHE_H_1_FX1 = 20430111,
        DEATHSCYTHE_H_2_FX1 = 20430211,
        DEATHSCYTHE_H_3_FX1 = 20430311,
        DEATHSCYTHE_H_4_FX1 = 20430411,
        SABRE_0_FX1 = 440011,
        SABRE_1_FX1 = 440111,
        SABRE_2_FX1 = 440211,
        SABRE_2_FX2 = 440212,
        SABRE_3_FX1 = 440311,
        SABRE_4_FX1 = 440411,
        SABRE_5_FX1 = 440511,
        SABRE_H_0_FX1 = 20440011,
        SABRE_H_1_FX1 = 20440111,
        SABRE_H_2_FX1 = 20440211,
        SABRE_H_2_FX2 = 20440212,
        SABRE_H_3_FX1 = 20440311,
        SABRE_H_4_FX1 = 20440411,
        SABRE_H_5_FX1 = 20440511,
        TULU_0_FX1 = 450011,
        TULU_1_FX1 = 450111,
        TULU_2_FX1 = 450211,
        TULU_3_FX1 = 450311,
        TULU_H_0_FX1 = 20450011,
        TULU_H_1_FX1 = 20450111,
        TULU_H_2_FX1 = 20450211,
        TULU_H_3_FX1 = 20450311,
        GOM_0_FX1 = 460011,
        GOM_1_FX1 = 460111,
        GOM_2_FX1 = 460211,
        GOM_2_FX2 = 460212,
        GOM_3_FX1 = 460311,
        GOM_H_0_FX1 = 20460011,
        GOM_H_1_FX1 = 20460111,
        GOM_H_2_FX1 = 20460211,
        GOM_H_2_FX2 = 20460212,
        GOM_H_3_FX1 = 20460311,
        CLERIC_0_FX1 = 470011,
        CLERIC_1_FX1 = 470111,
        CLERIC_1_FX2 = 470112,
        CLERIC_2_FX1 = 470211,
        CLERIC_3_FX1 = 470311,
        CLERIC_4_FX1 = 470411,
        CLERIC_H_0_FX1 = 20470011,
        CLERIC_H_1_FX1 = 20470111,
        CLERIC_H_1_FX2 = 20470112,
        CLERIC_H_2_FX1 = 20470211,
        CLERIC_H_3_FX1 = 20470311,
        CLERIC_H_4_FX1 = 20470411,
        FLORA_0_FX1 = 480011,
        FLORA_1_FX1 = 480111,
        FLORA_2_FX1 = 480211,
        FLORA_3_FX1 = 480311,
        FLORA_H_0_FX1 = 20480011,
        FLORA_H_1_FX1 = 20480111,
        FLORA_H_2_FX1 = 20480211,
        FLORA_H_3_FX1 = 20480311,
        PARU_0_FX1 = 490011,
        PARU_1_FX1 = 490111,
        PARU_1_FX2 = 490112,
        PARU_2_FX1 = 490211,
        PARU_2_FX2 = 490212,
        PARU_3_FX1 = 490311,
        PARU_H_0_FX1 = 20490011,
        PARU_H_1_FX1 = 20490111,
        PARU_H_1_FX2 = 20490112,
        PARU_H_2_FX1 = 20490211,
        PARU_H_2_FX2 = 20490212,
        PARU_H_3_FX1 = 20490311,
        BREEZE_0_FX1 = 500011,
        BREEZE_1_FX1 = 500111,
        BREEZE_1_FX2 = 500112,
        BREEZE_2_FX1 = 500211,
        BREEZE_2_FX2 = 500212,
        BREEZE_3_FX1 = 500311,
        BREEZE_3_FX2 = 500312,
        BREEZE_H_0_FX1 = 20500011,
        BREEZE_H_1_FX1 = 20500111,
        BREEZE_H_1_FX2 = 20500112,
        BREEZE_H_2_FX1 = 20500211,
        BREEZE_H_2_FX2 = 20500212,
        BREEZE_H_3_FX1 = 20500311,
        BREEZE_H_3_FX2 = 20500312,
        PAJAMA_0_FX1 = 510011,
        PAJAMA_1_FX1 = 510111,
        PAJAMA_1_FX2 = 510112,
        PAJAMA_1_FX3 = 510113,
        PAJAMA_1_FX4 = 510114,
        PAJAMA_2_FX1 = 510211,
        PAJAMA_3_FX1 = 510311,
        PAJAMA_4_FX1 = 510411,
        PAJAMA_4_FX2 = 510412,
        PAJAMA_4_FX3 = 510413,
        PAJAMA_H_0_FX1 = 20510011,
        PAJAMA_H_1_FX1 = 20510111,
        PAJAMA_H_1_FX2 = 20510112,
        PAJAMA_H_1_FX3 = 20510113,
        PAJAMA_H_1_FX4 = 20510114,
        PAJAMA_H_2_FX1 = 20510211,
        PAJAMA_H_3_FX1 = 20510311,
        PAJAMA_H_4_FX1 = 20510411,
        PAJAMA_H_4_FX2 = 20510412,
        PAJAMA_H_4_FX3 = 20510413,
        MIDNIGHT_0_FX1 = 520011,
        MIDNIGHT_1_FX1 = 520111,
        MIDNIGHT_1_FX2 = 520112,
        MIDNIGHT_1_FX3 = 520113,
        MIDNIGHT_1_FX4 = 520114,
        MIDNIGHT_2_FX1 = 520211,
        MIDNIGHT_2_FX2 = 520212,
        MIDNIGHT_2_FX3 = 520213,
        MIDNIGHT_3_FX1 = 520311,
        MIDNIGHT_3_FX2 = 520312,
        MIDNIGHT_4_FX1 = 520411,
        MIDNIGHT_H_0_FX1 = 20520011,
        MIDNIGHT_H_1_FX1 = 20520111,
        MIDNIGHT_H_1_FX2 = 20520112,
        MIDNIGHT_H_1_FX3 = 20520113,
        MIDNIGHT_H_1_FX4 = 20520114,
        MIDNIGHT_H_2_FX1 = 20520211,
        MIDNIGHT_H_2_FX2 = 20520212,
        MIDNIGHT_H_2_FX3 = 20520213,
        MIDNIGHT_H_3_FX1 = 20520311,
        MIDNIGHT_H_3_FX2 = 20520312,
        MIDNIGHT_H_4_FX1 = 20520411,
        LAMPLIGHT_0_FX1 = 530011,
        LAMPLIGHT_1_FX1 = 530111,
        LAMPLIGHT_2_FX1 = 530211,
        LAMPLIGHT_2_FX2 = 530212,
        LAMPLIGHT_3_FX1 = 530311,
        LAMPLIGHT_4_FX1 = 530411,
        LAMPLIGHT_H_0_FX1 = 20530011,
        LAMPLIGHT_H_1_FX1 = 20530111,
        LAMPLIGHT_H_2_FX1 = 20530211,
        LAMPLIGHT_H_2_FX2 = 20530212,
        LAMPLIGHT_H_3_FX1 = 20530311,
        LAMPLIGHT_H_4_FX1 = 20530411,
        IDOL_0_FX1 = 540011,
        IDOL_1_FX1 = 540111,
        IDOL_1_FX2 = 540112,
        IDOL_2_FX1 = 540211,
        IDOL_3_FX1 = 540311,
        IDOL_3_FX2 = 540312,
        IDOL_4_FX1 = 540411,
        IDOL_4_FX2 = 540412,
        IDOL_H_0_FX1 = 20540011,
        IDOL_H_1_FX1 = 20540111,
        IDOL_H_1_FX2 = 20540112,
        IDOL_H_2_FX1 = 20540211,
        IDOL_H_3_FX1 = 20540311,
        IDOL_H_3_FX2 = 20540312,
        IDOL_H_4_FX1 = 20540411,
        IDOL_H_4_FX2 = 20540412,
        DARKTEMPLAR_0_FX1 = 550011,
        DARKTEMPLAR_1_FX1 = 550111,
        DARKTEMPLAR_2_FX1 = 550211,
        DARKTEMPLAR_2_FX2 = 550212,
        DARKTEMPLAR_3_FX1 = 550311,
        DARKTEMPLAR_3_FX2 = 550312,
        DARKTEMPLAR_4_FX1 = 550411,
        DARKTEMPLAR_H_0_FX1 = 20550011,
        DARKTEMPLAR_H_1_FX1 = 20550111,
        DARKTEMPLAR_H_2_FX1 = 20550211,
        DARKTEMPLAR_H_2_FX2 = 20550212,
        DARKTEMPLAR_H_3_FX1 = 20550311,
        DARKTEMPLAR_H_3_FX2 = 20550312,
        DARKTEMPLAR_H_4_FX1 = 20550411,
        TAILOR_0_FX1 = 560011,
        TAILOR_1_FX1 = 560111,
        TAILOR_2_FX1 = 560211,
        TAILOR_3_FX1 = 560311,
        TAILOR_4_FX1 = 560411,
        TAILOR_SIG_FX1 = 561511,
        TAILOR_H_0_FX1 = 20560011,
        TAILOR_H_1_FX1 = 20560111,
        TAILOR_H_2_FX1 = 20560211,
        TAILOR_H_3_FX1 = 20560311,
        TAILOR_H_4_FX1 = 20560411,
        SHAMAN_0_FX1 = 570011,
        SHAMAN_1_FX1 = 570111,
        SHAMAN_2_FX1 = 570211,
        SHAMAN_3_FX1 = 570311,
        SHAMAN_4_FX1 = 570411,
        SHAMAN_H_0_FX1 = 20570011,
        SHAMAN_H_1_FX1 = 20570111,
        SHAMAN_H_2_FX1 = 20570211,
        SHAMAN_H_3_FX1 = 20570311,
        SHAMAN_H_4_FX1 = 20570411,
        SLIME01_HERO_0_FX1 = 9010011,
        SLIME01_HERO_1_FX1 = 9010111,
        SLIME01_HERO_1_FX2 = 9010112,
        SLIME02_HERO_0_FX1 = 9020011,
        SLIME02_HERO_1_FX1 = 9020111,
        SLIME02_HERO_1_FX2 = 9020112,
        SLIME03_HERO_0_FX1 = 9030011,
        SLIME03_HERO_1_FX1 = 9030111,
        SLIME03_HERO_1_FX2 = 9030112,
        SLIME04_HERO_0_FX1 = 9040011,
        SLIME04_HERO_1_FX1 = 9040111,
        SLIME04_HERO_1_FX2 = 9040112,
        SLIME05_HERO_0_FX1 = 9050011,
        SLIME05_HERO_1_FX1 = 9050111,
        SLIME05_HERO_1_FX2 = 9050112,
        SLIME06_HERO_0_FX1 = 9060011,
        SLIME06_HERO_1_FX1 = 9060111,
        SLIME06_HERO_1_FX2 = 9060112,
        SLIME01_0_FX1 = 10010011,
        SLIME01_1_FX1 = 10010111,
        SLIME01_1_FX2 = 10010112,
        SLIME02_0_FX1 = 10020011,
        SLIME02_1_FX1 = 10020111,
        SLIME02_1_FX2 = 10020112,
        SLIME03_0_FX1 = 10030011,
        SLIME03_1_FX1 = 10030111,
        SLIME03_1_FX2 = 10030112,
        SLIME04_0_FX1 = 10040011,
        SLIME04_1_FX1 = 10040111,
        SLIME04_1_FX2 = 10040112,
        SLIME05_0_FX1 = 10050011,
        SLIME05_1_FX1 = 10050111,
        SLIME05_1_FX2 = 10050112,
        SLIME06_0_FX1 = 10060011,
        SLIME06_1_FX1 = 10060111,
        SLIME06_1_FX2 = 10060112,
        MUSHROM01_0_FX1 = 10070011,
        MUSHROM01_1_FX1 = 10070111,
        MUSHROM02_0_FX1 = 10080011,
        MUSHROM02_1_FX1 = 10080111,
        MUSHROM03_0_FX1 = 10090011,
        MUSHROM03_1_FX1 = 10090111,
        MUSHROM04_0_FX1 = 10100011,
        MUSHROM04_1_FX1 = 10100111,
        MUSHROM05_0_FX1 = 10110011,
        MUSHROM05_1_FX1 = 10110111,
        MUSHROM06_0_FX1 = 10120011,
        MUSHROM06_1_FX1 = 10120111,
        SUITCAT_0_FX1 = 30010011,
        SUITCAT_2_FX1 = 30010211,
        SUITCAT_3_FX1 = 30010311,
        JACKRABBIT_0_FX1 = 30020011,
        JACKRABBIT_2_FX1 = 30020211,
        JACKRABBIT_3_FX1 = 30020311,
        EVILPET_0_FX1 = 30030011,
        EVILPET_1_FX1 = 30030111,
        EVILPET_2_FX1 = 30030211,
        EVILPET_3_FX1 = 30030311,
        EVILPET_4_FX1 = 30030411,
        CAKE_0_FX1 = 30040011,
        CAKE_2_FX1 = 30040211,
        CAKE_3_FX1 = 30040311,
    }

    enum SkillFXID_REDEYE
    {
        NONE = 0,
        REDEYE_0_FX1 = 10011,
        REDEYE_1_FX1 = 10111,
        REDEYE_2_FX1 = 10211,
        REDEYE_2_FX2 = 10212,
        REDEYE_3_FX1 = 10311,
        REDEYE_3_FX2 = 10312,
    }

    enum SkillFXID_REDEYE_H
    {
        NONE = 0,
        REDEYE_H_0_FX1 = 20010011,
        REDEYE_H_1_FX1 = 20010111,
    }

    enum SkillFXID_PLUMEHAT
    {
        NONE = 0,
        PLUMEHAT_0_FX1 = 20011,
        PLUMEHAT_1_FX1 = 20111,
        PLUMEHAT_2_FX1 = 20211,
        PLUMEHAT_2_FX2 = 20212,
        PLUMEHAT_3_FX1 = 20311,
    }

    enum SkillFXID_PLUMEHAT_H
    {
        NONE = 0,
        PLUMEHAT_H_0_FX1 = 20020011,
        PLUMEHAT_H_1_FX1 = 20020111,
    }

    enum SkillFXID_BROWNPONY
    {
        NONE = 0,
        BROWNPONY_0_FX1 = 30011,
        BROWNPONY_1_FX1 = 30111,
        BROWNPONY_2_FX1 = 30211,
        BROWNPONY_2_FX2 = 30212,
        BROWNPONY_3_FX1 = 30311,
    }

    enum SkillFXID_BROWNPONY_H
    {
        NONE = 0,
        BROWNPONY_H_0_FX1 = 20030011,
        BROWNPONY_H_1_FX1 = 20030111,
    }

    enum SkillFXID_CARROT
    {
        NONE = 0,
        CARROT_0_FX1 = 40011,
        CARROT_1_FX1 = 40111,
        CARROT_1_FX2 = 40112,
        CARROT_2_FX1 = 40211,
        CARROT_3_FX1 = 40311,
        CARROT_3_FX2 = 40312,
    }

    enum SkillFXID_CARROT_H
    {
        NONE = 0,
        CARROT_H_0_FX1 = 20040011,
        CARROT_H_1_FX1 = 20040111,
        CARROT_H_1_FX2 = 20040112,
    }

    enum SkillFXID_SKYBLUE
    {
        NONE = 0,
        SKYBLUE_0_FX1 = 50011,
        SKYBLUE_1_FX1 = 50111,
        SKYBLUE_2_FX1 = 50211,
        SKYBLUE_3_FX1 = 50311,
    }

    enum SkillFXID_SKYBLUE_H
    {
        NONE = 0,
        SKYBLUE_H_0_FX1 = 20050011,
        SKYBLUE_H_1_FX1 = 20050111,
    }

    enum SkillFXID_GOLDSHIELD
    {
        NONE = 0,
        GOLDSHIELD_0_FX1 = 60011,
        GOLDSHIELD_1_FX1 = 60111,
        GOLDSHIELD_2_FX1 = 60211,
    }

    enum SkillFXID_GOLDSHIELD_H
    {
        NONE = 0,
        GOLDSHIELD_H_0_FX1 = 20060011,
        GOLDSHIELD_H_1_FX1 = 20060111,
    }

    enum SkillFXID_MONK
    {
        NONE = 0,
        MONK_0_FX1 = 70011,
        MONK_1_FX1 = 70111,
        MONK_2_FX1 = 70211,
        MONK_3_FX1 = 70311,
    }

    enum SkillFXID_MONK_H
    {
        NONE = 0,
        MONK_H_0_FX1 = 20070011,
        MONK_H_1_FX1 = 20070111,
    }

    enum SkillFXID_REDHOOD
    {
        NONE = 0,
        REDHOOD_0_FX1 = 80011,
        REDHOOD_1_FX1 = 80111,
        REDHOOD_2_FX1 = 80211,
        REDHOOD_3_FX1 = 80311,
        REDHOOD_4_FX1 = 8411,
    }

    enum SkillFXID_REDHOOD_H
    {
        NONE = 0,
        REDHOOD_H_0_FX1 = 20080011,
        REDHOOD_H_1_FX1 = 20080111,
    }

    enum SkillFXID_HIGHELF
    {
        NONE = 0,
        HIGHELF_0_FX1 = 90011,
        HIGHELF_1_FX1 = 90111,
        HIGHELF_1_FX2 = 90112,
        HIGHELF_2_FX1 = 90211,
        HIGHELF_3_1_FX1 = 90311,
        HIGHELF_3_2_FX1 = 90321,
        HIGHELF_4_FX1 = 90411,
    }

    enum SkillFXID_HIGHELF_H
    {
        NONE = 0,
        HIGHELF_H_0_FX1 = 20090011,
        HIGHELF_H_1_FX1 = 20090111,
        HIGHELF_H_1_FX2 = 20090112,
    }

    enum SkillFXID_BULLYGIRL
    {
        NONE = 0,
        BULLYGIRL_0_FX1 = 100011,
        BULLYGIRL_1_FX1 = 100111,
        BULLYGIRL_2_FX1 = 100211,
        BULLYGIRL_2_FX2 = 100212,
        BULLYGIRL_3_FX1 = 100311,
        BULLYGIRL_4_FX1 = 100411,
    }

    enum SkillFXID_BULLYGIRL_H
    {
        NONE = 0,
        BULLYGIRL_H_0_FX1 = 20100011,
        BULLYGIRL_H_1_FX1 = 20100111,
    }

    enum SkillFXID_BLACKSMITH
    {
        NONE = 0,
        BLACKSMITH_0_FX1 = 110011,
        BLACKSMITH_1_FX1 = 110111,
        BLACKSMITH_2_FX1 = 110211,
        BLACKSMITH_3_FX1 = 110311,
        BLACKSMITH_3_FX2 = 110312,
        BLACKSMITH_4_FX1 = 110411,
    }

    enum SkillFXID_BLACKSMITH_H
    {
        NONE = 0,
        BLACKSMITH_H_0_FX1 = 20110011,
        BLACKSMITH_H_1_FX1 = 20110111,
    }

    enum SkillFXID_PIRATE
    {
        NONE = 0,
        PIRATE_0_FX1 = 120011,
        PIRATE_1_FX1 = 120111,
        PIRATE_1_FX2 = 120112,
        PIRATE_2_FX1 = 120211,
        PIRATE_3_FX1 = 120311,
        PIRATE_3_FX2 = 120312,
        PIRATE_4_FX1 = 120411,
    }

    enum SkillFXID_PIRATE_H
    {
        NONE = 0,
        PIRATE_H_0_FX1 = 20120011,
        PIRATE_H_1_FX1 = 20120111,
        PIRATE_H_1_FX2 = 20120112,
    }

    enum SkillFXID_GAMBLER
    {
        NONE = 0,
        GAMBLER_0_FX1 = 130011,
        GAMBLER_1_FX1 = 130111,
        GAMBLER_1_FX2 = 130112,
        GAMBLER_2_FX1 = 130211,
        GAMBLER_2_FX2 = 130212,
        GAMBLER_3_FX1 = 130311,
        GAMBLER_3_FX2 = 130312,
        GAMBLER_4_FX1 = 130411,
        GAMBLER_4_FX2 = 130412,
        GAMBLER_4_FX3 = 130413,
        GAMBLER_4_FX4 = 130414,
        GAMBLER_4_FX5 = 130415,
    }

    enum SkillFXID_GAMBLER_H
    {
        NONE = 0,
        GAMBLER_H_0_FX1 = 20130011,
        GAMBLER_H_1_FX1 = 20130111,
        GAMBLER_H_1_FX2 = 20130112,
    }

    enum SkillFXID_BABA
    {
        NONE = 0,
        BABA_0_FX1 = 140011,
        BABA_1_FX1 = 140111,
        BABA_1_FX2 = 140112,
        BABA_2_FX1 = 140211,
        BABA_3_FX1 = 140311,
        BABA_4_FX1 = 140411,
    }

    enum SkillFXID_BABA_H
    {
        NONE = 0,
        BABA_H_0_FX1 = 20140011,
        BABA_H_1_FX1 = 20140111,
        BABA_H_1_FX2 = 20140112,
    }

    enum SkillFXID_CRUSADER
    {
        NONE = 0,
        CRUSADER_0_FX1 = 150011,
        CRUSADER_1_FX1 = 150111,
        CRUSADER_1_FX2 = 150112,
        CRUSADER_1_FX3 = 150113,
        CRUSADER_2_FX1 = 150211,
        CRUSADER_2_FX2 = 150212,
        CRUSADER_3_FX1 = 150311,
        CRUSADER_4_FX1 = 150411,
    }

    enum SkillFXID_JUNGLE
    {
        NONE = 0,
        JUNGLE_0_FX1 = 160011,
        JUNGLE_1_FX1 = 160111,
        JUNGLE_2_FX1 = 160211,
        JUNGLE_3_FX1 = 160311,
    }

    enum SkillFXID_JUNGLE_H
    {
        NONE = 0,
        JUNGLE_H_0_FX1 = 20160011,
        JUNGLE_H_1_FX1 = 20160111,
    }

    enum SkillFXID_LADYDEATH
    {
        NONE = 0,
        LADYDEATH_0_FX1 = 170011,
        LADYDEATH_1_FX1 = 170111,
        LADYDEATH_1_FX2 = 170112,
        LADYDEATH_2_FX1 = 170211,
        LADYDEATH_3_FX1 = 170311,
        LADYDEATH_4_FX1 = 170411,
    }

    enum SkillFXID_LADYDEATH_H
    {
        NONE = 0,
        LADYDEATH_H_0_FX1 = 170011,
        LADYDEATH_H_1_FX1 = 170111,
        LADYDEATH_H_1_FX2 = 170112,
    }

    enum SkillFXID_DARKELF
    {
        NONE = 0,
        DARKELF_0_FX1 = 180011,
        DARKELF_1_FX1 = 180111,
        DARKELF_1_FX2 = 180112,
        DARKELF_2_FX1 = 180211,
        DARKELF_3_FX1 = 180311,
        DARKELF_4_FX1 = 180411,
    }

    enum SkillFXID_DARKELF_H
    {
        NONE = 0,
        DARKELF_H_0_FX1 = 20180011,
        DARKELF_H_1_FX1 = 20180111,
        DARKELF_H_1_FX2 = 20180112,
    }

    enum SkillFXID_NUN
    {
        NONE = 0,
        NUN_0_FX1 = 190011,
        NUN_1_FX1 = 190111,
        NUN_2_FX1 = 190211,
        NUN_3_FX1 = 190311,
        NUN_4_FX1 = 190411,
        NUN_4_FX2 = 190421,
    }

    enum SkillFXID_NUN_H
    {
        NONE = 0,
        NUN_H_0_FX1 = 20190011,
        NUN_H_1_FX1 = 20190111,
    }

    enum SkillFXID_ICE
    {
        NONE = 0,
        ICE_0_FX1 = 200011,
        ICE_1_FX1 = 200111,
        ICE_2_FX1 = 200211,
        ICE_3_FX1 = 200311,
        ICE_3_FX2 = 200312,
        ICE_4_FX1 = 200411,
        ICE_4_FX2 = 200412,
    }

    enum SkillFXID_COOK
    {
        NONE = 0,
        COOK_0_FX1 = 210011,
        COOK_1_FX1 = 210111,
        COOK_2_FX1 = 210211,
        COOK_3_FX1 = 210311,
        COOK_4_FX1 = 210411,
    }

    enum SkillFXID_FIANCE
    {
        NONE = 0,
        FIANCE_0_FX1 = 220011,
        FIANCE_1_FX1 = 220111,
        FIANCE_1_FX2 = 220112,
        FIANCE_2_FX1 = 220211,
        FIANCE_3_FX1 = 220311,
        FIANCE_4_FX1 = 220411,
    }

    enum SkillFXID_FIANCE_H
    {
        NONE = 0,
        FIANCE_H_0_FX1 = 20220011,
        FIANCE_H_1_FX1 = 20220111,
        FIANCE_H_1_FX2 = 20220112,
    }

    enum SkillFXID_ALCHEMY
    {
        NONE = 0,
        ALCHEMY_0_FX1 = 230011,
        ALCHEMY_1_FX1 = 230111,
        ALCHEMY_1_FX2 = 230112,
        ALCHEMY_2_FX1 = 230211,
        ALCHEMY_3_FX1 = 230311,
    }

    enum SkillFXID_ALCHEMY_H
    {
        NONE = 0,
        ALCHEMY_H_0_FX1 = 20230011,
        ALCHEMY_H_1_FX1 = 20230111,
        ALCHEMY_H_1_FX2 = 20230112,
    }

    enum SkillFXID_RABBIT
    {
        NONE = 0,
        RABBIT_0_FX1 = 240011,
        RABBIT_1_FX1 = 240111,
        RABBIT_2_FX1 = 240211,
    }

    enum SkillFXID_RABBIT_H
    {
        NONE = 0,
        RABBIT_0_FX1 = 20240011,
        RABBIT_1_FX1 = 20240111,
    }

    enum SkillFXID_SWORDCAT
    {
        NONE = 0,
        SWORDCAT_0_FX1 = 250011,
        SWORDCAT_1_FX1 = 250111,
        SWORDCAT_1_FX2 = 250112,
        SWORDCAT_2_FX1 = 250211,
        SWORDCAT_3_FX1 = 250311,
    }

    enum SkillFXID_SWORDCAT_H
    {
        NONE = 0,
        SWORDCAT_H_0_FX1 = 20250011,
        SWORDCAT_H_1_FX1 = 20250111,
        SWORDCAT_H_1_FX2 = 20250112,
    }

    enum SkillFXID_FLOWER
    {
        NONE = 0,
        FLOWER_0_FX1 = 260011,
        FLOWER_1_FX1 = 260111,
        FLOWER_2_FX1 = 260211,
        FLOWER_3_FX1 = 260311,
        FLOWER_4_FX1 = 260411,
    }

    enum SkillFXID_FLOWER_H
    {
        NONE = 0,
        FLOWER_H_0_FX1 = 20260011,
        FLOWER_H_1_FX1 = 20260111,
    }

    enum SkillFXID_MIDDLE
    {
        NONE = 0,
        MIDDLE_0_FX1 = 270011,
        MIDDLE_1_FX1 = 270111,
        MIDDLE_2_FX1 = 270211,
        MIDDLE_3_FX1 = 270311,
        MIDDLE_4_FX1 = 270411,
    }

    enum SkillFXID_MIDDLE_H
    {
        NONE = 0,
        MIDDLE_H_0_FX1 = 270011,
        MIDDLE_H_1_FX1 = 270111,
    }

    enum SkillFXID_BDRAGON
    {
        NONE = 0,
        BDRAGON_0_FX1 = 280011,
        BDRAGON_1_FX1 = 280111,
        BDRAGON_1_FX2 = 280112,
        BDRAGON_2_FX1 = 280211,
        BDRAGON_2_FX2 = 280212,
        BDRAGON_3_FX1 = 280311,
        BDRAGON_3_FX2 = 280312,
        BDRAGON_4_FX1 = 280411,
        BDRAGON_4_FX2 = 280412,
        BDRAGON_4_FX3 = 280413,
    }

    enum SkillFXID_BDRAGON_H
    {
        NONE = 0,
        BDRAGON_H_0_FX1 = 20280011,
        BDRAGON_H_1_FX1 = 20280111,
        BDRAGON_H_1_FX2 = 20280112,
    }

    enum SkillFXID_QUEEN
    {
        NONE = 0,
        QUEEN_0_FX1 = 290011,
        QUEEN_1_FX1 = 290111,
        QUEEN_1_FX2 = 290112,
        QUEEN_2_FX1 = 290211,
        QUEEN_3_FX1 = 290311,
        QUEEN_4_FX1 = 290411,
    }

    enum SkillFXID_QUEEN_H
    {
        NONE = 0,
        QUEEN_H_0_FX1 = 20290011,
        QUEEN_H_1_FX1 = 20290111,
        QUEEN_H_1_FX2 = 20290112,
    }

    enum SkillFXID_GDRAGON
    {
        NONE = 0,
        GDRAGON_0_FX1 = 300011,
        GDRAGON_1_FX1 = 300111,
        GDRAGON_2_FX1 = 300211,
        GDRAGON_2_FX2 = 300212,
        GDRAGON_3_FX1 = 300311,
        GDRAGON_4_FX1 = 300411,
    }

    enum SkillFXID_REDHEAD
    {
        NONE = 0,
        REDHEAD_0_FX1 = 310011,
        REDHEAD_1_FX1 = 310111,
        REDHEAD_2_FX1 = 310211,
        REDHEAD_3_FX1 = 310311,
    }

    enum SkillFXID_REDHEAD_H
    {
        NONE = 0,
        REDHEAD_H_0_FX1 = 20310011,
        REDHEAD_H_1_FX1 = 20310111,
    }

    enum SkillFXID_DUALCROSS
    {
        NONE = 0,
        DUALCROSS_0_FX1 = 320011,
        DUALCROSS_1_FX1 = 320111,
        DUALCROSS_1_FX2 = 320112,
        DUALCROSS_2_FX1 = 320211,
        DUALCROSS_3_FX1 = 320311,
        DUALCROSS_4_FX1 = 320411,
    }

    enum SkillFXID_DUALCROSS_H
    {
        NONE = 0,
        DUALCROSS_H_0_FX1 = 20320011,
        DUALCROSS_H_1_FX1 = 20320111,
        DUALCROSS_H_1_FX2 = 20320112,
    }

    enum SkillFXID_ASS
    {
        NONE = 0,
        ASS_0_FX1 = 330011,
        ASS_1_FX1 = 330111,
        ASS_1_FX2 = 330112,
        ASS_2_FX1 = 330211,
        ASS_3_FX1 = 330311,
    }

    enum SkillFXID_ASS_H
    {
        NONE = 0,
        ASS_H_0_FX1 = 20330011,
        ASS_H_1_FX1 = 20330111,
        ASS_H_1_FX2 = 20330112,
    }

    enum SkillFXID_FOXY
    {
        NONE = 0,
        FOXY_0_FX1 = 340011,
        FOXY_1_FX1 = 340111,
        FOXY_2_FX1 = 340211,
        FOXY_3_FX1 = 340311,
        FOXY_4_FX1 = 340411,
    }

    enum SkillFXID_FOXY_H
    {
        NONE = 0,
        FOXY_H_0_FX1 = 20340011,
        FOXY_H_1_FX1 = 20340111,
    }

    enum SkillFXID_PRIEST
    {
        NONE = 0,
        PRIEST_0_FX1 = 350011,
        PRIEST_1_FX1 = 350111,
        PRIEST_2_FX1 = 350211,
        PRIEST_3_FX1 = 350311,
    }

    enum SkillFXID_PRIEST_H
    {
        NONE = 0,
        PRIEST_H_0_FX1 = 20350011,
        PRIEST_H_1_FX1 = 20350111,
    }

    enum SkillFXID_MIKO
    {
        NONE = 0,
        MIKO_0_FX1 = 360011,
        MIKO_1_FX1 = 360111,
        MIKO_2_FX1 = 360211,
        MIKO_4_FX1 = 360411,
    }

    enum SkillFXID_MIKO_H
    {
        NONE = 0,
        MIKO_H_0_FX1 = 20360011,
        MIKO_H_1_FX1 = 20360111,
    }

    enum SkillFXID_RDRAGON
    {
        NONE = 0,
        RDRAGON_0_FX1 = 370011,
        RDRAGON_1_FX1 = 370111,
        RDRAGON_1_FX2 = 370112,
        RDRAGON_2_FX1 = 370211,
        RDRAGON_3_FX1 = 370311,
    }

    enum SkillFXID_RDRAGON_H
    {
        NONE = 0,
        RDRAGON_H_0_FX1 = 20370011,
        RDRAGON_H_1_FX1 = 20370111,
        RDRAGON_H_1_FX2 = 20370112,
    }

    enum SkillFXID_AKIMBO
    {
        NONE = 0,
        AKIMBO_0_FX1 = 380011,
        AKIMBO_1_FX1 = 380111,
        AKIMBO_1_FX2 = 380112,
        AKIMBO_2_FX1 = 380211,
        AKIMBO_3_FX1 = 380311,
    }

    enum SkillFXID_SUGAR
    {
        NONE = 0,
        SUGAR_0_FX1 = 390011,
        SUGAR_1_FX1 = 390111,
        SUGAR_1_FX2 = 390112,
        SUGAR_2_FX1 = 390211,
        SUGAR_3_FX1 = 390311,
        SUGAR_4_FX1 = 390411,
    }

    enum SkillFXID_SUGAR_H
    {
        NONE = 0,
        SUGAR_H_0_FX1 = 20390011,
        SUGAR_H_1_FX1 = 20390111,
        SUGAR_H_1_FX2 = 20390112,
    }

    enum SkillFXID_WATER
    {
        NONE = 0,
        WATER_0_FX1 = 400011,
        WATER_1_FX1 = 400111,
        WATER_2_FX1 = 400211,
        WATER_3_FX1 = 400311,
        WATER_4_FX1 = 400411,
    }

    enum SkillFXID_WATER_H
    {
        NONE = 0,
        WATER_H_0_FX1 = 20400011,
        WATER_H_1_FX1 = 20400111,
    }

    enum SkillFXID_GUITAR
    {
        NONE = 0,
        GUITAR_0_FX1 = 410011,
        GUITAR_1_FX1 = 410111,
        GUITAR_1_FX2 = 410112,
        GUITAR_2_FX1 = 410211,
        GUITAR_3_FX1 = 410311,
        GUITAR_4_FX1 = 410411,
    }

    enum SkillFXID_GUITAR_H
    {
        NONE = 0,
        GUITAR_H_0_FX1 = 20410011,
        GUITAR_H_1_FX1 = 20410111,
        GUITAR_H_1_FX2 = 20410112,
        GUITAR_H_2_FX1 = 20410211,
        GUITAR_H_3_FX1 = 20410311,
        GUITAR_H_4_FX1 = 20410411,
    }

    enum SkillFXID_HARP
    {
        NONE = 0,
        HARP_0_FX1 = 420011,
        HARP_1_FX1 = 420111,
        HARP_1_FX2 = 420112,
        HARP_2_FX1 = 420211,
        HARP_3_FX1 = 420311,
        HARP_4_FX1 = 420411,
    }

    enum SkillFXID_HARP_H
    {
        NONE = 0,
        HARP_H_0_FX1 = 20420011,
        HARP_H_1_FX1 = 20420111,
        HARP_H_1_FX2 = 20420112,
        HARP_H_2_FX1 = 20420211,
        HARP_H_3_FX1 = 20420311,
        HARP_H_4_FX1 = 20420411,
    }

    enum SkillFXID_DEATHSCYTHE
    {
        NONE = 0,
        DEATHSCYTHE_0_FX1 = 430011,
        DEATHSCYTHE_1_FX1 = 430111,
        DEATHSCYTHE_2_FX1 = 430211,
        DEATHSCYTHE_3_FX1 = 430311,
        DEATHSCYTHE_4_FX1 = 430411,
    }

    enum SkillFXID_DEATHSCYTHE_H
    {
        NONE = 0,
        DEATHSCYTHE_H_0_FX1 = 20430011,
        DEATHSCYTHE_H_1_FX1 = 20430111,
        DEATHSCYTHE_H_2_FX1 = 20430211,
        DEATHSCYTHE_H_3_FX1 = 20430311,
        DEATHSCYTHE_H_4_FX1 = 20430411,
    }

    enum SkillFXID_SABRE
    {
        NONE = 0,
        SABRE_0_FX1 = 440011,
        SABRE_1_FX1 = 440111,
        SABRE_2_FX1 = 440211,
        SABRE_2_FX2 = 440212,
        SABRE_3_FX1 = 440311,
        SABRE_4_FX1 = 440411,
        SABRE_5_FX1 = 440511,
    }

    enum SkillFXID_SABRE_H
    {
        NONE = 0,
        SABRE_H_0_FX1 = 20440011,
        SABRE_H_1_FX1 = 20440111,
        SABRE_H_2_FX1 = 20440211,
        SABRE_H_2_FX2 = 20440212,
        SABRE_H_3_FX1 = 20440311,
        SABRE_H_4_FX1 = 20440411,
        SABRE_H_5_FX1 = 20440511,
    }

    enum SkillFXID_TULU
    {
        NONE = 0,
        TULU_0_FX1 = 450011,
        TULU_1_FX1 = 450111,
        TULU_2_FX1 = 450211,
        TULU_3_FX1 = 450311,
    }

    enum SkillFXID_TULU_H
    {
        NONE = 0,
        TULU_H_0_FX1 = 20450011,
        TULU_H_1_FX1 = 20450111,
        TULU_H_2_FX1 = 20450211,
        TULU_H_3_FX1 = 20450311,
    }

    enum SkillFXID_GOM
    {
        NONE = 0,
        GOM_0_FX1 = 460011,
        GOM_1_FX1 = 460111,
        GOM_2_FX1 = 460211,
        GOM_2_FX2 = 460212,
        GOM_3_FX1 = 460311,
    }

    enum SkillFXID_GOM_H
    {
        NONE = 0,
        GOM_H_0_FX1 = 20460011,
        GOM_H_1_FX1 = 20460111,
        GOM_H_2_FX1 = 20460211,
        GOM_H_2_FX2 = 20460212,
        GOM_H_3_FX1 = 20460311,
    }

    enum SkillFXID_CLERIC
    {
        NONE = 0,
        CLERIC_0_FX1 = 470011,
        CLERIC_1_FX1 = 470111,
        CLERIC_1_FX2 = 470112,
        CLERIC_2_FX1 = 470211,
        CLERIC_3_FX1 = 470311,
        CLERIC_4_FX1 = 470411,
    }

    enum SkillFXID_CLERIC_H
    {
        NONE = 0,
        CLERIC_H_0_FX1 = 20470011,
        CLERIC_H_1_FX1 = 20470111,
        CLERIC_H_1_FX2 = 20470112,
        CLERIC_H_2_FX1 = 20470211,
        CLERIC_H_3_FX1 = 20470311,
        CLERIC_H_4_FX1 = 20470411,
    }

    enum SkillFXID_FLORA
    {
        NONE = 0,
        FLORA_0_FX1 = 480011,
        FLORA_1_FX1 = 480111,
        FLORA_2_FX1 = 480211,
        FLORA_3_FX1 = 480311,
    }

    enum SkillFXID_FLORA_H
    {
        NONE = 0,
        FLORA_H_0_FX1 = 20480011,
        FLORA_H_1_FX1 = 20480111,
        FLORA_H_2_FX1 = 20480211,
        FLORA_H_3_FX1 = 20480311,
    }

    enum SkillFXID_PARU
    {
        NONE = 0,
        PARU_0_FX1 = 490011,
        PARU_1_FX1 = 490111,
        PARU_1_FX2 = 490112,
        PARU_2_FX1 = 490211,
        PARU_2_FX2 = 490212,
        PARU_3_FX1 = 490311,
    }

    enum SkillFXID_PARU_H
    {
        NONE = 0,
        PARU_H_0_FX1 = 20490011,
        PARU_H_1_FX1 = 20490111,
        PARU_H_1_FX2 = 20490112,
        PARU_H_2_FX1 = 20490211,
        PARU_H_2_FX2 = 20490212,
        PARU_H_3_FX1 = 20490311,
    }

    enum SkillFXID_BREEZE
    {
        NONE = 0,
        BREEZE_0_FX1 = 500011,
        BREEZE_1_FX1 = 500111,
        BREEZE_1_FX2 = 500112,
        BREEZE_2_FX1 = 500211,
        BREEZE_2_FX2 = 500212,
        BREEZE_3_FX1 = 500311,
        BREEZE_3_FX2 = 500312,
    }

    enum SkillFXID_BREEZE_H
    {
        NONE = 0,
        BREEZE_H_0_FX1 = 20500011,
        BREEZE_H_1_FX1 = 20500111,
        BREEZE_H_1_FX2 = 20500112,
        BREEZE_H_2_FX1 = 20500211,
        BREEZE_H_2_FX2 = 20500212,
        BREEZE_H_3_FX1 = 20500311,
        BREEZE_H_3_FX2 = 20500312,
    }

    enum SkillFXID_PAJAMA
    {
        NONE = 0,
        PAJAMA_0_FX1 = 510011,
        PAJAMA_1_FX1 = 510111,
        PAJAMA_1_FX2 = 510112,
        PAJAMA_1_FX3 = 510113,
        PAJAMA_1_FX4 = 510114,
        PAJAMA_2_FX1 = 510211,
        PAJAMA_3_FX1 = 510311,
        PAJAMA_4_FX1 = 510411,
        PAJAMA_4_FX2 = 510412,
        PAJAMA_4_FX3 = 510413,
    }

    enum SkillFXID_PAJAMA_H
    {
        NONE = 0,
        PAJAMA_H_0_FX1 = 20510011,
        PAJAMA_H_1_FX1 = 20510111,
        PAJAMA_H_1_FX2 = 20510112,
        PAJAMA_H_1_FX3 = 20510113,
        PAJAMA_H_1_FX4 = 20510114,
        PAJAMA_H_2_FX1 = 20510211,
        PAJAMA_H_3_FX1 = 20510311,
        PAJAMA_H_4_FX1 = 20510411,
        PAJAMA_H_4_FX2 = 20510412,
        PAJAMA_H_4_FX3 = 20510413,
    }

    enum SkillFXID_MIDNIGHT
    {
        NONE = 0,
        MIDNIGHT_0_FX1 = 520011,
        MIDNIGHT_1_FX1 = 520111,
        MIDNIGHT_1_FX2 = 520112,
        MIDNIGHT_1_FX3 = 520113,
        MIDNIGHT_1_FX4 = 520114,
        MIDNIGHT_2_FX1 = 520211,
        MIDNIGHT_2_FX2 = 520212,
        MIDNIGHT_2_FX3 = 520213,
        MIDNIGHT_3_FX1 = 520311,
        MIDNIGHT_3_FX2 = 520312,
        MIDNIGHT_4_FX1 = 520411,
    }

    enum SkillFXID_MIDNIGHT_H
    {
        NONE = 0,
        MIDNIGHT_H_0_FX1 = 20520011,
        MIDNIGHT_H_1_FX1 = 20520111,
        MIDNIGHT_H_1_FX2 = 20520112,
        MIDNIGHT_H_1_FX3 = 20520113,
        MIDNIGHT_H_1_FX4 = 20520114,
        MIDNIGHT_H_2_FX1 = 20520211,
        MIDNIGHT_H_2_FX2 = 20520212,
        MIDNIGHT_H_2_FX3 = 20520213,
        MIDNIGHT_H_3_FX1 = 20520311,
        MIDNIGHT_H_3_FX2 = 20520312,
        MIDNIGHT_H_4_FX1 = 20520411,
    }

    enum SkillFXID_LAMPLIGHT
    {
        NONE = 0,
        LAMPLIGHT_0_FX1 = 530011,
        LAMPLIGHT_1_FX1 = 530111,
        LAMPLIGHT_2_FX1 = 530211,
        LAMPLIGHT_2_FX2 = 530212,
        LAMPLIGHT_3_FX1 = 530311,
        LAMPLIGHT_4_FX1 = 530411,
    }

    enum SkillFXID_LAMPLIGHT_H
    {
        NONE = 0,
        LAMPLIGHT_H_0_FX1 = 20530011,
        LAMPLIGHT_H_1_FX1 = 20530111,
        LAMPLIGHT_H_2_FX1 = 20530211,
        LAMPLIGHT_H_2_FX2 = 20530212,
        LAMPLIGHT_H_3_FX1 = 20530311,
        LAMPLIGHT_H_4_FX1 = 20530411,
    }

    enum SkillFXID_IDOL
    {
        NONE = 0,
        IDOL_0_FX1 = 540011,
        IDOL_1_FX1 = 540111,
        IDOL_1_FX2 = 540112,
        IDOL_2_FX1 = 540211,
        IDOL_3_FX1 = 540311,
        IDOL_3_FX2 = 540312,
        IDOL_4_FX1 = 540411,
        IDOL_4_FX2 = 540412,
    }

    enum SkillFXID_IDOL_H
    {
        NONE = 0,
        IDOL_H_0_FX1 = 20540011,
        IDOL_H_1_FX1 = 20540111,
        IDOL_H_1_FX2 = 20540112,
        IDOL_H_2_FX1 = 20540211,
        IDOL_H_3_FX1 = 20540311,
        IDOL_H_3_FX2 = 20540312,
        IDOL_H_4_FX1 = 20540411,
        IDOL_H_4_FX2 = 20540412,
    }

    enum SkillFXID_DARKTEMPLAR
    {
        NONE = 0,
        DARKTEMPLAR_0_FX1 = 550011,
        DARKTEMPLAR_1_FX1 = 550111,
        DARKTEMPLAR_2_FX1 = 550211,
        DARKTEMPLAR_2_FX2 = 550212,
        DARKTEMPLAR_3_FX1 = 550311,
        DARKTEMPLAR_3_FX2 = 550312,
        DARKTEMPLAR_4_FX1 = 550411,
    }

    enum SkillFXID_DARKTEMPLAR_H
    {
        NONE = 0,
        DARKTEMPLAR_H_0_FX1 = 20550011,
        DARKTEMPLAR_H_1_FX1 = 20550111,
        DARKTEMPLAR_H_2_FX1 = 20550211,
        DARKTEMPLAR_H_2_FX2 = 20550212,
        DARKTEMPLAR_H_3_FX1 = 20550311,
        DARKTEMPLAR_H_3_FX2 = 20550312,
        DARKTEMPLAR_H_4_FX1 = 20550411,
    }

    enum SkillFXID_TAILOR
    {
        NONE = 0,
        TAILOR_0_FX1 = 560011,
        TAILOR_1_FX1 = 560111,
        TAILOR_2_FX1 = 560211,
        TAILOR_3_FX1 = 560311,
        TAILOR_4_FX1 = 560411,
    }

    enum SkillFXID_TAILOR_H
    {
        NONE = 0,
        TAILOR_H_0_FX1 = 20560011,
        TAILOR_H_1_FX1 = 20560111,
        TAILOR_H_2_FX1 = 20560211,
        TAILOR_H_3_FX1 = 20560311,
        TAILOR_H_4_FX1 = 20560411,
    }

    enum SkillFXID_SHAMAN
    {
        NONE = 0,
        SHAMAN_0_FX1 = 570011,
        SHAMAN_1_FX1 = 570111,
        SHAMAN_2_FX1 = 570211,
        SHAMAN_3_FX1 = 570311,
        SHAMAN_4_FX1 = 570411,
    }

    enum SkillFXID_SHAMAN_H
    {
        NONE = 0,
        SHAMAN_H_0_FX1 = 20570011,
        SHAMAN_H_1_FX1 = 20570111,
        SHAMAN_H_2_FX1 = 20570211,
        SHAMAN_H_3_FX1 = 20570311,
        SHAMAN_H_4_FX1 = 20570411,
    }

    enum SkillFXID_SLIME_HERO_01
    {
        NONE = 0,
        SLIME01_HERO_0_FX1 = 9010011,
        SLIME01_HERO_1_FX1 = 9010111,
        SLIME01_HERO_1_FX2 = 9010112,
    }

    enum SkillFXID_SLIME_HERO_02
    {
        NONE = 0,
        SLIME02_HERO_0_FX1 = 9020011,
        SLIME02_HERO_1_FX1 = 9020111,
        SLIME02_HERO_1_FX2 = 9020112,
    }

    enum SkillFXID_SLIME_HERO_03
    {
        NONE = 0,
        SLIME03_HERO_0_FX1 = 9030011,
        SLIME03_HERO_1_FX1 = 9030111,
        SLIME03_HERO_1_FX2 = 9030112,
    }

    enum SkillFXID_SLIME_HERO_04
    {
        NONE = 0,
        SLIME04_HERO_0_FX1 = 9040011,
        SLIME04_HERO_1_FX1 = 9040111,
        SLIME04_HERO_1_FX2 = 9040112,
    }

    enum SkillFXID_SLIME_HERO_05
    {
        NONE = 0,
        SLIME05_HERO_0_FX1 = 9050011,
        SLIME05_HERO_1_FX1 = 9050111,
        SLIME05_HERO_1_FX2 = 9050112,
    }

    enum SkillFXID_SLIME_HERO_06
    {
        NONE = 0,
        SLIME06_HERO_0_FX1 = 9060011,
        SLIME06_HERO_1_FX1 = 9060111,
        SLIME06_HERO_1_FX2 = 9060112,
    }

    enum SkillFXID_SLIME01
    {
        NONE = 0,
        SLIME01_0_FX1 = 10010011,
        SLIME01_1_FX1 = 10010111,
        SLIME01_1_FX2 = 10010112,
    }

    enum SkillFXID_SLIME02
    {
        NONE = 0,
        SLIME02_0_FX1 = 10020011,
        SLIME02_1_FX1 = 10020111,
        SLIME02_1_FX2 = 10020112,
    }

    enum SkillFXID_SLIME03
    {
        NONE = 0,
        SLIME03_0_FX1 = 10030011,
        SLIME03_1_FX1 = 10030111,
        SLIME03_1_FX2 = 10030112,
    }

    enum SkillFXID_SLIME04
    {
        NONE = 0,
        SLIME04_0_FX1 = 10040011,
        SLIME04_1_FX1 = 10040111,
        SLIME04_1_FX2 = 10040112,
    }

    enum SkillFXID_SLIME05
    {
        NONE = 0,
        SLIME05_0_FX1 = 10050011,
        SLIME05_1_FX1 = 10050111,
        SLIME05_1_FX2 = 10050112,
    }

    enum SkillFXID_SLIME06
    {
        NONE = 0,
        SLIME06_0_FX1 = 10060011,
        SLIME06_1_FX1 = 10060111,
        SLIME06_1_FX2 = 10060112,
    }

    enum SkillFXID_MUSHROOM01
    {
        NONE = 0,
        MUSHROM01_0_FX1 = 10070011,
        MUSHROM01_1_FX1 = 10070111,
    }

    enum SkillFXID_MUSHROOM02
    {
        NONE = 0,
        MUSHROM02_0_FX1 = 10080011,
        MUSHROM02_1_FX1 = 10080111,
    }

    enum SkillFXID_MUSHROOM03
    {
        NONE = 0,
        MUSHROM03_0_FX1 = 10090011,
        MUSHROM03_1_FX1 = 10090111,
    }

    enum SkillFXID_MUSHROOM04
    {
        NONE = 0,
        MUSHROM04_0_FX1 = 10100011,
        MUSHROM04_1_FX1 = 10100111,
    }

    enum SkillFXID_MUSHROOM05
    {
        NONE = 0,
        MUSHROM05_0_FX1 = 10110011,
        MUSHROM05_1_FX1 = 10110111,
    }

    enum SkillFXID_MUSHROOM06
    {
        NONE = 0,
        MUSHROM06_0_FX1 = 10120011,
        MUSHROM06_1_FX1 = 10120111,
    }

    enum SkillFXID_SUITCAT
    {
        NONE = 0,
        SUITCAT_0_FX1 = 30010011,
        SUITCAT_2_FX1 = 30010211,
        SUITCAT_3_FX1 = 30010311,
    }

    enum SkillFXID_JACKRABBIT
    {
        NONE = 0,
        JACKRABBIT_0_FX1 = 30020011,
        JACKRABBIT_2_FX1 = 30020211,
        JACKRABBIT_3_FX1 = 30020311,
    }

    enum SkillFXID_EVILPET
    {
        NONE = 0,
        EVILPET_0_FX1 = 30030011,
        EVILPET_1_FX1 = 30030111,
        EVILPET_2_FX1 = 30030211,
        EVILPET_3_FX1 = 30030311,
        EVILPET_4_FX1 = 30030411,
    }

    enum SkillFXID_CAKE
    {
        NONE = 0,
        CAKE_0_FX1 = 30040011,
        CAKE_2_FX1 = 30040211,
        CAKE_3_FX1 = 30040311,
    }

    enum SkillFXType
    {
        NONE = 0,
        ATTACK = 1,
        ATTACK_ADDMP = 2,
        ATTACK_BUFFEXIT = 3,
        ATTACK_BUFFEXIT_FORCE = 4,
        CUSTOM = 5,
        HEAL = 6,
        BUFF = 7,
        BUFF_BUFFEXIT = 8,
        BUFF_MULTICOUNT = 9,
        DEBUFF = 10,
        WARP = 11,
        TICK = 12,
        TICK_BUFF = 13,
        TICK_FOLLOW = 14,
        TICK_CURE = 15,
        CURE = 16,
        CURE_BUFFEXIT = 17,
        CURE_CC = 18,
        REMOVE_BUFF = 19,
        CHANGE_SKILLFX = 20,
        CHANGE_BUFF = 21,
        CHANGE_BUFF_3PREV1POST = 22,
        ADDMP = 23,
        ADDHP_RATIO = 24,
        SPAWN = 25,
        QUEEN_SIG_ADDHP_RATIO = 26,
    }

    enum SkillExtraID
    {
        NONE = 0,
        DEATHSCYTHE_SIGNATURE_LV0 = 4301,
        DEATHSCYTHE_SIGNATURE_LV10 = 4302,
        DEATHSCYTHE_SIGNATURE_LV20 = 4303,
        DEATHSCYTHE_SIGNATURE_LV30 = 4304,
        SWORDCAT_SIGNATURE_LV30 = 2501,
        GAMBLER_SIGNATURE_LV20 = 1301,
        COOK_SIGNATURE_LV0 = 2101,
        COOK_SIGNATURE_LV10 = 2102,
        COOK_SIGNATURE_LV20 = 2103,
        COOK_SIGNATURE_LV30 = 2104,
        IDOL_SIGNATURE_LV10 = 5401,
        IDOL_SIGNATURE_LV20 = 5402,
        IDOL_SIGNATURE_LV30 = 5403,
        AKIMBO_SIGNATURE_LV0 = 3801,
        AKIMBO_SIGNATURE_LV10 = 3802,
        AKIMBO_SIGNATURE_LV20 = 3803,
        DUALCROSS_SIGNATURE_LV0 = 3201,
        DUALCROSS_SIGNATURE_LV10 = 3202,
        DUALCROSS_SIGNATURE_LV20 = 3203,
        DUALCROSS_SIGNATURE_LV30 = 3204,
        MIKO_SIGNATURE_LV20 = 3601,
        MIKO_SIGNATURE_LV30 = 3602,
        MIDDLE_SIGANTURE_LV0 = 2701,
        MIDDLE_SIGANTURE_LV10 = 2702,
        MIDDLE_SIGANTURE_LV20 = 2703,
        MIDDLE_SIGANTURE_LV30 = 2704,
        FOXY_SIGNATURE_LV0 = 3401,
        FOXY_SIGNATURE_LV10 = 3402,
        FOXY_SIGNATURE_LV20 = 3403,
        FOXY_SIGNATURE_LV30 = 3404,
        MIDNIGHT_SIGNATURE_LV0 = 5201,
        MIDNIGHT_SIGNATURE_LV10 = 5202,
        MIDNIGHT_SIGNATURE_LV20 = 5203,
        MIDNIGHT_SIGNATURE_LV30 = 5204,
        NUN_SIGNATURE_LV0 = 1901,
        NUN_SIGNATURE_LV10 = 1902,
        NUN_SIGNATURE_LV20 = 1903,
        NUN_SIGNATURE_LV30 = 1904,
        HIGHELF_SIGNATURE_LV0 = 901,
        HIGHELF_SIGNATURE_LV10 = 902,
        HIGHELF_SIGNATURE_LV20 = 903,
        HIGHELF_SIGNATURE_LV30 = 904,
        PAJAMA_SIGNATURE_LV0 = 5101,
        PAJAMA_SIGNATURE_LV10 = 5102,
        PAJAMA_SIGNATURE_LV20 = 5103,
        PAJAMA_SIGNATURE_LV30 = 5104,
    }

    struct SkillFXID_Converter
    {
        static /*0x15110c4*/ System.Type GetEnumType(string enumName);
        static /*0x15111e4*/ System.Enum GetEnumByUnitID(int _nUnitID, Battle.SkillFXID _eSkillFXID);
        static /*0x1511404*/ Battle.SkillFXID IntToEnum(int _nSkillFXID);
        static /*0x1511408*/ string EnumToString(Battle.SkillFXID eType);
        static /*0x15114fc*/ Battle.SkillFXID StringToEnum(string sType);
    }
}

namespace OneStore
{
    class ALC_CallbackManager : UnityEngine.MonoBehaviour
    {
        static /*0x0*/ System.Action<string> CheckLicenseGrantedEvent;
        static /*0x8*/ System.Action CheckLicenseDeniedEvent;
        static /*0x10*/ System.Action<string> CheckLicenseErrorEvent;
        static /*0x18*/ System.Action<bool> VerifyLicenseEvent;
        static /*0x20*/ System.Collections.Generic.Dictionary<OneStore.ALC_CallbackManager.CallBackType, string> definedString;

        static /*0x1200298*/ ALC_CallbackManager();
        static /*0x11ff5f0*/ void add_CheckLicenseGrantedEvent(System.Action<string> value);
        static /*0x11ff6e4*/ void remove_CheckLicenseGrantedEvent(System.Action<string> value);
        static /*0x11ff7d8*/ void add_CheckLicenseDeniedEvent(System.Action value);
        static /*0x11ff8d0*/ void remove_CheckLicenseDeniedEvent(System.Action value);
        static /*0x11ff9c8*/ void add_CheckLicenseErrorEvent(System.Action<string> value);
        static /*0x11ffac0*/ void remove_CheckLicenseErrorEvent(System.Action<string> value);
        static /*0x11ffbb8*/ void add_VerifyLicenseEvent(System.Action<bool> value);
        static /*0x11ffcb0*/ void remove_VerifyLicenseEvent(System.Action<bool> value);
        static /*0x120009c*/ string FindStringFromCallBackType(string data, OneStore.ALC_CallbackManager.CallBackType type);
        /*0x1200290*/ ALC_CallbackManager();
        /*0x11ffda8*/ void CheckLicenseListener(string callback);
        /*0x12001d4*/ void VerifyListener(string callback);

        enum CallBackType
        {
            Granted = 0,
            Denied = 1,
            ErrorResult = 2,
        }
    }

    class ALC_Manager
    {
        static /*0x0*/ UnityEngine.AndroidJavaObject requestAdapter;
        static /*0x8*/ UnityEngine.AndroidJavaClass jClass;

        static /*0x12003b4*/ ALC_Manager();
        static /*0x1200524*/ void CheckLicense(string base64encodedPublicKey, string policy);
        static /*0x1200650*/ void VerifyLicense(string base64encodedPublicKey, string signedData, string signature);
        static /*0x12007b0*/ void Destroy();
        /*0x12008dc*/ ALC_Manager();
        /*0x120051c*/ void Finalize();
    }

    class ALC_Response
    {
        /*0x10*/ string license;
        /*0x18*/ string signature;

        /*0x12009d0*/ ALC_Response();
        /*0x12008e4*/ string ToString();
    }

    class ErrorResult
    {
        /*0x10*/ int code;
        /*0x18*/ string description;

        /*0x114d8c0*/ ErrorResult();
        /*0x114d7a8*/ string ToString();
    }

    class ALC_ResultListener : UnityEngine.MonoBehaviour
    {
        static /*0x0*/ System.Action<string, string> PrintLog;

        static /*0x12009d8*/ void add_PrintLog(System.Action<string, string> value);
        static /*0x1200a94*/ void remove_PrintLog(System.Action<string, string> value);
        /*0x1201460*/ ALC_ResultListener();
        /*0x1200b50*/ void Awake();
        /*0x1200d54*/ void OnDestroy();
        /*0x1200f58*/ void CheckLicenseGrantedEvent(string data);
        /*0x1201200*/ void CheckLicenseDeniedEvent();
        /*0x120129c*/ void CheckLicenseErrorEvent(string result);
        /*0x1201390*/ void VerifyLicenseEvent(bool result);
        /*0x120145c*/ void ALC_ResultListener_PrintLog(string arg1, string arg2);

        class ErrorType
        {
            static int SERVICE_UNAVAILABLE = 2000;
            static int ERROR_DATA_PARSING = 2001;
            static int SERVICE_TIMEOUT = 2100;
            static int USER_LOGIN_CANCELED = 2101;
            static int ONESTORE_SERVICE_INSTALLING = 2102;
            static int INSTALL_USER_CANCELED = 2103;
            static int NOT_FOREGROUND = 2104;
            static int RESULT_SERVICE_UNAVAILABLE = 2;
            static int RESULT_ALC_UNAVAILABLE = 3;
            static int RESULT_DEVELOPER_ERROR = 5;
            static int RESULT_ERROR = 6;
            static int UNKNOWN_ERROR = -1;
        }
    }
}

namespace Gaa
{
    class GaaIapCallManager
    {
        static /*0x0*/ string TAG;
        static /*0x8*/ UnityEngine.AndroidJavaObject iapRequestAdapter;
        static /*0x10*/ UnityEngine.AndroidJavaClass jc;
        static /*0x18*/ bool isServiceCreated;

        static /*0x10b25e8*/ GaaIapCallManager();
        static /*0x10b2428*/ void ServiceAvailableEvent(bool value);
        static /*0x10b2494*/ bool IsServiceAvailable();
        static /*0x10b24f8*/ void CheckServiceAvailable();
        static /*0x10b2a40*/ void StartConnection(string publicKey);
        static /*0x10b2b40*/ void QueryPurchases(string type);
        static /*0x10b2c44*/ void QueryProductDetails(string[] products, string productType);
        static /*0x10b2ef4*/ void LaunchPurchaseFlow(Gaa.PurchaseFlowParams param);
        static /*0x10b300c*/ void Consume(Gaa.PurchaseData purchaseData, string devPayload);
        static /*0x10b3150*/ void Acknowledge(Gaa.PurchaseData purchaseData, string devPayload);
        static /*0x10b3294*/ void ManageRecurringProduct(Gaa.PurchaseData purchaseData, string recurringAction);
        static /*0x10b33d8*/ void LaunchUpdateOrInstallFlow();
        static /*0x10b3504*/ void LaunchLoginFlow();
        static /*0x10b3630*/ void GetStoreInfo();
        static /*0x10b375c*/ void Destroy();
        /*0x10b3898*/ GaaIapCallManager();
        /*0x10b28ac*/ void Finalize();

        class <>c
        {
            static /*0x0*/ Gaa.GaaIapCallManager.<> <>9;
            static /*0x8*/ System.Converter<string, string> <>9__11_0;

            static /*0xf64710*/ <>c();
            /*0xf64770*/ <>c();
            /*0xf64778*/ string <QueryProductDetails>b__11_0(string i);
        }
    }

    class GaaIapResultListener : UnityEngine.MonoBehaviour
    {
        static /*0x0*/ string TAG;
        static /*0x8*/ System.Action<bool> OnLoadingVisibility;
        static /*0x10*/ System.Action<Gaa.IapResult> PurchaseClientStateResponse;
        static /*0x18*/ System.Action<System.Collections.Generic.List<Gaa.ProductDetail>> OnProductDetailsResponse;
        static /*0x20*/ System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> OnPurchaseUpdatedResponse;
        static /*0x28*/ System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> OnQueryPurchasesResponse;
        static /*0x30*/ System.Action<Gaa.PurchaseData> OnConsumeSuccessResponse;
        static /*0x38*/ System.Action<Gaa.PurchaseData> OnAcknowledgeSuccessResponse;
        static /*0x40*/ System.Action<Gaa.PurchaseData, string> OnManageRecurringResponse;
        static /*0x48*/ System.Action<string, string> SendLog;
        /*0x18*/ System.Collections.Generic.List<Gaa.PurchaseData> purchases;
        /*0x20*/ System.Collections.Generic.List<string> signatures;
        /*0x28*/ System.Collections.Generic.List<Gaa.ProductDetail> products;

        static /*0x10b97cc*/ GaaIapResultListener();
        static /*0x10b618c*/ void add_OnLoadingVisibility(System.Action<bool> value);
        static /*0x10b6284*/ void remove_OnLoadingVisibility(System.Action<bool> value);
        static /*0x10b637c*/ void add_PurchaseClientStateResponse(System.Action<Gaa.IapResult> value);
        static /*0x10b6474*/ void remove_PurchaseClientStateResponse(System.Action<Gaa.IapResult> value);
        static /*0x10b656c*/ void add_OnProductDetailsResponse(System.Action<System.Collections.Generic.List<Gaa.ProductDetail>> value);
        static /*0x10b6664*/ void remove_OnProductDetailsResponse(System.Action<System.Collections.Generic.List<Gaa.ProductDetail>> value);
        static /*0x10b675c*/ void add_OnPurchaseUpdatedResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b6854*/ void remove_OnPurchaseUpdatedResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b694c*/ void add_OnQueryPurchasesResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b6a44*/ void remove_OnQueryPurchasesResponse(System.Action<System.Collections.Generic.List<Gaa.PurchaseData>, System.Collections.Generic.List<string>> value);
        static /*0x10b6b3c*/ void add_OnConsumeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6c34*/ void remove_OnConsumeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6d2c*/ void add_OnAcknowledgeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6e24*/ void remove_OnAcknowledgeSuccessResponse(System.Action<Gaa.PurchaseData> value);
        static /*0x10b6f1c*/ void add_OnManageRecurringResponse(System.Action<Gaa.PurchaseData, string> value);
        static /*0x10b7014*/ void remove_OnManageRecurringResponse(System.Action<Gaa.PurchaseData, string> value);
        static /*0x10b710c*/ void add_SendLog(System.Action<string, string> value);
        static /*0x10b7204*/ void remove_SendLog(System.Action<string, string> value);
        static /*0x10b80d4*/ void HandleError(string tag, Gaa.IapResult iapResult);
        /*0x10b96d4*/ GaaIapResultListener();
        /*0x10b72fc*/ void Awake();
        /*0x10b77a8*/ void OnDestroy();
        /*0x10b7be4*/ void PurchaseClientStateEvent(Gaa.IapResult iapResult);
        /*0x10b7cc4*/ void PurchaseUpdatedSuccessEvent(Gaa.PurchaseData purchaseData, string signature, int count, int totalCount);
        /*0x10b8010*/ void PurchaseUpdatedErrorEvent(Gaa.IapResult iapResult);
        /*0x10b83d8*/ void QueryPurchasesSuccessEvent(Gaa.PurchaseData purchaseData, string signature, int count, int totalCount);
        /*0x10b8724*/ void QueryPurchasesErrorEvent(Gaa.IapResult iapResult);
        /*0x10b87e8*/ void ProductDetailsSuccessEvent(Gaa.ProductDetail productDetail, int count, int totalCount);
        /*0x10b8bd0*/ void ProductDetailsErrorEvent(Gaa.IapResult iapResult);
        /*0x10b8c94*/ void ConsumeSuccessEvent(Gaa.PurchaseData purchaseData);
        /*0x10b8e30*/ void ConsumeErrorEvent(Gaa.IapResult iapResult);
        /*0x10b8ef4*/ void AcknowledgeSuccessEvent(Gaa.PurchaseData purchaseData);
        /*0x10b9090*/ void AcknowledgeErrorEvent(Gaa.IapResult iapResult);
        /*0x10b9154*/ void RecurringSuccessEvent(Gaa.PurchaseData purchaseData, string action);
        /*0x10b9304*/ void RecurringErrorEvent(Gaa.IapResult iapResult);
        /*0x10b93c8*/ void StoreInfoEvent(string result);
        /*0x10b948c*/ void LoginFlowEvent(Gaa.IapResult iapResult);
        /*0x10b95b0*/ void UpdateOrInstallFlowEvent(Gaa.IapResult iapResult);

        class <>c
        {
            static /*0x0*/ Gaa.GaaIapResultListener.<> <>9;
            static /*0x8*/ System.Comparison<Gaa.ProductDetail> <>9__38_0;

            static /*0xf64798*/ <>c();
            /*0xf647f8*/ <>c();
            /*0xf64800*/ int <ProductDetailsSuccessEvent>b__38_0(Gaa.ProductDetail a, Gaa.ProductDetail b);
        }
    }

    class PurchaseResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;
        /*0x18*/ Gaa.PurchaseData purchaseData;
        /*0x20*/ string signature;
        /*0x28*/ int count;
        /*0x2c*/ int totalCount;

        /*0x101c634*/ PurchaseResponse();
        /*0x101c434*/ string ToString();
    }

    class Signature
    {
        /*0x10*/ string signature;

        /*0xe2aab8*/ Signature();
        /*0xe2aa3c*/ string ToString();
    }

    class ProductDetailResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;
        /*0x18*/ Gaa.ProductDetail productDetail;
        /*0x20*/ int count;
        /*0x24*/ int totalCount;

        /*0x100e6e8*/ ProductDetailResponse();
        /*0x100e520*/ string ToString();
    }

    class RecurringResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;
        /*0x18*/ Gaa.PurchaseData purchaseData;
        /*0x20*/ string signature;
        /*0x28*/ string action;

        /*0x11c3964*/ RecurringResponse();
        /*0x11c37bc*/ string ToString();
    }

    class ProductDetail
    {
        /*0x10*/ string productId;
        /*0x18*/ string type;
        /*0x20*/ string price;
        /*0x28*/ string priceAmountMicros;
        /*0x30*/ string priceCurrencyCode;
        /*0x38*/ string title;

        /*0x100e518*/ ProductDetail();
        /*0x100e340*/ string ToString();
    }

    class PurchaseData
    {
        /*0x10*/ string orderId;
        /*0x18*/ string packageName;
        /*0x20*/ string productId;
        /*0x28*/ long purchaseTime;
        /*0x30*/ string purchaseId;
        /*0x38*/ string purchaseToken;
        /*0x40*/ string developerPayload;
        /*0x48*/ int purchaseState;
        /*0x4c*/ int recurringState;
        /*0x50*/ int acknowledgeState;

        /*0x101c3e4*/ PurchaseData();
        /*0x101c0c4*/ bool IsAcknowledged();
        /*0x101c0d4*/ string ToString();
    }

    class IapResultResponse
    {
        /*0x10*/ Gaa.IapResult iapResult;

        /*0xd20a50*/ IapResultResponse();
        /*0xd20a30*/ string ToString();
    }

    class IapResult
    {
        /*0x10*/ int code;
        /*0x18*/ string message;

        /*0xd20a28*/ IapResult();
        /*0xd20828*/ bool IsSuccess();
        /*0xd20838*/ string ToString();
    }

    class PurchaseFlowParams
    {
        /*0x10*/ string productId;
        /*0x18*/ string productType;
        /*0x20*/ string productName;
        /*0x28*/ string devPayload;
        /*0x30*/ string gameUserId;
        /*0x38*/ bool promotionApplicable;

        /*0x101c3ec*/ PurchaseFlowParams();
    }

    class ResponseCode
    {
        static int RESULT_OK = 0;
        static int RESULT_USER_CANCELED = 1;
        static int RESULT_SERVICE_UNAVAILABLE = 2;
        static int RESULT_BILLING_UNAVAILABLE = 3;
        static int RESULT_ITEM_UNAVAILABLE = 4;
        static int RESULT_DEVELOPER_ERROR = 5;
        static int RESULT_ERROR = 6;
        static int RESULT_ITEM_ALREADY_OWNED = 7;
        static int RESULT_ITEM_NOT_OWNED = 8;
        static int RESULT_FAIL = 9;
        static int RESULT_NEED_LOGIN = 10;
        static int RESULT_NEED_UPDATE = 11;
        static int RESULT_SECURITY_ERROR = 12;
        static int RESULT_BLOCKED_APP = 13;
        static int RESULT_NOT_SUPPORT_SANDBOX = 14;
        static int RESULT_EMERGENCY_ERROR = 99999;
        static int ERROR_DATA_PARSING = 1001;
        static int ERROR_SIGNATURE_VERIFICATION = 1002;
        static int ERROR_ILLEGAL_ARGUMENT = 1003;
        static int ERROR_UNDEFINED_CODE = 1004;
        static int ERROR_SIGNATURE_NOT_VALIDATION = 1005;
        static int ERROR_UPDATE_OR_INSTALL = 1006;
        static int ERROR_SERVICE_DISCONNECTED = 1007;
        static int ERROR_FEATURE_NOT_SUPPORTED = 1008;
        static int ERROR_SERVICE_TIMEOUT = 1009;

        /*0xf29bf0*/ ResponseCode();
    }

    class RecurringAction
    {
        static string REACTIVATE = "reactivate";
        static string CANCEL = "cancel";

        /*0x11c37b4*/ RecurringAction();
    }

    class RecurringState
    {
        static int NON_AUTO_PRODUCT = -1;
        static int RECURRING = 0;
        static int CANCEL = 1;

        /*0x11c396c*/ RecurringState();
    }

    class AcknowledgeState
    {
        static int UNSPECIFIED_STATE = -1;
        static int NOT_ACKNOWLEDGED = 0;
        static int ACKNOWLEDGED = 1;

        /*0x120e008*/ AcknowledgeState();
    }

    class ProductType
    {
        static string INAPP = "inapp";
        static string AUTO = "auto";
        static string ALL = "all";

        /*0x100e6f0*/ ProductType();
    }
}

namespace PUBSDK
{
    class DefinePubSDK
    {
        static string Google = "google.com";
        static string Facebook = "facebook.com";
        static string Apple = "apple.com";

        /*0x11e7e04*/ DefinePubSDK();

        enum PubLoginType
        {
            None = 0,
            Guest = 1,
            Google = 2,
            Facebook = 3,
            Apple = 4,
            End = 5,
        }

        enum PubProcessError
        {
            NONE = 0,
            ERROR_SDKINITIALIZE = 1,
            ERROR_PLATFORMINITIALIZE = 2,
            ERROR_FIREBASEAPP = 3,
            ERROR_AUTH = 4,
            ERROR_LOGIN = 5,
            ERROR_NOTLOGIN = 6,
            ERROR_LOGOUT = 7,
            ERROR_ALREADYLOGIN = 8,
            ERROR_GETTOKEN = 9,
            ERROR_ALREADYLINKPLATFORM = 10,
            ERROR_ALREADYUNLINKPLATFORM = 11,
            ERROR_LINKPLATFORM = 12,
            ERROR_UNLINKPLATFORM = 13,
            ERORR_PUSHTOKEN = 14,
            ERROR_INAPPPURCHASE = 15,
        }
    }

    class PubSDKProcesser : UnityEngine.MonoBehaviour, UnityEngine.Purchasing.IStoreListener
    {
        static /*0x0*/ string FbPushToken;
        static /*0x8*/ UnityEngine.Purchasing.IStoreController storeController;
        static /*0x10*/ UnityEngine.Purchasing.IExtensionProvider extensionProvider;
        static /*0x18*/ PUBSDK.PubSDKProcesser instance;
        static /*0x20*/ bool isInitialized;
        /*0x18*/ System.Action OnFirebaseInitSuccessEvent;
        /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> OnFirebaseInitFailEvent;
        /*0x28*/ System.Action OnRequestFirebaseAuthEvent;
        /*0x30*/ bool IsInitializedPush;
        /*0x38*/ System.Action<UnityEngine.Purchasing.Product> OnReceiptEvent;
        /*0x40*/ System.Action OnIAPInitializeEvent;
        /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> OnPurchaseFailEvent;
        /*0x50*/ System.Collections.Generic.List<UnityEngine.Purchasing.Product> liProductData;
        /*0x58*/ System.Collections.Generic.List<PUBSDK.PubReceiptRecord> liReceiptRecord;
        /*0x60*/ UnityEngine.SignInWithApple.SignInWithApple apple;
        /*0x68*/ Google.GoogleSignInUser googleUser;
        /*0x70*/ PUBSDK.PubSDKSettings settings;

        static /*0x101bd08*/ PubSDKProcesser();
        static /*0x1012614*/ PUBSDK.PubSDKProcesser get_Instance();
        static /*0x101aa18*/ bool get_IsInitialized();
        static /*0x101aa7c*/ void set_IsInitialized(bool value);
        static /*0x1012b38*/ void Initialize(System.Action onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101bd00*/ PubSDKProcesser();
        /*0x1012f8c*/ void add_OnRequestFirebaseAuthEvent(System.Action value);
        /*0x1013530*/ void remove_OnRequestFirebaseAuthEvent(System.Action value);
        /*0x10189ac*/ Firebase.FirebaseApp get_FbApp();
        /*0x1018a08*/ Firebase.Auth.FirebaseAuth get_FbAuth();
        /*0x1018a88*/ Firebase.Auth.FirebaseUser get_FbUser();
        /*0x1018ab8*/ void CallbackCheckAndFixDependencies(System.Threading.Tasks.Task<Firebase.DependencyStatus> task);
        /*0x1010e70*/ void EventLog(string key, string value);
        /*0x1018ee8*/ bool IsLoggined();
        /*0x1018f24*/ bool IsGuest();
        /*0x1018f58*/ void RequestAnonymous(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101902c*/ void RequestPlatformLogin(Firebase.Auth.Credential credential, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101910c*/ void RequestLinkPlatform(Firebase.Auth.Credential credential, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail, System.Action onException);
        /*0x10143ac*/ void GetAuthToken(bool bRefresh, System.Action<string> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x10191f4*/ void AuthSignOut(System.Action onSuccess);
        /*0x101923c*/ void OnMessageReceived(object sender, Firebase.Messaging.MessageReceivedEventArgs e);
        /*0x1019240*/ void OnTokenReceived(object sender, Firebase.Messaging.TokenReceivedEventArgs e);
        /*0x1012db8*/ void GetPushToken(System.Action<string> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onError);
        /*0x10192c8*/ string GetPushToken();
        /*0x101932c*/ System.Threading.Tasks.Task SubscribeTopic(bool subscribe, string topic);
        /*0x10179e8*/ void SetCrashlyticsLog(string log);
        /*0x10179a4*/ void SetCrashlyticsKey(string key, string value);
        /*0x1019448*/ System.Threading.Tasks.Task<bool> TaskException(System.Threading.Tasks.Task task, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail, PUBSDK.DefinePubSDK.PubProcessError error);
        /*0x1019588*/ bool IsLinkPlatform(string provider);
        /*0x1019698*/ bool IsLinkPlatformVerifyEMail(string provider, string eMail);
        /*0x1017bd0*/ void GetLinkEmail(System.Collections.Generic.Dictionary<int, string> mail);
        /*0x1017a28*/ System.Collections.Generic.List<PUBSDK.DefinePubSDK.PubLoginType> GetLinkPlatformList();
        /*0x1019834*/ PUBSDK.DefinePubSDK.PubLoginType GetReturnProviderLoginType(string provider);
        /*0x1012990*/ bool get_IsPurchaseInitialized();
        /*0x1016aac*/ void InitializePurchasing(System.Collections.Generic.List<UnityEngine.Purchasing.ProductDefinition> productlist, System.Action onInitialized);
        /*0x10198fc*/ void OnInitialized(UnityEngine.Purchasing.IStoreController controller, UnityEngine.Purchasing.IExtensionProvider extensions);
        /*0x1019a48*/ void OnInitializeFailed(UnityEngine.Purchasing.InitializationFailureReason error);
        /*0x1019ab4*/ void OnPurchaseFailed(UnityEngine.Purchasing.Product product, UnityEngine.Purchasing.PurchaseFailureReason failureReason);
        /*0x1019b14*/ UnityEngine.Purchasing.PurchaseProcessingResult ProcessPurchase(UnityEngine.Purchasing.PurchaseEventArgs purchaseEvent);
        /*0x1019dd0*/ string GetProductID(UnityEngine.Purchasing.Product _product);
        /*0x10175a4*/ void RestorePurchase(System.Action<PUBSDK.PubReceiptRecord> onRestore);
        /*0x1019f04*/ System.Collections.IEnumerator CoRestorePurchase(System.Action<PUBSDK.PubReceiptRecord> onRestore);
        /*0x1016e98*/ void BuyProduct(string productId, string customKey, System.Action<UnityEngine.Purchasing.Product> callback, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101a024*/ System.Collections.Generic.List<UnityEngine.Purchasing.Product> GetProductData();
        /*0x1019f7c*/ void AddReceipt(PUBSDK.PubReceiptRecord record);
        /*0x101a02c*/ void SetReceiptList(System.Collections.Generic.List<PUBSDK.PubReceiptRecord> receipt);
        /*0x1019d64*/ void ClearReceiptList();
        /*0x1019cb0*/ System.Collections.Generic.List<PUBSDK.PubReceiptRecord> GetReceiptList();
        /*0x101a0c0*/ void InitOneStore();
        /*0x101a0c4*/ bool get_IsInitializedApple();
        /*0x101a130*/ void OnAppleLoginCallback(bool isLogin, UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs cb, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101a50c*/ string GenerateNonce(string _rawNonce);
        /*0x101a670*/ void OnCompleteInitialize();
        /*0x101a73c*/ void OnHideUnity(bool bShow);
        /*0x101a6e0*/ bool IsFacebookInitialized();
        /*0x101a758*/ bool IsFacebookLoggined();
        /*0x101a7b4*/ string get_WebClientID();
        /*0x101a7d0*/ Google.GoogleSignIn get_GoogleSign();
        /*0x101a82c*/ void GoogleSignOut();
        /*0x101a870*/ bool IsGoogleLoggined();
        /*0x101a880*/ void Awake();
        /*0x101aae8*/ System.Collections.IEnumerator InitSDK(System.Action onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101ab68*/ void InitPlatform();
        /*0x1013d38*/ bool AutoLogin(System.Action<Firebase.Auth.FirebaseUser> onSuccess);
        /*0x1013dc8*/ void Login(PUBSDK.DefinePubSDK.PubLoginType eLoginType, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x1015cac*/ void LinkPlatform(PUBSDK.DefinePubSDK.PubLoginType eLoginType, System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101ad88*/ void Logout(PUBSDK.DefinePubSDK.PubLoginType eLoginType, System.Action onFinish);
        /*0x1013abc*/ void Logout(System.Action onFinish);
        /*0x101aff4*/ PUBSDK.PubSDKSettings Settings();
        /*0x101affc*/ void InitFirebase(System.Action onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101ab8c*/ void InitGuestSign();
        /*0x101ab90*/ void InitGoogleSign();
        /*0x101ac4c*/ void InitFacebookSign();
        /*0x101ad84*/ void InitAppleSign();
        /*0x101b0fc*/ void LoginGuest(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b1b4*/ void LoginGoogle(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b288*/ void LoginFacebook(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b554*/ void LoginApple(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b694*/ void LogoutGuest(System.Action onFinish);
        /*0x101b698*/ void LogoutGoogle(System.Action onFinish);
        /*0x101b6d0*/ void LogoutFacebook(System.Action onFinish);
        /*0x101b770*/ void LogoutApple(System.Action onFinish);
        /*0x101b784*/ void LinkGoogle(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101b858*/ void LinkFacebook(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101bba8*/ void LinkApple(System.Action<Firebase.Auth.FirebaseUser> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
        /*0x101bd80*/ void <CallbackCheckAndFixDependencies>b__13_0(System.Threading.Tasks.Task a);
        /*0x101bd94*/ void <CallbackCheckAndFixDependencies>b__13_1(System.Threading.Tasks.Task a);
        /*0x101bda8*/ PUBSDK.DefinePubSDK.PubLoginType <GetLinkPlatformList>b__33_0(Firebase.Auth.IUserInfo x);
        /*0x101be5c*/ bool <CoRestorePurchase>b__51_0();
        /*0x101be60*/ void <OnAppleLoginCallback>b__62_2();

        class <>c__DisplayClass17_0
        {
            /*0x10*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e194*/ <>c__DisplayClass17_0();
            /*0x108e19c*/ void <RequestAnonymous>b__0(System.Threading.Tasks.Task<Firebase.Auth.FirebaseUser> task);
        }

        struct <RequestAnonymous>d__17 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x40*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x48*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a2b0*/ void MoveNext();
            /*0xa8a2b8*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass18_0
        {
            /*0x10*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e27c*/ <>c__DisplayClass18_0();
            /*0x108e284*/ void <RequestPlatformLogin>b__0(System.Threading.Tasks.Task<Firebase.Auth.FirebaseUser> task);
        }

        struct <RequestPlatformLogin>d__18 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x40*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x48*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x50*/ Firebase.Auth.Credential credential;
            /*0x58*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a2d8*/ void MoveNext();
            /*0xa8a2e0*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass19_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ Firebase.Auth.Credential credential;
            /*0x20*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x28*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x30*/ System.Func<Firebase.Auth.IUserInfo, bool> <>9__1;

            /*0x108e364*/ <>c__DisplayClass19_0();
            /*0x108e36c*/ void <RequestLinkPlatform>b__0(System.Threading.Tasks.Task<Firebase.Auth.FirebaseUser> task);
            /*0x108e5a4*/ bool <RequestLinkPlatform>b__1(Firebase.Auth.IUserInfo x);
        }

        struct <RequestLinkPlatform>d__19 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x40*/ Firebase.Auth.Credential credential;
            /*0x48*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x50*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x58*/ System.Action onException;
            /*0x60*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a2c4*/ void MoveNext();
            /*0xa8a2cc*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass20_0
        {
            /*0x10*/ System.Action<string> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e684*/ <>c__DisplayClass20_0();
            /*0x108e68c*/ void <GetAuthToken>b__0(System.Threading.Tasks.Task<string> task);
        }

        class <>c__DisplayClass24_0
        {
            /*0x10*/ System.Action<string> onSuccess;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onError;

            /*0x108e76c*/ <>c__DisplayClass24_0();
            /*0x108e774*/ void <GetPushToken>b__0(System.Threading.Tasks.Task<string> task);
        }

        struct <SubscribeTopic>d__26 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder;
            /*0x30*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x38*/ string topic;
            /*0x40*/ bool subscribe;
            /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

            /*0xa8a2ec*/ void MoveNext();
            /*0xa8a2f4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        struct <TaskException>d__29 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncTaskMethodBuilder<bool> <>t__builder;
            /*0x30*/ System.Threading.Tasks.Task task;
            /*0x38*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x40*/ PUBSDK.DefinePubSDK.PubProcessError error;
            /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

            /*0xa8a300*/ void MoveNext();
            /*0xa8a308*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass30_0
        {
            /*0x10*/ string provider;

            /*0x108e854*/ <>c__DisplayClass30_0();
            /*0x108e85c*/ bool <IsLinkPlatform>b__0(Firebase.Auth.IUserInfo x);
        }

        class <>c__DisplayClass31_0
        {
            /*0x10*/ string provider;

            /*0x108e920*/ <>c__DisplayClass31_0();
            /*0x108e928*/ bool <IsLinkPlatformVerifyEMail>b__0(Firebase.Auth.IUserInfo x);
        }

        class <>c__DisplayClass44_0
        {
            /*0x10*/ UnityEngine.Purchasing.ConfigurationBuilder builder;

            /*0x108e9ec*/ <>c__DisplayClass44_0();
            /*0x108e9f4*/ void <InitializePurchasing>b__0(UnityEngine.Purchasing.ProductDefinition x);
        }

        class <>c__DisplayClass48_0
        {
            /*0x10*/ UnityEngine.Purchasing.PurchaseEventArgs purchaseEvent;

            /*0x108ea20*/ <>c__DisplayClass48_0();
            /*0x108ea28*/ bool <ProcessPurchase>b__0(PUBSDK.PubReceiptRecord x);
        }

        class <CoRestorePurchase>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x28*/ System.Action<PUBSDK.PubReceiptRecord> onRestore;

            /*0x108ed90*/ <CoRestorePurchase>d__51(int <>1__state);
            /*0x108edbc*/ void System.IDisposable.Dispose();
            /*0x108edc0*/ bool MoveNext();
            /*0x108f088*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x108f090*/ void System.Collections.IEnumerator.Reset();
            /*0x108f0d0*/ object System.Collections.IEnumerator.get_Current();
        }

        class <>c__DisplayClass62_0
        {
            /*0x10*/ string nonce;

            /*0x108ea64*/ <>c__DisplayClass62_0();
            /*0x108ea6c*/ void <OnAppleLoginCallback>b__1(char x);
        }

        class <>c
        {
            static /*0x0*/ PUBSDK.PubSDKProcesser.<> <>9;
            static /*0x8*/ System.Func<char, System.Guid> <>9__62_0;
            static /*0x10*/ System.Action <>9__85_0;
            static /*0x18*/ System.Action<bool> <>9__85_3;

            static /*0x108d7e0*/ <>c();
            /*0x108d840*/ <>c();
            /*0x108d848*/ System.Guid <OnAppleLoginCallback>b__62_0(char Matrix4x4);
            /*0x108d8a4*/ void <InitSDK>b__85_0();
            /*0x108d944*/ void <InitSDK>b__85_3(bool _result);
        }

        class <>c__DisplayClass85_0
        {
            /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__1;

            /*0x108eab8*/ <>c__DisplayClass85_0();
            /*0x108eac0*/ void <InitSDK>b__1(PUBSDK.DefinePubSDK.PubProcessError error);
        }

        class <>c__DisplayClass85_1
        {
            /*0x10*/ float fWaitTime;
            /*0x14*/ float fEndTime;

            /*0x108eba0*/ <>c__DisplayClass85_1();
            /*0x108eba8*/ bool <InitSDK>b__2();
        }

        class <InitSDK>d__85 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x28*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x30*/ PUBSDK.PubSDKProcesser.<> <>8__1;
            /*0x38*/ PUBSDK.PubSDKProcesser.<> <>8__2;
            /*0x40*/ System.Action onSuccess;

            /*0x108f0d8*/ <InitSDK>d__85(int <>1__state);
            /*0x108f104*/ void System.IDisposable.Dispose();
            /*0x108f108*/ bool MoveNext();
            /*0x108f76c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x108f774*/ void System.Collections.IEnumerator.Reset();
            /*0x108f7b4*/ object System.Collections.IEnumerator.get_Current();
        }

        class <>c__DisplayClass99_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108ec84*/ <>c__DisplayClass99_0();
            /*0x108ec8c*/ void <LoginGoogle>b__0(System.Threading.Tasks.Task<Google.GoogleSignInUser> task);
        }

        struct <LoginGoogle>d__99 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x40*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a29c*/ void MoveNext();
            /*0xa8a2a4*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass100_0
        {
            /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x18*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x20*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;

            /*0x108d9a0*/ <>c__DisplayClass100_0();
            /*0x108d9a8*/ void <LoginFacebook>b__0(Facebook.Unity.ILoginResult cb);
        }

        class <>c__DisplayClass101_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108dbec*/ <>c__DisplayClass101_0();
            /*0x108dbf4*/ void <LoginApple>b__0(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
        }

        class <>c__DisplayClass106_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x28*/ System.Action <>9__2;

            /*0x108dc50*/ <>c__DisplayClass106_0();
            /*0x108dc58*/ void <LinkGoogle>b__1(System.Threading.Tasks.Task<Google.GoogleSignInUser> task);
            /*0x108de00*/ void <LinkGoogle>b__2();
            /*0x108de1c*/ void <LinkGoogle>b__0();
        }

        struct <LinkGoogle>d__106 : System.Runtime.CompilerServices.IAsyncStateMachine
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
            /*0x38*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x40*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x48*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter<bool> <>u__1;

            /*0xa8a288*/ void MoveNext();
            /*0xa8a290*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
        }

        class <>c__DisplayClass107_0
        {
            /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;
            /*0x18*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x20*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x28*/ System.Action <>9__2;

            /*0x108de38*/ <>c__DisplayClass107_0();
            /*0x108de40*/ void <LinkFacebook>b__0(Facebook.Unity.ILoginResult cb);
            /*0x108e0f0*/ void <LinkFacebook>b__2();
            /*0x108e110*/ void <LinkFacebook>b__1();
        }

        class <>c__DisplayClass108_0
        {
            /*0x10*/ PUBSDK.PubSDKProcesser <>4__this;
            /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> onSuccess;
            /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

            /*0x108e130*/ <>c__DisplayClass108_0();
            /*0x108e138*/ void <LinkApple>b__0(UnityEngine.SignInWithApple.SignInWithApple.CallbackArgs args);
        }
    }

    class PubReceiptRecord
    {
        /*0x10*/ UnityEngine.Purchasing.Product product;
        /*0x18*/ string productid;
        /*0x20*/ string customkey;

        /*0x1018974*/ PubReceiptRecord(string productid, string customkey);
    }

    enum ALCPolicy
    {
        Flexible = 0,
        Strict = 1,
    }

    class PubSDKUtils
    {
        static /*0x101be6c*/ void PubLog(object obj);
        static /*0x101bf34*/ void PubWLog(object obj);
        static /*0x101bffc*/ void PubELog(object obj);
    }

    class PubSDKSettings : UnityEngine.ScriptableObject
    {
        /*0x18*/ string googleClientID;
        /*0x20*/ PUBSDK.ALCPolicy oneStorePolicy;
        /*0x28*/ string oneStorePublicKey;

        /*0x101be64*/ PubSDKSettings();
    }
}

namespace Google
{
    interface FutureAPIImpl<T>
    {
        bool get_Pending();
        Google.GoogleSignInStatusCode get_Status();
        T get_Result();
    }

    class Future<T>
    {
        /*0x0*/ Google.FutureAPIImpl<T> apiImpl;

        Future(Google.FutureAPIImpl<T> impl);
        bool get_Pending();
        Google.GoogleSignInStatusCode get_Status();
        T get_Result();
        System.Collections.IEnumerator WaitForResult(System.Threading.Tasks.TaskCompletionSource<T> tcs);
        bool <WaitForResult>b__8_0();

        class <WaitForResult>d__8<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x0*/ int <>1__state;
            /*0x0*/ object <>2__current;
            /*0x0*/ Google.Future<T> <>4__this;
            /*0x0*/ System.Threading.Tasks.TaskCompletionSource<T> tcs;

            <WaitForResult>d__8(int <>1__state);
            void System.IDisposable.Dispose();
            bool MoveNext();
            object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            void System.Collections.IEnumerator.Reset();
            object System.Collections.IEnumerator.get_Current();
        }
    }

    class GoogleSignIn
    {
        static /*0x0*/ Google.GoogleSignIn theInstance;
        static /*0x8*/ Google.GoogleSignInConfiguration theConfiguration;
        /*0x10*/ Google.ISignInImpl impl;

        static /*0xed415c*/ GoogleSignIn();
        static /*0xed37b0*/ void set_Configuration(Google.GoogleSignInConfiguration value);
        static /*0xed38d4*/ Google.GoogleSignInConfiguration get_Configuration();
        static /*0xed3938*/ Google.GoogleSignIn get_DefaultInstance();
        /*0xed3c3c*/ GoogleSignIn(Google.Impl.GoogleSignInImpl impl);
        /*0xed3c68*/ void EnableDebugLogging(bool flag);
        /*0xed3d28*/ System.Threading.Tasks.Task<Google.GoogleSignInUser> SignIn();
        /*0xed3e74*/ System.Threading.Tasks.Task<Google.GoogleSignInUser> SignInSilently();
        /*0xed3fc4*/ void SignOut();
        /*0xed40ac*/ void Disconnect();

        class SignInException : System.Exception
        {
            /*0x88*/ Google.GoogleSignInStatusCode <Status>k__BackingField;

            /*0xf68b50*/ SignInException(Google.GoogleSignInStatusCode status);
            /*0xf68bc8*/ SignInException(Google.GoogleSignInStatusCode status, string message);
            /*0xf68c48*/ SignInException(Google.GoogleSignInStatusCode status, string message, System.Exception innerException);
            /*0xf68cd8*/ SignInException(Google.GoogleSignInStatusCode status, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
            /*0xf68d70*/ Google.GoogleSignInStatusCode get_Status();
            /*0xf68d78*/ void set_Status(Google.GoogleSignInStatusCode value);
        }
    }

    interface ISignInImpl
    {
        Google.Future<Google.GoogleSignInUser> SignIn();
        Google.Future<Google.GoogleSignInUser> SignInSilently();
        void EnableDebugLogging(bool flag);
        void SignOut();
        void Disconnect();
    }

    class GoogleSignInConfiguration
    {
        /*0x10*/ bool UseGameSignIn;
        /*0x18*/ string WebClientId;
        /*0x20*/ bool RequestAuthCode;
        /*0x21*/ bool ForceTokenRefresh;
        /*0x22*/ bool RequestEmail;
        /*0x23*/ bool RequestIdToken;
        /*0x24*/ bool RequestProfile;
        /*0x25*/ bool HidePopups;
        /*0x28*/ string AccountName;
        /*0x30*/ System.Collections.Generic.IEnumerable<string> AdditionalScopes;

        /*0xed4160*/ GoogleSignInConfiguration();
    }

    enum GoogleSignInStatusCode
    {
        SuccessCached = -1,
        Success = 0,
        ApiNotConnected = 1,
        Canceled = 2,
        Interrupted = 3,
        InvalidAccount = 4,
        Timeout = 5,
        DeveloperError = 6,
        InternalError = 7,
        NetworkError = 8,
        Error = 9,
    }

    class GoogleSignInUser
    {
        /*0x10*/ string <AuthCode>k__BackingField;
        /*0x18*/ string <Email>k__BackingField;
        /*0x20*/ string <IdToken>k__BackingField;
        /*0x28*/ string <DisplayName>k__BackingField;
        /*0x30*/ string <GivenName>k__BackingField;
        /*0x38*/ string <FamilyName>k__BackingField;
        /*0x40*/ System.Uri <ImageUrl>k__BackingField;
        /*0x48*/ string <UserId>k__BackingField;

        /*0xed504c*/ GoogleSignInUser();
        /*0xed4fcc*/ string get_AuthCode();
        /*0xed4fd4*/ void set_AuthCode(string value);
        /*0xed4fdc*/ string get_Email();
        /*0xed4fe4*/ void set_Email(string value);
        /*0xed4fec*/ string get_IdToken();
        /*0xed4ff4*/ void set_IdToken(string value);
        /*0xed4ffc*/ string get_DisplayName();
        /*0xed5004*/ void set_DisplayName(string value);
        /*0xed500c*/ string get_GivenName();
        /*0xed5014*/ void set_GivenName(string value);
        /*0xed501c*/ string get_FamilyName();
        /*0xed5024*/ void set_FamilyName(string value);
        /*0xed502c*/ System.Uri get_ImageUrl();
        /*0xed5034*/ void set_ImageUrl(System.Uri value);
        /*0xed503c*/ string get_UserId();
        /*0xed5044*/ void set_UserId(string value);
    }

    namespace Impl
    {
        class BaseObject : System.IDisposable
        {
            static /*0x0*/ System.Runtime.InteropServices.HandleRef nullSelf;
            /*0x10*/ System.Runtime.InteropServices.HandleRef selfHandleRef;

            static /*0xf88bc8*/ BaseObject();
            static /*0xf88960*/ string OutParamsToString(Google.Impl.BaseObject.OutStringMethod outStringMethod);
            /*0xf88770*/ BaseObject(nint intPtr);
            /*0xf887c0*/ System.Runtime.InteropServices.HandleRef SelfPtr();
            /*0xf888f4*/ void Dispose();

            class OutStringMethod : System.MulticastDelegate
            {
                /*0xda0b3c*/ OutStringMethod(object object, nint method);
                /*0xda0b9c*/ nuint Invoke(byte[] out_bytes, nuint out_size);
                /*0xda0dec*/ System.IAsyncResult BeginInvoke(byte[] out_bytes, nuint out_size, System.AsyncCallback callback, object object);
                /*0xda0e80*/ nuint EndInvoke(System.IAsyncResult result);
            }
        }

        class GoogleSignInImpl : Google.Impl.BaseObject, Google.ISignInImpl
        {
            static string DllName = "native-googlesignin";

            static /*0xed421c*/ nint GoogleSignIn_Create(nint data);
            static /*0xed44a4*/ void GoogleSignIn_EnableDebugLogging(System.Runtime.InteropServices.HandleRef self, bool flag);
            static /*0xed4298*/ bool GoogleSignIn_Configure(System.Runtime.InteropServices.HandleRef self, bool useGameSignIn, string webClientId, bool requestAuthCode, bool forceTokenRefresh, bool requestEmail, bool requestIdToken, bool hidePopups, string[] additionalScopes, int scopeCount, string accountName);
            static /*0xed45ec*/ nint GoogleSignIn_SignIn(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4720*/ nint GoogleSignIn_SignInSilently(System.Runtime.InteropServices.HandleRef self);
            static /*0xed47b8*/ void GoogleSignIn_Signout(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4850*/ void GoogleSignIn_Disconnect(System.Runtime.InteropServices.HandleRef self);
            static /*0xed48d0*/ void GoogleSignIn_DisposeFuture(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4950*/ bool GoogleSignIn_Pending(System.Runtime.InteropServices.HandleRef self);
            static /*0xed49d8*/ nint GoogleSignIn_Result(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4a54*/ int GoogleSignIn_Status(System.Runtime.InteropServices.HandleRef self);
            static /*0xed4ad0*/ nuint GoogleSignIn_GetServerAuthCode(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4b70*/ nuint GoogleSignIn_GetDisplayName(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4c10*/ nuint GoogleSignIn_GetEmail(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4cb0*/ nuint GoogleSignIn_GetFamilyName(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4d50*/ nuint GoogleSignIn_GetGivenName(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4df0*/ nuint GoogleSignIn_GetIdToken(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4e90*/ nuint GoogleSignIn_GetImageUrl(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4f2c*/ nuint GoogleSignIn_GetUserId(System.Runtime.InteropServices.HandleRef self, byte[] bytes, nuint len);
            static /*0xed4168*/ nint GetPlayerActivity();
            /*0xed3a70*/ GoogleSignInImpl(Google.GoogleSignInConfiguration configuration);
            /*0xed447c*/ void EnableDebugLogging(bool flag);
            /*0xed4534*/ Google.Future<Google.GoogleSignInUser> SignIn();
            /*0xed4668*/ Google.Future<Google.GoogleSignInUser> SignInSilently();
            /*0xed47a0*/ void SignOut();
            /*0xed4838*/ void Disconnect();
        }

        class NativeFuture : Google.Impl.BaseObject, Google.FutureAPIImpl<Google.GoogleSignInUser>
        {
            /*0x2b439d4*/ NativeFuture(nint ptr);
            /*0x2b43a48*/ void Dispose();
            /*0x2b43a7c*/ bool get_Pending();
            /*0x2b43a98*/ Google.GoogleSignInUser get_Result();
            /*0x2b43e30*/ Google.GoogleSignInStatusCode get_Status();

            class <>c__DisplayClass5_0
            {
                /*0x10*/ System.Runtime.InteropServices.HandleRef userPtr;

                /*0x1088ce4*/ <>c__DisplayClass5_0();
                /*0x1088cec*/ nuint <get_Result>b__0(byte[] out_string, nuint out_size);
                /*0x1088d08*/ nuint <get_Result>b__1(byte[] out_string, nuint out_size);
                /*0x1088d24*/ nuint <get_Result>b__2(byte[] out_string, nuint out_size);
                /*0x1088d40*/ nuint <get_Result>b__3(byte[] out_string, nuint out_size);
                /*0x1088d5c*/ nuint <get_Result>b__4(byte[] out_string, nuint out_size);
                /*0x1088d78*/ nuint <get_Result>b__5(byte[] out_string, nuint out_size);
                /*0x1088d94*/ nuint <get_Result>b__6(byte[] out_string, nuint out_size);
                /*0x1088db0*/ nuint <get_Result>b__7(byte[] out_string, nuint out_size);
            }
        }

        class SignInHelperObject : UnityEngine.MonoBehaviour
        {
            static /*0x0*/ Google.Impl.SignInHelperObject instance;

            static /*0xe29eb4*/ Google.Impl.SignInHelperObject get_Instance();
            /*0xe29fdc*/ SignInHelperObject();
        }
    }
}

namespace GoogleMobileAds
{
    namespace Mediation
    {
        class FyberClientFactory
        {
            static /*0x10b1a40*/ GoogleMobileAds.Common.Mediation.Fyber.IFyberClient CreateFyberClient();
            /*0x10b1f18*/ FyberClientFactory();
        }

        class IronSourceClientFactory
        {
            static /*0x1574388*/ GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient IronSourceInstance();
            /*0x157467c*/ IronSourceClientFactory();
        }

        class UnityAdsClientFactory
        {
            static /*0x10c4440*/ GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient UnityAdsInstance();
            /*0x10c4ac4*/ UnityAdsClientFactory();
        }

        class VungleClientFactory
        {
            static /*0xdfd670*/ GoogleMobileAds.Common.Mediation.Vungle.IVungleClient VungleInstance();
            /*0xdfdfe4*/ VungleClientFactory();
        }
    }

    namespace Android
    {
        namespace Mediation
        {
            namespace Vungle
            {
                class VungleClient : GoogleMobileAds.Common.Mediation.Vungle.IVungleClient
                {
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.Vungle.VungleClient instance;

                    static /*0xdfdf84*/ VungleClient();
                    static /*0xdfd76c*/ GoogleMobileAds.Android.Mediation.Vungle.VungleClient get_Instance();
                    /*0xdfd764*/ VungleClient();
                    /*0xdfd7d0*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    /*0xdfd81c*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    /*0xdfda2c*/ GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    /*0xdfde3c*/ string GetCurrentConsentMessageVersion();
                }
            }

            namespace UnityAds
            {
                class UnityAdsClient : GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient
                {
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.UnityAds.UnityAdsClient instance;

                    static /*0x10c4a64*/ UnityAdsClient();
                    static /*0x10c4620*/ GoogleMobileAds.Android.Mediation.UnityAds.UnityAdsClient get_Instance();
                    /*0x10c4618*/ UnityAdsClient();
                    /*0x10c4684*/ void SetGDPRConsentMetaData(bool consent);
                }
            }

            namespace IronSource
            {
                class IronSourceClient : GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient
                {
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.IronSource.IronSourceClient instance;

                    static /*0x157461c*/ IronSourceClient();
                    static /*0x1574484*/ GoogleMobileAds.Android.Mediation.IronSource.IronSourceClient get_Instance();
                    /*0x157447c*/ IronSourceClient();
                    /*0x15744e8*/ void SetConsent(bool consent);
                }
            }

            namespace Fyber
            {
                class FyberClient : GoogleMobileAds.Common.Mediation.Fyber.IFyberClient
                {
                    static string INNERACTIVE_AD_MANAGER_CLASS = "com.fyber.inneractive.sdk.external.InneractiveAdManager";
                    static /*0x0*/ GoogleMobileAds.Android.Mediation.Fyber.FyberClient instance;

                    static /*0x10b1eb8*/ FyberClient();
                    static /*0x10b1ae4*/ GoogleMobileAds.Android.Mediation.Fyber.FyberClient get_Instance();
                    /*0x10b1adc*/ FyberClient();
                    /*0x10b1b48*/ void SetGDPRConsent(bool consent);
                    /*0x10b1c7c*/ void SetGDPRConsentString(string consentString);
                    /*0x10b1d84*/ void ClearGDPRConsentData();
                }
            }
        }
    }

    namespace Common
    {
        namespace Mediation
        {
            namespace Vungle
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.Vungle.IVungleClient
                {
                    /*0x11f43f0*/ DummyClient();
                    /*0x11f43f8*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    /*0x11f43fc*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    /*0x11f4400*/ GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    /*0x11f4408*/ string GetCurrentConsentMessageVersion();
                }

                interface IVungleClient
                {
                    void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    string GetCurrentConsentMessageVersion();
                }
            }

            namespace UnityAds
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient
                {
                    /*0x11f43e4*/ DummyClient();
                    /*0x11f43ec*/ void SetGDPRConsentMetaData(bool consent);
                }

                interface IUnityAdsClient
                {
                    void SetGDPRConsentMetaData(bool consent);
                }
            }

            namespace IronSource
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient
                {
                    /*0x11f43d8*/ DummyClient();
                    /*0x11f43e0*/ void SetConsent(bool consent);
                }

                interface IIronSourceClient
                {
                    void SetConsent(bool consent);
                }
            }

            namespace Fyber
            {
                class DummyClient : GoogleMobileAds.Common.Mediation.Fyber.IFyberClient
                {
                    /*0x11f43c4*/ DummyClient();
                    /*0x11f43cc*/ void SetGDPRConsent(bool consent);
                    /*0x11f43d0*/ void SetGDPRConsentString(string consentString);
                    /*0x11f43d4*/ void ClearGDPRConsentData();
                }

                interface IFyberClient
                {
                    void SetGDPRConsent(bool consent);
                    void SetGDPRConsentString(string consentString);
                    void ClearGDPRConsentData();
                }
            }
        }
    }

    namespace Api
    {
        namespace Mediation
        {
            class MediationExtras
            {
                /*0x10*/ System.Collections.Generic.Dictionary<string, string> <Extras>k__BackingField;

                /*0x2b3aa40*/ MediationExtras();
                /*0x2b3aa30*/ System.Collections.Generic.Dictionary<string, string> get_Extras();
                /*0x2b3aa38*/ void set_Extras(System.Collections.Generic.Dictionary<string, string> value);
                string get_AndroidMediationExtraBuilderClassName();
                string get_IOSMediationExtraBuilderClassName();
            }

            namespace Vungle
            {
                enum VungleConsent
                {
                    UNKNOWN = 0,
                    ACCEPTED = 1,
                    DENIED = 2,
                }

                class Vungle
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.Vungle.IVungleClient client;

                    static /*0xdfd714*/ Vungle();
                    static /*0xdfd2d0*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus);
                    static /*0xdfd3b4*/ void UpdateConsentStatus(GoogleMobileAds.Api.Mediation.Vungle.VungleConsent consentStatus, string consentMessageVersion);
                    static /*0xdfd4ac*/ GoogleMobileAds.Api.Mediation.Vungle.VungleConsent GetCurrentConsentStatus();
                    static /*0xdfd58c*/ string GetCurrentConsentMessageVersion();
                    static /*0xdfd66c*/ GoogleMobileAds.Common.Mediation.Vungle.IVungleClient GetVungleClient();
                    /*0xdfd70c*/ Vungle();
                }

                class VungleInterstitialMediationExtras : GoogleMobileAds.Api.Mediation.Vungle.VungleMediationExtras
                {
                    /*0xdfdfec*/ VungleInterstitialMediationExtras();
                    /*0xdfdffc*/ string get_AndroidMediationExtraBuilderClassName();
                }

                class VungleMediationExtras : GoogleMobileAds.Api.Mediation.MediationExtras
                {
                    static string AllPlacementsKey = "all_placements";
                    static string UserIdKey = "user_id";
                    static string SoundEnabledKey = "sound_enabled";

                    /*0xdfdff4*/ VungleMediationExtras();
                    /*0xdfe040*/ string get_IOSMediationExtraBuilderClassName();
                    /*0xdfe084*/ void SetAllPlacements(string[] allPlacements);
                    /*0xdfe128*/ void SetUserId(string userId);
                    /*0xdfe1a4*/ void SetSoundEnabled(bool soundEnabled);
                }

                class VungleRewardedVideoMediationExtras : GoogleMobileAds.Api.Mediation.Vungle.VungleMediationExtras
                {
                    /*0xdfe238*/ VungleRewardedVideoMediationExtras();
                    /*0xdfe240*/ string get_AndroidMediationExtraBuilderClassName();
                }
            }

            namespace UnityAds
            {
                class UnityAds
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient client;

                    static /*0x10c45c8*/ UnityAds();
                    static /*0x10c443c*/ GoogleMobileAds.Common.Mediation.UnityAds.IUnityAdsClient GetUnityAdsClient();
                    static /*0x10c44dc*/ void SetGDPRConsentMetaData(bool consent);
                    /*0x10c45c0*/ UnityAds();
                }
            }

            namespace IronSource
            {
                class IronSource
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient client;

                    static /*0x157442c*/ IronSource();
                    static /*0x15742a0*/ void SetConsent(bool consent);
                    static /*0x1574384*/ GoogleMobileAds.Common.Mediation.IronSource.IIronSourceClient GetIronSourceClient();
                    /*0x1574424*/ IronSource();
                }
            }

            namespace Fyber
            {
                class Fyber
                {
                    static /*0x0*/ GoogleMobileAds.Common.Mediation.Fyber.IFyberClient client;

                    static /*0x10b19f0*/ Fyber();
                    static /*0x10b172c*/ void SetGDPRConsent(bool consent);
                    static /*0x10b1810*/ void SetGDPRConsentString(string consentString);
                    static /*0x10b1908*/ void ClearGDPRConsentData();
                    /*0x10b19e8*/ Fyber();
                }
            }
        }
    }
}

namespace Gamepub
{
    class NativeGamepub
    {
        static /*0x0*/ UnityEngine.AndroidJavaClass pluginClass;
        static /*0x8*/ UnityEngine.AndroidJavaObject pluginInstance;
        static /*0x10*/ bool isInitialize;

        static /*0x2b44158*/ NativeGamepub();
        static /*0x2b43e4c*/ void Init();
        static /*0x2b44020*/ void ApplicationQuit();
        /*0x2b44150*/ NativeGamepub();
    }
}

namespace DPSTest
{
    enum UnitSelectType
    {
        HERO = 0,
        PUPPET1 = 1,
        PUPPET2 = 2,
        PUPPET3 = 3,
        PUPPET4 = 4,
        PUPPET5 = 5,
        LENGTH = 6,
    }

    enum PuppetSelectType
    {
        NONE = 0,
        FIRE = 1,
        WIND = 2,
        NATURE = 3,
        WATER = 4,
        LIGHT = 5,
        DARK = 6,
        LENGTH = 7,
    }

    enum EquipSelectType
    {
        ALL = 0,
        WEAPON = 1,
        HELMET = 2,
        ARMOR = 3,
        BOOTS = 4,
        ARTIFACT = 5,
        LENGTH = 6,
    }

    enum ArtifactSelectType
    {
        NONE = 0,
        SHIELD = 1,
        CLOAK = 2,
        NECKLACE = 3,
        EARRING = 4,
        GLASS = 5,
        CROWN = 6,
        HEART = 7,
        LENGTH = 8,
    }

    enum PositionSelectType
    {
        FRONT_UPPER = 0,
        FRONT_BOTTOM = 1,
        BACK_UPPER = 2,
        BACK_MIDDLE = 3,
        BACK_BOTTOM = 4,
        LENGTH = 5,
    }

    enum GradeSelectType
    {
        NONE = 0,
        C = 1,
        C_PLUS = 2,
        B = 3,
        B_PLUS = 4,
        A = 5,
        A_PLUS = 6,
        S = 7,
        S_PLUS = 8,
        SS = 9,
        SS_PLUS = 10,
        SSS = 11,
        LENGTH = 12,
    }

    class UnitSetting
    {
        /*0x10*/ int ID;
        /*0x14*/ int Grade;
        /*0x18*/ int Level;
        /*0x1c*/ DPSTest.PositionSelectType SpawnPosition;
        /*0x20*/ DPSTest.EquipSetting[] EquipSettings;

        /*0x10c22ac*/ UnitSetting();
    }

    class EquipSetting
    {
        /*0x10*/ int Grade;
        /*0x14*/ int Level;
        /*0x18*/ bool FactionBuff;
        /*0x1c*/ DPSTest.ArtifactSelectType ArtifactType;

        /*0x14c2354*/ EquipSetting();
    }
}

namespace DG
{
    namespace Tweening
    {
        class DOTweenModuleAudio
        {
            static /*0xf532ac*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOFade(UnityEngine.AudioSource target, float endValue, float duration);
            static /*0xf5346c*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOPitch(UnityEngine.AudioSource target, float endValue, float duration);
            static /*0xf53604*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOSetFloat(UnityEngine.Audio.AudioMixer target, string floatName, float endValue, float duration);
            static /*0xf537a0*/ int DOComplete(UnityEngine.Audio.AudioMixer target, bool withCallbacks);
            static /*0xf53814*/ int DOKill(UnityEngine.Audio.AudioMixer target, bool complete);
            static /*0xf53888*/ int DOFlip(UnityEngine.Audio.AudioMixer target);
            static /*0xf538ec*/ int DOGoto(UnityEngine.Audio.AudioMixer target, float to, bool andPlay);
            static /*0xf53970*/ int DOPause(UnityEngine.Audio.AudioMixer target);
            static /*0xf539d4*/ int DOPlay(UnityEngine.Audio.AudioMixer target);
            static /*0xf53a38*/ int DOPlayBackwards(UnityEngine.Audio.AudioMixer target);
            static /*0xf53a9c*/ int DOPlayForward(UnityEngine.Audio.AudioMixer target);
            static /*0xf53b00*/ int DORestart(UnityEngine.Audio.AudioMixer target);
            static /*0xf53b6c*/ int DORewind(UnityEngine.Audio.AudioMixer target);
            static /*0xf53bd4*/ int DOSmoothRewind(UnityEngine.Audio.AudioMixer target);
            static /*0xf53c38*/ int DOTogglePause(UnityEngine.Audio.AudioMixer target);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.AudioSource target;

                /*0x1074468*/ <>c__DisplayClass0_0();
                /*0x1074470*/ float <DOFade>b__0();
                /*0x107448c*/ void <DOFade>b__1(float x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.AudioSource target;

                /*0x10744a8*/ <>c__DisplayClass1_0();
                /*0x10744b0*/ float <DOPitch>b__0();
                /*0x10744cc*/ void <DOPitch>b__1(float x);
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.Audio.AudioMixer target;
                /*0x18*/ string floatName;

                /*0x10744e8*/ <>c__DisplayClass2_0();
                /*0x10744f0*/ float <DOSetFloat>b__0();
                /*0x1074530*/ void <DOSetFloat>b__1(float x);
            }
        }

        class DOTweenModulePhysics
        {
            static /*0xf53c9c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMove(UnityEngine.Rigidbody target, UnityEngine.Vector3 endValue, float duration, bool snapping);
            static /*0xf53e68*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMoveX(UnityEngine.Rigidbody target, float endValue, float duration, bool snapping);
            static /*0xf54028*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMoveY(UnityEngine.Rigidbody target, float endValue, float duration, bool snapping);
            static /*0xf541e8*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOMoveZ(UnityEngine.Rigidbody target, float endValue, float duration, bool snapping);
            static /*0xf543a8*/ DG.Tweening.Core.TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions> DORotate(UnityEngine.Rigidbody target, UnityEngine.Vector3 endValue, float duration, DG.Tweening.RotateMode mode);
            static /*0xf54570*/ DG.Tweening.Core.TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions> DOLookAt(UnityEngine.Rigidbody target, UnityEngine.Vector3 towards, float duration, DG.Tweening.AxisConstraint axisConstraint, System.Nullable<UnityEngine.Vector3> up);
            static /*0xf547b4*/ DG.Tweening.Sequence DOJump(UnityEngine.Rigidbody target, UnityEngine.Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping);
            static /*0xf54cac*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOPath(UnityEngine.Rigidbody target, UnityEngine.Vector3[] path, float duration, DG.Tweening.PathType pathType, DG.Tweening.PathMode pathMode, int resolution, System.Nullable<UnityEngine.Color> gizmoColor);
            static /*0xf54f18*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOLocalPath(UnityEngine.Rigidbody target, UnityEngine.Vector3[] path, float duration, DG.Tweening.PathType pathType, DG.Tweening.PathMode pathMode, int resolution, System.Nullable<UnityEngine.Color> gizmoColor);
            static /*0xf55198*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOPath(UnityEngine.Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, DG.Tweening.PathMode pathMode);
            static /*0xf55378*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> DOLocalPath(UnityEngine.Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, DG.Tweening.PathMode pathMode);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x1074554*/ <>c__DisplayClass0_0();
                /*0x107455c*/ UnityEngine.Vector3 <DOMove>b__0();
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x107469c*/ <>c__DisplayClass1_0();
                /*0x10746a4*/ UnityEngine.Vector3 <DOMoveX>b__0();
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10746c0*/ <>c__DisplayClass2_0();
                /*0x10746c8*/ UnityEngine.Vector3 <DOMoveY>b__0();
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10746e4*/ <>c__DisplayClass3_0();
                /*0x10746ec*/ UnityEngine.Vector3 <DOMoveZ>b__0();
            }

            class <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x1074708*/ <>c__DisplayClass4_0();
                /*0x1074710*/ UnityEngine.Quaternion <DORotate>b__0();
            }

            class <>c__DisplayClass5_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x107472c*/ <>c__DisplayClass5_0();
                /*0x1074734*/ UnityEngine.Quaternion <DOLookAt>b__0();
            }

            class <>c__DisplayClass6_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;
                /*0x18*/ float startPosY;
                /*0x1c*/ bool offsetYSet;
                /*0x20*/ float offsetY;
                /*0x28*/ DG.Tweening.Sequence s;
                /*0x30*/ UnityEngine.Vector3 endValue;
                /*0x40*/ DG.Tweening.Tween yTween;

                /*0x1074750*/ <>c__DisplayClass6_0();
                /*0x1074758*/ UnityEngine.Vector3 <DOJump>b__0();
                /*0x1074774*/ void <DOJump>b__1();
                /*0x10747a8*/ UnityEngine.Vector3 <DOJump>b__2();
                /*0x10747c4*/ UnityEngine.Vector3 <DOJump>b__3();
                /*0x10747e0*/ void <DOJump>b__4();
            }

            class <>c__DisplayClass7_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10748a0*/ <>c__DisplayClass7_0();
                /*0x10748a8*/ UnityEngine.Vector3 <DOPath>b__0();
            }

            class <>c__DisplayClass8_0
            {
                /*0x10*/ UnityEngine.Transform trans;
                /*0x18*/ UnityEngine.Rigidbody target;

                /*0x10748c4*/ <>c__DisplayClass8_0();
                /*0x10748cc*/ UnityEngine.Vector3 <DOLocalPath>b__0();
                /*0x10748e8*/ void <DOLocalPath>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass9_0
            {
                /*0x10*/ UnityEngine.Rigidbody target;

                /*0x10749e8*/ <>c__DisplayClass9_0();
                /*0x10749f0*/ UnityEngine.Vector3 <DOPath>b__0();
            }

            class <>c__DisplayClass10_0
            {
                /*0x10*/ UnityEngine.Transform trans;
                /*0x18*/ UnityEngine.Rigidbody target;

                /*0x1074578*/ <>c__DisplayClass10_0();
                /*0x1074580*/ UnityEngine.Vector3 <DOLocalPath>b__0();
                /*0x107459c*/ void <DOLocalPath>b__1(UnityEngine.Vector3 x);
            }
        }

        class DOTweenModulePhysics2D
        {
            static /*0xf55564*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMove(UnityEngine.Rigidbody2D target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf55728*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMoveX(UnityEngine.Rigidbody2D target, float endValue, float duration, bool snapping);
            static /*0xf558e4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMoveY(UnityEngine.Rigidbody2D target, float endValue, float duration, bool snapping);
            static /*0xf55aa0*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DORotate(UnityEngine.Rigidbody2D target, float endValue, float duration);
            static /*0xf55c3c*/ DG.Tweening.Sequence DOJump(UnityEngine.Rigidbody2D target, UnityEngine.Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a0c*/ <>c__DisplayClass0_0();
                /*0x1074a14*/ UnityEngine.Vector2 <DOMove>b__0();
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a30*/ <>c__DisplayClass1_0();
                /*0x1074a38*/ UnityEngine.Vector2 <DOMoveX>b__0();
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a54*/ <>c__DisplayClass2_0();
                /*0x1074a5c*/ UnityEngine.Vector2 <DOMoveY>b__0();
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;

                /*0x1074a78*/ <>c__DisplayClass3_0();
                /*0x1074a80*/ float <DORotate>b__0();
            }

            class <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.Rigidbody2D target;
                /*0x18*/ float startPosY;
                /*0x1c*/ bool offsetYSet;
                /*0x20*/ float offsetY;
                /*0x28*/ DG.Tweening.Sequence s;
                /*0x30*/ UnityEngine.Vector2 endValue;
                /*0x38*/ DG.Tweening.Tween yTween;

                /*0x1074a9c*/ <>c__DisplayClass4_0();
                /*0x1074aa4*/ UnityEngine.Vector2 <DOJump>b__0();
                /*0x1074ac0*/ void <DOJump>b__1(UnityEngine.Vector2 x);
                /*0x1074adc*/ void <DOJump>b__2();
                /*0x1074b10*/ UnityEngine.Vector2 <DOJump>b__3();
                /*0x1074b2c*/ void <DOJump>b__4(UnityEngine.Vector2 x);
                /*0x1074b48*/ void <DOJump>b__5();
            }
        }

        class DOTweenModuleSprite
        {
            static /*0xf56064*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.SpriteRenderer target, UnityEngine.Color endValue, float duration);
            static /*0xf56224*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.SpriteRenderer target, float endValue, float duration);
            static /*0xf563bc*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.SpriteRenderer target, UnityEngine.Gradient gradient, float duration);
            static /*0xf565a8*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.SpriteRenderer target, UnityEngine.Color endValue, float duration);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.SpriteRenderer target;

                /*0x1074c00*/ <>c__DisplayClass0_0();
                /*0x1074c08*/ UnityEngine.Color <DOColor>b__0();
                /*0x1074c24*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.SpriteRenderer target;

                /*0x1074c40*/ <>c__DisplayClass1_0();
                /*0x1074c48*/ UnityEngine.Color <DOFade>b__0();
                /*0x1074c64*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.SpriteRenderer target;

                /*0x1074c80*/ <>c__DisplayClass3_0();
                /*0x1074c88*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x1074c94*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }
        }

        class DOTweenModuleUI
        {
            static /*0xf567f4*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOFade(UnityEngine.CanvasGroup target, float endValue, float duration);
            static /*0xf5698c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Graphic target, UnityEngine.Color endValue, float duration);
            static /*0xf56b4c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Graphic target, float endValue, float duration);
            static /*0xf56ce4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Image target, UnityEngine.Color endValue, float duration);
            static /*0xf56ea4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Image target, float endValue, float duration);
            static /*0xf5703c*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOFillAmount(UnityEngine.UI.Image target, float endValue, float duration);
            static /*0xf571f8*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.UI.Image target, UnityEngine.Gradient gradient, float duration);
            static /*0xf573ec*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOFlexibleSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf575a4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOMinSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf5775c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPreferredSize(UnityEngine.UI.LayoutElement target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf57914*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Outline target, UnityEngine.Color endValue, float duration);
            static /*0xf57ad4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Outline target, float endValue, float duration);
            static /*0xf57c6c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOScale(UnityEngine.UI.Outline target, UnityEngine.Vector2 endValue, float duration);
            static /*0xf57e14*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf57fcc*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPosX(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf5817c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPosY(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf5832c*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3D(UnityEngine.RectTransform target, UnityEngine.Vector3 endValue, float duration, bool snapping);
            static /*0xf584ec*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DX(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf586a0*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DY(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf58854*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorPos3DZ(UnityEngine.RectTransform target, float endValue, float duration, bool snapping);
            static /*0xf58a08*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorMax(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf58bc0*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOAnchorMin(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf58d78*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPivot(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration);
            static /*0xf58f20*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPivotX(UnityEngine.RectTransform target, float endValue, float duration);
            static /*0xf590cc*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOPivotY(UnityEngine.RectTransform target, float endValue, float duration);
            static /*0xf59278*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOSizeDelta(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf59430*/ DG.Tweening.Tweener DOPunchAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 punch, float duration, int vibrato, float elasticity, bool snapping);
            static /*0xf595f8*/ DG.Tweening.Tweener DOShakeAnchorPos(UnityEngine.RectTransform target, float duration, float strength, int vibrato, float randomness, bool snapping, bool fadeOut);
            static /*0xf597e0*/ DG.Tweening.Tweener DOShakeAnchorPos(UnityEngine.RectTransform target, float duration, UnityEngine.Vector2 strength, int vibrato, float randomness, bool snapping, bool fadeOut);
            static /*0xf599d0*/ DG.Tweening.Sequence DOJumpAnchorPos(UnityEngine.RectTransform target, UnityEngine.Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping);
            static /*0xf59dfc*/ DG.Tweening.Tweener DONormalizedPos(UnityEngine.UI.ScrollRect target, UnityEngine.Vector2 endValue, float duration, bool snapping);
            static /*0xf59fa8*/ DG.Tweening.Tweener DOHorizontalNormalizedPos(UnityEngine.UI.ScrollRect target, float endValue, float duration, bool snapping);
            static /*0xf5a144*/ DG.Tweening.Tweener DOVerticalNormalizedPos(UnityEngine.UI.ScrollRect target, float endValue, float duration, bool snapping);
            static /*0xf5a2e0*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> DOValue(UnityEngine.UI.Slider target, float endValue, float duration, bool snapping);
            static /*0xf5a488*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOColor(UnityEngine.UI.Text target, UnityEngine.Color endValue, float duration);
            static /*0xf5a648*/ DG.Tweening.Core.TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> DOFade(UnityEngine.UI.Text target, float endValue, float duration);
            static /*0xf5a7e0*/ DG.Tweening.Core.TweenerCore<string, string, DG.Tweening.Plugins.Options.StringOptions> DOText(UnityEngine.UI.Text target, string endValue, float duration, bool richTextEnabled, DG.Tweening.ScrambleMode scrambleMode, string scrambleChars);
            static /*0xf5aa24*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Graphic target, UnityEngine.Color endValue, float duration);
            static /*0xf5ac78*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Image target, UnityEngine.Color endValue, float duration);
            static /*0xf5aecc*/ DG.Tweening.Tweener DOBlendableColor(UnityEngine.UI.Text target, UnityEngine.Color endValue, float duration);

            class Utils
            {
                static /*0x1075c7c*/ UnityEngine.Vector2 SwitchToRectTransform(UnityEngine.RectTransform from, UnityEngine.RectTransform to);
            }

            class <>c__DisplayClass0_0
            {
                /*0x10*/ UnityEngine.CanvasGroup target;

                /*0x1074d40*/ <>c__DisplayClass0_0();
                /*0x1074d48*/ float <DOFade>b__0();
                /*0x1074d64*/ void <DOFade>b__1(float x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ UnityEngine.UI.Graphic target;

                /*0x1075008*/ <>c__DisplayClass1_0();
                /*0x1075010*/ UnityEngine.Color <DOColor>b__0();
                /*0x1075034*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass2_0
            {
                /*0x10*/ UnityEngine.UI.Graphic target;

                /*0x107541c*/ <>c__DisplayClass2_0();
                /*0x1075424*/ UnityEngine.Color <DOFade>b__0();
                /*0x1075448*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass3_0
            {
                /*0x10*/ UnityEngine.UI.Image target;

                /*0x1075944*/ <>c__DisplayClass3_0();
                /*0x107594c*/ UnityEngine.Color <DOColor>b__0();
                /*0x1075970*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.UI.Image target;

                /*0x1075994*/ <>c__DisplayClass4_0();
                /*0x107599c*/ UnityEngine.Color <DOFade>b__0();
                /*0x10759c0*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass5_0
            {
                /*0x10*/ UnityEngine.UI.Image target;

                /*0x10759e4*/ <>c__DisplayClass5_0();
                /*0x10759ec*/ float <DOFillAmount>b__0();
                /*0x1075a08*/ void <DOFillAmount>b__1(float x);
            }

            class <>c__DisplayClass7_0
            {
                /*0x10*/ UnityEngine.UI.LayoutElement target;

                /*0x1075a24*/ <>c__DisplayClass7_0();
                /*0x1075a2c*/ UnityEngine.Vector2 <DOFlexibleSize>b__0();
                /*0x1075a90*/ void <DOFlexibleSize>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass8_0
            {
                /*0x10*/ UnityEngine.UI.LayoutElement target;

                /*0x1075aec*/ <>c__DisplayClass8_0();
                /*0x1075af4*/ UnityEngine.Vector2 <DOMinSize>b__0();
                /*0x1075b58*/ void <DOMinSize>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass9_0
            {
                /*0x10*/ UnityEngine.UI.LayoutElement target;

                /*0x1075bb4*/ <>c__DisplayClass9_0();
                /*0x1075bbc*/ UnityEngine.Vector2 <DOPreferredSize>b__0();
                /*0x1075c20*/ void <DOPreferredSize>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass10_0
            {
                /*0x10*/ UnityEngine.UI.Outline target;

                /*0x1074d80*/ <>c__DisplayClass10_0();
                /*0x1074d88*/ UnityEngine.Color <DOColor>b__0();
                /*0x1074da8*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass11_0
            {
                /*0x10*/ UnityEngine.UI.Outline target;

                /*0x1074dc4*/ <>c__DisplayClass11_0();
                /*0x1074dcc*/ UnityEngine.Color <DOFade>b__0();
                /*0x1074dec*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass12_0
            {
                /*0x10*/ UnityEngine.UI.Outline target;

                /*0x1074e08*/ <>c__DisplayClass12_0();
                /*0x1074e10*/ UnityEngine.Vector2 <DOScale>b__0();
                /*0x1074e2c*/ void <DOScale>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass13_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074e48*/ <>c__DisplayClass13_0();
                /*0x1074e50*/ UnityEngine.Vector2 <DOAnchorPos>b__0();
                /*0x1074e6c*/ void <DOAnchorPos>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass14_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074e88*/ <>c__DisplayClass14_0();
                /*0x1074e90*/ UnityEngine.Vector2 <DOAnchorPosX>b__0();
                /*0x1074eac*/ void <DOAnchorPosX>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass15_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074ec8*/ <>c__DisplayClass15_0();
                /*0x1074ed0*/ UnityEngine.Vector2 <DOAnchorPosY>b__0();
                /*0x1074eec*/ void <DOAnchorPosY>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass16_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074f08*/ <>c__DisplayClass16_0();
                /*0x1074f10*/ UnityEngine.Vector3 <DOAnchorPos3D>b__0();
                /*0x1074f2c*/ void <DOAnchorPos3D>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass17_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074f48*/ <>c__DisplayClass17_0();
                /*0x1074f50*/ UnityEngine.Vector3 <DOAnchorPos3DX>b__0();
                /*0x1074f6c*/ void <DOAnchorPos3DX>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass18_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074f88*/ <>c__DisplayClass18_0();
                /*0x1074f90*/ UnityEngine.Vector3 <DOAnchorPos3DY>b__0();
                /*0x1074fac*/ void <DOAnchorPos3DY>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass19_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1074fc8*/ <>c__DisplayClass19_0();
                /*0x1074fd0*/ UnityEngine.Vector3 <DOAnchorPos3DZ>b__0();
                /*0x1074fec*/ void <DOAnchorPos3DZ>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass20_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075058*/ <>c__DisplayClass20_0();
                /*0x1075060*/ UnityEngine.Vector2 <DOAnchorMax>b__0();
                /*0x107507c*/ void <DOAnchorMax>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass21_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075098*/ <>c__DisplayClass21_0();
                /*0x10750a0*/ UnityEngine.Vector2 <DOAnchorMin>b__0();
                /*0x10750bc*/ void <DOAnchorMin>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass22_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x10750d8*/ <>c__DisplayClass22_0();
                /*0x10750e0*/ UnityEngine.Vector2 <DOPivot>b__0();
                /*0x10750fc*/ void <DOPivot>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass23_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075118*/ <>c__DisplayClass23_0();
                /*0x1075120*/ UnityEngine.Vector2 <DOPivotX>b__0();
                /*0x107513c*/ void <DOPivotX>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass24_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075158*/ <>c__DisplayClass24_0();
                /*0x1075160*/ UnityEngine.Vector2 <DOPivotY>b__0();
                /*0x107517c*/ void <DOPivotY>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass25_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075198*/ <>c__DisplayClass25_0();
                /*0x10751a0*/ UnityEngine.Vector2 <DOSizeDelta>b__0();
                /*0x10751bc*/ void <DOSizeDelta>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass26_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x10751d8*/ <>c__DisplayClass26_0();
                /*0x10751e0*/ UnityEngine.Vector3 <DOPunchAnchorPos>b__0();
                /*0x1075208*/ void <DOPunchAnchorPos>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass27_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075224*/ <>c__DisplayClass27_0();
                /*0x107522c*/ UnityEngine.Vector3 <DOShakeAnchorPos>b__0();
                /*0x1075254*/ void <DOShakeAnchorPos>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass28_0
            {
                /*0x10*/ UnityEngine.RectTransform target;

                /*0x1075270*/ <>c__DisplayClass28_0();
                /*0x1075278*/ UnityEngine.Vector3 <DOShakeAnchorPos>b__0();
                /*0x10752a0*/ void <DOShakeAnchorPos>b__1(UnityEngine.Vector3 x);
            }

            class <>c__DisplayClass29_0
            {
                /*0x10*/ UnityEngine.RectTransform target;
                /*0x18*/ float startPosY;
                /*0x1c*/ bool offsetYSet;
                /*0x20*/ float offsetY;
                /*0x28*/ DG.Tweening.Sequence s;
                /*0x30*/ UnityEngine.Vector2 endValue;

                /*0x10752bc*/ <>c__DisplayClass29_0();
                /*0x10752c4*/ UnityEngine.Vector2 <DOJumpAnchorPos>b__0();
                /*0x10752e0*/ void <DOJumpAnchorPos>b__1(UnityEngine.Vector2 x);
                /*0x10752fc*/ void <DOJumpAnchorPos>b__2();
                /*0x1075330*/ UnityEngine.Vector2 <DOJumpAnchorPos>b__3();
                /*0x107534c*/ void <DOJumpAnchorPos>b__4(UnityEngine.Vector2 x);
                /*0x1075368*/ void <DOJumpAnchorPos>b__5();
            }

            class <>c__DisplayClass30_0
            {
                /*0x10*/ UnityEngine.UI.ScrollRect target;

                /*0x107546c*/ <>c__DisplayClass30_0();
                /*0x1075474*/ UnityEngine.Vector2 <DONormalizedPos>b__0();
                /*0x10754c8*/ void <DONormalizedPos>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass31_0
            {
                /*0x10*/ UnityEngine.UI.ScrollRect target;

                /*0x1075514*/ <>c__DisplayClass31_0();
                /*0x107551c*/ float <DOHorizontalNormalizedPos>b__0();
                /*0x1075538*/ void <DOHorizontalNormalizedPos>b__1(float x);
            }

            class <>c__DisplayClass32_0
            {
                /*0x10*/ UnityEngine.UI.ScrollRect target;

                /*0x1075554*/ <>c__DisplayClass32_0();
                /*0x107555c*/ float <DOVerticalNormalizedPos>b__0();
                /*0x1075578*/ void <DOVerticalNormalizedPos>b__1(float x);
            }

            class <>c__DisplayClass33_0
            {
                /*0x10*/ UnityEngine.UI.Slider target;

                /*0x1075594*/ <>c__DisplayClass33_0();
                /*0x107559c*/ float <DOValue>b__0();
                /*0x10755c0*/ void <DOValue>b__1(float x);
            }

            class <>c__DisplayClass34_0
            {
                /*0x10*/ UnityEngine.UI.Text target;

                /*0x10755e4*/ <>c__DisplayClass34_0();
                /*0x10755ec*/ UnityEngine.Color <DOColor>b__0();
                /*0x1075610*/ void <DOColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass35_0
            {
                /*0x10*/ UnityEngine.UI.Text target;

                /*0x1075634*/ <>c__DisplayClass35_0();
                /*0x107563c*/ UnityEngine.Color <DOFade>b__0();
                /*0x1075660*/ void <DOFade>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass36_0
            {
                /*0x10*/ UnityEngine.UI.Text target;

                /*0x1075684*/ <>c__DisplayClass36_0();
                /*0x107568c*/ string <DOText>b__0();
                /*0x10756b0*/ void <DOText>b__1(string x);
            }

            class <>c__DisplayClass37_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.UI.Graphic target;

                /*0x10756d4*/ <>c__DisplayClass37_0();
                /*0x10756dc*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x10756e8*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass38_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.UI.Image target;

                /*0x10757a4*/ <>c__DisplayClass38_0();
                /*0x10757ac*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x10757b8*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }

            class <>c__DisplayClass39_0
            {
                /*0x10*/ UnityEngine.Color to;
                /*0x20*/ UnityEngine.UI.Text target;

                /*0x1075874*/ <>c__DisplayClass39_0();
                /*0x107587c*/ UnityEngine.Color <DOBlendableColor>b__0();
                /*0x1075888*/ void <DOBlendableColor>b__1(UnityEngine.Color x);
            }
        }

        class DOTweenModuleUnityVersion
        {
            static /*0xf5b120*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.Material target, UnityEngine.Gradient gradient, float duration);
            static /*0xf5b310*/ DG.Tweening.Sequence DOGradientColor(UnityEngine.Material target, UnityEngine.Gradient gradient, string property, float duration);
            static /*0xf5b514*/ UnityEngine.CustomYieldInstruction WaitForCompletion(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b5d4*/ UnityEngine.CustomYieldInstruction WaitForRewind(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b694*/ UnityEngine.CustomYieldInstruction WaitForKill(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b754*/ UnityEngine.CustomYieldInstruction WaitForElapsedLoops(DG.Tweening.Tween t, int elapsedLoops, bool returnCustomYieldInstruction);
            static /*0xf5b824*/ UnityEngine.CustomYieldInstruction WaitForPosition(DG.Tweening.Tween t, float position, bool returnCustomYieldInstruction);
            static /*0xf5b8f4*/ UnityEngine.CustomYieldInstruction WaitForStart(DG.Tweening.Tween t, bool returnCustomYieldInstruction);
            static /*0xf5b9b4*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOOffset(UnityEngine.Material target, UnityEngine.Vector2 endValue, int propertyID, float duration);
            static /*0xf5bbcc*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> DOTiling(UnityEngine.Material target, UnityEngine.Vector2 endValue, int propertyID, float duration);

            class <>c__DisplayClass8_0
            {
                /*0x10*/ UnityEngine.Material target;
                /*0x18*/ int propertyID;

                /*0x1075ec0*/ <>c__DisplayClass8_0();
                /*0x1075ec8*/ UnityEngine.Vector2 <DOOffset>b__0();
                /*0x1075eec*/ void <DOOffset>b__1(UnityEngine.Vector2 x);
            }

            class <>c__DisplayClass9_0
            {
                /*0x10*/ UnityEngine.Material target;
                /*0x18*/ int propertyID;

                /*0x1075f10*/ <>c__DisplayClass9_0();
                /*0x1075f18*/ UnityEngine.Vector2 <DOTiling>b__0();
                /*0x1075f3c*/ void <DOTiling>b__1(UnityEngine.Vector2 x);
            }
        }

        class DOTweenCYInstruction
        {
            class WaitForCompletion : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x10741dc*/ WaitForCompletion(DG.Tweening.Tween tween);
                /*0x10741a8*/ bool get_keepWaiting();
            }

            class WaitForRewind : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x10743dc*/ WaitForRewind(DG.Tweening.Tween tween);
                /*0x1074378*/ bool get_keepWaiting();
            }

            class WaitForKill : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x10742ac*/ WaitForKill(DG.Tweening.Tween tween);
                /*0x1074290*/ bool get_keepWaiting();
            }

            class WaitForElapsedLoops : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;
                /*0x18*/ int elapsedLoops;

                /*0x1074254*/ WaitForElapsedLoops(DG.Tweening.Tween tween, int elapsedLoops);
                /*0x1074208*/ bool get_keepWaiting();
            }

            class WaitForPosition : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;
                /*0x18*/ float position;

                /*0x107433c*/ WaitForPosition(DG.Tweening.Tween tween, float position);
                /*0x10742d8*/ bool get_keepWaiting();
            }

            class WaitForStart : UnityEngine.CustomYieldInstruction
            {
                /*0x10*/ DG.Tweening.Tween t;

                /*0x107443c*/ WaitForStart(DG.Tweening.Tween tween);
                /*0x1074408*/ bool get_keepWaiting();
            }
        }

        class DOTweenModuleUtils
        {
            static /*0x0*/ bool _initialized;

            static /*0xf5bde4*/ void Init();
            static /*0xf5bea8*/ void Preserver();

            class Physics
            {
                static /*0x1075f60*/ void SetOrientationOnPath(DG.Tweening.Plugins.Options.PathOptions options, DG.Tweening.Tween t, UnityEngine.Quaternion newRot, UnityEngine.Transform trans);
                static /*0x1076064*/ bool HasRigidbody2D(UnityEngine.Component target);
                static /*0x10760fc*/ bool HasRigidbody(UnityEngine.Component target);
                static /*0x1076194*/ DG.Tweening.Core.TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> CreateDOTweenPathTween(UnityEngine.MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, DG.Tweening.PathMode pathMode);
            }
        }
    }
}

namespace com
{
    namespace adjust
    {
        namespace sdk
        {
            enum JSONBinaryTag
            {
                Array = 1,
                Class = 2,
                Value = 3,
                IntValue = 4,
                DoubleValue = 5,
                BoolValue = 6,
                FloatValue = 7,
            }

            class JSONNode
            {
                static /*0xfa7924*/ com.adjust.sdk.JSONNode op_Implicit(string s);
                static /*0xfa7984*/ string op_Implicit(com.adjust.sdk.JSONNode d);
                static /*0xfa79d0*/ bool op_Equality(com.adjust.sdk.JSONNode a, object b);
                static /*0xfa7a64*/ bool op_Inequality(com.adjust.sdk.JSONNode a, object b);
                static /*0xfa5c74*/ string Escape(string aText);
                static /*0xfa3d48*/ com.adjust.sdk.JSONNode Parse(string aJSON);
                static /*0xfa7c08*/ com.adjust.sdk.JSONNode Deserialize(System.IO.BinaryReader aReader);
                static /*0xfa7fd0*/ com.adjust.sdk.JSONNode LoadFromCompressedFile(string aFileName);
                static /*0xfa8024*/ com.adjust.sdk.JSONNode LoadFromCompressedStream(System.IO.Stream aData);
                static /*0xfa8078*/ com.adjust.sdk.JSONNode LoadFromCompressedBase64(string aBase64);
                static /*0xfa80cc*/ com.adjust.sdk.JSONNode LoadFromStream(System.IO.Stream aData);
                static /*0xfa822c*/ com.adjust.sdk.JSONNode LoadFromBase64(string aBase64);
                /*0xfa4f24*/ JSONNode();
                /*0xfa72c8*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa72cc*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa72d4*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa72d8*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa72e0*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa72e4*/ string get_Value();
                /*0xfa7328*/ void set_Value(string value);
                /*0xfa732c*/ int get_Count();
                /*0xfa7334*/ void Add(com.adjust.sdk.JSONNode aItem);
                /*0xfa7398*/ com.adjust.sdk.JSONNode Remove(string aKey);
                /*0xfa73a0*/ com.adjust.sdk.JSONNode Remove(int aIndex);
                /*0xfa73a8*/ com.adjust.sdk.JSONNode Remove(com.adjust.sdk.JSONNode aNode);
                /*0xfa73b0*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_Childs();
                /*0xfa740c*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_DeepChilds();
                /*0xfa7478*/ string ToString();
                /*0xfa74bc*/ string ToString(string aPrefix);
                /*0xfa7500*/ int get_AsInt();
                /*0xfa7540*/ void set_AsInt(int value);
                /*0xfa7580*/ float get_AsFloat();
                /*0xfa75c4*/ void set_AsFloat(float value);
                /*0xfa7604*/ double get_AsDouble();
                /*0xfa76a4*/ void set_AsDouble(double value);
                /*0xfa76e4*/ bool get_AsBool();
                /*0xfa77a8*/ void set_AsBool(bool value);
                /*0xfa782c*/ com.adjust.sdk.JSONArray get_AsArray();
                /*0xfa78a8*/ com.adjust.sdk.JSONClass get_AsObject();
                /*0xfa7a80*/ bool Equals(object obj);
                /*0xfa6d60*/ int GetHashCode();
                /*0xfa7a8c*/ void Serialize(System.IO.BinaryWriter aWriter);
                /*0xfa7a90*/ void SaveToStream(System.IO.Stream aData);
                /*0xfa7b0c*/ void SaveToCompressedStream(System.IO.Stream aData);
                /*0xfa7b60*/ void SaveToCompressedFile(string aFileName);
                /*0xfa7bb4*/ string SaveToCompressedBase64();

                class <get_Childs>d__17 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;

                    /*0xe518cc*/ <get_Childs>d__17(int <>1__state);
                    /*0xe51904*/ void System.IDisposable.Dispose();
                    /*0xe51908*/ bool MoveNext();
                    /*0xe51920*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe51928*/ void System.Collections.IEnumerator.Reset();
                    /*0xe51968*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe51970*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe51a04*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }

                class <get_DeepChilds>d__19 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;
                    /*0x28*/ com.adjust.sdk.JSONNode <>4__this;
                    /*0x30*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> <>7__wrap1;
                    /*0x38*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> <>7__wrap2;

                    /*0xe51a08*/ <get_DeepChilds>d__19(int <>1__state);
                    /*0xe51a40*/ void System.IDisposable.Dispose();
                    /*0xe51c48*/ bool MoveNext();
                    /*0xe51b8c*/ void <>m__Finally1();
                    /*0xe51ad0*/ void <>m__Finally2();
                    /*0xe52080*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe52088*/ void System.Collections.IEnumerator.Reset();
                    /*0xe520c8*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe520d0*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe52178*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }
            }

            class JSONArray : com.adjust.sdk.JSONNode, System.Collections.IEnumerable
            {
                /*0x10*/ System.Collections.Generic.List<com.adjust.sdk.JSONNode> m_List;

                /*0xfa4eac*/ JSONArray();
                /*0xfa4478*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa4560*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa4618*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa4678*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa46dc*/ int get_Count();
                /*0xfa4728*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa478c*/ com.adjust.sdk.JSONNode Remove(int aIndex);
                /*0xfa484c*/ com.adjust.sdk.JSONNode Remove(com.adjust.sdk.JSONNode aNode);
                /*0xfa48b8*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_Childs();
                /*0xfa4924*/ System.Collections.IEnumerator GetEnumerator();
                /*0xfa4990*/ string ToString();
                /*0xfa4b6c*/ string ToString(string aPrefix);
                /*0xfa4dc4*/ void Serialize(System.IO.BinaryWriter aWriter);

                class <get_Childs>d__13 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;
                    /*0x28*/ com.adjust.sdk.JSONArray <>4__this;
                    /*0x30*/ System.Collections.Generic.List.Enumerator<com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe50f98*/ <get_Childs>d__13(int <>1__state);
                    /*0xe50fd0*/ void System.IDisposable.Dispose();
                    /*0xe51040*/ bool MoveNext();
                    /*0xe50fec*/ void <>m__Finally1();
                    /*0xe511b4*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe511bc*/ void System.Collections.IEnumerator.Reset();
                    /*0xe511fc*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe51204*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe512ac*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }

                class <GetEnumerator>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ com.adjust.sdk.JSONArray <>4__this;
                    /*0x28*/ System.Collections.Generic.List.Enumerator<com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe50d38*/ <GetEnumerator>d__14(int <>1__state);
                    /*0xe50d64*/ void System.IDisposable.Dispose();
                    /*0xe50dd4*/ bool MoveNext();
                    /*0xe50d80*/ void <>m__Finally1();
                    /*0xe50f48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xe50f50*/ void System.Collections.IEnumerator.Reset();
                    /*0xe50f90*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class JSONClass : com.adjust.sdk.JSONNode, System.Collections.IEnumerable
            {
                /*0x10*/ System.Collections.Generic.Dictionary<string, com.adjust.sdk.JSONNode> m_Dict;

                /*0xfa6494*/ JSONClass();
                /*0xfa4f2c*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa5034*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa5104*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa51b0*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa5290*/ int get_Count();
                /*0xfa52e4*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa5430*/ com.adjust.sdk.JSONNode Remove(string aKey);
                /*0xfa5500*/ com.adjust.sdk.JSONNode Remove(int aIndex);
                /*0xfa55e8*/ com.adjust.sdk.JSONNode Remove(com.adjust.sdk.JSONNode aNode);
                /*0xfa57b4*/ System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode> get_Childs();
                /*0xfa5820*/ System.Collections.IEnumerator GetEnumerator();
                /*0xfa588c*/ string ToString();
                /*0xfa5e40*/ string ToString(string aPrefix);
                /*0xfa6298*/ void Serialize(System.IO.BinaryWriter aWriter);

                class <>c__DisplayClass12_0
                {
                    /*0x10*/ com.adjust.sdk.JSONNode aNode;

                    /*0xe512b0*/ <>c__DisplayClass12_0();
                    /*0xe512b8*/ bool <Remove>b__0(System.Collections.Generic.KeyValuePair<string, com.adjust.sdk.JSONNode> k);
                }

                class <get_Childs>d__14 : System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ com.adjust.sdk.JSONNode <>2__current;
                    /*0x20*/ int <>l__initialThreadId;
                    /*0x28*/ com.adjust.sdk.JSONClass <>4__this;
                    /*0x30*/ System.Collections.Generic.Dictionary.Enumerator<string, com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe515a0*/ <get_Childs>d__14(int <>1__state);
                    /*0xe515d8*/ void System.IDisposable.Dispose();
                    /*0xe51648*/ bool MoveNext();
                    /*0xe515f4*/ void <>m__Finally1();
                    /*0xe517d0*/ com.adjust.sdk.JSONNode System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode>.get_Current();
                    /*0xe517d8*/ void System.Collections.IEnumerator.Reset();
                    /*0xe51818*/ object System.Collections.IEnumerator.get_Current();
                    /*0xe51820*/ System.Collections.Generic.IEnumerator<com.adjust.sdk.JSONNode> System.Collections.Generic.IEnumerable<com.adjust.sdk.JSONNode>.GetEnumerator();
                    /*0xe518c8*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
                }

                class <GetEnumerator>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                {
                    /*0x10*/ int <>1__state;
                    /*0x18*/ object <>2__current;
                    /*0x20*/ com.adjust.sdk.JSONClass <>4__this;
                    /*0x28*/ System.Collections.Generic.Dictionary.Enumerator<string, com.adjust.sdk.JSONNode> <>7__wrap1;

                    /*0xe5130c*/ <GetEnumerator>d__15(int <>1__state);
                    /*0xe51338*/ void System.IDisposable.Dispose();
                    /*0xe513a8*/ bool MoveNext();
                    /*0xe51354*/ void <>m__Finally1();
                    /*0xe51550*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                    /*0xe51558*/ void System.Collections.IEnumerator.Reset();
                    /*0xe51598*/ object System.Collections.IEnumerator.get_Current();
                }
            }

            class JSONData : com.adjust.sdk.JSONNode
            {
                /*0x10*/ string m_Data;

                /*0xfa651c*/ JSONData(string aData);
                /*0xfa6548*/ JSONData(float aData);
                /*0xfa658c*/ JSONData(double aData);
                /*0xfa65d0*/ JSONData(bool aData);
                /*0xfa660c*/ JSONData(int aData);
                /*0xfa650c*/ string get_Value();
                /*0xfa6514*/ void set_Value(string value);
                /*0xfa6648*/ string ToString();
                /*0xfa66a4*/ string ToString(string aPrefix);
                /*0xfa6700*/ void Serialize(System.IO.BinaryWriter aWriter);
            }

            class JSONLazyCreator : com.adjust.sdk.JSONNode
            {
                /*0x10*/ com.adjust.sdk.JSONNode m_Node;
                /*0x18*/ string m_Key;

                static /*0xfa6d10*/ bool op_Equality(com.adjust.sdk.JSONLazyCreator a, object b);
                static /*0xfa6d28*/ bool op_Inequality(com.adjust.sdk.JSONLazyCreator a, object b);
                /*0xfa4534*/ JSONLazyCreator(com.adjust.sdk.JSONNode aNode);
                /*0xfa4ffc*/ JSONLazyCreator(com.adjust.sdk.JSONNode aNode, string aKey);
                /*0xfa69c4*/ void Set(com.adjust.sdk.JSONNode aVal);
                /*0xfa6a24*/ com.adjust.sdk.JSONNode get_Item(int aIndex);
                /*0xfa6a84*/ void set_Item(int aIndex, com.adjust.sdk.JSONNode value);
                /*0xfa6b08*/ com.adjust.sdk.JSONNode get_Item(string aKey);
                /*0xfa6b74*/ void set_Item(string aKey, com.adjust.sdk.JSONNode value);
                /*0xfa6c00*/ void Add(com.adjust.sdk.JSONNode aItem);
                /*0xfa6c84*/ void Add(string aKey, com.adjust.sdk.JSONNode aItem);
                /*0xfa6d40*/ bool Equals(object obj);
                /*0xfa6d58*/ int GetHashCode();
                /*0xfa6d68*/ string ToString();
                /*0xfa6dac*/ string ToString(string aPrefix);
                /*0xfa6df0*/ int get_AsInt();
                /*0xfa6e70*/ void set_AsInt(int value);
                /*0xfa6ef4*/ float get_AsFloat();
                /*0xfa6f74*/ void set_AsFloat(float value);
                /*0xfa6ff8*/ double get_AsDouble();
                /*0xfa7078*/ void set_AsDouble(double value);
                /*0xfa70fc*/ bool get_AsBool();
                /*0xfa717c*/ void set_AsBool(bool value);
                /*0xfa7200*/ com.adjust.sdk.JSONArray get_AsArray();
                /*0xfa7264*/ com.adjust.sdk.JSONClass get_AsObject();
            }

            class JSON
            {
                static /*0xfa3d44*/ com.adjust.sdk.JSONNode Parse(string aJSON);
            }

            class AdjustAndroid
            {
                static string sdkPrefix = "unity4.28.0";
                static /*0x0*/ bool launchDeferredDeeplink;
                static /*0x8*/ UnityEngine.AndroidJavaClass ajcAdjust;
                static /*0x10*/ UnityEngine.AndroidJavaObject ajoCurrentActivity;
                static /*0x18*/ com.adjust.sdk.AdjustAndroid.DeferredDeeplinkListener onDeferredDeeplinkListener;
                static /*0x20*/ com.adjust.sdk.AdjustAndroid.AttributionChangeListener onAttributionChangedListener;
                static /*0x28*/ com.adjust.sdk.AdjustAndroid.EventTrackingFailedListener onEventTrackingFailedListener;
                static /*0x30*/ com.adjust.sdk.AdjustAndroid.EventTrackingSucceededListener onEventTrackingSucceededListener;
                static /*0x38*/ com.adjust.sdk.AdjustAndroid.SessionTrackingFailedListener onSessionTrackingFailedListener;
                static /*0x40*/ com.adjust.sdk.AdjustAndroid.SessionTrackingSucceededListener onSessionTrackingSucceededListener;

                static /*0x12157b4*/ AdjustAndroid();
                static /*0x120f0dc*/ void Start(com.adjust.sdk.AdjustConfig adjustConfig);
                static /*0x121061c*/ void TrackEvent(com.adjust.sdk.AdjustEvent adjustEvent);
                static /*0x1210da8*/ bool IsEnabled();
                static /*0x1210c24*/ void SetEnabled(bool enabled);
                static /*0x1210f48*/ void SetOfflineMode(bool enabled);
                static /*0x121177c*/ void SendFirstPackages();
                static /*0x12110d4*/ void SetDeviceToken(string deviceToken);
                static /*0x1213558*/ string GetAdid();
                static /*0x1211260*/ void GdprForgetMe();
                static /*0x12113c0*/ void DisableThirdPartySharing();
                static /*0x12136f0*/ com.adjust.sdk.AdjustAttribution GetAttribution();
                static /*0x1211918*/ void AddSessionPartnerParameter(string key, string value);
                static /*0x1211b3c*/ void AddSessionCallbackParameter(string key, string value);
                static /*0x1211d50*/ void RemoveSessionPartnerParameter(string key);
                static /*0x1211f38*/ void RemoveSessionCallbackParameter(string key);
                static /*0x1212118*/ void ResetSessionPartnerParameters();
                static /*0x1212324*/ void ResetSessionCallbackParameters();
                static /*0x1211528*/ void AppWillOpenUrl(string url);
                static /*0x1212548*/ void TrackAdRevenue(string source, string payload);
                static /*0x12127e8*/ void TrackPlayStoreSubscription(com.adjust.sdk.AdjustPlayStoreSubscription subscription);
                static /*0x1212e10*/ void TrackThirdPartySharing(com.adjust.sdk.AdjustThirdPartySharing thirdPartySharing);
                static /*0x12133b8*/ void TrackMeasurementConsent(bool measurementConsent);
                static /*0x120ee84*/ void OnPause();
                static /*0x120efb0*/ void OnResume();
                static /*0x1214338*/ void SetReferrer(string referrer);
                static /*0x12144cc*/ void GetGoogleAdId(System.Action<string> onDeviceIdsRead);
                static /*0x1214690*/ string GetAmazonAdId();
                static /*0x1214170*/ string GetSdkVersion();
                static /*0x121480c*/ void SetTestOptions(System.Collections.Generic.Dictionary<string, string> testOptions);
                static /*0x1214a7c*/ bool IsAppSecretSet(com.adjust.sdk.AdjustConfig adjustConfig);
                /*0x12157ac*/ AdjustAndroid();

                class AttributionChangeListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustAttribution> callback;

                    /*0xe14a88*/ AttributionChangeListener(System.Action<com.adjust.sdk.AdjustAttribution> pCallback);
                    /*0xe14b18*/ void onAttributionChanged(UnityEngine.AndroidJavaObject attribution);
                }

                class DeferredDeeplinkListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<string> callback;

                    /*0xd97cb0*/ DeferredDeeplinkListener(System.Action<string> pCallback);
                    /*0xd97d40*/ bool launchReceivedDeeplink(UnityEngine.AndroidJavaObject deeplink);
                }

                class EventTrackingSucceededListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustEventSuccess> callback;

                    /*0xd986c0*/ EventTrackingSucceededListener(System.Action<com.adjust.sdk.AdjustEventSuccess> pCallback);
                    /*0xd98750*/ void onFinishedEventTrackingSucceeded(UnityEngine.AndroidJavaObject eventSuccessData);
                }

                class EventTrackingFailedListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustEventFailure> callback;

                    /*0xd980ec*/ EventTrackingFailedListener(System.Action<com.adjust.sdk.AdjustEventFailure> pCallback);
                    /*0xd9817c*/ void onFinishedEventTrackingFailed(UnityEngine.AndroidJavaObject eventFailureData);
                }

                class SessionTrackingSucceededListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustSessionSuccess> callback;

                    /*0xd9913c*/ SessionTrackingSucceededListener(System.Action<com.adjust.sdk.AdjustSessionSuccess> pCallback);
                    /*0xd991cc*/ void onFinishedSessionTrackingSucceeded(UnityEngine.AndroidJavaObject sessionSuccessData);
                }

                class SessionTrackingFailedListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<com.adjust.sdk.AdjustSessionFailure> callback;

                    /*0xd98c60*/ SessionTrackingFailedListener(System.Action<com.adjust.sdk.AdjustSessionFailure> pCallback);
                    /*0xd98cf0*/ void onFinishedSessionTrackingFailed(UnityEngine.AndroidJavaObject sessionFailureData);
                }

                class DeviceIdsReadListener : UnityEngine.AndroidJavaProxy
                {
                    /*0x20*/ System.Action<string> onPlayAdIdReadCallback;

                    /*0xd97ec8*/ DeviceIdsReadListener(System.Action<string> pCallback);
                    /*0xd97f58*/ void onGoogleAdIdRead(string playAdId);
                    /*0xd97fc8*/ void onGoogleAdIdRead(UnityEngine.AndroidJavaObject ajoAdId);
                }
            }

            class Adjust : UnityEngine.MonoBehaviour
            {
                static string errorMsgEditor = "[Adjust]: SDK can not be used in Editor.";
                static string errorMsgStart = "[Adjust]: SDK not started. Start it manually using the 'start' method.";
                static string errorMsgPlatform = "[Adjust]: SDK can only be used in Android, iOS, Windows Phone 8.1, Windows Store or Universal Windows apps.";
                /*0x18*/ bool startManually;
                /*0x19*/ bool eventBuffering;
                /*0x1a*/ bool sendInBackground;
                /*0x1b*/ bool launchDeferredDeeplink;
                /*0x20*/ string appToken;
                /*0x28*/ com.adjust.sdk.AdjustLogLevel logLevel;
                /*0x2c*/ com.adjust.sdk.AdjustEnvironment environment;

                static /*0x120ed98*/ void start(com.adjust.sdk.AdjustConfig adjustConfig);
                static /*0x12105ac*/ void trackEvent(com.adjust.sdk.AdjustEvent adjustEvent);
                static /*0x1210bc4*/ void setEnabled(bool enabled);
                static /*0x1210d50*/ bool isEnabled();
                static /*0x1210ee8*/ void setOfflineMode(bool enabled);
                static /*0x1211074*/ void setDeviceToken(string deviceToken);
                static /*0x1211208*/ void gdprForgetMe();
                static /*0x1211368*/ void disableThirdPartySharing();
                static /*0x12114c8*/ void appWillOpenUrl(string url);
                static /*0x1211724*/ void sendFirstPackages();
                static /*0x12118a8*/ void addSessionPartnerParameter(string key, string value);
                static /*0x1211acc*/ void addSessionCallbackParameter(string key, string value);
                static /*0x1211cf0*/ void removeSessionPartnerParameter(string key);
                static /*0x1211ed8*/ void removeSessionCallbackParameter(string key);
                static /*0x12120c0*/ void resetSessionPartnerParameters();
                static /*0x12122cc*/ void resetSessionCallbackParameters();
                static /*0x12124d8*/ void trackAdRevenue(string source, string payload);
                static /*0x1212784*/ void trackAppStoreSubscription(com.adjust.sdk.AdjustAppStoreSubscription subscription);
                static /*0x1212788*/ void trackPlayStoreSubscription(com.adjust.sdk.AdjustPlayStoreSubscription subscription);
                static /*0x1212db0*/ void trackThirdPartySharing(com.adjust.sdk.AdjustThirdPartySharing thirdPartySharing);
                static /*0x1213358*/ void trackMeasurementConsent(bool measurementConsent);
                static /*0x12134e4*/ void requestTrackingAuthorizationWithCompletionHandler(System.Action<int> statusCallback, string sceneName);
                static /*0x12134e8*/ void updateConversionValue(int conversionValue);
                static /*0x12134ec*/ int getAppTrackingAuthorizationStatus();
                static /*0x12134f4*/ string getAdid();
                static /*0x1213698*/ com.adjust.sdk.AdjustAttribution getAttribution();
                static /*0x1214074*/ string getWinAdid();
                static /*0x12140c0*/ string getIdfa();
                static /*0x121410c*/ string getSdkVersion();
                static /*0x12142d8*/ void setReferrer(string referrer);
                static /*0x121446c*/ void getGoogleAdId(System.Action<string> onDeviceIdsRead);
                static /*0x121462c*/ string getAmazonAdId();
                static /*0x120eba0*/ bool IsEditor();
                static /*0x12147ac*/ void SetTestOptions(System.Collections.Generic.Dictionary<string, string> testOptions);
                /*0x121495c*/ Adjust();
                /*0x120ea78*/ void Awake();
                /*0x120ee08*/ void OnApplicationPause(bool pauseStatus);
            }

            class AdjustAppStoreSubscription
            {
                /*0x10*/ string price;
                /*0x18*/ string currency;
                /*0x20*/ string transactionId;
                /*0x28*/ string receipt;
                /*0x30*/ string billingStore;
                /*0x38*/ string transactionDate;
                /*0x40*/ string salesRegion;
                /*0x48*/ System.Collections.Generic.List<string> partnerList;
                /*0x50*/ System.Collections.Generic.List<string> callbackList;

                /*0x12158d0*/ AdjustAppStoreSubscription(string price, string currency, string transactionId, string receipt);
                /*0x121591c*/ void setTransactionDate(string transactionDate);
                /*0x1215924*/ void setSalesRegion(string salesRegion);
                /*0x121592c*/ void addCallbackParameter(string key, string value);
                /*0x12159f8*/ void addPartnerParameter(string key, string value);
            }

            class AdjustAttribution
            {
                /*0x10*/ string <adid>k__BackingField;
                /*0x18*/ string <network>k__BackingField;
                /*0x20*/ string <adgroup>k__BackingField;
                /*0x28*/ string <campaign>k__BackingField;
                /*0x30*/ string <creative>k__BackingField;
                /*0x38*/ string <clickLabel>k__BackingField;
                /*0x40*/ string <trackerName>k__BackingField;
                /*0x48*/ string <trackerToken>k__BackingField;
                /*0x50*/ string <costType>k__BackingField;
                /*0x58*/ System.Nullable<double> <costAmount>k__BackingField;
                /*0x68*/ string <costCurrency>k__BackingField;

                /*0x1214af4*/ AdjustAttribution();
                /*0x1215b78*/ AdjustAttribution(string jsonString);
                /*0x1215f8c*/ AdjustAttribution(System.Collections.Generic.Dictionary<string, string> dicAttributionData);
                /*0x1215ac4*/ string get_adid();
                /*0x1215acc*/ void set_adid(string value);
                /*0x1215ad4*/ string get_network();
                /*0x1215adc*/ void set_network(string value);
                /*0x1215ae4*/ string get_adgroup();
                /*0x1215aec*/ void set_adgroup(string value);
                /*0x1215af4*/ string get_campaign();
                /*0x1215afc*/ void set_campaign(string value);
                /*0x1215b04*/ string get_creative();
                /*0x1215b0c*/ void set_creative(string value);
                /*0x1215b14*/ string get_clickLabel();
                /*0x1215b1c*/ void set_clickLabel(string value);
                /*0x1215b24*/ string get_trackerName();
                /*0x1215b2c*/ void set_trackerName(string value);
                /*0x1215b34*/ string get_trackerToken();
                /*0x1215b3c*/ void set_trackerToken(string value);
                /*0x1215b44*/ string get_costType();
                /*0x1215b4c*/ void set_costType(string value);
                /*0x1215b54*/ System.Nullable<double> get_costAmount();
                /*0x1215b60*/ void set_costAmount(System.Nullable<double> value);
                /*0x1215b68*/ string get_costCurrency();
                /*0x1215b70*/ void set_costCurrency(string value);
            }

            class AdjustConfig
            {
                static string AdjustUrlStrategyChina = "china";
                static string AdjustUrlStrategyIndia = "india";
                static string AdjustDataResidencyEU = "data-residency-eu";
                static string AdjustAdRevenueSourceMopub = "mopub";
                static string AdjustAdRevenueSourceAdmob = "admob";
                static string AdjustAdRevenueSourceFbNativeAd = "facebook_native_ad";
                static string AdjustAdRevenueSourceFbAudienceNetwork = "facebook_audience_network";
                static string AdjustAdRevenueSourceIronsource = "ironsource";
                static string AdjustAdRevenueSourceFyber = "fyber";
                static string AdjustAdRevenueSourceAerserv = "aerserv";
                static string AdjustAdRevenueSourceAppodeal = "appodeal";
                static string AdjustAdRevenueSourceAdincube = "adincube";
                static string AdjustAdRevenueSourceFusePowered = "fusepowered";
                static string AdjustAdRevenueSourceAddaptr = "addapptr";
                static string AdjustAdRevenueSourceMillenialMediation = "millennial_mediation";
                static string AdjustAdRevenueSourceFlurry = "flurry";
                static string AdjustAdRevenueSourceAdmost = "admost";
                static string AdjustAdRevenueSourceDeltadna = "deltadna";
                static string AdjustAdRevenueSourceUpsight = "upsight";
                static string AdjustAdRevenueSourceUnityads = "unityads";
                static string AdjustAdRevenueSourceAdtoapp = "adtoapp";
                static string AdjustAdRevenueSourceTapdaq = "tapdaq";
                /*0x10*/ string appToken;
                /*0x18*/ string sceneName;
                /*0x20*/ string userAgent;
                /*0x28*/ string defaultTracker;
                /*0x30*/ string externalDeviceId;
                /*0x38*/ string urlStrategy;
                /*0x40*/ System.Nullable<long> info1;
                /*0x50*/ System.Nullable<long> info2;
                /*0x60*/ System.Nullable<long> info3;
                /*0x70*/ System.Nullable<long> info4;
                /*0x80*/ System.Nullable<long> secretId;
                /*0x90*/ System.Nullable<double> delayStart;
                /*0xa0*/ System.Nullable<bool> isDeviceKnown;
                /*0xa2*/ System.Nullable<bool> sendInBackground;
                /*0xa4*/ System.Nullable<bool> eventBufferingEnabled;
                /*0xa6*/ System.Nullable<bool> allowSuppressLogLevel;
                /*0xa8*/ System.Nullable<bool> needsCost;
                /*0xaa*/ bool launchDeferredDeeplink;
                /*0xac*/ System.Nullable<com.adjust.sdk.AdjustLogLevel> logLevel;
                /*0xb4*/ com.adjust.sdk.AdjustEnvironment environment;
                /*0xb8*/ System.Action<string> deferredDeeplinkDelegate;
                /*0xc0*/ System.Action<com.adjust.sdk.AdjustEventSuccess> eventSuccessDelegate;
                /*0xc8*/ System.Action<com.adjust.sdk.AdjustEventFailure> eventFailureDelegate;
                /*0xd0*/ System.Action<com.adjust.sdk.AdjustSessionSuccess> sessionSuccessDelegate;
                /*0xd8*/ System.Action<com.adjust.sdk.AdjustSessionFailure> sessionFailureDelegate;
                /*0xe0*/ System.Action<com.adjust.sdk.AdjustAttribution> attributionChangedDelegate;
                /*0xe8*/ System.Nullable<bool> readImei;
                /*0xea*/ System.Nullable<bool> preinstallTrackingEnabled;
                /*0xf0*/ string processName;
                /*0xf8*/ System.Nullable<bool> allowiAdInfoReading;
                /*0xfa*/ System.Nullable<bool> allowAdServicesInfoReading;
                /*0xfc*/ System.Nullable<bool> allowIdfaReading;
                /*0xfe*/ System.Nullable<bool> skAdNetworkHandling;
                /*0x100*/ System.Action<string> logDelegate;

                /*0x1216318*/ AdjustConfig(string appToken, com.adjust.sdk.AdjustEnvironment environment);
                /*0x120eba8*/ AdjustConfig(string appToken, com.adjust.sdk.AdjustEnvironment environment, bool allowSuppressLogLevel);
                /*0x120ec54*/ void setLogLevel(com.adjust.sdk.AdjustLogLevel logLevel);
                /*0x1216388*/ void setDefaultTracker(string defaultTracker);
                /*0x1216390*/ void setExternalDeviceId(string externalDeviceId);
                /*0x1216398*/ void setLaunchDeferredDeeplink(bool launchDeferredDeeplink);
                /*0x120ecc0*/ void setSendInBackground(bool sendInBackground);
                /*0x120ed2c*/ void setEventBufferingEnabled(bool eventBufferingEnabled);
                /*0x12163a4*/ void setNeedsCost(bool needsCost);
                /*0x1216410*/ void setDelayStart(double delayStart);
                /*0x1216484*/ void setUserAgent(string userAgent);
                /*0x121648c*/ void setIsDeviceKnown(bool isDeviceKnown);
                /*0x12164f8*/ void setUrlStrategy(string urlStrategy);
                /*0x1216500*/ void deactivateSKAdNetworkHandling();
                /*0x1216568*/ void setDeferredDeeplinkDelegate(System.Action<string> deferredDeeplinkDelegate, string sceneName);
                /*0x1216574*/ System.Action<string> getDeferredDeeplinkDelegate();
                /*0x121657c*/ void setAttributionChangedDelegate(System.Action<com.adjust.sdk.AdjustAttribution> attributionChangedDelegate, string sceneName);
                /*0x1216588*/ System.Action<com.adjust.sdk.AdjustAttribution> getAttributionChangedDelegate();
                /*0x1216590*/ void setEventSuccessDelegate(System.Action<com.adjust.sdk.AdjustEventSuccess> eventSuccessDelegate, string sceneName);
                /*0x121659c*/ System.Action<com.adjust.sdk.AdjustEventSuccess> getEventSuccessDelegate();
                /*0x12165a4*/ void setEventFailureDelegate(System.Action<com.adjust.sdk.AdjustEventFailure> eventFailureDelegate, string sceneName);
                /*0x12165b0*/ System.Action<com.adjust.sdk.AdjustEventFailure> getEventFailureDelegate();
                /*0x12165b8*/ void setSessionSuccessDelegate(System.Action<com.adjust.sdk.AdjustSessionSuccess> sessionSuccessDelegate, string sceneName);
                /*0x12165c4*/ System.Action<com.adjust.sdk.AdjustSessionSuccess> getSessionSuccessDelegate();
                /*0x12165cc*/ void setSessionFailureDelegate(System.Action<com.adjust.sdk.AdjustSessionFailure> sessionFailureDelegate, string sceneName);
                /*0x12165d8*/ System.Action<com.adjust.sdk.AdjustSessionFailure> getSessionFailureDelegate();
                /*0x12165e0*/ void setAppSecret(long secretId, long info1, long info2, long info3, long info4);
                /*0x12166e4*/ void setAllowiAdInfoReading(bool allowiAdInfoReading);
                /*0x1216750*/ void setAllowAdServicesInfoReading(bool allowAdServicesInfoReading);
                /*0x12167bc*/ void setAllowIdfaReading(bool allowIdfaReading);
                /*0x1216828*/ void setProcessName(string processName);
                /*0x1216830*/ void setReadMobileEquipmentIdentity(bool readMobileEquipmentIdentity);
                /*0x1216834*/ void setPreinstallTrackingEnabled(bool preinstallTrackingEnabled);
                /*0x12168a0*/ void setLogDelegate(System.Action<string> logDelegate);
            }

            enum AdjustEnvironment
            {
                Sandbox = 0,
                Production = 1,
            }

            class AdjustEnvironmentExtension
            {
                static /*0x12168a8*/ string ToLowercaseString(com.adjust.sdk.AdjustEnvironment adjustEnvironment);
            }

            class AdjustEvent
            {
                /*0x10*/ string currency;
                /*0x18*/ string eventToken;
                /*0x20*/ string callbackId;
                /*0x28*/ string transactionId;
                /*0x30*/ System.Nullable<double> revenue;
                /*0x40*/ System.Collections.Generic.List<string> partnerList;
                /*0x48*/ System.Collections.Generic.List<string> callbackList;
                /*0x50*/ string receipt;
                /*0x58*/ bool isReceiptSet;

                /*0x1216928*/ AdjustEvent(string eventToken);
                /*0x1216958*/ void setRevenue(double amount, string currency);
                /*0x12169dc*/ void addCallbackParameter(string key, string value);
                /*0x1216aa8*/ void addPartnerParameter(string key, string value);
                /*0x1216b74*/ void setTransactionId(string transactionId);
                /*0x1216b7c*/ void setCallbackId(string callbackId);
                /*0x1216b84*/ void setReceipt(string receipt, string transactionId);
            }

            class AdjustEventFailure
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ string <EventToken>k__BackingField;
                /*0x30*/ string <CallbackId>k__BackingField;
                /*0x38*/ bool <WillRetry>k__BackingField;
                /*0x40*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1216c0c*/ AdjustEventFailure();
                /*0x1216c14*/ AdjustEventFailure(System.Collections.Generic.Dictionary<string, string> eventFailureDataMap);
                /*0x1217248*/ AdjustEventFailure(string jsonString);
                /*0x1216b98*/ string get_Adid();
                /*0x1216ba0*/ void set_Adid(string value);
                /*0x1216ba8*/ string get_Message();
                /*0x1216bb0*/ void set_Message(string value);
                /*0x1216bb8*/ string get_Timestamp();
                /*0x1216bc0*/ void set_Timestamp(string value);
                /*0x1216bc8*/ string get_EventToken();
                /*0x1216bd0*/ void set_EventToken(string value);
                /*0x1216bd8*/ string get_CallbackId();
                /*0x1216be0*/ void set_CallbackId(string value);
                /*0x1216be8*/ bool get_WillRetry();
                /*0x1216bf0*/ void set_WillRetry(bool value);
                /*0x1216bfc*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1216c04*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x12174a0*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x12175a8*/ string GetJsonResponse();
            }

            class AdjustEventSuccess
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ string <EventToken>k__BackingField;
                /*0x30*/ string <CallbackId>k__BackingField;
                /*0x38*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1217d98*/ AdjustEventSuccess();
                /*0x1217da0*/ AdjustEventSuccess(System.Collections.Generic.Dictionary<string, string> eventSuccessDataMap);
                /*0x1217f7c*/ AdjustEventSuccess(string jsonString);
                /*0x1217d38*/ string get_Adid();
                /*0x1217d40*/ void set_Adid(string value);
                /*0x1217d48*/ string get_Message();
                /*0x1217d50*/ void set_Message(string value);
                /*0x1217d58*/ string get_Timestamp();
                /*0x1217d60*/ void set_Timestamp(string value);
                /*0x1217d68*/ string get_EventToken();
                /*0x1217d70*/ void set_EventToken(string value);
                /*0x1217d78*/ string get_CallbackId();
                /*0x1217d80*/ void set_CallbackId(string value);
                /*0x1217d88*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1217d90*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x1218178*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x1218280*/ string GetJsonResponse();
            }

            enum AdjustLogLevel
            {
                Verbose = 1,
                Debug = 2,
                Info = 3,
                Warn = 4,
                Error = 5,
                Assert = 6,
                Suppress = 7,
            }

            class AdjustLogLevelExtension
            {
                static /*0x12182e4*/ string ToLowercaseString(com.adjust.sdk.AdjustLogLevel AdjustLogLevel);
                static /*0x12149c4*/ string ToUppercaseString(com.adjust.sdk.AdjustLogLevel AdjustLogLevel);
            }

            class AdjustPlayStoreSubscription
            {
                /*0x10*/ string price;
                /*0x18*/ string currency;
                /*0x20*/ string sku;
                /*0x28*/ string orderId;
                /*0x30*/ string signature;
                /*0x38*/ string purchaseToken;
                /*0x40*/ string billingStore;
                /*0x48*/ string purchaseTime;
                /*0x50*/ System.Collections.Generic.List<string> partnerList;
                /*0x58*/ System.Collections.Generic.List<string> callbackList;

                /*0x1218ac8*/ AdjustPlayStoreSubscription(string price, string currency, string sku, string orderId, string signature, string purchaseToken);
                /*0x1218b28*/ void setPurchaseTime(string purchaseTime);
                /*0x1218b30*/ void addCallbackParameter(string key, string value);
                /*0x1218bfc*/ void addPartnerParameter(string key, string value);
            }

            class AdjustSessionFailure
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ bool <WillRetry>k__BackingField;
                /*0x30*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1218d1c*/ AdjustSessionFailure();
                /*0x1218d24*/ AdjustSessionFailure(System.Collections.Generic.Dictionary<string, string> sessionFailureDataMap);
                /*0x1218f4c*/ AdjustSessionFailure(string jsonString);
                /*0x1218cc8*/ string get_Adid();
                /*0x1218cd0*/ void set_Adid(string value);
                /*0x1218cd8*/ string get_Message();
                /*0x1218ce0*/ void set_Message(string value);
                /*0x1218ce8*/ string get_Timestamp();
                /*0x1218cf0*/ void set_Timestamp(string value);
                /*0x1218cf8*/ bool get_WillRetry();
                /*0x1218d00*/ void set_WillRetry(bool value);
                /*0x1218d0c*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1218d14*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x1219174*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x121927c*/ string GetJsonResponse();
            }

            class AdjustSessionSuccess
            {
                /*0x10*/ string <Adid>k__BackingField;
                /*0x18*/ string <Message>k__BackingField;
                /*0x20*/ string <Timestamp>k__BackingField;
                /*0x28*/ System.Collections.Generic.Dictionary<string, object> <JsonResponse>k__BackingField;

                /*0x1219320*/ AdjustSessionSuccess();
                /*0x1219328*/ AdjustSessionSuccess(System.Collections.Generic.Dictionary<string, string> sessionSuccessDataMap);
                /*0x12194d4*/ AdjustSessionSuccess(string jsonString);
                /*0x12192e0*/ string get_Adid();
                /*0x12192e8*/ void set_Adid(string value);
                /*0x12192f0*/ string get_Message();
                /*0x12192f8*/ void set_Message(string value);
                /*0x1219300*/ string get_Timestamp();
                /*0x1219308*/ void set_Timestamp(string value);
                /*0x1219310*/ System.Collections.Generic.Dictionary<string, object> get_JsonResponse();
                /*0x1219318*/ void set_JsonResponse(System.Collections.Generic.Dictionary<string, object> value);
                /*0x12196a0*/ void BuildJsonResponseFromString(string jsonResponseString);
                /*0x12197a8*/ string GetJsonResponse();
            }

            class AdjustThirdPartySharing
            {
                /*0x10*/ System.Nullable<bool> isEnabled;
                /*0x18*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> granularOptions;

                /*0x121980c*/ AdjustThirdPartySharing(System.Nullable<bool> isEnabled);
                /*0x1219898*/ void addGranularOption(string partnerName, string key, string value);
            }

            class AdjustUtils
            {
                static /*0x0*/ string KeyAdid;
                static /*0x8*/ string KeyMessage;
                static /*0x10*/ string KeyNetwork;
                static /*0x18*/ string KeyAdgroup;
                static /*0x20*/ string KeyCampaign;
                static /*0x28*/ string KeyCreative;
                static /*0x30*/ string KeyWillRetry;
                static /*0x38*/ string KeyTimestamp;
                static /*0x40*/ string KeyCallbackId;
                static /*0x48*/ string KeyEventToken;
                static /*0x50*/ string KeyClickLabel;
                static /*0x58*/ string KeyTrackerName;
                static /*0x60*/ string KeyTrackerToken;
                static /*0x68*/ string KeyJsonResponse;
                static /*0x70*/ string KeyCostType;
                static /*0x78*/ string KeyCostAmount;
                static /*0x80*/ string KeyCostCurrency;
                static /*0x88*/ string KeyTestOptionsBaseUrl;
                static /*0x90*/ string KeyTestOptionsGdprUrl;
                static /*0x98*/ string KeyTestOptionsSubscriptionUrl;
                static /*0xa0*/ string KeyTestOptionsExtraPath;
                static /*0xa8*/ string KeyTestOptionsBasePath;
                static /*0xb0*/ string KeyTestOptionsGdprPath;
                static /*0xb8*/ string KeyTestOptionsDeleteState;
                static /*0xc0*/ string KeyTestOptionsUseTestConnectionOptions;
                static /*0xc8*/ string KeyTestOptionsTimerIntervalInMilliseconds;
                static /*0xd0*/ string KeyTestOptionsTimerStartInMilliseconds;
                static /*0xd8*/ string KeyTestOptionsSessionIntervalInMilliseconds;
                static /*0xe0*/ string KeyTestOptionsSubsessionIntervalInMilliseconds;
                static /*0xe8*/ string KeyTestOptionsTeardown;
                static /*0xf0*/ string KeyTestOptionsNoBackoffWait;
                static /*0xf8*/ string KeyTestOptionsiAdFrameworkEnabled;
                static /*0x100*/ string KeyTestOptionsAdServicesFrameworkEnabled;

                static /*0x1219d98*/ AdjustUtils();
                static /*0x1219a04*/ int ConvertLogLevel(System.Nullable<com.adjust.sdk.AdjustLogLevel> logLevel);
                static /*0x1219a7c*/ int ConvertBool(System.Nullable<bool> value);
                static /*0x1219afc*/ double ConvertDouble(System.Nullable<double> value);
                static /*0x1219b74*/ long ConvertLong(System.Nullable<long> value);
                static /*0x1219bec*/ string ConvertListToJson(System.Collections.Generic.List<string> list);
                static /*0x121760c*/ string GetJsonResponseCompact(System.Collections.Generic.Dictionary<string, object> dictionary);
                static /*0x1215e74*/ string GetJsonString(com.adjust.sdk.JSONNode node, string key);
                static /*0x1216e6c*/ void WriteJsonResponseDictionary(com.adjust.sdk.JSONClass jsonObject, System.Collections.Generic.Dictionary<string, object> output);
                static /*0x121626c*/ string TryGetValue(System.Collections.Generic.Dictionary<string, string> dictionary, string key);
                static /*0x1214afc*/ UnityEngine.AndroidJavaObject TestOptionsMap2AndroidJavaObject(System.Collections.Generic.Dictionary<string, string> testOptionsMap, UnityEngine.AndroidJavaObject ajoCurrentActivity);
                /*0x1219d90*/ AdjustUtils();
            }
        }
    }
}

class <PrivateImplementationDetails>
{
    static /*0x0*/ <PrivateImplementationDetails> 025FB29C6A4973A8802D7EB55927B707571013F6A2087F5C81C5B01160AFA357;
    static /*0x100*/ <PrivateImplementationDetails> 0CFB8E54CB2E3FC258367388CE81637E1EC2DF4604A3E90297955E679EE907C2;
    static /*0x130*/ <PrivateImplementationDetails> 0EDB951A90ED696D0B29CCA3F3323A2D22265B9EB74D5E14B56CA2FEF70AD73F;
    static /*0x140*/ <PrivateImplementationDetails> 16EABE83DA955DFAA32F37FA3036FD8966C7FD64CA25C3B6F7739453FBAB6663;
    static /*0x150*/ <PrivateImplementationDetails> 363E36084BBB0306805877162A3EAD9F65A9BB6166FE2CD6E51E55EEBBB70545;
    static /*0x18c*/ <PrivateImplementationDetails> 44CE851CDCC7F82580CF8AF07787E6EE5017CA7236555FA87E73ED8C5A4058DE;
    static /*0x1a0*/ <PrivateImplementationDetails> 49F2DEA87CDF2E9177664BBBB2ECC559EEA7CB79BF20F2A55A4460C102BCA819;
    static /*0x1ac*/ <PrivateImplementationDetails> 54C9F664711A0609C8934B9797737200FC7025DA91E12B41F4633B4E2B59B953;
    static /*0x1ec*/ <PrivateImplementationDetails> 57355AC3303C148F11AEF7CB179456B9232CDE33A818DFDA2C2FCB9325749A6B;
    static /*0x1f4*/ int 5FF92E0EF669766129352061FAA51A038F426D450DD6AB9567EE65DBAA0DB8C6;
    static /*0x1f8*/ <PrivateImplementationDetails> 7245C6EDC4E42F6CBA60411578646C131C02961F7FC3C8135BB0B4C5AE6886E9;
    static /*0x20c*/ int 726ECF3D13F2E4C4ECBB837E4B58D0E8AAF152054B89ACFDC5E2523FBE1AACDC;
    static /*0x210*/ <PrivateImplementationDetails> 77B4B5142BA07390E3E262BC90995001825EDDB287CD88F6567EE165BF5569EA;
    static /*0x220*/ <PrivateImplementationDetails> 921C803ABFA6AC88F44F7AB19198E5C137D1C7183E8E6912757A6263E8DEE0A5;
    static /*0x244*/ <PrivateImplementationDetails> 9DD9822B1B52DEB94F14650E73602EC50FA255C03E91F7F4BB8870ED52BBA4F9;
    static /*0x258*/ <PrivateImplementationDetails> A3D2C8538AD5B65BCF147F28BE0081387B37CAE106D6C87B41A0BB4BEB82B604;
    static /*0x268*/ <PrivateImplementationDetails> C7AB7E65103F0D09119A404A750CC912384111FCC3150F3E301D2DD3CAE12011;
    static /*0x274*/ int CF15116372057E5FA75FB8C1CD7A847237A7E6FB92799CBCA29600FD473A53E9;
    static /*0x278*/ <PrivateImplementationDetails> D100D0BAFA9A5E9F839A8A035B7D0F403923BD75AFD0A740E0FD257DB23E9C69;
    static /*0x28c*/ <PrivateImplementationDetails> D5ACA10B446B978E570CE7E0FBA8B267A7647AC18ABA3337221C0112C53B8517;
    static /*0x38c*/ <PrivateImplementationDetails> D8D76B4895FBCFA1ACBFA1646EA92AE03ACB4E4EEE79674F1750751115A63D25;
    static /*0x3a4*/ <PrivateImplementationDetails> E4950866B039A9CA640997AE9E94BA3EC5A36B3B0A3EFD7064F16308A86859CC;
    static /*0x3b4*/ <PrivateImplementationDetails> ED785057DE2C9CD3C18377B3B239CE52477625B0A44241926A10A3B83D044A0A;
    static /*0x3c0*/ <PrivateImplementationDetails> FCC708741B2B156D55A630BE4F4407A8B5F51C71455C056849BEB55D1A8C8263;

    static /*0x11ff570*/ uint ComputeStringHash(string s);

    struct __StaticArrayInitTypeSize=7
    {
    }

    struct __StaticArrayInitTypeSize=12
    {
    }

    struct __StaticArrayInitTypeSize=16
    {
    }

    struct __StaticArrayInitTypeSize=20
    {
    }

    struct __StaticArrayInitTypeSize=24
    {
    }

    struct __StaticArrayInitTypeSize=36
    {
    }

    struct __StaticArrayInitTypeSize=48
    {
    }

    struct __StaticArrayInitTypeSize=60
    {
    }

    struct __StaticArrayInitTypeSize=64
    {
    }

    struct __StaticArrayInitTypeSize=256
    {
    }
}
