class <Module>
{
}

class ConsoleProDebug
{
    static /*0x215be74*/ void Clear();
    static /*0x215be78*/ void LogToFilter(string inLog, string inFilterName);
    static /*0x215bf2c*/ void Watch(string inName, string inValue);
    static /*0x215c0c8*/ void Search(string inText);
}

class EnumFlagAttribute : UnityEngine.PropertyAttribute
{
    /*0x215c16c*/ EnumFlagAttribute();
}

class Required : System.Attribute
{
    /*0x215c174*/ Required();
}

class UnityThreadHelper : UnityEngine.MonoBehaviour
{
    static /*0x0*/ UnityThreadHelper instance;
    static /*0x8*/ object syncRoot;
    /*0x20*/ UnityThreading.Dispatcher dispatcher;
    /*0x28*/ UnityThreading.TaskDistributor taskDistributor;
    /*0x30*/ System.Collections.Generic.List<UnityThreading.ThreadBase> registeredThreads;

    static /*0x215d204*/ UnityThreadHelper();
    static /*0x215c17c*/ void EnsureHelper();
    static /*0x215c5c8*/ UnityThreadHelper get_Instance();
    static /*0x215c624*/ UnityThreading.Dispatcher get_Dispatcher();
    static /*0x215c680*/ UnityThreading.TaskDistributor get_TaskDistributor();
    static /*0x215c6ec*/ UnityThreading.ActionThread CreateThread(System.Action<UnityThreading.ActionThread> action, bool autoStartThread);
    static /*0x215c8b4*/ UnityThreading.ActionThread CreateThread(System.Action<UnityThreading.ActionThread> action);
    static /*0x215c90c*/ UnityThreading.ActionThread CreateThread(System.Action action, bool autoStartThread);
    static /*0x215ca04*/ UnityThreading.ActionThread CreateThread(System.Action action);
    static /*0x215caf0*/ UnityThreading.ThreadBase CreateThread(System.Func<UnityThreading.ThreadBase, System.Collections.IEnumerator> action, bool autoStartThread);
    static /*0x215cba0*/ UnityThreading.ThreadBase CreateThread(System.Func<UnityThreading.ThreadBase, System.Collections.IEnumerator> action);
    static /*0x215cbf8*/ UnityThreading.ThreadBase CreateThread(System.Func<System.Collections.IEnumerator> action, bool autoStartThread);
    static /*0x215ccf0*/ UnityThreading.ThreadBase CreateThread(System.Func<System.Collections.IEnumerator> action);
    /*0x215d17c*/ UnityThreadHelper();
    /*0x215c6dc*/ UnityThreading.Dispatcher get_CurrentDispatcher();
    /*0x215c6e4*/ UnityThreading.TaskDistributor get_CurrentTaskDistributor();
    /*0x215c4b8*/ void EnsureHelperInstance();
    /*0x215c824*/ void RegisterThread(UnityThreading.ThreadBase thread);
    /*0x215cddc*/ void OnDestroy();
    /*0x215d084*/ void Update();

    class <>c__DisplayClass16_0
    {
        /*0x10*/ System.Action<UnityThreading.ActionThread> action;

        /*0x215c81c*/ <>c__DisplayClass16_0();
        /*0x215d294*/ void <CreateThread>b__0(UnityThreading.ActionThread currentThread);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ System.Action action;

        /*0x215c9fc*/ <>c__DisplayClass18_0();
        /*0x215d354*/ void <CreateThread>b__0(UnityThreading.ActionThread thread);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ System.Action action;

        /*0x215cae8*/ <>c__DisplayClass19_0();
        /*0x215d374*/ void <CreateThread>b__0(UnityThreading.ActionThread thread);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ System.Func<System.Collections.IEnumerator> action;

        /*0x215cce8*/ <>c__DisplayClass22_0();
        /*0x215d394*/ System.Collections.IEnumerator <CreateThread>b__0(UnityThreading.ThreadBase thread);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ System.Func<System.Collections.IEnumerator> action;

        /*0x215cdd4*/ <>c__DisplayClass23_0();
        /*0x215d3c4*/ System.Collections.IEnumerator <CreateThread>b__0(UnityThreading.ThreadBase thread);
    }
}

class AssetUnloader
{
    static /*0x215d3f4*/ void UnloadUnusedAssets();
    static /*0x215d44c*/ System.Collections.IEnumerator UnloadUnusedAssetsCoroutine();

    class <UnloadUnusedAssetsCoroutine>d__1 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x215d4a4*/ <UnloadUnusedAssetsCoroutine>d__1(int <>1__state);
        /*0x215d4cc*/ void System.IDisposable.Dispose();
        /*0x215d4d0*/ bool MoveNext();
        /*0x215d574*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x215d57c*/ void System.Collections.IEnumerator.Reset();
        /*0x215d5b4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DailyMeterDebugManager : CapitalGames.IInitializable
{
    static string _noActiveDailyMeter = "No active DailyMeter";
    /*0x10*/ PvzN3xt.DailyMeter.DailyMeterDataSource _dailyMeterDataSource;
    /*0x18*/ PvzN3xt.DailyMeter.DailyMeterDomainController _dailyMeterDomainController;
    /*0x20*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
    /*0x28*/ Yeti.GameStateController _gameStateController;
    /*0x30*/ PvzN3xt.RoadTrip.RoadTripInfoManager _roadTripInfoManager;
    /*0x38*/ PvzN3xt.Data.DailyMeter _activeDailyMeter;

    /*0x2160530*/ DailyMeterDebugManager();
    /*0x215d5bc*/ EA.Debugging.Menu.DebugMenu get__debugMenuRegistry();
    /*0x215d614*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
    /*0x215da98*/ void ShowActiveDailyMeter();
    /*0x215da9c*/ void ShowTopScores();
    /*0x215daa0*/ void RegisterDailyMeterInfo(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215d6c8*/ void FindActiveDailyMeter();
    /*0x215daa4*/ bool IsCurrentDailyMeter(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215dd1c*/ string CreateDailyMeterBasicInfo(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215e08c*/ string CreateDailyMeterPremiumRewardProgressInfo(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215e354*/ string CreateDailyMeterPremiumRewardInfo(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215e5b8*/ string CreateDailyMeterScheduleInfo(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215ecc0*/ string CreateDailyMeterMilestonesDataInfo(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215f18c*/ string CreateTopScoresInfo();
    /*0x215f91c*/ string CreateClaimableMilestonesInfo(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x21600dc*/ void ClaimAllPossibleMilestones(PvzN3xt.Data.DailyMeter dailyMeter);
    /*0x215eacc*/ System.Collections.Generic.List<long> GetStartAndEndTimeStamps(PvzN3xt.Data.DailyMeter dailyMeter);

    class PvzN3xtDebugMenuPaths
    {
        class DailyMeter
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string ViewActive;
            static /*0x10*/ string ViewBasicInfo;
            static /*0x18*/ string ViewPremiumReward;
            static /*0x20*/ string PremiumRewardProgress;
            static /*0x28*/ string ViewPremiumRewardData;
            static /*0x30*/ string ViewSchedule;
            static /*0x38*/ string ViewMilestones;
            static /*0x40*/ string ViewMilestonesData;
            static /*0x48*/ string ViewClaimableMilestones;
            static /*0x50*/ string ClaimMilestones;
            static /*0x58*/ string ViewTopScores;

            static /*0x2160538*/ DailyMeter();
        }
    }
}

class RandomSparkGenerator : UnityEngine.MonoBehaviour
{
    /*0x20*/ UnityEngine.Animator _animcont;

    /*0x2160a58*/ RandomSparkGenerator();
    /*0x21608e8*/ void OnEnable();
    /*0x2160950*/ void SparkEffect();
    /*0x21609e4*/ void PlayAnimationLoop();
}

class UILineRenderer : UnityEngine.UI.MaskableGraphic
{
    /*0xd8*/ UnityEngine.Vector2[] _points;
    /*0xe0*/ bool stretchTexture;
    /*0xe4*/ float textureTiling;
    /*0xe8*/ int positionCount;
    /*0xec*/ float thickness;
    /*0xf0*/ bool center;
    /*0xf8*/ UnityEngine.AnimationCurve widthCurve;
    /*0x100*/ UnityEngine.Gradient colorGradient;
    /*0x108*/ UnityEngine.Material _material;

    /*0x21620e4*/ UILineRenderer();
    /*0x2160a60*/ void ForceUpdateMesh();
    /*0x2160a80*/ UnityEngine.Vector2[] get_points();
    /*0x2160a88*/ void set_points(UnityEngine.Vector2[] value);
    /*0x2160ab0*/ UnityEngine.Vector2 WorldToLocalUI(UnityEngine.Vector3 worldPosition);
    /*0x2160bfc*/ void SetPosition(int index, UnityEngine.Vector3 worldPosition);
    /*0x2160e94*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
    /*0x2161104*/ void CreateLineSegment(UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, UnityEngine.UI.VertexHelper vh, int segmentIndex, int totalSegments, ref int[] indices);
    /*0x2161a98*/ void CreateLineSegmentWelded(UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, UnityEngine.UI.VertexHelper vh, int segmentIndex, int totalSegments, ref int endLeft, ref int endRight);
    /*0x21620bc*/ float RotatePointTowards(UnityEngine.Vector2 vertex, UnityEngine.Vector2 target);
}

class WireRenderer : UnityEngine.MonoBehaviour
{
    /*0x20*/ int maxSegments;
    /*0x24*/ bool roundedCaps;
    /*0x25*/ bool roundedCorners;
    /*0x28*/ UnityEngine.Gradient gradient;
    /*0x30*/ UnityEngine.Gradient gradientpower;
    /*0x38*/ UnityEngine.Gradient gradientshadow;
    /*0x40*/ UnityEngine.Gradient gradientburn;
    /*0x48*/ UnityEngine.Gradient gradientWhite;
    /*0x50*/ UnityEngine.Material CableMaterial;
    /*0x58*/ UnityEngine.Material CableMaterialInstance;
    /*0x60*/ UnityEngine.Material ShadowMaterial;
    /*0x68*/ UnityEngine.Material ShadowMaterialInstance;
    /*0x70*/ UnityEngine.Material DamagesMaterial;
    /*0x78*/ UnityEngine.Material DamagesMaterialInstance;
    /*0x80*/ UnityEngine.Material StrandsMaterial;
    /*0x88*/ UnityEngine.Material StrandsMaterialInstance;
    /*0x90*/ float shadowoffsetFactor;
    /*0x94*/ bool isFaulty;
    /*0x98*/ UnityEngine.Texture[] FaultyWires;
    /*0xa0*/ UnityEngine.Texture[] FaultyDamages;
    /*0xa8*/ float curvefactor;
    /*0xb0*/ UnityEngine.GameObject lr;
    /*0xb8*/ UnityEngine.GameObject shadowlr;
    /*0xc0*/ UnityEngine.Transform startNode;
    /*0xc8*/ UnityEngine.Transform endNode;
    /*0xd0*/ UnityEngine.GameObject powerGlow;
    /*0xd8*/ float _FalloffAmount;
    /*0xdc*/ float _FalloffTexOffset;
    /*0xe0*/ int DisplaySortIndex;
    /*0xe8*/ UnityEngine.GameObject VFXStartNode;
    /*0xf0*/ UnityEngine.GameObject VFXEndNode;
    /*0xf8*/ UnityEngine.Coroutine do_disintegrate_Coroutine;

    /*0x21646e4*/ WireRenderer();
    /*0x2162140*/ void OnEnable();
    /*0x2163c38*/ void OnValidate();
    /*0x2163c58*/ void OnDestroy();
    /*0x2163ec8*/ void Update();
    /*0x2162178*/ void CreateMaterialInstance();
    /*0x2162cb4*/ void UpdateLine();
    /*0x21639b0*/ void ShaderUpdates();
    /*0x2163f7c*/ bool IsValidPoint(UnityEngine.Vector3 pt);
    /*0x2163ee0*/ UnityEngine.Vector3 CubicBezier(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, UnityEngine.Vector3 p3, float t);
    /*0x2163ff4*/ void do_disintegrate(float t);
    /*0x21640d4*/ System.Collections.IEnumerator GradientLerpRoutine(UnityEngine.Gradient from, UnityEngine.Gradient to, float duration);
    /*0x21641a8*/ UnityEngine.Gradient LerpGradient(UnityEngine.Gradient a, UnityEngine.Gradient b, float t);
    /*0x2164058*/ System.Collections.IEnumerator do_disintegrateCoroutine(float t);
    /*0x21643ec*/ System.Collections.IEnumerator LerpRoutine(float from, float to, float duration, System.Action<float> setter);
    /*0x21644a4*/ float GetRangeMin(string fieldName);
    /*0x21645c4*/ float GetRangeMax(string fieldName);
    /*0x2164804*/ void <do_disintegrateCoroutine>b__44_0(float v);

    class <GradientLerpRoutine>d__42 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float duration;
        /*0x28*/ WireRenderer <>4__this;
        /*0x30*/ UnityEngine.Gradient from;
        /*0x38*/ UnityEngine.Gradient to;
        /*0x40*/ float <elapsed>5__2;

        /*0x2164180*/ <GradientLerpRoutine>d__42(int <>1__state);
        /*0x216480c*/ void System.IDisposable.Dispose();
        /*0x2164810*/ bool MoveNext();
        /*0x21648d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x21648e0*/ void System.Collections.IEnumerator.Reset();
        /*0x2164918*/ object System.Collections.IEnumerator.get_Current();
    }

    class <LerpRoutine>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float from;
        /*0x24*/ float to;
        /*0x28*/ float duration;
        /*0x30*/ System.Action<float> setter;
        /*0x38*/ float <elapsed>5__2;

        /*0x216447c*/ <LerpRoutine>d__45(int <>1__state);
        /*0x2164920*/ void System.IDisposable.Dispose();
        /*0x2164924*/ bool MoveNext();
        /*0x2164a18*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x2164a20*/ void System.Collections.IEnumerator.Reset();
        /*0x2164a58*/ object System.Collections.IEnumerator.get_Current();
    }

    class <do_disintegrateCoroutine>d__44 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WireRenderer <>4__this;
        /*0x28*/ float t;

        /*0x21643c4*/ <do_disintegrateCoroutine>d__44(int <>1__state);
        /*0x2164a60*/ void System.IDisposable.Dispose();
        /*0x2164a64*/ bool MoveNext();
        /*0x2164c04*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x2164c0c*/ void System.Collections.IEnumerator.Reset();
        /*0x2164c44*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WireRendererUI : UnityEngine.MonoBehaviour
{
    /*0x20*/ int maxSegments;
    /*0x28*/ UnityEngine.Gradient gradient;
    /*0x30*/ UnityEngine.Gradient gradientpower;
    /*0x38*/ UnityEngine.Gradient gradientshadow;
    /*0x40*/ UnityEngine.Gradient gradientburn;
    /*0x48*/ UnityEngine.Gradient gradientWhite;
    /*0x50*/ UnityEngine.Material CableMaterial;
    /*0x58*/ UnityEngine.Material CableMaterialInstance;
    /*0x60*/ UnityEngine.Material ShadowMaterial;
    /*0x68*/ UnityEngine.Material ShadowMaterialInstance;
    /*0x70*/ UnityEngine.Material DamagesMaterial;
    /*0x78*/ UnityEngine.Material DamagesMaterialInstance;
    /*0x80*/ UnityEngine.Material StrandsMaterial;
    /*0x88*/ UnityEngine.Material StrandsMaterialInstance;
    /*0x90*/ float shadowoffsetFactor;
    /*0x94*/ bool isFaulty;
    /*0x98*/ UnityEngine.Texture[] FaultyWires;
    /*0xa0*/ UnityEngine.Texture[] FaultyDamages;
    /*0xa8*/ float curvefactor;
    /*0xb0*/ UnityEngine.GameObject lr;
    /*0xb8*/ UnityEngine.GameObject damageslr;
    /*0xc0*/ UnityEngine.GameObject strandslr;
    /*0xc8*/ UnityEngine.GameObject shadowlr;
    /*0xd0*/ UnityEngine.Transform startNode;
    /*0xd8*/ UnityEngine.Transform endNode;
    /*0xe0*/ UnityEngine.GameObject powerGlow;
    /*0xe8*/ float _FalloffAmount;
    /*0xec*/ float _FalloffTexOffset;
    /*0xf0*/ UnityEngine.Coroutine do_disintegrate_Coroutine;

    /*0x2167074*/ WireRendererUI();
    /*0x2164c4c*/ void OnEnable();
    /*0x21665e8*/ void OnDestroy();
    /*0x2166858*/ void Update();
    /*0x2164c6c*/ void CreateMaterialInstance();
    /*0x21656cc*/ void UpdateLine();
    /*0x2166360*/ void ShaderUpdates();
    /*0x216690c*/ bool IsValidPoint(UnityEngine.Vector3 pt);
    /*0x2166870*/ UnityEngine.Vector3 CubicBezier(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, UnityEngine.Vector3 p3, float t);
    /*0x2166984*/ void do_disintegrate(float t);
    /*0x2166a64*/ System.Collections.IEnumerator GradientLerpRoutine(UnityEngine.Gradient from, UnityEngine.Gradient to, float duration);
    /*0x2166b38*/ UnityEngine.Gradient LerpGradient(UnityEngine.Gradient a, UnityEngine.Gradient b, float t);
    /*0x21669e8*/ System.Collections.IEnumerator do_disintegrateCoroutine(float t);
    /*0x2166d7c*/ System.Collections.IEnumerator LerpRoutine(float from, float to, float duration, System.Action<float> setter);
    /*0x2166e34*/ float GetRangeMin(string fieldName);
    /*0x2166f54*/ float GetRangeMax(string fieldName);
    /*0x216718c*/ void <do_disintegrateCoroutine>b__40_0(float v);

    class <GradientLerpRoutine>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float duration;
        /*0x28*/ WireRendererUI <>4__this;
        /*0x30*/ UnityEngine.Gradient from;
        /*0x38*/ UnityEngine.Gradient to;
        /*0x40*/ float <elapsed>5__2;

        /*0x2166b10*/ <GradientLerpRoutine>d__38(int <>1__state);
        /*0x2167194*/ void System.IDisposable.Dispose();
        /*0x2167198*/ bool MoveNext();
        /*0x2167260*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x2167268*/ void System.Collections.IEnumerator.Reset();
        /*0x21672a0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <LerpRoutine>d__41 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float from;
        /*0x24*/ float to;
        /*0x28*/ float duration;
        /*0x30*/ System.Action<float> setter;
        /*0x38*/ float <elapsed>5__2;

        /*0x2166e0c*/ <LerpRoutine>d__41(int <>1__state);
        /*0x21672a8*/ void System.IDisposable.Dispose();
        /*0x21672ac*/ bool MoveNext();
        /*0x21673a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x21673a8*/ void System.Collections.IEnumerator.Reset();
        /*0x21673e0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <do_disintegrateCoroutine>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WireRendererUI <>4__this;
        /*0x28*/ float t;

        /*0x2166d54*/ <do_disintegrateCoroutine>d__40(int <>1__state);
        /*0x21673e8*/ void System.IDisposable.Dispose();
        /*0x21673ec*/ bool MoveNext();
        /*0x2167560*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x2167568*/ void System.Collections.IEnumerator.Reset();
        /*0x21675a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class PolygonController : UnityEngine.MonoBehaviour
{
    /*0x20*/ UnityEngine.Vector2[] corner;
    /*0x28*/ UnityEngine.MaterialPropertyBlock matBlock;

    /*0x2167790*/ PolygonController();
    /*0x21675a8*/ void Start();
    /*0x216778c*/ void OnValidate();
    /*0x21675ac*/ void UpdateMaterial();
}

class MapPathingLineDebugger : UnityEngine.MonoBehaviour
{
    static /*0x0*/ UnityEngine.Material _pathLineMaterial;
    /*0x20*/ UnityEngine.LineRenderer _lineRenderer;
    /*0x28*/ bool _showDebugPathingLines;

    static /*0x2167798*/ UnityEngine.Material get_PathLineMaterial();
    /*0x2167c10*/ MapPathingLineDebugger();
    /*0x2167894*/ void SetupAvatarDebugPathingLine();
    /*0x21679f4*/ void DrawDebugPathingLine(System.Collections.Generic.List<UnityEngine.Vector3> path);
    /*0x2167ad8*/ void ClearDebugPathingLine();
    /*0x2167b60*/ void SetShowDebugPathingLines(bool showDebugPathingLines);
    /*0x2167b70*/ void RemoveAvatarDebugPathingLine();
}

class TaperText : UnityEngine.MonoBehaviour
{
    /*0x20*/ TaperText.Edge taperEdge;
    /*0x24*/ float factor;
    /*0x28*/ TMPro.TextMeshProUGUI textComponent;
    /*0x30*/ bool isInitialized;

    /*0x21684b0*/ TaperText();
    /*0x2167c18*/ void Reset();
    /*0x2167cc8*/ void OnValidate();
    /*0x2167d78*/ void OnEnable();
    /*0x2167e28*/ void Update();

    enum Edge
    {
        Left = 0,
        Right = 1,
        Top = 2,
        Down = 3,
    }
}

class PropertyChangeBase : RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged
{
    /*0x10*/ RedCrow.Collections.WorryFreeList<System.Action<string>> m_propertyChanged;

    /*0x2168658*/ PropertyChangeBase();
    /*0x21684c0*/ void add_PropertyChanged(System.Action<string> value);
    /*0x216856c*/ void remove_PropertyChanged(System.Action<string> value);
    /*0x21685cc*/ void OnPropertyChanged(string propertyName);
}

class DefaultValueHelper
{
    static /*0x0*/ System.Collections.Generic.Dictionary<System.Type, object> typeDefaults;

    static /*0x21687c4*/ DefaultValueHelper();
    static /*0x2168660*/ object GetDefaultValue(System.Type type);
    /*0x21687bc*/ DefaultValueHelper();
}

class ImageTextModel : PropertyChangeBase
{
    static string IMAGE_SPRITE = "ImageSprite";
    static string TEXT_STRING = "TextString";
    /*0x18*/ UnityEngine.Sprite _binderPropImageSprite;
    /*0x20*/ string _binderPropTextString;

    /*0x21689bc*/ ImageTextModel();
    /*0x216885c*/ UnityEngine.Sprite get_ImageSprite();
    /*0x2168864*/ void set_ImageSprite(UnityEngine.Sprite value);
    /*0x2168920*/ string get_TextString();
    /*0x2168928*/ void set_TextString(string value);
}

class SafeAreaAnchoredImage : UnityEngine.MonoBehaviour
{
    /*0x20*/ RedCrow.UI.UUIF.Core.UILayer m_uiLayer;

    /*0x2168e1c*/ SafeAreaAnchoredImage();
    /*0x2168b10*/ void OnEnable();
}

class SystemLanguageQuerier
{
    static /*0x2168e24*/ string GetSystemLocale();
    static /*0x21691b0*/ string GetSystemLanguageCode();
    static /*0x21691b4*/ RedCrow.UI.UUIF.Localization.Language GetSystemLanguage();
    static /*0x2169a2c*/ System.ValueTuple<string, string> GetLocaleAndLanguageFromDevice();
    static /*0x2168e38*/ SystemLanguageQuerier.DetectedLocale GetDetectedLocale();
    /*0x2169ed8*/ SystemLanguageQuerier();

    struct DetectedLocale
    {
        /*0x10*/ string mLanguage;
        /*0x18*/ string mCountry;

        /*0x2169ea8*/ DetectedLocale(string language, string country);
        /*0x2169ee0*/ string get_Language();
        /*0x2169ee8*/ string get_Country();
    }
}

class CustomPlayableExtensions
{
    static /*0x2169ef0*/ void ResetTime(UnityEngine.Playables.Playable playable, float time);
}

class SimpleAnimation : UnityEngine.MonoBehaviour
{
    static string kDefaultStateName = "Default";
    /*0x20*/ UnityEngine.Playables.PlayableGraph m_Graph;
    /*0x30*/ UnityEngine.Playables.PlayableHandle m_LayerMixer;
    /*0x40*/ UnityEngine.Playables.PlayableHandle m_TransitionMixer;
    /*0x50*/ UnityEngine.Animator m_Animator;
    /*0x58*/ bool m_Initialized;
    /*0x59*/ bool m_IsPlaying;
    /*0x60*/ SimpleAnimationPlayable m_Playable;
    /*0x68*/ bool m_PlayAutomatically;
    /*0x69*/ bool m_AnimatePhysics;
    /*0x6c*/ UnityEngine.AnimatorCullingMode m_CullingMode;
    /*0x70*/ UnityEngine.WrapMode m_WrapMode;
    /*0x78*/ UnityEngine.AnimationClip m_Clip;
    /*0x80*/ SimpleAnimation.EditorState[] m_States;

    static /*0x216a120*/ void LegacyClipCheck(UnityEngine.AnimationClip clip);
    /*0x216c6d4*/ SimpleAnimation();
    /*0x2169f7c*/ UnityEngine.Animator get_animator();
    /*0x216a028*/ bool get_animatePhysics();
    /*0x216a030*/ void set_animatePhysics(bool value);
    /*0x216a058*/ UnityEngine.AnimatorCullingMode get_cullingMode();
    /*0x216a074*/ void set_cullingMode(UnityEngine.AnimatorCullingMode value);
    /*0x216a09c*/ bool get_isPlaying();
    /*0x216a0d8*/ bool get_playAutomatically();
    /*0x216a0e0*/ void set_playAutomatically(bool value);
    /*0x216a0e8*/ UnityEngine.AnimationClip get_clip();
    /*0x216a0f0*/ void set_clip(UnityEngine.AnimationClip value);
    /*0x216a1ec*/ UnityEngine.WrapMode get_wrapMode();
    /*0x216a1f4*/ void set_wrapMode(UnityEngine.WrapMode value);
    /*0x216a1fc*/ void AddClip(UnityEngine.AnimationClip clip, string newName);
    /*0x216a6a0*/ void Blend(string stateName, float targetWeight, float fadeLength);
    /*0x216a820*/ void CrossFade(string stateName, float fadeLength);
    /*0x216a970*/ void CrossFadeQueued(string stateName, float fadeLength, UnityEngine.QueueMode queueMode);
    /*0x216aad0*/ int GetClipCount();
    /*0x216ab44*/ bool IsPlaying(string stateName);
    /*0x216ab9c*/ void Stop();
    /*0x216ac48*/ void Stop(string stateName);
    /*0x216ad28*/ void Sample();
    /*0x216ad34*/ bool Play();
    /*0x216a62c*/ void AddState(UnityEngine.AnimationClip clip, string name);
    /*0x216b438*/ void RemoveState(string name);
    /*0x216b564*/ bool Play(string stateName);
    /*0x216b5c0*/ void PlayQueued(string stateName, UnityEngine.QueueMode queueMode);
    /*0x216b700*/ void RemoveClip(UnityEngine.AnimationClip clip);
    /*0x216b814*/ void Rewind();
    /*0x216b8b4*/ void Rewind(string stateName);
    /*0x216b9b4*/ SimpleAnimation.State GetState(string stateName);
    /*0x216bb24*/ System.Collections.Generic.IEnumerable<SimpleAnimation.State> GetStates();
    /*0x216bbbc*/ SimpleAnimation.State get_Item(string name);
    /*0x216bbc0*/ void SetAllStateSpeed(float value);
    /*0x216a714*/ void Kick();
    /*0x216bc30*/ void SetTimeUpdateMode(UnityEngine.Playables.DirectorUpdateMode mode);
    /*0x216bc3c*/ void OnEnable();
    /*0x216bc88*/ void OnDisable();
    /*0x216bcc0*/ void Reset();
    /*0x216a234*/ void Initialize();
    /*0x216bdc0*/ void EnsureDefaultStateExists();
    /*0x216be98*/ void Awake();
    /*0x216be9c*/ void OnDestroy();
    /*0x216becc*/ void OnPlayableDone();
    /*0x216afa4*/ void RebuildStates();
    /*0x216beec*/ SimpleAnimation.EditorState CreateDefaultEditorState();
    /*0x216bf88*/ void InvalidLegacyClipError(string clipName, string stateName);
    /*0x216c0c0*/ void OnValidate();

    interface State
    {
        /*0x1f2fe14*/ bool get_enabled();
        /*0x1f30a84*/ void set_enabled(bool value);
        /*0x1f2fe14*/ bool get_isValid();
        /*0x1f30804*/ float get_time();
        void set_time(float value);
        /*0x1f30804*/ float get_normalizedTime();
        void set_normalizedTime(float value);
        /*0x1f30804*/ float get_animClipPlaybackSpeed();
        void set_animClipPlaybackSpeed(float value);
        /*0x1f30804*/ float get_speed();
        void set_speed(float value);
        /*0x1f30214*/ string get_name();
        /*0x1f30ebc*/ void set_name(string value);
        /*0x1f30804*/ float get_weight();
        void set_weight(float value);
        /*0x1f30804*/ float get_length();
        /*0x1f30214*/ UnityEngine.AnimationClip get_clip();
        /*0x1f2ffc8*/ UnityEngine.WrapMode get_wrapMode();
        /*0x1f30b78*/ void set_wrapMode(UnityEngine.WrapMode value);
    }

    class StateEnumerable : System.Collections.Generic.IEnumerable<SimpleAnimation.State>, System.Collections.IEnumerable
    {
        /*0x10*/ SimpleAnimation m_Owner;

        /*0x216bb8c*/ StateEnumerable(SimpleAnimation owner);
        /*0x216c6e8*/ System.Collections.Generic.IEnumerator<SimpleAnimation.State> GetEnumerator();
        /*0x216c834*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();

        class StateEnumerator : System.Collections.Generic.IEnumerator<SimpleAnimation.State>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ SimpleAnimation m_Owner;
            /*0x18*/ System.Collections.Generic.IEnumerator<SimpleAnimationPlayable.IState> m_Impl;

            /*0x216c744*/ StateEnumerator(SimpleAnimation owner);
            /*0x216c99c*/ SimpleAnimation.State GetCurrent();
            /*0x216ca7c*/ object System.Collections.IEnumerator.get_Current();
            /*0x216ca80*/ SimpleAnimation.State System.Collections.Generic.IEnumerator<SimpleAnimation.State>.get_Current();
            /*0x216ca84*/ void Dispose();
            /*0x216ca88*/ bool MoveNext();
            /*0x216c8f8*/ void Reset();
        }
    }

    class StateImpl : SimpleAnimation.State
    {
        /*0x10*/ SimpleAnimationPlayable.IState m_StateHandle;
        /*0x18*/ SimpleAnimation m_Component;

        /*0x216bae0*/ StateImpl(SimpleAnimationPlayable.IState handle, SimpleAnimation component);
        /*0x216cb28*/ bool SimpleAnimation.State.get_enabled();
        /*0x216cbcc*/ void SimpleAnimation.State.set_enabled(bool value);
        /*0x216cca4*/ bool SimpleAnimation.State.get_isValid();
        /*0x216cd44*/ float SimpleAnimation.State.get_time();
        /*0x216cde8*/ void SimpleAnimation.State.set_time(float value);
        /*0x216cec4*/ float SimpleAnimation.State.get_normalizedTime();
        /*0x216cf68*/ void SimpleAnimation.State.set_normalizedTime(float value);
        /*0x216d044*/ float SimpleAnimation.State.get_animClipPlaybackSpeed();
        /*0x216d0e8*/ void SimpleAnimation.State.set_animClipPlaybackSpeed(float value);
        /*0x216d1c4*/ float SimpleAnimation.State.get_speed();
        /*0x216d268*/ void SimpleAnimation.State.set_speed(float value);
        /*0x216d344*/ string SimpleAnimation.State.get_name();
        /*0x216d3e8*/ void SimpleAnimation.State.set_name(string value);
        /*0x216d494*/ float SimpleAnimation.State.get_weight();
        /*0x216d538*/ void SimpleAnimation.State.set_weight(float value);
        /*0x216d614*/ float SimpleAnimation.State.get_length();
        /*0x216d6b8*/ UnityEngine.AnimationClip SimpleAnimation.State.get_clip();
        /*0x216d75c*/ UnityEngine.WrapMode SimpleAnimation.State.get_wrapMode();
        /*0x216d800*/ void SimpleAnimation.State.set_wrapMode(UnityEngine.WrapMode value);
    }

    class EditorState
    {
        /*0x10*/ UnityEngine.AnimationClip clip;
        /*0x18*/ string name;
        /*0x20*/ bool defaultState;

        /*0x216bdb8*/ EditorState();
    }
}

class SimpleAnimationPlayable : UnityEngine.Playables.PlayableBehaviour
{
    /*0x10*/ System.Collections.Generic.LinkedList<SimpleAnimationPlayable.QueuedState> m_StateQueue;
    /*0x18*/ SimpleAnimationPlayable.StateManagement m_States;
    /*0x20*/ bool m_Initialized;
    /*0x21*/ bool m_KeepStoppedPlayablesConnected;
    /*0x28*/ UnityEngine.Playables.Playable m_ActualPlayable;
    /*0x38*/ UnityEngine.Animations.AnimationMixerPlayable m_Mixer;
    /*0x48*/ System.Action onDone;
    /*0x50*/ int m_StatesVersion;

    /*0x216bcf0*/ SimpleAnimationPlayable();
    /*0x216d868*/ bool get_keepStoppedPlayablesConnected();
    /*0x216d870*/ void set_keepStoppedPlayablesConnected(bool value);
    /*0x216d888*/ void UpdateStoppedPlayablesConnections();
    /*0x216da40*/ UnityEngine.Playables.Playable get_self();
    /*0x216be8c*/ UnityEngine.Playables.Playable get_playable();
    /*0x216da4c*/ UnityEngine.Playables.PlayableGraph get_graph();
    /*0x216daa8*/ UnityEngine.Playables.Playable GetInput(int index);
    /*0x216db74*/ void OnPlayableCreate(UnityEngine.Playables.Playable playable);
    /*0x216c890*/ System.Collections.Generic.IEnumerable<SimpleAnimationPlayable.IState> GetStates();
    /*0x216bbd4*/ void SetAllStateSpeed(float value);
    /*0x216ba38*/ SimpleAnimationPlayable.IState GetState(string name);
    /*0x216dd40*/ SimpleAnimationPlayable.StateInfo DoAddClip(string name, UnityEngine.AnimationClip clip);
    /*0x216aebc*/ bool AddClip(UnityEngine.AnimationClip clip, string name);
    /*0x216b480*/ bool RemoveClip(string name);
    /*0x216b7ec*/ bool RemoveClip(UnityEngine.AnimationClip clip);
    /*0x216adf8*/ bool Play(string name);
    /*0x216e1a8*/ bool Play(int index);
    /*0x216b62c*/ bool PlayQueued(string name, UnityEngine.QueueMode queueMode);
    /*0x216e2f4*/ bool PlayQueued(int index, UnityEngine.QueueMode queueMode);
    /*0x216b8fc*/ void Rewind(string name);
    /*0x216e550*/ void Rewind(int index);
    /*0x216b84c*/ void Rewind();
    /*0x216e04c*/ void RemoveClones(SimpleAnimationPlayable.StateInfo state);
    /*0x216ac5c*/ bool Stop(string name);
    /*0x216e288*/ void DoStop(int index);
    /*0x216abb0*/ bool StopAll();
    /*0x216a0c0*/ bool IsPlaying();
    /*0x216ab58*/ bool IsPlaying(string stateName);
    /*0x216e56c*/ bool IsClonePlaying(SimpleAnimationPlayable.StateInfo state);
    /*0x216aae4*/ int GetClipCount();
    /*0x216e5fc*/ void SetupLerp(SimpleAnimationPlayable.StateInfo state, float targetWeight, float time);
    /*0x216e704*/ bool Crossfade(int index, float time);
    /*0x216e3c0*/ SimpleAnimationPlayable.StateInfo CloneState(int index);
    /*0x216a88c*/ bool Crossfade(string name, float time);
    /*0x216a9ec*/ bool CrossfadeQueued(string name, float time, UnityEngine.QueueMode queueMode);
    /*0x216e7f4*/ bool CrossfadeQueued(int index, float time, UnityEngine.QueueMode queueMode);
    /*0x216e8d0*/ bool Blend(int index, float targetWeight, float time);
    /*0x216a744*/ bool Blend(string name, float targetWeight, float time);
    /*0x216e968*/ void OnGraphStop(UnityEngine.Playables.Playable playable);
    /*0x216df7c*/ void UpdateDoneStatus();
    /*0x216d9a0*/ void DisconnectInput(int index);
    /*0x216d8fc*/ void ConnectInput(int index);
    /*0x216eab0*/ void UpdateStates(float deltaTime);
    /*0x216f0d8*/ float CalculateQueueTimes();
    /*0x216f21c*/ void ClearQueuedStates();
    /*0x216f41c*/ void UpdateQueuedStates();
    /*0x216f52c*/ void InvalidateStateTimes();
    /*0x216f590*/ void PrepareFrame(UnityEngine.Playables.Playable owner, UnityEngine.Playables.FrameData data);
    /*0x216f5d0*/ bool ValidateInput(int index, UnityEngine.Playables.Playable input);
    /*0x216f714*/ bool ValidateIndex(int index);
    /*0x216e03c*/ void InvalidateStates();
    /*0x216e4c4*/ SimpleAnimationPlayable.StateHandle StateInfoToHandle(SimpleAnimationPlayable.StateInfo info);

    class StateEnumerable : System.Collections.Generic.IEnumerable<SimpleAnimationPlayable.IState>, System.Collections.IEnumerable
    {
        /*0x10*/ SimpleAnimationPlayable m_Owner;

        /*0x216dcc0*/ StateEnumerable(SimpleAnimationPlayable owner);
        /*0x216f740*/ System.Collections.Generic.IEnumerator<SimpleAnimationPlayable.IState> GetEnumerator();
        /*0x216f7f4*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();

        class StateEnumerator : System.Collections.Generic.IEnumerator<SimpleAnimationPlayable.IState>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int m_Index;
            /*0x14*/ int m_Version;
            /*0x18*/ SimpleAnimationPlayable m_Owner;

            /*0x216f79c*/ StateEnumerator(SimpleAnimationPlayable owner);
            /*0x216f8c0*/ bool IsValid();
            /*0x216f8e4*/ SimpleAnimationPlayable.IState GetCurrentHandle(int index);
            /*0x216fa18*/ object System.Collections.IEnumerator.get_Current();
            /*0x216fa20*/ SimpleAnimationPlayable.IState System.Collections.Generic.IEnumerator<SimpleAnimationPlayable.IState>.get_Current();
            /*0x216fa28*/ void Dispose();
            /*0x216fa2c*/ bool MoveNext();
            /*0x216f850*/ void Reset();
        }
    }

    interface IState
    {
        /*0x1f2fe14*/ bool IsValid();
        /*0x1f2fe14*/ bool get_enabled();
        /*0x1f30a84*/ void set_enabled(bool value);
        /*0x1f30804*/ float get_time();
        void set_time(float value);
        /*0x1f30804*/ float get_normalizedTime();
        void set_normalizedTime(float value);
        /*0x1f30804*/ float get_animClipPlaybackSpeed();
        void set_animClipPlaybackSpeed(float value);
        /*0x1f30804*/ float get_speed();
        void set_speed(float value);
        /*0x1f30214*/ string get_name();
        /*0x1f30ebc*/ void set_name(string value);
        /*0x1f30804*/ float get_weight();
        void set_weight(float value);
        /*0x1f30804*/ float get_length();
        /*0x1f30214*/ UnityEngine.AnimationClip get_clip();
        /*0x1f2ffc8*/ UnityEngine.WrapMode get_wrapMode();
    }

    class StateHandle : SimpleAnimationPlayable.IState
    {
        /*0x10*/ SimpleAnimationPlayable m_Parent;
        /*0x18*/ int m_Index;
        /*0x20*/ UnityEngine.Playables.Playable m_Target;

        /*0x216dcf0*/ StateHandle(SimpleAnimationPlayable s, int index, UnityEngine.Playables.Playable target);
        /*0x216faf4*/ bool IsValid();
        /*0x216fb14*/ bool get_enabled();
        /*0x216fb9c*/ void set_enabled(bool value);
        /*0x216fc48*/ float get_time();
        /*0x216fcc4*/ void set_time(float value);
        /*0x216fd50*/ float get_normalizedTime();
        /*0x216fe04*/ void set_normalizedTime(float value);
        /*0x216feb8*/ float get_animClipPlaybackSpeed();
        /*0x216ff34*/ void set_animClipPlaybackSpeed(float value);
        /*0x216ffc0*/ float get_speed();
        /*0x217003c*/ void set_speed(float value);
        /*0x21700c8*/ string get_name();
        /*0x2170144*/ void set_name(string value);
        /*0x2170208*/ float get_weight();
        /*0x2170290*/ void set_weight(float value);
        /*0x2170358*/ float get_length();
        /*0x21703d4*/ UnityEngine.AnimationClip get_clip();
        /*0x2170450*/ UnityEngine.WrapMode get_wrapMode();
        /*0x21704cc*/ int get_index();
    }

    class StateInfo
    {
        /*0x10*/ bool m_Enabled;
        /*0x14*/ int m_Index;
        /*0x18*/ string m_StateName;
        /*0x20*/ bool m_Fading;
        /*0x24*/ float m_Time;
        /*0x28*/ float m_TargetWeight;
        /*0x2c*/ float m_Weight;
        /*0x30*/ float m_FadeSpeed;
        /*0x34*/ float m_AnimClipPlaybackSpeed;
        /*0x38*/ float m_LocalSpeed;
        /*0x40*/ UnityEngine.AnimationClip m_Clip;
        /*0x48*/ UnityEngine.Playables.Playable m_Playable;
        /*0x58*/ UnityEngine.WrapMode m_WrapMode;
        /*0x5c*/ bool m_IsClone;
        /*0x60*/ SimpleAnimationPlayable.StateHandle m_ParentState;
        /*0x68*/ bool m_WeightDirty;
        /*0x69*/ bool m_EnabledDirty;
        /*0x6a*/ bool m_TimeIsUpToDate;

        /*0x21707c8*/ StateInfo();
        /*0x216dee4*/ void Initialize(string name, UnityEngine.AnimationClip clip, UnityEngine.WrapMode wrapMode);
        /*0x216efdc*/ float GetTime();
        /*0x21704d4*/ void SetTime(float newTime);
        /*0x216e254*/ void Enable();
        /*0x216f0b8*/ void Disable();
        /*0x216df20*/ void Pause();
        /*0x216eec0*/ void Play();
        /*0x216ee30*/ void Stop();
        /*0x216e270*/ void ForceWeight(float weight);
        /*0x216ee20*/ void SetWeight(float weight);
        /*0x216e6e8*/ void FadeTo(float weight, float speed);
        /*0x2170588*/ void DestroyPlayable();
        /*0x216e7d0*/ void SetAsCloneOf(SimpleAnimationPlayable.StateHandle handle);
        /*0x2170644*/ bool get_enabled();
        /*0x217064c*/ int get_index();
        /*0x2170654*/ void set_index(int value);
        /*0x217065c*/ string get_stateName();
        /*0x2170664*/ void set_stateName(string value);
        /*0x217066c*/ bool get_fading();
        /*0x2170674*/ float get_targetWeight();
        /*0x217067c*/ float get_weight();
        /*0x2170684*/ float get_fadeSpeed();
        /*0x217068c*/ float get_animClipPlaybackSpeed();
        /*0x2170694*/ void set_animClipPlaybackSpeed(float value);
        /*0x216ef7c*/ float get_speed();
        /*0x217070c*/ void set_speed(float value);
        /*0x216f058*/ float get_playableDuration();
        /*0x2170784*/ UnityEngine.AnimationClip get_clip();
        /*0x217078c*/ void SetPlayable(UnityEngine.Playables.Playable playable);
        /*0x216ef1c*/ bool get_isDone();
        /*0x2170794*/ UnityEngine.Playables.Playable get_playable();
        /*0x21707a0*/ UnityEngine.WrapMode get_wrapMode();
        /*0x21707a8*/ bool get_isClone();
        /*0x21707b0*/ SimpleAnimationPlayable.StateHandle get_parentState();
        /*0x21707b8*/ bool get_enabledDirty();
        /*0x21707c0*/ bool get_weightDirty();
        /*0x216f0d0*/ void ResetDirtyFlags();
        /*0x216f588*/ void InvalidateTime();
    }

    class StateManagement
    {
        /*0x10*/ System.Collections.Generic.List<SimpleAnimationPlayable.StateInfo> m_States;
        /*0x18*/ int m_Count;

        /*0x2170be4*/ StateManagement();
        /*0x2170b70*/ int get_Count();
        /*0x2170b78*/ SimpleAnimationPlayable.StateInfo get_Item(int i);
        /*0x2170c6c*/ SimpleAnimationPlayable.StateInfo InsertState();
        /*0x2170e30*/ bool AnyStatePlaying();
        /*0x2170f40*/ void RemoveState(int index);
        /*0x2171004*/ bool RemoveClip(UnityEngine.AnimationClip clip);
        /*0x2171100*/ SimpleAnimationPlayable.StateInfo FindState(string name);
        /*0x21711bc*/ void EnableState(int index);
        /*0x2171234*/ void DisableState(int index);
        /*0x21712ac*/ void SetInputWeight(int index, float weight);
        /*0x217132c*/ void SetStateTime(int index, float time);
        /*0x21713ac*/ float GetStateTime(int index);
        /*0x2171424*/ bool IsCloneOf(int potentialCloneIndex, int originalIndex);
        /*0x21714bc*/ float GetAnimClipPlaybackSpeed(int index);
        /*0x2171530*/ void SetAnimClipPlaybackSpeed(int index, float value);
        /*0x21715b0*/ float GetStateSpeed(int index);
        /*0x2171628*/ void SetStateSpeed(int index, float value);
        /*0x21716a8*/ float GetInputWeight(int index);
        /*0x217171c*/ float GetStateLength(int index);
        /*0x2171830*/ float GetClipLength(int index);
        /*0x21718f0*/ float GetStatePlayableDuration(int index);
        /*0x2171968*/ UnityEngine.AnimationClip GetStateClip(int index);
        /*0x21719dc*/ UnityEngine.WrapMode GetStateWrapMode(int index);
        /*0x2171a50*/ string GetStateName(int index);
        /*0x2171ac4*/ void SetStateName(int index, string name);
        /*0x2171b44*/ void StopState(int index, bool cleanup);

        class <>c
        {
            static /*0x0*/ SimpleAnimationPlayable.StateManagement.<> <>9;
            static /*0x8*/ System.Predicate<SimpleAnimationPlayable.StateInfo> <>9__7_0;
            static /*0x10*/ System.Predicate<SimpleAnimationPlayable.StateInfo> <>9__8_0;

            static /*0x2171bdc*/ <>c();
            /*0x2171c44*/ <>c();
            /*0x2171c4c*/ bool <InsertState>b__7_0(SimpleAnimationPlayable.StateInfo s);
            /*0x2171c58*/ bool <AnyStatePlaying>b__8_0(SimpleAnimationPlayable.StateInfo s);
        }
    }

    struct QueuedState
    {
        /*0x10*/ SimpleAnimationPlayable.StateHandle state;
        /*0x18*/ float fadeTime;

        /*0x2171c74*/ QueuedState(SimpleAnimationPlayable.StateHandle s, float t);
    }
}

class SetDirty : UnityEngine.MonoBehaviour
{
    /*0x20*/ UnityEngine.UI.Graphic m_graphic;

    /*0x2171d24*/ SetDirty();
    /*0x2171c9c*/ void Reset();
    /*0x2171d04*/ void Update();
}

class UICornersGradient : UnityEngine.UI.BaseMeshEffect
{
    /*0x28*/ UnityEngine.Color m_topLeftColor;
    /*0x38*/ UnityEngine.Color m_topRightColor;
    /*0x48*/ UnityEngine.Color m_bottomRightColor;
    /*0x58*/ UnityEngine.Color m_bottomLeftColor;

    /*0x2172190*/ UICornersGradient();
    /*0x2171d2c*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
}

class UIGradient : UnityEngine.UI.BaseMeshEffect
{
    /*0x28*/ UnityEngine.Color m_color1;
    /*0x38*/ UnityEngine.Color m_color2;
    /*0x48*/ float m_angle;
    /*0x4c*/ bool m_ignoreRatio;

    /*0x2172550*/ UIGradient();
    /*0x21721ac*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
}

class UIGradientUtils
{
    static /*0x0*/ UnityEngine.Vector2[] ms_verticesPositions;

    static /*0x21727bc*/ UIGradientUtils();
    static /*0x2172068*/ UIGradientUtils.Matrix2x3 LocalPositionMatrix(UnityEngine.Rect rect, UnityEngine.Vector2 dir);
    static /*0x217257c*/ UnityEngine.Vector2[] get_VerticePositions();
    static /*0x2172464*/ UnityEngine.Vector2 RotationDir(float angle);
    static /*0x217248c*/ UnityEngine.Vector2 CompensateAspectRatio(UnityEngine.Rect rect, UnityEngine.Vector2 dir);
    static /*0x21725d4*/ float InverseLerp(float a, float b, float v);
    static /*0x2172104*/ UnityEngine.Color Bilerp(UnityEngine.Color a1, UnityEngine.Color a2, UnityEngine.Color b1, UnityEngine.Color b2, UnityEngine.Vector2 t);
    static /*0x21725f8*/ void Lerp(UnityEngine.UIVertex a, UnityEngine.UIVertex b, float t, ref UnityEngine.UIVertex c);

    struct Matrix2x3
    {
        /*0x10*/ float m00;
        /*0x14*/ float m01;
        /*0x18*/ float m02;
        /*0x1c*/ float m10;
        /*0x20*/ float m11;
        /*0x24*/ float m12;

        static /*0x21720d0*/ UnityEngine.Vector2 op_Multiply(UIGradientUtils.Matrix2x3 m, UnityEngine.Vector2 v);
        /*0x217256c*/ Matrix2x3(float m00, float m01, float m02, float m10, float m11, float m12);
    }
}

class UITextCornersGradient : UnityEngine.UI.BaseMeshEffect
{
    /*0x28*/ UnityEngine.Color m_topLeftColor;
    /*0x38*/ UnityEngine.Color m_topRightColor;
    /*0x48*/ UnityEngine.Color m_bottomRightColor;
    /*0x58*/ UnityEngine.Color m_bottomLeftColor;

    /*0x2172b78*/ UITextCornersGradient();
    /*0x2172934*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
}

class UITextGradient : UnityEngine.UI.BaseMeshEffect
{
    /*0x28*/ UnityEngine.Color m_color1;
    /*0x38*/ UnityEngine.Color m_color2;
    /*0x48*/ float m_angle;

    /*0x2172e30*/ UITextGradient();
    /*0x2172b94*/ void ModifyMesh(UnityEngine.UI.VertexHelper vh);
}

class BoostSpawnAnimation : Yeti.ProgrammaticAnimation
{
    /*0x48*/ UnityEngine.CanvasGroup _canvasGroup;
    /*0x50*/ float _fadeInTime;
    /*0x54*/ float _fadeOutTime;
    /*0x58*/ UnityEngine.GameObject _backgroundVfxContainer;
    /*0x60*/ Yeti.Pinger _backgroundVfxPinger;
    /*0x68*/ UnityEngine.GameObject _boostIcon;
    /*0x70*/ Yeti.ScalePop _boostIconScalePopAnimation;
    /*0x78*/ float _pingTime;
    /*0x7c*/ bool _fireDoober;
    /*0x80*/ UnityEngine.GameObject _doober;
    /*0x88*/ UnityEngine.Transform _dooberStart;
    /*0x90*/ UnityEngine.Transform _dooberTarget;
    /*0x98*/ Yeti.Pinger _dooberTargetPinger;
    /*0xa0*/ bool _playOnEnable;
    /*0xa8*/ DG.Tweening.Sequence _boostSpawnAnimationSequence;
    /*0xb0*/ DG.Tweening.Sequence _dooberSequence;

    /*0x21735e4*/ BoostSpawnAnimation();
    /*0x2172e44*/ void OnEnable();
    /*0x2172e58*/ void OnPlay();
    /*0x2173160*/ void OnSkip();
    /*0x2173168*/ void OnStop();
    /*0x2173198*/ void PingBackground();
    /*0x21731b0*/ void PopBoostIcon();
    /*0x21731c8*/ void HandleDoober();
    /*0x21731ec*/ System.Collections.IEnumerator PrepDoober(bool fireDoober);
    /*0x2173294*/ void FireDoober();
    /*0x2173504*/ void PingDooberTarget();
    /*0x217351c*/ void FinishAnimation();
    /*0x2173534*/ void OnPause();
    /*0x217358c*/ void OnResume();

    class <PrepDoober>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BoostSpawnAnimation <>4__this;
        /*0x28*/ bool fireDoober;

        /*0x217326c*/ <PrepDoober>d__23(int <>1__state);
        /*0x21735ec*/ void System.IDisposable.Dispose();
        /*0x21735f0*/ bool MoveNext();
        /*0x21736d4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x21736dc*/ void System.Collections.IEnumerator.Reset();
        /*0x2173714*/ object System.Collections.IEnumerator.get_Current();
    }
}

class spriteDamageState : UnityEngine.MonoBehaviour
{
    /*0x20*/ UnityEngine.Color newColor;
    /*0x30*/ int appear;
    /*0x34*/ int disappear;
    /*0x38*/ UnityEngine.SpriteRenderer rend;

    /*0x21737e8*/ spriteDamageState();
    /*0x217371c*/ void OnValidate();
}

class TransitionSpinner : Yeti.ProgrammaticAnimation
{
    /*0x48*/ bool _playOnEnable;
    /*0x50*/ UnityEngine.UI.Graphic _spinImage;
    /*0x58*/ float _spinTime;
    /*0x5c*/ UnityEngine.Vector3 _spinTarget;
    /*0x68*/ UnityEngine.Vector3 _startScale;
    /*0x74*/ UnityEngine.Vector3 _targetScale;
    /*0x80*/ DG.Tweening.Ease _spinEaseType;
    /*0x88*/ UnityEngine.UI.Graphic _fadeImage;
    /*0x90*/ UnityEngine.Color _startColor;
    /*0xa0*/ UnityEngine.Color _targetColor;
    /*0xb0*/ float _fadeTime;
    /*0xb4*/ DG.Tweening.Ease _fadeEaseType;
    /*0xb8*/ float _delayBeforeFading;
    /*0xc0*/ DG.Tweening.Sequence _transitionSequence;

    /*0x2173af4*/ TransitionSpinner();
    /*0x21737f0*/ void OnEnable();
    /*0x2173804*/ void OnPlay();
    /*0x21739ac*/ void SetupSpinImage();
    /*0x21739e0*/ void SetupFadeImage();
    /*0x2173a0c*/ void OnStop();
    /*0x2173a3c*/ void OnPause();
    /*0x2173a94*/ void OnResume();
    /*0x2173aec*/ void OnSkip();
}

class WinScreenAnimationController : Yeti.ProgrammaticAnimation
{
    /*0x48*/ bool _playOnEnable;
    /*0x49*/ bool _fireDoober;
    /*0x50*/ Yeti.YetiButton _continueButton;
    /*0x58*/ UnityEngine.GameObject _rewardContainer;
    /*0x60*/ UnityEngine.Vector3 _rewardStartScale;
    /*0x6c*/ UnityEngine.Vector3 _rewardOvershootScale;
    /*0x78*/ UnityEngine.Vector3 _rewardTargetScale;
    /*0x84*/ float _rewardScalePopTime;
    /*0x88*/ float _delayBeforeShowingRewards;
    /*0x90*/ UnityEngine.UI.Image _godRayImage;
    /*0x98*/ UnityEngine.Vector3 _godRayStartScale;
    /*0xa4*/ UnityEngine.Vector3 _godRayTargetScale;
    /*0xb0*/ UnityEngine.Color _godRayStartColor;
    /*0xc0*/ UnityEngine.Color _godRayTargetColor;
    /*0xd0*/ float _godRayPingTime;
    /*0xd4*/ float _godRayRotateTime;
    /*0xd8*/ UnityEngine.Vector3 _godRayRotationTarget;
    /*0xe4*/ DG.Tweening.Ease _godRayScaleEaseType;
    /*0xe8*/ DG.Tweening.Ease _godRayFadeEaseType;
    /*0xf0*/ UnityEngine.GameObject _doober;
    /*0xf8*/ UnityEngine.Transform _dooberStart;
    /*0x100*/ UnityEngine.Transform _dooberTarget;
    /*0x108*/ Yeti.Pinger _dooberTargetPinger;
    /*0x110*/ bool _fireActionOnDooberComplete;
    /*0x114*/ float _delayBeforeFiringAction;
    /*0x118*/ Yeti.ActionSource[] _actionSources;
    /*0x120*/ DG.Tweening.Sequence _scalePopSequence;
    /*0x128*/ DG.Tweening.Sequence _godRaySequence;
    /*0x130*/ DG.Tweening.Sequence _dooberSequence;

    /*0x2174538*/ WinScreenAnimationController();
    /*0x2173afc*/ void OnEnable();
    /*0x2173b10*/ void OnPlay();
    /*0x2173de4*/ void SetupGodRay();
    /*0x2173e58*/ void SetupScalePop();
    /*0x2173e8c*/ void SetupDoober();
    /*0x2173fa4*/ void HandleDoober();
    /*0x2173fdc*/ void FireDoober();
    /*0x2174200*/ void PingDooberTarget();
    /*0x2174238*/ void FireDooberAction();
    /*0x21742c8*/ System.Collections.IEnumerator DelayDooberAction();
    /*0x217435c*/ void HideGodRay();
    /*0x2174410*/ void OnStop();
    /*0x2174488*/ void OnPause();
    /*0x21744e0*/ void OnResume();

    class <DelayDooberAction>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WinScreenAnimationController <>4__this;

        /*0x2174334*/ <DelayDooberAction>d__38(int <>1__state);
        /*0x2174540*/ void System.IDisposable.Dispose();
        /*0x2174544*/ bool MoveNext();
        /*0x217464c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x2174654*/ void System.Collections.IEnumerator.Reset();
        /*0x217468c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ChunkVersionMappingsReflection
{
    static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

    static /*0x21746ec*/ ChunkVersionMappingsReflection();
    static /*0x2174694*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
}

class ChunkVersionMappings : Google.Protobuf.IMessage<ChunkVersionMappings>, Google.Protobuf.IMessage, System.IEquatable<ChunkVersionMappings>, Google.Protobuf.IDeepCloneable<ChunkVersionMappings>, Google.Protobuf.IBufferMessage
{
    static int VersionFieldNumber = 1;
    static int ChunksFieldNumber = 2;
    static /*0x0*/ Google.Protobuf.MessageParser<ChunkVersionMappings> _parser;
    static /*0x8*/ Google.Protobuf.FieldCodec<ChunkVersionMapping> _repeated_chunks_codec;
    /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
    /*0x18*/ string version_;
    /*0x20*/ Google.Protobuf.Collections.RepeatedField<ChunkVersionMapping> chunks_;

    static /*0x2175628*/ ChunkVersionMappings();
    static /*0x2174c9c*/ Google.Protobuf.MessageParser<ChunkVersionMappings> get_Parser();
    static /*0x2174cf4*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
    /*0x2174e44*/ ChunkVersionMappings();
    /*0x2174ef0*/ ChunkVersionMappings(ChunkVersionMappings other);
    /*0x2174df8*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    /*0x2174f8c*/ ChunkVersionMappings Clone();
    /*0x2174fe4*/ string get_Version();
    /*0x2174fec*/ void set_Version(string value);
    /*0x2175068*/ Google.Protobuf.Collections.RepeatedField<ChunkVersionMapping> get_Chunks();
    /*0x2175070*/ bool Equals(object other);
    /*0x21750d4*/ bool Equals(ChunkVersionMappings other);
    /*0x2175178*/ int GetHashCode();
    /*0x21751f4*/ string ToString();
    /*0x217524c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
    /*0x217526c*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
    /*0x2175354*/ int CalculateSize();
    /*0x2175450*/ void MergeFrom(ChunkVersionMappings other);
    /*0x21754f0*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
    /*0x2175510*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

    class <>c
    {
        static /*0x0*/ ChunkVersionMappings.<> <>9;

        static /*0x21757d8*/ <>c();
        /*0x2175840*/ <>c();
        /*0x2175848*/ ChunkVersionMappings <.cctor>b__32_0();
    }
}

class ChunkVersionMapping : Google.Protobuf.IMessage<ChunkVersionMapping>, Google.Protobuf.IMessage, System.IEquatable<ChunkVersionMapping>, Google.Protobuf.IDeepCloneable<ChunkVersionMapping>, Google.Protobuf.IBufferMessage
{
    static int NameFieldNumber = 1;
    static int VersionFieldNumber = 2;
    static int SizeInBytesFieldNumber = 3;
    static /*0x0*/ Google.Protobuf.MessageParser<ChunkVersionMapping> _parser;
    /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
    /*0x18*/ string name_;
    /*0x20*/ string version_;
    /*0x28*/ int sizeInBytes_;

    static /*0x21761dc*/ ChunkVersionMapping();
    static /*0x2175898*/ Google.Protobuf.MessageParser<ChunkVersionMapping> get_Parser();
    static /*0x21758f0*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
    /*0x2175a40*/ ChunkVersionMapping();
    /*0x2175aa8*/ ChunkVersionMapping(ChunkVersionMapping other);
    /*0x21759f4*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    /*0x2175b10*/ ChunkVersionMapping Clone();
    /*0x2175b68*/ string get_Name();
    /*0x2175b70*/ void set_Name(string value);
    /*0x2175bec*/ string get_Version();
    /*0x2175bf4*/ void set_Version(string value);
    /*0x2175c70*/ int get_SizeInBytes();
    /*0x2175c78*/ void set_SizeInBytes(int value);
    /*0x2175c80*/ bool Equals(object other);
    /*0x2175ce4*/ bool Equals(ChunkVersionMapping other);
    /*0x2175d68*/ int GetHashCode();
    /*0x2175e08*/ string ToString();
    /*0x2175e60*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
    /*0x2175e80*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
    /*0x2175f44*/ int CalculateSize();
    /*0x2176040*/ void MergeFrom(ChunkVersionMapping other);
    /*0x21760c8*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
    /*0x21760e8*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

    class <>c
    {
        static /*0x0*/ ChunkVersionMapping.<> <>9;

        static /*0x21762f4*/ <>c();
        /*0x217635c*/ <>c();
        /*0x2176364*/ ChunkVersionMapping <.cctor>b__37_0();
    }
}

interface IGenericMessageBoxButtonTelemetryDataSetter
{
    /*0x1f30ebc*/ void SetData(string data);
}

class GenericMessageBoxButtonTelemetryDataGetter : UnityEngine.MonoBehaviour, PvzN3xt.Telemetry.IUIInteractionTelemetryDataGetter, IGenericMessageBoxButtonTelemetryDataSetter
{
    /*0x20*/ string _extraData;

    /*0x21763d0*/ GenericMessageBoxButtonTelemetryDataGetter();
    /*0x21763b4*/ UnityEngine.GameObject GetGameObject();
    /*0x21763bc*/ UnityEngine.Component GetComponent();
    /*0x21763c0*/ string GetExtraData();
    /*0x21763c8*/ void SetData(string data);
}

class Button_Config : UnityEngine.MonoBehaviour
{
    /*0x20*/ UnityEngine.GameObject cameraPositioner;
    /*0x28*/ UnityEngine.Vector3 cameraTransform;

    /*0x21764f4*/ Button_Config();
    /*0x21763d8*/ void Start();
    /*0x217645c*/ void ButtonPressed();
}

class CharacterScaleController : UnityEngine.MonoBehaviour
{
    /*0x20*/ UnityEngine.UI.Slider scaleSlider;
    /*0x28*/ TMPro.TextMeshProUGUI scalevalue;
    /*0x30*/ System.Collections.Generic.List<ScaleCharacter> characterList;

    /*0x21767dc*/ CharacterScaleController();
    /*0x21764fc*/ void FixedUpdate();
    /*0x2176590*/ void UpdateScale();
}

class ScaleCharacter : UnityEngine.MonoBehaviour
{
    /*0x2176864*/ ScaleCharacter();
    /*0x21767a4*/ void UpdateScale(float value);
}

class UnitySourceGeneratedAssemblyMonoScriptTypes_v1
{
    static /*0x217686c*/ UnitySourceGeneratedAssemblyMonoScriptTypes_v1.MonoScriptData Get();
    /*0x2176968*/ UnitySourceGeneratedAssemblyMonoScriptTypes_v1();

    struct MonoScriptData
    {
        /*0x10*/ byte[] FilePathsData;
        /*0x18*/ byte[] TypesData;
        /*0x20*/ int TotalTypes;
        /*0x24*/ int TotalFiles;
        /*0x28*/ bool IsEditorOnly;
    }
}

namespace Automation
{
    class AutomationIdBinder : Yeti.UIBinderBase<RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel>
    {
        /*0x78*/ string _format;
        /*0x80*/ Automation.AutomationIdentifier _automationIdentifier;
        /*0x88*/ string _originalId;

        /*0x2176b08*/ AutomationIdBinder();
        /*0x2176970*/ void Awake();
        /*0x2176a50*/ void OnDataContextSet();
        /*0x2176b04*/ void PropertyChanged(string propertyName);
        /*0x2176a54*/ void OverrideAutomationId();
    }

    class AutomationIdentifier : UnityEngine.MonoBehaviour
    {
        /*0x20*/ string AutomationId;

        /*0x2176b50*/ AutomationIdentifier();
    }

    interface IAutomationCombat
    {
        /*0x1f2fe14*/ bool get_IsCombatEnabled();
        bool CanPlacePlant(YetiSimCoreLib.Game.GridCell gridCell);
        bool PromotePlant(YetiSimCoreLib.Game.GridCell gridCell);
        bool MovePlant(YetiSimCoreLib.Game.GridCell gridCellSource, YetiSimCoreLib.Game.GridCell gridCellTarget);
        /*0x1f309e4*/ void TransitionOutTacoTime();
        /*0x1f309e4*/ void Enable();
        /*0x1f309e4*/ void Cleanup();
        /*0x1f2fe14*/ bool IsSimScriptActive();
        /*0x1f309e4*/ void AttachSimInterface();
    }

    interface IAutomationSystem
    {
        double get_Fps();
        /*0x1f30214*/ string get_AverageFpsString();
        /*0x1f309e4*/ void UpdateFpsData();
        /*0x1f309e4*/ void ResetFpsData();
        /*0x1f30214*/ Automation.IAutomationCombat get_AutomationCombat();
        /*0x1f30ebc*/ void set_AutomationCombat(Automation.IAutomationCombat value);
        /*0x1f30ebc*/ void add_CombatToggleEvent(Automation.OnAutomationCombatToggle value);
        /*0x1f30ebc*/ void remove_CombatToggleEvent(Automation.OnAutomationCombatToggle value);
        /*0x1f30ff0*/ void LogPinEvent(string sessionId, Tracking.PinEvent payload);
        /*0x1f2fe14*/ bool get_TelemetryCollectionEnabled();
        /*0x1f30a84*/ void set_TelemetryCollectionEnabled(bool value);
        /*0x1f30ff0*/ void LogFailedAssetDownload(string assetName, string exceptionMessage);
    }

    enum StepContext
    {
        Enter = 0,
        Exit = 1,
        Info = 2,
    }

    enum TimingCategory
    {
        Boot = 0,
        Initialization = 1,
        Audio = 2,
        Network = 3,
        Assets = 4,
        GameState = 5,
        UUIF = 6,
        Combat = 7,
        Event = 8,
        Automation = 9,
    }

    class OnAutomationCombatToggle : System.MulticastDelegate
    {
        /*0x2176b58*/ OnAutomationCombatToggle(object object, nint method);
        /*0x2176c60*/ void Invoke(Automation.AutomationCombatToggleEventArgs args);
        /*0x2176c74*/ System.IAsyncResult BeginInvoke(Automation.AutomationCombatToggleEventArgs args, System.AsyncCallback callback, object object);
        /*0x2176c94*/ void EndInvoke(System.IAsyncResult result);
    }

    class TimingDatapoint
    {
        /*0x2176ca0*/ TimingDatapoint();
    }

    class AutomationCombatToggleEventArgs : System.EventArgs
    {
        /*0x2176ca8*/ AutomationCombatToggleEventArgs();
    }

    class TelemetryCollector
    {
        /*0x2176d00*/ TelemetryCollector();
    }

    class AssetDownloadFailuresUpdater
    {
        /*0x2176d08*/ AssetDownloadFailuresUpdater();
    }

    class NullAutomationCombatController : Automation.IAutomationCombat
    {
        /*0x2176d48*/ NullAutomationCombatController();
        /*0x2176d10*/ bool get_IsCombatEnabled();
        /*0x2176d18*/ bool CanPlacePlant(YetiSimCoreLib.Game.GridCell gridCell);
        /*0x2176d20*/ bool PromotePlant(YetiSimCoreLib.Game.GridCell gridCell);
        /*0x2176d28*/ bool MovePlant(YetiSimCoreLib.Game.GridCell gridCellSource, YetiSimCoreLib.Game.GridCell gridCellTarget);
        /*0x2176d30*/ bool IsSimScriptActive();
        /*0x2176d38*/ void AttachSimInterface();
        /*0x2176d3c*/ void Enable();
        /*0x2176d40*/ void Cleanup();
        /*0x2176d44*/ void TransitionOutTacoTime();
    }

    class NullAutomationSystem : Automation.IAutomationSystem
    {
        /*0x10*/ double <Fps>k__BackingField;
        /*0x18*/ string <AverageFpsString>k__BackingField;
        /*0x20*/ bool <TelemetryCollectionEnabled>k__BackingField;

        /*0x2176d94*/ NullAutomationSystem();
        /*0x2176d50*/ double get_Fps();
        /*0x2176d58*/ string get_AverageFpsString();
        /*0x2176d60*/ Automation.IAutomationCombat get_AutomationCombat();
        /*0x2176d68*/ void set_AutomationCombat(Automation.IAutomationCombat value);
        /*0x2176d6c*/ void add_CombatToggleEvent(Automation.OnAutomationCombatToggle value);
        /*0x2176d70*/ void remove_CombatToggleEvent(Automation.OnAutomationCombatToggle value);
        /*0x2176d74*/ bool get_TelemetryCollectionEnabled();
        /*0x2176d7c*/ void set_TelemetryCollectionEnabled(bool value);
        /*0x2176d84*/ void UpdateFpsData();
        /*0x2176d88*/ void ResetFpsData();
        /*0x2176d8c*/ void LogPinEvent(string sessionId, Tracking.PinEvent payload);
        /*0x2176d90*/ void LogFailedAssetDownload(string assetName, string exceptionMessage);
    }

    class TimeRecorder
    {
        static /*0x2176dc8*/ System.Collections.Generic.List<Automation.TimingDatapoint> GetTimingData();
        static /*0x2176e30*/ void RecordTiming(string locationName, string transitionSource, Automation.TimingCategory timingCategory, Automation.StepContext context);
    }
}

namespace EALoc
{
    struct CompactNumberFormat
    {
        /*0x10*/ long _divisor;
        /*0x18*/ string _suffix;

        /*0x2176e34*/ long get_Divisor();
        /*0x2176e3c*/ string get_Suffix();
    }

    class CompactNumberFormatData : UnityEngine.ScriptableObject
    {
        /*0x18*/ EALoc.CompactNumberFormat[] _formats;

        /*0x2176e4c*/ CompactNumberFormatData();
        /*0x2176e44*/ EALoc.CompactNumberFormat[] get_Formats();
    }
}

namespace mdk
{
    namespace Data
    {
        class ClientManifestReflection
        {
            static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

            static /*0x2176eac*/ ClientManifestReflection();
            static /*0x2176e54*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
        }

        class ClientManifest : Google.Protobuf.IMessage<mdk.Data.ClientManifest>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.ClientManifest>, Google.Protobuf.IDeepCloneable<mdk.Data.ClientManifest>, Google.Protobuf.IBufferMessage
        {
            static int TestFieldNumber = 1;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.ClientManifest> _parser;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ int test_;

            static /*0x2177744*/ ClientManifest();
            static /*0x21771b8*/ Google.Protobuf.MessageParser<mdk.Data.ClientManifest> get_Parser();
            static /*0x2177210*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x2177360*/ ClientManifest();
            /*0x2177368*/ ClientManifest(mdk.Data.ClientManifest other);
            /*0x2177314*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x21773b4*/ mdk.Data.ClientManifest Clone();
            /*0x217740c*/ int get_Test();
            /*0x2177414*/ void set_Test(int value);
            /*0x217741c*/ bool Equals(object other);
            /*0x2177480*/ bool Equals(mdk.Data.ClientManifest other);
            /*0x21774bc*/ int GetHashCode();
            /*0x2177518*/ string ToString();
            /*0x2177570*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x2177590*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x21775f0*/ int CalculateSize();
            /*0x2177670*/ void MergeFrom(mdk.Data.ClientManifest other);
            /*0x21776b0*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x21776d0*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.ClientManifest.<> <>9;

                static /*0x217785c*/ <>c();
                /*0x21778c4*/ <>c();
                /*0x21778cc*/ mdk.Data.ClientManifest <.cctor>b__27_0();
            }
        }

        class ConsumerReflection
        {
            static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

            static /*0x2177978*/ ConsumerReflection();
            static /*0x2177920*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
        }

        enum Consumer
        {
            ClientAndServer = 0,
            ClientOnly = 1,
            ServerOnly = 2,
        }

        class DeploymentManifestReflection
        {
            static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

            static /*0x2177c08*/ DeploymentManifestReflection();
            static /*0x2177bb0*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
        }

        class DeploymentManifest : Google.Protobuf.IMessage<mdk.Data.DeploymentManifest>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DeploymentManifest>, Google.Protobuf.IDeepCloneable<mdk.Data.DeploymentManifest>, Google.Protobuf.IBufferMessage
        {
            static int IdFieldNumber = 1;
            static int NameFieldNumber = 2;
            static int ConfigsFieldNumber = 3;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentManifest> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<mdk.Data.DeploymentConfig> _repeated_configs_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string id_;
            /*0x20*/ string name_;
            /*0x28*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentConfig> configs_;

            static /*0x2178fcc*/ DeploymentManifest();
            static /*0x21784a8*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentManifest> get_Parser();
            static /*0x2178500*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x2178650*/ DeploymentManifest();
            /*0x217870c*/ DeploymentManifest(mdk.Data.DeploymentManifest other);
            /*0x2178604*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x21787b8*/ mdk.Data.DeploymentManifest Clone();
            /*0x2178810*/ string get_Id();
            /*0x2178818*/ void set_Id(string value);
            /*0x2178894*/ string get_Name();
            /*0x217889c*/ void set_Name(string value);
            /*0x2178918*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentConfig> get_Configs();
            /*0x2178920*/ bool Equals(object other);
            /*0x2178984*/ bool Equals(mdk.Data.DeploymentManifest other);
            /*0x2178a3c*/ int GetHashCode();
            /*0x2178ad8*/ string ToString();
            /*0x2178b30*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x2178b50*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x2178c68*/ int CalculateSize();
            /*0x2178d98*/ void MergeFrom(mdk.Data.DeploymentManifest other);
            /*0x2178e50*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x2178e70*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DeploymentManifest.<> <>9;

                static /*0x217917c*/ <>c();
                /*0x21791e4*/ <>c();
                /*0x21791ec*/ mdk.Data.DeploymentManifest <.cctor>b__37_0();
            }
        }

        class DeploymentConfig : Google.Protobuf.IMessage<mdk.Data.DeploymentConfig>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DeploymentConfig>, Google.Protobuf.IDeepCloneable<mdk.Data.DeploymentConfig>, Google.Protobuf.IBufferMessage
        {
            static int IdFieldNumber = 1;
            static int NameFieldNumber = 2;
            static int LocationFieldNumber = 3;
            static int VariantConfigsFieldNumber = 4;
            static int ConsumerFieldNumber = 5;
            static int FileSizeBytesFieldNumber = 6;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentConfig> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<mdk.Data.DeploymentVariantConfig> _repeated_variantConfigs_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string id_;
            /*0x20*/ string name_;
            /*0x28*/ string location_;
            /*0x30*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentVariantConfig> variantConfigs_;
            /*0x38*/ mdk.Data.Consumer consumer_;
            /*0x3c*/ int fileSizeBytes_;

            static /*0x217a07c*/ DeploymentConfig();
            static /*0x217923c*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentConfig> get_Parser();
            static /*0x2179294*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x21793e4*/ DeploymentConfig();
            /*0x21794b0*/ DeploymentConfig(mdk.Data.DeploymentConfig other);
            /*0x2179398*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x2179574*/ mdk.Data.DeploymentConfig Clone();
            /*0x21795cc*/ string get_Id();
            /*0x21795d4*/ void set_Id(string value);
            /*0x2179650*/ string get_Name();
            /*0x2179658*/ void set_Name(string value);
            /*0x21796d4*/ string get_Location();
            /*0x21796dc*/ void set_Location(string value);
            /*0x2179758*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentVariantConfig> get_VariantConfigs();
            /*0x2179760*/ mdk.Data.Consumer get_Consumer();
            /*0x2179768*/ void set_Consumer(mdk.Data.Consumer value);
            /*0x2179770*/ int get_FileSizeBytes();
            /*0x2179778*/ void set_FileSizeBytes(int value);
            /*0x2179780*/ bool Equals(object other);
            /*0x21797e4*/ bool Equals(mdk.Data.DeploymentConfig other);
            /*0x21798d0*/ int GetHashCode();
            /*0x21799c4*/ string ToString();
            /*0x2179a1c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x2179a3c*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x2179bd4*/ int CalculateSize();
            /*0x2179d8c*/ void MergeFrom(mdk.Data.DeploymentConfig other);
            /*0x2179e74*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x2179e94*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DeploymentConfig.<> <>9;

                static /*0x217a22c*/ <>c();
                /*0x217a294*/ <>c();
                /*0x217a29c*/ mdk.Data.DeploymentConfig <.cctor>b__52_0();
            }
        }

        class DeploymentVariantConfig : Google.Protobuf.IMessage<mdk.Data.DeploymentVariantConfig>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DeploymentVariantConfig>, Google.Protobuf.IDeepCloneable<mdk.Data.DeploymentVariantConfig>, Google.Protobuf.IBufferMessage
        {
            static int IdFieldNumber = 1;
            static int LocationFieldNumber = 2;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentVariantConfig> _parser;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string id_;
            /*0x20*/ string location_;

            static /*0x217ab60*/ DeploymentVariantConfig();
            static /*0x217a2ec*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentVariantConfig> get_Parser();
            static /*0x217a344*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x217a494*/ DeploymentVariantConfig();
            /*0x217a4fc*/ DeploymentVariantConfig(mdk.Data.DeploymentVariantConfig other);
            /*0x217a448*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x217a55c*/ mdk.Data.DeploymentVariantConfig Clone();
            /*0x217a5b4*/ string get_Id();
            /*0x217a5bc*/ void set_Id(string value);
            /*0x217a638*/ string get_Location();
            /*0x217a640*/ void set_Location(string value);
            /*0x217a6bc*/ bool Equals(object other);
            /*0x217a720*/ bool Equals(mdk.Data.DeploymentVariantConfig other);
            /*0x217a794*/ int GetHashCode();
            /*0x217a814*/ string ToString();
            /*0x217a86c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x217a88c*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x217a928*/ int CalculateSize();
            /*0x217a9f8*/ void MergeFrom(mdk.Data.DeploymentVariantConfig other);
            /*0x217aa74*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x217aa94*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DeploymentVariantConfig.<> <>9;

                static /*0x217ac78*/ <>c();
                /*0x217ace0*/ <>c();
                /*0x217ace8*/ mdk.Data.DeploymentVariantConfig <.cctor>b__32_0();
            }
        }

        class DeploymentManifestV2Reflection
        {
            static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

            static /*0x217ad90*/ DeploymentManifestV2Reflection();
            static /*0x217ad38*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
        }

        class DeploymentManifestV2 : Google.Protobuf.IMessage<mdk.Data.DeploymentManifestV2>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DeploymentManifestV2>, Google.Protobuf.IDeepCloneable<mdk.Data.DeploymentManifestV2>, Google.Protobuf.IBufferMessage
        {
            static int IdFieldNumber = 1;
            static int NameFieldNumber = 2;
            static int FilesFieldNumber = 3;
            static int VariationsFieldNumber = 4;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentManifestV2> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<mdk.Data.DeploymentFile> _repeated_files_codec;
            static /*0x10*/ Google.Protobuf.Collections.MapField.Codec<string, mdk.Data.DeploymentVariation> _map_variations_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string id_;
            /*0x20*/ string name_;
            /*0x28*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentFile> files_;
            /*0x30*/ Google.Protobuf.Collections.MapField<string, mdk.Data.DeploymentVariation> variations_;

            static /*0x217c588*/ DeploymentManifestV2();
            static /*0x217b88c*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentManifestV2> get_Parser();
            static /*0x217b8e4*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x217ba34*/ DeploymentManifestV2();
            /*0x217bb44*/ DeploymentManifestV2(mdk.Data.DeploymentManifestV2 other);
            /*0x217b9e8*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x217bc24*/ mdk.Data.DeploymentManifestV2 Clone();
            /*0x217bc7c*/ string get_Id();
            /*0x217bc84*/ void set_Id(string value);
            /*0x217bd00*/ string get_Name();
            /*0x217bd08*/ void set_Name(string value);
            /*0x217bd84*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentFile> get_Files();
            /*0x217bd8c*/ Google.Protobuf.Collections.MapField<string, mdk.Data.DeploymentVariation> get_Variations();
            /*0x217bd94*/ bool Equals(object other);
            /*0x217bdf8*/ bool Equals(mdk.Data.DeploymentManifestV2 other);
            /*0x217bedc*/ int GetHashCode();
            /*0x217bf94*/ string ToString();
            /*0x217bfec*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x217c00c*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x217c158*/ int CalculateSize();
            /*0x217c2c0*/ void MergeFrom(mdk.Data.DeploymentManifestV2 other);
            /*0x217c3a0*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x217c3c0*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DeploymentManifestV2.<> <>9;

                static /*0x217c848*/ <>c();
                /*0x217c8b0*/ <>c();
                /*0x217c8b8*/ mdk.Data.DeploymentManifestV2 <.cctor>b__42_0();
            }
        }

        class DeploymentFile : Google.Protobuf.IMessage<mdk.Data.DeploymentFile>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DeploymentFile>, Google.Protobuf.IDeepCloneable<mdk.Data.DeploymentFile>, Google.Protobuf.IBufferMessage
        {
            static int IdFieldNumber = 1;
            static int PartNameFieldNumber = 2;
            static int LocationFieldNumber = 3;
            static int UsedByVariantsFieldNumber = 4;
            static int FileSizeBytesFieldNumber = 5;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentFile> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<string> _repeated_usedByVariants_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string id_;
            /*0x20*/ string partName_;
            /*0x28*/ string location_;
            /*0x30*/ Google.Protobuf.Collections.RepeatedField<string> usedByVariants_;
            /*0x38*/ int fileSizeBytes_;

            static /*0x217d68c*/ DeploymentFile();
            static /*0x217c908*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentFile> get_Parser();
            static /*0x217c960*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x217cab0*/ DeploymentFile();
            /*0x217cb7c*/ DeploymentFile(mdk.Data.DeploymentFile other);
            /*0x217ca64*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x217cc40*/ mdk.Data.DeploymentFile Clone();
            /*0x217cc98*/ string get_Id();
            /*0x217cca0*/ void set_Id(string value);
            /*0x217cd1c*/ string get_PartName();
            /*0x217cd24*/ void set_PartName(string value);
            /*0x217cda0*/ string get_Location();
            /*0x217cda8*/ void set_Location(string value);
            /*0x217ce24*/ Google.Protobuf.Collections.RepeatedField<string> get_UsedByVariants();
            /*0x217ce2c*/ int get_FileSizeBytes();
            /*0x217ce34*/ void set_FileSizeBytes(int value);
            /*0x217ce3c*/ bool Equals(object other);
            /*0x217cea0*/ bool Equals(mdk.Data.DeploymentFile other);
            /*0x217cf7c*/ int GetHashCode();
            /*0x217d054*/ string ToString();
            /*0x217d0ac*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x217d0cc*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x217d23c*/ int CalculateSize();
            /*0x217d3c8*/ void MergeFrom(mdk.Data.DeploymentFile other);
            /*0x217d4a4*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x217d4c4*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DeploymentFile.<> <>9;

                static /*0x217d7c8*/ <>c();
                /*0x217d830*/ <>c();
                /*0x217d838*/ mdk.Data.DeploymentFile <.cctor>b__47_0();
            }
        }

        class DeploymentVariation : Google.Protobuf.IMessage<mdk.Data.DeploymentVariation>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DeploymentVariation>, Google.Protobuf.IDeepCloneable<mdk.Data.DeploymentVariation>, Google.Protobuf.IBufferMessage
        {
            static int PartsFieldNumber = 1;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentVariation> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<mdk.Data.DeploymentPart> _repeated_parts_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentPart> parts_;

            static /*0x217e040*/ DeploymentVariation();
            static /*0x217d888*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentVariation> get_Parser();
            static /*0x217d8e0*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x217da30*/ DeploymentVariation();
            /*0x217dab8*/ DeploymentVariation(mdk.Data.DeploymentVariation other);
            /*0x217d9e4*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x217db44*/ mdk.Data.DeploymentVariation Clone();
            /*0x217db9c*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DeploymentPart> get_Parts();
            /*0x217dba4*/ bool Equals(object other);
            /*0x217dc08*/ bool Equals(mdk.Data.DeploymentVariation other);
            /*0x217dc98*/ int GetHashCode();
            /*0x217dce4*/ string ToString();
            /*0x217dd3c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x217dd5c*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x217de14*/ int CalculateSize();
            /*0x217debc*/ void MergeFrom(mdk.Data.DeploymentVariation other);
            /*0x217df44*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x217df64*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DeploymentVariation.<> <>9;

                static /*0x217e1f0*/ <>c();
                /*0x217e258*/ <>c();
                /*0x217e260*/ mdk.Data.DeploymentVariation <.cctor>b__27_0();
            }
        }

        class DeploymentPart : Google.Protobuf.IMessage<mdk.Data.DeploymentPart>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DeploymentPart>, Google.Protobuf.IDeepCloneable<mdk.Data.DeploymentPart>, Google.Protobuf.IBufferMessage
        {
            static int NameFieldNumber = 1;
            static int FileIdsFieldNumber = 2;
            static int ConsumerFieldNumber = 3;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentPart> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<string> _repeated_fileIds_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string name_;
            /*0x20*/ Google.Protobuf.Collections.RepeatedField<string> fileIds_;
            /*0x28*/ mdk.Data.Consumer consumer_;

            static /*0x217ed04*/ DeploymentPart();
            static /*0x217e2b0*/ Google.Protobuf.MessageParser<mdk.Data.DeploymentPart> get_Parser();
            static /*0x217e308*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x217e458*/ DeploymentPart();
            /*0x217e504*/ DeploymentPart(mdk.Data.DeploymentPart other);
            /*0x217e40c*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x217e5a8*/ mdk.Data.DeploymentPart Clone();
            /*0x217e600*/ string get_Name();
            /*0x217e608*/ void set_Name(string value);
            /*0x217e684*/ Google.Protobuf.Collections.RepeatedField<string> get_FileIds();
            /*0x217e68c*/ mdk.Data.Consumer get_Consumer();
            /*0x217e694*/ void set_Consumer(mdk.Data.Consumer value);
            /*0x217e69c*/ bool Equals(object other);
            /*0x217e700*/ bool Equals(mdk.Data.DeploymentPart other);
            /*0x217e7b4*/ int GetHashCode();
            /*0x217e84c*/ string ToString();
            /*0x217e8a4*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x217e8c4*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x217e9d4*/ int CalculateSize();
            /*0x217eaf8*/ void MergeFrom(mdk.Data.DeploymentPart other);
            /*0x217eba4*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x217ebc4*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DeploymentPart.<> <>9;

                static /*0x217ee40*/ <>c();
                /*0x217eea8*/ <>c();
                /*0x217eeb0*/ mdk.Data.DeploymentPart <.cctor>b__37_0();
            }
        }

        class DevManifestReflection
        {
            static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

            static /*0x217ef58*/ DevManifestReflection();
            static /*0x217ef00*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
        }

        enum DeployStatus
        {
            DefaultEnum = 0,
            EditingInProgress = 1,
            DeploymentReady = 2,
        }

        class DevManifest : Google.Protobuf.IMessage<mdk.Data.DevManifest>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DevManifest>, Google.Protobuf.IDeepCloneable<mdk.Data.DevManifest>, Google.Protobuf.IBufferMessage
        {
            static int ConfigsFieldNumber = 1;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DevManifest> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<mdk.Data.DevConfig> _repeated_configs_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DevConfig> configs_;

            static /*0x2180160*/ DevManifest();
            static /*0x217f9a8*/ Google.Protobuf.MessageParser<mdk.Data.DevManifest> get_Parser();
            static /*0x217fa00*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x217fb50*/ DevManifest();
            /*0x217fbd8*/ DevManifest(mdk.Data.DevManifest other);
            /*0x217fb04*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x217fc64*/ mdk.Data.DevManifest Clone();
            /*0x217fcbc*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DevConfig> get_Configs();
            /*0x217fcc4*/ bool Equals(object other);
            /*0x217fd28*/ bool Equals(mdk.Data.DevManifest other);
            /*0x217fdb8*/ int GetHashCode();
            /*0x217fe04*/ string ToString();
            /*0x217fe5c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x217fe7c*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x217ff34*/ int CalculateSize();
            /*0x217ffdc*/ void MergeFrom(mdk.Data.DevManifest other);
            /*0x2180064*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x2180084*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DevManifest.<> <>9;

                static /*0x2180310*/ <>c();
                /*0x2180378*/ <>c();
                /*0x2180380*/ mdk.Data.DevManifest <.cctor>b__27_0();
            }
        }

        class DevConfig : Google.Protobuf.IMessage<mdk.Data.DevConfig>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DevConfig>, Google.Protobuf.IDeepCloneable<mdk.Data.DevConfig>, Google.Protobuf.IBufferMessage
        {
            static int ProtoFileVersionFieldNumber = 1;
            static int IdFieldNumber = 2;
            static int NameFieldNumber = 3;
            static int DeployStatusFieldNumber = 4;
            static int LocationFieldNumber = 5;
            static int VariantConfigsFieldNumber = 6;
            static int EnvironmentTargetsFieldNumber = 7;
            static int ConsumerFieldNumber = 8;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DevConfig> _parser;
            static /*0x8*/ Google.Protobuf.FieldCodec<mdk.Data.DevVariantConfig> _repeated_variantConfigs_codec;
            static /*0x10*/ Google.Protobuf.FieldCodec<string> _repeated_environmentTargets_codec;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string protoFileVersion_;
            /*0x20*/ string id_;
            /*0x28*/ string name_;
            /*0x30*/ mdk.Data.DeployStatus deployStatus_;
            /*0x38*/ string location_;
            /*0x40*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DevVariantConfig> variantConfigs_;
            /*0x48*/ Google.Protobuf.Collections.RepeatedField<string> environmentTargets_;
            /*0x50*/ mdk.Data.Consumer consumer_;

            static /*0x2181574*/ DevConfig();
            static /*0x21803d0*/ Google.Protobuf.MessageParser<mdk.Data.DevConfig> get_Parser();
            static /*0x2180428*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x2180578*/ DevConfig();
            /*0x21806a8*/ DevConfig(mdk.Data.DevConfig other);
            /*0x218052c*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x21807b8*/ mdk.Data.DevConfig Clone();
            /*0x2180810*/ string get_ProtoFileVersion();
            /*0x2180818*/ void set_ProtoFileVersion(string value);
            /*0x2180894*/ string get_Id();
            /*0x218089c*/ void set_Id(string value);
            /*0x2180918*/ string get_Name();
            /*0x2180920*/ void set_Name(string value);
            /*0x218099c*/ mdk.Data.DeployStatus get_DeployStatus();
            /*0x21809a4*/ void set_DeployStatus(mdk.Data.DeployStatus value);
            /*0x21809ac*/ string get_Location();
            /*0x21809b4*/ void set_Location(string value);
            /*0x2180a30*/ Google.Protobuf.Collections.RepeatedField<mdk.Data.DevVariantConfig> get_VariantConfigs();
            /*0x2180a38*/ Google.Protobuf.Collections.RepeatedField<string> get_EnvironmentTargets();
            /*0x2180a40*/ mdk.Data.Consumer get_Consumer();
            /*0x2180a48*/ void set_Consumer(mdk.Data.Consumer value);
            /*0x2180a50*/ bool Equals(object other);
            /*0x2180ab4*/ bool Equals(mdk.Data.DevConfig other);
            /*0x2180be0*/ int GetHashCode();
            /*0x2180d10*/ string ToString();
            /*0x2180d68*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x2180d88*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x2180f84*/ int CalculateSize();
            /*0x21811a8*/ void MergeFrom(mdk.Data.DevConfig other);
            /*0x21812d0*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x21812f0*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DevConfig.<> <>9;

                static /*0x2181748*/ <>c();
                /*0x21817b0*/ <>c();
                /*0x21817b8*/ mdk.Data.DevConfig <.cctor>b__62_0();
            }
        }

        class DevVariantConfig : Google.Protobuf.IMessage<mdk.Data.DevVariantConfig>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.DevVariantConfig>, Google.Protobuf.IDeepCloneable<mdk.Data.DevVariantConfig>, Google.Protobuf.IBufferMessage
        {
            static int ProtoFileVersionFieldNumber = 1;
            static int IdFieldNumber = 2;
            static int DeployStatusFieldNumber = 4;
            static int LocationFieldNumber = 5;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.DevVariantConfig> _parser;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ string protoFileVersion_;
            /*0x20*/ string id_;
            /*0x28*/ mdk.Data.DeployStatus deployStatus_;
            /*0x30*/ string location_;

            static /*0x21822e0*/ DevVariantConfig();
            static /*0x2181808*/ Google.Protobuf.MessageParser<mdk.Data.DevVariantConfig> get_Parser();
            static /*0x2181860*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x21819b0*/ DevVariantConfig();
            /*0x2181a28*/ DevVariantConfig(mdk.Data.DevVariantConfig other);
            /*0x2181964*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x2181aa0*/ mdk.Data.DevVariantConfig Clone();
            /*0x2181af8*/ string get_ProtoFileVersion();
            /*0x2181b00*/ void set_ProtoFileVersion(string value);
            /*0x2181b7c*/ string get_Id();
            /*0x2181b84*/ void set_Id(string value);
            /*0x2181c00*/ mdk.Data.DeployStatus get_DeployStatus();
            /*0x2181c08*/ void set_DeployStatus(mdk.Data.DeployStatus value);
            /*0x2181c10*/ string get_Location();
            /*0x2181c18*/ void set_Location(string value);
            /*0x2181c94*/ bool Equals(object other);
            /*0x2181cf8*/ bool Equals(mdk.Data.DevVariantConfig other);
            /*0x2181d90*/ int GetHashCode();
            /*0x2181e50*/ string ToString();
            /*0x2181ea8*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x2181ec8*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x2181fbc*/ int CalculateSize();
            /*0x21820ec*/ void MergeFrom(mdk.Data.DevVariantConfig other);
            /*0x218218c*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x21821ac*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.DevVariantConfig.<> <>9;

                static /*0x21823f8*/ <>c();
                /*0x2182460*/ <>c();
                /*0x2182468*/ mdk.Data.DevVariantConfig <.cctor>b__42_0();
            }
        }

        class ReleaseManifestReflection
        {
            static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

            static /*0x2182510*/ ReleaseManifestReflection();
            static /*0x21824b8*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
        }

        class ReleaseManifest : Google.Protobuf.IMessage<mdk.Data.ReleaseManifest>, Google.Protobuf.IMessage, System.IEquatable<mdk.Data.ReleaseManifest>, Google.Protobuf.IDeepCloneable<mdk.Data.ReleaseManifest>, Google.Protobuf.IBufferMessage
        {
            static int TestFieldNumber = 1;
            static /*0x0*/ Google.Protobuf.MessageParser<mdk.Data.ReleaseManifest> _parser;
            /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
            /*0x18*/ int test_;

            static /*0x2182da8*/ ReleaseManifest();
            static /*0x218281c*/ Google.Protobuf.MessageParser<mdk.Data.ReleaseManifest> get_Parser();
            static /*0x2182874*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
            /*0x21829c4*/ ReleaseManifest();
            /*0x21829cc*/ ReleaseManifest(mdk.Data.ReleaseManifest other);
            /*0x2182978*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
            /*0x2182a18*/ mdk.Data.ReleaseManifest Clone();
            /*0x2182a70*/ int get_Test();
            /*0x2182a78*/ void set_Test(int value);
            /*0x2182a80*/ bool Equals(object other);
            /*0x2182ae4*/ bool Equals(mdk.Data.ReleaseManifest other);
            /*0x2182b20*/ int GetHashCode();
            /*0x2182b7c*/ string ToString();
            /*0x2182bd4*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
            /*0x2182bf4*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
            /*0x2182c54*/ int CalculateSize();
            /*0x2182cd4*/ void MergeFrom(mdk.Data.ReleaseManifest other);
            /*0x2182d14*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
            /*0x2182d34*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

            class <>c
            {
                static /*0x0*/ mdk.Data.ReleaseManifest.<> <>9;

                static /*0x2182ec0*/ <>c();
                /*0x2182f28*/ <>c();
                /*0x2182f30*/ mdk.Data.ReleaseManifest <.cctor>b__27_0();
            }
        }
    }
}

namespace RSG
{
    class AbstractState
    {
        /*0x10*/ System.Nullable<Unity.Profiling.ProfilerMarker> _updateSampler;
        /*0x20*/ bool <IsActive>k__BackingField;
        /*0x28*/ System.Collections.Generic.Dictionary<string, RSG.AbstractState> <Children>k__BackingField;
        /*0x30*/ RSG.AbstractState <ActiveChild>k__BackingField;
        /*0x38*/ System.Collections.Generic.Dictionary<int, System.Action<System.EventArgs>> _events;
        /*0x40*/ System.Collections.Generic.Dictionary<RSG.AbstractState.TransitionKey, string> _transitionFromChildToChild;
        /*0x48*/ System.Collections.Generic.Dictionary<int, string> _transitionsFromAnyChildToChild;
        /*0x50*/ System.Collections.Generic.Dictionary<string, string> _transitionsFromChildOnCompleteToChild;
        /*0x58*/ System.Collections.Generic.Dictionary<int, string> _transitionsFromSelfToChild;
        /*0x60*/ System.Action<string> OnCompletionEvent;
        /*0x68*/ System.Action OnCompletedEvent;

        static /*0x1ffc854*/ TEvent CheckEventArgs<TEvent>(int identifier, System.EventArgs args);
        /*0x2184604*/ AbstractState();
        /*0x2182f84*/ Unity.Profiling.ProfilerMarker get_UpdateSampler();
        /*0x218311c*/ bool get_IsActive();
        /*0x2183124*/ void set_IsActive(bool value);
        /*0x218312c*/ System.Collections.Generic.Dictionary<string, RSG.AbstractState> get_Children();
        /*0x1f30214*/ string get_Name();
        /*0x2183134*/ RSG.AbstractState get_ActiveChild();
        /*0x218313c*/ void set_ActiveChild(RSG.AbstractState value);
        /*0x2183144*/ string ActiveLeafName();
        /*0x2183190*/ System.Collections.Generic.Dictionary<int, System.Action<System.EventArgs>> get_Events();
        /*0x2183214*/ System.Collections.Generic.Dictionary<RSG.AbstractState.TransitionKey, string> get_TransitionFromChildToChild();
        /*0x21832cc*/ System.Collections.Generic.Dictionary<int, string> get_TransitionsFromAnyChildToChild();
        /*0x2183350*/ System.Collections.Generic.Dictionary<string, string> get_TransitionsFromChildOnCompleteToChild();
        /*0x21833d4*/ System.Collections.Generic.Dictionary<int, string> get_TransitionsFromSelfToChild();
        /*0x2183458*/ void add_OnCompletionEvent(System.Action<string> value);
        /*0x2183508*/ void remove_OnCompletionEvent(System.Action<string> value);
        /*0x21835b8*/ void add_OnCompletedEvent(System.Action value);
        /*0x2183654*/ void remove_OnCompletedEvent(System.Action value);
        /*0x21836f0*/ RSG.AbstractState AddChild(RSG.AbstractState newState);
        /*0x2183860*/ void UpdateChild(RSG.AbstractState newState);
        /*0x2183970*/ void RegisterEvent(int identifier, System.Action<System.EventArgs> eventTriggeredAction);
        /*0x1f30c88*/ void RegisterEvent<TEvent>(int identifier, System.Action<TEvent> eventTriggeredAction);
        /*0x21839d0*/ void RegisterTransitionFromChildToChild(int eventId, RSG.AbstractState previousState, RSG.AbstractState newState);
        /*0x2183aac*/ void RegisterTransitionFromAnyChildToChild(int eventId, RSG.AbstractState newState);
        /*0x2183b3c*/ void RegisterTransitionFromChildOnCompleteToChild(RSG.AbstractState previousState, RSG.AbstractState newState);
        /*0x2183bdc*/ void RegisterTransitionFromSelfToChild(int eventId, RSG.AbstractState state);
        /*0x2183c6c*/ bool CanCurrentlyHandleTransition(int eventId);
        /*0x2183e2c*/ bool CanCurrentlyHandleTransitionNonReentrant(int eventId);
        /*0x2183efc*/ bool ContainsTransitionFromSelfToChild(int eventId);
        /*0x2183f6c*/ bool ContainsTransitionFromAnyChildToChild(int eventId);
        /*0x2183fdc*/ void Enter();
        /*0x2184018*/ void Exit();
        /*0x2184070*/ void Update(float deltaTime);
        /*0x21840ac*/ void BeginUpdateProfileSample();
        /*0x21840b0*/ void EndUpdateProfileSample();
        /*0x21840b4*/ bool CanHandleEvent(int eventId);
        /*0x2184140*/ void TriggerEvent(int eventId);
        /*0x21841b0*/ void TriggerEvent(int eventId, System.EventArgs eventArgs);
        /*0x2184264*/ void TriggerEventOnChildren(int eventId, System.EventArgs eventArgs);
        /*0x2184274*/ bool TriggerTransition(int eventId);
        /*0x21842bc*/ void OnEnter();
        /*0x21842c0*/ void OnExit();
        /*0x21842c4*/ void OnUpdate(float deltaTime);
        /*0x21842c8*/ void NotifySelfComplete();
        /*0x2184330*/ void ChangeState(string stateName);
        /*0x21843a8*/ void PushState(string stateName);
        /*0x2184040*/ void PopState();
        /*0x2184008*/ bool HandleTransition(int eventId);
        /*0x21844c0*/ bool HandleTransitionToChild(int eventId);
        /*0x218454c*/ bool HandleTransitionBetweenChildren(int eventId);
        /*0x2183d18*/ string GetTransitionBetweenChildren(int eventId);
        /*0x2184584*/ void HandleChildCompletionTransition(string childName);

        class ReservedEventIds
        {
            static int OnEnter = -1;
        }

        struct TransitionKey
        {
            /*0x10*/ int EventId;
            /*0x18*/ string PreviousState;

            /*0x2183a9c*/ TransitionKey(int eventId, string previousState);
        }

        class TransitionKeyComparer : System.Collections.Generic.EqualityComparer<RSG.AbstractState.TransitionKey>
        {
            static /*0x0*/ RSG.AbstractState.TransitionKeyComparer Comparer;

            static /*0x218473c*/ TransitionKeyComparer();
            /*0x21846f4*/ TransitionKeyComparer();
            /*0x218468c*/ bool Equals(RSG.AbstractState.TransitionKey x, RSG.AbstractState.TransitionKey y);
            /*0x21846ac*/ int GetHashCode(RSG.AbstractState.TransitionKey obj);
        }

        class <>c__DisplayClass44_0<TEvent>
        {
            /*0x0*/ System.Action<TEvent> eventTriggeredAction;
            /*0x0*/ int identifier;

            /*0x1f309e4*/ <>c__DisplayClass44_0();
            /*0x1f30ebc*/ void <RegisterEvent>b__0(System.EventArgs args);
        }
    }
}

namespace Framework
{
    namespace DataBinding
    {
        class Bindable<T> : System.IDisposable
        {
            /*0x0*/ T m_dataContext;

            /*0x1f309e4*/ Bindable();
            /*0x1ffc854*/ void SetDataSource(T dataSource);
            /*0x1ffc854*/ T get_DataContext();
            /*0x1ffc854*/ void set_DataContext(T value);
            /*0x1f309e4*/ void Dispose();
            /*0x1f30ebc*/ void AddEventToDataContext(RedCrow.UI.UUIF.DataProviding.Models.IUIModel item);
            /*0x1f30ebc*/ void RemoveEventFromDataContext(RedCrow.UI.UUIF.DataProviding.Models.IUIModel item);
            /*0x1f30ebc*/ void ItemPropertyChanged(string property);
        }
    }
}

namespace RedCrow
{
    namespace Utils
    {
        class GameObjectUtils
        {
            static /*0x21847a0*/ UnityEngine.GameObject Create(string name);
            static /*0x2184884*/ UnityEngine.GameObject Create(string name, UnityEngine.Component parent);
            static /*0x21847a8*/ UnityEngine.GameObject Create(string name, UnityEngine.GameObject parent);
            static /*0x1ffc854*/ T GetOrAddComponent<T>(UnityEngine.GameObject gameObject);
            static /*0x1f31840*/ bool RemoveComponent<T>(UnityEngine.GameObject gameObject);
            static /*0x1f327cc*/ T[] GetComponentsInChildrenWithoutParent<T>(UnityEngine.GameObject go);
            static /*0x1ffc854*/ T GetFirstComponentInChildren<T>(UnityEngine.GameObject go);
            static /*0x2173f54*/ void SetActiveFast(UnityEngine.GameObject gameObject, bool bActive);
            static /*0x2184914*/ string GetFullPath(UnityEngine.GameObject obj);
            static /*0x2184a70*/ void SetLayerRecursively(UnityEngine.GameObject gameObject, int layer);
            static /*0x2184a94*/ void SetLayerRecursively(UnityEngine.Transform root, int layer);
            static /*0x2184b18*/ UnityEngine.GameObject CloneAndAddChild(UnityEngine.GameObject toClone, UnityEngine.GameObject parent, UnityEngine.Vector3 position, UnityEngine.Quaternion orientation);
            static /*0x2184c30*/ void GetChildrenByTag(UnityEngine.GameObject root, string tag, bool includeAllChildrenUnderTaggedParent, ref System.Collections.Generic.List<UnityEngine.GameObject> results);
        }

        class MemoryUtils
        {
            static /*0x0*/ System.Action s_lowMemoryEvent;
            static /*0x8*/ long s_minNotificationInterval;
            static /*0x10*/ long s_nextAllowedCallTime;
            static /*0x18*/ int <NumberOfLowMemoryWarnings>k__BackingField;

            static /*0x21852f4*/ MemoryUtils();
            static /*0x2185090*/ void add_s_lowMemoryEvent(System.Action value);
            static /*0x2185168*/ void remove_s_lowMemoryEvent(System.Action value);
            static /*0x2185240*/ int get_NumberOfLowMemoryWarnings();
            static /*0x2185298*/ void set_NumberOfLowMemoryWarnings(int value);
            static /*0x21853f0*/ void UnityLowMemoryCallback();
            static /*0x21855cc*/ void RegisterLowMemoryCallback(System.Action callback);
            static /*0x2185620*/ void UnRegisterLowMemoryCallback(System.Action callback);
            static /*0x2185538*/ void TriggerLowMemory();
        }

        class StringUtils
        {
            static /*0x2185674*/ bool SafeEquals(string a, string b);
            static /*0x2185680*/ bool SafeEquals(string a, string b, System.StringComparison comparison);
            static /*0x2185688*/ string Cache(string originalString);
        }
    }

    namespace UI
    {
        namespace UUIF
        {
            namespace Navigation
            {
                class NavigationStateChanged : System.MulticastDelegate
                {
                    /*0x218568c*/ NavigationStateChanged(object object, nint method);
                    /*0x2185740*/ void Invoke(string rootMachineId, RedCrow.Stately.Core.StatelyState previousState, RedCrow.Stately.Core.StatelyState newState);
                    /*0x2185754*/ System.IAsyncResult BeginInvoke(string rootMachineId, RedCrow.Stately.Core.StatelyState previousState, RedCrow.Stately.Core.StatelyState newState, System.AsyncCallback callback, object object);
                    /*0x2185788*/ void EndInvoke(System.IAsyncResult result);
                }

                interface INavigationManager
                {
                    /*0x1f30ebc*/ void add_NavspaceStateChanged(RedCrow.UI.UUIF.Navigation.NavigationStateChanged value);
                    /*0x1f30ebc*/ void remove_NavspaceStateChanged(RedCrow.UI.UUIF.Navigation.NavigationStateChanged value);
                    /*0x1f30ebc*/ void add_NavTransitionBegin(System.Action<string> value);
                    /*0x1f30ebc*/ void remove_NavTransitionBegin(System.Action<string> value);
                    /*0x1f30ebc*/ void add_NavTransitionComplete(System.Action<string> value);
                    /*0x1f30ebc*/ void remove_NavTransitionComplete(System.Action<string> value);
                    /*0x1f2fe14*/ bool get_IsInTransition();
                    /*0x1f2fec8*/ bool HandleNavigationRequest(string actionName);
                    /*0x1f2fe80*/ bool DispatchStateEvent(int eventId, object[] eventParameters);
                    /*0x1f302cc*/ RedCrow.UI.UUIF.Navigation.Navspace GetNavspace(string navspaceId);
                    /*0x1f302cc*/ RedCrow.Stately.Core.StatelyState GetCurrentState(string navspaceId);
                }

                class NavigationManager : RedCrow.UI.UUIF.Navigation.INavigationManager
                {
                    /*0x10*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Navigation.Navspace> m_navspaces;
                    /*0x18*/ System.Collections.Generic.Queue<RedCrow.UI.UUIF.Navigation.NavigationRequest> m_requestQueue;
                    /*0x20*/ RedCrow.UI.UUIF.Navigation.NavigationStateChanged NavspaceStateChanged;
                    /*0x28*/ System.Action<string> NavTransitionBegin;
                    /*0x30*/ System.Action<string> NavTransitionComplete;
                    /*0x38*/ bool <IsInTransition>k__BackingField;
                    /*0x40*/ RedCrow.UI.UUIF.Navigation.NavigationRequest m_lastProcessedRequest;

                    /*0x2186810*/ NavigationManager();
                    /*0x2185794*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Navigation.Navspace> get_Navspaces();
                    /*0x218579c*/ void add_NavspaceStateChanged(RedCrow.UI.UUIF.Navigation.NavigationStateChanged value);
                    /*0x2185838*/ void remove_NavspaceStateChanged(RedCrow.UI.UUIF.Navigation.NavigationStateChanged value);
                    /*0x21858d4*/ void add_NavTransitionBegin(System.Action<string> value);
                    /*0x2185984*/ void remove_NavTransitionBegin(System.Action<string> value);
                    /*0x2185a34*/ void add_NavTransitionComplete(System.Action<string> value);
                    /*0x2185ae4*/ void remove_NavTransitionComplete(System.Action<string> value);
                    /*0x2185b94*/ bool get_IsInTransition();
                    /*0x2185b9c*/ void set_IsInTransition(bool value);
                    /*0x2185ba4*/ void InvokeLayerStateChanged(string navspaceId, RedCrow.Stately.Core.StatelyState previousState, RedCrow.Stately.Core.StatelyState newState);
                    /*0x2185bc0*/ void Update(float deltaTime);
                    /*0x2185cf0*/ void ProcessRequestQueue();
                    /*0x2185e78*/ RedCrow.Stately.Core.StatelyManager AddNavspace(string navspaceId, RedCrow.Stately.Core.StatelyStateMachine layerStateMachine, int eventPriority, RedCrow.Stately.Core.StatelyContext context, bool allowsBacktracking);
                    /*0x218604c*/ void OnNavigationComplete(RedCrow.Stately.Core.StatelyState state);
                    /*0x21860d4*/ bool HandleNavigationRequest(string transitionName);
                    /*0x2185da0*/ bool AreAnyNavspacesInTransition();
                    /*0x2186264*/ bool CanStatelyHandleTransition(RedCrow.Stately.Core.StatelyTransitionRequest request);
                    /*0x218633c*/ string GetStatelyInfo();
                    /*0x2186448*/ void ProcessNavigationRequest(RedCrow.UI.UUIF.Navigation.NavigationRequest request);
                    /*0x218659c*/ bool DispatchStateEvent(int eventId, object[] eventParameters);
                    /*0x218617c*/ bool HandleNavigationRequest(RedCrow.UI.UUIF.Navigation.NavigationRequest request);
                    /*0x2186670*/ RedCrow.UI.UUIF.Navigation.Navspace GetNavspace(string navspaceId);
                    /*0x2186734*/ RedCrow.Stately.Core.StatelyState GetCurrentState(string navspaceId);
                }

                class NavigationRequest
                {
                    /*0x10*/ string <TransitionName>k__BackingField;

                    /*0x218614c*/ NavigationRequest(string transitionName);
                    /*0x21868ec*/ string get_TransitionName();
                    /*0x21868f4*/ void set_TransitionName(string value);
                }

                class Navspace : System.IComparable<RedCrow.UI.UUIF.Navigation.Navspace>
                {
                    /*0x10*/ string <ID>k__BackingField;
                    /*0x18*/ int <EventPriority>k__BackingField;
                    /*0x20*/ RedCrow.Stately.Core.StatelyManager <Manager>k__BackingField;
                    /*0x28*/ RedCrow.Stately.Core.StatelyState <LastActiveState>k__BackingField;

                    /*0x2185ff8*/ Navspace(string id, RedCrow.Stately.Core.StatelyManager manager, int eventPriority);
                    /*0x21868fc*/ string get_ID();
                    /*0x2186904*/ void set_ID(string value);
                    /*0x218690c*/ int get_EventPriority();
                    /*0x2186914*/ void set_EventPriority(int value);
                    /*0x218691c*/ RedCrow.Stately.Core.StatelyManager get_Manager();
                    /*0x2186924*/ void set_Manager(RedCrow.Stately.Core.StatelyManager value);
                    /*0x218692c*/ RedCrow.Stately.Core.StatelyState get_LastActiveState();
                    /*0x2186934*/ void set_LastActiveState(RedCrow.Stately.Core.StatelyState value);
                    /*0x218693c*/ RedCrow.Stately.Core.StatelyState GetCurrentState();
                    /*0x2186954*/ RedCrow.Stately.Core.StatelyStateMachine GetRootState();
                    /*0x2186978*/ int CompareTo(RedCrow.UI.UUIF.Navigation.Navspace other);
                }

                class UINavigationStateBase<T> : RedCrow.Stately.Core.StatelyBehaviour
                {
                    /*0x0*/ T m_panelGroup;
                    /*0x0*/ bool m_hasUnloadTimedOut;
                    /*0x0*/ float m_unloadStartTimestamp;

                    /*0x1f309e4*/ UINavigationStateBase();
                    /*0x1f30804*/ float get_UnloadTimeout();
                    /*0x1f309e4*/ void OnStateEnter();
                    /*0x1f309e4*/ void OnStateStartUnloading();
                    /*0x1f2fe14*/ bool IsDoneUnloading();
                    void OnStateUnloadingUpdate(float deltaTime);
                    /*0x1f309e4*/ void OnDestroy();
                }
            }

            namespace Localization
            {
                class LocalizationChangedHandler : System.MulticastDelegate
                {
                    /*0x21869a4*/ LocalizationChangedHandler(object object, nint method);
                    /*0x2186a54*/ void Invoke(string locale);
                    /*0x2186a68*/ System.IAsyncResult BeginInvoke(string locale, System.AsyncCallback callback, object object);
                    /*0x2186a88*/ void EndInvoke(System.IAsyncResult result);
                }

                class LocalizationRefreshedHandler : System.MulticastDelegate
                {
                    /*0x2186a94*/ LocalizationRefreshedHandler(object object, nint method);
                    /*0x2186b34*/ void Invoke(RedCrow.UI.UUIF.Localization.Language language);
                    /*0x2186b48*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Localization.Language language, System.AsyncCallback callback, object object);
                    /*0x2186bcc*/ void EndInvoke(System.IAsyncResult result);
                }

                interface ILocalizationManager
                {
                    /*0x1f30ebc*/ void add_LocalizationChanged(RedCrow.UI.UUIF.Localization.LocalizationChangedHandler value);
                    /*0x1f30ebc*/ void remove_LocalizationChanged(RedCrow.UI.UUIF.Localization.LocalizationChangedHandler value);
                    /*0x1f30ebc*/ void add_LocalizationRefreshed(RedCrow.UI.UUIF.Localization.LocalizationRefreshedHandler value);
                    /*0x1f30ebc*/ void remove_LocalizationRefreshed(RedCrow.UI.UUIF.Localization.LocalizationRefreshedHandler value);
                    /*0x1f30214*/ System.Globalization.CultureInfo get_DeviceCulture();
                    /*0x1f2ffc8*/ RedCrow.UI.UUIF.Localization.Language get_CurrentLanguage();
                    /*0x1f30214*/ string get_CurrentLocale();
                    /*0x1f30214*/ System.Globalization.CultureInfo get_CurrentCultureInfo();
                    /*0x1f30214*/ Yeti.CultureInfoOverride get_CultureInfoOverride();
                    /*0x1f30ebc*/ void set_CultureInfoOverride(Yeti.CultureInfoOverride value);
                    bool IsReady(bool requiresStaticFont);
                    /*0x1f309e4*/ void EvaluateCurrentLanguage();
                    /*0x1f309e4*/ void LoadBuiltinStrings();
                    /*0x1f309e4*/ void LoadBundledStrings();
                    /*0x1f309e4*/ void LoadOTAStrings();
                    /*0x1f309e4*/ void ForceRefresh();
                    /*0x1f30b78*/ void SetUserLanguagePreference(RedCrow.UI.UUIF.Localization.Language userPreferredLanguage);
                    /*0x1f309e4*/ void ClearUserLanguagePreference();
                    /*0x1f2ffc8*/ RedCrow.UI.UUIF.Localization.Language CheckUserOrDeviceLanguage();
                    /*0x1f310fc*/ void TranslateAndAssign(UnityEngine.UI.Text label, string stringId, object[] parameters);
                    void TranslateAndAssignWithFormat(UnityEngine.UI.Text label, string stringId, RedCrow.UI.UUIF.Localization.LocalizationHelpers.CaseFormattingEnum formatting, object[] parameters);
                    /*0x1f30ff0*/ void AssignTranslatedText(UnityEngine.UI.Text label, string translatedText);
                    /*0x1f30394*/ string Translate(string stringId, object[] parameters);
                    /*0x1f30394*/ string TranslateStringAndParams(string stringId, object[] parameters);
                    /*0x1f302cc*/ string Translate(string stringId);
                    /*0x1f30240*/ string LocalizeNumber(int value);
                    string LocalizeNumber(long value);
                    string LocalizeNumber(float value, string format);
                    string LocalizeNumber(float value);
                    string LocalizeNumber(double value);
                    /*0x1ffc854*/ string LocalizeInteger(string format, long value);
                    /*0x1ffc854*/ string LocalizeTime(System.TimeSpan timeSpan);
                    string LocalizeDate(System.DateTime date);
                    string LocalizeCurrency(long value, string currencyCode);
                    string LocalizeCurrency(float value, string currencyCode);
                    /*0x1f2fec8*/ bool HasTranslation(string stringId);
                    /*0x1f2fe14*/ bool IsRightToLeft();
                    /*0x1f30394*/ string RearrangeRTLText(string input, UnityEngine.UI.Text label);
                }

                enum Language
                {
                    English = 0,
                    French = 1,
                    Italian = 2,
                    German = 3,
                    Russian = 4,
                    Turkish = 5,
                    BrazilianPortuguese = 6,
                    Dutch = 7,
                    Japanese = 8,
                    Norwegian = 9,
                    Danish = 10,
                    Swedish = 11,
                    SimplifiedChinese = 12,
                    MexicanSpanish = 13,
                    InternationalSpanish = 14,
                    Korean = 15,
                    Portuguese = 16,
                    Arabic = 17,
                    TraditionalChinese = 18,
                    Indonesian = 19,
                    Thai = 20,
                    Malay = 21,
                    Vietnamese = 22,
                    SpainSpanish = 23,
                    Longest = 24,
                }

                class LocalizationHelpers
                {
                    static /*0x0*/ string[] sLocales;
                    static /*0x8*/ System.Collections.Generic.Dictionary<string, System.Globalization.CultureInfo> CurrencyCodeToCultureInfo;

                    static /*0x2186d20*/ LocalizationHelpers();
                    static /*0x2186bd8*/ string GetLocaleForLanguage(RedCrow.UI.UUIF.Localization.Language language);
                    static /*0x2186c54*/ string FormatCase(string text, RedCrow.UI.UUIF.Localization.LocalizationHelpers.CaseFormattingEnum formatting, System.Globalization.CultureInfo cultureInfo);
                    static /*0x2187578*/ bool TryGetCultureForCurrencyCode(string currencyCode, ref System.Globalization.CultureInfo info);
                    /*0x2187630*/ LocalizationHelpers();

                    enum CaseFormattingEnum
                    {
                        None = 0,
                        UpperCase = 1,
                        LowerCase = 2,
                        CultureUpperCase = 3,
                        CultureLowerCase = 4,
                    }

                    class <>c
                    {
                        static /*0x0*/ RedCrow.UI.UUIF.Localization.LocalizationHelpers.<> <>9;

                        static /*0x2187638*/ <>c();
                        /*0x21876a0*/ <>c();
                        /*0x21876a8*/ int <.cctor>b__5_0(System.Globalization.CultureInfo lhs, System.Globalization.CultureInfo rhs);
                    }
                }

                class LocalizationManager : RedCrow.UI.UUIF.Localization.ILocalizationManager
                {
                    static /*0x0*/ object[] s_emptyParameters;
                    /*0x10*/ RedCrow.UI.UUIF.Localization.LocalizationChangedHandler LocalizationChanged;
                    /*0x18*/ RedCrow.UI.UUIF.Localization.LocalizationRefreshedHandler LocalizationRefreshed;
                    /*0x20*/ System.Text.StringBuilder _stringBuilder;
                    /*0x28*/ RedCrow.UI.UUIF.Localization.Language m_currentLanguage;
                    /*0x30*/ Yeti.CultureInfoOverride m_cultureInfoOverride;
                    /*0x38*/ System.Collections.Generic.Dictionary<string, System.Globalization.CultureInfo> _currencyInfos;
                    /*0x40*/ string <CurrentLocale>k__BackingField;
                    /*0x48*/ System.Globalization.CultureInfo <CurrentCultureInfo>k__BackingField;

                    static /*0x2188f84*/ LocalizationManager();
                    /*0x2188ec0*/ LocalizationManager();
                    /*0x2187700*/ void add_LocalizationChanged(RedCrow.UI.UUIF.Localization.LocalizationChangedHandler value);
                    /*0x218779c*/ void remove_LocalizationChanged(RedCrow.UI.UUIF.Localization.LocalizationChangedHandler value);
                    /*0x2187838*/ void add_LocalizationRefreshed(RedCrow.UI.UUIF.Localization.LocalizationRefreshedHandler value);
                    /*0x21878d4*/ void remove_LocalizationRefreshed(RedCrow.UI.UUIF.Localization.LocalizationRefreshedHandler value);
                    /*0x2187970*/ System.Globalization.CultureInfo get_DeviceCulture();
                    /*0x2187990*/ Yeti.CultureInfoOverride get_CultureInfoOverride();
                    /*0x2187998*/ void set_CultureInfoOverride(Yeti.CultureInfoOverride value);
                    /*0x21879e4*/ RedCrow.UI.UUIF.Localization.Language get_CurrentLanguage();
                    /*0x21879ec*/ void set_CurrentLanguage(RedCrow.UI.UUIF.Localization.Language value);
                    /*0x2187aa8*/ string get_CurrentLocale();
                    /*0x2187ab0*/ void set_CurrentLocale(string value);
                    /*0x2187ab8*/ System.Globalization.CultureInfo get_CurrentCultureInfo();
                    /*0x2187ac0*/ void set_CurrentCultureInfo(System.Globalization.CultureInfo value);
                    bool IsReady(bool requiresStaticFont);
                    /*0x1f30214*/ System.Globalization.CultureInfo get_DefaultCulture();
                    /*0x1f30394*/ string GetLocalizedString(string stringId, object[] parameters);
                    /*0x1f309e4*/ void EvaluateCurrentLanguage();
                    /*0x1f2fec8*/ bool HasTranslation(string stringId);
                    /*0x1f309e4*/ void LoadBuiltinStrings();
                    /*0x1f309e4*/ void LoadBundledStrings();
                    /*0x1f309e4*/ void LoadOTAStrings();
                    /*0x1f309e4*/ void ForceRefresh();
                    /*0x1f30b78*/ void SetUserLanguagePreference(RedCrow.UI.UUIF.Localization.Language userPreferredLanguage);
                    /*0x1f309e4*/ void ClearUserLanguagePreference();
                    /*0x1f2ffc8*/ RedCrow.UI.UUIF.Localization.Language CheckUserOrDeviceLanguage();
                    /*0x2187ac8*/ void OnLocalizationChanged();
                    /*0x2187ae8*/ void TranslateAndAssignWithFormat(UnityEngine.UI.Text textField, string stringId, RedCrow.UI.UUIF.Localization.LocalizationHelpers.CaseFormattingEnum formatting, object[] parameters);
                    /*0x2187bac*/ void TranslateAndAssign(UnityEngine.UI.Text textField, string stringId, object[] parameters);
                    /*0x2187bc4*/ void AssignTranslatedText(UnityEngine.UI.Text textField, string translatedText);
                    /*0x2187c48*/ System.Collections.Generic.List<string> SplitLine(string line, int startIndex);
                    /*0x2187db4*/ string UnEscape(string stringToStrip);
                    /*0x2187e0c*/ string Translate(string stringId, object[] parameters);
                    /*0x21882a0*/ string TranslateStringAndParams(string stringId, object[] parameters);
                    /*0x218820c*/ string Translate(string stringId);
                    /*0x218847c*/ System.Globalization.CultureInfo GetCultureInfo();
                    /*0x21884a0*/ string LocalizeDouble(double value);
                    /*0x2188550*/ string LocalizeNumber(int value);
                    /*0x2188674*/ string LocalizeNumber(long value);
                    /*0x2188678*/ string LocalizeNumber(float value, string format);
                    /*0x21886cc*/ string LocalizeNumber(float value);
                    /*0x2188730*/ string LocalizeNumber(double value);
                    /*0x2188740*/ string LocalizeInteger(string format, long value);
                    /*0x2188898*/ string LocalizeTime(System.TimeSpan timeSpan);
                    /*0x2188a58*/ string LocalizeDate(System.DateTime date);
                    /*0x2188b00*/ string LocalizeCurrency(long value, string currencyCode);
                    /*0x2188e28*/ string LocalizeCurrency(float value, string currencyCode);
                    /*0x2188eb0*/ bool IsRightToLeft();
                    /*0x2188eb8*/ string RearrangeRTLText(string input, UnityEngine.UI.Text label);
                    /*0x2188558*/ string LocalizeNumberOverridePreferences(long value);
                    /*0x2188b88*/ System.Globalization.CultureInfo GetCultureInfoForCurrencyCode(string currencyCode);
                }
            }

            namespace DataProviding
            {
                class ActionContext
                {
                    /*0x10*/ RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate ContextChanged;
                    /*0x18*/ RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate ContextChangedDeferred;
                    /*0x20*/ bool <IsContextDirty>k__BackingField;
                    /*0x24*/ RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue m_Context;

                    static /*0x218931c*/ RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue ConvertToValid(bool isValid);
                    /*0x2189328*/ ActionContext();
                    /*0x2188ff8*/ void add_ContextChanged(RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate value);
                    /*0x2189094*/ void remove_ContextChanged(RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate value);
                    /*0x2189130*/ void add_ContextChangedDeferred(RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate value);
                    /*0x21891cc*/ void remove_ContextChangedDeferred(RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate value);
                    /*0x2189268*/ RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue get_Context();
                    /*0x2189270*/ void set_Context(RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue value);
                    /*0x21892d4*/ bool get_IsContextDirty();
                    /*0x21892dc*/ void set_IsContextDirty(bool value);
                    /*0x21892ac*/ void OnContextChanged();
                    /*0x21892e4*/ void DispatchDeferredChangeEvents();

                    enum ActionContextValue
                    {
                        Valid = 0,
                        Invalid = 1,
                        Spinning = 2,
                        Blocked = 3,
                    }

                    class ActionContextChangeDelegate : System.MulticastDelegate
                    {
                        /*0x2189330*/ ActionContextChangeDelegate(object object, nint method);
                        /*0x2189438*/ void Invoke(RedCrow.UI.UUIF.DataProviding.ActionContext context);
                        /*0x218944c*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.DataProviding.ActionContext context, System.AsyncCallback callback, object object);
                        /*0x218946c*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                class BindingContainerImpl : RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation
                {
                    /*0x10*/ RedCrow.Collections.WorryFreeList<System.Action<bool>> m_bindingPermissionChanged;
                    /*0x18*/ RedCrow.Collections.WorryFreeList<System.Action> m_rebindRequested;
                    /*0x20*/ RedCrow.Collections.WorryFreeList<System.Action<RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation>> m_keyChanged;
                    /*0x28*/ RedCrow.Collections.WorryFreeList<System.Action<RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder>> m_binderRegistered;
                    /*0x30*/ RedCrow.Collections.WorryFreeList<System.Action<RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder>> m_binderUnregistered;
                    /*0x38*/ bool m_bindingEnabled;
                    /*0x39*/ bool m_lastDispatchedBindingPermission;
                    /*0x40*/ UnityEngine.GameObject m_gameObject;
                    /*0x48*/ UnityEngine.Transform m_transform;
                    /*0x50*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot m_initialKey;
                    /*0x58*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot m_constructedRelativeKey;
                    /*0x60*/ bool m_isKeyInitialized;
                    /*0x68*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation m_parentBindingContainer;
                    /*0x70*/ bool m_failedToFindParent;
                    /*0x78*/ RedCrow.Collections.WorryFreeList<RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder> m_registeredBinders;
                    /*0x80*/ RedCrow.Collections.WorryFreeList<RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation> m_registeredChildContainers;

                    /*0x2189af0*/ BindingContainerImpl(UnityEngine.GameObject gameObject, bool isBindingPermittedInitially, RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot initialKey);
                    /*0x218a0a8*/ BindingContainerImpl(UnityEngine.GameObject gameObject, bool isBindingPermittedInitially, bool inheritRelativeKeyPrefix);
                    /*0x2189478*/ void add_BindingPermissionChanged(System.Action<bool> value);
                    /*0x2189524*/ void remove_BindingPermissionChanged(System.Action<bool> value);
                    /*0x2189584*/ void add_RebindRequested(System.Action value);
                    /*0x2189630*/ void remove_RebindRequested(System.Action value);
                    /*0x2189690*/ void add_KeyChanged(System.Action<RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation> value);
                    /*0x218973c*/ void remove_KeyChanged(System.Action<RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation> value);
                    /*0x218979c*/ void add_BinderRegistered(System.Action<RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder> value);
                    /*0x2189848*/ void remove_BinderRegistered(System.Action<RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder> value);
                    /*0x21898a8*/ void add_BinderUnregistered(System.Action<RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder> value);
                    /*0x2189954*/ void remove_BinderUnregistered(System.Action<RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder> value);
                    /*0x21899b4*/ UnityEngine.GameObject get_GameObject();
                    /*0x21899bc*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation get_ParentBindingContainer();
                    /*0x21899c4*/ int get_NumRegisteredBinders();
                    /*0x218a1b0*/ bool InitializeKey();
                    /*0x218a40c*/ void Reorient();
                    /*0x218a398*/ void DispatchPermissionEventIfChanged();
                    /*0x218a804*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot get_RelativeKeyPrefix();
                    /*0x218a80c*/ void set_RelativeKeyPrefix(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot value);
                    /*0x218a728*/ void UpdateKeyPrefix(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot newBaseKey);
                    /*0x218a1e8*/ void ConstructKeyPrefix();
                    /*0x218a810*/ void OnParentKeyChanged(RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation container);
                    /*0x218a988*/ void OnParentBindingPermissionChanged(bool isParentBindingPermitted);
                    /*0x218a98c*/ void OnParentRebindRequested();
                    /*0x218a998*/ void RequestRebind();
                    /*0x218a9a4*/ bool get_IsKeyInitialized();
                    /*0x218a9ac*/ bool get_IsBindingEnabled();
                    /*0x218a9b4*/ void set_IsBindingEnabled(bool value);
                    /*0x2189fe0*/ bool get_IsBindingPermitted();
                    /*0x218a9d0*/ bool get_IsBindingPermittedLocally();
                    /*0x218a9f0*/ void OnDestroy();
                    /*0x2189bfc*/ void SubscribeToParentBindingContainer();
                    /*0x218a450*/ void UnsubscribeFromParentBindingContainer();
                    /*0x218aa18*/ bool AreAllBindersReadyForDisplay();
                    /*0x218ac8c*/ void RegisterBinder(RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder binder);
                    /*0x218ada4*/ void UnregisterBinder(RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder binder);
                    /*0x218ae28*/ void RegisterBindingContainer(RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation childContainer);
                    /*0x218aed4*/ void UnregisterBindingContainer(RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation childContainer);
                }

                class CountingUIDataProviderManager : RedCrow.UI.UUIF.DataProviding.IUIDataProviderManager
                {
                    /*0x10*/ System.Collections.Generic.Dictionary<System.Type, RedCrow.UI.UUIF.DataProviding.CountingUIDataProviderManager.DataProviderInstanceInfo> m_activeDataProviderRequests;

                    /*0x22a9200*/ CountingUIDataProviderManager();
                    /*0x22a8de0*/ void RequestDataProvider(System.Type dataProviderType, object requester);
                    /*0x22a9004*/ void ReleaseDataProvider(System.Type dataProviderType, object requester);
                    /*0x22a9174*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase GetDataProviderInstance(System.Type dataProviderType);
                    /*0x1ffc854*/ T GetDataProviderInstance<T>();
                    /*0x22a8ee8*/ RedCrow.UI.UUIF.DataProviding.CountingUIDataProviderManager.DataProviderInstanceInfo CreateDataProviderInstance(System.Type dataProviderType, object initialRequester);
                    /*0x1f302cc*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase CreateDataProvider(System.Type dataProviderType);
                    /*0x1f30ebc*/ void RegisterDataProvider(RedCrow.UI.UUIF.DataProviding.UIDataProviderBase dataProvider);
                    /*0x1f30ebc*/ void UnregisterDataProvider(RedCrow.UI.UUIF.DataProviding.UIDataProviderBase dataProvider);

                    class DataProviderInstanceInfo
                    {
                        /*0x10*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase DataProvider;
                        /*0x18*/ System.Collections.Generic.HashSet<object> Requesters;

                        /*0x22a91f8*/ DataProviderInstanceInfo();
                    }
                }

                class DataBoundPanel : RedCrow.UI.UUIF.DataProviding.DataBoundPanelBase
                {
                    /*0xb4*/ float HideTimeout;

                    /*0x22a93dc*/ DataBoundPanel();
                    /*0x22a9288*/ float get_HideTimeoutSeconds();
                    /*0x22a9290*/ void LateUpdate();
                }

                class DataBoundPanelBase : RedCrow.UI.UUIF.Core.PanelBase, RedCrow.UI.UUIF.DataProviding.IBindingContainer
                {
                    /*0xa0*/ RedCrow.UI.UUIF.DataProviding.BindingContainerImpl m_bindingContainerImpl;
                    /*0xa8*/ bool m_isPreparingForDisplay;
                    /*0xac*/ int m_frameThatLastBindingWasRegistered;
                    /*0xb0*/ float m_originalCanvasGroupAlpha;

                    /*0x22a93f4*/ DataBoundPanelBase();
                    /*0x22a9404*/ bool get_IsPreparingForDisplay();
                    /*0x22a940c*/ void Show(bool skipAnimation);
                    /*0x22a968c*/ void OnHideComplete();
                    /*0x22a9294*/ void UpdateReadyForDisplay();
                    /*0x22a973c*/ void OnBinderRegistered(RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder binder);
                    /*0x22a9774*/ void PrepareForDisplay();
                    /*0x22a9758*/ void ResetLastBindingFrame();
                    /*0x22a94cc*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation GetBindingContainerImplementation();
                    /*0x22a98ac*/ void OnDestroy();
                }

                class DataBoundPopupBase : RedCrow.UI.UUIF.Core.PopupBase, RedCrow.UI.UUIF.DataProviding.IBindingContainer
                {
                    /*0xd0*/ RedCrow.UI.UUIF.DataProviding.BindingContainerImpl m_bindingContainerStrategy;

                    /*0x22a9a80*/ DataBoundPopupBase();
                    /*0x22a99e4*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation GetBindingContainerImplementation();
                }

                interface IBindingContainer
                {
                    /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation GetBindingContainerImplementation();
                }

                interface IBindingContainerImplementation
                {
                    /*0x1f2fe14*/ bool get_IsBindingEnabled();
                    /*0x1f30a84*/ void set_IsBindingEnabled(bool value);
                    /*0x1f2fe14*/ bool get_IsBindingPermitted();
                    /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation get_ParentBindingContainer();
                    /*0x1f30214*/ UnityEngine.GameObject get_GameObject();
                    /*0x1f30ebc*/ void add_BindingPermissionChanged(System.Action<bool> value);
                    /*0x1f30ebc*/ void remove_BindingPermissionChanged(System.Action<bool> value);
                    /*0x1f30ebc*/ void add_RebindRequested(System.Action value);
                    /*0x1f30ebc*/ void remove_RebindRequested(System.Action value);
                    /*0x1f309e4*/ void RequestRebind();
                    /*0x1f30ebc*/ void RegisterBindingContainer(RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation childContainer);
                    /*0x1f30ebc*/ void UnregisterBindingContainer(RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation childContainer);
                    /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot get_RelativeKeyPrefix();
                    /*0x1f30ebc*/ void set_RelativeKeyPrefix(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot value);
                    /*0x1f2fe14*/ bool get_IsKeyInitialized();
                    /*0x1f2fe14*/ bool InitializeKey();
                    /*0x1f309e4*/ void Reorient();
                    /*0x1f30ebc*/ void add_KeyChanged(System.Action<RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation> value);
                    /*0x1f30ebc*/ void remove_KeyChanged(System.Action<RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation> value);
                    /*0x1f30ebc*/ void RegisterBinder(RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder binder);
                    /*0x1f30ebc*/ void UnregisterBinder(RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder binder);
                    /*0x1f2ffc8*/ int get_NumRegisteredBinders();
                    /*0x1f2fe14*/ bool AreAllBindersReadyForDisplay();
                }

                interface IRebindTrigger
                {
                    /*0x1f30ebc*/ void add_RebindRequested(System.Action value);
                    /*0x1f30ebc*/ void remove_RebindRequested(System.Action value);
                }

                interface IUIDataProvider
                {
                    bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                    /*0x1f2ff00*/ bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel);
                    bool HandleDataAction(RedCrow.UI.UUIF.DataProviding.UIDataKey key, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string actionName, object[] actionParams);
                    bool TryGetActionContext(RedCrow.UI.UUIF.DataProviding.UIDataKey key, string actionName, ref RedCrow.UI.UUIF.DataProviding.ActionContext context);
                    System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetAllModels(bool includeLazyInstantiations);
                }

                interface IUIDataProviderManager
                {
                    /*0x1f30ff0*/ void RequestDataProvider(System.Type dataProviderType, object requester);
                    /*0x1f30ff0*/ void ReleaseDataProvider(System.Type dataProviderType, object requester);
                    /*0x1f302cc*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase GetDataProviderInstance(System.Type dataProviderType);
                    /*0x1ffc854*/ T GetDataProviderInstance<T>();
                }

                interface IUIDataProvidingService : RedCrow.UI.UUIF.DataProviding.IUIDataProvider
                {
                    /*0x1f302cc*/ RedCrow.UI.UUIF.DataProviding.IUIDataProvider AddDataProvider(System.Type type);
                    /*0x1f30ebc*/ void RemoveDataProvider(System.Type type);
                    /*0x1f2fec8*/ bool HasDataProviderOfType(System.Type type);
                    /*0x1f30ebc*/ void add_DataProviderAdded(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    /*0x1f30ebc*/ void remove_DataProviderAdded(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    /*0x1f30ebc*/ void add_DataProviderRemoved(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    /*0x1f30ebc*/ void remove_DataProviderRemoved(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    bool HandleDataAction(RedCrow.UI.UUIF.DataProviding.UIDataKey key, string actionName, object[] actionParams);
                }

                class ModelObjectPoolUtils
                {
                    /*0x22a9a98*/ ModelObjectPoolUtils();
                }

                class ModelObjectPool<T> : System.IDisposable
                {
                    /*0x0*/ RedCrow.Collections.WorryFreeList<T> m_objects;
                    /*0x0*/ System.Func<T> m_objectGenerator;
                    /*0x0*/ int PoolHits;
                    /*0x0*/ int ObjectsCreated;

                    /*0x1f30ebc*/ ModelObjectPool(System.Func<T> objectGenerator);
                    /*0x1f2ffc8*/ int get_Count();
                    /*0x1f30b78*/ void WarmPool(int count);
                    /*0x1f30a84*/ void ClearPool(bool disposeModels);
                    /*0x1f309e4*/ void Dispose();
                    /*0x1f309e4*/ void OnLowMemory();
                    /*0x1ffc854*/ T GetObject();
                    /*0x1ffc854*/ void PutObject(T item);
                }

                class PanelAndDataProviderGroup : RedCrow.UI.UUIF.Core.PanelGroup
                {
                    /*0x48*/ System.Collections.Generic.List<System.Type> m_dataProviderClasses;

                    /*0x22a9aa0*/ PanelAndDataProviderGroup(int groupId, RedCrow.UI.UUIF.Core.IStatefulPanelManager panelManager, RedCrow.UI.UUIF.Core.PanelPlacement[] panelPlacements);
                    /*0x22a9c50*/ PanelAndDataProviderGroup(int groupId, RedCrow.UI.UUIF.Core.IStatefulPanelManager panelManager, string[] panelIds);
                    /*0x22a9ec0*/ PanelAndDataProviderGroup(int groupId, RedCrow.UI.UUIF.Core.IStatefulPanelManager panelManager, System.Type[] dataProviderClasses);
                    /*0x22a9f90*/ void AddDataProviders(System.Type[] dataProviderClasses);
                    /*0x22aa0d4*/ void RemoveDataProviders(System.Type[] dataProviderClasses);
                    /*0x22aa178*/ void Show();
                    /*0x22aa2f0*/ void Hide(bool immediate);
                    /*0x22aa4cc*/ void OnPanelsAnimatedOut();
                    /*0x1f309e4*/ void SetupDataProviders();
                    /*0x1f309e4*/ void TeardownDataProviders();
                }

                class UIDataKey
                {
                    /*0x10*/ string Name;
                    /*0x18*/ System.Nullable<int> Index;
                    /*0x20*/ RedCrow.UI.UUIF.DataProviding.UIDataKey SubKey;

                    static /*0x22aaafc*/ RedCrow.UI.UUIF.DataProviding.UIDataKey GetEndKey(RedCrow.UI.UUIF.DataProviding.UIDataKey dataKey);
                    static /*0x22aab20*/ RedCrow.UI.UUIF.DataProviding.UIDataKey CreateDataKey(string dataKeyString);
                    /*0x22aa55c*/ UIDataKey();
                    /*0x22aa590*/ UIDataKey(string name);
                    /*0x22aa5c0*/ UIDataKey(int index);
                    /*0x22aa65c*/ UIDataKey(string name, RedCrow.UI.UUIF.DataProviding.UIDataKey subKey);
                    /*0x22aa6a0*/ UIDataKey(int index, RedCrow.UI.UUIF.DataProviding.UIDataKey subKey);
                    /*0x22aa754*/ UIDataKey(RedCrow.UI.UUIF.DataProviding.UIDataKeySegment segment);
                    /*0x22aa830*/ string ToString();
                    /*0x22aa9a0*/ void AppendToStringBuilder(EA.Text.StringBuilder sb);
                }

                class UIDataKeyRoot
                {
                    /*0x10*/ bool IsRelative;
                    /*0x18*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot m_relativeDataKeyPrefix;
                    /*0x20*/ RedCrow.UI.UUIF.DataProviding.UIDataKey m_fullKey;
                    /*0x28*/ System.Collections.Generic.Dictionary<int, RedCrow.UI.UUIF.DataProviding.UIDataKey> m_IndexedSegments;
                    /*0x30*/ bool m_checkedIndexSegments;
                    /*0x38*/ RedCrow.UI.UUIF.DataProviding.UIDataKeySegment[] Segments;

                    static /*0x22ab90c*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot op_Addition(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot r1, RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot r2);
                    static /*0x22aba2c*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot GetDataKeyFromString(string dataKeyString);
                    /*0x22aaccc*/ UIDataKeyRoot();
                    /*0x22aacd4*/ UIDataKeyRoot(RedCrow.UI.UUIF.DataProviding.UIDataKeySegment[] segments);
                    /*0x22aad04*/ UIDataKeyRoot(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot copyFromKey);
                    /*0x22aaed8*/ UIDataKeyRoot(string[] subkeyNames);
                    /*0x22aacb4*/ int get_NumSegments();
                    /*0x22ab068*/ bool get_Empty();
                    /*0x22ab0e0*/ RedCrow.UI.UUIF.DataProviding.UIDataKey GetFullKey();
                    /*0x22ab384*/ int GetLastArrayIndex();
                    /*0x22ab498*/ void SetRelativeKeyPrefix(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot relative);
                    /*0x22ab4cc*/ int GetSegmentCount();
                    /*0x22ab4e4*/ bool HasIndexedSegments();
                    /*0x22ab688*/ bool UpdateSegmentIndex(int segmentIndex, int indexValue);
                    /*0x22ab7b0*/ bool IsSameKeyAs(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot other);
                    /*0x22ab8bc*/ void Clear();
                    /*0x22ab54c*/ void PopulateIndexedSegments();
                    /*0x22abf28*/ string ToString();
                    /*0x22aad30*/ void Override(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot newKey);
                }

                class UIDataKeySegment : System.ICloneable
                {
                    /*0x10*/ string Name;
                    /*0x18*/ bool IsInArray;
                    /*0x1c*/ int InitialIndex;

                    /*0x22abef4*/ UIDataKeySegment();
                    /*0x22ab010*/ UIDataKeySegment(string name);
                    /*0x22ab870*/ bool IsSameKeyAs(RedCrow.UI.UUIF.DataProviding.UIDataKeySegment other);
                    /*0x22abf48*/ object Clone();
                    /*0x22ab0c4*/ bool get_Empty();
                }

                class UIDataProviderBase : RedCrow.UI.UUIF.DataProviding.IUIDataProvider
                {
                    /*0x10*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase.LazyInstantiatorDelegate m_lazyInstantiator;
                    /*0x18*/ string m_lazyInstantiatorName;
                    /*0x20*/ System.Collections.Generic.Dictionary<string, RedCrow.UI.UUIF.DataProviding.UIDataProviderBase.LazyInstantiatorDelegate> m_lazyInstantiators;
                    /*0x28*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> m_namedModels;
                    /*0x30*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase.ProviderFlags m_flags;

                    /*0x22ad2b4*/ UIDataProviderBase();
                    /*0x22abf50*/ void Initialize();
                    /*0x22abf54*/ bool get_IsDisposed();
                    /*0x22abf60*/ void set_IsDisposed(bool value);
                    /*0x22abf74*/ bool get_CreatedFromPool();
                    /*0x22abf80*/ void set_CreatedFromPool(bool value);
                    /*0x22abfa0*/ bool ContainsKey(string modelName);
                    /*0x22ac0d4*/ bool HasLazyInstanciators();
                    /*0x22ac13c*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel GetModel(string modelName);
                    /*0x22ac23c*/ bool TryGetNamedModel(string modelName, ref RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                    /*0x22ac400*/ void WarmNamedModels(int count);
                    /*0x1ffc854*/ T AddModel<T>(T model);
                    /*0x22ac490*/ bool RemoveModel(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, bool dispose);
                    /*0x22ac5f4*/ bool RemoveModel(string modelName, bool dispose);
                    /*0x1ffc854*/ T ReplaceModel<T>(RedCrow.UI.UUIF.DataProviding.Models.IUIModel modelToReplace, T modelToAdd, bool dispose);
                    /*0x22ac800*/ void RemoveAllModels();
                    /*0x22ac970*/ bool ContainsModel(string name);
                    /*0x22ac974*/ void AddLazyInstantiator(string modelName, RedCrow.UI.UUIF.DataProviding.UIDataProviderBase.LazyInstantiatorDelegate instantiator);
                    /*0x22aca78*/ bool HandleDataAction(RedCrow.UI.UUIF.DataProviding.UIDataKey key, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string actionName, object[] actionParams);
                    /*0x22acb6c*/ bool HandleOwnModelDataAction(RedCrow.UI.UUIF.DataProviding.UIDataKey key, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string actionName, object[] actionParams);
                    /*0x22acc24*/ bool TryGetActionContext(RedCrow.UI.UUIF.DataProviding.UIDataKey key, string actionName, ref RedCrow.UI.UUIF.DataProviding.ActionContext context);
                    bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                    /*0x1f2ff00*/ bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel);
                    bool TryGetModel<T>(string name, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                    /*0x1f2ff00*/ bool TryGetModel<T>(string name, ref T outModel);
                    /*0x22acd3c*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetAllModels(bool includeLazyInstantiations);
                    /*0x22acd5c*/ void InstantiateAllLazyModels();
                    /*0x22a9150*/ void Dispose();
                    /*0x22ad144*/ void OnDispose();

                    enum ProviderFlags
                    {
                        None = 0,
                        Disposed = 1,
                        CreatedFromPool = 2,
                    }

                    class LazyInstantiatorDelegate : System.MulticastDelegate
                    {
                        /*0x22ad2bc*/ LazyInstantiatorDelegate(object object, nint method);
                        /*0x22ad36c*/ void Invoke(string requestedModelName);
                        /*0x22ad380*/ System.IAsyncResult BeginInvoke(string requestedModelName, System.AsyncCallback callback, object object);
                        /*0x22ad3a0*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                class UIDataProviderDispatcher
                {
                    static /*0x0*/ RedCrow.Collections.WorryFreeList<System.Action> s_updateListeners;
                    static /*0x8*/ RedCrow.Collections.WorryFreeList<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> s_postUpdateListeners;

                    static /*0x22ad710*/ UIDataProviderDispatcher();
                    static /*0x22ad3ac*/ void add_UpdateEvent(System.Action value);
                    static /*0x22ad42c*/ void remove_UpdateEvent(System.Action value);
                    static /*0x22ad4ac*/ void AddPostUpdate(RedCrow.UI.UUIF.DataProviding.Models.IUIModel postUpdate);
                    static /*0x22ad52c*/ void Update();
                }

                class UIDataProvidingConstants
                {
                    static /*0x22ad804*/ bool Equals(string val, string refConstant);

                    class Keys
                    {
                        static string ALL = "All";
                        static string NAME = "Name";
                        static string MIN = "Min";
                        static string MAX = "Max";
                        static string CURRENT = "Current";
                        static string COUNT = "Count";
                        static string LIST = "List";
                        static string RATIO = "Ratio";
                        static string SELECTED_ITEM = "SelectedItem";
                        static string SOFT_MIN = "SoftMin";
                        static string SOFT_MAX = "SoftMax";
                        static string SOFT_MAX_RATIO = "SoftMaxRatio";
                        static string SOFT_MIN_RATIO = "SoftMinRatio";
                    }

                    class Actions
                    {
                        static string CLEAR_RANGE = "ClearRange";
                        static string CONSUME = "Consume";
                        static string DECREMENT = "Decrement";
                        static string INCREMENT = "Increment";
                        static string SET = "Set";
                        static string MODIFY = "Modify";
                        static string SET_RANGE = "SetRange";
                        static string TOGGLE = "Toggle";
                        static string RETRY = "Retry";
                    }
                }

                class UIDataProvidingService : RedCrow.UI.UUIF.DataProviding.IUIDataProvidingService, RedCrow.UI.UUIF.DataProviding.IUIDataProvider
                {
                    /*0x10*/ System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> DataProviderAdded;
                    /*0x18*/ System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> DataProviderRemoved;
                    /*0x20*/ System.Collections.Generic.Dictionary<System.Type, RedCrow.UI.UUIF.DataProviding.UIDataProvidingService.DataProviderRefCountedEntry> _dataProviders;
                    /*0x28*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> _dataProviderList;

                    static /*0x22adcd4*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase CreateDataProvider(System.Type dataProviderType);
                    /*0x22ae380*/ UIDataProvidingService();
                    /*0x22ad810*/ void add_DataProviderAdded(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    /*0x22ad8c0*/ void remove_DataProviderAdded(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    /*0x22ad970*/ void add_DataProviderRemoved(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    /*0x22ada20*/ void remove_DataProviderRemoved(System.Action<RedCrow.UI.UUIF.DataProviding.IUIDataProvider> value);
                    /*0x22adad0*/ RedCrow.UI.UUIF.DataProviding.IUIDataProvider AddDataProvider(System.Type type);
                    /*0x22add78*/ void RemoveDataProvider(System.Type type);
                    /*0x22adc0c*/ bool HasDataProviderOfType(System.Type type);
                    /*0x22adc64*/ RedCrow.UI.UUIF.DataProviding.UIDataProvidingService.DataProviderRefCountedEntry GetDataProviderEntryForType(System.Type type);
                    /*0x22ade80*/ bool TryGetActionContext(RedCrow.UI.UUIF.DataProviding.UIDataKey key, string actionName, ref RedCrow.UI.UUIF.DataProviding.ActionContext context);
                    bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                    /*0x1f2ff00*/ bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel);
                    /*0x22adfc4*/ bool HandleDataAction(RedCrow.UI.UUIF.DataProviding.UIDataKey key, string actionName, object[] actionParams);
                    /*0x22ae060*/ bool HandleDataAction(RedCrow.UI.UUIF.DataProviding.UIDataKey key, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string actionName, object[] actionParams);
                    /*0x22ae1a0*/ void Update();
                    /*0x22ae1ec*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetAllModels(bool includeLazyInstantiations);

                    class DataProviderRefCountedEntry
                    {
                        /*0x10*/ RedCrow.UI.UUIF.DataProviding.UIDataProviderBase DataProvider;
                        /*0x18*/ int Count;

                        /*0x22add70*/ DataProviderRefCountedEntry();
                    }
                }

                namespace Util
                {
                    class UIModelCache<TModel>
                    {
                        /*0x0*/ System.Collections.Generic.Dictionary<string, TModel> m_cachedModels;

                        /*0x1f309e4*/ UIModelCache();
                        /*0x1f30214*/ System.Collections.Generic.Dictionary<string, TModel> get_CachedModels();
                        /*0x1ffc854*/ void AddModel(TModel model, string key);
                        /*0x1f2fec8*/ bool HasModel(string key);
                        /*0x1f2ff00*/ bool TryGetModel(string key, ref TModel model);
                        /*0x1f30bb4*/ void DisposeUnreferencedModels(int currentFrame, int gracePeriodFrames);
                        /*0x1f309e4*/ void DisposeAllModels();
                        /*0x1f30ebc*/ void DisposeModel(string key);
                        /*0x1f2ffc8*/ int get_Count();
                    }
                }

                namespace Models
                {
                    class BoolModel : RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel
                    {
                        static /*0x0*/ RedCrow.UI.UUIF.DataProviding.ModelObjectPool<RedCrow.UI.UUIF.DataProviding.Models.BoolModel> Pool;
                        /*0xa8*/ System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoolModel> ToggleActionHandled;
                        /*0xb0*/ bool m_value;

                        static /*0x22aee40*/ BoolModel();
                        static /*0x22ae5d8*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel Create(string modelName, bool initialValue);
                        /*0x22ae5bc*/ BoolModel();
                        /*0x22ae734*/ BoolModel(string modelName, bool initialValue);
                        /*0x22ae45c*/ void add_ToggleActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoolModel> value);
                        /*0x22ae50c*/ void remove_ToggleActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoolModel> value);
                        /*0x22ae684*/ void OnDispose();
                        /*0x22ae758*/ bool AsBool();
                        /*0x22ae760*/ void Set(int val);
                        /*0x22ae7dc*/ void Set(float val);
                        /*0x22ae81c*/ void Set(bool val);
                        /*0x22ae858*/ string AsString();
                        /*0x22ae88c*/ float AsFloat();
                        /*0x22ae8a4*/ int AsInt();
                        /*0x22ae8ac*/ long AsLong();
                        /*0x22ae7a0*/ void SetValue(bool value);
                        /*0x22ae8b4*/ void ToggleValue();
                        /*0x22ae8e4*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x22aeaa4*/ bool CompareValue(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                        /*0x22aee18*/ object GetValueObject();

                        class <>c
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel.<> <>9;

                            static /*0x22aef58*/ <>c();
                            /*0x22aefc0*/ <>c();
                            /*0x22aefc8*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel <.cctor>b__22_0();
                        }
                    }

                    class BoundedNumberModel : RedCrow.UI.UUIF.DataProviding.Models.NamedModelCollection, RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveModel, RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0xa8*/ System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> SetActionHandled;
                        /*0xb0*/ System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> IncrementActionHandled;
                        /*0xb8*/ System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> DecrementActionHandled;
                        /*0xc0*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel <Min>k__BackingField;
                        /*0xc8*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel <Max>k__BackingField;
                        /*0xd0*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel <Current>k__BackingField;
                        /*0xd8*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel m_ratioModel;

                        /*0x22af47c*/ BoundedNumberModel(string name, int min, int max, int current);
                        /*0x22afa6c*/ BoundedNumberModel(string name, long min, long max, long current);
                        /*0x22afcac*/ BoundedNumberModel(string name, float min, float max, float current);
                        /*0x22af02c*/ void add_SetActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> value);
                        /*0x22af0dc*/ void remove_SetActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> value);
                        /*0x22af18c*/ void add_IncrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> value);
                        /*0x22af23c*/ void remove_IncrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> value);
                        /*0x22af2ec*/ void add_DecrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> value);
                        /*0x22af39c*/ void remove_DecrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel> value);
                        /*0x22af44c*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel get_Min();
                        /*0x22af454*/ void set_Min(RedCrow.UI.UUIF.DataProviding.Models.INumericModel value);
                        /*0x22af45c*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel get_Max();
                        /*0x22af464*/ void set_Max(RedCrow.UI.UUIF.DataProviding.Models.INumericModel value);
                        /*0x22af46c*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel get_Current();
                        /*0x22af474*/ void set_Current(RedCrow.UI.UUIF.DataProviding.Models.INumericModel value);
                        /*0x22afe20*/ void OnDispose();
                        /*0x22b00e8*/ void RecalculateRatio();
                        /*0x1ffc854*/ void SetCurrentValue<T>(T val);
                        /*0x1ffc854*/ void SetMaxValue<T>(T val);
                        /*0x1ffc854*/ void SetMinValue<T>(T val);
                        /*0x22b0348*/ RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel GetMin();
                        /*0x22b0350*/ RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel GetMax();
                        /*0x22b0358*/ RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel GetCurrent();
                        /*0x22b0360*/ void SetRange(int min, int max, int current);
                        /*0x22b04f4*/ void SetRange(float min, float max, float current);
                        /*0x22af784*/ void Init();
                        /*0x22b0688*/ void OnMinModelChanged(string e);
                        /*0x22b06e4*/ void OnMaxModelChanged(string e);
                        /*0x22b0740*/ void OnCurrentModelChanged(string e);
                        /*0x22b07b0*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x22b1364*/ void ClampCurrentToBounds();
                        /*0x22b12fc*/ void OnSetActionHandled();
                        /*0x22b131c*/ void OnIncrementActionHandled();
                        /*0x22b133c*/ void OnDecrementActionHandled();
                        /*0x22b1a9c*/ string AsString();
                        /*0x22b1b3c*/ float AsFloat();
                        /*0x22b1be0*/ int AsInt();
                        /*0x22b1c84*/ long AsLong();
                        /*0x22b1d28*/ bool AsBool();
                        /*0x22b1dcc*/ object GetValueObject();
                        /*0x22b1dd4*/ bool get_DoesStringRequireLocalization();
                        /*0x1ffc854*/ void Set<T>(T val);
                        /*0x22b1ddc*/ void Set(string val);
                        /*0x22b1e88*/ void Set(int val);
                        /*0x22b1f34*/ void Set(float val);
                        /*0x22b1fe8*/ void Set(bool val);
                        /*0x22b2094*/ void Set(long val);
                    }

                    class ConsumableModelCollection : RedCrow.UI.UUIF.DataProviding.Models.ModelBase, RedCrow.UI.UUIF.DataProviding.Models.IConsumableModelCollection, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0xa8*/ RedCrow.UI.UUIF.DataProviding.Models.ConsumableModelCollection.ModelConsumeDelegate ModelConsumeBegan;
                        /*0xb0*/ RedCrow.UI.UUIF.DataProviding.Models.ConsumableModelCollection.ModelConsumeDelegate ModelConsumeEnded;
                        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.ConsumableModelCollection.ModelConsumeDelegate ModelAutoRemoved;
                        /*0xc0*/ RedCrow.UI.UUIF.DataProviding.Models.ConsumableModelCollection.ModelConsumeDelegate ModelTimedOut;
                        /*0xc8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel m_queuedCountModel;
                        /*0xd0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.ConsumableModelCollection.QueuedEntry> m_queuedModels;
                        /*0xd8*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> m_modelsBeingConsumed;
                        /*0xe0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> m_modelGraveyard;
                        /*0xe8*/ bool m_autoDisposeRemovedModels;
                        /*0xec*/ int m_modelGraveyardSize;
                        /*0xf0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> m_modelsToDispose;
                        /*0xf8*/ long m_nextModelName;

                        /*0x22b2350*/ ConsumableModelCollection(string collectionName, bool autoDisposeRemovedModels, int graveyardSize);
                        /*0x22b2140*/ int get_QueuedModelCount();
                        /*0x22b22f8*/ int get_GraveyardModelCount();
                        /*0x22b2340*/ bool get_HasModelGraveyard();
                        /*0x22b25ac*/ bool IsModelBeingConsumed(string modelName);
                        /*0x22b26d0*/ bool IsModelBeingConsumed(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b2728*/ bool IsModelInGraveyard(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b2780*/ void Add(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, float timeoutSeconds);
                        /*0x22b2918*/ void AddRange(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> models, float timeoutSeconds);
                        /*0x22b2a8c*/ void AddToGraveyard(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b2c1c*/ bool Remove(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, bool forceDisposeModel);
                        /*0x22b2e80*/ void ExtractQueuedModels(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> extractionList);
                        /*0x22b2fc0*/ void ExtractModelsBeingConsumed(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> extractionList);
                        /*0x22b30f8*/ void ExtractGraveyardModels(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> extractionList);
                        /*0x22b31c0*/ void ExtractAllModels(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> extractionList);
                        /*0x22b31f0*/ void ClearQueuedModels(bool forceDisposeModels);
                        /*0x22b333c*/ void ClearGraveyardModels(bool forceDisposeModels);
                        /*0x22b34c4*/ void ClearAllModels(bool forceDisposeModels);
                        /*0x22b2c8c*/ bool RemoveQueuedModel(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, bool forceDisposeModel);
                        /*0x22b2dc8*/ bool RemoveModelBeingConsumed(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, bool forceDisposeModel);
                        /*0x22b357c*/ bool MoveModelBeingConsumedToGraveyard(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b2b14*/ void RemoveDisplacedGraveyardModels();
                        /*0x22b288c*/ void UpdateQueuedModelCount();
                        /*0x22b368c*/ void OnDispose();
                        /*0x22b3834*/ bool HandleOwnModelDataAction(RedCrow.UI.UUIF.DataProviding.UIDataKey key, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string actionName, object[] actionParams);
                        /*0x22b39dc*/ void DispatchDeferredChangeEvents();
                        /*0x22b36b0*/ void DisposeModelsMarkedForDisposal();
                        /*0x22b2190*/ void PruneExpiredQueuedModels();
                        /*0x22b3ba4*/ bool BeginConsumingNextModel(ref RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b3db8*/ bool ResurrectLatestModelFromGraveyard(ref RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b3f98*/ void FinishConsumingModel(string modelName);
                        /*0x22b3900*/ bool FinishConsumingModel(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b3d9c*/ void DispatchModelConsumeBeganEvent(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b40c8*/ void DispatchModelConsumeEndedEvent(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b3634*/ void DispatchModelAutoRemovedEvent(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);

                        class QueuedEntry
                        {
                            /*0x10*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel Model;
                            /*0x18*/ float ExpiryTime;

                            /*0x22b287c*/ QueuedEntry();
                        }

                        class ModelConsumeDelegate : System.MulticastDelegate
                        {
                            /*0x22b40e4*/ ModelConsumeDelegate(object object, nint method);
                            /*0x22b41ec*/ void Invoke(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                            /*0x22b4200*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, System.AsyncCallback callback, object object);
                            /*0x22b4220*/ void EndInvoke(System.IAsyncResult result);
                        }
                    }

                    class ModelStatistic
                    {
                        /*0x10*/ int ModelCount;
                        /*0x18*/ System.Type ModelType;

                        /*0x22b422c*/ ModelStatistic();
                    }

                    class DebugModelStatistics
                    {
                        static /*0x0*/ int NumRecentlyCreatedModels;
                        static /*0x4*/ int NumRecentlyDisposedModels;
                        static /*0x8*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> AllModels;
                        static /*0x10*/ System.Collections.Generic.Dictionary<System.Type, RedCrow.UI.UUIF.DataProviding.Models.ModelStatistic> ModelStatistics;

                        static /*0x22b4560*/ DebugModelStatistics();
                        static /*0x22b4234*/ void OnModelCreated(RedCrow.UI.UUIF.DataProviding.Models.IUIModel modelBase);
                        static /*0x22b445c*/ void OnModelDisposed(RedCrow.UI.UUIF.DataProviding.Models.IUIModel modelBase);
                        static /*0x22b433c*/ RedCrow.UI.UUIF.DataProviding.Models.ModelStatistic Get(System.Type type);
                    }

                    class EnumModel<T> : RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel
                    {
                        /*0x0*/ T m_enumValue;
                        /*0x0*/ bool m_isSet;
                        /*0x0*/ string m_stringValue;
                        /*0x0*/ int m_intValue;

                        static /*0x1ffc854*/ string GetTypeValueString(T value);
                        /*0x1f30ebc*/ EnumModel(string name);
                        /*0x1ffc854*/ EnumModel(string name, T initialEnumValue);
                        /*0x1ffc854*/ void Set(T someEnumValue);
                        /*0x1ffc854*/ void SetValue(T someEnumValue);
                        /*0x1ffc854*/ void Clear(T someEnumValue);
                        /*0x1ffc854*/ T Get();
                        /*0x1ffc854*/ T AsEnumValue();
                        /*0x1f2fe14*/ bool IsSet();
                        /*0x1f30214*/ object GetValueObject();
                        /*0x1f30ebc*/ void Set(string val);
                        /*0x1f2ffc8*/ int AsInt();
                        /*0x1f30214*/ string AsString();
                    }

                    class FloatModel : RedCrow.UI.UUIF.DataProviding.Models.PrimitiveNumericModelBase
                    {
                        static float Epsilon = 0.00009999999747378752;
                        static /*0x0*/ RedCrow.UI.UUIF.DataProviding.ModelObjectPool<RedCrow.UI.UUIF.DataProviding.Models.FloatModel> Pool;
                        /*0xc0*/ float m_value;

                        static /*0x22b4adc*/ FloatModel();
                        static /*0x22af6c0*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel Create(string modelName, float initialValue);
                        /*0x22b4648*/ FloatModel(string modelName, float initialValue);
                        /*0x22b468c*/ void OnDispose();
                        /*0x22b4720*/ void Set(string val);
                        /*0x22b4760*/ void Set(int val);
                        /*0x22b4768*/ void Set(float val);
                        /*0x22b476c*/ void Set(bool val);
                        /*0x22b478c*/ float AsFloat();
                        /*0x22b4794*/ string AsString();
                        /*0x22b4838*/ int AsInt();
                        /*0x22b48a4*/ long AsLong();
                        /*0x22b4914*/ bool AsBool();
                        /*0x22b027c*/ void SetValue(float value);
                        /*0x22b4930*/ void ForceSetValue(float value);
                        /*0x22b4958*/ void Increment();
                        /*0x22b4968*/ void Decrement();
                        /*0x22b4978*/ bool CompareValue(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                        /*0x22b4a84*/ object GetValueObject();
                        /*0x22b4aac*/ System.Type GetValueType();

                        class <>c
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel.<> <>9;

                            static /*0x22b4bf4*/ <>c();
                            /*0x22b4c5c*/ <>c();
                            /*0x22b4c64*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel <.cctor>b__22_0();
                        }
                    }

                    interface IConsumableModelCollection : RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0x1f2ffc8*/ int get_QueuedModelCount();
                        /*0x1f2ffc8*/ int get_GraveyardModelCount();
                        /*0x1f2fec8*/ bool IsModelBeingConsumed(string modelName);
                        /*0x1f2fec8*/ bool BeginConsumingNextModel(ref RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x1f30ebc*/ void FinishConsumingModel(string modelName);
                        /*0x1f2fec8*/ bool ResurrectLatestModelFromGraveyard(ref RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                    }

                    interface IIndexedModelCollection : RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0x1f2ffc8*/ int get_Count();
                        /*0x1f2ffc8*/ int get_FirstNewIndex();
                        /*0x1f2ffc8*/ int get_FirstItemDataIndex();
                        /*0x1f30b78*/ void set_FirstItemDataIndex(int value);
                        /*0x1f30240*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel get_Item(int i);
                    }

                    interface INotifyPropertyChanged
                    {
                        /*0x1f30ebc*/ void add_PropertyChanged(System.Action<string> value);
                        /*0x1f30ebc*/ void remove_PropertyChanged(System.Action<string> value);
                    }

                    class IntModel : RedCrow.UI.UUIF.DataProviding.Models.PrimitiveNumericModelBase
                    {
                        static /*0x0*/ RedCrow.UI.UUIF.DataProviding.ModelObjectPool<RedCrow.UI.UUIF.DataProviding.Models.IntModel> Pool;
                        /*0xc0*/ int m_value;

                        static /*0x22b5114*/ IntModel();
                        static /*0x22af618*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel Create(string modelName, int initialValue);
                        /*0x22b4ccc*/ IntModel();
                        /*0x22b4ce4*/ IntModel(string modelName, int initialValue);
                        /*0x22b4d08*/ void OnDispose();
                        /*0x22b4d9c*/ void Set(string val);
                        /*0x22b4e0c*/ void Set(int val);
                        /*0x22b4e48*/ void Set(float val);
                        /*0x22b4f04*/ void Set(bool val);
                        /*0x22b4f4c*/ void Set(long value);
                        /*0x22b4f88*/ int AsInt();
                        /*0x22b4f90*/ long AsLong();
                        /*0x22b4f98*/ string AsString();
                        /*0x22b4fa4*/ float AsFloat();
                        /*0x22b4fb0*/ bool AsBool();
                        /*0x22b3650*/ void SetValue(int value);
                        /*0x22b4fc0*/ void Increment();
                        /*0x22b4ff0*/ void Decrement();
                        /*0x22b5020*/ bool CompareValue(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                        /*0x22b50bc*/ object GetValueObject();
                        /*0x22b50e4*/ System.Type GetValueType();

                        class <>c
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel.<> <>9;

                            static /*0x22b522c*/ <>c();
                            /*0x22b5294*/ <>c();
                            /*0x22b529c*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel <.cctor>b__22_0();
                        }
                    }

                    interface INumericModel : RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveModel, RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0x1f309e4*/ void Increment();
                        /*0x1f309e4*/ void Decrement();
                        /*0x1f30214*/ System.Type GetValueType();
                    }

                    interface IPrimitiveDataModel : RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0x1f30214*/ string AsString();
                        /*0x1f30804*/ float AsFloat();
                        /*0x1f2ffc8*/ int AsInt();
                        long AsLong();
                        /*0x1f2fe14*/ bool AsBool();
                        /*0x1f30214*/ object GetValueObject();
                    }

                    interface IPrimitiveModel : RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0x1f2fe14*/ bool get_DoesStringRequireLocalization();
                        /*0x1ffc854*/ void Set<T>(T val);
                        /*0x1f30ebc*/ void Set(string val);
                        /*0x1f30b78*/ void Set(int val);
                        void Set(float val);
                        /*0x1f30a84*/ void Set(bool val);
                        /*0x1f30d60*/ void Set(long val);
                    }

                    class ActionHandler : System.MulticastDelegate
                    {
                        /*0x22b5300*/ ActionHandler(object object, nint method);
                        /*0x22b540c*/ void Invoke(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string action, object[] param);
                        /*0x22b5420*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string action, object[] param, System.AsyncCallback callback, object object);
                        /*0x22b5454*/ void EndInvoke(System.IAsyncResult result);
                    }

                    interface IUIModel : RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0x1f30214*/ string get_Name();
                        /*0x1f30ebc*/ void set_Name(string value);
                        /*0x1f309e4*/ void DispatchDeferredChangeEvents();
                        /*0x1f309e4*/ void Dispose();
                        /*0x1f30ebc*/ void add_ModelDisposed(System.Action<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> value);
                        /*0x1f30ebc*/ void remove_ModelDisposed(System.Action<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> value);
                        /*0x1f30ebc*/ void add_PropertyChangedImmediate(System.Action<string> value);
                        /*0x1f30ebc*/ void remove_PropertyChangedImmediate(System.Action<string> value);
                        /*0x1f30ebc*/ void add_OnBind(System.Action value);
                        /*0x1f30ebc*/ void remove_OnBind(System.Action value);
                        /*0x1f30ebc*/ void add_OnUnbind(System.Action value);
                        /*0x1f30ebc*/ void remove_OnUnbind(System.Action value);
                        /*0x1f2fe14*/ bool get_IsUnreferenced();
                        /*0x1f2ffc8*/ int get_UnreferencedFrame();
                        /*0x1ffc854*/ TModel Cast<TModel>();
                        /*0x1f30ebc*/ void AddActionListener(RedCrow.UI.UUIF.DataProviding.Models.ActionHandler callback);
                        /*0x1f30ebc*/ void RemoveActionListener(RedCrow.UI.UUIF.DataProviding.Models.ActionHandler callback);
                        bool TryGetModel<T>(string name, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                        /*0x1f2ff00*/ bool TryGetModel<T>(string name, ref T outModel);
                        /*0x1f309e4*/ void IncrementBinderCount();
                        /*0x1f309e4*/ void DecrementBinderCount();
                        /*0x1f309e4*/ void IncrementProxyCount();
                        /*0x1f309e4*/ void DecrementProxyCount();
                        /*0x1f2ffc8*/ int get_UniqueId();
                        /*0x1f2ff00*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x1f2ff00*/ bool TryGetOwnActionContext(string actionName, ref RedCrow.UI.UUIF.DataProviding.ActionContext context);
                        /*0x1f30300*/ RedCrow.UI.UUIF.DataProviding.ActionContext SetActionContextValue(string action, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue newValue);
                        /*0x1f30ff0*/ void NotifyActionListeners(string actionName, object[] actionParams);
                        /*0x1f2fec8*/ bool CompareValue(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                    }

                    class LazilyInitializedModelBase : RedCrow.UI.UUIF.DataProviding.Models.ModelBase
                    {
                        /*0xa1*/ bool m_hasBeenInitialized;

                        /*0x22b5468*/ LazilyInitializedModelBase(string name);
                        /*0x22b5460*/ bool get_HasBeenLazilyInitialized();
                        /*0x1f309e4*/ void LazyInitialize();
                        /*0x22b546c*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel GetModel(string modelName);
                        /*0x22b54b4*/ void RequestLazyInitialization();
                        /*0x22b54d8*/ void SkipLazyInitialization();
                        /*0x22b54e0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetAllModels(bool includeLazyInstantiations);
                    }

                    class ListModelCollection : RedCrow.UI.UUIF.DataProviding.Models.ModelBase, RedCrow.UI.UUIF.DataProviding.Models.IIndexedModelCollection, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0xa4*/ int <FirstNewIndex>k__BackingField;
                        /*0xa8*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> m_indexedModels;
                        /*0xb0*/ System.Func<int, RedCrow.UI.UUIF.DataProviding.Models.IUIModel> m_itemFactoryMethod;
                        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel m_countModel;
                        /*0xc0*/ System.Collections.Generic.Dictionary<int, RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection.IndexRange> m_activelyViewedRanges;
                        /*0xc8*/ int m_firstItemDataIndex;
                        /*0xd0*/ System.Collections.Generic.Queue<RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection.ModelDisposalInfo> m_modelsToDispose;
                        /*0xd8*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection.IndexRangesEvent ActivelyViewedRangeUpdated;
                        /*0xe0*/ bool m_bShouldDisposeItemModels;

                        static /*0x22b5930*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection CreateProxyList(string collectionName, int count);
                        /*0x22b5814*/ ListModelCollection(string collectionName, bool shouldDisposeItemModels);
                        /*0x22b5928*/ ListModelCollection(string collectionName);
                        /*0x22b5538*/ int get_FirstNewIndex();
                        /*0x22b5540*/ void set_FirstNewIndex(int value);
                        /*0x22b5548*/ void AddModelsToDispose(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> models);
                        /*0x22b575c*/ void AddModelToDispose(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b5664*/ void EnsureModelDisposeList();
                        /*0x22b5804*/ int get_FirstItemDataIndex();
                        /*0x22b580c*/ void set_FirstItemDataIndex(int value);
                        /*0x22b5bb0*/ bool Swap(int index1, int index2);
                        /*0x22b5cf0*/ void LazilyInstantiateCountModel(string modelName);
                        /*0x22b5dac*/ void OnDispose();
                        /*0x22b609c*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel get_Item(int i);
                        /*0x22b6108*/ int get_Count();
                        /*0x22b5b0c*/ void Add(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b6150*/ void AddModelToListWithNullCheck(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b6230*/ void InsertModelIntoListWithNullCheck(int index, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b62ac*/ void Sort(System.Collections.Generic.IComparer<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> comparer);
                        /*0x1f30ebc*/ void AddRange<T>(System.Collections.Generic.List<T> models);
                        void SetRangeWithoutNotification<T>(int size, System.Func<int, T, bool> updateFunction, System.Func<int, T> createFunction, int newFirstItemDataIndex);
                        /*0x22b6350*/ void ResizeTo(int size, int newFirstItemDataIndex);
                        /*0x1ffc854*/ void SetRange<T>(int size, System.Func<int, T, bool> updateFunction, System.Func<int, T> createFunction, int newFirstItemDataIndex, bool preventNotification);
                        /*0x1ffc854*/ void SetRangeFromCollection<T, U>(System.Collections.Generic.ICollection<U> data, System.Func<U, T, bool> updateFunction, System.Func<U, int, T> createFunction, System.Func<U, bool> filterPredicate, bool preventNotification);
                        /*0x1f30ee8*/ void SetRange<T>(System.Collections.Generic.IEnumerable<T> models, int newFirstItemDataIndex);
                        /*0x22b642c*/ void Insert(int index, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, bool decrementFirstItemDataIndex);
                        /*0x1f30ebc*/ void InsertRangeAtBeginning<T>(System.Collections.Generic.List<T> models);
                        void InsertRange<T>(int index, System.Collections.Generic.List<T> models, bool decrementFirstItemDataIndex);
                        /*0x22b6510*/ void RemoveFromBeginning();
                        /*0x22b6528*/ void RemoveAt(int index, bool incrementFirstItemDataIndex);
                        /*0x22b654c*/ bool Remove(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b6630*/ void RemoveRange(int startIndex, int removeCount);
                        /*0x22b6730*/ void Clear(int newFirstItemDataIndex);
                        bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                        /*0x22b61b8*/ void OnSizeChanged(bool preventNotification);
                        /*0x22b6814*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetIndexedModels();
                        /*0x1f30214*/ System.Collections.Generic.IList<T> GetIndexedModels<T>();
                        /*0x22b681c*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetAllModels(bool includeLazyInstantiations);
                        /*0x22b68e8*/ void DispatchDeferredChangeEvents();
                        /*0x22b5f48*/ void DisposeModelsMarkedForDisposal(bool forceDisposeAll);
                        /*0x22b6908*/ bool HasActivelyViewedRanges();
                        /*0x22b6918*/ System.Collections.Generic.IEnumerable<RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection.IndexRange> GetActivelyViewedRanges();
                        /*0x22b6970*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x22b6ca8*/ void NotifyPropertyChanged();

                        class IndexRange
                        {
                            /*0x10*/ int IndexLow;
                            /*0x14*/ int IndexHigh;

                            /*0x22b6c7c*/ IndexRange(int lowIndex, int highIndex);
                        }

                        class IndexRangesEvent : System.MulticastDelegate
                        {
                            /*0x22b6cfc*/ IndexRangesEvent(object object, nint method);
                            /*0x22b6e08*/ void Invoke(RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection model, System.Collections.Generic.IEnumerable<RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection.IndexRange> ranges);
                            /*0x22b6e1c*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection model, System.Collections.Generic.IEnumerable<RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection.IndexRange> ranges, System.AsyncCallback callback, object object);
                            /*0x22b6e44*/ void EndInvoke(System.IAsyncResult result);
                        }

                        struct ModelDisposalInfo
                        {
                            /*0x10*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel Model;
                            /*0x18*/ int DisposalFrame;
                        }

                        class <>c__5<T>
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection.<>c__51<T> <>9;
                            static /*0x0*/ System.Converter<RedCrow.UI.UUIF.DataProviding.Models.IUIModel, T> <>9__51_0;

                            static /*0x1f33998*/ <>c__5();
                            /*0x1f309e4*/ <>c__5();
                            /*0x1ffc854*/ T <GetIndexedModels>b__51_0(RedCrow.UI.UUIF.DataProviding.Models.IUIModel x);
                        }
                    }

                    class LongModel : RedCrow.UI.UUIF.DataProviding.Models.PrimitiveNumericModelBase
                    {
                        static /*0x0*/ RedCrow.UI.UUIF.DataProviding.ModelObjectPool<RedCrow.UI.UUIF.DataProviding.Models.LongModel> Pool;
                        /*0xc0*/ long m_value;

                        static /*0x22b72f4*/ LongModel();
                        static /*0x22afc04*/ RedCrow.UI.UUIF.DataProviding.Models.LongModel Create(string modelName, long initialValue);
                        /*0x22b6e50*/ LongModel();
                        /*0x22b6e68*/ LongModel(string modelName, long initialValue);
                        /*0x22b6e8c*/ void OnDispose();
                        /*0x22b6f20*/ bool SetValue(long value);
                        /*0x22b6f74*/ void Set(string val);
                        /*0x22b6fe4*/ void Set(int val);
                        /*0x22b7024*/ void Set(float val);
                        /*0x22b70e4*/ void Set(bool val);
                        /*0x22b712c*/ void Set(long val);
                        /*0x22b7168*/ long AsLong();
                        /*0x22b7170*/ int AsInt();
                        /*0x22b7178*/ string AsString();
                        /*0x22b7184*/ float AsFloat();
                        /*0x22b7190*/ bool AsBool();
                        /*0x22b71a0*/ void Increment();
                        /*0x22b71d0*/ void Decrement();
                        /*0x22b7200*/ bool CompareValue(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                        /*0x22b729c*/ object GetValueObject();
                        /*0x22b72c4*/ System.Type GetValueType();

                        class <>c
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.LongModel.<> <>9;

                            static /*0x22b740c*/ <>c();
                            /*0x22b7474*/ <>c();
                            /*0x22b747c*/ RedCrow.UI.UUIF.DataProviding.Models.LongModel <.cctor>b__22_0();
                        }
                    }

                    class ModelBase : RedCrow.UI.UUIF.DataProviding.UIDataProviderBase, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        static /*0x0*/ int sNextUniqueId;
                        /*0x38*/ RedCrow.Collections.WorryFreeList<System.Action<string>> m_propertyChangedImmediate;
                        /*0x40*/ RedCrow.Collections.WorryFreeList<System.Action<string>> m_propertyChanged;
                        /*0x48*/ RedCrow.Collections.WorryFreeList<System.Action<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>> m_modelDisposed;
                        /*0x50*/ RedCrow.Collections.WorryFreeList<System.Action> m_modelBound;
                        /*0x58*/ RedCrow.Collections.WorryFreeList<System.Action> m_modelUnbound;
                        /*0x60*/ string <Name>k__BackingField;
                        /*0x68*/ string m_dirtyProperty;
                        /*0x70*/ System.Collections.Generic.List<string> m_dirtyProperties;
                        /*0x78*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.ActionContext> m_dirtyContexts;
                        /*0x80*/ System.Collections.Generic.Dictionary<string, RedCrow.UI.UUIF.DataProviding.ActionContext> m_actionContexts;
                        /*0x88*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.ActionHandler> m_actionListeners;
                        /*0x90*/ int <BinderCount>k__BackingField;
                        /*0x94*/ int <ProxyCount>k__BackingField;
                        /*0x98*/ int <UnreferencedFrame>k__BackingField;
                        /*0x9c*/ int <UniqueId>k__BackingField;
                        /*0xa0*/ bool m_bIsQueuedForPostUpdate;

                        /*0x22b252c*/ ModelBase(string name);
                        /*0x22b74e0*/ void add_PropertyChangedImmediate(System.Action<string> value);
                        /*0x22b758c*/ void remove_PropertyChangedImmediate(System.Action<string> value);
                        /*0x22b75ec*/ void add_PropertyChanged(System.Action<string> value);
                        /*0x22b7698*/ void remove_PropertyChanged(System.Action<string> value);
                        /*0x22b76f8*/ void add_ModelDisposed(System.Action<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> value);
                        /*0x22b77a4*/ void remove_ModelDisposed(System.Action<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> value);
                        /*0x22b7804*/ void add_OnBind(System.Action value);
                        /*0x22b78b0*/ void remove_OnBind(System.Action value);
                        /*0x22b7910*/ void add_OnUnbind(System.Action value);
                        /*0x22b79bc*/ void remove_OnUnbind(System.Action value);
                        /*0x22b7a1c*/ string get_Name();
                        /*0x22b7a24*/ void set_Name(string value);
                        /*0x22b7a2c*/ bool get_IsModelDirty();
                        /*0x22b7a90*/ int get_BinderCount();
                        /*0x22b7a98*/ void set_BinderCount(int value);
                        /*0x22b7aa0*/ int get_ProxyCount();
                        /*0x22b7aa8*/ void set_ProxyCount(int value);
                        /*0x22b7ab0*/ bool get_IsUnreferenced();
                        /*0x22b7ad4*/ int get_UnreferencedFrame();
                        /*0x22b7adc*/ void set_UnreferencedFrame(int value);
                        /*0x22b7ae4*/ int get_UniqueId();
                        /*0x22b7aec*/ void set_UniqueId(int value);
                        /*0x22ae718*/ void OnDispose();
                        /*0x1ffc854*/ TModel Cast<TModel>();
                        /*0x22b7b4c*/ RedCrow.UI.UUIF.DataProviding.ActionContext SetActionContextValue(string action, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue newValue);
                        /*0x22b7ce8*/ void MarkContextAsDirty(RedCrow.UI.UUIF.DataProviding.ActionContext dirtyContext);
                        /*0x22b7de4*/ void AddActionListener(RedCrow.UI.UUIF.DataProviding.Models.ActionHandler callback);
                        /*0x22b7e90*/ void RemoveActionListener(RedCrow.UI.UUIF.DataProviding.Models.ActionHandler callback);
                        /*0x22b7ef0*/ void NotifyActionListeners(string actionName, object[] actionParams);
                        /*0x22b135c*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x22b8080*/ bool TryGetOwnActionContext(string action, ref RedCrow.UI.UUIF.DataProviding.ActionContext actionContext);
                        /*0x22b81ac*/ void OnPropertyChanged(string propertyName);
                        /*0x22b39f4*/ void DispatchDeferredChangeEvents();
                        /*0x22b8380*/ void ClearDirtyProperties();
                        /*0x22b8428*/ bool SetProxyToSubmodel(RedCrow.UI.UUIF.DataProviding.Models.ProxyModel proxyModel, string targetModelName);
                        /*0x22b85c4*/ void IncrementBinderCount();
                        /*0x22b8614*/ void DecrementBinderCount();
                        /*0x22b8660*/ void IncrementProxyCount();
                        /*0x22b868c*/ void DecrementProxyCount();
                        /*0x22b85f0*/ void OnReferencedCounterIncremented();
                        /*0x22b8624*/ void OnReferencedCounterDecremented();
                        /*0x22b8328*/ void SendPropertyChange(string e);
                        /*0x22b82d0*/ void SendPropertyChangeImmediate(string e);
                        /*0x22b7af4*/ void SendModelDisposed(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b869c*/ void SendModelBound();
                        /*0x22b86b0*/ void SendModelUnbound();
                        /*0x22b86c4*/ void CopyActionContextsFrom(RedCrow.UI.UUIF.DataProviding.Models.ModelBase other);
                        /*0x22aeb40*/ bool CompareValue(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                        /*0x22b56ec*/ void QueuePostUpdateEvent();
                        /*0x22b8bec*/ int CompareTo(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                        /*0x22b8cb4*/ int GetHashCode();
                        /*0x22b8cbc*/ string ToString();
                    }

                    class NamedModelCollection : RedCrow.UI.UUIF.DataProviding.Models.ModelBase
                    {
                        static /*0x0*/ RedCrow.UI.UUIF.DataProviding.ModelObjectPool<RedCrow.UI.UUIF.DataProviding.Models.NamedModelCollection> s_pool;

                        static /*0x22b8e54*/ NamedModelCollection();
                        static /*0x22b8d34*/ RedCrow.UI.UUIF.DataProviding.Models.NamedModelCollection Create(string modelName);
                        /*0x22b8e18*/ NamedModelCollection();
                        /*0x22af614*/ NamedModelCollection(string collectionName);
                        /*0x22b8dcc*/ int get_Count();
                        /*0x1ffc854*/ T Add<T>(T model);
                        /*0x22b8e30*/ bool Remove(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22b8e48*/ void Remove(string name);
                        /*0x22b8e50*/ void RemoveAll();
                        /*0x1f302cc*/ RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel GetOrCreatePrimitiveChild<T>(string childName);
                        /*0x22b0054*/ void OnDispose();

                        class <>c
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.NamedModelCollection.<> <>9;

                            static /*0x22b8f6c*/ <>c();
                            /*0x22b8fd4*/ <>c();
                            /*0x22b8fdc*/ RedCrow.UI.UUIF.DataProviding.Models.NamedModelCollection <.cctor>b__12_0();
                        }
                    }

                    class PrimitiveModel : RedCrow.UI.UUIF.DataProviding.Models.ModelBase, RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveModel, RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0xa1*/ bool <DoesStringRequireLocalization>k__BackingField;

                        /*0x22ae5d4*/ PrimitiveModel(string modelName);
                        /*0x22b9040*/ bool get_DoesStringRequireLocalization();
                        /*0x22b9048*/ void set_DoesStringRequireLocalization(bool value);
                        /*0x1ffc854*/ void Set<T>(T val);
                        /*0x22b9050*/ void Set(string val);
                        /*0x22b9054*/ void Set(int val);
                        /*0x22b9058*/ void Set(float val);
                        /*0x22b905c*/ void Set(bool val);
                        /*0x22b9060*/ void Set(long val);
                        /*0x22b9064*/ string AsString();
                        /*0x22b907c*/ float AsFloat();
                        /*0x22b9084*/ int AsInt();
                        /*0x22b908c*/ long AsLong();
                        /*0x22b9094*/ bool AsBool();
                        /*0x22ae9bc*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x1f30214*/ object GetValueObject();
                    }

                    class PrimitiveNumericModelBase : RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel, RedCrow.UI.UUIF.DataProviding.Models.INumericModel, RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveModel, RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveDataModel, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0xa8*/ System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> SetActionHandled;
                        /*0xb0*/ System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> IncrementActionHandled;
                        /*0xb8*/ System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> DecrementActionHandled;

                        /*0x22b4688*/ PrimitiveNumericModelBase(string modelName);
                        /*0x22b909c*/ void add_SetActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> value);
                        /*0x22b914c*/ void remove_SetActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> value);
                        /*0x22b91fc*/ void add_IncrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> value);
                        /*0x22b92ac*/ void remove_IncrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> value);
                        /*0x22b935c*/ void add_DecrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> value);
                        /*0x22b940c*/ void remove_DecrementActionHandled(System.Action<RedCrow.UI.UUIF.DataProviding.Models.INumericModel> value);
                        /*0x22b94bc*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x1f309e4*/ void Increment();
                        /*0x1f309e4*/ void Decrement();
                        /*0x1f30214*/ System.Type GetValueType();
                    }

                    class ProxyModel : RedCrow.UI.UUIF.DataProviding.Models.ModelBase, RedCrow.UI.UUIF.DataProviding.IRebindTrigger
                    {
                        static /*0x0*/ RedCrow.UI.UUIF.DataProviding.ModelObjectPool<RedCrow.UI.UUIF.DataProviding.Models.ProxyModel> s_pool;
                        /*0xa8*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel m_referencedModel;
                        /*0xb0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isNull;
                        /*0xb8*/ RedCrow.Collections.WorryFreeList<System.Action> m_rebindRequested;

                        static /*0x22ba444*/ ProxyModel();
                        static /*0x22b59e8*/ RedCrow.UI.UUIF.DataProviding.Models.ProxyModel Create(string modelName);
                        static /*0x22b9fa0*/ RedCrow.UI.UUIF.DataProviding.Models.ProxyModel Create(string modelName, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22ba01c*/ ProxyModel();
                        /*0x22b97e4*/ void add_RebindRequested(System.Action value);
                        /*0x22b9890*/ void remove_RebindRequested(System.Action value);
                        /*0x22b98f0*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel get_ReferencedModel();
                        /*0x22b98f8*/ void set_ReferencedModel(RedCrow.UI.UUIF.DataProviding.Models.IUIModel value);
                        /*0x1ffc854*/ TModel Cast<TModel>();
                        /*0x1f2fec8*/ bool TryCastReferencedModel<TModel>(ref TModel result);
                        /*0x22b84dc*/ void ChangeReferencedModel(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, bool disposeModel);
                        /*0x22ba04c*/ void ActionCallback(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, string actionName, object[] actionParams);
                        /*0x22ba058*/ void OnPropertyChangedImmediate(string e);
                        /*0x22ba05c*/ void OnReferencedModelDisposed(RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                        /*0x22ba078*/ void OnDispose();
                        bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                        bool TryGetModel<T>(string name, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                        /*0x22ba118*/ RedCrow.UI.UUIF.DataProviding.ActionContext SetActionContextValue(string action, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue newValue);
                        /*0x22ba1e4*/ bool TryGetOwnActionContext(string action, ref RedCrow.UI.UUIF.DataProviding.ActionContext actionContext);
                        /*0x22ba2c0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetAllModels(bool includeLazyInstantiations);
                        /*0x22ba378*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);

                        class <>c
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.ProxyModel.<> <>9;

                            static /*0x22ba55c*/ <>c();
                            /*0x22ba5c4*/ <>c();
                            /*0x22ba5cc*/ RedCrow.UI.UUIF.DataProviding.Models.ProxyModel <.cctor>b__26_0();
                        }
                    }

                    class SelectionListModel : RedCrow.UI.UUIF.DataProviding.Models.ModelBase
                    {
                        /*0xa8*/ RedCrow.UI.UUIF.DataProviding.Models.SelectionListModel.SelectionChangedDelegate SelectionChanged;
                        /*0xb0*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection m_listModel;
                        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel m_selectedItemModel;

                        /*0x22ba820*/ SelectionListModel(string collectionName);
                        /*0x22ba63c*/ void add_SelectionChanged(RedCrow.UI.UUIF.DataProviding.Models.SelectionListModel.SelectionChangedDelegate value);
                        /*0x22ba6d8*/ void remove_SelectionChanged(RedCrow.UI.UUIF.DataProviding.Models.SelectionListModel.SelectionChangedDelegate value);
                        /*0x22ba774*/ int get_SelectedIndex();
                        /*0x22ba794*/ void set_SelectedIndex(int value);
                        /*0x22ba80c*/ int get_Count();
                        /*0x22ba96c*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel get_Item(int i);
                        /*0x1ffc854*/ void SetRange<T>(int size, int selectedIndex, System.Func<int, T, bool> updateFunction, System.Func<int, T> createFunction, int newFirstItemDataIndex);
                        /*0x1f30ee8*/ void SetRange<T>(System.Collections.Generic.IEnumerable<T> models, int newFirstItemDataIndex);
                        /*0x22ba980*/ void Clear();
                        /*0x22ba9ec*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x22baae0*/ void OnSelectionChanged();

                        class SelectionChangedDelegate : System.MulticastDelegate
                        {
                            /*0x22bab3c*/ SelectionChangedDelegate(object object, nint method);
                            /*0x22bac48*/ void Invoke(RedCrow.UI.UUIF.DataProviding.Models.SelectionListModel model, int selectedIndex);
                            /*0x22bac5c*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.DataProviding.Models.SelectionListModel model, int selectedIndex, System.AsyncCallback callback, object object);
                            /*0x22bacbc*/ void EndInvoke(System.IAsyncResult result);
                        }
                    }

                    class SoftBoundedNumberModel : RedCrow.UI.UUIF.DataProviding.Models.BoundedNumberModel
                    {
                        /*0xe0*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel <SoftMin>k__BackingField;
                        /*0xe8*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel <SoftMax>k__BackingField;
                        /*0xf0*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel m_softMaxRatioModel;
                        /*0xf8*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel m_softMinRatioModel;

                        /*0x22bace8*/ SoftBoundedNumberModel(string name, int min, int max, int current);
                        /*0x22bb180*/ SoftBoundedNumberModel(string name, long min, long max, long current);
                        /*0x22bb274*/ SoftBoundedNumberModel(string name, float min, float max, float current);
                        /*0x22bacc8*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel get_SoftMin();
                        /*0x22bacd0*/ void set_SoftMin(RedCrow.UI.UUIF.DataProviding.Models.INumericModel value);
                        /*0x22bacd8*/ RedCrow.UI.UUIF.DataProviding.Models.INumericModel get_SoftMax();
                        /*0x22bace0*/ void set_SoftMax(RedCrow.UI.UUIF.DataProviding.Models.INumericModel value);
                        /*0x22baddc*/ void Init();
                        /*0x22bb834*/ void OnDispose();
                        /*0x1ffc854*/ void SetSoftMinValue<T>(T val);
                        /*0x1ffc854*/ void SetSoftMaxValue<T>(T val);
                        /*0x22bbad8*/ RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveModel GetSoftMin();
                        /*0x22bbae0*/ RedCrow.UI.UUIF.DataProviding.Models.IPrimitiveModel GetSoftMax();
                        /*0x22bbae8*/ void OnMinModelsChanged(string e);
                        /*0x22bbcf8*/ void OnMaxModelsChanged(string e);
                        /*0x22bb368*/ void UpdateSoftLimitRatio();
                        /*0x22bbf08*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x22bc7b8*/ void ClampCurrentToBounds();
                    }

                    class StringModel : RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel
                    {
                        static /*0x0*/ RedCrow.UI.UUIF.DataProviding.ModelObjectPool<RedCrow.UI.UUIF.DataProviding.Models.StringModel> s_pool;
                        /*0xa8*/ string m_value;

                        static /*0x22bd6d8*/ StringModel();
                        static /*0x22bcf34*/ string GetLocalizedString(RedCrow.UI.UUIF.Localization.ILocalizationManager localizationManager, RedCrow.UI.UUIF.DataProviding.Models.StringModel stringModel);
                        static /*0x22bd010*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel Create(string modelName);
                        static /*0x22bd15c*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel Create(string modelName, bool stringRequiresLocalization);
                        static /*0x22bd080*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel Create(string modelName, string initialValue, bool stringRequiresLocalization);
                        /*0x22bcef0*/ StringModel();
                        /*0x22bd1d8*/ StringModel(string modelName);
                        /*0x22bd280*/ StringModel(string modelName, bool stringRequiresLocalization);
                        /*0x22bd29c*/ StringModel(string modelName, string initialValue);
                        /*0x22bd1f4*/ StringModel(string modelName, string initialValue, bool stringRequiresLocalization);
                        /*0x22bd2a4*/ void Set(string val);
                        /*0x22bd37c*/ void Set(int val);
                        /*0x22bd400*/ void Set(float val);
                        /*0x22bd484*/ void Set(bool val);
                        /*0x22bd4f4*/ string AsString();
                        /*0x22bd4fc*/ bool AsBool();
                        /*0x22bd2cc*/ void SetValue(string value);
                        /*0x22bd51c*/ void SetRequiresLocalization(bool requiresLocalization);
                        /*0x22bd560*/ bool CompareValue(RedCrow.UI.UUIF.DataProviding.Models.IUIModel other);
                        /*0x22bd63c*/ object GetValueObject();
                        /*0x22bd644*/ void OnDispose();

                        class <>c
                        {
                            static /*0x0*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel.<> <>9;

                            static /*0x22bd7f0*/ <>c();
                            /*0x22bd858*/ <>c();
                            /*0x22bd860*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel <.cctor>b__22_0();
                        }
                    }

                    class TabGroupModel : RedCrow.UI.UUIF.DataProviding.Models.StringModel
                    {
                        /*0x22bd8b0*/ TabGroupModel(string modelName, string initialValue);
                    }

                    class TreeModelCollection : RedCrow.UI.UUIF.DataProviding.Models.ModelBase, RedCrow.UI.UUIF.DataProviding.Models.IIndexedModelCollection, RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
                    {
                        /*0xa8*/ RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.Node m_root;
                        /*0xb0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> m_visibleNodes;
                        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection m_backingList;
                        /*0xc0*/ bool m_bShouldDisposeItemModels;

                        /*0x22bd944*/ TreeModelCollection(string name, bool shouldDisposeItemModels);
                        /*0x22bd920*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.IUIModel> GetAllModels(bool includeLazyInstantiations);
                        /*0x22bdb7c*/ RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode GetRoot();
                        /*0x22bdb84*/ int GetInsertionIndexForChild(RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.Node parent, int iChildIndex);
                        /*0x1f30f2c*/ void OnChildrenAddedToNode<T>(RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.Node node, int startIndex, System.Collections.Generic.List<T> addedModels);
                        /*0x1ffc854*/ void OnChildAddedToNode<T>(RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.Node node, int index, T model);
                        /*0x22bdd5c*/ void OnNodeExpanded(RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode expandedNode);
                        /*0x22be464*/ void OnNodeCollapsed(RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.Node collapsedNode);
                        /*0x22be6b4*/ void OnChildrenRemovedFromNode(RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.Node node, int startIndex, int count);
                        bool TryGetModel<T>(RedCrow.UI.UUIF.DataProviding.UIDataKey key, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                        bool TryGetModel<T>(string name, ref T outModel, System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> rebindTriggers);
                        /*0x22be96c*/ bool TryDefaultActionHandling(string actionName, object[] actionParams);
                        /*0x22be98c*/ RedCrow.UI.UUIF.DataProviding.ActionContext SetActionContextValue(string action, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue newValue);
                        /*0x22be9ac*/ bool TryGetOwnActionContext(string action, ref RedCrow.UI.UUIF.DataProviding.ActionContext actionContext);
                        /*0x22be9cc*/ int get_Count();
                        /*0x22be9e0*/ int get_FirstNewIndex();
                        /*0x22be9f8*/ int get_FirstItemDataIndex();
                        /*0x22bea10*/ void set_FirstItemDataIndex(int value);
                        /*0x22bea28*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel get_Item(int i);
                        /*0x22bea3c*/ void OnBackingListPropertyChanged(string e);
                        /*0x22bea40*/ void OnBackingListPropertyChangedImmediate(string e);
                        /*0x22bea44*/ void OnDispose();

                        interface INode
                        {
                            /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel get_Model();
                            /*0x1f2ffc8*/ int get_ChildCount();
                            /*0x1f2fe14*/ bool get_IsExpanded();
                            /*0x1f30a84*/ void set_IsExpanded(bool value);
                            /*0x1f2fe14*/ bool get_IsVisible();
                            /*0x1f2ffc8*/ int get_VisibleDescendants();
                            /*0x1f30ebc*/ void SetChildren<T>(System.Collections.Generic.List<T> childrenModels);
                            /*0x1ffc854*/ RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode AddChild<T>(T childModel);
                            /*0x1f30214*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> get_Children();
                            /*0x1f30ebc*/ void set_Children(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> value);
                            /*0x1f309e4*/ void ClearChildren();
                            /*0x1f30b78*/ void RemoveChild(int index);
                            /*0x1f309e4*/ void Dispose();
                            /*0x1f30240*/ RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode GetChild(int index);
                            /*0x1f30214*/ System.Collections.Generic.IComparer<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> get_Comparer();
                            /*0x1f30ebc*/ void set_Comparer(System.Collections.Generic.IComparer<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> value);
                            /*0x1f2ffc8*/ int get_CurrentIndex();
                            /*0x1f30b78*/ void set_CurrentIndex(int value);
                            /*0x1f309e4*/ void SortChildren();
                        }

                        class Node : RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode
                        {
                            /*0x10*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel <Model>k__BackingField;
                            /*0x18*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> <Children>k__BackingField;
                            /*0x20*/ RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection m_tree;
                            /*0x28*/ bool m_isExpanded;
                            /*0x30*/ System.Collections.Generic.IComparer<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> <Comparer>k__BackingField;
                            /*0x38*/ int <CurrentIndex>k__BackingField;

                            /*0x22bdb30*/ Node(RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection tree, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model);
                            /*0x22bec20*/ RedCrow.UI.UUIF.DataProviding.Models.IUIModel get_Model();
                            /*0x22bec28*/ void set_Model(RedCrow.UI.UUIF.DataProviding.Models.IUIModel value);
                            /*0x22bec30*/ int get_ChildCount();
                            /*0x22bec7c*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> get_Children();
                            /*0x22bec84*/ void set_Children(System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> value);
                            /*0x22be658*/ bool get_IsVisible();
                            /*0x22bec8c*/ System.Collections.Generic.IComparer<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> get_Comparer();
                            /*0x22bec94*/ void set_Comparer(System.Collections.Generic.IComparer<RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode> value);
                            /*0x22bec9c*/ bool get_IsExpanded();
                            /*0x22beca4*/ void set_IsExpanded(bool value);
                            /*0x22becfc*/ RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode GetChild(int index);
                            /*0x22bed68*/ int get_CurrentIndex();
                            /*0x22bed70*/ void set_CurrentIndex(int value);
                            /*0x1f30ebc*/ void SetChildren<T>(System.Collections.Generic.List<T> childrenModels);
                            /*0x1ffc854*/ RedCrow.UI.UUIF.DataProviding.Models.TreeModelCollection.INode AddChild<T>(T childModel);
                            /*0x22bed78*/ void SortChildren();
                            /*0x22befb8*/ void ClearChildren();
                            /*0x22bf160*/ void RemoveChild(int index);
                            /*0x22beb64*/ void Dispose();
                            /*0x22bdc58*/ int get_VisibleDescendants();
                        }
                    }
                }

                namespace Controls
                {
                    class DataActionDispatcher : RedCrow.UI.UUIF.Actions.IActionDispatcher
                    {
                        /*0x10*/ string <ActionName>k__BackingField;
                        /*0x18*/ RedCrow.UI.UUIF.DataProviding.ActionContext m_currentActionContext;
                        /*0x20*/ bool m_isHookedIntoActionContext;
                        /*0x28*/ RedCrow.UI.UUIF.DataProviding.IUIDataProvidingService m_dataProviderService;
                        /*0x30*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot m_dataKey;
                        /*0x38*/ UnityEngine.GameObject m_associatedGameObject;
                        /*0x40*/ RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate m_contextChangedDeferredCallback;

                        /*0x22bf2c8*/ DataActionDispatcher(RedCrow.UI.UUIF.DataProviding.IUIDataProvidingService dataProviderService, UnityEngine.GameObject associatedGameObject, string actionName, RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot dataKey, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate contextChangedCallback);
                        /*0x22bf2a8*/ string get_ActionName();
                        /*0x22bf2b0*/ void set_ActionName(string value);
                        /*0x22bf2b8*/ RedCrow.UI.UUIF.DataProviding.ActionContext get_CurrentActionContext();
                        /*0x22bf2c0*/ void set_CurrentActionContext(RedCrow.UI.UUIF.DataProviding.ActionContext value);
                        /*0x22bf358*/ void FetchContext();
                        /*0x22bf488*/ void ReleaseContext();
                        /*0x22bf4c8*/ void TriggerAction(object[] actionParams);
                        /*0x22bf624*/ string GetErrorInfoString();
                    }

                    class SmartControl<T> : RedCrow.UI.UUIF.DataProviding.Binders.SmartBinder<T>
                    {
                        /*0x0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Actions.IActionDispatcher> m_actionDispatchers;
                        /*0x0*/ bool m_isReadyForInput;

                        /*0x1f309e4*/ SmartControl();
                        /*0x1f2fe14*/ bool get_IsReadyForInput();
                        bool Bind(bool suppressErrors);
                        /*0x1f309e4*/ void Unbind();
                        /*0x1f30ebc*/ void AddActionDispatcher(RedCrow.UI.UUIF.Actions.IActionDispatcher actionDispatcher);
                        /*0x1f30ebc*/ void RemoveActionDispatcher(RedCrow.UI.UUIF.Actions.IActionDispatcher actionDispatcher);
                    }
                }

                namespace Binders
                {
                    interface ISmartBinder
                    {
                        /*0x1f2fe14*/ bool get_IsPreparingForDisplay();
                        /*0x1f2fe14*/ bool get_IsBindingPermitted();
                        /*0x1f2fe14*/ bool get_IsBindingEnabled();
                        /*0x1f30214*/ UnityEngine.GameObject GetGameObject();
                        /*0x1f30214*/ System.Collections.Generic.IList<RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot> GetDataKeys();
                        /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation get_ParentBindingContainer();
                        /*0x1f2fe14*/ bool IsBound();
                    }

                    class SmartBinder<TModel> : UnityEngine.MonoBehaviour, RedCrow.UI.UUIF.DataProviding.Binders.ISmartBinder
                    {
                        /*0x0*/ System.Collections.Generic.List<Framework.DataBinding.Bindable<TModel>> m_bindables;
                        /*0x0*/ System.Collections.IEnumerator m_rebindCoroutine;
                        /*0x0*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot DataKey;
                        /*0x0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot> DataKeyList;
                        /*0x0*/ bool UseMultipleDataKeys;
                        /*0x0*/ RedCrow.UI.UUIF.DataProviding.IUIDataProvider <DataProvider>k__BackingField;
                        /*0x0*/ bool m_hasSubscribedToRebindTriggers;
                        /*0x0*/ bool m_isBindingEnabled;
                        /*0x0*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation m_parentBindingContainer;
                        /*0x0*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.IRebindTrigger> m_bindingRebindTriggers;
                        /*0x0*/ bool m_hasStarted;
                        /*0x0*/ bool m_isOriented;

                        /*0x1f309e4*/ SmartBinder();
                        /*0x1ffc854*/ TModel get_DataContext();
                        /*0x1f30214*/ System.Collections.Generic.IList<RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot> GetDataKeys();
                        /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.IUIDataProvider get_DataProvider();
                        /*0x1f30ebc*/ void set_DataProvider(RedCrow.UI.UUIF.DataProviding.IUIDataProvider value);
                        /*0x1f2fe14*/ bool get_IsPreparingForDisplay();
                        /*0x1f2fe14*/ bool get_IsBindingPermitted();
                        /*0x1f30214*/ UnityEngine.GameObject GetGameObject();
                        /*0x1f30214*/ Framework.DataBinding.Bindable<TModel> CreateBindable();
                        /*0x1f2fe14*/ bool get_IsBindingEnabled();
                        /*0x1f30a84*/ void set_IsBindingEnabled(bool value);
                        /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation get_ParentBindingContainer();
                        /*0x1f309e4*/ void Awake();
                        /*0x1f309e4*/ void MinimumDebugAwake();
                        /*0x1f30ff0*/ void AddKeyAndBindable(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot key, Framework.DataBinding.Bindable<TModel> bindable);
                        /*0x1f309e4*/ void Start();
                        /*0x1f309e4*/ void OnEnable();
                        /*0x1f309e4*/ void OnDisable();
                        /*0x1f309e4*/ void OnDestroy();
                        bool Bind(bool supressErrors);
                        bool BindDataKey(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot dataKey, Framework.DataBinding.Bindable<TModel> bindable, bool supressErrors);
                        /*0x1f30ebc*/ void OnModelDisposed(RedCrow.UI.UUIF.DataProviding.Models.IUIModel modelBase);
                        /*0x1f30214*/ System.Collections.IEnumerator RebindAfterModelDisposed();
                        /*0x1f309e4*/ void Unbind();
                        /*0x1f2fe14*/ bool IsBound();
                        /*0x1f309e4*/ void Reorient();
                        /*0x1f30ebc*/ void InitializeAncestorRelativeBindingContainer(RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation relativeContainer);
                        /*0x1f30ebc*/ void ReorientUpdateDataKey(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot dataKey);
                        /*0x1f30a84*/ void UpdateBinding(bool supressErrors);
                        /*0x1f2fe14*/ bool CalcIsBindingPermitted();
                        /*0x1f2fe14*/ bool Rebind();
                        /*0x1f30a84*/ void OnBindingPermissionChanged(bool isBindingPermitted);
                        /*0x1f309e4*/ void OnRebindRequested();
                        /*0x1f30ebc*/ void OnRelativeKeyChanged(RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation container);
                        /*0x1f309e4*/ void UnsubscribeFromBindingContainer();
                        /*0x1f309e4*/ void SubscribeToRebindTriggers();
                        /*0x1f309e4*/ void UnsubscribeFromRebindTriggers();
                        /*0x1f309e4*/ void OnDataContextSet();
                        /*0x1f30ebc*/ void PropertyChanged(string propertyName);

                        class BindableImpl<TModel> : Framework.DataBinding.Bindable<TModel>
                        {
                            /*0x0*/ RedCrow.UI.UUIF.DataProviding.Binders.SmartBinder<TModel> m_parent;

                            /*0x1f30ebc*/ BindableImpl(RedCrow.UI.UUIF.DataProviding.Binders.SmartBinder<TModel> parent);
                            /*0x1f30ebc*/ void ItemPropertyChanged(string propertyName);
                        }

                        class <RebindAfterModelDisposed>d__40<TModel> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
                        {
                            /*0x0*/ int <>1__state;
                            /*0x0*/ object <>2__current;
                            /*0x0*/ RedCrow.UI.UUIF.DataProviding.Binders.SmartBinder<TModel> <>4__this;

                            /*0x1f30b78*/ <RebindAfterModelDisposed>d__40(int <>1__state);
                            /*0x1f309e4*/ void System.IDisposable.Dispose();
                            /*0x1f2fe14*/ bool MoveNext();
                            /*0x1f30214*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                            /*0x1f309e4*/ void System.Collections.IEnumerator.Reset();
                            /*0x1f30214*/ object System.Collections.IEnumerator.get_Current();
                        }
                    }
                }
            }

            namespace Core
            {
                class AnimatedHidableUIElement : RedCrow.UI.UUIF.Core.HidableUIElement
                {
                    static string PARAMETER_TRIGGER_SHOW = "show";
                    static string PARAMETER_TRIGGER_HIDE = "hide";
                    /*0x30*/ UnityEngine.Animator TransitionAnimator;
                    /*0x38*/ bool DeactivateAfterHide;

                    /*0x22bf908*/ AnimatedHidableUIElement();
                    /*0x22bf728*/ void AnimateIn();
                    /*0x22bf7d4*/ void AnimateOut();
                    /*0x22bf880*/ bool CompleteAnimation();
                    /*0x22bf900*/ bool ShouldDeactivateAfterHide();
                }

                class HidableUIElement : UnityEngine.MonoBehaviour
                {
                    /*0x20*/ RedCrow.UI.UUIF.Core.HidableUIElement.AnimationStateChangeDelegate AnimationStateChanged;
                    /*0x28*/ RedCrow.UI.UUIF.Core.UIAnimationStateBasic m_currentAnimationState;

                    /*0x22bf910*/ HidableUIElement();
                    /*0x22bf918*/ RedCrow.UI.UUIF.Core.UIAnimationStateBasic get_CurrentAnimationState();
                    /*0x22bf920*/ void set_CurrentAnimationState(RedCrow.UI.UUIF.Core.UIAnimationStateBasic value);
                    /*0x22bf958*/ bool get_IsInTransition();
                    /*0x22bf96c*/ void Show();
                    /*0x22a95c8*/ void Show(bool skipAnimation);
                    /*0x22bf97c*/ bool ShouldAnimateIn();
                    /*0x22bf9bc*/ void Hide();
                    /*0x22bf9cc*/ void Hide(bool skipAnimation);
                    /*0x22bfa90*/ bool ShouldAnimateOut();
                    /*0x22bfad4*/ void PreAnimateIn();
                    /*0x22bfb20*/ void AnimateIn();
                    /*0x22bfb30*/ void PreAnimateOut();
                    /*0x22bfb34*/ void AnimateOut();
                    /*0x22bfb44*/ void OnShowComplete();
                    /*0x22bfb54*/ void OnHideComplete();
                    /*0x22bfbe4*/ bool ShouldDeactivateAfterHide();
                    /*0x22bfbec*/ bool CompleteAnimation();

                    class AnimationStateChangeDelegate : System.MulticastDelegate
                    {
                        /*0x22bfbf4*/ AnimationStateChangeDelegate(object object, nint method);
                        /*0x22bfd00*/ void Invoke(RedCrow.UI.UUIF.Core.HidableUIElement element, RedCrow.UI.UUIF.Core.UIAnimationStateBasic previousState, RedCrow.UI.UUIF.Core.UIAnimationStateBasic newState);
                        /*0x22bfd14*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Core.HidableUIElement element, RedCrow.UI.UUIF.Core.UIAnimationStateBasic previousState, RedCrow.UI.UUIF.Core.UIAnimationStateBasic newState, System.AsyncCallback callback, object object);
                        /*0x22bfdc4*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                interface IIntIdentifiable
                {
                    /*0x1f2ffc8*/ int GetIntId();
                }

                interface IPanelManager
                {
                    /*0x1f2fe14*/ bool get_SkipAllAnimations();
                    /*0x1f30a84*/ void set_SkipAllAnimations(bool value);
                    void ActivatePanel(string panelId, string layerId, bool skipAnimation, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    void ActivatePanel(RedCrow.UI.UUIF.Core.PanelPlacement panelPlacement, bool skipAnimation, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    void DeactivatePanel(string panelId, bool skipAnimation);
                    /*0x1f2fec8*/ bool IsPanelDisplayed(string panelId);
                    /*0x1f2fec8*/ bool IsPanelDisplayedOrPreparingForDisplay(string panelId);
                    /*0x1f2fec8*/ bool IsPanelDisplayedAndNotAnimatingOut(string panelId);
                    /*0x1f2fec8*/ bool IsPanelDisplayedAndNotAnimating(string panelId);
                    /*0x1f2fec8*/ bool IsPanelRequestedAndNotAnimatingOut(string panelId);
                    /*0x1f2fe14*/ bool AreAnyPanelsInTransition();
                    /*0x1f30ebc*/ void RegisterPanelProvider(RedCrow.UI.UUIF.Core.IPanelProvider panelProvider);
                    /*0x1f30a84*/ void Reset(bool skipAnimation);
                    /*0x1f309e4*/ void SoftReset();
                    /*0x1f30ebc*/ void add_PanelDeactivationComplete(System.Action<string> value);
                    /*0x1f30ebc*/ void remove_PanelDeactivationComplete(System.Action<string> value);
                    /*0x1f30ebc*/ void add_PanelAnimatedIn(System.Action<string> value);
                    /*0x1f30ebc*/ void remove_PanelAnimatedIn(System.Action<string> value);
                }

                interface IPanelProvider
                {
                    /*0x1f30ff0*/ void FetchPanel(string panelId, System.Func<string, RedCrow.UI.UUIF.Core.PanelBase, bool> callback);
                    /*0x1f30ebc*/ void CancelPanelFetch(string panelId);
                    /*0x1f30ebc*/ void ReleasePanel(RedCrow.UI.UUIF.Core.PanelBase panel);
                    /*0x1f2fec8*/ bool IsPanelReady(string panelId);
                    /*0x1f309e4*/ void Reset();
                    /*0x1f309e4*/ void CleanUp();
                }

                interface IPanelResourceHandle
                {
                    /*0x1f309e4*/ void ReleaseHandle();
                }

                interface IPoolableRoot
                {
                    /*0x1f309e4*/ void InvokeReturnToPoolOnAllChildren();
                    /*0x1f30ebc*/ void AddChild(RedCrow.UI.UUIF.Core.IPoolable poolable);
                }

                interface IPoolable
                {
                    /*0x1f309e4*/ void OnReleaseToPool();
                }

                class PoolableMonobehaviourUtils
                {
                    static /*0x22bfdd0*/ void RegisterToParentPoolableRoot(UnityEngine.MonoBehaviour monoBehaviour, RedCrow.UI.UUIF.Core.IPoolable poolable);
                }

                interface IPopupProvider
                {
                    /*0x1f30ff0*/ void FetchPopup(string popupId, System.Action<string, RedCrow.UI.UUIF.Core.PopupBase> callback);
                    /*0x1f30ebc*/ void ReleasePopup(RedCrow.UI.UUIF.Core.PopupBase popup);
                    /*0x1f2fec8*/ bool IsPopupReady(string popupId);
                    /*0x1f2fec8*/ bool DoesPopupExist(string popupId);
                }

                class ScrimProviderBase : UnityEngine.MonoBehaviour
                {
                    /*0x22bfeb0*/ ScrimProviderBase();
                    /*0x1f30240*/ RedCrow.UI.UUIF.Core.ScrimBase FetchScrim(int requestedScrimType);
                    /*0x1f30ebc*/ void ReleaseScrim(RedCrow.UI.UUIF.Core.ScrimBase scrim);
                }

                interface IStatefulPanelManager : RedCrow.UI.UUIF.Core.IPanelManager
                {
                    void RequestPanelActivation(int callerId, string panelId, string layerId, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    void RequestPanelActivation(int callerId, RedCrow.UI.UUIF.Core.PanelPlacement panelPlacement, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    void RequestPanelSuspension(int callerId, string panelId, bool deactivateImmediately);
                    void UnregisterPanelRequest(int callerId, string panelId, bool deactivateImmediately);
                }

                interface IStringIdentifiable
                {
                    /*0x1f30214*/ string GetStringId();
                }

                class LayerContent : RedCrow.UI.UUIF.Core.HidableUIElement
                {
                    /*0x30*/ RedCrow.UI.UUIF.Core.UILayer m_containingLayer;
                    /*0x38*/ bool m_isRegisteredWithLayer;

                    static /*0x22c01b4*/ bool TryGetLayerContent(UnityEngine.Transform uiContent, ref RedCrow.UI.UUIF.Core.LayerContent layerContent);
                    /*0x22c0264*/ LayerContent();
                    /*0x22bfeb8*/ RedCrow.UI.UUIF.Core.UILayer get_ContainingLayer();
                    /*0x22bfec0*/ bool get_CanHandleLayerEvent();
                    /*0x22bfed4*/ void SetContainingLayer(RedCrow.UI.UUIF.Core.UILayer layer);
                    /*0x22c00b8*/ void PreAnimateIn();
                    /*0x22c0184*/ void OnHideComplete();
                    /*0x22c0024*/ void RegisterWithLayer(RedCrow.UI.UUIF.Core.UILayer layer);
                    /*0x22bff94*/ void UnregisterWithLayer(RedCrow.UI.UUIF.Core.UILayer layer);
                    /*0x22c01ac*/ bool HandleLayerEvent(int eventId, object[] eventParameters);
                }

                interface IUUIFLogger
                {
                    /*0x1f30ff0*/ void LogError(string message, UnityEngine.GameObject context);
                    /*0x1f30ff0*/ void LogWarning(string message, UnityEngine.GameObject context);
                    /*0x1f30ff0*/ void LogInfo(string message, UnityEngine.GameObject context);
                    /*0x1f30ff0*/ void LogVerbose(string message, UnityEngine.GameObject context);
                    /*0x1f30ac0*/ void AssertIsTrue(bool condition, string message);
                    /*0x1f30ac0*/ void AssertIsFalse(bool condition, string message);
                    /*0x1f30ff0*/ void LogException(System.Exception exception, string message);
                }

                class LogProxy
                {
                    static /*0x0*/ RedCrow.UI.UUIF.Core.IUUIFLogger m_logger;

                    static /*0x22c026c*/ void Initialize(RedCrow.UI.UUIF.Core.IUUIFLogger logger);
                    static /*0x22c02c4*/ void LogError(string message, UnityEngine.GameObject context);
                    static /*0x22c03d0*/ void LogWarning(string message, UnityEngine.GameObject context);
                    static /*0x22c04e0*/ void LogInfo(string message, UnityEngine.GameObject context);
                    static /*0x22c05f0*/ void LogVerbose(string message, UnityEngine.GameObject context);
                    static /*0x22c0700*/ void LogException(System.Exception exception, string message);
                    static /*0x22c080c*/ void AssertIsTrue(bool condition, string message);
                    static /*0x22c08ec*/ void AssertIsFalse(bool condition, string message);
                    /*0x22c09cc*/ LogProxy();
                }

                class NamedUIElementCache<TEntry>
                {
                    /*0x0*/ RedCrow.UI.UUIF.Core.NamedUIElementCache.CacheDelegate<TEntry> EntryExpired;
                    /*0x0*/ int m_maxCacheSize;
                    /*0x0*/ System.Collections.Generic.Dictionary<string, TEntry> m_cachedEntries;
                    /*0x0*/ System.Collections.Generic.List<string> m_chronologicalEntryIds;

                    /*0x1f309e4*/ NamedUIElementCache();
                    /*0x1f30b78*/ NamedUIElementCache(int maxCachedEntries);
                    /*0x1f2ffc8*/ int get_MaxCacheSize();
                    /*0x1f30b78*/ void set_MaxCacheSize(int value);
                    /*0x1f30214*/ System.Collections.Generic.List<string> get_Entries();
                    /*0x1f2fec8*/ bool HasEntry(string entryId);
                    /*0x1f2ff00*/ bool TryGetEntry(string entryId, ref TEntry cachedEntry);
                    /*0x1ffc854*/ void AddEntry(TEntry entry);
                    /*0x1f30ebc*/ void RemoveEntry(string entryId);
                    /*0x1f309e4*/ void PurgeCache();

                    class CacheDelegate<TEntry> : System.MulticastDelegate
                    {
                        CacheDelegate(object object, nint method);
                        /*0x1ffc854*/ void Invoke(TEntry entry);
                        /*0x1ffc854*/ System.IAsyncResult BeginInvoke(TEntry entry, System.AsyncCallback callback, object object);
                        /*0x1f30ebc*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                class PanelBase : RedCrow.UI.UUIF.Core.LayerContent, RedCrow.UI.UUIF.Core.IStringIdentifiable, RedCrow.UI.UUIF.Core.IPoolableRoot
                {
                    /*0x40*/ UnityEngine.Animator TransitionAnimator;
                    /*0x48*/ UnityEngine.CanvasGroup CanvasGroup;
                    /*0x50*/ bool _ignoreSafeArea;
                    /*0x58*/ UnityEngine.RectTransform _rectTransform;
                    /*0x60*/ UnityEngine.Canvas _rootCanvas;
                    /*0x68*/ RedCrow.UI.UUIF.Core.PanelBase.PanelAnimationDelegate AnimateInComplete;
                    /*0x70*/ RedCrow.UI.UUIF.Core.PanelBase.PanelAnimationDelegate AnimateOutComplete;
                    /*0x78*/ RedCrow.UI.UUIF.Core.PanelBase.PanelLifecycleDelegate ReadyForDisplay;
                    /*0x80*/ RedCrow.UI.UUIF.Core.IPanelResourceHandle _underlyingResourceHandle;
                    /*0x88*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.IPoolable> _poolableChildren;
                    /*0x90*/ UnityEngine.Rect _previousSafeArea;

                    /*0x22a995c*/ PanelBase();
                    /*0x22c09d4*/ void add_AnimateInComplete(RedCrow.UI.UUIF.Core.PanelBase.PanelAnimationDelegate value);
                    /*0x22c0a70*/ void remove_AnimateInComplete(RedCrow.UI.UUIF.Core.PanelBase.PanelAnimationDelegate value);
                    /*0x22c0b0c*/ void add_AnimateOutComplete(RedCrow.UI.UUIF.Core.PanelBase.PanelAnimationDelegate value);
                    /*0x22c0ba8*/ void remove_AnimateOutComplete(RedCrow.UI.UUIF.Core.PanelBase.PanelAnimationDelegate value);
                    /*0x22c0c44*/ void add_ReadyForDisplay(RedCrow.UI.UUIF.Core.PanelBase.PanelLifecycleDelegate value);
                    /*0x22c0ce0*/ void remove_ReadyForDisplay(RedCrow.UI.UUIF.Core.PanelBase.PanelLifecycleDelegate value);
                    /*0x22c0d7c*/ bool get_CanHandleLayerEvent();
                    /*0x22c0e24*/ void SetUnderlyingResource(RedCrow.UI.UUIF.Core.IPanelResourceHandle resourceHandle);
                    /*0x22c0e2c*/ void LoadAdditionalResources(System.Action onComplete);
                    /*0x22c0e48*/ void ReleaseResource();
                    /*0x22c0f04*/ void ReleaseAdditionalResources();
                    /*0x22c0f08*/ void InvokeReturnToPoolOnAllChildren();
                    /*0x22c1118*/ void AddChild(RedCrow.UI.UUIF.Core.IPoolable poolable);
                    /*0x1f30804*/ float get_HideTimeoutSeconds();
                    /*0x1f309e4*/ void PrepareForDisplay();
                    /*0x22a971c*/ void OnPreparedForDisplay();
                    /*0x22c1170*/ void PreAnimateIn();
                    /*0x22c1214*/ void AnimateIn();
                    /*0x22c12c0*/ void PreAnimateOut();
                    /*0x22c1348*/ void AnimateOut();
                    /*0x22c13f4*/ bool CompleteAnimation();
                    /*0x22c1474*/ void OnShowComplete();
                    /*0x22a96d0*/ void OnHideComplete();
                    /*0x22c14cc*/ string GetStringId();
                    /*0x22c14ec*/ void SetPanelId(string panelId);
                    /*0x22c14f0*/ void Update();
                    /*0x22c14f4*/ void CheckForSafeAreaChanges();

                    class PanelAnimationDelegate : System.MulticastDelegate
                    {
                        /*0x22c160c*/ PanelAnimationDelegate(object object, nint method);
                        /*0x22c1714*/ void Invoke(RedCrow.UI.UUIF.Core.PanelBase panel);
                        /*0x22c1728*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Core.PanelBase panel, System.AsyncCallback callback, object object);
                        /*0x22c1748*/ void EndInvoke(System.IAsyncResult result);
                    }

                    class PanelLifecycleDelegate : System.MulticastDelegate
                    {
                        /*0x22c1754*/ PanelLifecycleDelegate(object object, nint method);
                        /*0x22c185c*/ void Invoke(RedCrow.UI.UUIF.Core.PanelBase panel);
                        /*0x22c1870*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Core.PanelBase panel, System.AsyncCallback callback, object object);
                        /*0x22c1890*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                class PanelGroup
                {
                    /*0x10*/ bool <IsActive>k__BackingField;
                    /*0x18*/ System.Action AnimateOutComplete;
                    /*0x20*/ System.Action AnimateInComplete;
                    /*0x28*/ RedCrow.UI.UUIF.Core.IStatefulPanelManager m_panelManager;
                    /*0x30*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.PanelPlacement> m_panelPlacements;
                    /*0x38*/ int m_groupId;
                    /*0x3c*/ bool m_isWaitingForAnimateOut;
                    /*0x40*/ System.Collections.Generic.List<string> m_suspensionPanelIds;

                    /*0x22a9b44*/ PanelGroup(int groupId, RedCrow.UI.UUIF.Core.IStatefulPanelManager panelManager, RedCrow.UI.UUIF.Core.PanelPlacement[] panelPlacements);
                    /*0x22a9cf4*/ PanelGroup(int groupId, RedCrow.UI.UUIF.Core.IStatefulPanelManager panelManager, string[] panelIds);
                    /*0x22c189c*/ bool get_IsActive();
                    /*0x22c18a4*/ void set_IsActive(bool value);
                    /*0x22aa430*/ void add_AnimateOutComplete(System.Action value);
                    /*0x22aa234*/ void remove_AnimateOutComplete(System.Action value);
                    /*0x22c18ac*/ void add_AnimateInComplete(System.Action value);
                    /*0x22c1948*/ void remove_AnimateInComplete(System.Action value);
                    /*0x22c19e4*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.PanelPlacement> get_PanelPlacements();
                    /*0x22c1a1c*/ void Finalize();
                    /*0x22c1b78*/ void AddPanels(RedCrow.UI.UUIF.Core.PanelPlacement[] panelPlacements);
                    /*0x22c1c70*/ void AddPanels(string[] panelIds);
                    /*0x22c1da8*/ void RemovePanels(RedCrow.UI.UUIF.Core.PanelPlacement[] panelPlacements);
                    /*0x22c1e5c*/ void RemovePanels(string[] panelIds);
                    /*0x22c1f84*/ void AddSuspendedPanels(string[] panelIds);
                    /*0x22c2060*/ void RemoveSuspendedPanels(string[] panelIds);
                    /*0x22aa2d0*/ void Show();
                    /*0x22aa3fc*/ void Hide(bool immediate);
                    /*0x22c24e8*/ void ActivatePanels();
                    /*0x22c2188*/ void DeactivatePanels(bool immediate);
                    /*0x22c279c*/ void OnPanelAnimatedOut(string panelId);
                    /*0x22c28c4*/ void OnPanelAnimatedIn(string panelId);
                    /*0x22aa414*/ void CallAnimateOutComplete();
                    /*0x22c29d8*/ bool AreAllPanelsHidden();
                    /*0x22c2b00*/ bool AreAllPanelsShown();
                }

                class PanelManager : RedCrow.UI.UUIF.Core.IPanelManager
                {
                    /*0x10*/ RedCrow.Collections.WorryFreeList<System.Action<string>> m_panelDeactivationComplete;
                    /*0x18*/ bool <SkipAllAnimations>k__BackingField;
                    /*0x20*/ RedCrow.Collections.WorryFreeList<System.Action<string>> m_panelAnimatedIn;
                    /*0x28*/ System.Collections.Generic.Dictionary<string, RedCrow.UI.UUIF.Core.PanelManager.ManagedPanelEntry> m_managedPanels;
                    /*0x30*/ System.Collections.Generic.List<string> m_loadingPanels;
                    /*0x38*/ RedCrow.UI.UUIF.Core.UILayerManager m_layerManager;
                    /*0x40*/ RedCrow.UI.UUIF.Core.IPanelProvider m_panelProvider;
                    /*0x48*/ RedCrow.UI.UUIF.Core.PanelManager.OnPanelActivatedDelegate OnPanelActivated;

                    /*0x22c2eec*/ PanelManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager);
                    /*0x22c3054*/ PanelManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager, RedCrow.UI.UUIF.Core.IPanelProvider panelProvider);
                    /*0x22c2c44*/ bool get_SkipAllAnimations();
                    /*0x22c2c4c*/ void set_SkipAllAnimations(bool value);
                    /*0x22c2c54*/ void RedCrow.UI.UUIF.Core.IPanelManager.add_PanelDeactivationComplete(System.Action<string> value);
                    /*0x22c2cac*/ void RedCrow.UI.UUIF.Core.IPanelManager.remove_PanelDeactivationComplete(System.Action<string> value);
                    /*0x22c2d04*/ void RedCrow.UI.UUIF.Core.IPanelManager.add_PanelAnimatedIn(System.Action<string> value);
                    /*0x22c2d5c*/ void RedCrow.UI.UUIF.Core.IPanelManager.remove_PanelAnimatedIn(System.Action<string> value);
                    /*0x22c2db4*/ void add_OnPanelActivated(RedCrow.UI.UUIF.Core.PanelManager.OnPanelActivatedDelegate value);
                    /*0x22c2e50*/ void remove_OnPanelActivated(RedCrow.UI.UUIF.Core.PanelManager.OnPanelActivatedDelegate value);
                    /*0x22c31d8*/ void ActivatePanel(string panelId, string layerId, bool skipAnimation, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    /*0x22c324c*/ void ActivatePanel(RedCrow.UI.UUIF.Core.PanelPlacement panelPlacement, bool skipAnimation, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    /*0x22c3520*/ bool OnPanelProvided(string panelId, RedCrow.UI.UUIF.Core.PanelBase loadedPanel);
                    /*0x22c3720*/ void OnPanelReadyForDisplay(RedCrow.UI.UUIF.Core.PanelBase panel);
                    /*0x22c3884*/ void DeactivatePanel(string panelId, bool skipAnimation);
                    /*0x22c3cc4*/ void LateUpdate();
                    /*0x22c3cc8*/ void ForceHideTimedOutPanels();
                    /*0x22c4024*/ bool IsPanelDisplayed(string panelId);
                    /*0x22c40b0*/ bool IsPanelDisplayedOrPreparingForDisplay(string panelId);
                    /*0x22c4108*/ bool IsPanelDisplayedAndNotAnimatingOut(string panelId);
                    /*0x22c41b0*/ bool IsPanelDisplayedAndNotAnimating(string panelId);
                    /*0x22c4258*/ bool IsPanelRequestedAndNotAnimatingOut(string panelId);
                    /*0x22c4308*/ bool AreAnyPanelsInTransition();
                    /*0x22c4588*/ void RegisterPanelProvider(RedCrow.UI.UUIF.Core.IPanelProvider panelProvider);
                    /*0x22c463c*/ void Reset(bool skipAnimation);
                    /*0x22c485c*/ void SoftReset();
                    /*0x22c4a94*/ void SetPanelLayer(RedCrow.UI.UUIF.Core.PanelBase panel, string requestedLayer);
                    /*0x22c49a4*/ void ReleasePanel(RedCrow.UI.UUIF.Core.PanelBase panelToRelease);
                    /*0x22c3974*/ void CancelPanelFetch(string panelId);
                    /*0x22c3a6c*/ void ReleaseInitializingPanel(RedCrow.UI.UUIF.Core.PanelBase panel);
                    /*0x22c3b1c*/ void HidePanel(RedCrow.UI.UUIF.Core.PanelBase panel, bool skipAnimation);
                    /*0x22c4af8*/ void HandlePanelAnimateInComplete(RedCrow.UI.UUIF.Core.PanelBase panel);
                    /*0x22c4bbc*/ void HandlePanelAnimateOutComplete(RedCrow.UI.UUIF.Core.PanelBase panel);

                    class ManagedPanelEntry
                    {
                        /*0x10*/ RedCrow.UI.UUIF.Core.PanelLifecycleState LifecycleState;
                        /*0x18*/ RedCrow.UI.UUIF.Core.PanelPlacement Placement;
                        /*0x28*/ System.Action<RedCrow.UI.UUIF.Core.PanelBase> Initializer;
                        /*0x30*/ RedCrow.UI.UUIF.Core.PanelBase Panel;
                        /*0x38*/ float HideBeginTimestamp;

                        /*0x22c3518*/ ManagedPanelEntry();
                    }

                    class OnPanelActivatedDelegate : System.MulticastDelegate
                    {
                        /*0x22c4c8c*/ OnPanelActivatedDelegate(object object, nint method);
                        /*0x22c4d94*/ void Invoke(RedCrow.UI.UUIF.Core.PanelBase loadedPanel);
                        /*0x22c4da8*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Core.PanelBase loadedPanel, System.AsyncCallback callback, object object);
                        /*0x22c4dc8*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                struct PanelPlacement
                {
                    /*0x10*/ string PanelId;
                    /*0x18*/ string LayerId;

                    /*0x22c19ec*/ PanelPlacement(string panelId, string layerId);
                }

                enum PanelLifecycleState
                {
                    Loading = 0,
                    Initializing = 1,
                    Displaying = 2,
                }

                class PopupInitializationDetails
                {
                    /*0x10*/ System.Action DefaultAction;
                    /*0x18*/ System.Action CloseAction;

                    /*0x22c4dd4*/ PopupInitializationDetails();
                }

                class PopupBase : RedCrow.UI.UUIF.Core.PanelBase
                {
                    /*0xa0*/ bool <AreActionsComplete>k__BackingField;
                    /*0xa8*/ Yeti.UIServices _uiServices;
                    /*0xb0*/ Yeti.AndroidBackButtonPopupResponse _androidBackButtonResponse;
                    /*0xb8*/ RedCrow.UI.UUIF.Core.PopupBase.PopupEventDelegate PopupClosed;
                    /*0xc0*/ System.Action <DefaultAction>k__BackingField;
                    /*0xc8*/ System.Action <CloseAction>k__BackingField;

                    /*0x22a9a8c*/ PopupBase();
                    /*0x22c4ddc*/ bool get_AreActionsComplete();
                    /*0x22c4de4*/ void set_AreActionsComplete(bool value);
                    /*0x22c4dec*/ void add_PopupClosed(RedCrow.UI.UUIF.Core.PopupBase.PopupEventDelegate value);
                    /*0x22c4e88*/ void remove_PopupClosed(RedCrow.UI.UUIF.Core.PopupBase.PopupEventDelegate value);
                    /*0x22c4f24*/ System.Action get_DefaultAction();
                    /*0x22c4f2c*/ void set_DefaultAction(System.Action value);
                    /*0x22c4f34*/ System.Action get_CloseAction();
                    /*0x22c4f3c*/ void set_CloseAction(System.Action value);
                    /*0x22c4f44*/ bool Initialize(RedCrow.UI.UUIF.Core.PopupInitializationDetails initializationObject);
                    /*0x22c4f88*/ void PrepareForDisplay();
                    /*0x22c4f8c*/ void CleanUp();
                    /*0x22c4fd8*/ void OnDestroy();
                    /*0x22c4fe8*/ void CloseWithDefaultAction();
                    /*0x22c5070*/ void CloseWithoutAction();
                    /*0x22c5078*/ void CloseWithoutAction(bool skipAnimation);
                    /*0x22c50d8*/ void OnHideComplete();
                    /*0x22c5114*/ void TriggerPopupClosed();
                    /*0x22c5134*/ bool HandleLayerEvent(int eventId, object[] eventParameters);

                    class PopupEventDelegate : System.MulticastDelegate
                    {
                        /*0x22c521c*/ PopupEventDelegate(object object, nint method);
                        /*0x22c5324*/ void Invoke(RedCrow.UI.UUIF.Core.PopupBase popup);
                        /*0x22c5338*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Core.PopupBase popup, System.AsyncCallback callback, object object);
                        /*0x22c5358*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                class PopupLayerContentManager
                {
                    /*0x10*/ System.Action<string, int> PopupActivated;
                    /*0x18*/ System.Action<string, int> PopupDeactivated;
                    /*0x20*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.QueuedPopupData> m_hiddenPopupData;
                    /*0x28*/ RedCrow.UI.UUIF.Core.PopupBase m_displayedPopup;
                    /*0x30*/ RedCrow.UI.UUIF.Core.QueuedPopupData m_displayedPopupData;
                    /*0x38*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.QueuedPopupData> m_pendingPopupData;
                    /*0x40*/ string m_layerId;
                    /*0x48*/ bool m_isWaitingForFetch;
                    /*0x49*/ bool m_shouldCloseFetchedPopup;
                    /*0x50*/ RedCrow.UI.UUIF.Core.UILayerManager m_layerManager;
                    /*0x58*/ RedCrow.UI.UUIF.Core.IPopupProvider m_popupProvider;

                    /*0x23c6ef8*/ PopupLayerContentManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager, RedCrow.UI.UUIF.Core.IPopupProvider popupProvider, string layerId);
                    /*0x23c6c38*/ void add_PopupActivated(System.Action<string, int> value);
                    /*0x23c6ce8*/ void remove_PopupActivated(System.Action<string, int> value);
                    /*0x23c6d98*/ void add_PopupDeactivated(System.Action<string, int> value);
                    /*0x23c6e48*/ void remove_PopupDeactivated(System.Action<string, int> value);
                    /*0x23c6fe8*/ void ActivatePopup(string popupId, RedCrow.UI.UUIF.Core.PopupInitializationDetails initializationObject, int instanceId, RedCrow.UI.UUIF.Core.PopupPosition insertionPosition);
                    /*0x23c72a0*/ bool DeactivatePopup(int popupInstanceId);
                    /*0x23c7470*/ void DeactivateAllPopups();
                    /*0x23c75c4*/ bool IsAnyPopupActive();
                    /*0x23c7624*/ bool IsPopupActive(int popupInstanceId);
                    /*0x23c76f0*/ bool IsPopupDisplayed(int popupInstanceId);
                    /*0x23c7710*/ bool IsPopupInTransition();
                    /*0x23c77a8*/ void DisplayNextPopup();
                    /*0x23c79c8*/ void OnPopupFetchComplete(string popupId, RedCrow.UI.UUIF.Core.PopupBase popup);
                    /*0x23c7c74*/ void InitializePopup(RedCrow.UI.UUIF.Core.PopupBase popup);
                    /*0x23c7d7c*/ void HideDisplayedPopup();
                    /*0x23c7e38*/ void OnPopupHideComplete(RedCrow.UI.UUIF.Core.PanelBase popup);
                    /*0x23c803c*/ void OnPopupClosed(RedCrow.UI.UUIF.Core.PopupBase popup);
                    /*0x23c81d0*/ void RegisterPopupProvider(RedCrow.UI.UUIF.Core.IPopupProvider popupProvider);
                }

                class PopupManager
                {
                    static int INVALID_ID = -2147483648;
                    /*0x10*/ RedCrow.UI.UUIF.Core.UILayerManager m_layerManager;
                    /*0x18*/ RedCrow.UI.UUIF.Core.IPopupProvider m_popupProvider;
                    /*0x20*/ System.Collections.Generic.Dictionary<string, RedCrow.UI.UUIF.Core.PopupLayerContentManager> m_layerContentManagers;
                    /*0x28*/ int m_nextPopupInstanceId;
                    /*0x30*/ System.Action<string, int> PopupActivated;
                    /*0x38*/ System.Action<string, int> PopupDeactivated;

                    /*0x23c8498*/ PopupManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager);
                    /*0x23c8534*/ PopupManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager, RedCrow.UI.UUIF.Core.IPopupProvider popupProvider);
                    /*0x23c81d8*/ void add_PopupActivated(System.Action<string, int> value);
                    /*0x23c8288*/ void remove_PopupActivated(System.Action<string, int> value);
                    /*0x23c8338*/ void add_PopupDeactivated(System.Action<string, int> value);
                    /*0x23c83e8*/ void remove_PopupDeactivated(System.Action<string, int> value);
                    /*0x23c85ec*/ int ActivatePopup(string popupId, string layerId, RedCrow.UI.UUIF.Core.PopupInitializationDetails initializationObject, RedCrow.UI.UUIF.Core.PopupPosition insertionPosition, System.Action<int> addToOpenPopupsCallback);
                    /*0x23c8844*/ bool DeactivatePopup(string layerId, int popupInstanceId);
                    /*0x23c88f8*/ void DeactivateAllPopups();
                    /*0x23c8ab8*/ void Reset();
                    /*0x23c8b20*/ bool IsPopupActive(int popupInstanceId);
                    /*0x23c8d90*/ bool IsPopupDisplayed(int popupInstanceId);
                    /*0x23c9004*/ bool IsAnyPopupActive();
                    /*0x23c926c*/ bool AreAnyPopupsInTransition();
                    /*0x23c9440*/ void RegisterPopupProvider(RedCrow.UI.UUIF.Core.IPopupProvider popupProvider);
                    /*0x23c962c*/ void OnPopupActivated(string popupId, int popupInstanceId);
                    /*0x23c9658*/ void OnPopupDeactivated(string popupId, int popupInstanceId);
                }

                enum PopupPosition
                {
                    Active = 0,
                    NextInLine = 1,
                    LastInLine = 2,
                }

                class QueuedPopupData
                {
                    /*0x10*/ string PopupId;
                    /*0x18*/ RedCrow.UI.UUIF.Core.PopupInitializationDetails InitializationObject;
                    /*0x20*/ int PopupInstanceId;

                    /*0x23c7248*/ QueuedPopupData(string popupId, RedCrow.UI.UUIF.Core.PopupInitializationDetails initializationObject, int instanceId);
                }

                class SafeAreaResizer : UnityEngine.MonoBehaviour
                {
                    /*0x20*/ bool _avoidLeftRightSafeAreas;
                    /*0x21*/ bool _avoidTopBottomSafeAreas;
                    /*0x28*/ UnityEngine.RectTransform _rectTransform;
                    /*0x30*/ UnityEngine.Canvas _canvas;
                    /*0x38*/ UnityEngine.Rect _previousSafeArea;
                    /*0x48*/ float _previousScaleFactor;

                    /*0x23c9a08*/ SafeAreaResizer();
                    /*0x23c9684*/ void OnEnable();
                    /*0x23c9720*/ void OnApplicationFocus(bool hasFocus);
                    /*0x23c9740*/ void Update();
                }

                class ScrimBase : RedCrow.UI.UUIF.Core.HidableUIElement, RedCrow.UI.UUIF.Core.IIntIdentifiable
                {
                    /*0x30*/ RedCrow.UI.UUIF.Core.ScrimBase.ScrimAnimationDelegate AnimateOutComplete;
                    /*0x38*/ float m_requestedIntroAnimationDuration;
                    /*0x3c*/ float m_requestedOutroAnimationDuration;

                    /*0x23c9abc*/ ScrimBase();
                    /*0x23c9a38*/ void Show(float requestedAnimationDuration);
                    /*0x23c9a44*/ void OnShowComplete();
                    /*0x23c9a64*/ void Hide(float requestedAnimationDuration);
                    /*0x23c9a7c*/ void OnHideComplete();
                    /*0x1f2ffc8*/ int GetIntId();

                    class ScrimAnimationDelegate : System.MulticastDelegate
                    {
                        /*0x23c9acc*/ ScrimAnimationDelegate(object object, nint method);
                        /*0x23c9bd4*/ void Invoke(RedCrow.UI.UUIF.Core.ScrimBase scrim);
                        /*0x23c9be8*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Core.ScrimBase scrim, System.AsyncCallback callback, object object);
                        /*0x23c9c08*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                class StatefulPanelManager : RedCrow.UI.UUIF.Core.PanelManager, RedCrow.UI.UUIF.Core.IStatefulPanelManager, RedCrow.UI.UUIF.Core.IPanelManager
                {
                    /*0x50*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<RedCrow.UI.UUIF.Core.StatefulPanelManager.PanelRequest>> m_panelRequests;
                    /*0x58*/ System.Collections.Generic.List<string> m_panelsToRefresh;

                    /*0x23c9c14*/ StatefulPanelManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager);
                    /*0x23c9cf8*/ StatefulPanelManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager, RedCrow.UI.UUIF.Core.IPanelProvider panelProvider);
                    /*0x23c9dec*/ void LateUpdate();
                    /*0x23c9e08*/ void ConsumePanels();
                    /*0x23ca018*/ void RequestPanelActivation(int callerId, string panelId, string layerId, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    /*0x23ca064*/ void RequestPanelActivation(int callerId, RedCrow.UI.UUIF.Core.PanelPlacement panelPlacement, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    /*0x23ca474*/ void RequestPanelSuspension(int callerId, string panelId, bool deactivateImmediately);
                    /*0x23ca6fc*/ void UnregisterPanelRequest(int callerId, string panelId, bool immediate);
                    /*0x23ca3dc*/ void SetPanelForRefresh(string panelId);
                    /*0x23ca87c*/ void Reset(bool immediate);
                    /*0x23ca8e0*/ void SoftReset();
                    /*0x23ca93c*/ void ActivatePanel(string panelId, string layerId, bool skipAnimation, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    /*0x23ca9f0*/ void ActivatePanel(RedCrow.UI.UUIF.Core.PanelPlacement panelPlacement, bool skipAnimation, System.Action<RedCrow.UI.UUIF.Core.PanelBase> initializer);
                    /*0x23caa98*/ void DeactivatePanel(string panelId, bool skipAnimation);
                    /*0x23ca2b0*/ RedCrow.UI.UUIF.Core.StatefulPanelManager.PanelRequest FindRequestByRequesterId(int requesterId, System.Collections.Generic.List<RedCrow.UI.UUIF.Core.StatefulPanelManager.PanelRequest> requests, ref bool isLastRequest);

                    class PanelRequest
                    {
                        /*0x10*/ int RequesterId;
                        /*0x18*/ RedCrow.UI.UUIF.Core.PanelPlacement Placement;
                        /*0x28*/ bool IsDesiredActive;

                        /*0x23ca388*/ PanelRequest(int requesterId, RedCrow.UI.UUIF.Core.PanelPlacement placement, bool isDesiredActive);
                    }
                }

                enum UIAnimationStateBasic
                {
                    Hidden = 0,
                    AnimatingIn = 1,
                    Shown = 2,
                    AnimatingOut = 3,
                }

                class UILayer : UnityEngine.MonoBehaviour, RedCrow.UI.UUIF.Core.IStringIdentifiable
                {
                    /*0x20*/ int <ActiveContentCount>k__BackingField;
                    /*0x24*/ bool ConstrainToSafeArea;
                    /*0x25*/ bool m_isInitForSafeArea;
                    /*0x26*/ bool m_isStretchedRect;
                    /*0x28*/ UnityEngine.Rect m_safeAreaOffsets;
                    /*0x38*/ UnityEngine.RectTransform m_rectTransform;
                    /*0x40*/ UnityEngine.RectTransform m_parentRectTransform;
                    /*0x48*/ RedCrow.UI.UUIF.Core.ScrimProviderBase m_scrimProvider;
                    /*0x50*/ System.Collections.Generic.Dictionary<int, RedCrow.UI.UUIF.Core.UILayer.ScrimUsageTracker> m_scrimTrackers;

                    /*0x23cbbb0*/ UILayer();
                    /*0x23cab24*/ int get_ActiveContentCount();
                    /*0x23cab2c*/ void set_ActiveContentCount(int value);
                    /*0x23cab34*/ void OnEnable();
                    /*0x23cad88*/ string GetStringId();
                    /*0x23cada8*/ void SetScrimProvider(RedCrow.UI.UUIF.Core.ScrimProviderBase provider);
                    /*0x23cb16c*/ void RegisterActiveContent(RedCrow.UI.UUIF.Core.LayerContent content);
                    /*0x23cb17c*/ void RegisterForScrim(int requestedScrimType, float requestedAnimationTime);
                    /*0x23cb374*/ void UnregisterActiveContent(RedCrow.UI.UUIF.Core.LayerContent content);
                    /*0x23cb384*/ void UnregisterForScrim(int requestedScrimType, float requestedAnimationTime);
                    /*0x23cb4d8*/ void AssignScrimToTracker(RedCrow.UI.UUIF.Core.UILayer.ScrimUsageTracker tracker, int requestedScrimType, float requestedAnimationTime);
                    /*0x23cb74c*/ void OnScrimAnimateOutComplete(RedCrow.UI.UUIF.Core.ScrimBase scrim);
                    /*0x23cb8e4*/ void RefreshSafeArea(UnityEngine.Rect offsets);
                    /*0x23cba48*/ bool HandleLayerEvent(int eventId, object[] eventParameters);

                    class ScrimUsageTracker
                    {
                        /*0x10*/ RedCrow.UI.UUIF.Core.ScrimBase Scrim;
                        /*0x18*/ int ActiveRequesterCount;

                        /*0x23cb36c*/ ScrimUsageTracker();
                    }
                }

                class UILayerManager
                {
                    /*0x10*/ string <DefaultLayerId>k__BackingField;
                    /*0x18*/ RedCrow.UI.UUIF.Core.UILayerManager.LayerChangeDelegate LayerUnregistered;
                    /*0x20*/ System.Collections.Generic.Dictionary<string, RedCrow.UI.UUIF.Core.UILayerManager.LayerInfo> m_layers;
                    /*0x28*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.UILayerManager.LayerInfo> m_sortedLayers;
                    /*0x30*/ RedCrow.UI.UUIF.Core.ScrimProviderBase m_scrimProvider;
                    /*0x38*/ RedCrow.UI.Utils.SafeAreaUtils.SafeAreaTracking m_safeAreaTracking;
                    /*0x3c*/ UnityEngine.Rect m_safeAreaOffsets;
                    /*0x4c*/ UnityEngine.ScreenOrientation m_screenOrientation;

                    /*0x23cbd88*/ UILayerManager();
                    /*0x23cbe8c*/ UILayerManager(RedCrow.UI.Utils.SafeAreaUtils.SafeAreaTracking safeAreaTracking);
                    /*0x23cbc40*/ string get_DefaultLayerId();
                    /*0x23cbc48*/ void set_DefaultLayerId(string value);
                    /*0x23cbc50*/ void add_LayerUnregistered(RedCrow.UI.UUIF.Core.UILayerManager.LayerChangeDelegate value);
                    /*0x23cbcec*/ void remove_LayerUnregistered(RedCrow.UI.UUIF.Core.UILayerManager.LayerChangeDelegate value);
                    /*0x23cbfdc*/ void RegisterLayer(RedCrow.UI.UUIF.Core.UILayer layer, bool isDefaultLayer);
                    /*0x23cc384*/ void UnregisterLayer(RedCrow.UI.UUIF.Core.UILayer layer);
                    /*0x23cc4bc*/ void Reset();
                    /*0x23cc4dc*/ void UnregisterAllLayers();
                    /*0x23cc788*/ void NotifyLayerMoved(RedCrow.UI.UUIF.Core.UILayer layer);
                    /*0x23cc848*/ void SetScrimProvider(RedCrow.UI.UUIF.Core.ScrimProviderBase scrimProvider);
                    /*0x23cca2c*/ void RegisterForScrim(string requestedScrimLayer, int requestedScrimType, float requestedAnimationTime);
                    /*0x23ccad0*/ void UnregisterForScrim(string requestedScrimLayer, int requestedScrimType, float requestedAnimationTime);
                    /*0x23c87ec*/ bool HasLayer(string layerId);
                    /*0x23ccb74*/ RedCrow.UI.UUIF.Core.UILayer GetLayer(string layerId);
                    /*0x23ccbe0*/ bool SetContentToDefaultLayer(RedCrow.UI.UUIF.Core.LayerContent content);
                    /*0x23c7af4*/ bool SetContentLayer(RedCrow.UI.UUIF.Core.LayerContent content, string layerId);
                    /*0x23ccc44*/ void Update();
                    /*0x23cbfbc*/ void CheckSafeArea();
                    /*0x23ccc8c*/ void RefreshSafeArea();
                    /*0x23ccf98*/ bool DispatchLayerEvent(int eventId, object[] eventParameters);
                    /*0x23cc2e0*/ void SortLayers();
                    /*0x23cd054*/ int LayerInfoSorter(RedCrow.UI.UUIF.Core.UILayerManager.LayerInfo layerA, RedCrow.UI.UUIF.Core.UILayerManager.LayerInfo layerB);

                    struct LayerInfo
                    {
                        /*0x10*/ RedCrow.UI.UUIF.Core.UILayer Layer;
                        /*0x18*/ int[] HierarchyIndices;
                    }

                    class LayerChangeDelegate : System.MulticastDelegate
                    {
                        /*0x23cd0e4*/ LayerChangeDelegate(object object, nint method);
                        /*0x23cd194*/ void Invoke(string layerId);
                        /*0x23cd1a8*/ System.IAsyncResult BeginInvoke(string layerId, System.AsyncCallback callback, object object);
                        /*0x23cd1c8*/ void EndInvoke(System.IAsyncResult result);
                    }
                }

                class UUIFAnimationEndstate : UnityEngine.StateMachineBehaviour
                {
                    /*0x18*/ RedCrow.UI.UUIF.Core.UUIFAnimationEndstate.AnimationType Type;
                    /*0x1c*/ bool m_hasSentEvent;
                    /*0x20*/ RedCrow.UI.UUIF.Core.HidableUIElement m_hidableElement;

                    /*0x23cd34c*/ UUIFAnimationEndstate();
                    /*0x23cd1d4*/ void OnStateEnter(UnityEngine.Animator animator, UnityEngine.AnimatorStateInfo stateInfo, int layerIndex);
                    /*0x23cd1dc*/ void OnStateUpdate(UnityEngine.Animator animator, UnityEngine.AnimatorStateInfo stateInfo, int layerIndex);

                    enum AnimationType
                    {
                        Show = 0,
                        Hide = 1,
                    }
                }

                class PanelResourceHandle : RedCrow.UI.UUIF.Core.IPanelResourceHandle
                {
                    /*0x10*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle _handle;

                    /*0x23cd354*/ PanelResourceHandle(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle);
                    /*0x23cd384*/ void ReleaseHandle();
                }

                namespace Util
                {
                    class CrossLayerAnchor : UnityEngine.MonoBehaviour
                    {
                        /*0x20*/ bool MatchTransform;
                        /*0x21*/ bool AdjustScaleInsteadOfRect;
                        /*0x22*/ bool MatchActive;
                        /*0x23*/ bool DestroyWhenAnchorPointIsDestroyed;
                        /*0x28*/ UnityEngine.GameObject ChildContent;
                        /*0x30*/ System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> AnchorPositionUpdated;
                        /*0x38*/ System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> AnchorRotationUpdated;
                        /*0x40*/ System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> AnchorScaleUpdated;
                        /*0x48*/ System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> AnchorRectUpdated;
                        /*0x50*/ RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint m_anchorPoint;
                        /*0x58*/ UnityEngine.RectTransform m_rectTransform;
                        /*0x60*/ RedCrow.UI.UUIF.Core.LayerContent m_containingLayerContent;
                        /*0x68*/ UnityEngine.RectTransform m_containingLayerRectTransform;
                        /*0x70*/ UnityEngine.Vector3 m_baseScale;
                        /*0x7c*/ UnityEngine.Vector3 m_scaleAdjustmentDueToRect;
                        /*0x88*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor.ParticleSystemTransform> m_particleSystemTransforms;
                        /*0x90*/ bool m_hasDetectedContainedParticleSystems;
                        /*0x94*/ UnityEngine.Vector2 m_originalRectSize;

                        /*0x23cf9e4*/ CrossLayerAnchor();
                        /*0x23cd524*/ bool get_ShouldMatchTransform();
                        /*0x23cd52c*/ void set_ShouldMatchTransform(bool value);
                        /*0x23cd7bc*/ bool get_ShouldMatchActive();
                        /*0x23cd7c4*/ void set_ShouldMatchActive(bool value);
                        /*0x23cd934*/ void add_AnchorPositionUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cd9e4*/ void remove_AnchorPositionUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cda94*/ void add_AnchorRotationUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cdb44*/ void remove_AnchorRotationUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cdbf4*/ void add_AnchorScaleUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cdca4*/ void remove_AnchorScaleUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cdd54*/ void add_AnchorRectUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cde04*/ void remove_AnchorRectUpdated(System.Action<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor> value);
                        /*0x23cdeb4*/ bool get_HasAnchorPoint();
                        /*0x23cdf14*/ RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint get_AnchorPoint();
                        /*0x23cdf1c*/ UnityEngine.RectTransform get_RectTransform();
                        /*0x23ce000*/ void Start();
                        /*0x23cdf34*/ void InitRectTransform();
                        /*0x23ce31c*/ void OnDestroy();
                        /*0x23ce5dc*/ UnityEngine.GameObject GetChildContent();
                        /*0x23ce5e4*/ void SetAnchorPoint(RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        /*0x23ce020*/ void Reorient();
                        /*0x23ce11c*/ void DetectContainedParticleSystems();
                        /*0x23ce320*/ void UnhookFromAnchorPoint();
                        /*0x23cf41c*/ bool GetLayerTransform();
                        /*0x23cf570*/ void OnAnchorPointPositionUpdated(UnityEngine.Vector2 normalizedPosition, float relativeZPosition, UnityEngine.Vector2 pivotPoint);
                        /*0x23cf6a8*/ void OnAnchorPointRotationUpdated(UnityEngine.Vector3 relativeEulerAngles);
                        /*0x23cf74c*/ void OnAnchorPointScaleUpdated(UnityEngine.Vector3 relativeScale);
                        /*0x23cf7e0*/ void OnAnchorPointRectUpdated(UnityEngine.Vector2 anchorPointRectSize);
                        /*0x23cee6c*/ void ApplyScale();
                        /*0x23cf8cc*/ void OnAnchorPointEnabled();
                        /*0x23cf914*/ void OnAnchorPointDisabled();
                        /*0x23cf95c*/ void OnAnchorPointDestroyed();
                        /*0x23cd548*/ void OnMatchTransformSettingChanged();
                        /*0x23cd7e0*/ void OnMatchActiveSettingChanged();

                        struct ParticleSystemTransform
                        {
                            /*0x10*/ UnityEngine.Transform ParticleTransform;
                            /*0x18*/ UnityEngine.Vector3 OriginalScale;
                        }
                    }

                    class CrossLayerAnchorManager : RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorManager
                    {
                        /*0x10*/ System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> AnchorPointRegistered;
                        /*0x18*/ System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> AnchorPointUnregistered;
                        /*0x20*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint>> m_activeNamedAnchorPoints;
                        /*0x28*/ System.Collections.Generic.Dictionary<string, UnityEngine.GameObject> m_activeDynamicAnchors;
                        /*0x30*/ RedCrow.UI.UUIF.Core.UILayerManager m_layerManager;
                        /*0x38*/ RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorProvider m_anchorProvider;
                        /*0x40*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, RedCrow.UI.UUIF.Core.Util.DynamicAnchorInstance>> m_activeAnchorRequests;

                        /*0x23cfd24*/ CrossLayerAnchorManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager);
                        /*0x23cfe68*/ CrossLayerAnchorManager(RedCrow.UI.UUIF.Core.UILayerManager layerManager, RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorProvider anchorProvider);
                        /*0x23cfa64*/ void add_AnchorPointRegistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x23cfb14*/ void remove_AnchorPointRegistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x23cfbc4*/ void add_AnchorPointUnregistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x23cfc74*/ void remove_AnchorPointUnregistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x23cffc8*/ void RegisterDynamicAnchorProvider(RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorProvider anchorProvider);
                        /*0x23cffd0*/ void RegisterNamedAnchorPoint(string name, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        /*0x23d0128*/ void UnregisterNamedAnchorPoint(string name, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        /*0x23d01e8*/ bool TryGetNamedAnchorPoint(string name, ref RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        /*0x23d02c8*/ int RequestDynamicAnchor(int contentType, string contentId, string layerId, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint, int requesterId);
                        /*0x23d0638*/ void ReleaseDynamicAnchor(int requesterId, int requestId);
                        /*0x23d07a0*/ void ReleaseDynamicAnchorsForRequester(int requesterId);
                        /*0x23d0a64*/ void ResetDynamicAnchors();

                        class <>c__DisplayClass17_0
                        {
                            /*0x10*/ RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorManager <>4__this;
                            /*0x18*/ int requesterId;
                            /*0x20*/ string layerId;
                            /*0x28*/ RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint;

                            /*0x23d05a4*/ <>c__DisplayClass17_0();
                            /*0x23d0ee8*/ void <RequestDynamicAnchor>b__0(RedCrow.UI.UUIF.Core.Util.DynamicAnchorInstance anchorInstance);
                        }
                    }

                    class CrossLayerAnchorPoint : UnityEngine.MonoBehaviour
                    {
                        /*0x20*/ RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint.AnchorPointPositionDelegate AnchorPointPositionUpdated;
                        /*0x28*/ System.Action<UnityEngine.Vector3> AnchorPointRotationUpdated;
                        /*0x30*/ System.Action<UnityEngine.Vector3> AnchorPointScaleUpdated;
                        /*0x38*/ System.Action<UnityEngine.Vector2> AnchorPointRectUpdated;
                        /*0x40*/ System.Action AnchorPointEnabled;
                        /*0x48*/ System.Action AnchorPointDisabled;
                        /*0x50*/ System.Action AnchorPointDestroyed;
                        /*0x58*/ UnityEngine.RectTransform m_rectTransform;
                        /*0x60*/ RedCrow.UI.UUIF.Core.LayerContent m_containingLayerContent;
                        /*0x68*/ UnityEngine.RectTransform m_containingLayerRectTransform;
                        /*0x70*/ bool m_refreshRequested;
                        /*0x74*/ UnityEngine.Vector3 m_currentRelativePosition;
                        /*0x80*/ UnityEngine.Vector3 m_currentRelativeEulerAngles;
                        /*0x8c*/ UnityEngine.Vector3 m_currentRelativeScale;
                        /*0x98*/ UnityEngine.Vector2 m_currentRectSize;

                        /*0x23d1a5c*/ CrossLayerAnchorPoint();
                        /*0x23ce99c*/ void add_AnchorPointPositionUpdated(RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint.AnchorPointPositionDelegate value);
                        /*0x23cef9c*/ void remove_AnchorPointPositionUpdated(RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint.AnchorPointPositionDelegate value);
                        /*0x23cea38*/ void add_AnchorPointRotationUpdated(System.Action<UnityEngine.Vector3> value);
                        /*0x23cf038*/ void remove_AnchorPointRotationUpdated(System.Action<UnityEngine.Vector3> value);
                        /*0x23ceae8*/ void add_AnchorPointScaleUpdated(System.Action<UnityEngine.Vector3> value);
                        /*0x23cf0e8*/ void remove_AnchorPointScaleUpdated(System.Action<UnityEngine.Vector3> value);
                        /*0x23ceb98*/ void add_AnchorPointRectUpdated(System.Action<UnityEngine.Vector2> value);
                        /*0x23cf198*/ void remove_AnchorPointRectUpdated(System.Action<UnityEngine.Vector2> value);
                        /*0x23cec48*/ void add_AnchorPointEnabled(System.Action value);
                        /*0x23cf248*/ void remove_AnchorPointEnabled(System.Action value);
                        /*0x23cece4*/ void add_AnchorPointDisabled(System.Action value);
                        /*0x23cf2e4*/ void remove_AnchorPointDisabled(System.Action value);
                        /*0x23ced80*/ void add_AnchorPointDestroyed(System.Action value);
                        /*0x23cf380*/ void remove_AnchorPointDestroyed(System.Action value);
                        /*0x23d1094*/ void Start();
                        /*0x23d110c*/ void Reorient();
                        /*0x23d1274*/ void LateUpdate();
                        /*0x23cee1c*/ void RequestRefresh(bool immediate);
                        /*0x23d1240*/ void SendTransformEvents(bool evenIfUnchanged);
                        /*0x23d1684*/ bool GetLayerTransform();
                        /*0x23d17d8*/ UnityEngine.Vector3 GetLocalPositionRelativeToLayer();
                        /*0x23d1834*/ UnityEngine.Vector3 CalculateLocalPositionRelativeToLayer();
                        /*0x23d1868*/ UnityEngine.Vector3 GetEulerAnglesRelativeToLayer();
                        /*0x23d18c4*/ UnityEngine.Vector3 CalculateEulerAnglesRelativeToLayer();
                        /*0x23d1920*/ UnityEngine.Vector3 GetScaleRelativeToLayer();
                        /*0x23d197c*/ UnityEngine.Vector3 CalculateScaleRelativeToLayer();
                        /*0x23d1400*/ void SendPositionUpdate(bool evenIfUnchanged);
                        /*0x23d1534*/ void SendRotationUpdate(bool evenIfUnchanged);
                        /*0x23d15dc*/ void SendScaleUpdate(bool evenIfUnchanged);
                        /*0x23d1328*/ void SendRectUpdate(bool evenIfUnchanged);
                        /*0x23d13b0*/ void SendActiveUpdate();
                        /*0x23d1a08*/ void OnEnable();
                        /*0x23d1a24*/ void OnDisable();
                        /*0x23d1a40*/ void OnDestroy();

                        class AnchorPointPositionDelegate : System.MulticastDelegate
                        {
                            /*0x23ce8fc*/ AnchorPointPositionDelegate(object object, nint method);
                            /*0x23d1a64*/ void Invoke(UnityEngine.Vector2 normalizedPosition, float relativeZPosition, UnityEngine.Vector2 pivotPoint);
                            /*0x23d1a78*/ System.IAsyncResult BeginInvoke(UnityEngine.Vector2 normalizedPosition, float relativeZPosition, UnityEngine.Vector2 pivotPoint, System.AsyncCallback callback, object object);
                            /*0x23d1b38*/ void EndInvoke(System.IAsyncResult result);
                        }
                    }

                    class DynamicAnchorInstance
                    {
                        /*0x10*/ RedCrow.UI.UUIF.Core.LayerContent Content;
                        /*0x18*/ RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor Anchor;
                        /*0x20*/ int RequestId;

                        /*0x23d1b44*/ DynamicAnchorInstance(int requestId, RedCrow.UI.UUIF.Core.LayerContent content, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor anchor);
                    }

                    class DynamicAnchorPointBase : RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint
                    {
                        /*0xa0*/ RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorManager m_anchorManager;
                        /*0xa8*/ bool m_hasAnchorRequest;
                        /*0xac*/ int m_anchorRequestId;

                        /*0x23d1d78*/ DynamicAnchorPointBase();
                        /*0x23d1b9c*/ void SetAnchorManager(RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorManager anchorManager);
                        /*0x23d1ba4*/ void RequestDynamicAnchor(int contentType, string contentId, string layerId);
                        /*0x23d1ca0*/ void ReleaseDynamicAnchor();
                    }

                    struct DynamicAnchorRequest
                    {
                        static /*0x0*/ int m_nextRequestId;
                        /*0x10*/ int ContentType;
                        /*0x18*/ string ContentId;
                        /*0x20*/ int RequestId;

                        static /*0x23d1d80*/ DynamicAnchorRequest();
                        /*0x23d05ac*/ DynamicAnchorRequest(int contentType, string contentId);
                    }

                    interface ICrossLayerAnchorManager
                    {
                        /*0x1f30ebc*/ void add_AnchorPointRegistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x1f30ebc*/ void remove_AnchorPointRegistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x1f30ebc*/ void add_AnchorPointUnregistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x1f30ebc*/ void remove_AnchorPointUnregistered(System.Action<string, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint> value);
                        /*0x1f30ff0*/ void RegisterNamedAnchorPoint(string name, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        /*0x1f30ff0*/ void UnregisterNamedAnchorPoint(string name, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        /*0x1f2ff00*/ bool TryGetNamedAnchorPoint(string name, ref RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        int RequestDynamicAnchor(int contentType, string contentId, string layerId, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint, int requesterId);
                        /*0x1f30bb4*/ void ReleaseDynamicAnchor(int requesterId, int requestId);
                        /*0x1f30b78*/ void ReleaseDynamicAnchorsForRequester(int requesterId);
                        /*0x1f309e4*/ void ResetDynamicAnchors();
                        /*0x1f30ebc*/ void RegisterDynamicAnchorProvider(RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorProvider anchorProvider);
                    }

                    interface ICrossLayerAnchorProvider
                    {
                        void FetchDynamicAnchor(RedCrow.UI.UUIF.Core.Util.DynamicAnchorRequest request, System.Action<RedCrow.UI.UUIF.Core.Util.DynamicAnchorInstance> callback);
                        /*0x1f30ebc*/ void ReleaseDynamicAnchor(RedCrow.UI.UUIF.Core.Util.DynamicAnchorInstance anchorInstance);
                    }

                    class NamedCrossLayerAnchorBase : RedCrow.UI.UUIF.Core.Util.CrossLayerAnchor
                    {
                        /*0xa0*/ string AnchorPointName;
                        /*0xa8*/ bool m_isUsingNamedAnchorPoint;
                        /*0xa9*/ bool m_isHookedIntoAnchorManager;

                        /*0x23d2428*/ NamedCrossLayerAnchorBase();
                        /*0x1f30214*/ RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorManager get_AnchorManager();
                        /*0x23d1dcc*/ void Awake();
                        /*0x23d1df4*/ void OnEnable();
                        /*0x23d1ff4*/ void OnDisable();
                        /*0x23d21dc*/ void OnDestroy();
                        /*0x23d1e28*/ void StartWatchingForAnchorPoint();
                        /*0x23d21f4*/ bool FetchAnchorPoint();
                        /*0x23d2004*/ void StopWatchingForAnchorPoint();
                        /*0x23d22dc*/ void OnNamedAnchorPointRegistered(string anchorPointName, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                        /*0x23d2384*/ void OnNamedAnchorPointUnregistered(string anchorPointName, RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint anchorPoint);
                    }

                    class NamedCrossLayerAnchorPointBase : RedCrow.UI.UUIF.Core.Util.CrossLayerAnchorPoint
                    {
                        /*0xa0*/ string AnchorPointName;
                        /*0xa8*/ bool StayRegisteredWhenInactive;
                        /*0xa9*/ bool m_isRegistered;

                        /*0x23d273c*/ NamedCrossLayerAnchorPointBase();
                        /*0x1f30214*/ RedCrow.UI.UUIF.Core.Util.ICrossLayerAnchorManager get_AnchorManager();
                        /*0x23d242c*/ void Start();
                        /*0x23d2524*/ void OnEnable();
                        /*0x23d2550*/ void OnDisable();
                        /*0x23d2454*/ void Register();
                        /*0x23d258c*/ void Unregister();
                        /*0x23d265c*/ void OnDestroy();
                    }

                    class UUIFGeneralUtils
                    {
                        static /*0x23cc1b4*/ int[] GetHierarchyIndices(UnityEngine.Transform transform);
                    }

                    class UUIFLogUtils
                    {
                        static /*0x23d2744*/ string GameObjectDescription(UnityEngine.GameObject uiGameObject);
                        static /*0x1f32888*/ string BinderDescription<T>(RedCrow.UI.UUIF.DataProviding.Binders.SmartBinder<T> binder, RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot dataKey);
                    }
                }

                namespace Layout
                {
                    interface IUUIFLayoutElement
                    {
                        /*0x1f30ebc*/ void SetChangeHandler(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElementChangeHandler handler);
                        /*0x1f309e4*/ void ClearChangeHandler();
                        /*0x1f30804*/ float GetWidth();
                        /*0x1f30804*/ float GetHeight();
                        /*0x1f30804*/ float get_minWidth();
                        /*0x1f30804*/ float get_preferredWidth();
                        /*0x1f30804*/ float get_flexibleWidth();
                        /*0x1f30804*/ float get_minHeight();
                        /*0x1f30804*/ float get_preferredHeight();
                        /*0x1f30804*/ float get_flexibleHeight();
                        /*0x1f30214*/ UnityEngine.GameObject get_GameObject();
                        /*0x1f30214*/ UnityEngine.RectTransform get_RectTransform();
                    }

                    interface IUUIFLayoutElementChangeHandler
                    {
                        void OnWatchedElementWidthChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                        void OnWatchedElementHeightChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                        void OnWatchedElementActiveChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, bool isActive);
                        /*0x1f30ebc*/ void OnWatchedElementDestroyed(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                    }

                    interface IUUIFLayoutElementReferencer
                    {
                        /*0x1f30214*/ RedCrow.UI.UUIF.Core.Layout.UUIFLayoutElementBase get_UUIFLayoutElement();
                        /*0x1f30ebc*/ void set_UUIFLayoutElement(RedCrow.UI.UUIF.Core.Layout.UUIFLayoutElementBase value);
                    }

                    interface IUUIFLinearLayoutGroup
                    {
                        /*0x1f30804*/ float get_Spacing();
                        void set_Spacing(float value);
                    }

                    class LayoutProperties
                    {
                        /*0x10*/ float MinWidth;
                        /*0x14*/ float MinHeight;
                        /*0x18*/ float PreferredWidth;
                        /*0x1c*/ float PreferredHeight;
                        /*0x20*/ float FlexibleWidth;
                        /*0x24*/ float FlexibleHeight;
                        /*0x28*/ int LayoutPriority;

                        /*0x23d2898*/ LayoutProperties();
                    }

                    class UUIFLayoutElementBase : UnityEngine.MonoBehaviour, RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement
                    {
                        /*0x20*/ RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElementChangeHandler m_changeHandler;
                        /*0x28*/ UnityEngine.RectTransform m_cachedRectTransform;

                        /*0x23d2e90*/ UUIFLayoutElementBase();
                        /*0x23d28b8*/ float GetWidth();
                        /*0x23d2998*/ float GetHeight();
                        /*0x23d29bc*/ void SetChangeHandler(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElementChangeHandler handler);
                        /*0x23d29c4*/ void ClearChangeHandler();
                        /*0x1f30804*/ float get_minWidth();
                        void set_minWidth(float value);
                        /*0x1f30804*/ float get_preferredWidth();
                        void set_preferredWidth(float value);
                        /*0x1f30804*/ float get_flexibleWidth();
                        void set_flexibleWidth(float value);
                        /*0x1f30804*/ float get_minHeight();
                        void set_minHeight(float value);
                        /*0x1f30804*/ float get_preferredHeight();
                        void set_preferredHeight(float value);
                        /*0x1f30804*/ float get_flexibleHeight();
                        void set_flexibleHeight(float value);
                        /*0x23d29d0*/ UnityEngine.GameObject get_GameObject();
                        /*0x23d29d8*/ UnityEngine.RectTransform get_RectTransform();
                        /*0x23d28dc*/ UnityEngine.RectTransform GetCachedRectTransform();
                        /*0x23d29dc*/ void OnEnable();
                        /*0x23d2a90*/ void OnDisable();
                        /*0x23d2b44*/ void OnDestroyed();
                        /*0x23d2bf4*/ void OnThisElementWidthChanged(float newValue);
                        /*0x23d2cb4*/ void OnThisElementHeightChanged(float newValue);
                        /*0x23d2d78*/ bool SetLayoutProperty(ref float property, float value, bool isWidth);
                        /*0x23d2e48*/ float GetRectTransformWidth();
                        /*0x23d2e6c*/ float GetRectTransformHeight();
                    }

                    class UUIFLayoutGroup : RedCrow.UI.UUIF.Core.Layout.UUIFLayoutElementBase, RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElementChangeHandler
                    {
                        /*0x30*/ bool AutomaticallyDetectChildElements;
                        /*0x38*/ UnityEngine.GameObject[] StaticLayoutElements;
                        /*0x40*/ RedCrow.UI.UUIF.Core.Layout.UUIFLayoutElementBase[] StaticElements;
                        /*0x48*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> m_initializedStaticLayoutElements;
                        /*0x50*/ UnityEngine.RectOffset Padding;
                        /*0x58*/ UnityEngine.TextAnchor ChildAlignment;
                        /*0x60*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> m_managedLayoutElements;
                        /*0x68*/ bool m_isLayoutDirty;
                        /*0x69*/ bool m_areChildrenDirty;
                        /*0x6c*/ float m_cachedRectWidth;
                        /*0x70*/ float m_cachedRectHeight;
                        /*0x74*/ UnityEngine.Rect m_paddedRect;
                        /*0x84*/ UnityEngine.Vector2 m_modelItemPivotPoint;

                        /*0x23d4028*/ UUIFLayoutGroup();
                        /*0x23d2e98*/ int get_Count();
                        /*0x23d2ee0*/ void Awake();
                        /*0x23d2f58*/ void InitializeFromConfiguration();
                        /*0x23d2f04*/ void RefreshCachedSize();
                        /*0x23d30f0*/ void CalculatePaddedRect(UnityEngine.Rect transformRect);
                        /*0x23d3194*/ void RefreshLayoutImmediately();
                        /*0x23d31c0*/ void LateUpdate();
                        /*0x23d32f4*/ void OnTransformChildrenChanged();
                        /*0x23d3300*/ void Add(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d3380*/ void AddRange(System.Collections.Generic.IList<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        /*0x23d3500*/ void Insert(int index, RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d360c*/ void InsertOrReposition(int index, RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d3580*/ void DoInsert(int index, RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d36f8*/ bool Remove(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d3780*/ void Remove(System.Collections.Generic.IList<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        /*0x23d3910*/ void RemoveFromIndex(int index);
                        /*0x23d3a04*/ void RemoveDynamicElements();
                        /*0x23d3bac*/ void RemoveAllElements();
                        /*0x23d3af8*/ bool IsStaticElement(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d337c*/ void ValidateElementForAdd(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d3200*/ void DetectChildGameObjects();
                        /*0x23d3d24*/ void OnManagedElementAdded(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d3dc8*/ void OnManagedElementRemoved(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        /*0x23d3e68*/ void OnWatchedElementActiveChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, bool isActive);
                        /*0x23d3e74*/ void OnWatchedElementDestroyed(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        void OnWatchedElementWidthChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                        void OnWatchedElementHeightChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                        /*0x1f309e4*/ void RefreshLayout();
                        UnityEngine.Vector2 GetModelItemPivotPoint();
                        /*0x23d30e4*/ void SetDirty();
                        /*0x23d3e78*/ UnityEngine.Vector2 CalculateChildAlignmentPoint();
                        /*0x23d3fa0*/ void SetChildPosition(UnityEngine.RectTransform elementTransform, UnityEngine.Vector2 position);
                    }

                    class UUIFLayoutUtil
                    {
                        static float PIVOT_LEFT = 0;
                        static float PIVOT_CENTER = 0.5;
                        static float PIVOT_RIGHT = 1;
                        static float PIVOT_BOTTOM = 0;
                        static float PIVOT_MIDDLE = 0.5;
                        static float PIVOT_TOP = 1;

                        static /*0x23d40b8*/ UnityEngine.Vector2 CalculateItemPivotPointForVerticalList(UnityEngine.TextAnchor childAlignment);
                        static /*0x23d40ec*/ UnityEngine.Vector2 CalculateItemPivotPointForHorizontalList(UnityEngine.TextAnchor childAlignment);
                        static /*0x23d4120*/ float CalculateTotalMinWidthOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements, float spacing);
                        static /*0x23d4430*/ float CalculateTotalMinHeightOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements, float spacing);
                        static /*0x23d44bc*/ float CalculateTotalPreferredWidthOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements, float spacing);
                        static /*0x23d4548*/ float CalculateTotalPreferredHeightOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements, float spacing);
                        static /*0x23d45d4*/ float CalculateTotalFlexibleWidthOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        static /*0x23d4654*/ float CalculateTotalFlexibleHeightOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        static /*0x23d46d4*/ float CalculateMaxMinWidthOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        static /*0x23d48a0*/ float CalculateMaxMinHeightOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        static /*0x23d491c*/ float CalculateMaxPreferredWidthOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        static /*0x23d4998*/ float CalculateMaxPreferredHeightOfElements(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements);
                        static /*0x23d42b4*/ float CalculateTotal(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements, RedCrow.UI.UUIF.Core.Layout.UUIFLayoutUtil.PropertyAccessor accessor, float spacing);
                        static /*0x23d4750*/ float CalculateMax(System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement> elements, RedCrow.UI.UUIF.Core.Layout.UUIFLayoutUtil.PropertyAccessor accessor);
                        static /*0x23d4a14*/ float GetPreferredWidth(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        static /*0x23d4ab4*/ float GetPreferredHeight(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        static /*0x23d4b54*/ float GetMinWidth(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        static /*0x23d4bf4*/ float GetMinHeight(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        static /*0x23d4c94*/ float GetFlexibleWidth(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                        static /*0x23d4da8*/ float GetFlexibleHeight(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);

                        class PropertyAccessor : System.MulticastDelegate
                        {
                            /*0x23d41ac*/ PropertyAccessor(object object, nint method);
                            /*0x23d4ebc*/ float Invoke(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d4ed0*/ System.IAsyncResult BeginInvoke(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, System.AsyncCallback callback, object object);
                            /*0x23d4ef0*/ float EndInvoke(System.IAsyncResult result);
                        }
                    }

                    class UUIFNonGroupLayoutElementBase : RedCrow.UI.UUIF.Core.Layout.UUIFLayoutElementBase
                    {
                        /*0x23d4f18*/ UUIFNonGroupLayoutElementBase();
                    }

                    namespace Middleweight
                    {
                        class MiddleweightHorizontalLayoutGroup : RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup
                        {
                            /*0xa8*/ float m_Spacing;
                            /*0xac*/ bool m_ControlChildHeight;
                            /*0xad*/ bool m_ChildForceExpandWidth;
                            /*0xae*/ bool m_ChildForceExpandHeight;

                            /*0x23d5d74*/ MiddleweightHorizontalLayoutGroup();
                            /*0x23d4f20*/ float get_Spacing();
                            /*0x23d4f28*/ void set_Spacing(float value);
                            /*0x23d4f30*/ void RefreshLayout(RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x23d56a0*/ float CalculatePreferredBase(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d5750*/ float CalculatePreferredProportion(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d5874*/ float CalculateFlexibleBase(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d5924*/ float CalculateFlexibleProportion(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d5a38*/ void UpdateForMinSize(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup.ElementSizeInfo sizeInfo);
                            /*0x23d5b1c*/ float CalculateElementSizeAcrossAxis(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d5cd0*/ float GetTotalContentMinWidth();
                            /*0x23d5ce0*/ float GetTotalContentMinHeight();
                            /*0x23d5ce8*/ float GetTotalContentPreferredWidth();
                            /*0x23d5cf8*/ float GetTotalContentPreferredHeight();
                            /*0x23d5d00*/ float GetFlexibleWidth();
                            /*0x23d5d58*/ float GetFlexibleHeight();
                            /*0x23d5d60*/ void OnWatchedElementWidthChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d5d6c*/ UnityEngine.Vector2 GetModelItemPivotPoint();
                        }

                        class MiddleweightHorizontalOrVerticalLayoutGroup : RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightLayoutGroup, RedCrow.UI.UUIF.Core.Layout.IUUIFLinearLayoutGroup
                        {
                            /*0xa0*/ System.Collections.Generic.Dictionary<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement, RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup.ElementSizeInfo> m_elementSizeInfo;

                            /*0x23d5d78*/ MiddleweightHorizontalOrVerticalLayoutGroup();
                            /*0x1f30804*/ float get_Spacing();
                            void set_Spacing(float value);
                            /*0x23d5398*/ void LayoutItemsFromPoint(UnityEngine.Vector2 startingPoint, bool isHorizontal, bool workBackwards, float spacing);
                            /*0x23d5088*/ float CalculateElementSizes(float availableSizeAlongAxis, float minSizeAlongAxis, float preferredSizeAlongAxis, bool forceExpandAlongAxis, System.Func<System.Collections.Generic.List<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement>, float> totalFlexibleSizeCalculator);
                            /*0x1f30ff0*/ void UpdateForMinSize(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup.ElementSizeInfo sizeInfo);
                            float CalculatePreferredBase(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            float CalculatePreferredProportion(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            float CalculateFlexibleBase(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            float CalculateFlexibleProportion(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            float CalculateElementSizeAcrossAxis(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d5e04*/ void PopulateElementSizes(System.Action<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement, RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup.ElementSizeInfo> updateFunction);
                            /*0x23d5f70*/ void OnManagedElementRemoved(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);

                            class ElementSizeInfo
                            {
                                /*0x10*/ float SizeAlongAxis;
                                /*0x14*/ float SizeAcrossAxis;

                                /*0x23d5f68*/ ElementSizeInfo();
                            }

                            class <>c__DisplayClass6_0
                            {
                                /*0x10*/ System.Func<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement, float> baseSizeCalculation;
                                /*0x18*/ bool distributeAdditionalSpace;
                                /*0x1c*/ float distributableSize;
                                /*0x20*/ System.Func<RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement, float> proportionalSizeCalculation;
                                /*0x28*/ float totalProportions;
                                /*0x30*/ RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup <>4__this;

                                /*0x23d5dfc*/ <>c__DisplayClass6_0();
                                /*0x23d5fd4*/ void <CalculateElementSizes>b__0(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup.ElementSizeInfo sizeInfo);
                            }
                        }

                        class MiddleweightLayoutGroup : RedCrow.UI.UUIF.Core.Layout.UUIFLayoutGroup, UnityEngine.UI.ILayoutElement
                        {
                            /*0x8c*/ UnityEngine.UI.ContentSizeFitter.FitMode HorizontalFit;
                            /*0x90*/ UnityEngine.UI.ContentSizeFitter.FitMode VerticalFit;
                            /*0x94*/ bool m_isRefreshingLayout;
                            /*0x98*/ RedCrow.UI.UUIF.Core.Layout.LayoutProperties m_layoutProperties;

                            /*0x23d5fd0*/ MiddleweightLayoutGroup();
                            /*0x23d6094*/ void RefreshLayout();
                            /*0x23d6390*/ void CalculateLayoutProperties();
                            /*0x23d64e4*/ void PreRefreshLayout();
                            /*0x1f30ebc*/ void RefreshLayout(RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x1f30804*/ float GetTotalContentMinWidth();
                            /*0x1f30804*/ float GetTotalContentMinHeight();
                            /*0x1f30804*/ float GetTotalContentPreferredWidth();
                            /*0x1f30804*/ float GetTotalContentPreferredHeight();
                            /*0x1f30804*/ float GetFlexibleWidth();
                            /*0x1f30804*/ float GetFlexibleHeight();
                            /*0x23d64e8*/ void OnWatchedElementWidthChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d64fc*/ void OnWatchedElementHeightChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d6510*/ void OnRectTransformDimensionsChange();
                            /*0x23d6648*/ void InitLayoutProperties();
                            /*0x23d66d4*/ float get_preferredWidth();
                            /*0x23d66f0*/ void set_preferredWidth(float value);
                            /*0x23d6720*/ float get_preferredHeight();
                            /*0x23d673c*/ void set_preferredHeight(float value);
                            /*0x23d676c*/ float get_minHeight();
                            /*0x23d6784*/ void set_minHeight(float value);
                            /*0x23d67b4*/ float get_minWidth();
                            /*0x23d67cc*/ void set_minWidth(float value);
                            /*0x23d67fc*/ float get_flexibleHeight();
                            /*0x23d6814*/ void set_flexibleHeight(float value);
                            /*0x23d6844*/ float get_flexibleWidth();
                            /*0x23d685c*/ void set_flexibleWidth(float value);
                            /*0x23d688c*/ void CalculateLayoutInputHorizontal();
                            /*0x23d6890*/ void CalculateLayoutInputVertical();
                            /*0x23d6894*/ int get_layoutPriority();

                            class IntermediateLayoutCalculations
                            {
                                /*0x10*/ UnityEngine.Vector2 ChildAlignmentPoint;

                                /*0x23d64dc*/ IntermediateLayoutCalculations();
                            }
                        }

                        class MiddleweightVerticalLayoutGroup : RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup
                        {
                            /*0xa8*/ float m_Spacing;
                            /*0xac*/ bool m_ControlChildWidth;
                            /*0xad*/ bool m_ChildForceExpandWidth;
                            /*0xae*/ bool m_ChildForceExpandHeight;

                            /*0x23d70b0*/ MiddleweightVerticalLayoutGroup();
                            /*0x23d689c*/ float get_Spacing();
                            /*0x23d68a4*/ void set_Spacing(float value);
                            /*0x23d68ac*/ void RefreshLayout(RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x23d69dc*/ float CalculatePreferredBase(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d6a8c*/ float CalculatePreferredProportion(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d6bb0*/ float CalculateFlexibleBase(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d6c60*/ float CalculateFlexibleProportion(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d6d74*/ void UpdateForMinSize(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, RedCrow.UI.UUIF.Core.Layout.Middleweight.MiddleweightHorizontalOrVerticalLayoutGroup.ElementSizeInfo sizeInfo);
                            /*0x23d6e58*/ float CalculateElementSizeAcrossAxis(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element);
                            /*0x23d700c*/ float GetTotalContentMinWidth();
                            /*0x23d7014*/ float GetTotalContentMinHeight();
                            /*0x23d7024*/ float GetTotalContentPreferredWidth();
                            /*0x23d702c*/ float GetTotalContentPreferredHeight();
                            /*0x23d703c*/ float GetFlexibleWidth();
                            /*0x23d7044*/ float GetFlexibleHeight();
                            /*0x23d709c*/ void OnWatchedElementHeightChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d70a8*/ UnityEngine.Vector2 GetModelItemPivotPoint();
                        }

                        namespace Elements
                        {
                            class MiddleweightLayoutElement : RedCrow.UI.UUIF.Core.Layout.UUIFNonGroupLayoutElementBase
                            {
                                /*0x30*/ bool FallbackOnUnityLayoutElement;
                                /*0x34*/ float m_MinWidth;
                                /*0x38*/ float m_MinHeight;
                                /*0x3c*/ float m_PreferredWidth;
                                /*0x40*/ float m_PreferredHeight;
                                /*0x44*/ float m_FlexibleWidth;
                                /*0x48*/ float m_FlexibleHeight;
                                /*0x4c*/ float m_cachedRectWidth;
                                /*0x50*/ float m_cachedRectHeight;
                                /*0x58*/ UnityEngine.UI.ILayoutElement m_unityLayoutElement;

                                /*0x23d7620*/ MiddleweightLayoutElement();
                                /*0x23d70b4*/ float get_minWidth();
                                /*0x23d716c*/ void set_minWidth(float value);
                                /*0x23d7178*/ float get_minHeight();
                                /*0x23d7230*/ void set_minHeight(float value);
                                /*0x23d723c*/ float get_preferredWidth();
                                /*0x23d72f4*/ void set_preferredWidth(float value);
                                /*0x23d7300*/ float get_preferredHeight();
                                /*0x23d73b8*/ void set_preferredHeight(float value);
                                /*0x23d73c4*/ float get_flexibleWidth();
                                /*0x23d747c*/ void set_flexibleWidth(float value);
                                /*0x23d7488*/ float get_flexibleHeight();
                                /*0x23d7540*/ void set_flexibleHeight(float value);
                                /*0x23d754c*/ void Awake();
                                /*0x23d75cc*/ void RefreshCachedSize();
                                /*0x23d7610*/ float GetWidth();
                                /*0x23d7618*/ float GetHeight();
                            }
                        }
                    }

                    namespace Lightweight
                    {
                        class LightweightGridLayoutGroup : RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup
                        {
                            /*0x98*/ UnityEngine.Vector2 CellSize;
                            /*0xa0*/ UnityEngine.Vector2 Spacing;
                            /*0xa8*/ UnityEngine.UI.GridLayoutGroup.Corner StartCorner;
                            /*0xac*/ UnityEngine.UI.GridLayoutGroup.Axis StartAxis;
                            /*0xb0*/ RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightGridLayoutGroup.ConstraintSettings ConstraintSetting;
                            /*0xb8*/ int m_numRows;
                            /*0xbc*/ int m_numColumns;
                            /*0xc0*/ UnityEngine.Vector2 m_cellSizeWithSpacing;
                            /*0xc8*/ UnityEngine.Vector2 m_advanceCellVector;
                            /*0xd0*/ UnityEngine.Vector2 m_advanceLineVector;

                            /*0x23d7e60*/ LightweightGridLayoutGroup();
                            /*0x23d7638*/ void InitializeFromConfiguration();
                            /*0x23d7718*/ void RefreshLayout(RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x23d78d8*/ UnityEngine.Vector2 CalculateStartingPoint(RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup.IntermediateLayoutCalculations intCalcs);
                            /*0x23d7a50*/ float GetTotalContentWidth(RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x23d7a88*/ float GetTotalContentHeight(RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x23d765c*/ void InitializeAdvancementVectors();
                            /*0x23d7ac0*/ float GetTotalContentWidth();
                            /*0x23d7ae0*/ float GetTotalContentHeight();
                            /*0x23d7b00*/ void PreRefreshLayout();
                            /*0x23d7b18*/ void CalculateNumRowsAndColumns();
                            /*0x23d7e2c*/ UnityEngine.Vector2 GetModelItemPivotPoint();

                            struct ConstraintSettings
                            {
                                /*0x10*/ UnityEngine.UI.GridLayoutGroup.Constraint Constraint;
                                /*0x14*/ int ConstraintCount;
                            }
                        }

                        class LightweightHorizontalLayoutGroup : RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightHorizontalOrVerticalLayoutGroup
                        {
                            /*0x98*/ float m_Spacing;

                            /*0x23d8294*/ LightweightHorizontalLayoutGroup();
                            /*0x23d7ec4*/ float get_Spacing();
                            /*0x23d7ecc*/ void set_Spacing(float value);
                            /*0x23d7ed4*/ void RefreshLayout(RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x23d8268*/ float GetTotalContentWidth();
                            /*0x23d8278*/ float GetTotalContentHeight();
                            /*0x23d8280*/ void OnWatchedElementWidthChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d828c*/ UnityEngine.Vector2 GetModelItemPivotPoint();
                        }

                        class LightweightHorizontalOrVerticalLayoutGroup : RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup, RedCrow.UI.UUIF.Core.Layout.IUUIFLinearLayoutGroup
                        {
                            /*0x23d8298*/ LightweightHorizontalOrVerticalLayoutGroup();
                            /*0x1f30804*/ float get_Spacing();
                            void set_Spacing(float value);
                            /*0x23d7f88*/ void LayoutItemsFromPoint(UnityEngine.Vector2 startingPoint, bool isHorizontal, bool workBackwards, float spacing);
                        }

                        class LightweightLayoutElementBase : RedCrow.UI.UUIF.Core.Layout.UUIFNonGroupLayoutElementBase
                        {
                            /*0x23d846c*/ LightweightLayoutElementBase();
                            /*0x23d829c*/ float get_minHeight();
                            /*0x23d82ac*/ void set_minHeight(float value);
                            /*0x23d82b0*/ float get_minWidth();
                            /*0x23d82c0*/ void set_minWidth(float value);
                            /*0x23d82c4*/ float get_flexibleHeight();
                            /*0x23d82cc*/ void set_flexibleHeight(float value);
                            /*0x23d82d0*/ float get_flexibleWidth();
                            /*0x23d82d8*/ void set_flexibleWidth(float value);
                            /*0x23d82dc*/ void SetRectHeight(float value);
                            /*0x23d83a4*/ void SetRectWidth(float value);
                        }

                        class LightweightLayoutGroup : RedCrow.UI.UUIF.Core.Layout.UUIFLayoutGroup, UnityEngine.UI.ILayoutElement
                        {
                            static float PIVOT_LEFT = 0;
                            static float PIVOT_CENTER = 0.5;
                            static float PIVOT_RIGHT = 1;
                            static float PIVOT_BOTTOM = 0;
                            static float PIVOT_MIDDLE = 0.5;
                            static float PIVOT_TOP = 1;
                            /*0x8c*/ bool FitWidthToContent;
                            /*0x8d*/ bool FitHeightToContent;
                            /*0x8e*/ bool m_isRefreshingLayout;
                            /*0x90*/ RedCrow.UI.UUIF.Core.Layout.LayoutProperties m_layoutProperties;

                            /*0x23d7ec0*/ LightweightLayoutGroup();
                            /*0x23d8474*/ void RefreshLayout();
                            /*0x23d8754*/ void PreRefreshLayout();
                            /*0x1f30ebc*/ void RefreshLayout(RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x1f30804*/ float GetTotalContentWidth();
                            /*0x1f30804*/ float GetTotalContentHeight();
                            /*0x23d8758*/ void OnWatchedElementWidthChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d876c*/ void OnWatchedElementHeightChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d8780*/ void OnRectTransformDimensionsChange();
                            /*0x23d88b8*/ void InitLayoutProperties();
                            /*0x23d8944*/ float get_preferredWidth();
                            /*0x23d8960*/ void set_preferredWidth(float value);
                            /*0x23d8990*/ float get_preferredHeight();
                            /*0x23d89ac*/ void set_preferredHeight(float value);
                            /*0x23d89dc*/ float get_minHeight();
                            /*0x23d89f4*/ void set_minHeight(float value);
                            /*0x23d8a24*/ float get_minWidth();
                            /*0x23d8a3c*/ void set_minWidth(float value);
                            /*0x23d8a6c*/ float get_flexibleHeight();
                            /*0x23d8a84*/ void set_flexibleHeight(float value);
                            /*0x23d8ab4*/ float get_flexibleWidth();
                            /*0x23d8acc*/ void set_flexibleWidth(float value);
                            /*0x23d8afc*/ void CalculateLayoutInputHorizontal();
                            /*0x23d8b00*/ void CalculateLayoutInputVertical();
                            /*0x23d8b04*/ int get_layoutPriority();

                            class IntermediateLayoutCalculations
                            {
                                /*0x10*/ float TotalContentWidth;
                                /*0x14*/ float TotalContentHeight;
                                /*0x18*/ UnityEngine.Vector2 ChildAlignmentPoint;

                                /*0x23d8744*/ IntermediateLayoutCalculations();
                            }
                        }

                        class LightweightVerticalLayoutGroup : RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightHorizontalOrVerticalLayoutGroup
                        {
                            /*0x98*/ float m_Spacing;

                            /*0x23d8bd4*/ LightweightVerticalLayoutGroup();
                            /*0x23d8b0c*/ float get_Spacing();
                            /*0x23d8b14*/ void set_Spacing(float value);
                            /*0x23d8b1c*/ void RefreshLayout(RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutGroup.IntermediateLayoutCalculations intermediateCalculations);
                            /*0x23d8ba8*/ float GetTotalContentWidth();
                            /*0x23d8bb0*/ float GetTotalContentHeight();
                            /*0x23d8bc0*/ void OnWatchedElementHeightChanged(RedCrow.UI.UUIF.Core.Layout.IUUIFLayoutElement element, float value);
                            /*0x23d8bcc*/ UnityEngine.Vector2 GetModelItemPivotPoint();
                        }

                        namespace Elements
                        {
                            class LightweightLayoutElement : RedCrow.UI.UUIF.Core.Layout.Lightweight.LightweightLayoutElementBase
                            {
                                /*0x30*/ RedCrow.UI.UUIF.Core.Layout.Lightweight.Elements.LightweightLayoutElement.DimensionSettings WidthSettings;
                                /*0x38*/ RedCrow.UI.UUIF.Core.Layout.Lightweight.Elements.LightweightLayoutElement.DimensionSettings HeightSettings;
                                /*0x40*/ float m_cachedRectWidth;
                                /*0x44*/ float m_cachedRectHeight;

                                /*0x23d8f0c*/ LightweightLayoutElement();
                                /*0x23d8bd8*/ void Awake();
                                /*0x23d8c00*/ void RefreshCachedSize();
                                /*0x23d8c44*/ float GetWidth();
                                /*0x23d8c54*/ float GetHeight();
                                /*0x23d8c64*/ float get_preferredHeight();
                                /*0x23d8c80*/ void set_preferredHeight(float value);
                                /*0x23d8cf0*/ float get_preferredWidth();
                                /*0x23d8d0c*/ void set_preferredWidth(float value);
                                /*0x23d8d7c*/ void OnRectTransformDimensionsChange();

                                enum DimensionOption
                                {
                                    RectSize = 0,
                                    FixedSize = 1,
                                }

                                struct DimensionSettings
                                {
                                    /*0x10*/ RedCrow.UI.UUIF.Core.Layout.Lightweight.Elements.LightweightLayoutElement.DimensionOption Setting;
                                    /*0x14*/ float Value;
                                }
                            }
                        }
                    }
                }

                namespace CanvaslessUI
                {
                    class CanvaslessUIContainer : UnityEngine.MonoBehaviour
                    {
                        /*0x20*/ UnityEngine.Camera Camera;
                        /*0x28*/ RedCrow.Collections.WorryFreeList<System.Action<int>> m_baseSortingOrderChanged;
                        /*0x30*/ int m_currentBaseSortingOrder;
                        /*0x34*/ float m_previousDistanceSquared;
                        /*0x38*/ UnityEngine.Transform m_cameraTransform;
                        /*0x40*/ UnityEngine.Transform m_containerTransform;

                        /*0x23d9444*/ CanvaslessUIContainer();
                        /*0x23d8f14*/ void add_BaseSortingOrderChanged(System.Action<int> value);
                        /*0x23d8fc0*/ void remove_BaseSortingOrderChanged(System.Action<int> value);
                        /*0x23d9020*/ void Awake();
                        /*0x23d90d4*/ UnityEngine.Camera GetRelevantCamera();
                        /*0x23d90dc*/ void OnRelativePositionToCameraChanged();
                        /*0x23d9150*/ bool CalculateNewSortingOrder();
                        /*0x23d936c*/ bool CalculateNewSortingOrderFast();
                    }

                    class CanvaslessUIRendererOrderController : UnityEngine.EventSystems.UIBehaviour
                    {
                        /*0x20*/ UnityEngine.Renderer m_renderer;
                        /*0x28*/ RedCrow.UI.UUIF.Core.CanvaslessUI.CanvaslessUIContainer m_canvaslessUiContainer;
                        /*0x30*/ int m_relativeOrderInLayer;

                        /*0x23d9804*/ CanvaslessUIRendererOrderController();
                        /*0x23d9454*/ int get_CurrentAbsoluteSortingOrder();
                        /*0x23d94dc*/ void InitializeRenderer(UnityEngine.Renderer rendererComponent);
                        /*0x23d951c*/ void SetOrderInLayer(int orderInLayer);
                        /*0x23d954c*/ void OnEnable();
                        /*0x23d9690*/ void OnDisable();
                        /*0x23d9768*/ void OnBaseSortingOrderChanged(int baseSortingOrder);
                    }

                    class CanvaslessUISpriteController : RedCrow.UI.UUIF.Core.CanvaslessUI.CanvaslessUISpriteOrderController, UnityEngine.UI.ILayoutElement
                    {
                        static float DEFAULT_PIXELS_PER_UNIT = 100;
                        /*0x40*/ UnityEngine.RectTransform m_rectTransform;

                        /*0x23d9dbc*/ CanvaslessUISpriteController();
                        /*0x23d980c*/ float get_minWidth();
                        /*0x23d9814*/ float get_preferredWidth();
                        /*0x23d99c4*/ float get_flexibleWidth();
                        /*0x23d99cc*/ float get_minHeight();
                        /*0x23d99d4*/ float get_preferredHeight();
                        /*0x23d9ab8*/ float get_flexibleHeight();
                        /*0x23d9ac0*/ int get_layoutPriority();
                        /*0x23d98f8*/ float get_pixelsPerUnit();
                        /*0x23d9ac8*/ void Awake();
                        /*0x23d9be8*/ void OnEnable();
                        /*0x23d9d7c*/ void OnRectTransformDimensionsChange();
                        /*0x23d9d98*/ void OnTransformParentChanged();
                        /*0x23d9c00*/ void UpdateScale();
                        /*0x23d9db4*/ void CalculateLayoutInputHorizontal();
                        /*0x23d9db8*/ void CalculateLayoutInputVertical();
                    }

                    class CanvaslessUISpriteOrderController : RedCrow.UI.UUIF.Core.CanvaslessUI.CanvaslessUIRendererOrderController
                    {
                        static /*0x0*/ int UI_3D_SPRITE_SORTING_LAYER_NAME;
                        /*0x38*/ UnityEngine.SpriteRenderer SpriteRenderer;

                        static /*0x23d9fb0*/ CanvaslessUISpriteOrderController();
                        /*0x23d9e14*/ CanvaslessUISpriteOrderController();
                        /*0x23d9b50*/ void Awake();
                        /*0x23d9e1c*/ void LocateSpriteRenderer();
                        /*0x23d9ed4*/ void OverrideSortingLayer(UnityEngine.SpriteRenderer spriteRenderer);
                    }

                    class CanvaslessUITextController : RedCrow.UI.UUIF.Core.CanvaslessUI.CanvaslessUITextOrderController, UnityEngine.UI.ILayoutElement, UnityEngine.UI.ILayoutIgnorer
                    {
                        static float TEXTMESH_SIZE_MULTIPLIER = 0.10000000149011612;
                        /*0x48*/ UnityEngine.TextMesh TextMesh;
                        /*0x50*/ bool FitRectToWidth;
                        /*0x51*/ bool FitRectToHeight;
                        /*0x52*/ bool IgnoreLayout;
                        /*0x54*/ float LayoutMinWidth;
                        /*0x58*/ float LayoutMinHeight;
                        /*0x60*/ UnityEngine.RectTransform m_rectTransform;
                        /*0x68*/ float m_cachedWidth;
                        /*0x6c*/ float m_cachedHeight;

                        /*0x23da800*/ CanvaslessUITextController();
                        /*0x23d9ffc*/ bool get_ignoreLayout();
                        /*0x23da004*/ float get_minWidth();
                        /*0x23da00c*/ float get_preferredWidth();
                        /*0x23da214*/ float get_flexibleWidth();
                        /*0x23da21c*/ float get_minHeight();
                        /*0x23da224*/ float get_preferredHeight();
                        /*0x23da3f8*/ float get_flexibleHeight();
                        /*0x23da400*/ int get_layoutPriority();
                        /*0x23da408*/ void OnTextChanged();
                        /*0x23da444*/ void Awake();
                        /*0x23da63c*/ void OnEnable();
                        /*0x23da654*/ void CalculateLayoutInputHorizontal();
                        /*0x23da6c8*/ void CalculateLayoutInputVertical();
                        /*0x23da73c*/ void SetLayoutDirty();
                        /*0x23da584*/ void LocateTextComponent();
                        /*0x23da40c*/ void RecalculateSize();
                        /*0x23da678*/ void FitRectHorizontal();
                        /*0x23da6ec*/ void FitRectVertical();
                        /*0x23da040*/ float CalculateTextWidth();
                        /*0x23da258*/ float CalculateTextHeight();
                    }

                    class CanvaslessUITextOrderController : RedCrow.UI.UUIF.Core.CanvaslessUI.CanvaslessUIRendererOrderController
                    {
                        static /*0x0*/ int UI_3D_TEXT_SORTING_LAYER_ID;
                        /*0x38*/ UnityEngine.MeshRenderer MeshRenderer;
                        /*0x40*/ int RelativeOrderInLayer;

                        static /*0x23da9fc*/ CanvaslessUITextOrderController();
                        /*0x23da860*/ CanvaslessUITextOrderController();
                        /*0x23da4ec*/ void Awake();
                        /*0x23da868*/ void LocateMeshRenderer();
                        /*0x23da920*/ void OverrideSortingLayer(UnityEngine.MeshRenderer meshRenderer);
                    }
                }
            }

            namespace Actions
            {
                class ActionDispatcher : RedCrow.UI.UUIF.Actions.IActionDispatcher
                {
                    /*0x10*/ string <ActionName>k__BackingField;
                    /*0x18*/ RedCrow.UI.UUIF.DataProviding.ActionContext m_currentActionContext;
                    /*0x20*/ RedCrow.UI.UUIF.Actions.IUIActionRegistry m_actionRegistry;
                    /*0x28*/ UnityEngine.GameObject m_associatedGameObject;
                    /*0x30*/ RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate m_contextChangedDeferredCallback;
                    /*0x38*/ bool m_isHookedIntoActionContext;

                    /*0x23daa68*/ ActionDispatcher(RedCrow.UI.UUIF.Actions.IUIActionRegistry actionRegistry, UnityEngine.GameObject associatedGameObject, string actionName, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextChangeDelegate contextChangedCallback);
                    /*0x23daa48*/ string get_ActionName();
                    /*0x23daa50*/ void set_ActionName(string value);
                    /*0x23daa58*/ RedCrow.UI.UUIF.DataProviding.ActionContext get_CurrentActionContext();
                    /*0x23daa60*/ void set_CurrentActionContext(RedCrow.UI.UUIF.DataProviding.ActionContext value);
                    /*0x23daadc*/ void FetchContext();
                    /*0x23dabe8*/ void ReleaseContext();
                    /*0x23dac28*/ void TriggerAction(object[] actionParams);
                }

                interface IActionDispatcher
                {
                    /*0x1f30214*/ RedCrow.UI.UUIF.DataProviding.ActionContext get_CurrentActionContext();
                    /*0x1f309e4*/ void FetchContext();
                    /*0x1f309e4*/ void ReleaseContext();
                    /*0x1f30ebc*/ void TriggerAction(object[] actionParams);
                }

                class UIActionDelegate : System.MulticastDelegate
                {
                    /*0x23dad58*/ UIActionDelegate(object object, nint method);
                    /*0x23dae0c*/ void Invoke(string actionName, object[] actionParams);
                    /*0x23dae20*/ System.IAsyncResult BeginInvoke(string actionName, object[] actionParams, System.AsyncCallback callback, object object);
                    /*0x23dae48*/ void EndInvoke(System.IAsyncResult result);
                }

                interface IUIActionRegistry
                {
                    /*0x1f302cc*/ RedCrow.UI.UUIF.DataProviding.ActionContext GetActionContext(string actionName);
                    /*0x1f30ee8*/ void SetActionContext(string actionName, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue newValue);
                    /*0x1f30ff0*/ void AddActionListener(string actionName, RedCrow.UI.UUIF.Actions.UIActionDelegate callback);
                    /*0x1f30ff0*/ void RemoveActionListener(string actionName, RedCrow.UI.UUIF.Actions.UIActionDelegate callback);
                    /*0x1f30ff0*/ void TriggerAction(string actionName, object[] actionParams);
                }

                class UIActionRegistry : RedCrow.UI.UUIF.Actions.IUIActionRegistry
                {
                    /*0x10*/ System.Collections.Generic.Dictionary<string, RedCrow.UI.UUIF.Actions.UIActionRegistryEntry> m_entries;
                    /*0x18*/ System.Collections.Generic.List<RedCrow.UI.UUIF.DataProviding.ActionContext> m_dirtyContexts;

                    /*0x23db538*/ UIActionRegistry();
                    /*0x23dae54*/ void Update();
                    /*0x23daf5c*/ RedCrow.UI.UUIF.DataProviding.ActionContext GetActionContext(string actionName);
                    /*0x23db0bc*/ void SetActionContext(string actionName, RedCrow.UI.UUIF.DataProviding.ActionContext.ActionContextValue newValue);
                    /*0x23db0ec*/ void AddActionListener(string actionName, RedCrow.UI.UUIF.Actions.UIActionDelegate callback);
                    /*0x23db1a0*/ void RemoveActionListener(string actionName, RedCrow.UI.UUIF.Actions.UIActionDelegate callback);
                    /*0x23db220*/ void TriggerAction(string actionName, object[] actionParams);
                    /*0x23daf7c*/ RedCrow.UI.UUIF.Actions.UIActionRegistryEntry GetEntry(string actionName, RedCrow.UI.UUIF.Actions.UIActionRegistry.MissingEntryPolicy missingEntryPolicy);
                    /*0x23db4a8*/ void MarkContextAsDirty(RedCrow.UI.UUIF.DataProviding.ActionContext context);

                    enum MissingEntryPolicy
                    {
                        CreateSilenty = 0,
                        CreateAndWarn = 1,
                        Fail = 2,
                    }
                }

                class UIActionRegistryEntry
                {
                    /*0x10*/ string <ActionName>k__BackingField;
                    /*0x18*/ RedCrow.UI.UUIF.DataProviding.ActionContext <ActionContext>k__BackingField;
                    /*0x20*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Actions.UIActionDelegate> m_listeners;

                    /*0x23db3cc*/ UIActionRegistryEntry(string actionName);
                    /*0x23db614*/ string get_ActionName();
                    /*0x23db61c*/ void set_ActionName(string value);
                    /*0x23db624*/ RedCrow.UI.UUIF.DataProviding.ActionContext get_ActionContext();
                    /*0x23db62c*/ void set_ActionContext(RedCrow.UI.UUIF.DataProviding.ActionContext value);
                    /*0x23db110*/ void AddListener(RedCrow.UI.UUIF.Actions.UIActionDelegate listener);
                    /*0x23db1c8*/ void RemoveListener(RedCrow.UI.UUIF.Actions.UIActionDelegate listener);
                    /*0x23db248*/ void Trigger(object[] actionParams);
                }

                class UIActionUtils
                {
                    static /*0x1ffc854*/ TModel GetModelFromActionWithKeyParams<TModel>(object[] actionParams);
                    /*0x23db634*/ UIActionUtils();
                }
            }
        }

        namespace Utils
        {
            class SafeAreaUtils
            {
                static /*0x23c985c*/ UnityEngine.Rect GetSafeArea();
                static /*0x23cce60*/ UnityEngine.Rect CalculateSafeAreaPercentages(RedCrow.UI.Utils.SafeAreaUtils.SafeAreaTracking safeAreaTracking);
                static /*0x23db63c*/ void ApplySafeAreaToRectTransform(UnityEngine.Rect safeArea, UnityEngine.RectTransform rectTransform, bool avoidLeftRightSafeAreas, bool avoidTopBottomSafeAreas);
                static /*0x23c9864*/ void ApplySafeAreaToRectTransform(UnityEngine.Rect safeArea, UnityEngine.RectTransform rectTransform, UnityEngine.Canvas canvas, bool avoidLeftRightSafeAreas, bool avoidTopBottomSafeAreas);
                /*0x23db64c*/ SafeAreaUtils();

                enum SafeAreaTracking
                {
                    None = 0,
                    Normal = 1,
                    Symmetric = 2,
                }
            }
        }

        namespace CustomComponents
        {
            class BoundedCanvasScaler : UnityEngine.UI.CanvasScaler
            {
                static float kLogBase = 2;
                /*0x64*/ RedCrow.UI.CustomComponents.BoundedCanvasScaler.MatchDimensionSelection m_MatchDimension;
                /*0x68*/ float m_MinFlexSize;
                /*0x6c*/ float m_MaxFlexSize;
                /*0x70*/ float mMinMatchedToFlexRatio;
                /*0x74*/ float mMaxMatchedToFlexRatio;
                /*0x78*/ RedCrow.UI.Utils.SafeAreaUtils.SafeAreaTracking m_safeAreaCompensation;
                /*0x7c*/ UnityEngine.Vector2 m_safeAreaContentScale;

                /*0x23db9c4*/ BoundedCanvasScaler();
                /*0x23db654*/ RedCrow.UI.CustomComponents.BoundedCanvasScaler.MatchDimensionSelection get_MatchDimension();
                /*0x23db65c*/ void set_MatchDimension(RedCrow.UI.CustomComponents.BoundedCanvasScaler.MatchDimensionSelection value);
                /*0x23db664*/ float get_MinFlexSize();
                /*0x23db66c*/ void set_MinFlexSize(float value);
                /*0x23db6e0*/ float get_MaxFlexSize();
                /*0x23db6e8*/ void set_MaxFlexSize(float value);
                /*0x23db754*/ float get_MatchedReferenceResolution();
                /*0x23db770*/ float get_FlexReferenceResolution();
                /*0x23db78c*/ RedCrow.UI.Utils.SafeAreaUtils.SafeAreaTracking get_SafeAreaCompensation();
                /*0x23db794*/ void set_SafeAreaCompensation(RedCrow.UI.Utils.SafeAreaUtils.SafeAreaTracking value);
                /*0x23db7c4*/ UnityEngine.Vector2 get_SafeAfeaContentScale();
                /*0x23db7cc*/ void set_SafeAfeaContentScale(UnityEngine.Vector2 value);
                /*0x23db7d4*/ void OnEnable();
                /*0x23db840*/ void HandleScaleWithScreenSize();
                /*0x23db8fc*/ void DebugSafeAreaCompensationModified(UnityEngine.Rect offsets);
                /*0x23db6a4*/ void OnMinFlexSizeModified();
                /*0x23db71c*/ void OnMaxFlexSizeModified();
                /*0x23db79c*/ void OnSafeAreaCompensationModified();
                /*0x23db90c*/ void CompensateSafeAreaFromOffsets(UnityEngine.Rect offsets);

                enum MatchDimensionSelection
                {
                    MatchWidth = 0,
                    MatchHeight = 1,
                }
            }

            class CenterScrollRectOnChild : UnityEngine.MonoBehaviour
            {
                /*0x20*/ UnityEngine.UI.ScrollRect ScrollRect;
                /*0x28*/ UnityEngine.RectTransform MaskTransform;

                static /*0x24d1360*/ UnityEngine.Vector3 GetWidgetWorldPoint(UnityEngine.RectTransform target);
                static /*0x24d1424*/ UnityEngine.Vector3 GetWorldPointInWidget(UnityEngine.RectTransform target, UnityEngine.Vector3 worldPoint);
                /*0x24d1438*/ CenterScrollRectOnChild();
                /*0x24d1128*/ void CenterOnContentChild(int iChildIndex);
                /*0x24d11ac*/ void CenterOnItem(UnityEngine.RectTransform target);
            }

            class HighDPIDragCorrector : UnityEngine.MonoBehaviour
            {
                /*0x20*/ int BaseThreshold;
                /*0x24*/ int BasePpi;
                /*0x28*/ int m_dragThreshold;

                /*0x24d1518*/ HighDPIDragCorrector();
                /*0x24d1440*/ void Start();
            }

            class ProportionalGridLayoutGroup : UnityEngine.UI.GridLayoutGroup
            {
                /*0x80*/ int NumColumns;
                /*0x84*/ int NumRows;
                /*0x88*/ UnityEngine.RectTransform m_cachedRectTransform;

                /*0x24d1748*/ ProportionalGridLayoutGroup();
                /*0x24d152c*/ void Start();
                /*0x24d172c*/ void OnRectTransformDimensionsChange();
                /*0x24d1574*/ void RecalculateCellSize();
            }

            class Touchable : UnityEngine.UI.Graphic
            {
                /*0x24d17a0*/ Touchable();
                /*0x24d175c*/ void Awake();
                /*0x24d1788*/ void OnPopulateMesh(UnityEngine.UI.VertexHelper vh);
            }
        }
    }

    namespace Stately
    {
        namespace Utils
        {
            class StatelyUtils
            {
                static /*0x0*/ System.Text.StringBuilder _stringBuilder;

                static /*0x24d1c50*/ StatelyUtils();
                static /*0x24d17f8*/ System.Collections.Generic.List<RedCrow.Stately.Core.StatelyStateMachine> GetParents(RedCrow.Stately.Core.StatelyState state);
                static /*0x24d1900*/ RedCrow.Stately.Core.StatelyState[] GetChildren(RedCrow.Stately.Core.StatelyState state);
                static /*0x24d1958*/ bool NeedsToBeEntered(RedCrow.Stately.Core.StatelyState state);
                static /*0x24d1984*/ RedCrow.Stately.Core.StateTransition GetTransition(string transition, RedCrow.Stately.Core.StateTransition[] transitions);
                static /*0x24d1a04*/ string CalculatePath(RedCrow.Stately.Core.StatelyState state);
                static /*0x24d1a9c*/ void CalculatePath(RedCrow.Stately.Core.StatelyState state, System.Text.StringBuilder stringBuilder);
            }
        }

        namespace History
        {
            struct StatelyHistoryEvent
            {
                /*0x10*/ RedCrow.Stately.Core.StatelyState State;
                /*0x18*/ RedCrow.Stately.History.StatelyHistoryType Type;

                /*0x24d1ccc*/ StatelyHistoryEvent(RedCrow.Stately.Core.StatelyState state, RedCrow.Stately.History.StatelyHistoryType type);
                /*0x24d1cf4*/ string ToString();
                /*0x24d1d94*/ bool Equals(object obj);
                /*0x24d1e1c*/ bool Equals(RedCrow.Stately.History.StatelyHistoryEvent other);
                /*0x24d1e40*/ int GetHashCode();
            }

            enum StatelyHistoryType
            {
                StartLoading = 0,
                Entered = 1,
                StartUnloading = 2,
                Unloaded = 3,
            }

            class StatelyNavigationHistory
            {
                /*0x10*/ System.Collections.Generic.List<RedCrow.Stately.History.StatelyHistoryEvent> m_events;
                /*0x18*/ System.Collections.ObjectModel.ReadOnlyCollection<RedCrow.Stately.History.StatelyHistoryEvent> ReadonlyEvents;

                /*0x24d1ed8*/ StatelyNavigationHistory(RedCrow.Stately.Core.StatelyNavigator navigator);
                /*0x24d243c*/ void Clear();
                /*0x24d24d8*/ string Print();
                /*0x24d254c*/ void Print(System.Text.StringBuilder stringBuilder);
                /*0x24d260c*/ void OnStateStartLoading(RedCrow.Stately.Core.StatelyState state);
                /*0x24d2690*/ void OnStateEntered(RedCrow.Stately.Core.StatelyState state);
                /*0x24d2718*/ void OnStateStartUnloading(RedCrow.Stately.Core.StatelyState state);
                /*0x24d27a0*/ void OnStateUnloaded(RedCrow.Stately.Core.StatelyState state);
            }
        }

        namespace Core
        {
            interface IStatelyManager
            {
                /*0x1f30214*/ RedCrow.Stately.Core.StatelyState get_Active();
                /*0x1f30214*/ RedCrow.Stately.Core.StatelyNavigator get_Navigator();
                /*0x1f30ebc*/ void QueueTransition(RedCrow.Stately.Core.StatelyTransitionRequest request);
            }

            class StatelyBehaviour : RedCrow.Property.Injectable.InjectableBehaviour
            {
                /*0x28*/ RedCrow.Stately.Core.StatelyContext m_context;
                /*0x30*/ RedCrow.Stately.Core.StatelyState m_state;

                /*0x24d2a4c*/ StatelyBehaviour();
                /*0x24d2828*/ string get_Name();
                /*0x24d2840*/ string get_Path();
                /*0x24d2858*/ void Initialize(RedCrow.Stately.Core.StatelyContext context, RedCrow.Stately.Core.StatelyState state);
                /*0x24d28f8*/ bool NeedsReenter();
                /*0x24d2930*/ void OnStateStartLoading();
                /*0x24d2968*/ void OnStateEnter();
                /*0x24d296c*/ void OnStateLeave();
                /*0x24d2970*/ void OnStateUpdate(float deltaTime);
                /*0x24d2974*/ void OnStateLoadingUpdate(float deltaTime);
                /*0x24d2978*/ void QueueTransition(RedCrow.Stately.Core.StatelyTransitionRequest request);
                /*0x24d2a2c*/ bool IsDoneLoading();
                /*0x24d2a34*/ bool IsDoneUnloading();
                /*0x24d2a3c*/ void OnStateStartUnloading();
                /*0x24d2a40*/ void OnStateUnloadingUpdate(float deltaTime);
                /*0x24d2a44*/ bool HandleStateEvent(int eventId, object[] eventParameters);
            }

            class StatelyContext
            {
                /*0x10*/ RedCrow.Stately.Core.IStatelyManager <Manager>k__BackingField;
                /*0x18*/ RedCrow.Property.PropertyBlock PropertyBlock;

                /*0x24d2a6c*/ StatelyContext(RedCrow.Property.PropertyBlock propertyBlock);
                /*0x24d2a5c*/ RedCrow.Stately.Core.IStatelyManager get_Manager();
                /*0x24d2a64*/ void set_Manager(RedCrow.Stately.Core.IStatelyManager value);
            }

            class StatelyManager : RedCrow.Stately.Core.IStatelyManager
            {
                /*0x10*/ RedCrow.Stately.Core.StatelyContext <Context>k__BackingField;
                /*0x18*/ RedCrow.Stately.Core.StatelyStateMachine m_root;
                /*0x20*/ RedCrow.Stately.Core.StatelyTransitionRequest m_queuedTransitionRequest;
                /*0x28*/ RedCrow.Stately.Core.StatelyNavigator m_navigator;
                /*0x30*/ System.Collections.Generic.Stack<RedCrow.Stately.Core.StatelyState> m_previousStateStack;
                /*0x38*/ bool m_gotoPreviousState;
                /*0x39*/ bool m_canBacktrack;

                /*0x24d35ac*/ StatelyManager();
                /*0x24d2a9c*/ RedCrow.Stately.Core.StatelyState get_Active();
                /*0x24d2b90*/ RedCrow.Stately.Core.StatelyNavigator get_Navigator();
                /*0x24d2b98*/ RedCrow.Stately.Core.StatelyContext get_Context();
                /*0x24d2ba0*/ void set_Context(RedCrow.Stately.Core.StatelyContext value);
                /*0x24d2ba8*/ RedCrow.Stately.Core.StatelyState[] get_PreviousStateArray();
                /*0x24d2bf8*/ void Initialize(RedCrow.Stately.Core.StatelyStateMachine rootStateMachine, RedCrow.Stately.Core.StatelyContext context, bool isBacktrackingEnabled);
                /*0x24d2d68*/ void StateUpdate(float deltaTime);
                /*0x24d3058*/ void NavigateTo(RedCrow.Stately.Core.StatelyState destination);
                /*0x24d34e4*/ bool CanProcessTransition(RedCrow.Stately.Core.StatelyTransitionRequest request);
                /*0x24d3580*/ void QueueTransition(RedCrow.Stately.Core.StatelyTransitionRequest request);
                /*0x24d2f74*/ void StorePreviousState(RedCrow.Stately.Core.StatelyState destination);
                /*0x24d35a0*/ void GoToPreviousState();
            }

            class StatelyNavigatorDelegate : System.MulticastDelegate
            {
                /*0x24d20c4*/ StatelyNavigatorDelegate(object object, nint method);
                /*0x24d3768*/ void Invoke(RedCrow.Stately.Core.StatelyState state);
                /*0x24d377c*/ System.IAsyncResult BeginInvoke(RedCrow.Stately.Core.StatelyState state, System.AsyncCallback callback, object object);
                /*0x24d379c*/ void EndInvoke(System.IAsyncResult result);
            }

            class StatelyNavigator
            {
                /*0x10*/ System.Collections.Generic.Queue<RedCrow.Stately.Core.StatelyState> m_statesToEnter;
                /*0x18*/ System.Collections.Generic.Queue<RedCrow.Stately.Core.StatelyState> m_statesToLeave;
                /*0x20*/ RedCrow.Stately.Core.StatelyStateMachine <Root>k__BackingField;
                /*0x28*/ RedCrow.Stately.Core.StatelyState <CurrentState>k__BackingField;
                /*0x30*/ RedCrow.Stately.Core.StatelyNavigatorDelegate StateStartLoading;
                /*0x38*/ RedCrow.Stately.Core.StatelyNavigatorDelegate StateEntered;
                /*0x40*/ RedCrow.Stately.Core.StatelyNavigatorDelegate StateStartUnloading;
                /*0x48*/ RedCrow.Stately.Core.StatelyNavigatorDelegate StateUnloaded;
                /*0x50*/ RedCrow.Stately.Core.StatelyNavigatorDelegate NavigationComplete;
                /*0x58*/ System.Collections.Generic.Dictionary<string, RedCrow.Stately.Core.StatelyState> m_paths;
                /*0x60*/ Yeti.PanelMasterListProvider <PanelFilterList>k__BackingField;

                /*0x24d3668*/ StatelyNavigator();
                /*0x24d37a8*/ RedCrow.Stately.Core.StatelyStateMachine get_Root();
                /*0x24d37b0*/ void set_Root(RedCrow.Stately.Core.StatelyStateMachine value);
                /*0x24d37b8*/ RedCrow.Stately.Core.StatelyState get_CurrentState();
                /*0x24d37c0*/ void set_CurrentState(RedCrow.Stately.Core.StatelyState value);
                /*0x24d21cc*/ void add_StateStartLoading(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d37c8*/ void remove_StateStartLoading(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d2268*/ void add_StateEntered(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d3864*/ void remove_StateEntered(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d2304*/ void add_StateStartUnloading(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d3900*/ void remove_StateStartUnloading(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d23a0*/ void add_StateUnloaded(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d399c*/ void remove_StateUnloaded(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d3a38*/ void add_NavigationComplete(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d3ad4*/ void remove_NavigationComplete(RedCrow.Stately.Core.StatelyNavigatorDelegate value);
                /*0x24d3b70*/ Yeti.PanelMasterListProvider get_PanelFilterList();
                /*0x24d3b78*/ void set_PanelFilterList(Yeti.PanelMasterListProvider value);
                /*0x24d2cac*/ void Initialize(RedCrow.Stately.Core.StatelyStateMachine rootStateMachine);
                /*0x24d3ca4*/ bool get_IsTransitioning();
                /*0x24d306c*/ void Update(float deltaTime);
                /*0x24d40b8*/ void RegisterStatePath(RedCrow.Stately.Core.StatelyState state, string path);
                /*0x24d34f8*/ bool CanProcessTransition(RedCrow.Stately.Core.StatelyTransitionRequest request);
                /*0x24d4120*/ void NavigateToPath(string path);
                /*0x24d2f54*/ RedCrow.Stately.Core.StatelyState GetTransitionDestination(RedCrow.Stately.Core.StatelyTransitionRequest request);
                /*0x24d31c4*/ void NavigateTo(RedCrow.Stately.Core.StatelyState destination);
                /*0x24d3d10*/ void EnterState(RedCrow.Stately.Core.StatelyState state);
                /*0x24d3b80*/ void BeginLoadingState(RedCrow.Stately.Core.StatelyState destination);
                /*0x24d41fc*/ void LeaveActiveState(RedCrow.Stately.Core.StatelyState untilParent);
                /*0x24d42c4*/ void StartUnloadingCurrentState();
                /*0x24d3fac*/ void CompleteUnloading();
            }

            class StatelyState : RedCrow.Property.Injectable.InjectableBehaviour, RedCrow.Stately.Core.IStatelyState
            {
                /*0x28*/ RedCrow.Stately.Core.StateTransition[] Transitions;
                /*0x30*/ string <Path>k__BackingField;
                /*0x38*/ RedCrow.Stately.Core.StatelyStateMachine <StateMachine>k__BackingField;
                /*0x40*/ RedCrow.Stately.Core.StatelyStateMode m_mode;
                /*0x48*/ RedCrow.Stately.Core.StatelyBehaviour[] m_behaviours;
                /*0x50*/ RedCrow.Stately.Core.StatelyContext m_context;

                /*0x24d4ed0*/ StatelyState();
                /*0x24d1c48*/ string get_Name();
                /*0x24d4354*/ string get_Path();
                /*0x24d435c*/ void set_Path(string value);
                /*0x24d4364*/ RedCrow.Stately.Core.StatelyStateMachine get_StateMachine();
                /*0x24d436c*/ void set_StateMachine(RedCrow.Stately.Core.StatelyStateMachine value);
                /*0x24d4374*/ RedCrow.Stately.Core.IStatelyManager get_Manager();
                /*0x24d438c*/ RedCrow.Stately.Core.StatelyStateMode get_Mode();
                /*0x24d4394*/ void set_Mode(RedCrow.Stately.Core.StatelyStateMode value);
                /*0x24d439c*/ RedCrow.Stately.Core.StatelyContext get_Context();
                /*0x24d43a4*/ string get_LoadingMetricsId();
                /*0x24d4400*/ string get_UnloadingMetricsId();
                /*0x1ffc854*/ T GetBehaviour<T>();
                /*0x24d445c*/ void Initialize(RedCrow.Stately.Core.StatelyContext context, RedCrow.Stately.Core.StatelyStateMachine parent);
                /*0x24d42ac*/ void StartLoading();
                /*0x24d433c*/ void StartUnloading();
                /*0x24d4624*/ void OnStateStartLoading();
                /*0x24d46a0*/ void OnStateStartUnloading();
                /*0x24d3128*/ void StateUpdate(float deltaTime);
                /*0x24d4708*/ bool HandleStateEvent(int eventId, object[] eventParameters);
                /*0x24d47fc*/ bool NeedsReenter();
                /*0x24d488c*/ void OnStateEnter();
                /*0x24d48f8*/ void OnStateLeave();
                /*0x24d4960*/ void OnStateLoadingUpdate(float deltaTime);
                /*0x24d49d4*/ void OnStateUnloadingUpdate(float deltaTime);
                /*0x24d4a4c*/ void OnStateUpdate(float deltaTime);
                /*0x24d4ac0*/ RedCrow.Stately.Core.StatelyState GetTransitionDestination(RedCrow.Stately.Core.StatelyTransitionRequest request);
                /*0x24d4bc0*/ RedCrow.Stately.Core.StateTransition GetLocalTransition(string transition);
                /*0x24d4c28*/ System.Collections.Generic.List<RedCrow.Stately.Core.StateTransition> GetInheritedTransitions();
                /*0x24d4d14*/ void AddAllTransitions(System.Collections.Generic.List<RedCrow.Stately.Core.StateTransition> transitions);
                /*0x24d4de4*/ bool IsDoneLoading();
                /*0x24d4de8*/ bool AreBehavioursDoneLoading();
                /*0x24d4e58*/ bool IsDoneUnloading();
                /*0x24d4e5c*/ bool AreBehavioursDoneUnloading();
            }

            class StatelyStateMachine : RedCrow.Stately.Core.StatelyState
            {
                /*0x58*/ RedCrow.Stately.Core.StatelyState DefaultState;
                /*0x60*/ RedCrow.Stately.Core.StatelyState m_active;
                /*0x68*/ bool IsReferenceInstance;

                /*0x24d507c*/ StatelyStateMachine();
                /*0x24d2ab0*/ RedCrow.Stately.Core.StatelyState get_Active();
                /*0x24d2c98*/ void InitializeAsRoot(RedCrow.Stately.Core.StatelyContext context);
                /*0x24d4ed8*/ void Initialize(RedCrow.Stately.Core.StatelyContext context, RedCrow.Stately.Core.StatelyStateMachine stateMachine);
                /*0x24d4fac*/ void SetActiveState(RedCrow.Stately.Core.StatelyState state);
                /*0x24d4fb4*/ void OnStateLeave();
                /*0x24d4fd4*/ void OnStateUpdate(float deltaTime);
                /*0x24d5074*/ RedCrow.Stately.Core.StatelyState GetDefaultState();
            }

            interface IStatelyState
            {
                /*0x1f30214*/ string get_Name();
                /*0x1f30214*/ RedCrow.Stately.Core.StatelyStateMachine get_StateMachine();
                /*0x1f2ffc8*/ RedCrow.Stately.Core.StatelyStateMode get_Mode();
                /*0x1f30ff0*/ void Initialize(RedCrow.Stately.Core.StatelyContext context, RedCrow.Stately.Core.StatelyStateMachine stateMachine);
                void StateUpdate(float fDeltaTime);
                /*0x1f309e4*/ void StartLoading();
                /*0x1f2fe80*/ bool HandleStateEvent(int eventId, object[] eventParameters);
                /*0x1f302cc*/ RedCrow.Stately.Core.StateTransition GetLocalTransition(string transition);
                /*0x1f302cc*/ RedCrow.Stately.Core.StatelyState GetTransitionDestination(RedCrow.Stately.Core.StatelyTransitionRequest transition);
            }

            class StatelyTransitionRequest
            {
                /*0x10*/ string TransitionName;

                /*0x24d5084*/ StatelyTransitionRequest();
            }

            class StateTransition
            {
                /*0x10*/ RedCrow.Stately.Core.StatelyState Target;
                /*0x18*/ string TransitionName;

                /*0x24d508c*/ StateTransition();
            }

            enum StatelyStateMode
            {
                Inactive = 0,
                Loading = 1,
                Active = 2,
                Unloading = 3,
            }

            class StateMachineReference : RedCrow.Stately.Core.StatelyStateMachine
            {
                /*0x70*/ RedCrow.Stately.Core.StatelyStateMachine Reference;

                /*0x24d517c*/ StateMachineReference();
                /*0x24d5094*/ void Awake();
            }

            class StateMachineRunner : UnityEngine.MonoBehaviour
            {
                /*0x20*/ RedCrow.Stately.Core.StatelyStateMachine RootState;
                /*0x28*/ RedCrow.Stately.Core.StatelyManager Manager;
                /*0x30*/ RedCrow.Property.PropertyBlock PropertyBlock;
                /*0x38*/ RedCrow.Stately.History.StatelyNavigationHistory History;

                /*0x24d5598*/ StateMachineRunner();
                /*0x24d5184*/ void Start();
                /*0x24d5548*/ void QueueTransition(RedCrow.Stately.Core.StatelyTransitionRequest request);
                /*0x24d5574*/ void Update();
            }
        }

        namespace Behaviours
        {
            class StatelyAutoTransition : RedCrow.Stately.Core.StatelyBehaviour
            {
                /*0x38*/ string TransitionName;

                /*0x24d5614*/ StatelyAutoTransition();
                /*0x24d55a0*/ void OnStateEnter();
            }
        }
    }

    namespace Property
    {
        enum PropertyType
        {
            String = 0,
            Int = 1,
            Float = 2,
            Boolean = 3,
            Object = 4,
        }

        class Property
        {
            /*0x10*/ string m_name;
            /*0x18*/ RedCrow.Property.PropertyType m_type;
            /*0x20*/ string m_stringValue;
            /*0x28*/ float m_numberValue;
            /*0x30*/ object m_objectValue;

            /*0x24d563c*/ Property(string name, RedCrow.Property.PropertyType type);
            /*0x24d561c*/ string get_Name();
            /*0x24d5624*/ void set_Name(string value);
            /*0x24d562c*/ RedCrow.Property.PropertyType get_Type();
            /*0x24d5634*/ void set_Type(RedCrow.Property.PropertyType value);
            /*0x24d5678*/ string AsString();
            /*0x24d5680*/ float AsFloat();
            /*0x24d5688*/ int AsInt();
            /*0x24d56a8*/ bool AsBool();
            /*0x24d56b8*/ object AsObject();
            /*0x24d5748*/ void Set(string value);
            /*0x24d5750*/ void Set(float value);
            /*0x24d5758*/ void Set(int value);
            /*0x24d5764*/ void Set(bool value);
            /*0x24d5788*/ void Set(object value);
            /*0x24d5790*/ void Apply(RedCrow.Property.Property theirs);
        }

        class PropertyBlock
        {
            /*0x10*/ System.Collections.Generic.List<RedCrow.Property.Property> m_properties;

            /*0x24d52d8*/ PropertyBlock();
            /*0x24d5820*/ void SetProperty(string name, string value);
            /*0x24d5904*/ void SetProperty(string name, float value);
            /*0x24d5930*/ void SetProperty(string name, int value);
            /*0x24d5958*/ void SetProperty(string name, bool value);
            /*0x24d598c*/ void SetProperty(string name, object value);
            /*0x24d5360*/ void Apply(RedCrow.Property.PropertyBlock other);
            /*0x24d59b4*/ void ClearProperty(string name);
            /*0x24d5a88*/ void AddProperty(RedCrow.Property.Property property);
            /*0x24d5848*/ RedCrow.Property.Property GetOrCreateProperty(string name, RedCrow.Property.PropertyType type);
            /*0x24d5af0*/ RedCrow.Property.Property GetProperty(string name, RedCrow.Property.PropertyType type);
        }

        namespace Injectable
        {
            class InjectableAttribute : UnityEngine.PropertyAttribute
            {
                /*0x18*/ string Name;
                /*0x20*/ bool Required;

                /*0x24d5bac*/ InjectableAttribute(string name, bool required);
            }

            class InjectableBehaviour : UnityEngine.MonoBehaviour
            {
                /*0x20*/ RedCrow.Property.Injectable.Injector m_injector;

                /*0x24d2a54*/ InjectableBehaviour();
                /*0x24d2898*/ void Initialize();
                /*0x24d2954*/ void Inject(RedCrow.Property.PropertyBlock block);
                /*0x24d291c*/ bool IsInjectedPropertyDifferent(RedCrow.Property.PropertyBlock block);
            }

            class InjectableField
            {
                /*0x10*/ System.Reflection.FieldInfo FieldInfo;
                /*0x18*/ RedCrow.Property.Injectable.InjectableAttribute Settings;
                /*0x20*/ RedCrow.Property.PropertyType Type;

                /*0x24d5f74*/ InjectableField(System.Reflection.FieldInfo fieldInfo, RedCrow.Property.Injectable.InjectableAttribute attribute);
                /*0x24d61d4*/ void Apply(object injectable, RedCrow.Property.PropertyBlock block);
                /*0x24d6378*/ bool IsPropertySame(object injectable, RedCrow.Property.PropertyBlock block);
            }

            class InjectableUtils
            {
                static /*0x0*/ System.Type[] s_validPropertyTypes;

                static /*0x24d673c*/ InjectableUtils();
                static /*0x24d6624*/ bool IsValidInjectableType(System.Type type);

                class <>c__DisplayClass1_0
                {
                    /*0x10*/ System.Type type;

                    /*0x24d6734*/ <>c__DisplayClass1_0();
                    /*0x24d694c*/ bool <IsValidInjectableType>b__0(System.Type t);
                }
            }

            class Injector
            {
                /*0x10*/ System.Collections.Generic.List<RedCrow.Property.Injectable.InjectableField> m_injectableFields;
                /*0x18*/ object m_target;

                /*0x24d5be8*/ Injector(object target);
                /*0x24d5e14*/ void Inject(RedCrow.Property.PropertyBlock block);
                /*0x24d5eb8*/ bool IsPropertyDifferent(RedCrow.Property.PropertyBlock block);
            }
        }
    }

    namespace EditorExtensions
    {
        namespace PropertyDrawers
        {
            class DisplayOnlyAttribute : UnityEngine.PropertyAttribute
            {
                /*0x24d6974*/ DisplayOnlyAttribute();
            }
        }
    }

    namespace Collections
    {
        class BetterList<T> : System.Collections.Generic.IList<T>, System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.IEnumerable
        {
            static int MIN_CAPACITY = 16;
            /*0x0*/ T[] Buffer;
            /*0x0*/ int Size;

            /*0x1f30b78*/ BetterList(int initialSize);
            /*0x1f309e4*/ BetterList();
            /*0x1f30214*/ System.Collections.Generic.IEnumerator<T> GetEnumerator();
            /*0x1f30214*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            /*0x1ffc854*/ T get_Item(int i);
            /*0x1ffc854*/ void set_Item(int i, T value);
            /*0x1f309e4*/ void AllocateMore();
            /*0x1f309e4*/ void Trim();
            /*0x1f309e4*/ void Clear();
            /*0x1f309e4*/ void Release();
            /*0x1ffc854*/ void Add(T item);
            int BufferRange(int amount);
            /*0x1f30ebc*/ void AddRange(System.Collections.Generic.IList<T> items);
            /*0x1ffc854*/ int IndexOf(T item);
            /*0x1ffc854*/ void Insert(int index, T item);
            /*0x1ffc854*/ bool Contains(T item);
            /*0x1f30ee8*/ void CopyTo(T[] array, int arrayIndex);
            /*0x1ffc854*/ bool Remove(T item);
            /*0x1f2ffc8*/ int get_Count();
            /*0x1f2fe14*/ bool get_IsReadOnly();
            /*0x1f30b78*/ void RemoveAt(int index);
            /*0x1ffc854*/ T Pop();
            /*0x1f30214*/ T[] ToArray();
            /*0x1f30ebc*/ void Sort(RedCrow.Collections.BetterList.CompareFunc<T> comparer);
            /*0x1f30ebc*/ void Swap(RedCrow.Collections.BetterList<T> other);

            class CompareFunc<T> : System.MulticastDelegate
            {
                CompareFunc(object object, nint method);
                /*0x1ffc854*/ int Invoke(T left, T right);
                /*0x1ffc854*/ System.IAsyncResult BeginInvoke(T left, T right, System.AsyncCallback callback, object object);
                /*0x1f3008c*/ int EndInvoke(System.IAsyncResult result);
            }

            class <GetEnumerator>d__5<T> : System.Collections.Generic.IEnumerator<T>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x0*/ int <>1__state;
                /*0x0*/ T <>2__current;
                /*0x0*/ RedCrow.Collections.BetterList<T> <>4__this;
                /*0x0*/ int <i>5__2;

                /*0x1f30b78*/ <GetEnumerator>d__5(int <>1__state);
                /*0x1f309e4*/ void System.IDisposable.Dispose();
                /*0x1f2fe14*/ bool MoveNext();
                /*0x1ffc854*/ T System.Collections.Generic.IEnumerator<T>.get_Current();
                /*0x1f309e4*/ void System.Collections.IEnumerator.Reset();
                /*0x1f30214*/ object System.Collections.IEnumerator.get_Current();
            }
        }

        class BetterStack<T>
        {
            static int _defaultCapacity = 4;
            static /*0x0*/ T[] _emptyArray;
            /*0x0*/ T[] _array;
            /*0x0*/ int _size;
            /*0x0*/ int _version;

            static /*0x1f33998*/ BetterStack();
            /*0x1f309e4*/ BetterStack();
            /*0x1f30b78*/ BetterStack(int capacity);
            /*0x1f2ffc8*/ int get_Count();
            /*0x1f309e4*/ void Clear();
            /*0x1ffc854*/ bool Contains(T item);
            /*0x1f309e4*/ void TrimExcess();
            /*0x1ffc854*/ T get_Item(int key);
            /*0x1ffc854*/ void set_Item(int key, T value);
            /*0x1ffc854*/ void SetTop(T value);
            /*0x1ffc854*/ T Peek();
            /*0x1ffc854*/ T Pop();
            /*0x1ffc854*/ void Push(T item);
            /*0x1f30214*/ T[] ToArray();
        }

        class DictionaryUtils
        {
            static /*0x1ffc854*/ void SetOrIncrement<TKey>(System.Collections.Generic.Dictionary<TKey, int> dictionary, TKey key, int increment);
            static /*0x1ffc854*/ void SetOrIncrement<TKey>(System.Collections.Generic.Dictionary<TKey, long> dictionary, TKey key, long increment);
            static /*0x1ffc854*/ void SetOrIncrement<TKey>(System.Collections.Generic.Dictionary<TKey, double> dictionary, TKey key, double increment);
            static /*0x1ffc854*/ void DecrementOrRemove<TKey>(System.Collections.Generic.Dictionary<TKey, double> dictionary, TKey key, double decrement);
            static /*0x1f327fc*/ System.Collections.Generic.Dictionary<TKey, int> Scaled<TKey>(System.Collections.Generic.Dictionary<TKey, int> dictionary, int scale);
            static /*0x1f31f88*/ int Sum<TKey>(System.Collections.Generic.Dictionary<TKey, int> dictionary);
            static double Sum<TKey>(System.Collections.Generic.Dictionary<TKey, double> dictionary);
            static /*0x1f36f18*/ void MergeByAddingValues<TKey>(System.Collections.Generic.Dictionary<TKey, int> lhs, System.Collections.Generic.Dictionary<TKey, int> rhs);
            static /*0x1f370c8*/ void MergeByAddingScaledValues<TKey>(System.Collections.Generic.Dictionary<TKey, int> lhs, System.Collections.Generic.Dictionary<TKey, int> rhs, int scale);
            static /*0x1f37048*/ void MergeByAddingScaledValues<TKey>(System.Collections.Generic.Dictionary<TKey, double> lhs, System.Collections.Generic.Dictionary<TKey, double> rhs, double scale);
            static /*0x1ffc854*/ TKey FindMaxKey<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue> dictionary);
            static /*0x1ffc854*/ TValue GetValueOrDefault<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue> dictionary, TKey key, System.Func<TKey, TValue> defaultProvider);
            static /*0x1ffc854*/ TValue GetValueOrDefaultSafe<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue> dictionary, TKey key);
            static /*0x1ffc854*/ TValue GetValueOrDefault<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue> dictionary, TKey key);
            static /*0x1ffc854*/ TValue GetValueOrCreateAndAdd<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue> dictionary, TKey key, System.Func<TKey, TValue> createProvider);
            static /*0x1f327cc*/ System.Collections.Generic.Dictionary<TKey, TValue> Copy<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue> dictionary);
            static /*0x1f327cc*/ System.Collections.Generic.Dictionary<TKey, TValue> Clone<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue> dictionary);
        }

        class ListExtensions
        {
            static /*0x1ffc854*/ T First<T>(System.Collections.Generic.List<T> list);
            static /*0x1ffc854*/ T FirstOrDefault<T>(System.Collections.Generic.List<T> list);
            static /*0x1ffc854*/ T Last<T>(System.Collections.Generic.List<T> list);
            static /*0x1ffc854*/ T LastOrDefault<T>(System.Collections.Generic.List<T> list);
            static /*0x1ffc854*/ T GetRandom<T>(System.Collections.Generic.List<T> list);
            static /*0x1ffc854*/ T RemoveRandom<T>(System.Collections.Generic.List<T> list);
            static /*0x1f36f18*/ void Shuffle<T>(System.Collections.Generic.IList<T> list, System.Random rng);
            static /*0x1f3299c*/ string Join<T>(System.Collections.Generic.IList<T> list, string separator, System.Func<T, string> toString);
            static /*0x1f31840*/ bool IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T> collection);
            static /*0x1f31840*/ bool IsNullOrEmpty<T>(System.Collections.Generic.List<T> collection);
            static /*0x1f31f88*/ int SafeCount<T>(System.Collections.Generic.List<T> collection);
            static /*0x1f31840*/ bool IsNullOrEmpty<T>(T[] collection);
            static /*0x1f31840*/ bool IsNullOrEmpty<T>(RedCrow.Collections.WorryFreeList<T> collection);
            static /*0x1f36244*/ void RemoveAtBySwapBack<T>(System.Collections.Generic.List<T> list, int index);
            static /*0x1ffc854*/ void RemoveBySwapBack<T>(System.Collections.Generic.List<T> list, T item);
            static /*0x1f318fc*/ bool OrderedEquals<T>(System.Collections.Generic.List<T> x, System.Collections.Generic.List<T> y);
            static /*0x1ffc854*/ T ExtractFirstIfExists<T>(RedCrow.Collections.WorryFreeList<T> list);
            static /*0x24d697c*/ void Invoke(RedCrow.Collections.WorryFreeList<System.Action> list);
            static /*0x1ffc854*/ void Invoke<T>(RedCrow.Collections.WorryFreeList<System.Action<T>> list, T arg);
            static /*0x24d6a38*/ void InvokeIfNotNull(RedCrow.Collections.WorryFreeList<System.Action> list);
            static /*0x1ffc854*/ void InvokeIfNotNull<T>(RedCrow.Collections.WorryFreeList<System.Action<T>> list, T arg);
            static /*0x1f327cc*/ T[] GetUndocumentedInternalArray<T>(System.Collections.Generic.List<T> list);

            class ReflectionCache<T>
            {
                static /*0x0*/ System.Reflection.FieldInfo ItemsFieldInfo;
            }
        }

        class ListUtils
        {
            static /*0x1ffc854*/ bool ContainsReference<T>(System.Collections.Generic.List<T> list, T obj);
        }

        class Pair<TFirst, TSecond>
        {
            /*0x0*/ TFirst First;
            /*0x0*/ TSecond Second;

            /*0x1f309e4*/ Pair();
            /*0x1ffc854*/ Pair(TFirst first, TSecond second);
        }

        class WorryFreeList<T>
        {
            static int DefaultCapacity = 8;
            static /*0x0*/ T[] s_emptyArray;
            /*0x0*/ int m_nextIndex;
            /*0x0*/ int m_endIndex;
            /*0x0*/ T[] Data;
            /*0x0*/ int Count;

            static /*0x1f33998*/ WorryFreeList();
            /*0x1f30b78*/ WorryFreeList(int capacity);
            /*0x1f309e4*/ WorryFreeList();
            /*0x1f30ebc*/ WorryFreeList(T[] items);
            /*0x1ffc854*/ T get_Item(int i);
            /*0x1ffc854*/ void set_Item(int i, T value);
            /*0x1f2ffc8*/ int get_Capacity();
            /*0x1f30b78*/ void set_Capacity(int value);
            /*0x1f309e4*/ void StartIteration();
            /*0x1f309e4*/ void ForceStartIteration();
            /*0x1f309e4*/ void BreakIteration();
            /*0x1f2fec8*/ bool NextIteration(ref int index);
            /*0x1f30b78*/ void AllocateMore(int desiredSize);
            /*0x1ffc854*/ void Add(T item);
            /*0x1f30ee8*/ void AddRange(T[] items, int length);
            /*0x1f30ebc*/ void AddRange(T[] items);
            /*0x1ffc854*/ void Insert(int index, T item);
            /*0x1f30b78*/ void RemoveAt(int index);
            /*0x1f309e4*/ void Clear();
            /*0x1ffc854*/ int IndexOf(T item);
            /*0x1ffc854*/ int IndexOfOpt(T item);
            /*0x1ffc854*/ bool Contains(T item);
            /*0x1ffc854*/ void Remove(T item);
            /*0x1ffc854*/ bool RemoveIfExists(T item);
            /*0x1f30b78*/ void RemoveAtBySwapBack(int index);
            /*0x1ffc854*/ void RemoveBySwapBack(T item);
            /*0x1ffc854*/ bool RemoveIfExistsBySwapBack(T item);
            /*0x1f309e4*/ void Sort();
            /*0x1f30ebc*/ void Sort(System.Collections.Generic.IComparer<T> comparer);
            /*0x1ffc854*/ int BinarySearch(T item);
            /*0x1ffc854*/ int BinarySearch(T item, System.Collections.Generic.IComparer<T> comparer);
        }
    }

    namespace States
    {
        interface IStateTransitionIntent
        {
            /*0x1f30ff0*/ void AddExtra(object key, object value);
            /*0x1f2fec8*/ bool HasExtra(object key);
            /*0x1f30394*/ object GetExtra(object key, object defaultValue);
        }

        class StateTransitionIntent : RedCrow.States.IStateTransitionIntent
        {
            /*0x10*/ System.Collections.Generic.Dictionary<object, object> m_extras;

            /*0x24d6a44*/ StateTransitionIntent();
            /*0x24d6acc*/ void AddExtra(object key, object value);
            /*0x24d6b34*/ bool HasExtra(object key);
            /*0x24d6b8c*/ object GetExtra(object key, object defaultValue);
        }
    }
}

namespace Odin
{
    class ColorModel : RedCrow.UI.UUIF.DataProviding.Models.ModelBase
    {
        /*0xa4*/ UnityEngine.Color <ColorValue>k__BackingField;

        /*0x24d6cb8*/ ColorModel(string name, UnityEngine.Color colorValue);
        /*0x24d6c2c*/ UnityEngine.Color get_ColorValue();
        /*0x24d6c38*/ void set_ColorValue(UnityEngine.Color value);
        /*0x24d6c44*/ void SetValue(UnityEngine.Color value);
        /*0x24d6cf8*/ RedCrow.UI.UUIF.DataProviding.Models.ModelBase Clone();
        /*0x24d6d70*/ Odin.ColorModel CloneToSameType();
        /*0x24d6de8*/ void DeepCopyFrom(RedCrow.UI.UUIF.DataProviding.Models.ModelBase other);
    }

    enum ImageType
    {
        Default = 0,
        Small = 1,
    }

    interface IImageModel : RedCrow.UI.UUIF.DataProviding.Models.IUIModel, RedCrow.UI.UUIF.DataProviding.IUIDataProvider, RedCrow.UI.UUIF.DataProviding.Models.INotifyPropertyChanged, System.IComparable<RedCrow.UI.UUIF.DataProviding.Models.IUIModel>
    {
        /*0x1f30240*/ string GetImageName(Odin.ImageType imageType);
    }

    interface IServiceContext
    {
        /*0x1ffc854*/ T GetProvider<T>(bool required);
        /*0x1f2fec8*/ bool TryGetServiceProvider<T>(ref T provider);
        /*0x1ffc854*/ void RegisterServiceProvider<T>(T provider, System.Type type);
        /*0x1ffc854*/ void UnregisterServiceProvider<T>(T provider, System.Type type);
        /*0x1f309e4*/ void ClearServiceProviders();
    }

    interface IUILayerService
    {
        /*0x1f30ebc*/ void add_LayerUnregistered(RedCrow.UI.UUIF.Core.UILayerManager.LayerChangeDelegate value);
        /*0x1f30ebc*/ void remove_LayerUnregistered(RedCrow.UI.UUIF.Core.UILayerManager.LayerChangeDelegate value);
        void RegisterLayer(RedCrow.UI.UUIF.Core.UILayer layer, bool isDefaultLayer);
        /*0x1f30ebc*/ void UnregisterLayer(RedCrow.UI.UUIF.Core.UILayer layer);
        /*0x1f309e4*/ void UnregisterAllLayers();
        /*0x1f2fec8*/ bool HasLayer(string layerId);
        /*0x1f302cc*/ RedCrow.UI.UUIF.Core.UILayer GetLayer(string layerId);
        /*0x1f2fec8*/ bool HideLayer(string layerId);
        /*0x1f2fec8*/ bool ShowLayer(string layerId);
        void RegisterForScrim(string requestedScrimLayer, int requestedScrimType, float requestedAnimationTime);
        void UnregisterForScrim(string requestedScrimLayer, int requestedScrimType, float requestedAnimationTime);
        /*0x1f2ff00*/ bool SetContentLayer(RedCrow.UI.UUIF.Core.LayerContent content, string layerId);
        /*0x1f2fec8*/ bool SetContentToDefaultLayer(RedCrow.UI.UUIF.Core.LayerContent content);
        /*0x1f30ebc*/ void SetScrimProvider(RedCrow.UI.UUIF.Core.ScrimProviderBase scrimProvider);
        /*0x1f2fe80*/ bool DispatchLayerEvent(int eventId, object[] eventParameters);
    }

    interface IUIPanelService : RedCrow.UI.UUIF.Core.IStatefulPanelManager, RedCrow.UI.UUIF.Core.IPanelManager
    {
        /*0x1f30c88*/ void RequestPanelActivation(int callerId, string panelId);
    }

    interface IUIPopupService
    {
        /*0x1f30ebc*/ void add_PopupActivated(System.Action<string, int> value);
        /*0x1f30ebc*/ void remove_PopupActivated(System.Action<string, int> value);
        /*0x1f30ebc*/ void add_PopupDeactivated(System.Action<string, int> value);
        /*0x1f30ebc*/ void remove_PopupDeactivated(System.Action<string, int> value);
        /*0x1f300c4*/ int ActivateGenericMessageBox(Yeti.GenericMessageBoxParameters parameters, System.Action defaultAction, string overridePrefab);
        /*0x1f300c4*/ int ActivateGenericMessageBox(Yeti.GenericMessageBoxParameters parameters, Yeti.GenericMessageBoxOption[] options, string overridePrefab);
        int ActivateErrorMessageBox(Yeti.GenericMessageBoxParameters parameters, Yeti.GenericMessageBoxOption[] options);
        /*0x1f3008c*/ int ActivateQuitConfirmationPopup(string reason);
        int ActivatePopup(string popupId, string layerId, RedCrow.UI.UUIF.Core.PopupInitializationDetails initializationObject, RedCrow.UI.UUIF.Core.PopupPosition insertionPosition);
        bool DeactivatePopup(string layerId, int popupInstanceId);
        /*0x1f309e4*/ void DeactivateAllPopups();
        /*0x1f2fe40*/ bool IsPopupActive(int popupInstanceId);
        /*0x1f2fe14*/ bool IsAnyPopupActive();
        /*0x1f2fe40*/ bool IsPopupDisplayed(int popupInstanceId);
        /*0x1f2fe14*/ bool AreAnyPopupsInTransition();
        /*0x1f30ebc*/ void RegisterPopupProvider(RedCrow.UI.UUIF.Core.IPopupProvider popupProvider);
        int DisplayZeroButtonGlobalPopup(string title, string message, bool localizeLabels, string overridePrefab, PvzN3xt.UI.UILayerType layerType);
        int DisplayOneButtonGlobalPopup(string title, string message, System.Action buttonCallback, string buttonText, bool localizeLabels, string overridePrefab, PvzN3xt.UI.UILayerType layerType);
        int DisplayTwoButtonGlobalPopup(string title, string message, string buttonOneText, string buttonTwoText, System.Action buttonOneCallback, System.Action buttonTwoCallback, bool localizeLabels, string overridePrefab, PvzN3xt.UI.UILayerType layerType);
        int DisplaySystemDialog(string title, string message, System.Action buttonCallback, string buttonText, bool localizeLabels, bool cancelable, System.Action cancelCallback);
        int DisplaySystemDialog(string title, string message, System.Action buttonCallback, string buttonText, bool shouldSendTelemetryData, string dialogTelemetryData, string buttonTelemetryData, bool localizeTitle, bool localizeMessage, bool localizeButton, bool cancelable, System.Action cancelCallback);
    }

    class RedCrowScrollRect : UnityEngine.EventSystems.UIBehaviour, UnityEngine.EventSystems.IInitializePotentialDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IScrollHandler, UnityEngine.UI.ICanvasElement, UnityEngine.UI.ILayoutElement, UnityEngine.UI.ILayoutGroup, UnityEngine.UI.ILayoutController
    {
        /*0x20*/ UnityEngine.RectTransform m_Content;
        /*0x28*/ bool m_Horizontal;
        /*0x29*/ bool m_Vertical;
        /*0x2c*/ Odin.RedCrowScrollRect.MovementType m_MovementType;
        /*0x30*/ float m_Elasticity;
        /*0x34*/ bool m_Inertia;
        /*0x38*/ float m_DecelerationRate;
        /*0x3c*/ float m_ScrollSensitivity;
        /*0x40*/ UnityEngine.RectTransform m_Viewport;
        /*0x48*/ UnityEngine.UI.Scrollbar m_HorizontalScrollbar;
        /*0x50*/ UnityEngine.UI.Scrollbar m_VerticalScrollbar;
        /*0x58*/ Odin.RedCrowScrollRect.ScrollbarVisibility m_HorizontalScrollbarVisibility;
        /*0x5c*/ Odin.RedCrowScrollRect.ScrollbarVisibility m_VerticalScrollbarVisibility;
        /*0x60*/ float m_HorizontalScrollbarSpacing;
        /*0x64*/ float m_VerticalScrollbarSpacing;
        /*0x68*/ Odin.RedCrowScrollRect.ScrollRectEvent m_OnValueChanged;
        /*0x70*/ UnityEngine.Vector2 m_PointerStartLocalCursor;
        /*0x78*/ UnityEngine.Vector2 m_ContentStartPosition;
        /*0x80*/ bool m_isRebuilding;
        /*0x88*/ UnityEngine.RectTransform m_ViewRect;
        /*0x90*/ UnityEngine.Bounds m_ContentBounds;
        /*0xa8*/ UnityEngine.Bounds m_ViewBounds;
        /*0xc0*/ UnityEngine.Vector2 m_Velocity;
        /*0xc8*/ bool m_Dragging;
        /*0xcc*/ UnityEngine.Vector2 m_PrevPosition;
        /*0xd4*/ UnityEngine.Bounds m_PrevContentBounds;
        /*0xec*/ UnityEngine.Bounds m_PrevViewBounds;
        /*0x104*/ bool m_HasRebuiltLayout;
        /*0x105*/ bool m_HSliderExpand;
        /*0x106*/ bool m_VSliderExpand;
        /*0x108*/ float m_HSliderHeight;
        /*0x10c*/ float m_VSliderWidth;
        /*0x110*/ UnityEngine.RectTransform m_Rect;
        /*0x118*/ UnityEngine.RectTransform m_HorizontalScrollbarRect;
        /*0x120*/ UnityEngine.RectTransform m_VerticalScrollbarRect;
        /*0x128*/ UnityEngine.DrivenRectTransformTracker m_Tracker;
        /*0x12c*/ float <flexibleWidth>k__BackingField;
        /*0x130*/ UnityEngine.Vector3[] m_Corners;

        static /*0x24d8b08*/ float RubberDelta(float overStretching, float viewSize);
        /*0x24d765c*/ RedCrowScrollRect();
        /*0x24d6f30*/ UnityEngine.RectTransform get_content();
        /*0x24d6f38*/ void set_content(UnityEngine.RectTransform value);
        /*0x24d6f40*/ bool get_horizontal();
        /*0x24d6f48*/ void set_horizontal(bool value);
        /*0x24d6f50*/ bool get_vertical();
        /*0x24d6f58*/ void set_vertical(bool value);
        /*0x24d6f60*/ Odin.RedCrowScrollRect.MovementType get_movementType();
        /*0x24d6f68*/ void set_movementType(Odin.RedCrowScrollRect.MovementType value);
        /*0x24d6f70*/ float get_elasticity();
        /*0x24d6f78*/ void set_elasticity(float value);
        /*0x24d6f80*/ bool get_inertia();
        /*0x24d6f88*/ void set_inertia(bool value);
        /*0x24d6f90*/ float get_decelerationRate();
        /*0x24d6f98*/ void set_decelerationRate(float value);
        /*0x24d6fa0*/ float get_scrollSensitivity();
        /*0x24d6fa8*/ void set_scrollSensitivity(float value);
        /*0x24d6fb0*/ UnityEngine.RectTransform get_viewport();
        /*0x24d6fb8*/ void set_viewport(UnityEngine.RectTransform value);
        /*0x24d708c*/ UnityEngine.UI.Scrollbar get_horizontalScrollbar();
        /*0x24d7094*/ void set_horizontalScrollbar(UnityEngine.UI.Scrollbar value);
        /*0x24d7224*/ UnityEngine.UI.Scrollbar get_verticalScrollbar();
        /*0x24d722c*/ void set_verticalScrollbar(UnityEngine.UI.Scrollbar value);
        /*0x24d73bc*/ Odin.RedCrowScrollRect.ScrollbarVisibility get_horizontalScrollbarVisibility();
        /*0x24d73c4*/ void set_horizontalScrollbarVisibility(Odin.RedCrowScrollRect.ScrollbarVisibility value);
        /*0x24d73cc*/ Odin.RedCrowScrollRect.ScrollbarVisibility get_verticalScrollbarVisibility();
        /*0x24d73d4*/ void set_verticalScrollbarVisibility(Odin.RedCrowScrollRect.ScrollbarVisibility value);
        /*0x24d73dc*/ float get_horizontalScrollbarSpacing();
        /*0x24d73e4*/ void set_horizontalScrollbarSpacing(float value);
        /*0x24d7474*/ float get_verticalScrollbarSpacing();
        /*0x24d747c*/ void set_verticalScrollbarSpacing(float value);
        /*0x24d7484*/ Odin.RedCrowScrollRect.ScrollRectEvent get_onValueChanged();
        /*0x24d748c*/ void set_onValueChanged(Odin.RedCrowScrollRect.ScrollRectEvent value);
        /*0x24d7494*/ UnityEngine.RectTransform get_viewRect();
        /*0x24d75a4*/ UnityEngine.Vector2 get_velocity();
        /*0x24d75ac*/ void set_velocity(UnityEngine.Vector2 value);
        /*0x24d75b4*/ UnityEngine.RectTransform get_rectTransform();
        /*0x24d77c8*/ void Rebuild(UnityEngine.UI.CanvasUpdate executing);
        /*0x24d802c*/ void LayoutComplete();
        /*0x24d8030*/ void GraphicUpdateComplete();
        /*0x24d7858*/ void UpdateCachedData();
        /*0x24d8034*/ void OnEnable();
        /*0x24d81d8*/ void OnDisable();
        /*0x24d8404*/ bool IsActive();
        /*0x24d8484*/ void EnsureLayoutHasRebuilt();
        /*0x24d84f8*/ void StopMovement();
        /*0x24d8548*/ void OnScroll(UnityEngine.EventSystems.PointerEventData data);
        /*0x24d8784*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x24d87e4*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x24d8910*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x24d8930*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x24d8b40*/ void SetContentAnchoredPosition(UnityEngine.Vector2 position);
        /*0x24d8bf4*/ void LateUpdate();
        /*0x24d7f54*/ void UpdatePrevData();
        /*0x24d7dc4*/ void UpdateScrollbars(UnityEngine.Vector2 offset);
        /*0x24d9318*/ UnityEngine.Vector2 get_normalizedPosition();
        /*0x24d9400*/ void set_normalizedPosition(UnityEngine.Vector2 value);
        /*0x24d9348*/ float get_horizontalNormalizedPosition();
        /*0x24d96ec*/ void set_horizontalNormalizedPosition(float value);
        /*0x24d93a4*/ float get_verticalNormalizedPosition();
        /*0x24d96f4*/ void set_verticalNormalizedPosition(float value);
        /*0x24d96fc*/ void SetHorizontalNormalizedPosition(float value);
        /*0x24d9704*/ void SetVerticalNormalizedPosition(float value);
        /*0x24d9430*/ void SetNormalizedPosition(float value, int axis);
        /*0x24d970c*/ void OnRectTransformDimensionsChange();
        /*0x24d9710*/ bool get_hScrollingNeeded();
        /*0x24d9798*/ bool get_vScrollingNeeded();
        /*0x24d9820*/ void CalculateLayoutInputHorizontal();
        /*0x24d9824*/ void CalculateLayoutInputVertical();
        /*0x24d9828*/ float get_minWidth();
        /*0x24d9830*/ float get_preferredWidth();
        /*0x24d9838*/ float get_flexibleWidth();
        /*0x24d9840*/ void set_flexibleWidth(float value);
        /*0x24d9848*/ float get_minHeight();
        /*0x24d9850*/ float get_preferredHeight();
        /*0x24d9858*/ float get_flexibleHeight();
        /*0x24d9860*/ int get_layoutPriority();
        /*0x24d9868*/ void SetLayoutHorizontal();
        /*0x24d9f48*/ void SetLayoutVertical();
        /*0x24d91ac*/ void UpdateScrollbarVisibility();
        /*0x24d9ffc*/ void UpdateScrollbarLayout();
        /*0x24d7bb0*/ void UpdateBounds();
        /*0x24da25c*/ void OnBoundsUpdated(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        /*0x24da260*/ void OnBoundsUpdateComplete(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        /*0x24d9d40*/ UnityEngine.Bounds GetBounds();
        /*0x24d8688*/ UnityEngine.Vector2 CalculateOffset(UnityEngine.Vector2 delta);
        /*0x24d73ec*/ void SetDirty();
        /*0x24d6fd4*/ void SetDirtyCaching();
        /*0x24da264*/ UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform();

        enum MovementType
        {
            Unrestricted = 0,
            Elastic = 1,
            Clamped = 2,
        }

        enum ScrollbarVisibility
        {
            Permanent = 0,
            AutoHide = 1,
            AutoHideAndExpandViewport = 2,
        }

        class ScrollRectEvent : UnityEngine.Events.UnityEvent<UnityEngine.Vector2>
        {
            /*0x24d7780*/ ScrollRectEvent();
        }
    }

    class FlexibleHorizontalScrollList : Odin.FlexibleScrollRect
    {
        /*0x180*/ bool m_isGridLayout;
        /*0x181*/ bool m_isFlexibleGrid;
        /*0x184*/ float m_gridCellSize;
        /*0x188*/ float m_spacing;
        /*0x18c*/ float m_gridCellSizeWithSpacing;
        /*0x190*/ int m_lastBoundsUpdatedFrame;

        /*0x24dab00*/ FlexibleHorizontalScrollList();
        /*0x24da26c*/ void Awake();
        /*0x24da488*/ float GetScrollItemSizeInScrollDimension(Odin.IScrollListItem item);
        /*0x24da548*/ void OnBoundsUpdated(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        /*0x24da9f8*/ void OffsetView(float offsetAmount);
        /*0x24daa88*/ void ResetContentPosition();
        /*0x24daabc*/ void ResetContentSize();
        /*0x24daaf0*/ bool AreItemSizesDynamic();
    }

    class FlexibleScrollRect : Odin.RedCrowScrollRect
    {
        /*0x138*/ float PreloadDistance;
        /*0x13c*/ bool ReverseDirection;
        /*0x140*/ Odin.FlexibleScrollRect.ListPosition InitialPosition;
        /*0x144*/ bool StaggerItemPopulation;
        /*0x148*/ UnityEngine.GameObject StagingArea;
        /*0x150*/ Odin.IDynamicScrollListItemFactory m_itemFactory;
        /*0x158*/ System.Collections.Generic.List<Odin.IScrollListItem> m_activeItems;
        /*0x160*/ Odin.IScrollListItem m_stagingItem;
        /*0x168*/ int m_firstItemDataIndex;
        /*0x16c*/ int m_minDataIndex;
        /*0x170*/ int m_maxDataIndex;
        /*0x174*/ int m_numFixedDimensionItems;
        /*0x178*/ bool m_isDynamicScrollingEnabled;
        /*0x179*/ bool m_isRepopulating;
        /*0x17c*/ float m_originalElasticity;

        /*0x24dab0c*/ FlexibleScrollRect();
        /*0x24daba0*/ bool get_IsDynamicScrollingEnabled();
        /*0x24daba8*/ bool get_IsRepopulating();
        /*0x24dabb0*/ int get_FirstItemDataIndex();
        /*0x24dabb8*/ int get_LastItemDataIndex();
        /*0x24da654*/ bool get_IsDataRangeEmpty();
        /*0x24dac0c*/ void EnableDynamicScrolling(Odin.IDynamicScrollListItemFactory itemFactory, int minDataIndex, int maxDataIndex);
        /*0x24dae24*/ void EnableDynamicScrolling(Odin.IDynamicScrollListItemFactory itemFactory, int minDataIndex, int maxDataIndex, Odin.FlexibleScrollRect.ListPosition initialPosition);
        /*0x24dae98*/ void DisableDynamicScrolling();
        /*0x24dafcc*/ void LateUpdate();
        /*0x24dac70*/ void SetDataRange(int minDataIndex, int maxDataIndex, bool forceResetScroll);
        /*0x24dacf0*/ void Repopulate(Odin.FlexibleScrollRect.ListPosition initialPosition);
        /*0x24db128*/ void RemoveItemsOutOfRange();
        /*0x24db2c0*/ int AddItemsAtBeginning(ref float emptySpace, float offsetExclusion, System.Collections.Generic.List<Odin.IScrollListItem> itemsToRecycle);
        /*0x24db66c*/ int AddItemsAtEnd(ref float emptySpace, System.Collections.Generic.List<Odin.IScrollListItem> itemsToRecycle);
        /*0x24db588*/ Odin.IScrollListItem AddItem(int dataIndex, bool atBeginning, System.Collections.Generic.List<Odin.IScrollListItem> itemsToRecycle);
        /*0x24db7a8*/ Odin.IScrollListItem AddItem(int dataIndex, bool atBeginning, Odin.IScrollListItem itemToRecycle);
        /*0x24dbaf4*/ void PlaceItemInContent(Odin.IScrollListItem item, bool atBeginning);
        /*0x24db9a0*/ void PlaceItemInStagingArea(Odin.IScrollListItem item);
        /*0x24da668*/ bool UpdateItems(float emptySpaceAtTopOrLeft, float emptySpaceAtBottomOrRight);
        /*0x24dc050*/ Odin.IScrollListItem PlaceStagingItem(ref float itemSize);
        /*0x24db014*/ bool AlignContentToView();
        /*0x24dc414*/ System.Collections.Generic.List<Odin.IScrollListItem> RemoveItemsAtBeginning(float overage);
        /*0x24dc5f4*/ System.Collections.Generic.List<Odin.IScrollListItem> RemoveItemsAtEnd(float overage);
        /*0x24daea0*/ void ClearItems();
        /*0x24db468*/ void ReleaseItem(Odin.IScrollListItem item);
        /*0x24dc788*/ void ForceItemToPreferredSize(Odin.IScrollListItem item);
        void OffsetView(float offsetAmount);
        float GetScrollItemSizeInScrollDimension(Odin.IScrollListItem item);
        /*0x1f309e4*/ void ResetContentPosition();
        /*0x1f309e4*/ void ResetContentSize();
        /*0x1f2fe14*/ bool AreItemSizesDynamic();

        enum ListPosition
        {
            Beginning = 0,
            End = 1,
        }
    }

    class FlexibleScrollRectVisibilityToggler : UnityEngine.MonoBehaviour
    {
        static float ALPHA_FULL = 1;
        static float ALPHA_NONE = 0;
        /*0x20*/ float ToggleDuration;
        /*0x28*/ Odin.FlexibleScrollRect m_scrollRect;
        /*0x30*/ UnityEngine.CanvasGroup m_canvasGroup;
        /*0x38*/ bool m_isShowingCanvasGroup;
        /*0x40*/ DG.Tweening.Tweener m_tween;

        /*0x24dcca4*/ FlexibleScrollRectVisibilityToggler();
        /*0x24dc96c*/ void OnEnable();
        /*0x24dcad8*/ void Update();
        /*0x24dcb5c*/ void SetCanvasGroupAlpha(float targetAlpha);
        /*0x24dcc04*/ void SetShown();
        /*0x24dcaac*/ void SetHidden();
        /*0x24dcc74*/ void OnDisable();
        /*0x24dcc3c*/ void StopTween();
    }

    class FlexibleVerticalScrollList : Odin.FlexibleScrollRect
    {
        /*0x180*/ bool m_isGridLayout;
        /*0x181*/ bool m_isFlexibleGrid;
        /*0x184*/ float m_gridCellSize;
        /*0x188*/ float m_spacing;
        /*0x18c*/ float m_gridCellSizeWithSpacing;
        /*0x190*/ int m_lastBoundsUpdatedFrame;

        /*0x24dd194*/ FlexibleVerticalScrollList();
        /*0x24dccb8*/ void Awake();
        /*0x24dced4*/ float GetScrollItemSizeInScrollDimension(Odin.IScrollListItem item);
        /*0x24dcf94*/ void OnBoundsUpdated(UnityEngine.Bounds viewBounds, UnityEngine.Bounds contentBounds);
        /*0x24dd0a0*/ void OffsetView(float offsetAmount);
        /*0x24dd11c*/ void ResetContentPosition();
        /*0x24dd150*/ void ResetContentSize();
        /*0x24dd184*/ bool AreItemSizesDynamic();
    }

    interface IDynamicScrollListItemFactory
    {
        Odin.IScrollListItem GetScrollListItem(int index, Odin.IScrollListItem oldItem);
        /*0x1f30c88*/ void InitializeScrollListItem(int index, Odin.IScrollListItem item);
        /*0x1f30ebc*/ void ReleaseScrollListItem(Odin.IScrollListItem item);
    }

    interface IScrollListItem
    {
        /*0x1f2fe14*/ bool get_IsInitialized();
        /*0x1f30804*/ float GetItemHeight();
        /*0x1f30804*/ float GetItemWidth();
        /*0x1f2ffc8*/ int get_Index();
        /*0x1f30b78*/ void set_Index(int value);
        /*0x1f30214*/ UnityEngine.GameObject get_GameObject();
        /*0x1f30214*/ UnityEngine.RectTransform get_RectTransform();
        /*0x1f309e4*/ void Cleanup();
    }

    class Vector3Model : RedCrow.UI.UUIF.DataProviding.Models.ModelBase
    {
        /*0xa4*/ UnityEngine.Vector3 <Vector3Value>k__BackingField;

        /*0x24dd220*/ Vector3Model(string name, UnityEngine.Vector3 vector3Value);
        /*0x24dd1a0*/ UnityEngine.Vector3 get_Vector3Value();
        /*0x24dd1ac*/ void set_Vector3Value(UnityEngine.Vector3 value);
        /*0x24dd1b8*/ void SetValue(UnityEngine.Vector3 value);
        /*0x24dd25c*/ RedCrow.UI.UUIF.DataProviding.Models.ModelBase Clone();
        /*0x24dd2d4*/ Odin.Vector3Model CloneToSameType();
        /*0x24dd34c*/ void DeepCopyFrom(RedCrow.UI.UUIF.DataProviding.Models.ModelBase other);
    }

    namespace Navigation
    {
        class HierarchicalNavigationState : RedCrow.Stately.Core.StatelyBehaviour
        {
            /*0x38*/ Yeti.INavigationService _navigationManager;
            /*0x40*/ Odin.Navigation.HierarchicalNavigationState m_parentState;

            /*0x24dd688*/ HierarchicalNavigationState();
            void OnUpdate(float fDeltaTime);
            /*0x1f309e4*/ void OnEnter();
            /*0x1f309e4*/ void OnLeave();
            /*0x24dd49c*/ bool OnEvent(Yeti.StateEvent evt);
            /*0x24dd4a4*/ void DoTransition(string strTransition);
            /*0x1ffc854*/ TParent GetParentOfType<TParent>();
            /*0x24dd550*/ void OnStateEnter();
            /*0x24dd668*/ void OnStateLeave();
            /*0x24dd678*/ void OnStateUpdate(float deltaTime);
        }

        class NavigationRequestWithIntent : RedCrow.UI.UUIF.Navigation.NavigationRequest
        {
            /*0x18*/ RedCrow.States.IStateTransitionIntent <TransitionIntent>k__BackingField;

            /*0x24dd6a0*/ NavigationRequestWithIntent(string transitionName, RedCrow.States.IStateTransitionIntent transitionIntent);
            /*0x24dd690*/ RedCrow.States.IStateTransitionIntent get_TransitionIntent();
            /*0x24dd698*/ void set_TransitionIntent(RedCrow.States.IStateTransitionIntent value);
        }
    }

    namespace Services
    {
        namespace Expression
        {
            class BasicExpressionParserService : Odin.Services.Expression.IBasicExpressionParserService
            {
                /*0x10*/ Odin.Expression.Parser.BasicExpressionParser m_basicExpressionParser;

                /*0x24dd6d8*/ BasicExpressionParserService();
                /*0x24dd6d0*/ Odin.Expression.Parser.BasicExpressionParser GetExpressionParser();
            }

            interface IBasicExpressionParserService
            {
                /*0x1f30214*/ Odin.Expression.Parser.BasicExpressionParser GetExpressionParser();
            }
        }
    }

    namespace Expression
    {
        interface IExpression
        {
            /*0x1f302cc*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
        }

        class ExpressionConstant : Odin.Expression.IExpression
        {
            /*0x10*/ Odin.Expression.Results.PreconvertedResult m_result;

            /*0x24de4b4*/ ExpressionConstant(string constantValue, bool forceString);
            /*0x24de5e8*/ ExpressionConstant(float constantValue);
            /*0x24de6c4*/ ExpressionConstant(bool constantValue);
            /*0x24de798*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
        }

        interface IExpressionContext
        {
            /*0x1f30214*/ string get_ContextId();
            /*0x1f2ffc8*/ int get_IndexedParametersCount();
            /*0x1f30240*/ object GetIndexedParameter(int idx);
        }

        class ExpressionContext : Odin.Expression.IExpressionContext
        {
            /*0x10*/ string <ContextId>k__BackingField;
            /*0x18*/ object[] m_indexedParameters;

            /*0x24de7c8*/ ExpressionContext(string contextId, object[] parameters);
            /*0x24de7a0*/ string get_ContextId();
            /*0x24de7a8*/ void set_ContextId(string value);
            /*0x24de7b0*/ int get_IndexedParametersCount();
            /*0x24de80c*/ object GetIndexedParameter(int idx);
        }

        class ExpressionParameter : Odin.Expression.IExpression
        {
            /*0x10*/ int m_parameterIndex;

            /*0x24de83c*/ ExpressionParameter(int index);
            /*0x24de864*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
        }

        namespace Results
        {
            class BoolResult : Odin.Expression.Results.IExpressionResult
            {
                /*0x10*/ bool m_resultValue;

                static /*0x24debb8*/ float ToNumber(bool value);
                static /*0x24debd4*/ string ToString(bool value);
                /*0x24deb38*/ BoolResult(bool value);
                /*0x24deb90*/ Odin.Expression.Results.ExpressionResultType get_ResultType();
                /*0x24deb98*/ bool AsBool();
                /*0x24deba0*/ float AsNumber();
                /*0x24debcc*/ string AsString();
            }

            enum ExpressionResultType
            {
                Unknown = 0,
                String = 1,
                Number = 2,
                Bool = 3,
            }

            interface IExpressionResult
            {
                /*0x1f30214*/ string AsString();
                /*0x1f2fe14*/ bool AsBool();
                /*0x1f30804*/ float AsNumber();
                /*0x1f2ffc8*/ Odin.Expression.Results.ExpressionResultType get_ResultType();
            }

            class NumberResult : Odin.Expression.Results.IExpressionResult
            {
                /*0x10*/ float m_resultValue;

                static /*0x24dec8c*/ bool ToBool(float value);
                static /*0x24decc0*/ string ToString(float value);
                /*0x24deb10*/ NumberResult(float value);
                /*0x24dec5c*/ Odin.Expression.Results.ExpressionResultType get_ResultType();
                /*0x24dec64*/ bool AsBool();
                /*0x24decb0*/ float AsNumber();
                /*0x24decb8*/ string AsString();
            }

            class PreconvertedResult : Odin.Expression.Results.IExpressionResult
            {
                /*0x10*/ float m_floatValue;
                /*0x18*/ string m_stringValue;
                /*0x20*/ bool m_boolValue;
                /*0x24*/ Odin.Expression.Results.ExpressionResultType <ResultType>k__BackingField;

                /*0x24de73c*/ PreconvertedResult(bool value);
                /*0x24de534*/ PreconvertedResult(string value, bool forceString);
                /*0x24de660*/ PreconvertedResult(float value);
                /*0x24ded28*/ Odin.Expression.Results.ExpressionResultType get_ResultType();
                /*0x24ded30*/ void set_ResultType(Odin.Expression.Results.ExpressionResultType value);
                /*0x24dee18*/ bool AsBool();
                /*0x24dee20*/ float AsNumber();
                /*0x24dee28*/ string AsString();
            }

            class StringResult : Odin.Expression.Results.IExpressionResult
            {
                /*0x10*/ string m_resultValue;

                static /*0x24dee40*/ bool ToBool(string value);
                static /*0x24ded74*/ bool ToBool(string value, ref bool isBoolean);
                static /*0x24ded38*/ float ToNumber(string value, ref bool conversionSucceeded);
                /*0x24deb60*/ StringResult(string value);
                /*0x24dee30*/ Odin.Expression.Results.ExpressionResultType get_ResultType();
                /*0x24dee38*/ bool AsBool();
                /*0x24dee90*/ float AsNumber();
                /*0x24deec0*/ string AsString();
            }
        }

        namespace Parser
        {
            class BasicBinaryOperator : Odin.Expression.Parser.ParsedBinaryOperator
            {
                /*0x28*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> m_consumeFunction;

                /*0x24deec8*/ BasicBinaryOperator(int precedenceValue, string symbol, Odin.Expression.Parser.ParsedOperator.OperatorAssociativity associativity, System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> consumeFunction);
                /*0x24def70*/ Odin.Expression.IExpression Consume(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
            }

            class BasicExpressionParser
            {
                /*0x10*/ Odin.Expression.Parser.ExpressionParser m_parser;
                /*0x18*/ System.Collections.Generic.Dictionary<string, Odin.Expression.IExpression> m_cache;

                /*0x24dd740*/ BasicExpressionParser();
                /*0x24df170*/ bool TryParseExpression(string contents, ref Odin.Expression.IExpression result);
                /*0x24df1fc*/ bool TryGetOrParseExpression(string contents, ref Odin.Expression.IExpression result);

                enum OperatorPrecedence
                {
                    BooleanLogic = 0,
                    ConditionalQuestion = 1,
                    ConditionalColon = 2,
                    NumericComparisons = 3,
                    Subtraction = 4,
                    Addition = 5,
                    Multiplication = 6,
                    Division = 7,
                    Exponent = 8,
                }

                class <>c
                {
                    static /*0x0*/ Odin.Expression.Parser.BasicExpressionParser.<> <>9;
                    static /*0x8*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_0;
                    static /*0x10*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_1;
                    static /*0x18*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_2;
                    static /*0x20*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_3;
                    static /*0x28*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_4;
                    static /*0x30*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_5;
                    static /*0x38*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_6;
                    static /*0x40*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_7;
                    static /*0x48*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_8;
                    static /*0x50*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_9;
                    static /*0x58*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_10;
                    static /*0x60*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_11;
                    static /*0x68*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_12;
                    static /*0x70*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_13;
                    static /*0x78*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression, Odin.Expression.IExpression> <>9__3_14;

                    static /*0x24df2ec*/ <>c();
                    /*0x24df354*/ <>c();
                    /*0x24df35c*/ Odin.Expression.IExpression <.ctor>b__3_0(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df408*/ Odin.Expression.IExpression <.ctor>b__3_1(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df4b4*/ Odin.Expression.IExpression <.ctor>b__3_2(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df560*/ Odin.Expression.IExpression <.ctor>b__3_3(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df60c*/ Odin.Expression.IExpression <.ctor>b__3_4(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df6b8*/ Odin.Expression.IExpression <.ctor>b__3_5(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df764*/ Odin.Expression.IExpression <.ctor>b__3_6(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df810*/ Odin.Expression.IExpression <.ctor>b__3_7(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df8bc*/ Odin.Expression.IExpression <.ctor>b__3_8(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24df968*/ Odin.Expression.IExpression <.ctor>b__3_9(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24dfa14*/ Odin.Expression.IExpression <.ctor>b__3_10(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24dfac0*/ Odin.Expression.IExpression <.ctor>b__3_11(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24dfb6c*/ Odin.Expression.IExpression <.ctor>b__3_12(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24dfc18*/ Odin.Expression.IExpression <.ctor>b__3_13(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                    /*0x24dfcc4*/ Odin.Expression.IExpression <.ctor>b__3_14(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                }
            }

            class BasicVariableValidator : Odin.Expression.Parser.IVariableValidator
            {
                /*0x24df0d0*/ BasicVariableValidator();
                /*0x24dfd70*/ int GetLength(string expressionString, int index, System.Func<string, int, bool> operatorCheckFunction);
                /*0x24dfdc4*/ int VariableLength(string expressionString, int startIndex, int endIndex, System.Func<string, int, bool> operatorCheckFunction);
                /*0x24dfec8*/ int numberLength(string expressionString, int index, int endIndex);
            }

            class ExpressionParser
            {
                /*0x10*/ Odin.Expression.Parser.ExpressionParser.OperatorStorage<Odin.Expression.Parser.ParsedBinaryOperator> m_binaryOperators;
                /*0x18*/ Odin.Expression.Parser.ExpressionParser.OperatorStorage<Odin.Expression.Parser.ParsedPrefixUnaryOperator> m_prefixUnaryOperators;
                /*0x20*/ Odin.Expression.Parser.ExpressionParser.OperatorStorage<Odin.Expression.Parser.ParsedPostfixUnaryOperator> m_postfixUnaryOperators;
                /*0x28*/ Odin.Expression.Parser.IVariableValidator <VariableValidator>k__BackingField;

                /*0x24defa0*/ ExpressionParser();
                /*0x24dff4c*/ Odin.Expression.Parser.IVariableValidator get_VariableValidator();
                /*0x24dff54*/ void set_VariableValidator(Odin.Expression.Parser.IVariableValidator value);
                /*0x24df0d8*/ void AddOperator(Odin.Expression.Parser.ParsedBinaryOperator binaryOperator);
                /*0x24dff5c*/ void AddOperator(Odin.Expression.Parser.ParsedPrefixUnaryOperator prefixOperator);
                /*0x24dffb4*/ void AddOperator(Odin.Expression.Parser.ParsedPostfixUnaryOperator postfixOperator);
                /*0x24df184*/ bool TryParseExpression(string expressionText, ref Odin.Expression.IExpression expression);
                /*0x24e02e4*/ int FindEndParenthesisTokenIndex(string expressionString, int index, int endIndex);
                /*0x24e0364*/ int NextTokenIndex(string expressionString, int index, int endIndex);
                /*0x24e03cc*/ Odin.Expression.Parser.ExpressionParser.ParsedParenthesesData ParseParentheses(string expressionString, int index, int endIndex, bool isPostfix);
                /*0x24e004c*/ Odin.Expression.Parser.ExpressionParser.ParsedExpressionData ParseExpression(int precedence, string expr, int index, int end, bool postfix);
                /*0x24e0b84*/ bool DoesStringMatchOperator(string expressionString, int startIndex);

                class Data
                {
                    /*0x10*/ int Index;

                    /*0x24e0c60*/ Data(int index);
                }

                class ParsedExpressionData : Odin.Expression.Parser.ExpressionParser.Data
                {
                    /*0x18*/ Odin.Expression.Parser.ParsedExpression Expression;

                    /*0x24e0a98*/ ParsedExpressionData(int index, Odin.Expression.Parser.ParsedExpression expression);
                }

                class ParsedParenthesesData : Odin.Expression.Parser.ExpressionParser.Data
                {
                    /*0x18*/ Odin.Expression.Parser.ParsedParentheses Parentheses;

                    /*0x24e0950*/ ParsedParenthesesData(int index, Odin.Expression.Parser.ParsedParentheses parentheses);
                }

                class OperatorStorage<TOperator>
                {
                    /*0x0*/ System.Collections.Generic.List<TOperator> m_storage;

                    /*0x1f309e4*/ OperatorStorage();
                    /*0x1ffc854*/ void AddOperator(TOperator op);
                    /*0x1ffc854*/ TOperator GetMatchingOperatorForString(string expressionString, int index);
                }
            }

            interface IVariableValidator
            {
                int GetLength(string expressionString, int index, System.Func<string, int, bool> operatorCheckFunction);
            }

            class LocExpressionParser : Odin.Expression.Parser.BasicExpressionParser
            {
                static string EXPRESSION_DELIMITER_START = "${";
                static int EXPRESSION_DELIMITER_START_SIZE = 2;
                static string EXPRESSION_DELIMITER_END = "}";
                static int EXPRESSION_DELIMITER_END_SIZE = 1;

                /*0x24e10bc*/ LocExpressionParser();
                /*0x24e0c88*/ bool TryParseLocString(string locString, string stringId, ref Odin.Expression.IExpression result);
                /*0x24e0ec4*/ bool TryExtractExpressionFromLocString(string locString, string stringId, ref Odin.Expression.Parser.LocExpressionParser.ExpressionExtractionResult result);

                class ExpressionExtractionResult
                {
                    /*0x10*/ string LeadingText;
                    /*0x18*/ string FollowingText;
                    /*0x20*/ Odin.Expression.IExpression Expression;

                    /*0x24e10b4*/ ExpressionExtractionResult();
                }
            }

            class LocPostfixUnaryOperator : Odin.Expression.Parser.ParsedPostfixUnaryOperator
            {
                /*0x28*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression> m_consumeFunction;

                /*0x24e10c0*/ LocPostfixUnaryOperator(int precedenceValue, string symbol, Odin.Expression.Parser.ParsedOperator.OperatorAssociativity associativity, System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression> consumeFunction);
                /*0x24e1168*/ Odin.Expression.IExpression Consume(Odin.Expression.IExpression operand);
            }

            class LocPrefixUnaryOperator : Odin.Expression.Parser.ParsedPrefixUnaryOperator
            {
                /*0x28*/ System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression> m_consumeFunction;

                /*0x24e1198*/ LocPrefixUnaryOperator(int precedenceValue, string symbol, Odin.Expression.Parser.ParsedOperator.OperatorAssociativity associativity, System.Func<Odin.Expression.IExpression, Odin.Expression.IExpression> consumeFunction);
                /*0x24e1240*/ Odin.Expression.IExpression Consume(Odin.Expression.IExpression operand);
            }

            class ParsedBinaryOperator : Odin.Expression.Parser.ParsedOperator
            {
                /*0x24def24*/ ParsedBinaryOperator(int precedenceValue, string symbol, Odin.Expression.Parser.ParsedOperator.OperatorAssociativity associativity);
                /*0x1f30394*/ Odin.Expression.IExpression Consume(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
            }

            class ParsedExpression : Odin.Expression.Parser.ParsedParentheses
            {
                /*0x10*/ Odin.Expression.Parser.ParsedParentheses m_firstParentheses;
                /*0x18*/ System.Collections.Generic.List<Odin.Expression.Parser.ParsedExpression.BinarySiblingParentheses> m_subsequentParentheses;

                /*0x24e09fc*/ ParsedExpression(Odin.Expression.Parser.ParsedParentheses firstParentheses, string expressionString, int expressionIndex);
                /*0x24e0ad0*/ void AddBinarySibling(Odin.Expression.Parser.ParsedBinaryOperator binaryOperator, Odin.Expression.Parser.ParsedParentheses siblingParentheses, int index);
                /*0x24e12c4*/ int get_Length();
                /*0x24e1394*/ Odin.Expression.IExpression Consume();

                struct BinarySiblingParentheses
                {
                    /*0x10*/ Odin.Expression.Parser.ParsedBinaryOperator Operator;
                    /*0x18*/ Odin.Expression.Parser.ParsedParentheses Parentheses;
                    /*0x20*/ int Index;
                }
            }

            class ParsedOperator
            {
                /*0x10*/ int <PrecedenceValue>k__BackingField;
                /*0x18*/ string <Symbol>k__BackingField;
                /*0x20*/ Odin.Expression.Parser.ParsedOperator.OperatorAssociativity <Associativity>k__BackingField;

                /*0x24e1270*/ ParsedOperator(int precedenceValue, string symbol, Odin.Expression.Parser.ParsedOperator.OperatorAssociativity associativity);
                /*0x24e148c*/ int get_PrecedenceValue();
                /*0x24e1494*/ void set_PrecedenceValue(int value);
                /*0x24e149c*/ string get_Symbol();
                /*0x24e14a4*/ void set_Symbol(string value);
                /*0x24e14ac*/ Odin.Expression.Parser.ParsedOperator.OperatorAssociativity get_Associativity();
                /*0x24e14b4*/ void set_Associativity(Odin.Expression.Parser.ParsedOperator.OperatorAssociativity value);
                /*0x24e0938*/ int get_Length();
                /*0x24e14bc*/ bool Equals(string expressionString, int index);
                /*0x24e156c*/ bool Equals(object obj);
                /*0x24e160c*/ bool Equals(Odin.Expression.Parser.ParsedOperator p);
                /*0x24e1638*/ int GetHashCode();

                enum OperatorAssociativity
                {
                    Left = 0,
                    Right = 1,
                }
            }

            class ParsedParentheses
            {
                /*0x24e12bc*/ ParsedParentheses();
                /*0x1f2ffc8*/ int get_Length();
                /*0x1f30214*/ Odin.Expression.IExpression Consume();
            }

            class ParsedPostfixUnaryOperator : Odin.Expression.Parser.ParsedOperator
            {
                /*0x24e111c*/ ParsedPostfixUnaryOperator(int precedenceValue, string symbol, Odin.Expression.Parser.ParsedOperator.OperatorAssociativity associativity);
                /*0x1f302cc*/ Odin.Expression.IExpression Consume(Odin.Expression.IExpression operand);
            }

            class ParsedPostfixUnaryParentheses : Odin.Expression.Parser.ParsedParentheses
            {
                /*0x10*/ Odin.Expression.Parser.ParsedParentheses m_parentheses;
                /*0x18*/ Odin.Expression.Parser.ParsedPostfixUnaryOperator m_operator;

                /*0x24e08f4*/ ParsedPostfixUnaryParentheses(Odin.Expression.Parser.ParsedParentheses parentheses, Odin.Expression.Parser.ParsedPostfixUnaryOperator parsedOperator);
                /*0x24e1650*/ int get_Length();
                /*0x24e168c*/ Odin.Expression.IExpression Consume();
            }

            class ParsedPrefixUnaryOperator : Odin.Expression.Parser.ParsedOperator
            {
                /*0x24e11f4*/ ParsedPrefixUnaryOperator(int precedenceValue, string symbol, Odin.Expression.Parser.ParsedOperator.OperatorAssociativity associativity);
                /*0x1f302cc*/ Odin.Expression.IExpression Consume(Odin.Expression.IExpression operand);
            }

            class ParsedPrefixUnaryParentheses : Odin.Expression.Parser.ParsedParentheses
            {
                /*0x10*/ Odin.Expression.Parser.ParsedParentheses m_parentheses;
                /*0x18*/ Odin.Expression.Parser.ParsedPrefixUnaryOperator m_operator;

                /*0x24e0988*/ ParsedPrefixUnaryParentheses(Odin.Expression.Parser.ParsedPrefixUnaryOperator parsedOperator, Odin.Expression.Parser.ParsedParentheses parentheses);
                /*0x24e16cc*/ int get_Length();
                /*0x24e1708*/ Odin.Expression.IExpression Consume();
            }

            class ParsedVariable : Odin.Expression.Parser.ParsedParentheses
            {
                /*0x10*/ string m_value;

                /*0x24e09cc*/ ParsedVariable(string value);
                /*0x24e1748*/ int get_Length();
                /*0x24e1760*/ Odin.Expression.IExpression Consume();
            }
        }

        namespace Operators
        {
            class AdditionOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24dfb28*/ AdditionOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e1930*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanAndOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df3c4*/ BooleanAndOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e1e94*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanEqualOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df51c*/ BooleanEqualOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e20cc*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanGreaterThanOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df674*/ BooleanGreaterThanOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e2648*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanGreaterThanOrEqualOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df720*/ BooleanGreaterThanOrEqualOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e2884*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanLessThanOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df7cc*/ BooleanLessThanOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e2ac0*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanLessThanOrEqualOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df878*/ BooleanLessThanOrEqualOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e2cfc*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanNotEqualOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df5c8*/ BooleanNotEqualOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e2f38*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class BooleanOrOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df470*/ BooleanOrOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e34c8*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class ConcatenationOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24e1070*/ ConcatenationOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e3700*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class ConditionalColonOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_trueOption;
                /*0x18*/ Odin.Expression.IExpression m_falseOption;

                /*0x24dfd2c*/ ConditionalColonOperator(Odin.Expression.IExpression trueOption, Odin.Expression.IExpression falseOption);
                /*0x24e3944*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context, bool isConditionTrue);
                /*0x24e3a40*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class ConditionalOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_conditionExpression;
                /*0x18*/ Odin.Expression.IExpression m_trueOption;
                /*0x20*/ Odin.Expression.IExpression m_falseOption;

                /*0x24e3ae8*/ ConditionalOperator(Odin.Expression.IExpression conditionExpression, Odin.Expression.IExpression trueOption, Odin.Expression.IExpression falseOption);
                /*0x24e3b48*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class ConditionalQuestionOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_conditionExpression;
                /*0x18*/ Odin.Expression.IExpression m_conditionalColonOperator;

                /*0x24dfc80*/ ConditionalQuestionOperator(Odin.Expression.IExpression conditionExpression, Odin.Expression.IExpression conditionalColonOperator);
                /*0x24e3d14*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class DivisionOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df9d0*/ DivisionOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e3ef0*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class ExponentOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24df924*/ ExponentOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e4128*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class MultiplicationOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24dfa7c*/ MultiplicationOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e4368*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class NumericNegationOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24e45a0*/ NumericNegationOperator(Odin.Expression.IExpression right);
                /*0x24e45d0*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }

            class SubtractionOperator : Odin.Expression.IExpression
            {
                /*0x10*/ Odin.Expression.IExpression m_leftExpression;
                /*0x18*/ Odin.Expression.IExpression m_rightExpression;

                /*0x24dfbd4*/ SubtractionOperator(Odin.Expression.IExpression left, Odin.Expression.IExpression right);
                /*0x24e4734*/ Odin.Expression.Results.IExpressionResult Evaluate(Odin.Expression.IExpressionContext context);
            }
        }
    }

    namespace UI
    {
        namespace Localization
        {
            class BinaryLocFileSerializer
            {
                static /*0x24e496c*/ bool SerializeDictionary(System.Collections.Generic.Dictionary<string, string> locDictionary, string fullFilePath);
                static /*0x24e5620*/ bool DeserializeDictionary(byte[] bytes, ref System.Collections.Generic.Dictionary<string, string> locDictionary);
                static /*0x24e5a78*/ bool DeserializeDictionary(string fullFilePath, ref System.Collections.Generic.Dictionary<string, string> locDictionary);
                static /*0x24e58dc*/ void DeserializeFromReader(System.IO.BinaryReader reader, System.Collections.Generic.Dictionary<string, string> locDictionary);
            }
        }

        namespace Components
        {
            namespace ScrollLists
            {
                class FlexibleScrollListItem : UnityEngine.MonoBehaviour, Odin.IScrollListItem
                {
                    /*0x20*/ bool IsSizeBasedOnLayout;
                    /*0x28*/ Yeti.ComponentObjectPool<Odin.UI.DataBinding.SmartBinders.BoundFlexibleScrollListItem> <SourcePool>k__BackingField;
                    /*0x30*/ int m_index;
                    /*0x38*/ UnityEngine.RectTransform m_cachedRectTransform;
                    /*0x40*/ int m_initializationCompleteFrame;

                    /*0x24e5e78*/ FlexibleScrollListItem();
                    /*0x24e5d38*/ Yeti.ComponentObjectPool<Odin.UI.DataBinding.SmartBinders.BoundFlexibleScrollListItem> get_SourcePool();
                    /*0x24e5d40*/ void set_SourcePool(Yeti.ComponentObjectPool<Odin.UI.DataBinding.SmartBinders.BoundFlexibleScrollListItem> value);
                    /*0x24e5d48*/ void Awake();
                    /*0x24e5db8*/ void Initialize();
                    /*0x24e5de4*/ float GetItemHeight();
                    /*0x24e5df0*/ float GetItemWidth();
                    /*0x24e5dfc*/ void Cleanup();
                    /*0x24e5e08*/ int get_Index();
                    /*0x24e5e10*/ void set_Index(int value);
                    /*0x24e5e18*/ bool get_IsInitialized();
                    /*0x24e5e68*/ UnityEngine.GameObject get_GameObject();
                    /*0x24e5e70*/ UnityEngine.RectTransform get_RectTransform();
                }
            }
        }

        namespace DataBinding
        {
            namespace SmartBinders
            {
                class DirectColorBinder : Yeti.UIBinderBase<Odin.ColorModel>
                {
                    /*0x78*/ UnityEngine.UI.Graphic[] GraphicsToChange;

                    /*0x24e5f58*/ DirectColorBinder();
                    /*0x24e5e90*/ void OnDataContextSet();
                    /*0x24e5f54*/ void PropertyChanged(string propertyName);
                    /*0x24e5e94*/ void SetColor();
                }

                class LayoutElementPropertyBinder : Yeti.UIBinderBase<RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel>
                {
                    static /*0x0*/ float FLEXIBLE_MULTIPLIER;
                    /*0x78*/ UnityEngine.UI.LayoutElement m_layoutElement;
                    /*0x80*/ Odin.UI.DataBinding.SmartBinders.LayoutElementPropertyBinder.Property PropertyToSet;
                    /*0x84*/ bool InvertBoolValue;

                    static /*0x24e634c*/ LayoutElementPropertyBinder();
                    /*0x24e6304*/ LayoutElementPropertyBinder();
                    /*0x24e5fa0*/ void Awake();
                    /*0x24e6028*/ void OnDataContextSet();
                    /*0x24e6300*/ void PropertyChanged(string propertyName);
                    /*0x24e602c*/ void SetFlexibleSize();

                    enum Property
                    {
                        FlexibleWidth = 0,
                        FlexibleHeight = 1,
                        PreferredWidth = 2,
                        PreferredHeight = 3,
                        IgnoreLayout = 4,
                    }
                }

                class VisibilityBinder : Yeti.UIBinderBase<RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel>
                {
                    /*0x78*/ UnityEngine.GameObject Target;
                    /*0x80*/ bool Inverse;

                    /*0x24e65d4*/ VisibilityBinder();
                    /*0x24e639c*/ void Awake();
                    /*0x24e6438*/ void OnDataContextSet();
                    /*0x24e65d0*/ void PropertyChanged(string propertyName);
                    /*0x24e643c*/ void SetVisibility();
                }

                class BoundFlexibleScrollListItem : Odin.UI.Components.ScrollLists.FlexibleScrollListItem, RedCrow.UI.UUIF.DataProviding.IBindingContainer
                {
                    /*0x48*/ string <TemplateKey>k__BackingField;
                    /*0x50*/ RedCrow.UI.UUIF.DataProviding.BindingContainerImpl m_bindingContainerImpl;

                    /*0x24e673c*/ BoundFlexibleScrollListItem();
                    /*0x24e661c*/ string get_TemplateKey();
                    /*0x24e6624*/ void set_TemplateKey(string value);
                    /*0x24e662c*/ void Awake();
                    /*0x24e6644*/ void Setup();
                    /*0x24e6710*/ void OnDestroy();
                    /*0x24e6724*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation GetBindingContainerImplementation();
                }

                class ExpressionBinder<TModel> : Yeti.UIBinderBase<TModel>, Odin.Expression.IExpressionContext
                {
                    /*0x0*/ string Expression;
                    /*0x0*/ Odin.Services.Expression.IBasicExpressionParserService m_expressionService;

                    /*0x1f309e4*/ ExpressionBinder();
                    /*0x1f309e4*/ void Start();
                    /*0x1f30214*/ Framework.DataBinding.Bindable<TModel> CreateBindable();
                    /*0x1f309e4*/ void OnDataContextSet();
                    /*0x1f309e4*/ void UpdateExpression();
                    /*0x1f30ebc*/ void OnExpressionUpdated(Odin.Expression.Results.IExpressionResult expressionResult);
                    /*0x1f30214*/ string get_ContextId();
                    /*0x1f2ffc8*/ int get_IndexedParametersCount();
                    /*0x1f30240*/ object GetIndexedParameter(int idx);

                    class BindableImpl<TModel> : Framework.DataBinding.Bindable<TModel>
                    {
                        /*0x0*/ Odin.UI.DataBinding.SmartBinders.ExpressionBinder<TModel> m_parent;

                        /*0x1f30ebc*/ BindableImpl(Odin.UI.DataBinding.SmartBinders.ExpressionBinder<TModel> parent);
                        /*0x1f30ebc*/ void ItemPropertyChanged(string propterty);
                    }
                }

                class RelativeBindingContainer : UnityEngine.MonoBehaviour, RedCrow.UI.UUIF.DataProviding.IBindingContainer
                {
                    /*0x20*/ bool m_bindingPermitted;
                    /*0x21*/ bool m_unbindWhenBecomesDisabled;
                    /*0x28*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot m_relativeKey;
                    /*0x30*/ RedCrow.UI.UUIF.DataProviding.BindingContainerImpl m_bindingContainerImpl;

                    /*0x24e6a1c*/ RelativeBindingContainer();
                    /*0x24e6754*/ bool get_IsBindingOriginallyEnabled();
                    /*0x24e675c*/ bool get_DoesUnbindWhenBecomesDisabled();
                    /*0x24e6764*/ RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot get_OriginalRelativeKey();
                    /*0x24e676c*/ void Awake();
                    /*0x24e6770*/ void Setup();
                    /*0x24e6828*/ void Start();
                    /*0x24e6840*/ void OnEnable();
                    /*0x24e691c*/ void OnDisable();
                    /*0x24e69e0*/ bool get_UnbindWhenBecomesDisabled();
                    /*0x24e69e8*/ void set_UnbindWhenBecomesDisabled(bool value);
                    /*0x24e69f0*/ void OnDestroy();
                    /*0x24e6904*/ RedCrow.UI.UUIF.DataProviding.IBindingContainerImplementation GetBindingContainerImplementation();
                    /*0x24e6a04*/ void Override(RedCrow.UI.UUIF.DataProviding.UIDataKeyRoot newKey);
                }

                class CanvasVisibilityBinder : Yeti.UIBinderBase<RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel>
                {
                    /*0x78*/ UnityEngine.GameObject _target;
                    /*0x80*/ bool _inverse;
                    /*0x88*/ UnityEngine.CanvasGroup _canvasGroup;
                    /*0x90*/ UnityEngine.UI.GraphicRaycaster _rayCaster;

                    /*0x24e6ce4*/ CanvasVisibilityBinder();
                    /*0x24e6a2c*/ void Awake();
                    /*0x24e6c04*/ void OnDataContextSet();
                    /*0x24e6ce0*/ void PropertyChanged(string propertyName);
                    /*0x24e6c08*/ void SetVisibility();
                    /*0x24e6afc*/ void SetCanvasGroupVisible(bool isVisible);
                }
            }
        }
    }
}

namespace UnityThreading
{
    class ActionExtension
    {
        static /*0x24e6d2c*/ UnityThreading.Task RunAsync(System.Action that);
        static /*0x24e6d8c*/ UnityThreading.Task RunAsync(System.Action that, UnityThreading.TaskDistributor target);
        static /*0x24e6e3c*/ UnityThreading.Task AsTask(System.Action that);
        static /*0x1f327cc*/ UnityThreading.Task<T> RunAsync<T>(System.Func<T> that);
        static /*0x1f32888*/ UnityThreading.Task<T> RunAsync<T>(System.Func<T> that, UnityThreading.TaskDistributor target);
        static /*0x1f327cc*/ UnityThreading.Task<T> AsTask<T>(System.Func<T> that);
    }

    class Channel<T> : System.IDisposable
    {
        /*0x0*/ System.Collections.Generic.List<T> buffer;
        /*0x0*/ object setSyncRoot;
        /*0x0*/ object getSyncRoot;
        /*0x0*/ object disposeRoot;
        /*0x0*/ System.Threading.ManualResetEvent setEvent;
        /*0x0*/ System.Threading.ManualResetEvent getEvent;
        /*0x0*/ System.Threading.ManualResetEvent exitEvent;
        /*0x0*/ bool disposed;
        /*0x0*/ int <BufferSize>k__BackingField;

        /*0x1f309e4*/ Channel();
        /*0x1f30b78*/ Channel(int bufferSize);
        /*0x1f2ffc8*/ int get_BufferSize();
        /*0x1f30b78*/ void set_BufferSize(int value);
        /*0x1f309e4*/ void Finalize();
        /*0x1f30b78*/ void Resize(int newBufferSize);
        /*0x1ffc854*/ bool Set(T value);
        /*0x1ffc854*/ bool Set(T value, int timeoutInMilliseconds);
        /*0x1ffc854*/ T Get();
        /*0x1ffc854*/ T Get(int timeoutInMilliseconds, T defaultValue);
        /*0x1f309e4*/ void Close();
        /*0x1f309e4*/ void Dispose();
    }

    class Channel : UnityThreading.Channel<object>
    {
        /*0x24e6e44*/ Channel();
    }

    class DispatcherBase : System.IDisposable
    {
        /*0x10*/ int lockCount;
        /*0x18*/ object taskListSyncRoot;
        /*0x20*/ System.Collections.Generic.Queue<UnityThreading.Task> taskList;
        /*0x28*/ System.Collections.Generic.Queue<UnityThreading.Task> delayedTaskList;
        /*0x30*/ System.Threading.ManualResetEvent dataEvent;
        /*0x38*/ bool AllowAccessLimitationChecks;
        /*0x3c*/ UnityThreading.TaskSortingSystem TaskSortingSystem;

        /*0x24e6e8c*/ DispatcherBase();
        /*0x24e6fb4*/ bool get_IsWorking();
        /*0x24e6fc4*/ int get_TaskCount();
        /*0x24e70b8*/ void Lock();
        /*0x24e7178*/ void Unlock();
        /*0x1f302cc*/ UnityThreading.Task<T> Dispatch<T>(System.Func<T> function);
        /*0x24e6de8*/ UnityThreading.Task Dispatch(System.Action action);
        /*0x24e748c*/ UnityThreading.Task Dispatch(UnityThreading.Task task);
        /*0x24e74d0*/ void AddTask(UnityThreading.Task task);
        /*0x24e7644*/ void AddTasks(System.Collections.Generic.IEnumerable<UnityThreading.Task> tasks);
        /*0x24e7c54*/ void TasksAdded();
        /*0x24e7328*/ void ReorderTasks();
        /*0x24e7c6c*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> SplitTasks(int divisor);
        /*0x24e7cac*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> IsolateTasks(int count);
        /*0x1f309e4*/ void CheckAccessLimitation();
        /*0x24e7eac*/ void Dispose();

        class <>c
        {
            static /*0x0*/ UnityThreading.DispatcherBase.<> <>9;
            static /*0x8*/ System.Func<UnityThreading.Task, int> <>9__20_0;

            static /*0x25d5258*/ <>c();
            /*0x25d52c0*/ <>c();
            /*0x25d52c8*/ int <ReorderTasks>b__20_0(UnityThreading.Task t);
        }
    }

    class NullDispatcher : UnityThreading.DispatcherBase
    {
        static /*0x0*/ UnityThreading.NullDispatcher Null;

        static /*0x25d5514*/ NullDispatcher();
        /*0x25d550c*/ NullDispatcher();
        /*0x25d52e8*/ void CheckAccessLimitation();
        /*0x25d52ec*/ void AddTask(UnityThreading.Task task);
    }

    class Dispatcher : UnityThreading.DispatcherBase
    {
        static /*0x0*/ UnityThreading.Dispatcher mainDispatcher;
        [ThreadStatic] static UnityThreading.Task currentTask;
        [ThreadStatic] static UnityThreading.Dispatcher currentDispatcher;

        static /*0x25d557c*/ UnityThreading.Task get_CurrentTask();
        static /*0x25d561c*/ UnityThreading.Dispatcher get_Current();
        static /*0x25d56bc*/ void set_Current(UnityThreading.Dispatcher value);
        static /*0x25d574c*/ UnityThreading.Dispatcher get_CurrentNoThrow();
        static /*0x25d5794*/ UnityThreading.Dispatcher get_Main();
        static /*0x25d5828*/ UnityThreading.Dispatcher get_MainNoThrow();
        static /*0x1f327cc*/ System.Func<T> CreateSafeFunction<T>(System.Func<T> function);
        static /*0x1f327cc*/ System.Action CreateSafeAction<T>(System.Action action);
        /*0x25d5870*/ Dispatcher();
        /*0x25d5878*/ Dispatcher(bool setThreadDefaults);
        /*0x25d5974*/ void ProcessTasks();
        /*0x25d5bd8*/ bool ProcessTasks(System.Threading.WaitHandle exitHandle);
        /*0x25d5cfc*/ bool ProcessNextTask();
        /*0x25d5f54*/ bool ProcessNextTask(System.Threading.WaitHandle exitHandle);
        /*0x25d59d0*/ void ProcessTasksInternal();
        /*0x25d5e84*/ void ProcessSingleTask(UnityThreading.Task task);
        /*0x25d61b8*/ void RunTask(UnityThreading.Task task);
        /*0x25d6254*/ void CheckAccessLimitation();
        /*0x25d62f8*/ void Dispose();

        class <>c__DisplayClass14_0<T>
        {
            /*0x0*/ System.Func<T> function;

            /*0x1f309e4*/ <>c__DisplayClass14_0();
            /*0x1ffc854*/ T <CreateSafeFunction>b__0();
        }

        class <>c__DisplayClass15_0<T>
        {
            /*0x0*/ System.Action action;

            /*0x1f309e4*/ <>c__DisplayClass15_0();
            /*0x1f309e4*/ void <CreateSafeAction>b__0();
        }
    }

    class EnumerableExtension
    {
        static /*0x1f32888*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> ParallelForEach<T>(System.Collections.Generic.IEnumerable<T> that, System.Action<T> action);
        static /*0x1f3299c*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> ParallelForEach<T>(System.Collections.Generic.IEnumerable<T> that, System.Action<T> action, UnityThreading.TaskDistributor target);
        static /*0x1f32888*/ System.Collections.Generic.IEnumerable<UnityThreading.Task<TResult>> ParallelForEach<TResult, T>(System.Collections.Generic.IEnumerable<T> that, System.Func<T, TResult> action);
        static /*0x1f3299c*/ System.Collections.Generic.IEnumerable<UnityThreading.Task<TResult>> ParallelForEach<TResult, T>(System.Collections.Generic.IEnumerable<T> that, System.Func<T, TResult> action, UnityThreading.TaskDistributor target);
        static /*0x1f32888*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> SequentialForEach<T>(System.Collections.Generic.IEnumerable<T> that, System.Action<T> action);
        static /*0x1f3299c*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> SequentialForEach<T>(System.Collections.Generic.IEnumerable<T> that, System.Action<T> action, UnityThreading.TaskDistributor target);
        static /*0x1f32888*/ System.Collections.Generic.IEnumerable<UnityThreading.Task<TResult>> SequentialForEach<TResult, T>(System.Collections.Generic.IEnumerable<T> that, System.Func<T, TResult> action);
        static /*0x1f3299c*/ System.Collections.Generic.IEnumerable<UnityThreading.Task<TResult>> SequentialForEach<TResult, T>(System.Collections.Generic.IEnumerable<T> that, System.Func<T, TResult> action, UnityThreading.TaskDistributor target);

        class <>c__DisplayClass1_0<T>
        {
            /*0x0*/ System.Action<T> action;

            /*0x1f309e4*/ <>c__DisplayClass1_0();
            /*0x1ffc854*/ UnityThreading.Task.Unit <ParallelForEach>b__0(T element);
        }

        class <>c__DisplayClass3_0<TResult, T>
        {
            /*0x0*/ System.Func<T, TResult> action;

            /*0x1f309e4*/ <>c__DisplayClass3_0();
        }

        class <>c__DisplayClass3_1<TResult, T>
        {
            /*0x0*/ T tmp;
            /*0x0*/ UnityThreading.EnumerableExtension.<>c__DisplayClass3_0<TResult, T> CS$<>8__locals1;

            /*0x1f309e4*/ <>c__DisplayClass3_1();
            /*0x1ffc854*/ TResult <ParallelForEach>b__0();
        }

        class <>c__DisplayClass5_0<T>
        {
            /*0x0*/ System.Action<T> action;

            /*0x1f309e4*/ <>c__DisplayClass5_0();
            /*0x1ffc854*/ UnityThreading.Task.Unit <SequentialForEach>b__0(T element);
        }

        class <>c__DisplayClass7_0<TResult, T>
        {
            /*0x0*/ System.Func<T, TResult> action;
            /*0x0*/ UnityThreading.TaskDistributor target;

            /*0x1f309e4*/ <>c__DisplayClass7_0();
        }

        class <>c__DisplayClass7_1<TResult, T>
        {
            /*0x0*/ T tmp;
            /*0x0*/ UnityThreading.Task<TResult> task;
            /*0x0*/ UnityThreading.EnumerableExtension.<>c__DisplayClass7_0<TResult, T> CS$<>8__locals1;

            /*0x1f309e4*/ <>c__DisplayClass7_1();
            /*0x1ffc854*/ TResult <SequentialForEach>b__0();
            /*0x1f309e4*/ void <SequentialForEach>b__1();
        }
    }

    class EnumeratorExtension
    {
        static /*0x25d65a8*/ UnityThreading.Task RunAsync(System.Collections.IEnumerator that);
        static /*0x25d6608*/ UnityThreading.Task RunAsync(System.Collections.IEnumerator that, UnityThreading.TaskDistributor target);
    }

    class ObjectExtension
    {
        static /*0x25d66a8*/ UnityThreading.Task RunAsync(object that, string methodName, object[] args);
        static /*0x25d670c*/ UnityThreading.Task RunAsync(object that, string methodName, UnityThreading.TaskDistributor target, object[] args);
        static /*0x1f3299c*/ UnityThreading.Task<T> RunAsync<T>(object that, string methodName, object[] args);
        static /*0x1f32a64*/ UnityThreading.Task<T> RunAsync<T>(object that, string methodName, UnityThreading.TaskDistributor target, object[] args);
    }

    class SwitchTo
    {
        static /*0x0*/ UnityThreading.SwitchTo MainThread;
        static /*0x8*/ UnityThreading.SwitchTo Thread;
        /*0x10*/ UnityThreading.SwitchTo.TargetType <Target>k__BackingField;

        static /*0x25d67b4*/ SwitchTo();
        /*0x25d678c*/ SwitchTo(UnityThreading.SwitchTo.TargetType target);
        /*0x25d677c*/ UnityThreading.SwitchTo.TargetType get_Target();
        /*0x25d6784*/ void set_Target(UnityThreading.SwitchTo.TargetType value);

        enum TargetType
        {
            Main = 0,
            Thread = 1,
        }
    }

    enum TaskSortingSystem
    {
        NeverReorder = 0,
        ReorderWhenAdded = 1,
        ReorderWhenExecuted = 2,
    }

    class TaskEndedEventHandler : System.MulticastDelegate
    {
        /*0x25d6850*/ TaskEndedEventHandler(object object, nint method);
        /*0x25d6958*/ void Invoke(UnityThreading.Task sender);
        /*0x25d696c*/ System.IAsyncResult BeginInvoke(UnityThreading.Task sender, System.AsyncCallback callback, object object);
        /*0x25d698c*/ void EndInvoke(System.IAsyncResult result);
    }

    class Task
    {
        [ThreadStatic] static UnityThreading.Task current;
        /*0x10*/ object syncRoot;
        /*0x18*/ UnityThreading.TaskEndedEventHandler taskEnded;
        /*0x20*/ bool hasEnded;
        /*0x28*/ string Name;
        /*0x30*/ int Priority;
        /*0x38*/ System.Threading.ManualResetEvent abortEvent;
        /*0x40*/ System.Threading.ManualResetEvent endedEvent;
        /*0x48*/ System.Threading.ManualResetEvent endingEvent;
        /*0x50*/ bool hasStarted;
        /*0x51*/ bool disposed;

        static /*0x25d6fa8*/ UnityThreading.Task get_Current();
        static /*0x25d78a4*/ UnityThreading.Task Create(System.Action<UnityThreading.Task> action);
        static /*0x25d7798*/ UnityThreading.Task Create(System.Action action);
        static /*0x1f327cc*/ UnityThreading.Task<T> Create<T>(System.Func<UnityThreading.Task, T> func);
        static /*0x1f327cc*/ UnityThreading.Task<T> Create<T>(System.Func<T> func);
        static /*0x25d6630*/ UnityThreading.Task Create(System.Collections.IEnumerator enumerator);
        static /*0x1f3299c*/ UnityThreading.Task<T> Create<T>(System.Type type, string methodName, object[] args);
        static /*0x1f3299c*/ UnityThreading.Task<T> Create<T>(object that, string methodName, object[] args);
        /*0x25d6998*/ Task();
        /*0x25d6a98*/ void Finalize();
        /*0x25d6b1c*/ void add_taskEnded(UnityThreading.TaskEndedEventHandler value);
        /*0x25d6bb8*/ void remove_taskEnded(UnityThreading.TaskEndedEventHandler value);
        /*0x25d6c54*/ void add_TaskEnded(UnityThreading.TaskEndedEventHandler value);
        /*0x25d6d68*/ void remove_TaskEnded(UnityThreading.TaskEndedEventHandler value);
        /*0x25d6e30*/ void End();
        /*0x1f30214*/ System.Collections.IEnumerator Do();
        /*0x25d6ff0*/ bool get_ShouldAbort();
        /*0x25d7014*/ bool get_HasEnded();
        /*0x25d7048*/ bool get_IsEnding();
        /*0x25d706c*/ bool get_IsSucceeded();
        /*0x25d70c8*/ bool get_IsFailed();
        /*0x25d7120*/ void Abort();
        /*0x25d7158*/ void AbortWait();
        /*0x25d71d4*/ void AbortWaitForSeconds(float seconds);
        /*0x25d7180*/ void Wait();
        /*0x25d7210*/ void WaitForSeconds(float seconds);
        /*0x1ffc854*/ TResult Wait<TResult>();
        /*0x1ffc854*/ TResult WaitForSeconds<TResult>(float seconds);
        /*0x1f30214*/ object get_RawResult();
        /*0x1ffc854*/ TResult WaitForSeconds<TResult>(float seconds, TResult defaultReturnValue);
        /*0x25d5300*/ void DoInternal();
        /*0x25d72e0*/ void RunEnumerator(System.Collections.IEnumerator enumerator);
        /*0x25d6528*/ void Dispose();
        /*0x25d7810*/ UnityThreading.Task Run(UnityThreading.DispatcherBase target);
        /*0x25d7844*/ UnityThreading.Task Run();

        struct Unit
        {
        }

        class <>c__DisplayClass43_0
        {
            /*0x10*/ System.Collections.IEnumerator enumerator;
            /*0x18*/ UnityThreading.Task <>4__this;
            /*0x20*/ System.Action <>9__0;

            /*0x25d776c*/ <>c__DisplayClass43_0();
            /*0x25d791c*/ void <RunEnumerator>b__0();
        }
    }

    class Task<T> : UnityThreading.Task
    {
        /*0x0*/ System.Func<UnityThreading.Task, T> function;
        /*0x0*/ T result;

        /*0x1f30ebc*/ Task(System.Func<UnityThreading.Task, T> function);
        /*0x1f30ebc*/ Task(System.Func<T> function);
        /*0x1f30ebc*/ Task(System.Action<UnityThreading.Task> action);
        /*0x1f30ebc*/ Task(System.Action action);
        /*0x1f30ebc*/ Task(System.Collections.IEnumerator enumerator);
        /*0x1f310fc*/ Task(System.Type type, string methodName, object[] args);
        /*0x1f310fc*/ Task(object that, string methodName, object[] args);
        /*0x1f30214*/ System.Collections.IEnumerator Do();
        /*0x1ffc854*/ TResult Wait<TResult>();
        /*0x1ffc854*/ TResult WaitForSeconds<TResult>(float seconds);
        /*0x1ffc854*/ TResult WaitForSeconds<TResult>(float seconds, TResult defaultReturnValue);
        /*0x1f30214*/ object get_RawResult();
        /*0x1ffc854*/ T get_Result();
        /*0x1f302cc*/ UnityThreading.Task<T> Run(UnityThreading.DispatcherBase target);
        /*0x1f30214*/ UnityThreading.Task<T> Run();

        class <>c__DisplayClass3_0<T>
        {
            /*0x0*/ System.Func<T> function;

            /*0x1f309e4*/ <>c__DisplayClass3_0();
            /*0x1ffc854*/ T <.ctor>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass4_0<T>
        {
            /*0x0*/ System.Action<UnityThreading.Task> action;

            /*0x1f309e4*/ <>c__DisplayClass4_0();
            /*0x1ffc854*/ T <.ctor>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass5_0<T>
        {
            /*0x0*/ System.Action action;

            /*0x1f309e4*/ <>c__DisplayClass5_0();
            /*0x1ffc854*/ T <.ctor>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass6_0<T>
        {
            /*0x0*/ System.Collections.IEnumerator enumerator;

            /*0x1f309e4*/ <>c__DisplayClass6_0();
            /*0x1ffc854*/ T <.ctor>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass7_0<T>
        {
            /*0x0*/ object[] args;
            /*0x0*/ System.Reflection.MethodInfo methodInfo;

            /*0x1f309e4*/ <>c__DisplayClass7_0();
            /*0x1ffc854*/ T <.ctor>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass8_0<T>
        {
            /*0x0*/ object that;
            /*0x0*/ object[] args;
            /*0x0*/ System.Reflection.MethodInfo methodInfo;

            /*0x1f309e4*/ <>c__DisplayClass8_0();
            /*0x1ffc854*/ T <.ctor>b__0(UnityThreading.Task t);
        }
    }

    class TaskDistributor : UnityThreading.DispatcherBase
    {
        static /*0x0*/ UnityThreading.TaskDistributor mainTaskDistributor;
        /*0x40*/ UnityThreading.TaskWorker[] workerThreads;
        /*0x48*/ int MaxAdditionalWorkerThreads;
        /*0x50*/ string name;
        /*0x58*/ bool isDisposed;
        /*0x5c*/ System.Threading.ThreadPriority priority;

        static /*0x25d7a0c*/ UnityThreading.TaskDistributor get_Main();
        static /*0x25d7aa0*/ UnityThreading.TaskDistributor get_MainNoThrow();
        /*0x25d7ae8*/ TaskDistributor(string name);
        /*0x25d7af4*/ TaskDistributor(string name, int workerThreadCount);
        /*0x25d7c38*/ TaskDistributor(string name, int workerThreadCount, bool autoStart);
        /*0x25d7a04*/ System.Threading.WaitHandle get_NewDataWaitHandle();
        /*0x25d7afc*/ int get_TaskCount();
        /*0x25d7f40*/ void Start();
        /*0x25d81c0*/ void SpawnAdditionalWorkerThread();
        /*0x25d83e4*/ void FillTasks(UnityThreading.Dispatcher target);
        /*0x25d8414*/ void CheckAccessLimitation();
        /*0x25d857c*/ void TasksAdded();
        /*0x25d86e4*/ void Dispose();
        /*0x25d89ec*/ System.Threading.ThreadPriority get_Priority();
        /*0x25d89f4*/ void set_Priority(System.Threading.ThreadPriority value);

        class <>c
        {
            static /*0x0*/ UnityThreading.TaskDistributor.<> <>9;
            static /*0x8*/ System.Func<UnityThreading.TaskWorker, bool> <>9__19_0;

            static /*0x25d8a6c*/ <>c();
            /*0x25d8ad4*/ <>c();
            /*0x25d8adc*/ bool <TasksAdded>b__19_0(UnityThreading.TaskWorker worker);
        }
    }

    class TaskWorker : UnityThreading.ThreadBase
    {
        /*0x38*/ UnityThreading.Dispatcher Dispatcher;
        /*0x40*/ UnityThreading.TaskDistributor <TaskDistributor>k__BackingField;

        /*0x25d7e8c*/ TaskWorker(string name, UnityThreading.TaskDistributor taskDistributor);
        /*0x25d8b40*/ UnityThreading.TaskDistributor get_TaskDistributor();
        /*0x25d8b48*/ void set_TaskDistributor(UnityThreading.TaskDistributor value);
        /*0x25d8b28*/ bool get_IsWorking();
        /*0x25d8bb8*/ System.Collections.IEnumerator Do();
        /*0x25d8d44*/ void Dispose();
    }

    class TaskExtension
    {
        static /*0x25d8d84*/ UnityThreading.Task WithName(UnityThreading.Task task, string name);
        static /*0x1f32888*/ UnityThreading.Task<T> WithName<T>(UnityThreading.Task<T> task, string name);
        static /*0x25d8da8*/ void WaitAll(System.Collections.Generic.IEnumerable<UnityThreading.Task> tasks);
        static /*0x25d9044*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> Then(System.Collections.Generic.IEnumerable<UnityThreading.Task> that, UnityThreading.Task followingTask, UnityThreading.DispatcherBase target);
        static /*0x25d9608*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> WhenSucceeded(System.Collections.Generic.IEnumerable<UnityThreading.Task> that, System.Action action, UnityThreading.DispatcherBase target);
        static /*0x25d99dc*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> WhenFailed(System.Collections.Generic.IEnumerable<UnityThreading.Task> that, System.Action action, UnityThreading.DispatcherBase target);
        static /*0x25d9d8c*/ UnityThreading.Task OnResult(UnityThreading.Task task, System.Action<object> action);
        static /*0x25d9d94*/ UnityThreading.Task OnResult(UnityThreading.Task task, System.Action<object> action, UnityThreading.DispatcherBase target);
        static /*0x1f32888*/ UnityThreading.Task OnResult<T>(UnityThreading.Task task, System.Action<T> action);
        static /*0x1f3299c*/ UnityThreading.Task OnResult<T>(UnityThreading.Task task, System.Action<T> action, UnityThreading.DispatcherBase target);
        static /*0x1f32888*/ UnityThreading.Task<T> OnResult<T>(UnityThreading.Task<T> task, System.Action<T> action);
        static /*0x1f3299c*/ UnityThreading.Task<T> OnResult<T>(UnityThreading.Task<T> task, System.Action<T> action, UnityThreading.DispatcherBase actionTarget);
        static /*0x1f32888*/ UnityThreading.Task<T> WhenSucceeded<T>(UnityThreading.Task<T> task, System.Action action);
        static /*0x1f32888*/ UnityThreading.Task<T> WhenSucceeded<T>(UnityThreading.Task<T> task, System.Action<UnityThreading.Task<T>> action);
        static /*0x1f3299c*/ UnityThreading.Task<T> WhenSucceeded<T>(UnityThreading.Task<T> task, System.Action<UnityThreading.Task<T>> action, UnityThreading.DispatcherBase target);
        static /*0x25d9544*/ UnityThreading.Task WhenSucceeded(UnityThreading.Task task, System.Action action);
        static /*0x25da064*/ UnityThreading.Task WhenSucceeded(UnityThreading.Task task, System.Action<UnityThreading.Task> action);
        static /*0x25d9e70*/ UnityThreading.Task WhenSucceeded(UnityThreading.Task task, System.Action<UnityThreading.Task> action, UnityThreading.DispatcherBase actiontargetTarget);
        static /*0x1f32888*/ UnityThreading.Task<T> WhenFailed<T>(UnityThreading.Task<T> task, System.Action action);
        static /*0x1f32888*/ UnityThreading.Task<T> WhenFailed<T>(UnityThreading.Task<T> task, System.Action<UnityThreading.Task<T>> action);
        static /*0x1f3299c*/ UnityThreading.Task<T> WhenFailed<T>(UnityThreading.Task<T> task, System.Action<UnityThreading.Task<T>> action, UnityThreading.DispatcherBase target);
        static /*0x25d9480*/ UnityThreading.Task WhenFailed(UnityThreading.Task task, System.Action action);
        static /*0x25da240*/ UnityThreading.Task WhenFailed(UnityThreading.Task task, System.Action<UnityThreading.Task> action);
        static /*0x25da30c*/ UnityThreading.Task WhenFailed(UnityThreading.Task task, System.Action<UnityThreading.Task> action, UnityThreading.DispatcherBase target);
        static /*0x1f32888*/ UnityThreading.Task<T> WhenEnded<T>(UnityThreading.Task<T> task, System.Action action);
        static /*0x1f32888*/ UnityThreading.Task<T> WhenEnded<T>(UnityThreading.Task<T> task, System.Action<UnityThreading.Task<T>> action);
        static /*0x1f3299c*/ UnityThreading.Task<T> WhenEnded<T>(UnityThreading.Task<T> task, System.Action<UnityThreading.Task<T>> action, UnityThreading.DispatcherBase target);
        static /*0x25da3e8*/ UnityThreading.Task WhenEnded(UnityThreading.Task task, System.Action action);
        static /*0x25d9f9c*/ UnityThreading.Task WhenEnded(UnityThreading.Task task, System.Action<UnityThreading.Task> action);
        static /*0x25da138*/ UnityThreading.Task WhenEnded(UnityThreading.Task task, System.Action<UnityThreading.Task> action, UnityThreading.DispatcherBase target);
        static /*0x25da4c4*/ UnityThreading.Task Then(UnityThreading.Task that, UnityThreading.Task followingTask);
        static /*0x25da5b0*/ UnityThreading.Task Then(UnityThreading.Task that, UnityThreading.Task followingTask, UnityThreading.DispatcherBase target);
        static /*0x25da6dc*/ UnityThreading.Task Await(UnityThreading.Task that, UnityThreading.Task taskToWaitFor);
        static /*0x25da6fc*/ UnityThreading.Task Await(UnityThreading.Task that, UnityThreading.Task taskToWaitFor, UnityThreading.DispatcherBase target);
        static /*0x1f327cc*/ UnityThreading.Task<T> As<T>(UnityThreading.Task that);
        static /*0x25da71c*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> ContinueWhenAnyEnded(System.Collections.Generic.IEnumerable<UnityThreading.Task> tasks, System.Action action);
        static /*0x25da7e8*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> ContinueWhenAnyEnded(System.Collections.Generic.IEnumerable<UnityThreading.Task> tasks, System.Action<UnityThreading.Task> action);
        static /*0x25dab88*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> ContinueWhenAllEnded(System.Collections.Generic.IEnumerable<UnityThreading.Task> tasks, System.Action action);
        static /*0x25dac54*/ System.Collections.Generic.IEnumerable<UnityThreading.Task> ContinueWhenAllEnded(System.Collections.Generic.IEnumerable<UnityThreading.Task> tasks, System.Action<System.Collections.Generic.IEnumerable<UnityThreading.Task>> action);

        class <>c__DisplayClass11_0<T>
        {
            /*0x0*/ System.Action<T> action;

            /*0x1f309e4*/ <>c__DisplayClass11_0();
            /*0x1f30ebc*/ void <OnResult>b__0(UnityThreading.Task<T> t);
        }

        class <>c__DisplayClass12_0<T>
        {
            /*0x0*/ System.Action action;

            /*0x1f309e4*/ <>c__DisplayClass12_0();
            /*0x1f30ebc*/ void <WhenSucceeded>b__0(UnityThreading.Task<T> t);
        }

        class <>c__DisplayClass14_0<T>
        {
            /*0x0*/ UnityThreading.DispatcherBase target;
            /*0x0*/ System.Action<UnityThreading.Task<T>> action;
            /*0x0*/ System.Action<UnityThreading.Task<T>> perform;

            /*0x1f309e4*/ <>c__DisplayClass14_0();
            /*0x1f30ebc*/ void <WhenSucceeded>b__0(UnityThreading.Task<T> t);
            /*0x1f30ebc*/ void <WhenSucceeded>b__1(UnityThreading.Task<T> t);
        }

        class <>c__DisplayClass14_<T>
        {
            /*0x0*/ UnityThreading.Task<T> t;
            /*0x0*/ UnityThreading.TaskExtension.<>c__DisplayClass14_0<T> CS$<>8__locals1;

            /*0x1f309e4*/ <>c__DisplayClass14_();
            /*0x1f309e4*/ void <WhenSucceeded>b__2();
        }

        class <>c__DisplayClass15_0
        {
            /*0x10*/ System.Action action;

            /*0x25d9f94*/ <>c__DisplayClass15_0();
            /*0x25db0f4*/ void <WhenSucceeded>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass16_0
        {
            /*0x10*/ System.Action<UnityThreading.Task> action;

            /*0x25da128*/ <>c__DisplayClass16_0();
            /*0x25db134*/ void <WhenSucceeded>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass17_0
        {
            /*0x10*/ UnityThreading.DispatcherBase actiontargetTarget;
            /*0x18*/ System.Action<UnityThreading.Task> action;
            /*0x20*/ System.Action<UnityThreading.Task> perform;

            /*0x25da130*/ <>c__DisplayClass17_0();
            /*0x25db188*/ void <WhenSucceeded>b__0(UnityThreading.Task t);
            /*0x25db29c*/ void <WhenSucceeded>b__1(UnityThreading.Task t);
        }

        class <>c__DisplayClass17_1
        {
            /*0x10*/ UnityThreading.Task t;
            /*0x18*/ UnityThreading.TaskExtension.<> CS$<>8__locals1;

            /*0x25db294*/ <>c__DisplayClass17_1();
            /*0x25db2f0*/ void <WhenSucceeded>b__2();
        }

        class <>c__DisplayClass18_0<T>
        {
            /*0x0*/ System.Action action;

            /*0x1f309e4*/ <>c__DisplayClass18_0();
            /*0x1f30ebc*/ void <WhenFailed>b__0(UnityThreading.Task<T> t);
        }

        class <>c__DisplayClass20_0<T>
        {
            /*0x0*/ System.Action<UnityThreading.Task<T>> action;

            /*0x1f309e4*/ <>c__DisplayClass20_0();
            /*0x1f30ebc*/ void <WhenFailed>b__0(UnityThreading.Task<T> t);
        }

        class <>c__DisplayClass21_0
        {
            /*0x10*/ System.Action action;

            /*0x25da238*/ <>c__DisplayClass21_0();
            /*0x25db33c*/ void <WhenFailed>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass22_0
        {
            /*0x10*/ System.Action<UnityThreading.Task> action;

            /*0x25da304*/ <>c__DisplayClass22_0();
            /*0x25db37c*/ void <WhenFailed>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass23_0
        {
            /*0x10*/ System.Action<UnityThreading.Task> action;

            /*0x25da3e0*/ <>c__DisplayClass23_0();
            /*0x25db3d0*/ void <WhenFailed>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass24_0<T>
        {
            /*0x0*/ System.Action action;

            /*0x1f309e4*/ <>c__DisplayClass24_0();
            /*0x1f30ebc*/ void <WhenEnded>b__0(UnityThreading.Task<T> t);
        }

        class <>c__DisplayClass26_0<T>
        {
            /*0x0*/ UnityThreading.DispatcherBase target;
            /*0x0*/ System.Action<UnityThreading.Task<T>> action;
            /*0x0*/ UnityThreading.Task<T> task;
            /*0x0*/ System.Action <>9__1;

            /*0x1f309e4*/ <>c__DisplayClass26_0();
            /*0x1f30ebc*/ void <WhenEnded>b__0(UnityThreading.Task t);
            /*0x1f309e4*/ void <WhenEnded>b__1();
        }

        class <>c__DisplayClass27_0
        {
            /*0x10*/ System.Action action;

            /*0x25da4ac*/ <>c__DisplayClass27_0();
            /*0x25db424*/ void <WhenEnded>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass28_0
        {
            /*0x10*/ System.Action<UnityThreading.Task> action;

            /*0x25da4b4*/ <>c__DisplayClass28_0();
            /*0x25db444*/ void <WhenEnded>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass29_0
        {
            /*0x10*/ UnityThreading.DispatcherBase target;
            /*0x18*/ System.Action<UnityThreading.Task> action;
            /*0x20*/ UnityThreading.Task task;
            /*0x28*/ System.Action <>9__1;

            /*0x25da4bc*/ <>c__DisplayClass29_0();
            /*0x25db464*/ void <WhenEnded>b__0(UnityThreading.Task t);
            /*0x25db538*/ void <WhenEnded>b__1();
        }

        class <>c__DisplayClass31_0
        {
            /*0x10*/ UnityThreading.Task followingTask;
            /*0x18*/ UnityThreading.DispatcherBase target;

            /*0x25da6d4*/ <>c__DisplayClass31_0();
            /*0x25db55c*/ void <Then>b__0();
            /*0x25db570*/ void <Then>b__1();
        }

        class <>c__DisplayClass35_0
        {
            /*0x10*/ System.Action action;

            /*0x25da7e0*/ <>c__DisplayClass35_0();
            /*0x25db680*/ void <ContinueWhenAnyEnded>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass36_0
        {
            /*0x10*/ object syncRoot;
            /*0x18*/ bool done;
            /*0x20*/ System.Action<UnityThreading.Task> action;
            /*0x28*/ System.Action<UnityThreading.Task> <>9__0;

            /*0x25dab80*/ <>c__DisplayClass36_0();
            /*0x25db6a0*/ void <ContinueWhenAnyEnded>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass37_0
        {
            /*0x10*/ System.Action action;

            /*0x25dac4c*/ <>c__DisplayClass37_0();
            /*0x25db78c*/ void <ContinueWhenAllEnded>b__0(System.Collections.Generic.IEnumerable<UnityThreading.Task> t);
        }

        class <>c__DisplayClass38_0
        {
            /*0x10*/ object syncRoot;
            /*0x18*/ System.Collections.Generic.List<UnityThreading.Task> finishedTasks;
            /*0x20*/ int count;
            /*0x28*/ System.Action<System.Collections.Generic.IEnumerable<UnityThreading.Task>> action;

            /*0x25db0e4*/ <>c__DisplayClass38_0();
        }

        class <>c__DisplayClass38_1
        {
            /*0x10*/ UnityThreading.Task task;
            /*0x18*/ UnityThreading.TaskExtension.<> CS$<>8__locals1;

            /*0x25db0ec*/ <>c__DisplayClass38_1();
            /*0x25db7ac*/ void <ContinueWhenAllEnded>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass3_0
        {
            /*0x10*/ UnityThreading.Task followingTask;
            /*0x18*/ object syncRoot;
            /*0x20*/ int remaining;
            /*0x28*/ UnityThreading.DispatcherBase target;
            /*0x30*/ System.Action <>9__0;
            /*0x38*/ System.Action <>9__1;

            /*0x25d9478*/ <>c__DisplayClass3_0();
            /*0x25db924*/ void <Then>b__0();
            /*0x25db970*/ void <Then>b__1();
        }

        class <>c__DisplayClass4_0
        {
            /*0x10*/ object syncRoot;
            /*0x18*/ int remaining;
            /*0x20*/ UnityThreading.DispatcherBase target;
            /*0x28*/ System.Action action;
            /*0x30*/ System.Action <>9__1;
            /*0x38*/ System.Action <>9__0;

            /*0x25d99d4*/ <>c__DisplayClass4_0();
            /*0x25dbb8c*/ void <WhenSucceeded>b__0();
            /*0x25dbd18*/ void <WhenSucceeded>b__1();
        }

        class <>c__DisplayClass5_0
        {
            /*0x10*/ object syncRoot;
            /*0x18*/ bool hasFailed;
            /*0x20*/ UnityThreading.DispatcherBase target;
            /*0x28*/ System.Action action;
            /*0x30*/ System.Action <>9__1;
            /*0x38*/ System.Action <>9__0;

            /*0x25d9d84*/ <>c__DisplayClass5_0();
            /*0x25dbd38*/ void <WhenFailed>b__0();
            /*0x25dbec4*/ void <WhenFailed>b__1();
        }

        class <>c__DisplayClass7_0
        {
            /*0x10*/ System.Action<object> action;

            /*0x25d9e68*/ <>c__DisplayClass7_0();
            /*0x25dbee4*/ void <OnResult>b__0(UnityThreading.Task t);
        }

        class <>c__DisplayClass9_0<T>
        {
            /*0x0*/ System.Action<T> action;

            /*0x1f309e4*/ <>c__DisplayClass9_0();
            /*0x1f30ebc*/ void <OnResult>b__0(UnityThreading.Task t);
        }
    }

    class ThreadBase : System.IDisposable
    {
        [ThreadStatic] static UnityThreading.ThreadBase currentThread;
        /*0x10*/ UnityThreading.Dispatcher targetDispatcher;
        /*0x18*/ System.Threading.Thread thread;
        /*0x20*/ System.Threading.ManualResetEvent exitEvent;
        /*0x28*/ string threadName;
        /*0x30*/ System.Threading.ThreadPriority priority;

        static /*0x25d7e84*/ int get_AvailableProcessors();
        static /*0x25dbf24*/ UnityThreading.ThreadBase get_CurrentThread();
        /*0x25dbf6c*/ ThreadBase(string threadName);
        /*0x25d8b50*/ ThreadBase(string threadName, bool autoStartThread);
        /*0x25dc048*/ ThreadBase(string threadName, UnityThreading.Dispatcher targetDispatcher);
        /*0x25dbf74*/ ThreadBase(string threadName, UnityThreading.Dispatcher targetDispatcher, bool autoStartThread);
        /*0x25d809c*/ bool get_IsAlive();
        /*0x25dc050*/ bool get_ShouldStop();
        /*0x25d80b0*/ void Start();
        /*0x25dc09c*/ void Exit();
        /*0x25dc074*/ void Abort();
        /*0x25dc0c0*/ void AbortWaitForSeconds(float seconds);
        /*0x1f302cc*/ UnityThreading.Task<T> Dispatch<T>(System.Func<T> function);
        /*0x1ffc854*/ T DispatchAndWait<T>(System.Func<T> function);
        /*0x1ffc854*/ T DispatchAndWait<T>(System.Func<T> function, float timeOutSeconds);
        /*0x25dc144*/ UnityThreading.Task Dispatch(System.Action action);
        /*0x25dc15c*/ void DispatchAndWait(System.Action action);
        /*0x25dc180*/ void DispatchAndWait(System.Action action, float timeOutSeconds);
        /*0x25dc1b4*/ UnityThreading.Task Dispatch(UnityThreading.Task taskBase);
        /*0x25d7774*/ void DispatchAndWait(UnityThreading.Task taskBase);
        /*0x25dc1cc*/ void DispatchAndWait(UnityThreading.Task taskBase, float timeOutSeconds);
        /*0x25dc200*/ void DoInternal();
        /*0x25dc284*/ void RunEnumerator(System.Collections.IEnumerator enumerator);
        /*0x1f30214*/ System.Collections.IEnumerator Do();
        /*0x25d8d7c*/ void Dispose();
        /*0x25dc74c*/ System.Threading.ThreadPriority get_Priority();
        /*0x25d83c8*/ void set_Priority(System.Threading.ThreadPriority value);

        class <>c__DisplayClass31_0
        {
            /*0x10*/ System.Collections.IEnumerator enumerator;
            /*0x18*/ UnityThreading.ThreadBase <>4__this;
            /*0x20*/ System.Action <>9__0;

            /*0x25dc744*/ <>c__DisplayClass31_0();
            /*0x25dc754*/ void <RunEnumerator>b__0();
        }
    }

    class ActionThread : UnityThreading.ThreadBase
    {
        /*0x38*/ System.Action<UnityThreading.ActionThread> action;

        /*0x25dc83c*/ ActionThread(System.Action<UnityThreading.ActionThread> action);
        /*0x25dc844*/ ActionThread(System.Action<UnityThreading.ActionThread> action, bool autoStartThread);
        /*0x25dc8d4*/ System.Collections.IEnumerator Do();
    }

    class EnumeratableActionThread : UnityThreading.ThreadBase
    {
        /*0x38*/ System.Func<UnityThreading.ThreadBase, System.Collections.IEnumerator> enumeratableAction;

        /*0x25dc904*/ EnumeratableActionThread(System.Func<UnityThreading.ThreadBase, System.Collections.IEnumerator> enumeratableAction);
        /*0x25dc90c*/ EnumeratableActionThread(System.Func<UnityThreading.ThreadBase, System.Collections.IEnumerator> enumeratableAction, bool autoStartThread);
        /*0x25dc99c*/ System.Collections.IEnumerator Do();
    }

    class TickThread : UnityThreading.ThreadBase
    {
        /*0x38*/ System.Action action;
        /*0x40*/ int tickLengthInMilliseconds;
        /*0x48*/ System.Threading.ManualResetEvent tickEvent;

        /*0x25dc9d0*/ TickThread(System.Action action, int tickLengthInMilliseconds);
        /*0x25dc9d8*/ TickThread(System.Action action, int tickLengthInMilliseconds, bool autoStartThread);
        /*0x25dcae4*/ System.Collections.IEnumerator Do();
    }

    class WaitOneExtension
    {
        static /*0x25d59b4*/ bool InterWaitOne(System.Threading.ManualResetEvent that, int ms);
        static /*0x25d72c4*/ bool InterWaitOne(System.Threading.ManualResetEvent that, System.TimeSpan duration);
    }
}

namespace TypeReferences
{
    enum ClassGrouping
    {
        None = 0,
        ByNamespace = 1,
        ByNamespaceFlat = 2,
        ByAddComponentMenu = 3,
    }

    class ClassTypeConstraintAttribute : UnityEngine.PropertyAttribute
    {
        /*0x18*/ TypeReferences.ClassGrouping _grouping;
        /*0x1c*/ bool _allowAbstract;

        /*0x25dcc90*/ ClassTypeConstraintAttribute();
        /*0x25dcc38*/ TypeReferences.ClassGrouping get_Grouping();
        /*0x25dcc40*/ void set_Grouping(TypeReferences.ClassGrouping value);
        /*0x25dcc48*/ bool get_AllowAbstract();
        /*0x25dcc50*/ void set_AllowAbstract(bool value);
        /*0x25dcc58*/ bool IsConstraintSatisfied(System.Type type);
    }

    class ClassExtendsAttribute : TypeReferences.ClassTypeConstraintAttribute
    {
        /*0x20*/ System.Type <BaseType>k__BackingField;
        /*0x28*/ System.Type ExcludedBaseType;

        /*0x25dcca0*/ ClassExtendsAttribute();
        /*0x25dccb0*/ ClassExtendsAttribute(System.Type baseType);
        /*0x25dcce8*/ System.Type get_BaseType();
        /*0x25dccf0*/ void set_BaseType(System.Type value);
        /*0x25dccf8*/ bool IsConstraintSatisfied(System.Type type);
    }

    class ClassDoesNotExtendAttribute : TypeReferences.ClassTypeConstraintAttribute
    {
        /*0x20*/ System.Type <BaseType>k__BackingField;

        /*0x25dcdd4*/ ClassDoesNotExtendAttribute();
        /*0x25dcde4*/ ClassDoesNotExtendAttribute(System.Type baseType);
        /*0x25dce1c*/ System.Type get_BaseType();
        /*0x25dce24*/ void set_BaseType(System.Type value);
        /*0x25dce2c*/ bool IsConstraintSatisfied(System.Type type);
    }

    class ClassImplementsAttribute : TypeReferences.ClassTypeConstraintAttribute
    {
        /*0x20*/ System.Type <InterfaceType>k__BackingField;

        /*0x25dceac*/ ClassImplementsAttribute();
        /*0x25dcebc*/ ClassImplementsAttribute(System.Type interfaceType);
        /*0x25dcef4*/ System.Type get_InterfaceType();
        /*0x25dcefc*/ void set_InterfaceType(System.Type value);
        /*0x25dcf04*/ bool IsConstraintSatisfied(System.Type type);
    }

    class ClassTypeReference : UnityEngine.ISerializationCallbackReceiver
    {
        /*0x10*/ string _classRef;
        /*0x18*/ System.Type _type;

        static /*0x25dcfd0*/ string GetClassRef(System.Type type);
        static /*0x25dd408*/ string op_Implicit(TypeReferences.ClassTypeReference typeReference);
        static /*0x25dd41c*/ System.Type op_Implicit(TypeReferences.ClassTypeReference typeReference);
        static /*0x25dd430*/ TypeReferences.ClassTypeReference op_Implicit(System.Type type);
        /*0x25dd0bc*/ ClassTypeReference();
        /*0x25dd0c4*/ ClassTypeReference(string assemblyQualifiedClassName);
        /*0x25dd28c*/ ClassTypeReference(System.Type type);
        /*0x25dd2b8*/ void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize();
        /*0x25dd3fc*/ void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize();
        /*0x25dd400*/ System.Type get_Type();
        /*0x25dd17c*/ void set_Type(System.Type value);
        /*0x25dd494*/ string ToString();
    }
}

namespace EA
{
    namespace UI
    {
        class ImageTransition : UnityEngine.UI.Selectable
        {
            /*0x100*/ EA.UI.TransitionState _transitionState;

            /*0x25dd568*/ ImageTransition();
            /*0x25dd52c*/ EA.UI.TransitionState get_CurrentState();
            /*0x25dd534*/ void TransitionToState(EA.UI.TransitionState state, bool instant);
        }

        enum TransitionState
        {
            Normal = 0,
            Highlighted = 1,
            Pressed = 2,
            Disabled = 3,
        }

        namespace Models
        {
            class ButtonModel : PropertyChangeBase
            {
                static string TEXT = "Text";
                static string ICON = "Icon";
                /*0x18*/ string _text;
                /*0x20*/ UnityEngine.Sprite _binderPropIcon;

                /*0x25dd720*/ ButtonModel();
                /*0x25dd5c0*/ string get_Text();
                /*0x25dd5c8*/ void set_Text(string value);
                /*0x25dd65c*/ UnityEngine.Sprite get_Icon();
                /*0x25dd664*/ void set_Icon(UnityEngine.Sprite value);
            }

            class ExtendedDropdownItemModel : PropertyChangeBase
            {
                static string OPTION_TEXT = "OptionText";
                static string BACKGROUND_IMAGE = "BackgroundImage";
                static string CHECKMARK_IMAGE = "CheckmarkImage";
                static string ICON_IMAGE = "IconImage";
                /*0x18*/ string _binderPropOptionText;
                /*0x20*/ UnityEngine.Sprite _binderPropBackgroundImage;
                /*0x28*/ UnityEngine.Sprite _binderPropCheckmarkImage;
                /*0x30*/ UnityEngine.Sprite _binderPropIconImage;

                /*0x25ddb04*/ ExtendedDropdownItemModel();
                /*0x25dd81c*/ string get_OptionText();
                /*0x25dd824*/ void set_OptionText(string value);
                /*0x25dd8b8*/ UnityEngine.Sprite get_BackgroundImage();
                /*0x25dd8c0*/ void set_BackgroundImage(UnityEngine.Sprite value);
                /*0x25dd97c*/ UnityEngine.Sprite get_CheckmarkImage();
                /*0x25dd984*/ void set_CheckmarkImage(UnityEngine.Sprite value);
                /*0x25dda40*/ UnityEngine.Sprite get_IconImage();
                /*0x25dda48*/ void set_IconImage(UnityEngine.Sprite value);
            }

            class GenericProgressBarModel<T> : PropertyChangeBase
            {
                static string CURRENT_VALUE = "CurrentValue";
                static string MAX_VALUE = "MaxValue";
                /*0x0*/ T _binderPropCurrentValue;
                /*0x0*/ T _binderPropMaxValue;

                /*0x1f309e4*/ GenericProgressBarModel();
                /*0x1ffc854*/ T get_CurrentValue();
                /*0x1ffc854*/ void set_CurrentValue(T value);
                /*0x1ffc854*/ T get_MaxValue();
                /*0x1ffc854*/ void set_MaxValue(T value);
            }

            interface IDropdownOptionModel
            {
                /*0x1f30214*/ string get_Text();
                /*0x1f30214*/ UnityEngine.Sprite get_Image();
            }

            class DropdownOptionModel : EA.UI.Models.IDropdownOptionModel
            {
                /*0x10*/ string <Text>k__BackingField;
                /*0x18*/ UnityEngine.Sprite <Image>k__BackingField;

                /*0x25ddd24*/ DropdownOptionModel();
                /*0x25ddd04*/ string get_Text();
                /*0x25ddd0c*/ void set_Text(string value);
                /*0x25ddd14*/ UnityEngine.Sprite get_Image();
                /*0x25ddd1c*/ void set_Image(UnityEngine.Sprite value);
            }

            class InputFieldModel : PropertyChangeBase
            {
                static string TEXT_ENTRY = "TextEntry";
                static string PLACEHOLDER_TEXT = "PlaceholderText";
                static string BACKGROUND_SPRITE = "BackgroundSprite";
                static string CHARACTER_LIMIT = "CharacterLimit";
                /*0x18*/ string _binderPropTextEntry;
                /*0x20*/ string _binderPropPlaceholderText;
                /*0x28*/ UnityEngine.Sprite _binderPropBackgroundSprite;
                /*0x30*/ int _binderPropCharacterLimit;

                /*0x25ddfa0*/ InputFieldModel();
                /*0x25ddd2c*/ string get_TextEntry();
                /*0x25ddd34*/ void set_TextEntry(string value);
                /*0x25dddc8*/ string get_PlaceholderText();
                /*0x25dddd0*/ void set_PlaceholderText(string value);
                /*0x25dde64*/ UnityEngine.Sprite get_BackgroundSprite();
                /*0x25dde6c*/ void set_BackgroundSprite(UnityEngine.Sprite value);
                /*0x25ddf28*/ int get_CharacterLimit();
                /*0x25ddf30*/ void set_CharacterLimit(int value);
            }

            class ProgressButtonModel : EA.UI.Models.GenericProgressBarModel<int>
            {
                static string BUTTON_ICON = "ButtonIcon";
                /*0x20*/ UnityEngine.Sprite _binderPropButtonIcon;

                /*0x25de214*/ ProgressButtonModel();
                /*0x25de150*/ UnityEngine.Sprite get_Icon();
                /*0x25de158*/ void set_Icon(UnityEngine.Sprite value);
            }

            class SliderModel : PropertyChangeBase
            {
                static string BACKGROUND_SPRITE = "BackgroundSprite";
                static string HANDLE_SPRITE = "HandleSprite";
                static string FILL_SPRITE = "FillSprite";
                static string MIN_VALUE = "MinValue";
                static string MAX_VALUE = "MaxValue";
                static string CURRENT_VALUE = "CurrentValue";
                static string WHOLE_NUMBERS_ONLY = "WholeNumbersOnly";
                /*0x18*/ UnityEngine.Sprite _binderPropBackgroundSprite;
                /*0x20*/ UnityEngine.Sprite _binderPropHandleSprite;
                /*0x28*/ UnityEngine.Sprite _binderPropFillSprite;
                /*0x30*/ float _binderPropMinValue;
                /*0x34*/ float _binderPropMaxValue;
                /*0x38*/ float _binderPropCurrentValue;
                /*0x3c*/ bool _binderPropWholeNumbersOnly;

                /*0x25de774*/ SliderModel();
                /*0x25de324*/ UnityEngine.Sprite get_BackgroundSprite();
                /*0x25de32c*/ void set_BackgroundSprite(UnityEngine.Sprite value);
                /*0x25de3e8*/ UnityEngine.Sprite get_HandleSprite();
                /*0x25de3f0*/ void set_HandleSprite(UnityEngine.Sprite value);
                /*0x25de4ac*/ UnityEngine.Sprite get_FillSprite();
                /*0x25de4b4*/ void set_FillSprite(UnityEngine.Sprite value);
                /*0x25de570*/ float get_MinValue();
                /*0x25de578*/ void set_MinValue(float value);
                /*0x25de5f4*/ float get_MaxValue();
                /*0x25de5fc*/ void set_MaxValue(float value);
                /*0x25de678*/ float get_CurrentValue();
                /*0x25de680*/ void set_CurrentValue(float value);
                /*0x25de6fc*/ bool get_WholeNumbersOnly();
                /*0x25de704*/ void set_WholeNumbersOnly(bool value);
            }

            class ToggleModel : PropertyChangeBase
            {
                static string CHECK_MARK_SPRITE = "CheckMarkSprite";
                static string BACKGROUND_SPRITE = "BackgroundSprite";
                static string TEXT_STRING = "TextString";
                static string IS_ON = "IsOn";
                /*0x18*/ UnityEngine.Sprite _binderPropCheckMarkSprite;
                /*0x20*/ UnityEngine.Sprite _binderPropBackgroundSprite;
                /*0x28*/ string _binderPropTextString;
                /*0x30*/ bool _binderPropIsOn;

                /*0x25debc4*/ ToggleModel();
                /*0x25de928*/ UnityEngine.Sprite get_CheckMarkSprite();
                /*0x25de930*/ void set_CheckMarkSprite(UnityEngine.Sprite value);
                /*0x25de9ec*/ UnityEngine.Sprite get_BackgroundSprite();
                /*0x25de9f4*/ void set_BackgroundSprite(UnityEngine.Sprite value);
                /*0x25deab0*/ string get_TextString();
                /*0x25deab8*/ void set_TextString(string value);
                /*0x25deb4c*/ bool get_IsOn();
                /*0x25deb54*/ void set_IsOn(bool value);
            }
        }
    }

    namespace Unity
    {
        namespace Cutscene
        {
            enum BindingType
            {
                None = 0,
                String = 1,
                Int = 2,
                Bool = 3,
                GameObject = 4,
                Float = 5,
                Vector2 = 6,
                Vector3 = 7,
                Vector2Int = 8,
                Vector3Int = 9,
                RandIntRange = 10,
                RandFloatRange = 11,
                EventHandler = 12,
            }

            class BindingTypeExtensions
            {
                static /*0x25ded74*/ EA.Unity.Cutscene.BindingType BaseBindingType(EA.Unity.Cutscene.BindingType type);
            }

            class BindingValue
            {
                /*0x10*/ EA.Unity.Cutscene.BindingType type;
                /*0x18*/ string _stringValue;
                /*0x20*/ UnityEngine.GameObject _gameObjectValue;
                /*0x28*/ UnityEngine.Vector3 _vector3Value;
                /*0x34*/ UnityEngine.Vector3Int _vector3IntValue;
                /*0x40*/ System.Action _eventValue;

                /*0x25ded90*/ BindingValue(EA.Unity.Cutscene.BindingType type);
                /*0x25dedb8*/ BindingValue(string value);
                /*0x25dedf0*/ BindingValue(bool value);
                /*0x25dee30*/ BindingValue(UnityEngine.GameObject value);
                /*0x25dee68*/ BindingValue(float value);
                /*0x25deea0*/ BindingValue(UnityEngine.Vector2 value);
                /*0x25deedc*/ BindingValue(UnityEngine.Vector3 value);
                /*0x25def20*/ BindingValue(int value);
                /*0x25def58*/ BindingValue(UnityEngine.Vector2Int value);
                /*0x25def94*/ BindingValue(UnityEngine.Vector3Int value);
                /*0x25defcc*/ BindingValue(System.Action value);
                /*0x25df004*/ string get_stringValue();
                /*0x25df00c*/ void set_stringValue(string value);
                /*0x25df014*/ int get_intValue();
                /*0x25def50*/ void set_intValue(int value);
                /*0x25df01c*/ UnityEngine.Vector2Int get_vector2IntValue();
                /*0x25def8c*/ void set_vector2IntValue(UnityEngine.Vector2Int value);
                /*0x25df024*/ UnityEngine.Vector3Int get_vector3IntValue();
                /*0x25df034*/ void set_vector3IntValue(UnityEngine.Vector3Int value);
                /*0x25df040*/ bool get_boolValue();
                /*0x25dee24*/ void set_boolValue(bool value);
                /*0x25df050*/ UnityEngine.GameObject get_gameObjectValue();
                /*0x25df058*/ void set_gameObjectValue(UnityEngine.GameObject value);
                /*0x25df060*/ float get_floatValue();
                /*0x25dee98*/ void set_floatValue(float value);
                /*0x25df068*/ UnityEngine.Vector2 get_vector2Value();
                /*0x25deed4*/ void set_vector2Value(UnityEngine.Vector2 value);
                /*0x25df07c*/ UnityEngine.Vector3 get_vector3Value();
                /*0x25df088*/ void set_vector3Value(UnityEngine.Vector3 value);
                /*0x25df094*/ int get_randIntValue();
                /*0x25df0a4*/ float get_randFloatValue();
                /*0x25df0b4*/ System.Action get_eventValue();
                /*0x25df0bc*/ void set_eventValue(System.Action value);
                /*0x25df0c4*/ string ToString();
            }

            class CutsceneBinding
            {
                /*0x10*/ EA.Unity.Cutscene.BindingType type;
                /*0x18*/ string name;
                /*0x20*/ EA.Unity.Cutscene.BindingValue defaultValue;

                /*0x25df78c*/ CutsceneBinding(EA.Unity.Cutscene.BindingType type);
                /*0x25df768*/ bool get_hasDefault();
            }

            class RuntimeBinding
            {
                /*0x10*/ string name;
                /*0x18*/ EA.Unity.Cutscene.BindingValue value;

                /*0x25df7b4*/ RuntimeBinding(string name, EA.Unity.Cutscene.BindingValue value);
            }

            class NodeParam
            {
                /*0x10*/ EA.Unity.Cutscene.BindingType _type;
                /*0x18*/ EA.Unity.Cutscene.BindingValue localValue;
                /*0x20*/ string runtimeBindingName;
                /*0x28*/ bool runtimeBindingIsInternal;

                /*0x25df93c*/ NodeParam(EA.Unity.Cutscene.BindingType type);
                /*0x25df9bc*/ NodeParam(EA.Unity.Cutscene.BindingType type, float defaultLocalValue);
                /*0x25dfa50*/ NodeParam(EA.Unity.Cutscene.BindingType type, bool defaultLocalValue);
                /*0x25dfae0*/ NodeParam(EA.Unity.Cutscene.BindingType type, UnityEngine.Vector2 defaultLocalValue);
                /*0x25df7f8*/ EA.Unity.Cutscene.BindingType get_type();
                /*0x25df800*/ void set_type(EA.Unity.Cutscene.BindingType value);
                /*0x25df808*/ bool get_isBoundValue();
                /*0x25df844*/ bool IsBoundValue(string bindingName);
                /*0x25df884*/ bool get_isDefault();
                /*0x25df8b0*/ bool get_isLocalValue();
                /*0x25df8d4*/ void UseDefault();
                /*0x25df904*/ void UseBinding(string bindingName);
                /*0x25df920*/ void UseLocalValue();
                /*0x25dfb8c*/ string ToString();
                /*0x25dfc30*/ EA.Unity.Cutscene.RuntimeNodeParam GetRuntimeNodeParam(System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBinding> runtimeBindings, bool nullOk);
                /*0x25dfe38*/ bool <GetRuntimeNodeParam>b__22_0(EA.Unity.Cutscene.RuntimeBinding b);
            }

            class RuntimeNodeParam
            {
                /*0x10*/ EA.Unity.Cutscene.BindingValue value;

                /*0x25dfe08*/ RuntimeNodeParam(EA.Unity.Cutscene.BindingValue value);
            }

            class Cutscene : UnityEngine.ScriptableObject
            {
                /*0x18*/ System.Collections.Generic.List<EA.Unity.Cutscene.CutsceneBinding> bindings;
                /*0x20*/ System.Collections.Generic.List<EA.Unity.Cutscene.BaseNode> nodes;
                /*0x28*/ string soundBankId;
                /*0x30*/ System.Collections.Generic.List<Yeti.YetiSoundBankReferenceForList> additionalSoundBankIds;
                /*0x38*/ float soundBankUnloadAfterSeconds;
                /*0x3c*/ EA.Unity.Cutscene.Cutscene.SoundBankLoadType soundBankLoadType;

                static /*0x25e029c*/ bool <CheckForCycle>g__DFS|8_0(EA.Unity.Cutscene.BaseNode root, ref EA.Unity.Cutscene.Cutscene.<> );
                /*0x25e04c4*/ Cutscene();
                /*0x25dfe58*/ void OnEnable();
                /*0x25dff90*/ bool CheckForCycle();

                enum SoundBankLoadType
                {
                    None = 0,
                    Default = 1,
                    CustomUnloadTime = 2,
                }

                struct <>c__DisplayClass8_0
                {
                    /*0x10*/ System.Collections.Generic.HashSet<EA.Unity.Cutscene.BaseNode> currentPath;
                    /*0x18*/ System.Collections.Generic.HashSet<EA.Unity.Cutscene.BaseNode> visited;
                }
            }

            class RuntimeCutscene
            {
                /*0x10*/ EA.Unity.Cutscene.Cutscene cutscene;
                /*0x18*/ UnityEngine.Transform sceneRoot;
                /*0x20*/ System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBinding> runtimeBindings;
                /*0x28*/ System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBaseNode> runtimeNodes;
                /*0x30*/ System.Collections.Generic.HashSet<EA.Unity.Cutscene.RuntimeBaseNode> activeNodes;
                /*0x38*/ EA.Unity.Cutscene.RuntimeCutscene.RunState <runState>k__BackingField;
                /*0x40*/ System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeCutscene.FiredConnection> firedConnections;
                /*0x48*/ System.Collections.Generic.List<System.Action> cleanupActions;
                /*0x50*/ System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBaseNode> utilListForStep;

                /*0x25e04dc*/ RuntimeCutscene(EA.Unity.Cutscene.Cutscene cutscene, UnityEngine.Transform sceneRoot);
                /*0x25e04cc*/ EA.Unity.Cutscene.RuntimeCutscene.RunState get_runState();
                /*0x25e04d4*/ void set_runState(EA.Unity.Cutscene.RuntimeCutscene.RunState value);
                /*0x25e0bdc*/ void Play(System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBinding> bindingValues);
                /*0x25e127c*/ void Stop();
                /*0x25e13c8*/ void Step();
                /*0x25e1ad8*/ void FireOutput(EA.Unity.Cutscene.RuntimeBaseNode outputNode, int outputIdx);
                /*0x25e1d6c*/ void SetRuntimeBinding(EA.Unity.Cutscene.RuntimeBinding runtimeBinding);
                /*0x25e1eb4*/ void AddCleanupAction(System.Action onCleanup);
                /*0x25e1298*/ void Cleanup();

                enum RunState
                {
                    None = 0,
                    Playing = 1,
                    UserCancel = 2,
                    Complete = 3,
                }

                class FiredConnection
                {
                    /*0x10*/ EA.Unity.Cutscene.RuntimeBaseNode node;
                    /*0x18*/ int inputIdx;

                    /*0x25e1d30*/ FiredConnection(EA.Unity.Cutscene.RuntimeBaseNode node, int inputIdx);
                }

                class <>c__DisplayClass15_0
                {
                    /*0x10*/ EA.Unity.Cutscene.CutsceneBinding binding;

                    /*0x25e1274*/ <>c__DisplayClass15_0();
                    /*0x25e1f1c*/ bool <Play>b__0(EA.Unity.Cutscene.RuntimeBinding b);
                }

                class <>c__DisplayClass19_0
                {
                    /*0x10*/ EA.Unity.Cutscene.RuntimeBinding runtimeBinding;

                    /*0x25e1eac*/ <>c__DisplayClass19_0();
                    /*0x25e1f44*/ bool <SetRuntimeBinding>b__0(EA.Unity.Cutscene.RuntimeBinding b);
                }
            }

            class CutsceneAutoBindingInfo
            {
                /*0x10*/ string name;
                /*0x18*/ EA.Unity.Cutscene.BindingType type;
                /*0x20*/ string usage;

                /*0x25e1f6c*/ CutsceneAutoBindingInfo(string name, EA.Unity.Cutscene.BindingType type, string usage);
            }

            class CutsceneContainer
            {
                /*0x10*/ EA.Unity.Cutscene.Cutscene cutscene;
                /*0x18*/ string cutsceneBundleName;
                /*0x20*/ string cutsceneAssetName;
                /*0x28*/ System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBinding> runtimeBindings;

                /*0x25e2020*/ CutsceneContainer();
                /*0x25e1fc0*/ bool CouldPlayImmediately();
            }

            enum SuccessFailCancel
            {
                NONE = 0,
                Success = 1,
                Failure = 2,
                UserCancel = 3,
            }

            class CutsceneController : UnityEngine.MonoBehaviour
            {
                /*0x20*/ EA.Unity.Cutscene.CutsceneContainer cutscene;
                /*0x28*/ bool autoPlay;
                /*0x29*/ bool loop;
                /*0x2a*/ bool destroyGameObjectWhenFinished;
                /*0x30*/ System.Action<EA.Unity.Cutscene.SuccessFailCancel> onComplete;
                /*0x38*/ EA.Unity.Cutscene.RuntimeCutscene <runtimeCutscene>k__BackingField;
                /*0x40*/ EA.Unity.Cutscene.CutsceneController.PlayState playState;

                /*0x25e2638*/ CutsceneController();
                /*0x25e20a8*/ EA.Unity.Cutscene.RuntimeCutscene get_runtimeCutscene();
                /*0x25e20b0*/ void set_runtimeCutscene(EA.Unity.Cutscene.RuntimeCutscene value);
                /*0x25e20b8*/ bool get_isActive();
                /*0x25e20c8*/ void Clear();
                /*0x25e236c*/ void Start();
                /*0x25e2548*/ void OnDestroy();
                /*0x25e2428*/ void Play();
                /*0x25e2584*/ void PlayCutscene();
                /*0x25e21f4*/ void StepRuntimeCutscene();
                /*0x25e2634*/ void Update();

                enum PlayState
                {
                    Idle = 0,
                    Loading = 1,
                    Playing = 2,
                }
            }

            class Connection
            {
                /*0x10*/ EA.Unity.Cutscene.BaseNode inputNode;
                /*0x18*/ int inputIdx;
                /*0x20*/ EA.Unity.Cutscene.BaseNode outputNode;
                /*0x28*/ int outputIdx;

                /*0x25e26a8*/ Connection(EA.Unity.Cutscene.BaseNode inputNode, int inputIdx, EA.Unity.Cutscene.BaseNode outputNode, int outputIdx);
            }

            class BaseNode : UnityEngine.ScriptableObject
            {
                static int kInputStart = 0;
                static int kOutputDone = 0;
                /*0x18*/ System.Collections.Generic.List<EA.Unity.Cutscene.Connection> connections;
                /*0x20*/ bool allowEditInPlayMode;
                /*0x24*/ UnityEngine.Rect editorRect;
                /*0x38*/ EA.Unity.Cutscene.BaseNode dockedTo;
                /*0x40*/ bool isDragging;
                /*0x41*/ bool pinWindowOpen;

                static /*0x1f318fc*/ bool FindConnectedNode<T>(EA.Unity.Cutscene.Cutscene cutscene, EA.Unity.Cutscene.BaseNode nodeToFind);
                static /*0x25e2960*/ bool FindConnectedNode(EA.Unity.Cutscene.BaseNode fromNode, EA.Unity.Cutscene.BaseNode nodeToFind);
                /*0x25e2a80*/ BaseNode();
                /*0x25e2708*/ void OnEnable();
                /*0x25e2790*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e2800*/ System.Collections.Generic.List<string> GetInputPorts();
                /*0x25e28a8*/ System.Collections.Generic.List<string> GetOutputPorts();
                /*0x25e2950*/ string get_WindowTitle();
                /*0x25e2958*/ bool IsValid(EA.Unity.Cutscene.Cutscene cutscene);
            }

            class RuntimeBaseNode
            {
                /*0x10*/ EA.Unity.Cutscene.BaseNode baseNode;
                /*0x18*/ bool[] inputLatches;
                /*0x20*/ System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBaseNode.OutputConnection> outputConnections;
                /*0x28*/ bool isActive;
                /*0x30*/ System.DateTime lastActiveTime;

                /*0x25e2ab8*/ RuntimeBaseNode(EA.Unity.Cutscene.BaseNode baseNode);
                /*0x25e2a88*/ bool GetInputLatchAt(int idx);
                /*0x25e2b9c*/ void ClearInputLatches();
                /*0x25e19d8*/ void SetInputLatchAtIdx(int inputIdx);
                /*0x25e1c30*/ System.Collections.Generic.List<EA.Unity.Cutscene.RuntimeBaseNode.OutputConnection> GetOutputConnectionsAtIdx(int outputIdx);
                /*0x25e2be4*/ bool ShouldActivate();
                /*0x25e2c84*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e2c88*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e2c90*/ UnityEngine.Color get_boxColor();
                /*0x25e2d90*/ string get_RuntimeWindowTitle();
                /*0x25e2dac*/ void DrawRuntimeBoxContents(EA.Unity.Cutscene.Cutscene cutscene);

                class OutputConnection
                {
                    /*0x10*/ EA.Unity.Cutscene.RuntimeBaseNode inputNode;
                    /*0x18*/ int inputIdx;

                    /*0x25e0ba0*/ OutputConnection(EA.Unity.Cutscene.RuntimeBaseNode inputNode, int inputIdx);
                }

                enum NodeStepResult
                {
                    Busy = 0,
                    Done = 1,
                    RequestScriptAbort = 2,
                }
            }

            class CommentNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ string commentString;

                /*0x25e2ee4*/ CommentNode();
                /*0x25e2db0*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e2e0c*/ string get_WindowTitle();
            }

            class RuntimeCommentNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e2e08*/ RuntimeCommentNode(EA.Unity.Cutscene.CommentNode node);
                /*0x25e2eec*/ EA.Unity.Cutscene.CommentNode get_Node();
                /*0x25e2f68*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e2f6c*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class BoolBranchNode : EA.Unity.Cutscene.BaseNode
            {
                static int kOutputFalse = 1;
                static int kOutputTrue = 2;
                /*0x48*/ EA.Unity.Cutscene.NodeParam branchCondition;
                /*0x50*/ string[] states;

                /*0x25e3184*/ BoolBranchNode();
                /*0x25e2f98*/ System.Collections.Generic.List<string> GetOutputPorts();
                /*0x25e30c0*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e311c*/ string get_WindowTitle();
            }

            class RuntimeBoolBranchNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e3118*/ RuntimeBoolBranchNode(EA.Unity.Cutscene.BoolBranchNode node);
                /*0x25e3228*/ EA.Unity.Cutscene.BoolBranchNode get_Node();
                /*0x25e32a4*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e32a8*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class BooleanLogicNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x44*/ int inputCount;
                /*0x48*/ EA.Unity.Cutscene.BooleanLogicNode.Type type;

                /*0x25e34f4*/ BooleanLogicNode();
                /*0x25e3328*/ System.Collections.Generic.List<string> GetInputPorts();
                /*0x25e342c*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e3488*/ string get_WindowTitle();

                enum Type
                {
                    AND = 0,
                    OR = 1,
                }
            }

            class RuntimeBooleanLogicNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e3484*/ RuntimeBooleanLogicNode(EA.Unity.Cutscene.BooleanLogicNode node);
                /*0x25e3504*/ EA.Unity.Cutscene.BooleanLogicNode get_Node();
                /*0x25e3580*/ bool ShouldActivate();
                /*0x25e36c4*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e36c8*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class NestedCutsceneNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.Cutscene nestedCutscene;
                /*0x50*/ System.Collections.Generic.List<string> nestedCutsceneBindingNames;
                /*0x58*/ System.Collections.Generic.List<EA.Unity.Cutscene.BindingType> nestedCutsceneBindingTypes;
                /*0x60*/ System.Collections.Generic.List<EA.Unity.Cutscene.NodeParam> nestedCutsceneBindingParams;

                /*0x25e3b40*/ NestedCutsceneNode();
                /*0x25e36f4*/ void OnEnable();
                /*0x25e37f8*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e3854*/ bool ValidateBindingParamsList();
                /*0x25e3a74*/ string get_WindowTitle();
            }

            class RuntimeNestedCutsceneNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ EA.Unity.Cutscene.RuntimeCutscene nestedRuntimeCutscene;

                /*0x25e3850*/ RuntimeNestedCutsceneNode(EA.Unity.Cutscene.NestedCutsceneNode node);
                /*0x25e3c70*/ EA.Unity.Cutscene.NestedCutsceneNode get_Node();
                /*0x25e3cec*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e3fd4*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class StartNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x25e412c*/ StartNode();
                /*0x25e4068*/ System.Collections.Generic.List<string> GetInputPorts();
                /*0x25e40d0*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
            }

            class RuntimeStartNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e4128*/ RuntimeStartNode(EA.Unity.Cutscene.StartNode node);
                /*0x25e4134*/ EA.Unity.Cutscene.StartNode get_Node();
                /*0x25e41b0*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class TimeDelayNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam seconds;

                /*0x25e4238*/ TimeDelayNode();
                /*0x25e41dc*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
            }

            class RuntimeTimeDelayNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ float delaySeconds;
                /*0x40*/ System.DateTime endTime;

                /*0x25e4234*/ RuntimeTimeDelayNode(EA.Unity.Cutscene.TimeDelayNode node);
                /*0x25e42a4*/ EA.Unity.Cutscene.TimeDelayNode get_Node();
                /*0x25e4320*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e43f0*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class DeleteNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam gameObjectParam;
                /*0x50*/ EA.Unity.Cutscene.NodeParam destroyDelayParam;

                /*0x25e45f0*/ DeleteNode();
                /*0x25e4488*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e44e4*/ string get_WindowTitle();
            }

            class RuntimeDeleteNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.GameObject gameObject;

                /*0x25e44e0*/ RuntimeDeleteNode(EA.Unity.Cutscene.DeleteNode node);
                /*0x25e4680*/ EA.Unity.Cutscene.DeleteNode get_Node();
                /*0x25e46fc*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e4768*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class EnableGameObjectNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam gameObjectParam;
                /*0x50*/ EA.Unity.Cutscene.EnableGameObjectNode.SetTo setEnabled;
                /*0x54*/ bool restoreOnExit;

                /*0x25e4988*/ EnableGameObjectNode();
                /*0x25e4884*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e48e0*/ string get_WindowTitle();

                enum SetTo
                {
                    Enabled = 0,
                    Disabled = 1,
                }
            }

            class RuntimeEnableGameObjectNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.GameObject gameObject;

                /*0x25e48dc*/ RuntimeEnableGameObjectNode(EA.Unity.Cutscene.EnableGameObjectNode node);
                /*0x25e49fc*/ EA.Unity.Cutscene.EnableGameObjectNode get_Node();
                /*0x25e4a78*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e4ad8*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);

                class <>c__DisplayClass5_0
                {
                    /*0x10*/ bool initialEnabled;
                    /*0x18*/ UnityEngine.GameObject thisGameObj;

                    /*0x25e4c54*/ <>c__DisplayClass5_0();
                    /*0x25e4c5c*/ void <OnStep>b__0();
                }
            }

            class EnableRenderersNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam gameObjectParam;
                /*0x50*/ bool includeInactive;
                /*0x54*/ EA.Unity.Cutscene.EnableRenderersNode.SetTo setEnabled;
                /*0x58*/ bool restoreOnExit;

                /*0x25e4e70*/ EnableRenderersNode();
                /*0x25e4ce4*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e4dc8*/ string get_WindowTitle();

                enum SetTo
                {
                    Enabled = 0,
                    Disabled = 1,
                }
            }

            class RuntimeEnableRenderersNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.GameObject gameObject;
                /*0x40*/ System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<UnityEngine.Renderer, bool>> rendererStates;

                /*0x25e4d3c*/ RuntimeEnableRenderersNode(EA.Unity.Cutscene.EnableRenderersNode node);
                /*0x25e4ee4*/ EA.Unity.Cutscene.EnableRenderersNode get_Node();
                /*0x25e4f60*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e4fc0*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e53ec*/ void <OnStep>b__6_0();
            }

            class ExtractPositionNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam prefab;
                /*0x50*/ string bindingName;

                /*0x25e5870*/ ExtractPositionNode();
                /*0x25e577c*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e57d8*/ string get_WindowTitle();
            }

            class RuntimeExtractPositionNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e57d4*/ RuntimeExtractPositionNode(EA.Unity.Cutscene.ExtractPositionNode node);
                /*0x25e58dc*/ EA.Unity.Cutscene.ExtractPositionNode get_Node();
                /*0x25e5958*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e595c*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class ExtractScaleNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam prefab;
                /*0x50*/ EA.Unity.Cutscene.NodeParam localScale;
                /*0x58*/ string bindingName;

                /*0x25e5d30*/ ExtractScaleNode();
                /*0x25e5b24*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e5b80*/ string get_WindowTitle();
            }

            class RuntimeExtractScaleNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e5b7c*/ RuntimeExtractScaleNode(EA.Unity.Cutscene.ExtractScaleNode node);
                /*0x25e5dc0*/ EA.Unity.Cutscene.ExtractScaleNode get_Node();
                /*0x25e5e3c*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e5e40*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class FindGameObjectNode : EA.Unity.Cutscene.BaseNode
            {
                static int kOutputFound = 1;
                static int kOutputNotFound = 2;
                /*0x48*/ EA.Unity.Cutscene.NodeParam gameObjectName;
                /*0x50*/ bool findUnderParent;
                /*0x51*/ bool findUnderParentRecursively;
                /*0x58*/ EA.Unity.Cutscene.NodeParam parentGameObject;
                /*0x60*/ string bindingName;
                /*0x68*/ bool searchInactive;
                /*0x69*/ bool okIfNotFound;

                /*0x25e6380*/ FindGameObjectNode();
                /*0x25e606c*/ System.Collections.Generic.List<string> GetOutputPorts();
                /*0x25e6110*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e616c*/ string get_WindowTitle();
            }

            class RuntimeFindGameObjectNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.GameObject foundGameObject;

                static /*0x25e6800*/ UnityEngine.Transform FindNamedChild(UnityEngine.Transform parent, string name, bool recursive);
                static /*0x25e6a2c*/ UnityEngine.Transform FindNamedChild(UnityEngine.Transform parent, string[] splitName, int currentSplitDepth, bool recursive);
                static /*0x25e6864*/ UnityEngine.GameObject SearchForInactiveObject(UnityEngine.SceneManagement.Scene scene, string name);
                static /*0x25e6bc8*/ UnityEngine.Transform SearchForInactiveChild(UnityEngine.Transform currentObj, string[] nameParts, int currentMatchedPart);
                /*0x25e6168*/ RuntimeFindGameObjectNode(EA.Unity.Cutscene.FindGameObjectNode node);
                /*0x25e6410*/ EA.Unity.Cutscene.FindGameObjectNode get_Node();
                /*0x25e648c*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e6d14*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class ParticleSystemControllerNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam gameObjectParam;
                /*0x50*/ EA.Unity.Cutscene.ParticleSystemControllerNode.ControlAction controlAction;
                /*0x54*/ bool includeChildren;

                /*0x25e6fcc*/ ParticleSystemControllerNode();
                /*0x25e6e90*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e6eec*/ string get_WindowTitle();

                enum ControlAction
                {
                    Start = 0,
                    Stop = 1,
                }
            }

            class RuntimeParticleSystemControllerNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.GameObject gameObject;
                /*0x40*/ UnityEngine.ParticleSystem[] particleSystems;

                /*0x25e6ee8*/ RuntimeParticleSystemControllerNode(EA.Unity.Cutscene.ParticleSystemControllerNode node);
                /*0x25e7038*/ EA.Unity.Cutscene.ParticleSystemControllerNode get_Node();
                /*0x25e70b4*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e7340*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class ReparentGameObjectNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam gameObjectParam;
                /*0x50*/ EA.Unity.Cutscene.NodeParam parentObjectParam;
                /*0x58*/ bool resetPosition;
                /*0x59*/ bool restoreOnExit;

                /*0x25e74d0*/ ReparentGameObjectNode();
                /*0x25e73ec*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e7448*/ string get_WindowTitle();
            }

            class RuntimeReparentGameObjectNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.GameObject gameObject;
                /*0x40*/ UnityEngine.GameObject parentObject;
                /*0x48*/ UnityEngine.Transform oldParentObject;
                /*0x50*/ bool resetPosition;

                /*0x25e7444*/ RuntimeReparentGameObjectNode(EA.Unity.Cutscene.ReparentGameObjectNode node);
                /*0x25e7560*/ EA.Unity.Cutscene.ReparentGameObjectNode get_Node();
                /*0x25e75dc*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e782c*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);

                class <>c__DisplayClass8_0
                {
                    /*0x10*/ EA.Unity.Cutscene.RuntimeReparentGameObjectNode <>4__this;
                    /*0x18*/ UnityEngine.GameObject thisGameObj;

                    /*0x25e7a78*/ <>c__DisplayClass8_0();
                    /*0x25e7a80*/ void <OnStep>b__0();
                }
            }

            class SetSortingGroupOrderNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam gameObjectParam;
                /*0x50*/ EA.Unity.Cutscene.NodeParam orderParam;
                /*0x58*/ bool disableSorting;

                /*0x25e7c7c*/ SetSortingGroupOrderNode();
                /*0x25e7b50*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e7bac*/ string get_WindowTitle();
            }

            class RuntimeSetSortingGroupOrderNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.GameObject gameObject;
                /*0x40*/ bool disableSorting;

                /*0x25e7ba8*/ RuntimeSetSortingGroupOrderNode(EA.Unity.Cutscene.SetSortingGroupOrderNode node);
                /*0x25e7d0c*/ EA.Unity.Cutscene.SetSortingGroupOrderNode get_Node();
                /*0x25e7d88*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e7f70*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class SpawnNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam prefab;
                /*0x50*/ string bindingName;
                /*0x58*/ bool overridePosition;
                /*0x60*/ EA.Unity.Cutscene.NodeParam worldPositionParam;
                /*0x68*/ bool overrideScale;
                /*0x70*/ EA.Unity.Cutscene.NodeParam worldScaleParam;
                /*0x78*/ bool setParent;
                /*0x80*/ EA.Unity.Cutscene.NodeParam parentParam;
                /*0x88*/ bool deleteOnExit;
                /*0x89*/ bool hide;

                /*0x25e8344*/ SpawnNode();
                /*0x25e7f9c*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e7ff8*/ string get_WindowTitle();
            }

            class RuntimeSpawnNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e7ff4*/ RuntimeSpawnNode(EA.Unity.Cutscene.SpawnNode node);
                /*0x25e8424*/ EA.Unity.Cutscene.SpawnNode get_Node();
                /*0x25e84a0*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e84a4*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);

                class <>c__DisplayClass4_0
                {
                    /*0x10*/ UnityEngine.GameObject newGameObject;

                    /*0x25e89c8*/ <>c__DisplayClass4_0();
                    /*0x25e89d0*/ void <OnStep>b__0();
                }
            }

            class TweenTransformNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam transformObjectParam;
                /*0x50*/ EA.Unity.Cutscene.NodeParam enablePositionParam;
                /*0x58*/ EA.Unity.Cutscene.NodeParam isLocalPositionParam;
                /*0x60*/ EA.Unity.Cutscene.NodeParam targetPositionParam;
                /*0x68*/ EA.Unity.Cutscene.NodeParam enableZRotParam;
                /*0x70*/ EA.Unity.Cutscene.NodeParam isLocalZRotParam;
                /*0x78*/ EA.Unity.Cutscene.NodeParam targetZRotParam;
                /*0x80*/ EA.Unity.Cutscene.NodeParam enableScaleParam;
                /*0x88*/ EA.Unity.Cutscene.NodeParam targetScaleParam;
                /*0x90*/ EA.Unity.Cutscene.NodeParam tweenTimeParam;
                /*0x98*/ EA.Unity.Cutscene.Utils.ValueTween.Type tweenType;

                /*0x25e8e54*/ TweenTransformNode();
                /*0x25e8a60*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e8abc*/ string get_WindowTitle();
            }

            class RuntimeTweenTransformNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ UnityEngine.Transform transform;
                /*0x40*/ bool enablePosition;
                /*0x41*/ bool enableZRot;
                /*0x42*/ bool enableScale;
                /*0x43*/ bool localPosition;
                /*0x44*/ bool localZRot;
                /*0x48*/ UnityEngine.Vector3 srcPosition;
                /*0x54*/ float srcZRot;
                /*0x58*/ UnityEngine.Vector3 srcScale;
                /*0x64*/ UnityEngine.Vector3 dstPosition;
                /*0x70*/ float dstZRot;
                /*0x74*/ UnityEngine.Vector3 dstScale;
                /*0x80*/ float tweenTime;
                /*0x84*/ float lifetime;

                /*0x25e8ab8*/ RuntimeTweenTransformNode(EA.Unity.Cutscene.TweenTransformNode node);
                /*0x25e9064*/ EA.Unity.Cutscene.TweenTransformNode get_Node();
                /*0x25e90e0*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e94cc*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class MathVec2FloatOpNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x44*/ EA.Unity.Cutscene.MathVec2FloatOpNode.Operation operation;
                /*0x48*/ EA.Unity.Cutscene.NodeParam vec2Param;
                /*0x50*/ EA.Unity.Cutscene.MathVec2FloatOpNode.Mask mask;
                /*0x58*/ EA.Unity.Cutscene.NodeParam floatParam;
                /*0x60*/ string outputBindingName;

                /*0x25e9d7c*/ MathVec2FloatOpNode();
                /*0x25e97d0*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25e982c*/ string get_WindowTitle();

                enum Operation
                {
                    Add = 0,
                    Subtract = 1,
                    Multiply = 2,
                    Divide = 3,
                    Set = 4,
                    Get = 5,
                }

                enum Mask
                {
                    XY = 0,
                    X = 1,
                    Y = 2,
                }
            }

            class RuntimeMathVec2FloatOpNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25e9828*/ RuntimeMathVec2FloatOpNode(EA.Unity.Cutscene.MathVec2FloatOpNode node);
                /*0x25e9e0c*/ EA.Unity.Cutscene.MathVec2FloatOpNode get_Node();
                /*0x25e9e88*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25e9e8c*/ void SetOutputBinding(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25ea1f0*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class MathVec2Vec2OpNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x44*/ EA.Unity.Cutscene.MathVec2Vec2OpNode.Operation operation;
                /*0x48*/ EA.Unity.Cutscene.NodeParam arg1Param;
                /*0x50*/ EA.Unity.Cutscene.NodeParam arg2Param;
                /*0x58*/ string outputBindingName;

                /*0x25ea52c*/ MathVec2Vec2OpNode();
                /*0x25ea22c*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25ea288*/ string get_WindowTitle();

                enum Operation
                {
                    Add = 0,
                    Subtract = 1,
                    ComponentWiseMultiply = 2,
                    ComponentWiseDivide = 3,
                    DotProduct = 4,
                }
            }

            class RuntimeMathVec2Vec2OpNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25ea284*/ RuntimeMathVec2Vec2OpNode(EA.Unity.Cutscene.MathVec2Vec2OpNode node);
                /*0x25ea5bc*/ EA.Unity.Cutscene.MathVec2Vec2OpNode get_Node();
                /*0x25ea638*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25ea63c*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class NodeEditorUtils
            {
                /*0x25ea8a8*/ NodeEditorUtils();
            }

            class RandBoolNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam weightParam;
                /*0x50*/ string bindingName;

                /*0x25eaa5c*/ RandBoolNode();
                /*0x25ea8b0*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25ea90c*/ string get_WindowTitle();
            }

            class RuntimeRandBoolNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25ea908*/ RuntimeRandBoolNode(EA.Unity.Cutscene.RandBoolNode node);
                /*0x25eaacc*/ EA.Unity.Cutscene.RandBoolNode get_Node();
                /*0x25eab48*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25eab4c*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class RandFloatNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam minParam;
                /*0x50*/ EA.Unity.Cutscene.NodeParam maxParam;
                /*0x58*/ string bindingName;

                /*0x25eaea4*/ RandFloatNode();
                /*0x25eac8c*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25eace8*/ string get_WindowTitle();
            }

            class RuntimeRandFloatNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x25eace4*/ RuntimeRandFloatNode(EA.Unity.Cutscene.RandFloatNode node);
                /*0x25eaf34*/ EA.Unity.Cutscene.RandFloatNode get_Node();
                /*0x25eafb0*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25eafb4*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class RandGameObjectNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam[] options;
                /*0x50*/ float[] weights;
                /*0x58*/ float decay;
                /*0x60*/ string bindingName;

                /*0x25eb458*/ RandGameObjectNode();
                /*0x25eb118*/ void OnEnable();
                /*0x25eb178*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25eb1d4*/ string get_WindowTitle();
            }

            class RuntimeRandGameObjectNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ float[] weights;

                /*0x25eb1d0*/ RuntimeRandGameObjectNode(EA.Unity.Cutscene.RandGameObjectNode node);
                /*0x25eb4fc*/ EA.Unity.Cutscene.RandGameObjectNode get_Node();
                /*0x25eb578*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25eb680*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class RandomChoiceNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ float[] weights;
                /*0x50*/ float decay;

                /*0x25ebbfc*/ RandomChoiceNode();
                /*0x25eb8dc*/ System.Collections.Generic.List<string> GetOutputPorts();
                /*0x25eba88*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25ebae4*/ string get_WindowTitle();
            }

            class RuntimeRandomChoiceNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ float[] weights;

                /*0x25ebae0*/ RuntimeRandomChoiceNode(EA.Unity.Cutscene.RandomChoiceNode node);
                /*0x25ebc80*/ EA.Unity.Cutscene.RandomChoiceNode get_Node();
                /*0x25ebcfc*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25ebe04*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class RandPointInColliderNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ EA.Unity.Cutscene.NodeParam colliderGameObj;
                /*0x50*/ string bindingName;

                /*0x25ec008*/ RandPointInColliderNode();
                /*0x25ebf18*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25ebf74*/ string get_WindowTitle();
            }

            class RuntimeRandPointInColliderNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                static /*0x25ec0f4*/ UnityEngine.Vector2 GetRandomPointInCollider(UnityEngine.Collider2D collider);
                static /*0x25ec1fc*/ UnityEngine.Vector2 GetRandomPointInColliders(UnityEngine.Collider2D[] colliders);
                /*0x25ebf70*/ RuntimeRandPointInColliderNode(EA.Unity.Cutscene.RandPointInColliderNode node);
                /*0x25ec074*/ EA.Unity.Cutscene.RandPointInColliderNode get_Node();
                /*0x25ec0f0*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25ec23c*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            class RandStringNode : EA.Unity.Cutscene.BaseNode
            {
                /*0x48*/ string[] options;
                /*0x50*/ float[] weights;
                /*0x58*/ float decay;
                /*0x60*/ string bindingName;

                /*0x25ec6d4*/ RandStringNode();
                /*0x25ec410*/ EA.Unity.Cutscene.RuntimeBaseNode CreateRuntimeNode();
                /*0x25ec46c*/ string get_WindowTitle();
            }

            class RuntimeRandStringNode : EA.Unity.Cutscene.RuntimeBaseNode
            {
                /*0x38*/ float[] weights;

                /*0x25ec468*/ RuntimeRandStringNode(EA.Unity.Cutscene.RandStringNode node);
                /*0x25ec778*/ EA.Unity.Cutscene.RandStringNode get_Node();
                /*0x25ec7f4*/ void OnActivate(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
                /*0x25ec8fc*/ EA.Unity.Cutscene.RuntimeBaseNode.NodeStepResult OnStep(EA.Unity.Cutscene.RuntimeCutscene runtimeCutscene);
            }

            namespace Utils
            {
                class MathUtils
                {
                    static /*0x25ecb0c*/ UnityEngine.Vector2 SampleCubicBezierCurvePt(UnityEngine.Vector2 segP1, UnityEngine.Vector2 segP2, UnityEngine.Vector2 ctrlP1, UnityEngine.Vector2 ctrlP2, float t);
                    static /*0x25ecb78*/ float DistanceToSegment(UnityEngine.Vector2 start, UnityEngine.Vector2 end, UnityEngine.Vector2 pt, ref float i);
                    static /*0x25e9778*/ float LerpAngleUnclamped(float a, float b, float t);
                }

                class RectUtils
                {
                    static /*0x25ecca0*/ UnityEngine.Rect Encapsulate(UnityEngine.Rect r, UnityEngine.Vector2 pt);
                    static /*0x25eccec*/ UnityEngine.Rect Encapsulate(UnityEngine.Rect r, UnityEngine.Rect r2);
                    static /*0x25ecd40*/ UnityEngine.Rect Encapsulate(UnityEngine.Rect r, UnityEngine.Bounds bounds);
                    static /*0x25ece0c*/ UnityEngine.Rect Expand(UnityEngine.Rect r, float amount);
                    static /*0x25ece48*/ UnityEngine.Rect Expand(UnityEngine.Rect r, float xMinAmt, float xMaxAmt, float yMinAmt, float yMaxAmt);
                    static /*0x25ece84*/ UnityEngine.Rect Translate(UnityEngine.Rect r, UnityEngine.Vector2 offset);
                    static /*0x25ece90*/ UnityEngine.Rect Scale(UnityEngine.Rect r, float scale);
                    static /*0x25eced4*/ UnityEngine.Rect Intersect(UnityEngine.Rect a, UnityEngine.Rect b);
                    static /*0x25ecf34*/ bool Intersects(UnityEngine.Rect source, UnityEngine.Rect rect);
                    static /*0x25ecf68*/ bool Overlaps(UnityEngine.Rect r, System.Collections.Generic.List<UnityEngine.Rect> rects);
                }

                class ValueTween
                {
                    static /*0x271b084*/ float MixInOut(float t, EA.Unity.Cutscene.Utils.ValueTween.Type firstType, EA.Unity.Cutscene.Utils.ValueTween.Type secondType);
                    static /*0x271b0d0*/ float Get(float t, EA.Unity.Cutscene.Utils.ValueTween.Type tweenType);

                    enum Type
                    {
                        Linear = 0,
                        Quad_EaseIn = 1,
                        Quad_EaseOut = 2,
                        Quad_EaseInOut = 3,
                        Cubic_EaseIn = 4,
                        Cubic_EaseOut = 5,
                        Cubic_EaseInOut = 6,
                        Hexic_EaseIn = 7,
                        Hexic_EaseOut = 8,
                        Hexic_EaseInOut = 9,
                        Back_EaseIn = 10,
                        Back_EaseOut = 11,
                        Back_EaseInOut = 12,
                        Back20_EaseIn = 13,
                        Back20_EaseOut = 14,
                        Back20_EaseInOut = 15,
                        Back50_EaseIn = 16,
                        Back50_EaseOut = 17,
                        Back50_EaseInOut = 18,
                        Bounce20_EaseIn = 19,
                        Bounce20_EaseOut = 20,
                        Bounce20_EaseInOut = 21,
                        Punch10 = 22,
                        Punch20 = 23,
                        Punch33 = 24,
                        Punch50 = 25,
                        Zero = 26,
                        One = 27,
                    }
                }

                class VectorUtils
                {
                    static /*0x271b374*/ UnityEngine.Vector2 xy(UnityEngine.Vector3 v);
                    static /*0x271b378*/ UnityEngine.Vector2Int xy(UnityEngine.Vector3Int v);
                    static /*0x271b37c*/ float magnitudeXY(UnityEngine.Vector3 v);
                    static /*0x271b390*/ float sqrMagnitudeXY(UnityEngine.Vector3 v);
                }
            }
        }
    }
}

namespace MetricsInternal
{
    class MetricsRegistry : UnityEngine.MonoBehaviour, MetricsInternal.ILoggableMetrics
    {
        /*0x20*/ int CHECK_DEVICE_ORIENTATION_FRAME_INTERVAL;
        /*0x24*/ int _checkDeviceOrientationFrameCount;
        /*0x28*/ UnityEngine.DeviceOrientation _lastDeviceOrientation;
        /*0x30*/ System.Diagnostics.Stopwatch _stopwatch;
        /*0x38*/ System.Collections.Generic.Dictionary<System.Type, MetricsInternal.IMetrics> _registeredMetrics;

        static /*0x271b3a0*/ MetricsInternal.MetricsRegistry Build();
        /*0x271c954*/ MetricsRegistry();
        /*0x271b504*/ MetricsInternal.MetricsRegistry Initialize();
        /*0x1ffc854*/ T Register<T>(T metrics);
        /*0x1ffc854*/ MetricsType Get<MetricsType>();
        /*0x271b570*/ void Update();
        /*0x271b850*/ void Reset();
        /*0x271ba84*/ void IncrementalReset();
        /*0x271bcb8*/ void Clear();
        /*0x271b7d4*/ void CheckDeviceOrientation();
    }

    interface IMetrics
    {
        /*0x1f309e4*/ void Update();
        /*0x1f309e4*/ void Reset();
        /*0x1f309e4*/ void IncrementalReset();
        /*0x1f309e4*/ void Clear();
        /*0x1f30ebc*/ void SetStopwatch(System.Diagnostics.Stopwatch stopwatch);
    }

    interface IMetricsResults<ResultType>
    {
        /*0x1f30214*/ System.Collections.Generic.List<ResultType> GetResults();
    }

    class Metrics<EventType, ResultType> : MetricsInternal.IMetrics, MetricsInternal.IMetricsResults<ResultType>, MetricsInternal.ILoggableMetrics
    {
        /*0x0*/ System.Diagnostics.Stopwatch _stopwatch;
        /*0x0*/ System.Collections.Generic.LinkedList<EventType> _events;
        /*0x0*/ System.Collections.Generic.Dictionary<string, EventType> _activeEvents;
        /*0x0*/ System.Collections.Generic.LinkedListNode<EventType> _incrementalNode;

        /*0x1f309e4*/ Metrics();
        /*0x1f30ebc*/ void SetStopwatch(System.Diagnostics.Stopwatch stopwatch);
        /*0x1f309e4*/ void Update();
        /*0x1f309e4*/ void Reset();
        /*0x1f309e4*/ void IncrementalReset();
        /*0x1f309e4*/ void Clear();
        /*0x1f30ff0*/ void Start(string id, string[] tags);
        /*0x1f30ff0*/ void End(string id, string[] additional_tags);
        /*0x1f30ff0*/ void AddMeta(string id, string[] meta);
        /*0x1ffc854*/ EventType NewEvent(string id);
        /*0x1f30214*/ System.Collections.Generic.List<EventType> GetEvents();
        /*0x1f30214*/ System.Collections.Generic.List<ResultType> GetResults();
        /*0x1f302cc*/ System.Collections.Generic.List<ResultType> GetResults(System.Collections.Generic.Dictionary<string, EventType> target);
        /*0x1f30214*/ System.Collections.Generic.List<ResultType> GetIncrementalResults();
        /*0x1f302cc*/ System.Collections.Generic.List<ResultType> GetResults(System.Collections.Generic.LinkedListNode<EventType> firstNode);
    }

    class ConfigMetrics : MetricsInternal.Metrics<MetricsInternal.ConfigEvent, MetricsInternal.ConfigEventResult>
    {
        /*0x271cb48*/ ConfigMetrics();
        /*0x271c9e4*/ void Start(string id, string[] tags);
        /*0x271c9e8*/ void End(string id, string[] additional_tags);
        /*0x271c9ec*/ void Update();
        /*0x271c9f0*/ void AddString(string id, string value, string[] meta);
    }

    class TimerMetrics : MetricsInternal.Metrics<MetricsInternal.TimerEvent, MetricsInternal.TimerEventResult>
    {
        /*0x30*/ ushort _depth;

        /*0x271d120*/ TimerMetrics();
        /*0x271cb90*/ void Clear();
        /*0x271cbe0*/ void Start(string id, string[] tags);
        /*0x271cdf8*/ void End(string id, string[] additional_tags);
        /*0x271cfb4*/ System.Collections.Generic.List<MetricsInternal.TimerEventResult> GetIncrementalResults();
    }

    class FPSMetrics : MetricsInternal.Metrics<MetricsInternal.FPSEvent, MetricsInternal.FPSEventResult>
    {
        /*0x271d2cc*/ FPSMetrics();
        /*0x271d168*/ MetricsInternal.FPSEvent NewEvent(string id);
    }

    class HitchRateMetrics : MetricsInternal.Metrics<MetricsInternal.HitchRateEvent, MetricsInternal.HitchRateEventResult>
    {
        /*0x271d470*/ HitchRateMetrics();
        /*0x271d314*/ MetricsInternal.HitchRateEvent NewEvent(string id);
    }

    class MemoryMetrics : MetricsInternal.Metrics<MetricsInternal.MemoryEvent, MetricsInternal.MemoryEventResult>
    {
        /*0x271d5c8*/ MemoryMetrics();
        /*0x271d4b8*/ MetricsInternal.MemoryEvent NewEvent(string id);
    }

    class CounterMetrics : MetricsInternal.Metrics<MetricsInternal.CounterEvent, MetricsInternal.CounterEventResult>
    {
        /*0x30*/ System.Collections.Generic.Dictionary<string, MetricsInternal.CounterEvent> _allEvents;

        /*0x271d610*/ CounterMetrics();
        /*0x271d6ac*/ void Reset();
        /*0x271d6fc*/ void IncrementalReset();
        /*0x271d74c*/ void Update();
        /*0x271d750*/ void Start(string id, string[] tags);
        /*0x271d754*/ void End(string id, string[] tags);
        /*0x271d758*/ void Count(string id, uint value, string[] tags);
        /*0x271d7c8*/ void Increment(System.Collections.Generic.Dictionary<string, MetricsInternal.CounterEvent> target, string id, uint value, string[] tags);
        /*0x271d948*/ System.Collections.Generic.List<MetricsInternal.CounterEventResult> GetIncrementalResults();
        /*0x271d95c*/ System.Collections.Generic.List<MetricsInternal.CounterEventResult> GetResults();
        /*0x271d970*/ System.Collections.Generic.List<MetricsInternal.CounterEventResult> GetResults(System.Collections.Generic.Dictionary<string, MetricsInternal.CounterEvent> target);
    }

    class ValueMetrics : MetricsInternal.Metrics<MetricsInternal.ValueEvent, MetricsInternal.ValueEventResult>
    {
        /*0x271dbf0*/ ValueMetrics();
        /*0x271dc38*/ void Update();
        /*0x271dc3c*/ void Start(string id, string[] tags);
        /*0x271dc40*/ void End(string id, string[] tags);
        /*0x271dc44*/ void Value(string id, int value, string[] meta);
    }

    class MetricsEvent<T> : MetricsInternal.ILoggableMetrics
    {
        static /*0x0*/ char INDENT_SPACER;
        /*0x0*/ string _id;
        /*0x0*/ long _timestamp;
        /*0x0*/ long _duration;
        /*0x0*/ System.Collections.Generic.List<string> _meta;
        /*0x0*/ System.Collections.Generic.List<string> _tags;

        static /*0x1f33998*/ MetricsEvent();
        MetricsEvent(string id, long timestamp);
        /*0x1f30214*/ string get_Id();
        long get_Timestamp();
        long get_Duration();
        /*0x1f30d60*/ void set_Duration(long value);
        /*0x1f30214*/ System.Collections.Generic.List<string> get_Meta();
        /*0x1f30214*/ System.Collections.Generic.List<string> get_Tags();
        /*0x1f30ebc*/ void AddMeta(string[] meta);
        /*0x1f30ebc*/ void AddTags(System.Collections.Generic.IEnumerable<string> tags);
        /*0x1f309e4*/ void Update();
        /*0x1ffc854*/ T ToResult();
        int DoubleToInt(double value);
    }

    class EventResult
    {
        /*0x10*/ string[] Meta;
        /*0x18*/ System.Collections.Generic.List<string> Tags;

        /*0x271dd94*/ EventResult();
    }

    class ConfigEventResult : MetricsInternal.EventResult
    {
        /*0x20*/ string Id;
        /*0x28*/ string Value;

        /*0x271dd9c*/ ConfigEventResult();
    }

    class ConfigEvent : MetricsInternal.MetricsEvent<MetricsInternal.ConfigEventResult>
    {
        /*0x38*/ string Value;

        /*0x271cab4*/ ConfigEvent(string id, string value);
        /*0x271dda4*/ MetricsInternal.ConfigEventResult ToResult();
    }

    class TimerEventResult : MetricsInternal.EventResult
    {
        /*0x20*/ string Id;
        /*0x28*/ long Duration;
        /*0x30*/ long Timestamp;
        /*0x38*/ ushort Depth;
        /*0x3a*/ bool EndEvent;

        /*0x271de8c*/ TimerEventResult();
    }

    class TimerEvent : MetricsInternal.MetricsEvent<MetricsInternal.TimerEventResult>
    {
        /*0x38*/ ushort _depth;
        /*0x3a*/ bool _endEvent;

        /*0x271cd44*/ TimerEvent(string id, long timestamp, ushort depth, long duration, bool endEvent);
        /*0x271de94*/ ushort get_Depth();
        /*0x271de9c*/ bool get_EndEvent();
        /*0x271dea4*/ MetricsInternal.TimerEventResult ToResult();
    }

    class FPSEventResult : MetricsInternal.EventResult
    {
        /*0x20*/ string Id;
        /*0x28*/ int AvgFPS;
        /*0x2c*/ int MaxFPS;
        /*0x30*/ int MinFPS;
        /*0x34*/ int FrameCount;
        /*0x38*/ long Timestamp;
        /*0x40*/ long Duration;

        /*0x271df80*/ FPSEventResult();
    }

    class FPSEvent : MetricsInternal.MetricsEvent<MetricsInternal.FPSEventResult>
    {
        static /*0x0*/ int MAX_SAMPLE_COUNT;
        /*0x38*/ int sampleCount;
        /*0x3c*/ int bufferIndex;
        /*0x40*/ double bufferSum;
        /*0x48*/ double[] buffer;
        /*0x50*/ int _frameCount;
        /*0x58*/ double _accumulatedFPS;
        /*0x60*/ double _currentRawFPS;
        /*0x68*/ double _currentFPS;
        /*0x70*/ double _minFPS;
        /*0x78*/ double _maxFPS;

        static /*0x271e2dc*/ FPSEvent();
        /*0x271d1e4*/ FPSEvent(string id, long timestamp);
        /*0x271df88*/ double get_CurrentFPS();
        /*0x271df90*/ double get_MinFPS();
        /*0x271df98*/ double get_MaxFPS();
        /*0x271dfa0*/ double get_AvgFPS();
        /*0x271dfc4*/ void Update();
        /*0x271e0c8*/ double MovingAverage(double newValue);
        /*0x271e1a4*/ MetricsInternal.FPSEventResult ToResult();
    }

    class HitchRateEventResult : MetricsInternal.EventResult
    {
        /*0x20*/ string Id;
        /*0x28*/ long Timestamp;
        /*0x30*/ long Duration;
        /*0x38*/ double CurrentHitchRate;
        /*0x40*/ double AverageHitchRate;
        /*0x48*/ double MinHitchRate;
        /*0x50*/ double MaxHitchRate;
        /*0x58*/ long LongestHitch;
        /*0x60*/ long HitchCount;

        /*0x271e328*/ HitchRateEventResult();
    }

    class HitchRateEvent : MetricsInternal.MetricsEvent<MetricsInternal.HitchRateEventResult>
    {
        static int MILLISECONDS_PER_SECOND = 1000;
        static int MOVING_AVERAGE_SECONDS = 5;
        static int HITCH_TOLERANCE_MILLISECONDS = 200;
        /*0x38*/ long _hitchCountTotal;
        /*0x40*/ int _hitchCountWindowTotal;
        /*0x48*/ int[] _hitchCountWindow;
        /*0x50*/ long _lastUpdateTime;
        /*0x58*/ System.Diagnostics.Stopwatch _stopwatch;
        /*0x60*/ long _longestHitch;
        /*0x68*/ double _maxHitchRate;
        /*0x70*/ double _minHitchRate;
        /*0x78*/ double _currentHitchRate;
        /*0x80*/ double _averageHitchRate;

        /*0x271d3a0*/ HitchRateEvent(string id, long timestamp, System.Diagnostics.Stopwatch stopwatch);
        /*0x271e330*/ void Update();
        /*0x271e4e4*/ MetricsInternal.HitchRateEventResult ToResult();
    }

    class MemoryEventResult : MetricsInternal.EventResult
    {
        /*0x20*/ string Id;
        /*0x28*/ int AvgUsage;
        /*0x2c*/ int MaxUsage;
        /*0x30*/ int MinUsage;
        /*0x34*/ int SampleCount;
        /*0x38*/ long Timestamp;
        /*0x40*/ long Duration;

        /*0x271e5cc*/ MemoryEventResult();
    }

    class MemoryEvent : MetricsInternal.MetricsEvent<MetricsInternal.MemoryEventResult>
    {
        static /*0x0*/ int SAMPLE_FRAME_INTERVAL;
        static /*0x4*/ int ONE_MB;
        /*0x38*/ int _frameCount;
        /*0x3c*/ int _sampleCount;
        /*0x40*/ long _accumulatedUsage;
        /*0x48*/ long _maxUsage;
        /*0x50*/ long _minUsage;

        static /*0x271eae4*/ MemoryEvent();
        /*0x271d534*/ MemoryEvent(string id, long timestamp);
        /*0x271e5d4*/ double get_AvgUsage();
        /*0x271e658*/ double get_MaxUsage();
        /*0x271e6c4*/ double get_MinUsage();
        /*0x271e780*/ void Update();
        /*0x271e838*/ MetricsInternal.MemoryEventResult ToResult();
        /*0x271e730*/ int GetCurrentMemoryUsage();
    }

    class CounterEventResult : MetricsInternal.EventResult
    {
        /*0x20*/ string Id;
        /*0x28*/ uint Count;

        /*0x271eb34*/ CounterEventResult();
    }

    class CounterEvent : MetricsInternal.MetricsEvent<MetricsInternal.CounterEventResult>
    {
        /*0x38*/ uint _count;

        /*0x271d8bc*/ CounterEvent(string id, uint value);
        /*0x271d8ac*/ void Increment(uint value);
        /*0x271eb3c*/ MetricsInternal.CounterEventResult ToResult();
    }

    class ValueEventResult : MetricsInternal.EventResult
    {
        /*0x20*/ string Id;
        /*0x28*/ int Value;

        /*0x271ec04*/ ValueEventResult();
    }

    class ValueEvent : MetricsInternal.MetricsEvent<MetricsInternal.ValueEventResult>
    {
        /*0x38*/ int _value;

        /*0x271dd08*/ ValueEvent(string id, int value);
        /*0x271ec0c*/ MetricsInternal.ValueEventResult ToResult();
    }

    class MetricsReport<MetricsType, EventResultType> : MetricsInternal.ILoggableMetrics
    {
        static /*0x0*/ string DEFAULT_REPORT_FILE_SUFFIX;
        static /*0x0*/ char INDENT_SPACER;
        static /*0x0*/ string DATA_SEPARATOR;
        static /*0x0*/ string CSV_DATA_SEPARATOR;
        /*0x0*/ MetricsType _metrics;
        /*0x0*/ string _reportPath;
        /*0x0*/ string _reportFilename;

        static /*0x1f33998*/ MetricsReport();
        /*0x1ffc854*/ MetricsReport(MetricsType metrics, string reportPath, string reportFilename);
        /*0x1f30214*/ string BuildReport();
        /*0x1f309e4*/ void Save();
        /*0x1f30ff0*/ void WriteReport(string targetPath, string reportText);
        /*0x1f30214*/ string GetHeader();
        /*0x1ffc854*/ string FormatResult(EventResultType result);
        /*0x1f30214*/ string GetFooter();
    }

    class TagMetricsReport<MetricsType, EventResultType, TagResultType> : MetricsInternal.MetricsReport<MetricsType, EventResultType>
    {
        /*0x1ffc854*/ TagMetricsReport(MetricsType metrics, string reportPath, string reportFilename);
        /*0x1f30214*/ System.Collections.Generic.IEnumerable<TagResultType> GetTagResults();
        /*0x1ffc854*/ string FormatTagResult(TagResultType result);
        /*0x1f30214*/ string BuildReport();
        /*0x1f30394*/ System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<EventResultType>> BuildTagEventResultsMap(System.Collections.Generic.List<EventResultType> eventResults, System.Predicate<EventResultType> filter);
    }

    class XMLConfigReport : MetricsInternal.MetricsReport<MetricsInternal.ConfigMetrics, MetricsInternal.ConfigEventResult>
    {
        static /*0x0*/ string FORMAT_TEMPLATE;

        static /*0x271f03c*/ XMLConfigReport();
        /*0x271ecd4*/ XMLConfigReport(MetricsInternal.ConfigMetrics metrics, string reportPath, string reportFileName);
        /*0x271ed68*/ string FormatResult(MetricsInternal.ConfigEventResult result);
    }

    class CSVConfigReport : MetricsInternal.MetricsReport<MetricsInternal.ConfigMetrics, MetricsInternal.ConfigEventResult>
    {
        /*0x271f0a4*/ CSVConfigReport(MetricsInternal.ConfigMetrics metrics, string reportPath, string reportFileName);
        /*0x271f138*/ string GetHeader();
        /*0x271f178*/ string FormatResult(MetricsInternal.ConfigEventResult result);
    }

    class XMLTimerReport : MetricsInternal.MetricsReport<MetricsInternal.TimerMetrics, MetricsInternal.TimerEventResult>
    {
        static /*0x0*/ string FORMAT_TEMPLATE_START;
        static /*0x8*/ string FORMAT_TEMPLATE_END;

        static /*0x271f7e4*/ XMLTimerReport();
        /*0x271f234*/ XMLTimerReport(MetricsInternal.TimerMetrics metrics, string reportPath, string reportFilename);
        /*0x271f2c8*/ string FormatResult(MetricsInternal.TimerEventResult result);
    }

    class CSVTimerReport : MetricsInternal.MetricsReport<MetricsInternal.TimerMetrics, MetricsInternal.TimerEventResult>
    {
        /*0x271f87c*/ CSVTimerReport(MetricsInternal.TimerMetrics metrics, string reportPath, string reportFilename);
        /*0x271f910*/ string GetHeader();
        /*0x271f950*/ string FormatResult(MetricsInternal.TimerEventResult result);
    }

    class TimerTagReport : MetricsInternal.TagMetricsReport<MetricsInternal.TimerMetrics, MetricsInternal.TimerEventResult, MetricsInternal.TimerTagResult>
    {
        /*0x271fbbc*/ TimerTagReport(MetricsInternal.TimerMetrics metrics, string reportPath, string reportFilename);
        /*0x271fc2c*/ System.Collections.Generic.IEnumerable<MetricsInternal.TimerTagResult> GetTagResults();
        /*0x27205b8*/ System.Collections.Generic.List<MetricsInternal.TimerTagReport.TimeRange> EventResultsToTimeRanges(System.Collections.Generic.IEnumerable<MetricsInternal.TimerEventResult> eventResults);
        /*0x272090c*/ System.Collections.Generic.List<MetricsInternal.TimerTagReport.TimeRange> RangeUnion(System.Collections.Generic.List<MetricsInternal.TimerTagReport.TimeRange> target);

        class TimeRange
        {
            /*0x10*/ long Start;
            /*0x18*/ long End;
            /*0x20*/ long Duration;

            /*0x2720cf4*/ TimeRange(long start, long end);
        }

        class <>c
        {
            static /*0x0*/ MetricsInternal.TimerTagReport.<> <>9;
            static /*0x8*/ System.Predicate<MetricsInternal.TimerEventResult> <>9__1_1;
            static /*0x10*/ System.Comparison<MetricsInternal.TimerTagResult> <>9__1_0;
            static /*0x18*/ System.Comparison<MetricsInternal.TimerTagReport.TimeRange> <>9__4_0;

            static /*0x2720d28*/ <>c();
            /*0x2720d90*/ <>c();
            /*0x2720d98*/ bool <GetTagResults>b__1_1(MetricsInternal.TimerEventResult eventResult);
            /*0x2720dac*/ int <GetTagResults>b__1_0(MetricsInternal.TimerTagResult x, MetricsInternal.TimerTagResult y);
            /*0x2720ddc*/ int <RangeUnion>b__4_0(MetricsInternal.TimerTagReport.TimeRange x, MetricsInternal.TimerTagReport.TimeRange y);
        }
    }

    class TimerTagResult
    {
        /*0x10*/ string Tag;
        /*0x18*/ int EventCount;
        /*0x20*/ long LinearDuration;
        /*0x28*/ long ParallelDuration;

        /*0x2720cec*/ TimerTagResult();
    }

    class XMLTimerTagReport : MetricsInternal.TimerTagReport
    {
        /*0x2720e0c*/ XMLTimerTagReport(MetricsInternal.TimerMetrics metrics, string reportPath, string reportFilename);
        /*0x2720e10*/ string FormatTagResult(MetricsInternal.TimerTagResult result);
    }

    class CSVTimerTagReport : MetricsInternal.TimerTagReport
    {
        /*0x2720fd0*/ CSVTimerTagReport(MetricsInternal.TimerMetrics metrics, string reportPath, string reportFilename);
        /*0x2720fd4*/ string GetHeader();
        /*0x2721014*/ string FormatTagResult(MetricsInternal.TimerTagResult result);
    }

    class XMLFPSReport : MetricsInternal.MetricsReport<MetricsInternal.FPSMetrics, MetricsInternal.FPSEventResult>
    {
        static /*0x0*/ string FORMAT_TEMPLATE;
        static /*0x8*/ string FORMAT_TEMPLATE_META;

        static /*0x2721744*/ XMLFPSReport();
        /*0x27211d4*/ XMLFPSReport(MetricsInternal.FPSMetrics metrics, string reportPath, string reportFilename);
        /*0x2721268*/ string FormatResult(MetricsInternal.FPSEventResult result);
    }

    class CSVFPSReport : MetricsInternal.MetricsReport<MetricsInternal.FPSMetrics, MetricsInternal.FPSEventResult>
    {
        /*0x27217dc*/ CSVFPSReport(MetricsInternal.FPSMetrics metrics, string reportPath, string reportFilename);
        /*0x2721870*/ string GetHeader();
        /*0x27218b0*/ string FormatResult(MetricsInternal.FPSEventResult result);
    }

    class FPSTagReport : MetricsInternal.TagMetricsReport<MetricsInternal.FPSMetrics, MetricsInternal.FPSEventResult, MetricsInternal.FPSTagResult>
    {
        /*0x2721ba4*/ FPSTagReport(MetricsInternal.FPSMetrics metrics, string reportPath, string reportFilename);
        /*0x2721c14*/ System.Collections.Generic.IEnumerable<MetricsInternal.FPSTagResult> GetTagResults();

        class <>c
        {
            static /*0x0*/ MetricsInternal.FPSTagReport.<> <>9;
            static /*0x8*/ System.Comparison<MetricsInternal.FPSTagResult> <>9__1_0;

            static /*0x27224c8*/ <>c();
            /*0x2722530*/ <>c();
            /*0x2722538*/ int <GetTagResults>b__1_0(MetricsInternal.FPSTagResult x, MetricsInternal.FPSTagResult y);
        }
    }

    class FPSTagResult
    {
        /*0x10*/ string Tag;
        /*0x18*/ int EventCount;
        /*0x1c*/ int AvgFPS;
        /*0x20*/ int MaxFPS;
        /*0x24*/ int MinFPS;
        /*0x28*/ int TotalFrameCount;

        /*0x27224c0*/ FPSTagResult();
    }

    class XMLHitchRateReport : MetricsInternal.MetricsReport<MetricsInternal.HitchRateMetrics, MetricsInternal.HitchRateEventResult>
    {
        static /*0x0*/ string FORMAT_TEMPLATE;
        static /*0x8*/ string FORMAT_TEMPLATE_META;

        static /*0x2722bc4*/ XMLHitchRateReport();
        /*0x2722560*/ XMLHitchRateReport(MetricsInternal.HitchRateMetrics metrics, string reportPath, string reportFilename);
        /*0x27225f4*/ string FormatResult(MetricsInternal.HitchRateEventResult result);
    }

    class CSVHitchRateReport : MetricsInternal.MetricsReport<MetricsInternal.HitchRateMetrics, MetricsInternal.HitchRateEventResult>
    {
        /*0x2722c5c*/ CSVHitchRateReport(MetricsInternal.HitchRateMetrics metrics, string reportPath, string reportFilename);
        /*0x2722cf0*/ string GetHeader();
        /*0x2722d30*/ string FormatResult(MetricsInternal.HitchRateEventResult result);
    }

    class HitchRateTagResult
    {
        /*0x10*/ string Tag;
        /*0x18*/ int EventCount;
        /*0x20*/ double AvgHitchRate;
        /*0x28*/ double MaxHitchRate;
        /*0x30*/ double MinHitchRate;
        /*0x38*/ long HitchCount;
        /*0x40*/ int AvgLongestHitch;
        /*0x48*/ long MaxLongestHitch;
        /*0x50*/ long MinLongestHitch;

        /*0x27230bc*/ HitchRateTagResult();
    }

    class HitchRateTagReport : MetricsInternal.TagMetricsReport<MetricsInternal.HitchRateMetrics, MetricsInternal.HitchRateEventResult, MetricsInternal.HitchRateTagResult>
    {
        /*0x27230c4*/ HitchRateTagReport(MetricsInternal.HitchRateMetrics metrics, string reportPath, string reportFilename);
        /*0x2723134*/ System.Collections.Generic.IEnumerable<MetricsInternal.HitchRateTagResult> GetTagResults();

        class <>c
        {
            static /*0x0*/ MetricsInternal.HitchRateTagReport.<> <>9;
            static /*0x8*/ System.Comparison<MetricsInternal.HitchRateTagResult> <>9__1_0;

            static /*0x27239c8*/ <>c();
            /*0x2723a30*/ <>c();
            /*0x2723a38*/ int <GetTagResults>b__1_0(MetricsInternal.HitchRateTagResult x, MetricsInternal.HitchRateTagResult y);
        }
    }

    class XMLHitchRateTagReport : MetricsInternal.HitchRateTagReport
    {
        /*0x2723a5c*/ XMLHitchRateTagReport(MetricsInternal.HitchRateMetrics metrics, string reportPath, string reportFilename);
        /*0x2723a60*/ string FormatTagResult(MetricsInternal.HitchRateTagResult result);
    }

    class CSVHitchRateTagReport : MetricsInternal.HitchRateTagReport
    {
        /*0x2723d9c*/ CSVHitchRateTagReport(MetricsInternal.HitchRateMetrics metrics, string reportPath, string reportFilename);
        /*0x2723da0*/ string GetHeader();
        /*0x2723de0*/ string FormatTagResult(MetricsInternal.HitchRateTagResult result);
    }

    class XMLFPSTagReport : MetricsInternal.FPSTagReport
    {
        /*0x272411c*/ XMLFPSTagReport(MetricsInternal.FPSMetrics metrics, string reportPath, string reportFilename);
        /*0x2724120*/ string FormatTagResult(MetricsInternal.FPSTagResult result);
    }

    class CSVFPSTagReport : MetricsInternal.FPSTagReport
    {
        /*0x2724378*/ CSVFPSTagReport(MetricsInternal.FPSMetrics metrics, string reportPath, string reportFilename);
        /*0x272437c*/ string GetHeader();
        /*0x27243bc*/ string FormatTagResult(MetricsInternal.FPSTagResult result);
    }

    class XMLMemoryReport : MetricsInternal.MetricsReport<MetricsInternal.MemoryMetrics, MetricsInternal.MemoryEventResult>
    {
        static /*0x0*/ string FORMAT_TEMPLATE;
        static /*0x8*/ string FORMAT_TEMPLATE_META;

        static /*0x2724b84*/ XMLMemoryReport();
        /*0x2724614*/ XMLMemoryReport(MetricsInternal.MemoryMetrics metrics, string reportPath, string reportFilename);
        /*0x27246a8*/ string FormatResult(MetricsInternal.MemoryEventResult result);
    }

    class CSVMemoryReport : MetricsInternal.MetricsReport<MetricsInternal.MemoryMetrics, MetricsInternal.MemoryEventResult>
    {
        /*0x2724c1c*/ CSVMemoryReport(MetricsInternal.MemoryMetrics metrics, string reportPath, string reportFilename);
        /*0x2724cb0*/ string GetHeader();
        /*0x2724cf0*/ string FormatResult(MetricsInternal.MemoryEventResult result);
    }

    class MemoryTagReport : MetricsInternal.TagMetricsReport<MetricsInternal.MemoryMetrics, MetricsInternal.MemoryEventResult, MetricsInternal.MemoryTagResult>
    {
        /*0x2724fe4*/ MemoryTagReport(MetricsInternal.MemoryMetrics metrics, string reportPath, string reportFilename);
        /*0x2725054*/ System.Collections.Generic.IEnumerable<MetricsInternal.MemoryTagResult> GetTagResults();

        class <>c
        {
            static /*0x0*/ MetricsInternal.MemoryTagReport.<> <>9;
            static /*0x8*/ System.Comparison<MetricsInternal.MemoryTagResult> <>9__1_0;

            static /*0x2725908*/ <>c();
            /*0x2725970*/ <>c();
            /*0x2725978*/ int <GetTagResults>b__1_0(MetricsInternal.MemoryTagResult x, MetricsInternal.MemoryTagResult y);
        }
    }

    class MemoryTagResult
    {
        /*0x10*/ string Tag;
        /*0x18*/ int EventCount;
        /*0x1c*/ int AvgUsage;
        /*0x20*/ int MaxUsage;
        /*0x24*/ int MinUsage;
        /*0x28*/ int TotalSampleCount;

        /*0x2725900*/ MemoryTagResult();
    }

    class XMLMemoryTagReport : MetricsInternal.MemoryTagReport
    {
        /*0x27259a0*/ XMLMemoryTagReport(MetricsInternal.MemoryMetrics metrics, string reportPath, string reportFilename);
        /*0x27259a4*/ string FormatTagResult(MetricsInternal.MemoryTagResult result);
    }

    class CSVMemoryTagReport : MetricsInternal.MemoryTagReport
    {
        /*0x2725bfc*/ CSVMemoryTagReport(MetricsInternal.MemoryMetrics metrics, string reportPath, string reportFilename);
        /*0x2725c00*/ string GetHeader();
        /*0x2725c40*/ string FormatTagResult(MetricsInternal.MemoryTagResult result);
    }

    class XMLCounterReport : MetricsInternal.MetricsReport<MetricsInternal.CounterMetrics, MetricsInternal.CounterEventResult>
    {
        static /*0x0*/ string FORMAT_TEMPLATE;

        static /*0x2726220*/ XMLCounterReport();
        /*0x2725e98*/ XMLCounterReport(MetricsInternal.CounterMetrics metrics, string reportPath, string reportFilename);
        /*0x2725f2c*/ string FormatResult(MetricsInternal.CounterEventResult result);
    }

    class CSVCounterReport : MetricsInternal.MetricsReport<MetricsInternal.CounterMetrics, MetricsInternal.CounterEventResult>
    {
        /*0x2726288*/ CSVCounterReport(MetricsInternal.CounterMetrics metrics, string reportPath, string reportFilename);
        /*0x272631c*/ string GetHeader();
        /*0x272635c*/ string FormatResult(MetricsInternal.CounterEventResult result);
    }

    class XMLValueReport : MetricsInternal.MetricsReport<MetricsInternal.ValueMetrics, MetricsInternal.ValueEventResult>
    {
        static /*0x0*/ string FORMAT_TEMPLATE;

        static /*0x27267d8*/ XMLValueReport();
        /*0x2726450*/ XMLValueReport(MetricsInternal.ValueMetrics metrics, string reportPath, string reportFilename);
        /*0x27264e4*/ string FormatResult(MetricsInternal.ValueEventResult result);
    }

    class CSVValueReport : MetricsInternal.MetricsReport<MetricsInternal.ValueMetrics, MetricsInternal.ValueEventResult>
    {
        /*0x2726840*/ CSVValueReport(MetricsInternal.ValueMetrics metrics, string reportPath, string reportFilename);
        /*0x27268d4*/ string GetHeader();
        /*0x2726914*/ string FormatResult(MetricsInternal.ValueEventResult result);
    }

    interface ILoggableMetrics
    {
    }

    class MetricsExtensions
    {
        static string DATE_TIME_FORMAT_STRING = "HH:mm:ss yyyy-MM-dd";

        static /*0x2726a08*/ string BuildOutput(object message, MetricsInternal.ILoggableMetrics caller);
        static /*0x2726ae4*/ string GetDateTimeOutput();
        static /*0x2726bac*/ void Log(MetricsInternal.ILoggableMetrics caller, object message, UnityEngine.Object context);
        static /*0x2726c2c*/ void LogWarning(MetricsInternal.ILoggableMetrics caller, object message, UnityEngine.Object context);
        static /*0x2726cac*/ void LogError(MetricsInternal.ILoggableMetrics caller, object message, UnityEngine.Object context);
    }
}

namespace CapitalGames
{
    class AssetBundleNetworkStatTracker : CapitalGames.IAssetBundleNetworkStats
    {
        /*0x10*/ System.Collections.Generic.List<string> _bundleSuccesses;
        /*0x18*/ System.Collections.Generic.List<string> _bundleFailures;
        /*0x20*/ int <TotalBytesDownloaded>k__BackingField;

        /*0x2726e9c*/ AssetBundleNetworkStatTracker();
        /*0x2726d2c*/ int get_TotalBytesDownloaded();
        /*0x2726d34*/ void set_TotalBytesDownloaded(int value);
        /*0x2726d3c*/ int get_TotalBundlesDownloaded();
        /*0x2726d84*/ int get_TotalBundleDownloadFailures();
        /*0x2726dcc*/ System.Collections.Generic.IEnumerable<string> BundleDownloadSuccesses();
        /*0x2726dd4*/ System.Collections.Generic.IEnumerable<string> BundleDownloadFailures();
        /*0x2726ddc*/ void ReportBytesDownloaded(long amount);
        /*0x2726dec*/ void ReportBundleDownloadSuccess(string bundleName);
        /*0x2726e44*/ void ReportBundleDownloadFailure(string bundleName);
    }

    class AssetInfo
    {
        static string PATH_SEPARATOR = "/";
        static string ASSETS_REL_PATH = "assets";
        static string SCRIPTS_REL_PATH = "Scripts";
        static string CACHE_ROOT_DIRECTORY_NAME = "UnityCache";
        static string BUNDLE_CACHE_DIRECTORY_NAME = "Bundles";
        static string NONUNITY_CACHE_DIRECTORY_NAME = "NonUnity";
        static int BUNDLE_HASH_LENGTH = 32;
        static int DEFAULT_ASSET_VERSION = 1;
        static int NO_ASSET_VERSION = -1;
        static string PREFAB_PREFIX = "prefab.";
        static /*0x0*/ string ManifestHash;
        static /*0x8*/ string ASSETS_REL_PATH_BUILTIN;
        static /*0x10*/ string ASSETS_REL_PATH_PROGRESSIVE_NON_UNITY;
        static /*0x18*/ string[] PACKAGE_TYPE_DESC;
        static /*0x20*/ string WEB_PACKAGE_REL_PATH;
        static /*0x28*/ string LOCAL_PACKAGE_REL_PATH;
        static /*0x30*/ string PROJECT_ROOT_PATH;
        static /*0x38*/ string ASSETS_ROOT_PATH;
        static /*0x40*/ string SCRIPTS_ROOT_PATH;
        static /*0x48*/ string ASSETS_BASE_PATH_BUILTIN;
        static /*0x50*/ string ASSETS_BASE_PATH_PROGRESSIVE_NON_UNITY;
        static /*0x58*/ string ASSETS_BASE_PATH_PROGRESSIVE_WWISE;
        static /*0x60*/ string CACHE_ROOT_PATH;
        static /*0x68*/ string CACHE_BUNDLE_PATH;
        static /*0x70*/ string CACHE_MANIFEST_PATH;
        static /*0x78*/ string CACHE_NONUNITY_PATH;
        static /*0x80*/ string WEB_PACKAGE_PATH;
        static /*0x88*/ string LOCAL_PACKAGE_PATH;
        static /*0x90*/ string HASH_DELIMITER;
        static /*0x98*/ string[] PACKAGE_EXTENSION;
        static /*0xa0*/ string ASSET_MANIFEST_FILENAME;
        static /*0xa8*/ string ASSET_EXT_MANIFEST_FILENAME;
        static /*0xb0*/ string ASSET_MANIFEST_FILE_EXT;
        static /*0xb8*/ string ASSET_MANIFEST_HASH_FILENAME;
        static /*0xc0*/ string UNITY_MANIFEST_FILE_SUFFIX;
        static /*0xc8*/ string CONTENT_VALIDATION_FILENAME;
        static /*0xd0*/ string CONTENT_VALIDATION_FILEPATH;
        static /*0xd8*/ string CONTENT_VALIDATION_STATUS_FILENAME;
        static /*0xe0*/ string CONTENT_VALIDATION_STATUS_FILEPATH;
        static /*0xe8*/ string ASSET_SET_DEFINITION_FILENAME;
        static /*0xf0*/ string ASSET_SET_DEFINITION_PATH;
        static /*0xf8*/ string ASSET_SNAPSHOT_FILE_PREFIX;
        static /*0x100*/ string ASSET_SNAPSHOT_FILE_SUFFIX;
        static /*0x108*/ string ROOT_ASSET_PATH;
        static /*0x110*/ string META_FILE_SUFFIX;
        static /*0x118*/ string META_FILE_TEMP_BACKUP_SUFFIX;
        static /*0x120*/ string LOCAL_ASSET_FILE_LIST_FILE_NAME;
        static /*0x128*/ string LOCAL_ASSET_FILE_LIST_PATH;
        static /*0x130*/ System.Text.RegularExpressions.Regex[] _resourceNameRegex;
        static /*0x138*/ UnityEngine.ThreadPriority HIGH_PRIORITY_ASSET_DOWNLOAD_THREAD_PRIORITY;
        static /*0x13c*/ UnityEngine.ThreadPriority LOW_PRIORITY_ASSET_DOWNLOAD_THREAD_PRIORITY;
        static /*0x140*/ string ASSET_BASE_PATH_BUILTIN_WWISE;
        static /*0x148*/ string WWISE_REL_PATH;
        static /*0x150*/ string WWISE_STREAMING_AUDIO_ASSETS;
        static /*0x158*/ string WWISE_STREAMING_AUDIO_EXT;
        static /*0x160*/ string ASSET_BUNDLE_RANK_DATA_FILENAME;
        static /*0x168*/ string ASSET_BUNDLE_RANK_DATA_FILE_PATH;
        static /*0x170*/ string ASSET_BUNDLE_RANK_DATA_BUILD_FILE_PATH;
        static /*0x178*/ string[][] ASSET_EXTENSIONS_TO_INCLUDE;
        static /*0x180*/ string[][] ASSET_EXTENSIONS_TO_EXCLUDE;

        static /*0x27282e4*/ AssetInfo();
        static /*0x2726f48*/ Yeti.AssetBundleType FilePackageType(string filePath);
        static /*0x272705c*/ string AssetSrcRelPath(Yeti.AssetBundleType packageType);
        static /*0x272709c*/ string AssetSrcPath(Yeti.AssetBundleType packageType);
        static /*0x27272d0*/ string NewestRankDataFilePath();
        static /*0x2727954*/ bool ShouldExcludeFile(Yeti.AssetBundleType packageType, string fileName);
        static /*0x2727b48*/ bool ShouldExcludePath(Yeti.AssetBundleType packageType, string fullFilePath);
        static /*0x2727c60*/ bool IsValidAssetTypeForPackage(Yeti.AssetBundleType packageType, string assetResourceFilename);
        static /*0x2727cf4*/ void WriteManifestHash(string manifestHash, string targetDirectory);
        static /*0x2727dd4*/ string GetManifestFilename(string manifestHash, bool extendedManifest, bool withFileExtension);
        static /*0x2727f98*/ string GetAssetManifestURL(string basePath, string manifestHash, bool extendedManifest);
        static /*0x27281b8*/ string GetPackageURL(string basePath, string fullPackageName);
        static /*0x2728224*/ string GetFullAssetPath(CapitalGames.AssetMode assetMode);
    }

    class AssetManifest : System.Collections.Generic.IEnumerable<CapitalGames.AssetManifestRecord>, System.Collections.IEnumerable
    {
        static /*0x0*/ string WILDCARD_SUFFIX;
        /*0x10*/ System.Collections.Generic.Dictionary<string, CapitalGames.AssetManifestRecord> _packageNameToRecordMap;
        /*0x18*/ System.Collections.Generic.Dictionary<string, CapitalGames.AssetManifestRecord> _assetNameToRecordMap;
        /*0x20*/ System.Collections.Generic.Dictionary<int, Yeti.RawAssetSet> _rawAssetSets;
        /*0x28*/ System.Collections.Generic.List<CapitalGames.AssetManifestRecord> _records;
        /*0x30*/ string <Platform>k__BackingField;
        /*0x38*/ string <TexFormat>k__BackingField;
        /*0x40*/ string <Environment>k__BackingField;
        /*0x48*/ ulong <Timestamp>k__BackingField;
        /*0x50*/ ulong <Revision>k__BackingField;

        static /*0x272d808*/ AssetManifest();
        static /*0x272addc*/ CapitalGames.AssetManifest FromURL(string fileURI);
        static /*0x272aebc*/ CapitalGames.AssetManifest FromBytes(byte[] manifestBytes);
        static /*0x272b200*/ CapitalGames.AssetManifest FromFile(string filePath);
        static /*0x272bbcc*/ bool WriteToFile(string filePath, byte[] manifestBytes);
        /*0x2729270*/ AssetManifest();
        /*0x27292cc*/ AssetManifest(int initialRecordCapacity, string platform, string texFormat, string environment, ulong revision, ulong timestamp);
        /*0x2729494*/ AssetManifest(Yeti.RawAssetManifest rawManifest);
        /*0x272a27c*/ System.Collections.Generic.List<CapitalGames.AssetManifestRecord> get_Records();
        /*0x2729aa4*/ System.Collections.Generic.Dictionary<int, Yeti.RawAssetSet> get_RawAssetSets();
        /*0x272a300*/ System.Collections.Generic.Dictionary<string, CapitalGames.AssetManifestRecord> get_AssetNameToRecordMap();
        /*0x272a3ec*/ System.Collections.Generic.Dictionary<string, CapitalGames.AssetManifestRecord> get_PackageNameToRecordMap();
        /*0x272a4d4*/ System.Collections.Generic.IEnumerator<CapitalGames.AssetManifestRecord> GetEnumerator();
        /*0x272a568*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
        /*0x272a56c*/ int get_PackageCount();
        /*0x272a5b8*/ int get_AssetSetCount();
        /*0x272a60c*/ string get_Platform();
        /*0x272a614*/ string get_TexFormat();
        /*0x272a61c*/ string get_Environment();
        /*0x272a624*/ ulong get_Timestamp();
        /*0x272a62c*/ ulong get_Revision();
        /*0x272a634*/ int get_TotalPackageSize();
        /*0x272a7ec*/ int get_TotalUncompressedPackageSize();
        /*0x272a9a4*/ string[] get_AssetSetNames();
        /*0x272ac18*/ string GetManifestContents();
        /*0x272b4f0*/ bool WriteToFile(string filePath);
        /*0x272a130*/ bool AddBundle(CapitalGames.AssetManifestRecord record);
        /*0x272bd04*/ void LinkAssetsToRecord(CapitalGames.AssetManifestRecord record);
        /*0x272bf74*/ CapitalGames.AssetManifestRecord GetManifestRecordFromFullName(string assetName);
        /*0x272c058*/ CapitalGames.AssetManifestRecord GetManifestRecordFromPackageName(string packageName);
        /*0x272c0cc*/ bool HasManifestRecordFromFullName(string packageName);
        /*0x272b784*/ void SortPackagesByLoadOrder();
        /*0x272c128*/ void SortPackagesByName();
        /*0x272c1b8*/ CapitalGames.AssetManifestRecord get_Item(string recordName);
        /*0x272c1bc*/ void Clear();
        /*0x2729354*/ void InstantiateCollectionsWithInitialCapacity(int recordCapacity);
        /*0x272b910*/ Yeti.RawAssetManifest AsRaw();
        /*0x272c5e4*/ System.Collections.Generic.HashSet<CapitalGames.AssetManifestRecord> FilterPackageList(System.Collections.Generic.IEnumerable<CapitalGames.ResourceName> assetResourceNames);
        /*0x272cad4*/ System.Collections.Generic.List<CapitalGames.AssetManifestRecord> GetPackageRecords(System.Collections.Generic.IEnumerable<string> assetPkgNames);
        /*0x272cf58*/ System.Collections.Generic.IEnumerable<CapitalGames.AssetManifestRecord> GetNonUnityPackageRecords(System.Collections.Generic.IEnumerable<string> assetPkgNames);
        /*0x272d3d8*/ string GetPackageURLForAssetBundle(string bundleName, string assetPathRoot);
        /*0x272d5dc*/ string GetPackageURLForAssetBundle(CapitalGames.ResourceName bundleName, string assetPathRoot);
        /*0x272ca78*/ System.Collections.Generic.IList<CapitalGames.AssetManifestRecord> FindPackageRecords(System.Predicate<CapitalGames.AssetManifestRecord> match);
        /*0x272d710*/ System.Collections.Generic.IList<CapitalGames.AssetManifestRecord> FindPackagesThatStartWith(string prefix);

        class <>c__DisplayClass61_0
        {
            /*0x10*/ string pkgNamePrefix;

            /*0x272ca70*/ <>c__DisplayClass61_0();
            /*0x272d870*/ bool <FilterPackageList>b__0(CapitalGames.AssetManifestRecord record);
        }

        class <>c__DisplayClass62_0
        {
            /*0x10*/ string pkgNamePrefix;

            /*0x272cf50*/ <>c__DisplayClass62_0();
            /*0x272d89c*/ bool <GetPackageRecords>b__0(CapitalGames.AssetManifestRecord record);
        }

        class <>c__DisplayClass63_0
        {
            /*0x10*/ string pkgNamePrefix;

            /*0x272d3d0*/ <>c__DisplayClass63_0();
            /*0x272d8c8*/ bool <GetNonUnityPackageRecords>b__0(CapitalGames.AssetManifestRecord record);
        }

        class <>c__DisplayClass67_0
        {
            /*0x10*/ string prefix;

            /*0x272d800*/ <>c__DisplayClass67_0();
            /*0x272d904*/ bool <FindPackagesThatStartWith>b__0(CapitalGames.AssetManifestRecord record);
        }
    }

    class AssetManifestRecord
    {
        static /*0x0*/ System.Comparison<CapitalGames.AssetManifestRecord> CompareByLoadOrder;
        static /*0x8*/ System.Comparison<CapitalGames.AssetManifestRecord> CompareByBundleName;
        /*0x10*/ Yeti.AssetBundleType _bundleType;
        /*0x18*/ string _packageName;
        /*0x20*/ string _fullName;
        /*0x28*/ string _bundleHash;
        /*0x30*/ UnityEngine.Hash128 _versionHash;
        /*0x40*/ int _size;
        /*0x44*/ int _uncompressedSize;
        /*0x48*/ int _rank;
        /*0x50*/ System.Collections.Generic.List<CapitalGames.AssetManifestRecordEntry> _entries;
        /*0x58*/ System.Collections.Generic.IDictionary<string, CapitalGames.AssetManifestRecordEntry> _assetNameToEntryMap;
        /*0x60*/ System.Collections.Generic.List<string> _dependencies;

        static /*0x272e274*/ AssetManifestRecord();
        /*0x272df70*/ AssetManifestRecord(Yeti.AssetBundleType bundleType, string packageName, string bundleHash, string fullName, int size, int uncompressedSize, int rank, int entryCount, int dependencyCount);
        /*0x2729b28*/ AssetManifestRecord(Yeti.RawAssetManifestRecord rawRecord);
        /*0x272d930*/ Yeti.AssetBundleType get_BundleType();
        /*0x272d938*/ string get_PackageName();
        /*0x272d940*/ string get_FullName();
        /*0x272d948*/ string get_BundleHash();
        /*0x272d950*/ int get_Size();
        /*0x272d958*/ int get_UncompressedSize();
        /*0x272d960*/ int get_Rank();
        /*0x272be38*/ System.Collections.Generic.List<CapitalGames.AssetManifestRecordEntry> get_Entries();
        /*0x272d968*/ System.Collections.Generic.IDictionary<string, CapitalGames.AssetManifestRecordEntry> get_AssetNameToEntryMap();
        /*0x272da50*/ System.Collections.Generic.List<string> get_Dependencies();
        /*0x272dad4*/ bool AddPackageAsset(CapitalGames.AssetManifestRecordEntry entry);
        /*0x272dd94*/ CapitalGames.AssetManifestRecordEntry GetPackageAsset(string assetName);
        /*0x272de60*/ bool ContainsPackageAsset(string assetName);
        /*0x272df14*/ void AddPackageDependency(string packageName);
        /*0x272c1e4*/ Yeti.RawAssetManifestRecord AsRaw();
        /*0x272d6a8*/ string GetPackageURL(string assetRoot);
        /*0x272e01c*/ void InstantiateCollectionsWithInitialCapacity(int entryCapacity, int dependencyCapacity);

        class <>c
        {
            static /*0x0*/ CapitalGames.AssetManifestRecord.<> <>9;

            static /*0x272e39c*/ <>c();
            /*0x272e404*/ <>c();
            /*0x272e40c*/ int <.cctor>b__42_0(CapitalGames.AssetManifestRecord o1, CapitalGames.AssetManifestRecord o2);
            /*0x272e468*/ int <.cctor>b__42_1(CapitalGames.AssetManifestRecord o1, CapitalGames.AssetManifestRecord o2);
        }
    }

    class AssetManifestRecordEntry
    {
        /*0x10*/ string <AssetName>k__BackingField;
        /*0x18*/ int <RuntimeSize>k__BackingField;
        /*0x1c*/ int <CloneRuntimeSize>k__BackingField;

        /*0x272e490*/ AssetManifestRecordEntry(string assetName, int runtimeSize, int cloneRuntimeSize);
        /*0x272e1b8*/ AssetManifestRecordEntry(Yeti.RawAssetManifestRecordEntry rawEntry);
        /*0x272e4d8*/ string get_AssetName();
        /*0x272e4e0*/ int get_RuntimeSize();
        /*0x272e4e8*/ int get_CloneRuntimeSize();
        /*0x272e1fc*/ Yeti.RawAssetManifestRecordEntry AsRaw();
    }

    class AssetPaths
    {
        static string AddressablesRootAssetsPath = "UnityCache";
        static string ExtractedAssetsPath = "ExtractedAssets";
        static /*0x0*/ string UnityCachePath;
        static /*0x8*/ string ExtractedAssetPath;
        static /*0x10*/ string ExtractedStreamingAudioPath;

        static /*0x272e4f0*/ AssetPaths();
    }

    class AssetPathUtility
    {
        static /*0x272e69c*/ string StripBundleHashFromFilePath(string path);
        static /*0x272e8b4*/ string StripBundleHashFromFileNameWithExtension(string filenameWithExtension);
        static /*0x272e79c*/ string StripBundleHashFromFileName(string filename);
    }

    class AssetRankData
    {
        /*0x10*/ System.Collections.Generic.HashSet<string> _uniquePackageNames;
        /*0x18*/ System.IO.StreamWriter _appendWriter;

        static /*0x272f21c*/ string[] LoadRankIndices();
        /*0x272f44c*/ AssetRankData();
        /*0x272e934*/ void Initialize();
        /*0x272e9c0*/ void LoadDataFile();
        /*0x272ecb0*/ void OpenDataFileForAppend();
        /*0x272ee14*/ void AppendPackage(string packageName, bool flush);
        /*0x272ef20*/ void AppendPackages(System.Collections.Generic.IEnumerable<string> packageNames, bool flush);
        /*0x272f204*/ void Flush();
    }

    interface IAssetBundleNetworkStats
    {
        /*0x1f2ffc8*/ int get_TotalBytesDownloaded();
        /*0x1f2ffc8*/ int get_TotalBundlesDownloaded();
        /*0x1f2ffc8*/ int get_TotalBundleDownloadFailures();
        /*0x1f30214*/ System.Collections.Generic.IEnumerable<string> BundleDownloadSuccesses();
        /*0x1f30214*/ System.Collections.Generic.IEnumerable<string> BundleDownloadFailures();
        /*0x1f30d60*/ void ReportBytesDownloaded(long amount);
        /*0x1f30ebc*/ void ReportBundleDownloadSuccess(string bundleName);
        /*0x1f30ebc*/ void ReportBundleDownloadFailure(string bundleName);
    }

    interface IAssetLoader : CapitalGames.ILifecycleAware
    {
        /*0x1ffc854*/ void GetObject(string assetName, CapitalGames.ObjectLoadedCallback completedCallback, CapitalGames.ObjectErrorCallback errorCallback, bool canBeInstantiated, bool unloadBundleImmediately);
        /*0x1f30ff0*/ void Initialize(string assetPath, CapitalGames.AssetLoaderInitCompleteCallback completedCallback);
        /*0x1f30ff0*/ void Unload(string assetName, UnityEngine.Object asset);
        /*0x1f30214*/ System.Collections.IEnumerator StartUnloadOpenBundles();
        /*0x1f30214*/ string GetAssetRoot();
        /*0x1f2fec8*/ bool DoesAssetExist(string assetName);
    }

    enum AssetErrorCode
    {
        EditorAssetNotFound = -9000,
        UnableToLoadAsset = -8999,
        UnableToInstantiateAsset = -8998,
        InvalidResourceName = -8997,
        LocalBinaryRawByteLoadFailed = -8996,
        LocalBinaryCreateBundleFailed = -8995,
        ManifestRecordNotFound = -8994,
    }

    class ObjectLoadedCallback : System.MulticastDelegate
    {
        /*0x272f454*/ ObjectLoadedCallback(object object, nint method);
        /*0x272f560*/ void Invoke(UnityEngine.Object loadedObject, string assetName);
        /*0x272f574*/ System.IAsyncResult BeginInvoke(UnityEngine.Object loadedObject, string assetName, System.AsyncCallback callback, object object);
        /*0x272f59c*/ void EndInvoke(System.IAsyncResult result);
    }

    class ObjectErrorCallback : System.MulticastDelegate
    {
        /*0x272f5a8*/ ObjectErrorCallback(object object, nint method);
        /*0x272f648*/ void Invoke(CapitalGames.AssetErrorCode errorCode, string errorMessage, string assetName);
        /*0x272f65c*/ System.IAsyncResult BeginInvoke(CapitalGames.AssetErrorCode errorCode, string errorMessage, string assetName, System.AsyncCallback callback, object object);
        /*0x272f6f8*/ void EndInvoke(System.IAsyncResult result);
    }

    class AssetLoaderInitCompleteCallback : System.MulticastDelegate
    {
        /*0x272f704*/ AssetLoaderInitCompleteCallback(object object, nint method);
        /*0x272f7a4*/ void Invoke(bool success);
        /*0x272f7b8*/ System.IAsyncResult BeginInvoke(bool success, System.AsyncCallback callback, object object);
        /*0x272f814*/ void EndInvoke(System.IAsyncResult result);
    }

    struct BundleDownloadProgress
    {
        /*0x10*/ string BundleName;
        /*0x18*/ float Progress;

        /*0x272f820*/ BundleDownloadProgress(string inBundleName, float inProgress);
    }

    struct BundleCacheStatus
    {
        /*0x10*/ string BundleName;
        /*0x18*/ bool IsInCache;

        /*0x272f848*/ BundleCacheStatus(string inBundleName, bool inIsInCache);
    }

    interface IAssetLoaderDebugInfo
    {
        /*0x1f30214*/ System.Collections.Generic.IEnumerable<CapitalGames.BundleDownloadProgress> GetBundleDownloadProgresses();
        /*0x1f30214*/ string GetAssetManifestContents();
    }

    enum AssetMode
    {
        UNDEFINED = 0,
        LOCAL_ASSETS = 1,
        WEB_ASSETS = 2,
        EDITOR_ASSETS = 3,
        LOCAL_CDN_ASSET = 4,
    }

    enum Platform
    {
        UNKNOWN = -1,
        WILDCARD = 0,
        iOS = 9,
        Android = 13,
        EDITOR = 999,
        WebPlayer = 6,
        WebPlayerStreamed = 7,
        NaCl = 16,
        FlashPlayer = 18,
        Wii = 8,
        PS3 = 10,
        XBOX360 = 11,
        StandaloneOSXUniversal = 2,
        StandaloneOSXIntel = 4,
        StandaloneOSXIntel64 = 27,
        StandaloneWindows = 5,
        StandaloneWindows64 = 19,
        StandaloneGLESEmu = 14,
        StandaloneLinux = 17,
        StandaloneLinux64 = 24,
        StandaloneLinuxUniversal = 25,
        MetroPlayer = 21,
        WP8Player = 26,
        BB10 = 28,
    }

    enum Region
    {
        UNKNOWN = -1,
        WILDCARD = 0,
        NA = 1,
        ROW = 2,
    }

    enum TexFormat
    {
        UNKNOWN = -1,
        WILDCARD = 0,
        Generic = 1,
        DXT = 2,
        PVRTC = 3,
        ATC = 4,
        ETC = 5,
        ETC2 = 6,
    }

    class TexFormatUtil
    {
        static /*0x272f870*/ CapitalGames.TexFormat ParseToTexFormat(string value, CapitalGames.TexFormat defaultValue);
    }

    class Binder : CapitalGames.IBinder
    {
        /*0x10*/ System.Collections.Generic.LinkedList<CapitalGames.IModule> _modules;
        /*0x18*/ System.Collections.Generic.Dictionary<System.Type, CapitalGames.IBinding> _typeMap;
        /*0x20*/ System.Collections.Generic.Dictionary<string, CapitalGames.IBinding> _nameMap;
        /*0x28*/ bool _debug;

        /*0x272f8d8*/ Binder();
        /*0x272fa08*/ Binder(bool debug);
        /*0x272fb48*/ void Install(System.Collections.Generic.IEnumerable<CapitalGames.IModule> modules);
        /*0x272fde8*/ void Install(CapitalGames.IModule module);
        /*0x272fe40*/ void Configure();
        /*0x272ff84*/ void Reset();
        /*0x273001c*/ void Info();
        /*0x1f30ebc*/ void Info<KeyType>(System.Collections.Generic.Dictionary<KeyType, CapitalGames.IBinding> map);
        /*0x1f302cc*/ CapitalGames.IBindingBuilder<InterfaceType> Bind<InterfaceType>(string name);
        /*0x1f302cc*/ CapitalGames.IBinding Bind<InterfaceType, ImplementationType>(string name);
        /*0x1ffc854*/ CapitalGames.IBinding Bind<InterfaceType>(InterfaceType instance, string name);
        /*0x2730094*/ CapitalGames.IBinding Bind(System.Type additionalInterfaceType, CapitalGames.IBinding binding);
        /*0x273024c*/ CapitalGames.IBinding GetBinding(System.Type type, string name);
        /*0x1f302cc*/ CapitalGames.IBinding GetBinding<T>(string name);
        /*0x27302ec*/ CapitalGames.IBinding GetOrCreateBinding(System.Type type, string name);
        /*0x1f302cc*/ CapitalGames.IBinding GetOrCreateBinding<T>(string name);
        /*0x2730424*/ System.Collections.Generic.Dictionary<System.Type, CapitalGames.IBinding> GetTypeBindings();
        /*0x273042c*/ System.Collections.Generic.IEnumerable<CapitalGames.IBinding> GetBindingsByScope(CapitalGames.Scope scope);
        /*0x27305dc*/ void PopulateByScope(System.Collections.Generic.List<CapitalGames.IBinding> target, System.Collections.Generic.IEnumerable<CapitalGames.IBinding> source, CapitalGames.Scope scope);
        /*0x1f309e4*/ void AssertTypeInvariants<InterfaceType, ImplementationType>();

        class <>c
        {
            static /*0x0*/ CapitalGames.Binder.<> <>9;
            static /*0x8*/ System.Comparison<CapitalGames.IBinding> <>9__21_0;

            static /*0x273093c*/ <>c();
            /*0x27309a4*/ <>c();
            /*0x27309ac*/ int <GetBindingsByScope>b__21_0(CapitalGames.IBinding a, CapitalGames.IBinding b);
        }
    }

    class Binding : CapitalGames.IBinding
    {
        /*0x10*/ System.Type _type;
        /*0x18*/ string _name;
        /*0x20*/ CapitalGames.Scope _scope;
        /*0x24*/ int _rank;
        /*0x28*/ string _objectName;
        /*0x30*/ object _instance;

        /*0x2730ad4*/ Binding(string name);
        /*0x27303cc*/ Binding(System.Type type, string name, CapitalGames.Scope scope);
        /*0x2730b04*/ System.Type GetImplementationType();
        /*0x2730b0c*/ void SetImplementationType(System.Type type);
        /*0x2730b14*/ string GetName();
        /*0x2730b1c*/ void SetName(string name);
        /*0x2730b24*/ CapitalGames.Scope GetScope();
        /*0x2730b2c*/ void SetScope(CapitalGames.Scope scope);
        /*0x2730b34*/ int GetRank();
        /*0x2730b3c*/ void SetRank(int rank);
        /*0x2730b44*/ object GetInstance();
        /*0x2730b4c*/ void SetInstance(object instance);
        /*0x2730b54*/ string GetObjectName();
        /*0x2730b5c*/ void SetObjectName(string objectName);
        /*0x2730b64*/ string GetModuleName();
        /*0x2730b6c*/ void SetModuleName(string moduleName);
    }

    class BindingBuilder<InterfaceType> : CapitalGames.IBindingBuilder<InterfaceType>, CapitalGames.IScopedBindingBuilder
    {
        /*0x0*/ CapitalGames.IBinder _binder;
        /*0x0*/ CapitalGames.IBinding _binding;
        /*0x0*/ string _name;
        /*0x0*/ InterfaceType _instance;

        /*0x1f30ff0*/ BindingBuilder(CapitalGames.IBinder binder, string name);
        /*0x1f302cc*/ CapitalGames.IScopedBindingBuilder To<ImplementationType>(string name);
        /*0x1ffc854*/ void ToInstance(InterfaceType instance, string name);
        /*0x1f30214*/ CapitalGames.IScopedBindingBuilder AndShareBindingWith<AdditionalType>();
        /*0x1f30240*/ CapitalGames.IScopedBindingBuilder In(CapitalGames.Scope scope);
        /*0x1f30240*/ CapitalGames.IScopedBindingBuilder Rank(int rank);
        /*0x1f302cc*/ CapitalGames.IScopedBindingBuilder ObjectName(string objectName);
        /*0x1f302cc*/ CapitalGames.IScopedBindingBuilder SetModule(string moduleName);
    }

    interface IBinder
    {
        /*0x1f30ebc*/ void Install(System.Collections.Generic.IEnumerable<CapitalGames.IModule> modules);
        /*0x1f30ebc*/ void Install(CapitalGames.IModule module);
        /*0x1f309e4*/ void Configure();
        /*0x1f309e4*/ void Reset();
        /*0x1f309e4*/ void Info();
        /*0x1f302cc*/ CapitalGames.IBindingBuilder<InterfaceType> Bind<InterfaceType>(string name);
        /*0x1f302cc*/ CapitalGames.IBinding Bind<InterfaceType, ImplementationType>(string name);
        /*0x1ffc854*/ CapitalGames.IBinding Bind<InterfaceType>(InterfaceType instance, string name);
        /*0x1f30394*/ CapitalGames.IBinding Bind(System.Type additionalInterfaceType, CapitalGames.IBinding binding);
        /*0x1f302cc*/ CapitalGames.IBinding GetBinding<T>(string name);
        /*0x1f30394*/ CapitalGames.IBinding GetBinding(System.Type type, string name);
        /*0x1f302cc*/ CapitalGames.IBinding GetOrCreateBinding<T>(string name);
        /*0x1f30394*/ CapitalGames.IBinding GetOrCreateBinding(System.Type type, string name);
        /*0x1f30240*/ System.Collections.Generic.IEnumerable<CapitalGames.IBinding> GetBindingsByScope(CapitalGames.Scope scope);
        /*0x1f30214*/ System.Collections.Generic.Dictionary<System.Type, CapitalGames.IBinding> GetTypeBindings();
    }

    interface IBinding
    {
        /*0x1f30214*/ System.Type GetImplementationType();
        /*0x1f30ebc*/ void SetImplementationType(System.Type type);
        /*0x1f30214*/ string GetName();
        /*0x1f30ebc*/ void SetName(string name);
        /*0x1f2ffc8*/ CapitalGames.Scope GetScope();
        /*0x1f30b78*/ void SetScope(CapitalGames.Scope scope);
        /*0x1f2ffc8*/ int GetRank();
        /*0x1f30b78*/ void SetRank(int rank);
        /*0x1f30214*/ object GetInstance();
        /*0x1f30ebc*/ void SetInstance(object instance);
        /*0x1f30214*/ string GetObjectName();
        /*0x1f30ebc*/ void SetObjectName(string objectName);
        /*0x1f30214*/ string GetModuleName();
        /*0x1f30ebc*/ void SetModuleName(string moduleName);
    }

    interface IBindingBuilder<InterfaceType> : CapitalGames.IScopedBindingBuilder
    {
        /*0x1f302cc*/ CapitalGames.IScopedBindingBuilder To<ImplementationType>(string name);
        /*0x1ffc854*/ void ToInstance(InterfaceType instance, string name);
    }

    interface IInjector
    {
        /*0x1ffc854*/ T Get<T>(string name, string objectName, bool createUniqueObject);
        object Get(System.Type type, string name, string objectName, bool createUniqueObject);
        /*0x1f30ebc*/ void Inject(object target);
        /*0x1f309e4*/ void Reset();
        /*0x1f309e4*/ void Info();
    }

    enum CreationFlags
    {
        None = 0,
        CreateUniqueObject = 1,
        PersistObject = 2,
    }

    interface IInstantiator
    {
        /*0x1ffc854*/ T New<T>(string objectName, CapitalGames.CreationFlags flags);
        object New(System.Type type, string objectName, CapitalGames.CreationFlags flags);
        /*0x1f30ebc*/ void Subscribe(System.EventHandler<CapitalGames.OnInstantiateArgs> handler);
        /*0x1f30ebc*/ void Unsubscribe(System.EventHandler<CapitalGames.OnInstantiateArgs> handler);
        /*0x1f30a84*/ void AssertConcrete<T>(bool invert);
        void AssertConcrete(System.Type type, bool invert);
        /*0x1f30a84*/ void SetResetInProgress(bool value);
    }

    class OnInstantiateArgs : System.EventArgs
    {
        /*0x10*/ object _instance;

        /*0x2730b70*/ OnInstantiateArgs(object instance);
        /*0x2730be4*/ object GetInstance();
    }

    interface IModule
    {
        /*0x1f30ebc*/ void Configure(CapitalGames.IBinder binder);
    }

    class Inject : System.Attribute
    {
        /*0x10*/ string <Name>k__BackingField;
        /*0x18*/ string <ObjectName>k__BackingField;

        /*0x2730c0c*/ Inject();
        /*0x2730bec*/ string get_Name();
        /*0x2730bf4*/ void set_Name(string value);
        /*0x2730bfc*/ string get_ObjectName();
        /*0x2730c04*/ void set_ObjectName(string value);
    }

    class Injection
    {
        static System.Reflection.BindingFlags INJECTABLE_FIELD_BINDING_FLAGS = 124;
        static System.Reflection.BindingFlags POSTCONSTRUCT_METHOD_BINDING_FLAGS = 124;
        static /*0x0*/ System.Type PROVIDER_INTERFACE_TYPE;
        static /*0x8*/ System.Type PROVIDER_TYPE;
        static /*0x10*/ System.Type COMPONENT_TYPE;
        static /*0x18*/ string AWAKE_METHOD_NAME;
        static /*0x20*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<CapitalGames.MemberContext<System.Reflection.FieldInfo>>> sInjectableFieldsDictionary;
        static /*0x28*/ System.Threading.Thread sFieldsInjectionThread;
        /*0x10*/ CapitalGames.IInjector _injector;
        /*0x18*/ CapitalGames.IBinder _binder;
        /*0x20*/ object _target;
        /*0x28*/ System.Type _targetType;
        /*0x30*/ bool _debug;

        static /*0x2731a50*/ Injection();
        /*0x2730c14*/ Injection(CapitalGames.IInjector injector, CapitalGames.IBinder binder, object target, bool debug);
        /*0x2730cb0*/ object GetTarget();
        /*0x2730cb8*/ System.Type GetTargetType();
        /*0x2730cc0*/ void Execute();
        /*0x2730db4*/ void Inject();
        /*0x27317d8*/ object ConstructProvider(System.Type type, string name);
        /*0x27313c8*/ void InvokePostConstruct();
        /*0x273147c*/ System.Collections.Generic.List<CapitalGames.MemberContext<System.Reflection.FieldInfo>> GetInjectableFields();
        /*0x1ffc854*/ AttributeType GetAttribute<AttributeType>(System.Reflection.MemberInfo target);
        /*0x1f2fec8*/ bool HasAttribute<T>(System.Reflection.MemberInfo target);
        /*0x2730cec*/ void CheckForAwake();

        class Builder
        {
            /*0x10*/ CapitalGames.IInjector _injector;
            /*0x18*/ CapitalGames.IBinder _binder;
            /*0x20*/ object _target;
            /*0x28*/ bool _debug;

            /*0x2731cc4*/ Builder();
            /*0x2731bf0*/ CapitalGames.Injection.Builder Injector(CapitalGames.IInjector injector);
            /*0x2731c0c*/ CapitalGames.Injection.Builder Binder(CapitalGames.IBinder binder);
            /*0x2731c28*/ CapitalGames.Injection.Builder Target(object target);
            /*0x2731c44*/ CapitalGames.Injection.Builder Debug(bool debug);
            /*0x2731c4c*/ CapitalGames.Injection Build();
        }
    }

    class Injector : CapitalGames.IInjector, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ bool _debug;
        static /*0x8*/ CapitalGames.IInjector _instance;
        /*0x10*/ CapitalGames.IInstantiator _instantiator;
        /*0x18*/ CapitalGames.IBinder _binder;

        static /*0x2731ccc*/ CapitalGames.IInjector get_Instance();
        static /*0x1f350f8*/ void VerifyInject<T>(ref T injectProperty);
        /*0x2731d14*/ Injector(CapitalGames.IInstantiator instantiator, System.Collections.Generic.IEnumerable<CapitalGames.IModule> modules, bool debug);
        /*0x2732434*/ void OnAppReset();
        /*0x2732438*/ void Reset();
        /*0x2732504*/ object Get(System.Type type, string name, string objectName, bool createUniqueObject);
        /*0x1ffc854*/ T Get<T>(string name, string objectName, bool createUniqueObject);
        /*0x2732670*/ object Construct(CapitalGames.IBinding binding, string objectName, bool createUniqueObject);
        /*0x2732ab8*/ void Inject(object target);
        /*0x2731fb0*/ void ConstructEagerSingletons();
        /*0x2732b34*/ void Info();
        /*0x2732bd8*/ System.Collections.Generic.Dictionary<System.Type, CapitalGames.IBinding> GetTypeBindings();

        class Builder
        {
            /*0x10*/ CapitalGames.IInstantiator _instantiator;
            /*0x18*/ System.Collections.Generic.List<CapitalGames.IModule> _modules;
            /*0x20*/ bool _debug;

            /*0x2732d70*/ Builder();
            /*0x2732c7c*/ CapitalGames.Injector.Builder Instantiator(CapitalGames.IInstantiator instantiator);
            /*0x2732c98*/ CapitalGames.Injector.Builder Module(CapitalGames.IModule module);
            /*0x2732cf8*/ CapitalGames.Injector.Builder Debug(bool debug);
            /*0x2732d00*/ CapitalGames.Injector Build();
        }
    }

    class InjectorExtensions
    {
        static /*0x2732df8*/ void Inject(UnityEngine.Component target);
    }

    class InjectorModule : CapitalGames.Module
    {
        /*0x18*/ CapitalGames.IInjector _injector;
        /*0x20*/ CapitalGames.IInstantiator _instantiator;

        /*0x2731f6c*/ InjectorModule(CapitalGames.IInjector injector, CapitalGames.IInstantiator instantiator);
        /*0x2732ee0*/ void Configure();
    }

    class Instantiator : CapitalGames.IInstantiator
    {
        static bool USE_INTERFACE_NAME_FOR_NEW_GAME_OBJECTS = true;
        static /*0x0*/ System.Type COMPONENT_TYPE;
        static /*0x8*/ string GAME_OBJECT_NAME_PREFIX;
        static /*0x10*/ string INTERFACE_PREFIX;
        /*0x10*/ bool _resetInProgress;
        /*0x18*/ System.EventHandler<CapitalGames.OnInstantiateArgs> _onInstantiate;

        static /*0x27339a0*/ Instantiator();
        /*0x2733998*/ Instantiator();
        /*0x2733064*/ void add__onInstantiate(System.EventHandler<CapitalGames.OnInstantiateArgs> value);
        /*0x2733114*/ void remove__onInstantiate(System.EventHandler<CapitalGames.OnInstantiateArgs> value);
        /*0x27331c4*/ void add_OnInstantiate(System.EventHandler<CapitalGames.OnInstantiateArgs> value);
        /*0x27331ec*/ void remove_OnInstantiate(System.EventHandler<CapitalGames.OnInstantiateArgs> value);
        /*0x1ffc854*/ T New<T>(string objectName, CapitalGames.CreationFlags flags);
        /*0x27331f0*/ object New(System.Type type, string objectName, CapitalGames.CreationFlags flags);
        /*0x27333d4*/ object NewObject(System.Type type);
        /*0x1ffc854*/ T NewObject<T>();
        /*0x2733508*/ object NewComponent(System.Type type, string objectName, CapitalGames.CreationFlags flags);
        /*0x273374c*/ object NewComponent(System.Type type, UnityEngine.GameObject gameObject);
        /*0x273369c*/ UnityEngine.GameObject FindOrCreateGameObject(string objectName, CapitalGames.CreationFlags flags);
        /*0x2733798*/ UnityEngine.GameObject CreateGameObject(string objectName, CapitalGames.CreationFlags flags);
        /*0x1f30214*/ string GameObjectNameForType<T>();
        /*0x2733608*/ string GameObjectNameForType(System.Type type);
        /*0x27337f4*/ System.Type GetPrimaryInterface(System.Type type);
        /*0x27338b4*/ string GetInterfaceNameBase(System.Type type);
        /*0x2733964*/ void SetResetInProgress(bool value);
        /*0x273396c*/ void Subscribe(System.EventHandler<CapitalGames.OnInstantiateArgs> handler);
        /*0x2733994*/ void Unsubscribe(System.EventHandler<CapitalGames.OnInstantiateArgs> handler);
        /*0x273357c*/ void FireInstantiateEvent(object instance);
        /*0x1f30a84*/ void AssertConcrete<T>(bool invert);
        /*0x27332d0*/ void AssertConcrete(System.Type type, bool invert);
    }

    class InstantiatorExtensions
    {
        static /*0x2733a88*/ void DestroyAll(UnityEngine.Object target);
    }

    interface IPostConstructable
    {
        /*0x1f309e4*/ void PostConstruct();
    }

    interface IProvider<T>
    {
        /*0x1ffc854*/ T Get(string name, string objectName, bool createUniqueObject);
    }

    interface IProviderAsync<T>
    {
        /*0x1f310fc*/ void Get(string name, string objectName, System.Action<T> finishCallback);
    }

    interface IScopedBindingBuilder
    {
        /*0x1f30240*/ CapitalGames.IScopedBindingBuilder In(CapitalGames.Scope scope);
        /*0x1f30240*/ CapitalGames.IScopedBindingBuilder Rank(int rank);
        /*0x1f302cc*/ CapitalGames.IScopedBindingBuilder ObjectName(string objectName);
        /*0x1f30214*/ CapitalGames.IScopedBindingBuilder AndShareBindingWith<AdditionalType>();
        /*0x1f302cc*/ CapitalGames.IScopedBindingBuilder SetModule(string moduleName);
    }

    class MemberContext<MemberType>
    {
        /*0x0*/ MemberType _info;
        /*0x0*/ string _name;
        /*0x0*/ string _objectName;

        /*0x1ffc854*/ MemberContext(MemberType info, string name, string objectName);
        /*0x1ffc854*/ MemberType GetInfo();
        /*0x1f30214*/ string GetName();
        /*0x1f30214*/ string GetObjectName();
    }

    class Module : CapitalGames.IModule
    {
        /*0x10*/ CapitalGames.IBinder _binder;

        /*0x2732ed8*/ Module();
        /*0x2733c38*/ void Configure(CapitalGames.IBinder binder);
        /*0x1f309e4*/ void Configure();
        /*0x2733ce0*/ void Install(System.Collections.Generic.IEnumerable<CapitalGames.IModule> modules);
        /*0x2733d88*/ void Install(CapitalGames.IModule module);
        /*0x1f302cc*/ CapitalGames.IBindingBuilder<InterfaceType> Bind<InterfaceType>(string name);
        CapitalGames.IBinding BindConcreteType<InterfaceType>(CapitalGames.Scope scope, string name);
        CapitalGames.IBinding BindInterfaceFromTo<InterfaceType, ImplementationType>(CapitalGames.Scope scope, string name);
        /*0x1f30ebc*/ void BindInterfaceToExistingBinding<InterfaceType>(CapitalGames.IBinding binding);
        /*0x1ffc854*/ CapitalGames.IBinding BindInterfaceToInstance<InterfaceType>(InterfaceType instance, string name);
    }

    class Provider<T> : CapitalGames.IProvider<T>
    {
        /*0x0*/ CapitalGames.IInjector _injector;

        /*0x1f309e4*/ Provider();
        /*0x1ffc854*/ T Get(string name, string objectName, bool createUniqueObject);
    }

    enum Scope
    {
        SINGLETON = 0,
        PROTOTYPE = 1,
        EAGER_SINGLETON = 2,
    }

    class Dispatch
    {
        /*0x10*/ System.Collections.Generic.List<CapitalGames.DispatchHandler> _handlers;

        /*0x2733f1c*/ Dispatch();
        /*0x1ffc854*/ void SendObject<TDispatchable>(TDispatchable objectToSend);
        /*0x2733e34*/ void RegisterHandler(CapitalGames.DispatchHandler handlerToRegister);
        /*0x2733ec4*/ void RemoveHandler(CapitalGames.DispatchHandler handler);
    }

    class DispatchHandler
    {
        /*0x10*/ System.Collections.Generic.Dictionary<System.Type, CapitalGames.DispatchHandler.HandlerMethodInfo> _handlerMethods;

        /*0x27340ac*/ DispatchHandler();
        /*0x2733fa4*/ void _handleInternal(CapitalGames.IDispatchable eventToHandle);
        /*0x1f30ebc*/ void _registerTypeHandler<T>(System.Action<T> handlerAction);

        class HandlerMethodInfo
        {
            /*0x10*/ System.Reflection.MethodInfo Method;
            /*0x18*/ object Target;

            /*0x2734134*/ HandlerMethodInfo();
        }
    }

    interface IDispatchable
    {
    }

    interface CoroutineCreator
    {
        /*0x1f302cc*/ UnityEngine.Coroutine StartCoroutineSafe(System.Collections.IEnumerator routine);
        /*0x1f30ebc*/ void StopCoroutineSafe(UnityEngine.Coroutine routine);
        /*0x1f30778*/ UnityEngine.Coroutine DelayAction(System.Action onFinish, float delay);
        /*0x1f30ebc*/ void DelayActionOneFrame(System.Action onFinish);
        /*0x1f30ebc*/ void DelayActionEndOfFrame(System.Action onFinish);
        /*0x1f2fe14*/ bool get_IsResetInProgress();
        /*0x1f30a84*/ void set_IsResetInProgress(bool value);
    }

    class YieldInstructions
    {
        static /*0x0*/ UnityEngine.WaitForEndOfFrame WaitForEndOfFrame;

        static /*0x273413c*/ YieldInstructions();
    }

    class DefaultCoroutineCreator : UnityEngine.MonoBehaviour, CapitalGames.CoroutineCreator, CapitalGames.ILifecycleAware
    {
        /*0x20*/ bool <IsResetInProgress>k__BackingField;

        /*0x27345a0*/ DefaultCoroutineCreator();
        /*0x27341b8*/ bool get_IsResetInProgress();
        /*0x27341c0*/ void set_IsResetInProgress(bool value);
        /*0x27341c8*/ void OnAppReset();
        /*0x27341f0*/ UnityEngine.Coroutine StartCoroutineSafe(System.Collections.IEnumerator routine);
        /*0x2734288*/ void StopCoroutineSafe(UnityEngine.Coroutine routine);
        /*0x2734320*/ UnityEngine.Coroutine DelayAction(System.Action onFinish, float delay);
        /*0x2734340*/ System.Collections.IEnumerator DelayedActionHelper(System.Action onFinish, float delay);
        /*0x2734400*/ void DelayActionOneFrame(System.Action onFinish);
        /*0x2734420*/ System.Collections.IEnumerator DelayedActionHelper(System.Action onFinish);
        /*0x27344d0*/ void DelayActionEndOfFrame(System.Action onFinish);
        /*0x27344f0*/ System.Collections.IEnumerator DelayedEndOfFrameActionHelper(System.Action onFinish);

        class <DelayedActionHelper>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ CapitalGames.DefaultCoroutineCreator <>4__this;
            /*0x28*/ System.Action onFinish;

            /*0x27344a8*/ <DelayedActionHelper>d__10(int <>1__state);
            /*0x27345a8*/ void System.IDisposable.Dispose();
            /*0x27345ac*/ bool MoveNext();
            /*0x2734634*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x273463c*/ void System.Collections.IEnumerator.Reset();
            /*0x2734674*/ object System.Collections.IEnumerator.get_Current();
        }

        class <DelayedActionHelper>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ float delay;
            /*0x28*/ CapitalGames.DefaultCoroutineCreator <>4__this;
            /*0x30*/ System.Action onFinish;

            /*0x27343d8*/ <DelayedActionHelper>d__8(int <>1__state);
            /*0x273467c*/ void System.IDisposable.Dispose();
            /*0x2734680*/ bool MoveNext();
            /*0x2734754*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x273475c*/ void System.Collections.IEnumerator.Reset();
            /*0x2734794*/ object System.Collections.IEnumerator.get_Current();
        }

        class <DelayedEndOfFrameActionHelper>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ CapitalGames.DefaultCoroutineCreator <>4__this;
            /*0x28*/ System.Action onFinish;

            /*0x2734578*/ <DelayedEndOfFrameActionHelper>d__12(int <>1__state);
            /*0x273479c*/ void System.IDisposable.Dispose();
            /*0x27347a0*/ bool MoveNext();
            /*0x2734868*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x2734870*/ void System.Collections.IEnumerator.Reset();
            /*0x27348a8*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    interface InstanceInitializedCallback
    {
        /*0x1f30ebc*/ void Invoke(CapitalGames.IInitializable instance);
    }

    interface IInitializable
    {
        /*0x1f30ebc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x27348b0*/ void Cancel();
    }

    interface ILifecycleAware
    {
        /*0x1f309e4*/ void OnAppReset();
    }

    enum ResetLevel
    {
        FULL = 0,
        REAUTH = 1,
    }

    class LifecycleExtensions
    {
        static /*0x27348b4*/ string GetName(CapitalGames.ILifecycleAware caller);
    }

    class OnApplicationPauseDelegate : System.MulticastDelegate
    {
        /*0x27348dc*/ OnApplicationPauseDelegate(object object, nint method);
        /*0x27349e8*/ void Invoke(CapitalGames.IMonoBehaviourEventNotifierSystem sender, bool paused);
        /*0x27349fc*/ System.IAsyncResult BeginInvoke(CapitalGames.IMonoBehaviourEventNotifierSystem sender, bool paused, System.AsyncCallback callback, object object);
        /*0x2734a5c*/ void EndInvoke(System.IAsyncResult result);
    }

    class OnApplicationFocusDelegate : System.MulticastDelegate
    {
        /*0x2734a68*/ OnApplicationFocusDelegate(object object, nint method);
        /*0x2734b74*/ void Invoke(CapitalGames.IMonoBehaviourEventNotifierSystem sender, bool focused);
        /*0x2734b88*/ System.IAsyncResult BeginInvoke(CapitalGames.IMonoBehaviourEventNotifierSystem sender, bool focused, System.AsyncCallback callback, object object);
        /*0x2734be8*/ void EndInvoke(System.IAsyncResult result);
    }

    class OnUpdateDelegate : System.MulticastDelegate
    {
        /*0x2734bf4*/ OnUpdateDelegate(object object, nint method);
        /*0x2734cfc*/ void Invoke(CapitalGames.IMonoBehaviourEventNotifierSystem sender);
        /*0x2734d10*/ System.IAsyncResult BeginInvoke(CapitalGames.IMonoBehaviourEventNotifierSystem sender, System.AsyncCallback callback, object object);
        /*0x2734d30*/ void EndInvoke(System.IAsyncResult result);
    }

    interface IMonoBehaviourEventNotifierSystem : CapitalGames.ILifecycleAware
    {
        /*0x1f30ebc*/ void add_OnApplicationPaused(CapitalGames.OnApplicationPauseDelegate value);
        /*0x1f30ebc*/ void remove_OnApplicationPaused(CapitalGames.OnApplicationPauseDelegate value);
        /*0x1f30ebc*/ void add_OnApplicationFocused(CapitalGames.OnApplicationFocusDelegate value);
        /*0x1f30ebc*/ void remove_OnApplicationFocused(CapitalGames.OnApplicationFocusDelegate value);
        /*0x1f30ebc*/ void add_OnApplicationExit(CapitalGames.OnUpdateDelegate value);
        /*0x1f30ebc*/ void remove_OnApplicationExit(CapitalGames.OnUpdateDelegate value);
        /*0x1f30ebc*/ void add_OnUpdated(CapitalGames.OnUpdateDelegate value);
        /*0x1f30ebc*/ void remove_OnUpdated(CapitalGames.OnUpdateDelegate value);
        /*0x1f30ebc*/ void add_OnLateUpdate(CapitalGames.OnUpdateDelegate value);
        /*0x1f30ebc*/ void remove_OnLateUpdate(CapitalGames.OnUpdateDelegate value);
        /*0x1f30ebc*/ void add_OnApplicationBackgrounded(System.Action value);
        /*0x1f30ebc*/ void remove_OnApplicationBackgrounded(System.Action value);
        /*0x1f30ebc*/ void add_OnApplicationForegrounded(System.Action value);
        /*0x1f30ebc*/ void remove_OnApplicationForegrounded(System.Action value);
    }

    class Initializer : EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>, CapitalGames.InstanceInitializedCallback, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ System.Type INITIALIZABLE_TYPE;
        /*0x10*/ CapitalGames.IInitializable[] _instances;
        /*0x18*/ System.Action _successCallback;
        /*0x20*/ System.Action<string> _failedCallback;
        /*0x28*/ System.Action<CapitalGames.IInitializable, int, int> _progressCallback;
        /*0x30*/ bool _chained;
        /*0x38*/ string _displayName;
        /*0x40*/ int _instanceCount;
        /*0x44*/ int _instanceIdx;
        /*0x48*/ bool _reset;
        /*0x50*/ System.Collections.Generic.HashSet<CapitalGames.IInitializable> _notCompleteInitializables;

        static /*0x2735e40*/ Initializer();
        static /*0x2734d48*/ CapitalGames.Initializer Chain(CapitalGames.IInitializable[] instances, System.Action successCallback, System.Action<string> failedCallback, System.Action<CapitalGames.IInitializable, int, int> progressCallback, string displayName);
        static /*0x2735000*/ CapitalGames.Initializer Parallel(CapitalGames.IInitializable[] instances, System.Action successCallback, System.Action<string> failedCallback, System.Action<CapitalGames.IInitializable, int, int> progressCallback, string displayName);
        /*0x273508c*/ Initializer(System.Type[] instanceTypes, System.Action successCallback, System.Action<string> failedCallback, System.Action<CapitalGames.IInitializable, int, int> progressCallback, bool chained, string displayName);
        /*0x2734dd4*/ Initializer(CapitalGames.IInitializable[] instances, System.Action successCallback, System.Action<string> failedCallback, System.Action<CapitalGames.IInitializable, int, int> progressCallback, bool chained, string displayName);
        /*0x2734d3c*/ int get__remainingCount();
        /*0x27356ac*/ void OnAppReset();
        /*0x27354a8*/ void Execute(CapitalGames.IInitializable[] instances, System.Action successCallback, System.Action<string> failedCallback, System.Action<CapitalGames.IInitializable, int, int> progressCallback, bool chained, string displayName);
        /*0x273589c*/ bool Initialize(CapitalGames.IInitializable instance);
        /*0x2735b44*/ void Invoke(CapitalGames.IInitializable instance);
        /*0x2735a90*/ void Failure(string reason);
        /*0x273587c*/ void Success();
        /*0x2735e3c*/ void Completed();
        /*0x2735898*/ void LogProgress();
    }

    class MonoBehaviourEventNotifierSystem : UnityEngine.MonoBehaviour, CapitalGames.IMonoBehaviourEventNotifierSystem, CapitalGames.ILifecycleAware
    {
        /*0x20*/ CapitalGames.OnApplicationPauseDelegate OnApplicationPaused;
        /*0x28*/ CapitalGames.OnApplicationFocusDelegate OnApplicationFocused;
        /*0x30*/ CapitalGames.OnUpdateDelegate OnApplicationExit;
        /*0x38*/ CapitalGames.OnUpdateDelegate OnUpdated;
        /*0x40*/ CapitalGames.OnUpdateDelegate OnLateUpdate;
        /*0x48*/ System.Action OnApplicationBackgrounded;
        /*0x50*/ System.Action OnApplicationForegrounded;
        /*0x58*/ bool _isPaused;
        /*0x59*/ bool _isFocused;

        /*0x27368ec*/ MonoBehaviourEventNotifierSystem();
        /*0x2735ed0*/ void add_OnApplicationPaused(CapitalGames.OnApplicationPauseDelegate value);
        /*0x2735f6c*/ void remove_OnApplicationPaused(CapitalGames.OnApplicationPauseDelegate value);
        /*0x2736008*/ void add_OnApplicationFocused(CapitalGames.OnApplicationFocusDelegate value);
        /*0x27360a4*/ void remove_OnApplicationFocused(CapitalGames.OnApplicationFocusDelegate value);
        /*0x2736140*/ void add_OnApplicationExit(CapitalGames.OnUpdateDelegate value);
        /*0x27361dc*/ void remove_OnApplicationExit(CapitalGames.OnUpdateDelegate value);
        /*0x2736278*/ void add_OnUpdated(CapitalGames.OnUpdateDelegate value);
        /*0x2736314*/ void remove_OnUpdated(CapitalGames.OnUpdateDelegate value);
        /*0x27363b0*/ void add_OnLateUpdate(CapitalGames.OnUpdateDelegate value);
        /*0x273644c*/ void remove_OnLateUpdate(CapitalGames.OnUpdateDelegate value);
        /*0x27364e8*/ void add_OnApplicationBackgrounded(System.Action value);
        /*0x2736584*/ void remove_OnApplicationBackgrounded(System.Action value);
        /*0x2736620*/ void add_OnApplicationForegrounded(System.Action value);
        /*0x27366bc*/ void remove_OnApplicationForegrounded(System.Action value);
        /*0x2736758*/ void OnAppReset();
        /*0x27367d4*/ void OnApplicationPause(bool paused);
        /*0x2736818*/ void HandlePause(bool paused);
        /*0x2736860*/ void OnApplicationFocus(bool focused);
        /*0x273688c*/ void OnApplicationQuit();
        /*0x27368ac*/ void Update();
        /*0x27368cc*/ void LateUpdate();
        /*0x273675c*/ void ClearEventDelegates();
    }

    class ResourceName
    {
        static char RESOURCE_NAME_SEGMENT_DELIMITER = 46;
        /*0x10*/ string TypeName;
        /*0x18*/ string AssetName;
        /*0x20*/ string PackageName;
        /*0x28*/ string FullName;

        static /*0x272d408*/ CapitalGames.ResourceName ParseResourceName(string fileNameNoExtension);
        static /*0x272bebc*/ bool FollowsNamingConvention(Yeti.AssetBundleType packageType, string fileNameNoExtension);
        /*0x27368f4*/ ResourceName(string typeName, string assetName, string packageName, string fullName);
        /*0x2736b9c*/ bool Equals(CapitalGames.ResourceName other);
        /*0x2736c10*/ bool Equals(object obj);
        /*0x2736d10*/ int GetHashCode();
    }

    class CollectionExtensions
    {
        static /*0x1f36f18*/ void AddRange<T>(System.Collections.Generic.HashSet<T> hashSet, System.Collections.Generic.IEnumerable<T> items);
        static /*0x1f327cc*/ T[] ToArray<T>(System.Collections.Generic.ICollection<T> collection);
    }

    class DebugUtils
    {
        static /*0x2736ec0*/ void Assert(bool condition, string assertString, bool breakOnFail);
        static /*0x2736f80*/ void Break(string assertString);
        /*0x2737038*/ DebugUtils();
    }

    class EnumUtil
    {
        static /*0x1f317dc*/ bool IsEnum<T>();
        static /*0x1ffc854*/ T Parse<T>(string constantName);
        static /*0x1ffc854*/ T Parse<T>(string constantName, T defaultValue);
        static /*0x1f318fc*/ bool TryParse<T>(string constantName, ref T result);
        static /*0x1ffc854*/ bool TryParse<T>(string constantName, ref T result, T defaultValue);
        static /*0x1f31840*/ bool IsDefined<T>(string constantName);
        static /*0x1f327a0*/ System.Collections.Generic.IEnumerable<T> GetValues<T>();
        static /*0x1f327a0*/ T[] GetValuesArray<T>();
        static /*0x1ffc854*/ T ToBitFieldEnum<T>(string[] constantNames);
        static /*0x1ffc854*/ string FromBitFieldEnumVal<T>(T value);
        static /*0x1f327a0*/ string[] GetNames<T>();
        static /*0x1f327cc*/ string GetNamesForDisplay<T>(string separator);
    }

    class ExitUtil
    {
        static /*0x0*/ string BATCH_MODE_ARGUMENT_NAME;

        static /*0x2737628*/ ExitUtil();
        static /*0x2737040*/ void Exit(CapitalGames.ExitUtil.ExitBehavior mode);
        static /*0x27370f8*/ void CleanExit();
        static /*0x2737148*/ void HardExit();
        static /*0x2737490*/ void ExitEditor(int exitCode);
        static /*0x2737494*/ bool IsBatchMode();
        static /*0x273749c*/ void MinimizeAndroidApplication();
        static /*0x2737294*/ void FinishRemoveTaskExit();
        /*0x2737620*/ ExitUtil();

        enum ExitBehavior
        {
            HARD = 0,
            CLEAN = 1,
            FINISH_REMOVE_TASK = 2,
        }
    }

    class FileUtils
    {
        static string PATH_SEPARATOR = "/";
        static string FILE_SCHEME = "file://";
        static string JAR_SCHEME = "jar:";
        static /*0x0*/ string _projectRoot;
        static /*0x8*/ string[] _toJoinPaths;

        static /*0x2738e00*/ FileUtils();
        static /*0x2728118*/ string FormatPath(string path);
        static /*0x272b814*/ void RemoveReadOnly(string targetFile);
        static /*0x2737690*/ void DeleteFile(string targetFile, bool force);
        static /*0x27377d0*/ void DeleteFiles(string dirPath, string fileNamePattern, bool recursive, bool force);
        static /*0x2737984*/ long FileSize(string filePath);
        static /*0x2737a68*/ byte[] ReadFileBytes(string targetFile);
        static /*0x2737af0*/ string ReadFile(string targetFile);
        static /*0x2737b78*/ void SetLastWriteTimeUtc(string fullFilePath, System.DateTime dateTime);
        static /*0x2737d80*/ bool IsFile(string path);
        static /*0x2737e10*/ bool IsDirectory(string path);
        static /*0x2737e9c*/ void DeletePath(string targetPath, bool recursive);
        static /*0x2737f8c*/ string GetProjectRoot();
        static /*0x2738098*/ string AbsoluteAssetPathToRelativeAssetPath(string absolutePath);
        static /*0x273816c*/ string CleanPath(string value);
        static /*0x27274b0*/ bool Exists(string filePath);
        static /*0x2738200*/ bool IsDirectoryWritable(string dirPath);
        static /*0x2738428*/ bool CreateDirectory(string dirPath);
        static /*0x27389c8*/ void CreateFile(string path, byte[] bytes);
        static /*0x27389d0*/ string WebRequestPathFixer(string path);
        static /*0x2738a60*/ string GetFileNameFromPath(string filePath);
        static /*0x2738b2c*/ string JoinPaths(string[] pathSegs);
        static /*0x2727188*/ string JoinPaths(string path1, string path2, string path3, string path4, string path5);
        /*0x2738df8*/ FileUtils();
    }

    interface IKeyValueLoader
    {
        /*0x1f30394*/ System.Collections.Generic.IDictionary<string, string> LoadFromResources(string assetName, string parentObjectName);
        /*0x1f30394*/ System.Collections.Generic.IDictionary<string, string> LoadFromPath(string filePath, string parentObjectName);
        /*0x1f30394*/ System.Collections.Generic.IDictionary<string, string> LoadFromAppPath(string filePath, string parentObjectName);
        /*0x1f31134*/ void LoadFromURL(string assetName, string parentObjectName, System.Action<System.Collections.Generic.IDictionary<string, string>> onLoad, string cachePath);
        /*0x1f310fc*/ void WriteToFile(string filePath, string parentObjectName, System.Collections.Generic.IDictionary<string, string> data);
    }

    interface ILocalPrefs
    {
        int GetInt(string key, int defaultValue);
        int GetSharedInt(string key, int defaultValue);
        void SetInt(string key, int value, bool save);
        void SetSharedInt(string key, int value, bool save);
        /*0x1ffc854*/ long GetLong(string key, long defaultValue);
        /*0x1ffc854*/ long GetSharedLong(string key, long defaultValue);
        /*0x1ffc854*/ void SetLong(string key, long value, bool save);
        /*0x1ffc854*/ void SetSharedLong(string key, long value, bool save);
        bool GetBool(string key, bool defaultValue);
        bool GetSharedBool(string key, bool defaultValue);
        void SetBool(string key, bool value, bool save);
        void SetSharedBool(string key, bool value, bool save);
        float GetFloat(string key, float defaultValue);
        float GetSharedFloat(string key, float defaultValue);
        void SetFloat(string key, float value, bool save);
        void SetSharedFloat(string key, float value, bool save);
        /*0x1f30394*/ string GetString(string key, string defaultValue);
        /*0x1f30394*/ string GetSharedString(string key, string defaultValue);
        void SetString(string key, string value, bool save);
        void SetSharedString(string key, string value, bool save);
        /*0x1ffc854*/ T GetEnum<T>(string key, T defaultValue);
        /*0x1ffc854*/ T GetSharedEnum<T>(string key, T defaultValue);
        /*0x1ffc854*/ void SetEnum<T>(string key, T value, bool save);
        /*0x1ffc854*/ void SetSharedEnum<T>(string key, T value, bool save);
        /*0x1f2fec8*/ bool HasKey(string key);
        /*0x1f2fec8*/ bool HasSharedKey(string key);
        void DeleteKey(string key, bool save);
        void DeleteSharedKey(string key, bool save);
        /*0x1f30a84*/ void DeleteAll(bool save);
        /*0x1f309e4*/ void Save();
        /*0x1f30ebc*/ void SetPlayerId(string playerId);
    }

    class LinkedHashSet<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.IEnumerable
    {
        /*0x0*/ System.Collections.Generic.LinkedList<T> _list;
        /*0x0*/ System.Collections.Generic.HashSet<T> _set;
        /*0x0*/ System.Collections.Generic.Dictionary<T, System.Collections.Generic.LinkedListNode<T>> _nodeMap;

        /*0x1f309e4*/ LinkedHashSet();
        /*0x1f30ebc*/ LinkedHashSet(System.Collections.Generic.IEnumerable<T> collection);
        /*0x1f30ebc*/ LinkedHashSet(System.Collections.Generic.IEqualityComparer<T> comparer);
        /*0x1f30ff0*/ LinkedHashSet(System.Collections.Generic.IEnumerable<T> collection, System.Collections.Generic.IEqualityComparer<T> comparer);
        /*0x1f2ffc8*/ int get_Count();
        /*0x1f30214*/ System.Collections.Generic.IEqualityComparer<T> get_Comparer();
        /*0x1ffc854*/ bool Contains(T item);
        /*0x1ffc854*/ bool Add(T item);
        /*0x1f309e4*/ void Clear();
        /*0x1ffc854*/ bool Remove(T item);
        /*0x1ffc854*/ void ListRemove(T item);
        /*0x1f2fec8*/ bool SetEquals(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f30ebc*/ void UnionWith(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f30ebc*/ void IntersectWith(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f30ebc*/ void SymmetricExceptWith(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f2fec8*/ bool IsSubsetOf(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f2fec8*/ bool IsSupersetOf(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f2fec8*/ bool IsProperSubsetOf(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f2fec8*/ bool IsProperSupersetOf(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f2fec8*/ bool Overlaps(System.Collections.Generic.IEnumerable<T> other);
        /*0x1f3008c*/ int RemoveWhere(System.Predicate<T> match);
        /*0x1f309e4*/ void TrimExcess();
        /*0x1f2fe14*/ bool System.Collections.Generic.ICollection<T>.get_IsReadOnly();
        /*0x1ffc854*/ void System.Collections.Generic.ICollection<T>.Add(T item);
        /*0x1f30214*/ System.Collections.Generic.IEnumerator<T> GetEnumerator();
        /*0x1f30214*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
        /*0x1f30214*/ System.Collections.Generic.IEnumerable<T> GetReverseEnumerator();
        /*0x1f30214*/ System.Collections.Generic.List<T> GetList();
        /*0x1f30214*/ System.Collections.Generic.List<T> GetListReversed();
        /*0x1f30214*/ System.Collections.Generic.LinkedList<T> GetLinkedList();
        /*0x1f30214*/ System.Collections.Generic.HashSet<T> GetHashSet();
        /*0x1f2fec8*/ bool Equals(object obj);
        /*0x1f2ffc8*/ int GetHashCode();
        /*0x1f30ebc*/ void CopyTo(T[] array);
        /*0x1f30ee8*/ void CopyTo(T[] array, int arrayIndex);
        void CopyTo(T[] array, int arrayIndex, int count);

        class <GetReverseEnumerator>d__32<T> : System.Collections.Generic.IEnumerable<T>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<T>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x0*/ int <>1__state;
            /*0x0*/ T <>2__current;
            /*0x0*/ int <>l__initialThreadId;
            /*0x0*/ CapitalGames.LinkedHashSet<T> <>4__this;
            /*0x0*/ System.Collections.Generic.LinkedListNode<T> <node>5__2;

            /*0x1f30b78*/ <GetReverseEnumerator>d__32(int <>1__state);
            /*0x1f309e4*/ void System.IDisposable.Dispose();
            /*0x1f2fe14*/ bool MoveNext();
            /*0x1ffc854*/ T System.Collections.Generic.IEnumerator<T>.get_Current();
            /*0x1f309e4*/ void System.Collections.IEnumerator.Reset();
            /*0x1f30214*/ object System.Collections.IEnumerator.get_Current();
            /*0x1f30214*/ System.Collections.Generic.IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
            /*0x1f30214*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
        }
    }

    class LocalPrefs : CapitalGames.ILocalPrefs
    {
        static /*0x0*/ System.Collections.Generic.List<string> PERSISTENT_ON_DELETE_KEYS;
        /*0x10*/ CapitalGames.LocalPrefsHelper _helper;

        static /*0x2739aec*/ LocalPrefs();
        /*0x2739a2c*/ LocalPrefs();
        /*0x2738e8c*/ int GetInt(string key, int defaultValue);
        /*0x2738f28*/ int GetSharedInt(string key, int defaultValue);
        /*0x2738f38*/ void SetInt(string key, int value, bool save);
        /*0x2738f8c*/ void SetSharedInt(string key, int value, bool save);
        /*0x2738fbc*/ long GetLong(string key, long defaultValue);
        /*0x2739124*/ long GetSharedLong(string key, long defaultValue);
        /*0x2739190*/ void SetLong(string key, long value, bool save);
        /*0x27391e8*/ void SetSharedLong(string key, long value, bool save);
        /*0x2739230*/ bool GetBool(string key, bool defaultValue);
        /*0x2739264*/ bool GetSharedBool(string key, bool defaultValue);
        /*0x2739294*/ void SetBool(string key, bool value, bool save);
        /*0x27392e8*/ void SetSharedBool(string key, bool value, bool save);
        /*0x273932c*/ float GetFloat(string key, float defaultValue);
        /*0x273935c*/ float GetSharedFloat(string key, float defaultValue);
        /*0x2739368*/ void SetFloat(string key, float value, bool save);
        /*0x27393b4*/ void SetSharedFloat(string key, float value, bool save);
        /*0x2739010*/ string GetString(string key, string defaultValue);
        /*0x2739180*/ string GetSharedString(string key, string defaultValue);
        /*0x27393e0*/ void SetString(string key, string value, bool save);
        /*0x273942c*/ void SetSharedString(string key, string value, bool save);
        /*0x1ffc854*/ T GetEnum<T>(string key, T defaultValue);
        /*0x1ffc854*/ T GetSharedEnum<T>(string key, T defaultValue);
        /*0x1ffc854*/ void SetEnum<T>(string key, T value, bool save);
        /*0x1ffc854*/ void SetSharedEnum<T>(string key, T value, bool save);
        /*0x273945c*/ bool HasKey(string key);
        /*0x273947c*/ bool HasSharedKey(string key);
        /*0x2739488*/ void DeleteKey(string key, bool save);
        /*0x27394c0*/ void DeleteSharedKey(string key, bool save);
        /*0x27394ec*/ void DeleteAll(bool save);
        /*0x2738f84*/ void Save();
        /*0x2739a14*/ void SetPlayerId(string playerId);
    }

    class LocalPrefsHelper
    {
        static string PREFIX_SEPARATOR = ":";
        /*0x10*/ string _playerId;

        /*0x2739ab8*/ LocalPrefsHelper();
        /*0x2739bbc*/ void SetPlayerId(string playerId);
        /*0x2738eb4*/ string AsPerPlayerUniqueKey(string key);
        /*0x2739038*/ long ToLong(string value);
        /*0x1ffc854*/ T ToEnum<T>(string val, T defaultValue);
        /*0x1ffc854*/ string FromEnum<T>(T val);
    }

    class MathUtils
    {
        static float TOLERANCE = 9.999999974752427e-7;
        static /*0x0*/ decimal DECIMAL_TOLERANCE;

        static /*0x273a590*/ MathUtils();
        static /*0x2739bc4*/ bool Approximately(float a, float b);
        static /*0x2739bdc*/ bool Approximately(decimal a, decimal b);
        static /*0x2739d38*/ long UnscaledValue(decimal decimalValue, int scale);
        static /*0x2739e6c*/ decimal ScaledValue(int unscaledValue, int scale);
        static /*0x2739f24*/ decimal ScaledValue(long unscaledValue, int scale);
        static /*0x2739df4*/ int GetDecimalScaleModifier(int scale);
        static /*0x2739fdc*/ int IntPow(int b, byte exponent);
        static /*0x273a00c*/ uint IntPow(uint b, byte exponent);
        static /*0x273a03c*/ byte CountSetBits(int num);
        static /*0x273a068*/ byte CountSetBits(uint num);
        static /*0x273a088*/ decimal Clamp(decimal val, decimal min, decimal max);
        static /*0x273a2d4*/ decimal Min(decimal a, decimal b);
        static /*0x273a244*/ decimal Max(decimal a, decimal b);
        static /*0x273a364*/ long Min(long a, long b);
        static /*0x273a370*/ long Max(long a, long b);
        static /*0x273a37c*/ long Clamp(long value, long min, long max);
        static /*0x273a3ec*/ uint SaturatedCastUint(long value);
        static /*0x273a44c*/ ulong SafeConvertUlong(string value, ulong fallbackValue);
        static /*0x273a530*/ int GetIndexOfMostSignificantBit(UnityEngine.LayerMask layerMask);
    }

    struct MemoryInfo
    {
        /*0x10*/ int resident_size;
        /*0x14*/ int virtual_size;

        /*0x273a628*/ string ToString();
    }

    class MemoryUtils
    {
        static /*0x0*/ string GC_DIVISOR_LOCAL_PREF_KEY;
        static /*0x8*/ int GC_DIVISOR_USE_SYSTEM_DEFAULT;
        static /*0x10*/ UnityEngine.AndroidJavaObject _memoryUtils;
        static /*0x18*/ float MEMORY_INFO_CACHE_SECONDS;
        static /*0x1c*/ float _nextMemoryInfoUpdateTime;
        static /*0x20*/ CapitalGames.MemoryInfo _memoryInfo;

        static /*0x273a728*/ MemoryUtils();
        static /*0x271e960*/ CapitalGames.MemoryInfo GetMemoryInfo();
        static /*0x273a804*/ int GetMonoExtraAllocationDivisor();
        static /*0x273a878*/ void SetMonoExtraAllocationDivisor(int divisor);
        static /*0x273a8ec*/ void ForceGC(string context, bool silent);
    }

    class Metrics
    {
        static /*0x0*/ MetricsInternal.MetricsRegistry _metricsRegistry;
        static /*0x8*/ MetricsInternal.TimerMetrics _timerMetrics;
        static /*0x10*/ MetricsInternal.ConfigMetrics _configMetrics;
        static /*0x18*/ MetricsInternal.FPSMetrics _fpsMetrics;
        static /*0x20*/ MetricsInternal.HitchRateMetrics _hitchMetrics;
        static /*0x28*/ MetricsInternal.MemoryMetrics _memoryMetrics;
        static /*0x30*/ MetricsInternal.CounterMetrics _counterMetrics;
        static /*0x38*/ MetricsInternal.ValueMetrics _valueMetrics;
        static /*0x40*/ string REPORT_PATH;

        static /*0x273a93c*/ Metrics();
        static /*0x273a9dc*/ void Initialize();
        static /*0x273ad70*/ void RegisterAssetMetricHooks();
        static /*0x271beec*/ void WriteReports();
        static /*0x273ae4c*/ void Start(string id, string[] tags);
        static /*0x273aed0*/ void End(string id, string[] additional_tags);
        static /*0x273af54*/ void StartVerbose(string id, string[] tags);
        static /*0x273afb8*/ void EndVerbose(string id, string[] additional_tags);
        static /*0x273b01c*/ void AddMeta(string id, string[] meta);
        static /*0x273b0a0*/ void AddConfigString(string id, string value, string[] meta);
        static /*0x273b12c*/ void StartFPS(string id, string[] tags);
        static /*0x273b1b0*/ void EndFPS(string id, string[] additional_tags);
        static /*0x273b234*/ void AddFPSMeta(string id, string[] meta);
        static /*0x273b2b8*/ void StartHitch(string id, string[] tags);
        static /*0x273b33c*/ void EndHitch(string id, string[] additional_tags);
        static /*0x273b3c0*/ void AddHitchMeta(string id, string[] tags);
        static /*0x273b444*/ void StartMem(string id, string[] tags);
        static /*0x273b4c8*/ void EndMem(string id, string[] additional_tags);
        static /*0x273b54c*/ void AddMemMeta(string id, string[] meta);
        static /*0x273b5d0*/ void Count(string id, uint value, string[] tags);
        static /*0x273b65c*/ void AddCountMeta(string id, string[] meta);
        static /*0x273b6e0*/ void Value(string id, int value, string[] meta);
        static /*0x273b76c*/ void Clear();
        static /*0x273b7b8*/ void Reset();
        static /*0x273b818*/ void IncrementalReset();
        static /*0x273b878*/ MetricsInternal.TimerEventResult[] GetIncrementalTimerResults();
        static /*0x273b904*/ MetricsInternal.FPSEventResult[] GetIncrementalFPSResults();
        static /*0x273b990*/ MetricsInternal.HitchRateEventResult[] GetIncrementalHitchResults();
        static /*0x273ba1c*/ MetricsInternal.MemoryEventResult[] GetIncrementalMemoryResults();
        static /*0x273baa8*/ MetricsInternal.CounterEventResult[] GetIncrementalCounterResults();
        static /*0x273bb34*/ MetricsInternal.ValueEventResult[] GetIncrementalValueResults();
        static /*0x273bbc0*/ MetricsInternal.TimerEventResult[] GetTimerResults();
        static /*0x273bc4c*/ MetricsInternal.FPSEventResult[] GetFPSResults();
        static /*0x273bcd8*/ MetricsInternal.HitchRateEventResult[] GetHitchResults();
        static /*0x273bd64*/ MetricsInternal.MemoryEventResult[] GetMemoryResults();
        static /*0x273bdf0*/ MetricsInternal.CounterEventResult[] GetCounterResults();
        static /*0x273be7c*/ MetricsInternal.ValueEventResult[] GetValueResults();

        class ReportEmailer : MetricsInternal.ILoggableMetrics
        {
            /*0x287bb2c*/ ReportEmailer();
            /*0x287bac0*/ void Send(string targetPath, string[] fileNames);
            /*0x287bac4*/ string Clean(string inputText);
        }
    }

    class StringUtils
    {
        static string COMMA_SEPARATOR = ",";
        static /*0x0*/ char[] COMMA_LIST_SPLIT_CHARS;

        static /*0x287c230*/ StringUtils();
        static /*0x287bb34*/ string Repeat(string value, int count);
        static /*0x287bcf0*/ string Replace(string s, char[] chars, string newVal);
        static /*0x287bd20*/ bool Contains(string source, string target, System.StringComparison comparison);
        static /*0x287bd44*/ string Truncate(string value, int maxLength);
        static /*0x287bda0*/ string[] CommaDelimitedToArray(string inValue);
        static /*0x287be48*/ string ArrayToCommaDelimited(string[] inValue);
        static /*0x287bec0*/ bool LoadFileToString(string filePath, ref string data);
        static /*0x287c000*/ bool CreateFileFromString(string filePath, string data);
        static /*0x287c0d8*/ bool IsNumeric(string str);
        static /*0x287c0f4*/ string CreateInternStringFromEncoding(System.Text.Encoding encoding, byte[] bytes, int index, int byteLength);
    }

    enum TimeType
    {
        Moment = 0,
        Second = 1,
        Minute = 2,
        Hour = 3,
        Day = 4,
    }

    class TimeUtil
    {
        static long HOURS_IN_DAY = 24;
        static long DATETIME_TICKS_IN_SECOND = 10000000;
        static long SECONDS_IN_MINUTE = 60;
        static long SECONDS_IN_HOUR = 3600;
        static long SECONDS_IN_DAY = 86400;
        static long MILLISECONDS_IN_SECOND = 1000;
        static long MOMENTS_LIMIT = 5;
        static /*0x0*/ System.DateTime EPOCH_DATE_TIME;
        static /*0x8*/ System.Diagnostics.Stopwatch _stopwatch;

        static /*0x287c90c*/ TimeUtil();
        static /*0x287c2d0*/ System.Diagnostics.Stopwatch get_Stopwatch();
        static /*0x287c328*/ void Reset();
        static /*0x287c3b8*/ CapitalGames.TimeType RelativeTimeType(long seconds, bool substituteMomentsAgo);
        static /*0x287c404*/ long RelativeTimeFloorValue(long seconds);
        static /*0x287c46c*/ long RelativeTimeFloorValueRemainder(long seconds);
        static /*0x287c4f4*/ System.TimeSpan GetCurrentTimeSpan();
        static /*0x287c588*/ System.DateTime UnixToDateTime(long timestamp);
        static /*0x287c628*/ long DateTimeToUnix(System.DateTime dateTime);
        static /*0x287c718*/ ulong GetLocalUnixTimestamp();
        static /*0x287c79c*/ void InitializeRandomSeed();
        static /*0x287c80c*/ int GetLocalTimeZoneOffsetMinutes();
        /*0x287c904*/ TimeUtil();
    }

    class WebClientLoader
    {
        static string HTTP_SCHEME_PREFIX = "http";
        static string LOCAL_SCHEME_PREFIX = "file://";
        static string BACKSLASH_SEPARATOR = "\";

        static /*0x287c9cc*/ string LoadFromURL(string fileURI);
        static /*0x287cc18*/ byte[] LoadBytesFromURL(string fileURI);
        static /*0x287ce64*/ string LoadFromPath(string filePath);
        static /*0x287ceb4*/ string LoadFromAppPath(string filePathFromAppRoot);
        static /*0x287cf50*/ byte[] LoadBytesFromPath(string filePath);
        static /*0x287cfa0*/ byte[] LoadBytesFromAppPath(string filePathFromAppRoot);
        /*0x287d03c*/ WebClientLoader();
    }

    class DummyDownloadController
    {
        /*0x287d048*/ DummyDownloadController();
        /*0x287d044*/ void StartBackgroundDownload();
    }

    struct RecompressAssetBundleCoroutineHelper
    {
        /*0x10*/ string _fromFilePath;
        /*0x18*/ string _toFilePath;
        /*0x20*/ CapitalGames.RecompressAssetBundleCoroutineHelper.OnSuccess _onSuccessDel;
        /*0x28*/ CapitalGames.RecompressAssetBundleCoroutineHelper.OnFailure _onFailureDel;
        /*0x30*/ UnityEngine.AssetBundleRecompressOperation _recompressOperation;

        /*0x287d050*/ RecompressAssetBundleCoroutineHelper(string fromFilePath, string toFilePath, CapitalGames.RecompressAssetBundleCoroutineHelper.OnSuccess onSuccessDel, CapitalGames.RecompressAssetBundleCoroutineHelper.OnFailure onFailureDel);
        /*0x287d0c0*/ bool get_IsDone();
        /*0x287d0d4*/ bool get_IsSuccess();
        /*0x287d0e8*/ System.Collections.IEnumerator ExecuteUntilDone();
        /*0x287d188*/ void ExecuteInternal();

        class OnSuccess : System.MulticastDelegate
        {
            /*0x287d218*/ OnSuccess(object object, nint method);
            /*0x287d2cc*/ System.Collections.IEnumerator Invoke(string fromFilePath, string toFilePath);
            /*0x287d2e0*/ System.IAsyncResult BeginInvoke(string fromFilePath, string toFilePath, System.AsyncCallback callback, object object);
            /*0x287d308*/ System.Collections.IEnumerator EndInvoke(System.IAsyncResult result);
        }

        class OnFailure : System.MulticastDelegate
        {
            /*0x287d314*/ OnFailure(object object, nint method);
            /*0x287d3c8*/ System.Collections.IEnumerator Invoke(string fromFilePath, string toFilePath);
            /*0x287d3dc*/ System.IAsyncResult BeginInvoke(string fromFilePath, string toFilePath, System.AsyncCallback callback, object object);
            /*0x287d404*/ System.Collections.IEnumerator EndInvoke(System.IAsyncResult result);
        }

        class <ExecuteUntilDone>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ CapitalGames.RecompressAssetBundleCoroutineHelper <>4__this;

            /*0x287d160*/ <ExecuteUntilDone>d__12(int <>1__state);
            /*0x287d410*/ void System.IDisposable.Dispose();
            /*0x287d414*/ bool MoveNext();
            /*0x287d6b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x287d6b8*/ void System.Collections.IEnumerator.Reset();
            /*0x287d6f0*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class ApplicationTelemetry
    {
        /*0x287d6f8*/ ApplicationTelemetry();

        class BlockingDownloadStarted : CapitalGames.IDispatchable
        {
            /*0x10*/ string UniqueId;
            /*0x18*/ System.DateTime TimeStamp;
            /*0x20*/ int NumAssetsTotal;
            /*0x24*/ int NumAssetsAlreadyCached;
            /*0x28*/ int BytesToDownload;
            /*0x30*/ string DownloadDescriptor;

            /*0x287d700*/ BlockingDownloadStarted();
        }

        class BlockingDownloadComplete : CapitalGames.IDispatchable
        {
            /*0x10*/ string UniqueId;
            /*0x18*/ System.DateTime TimeStamp;

            /*0x287d7a0*/ BlockingDownloadComplete(string uniqueId, System.DateTime timeStamp);
        }

        class BackgroundDownloadStarted : CapitalGames.IDispatchable
        {
            /*0x10*/ System.DateTime TimeStamp;
            /*0x18*/ int NumAssetsTotal;
            /*0x1c*/ int NumAssetsAlreadyCached;
            /*0x20*/ int BytesToDownload;

            /*0x287d7dc*/ BackgroundDownloadStarted();
        }

        class BackgroundDownloadComplete : CapitalGames.IDispatchable
        {
            /*0x10*/ System.DateTime TimeStamp;

            /*0x287d844*/ BackgroundDownloadComplete(System.DateTime timeStamp);
        }
    }

    class GameConstants
    {
        static /*0x0*/ System.Collections.Generic.List<string> Empty;
        /*0x10*/ PvzN3xt.Nvs.INamedValueService _namedValueService;

        static /*0x287d8cc*/ GameConstants();
        /*0x287d8c4*/ GameConstants();
        /*0x287d86c*/ System.Collections.Generic.IList<string> GetClientAssetAlwaysOpenBundleNames();
    }
}

namespace Audio
{
    class AudioDebugMenu : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static string StreamingTestBankName = "wwise.bnk_music_streaming_test";
        static int StreamingTestEvent = 183046414;
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x18*/ Yeti.IAssetManager _assetManager;

        static /*0x287dcbc*/ AudioDebugMenu();
        /*0x287dcb4*/ AudioDebugMenu();
        /*0x287d964*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x287da10*/ void FetchStreamingAudio();
        /*0x287db78*/ void FinalCallback(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection arg1, object arg2);
        /*0x287dcb0*/ void OnAppReset();
    }

    class YetiDebugMenuPaths
    {
        class Audio
        {
            static /*0x0*/ string AudioBasePath;
            static /*0x8*/ string DownloadAndPlayStreamingAudio;

            static /*0x287dd3c*/ Audio();
        }
    }

    interface ISoundEngine
    {
        /*0x1f30ff0*/ void Initialize(UnityEngine.GameObject soundEngineObject, string basePath);
        /*0x1f2fe14*/ bool IsInitialized();
        /*0x1f309e4*/ void RenderUpdate();
        /*0x1f309e4*/ void Terminate();
        /*0x1f30ebc*/ void RegisterGameObject(UnityEngine.GameObject obj);
        /*0x1f30ebc*/ void UnregisterGameObject(UnityEngine.GameObject obj);
        /*0x1f309e4*/ void UnregisterAllGameObjects();
        void PostEvent(uint eventID, UnityEngine.GameObject targetObject);
        void SetRTPCValue(uint key, float rtpcValue, UnityEngine.GameObject targetObject);
        void SetSwitch(uint group, uint key, UnityEngine.GameObject targetObject);
        /*0x1f309e4*/ void EngineSuspend();
        /*0x1f309e4*/ void EngineResume();
        /*0x1f30ff0*/ void LoadSoundBank(string bankName, ref uint bankID);
        void LoadAndDecodeSoundBank(string bankName, bool keepBankInMemory, ref uint bankID);
        void LoadSoundBankFromMemory(nint inMemoryBankPtr, uint inMemoryBankSize, ref uint bankID);
        /*0x1f316b8*/ void UnloadSoundBank(uint bankID);
        void UnloadSoundBankFromMemory(uint bankID, nint inMemoryBankPtr);
        void SetState(uint stateGroupId, uint stateId);
        /*0x1f309e4*/ void ClearBanks();
        /*0x1f309e4*/ void OnDisable();
    }

    class PanHandler
    {
        static float MAX_PAN_ABSOLUTE_VALUE = 125;

        static /*0x287de04*/ float ScalePan(float val, float min, float max);
        static /*0x287de4c*/ float SetPanWithMinMaxValues(UnityEngine.GameObject obj, float min, float max);
        static /*0x287df28*/ float SetPanWithCameraView(UnityEngine.GameObject obj, UnityEngine.Camera camera);
    }

    class StreamingAudioToAssetMap : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<string> keys;
        /*0x20*/ System.Collections.Generic.List<PopCap.SerializableListOfStrings> values;

        /*0x287e034*/ StreamingAudioToAssetMap();
    }

    class WwiseRuntimeData : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<Audio.WwiseRuntimeData.WwiseRuntimeDataStruct> _itemMap;
        /*0x20*/ System.Collections.Generic.List<Audio.WwiseRuntimeData.WwiseRuntimeCombatImpactDataStruct> _combatImpactMap;
        /*0x28*/ System.Collections.Generic.List<Audio.WwiseRuntimeData.WwiseRuntimeGroupDataStruct> _groupMap;

        /*0x287e128*/ WwiseRuntimeData();
        /*0x287e110*/ System.Collections.Generic.List<Audio.WwiseRuntimeData.WwiseRuntimeDataStruct> get_ItemMap();
        /*0x287e118*/ System.Collections.Generic.List<Audio.WwiseRuntimeData.WwiseRuntimeCombatImpactDataStruct> get_CombatImpactMap();
        /*0x287e120*/ System.Collections.Generic.List<Audio.WwiseRuntimeData.WwiseRuntimeGroupDataStruct> get_GroupMap();

        struct WwiseRuntimeDataStruct
        {
            /*0x10*/ int UnityId;
            /*0x14*/ uint WwiseId;
            /*0x18*/ uint GroupWwiseId;
            /*0x1c*/ int GroupUnityId;
            /*0x20*/ string Alias;
        }

        struct WwiseRuntimeGroupDataStruct
        {
            /*0x10*/ int UnityId;
            /*0x14*/ uint WwiseId;
        }

        struct WwiseRuntimeCombatImpactDataStruct
        {
            /*0x10*/ int UnityId;
            /*0x14*/ uint WwiseId;
            /*0x18*/ Yeti.Data.ImpactType ImpactType;
        }
    }

    class WwiseSoundEngine : Audio.ISoundEngine, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        static string decodeBanksPath = "DecodedBanks";
        static /*0x0*/ bool _editorIsSoundEngineLoaded;
        /*0x10*/ bool _debugLoggingEnabled;

        static /*0x287e998*/ uint ConvertStringToWwiseId(string in_pData);
        static /*0x287e834*/ void VerifyEngineResult(AKRESULT result);
        /*0x287f11c*/ WwiseSoundEngine();
        /*0x287e258*/ void Initialize(UnityEngine.GameObject soundEngineObject, string basePath);
        /*0x287e3a0*/ bool InitializeSoundEngine(string basePath);
        /*0x287e5c8*/ void SetBasePath(string basePath);
        /*0x287e690*/ void OnDisable();
        /*0x287e694*/ void Terminate();
        /*0x287e6b8*/ bool IsInitialized();
        /*0x287e708*/ void RenderUpdate();
        /*0x287e7d8*/ void RegisterGameObject(UnityEngine.GameObject obj);
        /*0x287e8e8*/ void UnregisterGameObject(UnityEngine.GameObject obj);
        /*0x287e944*/ void UnregisterAllGameObjects();
        /*0x287ea10*/ void PostEvent(uint eventId, UnityEngine.GameObject targetObject);
        /*0x287ea78*/ void PostEvent(string eventName, UnityEngine.GameObject targetObject);
        /*0x287ea98*/ void SetRTPCValue(uint key, float rtpcValue, UnityEngine.GameObject targetObject);
        /*0x287eb14*/ void SetRTPCValue(string key, float rtpcValue, UnityEngine.GameObject targetObject);
        /*0x287eb90*/ void SetSwitch(uint group, uint key, UnityEngine.GameObject targetObject);
        /*0x287ec04*/ void SetSwitch(string group, string key, UnityEngine.GameObject targetObject);
        /*0x287ec78*/ void SetAuxSend(uint auxID, int value, UnityEngine.GameObject targetObject);
        /*0x287ed30*/ void EngineSuspend();
        /*0x287ed84*/ void EngineResume();
        /*0x287edd8*/ void LoadSoundBank(string bankName, ref uint bankID);
        /*0x287ee44*/ void LoadAndDecodeSoundBank(string bankName, bool keepBankInMemory, ref uint bankID);
        /*0x287eeb8*/ void LoadSoundBankFromMemory(nint inMemoryBankPtr, uint inMemoryBankSize, ref uint bankID);
        /*0x287ef2c*/ void UnloadSoundBank(uint bankID);
        /*0x287ef9c*/ void UnloadSoundBankFromMemory(uint bankID, nint inMemoryBankPtr);
        /*0x287f008*/ void SetState(uint stateGroupId, uint stateId);
        /*0x287f074*/ void ClearBanks();
        /*0x287f0c8*/ void LogDebug(string msg);
        /*0x287f0cc*/ AkWwiseInitializationSettings GetInitSettingsInstance();
    }

    class WwiseStateData : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<Audio.YetiAudioStateGroupDefinition> GroupDefinitions;

        /*0x287f82c*/ WwiseStateData();
        /*0x287f124*/ string GetStateAlias(int groupUnityId, int index);
        /*0x287f360*/ Audio.YetiAudioStateGroupDefinition GetStateGroupDefinition(int id);
        /*0x287f428*/ uint GetStateGroupId(string groupName);
        /*0x287f514*/ uint GetStateId(string groupName, string alias);
        /*0x287f6a0*/ uint GetStateId(uint groupId, string alias);
    }

    class YetiAudioStateDefinition
    {
        /*0x10*/ string Alias;
        /*0x18*/ AK.Wwise.State State;
        /*0x20*/ int _unityId;

        /*0x287f83c*/ YetiAudioStateDefinition(int id);
        /*0x287f834*/ int get_UnityId();
    }

    class YetiAudioStateGroupDefinition
    {
        /*0x10*/ string Name;
        /*0x18*/ Yeti.UnsignedInt _wwiseId;
        /*0x20*/ int _unityId;
        /*0x28*/ System.Collections.Generic.List<Audio.YetiAudioStateDefinition> _states;

        /*0x287f974*/ YetiAudioStateGroupDefinition(int id);
        /*0x287f864*/ System.Collections.Generic.List<Audio.YetiAudioStateDefinition> get_States();
        /*0x287f508*/ uint get_WwiseId();
        /*0x287f86c*/ int get_UnityId();
        /*0x287f874*/ string[] GetStateNames();
    }
}

namespace Yeti
{
    class GameEvents
    {
        class PerformanceMetrics
        {
            static /*0x0*/ Yeti.GameEvent OnPerformanceMetricsInitialized;

            static /*0x287f9a4*/ PerformanceMetrics();
            /*0x287f99c*/ PerformanceMetrics();
        }

        class Assets
        {
            static /*0x0*/ Yeti.GameEvent<System.Collections.Generic.List<string>> OnAssetTrackingComplete;

            static /*0x287fa40*/ Assets();
        }

        class PlayerAvatar
        {
            static /*0x0*/ Yeti.GameEvent AvatarPerformanceSceneOnEnter;
            static /*0x8*/ Yeti.GameEvent AvatarPerformanceSceneOnExit;
            static /*0x10*/ Yeti.GameEvent<int> StartAvatarPerformanceTest;
            static /*0x18*/ Yeti.GameEvent<System.TimeSpan> OnLoadingCompleted;
            static /*0x20*/ Yeti.GameEvent StopAvatarPerformanceTest;
            static /*0x28*/ Yeti.GameEvent<bool> OnAvatarToggleChanged;
            static /*0x30*/ Yeti.GameEvent RandomizeCustomization;
            static /*0x38*/ Yeti.GameEvent CustomizeAvatar;

            static /*0x287faf0*/ PlayerAvatar();
        }

        class Boot
        {
            static /*0x0*/ Yeti.GameEvent<PvzN3xt.Boot.BootInitializationStage> OnBootStageChangedTo;
            static /*0x8*/ Yeti.GameEvent<System.ValueTuple<PvzN3xt.Boot.BootInitializationStage, float>> OnBootStepProgress;

            static /*0x287fddc*/ Boot();
        }

        class PointOfLoss
        {
            static /*0x0*/ Yeti.GameEvent Continue;
            static /*0x8*/ Yeti.GameEvent Quit;

            static /*0x287ff04*/ PointOfLoss();
        }

        class CommunityMap
        {
            static /*0x0*/ Yeti.GameEvent OnCommunityMapStateEnter;

            static /*0x287ffe0*/ CommunityMap();
        }

        class Application
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.GameEvents.Application.AvatarMovementEventData> OnAvatarMovement;
            static /*0x8*/ Yeti.GameEvent<Yeti.GameEvents.Application.AvatarEquipUnequipData> OnAvatarEquipUnequip;
            static /*0x10*/ Yeti.GameEvent<PvzN3xt.Community.PlayerAvatar.PlayerAvatarCustomizationCategory> OnCustomizationCategoryChanged;
            static /*0x18*/ Yeti.GameEvent<Yeti.GameEvents.Application.ZenGardenInteractionData> OnZenGardenInteraction;
            static /*0x20*/ Yeti.GameEvent GameDataVersionUpdated;
            static /*0x28*/ Yeti.GameEvent<Yeti.GameEvents.Application.OddJobSentimentData> OddJobSentiment;
            static /*0x30*/ Yeti.GameEvent NarrativeTaskCutsceneExit;
            static /*0x38*/ Yeti.GameEvent<int> NarrativeTaskIdComplete;
            static /*0x40*/ Yeti.GameEvent<bool> TutorialsEnabled;
            static /*0x48*/ Yeti.GameEvent<string> TutorialActionTriggered;
            static /*0x50*/ Yeti.GameEvent<PvzN3xt.Tutorial.ITutorialScript> TutorialStepUpdated;
            static /*0x58*/ Yeti.GameEvent<PvzN3xt.Tutorial.ITutorialScript> TutorialComplete;
            static /*0x60*/ Yeti.GameEvent<Yeti.GameEvents.Application.RequestState> RateMyAppRequested;
            static /*0x68*/ Yeti.GameEvent SessionStart;
            static /*0x70*/ Yeti.GameEvent<Yeti.ICheckpointInfo> CheckpointStarted;
            static /*0x78*/ Yeti.GameEvent<Yeti.ICheckpointInfo> CheckpointCompleted;
            static /*0x80*/ Yeti.GameEvent<string> FireDoober;
            static /*0x88*/ Yeti.GameEvent<string> EnableDoober;
            static /*0x90*/ Yeti.GameEvent<Yeti.InstantDooberEventData> FireDooberInstant;
            static /*0x98*/ Yeti.GameEvent<Yeti.DenyMessageLocIdArgs> OnDenyMessage;
            static /*0xa0*/ Yeti.GameEvent<Yeti.DenyActionArgs> OnDenyAction;
            static /*0xa8*/ Yeti.GameEvent<Yeti.PopUpDisplayedArgs> OnPopUpDisplayed;
            static /*0xb0*/ Yeti.GameEvent<string> OnTutorialTargetInteract;

            static /*0x288007c*/ Application();

            class AvatarMovementEventData
            {
                /*0x10*/ UnityEngine.Vector3 StartPosition;
                /*0x1c*/ UnityEngine.Vector3 EndPosition;
                /*0x28*/ string EndLocation;

                /*0x2880908*/ AvatarMovementEventData(UnityEngine.Vector3 startPosition, UnityEngine.Vector3 endPosition, string endLocation);
            }

            class AvatarEquipUnequipData
            {
                /*0x10*/ string ChangeType;
                /*0x18*/ int CosmeticPreset;
                /*0x20*/ System.Collections.Generic.List<int> CosmeticsEquipped;
                /*0x28*/ System.Collections.Generic.List<int> CosmeticsUnequipped;
                /*0x30*/ int EmoteEquipped;
                /*0x34*/ int EmoteUnequipped;

                /*0x2880974*/ AvatarEquipUnequipData(string changeType, int cosmeticPreset, System.Collections.Generic.List<int> cosmeticsEquipped, System.Collections.Generic.List<int> cosmeticsUnequipped, int emoteEquipped, int emoteUnequipped);
            }

            class ZenGardenInteractionData
            {
                /*0x10*/ string ZenGardenAction;
                /*0x18*/ string PlantInstanceId;
                /*0x20*/ string PlantId;
                /*0x28*/ int QuantityUsed;
                /*0x2c*/ int PlantTier;
                /*0x30*/ int PlantPhase;
                /*0x38*/ string PlantState;
                /*0x40*/ int PotNumber;
                /*0x48*/ System.Collections.Generic.List<Yeti.GameEvents.Application.ZenGardenInteractionData.PlantBonus> PlantBonusApplied;
                /*0x50*/ int TotalPlantPoints;

                /*0x28809f4*/ ZenGardenInteractionData(string zenGardenAction, string plantInstanceId, string plantId, int quantityUsed, int plantTier, int plantPhase, string plantState, int potNumber, System.Collections.Generic.List<Yeti.GameEvents.Application.ZenGardenInteractionData.PlantBonus> plantBonusApplied, int totalPlantPoints);

                class PlantBonus
                {
                    /*0x10*/ string BonusName;
                    /*0x18*/ int BonusValue;

                    /*0x2880abc*/ PlantBonus(string bonusName, int bonusValue);
                }
            }

            class OddJobSentimentData
            {
                /*0x10*/ string OddJobName;
                /*0x18*/ string Sentiment;

                /*0x2880af8*/ OddJobSentimentData(string oddJobName, string sentiment);
            }

            class RequestState
            {
                /*0x10*/ string <TriggerPoint>k__BackingField;
                /*0x18*/ bool <RequestSuccessful>k__BackingField;

                /*0x2880b4c*/ RequestState(string triggerPoint, bool requestSuccessful);
                /*0x2880b3c*/ string get_TriggerPoint();
                /*0x2880b44*/ bool get_RequestSuccessful();
            }
        }

        class PlayerPlot
        {
            static /*0x0*/ Yeti.GameEvent<PvzN3xt.Community.PlayerPlot.PlayerPlotSlotSelectedInfo> PlayerPlotSlotSelected;
            static /*0x8*/ Yeti.GameEvent<PvzN3xt.Community.PlayerPlot.PlayerPlotPlacementInfo> PlayerPlotItemConfirmed;
            static /*0x10*/ Yeti.GameEvent PlayerPlotEntered;
            static /*0x18*/ Yeti.GameEvent PlayerPlotExit;

            static /*0x2880b88*/ PlayerPlot();
        }

        class Navigation
        {
            static /*0x0*/ Yeti.GameEvent<bool> OnZenGardenStateEnterExit;
            static /*0x8*/ Yeti.GameEvent<bool> OnZenGardenHarvestRewardsEnterExit;
            static /*0x10*/ Yeti.GameEvent<bool> OnZenGardenStateBlurEnterExit;
            static /*0x18*/ Yeti.GameEvent OnZenGardenPreObjectPoolRelease;
            static /*0x20*/ Yeti.GameEvent OnZenGardenObjectPoolInitialize;
            static /*0x28*/ Yeti.GameEvent<int> OnWorldPotSelected;
            static /*0x30*/ Yeti.GameEvent RedirectionToTotemPossible;
            static /*0x38*/ Yeti.GameEvent<Yeti.UINavigationState> UINavigationStateStartLoading;
            static /*0x40*/ Yeti.GameEvent<Yeti.UINavigationState> UINavigationStateEnter;
            static /*0x48*/ Yeti.GameEvent<Yeti.UINavigationState> UINavigationStateStartUnloading;
            static /*0x50*/ Yeti.GameEvent<Yeti.UINavigationState> UINavigationStateExit;
            static /*0x58*/ Yeti.GameEvent SettingScreenEnter;
            static /*0x60*/ Yeti.GameEvent<string> NamedOnEntryTrigger;

            static /*0x2880d4c*/ Navigation();
        }

        class Game
        {
            static /*0x0*/ Yeti.GameEvent InitializeZenGarden;
            static /*0x8*/ Yeti.GameEvent UnloadZenGarden;
            static /*0x10*/ Yeti.GameEvent TownMapLoaded;
            static /*0x18*/ Yeti.GameEvent WelcomeCutsceneReady;

            static /*0x28811a0*/ Game();
        }

        class Mtx
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.GameEvents.Mtx.MtxTransactionData> OnN3xtMtxTransactionStage;

            static /*0x2881304*/ Mtx();

            class MtxTransactionData
            {
                static /*0x0*/ System.Collections.Generic.Dictionary<string, object> EmptyDictionary;
                /*0x10*/ string Sku;
                /*0x18*/ string Stage;
                /*0x20*/ string BundleId;
                /*0x28*/ string PurchaseLocation;
                /*0x30*/ string ErrorCode;
                /*0x38*/ bool IsRecoveredTransaction;
                /*0x40*/ Yeti.GameEvents.Mtx.MtxTransactionData.NativeTransactionData TransactionData;
                /*0x58*/ System.Collections.Generic.IReadOnlyDictionary<string, object> Metadata;

                static /*0x28819ac*/ MtxTransactionData();
                /*0x28813b4*/ MtxTransactionData(PvzN3xt.Eadp.IEadpTransaction transaction, PvzN3xt.Eadp.IEadpCatalogItem catalogItem, string stage, string bundleId, string purchaseLocation, string errorCode, bool isRecoveredTransaction);
                /*0x28817ec*/ MtxTransactionData(string sku, string stage, string bundleId, string purchaseLocation, string errorCode, bool isRecoveredTransaction, System.Collections.Generic.Dictionary<string, object> metadata);

                struct NativeTransactionData
                {
                    /*0x10*/ string LocalCurrencyCode;
                    /*0x18*/ float LocalPrice;
                    /*0x20*/ string FirstPartyTransactionId;

                    /*0x28817ac*/ NativeTransactionData(string localCurrencyCode, float localPrice, string firstPartyTransactionId);
                }
            }
        }

        class EAAccount
        {
            static /*0x0*/ Yeti.GameEvent<PvzN3xt.PlayerIdentity.EAAccountLoginState> EAAccountLoginStateChange;

            static /*0x2881a4c*/ EAAccount();
            /*0x2881a44*/ EAAccount();
        }

        class GameData
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.GameEvents.GameData.GameDataDownloadParams> DownloadStarted;
            static /*0x8*/ Yeti.GameEvent<Yeti.GameEvents.GameData.GameDataDownloadParams> DownloadUpdated;
            static /*0x10*/ Yeti.GameEvent DownloadEnded;

            static /*0x2881afc*/ GameData();

            struct GameDataDownloadParams
            {
                /*0x10*/ int RemainingBytes;

                /*0x2881c50*/ GameDataDownloadParams(int remainingBytes);
            }
        }

        class RoadTrip
        {
            static /*0x0*/ Yeti.GameEvent PlayRoadTripMusic;
            static /*0x8*/ Yeti.GameEvent StopRoadTripMusic;

            static /*0x2881c58*/ RoadTrip();
        }

        class LocalAccountSettings
        {
            static /*0x0*/ Yeti.GameEvent LocalAccountSettingsAvailable;

            static /*0x2881d3c*/ LocalAccountSettings();
            /*0x2881d34*/ LocalAccountSettings();
        }

        class Narrative
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.GameEvents.Narrative.ConversationSkippedData> OnConversationSkipped;

            static /*0x2881dd8*/ Narrative();

            class ConversationSkippedData
            {
                /*0x10*/ string Alias;
                /*0x18*/ int Step;

                /*0x2881e88*/ ConversationSkippedData(string alias, int step);
            }
        }

        class InterstitialPlacement
        {
            static /*0x0*/ Yeti.GameEvent TownMapFocused;
            static /*0x8*/ Yeti.GameEvent LevelPreviewEntry;
            static /*0x10*/ Yeti.GameEvent RoadTripLevelPreviewEntry;
            static /*0x18*/ Yeti.GameEvent FtueLevelPreviewEntry;

            static /*0x2881ec4*/ InterstitialPlacement();
        }

        class Identity
        {
            static /*0x0*/ Yeti.GameEvent NexusUnavailable;
            static /*0x8*/ Yeti.GameEvent NexusAvailable;
            static /*0x10*/ Yeti.GameEvent<Yeti.YetiError> IdentityUnavailable;
            static /*0x18*/ Yeti.GameEvent IdentityAvailable;
            static /*0x20*/ Yeti.GameEvent<bool> IdentityChanged;
            static /*0x28*/ Yeti.GameEvent IdentityConflictReported;
            static /*0x30*/ Yeti.GameEvent<bool> ConflictedProfilesInformationFetched;

            static /*0x2882030*/ Identity();
            /*0x2882028*/ Identity();
        }

        class Authenticators
        {
            static /*0x0*/ Yeti.GameEvent<PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType> AuthenticatorLoggedIn;
            static /*0x8*/ Yeti.GameEvent<PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType> AuthenticatorInProgress;
            static /*0x10*/ Yeti.GameEvent<PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType> LoginRequested;
            static /*0x18*/ Yeti.GameEvent<PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType> AuthenticatorLoggedOut;
            static /*0x20*/ Yeti.GameEvent<PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType> AuthenticatorLoginFailed;
            static /*0x28*/ Yeti.GameEvent<PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType> AuthenticatorLogoutFailed;

            static /*0x28822bc*/ Authenticators();
            /*0x28822b4*/ Authenticators();
        }

        class PlayerRefresh
        {
            static /*0x0*/ Yeti.GameEvent RefreshComplete;

            static /*0x28824c4*/ PlayerRefresh();
        }

        class Compliance
        {
            static /*0x0*/ Yeti.GameEvent AgeStatusChanged;
            static /*0x8*/ Yeti.GameEvent UsageSharingChanged;

            static /*0x2882568*/ Compliance();
            /*0x2882560*/ Compliance();
        }

        class TownMap
        {
            static /*0x0*/ Yeti.GameEvent<UnityEngine.Vector3> CameraMoved;
            static /*0x8*/ Yeti.GameEvent<float> CameraZoomed;

            static /*0x2882644*/ TownMap();
        }

        class ZenGarden
        {
            static /*0x0*/ Yeti.GameEvent<int> SpawnPlants;

            static /*0x288276c*/ ZenGarden();
        }

        class Combat
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.ScreenShakeConfig> ShakeStarted;
            static /*0x8*/ Yeti.GameEvent CombatLoaded;
            static /*0x10*/ Yeti.GameEvent EntryInterstitialComplete;
            static /*0x18*/ Yeti.GameEvent PauseCombat;
            static /*0x20*/ Yeti.GameEvent ResumeCombat;
            static /*0x28*/ Yeti.GameEvent StartTapped;
            static /*0x30*/ Yeti.GameEvent PauseTapped;
            static /*0x38*/ Yeti.GameEvent ResumeTapped;
            static /*0x40*/ Yeti.GameEvent AbandonTapped;
            static /*0x48*/ Yeti.GameEvent AbandonConfirmTapped;
            static /*0x50*/ Yeti.GameEvent TurboTapped;
            static /*0x58*/ Yeti.GameEvent MergePreviewTapped;
            static /*0x60*/ Yeti.GameEvent DismissStageDescriptionTapped;
            static /*0x68*/ Yeti.GameEvent ProceedToBoardCelebrationTapped;
            static /*0x70*/ Yeti.GameEvent RestartCombat;
            static /*0x78*/ Yeti.GameEvent SkipBoardCelebrationTapped;
            static /*0x80*/ Yeti.GameEvent InstantUsePlant1Purchase;
            static /*0x88*/ Yeti.GameEvent InstantUsePlant2Purchase;
            static /*0x90*/ Yeti.GameEvent InstantUsePlant3Purchase;
            static /*0x98*/ Yeti.GameEvent<UnityEngine.Vector3> PlantFoodTapped;
            static /*0xa0*/ Yeti.GameEvent<UnityEngine.Vector3> MovePlantTapped;
            static /*0xa8*/ Yeti.GameEvent<UnityEngine.Vector3> PromotionTapped;
            static /*0xb0*/ Yeti.GameEvent<UnityEngine.Vector3> InstantUsePlant1Tapped;
            static /*0xb8*/ Yeti.GameEvent<UnityEngine.Vector3> InstantUsePlant2Tapped;
            static /*0xc0*/ Yeti.GameEvent<UnityEngine.Vector3> InstantUsePlant3Tapped;
            static /*0xc8*/ Yeti.GameEvent<UnityEngine.Vector3> ReclaimTapped;
            static /*0xd0*/ Yeti.GameEvent<UnityEngine.Vector3> RemoveGrowthTimerTapped;
            static /*0xd8*/ Yeti.GameEvent<UnityEngine.Vector3> BoardTapped;
            static /*0xe0*/ Yeti.GameEvent<UnityEngine.Vector3> BoardDragBegin;
            static /*0xe8*/ Yeti.GameEvent<UnityEngine.Vector3> BoardDragEnd;
            static /*0xf0*/ Yeti.GameEvent<UnityEngine.Vector3> UiDragged;
            static /*0xf8*/ Yeti.GameEvent<int> SelectedLoadoutItemChanged;
            static /*0x100*/ Yeti.GameEvent<int> PlantDetailsTapped;
            static /*0x108*/ Yeti.GameEvent<Yeti.GameEvents.Combat.SeedPacketClickedArgs> SeedPacketClicked;
            static /*0x110*/ Yeti.GameEvent<Yeti.GameEvents.Combat.SeedPacketClickedArgs> SeedPacketDragBegin;
            static /*0x118*/ Yeti.GameEvent<Yeti.GameEvents.Combat.SeedPacketClickedArgs> SeedPacketDragEnd;
            static /*0x120*/ Yeti.GameEvent<Yeti.GameEvents.Combat.SeedPacketClickedArgs> SeedPacketDown;
            static /*0x128*/ Yeti.GameEvent CascadeUnitClicked;

            static /*0x288281c*/ Combat();

            struct SeedPacketClickedArgs
            {
                /*0x10*/ int LoadoutIndex;
                /*0x14*/ UnityEngine.Vector3 Position;
            }
        }

        class ContentUpdate
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.GameEvents.ContentUpdate.FlowStartedParams> FlowStarted;
            static /*0x8*/ Yeti.GameEvent<Yeti.GameEvents.ContentUpdate.ContentUpdateParams> DownloadUpdated;
            static /*0x10*/ Yeti.GameEvent FlowEnded;

            static /*0x28832c8*/ ContentUpdate();

            struct FlowStartedParams
            {
                /*0x10*/ long TotalBytes;

                /*0x288344c*/ FlowStartedParams(long totalBytes);
            }

            struct ContentUpdateParams
            {
                /*0x10*/ long DownloadedBytes;
                /*0x18*/ long TotalBytes;

                /*0x2883454*/ ContentUpdateParams(long downloadedBytes, long totalBytes);
            }
        }

        class Cheats
        {
            static /*0x0*/ Yeti.GameEvent EnteredCombatState;
            static /*0x8*/ Yeti.GameEvent ExitedCombatState;

            static /*0x288345c*/ Cheats();
        }

        class Fonts
        {
            static /*0x0*/ Yeti.GameEvent DynamicFontsLoaded;
            static /*0x8*/ Yeti.GameEvent StaticFontLoaded;

            static /*0x2883540*/ Fonts();
            /*0x2883538*/ Fonts();
        }

        class Badge
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.IBadgeInfo> UpdateSource;
            static /*0x8*/ Yeti.GameEvent<Yeti.BadgeSource> ClearSource;
            static /*0x10*/ Yeti.GameEvent<Yeti.IBadgeInfo> MergeAtHighestPriority;

            static /*0x288361c*/ Badge();
        }

        class PlayerProgression
        {
            static /*0x0*/ Yeti.GameEvent PlayerLevelUpdated;

            static /*0x2883784*/ PlayerProgression();
        }

        class Store
        {
            static /*0x0*/ Yeti.GameEvent StoreEntry;
            static /*0x8*/ Yeti.GameEvent StoreExit;

            static /*0x2883820*/ Store();
        }

        class Meta
        {
            static /*0x0*/ Yeti.GameEvent<UnityEngine.Vector3> OnMapDragBegin;
            static /*0x8*/ Yeti.GameEvent<UnityEngine.Vector3> OnMapDragEnd;
            static /*0x10*/ Yeti.GameEvent<UnityEngine.Vector3> OnMapDrag;
            static /*0x18*/ Yeti.GameEvent<UnityEngine.Vector3> OnMapDragDelta;
            static /*0x20*/ Yeti.GameEvent<UnityEngine.Vector3> OnStreetviewDragBegin;
            static /*0x28*/ Yeti.GameEvent<UnityEngine.Vector3> OnStreetviewDragEnd;
            static /*0x30*/ Yeti.GameEvent<UnityEngine.Vector3> OnStreetviewDragDelta;

            static /*0x28838fc*/ Meta();
        }

        class Deeplink
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.NavigationActionType> ReactivateDeeplinkUiHooks;

            static /*0x2883b4c*/ Deeplink();
            /*0x2883b44*/ Deeplink();

            class UiPosition
            {
                static /*0x0*/ Yeti.GameEvent<Yeti.ZoogleMapsUiNavigationInfo> HookActivated;
                static /*0x8*/ Yeti.GameEvent<Yeti.ZoogleMapsUiNavigationInfo> HookReady;
                static /*0x10*/ Yeti.GameEvent<Yeti.ZoogleMapsUiNavigationInfo> HookInvoked;

                static /*0x2883c04*/ UiPosition();
                /*0x2883bfc*/ UiPosition();
            }

            class UiScroll
            {
                static /*0x0*/ Yeti.GameEvent<Yeti.DeeplinkUiScrollInfo> HookActivated;
                static /*0x8*/ Yeti.GameEvent<Yeti.DeeplinkUiScrollInfo> HookReady;
                static /*0x10*/ Yeti.GameEvent<Yeti.DeeplinkUiScrollInfo> HookInvoked;

                static /*0x2883d44*/ UiScroll();
                /*0x2883d3c*/ UiScroll();
            }
        }

        class Network
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.GameServerCallStatusEventParams> GameServerCallStatusChanged;

            static /*0x2883e7c*/ Network();
        }

        class StateTransition
        {
            static /*0x0*/ Yeti.GameEvent<Yeti.YetiGameStateId> StateTransitionBegin;
            static /*0x8*/ Yeti.GameEvent<Yeti.YetiGameStateId> StateTransitionEnd;

            static /*0x2883f2c*/ StateTransition();
        }
    }

    class AudioIdPickerAttribute : UnityEngine.PropertyAttribute
    {
        /*0x15*/ bool IsOptional;

        /*0x2884024*/ AudioIdPickerAttribute(bool isOptional);
    }

    class AudioRTPC
    {
        /*0x10*/ uint <ID>k__BackingField;

        /*0x288405c*/ AudioRTPC(uint id);
        /*0x288404c*/ uint get_ID();
        /*0x2884054*/ void set_ID(uint value);
    }

    class PlayNoSoundOnAnimatorEvent : UnityEngine.MonoBehaviour
    {
        /*0x2884088*/ PlayNoSoundOnAnimatorEvent();
        /*0x2884084*/ void PlaySound(int eventId);
    }

    class PlayNoVisualEventOnAnimatorEvent : UnityEngine.MonoBehaviour
    {
        /*0x2884094*/ PlayNoVisualEventOnAnimatorEvent();
        /*0x2884090*/ void TriggerVisualEvent(int eventId);
    }

    class PlaySoundOnAnimatorEvent : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.GameSoundManager _gameSoundManager;

        /*0x28840e0*/ PlaySoundOnAnimatorEvent();
        /*0x288409c*/ void Awake();
        /*0x28840a4*/ void PlaySound(int eventId);
    }

    interface IResourceProviderPathProvider
    {
        /*0x1f30214*/ string GetOrCreateBasePath();
    }

    class ResourceProviderPathProvider : Yeti.IResourceProviderPathProvider
    {
        static /*0x28840e8*/ Yeti.IResourceProviderPathProvider GetProvider();
        static /*0x2884144*/ Yeti.IResourceProviderPathProvider GetStreamingProvider();
        static /*0x2884218*/ string GetOrCreateBasePath(string basePath);
        /*0x288413c*/ ResourceProviderPathProvider();
        /*0x28841a0*/ string GetOrCreateBasePath();
    }

    class StreamingAudioResourceProviderPathProvider : Yeti.IResourceProviderPathProvider
    {
        /*0x2884198*/ StreamingAudioResourceProviderPathProvider();
        /*0x2884244*/ string GetOrCreateBasePath();
    }

    class SoundBankManager : EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        /*0x10*/ System.Collections.Generic.Dictionary<Yeti.SoundBankManager.FastTextAssetKeyForDictionary, Yeti.SoundBankManager.AssetBundleSoundBank> AssetBundleSoundBanks;
        /*0x18*/ Audio.ISoundEngine _soundEngine;

        /*0x28842bc*/ SoundBankManager(Audio.ISoundEngine soundEngine);
        /*0x2884358*/ void LoadSoundBank(UnityEngine.TextAsset soundBank);
        /*0x288435c*/ void LoadSoundBankFromAssetBundle(UnityEngine.TextAsset asset);
        /*0x2884604*/ void UnloadSoundBankFromAssetBundle(UnityEngine.TextAsset asset);
        /*0x28844c4*/ uint LoadBankFromMemory(nint inMemoryBankPtr, uint inMemoryBankSize);
        /*0x288474c*/ void UnloadSoundBankFromMemory(uint bankId, nint inMemoryBankPtr);

        struct FastTextAssetKeyForDictionary
        {
            /*0x10*/ nint address;
            /*0x18*/ uint size;
            /*0x1c*/ int hashCode;

            /*0x2884480*/ FastTextAssetKeyForDictionary(UnityEngine.TextAsset t);
            /*0x2884808*/ int GetHashCode();
            /*0x28849a8*/ bool Equals(object obj);
        }

        class AssetBundleSoundBank
        {
            /*0x10*/ uint BankId;
            /*0x18*/ UnityEngine.TextAsset TextAsset;
            /*0x20*/ UnityEngine.HideFlags _originalTextAssetHideFlags;

            /*0x2884590*/ AssetBundleSoundBank(uint bankId, UnityEngine.TextAsset textAsset);
            /*0x288472c*/ void Reset();
        }
    }

    class WwiseCombatImpactData : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<Yeti.CombatImpactAudioPair> Data;

        /*0x2884a3c*/ WwiseCombatImpactData();
    }

    class CombatImpactAudioPair
    {
        /*0x10*/ string Name;
        /*0x18*/ Yeti.Data.ImpactType ImpactType;
        /*0x20*/ Yeti.YetiAudioEventDefinition Event;

        /*0x2884a44*/ CombatImpactAudioPair();
    }

    class WwiseEventData : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<Yeti.YetiAudioEventGroupDefinition> GroupDefinitions;

        /*0x28860dc*/ WwiseEventData();
        /*0x2884a4c*/ string[] GetGroupNames();
        /*0x2884b4c*/ int[] GetGroupIds();
        /*0x2884c34*/ Yeti.YetiAudioEventGroupDefinition GetEventGroup(int audioEventId);
        /*0x2885010*/ int GetAudioEventGroupIndexOrDefault(int audioEventId);
        /*0x2885268*/ int GetEventId(int groupId, int index);
        /*0x2885490*/ System.Collections.Generic.Dictionary<int, Yeti.YetiAudioEventDefinition> GetAudioEvents();
        /*0x2885918*/ void SortGroupsAndEvents();
        /*0x2885ce0*/ void MoveEventToNewGroup(int newGroupId, int oldGroupId, int eventId);

        class <>c
        {
            static /*0x0*/ Yeti.WwiseEventData.<> <>9;
            static /*0x8*/ System.Func<Yeti.YetiAudioEventGroupDefinition, string> <>9__7_0;
            static /*0x10*/ System.Func<Yeti.YetiAudioEventDefinition, string> <>9__7_1;

            static /*0x28860e4*/ <>c();
            /*0x288614c*/ <>c();
            /*0x2886154*/ string <SortGroupsAndEvents>b__7_0(Yeti.YetiAudioEventGroupDefinition group);
            /*0x2886168*/ string <SortGroupsAndEvents>b__7_1(Yeti.YetiAudioEventDefinition audioEvent);
        }
    }

    class YetiAudioEventDefinition
    {
        /*0x10*/ string Name;
        /*0x18*/ int _groupUnityId;
        /*0x1c*/ int _unityId;
        /*0x20*/ AK.Wwise.Event WwiseEvent;

        /*0x2886194*/ YetiAudioEventDefinition(int unityId);
        /*0x288617c*/ int get_GroupUnityId();
        /*0x2886184*/ void set_GroupUnityId(int value);
        /*0x288618c*/ int get_UnityId();
    }

    class YetiAudioEventGroupDefinition
    {
        /*0x10*/ string Name;
        /*0x18*/ System.Collections.Generic.List<Yeti.YetiAudioEventDefinition> Events;
        /*0x20*/ int _unityId;

        /*0x28861c4*/ YetiAudioEventGroupDefinition(int unityId);
        /*0x28861bc*/ int get_UnityId();
        /*0x28861ec*/ string[] GetNames();
    }

    class WwiseSwitchData : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<Yeti.YetiAudioSwitchGroupDefinition> GroupDefinitions;

        /*0x2886a94*/ WwiseSwitchData();
        /*0x28862ec*/ void Add(Yeti.YetiAudioSwitchGroupDefinition item);
        /*0x28863dc*/ uint GetSwitchUnityId(int unityId, string alias);
        /*0x2886560*/ uint GetSwitchWwiseId(uint wwiseId, string alias);
        /*0x28866f8*/ string GetGroupNameFromGroupId(int unityId);
        /*0x28867e0*/ uint GetWwiseIdFromUnityId(int unityId);
        /*0x28868b8*/ int GetGroupUnityIdFromGroupName(string groupName);
        /*0x2886990*/ System.Collections.Generic.List<string> GetGroupNames();
    }

    class YetiAudioSwitchReference
    {
        /*0x10*/ bool _setSwitch;
        /*0x14*/ int _groupId;
        /*0x18*/ int _switchId;
        /*0x1c*/ int _unityId;

        /*0x2886ad4*/ YetiAudioSwitchReference();
        /*0x2886a9c*/ bool get_SetSwitch();
        /*0x2886aa4*/ uint get_GroupId();
        /*0x2886aac*/ uint get_SwitchId();
        /*0x2886ab4*/ int get_UnityId();
        /*0x2886abc*/ int get_UnityIdOrDefault();
    }

    class YetiAudioSwitchGroupReference
    {
        /*0x10*/ int _unityId;

        /*0x2886ae4*/ YetiAudioSwitchGroupReference();
        /*0x2886adc*/ int get_UnityId();
    }

    class YetiAudioSwitchDefinition
    {
        /*0x10*/ string Alias;
        /*0x18*/ AK.Wwise.Switch Switch;
        /*0x20*/ int _unityId;

        /*0x2886af4*/ YetiAudioSwitchDefinition(int unityId);
        /*0x2886aec*/ int get_UnityId();
    }

    class YetiAudioSwitchGroupDefinition
    {
        /*0x10*/ string Name;
        /*0x18*/ Yeti.UnsignedInt _wwiseId;
        /*0x20*/ int _unityId;
        /*0x28*/ System.Collections.Generic.List<Yeti.YetiAudioSwitchDefinition> _switches;

        /*0x28863b4*/ YetiAudioSwitchGroupDefinition(int unityId);
        /*0x2886b1c*/ System.Collections.Generic.List<Yeti.YetiAudioSwitchDefinition> get_Switches();
        /*0x2886b24*/ int get_UnityId();
        /*0x28866ec*/ uint get_WwiseId();
    }

    class YetiSoundBankReference
    {
        /*0x10*/ bool _loadSoundBank;
        /*0x18*/ string _soundBankId;

        /*0x2886b3c*/ YetiSoundBankReference();
        /*0x2886b2c*/ bool get_LoadSoundBank();
        /*0x2886b34*/ string get_SoundBankId();
    }

    class YetiSoundBankReferenceForList
    {
        /*0x10*/ string _soundBankId;

        static /*0x2886b4c*/ System.Collections.Generic.IList<string> ToStringList(System.Collections.Generic.List<Yeti.YetiSoundBankReferenceForList> references);
        static /*0x2886d6c*/ System.Collections.Generic.List<Yeti.YetiSoundBankReferenceForList> FromStringList(System.Collections.Generic.IList<string> list);
        /*0x28870c0*/ YetiSoundBankReferenceForList();
        /*0x2886b44*/ string get_SoundBankId();
    }

    interface IRequestedAssetsListTracker
    {
        /*0x1f30ebc*/ void BeginTracking(string label);
        /*0x1f30ebc*/ void AssetsRequested(System.Collections.Generic.List<string> assetName);
        /*0x1f30ebc*/ void AssetRequested(string assetName);
        /*0x1f302cc*/ System.Collections.Generic.List<string> EndTracking(string label);
        /*0x1f2fe14*/ bool IsTracking();
    }

    class NullRequestedAssetsListTracker : Yeti.IRequestedAssetsListTracker
    {
        /*0x28870e4*/ NullRequestedAssetsListTracker();
        /*0x28870c8*/ void BeginTracking(string label);
        /*0x28870cc*/ bool IsTracking();
        /*0x28870d4*/ void AssetsRequested(System.Collections.Generic.List<string> assetName);
        /*0x28870d8*/ void AssetRequested(string assetName);
        /*0x28870dc*/ System.Collections.Generic.List<string> EndTracking(string label);
    }

    class RequestedAssetsListTracker : Yeti.IRequestedAssetsListTracker
    {
        static string AssetDelimiter = ", ";
        /*0x10*/ Yeti.GameEventManager _eventManager;
        /*0x18*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> _trackedRequestsByLabel;

        /*0x2887714*/ RequestedAssetsListTracker();
        /*0x28870ec*/ void BeginTracking(string label);
        /*0x28871c0*/ bool IsTracking();
        /*0x288721c*/ void AssetsRequested(System.Collections.Generic.List<string> assets);
        /*0x288741c*/ void AssetRequested(string assetName);
        /*0x288761c*/ System.Collections.Generic.List<string> EndTracking(string label);
    }

    class SupportedResourceCacheTypes
    {
        static string PrefabBundlePrefix = "prefab";
        static string UnitAssetPrefix = "unit";
        static string ProjectileAssetPrefix = "projectile";
        static string VfxAssetPrefix = "vfx";
        static string TextureBundlePrefix = "tex";
        static string AtlasBundlePrefix = "atlas";
        static string WwiseBundlePrefix = "wwise";
        static string SharedBundlePrefix = "shared";
        static string ScriptableObjectBundlePrefix = "data";
        static string TextAssetPrefix = "text";
        static string LocalizationAssetPrefix = "loc";
        static /*0x0*/ string[] SupportedTypes;

        static /*0x2887814*/ SupportedResourceCacheTypes();
        static /*0x288779c*/ bool IsAssetTypeValid(string typeName);
    }

    class YetiDebugMenuPaths
    {
        static string BasePath = "/";

        class AssetBundles
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string BlockingDownloadEverything;
            static /*0x10*/ string BackgroundDownloadEverything;
            static /*0x18*/ string DownloadStatus;
            static /*0x20*/ string MenuPathSpecificAssetDownloads;
            static /*0x28*/ string SetSpecifiedAsset;
            static /*0x30*/ string DownloadStatusForSpecifiedAsset;
            static /*0x38*/ string BlockingDownloadSpecifiedAsset;
            static /*0x40*/ string MenuPathDownloadUI;
            static /*0x48*/ string ShowBlockingDownloadUI;
            static /*0x50*/ string ShowBackgroundDownloadUI;
            static /*0x58*/ string ShowBlockingDownloadUIWithGameData;
            static /*0x60*/ string ShowDownloadUIOnOffFast;
            static /*0x68*/ string ShowDownloadUIOnOnOff;
            static /*0x70*/ string ClearTrackedLocations;
            static /*0x78*/ string RefreshTrackedLocations;
            static /*0x80*/ string TrackedAssetsPath;
            static /*0x88*/ string ClearShaderCache;
            static /*0x90*/ string AssetTierPath;
            static /*0x98*/ string GetReportedAssetTier;
            static /*0xa0*/ string OverrideClientAssetTier;

            static /*0x2887acc*/ AssetBundles();
        }

        class AssetManagerDebug
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string OutputAllBundles;
            static /*0x10*/ string OutputAssetRequestHistory;

            static /*0x28880c0*/ AssetManagerDebug();
        }

        class ContentUpdateDebug
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string CurrentContentHashPath;
            static /*0x10*/ string RefreshPath;
            static /*0x18*/ string ForceContentUpdateRootPath;
            static /*0x20*/ string ClearAssetBundleCacheOnBootPath;

            static /*0x28881cc*/ ContentUpdateDebug();
        }

        class Config
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string Diagnostics;
            static /*0x10*/ string Retry;
            static /*0x18*/ string ForceExpireConfig;
            static /*0x20*/ string ForceOverridesChange;
            static /*0x28*/ string RefreshVolatileOverrides;

            static /*0x2888368*/ Config();
        }

        class EadpSdkPresence
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string PresenceStatus;
            static /*0x10*/ string EndSession;
            static /*0x18*/ string StartSession;
            static /*0x20*/ string SetStatusOnline;
            static /*0x28*/ string SetStatusOffline;
            static /*0x30*/ string SubscribeLocalPlayerPresence;
            static /*0x38*/ string ForceLocalPlayerPresenceUpdate;
            static /*0x40*/ string ForceFriendsPresenceUpdate;
            static /*0x48*/ string SubscribeToPlayerPresence;
            static /*0x50*/ string SubscribeToFriendsPresence;
            static /*0x58*/ string UnsubscribeFromFriendsPresence;
            static /*0x60*/ string PlayerPresenceStates;
            static /*0x68*/ string RefreshPlayerPresenceStates;
            static /*0x70*/ string Status;
            static /*0x78*/ string ForceUpdate;
            static /*0x80*/ string Unsubscribe;

            static /*0x2888550*/ EadpSdkPresence();
        }

        class FeatureUnlocks
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string CurrentState;
            static /*0x10*/ string Feature;
            static /*0x18*/ string UnlockFeature;
            static /*0x20*/ string ForceRemoveFeature;
            static /*0x28*/ string ForceRevokeFeature;
            static /*0x30*/ string UnlockFeatureById;
            static /*0x38*/ string ForceRemoveFeatureById;
            static /*0x40*/ string ForceRevokeFeatureById;

            static /*0x2888a00*/ FeatureUnlocks();
        }

        class NamedValues
        {
            static /*0x0*/ string DebugMenuPath;
            static /*0x8*/ string DebugOverrideBools;
            static /*0x10*/ string DebugOverrideFloats;
            static /*0x18*/ string DebugOverrideInts;
            static /*0x20*/ string DebugOverrideStrings;
            static /*0x28*/ string DebugOverrideThrottles;
            static /*0x30*/ string DebugOverrideClearAll;

            static /*0x2888cbc*/ NamedValues();
        }

        class Network
        {
            static /*0x0*/ string NetworkConnectivityBasePath;
            static /*0x8*/ string FakeCellularConnection;
            static /*0x10*/ string FakeWifiConnection;
            static /*0x18*/ string ResetConnectionTypeCheats;
            static /*0x20*/ string ResetBestHttp;
            static /*0x28*/ string ProxyBasePath;
            static /*0x30*/ string HttpProxy;
            static /*0x38*/ string HttpProxyEdit;
            static /*0x40*/ string HttpProxyReset;
            static /*0x48*/ string MenuPath;
            static /*0x50*/ string FormatBytes;
            static /*0x58*/ string Diagnostics;
            static /*0x60*/ string SimulateNetworkLost;
            static /*0x68*/ string SimulateNetworkConnected;
            static /*0x70*/ string BestHttpMenuPath;
            static /*0x78*/ string BestHttpLoggingLevel;
            static /*0x80*/ string EnableBestHttpVerboseLogging;
            static /*0x88*/ string DisableBestHttpVerboseLogging;

            static /*0x2888f08*/ Network();
        }

        class GameService
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string SetMockLatency;
            static /*0x10*/ string ClearMockLatency;

            static /*0x2889400*/ GameService();
        }

        class NimblePersistence
        {
            static /*0x0*/ string BasePath;
            static /*0x8*/ string PersistencePath;
            static /*0x10*/ string WipeAllDataAndForceTerminate;

            static /*0x288950c*/ NimblePersistence();
        }

        class Firebase
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string UserId;
            static /*0x10*/ string CopyUserId;

            static /*0x2889618*/ Firebase();
        }

        class IdentityNexus
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string NexusStatus;

            static /*0x2889724*/ IdentityNexus();
        }

        class SecondaryAuth
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string LoginApple;
            static /*0x10*/ string LogoutApple;
            static /*0x18*/ string StatusApple;
            static /*0x20*/ string LoginGoogle;
            static /*0x28*/ string LogoutGoogle;
            static /*0x30*/ string StatusGoogle;
            static /*0x38*/ string ResolveConflictWithCurrentPersona;
            static /*0x40*/ string RegisterWithEmail;
            static /*0x48*/ string SubmitOTP;
            static /*0x50*/ string LogoutEA;
            static /*0x58*/ string StatusEA;
            static /*0x60*/ string ShowAuthLogin;
            static /*0x68*/ string LoginWithBrowser;

            static /*0x28897ec*/ SecondaryAuth();
        }

        class Identity
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string CurrentPersona;
            static /*0x10*/ string CopyPlayerId;
            static /*0x18*/ string ResetUserAgreement;

            static /*0x2889c24*/ Identity();
        }

        class PlayerLives
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string Info;
            static /*0x10*/ string Refill;
            static /*0x18*/ string Lose;
            static /*0x20*/ string AddInfiniteLivesSeconds;
            static /*0x28*/ string AddInfiniteLivesMinutes;

            static /*0x2889d7c*/ PlayerLives();
        }

        class Shop
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string CurrentPlayerMenuPath;
            static /*0x10*/ string AllMenuPath;
            static /*0x18*/ string CurrentPlayerMenuDataMenuPath;
            static /*0x20*/ string CurrentPlayerMenuPurchaseLogsMenuPath;

            static /*0x2889f64*/ Shop();
        }

        class TimedMetrics
        {
            static /*0x0*/ string TimedMetricsBasePath;
            static /*0x8*/ string ActiveMetrics;

            static /*0x288a100*/ TimedMetrics();
        }

        class TosReporting
        {
            static /*0x0*/ string TosReportingBasePath;
            static /*0x8*/ string TosSendPetitionReport;

            static /*0x288a1e0*/ TosReporting();
        }

        class FirebaseAnalytics
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string LogTestEvent;
            static /*0x10*/ string OverrideReporting;
            static /*0x18*/ string Info;

            static /*0x288a294*/ FirebaseAnalytics();
        }

        class Ftue
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string EnableTutorials;
            static /*0x10*/ string DisableTutorials;
            static /*0x18*/ string ActiveTutorial;
            static /*0x20*/ string KillActiveTutorial;
            static /*0x28*/ string FireTutorialTrigger;
            static /*0x30*/ string HotReloadTutorials;
            static /*0x38*/ string BouncingArrow;
            static /*0x40*/ string BouncingArrowDirection;
            static /*0x48*/ string BouncingArrowTargetId;
            static /*0x50*/ string BouncingArrowHide;
            static /*0x58*/ string DragAndDrop;
            static /*0x60*/ string DragAndDropFromTarget;
            static /*0x68*/ string DragAndDropToTarget;
            static /*0x70*/ string DragAndDropHide;
            static /*0x78*/ string ScrimCutoutShow;
            static /*0x80*/ string ScrimCutoutHide;
            static /*0x88*/ string StartTutorial;
            static /*0x90*/ string InstantiatePlant;
            static /*0x98*/ string InstantiatePlantPotTarget;
            static /*0xa0*/ string InstantiatePlantPlantAlias;
            static /*0xa8*/ string TalkingHeadPath;
            static /*0xb0*/ string SetTalkingUnit;
            static /*0xb8*/ string SetTalkingHost;
            static /*0xc0*/ string SetLeftRight;
            static /*0xc8*/ string SetMood;
            static /*0xd0*/ string ShowTalkingHead;
            static /*0xd8*/ string CloseTalkingHead;
            static /*0xe0*/ string ShowTalkingHeadConfig;

            static /*0x288a3ec*/ Ftue();
        }

        class Gameplay
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string FtuePath;
            static /*0x10*/ string BattleGenBasePath;
            static /*0x18*/ string WinGame;
            static /*0x20*/ string LoseGame;
            static /*0x28*/ string VisualizeStates;
            static /*0x30*/ string SpawnPlantBaseKey;
            static /*0x38*/ string SpawnZombieBaseKey;
            static /*0x40*/ string SpawnNeutralUnitBaseKey;
            static /*0x48*/ string SpawnPlantMiddleLaneBaseKey;
            static /*0x50*/ string SpawnZombieMiddleLaneBaseKey;
            static /*0x58*/ string SpawnPlantsFillBoardBaseKey;
            static /*0x60*/ string SpawnZombiesFillBoardBaseKey;
            static /*0x68*/ string SpawnZombieRandomGridCellBaseKey;
            static /*0x70*/ string SpawnOnBoardInstantUsePlantBoost;
            static /*0x78*/ string SpawnOnBoardPlantFoodBoost;
            static /*0x80*/ string MakeUnitImmuneToEnemies;
            static /*0x88*/ string MakeAllUnitsImmuneToEnemies;
            static /*0x90*/ string RemoveUnit;
            static /*0x98*/ string RemoveAllZombies;
            static /*0xa0*/ string RemoveAllPlants;
            static /*0xa8*/ string DisableBossMovement;
            static /*0xb0*/ string ForceBossAbilityBasePath;
            static /*0xb8*/ string ForceBossAbilityUpdate;
            static /*0xc0*/ string SetUnitLevel;
            static /*0xc8*/ string SpeedUp;
            static /*0xd0*/ string SpeedDown;
            static /*0xd8*/ string ShowUnitLevels;
            static /*0xe0*/ string ToggleUnitHealth;
            static /*0xe8*/ string ToggleSelectedUnitHealth;
            static /*0xf0*/ string ToggleUnitHealthBars;
            static /*0xf8*/ string ToggleUnitArmor;
            static /*0x100*/ string ToggleUnitName;
            static /*0x108*/ string ToggleDamageNumbers;
            static /*0x110*/ string ToggleSpeed;
            static /*0x118*/ string ToggleTags;
            static /*0x120*/ string ToggleHitbox3d;
            static /*0x128*/ string ToggleHitboxXy;
            static /*0x130*/ string ToggleHitboxXz;
            static /*0x138*/ string ToggleUnitOrigin;
            static /*0x140*/ string ToggleCombatHud;
            static /*0x148*/ string ScoringBasePath;
            static /*0x150*/ string ShowUnitScores;
            static /*0x158*/ string ModifyScore;
            static /*0x160*/ string ShowScoringLog;
            static /*0x168*/ string GrantBonusPath;
            static /*0x170*/ string SandboxBasePath;
            static /*0x178*/ string SandboxInfiniteAutoPlayPerf1;
            static /*0x180*/ string SandboxInfiniteAutoPlayPerf2;
            static /*0x188*/ string SandboxInfiniteAutoPlayPerf3;
            static /*0x190*/ string SandboxInfiniteAutoPlay;
            static /*0x198*/ string StopInfiniteAutoPlay;
            static /*0x1a0*/ string SetSandboxMaxPlants;
            static /*0x1a8*/ string SetSandboxMaxZombies;
            static /*0x1b0*/ string SetSandboxPlants;
            static /*0x1b8*/ string SetSandboxZombies;
            static /*0x1c0*/ string SelectRandomPlantOverrides;
            static /*0x1c8*/ string SelectRandomZombieOverrides;
            static /*0x1d0*/ string ShowSandboxPlants;
            static /*0x1d8*/ string ShowSandboxZombies;
            static /*0x1e0*/ string ClearSandboxOverrides;
            static /*0x1e8*/ string DestroyCombatPuppets;
            static /*0x1f0*/ string DestroyCombatHud;
            static /*0x1f8*/ string WriteBattleGenReport;
            static /*0x200*/ string ShowBattleGenPreview;
            static /*0x208*/ string FirstStrikeBasePath;
            static /*0x210*/ string SetAllPlantsFirstStrikeChance;
            static /*0x218*/ string ToggleFirstStrikeRollDebugView;
            static /*0x220*/ string TacoStrikeBasePath;
            static /*0x228*/ string SetAllPlantsTacoStrikeChance;
            static /*0x230*/ string ToggleTacoStrikeRollDebugView;
            static /*0x238*/ string GameResourcesBasePath;
            static /*0x240*/ string EnterUnlimitedResourcesMode;
            static /*0x248*/ string ToggleWaveBreakUi;
            static /*0x250*/ string ModifyInstantUsePlantCharges;
            static /*0x258*/ string ModifyPlantFood;
            static /*0x260*/ string ModifyPromotions;
            static /*0x268*/ string FtueBasePath;
            static /*0x270*/ string ToggleFtueHideTacos;
            static /*0x278*/ string ToggleFtueHidePlantFood;
            static /*0x280*/ string ToggleFtueHideQuitButtons;
            static /*0x288*/ string ToggleFtueHidePauseButton;
            static /*0x290*/ string FtuePause;
            static /*0x298*/ string ResumeGame;
            static /*0x2a0*/ string BattleMessagingBasePath;
            static /*0x2a8*/ string BattleMessagingToggleRandomMessaging;
            static /*0x2b0*/ string BattleMessagingSetIntrosIndex;
            static /*0x2b8*/ string BattleMessagingSetFinalWaveStageOneIndex;
            static /*0x2c0*/ string BattleMessagingSetFinalWaveStageTwoIndex;
            static /*0x2c8*/ string BattleMessagingSetLoseIndex;
            static /*0x2d0*/ string ModifyUnitStatsBasePath;
            static /*0x2d8*/ string ButterUnit;
            static /*0x2e0*/ string ChillUnit;
            static /*0x2e8*/ string FreezeUnit;
            static /*0x2f0*/ string ModifyUnitSpeed;
            static /*0x2f8*/ string StunUnit;
            static /*0x300*/ string SnotUnit;
            static /*0x308*/ string SickUnit;
            static /*0x310*/ string CombatLogBasePath;
            static /*0x318*/ string StartRecordingCombatLog;
            static /*0x320*/ string WriteCombatLog;
            static /*0x328*/ string ShowApm;
            static /*0x330*/ string ApmHistoryBasePath;
            static /*0x338*/ string ToggleCombatTimer;
            static /*0x340*/ string CombatTimer;
            static /*0x348*/ string PerformanceBasePath;
            static /*0x350*/ string SetupRegularStagePerfScenario;
            static /*0x358*/ string SetupBossStagePerfScenario;
            static /*0x360*/ string DisableTutorials;
            static /*0x368*/ string KillActiveTutorial;
            static /*0x370*/ string EnableTutorials;
            static /*0x378*/ string SpawnJuggerNut;

            static /*0x288abe8*/ Gameplay();
        }

        class PreBattleUnitSpawn
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string PreBattleUnitSpawnBasePath;
            static /*0x10*/ string ClearAllUnits;
            static /*0x18*/ string SetSpawnCount;
            static /*0x20*/ string ShowSelectedUnits;
            static /*0x28*/ string AddUnitBasePath;

            static /*0x288c9c8*/ PreBattleUnitSpawn();
        }

        class Checkpoints
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string SetCheckpointExpectedProgressBasePath;
            static /*0x10*/ string SetCheckpointTowerRewardBasePath;
            static /*0x18*/ string CurrentCheckpoint;
            static /*0x20*/ string IsTrackEnabled;
            static /*0x28*/ string RestartCheckpoint;

            static /*0x288cbb0*/ Checkpoints();
        }

        class CopyDebugPaths
        {
            static string MenuPath = "Copy Debug Paths";
        }

        class AppLifecycle
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string SoftReboot;
            static /*0x10*/ string LogRegisteredList;

            static /*0x288cdb0*/ AppLifecycle();
        }

        class Logging
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string SetLoggingLevel;
            static /*0x10*/ string LogYetiDebugLogs;
            static /*0x18*/ string LogCapGamesLogs;

            static /*0x288cebc*/ Logging();
        }

        class Localization
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string InfoPath;
            static /*0x10*/ string ShowStringId;
            static /*0x18*/ string PadStringWithExtraCharacters;
            static /*0x20*/ string ResetToDeviceLanguage;

            static /*0x288d0c8*/ Localization();
            static /*0x288d014*/ string GetPathForSetLanguageCheat(RedCrow.UI.UUIF.Localization.Language language);
        }

        class UnitDetails
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string ShowPlantUnitDetailsPath;
            static /*0x10*/ string ShowZombieUnitDetailsPath;

            static /*0x288d264*/ UnitDetails();
        }

        class UnitIntro
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string AddUnitToIntroPath;
            static /*0x10*/ string EnableUnitIntro;
            static /*0x18*/ string DisableUnitIntro;

            static /*0x288d398*/ UnitIntro();
        }

        class Deeplink
        {
            static /*0x0*/ string MenuBasePath;

            static /*0x288d510*/ Deeplink();

            class Navigation
            {
                static /*0x0*/ string BasePath;
                static /*0x8*/ string ToStore;
                static /*0x10*/ string ToMap;
                static /*0x18*/ string ToTeamManager;
                static /*0x20*/ string ToSocial;
                static /*0x28*/ string ToInbox;
                static /*0x30*/ string ToSettings;
                static /*0x38*/ string ToEaLogin;
                static /*0x40*/ string ToDailyTasks;
                static /*0x48*/ string ToLoginCalendar;
                static /*0x50*/ string ToStarTracker;
                static /*0x58*/ string ToEvents;
                static /*0x60*/ string ToZombossTower;
                static /*0x68*/ string ToDefaultBlockStreetView;
                static /*0x70*/ string ToStoreSectionDailyDeals;
                static /*0x78*/ string ToStoreSectionClub;
                static /*0x80*/ string ToStoreSectionCoins;
                static /*0x88*/ string ToStoreSectionGems;
                static /*0x90*/ string ToStoreSectionPinata;
                static /*0x98*/ string ToStoreSectionLto;
                static /*0xa0*/ string ToStoreSectionStarTracker;

                static /*0x288d594*/ Navigation();
            }

            class EventBroadcast
            {
                static /*0x0*/ string BasePath;
                static /*0x8*/ string Info;
                static /*0x10*/ string EALoginAutoVerify;

                static /*0x288dba8*/ EventBroadcast();
            }
        }

        class GameLanding
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string LevelSelect;
            static /*0x10*/ string Default;

            static /*0x288dcdc*/ GameLanding();
        }

        class GameNavigation
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string EnterPuppetEditorMode;
            static /*0x10*/ string EnterVoid;
            static /*0x18*/ string EnterTownMap;
            static /*0x20*/ string EnterCombatSandboxMode;
            static /*0x28*/ string EnterCombatLoadingTest;
            static /*0x30*/ string ArbitraryNav;

            static /*0x288dde8*/ GameNavigation();
        }

        class SandboxOptions
        {
            static /*0x0*/ string SandboxMenuPath;
            static /*0x8*/ string UseSpecificBattle;
            static /*0x10*/ string ClearCustomTeam;
            static /*0x18*/ string AddPlantToCustomTeam;
            static /*0x20*/ string BuildingPerksMenuPath;
            static /*0x28*/ string BonusSun;
            static /*0x30*/ string BonusTacos;
            static /*0x38*/ string ToggleShovel;
            static /*0x40*/ string ShovelPercentSunReturned;
            static /*0x48*/ string ShovelCooldown;
            static /*0x50*/ string ToggleInstantUsePlant;
            static /*0x58*/ string InstantUsePlantLevel;
            static /*0x60*/ string ToggleEstablishingShots;
            static /*0x68*/ string BoardMenuPath;
            static /*0x70*/ string PreviewZombiesMenuPath;
            static /*0x78*/ string ResetPreviewZombies;
            static /*0x80*/ string PreviewZombies;
            static /*0x88*/ string ToggleEnableWinByBossDeath;
            static /*0x90*/ string ToggleEnableWinByAllZombiesKilled;
            static /*0x98*/ string ToggleLoseByZombiesReachHouse;
            static /*0xa0*/ string GenerateMiniBossBattle;
            static /*0xa8*/ string ToggleOverridePools;
            static /*0xb0*/ string PoolOverrides;
            static /*0xb8*/ string SunFalling;
            static /*0xc0*/ string SunFallingDisabled;
            static /*0xc8*/ string SunFallingEnabled;
            static /*0xd0*/ string SunFallingFromLevelDefinition;
            static /*0xd8*/ string TappableSunEnabled;
            static /*0xe0*/ string TappableSunDisabled;

            static /*0x288e014*/ SandboxOptions();
        }

        class ErrorHandling
        {
            static /*0x0*/ string ErrorHandlingDebugMenuBasePath;
            static /*0x8*/ string NetworkConnectionError;
            static /*0x10*/ string UnrecoverableError;
            static /*0x18*/ string FatalError;
            static /*0x20*/ string FatalErrorThreaded;
            static /*0x28*/ string FatalErrorWithLargeStackTrace;
            static /*0x30*/ string FatalErrorThreadedWithLargeStackTrace;
            static /*0x38*/ string ForceApplicationErrorBase;
            static /*0x40*/ string ReportErrorToLog;
            static /*0x48*/ string RegisterFatalErrorForBeforeBootAssets;
            static /*0x50*/ string RegisterFatalErrorForAfterBootAssets;
            static /*0x58*/ string Force412ErrorOnNextNetworkResponse;
            static /*0x60*/ string ForceNonFatalError;
            static /*0x68*/ string ForceApiErrorOnNextNetworkResponse;
            static /*0x70*/ string InfiniteLoopError;
            static /*0x78*/ string ForceBestHttpException;

            static /*0x288e848*/ ErrorHandling();
        }

        class Time
        {
            static /*0x0*/ string MenuPath;
            static /*0x8*/ string AddTimeOffsetDays;
            static /*0x10*/ string AddTimeOffsetHours;
            static /*0x18*/ string AddTimeOffsetMinutes;
            static /*0x20*/ string AddTimeOffsetSeconds;
            static /*0x28*/ string ResetTimeOffsetTime;
            static /*0x30*/ string EnableCheatSinglePlayerTime;
            static /*0x38*/ string ShowCurrentTime;
            static /*0x40*/ string SetTimezone;

            static /*0x288ece8*/ Time();
        }
    }

    class AssetDownloadControllerBase<TDataProviderType> : CapitalGames.IInitializable, CapitalGames.ILifecycleAware, CapitalGames.IPostConstructable
    {
        /*0x0*/ Yeti.IAssetManager _assetManager;
        /*0x0*/ Odin.IUILayerService _layerManager;
        /*0x0*/ RedCrow.UI.UUIF.DataProviding.IUIDataProvidingService _dataProvidingService;
        /*0x0*/ RedCrow.UI.UUIF.Core.PanelBase.PanelAnimationDelegate _completeHideCleanupCached;
        /*0x0*/ Yeti.BinderSingleAssetLoader _assetLoader;
        /*0x0*/ Yeti.UIPanel _panel;
        /*0x0*/ float <MegabytesToDownload>k__BackingField;
        /*0x0*/ float <NormalizedPercentComplete>k__BackingField;
        /*0x0*/ System.Action DownloadProgressUpdated;

        /*0x1f309e4*/ AssetDownloadControllerBase();
        /*0x1f30214*/ string get_PrefabName();
        /*0x1f30804*/ float get_MegabytesToDownload();
        void set_MegabytesToDownload(float value);
        /*0x1f30804*/ float get_NormalizedPercentComplete();
        void set_NormalizedPercentComplete(float value);
        /*0x1f30ebc*/ void add_DownloadProgressUpdated(System.Action value);
        /*0x1f30ebc*/ void remove_DownloadProgressUpdated(System.Action value);
        /*0x1f30ebc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x1f309e4*/ void OnAppReset();
        /*0x1f309e4*/ void CapitalGames.IPostConstructable.PostConstruct();
        void UpdateProgress(long bytesToDownload, float normalizedPercentComplete);
        /*0x1f309e4*/ void SetupPanel();
        /*0x1f30ebc*/ void OnPanelLoadComplete(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle);
        /*0x1f309e4*/ void CleanupPanel();
        /*0x1f30ebc*/ void CompleteHideCleanup(RedCrow.UI.UUIF.Core.PanelBase panel);
    }

    class BackgroundDownloadDataProvider : Yeti.UIDataProvider
    {
        /*0x50*/ Yeti.BackgroundDownloadToastController _backgroundDownloadToastController;
        /*0x58*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _currentMbModel;
        /*0x60*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _targetMbModel;

        /*0x288f3b0*/ BackgroundDownloadDataProvider();
        /*0x288efcc*/ void Initialize();
        /*0x288f300*/ void OnDispose();
        /*0x288f160*/ void UpdateProgressModels();
    }

    class BackgroundDownloadToastController : Yeti.AssetDownloadControllerBase<Yeti.BackgroundDownloadDataProvider>, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        static /*0x0*/ string TextMeshProPrefabName;
        static /*0x8*/ string LegacyPrefabName;

        static /*0x288f7e4*/ BackgroundDownloadToastController();
        /*0x288f79c*/ BackgroundDownloadToastController();
        /*0x288f3b8*/ string get_PrefabName();
        /*0x288f460*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x288f6d8*/ void OnDownloadProgressUpdated(Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData assetDownloadEventData);
        /*0x288f738*/ void OnDownloadStatusChange(Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData assetDownloadEventData);
        /*0x288f774*/ void OnAppReset();
    }

    class BlockingDownloadDataProvider : Yeti.UIDataProvider
    {
        static int MaxSecondsBetweenProgressUpdate = 1;
        /*0x50*/ Yeti.IAssetManager _assetManager;
        /*0x58*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x60*/ Yeti.BlockingDownloadController _blockingDownloadController;
        /*0x68*/ Yeti.GameEventManager _gameEventManager;
        /*0x70*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x78*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _currentMbModel;
        /*0x80*/ float _maxNormalizedPercentage;
        /*0x88*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _progressModel;
        /*0x90*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _targetMbModel;
        /*0x98*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _progressNormalizedModel;
        /*0xa0*/ UnityEngine.Coroutine _checkForUpdatesCoroutine;

        /*0x28900ac*/ BlockingDownloadDataProvider();
        /*0x288f898*/ void Initialize();
        /*0x288ff54*/ void OnDispose();
        /*0x288fbb8*/ void UpdateProgress();
        /*0x288fee8*/ System.Collections.IEnumerator CheckForProgressUpdates();

        class <CheckForProgressUpdates>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BlockingDownloadDataProvider <>4__this;

            /*0x2890084*/ <CheckForProgressUpdates>d__15(int <>1__state);
            /*0x28900b4*/ void System.IDisposable.Dispose();
            /*0x28900b8*/ bool MoveNext();
            /*0x28901d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x28901e0*/ void System.Collections.IEnumerator.Reset();
            /*0x2890218*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class BlockingDownloadController : Yeti.AssetDownloadControllerBase<Yeti.BlockingDownloadDataProvider>, Yeti.IBlockingDownloadProgressListener
    {
        static string InputBlockerId = "BlockingDownloadController";
        static /*0x0*/ string TextMeshProPrefabName;
        static /*0x8*/ string LegacyPrefabName;
        /*0x50*/ Yeti.GameEventManager _gameEventManager;
        /*0x58*/ PvzN3xt.UI.InputBlockerController _inputBlocker;
        /*0x60*/ Yeti.BlockingDownloadProgressTracker _progressTracker;
        /*0x68*/ bool _isPanelShowing;

        static /*0x28905d8*/ BlockingDownloadController();
        /*0x2890590*/ BlockingDownloadController();
        /*0x2890220*/ string get_PrefabName();
        /*0x28902c8*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28903cc*/ void OnStateChanged(bool isActive);
        /*0x28903f8*/ void OnProgress(long totalDownloadBytes, float percentComplete);
        /*0x2890460*/ void SetupPanel();
        /*0x2890500*/ void CleanupPanel();
        /*0x289058c*/ void OnAppReset();
    }

    interface IBlockingDownloadProgressListener
    {
        void OnProgress(long totalDownloadBytes, float percentComplete);
        /*0x1f30a84*/ void OnStateChanged(bool isActive);
    }

    class BlockingDownloadProgressTracker : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x10*/ Yeti.GameEventManager _gameEventManager;
        /*0x18*/ Yeti.IAssetManager _assetManager;
        /*0x20*/ Yeti.IBlockingDownloadProgressListener _defaultListener;
        /*0x28*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadStatus _assetDownloadStatus;
        /*0x30*/ long _assetDownloadBytesTotal;
        /*0x38*/ float _assetDownloadNormalizedPercentComplete;
        /*0x3c*/ bool _isGameDataDownloadActive;
        /*0x40*/ int _gameDataDownloadBytesTotal;
        /*0x44*/ int _gameDataDownloadBytesRemaining;
        /*0x48*/ bool _isAssetCatalogUpdateActive;
        /*0x50*/ long _assetCatalogUpdateBytesTotal;
        /*0x58*/ long _assetCatalogUpdateBytesDownloaded;
        /*0x60*/ System.Collections.Generic.List<Yeti.IBlockingDownloadProgressListener> _overrideListeners;
        /*0x68*/ long <TotalDownloadBytes>k__BackingField;
        /*0x70*/ float <PercentComplete>k__BackingField;
        /*0x74*/ bool <IsActive>k__BackingField;

        /*0x28915a0*/ BlockingDownloadProgressTracker();
        /*0x289068c*/ long get_TotalDownloadBytes();
        /*0x2890694*/ void set_TotalDownloadBytes(long value);
        /*0x289069c*/ float get_PercentComplete();
        /*0x28906a4*/ void set_PercentComplete(float value);
        /*0x28906ac*/ bool get_IsActive();
        /*0x28906b4*/ void set_IsActive(bool value);
        /*0x28906bc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2890c88*/ void AddOverrideListener(Yeti.IBlockingDownloadProgressListener listener);
        /*0x2890e18*/ void RemoveOverrideListener(Yeti.IBlockingDownloadProgressListener listener);
        /*0x2890f20*/ void OnAssetDownloadStatusChange(Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData args);
        /*0x2890f2c*/ void OnAssetDownloadProgressUpdated(Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData args);
        /*0x2890f98*/ void OnAssetCatalogUpdateStarted(Yeti.GameEvents.ContentUpdate.FlowStartedParams args);
        /*0x2890fc0*/ void OnAssetCatalogUpdateProgress(Yeti.GameEvents.ContentUpdate.ContentUpdateParams args);
        /*0x2890fdc*/ void OnAssetCatalogUpdateCompleted();
        /*0x2890fe4*/ void OnGameDataDownloadStarted(Yeti.GameEvents.GameData.GameDataDownloadParams args);
        /*0x2891008*/ void OnGameDataDownloadUpdated(Yeti.GameEvents.GameData.GameDataDownloadParams args);
        /*0x2891010*/ void OnGameDataDownloadEnded();
        /*0x2890f38*/ void UpdateDownloadProgress();
        /*0x2890c14*/ void UpdateIsActive();
        /*0x28912c4*/ void InvokeOnStateChanged(bool isActive);
        /*0x2891018*/ void InvokeOnProgress(long totalDownloadBytes, float percentComplete);
        /*0x2891578*/ void CapitalGames.ILifecycleAware.OnAppReset();
        /*0x2891564*/ void Clear();
    }

    class LocalizeKeys
    {
        static string InsufficientFundsHeader = "GENERIC_PURCHASE_FAILURE_INSUFFICIENT_FUNDS_HEADER";
        static string InsufficientHeartMessage = "GENERIC_PURCHASE_FAILURE_INSUFFICIENT_HEARTS_MESSAGE";
        static string GenericOk = "GENERIC_OK";
    }

    interface IBattleDataController : CapitalGames.IInitializable
    {
        /*0x1f30214*/ Yeti.EndCombatConfig get_EndCombatConfig();
        /*0x1f30ebc*/ void set_EndCombatConfig(Yeti.EndCombatConfig value);
        /*0x1f30214*/ Yeti.StartCombatConfig get_ActiveConfig();
        /*0x1f30ebc*/ void SetActiveBattle(Yeti.StartCombatConfig startCombatConfig);
    }

    class BattleDomainController : Yeti.IBattleDataController, CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.StartCombatConfig <ActiveConfig>k__BackingField;
        /*0x18*/ Yeti.EndCombatConfig <EndCombatConfig>k__BackingField;

        /*0x2891704*/ BattleDomainController();
        /*0x2891630*/ Yeti.StartCombatConfig get_ActiveConfig();
        /*0x2891638*/ void set_ActiveConfig(Yeti.StartCombatConfig value);
        /*0x2891640*/ Yeti.EndCombatConfig get_EndCombatConfig();
        /*0x2891648*/ void set_EndCombatConfig(Yeti.EndCombatConfig value);
        /*0x2891650*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28916fc*/ void SetActiveBattle(Yeti.StartCombatConfig startCombatConfig);
    }

    class MicroGameConfiguration : UnityEngine.ScriptableObject
    {
        /*0x18*/ PvzN3xt.MicroGames.MicroGameAudioIds _audioIds;

        /*0x2891714*/ MicroGameConfiguration();
        /*0x289170c*/ PvzN3xt.MicroGames.MicroGameAudioIds get_AudioIds();
    }

    class LevelTrackDataProvider : Yeti.UIDataProvider
    {
        static string GameplayLevelTextLocPrefix = "GAMEPLAY_LEVEL_TEXT_";
        /*0x50*/ PvzN3xt.Track.TrackDomainController _trackController;
        /*0x58*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x60*/ PvzN3xt.Battle.BattleDefinitionProvider _battleDefinitionProvider;
        /*0x68*/ Yeti.PreBattleBoostModelFactory _preBattleBoostModelFactory;
        /*0x70*/ Yeti.IPlayerInventoryDataManager _playerInventory;
        /*0x78*/ Yeti.PreBattleBoostController _preBattleBoostController;
        /*0x80*/ PvzN3xt.BoostPurchaseController _boostPurchaseController;
        /*0x88*/ Yeti.INavigationService _navigationService;
        /*0x90*/ PvzN3xt.Meta.FeatureUnlocks.FeatureUnlocksController _featureUnlocksController;
        /*0x98*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0xa0*/ PvzN3xt.Battle.BonusBoostController _bonusBoostController;
        /*0xa8*/ PvzN3xt.Meta.PlantSelection.IPlantTeamProvider _plantTeamProvider;
        /*0xb0*/ Yeti.SimplePlantModelFactory _simplePlantModelFactory;
        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _currentLevelNumberModel;
        /*0xc0*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _trackNameModel;
        /*0xc8*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _currentLevelNameModel;
        /*0xd0*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection _currentLevelPlantTeam;
        /*0xd8*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection _preBattleBoosts;
        /*0xe0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isPreBattleBoostAvailable;
        /*0xe8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _numberOfLevelsModel;
        /*0xf0*/ Yeti.LevelPreviewImageModel _backgroundImageModel;
        /*0xf8*/ Yeti.LevelPreviewImageModel _blurredBackgroundImageModel;
        /*0x100*/ Yeti.LevelPreviewImageModel _headerImageModel;
        /*0x108*/ Yeti.LevelPreviewImageModel _tiledBackgroundImageModel;
        /*0x110*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _levelDifficultyModel;
        /*0x118*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _difficultyBand;
        /*0x120*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _difficultyBandLocString;
        /*0x128*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isVasebreakerLevelModel;
        /*0x130*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _currentLevelTypeModel;
        /*0x138*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _battlePassPointsModel;
        /*0x140*/ RedCrow.UI.UUIF.DataProviding.Models.ProxyModel _selectedPlantInfo;
        /*0x148*/ System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, RedCrow.UI.UUIF.DataProviding.Models.BoolModel>> _isLevelTypeModels;
        /*0x150*/ System.Collections.Generic.List<PvzN3xt.Meta.PlantSelection.TeamSlot> _occupiedTeamSlots;

        /*0x28949b0*/ LevelTrackDataProvider();
        /*0x289171c*/ void Initialize();
        /*0x2892524*/ void OnDispose();
        /*0x28927a8*/ void HandlePromptBoostPurchase(RedCrow.UI.UUIF.DataProviding.UIDataKey key, Yeti.PreBattleBoostModel boost, object[] args);
        /*0x2892898*/ void HandlePreBattleBoostToggled(RedCrow.UI.UUIF.DataProviding.UIDataKey key, Yeti.PreBattleBoostModel boost, object[] args);
        /*0x2892b54*/ void ShowPlantInfo(RedCrow.UI.UUIF.DataProviding.UIDataKey key, RedCrow.UI.UUIF.DataProviding.Models.IUIModel model, object[] args);
        /*0x2891b00*/ void InitializeModels();
        /*0x28922bc*/ void UpdateModels();
        /*0x28931f4*/ void CreateIsLevelTypeModels();
        /*0x28945d4*/ void UpdateIsLevelTypeModels(Yeti.Data.BattleElementaryDefinition currentBattle);
        /*0x2894920*/ string GetIsLevelTypeModelName(string typeAlias);
        /*0x2894150*/ void UpdateCurrentLevelTypeName(Yeti.Data.BattleElementaryDefinition currentBattle);
        /*0x28948fc*/ void UpdateIsHardBattleModel(Yeti.Data.BattleElementaryDefinition currentBattle);
        /*0x2893714*/ void UpdateTeamModels();
        /*0x2892db4*/ void CreatePreBattleBoostModels();
        /*0x28929c0*/ void UpdatePreBattleBoostModels();
        /*0x289498c*/ void HandleTrackProgressChanged();
        /*0x2894990*/ void HandleInventoryUpdated();
        /*0x2894994*/ void HandleFeatureUnlocksChanged();
        /*0x28949ac*/ void HandleBonusBoostsChanged();
        /*0x2893abc*/ string GetCurrentLevelName(PvzN3xt.Data.TrackLevelEntry trackLevel);
        /*0x2894a90*/ bool <UpdateTeamModels>g__UpdateModel|46_0(int index, PvzN3xt.Meta.PlantSelection.TeamSlotModel model);
        /*0x2894b34*/ PvzN3xt.Meta.PlantSelection.TeamSlotModel <UpdateTeamModels>g__CreateModel|46_1(int index);

        class Keys
        {
            static string TrackName = "TrackName";
            static string NumberOfLevels = "NumberOfLevels";
            static string CurrentLevelName = "CurrentLevelName";
            static string CurrentLevelNumber = "CurrentLevelNumber";
            static string CurrentLevelPlantTeam = "CurrentLevelPlantTeam";
            static string PreBattleBoosts = "PreBattleBoosts";
            static string IsPreBattleBoostAvailable = "IsPreBattleBoostAvailable";
            static string BackgroundImage = "BackgroundImage";
            static string BlurredBackgroundImage = "BlurredBackgroundImage";
            static string HeaderImage = "HeaderImage";
            static string TiledBackgroundImage = "TiledBackgroundImage";
            static string CurrentLevelDifficulty = "CurrentLevelDifficulty";
            static string DifficultyBand = "DifficultyBand";
            static string DifficultyBandLocString = "DifficultyBandLocString";
            static string IsVasebreakerLevel = "IsVasebreakerLevel";
            static string LevelType = "LevelType";
            static string BattlePassPoints = "BattlePassPoints";
            static string SelectedPlantInfo = "SelectedPlantInfo";

            /*0x2894bfc*/ Keys();
        }
    }

    class LevelPreviewImageModel : Yeti.SimpleImageModel
    {
        static /*0x0*/ string AtlasPrefix;
        static /*0x8*/ System.Collections.Generic.Dictionary<string, string> LevelPreviewAliasRemap;
        /*0xb8*/ string _imagePrefix;
        /*0xc0*/ string _fallbackImage;

        static /*0x2894c9c*/ LevelPreviewImageModel();
        /*0x2892d70*/ LevelPreviewImageModel(string modelName, string imagePrefix, string fallbackImage);
        /*0x2893e34*/ void Update(Yeti.Data.BattleElementaryDefinition currentBattle);
    }

    class TrackModule : CapitalGames.Module
    {
        /*0x28950a0*/ TrackModule();
        /*0x2894db4*/ void Configure();
        /*0x289509c*/ void BindCheats();
    }

    class HighlightGridCellPopup : Yeti.UIPopup
    {
        /*0xf0*/ PvzN3xt.Tutorial.ITutorialTargetingSystem _tutorialTargetingSystem;
        /*0xf8*/ PvzN3xt.Tutorial.ITutorialHighlightGridCellManager _tutorialHighlightGridCellManager;
        /*0x100*/ UnityEngine.Canvas _canvas;
        /*0x108*/ UnityEngine.RectTransform highlightPrefab;
        /*0x110*/ System.Collections.Generic.Dictionary<string, UnityEngine.RectTransform> _highlights;

        /*0x2895d10*/ HighlightGridCellPopup();
        /*0x28950a8*/ bool Initialize(RedCrow.UI.UUIF.Core.PopupInitializationDetails initializationObject);
        /*0x28953b8*/ void CreateHighlight(string animationName);
        /*0x2895838*/ void RemoveHighlight();
        /*0x2895ac0*/ void ClearHighlights();
        /*0x2895ac4*/ void OnDestroy();
    }

    class HighlightGridCellPopupInitData : RedCrow.UI.UUIF.Core.PopupInitializationDetails
    {
        /*0x20*/ string GridCellId;
        /*0x28*/ string AnimationName;

        /*0x2895d98*/ HighlightGridCellPopupInitData(string gridCellId, string animationName);
    }

    interface ITutorialCallbacks
    {
        /*0x1f309e4*/ void TutorialsComplete();
        /*0x1f309e4*/ void TutorialsNotTriggered();
        /*0x1f309e4*/ void TutorialsTriggered();
    }

    class TutorialProtobufScriptParser
    {
        static /*0x0*/ System.Collections.Generic.Dictionary<PvzN3xt.Data.TutorialTypeFlag, PvzN3xt.Tutorial.TutorialScriptFlags> ProtobufToScriptFlagMap;
        /*0x10*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x18*/ PvzN3xt.Tutorial.ITutorialTargetingSystem _tutorialTargetingSystem;
        /*0x20*/ PvzN3xt.PlayerIdentity.IAgeCompliance _ageCompliance;
        /*0x28*/ Yeti.IPlayerProgressionDataManager _playerProgressionDataManager;
        /*0x30*/ Yeti.IPlatformProvider _platformProvider;
        /*0x38*/ Yeti.IBattleDataController _battleDataController;
        /*0x40*/ Yeti.ITutorialStateDataSource _tutorialStateDataSource;
        /*0x48*/ Yeti.ICheckpointStateDataSource _checkpointStateDataSource;
        /*0x50*/ PvzN3xt.Tutorial.TutorialScriptedActionFactory _tutorialScriptedActionFactory;
        /*0x58*/ Yeti.GameEventManager _gameEventManager;
        /*0x60*/ PvzN3xt.Community.CommunityDomainController _communityDomainController;

        static /*0x2898e30*/ TutorialProtobufScriptParser();
        static /*0x289626c*/ void AssignScriptFlags(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        static /*0x28965c8*/ void AssignCheckpoint(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        static /*0x2897bfc*/ void AssignTimerProperties(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        /*0x2898e28*/ TutorialProtobufScriptParser();
        /*0x2895ddc*/ System.Collections.Generic.List<PvzN3xt.Tutorial.TutorialScript> Parse(System.Collections.Generic.IReadOnlyList<PvzN3xt.Data.Tutorial> tutorials);
        /*0x289617c*/ PvzN3xt.Tutorial.TutorialScript ConvertProtobufTutorialToTutorialScript(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        /*0x2896668*/ void AssignStandardActions(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        /*0x2896e68*/ void AssignReentryEvents(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        /*0x2897680*/ void AssignAbortEvents(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        /*0x2897c4c*/ void AssignSkipActions(PvzN3xt.Tutorial.TutorialScriptBuilder scriptBuilder, PvzN3xt.Data.Tutorial tutorial);
        /*0x28981e0*/ Yeti.ITutorialCondition ConvertToRuntimeCondition(PvzN3xt.Data.TutorialConditionDefinition tutorialCondition);
        /*0x28989f4*/ System.Collections.Generic.List<Yeti.ITutorialCondition> ConvertToRuntimeConditions(Google.Protobuf.Collections.RepeatedField<PvzN3xt.Data.TutorialConditionDefinition> conditions);
        /*0x28989ac*/ PvzN3xt.ScriptedAction.IScriptedAction ConvertToRuntimeAction(PvzN3xt.Data.TutorialActionDefinition tutorialAction);
        /*0x2898da4*/ void LogError(string error);
    }

    interface ITutorialCondition
    {
        /*0x1f2fe14*/ bool CheckCondition();
    }

    interface ITutorialConditionDefinitionConvertible
    {
        /*0x1f30214*/ PvzN3xt.Data.TutorialConditionDefinition ToConditionDefinition();
    }

    class TutorialConditionAlwaysTrue : Yeti.ITutorialCondition
    {
        /*0x2899004*/ TutorialConditionAlwaysTrue();
        /*0x2898ffc*/ bool CheckCondition();
    }

    class TutorialConditionAlwaysFalse : Yeti.ITutorialCondition
    {
        /*0x2899014*/ TutorialConditionAlwaysFalse();
        /*0x289900c*/ bool CheckCondition();
    }

    class TutorialConditionTree : Yeti.ITutorialCondition
    {
        /*0x10*/ Yeti.ITutorialCondition _left;
        /*0x18*/ Yeti.ITutorialCondition _right;

        /*0x289901c*/ TutorialConditionTree();
        /*0x1f2fe14*/ bool CheckCondition();
    }

    class TutorialConditionAnd : Yeti.TutorialConditionTree
    {
        /*0x20*/ System.Collections.Generic.List<Yeti.ITutorialCondition> _conditions;

        /*0x2898d74*/ TutorialConditionAnd(System.Collections.Generic.List<Yeti.ITutorialCondition> conditions);
        /*0x2899024*/ bool CheckCondition();
    }

    class TutorialConditionOr : Yeti.TutorialConditionTree
    {
        /*0x20*/ System.Collections.Generic.List<Yeti.ITutorialCondition> _conditions;

        /*0x2898d44*/ TutorialConditionOr(System.Collections.Generic.List<Yeti.ITutorialCondition> conditions);
        /*0x2899264*/ bool CheckCondition();
    }

    class TutorialConditionNot : Yeti.TutorialConditionTree
    {
        /*0x28989c4*/ TutorialConditionNot(Yeti.ITutorialCondition operand);
        /*0x2899498*/ bool CheckCondition();
    }

    class TutorialConstants
    {
        class Triggers
        {
            static string AfterPostCombatRewardFlow = "AfterPostCombatRewardFlow";
            static string CascadeTokenCollected = "CASCADE_TOKEN_COLLECTED";
            static string CombatStart = "CombatStart";
            static string CutsceneCompleted = "CutsceneCompleted";
            static string EnterRoadTripLevelPreview = "EnterRoadTripLevelPreview";
            static string EnterLevelPreview = "EnterLevelPreview";
            static string PreCombat = "PreCombat";
            static string PreCombatNonBlocking = "PreCombatNonBlocking";
            static string StageWon = "StageWon";
            static string StageLost = "StageLost";
            static string StageQuit = "StageQuit";
            static string SunCollected = "SUN_COLLECTED";
            static string TapAbilityActivatedPrefix = "TAP_ABILITY_ACTIVATED_";
            static string ZombiesKilledCountPrefix = "ZOMBIE_KILLED_";
            static string ZombiesSpawnedCountPrefix = "ZOMBIE_SPAWNED_";
            static string EnterPlotDecoration = "EnterPlotDecoration";
            static string EnterRewardMoment = "EnterRewardMoment";
            static string EnterAvatarCustomizationFtue = "EnterAvatarCustomizationFTUEScreen";
            static string EnterAvatarCustomization = "EnterAvatarCustomization";
            static string EnterZenGardenScreen = "EnterZenGardenScreen";
            static string EnterAlmanac = "EnterAlmanac";
            static string EnterBattlePass = "EnterBattlePass";
            static string PostCombatScoring = "PostCombatScoring";
            static string EnterWeeklyMeter = "EnterWeeklyMeter";
            static string EnterCommunityFinder = "EnterCommunityFinder";
            static string EnterCommunityCreation = "EnterCommunityCreation";
            static string EnterCommunityHub = "EnterCommunityHub";
            static string PlantFoodEarned = "PlantFoodEarned";
            static string PlantFoodUsed = "PlantFoodUsed";
            static string PlantMoved = "PlantMoved";
            static string PlantPromoted = "PlantPromoted";
            static string TacoTimeFinished = "TacoTimeFinished";
        }

        class Events
        {
            static string PlantUsed = "PLANT_USED";
            static string PlantUsedPrefix = "PLANT_USED_";
            static string ShovelUsed = "SHOVEL_USED";
            static string SunCountChangedPrefix = "SUN_COUNT_";
            static string PlantFoodUsed = "PLANT_FOOD_USED";
            static string PlantMoved = "PLANT_MOVED";
            static string PlantPromoted = "PLANT_PROMOTED";
            static string PlantPromotedPrefix = "PLANT_PROMOTED_";
            static string TacoTimeFinished = "TACO_TIME_FINISHED";
            static string ZenGardenPlantsMerged = "ZEN_GARDEN_PLANTS_MERGED";
        }

        class TutorialIds
        {
            static string CombatBoardLocationPrefix = "COMBAT_BOARD_";
            static string CombatBoardSearchPrefix = "COMBAT_BOARD_SEARCH";
        }
    }

    interface ITutorialController : CapitalGames.IInitializable
    {
        /*0x1f30a84*/ void SetQueueTutorialCompletions(bool shouldQueue);
        /*0x1f30214*/ System.Collections.Generic.IEnumerable<int> GetPendingTutorialCompletions();
        /*0x1f309e4*/ void ClearPendingTutorialCompletions();
        void TriggerFtue(string triggerId, bool clearQueue, Yeti.ITutorialCallbacks tutorialCallbacks);
        /*0x1f30ff0*/ void CompleteTutorial(string alias, System.Action completeCallback);
        /*0x1f30214*/ string get_ActiveTutorialDescription();
        /*0x1f309e4*/ void KillActiveTutorial();
        /*0x1f30a84*/ void HideActiveTutorial(bool hidden);
    }

    class TutorialController : Yeti.ITutorialController, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x10*/ PvzN3xt.Tutorial.ITutorialScriptManager _tutorialScriptManager;
        /*0x18*/ PvzN3xt.Tutorial.ITutorialApi _tutorialApi;
        /*0x20*/ Odin.IUILayerService _layerService;
        /*0x28*/ PvzN3xt.Meta.Tutorial.ITutorialPendingCompletionsCollection _pendingTutorialCompletions;
        /*0x30*/ Yeti.TutorialStaticDataProvider _tutorialStaticDataProvider;
        /*0x38*/ Yeti.GameEventManager _gameEventManager;
        /*0x40*/ System.Action _onAllActiveTutorialsComplete;
        /*0x48*/ bool _shouldQueueTutorialCompletions;

        /*0x2899ff4*/ TutorialController();
        /*0x2899544*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28996bc*/ void TriggerFtue(string triggerId, bool clearQueue, Yeti.ITutorialCallbacks tutorialCallbacks);
        /*0x2899934*/ void ClearAllTriggerListeners();
        /*0x2899940*/ void SetQueueTutorialCompletions(bool shouldQueue);
        /*0x2899948*/ System.Collections.Generic.IEnumerable<int> GetPendingTutorialCompletions();
        /*0x2899950*/ void ClearPendingTutorialCompletions();
        /*0x28999f4*/ void CompleteTutorial(string alias, System.Action completeCallback);
        /*0x2899b74*/ string get_ActiveTutorialDescription();
        /*0x2899c18*/ void KillActiveTutorial();
        /*0x2899d10*/ void HideActiveTutorial(bool hidden);
        /*0x2899ebc*/ void AllActiveTutorialsComplete();
        /*0x2899ef0*/ void OnAppReset();
    }

    interface IUnitProgressionDomainController : CapitalGames.IInitializable
    {
    }

    class UnitProgressionDomainController : Yeti.IUnitProgressionDomainController, CapitalGames.IInitializable
    {
        /*0x289a0a8*/ UnitProgressionDomainController();
        /*0x2899ffc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
    }

    interface IPlayerLivesRefillConfigProvider
    {
        /*0x1f30214*/ PvzN3xt.Data.Cost get_RefillLivesCost();
        /*0x1f30214*/ PvzN3xt.Shop.Bundle get_RefillLivesBundle();
    }

    class PlayerLivesRefillConfigProvider : Yeti.IPlayerLivesRefillConfigProvider, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        /*0x10*/ PvzN3xt.Shop.IOffersDomainController _offersDomainController;

        /*0x289a17c*/ PlayerLivesRefillConfigProvider();
        /*0x289a0b0*/ PvzN3xt.Data.Cost get_RefillLivesCost();
        /*0x289a0d8*/ PvzN3xt.Shop.Bundle get_RefillLivesBundle();
    }

    class SharedGameplayTelemetryStrings
    {
        static string WinValue = "win";
        static string LoseValue = "lost";
    }

    class SimpleImageModel : RedCrow.UI.UUIF.DataProviding.Models.ModelBase
    {
        /*0xa8*/ string _atlasName;
        /*0xb0*/ string _imageName;

        /*0x2894c04*/ SimpleImageModel(string modelName);
        /*0x289a184*/ SimpleImageModel(string modelName, string initialValue);
        /*0x289a204*/ SimpleImageModel(string modelName, PvzN3xt.AssetManagement.AtlasedSpritePath icon);
        /*0x289a248*/ SimpleImageModel(string modelName, string atlasName, string imageName);
        /*0x289a28c*/ void SetValue(PvzN3xt.AssetManagement.AtlasedSpritePath icon);
        /*0x2894c0c*/ void SetValue(string atlasAndImageName);
        /*0x289a290*/ void SetAtlasAndImageName(string atlasName, string imageName);
        /*0x289a388*/ void SetImageName(string imageName);
        /*0x289a420*/ string GetAtlasName();
        /*0x289a428*/ string GetImageName();
    }

    class ScrimCutoutView : UnityEngine.MonoBehaviour, PvzN3xt.UI.IScreenTransitionView
    {
        /*0x20*/ UnityEngine.RectTransform _cutoutRoot;
        /*0x28*/ float _cutoutAnimationTime;
        /*0x2c*/ DG.Tweening.Ease _cutoutAnimationEase;
        /*0x30*/ float _reverseCutoutAnimationTime;
        /*0x34*/ DG.Tweening.Ease _reverseCutoutAnimationEase;
        /*0x38*/ UnityEngine.Vector2 _startSize;
        /*0x40*/ UnityEngine.Vector2 _fullScreenSize;
        /*0x48*/ DG.Tweening.Tween _existingTween;

        /*0x289a720*/ ScrimCutoutView();
        /*0x289a430*/ void ShowAnimation(UnityEngine.Vector2 finalSize);
        /*0x289a454*/ void ShowAnimation(UnityEngine.Vector2 startSize, UnityEngine.Vector2 endSize, float time, DG.Tweening.Ease ease, System.Action onComplete);
        /*0x289a61c*/ void AnimateIn(bool immediate, System.Action onComplete);
        /*0x289a6a4*/ void AnimateOut(bool immediate, System.Action onComplete);
        /*0x289a71c*/ void OnDisable();
        /*0x289a5e4*/ void KillExistingTween();

        class <>c__DisplayClass9_0
        {
            /*0x10*/ System.Action onComplete;

            /*0x289a5dc*/ <>c__DisplayClass9_0();
            /*0x289a734*/ void <ShowAnimation>b__0();
        }
    }

    class GenericMessagePopupPersister : Yeti.Persistence.GenericProtobufPersister<Yeti.Data.GenericMessagePopupState>
    {
        /*0x289a86c*/ GenericMessagePopupPersister();
        /*0x289a750*/ Yeti.Data.GenericMessagePopupState CreateDefaultInstance();
        /*0x289a7a4*/ Google.Protobuf.MessageParser<Yeti.Data.GenericMessagePopupState> GetParser();
        /*0x289a82c*/ string GetPathRelativeToPersistentDataPath();
    }

    class SafeAreaBackground : UnityEngine.MonoBehaviour
    {
        /*0x20*/ RedCrow.UI.UUIF.Core.PanelBase _uiPanel;
        /*0x28*/ UnityEngine.RectTransform _rectTransform;
        /*0x30*/ UnityEngine.RectTransform _panelTransform;

        /*0x289ab1c*/ SafeAreaBackground();
        /*0x289a8b4*/ void Update();
    }

    class AnalyticsModule : CapitalGames.Module
    {
        /*0x289ab74*/ AnalyticsModule();
        /*0x289ab24*/ void Configure();
    }

    class FirebaseAnalyticsDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static string TestEventName = "yeti_test_event";
        static string playerPrefKey = "OVERRIDE_FIREBASE_ANALYTICS_REPORTING";
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.IFirebaseAnalyticsWrapper _firebaseAnalyticsWrapper;
        /*0x18*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x20*/ EA.Text.StringBuilder _infoStringBuilder;

        static /*0x289af40*/ FirebaseAnalyticsDebugManager();
        /*0x289aecc*/ FirebaseAnalyticsDebugManager();
        /*0x289ab7c*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x289ad98*/ string Info();
        /*0x289ac58*/ void OverrideFirebaseAnalyticsReporting();
        /*0x289aec8*/ void CapitalGames.ILifecycleAware.OnAppReset();
    }

    class FirebaseAnalyticsWrapper : Yeti.IFirebaseAnalyticsWrapper, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        static string Ellipsis = "…";
        static int MaxUserPropertyValueLength = 36;
        /*0x10*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x18*/ PvzN3xt.Config.IAppSettingsModel _appSettingsModel;
        /*0x20*/ PvzN3xt.PlayerIdentity.IAgeCompliance _ageCompliance;
        /*0x28*/ Yeti.GameEventManager _gameEventManager;
        /*0x30*/ PvzN3xt.Telemetry.FirebaseStorageInitializer _firebaseStorageInitializer;
        /*0x38*/ PvzN3xt.PlayerIdentity.PlayerIdentityDomainController _playerIdentityDomainController;
        /*0x40*/ PvzN3xt.ClientSession.IClientSessionManager _clientSessionManager;
        /*0x48*/ bool _isAllowedToSendEvents;
        /*0x50*/ System.Collections.Generic.List<System.Action> _savedEventCalls;

        static /*0x289bae8*/ string TruncateUserPropertyValue(string value);
        /*0x289bd5c*/ FirebaseAnalyticsWrapper();
        /*0x289afc0*/ bool get_ShouldLogEvent();
        /*0x289b0c8*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x289b2f8*/ bool get_IsAllowedToSendEvent();
        /*0x289b2f4*/ void SetAnalyticsEnabled(bool enable);
        /*0x289b300*/ void SetAnalyticsEnabledConditionally(bool enable);
        /*0x289b8dc*/ void LogEvent(string name);
        /*0x289b948*/ void LogEvent(string name, Firebase.Analytics.Parameter[] parameters);
        /*0x289b8e4*/ void LogOrSaveEvent(string name, Firebase.Analytics.Parameter[] parameters);
        /*0x289ba5c*/ void SendEventToFirebase(string name, Firebase.Analytics.Parameter[] parameters);
        /*0x289b94c*/ void SaveEvent(string name, Firebase.Analytics.Parameter[] parameters);
        /*0x289b3a0*/ void UpdateUserProperties();
        /*0x289bb78*/ void SetPlayerStateId(string playerStateId);
        /*0x289b730*/ void SendSavedEvents();
        /*0x289bc10*/ void UpdateAnalyticsEnabled();
        /*0x289bcc4*/ void OnAppReset();

        class <>c__DisplayClass22_0
        {
            /*0x10*/ Yeti.FirebaseAnalyticsWrapper <>4__this;
            /*0x18*/ string name;
            /*0x20*/ Firebase.Analytics.Parameter[] parameters;

            /*0x28ebd1c*/ <>c__DisplayClass22_0();
            /*0x28ebd24*/ void <SaveEvent>b__0();
        }
    }

    interface IFirebaseAnalyticsWrapper : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30a84*/ void SetAnalyticsEnabled(bool enable);
        /*0x1f30ebc*/ void LogEvent(string name);
        /*0x1f30ff0*/ void LogEvent(string name, Firebase.Analytics.Parameter[] parameters);
        /*0x1f2fe14*/ bool get_IsAllowedToSendEvent();
    }

    class AccordionPanel : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.GameObject _panel;
        /*0x50*/ UnityEngine.CanvasGroup _canvasGroup;
        /*0x58*/ DG.Tweening.Ease _expansionEaseType;
        /*0x5c*/ DG.Tweening.Ease _fadeInEaseType;
        /*0x60*/ float _expansionTime;
        /*0x64*/ float _fadeInTime;
        /*0x68*/ DG.Tweening.Sequence _accordionSequence;

        /*0x28ec078*/ AccordionPanel();
        /*0x28ebd44*/ void OnStop();
        /*0x28ebdc0*/ void OnPlay();
        /*0x28ebf4c*/ void OnSkip();
        /*0x28ebfc8*/ void OnPause();
        /*0x28ec020*/ void OnResume();
        /*0x28ec098*/ void <OnPlay>b__8_0();
    }

    class Activation : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.GameObject _object;
        /*0x50*/ bool _inverse;
        /*0x51*/ bool _setInverseOnEnable;

        /*0x28ec298*/ Activation();
        /*0x28ec1f8*/ void Awake();
        /*0x28ec218*/ void OnEnable();
        /*0x28ec244*/ void OnPlay();
        /*0x28ec278*/ void OnStop();
    }

    class AnimationTriggers : UnityEngine.MonoBehaviour
    {
        static string TriggerEvent = "AnimationTrigger";
        /*0x20*/ UnityEngine.Animator animator;
        /*0x28*/ Yeti.AnimationTriggerConfig[] triggers;
        /*0x30*/ UnityEngine.Transform _transform;
        /*0x38*/ System.Collections.Generic.HashSet<string> _supportedTriggers;
        /*0x40*/ System.Action<string> OnAnimationTrigger;

        /*0x28ec7fc*/ AnimationTriggers();
        /*0x28ec2a8*/ void add_OnAnimationTrigger(System.Action<string> value);
        /*0x28ec358*/ void remove_OnAnimationTrigger(System.Action<string> value);
        /*0x28ec408*/ void Awake();
        /*0x28ec42c*/ void AnimationTrigger(string triggerName);
        /*0x28ec584*/ void SetTrigger(int triggerId);
        /*0x28ec5c4*/ void SetBool(int boolId, bool value);
        /*0x28ec5e0*/ bool SupportsTrigger(string triggerName);
        /*0x28ec648*/ void InitializeSupportedTriggers();
    }

    class AnimationTriggerConfig
    {
        /*0x10*/ string triggerName;
        /*0x18*/ UnityEngine.GameObject prefab;
        /*0x20*/ UnityEngine.Transform locator;

        /*0x28ec804*/ AnimationTriggerConfig();
    }

    class AnimDrivenJoints_KeyRemapAttributes
    {
        /*0x10*/ string SourceObject;
        /*0x18*/ string TargetObject;
        /*0x20*/ Yeti.AnimDrivenJoints_KeyRemapAttributes.SourceAttribute SourceXform;
        /*0x24*/ Yeti.AnimDrivenJoints_KeyRemapAttributes.TargetAttribute TargetXform;
        /*0x28*/ UnityEngine.Vector3 Swizzle;
        /*0x34*/ UnityEngine.Vector3 Multiplier;
        /*0x40*/ UnityEngine.Vector3 Offset;
        /*0x50*/ UnityEngine.Transform SourceObjectTransform;
        /*0x58*/ UnityEngine.Transform TargetObjectTransform;

        /*0x28ec80c*/ AnimDrivenJoints_KeyRemapAttributes();

        enum SourceAttribute
        {
            Position = 0,
            Scale = 1,
        }

        enum TargetAttribute
        {
            Position = 0,
            Scale = 1,
        }
    }

    class AnimDrivenJoints_RotBlendAttributes
    {
        /*0x10*/ string TargetObject;
        /*0x18*/ string SrcObjectA;
        /*0x20*/ UnityEngine.Quaternion BindPose;
        /*0x30*/ float Blend;
        /*0x38*/ UnityEngine.Transform SrcObjectATransform;
        /*0x40*/ UnityEngine.Transform TargetObjectTransform;

        /*0x28ec814*/ AnimDrivenJoints_RotBlendAttributes();
    }

    class AnimDrivenJoints_DrivenKeyAttributes
    {
        /*0x10*/ string TargetObject;
        /*0x18*/ string SrcObjectA;
        /*0x20*/ Yeti.AnimDrivenJoints_DrivenKeyAttributes.DriverAttribute DriverAttr;
        /*0x24*/ Yeti.AnimDrivenJoints_DrivenKeyAttributes.TargetAttribute DrivenAttr;
        /*0x28*/ float RangeStart;
        /*0x2c*/ float RangeEnd;
        /*0x30*/ UnityEngine.Vector4 KeyA;
        /*0x40*/ UnityEngine.Vector4 KeyB;
        /*0x50*/ UnityEngine.Transform SrcObjectATransform;
        /*0x58*/ UnityEngine.Transform TargetObjectTransform;

        /*0x28ec81c*/ AnimDrivenJoints_DrivenKeyAttributes();

        enum DriverAttribute
        {
            PosX = 0,
            PosY = 1,
            PosZ = 2,
            RotX = 3,
            RotY = 4,
            RotZ = 5,
            RotW = 6,
            ScaleX = 7,
            ScaleY = 8,
            ScaleZ = 9,
        }

        enum TargetAttribute
        {
            Position = 0,
            Rotation = 1,
            Scale = 2,
        }
    }

    class AnimDrivenJoints : UnityEngine.MonoBehaviour
    {
        /*0x20*/ System.Collections.Generic.List<Yeti.AnimDrivenJoints_KeyRemapAttributes> KeyRemap;
        /*0x28*/ System.Collections.Generic.List<Yeti.AnimDrivenJoints_RotBlendAttributes> RotationBlend;
        /*0x30*/ System.Collections.Generic.List<Yeti.AnimDrivenJoints_DrivenKeyAttributes> DrivenKey;
        /*0x38*/ int rotNumTargets;
        /*0x3c*/ int keyNumTargets;
        /*0x40*/ int drivenNumTargets;

        /*0x28ed068*/ AnimDrivenJoints();
        /*0x28ec824*/ void Awake();
        /*0x28ecb3c*/ void LateUpdate();
    }

    class AnimRemap : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.Transform[] sourceObject;
        /*0x28*/ UnityEngine.Transform[] targetObject;
        /*0x30*/ Yeti.AnimRemap.SourceType[] sourceXform;
        /*0x38*/ Yeti.AnimRemap.TargetType[] targetXform;
        /*0x40*/ UnityEngine.Vector3[] swizzle;
        /*0x48*/ UnityEngine.Vector3[] multiplier;
        /*0x50*/ UnityEngine.Vector3[] offset;
        /*0x58*/ float numTargets;

        /*0x28ed9bc*/ AnimRemap();
        /*0x28ed198*/ void Start();
        /*0x28ed1b8*/ void LateUpdate();

        enum SourceType
        {
            Position = 0,
            Scale = 1,
        }

        enum TargetType
        {
            Position = 0,
            Rotation = 1,
            Scale = 2,
        }
    }

    class AnimScaleTo : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.Vector3 _startScale;
        /*0x54*/ UnityEngine.Vector3 _endScale;
        /*0x60*/ float _animTime;
        /*0x64*/ DG.Tweening.Ease _easeType;
        /*0x68*/ DG.Tweening.EaseFunction _easeFunction;
        /*0x70*/ UnityEngine.Transform _transform;

        /*0x28edbe8*/ AnimScaleTo();
        /*0x28ed9c4*/ UnityEngine.Transform get_Transform();
        /*0x28eda50*/ void Awake();
        /*0x28eda78*/ void OnPlay();
        /*0x28edaa0*/ void OnSkip();
        /*0x28edad0*/ void UpdateAnimation(float deltaTime);
    }

    class AnimSharingUtilities : UnityEngine.MonoBehaviour
    {
        /*0x20*/ System.Collections.Generic.List<Yeti.AnimSharingUtilities_KeyRemapAttributes> KeyRemap;
        /*0x28*/ System.Collections.Generic.List<Yeti.AnimSharingUtilities_RotBlendAttributes> RotationBlend;
        /*0x30*/ System.Collections.Generic.List<Yeti.AnimSharingUtilities_DrivenKeyAttributes> DrivenKey;
        /*0x38*/ int rotNumTargets;
        /*0x3c*/ int keyNumTargets;
        /*0x40*/ int drivenNumTargets;

        /*0x28ee464*/ AnimSharingUtilities();
        /*0x28edc5c*/ void Awake();
        /*0x28edf38*/ void LateUpdate();
    }

    class AnimSharingUtilities_DrivenKeyAttributes
    {
        /*0x10*/ UnityEngine.GameObject SrcObjectA;
        /*0x18*/ Yeti.AnimSharingUtilities_DrivenKeyAttributes.DriverAttribute DriverAttr;
        /*0x1c*/ float RangeStart;
        /*0x20*/ float RangeEnd;
        /*0x28*/ UnityEngine.GameObject TargetObject;
        /*0x30*/ Yeti.AnimSharingUtilities_DrivenKeyAttributes.TargetAttribute DrivenAttr;
        /*0x34*/ UnityEngine.Vector4 KeyA;
        /*0x44*/ UnityEngine.Vector4 KeyB;
        /*0x58*/ UnityEngine.Transform SrcObjectATransform;
        /*0x60*/ UnityEngine.Transform TargetObjectTransform;

        /*0x28ee594*/ AnimSharingUtilities_DrivenKeyAttributes();

        enum DriverAttribute
        {
            PosX = 0,
            PosY = 1,
            PosZ = 2,
            RotX = 3,
            RotY = 4,
            RotZ = 5,
            RotW = 6,
            ScaleX = 7,
            ScaleY = 8,
            ScaleZ = 9,
        }

        enum TargetAttribute
        {
            Position = 0,
            Rotation = 1,
            Scale = 2,
        }
    }

    class AnimSharingUtilities_KeyRemapAttributes
    {
        /*0x10*/ UnityEngine.GameObject SourceObject;
        /*0x18*/ UnityEngine.GameObject TargetObject;
        /*0x20*/ Yeti.AnimSharingUtilities_KeyRemapAttributes.SourceAttribute SourceXform;
        /*0x24*/ Yeti.AnimSharingUtilities_KeyRemapAttributes.TargetAttribute TargetXform;
        /*0x28*/ UnityEngine.Vector3 Swizzle;
        /*0x34*/ UnityEngine.Vector3 Multiplier;
        /*0x40*/ UnityEngine.Vector3 Offset;
        /*0x50*/ UnityEngine.Transform SourceObjectTransform;
        /*0x58*/ UnityEngine.Transform TargetObjectTransform;

        /*0x28ee59c*/ AnimSharingUtilities_KeyRemapAttributes();

        enum SourceAttribute
        {
            Position = 0,
            Scale = 1,
        }

        enum TargetAttribute
        {
            Position = 0,
            Scale = 1,
        }
    }

    class AnimSharingUtilities_RotBlendAttributes
    {
        /*0x10*/ UnityEngine.Quaternion BindPose;
        /*0x20*/ UnityEngine.GameObject SrcObjectA;
        /*0x28*/ UnityEngine.GameObject TargetObject;
        /*0x30*/ float Blend;
        /*0x38*/ UnityEngine.Transform SrcObjectATransform;
        /*0x40*/ UnityEngine.Transform TargetObjectTransform;

        /*0x28ee5a4*/ AnimSharingUtilities_RotBlendAttributes();
    }

    class AvatarRigPartSwapper : UnityEngine.MonoBehaviour
    {
        /*0x20*/ int _swapToPartIndex;
        /*0x28*/ System.Collections.Generic.List<UnityEngine.GameObject> _swappableParts;
        /*0x30*/ int _lastPartIndex;

        /*0x28ee6b0*/ AvatarRigPartSwapper();
        /*0x28ee5ac*/ void OnDidApplyAnimationProperties();
        /*0x28ee5b0*/ void UpdatePartActiveStates();
    }

    class Buzzer : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.GameObject _buzzObject;
        /*0x50*/ float _duration;
        /*0x54*/ float _intensity;
        /*0x58*/ int _vibrato;
        /*0x5c*/ float _randomness;
        /*0x60*/ bool _snapValues;
        /*0x61*/ bool _fadeOut;
        /*0x62*/ bool _hideOnComplete;
        /*0x63*/ bool _playOnEnable;
        /*0x68*/ DG.Tweening.Tween _buzzerTween;

        /*0x28ee990*/ Buzzer();
        /*0x28ee6c0*/ void Awake();
        /*0x28ee750*/ void OnEnable();
        /*0x28ee7a8*/ void OnPlay();
        /*0x28ee898*/ void OnSkip();
        /*0x28ee89c*/ void OnStop();
        /*0x28ee6c4*/ void ResetBuzzer();
        /*0x28ee8e0*/ void OnPause();
        /*0x28ee938*/ void OnResume();
        /*0x28ee9a8*/ void <OnPlay>b__12_0();
    }

    class CombatMultipleAnimatorController
    {
        static /*0x0*/ UnityEngine.Animator[] EmptyComponentsCollection;
        /*0x10*/ UnityEngine.Animator[] _animators;
        /*0x18*/ float _localSpeed;
        /*0x1c*/ float _globalSpeed;
        /*0x20*/ bool _isStarted;
        /*0x21*/ bool _isPaused;

        static /*0x28eeb64*/ CombatMultipleAnimatorController();
        /*0x28eeaec*/ CombatMultipleAnimatorController();
        /*0x28ee9c0*/ void Initialize(UnityEngine.GameObject go);
        /*0x28eeab4*/ void Play();
        /*0x28eeac0*/ void Stop();
        /*0x28eeac8*/ void Pause();
        /*0x28eead4*/ void Resume();
        /*0x28eeadc*/ void SetGlobalSpeed(float speed);
        /*0x28eeae4*/ void SetSpeed(float speed);
        /*0x28eea2c*/ void UpdateSpeed();
    }

    class Deactivation : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.GameObject _object;
        /*0x50*/ bool _startObjectActive;
        /*0x51*/ bool _reactivateOnStop;

        /*0x28eec9c*/ Deactivation();
        /*0x28eec20*/ void Awake();
        /*0x28eec48*/ void OnPlay();
        /*0x28eec74*/ void OnStop();
    }

    class FadeInOutCanvasGroup : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.CanvasGroup _canvas;
        /*0x50*/ float _startAlpha;
        /*0x54*/ float _endAlpha;
        /*0x58*/ float _fadeTime;
        /*0x5c*/ DG.Tweening.Ease _easeType;
        /*0x60*/ DG.Tweening.Tween _fadeTween;

        /*0x28eee2c*/ FadeInOutCanvasGroup();
        /*0x28eecac*/ void OnPlay();
        /*0x28eed2c*/ void OnSkip();
        /*0x28eed4c*/ void OnStop();
        /*0x28eed7c*/ void OnPause();
        /*0x28eedd4*/ void OnResume();
    }

    class FadeInOutLifetime : Yeti.AbstractFadeInOutGraphics<UnityEngine.UI.Graphic>
    {
        /*0x28eee84*/ FadeInOutLifetime();
        /*0x28eee3c*/ UnityEngine.Color GetColor(UnityEngine.UI.Graphic targetGraphic);
        /*0x28eee60*/ void SetColor(UnityEngine.UI.Graphic targetGraphic, UnityEngine.Color color);
    }

    enum FadeStyle
    {
        FadeInOut = 0,
        FadeIn = 1,
        FadeOutIn = 2,
    }

    class AbstractFadeInOutGraphics<T> : Yeti.ProgrammaticAnimation
    {
        /*0x0*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x0*/ bool _playOnEnable;
        /*0x0*/ float _startFadeInTime;
        /*0x0*/ float _fadeInTime;
        /*0x0*/ float _startFadeOutTime;
        /*0x0*/ float _fadeOutTime;
        /*0x0*/ Yeti.YetiAudioEvent _startFadeInAudioEvent;
        /*0x0*/ T[] _targetGraphics;
        /*0x0*/ bool _loop;
        /*0x0*/ bool _fadeInOnly;
        /*0x0*/ Yeti.FadeStyle _fadeStyle;
        /*0x0*/ bool _disableOnComplete;
        /*0x0*/ float[] _startingAlphaValues;
        /*0x0*/ float _fadeInTimer;
        /*0x0*/ float _fadeOutTimer;
        /*0x0*/ UnityEngine.Color _targetColor;
        /*0x0*/ Yeti.AbstractFadeInOutGraphics.AnimationState<T> _animationState;

        /*0x1f309e4*/ AbstractFadeInOutGraphics();
        /*0x1ffc854*/ UnityEngine.Color GetColor(T targetGraphic);
        /*0x1ffc854*/ void SetColor(T targetGraphic, UnityEngine.Color color);
        /*0x1f309e4*/ void Awake();
        /*0x1f309e4*/ void OnEnable();
        /*0x1f309e4*/ void OnPlay();
        /*0x1f309e4*/ void OnSkip();
        /*0x1f309e4*/ void OnStop();
        void UpdateAnimation(float deltaTime);
        void FadeIn(float deltaTime);
        void FadeOut(float deltaTime);
        /*0x1f309e4*/ void SetGraphicsToDefault();

        enum AnimationState<T>
        {
            Default = 0,
            FadingIn = 1,
            WaitingToFadeOut = 2,
            FadingOut = 3,
            Complete = 4,
        }
    }

    class FadeInOutLifetimeSpriteRenderer : Yeti.AbstractFadeInOutGraphics<UnityEngine.SpriteRenderer>
    {
        /*0x28eeefc*/ FadeInOutLifetimeSpriteRenderer();
        /*0x28eeecc*/ UnityEngine.Color GetColor(UnityEngine.SpriteRenderer targetGraphic);
        /*0x28eeee4*/ void SetColor(UnityEngine.SpriteRenderer targetGraphic, UnityEngine.Color color);
    }

    class FadeOutLifetime : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ float _startFadeTime;
        /*0x4c*/ float _fadeOutTime;
        /*0x50*/ UnityEngine.UI.Graphic[] _targetGraphics;
        /*0x58*/ float[] _startingAlphaValues;
        /*0x60*/ float _fadeOutTimer;

        /*0x28ef20c*/ FadeOutLifetime();
        /*0x28eef44*/ void Awake();
        /*0x28ef020*/ void OnStop();
        /*0x28ef0d8*/ void UpdateAnimation(float deltaTime);
    }

    class GameSpeedAnimation : UnityEngine.MonoBehaviour
    {
        /*0x28ef224*/ GameSpeedAnimation();
        void SetGameSpeed(float speed);
    }

    class LegacyAnimationProgrammaticAnimation : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ string _animationClipName;
        /*0x50*/ UnityEngine.Animation _animation;

        /*0x28ef5f4*/ LegacyAnimationProgrammaticAnimation();
        /*0x28ef22c*/ void Awake();
        /*0x28ef2c8*/ void OnPlay();
        /*0x28ef374*/ void OnPause();
        /*0x28ef3f4*/ void OnResume();
        /*0x28ef474*/ void OnStop();
        /*0x28ef524*/ void OnSkip();
    }

    class partSwap : UnityEngine.MonoBehaviour
    {
        /*0x20*/ int swap;
        /*0x28*/ System.Collections.Generic.List<UnityEngine.GameObject> objects;
        /*0x30*/ int _lastPartIndex;

        /*0x28ef708*/ partSwap();
        /*0x28ef604*/ void OnDidApplyAnimationProperties();
        /*0x28ef608*/ void UpdatePartActiveStates();
    }

    class Pinger : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.UI.Graphic _image;
        /*0x50*/ UnityEngine.Vector3 _startScale;
        /*0x5c*/ UnityEngine.Vector3 _targetScale;
        /*0x68*/ float _pingTime;
        /*0x6c*/ DG.Tweening.Ease _scaleEaseType;
        /*0x70*/ DG.Tweening.Ease _fadeEaseType;
        /*0x74*/ UnityEngine.Color _startColor;
        /*0x84*/ UnityEngine.Color _targetColor;
        /*0x98*/ DG.Tweening.Sequence _pingerSequence;

        /*0x28efa54*/ Pinger();
        /*0x28ef718*/ void Awake();
        /*0x28ef740*/ void OnPlay();
        /*0x28ef930*/ void OnSkip();
        /*0x28ef948*/ void OnStop();
        /*0x28ef9a4*/ void OnPause();
        /*0x28ef9fc*/ void OnResume();
        /*0x28efa64*/ void <OnPlay>b__10_0();
    }

    class PingPongScale : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ bool _changeXAxis;
        /*0x49*/ bool _changeYAxis;
        /*0x4a*/ bool _changeZAxis;
        /*0x4c*/ UnityEngine.Vector3 _minValue;
        /*0x58*/ UnityEngine.Vector3 _maxValue;
        /*0x64*/ float _cycleTime;
        /*0x68*/ DG.Tweening.Ease _minToMaxEase;
        /*0x6c*/ DG.Tweening.Ease _maxToMinEase;
        /*0x70*/ bool _isEndless;
        /*0x74*/ int _totalCycles;
        /*0x78*/ bool _playOnEnable;
        /*0x80*/ DG.Tweening.Sequence _scaleTween;

        /*0x28efe64*/ PingPongScale();
        /*0x28efa7c*/ void OnEnable();
        /*0x28efa8c*/ void OnPlay();
        /*0x28efd8c*/ void OnStop();
        /*0x28efcec*/ void ApplyScale(UnityEngine.Vector3 newValue);
        /*0x28efda4*/ void OnPause();
        /*0x28efdfc*/ void OnResume();
        /*0x28efe54*/ void OnSpeedChanged(float newSpeed);
        /*0x28efe74*/ UnityEngine.Vector3 <OnPlay>b__13_0();
        /*0x28efe94*/ UnityEngine.Vector3 <OnPlay>b__13_1();
    }

    class PositionOscillator : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ bool _xAxis;
        /*0x49*/ bool _yAxis;
        /*0x4a*/ bool _zAxis;
        /*0x4c*/ UnityEngine.Vector3 _frequency;
        /*0x58*/ UnityEngine.Vector3 _magnitude;
        /*0x64*/ UnityEngine.Vector3 _pos;
        /*0x70*/ UnityEngine.Vector3 _axis;

        /*0x28effd8*/ PositionOscillator();
        /*0x28efeb4*/ void Start();
        /*0x28eff1c*/ void UpdateAnimation(float deltaTime);
    }

    class ProgrammaticAnimation : UnityEngine.MonoBehaviour, Yeti.IAnimChainable
    {
        /*0x20*/ string _animationName;
        /*0x28*/ bool _isStarted;
        /*0x29*/ bool _isRunning;
        /*0x2a*/ bool _isComplete;
        /*0x2c*/ float _animationSpeed;
        /*0x30*/ float <ElapsedTime>k__BackingField;
        /*0x38*/ Yeti.ISequenceEnd _onCompleteCallback;
        /*0x40*/ System.Action _onCompleteAction;

        /*0x28ec088*/ ProgrammaticAnimation();
        /*0x28effe8*/ bool get_IsComplete();
        /*0x28efff0*/ bool get_IsRunning();
        /*0x28efff8*/ float get_ElapsedTime();
        /*0x28f0000*/ void set_ElapsedTime(float value);
        /*0x28f0008*/ void Play(System.Action onCompleteCallback);
        /*0x28f0024*/ void Play(Yeti.ISequenceEnd onCompleteCallback);
        /*0x28ee760*/ void Play();
        /*0x28f0060*/ void OnPlay();
        /*0x28f0064*/ void Skip();
        /*0x28f00a0*/ void OnSkip();
        /*0x28ec0b0*/ void Stop();
        /*0x28f0040*/ void StopInternal();
        /*0x28f00a4*/ void OnStop();
        /*0x28f00a8*/ void Pause();
        /*0x28f00cc*/ void OnPause();
        /*0x28f00d0*/ void Resume();
        /*0x28f00f8*/ void OnResume();
        /*0x28f00fc*/ void SetAnimationSpeed(float speed);
        /*0x28f010c*/ void OnSpeedChanged(float newSpeed);
        /*0x28f0110*/ void Update();
        /*0x28f0154*/ void UpdateAnimation(float deltaTime);
        /*0x28ec110*/ void FireOnCompleteCallback();
    }

    class ProgrammaticAnimationController
    {
        static /*0x0*/ Yeti.ProgrammaticAnimation[] EmptyComponentsCollection;
        /*0x10*/ Yeti.ProgrammaticAnimation[] _animationComponents;
        /*0x18*/ float _localSpeed;
        /*0x1c*/ float _globalSpeed;

        static /*0x28f04d0*/ ProgrammaticAnimationController();
        /*0x28f0458*/ ProgrammaticAnimationController();
        /*0x28f0158*/ void Initialize(UnityEngine.GameObject go);
        /*0x28f01bc*/ void Initialize(Yeti.ProgrammaticAnimation[] animations);
        /*0x28f01c4*/ void Play();
        /*0x28f0220*/ void Stop();
        /*0x28f027c*/ void Pause();
        /*0x28f02f4*/ void Resume();
        /*0x28f0370*/ void Skip();
        /*0x28f03cc*/ void SetGlobalSpeed(float speed);
        /*0x28f0450*/ void SetSpeed(float speed);
        /*0x28f03d4*/ void UpdateSpeed();
    }

    class ProgrammaticAnimationV2
    {
        /*0x10*/ bool _isStarted;
        /*0x11*/ bool _isRunning;
        /*0x12*/ bool _isComplete;
        /*0x14*/ float _animationSpeed;
        /*0x18*/ float <ElapsedTime>k__BackingField;
        /*0x20*/ Yeti.ISequenceEnd _onCompleteCallback;
        /*0x28*/ System.Action _onCompleteAction;

        /*0x28f0824*/ ProgrammaticAnimationV2();
        /*0x28f0544*/ bool get_IsComplete();
        /*0x28f054c*/ bool get_IsRunning();
        /*0x28f0554*/ float get_ElapsedTime();
        /*0x28f055c*/ void set_ElapsedTime(float value);
        /*0x28f0564*/ void Play(System.Action onCompleteCallback);
        /*0x28f05c8*/ void Play(Yeti.ISequenceEnd onCompleteCallback);
        /*0x28f0580*/ void Play();
        /*0x28f0604*/ void OnPlay();
        /*0x28f0608*/ void Skip();
        /*0x28f072c*/ void OnSkip();
        /*0x28f0730*/ void Stop();
        /*0x28f05e4*/ void StopInternal();
        /*0x28f0790*/ void OnStop();
        /*0x28f0794*/ void Pause();
        /*0x28f07b8*/ void OnPause();
        /*0x28f07bc*/ void Resume();
        /*0x28f07e4*/ void OnResume();
        /*0x28f07e8*/ void SetAnimationSpeed(float speed);
        /*0x28f07f8*/ void OnSpeedChanged(float newSpeed);
        /*0x28f07fc*/ void Update(float deltaTime);
        /*0x28f0820*/ void UpdateAnimation(float deltaTime);
        /*0x28f0644*/ void FireOnCompleteCallback();
    }

    class ProgrammaticAnimationV2Timeline : Yeti.ProgrammaticAnimationV2
    {
        /*0x30*/ System.Collections.Generic.List<float> _animationStartTimes;
        /*0x38*/ System.Collections.Generic.List<Yeti.ProgrammaticAnimationV2> _animations;
        /*0x40*/ float _timelineEndTime;

        /*0x28f09d8*/ ProgrammaticAnimationV2Timeline();
        /*0x28f0834*/ System.Collections.Generic.IReadOnlyList<Yeti.ProgrammaticAnimationV2> get_Animations();
        /*0x28f083c*/ void AddSegment(float startTime, Yeti.ProgrammaticAnimationV2 anim);
        /*0x28f08d0*/ void SetEndTime(float timelineEndTime);
        /*0x28f08d8*/ void UpdateAnimation(float deltaTime);
    }

    class RotationOscillator : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ bool _xAxis;
        /*0x49*/ bool _yAxis;
        /*0x4a*/ bool _zAxis;
        /*0x4c*/ UnityEngine.Vector3 _frequency;
        /*0x58*/ UnityEngine.Vector3 _magnitude;
        /*0x64*/ UnityEngine.Quaternion _rotation;
        /*0x74*/ UnityEngine.Vector3 _axis;
        /*0x80*/ float <FrequencyScalar>k__BackingField;
        /*0x84*/ float <MagnitudeScalar>k__BackingField;

        /*0x28f0c3c*/ RotationOscillator();
        /*0x28f0abc*/ float get_FrequencyScalar();
        /*0x28f0ac4*/ void set_FrequencyScalar(float value);
        /*0x28f0acc*/ float get_MagnitudeScalar();
        /*0x28f0ad4*/ void set_MagnitudeScalar(float value);
        /*0x28f0adc*/ void Start();
        /*0x28f0b44*/ void UpdateAnimation(float deltaTime);
    }

    class ScaleOscillator : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ bool _xAxis;
        /*0x49*/ bool _yAxis;
        /*0x4a*/ bool _zAxis;
        /*0x4c*/ UnityEngine.Vector3 _frequency;
        /*0x58*/ UnityEngine.Vector3 _magnitude;
        /*0x64*/ UnityEngine.Vector3 _scale;
        /*0x70*/ UnityEngine.Vector3 _axis;

        /*0x28f0d78*/ ScaleOscillator();
        /*0x28f0c54*/ void Start();
        /*0x28f0cbc*/ void UpdateAnimation(float deltaTime);
    }

    class ScalePop : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x50*/ float _scaleToTarget;
        /*0x54*/ float _scaleUpTime;
        /*0x58*/ float _scaleDownTime;
        /*0x5c*/ float _startScaleTarget;
        /*0x60*/ float _endScaleTarget;
        /*0x64*/ Yeti.YetiAudioEvent _audioEvent;
        /*0x6c*/ Yeti.ScalePop.AudioEventTriggerTime _audioEventTriggerTime;
        /*0x70*/ bool _scalingForward;
        /*0x74*/ UnityEngine.Vector3 _startScale;
        /*0x80*/ UnityEngine.Vector3 _stopScale;
        /*0x8c*/ UnityEngine.Vector3 _endScale;
        /*0x98*/ float _timer;

        /*0x28f138c*/ ScalePop();
        /*0x28f0d88*/ void Awake();
        /*0x28f0e44*/ void OnPlay();
        /*0x28f0edc*/ void OnSkip();
        /*0x28f0f54*/ void OnStop();
        /*0x28f0f58*/ void UpdateAnimation(float deltaTime);
        /*0x28f10ac*/ void FlipAnimation();
        /*0x28f0f2c*/ void FinishAnimation();
        /*0x28f0e90*/ void PlaySound();

        enum AudioEventTriggerTime
        {
            OnStart = 0,
            OnFlip = 1,
            OnFinish = 2,
        }
    }

    class ScreenShakeController : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.GameEventManager _gameEventManager;
        /*0x28*/ System.Collections.Generic.List<Yeti.ScreenShakeController.Shaker> _currentShakers;
        /*0x30*/ UnityEngine.Transform _transform;
        /*0x38*/ bool _initialized;
        /*0x3c*/ float _totalTime;

        /*0x28f18d0*/ ScreenShakeController();
        /*0x28f13b4*/ void Awake();
        /*0x28f13b8*/ void Initialize();
        /*0x28f14c4*/ void OnEnable();
        /*0x28f15a4*/ void OnDisable();
        /*0x28f161c*/ void AddShake(Yeti.ScreenShakeConfig config);
        /*0x28f16d8*/ void OnUpdate(float deltaTime);

        struct Shaker
        {
            /*0x10*/ float _startTime;
            /*0x18*/ Yeti.ScreenShakeConfig _config;

            /*0x28f16b0*/ Shaker(Yeti.ScreenShakeConfig config, float time);
            /*0x28f184c*/ bool TrySample(float time, ref UnityEngine.Vector3 currentValue);
        }
    }

    class ScreenShakeProgrammaticAnimation : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.ScreenShakeLevel _level;
        /*0x24*/ float _delay;
        /*0x28*/ bool _playOnStart;
        /*0x30*/ Yeti.GameEventManager _gameEventManager;
        /*0x38*/ Yeti.CombatGuiModel _combatModel;
        /*0x40*/ bool _isInitialized;
        /*0x48*/ Yeti.ScreenShakeConfig _config;
        /*0x50*/ float _playTime;

        /*0x28f1bdc*/ ScreenShakeProgrammaticAnimation();
        /*0x28f1958*/ void Awake();
        /*0x28f1ac0*/ void OnEnable();
        /*0x28f1ba0*/ void Update();
        /*0x28f195c*/ void Initialize();
        /*0x28f1afc*/ void Play();
    }

    class Snackbar : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.GameObject _snackbar;
        /*0x50*/ UnityEngine.CanvasGroup _canvasGroup;
        /*0x58*/ float _translateY;
        /*0x5c*/ float _duration;
        /*0x60*/ float _delayBeforeFading;
        /*0x64*/ DG.Tweening.Ease _translateEaseType;
        /*0x68*/ DG.Tweening.Ease _fadeEaseType;
        /*0x70*/ DG.Tweening.Sequence _snackbarSequence;

        /*0x28f1ef0*/ Snackbar();
        /*0x28f1be4*/ void OnPlay();
        /*0x28f1df0*/ void OnSkip();
        /*0x28f1df4*/ void OnStop();
        /*0x28f1e40*/ void OnPause();
        /*0x28f1e98*/ void OnResume();
        /*0x28f1f00*/ void <OnPlay>b__8_0();
    }

    class Spin : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.Vector3 _amount;

        /*0x28f1f5c*/ Spin();
        /*0x28f1f18*/ void UpdateAnimation(float deltaTime);
    }

    class SpinnerWheelAnimation : Yeti.ProgrammaticAnimation
    {
        static float TweenUpdateInterval = 0.10000000149011612;
        /*0x48*/ float _totalTime;
        /*0x4c*/ int _maxRotationsPerSecond;
        /*0x50*/ DG.Tweening.Ease _ease;
        /*0x54*/ bool _rotateClockwise;
        /*0x58*/ System.Action<Yeti.SpinnerWheelAnimation> AnimationComplete;
        /*0x60*/ DG.Tweening.Tweener _rotateAction;
        /*0x68*/ DG.Tweening.TweenCallback _animationCompleteHandler;
        /*0x70*/ System.Action<float> _tweenSpeedUpdateCallback;
        /*0x78*/ float _previousTweenValue;
        /*0x7c*/ float _elapsedTime;
        /*0x80*/ int _extraRotations;
        /*0x84*/ float _totalRotation;

        /*0x28f2374*/ SpinnerWheelAnimation();
        /*0x28f1f6c*/ void Awake();
        /*0x28f201c*/ void Play(float endAngle, System.Action<float> tweenSpeedUpdateCallback);
        /*0x28f2184*/ void OnPause();
        /*0x28f21dc*/ void OnResume();
        /*0x28f2234*/ void UpdateAnimation(float deltaTime);
        /*0x28f2354*/ void HandleAnimationComplete();
        /*0x28f217c*/ void ResetElapsedTime();
        /*0x28f2174*/ void ResetPreviousDelta();
    }

    class Translate : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.Vector3 _translation;
        /*0x54*/ float _startTime;
        /*0x58*/ float _translationTime;
        /*0x5c*/ bool _setCustom2dStartPosition;
        /*0x60*/ UnityEngine.Vector2 _customStartPosition2d;
        /*0x68*/ UnityEngine.Vector3 _startPosition;
        /*0x74*/ UnityEngine.Vector3 _targetPosition;
        /*0x80*/ float _translationTimer;
        /*0x84*/ bool _hasRectTransform;
        /*0x88*/ UnityEngine.RectTransform _rectTransform;
        /*0x90*/ UnityEngine.Transform _transform;

        /*0x28f2620*/ Translate();
        /*0x28f2394*/ void Awake();
        /*0x28f2510*/ void OnPlay();
        /*0x28f2570*/ void OnSkip();
        /*0x28f2574*/ void OnStop();
        /*0x28f249c*/ void SetupInitialValues();
        /*0x28f2538*/ void SetPosition(UnityEngine.Vector3 position);
        /*0x28f2584*/ void UpdateAnimation(float deltaTime);
    }

    class TweenImageFill : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ UnityEngine.UI.Image _image;
        /*0x50*/ float _startFillAmount;
        /*0x54*/ float _endFillAmount;
        /*0x58*/ float _fillTime;
        /*0x5c*/ DG.Tweening.Ease _easeType;
        /*0x60*/ bool _playOnEnable;
        /*0x68*/ DG.Tweening.Tween _fillTween;

        /*0x28f27ac*/ TweenImageFill();
        /*0x28f2638*/ void OnEnable();
        /*0x28f2648*/ void OnPlay();
        /*0x28f26c8*/ void OnSkip();
        /*0x28f26cc*/ void OnStop();
        /*0x28f26fc*/ void OnPause();
        /*0x28f2754*/ void OnResume();
    }

    class YetiSimpleAnimation : SimpleAnimation
    {
        /*0x88*/ bool _useRandomStartTime;
        /*0x90*/ UnityEngine.AnimationClip[] _clips;
        /*0x98*/ bool _initialized;

        /*0x28f29f8*/ YetiSimpleAnimation();
        /*0x28f27bc*/ void InitializeClips();
        /*0x28f2854*/ bool Play();
        /*0x28f28d4*/ void PlayClip(UnityEngine.AnimationClip toPlay);
    }

    class BatchBootSetUpdater
    {
        /*0x28f2a00*/ BatchBootSetUpdater();
    }

    class BootEntryPoint : UnityEngine.MonoBehaviour, CapitalGames.InstanceInitializedCallback
    {
        static string BootAllMetricsId = "BootAll";
        static string StartingClientMetricsId = "StartingClient";
        /*0x20*/ Yeti.ComponentModule _componentModule;

        /*0x28f350c*/ BootEntryPoint();
        /*0x28f2a08*/ void Awake();
        /*0x28f2e64*/ System.Collections.IEnumerator DelayThenLoadAppSettings();
        /*0x28f2ef8*/ void OnAppSettingsLoaded(Yeti.AppSettings appSettings);
        /*0x28f3508*/ void Invoke(CapitalGames.IInitializable instance);
        /*0x28f2ba0*/ void NotifyNativeCodeOfBootEntry();

        class <DelayThenLoadAppSettings>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BootEntryPoint <>4__this;

            /*0x28f2ed0*/ <DelayThenLoadAppSettings>d__4(int <>1__state);
            /*0x28f3514*/ void System.IDisposable.Dispose();
            /*0x28f3518*/ bool MoveNext();
            /*0x28f3630*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x28f3638*/ void System.Collections.IEnumerator.Reset();
            /*0x28f3670*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class BuildInfo
    {
        static string DefaultBranchName = "develop";
        static string MajorMinorVersion = "26.0";
        static /*0x0*/ string Branch;
        static /*0x8*/ string TimeStamp;
        static /*0x10*/ string MachineName;
        static /*0x18*/ string JobName;
        static /*0x20*/ string BuildId;
        static /*0x28*/ string BugFixVersion;
        static /*0x30*/ bool IsAutomationBuild;
        static /*0x38*/ string BuildProfile;
        static /*0x40*/ string BuildVersion;
        static /*0x48*/ string GitCommitHash;

        static /*0x28f3704*/ BuildInfo();
        static /*0x28f3678*/ string GetBuildVersion(string majorMinorVersion, string bugFixVersion);
        static /*0x28f2ca0*/ string ToString();
        static /*0x28f36ec*/ string CreateBuildProfileString();
    }

    class ClientVersionInfo
    {
        /*0x10*/ System.Collections.Generic.List<int> _versionNumbers;

        static /*0x28f391c*/ System.Collections.Generic.List<int> ParseVersion(string s);
        /*0x28f38e4*/ ClientVersionInfo(string s);
        /*0x28f3ac4*/ bool IsGreaterThan(Yeti.ClientVersionInfo other);
        /*0x28f3c08*/ bool IsMajorMinorGreaterThanOrEqualTo(Yeti.ClientVersionInfo other);
        /*0x28f3d4c*/ bool Equals(object obj);
        /*0x28f3f00*/ int GetHashCode();
        /*0x28f3fa4*/ bool IsGreaterThanOrEqualTo(Yeti.ClientVersionInfo other);
        /*0x28f3fe8*/ string ToString();
        /*0x28f3f10*/ long ToLong();
    }

    class ContentVersionUpdater : CapitalGames.IInitializable, Yeti.IRetryableObject, Packages.EA.PopCap.AddressablesAssets.Runtime.ICatalogVersionUpdateCallbackListener
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Yeti.IErrorRouter _errorRouter;
        /*0x20*/ Yeti.IAssetSystemContextProvider _systemContext;
        /*0x28*/ Yeti.ILifecycleController _lifecycleController;
        /*0x30*/ PvzN3xt.Network.DlcVersionStateHandler _dlcVersionStateHandler;
        /*0x38*/ PvzN3xt.Boot.Telemetry.BootFlowPhaseTelemetryDispatcher _bootFlowPhaseTelemetryDispatcher;
        /*0x40*/ Yeti.GameEventManager _gameEventManager;
        /*0x48*/ Yeti.DownloadWarningDisplayer _downloadWarningDisplayer;
        /*0x50*/ PvzN3xt.Nvs.INamedValueService _nvs;
        /*0x58*/ Yeti.OnRetryCompleteDelegate _onRetryCompleteCallback;
        /*0x60*/ CapitalGames.InstanceInitializedCallback _initializedCallback;

        /*0x28f4de8*/ ContentVersionUpdater();
        /*0x28f40f8*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28f4140*/ void AttemptContentUpdate();
        /*0x28f43dc*/ void Yeti.IRetryableObject.Retry(Yeti.OnRetryCompleteDelegate onRetryComplete, Yeti.YetiError error);
        /*0x28f43f8*/ void RequestBuiltinAssetsUpdatePermission(long catalogUpdateBytes, System.Action callback);
        /*0x28f4728*/ void OnCatalogVersionUpdateProgress(long downloadedBytes, long totalBytes);
        /*0x28f47f0*/ void OnBuiltinAssetsUpdateStarted(long totalBytes);
        /*0x28f488c*/ void OnNoCatalogVersionUpdateNeeded();
        /*0x28f49b4*/ void OnCatalogVersionUpdateComplete();
        /*0x28f4bc8*/ void OnCatalogVersionUpdateFailed(string errorMsg);
        /*0x28f43c0*/ void SendEndAssetUpdatePhase();
    }

    class DestroyOnResetContainer : UnityEngine.MonoBehaviour, CapitalGames.ILifecycleAware
    {
        /*0x28f4fbc*/ DestroyOnResetContainer();
        /*0x28f4df0*/ void Awake();
        /*0x28f4e5c*/ void Start();
        /*0x28f4f50*/ void OnAppReset();
    }

    class EntryPoint
    {
        static int TargetFramerate = 30;
        static /*0x0*/ System.DateTime <StartTime>k__BackingField;
        static /*0x8*/ bool <IsInitialized>k__BackingField;
        static /*0x10*/ string TimestampedFileLogPath;

        static /*0x28f5760*/ EntryPoint();
        static /*0x28f4fc4*/ System.DateTime get_StartTime();
        static /*0x28f501c*/ bool get_IsInitialized();
        static /*0x28f5074*/ void set_IsInitialized(bool value);
        static /*0x28f31ac*/ void Initialize(CapitalGames.IModule[] modules);
        static /*0x28f517c*/ void InitLogger();
        static /*0x28f5530*/ void AddConditionalLogAppenders(PopCap.Logging.ILogger logger);
        static /*0x28f5400*/ void ConfigureApplication();
        static /*0x28f5650*/ void LogApplicationDiagnostics();
        static /*0x28f50d4*/ void ProtobufInitializeCodedInputStream();
    }

    interface IEulaAcceptance
    {
        /*0x1f2fe14*/ bool get_IsEulaAccepted();
    }

    class EulaAcceptance : Yeti.IEulaAcceptance
    {
        /*0x10*/ PvzN3xt.PlayerIdentity.IAgeCompliance _ageCompliance;

        /*0x28f5904*/ EulaAcceptance();
        /*0x28f5864*/ bool get_IsEulaAccepted();
    }

    class AudioDataMapInitializer : CapitalGames.IInitializable
    {
        static string WwiseRuntimeDataResourceName = "data.WwiseRuntimeData";
        /*0x10*/ CapitalGames.InstanceInitializedCallback _initializedCallback;
        /*0x18*/ Yeti.IAssetManager _assetManager;
        /*0x20*/ Yeti.GameSoundManager _gameSoundManager;

        /*0x28f5ca0*/ AudioDataMapInitializer();
        /*0x28f590c*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28f5a54*/ void OnAssetLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object asset);
    }

    class GlobalColorConfigLoader : CapitalGames.IInitializable
    {
        static string GlobalColorConfigResourceName = "data.GlobalColorConfig";
        /*0x10*/ CapitalGames.InstanceInitializedCallback _initializedCallback;
        /*0x18*/ Yeti.IAssetManager _assetManager;
        /*0x20*/ Yeti.IUIDatabaseProvider _uiDatabaseProvider;

        /*0x28f607c*/ GlobalColorConfigLoader();
        /*0x28f5ca8*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28f5df0*/ void OnAssetLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object asset);
    }

    interface IAssetPathProvider
    {
        /*0x1f30214*/ string GetPath();
    }

    class UIDatabaseInitializer : CapitalGames.IInitializable
    {
        static string UIMetaDataResourceName = "data.UIMetadata";
        /*0x10*/ CapitalGames.InstanceInitializedCallback _initializedCallback;
        /*0x18*/ Yeti.IAssetManager _assetManager;
        /*0x20*/ Yeti.IUIDatabaseProvider _uiDatabaseProvider;

        /*0x28f6454*/ UIDatabaseInitializer();
        /*0x28f6084*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28f61cc*/ void OnAssetLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object asset);
    }

    enum SoftRebootReason
    {
        Invalid = 0,
        Debugging = 1,
        FatalError = 2,
        LanguageChanged = 3,
        IdentityChanged = 4,
        PlayerBanned = 5,
        ContentUpdate = 6,
        PlayerDeleted = 7,
    }

    interface ILifecycleController : CapitalGames.IInitializable
    {
        /*0x1f309e4*/ void Quit();
        /*0x1f30c88*/ void SoftReboot(Yeti.SoftRebootReason reason, object context);
        /*0x1f2fe14*/ bool IsClientInitializing();
    }

    class LifecycleController : UnityEngine.MonoBehaviour, Yeti.ILifecycleController, CapitalGames.IInitializable, CapitalGames.IPostConstructable
    {
        static /*0x0*/ bool IsAppQuitting;
        static /*0x8*/ Yeti.LifecycleController _instance;
        /*0x20*/ CapitalGames.IInstantiator _instantiator;
        /*0x28*/ CapitalGames.IInjector _injector;
        /*0x30*/ CapitalGames.IProvider<CapitalGames.CoroutineCreator> _coroutineCreatorProvider;
        /*0x38*/ CapitalGames.IProvider<PvzN3xt.Boot.BootController> _bootFlowController;
        /*0x40*/ CapitalGames.IProvider<Yeti.IPlatformProvider> _platformProvider;
        /*0x48*/ CapitalGames.IProvider<Yeti.GameEventManager> _gameEventManager;
        /*0x50*/ CapitalGames.IProvider<Yeti.IServerClock> _serverClock;
        /*0x58*/ CapitalGames.IProvider<Yeti.GameSoundManager> _gameSoundManager;
        /*0x60*/ CapitalGames.IProvider<Yeti.YetiGameStateMachine> _yetiGameStateMachineProvider;
        /*0x68*/ CapitalGames.IProvider<Yeti.AirLock> _airlock;
        /*0x70*/ CapitalGames.IProvider<PvzN3xt.UI.LoadingScreenController> _loadingScreenController;
        /*0x78*/ CapitalGames.IProvider<Yeti.IFirebaseAnalyticsWrapper> _analyticsProvider;
        /*0x80*/ CapitalGames.IProvider<PvzN3xt.Lifecycle.SoftRebootController> _softRebootController;
        /*0x88*/ CapitalGames.IProvider<PvzN3xt.Lifecycle.SoftResetAwareInstanceRegistry> _softRebootInstanceRegistry;
        /*0x90*/ System.Action _onReset;
        /*0x98*/ System.Action _onExit;
        /*0xa0*/ bool _resetInProgress;
        /*0xa1*/ bool _clientInitializing;
        /*0xa8*/ long _clientStartupTimestamp;

        static /*0x28f645c*/ Yeti.LifecycleController get_Instance();
        /*0x28f7d2c*/ LifecycleController();
        /*0x28f64a4*/ void add__onReset(System.Action value);
        /*0x28f6540*/ void remove__onReset(System.Action value);
        /*0x28f65dc*/ void add_OnReset(System.Action value);
        /*0x28f6604*/ void remove_OnReset(System.Action value);
        /*0x28f6608*/ void add__onExit(System.Action value);
        /*0x28f66a4*/ void remove__onExit(System.Action value);
        /*0x28f6740*/ void add_OnExit(System.Action value);
        /*0x28f6768*/ void remove_OnExit(System.Action value);
        /*0x28f676c*/ bool get_ResetInProgress();
        /*0x28f6774*/ void CapitalGames.IPostConstructable.PostConstruct();
        /*0x28f693c*/ void Awake();
        /*0x28f698c*/ void Reset();
        /*0x28f69b8*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28f6b24*/ void BroadcastSessionStart();
        /*0x28f6d14*/ void Info();
        /*0x1ffc854*/ void RegisterInternal<T>(T instance);
        /*0x1ffc854*/ T Register<T>(T instance);
        /*0x28f70e4*/ void RegisterForOrderedReset(CapitalGames.ILifecycleAware instance);
        /*0x1ffc854*/ T Add<T>(string gameObjectName);
        /*0x1ffc854*/ T Add<T>();
        /*0x1ffc854*/ T New<T>();
        /*0x28f71b8*/ void Destroy(UnityEngine.Object target);
        /*0x28f738c*/ void HandleInstantiateEvent(object sender, CapitalGames.OnInstantiateArgs args);
        /*0x28f73f4*/ void SubscribeOnReset(System.Action handler);
        /*0x28f73f8*/ void UnsubscribeOnReset(System.Action handler);
        /*0x28f73fc*/ void SubscribeOnExit(System.Action handler);
        /*0x28f7400*/ void UnsubscribeOnExit(System.Action handler);
        /*0x28f7404*/ void SoftReboot(Yeti.SoftRebootReason reason, object context);
        /*0x28f776c*/ void LogSoftRebootAnalytics(Yeti.SoftRebootReason reason, object context);
        /*0x28f7ab8*/ void Reboot();
        /*0x28f7bec*/ void Exit();
        /*0x28f7cf8*/ void Quit();
        /*0x28f7cfc*/ void ClientInitComplete();
        /*0x28f7d04*/ bool IsClientInitializing();
        /*0x28f7d0c*/ long GetClientStartupTimestamp();
        /*0x28f7d24*/ void SetClientStartupTimestamp(long clientStartupTimestamp);

        class <>c__DisplayClass38_0
        {
            /*0x10*/ Yeti.LifecycleController <>4__this;
            /*0x18*/ CapitalGames.InstanceInitializedCallback initializedCallback;

            /*0x28f6b1c*/ <>c__DisplayClass38_0();
            /*0x28f7d3c*/ void <Initialize>b__0();
        }
    }

    class LifecycleDataTracker
    {
        static /*0x0*/ uint NumSoftResets;
        static /*0x4*/ uint NumNetworkRequestsMade;
        static /*0x8*/ uint NumNetworkRequestsSucceeded;
        static /*0xc*/ uint NumNetworkRequestsFailed;
        static /*0x10*/ uint NumNetworkRequestsTimedOut;
        static /*0x14*/ uint NumNetworkRequestsRetried;
    }

    interface ILocalPersistenceReset
    {
        /*0x1f309e4*/ void ResetLocalPersistence();
    }

    class LocalPersistenceReset : Yeti.ILocalPersistenceReset
    {
        /*0x10*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x18*/ Yeti.FileSystem.IFilePaths _filePaths;
        /*0x20*/ Yeti.FileSystem.IFileSystem _fileSystem;

        /*0x28f80b8*/ LocalPersistenceReset();
        /*0x28f7e00*/ void ResetLocalPersistence();
    }

    class LocalPersistenceResetOnBoot : CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.ILocalPersistenceVersionHelper _localPersistenceVersionHelper;
        /*0x18*/ Yeti.ILocalPersistenceReset _localPersistenceReset;

        /*0x28f8460*/ LocalPersistenceResetOnBoot();
        /*0x28f80c0*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
    }

    interface ILocalPersistenceVersionHelper
    {
        /*0x1f30214*/ Yeti.ClientVersionInfo GetLocallyPersistedVersion();
        /*0x1f30214*/ Yeti.ClientVersionInfo GetVersionOfCurrentClient();
        /*0x1f30214*/ Yeti.ClientVersionInfo GetMinimumSupportedVersion();
        /*0x1f30ebc*/ void WriteLocallyPersistedVersion(Yeti.ClientVersionInfo versionInfo);
    }

    class LocalPersistenceVersionHelper : Yeti.ILocalPersistenceVersionHelper
    {
        static string PersistenceVersionKey = "LocalPersistenceVersion";
        /*0x10*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;

        /*0x28f88c0*/ LocalPersistenceVersionHelper();
        /*0x28f8468*/ Yeti.ClientVersionInfo GetLocallyPersistedVersion();
        /*0x28f8684*/ Yeti.ClientVersionInfo GetVersionOfCurrentClient();
        /*0x28f86dc*/ Yeti.ClientVersionInfo GetMinimumSupportedVersion();
        /*0x28f87dc*/ void WriteLocallyPersistedVersion(Yeti.ClientVersionInfo versionInfo);
        /*0x28f8568*/ Yeti.ClientVersionInfo TryReturnVersionInfo(string versionInfo);
    }

    class AudioModule : CapitalGames.Module
    {
        /*0x28f8948*/ AudioModule();
        /*0x28f88c8*/ void Configure();
    }

    class AutomationModule : CapitalGames.Module
    {
        /*0x28f89a0*/ AutomationModule();
        /*0x28f8950*/ void Configure();
    }

    class CheatModule : CapitalGames.Module
    {
        /*0x28f89b0*/ CheatModule();
        /*0x28f89a8*/ void Configure();
        /*0x28f89ac*/ void BindForCheats();
    }

    class CombatModule : CapitalGames.Module
    {
        /*0x28f8b98*/ CombatModule();
        /*0x28f89b8*/ void Configure();
        /*0x28f8b90*/ void BindCheats();
        /*0x28f8b94*/ void BindDebug();
    }

    class ComponentModule : UnityEngine.MonoBehaviour, CapitalGames.IModule
    {
        /*0x20*/ CapitalGames.IBinder _binder;
        /*0x28*/ UnityEngine.GameObject[] _componentRoots;
        /*0x30*/ System.Collections.Generic.List<UnityEngine.Component> _components;

        /*0x28f8d60*/ ComponentModule();
        /*0x28f8ba0*/ void Configure(CapitalGames.IBinder binder);
        /*0x28f3320*/ void InjectAll();
        /*0x28f8c40*/ void Configure();
        /*0x1f309e4*/ void InstallComponent<T>();
        /*0x1f302cc*/ CapitalGames.IBindingBuilder<InterfaceType> Bind<InterfaceType>(string name);
    }

    class DebugModule : CapitalGames.Module
    {
        /*0x28f8fcc*/ DebugModule();
        /*0x28f8e18*/ void Configure();
        /*0x28f8ea0*/ void BindDebugMenuGUI();
        /*0x28f8fc0*/ void BindForDebug();
        /*0x28f8fc4*/ void BindEarlyDebug();
        /*0x28f8fc8*/ void BindOtherDebug();
    }

    class GameResourcesModule : CapitalGames.Module
    {
        /*0x28f933c*/ GameResourcesModule();
        /*0x28f8fd4*/ void Configure();
        /*0x28f9338*/ void BindDebug(CapitalGames.IBinding assetDownloadManagerBinding);
    }

    class GameStateModule : CapitalGames.Module
    {
        /*0x28f9474*/ GameStateModule();
        /*0x28f9344*/ void Configure();
    }

    class MasterModule : CapitalGames.Module
    {
        /*0x28f31a4*/ MasterModule();
        /*0x28f947c*/ void Configure();
    }

    class MetaModule : CapitalGames.Module
    {
        /*0x28f9af4*/ MetaModule();
        /*0x28f9b04*/ void Configure();
    }

    class PersisterModule : CapitalGames.Module
    {
        /*0x28f9afc*/ PersisterModule();
        /*0x28fa4ac*/ void Configure();
    }

    class SurveyModule : CapitalGames.Module
    {
        /*0x28fa4a4*/ SurveyModule();
        /*0x28fa604*/ void Configure();
    }

    class SystemModule : CapitalGames.Module
    {
        /*0x28f9ae4*/ SystemModule();
        /*0x28fa700*/ void Configure();
    }

    class ErrorHandlerModule : CapitalGames.Module
    {
        /*0x28fb524*/ ErrorHandlerModule();
        /*0x28fb52c*/ void Configure();
    }

    class UiModule : CapitalGames.Module
    {
        /*0x28f9aec*/ UiModule();
        /*0x28fb6b4*/ void Configure();
        /*0x28fb9f8*/ void BindUiServices();
        /*0x28fb978*/ void BindModelFactories();
        /*0x28fc1a8*/ void BindDebug();
    }

    interface IPlatformProvider
    {
        /*0x1f2ffc8*/ CapitalGames.Platform GetPlatform();
    }

    class PlatformProvider : Yeti.IPlatformProvider
    {
        static /*0x28f7ca8*/ bool IsEditorMode();
        /*0x28fc200*/ PlatformProvider();
        /*0x28fc1f8*/ CapitalGames.Platform GetPlatform();
    }

    class YetiInstantiator : CapitalGames.Instantiator
    {
        static string PersistentObjectContainer = "InjectedGameObjects";
        /*0x20*/ UnityEngine.GameObject _container;

        /*0x28f5460*/ YetiInstantiator();
        /*0x28fc208*/ UnityEngine.GameObject CreateGameObject(string objectName, CapitalGames.CreationFlags flags);
    }

    interface IAssetDownloadManager : CapitalGames.IInitializable
    {
        /*0x1f2fec8*/ bool IsDownloaded(string key);
        /*0x1f30ff0*/ void DownloadBlocking(Packages.EA.PopCap.AddressablesAssets.Runtime.DownloadAssetRequest assetRequest, System.Action finalCallback);
        /*0x1f30ff0*/ void DownloadAssetsNonBlocking(Packages.EA.PopCap.AddressablesAssets.Runtime.DownloadAssetRequest assetRequest, System.Action finalCallback);
        /*0x1f30ebc*/ void TrackLoad(System.Collections.Generic.List<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> resourceLocations);
    }

    interface IAssetRequestUniqueBundlesTracker
    {
        /*0x1f309e4*/ void ClearTrackedBundles();
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyCollection<string> get_TrackedBundles();
    }

    interface IAssetDownloadManagerSimulatedStateController
    {
        /*0x1f30b78*/ void ForceMarkAssetSetDownloaded(Yeti.AssetSet assetSet);
        /*0x1f30b78*/ void ForceMarkAssetSetNotDownloaded(Yeti.AssetSet assetSet);
    }

    class AssetDownloadManager : Yeti.IAssetDownloadManager, CapitalGames.IInitializable, Yeti.IAssetRequestUniqueBundlesTracker, Yeti.IAssetDownloadManagerSimulatedStateController
    {
        static /*0x0*/ string DebugDirectoryPath;
        static /*0x8*/ string SimulatedDownloadCachePath;
        /*0x10*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x18*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x20*/ bool _simulateDownloadState;
        /*0x21*/ bool _logDownloadsAsErrors;
        /*0x22*/ bool _trackUniqueBundles;
        /*0x28*/ System.Collections.Generic.HashSet<string> _downloadedBundles;
        /*0x30*/ System.Collections.Generic.HashSet<string> _uniqueBundles;
        /*0x38*/ bool _needsToWriteCache;

        static /*0x28fe4e0*/ AssetDownloadManager();
        static /*0x28fd350*/ System.Collections.Generic.List<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> GetLocationsFromAssetRequest(Yeti.AssetRequest assetRequestRaw);
        static /*0x28fd384*/ string GetAssetBundleForLocation(UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation location);
        /*0x28fe434*/ AssetDownloadManager();
        /*0x28fc278*/ System.Collections.Generic.IReadOnlyCollection<string> get_TrackedBundles();
        /*0x28fc280*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28fc66c*/ bool IsDownloaded(string key);
        /*0x28fc954*/ void DownloadBlocking(Packages.EA.PopCap.AddressablesAssets.Runtime.DownloadAssetRequest assetRequest, System.Action finalCallback);
        /*0x28fcd60*/ void DownloadAssetsNonBlocking(Packages.EA.PopCap.AddressablesAssets.Runtime.DownloadAssetRequest assetRequest, System.Action finalCallback);
        /*0x28fcee0*/ void TrackLoad(System.Collections.Generic.List<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> resourceLocations);
        /*0x28fc9e8*/ bool IsDownloaded(Packages.EA.PopCap.AddressablesAssets.Runtime.DownloadAssetRequest assetRequest);
        /*0x28fc594*/ void LoadOrCreateSimulatedDownloadCache();
        /*0x28fd17c*/ void TrySaveSimulatedDownloadCache();
        /*0x28fcf0c*/ void MarkAssetSetAsDownloaded(Yeti.AssetSet assetSet);
        /*0x28fc6f0*/ bool IsDownloadedInSimulationState(string key);
        /*0x28fcd30*/ void TrackRequest(System.Collections.Generic.List<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> resourceLocations, bool isExplicitDownload);
        /*0x28fd768*/ void TrackUniqueBundles(System.Collections.Generic.List<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> resourceLocations);
        /*0x28fd998*/ void TrackDownloads(System.Collections.Generic.List<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> resourceLocations, bool isExplicitDownload);
        /*0x28fe07c*/ void ClearTrackedBundles();
        /*0x28fcc44*/ void FakeBlockingDownload(System.Action finalCallback);
        /*0x28fcdf4*/ void FakeNonBlockingDownload(System.Action finalCallback);
        /*0x28fe0cc*/ System.Collections.IEnumerator FakeDownloadCoroutine(System.Action finalCallback, Packages.EA.PopCap.AddressablesAssets.Runtime.AssetSystemEvent<Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData> statusChangedEvent, Packages.EA.PopCap.AddressablesAssets.Runtime.AssetSystemEvent<Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData> progressEvent);
        /*0x28fe190*/ void ForceMarkAssetSetDownloaded(Yeti.AssetSet assetSet);
        /*0x28fe1b4*/ void ForceMarkAssetSetNotDownloaded(Yeti.AssetSet assetSet);

        class <FakeDownloadCoroutine>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetSystemEvent<Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData> statusChangedEvent;
            /*0x28*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetSystemEvent<Packages.EA.PopCap.AddressablesAssets.Runtime.AssetDownloadEventData> progressEvent;
            /*0x30*/ System.Action finalCallback;

            /*0x28fe168*/ <FakeDownloadCoroutine>d__30(int <>1__state);
            /*0x28fe5c4*/ void System.IDisposable.Dispose();
            /*0x28fe5c8*/ bool MoveNext();
            /*0x28fe798*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x28fe7a0*/ void System.Collections.IEnumerator.Reset();
            /*0x28fe7d8*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    enum AssetDownloadResult
    {
        UNKNOWN = 0,
        SUCCESS = 1,
        CANCELED = 2,
        FAILURE_GENERAL = 3,
        FailureNetwork = 4,
        FAILURE_INCOMPATIBLE_ASSETS = 5,
        FAILURE_HANG = 6,
        FAILURE_INVALID_MANIFEST = 7,
    }

    class AssetRequest : Yeti.IAssetRequest
    {
        /*0x10*/ string _requester;
        /*0x18*/ object <Context>k__BackingField;
        /*0x20*/ System.Collections.Generic.List<string> <AssetsToRequest>k__BackingField;
        /*0x28*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetRequest _linkedRequest;

        /*0x28fe808*/ AssetRequest(object context);
        /*0x28fd458*/ AssetRequest(string assetName, object context);
        /*0x28fd20c*/ AssetRequest(Yeti.AssetSet assetSetName, object context);
        /*0x28fe8d0*/ AssetRequest(System.Collections.Generic.IEnumerable<string> assetList, object context);
        /*0x28fec78*/ AssetRequest(System.Collections.Generic.IEnumerable<Yeti.AssetSet> assetSetList, object context);
        /*0x28fe7e0*/ object get_Context();
        /*0x28fe7e8*/ System.Collections.Generic.List<string> get_AssetsToRequest();
        /*0x28fe7f0*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection get_ResourceCollection();
        /*0x28ff060*/ Yeti.AssetRequest AddAsset(string assetName, uint instanceQuantity);
        /*0x28ff0fc*/ Yeti.AssetRequest AddAssetSet(Yeti.AssetSet assetSetName);
        /*0x28ff17c*/ Yeti.AssetRequest AddAssetSet(string assetSetName);
        /*0x28fe9a8*/ Yeti.AssetRequest AddAssets(System.Collections.Generic.IEnumerable<string> assetList);
        /*0x28fed50*/ Yeti.AssetRequest AddAssetSets(System.Collections.Generic.IEnumerable<Yeti.AssetSet> assetSetList);
        /*0x28ff184*/ void SetRequester();
        /*0x28ff244*/ void LinkAddressablesRequest(Packages.EA.PopCap.AddressablesAssets.Runtime.AssetRequest request);
    }

    class AssetRequestAdapter
    {
        static /*0x28fd554*/ Packages.EA.PopCap.AddressablesAssets.Runtime.GetAssetRequest ConvertToAddressablesGetAssetRequest(Yeti.IAssetRequest request, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool activeStateForAssetsToSetOnComplete, bool instantiateIfGameObject, UnityEngine.Transform parentTransform, System.Type assetType);
        static /*0x28ff24c*/ Packages.EA.PopCap.AddressablesAssets.Runtime.GetAssetRequest ConvertToAddressablesGetAssetRequest(string name, System.Type assetType, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool activeStateForAssetsToSetOnComplete, bool instantiateIfGameObject, UnityEngine.Transform parentTransform);
        static /*0x28ff438*/ Packages.EA.PopCap.AddressablesAssets.Runtime.DownloadAssetRequest ConvertToAddressablesDownloadAssetRequest(Yeti.IAssetRequest assetRequest, System.Action finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback);
        static /*0x28ff63c*/ Packages.EA.PopCap.AddressablesAssets.Runtime.DownloadAssetRequest ConvertToAddressablesDownloadAssetRequest(string assetName, System.Action finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ string name;
            /*0x18*/ System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle, object> finalCallback;

            /*0x28ff430*/ <>c__DisplayClass1_0();
            /*0x28ff768*/ void <ConvertToAddressablesGetAssetRequest>b__0(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection collection, object context);
        }

        class <>c__DisplayClass2_0
        {
            /*0x10*/ System.Action finalCallback;

            /*0x28ff634*/ <>c__DisplayClass2_0();
            /*0x28ffa70*/ void <ConvertToAddressablesDownloadAssetRequest>b__0(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection collection, object obj);
        }

        class <>c__DisplayClass3_0
        {
            /*0x10*/ System.Action finalCallback;

            /*0x28ff760*/ <>c__DisplayClass3_0();
            /*0x28ffa8c*/ void <ConvertToAddressablesDownloadAssetRequest>b__0(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection collection, object obj);
        }
    }

    enum AssetSet
    {
        Unknown = -1,
        Everything = 0,
        English = 1,
        French = 2,
        Italian = 3,
        German = 4,
        BrazilianPortuguese = 5,
        Japanese = 6,
        Korean = 7,
        Indonesian = 8,
        MexicanSpanish = 9,
        SpainSpanish = 10,
        Boot = 11,
        GlobalAudioBank = 12,
        TempM1Combat = 13,
        FallbackFonts = 14,
        CombatPresentationConfigAssetSet = 15,
        DefaultFonts = 16,
        TownMapPreload = 17,
        PlayerProfile = 18,
    }

    class AssetSetDefinitionLoader
    {
        static /*0x28ffaa8*/ Yeti.RawAssetSetList GetAssetSetDefinitions();
    }

    class AssetSystemNvsContext : Packages.EA.PopCap.AddressablesAssets.Runtime.IAssetSystemNvsContext
    {
        /*0x10*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x18*/ System.Action <OnValuesChanged>k__BackingField;

        /*0x28ffbe4*/ AssetSystemNvsContext(PvzN3xt.Nvs.INamedValueService namedValueService);
        /*0x28ffbd4*/ System.Action get_OnValuesChanged();
        /*0x28ffbdc*/ void set_OnValuesChanged(System.Action value);
        /*0x28ffcfc*/ void NamedValueServiceOnIntValuesUpdated(System.Collections.Generic.Dictionary<string, int> updatedvalues);
        /*0x28ffde4*/ bool get_ContentUpdateEnabled();
        /*0x28ffeec*/ bool get_AddressablesAssetCachingEnabled();
        /*0x28ffff4*/ bool get_AddressablesBackgroundDownloadBatchingEnabled();
        /*0x29000fc*/ int get_BundleRetryCount();
        /*0x2900204*/ int get_BundleRedirectLimit();
        /*0x290030c*/ int get_DownloadTimeoutInSeconds();
        /*0x2900414*/ int get_AssetBundleMaxParallelBackgroundRequests();
    }

    class BinderSingleAssetLoader
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle> _callback;
        /*0x20*/ System.Action _failureCallback;
        /*0x28*/ Yeti.IResourceLoadRequest _loadRequest;
        /*0x30*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle _resourceHandle;

        /*0x290051c*/ BinderSingleAssetLoader();
        /*0x2900524*/ BinderSingleAssetLoader(Yeti.IAssetManager assetManager);
        /*0x2900554*/ void LoadAsset(string assetId, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle> callBack, System.Action failureCallback, bool enableAsset, System.Type assetType);
        /*0x2900908*/ void LoadAssetWithoutReload(string assetId, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle> callBack, System.Action failureCallback, bool enableAsset, System.Type assetType);
        /*0x2900a40*/ void ResourceLoadRequestComplete(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle resource, object context);
        /*0x2900b40*/ void ResourceLoadRequestFailed(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError error, object context);
        /*0x2900840*/ bool IsAssetIdValid(string assetId);
        /*0x2900cf0*/ void CancelAndReleaseAll();
        /*0x2900e78*/ bool IsLoadingAsset();
        /*0x2900db8*/ void CancelIfLoading();
    }

    class ConnectionTypeChangeHandler : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static string CellularWarningTitleLocId = "SWITCHING_TO_CELLULAR_TITLE";
        static string CellularWarningMessageLocId = "SWITCHING_TO_CELLULAR_MESSAGE";
        static string GenericYesLocId = "GENERIC_YES";
        static string GenericOkLocId = "GENERIC_OK";
        static string GenericWarningLocId = "GENERIC_WARNING";
        static string CellularSwitchPermissionDenied = "CELLULAR_SWITCH_PERMISSION_DENIED";
        static /*0x0*/ bool _permissionGranted;
        /*0x10*/ System.Collections.Generic.Queue<System.Action> _actionQueue;
        /*0x18*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x20*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x28*/ Yeti.Network.INetworkConnectivityMonitor _networkConnectivityMonitor;
        /*0x30*/ Odin.IUIPopupService _uiPopupService;
        /*0x38*/ Yeti.ILifecycleController _lifecycleController;
        /*0x40*/ bool _dialogActive;

        /*0x2900e88*/ ConnectionTypeChangeHandler();
        /*0x2900f10*/ ConnectionTypeChangeHandler(Yeti.Network.INetworkConnectivityMonitor networkConnectivityMonitor, Odin.IUIPopupService uiPopupService, CapitalGames.CoroutineCreator coroutineCreator, PvzN3xt.Nvs.INamedValueService namedValueService);
        /*0x2900ff8*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2901138*/ void OnAppReset();
        /*0x2901208*/ void SetPermissionGranted();
        /*0x2901254*/ bool ShouldShowCellularDownloadWarning();
        /*0x2901474*/ void CheckIfNotWifiAndGetPermissionToDownload(System.Action actionToInvoke);
        /*0x2901510*/ void <CheckIfNotWifiAndGetPermissionToDownload>g__AskForPermissions|20_0();
        /*0x29016b4*/ void <CheckIfNotWifiAndGetPermissionToDownload>g__OnPermissionGranted|20_1();
        /*0x2901770*/ void <CheckIfNotWifiAndGetPermissionToDownload>g__OnPermissionDenied|20_2();
        /*0x2901864*/ void <CheckIfNotWifiAndGetPermissionToDownload>g__DisplayErrorDialog|20_3();
        /*0x29019c8*/ void <CheckIfNotWifiAndGetPermissionToDownload>b__20_4();
    }

    class DownloadWarningDisplayer : CapitalGames.IInitializable
    {
        static string WarningTitleLocId = "DOWNLOAD_WARNING_TITLE";
        static string WarningMessageLocId = "DOWNLOAD_WARNING_MESSAGE";
        static string PermissionDeniedTitleLocId = "DOWNLOAD_PERMISSION_DENIED_TITLE";
        static string PermissionDeniedMessageLocId = "DOWNLOAD_PERMISSION_DENIED_MESSAGE";
        static string GenericYesLocId = "GENERIC_YES";
        static string GenericOkLocId = "GENERIC_OK";
        static string DialogTelemetryData = "initial_download";
        static string ButtonTelemetryData = "yes";
        /*0x10*/ Yeti.ConnectionTypeChangeHandler _connectionTypeChangeHandler;
        /*0x18*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x20*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x28*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x30*/ PvzN3xt.LocalAccount.LocalAccountSettingsDboCache _localAccountSettingsCache;
        /*0x38*/ PvzN3xt.LocalAccount.LocalAccountSettingsPersister _localAccountSettingsPersister;
        /*0x40*/ Odin.IUIPopupService _uiPopupService;
        /*0x48*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x50*/ Yeti.Network.INetworkConnectivityMonitor _networkConnectivityMonitor;
        /*0x58*/ PvzN3xt.GameData.GameDataCoordinator _gameDataCoordinator;

        /*0x29020b8*/ DownloadWarningDisplayer();
        /*0x2901abc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x28f440c*/ void DisplayFirstTimeWarningIfRequired(long catalogUpdateBytes, System.Action actionToInvoke);
        /*0x2901b84*/ long CalculatePotentialInitialDownloadSizeInBytes(long catalogUpdateBytes);

        class <>c__DisplayClass19_0
        {
            /*0x10*/ Yeti.DownloadWarningDisplayer <>4__this;
            /*0x18*/ double formattedDownloadMb;
            /*0x20*/ bool isOnWifi;
            /*0x28*/ System.Action actionToInvoke;

            /*0x2901b7c*/ <>c__DisplayClass19_0();
            /*0x2901d68*/ void <DisplayFirstTimeWarningIfRequired>g__DisplayWarning|0();
            /*0x29020c8*/ void <DisplayFirstTimeWarningIfRequired>g__OnPermissionGranted|1();
            /*0x2902188*/ void <DisplayFirstTimeWarningIfRequired>g__OnCancel|2();
            /*0x290227c*/ void <DisplayFirstTimeWarningIfRequired>g__DisplayError|4();
        }

        class <>c__DisplayClass19_1
        {
            /*0x10*/ string titleId;
            /*0x18*/ string preLocalizedMessage;
            /*0x20*/ Yeti.DownloadWarningDisplayer.<> CS$<>8__locals1;

            /*0x29020c0*/ <>c__DisplayClass19_1();
            /*0x29023e8*/ void <DisplayFirstTimeWarningIfRequired>g__DisplayWarningDialog|3();
        }
    }

    interface IAssetManager : CapitalGames.IInitializable
    {
        /*0x1f2fec8*/ bool DoesAssetExist(string assetName);
        /*0x1f2fec8*/ bool IsDownloaded(string key);
        /*0x1f2fe40*/ bool IsProcessingDownloadsOfPriority(UnityEngine.ResourceManagement.EA.ResourcePriority priority);
        /*0x1f309e4*/ void BroadcastProgress();
        void PreloadAssets(Yeti.IAssetRequest assetRequest, Yeti.YetiGameStateId registeredOwner, bool includeDownloads, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback);
        /*0x1f30ff0*/ void DownloadAssetsBlocking(Yeti.IAssetRequest assetRequest, System.Action finalCallback);
        /*0x1f30c88*/ void DownloadAssetsNonBlocking(Yeti.AssetSet assetSet, System.Action finalCallback);
        /*0x1f30ff0*/ void DownloadAssetsNonBlocking(string assetName, System.Action finalCallback);
        /*0x1f30a84*/ void SetBackgroundDownloadingActive(bool state);
        Yeti.IResourceLoadRequest GetAssetsBlocking(Yeti.IAssetRequest assetRequest, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool enabled, UnityEngine.Transform parentTransform, bool instantiateIfGameObject, System.Type assetType);
        Yeti.IResourceLoadRequest GetAssets(Yeti.IAssetRequest assetRequest, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool enabled, UnityEngine.Transform parentTransform, bool instantiateIfGameObject, System.Type assetType);
        Yeti.IResourceLoadRequest GetAsset(string assetName, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool enabled, UnityEngine.Transform parentTransform, bool instantiateIfGameObject, System.Type assetType);
        /*0x1f30ebc*/ void CheckForAssetCatalogVersionUpdate(ref Packages.EA.PopCap.AddressablesAssets.Runtime.CatalogVersionUpdateArgs updateArgs);
        long CalculateSizeOfAssetsRemainingToDownload();
        /*0x1f309e4*/ void CleanupCurrentStateCache();
        /*0x1f309e4*/ void ManualLowMemoryCall();
    }

    interface IAssetRequest
    {
        /*0x1f30214*/ object get_Context();
        /*0x1f30214*/ System.Collections.Generic.List<string> get_AssetsToRequest();
        Yeti.AssetRequest AddAsset(string assetName, uint instanceQuantity);
        /*0x1f30240*/ Yeti.AssetRequest AddAssetSet(Yeti.AssetSet assetSetName);
        /*0x1f302cc*/ Yeti.AssetRequest AddAssets(System.Collections.Generic.IEnumerable<string> assetList);
        /*0x1f302cc*/ Yeti.AssetRequest AddAssetSets(System.Collections.Generic.IEnumerable<Yeti.AssetSet> assetSetList);
        /*0x1f30ebc*/ void LinkAddressablesRequest(Packages.EA.PopCap.AddressablesAssets.Runtime.AssetRequest assetRequest);
        /*0x1f30214*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection get_ResourceCollection();
    }

    interface IAssetSystemContextProvider
    {
        /*0x1f30214*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetManagementContext Provide();
    }

    interface IResourceLoadRequest
    {
        /*0x1f2fe14*/ bool IsComplete();
        bool Cancel(bool evict);
    }

    class ResourceLoadRequestUtils
    {
        static /*0x2900860*/ Yeti.IResourceLoadRequest ReturnRequestOrNullIfComplete(Yeti.IResourceLoadRequest loadRequest);
    }

    class EmptyResourceLoadRequest : Yeti.IResourceLoadRequest
    {
        /*0x29025c8*/ EmptyResourceLoadRequest();
        /*0x29025b8*/ bool IsComplete();
        /*0x29025c0*/ bool Cancel(bool evict);
    }

    class MultipleAssetLoader
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ System.Collections.Generic.List<Yeti.IResourceLoadRequest> _loadRequests;
        /*0x20*/ System.Collections.Generic.List<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> _resourceCollections;

        /*0x29025d0*/ MultipleAssetLoader(Yeti.IAssetManager assetManager);
        /*0x29026c0*/ void LoadAssets(Yeti.AssetRequest assetRequest, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> callBack);
        /*0x29028f4*/ void ResourceLoadsRequestComplete(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection collection, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> callBack);
        /*0x29029e8*/ void CancelAndReleaseAll();
        /*0x2902f20*/ bool IsLoadingAsset();
        /*0x2902c84*/ void CancelIfLoading();

        class <>c__DisplayClass4_0
        {
            /*0x10*/ Yeti.MultipleAssetLoader <>4__this;
            /*0x18*/ System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> callBack;

            /*0x29028ec*/ <>c__DisplayClass4_0();
            /*0x2902f70*/ void <LoadAssets>b__0(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection collection, object context);
        }
    }

    class ResourceLoadRequest : Yeti.IResourceLoadRequest
    {
        /*0x10*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetRequest _request;

        /*0x2902f8c*/ ResourceLoadRequest(Packages.EA.PopCap.AddressablesAssets.Runtime.AssetRequest request);
        /*0x2902fbc*/ bool IsComplete();
        /*0x2902fd4*/ bool Cancel(bool evict);
    }

    class WemFileAsset : UnityEngine.ScriptableObject
    {
        /*0x18*/ string Name;
        /*0x20*/ byte[] Bytes;

        /*0x2902ff8*/ WemFileAsset();
    }

    class YetiAssetManager : Yeti.IAssetManager, CapitalGames.IInitializable, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>, CapitalGames.ILifecycleAware
    {
        /*0x10*/ Yeti.IAssetSystemContextProvider _assetSystemContextProvider;
        /*0x18*/ Yeti.IAssetDownloadManager _assetDownloadManager;
        /*0x20*/ CapitalGames.IMonoBehaviourEventNotifierSystem _monoBehaviourEventNotifier;
        /*0x28*/ PvzN3xt.Boot.ClientInitializationPhase.DiskInitialization _diskInitializer;
        /*0x30*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetManagementContext _context;

        static /*0x28fe790*/ Packages.EA.PopCap.AddressablesAssets.Runtime.EventManager get_Events();
        static /*0x2903574*/ void HandleEmptyRequestForAssetLoad(string errorMessage, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback);
        static /*0x2903958*/ void HandleEmptyRequestForAssetDownload(string errorMessage, System.Action errorCallback);
        static /*0x2904380*/ void LogEmptyAssetRequest(string errorMessage);
        static /*0x2904770*/ void AddUniquePersistentKey(string key);
        /*0x2904828*/ YetiAssetManager();
        /*0x2903000*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2903234*/ void AddPersistentKeys();
        /*0x2903238*/ bool DoesAssetExist(string assetName);
        /*0x2903244*/ bool IsDownloaded(string key);
        /*0x29032ec*/ bool IsProcessingDownloadsOfPriority(UnityEngine.ResourceManagement.EA.ResourcePriority priority);
        /*0x29032f8*/ void BroadcastProgress();
        /*0x2903300*/ void PreloadAssets(Yeti.IAssetRequest assetRequest, Yeti.YetiGameStateId registeredOwner, bool includeDownloads, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback);
        /*0x2903624*/ void DownloadAssetsBlocking(Yeti.IAssetRequest assetRequest, System.Action finalCallback);
        /*0x2903984*/ void DownloadAssetsNonBlocking(Yeti.AssetSet assetSet, System.Action finalCallback);
        /*0x2903a08*/ void DownloadAssetsNonBlocking(string assetName, System.Action finalCallback);
        /*0x2903cb4*/ void SetBackgroundDownloadingActive(bool state);
        /*0x2903cc0*/ Yeti.IResourceLoadRequest GetAssetsBlocking(Yeti.IAssetRequest assetRequest, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool enabled, UnityEngine.Transform parentTransform, bool instantiateIfGameObject, System.Type assetType);
        /*0x2903f04*/ Yeti.IResourceLoadRequest GetAsset(string assetName, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool enabled, UnityEngine.Transform parentTransform, bool instantiateIfGameObject, System.Type assetType);
        /*0x290413c*/ Yeti.IResourceLoadRequest GetAssets(Yeti.IAssetRequest assetRequest, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> finalCallback, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError, object> errorCallback, bool enabled, UnityEngine.Transform parentTransform, bool instantiateIfGameObject, System.Type assetType);
        /*0x29034ac*/ string GetDebugString(Yeti.IAssetRequest assetRequest);
        /*0x29043e0*/ long CalculateSizeOfAssetsRemainingToDownload();
        /*0x29044a8*/ void CheckForAssetCatalogVersionUpdate(ref Packages.EA.PopCap.AddressablesAssets.Runtime.CatalogVersionUpdateArgs updateArgs);
        /*0x29044b4*/ void CleanupCurrentStateCache();
        /*0x290456c*/ void ManualLowMemoryCall();
        /*0x2904624*/ void OnAppReset();
        /*0x2904720*/ void OnLateUpdate(CapitalGames.IMonoBehaviourEventNotifierSystem sender);
        /*0x2904830*/ void Yeti.IAssetManager.CheckForAssetCatalogVersionUpdate(ref Packages.EA.PopCap.AddressablesAssets.Runtime.CatalogVersionUpdateArgs updateArgs);
        /*0x290483c*/ void <DownloadAssetsBlocking>b__14_1();
        /*0x2904854*/ void <DownloadAssetsNonBlocking>b__16_1();

        class <>c
        {
            static /*0x0*/ Yeti.YetiAssetManager.<> <>9;
            static /*0x8*/ System.Action <>9__14_0;
            static /*0x10*/ System.Action <>9__16_0;

            static /*0x290486c*/ <>c();
            /*0x29048d4*/ <>c();
            /*0x29048dc*/ void <DownloadAssetsBlocking>b__14_0();
            /*0x29048e0*/ void <DownloadAssetsNonBlocking>b__16_0();
        }

        class <>c__DisplayClass7_0
        {
            /*0x10*/ Yeti.YetiAssetManager <>4__this;
            /*0x18*/ CapitalGames.InstanceInitializedCallback initializedCallback;

            /*0x290322c*/ <>c__DisplayClass7_0();
            /*0x29048e4*/ void <Initialize>b__0();
        }
    }

    class YetiAssetSystemContextProvider : Yeti.IAssetSystemContextProvider
    {
        /*0x10*/ Yeti.YetiGameStateMachine _gameStateMachine;
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x20*/ Yeti.AirLock _airlock;
        /*0x28*/ Yeti.AssetManagementContextProvider _assetManagementContextProvider;

        /*0x29050e0*/ YetiAssetSystemContextProvider();
        /*0x2904a18*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetManagementContext Provide();
    }

    class AssetManagementContextProvider
    {
        /*0x10*/ PvzN3xt.FailedAssetRequestObserver _failedAssetRequestObserver;
        /*0x18*/ PvzN3xt.AssetRequestTelemetryObserver _assetRequestTelemetryObserver;
        /*0x20*/ PvzN3xt.AssetRequestPerformanceMetricsObserver _assetRequestPerformanceMetricsObserver;
        /*0x28*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetPreloadController<Yeti.YetiGameStateId> _assetPreloadController;
        /*0x30*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetCacheController _assetCacheController;
        /*0x38*/ Packages.EA.PopCap.AddressablesAssets.Runtime.BackgroundDownloadBatcher _backgroundDownloadBatcher;
        /*0x40*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetCatalogVersionUpdateModule <AssetCatalogVersionUpdateModule>k__BackingField;
        /*0x48*/ Yeti.AssetSystemNvsContext <AssetSystemNvsContext>k__BackingField;

        /*0x2904cd8*/ AssetManagementContextProvider(Yeti.YetiGameStateMachine gameStateMachine, PvzN3xt.Nvs.INamedValueService namedValueService);
        /*0x2904f40*/ System.Collections.Generic.List<Packages.EA.PopCap.AddressablesAssets.Runtime.IAssetSystemObserver> get_Observers();
        /*0x29050e8*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IAssetPreloadController get_AssetPreloadController();
        /*0x29050f0*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetCatalogVersionUpdateModule get_AssetCatalogVersionUpdateModule();
        /*0x29050f8*/ Yeti.AssetSystemNvsContext get_AssetSystemNvsContext();
        /*0x2905000*/ Packages.EA.PopCap.AddressablesAssets.Runtime.AssetCacheController get_AssetCacheController();
        /*0x2905070*/ Packages.EA.PopCap.AddressablesAssets.Runtime.BackgroundDownloadBatcher get_BackgroundDownloadBatcher();
    }

    class CameraPositionAudioOffsetter : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x28*/ Yeti.GameEventManager _gameEventManager;
        /*0x30*/ PvzN3xt.TownMap.TownMapViewController _townMapViewController;
        /*0x38*/ AkGameObj _akGameObject;
        /*0x40*/ System.Action<UnityEngine.Vector3> _cameraMoveCached;

        /*0x2905304*/ CameraPositionAudioOffsetter();
        /*0x2905100*/ void Awake();
        /*0x29051bc*/ void OnEnable();
        /*0x29052e8*/ void OnDisable();
        /*0x29052c0*/ void OnCameraMoved(UnityEngine.Vector3 cameraPosition);
    }

    class CameraZoomRtpcSetter : UnityEngine.MonoBehaviour
    {
        static float MaxZoomRtpcValue = 100;
        /*0x20*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x28*/ Yeti.GameEventManager _gameEventManager;
        /*0x30*/ PvzN3xt.TownMap.TownMapViewController _townMapViewController;
        /*0x38*/ System.Action<float> _cameraZoomCached;

        /*0x29055e4*/ CameraZoomRtpcSetter();
        /*0x290530c*/ void Awake();
        /*0x2905314*/ void OnEnable();
        /*0x29054bc*/ void OnDisable();
        /*0x29054d8*/ float GetRtpcForZoom(float zoomPercent);
        /*0x2905410*/ void OnCameraZoom(float zoomPercent);
    }

    class AudioConstants
    {
        static int InvalidAudioId = -1;
        static int MuteStateGroupId = 23111038;
        static uint MuteStateId = 3791155954;
        static uint UnmuteStateId = 3763503965;
        static uint PuppetEditorGroupId = 1574102113;
        static uint PuppetEditorOnId = 1651971902;
        static uint PuppetEditorOffId = 930712164;
        static int UI_UnitIntro_Complete = -1;
        static int UI_UnitIntro_NextUnit = -1;
    }

    class ImpactTypeComparer : System.Collections.Generic.IEqualityComparer<Yeti.Data.ImpactType>
    {
        /*0x2905600*/ ImpactTypeComparer();
        /*0x29055ec*/ bool Equals(Yeti.Data.ImpactType x, Yeti.Data.ImpactType y);
        /*0x29055f8*/ int GetHashCode(Yeti.Data.ImpactType impactType);
    }

    class GameSoundManager : UnityEngine.MonoBehaviour, CapitalGames.IInitializable
    {
        static string MasterBusSoundBank = "wwise.bnk_init";
        static /*0x0*/ Yeti.ImpactTypeComparer _impactTypeComparer;
        /*0x20*/ System.Action<bool> OnMuteChanged;
        /*0x28*/ Audio.WwiseRuntimeData _runtimeData;
        /*0x30*/ Yeti.Data.UserAudioSettings _soundSettingsData;
        /*0x38*/ Yeti.IResourceProviderPathProvider _streamingAudioPathProvider;
        /*0x40*/ Yeti.Persistence.GenericProtobufPersister<Yeti.Data.UserAudioSettings> _gameSoundSettingsPersister;
        /*0x48*/ Yeti.IAssetManager _assetManager;
        /*0x50*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x58*/ EA.Unity.StarlightWrapper.Ads.IAds _ads;
        /*0x60*/ Audio.ISoundEngine _soundEngine;
        /*0x68*/ Yeti.SoundBankManager _soundBankManager;
        /*0x70*/ UnityEngine.Coroutine _saveRoutine;
        /*0x78*/ UnityEngine.Coroutine _suspendRoutine;
        /*0x80*/ System.Collections.Generic.Dictionary<int, Audio.WwiseRuntimeData.WwiseRuntimeDataStruct> _unityIdToWwiseIdMap;
        /*0x88*/ System.Collections.Generic.Dictionary<Yeti.Data.ImpactType, int> _combatImpactTypeToWwiseEventIdMap;
        /*0x90*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<Audio.WwiseRuntimeData.WwiseRuntimeDataStruct>> _groupUnityIdToGroupWwiseIdMap;
        /*0x98*/ UnityEngine.WaitForSeconds _waitForSecondsInterval;

        static /*0x2907e84*/ GameSoundManager();
        /*0x2907dfc*/ GameSoundManager();
        /*0x2905608*/ System.Collections.Generic.Dictionary<Yeti.Data.ImpactType, int> get_CombatImpactTypeToWwiseEventIdMap();
        /*0x2905610*/ void add_OnMuteChanged(System.Action<bool> value);
        /*0x29056c0*/ void remove_OnMuteChanged(System.Action<bool> value);
        /*0x28f5c84*/ void SetDataOnAssetLoaded(Audio.WwiseRuntimeData data);
        /*0x2905770*/ void BuildRuntimeDataDictionaries();
        /*0x2905c10*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x29061ac*/ void LoadMasterBusSoundBankThenGlobalSoundBanks();
        /*0x29062e0*/ void LoadGlobalSoundBanks(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object context);
        /*0x29063e4*/ void InitializeValues();
        /*0x2906604*/ void OnDisable();
        /*0x29066b0*/ void LateUpdate();
        /*0x290675c*/ void OnAdOpened(string _);
        /*0x2906910*/ void OnAdClosed(string _);
        /*0x2906864*/ void SuspendAudioEngine();
        /*0x2906948*/ void ResumeAudioEngine();
        /*0x2906a9c*/ void OnApplicationFocus(bool hasFocus);
        /*0x2906c2c*/ void OnApplicationQuit();
        /*0x2906dc8*/ void KillSoundEngine();
        /*0x2906e78*/ void PlayYetiAudioEvent(int unityId);
        /*0x28f10d0*/ void PlayYetiAudioEvent(int unityId, UnityEngine.GameObject eventObject);
        /*0x2906ea8*/ void SetSwitchByWwiseId(uint groupId, uint switchId);
        /*0x2906ee0*/ void SetSwitchByWwiseId(uint groupId, uint switchId, UnityEngine.GameObject eventObject);
        /*0x2906fb4*/ void SetSwitchByWwiseName(string groupName, string switchName, UnityEngine.GameObject eventObject);
        /*0x2907064*/ void SetSwitchByGroupIdAndAlias(int groupUnityId, string alias);
        /*0x290709c*/ void SetSwitchByGroupIdAndAlias(int groupUnityId, string alias, UnityEngine.GameObject eventObject);
        /*0x2907264*/ void SetSwitchByUnityId(int unityId);
        /*0x2907294*/ void SetSwitchByUnityId(int unityId, UnityEngine.GameObject eventObject);
        /*0x290739c*/ void SetStateByYetiAlias(int groupUnityId, string alias);
        /*0x2907624*/ void SetStateByUnityId(int groupUnityId, int unityId);
        /*0x290777c*/ void RegisterGameObject(UnityEngine.GameObject obj);
        /*0x2907830*/ void RegisterSoundEngineObject();
        /*0x29078f0*/ void UnregisterGameObject(UnityEngine.GameObject obj);
        /*0x29079a4*/ void UnregisterAllGameObjects();
        /*0x2907a50*/ void UnregisterAllGameObjectsExceptSoundEngineObject();
        /*0x290755c*/ void SetState(uint stateGroup, uint state);
        /*0x2907a68*/ void SaveSettings();
        /*0x2907ab8*/ System.Collections.IEnumerator WriteSoundSettings();
        /*0x2907b2c*/ void SetGlobalRtpc(Yeti.AudioRTPC rtpcName, float rtpcValue);
        /*0x2907c04*/ void SetGameSoundManagerRtpc(Yeti.AudioRTPC rtpcName, float rtpcValue);
        /*0x29054fc*/ void SetRtpc(Yeti.AudioRTPC rtpcName, float rtpcValue, UnityEngine.GameObject eventObject);
        /*0x290642c*/ bool GetMuted();
        /*0x2906444*/ void SetMuted(bool val);
        /*0x2906790*/ void SetMutedWithoutSaving(bool val);
        /*0x2907cf8*/ void SetPuppetEditorOn(bool val);
        /*0x2906564*/ float GetSfxVolume();
        /*0x290657c*/ void SetSfxVolume(float val);
        /*0x29064c4*/ float GetMusicVolume();
        /*0x29064dc*/ void SetMusicVolume(float val);
        /*0x2907dcc*/ void LoadSoundBank(UnityEngine.TextAsset soundBank);
        /*0x2907de4*/ void UnloadSoundBank(UnityEngine.TextAsset soundBank);

        class <WriteSoundSettings>d__55 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.GameSoundManager <>4__this;

            /*0x2907f00*/ <WriteSoundSettings>d__55(int <>1__state);
            /*0x2907f28*/ void System.IDisposable.Dispose();
            /*0x2907f2c*/ bool MoveNext();
            /*0x2907fc0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x2907fc8*/ void System.Collections.IEnumerator.Reset();
            /*0x2908000*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class GameSoundSettingsDataPersister : Yeti.Persistence.GenericProtobufPersister<Yeti.Data.UserAudioSettings>
    {
        /*0x290813c*/ GameSoundSettingsDataPersister();
        /*0x2908008*/ Yeti.Data.UserAudioSettings CreateDefaultInstance();
        /*0x2908074*/ Google.Protobuf.MessageParser<Yeti.Data.UserAudioSettings> GetParser();
        /*0x29080fc*/ string GetPathRelativeToPersistentDataPath();
    }

    interface IPlayerBanManager
    {
        /*0x1f30ebc*/ void HandleBanEnforcement(Yeti.Data.BannedPlayer bannedPlayer);
        /*0x1f309e4*/ void CloseBanPopup();
        /*0x1f2fe40*/ bool IsPlayerWarnedFor(Yeti.Data.GameContentType warningType);
        /*0x1f30ebc*/ void UpdateWarnings(System.Collections.Generic.IEnumerable<Yeti.Data.GameContentType> warnings);
        /*0x1f2fec8*/ bool TryShowWarnPopup(System.Action warnPopupCloseCallback);
        /*0x1f309e4*/ void WarnPopupClosed();
        /*0x1f2fe14*/ bool CanShowWarningInfo();
        /*0x1f2fe14*/ bool get_IsPlayerBanned();
    }

    class PlayerBanManager : Yeti.IPlayerBanManager
    {
        static string BannedPlayerPrefab = "prefab.PlayerBanned";
        /*0x10*/ PvzN3xt.PlayerIdentity.IIdentityProvider _identityProvider;
        /*0x18*/ Odin.IUIPopupService _popupService;
        /*0x20*/ Yeti.INavigationService _navigationService;
        /*0x28*/ bool <IsPlayerBanned>k__BackingField;
        /*0x29*/ bool <IsWarningInfoSurfaced>k__BackingField;
        /*0x30*/ System.Collections.Generic.List<Yeti.Data.GameContentType> _warnReasonTypes;
        /*0x38*/ Yeti.Data.BannedPlayer <CurrentBannedPlayer>k__BackingField;
        /*0x40*/ int _popUpId;
        /*0x48*/ System.Action _warnPopupCloseCallback;

        /*0x2908818*/ PlayerBanManager();
        /*0x2908184*/ bool get_IsPlayerBanned();
        /*0x290818c*/ void set_IsPlayerBanned(bool value);
        /*0x2908194*/ bool get_IsWarningInfoSurfaced();
        /*0x290819c*/ void set_IsWarningInfoSurfaced(bool value);
        /*0x29081a4*/ Yeti.Data.BannedPlayer get_CurrentBannedPlayer();
        /*0x29081ac*/ void set_CurrentBannedPlayer(Yeti.Data.BannedPlayer value);
        /*0x29081b4*/ void HandleBanEnforcement(Yeti.Data.BannedPlayer bannedPlayer);
        /*0x29083d8*/ void CloseBanPopup();
        /*0x29084cc*/ bool IsPlayerWarnedFor(Yeti.Data.GameContentType warningType);
        /*0x290857c*/ void UpdateWarnings(System.Collections.Generic.IEnumerable<Yeti.Data.GameContentType> warnings);
        /*0x290863c*/ bool TryShowWarnPopup(System.Action warnPopupCloseCallback);
        /*0x2908750*/ void WarnPopupClosed();
        /*0x2908784*/ bool HasWarningInfo();
        /*0x290873c*/ bool CanShowWarningInfo();
        /*0x29083ac*/ void SetBannedPlayer(Yeti.Data.BannedPlayer bannedPlayer);
    }

    class FtueDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.ITutorialController _tutorialController;
        /*0x18*/ PvzN3xt.Tutorial.ITutorialScriptManager _tutorialScriptManager;
        /*0x20*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x28*/ PvzN3xt.Tutorial.TutorialScrimCutoutManager _tutorialScrimCutoutManager;
        /*0x30*/ PvzN3xt.Tutorial.TutorialBouncingArrowManager _tutorialBouncingArrowManager;
        /*0x38*/ PvzN3xt.Tutorial.TutorialInstantiatePlantManager _tutorialInstantiatePlantManager;
        /*0x40*/ Yeti.GameNavigationDebugManager _gameNavigationDebugManager;
        /*0x48*/ Yeti.LocalPrefBool _tutorialsToggle;
        /*0x50*/ PvzN3xt.Data.CompassDirection _bouncingArrowCompassDirection;
        /*0x58*/ string _bouncingArrowTargetId;
        /*0x60*/ string _dragAndDropFromTargetId;
        /*0x68*/ string _dragAndDropToTargetId;
        /*0x70*/ string _potTargetId;
        /*0x78*/ string _plantAlias;

        static /*0x2909704*/ FtueDebugManager();
        static /*0x29090e0*/ void SetNvsOverride(string nvsBoolsPath, bool isActive);
        /*0x2909660*/ FtueDebugManager();
        /*0x29088a8*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2908d7c*/ void CapitalGames.ILifecycleAware.OnAppReset();
        /*0x2908ad0*/ void RegisterBouncingArrowOptions();
        /*0x2908d70*/ void RegisterDragAndDropOptions();
        /*0x2908d74*/ void RegisterScrimCutoutOptions();
        /*0x2908d78*/ void RegisterInstantiatePlantOptions();
        /*0x2908d80*/ void SetTutorialsEnabled(bool enabled);
        /*0x2908ec8*/ void HotReloadTutorials();
        /*0x29091ec*/ void ShowBouncingArrow();
        /*0x290935c*/ void StartDragAndDropLoop();
        /*0x29094f0*/ void InstantiatePlant();

        class <>c
        {
            static /*0x0*/ Yeti.FtueDebugManager.<> <>9;
            static /*0x8*/ System.Action <>9__23_0;
            static /*0x10*/ System.Action <>9__24_0;
            static /*0x18*/ System.Action <>9__25_0;

            static /*0x2909784*/ <>c();
            /*0x29097ec*/ <>c();
            /*0x29097f4*/ void <ShowBouncingArrow>b__23_0();
            /*0x29097f8*/ void <StartDragAndDropLoop>b__24_0();
            /*0x29097fc*/ void <InstantiatePlant>b__25_0();
        }
    }

    class TalkingHeadDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.ICombatUnitDefinitionProvider _combatUnitDefinitionProvider;
        /*0x18*/ PvzN3xt.Tutorial.ITutorialTalkingHeadsManager _tutorialTalkingHeadsManager;
        /*0x20*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x28*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x30*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x38*/ UnityEngine.Coroutine _talkingHeadCoroutine;
        /*0x40*/ PvzN3xt.Tutorial.ScriptedActionShowTalkingHeadMessage _showTalkingHeadMessage;
        /*0x48*/ Yeti.TalkingHeadDebugManager.TalkingHeadConfig _talkingHeadConfig;

        static /*0x290a164*/ TalkingHeadDebugManager();
        /*0x290a0e0*/ TalkingHeadDebugManager();
        /*0x2909800*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2909c78*/ void SetUnitAlias(string unitAlias);
        /*0x2909c50*/ void RefreshShowCloseOptions();
        /*0x2909ca0*/ void CloseTalkingHead();
        /*0x2909d84*/ string GetTalkingHeadConfigString();
        /*0x2909f80*/ void ShowTalkingHead();
        /*0x290a048*/ System.Collections.IEnumerator TalkingHeadCoroutine();
        /*0x290a0dc*/ void OnAppReset();

        class TalkingHeadConfig
        {
            /*0x10*/ Yeti.HostMood Mood;
            /*0x14*/ bool IsLeft;
            /*0x18*/ string UnitAlias;

            /*0x290a154*/ TalkingHeadConfig();
        }

        class <TalkingHeadCoroutine>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.TalkingHeadDebugManager <>4__this;

            /*0x290a0b4*/ <TalkingHeadCoroutine>d__16(int <>1__state);
            /*0x290a1e4*/ void System.IDisposable.Dispose();
            /*0x290a1e8*/ bool MoveNext();
            /*0x290a3e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x290a3f0*/ void System.Collections.IEnumerator.Reset();
            /*0x290a428*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class AiTutorialCoordinator
    {
        /*0x10*/ YetiSimAi.Runner.AiUpdateHook _aiUpdateHook;
        /*0x18*/ bool _isEnabled;
        /*0x19*/ bool _isCombatPaused;
        /*0x1a*/ bool _isInputBlocked;

        /*0x290a430*/ AiTutorialCoordinator(YetiSimAi.Runner.AiUpdateHook aiUpdateHook);
        /*0x290a468*/ void Start(PvzN3xt.Tutorial.ITutorialMessageListener tutorialMessageListener, PvzN3xt.UI.InputBlockerController inputBlockerController);
        /*0x290a7f8*/ void Shutdown(PvzN3xt.Tutorial.ITutorialMessageListener tutorialMessageListener, PvzN3xt.UI.InputBlockerController inputBlockerController);
        /*0x290ab34*/ void PauseEntryInterstitial();
        /*0x290ab58*/ void PlayEntryInterstitial();
        /*0x290abc0*/ void PauseCombat();
        /*0x290abd8*/ void UnpauseCombat();
        /*0x290a7e0*/ void BlockInput();
        /*0x290abf4*/ void StopBlockingInput();
        /*0x290ab78*/ void CheckForTransition(Yeti.AiTutorialCoordinator.StatusDirection direction);
        /*0x290ac10*/ bool ShouldBeEnabled();
        /*0x290ac30*/ void Enable();
        /*0x290ab38*/ void Disable();

        enum StatusDirection
        {
            Enable = 0,
            Disable = 1,
        }
    }

    class AnimationCurveUtils
    {
        static /*0x290ac54*/ float GetValueAtTime(UnityEngine.AnimationCurve normalizedCurve, float currentTime, float totalTime, float minValue, float maxValue);
        static /*0x290ac90*/ float GetValueAtTime(UnityEngine.AnimationCurve normalizedCurve, float normalizedTime, float minValue, float maxValue);
        static /*0x290acc8*/ float UnnormalizeValue(float normalizedValue, float minValue, float maxValue);
    }

    class BattleGenErrorReportingService
    {
        /*0x10*/ int <ErrorCountThreshold>k__BackingField;
        /*0x14*/ float <GenerationTimeThreshold>k__BackingField;

        /*0x290ace8*/ BattleGenErrorReportingService(System.Collections.Generic.IReadOnlyCollection<Yeti.IBattleGenErrorReportPublisher> errorReportPublisher);
        /*0x290acd8*/ int get_ErrorCountThreshold();
        /*0x290ace0*/ float get_GenerationTimeThreshold();
        /*0x290acf8*/ bool ShouldPublishReport(Yeti.Data.BattleGenerationReport report);
    }

    class BattleGenErrorReporter : Yeti.BattleGenErrorReportingService
    {
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;

        /*0x290ad00*/ BattleGenErrorReporter(System.Collections.Generic.IReadOnlyCollection<Yeti.IBattleGenErrorReportPublisher> errorReportPublisher, PvzN3xt.Nvs.INamedValueService namedValueService);
        /*0x290ad38*/ bool ShouldPublishReport(Yeti.Data.BattleGenerationReport report);
        /*0x290ae48*/ int get_ErrorCountThreshold();
        /*0x290af50*/ float get_GenerationTimeThreshold();
    }

    interface IBattleGenErrorReportPublisher
    {
        /*0x1f30ebc*/ void PublishReport(Yeti.Data.BattleGenerationReport report);
    }

    class BattleGenErrorReportPublishToLog : Yeti.IBattleGenErrorReportPublisher, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        /*0x290b05c*/ BattleGenErrorReportPublishToLog();
        /*0x290b058*/ void PublishReport(Yeti.Data.BattleGenerationReport report);
    }

    class BattleGenPoolOverrides
    {
        /*0x10*/ bool <ShouldOverride>k__BackingField;
        /*0x18*/ System.Collections.Generic.Dictionary<int, bool> _poolUnlockMap;

        /*0x290b904*/ BattleGenPoolOverrides();
        /*0x290b064*/ bool get_ShouldOverride();
        /*0x290b06c*/ void set_ShouldOverride(bool value);
        /*0x290b074*/ void AddPool(int id);
        /*0x290b0e4*/ void ToggleShouldOverridePools();
        /*0x290b0f4*/ Yeti.Data.BattleGenerationParameters CreateParametersWithNewPools(Yeti.Data.BattleGenerationParameters parameters);
        /*0x290b280*/ System.Collections.Generic.IReadOnlyList<int> GetOverriddenPoolIds();
        /*0x290b5c0*/ void SetAllPoolsUnlockStatusTo(bool isUnlocked);
        /*0x290b7ec*/ void TogglePoolUnlockStatus(int poolId);
        /*0x290b894*/ bool IsUnlocked(int poolId);
    }

    class Billboard : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.Camera _camera;
        /*0x28*/ UnityEngine.Transform _cachedTransform;
        /*0x30*/ UnityEngine.Vector3 _previousLookAt;

        static /*0x290bc3c*/ void LookAtCamera(UnityEngine.Transform transform, UnityEngine.Vector3 lookAt, UnityEngine.Quaternion targetCameraRotation);
        static /*0x290bb98*/ UnityEngine.Vector3 GetLookAt(UnityEngine.Vector3 position, UnityEngine.Quaternion cameraRotation);
        /*0x290bd08*/ Billboard();
        /*0x290b98c*/ void Start();
        /*0x290b9b0*/ void Update();
    }

    class BoardCelebrationDooberManager
    {
        static string DooberAssetId = "prefab.ui_CurrencyDoober";
        static string DooberContainerName = "BoardCelebrationDoobers";
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Odin.IUILayerService _layerService;
        /*0x20*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IAssetMemoryMonitor _assetMemoryMonitor;
        /*0x28*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x30*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x38*/ Yeti.MultipleAssetLoader _assetLoader;
        /*0x40*/ Yeti.ICombatObjectLifeCycleManager _objectLifeCycleManager;
        /*0x48*/ UnityEngine.U2D.SpriteAtlas _atlas;
        /*0x50*/ UnityEngine.GameObject _container;

        /*0x290bd10*/ BoardCelebrationDooberManager();
        /*0x290be34*/ void LoadDoobers(System.Action callback);
        /*0x290c3f8*/ void Cleanup();
        /*0x290c294*/ UnityEngine.GameObject CreateDooberRootContainer();
        /*0x290c4ec*/ void FlyDoober(UnityEngine.Vector2 startPosition, UnityEngine.Vector2 endPosition, System.Action<Yeti.FlyingDooberController> onLand);

        class <>c__DisplayClass12_0
        {
            /*0x10*/ Yeti.BoardCelebrationDooberManager <>4__this;
            /*0x18*/ System.Action callback;

            /*0x290c28c*/ <>c__DisplayClass12_0();
            /*0x290c6d4*/ void <LoadDoobers>b__0(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resourceCollection);
        }
    }

    class BoardCelebrationSequence
    {
        static string BonusCoinsCounterTargetId = "BonusCoinsCounter";
        /*0x10*/ Yeti.GameEventManager _gameEventManager;
        /*0x18*/ Yeti.INavigationService _navigationService;
        /*0x20*/ Yeti.PostCombatRewardFlowController _postCombatRewardFlowController;
        /*0x28*/ PvzN3xt.Tutorial.ITutorialTargetingSystem _tutorialTargetingSystem;
        /*0x30*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x38*/ PvzN3xt.Battle.BattleRewardsDefinitionProvider _battleRewardsDefinitionProvider;
        /*0x40*/ Yeti.CombatSceneStateContext _context;
        /*0x48*/ Yeti.PuppetAvatarContext _puppetAvatarContext;
        /*0x50*/ System.Collections.Generic.List<Yeti.IUnitPuppetAvatarView> _avatars;
        /*0x58*/ System.Collections.Generic.List<Yeti.OnBoardDropPuppet> _moneyTokenDropPuppets;
        /*0x60*/ System.Collections.Generic.HashSet<Yeti.IUnitPuppetAvatarView> _avatarsThatAttackedDuringNormalSequence;
        /*0x68*/ System.Collections.Generic.Dictionary<Yeti.IUnitPuppetAvatarView, int> _coinsWhenAvatarExplodes;
        /*0x70*/ System.Collections.Generic.Dictionary<YetiSimCoreLib.Game.GridCell, int> _zombieDeathsByCell;
        /*0x78*/ System.Collections.Generic.Dictionary<YetiSimCoreLib.Game.GridCell, Yeti.IUnitPuppetAvatarView> _avatarsByCells;
        /*0x80*/ Yeti.BoardCelebrationDooberManager _dooberManager;
        /*0x88*/ System.Collections.Generic.Dictionary<Yeti.IUnitPuppetAvatarView, UnityEngine.Vector3> _originalMovedAvatarPositions;
        /*0x90*/ System.Collections.Generic.List<UnityEngine.Coroutine> _waitForExplosionAnimationCoroutines;
        /*0x98*/ int _totalCoinsCollected;
        /*0xa0*/ UnityEngine.Coroutine _mainSequenceCoroutine;
        /*0xa8*/ Yeti.Combat.MessageProcessors.GameSimulationSummary _gameSimulationSummary;
        /*0xb0*/ System.Action _onComplete;

        /*0x290ca44*/ BoardCelebrationSequence(Yeti.CombatSceneStateContext context);
        /*0x290ce90*/ void Cleanup();
        /*0x290d4f8*/ void StopCoroutines();
        /*0x290d828*/ void StartCelebrationSequence(Yeti.Combat.MessageProcessors.GameSimulationSummary gameSimulationSummary, System.Action onComplete);
        /*0x290daa0*/ void HandleBoardCelebrationNavigationComplete(string obj);
        /*0x290dbec*/ System.Collections.IEnumerator BoardCelebration();
        /*0x290dc80*/ System.Collections.IEnumerator UpdateBaseCoins();
        /*0x290dd14*/ System.Collections.IEnumerator SpawnMoneyTokenDrops();
        /*0x290dda8*/ System.Collections.IEnumerator CollectMoneyTokenCoins();
        /*0x290de3c*/ void HandleCoinDooberLanded(Yeti.FlyingDooberController doober);
        /*0x290def0*/ System.Collections.IEnumerator SpawnUnitsInZombieDeathReplayOrder();
        /*0x290df84*/ void MovePlantsAndZombieObstaclesOnCellOffScreen(YetiSimCoreLib.Game.GridCell cell);
        /*0x290e640*/ bool HideDesiredUnitsForCelebration();
        /*0x290ea60*/ System.Collections.IEnumerator TriggerExplosionsAndSpawnCoinsOnUnits();
        /*0x290eaf4*/ void MovePlantsBackToOriginalCell(YetiSimCoreLib.Game.GridCell cell);
        /*0x290efbc*/ System.Collections.IEnumerator WaitForBonusCoins();
        /*0x290f050*/ void EndBoardCelebration();
        /*0x290de44*/ void IncrementCoinCounter(int amount);
        /*0x290f06c*/ bool TryGetPrefabForRollingDeathCount(Yeti.BoardCelebrationConfig config, int deathCount, ref string prefabId);
        /*0x290f0fc*/ Yeti.IUnitPuppetAvatarView CreateAvatarAtCell(YetiSimCoreLib.Game.GridCell cell, string prefabId);
        /*0x290f47c*/ Yeti.OnBoardDropPuppet CreateDropTokenPuppet(Yeti.Combat.MessageProcessors.DynamicDrop drop);
        /*0x290da0c*/ void SkipBoardCelebration();
        /*0x290f620*/ void SetCelebrationUnitsToFinalState(System.Collections.Generic.Dictionary<YetiSimCoreLib.Game.GridCell, Yeti.Combat.MessageProcessors.GameSimulationSummary.ZombieKillCounts> zombieDeathsByCell);
        /*0x290fe64*/ void CreateNewAvatarAndExplodeIt(YetiSimCoreLib.Game.GridCell cell, string prefabId, Yeti.BoardCelebrationConfig config);
        /*0x291005c*/ bool TryGetMoneyTokenDropConfig(ref Yeti.Data.MoneyTokenDropConfig moneyTokenDropConfig);
        /*0x290fdd4*/ bool TryGetFinalPrefabForDeathCount(Yeti.BoardCelebrationConfig config, int deathCount, ref string prefabId);
        /*0x29103e4*/ void <HandleBoardCelebrationNavigationComplete>b__26_0();

        class <>c__DisplayClass35_0
        {
            /*0x10*/ Yeti.BoardCelebrationSequence <>4__this;
            /*0x18*/ UnityEngine.Vector2 coinTargetPosition;

            /*0x29104a4*/ <>c__DisplayClass35_0();
        }

        class <>c__DisplayClass35_1
        {
            /*0x10*/ Yeti.IUnitPuppetAvatarView avatar;
            /*0x18*/ UnityEngine.Vector3 avatarScreenPosition;
            /*0x24*/ int coinsToFly;
            /*0x28*/ Yeti.BoardCelebrationSequence.<> CS$<>8__locals1;

            /*0x29104ac*/ <>c__DisplayClass35_1();
            /*0x29104b4*/ void <TriggerExplosionsAndSpawnCoinsOnUnits>b__0();
        }

        class <BoardCelebration>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BoardCelebrationSequence <>4__this;
            /*0x28*/ Yeti.BoardCelebrationConfig <config>5__2;

            /*0x290dc58*/ <BoardCelebration>d__27(int <>1__state);
            /*0x291067c*/ void System.IDisposable.Dispose();
            /*0x2910680*/ bool MoveNext();
            /*0x2910b10*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x2910b18*/ void System.Collections.IEnumerator.Reset();
            /*0x2910b50*/ object System.Collections.IEnumerator.get_Current();
        }

        class <CollectMoneyTokenCoins>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BoardCelebrationSequence <>4__this;
            /*0x28*/ int <numCoinsPerMoneyToken>5__2;
            /*0x30*/ UnityEngine.WaitForSeconds <waitBetweenEachExplosion>5__3;
            /*0x38*/ UnityEngine.Vector2 <coinTargetPosition>5__4;
            /*0x40*/ System.Collections.Generic.List.Enumerator<Yeti.OnBoardDropPuppet> <>7__wrap4;

            /*0x290de14*/ <CollectMoneyTokenCoins>d__30(int <>1__state);
            /*0x2910b58*/ void System.IDisposable.Dispose();
            /*0x2910b74*/ bool MoveNext();
            /*0x2911290*/ void <>m__Finally1();
            /*0x29112e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x29112e8*/ void System.Collections.IEnumerator.Reset();
            /*0x2911320*/ object System.Collections.IEnumerator.get_Current();
        }

        class <SpawnMoneyTokenDrops>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BoardCelebrationSequence <>4__this;

            /*0x290dd80*/ <SpawnMoneyTokenDrops>d__29(int <>1__state);
            /*0x2911328*/ void System.IDisposable.Dispose();
            /*0x291132c*/ bool MoveNext();
            /*0x29117a8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x29117b0*/ void System.Collections.IEnumerator.Reset();
            /*0x29117e8*/ object System.Collections.IEnumerator.get_Current();
        }

        class <SpawnUnitsInZombieDeathReplayOrder>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BoardCelebrationSequence <>4__this;
            /*0x28*/ Yeti.BoardCelebrationConfig <config>5__2;
            /*0x30*/ UnityEngine.WaitForSeconds <waitBetweenEachSpawn>5__3;
            /*0x38*/ System.Collections.Generic.IEnumerator<Yeti.Combat.MessageProcessors.BoardUnit> <>7__wrap3;

            /*0x290df5c*/ <SpawnUnitsInZombieDeathReplayOrder>d__32(int <>1__state);
            /*0x29117f0*/ void System.IDisposable.Dispose();
            /*0x291180c*/ bool MoveNext();
            /*0x29120d4*/ void <>m__Finally1();
            /*0x2912184*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x291218c*/ void System.Collections.IEnumerator.Reset();
            /*0x29121c4*/ object System.Collections.IEnumerator.get_Current();
        }

        class <TriggerExplosionsAndSpawnCoinsOnUnits>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BoardCelebrationSequence <>4__this;
            /*0x28*/ Yeti.BoardCelebrationSequence.<> <>8__1;
            /*0x30*/ Yeti.BoardCelebrationConfig <config>5__2;
            /*0x38*/ UnityEngine.WaitForSeconds <waitBetweenEachExplosion>5__3;
            /*0x40*/ System.Collections.Generic.List.Enumerator<Yeti.IUnitPuppetAvatarView> <>7__wrap3;

            /*0x290eacc*/ <TriggerExplosionsAndSpawnCoinsOnUnits>d__35(int <>1__state);
            /*0x29121cc*/ void System.IDisposable.Dispose();
            /*0x29121e8*/ bool MoveNext();
            /*0x29128f4*/ void <>m__Finally1();
            /*0x2912944*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x291294c*/ void System.Collections.IEnumerator.Reset();
            /*0x2912984*/ object System.Collections.IEnumerator.get_Current();
        }

        class <UpdateBaseCoins>d__28 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BoardCelebrationSequence <>4__this;

            /*0x290dcec*/ <UpdateBaseCoins>d__28(int <>1__state);
            /*0x291298c*/ void System.IDisposable.Dispose();
            /*0x2912990*/ bool MoveNext();
            /*0x2912a10*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x2912a18*/ void System.Collections.IEnumerator.Reset();
            /*0x2912a50*/ object System.Collections.IEnumerator.get_Current();
        }

        class <WaitForBonusCoins>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.BoardCelebrationSequence <>4__this;

            /*0x290f028*/ <WaitForBonusCoins>d__37(int <>1__state);
            /*0x2912a58*/ void System.IDisposable.Dispose();
            /*0x2912a5c*/ bool MoveNext();
            /*0x2912b5c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x2912b64*/ void System.Collections.IEnumerator.Reset();
            /*0x2912b9c*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    interface IHinge
    {
        /*0x1f30a84*/ void SetHinged(bool isHinged);
    }

    class BoardComponent : UnityEngine.MonoBehaviour, Yeti.IHinge
    {
        /*0x20*/ Yeti.BoardHinge[] _hingeComponents;
        /*0x28*/ Yeti.EstablishingShotsConfig _establishingShotsConfig;
        /*0x30*/ Yeti.EstablishingShotsConfig _celebrationMomentConfig;
        /*0x38*/ System.Collections.Generic.List<Yeti.BoardElevationColumnView> _columnViews;
        /*0x40*/ UnityEngine.GameObject _leftSection;
        /*0x48*/ UnityEngine.GameObject _rightSection;
        /*0x50*/ System.Collections.Generic.List<Yeti.BoardViewStateConfig> _viewStates;
        /*0x58*/ Yeti.GlobalShaderVariables _globalShaderVariables;
        /*0x60*/ UnityEngine.Vector3 _leftSectionOriginalPosition;
        /*0x6c*/ UnityEngine.Vector3 _rightSectionOriginalPosition;

        /*0x29136ec*/ BoardComponent();
        /*0x2912ba4*/ Yeti.EstablishingShotsConfig get_EstablishingShotsConfig();
        /*0x2912bac*/ Yeti.EstablishingShotsConfig get_CelebrationMomentConfig();
        /*0x2912bb4*/ void Awake();
        /*0x2912cd0*/ void SetHinged(bool isHinged);
        /*0x2912d8c*/ void SetElevation(YetiSimCoreLib.Game.BoardInclineMap inclineMap);
        /*0x29131b0*/ void SetViewState(string stateId);
        /*0x2912fb8*/ void AlignViewObjectToElevation(UnityEngine.GameObject view, int floorHeight, UnityEngine.Vector3 oldPos);
    }

    class BoardElevationColumnView : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.GameObject _slopeFlatView;
        /*0x28*/ UnityEngine.GameObject _slopeDownRightToLeftView;
        /*0x30*/ UnityEngine.GameObject _slopeUpRightToLeftView;
        /*0x38*/ UnityEngine.Vector3 _originalPosition;

        /*0x2913730*/ BoardElevationColumnView();
        /*0x29136f4*/ UnityEngine.Vector3 get_OriginalPosition();
        /*0x2913700*/ void Awake();
        /*0x2913064*/ void SetIncline(Yeti.Data.BoardIncline incline);
    }

    class BoardHinge : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.Vector3 _hingedRotation;
        /*0x2c*/ UnityEngine.Vector3 _unhingedRotation;
        /*0x38*/ UnityEngine.Transform _transform;

        /*0x291376c*/ BoardHinge();
        /*0x2913738*/ void Awake();
        /*0x2912d3c*/ void SetHinged(bool isHinged);
    }

    class BoardPositionUtils
    {
        static float ElevationInclineAngleProjected = 5.103000164031982;
        static float ElevationInclineHypotenuseProjected = 1.003980040550232;
        static float ElevationInclineAngle = 26.565000534057617;
        static float ElevationInclineHypotenuse = 1.1180000305175781;
        static float DistanceThreshold = 1;
        static /*0x0*/ UnityEngine.Vector3 BoardBottomLeftWorldPosition;
        static /*0xc*/ UnityEngine.Vector3 BoardTopRightWorldPosition;
        static /*0x18*/ UnityEngine.Vector3 YAxisVector;
        static /*0x24*/ UnityEngine.Vector3 CameraAxisVector;

        static /*0x291451c*/ BoardPositionUtils();
        static /*0x2913774*/ UnityEngine.Vector3 get_BoardWorldSize();
        static /*0x29137e4*/ float get_PlayableVisualAreaLeftBound();
        static /*0x291383c*/ float get_PlayableVisualAreaRightBound();
        static /*0x2913894*/ float get_SimToWorldUnitsX();
        static /*0x2913924*/ float get_SimToWorldUnitsY();
        static /*0x2913970*/ float get_SimToWorldUnitsZ();
        static /*0x29139cc*/ void SetBoardSize(int numColumns);
        static /*0x2913a70*/ UnityEngine.Vector3 AlignToGridCellCenterWorldPosition(UnityEngine.Vector3 worldPosition);
        static /*0x2913bb4*/ UnityEngine.Vector3 GridCellToWorldPositionUnitCoordinates(YetiSimCoreLib.Game.GridCell cell);
        static /*0x2913b24*/ UnityEngine.Vector3 GridCellToWorldPosition(YetiSimCoreLib.Game.GridCell cell);
        static /*0x2913c44*/ UnityEngine.Vector3 SimToWorldPositionUnitCoordinates(YetiSimCoreLib.Game.Position simPosition);
        static /*0x290f570*/ UnityEngine.Vector3 SimToWorldPositionTerrainCoordinates(YetiSimCoreLib.Game.Position simPosition);
        static /*0x2913d74*/ UnityEngine.Vector3 TerrainToUnitWorldPosition(UnityEngine.Vector3 terrainPos);
        static /*0x2913df0*/ UnityEngine.Vector3 GetWorldPositionForGameObject(UnityEngine.GameObject go, UnityEngine.Vector3 terrainPosition);
        static /*0x2913ea0*/ UnityEngine.Vector3 GetOffsetForGameObject(UnityEngine.GameObject go, UnityEngine.Vector3 terrainOffset);
        static /*0x2913cfc*/ UnityEngine.Vector3 SimYToWorldDeltaUnitCoordinates(int simY);
        static /*0x2913688*/ UnityEngine.Vector3 SimYToWorldDeltaTerrainCoordinates(int simY);
        static /*0x290ef0c*/ YetiSimCoreLib.Game.GridCell WorldPositionToGridCell(UnityEngine.Vector3 worldPosition);
        static /*0x290e4f0*/ YetiSimCoreLib.Game.Position WorldToSimPosition(UnityEngine.Vector3 worldPosition);
        static /*0x2913f60*/ YetiSimCoreLib.Game.Position WorldToSimPositionWithoutElevation(UnityEngine.Vector3 worldPosition);
        static /*0x2914090*/ Yeti.UnitPuppetAvatarView FindTappedPuppetUnit(UnityEngine.Vector3 closestBoardPosition);
        static /*0x2914214*/ bool IsWorldPositionOnBoard(UnityEngine.Vector3 worldPosition);
        static /*0x29142cc*/ bool IsWorldPositionWithinPlayableVisualArea(UnityEngine.Vector3 worldPosition);
        static /*0x2912034*/ YetiSimCoreLib.Game.GridCell ClampCellToBoard(YetiSimCoreLib.Game.GridCell gridCell);
        static /*0x29143d4*/ void RotateBasedOnIncline(Yeti.Data.BoardIncline incline, UnityEngine.Transform cachedTransform);
        static /*0x2914488*/ void ScaleBasedOnIncline(Yeti.Data.BoardIncline incline, UnityEngine.Transform cachedTransform);
        static /*0x290f3d4*/ UnityEngine.Vector3 GridCellToWorldPositionAtFloorHeight(YetiSimCoreLib.Game.GridCell gridCell, YetiSimCoreLib.Game.BoardInclineMap boardInclineMap);
    }

    interface IBoardView
    {
        /*0x1f30ebc*/ void SetViewState(string stateId);
    }

    class NullBoardView : Yeti.IBoardView
    {
        static /*0x0*/ Yeti.NullBoardView Instance;

        static /*0x29145d4*/ NullBoardView();
        /*0x29145cc*/ NullBoardView();
        /*0x29145c8*/ void SetViewState(string stateId);
    }

    class BoardView : Yeti.IBoardView, Yeti.IHinge
    {
        /*0x10*/ Yeti.ICombatObjectLifeCycleManager _objectManager;
        /*0x18*/ string _boardAssetId;
        /*0x20*/ System.Collections.Generic.Dictionary<YetiSimCoreLib.Game.GridCell, Yeti.GridCellView> _gridCellViews;
        /*0x28*/ YetiSimCoreLib.Game.BoardInclineMap _inclineMap;
        /*0x30*/ Yeti.BoardComponent _boardComponent;

        /*0x2914644*/ BoardView(Yeti.ICombatObjectLifeCycleManager objectManager, Yeti.CombatDefinitionData combatDefinitionData, YetiSimCoreLib.Game.BoardInclineMap inclineMap);
        /*0x2914754*/ BoardView(Yeti.ICombatObjectLifeCycleManager objectManager, string boardAssetId, YetiSimCoreLib.Game.BoardInclineMap inclineMap);
        /*0x291463c*/ Yeti.BoardComponent get_BoardComponent();
        /*0x2914854*/ void CreateViews();
        /*0x2914b50*/ void SetElevations(YetiSimCoreLib.Game.BoardInclineMap inclineMap);
        /*0x2914ca0*/ void SetGridCellIncline(YetiSimCoreLib.Game.GridCell gridCell, Yeti.GridCellView gridCellView);
        /*0x2914d44*/ void SetViewState(string stateId);
        /*0x2914a34*/ Yeti.GridCellView CreateGridCellView(Yeti.ICombatObjectLifeCycleManager objectSpawner, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x2914d58*/ void ClearHighlights();
        /*0x2914e70*/ void HighlightPosition(UnityEngine.Vector3 worldPosition, UnityEngine.Color color);
        /*0x2914ee0*/ void HighlightPositionWithoutClear(UnityEngine.Vector3 worldPosition, UnityEngine.Color color);
        /*0x291512c*/ void HighlightArea(Yeti.GridArea area, UnityEngine.Color color);
        /*0x2915008*/ void HighlightRow(int row, UnityEngine.Color color);
        /*0x29150c0*/ void HighlightColumn(int col, UnityEngine.Color color);
        /*0x2915200*/ void HighlightCell(int row, int col, UnityEngine.Color color);
        /*0x2915348*/ void SetHinged(bool isHinged);
    }

    class BoardViewStateConfig
    {
        /*0x10*/ string StateId;
        /*0x18*/ System.Collections.Generic.List<Yeti.GlobalVar_Color> GlobalColors;
        /*0x20*/ System.Collections.Generic.List<Yeti.BoardViewObjectToggleConfig> ToggledObjects;

        /*0x29153dc*/ BoardViewStateConfig();
    }

    class BoardViewObjectToggleConfig
    {
        /*0x10*/ UnityEngine.GameObject GameObject;
        /*0x18*/ bool IsActive;

        /*0x29153e4*/ BoardViewObjectToggleConfig();
    }

    class CameraCapture : UnityEngine.MonoBehaviour
    {
        /*0x20*/ int Width;
        /*0x24*/ int Height;

        /*0x291575c*/ CameraCapture();
        /*0x29153ec*/ void LateUpdate();
    }

    class CelebrationMomentState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatSceneStateContext _context;
        /*0x78*/ Yeti.CombatGuiModel _combatModel;
        /*0x80*/ System.Action _handleScorePopsComplete;
        /*0x88*/ Yeti.EndCombatCause _endCombatCause;

        /*0x29157a4*/ CelebrationMomentState(Yeti.CombatSceneStateContext context, Yeti.CombatGuiModel combatModel);
        /*0x2915764*/ string get_Name();
        /*0x2915864*/ void SetEndCombatCause(Yeti.EndCombatCause result);
        /*0x291586c*/ void OnEnter();
        /*0x2915d30*/ void HandleScorePopsComplete();
        /*0x2915900*/ void StartCelebrationMoment();
        /*0x2916200*/ void OnUpdate(float deltaTime);
        /*0x2915df4*/ void Celebrate();
        /*0x2916218*/ void OnCelebrationMomentComplete();
        /*0x2916220*/ void OnExit();
    }

    interface IWaveApmData
    {
        /*0x1f30804*/ float get_Apm();
        /*0x1f30804*/ float get_ApmPlantsPlayed();
        /*0x1f30804*/ float get_ApmPlantsMerged();
        /*0x1f30804*/ float get_ApmSunCollected();
    }

    class RawApmData : Yeti.IWaveApmData
    {
        /*0x10*/ int StartTick;
        /*0x14*/ int LastTick;
        /*0x18*/ int PlantsPlayed;
        /*0x1c*/ int PlantsMerged;
        /*0x20*/ int SunCollected;
        /*0x24*/ float <ApmPlantsPlayed>k__BackingField;
        /*0x28*/ float <ApmPlantsMerged>k__BackingField;
        /*0x2c*/ float <ApmSunCollected>k__BackingField;

        /*0x29163f0*/ RawApmData();
        /*0x291635c*/ int get_DurationTicks();
        /*0x2916368*/ float get_Apm();
        /*0x291637c*/ float get_ApmPlantsPlayed();
        /*0x2916384*/ void set_ApmPlantsPlayed(float value);
        /*0x291638c*/ float get_ApmPlantsMerged();
        /*0x2916394*/ void set_ApmPlantsMerged(float value);
        /*0x291639c*/ float get_ApmSunCollected();
        /*0x29163a4*/ void set_ApmSunCollected(float value);
        /*0x29163ac*/ void UpdateTick(int tick);
    }

    class ApmDataForLevel
    {
        /*0x10*/ string BattleName;
        /*0x18*/ System.Collections.Generic.List<Yeti.RawApmData> _currentApmPerWave;

        /*0x2916400*/ ApmDataForLevel(string battleName);
        /*0x29163f8*/ System.Collections.Generic.IReadOnlyList<Yeti.IWaveApmData> get_AllWaveDataList();
        /*0x291649c*/ Yeti.IWaveApmData GetDataForCurrentWave();
        /*0x291650c*/ void Add(Yeti.RawApmData rawApmData);
        /*0x2916564*/ string ToDebugString(float elapsedRealTimeSeconds);
    }

    class ApmTracker
    {
        /*0x10*/ Yeti.CombatInputRootState _inputController;
        /*0x18*/ System.Collections.Generic.Queue<Yeti.ApmDataForLevel> _lastTenLevelApmData;
        /*0x20*/ Yeti.ApmDataForLevel _currentApmDataForLevel;
        /*0x28*/ Yeti.RawApmData _currentRawApmData;
        /*0x30*/ int _currentTick;

        /*0x29171c0*/ ApmTracker();
        /*0x2916a90*/ Yeti.ApmDataForLevel GetCurrentApmDataForLevel();
        /*0x2916a98*/ void StartTracking(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController);
        /*0x2916f64*/ void HandleWaveStarted(YetiSimCoreLib.Messaging.Events.WaveStartedEventArgs args);
        /*0x2916fe4*/ void StopTracking();
        /*0x29170e0*/ void HandleTickUpdated(YetiSimCoreLib.Messaging.Events.CurrentTickChangedEventArgs args);
        /*0x2917138*/ void HandlePlantPlayed(YetiSimCoreLib.Messaging.Events.IPlaceLoadoutUnitMessage args);
        /*0x2917158*/ void HandlePlantMerged(YetiSimCoreLib.Messaging.Events.IMergeLoadoutUnitMessage args);
        /*0x2917178*/ void HandlePlantMerged(YetiSimCoreLib.Messaging.Events.IMergePlantsMessage args);
        /*0x2917198*/ void HandleDropCollected();
        /*0x29171b8*/ System.Collections.Generic.IEnumerable<Yeti.ApmDataForLevel> GetApmHistory();
    }

    interface ICheatCoreSimWrapper
    {
        /*0x1f30bb4*/ void SetFirstStrikeChance(int unitId, int percentMilleChance);
        /*0x1f309e4*/ void RemoveAllZombies();
        /*0x1f309e4*/ void WinGame();
        /*0x1f309e4*/ void LoseGame();
        /*0x1f30bb4*/ void ModifyResources(Yeti.Data.ResourceType type, int delta);
        /*0x1f30b78*/ void ModifyScore(int delta);
        void SpawnUnit(YetiSimCoreLib.Game.UnitId unitId, YetiSimCoreLib.Game.GridCell gridCell, int level);
        /*0x1f30ebc*/ void ChangeBoardElevation(Google.Protobuf.Collections.MapField<int, Yeti.Data.BoardIncline> inclines);
        void ForceUnitPrioritizeAbility(YetiSimCoreLib.Game.InstanceId instanceId, int abilityId);
        void DisableUnitMovement(YetiSimCoreLib.Game.InstanceId instanceId);
        void SetEnemyImmunity(YetiSimCoreLib.Game.InstanceId instanceId, bool enabled);
        void RemoveUnit(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x1f30bb4*/ void SetTacoStrikeChance(int instanceId, int percentMilleChance);
        void ModifyUnitStat(int instanceId, Yeti.Data.StatType statType, int value);
        /*0x1f30b78*/ void SpawnOnBoardInstantUsePlantBoost(int unitId);
        /*0x1f309e4*/ void SpawnOnBoardPlantFoodBoost();
        /*0x1f30b78*/ void GrantScoreBonus(Yeti.Data.ScoreBonusType scoreBonusType);
        /*0x1f30214*/ YetiSimCoreLib.Messaging.MessageAggregator CreateMessageAggregator();
    }

    class CheatCoreSimWrapperFactory
    {
        static /*0x2917248*/ Yeti.ICheatCoreSimWrapper CreateCheatCoreSimWrapper(Yeti.CoreSimWrapper coreSim);
        /*0x29172a4*/ CheatCoreSimWrapperFactory();
    }

    class CheatCoreSimWrapper : Yeti.ICheatCoreSimWrapper
    {
        /*0x10*/ Yeti.CoreSimWrapper _coreSim;

        /*0x29172c4*/ CheatCoreSimWrapper(Yeti.CoreSimWrapper coreSim);
        /*0x29172ac*/ YetiSimCoreLib.Core.IYetiSimContext get_Context();
        /*0x29172f4*/ void SetFirstStrikeChance(int unitId, int percentMilleChance);
        /*0x29174e0*/ void RemoveAllZombies();
        /*0x2917674*/ void WinGame();
        /*0x2917808*/ void LoseGame();
        /*0x291799c*/ void ModifyResources(Yeti.Data.ResourceType type, int delta);
        /*0x2917b48*/ void ModifyScore(int delta);
        /*0x2917cec*/ void SpawnUnit(YetiSimCoreLib.Game.UnitId unitId, YetiSimCoreLib.Game.GridCell gridCell, int level);
        /*0x2917efc*/ void ChangeBoardElevation(Google.Protobuf.Collections.MapField<int, Yeti.Data.BoardIncline> inclines);
        /*0x29180a0*/ void ForceUnitPrioritizeAbility(YetiSimCoreLib.Game.InstanceId instanceId, int abilityId);
        /*0x291824c*/ void DisableUnitMovement(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x29183f0*/ void SetEnemyImmunity(YetiSimCoreLib.Game.InstanceId instanceId, bool enabled);
        /*0x291859c*/ void RemoveUnit(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x2918740*/ void SetTacoStrikeChance(int instanceId, int percentMilleChance);
        /*0x291892c*/ void ModifyUnitStat(int instanceId, Yeti.Data.StatType statType, int value);
        /*0x2918b20*/ void SpawnOnBoardInstantUsePlantBoost(int unitId);
        /*0x2918cfc*/ void SpawnOnBoardPlantFoodBoost();
        /*0x2918e90*/ void GrantScoreBonus(Yeti.Data.ScoreBonusType scoreBonusType);
        /*0x2919034*/ YetiSimCoreLib.Messaging.MessageAggregator CreateMessageAggregator();
    }

    class NullCheatCoreSimWrapper : Yeti.ICheatCoreSimWrapper
    {
        /*0x291729c*/ NullCheatCoreSimWrapper();
        /*0x29190ac*/ void SetFirstStrikeChance(int unitId, int percentMilleChance);
        /*0x29190b0*/ void RemoveAllZombies();
        /*0x29190b4*/ void WinGame();
        /*0x29190b8*/ void LoseGame();
        /*0x29190bc*/ void ModifyResources(Yeti.Data.ResourceType type, int delta);
        /*0x29190c0*/ void ModifyScore(int delta);
        /*0x29190c4*/ void SpawnUnit(YetiSimCoreLib.Game.UnitId unitId, YetiSimCoreLib.Game.GridCell gridCell, int level);
        /*0x29190c8*/ void ChangeBoardElevation(Google.Protobuf.Collections.MapField<int, Yeti.Data.BoardIncline> inclines);
        /*0x29190cc*/ void ForceUnitPrioritizeAbility(YetiSimCoreLib.Game.InstanceId instanceId, int abilityId);
        /*0x29190d0*/ void DisableUnitMovement(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x29190d4*/ void SetEnemyImmunity(YetiSimCoreLib.Game.InstanceId instanceId, bool enabled);
        /*0x29190d8*/ void RemoveUnit(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x29190dc*/ void SetTacoStrikeChance(int instanceId, int percentMilleChance);
        /*0x29190e0*/ void ModifyUnitStat(int instanceId, Yeti.Data.StatType statType, int value);
        /*0x29190e4*/ void SpawnOnBoardInstantUsePlantBoost(int unitId);
        /*0x29190e8*/ void SpawnOnBoardPlantFoodBoost();
        /*0x29190ec*/ void GrantScoreBonus(Yeti.Data.ScoreBonusType scoreBonusType);
        /*0x29190f0*/ YetiSimCoreLib.Messaging.MessageAggregator CreateMessageAggregator();
    }

    class CombatBattleMessagingCheatController
    {
        /*0x10*/ Yeti.CombatGuiModel _combatModel;
        /*0x18*/ bool _isOrderedMessagingActive;
        /*0x1c*/ int _introIndex;
        /*0x20*/ int _finalWaveStageOneIndex;
        /*0x24*/ int _finalWaveStageTwoIndex;
        /*0x28*/ int _loseIndex;
        /*0x30*/ EA.Debugging.Menu.DebugMenu _debugMenuRegistry;

        /*0x29192c0*/ CombatBattleMessagingCheatController();
        /*0x2919144*/ Yeti.BattleMessageGuiData get_BattleMessageGuiData();
        /*0x2919168*/ void RegisterCheatsToDebugMenu();
        /*0x2919174*/ void RegisterIndexOptions();
        /*0x2919178*/ void UnregisterIndexOptions();
        /*0x291917c*/ void ToggleRandomIntros();
        /*0x291916c*/ void SetToggleActive(bool active);
        /*0x291921c*/ void SetIntrosIndex(int index);
        /*0x2919244*/ void SetFinalWaveStageOneIndex(int index);
        /*0x291926c*/ void SetFinalWaveStageTwoIndex(int index);
        /*0x2919294*/ void SetLoseIndex(int index);
        /*0x29191a8*/ void BindBattleMessageGuiData();
        /*0x29192bc*/ void SetSortOrder();
    }

    class CombatCheatController
    {
        /*0x10*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x18*/ Yeti.CombatRuntimeContext _combatRuntimeContext;

        /*0x2919330*/ CombatCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x1f309e4*/ void RegisterCheatsToDebugMenu();
    }

    class CombatFirstStrikeCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatSceneState _combatSceneState;
        /*0x28*/ Yeti.CombatDebugViewController _debugViewController;

        /*0x29193bc*/ CombatFirstStrikeCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x2919454*/ void RegisterCheatsToDebugMenu();
        /*0x2919554*/ void Cleanup();
        /*0x2919654*/ void SetAllPlantsFirstStrikeChance(int percentChance);
        /*0x29198dc*/ void ToggleFirstStrikeRollDebugView();
        /*0x2919924*/ void HandleFirstStrikeRolled(YetiSimCoreLib.Messaging.Events.FirstStrikeRolledEventArgs args);
    }

    class CombatFtueCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatGuiModel _combatModel;
        /*0x28*/ Yeti.CombatSceneState _combatSceneState;

        /*0x2919968*/ CombatFtueCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x2919a68*/ void RegisterCheatsToDebugMenu();
        /*0x2919a6c*/ void ToggleHidePlantFood();
        /*0x2919ac8*/ void ToggleHideQuitButtons();
        /*0x2919b24*/ void ToggleHidePauseButton();
        /*0x2919b80*/ void FtuePause();
        /*0x2919b98*/ void ResumeGame();
    }

    class CombatGameOverFlowCheatController : Yeti.CombatCheatController
    {
        /*0x2919bb0*/ CombatGameOverFlowCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x2919c98*/ void RegisterCheatsToDebugMenu();
        /*0x2919c9c*/ void RegisterModeAgnosticCheats();
        /*0x2919ca0*/ void WinGame();
        /*0x2919e08*/ void LoseGame();
    }

    class CombatGameResourcesCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatSceneState _combatSceneState;
        /*0x28*/ Yeti.CombatInputRootState _inputController;

        /*0x2919efc*/ CombatGameResourcesCheatController(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController);
        /*0x2919f44*/ void RegisterCheatsToDebugMenu();
        /*0x2919f48*/ void EnterUnlimitedResourcesMode();
        /*0x2919fa4*/ void ToggleWaveBreakUi();
        /*0x291a014*/ void ModifyPromotions(int delta);
        /*0x291a0cc*/ void ModifyPlantFood(int delta);
    }

    class CombatGameStateCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatDefinitionData _combatDefinitionData;

        /*0x291a184*/ CombatGameStateCheatController(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatDefinitionData combatDefinitionData);
        /*0x291a1b0*/ void RegisterCheatsToDebugMenu();
        /*0x291a1b4*/ void SpeedUp();
        /*0x291a1d8*/ void SpeedDown();
        /*0x291a1fc*/ void DestroyCombatPuppets();
    }

    class CombatLogCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ YetiSimCoreLib.Messaging.MessageAggregator _messageAggregator;

        static /*0x291a58c*/ string get_FilePath();
        static /*0x291a750*/ void EnsureFileDirectoryExists();
        static /*0x291a7e8*/ void WriteMessagesToFile(string filePath, System.Collections.Generic.IEnumerable<YetiSimCoreLib.Messaging.Events.IYetiSimMessage> messages);
        /*0x291a644*/ CombatLogCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x291a648*/ void RegisterCheatsToDebugMenu();
        /*0x291a64c*/ void WriteCombatLog();
        /*0x291abb0*/ void StartRecordingCombatLog();
        /*0x291a740*/ bool HasStartedLogging();
    }

    class CombatPerformanceCheatController : Yeti.CombatCheatController
    {
        static string PlantName = "Wallnut";
        static float NumZombiesPerType = 30;
        static string BossName = "Ballpark Frank - Stage 1";
        static float SpawnDelay = 0.25;
        static /*0x0*/ string[] ZombieNames;
        /*0x20*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x28*/ bool _hasSetupBoard;

        static /*0x291b0a8*/ CombatPerformanceCheatController();
        /*0x291ac8c*/ CombatPerformanceCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x291ad74*/ void RegisterCheatsToDebugMenu();
        /*0x291ad78*/ void SetupNormalStagePerfScenario();
        /*0x291ae54*/ void SetupBossStagePerfScenario();
        /*0x291ad80*/ void RunSetupCoroutine(bool includeBoss);
        /*0x291ae5c*/ System.Collections.IEnumerator SetupBoard(bool includeBoss);
        /*0x291af04*/ System.Collections.IEnumerator SpawnZombie(string unitName);
        /*0x291afb4*/ void InvokeCheatCommand(string commandName);

        class <SetupBoard>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.CombatPerformanceCheatController <>4__this;
            /*0x28*/ bool includeBoss;
            /*0x2c*/ int <i>5__2;
            /*0x30*/ string[] <>7__wrap2;
            /*0x38*/ int <>7__wrap3;

            /*0x291aedc*/ <SetupBoard>d__12(int <>1__state);
            /*0x291b18c*/ void System.IDisposable.Dispose();
            /*0x291b190*/ bool MoveNext();
            /*0x291b434*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x291b43c*/ void System.Collections.IEnumerator.Reset();
            /*0x291b474*/ object System.Collections.IEnumerator.get_Current();
        }

        class <SpawnZombie>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.CombatPerformanceCheatController <>4__this;
            /*0x28*/ string unitName;

            /*0x291af8c*/ <SpawnZombie>d__13(int <>1__state);
            /*0x291b47c*/ void System.IDisposable.Dispose();
            /*0x291b480*/ bool MoveNext();
            /*0x291b578*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x291b580*/ void System.Collections.IEnumerator.Reset();
            /*0x291b5b8*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class UnitIds
    {
        static int Peashooter = 2;
        static int Wallnut = 3;
        static int Sunflower = 2009201556;
        static int Browncoat = 1;
        static int FlagZombie = 847079624;
        static int Conehead = 1642571084;
        static int Buckethead = 1004383570;
        static int Imp = 2009201310;
        static int DuckyTubeBuckethead = 2009201562;
    }

    class CombatSandboxCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatInfiniteAutoPlayer _infiniteAutoPlayer;
        /*0x28*/ Yeti.CombatUnitActionCheatController _unitActionCheatController;

        /*0x291b5c0*/ CombatSandboxCheatController(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatUnitActionCheatController unitActionCheatController);
        /*0x291b650*/ void Update();
        /*0x291b668*/ void RegisterCheatsToDebugMenu();
        /*0x291b96c*/ void StartPerfTest1();
        /*0x291ba34*/ void StartPerfTest2();
        /*0x291bb08*/ void StartPerfTest3();
        /*0x291b99c*/ void SetBasicPerfTestParameters(Yeti.CombatInfiniteAutoPlayer infiniteAutoPlayer);
        /*0x291b9dc*/ void AddPvzN3xtPlants(Yeti.CombatInfiniteAutoPlayer infiniteAutoPlayer);
        /*0x291ba64*/ void AddPvzN3xtZombies(Yeti.CombatInfiniteAutoPlayer infiniteAutoPlayer);
        /*0x291b66c*/ void RegisterUnitOverrideOptions();
        /*0x291bb40*/ void StopAutoPlay();
        /*0x291bc20*/ string ShowSelectedUnits(System.Collections.Generic.IReadOnlyCollection<int> unitIds);
    }

    class CombatScoringCheatController : Yeti.CombatCheatController
    {
        /*0x291bfe8*/ CombatScoringCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x291bfec*/ void RegisterCheatsToDebugMenu();
        /*0x291c294*/ string CreateScoringLog();
        /*0x291c2c8*/ void ToggleUnitScores();
        /*0x291c2f8*/ void ModifyScore(int delta);
        /*0x291c3b4*/ void GrantScoreBonus(Yeti.Data.ScoreBonusType scoreBonusType);
    }

    class CombatSpawnUnitCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatDefinitionData _combatDefinitionData;
        /*0x28*/ Yeti.CombatInputRootState _inputController;
        /*0x30*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x38*/ YetiSimCoreLib.Game.MtRandom _rng;
        /*0x40*/ int _unitLevel;

        /*0x291c470*/ CombatSpawnUnitCheatController(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController, Yeti.CombatDefinitionData combatDefinitionData, CapitalGames.CoroutineCreator coroutineCreator);
        /*0x291c534*/ void RegisterCheatsToDebugMenu();
        /*0x291c808*/ void CreateSpawnPlantRegistry(Yeti.Data.UnitDefinition unit);
        /*0x291c80c*/ void CreateSpawnZombieRegistry(Yeti.Data.UnitDefinition unit);
        /*0x291c810*/ void CreateSpawnNoFactionUnit(Yeti.Data.UnitDefinition unit);
        /*0x291c814*/ void SetNextUnitSpawn(int unitId);
        /*0x291ca60*/ void CheatSetUnitLevel(int level);
        /*0x291ca68*/ void SpawnUnit(int unitId, int gridRow, int gridColumn);
        /*0x291cb50*/ void SpawnPlants(int unitId);
        /*0x291cbec*/ void SpawnZombies(int unitId);
        /*0x291cc88*/ void SpawnZombieInRandomCell(int unitId);
        /*0x291cd3c*/ void SpawnOnBoardInstantUsePlantBoostEventHandler(int unitId);
        /*0x291ce10*/ void SpawnOnBoardPlantFoodBoostEventHandler();
        /*0x291c8e8*/ void LoadUnitThenDoAction(int unitId, System.Action action);
        /*0x291cec4*/ System.Collections.IEnumerator LoadUnitThenDoActionCoroutine(int unitId, System.Action action);

        class <>c__DisplayClass10_0
        {
            /*0x10*/ Yeti.CombatSpawnUnitCheatController <>4__this;
            /*0x18*/ int unitId;

            /*0x291c8e0*/ <>c__DisplayClass10_0();
            /*0x291cf7c*/ void <SetNextUnitSpawn>b__0();
        }

        class <>c__DisplayClass12_0
        {
            /*0x10*/ int gridRow;
            /*0x14*/ int gridColumn;
            /*0x18*/ Yeti.CombatSpawnUnitCheatController <>4__this;
            /*0x20*/ int unitId;

            /*0x291cb48*/ <>c__DisplayClass12_0();
            /*0x291cfac*/ void <SpawnUnit>b__0();
        }

        class <>c__DisplayClass16_0
        {
            /*0x10*/ Yeti.CombatSpawnUnitCheatController <>4__this;
            /*0x18*/ int unitId;

            /*0x291ce08*/ <>c__DisplayClass16_0();
            /*0x291d1cc*/ void <SpawnOnBoardInstantUsePlantBoostEventHandler>b__0();
        }

        class <LoadUnitThenDoActionCoroutine>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.CombatSpawnUnitCheatController <>4__this;
            /*0x28*/ int unitId;
            /*0x30*/ System.Action action;
            /*0x38*/ Yeti.CombatAssetLoader <assetLoader>5__2;

            /*0x291cf54*/ <LoadUnitThenDoActionCoroutine>d__19(int <>1__state);
            /*0x291d290*/ void System.IDisposable.Dispose();
            /*0x291d294*/ bool MoveNext();
            /*0x291d58c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x291d594*/ void System.Collections.IEnumerator.Reset();
            /*0x291d5cc*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class CombatTacoStrikeCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatSceneState _combatSceneState;
        /*0x28*/ Yeti.CombatDebugViewController _debugViewController;

        /*0x291d5d4*/ CombatTacoStrikeCheatController(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x291d66c*/ void RegisterCheatsToDebugMenu();
        /*0x291d76c*/ void Cleanup();
        /*0x291d86c*/ void SetAllPlantsTacoStrikeChance(int percentChance);
        /*0x291daf8*/ void ToggleTacoStrikeRollDebugView();
        /*0x291db40*/ void HandleTacoStrikeRolled(YetiSimCoreLib.Messaging.Events.TacoStrikeRolledEventArgs args);
    }

    class CombatUnitActionCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatInputRootState _inputController;

        /*0x291db84*/ CombatUnitActionCheatController(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController);
        /*0x291dbb0*/ void RegisterCheatsToDebugMenu();
        /*0x291dbb4*/ void UpdateForceBossAbilityCheats();
        /*0x291e4a0*/ void RegisterForceBossAbilityCheat(Yeti.Data.UnitAbilityDefinition unitAbilityDefinition, Yeti.UnitPuppet bossUnit);
        /*0x291e5c0*/ void DisableBossMovement();
        /*0x291e16c*/ Yeti.UnitPuppet FindBossUnit();
        /*0x291e6b4*/ void RemoveUnit();
        /*0x291bb6c*/ void CheatRemoveAllZombies();
        /*0x291e6cc*/ void CheatRemoveAllPlants();
        /*0x291ea2c*/ void GrantEnemyImmunity();
        /*0x291ea44*/ void GrantAllPlantsImmunity();
        /*0x291eda8*/ void SetCascadeMeterFill(int percentFill);

        class <>c__DisplayClass4_0
        {
            /*0x10*/ Yeti.CombatSceneState combatSceneState;
            /*0x18*/ Yeti.UnitPuppet bossUnit;
            /*0x20*/ int abilityId;

            /*0x291e5b8*/ <>c__DisplayClass4_0();
            /*0x291eddc*/ void <RegisterForceBossAbilityCheat>b__0();
        }
    }

    class CombatUnitStatCheatController : Yeti.CombatCheatController
    {
        /*0x20*/ Yeti.CombatInputRootState _inputController;

        /*0x291eeb8*/ CombatUnitStatCheatController(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController);
        /*0x291eee4*/ void RegisterCheatsToDebugMenu();
        /*0x291eee8*/ void SnotUnit();
        /*0x291ef08*/ void SickUnit();
        /*0x291ef28*/ void ButterUnit();
        /*0x291ef48*/ void ChillUnit(int percent);
        /*0x291ef68*/ void FreezeUnit();
        /*0x291ef88*/ void ModifyUnitSpeed(int percent);
        /*0x291efa8*/ void StunUnit();
    }

    class CombatVisualsCheatController : Yeti.CombatCheatController
    {
        static string CombatHubAnimControllerName = "CombatHudAnimationController";
        /*0x20*/ bool _wasCombatHudHidden;
        /*0x28*/ Yeti.CombatInputRootState _inputController;

        static /*0x291f254*/ void DestroyCombatHud();
        /*0x291efec*/ CombatVisualsCheatController(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController);
        /*0x291efc8*/ Yeti.PuppetDebugUiController get__puppetDebugUiController();
        /*0x291f018*/ void RegisterCheatsToDebugMenu();
        /*0x291f01c*/ void ToggleSpeed();
        /*0x291f038*/ void ToggleTags();
        /*0x291f054*/ void ToggleUnitLevels();
        /*0x291f070*/ void ToggleCombatHud();
        /*0x291f25c*/ void ToggleUnitHealth();
        /*0x291f278*/ void ToggleSelectedUnitHealth();
        /*0x291f290*/ void ToggleUnitHealthBars();
        /*0x291f2ac*/ void ToggleUnitArmor();
        /*0x291f2c8*/ void ToggleUnitName();
        /*0x291f2e4*/ void ToggleHitbox3d();
        /*0x291f300*/ void ToggleHitboxXy();
        /*0x291f31c*/ void ToggleHitboxXz();
        /*0x291f338*/ void ToggleUnitOrigin();
        /*0x291f354*/ void ToggleDamageNumbers();
    }

    class CombatAssetCollection
    {
        /*0x10*/ System.Collections.Generic.HashSet<string> AssetsMarkedForLoad;
        /*0x18*/ System.Collections.Generic.HashSet<string> AssetsLoaded;

        /*0x291f3b8*/ CombatAssetCollection();
        /*0x291f358*/ void Clear();
    }

    class CombatAssetLoader
    {
        static string LoadAssetsMetricsId = "LoadCombatAssets";
        /*0x10*/ System.Action OnCombatLoadComplete;
        /*0x18*/ System.Action<Yeti.YetiError> OnCombatLoadError;
        /*0x20*/ System.Action OnCheatLoadComplete;
        /*0x28*/ Yeti.IAssetManager _assetManager;
        /*0x30*/ Yeti.CombatDefinitionData _combatDefinitionData;
        /*0x38*/ Yeti.ICombatObjectLifeCycleManager _pooledObjectManager;
        /*0x40*/ Yeti.CombatAssetCollection _combatAssetCollection;
        /*0x48*/ System.Collections.Generic.List<Yeti.CombatLoadRequest> _activeLoadRequests;
        /*0x50*/ System.Collections.Generic.List<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> _loadedResources;
        /*0x58*/ System.Collections.Generic.HashSet<int> _unitIdsToLoad;
        /*0x60*/ Yeti.GenericVisualConfig <GenericVisualConfig>k__BackingField;

        /*0x291f84c*/ CombatAssetLoader(Yeti.IAssetManager assetManager, Yeti.CombatDefinitionData combatDefinitionData, Yeti.ICombatObjectLifeCycleManager pooledObjectManager);
        /*0x291f464*/ void add_OnCombatLoadComplete(System.Action value);
        /*0x291f500*/ void remove_OnCombatLoadComplete(System.Action value);
        /*0x291f59c*/ void add_OnCombatLoadError(System.Action<Yeti.YetiError> value);
        /*0x291f64c*/ void remove_OnCombatLoadError(System.Action<Yeti.YetiError> value);
        /*0x291f6fc*/ void add_OnCheatLoadComplete(System.Action value);
        /*0x291f798*/ void remove_OnCheatLoadComplete(System.Action value);
        /*0x291f834*/ Yeti.GenericVisualConfig get_GenericVisualConfig();
        /*0x291f83c*/ void set_GenericVisualConfig(Yeti.GenericVisualConfig value);
        /*0x291f844*/ Yeti.CombatAssetCollection get_CombatAssetCollection();
        /*0x291f9f4*/ void LoadCombatAssets();
        /*0x291fadc*/ void LoadAssets();
        /*0x291fc60*/ void OnAssetsLoaded(Yeti.CombatLoadRequest completedLoadRequest);
        /*0x291fd80*/ void HandleLoadRequestComplete(Yeti.CombatLoadRequest completedLoadRequest);
        /*0x291ff54*/ void StoreLoadedResources(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection loadedResources);
        /*0x2920858*/ bool IsAssetLoaded(string assetId);
        /*0x291d520*/ bool CheatAreUnitAssetsLoaded(int unitId);
        /*0x291d398*/ void LoadCheatUnitAssets(int unitId);
        /*0x2920904*/ void LoadCheatUnitAssets(System.Collections.Generic.List<int> plants, System.Collections.Generic.List<int> zombies);
        /*0x2920d38*/ void CheatAddAssetsToLoad(System.Collections.Generic.HashSet<string> resourcesToLoad, int unitId);
        /*0x2920dc8*/ void OnAssetLoadError(Yeti.YetiError error);
        /*0x2920eec*/ void HandleCheatUnitLoadComplete(Yeti.CombatLoadRequest completedLoadRequest);
        /*0x2920f1c*/ void CleanUp();
        /*0x2920f88*/ void CancelActiveLoads();
        /*0x292119c*/ void ReleaseResources();
    }

    class CombatAssetPreloader
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x20*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x28*/ float _startTime;
        /*0x30*/ Yeti.CombatDefinitionData _minimalCombatDefinition;

        static /*0x292173c*/ void HandlePreloadFailed(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError error, object context);
        static /*0x29217c8*/ void AddCommonCombatAssets(System.Collections.Generic.HashSet<string> resources);
        static /*0x292183c*/ void AddStreamingSounds(System.Collections.Generic.HashSet<string> resources);
        static /*0x2921c54*/ void LogPreloadInfo(System.Collections.Generic.HashSet<string> assetPaths);
        /*0x2921e4c*/ CombatAssetPreloader();
        /*0x2921430*/ void StartPreloading();
        /*0x29217c0*/ void HandleAssetsPreloaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resourceCollection, object context);
        /*0x29216c4*/ System.Collections.Generic.HashSet<string> CreatePreloadableResourceList();
        /*0x29218a4*/ void AddTeamAssets(System.Collections.Generic.HashSet<string> resources, System.Collections.Generic.HashSet<int> unitIds);
        /*0x29218a8*/ Yeti.CombatDefinitionData GetMinimalCombatDefinition();
        /*0x29218e8*/ Yeti.CombatDefinitionData CreateMinimalCombatDefinition();
    }

    class CombatBackground : UnityEngine.MonoBehaviour
    {
        static /*0x2921e54*/ void Remove();
        /*0x2921f14*/ CombatBackground();
    }

    class CombatBattleMessagesUtil
    {
        static string FinalWaveStageOneLocKey = "COMBAT_FINAL_WAVE_STAGE_ONE_";
        static string FinalWaveStageTwoLocKey = "COMBAT_FINAL_WAVE_STAGE_TWO_";
        static string MiniBossWaveStageOneLocKey = "COMBAT_MINI_BOSS_WAVE_STAGE_ONE_";
        static string MiniBossWaveStageTwoLocKey = "COMBAT_MINI_BOSS_WAVE_STAGE_TWO_";
        static string IntroOptionKey = "COMBAT_INTRO_OPTION_";
        static string LoseLocKey = "LOSE_SUMMARY_BODY_";
        static uint NumberOfBattlesBeforeVariantMessagesAllowed = 5;
        static string HugeWaveLocKey = "COMBAT_HUGE_WAVE";
        static string FinalWaveLocKey = "COMBAT_FINAL_WAVE";
        static string AntiStallingWarningLocKey = "COMBAT_ANTI_STALLING_WARNING";
        static int TotalBattleIntroOptions = 5;
        static int TotalFinalWaveStageOneOptions = 9;
        static int TotalFinalWaveStageTwoOptions = 9;
        static int TotalLoseOptions = 5;

        static /*0x2921f1c*/ string GetFinalWaveStageOneMessageKey(uint battlesWon);
        static /*0x2922008*/ string GetFinalWaveStageTwoMessageKey(uint battlesWon);
        static /*0x2922054*/ string GetMiniBossWaveStageOneMessageKey(uint battlesWon);
        static /*0x29220a0*/ string GetMiniBossWaveStageTwoMessageKey(uint battlesWon);
        static /*0x29220ec*/ string GetBattleIntroMessageKey(uint battlesWon);
        static /*0x2922138*/ string GetLoseMessageKey(uint battlesWon);
        static /*0x2921f68*/ string GetMessageKey(uint battlesWon, string locKey, int totalOptions);
        static /*0x2922184*/ int RollOptionNumber(int totalOptions);
        static /*0x2922280*/ string GetIntroOptionKeyAtIndex(int index);
        static /*0x29222e0*/ string GetFinalWaveStageOneKeyAtIndex(int index);
        static /*0x2922340*/ string GetFinalWaveStageTwoKeyAtIndex(int index);
        static /*0x29223a0*/ string GetMiniBossWaveStageOneKeyAtIndex(int index);
        static /*0x2922400*/ string GetMiniBossWaveStageTwoKeyAtIndex(int index);
        static /*0x2922460*/ string GetLoseKeyAtIndex(int index);
    }

    class CombatCameraConfig : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.Camera DefaultCamera;
        /*0x28*/ UnityEngine.Camera TerrainCamera;
        /*0x30*/ Yeti.ScreenShakeController ScreenShakeController;
        /*0x38*/ UnityEngine.Transform CameraPositioner;

        /*0x29224c0*/ CombatCameraConfig();
    }

    struct CameraProperties
    {
        /*0x10*/ float OrthographicSize;
        /*0x14*/ UnityEngine.Vector3 Position;
    }

    class CombatCameraResolutionAdjuster : UnityEngine.MonoBehaviour
    {
        /*0x20*/ float _minimumZoom;
        /*0x24*/ float _desiredRightEdgeOffsetInTiles;
        /*0x28*/ float _maxRightEdgeOffsetInTiles;
        /*0x2c*/ float _desiredLeftEdgeOffsetInTiles;
        /*0x30*/ float _maxLeftEdgeOffsetInTiles;
        /*0x34*/ float _bottomUiInPixels;
        /*0x38*/ float _canvasScalerReferenceHeight;
        /*0x40*/ Yeti.OffsetByAspectRatio _bottomUiOffsetByAspectRatio;
        /*0x48*/ System.Action OnReapply;
        /*0x50*/ UnityEngine.Camera _camera;
        /*0x58*/ float _lastAspectRatio;

        static /*0x29229c8*/ float GetCameraHeightInWorldUnits(float xRotation, float orthographicSize);
        static /*0x29229f4*/ float GetCameraZPositionFromMidpoint(float xRotation, float yPosition, float zMidpoint);
        static /*0x2922ae8*/ float GetHypotenuseFromSideOppositeAngle(float angleInDegrees, float oppositeSideLength);
        static /*0x2922b14*/ float GetAdjacentSideFromSideOppositeAngle(float angleInDegrees, float oppositeSideLength);
        /*0x2922bfc*/ CombatCameraResolutionAdjuster();
        /*0x29224c8*/ void add_OnReapply(System.Action value);
        /*0x2922564*/ void remove_OnReapply(System.Action value);
        /*0x2922600*/ Yeti.CameraProperties GetAdjustedProperties(UnityEngine.Camera mainCamera, float xRotation, float yPosition);
        /*0x29226ec*/ float GetOrthographicSize();
        /*0x29227c0*/ float GetXPositionFromRightEdge(float zoom, float rightEdge, ref float halfWidth);
        /*0x2922810*/ float AdjustForLeftEdge(float xPosition, float halfWidth);
        /*0x29228ac*/ float GetZPosition(float xRotation, float yPosition, float orthographicSize);
        /*0x292297c*/ float GetFractionOfScreenCoveredByUi();
        /*0x2922a28*/ float GetBottomUiInPixels();
        /*0x2922a6c*/ void SetHorizontalOffsets(float val);
        /*0x2922aac*/ void SetMaxHorizontalOffsets(float val);
        /*0x2922ab8*/ void SetCanvasScalerReferenceHeight(float height);
        /*0x2922ac0*/ void SetMinimumZoom(float zoom);
        /*0x2922ac8*/ void SetBottomUiInPixels(float val);
        /*0x2922a90*/ void Reapply();
        /*0x2922b40*/ void Update();
    }

    class CombatCameraUtils
    {
        static /*0x0*/ UnityEngine.Plane ZeroFloorPlane;
        /*0x10*/ System.Collections.Generic.List<UnityEngine.EventSystems.RaycastResult> _raycastResults;
        /*0x18*/ UnityEngine.EventSystems.PointerEventData _pointerData;
        /*0x20*/ UnityEngine.Camera _mainCamera;
        /*0x28*/ UnityEngine.Camera <TerrainCamera>k__BackingField;
        /*0x30*/ UnityEngine.Transform <CameraPositioner>k__BackingField;
        /*0x38*/ Yeti.ScreenShakeController <ScreenShakeController>k__BackingField;
        /*0x40*/ YetiSimCoreLib.Game.BoardInclineMap _inclineMap;

        static /*0x29237b0*/ CombatCameraUtils();
        /*0x2922cec*/ CombatCameraUtils(UnityEngine.Camera camera);
        /*0x2922e00*/ CombatCameraUtils(Yeti.CombatCameraConfig combatCameraConfig);
        /*0x2922c04*/ UnityEngine.Camera get_MainCamera();
        /*0x2922ccc*/ void set_MainCamera(UnityEngine.Camera value);
        /*0x2922cd4*/ UnityEngine.Camera get_TerrainCamera();
        /*0x2922cdc*/ UnityEngine.Transform get_CameraPositioner();
        /*0x2922ce4*/ Yeti.ScreenShakeController get_ScreenShakeController();
        /*0x2922f4c*/ void SetElevation(YetiSimCoreLib.Game.BoardInclineMap inclineMap);
        /*0x2922f54*/ UnityEngine.Vector3 ScreenToWorldPosition(UnityEngine.Vector3 screenPosition);
        /*0x29233ac*/ YetiSimCoreLib.Game.Position ScreenToSimPosition(UnityEngine.Vector3 screenPosition);
        /*0x2923268*/ UnityEngine.Vector3 RayCast(UnityEngine.Vector3 screenPosition, UnityEngine.Plane plane);
        /*0x2911158*/ UnityEngine.Vector3 WorldToScreenPosition(UnityEngine.Vector3 worldPosition);
        /*0x292344c*/ void RayCastForUiElements(UnityEngine.Vector3 worldPosition, System.Collections.Generic.List<UnityEngine.GameObject> elementsHit);
        /*0x29235fc*/ void SetProperties(bool isOrthographic, float zoom, UnityEngine.Vector3 position, UnityEngine.Vector3 rotation);
    }

    class CombatCheatManager
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.CombatStateMachineVisualizer _stateVisualizer;
        /*0x18*/ Yeti.CombatSpawnUnitCheatController _spawnUnitCheatController;
        /*0x20*/ Yeti.CombatUnitActionCheatController _unitActionCheatController;
        /*0x28*/ Yeti.CombatFirstStrikeCheatController _firstStrikeCheatController;
        /*0x30*/ Yeti.CombatTacoStrikeCheatController _tacoStrikeCheatController;
        /*0x38*/ Yeti.CombatGameOverFlowCheatController _combatGameOverFlowCheatController;
        /*0x40*/ Yeti.CombatGameResourcesCheatController _gameResourcesCheatController;
        /*0x48*/ Yeti.CombatScoringCheatController _scoringCheatController;
        /*0x50*/ Yeti.CombatVisualsCheatController _visualsCheatController;
        /*0x58*/ Yeti.CombatGameStateCheatController _gameStateCheatController;
        /*0x60*/ Yeti.CombatFtueCheatController _ftueCheatController;
        /*0x68*/ Yeti.CombatSandboxCheatController _sandboxCheatController;
        /*0x70*/ Automation.IAutomationCombat _automationCombatController;
        /*0x78*/ Yeti.CombatBattleMessagingCheatController _battleMessagingCheatController;
        /*0x80*/ Yeti.CombatUnitStatCheatController _statCheatController;
        /*0x88*/ Yeti.CombatLogCheatController _combatLogController;
        /*0x90*/ Yeti.CombatPerformanceCheatController _performanceController;
        /*0x98*/ Yeti.GameEventManager _gameEventManager;

        static /*0x29241e8*/ CombatCheatManager();
        static /*0x2924094*/ void SetSortOrders();
        /*0x2923930*/ CombatCheatManager(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController, Yeti.CombatDefinitionData combatDefinitionData, CapitalGames.CoroutineCreator coroutineCreator, Yeti.GameEventManager gameEventManager);
        /*0x2923938*/ void ConditionalConstructor(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController, Yeti.CombatDefinitionData combatDefinitionData, CapitalGames.CoroutineCreator coroutineCreator, Yeti.GameEventManager gameEventManager);
        /*0x2923e64*/ void Enable();
        /*0x2924098*/ void Disable();
        /*0x2924198*/ void Update();
        /*0x29241d0*/ void ToggleVisualizeStates();
    }

    interface ISimGameData
    {
        /*0x1f30214*/ YetiSimCoreLib.Game.PlayerLoadoutDatabase get_PlayerLoadoutDatabase();
        /*0x1f30214*/ Yeti.Data.GameInitState get_InitState();
        /*0x1f30214*/ Yeti.Data.GameSimDefinition get_GameDefinition();
        /*0x1f30214*/ YetiSimCoreLib.External.WaveStaticDataProvider get_WaveData();
        /*0x1f30214*/ Yeti.StartCombatConfig get_BattleProperties();
    }

    class CombatDefinitionData : Yeti.ISimGameData
    {
        /*0x10*/ YetiSimCoreLib.Game.UnitDatabase <UnitDatabase>k__BackingField;
        /*0x18*/ YetiSimCoreLib.Game.TargetPatternDatabase <TargetPatternDatabase>k__BackingField;
        /*0x20*/ YetiSimCoreLib.Game.AbilityDatabase <AbilityDatabase>k__BackingField;
        /*0x28*/ YetiSimCoreLib.Game.PlayerLoadoutDatabase <PlayerLoadoutDatabase>k__BackingField;
        /*0x30*/ System.Collections.Generic.HashSet<int> <SpawnableZombieIds>k__BackingField;
        /*0x38*/ YetiSimCoreLib.External.WaveStaticDataProvider <WaveData>k__BackingField;
        /*0x40*/ YetiSimCoreCommon.Utils.MergeDefinitionProvider <MergeDefinitionProvider>k__BackingField;
        /*0x48*/ Yeti.StartCombatConfig <BattleProperties>k__BackingField;

        static /*0x29245fc*/ void PopulateSpawnableZombieIds(System.Collections.Generic.HashSet<int> spawnableZombieIds, Yeti.Data.BattleElementaryDefinition battleDef, Yeti.Data.BattleGeneratedStage generatedStage);
        static /*0x2925570*/ void PopulateSpawnableZombieIds(System.Collections.Generic.Dictionary<int, int> zombiesPresentIdAndLevel, Yeti.Data.BattleElementaryDefinition battleDef, Yeti.Data.BattleGeneratedStage generatedStage);
        /*0x2921a64*/ CombatDefinitionData();
        /*0x29242f0*/ CombatDefinitionData(Yeti.StartCombatConfig startCombatConfig);
        /*0x2924268*/ YetiSimCoreLib.Game.UnitDatabase get_UnitDatabase();
        /*0x2924270*/ YetiSimCoreLib.Game.TargetPatternDatabase get_TargetPatternDatabase();
        /*0x2924278*/ YetiSimCoreLib.Game.AbilityDatabase get_AbilityDatabase();
        /*0x2924280*/ YetiSimCoreLib.Game.PlayerLoadoutDatabase get_PlayerLoadoutDatabase();
        /*0x2924288*/ System.Collections.Generic.HashSet<int> get_SpawnableZombieIds();
        /*0x2924290*/ YetiSimCoreLib.External.WaveStaticDataProvider get_WaveData();
        /*0x2924298*/ YetiSimCoreCommon.Utils.MergeDefinitionProvider get_MergeDefinitionProvider();
        /*0x29242a0*/ Yeti.StartCombatConfig get_BattleProperties();
        /*0x29242a8*/ Yeti.Data.GameInitState get_InitState();
        /*0x29103c0*/ Yeti.Data.GameSimDefinition get_GameDefinition();
        /*0x29242c0*/ PvzN3xtBattleGen.BattleGeneratorReport get_BattleGeneratorReport();
        /*0x29242d8*/ Yeti.Data.PerksAndHazardsConfig get_PerksAndHazardsConfig();
        /*0x291bf68*/ Yeti.Data.UnitDefinition GetUnit(int unitId);
        /*0x29245c0*/ void PopulateSpawnableZombieIds();
        /*0x2924ee0*/ System.Collections.Generic.List<Yeti.Data.AbilityDefinition> GetUnitAbilities(int unitId);
        /*0x2925204*/ void AddBehaviorAbilities(Yeti.Data.UnitBehaviorDefinition behavior, System.Collections.Generic.List<Yeti.Data.AbilityDefinition> abilities);
    }

    class CombatEventIndicatorModel : Yeti.YetiModelBase
    {
        static string TimeToNextEventKey = "TimeToNextEvent";
        static string SecondsToNextEventKey = "SecondsToNextEvent";
        static string EventTimerFillValueKey = "EventTimerFillValue";
        static string EventTypeKey = "CombatEventType";
        static string HasEventsRemainingKey = "HasEventsRemaining";
        /*0xa8*/ Yeti.DateTimeModel _timeToNextEventModel;
        /*0xb0*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _secondsToNextEventModel;
        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _eventTimerFillModel;
        /*0xc0*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _eventTypeModel;
        /*0xc8*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _hasEventsRemaining;

        /*0x2925eb8*/ CombatEventIndicatorModel(string modelName);
        /*0x292618c*/ void SetTime(int nextTrickSpawnTimeInMs, int previousTrickSpawnTimeInMs, int currentWaveTimeInMs, System.DateTime now);
        /*0x29262cc*/ void SetEventType(string eventType);
        /*0x29262e4*/ void SetHasEventsRemaining(bool hasEventsRemaining);
    }

    class CombatFpsRecorder
    {
        /*0x10*/ PopCap.PerformanceMetricsWrapper _performanceMetrics;

        /*0x2926300*/ CombatFpsRecorder(PopCap.PerformanceMetricsWrapper performanceMetrics);
        /*0x2926330*/ void StartRecordingFps();
        /*0x292638c*/ void StopRecordingFps();
    }

    class CombatGameEndReporter
    {
        static string NetworkSpinnerId = "CombatGameEndReporter";
        /*0x10*/ System.Action OnReportGameEndComplete;
        /*0x18*/ Yeti.CombatGuiModel _combatModel;
        /*0x20*/ Yeti.IBattleDataController _battleDataController;
        /*0x28*/ PvzN3xt.UI.WaitForNetworkScreenController _waitForNetworkScreenController;
        /*0x30*/ Yeti.CombatSceneStateContext _context;
        /*0x38*/ Yeti.CoreSimWrapper _coreSim;

        /*0x2926520*/ CombatGameEndReporter(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim);
        /*0x29263e8*/ void add_OnReportGameEndComplete(System.Action value);
        /*0x2926484*/ void remove_OnReportGameEndComplete(System.Action value);
        /*0x2926634*/ void ReportGameEnd(Yeti.EndCombatCause cause);
        /*0x2926800*/ void Stop();
        /*0x2926788*/ void HandleReportGameEndComplete();
    }

    class CombatGuiModel
    {
        /*0x10*/ System.Action OnSunDataChanged;
        /*0x18*/ System.Action<int> OnSunCountChanged;
        /*0x20*/ System.Action OnSunGenerated;
        /*0x28*/ System.Action OnSunCollectedDataChanged;
        /*0x30*/ System.Action OnSunRemovedDataChanged;
        /*0x38*/ System.Action OnSunGenerationStopped;
        /*0x40*/ System.Action OnSunGenerationEnding;
        /*0x48*/ System.Action OnPlantFoodValueChanged;
        /*0x50*/ System.Action OnHideQuitButtonsChanged;
        /*0x58*/ System.Action OnHidePauseButtonChanged;
        /*0x60*/ System.Action OnPlantLoadoutChanged;
        /*0x68*/ System.Action OnPlantFoodInputViewDataChanged;
        /*0x70*/ System.Action OnMoveInputViewDataChanged;
        /*0x78*/ System.Action OnReclaimInputViewDataChanged;
        /*0x80*/ System.Action OnRemoveGrowthTimerInputViewDataChanged;
        /*0x88*/ System.Action<float, bool> OnTurboViewDataChanged;
        /*0x90*/ System.Action<bool> OnTurboViewAvailabilityChanged;
        /*0x98*/ System.Action OnInstantUseLoadoutInputViewDataChanged;
        /*0xa0*/ System.Action<int> OnReclaimedPlant;
        /*0xa8*/ System.Action<Yeti.PlantFoodUsedArgs> OnPlantFoodUsed;
        /*0xb0*/ System.Action<int> OnPlantPromoted;
        /*0xb8*/ System.Action<int> OnPlantPromotedByPlayer;
        /*0xc0*/ System.Action<int> OnPlantPromotedByAbility;
        /*0xc8*/ System.Action<int> OnPlantPromotedByTacoCharge;
        /*0xd0*/ System.Action<int> OnPlantDied;
        /*0xd8*/ System.Action<int> OnPlantUsed;
        /*0xe0*/ System.Action<int> OnTapAbilityActivated;
        /*0xe8*/ System.Action<int> OnZombieSpawned;
        /*0xf0*/ System.Action<int> OnZombieDied;
        /*0xf8*/ System.Action OnInstantUseLoadoutChanged;
        /*0x100*/ System.Action OnInstantDefenseLoadoutChanged;
        /*0x108*/ System.Action OnGameStateChanged;
        /*0x110*/ System.Action OnEstablishingShotsStart;
        /*0x118*/ System.Action OnEstablishingShotsEnd;
        /*0x120*/ System.Action OnCelebrationMomentStart;
        /*0x128*/ System.Action OnCelebrationMomentEnd;
        /*0x130*/ System.Action OnWaveBreakStart;
        /*0x138*/ System.Action OnWaveBreakEnd;
        /*0x140*/ System.Action<Yeti.BattleEventArgs> OnBattleStarted;
        /*0x148*/ System.Action<Yeti.BattleEventArgs> OnStageLoaded;
        /*0x150*/ System.Action<Yeti.RealTimeCombatStartedEventArgs> OnRealTimeCombatStarted;
        /*0x158*/ System.Action OnStageCombatStarted;
        /*0x160*/ System.Action<Yeti.EndCombatCause> OnGameEnded;
        /*0x168*/ System.Action OnStageEnded;
        /*0x170*/ System.Action<Yeti.AfterBattleEndedEventArgs> OnAfterBattleEnded;
        /*0x178*/ System.Action<Yeti.CombatUnitSelectionData> OnPlantOnBoardSelected;
        /*0x180*/ System.Action OnBossMaxHealthSet;
        /*0x188*/ System.Action OnBossValuesChanged;
        /*0x190*/ System.Action OnBossIntroComplete;
        /*0x198*/ System.Action OnInitialScoreValuesChanged;
        /*0x1a0*/ System.Action OnScoreValuesChanged;
        /*0x1a8*/ System.Action<Yeti.Data.ScoreBonusType, int> OnScoreBonusGenerated;
        /*0x1b0*/ System.Action OnKillStreakValuesChanged;
        /*0x1b8*/ System.Action OnUnitBecamePlantable;
        /*0x1c0*/ System.Action<int> OnLoadoutItemSelected;
        /*0x1c8*/ System.Action<Yeti.CombatUnitSelectionData> OnPlantHoveredOverForPlantFood;
        /*0x1d0*/ System.Action<Yeti.CombatUnitSelectionData> OnPlantTappedForPlantFood;
        /*0x1d8*/ System.Action<Yeti.CombatUnitSelectionData> OnPlantHoveredOverForPromotion;
        /*0x1e0*/ System.Action OnStartedMovingPlant;
        /*0x1e8*/ System.Action<int> OnPlantMoved;
        /*0x1f0*/ System.Action<Yeti.CombatUnitSelectionData> OnPlantTappedForPromotion;
        /*0x1f8*/ System.Action OnBackButtonPressed;
        /*0x200*/ System.Action CombatEventChanged;
        /*0x208*/ System.Action<float> OnUpdate;
        /*0x210*/ System.Action OnHugeWaveSpawned;
        /*0x218*/ System.Action OnFinalWaveSpawned;
        /*0x220*/ System.Action OnShovelCooldownUpdated;
        /*0x228*/ System.Action OnZombiesNearHouse;
        /*0x230*/ System.Action OnZombiesNoLongerNearHouse;
        /*0x238*/ System.Action OnSpentPlantFoodOnSunMeter;
        /*0x240*/ System.Action OnSpentPromotionUseOnSunMeter;
        /*0x248*/ System.Action OnAntiStallingWarningTimeReached;
        /*0x250*/ System.Action OnSilentAbandonComplete;
        /*0x258*/ System.Action OnRefreshPersistentDataProviders;
        /*0x260*/ System.Action OnCascadeMeterPercentChanged;
        /*0x268*/ System.Action OnCascadeTokenCollectedDataChanged;
        /*0x270*/ System.Action OnMoneyTokenCollectedDataChanged;
        /*0x278*/ System.Action<int> OnUnitSpawned;
        /*0x280*/ System.Action<string> OnUIEventChanged;
        /*0x288*/ System.Action OnLossAversionPause;
        /*0x290*/ Yeti.CombatDefinitionData <CombatDef>k__BackingField;
        /*0x298*/ Yeti.CombatSceneGuiData <CombatGuiData>k__BackingField;
        /*0x2a0*/ Yeti.CombatInputGuiData <CombatInputGuiData>k__BackingField;
        /*0x2a8*/ Yeti.GenericVisualConfig <PresentationConfig>k__BackingField;
        /*0x2b0*/ Yeti.DamageTypePreviewGuiData <DamageTypePreviewData>k__BackingField;
        /*0x2b8*/ Yeti.CombatCameraUtils <CombatCameraUtils>k__BackingField;
        /*0x2c0*/ Yeti.SpawnedUnitTracker <SpawnedUnits>k__BackingField;
        /*0x2c8*/ float <CombatElapsedTimeSeconds>k__BackingField;
        /*0x2cc*/ float <CombatElapsedRealTimeSeconds>k__BackingField;

        static /*0x292f060*/ void AssignCascadeStateData(Yeti.CascadeGuiData cascadeGuiData, Yeti.Data.CascadeUnitConfig cascadeUnit, float percent);
        /*0x292f26c*/ CombatGuiModel();
        /*0x2926854*/ void add_OnSunDataChanged(System.Action value);
        /*0x29268f0*/ void remove_OnSunDataChanged(System.Action value);
        /*0x292698c*/ void add_OnSunCountChanged(System.Action<int> value);
        /*0x2926a3c*/ void remove_OnSunCountChanged(System.Action<int> value);
        /*0x2926aec*/ void add_OnSunGenerated(System.Action value);
        /*0x2926b88*/ void remove_OnSunGenerated(System.Action value);
        /*0x2926c24*/ void add_OnSunCollectedDataChanged(System.Action value);
        /*0x2926cc0*/ void remove_OnSunCollectedDataChanged(System.Action value);
        /*0x2926d5c*/ void add_OnSunRemovedDataChanged(System.Action value);
        /*0x2926df8*/ void remove_OnSunRemovedDataChanged(System.Action value);
        /*0x2926e94*/ void add_OnSunGenerationStopped(System.Action value);
        /*0x2926f30*/ void remove_OnSunGenerationStopped(System.Action value);
        /*0x2926fcc*/ void add_OnSunGenerationEnding(System.Action value);
        /*0x2927068*/ void remove_OnSunGenerationEnding(System.Action value);
        /*0x2927104*/ void add_OnPlantFoodValueChanged(System.Action value);
        /*0x29271a0*/ void remove_OnPlantFoodValueChanged(System.Action value);
        /*0x292723c*/ void add_OnHideQuitButtonsChanged(System.Action value);
        /*0x29272d8*/ void remove_OnHideQuitButtonsChanged(System.Action value);
        /*0x2927374*/ void add_OnHidePauseButtonChanged(System.Action value);
        /*0x2927410*/ void remove_OnHidePauseButtonChanged(System.Action value);
        /*0x29274ac*/ void add_OnPlantLoadoutChanged(System.Action value);
        /*0x2927548*/ void remove_OnPlantLoadoutChanged(System.Action value);
        /*0x29275e4*/ void add_OnPlantFoodInputViewDataChanged(System.Action value);
        /*0x2927680*/ void remove_OnPlantFoodInputViewDataChanged(System.Action value);
        /*0x292771c*/ void add_OnMoveInputViewDataChanged(System.Action value);
        /*0x29277b8*/ void remove_OnMoveInputViewDataChanged(System.Action value);
        /*0x2927854*/ void add_OnReclaimInputViewDataChanged(System.Action value);
        /*0x29278f0*/ void remove_OnReclaimInputViewDataChanged(System.Action value);
        /*0x292798c*/ void add_OnRemoveGrowthTimerInputViewDataChanged(System.Action value);
        /*0x2927a28*/ void remove_OnRemoveGrowthTimerInputViewDataChanged(System.Action value);
        /*0x2927ac4*/ void add_OnTurboViewDataChanged(System.Action<float, bool> value);
        /*0x2927b74*/ void remove_OnTurboViewDataChanged(System.Action<float, bool> value);
        /*0x2927c24*/ void add_OnTurboViewAvailabilityChanged(System.Action<bool> value);
        /*0x2927cd4*/ void remove_OnTurboViewAvailabilityChanged(System.Action<bool> value);
        /*0x2927d84*/ void add_OnInstantUseLoadoutInputViewDataChanged(System.Action value);
        /*0x2927e20*/ void remove_OnInstantUseLoadoutInputViewDataChanged(System.Action value);
        /*0x2927ebc*/ void add_OnReclaimedPlant(System.Action<int> value);
        /*0x2927f6c*/ void remove_OnReclaimedPlant(System.Action<int> value);
        /*0x292801c*/ void add_OnPlantFoodUsed(System.Action<Yeti.PlantFoodUsedArgs> value);
        /*0x29280cc*/ void remove_OnPlantFoodUsed(System.Action<Yeti.PlantFoodUsedArgs> value);
        /*0x292817c*/ void add_OnPlantPromoted(System.Action<int> value);
        /*0x292822c*/ void remove_OnPlantPromoted(System.Action<int> value);
        /*0x29282dc*/ void add_OnPlantPromotedByPlayer(System.Action<int> value);
        /*0x292838c*/ void remove_OnPlantPromotedByPlayer(System.Action<int> value);
        /*0x292843c*/ void add_OnPlantPromotedByAbility(System.Action<int> value);
        /*0x29284ec*/ void remove_OnPlantPromotedByAbility(System.Action<int> value);
        /*0x292859c*/ void add_OnPlantPromotedByTacoCharge(System.Action<int> value);
        /*0x292864c*/ void remove_OnPlantPromotedByTacoCharge(System.Action<int> value);
        /*0x29286fc*/ void add_OnPlantDied(System.Action<int> value);
        /*0x29287ac*/ void remove_OnPlantDied(System.Action<int> value);
        /*0x292885c*/ void add_OnPlantUsed(System.Action<int> value);
        /*0x292890c*/ void remove_OnPlantUsed(System.Action<int> value);
        /*0x29289bc*/ void add_OnTapAbilityActivated(System.Action<int> value);
        /*0x2928a6c*/ void remove_OnTapAbilityActivated(System.Action<int> value);
        /*0x2928b1c*/ void add_OnZombieSpawned(System.Action<int> value);
        /*0x2928bcc*/ void remove_OnZombieSpawned(System.Action<int> value);
        /*0x2928c7c*/ void add_OnZombieDied(System.Action<int> value);
        /*0x2928d2c*/ void remove_OnZombieDied(System.Action<int> value);
        /*0x2928ddc*/ void add_OnInstantUseLoadoutChanged(System.Action value);
        /*0x2928e78*/ void remove_OnInstantUseLoadoutChanged(System.Action value);
        /*0x2928f14*/ void add_OnInstantDefenseLoadoutChanged(System.Action value);
        /*0x2928fb0*/ void remove_OnInstantDefenseLoadoutChanged(System.Action value);
        /*0x292904c*/ void add_OnGameStateChanged(System.Action value);
        /*0x29290e8*/ void remove_OnGameStateChanged(System.Action value);
        /*0x2929184*/ void add_OnEstablishingShotsStart(System.Action value);
        /*0x2929220*/ void remove_OnEstablishingShotsStart(System.Action value);
        /*0x29292bc*/ void add_OnEstablishingShotsEnd(System.Action value);
        /*0x2929358*/ void remove_OnEstablishingShotsEnd(System.Action value);
        /*0x29293f4*/ void add_OnCelebrationMomentStart(System.Action value);
        /*0x2929490*/ void remove_OnCelebrationMomentStart(System.Action value);
        /*0x292952c*/ void add_OnCelebrationMomentEnd(System.Action value);
        /*0x29295c8*/ void remove_OnCelebrationMomentEnd(System.Action value);
        /*0x2929664*/ void add_OnWaveBreakStart(System.Action value);
        /*0x2929700*/ void remove_OnWaveBreakStart(System.Action value);
        /*0x292979c*/ void add_OnWaveBreakEnd(System.Action value);
        /*0x2929838*/ void remove_OnWaveBreakEnd(System.Action value);
        /*0x29298d4*/ void add_OnBattleStarted(System.Action<Yeti.BattleEventArgs> value);
        /*0x2929984*/ void remove_OnBattleStarted(System.Action<Yeti.BattleEventArgs> value);
        /*0x2929a34*/ void add_OnStageLoaded(System.Action<Yeti.BattleEventArgs> value);
        /*0x2929ae4*/ void remove_OnStageLoaded(System.Action<Yeti.BattleEventArgs> value);
        /*0x2929b94*/ void add_OnRealTimeCombatStarted(System.Action<Yeti.RealTimeCombatStartedEventArgs> value);
        /*0x2929c44*/ void remove_OnRealTimeCombatStarted(System.Action<Yeti.RealTimeCombatStartedEventArgs> value);
        /*0x2929cf4*/ void add_OnStageCombatStarted(System.Action value);
        /*0x2929d90*/ void remove_OnStageCombatStarted(System.Action value);
        /*0x2929e2c*/ void add_OnGameEnded(System.Action<Yeti.EndCombatCause> value);
        /*0x2929edc*/ void remove_OnGameEnded(System.Action<Yeti.EndCombatCause> value);
        /*0x2929f8c*/ void add_OnStageEnded(System.Action value);
        /*0x292a028*/ void remove_OnStageEnded(System.Action value);
        /*0x292a0c4*/ void add_OnAfterBattleEnded(System.Action<Yeti.AfterBattleEndedEventArgs> value);
        /*0x292a174*/ void remove_OnAfterBattleEnded(System.Action<Yeti.AfterBattleEndedEventArgs> value);
        /*0x292a224*/ void add_OnPlantOnBoardSelected(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292a2d4*/ void remove_OnPlantOnBoardSelected(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292a384*/ void add_OnBossMaxHealthSet(System.Action value);
        /*0x292a420*/ void remove_OnBossMaxHealthSet(System.Action value);
        /*0x292a4bc*/ void add_OnBossValuesChanged(System.Action value);
        /*0x292a558*/ void remove_OnBossValuesChanged(System.Action value);
        /*0x292a5f4*/ void add_OnBossIntroComplete(System.Action value);
        /*0x292a690*/ void remove_OnBossIntroComplete(System.Action value);
        /*0x292a72c*/ void add_OnInitialScoreValuesChanged(System.Action value);
        /*0x292a7c8*/ void remove_OnInitialScoreValuesChanged(System.Action value);
        /*0x292a864*/ void add_OnScoreValuesChanged(System.Action value);
        /*0x292a900*/ void remove_OnScoreValuesChanged(System.Action value);
        /*0x292a99c*/ void add_OnScoreBonusGenerated(System.Action<Yeti.Data.ScoreBonusType, int> value);
        /*0x292aa4c*/ void remove_OnScoreBonusGenerated(System.Action<Yeti.Data.ScoreBonusType, int> value);
        /*0x292aafc*/ void add_OnKillStreakValuesChanged(System.Action value);
        /*0x292ab98*/ void remove_OnKillStreakValuesChanged(System.Action value);
        /*0x292ac34*/ void add_OnUnitBecamePlantable(System.Action value);
        /*0x292acd0*/ void remove_OnUnitBecamePlantable(System.Action value);
        /*0x292ad6c*/ void add_OnLoadoutItemSelected(System.Action<int> value);
        /*0x292ae1c*/ void remove_OnLoadoutItemSelected(System.Action<int> value);
        /*0x292aecc*/ void add_OnPlantHoveredOverForPlantFood(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292af7c*/ void remove_OnPlantHoveredOverForPlantFood(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292b02c*/ void add_OnPlantTappedForPlantFood(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292b0dc*/ void remove_OnPlantTappedForPlantFood(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292b18c*/ void add_OnPlantHoveredOverForPromotion(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292b23c*/ void remove_OnPlantHoveredOverForPromotion(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292b2ec*/ void add_OnStartedMovingPlant(System.Action value);
        /*0x292b388*/ void remove_OnStartedMovingPlant(System.Action value);
        /*0x292b424*/ void add_OnPlantMoved(System.Action<int> value);
        /*0x292b4d4*/ void remove_OnPlantMoved(System.Action<int> value);
        /*0x292b584*/ void add_OnPlantTappedForPromotion(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292b634*/ void remove_OnPlantTappedForPromotion(System.Action<Yeti.CombatUnitSelectionData> value);
        /*0x292b6e4*/ void add_OnBackButtonPressed(System.Action value);
        /*0x292b780*/ void remove_OnBackButtonPressed(System.Action value);
        /*0x292b81c*/ void add_CombatEventChanged(System.Action value);
        /*0x292b8b8*/ void remove_CombatEventChanged(System.Action value);
        /*0x292b954*/ void add_OnUpdate(System.Action<float> value);
        /*0x292ba04*/ void remove_OnUpdate(System.Action<float> value);
        /*0x292bab4*/ void add_OnHugeWaveSpawned(System.Action value);
        /*0x292bb50*/ void remove_OnHugeWaveSpawned(System.Action value);
        /*0x292bbec*/ void add_OnFinalWaveSpawned(System.Action value);
        /*0x292bc88*/ void remove_OnFinalWaveSpawned(System.Action value);
        /*0x292bd24*/ void add_OnShovelCooldownUpdated(System.Action value);
        /*0x292bdc0*/ void remove_OnShovelCooldownUpdated(System.Action value);
        /*0x292be5c*/ void add_OnZombiesNearHouse(System.Action value);
        /*0x292bef8*/ void remove_OnZombiesNearHouse(System.Action value);
        /*0x292bf94*/ void add_OnZombiesNoLongerNearHouse(System.Action value);
        /*0x292c030*/ void remove_OnZombiesNoLongerNearHouse(System.Action value);
        /*0x292c0cc*/ void add_OnSpentPlantFoodOnSunMeter(System.Action value);
        /*0x292c168*/ void remove_OnSpentPlantFoodOnSunMeter(System.Action value);
        /*0x292c204*/ void add_OnSpentPromotionUseOnSunMeter(System.Action value);
        /*0x292c2a0*/ void remove_OnSpentPromotionUseOnSunMeter(System.Action value);
        /*0x292c33c*/ void add_OnAntiStallingWarningTimeReached(System.Action value);
        /*0x292c3d8*/ void remove_OnAntiStallingWarningTimeReached(System.Action value);
        /*0x292c474*/ void add_OnSilentAbandonComplete(System.Action value);
        /*0x292c510*/ void remove_OnSilentAbandonComplete(System.Action value);
        /*0x292c5ac*/ void add_OnRefreshPersistentDataProviders(System.Action value);
        /*0x292c648*/ void remove_OnRefreshPersistentDataProviders(System.Action value);
        /*0x292c6e4*/ void add_OnCascadeMeterPercentChanged(System.Action value);
        /*0x292c780*/ void remove_OnCascadeMeterPercentChanged(System.Action value);
        /*0x292c81c*/ void add_OnCascadeTokenCollectedDataChanged(System.Action value);
        /*0x292c8b8*/ void remove_OnCascadeTokenCollectedDataChanged(System.Action value);
        /*0x292c954*/ void add_OnMoneyTokenCollectedDataChanged(System.Action value);
        /*0x292c9f0*/ void remove_OnMoneyTokenCollectedDataChanged(System.Action value);
        /*0x292ca8c*/ void add_OnUnitSpawned(System.Action<int> value);
        /*0x292cb3c*/ void remove_OnUnitSpawned(System.Action<int> value);
        /*0x292cbec*/ void add_OnUIEventChanged(System.Action<string> value);
        /*0x292cc9c*/ void remove_OnUIEventChanged(System.Action<string> value);
        /*0x292cd4c*/ void add_OnLossAversionPause(System.Action value);
        /*0x292cde8*/ void remove_OnLossAversionPause(System.Action value);
        /*0x292ce84*/ Yeti.CombatDefinitionData get_CombatDef();
        /*0x292ce8c*/ void set_CombatDef(Yeti.CombatDefinitionData value);
        /*0x292ce9c*/ Yeti.CombatSceneGuiData get_CombatGuiData();
        /*0x292cea4*/ void set_CombatGuiData(Yeti.CombatSceneGuiData value);
        /*0x292ceb4*/ Yeti.CombatInputGuiData get_CombatInputGuiData();
        /*0x292cebc*/ void set_CombatInputGuiData(Yeti.CombatInputGuiData value);
        /*0x292cecc*/ Yeti.GenericVisualConfig get_PresentationConfig();
        /*0x292ced4*/ void set_PresentationConfig(Yeti.GenericVisualConfig value);
        /*0x292cee4*/ Yeti.DamageTypePreviewGuiData get_DamageTypePreviewData();
        /*0x292ceec*/ Yeti.CombatCameraUtils get_CombatCameraUtils();
        /*0x292cef4*/ void set_CombatCameraUtils(Yeti.CombatCameraUtils value);
        /*0x292cf04*/ Yeti.SpawnedUnitTracker get_SpawnedUnits();
        /*0x292cf0c*/ float get_CombatElapsedTimeSeconds();
        /*0x292cf14*/ void set_CombatElapsedTimeSeconds(float value);
        /*0x292cf1c*/ float get_CombatElapsedRealTimeSeconds();
        /*0x292cf24*/ void set_CombatElapsedRealTimeSeconds(float value);
        /*0x292cf2c*/ void SetCombatRuntimeModel(Yeti.CombatRuntimeContext context);
        /*0x292cfb8*/ void SetCombatInputModel(Yeti.CombatInputRootState inputController);
        /*0x292cfe8*/ void SetBattleProperties(Yeti.StartCombatConfig battleProperties);
        /*0x292d3dc*/ void Clear();
        /*0x292d43c*/ void Update(float deltaTime);
        /*0x292d468*/ void SetSunCount(int sunCount);
        /*0x292d528*/ void SetSunIsUnlimited(bool isSunUnlimited);
        /*0x292d570*/ void SetSunGeneratorTicks(int lastTick, int nextTick);
        /*0x292d5cc*/ void SetSunCollectedSourceLocation(UnityEngine.Vector3 location);
        /*0x292d610*/ void SetSunRemovedTargetLocation(UnityEngine.Vector3 location);
        /*0x292d654*/ void SetSunGenerationIsEnding();
        /*0x292d670*/ void SetSunGenerationIsStopped();
        /*0x2919a80*/ void ToggleFtueHidePlantFood();
        /*0x2919adc*/ void ToggleFtueHideQuitButtons();
        /*0x2919b38*/ void ToggleHidePauseButton();
        /*0x292d68c*/ void SetPlantFoodMeterValue(int value);
        /*0x292d6cc*/ void SetPlantFoodMeterIsUnlimited(bool isActive);
        /*0x292d710*/ void SetLoadoutCooldownPercent(int loadoutIndex, float cooldownPercent);
        /*0x292d758*/ void SetSupercharge(YetiSimCoreLib.Game.UnitId unitId, bool isSuperchargeActive);
        /*0x292d804*/ void SetTacoCharge(YetiSimCoreLib.Game.UnitId unitId, bool isActive);
        /*0x292d8b0*/ bool IsSeedPacketPlantable(YetiSimCoreLib.Game.UnitId unitId);
        /*0x292d924*/ void SetSeedPacketSelected(int loadoutIndex, bool isSelected);
        /*0x292d970*/ void SetAllSeedPacketsDeselected();
        /*0x292d9b8*/ void SetLoadoutCooldownsAreDisabled(bool isDisabled);
        /*0x292da00*/ void ActivatePlantFoodInputMode();
        /*0x292db10*/ void SetPlantFoodInputDragPosition(UnityEngine.Vector3 screenPosition);
        /*0x292db5c*/ void DeactivatePlantFoodInputMode();
        /*0x292dba0*/ void ActivateMovePlantInputMode();
        /*0x292dc1c*/ void DeactivateMovePlantInputMode();
        /*0x292dc5c*/ void ActivateReclaimPlantInputMode();
        /*0x292dca0*/ void SetReclaimUnitHoverData(UnityEngine.Vector3 plantScreenPosition, int reclaimValue, int reclaimRemainder);
        /*0x292dce4*/ void ClearReclaimUnitHoverData();
        /*0x292dd08*/ void SetReclaimUnitDragPosition(UnityEngine.Vector3 screenPosition);
        /*0x292dd54*/ void DeactivateReclaimPlantInputMode();
        /*0x292dd98*/ void ActivateRemoveGrowthTimerInputMode();
        /*0x292dddc*/ void SetRemoveGrowthTimerHoverData(UnityEngine.Vector3 plantScreenPosition, int costValue);
        /*0x292de20*/ void ClearRemoveGrowthTimerHoverData();
        /*0x292de44*/ void SetRemoveGrowthTimerDragPosition(UnityEngine.Vector3 screenPosition);
        /*0x292de90*/ void DeactivateRemoveGrowthTimerInputMode();
        /*0x292ded4*/ void SetTurboSpeed(float speed, bool isActive);
        /*0x292df24*/ void SetInstantUsePlantSelected(int unitId);
        /*0x292df6c*/ void DeactivateInstantUsePlantInputMode();
        /*0x292e004*/ void SetPlantIsReclaimed(int unitId);
        /*0x292e030*/ void SetPlantFoodUsedOn(int unitId, bool isSuperCharged);
        /*0x292e0d8*/ void SetPlantIsPromoted(int unitId);
        /*0x292e104*/ void SetPlantIsPromotedByPlayer(int unitId);
        /*0x292e130*/ void SetPlantIsPromotedByAbility(int unitId);
        /*0x292e15c*/ void SetPlantIsPromotedByTacoCharge(int unitId);
        /*0x292e188*/ void SetPlantIsDead(int unitId);
        /*0x292e1b4*/ void SetPlantIsUsed(int unitId);
        /*0x292e1e0*/ void SetTapAbilityActivated(int unitId);
        /*0x292e20c*/ void SetZombieSpawned(int unitId);
        /*0x292e238*/ void SetZombieDied(int unitId);
        /*0x292e264*/ void SetInstantUseCooldownPercent(int unitId, float cooldownPercent);
        /*0x292e2ac*/ void SetPremiumInstantUseCharges(int unitId, int charges);
        /*0x292e2f4*/ void SetFreeInstantUseCharges(int unitId, int charges);
        /*0x292e33c*/ void SetInstantUseChargesAreUnlimited(bool isActive);
        /*0x292e380*/ void SetInstantDefenseCharges(int charges);
        /*0x292e3c0*/ void SetIsPausedForFtue(bool isPaused);
        /*0x292e404*/ void SetIsPaused(bool isPaused);
        /*0x292e448*/ void SetIsGameRunning(bool isRunning);
        /*0x292e48c*/ void SetIsFirstEntry(bool isFirstEntry);
        /*0x292e4d0*/ void SetIsEstablishingShots(bool isEstablishingShots);
        /*0x2915d64*/ void SetIsCelebrationMoment(bool isCelebrationMoment);
        /*0x292e54c*/ void SetIsUnlimitedResourcesMode(bool isActive);
        /*0x292e590*/ void SetIsWaveBreakActive(bool isActive);
        /*0x292e60c*/ void ToggleIsWaveBreakActive();
        /*0x292e638*/ void SetStageData(int stageIndex, string waveName);
        /*0x292e690*/ void SetBattleStarted(Yeti.BattleEventArgs args);
        /*0x292e6b8*/ void SetStageLoaded(Yeti.BattleEventArgs args);
        /*0x292e6e0*/ void SetRealTimeCombatStarted(Yeti.RealTimeCombatStartedEventArgs args);
        /*0x292e720*/ void SetStageCombatStarted();
        /*0x292675c*/ void SetGameEnded(Yeti.EndCombatCause cause);
        /*0x292e73c*/ void SetStageEnded();
        /*0x292e758*/ void NotifyAfterBattleEnded(Yeti.AfterBattleEndedEventArgs args);
        /*0x292e780*/ void SetPlantOnBoardSelected(Yeti.CombatUnitSelectionData data);
        /*0x292e7c0*/ void SetBossNameLocId(string locId);
        /*0x292e7e4*/ void SetBossMaxHealth(int maxHealth);
        /*0x292e824*/ void SetBossHealthPercent(float healthPercent);
        /*0x292e8f0*/ void SetBossUnitId(int unitId);
        /*0x292e968*/ void SetBossIntroComplete();
        /*0x292e984*/ void SetTotalScore(int totalScore);
        /*0x292e9c4*/ void SetInitialTotalScore(int totalScore);
        /*0x292ea04*/ void SetScoreBonusGenerated(Yeti.Data.ScoreBonusType type, int score);
        /*0x292ea94*/ void SetKillstreak(int killStreakValue, int bonusMultiplierPercent);
        /*0x292ead8*/ void SetKillstreakCooldownPercent(float percentValue);
        /*0x292d4dc*/ void CheckIfUnitBecamePlantable();
        /*0x292eb18*/ void SetLoadoutItemSelected(int loadoutIndex);
        /*0x292dad0*/ void SetPlantHoveredOverForPlantFood(Yeti.CombatUnitSelectionData data);
        /*0x292eb44*/ void SetPlantTappedForPlantFood(Yeti.CombatUnitSelectionData data);
        /*0x292eb84*/ void SetPlantHoveredOverForPromotion(Yeti.CombatUnitSelectionData data);
        /*0x292dc00*/ void SetHasStartedMovingPlant();
        /*0x292ebc4*/ void SetPlantMoved(int unitId);
        /*0x292ebf0*/ void SetPlantTappedForPromotion(Yeti.CombatUnitSelectionData data);
        /*0x292ec30*/ bool HandleBackButton();
        /*0x292ec5c*/ void SetCurrentWave(int currentWaveIndex);
        /*0x292eca4*/ void SetHugeWaveSpawned();
        /*0x292ecc0*/ void SetFinalWaveSpawned();
        /*0x292ecdc*/ void SetCombatEvent(string headerTextLocKey, string eventTextLocKey, string switchAlias);
        /*0x292ed70*/ void SetShovelCooldownData(float percent, bool disabled);
        /*0x292edb8*/ void SetShovelCooldownDisabled(bool disabled);
        /*0x292edfc*/ void SetZombiesNearHouse();
        /*0x292ee18*/ void SetZombiesNoLongerNearHouse();
        /*0x292ee34*/ void SetSpentPlantFoodOnSunMeter();
        /*0x292ee50*/ void SetSpentPromotionUseOnSunMeter();
        /*0x292ee6c*/ void RefreshPersistentDataProviders();
        /*0x292ee88*/ void SetAntiStallingWarningTimeReached();
        /*0x292eea4*/ void SetAntiStallingZombieSpawned();
        /*0x292eecc*/ void AddSunSpent(uint amount);
        /*0x292eef8*/ void SetSilentAbandonComplete();
        /*0x292ef14*/ void AddSpawnedUnit(Yeti.Data.Faction faction, int unitId);
        /*0x292ef64*/ void CascadeUnitActivated(int tierActivated, int numTiers);
        /*0x292f000*/ void SetCascadeMeterPercent(float percent);
        /*0x292f180*/ void SetCascadeTokenCollectedSourceLocation(UnityEngine.Vector3 location);
        /*0x292f1c4*/ void SetMoneyTokenCollectedSourceLocation(UnityEngine.Vector3 location);
        /*0x292efe4*/ void SetUIEventKey(string key);
        /*0x292f208*/ void SetTurboAvailable(bool available);
        /*0x292f250*/ void NotifyLossAversionPause();
    }

    struct PlantFoodUsedArgs
    {
        /*0x10*/ YetiSimCoreLib.Game.UnitId UnitId;
        /*0x14*/ bool ActivatedFromSuperCharged;
    }

    struct RealTimeCombatStartedEventArgs
    {
        /*0x10*/ string <BattleId>k__BackingField;
        /*0x18*/ PvzN3xt.DynamicDifficulty.PlayerDynamicDifficultyInputs <PlayerDynamicDifficultyInputs>k__BackingField;
        /*0x20*/ PvzN3xtBattleGen.BattleGeneratorReport <BattleGenReport>k__BackingField;

        /*0x218af4c*/ RealTimeCombatStartedEventArgs(string battleId, PvzN3xtBattleGen.BattleGeneratorReport battleGenReport, PvzN3xt.DynamicDifficulty.PlayerDynamicDifficultyInputs playerDifficultyInputs);
        /*0x218af34*/ string get_BattleId();
        /*0x218af3c*/ PvzN3xt.DynamicDifficulty.PlayerDynamicDifficultyInputs get_PlayerDynamicDifficultyInputs();
        /*0x218af44*/ PvzN3xtBattleGen.BattleGeneratorReport get_BattleGenReport();
    }

    struct BattleEventArgs
    {
        /*0x10*/ string <BattleId>k__BackingField;

        /*0x218af98*/ BattleEventArgs(string battleId);
        /*0x218af90*/ string get_BattleId();
    }

    struct AfterBattleEndedEventArgs
    {
        /*0x10*/ Yeti.TrackBattleEndedData <TrackData>k__BackingField;

        /*0x218afa8*/ AfterBattleEndedEventArgs(Yeti.TrackBattleEndedData trackData);
        /*0x218afa0*/ Yeti.TrackBattleEndedData get_TrackData();
    }

    class TrackBattleEndedData
    {
        /*0x10*/ PvzN3xt.DynamicDifficulty.AbilityRatingUpdateSummary <AbilityRatingUpdateSummary>k__BackingField;
        /*0x18*/ int <TrackLevelNumber>k__BackingField;

        /*0x218afc0*/ TrackBattleEndedData(PvzN3xt.DynamicDifficulty.AbilityRatingUpdateSummary abilityRatingUpdateSummary, int trackLevelNumber);
        /*0x218afb0*/ PvzN3xt.DynamicDifficulty.AbilityRatingUpdateSummary get_AbilityRatingUpdateSummary();
        /*0x218afb8*/ int get_TrackLevelNumber();
    }

    class CombatImpactSoundManager
    {
        /*0x10*/ Yeti.CombatSceneStateContext _context;
        /*0x18*/ UnityEngine.GameObject _boardEdgeObject;

        /*0x218b058*/ CombatImpactSoundManager(Yeti.CombatSceneStateContext context);
        /*0x218affc*/ Yeti.GameSoundManager get__soundManager();
        /*0x218b014*/ Yeti.PuppetAudioManager get__puppetAudioManager();
        /*0x218b02c*/ string get__materialSwitchGroup();
        /*0x218b088*/ void SetBoardEdgeMaterialSwitch();
        /*0x218b1d4*/ void SetMaterialSwitch(UnityEngine.GameObject unitObject, Yeti.Data.UnitMaterialType material);
        /*0x218b280*/ void PlayImpactEvent(Yeti.Data.ImpactType impactType, Yeti.IPuppetAvatarView puppet);
        /*0x218b34c*/ void PlayBoardEdgeImpactEvent(Yeti.Data.ImpactType impactType, UnityEngine.Vector3 impactPosition);
        /*0x218b2c0*/ int GetImpactEventId(Yeti.Data.ImpactType impactType);
    }

    class CombatInfiniteAutoPlayer
    {
        static int DefaultMaxPlants = 45;
        static int DefaultMaxZombies = 50;
        /*0x10*/ Yeti.CombatRuntimeContext _combatRuntime;
        /*0x18*/ Yeti.CombatSceneState _combatScene;
        /*0x20*/ System.Collections.Generic.List<int> _plantIds;
        /*0x28*/ System.Collections.Generic.List<int> _zombieIds;
        /*0x30*/ bool _isActive;
        /*0x34*/ int _zombieCount;
        /*0x38*/ int _plantCount;
        /*0x40*/ System.Collections.Generic.HashSet<int> _plantOverrides;
        /*0x48*/ System.Collections.Generic.HashSet<int> _zombieOverrides;
        /*0x50*/ int <MaxPlants>k__BackingField;
        /*0x54*/ int <MaxZombies>k__BackingField;

        static /*0x218c208*/ bool CanUsePlant(Yeti.Data.UnitDefinition unit);
        static /*0x218c270*/ bool CanUseZombie(Yeti.Data.UnitDefinition unit);
        static /*0x218ca2c*/ YetiSimCoreLib.Game.GridCell GetRandomCell();
        /*0x218b494*/ CombatInfiniteAutoPlayer(Yeti.CombatRuntimeContext combatRuntime);
        /*0x218b3c4*/ bool get__overridePlants();
        /*0x218b414*/ bool get__overrideZombies();
        /*0x218b464*/ int get_MaxPlants();
        /*0x218b46c*/ void set_MaxPlants(int value);
        /*0x218b474*/ int get_MaxZombies();
        /*0x218b47c*/ void set_MaxZombies(int value);
        /*0x218b484*/ System.Collections.Generic.IReadOnlyCollection<int> get_PlantOverrides();
        /*0x218b48c*/ System.Collections.Generic.IReadOnlyCollection<int> get_ZombieOverrides();
        /*0x218b658*/ void StartAutoPlay();
        /*0x218bb48*/ void StopAutoPlay();
        /*0x218bc3c*/ void SetMaxPlants(int maxPlants);
        /*0x218bc44*/ void SetMaxZombies(int maxZombies);
        /*0x218bc4c*/ void AddPlantOverride(int unitId);
        /*0x218bcb4*/ void AddZombieOverride(int unitId);
        /*0x218bd1c*/ void SelectRandomPlantOverrides(int numPlants);
        /*0x218c164*/ void SelectRandomZombieOverrides(int numZombies);
        /*0x218be58*/ void RandomlySelectUnits(int numUnits, System.Collections.Generic.HashSet<int> overrides, Yeti.CombatInfiniteAutoPlayer.CanUseUnit canUseUnit);
        /*0x218b5ec*/ void ClearOverrides();
        /*0x218b69c*/ void StoreAllValidUnits();
        /*0x218ba84*/ void LoadAllValidUnits();
        /*0x218c2c0*/ void AssetsLoaded();
        /*0x218c2cc*/ void Update();
        /*0x218c31c*/ void UpdateUnitCount();
        /*0x218c6f8*/ void SpawnRandomPlantInRandomCell();
        /*0x218c864*/ void SpawnRandomZombieInRandomLane();
        /*0x218cac4*/ int GetRandomElement(System.Collections.Generic.List<int> list);

        class CanUseUnit : System.MulticastDelegate
        {
            /*0x218bda8*/ CanUseUnit(object object, nint method);
            /*0x218cc8c*/ bool Invoke(Yeti.Data.UnitDefinition unit);
            /*0x218cca0*/ System.IAsyncResult BeginInvoke(Yeti.Data.UnitDefinition unit, System.AsyncCallback callback, object object);
            /*0x218ccc0*/ bool EndInvoke(System.IAsyncResult result);
        }
    }

    class CombatInputDataProvider : Yeti.UIDataProvider
    {
        static string PlantFoodVisibleKey = "PlantFoodVisible";
        static string PlantFoodPositionKey = "PlantFoodPosition";
        static string PlantFoodModeActiveKey = "PlantFoodModeActive";
        static string PromoteVisibleKey = "PromoteDragVisible";
        static string PromotePositionKey = "PromoteDragPosition";
        static string PromotionModeActiveKey = "PromotionModeActive";
        static string ReclaimDragVisibleKey = "ReclaimDragVisible";
        static string ReclaimPositionKey = "ReclaimDragPosition";
        static string ReclaimPreviewVisibleKey = "ReclaimPreviewVisible";
        static string ReclaimPreviewPlantPosition = "ReclaimPreviewPlantPosition";
        static string ReclaimValueKey = "ReclaimPreviewSunValue";
        static string ReclaimValueFractionKey = "ReclaimPreviewSunValueFraction";
        static string ReclaimFormattedValueKey = "ReclaimPreviewFormattedValue";
        static string ReclaimModeActiveKey = "ReclaimModeActive";
        static string RemoveGrowthTimerDragVisibleKey = "RemoveGrowthTimerDragVisible";
        static string RemoveGrowthTimerPositionKey = "RemoveGrowthTimerDragPosition";
        static string RemoveGrowthTimerPreviewVisibleKey = "RemoveGrowthTimerPreviewVisible";
        static string RemoveGrowthTimerPreviewPlantPosition = "RemoveGrowthTimerPreviewPlantPosition";
        static string RemoveGrowthTimerValueKey = "RemoveGrowthTimerPreviewSunValue";
        static string RemoveGrowthTimerModeActiveKey = "RemoveGrowthTimerModeActive";
        static string GameSpeedKey = "GameSpeed";
        static string TurboIsActiveKey = "TurboIsActive";
        static string TurboIsAvailableKey = "TurboIsAvailable";
        static string InstantUsePlantModeActiveKey = "InstantUsePlantModeActive";
        static string MovePlantModeActiveKey = "MovePlantModeActive";
        /*0x50*/ Yeti.CombatGuiModel _combatGuiModel;
        /*0x58*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _plantFoodVisible;
        /*0x60*/ Odin.Vector3Model _plantFoodPosition;
        /*0x68*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _plantFoodModeActive;
        /*0x70*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _promoteVisible;
        /*0x78*/ Odin.Vector3Model _promotePosition;
        /*0x80*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _promotionModeActive;
        /*0x88*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _reclaimDragVisible;
        /*0x90*/ Odin.Vector3Model _reclaimDragPosition;
        /*0x98*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _reclaimPreviewVisible;
        /*0xa0*/ Odin.Vector3Model _reclaimPreviewPlantPosition;
        /*0xa8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _reclaimPreviewValue;
        /*0xb0*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _reclaimPreviewValueFraction;
        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _reclaimPreviewFormattedValue;
        /*0xc0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _reclaimModeActive;
        /*0xc8*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _removeGrowthTimerDragVisible;
        /*0xd0*/ Odin.Vector3Model _removeGrowthTimerDragPosition;
        /*0xd8*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _removeGrowthTimerPreviewVisible;
        /*0xe0*/ Odin.Vector3Model _removeGrowthTimerPreviewPlantPosition;
        /*0xe8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _removeGrowthTimerPreviewValue;
        /*0xf0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _removeGrowthTimerModeActive;
        /*0xf8*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _gameSpeed;
        /*0x100*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _turboActive;
        /*0x108*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _turboAvailable;
        /*0x110*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _movePlantModeActive;

        /*0x218e2ac*/ CombatInputDataProvider();
        /*0x218cce8*/ Yeti.CombatInputGuiData get_CombatInputGuiData();
        /*0x218cd00*/ void Initialize();
        /*0x218d034*/ void OnDispose();
        /*0x218cfdc*/ void InitializeModels();
        /*0x218d268*/ void InitializePlantFoodModels();
        /*0x218d438*/ void InitializePromotionModels();
        /*0x218d608*/ void InitializeReclaimModels();
        /*0x218dcac*/ void InitializeRemoveGrowthTimerModels();
        /*0x218da3c*/ void InitializeTurboModels();
        /*0x218dbf8*/ void InitializeMovePlantModel();
        /*0x218dfe4*/ void UpdatePlantFoodData();
        /*0x218e054*/ void UpdateReclaimData();
        /*0x218e190*/ void UpdateRemoveGrowthTimerData();
        /*0x218e240*/ void UpdateTurboData(float speed, bool turboIsActive);
        /*0x218e158*/ void UpdateMovePlantData();
        /*0x218e290*/ void UpdateTurboAvailable(bool available);
    }

    class CombatLoadRequest
    {
        static /*0x0*/ string[] EmptyResources;
        /*0x10*/ System.Collections.Generic.List<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> <LoadedResourceCollections>k__BackingField;
        /*0x18*/ Yeti.IAssetManager _assetManager;
        /*0x20*/ Yeti.CombatAssetCollection _combatAssetCollection;
        /*0x28*/ Yeti.CombatDefinitionData _combatDefinitionData;
        /*0x30*/ Yeti.IResourceLoadRequest _activeRequest;
        /*0x38*/ System.Action<Yeti.CombatLoadRequest> _onComplete;
        /*0x40*/ System.Action<Yeti.YetiError> _onError;

        static /*0x218eab0*/ CombatLoadRequest();
        /*0x218e2bc*/ CombatLoadRequest(Yeti.IAssetManager assetManager, Yeti.CombatAssetCollection combatAssetCollection, Yeti.CombatDefinitionData combatDefinitionData);
        /*0x218e2b4*/ System.Collections.Generic.List<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> get_LoadedResourceCollections();
        /*0x218e388*/ void LoadResourcesRecursively(System.Collections.Generic.HashSet<string> unitsToLoad, System.Action<Yeti.CombatLoadRequest> onComplete, System.Action<Yeti.YetiError> onError);
        /*0x218e698*/ void OnResourcesLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resources, object context);
        /*0x218e6fc*/ void LoadAdditionalResourcesRecursive(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection loadedResources);
        /*0x218e440*/ void LoadResources(System.Collections.Generic.HashSet<string> resourcesToLoad, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> onResourceLoadComplete);
        /*0x218e7cc*/ void OnResourceLoadError(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError resourceError, object request);
        /*0x218e79c*/ void CompleteLoad();
        /*0x218ea04*/ void CancelCallbacks();
        /*0x218e9cc*/ void ClearLoadState();
    }

    class CombatMusicController
    {
        /*0x10*/ Yeti.IBattleDataController _battleDataController;
        /*0x18*/ Yeti.BossCombatMusicManager _bossMusicManager;
        /*0x20*/ Yeti.CombatMusicManager _combatMusicManager;
        /*0x28*/ Yeti.AbstractCombatMusicManager _musicManager;
        /*0x30*/ System.Collections.Generic.Dictionary<Yeti.IPuppetObjectProvider, int> _unitBgmSwitchMapping;
        /*0x38*/ int _currentPlayingUnitBgmSwitchId;

        static /*0x218ee10*/ string GetBoardAlias(Yeti.StartCombatConfig startCombatConfig);
        static /*0x218ee24*/ string GetGameModeAlias(Yeti.StartCombatConfig startCombatConfig);
        static /*0x218f02c*/ bool DidWin(Yeti.EndCombatCause cause);
        /*0x218eb5c*/ CombatMusicController(Yeti.CombatGuiModel combatModel, Yeti.GameSoundManager gameSoundManager, Yeti.IBattleDataController battleDataController);
        /*0x218ec98*/ void Exit();
        /*0x218ecf0*/ void StartMusic();
        /*0x218ef7c*/ void SetZombossIntroStarted();
        /*0x218efc4*/ void SetStageCombatStarted(int stageIndex);
        /*0x218f008*/ void SetStageCombatEnded(Yeti.EndCombatCause cause, int stageIndex);
        /*0x218eeb0*/ Yeti.AbstractCombatMusicManager GetMusicManager(string bossAlias);
        /*0x218f03c*/ void PauseMusic();
        /*0x218f08c*/ void ResumeMusic();
        /*0x218f0dc*/ void AddUnitBgmMusicSwitchReference(int switchId, Yeti.IPuppetObjectProvider puppet);
        /*0x218f14c*/ void RemoveUnitBgmSwitchReference(int switchId, int outroSwitchId, Yeti.IPuppetObjectProvider puppet);
        /*0x218f3a0*/ void SetUnitBgmSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
    }

    class CombatMusicIds
    {
        /*0x10*/ int _stateGroupUnityId;
        /*0x14*/ int _combatStateUnityId;
        /*0x18*/ Yeti.YetiAudioEvent _playMusicEvent;
        /*0x20*/ Yeti.YetiAudioEvent _stopMusicEvent;
        /*0x28*/ Yeti.YetiAudioEvent _pauseMusicEvent;
        /*0x30*/ Yeti.YetiAudioEvent _resumeMusicEvent;
        /*0x38*/ Yeti.YetiAudioEvent _playBossMusicEvent;
        /*0x40*/ Yeti.YetiAudioEvent _stopBossMusicEvent;
        /*0x48*/ Yeti.YetiAudioEvent _playAmbienceEvent;
        /*0x50*/ Yeti.YetiAudioEvent _stopAmbienceEvent;
        /*0x58*/ Yeti.YetiAudioSwitchGroupReference _boardSwitchGroup;
        /*0x60*/ Yeti.YetiAudioSwitchGroupReference _gameModeSwitchGroup;
        /*0x68*/ Yeti.YetiAudioSwitchGroupReference _bossSwitchGroup;
        /*0x70*/ Yeti.YetiAudioSwitchReference _invalidBossSwitch;
        /*0x78*/ Yeti.YetiAudioSwitchReference _miniBossActiveSwitch;
        /*0x80*/ Yeti.YetiAudioSwitchReference _miniBossInactiveSwitch;
        /*0x88*/ Yeti.YetiAudioSwitchReference _flyInSwitch;
        /*0x90*/ Yeti.YetiAudioSwitchReference _stageOneIntroSwitch;
        /*0x98*/ Yeti.YetiAudioSwitchReference _stageOneSwitch;
        /*0xa0*/ Yeti.YetiAudioSwitchReference _tacoTimeSwitch;
        /*0xa8*/ Yeti.YetiAudioSwitchReference _stageTwoSwitch;
        /*0xb0*/ Yeti.YetiAudioSwitchReference _winStageSwitch;
        /*0xb8*/ Yeti.YetiAudioSwitchReference _winBattleSwitch;
        /*0xc0*/ Yeti.YetiAudioSwitchReference _loseSwitch;
        /*0xc8*/ Yeti.YetiAudioSwitchReference _zombossIntroSwitch;

        /*0x218f59c*/ CombatMusicIds();
        /*0x218f3dc*/ int get_StateGroupUnityId();
        /*0x218f3e4*/ int get_CombatStateUnityId();
        /*0x218f3ec*/ int get_PlayMusic();
        /*0x218f3f8*/ int get_StopMusic();
        /*0x218f404*/ int get_PlayBossMusic();
        /*0x218f410*/ int get_StopBossMusic();
        /*0x218f41c*/ int get_PauseMusic();
        /*0x218f428*/ int get_ResumeMusic();
        /*0x218f434*/ int get_PlayAmbience();
        /*0x218f440*/ int get_StopAmbience();
        /*0x218f44c*/ int get_BoardSwitchGroup();
        /*0x218f464*/ int get_BossSwitchGroup();
        /*0x218f47c*/ int get_InvalidBossSwitch();
        /*0x218f494*/ int get_MiniBossActiveSwitch();
        /*0x218f4ac*/ int get_MiniBossInactiveSwitch();
        /*0x218f4c4*/ int get_FlyInSwitch();
        /*0x218f4dc*/ int get_StageOneIntroSwitch();
        /*0x218f4f4*/ int get_TacoTimeSwitch();
        /*0x218f50c*/ int get_GameModeSwitchGroup();
        /*0x218f524*/ int get_ZombossIntroSwitch();
        /*0x218f53c*/ int GetStageSwitch(int stage);
        /*0x218f564*/ int GetStageEndSwitch(int stage, bool won);
    }

    class AbstractCombatMusicManager
    {
        /*0x10*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x18*/ Yeti.CombatGuiModel _combatModel;
        /*0x20*/ bool _isPlaying;

        static /*0x218f940*/ void LogState(int stateGroup, int unityId);
        static /*0x218f944*/ void LogSwitch(string switchName, int switchId);
        static /*0x218f948*/ void LogEvent(string eventName, int eventId);
        /*0x218f5c8*/ AbstractCombatMusicManager(Yeti.CombatGuiModel combatModel, Yeti.GameSoundManager gameSoundManager);
        /*0x218f5a4*/ Yeti.CombatMusicIds get__combatMusicIds();
        /*0x218ef48*/ void Play();
        /*0x218eee0*/ void StageLoaded(string boardAlias, string bossAlias, string gameModeAlias);
        /*0x218ef90*/ void ZombossIntro();
        /*0x218f750*/ void CameraFlyIn();
        /*0x218f7ac*/ void StageOneIntro();
        /*0x218f7ec*/ void TacoTime();
        /*0x218efd8*/ void StageStarted(int stage);
        /*0x218f870*/ void MiniBossSpawned();
        /*0x218f8b4*/ void MiniBossDied();
        /*0x218f038*/ void StageEnded(int stage, bool won);
        /*0x218eccc*/ void ExitCombat();
        /*0x218f668*/ void SetCombatState();
        /*0x1f30ebc*/ void SetBoardSwitch(string boardAlias);
        /*0x1f30ebc*/ void SetBossSwitch(string bossAlias);
        /*0x218f6b4*/ void SetGameModeSwitch(string gameModeAlias);
        /*0x1f309e4*/ void PlayMusic();
        /*0x1f309e4*/ void StopMusic();
        /*0x218f050*/ void PauseMusic();
        /*0x218f0a0*/ void ResumeMusic();
        /*0x218f388*/ void PlayUnitBgm(int switchId);
        /*0x218f874*/ void SetMiniBossActiveSwitch();
        /*0x218f6f8*/ void SetMiniBossInactiveSwitch();
        /*0x218f82c*/ void SetStageSwitch(int stage);
        /*0x218f8b8*/ void SetStageEndSwitch(int stage, bool won);
        /*0x218f60c*/ void PlayAmbience();
        /*0x218f904*/ void StopAmbience();
        /*0x218f738*/ void SetSwitch(int switchId);
    }

    class CombatMusicManager : Yeti.AbstractCombatMusicManager
    {
        /*0x218ec94*/ CombatMusicManager(Yeti.CombatGuiModel combatModel, Yeti.GameSoundManager gameSoundManager);
        /*0x218f94c*/ void SetBoardSwitch(string boardAlias);
        /*0x218f990*/ void SetBossSwitch(string bossAlias);
        /*0x218f9d0*/ void PlayMusic();
        /*0x218fa0c*/ void StopMusic();
    }

    class BossCombatMusicManager : Yeti.AbstractCombatMusicManager
    {
        /*0x218ec90*/ BossCombatMusicManager(Yeti.CombatGuiModel combatModel, Yeti.GameSoundManager gameSoundManager);
        /*0x218fa48*/ void SetBoardSwitch(string boardAlias);
        /*0x218fa4c*/ void SetBossSwitch(string bossAlias);
        /*0x218fa90*/ void PlayMusic();
        /*0x218facc*/ void StopMusic();
    }

    class CombatObjectPoolWarmer
    {
        /*0x10*/ Yeti.CombatRuntimeContext _combatRuntimeContext;
        /*0x18*/ System.Collections.Generic.List<UnityEngine.GameObject> _objectsWithAwakeWarmedUp;

        /*0x218fb08*/ CombatObjectPoolWarmer(Yeti.CombatRuntimeContext combatRuntimeContext);
        /*0x218fba4*/ void WarmUpPoolAwakeAndShaders();
        /*0x2190080*/ void WarmUpAssetId(Yeti.ICombatObjectLifeCycleManager objectLifeCycleManager, string assetId);
        /*0x21901d0*/ void ReturnWarmedUpObjectsToPool();
    }

    class CombatPoolAllocationSettings
    {
        static /*0x2190488*/ int DeterminePoolAllocationSize(string prefabName, PvzN3xt.Data.ObjectPoolSizesDatabase objectPoolSizesDatabase, int systemMemorySizeMB, int highMemThresholdMB);
    }

    class CombatCommonResources
    {
        static string PresentationConfig = "data.sharedCombat.CombatPresentationConfig";
        static string CombatCameraPrefabId = "prefab.CombatCamera";
        static string ElevationCombatCameraPrefabId = "prefab.CombatCamera_Elevation";
        static string PlantPuppetUiPrefabId = "prefab.sharedCombat.PlantPuppetUi";
        static string ZombiePuppetUiPrefabId = "prefab.sharedCombat.ZombiePuppetUi";
        static string UiContainerPrefabId = "prefab.sharedCombat.CombatUiContainer";
        static string ScorePopPrefabId = "prefab.sharedCombat.ScorePop";
        static string ScoreBonusHighlightId = "prefab.sharedCombat.ScoreBonusHighlight";
        static string GridCellViewPrefabId = "prefab.sharedCombat.GridCellView";
        static string MoveUiViewPrefabId = "prefab.sharedCombat.MoveUiView";
        static string CombatHudPrefabId = "prefab.ui_CombatHud";
        static string TappableSunPrefabId = "prefab.tappableSun";
        static string SmartMowerTripwire = "unit.Plant_SmartMowerTripwire";
        static string PuppetDebugUiPrefabId = "prefab.sharedCombat.PuppetDebugUi";
        static string DebugViewPrefabId = "prefab.sharedCombatDebug.CombatDebugView";
        static string DamageNumberPrefabId = "prefab.sharedCombatDebug.DamageNumber";
        static string StreamingSoundBank = "wwise.bnk_music_combat";
    }

    class CombatResourceListBuilder
    {
        static /*0x2190a6c*/ System.ValueTuple<System.Collections.Generic.HashSet<string>, System.Collections.Generic.HashSet<int>> DetermineResourcesToLoad(Yeti.CombatDefinitionData definitionData, Yeti.IAssetManager assetManager);
        static /*0x2190e54*/ void AddDynamicDropResources(Yeti.Data.DynamicDropsConfig dropsConfig, Yeti.IAssetManager assetManager, System.Collections.Generic.HashSet<string> resourcesToLoad);
        static /*0x21912a4*/ void AddCascadeTokenDropResources(Yeti.Data.CascadeTokenDropConfig cascadeTokenDropConfig, Yeti.IAssetManager assetManager, System.Collections.Generic.HashSet<string> resourcesToLoad);
        static /*0x21911b8*/ void AddResourceIfExists(string resourceName, Yeti.IAssetManager assetManager, System.Collections.Generic.HashSet<string> resourcesToLoad);
        static /*0x2190c50*/ void AddBoardAsset(Yeti.StartCombatConfig startCombatConfig, System.Collections.Generic.HashSet<string> resourcesToLoad);
        static /*0x2190cac*/ void AddCommonResources(System.Collections.Generic.HashSet<string> resourcesToLoad);
        static /*0x2191348*/ void AddCheatResources(System.Collections.Generic.HashSet<string> resourcesToLoad);
    }

    class CombatRuntimeContext
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Yeti.GameSoundManager _soundManager;
        /*0x20*/ Yeti.Network.INetworkConnectivityMonitor _networkConnectivity;
        /*0x28*/ Yeti.Network.NetworkConnectivityLostReporter _networkConnectivityLostReporter;
        /*0x30*/ Yeti.IDamageTypeDefinitionProvider _damageTypeDefinitionProvider;
        /*0x38*/ PvzN3xt.Tutorial.ITutorialMessageListener _tutorialMessageListener;
        /*0x40*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x48*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x50*/ Yeti.CombatGuiModel _combatModel;
        /*0x58*/ Yeti.CameraManager _cameraManager;
        /*0x60*/ PopCap.PerformanceMetricsWrapper _performanceMetrics;
        /*0x68*/ Yeti.IBattleDataController _battleDataController;
        /*0x70*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x78*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x80*/ PvzN3xt.Tutorial.TutorialGridCellSearcher _tutorialGridCellSearcher;
        /*0x88*/ Yeti.CombatAssetLoader CombatAssetLoader;
        /*0x90*/ Yeti.CombatDefinitionData DefinitionData;
        /*0x98*/ Yeti.ICombatObjectLifeCycleManager CombatObjectLifeCycleManager;
        /*0xa0*/ UnityEngine.GameObject SceneRoot;
        /*0xa8*/ Yeti.CombatCameraUtils <CombatCameraUtils>k__BackingField;
        /*0xb0*/ Yeti.GenericVisualConfig <PresentationConfig>k__BackingField;
        /*0xb8*/ Yeti.CombatSceneState <CombatSceneState>k__BackingField;
        /*0xc0*/ System.Action _onFinishedLoadingCallback;
        /*0xc8*/ System.Action<Yeti.YetiError> _onErrorCallback;
        /*0xd0*/ bool <IsLoaded>k__BackingField;

        static /*0x2191400*/ Yeti.CombatRuntimeContext Create(Yeti.StartCombatConfig startCombatConfig, UnityEngine.ResourceManagement.EA.IExternalAllocationReporter externalAllocationReporter, PvzN3xt.Data.ObjectPoolSizesDatabase objectPoolSizesDatabase, int systemMemorySizeMB, int highMemThresholdMB);
        static /*0x219178c*/ Yeti.CombatRuntimeContext CreateForPuppetEditor(Yeti.StartCombatConfig startCombatConfig);
        static /*0x2191514*/ UnityEngine.GameObject GenerateSceneRoot();
        /*0x21915e0*/ CombatRuntimeContext(Yeti.CombatRuntimeContextInitializeData data);
        /*0x2191870*/ Yeti.CombatCameraUtils get_CombatCameraUtils();
        /*0x2191878*/ void set_CombatCameraUtils(Yeti.CombatCameraUtils value);
        /*0x2191880*/ Yeti.GenericVisualConfig get_PresentationConfig();
        /*0x2191888*/ void set_PresentationConfig(Yeti.GenericVisualConfig value);
        /*0x2191890*/ Yeti.CombatSceneState get_CombatSceneState();
        /*0x2191898*/ void set_CombatSceneState(Yeti.CombatSceneState value);
        /*0x21918a0*/ bool get_IsLoaded();
        /*0x21918a8*/ void set_IsLoaded(bool value);
        /*0x21918b0*/ void LoadForNextStage(Yeti.StartCombatConfig initConfig);
        /*0x21919a0*/ void CleanUp();
        /*0x2191a6c*/ void CleanupSceneRoot();
        /*0x2191b44*/ void LoadCombatAssets(System.Action onFinishedLoading, System.Action<Yeti.YetiError> onError);
        /*0x2191c74*/ void UnloadCombatAssets();
        /*0x2191c8c*/ void OnCombatAssetLoadError(Yeti.YetiError error);
        /*0x2191cf8*/ void OnCombatAssetLoadComplete();
    }

    class CombatRuntimeContextInitializeData
    {
        /*0x10*/ Yeti.StartCombatConfig StartCombatConfig;
        /*0x18*/ Yeti.ICombatObjectLifeCycleManager LifeCycleManager;
        /*0x20*/ UnityEngine.GameObject SceneRoot;

        /*0x2191580*/ CombatRuntimeContextInitializeData(Yeti.StartCombatConfig startCombatConfig, Yeti.ICombatObjectLifeCycleManager lifeCycleManager, UnityEngine.GameObject sceneRoot);
    }

    class CombatSceneDataProvider : Yeti.UIDataProvider
    {
        static string SunCountKey = "SunCount";
        static string SunProgressKey = "SunGeneratorProgress";
        static string SunAnimationKey = "SunAnimation";
        static string SunCollectedKey = "SunCollected";
        static string SunRemovedKey = "SunRemoved";
        static string SunGenerationActiveKey = "SunGenerationActive";
        static string SunGenerationEndingKey = "SunGenerationEnding";
        static string HidePlantFoodUiKey = "HidePlantFoodUi";
        static string PlantFoodKey = "PlantFoodUses";
        static string PlantFoodProgressKey = "PlantFood";
        static string LoadoutKey = "Loadout";
        static string SeedPacketSelectedKey = "SeedPacketSelected";
        static string WaveNameKey = "WaveName";
        static string CurrentRoadTripKey = "CurrentRoadTrip";
        static string CurrentRoadTripLevelKey = "CurrentRoadTripLevel";
        static string CurrentRoadTripChapterKey = "CurrentRoadTripChapter";
        static string CurrentFixedLevelChainKey = "CurrentFixedLevelChain";
        static string BattleMetaModeTypeNameKey = "MetaMode";
        static string CurrentWaveKey = "CurrentWave";
        static string TotalWavesKey = "TotalWaves";
        static string PreviousTotalScoreKey = "PreviousTotalScore";
        static string TotalScoreKey = "TotalScore";
        static string MaxPossibleScoreKey = "MaxPossibleScore";
        static string TotalScoreOverMaxScoreKey = "TotalScoreOverMaxScore";
        static string ScoringEnabledKey = "ScoringEnabled";
        static string KillStreakCountKey = "KillStreakCount";
        static string KillStreakIsActiveKey = "KillStreakIsActive";
        static string KillStreakMultiplierBonusKey = "KillStreakMultiplierBonus";
        static string KillStreakCooldownKey = "KillStreakCooldown";
        static string CombatEventKey = "CombatEvent";
        static string CombatEventSwitchKey = "CombatEventSwitch";
        static string CombatEventIndicatorKeyPrefix = "EventIndicator_";
        static string AllCombatEventsIndicatorKey = "EventIndicator_All";
        static string HasWaterSurgeKey = "HasWaterSurge";
        static string WaveMessagesKey = "CombatWaveMessages";
        static string ShovelCooldownPercentKey = "ShovelCooldownPercent";
        static string ShovelCooldownDisabledKey = "ShovelCooldownDisabled";
        static string BlockVisualAliasKey = "BlockVisualAlias";
        static string ShouldShowHudKey = "ShouldShowHud";
        static string IsEstablishingShotsKey = "EstablishingShots";
        static string IsFirstEntryKey = "FirstEntry";
        static string CombatIntroSequenceKey = "CombatIntroSequence";
        static string WaveBreakActiveKey = "WaveBreakActive";
        static string GameIsRunningKey = "GameIsRunning";
        static string GameIsPausedKey = "GameIsPaused";
        static string HidePauseVisualsKey = "HidePauseVisuals";
        static string IsCelebrationMomentKey = "CelebrationMoment";
        static string StageNumberKey = "StageNumber";
        static string StageProgressKey = "StageProgress";
        static string StageProgressMarkersKey = "StageProgressMarkers";
        static string ShouldShowUnitDetailsInfoButtonKey = "ShouldShowUnitDetailsInfoButton";
        static string BossIsAliveKey = "BossIsAlive";
        static string BossNameKey = "BossName";
        static string BossHealthKey = "BossHealth";
        static string InstantUseLoadoutKey = "InstantUseLoadout";
        static string InstantDefensePlantUsesRemainingKey = "LawnMowerUsesRemaining";
        static string TooltipPlantKey = "TooltipPlant";
        static string HideQuitButtonsKey = "HideQuitButtons";
        static string StarThresholdsKey = "StarThresholds";
        static string PercentEarnedToNextThresholdKey = "PercentEarnedToNextThreshold";
        static string CurrentScoreTierKey = "CurrentScoreTier";
        static string CascadeMeterUnitIdKey = "CascadeMeterUnitId";
        static string CascadeMeterUnitPrefabKey = "CascadeMeterUnitPrefab";
        static string CascadeMeterUnitAnimationKey = "CascadeMeterUnitAnimation";
        static string CascadeMeterPercentKey = "CascadeMeterPercent";
        static string CascadeMeterLastPercentKey = "CascadeMeterLastPercent";
        static string CascadeMeterMaxPercentKey = "CascadeMeterMaxPercent";
        static string CanActivateCascadeUnitKey = "CanActivateCascadeUnit";
        static string CascadeMeterFullKey = "CascadeMeterFull";
        static string CascadeTiersKey = "CascadeTiers";
        static string CascadeTokenCollectedKey = "CascadeTokenCollected";
        static string MoneyTokenCollectedKey = "MoneyTokenCollected";
        static string UnitSpawnedKey = "UnitSpawned";
        static string UIEventKey = "UIEvent";
        static string IsVaseBreakerKey = "IsVaseBreaker";
        static string IsLeaderboardEventActiveKey = "IsLeaderboardEventActive";
        static string ShouldShowMergePreviewsModelKey = "ShowMergePreviews";
        static string ToggleMergePreviewsActionKey = "ToggleMergePreviews";
        static /*0x0*/ bool IsMergePreviewAvailable;
        /*0x50*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _sunCount;
        /*0x58*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _sunGeneratorProgress;
        /*0x60*/ Yeti.SunAnimationModel _sunAnimation;
        /*0x68*/ Yeti.DropRemovedDataModel _sunCollected;
        /*0x70*/ Yeti.DropRemovedDataModel _sunRemoved;
        /*0x78*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _sunGenerationActive;
        /*0x80*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _sunGenerationEnding;
        /*0x88*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _hidePlantFoodUi;
        /*0x90*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _plantFoodUses;
        /*0x98*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection _plantFood;
        /*0xa0*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection _loadoutModels;
        /*0xa8*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection _instantUseLoadoutModels;
        /*0xb0*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _instantDefensePlantUsesRemainingModel;
        /*0xb8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _previousTotalScore;
        /*0xc0*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _totalScore;
        /*0xc8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _maxPossibleScore;
        /*0xd0*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection _starThresholdModels;
        /*0xd8*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _percentEarnedToNextThreshold;
        /*0xe0*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _totalScoreOverMaxScore;
        /*0xe8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _currentScoreTier;
        /*0xf0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _scoringEnabled;
        /*0xf8*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _killStreakCount;
        /*0x100*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _killStreakIsActiveCount;
        /*0x108*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _killStreakMultiplierPercent;
        /*0x110*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _killStreakCooldown;
        /*0x118*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _waveNameModel;
        /*0x120*/ RedCrow.UI.UUIF.DataProviding.Models.EnumModel<Yeti.MetaMode> _battleMetaModeTypeModel;
        /*0x128*/ PvzN3xt.RoadTrip.RoadTripLevelModel _currentRoadTripLevelModel;
        /*0x130*/ PvzN3xt.RoadTrip.RoadTripChapterModel _currentRoadTripChapterModel;
        /*0x138*/ PvzN3xt.RoadTrip.RoadTripInfoModel _currentRoadTripModel;
        /*0x140*/ PvzN3xt.Track.FixedLevelChainModel _currentFixedLevelChainModel;
        /*0x148*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _shouldShowHud;
        /*0x150*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isEstablishingShots;
        /*0x158*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isFirstEntry;
        /*0x160*/ Yeti.CombatIntroSequenceDataModel _combatIntroSequenceDataModel;
        /*0x168*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isWaveBreakActive;
        /*0x170*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _waveNumber;
        /*0x178*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _totalWavesForStage;
        /*0x180*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isGameRunning;
        /*0x188*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isGamePaused;
        /*0x190*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _hidePauseVisuals;
        /*0x198*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isCelebrationMoment;
        /*0x1a0*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _stageNumber;
        /*0x1a8*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _stageProgress;
        /*0x1b0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _shouldShowUnitDetailsInfoButton;
        /*0x1b8*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isBossAlive;
        /*0x1c0*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _bossName;
        /*0x1c8*/ Yeti.BossHealthModel _bossHealth;
        /*0x1d0*/ Yeti.TooltipPlantModel _tooltipPlantModel;
        /*0x1d8*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _seedPacketSelectedModel;
        /*0x1e0*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _hideQuitButtonsModel;
        /*0x1e8*/ Yeti.CombatWaveMessageQueueModel _waveMessagesModel;
        /*0x1f0*/ Yeti.CombatEventModel _combatEventModel;
        /*0x1f8*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _combatEventSwitchModel;
        /*0x200*/ Yeti.CombatEventIndicatorModel _allCombatEventsIndicatorModel;
        /*0x208*/ System.Collections.Generic.Dictionary<string, Yeti.CombatEventIndicatorModel> _combatEventIndicatorModelsByUnit;
        /*0x210*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _shovelCooldownPercentModel;
        /*0x218*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _shovelCooldownDisabledModel;
        /*0x220*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _cascadeMeterUnitIdModel;
        /*0x228*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _cascadeMeterUnitPrefabModel;
        /*0x230*/ Yeti.CascadeUnitAnimationModel _cascadeMeterUnitAnimationModel;
        /*0x238*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _cascadeMeterPercentModel;
        /*0x240*/ RedCrow.UI.UUIF.DataProviding.Models.FloatModel _lastCascadeMeterPercentModel;
        /*0x248*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _canActivateCascadeUnitModel;
        /*0x250*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _cascadeMeterFullModel;
        /*0x258*/ RedCrow.UI.UUIF.DataProviding.Models.ListModelCollection _cascadeTiersModel;
        /*0x260*/ Yeti.DropRemovedDataModel _cascadeTokenCollectedModel;
        /*0x268*/ Yeti.DropRemovedDataModel _moneyTokenCollectedModel;
        /*0x270*/ RedCrow.UI.UUIF.DataProviding.Models.IntModel _unitSpawnedModel;
        /*0x278*/ Yeti.BoolFlagListModel _uiEventModel;
        /*0x280*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isVaseBreakerModel;
        /*0x288*/ System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, RedCrow.UI.UUIF.DataProviding.Models.BoolModel>> _isLevelTypeModels;
        /*0x290*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isLeaderboardEventActive;
        /*0x298*/ RedCrow.UI.UUIF.DataProviding.Models.BoolModel _isShowMergePreview;
        /*0x2a0*/ Yeti.PlantStaticDataProvider _plantStaticDataProvider;
        /*0x2a8*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x2b0*/ Yeti.CombatGuiModel _combatGuiModel;
        /*0x2b8*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x2c0*/ Yeti.GameSoundManager _soundManager;
        /*0x2c8*/ Yeti.MutableTimeProvider _timeProvider;
        /*0x2d0*/ Yeti.ICombatUnitDefinitionProvider _unitDefinitionProvider;
        /*0x2d8*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x2e0*/ Yeti.GameEventManager _gameEventManager;
        /*0x2e8*/ PvzN3xt.RoadTrip.RoadTripPopupManager _roadTripPopupManager;
        /*0x2f0*/ PvzN3xt.Track.TrackDomainController _trackController;
        /*0x2f8*/ RedCrow.UI.UUIF.DataProviding.Models.StringModel _blockVisualAlias;

        static /*0x219b8c8*/ CombatSceneDataProvider();
        /*0x219b7ec*/ CombatSceneDataProvider();
        /*0x2192340*/ Yeti.ICombatSceneGuiData get_CombatSceneGuiData();
        /*0x2192358*/ Yeti.CombatInputGuiData get_InputGuiData();
        /*0x2192370*/ Yeti.ISimGameData get_GameData();
        /*0x2192388*/ bool get_IsOrderedBattleMessagingActive();
        /*0x2192440*/ void Initialize();
        /*0x219319c*/ void OnDispose();
        /*0x21931b8*/ void UnregisterEventHandlers();
        /*0x2192fac*/ void InitializeModels();
        /*0x21973e0*/ void ToggleMergePreview(string actionname, object[] actionparams);
        /*0x2196944*/ void InitializeCascadeModels();
        /*0x2196200*/ void InitializeCombatEventModel();
        /*0x2195e4c*/ void InitializeBossModels();
        /*0x2193c8c*/ void InitializeSunModels();
        /*0x2194084*/ void InitializePlantFoodModels();
        /*0x2194a9c*/ void InitializeScoreModels();
        /*0x2194e08*/ void InitializeKillStreakModels();
        /*0x2195014*/ void InitializeGameStateModels();
        /*0x219749c*/ string GetIsLevelTypeModelName(string typeAlias);
        /*0x2196e30*/ void InitializeIsLevelTypeModels();
        /*0x2197508*/ void UpdateIsLevelTypeModels();
        /*0x2194330*/ void InitializeLoadoutModels();
        /*0x21946a8*/ void InitializeInstantUseLoadoutModels();
        /*0x21949e8*/ void InitializeInstantDefenseLoadoutModels();
        /*0x219606c*/ void InitializeTooltipPlantModels();
        /*0x219614c*/ void InitializeHideQuitButtonModel();
        /*0x2196754*/ void InitializeFinalWaveModels();
        /*0x2196808*/ void InitializeShovelModels();
        /*0x2197350*/ void UpdateAllModels();
        /*0x21994fc*/ void UpdateBattleMetaModels();
        /*0x2198940*/ void UpdateInstantUseLoadout();
        /*0x2198cac*/ void UpdateInstantUseLoadoutInputState();
        /*0x2198f50*/ void UpdateInstantDefenseLoadout();
        /*0x2198698*/ void UpdateBossValues();
        /*0x2198878*/ void UpdateBossMaxHealth();
        /*0x219858c*/ void UpdateKillStreakValues();
        /*0x2199880*/ void UpdateUnitPlantable();
        /*0x21983d4*/ void UpdateScoreValues();
        /*0x21998d0*/ void UpdateStarThresholds();
        /*0x2199b58*/ void UpdateScoreValuesWhileRunning();
        /*0x21978ac*/ void UpdateSunValues();
        /*0x2199e54*/ void UpdateSunGenerated();
        /*0x2199e70*/ void UpdateSunGenerationActive();
        /*0x2199ea8*/ void UpdateSunGenerationEnding();
        /*0x2199c48*/ void SetSunGuiValues(int value);
        /*0x2199d78*/ void UpdateSunProgress();
        /*0x2197980*/ void UpdatePlantFoodValues();
        /*0x2199ee4*/ void SetPlantFoodGuiValues(int uses, int plantFoodMeter);
        /*0x2197bcc*/ void UpdateLoadoutData();
        /*0x2197df4*/ void UpdateGameStateData();
        /*0x219a138*/ void OnUpdate(float deltaTime);
        /*0x219a810*/ void UpdateCombatEventIndicatorModel(System.Collections.Generic.IReadOnlyList<YetiSimCoreLib.External.TrickInfo> trickSpawns, Yeti.CombatEventIndicatorModel model);
        /*0x219aa5c*/ void OnLoadoutItemSelected(int loadoutIndex);
        /*0x219ad1c*/ void UpdateTooltipForPlantOnBoard(Yeti.CombatUnitSelectionData selection);
        /*0x219adc4*/ void UpdateTooltipForHoverOverPlantFood(Yeti.CombatUnitSelectionData selection);
        /*0x219ae00*/ void UpdateTooltipForTappedPlantFood(Yeti.CombatUnitSelectionData selection);
        /*0x219ae3c*/ void UpdateTooltipForHoverOverPromotion(Yeti.CombatUnitSelectionData selection);
        /*0x219ae78*/ void UpdateTooltipForTappedPromotion(Yeti.CombatUnitSelectionData selection);
        /*0x219aeb4*/ void UpdateSunRemovedValues();
        /*0x219af7c*/ void UpdateSunCollectedValues();
        /*0x2199028*/ void UpdateHideQuitButtonsModel();
        /*0x21990f0*/ void UpdateHidePauseVisualsModel();
        /*0x219b044*/ void UpdateCombatEventModel();
        /*0x219b120*/ void UpdateTurboActive(float speed, bool isActive);
        /*0x21991b8*/ void UpdateShovelValues();
        /*0x2199294*/ void UpdateCascadeValues();
        /*0x219b2cc*/ void OnFinalWaveSpawned();
        /*0x219b46c*/ string GetFinalWaveMessageKey(int stageNumber);
        /*0x219b5f4*/ void OnHugeWaveSpawned();
        /*0x219b72c*/ void HandleStageStarted();
        /*0x219b1a0*/ void HandleCascadeMeterChanged();
        /*0x219b744*/ void HandleCascadeTokenCollectedDataChanged();
        /*0x219b780*/ void HandleMoneyTokenCollectedDataChanged();
        /*0x219b7bc*/ void HandleUnitSpawned(int unitId);
        /*0x219b7d4*/ void HandleUIEventChanged(string eventKey);

        class <>c__DisplayClass206_0
        {
            /*0x10*/ System.Collections.Generic.List<float> starThresholds;
            /*0x18*/ Yeti.ScoreGuiData scoreData;
            /*0x20*/ Yeti.CombatSceneDataProvider <>4__this;
            /*0x28*/ int highestThresholdCrossed;

            /*0x2199b50*/ <>c__DisplayClass206_0();
            /*0x219b914*/ Yeti.StarThresholdModel <UpdateStarThresholds>g__CreateModel|0(int index);
            /*0x219b9a0*/ bool <UpdateStarThresholds>g__UpdateModel|1(int index, Yeti.StarThresholdModel starThresholdModel);
        }
    }

    class CombatSceneGuiDataFactory
    {
        static /*0x0*/ Yeti.Data.ScoreBonusType[] ScoreBonusBreakdownTypes;

        static /*0x219d178*/ CombatSceneGuiDataFactory();
        static /*0x219bb14*/ Yeti.CombatSceneGuiData Create(Yeti.GenericVisualConfig presentationConfig, Yeti.CombatDefinitionData combatDefinitionData);
        static /*0x219bf64*/ void SetupScoreBonusBreakdowns(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.GenericVisualConfig presentationConfig);
        static /*0x219c050*/ void SetZombiesToBeSpawnedInWaves(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.CombatDefinitionData combatDefinitionData);
        static /*0x219c668*/ void InitializeCascadeGuiData(Yeti.CascadeGuiData cascadeGuiData, Yeti.CombatDefinitionData combatDefinitionData);
        static /*0x219ca34*/ void Reload(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.CombatDefinitionData definitionData, Yeti.CombatScoreData scoreData);
        static /*0x219cb08*/ void ReloadSunData(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.Data.GameInitState saveState);
        static /*0x219cb40*/ void ReloadPlantFoodGuiData(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.Data.GameInitState saveState);
        static /*0x219cb74*/ void ReloadInstantUsePlantGuiData(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.Data.GameInitState saveState);
        static /*0x219cb9c*/ void ReloadCombatStateGuiData(Yeti.CombatSceneGuiData combatSceneGuiData);
        static /*0x219cbbc*/ void ReloadScoreGuiData(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.CombatScoreData combatScoreData);
        static /*0x219cbec*/ void ReloadBossGuiData(Yeti.CombatSceneGuiData combatSceneGuiData);
        static /*0x219cca8*/ void ReloadWaveGuiData(Yeti.CombatSceneGuiData combatSceneGuiData);
        static /*0x219ccc8*/ void ReloadCombatEventGuiData(Yeti.CombatSceneGuiData combatSceneGuiData);
        static /*0x219cd40*/ void ReloadShovelGuiData(Yeti.CombatSceneGuiData combatSceneGuiData, Yeti.Data.GameInitState saveState);
    }

    class CombatScenePuppets
    {
        /*0x10*/ UnityEngine.GameObject <SmartMowerTripWire>k__BackingField;
        /*0x18*/ Yeti.UnitPuppetAvatarView <PlayerAvatar>k__BackingField;
        /*0x20*/ System.Collections.Generic.Dictionary<YetiSimCoreLib.Game.InstanceId, Yeti.IPuppet> _viewMap;
        /*0x28*/ System.Collections.Generic.Dictionary<YetiSimCoreLib.Game.InstanceId, Yeti.UnitPuppet> _unitMap;
        /*0x30*/ System.Collections.Generic.List<Yeti.ProjectilePuppet> _projectiles;
        /*0x38*/ System.Collections.Generic.Dictionary<Yeti.IPuppet, YetiSimCoreLib.Game.InstanceId> _viewToId;
        /*0x40*/ System.Collections.Generic.HashSet<YetiSimCoreLib.Game.InstanceId> _movedPuppetIds;
        /*0x48*/ System.Collections.Generic.HashSet<YetiSimCoreLib.Game.InstanceId> _inclineExemptPuppetIds;
        /*0x50*/ System.Collections.Generic.List<Yeti.UnitPuppet> _allUnits;
        /*0x58*/ System.Collections.Generic.List<Yeti.SunPuppet> _sunObjects;
        /*0x60*/ System.Collections.Generic.List<Yeti.OnBoardBoostPuppet> _instantUsePlantBoosts;
        /*0x68*/ System.Collections.Generic.List<Yeti.OnBoardDropPuppet> _plantFoodBoosts;
        /*0x70*/ System.Collections.Generic.List<Yeti.OnBoardDropPuppet> _dynamicDrops;
        /*0x78*/ Yeti.GridCellOccupancyCollection _occupiedCells;
        /*0x80*/ Yeti.PlantPlacementArea _plantArea;
        /*0x88*/ Yeti.CombatDefinitionData _definitionData;
        /*0x90*/ Yeti.CombatCameraUtils _cameraUtils;
        /*0x98*/ YetiSimCoreLib.Game.BoardInclineMap _inclineMap;
        /*0xa0*/ float _globalPuppetSpeed;
        /*0xa4*/ bool _isUnitAudioStopped;

        /*0x219d214*/ CombatScenePuppets(Yeti.CombatDefinitionData data, Yeti.GenericVisualConfig presentationConfig, Yeti.CombatCameraUtils cameraUtils, YetiSimCoreLib.Game.BoardInclineMap inclineMap);
        /*0x219d1ec*/ Yeti.GridCellOccupancyCollection get_OccupiedCells();
        /*0x219d1f4*/ UnityEngine.GameObject get_SmartMowerTripWire();
        /*0x219d1fc*/ void set_SmartMowerTripWire(UnityEngine.GameObject value);
        /*0x219d204*/ Yeti.UnitPuppetAvatarView get_PlayerAvatar();
        /*0x219d20c*/ void set_PlayerAvatar(Yeti.UnitPuppetAvatarView value);
        /*0x219d698*/ void CopyOccupancyExcluding(Yeti.GridCellOccupancyCollection collection, Yeti.UnitPuppet puppet);
        /*0x219d6b0*/ void AddUnit(YetiSimCoreLib.Game.UnitState unitState, Yeti.UnitPuppet view);
        /*0x219d760*/ void AddPuppet(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.IPuppet view);
        /*0x219d904*/ void AddProjectile(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.ProjectilePuppet view);
        /*0x219d978*/ void AddSun(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.SunPuppet view);
        /*0x219d9ec*/ void AddOnBoardInstantUsePlantBoost(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.OnBoardBoostPuppet view);
        /*0x219da60*/ void AddOnBoardPlantFoodBoost(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.OnBoardDropPuppet view);
        /*0x219dad4*/ void AddDynamicDrop(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.OnBoardDropPuppet view);
        /*0x219db48*/ Yeti.IPuppet GetPuppet(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219dbb8*/ bool HasPuppet(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219dc24*/ Yeti.UnitPuppet GetUnit(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219dc94*/ bool HasUnit(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219dd00*/ System.Collections.Generic.IReadOnlyList<Yeti.UnitPuppet> GetAllUnits();
        /*0x219dd08*/ System.Collections.Generic.IReadOnlyCollection<Yeti.ProjectilePuppet> GetAllProjectiles();
        /*0x219dd10*/ System.Collections.Generic.List<Yeti.SunPuppet> GetAllSun();
        /*0x219dd18*/ System.Collections.Generic.List<Yeti.OnBoardDropPuppet> GetAllDynamicDrops();
        /*0x219dd20*/ void RemoveView(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219e0a8*/ void CheatRemovePuppetOccupancy(Yeti.UnitPuppet unitPuppet);
        /*0x219e03c*/ bool IsUnit(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219e0c0*/ YetiSimCoreLib.Game.InstanceId GetInstanceId(Yeti.IPuppet view);
        /*0x219e164*/ void ChangeCellOccupancy(Yeti.UnitPuppet puppet, YetiSimCoreLib.Game.GridCell gridCell, bool unitAdded, bool isOccupied);
        /*0x219e190*/ void SetAreaRestricted(YetiSimCoreLib.Game.UnitGridCellArea area);
        /*0x219e1cc*/ Yeti.UnitPuppet GetTargetPriorityOccupantPlantOnCell(UnityEngine.Vector3 worldPosition);
        /*0x219e254*/ Yeti.UnitPuppet GetTargetPriorityOccupantPlantOnCell(YetiSimCoreLib.Game.GridCell gridCell);
        /*0x219e290*/ Yeti.UnitPuppet GetHighestInteractionPriorityPlantOnCell(UnityEngine.Vector3 worldPosition, bool includePlantObstacles);
        /*0x219e328*/ Yeti.UnitPuppet GetHighestInteractionPriorityPlantOnCell(YetiSimCoreLib.Game.GridCell gridCell, bool includePlantObstacles);
        /*0x219e78c*/ System.Collections.Generic.List<Yeti.UnitPuppet> GetAllPlantsOnCell(YetiSimCoreLib.Game.GridCell gridCell);
        /*0x219eb58*/ void Pause();
        /*0x219ee38*/ void Resume();
        /*0x219f118*/ void SetGlobalSpeed(float speed);
        /*0x219f414*/ void UpdateFromGameTimer(float deltaTime);
        /*0x219f70c*/ void StopAllUnitAudio();
        /*0x219f96c*/ void MarkAsInclineExempt(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219f9d4*/ void RemoveFromInclineExempt(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219fa3c*/ void MarkAsMoved(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219faa4*/ void StopMovement(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x219fb0c*/ void UpdateMovedUnits(YetiSimCoreLib.Core.IPositionProvider positionProvider);
        /*0x21a00c8*/ void ClearMovedUnits();
        /*0x219fdb4*/ void MovePuppet(Yeti.IPuppet puppet, YetiSimCoreLib.Game.InstanceId puppetId, YetiSimCoreLib.Core.IPositionProvider positionProvider);
        /*0x219ff3c*/ void SetPuppetIncline(Yeti.UnitPuppet puppet, YetiSimCoreLib.Game.InstanceId puppetId, YetiSimCoreLib.Core.IPositionProvider positionProvider);
        /*0x21a0118*/ Yeti.UnitPuppet FindClosestUnit(UnityEngine.Vector3 worldPosition, float threshold, System.Collections.Generic.HashSet<string> excludedPrefabIds);
        /*0x21a01ac*/ Yeti.SunPuppet FindClosestSun(UnityEngine.Vector3 worldPosition, float threshold);
        /*0x21a023c*/ void AddSunPuppetsInRange(UnityEngine.Vector3 worldPosition, System.Collections.Generic.List<Yeti.SunPuppet> list);
        /*0x21a0440*/ void AddDropPuppetsInRange(UnityEngine.Vector3 worldPosition, System.Collections.Generic.List<Yeti.OnBoardDropPuppet> list);
        /*0x21a0350*/ bool IsWithinInteractionThreshold(Yeti.OnBoardDropPuppetAvatarView dropPuppetAvatar, UnityEngine.Vector3 worldPosition);
        /*0x21a0554*/ Yeti.OnBoardBoostPuppet FindClosestInstantUsePlantBoost(UnityEngine.Vector3 worldPosition, float threshold);
        /*0x21a05e4*/ Yeti.OnBoardDropPuppet FindClosestPlantFoodBoost(UnityEngine.Vector3 worldPosition, float threshold);
        /*0x21a0674*/ Yeti.UnitPuppet FindClosestVase(UnityEngine.Vector3 worldPosition, float threshold);
        /*0x1ffc854*/ T FindClosestPuppet<T>(System.Collections.Generic.List<T> puppets, UnityEngine.Vector3 worldPosition, float threshold);
        /*0x1ffc854*/ T FindClosestPuppetEnumerable<T>(System.Collections.Generic.IEnumerable<T> puppets, UnityEngine.Vector3 worldPosition, float threshold, System.Collections.Generic.HashSet<string> excludedPrefabIds);
        /*0x1ffc854*/ float CalculateDistanceToPuppet<T>(UnityEngine.Vector3 worldPosition, T puppet);
        /*0x21a0894*/ bool CanPlaceCellOccupier(Yeti.GridArea area);
        /*0x218cb40*/ bool CanPlaceUnitAtPosition(Yeti.Data.UnitDefinition unitDef, UnityEngine.Vector3 worldPosition, ref YetiSimCoreLib.Game.GridCell placementCell);
        /*0x21a08ac*/ bool CanPlaceUnitIdAtPosition(YetiSimCoreLib.Game.UnitId unitId, UnityEngine.Vector3 worldPosition, ref YetiSimCoreLib.Game.GridCell placementCell);
        /*0x21a095c*/ YetiSimCoreLib.Game.InstanceId[] CreateAllActivePuppetIdsList();
        /*0x21a09c8*/ void ResetGridCellOccupancy();
    }

    class CombatSceneStateContext
    {
        /*0x10*/ Yeti.CombatDefinitionData DefinitionData;
        /*0x18*/ Yeti.GenericVisualConfig PresentationConfig;
        /*0x20*/ Yeti.CombatSceneGuiData GuiData;
        /*0x28*/ Yeti.CombatScenePuppets Puppets;
        /*0x30*/ Yeti.PuppetSlotController PuppetSlotController;
        /*0x38*/ Yeti.ICombatObjectLifeCycleManager ObjectManager;
        /*0x40*/ Yeti.PuppetFactory PuppetFactory;
        /*0x48*/ Yeti.BoardView BoardView;
        /*0x50*/ Yeti.TargetPatternViewer TargetPatternViewer;
        /*0x58*/ Yeti.CombatSceneVisualEffects VFXSystem;
        /*0x60*/ Yeti.CombatSceneTextEffects TextEffectSystem;
        /*0x68*/ Yeti.CombatScoreData CombatScoreData;
        /*0x70*/ Yeti.GameSoundManager SoundManager;
        /*0x78*/ Yeti.CombatImpactSoundManager ImpactSoundManager;
        /*0x80*/ Yeti.PuppetAudioManager PuppetAudioManager;
        /*0x88*/ Yeti.CombatUnitAudioTracker CombatUnitAudioTracker;
        /*0x90*/ Yeti.PuppetLifecycleController PuppetLifecycleController;
        /*0x98*/ Yeti.EstablishingShotsController EstablishingShotsController;
        /*0xa0*/ Yeti.CombatCameraUtils CameraUtils;
        /*0xa8*/ Yeti.CombatFpsRecorder CombatFpsRecorder;
        /*0xb0*/ Yeti.CombatMusicController MusicController;
        /*0xb8*/ Yeti.ZombieSpawnDamageTypePreviewController ZombieSpawnDamageTypePreviewController;
        /*0xc0*/ Yeti.VisualOnlyPuppets VisualOnlyPuppets;
        /*0xc8*/ Yeti.DamageTypePreviewController DamageTypePreviewer;
        /*0xd0*/ YetiSimCoreLib.Game.BoardInclineMap InclineMap;
        /*0xd8*/ Yeti.CombatScoringYardSigns ScoringYardSigns;
        /*0xe0*/ bool IsMergeDisabled;
        /*0xe8*/ Yeti.PuppetDebugUiController PuppetDebugUiController;
        /*0xf0*/ Yeti.DamageNumberController DamageNumberController;
        /*0xf8*/ Yeti.Combat.TerrainMap TerrainMap;
        /*0x100*/ YetiSimAi.Runner.AiUpdateHook AiUpdateHook;
        /*0x108*/ Yeti.AiTutorialCoordinator AiTutorialCoordinator;
        /*0x110*/ Yeti.IDamageTypeDefinitionProvider DamageTypeDefinitionProvider;
        /*0x118*/ Yeti.PusherPusheeSyncer PusherPusheeSyncer;

        /*0x21a09f8*/ CombatSceneStateContext(Yeti.ICombatObjectLifeCycleManager objectManager, Yeti.CombatDefinitionData combatDefinitionData, Yeti.GenericVisualConfig presentationConfig, Yeti.GameSoundManager soundManager, Yeti.ZombiePreview zombiePreview, CapitalGames.CoroutineCreator coroutineCreator, PvzN3xt.Nvs.INamedValueService namedValueService, Yeti.CombatCameraUtils cameraUtils, PopCap.PerformanceMetricsWrapper performanceMetrics, Yeti.CombatMusicController musicController, Yeti.IDamageTypeDefinitionProvider damageTypeDefinitionProvider, Yeti.CombatGuiModel combatModel, Yeti.CoreSimWrapper coreSimWrapper, PvzN3xt.GameData.IGameDataModel gameDataModel);
        /*0x21a09e0*/ Yeti.CombatSoundIds get_SoundIds();
        /*0x21a1640*/ void CheatChangeBoardElevation(Google.Protobuf.Collections.MapField<int, Yeti.Data.BoardIncline> inclines);
        /*0x21a16fc*/ void UpdateVisualSystems(float deltaTime);
        /*0x2191938*/ void Reload();
        /*0x21a1a34*/ void PauseVisualSystems();
        /*0x21a1e34*/ void ResumeVisualSystems();
    }

    class CombatSceneState : RSG.AbstractState
    {
        /*0x70*/ float <Speed>k__BackingField;
        /*0x78*/ Yeti.CombatSceneStateContext _context;
        /*0x80*/ Yeti.CombatGuiModel _combatModel;
        /*0x88*/ Yeti.CoreSimWrapper _coreSim;
        /*0x90*/ Yeti.MessageProcessorBinder _messageProcessorBinder;
        /*0x98*/ Yeti.UnlimitedResourcesModeActivator _unlimitedResourcesModeActivator;
        /*0xa0*/ Yeti.TurboController _turboController;
        /*0xa8*/ Yeti.ICheatCoreSimWrapper _cheatCoreSim;
        /*0xb0*/ PvzN3xt.Tutorial.ITutorialMessageListener _tutorialMessageListener;
        /*0xb8*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0xc0*/ PvzN3xt.Tutorial.TutorialGridCellSearcher _tutorialGridCellSearcher;
        /*0xc8*/ Yeti.ZombiePreview _zombiePreview;
        /*0xd0*/ Yeti.IGameOverState _gameOverState;
        /*0xd8*/ Yeti.PreGameState _preGameState;
        /*0xe0*/ System.Action OnPreGameStateCompleted;

        /*0x2192090*/ CombatSceneState(Yeti.ICombatObjectLifeCycleManager objectManager, Yeti.CombatDefinitionData combatDefinitionData, Yeti.GenericVisualConfig presentationConfig, Yeti.GameSoundManager soundManager, Yeti.Network.INetworkConnectivityMonitor networkConnectivity, Yeti.Network.NetworkConnectivityLostReporter networkConnectivityLostReporter, PvzN3xt.Tutorial.ITutorialMessageListener tutorialMessageListener, CapitalGames.CoroutineCreator coroutineCreator, PvzN3xt.Nvs.INamedValueService namedValueService, Yeti.CombatCameraUtils cameraUtils, Yeti.CombatGuiModel combatModel, PopCap.PerformanceMetricsWrapper performanceMetrics, Yeti.CombatMusicController musicController, Yeti.IDamageTypeDefinitionProvider damageTypeDefinitionProvider, PvzN3xt.UI.InputBlockerController inputBlockerController, PvzN3xt.GameData.IGameDataModel gameDataModel, PvzN3xt.Tutorial.TutorialGridCellSearcher tutorialGridCellSearcher);
        /*0x21a2234*/ string get_Name();
        /*0x218c1f0*/ Yeti.CombatDefinitionData get_GameData();
        /*0x21a2274*/ Yeti.GenericVisualConfig get_PresentationConfig();
        /*0x21a228c*/ Yeti.CombatSceneGuiData get_GuiData();
        /*0x218ca14*/ Yeti.CombatScenePuppets get_Puppets();
        /*0x21a22a4*/ Yeti.PuppetFactory get_PuppetFactory();
        /*0x21a22bc*/ Yeti.BoardView get_BoardView();
        /*0x21a22d4*/ Yeti.TargetPatternViewer get_TargetPatternViewer();
        /*0x21a22ec*/ YetiSimCoreLib.Messaging.IMessageListener get_CoreSimMessageListener();
        /*0x21a2304*/ Yeti.GameSoundManager get_SoundManager();
        /*0x21a231c*/ Yeti.CombatSoundIds get_SoundIds();
        /*0x21a2340*/ Yeti.CombatSceneVisualEffects get_VfxSystem();
        /*0x21a2358*/ Yeti.PuppetAudioManager get_PuppetAudioManager();
        /*0x21a2370*/ Yeti.TurboController get_TurboController();
        /*0x21a2378*/ Yeti.CombatSceneStateContext get_Context();
        /*0x21a2380*/ Yeti.DamageTypePreviewController get_DamageTypePreviewer();
        /*0x21a2398*/ Yeti.ICheatCoreSimWrapper get_CheatCoreSim();
        /*0x21a23a0*/ Yeti.PuppetDebugUiController get_PuppetDebugUiController();
        /*0x21a23b8*/ Yeti.DamageNumberController get_DamageNumberController();
        /*0x21a23d0*/ bool get_IsUnlimitedResourcesModeActive();
        /*0x21a23e8*/ float get_Speed();
        /*0x21a23f0*/ void set_Speed(float value);
        /*0x21a23f8*/ void add_OnPreGameStateCompleted(System.Action value);
        /*0x21a2494*/ void remove_OnPreGameStateCompleted(System.Action value);
        /*0x21a2530*/ void SetupStates(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim, Yeti.Network.INetworkConnectivityMonitor networkConnectivity, Yeti.Network.NetworkConnectivityLostReporter networkConnectivityLostReporter, PvzN3xt.GameData.IGameDataModel gameDataModel);
        /*0x21a2910*/ void OnEnter();
        /*0x21a33d0*/ void StartNextStage();
        /*0x21a3438*/ void OnUpdate(float deltaTime);
        /*0x21a3460*/ void OnExit();
        /*0x21a3da8*/ void CollectSun(YetiSimCoreLib.Game.InstanceId sunInstanceId);
        /*0x21a3dc4*/ void CollectDrop(YetiSimCoreLib.Game.InstanceId dropInstanceId);
        /*0x21a3de0*/ void PlaceLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21a3df8*/ void MergeLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x218cc70*/ void PlacePlant(YetiSimCoreLib.Game.UnitId unitId, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21a3e10*/ void PromotePlant(Yeti.UnitPuppet view);
        /*0x21a3e4c*/ void ReclaimPlant(Yeti.UnitPuppet view);
        /*0x21a3e88*/ void MovePlant(Yeti.UnitPuppet view, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21a3ed4*/ void SwapPlants(Yeti.UnitPuppet unitA, Yeti.UnitPuppet unitB);
        /*0x21a3f3c*/ void MergePlants(Yeti.UnitPuppet unitA, Yeti.UnitPuppet unitB, YetiSimCoreLib.Game.GridCell cell);
        /*0x21a3fb4*/ void UsePlantFood(Yeti.UnitPuppet view);
        /*0x21a3ff0*/ void ActivateOnBoardPlantFoodBoost(int boostInstanceId, Yeti.UnitPuppet tappedPlant);
        /*0x21a4098*/ void UsePlantFoodOnSunMeter();
        /*0x21a40b0*/ void UsePlantFoodOnSeedPacket(int unitId);
        /*0x21a40c8*/ void UsePromotionUseOnSunMeter();
        /*0x21a40e0*/ void UsePromotionUseOnSeedPacket(int unitId);
        /*0x21a40f8*/ void PlaceInstantUsePlant(int unitId, YetiSimCoreLib.Game.GridCell placementCell);
        /*0x21a4110*/ void ActivateOnBoardInstantUsePlantBoost(YetiSimCoreLib.Game.InstanceId instanceId, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21a412c*/ void RemovePreviewZombies();
        /*0x21a4144*/ void AddPlantFood(int amount);
        /*0x21a415c*/ void TransitionToGameOverState(Yeti.EndCombatCause cause);
        /*0x21a4214*/ void AbandonGame();
        /*0x21a422c*/ void ActivateLossAversion();
        /*0x21a4248*/ void CancelLossAversion();
        /*0x218bb30*/ void EnterUnlimitedResourcesMode();
        /*0x21a4264*/ void CheatToggleWaveBreakUi();
        /*0x21a427c*/ Yeti.Data.Messaging.Events.YetiSimErrorCode ValidateInstantUsePlantPlacement(int row, int column, int unitId);
        /*0x21a4294*/ YetiSimCoreLib.Core.SpawnUnitValidationResults ValidatePlaceLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell cell);
        /*0x21a42ac*/ YetiSimCoreLib.Core.SpawnUnitValidationResults ValidateMergeLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell cell);
        /*0x21a42c4*/ YetiSimCoreLib.Core.SpawnUnitValidationResults ValidateMergeUnits(Yeti.UnitPuppet unitPuppetA, Yeti.UnitPuppet unitPuppetB, YetiSimCoreLib.Game.GridCell cell);
        /*0x21a42f0*/ Yeti.Data.Messaging.Events.YetiSimErrorCode ValidateReclaimPlant(Yeti.UnitPuppet unitPuppet);
        /*0x21a432c*/ void CheatSpeedUp();
        /*0x21a4338*/ void CheatSpeedDown();
        /*0x21a4344*/ void FtuePause();
        /*0x21a4350*/ void LossAversionPause();
        /*0x21a435c*/ void FtueSilentlyAbandon();
        /*0x21a4368*/ void Resume();
        /*0x21a4374*/ void OnPreGameStateComplete();
        /*0x21a4390*/ void SpeedUp(System.EventArgs empty);
        /*0x21a4414*/ void SpeedDown(System.EventArgs empty);
        /*0x21a442c*/ void TurboOn(System.EventArgs empty);
        /*0x21a4460*/ void TurboOff(System.EventArgs empty);
        /*0x21a43a4*/ void UpdateSpeed(bool turboIsActive);
        /*0x21a4870*/ void HandleTutorialFillCascadeMeter();
        /*0x21a488c*/ void SetCascadeMeterFill(float percentage);
        /*0x21a48a4*/ void ActivateCascadeUnit();
        /*0x21a48bc*/ void PauseEntryInterstitial();
        /*0x21a48d4*/ void PlayEntryInterstitial();
        /*0x21a48e0*/ YetiSimCoreLib.Core.IYetiSimContext GetCoreSimContextForAutomation();
        /*0x21a48f8*/ void SetBoostUsesRemaining(int boostId, int quantity);
        /*0x21a4980*/ void DestroyUnit(int unitInstanceId);
        /*0x21a4998*/ void PauseWaves();
        /*0x21a49b0*/ void ResumeWaves();
        /*0x21a49c8*/ void PauseSunGeneration();
        /*0x21a49e0*/ void ResumeSunGeneration();
        /*0x21a49f8*/ void DisablePlantMerge();
        /*0x21a4a14*/ void EnablePlantMerge();
        /*0x21a4a2c*/ void ActivateUnitAbility(int unitInstanceId);
        /*0x21a4a44*/ void RemoveGrowthTimer(Yeti.UnitPuppet tappedPlant);
    }

    enum CombatSceneStateTransitions
    {
        StartGame = 0,
        PauseGame = 1,
        PauseForFtue = 2,
        PauseCombat = 3,
        ResumeGame = 4,
        ResumeCombat = 5,
        GameOver = 6,
        GameWon = 7,
        GameLost = 8,
        EnterWaveBreak = 9,
        EstablishingShots = 10,
        GameAbandoned = 11,
        NextStage = 12,
        FtueSilentlyAbandon = 13,
        PausedForLossAversion = 14,
        PlayEntryInterstitial = 15,
    }

    enum CombatSceneStateEvents
    {
        SpeedUp = 0,
        SpeedDown = 1,
        TurboOn = 2,
        TurboOff = 3,
    }

    class CombatSceneTextEffects
    {
        /*0x10*/ System.Action OnScorePopsComplete;
        /*0x18*/ Yeti.ICombatObjectLifeCycleManager _objectSpawner;
        /*0x20*/ Yeti.ScorePopEffects _scorePopEffects;
        /*0x28*/ System.Collections.Generic.List<Yeti.TextEffectController> _selfDestroyingEffects;
        /*0x30*/ UnityEngine.GameObject _textEffectUiContainer;
        /*0x38*/ float _globalTextEffectSpeed;

        /*0x21a14f8*/ CombatSceneTextEffects(Yeti.CombatSceneStateContext context);
        /*0x21a4a68*/ void add_OnScorePopsComplete(System.Action value);
        /*0x21a4b04*/ void remove_OnScorePopsComplete(System.Action value);
        /*0x21a4ba0*/ void HandleAllEffectsComplete();
        /*0x21a4bbc*/ void SpawnScorePop(int value, UnityEngine.Vector3 spawnPosition, int column);
        /*0x21a4bd4*/ void SpawnScoreBonus(Yeti.Data.ScoreBonusType type, int value, YetiSimCoreLib.Game.GridCell cell);
        /*0x21a4bec*/ void SpawnTextEffect(string prefabId, int value, UnityEngine.Vector3 spawnPosition);
        /*0x21a4d7c*/ void SpawnTextEffect(string prefabId, string value, UnityEngine.Vector3 spawnPosition);
        /*0x21a4cdc*/ void SetupTextEffect(Yeti.TextEffectController textEffect, UnityEngine.Vector3 spawnPosition);
        /*0x21a4c58*/ Yeti.TextEffectController SpawnTextEffectInContainer(string prefabId);
        /*0x21a4de8*/ UnityEngine.GameObject SpawnGameObject(string prefabId);
        /*0x21a18a4*/ void UpdateFromGameTimer(float deltaTime);
        /*0x21a1c90*/ void Pause();
        /*0x21a2090*/ void Resume();
        /*0x21a46b4*/ void SetGlobalSpeed(float speed);
        /*0x21a4f80*/ bool HasActiveScorePops();
        /*0x21a4ee4*/ void SetupUiContainer(Yeti.ICombatObjectLifeCycleManager objectSpawner);
    }

    interface ICombatSceneGuiData
    {
        /*0x1f30214*/ Yeti.SunGuiData get_SunGuiData();
        /*0x1f30214*/ Yeti.PlantFoodGuiData get_PlantFoodGuiData();
        /*0x1f30214*/ Yeti.LoadoutGuiData get_LoadoutGuiData();
        /*0x1f30214*/ Yeti.InstantUseLoadoutGuiData get_InstantUseGuiData();
        /*0x1f30214*/ Yeti.InstantDefenseLoadoutGuiData get_InstantDefensePlantGuiData();
        /*0x1f30214*/ Yeti.CombatStateGuiData get_CombatStateGuiData();
        /*0x1f30214*/ Yeti.ScoreGuiData get_ScoreGuiData();
        /*0x1f30214*/ Yeti.KillStreakGuiData get_KillStreakGuiData();
        /*0x1f30214*/ Yeti.BossGuiData get_BossGuiData();
        /*0x1f30214*/ Yeti.WaveGuiData get_WaveGuiData();
        /*0x1f30214*/ Yeti.CombatEventGuiData get_CombatEventGuiData();
        /*0x1f30214*/ Yeti.BattleMessageGuiData get_BattleMessageGuiData();
        /*0x1f30214*/ Yeti.ShovelGuiData get_ShovelGuiData();
        /*0x1f30214*/ Yeti.DropsGuiData get_DropsGuiData();
        /*0x1f30214*/ Yeti.CascadeGuiData get_CascadeGuiData();
    }

    class CombatSceneGuiData : Yeti.ICombatSceneGuiData
    {
        /*0x10*/ Yeti.SunGuiData <SunGuiData>k__BackingField;
        /*0x18*/ Yeti.PlantFoodGuiData <PlantFoodGuiData>k__BackingField;
        /*0x20*/ Yeti.LoadoutGuiData <LoadoutGuiData>k__BackingField;
        /*0x28*/ Yeti.InstantUseLoadoutGuiData <InstantUseGuiData>k__BackingField;
        /*0x30*/ Yeti.InstantDefenseLoadoutGuiData <InstantDefensePlantGuiData>k__BackingField;
        /*0x38*/ Yeti.CombatStateGuiData <CombatStateGuiData>k__BackingField;
        /*0x40*/ Yeti.ScoreGuiData <ScoreGuiData>k__BackingField;
        /*0x48*/ Yeti.KillStreakGuiData <KillStreakGuiData>k__BackingField;
        /*0x50*/ Yeti.BossGuiData <BossGuiData>k__BackingField;
        /*0x58*/ Yeti.WaveGuiData <WaveGuiData>k__BackingField;
        /*0x60*/ Yeti.CombatEventGuiData <CombatEventGuiData>k__BackingField;
        /*0x68*/ Yeti.BattleMessageGuiData <BattleMessageGuiData>k__BackingField;
        /*0x70*/ Yeti.ShovelGuiData <ShovelGuiData>k__BackingField;
        /*0x78*/ Yeti.DropsGuiData <DropsGuiData>k__BackingField;
        /*0x80*/ Yeti.CascadeGuiData <CascadeGuiData>k__BackingField;

        /*0x219bbc4*/ CombatSceneGuiData();
        /*0x21a4f98*/ Yeti.SunGuiData get_SunGuiData();
        /*0x21a4fa0*/ Yeti.PlantFoodGuiData get_PlantFoodGuiData();
        /*0x21a4fa8*/ Yeti.LoadoutGuiData get_LoadoutGuiData();
        /*0x21a4fb0*/ Yeti.InstantUseLoadoutGuiData get_InstantUseGuiData();
        /*0x21a4fb8*/ Yeti.InstantDefenseLoadoutGuiData get_InstantDefensePlantGuiData();
        /*0x21a4fc0*/ Yeti.CombatStateGuiData get_CombatStateGuiData();
        /*0x21a4fc8*/ Yeti.ScoreGuiData get_ScoreGuiData();
        /*0x21a4fd0*/ Yeti.KillStreakGuiData get_KillStreakGuiData();
        /*0x21a4fd8*/ Yeti.BossGuiData get_BossGuiData();
        /*0x21a4fe0*/ Yeti.WaveGuiData get_WaveGuiData();
        /*0x21a4fe8*/ Yeti.CombatEventGuiData get_CombatEventGuiData();
        /*0x21a4ff0*/ Yeti.BattleMessageGuiData get_BattleMessageGuiData();
        /*0x21a4ff8*/ Yeti.ShovelGuiData get_ShovelGuiData();
        /*0x21a5000*/ Yeti.DropsGuiData get_DropsGuiData();
        /*0x21a5008*/ Yeti.CascadeGuiData get_CascadeGuiData();
    }

    class CombatEventGuiData
    {
        /*0x10*/ string <HeaderTextLocKey>k__BackingField;
        /*0x18*/ string <EventTextLocKey>k__BackingField;
        /*0x20*/ string <SwitchAlias>k__BackingField;

        /*0x21a51c8*/ CombatEventGuiData();
        /*0x21a51f0*/ string get_HeaderTextLocKey();
        /*0x21a51f8*/ void set_HeaderTextLocKey(string value);
        /*0x21a5200*/ string get_EventTextLocKey();
        /*0x21a5208*/ void set_EventTextLocKey(string value);
        /*0x21a5210*/ string get_SwitchAlias();
        /*0x21a5218*/ void set_SwitchAlias(string value);
    }

    class SunGuiData
    {
        /*0x10*/ int <CurrentTick>k__BackingField;
        /*0x14*/ int <SunCount>k__BackingField;
        /*0x18*/ int <SunGeneratorLastTick>k__BackingField;
        /*0x1c*/ int <SunGeneratorNextTick>k__BackingField;
        /*0x20*/ bool <IsSunUnlimited>k__BackingField;
        /*0x24*/ UnityEngine.Vector3 <SunRemovedTargetLocation>k__BackingField;
        /*0x30*/ uint <SunSpent>k__BackingField;

        /*0x21a5010*/ SunGuiData();
        /*0x21a5220*/ int get_CurrentTick();
        /*0x21a5228*/ void set_CurrentTick(int value);
        /*0x21a5230*/ int get_SunCount();
        /*0x21a5238*/ void set_SunCount(int value);
        /*0x21a5240*/ int get_SunGeneratorLastTick();
        /*0x21a5248*/ void set_SunGeneratorLastTick(int value);
        /*0x21a5250*/ int get_SunGeneratorNextTick();
        /*0x21a5258*/ void set_SunGeneratorNextTick(int value);
        /*0x21a5260*/ bool get_IsSunUnlimited();
        /*0x21a5268*/ void set_IsSunUnlimited(bool value);
        /*0x21a5270*/ UnityEngine.Vector3 get_SunRemovedTargetLocation();
        /*0x21a527c*/ void set_SunRemovedTargetLocation(UnityEngine.Vector3 value);
        /*0x21a5288*/ uint get_SunSpent();
        /*0x21a5290*/ void set_SunSpent(uint value);
        /*0x2199ec4*/ float CalculateSunProgress();
    }

    class CascadeGuiData
    {
        /*0x10*/ Yeti.Data.CascadeUnitConfig <CascadeUnitConfig>k__BackingField;
        /*0x18*/ int <CurrentStateId>k__BackingField;
        /*0x1c*/ bool <CanActivate>k__BackingField;
        /*0x20*/ float <CurrentProgress>k__BackingField;
        /*0x24*/ float <LastProgress>k__BackingField;
        /*0x28*/ float <MinProgressForActivation>k__BackingField;
        /*0x2c*/ System.Nullable<int> <UnitDefId>k__BackingField;
        /*0x38*/ string <UnitPrefab>k__BackingField;
        /*0x40*/ float[] <ActivationTierProgresses>k__BackingField;
        /*0x48*/ bool <ShouldTransform>k__BackingField;
        /*0x49*/ bool <ShouldChangeState>k__BackingField;

        /*0x21a51e8*/ CascadeGuiData();
        /*0x21a5298*/ Yeti.Data.CascadeUnitConfig get_CascadeUnitConfig();
        /*0x21a52a0*/ void set_CascadeUnitConfig(Yeti.Data.CascadeUnitConfig value);
        /*0x21a52a8*/ int get_CurrentStateId();
        /*0x21a52b0*/ void set_CurrentStateId(int value);
        /*0x21a52b8*/ bool get_CanActivate();
        /*0x21a52c0*/ void set_CanActivate(bool value);
        /*0x21a52c8*/ float get_CurrentProgress();
        /*0x21a52d0*/ void set_CurrentProgress(float value);
        /*0x21a52d8*/ float get_LastProgress();
        /*0x21a52e0*/ void set_LastProgress(float value);
        /*0x21a52e8*/ float get_MinProgressForActivation();
        /*0x21a52f0*/ void set_MinProgressForActivation(float value);
        /*0x21a52f8*/ System.Nullable<int> get_UnitDefId();
        /*0x21a5300*/ void set_UnitDefId(System.Nullable<int> value);
        /*0x21a5308*/ string get_UnitPrefab();
        /*0x21a5310*/ void set_UnitPrefab(string value);
        /*0x21a5318*/ float[] get_ActivationTierProgresses();
        /*0x21a5320*/ void set_ActivationTierProgresses(float[] value);
        /*0x21a5328*/ bool get_ShouldTransform();
        /*0x21a5330*/ void set_ShouldTransform(bool value);
        /*0x21a5338*/ bool get_ShouldChangeState();
        /*0x21a5340*/ void set_ShouldChangeState(bool value);
    }

    class PlantFoodGuiData
    {
        /*0x10*/ int <PlantFoodMeterValue>k__BackingField;
        /*0x14*/ bool <IsMeterUnlimited>k__BackingField;
        /*0x15*/ bool <IsPlantFoodUiHidden>k__BackingField;

        /*0x21a5018*/ PlantFoodGuiData();
        /*0x21a5348*/ int get_PlantFoodMeterValue();
        /*0x21a5350*/ void set_PlantFoodMeterValue(int value);
        /*0x21a5358*/ bool get_IsMeterUnlimited();
        /*0x21a5360*/ void set_IsMeterUnlimited(bool value);
        /*0x21a5368*/ bool get_IsPlantFoodUiHidden();
        /*0x21a5370*/ void set_IsPlantFoodUiHidden(bool value);
        /*0x219a118*/ int CalculatePlantFoodUsesAvailable();
    }

    class CombatStateGuiData
    {
        /*0x10*/ bool <IsFirstEntry>k__BackingField;
        /*0x11*/ bool <IsWaveBreakActive>k__BackingField;
        /*0x12*/ bool <IsEstablishingShots>k__BackingField;
        /*0x13*/ bool <IsGameRunning>k__BackingField;
        /*0x14*/ bool <IsGamePaused>k__BackingField;
        /*0x15*/ bool <IsPausedForFtue>k__BackingField;
        /*0x16*/ bool <IsCelebrationMoment>k__BackingField;
        /*0x18*/ string <WaveName>k__BackingField;
        /*0x20*/ bool <IsUnlimitedResourcesMode>k__BackingField;
        /*0x24*/ int <StageNumber>k__BackingField;
        /*0x28*/ bool <IsQuitGameUiHidden>k__BackingField;
        /*0x29*/ bool <ShouldHidePauseVisuals>k__BackingField;
        /*0x2c*/ int <ZombieLevel>k__BackingField;
        /*0x30*/ bool <IsTurboActive>k__BackingField;
        /*0x31*/ bool <IsTurboAvailable>k__BackingField;
        /*0x34*/ int <ZombiesToBeSpawnedInWavesCount>k__BackingField;
        /*0x38*/ bool <HasSpawnedAntiStallingZopmbie>k__BackingField;

        /*0x21a5104*/ CombatStateGuiData();
        /*0x21a5378*/ bool get_IsFirstEntry();
        /*0x21a5380*/ void set_IsFirstEntry(bool value);
        /*0x21a5388*/ bool get_IsWaveBreakActive();
        /*0x21a5390*/ void set_IsWaveBreakActive(bool value);
        /*0x21a5398*/ bool get_IsEstablishingShots();
        /*0x21a53a0*/ void set_IsEstablishingShots(bool value);
        /*0x21a53a8*/ bool get_IsGameRunning();
        /*0x21a53b0*/ void set_IsGameRunning(bool value);
        /*0x21a53b8*/ bool get_IsGamePaused();
        /*0x21a53c0*/ void set_IsGamePaused(bool value);
        /*0x21a53c8*/ bool get_IsPausedForFtue();
        /*0x21a53d0*/ void set_IsPausedForFtue(bool value);
        /*0x21a53d8*/ bool get_IsCelebrationMoment();
        /*0x21a53e0*/ void set_IsCelebrationMoment(bool value);
        /*0x21a53e8*/ string get_WaveName();
        /*0x21a53f0*/ void set_WaveName(string value);
        /*0x21a53f8*/ bool get_IsUnlimitedResourcesMode();
        /*0x21a5400*/ void set_IsUnlimitedResourcesMode(bool value);
        /*0x21a5408*/ int get_StageNumber();
        /*0x21a5410*/ void set_StageNumber(int value);
        /*0x21a5418*/ bool get_IsQuitGameUiHidden();
        /*0x21a5420*/ void set_IsQuitGameUiHidden(bool value);
        /*0x21a5428*/ bool get_ShouldHidePauseVisuals();
        /*0x21a5430*/ void set_ShouldHidePauseVisuals(bool value);
        /*0x21a5438*/ int get_ZombieLevel();
        /*0x21a5440*/ void set_ZombieLevel(int value);
        /*0x21a5448*/ bool get_IsTurboActive();
        /*0x21a5450*/ void set_IsTurboActive(bool value);
        /*0x21a5458*/ bool get_IsTurboAvailable();
        /*0x21a5460*/ void set_IsTurboAvailable(bool value);
        /*0x21a5468*/ int get_ZombiesToBeSpawnedInWavesCount();
        /*0x21a5470*/ void set_ZombiesToBeSpawnedInWavesCount(int value);
        /*0x21a5478*/ bool get_HasSpawnedAntiStallingZopmbie();
        /*0x21a5480*/ void set_HasSpawnedAntiStallingZopmbie(bool value);
    }

    class ScoreGuiData
    {
        /*0x10*/ int <TotalScore>k__BackingField;
        /*0x14*/ int <MaxPossibleScore>k__BackingField;
        /*0x18*/ Yeti.ScoreBonusGuiDataMap <ScoreBonusGuiDataMap>k__BackingField;
        /*0x20*/ Yeti.StarGuiData <StarData>k__BackingField;
        /*0x28*/ Yeti.Data.ScoringRecords <ScoringRecords>k__BackingField;

        /*0x21a510c*/ ScoreGuiData();
        /*0x21a5488*/ int get_TotalScore();
        /*0x21a5490*/ void set_TotalScore(int value);
        /*0x2199c38*/ int get_NormalizedTotalScore();
        /*0x21a5498*/ int get_MaxPossibleScore();
        /*0x21a54a0*/ void set_MaxPossibleScore(int value);
        /*0x21998c8*/ int get_NormalizedMaxPossibleScore();
        /*0x21a54a8*/ Yeti.ScoreBonusGuiDataMap get_ScoreBonusGuiDataMap();
        /*0x21a54b0*/ Yeti.StarGuiData get_StarData();
        /*0x21a54b8*/ Yeti.Data.ScoringRecords get_ScoringRecords();
        /*0x21a54c0*/ void set_ScoringRecords(Yeti.Data.ScoringRecords value);
    }

    class StarGuiData
    {
        /*0x10*/ System.Collections.Generic.List<float> <PercentOfMaxScoreNeededForStars>k__BackingField;

        /*0x21a55e8*/ StarGuiData();
        /*0x21a5670*/ System.Collections.Generic.List<float> get_PercentOfMaxScoreNeededForStars();
    }

    class ScoreBonusGuiDataMap
    {
        /*0x10*/ System.Collections.Generic.Dictionary<Yeti.Data.ScoreBonusType, Yeti.ScoreBonusGuiData> _scoreBonuses;
        /*0x18*/ System.Collections.Generic.HashSet<Yeti.Data.ScoreBonusType> _includedScoreBonuses;

        /*0x21a54c8*/ ScoreBonusGuiDataMap();
        /*0x21a5678*/ System.Collections.Generic.Dictionary.ValueCollection<Yeti.Data.ScoreBonusType, Yeti.ScoreBonusGuiData> get_Values();
        /*0x21a56c8*/ void SetIncludeScoreBonuses(System.Collections.Generic.IEnumerable<Yeti.Data.ScoreBonusType> includedBonuses);
        /*0x21a5740*/ bool TryGetFilteredBonus(Yeti.Data.ScoreBonusType type, ref Yeti.ScoreBonusGuiData guiData);
        /*0x21a57fc*/ System.Collections.Generic.List<Yeti.ScoreBonusGuiData> GetFilteredValues();
        /*0x219c8f8*/ void AddScoreBonusByType(Yeti.Data.ScoreBonusType scoreBonusType, string locKey, int score);
        /*0x21a5ab8*/ void SetScoreBonus(Yeti.Data.ScoreBonusType scoreBonusType, int score);
    }

    class ScoreBonusGuiData
    {
        /*0x10*/ Yeti.Data.ScoreBonusType <ScoreBonusType>k__BackingField;
        /*0x18*/ string <LocKey>k__BackingField;
        /*0x20*/ int <Score>k__BackingField;

        /*0x21a5a6c*/ ScoreBonusGuiData(Yeti.Data.ScoreBonusType type, string locKey, int score);
        /*0x21a5b44*/ Yeti.Data.ScoreBonusType get_ScoreBonusType();
        /*0x21a5b4c*/ string get_LocKey();
        /*0x21a5b54*/ int get_Score();
        /*0x21a5b5c*/ void set_Score(int value);
    }

    class KillStreakGuiData
    {
        /*0x10*/ int <KillStreak>k__BackingField;
        /*0x14*/ float <KillStreakCooldownPercent>k__BackingField;
        /*0x18*/ int <KillStreakBonusPercent>k__BackingField;

        /*0x21a51b0*/ KillStreakGuiData();
        /*0x21a5b64*/ int get_KillStreak();
        /*0x21a5b6c*/ void set_KillStreak(int value);
        /*0x21a5b74*/ float get_KillStreakCooldownPercent();
        /*0x21a5b7c*/ void set_KillStreakCooldownPercent(float value);
        /*0x21a5b84*/ int get_KillStreakBonusPercent();
        /*0x21a5b8c*/ void set_KillStreakBonusPercent(int value);
    }

    class BossGuiData
    {
        /*0x10*/ bool <BossIsAlive>k__BackingField;
        /*0x14*/ float <BossHealthPercent>k__BackingField;
        /*0x18*/ string <BossNameLocId>k__BackingField;
        /*0x20*/ int <BossMaxHealth>k__BackingField;
        /*0x24*/ bool <IsBossWave>k__BackingField;
        /*0x28*/ YetiSimCoreLib.Game.UnitId <BossUnitId>k__BackingField;

        /*0x21a51b8*/ BossGuiData();
        /*0x21a5b94*/ bool get_BossIsAlive();
        /*0x21a5b9c*/ void set_BossIsAlive(bool value);
        /*0x21a5ba4*/ float get_BossHealthPercent();
        /*0x21a5bac*/ void set_BossHealthPercent(float value);
        /*0x21a5bb4*/ string get_BossNameLocId();
        /*0x21a5bbc*/ void set_BossNameLocId(string value);
        /*0x21a5bc4*/ int get_BossMaxHealth();
        /*0x21a5bcc*/ void set_BossMaxHealth(int value);
        /*0x21a5bd4*/ bool get_IsBossWave();
        /*0x21a5bdc*/ void set_IsBossWave(bool value);
        /*0x21a5be4*/ YetiSimCoreLib.Game.UnitId get_BossUnitId();
        /*0x21a5bec*/ void set_BossUnitId(YetiSimCoreLib.Game.UnitId value);
        /*0x219d13c*/ void SetBossNameLocId(string locId);
    }

    class WaveGuiData
    {
        /*0x10*/ int <CurrentWaveTimeInMs>k__BackingField;
        /*0x14*/ int <CurrentWave>k__BackingField;
        /*0x18*/ int <ZombiesKilled>k__BackingField;

        /*0x21a51c0*/ WaveGuiData();
        /*0x21a5bf4*/ int get_CurrentWaveTimeInMs();
        /*0x21a5bfc*/ void set_CurrentWaveTimeInMs(int value);
        /*0x21a5c04*/ int get_CurrentWave();
        /*0x21a5c0c*/ void set_CurrentWave(int value);
        /*0x21a5c14*/ int get_ZombiesKilled();
        /*0x21a5c1c*/ void set_ZombiesKilled(int value);
        /*0x219d170*/ void SetWave(int waveIndex);
        /*0x21a5c24*/ void SetCurrentTick(int tick);
        /*0x21a5cd4*/ void IncrementPlayerFacingZombiesKilled();
        /*0x219a7d8*/ float CalculateStageProgress(int lastSpawnTimeMs);
    }

    class InstantUseLoadoutGuiData
    {
        /*0x10*/ bool <AreChargesUnlimited>k__BackingField;
        /*0x18*/ System.Collections.Generic.Dictionary<int, Yeti.InstantUseLoadoutGuiData.InstantUseLoadoutUnitGuiData> _loadout;
        /*0x20*/ System.Collections.Generic.List<int> _loadoutUnitIds;

        /*0x21a5020*/ InstantUseLoadoutGuiData();
        /*0x21a5ce4*/ bool get_AreChargesUnlimited();
        /*0x21a5cec*/ void set_AreChargesUnlimited(bool value);
        /*0x219cd7c*/ void Initialize(Yeti.Data.InstantUsePlantLoadoutData instantUseLoadoutData);
        /*0x21a5d20*/ int GetUnitIdAtIndex(int index);
        /*0x21a5ddc*/ void SetPremiumCharges(int unitId, int charges);
        /*0x21a5e68*/ void SetFreeCharges(int unitId, int charges);
        /*0x219971c*/ int GetCharges(int unitId);
        /*0x21a5f00*/ int GetFreeCharges(int unitId);
        /*0x21997b8*/ bool HasFreeCharges(int unitId);
        /*0x21a5f98*/ void SetCooldownPercent(int unitId, float percent);
        /*0x21997d0*/ float GetCooldownPercent(int unitId);

        class InstantUseLoadoutUnitGuiData
        {
            /*0x10*/ int <FreeCharges>k__BackingField;
            /*0x14*/ int <PremiumCharges>k__BackingField;
            /*0x18*/ float <CooldownPercent>k__BackingField;

            /*0x21a5cf4*/ InstantUseLoadoutUnitGuiData(int premiumCharges, int freeCharges);
            /*0x21a5ef4*/ int get_Charges();
            /*0x21a6024*/ int get_FreeCharges();
            /*0x21a602c*/ void set_FreeCharges(int value);
            /*0x21a6034*/ int get_PremiumCharges();
            /*0x21a603c*/ void set_PremiumCharges(int value);
            /*0x21a6044*/ float get_CooldownPercent();
            /*0x21a604c*/ void set_CooldownPercent(float value);
        }
    }

    class InstantDefenseLoadoutGuiData
    {
        /*0x10*/ int <Charges>k__BackingField;
        /*0x14*/ float <CooldownPercent>k__BackingField;
        /*0x18*/ bool <AreChargesUnlimited>k__BackingField;

        /*0x21a50fc*/ InstantDefenseLoadoutGuiData();
        /*0x21a6054*/ int get_Charges();
        /*0x21a605c*/ void set_Charges(int value);
        /*0x21a6064*/ float get_CooldownPercent();
        /*0x21a606c*/ void set_CooldownPercent(float value);
        /*0x21a6074*/ bool get_AreChargesUnlimited();
        /*0x21a607c*/ void set_AreChargesUnlimited(bool value);
        /*0x2199868*/ int GetCharges();
        /*0x21a6084*/ float GetCooldownPercent();
    }

    class BattleMessageGuiData
    {
        /*0x10*/ bool <OrderedMessagingCheatActive>k__BackingField;
        /*0x14*/ int <IntroIndex>k__BackingField;
        /*0x18*/ int <FinalWaveStageOneIndex>k__BackingField;
        /*0x1c*/ int <FinalWaveStageTwoIndex>k__BackingField;
        /*0x20*/ int <LoseIndex>k__BackingField;

        /*0x21a51d0*/ BattleMessageGuiData();
        /*0x21a609c*/ bool get_OrderedMessagingCheatActive();
        /*0x21a60a4*/ void set_OrderedMessagingCheatActive(bool value);
        /*0x21a60ac*/ int get_IntroIndex();
        /*0x21a60b4*/ void set_IntroIndex(int value);
        /*0x21a60bc*/ int get_FinalWaveStageOneIndex();
        /*0x21a60c4*/ void set_FinalWaveStageOneIndex(int value);
        /*0x21a60cc*/ int get_FinalWaveStageTwoIndex();
        /*0x21a60d4*/ void set_FinalWaveStageTwoIndex(int value);
        /*0x21a60dc*/ int get_LoseIndex();
        /*0x21a60e4*/ void set_LoseIndex(int value);
    }

    class ShovelGuiData
    {
        /*0x10*/ float <CooldownPercent>k__BackingField;
        /*0x14*/ bool <CooldownDisabled>k__BackingField;

        /*0x21a51d8*/ ShovelGuiData();
        /*0x21a60ec*/ float get_CooldownPercent();
        /*0x21a60f4*/ void set_CooldownPercent(float value);
        /*0x21a60fc*/ bool get_CooldownDisabled();
        /*0x21a6104*/ void set_CooldownDisabled(bool value);
    }

    class DropsGuiData
    {
        /*0x10*/ UnityEngine.Vector3 <CascadeTokenRemovedTargetLocation>k__BackingField;
        /*0x1c*/ UnityEngine.Vector3 <MoneyTokenRemovedTargetLocation>k__BackingField;

        /*0x21a51e0*/ DropsGuiData();
        /*0x21a610c*/ UnityEngine.Vector3 get_CascadeTokenRemovedTargetLocation();
        /*0x21a6118*/ void set_CascadeTokenRemovedTargetLocation(UnityEngine.Vector3 value);
        /*0x21a6124*/ UnityEngine.Vector3 get_MoneyTokenRemovedTargetLocation();
        /*0x21a6130*/ void set_MoneyTokenRemovedTargetLocation(UnityEngine.Vector3 value);
    }

    class ScoreBonusTypeComparer : System.Collections.Generic.IEqualityComparer<Yeti.Data.ScoreBonusType>
    {
        static /*0x0*/ Yeti.ScoreBonusTypeComparer Instance;

        static /*0x21a6158*/ ScoreBonusTypeComparer();
        /*0x21a613c*/ ScoreBonusTypeComparer();
        /*0x21a6144*/ bool Equals(Yeti.Data.ScoreBonusType x, Yeti.Data.ScoreBonusType y);
        /*0x21a6150*/ int GetHashCode(Yeti.Data.ScoreBonusType obj);
    }

    struct VfxTilingParameters
    {
        /*0x10*/ bool TileLeft;
        /*0x11*/ bool TileRight;
        /*0x12*/ bool TileUp;
        /*0x13*/ bool TileDown;
        /*0x14*/ float TileStep;
        /*0x18*/ float MaxTileDistance;
        /*0x1c*/ float SpawnDelayIncrement;
        /*0x20*/ bool IgnoreInclines;

        /*0x21a61c0*/ bool get_IsTiled();
    }

    struct VFXSpawnParameters
    {
        /*0x10*/ string <VFXId>k__BackingField;
        /*0x18*/ UnityEngine.Vector3 <SpawnRoot>k__BackingField;
        /*0x24*/ UnityEngine.Color <EmissionColor>k__BackingField;
        /*0x38*/ UnityEngine.Transform <ParentTarget>k__BackingField;
        /*0x40*/ float <Speed>k__BackingField;
        /*0x44*/ UnityEngine.Vector3 <SourceGameObjectWorldPosition>k__BackingField;
        /*0x50*/ float <GlobalScale>k__BackingField;
        /*0x54*/ float <SourceUnitScale>k__BackingField;
        /*0x58*/ Yeti.VfxTilingParameters <Tiling>k__BackingField;
        /*0x6c*/ bool <HideSpawnParts>k__BackingField;
        /*0x70*/ Yeti.PuppetEvent <VisualEventId>k__BackingField;
        /*0x78*/ string <TerrainType>k__BackingField;

        /*0x21a62e0*/ VFXSpawnParameters(string vfxId, UnityEngine.Vector3 spawnRoot, UnityEngine.Transform parentTarget, string terrainType, float speed, bool hideSpawnParts, float globalScale);
        /*0x21a63d0*/ VFXSpawnParameters(string vfxId, UnityEngine.Vector3 spawnRoot, UnityEngine.Transform parentTarget, UnityEngine.Color emissionColor, float speed, UnityEngine.Vector3 sourceGameObjectWorldPosition, float globalScale, float sourceUnitScale, Yeti.VfxTilingParameters tiling, Yeti.PuppetEvent visualEventId, string terrainType);
        /*0x21a6268*/ string get_VFXId();
        /*0x21a6270*/ UnityEngine.Vector3 get_SpawnRoot();
        /*0x21a627c*/ UnityEngine.Color get_EmissionColor();
        /*0x21a6288*/ UnityEngine.Transform get_ParentTarget();
        /*0x21a6290*/ float get_Speed();
        /*0x21a6298*/ UnityEngine.Vector3 get_SourceGameObjectWorldPosition();
        /*0x21a62a4*/ float get_GlobalScale();
        /*0x21a62ac*/ float get_SourceUnitScale();
        /*0x21a62b4*/ Yeti.VfxTilingParameters get_Tiling();
        /*0x21a62c8*/ bool get_HideSpawnParts();
        /*0x21a62d0*/ Yeti.PuppetEvent get_VisualEventId();
        /*0x21a62d8*/ string get_TerrainType();
    }

    class CombatSceneVisualEffects : Yeti.IVfxSystem
    {
        /*0x10*/ Yeti.ICombatObjectLifeCycleManager _objectSpawner;
        /*0x18*/ System.Collections.Generic.List<Yeti.IVfxController> _allVisualEffects;
        /*0x20*/ System.Collections.Generic.List<Yeti.IVfxController> _selfDestroyingVisualEffects;
        /*0x28*/ System.Collections.Generic.List<Yeti.IVfxController> _permanentVisualEffects;
        /*0x30*/ System.Collections.Generic.List<Yeti.VFXSpawnParameters> _delayedSpawns;
        /*0x38*/ System.Collections.Generic.List<float> _delayedSpawnTimers;
        /*0x40*/ Yeti.CombatVfxFactory _vfxFactory;

        /*0x21a1320*/ CombatSceneVisualEffects(Yeti.ICombatObjectLifeCycleManager objectSpawner, YetiSimCoreLib.Game.BoardInclineMap boardInclineMap);
        /*0x21a64c8*/ Yeti.IVfxController SpawnVfx(Yeti.VFXSpawnParameters spawnParameters, UnityEngine.Vector3 offset, Yeti.IVFXControllerReturnedToPoolListener listener);
        /*0x21a661c*/ void SpawnVfxWithDelay(Yeti.VFXSpawnParameters spawnParameters, float delay);
        /*0x21a66d4*/ Yeti.IVfxController SpawnPermanentVfx(Yeti.VFXSpawnParameters spawnParameters, UnityEngine.Vector3 offset);
        /*0x21a67a8*/ void DestroyPermanentVfx(Yeti.IVfxController vfxInstance);
        /*0x21a68e0*/ void DestroyNonPermanentVfx(Yeti.IVfxController vfxInstance);
        /*0x21a6944*/ void DestroyPermanentVfx(Yeti.PuppetEvent visualEventId);
        /*0x21a6a70*/ void DestroyAllVfx();
        /*0x21a177c*/ void UpdateFromGameTimer(float deltaTime);
        /*0x21a6cf4*/ void DestroyExpiredTimedVfx();
        /*0x21a6e6c*/ void SpawnDelayedVfx(float deltaTime);
        /*0x21a1a7c*/ void Pause();
        /*0x21a1e7c*/ void Resume();
        /*0x21a4470*/ void SetGlobalSpeed(float speed);
        /*0x21a16e4*/ void SetBoardInclineMap(YetiSimCoreLib.Game.BoardInclineMap boardInclineMap);
        /*0x21a680c*/ void DestroyVfx(Yeti.IVfxController visualEffect);
    }

    class CombatScoreData
    {
        /*0x10*/ int <StageScore>k__BackingField;
        /*0x14*/ int <TotalScore>k__BackingField;
        /*0x18*/ int <MaxScore>k__BackingField;
        /*0x1c*/ int <NominalTotalScore>k__BackingField;
        /*0x20*/ Yeti.Data.ScoringRecords <InitialScoringRecords>k__BackingField;
        /*0x28*/ System.Collections.Generic.Dictionary<Yeti.Data.ScoreBonusType, int> _scoreBonusBreakdowns;
        /*0x30*/ System.Collections.Generic.List<string> _logStatements;

        /*0x21a83f4*/ CombatScoreData();
        /*0x21a7024*/ int get_StageScore();
        /*0x21a702c*/ void set_StageScore(int value);
        /*0x21a7034*/ int get_TotalScore();
        /*0x21a703c*/ void set_TotalScore(int value);
        /*0x21a7044*/ int get_MaxScore();
        /*0x21a704c*/ void set_MaxScore(int value);
        /*0x21a7054*/ int get_NominalTotalScore();
        /*0x21a705c*/ void set_NominalTotalScore(int value);
        /*0x21a7064*/ Yeti.Data.ScoringRecords get_InitialScoringRecords();
        /*0x21a706c*/ void set_InitialScoringRecords(Yeti.Data.ScoringRecords value);
        /*0x21a7074*/ void StoreInitialScoreRecords(Yeti.Data.ScoringRecords scoringRecords);
        /*0x21a70e4*/ void StoreCombatEndedScoreRecords(Yeti.Data.ScoringRecords combatEndedScoreRecords);
        /*0x21a7290*/ int GetScoreBonusBreakdownByType(Yeti.Data.ScoreBonusType type);
        /*0x21a711c*/ void SetScoreBonusBreakdowns(Yeti.Data.ScoringRecords combatEndedScoreRecords);
        /*0x21a7338*/ void SetStageScore(int score);
        /*0x21a7340*/ void SetTotalScore(int score);
        /*0x21a7348*/ void AddToLog(YetiSimCoreLib.Messaging.Events.ZombieKilledScoreBonusGeneratedEventArgs args, Yeti.UnitPuppet unit);
        /*0x21a7648*/ string GenerateLog();
        /*0x21a7890*/ void AddToLog(YetiSimCoreLib.Messaging.Events.SymmetryBonusGeneratedEventArgs symmetryArgs);
        /*0x21a7988*/ void AddToLog(YetiSimCoreLib.Messaging.Events.EveryLoadoutUnitUsedBonusGeneratedEventArgs everyLoadoutUnitUsedArgs);
        /*0x21a798c*/ void AddToLog(YetiSimCoreLib.Messaging.Events.PlantInEveryColumnBonusGeneratedEventArgs plantInEveryColumnArgs);
        /*0x21a7990*/ void LogColumnlessScoreBonus(string name, int delta);
        /*0x21a7a68*/ void AddToLog(YetiSimCoreLib.Messaging.Events.QuickWinBonusGeneratedEventArgs quickWinArgs);
        /*0x21a7d40*/ void AddToLog(YetiSimCoreLib.Messaging.Events.ElementalBonusGeneratedEventArgs elementalArgs);
        /*0x21a7e34*/ void AddToLog(YetiSimCoreLib.Messaging.Events.HerdingBonusGeneratedEventArgs herdingArgs);
        /*0x21a8048*/ void AddToLog(YetiSimCoreLib.Messaging.Events.FirstStrikeBonusGeneratedEventArgs firstStrikeArgs);
        /*0x21a813c*/ void AddToLog(YetiSimCoreLib.Messaging.Events.LaneDefenseBonusGeneratedEventArgs laneDefenseArgs);
        /*0x21a8230*/ void AddToLog(YetiSimCoreLib.Messaging.Events.EnduranceBonusGeneratedEventArgs enduranceBonusArgs);
        /*0x21a8324*/ void AddToLog(YetiSimCoreLib.Messaging.Events.MergeMasterBonusGeneratedEventArgs mergeMasterBonusArgs);
    }

    class CombatScoringYardSigns
    {
        /*0x10*/ Yeti.CombatSceneStateContext _context;

        /*0x21a84d0*/ CombatScoringYardSigns(Yeti.CombatSceneStateContext context);
        /*0x21a8500*/ void CreateColumnSigns();
        /*0x21a8790*/ void SetupScoreSign(UnityEngine.GameObject signObject, int column, int score);
        /*0x21a88e0*/ bool DoesCellHaveWater(YetiSimCoreLib.Game.GridCell cell);
    }

    class CombatState : Yeti.YetiGameState
    {
        static string InitializeMetricsId = "CombatState:InitializeCombat";
        /*0x88*/ Yeti.CombatInputRootState _inputController;
        /*0x90*/ Yeti.CombatCheatManager _combatCheatManager;
        /*0x98*/ Yeti.CombatRuntimeContext _combatRuntimeContext;
        /*0xa0*/ Yeti.CombatObjectPoolWarmer _combatObjectPoolWarmer;
        /*0xa8*/ Yeti.AirLock _airLock;
        /*0xb0*/ Yeti.INavigationService _uiNavigationService;
        /*0xb8*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0xc0*/ Yeti.IBattleDataController _battleDataController;
        /*0xc8*/ Yeti.CombatGuiModel _combatGuiModel;
        /*0xd0*/ Yeti.IErrorRouter _errorRouter;
        /*0xd8*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IAssetMemoryMonitor _assetMemoryMonitor;
        /*0xe0*/ Yeti.GameEventManager _gameEventManager;
        /*0xe8*/ Yeti.IAssetManager _assetManager;
        /*0xf0*/ Yeti.INavigationService _navigationService;
        /*0xf8*/ PvzN3xt.Battle.BattleAssetDownloadController _battleAssetDownloadController;
        /*0x100*/ Yeti.ITutorialController _tutorialController;
        /*0x108*/ PvzN3xt.Ambiance.AmbianceController _ambianceController;
        /*0x110*/ PvzN3xt.Tutorial.ITutorialTargetingSystem _tutorialTargetingSystem;
        /*0x118*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x120*/ Yeti.ApmTracker _apmTracker;
        /*0x128*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x130*/ PvzN3xt.Telemetry.BattleProgressTelemetryDispatcher _battleProgressTelemetryDispatcher;
        /*0x138*/ System.Action OnScenePreparationComplete;
        /*0x140*/ System.Action OnFullyLoaded;
        /*0x148*/ Yeti.CombatState.CombatStateReadyFlags _combatStateReadyFlags;
        /*0x14c*/ bool _dontClearFlagsOnNextExit;

        /*0x21aacd0*/ CombatState();
        /*0x21a8c80*/ void add_OnScenePreparationComplete(System.Action value);
        /*0x21a8d1c*/ void remove_OnScenePreparationComplete(System.Action value);
        /*0x21a8db8*/ void add_OnFullyLoaded(System.Action value);
        /*0x21a8e54*/ void remove_OnFullyLoaded(System.Action value);
        /*0x21a8ef0*/ string get_Name();
        /*0x21a8f30*/ Yeti.YetiGameStateId get_StateId();
        /*0x21a8f38*/ void SetupCombatToCombatEntry();
        /*0x21a8f48*/ void ClearFlags();
        /*0x21a8f50*/ void SetServerCallReady();
        /*0x21a8f88*/ void OnUpdate(float deltaTime);
        /*0x21a9000*/ bool IsInitialized();
        /*0x21a9028*/ void OnEnterMainState();
        /*0x21a90e0*/ void OnAirLockComplete();
        /*0x21a9374*/ void LoadRuntime();
        /*0x21a9884*/ void OnRuntimeLoadError(Yeti.YetiError error);
        /*0x21a9964*/ void OnRuntimeLoaded();
        /*0x21a99c8*/ void OnExitMainState();
        /*0x21a8f70*/ void CheckReadyAndInitializeCombat();
        /*0x21a9c28*/ void InitializeCombat();
        /*0x21aa5a0*/ void HandleCombatUiShown(string currentState);
        /*0x21aa874*/ void RegisterStartGameHandlers();
        /*0x21aa9d8*/ void EnterGameplay();

        enum CombatStateReadyFlags
        {
            None = 0,
            AirLockComplete = 1,
            ScenePreparationComplete = 2,
            ServerCallComplete = 4,
            InitializeCombatCalled = 8,
        }
    }

    class CombatStateMachineVisualizer
    {
        /*0x10*/ Yeti.StateMachineVisualizer _visualizer;
        /*0x18*/ Yeti.CombatRuntimeContext _combatRuntimeContext;
        /*0x20*/ Yeti.CombatInputRootState _inputController;
        /*0x28*/ bool _isActive;

        /*0x21aacd8*/ CombatStateMachineVisualizer(Yeti.CombatRuntimeContext combatRuntimeContext, Yeti.CombatInputRootState inputController);
        /*0x21aad74*/ void ToggleActiveState();
        /*0x21aada0*/ void Update();
    }

    class CombatUnitAudioTracker
    {
        /*0x10*/ Yeti.GameSoundManager _soundManager;
        /*0x18*/ int _zombieCount;

        static /*0x21aaee4*/ bool IsZombieUnit(Yeti.UnitPuppet unit);
        /*0x21aae00*/ CombatUnitAudioTracker(Yeti.GameSoundManager soundManager);
        /*0x21aae30*/ void Reset();
        /*0x21aaeb0*/ void AddUnit(Yeti.UnitPuppet unit);
        /*0x21aaf10*/ void RemoveUnit(Yeti.UnitPuppet unit);
        /*0x21aae38*/ void UpdateZombieCountRtpcValue();
    }

    class CombatUnitResourceListBuilder
    {
        static /*0x21aaf44*/ void AddUnitsToLoad(Yeti.CombatDefinitionData combatDef, Yeti.IAssetManager assetManager, System.Collections.Generic.HashSet<string> resourcesToLoad, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ae7b8*/ void AddUnitResourcesTo(System.Collections.Generic.HashSet<int> unitIdsToLoad, System.Collections.Generic.HashSet<string> resourcesToLoad, Yeti.CombatDefinitionData combatDef, Yeti.IAssetManager assetManager);
        static /*0x21aeb90*/ void AddCheatUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ab260*/ void AddLoadoutUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ab730*/ void AddSpawnableZombieUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21abbec*/ void AddPreSpawnedUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21abef0*/ void AddPreBattleBoostUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ac1f4*/ void AddLossAversionUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ac264*/ void AddCascadeUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ac5c8*/ void AddInclineUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ab8e8*/ void AddInitStateUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21ac624*/ void AddDropTableUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21acc18*/ void AddPerkAbilityUnitIds(Yeti.CombatDefinitionData combatDef, System.Collections.Generic.HashSet<int> unitIdsToLoad);
        static /*0x21acbfc*/ void AddUnitIds(System.Collections.Generic.HashSet<int> unitIdsToLoad, int unitId, Yeti.CombatDefinitionData combatDef);
        static /*0x21aec94*/ void AddUnitIds(System.Collections.Generic.HashSet<int> unitIdsToLoad, int unitId, YetiSimCoreLib.Game.UnitDatabase unitDatabase, YetiSimCoreLib.Game.AbilityDatabase abilityDatabase);
        static /*0x21aefd4*/ System.Collections.Generic.HashSet<string> DetermineUnitResourcesToLoadForUnit(int unitId, System.Collections.Generic.HashSet<int> unitIdsToLoad, Yeti.CombatDefinitionData combatDef, Yeti.IAssetManager assetManager);
        static /*0x21af254*/ System.Collections.Generic.HashSet<string> DetermineAdditionalResourcesToLoad(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection vfxResources, Yeti.CombatDefinitionData combatDefinitionData);
        static /*0x21af6c8*/ void DetermineAdditionalResourcesToLoad(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle resourceHandle, System.Collections.Generic.HashSet<string> resourcesToLoad, Yeti.CombatDefinitionData combatDefinitionData);
    }

    struct CombatUnitSelectionData
    {
        static /*0x0*/ Yeti.CombatUnitSelectionData Default;
        /*0x10*/ int UnitId;
        /*0x18*/ string Alias;
        /*0x20*/ int Level;
        /*0x24*/ int PlantFoodLevel;
        /*0x28*/ int PromotionLevel;
        /*0x2c*/ UnityEngine.Vector3 ScreenPosition;
        /*0x38*/ string DamageTypeAlias;

        static /*0x21afba4*/ CombatUnitSelectionData();
        static /*0x21afa30*/ Yeti.CombatUnitSelectionData CreateFrom(Yeti.UnitPuppet puppet, UnityEngine.Vector3 screenPosition);
        /*0x21afb2c*/ CombatUnitSelectionData(int unitId, string alias, int level, int plantFoodLevel, int promotionLevel, UnityEngine.Vector3 screenPosition, string damageTypeAlias);
    }

    class CombatVfxFactory
    {
        /*0x10*/ Yeti.ICombatObjectLifeCycleManager _objectSpawner;
        /*0x18*/ YetiSimCoreLib.Game.BoardInclineMap _boardInclineMap;
        /*0x20*/ YetiSimCoreLib.Core.ObjectPool<Yeti.CompositeVfxController> _compositeControllers;
        /*0x28*/ float _globalVfxSpeed;

        /*0x21afd04*/ CombatVfxFactory(Yeti.ICombatObjectLifeCycleManager objectSpawner, YetiSimCoreLib.Game.BoardInclineMap boardInclineMap);
        /*0x21afdd0*/ void SetBoardInclineMap(YetiSimCoreLib.Game.BoardInclineMap boardInclineMap);
        /*0x21afdd8*/ void SetGlobalVfxSpeed(float speed);
        /*0x21afde0*/ Yeti.IVfxController CreateVfx(Yeti.VFXSpawnParameters spawnParameters, UnityEngine.Vector3 offset);
        /*0x21b0120*/ Yeti.IVfxController CreateController(ref Yeti.VFXSpawnParameters spawnParameters, UnityEngine.Vector3 offset);
        /*0x21b01dc*/ Yeti.IVfxController CreateTiledVfx(ref Yeti.VFXSpawnParameters spawnParameters);
        /*0x21b05d8*/ void CreateVfxTiledLeft(ref Yeti.VFXSpawnParameters spawnParameters, Yeti.CompositeVfxController composite);
        /*0x21b0494*/ void CreateVfxTiledRight(ref Yeti.VFXSpawnParameters spawnParameters, Yeti.CompositeVfxController composite);
        /*0x21b0720*/ void CreateVfxTiledUp(ref Yeti.VFXSpawnParameters spawnParameters, Yeti.CompositeVfxController composite);
        /*0x21b0868*/ void CreateVfxTiledDown(ref Yeti.VFXSpawnParameters spawnParameters, Yeti.CompositeVfxController composite);
        /*0x21b09b4*/ void CreateTiledVfx(ref Yeti.VFXSpawnParameters spawnParameters, Yeti.CompositeVfxController composite, UnityEngine.Vector3 deltaPosition, int amount);
        /*0x21b03d0*/ Yeti.VFXController CreateSingleVfxInstance(string vfxId);
    }

    class CooldownUtils
    {
        static /*0x21b0bc4*/ float GetCooldownPercent(Yeti.Data.CooldownState cooldown);
        static /*0x21b0bf4*/ float GetCooldownPercent(int ticksRemaining, int ticksTotal);
    }

    class CoreSimWrapper : YetiSimAi.Core.ICoreAiSimInputCreator
    {
        static float MinimumFps = 7;
        static float MaxUpdateDelta = 0.1428571492433548;
        static string StartSimMetricId = "CoreSimWrapper:StartSim";
        /*0x10*/ YetiSimCoreLib.Core.IYetiSimContext _context;
        /*0x18*/ bool <IsStartSimCompleted>k__BackingField;

        /*0x21b0c30*/ CoreSimWrapper();
        /*0x21b0c10*/ YetiSimCoreLib.Core.IPositionProvider get_PositionProvider();
        /*0x21b0c18*/ YetiSimCoreLib.Core.IYetiSimContext get_ContextOnlyForCheatingAndAutomation();
        /*0x21b0c20*/ bool get_IsStartSimCompleted();
        /*0x21b0c28*/ void set_IsStartSimCompleted(bool value);
        /*0x21b0c5c*/ void ResetContext();
        /*0x21b0c88*/ YetiSimCoreLib.Messaging.IMessageListener GetCoreSimMessageListener();
        /*0x21b0d2c*/ void StartSim(Yeti.Data.GameInitState initState, Yeti.Data.GameSimDefinition gameDef);
        /*0x21b0ff4*/ void Update(float deltaTimeInSeconds);
        /*0x21b11e8*/ void PlaceLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21b1384*/ void MergeLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21b1520*/ void PlacePlant(YetiSimCoreLib.Game.UnitId unitId, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21b16bc*/ void PromotePlant(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21b1850*/ void ReclaimPlant(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21b19e4*/ void UsePlantFood(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21b1b78*/ void UsePlantFoodOnSunMeter();
        /*0x21b1cfc*/ void UsePlantFoodOnSeedPacket(int unitId);
        /*0x21b1ec8*/ void UsePromotionUseOnSunMeter();
        /*0x21b204c*/ void UsePromotionUseOnSeedPacket(int unitId);
        /*0x21b2218*/ void MovePlant(YetiSimCoreLib.Game.InstanceId instanceId, YetiSimCoreLib.Game.GridCell position);
        /*0x21b23b4*/ void AddUnlimitedResources();
        /*0x21b2538*/ Yeti.Data.GameInitState CreateSaveState();
        /*0x21b25dc*/ void SwapPlants(YetiSimCoreLib.Game.InstanceId instanceIdA, YetiSimCoreLib.Game.InstanceId instanceIdB);
        /*0x21b2778*/ void PlaceInstantUsePlant(int unitId, YetiSimCoreLib.Game.GridCell placementCell);
        /*0x21b2954*/ void RemovePreviewZombies();
        /*0x21b2ad8*/ void AddPlantFood(int amount);
        /*0x21b2c6c*/ void ChangeShovelCooldownState(bool disable);
        /*0x21b2e00*/ void CollectSun(YetiSimCoreLib.Game.InstanceId sunInstanceId);
        /*0x21b2f94*/ void CollectDrop(YetiSimCoreLib.Game.InstanceId dropInstanceId);
        /*0x21b3128*/ void ActivateOnBoardInstantUsePlantBoost(YetiSimCoreLib.Game.InstanceId instanceId, YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21b32c4*/ void ActivateOnBoardPlantFoodBoost(YetiSimCoreLib.Game.InstanceId boostInstanceId, YetiSimCoreLib.Game.InstanceId unitInstanceId);
        /*0x21b3460*/ void SendLossAversionResponse(bool activate);
        /*0x21b35f4*/ void SetBoostUsesRemaining(YetiSimCoreLib.Game.UnitId unitId, int newUsesRemaining);
        /*0x21b3790*/ YetiSimCoreLib.Core.SpawnUnitValidationResults ValidatePlaceLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell cell);
        /*0x21b38c0*/ YetiSimCoreLib.Core.SpawnUnitValidationResults ValidateMergeLoadoutUnit(int loadoutIndex, YetiSimCoreLib.Game.GridCell cell);
        /*0x21b39f4*/ YetiSimCoreLib.Core.SpawnUnitValidationResults ValidateMergeUnits(int instanceIdA, int instanceIdB, YetiSimCoreLib.Game.GridCell cell);
        /*0x21b3b30*/ YetiSimCoreLib.Core.SpawnUnitValidationResults ValidatePlantPlacement(int row, int column, int unitId);
        /*0x21b3c6c*/ Yeti.Data.Messaging.Events.YetiSimErrorCode ValidateInstantUsePlantPlacement(int row, int column, int unitId);
        /*0x21b3da8*/ Yeti.Data.Messaging.Events.YetiSimErrorCode ValidateReclaimPlant(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21b3ef4*/ void SetCascadeMeterFill(float percentage);
        /*0x21b4088*/ void ActivateCascadeUnit();
        /*0x21b420c*/ void DestroyUnit(int unitInstanceId);
        /*0x21b43d8*/ void PauseWaves();
        /*0x21b455c*/ void ResumeWaves();
        /*0x21b46e0*/ void PauseSunGeneration();
        /*0x21b4864*/ void ResumeSunGeneration();
        /*0x21b49e8*/ void PauseAllPlayerLoadoutCooldowns();
        /*0x21b4b6c*/ void ResumeAllPlayerLoadoutCooldowns();
        /*0x21b4cf0*/ void PauseTimedCascade();
        /*0x21b4e74*/ void ResumeTimedCascade();
        /*0x21b4ff8*/ void PausePreBattleBoosts();
        /*0x21b517c*/ void ResumePreBattleBoosts();
        /*0x21b5300*/ void ActivateUnitAbility(int unitInstanceId);
        /*0x21b54cc*/ void MergePlants(YetiSimCoreLib.Game.InstanceId instanceIdA, YetiSimCoreLib.Game.InstanceId instanceIdB, YetiSimCoreLib.Game.GridCell cell);
        /*0x21b5678*/ void RemoveGrowthTimer(int instanceId);
        /*0x21b5844*/ void AbandonGame();
    }

    class CountdownState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ Yeti.CoreSimWrapper _coreSim;
        /*0x88*/ bool _isDelayed;

        /*0x21b5a08*/ CountdownState(Yeti.CoreSimWrapper coreSim);
        /*0x21b59c8*/ string get_Name();
        /*0x21b5b00*/ void OnEnter();
        /*0x21b5c10*/ void OnExit();
        /*0x21b5c64*/ void OnComplete();
        /*0x21b5bfc*/ void SkipIfEntryInterstitialDelayed();
        /*0x21b5c6c*/ void SetDelayed();
    }

    class DamageTypePreviewController
    {
        /*0x10*/ Yeti.CombatGuiModel _combatModel;
        /*0x18*/ Yeti.CombatScenePuppets _puppets;
        /*0x20*/ Yeti.IDamageTypeDefinitionProvider _damageTypeDefinitionProvider;
        /*0x28*/ bool _isWaitingToHidePreview;
        /*0x2c*/ float _hideDelayTimeRemaining;

        /*0x21b5c78*/ DamageTypePreviewController(Yeti.CombatGuiModel combatModel, Yeti.CombatScenePuppets puppets, Yeti.IDamageTypeDefinitionProvider damageTypeDefinitionProvider);
        /*0x21b5cd8*/ void ShowPreview(int damageTypeId);
        /*0x21b6108*/ void HidePreviewAfterDelay();
        /*0x21b6138*/ void HidePreview();
        /*0x21b5df0*/ void UpdateUnitPreviewModes();
        /*0x21b61c0*/ void Update(float deltaTime);
    }

    class DamageTypePreviewGuiData
    {
        /*0x10*/ bool <IsShowingDamageTypePreview>k__BackingField;
        /*0x14*/ int <DamageTypeId>k__BackingField;
        /*0x18*/ int _effectiveDamageTypeId;
        /*0x1c*/ int _ineffectiveDamageTypeId;

        /*0x21b6204*/ DamageTypePreviewGuiData();
        /*0x21b61e4*/ bool get_IsShowingDamageTypePreview();
        /*0x21b61ec*/ void set_IsShowingDamageTypePreview(bool value);
        /*0x21b61f4*/ int get_DamageTypeId();
        /*0x21b61fc*/ void set_DamageTypeId(int value);
        /*0x21b5ddc*/ void SetDamageTypePreview(int damageTypeId, int effectiveDamageTypeId, int ineffectiveDamageTypeId);
        /*0x21b6170*/ void Clear();
        /*0x21b6188*/ Yeti.DamageTypePreviewMode GetPreviewMode(int damageTypeId);
    }

    enum DamageTypePreviewMode
    {
        None = 0,
        Neutral = 1,
        Effective = 2,
        Ineffective = 3,
    }

    class DisableFrustumCulling : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.Camera cam;

        /*0x21b640c*/ DisableFrustumCulling();
        /*0x21b6214*/ void OnEnable();
        /*0x21b627c*/ void OnPreCull();
        /*0x21b63f4*/ void OnDisable();
    }

    class DraggableTooltipBinding : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.DraggableUI _draggable;
        /*0x28*/ Yeti.PositionAligner _tooltipAligner;

        /*0x21b6754*/ DraggableTooltipBinding();
        /*0x21b6414*/ void Awake();
        /*0x21b673c*/ void HandleDragStart(UnityEngine.EventSystems.PointerEventData data);
    }

    class DraggableUI : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IBeginDragHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IDragHandler, UnityEngine.EventSystems.IEndDragHandler, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IInitializePotentialDragHandler
    {
        /*0x20*/ bool Interactable;
        /*0x21*/ bool _ignoreAllowDenyList;
        /*0x22*/ bool _useDragThreshold;
        /*0x28*/ Yeti.PointerGameEvent _beginDrag;
        /*0x30*/ Yeti.PointerGameEvent _endDrag;
        /*0x38*/ Yeti.PointerGameEvent _drag;
        /*0x40*/ Yeti.PointerGameEvent _pointerClick;
        /*0x48*/ Yeti.PointerGameEvent _dragDelta;
        /*0x50*/ PvzN3xt.Tutorial.IUiAllowDenyListSystem _allowDenyList;
        /*0x58*/ Yeti.GameEventManager _gameEvents;
        /*0x60*/ System.Action<UnityEngine.EventSystems.PointerEventData> OnBeginDragEvent;
        /*0x68*/ System.Action<UnityEngine.EventSystems.PointerEventData> OnDragEvent;
        /*0x70*/ System.Action<UnityEngine.EventSystems.PointerEventData> OnEndDragEvent;
        /*0x78*/ System.Action<UnityEngine.EventSystems.PointerEventData> OnClickEvent;
        /*0x80*/ bool _pointerWasDownWithoutDrag;

        /*0x21b6fb8*/ DraggableUI();
        /*0x21b65dc*/ void add_OnBeginDragEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b675c*/ void remove_OnBeginDragEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b680c*/ void add_OnDragEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b68bc*/ void remove_OnDragEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b696c*/ void add_OnEndDragEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b6a1c*/ void remove_OnEndDragEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b668c*/ void add_OnClickEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b6acc*/ void remove_OnClickEvent(System.Action<UnityEngine.EventSystems.PointerEventData> value);
        /*0x21b6b7c*/ void Awake();
        /*0x21b6b84*/ void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x21b6b9c*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x21b6ba8*/ void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x21b6cbc*/ void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x21b6d1c*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x21b6d90*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
        /*0x21b6c4c*/ void DispatchGameEvent(Yeti.PointerGameEvent evt, UnityEngine.Vector3 position);
        /*0x21b6c08*/ void DispatchEvent(System.Action<UnityEngine.EventSystems.PointerEventData> regularEvent, UnityEngine.EventSystems.PointerEventData data);
        /*0x21b6e00*/ bool CanDispatch();
        /*0x21b6ed8*/ void SetOnPointerClickEvent(string eventName);
        /*0x21b6f48*/ void SetOnBeginDragEvent(string eventName);
    }

    class DropDoober : Yeti.ProgrammaticAnimation
    {
        /*0x48*/ System.Action<Yeti.DropDoober> OnComplete;
        /*0x50*/ float _popupTime;
        /*0x54*/ DG.Tweening.Ease _popupEasing;
        /*0x58*/ float _destinationStartDelay;
        /*0x5c*/ float _destinationAnimationTime;
        /*0x60*/ DG.Tweening.Ease _destinationEasing;
        /*0x64*/ UnityEngine.Vector3 _destinationScale;
        /*0x70*/ UnityEngine.RectTransform _rectTransform;
        /*0x78*/ DG.Tweening.Sequence _positionAnimation;
        /*0x80*/ DG.Tweening.TweenCallback _animationCompleteHandler;

        /*0x21b73b0*/ DropDoober();
        /*0x21b6fcc*/ void Awake();
        /*0x21b7090*/ void Play(UnityEngine.Vector2 startPosition, UnityEngine.Vector2 popupPosition, UnityEngine.Vector2 endPosition);
        /*0x21b72dc*/ void HandleAnimationComplete();
        /*0x21b72fc*/ void OnPause();
        /*0x21b7354*/ void OnResume();
        /*0x21b73ac*/ void UpdateAnimation(float deltaTime);
    }

    class EditorInputController
    {
        /*0x10*/ Yeti.GameEventManager _gameEvents;
        /*0x18*/ Yeti.CombatSceneState _combatScene;
        /*0x20*/ Yeti.AlphaNumberKeyCaptureMonobehaviour _alphaNumberKeyCapture;

        /*0x21b73b8*/ EditorInputController(Yeti.CombatSceneState combatScene);
        /*0x21b74b0*/ void StartListening();
        /*0x21b7664*/ void StopListening();
        /*0x21b7820*/ void SelectPlantIndex(int inputKey);
    }

    class AlphaNumberKeyCaptureMonobehaviour : UnityEngine.MonoBehaviour
    {
        /*0x20*/ System.Action<int> OnAlphaNumberKeyPressed;

        /*0x21b7a4c*/ AlphaNumberKeyCaptureMonobehaviour();
        /*0x21b75b4*/ void add_OnAlphaNumberKeyPressed(System.Action<int> value);
        /*0x21b7770*/ void remove_OnAlphaNumberKeyPressed(System.Action<int> value);
        /*0x21b78fc*/ void Update();
    }

    class EmptyGameState : RSG.AbstractState
    {
        /*0x70*/ string <Name>k__BackingField;

        /*0x21b7a5c*/ EmptyGameState(string name);
        /*0x21b7a54*/ string get_Name();
    }

    struct ShotProperty
    {
        /*0x10*/ bool _ignore;
        /*0x18*/ UnityEngine.AnimationCurve _curve;
        /*0x20*/ float _startValue;
        /*0x24*/ float _endValue;

        /*0x21b7aac*/ ShotProperty(Yeti.DeltaShotProperty deltaShotProperty, float endValue);
        /*0x21b7a8c*/ bool get_Ignore();
        /*0x21b7a94*/ UnityEngine.AnimationCurve get_Curve();
        /*0x21b7a9c*/ float get_StartValue();
        /*0x21b7aa4*/ float get_EndValue();
    }

    struct DeltaShotProperty
    {
        /*0x10*/ UnityEngine.AnimationCurve _curve;
        /*0x18*/ float _changeInValue;

        /*0x21b7b0c*/ UnityEngine.AnimationCurve get_Curve();
        /*0x21b7b14*/ float get_ChangeInValue();
    }

    struct ShotConfig
    {
        /*0x10*/ float _seconds;
        /*0x14*/ bool _orthographic;
        /*0x18*/ Yeti.ShotProperty _zoom;
        /*0x30*/ Yeti.ShotProperty _positionX;
        /*0x48*/ Yeti.ShotProperty _positionY;
        /*0x60*/ Yeti.ShotProperty _positionZ;
        /*0x78*/ Yeti.ShotProperty _rotationX;
        /*0x90*/ Yeti.ShotProperty _rotationY;
        /*0xa8*/ Yeti.ShotProperty _rotationZ;

        /*0x21b7bb8*/ ShotConfig(Yeti.LastShotConfig config, Yeti.CameraProperties properties);
        /*0x21b7b1c*/ float get_Seconds();
        /*0x21b7b24*/ bool get_Orthographic();
        /*0x21b7b2c*/ Yeti.ShotProperty get_ZoomProperty();
        /*0x21b7b40*/ Yeti.ShotProperty get_PositionXProperty();
        /*0x21b7b54*/ Yeti.ShotProperty get_PositionYProperty();
        /*0x21b7b68*/ Yeti.ShotProperty get_PositionZProperty();
        /*0x21b7b7c*/ Yeti.ShotProperty get_RotationXProperty();
        /*0x21b7b90*/ Yeti.ShotProperty get_RotationYProperty();
        /*0x21b7ba4*/ Yeti.ShotProperty get_RotationZProperty();
    }

    struct LastShotConfig
    {
        /*0x10*/ float _seconds;
        /*0x18*/ Yeti.DeltaShotProperty _orthographicSize;
        /*0x28*/ Yeti.DeltaShotProperty _positionX;
        /*0x38*/ Yeti.DeltaShotProperty _positionY;
        /*0x48*/ Yeti.DeltaShotProperty _positionZ;
        /*0x58*/ Yeti.ShotProperty _rotationX;
        /*0x70*/ Yeti.ShotProperty _rotationY;
        /*0x88*/ Yeti.ShotProperty _rotationZ;

        /*0x21b7d2c*/ float get_Seconds();
        /*0x21b7d34*/ Yeti.DeltaShotProperty get_OrthographicSizeProperty();
        /*0x21b7d40*/ Yeti.DeltaShotProperty get_PositionXProperty();
        /*0x21b7d4c*/ Yeti.DeltaShotProperty get_PositionYProperty();
        /*0x21b7d58*/ Yeti.DeltaShotProperty get_PositionZProperty();
        /*0x21b7d64*/ Yeti.ShotProperty get_RotationXProperty();
        /*0x21b7d78*/ Yeti.ShotProperty get_RotationYProperty();
        /*0x21b7d8c*/ Yeti.ShotProperty get_RotationZProperty();
    }

    class EstablishingShotsConfig : UnityEngine.ScriptableObject
    {
        /*0x18*/ float _xMin;
        /*0x1c*/ float _xMax;
        /*0x20*/ float _zMin;
        /*0x24*/ float _zMax;
        /*0x28*/ Yeti.ShotConfig[] _shots;
        /*0x30*/ Yeti.LastShotConfig _lastShot;

        /*0x21b7dd8*/ EstablishingShotsConfig();
        /*0x21b7da0*/ float get_ZombiePreviewXMin();
        /*0x21b7da8*/ float get_ZombiePreviewXMax();
        /*0x21b7db0*/ float get_ZombiePreviewZMin();
        /*0x21b7db8*/ float get_ZombiePreviewZMax();
        /*0x21b7dc0*/ Yeti.ShotConfig[] get_ShotConfig();
        /*0x21b7dc8*/ Yeti.LastShotConfig get_LastShot();
    }

    class EstablishingShotsController
    {
        /*0x10*/ System.Action OnEstablishingShotsComplete;
        /*0x18*/ System.Action OnCelebrationMomentComplete;
        /*0x20*/ Yeti.BoardView _boardView;
        /*0x28*/ Yeti.ZombiePreview _zombiePreview;
        /*0x30*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x38*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x40*/ Yeti.CombatCameraUtils _cameraUtils;
        /*0x48*/ System.Collections.Generic.List<Yeti.IHinge> _hinges;
        /*0x50*/ Yeti.EstablishingShotsPlayer _player;

        /*0x21b7de0*/ EstablishingShotsController(Yeti.CombatSceneStateContext context, Yeti.ZombiePreview zombiePreview, CapitalGames.CoroutineCreator coroutineCreator, PvzN3xt.Nvs.INamedValueService namedValueService);
        /*0x21b7f00*/ void Play();
        /*0x21b82b4*/ void PlayCelebrationMoment();
        /*0x21b8548*/ void SkipShot();
        /*0x21b8644*/ void Stop();
        /*0x21b888c*/ void AdjustCamera();
        /*0x21b894c*/ void OnShotsComplete();
        /*0x21b8a58*/ void OnCelebrationComplete();
    }

    class EstablishingShotsPlayer
    {
        /*0x10*/ UnityEngine.Camera _mainCamera;
        /*0x18*/ UnityEngine.Transform _cameraTransform;
        /*0x20*/ Yeti.CombatCameraUtils _cameraUtils;
        /*0x28*/ Yeti.EstablishingShotsConfig _config;
        /*0x30*/ System.Collections.Generic.List<Yeti.IHinge> _hinges;
        /*0x38*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x40*/ float _originalFieldOfView;
        /*0x44*/ float _originalOrthographicSize;
        /*0x48*/ UnityEngine.Vector3 _originalPosition;
        /*0x54*/ UnityEngine.Vector3 _originalRotation;
        /*0x60*/ bool _isOrthographic;
        /*0x64*/ int _shotIndex;
        /*0x68*/ bool _adjustLastShot;
        /*0x70*/ UnityEngine.Coroutine _coroutine;
        /*0x78*/ Yeti.CombatCameraResolutionAdjuster _resolutionAdjuster;
        /*0x80*/ System.Action OnEstablishingShotsComplete;

        static /*0x21b979c*/ float GetNormalizedTime(float runningTime, float totalTime);
        static /*0x21b9778*/ float GetValue(float normalizedTime, Yeti.ShotProperty property, float originalValue);
        /*0x21b81b4*/ EstablishingShotsPlayer(Yeti.CombatCameraUtils cameraUtils, Yeti.EstablishingShotsConfig config, System.Collections.Generic.List<Yeti.IHinge> hinges, CapitalGames.CoroutineCreator coroutineCreator);
        /*0x21b827c*/ void Play();
        /*0x21b8540*/ void PlayWithoutAdjustedLastShot();
        /*0x21b8b54*/ void SetStartingValues();
        /*0x21b8c18*/ bool ShouldPlay();
        /*0x21b8ca8*/ void SetupFirstShot();
        /*0x21b8ea8*/ void SetOrthographic(bool isOrthographic);
        /*0x21b8264*/ void AdjustCamera();
        /*0x21b8cec*/ void SetFinalAdjustedCameraProperties();
        /*0x21b95a0*/ Yeti.ShotConfig GetAdjustedLastShot(Yeti.LastShotConfig lastShot);
        /*0x21b9358*/ Yeti.CameraProperties GetAdjustedProperties(float xRotation);
        /*0x21b855c*/ void SkipShot();
        /*0x21b965c*/ bool IsSecondToLastShot();
        /*0x21b9690*/ void SkipToEnd();
        /*0x21b87bc*/ void Stop();
        /*0x21b90f0*/ void PlayNextShot();
        /*0x21b96a8*/ System.Collections.IEnumerator PlayShot(Yeti.ShotConfig shot, System.Action shotCompleteCallback);
        /*0x21b9404*/ void SetPropertiesAtTime(float normalizedTime, Yeti.ShotConfig shot);
        /*0x21b8de4*/ void OnShotsComplete();

        class <PlayShot>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.ShotConfig shot;
            /*0xd0*/ Yeti.EstablishingShotsPlayer <>4__this;
            /*0xd8*/ System.Action shotCompleteCallback;
            /*0xe0*/ float <runningTime>5__2;
            /*0xe4*/ float <totalTime>5__3;

            /*0x21b9750*/ <PlayShot>d__32(int <>1__state);
            /*0x21b97a4*/ void System.IDisposable.Dispose();
            /*0x21b97a8*/ bool MoveNext();
            /*0x21b988c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x21b9894*/ void System.Collections.IEnumerator.Reset();
            /*0x21b98cc*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class EstablishingShotsState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatSceneStateContext _context;
        /*0x78*/ Yeti.CombatGuiModel _combatModel;

        /*0x21b9914*/ EstablishingShotsState(Yeti.CombatSceneStateContext context, Yeti.CombatGuiModel combatModel);
        /*0x21b98d4*/ string get_Name();
        /*0x21b9958*/ void OnEnter();
        /*0x21b9a5c*/ void OnEstablishingShotsComplete();
        /*0x21b9a64*/ void OnExit();
    }

    class FtueSilentlyAbandonCombatState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.IBattleDataController _battleDataController;
        /*0x80*/ PvzN3xt.UI.WaitForNetworkScreenController _waitForNetworkScreenController;
        /*0x88*/ string <Name>k__BackingField;
        /*0x90*/ Yeti.CombatGameEndReporter _gameEndReporter;
        /*0x98*/ System.Action _reportCompleteHandler;

        /*0x21b9b88*/ FtueSilentlyAbandonCombatState(Yeti.CombatGameEndReporter gameEndReporter);
        /*0x21b9b80*/ string get_Name();
        /*0x21b9d00*/ void OnEnter();
        /*0x21b9d38*/ void OnExit();
        /*0x21b9d6c*/ void HandleReportCombatComplete();
    }

    interface IGameOverState
    {
        /*0x1f30b78*/ void SetEndCombatCause(Yeti.EndCombatCause cause);
        /*0x1f30214*/ RSG.AbstractState get_State();
    }

    class GameOverState : RSG.AbstractState, Yeti.IGameOverState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ PvzN3xt.Track.TrackBattleFlowController _trackBattleFlowController;
        /*0x80*/ PvzN3xt.RoadTrip.RoadTripBattleFlowController _roadTripBattleFlowController;
        /*0x88*/ PvzN3xt.DailyChallenge.DailyChallengeBattleFlowController _dailyChallengeBattleFlowController;
        /*0x90*/ Yeti.GameStateController _gameStateController;
        /*0x98*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0xa0*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0xa8*/ Yeti.ApmTracker _apmTracker;
        /*0xb0*/ PvzN3xt.Telemetry.BattleProgressTelemetryDispatcher _battleProgressTelemetryDispatcher;
        /*0xb8*/ Yeti.CombatSceneStateContext _context;
        /*0xc0*/ Yeti.EndCombatCause _endCombatCause;
        /*0xc8*/ UnityEngine.Coroutine _delayHideSunCoroutine;

        /*0x21b9dc8*/ GameOverState(Yeti.CombatSceneStateContext context);
        /*0x21b9d84*/ string get_Name();
        /*0x21b9dc4*/ RSG.AbstractState get_State();
        /*0x21b9ec0*/ void OnEnter();
        /*0x21ba114*/ void HideRemainingSunObjects();
        /*0x21ba470*/ void OnExit();
        /*0x21ba594*/ void OnUpdate(float deltaTime);
        /*0x21ba5ac*/ void SetEndCombatCause(Yeti.EndCombatCause result);
    }

    class GlobalVar_Float
    {
        /*0x10*/ string VarFloatName;
        /*0x18*/ float VarFloat;

        /*0x21ba5b4*/ GlobalVar_Float();
    }

    class GlobalVar_Vec4
    {
        /*0x10*/ string VarVec4Name;
        /*0x18*/ UnityEngine.Vector4 VarVec4;

        /*0x21ba5bc*/ GlobalVar_Vec4();
    }

    class GlobalVar_Color
    {
        /*0x10*/ string VarColorName;
        /*0x18*/ UnityEngine.Color VarColor;

        /*0x21ba5c4*/ GlobalVar_Color();
    }

    class GlobalVar_Texture
    {
        /*0x10*/ string VarTextureName;
        /*0x18*/ UnityEngine.Texture VarTexture;

        /*0x21ba5cc*/ GlobalVar_Texture();
    }

    class GlobalShaderVariables : UnityEngine.MonoBehaviour
    {
        /*0x20*/ System.Collections.Generic.List<Yeti.GlobalVar_Float> GlobalFloat;
        /*0x28*/ System.Collections.Generic.List<Yeti.GlobalVar_Vec4> GlobalVec4;
        /*0x30*/ System.Collections.Generic.List<Yeti.GlobalVar_Color> GlobalColor;
        /*0x38*/ System.Collections.Generic.List<Yeti.GlobalVar_Texture> GlobalTexture;
        /*0x40*/ int GlobalFloatNum;
        /*0x44*/ int GlobalVec4Num;
        /*0x48*/ int GlobalColorNum;
        /*0x4c*/ int GlobalTextureNum;
        /*0x50*/ Yeti.GlobalShaderColorManager _colorManager;

        /*0x21ba960*/ GlobalShaderVariables();
        /*0x21ba5d4*/ void Awake();
        /*0x21ba770*/ void Update();
    }

    class GridCellView : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.SpriteRenderer _highlight;
        /*0x28*/ float _offsetTowardsCamera;
        /*0x30*/ UnityEngine.Transform _cachedTransform;
        /*0x38*/ UnityEngine.Color _defaultColor;
        /*0x48*/ UnityEngine.Vector3 _positionOffset;
        /*0x54*/ UnityEngine.Vector3 _unprojectedPosition;
        /*0x60*/ bool _ignoreBoundsChecks;

        /*0x21bae9c*/ GridCellView();
        /*0x21baae4*/ void Awake();
        /*0x21bab28*/ void Initialize(bool ignoreBoundsChecks);
        /*0x21bab98*/ void ShowHighlight();
        /*0x21bac64*/ void HideHighlight();
        /*0x21bac40*/ void ResetColor();
        /*0x21bac74*/ void SetColor(UnityEngine.Color color);
        /*0x21bac8c*/ void SetScale(UnityEngine.Vector2 gridSize);
        /*0x21bacac*/ void SetOffset(UnityEngine.Vector3 offset);
        /*0x21bacb8*/ void MoveTo(UnityEngine.Vector3 position);
        /*0x21bade4*/ UnityEngine.Vector3 GetPosition();
        /*0x21badf0*/ UnityEngine.Vector3 GetPositionWithoutOffset();
        /*0x21bae10*/ void SetIncline(Yeti.Data.BoardIncline incline);
    }

    interface ICombatObjectLifeCycleManager
    {
        /*0x1f302cc*/ UnityEngine.GameObject Create(string assetId);
        /*0x1f30ebc*/ void Destroy(UnityEngine.GameObject returnedObject);
        /*0x1f2fec8*/ bool CanCreateAsset(string assetId);
        /*0x1f30ebc*/ void AddTemplate(UnityEngine.GameObject prefab);
        /*0x1f309e4*/ void DecrementReportedAllocationsAfterSceneCleanup();
        /*0x1f30ebc*/ void RemoveTemplate(string assetId);
    }

    interface ICombatManagedObject
    {
        /*0x1f309e4*/ void OnReturnToPool();
    }

    interface ICombatUnitDefinitionProvider
    {
        /*0x1f30214*/ System.Collections.Generic.IList<Yeti.Data.UnitDefinition> get_Units();
        /*0x1f30214*/ System.Collections.Generic.Dictionary<int, Yeti.Data.UnitDefinition> get_UnitsById();
    }

    interface IDamageTypeDefinitionProvider
    {
        /*0x1f30240*/ Yeti.Data.DamageTypeDefinition GetDamageTypeDefinition(int damageTypeId);
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<Yeti.Data.DamageTypeDefinition> GetAllDamageTypeDefinitions();
    }

    interface IThreatVectorDefinitionProvider
    {
        /*0x1f30240*/ Yeti.Data.ThreatVectorDefinition GetThreatVectorDefinition(int threatVectorId);
    }

    interface IUnitTagDefinitionProvider
    {
        /*0x1f30240*/ Yeti.Data.UnitTag GetTagDefinition(int tagId);
    }

    class BasicObjectViewer
    {
        /*0x10*/ Yeti.ICombatObjectLifeCycleManager _objectManager;
        /*0x18*/ string _prefabId;
        /*0x20*/ UnityEngine.GameObject _moveUiView;

        /*0x21baea4*/ BasicObjectViewer(Yeti.ICombatObjectLifeCycleManager objectManager, string prefabId);
        /*0x21baee8*/ void Show(UnityEngine.Vector3 position);
        /*0x21bb024*/ void Hide();
    }

    class CheatGrantEnemyImmunityInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatInputStateContext _context;
        /*0x78*/ Yeti.CombatDebugViewController _debugViewController;

        /*0x21bb16c*/ CheatGrantEnemyImmunityInputState(Yeti.CombatInputStateContext context);
        /*0x21bb12c*/ string get_Name();
        /*0x21bb2c4*/ void OnEnter();
        /*0x21bb348*/ void OnExit();
        /*0x21bb428*/ void GrantEnemyImmunity(Yeti.BoardTappedEventArgs args);
        /*0x21bb4a8*/ void GrantEnemyImmunity(Yeti.UnitPuppet puppet);
    }

    class CheatModifyUnitStatInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatInputStateContext _context;
        /*0x78*/ Yeti.CombatDebugViewController _debugViewController;
        /*0x80*/ Yeti.Data.StatType _stat;
        /*0x84*/ int _value;

        /*0x21bb654*/ CheatModifyUnitStatInputState(Yeti.CombatInputStateContext context);
        /*0x21bb614*/ string get_Name();
        /*0x21bb7d0*/ void OnExit();
        /*0x21bb7e4*/ void ModifyUnitStat(Yeti.BoardTappedEventArgs args);
        /*0x21bb864*/ void ModifyUnitStat(Yeti.UnitPuppet puppet);
        /*0x21bb984*/ void SelectStatToModify(Yeti.CheatUnitStatSelectedEventArgs args);
        /*0x21bb9b8*/ string GetStatString(Yeti.Data.StatType statType, int value);
    }

    class CheatRemoveUnitInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatInputStateContext _context;
        /*0x78*/ Yeti.CombatDebugViewController _debugViewController;

        /*0x21bbb8c*/ CheatRemoveUnitInputState(Yeti.CombatInputStateContext context);
        /*0x21bbb4c*/ string get_Name();
        /*0x21bbc94*/ void OnEnter();
        /*0x21bbce4*/ void OnExit();
        /*0x21bbcf8*/ void CheatRemoveUnit(Yeti.BoardTappedEventArgs args);
        /*0x21bbd78*/ void RemoveUnit(Yeti.UnitPuppet puppet);
    }

    class CheatShowHealthUnitSelectedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatInputStateContext _context;
        /*0x78*/ Yeti.CombatDebugViewController _debugViewController;

        /*0x21bbea0*/ CheatShowHealthUnitSelectedInputState(Yeti.CombatInputStateContext context);
        /*0x21bbe60*/ string get_Name();
        /*0x21bbfa8*/ void OnEnter();
        /*0x21bbff8*/ void OnExit();
        /*0x21bc00c*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
    }

    class CheatSpawnUnitSelectedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatInputStateContext _context;
        /*0x78*/ Yeti.PreviewUnitStateBehaviour _previewUnitBehaviour;
        /*0x80*/ Yeti.CombatDebugViewController _debugViewController;
        /*0x88*/ int _selectedUnitId;
        /*0x8c*/ int _level;

        /*0x21bc184*/ CheatSpawnUnitSelectedInputState(Yeti.CombatInputStateContext context);
        /*0x21bc144*/ string get_Name();
        /*0x21bc37c*/ void OnEnter();
        /*0x21bc3a4*/ void OnUpdate(float deltaTime);
        /*0x21bc3bc*/ void OnExit();
        /*0x21bc3e8*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21bc414*/ void TryPlaceUnit(UnityEngine.Vector3 worldPosition);
        /*0x21bc5ec*/ void SelectUnitToCheatSpawn(Yeti.CheatUnitSelectedEventArgs args);
    }

    class CombatDebugViewController
    {
        /*0x10*/ Yeti.ICombatObjectLifeCycleManager _objectManager;
        /*0x18*/ Yeti.CombatDebugView _debugView;
        /*0x20*/ string _text;

        /*0x21bb274*/ CombatDebugViewController(Yeti.ICombatObjectLifeCycleManager objectManager);
        /*0x21bb314*/ void Show(string text);
        /*0x21bc868*/ void Show();
        /*0x21bc880*/ void SetText(string text);
        /*0x21bc6a4*/ void ShowView();
        /*0x21bc89c*/ void UpdateText(string text);
        /*0x21bc7e0*/ void UpdateView();
        /*0x21bb35c*/ void Hide();
        /*0x21bc8a4*/ bool IsShowing();
    }

    class CombatGameplayInputState : RSG.AbstractState
    {
        /*0x21bc944*/ CombatGameplayInputState(Yeti.CombatInputStateContext combatInputStateContext);
        /*0x21bc904*/ string get_Name();
    }

    class CombatInputActionAudioTracker
    {
        /*0x10*/ Yeti.CombatSceneState _combatScene;
        /*0x18*/ bool _tookAction;

        /*0x21bcd58*/ CombatInputActionAudioTracker(Yeti.CombatSceneState combatScene);
        /*0x21bcd88*/ void SetTookAction(bool tookAction);
        /*0x21bcd90*/ void PlayAudioEventIfNoActionTaken(int audioId);
    }

    enum CombatInputStateTransitions
    {
        LoadoutItemSelected = 0,
        MovePlantMode = 1,
        PromotePlantMode = 2,
        ReclaimPlantMode = 3,
        RemoveGrowthTimerMode = 4,
        PlantOnBoardSelected = 5,
        PlantOnBoardSelectedWithDrag = 6,
        PlantOnBoardSelectedWithTap = 7,
        ChangeFromPlantOnBoardDragToTap = 8,
        PlantFoodMode = 9,
        WaveBreakInput = 10,
        GameplayInput = 11,
        DisableInput = 12,
        UnlimitedResourcesMode = 13,
        CheatItemSelected = 14,
        CheatGrantEnemyImmunity = 15,
        CheatRemoveUnit = 16,
        InstantUsePlantSelected = 17,
        EstablishingShotsInput = 18,
        CheatModifyUnitStat = 19,
        LoadoutItemPressed = 20,
        OnBoardInstantUsePlantBoostSelected = 21,
        OnBoardPlantFoodBoostSelected = 22,
        CheatSelectUnitToShowHealth = 23,
        NoSelection = 24,
    }

    enum CombatInputStateEvents
    {
        LoadoutItemSelected = 0,
        CheatItemSelected = 1,
        BoardTapped = 2,
        BoardDragBegin = 3,
        CheatUnitStatSelected = 4,
        LoadoutItemDown = 5,
        OnBoardBoostSelected = 6,
    }

    class CombatUiElementTags
    {
        static string SunMeter = "SunMeter";
        static string SeedPacket = "SeedPacket";
    }

    class BoardTappedEventArgs : System.EventArgs
    {
        /*0x10*/ UnityEngine.Vector3 TappedWorldPosition;

        /*0x21bcdd0*/ BoardTappedEventArgs();
    }

    class LoadoutItemSelectedEventArgs : System.EventArgs
    {
        /*0x10*/ int LoadoutIndex;

        /*0x21bce28*/ LoadoutItemSelectedEventArgs();
    }

    class CheatUnitSelectedEventArgs : System.EventArgs
    {
        /*0x10*/ int UnitId;
        /*0x14*/ int Level;

        /*0x21bce80*/ CheatUnitSelectedEventArgs(int unitId, int level);
    }

    class CheatUnitStatSelectedEventArgs : System.EventArgs
    {
        /*0x10*/ Yeti.Data.StatType Stat;
        /*0x14*/ int Value;

        /*0x21bcef0*/ CheatUnitStatSelectedEventArgs(Yeti.Data.StatType stat, int value);
    }

    class OnBoardBoostSelectedEventArgs : System.EventArgs
    {
        /*0x10*/ int InstanceId;

        /*0x21bcf60*/ OnBoardBoostSelectedEventArgs();
    }

    class CombatInputGuiData
    {
        /*0x10*/ Yeti.PlantFoodInputViewData <PlantFoodInputViewData>k__BackingField;
        /*0x18*/ Yeti.ReclaimInputViewData <ReclaimInputViewData>k__BackingField;
        /*0x20*/ Yeti.InstantUsePlantDraggableGuiData <InstantUsePlantInputGuiData>k__BackingField;
        /*0x28*/ Yeti.MovePlantInputViewData <MovePlantInputViewData>k__BackingField;
        /*0x30*/ Yeti.RemoveGrowthTimerInputViewData <RemoveGrowthTimerInputViewData>k__BackingField;

        /*0x21bcfe0*/ CombatInputGuiData();
        /*0x21bcfb8*/ Yeti.PlantFoodInputViewData get_PlantFoodInputViewData();
        /*0x21bcfc0*/ Yeti.ReclaimInputViewData get_ReclaimInputViewData();
        /*0x21bcfc8*/ Yeti.InstantUsePlantDraggableGuiData get_InstantUsePlantInputGuiData();
        /*0x21bcfd0*/ Yeti.MovePlantInputViewData get_MovePlantInputViewData();
        /*0x21bcfd8*/ Yeti.RemoveGrowthTimerInputViewData get_RemoveGrowthTimerInputViewData();
    }

    class CombatInputStateContext
    {
        /*0x10*/ Yeti.CombatSceneState CombatSceneState;
        /*0x18*/ Yeti.ICombatObjectLifeCycleManager ObjectManager;
        /*0x20*/ Yeti.CombatCameraUtils CombatCameraUtils;
        /*0x28*/ Yeti.CombatInputGuiData CombatInputGuiData;

        /*0x21bd14c*/ CombatInputStateContext(Yeti.CombatSceneState combatSceneState, Yeti.ICombatObjectLifeCycleManager objectManager, Yeti.CombatCameraUtils cameraUtils);
    }

    class CombatInputRootState : RSG.AbstractState
    {
        static /*0x0*/ System.Collections.Generic.ISet<string> PausableGameStates;
        /*0x70*/ Yeti.CombatInputStateContext _context;
        /*0x78*/ Yeti.EditorInputController _editorInputController;
        /*0x80*/ Yeti.IGlobalDataTransfer _dataTransfer;
        /*0x88*/ CapitalGames.IMonoBehaviourEventNotifierSystem _eventNotifier;
        /*0x90*/ Yeti.CombatGuiModel _combatModel;
        /*0x98*/ Yeti.GameEventManager _gameEvents;
        /*0xa0*/ Yeti.INavigationService _navigationService;
        /*0xa8*/ PvzN3xt.BoostPurchaseController _boostPurchaseController;
        /*0xb0*/ Yeti.IPlayerInventoryDataManager _playerInventory;
        /*0xb8*/ PvzN3xt.Tutorial.ITutorialScriptManager _tutorialScriptManager;
        /*0xc0*/ Yeti.ITutorialController _tutorialController;
        /*0xc8*/ PvzN3xt.Tutorial.IUiAllowDenyListSystem _allowDenyListSystem;
        /*0xd0*/ Yeti.SeedPacketInputRootState _seedPacketInputController;
        /*0xd8*/ Yeti.DropCollectionInputController _dropCollectionInputController;
        /*0xe0*/ System.Action _enterEstablishingShotsInputActionCache;
        /*0xe8*/ System.Action _exitEstablishingShotsInputActionCache;
        /*0xf0*/ System.Action OnStartGameTapped;
        /*0xf8*/ System.Action DropCollected;

        static /*0x21c0be4*/ CombatInputRootState();
        static /*0x21c0b04*/ int SafeConvertLongToInt(long i);
        /*0x21aa0bc*/ CombatInputRootState(Yeti.CombatSceneState combatScene, Yeti.ICombatObjectLifeCycleManager objectManager, Yeti.CombatCameraUtils cameraUtils);
        /*0x21bd200*/ string get_Name();
        /*0x21bd240*/ Yeti.CombatInputGuiData get_GuiData();
        /*0x21aa93c*/ void add_OnStartGameTapped(System.Action value);
        /*0x21aac34*/ void remove_OnStartGameTapped(System.Action value);
        /*0x21bd258*/ void add_DropCollected(System.Action value);
        /*0x21bd2f4*/ void remove_DropCollected(System.Action value);
        /*0x21bd588*/ void OnEnter();
        /*0x21be5c8*/ void OnExit();
        /*0x21bea80*/ void OnUpdate(float deltaTime);
        /*0x21bf0c8*/ void StartGame();
        /*0x21bf108*/ void EnterEstablishingShotsInput();
        /*0x21bf114*/ void ExitEstablishingShotsInput();
        /*0x21bf120*/ void EnterWaveBreakInput();
        /*0x21bf12c*/ void ExitWaveBreakInput();
        /*0x21bf138*/ void PauseGame();
        /*0x21bf198*/ void ResumeGame();
        /*0x21bf1c0*/ void OnBackButtonPressed();
        /*0x21bf168*/ void CancelInputsForPause();
        /*0x21bf3a4*/ void EndGame(Yeti.EndCombatCause cause);
        /*0x21bf3b0*/ void InterpretBoardClick(UnityEngine.Vector3 screenPosition);
        /*0x21bf820*/ void HandleBoardLocationInteracted(UnityEngine.Vector3 worldPosition);
        /*0x21bfa9c*/ void InterpretBoardDragBegin(UnityEngine.Vector3 screenPosition);
        /*0x21bfb90*/ void InterpretBoardDragEnd(UnityEngine.Vector3 screenPosition);
        /*0x21bf690*/ void TransitionToInputStateOnPlantTap(UnityEngine.Vector3 worldPosition, Yeti.CombatInputStateTransitions transitionEvent);
        /*0x21bf8e8*/ void TransitionToInputStateOnOnBoardBoostTap(UnityEngine.Vector3 worldPosition);
        /*0x21bfbf4*/ void OnLoadoutUnitClicked(int loadoutIndex);
        /*0x21bfc7c*/ void OnSeedPacketDown(Yeti.GameEvents.Combat.SeedPacketClickedArgs eventArgs);
        /*0x21bfd3c*/ void OnSeedPacketClicked(Yeti.GameEvents.Combat.SeedPacketClickedArgs args);
        /*0x21bfd58*/ void OnSeedPacketDragBegin(Yeti.GameEvents.Combat.SeedPacketClickedArgs args);
        /*0x21bfd74*/ void OnSeedPacketDragEnd(Yeti.GameEvents.Combat.SeedPacketClickedArgs args);
        /*0x21bfdec*/ void SetPlantDetailsUnit(int unitId);
        /*0x21c000c*/ void CheatSetSelectedUnit(int unitId, int level);
        /*0x21c0094*/ void SetMoveMode(UnityEngine.Vector3 position);
        /*0x21c00d8*/ void SetPromoteMode(UnityEngine.Vector3 position);
        /*0x21c00e0*/ void SetReclaimMode(UnityEngine.Vector3 position);
        /*0x21c00e8*/ void SetPlantFoodMode(UnityEngine.Vector3 position);
        /*0x21c00f0*/ void SetRemoveGrowthTimerMode(UnityEngine.Vector3 position);
        /*0x21c00f8*/ void EnterUnlimitedResourcesModeInput();
        /*0x21c0104*/ void EnterCheatGrantEnemyImmunityState();
        /*0x21c0110*/ void EnterCheatRemoveUnitState();
        /*0x21c011c*/ void EnterCheatShowUnitHealth();
        /*0x21c0128*/ void EnterCheatModifyUnitStatState(Yeti.Data.StatType statType, int value);
        /*0x21c01b0*/ void OnTurboTapped();
        /*0x21c01dc*/ void SetInstantUsePlant1Mode(UnityEngine.Vector3 position);
        /*0x21c02ec*/ void SetInstantUsePlant2Mode(UnityEngine.Vector3 position);
        /*0x21c02f4*/ void SetInstantUsePlant3Mode(UnityEngine.Vector3 position);
        /*0x21c01e4*/ void SetInstantUsePlantMode(int index);
        /*0x21c009c*/ void TransitionToNewGuiInputMode(Yeti.CombatInputStateTransitions transitionType);
        /*0x21c02fc*/ void OnAbandonClicked();
        /*0x21c03bc*/ void OnAbandonConfirmClicked();
        /*0x21c0478*/ void OnInGameBoostPurchase1Clicked();
        /*0x21c053c*/ void OnInGameBoostPurchase2Clicked();
        /*0x21c0544*/ void OnInGameBoostPurchase3Clicked();
        /*0x21c0480*/ void OnInGameBoostPurchaseClicked(int index);
        /*0x21c054c*/ void PromptInGamePurchase(int boostId);
        /*0x21c0638*/ void OnPauseCombat();
        /*0x21c0660*/ void OnResumeCombat();
        /*0x21c0688*/ void OnCascadeUnitClicked();
        /*0x21c06ac*/ void OnInventoryUpdated();
        /*0x21bf1f4*/ bool CanPauseGame();
        /*0x21bf378*/ bool ShouldHidePauseMenu();
        /*0x21c0b14*/ void OnApplicationFocused(CapitalGames.IMonoBehaviourEventNotifierSystem sender, bool focused);
        /*0x21c0bc8*/ void NotifyDropCollectedToExternalSystems();
    }

    class DraggedPuppetView
    {
        /*0x10*/ Yeti.IUnitPuppetAvatarView _previewPuppet;
        /*0x18*/ Yeti.CombatSceneState _combatScene;
        /*0x20*/ Yeti.ICombatObjectLifeCycleManager _objectManager;
        /*0x28*/ Yeti.DraggedTargetPatternView _targetPatternView;
        /*0x30*/ Yeti.PuppetAvatarContext _puppetAvatarContext;

        /*0x21c0d08*/ DraggedPuppetView(Yeti.ICombatObjectLifeCycleManager objectManager, Yeti.CombatSceneState combatScene);
        /*0x21c0ce0*/ UnityEngine.Vector3 get_DraggedPuppetOffset();
        /*0x21c0e90*/ void ShowPuppet(Yeti.Data.UnitDefinition unitDefinition, UnityEngine.Vector3 boardPosition);
        /*0x21c145c*/ void HidePuppet();
        /*0x21c15e8*/ void ShowTargetPattern();
        /*0x21c1620*/ void HideTargetPattern();
        /*0x21c1658*/ void Update(float deltaTime);
    }

    class DraggedTargetPatternView
    {
        /*0x10*/ Yeti.TargetPatternViewer _targetPatternViewer;
        /*0x18*/ YetiSimCoreLib.Game.BoardInclineMap _boardInclineMap;
        /*0x20*/ Yeti.TargetPatternView _targetPatternView;

        /*0x21c0e4c*/ DraggedTargetPatternView(Yeti.TargetPatternViewer targetPatternViewer, YetiSimCoreLib.Game.BoardInclineMap boardInclineMap);
        /*0x21c11b0*/ void SetPattern(Yeti.IUnitPuppetAvatarView unitAvatar, Yeti.Data.UnitDefinition unitDefinition);
        /*0x21c139c*/ void MoveTo(UnityEngine.Vector3 boardPosition);
        /*0x21c160c*/ void Show();
        /*0x21c1644*/ void Hide();
        /*0x21c15a8*/ void Clear();
    }

    class DropCollectionInputController
    {
        /*0x10*/ System.Action DropCollected;
        /*0x18*/ Yeti.CombatSceneState _combatScene;
        /*0x20*/ Yeti.CombatCameraUtils _cameraUtils;
        /*0x28*/ Yeti.GameEventManager _gameEvents;
        /*0x30*/ System.Collections.Generic.List<Yeti.SunPuppet> _tempSunList;
        /*0x38*/ System.Collections.Generic.List<Yeti.OnBoardDropPuppet> _tempDropsList;

        /*0x21bd464*/ DropCollectionInputController(Yeti.CombatInputStateContext context, Yeti.GameEventManager gameEventManager);
        /*0x21be52c*/ void add_DropCollected(System.Action value);
        /*0x21be9e4*/ void remove_DropCollected(System.Action value);
        /*0x21bea94*/ void OnUpdate();
        /*0x21be454*/ void StartCheckingForDropCollection();
        /*0x21c1718*/ void HandleUiDragged(UnityEngine.Vector3 screenPosition);
        /*0x21bf430*/ bool CheckForDropCollect(UnityEngine.Vector3 worldPositionOnBoard);
        /*0x21c1740*/ bool TryCollectSun(UnityEngine.Vector3 worldPositionOnBoard);
        /*0x21c18dc*/ bool TryCollectDrops(UnityEngine.Vector3 worldPositionOnBoard);
        /*0x21be9c8*/ void StopCheckingForDropCollection();
    }

    class EstablishingShotsInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.EstablishingShotsController _controller;

        /*0x21bd390*/ EstablishingShotsInputState(Yeti.CombatInputStateContext combatInputStateContext);
        /*0x21c1a78*/ string get_Name();
        /*0x21c1ab8*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
    }

    class GridCellOccupancyCollection
    {
        /*0x10*/ Yeti.GridCellOccupancyCollection.Occupancy[,] _occupancies;

        static /*0x21c214c*/ bool CanPlaceCellOccupier(Yeti.GridCellOccupancyCollection.Occupancy occupancy);
        /*0x21c1ad8*/ GridCellOccupancyCollection(YetiSimCoreLib.Game.UnitDatabase unitDatabase);
        /*0x21c1cdc*/ void Reset();
        /*0x21c1e5c*/ bool IsRestricted(Yeti.GridArea area);
        /*0x21c1fd0*/ bool CanPlaceCellOccupier(Yeti.GridArea area);
        /*0x21c2178*/ Yeti.UnitMovementInfo GetCellOccupancyMovementErrors(Yeti.GridArea area);
        /*0x21c2350*/ void SetOccupied(YetiSimCoreLib.Game.GridCell cell, Yeti.UnitPuppet puppet, bool unitAdded, bool occupied);
        /*0x21c263c*/ void RemovePuppet(Yeti.UnitPuppet puppet);
        /*0x21c2708*/ Yeti.UnitPuppet GetPuppet(YetiSimCoreLib.Game.GridCell cell);
        /*0x21c28d4*/ void CopyExcluding(Yeti.GridCellOccupancyCollection copy, Yeti.UnitPuppet exclude);
        /*0x21c2b48*/ void SetRestricted(YetiSimCoreLib.Game.UnitGridCellArea area);

        class Occupancy
        {
            /*0x10*/ bool <IsOccupied>k__BackingField;
            /*0x11*/ bool <IsRestricted>k__BackingField;
            /*0x18*/ System.Collections.Generic.List<Yeti.UnitPuppet> _puppets;
            /*0x20*/ YetiSimCoreLib.Game.UnitDatabase _unitDatabase;

            /*0x21c1c40*/ Occupancy(YetiSimCoreLib.Game.UnitDatabase unitDatabase);
            /*0x21c2a18*/ Occupancy(Yeti.GridCellOccupancyCollection.Occupancy copy, Yeti.UnitPuppet exclusion);
            /*0x21c2cbc*/ bool get_IsOccupied();
            /*0x21c2cc4*/ void set_IsOccupied(bool value);
            /*0x21c2ccc*/ bool get_IsRestricted();
            /*0x21c2cd4*/ void set_IsRestricted(bool value);
            /*0x21c2cdc*/ System.Collections.Generic.IReadOnlyList<Yeti.UnitPuppet> get_Puppets();
            /*0x21c2458*/ void AddOccupant(Yeti.UnitPuppet puppet);
            /*0x21c2ce4*/ bool HasHigherOrEqualTargetPriority(Yeti.UnitPuppet source, Yeti.UnitPuppet other);
            /*0x21c25e4*/ void RemoveOccupant(Yeti.UnitPuppet puppet);
            /*0x21c2450*/ void SetOccupied(bool isOccupied);
            /*0x21c2cb0*/ void SetRestricted();
            /*0x21c1dbc*/ void Reset();
        }
    }

    class InputControllerGraphBuilder
    {
        static /*0x21bca0c*/ void AddGameplaySpecificInputs(RSG.AbstractState parentState, Yeti.CombatInputStateContext combatInputStateContext, RSG.AbstractState noSelectionState);
        static /*0x21c3570*/ void AddWaveBreakSpecificInputs(RSG.AbstractState parentState, Yeti.CombatInputStateContext combatInputStateContext, RSG.AbstractState noSelectionState);
        static /*0x21bcc7c*/ void AddGameplayWaveBreakSharedInputs(RSG.AbstractState parentState, Yeti.CombatInputStateContext combatInputStateContext, RSG.AbstractState noSelectionState);
        static /*0x21c3c5c*/ void AddCheatInputs(RSG.AbstractState parentState, Yeti.CombatInputStateContext combatInputStateContext, RSG.AbstractState noSelectionState);
        static /*0x21c2eac*/ void AddBasicInputState(RSG.AbstractState inputState, RSG.AbstractState parentState, Yeti.CombatInputStateTransitions transitionEvent, RSG.AbstractState noSelectionState);
    }

    class InstantUsePlantDraggableGuiData
    {
        /*0x10*/ bool <IsModeActive>k__BackingField;
        /*0x14*/ int <UnitId>k__BackingField;

        /*0x21bd13c*/ InstantUsePlantDraggableGuiData();
        /*0x21c3dd0*/ bool get_IsModeActive();
        /*0x21c3dd8*/ void set_IsModeActive(bool value);
        /*0x21c3de0*/ int get_UnitId();
        /*0x21c3de8*/ void set_UnitId(int value);
    }

    class InstantUsePlantSelectedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.CombatSceneState _combatScene;
        /*0x80*/ YetiSimCoreLib.Messaging.SimErrorEventHandler _onSimErrorEventDelegate;
        /*0x88*/ Yeti.CombatInputActionAudioTracker _audioTracker;
        /*0x90*/ Yeti.PreviewUnitStateBehaviour _previewUnitBehaviour;
        /*0x98*/ Yeti.UnitMovementValidator _movementValidator;
        /*0xa0*/ int _selectedUnitId;

        /*0x21c2f14*/ InstantUsePlantSelectedInputState(Yeti.CombatInputStateContext context);
        /*0x21c3df0*/ string get_Name();
        /*0x21c3e30*/ void OnEnter();
        /*0x21c3f50*/ void ChangeSelectedItem(Yeti.LoadoutItemSelectedEventArgs args);
        /*0x21c3fe8*/ void OnUpdate(float deltaTime);
        /*0x21c4000*/ void OnExit();
        /*0x21c4140*/ void PlacePlantOnBoard(Yeti.BoardTappedEventArgs args);
        /*0x21c4158*/ void PlacePlantOnBoard(UnityEngine.Vector3 worldPosition);
        /*0x21c42a8*/ void HandleSimError(YetiSimCoreLib.Messaging.Events.SimErrorEventArgs args);
    }

    class LoadoutUnitPressedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatSceneState _combatScene;

        /*0x21c2de8*/ LoadoutUnitPressedInputState(Yeti.CombatInputStateContext context);
        /*0x21c42dc*/ string get_Name();
        /*0x21c431c*/ void HandleDown(Yeti.LoadoutItemSelectedEventArgs eventArgs);
        /*0x21c43b4*/ void OnExit();
    }

    class LoadoutUnitSelectedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x80*/ Yeti.IDamageTypeDefinitionProvider _damageTypeDefinitionProvider;
        /*0x88*/ Yeti.GameEventManager _gameEvents;
        /*0x90*/ Yeti.CombatSceneState _combatScene;
        /*0x98*/ Yeti.UnitMovementValidator _movementValidator;
        /*0xa0*/ Yeti.PreviewUnitStateBehaviour _previewUnitBehaviour;
        /*0xa8*/ Yeti.MergeUtils _mergeUtils;
        /*0xb0*/ int _selectedLoadoutIndex;
        /*0xb4*/ UnityEngine.Vector3 _attemptedPlacementLocation;
        /*0xc0*/ System.Action _onMergePreviewDelegate;

        /*0x21c3940*/ LoadoutUnitSelectedInputState(Yeti.CombatInputStateContext context);
        /*0x21c43d8*/ string get_Name();
        /*0x21c4418*/ Yeti.CombatSoundIds get__soundIds();
        /*0x21c443c*/ void OnEnter();
        /*0x21c44c8*/ void OnUpdate(float deltaTime);
        /*0x21c4530*/ void OnExit();
        /*0x21c458c*/ void HideDamageTypePreviewIfSelectedAPlantableUnit();
        /*0x21c45c4*/ void PlacePlantOnBoard(Yeti.BoardTappedEventArgs args);
        /*0x21c49f0*/ void ToggleSelectedLoadoutItemId(Yeti.LoadoutItemSelectedEventArgs args);
        /*0x21c4a88*/ void SelectUnitIndex(int loadoutIndex);
        /*0x21c4b6c*/ void HandleMergePreviewToggled();
    }

    class BoardPlacementErrorUtils
    {
        static /*0x21c4838*/ void TryShowPlacementErrorFeedback(YetiSimCoreLib.Game.GridCell gridCell, Yeti.CombatSceneState combatScene);
    }

    class MergePlantsInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.CombatSceneState _combatScene;
        /*0x80*/ Yeti.CombatInputActionAudioTracker _audioTracker;

        /*0x21c3278*/ MergePlantsInputState(Yeti.CombatInputStateContext context);
        /*0x21c4b84*/ string get_Name();
        /*0x21c4bc4*/ void OnEnter();
        /*0x21c4bec*/ void OnExit();
        /*0x21c4c44*/ void HandleAnyChildComplete();
    }

    class MovePlantInputViewData
    {
        /*0x10*/ bool <IsMoveModeActive>k__BackingField;

        /*0x21bd144*/ MovePlantInputViewData();
        /*0x21c4c64*/ bool get_IsMoveModeActive();
        /*0x21c4c6c*/ void set_IsMoveModeActive(bool value);
    }

    class MovePlantInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.CombatSceneState _combatScene;
        /*0x80*/ Yeti.CombatInputActionAudioTracker _audioTracker;

        /*0x21c3648*/ MovePlantInputState(Yeti.CombatInputStateContext context);
        /*0x21c4c74*/ string get_Name();
        /*0x21c4cb4*/ void OnEnter();
        /*0x21c4cdc*/ void OnExit();
        /*0x21c4d34*/ void HandleAnyChildComplete();
    }

    class MovePlantWaitingForInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatSceneState _combatScene;
        /*0x78*/ RSG.AbstractState _parent;

        /*0x21c4d94*/ MovePlantWaitingForInputState(Yeti.CombatInputStateContext context, RSG.AbstractState parent);
        /*0x21c4d54*/ string get_Name();
        /*0x21c4eb8*/ void OnEnter();
        /*0x21c4f10*/ void HandleBoardDragBegin(Yeti.BoardTappedEventArgs args);
        /*0x21c5044*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21c4f7c*/ bool IsInteractingWithPlantAt(UnityEngine.Vector3 worldPosition);
        /*0x21c4fd8*/ void CancelInteraction();
    }

    class NoSelectionInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.VaseBreakInputController _vaseBreakInputController;
        /*0x78*/ Yeti.CombatSceneState _combatScene;

        /*0x21c50f0*/ NoSelectionInputState(Yeti.CombatInputStateContext context);
        /*0x21c50b0*/ string get_Name();
        /*0x21c522c*/ void CheckForUnitTap(Yeti.BoardTappedEventArgs args);
        /*0x21c54dc*/ void CheckForTapActivateAbility(UnityEngine.Vector3 worldPositionOnBoard);
    }

    class OnBoardInstantUsePlantBoostSelectedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.CombatSceneState _combatScene;
        /*0x80*/ Yeti.PlantPlacementArea _plantPlacementArea;
        /*0x88*/ System.Action<UnityEngine.Vector3> _moveDraggerObjectDelegate;
        /*0x90*/ YetiSimCoreLib.Messaging.SimErrorEventHandler _onSimErrorEventDelegate;
        /*0x98*/ Yeti.CombatInputActionAudioTracker _audioTracker;
        /*0xa0*/ Yeti.PreviewUnitStateBehaviour _previewUnitBehaviour;
        /*0xa8*/ int _selectedInstanceId;
        /*0xac*/ int _selectedUnitId;
        /*0xb0*/ int _selectionInputFrame;

        /*0x21c55a0*/ OnBoardInstantUsePlantBoostSelectedInputState(Yeti.CombatInputStateContext context);
        /*0x21c5560*/ string get_Name();
        /*0x21c5d0c*/ void OnEnter();
        /*0x21c5d10*/ void HandleBoostSelected(Yeti.OnBoardBoostSelectedEventArgs args);
        /*0x21c60b0*/ void OnUpdate(float deltaTime);
        /*0x21c60ec*/ void OnExit();
        /*0x21c62c8*/ void PlacePlantOnBoard(Yeti.BoardTappedEventArgs args);
        /*0x21c62e0*/ void PlacePlantOnBoard(UnityEngine.Vector3 worldPosition);
        /*0x21c65a0*/ void HandleSimError(YetiSimCoreLib.Messaging.Events.SimErrorEventArgs args);
    }

    class OnBoardPlantFoodBoostSelectedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ Yeti.CombatSceneState _combatScene;
        /*0x88*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x90*/ Yeti.CombatInputActionAudioTracker _audioTracker;
        /*0x98*/ YetiSimCoreLib.Messaging.SimErrorEventHandler _onSimErrorEventDelegate;
        /*0xa0*/ System.Action<UnityEngine.Vector3> _onCombatUiDraggedDelegate;
        /*0xa8*/ int _selectedInstanceId;
        /*0xac*/ int _selectionInputFrame;

        /*0x21c6614*/ OnBoardPlantFoodBoostSelectedInputState(Yeti.CombatInputStateContext context);
        /*0x21c65d4*/ string get_Name();
        /*0x21c6930*/ void OnEnter();
        /*0x21c6934*/ void HandleBoostSelected(Yeti.OnBoardBoostSelectedEventArgs args);
        /*0x21c6b20*/ void MovePlantFoodDragPrefab(UnityEngine.Vector3 screenPosition);
        /*0x21c6ca8*/ void OnExit();
        /*0x21c6e0c*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21c6f84*/ void HandleSimError(YetiSimCoreLib.Messaging.Events.SimErrorEventArgs args);
    }

    class PlantFoodInputViewData
    {
        /*0x10*/ bool <IsDragging>k__BackingField;
        /*0x14*/ UnityEngine.Vector3 <DragPosition>k__BackingField;
        /*0x20*/ bool <IsModeActive>k__BackingField;

        /*0x21c6ff4*/ PlantFoodInputViewData();
        /*0x21c6fbc*/ bool get_IsDragging();
        /*0x21c6fc4*/ void set_IsDragging(bool value);
        /*0x21c6fcc*/ UnityEngine.Vector3 get_DragPosition();
        /*0x21c6fd8*/ void set_DragPosition(UnityEngine.Vector3 value);
        /*0x21c6fe4*/ bool get_IsModeActive();
        /*0x21c6fec*/ void set_IsModeActive(bool value);
    }

    class PlantFoodInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ Yeti.CombatSceneState _combatScene;
        /*0x88*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x90*/ Yeti.CombatInputActionAudioTracker _audioTracker;
        /*0x98*/ YetiSimCoreLib.Messaging.SimErrorEventHandler _onSimErrorEventDelegate;
        /*0xa0*/ System.Action<UnityEngine.Vector3> _onCombatUiDraggedDelegate;
        /*0xa8*/ System.Collections.Generic.List<UnityEngine.GameObject> _tappedUiElements;

        /*0x21c703c*/ PlantFoodInputState(Yeti.CombatInputStateContext context);
        /*0x21c6ffc*/ string get_Name();
        /*0x21c7304*/ void OnEnter();
        /*0x21c7480*/ void MovePlantFoodDragPrefab(UnityEngine.Vector3 screenPosition);
        /*0x21c7608*/ void OnExit();
        /*0x21c7738*/ void HandleSimError(YetiSimCoreLib.Messaging.Events.SimErrorEventArgs args);
        /*0x21c7770*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21c77bc*/ bool CheckForTappedPlant(UnityEngine.Vector3 tappedWorldPosition);
        /*0x21c7914*/ bool CheckForTappedUiElements(UnityEngine.Vector3 tappedWorldPosition);
    }

    class MergeUtils
    {
        /*0x10*/ PvzN3xt.Tutorial.IUiAllowDenyListSystem _allowDenyListSystem;
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x20*/ Yeti.CombatInputStateContext _context;
        /*0x28*/ YetiSimCoreCommon.Utils.MergeDefinitionProvider _mergeDefinitionProvider;
        /*0x30*/ int _highlightedUnitId;

        /*0x21c7bd8*/ MergeUtils(Yeti.CombatInputStateContext context);
        /*0x21c7e00*/ bool CanMergeOnBoard(Yeti.UnitPuppet unitA, Yeti.UnitPuppet unitB, YetiSimCoreLib.Game.GridCell cell);
        /*0x21c7f08*/ bool CanMergeFromLoadout(int loadoutIndex, YetiSimCoreLib.Game.GridCell cell);
        /*0x21c8104*/ void ShowAllMergePreviewsAndHighlightTargets(Yeti.UnitPuppet selectedUnit, UnityEngine.Vector3 initialPosition);
        /*0x21c8800*/ void ShowAllMergePreviews(int loadoutIndex, int unitId);
        /*0x21c8778*/ void ShowMergeTargetHighlight(UnityEngine.Vector3 worldPosition, UnityEngine.Color color);
        /*0x21c863c*/ void ShowMergePreview(int resultUnitId, Yeti.UnitPuppet puppetToBeMergedOn);
        /*0x21c8608*/ void ClearMergePreviewIfUnitChanged(int unitId);
        /*0x21c8a9c*/ void ClearAllMergePreviews();
    }

    class PlantOnBoardSelectedForMergeWithDragInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ Yeti.CombatInputStateContext _context;
        /*0x88*/ Yeti.PlantPuppetMover _plantMover;
        /*0x90*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x98*/ Yeti.MergeUtils _mergeUtils;
        /*0xa0*/ System.Action<UnityEngine.Vector3> _onUiDraggedDelegate;
        /*0xa8*/ System.Action<UnityEngine.Vector3> _onDragEndDelegate;
        /*0xb0*/ System.Action _onMergePreviewDelegate;

        /*0x21c8cb8*/ PlantOnBoardSelectedForMergeWithDragInputState(Yeti.CombatInputStateContext context);
        /*0x21c8c78*/ string get_Name();
        /*0x21c9364*/ void OnEnter();
        /*0x21c9558*/ void OnUpdate(float time);
        /*0x21c9584*/ void OnExit();
        /*0x21c973c*/ void HandleDragBegin(Yeti.BoardTappedEventArgs args);
        /*0x21c98e8*/ void HandleDrag(UnityEngine.Vector3 screenPosition);
        /*0x21c9964*/ void HandleDragEnd(UnityEngine.Vector3 screenPosition);
        /*0x21c9d94*/ void HandleSelectedUnitDied(Yeti.UnitPuppet sender);
        /*0x21c9d9c*/ void HandleMergePreviewToggled();
    }

    class PlantOnBoardSelectedForMergeWithTapInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ Yeti.CombatSceneState _combatScene;
        /*0x88*/ Yeti.PlantPuppetMover _plantMover;
        /*0x90*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x98*/ Yeti.MergeUtils _mergeUtils;
        /*0xa0*/ System.Action<UnityEngine.Vector3> _onUiDraggedDelegate;
        /*0xa8*/ System.Action _onMergePreviewDelegate;
        /*0xb0*/ bool _draggedAfterTap;

        /*0x21c9df0*/ PlantOnBoardSelectedForMergeWithTapInputState(Yeti.CombatInputStateContext context);
        /*0x21c9db0*/ string get_Name();
        /*0x21ca110*/ void OnEnter();
        /*0x21ca1d4*/ void OnUpdate(float time);
        /*0x21ca200*/ void OnExit();
        /*0x21ca240*/ void HandleDrag(UnityEngine.Vector3 screenPosition);
        /*0x21ca274*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21ca4b8*/ void HandleSelectedUnitDied(Yeti.UnitPuppet sender);
        /*0x21ca4c0*/ void HandleMergePreviewToggled();
    }

    class PlantOnBoardSelectedWithDragInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ Yeti.CombatInputStateContext _context;
        /*0x88*/ Yeti.PlantPuppetMover _plantMover;
        /*0x90*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x98*/ System.Action<UnityEngine.Vector3> _previewMoveDelegate;
        /*0xa0*/ System.Action<UnityEngine.Vector3> _movePlantDelegate;

        /*0x21ca514*/ PlantOnBoardSelectedWithDragInputState(Yeti.CombatInputStateContext context);
        /*0x21ca4d4*/ string get_Name();
        /*0x21ca7e4*/ void OnEnter();
        /*0x21ca8b0*/ void OnExit();
        /*0x21ca8e0*/ void HandleDragBegin(Yeti.BoardTappedEventArgs args);
        /*0x21cadd4*/ void PreviewMove(UnityEngine.Vector3 screenPosition);
        /*0x21cae50*/ void MovePlant(UnityEngine.Vector3 screenPosition);
        /*0x21cb278*/ void HandleSelectedUnitDied(Yeti.UnitPuppet sender);
    }

    class PlantOnBoardSelectedWithTapInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ Yeti.CombatSceneState _combatScene;
        /*0x88*/ Yeti.PlantPuppetMover _plantMover;
        /*0x90*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x98*/ System.Action<UnityEngine.Vector3> _previewMoveDelegate;

        /*0x21cb2c0*/ PlantOnBoardSelectedWithTapInputState(Yeti.CombatInputStateContext context);
        /*0x21cb280*/ string get_Name();
        /*0x21cb550*/ void OnEnter();
        /*0x21cb5f4*/ void OnExit();
        /*0x21cb624*/ void PreviewMove(UnityEngine.Vector3 screenPosition);
        /*0x21cb650*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21cb844*/ void MovePlant(Yeti.BoardTappedEventArgs args);
        /*0x21cb81c*/ void SwapPlants(Yeti.UnitPuppet tappedPlant);
        /*0x21cb878*/ void HandleSelectedUnitDied(Yeti.UnitPuppet sender);
    }

    class PlantPlacementArea
    {
        /*0x10*/ Yeti.CombatDefinitionData _definitionData;
        /*0x18*/ int _rowSpan;
        /*0x1c*/ int _columnSpan;

        /*0x21c593c*/ PlantPlacementArea(Yeti.CombatSceneState combatScene);
        /*0x21cb880*/ PlantPlacementArea(Yeti.CombatDefinitionData definitionData);
        /*0x21c5f58*/ void SetUnitId(int unitId);
        /*0x21cb8b0*/ void SetUnit(Yeti.Data.UnitDefinition unit);
        /*0x21c6454*/ Yeti.GridArea GetGridArea(UnityEngine.Vector3 boardPosition);
    }

    struct GridArea
    {
        static /*0x0*/ Yeti.GridArea Empty;
        /*0x10*/ int Left;
        /*0x14*/ int Right;
        /*0x18*/ int Top;
        /*0x1c*/ int Bottom;

        static /*0x21cb9c4*/ GridArea();
        /*0x21cb8ec*/ GridArea(int left, int right, int top, int bottom);
        /*0x21c657c*/ YetiSimCoreLib.Game.GridCell get_PlacementCell();
        /*0x21cb8f8*/ UnityEngine.Vector3 get_MidPoint();
    }

    class PlantPuppetMover
    {
        /*0x10*/ Yeti.OnDiedHandler<Yeti.UnitPuppet> OnUnitDied;
        /*0x18*/ Yeti.CombatSceneState _combatScene;
        /*0x20*/ Yeti.PlantPlacementArea _plantArea;
        /*0x28*/ Yeti.UnitMovementValidator _movementValidator;
        /*0x30*/ Yeti.GridCellOccupancyCollection _gridOccupancy;
        /*0x38*/ Yeti.DraggedTargetPatternView _targetPatternView;
        /*0x40*/ Yeti.BasicObjectViewer _basicObjectViewer;
        /*0x48*/ Yeti.CombatGuiModel _combatModel;
        /*0x50*/ Yeti.OnDiedHandler<Yeti.UnitPuppet> _onDiedHandler;
        /*0x58*/ YetiSimCoreLib.Messaging.SimErrorEventHandler _onSimErrorEventDelegate;
        /*0x60*/ Yeti.UnitPuppet _selectedUnit;
        /*0x68*/ UnityEngine.Vector3 _selectedUnitLastWorldTerrainPosition;
        /*0x74*/ UnityEngine.Vector3 _selectedUnitOriginalVisualOffset;
        /*0x80*/ bool _plantWasMoved;
        /*0x81*/ bool _simError;
        /*0x84*/ YetiSimCoreLib.Game.UnitId _swappedPlant;

        /*0x21c9014*/ PlantPuppetMover(Yeti.CombatSceneState combatScene, Yeti.ICombatObjectLifeCycleManager objectManager, Yeti.CombatGuiModel combatModel);
        /*0x21c92b4*/ void add_OnUnitDied(Yeti.OnDiedHandler<Yeti.UnitPuppet> value);
        /*0x21cba0c*/ void remove_OnUnitDied(Yeti.OnDiedHandler<Yeti.UnitPuppet> value);
        /*0x21cbabc*/ UnityEngine.Vector3 get_DraggedPuppetOffset();
        /*0x21cbae4*/ void HandleSimError(YetiSimCoreLib.Messaging.Events.SimErrorEventArgs args);
        /*0x21c9450*/ void Enter();
        /*0x21c95c0*/ void Exit();
        /*0x21cbb24*/ void ClearSelection();
        /*0x21c9aa4*/ bool HasUnitSelected();
        /*0x21caa54*/ void SelectUnit(Yeti.UnitPuppet selectedUnit, bool highlightTargetPattern);
        /*0x21c98bc*/ void SelectUnitForMerge(Yeti.UnitPuppet selectedUnit);
        /*0x21cbdb4*/ void HandleSelectedUnitDied(Yeti.UnitPuppet sender);
        /*0x21cae00*/ void PreviewMove(UnityEngine.Vector3 worldPosition);
        /*0x21c9914*/ void PreviewMerge(UnityEngine.Vector3 worldPosition);
        /*0x21cbdf8*/ void UpdatePreview(UnityEngine.Vector3 worldPosition);
        /*0x21cbc88*/ void ShowUiVisuals(UnityEngine.Vector3 worldPosition, Yeti.GridArea gridArea);
        /*0x21cbc3c*/ void ResetUiVisuals();
        /*0x21cb024*/ void MovePlant(UnityEngine.Vector3 worldPosition);
        /*0x21c9ca0*/ void CancelMove();
        /*0x21cc0c4*/ bool IsInitialCell(YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21caf00*/ void SwapPlants(Yeti.UnitPuppet targetPlant);
        /*0x21c9ab4*/ void MergePlants(Yeti.UnitPuppet targetPlant);
        /*0x21cc194*/ Yeti.UnitPuppet get_SelectedUnit();
        /*0x21cc19c*/ UnityEngine.Vector3 get_InitialWorldPosition();
    }

    class PreviewUnitStateBehaviour
    {
        /*0x10*/ Yeti.GameEventManager _gameEvents;
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x20*/ Yeti.CombatSceneState _combatScene;
        /*0x28*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x30*/ Yeti.DraggedPuppetView _draggedPuppetView;
        /*0x38*/ Yeti.UnitMovementValidator _movementValidator;
        /*0x40*/ bool _isForLoadout;
        /*0x48*/ System.Action<UnityEngine.Vector3> _movePreviewDelegate;
        /*0x50*/ Yeti.PlantPlacementArea _plantArea;
        /*0x58*/ int _loadoutIndex;
        /*0x60*/ Yeti.Data.UnitDefinition _selectedUnit;
        /*0x68*/ bool _validateForInstantUse;
        /*0x6c*/ UnityEngine.Vector3 _lastPosition;

        /*0x21c5ae4*/ PreviewUnitStateBehaviour(Yeti.CombatInputStateContext context, Yeti.UnitMovementValidator movementValidator, bool isForLoadout);
        /*0x21cc1a8*/ Yeti.Data.UnitDefinition get_SelectedUnit();
        /*0x21cc1b0*/ UnityEngine.Vector3 get_LastPosition();
        /*0x21c5fa4*/ void OnEnter();
        /*0x21c60d4*/ void OnUpdate(float deltaTime);
        /*0x21c621c*/ void OnExit();
        /*0x21cc1bc*/ void MovePreviewPuppet(UnityEngine.Vector3 screenPosition);
        /*0x21cc484*/ Yeti.Data.Messaging.Events.YetiSimErrorCode GetPlacementErrors(YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21cc620*/ Yeti.Data.Messaging.Events.YetiSimErrorCode GetMergeErrors(YetiSimCoreLib.Game.GridCell gridCell);
        /*0x21cc77c*/ void SetSelectedUnit(int unitId, int loadoutIndex);
        /*0x21c602c*/ void SetSelectedInstantUsePlant(int unitId);
    }

    class ReclaimInputViewData
    {
        /*0x10*/ bool <IsShowingReclaimDrag>k__BackingField;
        /*0x14*/ UnityEngine.Vector3 <ReclaimDragPosition>k__BackingField;
        /*0x20*/ bool <IsReclaimModeActive>k__BackingField;
        /*0x21*/ bool <IsHoveringOverPlant>k__BackingField;
        /*0x24*/ UnityEngine.Vector3 <ReclaimPreviewPlantPosition>k__BackingField;
        /*0x30*/ int <ReclaimPreviewValue>k__BackingField;
        /*0x34*/ int <ReclaimRemainderPercent>k__BackingField;

        /*0x21cc8dc*/ ReclaimInputViewData();
        /*0x21cc85c*/ bool get_IsShowingReclaimDrag();
        /*0x21cc864*/ void set_IsShowingReclaimDrag(bool value);
        /*0x21cc86c*/ UnityEngine.Vector3 get_ReclaimDragPosition();
        /*0x21cc878*/ void set_ReclaimDragPosition(UnityEngine.Vector3 value);
        /*0x21cc884*/ bool get_IsReclaimModeActive();
        /*0x21cc88c*/ void set_IsReclaimModeActive(bool value);
        /*0x21cc894*/ bool get_IsHoveringOverPlant();
        /*0x21cc89c*/ void set_IsHoveringOverPlant(bool value);
        /*0x21cc8a4*/ UnityEngine.Vector3 get_ReclaimPreviewPlantPosition();
        /*0x21cc8b0*/ void set_ReclaimPreviewPlantPosition(UnityEngine.Vector3 value);
        /*0x21cc8bc*/ int get_ReclaimPreviewValue();
        /*0x21cc8c4*/ void set_ReclaimPreviewValue(int value);
        /*0x21cc8cc*/ int get_ReclaimRemainderPercent();
        /*0x21cc8d4*/ void set_ReclaimRemainderPercent(int value);
    }

    class ReclaimPlantInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ PvzN3xt.Tutorial.IUiAllowDenyListSystem _allowDenyListSystem;
        /*0x88*/ Yeti.CombatSceneState _combatScene;
        /*0x90*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x98*/ System.Action<UnityEngine.Vector3> _moveReclaimDelegate;
        /*0xa0*/ Yeti.CombatInputActionAudioTracker _audioTracker;
        /*0xa8*/ YetiSimCoreLib.Game.GridCell _attemptedReclaimAtGridCell;

        /*0x21cc924*/ ReclaimPlantInputState(Yeti.CombatInputStateContext context);
        /*0x21cc8e4*/ string get_Name();
        /*0x21ccb44*/ void OnEnter();
        /*0x21ccc30*/ void MoveReclaimDragPrefab(UnityEngine.Vector3 screenPosition);
        /*0x21ccdcc*/ void TryShowReclaimHoverData(Yeti.UnitPuppet puppetAtGridCell);
        /*0x21ccfe4*/ YetiSimCoreLib.Game.PercentRemainder CalculateReclaimValue(Yeti.UnitPuppet puppetAtGridCell);
        /*0x21cd090*/ void OnExit();
        /*0x21cd11c*/ void ReclaimPlant(Yeti.UnitPuppet puppet);
        /*0x21cd1ac*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21ccefc*/ bool IsValidInput(Yeti.UnitPuppet tappedPlant, YetiSimCoreLib.Game.GridCell gridCell);
    }

    class RemoveGrowthTimerInputViewData
    {
        /*0x10*/ bool <IsShowingDrag>k__BackingField;
        /*0x14*/ UnityEngine.Vector3 <DragPosition>k__BackingField;
        /*0x20*/ bool <IsActive>k__BackingField;
        /*0x21*/ bool <IsHoveringOverPlant>k__BackingField;
        /*0x24*/ UnityEngine.Vector3 <PreviewPlantPosition>k__BackingField;
        /*0x30*/ int <PreviewCostValue>k__BackingField;

        /*0x21cd34c*/ RemoveGrowthTimerInputViewData();
        /*0x21cd2dc*/ bool get_IsShowingDrag();
        /*0x21cd2e4*/ void set_IsShowingDrag(bool value);
        /*0x21cd2ec*/ UnityEngine.Vector3 get_DragPosition();
        /*0x21cd2f8*/ void set_DragPosition(UnityEngine.Vector3 value);
        /*0x21cd304*/ bool get_IsActive();
        /*0x21cd30c*/ void set_IsActive(bool value);
        /*0x21cd314*/ bool get_IsHoveringOverPlant();
        /*0x21cd31c*/ void set_IsHoveringOverPlant(bool value);
        /*0x21cd324*/ UnityEngine.Vector3 get_PreviewPlantPosition();
        /*0x21cd330*/ void set_PreviewPlantPosition(UnityEngine.Vector3 value);
        /*0x21cd33c*/ int get_PreviewCostValue();
        /*0x21cd344*/ void set_PreviewCostValue(int value);
    }

    class RemoveGrowthTimerInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;
        /*0x80*/ PvzN3xt.Tutorial.IUiAllowDenyListSystem _allowDenyListSystem;
        /*0x88*/ Yeti.CombatSceneState _combatScene;
        /*0x90*/ Yeti.CombatCameraUtils _combatCameraUtils;
        /*0x98*/ System.Action<UnityEngine.Vector3> _onDrag;
        /*0xa0*/ Yeti.CombatInputActionAudioTracker _audioTracker;

        /*0x21cd394*/ RemoveGrowthTimerInputState(Yeti.CombatInputStateContext context);
        /*0x21cd354*/ string get_Name();
        /*0x21cd5b4*/ void OnEnter();
        /*0x21cd6a0*/ void HandleDrag(UnityEngine.Vector3 screenPosition);
        /*0x21cd820*/ void TryShowCost(Yeti.UnitPuppet puppetAtGridCell);
        /*0x21cd97c*/ void OnExit();
        /*0x21cda08*/ void RemoveGrowthTimer(Yeti.UnitPuppet puppet);
        /*0x21cda98*/ void HandleBoardTapped(Yeti.BoardTappedEventArgs args);
        /*0x21cd970*/ bool IsValidInput(Yeti.UnitPuppet tappedPlant, YetiSimCoreLib.Game.GridCell gridCell);
    }

    class DefaultSeedPacketInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;

        /*0x21cdbf4*/ DefaultSeedPacketInputState(Yeti.CombatGuiModel combatModel, Yeti.GameEventManager gameEvents);
        /*0x21cdbb4*/ string get_Name();
        /*0x21cdc38*/ void OnEnter();
    }

    enum SeedPacketInputStateTransitions
    {
        Default = 0,
        SeedPacketSelected = 1,
    }

    enum SeedPacketInputType
    {
        Tap = 0,
        Drag = 1,
    }

    class SeedPacketSelectedEventArgs : System.EventArgs
    {
        /*0x10*/ int LoadoutIndex;
        /*0x14*/ Yeti.SeedPacketInputType InputType;

        /*0x21cdce4*/ SeedPacketSelectedEventArgs();
    }

    class SeedPacketInputRootState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatInputGuiData _combatInputGuiData;
        /*0x78*/ Yeti.GameEventManager _gameEventManager;

        /*0x21cdd7c*/ SeedPacketInputRootState(Yeti.CombatInputStateContext context, Yeti.CombatGuiModel combatModel, Yeti.GameEventManager gameEventManager);
        /*0x21cdd3c*/ string get_Name();
        /*0x21cdfa8*/ void OnEnter();
        /*0x21cdfb4*/ void OnExit();
        /*0x21cdfb8*/ void InterpretSeedPacketInteraction(Yeti.GameEvents.Combat.SeedPacketClickedArgs args, Yeti.SeedPacketInputType inputType);
        /*0x21ce0e8*/ void TransitionToDefaultState();
    }

    class SeedPacketSelectedInputState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.GameEventManager _gameEvents;

        /*0x21cded0*/ SeedPacketSelectedInputState(Yeti.CombatGuiModel combatModel, Yeti.GameEventManager gameEvents);
        /*0x21ce0f4*/ string get_Name();
        /*0x21ce134*/ Yeti.LoadoutGuiData get_LoadoutGuiData();
        /*0x21ce158*/ void SeedPacketSelected(Yeti.SeedPacketSelectedEventArgs args);
    }

    struct UnitMovementInfo
    {
        /*0x10*/ Yeti.GridArea <GridArea>k__BackingField;
        /*0x20*/ bool <IsOnBoard>k__BackingField;
        /*0x21*/ bool <IsAllowed>k__BackingField;
        /*0x22*/ bool <IsOccupied>k__BackingField;
        /*0x23*/ bool <IsRestricted>k__BackingField;

        static /*0x21ce364*/ Yeti.UnitMovementInfo CreateOffBoardError();
        static /*0x21ce3cc*/ Yeti.UnitMovementInfo CreateGridCellOccupancyErrors(Yeti.GridArea gridArea, bool isOccupied, bool isRestricted);
        static /*0x21ce3e4*/ Yeti.UnitMovementInfo CreateUnitMovementErrors(Yeti.GridArea gridArea, bool isAllowed, bool isOccupied, bool isRestricted);
        /*0x21ce2c8*/ Yeti.GridArea get_GridArea();
        /*0x21ce2d4*/ void set_GridArea(Yeti.GridArea value);
        /*0x21ce2dc*/ bool get_IsOnBoard();
        /*0x21ce2e4*/ void set_IsOnBoard(bool value);
        /*0x21ce2ec*/ bool get_IsAllowed();
        /*0x21ce2f4*/ void set_IsAllowed(bool value);
        /*0x21ce2fc*/ bool get_IsOccupied();
        /*0x21ce304*/ void set_IsOccupied(bool value);
        /*0x21ce30c*/ bool get_IsRestricted();
        /*0x21ce314*/ void set_IsRestricted(bool value);
        /*0x21ce31c*/ bool get_CanPlaceUnit();
        /*0x21cc094*/ bool get_CanMove();
        /*0x21ce344*/ bool get_CanPlaceBoost();
    }

    class UnitMovementValidator
    {
        /*0x10*/ PvzN3xt.Tutorial.IUiAllowDenyListSystem _allowDenyListSystem;
        /*0x18*/ Yeti.CombatSceneState _combatScene;
        /*0x20*/ Yeti.PlantPlacementArea _plantArea;

        /*0x21c5980*/ UnitMovementValidator(Yeti.CombatSceneState combatScene);
        /*0x21ce400*/ Yeti.UnitMovementInfo GetMovementErrors(YetiSimCoreLib.Game.UnitId unitId, UnityEngine.Vector3 worldPosition);
        /*0x21cbef8*/ Yeti.UnitMovementInfo GetMovementErrors(YetiSimCoreLib.Game.UnitId unitId, UnityEngine.Vector3 worldPosition, Yeti.GridCellOccupancyCollection gridCells);
        /*0x21cc4e0*/ bool IsGridAreaAllowedByTutorialSystem(Yeti.GridArea gridArea);
    }

    class UnlimitedResourcesModeInputState : RSG.AbstractState
    {
        /*0x21ce4cc*/ UnlimitedResourcesModeInputState(Yeti.CombatInputStateContext combatInputStateContext);
        /*0x21ce48c*/ string get_Name();
    }

    class VaseBreakInputController
    {
        /*0x10*/ Yeti.CombatSceneState _combatScene;

        /*0x21c51f4*/ VaseBreakInputController(Yeti.CombatInputStateContext context);
        /*0x21c5280*/ bool CheckForVaseBreak(UnityEngine.Vector3 worldPositionOnBoard);
    }

    class WaveBreakInputState : RSG.AbstractState
    {
        /*0x21ce5dc*/ WaveBreakInputState(Yeti.CombatInputStateContext combatInputStateContext);
        /*0x21ce59c*/ string get_Name();
    }

    class LoadoutGuiData
    {
        static int InvalidLoadoutIndex = -1;
        /*0x10*/ bool <AreCooldownsDisabled>k__BackingField;
        /*0x14*/ int <SelectedLoadoutIndex>k__BackingField;
        /*0x18*/ System.Collections.Generic.List<Yeti.LoadoutGuiData.LoadoutUnitGuiData> _loadoutUnits;
        /*0x20*/ Yeti.SunGuiData _sunData;

        /*0x21ce6cc*/ LoadoutGuiData(Yeti.SunGuiData sunData);
        /*0x21ce6ac*/ bool get_AreCooldownsDisabled();
        /*0x21ce6b4*/ void set_AreCooldownsDisabled(bool value);
        /*0x21ce6bc*/ int get_SelectedLoadoutIndex();
        /*0x21ce6c4*/ void set_SelectedLoadoutIndex(int value);
        /*0x21ce770*/ void Initialize(System.Collections.Generic.IReadOnlyList<Yeti.Data.UnitInstance> plantLoadout, YetiSimCoreLib.Game.UnitDatabase unitDatabase);
        /*0x21cea04*/ int GetUnitId(int loadoutIndex);
        /*0x21ceae4*/ float GetCooldownPercent(int loadoutIndex);
        /*0x21ceb10*/ bool IsPlantable(int loadoutIndex);
        /*0x21ceb48*/ bool IsSupercharged(int loadoutIndex);
        /*0x21ceb80*/ bool IsTacoCharged(int loadoutIndex);
        /*0x21cebb8*/ bool IsSelected(int loadoutIndex);
        /*0x21cea34*/ bool TryGetLoadoutUnit(int loadoutIndex, ref Yeti.LoadoutGuiData.LoadoutUnitGuiData loadoutUnit);
        /*0x21cebf0*/ void SetCooldownPercent(int loadoutIndex, float cooldownPercent);
        /*0x21cec30*/ void SetSupercharge(int loadoutIndex, bool isSuperCharged);
        /*0x21cec6c*/ void SetTacoCharge(int loadoutIndex, bool isCharged);
        /*0x21ceca8*/ void SetSelected(int loadoutIndex, bool isSelected);
        /*0x21cecf8*/ void SetAllDeselected();
        /*0x21ceea8*/ bool UpdateLoadoutsAndCheckIfAnUnitBecamePlantable();
        /*0x21cf084*/ void UpdateUnitPlantable(Yeti.LoadoutGuiData.LoadoutUnitGuiData unit);
        /*0x21cf0cc*/ bool HasEnoughSun(Yeti.LoadoutGuiData.LoadoutUnitGuiData unit);
        /*0x21cf108*/ bool IsOffCooldown(Yeti.LoadoutGuiData.LoadoutUnitGuiData unit);

        class LoadoutUnitGuiData
        {
            /*0x10*/ int <UnitId>k__BackingField;
            /*0x14*/ uint <SunCost>k__BackingField;
            /*0x18*/ float <CooldownPercent>k__BackingField;
            /*0x1c*/ bool <IsSupercharged>k__BackingField;
            /*0x1d*/ bool <IsTacoCharged>k__BackingField;
            /*0x1e*/ bool <IsPlantable>k__BackingField;
            /*0x1f*/ bool <IsSelected>k__BackingField;

            /*0x21ce9fc*/ LoadoutUnitGuiData();
            /*0x21cf194*/ int get_UnitId();
            /*0x21cf19c*/ void set_UnitId(int value);
            /*0x21cf1a4*/ uint get_SunCost();
            /*0x21cf1ac*/ void set_SunCost(uint value);
            /*0x21cf1b4*/ float get_CooldownPercent();
            /*0x21cf1bc*/ void set_CooldownPercent(float value);
            /*0x21cf1c4*/ bool get_IsSupercharged();
            /*0x21cf1cc*/ void set_IsSupercharged(bool value);
            /*0x21cf1d4*/ bool get_IsTacoCharged();
            /*0x21cf1dc*/ void set_IsTacoCharged(bool value);
            /*0x21cf1e4*/ bool get_IsPlantable();
            /*0x21cf1ec*/ void set_IsPlantable(bool value);
            /*0x21cf1f4*/ bool get_IsSelected();
            /*0x21cf1fc*/ void set_IsSelected(bool value);
        }
    }

    class AbilityChargeConsumedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21cf3d4*/ AbilityChargeConsumedProcessor();
        /*0x21cf204*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21cf2f8*/ void HandleAbilityChargeConsumed(YetiSimCoreLib.Messaging.Events.AbilityChargeConsumedEventArgs args);
    }

    class AbilityChargesRestoredProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21cf68c*/ AbilityChargesRestoredProcessor();
        /*0x21cf4bc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21cf5b0*/ void HandleChargesRestored(YetiSimCoreLib.Messaging.Events.RestoredChargesEventArgs args);
    }

    class ActionCooldownUpdatedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21cf78c*/ ActionCooldownUpdatedProcessor();
        /*0x21cf690*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21cf784*/ void HandleActionCooldownUpdated(YetiSimCoreLib.Messaging.Events.ActionCooldownUpdatedEventArgs args);
        /*0x21cf788*/ void HandleAbilityCooldownSet(YetiSimCoreLib.Messaging.Events.AbilityCooldownSetEventArgs args);
    }

    class ActionlessAbilityProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21cf8e4*/ ActionlessAbilityProcessor();
        /*0x21cf790*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21cf884*/ void HandleActionlessAbilityTriggered(YetiSimCoreLib.Messaging.Events.ActionlessAbilityTriggeredEventArgs args);
    }

    class AntiStallingMessageProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21cfab8*/ AntiStallingMessageProcessor();
        /*0x21cf8e8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21cfa88*/ void HandleAntiStallingZombieSpawned(YetiSimCoreLib.Messaging.Events.AntiStallingZombieSpawnedEventArgs args);
        /*0x21cfaa0*/ void HandleAntiStallingWarning(YetiSimCoreLib.Messaging.Events.AntiStallingWarningTimeReachedEventArgs args);
    }

    class ArmorStackRemovedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21cfbec*/ ArmorStackRemovedProcessor();
        /*0x21cfabc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21cfbb0*/ void HandleArmorStackRemoved(YetiSimCoreLib.Messaging.Events.ArmorStackRemovedEventArgs args);
    }

    class BounceProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d00e4*/ BounceProcessor();
        /*0x21cfbf0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21cfd90*/ void HandleBounceStarted(YetiSimCoreLib.Messaging.Events.BounceStartedEventArgs args);
        /*0x21cfe90*/ void HandleBounceStopped(YetiSimCoreLib.Messaging.Events.BounceStoppedEventArgs args);
    }

    class CellOccupancyChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        static string Name = "CellOccupancyChangedProcessor";

        /*0x21d03a4*/ CellOccupancyChangedProcessor();
        /*0x21d00e8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d01dc*/ void HandleCellOccupancyChanged(YetiSimCoreLib.Messaging.Events.CellOccupancyChangedEventArgs args);
    }

    class CellRestrictionChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d05ec*/ CellRestrictionChangedProcessor();
        /*0x21d03a8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d049c*/ void ProcessCellRestrictionChanged(YetiSimCoreLib.Messaging.Events.CellRestrictionChangedEventArgs args);
    }

    class ChainAttackProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x21d08e8*/ UnityEngine.Vector3 GetFromPosition(YetiSimCoreLib.Messaging.Events.ChainActionGeneratedEventArgs args, Yeti.IPuppetAvatarView sourceAvatarView);
        /*0x21d0f70*/ ChainAttackProcessor();
        /*0x21d05f0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d06e4*/ void HandleChainAttackGenerated(YetiSimCoreLib.Messaging.Events.ChainActionGeneratedEventArgs args);
        /*0x21d0e04*/ void SpawnImpact(UnityEngine.Vector3 position, Yeti.IUnitPuppetAvatarView sourceAvatarView);
        /*0x21d0b00*/ void SpawnLightning(UnityEngine.Vector3 fromPosition, UnityEngine.Vector3 toPosition, Yeti.IUnitPuppetAvatarView sourceAvatarView);
        /*0x21d0a3c*/ UnityEngine.Vector3 GetToPosition(YetiSimCoreLib.Messaging.Events.ChainActionGeneratedEventArgs args);
    }

    class ChangeStateProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x0*/ string ChangeStateProcessorName;

        static /*0x21d13a0*/ ChangeStateProcessor();
        static /*0x21d11f4*/ void TriggerAudioVisualEvents(Yeti.IUnitPuppetAvatarView avatar, int stateId);
        /*0x21d139c*/ ChangeStateProcessor();
        /*0x21d0f74*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d1068*/ void HandleStateChanged(YetiSimCoreLib.Messaging.Events.ChangedStateEventArgs args);
    }

    class CoreSimMessageProcessor
    {
        /*0x10*/ Yeti.CombatGuiModel _combatModel;
        /*0x18*/ Yeti.CombatSceneStateContext _context;

        /*0x21cf3d8*/ CoreSimMessageProcessor();
        /*0x21d1408*/ void Initialize(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim);
        /*0x1f30ebc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
    }

    class DeflectConsumedProjectileProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d196c*/ DeflectConsumedProjectileProcessor();
        /*0x21d1450*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d1544*/ void HandleBounceProjectile(YetiSimCoreLib.Messaging.Events.DeflectConsumedProjectileEventArgs args);
    }

    class DynamicDropEventsProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d1dc0*/ DynamicDropEventsProcessor();
        /*0x21d1970*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d1b10*/ void HandleDynamicDropSpawned(YetiSimCoreLib.Messaging.Events.DynamicDropSpawnedEventArgs args);
        /*0x21d1bf0*/ void HandleDynamicDropCollected(YetiSimCoreLib.Messaging.Events.DynamicDropCollectedEventArgs args);
    }

    class ExpiryWarnedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d2004*/ ExpiryWarnedProcessor();
        /*0x21d1dc4*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d1eb8*/ void HandleExpiryWarned(YetiSimCoreLib.Messaging.Events.ExpiryWarnedEventArgs args);
    }

    class ExplosionProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d24d0*/ ExplosionProcessor();
        /*0x21d2008*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d20fc*/ void HandleExplosionCreated(YetiSimCoreLib.Messaging.Events.ExplosionCreatedEventArgs args);
        /*0x21d2150*/ bool TrySpawnExplosion(YetiSimCoreLib.Game.InstanceId sourceId, string visualTag, YetiSimCoreLib.Game.Position simPosition);
        /*0x21d21e8*/ bool TrySpawnExplosion(string visualTag, YetiSimCoreLib.Game.Position simPosition, Yeti.IPuppet source);
        /*0x21d23d0*/ void SpawnExplosionVfx(YetiSimCoreLib.Game.Position position, string explosionId);
    }

    class ExtraSunSpentProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d26b0*/ ExtraSunSpentProcessor();
        /*0x21d24d4*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d25c8*/ void HandleExtraSunSpent(YetiSimCoreLib.Messaging.Events.ExtraSunSpentEventArgs args);
    }

    class GrowthTimerUpdatedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d2960*/ GrowthTimerUpdatedProcessor();
        /*0x21d26b4*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d27a8*/ void HandleGrowthTimerUpdated(YetiSimCoreLib.Messaging.Events.GrowthTimerUpdatedEventArgs args);
    }

    class HitboxChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d2b9c*/ HitboxChangedProcessor();
        /*0x21d2964*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d2a58*/ void HandleHitboxChanged(YetiSimCoreLib.Messaging.Events.HitboxChangedEventArgs args);
    }

    class ImmuneAttackMessageProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d2dec*/ ImmuneAttackMessageProcessor();
        /*0x21d2ba0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d2c94*/ void HandleDamageTypeAttackNegated(YetiSimCoreLib.Messaging.Events.DamageTypeAttackNegatedEventArgs args);
    }

    class InstantDefensePlantStateChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        static int TripWireSpawnZOffset = -2000;
        /*0x20*/ Yeti.PuppetAvatarContext _puppetContext;
        /*0x28*/ Yeti.OnDiedHandler<Yeti.IPuppetAvatarView> _handlePuppetAvatarDiedMethod;

        /*0x21d2df0*/ InstantDefensePlantStateChangedProcessor();
        /*0x21d2e7c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d2fd8*/ void HandleChargesChanged(YetiSimCoreLib.Messaging.Events.InstantDefensePlantChargesChangedEventArgs args);
        /*0x21d304c*/ void SpawnTripWire();
        /*0x21d33f8*/ UnityEngine.Vector3 GetTripWireSpawnWorldPosition();
        /*0x21d3284*/ void DestroyTripWire();
        /*0x21d34d0*/ void HandleTripWireDied(Yeti.IPuppetAvatarView sender);
        /*0x21d3584*/ void RemoveTripWire();
    }

    class InstantUsePlantStateChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x20*/ Yeti.IPlayerInventoryDataManager _playerInventory;
        /*0x28*/ Yeti.CombatSceneState _combatScene;
        /*0x30*/ System.Action _pauseCombatAction;
        /*0x38*/ System.Action _resumeCombatAction;

        /*0x21d3654*/ InstantUsePlantStateChangedProcessor(Yeti.CombatSceneState combatScene);
        /*0x21d37ec*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d398c*/ void HandleCooldownUpdated(YetiSimCoreLib.Messaging.Events.InstantUsePlantCooldownUpdatedEventArgs args);
        /*0x21d3a34*/ void HandleChargesChanged(YetiSimCoreLib.Messaging.Events.InstantUsePlantChargesChangedEventArgs args);
        /*0x21d3d9c*/ void PauseCombat();
        /*0x21d3db8*/ void ResumeCombat();
    }

    interface IStatModifierVisualizer
    {
        void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    interface ICombatContextAware
    {
        /*0x1f30ebc*/ void SetContext(Yeti.CombatSceneStateContext context);
    }

    class BinaryStatModifierVisualizer : Yeti.IStatModifierVisualizer
    {
        /*0x21d3e1c*/ BinaryStatModifierVisualizer();
        /*0x21d3dd4*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x1f30ebc*/ void AddModifier(Yeti.UnitPuppet unit);
        /*0x21d3dec*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x1f30ebc*/ void InitializeModifier(Yeti.UnitPuppet unit);
        /*0x21d3e04*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x1f30ebc*/ void RemoveModifier(Yeti.UnitPuppet unit);
    }

    class GenericAnimFreezeStatModifierVisualizer : Yeti.BinaryStatModifierVisualizer, Yeti.ICombatContextAware
    {
        /*0x10*/ Yeti.VisualModifierType _modifierType;
        /*0x18*/ Yeti.CombatSceneStateContext _context;

        /*0x21d3e24*/ GenericAnimFreezeStatModifierVisualizer(Yeti.VisualModifierType modifierType);
        /*0x21d3e4c*/ void SetContext(Yeti.CombatSceneStateContext context);
        /*0x21d3e54*/ void AddModifier(Yeti.UnitPuppet unit);
        /*0x21d4040*/ void InitializeModifier(Yeti.UnitPuppet unit);
        /*0x21d422c*/ void RemoveModifier(Yeti.UnitPuppet unit);
    }

    class ChillStatModifierVisualizer : Yeti.BinaryStatModifierVisualizer
    {
        /*0x21d4614*/ ChillStatModifierVisualizer();
        /*0x21d4410*/ void AddModifier(Yeti.UnitPuppet unit);
        /*0x21d44bc*/ void InitializeModifier(Yeti.UnitPuppet unit);
        /*0x21d4568*/ void RemoveModifier(Yeti.UnitPuppet unit);
    }

    class SpeedPercentModifierVisualizer : Yeti.IStatModifierVisualizer
    {
        /*0x21d4670*/ SpeedPercentModifierVisualizer();
        /*0x21d461c*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4644*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4648*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class BunchedModifierVisualizer : Yeti.IStatModifierVisualizer
    {
        /*0x21d46cc*/ BunchedModifierVisualizer();
        /*0x21d4678*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d46a0*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d46a4*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class DamageModifierVisualizer : Yeti.IStatModifierVisualizer
    {
        /*0x21d4728*/ DamageModifierVisualizer();
        /*0x21d46d4*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d46fc*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4700*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class MovementSpeedModifierVisualizer : Yeti.IStatModifierVisualizer, Yeti.ICombatContextAware
    {
        /*0x10*/ Yeti.CombatSceneStateContext _context;

        /*0x21d4a54*/ MovementSpeedModifierVisualizer();
        /*0x21d4730*/ void SetContext(Yeti.CombatSceneStateContext context);
        /*0x21d4738*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d48c0*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4740*/ void SetSpeed(Yeti.UnitPuppet unit, int currentValue);
        /*0x21d48c8*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class AttackSpeedModifierVisualizer : Yeti.IStatModifierVisualizer, Yeti.ICombatContextAware
    {
        /*0x10*/ Yeti.CombatSceneStateContext _context;

        /*0x21d4d80*/ AttackSpeedModifierVisualizer();
        /*0x21d4a5c*/ void SetContext(Yeti.CombatSceneStateContext context);
        /*0x21d4a64*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4bec*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4a6c*/ void SetSpeed(Yeti.UnitPuppet unit, int currentValue);
        /*0x21d4bf4*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class SizeStatModifierVisualizer : Yeti.IStatModifierVisualizer
    {
        static /*0x21d4e48*/ float GetScale(int sizePercent);
        /*0x21d4f24*/ SizeStatModifierVisualizer();
        /*0x21d4d88*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4e60*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4e64*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class MaxHealthModifierVisualizer : Yeti.IStatModifierVisualizer
    {
        /*0x21d50c8*/ MaxHealthModifierVisualizer();
        /*0x21d4f2c*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4ff8*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d4ffc*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class PercentDamageResistanceModifierVisualizer : Yeti.IStatModifierVisualizer
    {
        /*0x21d5124*/ PercentDamageResistanceModifierVisualizer();
        /*0x21d50d0*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d50f8*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d50fc*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
    }

    class StealthStatModifierVisualizer : Yeti.BinaryStatModifierVisualizer
    {
        /*0x21d548c*/ StealthStatModifierVisualizer();
        /*0x21d512c*/ void AddModifier(Yeti.UnitPuppet unit);
        /*0x21d524c*/ void InitializeModifier(Yeti.UnitPuppet unit);
        /*0x21d536c*/ void RemoveModifier(Yeti.UnitPuppet unit);
    }

    class GenericIncrementalStatVfxModifierVisualizer : Yeti.ICombatContextAware, Yeti.IStatModifierVisualizer
    {
        /*0x10*/ Yeti.VisualModifierType _visualModifierType;
        /*0x18*/ Yeti.CombatSceneStateContext _context;

        /*0x21d5494*/ GenericIncrementalStatVfxModifierVisualizer(Yeti.VisualModifierType visualModifierType);
        /*0x21d54bc*/ void SetContext(Yeti.CombatSceneStateContext context);
        /*0x21d54c4*/ void HandleModifierAdded(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d5640*/ void HandleModifierInitialized(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d5648*/ void HandleModifierRemoved(Yeti.UnitPuppet unit, int baseValue, int currentValue);
        /*0x21d54cc*/ void UpdateVfx(Yeti.UnitPuppet unit, int currentValue);
    }

    class ExpiryModifierVisualizer : Yeti.BinaryStatModifierVisualizer
    {
        /*0x21d5854*/ ExpiryModifierVisualizer();
        /*0x21d5650*/ void AddModifier(Yeti.UnitPuppet unit);
        /*0x21d56fc*/ void InitializeModifier(Yeti.UnitPuppet unit);
        /*0x21d57a8*/ void RemoveModifier(Yeti.UnitPuppet unit);
    }

    class ShieldedModifierVisualizer : Yeti.BinaryStatModifierVisualizer
    {
        /*0x21d5a60*/ ShieldedModifierVisualizer();
        /*0x21d585c*/ void AddModifier(Yeti.UnitPuppet unit);
        /*0x21d5908*/ void InitializeModifier(Yeti.UnitPuppet unit);
        /*0x21d59b4*/ void RemoveModifier(Yeti.UnitPuppet unit);
    }

    class KillStreakProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d5c60*/ KillStreakProcessor();
        /*0x21d5a68*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d5c08*/ void HandleKillStreakValueChanged(YetiSimCoreLib.Messaging.Events.KillStreakValueChangedEventArgs args);
        /*0x21d5c24*/ void HandleKillStreakCooldownupdated(YetiSimCoreLib.Messaging.Events.KillStreakCooldownUpdatedEventArgs args);
    }

    class KnockbackProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d5ff8*/ KnockbackProcessor();
        /*0x21d5c64*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d5e04*/ void HandleKnockbackStarted(YetiSimCoreLib.Messaging.Events.KnockbackStartedEventArgs args);
        /*0x21d5f00*/ void HandleKnockbackStopped(YetiSimCoreLib.Messaging.Events.KnockbackStoppedEventArgs args);
    }

    class LoadoutItemInitializedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d6130*/ LoadoutItemInitializedProcessor();
        /*0x21d5ffc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d60f0*/ void MessagesOnLoadoutItemInitialized(YetiSimCoreLib.Messaging.Events.LoadoutItemInitializedEventArgs args);
    }

    class MaterialChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d63b4*/ MaterialChangedProcessor();
        /*0x21d6134*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d6228*/ void ProcessMaterialChanged(YetiSimCoreLib.Messaging.Events.MaterialChangedEventArgs args);
    }

    class MessageProcessorBinder
    {
        /*0x10*/ System.Collections.Generic.List<Yeti.CoreSimMessageProcessor> _coreSimMessageProcessors;
        /*0x18*/ Yeti.CombatSceneState _combatScene;
        /*0x20*/ Yeti.CombatSceneStateContext _context;
        /*0x28*/ Yeti.CoreSimWrapper _coreSim;

        /*0x21d63b8*/ MessageProcessorBinder(Yeti.CombatSceneState combatScene, Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim);
        /*0x21d6418*/ void RegisterCommonProcessors();
        /*0x21d7468*/ void RegisterMessageProcessor(Yeti.CoreSimMessageProcessor messageProcessor);
    }

    class MovementDirectionChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7540*/ MovementDirectionChangedProcessor();
        /*0x21d75c8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d76bc*/ void HandleMovementDirectionChanged(YetiSimCoreLib.Messaging.Events.MovementDirectionChangedEventArgs args);
    }

    class MovementSpeedChangedMessageProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d75b4*/ MovementSpeedChangedMessageProcessor();
        /*0x21d7908*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d79fc*/ void HandleMovementSpeedChanged(YetiSimCoreLib.Messaging.Events.MovementSpeedChangedEventArgs args);
    }

    class MoveToAdjacentLaneProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7548*/ MoveToAdjacentLaneProcessor();
        /*0x21d7bcc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d7d6c*/ void HandleStarted(YetiSimCoreLib.Messaging.Events.MoveToAdjacentLaneStartedEventArgs args);
        /*0x21d7e64*/ void HandleStopped(YetiSimCoreLib.Messaging.Events.MoveToAdjacentLaneStoppedEventArgs args);
    }

    class OnBoardBoostSpawnedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d75bc*/ OnBoardBoostSpawnedProcessor();
        /*0x21d7f2c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d80cc*/ void HandleOnBoardInstantUsePlantBoostSpawned(YetiSimCoreLib.Messaging.Events.OnBoardInstantUsePlantBoostSpawnedEventArgs args);
        /*0x21d81c0*/ void HandleOnBoardPlantFoodBoostSpawned(YetiSimCoreLib.Messaging.Events.OnBoardPlantFoodBoostSpawnedEventArgs args);
    }

    class PlantFoodActivatedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7520*/ PlantFoodActivatedProcessor();
        /*0x21d82ac*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d83a0*/ void HandlePlantFoodActivated(YetiSimCoreLib.Messaging.Events.PlantFoodActivatedEventArgs args);
    }

    class PlantFoodMeterProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d751c*/ PlantFoodMeterProcessor();
        /*0x21d84c4*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d85b8*/ void ChangePlantFoodValue(YetiSimCoreLib.Messaging.Events.PlantFoodValueChangedEventArgs args);
    }

    class ProjectileCollidedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7554*/ ProjectileCollidedProcessor();
        /*0x21d8674*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d8768*/ void HandleProjectileCollided(YetiSimCoreLib.Messaging.Events.ProjectileCollidedEventArgs args);
    }

    class ProjectileConsumedProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x0*/ UnityEngine.Vector3 OffBoardPosition;

        static /*0x21d8e54*/ ProjectileConsumedProcessor();
        /*0x21d75b8*/ ProjectileConsumedProcessor();
        /*0x21d8a40*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d8b34*/ void ProcessProjectileConsumed(YetiSimCoreLib.Messaging.Events.ProjectileConsumedEventArgs args);
    }

    class ProjectileSpawnedProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x21d976c*/ bool IsConsumedProjectile(YetiSimCoreLib.Messaging.Events.ProjectileSpawnedEventArgs args);
        /*0x21d74dc*/ ProjectileSpawnedProcessor();
        /*0x21d8eac*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d8fa0*/ void ProcessProjectileSpawned(YetiSimCoreLib.Messaging.Events.ProjectileSpawnedEventArgs args);
        /*0x21d9464*/ string GetPrefabId(YetiSimCoreLib.Messaging.Events.ProjectileSpawnedEventArgs args, Yeti.IPuppetAvatarView sourceAvatarView);
    }

    class PromotionUsesChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7538*/ PromotionUsesChangedProcessor();
        /*0x21d97d4*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d98c8*/ void MessagesOnPromotionUsesChanged(YetiSimCoreLib.Messaging.Events.PromotionUsesChangedEventArgs args);
    }

    class RapidFireTriggeredProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7558*/ RapidFireTriggeredProcessor();
        /*0x21d98cc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d99c0*/ void HandleRapidFireTriggered(YetiSimCoreLib.Messaging.Events.RapidFireTriggeredEventArgs args);
    }

    class ReclaimPlantProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x21da140*/ string FormatPercentRemainder(int whole, int remainder);
        /*0x21d7524*/ ReclaimPlantProcessor();
        /*0x21d9c30*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21d9d24*/ void HandlePlantReclaimed(YetiSimCoreLib.Messaging.Events.PlantReclaimedEventArgs args);
        /*0x21d9f28*/ void SpawnVfx(YetiSimCoreLib.Messaging.Events.PlantReclaimedEventArgs args, Yeti.UnitPuppet puppet);
    }

    class ScoreValueChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7544*/ ScoreValueChangedProcessor();
        /*0x21da208*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21daa18*/ void HandleScoreValueChanged(YetiSimCoreLib.Messaging.Events.ScoreValueChangedEventArgs args);
        /*0x21daa30*/ void HandleQuickWinBonusGenerated(YetiSimCoreLib.Messaging.Events.QuickWinBonusGeneratedEventArgs args);
        /*0x21dab7c*/ void HandleElementalBonusGenerated(YetiSimCoreLib.Messaging.Events.ElementalBonusGeneratedEventArgs args);
        /*0x21dacb0*/ void HandleHerdingBonusGenerated(YetiSimCoreLib.Messaging.Events.HerdingBonusGeneratedEventArgs args);
        /*0x21dade4*/ void HandleFirstStrikeBonusGenerated(YetiSimCoreLib.Messaging.Events.FirstStrikeBonusGeneratedEventArgs args);
        /*0x21daf18*/ void HandleLaneDefenseBonusGenerated(YetiSimCoreLib.Messaging.Events.LaneDefenseBonusGeneratedEventArgs args);
        /*0x21db04c*/ void HandleEnduranceBonusGenerated(YetiSimCoreLib.Messaging.Events.EnduranceBonusGeneratedEventArgs args);
        /*0x21dab64*/ void AddScoreBonusToModel(Yeti.Data.ScoreBonusType type, int scoreDelta);
        /*0x21db180*/ void HandleSymmetryBonusGenerated(YetiSimCoreLib.Messaging.Events.SymmetryBonusGeneratedEventArgs args);
        /*0x21db2f4*/ void HandleEveryLoadoutUnitUsedBonusGenerated(YetiSimCoreLib.Messaging.Events.EveryLoadoutUnitUsedBonusGeneratedEventArgs args);
        /*0x21db428*/ void HandlePlantInEveryColumnBonusGenerated(YetiSimCoreLib.Messaging.Events.PlantInEveryColumnBonusGeneratedEventArgs args);
        /*0x21db55c*/ void HandleZombieKilledScoreBonusGenerated(YetiSimCoreLib.Messaging.Events.ZombieKilledScoreBonusGeneratedEventArgs args);
        /*0x21db2b4*/ void HandleBonusGenerated(Yeti.Data.ScoreBonusType type, int scoreDelta, YetiSimCoreLib.Game.GridCell cell);
        /*0x21db77c*/ void PlayScoreBonusAudio(Yeti.Data.ScoreBonusType type);
        /*0x21db7c8*/ void HandleMergeMasterBonusGenerated(YetiSimCoreLib.Messaging.Events.MergeMasterBonusGeneratedEventArgs args);
    }

    class ShovelCooldownUpdatedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x20*/ string ShovelCooldownUpdatedName;

        /*0x21d7560*/ ShovelCooldownUpdatedProcessor();
        /*0x21db8fc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21db9f0*/ void HandleShovelCooldownUpdated(YetiSimCoreLib.Messaging.Events.ShovelCooldownUpdatedEventArgs args);
    }

    class SimEndedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x20*/ Yeti.CombatSceneState _combatScene;
        /*0x28*/ Yeti.SimEndedProcessor.GameOverType _gameOverType;

        /*0x21d74e4*/ SimEndedProcessor(Yeti.CombatSceneState combatScene);
        /*0x21dbb3c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dc018*/ void HandleBossKilled(YetiSimCoreLib.Messaging.Events.BossKilledEventArgs args);
        /*0x21dc024*/ void HandleSimEnded(YetiSimCoreLib.Messaging.Events.SimEndedEventArgs args);
        /*0x21dc180*/ void DoStubBossDeathFlow();
        /*0x21dc378*/ void HandleAllZombiesKilled(YetiSimCoreLib.Messaging.Events.AllZombiesKilledEventArgs args);
        /*0x21dc3cc*/ void HandleZombiesReachedHouse(YetiSimCoreLib.Messaging.Events.GoalReachedEventArgs args);
        /*0x21dc4a8*/ void HandleCheatWon(YetiSimCoreLib.Messaging.Events.CheatWonEventArgs args);
        /*0x21dc4b4*/ void HandleCheatLost(YetiSimCoreLib.Messaging.Events.CheatLostEventArgs args);
        /*0x21dc4c0*/ void HandleGameAbandoned(YetiSimCoreLib.Messaging.Events.GameAbandonedEventArgs args);
        /*0x21dc4cc*/ void <DoStubBossDeathFlow>b__7_0();

        enum GameOverType
        {
            AllZombiesKilled = 0,
            ZombieReachedHouse = 1,
            CheatWon = 2,
            CheatLost = 3,
            BossKilled = 4,
            Abandoned = 5,
        }
    }

    class SimObjectDiedProcessor : Yeti.CoreSimMessageProcessor
    {
        static string Name = "SimObjectDiedProcessor";

        /*0x21d74d4*/ SimObjectDiedProcessor();
        /*0x21dc4e8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dc5dc*/ void HandleSimObjectDied(YetiSimCoreLib.Messaging.Events.SimObjectDiedEventArgs args);
    }

    class SimObjectMovedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d74d0*/ SimObjectMovedProcessor();
        /*0x21dc8b8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dc9ac*/ void HandleSimObjectMoved(YetiSimCoreLib.Messaging.Events.SimObjectMovedEventArgs args);
    }

    class PlantMovedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d74d8*/ PlantMovedProcessor();
        /*0x21dc9d4*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dcac8*/ void HandlePlantMoved(YetiSimCoreLib.Messaging.Events.PlantMovedEventArgs args);
    }

    class SimStartedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d74e0*/ SimStartedProcessor();
        /*0x21dcb6c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dcc60*/ void InitializeModels(YetiSimCoreLib.Messaging.Events.IGameInitMessage args);
    }

    class SplitHitTriggeredProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d755c*/ SplitHitTriggeredProcessor();
        /*0x21dd1f8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dd2ec*/ void HandleSplitHitTriggered(YetiSimCoreLib.Messaging.Events.SplitHitTriggeredEventArgs args);
    }

    class StatModifierProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x0*/ string HandleModifierAddedName;
        static /*0x8*/ string HandleModifierRemovedName;
        static /*0x10*/ string HandleStatRemovedName;

        static /*0x21de2a0*/ StatModifierProcessor();
        /*0x21d7528*/ StatModifierProcessor();
        /*0x21dd55c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dda48*/ void HandleModifierAdded(YetiSimCoreLib.Messaging.Events.AddedModifierEventArgs args);
        /*0x21ddecc*/ void HandleModifierRemoved(YetiSimCoreLib.Messaging.Events.RemovedModifierEventArgs args);
        /*0x21de0cc*/ void HandleStatRemoved(YetiSimCoreLib.Messaging.Events.RemovedStatEventArgs args);
    }

    class StatModifierVisualProcessor
    {
        static /*0x0*/ System.Collections.Generic.Dictionary<Yeti.Data.StatType, Yeti.IStatModifierVisualizer> VisualProcessors;

        static /*0x21de5f4*/ StatModifierVisualProcessor();
        static /*0x21de360*/ void InitializeModifier(Yeti.UnitPuppet unit, YetiSimCoreLib.Messaging.Events.ModifiedStatData data);
        static /*0x21ddbcc*/ void AddModifier(Yeti.CombatSceneStateContext context, YetiSimCoreLib.Messaging.Events.AddedModifierEventArgs args);
        static /*0x21de050*/ void RemoveModifier(Yeti.CombatSceneStateContext context, YetiSimCoreLib.Messaging.Events.RemovedModifierEventArgs args);
        static /*0x21de230*/ void RemoveStat(Yeti.CombatSceneStateContext context, YetiSimCoreLib.Messaging.Events.RemovedStatEventArgs args);
        static /*0x21de498*/ void RemoveModifier(Yeti.CombatSceneStateContext context, Yeti.Data.StatType stat, YetiSimCoreLib.Game.InstanceId instanceId, int baseStatValue, int newStatValue);
        static /*0x21dd7d8*/ void RegisterContext(Yeti.CombatSceneStateContext context);
    }

    class SunDataChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x0*/ string HandleSunGeneratorUpdatedName;
        static /*0x8*/ string HandleSunValueChangedName;
        static /*0x10*/ string HandleSpendPlantFoodOnSunName;
        static /*0x18*/ string HandleSpendPromotionOnSunName;
        static /*0x20*/ string HandleSunSpentName;

        static /*0x21df6d8*/ SunDataChangedProcessor();
        /*0x21d7510*/ SunDataChangedProcessor();
        /*0x21dec10*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21defa4*/ void HandleSunGeneratorUpdated(YetiSimCoreLib.Messaging.Events.SunGeneratorUpdatedEventArgs args);
        /*0x21df140*/ void HandleSunValueChanged(YetiSimCoreLib.Messaging.Events.SunValueChangedEventArgs args);
        /*0x21df288*/ void HandleSpendPlantFoodOnSun(YetiSimCoreLib.Messaging.Events.ISpendPlantFoodOnSunMeterMessage args);
        /*0x21df40c*/ void HandleSpendPromotionOnSun(YetiSimCoreLib.Messaging.Events.ISpendPromotionUseOnSunMeterMessage args);
        /*0x21df590*/ void HandleSunSpent(YetiSimCoreLib.Messaging.Events.SunSpentEventArgs args);
    }

    class SunGenerationEventsProcessor : Yeti.CoreSimMessageProcessor
    {
        static int SunFallColumnPadding = 1;

        /*0x21d7550*/ SunGenerationEventsProcessor();
        /*0x21df7f0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dfae0*/ void HandleSunGenerationStopped(YetiSimCoreLib.Messaging.Events.SunGenerationStoppedEventArgs args);
        /*0x21dfaf8*/ void HandleSunGenerationEnding(YetiSimCoreLib.Messaging.Events.SunGenerationEndingEventArgs args);
        /*0x21dfb10*/ void HandleSunSpawned(YetiSimCoreLib.Messaging.Events.SunSpawnedEventArgs args);
        /*0x21dfd24*/ void HandleSunCollected(YetiSimCoreLib.Messaging.Events.ICollectSunMessage args);
    }

    class SunValueModifiedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d754c*/ SunValueModifiedProcessor();
        /*0x21dfe90*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21dff84*/ void HandleSunValueModified(YetiSimCoreLib.Messaging.Events.SunValueModifiedEventArgs args);
    }

    class TapAbilityActivatedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d75c4*/ TapAbilityActivatedProcessor();
        /*0x21e00e0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e01d4*/ void HandleUnitAbilityActivated(YetiSimCoreLib.Messaging.Events.IActivateUnitAbilityMessage args);
    }

    class TerrainEdgeProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d75c0*/ TerrainEdgeProcessor();
        /*0x21e03fc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e04f0*/ void HandleUnitSpawned(YetiSimCoreLib.Messaging.Events.UnitSpawnedEventArgs args);
        /*0x21e0b38*/ bool TryCreateTile(YetiSimCoreLib.Game.InstanceId instanceId, ref Yeti.PuppetSystem.TerrainTileView terrainTile);
        /*0x21e0b60*/ bool TryGetTile(string type, int row, int column, ref Yeti.PuppetSystem.TerrainTileView terrainTile);
    }

    class TickChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x0*/ string Name;

        static /*0x21e0ec8*/ TickChangedProcessor();
        /*0x21d7514*/ TickChangedProcessor();
        /*0x21e0b84*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e0d24*/ void HandleCurrentTickChanged(YetiSimCoreLib.Messaging.Events.CurrentTickChangedEventArgs args);
        /*0x21e0e9c*/ void HandleWaveTickChanged(YetiSimCoreLib.Messaging.Events.WaveTickChangedEventArgs args);
    }

    class TransformProcessor : Yeti.CoreSimMessageProcessor
    {
        static string Name = "TransformProcessor";

        static /*0x21e1190*/ void Transform(Yeti.IUnitPuppetAvatarView unitAvatar, int transformationId, bool onlyChangeAnimationState);
        /*0x21d753c*/ TransformProcessor();
        /*0x21e0f30*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e1024*/ void HandleTransform(YetiSimCoreLib.Messaging.Events.UnitTransformedEventArgs args);
    }

    class UnitArmorAddedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d752c*/ UnitArmorAddedProcessor();
        /*0x21e129c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e1390*/ void HandleArmorAdded(YetiSimCoreLib.Messaging.Events.ArmorAddedEventArgs args);
    }

    class UnitArmorDamagedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7530*/ UnitArmorDamagedProcessor();
        /*0x21e13cc*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e14c0*/ void MessagesOnArmorDamaged(YetiSimCoreLib.Messaging.Events.ArmorDamagedEventArgs args);
    }

    class UnitArmorHealedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21d7534*/ UnitArmorHealedProcessor();
        /*0x21e1560*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e1654*/ void MessagesOnUnitArmorHealed(YetiSimCoreLib.Messaging.Events.UnitArmorHealedEventArgs args);
    }

    class UnitAttackProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x0*/ string AttackCycleStartedName;
        static /*0x8*/ string AttackCycleStoppedName;
        static /*0x10*/ string HandleUnitArmedName;
        /*0x20*/ Yeti.Combat.MessageProcessors.GameSimulationSummary _gameSimulationSummary;

        static /*0x21e2d18*/ UnitAttackProcessor();
        static /*0x21e1ba0*/ void SetAvatarAnimationSpeedForNonAttacks(bool isPrimary, Yeti.UnitPuppet unit);
        static /*0x21e1cc8*/ void EnableStun(bool playAnimationWhileStunned, Yeti.UnitPuppet unit);
        static /*0x21e246c*/ void DisableStun(bool playAnimationWhileStunned, Yeti.UnitPuppet unit);
        static /*0x21e2330*/ void SetAvatarAnimationSpeedForAttack(bool isUnaffectedByAttackSpeed, bool isPrimary, Yeti.UnitPuppet unit);
        /*0x21d7518*/ UnitAttackProcessor();
        /*0x21e16b8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e1904*/ void HandleAttackCycleStopped(YetiSimCoreLib.Messaging.Events.AttackCycleStoppedEventArgs args);
        /*0x21e201c*/ void HandleAttackCycleStarted(YetiSimCoreLib.Messaging.Events.AttackCycleStartedEventArgs args);
        /*0x21e27c0*/ void TriggerActionAnimation(Yeti.UnitPuppet unit, Yeti.Data.AbilityAnimationType animLinkId, YetiSimCoreLib.Game.InstanceId targetId, YetiSimCoreLib.Messaging.Events.AttackCycleDuration duration);
        /*0x21e2b34*/ void HandleUnitArmed(YetiSimCoreLib.Messaging.Events.UnitArmedEventArgs args);
    }

    class UnitBehaviorProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x20*/ string TriggerIdleName;
        /*0x28*/ string TriggerWalkName;

        /*0x21e3680*/ UnitBehaviorProcessor();
        /*0x21e2dd8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e2f78*/ void TriggerIdle(YetiSimCoreLib.Messaging.Events.IdleBehaviorStartedEventArgs args);
        /*0x21e323c*/ void HandleBossIntroComplete();
        /*0x21e3254*/ void TriggerWalk(YetiSimCoreLib.Messaging.Events.MoveBehaviorStartedEventArgs args);
    }

    class UnitCooldownProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e383c*/ UnitCooldownProcessor();
        /*0x21e3704*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e37f8*/ void HandleCooldownUpdated(YetiSimCoreLib.Messaging.Events.LoadoutCooldownUpdatedEventArgs args);
    }

    class UnitDamagedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x20*/ Yeti.Combat.MessageProcessors.GameSimulationSummary _gameSimulationSummary;

        /*0x21e3be4*/ UnitDamagedProcessor();
        /*0x21e3844*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e3938*/ void ChangeHealthBarValue(YetiSimCoreLib.Messaging.Events.UnitDamagedEventArgs args);
    }

    class UnitHealedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e3d44*/ UnitHealedProcessor();
        /*0x21e3bec*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e3ce0*/ void ChangeHealthBarValue(YetiSimCoreLib.Messaging.Events.UnitHealedEventArgs args);
    }

    class UnitImpactedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e45c0*/ UnitImpactedProcessor();
        /*0x21e3d4c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e3e40*/ void ProcessUnitImpacted(YetiSimCoreLib.Messaging.Events.UnitImpactedEventArgs args);
        /*0x21e42d4*/ void SpawnSpecialImpactVfx(YetiSimCoreLib.Messaging.Events.UnitImpactedEventArgs args);
        /*0x21e3f94*/ void PlayImpactAudio(YetiSimCoreLib.Messaging.Events.UnitImpactedEventArgs args);
    }

    class UnitLevelChangedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e4708*/ UnitLevelChangedProcessor();
        /*0x21e45c8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e46bc*/ void HandleUnitLevelChanged(YetiSimCoreLib.Messaging.Events.UnitLevelChangedEventArgs args);
    }

    class UnitPromotedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e500c*/ UnitPromotedProcessor();
        /*0x21e4710*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e4a00*/ void HandleUnitPromotedByTacoCharge(YetiSimCoreLib.Messaging.Events.UnitPromotedByTacoChargeEventArgs args);
        /*0x21e4a48*/ void HandleUnitPromotedByAbility(YetiSimCoreLib.Messaging.Events.UnitPromotedByAbilityEventArgs args);
        /*0x21e4a90*/ void HandleUnitPromotedByPlayer(YetiSimCoreLib.Messaging.Events.IPromoteUnitMessage args);
        /*0x21e4bac*/ void HandleUnitPromoted(YetiSimCoreLib.Messaging.Events.UnitsPromotedEventArgs args);
    }

    class UnitPulledProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e5350*/ UnitPulledProcessor();
        /*0x21e5014*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e51b4*/ void HandlePullStarted(YetiSimCoreLib.Messaging.Events.PullStartedEventArgs args);
        /*0x21e5284*/ void HandlePullStopped(YetiSimCoreLib.Messaging.Events.PullStoppedEventArgs args);
    }

    class UnitRemovedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e55c8*/ UnitRemovedProcessor();
        /*0x21e5358*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e544c*/ void HandleUnitRemoved(YetiSimCoreLib.Messaging.Events.UnitRemovedEventArgs args);
    }

    class UnitsDetachedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e5938*/ UnitsDetachedProcessor();
        /*0x21e55d0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e56c4*/ void HandleUnitsDetached(YetiSimCoreLib.Messaging.Events.UnitsDetachedEventArgs args);
    }

    class UnitSpawnedProcessor : Yeti.CoreSimMessageProcessor
    {
        static string DropIndicatorPrefix = "vfx.drop_indicator_";
        static /*0x0*/ UnityEngine.Vector3 OffScreenVector;
        /*0x20*/ string UnitSpawnedName;
        /*0x28*/ string UnitInitializedName;
        /*0x30*/ Yeti.CoreSimWrapper _coreSim;

        static /*0x21e7b1c*/ UnitSpawnedProcessor();
        static /*0x21e6d8c*/ void HandleInitialStats(Yeti.UnitPuppet unitPuppet, YetiSimCoreLib.Game.UnitState unitState);
        static /*0x21e6ad8*/ void HandleStorage(Yeti.CombatSceneStateContext context, Yeti.UnitPuppet unitPuppet, YetiSimCoreLib.Game.UnitState unitState);
        static /*0x21e7000*/ void CreateItemDropVfx(Yeti.CombatSceneStateContext context, Yeti.UnitPuppet unitPuppet, int dropTableId);
        static /*0x21e666c*/ void PlaySpawnFromAbilityAnimation(Yeti.UnitPuppet unitPuppet, YetiSimCoreLib.Game.UnitState unitState);
        static /*0x21e79ec*/ bool <CreateItemDropVfx>g__TryGetVisualModifierForDropType|15_0(Yeti.Data.UnitDropItemDefinition.ItemOneofCase itemCase, ref Yeti.VisualModifierType visualModifierType);
        /*0x21e5940*/ UnitSpawnedProcessor(Yeti.CoreSimWrapper coreSim);
        /*0x21e59d8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e5b78*/ void ProcessUnitSpawned(YetiSimCoreLib.Messaging.Events.UnitSpawnedEventArgs args);
        /*0x21e5cc4*/ void CreatePrespawnedUnit(YetiSimCoreLib.Game.UnitState unitState);
        /*0x21e5e44*/ void CreateMidGameSpawnedUnit(YetiSimCoreLib.Messaging.Events.UnitSpawnedEventArgs args);
        /*0x21e5f30*/ Yeti.UnitPuppet SpawnUnitPuppet(YetiSimCoreLib.Game.UnitState unitState, Yeti.CombatSceneStateContext context);
        /*0x21e67c0*/ void MovePuppetToCorrectLocation(Yeti.UnitPuppet unitPuppet, YetiSimCoreLib.Game.UnitState unitState);
        /*0x21e6250*/ void CreateSpawnVfx(Yeti.UnitPuppet unitPuppet, YetiSimCoreLib.Game.UnitState unitState);
        /*0x21e7a04*/ void ProcessUnitSpawnedThroughInitialization(YetiSimCoreLib.Messaging.Events.UnitInitializedEventArgs args);
    }

    class UnitSummonedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x20*/ string UnitSummonedName;

        /*0x21e8160*/ UnitSummonedProcessor();
        /*0x21e7b74*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e7c68*/ void HandleUnitSummoned(YetiSimCoreLib.Messaging.Events.UnitSummonedEventArgs args);
    }

    class UnitStorageProcessor : Yeti.CoreSimMessageProcessor
    {
        static /*0x0*/ UnityEngine.Vector3 OffBoardPosition;
        /*0x20*/ string UnitUnstoredName;
        /*0x28*/ string UnitStoredName;

        static /*0x21e8760*/ UnitStorageProcessor();
        static /*0x21e795c*/ void StoreUnit(Yeti.UnitPuppet target, bool isVisible);
        static /*0x21e77e4*/ void PositionStorer(Yeti.UnitPuppet targetPuppet, Yeti.UnitPuppet sourcePuppet, bool isVisible);
        /*0x21e86f8*/ UnitStorageProcessor();
        /*0x21e81b8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e8358*/ void HandleUnitUnstored(YetiSimCoreLib.Messaging.Events.UnitUnstoredEventArgs args);
        /*0x21e8534*/ void HandleUnitStored(YetiSimCoreLib.Messaging.Events.StoredUnitEventArgs args);
    }

    class UnitSuperchargeProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e8924*/ UnitSuperchargeProcessor();
        /*0x21e87b8*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e88ac*/ void HandleSuperChargeUpdated(YetiSimCoreLib.Messaging.Events.UnitSuperchargeUpdatedEventArgs args);
    }

    class UnitTacoChargeProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e8ba8*/ UnitTacoChargeProcessor();
        /*0x21e892c*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e8a20*/ void HandleUnitTacoChargeUpdated(YetiSimCoreLib.Messaging.Events.UnitTacoChargeUpdatedEventArgs args);
    }

    class UnitUnarmedProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e8d6c*/ UnitUnarmedProcessor();
        /*0x21e8bb0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e8ca4*/ void HandleUnitUnarmed(YetiSimCoreLib.Messaging.Events.UnitUnarmedEventArgs args);
    }

    class WaveStartedProcessor : Yeti.CoreSimMessageProcessor
    {
        static string Name = "WaveStartedProcessor";

        /*0x21e909c*/ WaveStartedProcessor();
        /*0x21e8d74*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e8e68*/ void ProcessWaveStarted(YetiSimCoreLib.Messaging.Events.WaveStartedEventArgs args);
        /*0x21e8fec*/ void PlayWaveStartedAudioEvent(YetiSimCoreLib.Messaging.Events.WaveStartedEventArgs args);
    }

    class ZombiePreviewProcessor : Yeti.CoreSimMessageProcessor
    {
        /*0x21e9648*/ ZombiePreviewProcessor();
        /*0x21e90a4*/ Yeti.PuppetLifecycleController get__puppetLifecycleController();
        /*0x21e90bc*/ YetiSimCoreLib.Game.UnitDatabase get__unitDatabase();
        /*0x21e90e0*/ void RegisterEvents(YetiSimCoreLib.Messaging.IMessageListener messages);
        /*0x21e9280*/ void HandleZombiePreviewSpawned(YetiSimCoreLib.Messaging.Events.ZombiePreviewSpawnedEventArgs args);
        /*0x21e94d8*/ void HandleZombiePreviewRemoved(YetiSimCoreLib.Messaging.Events.ZombiePreviewRemovedEventArgs args);
    }

    class NonPoolingCombatObjectLifeCycleManager : Yeti.ICombatObjectLifeCycleManager
    {
        /*0x10*/ UnityEngine.Transform _combatSceneRoot;
        /*0x18*/ System.Collections.Generic.Dictionary<string, UnityEngine.GameObject> _prefabMapping;

        static /*0x21e99cc*/ void CleanUpInstance(UnityEngine.GameObject returnedObject);
        /*0x21e9650*/ NonPoolingCombatObjectLifeCycleManager(UnityEngine.Transform combatSceneRoot);
        /*0x21e96ec*/ void AddTemplate(UnityEngine.GameObject prefab);
        /*0x21e97a4*/ void RemoveTemplate(string assetId);
        /*0x21e9870*/ void DecrementReportedAllocationsAfterSceneCleanup();
        /*0x21e9874*/ UnityEngine.GameObject Create(string assetId);
        /*0x21e996c*/ void Destroy(UnityEngine.GameObject returnedObject);
        /*0x21e9a98*/ bool CanCreateAsset(string assetId);
    }

    class PausedCombatState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatSceneStateContext _context;

        /*0x21e9b30*/ PausedCombatState(Yeti.CombatSceneStateContext context);
        /*0x21e9af0*/ string get_Name();
        /*0x21e9c28*/ void OnEnter();
        /*0x21e9c40*/ void OnExit();
    }

    class PausedForFtueGameState : RSG.AbstractState
    {
        static string StateName = "PausedForFtue";
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.CombatSceneStateContext _context;
        /*0x80*/ Yeti.CoreSimWrapper _coreSim;

        /*0x21e9c98*/ PausedForFtueGameState(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim);
        /*0x21e9c58*/ string get_Name();
        /*0x21e9dac*/ void OnEnter();
        /*0x21e9dc8*/ void OnExit();
        /*0x21e9de4*/ void OnUpdate(float deltaTime);
    }

    class PausedFtueGameState : RSG.AbstractState
    {
        static string StateName = "PausedFtue";
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Odin.IUILayerService _layerService;
        /*0x80*/ Yeti.CombatSceneStateContext _context;
        /*0x88*/ bool _wasGlobalLayerEnabled;

        /*0x21e9e78*/ PausedFtueGameState(Yeti.CombatSceneStateContext context);
        /*0x21e9e38*/ string get_Name();
        /*0x21e9f74*/ void OnEnter();
        /*0x21ea0b4*/ void OnExit();
    }

    class PausedGameState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.ITutorialController _tutorialController;
        /*0x80*/ Yeti.INavigationService _navigationService;
        /*0x88*/ Yeti.CombatSceneStateContext _context;

        /*0x21ea21c*/ PausedGameState(Yeti.CombatSceneStateContext context);
        /*0x21ea1dc*/ string get_Name();
        /*0x21ea314*/ void OnEnter();
        /*0x21ea4a8*/ void OnExit();
        /*0x21ea400*/ void HideActiveTutorial();
        /*0x21ea594*/ void ShowActiveTutorial();
    }

    class PlantOnBoardSelectedAudioUtil
    {
        static /*0x21ea63c*/ void PlayEnterAudioCue(Yeti.CombatSceneState combatScene);
        static /*0x21ea690*/ void PlayExitAudioCue(Yeti.CombatSceneState combatScene, bool plantWasMoved);
        /*0x21ea708*/ PlantOnBoardSelectedAudioUtil();
    }

    class PlayingGameState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatSceneStateContext _context;
        /*0x78*/ Yeti.Network.INetworkConnectivityMonitor _networkConnectivity;
        /*0x80*/ Yeti.Network.NetworkConnectivityLostReporter _networkConnectivityLostReporter;
        /*0x88*/ Yeti.CombatFpsRecorder _combatFpsRecorder;
        /*0x90*/ Yeti.ITutorialController _tutorialController;

        /*0x21ea750*/ PlayingGameState(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim, Yeti.Network.INetworkConnectivityMonitor networkConnectivity, Yeti.Network.NetworkConnectivityLostReporter networkConnectivityLostReporter, Yeti.CombatSceneState combatScene);
        /*0x21ea710*/ string get_Name();
        /*0x21eacc0*/ void OnEnter();
        /*0x21eacfc*/ void OnExit();
    }

    class PointerGameEvent
    {
        /*0x10*/ string _eventName;
        /*0x18*/ Yeti.GameEvent<UnityEngine.Vector3> _gameEvent;

        /*0x21ead14*/ PointerGameEvent(string eventName);
        /*0x21ead44*/ void Broadcast(Yeti.GameEventManager gameEvents, UnityEngine.Vector3 position);
        /*0x21eade0*/ Yeti.GameEvent<UnityEngine.Vector3> GetGameEvent(Yeti.GameEventManager gameEvents);
    }

    class PooledCombatObjectLifeCycleManager : Yeti.ICombatObjectLifeCycleManager
    {
        static int DefaultAllocationSize = 1;
        /*0x10*/ UnityEngine.Transform _combatSceneRoot;
        /*0x18*/ System.Collections.Generic.Dictionary<string, Yeti.GameObjectPool> _pools;
        /*0x20*/ System.Collections.Generic.Dictionary<UnityEngine.GameObject, string> _instanceToAssetMap;
        /*0x28*/ UnityEngine.ResourceManagement.EA.IExternalAllocationReporter _externalAllocationReporter;
        /*0x30*/ PvzN3xt.Data.ObjectPoolSizesDatabase _objectPoolSizesDatabase;
        /*0x38*/ int _systemMemorySizeMB;
        /*0x3c*/ int _highMemThresholdMB;

        static /*0x21eb6dc*/ void CleanUpInstance(UnityEngine.GameObject returnedObject);
        /*0x21eaec4*/ PooledCombatObjectLifeCycleManager(UnityEngine.Transform combatSceneRoot, UnityEngine.ResourceManagement.EA.IExternalAllocationReporter externalAllocationReporter, PvzN3xt.Data.ObjectPoolSizesDatabase objectPoolSizesDatabase, int systemMemorySizeMB, int highMemThresholdMB);
        /*0x21eae74*/ System.Collections.Generic.IEnumerable<string> get_AssetIds();
        /*0x21eaffc*/ void AddTemplate(UnityEngine.GameObject prefab);
        /*0x21eb1a4*/ void RemoveTemplate(string assetId);
        /*0x21eb25c*/ void DecrementReportedAllocationsAfterSceneCleanup();
        /*0x21eb04c*/ void AddTemplate(UnityEngine.GameObject prefab, int poolSize, int allocationSize);
        /*0x21eb420*/ UnityEngine.GameObject Create(string assetId);
        /*0x21eb5ec*/ void Destroy(UnityEngine.GameObject returnedObject);
        /*0x21eb7b0*/ bool CanCreateAsset(string assetId);
    }

    class PostCombatRewardFlowController
    {
        /*0x10*/ Yeti.GameEventManager _gameEventManager;
        /*0x18*/ PvzN3xt.Event.EventController _eventController;
        /*0x20*/ PvzN3xt.Rewards.UnclaimedRewardsDataSource _unclaimedRewardsDataSource;
        /*0x28*/ PvzN3xt.Rewards.RewardFlowController _rewardFlowController;
        /*0x30*/ PvzN3xt.Rewards.ChoiceRewardDefinitionProvider _choiceRewardDefinitionProvider;

        static /*0x21ec818*/ bool IsCoinReward(PvzN3xt.Data.Reward reward);
        /*0x21ecd64*/ PostCombatRewardFlowController();
        /*0x21eb808*/ void CreateBattleRewardsFlowAndStart(System.Action onComplete);
        /*0x21eb834*/ PvzN3xt.Rewards.RewardFlow CreateRewardFlow(System.Action onComplete);
        /*0x21ebd00*/ int GetTotalCoinAmount();
        /*0x21ebd3c*/ int GetBaseCoinAmount();
        /*0x21ec0d8*/ int GetBonusCoinAmount();
        /*0x21ec478*/ int GetCollectedMoneyDropCoinAmount();
        /*0x21ec860*/ PvzN3xt.Rewards.ClaimableInfo get_ClaimableToShow();
        /*0x21ec878*/ void MultiplyCurrentReward(float multiplier, string adId);
        /*0x21eb8fc*/ void AddBattleRewards(PvzN3xt.Rewards.RewardFlow rewardFlow);
        /*0x21eb99c*/ void AddDailyChallengeRewards(PvzN3xt.Rewards.RewardFlow rewardFlow);
        /*0x21ebc60*/ void AddAlmanacEntryUnlockRewards(PvzN3xt.Rewards.RewardFlow rewardFlow);
        /*0x21eccc4*/ void ClaimRewards(System.Action onComplete);
        /*0x21eccdc*/ bool HasBattleRewards();
        /*0x21eba3c*/ void AddEventMilestoneRewards(PvzN3xt.Rewards.RewardFlow rewardFlow);
    }

    class PreBattleTricksGameState : RSG.AbstractState
    {
        static string StateName = "PreBattleTricks";
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.CombatSceneStateContext _context;
        /*0x80*/ Yeti.CoreSimWrapper _coreSim;
        /*0x88*/ int _trickUnitId;

        /*0x21ecdac*/ PreBattleTricksGameState(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim);
        /*0x21ecd6c*/ string get_Name();
        /*0x21ecec0*/ void OnEnter();
        /*0x21ed32c*/ void SetUpPartiallyPausedCombat();
        /*0x21ed390*/ void OnZombieDied(int unitId);
        /*0x21ed440*/ void OnExit();
        /*0x21ed4a4*/ void OnUpdate(float deltaTime);
    }

    class PreBattleUnitSpawnController
    {
        /*0x10*/ int SpawnCount;
        /*0x18*/ System.Collections.Generic.List<int> _unitsToSpawn;

        /*0x21ed95c*/ PreBattleUnitSpawnController();
        /*0x21ed850*/ void AddUnit(int unitId);
        /*0x21ed8b8*/ void ClearUnits();
        /*0x21ed954*/ System.Collections.Generic.List<int> GetUnitsToSpawn();
    }

    class PreBattleUnitSpawnDebugManager : CapitalGames.IInitializable
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenu;
        /*0x10*/ Yeti.ICombatUnitDefinitionProvider _combatUnitDefinitionProvider;
        /*0x18*/ Yeti.PreBattleUnitSpawnController _unitSpawnController;
        /*0x20*/ System.Collections.Generic.List<string> _unitNamesToSpawn;

        static /*0x21ee188*/ PreBattleUnitSpawnDebugManager();
        static /*0x21edde0*/ void SetSortOrder();
        /*0x21ee100*/ PreBattleUnitSpawnDebugManager();
        /*0x21ed9ec*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x21edad4*/ void RegisterCheats();
        /*0x21edde4*/ void AddUnitToSpawn(Yeti.Data.UnitDefinition unit);
        /*0x21ede50*/ void SetSpawnCount(int count);
        /*0x21ede68*/ void ClearAllUnits();
        /*0x21edf10*/ string ShowSelectedUnits();
    }

    class PreGameNarrativeState : RSG.AbstractState
    {
        static string PlayerRatingReplaceToken = "<insert_player_rating>";
        /*0x70*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x78*/ Yeti.IAssetManager _assetManager;
        /*0x80*/ Odin.IUILayerService _layerService;
        /*0x88*/ PvzN3xt.DynamicDifficulty.DynamicDifficultyController _dynamicDifficultyController;
        /*0x90*/ PvzN3xt.Data.TrackLevelIntroNarrative _introNarrative;

        /*0x21ee248*/ PreGameNarrativeState(Yeti.CombatSceneStateContext context, PvzN3xt.UI.InputBlockerController inputBlockerController, Yeti.IAssetManager assetManager, Odin.IUILayerService layerService, PvzN3xt.DynamicDifficulty.DynamicDifficultyController dynamicDifficultyController);
        /*0x21ee208*/ string get_Name();
        /*0x21ee2f0*/ void OnEnter();
    }

    class PreGameState : RSG.AbstractState
    {
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Automation.IAutomationSystem _automation;
        /*0x80*/ Yeti.PreBattleUnitSpawnController _unitSpawnController;
        /*0x88*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x90*/ Yeti.IAssetManager _assetManager;
        /*0x98*/ Odin.IUILayerService _layerService;
        /*0xa0*/ PvzN3xt.DynamicDifficulty.DynamicDifficultyController _dynamicDifficultyController;
        /*0xa8*/ Yeti.CombatSceneStateContext _context;
        /*0xb0*/ Yeti.CoreSimWrapper _coreSim;
        /*0xb8*/ Yeti.CombatSceneState _combatScene;
        /*0xc0*/ Yeti.CountdownState _countdownState;

        /*0x21ee4ac*/ PreGameState(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim, Yeti.CombatSceneState combatScene);
        /*0x21ee46c*/ string get_Name();
        /*0x21ee5dc*/ void InitializeChildStates();
        /*0x21eeae8*/ void OnEnter();
        /*0x21eec4c*/ void SetupPlayerAvatar();
        /*0x21eefa0*/ void SpawnPreBattleUnits();
        /*0x21ef2dc*/ void OnExit();
        /*0x21ef2f8*/ void OnUpdate(float deltaTime);
        /*0x21ef310*/ void OnCountdownStateCompleted();
        /*0x21ef318*/ void AttachAutomation();
        /*0x21ef464*/ void DisableEntryInterstitial();
    }

    class PreGameTutorialState : RSG.AbstractState, Yeti.ITutorialCallbacks
    {
        /*0x70*/ Yeti.ITutorialController _tutorialController;
        /*0x78*/ Yeti.CombatSceneStateContext _context;

        /*0x21ee8a8*/ PreGameTutorialState(Yeti.CombatSceneStateContext context);
        /*0x21ef47c*/ string get_Name();
        /*0x21ef4bc*/ void OnEnter();
        /*0x21ef584*/ void OnExit();
        /*0x21ef680*/ void TutorialsComplete();
        /*0x21ef688*/ void TutorialsNotTriggered();
        /*0x21ef690*/ void TutorialsTriggered();
    }

    interface IPuppetAudioManager
    {
        /*0x1f30c88*/ void PlayPuppetAudioEvent(int yetiEventId, Yeti.IPuppetObjectProvider puppet);
        /*0x1f30ebc*/ void Update(Yeti.IPuppetObjectProvider puppet);
        /*0x1f30c88*/ void SetUnitLevel(int level, Yeti.IPuppetObjectProvider puppet);
        /*0x1f30ebc*/ void SetPromotedSwitch(Yeti.IPuppetObjectProvider puppet);
        /*0x1f30ee8*/ void SetAttackTypeSwitch(Yeti.IPuppetObjectProvider puppet, Yeti.Data.AbilityAnimationType attackType);
        /*0x1f30c88*/ void SetSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x1f30c88*/ void AddUnitBgmMusicSwitchReference(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x1f30bfc*/ void RemoveUnitBgmSwitchReference(int unityId, int outroUnityId, Yeti.IPuppetObjectProvider puppet);
        /*0x1f30c88*/ void SetUnitBgmSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
    }

    class PuppetAudioManager : Yeti.IPuppetAudioManager
    {
        static float MaxPanningLocationRtpcValue = 100;
        /*0x10*/ Yeti.GameSoundManager _soundManager;
        /*0x18*/ Yeti.CombatSoundIds _soundIds;
        /*0x20*/ Yeti.CombatMusicController _musicController;
        /*0x28*/ float _xMin;
        /*0x2c*/ float _xMax;

        /*0x21ef694*/ PuppetAudioManager(Yeti.CombatSceneStateContext context);
        /*0x21ef76c*/ void PlayPuppetAudioEvent(int yetiEventId, Yeti.IPuppetObjectProvider puppet);
        /*0x21ef8b0*/ void PlayAudioEvent(int yetiEventId, UnityEngine.Vector3 position, UnityEngine.GameObject gameObject);
        /*0x21ef9c0*/ void Update(Yeti.IPuppetObjectProvider puppet);
        /*0x21ef98c*/ float GetPanningLocationRtpcValue(UnityEngine.Vector3 position);
        /*0x21efb58*/ void SetUnitLevel(int level, Yeti.IPuppetObjectProvider puppet);
        /*0x21efc5c*/ void SetMiniBossSwitch(Yeti.IPuppetObjectProvider puppet);
        /*0x21efd34*/ void SetPromotedSwitch(Yeti.IPuppetObjectProvider puppet);
        /*0x21efe0c*/ void SetAttackTypeSwitch(Yeti.IPuppetObjectProvider puppet, Yeti.Data.AbilityAnimationType attackType);
        /*0x21eff28*/ void SetSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21efee8*/ int GetAttackTypeSwitch(Yeti.Data.AbilityAnimationType attackType);
        /*0x21efff4*/ void AddUnitBgmMusicSwitchReference(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f000c*/ void RemoveUnitBgmSwitchReference(int unityId, int outroUnityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0024*/ void SetUnitBgmSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
    }

    class SimplePuppetAudioManager : Yeti.IPuppetAudioManager
    {
        /*0x10*/ Yeti.GameSoundManager _soundManager;

        /*0x21f003c*/ SimplePuppetAudioManager(Yeti.GameSoundManager gameSoundManager);
        /*0x21f006c*/ void PlayPuppetAudioEvent(int yetiEventId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0138*/ void Update(Yeti.IPuppetObjectProvider puppet);
        /*0x21f013c*/ void SetUnitLevel(int level, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0140*/ void SetPromotedSwitch(Yeti.IPuppetObjectProvider puppet);
        /*0x21f0144*/ void SetAttackTypeSwitch(Yeti.IPuppetObjectProvider puppet, Yeti.Data.AbilityAnimationType attackType);
        /*0x21f0148*/ void SetSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f014c*/ void AddUnitBgmMusicSwitchReference(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0150*/ void RemoveUnitBgmSwitchReference(int unityId, int outroUnityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0154*/ void SetUnitBgmSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0158*/ void SetEmoteSwitch(Yeti.IPuppetObjectProvider puppet, Yeti.PuppetAnimationType animType);
    }

    class NullPuppetAudioManager : Yeti.IPuppetAudioManager
    {
        static /*0x0*/ Yeti.NullPuppetAudioManager Instance;

        static /*0x21f018c*/ NullPuppetAudioManager();
        /*0x21f015c*/ NullPuppetAudioManager();
        /*0x21f0164*/ void PlayPuppetAudioEvent(int yetiEventId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0168*/ void Update(Yeti.IPuppetObjectProvider puppet);
        /*0x21f016c*/ void SetUnitLevel(int level, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0170*/ void SetPromotedSwitch(Yeti.IPuppetObjectProvider puppet);
        /*0x21f0174*/ void SetAttackTypeSwitch(Yeti.IPuppetObjectProvider puppet, Yeti.Data.AbilityAnimationType attackType);
        /*0x21f0178*/ void SetSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f017c*/ void AddUnitBgmMusicSwitchReference(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0180*/ void RemoveUnitBgmSwitchReference(int unityId, int outroUnityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0184*/ void SetUnitBgmSwitch(int unityId, Yeti.IPuppetObjectProvider puppet);
        /*0x21f0188*/ void SetEmoteSwitch(Yeti.IPuppetObjectProvider puppet, Yeti.PuppetAnimationType animType);
    }

    class PuppetLifecycleController
    {
        /*0x10*/ Yeti.CombatSceneStateContext _context;
        /*0x18*/ Yeti.CombatScenePuppets _puppets;
        /*0x20*/ Yeti.PuppetFactory _puppetFactory;
        /*0x28*/ Yeti.GameSoundManager _soundManager;
        /*0x30*/ Yeti.CombatImpactSoundManager _impactSoundManager;
        /*0x38*/ Yeti.CombatUnitAudioTracker _unitAudioTracker;
        /*0x40*/ Yeti.PuppetAudioManager _puppetAudioManager;
        /*0x48*/ Yeti.PuppetSlotController _puppetSlotController;
        /*0x50*/ System.Collections.Generic.Dictionary<Yeti.IPuppet, YetiSimCoreLib.Game.InstanceId> _dyingPuppets;
        /*0x58*/ System.Collections.Generic.Dictionary<Yeti.IPuppet, YetiSimCoreLib.Game.InstanceId> _deadPuppets;
        /*0x60*/ Yeti.OnDiedHandler<Yeti.UnitPuppet> _onUnitPuppetDeathCompleteDelegate;
        /*0x68*/ Yeti.OnDiedHandler<Yeti.ProjectilePuppet> _onProjectilePuppetDeathCompleteDelegate;
        /*0x70*/ Yeti.OnDiedHandler<Yeti.SunPuppet> _onSunPuppetDeathCompleteDelegate;
        /*0x78*/ Yeti.OnDiedHandler<Yeti.OnBoardBoostPuppet> _onBoardBoostPuppetDeathCompleteDelegate;
        /*0x80*/ Yeti.OnDiedHandler<Yeti.OnBoardDropPuppet> _onBoardDropPuppetDeathCompleteDelegate;

        /*0x21f01f4*/ PuppetLifecycleController(Yeti.CombatSceneStateContext context);
        /*0x21e6738*/ Yeti.UnitPuppet CreateUnitPuppet(Yeti.Data.UnitDefinition unitDefinition, YetiSimCoreLib.Game.UnitState unitState);
        /*0x21f0538*/ void SetupUnitAudio(Yeti.UnitPuppet unitPuppet, Yeti.Data.UnitDefinition unitDefinition, YetiSimCoreLib.Game.UnitState unitState);
        /*0x21f0838*/ void CreateProjectilePuppet(Yeti.ProjectilePuppetCreationArgs args);
        /*0x21f08dc*/ void SetupNonUnitAudio(Yeti.IPuppetAvatarView avatar);
        /*0x21f0a08*/ Yeti.SunPuppet CreateSunPuppet(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21f0ad4*/ Yeti.OnBoardBoostPuppet CreateOnBoardInstantUsePlantBoost(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.Data.UnitDefinition unitDef);
        /*0x21f0bb0*/ Yeti.OnBoardDropPuppet CreateOnBoardPlantFoodBoost(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21f0c7c*/ Yeti.OnBoardDropPuppet CreateDynamicDropPuppet(YetiSimCoreLib.Game.InstanceId instanceId, Yeti.Data.UnitDropItemDefinition dropDef, Yeti.Data.DynamicDropDefinition dynamicDropDef);
        /*0x21f1394*/ void CleanUpDeadPuppets();
        /*0x21f19c8*/ void KillPuppet(YetiSimCoreLib.Game.InstanceId instanceId, string presentationTag);
        /*0x21e5570*/ void RemoveUnitPuppet(YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21f1b18*/ void MarkPuppetAsDying(Yeti.IPuppet puppet, YetiSimCoreLib.Game.InstanceId instanceId);
        /*0x21f1d0c*/ void HandlePuppetDeathComplete(Yeti.IPuppet puppet);
        /*0x21f1cbc*/ void HandleUnitPuppetDeathComplete(Yeti.UnitPuppet sender);
        /*0x21f1e78*/ void HandleProjectilePuppetDeathComplete(Yeti.ProjectilePuppet sender);
        /*0x21f1eb4*/ void HandleSunPuppetDeathComplete(Yeti.SunPuppet sender);
        /*0x21f1f18*/ void HandleOnBoardBoostPuppetDeathComplete(Yeti.OnBoardBoostPuppet sender);
        /*0x21f2158*/ void HandleOnBoardDropPuppetDeathComplete(Yeti.OnBoardDropPuppet sender);
        /*0x21f1f7c*/ void MarkPuppetAsDead(Yeti.IPuppet sender);
        /*0x21f21bc*/ bool IsUnitDyingOrDead(Yeti.UnitPuppet puppet);
        /*0x21f223c*/ void RemoveAllPuppets();
        /*0x21f2270*/ void KillAllActivePuppets();
    }

    class PusherPusheeSyncer
    {
        /*0x10*/ Yeti.CombatScenePuppets _puppets;
        /*0x18*/ System.Collections.Generic.Dictionary<int, int> _pusherToPusheeInstanceIdMapping;
        /*0x20*/ System.Collections.Generic.Dictionary<int, int> _pusheeToPusherInstanceIdMapping;

        /*0x21f2328*/ PusherPusheeSyncer(Yeti.CombatSceneStateContext context);
        /*0x21f2320*/ System.Collections.Generic.Dictionary<int, int> get_PusherToPusheeInstanceIdMapping();
        /*0x21f23f0*/ void StoreUnitAttachmentMappings(YetiSimCoreLib.Game.UnitState unitState);
        /*0x21e587c*/ void DetachUnits(int pusherInstanceId);
        /*0x21e34d0*/ bool TryGetForceSyncedPushee(Yeti.UnitPuppet pusherUnit, ref Yeti.UnitPuppet pusheeUnit);
        /*0x21f24bc*/ bool IsForceSyncedPushee(Yeti.UnitPuppet unit);
    }

    class RunningGameState : RSG.AbstractState
    {
        static string StateName = "RunningGame";
        /*0x70*/ Yeti.CombatGuiModel _combatModel;
        /*0x78*/ Yeti.CombatSceneStateContext _context;
        /*0x80*/ Yeti.CoreSimWrapper _coreSim;
        /*0x88*/ Yeti.CombatSceneState _combatScene;
        /*0x90*/ float _lastRealTimeStamp;

        /*0x21eab98*/ RunningGameState(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim, Yeti.CombatSceneState combatScene);
        /*0x21f2648*/ string get_Name();
        /*0x21f2688*/ void OnUpdate(float deltaTime);
        /*0x21f27e4*/ void OnEnter();
        /*0x21f2814*/ void OnExit();
    }

    class ScoreEffectController : Yeti.TextEffectController
    {
        /*0x44*/ float _minX;
        /*0x48*/ float _defaultFontSize;
        /*0x50*/ float[] _fontSizePerColumn;
        /*0x58*/ Yeti.ProgrammaticAnimation[] _scoreAnimations;
        /*0x60*/ UnityEngine.Vector3 _offsetFromZombiePosition;
        /*0x6c*/ float _timeBetweenBonusScores;
        /*0x70*/ TMPro.TextMeshProUGUI _bonusScoreField;
        /*0x78*/ Yeti.ScoreBonusConfig[] _bonusConfigs;
        /*0x80*/ Yeti.ProgrammaticAnimation[] _bonusAnimations;
        /*0x88*/ float _currentSelfDestructTime;

        static /*0x21f2974*/ void PlayAnimations(Yeti.ProgrammaticAnimation[] animations);
        /*0x21f2c04*/ ScoreEffectController();
        /*0x21f2830*/ float get_MinX();
        /*0x21f2838*/ UnityEngine.Vector3 get_OffsetFromZombiePosition();
        /*0x21f2844*/ float get_TimeBetweenBonusScores();
        /*0x21f284c*/ float get_TotalRunningTime();
        /*0x21f2854*/ void Initialize();
        /*0x21f28f4*/ void SetScoreText(int score, int column);
        /*0x21f29d4*/ void SetBonusText(Yeti.Data.ScoreBonusType type, string bonusText, int score);
        /*0x21f2a8c*/ Yeti.ScoreBonusConfig GetBonusConfig(Yeti.Data.ScoreBonusType type);
        /*0x21f286c*/ void DisableAllFields();
        /*0x21f2bf0*/ bool IsComplete();
    }

    struct ScoreBonusConfig
    {
        /*0x10*/ Yeti.Data.ScoreBonusType BonusType;
        /*0x18*/ TMPro.TextMeshProUGUI TextField;
        /*0x20*/ float SelfDestructTime;
    }

    class ScoreNormalizationUtils
    {
        static int NormalizedMaxPossibleScore = 2500;

        static /*0x21f2c0c*/ int NormalizeScore(int rawScore, int maxPossibleScore);
        static /*0x21f2c9c*/ void NormalizeRecordsForServer(Yeti.Data.ScoringRecords scoringRecords);
        /*0x21f3070*/ ScoreNormalizationUtils();
    }

    class ScorePopEffects
    {
        /*0x10*/ System.Action OnAllEffectsComplete;
        /*0x18*/ Yeti.CombatSceneStateContext _context;
        /*0x20*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x28*/ Yeti.GameEventManager _gameEventManager;
        /*0x30*/ bool _scorePopupsEnabled;
        /*0x38*/ UnityEngine.GameObject[] _highlights;
        /*0x40*/ Yeti.ScoreEffectController[] _lastEffectPerColumn;
        /*0x48*/ System.Collections.Generic.Queue<Yeti.ScorePopEffects.BonusEffectConfig> _waitingEffects;
        /*0x50*/ Yeti.ScoreEffectController _lastEffect;

        static /*0x21f4018*/ UnityEngine.Vector3 GetPositionFromCell(YetiSimCoreLib.Game.GridCell cell);
        /*0x21f31c8*/ ScorePopEffects(Yeti.CombatSceneStateContext context);
        /*0x21f3078*/ void add_OnAllEffectsComplete(System.Action value);
        /*0x21f3114*/ void remove_OnAllEffectsComplete(System.Action value);
        /*0x21f31b0*/ Yeti.CombatSceneTextEffects get__textEffectSystem();
        /*0x21f3668*/ void SetupHighlights();
        /*0x21f3830*/ void Update();
        /*0x21f3c90*/ bool HasActiveEffects();
        /*0x21f3a18*/ bool ReadyToShowNextBonus();
        /*0x21f3c04*/ bool LastEffectIsComplete();
        /*0x21f3d9c*/ void SpawnScore(int score, UnityEngine.Vector3 spawnPosition, int column);
        /*0x21f3fd0*/ void SpawnScoreBonus(Yeti.Data.ScoreBonusType type, int score, YetiSimCoreLib.Game.GridCell cell);
        /*0x21f4078*/ void SpawnScoreBonus(Yeti.Data.ScoreBonusType type, int score, int column, UnityEngine.Vector3 position);
        /*0x21f3eac*/ Yeti.ScoreEffectController SpawnScoreEffect();
        /*0x21f3ac8*/ void ShowScoreBonus(Yeti.ScorePopEffects.BonusEffectConfig config);
        /*0x21f43cc*/ void TryShowScoreBonusDoober(Yeti.ScorePopEffects.BonusEffectConfig config);

        struct BonusEffectConfig
        {
            /*0x10*/ Yeti.ScoreEffectController ScoreEffect;
            /*0x18*/ Yeti.Data.ScoreBonusType Type;
            /*0x1c*/ UnityEngine.Vector3 Position;
            /*0x28*/ int Column;
            /*0x30*/ string Text;
            /*0x38*/ int Score;

            /*0x21f4354*/ BonusEffectConfig(Yeti.ScoreEffectController scoreEffect, Yeti.Data.ScoreBonusType type, UnityEngine.Vector3 position, int column, string text, int score);
        }
    }

    class SpawnedUnitTracker
    {
        /*0x10*/ System.Collections.Generic.HashSet<int> _spawnedPlants;
        /*0x18*/ System.Collections.Generic.HashSet<int> _spawnedZombies;

        /*0x21f4618*/ SpawnedUnitTracker();
        /*0x21f44c0*/ System.Collections.Generic.IEnumerable<int> get_SpawnedPlants();
        /*0x21f44c8*/ System.Collections.Generic.IEnumerable<int> get_SpawnedZombies();
        /*0x21f44d0*/ void AddUnit(Yeti.Data.Faction faction, int unitId);
        /*0x21f4568*/ void ResetSpawnedZombiesAfterZombiePreview();
        /*0x21f45b8*/ void Clear();
    }

    class StateMachineVisualizer
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, UnityEngine.GameObject> _stateObjects;

        /*0x21f4d6c*/ StateMachineVisualizer();
        /*0x21f46c4*/ void Clear();
        /*0x21f495c*/ void Visualize(RSG.AbstractState rootState, UnityEngine.GameObject parent);
        /*0x21f4bdc*/ UnityEngine.GameObject ObtainGameObjectRepresentation(RSG.AbstractState state, UnityEngine.GameObject parentObject);
    }

    class RuntimeSunflowerEmotion
    {
        /*0x10*/ Yeti.HostMood Emotion;
        /*0x14*/ bool <IsPermanent>k__BackingField;
        /*0x18*/ float <RemainingDuration>k__BackingField;

        /*0x21f4e14*/ RuntimeSunflowerEmotion(Yeti.HostMood emotion, float duration);
        /*0x21f4e50*/ RuntimeSunflowerEmotion(Yeti.HostMood emotion);
        /*0x21f4df4*/ bool get_IsPermanent();
        /*0x21f4dfc*/ void set_IsPermanent(bool value);
        /*0x21f4e04*/ float get_RemainingDuration();
        /*0x21f4e0c*/ void set_RemainingDuration(float value);
        /*0x21f4e80*/ void SetDuration(float duration);
        /*0x21f4e8c*/ void SetPermanent();
        /*0x21f4e9c*/ void Update(float deltaTime);
        /*0x21f4eb8*/ bool IsComplete();
    }

    class SunflowerEmotionController
    {
        /*0x10*/ System.Collections.Generic.SortedList<int, Yeti.RuntimeSunflowerEmotion> _prioritizedEmotions;

        /*0x21f5784*/ SunflowerEmotionController();
        /*0x21f4ed8*/ void QueueEmotion(Yeti.SunflowerEmotionMapping emotionMapping, float duration);
        /*0x21f517c*/ void QueuePermanentEmotion(Yeti.SunflowerEmotionMapping emotionMapping);
        /*0x21f4fc8*/ Yeti.RuntimeSunflowerEmotion GetRuntimeEmotion(Yeti.HostMood emotion);
        /*0x21f5250*/ void RemoveEmotion(Yeti.HostMood emotion);
        /*0x21f5434*/ void UpdateFromGameTimer(float deltaTime);
        /*0x21f55f4*/ Yeti.HostMood DetermineCurrentEmotionAndRemoveComplete();
    }

    class TargetPatternView
    {
        static /*0x0*/ UnityEngine.Vector3 OffsetAboveRegularHighlight;
        /*0x10*/ System.Collections.Generic.List<Yeti.GridCellView> GridCellViews;

        static /*0x21f5c8c*/ TargetPatternView();
        /*0x21f5c04*/ TargetPatternView();
        /*0x21f580c*/ void AddHighlightGrid(Yeti.GridCellView highlightGrid);
        /*0x21f5864*/ void MoveTo(UnityEngine.Vector3 position);
        /*0x21f5960*/ void UpdateForElevation(YetiSimCoreLib.Game.BoardInclineMap boardInclineMap);
        /*0x21f5acc*/ void Show();
        /*0x21f5b68*/ void Hide();
    }

    class TargetPatternViewer
    {
        static float CentigridsPerTile = 100;
        /*0x10*/ Yeti.ICombatObjectLifeCycleManager _objectManager;
        /*0x18*/ Yeti.CombatDefinitionData _combatDefinition;
        /*0x20*/ YetiSimCoreLib.Game.BoardInclineMap _boardInclineMap;
        /*0x28*/ Yeti.GenericVisualConfig _presentationConfig;
        /*0x30*/ YetiSimCoreLib.Core.ObjectPool<Yeti.TargetPatternView> _targetPatternViewPool;
        /*0x38*/ System.Collections.Generic.List<Yeti.TargetPatternView> _trackedTargetPatternViews;
        /*0x40*/ System.Collections.Generic.List<float> _trackedTargetPatternExpiryTimes;

        /*0x21f5ce8*/ TargetPatternViewer(Yeti.CombatSceneStateContext context);
        /*0x21f5e70*/ void ShowErrorHighlight(UnityEngine.Vector3 worldPosition);
        /*0x21f6148*/ void ShowTargetPattern(Yeti.UnitPuppet unit, int abilityId, Yeti.Data.AbilityAnimationType animLinkId);
        /*0x21f6298*/ Yeti.TargetPatternView CreateTargetPatternView(int abilityId, Yeti.IPuppetAvatarView unitAvatar, Yeti.TargetPatternViewConfig viewConfig);
        /*0x21f6394*/ Yeti.TargetPatternView CreateTargetPatternView(int abilityId, Yeti.TargetPatternViewConfig viewConfig);
        /*0x21f6430*/ Yeti.TargetPatternView CreateRegularTargetPatternView(Yeti.Data.AbilityDefinition ability, Yeti.TargetPatternViewConfig viewConfig);
        /*0x21f66f4*/ void AddTargetAreaHighlights(Yeti.TargetPatternView targetPatternView, Yeti.Data.TargetArea targetArea, Yeti.TargetPatternViewConfig viewConfig);
        /*0x21f654c*/ Yeti.TargetPatternView CreateLaneTargetPatternView(Yeti.Data.AbilityDefinition ability, Yeti.TargetPatternViewConfig viewConfig);
        /*0x21f6894*/ UnityEngine.Vector3 CentigridsToWorldVector(float centigridX, float centigridZ);
        /*0x21f5fc4*/ Yeti.GridCellView CreateHighlightGrid(UnityEngine.Vector3 offset, UnityEngine.Color color, UnityEngine.Vector2 gridSize);
        /*0x21f6928*/ void UpdateFromGameTimer(float deltaTime);
        /*0x21f6ac4*/ void DestroyTargetPattern(Yeti.TargetPatternView targetPatternView);
    }

    class TargetPatternViewMappings
    {
        static /*0x0*/ Yeti.TargetPatternViewConfig _emptyConfig;
        /*0x10*/ Yeti.TargetPatternViewConfig _patternToUseForDrag;
        /*0x18*/ bool _showPatternForDrag;
        /*0x20*/ System.Collections.Generic.List<Yeti.TargetPatternViewConfig> _patternConfigs;

        static /*0x21f6df8*/ TargetPatternViewMappings();
        /*0x21f6df0*/ TargetPatternViewMappings();
        /*0x21f6c8c*/ Yeti.TargetPatternViewConfig GetConfigForDrag();
        /*0x21f6d08*/ Yeti.TargetPatternViewConfig GetConfig(Yeti.Data.AbilityAnimationType animationType);
    }

    class TargetPatternViewConfig
    {
        static /*0x0*/ Yeti.TargetPatternViewConfig NullInstance;
        /*0x10*/ Yeti.Data.AbilityAnimationType _animationType;
        /*0x14*/ UnityEngine.Color _color;
        /*0x24*/ float _timeInSeconds;
        /*0x28*/ bool <ShouldShow>k__BackingField;

        static /*0x21f6eb8*/ TargetPatternViewConfig();
        /*0x21f6e7c*/ TargetPatternViewConfig();
        /*0x21f6e8c*/ Yeti.Data.AbilityAnimationType get_AnimationType();
        /*0x21f6e94*/ UnityEngine.Color get_Color();
        /*0x21f6ea0*/ float get_TimeInSeconds();
        /*0x21f6ea8*/ bool get_ShouldShow();
        /*0x21f6eb0*/ void set_ShouldShow(bool value);
    }

    class ToggleStateSetter : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.DraggableUI _draggableUI;
        /*0x28*/ UnityEngine.UI.Toggle _toggle;
        /*0x30*/ Yeti.ToggleStateSetter.ToggleBehaviour _onBeginDragState;
        /*0x34*/ Yeti.ToggleStateSetter.ToggleBehaviour _onEndDragState;
        /*0x38*/ Yeti.ToggleStateSetter.ToggleBehaviour _onClickState;

        /*0x21f71d8*/ ToggleStateSetter();
        /*0x21f6f28*/ void Awake();
        /*0x21f70fc*/ void HandleBeginDragEvent(UnityEngine.EventSystems.PointerEventData data);
        /*0x21f71c8*/ void HandleEndDragEvent(UnityEngine.EventSystems.PointerEventData data);
        /*0x21f71d0*/ void HandleClickEvent(UnityEngine.EventSystems.PointerEventData data);
        /*0x21f7104*/ void SetToggleState(Yeti.ToggleStateSetter.ToggleBehaviour state);

        enum ToggleBehaviour
        {
            None = 0,
            On = 1,
            Off = 2,
        }
    }

    class TurboController
    {
        /*0x10*/ Yeti.CombatGuiModel _combatModel;
        /*0x18*/ Yeti.GameSoundManager _soundManager;
        /*0x20*/ Yeti.Combat.MessageProcessors.GameSimulationSummary _gameSimulationSummary;
        /*0x28*/ Yeti.CombatSceneState _combatSceneState;
        /*0x30*/ bool _isTurboActive;
        /*0x31*/ bool _areZombiesInRange;

        /*0x21f71e0*/ TurboController(Yeti.CombatSceneState combatSceneState);
        /*0x21f72d8*/ void RegisterEventListeners();
        /*0x21f7430*/ void UnregisterEventListener();
        /*0x21f7550*/ void HandleZombieSpawnedOrDied(int unitId);
        /*0x21f7654*/ void HandleGameEnded(Yeti.EndCombatCause _);
        /*0x21f765c*/ void OnUpdate();
        /*0x21f766c*/ void CheckIfZombiesStillInRange();
        /*0x21f769c*/ void CheckIfZombiesNoLongerInRange();
        /*0x21f7730*/ bool AreZombiesInRange();
        /*0x21f7a2c*/ void SwapTurboActive();
        /*0x21f7a28*/ void SetTurboActive(bool active);
        /*0x21f75e0*/ void SetTurboActiveWithoutPersisting(bool active);
    }

    class UnlimitedResourcesModeActivator
    {
        /*0x10*/ Yeti.CombatGuiModel _combatModel;
        /*0x18*/ Yeti.CoreSimWrapper _coreSim;
        /*0x20*/ bool _unlimitedResourcesModeActive;

        /*0x21f7a44*/ UnlimitedResourcesModeActivator(Yeti.CoreSimWrapper coreSim);
        /*0x21f7a3c*/ bool get_IsUnlimitedResourcesModeActive();
        /*0x21f7b3c*/ void ActivateUnlimitedResourcesMode();
        /*0x21f7bfc*/ void ToggleWaveBreakUiState();
        /*0x21f7b7c*/ void SetViewResourcesUnlimited(bool isActive);
    }

    class VisualOnlyPuppets
    {
        /*0x10*/ Yeti.OnDiedHandler<Yeti.ProjectilePuppet> _deflectedProjectileDeathHandler;
        /*0x18*/ System.Collections.Generic.List<Yeti.ProjectilePuppet> _deflectedProjectiles;
        /*0x20*/ Yeti.ProjectileDeflectionConfig _deflectionConfig;
        /*0x28*/ Yeti.PuppetFactory _puppetFactory;
        /*0x30*/ Yeti.GameSoundManager _soundManager;

        /*0x21f7c14*/ VisualOnlyPuppets(Yeti.PuppetFactory puppetFactory, Yeti.GameSoundManager soundManager, Yeti.ProjectileDeflectionConfig deflectionConfig);
        /*0x21f7d3c*/ void CreateDeflectedProjectile(Yeti.ProjectilePuppetCreationArgs creationArgs);
        /*0x21f7db8*/ void AddDeflectedProjectile(Yeti.ProjectilePuppet puppet);
        /*0x21f7f4c*/ void RemoveDeflectedProjectile(Yeti.ProjectilePuppet puppet);
        /*0x21f8050*/ void ClearPuppets();
        /*0x21f80ec*/ void UpdateFromGameTimer(float deltaTime);
    }

    class WaveBreakState : RSG.AbstractState
    {
        /*0x70*/ Yeti.INavigationService _navigationService;
        /*0x78*/ Yeti.CombatGuiModel _combatModel;
        /*0x80*/ Yeti.CombatSceneStateContext _context;
        /*0x88*/ Yeti.CoreSimWrapper _coreSim;

        /*0x21ee9d4*/ WaveBreakState(Yeti.CombatSceneStateContext context, Yeti.CoreSimWrapper coreSim);
        /*0x21f8214*/ string get_Name();
        /*0x21f8254*/ void OnEnter();
        /*0x21f8354*/ void OnExit();
    }

    class ZombiePreview
    {
        /*0x10*/ Yeti.CombatSceneState _scene;
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;

        /*0x21f843c*/ ZombiePreview(Yeti.CombatSceneState scene, PvzN3xt.Nvs.INamedValueService namedValueService);
        /*0x21f8480*/ void SetupPreview();
        /*0x21f871c*/ Yeti.EstablishingShotsConfig GetEstablishingShotsConfig();
        /*0x21f87b0*/ System.Collections.Generic.IEnumerable<int> GetPreviewZombies(Yeti.Data.GameInitState gameInitState, Yeti.CombatDefinitionData definitionData);
        /*0x21f88a0*/ void RemoveZombies();
    }

    class ZombieSpawnDamageTypePreviewController
    {
        /*0x10*/ Yeti.GenericVisualConfig _presentationConfig;
        /*0x18*/ System.Collections.Generic.List<Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry> _entriesToRemove;
        /*0x20*/ System.Collections.Generic.Dictionary<int, Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry> _zombies;
        /*0x28*/ Yeti.OnDiedHandler<Yeti.UnitPuppet> _puppetDiedHandler;
        /*0x30*/ YetiSimCoreLib.Core.ObjectPool<Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry> _entryPool;

        /*0x21f88b8*/ ZombieSpawnDamageTypePreviewController(Yeti.GenericVisualConfig presentationConfig);
        /*0x21f8a08*/ void AddZombie(Yeti.UnitPuppet puppet);
        /*0x21ed598*/ void Update(float deltaTime);
        /*0x21f8c00*/ void RemoveZombiesFinishedWithPreview();
        /*0x21f8d04*/ void RemoveEntry(Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry entry);
        /*0x21f8da8*/ void ReturnEntryToPool(Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry entry);
        /*0x21f8af8*/ void UpdateZombie(Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry entry, float deltaTime);
        /*0x21f8f3c*/ void CheckIfZombieReachedPositionToShowPreview(Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry entry);
        /*0x21f8e90*/ void CheckPreviewTime(Yeti.ZombieSpawnDamageTypePreviewController.ZombieEntry entry, float deltaTime);
        /*0x21e54f0*/ void Remove(int instanceId);
        /*0x21f9080*/ void Reset();

        class ZombieEntry
        {
            /*0x10*/ YetiSimCoreLib.Game.InstanceId Id;
            /*0x18*/ Yeti.UnitPuppet Puppet;
            /*0x20*/ bool HasPreview;
            /*0x24*/ float PreviewTimer;
            /*0x28*/ string Alias;

            /*0x21f92d8*/ ZombieEntry();
            /*0x21f8e0c*/ void Reset();
        }
    }

    class BuildInfoDebugMenu : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ PvzN3xt.Config.IAppSettingsModel _appSettingsModel;
        /*0x18*/ PvzN3xt.Network.ServerInfoStateHandler _serverInfoStateHandler;
        /*0x20*/ PvzN3xt.Network.DlcVersionStateHandler _dlcVersionStateHandler;

        static /*0x21f94b8*/ BuildInfoDebugMenu();
        /*0x21f94b0*/ BuildInfoDebugMenu();
        /*0x21f92e0*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x21f938c*/ string GetServerInfoLabel();
        /*0x21f93b4*/ string GetDlcInfoLabel();
        /*0x21f9420*/ string GetGraphicsDeviceLabel();
        /*0x21f9488*/ string GetDeviceModelLabel();
        /*0x21f9490*/ string GetAppSettingsLabel();
        /*0x21f94ac*/ void CapitalGames.ILifecycleAware.OnAppReset();

        class YetiDebugMenuPaths
        {
            class AppInfo
            {
                static /*0x0*/ string BasePath;
                static /*0x8*/ string BuildInfoLabel;
                static /*0x10*/ string AppSettingsLabel;
                static /*0x18*/ string ServerInfoLabel;
                static /*0x20*/ string DlcVersionInfoLabel;
                static /*0x28*/ string DeviceModelLabel;
                static /*0x30*/ string GraphicsDeviceLabel;

                static /*0x21f9538*/ AppInfo();
            }
        }
    }

    class AssetManifestInfoDebugMenu : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;

        static /*0x21f988c*/ AssetManifestInfoDebugMenu();
        /*0x21f9884*/ AssetManifestInfoDebugMenu();
        /*0x21f97d4*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x21f9880*/ void CapitalGames.ILifecycleAware.OnAppReset();

        class YetiDebugMenuPaths
        {
            class AssetManifestInfo
            {
                static /*0x0*/ string BasePath;
                static /*0x8*/ string ManifestHash;
                static /*0x10*/ string AssetBasePath;
                static /*0x18*/ string AssetManifestURL;

                static /*0x21f990c*/ AssetManifestInfo();
            }
        }
    }

    class CombatDebugView : UnityEngine.MonoBehaviour
    {
        /*0x20*/ TMPro.TextMeshProUGUI _text;

        /*0x21f9a80*/ CombatDebugView();
        /*0x21f9a60*/ void SetText(string text);
    }

    class CopyDebugPathsDebugMenu : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;

        static /*0x21f9db4*/ CopyDebugPathsDebugMenu();
        static /*0x21f9b38*/ void CopyActions();
        /*0x21f9dac*/ CopyDebugPathsDebugMenu();
        /*0x21f9a88*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x21f9b34*/ void OnAppReset();

        class <>c
        {
            static /*0x0*/ Yeti.CopyDebugPathsDebugMenu.<> <>9;
            static /*0x8*/ System.Func<System.Collections.Generic.KeyValuePair<EA.Debugging.Menu.PathString, EA.Debugging.Menu.DebugMenuCommand>, EA.Debugging.Menu.PathString> <>9__3_0;
            static /*0x10*/ System.Func<EA.Debugging.Menu.PathString, EA.Debugging.Menu.PathString> <>9__3_1;

            static /*0x21f9e34*/ <>c();
            /*0x21f9e9c*/ <>c();
            /*0x21f9ea4*/ EA.Debugging.Menu.PathString <CopyActions>b__3_0(System.Collections.Generic.KeyValuePair<EA.Debugging.Menu.PathString, EA.Debugging.Menu.DebugMenuCommand> pair);
            /*0x21f9f5c*/ EA.Debugging.Menu.PathString <CopyActions>b__3_1(EA.Debugging.Menu.PathString p);
        }
    }

    class DebugEstablishingShotsController : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.UnitPuppetAvatarView[] _previewZombies;
        /*0x28*/ UnityEngine.CanvasGroup _uiButtonContainer;
        /*0x30*/ Yeti.CombatCameraConfig _combatCameraConfig;
        /*0x38*/ Yeti.EstablishingShotsPlayer _player;
        /*0x40*/ CapitalGames.DefaultCoroutineCreator _coroutineCreator;
        /*0x48*/ Yeti.BoardComponent _board;

        /*0x21fa4c4*/ DebugEstablishingShotsController();
        /*0x21f9f64*/ void Start();
        /*0x21fa054*/ void OnShotsComplete();
        /*0x21fa024*/ void PlayEstablishingShot();
        /*0x21fa494*/ void PlayCelebration();
        /*0x21fa1c8*/ void SetupPlayer(Yeti.EstablishingShotsConfig config);
    }

    class DebugNameGenerator
    {
        static /*0x21fa4cc*/ string Generate();
    }

    enum DebugOptionPathCategory
    {
        System = 0,
        Logging = 1,
        AppLifecycle = 2,
        Gameplay = 3,
        Crashlytics = 4,
        Network = 5,
        Config = 6,
        GameData = 7,
        PlayerSession = 8,
        Assets = 9,
        Nimble = 10,
        Identity = 11,
        Navigation = 12,
        Deeplink = 13,
        GameNavigation = 14,
        Localization = 15,
        Meta = 16,
        Ftue = 17,
        Store = 18,
        Notifications = 19,
        Telemetry = 20,
        PuppetEditor = 21,
        AppInfo = 22,
        PersistentData = 23,
        ErrorHandling = 24,
        Audio = 25,
        ToSReporting = 26,
        PublicProfile = 27,
        BattleGen = 28,
        NamedValues = 29,
        UI = 30,
        ABTest = 31,
        HAT = 32,
        FirebaseAnalytics = 33,
        AntiCheat = 34,
        GameLanding = 35,
        Track = 36,
        PlayerLives = 37,
        PlayerInventory = 38,
        CombatAi = 39,
        GameService = 40,
        FeatureUnlocks = 41,
        NarrativeTasks = 42,
        Rewards = 43,
        BestHttp = 44,
        Starlight = 45,
        Shop = 46,
        SavedState = 47,
        Community = 48,
        BattlePass = 49,
        PlayerProfile = 50,
        PlayerStateAdjustments = 51,
        Almanac = 52,
        RoadTrip = 53,
        UnitTesting = 54,
        EadpSdk = 55,
        DailyMeter = 56,
        PerksAndHazards = 57,
        Tasks = 58,
        MicroGames = 59,
    }

    class DebugOptionPathHelper
    {
        static /*0x0*/ System.Collections.Generic.IReadOnlyDictionary<Yeti.DebugOptionPathCategory, string> BasePathMappings;

        static /*0x21fa7c4*/ DebugOptionPathHelper();
        static /*0x21f9760*/ string GetBasePath(Yeti.DebugOptionPathCategory category);
        static /*0x21fa758*/ string GetPath(Yeti.DebugOptionPathCategory category, string name);
        static /*0x21fa55c*/ string GetPathForCategory(Yeti.DebugOptionPathCategory category);
    }

    class GlobalDebugMenuInitialization : CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.CopyDebugPathsDebugMenu _copyDebugPathsDebugMenu;
        /*0x18*/ Audio.AudioDebugMenu _audioDebugMenu;
        /*0x20*/ Yeti.UnitIntroDebugManager _unitIntroDebugManager;
        /*0x28*/ Yeti.UnitDetailsDebugManager _unitDetailsDebugManager;

        /*0x21fb618*/ GlobalDebugMenuInitialization();
        /*0x21fb3d8*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);

        class <>c__DisplayClass4_0
        {
            /*0x10*/ CapitalGames.InstanceInitializedCallback initializedCallback;
            /*0x18*/ Yeti.GlobalDebugMenuInitialization <>4__this;

            /*0x21fb610*/ <>c__DisplayClass4_0();
            /*0x21fb620*/ void <Initialize>b__0();
        }
    }

    class LifeCycleDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;

        static /*0x21fb788*/ LifeCycleDebugManager();
        /*0x21fb780*/ LifeCycleDebugManager();
        /*0x21fb6d0*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x21fb77c*/ void OnAppReset();
    }

    class LoggingPrefsDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;

        static /*0x21fb8c0*/ LoggingPrefsDebugManager();
        /*0x21fb8b8*/ LoggingPrefsDebugManager();
        /*0x21fb808*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x21fb8b4*/ void OnAppReset();
    }

    class GitUtility
    {
        static /*0x21fb940*/ string CurrentBranchName();
        static /*0x21fbdc8*/ string CurrentCommitHash();
        static /*0x21fbc4c*/ string GetOutputOfExternalProcess(string filePath, string args, string workingDir);
        static /*0x21fbf24*/ System.Diagnostics.Process BuildProcess(string filePath, string args, string workingDir, bool useShellExecute);
        static /*0x21fc05c*/ void RunProcessToCompletion(System.Diagnostics.Process proc);
        static /*0x21fc104*/ void OnErrorDataReceived(object sender, System.Diagnostics.DataReceivedEventArgs e);

        class GitInfo
        {
            static /*0x0*/ Yeti.GitUtility.GitInfo _instance;
            /*0x10*/ string HeadRef;
            /*0x18*/ string BranchName;
            /*0x20*/ string CommitHash;

            static /*0x21fc11c*/ string get_CacheFilePath();
            static /*0x21fc19c*/ string get_GitHeadRef();
            static /*0x21fba94*/ Yeti.GitUtility.GitInfo LoadOrCreate();
            /*0x21fc234*/ GitInfo();
            /*0x21fbbd4*/ bool IsDifferent();
            /*0x21fbda0*/ void Save();
        }

        class <>c__DisplayClass3_0
        {
            /*0x10*/ System.Text.StringBuilder sb;

            /*0x21fbf1c*/ <>c__DisplayClass3_0();
            /*0x21fc23c*/ void <GetOutputOfExternalProcess>b__0(object sender, System.Diagnostics.DataReceivedEventArgs e);
        }
    }

    class RuntimeAssetUtility
    {
    }

    class ReplaceUnitItem
    {
        /*0x10*/ int UnitId;
        /*0x18*/ string Alias;
        /*0x20*/ System.Collections.Generic.HashSet<string> Tags;
        /*0x28*/ bool IsTagUnit;

        /*0x21fc28c*/ ReplaceUnitItem();
    }

    class YetiRuntimeEditorUtility
    {
        static /*0x0*/ Yeti.YetiRuntimeEditorUtility.OpenTextInputDelegate OpenTextInput;
        static /*0x8*/ Yeti.YetiRuntimeEditorUtility.OpenTagInputDelegate OpenTagsInput;
        static /*0x10*/ Yeti.YetiRuntimeEditorUtility.CloseSaveLevelLayoutDelegate CloseSaveLevelLayout;

        class OpenTextInputDelegate : System.MulticastDelegate
        {
            /*0x21fc294*/ OpenTextInputDelegate(object object, nint method);
            /*0x21fc334*/ void Invoke(UnityEngine.Vector2 position, string title, string description, string startingText, System.Action<string> onSuccess);
            /*0x21fc348*/ System.IAsyncResult BeginInvoke(UnityEngine.Vector2 position, string title, string description, string startingText, System.Action<string> onSuccess, System.AsyncCallback callback, object object);
            /*0x21fc3fc*/ void EndInvoke(System.IAsyncResult result);
        }

        class OpenTagInputDelegate : System.MulticastDelegate
        {
            /*0x21fc408*/ OpenTagInputDelegate(object object, nint method);
            /*0x21fc4a8*/ void Invoke(UnityEngine.Vector2 position, string title, string description, System.Collections.Generic.IList<string> startingTags, System.Collections.Generic.IEnumerable<string> options, bool allowCreating, System.Collections.Generic.List<string> creatingTagsDisallowList, System.Action<System.Collections.Generic.List<string>> onSuccess);
            /*0x21fc4c0*/ System.IAsyncResult BeginInvoke(UnityEngine.Vector2 position, string title, string description, System.Collections.Generic.IList<string> startingTags, System.Collections.Generic.IEnumerable<string> options, bool allowCreating, System.Collections.Generic.List<string> creatingTagsDisallowList, System.Action<System.Collections.Generic.List<string>> onSuccess, System.AsyncCallback callback, object object);
            /*0x21fc5a4*/ void EndInvoke(System.IAsyncResult result);
        }

        class CloseSaveLevelLayoutDelegate : System.MulticastDelegate
        {
            /*0x21fc5b0*/ CloseSaveLevelLayoutDelegate(object object, nint method);
            /*0x21fc64c*/ void Invoke();
            /*0x21fc660*/ System.IAsyncResult BeginInvoke(System.AsyncCallback callback, object object);
            /*0x21fc67c*/ void EndInvoke(System.IAsyncResult result);
        }
    }

    class AudioRTPCList
    {
        static /*0x0*/ Yeti.AudioRTPC COMBAT_PANNING_LOCATION;
        static /*0x8*/ Yeti.AudioRTPC COMBAT_PLANT_COUNT;
        static /*0x10*/ Yeti.AudioRTPC COMBAT_PLANT_LEVEL;
        static /*0x18*/ Yeti.AudioRTPC COMBAT_PROJECTILE_COUNT;
        static /*0x20*/ Yeti.AudioRTPC COMBAT_TURBO_BOOST;
        static /*0x28*/ Yeti.AudioRTPC COMBAT_ZOMBIE_COUNT;
        static /*0x30*/ Yeti.AudioRTPC MAP_ZOOM_DISTANCE;
        static /*0x38*/ Yeti.AudioRTPC OPTIONS_VOLUME_MUSIC;
        static /*0x40*/ Yeti.AudioRTPC OPTIONS_VOLUME_SFX;
        static /*0x48*/ Yeti.AudioRTPC SS_AIR_FEAR;
        static /*0x50*/ Yeti.AudioRTPC SS_AIR_FREEFALL;
        static /*0x58*/ Yeti.AudioRTPC SS_AIR_FURY;
        static /*0x60*/ Yeti.AudioRTPC SS_AIR_MONTH;
        static /*0x68*/ Yeti.AudioRTPC SS_AIR_PRESENCE;
        static /*0x70*/ Yeti.AudioRTPC SS_AIR_RPM;
        static /*0x78*/ Yeti.AudioRTPC SS_AIR_SIZE;
        static /*0x80*/ Yeti.AudioRTPC SS_AIR_STORM;
        static /*0x88*/ Yeti.AudioRTPC SS_AIR_TIMEOFDAY;
        static /*0x90*/ Yeti.AudioRTPC SS_AIR_TURBULENCE;
        static /*0x98*/ Yeti.AudioRTPC TOWN_CAMERA_LOCATION;
        static /*0xa0*/ Yeti.AudioRTPC UI_HAPPINESS_METER;
        static /*0xa8*/ Yeti.AudioRTPC UI_MOVIETHEATER_REEL_SPEED;

        static /*0x21fc690*/ AudioRTPCList();
        /*0x21fc688*/ AudioRTPCList();
    }

    class AppSettingsReflection
    {
        static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

        static /*0x21fcb5c*/ AppSettingsReflection();
        static /*0x21fcb04*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
    }

    enum EadpLogLevel
    {
        EadpLogAll = 0,
        EadpLogVerbose = 1,
        EadpLogDbg = 2,
        EadpLogInfo = 3,
        EadpLogWarn = 4,
        EadpLogErr = 5,
        EadpLogFatal = 6,
        EadpLogNone = 7,
    }

    class AppSettings : Google.Protobuf.IMessage<Yeti.AppSettings>, Google.Protobuf.IMessage, System.IEquatable<Yeti.AppSettings>, Google.Protobuf.IDeepCloneable<Yeti.AppSettings>, Google.Protobuf.IBufferMessage
    {
        static int LogSettingsFieldNumber = 1;
        static int EnvironmentSettingsFieldNumber = 2;
        static int AssetSettingsFieldNumber = 3;
        static int DeveloperSettingsFieldNumber = 4;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.AppSettings> _parser;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ Yeti.LogSettings logSettings_;
        /*0x20*/ Yeti.EnvironmentSettings environmentSettings_;
        /*0x28*/ Yeti.AssetSettings assetSettings_;
        /*0x30*/ Yeti.DeveloperSettings developerSettings_;

        static /*0x21fecd0*/ AppSettings();
        static /*0x21fdd94*/ Google.Protobuf.MessageParser<Yeti.AppSettings> get_Parser();
        static /*0x21fddec*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x21fdf3c*/ AppSettings();
        /*0x21fdf44*/ AppSettings(Yeti.AppSettings other);
        /*0x21fdef0*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x21fe0d4*/ Yeti.AppSettings Clone();
        /*0x21fe12c*/ Yeti.LogSettings get_LogSettings();
        /*0x21fe134*/ void set_LogSettings(Yeti.LogSettings value);
        /*0x21fe13c*/ Yeti.EnvironmentSettings get_EnvironmentSettings();
        /*0x21fe144*/ void set_EnvironmentSettings(Yeti.EnvironmentSettings value);
        /*0x21fe14c*/ Yeti.AssetSettings get_AssetSettings();
        /*0x21fe154*/ void set_AssetSettings(Yeti.AssetSettings value);
        /*0x21fe15c*/ Yeti.DeveloperSettings get_DeveloperSettings();
        /*0x21fe164*/ void set_DeveloperSettings(Yeti.DeveloperSettings value);
        /*0x21fe16c*/ bool Equals(object other);
        /*0x21fe1d0*/ bool Equals(Yeti.AppSettings other);
        /*0x21fe26c*/ int GetHashCode();
        /*0x21fe308*/ string ToString();
        /*0x21fe360*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x21fe380*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x21fe458*/ int CalculateSize();
        /*0x21fe564*/ void MergeFrom(Yeti.AppSettings other);
        /*0x21fea94*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x21feab4*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.AppSettings.<> <>9;

            static /*0x21fede8*/ <>c();
            /*0x21fee50*/ <>c();
            /*0x21fee58*/ Yeti.AppSettings <.cctor>b__42_0();
        }
    }

    class LogSettings : Google.Protobuf.IMessage<Yeti.LogSettings>, Google.Protobuf.IMessage, System.IEquatable<Yeti.LogSettings>, Google.Protobuf.IDeepCloneable<Yeti.LogSettings>, Google.Protobuf.IBufferMessage
    {
        static int DefaultLogLevelFieldNumber = 1;
        static int EadpLogLevelFieldNumber = 2;
        static int EadpEnableFileLoggingFieldNumber = 3;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.LogSettings> _parser;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ string defaultLogLevel_;
        /*0x20*/ Yeti.EadpLogLevel eadpLogLevel_;
        /*0x24*/ bool eadpEnableFileLogging_;

        static /*0x21ff614*/ LogSettings();
        static /*0x21feeac*/ Google.Protobuf.MessageParser<Yeti.LogSettings> get_Parser();
        static /*0x21fef04*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x21fe740*/ LogSettings();
        /*0x21ff054*/ LogSettings(Yeti.LogSettings other);
        /*0x21ff008*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x21fe024*/ Yeti.LogSettings Clone();
        /*0x21ff0b4*/ string get_DefaultLogLevel();
        /*0x21ff0bc*/ void set_DefaultLogLevel(string value);
        /*0x21ff138*/ Yeti.EadpLogLevel get_EadpLogLevel();
        /*0x21ff140*/ void set_EadpLogLevel(Yeti.EadpLogLevel value);
        /*0x21ff148*/ bool get_EadpEnableFileLogging();
        /*0x21ff150*/ void set_EadpEnableFileLogging(bool value);
        /*0x21ff158*/ bool Equals(object other);
        /*0x21ff1bc*/ bool Equals(Yeti.LogSettings other);
        /*0x21ff24c*/ int GetHashCode();
        /*0x21ff308*/ string ToString();
        /*0x21ff360*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x21ff380*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x21ff43c*/ int CalculateSize();
        /*0x21fe798*/ void MergeFrom(Yeti.LogSettings other);
        /*0x21ff514*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x21ff534*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.LogSettings.<> <>9;

            static /*0x21ff72c*/ <>c();
            /*0x21ff794*/ <>c();
            /*0x21ff79c*/ Yeti.LogSettings <.cctor>b__37_0();
        }
    }

    class EnvironmentSettings : Google.Protobuf.IMessage<Yeti.EnvironmentSettings>, Google.Protobuf.IMessage, System.IEquatable<Yeti.EnvironmentSettings>, Google.Protobuf.IDeepCloneable<Yeti.EnvironmentSettings>, Google.Protobuf.IBufferMessage
    {
        static int ServerEnvironmentFieldNumber = 1;
        static int GameServerBaseUrlFieldNumber = 2;
        static int CdnServerBaseUrlFieldNumber = 3;
        static int UnifiedMessagingEnvironmentFieldNumber = 4;
        static int StarlightConfigFieldNumber = 5;
        static int ExperimentationConfigFieldNumber = 6;
        static int NimbleClientConfigFieldNumber = 7;
        static int NexusAuthCryptSecretKeyFieldNumber = 8;
        static int CloudProjectIdFieldNumber = 9;
        static int EadpConfigFieldNumber = 10;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.EnvironmentSettings> _parser;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ string serverEnvironment_;
        /*0x20*/ string gameServerBaseUrl_;
        /*0x28*/ string cdnServerBaseUrl_;
        /*0x30*/ string unifiedMessagingEnvironment_;
        /*0x38*/ string starlightConfig_;
        /*0x40*/ string experimentationConfig_;
        /*0x48*/ string nimbleClientConfig_;
        /*0x50*/ string nexusAuthCryptSecretKey_;
        /*0x58*/ string cloudProjectId_;
        /*0x60*/ Yeti.EadpConfig eadpConfig_;

        static /*0x2200a94*/ EnvironmentSettings();
        static /*0x21ff7ec*/ Google.Protobuf.MessageParser<Yeti.EnvironmentSettings> get_Parser();
        static /*0x21ff844*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x21fe818*/ EnvironmentSettings();
        /*0x21ff994*/ EnvironmentSettings(Yeti.EnvironmentSettings other);
        /*0x21ff948*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x21fe07c*/ Yeti.EnvironmentSettings Clone();
        /*0x21ffa8c*/ string get_ServerEnvironment();
        /*0x21ffa94*/ void set_ServerEnvironment(string value);
        /*0x21ffb10*/ string get_GameServerBaseUrl();
        /*0x21ffb18*/ void set_GameServerBaseUrl(string value);
        /*0x21ffb94*/ string get_CdnServerBaseUrl();
        /*0x21ffb9c*/ void set_CdnServerBaseUrl(string value);
        /*0x21ffc18*/ string get_UnifiedMessagingEnvironment();
        /*0x21ffc20*/ void set_UnifiedMessagingEnvironment(string value);
        /*0x21ffc9c*/ string get_StarlightConfig();
        /*0x21ffca4*/ void set_StarlightConfig(string value);
        /*0x21ffd20*/ string get_ExperimentationConfig();
        /*0x21ffd28*/ void set_ExperimentationConfig(string value);
        /*0x21ffda4*/ string get_NimbleClientConfig();
        /*0x21ffdac*/ void set_NimbleClientConfig(string value);
        /*0x21ffe28*/ string get_NexusAuthCryptSecretKey();
        /*0x21ffe30*/ void set_NexusAuthCryptSecretKey(string value);
        /*0x21ffeac*/ string get_CloudProjectId();
        /*0x21ffeb4*/ void set_CloudProjectId(string value);
        /*0x21fff30*/ Yeti.EadpConfig get_EadpConfig();
        /*0x21fff38*/ void set_EadpConfig(Yeti.EadpConfig value);
        /*0x21fff40*/ bool Equals(object other);
        /*0x21fffa4*/ bool Equals(Yeti.EnvironmentSettings other);
        /*0x22000b8*/ int GetHashCode();
        /*0x2200230*/ string ToString();
        /*0x2200288*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x22002a8*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x22004bc*/ int CalculateSize();
        /*0x21fe8f0*/ void MergeFrom(Yeti.EnvironmentSettings other);
        /*0x2200724*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x2200744*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.EnvironmentSettings.<> <>9;

            static /*0x2200bac*/ <>c();
            /*0x2200c14*/ <>c();
            /*0x2200c1c*/ Yeti.EnvironmentSettings <.cctor>b__72_0();
        }
    }

    class AssetSettings : Google.Protobuf.IMessage<Yeti.AssetSettings>, Google.Protobuf.IMessage, System.IEquatable<Yeti.AssetSettings>, Google.Protobuf.IDeepCloneable<Yeti.AssetSettings>, Google.Protobuf.IBufferMessage
    {
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.AssetSettings> _parser;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;

        static /*0x22010e4*/ AssetSettings();
        static /*0x2200c70*/ Google.Protobuf.MessageParser<Yeti.AssetSettings> get_Parser();
        static /*0x2200cc8*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x2200e18*/ AssetSettings();
        /*0x2200e20*/ AssetSettings(Yeti.AssetSettings other);
        /*0x2200dcc*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x2200e64*/ Yeti.AssetSettings Clone();
        /*0x2200ebc*/ bool Equals(object other);
        /*0x2200f40*/ bool Equals(Yeti.AssetSettings other);
        /*0x2200f6c*/ int GetHashCode();
        /*0x2200f98*/ string ToString();
        /*0x2200ff0*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x2201010*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x2201024*/ int CalculateSize();
        /*0x2201038*/ void MergeFrom(Yeti.AssetSettings other);
        /*0x220106c*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x220108c*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.AssetSettings.<> <>9;

            static /*0x22011fc*/ <>c();
            /*0x2201264*/ <>c();
            /*0x220126c*/ Yeti.AssetSettings <.cctor>b__22_0();
        }
    }

    class DeveloperSettings : Google.Protobuf.IMessage<Yeti.DeveloperSettings>, Google.Protobuf.IMessage, System.IEquatable<Yeti.DeveloperSettings>, Google.Protobuf.IDeepCloneable<Yeti.DeveloperSettings>, Google.Protobuf.IBufferMessage
    {
        static int EnableFilePerformanceMetricsProviderFieldNumber = 1;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.DeveloperSettings> _parser;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ bool enableFilePerformanceMetricsProvider_;

        static /*0x2201828*/ DeveloperSettings();
        static /*0x22012c0*/ Google.Protobuf.MessageParser<Yeti.DeveloperSettings> get_Parser();
        static /*0x2201318*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x2201468*/ DeveloperSettings();
        /*0x2201470*/ DeveloperSettings(Yeti.DeveloperSettings other);
        /*0x220141c*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x22014bc*/ Yeti.DeveloperSettings Clone();
        /*0x2201514*/ bool get_EnableFilePerformanceMetricsProvider();
        /*0x220151c*/ void set_EnableFilePerformanceMetricsProvider(bool value);
        /*0x2201524*/ bool Equals(object other);
        /*0x2201588*/ bool Equals(Yeti.DeveloperSettings other);
        /*0x22015d4*/ int GetHashCode();
        /*0x2201644*/ string ToString();
        /*0x220169c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x22016bc*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x220171c*/ int CalculateSize();
        /*0x2201748*/ void MergeFrom(Yeti.DeveloperSettings other);
        /*0x220178c*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x22017ac*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.DeveloperSettings.<> <>9;

            static /*0x2201940*/ <>c();
            /*0x22019a8*/ <>c();
            /*0x22019b0*/ Yeti.DeveloperSettings <.cctor>b__27_0();
        }
    }

    class EadpConfig : Google.Protobuf.IMessage<Yeti.EadpConfig>, Google.Protobuf.IMessage, System.IEquatable<Yeti.EadpConfig>, Google.Protobuf.IDeepCloneable<Yeti.EadpConfig>, Google.Protobuf.IBufferMessage
    {
        static int ServerEnvironmentFieldNumber = 1;
        static int ClientIdFieldNumber = 2;
        static int ProductIdFieldNumber = 3;
        static int SellIdFieldNumber = 4;
        static int CryptSecretFieldNumber = 5;
        static int ClientSecretFieldNumber = 6;
        static int PushNotesProductIdFieldNumber = 7;
        static int PushNotesAppKeyFieldNumber = 8;
        static int PushNotesAppSecretFieldNumber = 9;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.EadpConfig> _parser;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ string serverEnvironment_;
        /*0x20*/ string clientId_;
        /*0x28*/ string productId_;
        /*0x30*/ string sellId_;
        /*0x38*/ string cryptSecret_;
        /*0x40*/ string clientSecret_;
        /*0x48*/ string pushNotesProductId_;
        /*0x50*/ string pushNotesAppKey_;
        /*0x58*/ string pushNotesAppSecret_;

        static /*0x2202d84*/ EadpConfig();
        static /*0x2201a04*/ Google.Protobuf.MessageParser<Yeti.EadpConfig> get_Parser();
        static /*0x2201a5c*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x2201bac*/ EadpConfig();
        /*0x2201c84*/ EadpConfig(Yeti.EadpConfig other);
        /*0x2201b60*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x2201d54*/ Yeti.EadpConfig Clone();
        /*0x2201dac*/ string get_ServerEnvironment();
        /*0x2201db4*/ void set_ServerEnvironment(string value);
        /*0x2201e30*/ string get_ClientId();
        /*0x2201e38*/ void set_ClientId(string value);
        /*0x2201eb4*/ string get_ProductId();
        /*0x2201ebc*/ void set_ProductId(string value);
        /*0x2201f38*/ string get_SellId();
        /*0x2201f40*/ void set_SellId(string value);
        /*0x2201fbc*/ string get_CryptSecret();
        /*0x2201fc4*/ void set_CryptSecret(string value);
        /*0x2202040*/ string get_ClientSecret();
        /*0x2202048*/ void set_ClientSecret(string value);
        /*0x22020c4*/ string get_PushNotesProductId();
        /*0x22020cc*/ void set_PushNotesProductId(string value);
        /*0x2202148*/ string get_PushNotesAppKey();
        /*0x2202150*/ void set_PushNotesAppKey(string value);
        /*0x22021cc*/ string get_PushNotesAppSecret();
        /*0x22021d4*/ void set_PushNotesAppSecret(string value);
        /*0x2202250*/ bool Equals(object other);
        /*0x22022b4*/ bool Equals(Yeti.EadpConfig other);
        /*0x22023b4*/ int GetHashCode();
        /*0x2202514*/ string ToString();
        /*0x220256c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x220258c*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x2202778*/ int CalculateSize();
        /*0x22029b4*/ void MergeFrom(Yeti.EadpConfig other);
        /*0x2202ad8*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x2202af8*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.EadpConfig.<> <>9;

            static /*0x2202e9c*/ <>c();
            /*0x2202f04*/ <>c();
            /*0x2202f0c*/ Yeti.EadpConfig <.cctor>b__67_0();
        }
    }

    class ManifestReflection
    {
        static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

        static /*0x2202fb4*/ ManifestReflection();
        static /*0x2202f5c*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
    }

    enum AssetBundleType
    {
        UnityBundle = 0,
        WwiseAudio = 1,
        InvalidBundleType = -1,
    }

    class RawAssetManifest : Google.Protobuf.IMessage<Yeti.RawAssetManifest>, Google.Protobuf.IMessage, System.IEquatable<Yeti.RawAssetManifest>, Google.Protobuf.IDeepCloneable<Yeti.RawAssetManifest>, Google.Protobuf.IBufferMessage
    {
        static int VersionFieldNumber = 1;
        static int RecordsFieldNumber = 2;
        static int PlatformFieldNumber = 3;
        static int TexFormatFieldNumber = 4;
        static int EnvironmentFieldNumber = 5;
        static int TimestampFieldNumber = 6;
        static int RevisionFieldNumber = 7;
        static int AssetSetsFieldNumber = 8;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.RawAssetManifest> _parser;
        static /*0x8*/ Google.Protobuf.FieldCodec<Yeti.RawAssetManifestRecord> _repeated_records_codec;
        static /*0x10*/ Google.Protobuf.FieldCodec<Yeti.RawAssetSet> _repeated_assetSets_codec;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ int version_;
        /*0x20*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetManifestRecord> records_;
        /*0x28*/ string platform_;
        /*0x30*/ string texFormat_;
        /*0x38*/ string environment_;
        /*0x40*/ ulong timestamp_;
        /*0x48*/ ulong revision_;
        /*0x50*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetSet> assetSets_;

        static /*0x220535c*/ RawAssetManifest();
        static /*0x2204254*/ Google.Protobuf.MessageParser<Yeti.RawAssetManifest> get_Parser();
        static /*0x22042ac*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x22043fc*/ RawAssetManifest();
        /*0x220451c*/ RawAssetManifest(Yeti.RawAssetManifest other);
        /*0x22043b0*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x2204620*/ Yeti.RawAssetManifest Clone();
        /*0x2204678*/ int get_Version();
        /*0x2204680*/ void set_Version(int value);
        /*0x2204688*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetManifestRecord> get_Records();
        /*0x2204690*/ string get_Platform();
        /*0x2204698*/ void set_Platform(string value);
        /*0x2204714*/ string get_TexFormat();
        /*0x220471c*/ void set_TexFormat(string value);
        /*0x2204798*/ string get_Environment();
        /*0x22047a0*/ void set_Environment(string value);
        /*0x220481c*/ ulong get_Timestamp();
        /*0x2204824*/ void set_Timestamp(ulong value);
        /*0x220482c*/ ulong get_Revision();
        /*0x2204834*/ void set_Revision(ulong value);
        /*0x220483c*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetSet> get_AssetSets();
        /*0x2204844*/ bool Equals(object other);
        /*0x22048a8*/ bool Equals(Yeti.RawAssetManifest other);
        /*0x22049d0*/ int GetHashCode();
        /*0x2204b08*/ string ToString();
        /*0x2204b60*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x2204b80*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x2204d88*/ int CalculateSize();
        /*0x2204fb8*/ void MergeFrom(Yeti.RawAssetManifest other);
        /*0x22050d4*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x22050f4*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.RawAssetManifest.<> <>9;

            static /*0x22055a4*/ <>c();
            /*0x220560c*/ <>c();
            /*0x2205614*/ Yeti.RawAssetManifest <.cctor>b__62_0();
        }
    }

    class RawAssetManifestRecord : Google.Protobuf.IMessage<Yeti.RawAssetManifestRecord>, Google.Protobuf.IMessage, System.IEquatable<Yeti.RawAssetManifestRecord>, Google.Protobuf.IDeepCloneable<Yeti.RawAssetManifestRecord>, Google.Protobuf.IBufferMessage
    {
        static int NameFieldNumber = 1;
        static int BundleHashFieldNumber = 2;
        static int FullNameFieldNumber = 10;
        static int SizeFieldNumber = 3;
        static int UncompressedSizeFieldNumber = 4;
        static int SharedFieldNumber = 5;
        static int RankFieldNumber = 6;
        static int AssetBundleTypeFieldNumber = 11;
        static int PackageTypeFieldNumber = 7;
        static int EntriesFieldNumber = 8;
        static int DependenciesFieldNumber = 9;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.RawAssetManifestRecord> _parser;
        static /*0x8*/ Google.Protobuf.FieldCodec<Yeti.RawAssetManifestRecordEntry> _repeated_entries_codec;
        static /*0x10*/ Google.Protobuf.FieldCodec<string> _repeated_dependencies_codec;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ string name_;
        /*0x20*/ string bundleHash_;
        /*0x28*/ string fullName_;
        /*0x30*/ int size_;
        /*0x34*/ int uncompressedSize_;
        /*0x38*/ bool shared_;
        /*0x3c*/ int rank_;
        /*0x40*/ Yeti.AssetBundleType assetBundleType_;
        /*0x44*/ int packageType_;
        /*0x48*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetManifestRecordEntry> entries_;
        /*0x50*/ Google.Protobuf.Collections.RepeatedField<string> dependencies_;

        static /*0x22069b0*/ RawAssetManifestRecord();
        static /*0x2205664*/ Google.Protobuf.MessageParser<Yeti.RawAssetManifestRecord> get_Parser();
        static /*0x22056bc*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x220580c*/ RawAssetManifestRecord();
        /*0x220592c*/ RawAssetManifestRecord(Yeti.RawAssetManifestRecord other);
        /*0x22057c0*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x2205a40*/ Yeti.RawAssetManifestRecord Clone();
        /*0x2205a98*/ string get_Name();
        /*0x2205aa0*/ void set_Name(string value);
        /*0x2205b1c*/ string get_BundleHash();
        /*0x2205b24*/ void set_BundleHash(string value);
        /*0x2205ba0*/ string get_FullName();
        /*0x2205ba8*/ void set_FullName(string value);
        /*0x2205c24*/ int get_Size();
        /*0x2205c2c*/ void set_Size(int value);
        /*0x2205c34*/ int get_UncompressedSize();
        /*0x2205c3c*/ void set_UncompressedSize(int value);
        /*0x2205c44*/ bool get_Shared();
        /*0x2205c4c*/ void set_Shared(bool value);
        /*0x2205c54*/ int get_Rank();
        /*0x2205c5c*/ void set_Rank(int value);
        /*0x2205c64*/ Yeti.AssetBundleType get_AssetBundleType();
        /*0x2205c6c*/ void set_AssetBundleType(Yeti.AssetBundleType value);
        /*0x2205c74*/ int get_PackageType();
        /*0x2205c7c*/ void set_PackageType(int value);
        /*0x2205c84*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetManifestRecordEntry> get_Entries();
        /*0x2205c8c*/ Google.Protobuf.Collections.RepeatedField<string> get_Dependencies();
        /*0x2205c94*/ bool Equals(object other);
        /*0x2205cf8*/ bool Equals(Yeti.RawAssetManifestRecord other);
        /*0x2205e60*/ int GetHashCode();
        /*0x2206010*/ string ToString();
        /*0x2206068*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x2206088*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x22062f4*/ int CalculateSize();
        /*0x220657c*/ void MergeFrom(Yeti.RawAssetManifestRecord other);
        /*0x22066c0*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x22066e0*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.RawAssetManifestRecord.<> <>9;

            static /*0x2206b84*/ <>c();
            /*0x2206bec*/ <>c();
            /*0x2206bf4*/ Yeti.RawAssetManifestRecord <.cctor>b__77_0();
        }
    }

    class RawAssetManifestRecordEntry : Google.Protobuf.IMessage<Yeti.RawAssetManifestRecordEntry>, Google.Protobuf.IMessage, System.IEquatable<Yeti.RawAssetManifestRecordEntry>, Google.Protobuf.IDeepCloneable<Yeti.RawAssetManifestRecordEntry>, Google.Protobuf.IBufferMessage
    {
        static int AssetNameFieldNumber = 1;
        static int RuntimeSizeFieldNumber = 2;
        static int CloneRuntimeSizeFieldNumber = 3;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.RawAssetManifestRecordEntry> _parser;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ string assetName_;
        /*0x20*/ int runtimeSize_;
        /*0x24*/ int cloneRuntimeSize_;

        static /*0x22074b4*/ RawAssetManifestRecordEntry();
        static /*0x2206c44*/ Google.Protobuf.MessageParser<Yeti.RawAssetManifestRecordEntry> get_Parser();
        static /*0x2206c9c*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x2206dec*/ RawAssetManifestRecordEntry();
        /*0x2206e44*/ RawAssetManifestRecordEntry(Yeti.RawAssetManifestRecordEntry other);
        /*0x2206da0*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x2206e9c*/ Yeti.RawAssetManifestRecordEntry Clone();
        /*0x2206ef4*/ string get_AssetName();
        /*0x2206efc*/ void set_AssetName(string value);
        /*0x2206f78*/ int get_RuntimeSize();
        /*0x2206f80*/ void set_RuntimeSize(int value);
        /*0x2206f88*/ int get_CloneRuntimeSize();
        /*0x2206f90*/ void set_CloneRuntimeSize(int value);
        /*0x2206f98*/ bool Equals(object other);
        /*0x2206ffc*/ bool Equals(Yeti.RawAssetManifestRecordEntry other);
        /*0x220707c*/ int GetHashCode();
        /*0x2207118*/ string ToString();
        /*0x2207170*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x2207190*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x220724c*/ int CalculateSize();
        /*0x2207340*/ void MergeFrom(Yeti.RawAssetManifestRecordEntry other);
        /*0x22073bc*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x22073dc*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.RawAssetManifestRecordEntry.<> <>9;

            static /*0x22075cc*/ <>c();
            /*0x2207634*/ <>c();
            /*0x220763c*/ Yeti.RawAssetManifestRecordEntry <.cctor>b__37_0();
        }
    }

    class RawAssetSet : Google.Protobuf.IMessage<Yeti.RawAssetSet>, Google.Protobuf.IMessage, System.IEquatable<Yeti.RawAssetSet>, Google.Protobuf.IDeepCloneable<Yeti.RawAssetSet>, Google.Protobuf.IBufferMessage
    {
        static int SetIdFieldNumber = 1;
        static int RankFieldNumber = 2;
        static int BundleNamesFieldNumber = 3;
        static int NameFieldNumber = 7;
        static int PackageInBuildFieldNumber = 4;
        static int AssetNamesFieldNumber = 5;
        static int EntriesFieldNumber = 6;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.RawAssetSet> _parser;
        static /*0x8*/ Google.Protobuf.FieldCodec<string> _repeated_bundleNames_codec;
        static /*0x10*/ Google.Protobuf.FieldCodec<string> _repeated_assetNames_codec;
        static /*0x18*/ Google.Protobuf.FieldCodec<Yeti.RawAssetSet.Types.AssetSetEntry> _repeated_entries_codec;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ int setId_;
        /*0x1c*/ uint rank_;
        /*0x20*/ Google.Protobuf.Collections.RepeatedField<string> bundleNames_;
        /*0x28*/ string name_;
        /*0x30*/ bool packageInBuild_;
        /*0x38*/ Google.Protobuf.Collections.RepeatedField<string> assetNames_;
        /*0x40*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetSet.Types.AssetSetEntry> entries_;

        static /*0x22085a0*/ RawAssetSet();
        static /*0x220768c*/ Google.Protobuf.MessageParser<Yeti.RawAssetSet> get_Parser();
        static /*0x22076e4*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x2207834*/ RawAssetSet();
        /*0x2207958*/ RawAssetSet(Yeti.RawAssetSet other);
        /*0x22077e8*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x2207a64*/ Yeti.RawAssetSet Clone();
        /*0x2207abc*/ int get_SetId();
        /*0x2207ac4*/ void set_SetId(int value);
        /*0x2207acc*/ uint get_Rank();
        /*0x2207ad4*/ void set_Rank(uint value);
        /*0x2207adc*/ Google.Protobuf.Collections.RepeatedField<string> get_BundleNames();
        /*0x2207ae4*/ string get_Name();
        /*0x2207aec*/ void set_Name(string value);
        /*0x2207b68*/ bool get_PackageInBuild();
        /*0x2207b70*/ void set_PackageInBuild(bool value);
        /*0x2207b78*/ Google.Protobuf.Collections.RepeatedField<string> get_AssetNames();
        /*0x2207b80*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetSet.Types.AssetSetEntry> get_Entries();
        /*0x2207b88*/ bool Equals(object other);
        /*0x2207bec*/ bool Equals(Yeti.RawAssetSet other);
        /*0x2207d14*/ int GetHashCode();
        /*0x2207e44*/ string ToString();
        /*0x2207e9c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x2207ebc*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x2208084*/ int CalculateSize();
        /*0x220825c*/ void MergeFrom(Yeti.RawAssetSet other);
        /*0x2208360*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x2208380*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class Types
        {
            class AssetSetEntry : Google.Protobuf.IMessage<Yeti.RawAssetSet.Types.AssetSetEntry>, Google.Protobuf.IMessage, System.IEquatable<Yeti.RawAssetSet.Types.AssetSetEntry>, Google.Protobuf.IDeepCloneable<Yeti.RawAssetSet.Types.AssetSetEntry>, Google.Protobuf.IBufferMessage
            {
                static int GuidFieldNumber = 1;
                static int NameFieldNumber = 2;
                static /*0x0*/ Google.Protobuf.MessageParser<Yeti.RawAssetSet.Types.AssetSetEntry> _parser;
                /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
                /*0x18*/ string guid_;
                /*0x20*/ string name_;

                static /*0x2208fd4*/ AssetSetEntry();
                static /*0x2208798*/ Google.Protobuf.MessageParser<Yeti.RawAssetSet.Types.AssetSetEntry> get_Parser();
                static /*0x22087f0*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
                /*0x2208908*/ AssetSetEntry();
                /*0x2208970*/ AssetSetEntry(Yeti.RawAssetSet.Types.AssetSetEntry other);
                /*0x22088bc*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
                /*0x22089d0*/ Yeti.RawAssetSet.Types.AssetSetEntry Clone();
                /*0x2208a28*/ string get_Guid();
                /*0x2208a30*/ void set_Guid(string value);
                /*0x2208aac*/ string get_Name();
                /*0x2208ab4*/ void set_Name(string value);
                /*0x2208b30*/ bool Equals(object other);
                /*0x2208b94*/ bool Equals(Yeti.RawAssetSet.Types.AssetSetEntry other);
                /*0x2208c08*/ int GetHashCode();
                /*0x2208c88*/ string ToString();
                /*0x2208ce0*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
                /*0x2208d00*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
                /*0x2208d9c*/ int CalculateSize();
                /*0x2208e6c*/ void MergeFrom(Yeti.RawAssetSet.Types.AssetSetEntry other);
                /*0x2208ee8*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
                /*0x2208f08*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

                class <>c
                {
                    static /*0x0*/ Yeti.RawAssetSet.Types.AssetSetEntry.<> <>9;

                    static /*0x22090ec*/ <>c();
                    /*0x2209154*/ <>c();
                    /*0x220915c*/ Yeti.RawAssetSet.Types.AssetSetEntry <.cctor>b__32_0();
                }
            }
        }

        class <>c
        {
            static /*0x0*/ Yeti.RawAssetSet.<> <>9;

            static /*0x22091ac*/ <>c();
            /*0x2209214*/ <>c();
            /*0x220921c*/ Yeti.RawAssetSet <.cctor>b__58_0();
        }
    }

    class RawAssetSetList : Google.Protobuf.IMessage<Yeti.RawAssetSetList>, Google.Protobuf.IMessage, System.IEquatable<Yeti.RawAssetSetList>, Google.Protobuf.IDeepCloneable<Yeti.RawAssetSetList>, Google.Protobuf.IBufferMessage
    {
        static int AssetSetsFieldNumber = 1;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.RawAssetSetList> _parser;
        static /*0x8*/ Google.Protobuf.FieldCodec<Yeti.RawAssetSet> _repeated_assetSets_codec;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetSet> assetSets_;

        static /*0x2209a24*/ RawAssetSetList();
        static /*0x220926c*/ Google.Protobuf.MessageParser<Yeti.RawAssetSetList> get_Parser();
        static /*0x22092c4*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x2209414*/ RawAssetSetList();
        /*0x220949c*/ RawAssetSetList(Yeti.RawAssetSetList other);
        /*0x22093c8*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x2209528*/ Yeti.RawAssetSetList Clone();
        /*0x2209580*/ Google.Protobuf.Collections.RepeatedField<Yeti.RawAssetSet> get_AssetSets();
        /*0x2209588*/ bool Equals(object other);
        /*0x22095ec*/ bool Equals(Yeti.RawAssetSetList other);
        /*0x220967c*/ int GetHashCode();
        /*0x22096c8*/ string ToString();
        /*0x2209720*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x2209740*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x22097f8*/ int CalculateSize();
        /*0x22098a0*/ void MergeFrom(Yeti.RawAssetSetList other);
        /*0x2209928*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x2209948*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.RawAssetSetList.<> <>9;

            static /*0x2209bd4*/ <>c();
            /*0x2209c3c*/ <>c();
            /*0x2209c44*/ Yeti.RawAssetSetList <.cctor>b__27_0();
        }
    }

    class VolatileOverridesReflection
    {
        static /*0x0*/ Google.Protobuf.Reflection.FileDescriptor descriptor;

        static /*0x2209cec*/ VolatileOverridesReflection();
        static /*0x2209c94*/ Google.Protobuf.Reflection.FileDescriptor get_Descriptor();
    }

    class VolatileOverrides : Google.Protobuf.IMessage<Yeti.VolatileOverrides>, Google.Protobuf.IMessage, System.IEquatable<Yeti.VolatileOverrides>, Google.Protobuf.IDeepCloneable<Yeti.VolatileOverrides>, Google.Protobuf.IBufferMessage
    {
        static int ErrorDialogOverridesFieldNumber = 1;
        static /*0x0*/ Google.Protobuf.MessageParser<Yeti.VolatileOverrides> _parser;
        static /*0x8*/ Google.Protobuf.Collections.MapField.Codec<string, string> _map_errorDialogOverrides_codec;
        /*0x10*/ Google.Protobuf.UnknownFieldSet _unknownFields;
        /*0x18*/ Google.Protobuf.Collections.MapField<string, string> errorDialogOverrides_;

        static /*0x220a890*/ VolatileOverrides();
        static /*0x220a0d8*/ Google.Protobuf.MessageParser<Yeti.VolatileOverrides> get_Parser();
        static /*0x220a130*/ Google.Protobuf.Reflection.MessageDescriptor get_Descriptor();
        /*0x220a280*/ VolatileOverrides();
        /*0x220a308*/ VolatileOverrides(Yeti.VolatileOverrides other);
        /*0x220a234*/ Google.Protobuf.Reflection.MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
        /*0x220a394*/ Yeti.VolatileOverrides Clone();
        /*0x220a3ec*/ Google.Protobuf.Collections.MapField<string, string> get_ErrorDialogOverrides();
        /*0x220a3f4*/ bool Equals(object other);
        /*0x220a458*/ bool Equals(Yeti.VolatileOverrides other);
        /*0x220a4e8*/ int GetHashCode();
        /*0x220a534*/ string ToString();
        /*0x220a58c*/ void WriteTo(Google.Protobuf.CodedOutputStream output);
        /*0x220a5ac*/ void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext output);
        /*0x220a664*/ int CalculateSize();
        /*0x220a70c*/ void MergeFrom(Yeti.VolatileOverrides other);
        /*0x220a794*/ void MergeFrom(Google.Protobuf.CodedInputStream input);
        /*0x220a7b4*/ void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext input);

        class <>c
        {
            static /*0x0*/ Yeti.VolatileOverrides.<> <>9;

            static /*0x220aa4c*/ <>c();
            /*0x220aab4*/ <>c();
            /*0x220aabc*/ Yeti.VolatileOverrides <.cctor>b__27_0();
        }
    }

    class ClientVersion
    {
        static string Version = "26.0";

        /*0x220ab0c*/ ClientVersion();
    }

    interface IDelayedActionCallback
    {
        /*0x1f309e4*/ void OnFinish();
    }

    class ActionDelayer : CapitalGames.IInitializable
    {
        static /*0x0*/ string UpdateSamplerName;
        /*0x10*/ CapitalGames.IMonoBehaviourEventNotifierSystem _monoBehaviourEventNotifierSystem;
        /*0x18*/ System.Collections.Generic.List<Yeti.ActionDelayer.DelayedAction> _delayedActions;

        static /*0x220b27c*/ ActionDelayer();
        /*0x220b1f4*/ ActionDelayer();
        /*0x220ab14*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x220ac90*/ void DelayAction(System.Action onFinish, float delay);
        /*0x220ad70*/ void DelayAction(Yeti.IDelayedActionCallback callback, float delay);
        /*0x220ae50*/ void OnUpdate(CapitalGames.IMonoBehaviourEventNotifierSystem sender);

        struct DelayedAction
        {
            /*0x10*/ float TimeRemaining;
            /*0x18*/ System.Action _onFinishAction;
            /*0x20*/ Yeti.IDelayedActionCallback _onFinishCallback;

            /*0x220ad3c*/ DelayedAction(System.Action onFinishAction, float delay);
            /*0x220ae1c*/ DelayedAction(Yeti.IDelayedActionCallback onFinishCallback, float delay);
            /*0x220b1ac*/ DelayedAction(Yeti.ActionDelayer.DelayedAction previousDelayedAction, float newTimeRemaining);
            /*0x220b0ec*/ void Finish();
        }
    }

    class AdvertisementIdentityProvider : UnityEngine.MonoBehaviour
    {
        /*0x220b3e8*/ AdvertisementIdentityProvider();
        /*0x220b2e4*/ string GetAdvertisementId();

        class <>c__DisplayClass0_0
        {
            /*0x10*/ string id;

            /*0x220b3e0*/ <>c__DisplayClass0_0();
            /*0x220b3f0*/ void <GetAdvertisementId>b__0(string advertisingId, bool trackingEnabled, string error);
        }
    }

    class AsciiKeyboardInputProvider
    {
        /*0x10*/ CapitalGames.CoroutineCreator _coroutineCreator;

        static /*0x220b4d4*/ System.Collections.IEnumerator StringFromKeyboardCoroutine(System.Action<string> onUpdate, System.Action<string> onComplete, UnityEngine.TouchScreenKeyboardType keyboardType, string initialValue);
        static /*0x220b5a8*/ System.Collections.IEnumerator StringFromTouchscreenKeyboard(System.Action<string> onUpdate, System.Action<string> onComplete, UnityEngine.TouchScreenKeyboard keyboard, string currentValue);
        static /*0x220b688*/ System.Collections.IEnumerator StringFromUnityInputSystem(System.Action<string> onUpdate, System.Action<string> onComplete, string currentValue);
        /*0x220b74c*/ AsciiKeyboardInputProvider();
        /*0x220b3f8*/ void GetStringFromKeyboard(System.Action<string> onUpdate, System.Action<string> onComplete, UnityEngine.TouchScreenKeyboardType keyboardType, string initialValue);

        class <StringFromKeyboardCoroutine>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ string initialValue;
            /*0x28*/ UnityEngine.TouchScreenKeyboardType keyboardType;
            /*0x30*/ System.Action<string> onUpdate;
            /*0x38*/ System.Action<string> onComplete;

            /*0x220b580*/ <StringFromKeyboardCoroutine>d__2(int <>1__state);
            /*0x220b754*/ void System.IDisposable.Dispose();
            /*0x220b758*/ bool MoveNext();
            /*0x220b808*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x220b810*/ void System.Collections.IEnumerator.Reset();
            /*0x220b848*/ object System.Collections.IEnumerator.get_Current();
        }

        class <StringFromTouchscreenKeyboard>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ UnityEngine.TouchScreenKeyboard keyboard;
            /*0x28*/ string currentValue;
            /*0x30*/ System.Action<string> onUpdate;
            /*0x38*/ System.Action<string> onComplete;

            /*0x220b660*/ <StringFromTouchscreenKeyboard>d__3(int <>1__state);
            /*0x220b850*/ void System.IDisposable.Dispose();
            /*0x220b854*/ bool MoveNext();
            /*0x220b944*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x220b94c*/ void System.Collections.IEnumerator.Reset();
            /*0x220b984*/ object System.Collections.IEnumerator.get_Current();
        }

        class <StringFromUnityInputSystem>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ string currentValue;
            /*0x28*/ System.Action<string> onUpdate;
            /*0x30*/ System.Action<string> onComplete;
            /*0x38*/ bool <done>5__2;

            /*0x220b724*/ <StringFromUnityInputSystem>d__4(int <>1__state);
            /*0x220b98c*/ void System.IDisposable.Dispose();
            /*0x220b990*/ bool MoveNext();
            /*0x220bb24*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x220bb2c*/ void System.Collections.IEnumerator.Reset();
            /*0x220bb64*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    interface IBackButtonInputProvider
    {
        /*0x1f2fe14*/ bool get_IsBackButtonPressed();
        /*0x1f30ebc*/ void RegisterHandler(Yeti.IBackButtonHandler backButtonHandler);
        /*0x1f30ebc*/ void UnregisterHandler(Yeti.IBackButtonHandler backButtonHandler);
    }

    interface IBackButtonHandler
    {
        /*0x1f2fe14*/ bool HandleBackButton();
    }

    class BackButtonInputProvider : Yeti.IBackButtonInputProvider, CapitalGames.IPostConstructable
    {
        static UnityEngine.KeyCode AndroidBackButtonKeyCode = 27;
        static /*0x0*/ string UpdateSamplerName;
        /*0x10*/ CapitalGames.IMonoBehaviourEventNotifierSystem _monoBehaviourEvents;
        /*0x18*/ Yeti.INavigationService _navigationService;
        /*0x20*/ Yeti.UIServices _uiServices;
        /*0x28*/ PvzN3xt.Tutorial.ITutorialScriptManager _tutorialScriptManager;
        /*0x30*/ Yeti.CombatGuiModel _combatModel;
        /*0x38*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x40*/ Odin.IUILayerService _layerService;
        /*0x48*/ System.Collections.Generic.List<Yeti.IBackButtonHandler> _orderedCustomBackButtonHandlers;

        static /*0x220c2b0*/ BackButtonInputProvider();
        /*0x220c228*/ BackButtonInputProvider();
        /*0x220bb6c*/ bool get_IsBackButtonPressed();
        /*0x220bb78*/ void CapitalGames.IPostConstructable.PostConstruct();
        /*0x220bcc4*/ void OnUpdate(CapitalGames.IMonoBehaviourEventNotifierSystem sender);
        /*0x220be04*/ void DispatchBackButtonEvent();
        /*0x220c178*/ void RegisterHandler(Yeti.IBackButtonHandler backButtonHandler);
        /*0x220c1d0*/ void UnregisterHandler(Yeti.IBackButtonHandler backButtonHandler);
    }

    class NullBackButtonInputProvider : Yeti.IBackButtonInputProvider
    {
        /*0x220c328*/ NullBackButtonInputProvider();
        /*0x220c318*/ bool get_IsBackButtonPressed();
        /*0x220c320*/ void RegisterHandler(Yeti.IBackButtonHandler backButtonHandler);
        /*0x220c324*/ void UnregisterHandler(Yeti.IBackButtonHandler backButtonHandler);
    }

    class BitArrayExtensions
    {
        static /*0x220c330*/ bool IsBitSet(System.Collections.BitArray bitArray, int bit);
    }

    class ByteFormattingUtility
    {
        static /*0x0*/ string[] _formattedByteSizes;

        static /*0x220c4c4*/ ByteFormattingUtility();
        static /*0x220c350*/ string FormatBytes(long numBytes);
    }

    class DebugExceptionPopup : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.UI.Text _messageText;
        /*0x28*/ UnityEngine.UI.Text _stackTraceText;
        /*0x30*/ UnityEngine.UI.Button _closeButton;
        /*0x38*/ UnityEngine.UI.ScrollRect _scrollRect;

        /*0x220c818*/ DebugExceptionPopup();
        /*0x220c644*/ void ShowPopup(string message, string stackTrace);
        /*0x220c764*/ void Awake();
        /*0x220c7f4*/ void OnCloseClicked();
    }

    struct DoubleVector2 : System.IEquatable<Yeti.DoubleVector2>
    {
        static /*0x0*/ Yeti.DoubleVector2 oneVector;
        /*0x10*/ double x;
        /*0x18*/ double y;

        static /*0x220cc40*/ DoubleVector2();
        static /*0x220c820*/ Yeti.DoubleVector2 get_one();
        static /*0x220ca84*/ Yeti.DoubleVector2 op_Addition(Yeti.DoubleVector2 a, Yeti.DoubleVector2 b);
        static /*0x220ca90*/ Yeti.DoubleVector2 op_Subtraction(Yeti.DoubleVector2 a, Yeti.DoubleVector2 b);
        static /*0x220ca9c*/ Yeti.DoubleVector2 op_Multiply(Yeti.DoubleVector2 a, Yeti.DoubleVector2 b);
        static /*0x220caa8*/ Yeti.DoubleVector2 op_Division(Yeti.DoubleVector2 a, Yeti.DoubleVector2 b);
        static /*0x220cab4*/ Yeti.DoubleVector2 op_UnaryNegation(Yeti.DoubleVector2 a);
        static /*0x220cac0*/ Yeti.DoubleVector2 op_Multiply(Yeti.DoubleVector2 a, float d);
        static /*0x220cad0*/ Yeti.DoubleVector2 op_Multiply(float d, Yeti.DoubleVector2 a);
        static /*0x220cae0*/ Yeti.DoubleVector2 op_Division(Yeti.DoubleVector2 a, float d);
        static /*0x220caf0*/ bool op_Equality(Yeti.DoubleVector2 lhs, Yeti.DoubleVector2 rhs);
        static /*0x220cbac*/ bool op_Inequality(Yeti.DoubleVector2 lhs, Yeti.DoubleVector2 rhs);
        static /*0x220c9e4*/ Yeti.DoubleVector2 op_Implicit(UnityEngine.Vector2 v);
        static /*0x220cc34*/ UnityEngine.Vector2 op_Explicit(Yeti.DoubleVector2 v);
        /*0x220c878*/ DoubleVector2(double x, double y);
        /*0x220c880*/ void Set(double newX, double newY);
        /*0x220c888*/ string ToString();
        /*0x220c924*/ bool Equals(object other);
        /*0x220ca34*/ double get_sqrMagnitude();
        /*0x220c9f0*/ bool Equals(Yeti.DoubleVector2 other);
        /*0x220ca48*/ int GetHashCode();
    }

    class EnumMap<T>
    {
        static /*0x0*/ System.Collections.Generic.Dictionary<string, T> _stringToValueMap;

        static /*0x1f33998*/ void Initialize();
        static /*0x1ffc854*/ T GetValue(string item);
    }

    struct FastStringComparer : System.Collections.Generic.IEqualityComparer<string>
    {
        static /*0x0*/ Yeti.FastStringComparer <Instance>k__BackingField;

        static /*0x220cd24*/ FastStringComparer();
        static /*0x220cc8c*/ Yeti.FastStringComparer get_Instance();
        static /*0x220cce4*/ bool EqualsInlined(string x, string y);
        /*0x220ccf0*/ bool Equals(string x, string y);
        /*0x220cd04*/ int GetHashCode(string obj);
    }

    class GameObjectExtensions
    {
        static /*0x1ffc854*/ T AddComponentOverridingExisting<T>(UnityEngine.GameObject gameObject);
        static /*0x220cd28*/ void SetEnabledFast(UnityEngine.Behaviour component, bool isEnabled);
        static /*0x220cd78*/ void SetEnabledFast(UnityEngine.Renderer component, bool isEnabled);
    }

    class GenericTreeHelper : CapitalGames.ILifecycleAware
    {
        /*0x10*/ System.Collections.Generic.List<Yeti.GenericTreeNode> _pathNodes;
        /*0x18*/ System.Collections.Generic.Dictionary<System.Type, Yeti.GenericTreeNode> _genericTrees;
        /*0x20*/ System.Collections.Generic.Dictionary<System.Type, Yeti.IGenericTreeBuilder> _treeBuilders;

        /*0x220cf34*/ GenericTreeHelper();
        /*0x1f302cc*/ Yeti.GenericTreeNode CreateTreeInstance<T>(UnityEngine.GameObject root);
        /*0x1f30214*/ Yeti.GenericTreeBuilder<T> GetOrCreateTreeBuilder<T>();
        /*0x220cdc8*/ void OnAppReset();
        /*0x1f30394*/ Yeti.GenericTreeNode FindLCA<T>(string sourceId, string targetId);
        /*0x1f30394*/ System.Collections.Generic.IReadOnlyList<Yeti.GenericTreeNode> GetTreeNodesToTransition<T>(string sourceNavId, string targetNavId);
        /*0x220cea4*/ System.Collections.Generic.List<Yeti.GenericTreeNode> GetPathNodes();
        /*0x220ceac*/ void GenerateNodeToRootPath(Yeti.GenericTreeNode node, ref System.Collections.Generic.List<Yeti.GenericTreeNode> container);
    }

    class GeoIpUtils
    {
        static /*0x0*/ System.Func<string> _geoIpCountryCodeGetter;
        static /*0x8*/ string _geoIPCountryCode;

        static /*0x220d064*/ string get_GeoIpCountryCode();
        static /*0x220d134*/ void SetGeoIpCountryCodeGetter(System.Func<string> geoIpCountryCodeGetter);
        static /*0x220d18c*/ void Clear();
        static /*0x220d204*/ bool IsCurrentCountryCodeInList(string[] countryCodeList);

        class <>c
        {
            static /*0x0*/ Yeti.GeoIpUtils.<> <>9;
            static /*0x8*/ System.Predicate<string> <>9__6_0;

            static /*0x220d334*/ <>c();
            /*0x220d39c*/ <>c();
            /*0x220d3a4*/ bool <IsCurrentCountryCodeInList>b__6_0(string country);
        }
    }

    interface IGuidGenerator
    {
        /*0x1f30214*/ string NewGuid();
    }

    class GuidGenerator : Yeti.IGuidGenerator
    {
        /*0x220d440*/ GuidGenerator();
        /*0x220d410*/ string NewGuid();
    }

    class HashUtil
    {
        static /*0x220d448*/ byte[] GenerateHashForData(byte[] inputBytes);
        static /*0x220d580*/ string GenerateHashForDataAsString(byte[] inputBytes);
        static /*0x220d678*/ int GetStableHashCodeForString(string str);
    }

    class iCloudBackupUtility
    {
        static /*0x220d75c*/ void MarkFileNoBackup(string fullFilePath);
    }

    class InitializableFactory
    {
        static /*0x220d760*/ CapitalGames.IInitializable CreateCallbackInitializable(System.Action callback);

        class CallbackInitializable : CapitalGames.IInitializable
        {
            /*0x10*/ System.Action _callback;

            /*0x220d7b8*/ CallbackInitializable(System.Action callback);
            /*0x220d834*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        }
    }

    class InspectorLabelOverrideAttribute : UnityEngine.PropertyAttribute
    {
        /*0x18*/ string Label;

        /*0x220d8fc*/ InspectorLabelOverrideAttribute(string label);
    }

    interface IQueueable
    {
        /*0x1f2fe14*/ bool get_Parallelize();
        /*0x1f309e4*/ void ActionToInvoke();
    }

    interface IQueuer
    {
        /*0x1f30ebc*/ void Queue(Yeti.IQueueable objectToQueue);
        /*0x1f30ebc*/ void ActionComplete(Yeti.IQueueable queuedObject);
        /*0x1f2ffc8*/ int get_QueueCount();
    }

    class IReadOnlyListExtensions
    {
        static /*0x1ffc854*/ bool Contains<T>(System.Collections.Generic.IReadOnlyList<T> list, T item);
        static /*0x1ffc854*/ int IndexOf<T>(System.Collections.Generic.IReadOnlyList<T> list, T item);
        static /*0x1f318fc*/ bool Exists<T>(System.Collections.Generic.IReadOnlyList<T> list, System.Predicate<T> match);
        static /*0x1f321f0*/ int FindIndex<T>(System.Collections.Generic.IReadOnlyList<T> list, System.Predicate<T> match);
        static /*0x1ffc854*/ T Find<T>(System.Collections.Generic.IReadOnlyList<T> list, System.Predicate<T> match);
        static /*0x1f319c4*/ bool TryFind<T>(System.Collections.Generic.IReadOnlyList<T> list, System.Predicate<T> match, ref T result);
    }

    class ListShuffle
    {
        static /*0x0*/ System.Random rng;

        static /*0x220d92c*/ ListShuffle();
        static /*0x1f350f8*/ void Shuffle<T>(System.Collections.Generic.IList<T> list);
    }

    class LocalPrefBool
    {
        /*0x10*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x18*/ string _key;
        /*0x20*/ bool _defaultValue;

        static /*0x220db90*/ bool op_Implicit(Yeti.LocalPrefBool pref);
        /*0x220d9a8*/ LocalPrefBool(CapitalGames.ILocalPrefs localPrefs, string key, bool defaultValue);
        /*0x220d9fc*/ bool get_Value();
        /*0x220dab4*/ void set_Value(bool value);
    }

    class LocalPrefInt
    {
        /*0x10*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x18*/ string _key;
        /*0x20*/ int _defaultValue;

        static /*0x220dd78*/ int op_Implicit(Yeti.LocalPrefInt pref);
        /*0x220dba0*/ LocalPrefInt(CapitalGames.ILocalPrefs localPrefs, string key, int defaultValue);
        /*0x220dbf4*/ int get_Value();
        /*0x220dca4*/ void set_Value(int value);
    }

    class LocalPrefString
    {
        /*0x10*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x18*/ string _key;
        /*0x20*/ string _defaultValue;

        static /*0x220df78*/ string op_Implicit(Yeti.LocalPrefString pref);
        /*0x220dd88*/ LocalPrefString(CapitalGames.ILocalPrefs localPrefs, string key, string defaultValue);
        /*0x220dde8*/ string get_Value();
        /*0x220de98*/ void set_Value(string value);
    }

    class LocalPrefFloat
    {
        /*0x10*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x18*/ string _key;
        /*0x20*/ float _defaultValue;

        static /*0x220e1e0*/ float op_Implicit(Yeti.LocalPrefFloat pref);
        /*0x220df88*/ LocalPrefFloat(CapitalGames.ILocalPrefs localPrefs, string key, float defaultValue);
        /*0x220dfdc*/ float get_Value();
        /*0x220e098*/ void set_Value(float value);
    }

    interface IMainThreadActionRouter : CapitalGames.IInitializable
    {
        /*0x1f2fe14*/ bool get_WasInitialized();
        /*0x1f30ebc*/ void RunActionOnMainThread(System.Action action);
    }

    class MainThreadActionRouter : CapitalGames.ILifecycleAware, Yeti.IMainThreadActionRouter, CapitalGames.IInitializable
    {
        static /*0x0*/ string UpdateSamplerName;
        /*0x10*/ CapitalGames.IMonoBehaviourEventNotifierSystem _monoBehaviourEventNotifier;
        /*0x18*/ Yeti.IMainThreadComparer _mainThreadComparer;
        /*0x20*/ bool <WasInitialized>k__BackingField;
        /*0x28*/ System.Collections.Generic.List<System.Action> _queuedActionsFront;
        /*0x30*/ System.Collections.Generic.List<System.Action> _queuedActionsBack;
        /*0x38*/ Yeti.MainThreadActionRouter.LifeCycleState _lifeCycleState;

        static /*0x220eb74*/ MainThreadActionRouter();
        /*0x220eac8*/ MainThreadActionRouter();
        /*0x220e1f0*/ bool get_WasInitialized();
        /*0x220e1f8*/ void set_WasInitialized(bool value);
        /*0x220e200*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x220e6b0*/ void CapitalGames.ILifecycleAware.OnAppReset();
        /*0x220e7b0*/ bool get_IsInitialized();
        /*0x220e7c0*/ void RunActionOnMainThread(System.Action action);
        /*0x220e984*/ void OnUpdate(CapitalGames.IMonoBehaviourEventNotifierSystem sender);
        /*0x220e390*/ void ProcessActions();

        enum LifeCycleState
        {
            NotInitialized = 0,
            Running = 1,
            ShuttingDown = 2,
        }
    }

    interface IMainThreadComparer
    {
        /*0x1f2fec8*/ bool IsMainThread(System.Threading.Thread thread);
    }

    class MainThreadComparer : Yeti.IMainThreadComparer
    {
        /*0x10*/ System.Threading.Thread _mainThread;

        /*0x220ebdc*/ MainThreadComparer();
        /*0x220ec08*/ bool IsMainThread(System.Threading.Thread thread);
    }

    class MovingAverage
    {
        /*0x10*/ System.Collections.Generic.List<float> _list;
        /*0x18*/ bool _dirty;
        /*0x1c*/ float _average;
        /*0x20*/ int _windowSize;

        /*0x220ec18*/ MovingAverage(int windowSize);
        /*0x220ecb0*/ void AddSample(float sample);
        /*0x220ed6c*/ float GetAverage();
        /*0x220ed90*/ void CalculateAverage();
    }

    class MultiSet<TKey, TValue>
    {
        static /*0x0*/ System.Collections.Generic.IReadOnlyCollection<TValue> EmptySet;
        /*0x0*/ System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>> _values;

        static /*0x1f33998*/ MultiSet();
        /*0x1f309e4*/ MultiSet();
        /*0x1f2ffc8*/ int get_Count();
        /*0x1f2fe14*/ bool get_IsEmpty();
        /*0x1ffc854*/ System.Collections.Generic.IReadOnlyCollection<TValue> GetReadonlySet(TKey key);
        /*0x1ffc854*/ System.Collections.Generic.ISet<TValue> GetOrCreateSet(TKey key);
        /*0x1ffc854*/ bool Add(TKey key, TValue value);
        /*0x1ffc854*/ bool Remove(TKey key, TValue value);
        /*0x1ffc854*/ void ClearSet(TKey key);
        /*0x1f309e4*/ void ClearAll();
        /*0x1ffc854*/ bool HasValuesForKey(TKey key);
        /*0x1ffc854*/ bool Contains(TKey key, TValue value);
        /*0x1ffc854*/ TValue GetValue(TKey key);
        /*0x1ffc854*/ bool TryGetValue(TKey key, ref TValue value);
        /*0x1f30214*/ System.Collections.Generic.ISet<TValue> GetAll();
    }

    interface IOpenUrlHelper
    {
        /*0x1f30ebc*/ void OpenUrl(string url);
    }

    class OpenUrlHelper : Yeti.IOpenUrlHelper
    {
        /*0x220eea8*/ OpenUrlHelper();
        /*0x220ee50*/ void OpenUrl(string url);
    }

    class ParameterizedURLHelper
    {
        static string ParameterReplacementIdentifier = "$";
        static string PID = "PID";
        static string PLATFORM = "PLATFORM";
        static string VERSION = "VERSION";
        static string SERVER_ENVIRONMENT = "ENVIRONMENT";
        static string GAME_DATA_VERSION = "DATAVERSION";
        static /*0x0*/ string[] PersonalizationParams;
        /*0x10*/ PvzN3xt.Config.IAppSettingsModel _appSettingsModel;
        /*0x18*/ PvzN3xt.PlayerIdentity.IIdentityProvider _identityProvider;
        /*0x20*/ Yeti.IPlatformProvider _platformProvider;
        /*0x28*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x30*/ Yeti.IOpenUrlHelper _openUrlHelper;

        static /*0x220f858*/ ParameterizedURLHelper();
        static /*0x220f5cc*/ void ReplaceIdentifierWithValue(ref string personalizedUrl, string replacementIdentifier, string replacementData);
        /*0x220f850*/ ParameterizedURLHelper();
        /*0x220eeb0*/ bool TryOpenURL(string url);
        /*0x220ef80*/ bool TryAddPersonalizationDataToLink(ref string url);
        /*0x220f20c*/ string GetPersonalizationDataForParam(string param);
    }

    class PersistableDateTime
    {
        /*0x10*/ string value;
        /*0x18*/ System.DateTime _value;
        /*0x20*/ string _lastParsedValue;

        /*0x220f9d8*/ PersistableDateTime();
        /*0x220f9e0*/ PersistableDateTime(System.DateTime initialValue);
        /*0x220fa9c*/ System.DateTime Get();
        /*0x220fa0c*/ void Set(System.DateTime newValue);
    }

    class ReadOnlyInt : UnityEngine.PropertyAttribute
    {
        /*0x220fb40*/ ReadOnlyInt();
    }

    class RectExtensions
    {
        static /*0x220fb48*/ UnityEngine.Rect Expand(UnityEngine.Rect rect, float amount);
        static /*0x220fb60*/ UnityEngine.Rect Shrink(UnityEngine.Rect rect, float amount);
        static /*0x220fb7c*/ UnityEngine.Rect ExpandHorizontal(UnityEngine.Rect rect, float amount);
        static /*0x220fb8c*/ UnityEngine.Rect ShrinkHorizontal(UnityEngine.Rect rect, float amount);
        static /*0x220fb9c*/ UnityEngine.Rect NextHorizontal(UnityEngine.Rect rect, float width);
        static /*0x220fba8*/ UnityEngine.Rect ToUniformLower(UnityEngine.Rect rect);
    }

    interface ISimpleJSONConvertibleToObject
    {
        /*0x1f30214*/ SimpleJSON.JSONObject ConvertToObject();
    }

    class SimpleJSONUtil
    {
        static /*0x220fbe8*/ SimpleJSON.JSONArray ToJsonArray(System.Collections.Generic.IReadOnlyList<int> values);
        static /*0x220fd98*/ SimpleJSON.JSONArray ToJsonArrayFromList(System.Collections.IList list);
        static /*0x2210200*/ SimpleJSON.JSONObject ToJsonObjectFromDictionary(System.Collections.IDictionary values);
        static /*0x220ff10*/ SimpleJSON.JSONNode ToJsonNode(object value);
    }

    class StringExtensions
    {
        static /*0x221063c*/ bool EqualsWithInvariantCulture(string string1, string string2);
        static /*0x2210648*/ string Slice(string source, int startIndex, int endIndex);
    }

    class TextAssetExtensions
    {
        static /*0x221068c*/ nint GetAddress(UnityEngine.TextAsset asset);
    }

    interface ITimeout
    {
        /*0x1f309e4*/ void Cancel();
    }

    class TimeoutHandler : Yeti.ITimeout, System.Collections.IEnumerator
    {
        /*0x10*/ Yeti.ITimeProvider _timeProvider;
        /*0x18*/ System.TimeSpan _timeoutLength;
        /*0x20*/ System.Action _onTimeout;
        /*0x28*/ System.DateTime _timeoutTime;
        /*0x30*/ bool _isCanceled;

        /*0x221070c*/ TimeoutHandler(Yeti.ITimeProvider timeProvider, System.TimeSpan timeoutLength, System.Action onTimeout);
        /*0x2210700*/ void Cancel();
        /*0x22107b8*/ void Start();
        /*0x22108a0*/ bool System.Collections.IEnumerator.MoveNext();
        /*0x22109b8*/ void System.Collections.IEnumerator.Reset();
        /*0x22109f0*/ object System.Collections.IEnumerator.get_Current();
    }

    interface ITimeoutUtility
    {
        Yeti.ITimeout StartTimeout(System.TimeSpan timeoutLength, System.Action onTimeout);
    }

    class TimeoutUtility : Yeti.ITimeoutUtility
    {
        /*0x10*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x18*/ Yeti.LocalTimeProvider _timeProvider;

        /*0x2210af4*/ TimeoutUtility();
        /*0x22109f8*/ Yeti.ITimeout StartTimeout(System.TimeSpan timeoutLength, System.Action onTimeout);
    }

    class TransformExtensions
    {
        static /*0x2210afc*/ UnityEngine.Transform FindWithName(UnityEngine.Transform transform, string name);
    }

    class UnitConstants
    {
        static int InvalidUnitId = -1;
    }

    interface IUriHelper
    {
        /*0x1f2fec8*/ bool IsValidUri(string uri);
        bool TryOpenUri(string uri, System.Action<bool> onComplete, bool failSilently);
    }

    class UriHelper : Yeti.IUriHelper
    {
        /*0x10*/ Yeti.IDeeplinkHandler _deeplinkHandler;
        /*0x18*/ Yeti.ParameterizedURLHelper _parameterizedUrlHelper;

        static /*0x2210d24*/ bool IsValidHttpUriScheme(string uri);
        /*0x2210fb4*/ UriHelper();
        /*0x2210c14*/ bool IsValidUri(string uri);
        /*0x2210e34*/ bool TryOpenUri(string uri, System.Action<bool> onComplete, bool failSilently);
    }

    class Vector3Extensions
    {
        static /*0x2210fbc*/ UnityEngine.Vector3 ClampPiecewise(UnityEngine.Vector3 value, UnityEngine.Vector3 min, UnityEngine.Vector3 max);
    }

    class VectorExtensions
    {
        static /*0x2210ff8*/ UnityEngine.Vector2 ToXZ(UnityEngine.Vector3 vector);
    }

    class BatchOtaTranslationUpdater : CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x20*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x28*/ CapitalGames.InstanceInitializedCallback _initializedCallback;

        /*0x22112bc*/ BatchOtaTranslationUpdater();
        /*0x2211000*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2211208*/ void OnOtaLocalizationAssetSetDownloaded();
    }

    class BuiltinLocalizationStringsCache : UnityEngine.MonoBehaviour
    {
        static string MappingsPropertyName = "_mappings";
        static string MappingStringIdPropertyName = "StringId";
        static string MappingLanguagePropertyName = "Language";
        static string MappingLocalizedStringPropertyName = "LocalizedString";
        /*0x20*/ string[] _supportedStringIds;
        /*0x28*/ Yeti.BuiltinLocalizationStringsCache.StringMapping[] _mappings;

        /*0x22113c4*/ BuiltinLocalizationStringsCache();
        /*0x22112c4*/ System.Collections.Generic.IReadOnlyList<string> get_SupportedStringIds();
        /*0x22112cc*/ System.Collections.Generic.Dictionary<string, string> GetStringsForLanguage(RedCrow.UI.UUIF.Localization.Language language);

        struct StringMapping
        {
            /*0x10*/ string StringId;
            /*0x18*/ RedCrow.UI.UUIF.Localization.Language Language;
            /*0x20*/ string LocalizedString;
        }
    }

    class BuiltinTranslationInitializer : CapitalGames.IInitializable
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x18*/ CapitalGames.InstanceInitializedCallback _initializedCallback;

        /*0x2211748*/ BuiltinTranslationInitializer();
        /*0x2211460*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x22115c8*/ void OnLocalizationChanged(string locale);
    }

    class BundledLocalizationInitializer : CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.EvaluateLocalizationManagerLanguageInitializable _evaluateLocalizationManagerLanguageInitializable;
        /*0x18*/ Yeti.IFontManager _fontManager;
        /*0x20*/ Yeti.FontStaticStateManager _fontStaticStateManager;
        /*0x28*/ Yeti.BundledTranslationInitializer _bundledTranslationInitializer;

        /*0x2211990*/ BundledLocalizationInitializer();
        /*0x2211750*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);

        class <>c__DisplayClass4_0
        {
            /*0x10*/ CapitalGames.InstanceInitializedCallback initializedCallback;
            /*0x18*/ Yeti.BundledLocalizationInitializer <>4__this;

            /*0x2211988*/ <>c__DisplayClass4_0();
            /*0x2211998*/ void <Initialize>b__0();
        }
    }

    class BundledTranslationInitializer : CapitalGames.IInitializable
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x18*/ CapitalGames.InstanceInitializedCallback _initializedCallback;

        /*0x2211d30*/ BundledTranslationInitializer();
        /*0x2211a48*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2211bb0*/ void OnLocalizationChanged(string locale);
    }

    class CompactNumberFormatManager : Yeti.ICompactNumberFormatManager, CapitalGames.IPostConstructable
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x18*/ Yeti.ICompactNumberFormatProvider _compactNumberFormatProvider;
        /*0x20*/ System.Collections.Generic.List<Yeti.ShortNumberLabelBinder> _labels;

        /*0x22125f8*/ CompactNumberFormatManager();
        /*0x2211d38*/ void CapitalGames.IPostConstructable.PostConstruct();
        /*0x2211f90*/ void Finalize();
        /*0x2211e98*/ void OnLocalizationChanged(string locale);
        /*0x22120ec*/ void UpdateLabels();
        /*0x22122b4*/ void RegisterLabel(Yeti.ShortNumberLabelBinder label);
        /*0x221230c*/ void UnregisterLabel(Yeti.ShortNumberLabelBinder label);
        /*0x2212364*/ string FormatShortNumber(long amount, int displayDigits, Yeti.CompactNumberRounding rounding);
        /*0x22124a4*/ string FormatShortNumber(float amount, int displayDigits, Yeti.CompactNumberRounding rounding, int precisionOverride);
    }

    enum CompactNumberRounding
    {
        RoundDown = 0,
        RoundToClosest = 1,
    }

    class CompactNumberFormatProvider : Yeti.ICompactNumberFormatProvider
    {
        static string FloatFormat = "N";
        static int InvalidValueForPrecision = -1;
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x20*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x28*/ EALoc.CompactNumberFormat[] _formats;

        static /*0x221281c*/ int GetNumberOfDigits(float number);
        static /*0x2212898*/ long GetNumberOfDigits(long number);
        static /*0x2212a04*/ string Format(int displayDigits, System.Globalization.CultureInfo cultureInfo, float newAmount, string suffix, Yeti.CompactNumberRounding rounding, int precisionOverride);
        /*0x22131c4*/ CompactNumberFormatProvider();
        /*0x2212680*/ void LoadData(string locale, System.Action callback);
        /*0x2212918*/ string FormatShortNumber(float amount, int displayDigits, System.Globalization.CultureInfo cultureInfo, Yeti.CompactNumberRounding rounding, int precisionOverride);
        /*0x2212e9c*/ string FormatShortNumber(long amount, int displayDigits, System.Globalization.CultureInfo cultureInfo, Yeti.CompactNumberRounding rounding);
        /*0x22129b0*/ EALoc.CompactNumberFormat GetFormat(float amount);
        /*0x2213098*/ void OnDataLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object context);

        class <>c__DisplayClass6_0
        {
            /*0x10*/ Yeti.CompactNumberFormatProvider <>4__this;
            /*0x18*/ System.Action callback;

            /*0x2212814*/ <>c__DisplayClass6_0();
            /*0x22131cc*/ void <LoadData>b__0(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object context);
        }
    }

    class CultureInfoOverride : UnityEngine.ScriptableObject
    {
        static int FOUR_DIGITS_MIN_VALUE = 1000;
        static int FOUR_DIGITS_MAX_VALUE = 9999;
        /*0x18*/ bool _useCodepoint;
        /*0x19*/ bool _fourDigitsNoApplyGroupSeparator;
        /*0x20*/ string _codePointCurrencyGroupSeparator;
        /*0x28*/ string _codePointNumberGroupSeparator;
        /*0x30*/ string _currencyGroupSeparator;
        /*0x38*/ string _numberGroupSeparator;
        /*0x40*/ System.Globalization.CultureInfo _cultureInfoWithoutSeparators;

        /*0x221355c*/ CultureInfoOverride();
        /*0x22131e8*/ string get_CurrencyGroupSeparator();
        /*0x22131f0*/ string get_NumberGroupSeparator();
        /*0x22131f8*/ bool get_FourDigitsNoApplyGroupSeparator();
        /*0x2213200*/ System.Globalization.CultureInfo GetCultureInfoOverride(System.Globalization.CultureInfo standard);
        /*0x2213048*/ System.Globalization.CultureInfo FourDigitsNoApplyGroupSeparation(System.Globalization.CultureInfo cultureInfo, long value);
        /*0x22134bc*/ string FourDigitsNoApplyGroupSeparationToString(System.Globalization.CultureInfo cultureInfo, long value);
        /*0x2213368*/ void InitCultureInfoWithoutSeparators(System.Globalization.CultureInfo standard);
    }

    class CultureInfoOverrideLoader
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x20*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x28*/ System.Action<Yeti.CultureInfoOverride> _onCultureInfoOverriderLoadedCallback;

        /*0x2213c34*/ CultureInfoOverrideLoader();
        /*0x22135e0*/ void LoadBundledCultureInfoOverride(RedCrow.UI.UUIF.Localization.Language language, System.Action<Yeti.CultureInfoOverride> onCultureInfoOverriderLoadedCallback);
        /*0x22137a4*/ void OnCultureInfoOverriderLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle resourceHandle, object context);
        /*0x2213964*/ void CallbackWith(Yeti.CultureInfoOverride cultureInfoOverride);
        /*0x2213a7c*/ void OnCultureInfoOverriderLoadError(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError resourceError, object context);
        /*0x22139ac*/ void ShowCultureInfoOverriderMissingError(RedCrow.UI.UUIF.Localization.Language language);
    }

    class CultureInfoOverrideManager : CapitalGames.IInitializable
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x18*/ Yeti.CultureInfoOverrideLoader _cultureInfoOverrideLoader;
        /*0x20*/ Yeti.YetiLocalizationUtil _localizationUtil;

        /*0x2214194*/ CultureInfoOverrideManager();
        /*0x2213c3c*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2213f3c*/ void Finalize();
        /*0x2213e2c*/ void OnLocalizationChanged(string locale);
        /*0x2214098*/ void OnBundledCultureInfoOverriderLoaded(Yeti.CultureInfoOverride cultureInfoOverride);
    }

    class DynamicFontInitializer : CapitalGames.IInitializable
    {
        static string TimedMetricId = "BlockingDownloadDynamicFonts";
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Yeti.IFontManager _fontManager;
        /*0x20*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x28*/ PvzN3xt.Track.TrackDomainController _trackController;
        /*0x30*/ PvzN3xt.Meta.FeatureUnlocks.FeatureUnlocksController _featureUnlocksController;

        /*0x2214a10*/ DynamicFontInitializer();
        /*0x221419c*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2214514*/ void BackgroundDownloadDynamicFonts();
        /*0x2214278*/ void BlockingDownloadDynamicFonts(System.Action callback);
        /*0x2214768*/ bool IsBlockingDynamicFontDownloadRequired();
        /*0x2214648*/ bool CanInitiateBackgroundDynamicFontDownload();
        /*0x22147fc*/ void OnBackgroundDynamicFontAssetSetDownloaded();
        /*0x22148a4*/ void OnBlockingDynamicFontAssetSetDownloaded(System.Action callback);

        class <>c__DisplayClass6_0
        {
            /*0x10*/ CapitalGames.InstanceInitializedCallback initializedCallback;
            /*0x18*/ Yeti.DynamicFontInitializer <>4__this;

            /*0x2214270*/ <>c__DisplayClass6_0();
            /*0x2214a18*/ void <CapitalGames.IInitializable.Initialize>b__0();
        }

        class <>c__DisplayClass8_0
        {
            /*0x10*/ Yeti.DynamicFontInitializer <>4__this;
            /*0x18*/ System.Action callback;

            /*0x2214760*/ <>c__DisplayClass8_0();
            /*0x2214ac0*/ void <BlockingDownloadDynamicFonts>b__0();
        }
    }

    class EvaluateLocalizationManagerLanguageInitializable : CapitalGames.IInitializable
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;

        /*0x2214c04*/ EvaluateLocalizationManagerLanguageInitializable();
        /*0x2214adc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
    }

    class FallbackFontMetadata : UnityEngine.ScriptableObject
    {
        /*0x18*/ Yeti.SourceFontMetadata[] _sourceFontMetaDatas;
        /*0x20*/ Yeti.FallbackFontReference[] _fallbackFonts;

        /*0x2214d24*/ FallbackFontMetadata();
        /*0x2214c0c*/ Yeti.SourceFontMetadata[] get_SourceFontMetaDatas();
        /*0x2214c14*/ void set_SourceFontMetaDatas(Yeti.SourceFontMetadata[] value);
        /*0x2214c98*/ Yeti.FallbackFontReference[] get_FallbackFonts();
        /*0x2214ca0*/ void set_FallbackFonts(Yeti.FallbackFontReference[] value);
    }

    class FallbackFontReference
    {
        /*0x10*/ int _rank;
        /*0x18*/ TMPro.TMP_FontAsset _fallbackFont;

        /*0x2214e60*/ FallbackFontReference();
        /*0x2214d2c*/ int get_Rank();
        /*0x2214d34*/ void set_Rank(int value);
        /*0x2214dd4*/ TMPro.TMP_FontAsset get_FallbackFont();
        /*0x2214ddc*/ void set_FallbackFont(TMPro.TMP_FontAsset value);
    }

    class FontAsset : UnityEngine.ScriptableObject
    {
        /*0x18*/ string _name;
        /*0x20*/ string _extension;
        /*0x28*/ long _size;
        /*0x30*/ byte[] _bytes;

        /*0x22151c8*/ FontAsset();
        /*0x2214e68*/ string get_Name();
        /*0x2214e70*/ void set_Name(string value);
        /*0x2214f14*/ string get_Extension();
        /*0x2214f1c*/ void set_Extension(string value);
        /*0x2214fc0*/ long get_Size();
        /*0x2214fc8*/ void set_Size(long value);
        /*0x2215088*/ byte[] get_Bytes();
        /*0x2215090*/ void set_Bytes(byte[] value);
        /*0x2215134*/ bool IsValid();
    }

    interface IFontAssetUnpacker
    {
        /*0x1f30ff0*/ void LoadAssetsAndUnpackToDisk(Yeti.FallbackFontMetadata fallbackFontMetadata, System.Action<Yeti.FallbackFontMetadata> fontUnpackedCallback);
        /*0x1f30214*/ string[] GetFontAssetsForUnpackedFonts();
    }

    class FontAssetUnpacker : Yeti.IFontAssetUnpacker
    {
        /*0x10*/ Yeti.IFontLoader _fontLoader;
        /*0x18*/ Yeti.FileSystem.IFileSystem _fileSystem;
        /*0x20*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x28*/ Yeti.IAssetManager _assetManager;
        /*0x30*/ System.Collections.Generic.List<string> _unpackedFonts;
        /*0x38*/ System.Collections.Generic.List<string> _fontsToUnpack;
        /*0x40*/ Yeti.FallbackFontMetadata _fallbackFontMetadata;
        /*0x48*/ System.Action<Yeti.FallbackFontMetadata> _fontUnpackedCallback;

        static /*0x2215930*/ bool IsRawFontOnDisk(string unpackedSourceFont);
        /*0x2215edc*/ FontAssetUnpacker();
        /*0x22151d0*/ void LoadAssetsAndUnpackToDisk(Yeti.FallbackFontMetadata fallbackFontMetadata, System.Action<Yeti.FallbackFontMetadata> fontUnpackedCallback);
        /*0x2215364*/ string[] GetFontAssetsForUnpackedFonts();
        /*0x2215220*/ void LoadFilesFromBundle(Yeti.SourceFontMetadata[] dynamicFontMetaDatas);
        /*0x221547c*/ void FilterOutCachedFontAssets(Yeti.SourceFontMetadata[] dynamicFontMetaDatas);
        /*0x22159c8*/ void OnFontAssetsLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resourceCollection, object asset);
        /*0x221585c*/ void SafeInvokeCallback();
        /*0x2215d78*/ void WriteFontToCache(Yeti.FontAsset fontAsset);
    }

    interface IFontLoader
    {
        /*0x1f310fc*/ void LoadBundledLocalizeFontMetadata(RedCrow.UI.UUIF.Localization.Language[] languagesToLoad, ref System.Collections.Generic.List<RedCrow.UI.UUIF.Localization.Language> extraLoadedLanguages, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> onLocalizeFontMetadataLoadedCallback);
        /*0x1f30ebc*/ void LoadGlobalFallbackFontData(System.Action<Yeti.FallbackFontMetadata> onFallbackFontDataLoadedCallback);
        /*0x1f30ff0*/ void LoadFontAssetData(System.Collections.Generic.IEnumerable<string> fontAssetNames, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> onFontAssetsLoadedCallback);
    }

    class FontLoader : Yeti.IFontLoader, CapitalGames.ILifecycleAware
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x20*/ System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> _onLocalizeFontMetadataLoadedCallback;
        /*0x28*/ System.Action<Yeti.FallbackFontMetadata> _onFallbackFontMetadataLoadedCallback;
        /*0x30*/ System.Collections.Generic.List<RedCrow.UI.UUIF.Localization.Language> _loadedBundledLanguages;

        static /*0x22169f8*/ void OnLocalizeFontMetadataLoadError(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError resourceError, object asset);
        static /*0x2216b94*/ void OnFallbackFontMetadataLoadError(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError resourceError, object asset);
        static /*0x2216d10*/ void OnFontAssetsFailedToLoad(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError resourceError, object asset);
        /*0x2216ef8*/ FontLoader();
        /*0x2215f88*/ void OnAppReset();
        /*0x2216024*/ void LoadBundledLocalizeFontMetadata(RedCrow.UI.UUIF.Localization.Language[] languagesToLoad, ref System.Collections.Generic.List<RedCrow.UI.UUIF.Localization.Language> extraLoadedLanguages, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection> onLocalizeFontMetadataLoadedCallback);
        /*0x2216420*/ void LoadGlobalFallbackFontData(System.Action<Yeti.FallbackFontMetadata> onFallbackFontDataLoadedCallback);
        /*0x22165c0*/ void LoadFontAssetData(System.Collections.Generic.IEnumerable<string> fontAssetNames, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> onFontAssetsLoadedCallback);
        /*0x221671c*/ void OnLocalizeFontMetadataLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resourceCollection, object asset);
        /*0x2216848*/ void OnFallbackFontMetadataLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object asset);
    }

    interface IFontManager : CapitalGames.IInitializable
    {
        /*0x1f30ebc*/ void LoadStaticFontForCurrentLanguage(System.Action callback);
        /*0x1f2fe14*/ bool IsBackgroundOtaFontDownloadEnabled();
        /*0x1f30ebc*/ void LoadDynamicFont(System.Action callback);
        /*0x1f30ebc*/ void RegisterLabel(Yeti.LocalizeFont localizeFont);
        /*0x1f30ebc*/ void UnregisterLabel(Yeti.LocalizeFont localizeFont);
    }

    class FontManager : Yeti.IFontManager, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x10*/ Yeti.IFontLoader _fontLoader;
        /*0x18*/ Yeti.IFontProvider _fontProvider;
        /*0x20*/ Yeti.IFontAssetUnpacker _fontAssetUnpacker;
        /*0x28*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x30*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x38*/ Yeti.GameEventManager _gameEventManager;
        /*0x40*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x48*/ System.Collections.Generic.List<Yeti.LocalizeFont> _localizeFonts;
        /*0x50*/ System.Action _onBundledFontLoadedCallback;
        /*0x58*/ System.Action _onOtaFontLoadedCallback;
        /*0x60*/ System.Collections.Generic.HashSet<RedCrow.UI.UUIF.Localization.Language> _bundledFontLanguageRequests;

        /*0x2218e80*/ FontManager();
        /*0x2216f80*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2217138*/ void LoadStaticFontForCurrentLanguage(System.Action callback);
        /*0x2217434*/ void LoadDynamicFont(System.Action callback);
        /*0x22176a8*/ void RegisterLabel(Yeti.LocalizeFont localizeFont);
        /*0x2217b10*/ void UnregisterLabel(Yeti.LocalizeFont localizeFont);
        /*0x2217b68*/ void OnExit();
        /*0x2217de4*/ void OnAppReset();
        /*0x2217c34*/ void ClearFontData(bool appReset);
        /*0x2217dec*/ bool IsBackgroundOtaFontDownloadEnabled();
        /*0x22175a0*/ bool IsDynamicFallbackFontSystemEnabled();
        /*0x2217f1c*/ void OnBundledLocalizeFontMetadataLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resourceCollection);
        /*0x2217fa8*/ void SetBundledFontAsGlobalFallbackForEnabledLanguages(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resourceCollection);
        /*0x22185e8*/ void SetBundledFontAsGlobalFallbacks(System.Collections.Generic.IReadOnlyList<Yeti.LocalizedFont> localizedFonts);
        /*0x22188e4*/ void OnFallbackFontDataLoaded(Yeti.FallbackFontMetadata fallbackFontMetadata);
        /*0x22189dc*/ void OnFontUnpackedCallback(Yeti.FallbackFontMetadata fallbackFontMetadata);
        /*0x2218af0*/ void SetOtaFontsAsGlobalFallbacks(Yeti.FallbackFontReference[] fallbackFonts);
        /*0x2218838*/ void AddGlobalFontFallbacks(System.Collections.Generic.IEnumerable<TMPro.TMP_FontAsset> fallbackFonts);
        /*0x2217388*/ void RemoveGlobalFontFallbacksForLanguages(System.Collections.Generic.List<RedCrow.UI.UUIF.Localization.Language> languages);
        /*0x2218788*/ void UpdateProvider(Yeti.LocalizeFontMetadata localizeFontMetadata);
        /*0x2218de0*/ void UpdateFonts();
        /*0x2217710*/ void SetFont(Yeti.LocalizeFont localizeFont, bool logErrors);

        class <>c
        {
            static /*0x0*/ Yeti.FontManager.<> <>9;
            static /*0x8*/ System.Comparison<Yeti.FallbackFontReference> <>9__26_0;

            static /*0x2218f08*/ <>c();
            /*0x2218f70*/ <>c();
            /*0x2218f78*/ int <SetOtaFontsAsGlobalFallbacks>b__26_0(Yeti.FallbackFontReference x, Yeti.FallbackFontReference y);
        }
    }

    interface IFontProvider
    {
        /*0x1f30ebc*/ void SetFontData(Yeti.LocalizeFontMetadata localizeFontMetadata);
        /*0x1f302cc*/ TMPro.TMP_FontAsset GetFont(string name);
        /*0x1f302cc*/ UnityEngine.Material GetMaterial(string name);
        /*0x1f309e4*/ void ClearDynamicFonts();
        /*0x1f30ebc*/ void AddGlobalFontFallbacks(System.Collections.Generic.IEnumerable<TMPro.TMP_FontAsset> fallbackFonts);
        /*0x1f30ebc*/ void RemoveFontFallbacksForLanguage(System.Collections.Generic.List<RedCrow.UI.UUIF.Localization.Language> languages);
        /*0x1f309e4*/ void EvictFontFallbacks();
    }

    class FontProvider : Yeti.IFontProvider
    {
        /*0x10*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x18*/ System.Collections.Generic.Dictionary<string, TMPro.TMP_FontAsset> _fonts;
        /*0x20*/ System.Collections.Generic.Dictionary<string, UnityEngine.Material> _materials;

        /*0x22199b0*/ FontProvider();
        /*0x2218f9c*/ void SetFontData(Yeti.LocalizeFontMetadata localizeFontMetadata);
        /*0x22190fc*/ TMPro.TMP_FontAsset GetFont(string name);
        /*0x22191c0*/ UnityEngine.Material GetMaterial(string name);
        /*0x2219284*/ void ClearDynamicFonts();
        /*0x2219494*/ void EvictFontFallbacks();
        /*0x22194e4*/ void AddGlobalFontFallbacks(System.Collections.Generic.IEnumerable<TMPro.TMP_FontAsset> fallbackFonts);
        /*0x22197a4*/ void RemoveFontFallbacksForLanguage(System.Collections.Generic.List<RedCrow.UI.UUIF.Localization.Language> languages);
        /*0x2218fa0*/ void CacheResources(Yeti.LocalizeFontMetadata data);

        class <>c__DisplayClass9_0
        {
            /*0x10*/ string locale;
            /*0x18*/ Yeti.FontProvider <>4__this;

            /*0x22199a8*/ <>c__DisplayClass9_0();
            /*0x2219a8c*/ bool <RemoveFontFallbacksForLanguage>b__0(TMPro.TMP_FontAsset x);
        }
    }

    class FontSizeMatcher : UnityEngine.MonoBehaviour
    {
        /*0x20*/ TMPro.TMP_Text[] _labels;

        static /*0x2219bc4*/ void ResizeLabels(System.Collections.Generic.IReadOnlyList<TMPro.TMP_Text> labels);
        static /*0x2219d14*/ float GetMinSize(System.Collections.Generic.IReadOnlyList<TMPro.TMP_Text> labels);
        static /*0x2219e78*/ void SetSize(TMPro.TMP_Text label, float size);
        /*0x2219e9c*/ FontSizeMatcher();
        /*0x2219b30*/ System.Collections.IEnumerator Start();

        class <Start>d__1 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.FontSizeMatcher <>4__this;

            /*0x2219b9c*/ <Start>d__1(int <>1__state);
            /*0x2219ea4*/ void System.IDisposable.Dispose();
            /*0x2219ea8*/ bool MoveNext();
            /*0x2219f18*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x2219f20*/ void System.Collections.IEnumerator.Reset();
            /*0x2219f58*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class FontStaticStateManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ System.Action OnStaticFontLoaded;
        static /*0x8*/ System.Action OnDynamicFontLoaded;
        static /*0x10*/ bool <StaticFontIsLoaded>k__BackingField;
        static /*0x11*/ bool <DynamicFontsIsLoaded>k__BackingField;
        /*0x10*/ Yeti.GameEventManager _gameEventManager;

        static /*0x2219f60*/ void add_OnStaticFontLoaded(System.Action value);
        static /*0x221a018*/ void remove_OnStaticFontLoaded(System.Action value);
        static /*0x221a0d0*/ void add_OnDynamicFontLoaded(System.Action value);
        static /*0x221a18c*/ void remove_OnDynamicFontLoaded(System.Action value);
        static /*0x221a248*/ bool get_StaticFontIsLoaded();
        static /*0x221a290*/ void set_StaticFontIsLoaded(bool value);
        static /*0x221a2e0*/ bool get_DynamicFontsIsLoaded();
        static /*0x221a328*/ void set_DynamicFontsIsLoaded(bool value);
        static /*0x221a534*/ void StaticFontLoaded();
        static /*0x221a5d0*/ void DynamicFontLoaded();
        /*0x221a718*/ FontStaticStateManager();
        /*0x221a378*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x221a664*/ void CapitalGames.ILifecycleAware.OnAppReset();
    }

    struct LocalizedFontSize
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x14*/ float _size;

        /*0x221a720*/ LocalizedFontSize(RedCrow.UI.UUIF.Localization.Language languageToChange, float size);
        /*0x221a72c*/ RedCrow.UI.UUIF.Localization.Language get_LanguageToChange();
        /*0x221a734*/ float get_Size();
    }

    struct LocalizedFontSpacing
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x14*/ float _spacing;

        /*0x221a73c*/ LocalizedFontSpacing(RedCrow.UI.UUIF.Localization.Language languageToChange, float spacing);
        /*0x221a748*/ RedCrow.UI.UUIF.Localization.Language get_LanguageToChange();
        /*0x221a750*/ float get_Spacing();
    }

    struct LocalizedFontMargins
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x14*/ float _left;
        /*0x18*/ float _top;
        /*0x1c*/ float _right;
        /*0x20*/ float _bottom;

        /*0x221a758*/ LocalizedFontMargins(RedCrow.UI.UUIF.Localization.Language languageToChange, float left, float top, float right, float bottom);
        /*0x221a768*/ RedCrow.UI.UUIF.Localization.Language get_LanguageToChange();
        /*0x221a770*/ float get_LeftMargin();
        /*0x221a778*/ float get_RightMargin();
        /*0x221a780*/ float get_TopMargin();
        /*0x221a788*/ float get_BottomMargin();
    }

    struct LocalizedFontStyle
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x14*/ Yeti.LocalizedFontStyle.LetterOperation _bold;
        /*0x18*/ Yeti.LocalizedFontStyle.LetterOperation _italic;
        /*0x1c*/ Yeti.LocalizedFontStyle.LetterOperation _underline;
        /*0x20*/ Yeti.LocalizedFontStyle.LetterOperation _strikethrough;
        /*0x24*/ Yeti.LocalizedFontStyle.LetterType _letterType;

        /*0x221a790*/ LocalizedFontStyle(RedCrow.UI.UUIF.Localization.Language language, Yeti.LocalizedFontStyle.LetterOperation bold, Yeti.LocalizedFontStyle.LetterOperation italic, Yeti.LocalizedFontStyle.LetterOperation underline, Yeti.LocalizedFontStyle.LetterOperation strikethrough, Yeti.LocalizedFontStyle.LetterType letterType);
        /*0x221a7a0*/ RedCrow.UI.UUIF.Localization.Language get_LanguageToChange();
        /*0x221a7a8*/ Yeti.LocalizedFontStyle.LetterOperation get_Bold();
        /*0x221a7b0*/ Yeti.LocalizedFontStyle.LetterOperation get_Italic();
        /*0x221a7b8*/ Yeti.LocalizedFontStyle.LetterOperation get_Underline();
        /*0x221a7c0*/ Yeti.LocalizedFontStyle.LetterOperation get_Strikethrough();
        /*0x221a7c8*/ Yeti.LocalizedFontStyle.LetterType get_CurrentLetterType();

        enum LetterType
        {
            Current = 0,
            Normal = 1,
            LowerCase = 2,
            UpperCase = 3,
            SmallCaps = 4,
        }

        enum LetterOperation
        {
            Current = 0,
            Set = 1,
            Unset = 2,
        }
    }

    struct LocalizeOperation
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x14*/ Yeti.LocalizeOperation.LetterEffect _effect;
        /*0x18*/ Yeti.LocalizeOperation.DisableMarkupsMode _disableMarkupsMode;
        /*0x1c*/ bool _disableInStringId;
        /*0x20*/ string[] _affectedStringId;

        /*0x221a7d0*/ LocalizeOperation(RedCrow.UI.UUIF.Localization.Language language, Yeti.LocalizeOperation.LetterEffect effect, Yeti.LocalizeOperation.DisableMarkupsMode disableMarkupsMode, bool disableInStringId, string[] affectedStringId);
        /*0x221a7e8*/ RedCrow.UI.UUIF.Localization.Language get_LanguageToChange();
        /*0x221a7f0*/ Yeti.LocalizeOperation.LetterEffect get_Effect();
        /*0x221a7f8*/ Yeti.LocalizeOperation.DisableMarkupsMode get_CurrentDisableMarkupsMode();
        /*0x221a800*/ bool get_DisableInStringId();
        /*0x221a808*/ string[] get_AffectedStringId();

        enum DisableMarkupsMode
        {
            OnlyEntireText = 0,
            EveryMarkup = 1,
        }

        enum LetterEffect
        {
            Bold = 0,
            Italic = 1,
        }
    }

    struct LocalizedFontMaterial
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x18*/ UnityEngine.Material _fontMaterial;

        /*0x221a810*/ RedCrow.UI.UUIF.Localization.Language get_LanguageToChange();
        /*0x221a818*/ UnityEngine.Material get_FontMaterial();
    }

    class FontStyleOverrider : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.LocalizedFontSize[] _sizeOverrides;
        /*0x28*/ Yeti.LocalizedFontSpacing[] _spacingOverrides;
        /*0x30*/ Yeti.LocalizedFontMargins[] _marginsOverrides;
        /*0x38*/ Yeti.LocalizedFontStyle[] _stylesOverrides;
        /*0x40*/ Yeti.LocalizedFontMaterial[] _materialsOverrides;
        /*0x48*/ Yeti.LocalizeOperation[] _markupsOverrides;
        /*0x50*/ Yeti.LocText _locText;
        /*0x58*/ TMPro.TextMeshProUGUI _label;
        /*0x60*/ RedCrow.UI.UUIF.Localization.Language _currentLanguage;
        /*0x68*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;

        /*0x221bae8*/ FontStyleOverrider();
        /*0x221a820*/ void Start();
        /*0x221a9e8*/ bool TryUpdateLanguage();
        /*0x221a8c8*/ void GetLabel();
        /*0x221aae0*/ void AddListeners();
        /*0x221ac6c*/ void RemoveListener();
        /*0x221ae0c*/ void OnLocalizationChanged(string locale);
        /*0x221aaa8*/ void ApplyOverride();
        /*0x221b3c4*/ void OnTextChanged(UnityEngine.Object label);
        /*0x221b44c*/ void OnDestroy();
        /*0x221ae30*/ void ApplyFontSizeOverride();
        /*0x221aee8*/ void ApplySpacingOverride();
        /*0x221af8c*/ void ApplyMarginsOverride();
        /*0x221b0e0*/ void ApplyStyleOverride();
        /*0x221b220*/ void ApplyMarkupsOperations();
        /*0x221b03c*/ void ApplyMaterialOverride();
        /*0x221b694*/ bool IsCurrentStringIdInList(Yeti.LocalizeOperation localizeOp);
        /*0x221b7e8*/ System.Collections.IEnumerator DeleteMarkups(string markupBegin, string markupEnd, Yeti.LocalizeOperation localizeOp);
        /*0x221b8b4*/ void DeleteEveryMarkup(string markupBegin, string markupEnd);
        /*0x221b9d8*/ void DeleteInitialMarkup(string markupBegin, string markupEnd);
        /*0x221b450*/ void SetFontStyle(Yeti.LocalizedFontStyle.LetterOperation operation, TMPro.FontStyles style);
        /*0x221b4a0*/ void SetLetterType(Yeti.LocalizedFontStyle styleOverride);

        class <DeleteMarkups>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.LocalizeOperation localizeOp;
            /*0x38*/ Yeti.FontStyleOverrider <>4__this;
            /*0x40*/ string markupBegin;
            /*0x48*/ string markupEnd;

            /*0x221baf0*/ <DeleteMarkups>d__26(int <>1__state);
            /*0x221bb18*/ void System.IDisposable.Dispose();
            /*0x221bb1c*/ bool MoveNext();
            /*0x221bbb0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x221bbb8*/ void System.Collections.IEnumerator.Reset();
            /*0x221bbf0*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    interface ICompactNumberFormatManager
    {
        /*0x1f30ebc*/ void RegisterLabel(Yeti.ShortNumberLabelBinder label);
        /*0x1f30ebc*/ void UnregisterLabel(Yeti.ShortNumberLabelBinder label);
        string FormatShortNumber(float amount, int displayDigits, Yeti.CompactNumberRounding rounding, int precisionOverride);
        string FormatShortNumber(long amount, int displayDigits, Yeti.CompactNumberRounding rounding);
    }

    interface ICompactNumberFormatProvider
    {
        /*0x1f30ff0*/ void LoadData(string locale, System.Action callback);
        string FormatShortNumber(float amount, int displayDigits, System.Globalization.CultureInfo cultureInfo, Yeti.CompactNumberRounding rounding, int precisionOverride);
        string FormatShortNumber(long amount, int displayDigits, System.Globalization.CultureInfo cultureInfo, Yeti.CompactNumberRounding rounding);
    }

    interface ILocalizedStringsLoader
    {
        /*0x1f30d20*/ void LoadStringsFromAssetBundle(RedCrow.UI.UUIF.Localization.Language language, Yeti.YetiTranslationDataTypes.ClientCategory[] categories, System.Action<System.Collections.Generic.Dictionary<string, string>> callback);
    }

    class JsonLocalizedStringsLoader : Yeti.ILocalizedStringsLoader
    {
        static /*0x0*/ string OnAssetsLoadedSamplerName;
        /*0x10*/ Yeti.ILocFileLoader _fileLoader;
        /*0x18*/ Yeti.ILocFileParser _locFileParser;
        /*0x20*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x28*/ RedCrow.UI.UUIF.Localization.Language _language;
        /*0x30*/ Yeti.YetiTranslationDataTypes.ClientCategory[] _categories;
        /*0x38*/ System.Action<System.Collections.Generic.Dictionary<string, string>> _callback;

        static /*0x221c1ec*/ JsonLocalizedStringsLoader();
        /*0x221c1e4*/ JsonLocalizedStringsLoader();
        /*0x221bbf8*/ void LoadStringsFromAssetBundle(RedCrow.UI.UUIF.Localization.Language language, Yeti.YetiTranslationDataTypes.ClientCategory[] categories, System.Action<System.Collections.Generic.Dictionary<string, string>> callback);
        /*0x221bd28*/ void OnAssetsLoaded(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection resourceCollection, object asset);
    }

    class LanguageThrottleChangeHandler : CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.BundledTranslationInitializer _bundledTranslationInitializer;
        /*0x18*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x20*/ Yeti.EvaluateLocalizationManagerLanguageInitializable _evaluateLocalizationManagerLanguageInitializable;
        /*0x28*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x30*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x38*/ CapitalGames.InstanceInitializedCallback _initializedCallback;

        /*0x221c648*/ LanguageThrottleChangeHandler();
        /*0x221c254*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x221c41c*/ void OnThrottleStatusUpdated();
        /*0x221c594*/ void OnLocalizationSystemsReinitialized();
    }

    interface ILocalizationDebugConfiguration
    {
        bool TryGetDebugStringForAvailableLocalization(string stringId, string localizedText, ref string debugString);
        /*0x1f30300*/ string GetDebugStringForMissingLocalization(string stringId, RedCrow.UI.UUIF.Localization.Language language);
        /*0x1f30b78*/ void SetLanguage(RedCrow.UI.UUIF.Localization.Language language);
        /*0x1f309e4*/ void ToggleShowStringId();
        /*0x1f30b78*/ void PadStringWithCharacters(int padding);
        /*0x1f309e4*/ void ResetLanguage();
    }

    class LocalizationDebugConfiguration : Yeti.ILocalizationDebugConfiguration
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x18*/ Yeti.ILifecycleController _lifecycleController;
        /*0x20*/ bool _shouldShowStringId;
        /*0x24*/ int _paddingSize;
        /*0x28*/ string _padding;

        /*0x221cb9c*/ LocalizationDebugConfiguration();
        /*0x221c650*/ bool TryGetDebugStringForAvailableLocalization(string stringId, string localizedText, ref string debugString);
        /*0x221c6f4*/ string GetDebugStringForMissingLocalization(string stringId, RedCrow.UI.UUIF.Localization.Language language);
        /*0x221c784*/ void SetLanguage(RedCrow.UI.UUIF.Localization.Language language);
        /*0x221c8e4*/ void ToggleShowStringId();
        /*0x221c99c*/ void PadStringWithCharacters(int padding);
        /*0x221ca78*/ void ResetLanguage();
    }

    class NullLocalizationDebugConfiguration : Yeti.ILocalizationDebugConfiguration
    {
        /*0x221ce54*/ NullLocalizationDebugConfiguration();
        /*0x221cba4*/ bool TryGetDebugStringForAvailableLocalization(string stringId, string localizedText, ref string debugString);
        /*0x221cbc4*/ string GetDebugStringForMissingLocalization(string stringId, RedCrow.UI.UUIF.Localization.Language language);
        /*0x221cc94*/ void SetLanguage(RedCrow.UI.UUIF.Localization.Language language);
        /*0x221cd04*/ void ToggleShowStringId();
        /*0x221cd74*/ void PadStringWithCharacters(int padding);
        /*0x221cde4*/ void ResetLanguage();
    }

    class LocalizationDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.ILocalizationDebugConfiguration _localizationDebugConfiguration;
        /*0x18*/ Yeti.YetiLocalizationUtil _localizationUtil;

        static /*0x221d094*/ LocalizationDebugManager();
        /*0x221d08c*/ LocalizationDebugManager();
        /*0x221ce5c*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x221d088*/ void CapitalGames.ILifecycleAware.OnAppReset();
        /*0x221cf10*/ void RegisterLocDebugMenuEntries();
    }

    struct LocalizedFont
    {
        /*0x10*/ string _englishName;
        /*0x18*/ TMPro.TMP_FontAsset _font;

        /*0x221d114*/ string get_EnglishName();
        /*0x221d11c*/ TMPro.TMP_FontAsset get_Font();
    }

    struct LocalizedMaterial
    {
        /*0x10*/ string _englishName;
        /*0x18*/ UnityEngine.Material _material;

        /*0x221d124*/ string get_EnglishName();
        /*0x221d12c*/ UnityEngine.Material get_Material();
    }

    class LocalizedStringComparer : System.Collections.Generic.IComparer<string>
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x18*/ bool _ignoreCase;
        /*0x20*/ System.Globalization.CultureInfo _currentCultureInfo;
        /*0x28*/ System.StringComparer _stringComparer;

        /*0x221d134*/ LocalizedStringComparer(bool ignoreCase);
        /*0x221d15c*/ void Finalize();
        /*0x221d374*/ int Compare(string x, string y);
        /*0x221d778*/ void UpdateCurrentCultureInfo();
        /*0x221d4d8*/ bool GetLocalizationManager();
        /*0x221d888*/ void OnLocalizationChanged(string locale);
        /*0x221d88c*/ void OnLocalizationRefreshed(RedCrow.UI.UUIF.Localization.Language language);
    }

    class LocalizeFont : UnityEngine.MonoBehaviour
    {
        /*0x20*/ bool _retainEnglishFont;
        /*0x28*/ TMPro.TextMeshProUGUI <Label>k__BackingField;
        /*0x30*/ Yeti.IFontManager _fontManager;
        /*0x38*/ TMPro.TMP_FontAsset _originalFont;
        /*0x40*/ UnityEngine.Material _originalMaterial;

        /*0x221dbc4*/ LocalizeFont();
        /*0x221d890*/ TMPro.TextMeshProUGUI get_Label();
        /*0x221d898*/ void set_Label(TMPro.TextMeshProUGUI value);
        /*0x221d8a0*/ void Awake();
        /*0x221dab4*/ void RestoreOriginal();
        /*0x221db0c*/ void OnDestroy();
    }

    class LocalizeFontMetadata : UnityEngine.ScriptableObject
    {
        /*0x18*/ Yeti.LocalizedFont[] _fonts;
        /*0x20*/ Yeti.LocalizedMaterial[] _materials;

        /*0x221dd24*/ LocalizeFontMetadata();
        /*0x221dbcc*/ Yeti.LocalizedFont[] get_Fonts();
        /*0x221dbd4*/ void set_Fonts(Yeti.LocalizedFont[] value);
        /*0x221dc78*/ Yeti.LocalizedMaterial[] get_Materials();
        /*0x221dc80*/ void set_Materials(Yeti.LocalizedMaterial[] value);
    }

    interface ILocFileLoader
    {
        /*0x1f30d20*/ void LoadStringsFromAssetBundle(RedCrow.UI.UUIF.Localization.Language language, Yeti.YetiTranslationDataTypes.ClientCategory[] categories, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> callback);
    }

    class LocFileLoader : Yeti.ILocFileLoader
    {
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Yeti.YetiLocalizationUtil _localizationUtil;

        static /*0x221df3c*/ void OnBundleFailedToLoad(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceError resourceError, object asset);
        /*0x221e124*/ LocFileLoader();
        /*0x221dd2c*/ void LoadStringsFromAssetBundle(RedCrow.UI.UUIF.Localization.Language language, Yeti.YetiTranslationDataTypes.ClientCategory[] categories, System.Action<Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceCollection, object> callback);
    }

    interface ILocFileParser
    {
        /*0x1f30ff0*/ void ParseLocFile(UnityEngine.TextAsset locStringsFileText, System.Collections.Generic.Dictionary<string, string> stringCollection);
    }

    class LocFileParser : Yeti.ILocFileParser
    {
        /*0x221e1d0*/ LocFileParser();
        /*0x221e12c*/ void ParseLocFile(UnityEngine.TextAsset locStringsFileText, System.Collections.Generic.Dictionary<string, string> stringCollection);
    }

    class LocText : UnityEngine.MonoBehaviour
    {
        /*0x20*/ string _locId;
        /*0x28*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x30*/ PvzN3xt.UI.AgnosticLabelWidget _text;
        /*0x38*/ bool _isInitialized;

        /*0x221eaec*/ LocText();
        /*0x221e1d8*/ RedCrow.UI.UUIF.Localization.ILocalizationManager get_LocalizationManager();
        /*0x221e2f0*/ string get_LocID();
        /*0x221e2f8*/ void Override(string locId);
        /*0x221e33c*/ string ToString();
        /*0x221e354*/ void Awake();
        /*0x221e744*/ void OnDestroy();
        /*0x221e964*/ void OnEnable();
        /*0x221e538*/ void AddListeners();
        /*0x221e754*/ void RemoveListeners();
        /*0x221e968*/ string GetLabelIdTranslation();
        /*0x221e314*/ void SetText();
        /*0x221eae4*/ void OnLocalizationRefreshed(RedCrow.UI.UUIF.Localization.Language language);
        /*0x221eae8*/ void OnLocalizationChanged(string locale);
    }

    class OtaTranslationInitializer : CapitalGames.IInitializable
    {
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationManager;
        /*0x18*/ CapitalGames.InstanceInitializedCallback _initializedCallback;

        /*0x221eddc*/ OtaTranslationInitializer();
        /*0x221eaf4*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x221ec5c*/ void OnLocalizationChanged(string locale);
    }

    struct SourceFontMetadata
    {
        /*0x10*/ string _fontAssetAssetName;
        /*0x18*/ string _sourceFontName;

        /*0x221ede4*/ string get_FontAssetAssetName();
        /*0x221edec*/ void set_FontAssetAssetName(string value);
        /*0x221ee90*/ string get_SourceFontName();
        /*0x221ee98*/ void set_SourceFontName(string value);
        /*0x221ef3c*/ bool IsValid();
    }

    class StaticFontInitializer : CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.IFontManager _fontManager;
        /*0x18*/ Yeti.GameEventManager _gameEventManager;
        /*0x20*/ CapitalGames.InstanceInitializedCallback _callback;

        /*0x221f1d0*/ StaticFontInitializer();
        /*0x221efd0*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x221f0d4*/ void OnFontLoaded();
    }

    class YetiLocalizationUtil : CapitalGames.IPostConstructable, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        static /*0x0*/ EA.Text.StringBuilder StringBuilder;
        /*0x10*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x18*/ CapitalGames.ILocalPrefs _localPrefs;
        /*0x20*/ Yeti.YetiLocalizationUtil.FontAssetBridge _fontAssetBridge;
        /*0x28*/ Yeti.YetiLocalizationUtil.TranslationAssetBridge _translationAssetBridge;

        static /*0x221fe50*/ YetiLocalizationUtil();
        static /*0x221fa04*/ string GetStringIdForLanguageRepresentation(RedCrow.UI.UUIF.Localization.Language language);
        /*0x221fe48*/ YetiLocalizationUtil();
        /*0x221f1d8*/ void CapitalGames.IPostConstructable.PostConstruct();
        /*0x221f2f8*/ Yeti.YetiLocalizationUtil.FontAssetBridge get_Font();
        /*0x221f300*/ Yeti.YetiLocalizationUtil.TranslationAssetBridge get_Translation();
        /*0x221f308*/ RedCrow.UI.UUIF.Localization.Language[] get_AllSupportedLanguages();
        /*0x221f360*/ string GetLocaleFromAssetName(string name);
        /*0x221f3a0*/ System.Collections.Generic.IReadOnlyList<RedCrow.UI.UUIF.Localization.Language> GetEnabledGameLanguages();
        /*0x221f598*/ RedCrow.UI.UUIF.Localization.Language GetSupportedSystemLanguage();
        /*0x221f634*/ bool IsEnabledGameLanguage(RedCrow.UI.UUIF.Localization.Language language);
        /*0x221f8e4*/ void GetLocaleAndCountryForEaLogin(RedCrow.UI.UUIF.Localization.Language language, ref string registrationLanguage, ref string registrationCountryCode);
        /*0x221f76c*/ bool IsSupported(RedCrow.UI.UUIF.Localization.Language language);
        /*0x221f7f8*/ string GetNvsKeyForLanguage(RedCrow.UI.UUIF.Localization.Language language);
        /*0x221fb10*/ bool TryGetUserPreferredLanguage(ref RedCrow.UI.UUIF.Localization.Language language);
        /*0x221fc9c*/ void SetUserLanguagePreference(RedCrow.UI.UUIF.Localization.Language userPreferredLanguage);
        /*0x221fd84*/ void ClearUserLanguagePreference();
        /*0x221f4e0*/ bool IsEnabled(RedCrow.UI.UUIF.Localization.Language language);

        class FontAssetBridge
        {
            /*0x10*/ Yeti.YetiLocalizationUtil _localizationUtil;

            static /*0x221ff2c*/ string GetBundledLocale(RedCrow.UI.UUIF.Localization.Language language);
            static /*0x22202a0*/ RedCrow.UI.UUIF.Localization.Language GetBundledLanguage(RedCrow.UI.UUIF.Localization.Language language);
            /*0x221f298*/ FontAssetBridge(Yeti.YetiLocalizationUtil localizationUtil);
            /*0x221fed0*/ string FormatGameAssetName(string unformattedName, RedCrow.UI.UUIF.Localization.Language language);
            /*0x222009c*/ string RemoveFormat(string fontName);
            /*0x22200e8*/ string GetBundledLocalizeMetadataAssetNameForLanguage(RedCrow.UI.UUIF.Localization.Language language);
            /*0x2220154*/ System.Collections.Generic.HashSet<RedCrow.UI.UUIF.Localization.Language> GetUniqueEnabledBundledLanguages();
            /*0x2220378*/ Yeti.AssetSet get_FallbackAssetSet();
            /*0x2220380*/ string get_FallbackMetadataAssetName();
            /*0x22204b8*/ string GetOtaAssetName(string fontName);
            /*0x2220500*/ string FormatUgcAssetName(string unformattedName);
            /*0x2220568*/ string GetCachePathForFont(Yeti.FontAsset fontAsset, string destinationPath);
        }

        struct CategoryAssetNameData
        {
            /*0x10*/ string AssetPostFix;

            /*0x2220670*/ CategoryAssetNameData(string assetPostFix);
        }

        class ClientConstants
        {
            static string NvsFormat = "Language{0}";
            static string LanguageRepresentationStringIdFormat = "GENERIC_LOCALIZED_LANGUAGE_{0}";
            static string UserLanguagePreferenceKey = "UserLanguage";
            static string LocalizationCachePrefix = "loc";
            static string FontAssetNameFormat = "{0}.{1}.{2}";
            static string Ugc = "UGC";
            static string Game = "Game";
            static string FontAsset = "FontAsset";
            static string FallbackFontMetadata = "FallbackFontMetadata";
            static string LocalizeFontMetadataPostfix = "LocalizeFontMetadata";
            static string Global = "global";
            static Yeti.AssetSet FallbackFontAssetSet = 14;
            static string TranslationAssetNameFormat = "{0}.{1}.{2}";
            static string CultureInfoOverridePostfix = "CultureInfoOverride";
            static string CompactNumberFormats = "CompactNumberFormats";
            static Yeti.YetiTranslationDataTypes.ClientCategory LastBundledCategory = 0;
            static Yeti.YetiTranslationDataTypes.ClientCategory LastOtaCategory = 2;
            static string BundledBootTranslationPostfix = "BootTranslations";
            static string OtaGameTranslationPostfix = "GameTranslations";
            static string OtaMtxTranslationPostfix = "MTXTranslations";
            static /*0x0*/ RedCrow.UI.UUIF.Localization.Language[] SupportedLanguages;
            static /*0x8*/ System.Collections.Generic.Dictionary<Yeti.YetiTranslationDataTypes.ClientCategory, Yeti.YetiLocalizationUtil.CategoryAssetNameData> CategoryAssetMapping;
            static /*0x10*/ RedCrow.UI.UUIF.Localization.Language[] CultureOverrideNeededLanguages;

            static /*0x2220678*/ ClientConstants();
        }

        class AssetNameFormatUtil
        {
            static /*0x22200a4*/ string RemoveFormat(string name);
            static /*0x22208a4*/ string FormatTranslationAssetName(string locale, string assetName);
            static /*0x2220984*/ string FormatTranslationAssetName(RedCrow.UI.UUIF.Localization.Language language, string assetName);
            static /*0x221ff94*/ string FormatFontTypeAssetName(string locale, string fontType, string unformattedName);
            static /*0x22203d8*/ string FormatFontAssetName(string locale, string unformattedName);
        }

        class TranslationAssetBridge
        {
            /*0x10*/ Yeti.YetiLocalizationUtil _localizationUtil;

            /*0x221f2c8*/ TranslationAssetBridge(Yeti.YetiLocalizationUtil localizationUtil);
            /*0x221c174*/ string GetAssetNameForCategory(RedCrow.UI.UUIF.Localization.Language language, Yeti.YetiTranslationDataTypes.ClientCategory category);
            /*0x2220c34*/ Yeti.YetiTranslationDataTypes.ClientCategory[] GetBundledCategories();
            /*0x2220cf0*/ Yeti.YetiTranslationDataTypes.ClientCategory[] GetOtaCategories();
            /*0x2220a98*/ string GetAssetNameForCategory(string locale, Yeti.YetiTranslationDataTypes.ClientCategory category);
            /*0x2220dbc*/ Yeti.AssetSet GetAssetSetForLanguage(RedCrow.UI.UUIF.Localization.Language language);
            /*0x2220eec*/ System.Collections.Generic.List<Yeti.AssetSet> GetAllRequiredAssetSets(RedCrow.UI.UUIF.Localization.Language language);
            /*0x2220fb8*/ bool IsCultureOverrideNeeded(RedCrow.UI.UUIF.Localization.Language language);
            /*0x2221044*/ string GetCultureInfoOverrideAssetNameForLanguage(RedCrow.UI.UUIF.Localization.Language language);
            /*0x222108c*/ string GetCompactNumberFormatAssetNameForLocale(string locale);
        }
    }

    class YetiLocalizationManager : RedCrow.UI.UUIF.Localization.LocalizationManager, CapitalGames.IPostConstructable, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        static int StringDbSize = 5000;
        /*0x50*/ Yeti.ILocalizationDebugConfiguration _localizationDebugConfiguration;
        /*0x58*/ Yeti.BuiltinLocalizationStringsCache _builtinLocalizationStringsCache;
        /*0x60*/ Yeti.ILocalizedStringsLoader _localizedStringsLoader;
        /*0x68*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x70*/ Yeti.YetiLocalizationUtil _localizationUtil;
        /*0x78*/ System.Collections.Generic.Dictionary<string, string> _locStrings;
        /*0x80*/ string _debugString;

        /*0x2221c04*/ YetiLocalizationManager();
        /*0x22210d4*/ bool IsReady(bool requiresStaticFont);
        /*0x2221180*/ void CapitalGames.IPostConstructable.PostConstruct();
        /*0x2221190*/ System.Globalization.CultureInfo get_DefaultCulture();
        /*0x22211e0*/ void EvaluateCurrentLanguage();
        /*0x2221244*/ void LoadBuiltinStrings();
        /*0x2221598*/ void LoadBundledStrings();
        /*0x22216b0*/ void LoadOTAStrings();
        /*0x22217c8*/ void ForceRefresh();
        /*0x22217d0*/ void SetUserLanguagePreference(RedCrow.UI.UUIF.Localization.Language userPreferredLanguage);
        /*0x22217e4*/ void ClearUserLanguagePreference();
        /*0x22217f8*/ RedCrow.UI.UUIF.Localization.Language CheckUserOrDeviceLanguage();
        /*0x222196c*/ bool HasTranslation(string stringId);
        /*0x22219c4*/ string GetLocalizedString(string stringId, object[] parameters);
        /*0x2221b7c*/ bool IsLocalizationAvailableForStringId(string stringId, ref string locStringValue);
        /*0x2221274*/ void AddOrUpdateStrings(System.Collections.Generic.Dictionary<string, string> dictionaryToAdd);
    }

    class YetiTranslationDataTypes
    {
        enum ClientCategory
        {
            Boot = 0,
            Main = 1,
            Mtx = 2,
        }
    }

    class LogFilter
    {
        /*0x10*/ PopCap.Logging.LogLevel _basisLogLevel;
        /*0x18*/ string _basisLogCategory;
        /*0x20*/ string _basisLogScope;
        /*0x28*/ string _basisLogPattern;
        /*0x30*/ System.Text.RegularExpressions.Regex _regex;
        /*0x38*/ bool _hasLogLevel;
        /*0x39*/ bool _hasLogCategory;
        /*0x3a*/ bool _hasLogScope;
        /*0x3b*/ bool _hasLogPattern;
        /*0x3c*/ bool <Exclude>k__BackingField;

        /*0x2221ee0*/ LogFilter();
        /*0x2221d18*/ bool get_Exclude();
        /*0x2221d20*/ void set_Exclude(bool value);
        /*0x2221d28*/ PopCap.Logging.LogLevel get_Level();
        /*0x2221d30*/ void set_Level(PopCap.Logging.LogLevel value);
        /*0x2221d40*/ string get_Category();
        /*0x2221d48*/ void set_Category(string value);
        /*0x2221d6c*/ string get_Scope();
        /*0x2221d74*/ void set_Scope(string value);
        /*0x2221d98*/ string get_Pattern();
        /*0x2221da0*/ void set_Pattern(string value);
        /*0x2221e34*/ bool IsFiltered(PopCap.Logging.LogLevel logLevel, string logCategory, string logScope, string logMessage);
    }

    class LoggingPrefs
    {
        static string PersistenceLogLevelKey = "LogLevel";
        static PopCap.Logging.LogLevel DefaultLogLevel = 3;
        static /*0x0*/ string[] LogLevelDataProvider;
        static /*0x8*/ System.Collections.Generic.IDictionary<UnityEngine.LogType, UnityEngine.StackTraceLogType> DefaultStackTraceLogTypes;

        static /*0x2223464*/ LoggingPrefs();
        static /*0x2221ef0*/ void Initialize();
        static /*0x2222f98*/ void LogYetiLogs();
        static /*0x2223008*/ void SaveNewLogLevel(PopCap.Logging.LogLevel logLevel);
        static /*0x22230fc*/ void SaveNewLogLevel(string level);
        static /*0x2223188*/ void SaveNewLogLevel(Yeti.LogCategory category, System.Nullable<PopCap.Logging.LogLevel> logLevel);
        static /*0x22223fc*/ void SetLogLevel(PopCap.Logging.LogLevel logLevel);
        static /*0x22225b4*/ void SetLogLevel(Yeti.LogCategory category, System.Nullable<PopCap.Logging.LogLevel> logLevel);
        static /*0x22226b0*/ void UpdateUnityLogFilter();
        static /*0x2222b88*/ void ConfigureDefaultStackTraceLogTypes();
        static /*0x2222308*/ PopCap.Logging.LogLevel ReadPersistedLogLevel();
        static /*0x2223068*/ void WritePersistedLogLevel(PopCap.Logging.LogLevel logLevel);
        static /*0x22224e4*/ System.Nullable<PopCap.Logging.LogLevel> ReadPersistedLogLevel(Yeti.LogCategory category);
        static /*0x22232b8*/ void WritePersistedLogLevel(Yeti.LogCategory category, PopCap.Logging.LogLevel logLevel);
        static /*0x2223368*/ void UnsetPersistedLogLevel(Yeti.LogCategory category);
        static /*0x22233c4*/ string GetPersistenceLogLevelKey(Yeti.LogCategory category);
    }

    class NimbleLogAppender : PopCap.Logging.ILogOutputHandler, NimbleBridge_LogSource
    {
        static int NimbleInfoLogLevel = 300;
        /*0x10*/ string _logSourceTitle;
        /*0x18*/ NimbleBridge_Log _nimbleBridgeLog;

        /*0x22235c4*/ NimbleLogAppender();
        /*0x222360c*/ NimbleLogAppender(string logSource);
        /*0x2223658*/ void OnLogMessage(PopCap.Logging.LogLevel logLevel, object logCategory, string formattedMessage, object context);
        /*0x22236f4*/ string GetLogSourceTitle();
    }

    class PipeToYetiLogOutputHandler : PopCap.Logging.ILogOutputHandler
    {
        /*0x10*/ PopCap.Logging.ILogger _logger;

        /*0x22237d0*/ PipeToYetiLogOutputHandler();
        /*0x22236fc*/ void OnLogMessage(PopCap.Logging.LogLevel logLevel, object logCategory, string formattedMessage, object context);
    }

    class TimeSinceStartupFormatter : PopCap.Logging.ILogFormatter
    {
        /*0x10*/ int <Priority>k__BackingField;
        /*0x18*/ System.DateTime _startTime;

        /*0x2223860*/ TimeSinceStartupFormatter(int priority, System.DateTime startTime);
        /*0x2223858*/ int get_Priority();
        /*0x2223890*/ void Format(string logLevel, string logCategory, System.Text.StringBuilder message, object context);
        /*0x22239ac*/ void AppendDoubleF2ToStringBuilder(System.Text.StringBuilder sb, double value);
    }

    interface IUnityLogObserver
    {
        /*0x1f30ebc*/ void add_OnLogReceived(UnityEngine.Application.LogCallback value);
        /*0x1f30ebc*/ void remove_OnLogReceived(UnityEngine.Application.LogCallback value);
    }

    class UnityLogObserver : Yeti.IUnityLogObserver
    {
        /*0x2223b88*/ UnityLogObserver();
        /*0x2223ad8*/ void add_OnLogReceived(UnityEngine.Application.LogCallback value);
        /*0x2223b30*/ void remove_OnLogReceived(UnityEngine.Application.LogCallback value);
    }

    class ActionSequenceRunner
    {
        /*0x10*/ System.Collections.Generic.List<Yeti.IActionSequence> _activeSequences;

        /*0x2223d14*/ ActionSequenceRunner();
        /*0x2223b90*/ void RunSequence(Yeti.IActionSequence actionSequence, System.Action onComplete);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ Yeti.ActionSequenceRunner <>4__this;
            /*0x18*/ Yeti.IActionSequence actionSequence;
            /*0x20*/ System.Action onComplete;

            /*0x2223d0c*/ <>c__DisplayClass1_0();
            /*0x2223d9c*/ void <RunSequence>b__0();
        }
    }

    class ChainedActionSequence : Yeti.IActionSequence
    {
        /*0x10*/ System.Collections.Generic.Queue<Yeti.IActionSequence> _actionSequenceQueue;

        /*0x2224028*/ ChainedActionSequence();
        /*0x2223e1c*/ void AddStep(Yeti.IActionSequence subsequence);
        /*0x2223e74*/ void Start(System.Action onCompleteCallback);
        /*0x2223e78*/ void StartNext(System.Action onCompleteCallback);

        class <>c__DisplayClass3_0
        {
            /*0x10*/ Yeti.ChainedActionSequence <>4__this;
            /*0x18*/ System.Action onCompleteCallback;

            /*0x2224020*/ <>c__DisplayClass3_0();
            /*0x22240b0*/ void <StartNext>b__0();
        }
    }

    interface IActionSequence
    {
        /*0x1f30ebc*/ void Start(System.Action onCompleteCallback);
    }

    class SimpleActionSequence : Yeti.IActionSequence
    {
        /*0x10*/ Yeti.SimpleActionSequence.SimpleActionSequenceDelegate _startAction;

        /*0x22240cc*/ SimpleActionSequence(Yeti.SimpleActionSequence.SimpleActionSequenceDelegate startAction);
        /*0x22240fc*/ void Start(System.Action onCompleteCallback);

        class SimpleActionSequenceDelegate : System.MulticastDelegate
        {
            /*0x22241d8*/ SimpleActionSequenceDelegate(object object, nint method);
            /*0x2224288*/ void Invoke(System.Action onCompleteCallback);
            /*0x222429c*/ System.IAsyncResult BeginInvoke(System.Action onCompleteCallback, System.AsyncCallback callback, object object);
            /*0x22242bc*/ void EndInvoke(System.IAsyncResult result);
        }

        class <>c__DisplayClass3_0
        {
            /*0x10*/ System.Action onCompleteCallback;

            /*0x22241d0*/ <>c__DisplayClass3_0();
            /*0x22242c8*/ void <Start>b__0();
        }
    }

    class BadgeInfoUtil
    {
        /*0x10*/ Yeti.IUIDatabaseProvider _uiDatabaseProvider;

        /*0x222477c*/ BadgeInfoUtil();
        /*0x22242e4*/ Yeti.BadgeInfo CreateBadgeInfoWithCount(Yeti.BadgeKey key, int count);
        /*0x2224424*/ Yeti.BadgeInfo CreateBadgeInfoWithoutCount(Yeti.BadgeKey key, bool isEnabled);
        /*0x2224430*/ Yeti.BadgeInfo CreateDefaultHiddenBadge(Yeti.BadgeSource source);
        /*0x2224448*/ void UpdateBadgeCount(Yeti.IBadgeInfo badgeInfo, int delta);
        /*0x22242f0*/ Yeti.BadgeInfo CreateBadge(Yeti.BadgeKey key, int displayBadgeCount, bool isEnabled);
        /*0x222450c*/ void UpdateCount(Yeti.IBadgeInfo badgeInfo, int displayBadgeCount);
    }

    interface IDataPropagator<T> : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30ebc*/ void add_DataUpdated(System.EventHandler<System.Collections.Generic.IReadOnlyList<T>> value);
        /*0x1f30ebc*/ void remove_DataUpdated(System.EventHandler<System.Collections.Generic.IReadOnlyList<T>> value);
    }

    class BaseDataPropagator<T> : Yeti.IDataPropagator<T>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x0*/ System.Collections.Generic.List<T> _updatedItems;
        /*0x0*/ bool <Dirty>k__BackingField;
        /*0x0*/ System.EventHandler<System.Collections.Generic.IReadOnlyList<T>> DataUpdated;

        /*0x1f309e4*/ BaseDataPropagator();
        /*0x1f2fe14*/ bool get_Dirty();
        /*0x1f30a84*/ void set_Dirty(bool value);
        /*0x1f30ebc*/ void add_DataUpdated(System.EventHandler<System.Collections.Generic.IReadOnlyList<T>> value);
        /*0x1f30ebc*/ void remove_DataUpdated(System.EventHandler<System.Collections.Generic.IReadOnlyList<T>> value);
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
        /*0x1f309e4*/ void OnInitialize();
        /*0x1f30ebc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x1f309e4*/ void OnAppReset();
        /*0x1ffc854*/ void AddUpdatedItem(T item);
        /*0x1f30ebc*/ void AddUpdatedItemRange(System.Collections.Generic.IEnumerable<T> item);
        /*0x1f309e4*/ void MarkDirty();
        /*0x1f309e4*/ void ClearDirtyFlag();
        /*0x1f309e4*/ void PropagateUpdateData();
    }

    interface IAddable<K, V>
    {
        /*0x1ffc854*/ void Add(K key, V value);
    }

    interface IRemovable<K>
    {
        /*0x1ffc854*/ void Remove(K key);
    }

    interface IClearable
    {
        /*0x1f309e4*/ void Clear();
    }

    interface IDictionaryDataPropagator<K, V> : Yeti.IDataPropagator<K>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyDictionary<K, V> get_DataDictionary();
    }

    class BaseDictionaryDataPropagator<K, V> : Yeti.BaseDataPropagator<K>, Yeti.IDictionaryDataPropagator<K, V>, Yeti.IDataPropagator<K>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IRemovable<K>, Yeti.IClearable
    {
        /*0x0*/ System.Collections.Generic.Dictionary<K, V> _data;

        /*0x1f309e4*/ BaseDictionaryDataPropagator();
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyDictionary<K, V> get_DataDictionary();
        /*0x1f30ebc*/ void Override(System.Collections.Generic.IReadOnlyDictionary<K, V> overrideData);
        /*0x1f30ebc*/ void Update(System.Collections.Generic.IReadOnlyDictionary<K, V> data);
        /*0x1f30ebc*/ void ApplyDelta(System.Collections.Generic.IReadOnlyDictionary<K, V> data);
        /*0x1ffc854*/ void Add(K key, V value);
        /*0x1f30ebc*/ void UpdateData(System.Collections.Generic.IReadOnlyDictionary<K, V> updatedData);
        /*0x1ffc854*/ void UpdateItem(K key, V value);
        /*0x1ffc854*/ void Remove(K key);
        /*0x1f309e4*/ void Clear();
    }

    struct BoardAssetInfo
    {
        /*0x10*/ string BlockVisualAlias;
        /*0x18*/ string PrefabId;

        /*0x2224784*/ BoardAssetInfo(string blockVisualAlias, string prefabId);
    }

    class BoardAssetIds
    {
        static string BoardPrefabPrefix = "prefab.lvl_gameboard_";
        static int NumZombossTowerBoardVariations = 3;
        static /*0x0*/ Yeti.BoardAssetInfo DefaultBoardAssetInfo;
        static /*0x10*/ Yeti.BoardAssetInfo DefaultZombossTowerBoardAssetInfo;
        static /*0x20*/ Yeti.BoardAssetInfo FogBoardAssetInfo;
        static /*0x30*/ Yeti.BoardAssetInfo PuppetEditorBoardAssetInfo;
        static /*0x40*/ Yeti.BoardAssetInfo UnitTestingBoardAssetInfo;

        static /*0x2224ad4*/ BoardAssetIds();
        static /*0x22247b4*/ Yeti.BoardAssetInfo GetBoardAssetInfo(string blockVisualAlias, Yeti.IAssetManager assetManager);
        static /*0x2224938*/ Yeti.BoardAssetInfo GetBoardPrefabIdForZombossTower(string blockVisualAlias, int boardNumber, Yeti.IAssetManager assetManager);
        static /*0x22248ec*/ string GetBoardPrefabIdFromBlockAlias(string blockVisualAlias);
    }

    class BuildingDataConfig
    {
        /*0x10*/ string TileId;

        /*0x2224d40*/ BuildingDataConfig();
    }

    class BaseGameController<T> : Yeti.BaseDataPropagator<T>
    {
        /*0x0*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;

        /*0x1f309e4*/ BaseGameController();
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
    }

    interface INonPropagatingGameController : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
    }

    class NonPropagatingGameController : Yeti.INonPropagatingGameController, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x2224e0c*/ NonPropagatingGameController();
        /*0x2224d48*/ void OnInitialize();
        /*0x2224d4c*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x2224e08*/ void OnAppReset();
    }

    interface ICheckpointController : Yeti.INonPropagatingGameController, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
    }

    class CheckpointController : Yeti.NonPropagatingGameController, Yeti.ICheckpointController, Yeti.INonPropagatingGameController, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x10*/ Yeti.GameEventManager _gameEventManager;
        /*0x18*/ Yeti.ICheckpointStateDataSource _checkpointStateDataSource;
        /*0x20*/ Yeti.ICheckpointInfo _lastMainCheckpoint;

        /*0x2225164*/ CheckpointController();
        /*0x2224e14*/ void OnInitialize();
        /*0x2224f88*/ void HandleCheckpointUpdated(object sender, Yeti.Data.CheckpointsGameState e);
    }

    class PreBattleBoostController
    {
        /*0x10*/ System.Collections.Generic.HashSet<int> _selectedBoostIds;
        /*0x18*/ System.Collections.Generic.HashSet<int> _infiniteUseBoostIds;

        /*0x22254ec*/ PreBattleBoostController();
        /*0x222516c*/ System.Collections.Generic.IEnumerable<int> get_SelectedPreBattleBoostIds();
        /*0x2225174*/ void SelectBoost(int boostId);
        /*0x222520c*/ void DeselectBoost(int boostId);
        /*0x2225274*/ void MarkBoostAsInfiniteUse(int boostId);
        /*0x2225308*/ void UnMarkBoostAsInfiniteUse(int boostId);
        /*0x2225370*/ bool IsSelected(int boostId);
        /*0x22253dc*/ void ClearSelections();
        /*0x222543c*/ System.Collections.Generic.IEnumerable<int> GetAndClearSelectedPreBattleBoosts();
    }

    class TextureRequest
    {
        /*0x10*/ string TexturePath;
        /*0x18*/ string TextureHash;
        /*0x20*/ string TextureIdentifier;
        /*0x28*/ int TextureWidth;
        /*0x2c*/ int TextureHeight;
        /*0x30*/ System.Action<Yeti.TextureImage, bool> OnCompleteCallback;

        /*0x2225598*/ TextureRequest(string texturePath, string textureHash, string textureIdentifier, int textureWidth, int textureHeight, System.Action<Yeti.TextureImage, bool> onCompleteCallback);
    }

    interface ITextureCacheController
    {
        /*0x1f30ebc*/ void LoadTexture(Yeti.TextureRequest textureRequest);
        /*0x1f30ebc*/ void ReleaseTexture(Yeti.TextureImage textureImage);
    }

    class TextureCacheController : Yeti.ITextureCacheController, CapitalGames.ILifecycleAware
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, Yeti.TextureImage> _texturesMap;

        /*0x2225e04*/ TextureCacheController();
        /*0x2225620*/ void LoadTexture(Yeti.TextureRequest request);
        /*0x2225824*/ void InvokeCachedTextureCompleteCallback(Yeti.TextureRequest request, Yeti.TextureImage texture);
        /*0x22257cc*/ bool IsTextureCached(string textureHash);
        /*0x2225868*/ void IncrementRefCount(string textureHash);
        /*0x2225a28*/ void DecrementRefCount(string textureHash);
        /*0x2225abc*/ void ReleaseTexture(Yeti.TextureImage textureImage);
        /*0x2225b90*/ void OnAppReset();
    }

    class TextureIOOperationsHelper
    {
        static /*0x2225e8c*/ void SaveTextureToDisk(string folderName, string fileName, byte[] fileData);
        static /*0x2225f7c*/ string GetCombinedPath(string basePath, string extension);
        static /*0x22258f0*/ UnityEngine.Texture2D GetSavedTextureFromDisk(string filePath, int width, int height);
        static /*0x2225fe4*/ void DeleteSavedTextureFromDisk(string filePath);
        /*0x222608c*/ TextureIOOperationsHelper();
    }

    interface IUnitIntroCallback
    {
        /*0x1f30ebc*/ void OnUnitIntroComplete(System.Collections.Generic.List<int> viewedUnitIds);
    }

    class UnitIntroConfig
    {
        /*0x10*/ System.Collections.Generic.List<int> UnitIds;

        /*0x2226094*/ UnitIntroConfig(System.Collections.Generic.List<int> unitIds);
    }

    class UnitIntroController : CapitalGames.IInitializable
    {
        static string InputBlockerId = "UnitIntroController";
        /*0x10*/ Yeti.IGlobalDataTransfer _dataTransfer;
        /*0x18*/ Yeti.INavigationService _navigationService;
        /*0x20*/ Yeti.GameSoundManager _gameSoundManager;
        /*0x28*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x30*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x38*/ Yeti.IZombieDataManager _zombieDataManager;
        /*0x40*/ Yeti.IUnitIntroCallback _callback;
        /*0x48*/ Yeti.UnitIntroConfig _currentConfig;

        /*0x2226a6c*/ UnitIntroController();
        /*0x2226150*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x22261fc*/ void TriggerIntroForUnits(System.Collections.Generic.List<int> unitIdsToIntro, Yeti.IUnitIntroCallback callback);
        /*0x222668c*/ void OnUnitIntroOpened(string obj);
        /*0x2226554*/ bool ShouldShowUnitIntro(System.Collections.Generic.List<int> unitIdsToIntro);
        /*0x22267a8*/ void CompleteUnitIntro();
        /*0x2226948*/ void MarkUnitsAsIntroduced(System.Collections.Generic.List<int> unitIdsShown);
    }

    struct WebImageRequest
    {
        /*0x10*/ string Url;
        /*0x18*/ string UrlHash;
        /*0x20*/ Yeti.WebImageHandleType HandleType;
        /*0x28*/ System.Action<Yeti.WebImage, bool> OnCompleteCallback;

        /*0x2226a74*/ WebImageRequest(string url, Yeti.WebImageHandleType handleType, System.Action<Yeti.WebImage, bool> onCompleteCallback);
    }

    interface IWebImageCacheController
    {
        /*0x1ffc854*/ void LoadImage(Yeti.WebImageRequest imageRequest);
        /*0x1f30ee8*/ void ReleaseImage(Yeti.WebImage webImage, Yeti.WebImageHandleType requestHandleType);
    }

    class WebImageCacheController : Yeti.IWebImageCacheController, CapitalGames.ILifecycleAware
    {
        /*0x10*/ Yeti.IMainThreadActionRouter _mainThreadActionRouter;
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x20*/ System.Collections.Generic.Dictionary<string, Yeti.WebImage> _webImagesMap;
        /*0x28*/ System.Collections.Generic.HashSet<string> _inFlightRequests;
        /*0x30*/ System.Collections.Generic.List<Yeti.WebImageRequest> _pendingWebImageRequests;

        /*0x2227a54*/ WebImageCacheController();
        /*0x2226b1c*/ void LoadImage(Yeti.WebImageRequest imageRequest);
        /*0x2227004*/ void ReleaseImage(Yeti.WebImage webImage, Yeti.WebImageHandleType requestHandleType);
        /*0x22272bc*/ void ImageLoaded(Yeti.WebImageRequest imageRequest, Yeti.WebImage webImage, Yeti.WebImageDownloadError errorCode);
        /*0x2227510*/ void AcquireHandle(Yeti.WebImageRequest request);
        /*0x22275a4*/ void IncrementRefCount(string urlHash);
        /*0x22270b0*/ void DecrementRefCount(string urlHash);
        /*0x2227144*/ void CheckRefCountAndDispose(string urlHash);
        /*0x2227730*/ void DestroyWebImageOnMainThread(string urlHash);
        /*0x2226e38*/ void InvokeCachedImageLoadedCallback(Yeti.WebImageRequest imageRequest, Yeti.WebImage image, bool success);
        /*0x222739c*/ void InvokeImageDownloadedCallback(Yeti.WebImageRequest imageRequest, Yeti.WebImage image, bool success);
        /*0x2226de0*/ bool IsImageCached(string urlHash);
        /*0x2227634*/ bool IsImageNotInUse(string urlHash);
        /*0x22276b4*/ bool CanDisposeImage(string urlHash);
        /*0x2226fac*/ bool IsDownloadRequestPending(string urlHash);
        /*0x22277e0*/ void OnAppReset();

        class <>c__DisplayClass11_0
        {
            /*0x10*/ Yeti.WebImageCacheController <>4__this;
            /*0x18*/ string urlHash;

            /*0x222762c*/ <>c__DisplayClass11_0();
            /*0x2227b84*/ void <CheckRefCountAndDispose>b__0();
        }

        class <>c__DisplayClass13_0
        {
            /*0x10*/ Yeti.WebImageCacheController <>4__this;
            /*0x18*/ Yeti.WebImageRequest imageRequest;
            /*0x38*/ Yeti.WebImage image;
            /*0x40*/ bool success;

            /*0x22277d0*/ <>c__DisplayClass13_0();
            /*0x2227ba0*/ void <InvokeCachedImageLoadedCallback>b__0();
        }

        class <>c__DisplayClass14_0
        {
            /*0x10*/ Yeti.WebImageCacheController <>4__this;
            /*0x18*/ Yeti.WebImageRequest imageRequest;
            /*0x38*/ bool success;
            /*0x40*/ Yeti.WebImage image;

            /*0x22277d8*/ <>c__DisplayClass14_0();
            /*0x2227c00*/ void <InvokeImageDownloadedCallback>b__0();
        }

        class <>c__DisplayClass5_0
        {
            /*0x10*/ Yeti.WebImageCacheController <>4__this;
            /*0x18*/ Yeti.WebImageRequest imageRequest;

            /*0x2226dd8*/ <>c__DisplayClass5_0();
            /*0x2227da8*/ void <LoadImage>b__0(Yeti.WebImage webImage, Yeti.WebImageDownloadError errorCode);
        }
    }

    class ZombieDetailsInteractionController
    {
        static string ShowZombieDetailsActionKey = "OnViewZombieDetails";
        /*0x10*/ Yeti.IGlobalDataTransfer _dataTransfer;
        /*0x18*/ Yeti.INavigationService _navigationService;

        /*0x22280b8*/ ZombieDetailsInteractionController();
        /*0x2227de8*/ void ShowZombieDetails(RedCrow.UI.UUIF.DataProviding.UIDataKey uiDataKey, RedCrow.UI.UUIF.DataProviding.Models.IUIModel uiModel, object[] args);
    }

    class ZoogleMapEnviornmentController
    {
        static string ZoogleMapPrefabName = "prefab.UI_NewTown";
        /*0x10*/ Yeti.IAssetManager _assetManager;
        /*0x18*/ Yeti.CameraManager _cameraManager;
        /*0x20*/ Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle _resourceHandle;
        /*0x28*/ UnityEngine.Camera _camera;
        /*0x30*/ Yeti.DataBoundSceneRoot _dataBoundSceneRoot;
        /*0x38*/ System.Action _callback;

        /*0x22280c0*/ ZoogleMapEnviornmentController(Yeti.IAssetManager assetManager, Yeti.CameraManager cameraManager);
        /*0x2228104*/ void ShowTownMap(System.Action callback);
        /*0x2228490*/ void SetupZoogleMap(Packages.EA.PopCap.AddressablesAssets.Runtime.IResourceHandle handle, object context);
        /*0x2228288*/ void InitialZoogleMap();
        /*0x22284e8*/ void HideTownMap(System.Action callback);
    }

    class CustomerSupportManager
    {
        static string TPGID = "plants-vs-zombies-3";
        static string TOKEN_SECRET_RELEASE = "spsHE46BlszU3Yy7ebmHDqh5ijryDNGu";
        static string TOKEN_SECRET_INT = "wf7XLvU2yLJHc20eSom7eNEcgF7gWoiE";
        static string FRANCHISE_URL = "plants-vs-zombies";
        static string PRODUCT_URL = "plants-vs-zombies-3";
        /*0x10*/ PvzN3xt.PlayerIdentity.IAgeCompliance _ageCompliance;
        /*0x18*/ PvzN3xt.PlayerIdentity.IIdentityProvider _identityProvider;
        /*0x20*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _locManager;
        /*0x28*/ PvzN3xt.Nvs.INamedValueService _namedValueService;

        static /*0x222866c*/ byte[] GetSalt();
        static /*0x22286f0*/ string GetTokenSecret();
        static /*0x22286e8*/ bool IsLiveBuild();
        static /*0x222949c*/ string GetPlatformString();
        static /*0x2229504*/ bool IsTablet();
        static /*0x2228d60*/ string Encrypt(string json, string tokenSecret);
        /*0x2229708*/ CustomerSupportManager();
        /*0x222873c*/ void OpenPlayByTheRules();
        /*0x222887c*/ void OpenExternalHelpURL(Yeti.CustomerSupportManager.WWCEURL urlType);
        /*0x2229280*/ string GetBannedOrSuspendedUrl(string tptk);
        /*0x2228ecc*/ string GetToSReportingUrl();
        /*0x2229004*/ string GetIdFlowUrl(string locale, string tptk);

        enum WWCEURL
        {
            IDFlow = 0,
            ToSReporting = 1,
            BannedOrSuspended = 2,
        }

        class PKCSKeyGenerator
        {
            /*0x10*/ System.Security.Cryptography.DESCryptoServiceProvider _des;
            /*0x18*/ byte[] _iv;
            /*0x20*/ byte[] <Key>k__BackingField;

            /*0x2229710*/ PKCSKeyGenerator();
            /*0x22295e8*/ PKCSKeyGenerator(string keystring, byte[] salt, int iterationsMd5, int segments);
            /*0x22299fc*/ byte[] get_Key();
            /*0x22296e0*/ System.Security.Cryptography.ICryptoTransform get_Encryptor();
            /*0x22297d0*/ System.Security.Cryptography.ICryptoTransform Generate(string keyString, byte[] salt, int iterationsMd5, int segments);
        }
    }

    enum BadgeSource
    {
        Store = 1,
        TeamManager = 3,
        CanRequestSeed = 7,
        SeedRequestCount = 8,
        Club = 9,
    }

    enum BadgeCondition
    {
        Invalid = -1,
        StoreFreeOffers = 1,
        TeamManagerNewPlants = 3,
        StoreOffersUpdated = 4,
        SeedRequestsUpdated = 8,
        ClubChatUnreadMessages = 9,
        StoreLimitedTime = 10,
    }

    enum BadgePriority
    {
        Low = 0,
        Medium = 1,
        High = 2,
    }

    interface IBadgeDataManager : Yeti.IDataPropagator<Yeti.IBadgeInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<Yeti.IBadgeInfo> get_BadgeInfos();
        /*0x1f2fe80*/ bool TryGetBadgeBySource(Yeti.BadgeSource source, ref Yeti.IBadgeInfo badgeInfo);
        /*0x1ffc854*/ bool TryGetBadgeByCondition(Yeti.BadgeKey key, ref Yeti.IBadgeInfo badgeInfo);
        /*0x1ffc854*/ bool TryIncrementBadgeForCondition(Yeti.BadgeKey key, ref int badgeCount, ref bool isVisible, int delta);
        /*0x1ffc854*/ bool TryDecrementBadgeForCondition(Yeti.BadgeKey key, ref int badgeCount, ref bool isVisible, int delta);
    }

    class BadgeDataManager : Yeti.BaseGameDataManager<Yeti.IBadgeInfo>, Yeti.IBadgeDataManager, Yeti.IDataPropagator<Yeti.IBadgeInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x30*/ Yeti.GameEventManager _gameEventManager;
        /*0x38*/ Yeti.BadgeInfoUtil _badgeInfoUtil;
        /*0x40*/ System.Collections.Generic.List<Yeti.IBadgeInfo> _badgeInfos;

        /*0x222aa50*/ BadgeDataManager();
        /*0x2229a04*/ System.Collections.Generic.IReadOnlyList<Yeti.IBadgeInfo> get_BadgeInfos();
        /*0x2229a0c*/ void OnInitialize();
        /*0x2229dc0*/ void OnAppReset();
        /*0x2229bd4*/ void CreateDefaultBadges();
        /*0x2229e20*/ void UpdateBadgeAtSource(Yeti.IBadgeInfo badgeInfo);
        /*0x2229fe8*/ void ClearBadgeAtSource(Yeti.BadgeSource source);
        /*0x222a108*/ void MergeBadgeAtHighestPriority(Yeti.IBadgeInfo badgeInfo);
        /*0x2229fb8*/ bool TryGetBadgeBySource(Yeti.BadgeSource source, ref Yeti.IBadgeInfo badgeInfo);
        /*0x222a6a4*/ bool TryGetBadgeByCondition(Yeti.BadgeKey key, ref Yeti.IBadgeInfo badgeInfo);
        /*0x222a7b8*/ bool TryIncrementBadgeForCondition(Yeti.BadgeKey key, ref int badgeCount, ref bool isVisible, int delta);
        /*0x222aa38*/ bool TryDecrementBadgeForCondition(Yeti.BadgeKey key, ref int badgeCount, ref bool isVisible, int delta);
        /*0x222a6d4*/ Yeti.IBadgeInfo FindBadgeInfoByKey(Yeti.BadgeKey key);
        /*0x222a5c0*/ Yeti.IBadgeInfo FindBadgeInfoBySource(Yeti.BadgeSource source);

        class <>c__DisplayClass15_0
        {
            /*0x10*/ Yeti.BadgeKey key;

            /*0x222aa40*/ <>c__DisplayClass15_0();
            /*0x222aaec*/ bool <FindBadgeInfoByKey>b__0(Yeti.IBadgeInfo x);
        }

        class <>c__DisplayClass16_0
        {
            /*0x10*/ Yeti.BadgeSource source;

            /*0x222aa48*/ <>c__DisplayClass16_0();
            /*0x222ac0c*/ bool <FindBadgeInfoBySource>b__0(Yeti.IBadgeInfo x);
        }
    }

    class BaseGameDataManager<T> : Yeti.BaseDataPropagator<T>
    {
        /*0x0*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;

        /*0x1f309e4*/ BaseGameDataManager();
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
    }

    class BaseSimpleGameDataManager<T> : Yeti.BaseSimpleDataPropagator<T>
    {
        /*0x0*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;

        /*0x1f309e4*/ BaseSimpleGameDataManager();
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
    }

    class BaseDictionaryGameDataManager<K, V> : Yeti.BaseDictionaryDataPropagator<K, V>
    {
        /*0x0*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;

        /*0x1f309e4*/ BaseDictionaryGameDataManager();
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
    }

    interface IDeeplinkUiScrollDataManager : Yeti.IBaseDeeplinkUiDataManager<Yeti.DeeplinkUiScrollInfo, Yeti.IDeeplinkScrollInfo>, Yeti.ISimpleDataPropagator<Yeti.IDeeplinkScrollInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
    }

    class DeeplinkUiScrollDataManager : Yeti.BaseDeeplinkUiDataManager<Yeti.DeeplinkUiScrollInfo, Yeti.DeeplinkScrollInfo, Yeti.IDeeplinkScrollInfo, float>, Yeti.IDeeplinkUiScrollDataManager, Yeti.IBaseDeeplinkUiDataManager<Yeti.DeeplinkUiScrollInfo, Yeti.IDeeplinkScrollInfo>, Yeti.ISimpleDataPropagator<Yeti.IDeeplinkScrollInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x222acbc*/ DeeplinkUiScrollDataManager();
    }

    interface IDeeplinkZoogleMapsNavigationDataManager : Yeti.IBaseDeeplinkUiDataManager<Yeti.ZoogleMapsUiNavigationInfo, Yeti.IZoogleMapsNavigationInfo>, Yeti.ISimpleDataPropagator<Yeti.IZoogleMapsNavigationInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
    }

    class DeeplinkZoogleMapsNavigationDataManager : Yeti.BaseDeeplinkUiDataManager<Yeti.ZoogleMapsUiNavigationInfo, Yeti.ZoogleMapsNavigationInfo, Yeti.IZoogleMapsNavigationInfo, UnityEngine.Vector3>, Yeti.IDeeplinkZoogleMapsNavigationDataManager, Yeti.IBaseDeeplinkUiDataManager<Yeti.ZoogleMapsUiNavigationInfo, Yeti.IZoogleMapsNavigationInfo>, Yeti.ISimpleDataPropagator<Yeti.IZoogleMapsNavigationInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x222ad04*/ DeeplinkZoogleMapsNavigationDataManager();
    }

    class GardenGadgetStaticDataProvider : EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, int> _gadgetLookupKeyToIdMap;
        /*0x18*/ System.Collections.Generic.Dictionary<int, Yeti.Data.CascadeUnitConfig> _gadgetIdToUnitMap;

        /*0x222b2b8*/ GardenGadgetStaticDataProvider();
        /*0x222ad4c*/ void Initialize(Yeti.Data.CombatDatabase combatDatabase);
        /*0x222b1a4*/ bool TryGetUnitConfig(int gadgetId, ref Yeti.Data.CascadeUnitConfig unitConfig);
        /*0x222b218*/ bool TryGetUnitConfig(string lookupKey, ref Yeti.Data.CascadeUnitConfig unitConfig);
    }

    class ItemIds
    {
        static int Coins = 1684833278;
        static int Lives = 1108145902;
        static int Gems = 1709274423;

        /*0x222b394*/ ItemIds();
    }

    interface IItemDataProvider
    {
        /*0x1f30214*/ System.Collections.Generic.IList<PvzN3xt.Data.ItemDefinition> get_ItemDefinitions();
        /*0x1f30214*/ System.Collections.Generic.IEnumerable<PvzN3xt.Data.ItemDefinition> get_SeedCurrencyDefinitions();
        /*0x1f30214*/ PvzN3xt.Data.ItemDefinition get_CoinsDefinition();
        /*0x1f30214*/ PvzN3xt.Data.ItemDefinition get_LivesDefinition();
        /*0x1f30240*/ PvzN3xt.Data.ItemDefinition GetById(int itemId);
        /*0x1f30240*/ PvzN3xt.Data.ItemDefinition LookupBoostItemDefinition(int boostId);
        /*0x1f2fe40*/ bool IsBoostItem(int itemId);
        /*0x1f2fe40*/ bool IsSeedItem(int itemId);
    }

    class ItemDefinitionProvider : Yeti.IItemDataProvider, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        /*0x10*/ PvzN3xt.GameData.IGameDataModelProvider _gameDataModelProvider;
        /*0x18*/ System.Collections.Generic.Dictionary<int, PvzN3xt.Data.ItemDefinition> _definitionsById;

        /*0x222c098*/ ItemDefinitionProvider();
        /*0x222b39c*/ System.Collections.Generic.Dictionary<int, PvzN3xt.Data.ItemDefinition> get_DefinitionsById();
        /*0x222b7f4*/ System.Collections.Generic.IList<PvzN3xt.Data.ItemDefinition> get_ItemDefinitions();
        /*0x222b918*/ PvzN3xt.Data.ItemDefinition get_CoinsDefinition();
        /*0x222b9a4*/ PvzN3xt.Data.ItemDefinition get_LivesDefinition();
        /*0x222b9b0*/ System.Collections.Generic.IEnumerable<PvzN3xt.Data.ItemDefinition> get_SeedCurrencyDefinitions();
        /*0x222b924*/ PvzN3xt.Data.ItemDefinition GetById(int itemId);
        /*0x222ba64*/ PvzN3xt.Data.ItemDefinition LookupBoostItemDefinition(int boostId);
        /*0x222bd60*/ bool IsBoostItem(int itemId);
        /*0x222bd8c*/ bool IsSeedItem(int itemId);
        /*0x222bdb8*/ PvzN3xt.Data.ItemDefinition GetByAlias(string alias);

        class <get_SeedCurrencyDefinitions>d__11 : System.Collections.Generic.IEnumerable<PvzN3xt.Data.ItemDefinition>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<PvzN3xt.Data.ItemDefinition>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ PvzN3xt.Data.ItemDefinition <>2__current;
            /*0x20*/ int <>l__initialThreadId;
            /*0x28*/ Yeti.ItemDefinitionProvider <>4__this;
            /*0x30*/ System.Collections.Generic.IEnumerator<PvzN3xt.Data.ItemDefinition> <>7__wrap1;

            /*0x222ba30*/ <get_SeedCurrencyDefinitions>d__11(int <>1__state);
            /*0x222c0a0*/ void System.IDisposable.Dispose();
            /*0x222c0bc*/ bool MoveNext();
            /*0x222c39c*/ void <>m__Finally1();
            /*0x222c44c*/ PvzN3xt.Data.ItemDefinition System.Collections.Generic.IEnumerator<PvzN3xt.Data.ItemDefinition>.get_Current();
            /*0x222c454*/ void System.Collections.IEnumerator.Reset();
            /*0x222c48c*/ object System.Collections.IEnumerator.get_Current();
            /*0x222c494*/ System.Collections.Generic.IEnumerator<PvzN3xt.Data.ItemDefinition> System.Collections.Generic.IEnumerable<PvzN3xt.Data.ItemDefinition>.GetEnumerator();
            /*0x222c538*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
        }
    }

    class PlantMergeRecipe
    {
        /*0x10*/ int _resultUnitId;
        /*0x18*/ Yeti.PlantMergeRecipe.MergeIngredients _ingredients;

        /*0x222c54c*/ PlantMergeRecipe(int resultUnitId, int ingredient1, int ingredient2);
        /*0x222c53c*/ int get_ResultUnitId();
        /*0x222c544*/ Yeti.PlantMergeRecipe.MergeIngredients get_Ingredients();
        /*0x222c648*/ Yeti.PlantMergeRecipe.MergeInvolvement GetMergeInvolvement(int unitDefId);
        /*0x222c754*/ Yeti.PlantMergeRecipe.MergeInvolvement GetMergeInvolvement(Yeti.Data.UnitDefinition unitDef);

        class MergeIngredients
        {
            /*0x10*/ System.Tuple<int, int> _ingredients;

            static /*0x222c59c*/ Yeti.PlantMergeRecipe.MergeIngredients Of(int ingredient1, int ingredient2);
            /*0x222c868*/ MergeIngredients();
            /*0x222c768*/ int get_First();
            /*0x222c7e4*/ int get_Second();
            /*0x222c67c*/ bool Contains(int unitDefId);
            /*0x222c870*/ bool IsSelfMergeOf(int unitDefId);
            /*0x222c964*/ bool IsSelfMergeOf(Yeti.Data.UnitDefinition unitDef);
            /*0x222c978*/ bool Contains(Yeti.Data.UnitDefinition unitDef);
        }

        enum MergeInvolvement
        {
            None = 0,
            Ingredient = 1,
            Result = 2,
        }
    }

    class PlantStaticDataProvider : EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        static int InvalidValue = -1;
        /*0x10*/ System.Collections.Generic.Dictionary<string, int> _plantLookupKeyToIdMap;
        /*0x18*/ System.Collections.Generic.Dictionary<int, int> _plantIdToUnlockLevelMap;
        /*0x20*/ System.Collections.Generic.Dictionary<int, Yeti.Data.UnitDefinition> _units;
        /*0x28*/ System.Collections.Generic.Dictionary<int, Yeti.PlantMergeRecipe> _recipesByResult;
        /*0x30*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> _recipesByIngredient;
        /*0x38*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> _allWeaknessesByPlantId;
        /*0x40*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> _allStrengthsByPlantId;
        /*0x48*/ System.Collections.Generic.HashSet<string> _aliases;

        /*0x222f66c*/ PlantStaticDataProvider();
        /*0x222c98c*/ System.Collections.Generic.ICollection<Yeti.Data.UnitDefinition> get_AllUnits();
        /*0x222c9dc*/ void Initialize(Yeti.Data.CombatDatabase combatDatabase);
        /*0x222d9d0*/ void AddStrengthsAndWeaknessesFromPlantDef(Yeti.Data.UnitDefinition unitDefinition);
        /*0x222dbbc*/ void AddStrengthsAndWeaknessesFromZombieDef(Yeti.Data.UnitDefinition unitDefinition);
        /*0x222de58*/ bool TryGetRecipeForPlantId(int resultUnitId, ref Yeti.PlantMergeRecipe recipe);
        /*0x222decc*/ bool TryGetRecipeForPlantDef(Yeti.Data.UnitDefinition unitDef, ref Yeti.PlantMergeRecipe recipe);
        /*0x222dee0*/ System.Collections.Generic.ICollection<Yeti.PlantMergeRecipe> GetRecipesWithIngredient(Yeti.Data.UnitDefinition unitDef);
        /*0x222def4*/ System.Collections.Generic.ICollection<Yeti.PlantMergeRecipe> GetRecipesWithIngredient(int ingredientId);
        /*0x222e280*/ bool TryGetSelfMergeRecipe(Yeti.Data.UnitDefinition unitDefinition, ref Yeti.PlantMergeRecipe resultRecipe);
        /*0x222e294*/ bool TryGetSelfMergeRecipe(int ingredientId, ref Yeti.PlantMergeRecipe resultRecipe);
        /*0x222e5c4*/ System.Collections.Generic.ICollection<Yeti.PlantMergeRecipe> GetRecipeChildren(System.Collections.Generic.ICollection<Yeti.PlantMergeRecipe> recipes);
        /*0x222e8e8*/ System.Collections.Generic.ICollection<Yeti.PlantMergeRecipe> GetRecipeParentForId(int resultId);
        /*0x222ea48*/ System.Collections.Generic.ICollection<Yeti.PlantMergeRecipe> GetRecipesParents(System.Collections.Generic.ICollection<Yeti.PlantMergeRecipe> recipes);
        /*0x222d5a0*/ void BuildLookupKeyToIdMap(Yeti.Data.CombatDatabase combatDatabase);
        /*0x222ef68*/ int GetPlantIdForPlantLookupKey(string plantAlias);
        /*0x222efe0*/ bool TryGetPlantIdForPlantLookupKey(string plantAlias, ref int plantId);
        /*0x222f048*/ int GetPlantUnlockLevelForPlantId(int plantId);
        /*0x222f0c4*/ Yeti.Data.PlantAcquisitionProperties GetPlantAcquisitionPropertiesForPlantId(int plantId);
        /*0x222f198*/ Yeti.Data.PlantAvailabilityProperties GetPlantAvailabilityPropertiesForPlantId(int plantId);
        /*0x222f284*/ bool IsPlantUnlockableByLevel(int plantId);
        /*0x222f2f0*/ bool IsUnitASelectablePlant(Yeti.Data.UnitDefinition unit);
        /*0x222f338*/ string GetPlantAlias(int plantId);
        /*0x222f3b0*/ Yeti.Data.UnitDefinition GetDefinition(int plantId);
        /*0x222f420*/ bool TryGetDefinition(int plantId, ref Yeti.Data.UnitDefinition unitDefinition);
        /*0x222f494*/ bool TryGetDefinition(string plantLookupKey, ref Yeti.Data.UnitDefinition unitDefinition);
        /*0x222f534*/ System.Collections.Generic.IReadOnlyList<int> GetAllStrongAgainstUnitIds(int plantId);
        /*0x222f5a4*/ System.Collections.Generic.IReadOnlyList<int> GetAllWeakAgainstUnitIds(int plantId);
        /*0x222f614*/ bool IsPlantAlias(string alias);
    }

    interface IPlayerInventoryDataManager : CapitalGames.IInitializable
    {
        long get_Coins();
        long get_Gems();
        bool TryConsumeBoost(int boostId, int amount, System.Action onSuccess, System.Action onFail);
        long BoostsOnHand(int boostId);
        long SeedsOnHand(string genusAlias);
        System.DateTime InfiniteBoostUseExpiration(int boostId);
        /*0x1f2fe40*/ bool InfiniteBoostUseAvailable(int boostId);
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<Yeti.BoostOnHand> BoostsOnHand();
        long GetItemQuantityOnHand(int itemId);
        bool TryConsumeZenGardenInventory(int itemId, int amount, System.Action onSuccess, System.Action onFail);
        long ZenGardenInventoryOnHand(int zenGardenItemId);
        /*0x1f30ebc*/ void add_InventoryUpdated(System.Action value);
        /*0x1f30ebc*/ void remove_InventoryUpdated(System.Action value);
        /*0x1f2ffc8*/ int FullSeedWalletCount();
    }

    class BoostOnHand
    {
        /*0x10*/ int <BoostId>k__BackingField;
        /*0x18*/ long <Quantity>k__BackingField;

        /*0x222f8d0*/ BoostOnHand(int boostId, long quantity);
        /*0x222f900*/ int get_BoostId();
        /*0x222f908*/ long get_Quantity();
    }

    class ZenGardenInventoryOnHand
    {
        /*0x10*/ int <ItemId>k__BackingField;
        /*0x18*/ long <Quantity>k__BackingField;

        /*0x222f910*/ ZenGardenInventoryOnHand(int itemId, long quantity);
        /*0x222f940*/ int get_ItemId();
        /*0x222f948*/ long get_Quantity();
    }

    class PlayerInventoryDataManager : Yeti.IPlayerInventoryDataManager, CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.IItemDataProvider _itemDataProvider;
        /*0x18*/ PvzN3xt.PlayerInventory.PlayerInventoryDataSource _playerInventoryDataSource;
        /*0x20*/ Yeti.ITimerManager _timerManager;
        /*0x28*/ Yeti.MutableTimeProvider _mutableTimeProvider;
        /*0x30*/ PvzN3xt.PlayerInventory.IPlayerInventoryApi _playerInventoryApi;
        /*0x38*/ PvzN3xt.PlayerInventory.TutorialInfiniteBoostExpirationListener _tutorialInfiniteBoostExpirationListener;
        /*0x40*/ Yeti.IZenGardenDefinitionProvider _zenGardenDefinitionProvider;
        /*0x48*/ System.Collections.Generic.Dictionary<int, long> _boosts;
        /*0x50*/ System.Collections.Generic.Dictionary<string, long> _seeds;
        /*0x58*/ System.Collections.Generic.Dictionary<int, System.DateTime> _boostExpirations;
        /*0x60*/ System.Collections.Generic.Dictionary<int, long> _zenGardenInventory;
        /*0x68*/ System.Collections.Generic.Dictionary<int, long> _quantityByItemId;
        /*0x70*/ long <Coins>k__BackingField;
        /*0x78*/ long <Gems>k__BackingField;
        /*0x80*/ Yeti.TimerRequest _updateExpirationTimerRequest;
        /*0x88*/ System.Action InventoryUpdated;

        /*0x223154c*/ PlayerInventoryDataManager();
        /*0x222f950*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x22302d0*/ long get_Coins();
        /*0x22302d8*/ void set_Coins(long value);
        /*0x22302e0*/ long get_Gems();
        /*0x22302e8*/ void set_Gems(long value);
        /*0x22302f0*/ bool TryConsumeBoost(int boostId, int amount, System.Action onSuccess, System.Action onFail);
        /*0x2230464*/ long BoostsOnHand(int boostId);
        /*0x22304dc*/ long SeedsOnHand(string genusAlias);
        /*0x223054c*/ System.DateTime InfiniteBoostUseExpiration(int boostId);
        /*0x22305f4*/ bool InfiniteBoostUseAvailable(int boostId);
        /*0x2230684*/ System.Collections.Generic.IReadOnlyList<Yeti.BoostOnHand> BoostsOnHand();
        /*0x2230a30*/ long GetItemQuantityOnHand(int itemId);
        /*0x2230aac*/ bool TryConsumeZenGardenInventory(int itemId, int amount, System.Action onSuccess, System.Action onFail);
        /*0x2230b84*/ long ZenGardenInventoryOnHand(int zenGardenItemId);
        /*0x222fa8c*/ void ImportState(PvzN3xt.Data.PlayerInventoryState playerInventoryState);
        /*0x2230c00*/ void UpdateExpirationTimer();
        /*0x2230ffc*/ Yeti.ITimerCommand BoostExpirationTimerCommand();
        /*0x22310a4*/ int FullSeedWalletCount();
        /*0x2231414*/ void add_InventoryUpdated(System.Action value);
        /*0x22314b0*/ void remove_InventoryUpdated(System.Action value);
        /*0x22316c4*/ void <BoostExpirationTimerCommand>b__33_0();
    }

    interface IPlayerProgressionDataManager : Yeti.ISimpleDataPropagator<Yeti.IPlayerProgressionInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30214*/ Yeti.IPlayerProgressionInfo get_PlayerProgressionInfo();
        /*0x1f30214*/ Yeti.LevelUpRewardMomentInfo FindLevelUpRewardMoment();
        /*0x1f2fe14*/ bool get_ShouldShowPostLevelUpMoment();
        /*0x1f309e4*/ void QueuePostLevelUpMoment();
        /*0x1f309e4*/ void ClearPostLevelUpMoment();
    }

    class PlayerProgressionDataManager : Yeti.BaseSimpleGameDataManager<Yeti.IPlayerProgressionInfo>, Yeti.IPlayerProgressionDataManager, Yeti.ISimpleDataPropagator<Yeti.IPlayerProgressionInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x30*/ Yeti.IZombieDataManager _zombieDataManager;
        /*0x38*/ Yeti.GameEventManager _gameEventManager;
        /*0x40*/ Yeti.PlayerProgressionInfo _playerProgressionInfo;
        /*0x48*/ bool <ShouldShowPostLevelUpMoment>k__BackingField;
        /*0x50*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> _zombieIdsUnlockedAtLevel;

        static /*0x2231dd8*/ bool HasUnlockedBlockFromLevelUpRewardMoment(Yeti.Data.RewardMoment rewardMoment);
        /*0x22320cc*/ PlayerProgressionDataManager();
        /*0x223170c*/ Yeti.IPlayerProgressionInfo get_PlayerProgressionInfo();
        /*0x2231714*/ bool get_ShouldShowPostLevelUpMoment();
        /*0x223171c*/ void set_ShouldShowPostLevelUpMoment(bool value);
        /*0x2231724*/ void OnInitialize();
        /*0x2231d38*/ Yeti.PlayerProgressionInfo BuildProgressionInfo();
        /*0x2231788*/ void BuildZombieIdUnlockData();
        /*0x2231d90*/ void UpdateLevel(Yeti.PlayerProgressionInfo playerProgressionInfo);
        /*0x2231dbc*/ Yeti.LevelUpRewardMomentInfo FindLevelUpRewardMoment();
        /*0x2231dc4*/ void QueuePostLevelUpMoment();
        /*0x2231dd0*/ void ClearPostLevelUpMoment();
    }

    class LevelUpRewardMomentInfo
    {
        /*0x10*/ string RewardMomentId;
        /*0x18*/ bool HasUnlockedBlock;

        /*0x2232168*/ LevelUpRewardMomentInfo(string rewardMomentId, bool hasUnlockedBlock);
    }

    interface IZenGardenDefinitionProvider
    {
        /*0x1f2ffc8*/ int get_HeartsRefreshQuantityToGrant();
        /*0x1f2ffc8*/ int get_MinHeartBalanceToShowTimer();
        /*0x1f2ffc8*/ int get_MaxAdTimerSkipsPerDay();
        /*0x1f2ffc8*/ int get_MaxHeartsBalance();
        /*0x1f30214*/ System.Collections.Generic.HashSet<int> get_ZenGardenInventoryIds();
        /*0x1f2fe40*/ bool IsZenGardenInventoryItem(int id);
        /*0x1f30214*/ System.Collections.Generic.IList<PvzN3xt.Data.ItemDefinition> get_ZenGardenItemDefinitions();
        System.Collections.Generic.KeyValuePair<int, PvzN3xt.Data.TypedDurationUnit> get_SuperMulchTimerReduction();
        double get_SkipTimerDecayCostPerMinute();
        /*0x1f2ffc8*/ int get_SkipTimerDecayCostItemId();
        /*0x1f2fe80*/ bool TryGetAliasForInteractionType(PvzN3xt.Data.ZenGardenPlantGrowthPhase.Types.ZenGardenInteractionType type, ref string alias);
        /*0x1f2fe80*/ bool TryGetCostForInteractionType(PvzN3xt.Data.ZenGardenPlantGrowthPhase.Types.ZenGardenInteractionType type, ref System.Collections.Generic.IList<PvzN3xt.Data.ZenGardenInteractionCost> cost);
        /*0x1f30ebc*/ void Initialize(PvzN3xt.GameData.IGameDataModel gameDataModel);
    }

    class ZenGardenDefinitionProvider : Yeti.IZenGardenDefinitionProvider
    {
        /*0x10*/ PvzN3xt.GameData.IGameDataModel _gameDataModelProvider;
        /*0x18*/ System.Collections.Generic.KeyValuePair<int, PvzN3xt.Data.TypedDurationUnit> _superMulchTimerReduction;
        /*0x20*/ System.Collections.Generic.HashSet<int> _zenGardenItemIds;
        /*0x28*/ System.Collections.Generic.List<PvzN3xt.Data.ItemDefinition> _zenGardenItemDefinitions;

        /*0x22337bc*/ ZenGardenDefinitionProvider();
        /*0x22321a4*/ System.Collections.Generic.HashSet<int> get_ZenGardenInventoryIds();
        /*0x22321ac*/ System.Collections.Generic.IList<PvzN3xt.Data.ItemDefinition> get_ZenGardenItemDefinitions();
        /*0x22321b4*/ int get_MaxHeartsBalance();
        /*0x2232264*/ int get_MaxAdTimerSkipsPerDay();
        /*0x2232314*/ System.Collections.Generic.KeyValuePair<int, PvzN3xt.Data.TypedDurationUnit> get_SuperMulchTimerReduction();
        /*0x223231c*/ int get_MinHeartBalanceToShowTimer();
        /*0x22323cc*/ int get_HeartsRefreshQuantityToGrant();
        /*0x223247c*/ double get_SkipTimerDecayCostPerMinute();
        /*0x223252c*/ int get_SkipTimerDecayCostItemId();
        /*0x22325dc*/ bool IsZenGardenInventoryItem(int id);
        /*0x2232648*/ bool TryGetAliasForInteractionType(PvzN3xt.Data.ZenGardenPlantGrowthPhase.Types.ZenGardenInteractionType type, ref string alias);
        /*0x2232a0c*/ void Initialize(PvzN3xt.GameData.IGameDataModel gameDataModel);
        /*0x2233408*/ bool TryGetCostForInteractionType(PvzN3xt.Data.ZenGardenPlantGrowthPhase.Types.ZenGardenInteractionType type, ref System.Collections.Generic.IList<PvzN3xt.Data.ZenGardenInteractionCost> cost);
    }

    interface IZombieDataManager : Yeti.IDataPropagator<Yeti.IZombieInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<Yeti.IZombieInfo> GetAllZombies();
        /*0x1f302cc*/ System.Collections.Generic.List<Yeti.IZombieInfo> GetZombieInfos(System.Collections.Generic.IEnumerable<int> zombieIds);
        /*0x1f30240*/ Yeti.IZombieInfo GetZombieInfoById(int unitId);
        /*0x1f2fe80*/ bool TryGetZombieInfoById(int unitId, ref Yeti.IZombieInfo zombieInfo);
        /*0x1f30240*/ Yeti.IZombieInfo GetZombieInfoByIdSafeDefault(int unitId);
        /*0x1f30b78*/ void SetZombieViewed(int unitId);
        /*0x1f30b78*/ void SetZombieIntroduced(int unitId);
        /*0x1f2fe40*/ bool HasZombieBeenIntroduced(int unitId);
        /*0x1f2ff00*/ bool TryGetZombieInfoByLookupKey(string alias, ref Yeti.IZombieInfo zombieInfo);
        /*0x1f30214*/ Yeti.IZombieInfo GetFallbackZombie();
    }

    class ZombieDataManager : Yeti.BaseGameDataManager<Yeti.IZombieInfo>, Yeti.IZombieDataManager, Yeti.IDataPropagator<Yeti.IZombieInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, EA.Logging.Api.IEACategoryLoggable<Yeti.LogCategory>
    {
        static /*0x0*/ Yeti.Data.ZombieDetailDefinition NullZombieDetails;
        /*0x30*/ YetiSimCoreCommon.Utils.KeyedListCollection<int, Yeti.ZombieInfo> _zombiesById;
        /*0x38*/ System.Collections.Generic.Dictionary<string, int> _zombieIdsByLookupKey;
        /*0x40*/ Yeti.ICombatUnitDefinitionProvider _combatUnitDefinitionProvider;
        /*0x48*/ Yeti.IDamageTypeDefinitionProvider _damageTypeDefinitionProvider;
        /*0x50*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _locManager;
        /*0x58*/ Yeti.IPlayerProgressionDataManager _playerProgressionDataManager;
        /*0x60*/ Yeti.GameEventManager _gameEventManager;

        static /*0x2235448*/ ZombieDataManager();
        static /*0x22344b8*/ void UpdateZombieUnlockStatus(Yeti.ZombieInfo zombieInfo, int playerLevel, int maxPossibleLevel);
        static /*0x2233f7c*/ bool IsValidZombie(Yeti.Data.UnitDefinition unit);
        /*0x2235358*/ ZombieDataManager();
        /*0x2233898*/ void OnInitialize();
        /*0x223396c*/ void CreateZombieInfoMap();
        /*0x2233b78*/ void AddReverseLookupStrengthsAndWeaknesses();
        /*0x22342fc*/ void HandlePlayerLevelUpdated();
        /*0x2234300*/ void UpdateZombieUnlockStatuses();
        /*0x2233e5c*/ int GetPlayerLevel();
        /*0x22344f0*/ void SetZombieViewed(int unitId);
        /*0x22344f4*/ System.Collections.Generic.List<Yeti.ZombieInfo> GetAllDuplicateZombies(Yeti.ZombieInfo zombie);
        /*0x2234734*/ bool IsZombieNew(int unitId);
        /*0x223473c*/ void SetZombieIntroduced(int unitId);
        /*0x2234740*/ bool HasZombieBeenIntroduced(int unitId);
        /*0x2233fa4*/ void CreateZombieInfo(Yeti.Data.UnitDefinition unit, int playerLevel, int maxPossibleLevel);
        /*0x2234748*/ Yeti.Data.ZombieDetailDefinition FindZombieDetail(int unitId);
        /*0x2234be8*/ System.Collections.Generic.IReadOnlyList<Yeti.IZombieInfo> GetAllZombies();
        /*0x2234c30*/ System.Collections.Generic.List<Yeti.IZombieInfo> GetZombieInfos(System.Collections.Generic.IEnumerable<int> zombieIds);
        /*0x2234f54*/ Yeti.IZombieInfo GetZombieInfoById(int unitId);
        /*0x2235040*/ bool TryGetZombieInfoById(int unitId, ref Yeti.IZombieInfo zombieInfo);
        /*0x2235108*/ Yeti.IZombieInfo GetZombieInfoByIdSafeDefault(int unitId);
        /*0x223512c*/ Yeti.IZombieInfo GetFallbackZombie();
        /*0x22352b0*/ bool TryGetZombieInfoByLookupKey(string alias, ref Yeti.IZombieInfo zombieInfo);
    }

    interface IDataPropagationEventDispatcher : CapitalGames.IInitializable
    {
        /*0x1f30ebc*/ void add_DataSourcePropagateDataEvents(System.Action value);
        /*0x1f30ebc*/ void remove_DataSourcePropagateDataEvents(System.Action value);
        /*0x1f30ebc*/ void add_DataManagerPropagateDataEvents(System.Action value);
        /*0x1f30ebc*/ void remove_DataManagerPropagateDataEvents(System.Action value);
        /*0x1f30ebc*/ void add_ControllerPropagateDataEvents(System.Action value);
        /*0x1f30ebc*/ void remove_ControllerPropagateDataEvents(System.Action value);
    }

    class DataPropagationEventDispatcher : Yeti.IDataPropagationEventDispatcher, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x10*/ CapitalGames.IMonoBehaviourEventNotifierSystem _eventNotifier;
        /*0x18*/ System.Action DataSourcePropagateDataEvents;
        /*0x20*/ System.Action DataManagerPropagateDataEvents;
        /*0x28*/ System.Action ControllerPropagateDataEvents;

        /*0x2235a7c*/ DataPropagationEventDispatcher();
        /*0x22354c4*/ void add_DataSourcePropagateDataEvents(System.Action value);
        /*0x2235560*/ void remove_DataSourcePropagateDataEvents(System.Action value);
        /*0x22355fc*/ void add_DataManagerPropagateDataEvents(System.Action value);
        /*0x2235698*/ void remove_DataManagerPropagateDataEvents(System.Action value);
        /*0x2235734*/ void add_ControllerPropagateDataEvents(System.Action value);
        /*0x22357d0*/ void remove_ControllerPropagateDataEvents(System.Action value);
        /*0x223586c*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x22359e8*/ void OnLateUpdate(CapitalGames.IMonoBehaviourEventNotifierSystem sender);
        /*0x2235a44*/ void OnAppReset();
    }

    class BaseGameDataSource<T> : Yeti.BaseDataPropagator<T>
    {
        /*0x0*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;

        /*0x1f309e4*/ BaseGameDataSource();
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
    }

    class BaseSimpleGameDataSource<T> : Yeti.BaseSimpleDataPropagator<T>
    {
        /*0x0*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;

        /*0x1f309e4*/ BaseSimpleGameDataSource();
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
    }

    class BaseDictionaryGameDataSource<K, V> : Yeti.BaseDictionaryDataPropagator<K, V>
    {
        /*0x0*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;

        /*0x1f309e4*/ BaseDictionaryGameDataSource();
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
    }

    interface ICheckpointStateDataSource : Yeti.ISimpleDataSource<Yeti.Data.CheckpointsGameState>, Yeti.ISimpleDataPropagator<Yeti.Data.CheckpointsGameState>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30214*/ Yeti.CheckpointInfo get_MainTrackCheckpoint();
        /*0x1f2fe14*/ bool get_PreventDeepLinks();
        /*0x1f2fe40*/ bool IsCheckpointActive(int checkpointId);
        int GetCurrentCheckpoint(int trackId);
        int GetTrackForCheckpoint(int checkpointId);
        /*0x1f2fe14*/ bool get_HasLoadedCheckpointData();
    }

    class CheckpointStateDataSource : Yeti.BaseSimpleGameDataSource<Yeti.Data.CheckpointsGameState>, Yeti.ICheckpointStateDataSource, Yeti.ISimpleDataSource<Yeti.Data.CheckpointsGameState>, Yeti.ISimpleDataPropagator<Yeti.Data.CheckpointsGameState>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static int MainCheckpointTrackId = 443034703;
        /*0x30*/ Yeti.CheckpointInfo <MainTrackCheckpoint>k__BackingField;
        /*0x38*/ bool <PreventDeepLinks>k__BackingField;
        /*0x39*/ bool <HasLoadedCheckpointData>k__BackingField;
        /*0x40*/ System.Collections.Generic.List<int> _activeCheckpointIds;
        /*0x48*/ System.Collections.Generic.Dictionary<int, Yeti.CheckpointInfo> _progressByTrackId;
        /*0x50*/ System.Collections.Generic.Dictionary<int, int> _checkpointIdToTrackIdMap;

        /*0x22361e4*/ CheckpointStateDataSource();
        /*0x2235a84*/ Yeti.CheckpointInfo get_MainTrackCheckpoint();
        /*0x2235a8c*/ void set_MainTrackCheckpoint(Yeti.CheckpointInfo value);
        /*0x2235a94*/ bool get_PreventDeepLinks();
        /*0x2235a9c*/ void set_PreventDeepLinks(bool value);
        /*0x2235aa4*/ bool get_HasLoadedCheckpointData();
        /*0x2235aac*/ void set_HasLoadedCheckpointData(bool value);
        /*0x2235ab4*/ void Override(Yeti.Data.CheckpointsGameState model);
        /*0x2235f98*/ bool IsCheckpointActive(int checkpointId);
        /*0x2236004*/ int GetCurrentCheckpoint(int trackId);
        /*0x22360f8*/ int GetTrackForCheckpoint(int checkpointId);
    }

    interface IConflictProfileDataSource : Yeti.IDataSource<Yeti.IPublicPlayerInfo, Yeti.IPublicPlayerInfo>, Yeti.IDataPropagator<Yeti.IPublicPlayerInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<Yeti.IPublicPlayerInfo> get_AllConflictedProfiles();
        /*0x1f309e4*/ void Reset();
    }

    class ConflictProfileDataSource : Yeti.BaseGameDataSource<Yeti.IPublicPlayerInfo>, Yeti.IConflictProfileDataSource, Yeti.IDataSource<Yeti.IPublicPlayerInfo, Yeti.IPublicPlayerInfo>, Yeti.IDataPropagator<Yeti.IPublicPlayerInfo>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x30*/ System.Collections.Generic.List<Yeti.IPublicPlayerInfo> _allConflictedProfiles;

        /*0x2236494*/ ConflictProfileDataSource();
        /*0x2236328*/ System.Collections.Generic.IReadOnlyList<Yeti.IPublicPlayerInfo> get_AllConflictedProfiles();
        /*0x2236330*/ void Override(Yeti.IPublicPlayerInfo model);
        /*0x2236368*/ void Update(Yeti.IPublicPlayerInfo model);
        /*0x22363a0*/ void ApplyDelta(Yeti.IPublicPlayerInfo model);
        /*0x22363f8*/ void Reset();
    }

    interface IDictionaryDataSource<K, V> : Yeti.IDataSource<System.Collections.Generic.IReadOnlyDictionary<K, V>, K>, Yeti.IDataPropagator<K>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IClearable, Yeti.IRemovable<K>
    {
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyDictionary<K, V> get_DataDictionary();
        /*0x1ffc854*/ void Add(K key, V value);
    }

    interface IDataSource<TModel, TDataPropagation> : Yeti.IDataPropagator<TDataPropagation>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1ffc854*/ void Override(TModel model);
        /*0x1ffc854*/ void Update(TModel model);
        /*0x1ffc854*/ void ApplyDelta(TModel model);
    }

    interface ISimpleDataSource<TModel> : Yeti.ISimpleDataPropagator<TModel>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1ffc854*/ void Override(TModel model);
    }

    class KillswitchedSimpleListBaseGameDataSource<T> : Yeti.SimpleListBaseGameDataSource<T>
    {
        /*0x0*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x0*/ System.Collections.Generic.List<string> _killswitchedObjects;

        /*0x1f309e4*/ KillswitchedSimpleListBaseGameDataSource();
        /*0x1f30214*/ string get_KillswitchedObjectIds();
        /*0x1ffc854*/ string GetObjectId(T obj);
        /*0x1f309e4*/ void OnInitialize();
        /*0x1f30ebc*/ void Override(System.Collections.Generic.IReadOnlyList<T> overrideDataList);
        /*0x1f30ebc*/ void Update(System.Collections.Generic.IReadOnlyList<T> list);
        /*0x1f30ebc*/ void ApplyDelta(System.Collections.Generic.IReadOnlyList<T> list);
        /*0x1f302cc*/ System.Collections.Generic.IReadOnlyList<T> RemoveKillswitchedObjects(System.Collections.Generic.IReadOnlyList<T> list);
        /*0x1f30ebc*/ void NamedStringsUpdated(System.Collections.Generic.Dictionary<string, string> updatedValues);
        /*0x1f30ebc*/ void SetKillswitchedObjects(string excludeString);
    }

    interface IMessagingChannelDataSource : Yeti.ISimpleListBaseGameDataSource<NimbleBridge_MessagingChannel>, Yeti.IDataSource<System.Collections.Generic.IReadOnlyList<NimbleBridge_MessagingChannel>, NimbleBridge_MessagingChannel>, Yeti.IDataPropagator<NimbleBridge_MessagingChannel>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IClearable
    {
    }

    interface IPublicProfilesDataSource : Yeti.IDictionaryDataSource<string, Yeti.IPublicPlayerInfo>, Yeti.IDataSource<System.Collections.Generic.IReadOnlyDictionary<string, Yeti.IPublicPlayerInfo>, string>, Yeti.IDataPropagator<string>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IClearable, Yeti.IRemovable<string>
    {
    }

    class PublicProfilesDataSource : Yeti.BaseDictionaryGameDataSource<string, Yeti.IPublicPlayerInfo>, Yeti.IPublicProfilesDataSource, Yeti.IDictionaryDataSource<string, Yeti.IPublicPlayerInfo>, Yeti.IDataSource<System.Collections.Generic.IReadOnlyDictionary<string, Yeti.IPublicPlayerInfo>, string>, Yeti.IDataPropagator<string>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IClearable, Yeti.IRemovable<string>
    {
        /*0x2236530*/ PublicProfilesDataSource();
    }

    interface ISimpleListBaseGameDataSource<T> : Yeti.IDataSource<System.Collections.Generic.IReadOnlyList<T>, T>, Yeti.IDataPropagator<T>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IClearable
    {
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<T> get_DataList();
    }

    class SimpleListBaseGameDataSource<T> : Yeti.BaseGameDataSource<T>, Yeti.ISimpleListBaseGameDataSource<T>, Yeti.IDataSource<System.Collections.Generic.IReadOnlyList<T>, T>, Yeti.IDataPropagator<T>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IClearable
    {
        /*0x0*/ System.Collections.Generic.List<T> _list;

        /*0x1f309e4*/ SimpleListBaseGameDataSource();
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<T> get_DataList();
        /*0x1f30ebc*/ void Override(System.Collections.Generic.IReadOnlyList<T> overrideDataList);
        /*0x1f30ebc*/ void Update(System.Collections.Generic.IReadOnlyList<T> list);
        /*0x1f30ebc*/ void ApplyDelta(System.Collections.Generic.IReadOnlyList<T> list);
        /*0x1f30ebc*/ void UpdateDataList(System.Collections.Generic.IReadOnlyList<T> updatedDataList);
        /*0x1ffc854*/ int GetIndexOfMessageIfExists(System.Collections.Generic.IReadOnlyList<T> protoList, T message);
        /*0x1ffc854*/ bool CompareMessage(T message1, T message2);
        /*0x1f309e4*/ void Clear();
    }

    interface ITutorialStateDataSource
    {
        /*0x1f2fec8*/ bool IsTutorialComplete(string tutorialAlias);
        /*0x1f30ebc*/ void ImportState(PvzN3xt.Data.TutorialState state);
    }

    class TutorialStateDataSource : Yeti.ITutorialStateDataSource
    {
        /*0x10*/ Yeti.TutorialStaticDataProvider _tutorialStaticDataProvider;
        /*0x18*/ PvzN3xt.Data.TutorialState _tutorialState;

        /*0x2236738*/ TutorialStateDataSource();
        /*0x2236578*/ bool IsTutorialComplete(string tutorialAlias);
        /*0x223665c*/ void ImportState(PvzN3xt.Data.TutorialState state);
        /*0x2236590*/ int GetTutorialCompletionCount(string tutorialAlias);
    }

    class EndCombatConfig
    {
        /*0x10*/ int <StageIndex>k__BackingField;
        /*0x14*/ int <TownLevel>k__BackingField;
        /*0x18*/ Yeti.EndCombatCause <Cause>k__BackingField;
        /*0x1c*/ Yeti.EndCombatResult <Result>k__BackingField;
        /*0x20*/ System.Collections.Generic.HashSet<int> SpawnedZombies;
        /*0x28*/ System.Collections.Generic.HashSet<int> AllPlantsInGame;
        /*0x30*/ System.Collections.Generic.HashSet<int> AllUnitsInGame;

        /*0x2236780*/ EndCombatConfig();
        /*0x2236740*/ int get_StageIndex();
        /*0x2236748*/ void set_StageIndex(int value);
        /*0x2236750*/ int get_TownLevel();
        /*0x2236758*/ void set_TownLevel(int value);
        /*0x2236760*/ Yeti.EndCombatCause get_Cause();
        /*0x2236768*/ void set_Cause(Yeti.EndCombatCause value);
        /*0x2236770*/ Yeti.EndCombatResult get_Result();
        /*0x2236778*/ void set_Result(Yeti.EndCombatResult value);
    }

    class EndCombatConfigBuilder
    {
        static /*0x2236850*/ Yeti.EndCombatConfig CreateEndCombatConfigData(Yeti.EndCombatCause cause, Yeti.CombatSceneStateContext context, Yeti.CombatGuiModel combatModel);
        static /*0x2236a8c*/ void AddAllPlants(Yeti.EndCombatConfig config, Yeti.CombatSceneStateContext context, Yeti.CombatGuiModel combatModel);
        static /*0x2236ce0*/ Yeti.EndCombatConfig CreateEndCombatConfigForAbandonedLevel();
        static /*0x2236d40*/ Yeti.EndCombatConfig CreateEndCombatConfigForAbandonedRun();
        static /*0x2236da0*/ Yeti.EndCombatConfig CreateEndCombatConfigForAbandonedGame();
        static /*0x2236e00*/ Yeti.EndCombatConfig CreateEndCombatConfigForExpiredGame();
        static /*0x223699c*/ Yeti.EndCombatResult DetermineEndCombatResult(Yeti.EndCombatCause cause, Yeti.CombatSceneStateContext context);
        /*0x2236e68*/ EndCombatConfigBuilder();
    }

    enum EndCombatCause
    {
        Unknown = 0,
        Won = 1,
        Lost = 2,
        Quit = 3,
    }

    enum EndCombatResult
    {
        StageWon = 0,
        BattleWon = 1,
        Lost = 2,
        Abandoned = 3,
        Expired = 4,
        BattleAbandoned = 5,
        RunAbandoned = 6,
    }

    class GameObjectEnableOnStart : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.GameObject _gameObjectToBeEnabled;

        /*0x2236e8c*/ GameObjectEnableOnStart();
        /*0x2236e70*/ void Start();
    }

    interface IBadgeInfo
    {
        Yeti.BadgeKey get_Key();
        /*0x1f2ffc8*/ int get_BadgeCount();
        /*0x1f2fe14*/ bool get_IsBadgeActive();
        /*0x1f2fe14*/ bool get_IsSpecialBadgeActive();
        /*0x1f2ffc8*/ Yeti.BadgePriority get_Priority();
        /*0x1f30ebc*/ void UpdateBadgeData(Yeti.IBadgeInfo info);
        void UpdateBadgeData(Yeti.BadgeKey key, int badgeCount, bool isBadgeActive, bool isSpecialBadgeActive, Yeti.BadgePriority priority);
    }

    class BadgeInfo : Yeti.IBadgeInfo
    {
        /*0x10*/ Yeti.BadgeKey <Key>k__BackingField;
        /*0x18*/ int <BadgeCount>k__BackingField;
        /*0x1c*/ bool <IsBadgeActive>k__BackingField;
        /*0x1d*/ bool <IsSpecialBadgeActive>k__BackingField;
        /*0x20*/ Yeti.BadgePriority <Priority>k__BackingField;

        /*0x2224724*/ BadgeInfo(Yeti.BadgeKey key, int badgeCount, bool isBadgeActive, bool isSpecialBadgeActive, Yeti.BadgePriority priority);
        /*0x2236e94*/ Yeti.BadgeKey get_Key();
        /*0x2236e9c*/ void set_Key(Yeti.BadgeKey value);
        /*0x2236ea4*/ int get_BadgeCount();
        /*0x2236eac*/ void set_BadgeCount(int value);
        /*0x2236eb4*/ bool get_IsBadgeActive();
        /*0x2236ebc*/ void set_IsBadgeActive(bool value);
        /*0x2236ec4*/ bool get_IsSpecialBadgeActive();
        /*0x2236ecc*/ void set_IsSpecialBadgeActive(bool value);
        /*0x2236ed4*/ Yeti.BadgePriority get_Priority();
        /*0x2236edc*/ void set_Priority(Yeti.BadgePriority value);
        /*0x2236ee4*/ void UpdateBadgeData(Yeti.IBadgeInfo info);
        /*0x2237114*/ void UpdateBadgeData(Yeti.BadgeKey key, int badgeCount, bool isBadgeActive, bool isSpecialBadgeActive, Yeti.BadgePriority priority);
        /*0x223712c*/ string ToString();
    }

    class BlueprintStaticData
    {
        static string BlueprintIconStringFormat = "atlas.ui_blueprinticons.icon_BP_{0}";
        /*0x10*/ string <NameLocId>k__BackingField;
        /*0x18*/ string <DescriptionLocId>k__BackingField;
        /*0x20*/ string <Icon>k__BackingField;

        /*0x22371c8*/ BlueprintStaticData(string buildingAlias);
        /*0x22371b0*/ string get_NameLocId();
        /*0x22371b8*/ string get_DescriptionLocId();
        /*0x22371c0*/ string get_Icon();
    }

    interface ICheckpointInfo
    {
        /*0x1f2ffc8*/ int get_CheckpointId();
        /*0x1f2ffc8*/ int get_CheckpointTrackId();
    }

    class CheckpointInfo : Yeti.ICheckpointInfo
    {
        /*0x10*/ int <CheckpointId>k__BackingField;
        /*0x14*/ int <CheckpointTrackId>k__BackingField;

        /*0x2235f64*/ CheckpointInfo(Yeti.Data.CheckpointGameStateV2 state);
        /*0x22372c0*/ int get_CheckpointId();
        /*0x22372c8*/ int get_CheckpointTrackId();
    }

    interface IDeeplinkScrollInfo : Yeti.IBaseDeeplinkInfo<float>
    {
        /*0x1f30804*/ float get_NormalizedScrollPosition();
    }

    class DeeplinkScrollInfo : Yeti.BaseDeeplinkInfo<float>, Yeti.IDeeplinkScrollInfo, Yeti.IBaseDeeplinkInfo<float>
    {
        /*0x22372d0*/ DeeplinkScrollInfo();
        /*0x223734c*/ float get_NormalizedScrollPosition();
    }

    enum UnlockStatus
    {
        Invalid = 0,
        Locked = 1,
        ViewOnly = 2,
        Usable = 3,
    }

    enum Rarity
    {
        Invalid = 0,
        Common = 1,
        Rare = 2,
        Epic = 3,
        Legendary = 4,
        NotApplicable = 5,
    }

    interface IPublicPlayerInfo
    {
        /*0x1f2fe14*/ bool get_IsValidProfile();
        /*0x1f30214*/ string get_Id();
        /*0x1f30214*/ string get_Alias();
        /*0x1f30214*/ string get_Avatar();
        /*0x1f2ffc8*/ int get_WeeklyPopCaps();
        /*0x1f2ffc8*/ int get_TowerLevel();
        System.DateTime get_LastLogin();
        /*0x1f2ffc8*/ int get_PvPTrophies();
        /*0x1f30214*/ string get_SafeName();
        /*0x1f30214*/ string GetAliasOrSafeName();
        /*0x1f30ebc*/ void SetValue(Yeti.Data.PublicProfile proto);
    }

    interface IUnitInfo : Yeti.IUnitLevelInfo
    {
        YetiSimCoreLib.Game.UnitId get_UnitId();
        /*0x1f30214*/ string get_Alias();
        /*0x1f30214*/ string get_Name();
        /*0x1f30214*/ string get_PrefabName();
        /*0x1f30214*/ string get_UnitDetailsPrefab();
        /*0x1f30214*/ string get_Portrait();
        /*0x1f2ffc8*/ Yeti.Data.UnitType get_UnitType();
        /*0x1f2ffc8*/ int get_DamageTypeId();
        /*0x1f30214*/ string get_DamageTypeAlias();
        /*0x1f30804*/ float get_Cooldown();
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<int> get_ThreatVectorIds();
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<int> get_AllStrongAgainstUnitIds();
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<int> get_AllWeakAgainstUnitIds();
        int GetDamageForLevel(int level);
        int GetHealthForLevel(int level);
        float GetCustomStatData(int level, string alias);
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<int> get_PointOfLossTipIds();
    }

    interface IUnitLevelInfo
    {
        /*0x1f2ffc8*/ int get_CurrentLevel();
        /*0x1f30214*/ string get_NameLocId();
        /*0x1f30214*/ string get_DescriptionLocId();
        /*0x1f30214*/ string GetLocalizedName();
        /*0x1f30214*/ string GetLocalizedDescription();
    }

    interface IZombieInfo : Yeti.IUnitInfo, Yeti.IUnitLevelInfo
    {
        /*0x1f2ffc8*/ int get_UnlockLevel();
        /*0x1f2fe14*/ bool get_IsUnlocked();
        /*0x1f2fe14*/ bool get_CanBeUnlocked();
        /*0x1f2fe14*/ bool get_IsNewToPlayer();
        /*0x1f2fe14*/ bool get_HasBeenIntroducedToPlayer();
        uint get_Score();
        /*0x1f30214*/ string get_RoleTypeLocId();
        /*0x1f30214*/ Yeti.Data.ZombiePoolDefinition get_FamilyPool();
        /*0x1f2fe14*/ bool get_IsMiniBoss();
        /*0x1f30214*/ string GetLocalizedAdditionalPools();
        /*0x1f30ebc*/ void AddPool(Yeti.Data.ZombiePoolDefinition pool);
        /*0x1f30240*/ Yeti.IUnitStatInfoList UpdateLevelAndCalculateStats(int level);
        /*0x1f30804*/ float get_AttackSpeed();
        /*0x1f30804*/ float get_MovementSpeed();
    }

    interface IPlayerProgressionInfo
    {
        /*0x1f2ffc8*/ int get_CurrentLevel();
    }

    class PlayerProgressionInfo : Yeti.IPlayerProgressionInfo
    {
        /*0x10*/ int <CurrentLevel>k__BackingField;

        /*0x2231d94*/ PlayerProgressionInfo(int currentLevel);
        /*0x22373cc*/ int get_CurrentLevel();
        /*0x22373d4*/ void set_CurrentLevel(int value);
        /*0x22373dc*/ void SetLevel(int level);
    }

    class PublicPlayerInfo : Yeti.IPublicPlayerInfo
    {
        /*0x10*/ bool <IsValidProfile>k__BackingField;
        /*0x18*/ string <Id>k__BackingField;
        /*0x20*/ string <Alias>k__BackingField;
        /*0x28*/ string <Avatar>k__BackingField;
        /*0x30*/ int <WeeklyPopCaps>k__BackingField;
        /*0x34*/ int <TowerLevel>k__BackingField;
        /*0x38*/ System.DateTime <LastLogin>k__BackingField;
        /*0x40*/ int <PvPTrophies>k__BackingField;
        /*0x48*/ string <SafeName>k__BackingField;

        /*0x2237474*/ PublicPlayerInfo(Yeti.Data.PublicProfile proto);
        /*0x223757c*/ PublicPlayerInfo(string personId);
        /*0x22373e4*/ bool get_IsValidProfile();
        /*0x22373ec*/ void set_IsValidProfile(bool value);
        /*0x22373f4*/ string get_Id();
        /*0x22373fc*/ void set_Id(string value);
        /*0x2237404*/ string get_Alias();
        /*0x223740c*/ void set_Alias(string value);
        /*0x2237414*/ string get_Avatar();
        /*0x223741c*/ void set_Avatar(string value);
        /*0x2237424*/ int get_WeeklyPopCaps();
        /*0x223742c*/ void set_WeeklyPopCaps(int value);
        /*0x2237434*/ int get_TowerLevel();
        /*0x223743c*/ void set_TowerLevel(int value);
        /*0x2237444*/ System.DateTime get_LastLogin();
        /*0x223744c*/ void set_LastLogin(System.DateTime value);
        /*0x2237454*/ int get_PvPTrophies();
        /*0x223745c*/ void set_PvPTrophies(int value);
        /*0x2237464*/ string get_SafeName();
        /*0x223746c*/ void set_SafeName(string value);
        /*0x22374a8*/ void SetValue(Yeti.Data.PublicProfile proto);
        /*0x22375dc*/ string GetAliasOrSafeName();
        /*0x22375bc*/ void SetInvalidProfile(string personaId);
    }

    class UnitInfoUtils
    {
        static string UnitDetailsPrefabPrefix = "prefab.UnitDetails_";
        static string UnitNameLocIdPrefix = "UNIT_NAME_";
        static string UnitDescriptionLocIdPrefix = "UNIT_DESCRIPTION_";
        static string UnitFunctionalDescriptionLocIdPrefix = "UNIT_FUNCTION_";
        static string UnitStoryLocIdPrefix = "UNIT_STORY_";
        static string MiniBossAliasSuffix = "mb";

        static /*0x223760c*/ string GetUnitDetailsPrefab(Yeti.Data.UnitDefinition unitDefinition);
        static /*0x2237680*/ string GetMiniBossParentAlias(string alias);
        static /*0x2237710*/ string GetUnitNameLocId(string uppercaseAlias);
        static /*0x223775c*/ string GetUnitDescriptionLocId(string alias);
        static /*0x22377a8*/ string GetUnitFunctionalDescriptionLocId(string alias);
        static /*0x22377f4*/ string GetUnitStoryTextLocId(string alias);
        static /*0x2237840*/ float GetCustomStatData(int level, string alias, Yeti.Data.UnitDefinition unitDef);
        static /*0x22378cc*/ string FormatDescriptionString(string baseDescLocId, Yeti.IUnitStatInfoList stats, RedCrow.UI.UUIF.Localization.ILocalizationManager locManager);
    }

    interface IYetiGroupInfo
    {
        /*0x1f30214*/ string get_GroupId();
        /*0x1f30ebc*/ void add_PropertyChanged(System.Action<string> value);
        /*0x1f30ebc*/ void remove_PropertyChanged(System.Action<string> value);
        /*0x1f30214*/ NimbleBridge_GroupsDetailedGroup get_DetailedGroup();
        /*0x1f30ebc*/ void set_DetailedGroup(NimbleBridge_GroupsDetailedGroup value);
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<string> get_MemberIds();
        /*0x1f30214*/ System.Collections.Generic.IReadOnlyList<string> get_JoinRequests();
        /*0x1f30ebc*/ void SetMemberIds(System.Collections.Generic.IReadOnlyList<string> memberIds);
        /*0x1f30ebc*/ void AddMemberId(string memberId);
        /*0x1f30ebc*/ void RemoveMemberId(string memberId);
        /*0x1f30ebc*/ void SetJoinRequests(System.Collections.Generic.IReadOnlyList<string> joinRequests);
        /*0x1ffc854*/ System.Nullable<NimbleBridge_GroupJoinOptions> get_JoinOptions();
        /*0x1ffc854*/ void set_JoinOptions(System.Nullable<NimbleBridge_GroupJoinOptions> value);
        /*0x1f2fe14*/ bool get_IsCurrent();
        /*0x1f30a84*/ void set_IsCurrent(bool value);
    }

    class YetiGroupInfo : Yeti.IYetiGroupInfo
    {
        /*0x10*/ System.Action<string> PropertyChanged;
        /*0x18*/ string <GroupId>k__BackingField;
        /*0x20*/ NimbleBridge_GroupsDetailedGroup <DetailedGroup>k__BackingField;
        /*0x28*/ System.Collections.Generic.List<string> _memberIds;
        /*0x30*/ System.Collections.Generic.List<string> _joinRequests;
        /*0x38*/ System.Nullable<NimbleBridge_GroupJoinOptions> <JoinOptions>k__BackingField;
        /*0x3d*/ bool _isCurrent;

        /*0x2237e7c*/ YetiGroupInfo(string groupId);
        /*0x2237ccc*/ void add_PropertyChanged(System.Action<string> value);
        /*0x2237d7c*/ void remove_PropertyChanged(System.Action<string> value);
        /*0x2237e2c*/ string get_GroupId();
        /*0x2237e34*/ void set_GroupId(string value);
        /*0x2237e3c*/ NimbleBridge_GroupsDetailedGroup get_DetailedGroup();
        /*0x2237e44*/ void set_DetailedGroup(NimbleBridge_GroupsDetailedGroup value);
        /*0x2237e4c*/ System.Collections.Generic.IReadOnlyList<string> get_MemberIds();
        /*0x2237e54*/ System.Collections.Generic.IReadOnlyList<string> get_JoinRequests();
        /*0x2237e5c*/ System.Nullable<NimbleBridge_GroupJoinOptions> get_JoinOptions();
        /*0x2237e6c*/ void set_JoinOptions(System.Nullable<NimbleBridge_GroupJoinOptions> value);
        /*0x2237f3c*/ void SetMemberIds(System.Collections.Generic.IReadOnlyList<string> memberIds);
        /*0x223808c*/ void AddMemberId(string memberId);
        /*0x223818c*/ void RemoveMemberId(string memberId);
        /*0x2238224*/ void SetJoinRequests(System.Collections.Generic.IReadOnlyList<string> joinRequests);
        /*0x2238328*/ bool get_IsCurrent();
        /*0x2238330*/ void set_IsCurrent(bool value);
    }

    interface IYetiGroupUserInfo
    {
        /*0x1ffc854*/ NimbleBridge_GroupsGroupUser get_GroupUser();
        /*0x1f30214*/ NimbleBridge_GroupsDetailedGroup get_Group();
        /*0x1f30ebc*/ void SetRole(string role);
    }

    class YetiGroupUserInfo : Yeti.IYetiGroupUserInfo
    {
        /*0x10*/ NimbleBridge_GroupsGroupUser _groupUser;
        /*0x40*/ NimbleBridge_GroupsDetailedGroup <Group>k__BackingField;

        /*0x2238364*/ YetiGroupUserInfo(NimbleBridge_GroupsGroupUser user, NimbleBridge_GroupsDetailedGroup group);
        /*0x2238348*/ NimbleBridge_GroupsGroupUser get_GroupUser();
        /*0x223835c*/ NimbleBridge_GroupsDetailedGroup get_Group();
        /*0x22383b4*/ void SetRole(string role);
    }

    class ZombieInfo : Yeti.IZombieInfo, Yeti.IUnitInfo, Yeti.IUnitLevelInfo
    {
        static string AdditionalPoolsLocId = "ZOMBIE_POOLS_ALSO_APPEARS_IN";
        /*0x10*/ string <UnitDetailsPrefab>k__BackingField;
        /*0x18*/ System.Collections.Generic.List<int> _allStrongAgainstUnitIds;
        /*0x20*/ System.Collections.Generic.List<int> _allWeakAgainstUnitIds;
        /*0x28*/ string <Portrait>k__BackingField;
        /*0x30*/ string <RoleTypeLocId>k__BackingField;
        /*0x38*/ int <UnlockLevel>k__BackingField;
        /*0x3c*/ bool <IsUnlocked>k__BackingField;
        /*0x3d*/ bool <CanBeUnlocked>k__BackingField;
        /*0x3e*/ bool <IsNewToPlayer>k__BackingField;
        /*0x3f*/ bool <IsMiniBoss>k__BackingField;
        /*0x40*/ Yeti.Data.UnitDefinition _unitDef;
        /*0x48*/ Yeti.Data.ZombieDetailDefinition _zombieDetailDef;
        /*0x50*/ Yeti.Data.DamageTypeDefinition _damageTypeDef;
        /*0x58*/ System.Collections.Generic.List<Yeti.Data.ZombiePoolDefinition> _pools;
        /*0x60*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _locManager;
        /*0x68*/ Yeti.ZombieLevelInfo _zombieLevelInfo;
        /*0x70*/ Yeti.IZombieDataManager _zombieDataManager;

        /*0x2234834*/ ZombieInfo(Yeti.UnitInfoDataDefinitions dataDefinitions, Yeti.Data.ZombieDetailDefinition zombieDetail, int unlockLevel, RedCrow.UI.UUIF.Localization.ILocalizationManager locManager, Yeti.IZombieDataManager zombieDataManager);
        /*0x2234b80*/ YetiSimCoreLib.Game.UnitId get_UnitId();
        /*0x223471c*/ string get_Alias();
        /*0x22383bc*/ string get_Name();
        /*0x22383d4*/ string get_PrefabName();
        /*0x22383ec*/ string get_UnitDetailsPrefab();
        /*0x22383f4*/ System.Collections.Generic.IReadOnlyList<int> get_ThreatVectorIds();
        /*0x223840c*/ System.Collections.Generic.IReadOnlyList<int> get_AllStrongAgainstUnitIds();
        /*0x2238414*/ System.Collections.Generic.IReadOnlyList<int> get_AllWeakAgainstUnitIds();
        /*0x223841c*/ string get_Portrait();
        /*0x2238424*/ Yeti.Data.ZombiePoolDefinition get_FamilyPool();
        /*0x22384d0*/ Yeti.Data.UnitType get_UnitType();
        /*0x22384e8*/ int get_DamageTypeId();
        /*0x2238500*/ string get_DamageTypeAlias();
        /*0x2238518*/ System.Collections.Generic.IReadOnlyList<int> get_PointOfLossTipIds();
        /*0x2238530*/ string get_NameLocId();
        /*0x2238548*/ string get_DescriptionLocId();
        /*0x2238560*/ string get_RoleTypeLocId();
        /*0x2238568*/ int get_CurrentLevel();
        /*0x2238580*/ float get_Cooldown();
        /*0x2238588*/ float get_AttackSpeed();
        /*0x22385f8*/ float get_MovementSpeed();
        /*0x2238644*/ int get_UnlockLevel();
        /*0x223864c*/ bool get_IsUnlocked();
        /*0x2238654*/ void set_IsUnlocked(bool value);
        /*0x223865c*/ bool get_CanBeUnlocked();
        /*0x2238664*/ void set_CanBeUnlocked(bool value);
        /*0x223866c*/ bool get_IsNewToPlayer();
        /*0x2238674*/ void set_IsNewToPlayer(bool value);
        /*0x223867c*/ bool get_HasBeenIntroducedToPlayer();
        /*0x2238758*/ uint get_Score();
        /*0x2238788*/ Yeti.Data.UnitDefinition get_UnitDef();
        /*0x2238790*/ bool get_IsMiniBoss();
        /*0x2238838*/ void AddPool(Yeti.Data.ZombiePoolDefinition pool);
        /*0x2238890*/ Yeti.IUnitStatInfoList UpdateLevelAndCalculateStats(int level);
        /*0x22388d0*/ int GetDamageForLevel(int level);
        /*0x223892c*/ int GetHealthForLevel(int level);
        /*0x22344e4*/ void SetUnlockedState(bool isUnlocked, bool canBeUnlocked);
        /*0x22385e4*/ float GetCustomStatData(int level, string alias);
        /*0x2238988*/ string GetLocalizedName();
        /*0x2238a48*/ string GetLocalizedDescription();
        /*0x2238428*/ Yeti.Data.ZombiePoolDefinition GetFamilyPool();
        /*0x2238a74*/ string GetLocalizedAdditionalPools();
        /*0x2238de0*/ bool HasAdditionalPools();
        /*0x2238e30*/ string GetLocalizedPoolString(Yeti.Data.ZombiePoolDefinition poolDefinition);
        /*0x223422c*/ void AddWeakAgainstUnitId(int unitId);
        /*0x2234294*/ void AddStrongAgainstUnitId(int unitId);
    }

    class ZombieLevelInfo : Yeti.IUnitLevelInfo
    {
        /*0x10*/ int <CurrentLevel>k__BackingField;
        /*0x18*/ string <NameLocId>k__BackingField;
        /*0x20*/ string <DescriptionLocId>k__BackingField;
        /*0x28*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _locManager;
        /*0x30*/ Yeti.UnitStatInfoList _stats;

        /*0x2238798*/ ZombieLevelInfo(RedCrow.UI.UUIF.Localization.ILocalizationManager localizationManager, string alias);
        /*0x2239100*/ int get_CurrentLevel();
        /*0x2239108*/ void set_CurrentLevel(int value);
        /*0x2239110*/ string get_NameLocId();
        /*0x2239118*/ string get_DescriptionLocId();
        /*0x2239120*/ void SetStats(Yeti.UnitStatInfoList stats);
        /*0x223899c*/ string GetLocalizedName();
        /*0x2238a64*/ string GetLocalizedDescription();
        /*0x22388a4*/ Yeti.UnitStatInfoList SetLevelAndUpdateStats(int level);
    }

    interface IZoogleMapsNavigationInfo : Yeti.IBaseDeeplinkInfo<UnityEngine.Vector3>
    {
        UnityEngine.Vector3 get_Position();
    }

    class ZoogleMapsNavigationInfo : Yeti.BaseDeeplinkInfo<UnityEngine.Vector3>, Yeti.IZoogleMapsNavigationInfo, Yeti.IBaseDeeplinkInfo<UnityEngine.Vector3>
    {
        /*0x2239128*/ ZoogleMapsNavigationInfo();
        /*0x22391a4*/ UnityEngine.Vector3 get_Position();
    }

    enum StatGrowthDependsOn
    {
        BaseLevel = 0,
        TacobilityLevel = 1,
        PlantFoodLevel = 2,
    }

    interface IUnitStatInfo
    {
        /*0x1f30214*/ string get_Alias();
        /*0x1f30214*/ string get_DisplayName();
        /*0x1f30214*/ string get_ValueDisplay();
        /*0x1f30214*/ string get_ValueDeltaDisplay();
        /*0x1f30214*/ string get_Icon();
        /*0x1f30214*/ string get_InlineDisplay();
        /*0x1f2ffc8*/ Yeti.StatGrowthDependsOn get_StatGrowthDependsOn();
    }

    interface IUnitStatInfoList
    {
        /*0x1f30240*/ Yeti.IUnitStatInfo GetStatInfo(int statIndex);
        /*0x1f2ffc8*/ int get_Count();
    }

    class OnStatelyStateEntryEventTrigger : RedCrow.Stately.Core.StatelyBehaviour
    {
        /*0x38*/ Yeti.GameEventManager _gameEventManager;
        /*0x40*/ Yeti.GameEvent<string> _namedEvent;

        /*0x223944c*/ OnStatelyStateEntryEventTrigger();
        /*0x1f30214*/ Yeti.GameEvent get_Event();
        /*0x2239228*/ Yeti.GameEventManager get_GameEventManager();
        /*0x223934c*/ void OnStateStartLoading();
        /*0x2239418*/ void OnStateLeave();
        /*0x2239380*/ void TriggerEvent(Yeti.GameEvent gameEvent);
    }

    interface IPlantPowerCalculator
    {
        /*0x1f2ffc8*/ int CalculatePlantPower();
    }

    class PlantPowerUtils
    {
        static /*0x22394bc*/ int CalculatePlantPower(int currentLevel, int plantFoodLevel, int tacobilityLevel);
        static /*0x1f31f88*/ int CalculateTeamPower<T>(System.Collections.Generic.IReadOnlyList<T> team);
    }

    class PostDataPropagationEventDispatcher
    {
        /*0x10*/ Yeti.IDataPropagationEventDispatcher _dataPropagationEventDispatcher;
        /*0x18*/ bool _initialized;
        /*0x20*/ System.Collections.Generic.Queue<System.Action> _postPropagationEvents;

        /*0x22396c4*/ PostDataPropagationEventDispatcher();
        /*0x22394d4*/ void LazyInit();
        /*0x22395d4*/ void EnqueuePostPropagationEvent(System.Action postPropagationCall);
        /*0x2239634*/ void PropagatePostEvents();
    }

    class ScoringYardSignConfig
    {
        /*0x10*/ System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, int>> _killColumns;

        /*0x223a078*/ ScoringYardSignConfig();
        /*0x223974c*/ bool get_AreSignsEnabled();
        /*0x223979c*/ int get_SmallSignColumn();
        /*0x223988c*/ int get_SmallSignValue();
        /*0x2239980*/ int get_MediumSignColumn();
        /*0x2239a70*/ int get_MediumSignValue();
        /*0x2239b64*/ int get_LargeSignColumn();
        /*0x2239c54*/ int get_LargeSignValue();
        /*0x2239d48*/ void AddKillColumns(System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, int>> killColumns);
        /*0x2239da0*/ int GetScoreForColumn(int column);
    }

    class ScrollControlledTransform : UnityEngine.MonoBehaviour
    {
        /*0x20*/ UnityEngine.UI.ScrollRect _toTrack;
        /*0x28*/ UnityEngine.Vector3 _minPosition;
        /*0x34*/ UnityEngine.Vector3 _maxPosition;

        /*0x223a19c*/ ScrollControlledTransform();
        /*0x223a100*/ void Update();
    }

    class CheatServerCall<TRequest, TResponse> : Yeti.Network.GameServerCall<TRequest, TResponse>
    {
        /*0x1f309e4*/ CheatServerCall();
        /*0x1f30ebc*/ void MarkupError(ref Yeti.YetiError.ErrorBuilder errorBuilder);
    }

    class CheckpointTutorialCounterExpectationNotificationData : Yeti.IServerNotificationData
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, int> <UnmetTutorialFlagExpectations>k__BackingField;

        /*0x223a284*/ CheckpointTutorialCounterExpectationNotificationData();
        /*0x223a1a4*/ System.Collections.Generic.Dictionary<string, int> get_UnmetTutorialFlagExpectations();
        /*0x223a1ac*/ void AddUnmetTutorialCounter(Yeti.Data.CheckpointNotification.Types.TutorialCounterIncorrectNotification notificationData);
    }

    class CheckpointTutorialFlagExpectationNotificationData : Yeti.IServerNotificationData
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, bool> <UnmetTutorialFlagExpectations>k__BackingField;

        /*0x223a3ec*/ CheckpointTutorialFlagExpectationNotificationData();
        /*0x223a30c*/ System.Collections.Generic.Dictionary<string, bool> get_UnmetTutorialFlagExpectations();
        /*0x223a314*/ void AddTutorialFlagExpectation(Yeti.Data.CheckpointNotification.Types.TutorialFlagIncorrectNotification notificationData);
    }

    interface IGameApiResponseContext
    {
    }

    class ClaimRewardContext : Yeti.IGameApiResponseContext
    {
        /*0x10*/ Yeti.Data.RewardCause <RewardCause>k__BackingField;

        /*0x223a47c*/ ClaimRewardContext(Yeti.Data.RewardCause rewardCause);
        /*0x223a474*/ Yeti.Data.RewardCause get_RewardCause();
    }

    interface IServerNotificationData
    {
    }

    interface IServerNotificationsData
    {
        /*0x1ffc854*/ T FindNotification<T>();
        /*0x1f30214*/ System.Collections.Generic.List<T> FindAllNotifications<T>();
        /*0x1f2fec8*/ bool TryGetNotification<T>(ref T t);
    }

    class ServerNotificationsData : Yeti.IServerNotificationsData
    {
        static /*0x0*/ Yeti.IServerNotificationsData Empty;
        /*0x10*/ System.Collections.Generic.List<Yeti.IServerNotificationData> _list;

        static /*0x223a58c*/ ServerNotificationsData();
        /*0x223a504*/ ServerNotificationsData();
        /*0x223a4ac*/ void Add(Yeti.IServerNotificationData notificationData);
        /*0x1ffc854*/ T FindNotification<T>();
        /*0x1f30214*/ System.Collections.Generic.List<T> FindAllNotifications<T>();
        /*0x1f2fec8*/ bool TryGetNotification<T>(ref T t);
    }

    class ClaimRewardResults
    {
        /*0x10*/ System.Collections.Generic.List<Yeti.ClaimRewardResults.RaritySeedResult> <RaritySeedResults>k__BackingField;
        /*0x18*/ System.Collections.Generic.List<string> <PinataIds>k__BackingField;

        /*0x223a600*/ ClaimRewardResults(System.Collections.Generic.List<Yeti.ClaimRewardResults.RaritySeedResult> raritySeedResults, System.Collections.Generic.List<string> pinataIds);
        /*0x223a5f0*/ System.Collections.Generic.List<Yeti.ClaimRewardResults.RaritySeedResult> get_RaritySeedResults();
        /*0x223a5f8*/ System.Collections.Generic.List<string> get_PinataIds();

        class RaritySeedResult
        {
            /*0x10*/ int <Count>k__BackingField;
            /*0x18*/ string <Id>k__BackingField;
            /*0x20*/ Yeti.Rarity <Rarity>k__BackingField;
            /*0x24*/ int <PlantId>k__BackingField;

            /*0x223a664*/ RaritySeedResult(int count, string id, Yeti.Rarity rarity, int plantId);
            /*0x223a644*/ int get_Count();
            /*0x223a64c*/ string get_Id();
            /*0x223a654*/ Yeti.Rarity get_Rarity();
            /*0x223a65c*/ int get_PlantId();
        }
    }

    class ShowUnitDetailsConfig
    {
        /*0x10*/ int UnitId;
        /*0x14*/ bool IsUpgradable;
        /*0x15*/ bool CanDeeplink;
        /*0x16*/ bool IsLoaner;

        /*0x223a6b4*/ ShowUnitDetailsConfig(int unitId, bool isUpgradable, bool canDeeplink, bool isLoaner);
    }

    class ShowZombieDetailsConfig
    {
        /*0x10*/ int <ZombieID>k__BackingField;
        /*0x14*/ int <Level>k__BackingField;

        /*0x222808c*/ ShowZombieDetailsConfig(int zombieId, int level);
        /*0x223a6fc*/ int get_ZombieID();
        /*0x223a704*/ int get_Level();
    }

    interface ISimpleDataPropagator<T> : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30ebc*/ void add_DataUpdated(System.EventHandler<T> value);
        /*0x1f30ebc*/ void remove_DataUpdated(System.EventHandler<T> value);
    }

    class BaseSimpleDataPropagator<T> : Yeti.ISimpleDataPropagator<T>, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x0*/ T _updatedItem;
        /*0x0*/ bool _initialized;
        /*0x0*/ bool <Dirty>k__BackingField;
        /*0x0*/ System.EventHandler<T> DataUpdated;

        /*0x1f309e4*/ BaseSimpleDataPropagator();
        /*0x1f2fe14*/ bool get_Dirty();
        /*0x1f30a84*/ void set_Dirty(bool value);
        /*0x1f30ebc*/ void add_DataUpdated(System.EventHandler<T> value);
        /*0x1f30ebc*/ void remove_DataUpdated(System.EventHandler<T> value);
        /*0x1f309e4*/ void RegisterForDataPropagationEvents();
        /*0x1f309e4*/ void OnInitialize();
        /*0x1f30ebc*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x1f309e4*/ void OnAppReset();
        /*0x1ffc854*/ void SetUpdatedItem(T item);
        /*0x1f309e4*/ void MarkDirty();
        /*0x1f309e4*/ void ClearDirtyFlag();
        /*0x1f309e4*/ void PropagateUpdateData();
    }

    enum MetaMode
    {
        Standard = 0,
        DailyChallenge = 1,
        Sandbox = 2,
        RoadTrip = 3,
    }

    struct DynamicDropBaseConfig
    {
        /*0x10*/ Yeti.Data.DynamicDropDefinition Drop;
        /*0x18*/ int MinSpawnCount;
        /*0x1c*/ int MaxSpawnCount;
    }

    class StartCombatConfig
    {
        /*0x10*/ string <BattleID>k__BackingField;
        /*0x18*/ PvzN3xt.DynamicDifficulty.PlayerDynamicDifficultyInputs <PlayerDifficultyInputs>k__BackingField;
        /*0x20*/ string <BattleName>k__BackingField;
        /*0x28*/ PvzN3xt.Data.BattleSource <BattleSource>k__BackingField;
        /*0x30*/ YetiSimCoreLib.External.GameInitMessageData <GameInitMessageData>k__BackingField;
        /*0x38*/ PvzN3xtBattleGen.BattleGeneratorParameters <BattleGeneratorParameters>k__BackingField;
        /*0x40*/ Yeti.Data.BattleElementaryDefinition <BattleElementaryDefinition>k__BackingField;
        /*0x48*/ PvzN3xtBattleGen.BattleGeneratorReport <BattleGenReport>k__BackingField;
        /*0x50*/ Yeti.Data.PerksAndHazardsConfig <PerksAndHazardsConfig>k__BackingField;
        /*0x58*/ Yeti.BoardAssetInfo <BoardAssetInfo>k__BackingField;
        /*0x68*/ bool <IsTurboAvailable>k__BackingField;
        /*0x70*/ PvzN3xt.Data.TrackLevelIntroNarrative <IntroNarrative>k__BackingField;
        /*0x78*/ Yeti.ScoringYardSignConfig <ScoringYardSignConfig>k__BackingField;
        /*0x80*/ string <PlayerAvatarAssetId>k__BackingField;
        /*0x88*/ bool <ShowPlayerAvatar>k__BackingField;
        /*0x90*/ PvzN3xt.Community.PlayerAvatar.PlayerAvatarCustomizations <PlayerAvatarCustomization>k__BackingField;
        /*0x98*/ bool <IsVaseBreaker>k__BackingField;
        /*0x9c*/ int <TotalVaseZombies>k__BackingField;
        /*0xa0*/ bool <HasElevation>k__BackingField;
        /*0xa4*/ Yeti.MetaMode <MetaMode>k__BackingField;

        /*0x223a890*/ StartCombatConfig();
        /*0x223a70c*/ string get_BattleID();
        /*0x223a714*/ void set_BattleID(string value);
        /*0x223a71c*/ PvzN3xt.DynamicDifficulty.PlayerDynamicDifficultyInputs get_PlayerDifficultyInputs();
        /*0x223a724*/ void set_PlayerDifficultyInputs(PvzN3xt.DynamicDifficulty.PlayerDynamicDifficultyInputs value);
        /*0x223a72c*/ string get_BattleName();
        /*0x223a734*/ void set_BattleName(string value);
        /*0x2236970*/ int get_StageIndex();
        /*0x223a754*/ PvzN3xt.Data.BattleSource get_BattleSource();
        /*0x223a75c*/ void set_BattleSource(PvzN3xt.Data.BattleSource value);
        /*0x223a764*/ YetiSimCoreLib.External.GameInitMessageData get_GameInitMessageData();
        /*0x223a76c*/ void set_GameInitMessageData(YetiSimCoreLib.External.GameInitMessageData value);
        /*0x223a774*/ GameModeConfig get_GameModeConfig();
        /*0x223a798*/ PvzN3xtBattleGen.BattleGeneratorParameters get_BattleGeneratorParameters();
        /*0x223a7a0*/ void set_BattleGeneratorParameters(PvzN3xtBattleGen.BattleGeneratorParameters value);
        /*0x223a7a8*/ Yeti.Data.BattleElementaryDefinition get_BattleElementaryDefinition();
        /*0x223a7b0*/ void set_BattleElementaryDefinition(Yeti.Data.BattleElementaryDefinition value);
        /*0x223a73c*/ Yeti.Data.GameInitState get_GameInitState();
        /*0x223a7b8*/ PvzN3xtBattleGen.BattleGeneratorReport get_BattleGenReport();
        /*0x223a7c0*/ void set_BattleGenReport(PvzN3xtBattleGen.BattleGeneratorReport value);
        /*0x223a7c8*/ Yeti.Data.PerksAndHazardsConfig get_PerksAndHazardsConfig();
        /*0x223a7d0*/ void set_PerksAndHazardsConfig(Yeti.Data.PerksAndHazardsConfig value);
        /*0x223a7d8*/ Yeti.BoardAssetInfo get_BoardAssetInfo();
        /*0x223a7e4*/ void set_BoardAssetInfo(Yeti.BoardAssetInfo value);
        /*0x223a7f0*/ bool get_HideQuitButtons();
        /*0x223a7f8*/ bool get_IsTurboAvailable();
        /*0x223a800*/ void set_IsTurboAvailable(bool value);
        /*0x223a808*/ PvzN3xt.Data.TrackLevelIntroNarrative get_IntroNarrative();
        /*0x223a810*/ void set_IntroNarrative(PvzN3xt.Data.TrackLevelIntroNarrative value);
        /*0x223a818*/ Yeti.ScoringYardSignConfig get_ScoringYardSignConfig();
        /*0x223a820*/ string get_PlayerAvatarAssetId();
        /*0x223a828*/ void set_PlayerAvatarAssetId(string value);
        /*0x223a830*/ bool get_ShowPlayerAvatar();
        /*0x223a838*/ void set_ShowPlayerAvatar(bool value);
        /*0x223a840*/ PvzN3xt.Community.PlayerAvatar.PlayerAvatarCustomizations get_PlayerAvatarCustomization();
        /*0x223a848*/ void set_PlayerAvatarCustomization(PvzN3xt.Community.PlayerAvatar.PlayerAvatarCustomizations value);
        /*0x2236e60*/ bool get_HasNextStage();
        /*0x223a850*/ bool get_IsVaseBreaker();
        /*0x223a858*/ void set_IsVaseBreaker(bool value);
        /*0x223a860*/ int get_TotalVaseZombies();
        /*0x223a868*/ void set_TotalVaseZombies(int value);
        /*0x223a870*/ bool get_HasElevation();
        /*0x223a878*/ void set_HasElevation(bool value);
        /*0x223a880*/ Yeti.MetaMode get_MetaMode();
        /*0x223a888*/ void set_MetaMode(Yeti.MetaMode value);

        class Builder
        {
            /*0x10*/ Yeti.StartCombatConfig _startCombatConfig;
            /*0x18*/ YetiSimCoreLib.External.GameInitMessageData.Builder _gameInitMessageDataBuilder;

            /*0x223a938*/ Builder(Yeti.Data.CombatDatabase combatDatabase, Yeti.Data.WaveDatabase waveDatabase, Yeti.Data.PerksAndHazardsConfig perksAndHazardsConfig, System.Collections.Generic.IEnumerable<Yeti.Data.PlantPerks> plantPerks);
            /*0x223aa34*/ void SetBattleId(string battleId);
            /*0x223aa4c*/ void SetPlayerDifficultyInputs(PvzN3xt.DynamicDifficulty.PlayerDynamicDifficultyInputs difficultyInputs);
            /*0x223aa64*/ void SetBattleGeneratorParameters(PvzN3xtBattleGen.BattleGeneratorParameters battleGeneratorParameters);
            /*0x223aa7c*/ void SetBattleElementaryDefinition(Yeti.Data.BattleElementaryDefinition battleDef);
            /*0x223ae34*/ void AddPlantTeam(System.Collections.Generic.IEnumerable<Yeti.Data.TeamSlotElementaryDefinition> team);
            /*0x223b0f4*/ void AddPlantTeam(System.Collections.Generic.IEnumerable<int> unitIds);
            /*0x223b3a4*/ void SetBattleName(string battleName);
            /*0x223b3bc*/ void SetActivePerksAndHazards(System.Collections.Generic.IEnumerable<Yeti.Data.PerLevelCombatModifier> perLevelCombatModifiers);
            /*0x223b3d4*/ void SetScoringConfig(Yeti.Data.ScoringConfig scoringConfig);
            /*0x223b3ec*/ void SetIntroNarrative(PvzN3xt.Data.TrackLevelIntroNarrative introNarrative);
            /*0x223b404*/ void SetBoard(Yeti.BoardAssetInfo boardAssetInfo);
            /*0x223b420*/ void AddUnitLevel(int unitId, int level);
            /*0x223b438*/ void AddPlantToLoadoutWithDefaultLevels(int unitId);
            /*0x223b450*/ void AddPlantToLoadout(int unitId, int level, int plantFoodLevel, int tacoLevel);
            /*0x223b468*/ void SetShovelEnabled(bool isEnabled);
            /*0x223b484*/ void AddCombatBoost(int unitId, int charges);
            /*0x223b49c*/ Yeti.StartCombatConfig Build();
            /*0x223b4e4*/ void AddPrebattleBoost(int preBattleBoostUnitId);
            /*0x223b4fc*/ void SetCascadeEnabled(PvzN3xt.Data.TrackDefinition track);
            /*0x223b524*/ void SetTurboAvailable(bool available);
            /*0x223b540*/ void SetMetaModeAndSource(Yeti.MetaMode metaMode, PvzN3xt.Data.BattleSource battleSource);
            /*0x223b564*/ void SetBattleGenResults(PvzN3xtBattleGen.BattleGeneratorResults battleGenResults);
            /*0x223b5ac*/ void AddKillColumns(System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, int>> killColumns);
            /*0x223b5cc*/ void SetFallingSunRateOverride(int fallingSunRateBonusMultiplier, int rateRangeMs);
            /*0x223b5e4*/ void MakeBossBattle(int bossUnitId);
            /*0x223b5fc*/ void SetShowPlayerAvatar(bool showPlayerAvatar);
            /*0x223b674*/ void SetPlayerAvatarCustomization(PvzN3xt.Community.PlayerAvatar.PlayerAvatarCustomizations customization);
            /*0x223b68c*/ void AddMergeUnit(int unitId);
            /*0x223b6a4*/ void SetFallingSunSettings(YetiSimCoreLib.External.GameInitMessageData.FallingSunSettings fallingSunSettings);
        }
    }

    class StatelyStateExitEventTrigger : RedCrow.Stately.Core.StatelyBehaviour
    {
        /*0x38*/ Yeti.GameEventManager _gameEventManager;

        /*0x223b858*/ StatelyStateExitEventTrigger();
        /*0x1f30214*/ Yeti.GameEvent get_Event();
        /*0x223b6bc*/ Yeti.GameEventManager get_GameEventManager();
        /*0x223b7e0*/ void OnStateLeave();
        /*0x223b808*/ void Trigger();
    }

    class StoreEntryEventTrigger : Yeti.OnStatelyStateEntryEventTrigger
    {
        /*0x223b8b8*/ StoreEntryEventTrigger();
        /*0x223b860*/ Yeti.GameEvent get_Event();
    }

    class StoreExitEventTrigger : Yeti.StatelyStateExitEventTrigger
    {
        /*0x223b914*/ StoreExitEventTrigger();
        /*0x223b8bc*/ Yeti.GameEvent get_Event();
    }

    class ZombieSpawnPointGizmoComponent : UnityEngine.MonoBehaviour
    {
        static string ZombieSpawnPointIconName = "zombieSpawnPointIcon.png";
        static bool AllowIconScaling = true;
        static float GizmoSphereRadius = 1;

        /*0x223b9dc*/ ZombieSpawnPointGizmoComponent();
        /*0x223b91c*/ void OnDrawGizmos();
    }

    class StreetViewEnvironment : UnityEngine.MonoBehaviour
    {
        static string EnterAnimTrigger = "enter";
        static string ExitAnimTrigger = "exit";
        static string ResetAnimTrigger = "reset";
        /*0x20*/ SimpleAnimation _cameraAnimation;
        /*0x28*/ SimpleAnimation _buildingAnimator;
        /*0x30*/ UnityEngine.AnimationClip _enterAnimClip;
        /*0x38*/ UnityEngine.AnimationClip _exitAnimClip;
        /*0x40*/ UnityEngine.AnimationClip _resetAnimClip;
        /*0x48*/ bool _isLevelUpAnimatorInitialized;

        /*0x223bd60*/ StreetViewEnvironment();
        /*0x223b9e4*/ void Awake();
        /*0x223b9e8*/ void LazyInitializeLevelUpAnimator();
        /*0x223babc*/ void PlayCameraPan();
        /*0x223bb70*/ void PlayLevelUpEnter();
        /*0x223bbb8*/ void PlayLevelUpExit();
        /*0x223bc00*/ void PlayExitThenEnter();
        /*0x223bc90*/ void PlayLevelUpExit(System.Action onComplete);
        /*0x223bcb0*/ System.Collections.IEnumerator PlayLevelUpExitThenComplete(System.Action onComplete);
        /*0x223bb2c*/ void PlayBuildingAnimation(string trigger);

        class <PlayLevelUpExitThenComplete>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.StreetViewEnvironment <>4__this;
            /*0x28*/ System.Action onComplete;

            /*0x223bd38*/ <PlayLevelUpExitThenComplete>d__16(int <>1__state);
            /*0x223bd68*/ void System.IDisposable.Dispose();
            /*0x223bd6c*/ bool MoveNext();
            /*0x223be7c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x223be84*/ void System.Collections.IEnumerator.Reset();
            /*0x223bebc*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class SurveyQuestion
    {
        /*0x10*/ string <QuestionText>k__BackingField;
        /*0x18*/ System.Collections.Generic.List<string> <AnswerOptions>k__BackingField;
        /*0x20*/ Yeti.SurveyQuestion.Type <AnswerType>k__BackingField;
        /*0x24*/ int <DefaultAnswerIndex>k__BackingField;

        /*0x223bf04*/ SurveyQuestion();
        /*0x223bec4*/ string get_QuestionText();
        /*0x223becc*/ void set_QuestionText(string value);
        /*0x223bed4*/ System.Collections.Generic.List<string> get_AnswerOptions();
        /*0x223bedc*/ void set_AnswerOptions(System.Collections.Generic.List<string> value);
        /*0x223bee4*/ Yeti.SurveyQuestion.Type get_AnswerType();
        /*0x223beec*/ void set_AnswerType(Yeti.SurveyQuestion.Type value);
        /*0x223bef4*/ int get_DefaultAnswerIndex();
        /*0x223befc*/ void set_DefaultAnswerIndex(int value);

        enum Type
        {
            Slider = 0,
            Buttons = 1,
        }
    }

    class TutorialStaticDataProvider
    {
        /*0x10*/ PvzN3xt.Data.TutorialConfig _tutorialConfig;
        /*0x18*/ System.Collections.Generic.Dictionary<string, Yeti.TutorialStaticData> _tutorialsByAlias;
        /*0x20*/ System.Collections.Generic.Dictionary<int, Yeti.TutorialStaticData> _tutorialsById;
        /*0x28*/ System.Collections.Generic.Dictionary<string, PvzN3xt.Data.TutorialFlag> _tutorialFlagByAlias;

        /*0x223cae8*/ TutorialStaticDataProvider();
        /*0x223bf94*/ void Initialize(PvzN3xt.Data.TutorialConfig tutorialConfig);
        /*0x223c920*/ bool TryGetTutorialStaticData(string tutorialAlias, ref Yeti.TutorialStaticData tutorial);
        /*0x223c988*/ bool TryGetTutorialStaticData(int tutorialId, ref Yeti.TutorialStaticData tutorial);
        /*0x2236664*/ int GetTutorialId(string tutorialAlias);
        /*0x223c9fc*/ int GetFlagId(string flagAlias);
        /*0x223cad0*/ System.Collections.Generic.IReadOnlyList<PvzN3xt.Data.Tutorial> GetAllTutorialScripts();
    }

    class TutorialStaticData
    {
        /*0x10*/ int <Id>k__BackingField;
        /*0x18*/ string <Alias>k__BackingField;
        /*0x20*/ bool <HasCheckpoint>k__BackingField;
        /*0x24*/ int <Checkpoint>k__BackingField;
        /*0x28*/ bool <IsTiedToSpecifiedBattle>k__BackingField;

        /*0x223c5ac*/ TutorialStaticData(PvzN3xt.Data.Tutorial tutorial);
        /*0x223cc18*/ int get_Id();
        /*0x223cc20*/ string get_Alias();
        /*0x223cc28*/ bool get_HasCheckpoint();
        /*0x223cc30*/ int get_Checkpoint();
        /*0x223cc38*/ bool get_IsTiedToSpecifiedBattle();
    }

    interface IUIDatabaseProvider
    {
        /*0x1f30ebc*/ void SetDataOnAssetLoaded(Yeti.UIMetaData uiMetaData);
        /*0x1f30ebc*/ void SetDataOnAssetLoaded(Yeti.GlobalColorConfig globalColorConfig);
        /*0x1f30214*/ Yeti.GlobalColorConfig GetGlobalColorConfig();
        /*0x1f30214*/ System.Collections.Generic.List<PvzN3xt.PlayerIdentity.AuthenticatorMetaData> GetAuthenticatorMetaData();
        PvzN3xt.PlayerIdentity.AuthenticatorMetaData GetAuthenticatorMetaData(PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType authenticatorType);
        /*0x1ffc854*/ Yeti.SettingsMetaData GetSettingsMetaData();
        Yeti.BadgeMetaData GetBadgeMetaData(Yeti.BadgeKey key);
        UnityEngine.Color GetGlobalColorForName(string colorName);
        /*0x1f30214*/ System.Collections.Generic.List<string> GenerateValidPlayerAvatars();
        Yeti.DooberTypeMetaData GetDooberMetadataForType(Yeti.DooberType type);
        /*0x1f2fe40*/ bool ContainsDooberMetaDataForType(Yeti.DooberType type);
        /*0x1f2fe80*/ bool TryGetToastMetaDataForType(PvzN3xt.UI.Toast.ToastType type, ref PvzN3xt.UI.Toast.ToastMetaData metaData);
        Yeti.GameLandingMetaData get_GameLandingMetaData();
        /*0x1f30214*/ Yeti.RoadTripMetaData get_RoadTripMetaData();
        Yeti.ScriptedActionMetaData get_ScriptedActionMetaData();
        /*0x1f30214*/ System.Collections.Generic.List<Yeti.InAppLinkingMetaData> get_InAppLinkingMetaData();
    }

    class UIDatabaseProvider : Yeti.IUIDatabaseProvider
    {
        /*0x10*/ Yeti.GlobalColorConfig _globalColorConfig;
        /*0x18*/ Yeti.UIMetaData _uiMetaData;

        static /*0x223d520*/ System.Predicate<PvzN3xt.PlayerIdentity.AuthenticatorDisplayString> StateFinder(PvzN3xt.PlayerIdentity.AuthenticatorState authenticatorState);
        static /*0x223ce48*/ System.Predicate<Yeti.BadgeMetaData> BadgeFinder(Yeti.BadgeKey key);
        static /*0x223cd08*/ System.Predicate<PvzN3xt.PlayerIdentity.AuthenticatorMetaData> AuthenticatorFinder(PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType authenticatorType);
        static /*0x223cf74*/ System.Predicate<Yeti.ColorConfig> ColorFinder(string modelName);
        /*0x223d5e8*/ UIDatabaseProvider();
        /*0x223cc40*/ void SetDataOnAssetLoaded(Yeti.UIMetaData uiMetaData);
        /*0x223cc48*/ void SetDataOnAssetLoaded(Yeti.GlobalColorConfig globalColorConfig);
        /*0x223cc50*/ Yeti.GlobalColorConfig GetGlobalColorConfig();
        /*0x223cc58*/ System.Collections.Generic.List<PvzN3xt.PlayerIdentity.AuthenticatorMetaData> GetAuthenticatorMetaData();
        /*0x223cc70*/ PvzN3xt.PlayerIdentity.AuthenticatorMetaData GetAuthenticatorMetaData(PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType authenticatorType);
        /*0x223cdb0*/ Yeti.SettingsMetaData GetSettingsMetaData();
        /*0x223cdc8*/ Yeti.BadgeMetaData GetBadgeMetaData(Yeti.BadgeKey key);
        /*0x223cef0*/ UnityEngine.Color GetGlobalColorForName(string colorName);
        /*0x223d030*/ System.Collections.Generic.List<string> GenerateValidPlayerAvatars();
        /*0x223d154*/ bool ContainsDooberMetaDataForType(Yeti.DooberType type);
        /*0x223d23c*/ bool TryGetToastMetaDataForType(PvzN3xt.UI.Toast.ToastType type, ref PvzN3xt.UI.Toast.ToastMetaData metaData);
        /*0x223d3a8*/ Yeti.DooberTypeMetaData GetDooberMetadataForType(Yeti.DooberType type);
        /*0x223d4b8*/ Yeti.GameLandingMetaData get_GameLandingMetaData();
        /*0x223d4d8*/ Yeti.RoadTripMetaData get_RoadTripMetaData();
        /*0x223d4f0*/ Yeti.ScriptedActionMetaData get_ScriptedActionMetaData();
        /*0x223d508*/ System.Collections.Generic.List<Yeti.InAppLinkingMetaData> get_InAppLinkingMetaData();

        class <>c__DisplayClass11_0
        {
            /*0x10*/ Yeti.DooberType type;

            /*0x223d234*/ <>c__DisplayClass11_0();
            /*0x223d5f0*/ bool <ContainsDooberMetaDataForType>b__0(Yeti.DooberTypeMetaData x);
        }

        class <>c__DisplayClass12_0
        {
            /*0x10*/ PvzN3xt.UI.Toast.ToastType type;

            /*0x223d3a0*/ <>c__DisplayClass12_0();
            /*0x223d604*/ bool <TryGetToastMetaDataForType>b__0(PvzN3xt.UI.Toast.ToastMetaData x);
        }

        class <>c__DisplayClass13_0
        {
            /*0x10*/ Yeti.DooberType type;

            /*0x223d4b0*/ <>c__DisplayClass13_0();
            /*0x223d618*/ bool <GetDooberMetadataForType>b__0(Yeti.DooberTypeMetaData x);
        }

        class <>c__DisplayClass22_0
        {
            /*0x10*/ PvzN3xt.PlayerIdentity.AuthenticatorState authenticatorState;

            /*0x223d5c8*/ <>c__DisplayClass22_0();
            /*0x223d62c*/ bool <StateFinder>b__0(PvzN3xt.PlayerIdentity.AuthenticatorDisplayString x);
        }

        class <>c__DisplayClass23_0
        {
            /*0x10*/ Yeti.BadgeKey key;

            /*0x223d5d0*/ <>c__DisplayClass23_0();
            /*0x223d63c*/ bool <BadgeFinder>b__0(Yeti.BadgeMetaData x);
        }

        class <>c__DisplayClass24_0
        {
            /*0x10*/ PvzN3xt.PlayerIdentity.SecondaryAuthenticatorType authenticatorType;

            /*0x223d5d8*/ <>c__DisplayClass24_0();
            /*0x223d664*/ bool <AuthenticatorFinder>b__0(PvzN3xt.PlayerIdentity.AuthenticatorMetaData x);
        }

        class <>c__DisplayClass25_0
        {
            /*0x10*/ string modelName;

            /*0x223d5e0*/ <>c__DisplayClass25_0();
            /*0x223d678*/ bool <ColorFinder>b__0(Yeti.ColorConfig x);
        }
    }

    struct BadgeMetaData
    {
        /*0x10*/ Yeti.BadgeKey _key;
        /*0x18*/ bool _isBadgeActive;
        /*0x19*/ bool _isSpecialBadgeActive;
        /*0x1a*/ bool _isBadgeCountActive;
        /*0x1c*/ Yeti.BadgePriority _priority;

        /*0x223d68c*/ Yeti.BadgeKey get_Key();
        /*0x223d694*/ bool get_IsBadgeActive();
        /*0x223d69c*/ bool get_IsSpecialBadgeActive();
        /*0x223d6a4*/ bool get_IsBadgeCountActive();
        /*0x223d6ac*/ Yeti.BadgePriority get_Priority();
    }

    struct BadgeKey
    {
        /*0x10*/ Yeti.BadgeSource _source;
        /*0x14*/ Yeti.BadgeCondition _condition;

        /*0x2224440*/ BadgeKey(Yeti.BadgeSource source, Yeti.BadgeCondition condition);
        /*0x223d6b4*/ Yeti.BadgeSource get_Source();
        /*0x223d6bc*/ Yeti.BadgeCondition get_Condition();
        /*0x223d6c4*/ string ToString();
    }

    enum DooberType
    {
        Unknown = 0,
        Beakers = 1,
        Clues = 2,
        Coins = 3,
        Gems = 4,
        Happiness = 5,
        HardHats = 6,
        HotSauce = 7,
        PopCaps = 8,
        Spins = 9,
        Stars = 10,
        Tacos = 11,
        Glass = 12,
        Seeds = 13,
        Laurels = 14,
        PlantFood = 15,
    }

    struct DooberTypeMetaData
    {
        /*0x10*/ Yeti.DooberType Type;
        /*0x18*/ string FullSpriteName;
        /*0x20*/ Yeti.YetiAudioEvent OnFirstDooberStartAudioEvent;
        /*0x28*/ Yeti.YetiAudioEvent OnFirstDooberLandAudioEvent;
        /*0x30*/ Yeti.YetiAudioEvent OnLastDooberLandAudioEvent;
    }

    struct GameLandingMetaData
    {
        /*0x10*/ string SoundBank;
        /*0x18*/ Yeti.YetiAudioEvent PlayMusicId;
        /*0x20*/ Yeti.YetiAudioEvent StopMusicId;
        /*0x28*/ string AmbienceSoundBank;
        /*0x30*/ Yeti.YetiAudioEvent PlayAmbienceId;
        /*0x38*/ Yeti.YetiAudioEvent StopAmbienceId;
        /*0x40*/ Yeti.YetiAudioSwitchGroupReference BiomeSwitchGroup;
        /*0x48*/ string TownMapSoundBank;
        /*0x50*/ Yeti.YetiAudioEvent TownMapPlayMusicId;
        /*0x58*/ Yeti.YetiAudioEvent TownMapStopMusicId;
        /*0x60*/ string TownMapAmbienceSoundBank;
        /*0x68*/ Yeti.YetiAudioEvent TownMapPlayAmbienceId;
        /*0x70*/ Yeti.YetiAudioEvent TownMapStopAmbienceId;
    }

    struct ColorConfig
    {
        /*0x10*/ bool IsGloballyAvailableColorModel;
        /*0x18*/ string ModelName;
        /*0x20*/ UnityEngine.Color Color;
    }

    class GlobalColorConfig : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<Yeti.ColorConfig> _colorConfig;

        /*0x223d788*/ GlobalColorConfig();
        /*0x223d780*/ System.Collections.Generic.List<Yeti.ColorConfig> get_ColorConfig();
    }

    class InAppLinkingSettingsMetadata
    {
        /*0x10*/ System.Collections.Generic.List<Yeti.InAppLinkingSettingsMetadata.Group> Groups;

        /*0x223d810*/ InAppLinkingSettingsMetadata();

        class Group
        {
            /*0x10*/ string DataProvider;
            /*0x18*/ System.Collections.Generic.List<string> Keys;

            /*0x223d898*/ Group();
        }
    }

    enum ButtonType
    {
        Press = 0,
        LongPress = 1,
    }

    struct Parameters
    {
        /*0x10*/ bool _isCustomValue;
        /*0x18*/ string _keyToSteal;
        /*0x20*/ string _keyToOverride;

        /*0x223d920*/ string get_KeyToSteal();
        /*0x223d928*/ string get_KeyToOverride();
        /*0x223d930*/ bool get_IsCustomValue();
    }

    struct ScreenTarget
    {
        /*0x10*/ string ScreenNavAction;
        /*0x18*/ string ScreenName;
        /*0x20*/ System.Collections.Generic.List<Yeti.Parameters> Parameters;
    }

    class InAppLinkingMetaData
    {
        /*0x10*/ string path;
        /*0x18*/ System.Collections.Generic.List<Yeti.ScreenTarget> _screenTargets;

        /*0x223d948*/ InAppLinkingMetaData();
        /*0x223d938*/ string get_Path();
        /*0x223d940*/ System.Collections.Generic.List<Yeti.ScreenTarget> get_ScreenTargets();
    }

    struct PlayerAvatarMetaData
    {
        /*0x10*/ string Name;
        /*0x18*/ UnityEngine.Sprite Icon;
        /*0x20*/ bool IsEnabled;
    }

    class RoadTripMetaData
    {
        /*0x10*/ string MusicSoundBank;
        /*0x18*/ Yeti.YetiAudioEvent PlayMusicId;
        /*0x20*/ Yeti.YetiAudioEvent StopMusicId;
        /*0x28*/ string AmbienceSoundBank;
        /*0x30*/ Yeti.YetiAudioEvent PlayAmbienceId;
        /*0x38*/ Yeti.YetiAudioEvent StopAmbienceId;
        /*0x40*/ Yeti.YetiAudioSwitchReference DefaultSwitch;

        /*0x223d950*/ RoadTripMetaData();
    }

    struct ScriptedActionMetaData
    {
        /*0x10*/ float TalkingHeadMinWaitTime;
        /*0x14*/ float OverlayTextMinWaitTime;
    }

    struct SettingsMetaData
    {
        /*0x10*/ string EulaLinkId;
        /*0x18*/ string PrivacyLinkId;
    }

    class UIMetaData : UnityEngine.ScriptableObject
    {
        /*0x18*/ System.Collections.Generic.List<PvzN3xt.PlayerIdentity.AuthenticatorMetaData> _n3xtAuthenticatorMetaData;
        /*0x20*/ Yeti.SettingsMetaData _settingsMetaData;
        /*0x30*/ System.Collections.Generic.List<Yeti.BadgeMetaData> _badgeMetaData;
        /*0x38*/ System.Collections.Generic.List<Yeti.PlayerAvatarMetaData> _playerAvatarMetaData;
        /*0x40*/ System.Collections.Generic.List<Yeti.DooberTypeMetaData> _dooberTypeMetaData;
        /*0x48*/ System.Collections.Generic.List<PvzN3xt.UI.Toast.ToastMetaData> _toastMetaData;
        /*0x50*/ Yeti.GameLandingMetaData _gameLandingMetaData;
        /*0xb8*/ Yeti.RoadTripMetaData _roadTripMetaData;
        /*0xc0*/ Yeti.ScriptedActionMetaData _scriptedActionMetaData;
        /*0xc8*/ System.Collections.Generic.List<Yeti.InAppLinkingMetaData> _inAppLinkingMetaData;
        /*0xd0*/ Yeti.InAppLinkingSettingsMetadata _inAppLinkingSettingsMetaData;

        /*0x223d9bc*/ UIMetaData();
        /*0x223d958*/ System.Collections.Generic.List<PvzN3xt.PlayerIdentity.AuthenticatorMetaData> get_N3xtAuthenticatorMetaData();
        /*0x223d960*/ Yeti.SettingsMetaData get_SettingsMetaData();
        /*0x223d96c*/ System.Collections.Generic.List<Yeti.BadgeMetaData> get_BadgeMetaData();
        /*0x223d974*/ System.Collections.Generic.List<Yeti.PlayerAvatarMetaData> get_PlayerAvatarMetaData();
        /*0x223d97c*/ System.Collections.Generic.List<Yeti.DooberTypeMetaData> get_DooberTypeMetaData();
        /*0x223d984*/ System.Collections.Generic.List<PvzN3xt.UI.Toast.ToastMetaData> get_ToastMetaData();
        /*0x223d98c*/ Yeti.GameLandingMetaData get_GameLandingMetaData();
        /*0x223d99c*/ Yeti.RoadTripMetaData get_RoadTripMetaData();
        /*0x223d9a4*/ Yeti.ScriptedActionMetaData get_ScriptedActionMetaData();
        /*0x223d9ac*/ System.Collections.Generic.List<Yeti.InAppLinkingMetaData> get_InAppLinkingMetaData();
        /*0x223d9b4*/ Yeti.InAppLinkingSettingsMetadata get_InAppLinkingSettingsMetadata();
    }

    class UnitDetailsDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.ICombatUnitDefinitionProvider _combatUnitDefinitionProvider;
        /*0x18*/ Yeti.IGlobalDataTransfer _dataTransfer;
        /*0x20*/ Yeti.INavigationService _navigationService;

        static /*0x223e07c*/ UnitDetailsDebugManager();
        /*0x223e074*/ UnitDetailsDebugManager();
        /*0x223da44*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x223dd50*/ void ShowZombieUnitDetails(int unitId);
        /*0x223dedc*/ void ShowPlantUnitDetails(int unitId);
        /*0x223e070*/ void OnAppReset();
    }

    struct UnitInfoDataDefinitions
    {
        /*0x10*/ Yeti.Data.UnitDefinition UnitDefinition;
        /*0x18*/ Yeti.Data.DamageTypeDefinition DamageTypeDefinition;

        static /*0x2234750*/ Yeti.UnitInfoDataDefinitions Create(Yeti.Data.UnitDefinition unit, Yeti.IDamageTypeDefinitionProvider damageTypes);
        /*0x223e0fc*/ UnitInfoDataDefinitions(Yeti.Data.UnitDefinition unitDefinition, Yeti.Data.DamageTypeDefinition damageTypeDefinition);
    }

    class UnitIntroDebugManager : CapitalGames.IInitializable, CapitalGames.ILifecycleAware, Yeti.IUnitIntroCallback
    {
        static /*0x0*/ EA.Debugging.Menu.DebugMenu DebugMenuRegistry;
        /*0x10*/ Yeti.UnitIntroController _unitIntroController;
        /*0x18*/ Yeti.ICombatUnitDefinitionProvider _combatUnitDefinitionProvider;
        /*0x20*/ PvzN3xt.Nvs.INamedValueLayerOverrideController _nvsOverrideController;
        /*0x28*/ System.Collections.Generic.List<int> _unitIds;
        /*0x30*/ bool _isUnitIntroRunning;

        static /*0x223eae0*/ UnitIntroDebugManager();
        /*0x223ea58*/ UnitIntroDebugManager();
        /*0x223e12c*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x223e4b0*/ void SetUnitIntroEnabled(bool enabled);
        /*0x223e5c8*/ string CreateUnitIntroList();
        /*0x223e984*/ void PlayUnitIntro();
        /*0x223e9b4*/ void AddUnitToUnitIntro(int unitId);
        /*0x223ea4c*/ void OnAppReset();
        /*0x223ea50*/ void OnUnitIntroComplete(System.Collections.Generic.List<int> unitIds);
    }

    class UnitStatDefinitionProvider
    {
        static string NegativeDeltaValueFormatSuffix = "_NEGATIVE";
        /*0x10*/ System.Collections.Generic.IReadOnlyDictionary<string, Yeti.Data.PlantStatDefinition> _statDetailsMap;
        /*0x18*/ Yeti.Data.PlantStatDefinition _unknownStatDefinition;

        /*0x223ec9c*/ UnitStatDefinitionProvider();
        /*0x223eb60*/ Yeti.Data.PlantStatDefinition GetStatDefinition(string statAlias);
        /*0x223eb94*/ void LazyInitStatDetails();
        /*0x223ebd8*/ Yeti.Data.PlantStatDefinition FindUnitStatDefinition(string statAlias);
    }

    class UnitStatInfo : Yeti.IUnitStatInfo
    {
        /*0x10*/ Yeti.Data.PlantStatDefinition <Definition>k__BackingField;
        /*0x18*/ string <Alias>k__BackingField;
        /*0x20*/ string <DisplayName>k__BackingField;
        /*0x28*/ string <ValueDisplay>k__BackingField;
        /*0x30*/ string <ValueDeltaDisplay>k__BackingField;
        /*0x38*/ string <InlineDisplay>k__BackingField;
        /*0x40*/ Yeti.StatGrowthDependsOn <StatGrowthDependsOn>k__BackingField;

        /*0x223ee5c*/ UnitStatInfo();
        /*0x223edd4*/ Yeti.Data.PlantStatDefinition get_Definition();
        /*0x223eddc*/ void set_Definition(Yeti.Data.PlantStatDefinition value);
        /*0x223ede4*/ string get_Alias();
        /*0x223edec*/ void set_Alias(string value);
        /*0x223edf4*/ string get_DisplayName();
        /*0x223edfc*/ void set_DisplayName(string value);
        /*0x223ee04*/ string get_ValueDisplay();
        /*0x223ee0c*/ void set_ValueDisplay(string value);
        /*0x223ee14*/ string get_ValueDeltaDisplay();
        /*0x223ee1c*/ void set_ValueDeltaDisplay(string value);
        /*0x223ee24*/ string get_Icon();
        /*0x223ee3c*/ string get_InlineDisplay();
        /*0x223ee44*/ void set_InlineDisplay(string value);
        /*0x223ee4c*/ Yeti.StatGrowthDependsOn get_StatGrowthDependsOn();
        /*0x223ee54*/ void set_StatGrowthDependsOn(Yeti.StatGrowthDependsOn value);
    }

    class UnitStatInfoFactory
    {
        static int DisplayDigits = 3;
        static int DecimalPrecision = 1;
        /*0x10*/ RedCrow.UI.UUIF.Localization.ILocalizationManager _localizationService;
        /*0x18*/ Yeti.UnitStatDefinitionProvider _unitStatDefinitionProvider;
        /*0x20*/ Yeti.ICompactNumberFormatManager _compactNumberFormatManager;

        static /*0x223f830*/ Yeti.UnitStatInfoFactory.StatValues GetNumberValueForLevel(string statAlias, Yeti.IUnitInfo unitInfo, int level);
        static /*0x223ffdc*/ Yeti.UnitStatInfoFactory.StatValues GetStatByAlias(int abilityLevel, Yeti.IUnitInfo unitInfo, string attributeAlias);
        static /*0x2241ba0*/ Yeti.UnitStatInfoFactory.StatValues GetStatRange(int abilityLevel, Yeti.IUnitInfo unitInfo, string minStatKey, string maxStatKey);
        /*0x2241bf0*/ UnitStatInfoFactory();
        /*0x223ee64*/ Yeti.IUnitStatInfo Create(string statAlias, Yeti.IUnitInfo unitInfo, int level);
        /*0x223ee78*/ Yeti.IUnitStatInfo Update(Yeti.IUnitStatInfo iUnitStatInfo, string statAlias, Yeti.IUnitInfo unitInfo, int level);
        /*0x223f080*/ Yeti.StatGrowthDependsOn ConvertStatGrowthStatToEnum(string statDefinitionStatGrowthDependsOn);
        /*0x223f06c*/ Yeti.Data.PlantStatDefinition GetStatDefinition(string statAlias);
        /*0x223f13c*/ string GetValueDisplay(string statAlias, Yeti.Data.PlantStatDefinition config, Yeti.IUnitInfo plantInfo, int level);
        /*0x223f3dc*/ string GetValueDeltaDisplay(string statAlias, Yeti.Data.PlantStatDefinition config, Yeti.IUnitInfo plantInfo, int level);
        /*0x223f75c*/ string GetInlineDisplay(string valueDisplay, string valueDeltaDisplay, Yeti.Data.PlantStatDefinition config);

        struct StatValues
        {
            /*0x10*/ float Min;
            /*0x14*/ float Max;

            static /*0x223ffd4*/ Yeti.UnitStatInfoFactory.StatValues op_Implicit(float value);
            static /*0x2241bf8*/ float op_Implicit(Yeti.UnitStatInfoFactory.StatValues value);
            static /*0x223fe60*/ Yeti.UnitStatInfoFactory.StatValues op_Subtraction(Yeti.UnitStatInfoFactory.StatValues x, Yeti.UnitStatInfoFactory.StatValues y);
            /*0x2241be8*/ StatValues(float min, float max);
            /*0x223fe6c*/ Yeti.UnitStatInfoFactory.StatValues get_Round();
            /*0x223ff6c*/ Yeti.UnitStatInfoFactory.StatValues get_Abs();
        }
    }

    class UnitStatInfoList : Yeti.IUnitStatInfoList
    {
        static /*0x0*/ System.Collections.Generic.Queue<Yeti.IUnitStatInfo> StatsInfoCache;
        /*0x10*/ Yeti.UnitStatInfoFactory _statInfoFactory;
        /*0x18*/ System.Collections.Generic.List<Yeti.IUnitStatInfo> _stats;
        /*0x20*/ Yeti.IUnitInfo _unitInfo;
        /*0x28*/ System.Collections.Generic.IReadOnlyList<string> _statAliases;
        /*0x30*/ int _level;

        static /*0x2242198*/ UnitStatInfoList();
        /*0x2241c44*/ UnitStatInfoList(Yeti.IUnitInfo unitInfo, System.Collections.Generic.IReadOnlyList<string> statAliases, int level);
        /*0x2241bfc*/ int get_Count();
        /*0x2242124*/ void Update(int level);
        /*0x224212c*/ Yeti.IUnitStatInfo GetStatInfo(int statIndex);
        /*0x2241dbc*/ void Refresh();
    }

    class YetiDebugMenuExtensions
    {
        static /*0x2242230*/ void InvokeSimpleCommand(EA.Debugging.Menu.DebugMenu debugMenuRegistry, string cheatName);
        static /*0x1ffc854*/ void InvokeParameterizedCommand<T>(EA.Debugging.Menu.DebugMenu debugMenuRegistry, string cheatName, T value);
    }

    class ZoogleMapCameraController : UnityEngine.MonoBehaviour
    {
        /*0x20*/ Yeti.GameEventManager _gameEventManager;
        /*0x28*/ Yeti.ZoogleMapCameraFocuser _zoogleMapCameraFocuser;
        /*0x30*/ float dragMultiplier;
        /*0x34*/ float leftClamp;
        /*0x38*/ float rightClamp;
        /*0x3c*/ float easeDuration;
        /*0x40*/ UnityEngine.Transform _transform;
        /*0x48*/ float _currentXVelocity;
        /*0x50*/ DG.Tweening.Sequence _scrollSequence;
        /*0x58*/ System.Action<UnityEngine.Vector3> _onBeginMapDragDelta;
        /*0x60*/ System.Action _resetSequence;
        /*0x68*/ System.Collections.Generic.List<DG.Tweening.Tween> _allTweensCreated;

        /*0x2242c6c*/ ZoogleMapCameraController();
        /*0x2242330*/ void Awake();
        /*0x224241c*/ void OnEnable();
        /*0x2242654*/ void OnDisable();
        /*0x22427d0*/ void ResetSequence();
        /*0x22428ec*/ void OnBeginMapDragDelta(UnityEngine.Vector3 vec);
        /*0x2242a0c*/ bool HandleOutOfBounds(float newHorizontalPosition);
        /*0x2242b78*/ void CreateAndPlayClampTween(float newHorizontalPosition, float clampTo);
        /*0x2242a40*/ DG.Tweening.Core.TweenerCore<float, float, DG.Tweening.Plugins.Options.FloatOptions> CreateScrollTween(float newHorizontalPosition, DG.Tweening.Ease ease);
        /*0x2242d04*/ float <CreateScrollTween>b__19_0();
        /*0x2242d1c*/ void <CreateScrollTween>g__updateCameraPosition|19_1(float newX);
    }

    class ZoogleMapCameraFocuser
    {
        static string ZoogleMapTargetPrefix = "ZOOGLE_MAP_TARGET_";
        static float DefaultCameraFocusDuration = 1;
        /*0x10*/ Yeti.CameraManager _cameraManager;
        /*0x18*/ PvzN3xt.Tutorial.ITutorialTargetingSystem _tutorialTargetingSystem;
        /*0x20*/ DG.Tweening.Tween _tween;
        /*0x28*/ bool <IsFocusing>k__BackingField;
        /*0x30*/ System.Action OnStartFocusingCamera;
        /*0x38*/ System.Action OnStopFocusingCamera;

        /*0x22433a0*/ ZoogleMapCameraFocuser();
        /*0x2242d5c*/ bool get_IsFocusing();
        /*0x2242d64*/ void set_IsFocusing(bool value);
        /*0x224251c*/ void add_OnStartFocusingCamera(System.Action value);
        /*0x2242698*/ void remove_OnStartFocusingCamera(System.Action value);
        /*0x22425b8*/ void add_OnStopFocusingCamera(System.Action value);
        /*0x2242734*/ void remove_OnStopFocusingCamera(System.Action value);
        /*0x2242d6c*/ void FocusCameraToTutorialTarget(string targetId, float cameraFocusDuration);
        /*0x2243238*/ void SetCameraPositionToTutorialTarget(string targetId);
        /*0x2243378*/ UnityEngine.Transform GetBlockTransform(string blockConfigAlias);
        /*0x2242f6c*/ void FocusCameraToPosition(UnityEngine.Vector3 position, float cameraFocusDuration);
        /*0x2242e2c*/ UnityEngine.Transform GetTargetTransform(string blockConfigAlias);
        /*0x2243384*/ void OnTweenStart();
        /*0x2243358*/ void OnTweenComplete();

        class <>c__DisplayClass18_0
        {
            /*0x10*/ UnityEngine.Vector3 cameraPosition;
            /*0x20*/ UnityEngine.Transform cameraTransform;

            /*0x224337c*/ <>c__DisplayClass18_0();
            /*0x22433a8*/ float <FocusCameraToPosition>b__0();
            /*0x22433b0*/ void <FocusCameraToPosition>g__updateCameraPosition|1(float newX);
        }
    }

    class AndroidNativeAlertWrapper : Yeti.INativeAlertWrapper
    {
        /*0x2243650*/ AndroidNativeAlertWrapper();
        /*0x22433d0*/ void DisplayAlert(string title, string message, string buttonText, System.Action onClosed);

        class AndroidActionProxy : UnityEngine.AndroidJavaProxy
        {
            /*0x20*/ System.Action _action;

            /*0x2243658*/ AndroidActionProxy(System.Action action);
            /*0x22436e4*/ void onClick(UnityEngine.AndroidJavaObject obj, int buttonId);
        }

        class Alert
        {
            static string AlertBuilderClass = "android/app/AlertDialog$Builder";
            static string SetMessageMethod = "setMessage";
            static string SetCancelableMethod = "setCancelable";
            static string SetTitleMethod = "setTitle";
            static string SetPositiveButtonMethod = "setPositiveButton";
            static string CreateMethod = "create";
            static string ShowMethod = "show";
            /*0x10*/ UnityEngine.AndroidJavaObject _activity;
            /*0x18*/ string _title;
            /*0x20*/ string _message;
            /*0x28*/ string _button;
            /*0x30*/ System.Action _onClosed;

            /*0x22435c0*/ Alert(UnityEngine.AndroidJavaObject activity, string title, string message, string button, System.Action onClosed);
            /*0x2243700*/ void Display();
        }
    }

    class EditorNativeAlertAlertWrapper : Yeti.INativeAlertWrapper
    {
        /*0x2243d18*/ EditorNativeAlertAlertWrapper();
        /*0x2243b78*/ void DisplayAlert(string title, string message, string buttonText, System.Action onClosed);
    }

    interface INativeAlertWrapper
    {
        /*0x1f31134*/ void DisplayAlert(string title, string message, string buttonText, System.Action onClosed);
    }

    class IosNativeAlertCallbackReceiver : UnityEngine.MonoBehaviour
    {
        /*0x20*/ System.Action OnNextAlertClosed;

        /*0x2243e8c*/ IosNativeAlertCallbackReceiver();
        /*0x2243d20*/ void add_OnNextAlertClosed(System.Action value);
        /*0x2243dbc*/ void remove_OnNextAlertClosed(System.Action value);
        /*0x2243e58*/ void OnAlertClosed(string message);
    }

    class IosNativeAlertWrapper : Yeti.INativeAlertWrapper
    {
        /*0x10*/ Yeti.IosNativeAlertCallbackReceiver _nativeAlertCallbackReceiver;
        /*0x18*/ System.Action _onClosed;

        static /*0x2243e94*/ void DisplayAlert(string title, string message, string buttonText);
        /*0x2243f6c*/ IosNativeAlertWrapper();
        /*0x2243e98*/ void DisplayAlert(string title, string message, string buttonText, System.Action onClosed);
        /*0x2243f38*/ void InvokeOnClosedCallback();
    }

    class CriticalGameStateEvaluator
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, int> _criticalStates;

        /*0x22440c8*/ CriticalGameStateEvaluator();
        /*0x2243f74*/ bool IsCriticalGameStateBlockingNavigation();
        /*0x2243fd4*/ void AddToCriticalState(string stateName);
        /*0x2244070*/ void RemoveFromCriticalState(string stateName);
        /*0x2243f78*/ bool IsInCriticalGameState();
    }

    struct CriticalGameStates
    {
        static string CriticalStateTransaction = "CriticalStateTransaction";
    }

    class BaseDeeplinkNativeWrapper : UnityEngine.MonoBehaviour, Yeti.IDeeplinkNativeWrapper, CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x20*/ Yeti.IDeeplinkHandler _deeplinkHandler;
        /*0x28*/ CapitalGames.IMonoBehaviourEventNotifierSystem _eventNotifier;

        /*0x224458c*/ BaseDeeplinkNativeWrapper();
        /*0x2244150*/ void HandleURIMessageFromNative(string uriFromNative);
        /*0x1f309e4*/ void ConsumeLaunchURIFromNative();
        /*0x2244310*/ void CapitalGames.IInitializable.Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x224448c*/ void CapitalGames.ILifecycleAware.OnAppReset();
        /*0x2244580*/ void OnApplicationFocused(CapitalGames.IMonoBehaviourEventNotifierSystem sender, bool isFocused);
    }

    enum NavigationActionType
    {
        Invalid = 0,
        State = 1,
        Scroll = 2,
        EventBroadcast = 3,
        MapFocus = 4,
    }

    enum DeeplinkDomain
    {
        Invalid = 0,
        Store = 1,
        Map = 2,
    }

    struct DeeplinkRequest
    {
        /*0x10*/ string <Link>k__BackingField;
        /*0x18*/ Yeti.DeeplinkFormat <Format>k__BackingField;
        /*0x1c*/ Yeti.DeeplinkType <Type>k__BackingField;

        /*0x22445ac*/ DeeplinkRequest(string link, Yeti.DeeplinkFormat format, Yeti.DeeplinkType type);
        /*0x2244594*/ string get_Link();
        /*0x224459c*/ Yeti.DeeplinkFormat get_Format();
        /*0x22445a4*/ Yeti.DeeplinkType get_Type();
    }

    class NavigationActionData
    {
        /*0x10*/ string <Type>k__BackingField;
        /*0x18*/ string <Id>k__BackingField;
        /*0x20*/ string <Param>k__BackingField;

        /*0x22445f0*/ NavigationActionData(string alias, string id, string param);
        /*0x22445d8*/ string get_Type();
        /*0x22445e0*/ string get_Id();
        /*0x22445e8*/ string get_Param();
    }

    class DeeplinkDebugMenu : CapitalGames.IInitializable
    {
        /*0x10*/ Yeti.IDeeplinkHandler _deeplinkHandler;
        /*0x18*/ PvzN3xt.Nvs.INamedValueService _namedValueService;

        /*0x2245ca8*/ DeeplinkDebugMenu();
        /*0x2244650*/ void Initialize(CapitalGames.InstanceInitializedCallback initializedCallback);
        /*0x22446fc*/ void RegisterNavigationOptions();
        /*0x2244700*/ void RegisterEventBroadcastOptions();
        /*0x2244704*/ void NavigateToStore();
        /*0x22447e8*/ void NavigateToMap();
        /*0x22448cc*/ void NavigateToTeamManager();
        /*0x22449b0*/ void NavigateToInbox();
        /*0x2244a94*/ void NavigateToSettings();
        /*0x2244b78*/ void NavigateToEALogin();
        /*0x2244c5c*/ void EAPRBackToGameWithCode();
        /*0x2244f98*/ void NavigateToDailyTasks();
        /*0x224507c*/ void NavigateToLoginCalendar();
        /*0x2245160*/ void NavigateToStarTracker();
        /*0x2245244*/ void NavigateToEvents();
        /*0x2245328*/ void NavigateToSocial();
        /*0x224540c*/ void NavigateToZombossTower();
        /*0x22454f0*/ void NavigateToFirstBlockStreetView();
        /*0x22455d4*/ void NavigateToDailyDeals();
        /*0x2245750*/ void NavigateToClub();
        /*0x2245834*/ void NavigateToCoins();
        /*0x2245918*/ void NavigateToGems();
        /*0x22459fc*/ void NavigateToPinata();
        /*0x2245ae0*/ void NavigateToLto();
        /*0x2245bc4*/ void NavigateToStoreStarTracker();
    }

    class DeeplinkHandler : Yeti.IDeeplinkHandler
    {
        static string Unknown = "unknown";
        /*0x10*/ Yeti.DeeplinkParser _deeplinkParser;
        /*0x18*/ Yeti.DeeplinkNavigationManager _deeplinkNavigationManager;
        /*0x20*/ Yeti.DeeplinkRewardManager _deeplinkRewardManager;
        /*0x28*/ Yeti.ICheckpointStateDataSource _checkpointStateDataSource;
        /*0x30*/ Yeti.IErrorRouter _errorRouter;
        /*0x38*/ Yeti.CriticalGameStateEvaluator _criticalGameStateEvaluator;

        static /*0x2246460*/ Yeti.DeeplinkOperation EvaluateExecution(Yeti.DeeplinkRequest request, Yeti.IDeeplinkManager manager, Yeti.DeeplinkOperation operation);
        static /*0x2246390*/ Yeti.DeeplinkOperation Execute(Yeti.DeeplinkRequest request, Yeti.IDeeplinkManager manager, System.Action<bool> onDeeplinkCompleteCallback, Yeti.DeeplinkOperation operation);
        static /*0x22466dc*/ Yeti.DeeplinkOperation EvaluateValidity(string uri, Yeti.DeeplinkOperation operation);
        /*0x224702c*/ DeeplinkHandler();
        /*0x2245cb0*/ bool IsValidDeeplinkSchema(string uri, Yeti.DeeplinkFormat format);
        /*0x2245e74*/ bool IsDeeplinkingAllowed();
        /*0x2245f40*/ bool CanHandleDeeplink(string uri, Yeti.DeeplinkFormat format);
        /*0x2246090*/ bool TryHandleDeeplink(string uri, System.Action<bool> onDeeplinkCompleteCallback, bool failSilently, Yeti.DeeplinkFormat format);
        /*0x22460bc*/ Yeti.DeeplinkOperation ExecuteDeeplink(string uri, System.Action<bool> onDeeplinkCompleteCallback, Yeti.DeeplinkFormat format, bool failSilently);
        /*0x2245f64*/ Yeti.DeeplinkOperation EvaluateDeeplink(string uri, Yeti.DeeplinkFormat format);
        /*0x2245e9c*/ Yeti.DeeplinkOperation EvaluateGating(Yeti.DeeplinkOperation operation);
        /*0x2245cdc*/ Yeti.DeeplinkOperation EvaluateSanity(string uri, Yeti.DeeplinkFormat format, bool validateData, Yeti.DeeplinkOperation operation);
        /*0x22462f8*/ Yeti.DeeplinkOperation EvaluateData(string uri, ref Yeti.IDeeplinkManager manager, ref Yeti.DeeplinkType type, Yeti.DeeplinkOperation operation);
        /*0x2246764*/ Yeti.DeeplinkOperation EvaluateTypeMapping(string uri, ref Yeti.IDeeplinkManager manager, ref Yeti.DeeplinkType type, Yeti.DeeplinkOperation operation);
        /*0x2246d24*/ Yeti.IDeeplinkManager GetManagerFromDeeplinkType(Yeti.DeeplinkType type);
        /*0x2246534*/ Yeti.DeeplinkOperation EvaluateCheckpointGate(Yeti.DeeplinkOperation operation);
        /*0x224663c*/ Yeti.DeeplinkOperation EvaluateGameState(Yeti.DeeplinkOperation operation);
        /*0x2246d7c*/ void DisplayFailure(Yeti.DeeplinkOperation operation);
    }

    class DeeplinkIdBinder : Yeti.UIBinderBase<RedCrow.UI.UUIF.DataProviding.Models.PrimitiveModel>
    {
        /*0x78*/ Yeti.IDeeplinkUiHookIdentifier _deeplinkUiHookIdentifier;

        /*0x22471c8*/ DeeplinkIdBinder();
        /*0x2247034*/ void Awake();
        /*0x22470bc*/ void OnDataContextSet();
        /*0x22471c4*/ void PropertyChanged(string propertyName);
        /*0x22470c0*/ void OverrideDeeplinkElementId();
    }

    class DeeplinkNativeWrapperAndroid : Yeti.BaseDeeplinkNativeWrapper
    {
        static string UnityJavaClassName = "com.unity3d.player.UnityPlayer";
        static string CurrentActivity = "currentActivity";
        static string GetLaunchUrlCallback = "GetLaunchURL";

        /*0x2247534*/ DeeplinkNativeWrapperAndroid();
        /*0x2247210*/ void ConsumeLaunchURIFromNative();
    }

    class DeeplinkNativeWrapperIOS : Yeti.BaseDeeplinkNativeWrapper
    {
        /*0x22475ac*/ DeeplinkNativeWrapperIOS();
        /*0x224753c*/ void ConsumeLaunchURIFromNative();
    }

    class DeeplinkNavigationManager : Yeti.IDeeplinkManager
    {
        /*0x10*/ Yeti.NavigationActionData _navigationActionData;
        /*0x18*/ Yeti.DeeplinkParser _deeplinkParser;
        /*0x20*/ Yeti.INavigationActionProcessor _navigationActionProcessor;
        /*0x28*/ Yeti.NavigationActionFactory _navigationActionFactory;
        /*0x30*/ Yeti.YetiNavigationBehaviour _navigationBehaviour;
        /*0x38*/ Yeti.INavigationService _navigationService;
        /*0x40*/ Yeti.NavigationGatepassChecker _navigationGatepassChecker;
        /*0x48*/ Yeti.GameEventManager _gameEventManager;
        /*0x50*/ Yeti.GenericTreeHelper _treeHelper;

        static /*0x224875c*/ Yeti.DeeplinkOperation EvaluateNavigationIdentifier(RedCrow.Stately.Core.StatelyState currentState, ref string sourceNavigationId, Yeti.DeeplinkOperation operation);
        static /*0x2248f58*/ bool IsUiNavigationAction(Yeti.NavigationActionType actionType);
        /*0x2248f6c*/ DeeplinkNavigationManager();
        /*0x22475b4*/ Yeti.DeeplinkOperation EvaluateData(Yeti.DeeplinkRequest request, ref System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, Yeti.DeeplinkOperation operation);
        /*0x2247a94*/ Yeti.DeeplinkOperation EvaluateExecution(Yeti.DeeplinkRequest request, ref System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, Yeti.DeeplinkOperation operation);
        /*0x2247c08*/ Yeti.DeeplinkOperation ProcessDeeplink(Yeti.DeeplinkRequest request, System.Action<bool> onDeeplinkCompleteCallback, Yeti.DeeplinkOperation operation);
        /*0x2247da4*/ Yeti.DeeplinkOperation ExecuteNavigationActions(System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, System.Action<bool> onDeeplinkCompleteCallback, Yeti.DeeplinkOperation operation);
        /*0x2247b60*/ Yeti.DeeplinkOperation EvaluateReady(Yeti.DeeplinkOperation operation);
        /*0x224769c*/ Yeti.DeeplinkOperation EvaluateNavigationDataObjects(Yeti.DeeplinkRequest request, ref System.Collections.Generic.IReadOnlyList<Yeti.NavigationActionData> actionDataObjects, Yeti.DeeplinkOperation operation);
        /*0x2247774*/ Yeti.DeeplinkOperation EvaluateNavigationActions(System.Collections.Generic.IReadOnlyList<Yeti.NavigationActionData> actionInfo, ref System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, Yeti.DeeplinkOperation operation);
        /*0x2248118*/ Yeti.DeeplinkOperation EvaluateStatelyNodesToTransition(Yeti.NavigationActionData navigationActionData, ref System.Collections.Generic.IReadOnlyList<Yeti.GenericTreeNode> nodesToTransition, Yeti.DeeplinkOperation operation);
        /*0x2248918*/ System.Collections.Generic.IReadOnlyList<Yeti.GenericTreeNode> GetTransitions(string sourceNavigationId, string targetNavigationId);
        /*0x2248ae8*/ Yeti.DeeplinkOperation EvaluateGatepass(System.Collections.Generic.IReadOnlyList<Yeti.GenericTreeNode> transitions, Yeti.DeeplinkOperation operation);
        /*0x224839c*/ void ReinitializeUiHooks();
    }

    class DeeplinkNavigationStateIds
    {
        static string InboxStateId = "inbox";
        static string TeamManagerStateId = "teammanager";
        static string SettingsStateId = "settings";
        static string EaLoginStateId = "ealogin";
        static string DailyTasksStateId = "dailytasks";
        static string StarTrackerStateId = "startracker";
        static string EventsStateId = "events";
        static string SocialStateId = "social";
        static string ZombossTowerStateId = "zombosstower";
        static string StoreStateId = "store";
        static string MapStateId = "map";
        static string TownStateId = "town";
        static string LoginCalendarStateId = "logincalendar";
    }

    class DeeplinkNavigationUris
    {
        static string SetCurrentBlockEventName = "set_current_block";
        static string SetZombossTowerBlockEventName = "set_zomboss_tower_block";
        static string DefaultBlockName = "FanStreet";
        static /*0x0*/ string BaseNavigationString;
        static /*0x8*/ string ActionSeparator;
        static /*0x10*/ string PropertySeparator;
        static /*0x18*/ string KvpSeparator;
        static /*0x20*/ string StateActionType;
        static /*0x28*/ string ScrollActionType;
        static /*0x30*/ string MapFocusActionType;
        static /*0x38*/ string EventBroadcastActionType;
        static /*0x40*/ string GoToInbox;
        static /*0x48*/ string GoToTeamManager;
        static /*0x50*/ string GoToSettings;
        static /*0x58*/ string GoToDailyTasks;
        static /*0x60*/ string GoToLoginCalendar;
        static /*0x68*/ string GoToStarTracker;
        static /*0x70*/ string GoToEvents;
        static /*0x78*/ string GoToSocial;
        static /*0x80*/ string GoToMap;
        static /*0x88*/ string GoToZombossTower;
        static /*0x90*/ string GoToFirstBuildingStreetView;

        static /*0x22496ac*/ DeeplinkNavigationUris();
        static /*0x2248f74*/ string CreateStateNavigationAction(string stateId);
        static /*0x224919c*/ string CreateScrollNavigationAction(string scrollToId);
        static /*0x22491fc*/ string CreateMapFocusNavigationAction(string blockId);
        static /*0x224925c*/ string CreateEventBroadcastNavigationAction(string eventId);
        static /*0x22492bc*/ string CreateEventBroadcastNavigationAction(string eventId, string eventParam);
        static /*0x2248fd4*/ string CreateNavigationAction(string type, string id);
        static /*0x224932c*/ string CreateNavigationAction(string type, string id, string param);
    }

    class StoreNavigationUris
    {
        static string SelectOfferEventName = "select_offer";
        static string StoreDailyDealsId = "storedailydeals";
        static string StoreClubId = "storeclub";
        static string StoreCoinsId = "storecoins";
        static string StoreGemsId = "storegems";
        static string StorePinataId = "storepinata";
        static string StoreLtoId = "storelto";
        static string StoreStarTrackerId = "storestartracker";
        static string StoreArenaId = "storearena";
        static /*0x0*/ string GoToStore;
        static /*0x8*/ string GoToStoreDailyDeals;
        static /*0x10*/ string GoToStoreClub;
        static /*0x18*/ string GoToStoreCoins;
        static /*0x20*/ string GoToStoreGems;
        static /*0x28*/ string GoToStorePinata;
        static /*0x30*/ string GoToStoreLto;
        static /*0x38*/ string GoToStoreStarTracker;
        static /*0x40*/ string GoToStoreArena;
        static /*0x48*/ System.Collections.Generic.Dictionary<Yeti.StoreNavigationUris.StoreSection, string> NavigationActionBySection;

        static /*0x224a350*/ StoreNavigationUris();
        static /*0x22456b8*/ string GetGoToStoreSectionAction(Yeti.StoreNavigationUris.StoreSection section);
        static /*0x224a020*/ string CreateGoToStoreSectionAndShowOfferUnavailable(Yeti.StoreNavigationUris.StoreSection section);
        static /*0x224a1b4*/ string CreateGoToStoreSectionAndSelectOffer(Yeti.StoreNavigationUris.StoreSection section, string offerAlias);

        enum StoreSection
        {
            DailyDeals = 0,
            Club = 1,
            Coins = 2,
            Gems = 3,
            Pinata = 4,
            Lto = 5,
            StarTracker = 6,
            Arena = 7,
        }
    }

    class MapNavigationUris
    {
        static string EnterBlockEventName = "enter_block";
        static string ChangeBlockEventName = "change_block";
        static string ShowBuyBreakoutEventName = "show_buy_breakout";
        static string ExitStreetViewEventName = "exit_street_view";
        static /*0x0*/ string GoToMap;
        static /*0x8*/ string GoToTown;
        static /*0x10*/ string LureZombiesAction;
        static /*0x18*/ string ExitStreetViewAction;

        static /*0x224b84c*/ MapNavigationUris();
        static /*0x224abdc*/ string CreateFocusOnBlockAndTapNavigationAction(string blockAlias);
        static /*0x224ad88*/ string CreateEnterBlockAndLureZombiesNavigationAction(string blockAlias);
        static /*0x224aecc*/ string CreateLureZombiesToCurrentBlockNavigationAction();
        static /*0x224b004*/ string CreateEnterBlockWhileInMap(string blockAlias);
        static /*0x224b118*/ string CreateChangeBlockWhileInStreetViewNavigationAction(string blockAlias);
        static /*0x224b22c*/ string CreateChangeToLockedBlockWhileInStreetViewNavigationAction(string blockAlias);
        static /*0x224b3b0*/ string CreateChangeBlockWhileOutOfTownNavigationAction(string blockAlias);
        static /*0x224b50c*/ string CreateChangeBlockAndLureZombiesNavigationAction(string blockAlias);
        static /*0x224b650*/ string CreateChangeToLockedBlockNavigationAction(string blockAlias);
    }

    class EaLoginUris
    {
        static string AutoVerify = "AutoVerify";
        static /*0x0*/ string GoToEaLogin;

        static /*0x224ba80*/ EaLoginUris();
        static /*0x2244e28*/ string CreateBackToGameWithCodeNavigationAction(int code);
    }

    class NavigationUriBuilder
    {
        static /*0x0*/ EA.Text.StringBuilder Builder;

        static /*0x224bbb4*/ NavigationUriBuilder();
        static /*0x22495a4*/ string BuildString(string[] args);
    }

    enum DeeplinkFailureReasons
    {
        None = 0,
        Gated = 2,
        CheckpointProgress = 6,
        CriticalGameState = 10,
        Uri = 16,
        InvalidUri = 48,
        InvalidData = 112,
        ManagerValidation = 128,
        ManagerBusy = 384,
        ManagerFailedToGetData = 640,
        ManagerFailedToExecuteActions = 1152,
        ActionQueueFailure = 2048,
        ActionQueueIsEmpty = 6144,
        GatePass = 9346,
        NvsGatePassFailure = 25730,
        FeatureUnlockGatePass = 42114,
        FtueUnlockGatePass = 74882,
        StatelyFailure = 132224,
        NavigationIdentifierNotFoundFailure = 394368,
        NoNodesToTransition = 656512,
        NavigationActionFactory = 1049216,
        IncorrectNavigationActionTypeFailure = 3146368,
    }

    class DeeplinkOperation
    {
        static /*0x0*/ EA.Text.StringBuilder StringBuilder;
        /*0x10*/ string _uri;
        /*0x18*/ Yeti.DeeplinkFailureReasons _failureReasons;
        /*0x20*/ System.Collections.Generic.Dictionary<Yeti.DeeplinkFailureReasons, string> _additionalInfo;

        static /*0x224c2fc*/ DeeplinkOperation();
        static /*0x224bc44*/ Yeti.ClientErrorCode GetErrorCodeForFailure();
        static /*0x224bfc0*/ string GetDebugInfoForForFailureType(Yeti.DeeplinkFailureReasons failureReasons);
        /*0x2246248*/ DeeplinkOperation(string uri, Yeti.DeeplinkFailureReasons failureReasons);
        /*0x2245e64*/ bool get_IsSuccessful();
        /*0x224874c*/ bool get_HasFailed();
        /*0x2246d50*/ void AddFailure(Yeti.DeeplinkFailureReasons failure);
        /*0x2248d1c*/ void AddFailure(Yeti.DeeplinkFailureReasons failure, string debugInfo);
        /*0x224bc34*/ bool HasFailure(Yeti.DeeplinkFailureReasons failure);
        /*0x2246e60*/ Yeti.YetiError GetErrorForFailure();
        /*0x224bc4c*/ string ToString();
    }

    class DeeplinkParser
    {
        static string NavType = "nav?";
        static string RewardType = "reward?";
        static string TypeKey = "type";
        static string IdKey = "id";
        static string ParamKey = "param";
        static char ActionSeparator = 38;
        static char PropertySeparator = 43;
        static char KeyValueSeparator = 61;
        static string InternalScheme = "pvz3://open/";
        static string ExternalScheme = "https://open/";
        /*0x10*/ System.Text.StringBuilder _sb;
        /*0x18*/ System.Collections.Generic.IReadOnlyList<string> _schemes;
        /*0x20*/ System.Collections.Generic.IReadOnlyDictionary<string, Yeti.DeeplinkType> _deeplinkTypeInfo;

        static /*0x2246d60*/ bool IsValidDeeplink(string uri);
        static /*0x224c5f8*/ System.Collections.Generic.List<Yeti.NavigationActionData> ParseActionsFromBody(string body, string uri);
        static /*0x224ccec*/ bool TryGetDeeplinkProperty(string property, ref Yeti.DeeplinkParser.DeeplinkProperty deeplinkProperty);
        static /*0x224ce5c*/ bool IsPropertyAlreadyFound(string property);
        static /*0x224ce78*/ void LogMultiplePropertiesFound(string key);
        /*0x224ce7c*/ DeeplinkParser();
        /*0x2246858*/ Yeti.DeeplinkType GetDeeplinkType(string uri);
        /*0x2247e68*/ System.Collections.Generic.IReadOnlyList<Yeti.NavigationActionData> GetNavigationActionDataObjects(Yeti.DeeplinkRequest request);
        /*0x224c380*/ string GetScheme(string uri);
        /*0x224c86c*/ string GetMeta(string uri);
        /*0x224c500*/ string GetBody(string uri);

        struct DeeplinkProperty
        {
            /*0x10*/ string Type;
            /*0x18*/ string Id;
            /*0x20*/ string Param;
        }
    }

    class DeeplinkRewardManager : Yeti.IDeeplinkManager
    {
        /*0x224d1f4*/ DeeplinkRewardManager();
        /*0x224d070*/ Yeti.DeeplinkOperation EvaluateData(Yeti.DeeplinkRequest request, ref System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, Yeti.DeeplinkOperation operation);
        /*0x224d0f8*/ Yeti.DeeplinkOperation EvaluateExecution(Yeti.DeeplinkRequest request, ref System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, Yeti.DeeplinkOperation operation);
        /*0x224d180*/ Yeti.DeeplinkOperation ProcessDeeplink(Yeti.DeeplinkRequest request, System.Action<bool> onDeeplinkCompleteCallback, Yeti.DeeplinkOperation operation);
    }

    class DeeplinkWrapperEditor : Yeti.BaseDeeplinkNativeWrapper
    {
        /*0x30*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x38*/ string _lastTriggeredUrl;

        /*0x224d424*/ DeeplinkWrapperEditor();
        /*0x224d1fc*/ void ConsumeLaunchURIFromNative();
        /*0x224d390*/ System.Collections.IEnumerator TriggerCallbackNextFrame();

        class <TriggerCallbackNextFrame>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ Yeti.DeeplinkWrapperEditor <>4__this;

            /*0x224d3fc*/ <TriggerCallbackNextFrame>d__3(int <>1__state);
            /*0x224d458*/ void System.IDisposable.Dispose();
            /*0x224d45c*/ bool MoveNext();
            /*0x224d4cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0x224d4d4*/ void System.Collections.IEnumerator.Reset();
            /*0x224d50c*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    enum DeeplinkType
    {
        None = 0,
        AppLaunch = 1,
        Navigation = 2,
        Rewarded = 3,
    }

    enum DeeplinkFormat
    {
        Invalid = 0,
        External = 1,
        Internal = 2,
    }

    interface IDeeplinkHandler
    {
        bool IsValidDeeplinkSchema(string uri, Yeti.DeeplinkFormat format);
        /*0x1f2fe14*/ bool IsDeeplinkingAllowed();
        bool CanHandleDeeplink(string uri, Yeti.DeeplinkFormat format);
        bool TryHandleDeeplink(string uri, System.Action<bool> onDeeplinkCompleteCallback, bool failSilently, Yeti.DeeplinkFormat format);
    }

    interface IDeeplinkManager
    {
        Yeti.DeeplinkOperation EvaluateData(Yeti.DeeplinkRequest request, ref System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, Yeti.DeeplinkOperation operation);
        Yeti.DeeplinkOperation EvaluateExecution(Yeti.DeeplinkRequest request, ref System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, Yeti.DeeplinkOperation operation);
        Yeti.DeeplinkOperation ProcessDeeplink(Yeti.DeeplinkRequest request, System.Action<bool> onDeeplinkCompleteCallback, Yeti.DeeplinkOperation operation);
    }

    interface IDeeplinkNativeWrapper : CapitalGames.IInitializable, CapitalGames.ILifecycleAware
    {
        /*0x1f30ebc*/ void HandleURIMessageFromNative(string uri);
        /*0x1f309e4*/ void ConsumeLaunchURIFromNative();
    }

    interface INavigationActionProcessor
    {
        /*0x1f302cc*/ Yeti.DeeplinkOperation EvaluateReady(Yeti.DeeplinkOperation operation);
        /*0x1f303d0*/ Yeti.DeeplinkOperation Process(System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, System.Action<bool> onNavigationActionsProcessed, Yeti.DeeplinkOperation operation);
    }

    class NavigationActionProcessor : Yeti.INavigationActionProcessor
    {
        /*0x10*/ System.Collections.Generic.Queue<Yeti.INavigationAction> _navActionQueue;
        /*0x18*/ bool _hasFailure;
        /*0x20*/ System.Action<bool> _onNavigationActionsProcessedCallback;

        /*0x224dbfc*/ NavigationActionProcessor();
        /*0x224d514*/ int get_QueueSize();
        /*0x224d55c*/ Yeti.DeeplinkOperation EvaluateReady(Yeti.DeeplinkOperation operation);
        /*0x224d5f4*/ Yeti.DeeplinkOperation Process(System.Collections.Generic.IReadOnlyList<Yeti.INavigationAction> navigationActions, System.Action<bool> onNavigationActionsProcessed, Yeti.DeeplinkOperation operation);
        /*0x224d8d4*/ void EnqueueNavigationAction(Yeti.INavigationAction action);
        /*0x224da04*/ Yeti.INavigationAction DequeueNavigationAction();
        /*0x224da60*/ void OnActionProcessed(Yeti.INavigationAction action, bool result, string info);
        /*0x224d92c*/ void ProcessNextActionInQueue();
        /*0x224dbb4*/ void CompleteNavigationActionsProcessedCallback(bool succeeded);
    }

    class EventBroadcastNavigationAction : Yeti.INavigationAction
    {
        /*0x10*/ System.Action<Yeti.INavigationAction, bool, string> OnNavigationActionProcessed;
        /*0x18*/ string _eventName;
        /*0x20*/ string _eventParam;
        /*0x28*/ Yeti.EventBroadcastHandlerRegistry _eventHandlerRegistry;

        /*0x224dde4*/ EventBroadcastNavigationAction(Yeti.NavigationActionData data, Yeti.EventBroadcastHandlerRegistry eventHandlerRegistry);
        /*0x224dc84*/ void add_OnNavigationActionProcessed(System.Action<Yeti.INavigationAction, bool, string> value);
        /*0x224dd34*/ void remove_OnNavigationActionProcessed(System.Action<Yeti.INavigationAction, bool, string> value);
        /*0x224de40*/ void Process();
        /*0x224e1c4*/ void OnEventComplete(bool actionSucceeded);
        /*0x224dfac*/ void OnActionCompleted(bool result, string info);
    }

    interface INavigationAction
    {
        /*0x1f30ebc*/ void add_OnNavigationActionProcessed(System.Action<Yeti.INavigationAction, bool, string> value);
        /*0x1f30ebc*/ void remove_OnNavigationActionProcessed(System.Action<Yeti.INavigationAction, bool, string> value);
        /*0x1f309e4*/ void Process();
        /*0x1f30ac0*/ void OnActionCompleted(bool result, string info);
    }

    class NavigationActionFactory
    {
        /*0x10*/ System.Collections.Generic.IReadOnlyList<Yeti.NavigationActionType> _registry;
        /*0x18*/ Yeti.INavigationService _navigationService;
        /*0x20*/ Yeti.GameStateController _gameStateController;
        /*0x28*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x30*/ Yeti.GameEventManager _gameEventManager;
        /*0x38*/ Yeti.IDeeplinkUiScrollDataManager _deeplinkUiScrollDataManager;
        /*0x40*/ Yeti.IDeeplinkZoogleMapsNavigationDataManager _deeplinkZoogleMapsNavigationDataManager;
        /*0x48*/ Yeti.EventBroadcastHandlerRegistry _eventHandlerRegistry;
        /*0x50*/ CapitalGames.CoroutineCreator _coroutineCreator;
        /*0x58*/ PvzN3xt.Nvs.INamedValueService _namedValueService;
        /*0x60*/ Yeti.YetiGameStateMachine _yetiGameStateMachine;

        /*0x224e454*/ NavigationActionFactory();
        /*0x2248534*/ Yeti.DeeplinkOperation EvaluateNavigationAction(Yeti.NavigationActionData data, System.Collections.Generic.IReadOnlyList<Yeti.GenericTreeNode> transitions, ref Yeti.INavigationAction action, Yeti.DeeplinkOperation operation);
        /*0x2247f24*/ Yeti.NavigationActionType GetNavigationActionTypeFromInfo(Yeti.NavigationActionData data);
    }

    class StatelyNavigationAction : Yeti.INavigationAction
    {
        /*0x10*/ System.Collections.Generic.IReadOnlyList<Yeti.GenericTreeNode> _transitions;
        /*0x18*/ Yeti.INavigationService _navigationService;
        /*0x20*/ Yeti.GameStateController _gameStateController;
        /*0x28*/ PvzN3xt.UI.InputBlockerController _inputBlockerController;
        /*0x30*/ Yeti.YetiGameStateMachine _yetiGameStateMachine;
        /*0x38*/ System.Action<Yeti.INavigationAction, bool, string> OnNavigationActionProcessed;

