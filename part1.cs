class <Module>
{
}

class ExampleGUI : UnityEngine.MonoBehaviour
{
    /*0x18*/ int numberOfButtons;
    /*0x1c*/ bool isEnabled;
    /*0x1d*/ bool showPopUp;
    /*0x20*/ string txtSetEnabled;
    /*0x28*/ string txtManualLaunch;
    /*0x30*/ string txtSetOfflineMode;

    /*0x11d6184*/ ExampleGUI();
    /*0x11d52b0*/ void OnGUI();
    /*0x11d5f6c*/ void ShowGUI(int windowID);
    /*0x11d6118*/ void HandleGooglePlayId(string adId);
    /*0x11d611c*/ void AttributionChangedCallback(com.adjust.sdk.AdjustAttribution attributionData);
    /*0x11d6130*/ void EventSuccessCallback(com.adjust.sdk.AdjustEventSuccess eventSuccessData);
    /*0x11d6144*/ void EventFailureCallback(com.adjust.sdk.AdjustEventFailure eventFailureData);
    /*0x11d6158*/ void SessionSuccessCallback(com.adjust.sdk.AdjustSessionSuccess sessionSuccessData);
    /*0x11d616c*/ void SessionFailureCallback(com.adjust.sdk.AdjustSessionFailure sessionFailureData);
    /*0x11d6180*/ void DeferredDeeplinkCallback(string deeplinkURL);

    class <>c
    {
        static /*0x0*/ ExampleGUI.<> <>9;
        static /*0x8*/ System.Action<string> <>9__6_0;

        static /*0x10a00f0*/ <>c();
        /*0x10a0150*/ <>c();
        /*0x10a0158*/ void <OnGUI>b__6_0(string msg);
    }
}

class DPSTestSave : UnityEngine.ScriptableObject
{
    static string VERSION = "1.0";
    static string DPS_TEST_SAVE_DATA_NAME = "DPSTestSaveData";
    static /*0x0*/ DPSTestSave SaveData;
    /*0x18*/ DPSTest.UnitSetting[] UnitSettings;

    static /*0xf5bf5c*/ void LoadSaveData();
    /*0xf5c194*/ DPSTestSave();
}

class GPGSIds
{
    static string achievement_test = "CgkI5NTdgPUPEAIQAg";
}

class MapToolConstants
{
    static string PREFS_SAVE_NAME_MAPTOOL_TILE_FOLDER_PATH = "MapToolTileFolder";
    static string PREFS_SAVE_NAME_MAPTOOL_TILESET_FOLDER_PATH = "MapToolTileSetFolder";
    static string PREFS_SAVE_NAME_MAPTOOL_TILESET_PATH = "MapToolTileSet";
    static string MAP_TOOL_SCENE_PATH = "Assets/MapTool/Scene/MapToolScene.unity";
    static string MAP_TOOL_WINDOW_MENU_ITEM_PATH = "Tools/MapTool";
    static string TILE_SET_WINDOW_MENU_ITEM_PATH = "Assets/Create/MapTool/CreateTileSet";
    static string TILE_SET_RUN_WINDOW_MENU_ITEM_PATH = "Assets/Create/MapTool/CreateRunTileSet";
    static string MAP_TOOL_SETTINGS_LOAD_PATH = "Assets/MapTool/Settings/MapToolSettings.asset";
    static string NEW_TILE_SET_NAME = "NewTileSet.prefab";
    static string SELECT_TILE_PARENT_NAME = "SelectTileParent";
    static string SELECT_TILE_NAME = "CurrentSelectTile";
    static int TILE_POSITION_TRUNCATE_DIVIDE = 10000;
    static /*0x0*/ string CURRENT_VERSION_STRING;

    static /*0xde9a0c*/ MapToolConstants();
    /*0xde9a04*/ MapToolConstants();
}

class MapToolSelectionBase : UnityEngine.MonoBehaviour
{
    /*0xde9a70*/ MapToolSelectionBase();
}

class MapToolTileGroup
{
    /*0x10*/ System.Collections.Generic.List<UnityEngine.Vector2> TilePositionList;
    /*0x18*/ string GroupName;
    /*0x20*/ UnityEngine.Color GroupColor;
    /*0x30*/ int GroupID;

    /*0xde9a78*/ MapToolTileGroup();
    /*0xde9adc*/ MapToolTileGroup(MapToolTileGroup _origin);
}

class MapToolUtils
{
    static /*0xde9bac*/ float Truncate(float _float, int _belowMult);
    static /*0xde9c58*/ UnityEngine.Vector2 Truncate(UnityEngine.Vector2 _vector2, int _belowMult);
    static /*0xde9d38*/ UnityEngine.Vector3 Truncate(UnityEngine.Vector3 _vector3, int _belowMult);
    static /*0xde9e4c*/ UnityEngine.Vector3 ConvertMousePositionToTilePosition(UnityEngine.Vector3 _vector3);
    static /*0xde9ec4*/ UnityEngine.Vector3 ConvertTilePositionToMousePosition(UnityEngine.Vector3 _vector3);
}

class TileBase : MapToolSelectionBase
{
    /*0x18*/ UnityEngine.Vector2 m_vSavedMousePosition;
    /*0x20*/ UnityEngine.Vector2 m_vArrayPosition;
    /*0x28*/ int GroupID;
    /*0x2c*/ int TileID;
    /*0x30*/ string Params;
    /*0x38*/ string ParamsCustom;
    /*0x40*/ bool <Selected>k__BackingField;
    /*0x41*/ bool <IsPreviewTile>k__BackingField;
    /*0x44*/ float <CurrentAlpha>k__BackingField;
    /*0x48*/ bool InitializedForMaptool;
    /*0x50*/ UnityEngine.Transform m_Transform;
    /*0x58*/ UnityEngine.UI.Image m_Image;
    /*0x60*/ System.Collections.Generic.List<UnityEngine.UI.Image> m_lisImages;
    /*0x68*/ UnityEngine.Sprite m_Sprite;
    /*0x70*/ UnityEngine.Texture2D[] m_arrTextures;

    /*0x116c8fc*/ TileBase();
    /*0x116c2bc*/ bool get_Selected();
    /*0x116c2c4*/ void set_Selected(bool value);
    /*0x116c2d0*/ bool get_IsPreviewTile();
    /*0x116c2d8*/ void set_IsPreviewTile(bool value);
    /*0x116c2e4*/ float get_CurrentAlpha();
    /*0x116c2ec*/ void set_CurrentAlpha(float value);
    /*0x116c2f4*/ UnityEngine.Sprite get_GetSprite();
    /*0x116c2fc*/ UnityEngine.UI.Image get_GetImage();
    /*0x116c304*/ System.Collections.Generic.List<UnityEngine.UI.Image> get_GetImageList();
    /*0x116c30c*/ UnityEngine.Texture2D[] GetTextures();
    /*0x116c4cc*/ UnityEngine.Rect get_GetSpriteRect();
    /*0x116c500*/ UnityEngine.Transform get_GetTransform();
    /*0x116c508*/ UnityEngine.Vector2 get_SavedMousePosition();
    /*0x116c510*/ UnityEngine.Vector2 get_ArrayPosition();
    /*0x116c518*/ UnityEngine.Vector2 get_TransformPosition();
    /*0x116c534*/ UnityEngine.Vector2 get_TransformScale();
    /*0x116c550*/ void Initialize();
    /*0x116c4a8*/ void InitializeForMaptool();
    /*0x116c698*/ void InitializeForMaptool(TileBase _tileBase);
    /*0x116c7d0*/ void SetSavedPosition(UnityEngine.Vector2 _vMousePosition, UnityEngine.Vector2 _vArrayPosition);
    /*0x116c728*/ void SetNativeSize();
    /*0x116c7dc*/ void SetAlpha(float _alpha);
}

class TileSetBase : MapToolSelectionBase
{
    static /*0x0*/ int <GridCount>k__BackingField;
    static /*0x4*/ float <GridAngle>k__BackingField;
    static /*0x8*/ float <GridSize>k__BackingField;
    static /*0xc*/ float <GridIsometricMultY>k__BackingField;
    static /*0x10*/ UnityEngine.Vector2 <GridOffset>k__BackingField;
    /*0x18*/ System.Collections.Generic.List<MapToolTileGroup> m_lisSaveTileGroup;
    /*0x20*/ UnityEngine.Canvas m_Canvas;
    /*0x28*/ UnityEngine.CanvasRenderer m_CanvasRenderer;
    /*0x30*/ int DungeonID;
    /*0x34*/ int m_GridCount;
    /*0x38*/ UnityEngine.Vector2 m_GridOffset;
    /*0x40*/ float m_GridSize;
    /*0x44*/ float m_GridAngle;

    static /*0x116c974*/ int get_GridCount();
    static /*0x116c9c0*/ void set_GridCount(int value);
    static /*0x116ca10*/ float get_GridAngle();
    static /*0x116ca5c*/ void set_GridAngle(float value);
    static /*0x116cab4*/ float get_GridSize();
    static /*0x116cb00*/ void set_GridSize(float value);
    static /*0x116cb58*/ float get_GridIsometricMultY();
    static /*0x116cba4*/ void set_GridIsometricMultY(float value);
    static /*0x116cbfc*/ UnityEngine.Vector2 get_GridOffset();
    static /*0x116cc48*/ void set_GridOffset(UnityEngine.Vector2 value);
    /*0x116d160*/ TileSetBase();
    /*0x116cca4*/ void InitCanvas();
    /*0x116cda0*/ void UpdateGridOptions();
    /*0x116cf38*/ void SaveTileGroupList(System.Collections.Generic.List<MapToolTileGroup> _list);
    /*0x116d024*/ System.Collections.Generic.List<MapToolTileGroup> LoadTileGroupList();
}

class SampleSDK : UnityEngine.MonoBehaviour
{
    /*0x12a110c*/ SampleSDK();
    /*0x12a0048*/ void Start();
    /*0x12a0208*/ void LoginGuest();
    /*0x12a0410*/ void LoginGoogle();
    /*0x12a0618*/ void LoginFacebook();
    /*0x12a0820*/ void LogoutGuest();
    /*0x12a0958*/ void LogoutGoogle();
    /*0x12a0a90*/ void LogoutFacebook();
    /*0x12a0bc8*/ void Logout();
    /*0x12a0cfc*/ void LinkGoogle();
    /*0x12a0f04*/ void LinkFacebook();

    class <>c
    {
        static /*0x0*/ SampleSDK.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;
        static /*0x10*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__0_1;
        static /*0x18*/ System.Action<Firebase.Auth.FirebaseUser> <>9__1_0;
        static /*0x20*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__1_1;
        static /*0x28*/ System.Action<Firebase.Auth.FirebaseUser> <>9__2_0;
        static /*0x30*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__2_1;
        static /*0x38*/ System.Action<Firebase.Auth.FirebaseUser> <>9__3_0;
        static /*0x40*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__3_1;
        static /*0x48*/ System.Action <>9__4_0;
        static /*0x50*/ System.Action <>9__5_0;
        static /*0x58*/ System.Action <>9__6_0;
        static /*0x60*/ System.Action <>9__7_0;
        static /*0x68*/ System.Action<Firebase.Auth.FirebaseUser> <>9__8_0;
        static /*0x70*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__8_1;
        static /*0x78*/ System.Action<Firebase.Auth.FirebaseUser> <>9__9_0;
        static /*0x80*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__9_1;

        static /*0xf9d72c*/ <>c();
        /*0xf9d78c*/ <>c();
        /*0xf9d794*/ void <Start>b__0_0();
        /*0xf9d798*/ void <Start>b__0_1(PUBSDK.DefinePubSDK.PubProcessError result);
        /*0xf9d79c*/ void <LoginGuest>b__1_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7a0*/ void <LoginGuest>b__1_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7a4*/ void <LoginGoogle>b__2_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7a8*/ void <LoginGoogle>b__2_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7ac*/ void <LoginFacebook>b__3_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7b0*/ void <LoginFacebook>b__3_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7b4*/ void <LogoutGuest>b__4_0();
        /*0xf9d7b8*/ void <LogoutGoogle>b__5_0();
        /*0xf9d7bc*/ void <LogoutFacebook>b__6_0();
        /*0xf9d7c0*/ void <Logout>b__7_0();
        /*0xf9d7c4*/ void <LinkGoogle>b__8_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7c8*/ void <LinkGoogle>b__8_1(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0xf9d7cc*/ void <LinkFacebook>b__9_0(Firebase.Auth.FirebaseUser result);
        /*0xf9d7d0*/ void <LinkFacebook>b__9_1(PUBSDK.DefinePubSDK.PubProcessError error);
    }
}

class AndroidNative
{
    static /*0xedc594*/ void CallStatic(string methodName, object[] args);
    static /*0xedc8d4*/ void ShowMessage(string title, string message, string ok);
    /*0xedc9e8*/ AndroidNative();

    class <>c__DisplayClass0_0
    {
        /*0x10*/ string methodName;
        /*0x18*/ object[] args;
        /*0x20*/ UnityEngine.AndroidJavaObject bridge;

        /*0xd99d24*/ <>c__DisplayClass0_0();
        /*0xd99d2c*/ void <CallStatic>b__0();
    }
}

class GaaIapCallbackManager : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<bool> ServiceAvailableEvent;
    static /*0x8*/ System.Action<Gaa.IapResult> PurchaseClientStateEvent;
    static /*0x10*/ System.Action<Gaa.PurchaseData, string, int, int> PurchaseUpdatedSuccessEvent;
    static /*0x18*/ System.Action<Gaa.IapResult> PurchaseUpdatedErrorEvent;
    static /*0x20*/ System.Action<Gaa.PurchaseData, string, int, int> QueryPurchasesSuccessEvent;
    static /*0x28*/ System.Action<Gaa.IapResult> QueryPurchasesErrorEvent;
    static /*0x30*/ System.Action<Gaa.ProductDetail, int, int> ProductDetailsSuccessEvent;
    static /*0x38*/ System.Action<Gaa.IapResult> ProductDetailsErrorEvent;
    static /*0x40*/ System.Action<Gaa.PurchaseData> ConsumeSuccessEvent;
    static /*0x48*/ System.Action<Gaa.IapResult> ConsumeErrorEvent;
    static /*0x50*/ System.Action<Gaa.PurchaseData> AcknowledgeSuccessEvent;
    static /*0x58*/ System.Action<Gaa.IapResult> AcknowledgeErrorEvent;
    static /*0x60*/ System.Action<Gaa.PurchaseData, string> RecurringSuccessEvent;
    static /*0x68*/ System.Action<Gaa.IapResult> RecurringErrorEvent;
    static /*0x70*/ System.Action<string> StoreInfoEvent;
    static /*0x78*/ System.Action<Gaa.IapResult> LoginFlowEvent;
    static /*0x80*/ System.Action<Gaa.IapResult> UpdateOrInstallFlowEvent;

    static /*0x10b27f0*/ void add_ServiceAvailableEvent(System.Action<bool> value);
    static /*0x10b2984*/ void remove_ServiceAvailableEvent(System.Action<bool> value);
    static /*0x10b38a0*/ void add_PurchaseClientStateEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3960*/ void remove_PurchaseClientStateEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3a20*/ void add_PurchaseUpdatedSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3ae0*/ void remove_PurchaseUpdatedSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3ba0*/ void add_PurchaseUpdatedErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3c60*/ void remove_PurchaseUpdatedErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3d20*/ void add_QueryPurchasesSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3de0*/ void remove_QueryPurchasesSuccessEvent(System.Action<Gaa.PurchaseData, string, int, int> value);
    static /*0x10b3ea0*/ void add_QueryPurchasesErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b3f60*/ void remove_QueryPurchasesErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4020*/ void add_ProductDetailsSuccessEvent(System.Action<Gaa.ProductDetail, int, int> value);
    static /*0x10b40e0*/ void remove_ProductDetailsSuccessEvent(System.Action<Gaa.ProductDetail, int, int> value);
    static /*0x10b41a0*/ void add_ProductDetailsErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4260*/ void remove_ProductDetailsErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4320*/ void add_ConsumeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b43e0*/ void remove_ConsumeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b44a0*/ void add_ConsumeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4560*/ void remove_ConsumeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4620*/ void add_AcknowledgeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b46e0*/ void remove_AcknowledgeSuccessEvent(System.Action<Gaa.PurchaseData> value);
    static /*0x10b47a0*/ void add_AcknowledgeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4860*/ void remove_AcknowledgeErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4920*/ void add_RecurringSuccessEvent(System.Action<Gaa.PurchaseData, string> value);
    static /*0x10b49e0*/ void remove_RecurringSuccessEvent(System.Action<Gaa.PurchaseData, string> value);
    static /*0x10b4aa0*/ void add_RecurringErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4b60*/ void remove_RecurringErrorEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4c20*/ void add_StoreInfoEvent(System.Action<string> value);
    static /*0x10b4ce0*/ void remove_StoreInfoEvent(System.Action<string> value);
    static /*0x10b4da0*/ void add_LoginFlowEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4e60*/ void remove_LoginFlowEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4f20*/ void add_UpdateOrInstallFlowEvent(System.Action<Gaa.IapResult> value);
    static /*0x10b4fe0*/ void remove_UpdateOrInstallFlowEvent(System.Action<Gaa.IapResult> value);
    /*0x10b6184*/ GaaIapCallbackManager();
    /*0x10b50a0*/ void PurchaseClientStateListener(string result);
    /*0x10b5188*/ void PurchaseUpdatedListener(string result);
    /*0x10b53c4*/ void QueryPurchaseListener(string result);
    /*0x10b5600*/ void ProductDetailsListener(string result);
    /*0x10b57f8*/ void ConsumeListener(string result);
    /*0x10b59ec*/ void AcknowledgeListener(string result);
    /*0x10b5be0*/ void RecurringProductListener(string result);
    /*0x10b5dd8*/ void StoreInfoListener(string result);
    /*0x10b5e4c*/ void LoginFlowListener(string result);
    /*0x10b5fe8*/ void UpdateOrInstallListener(string result);
}

class LoadingScript : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform image;
    /*0x20*/ float timeStep;
    /*0x24*/ float oneStepAngle;
    /*0x28*/ float startTime;

    /*0xfb219c*/ LoadingScript();
    /*0xfb2104*/ void Start();
    /*0xfb212c*/ void Update();
}

class LogScript : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject scrollLog;
    /*0x20*/ UnityEngine.GameObject logView;
    /*0x28*/ UnityEngine.UI.Text logText;
    /*0x30*/ bool isShowing;

    /*0xfbac48*/ LogScript();
    /*0xfba71c*/ void Start();
    /*0xfba794*/ void Log(string message);
    /*0xfba7a0*/ void Log(string tag, string message);
    /*0xfbaa5c*/ void ShowHideLog();
    /*0xfbaa90*/ void ClearLog();
    /*0xfbab40*/ void AddEnter();
}

class MainUIScript : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string TAG;
    static /*0x8*/ string inapp_p5000;
    static /*0x10*/ string inapp_p10000;
    static /*0x18*/ string inapp_p50000;
    static /*0x20*/ string auto_a100000;
    static /*0x28*/ string[] inapp_products;
    static /*0x30*/ string[] auto_products;
    static /*0x38*/ string[] all_products;
    /*0x18*/ string base64EncodedPublicKey;
    /*0x20*/ LogScript logger;
    /*0x28*/ UnityEngine.GameObject productDetailItem;
    /*0x30*/ UnityEngine.UI.ScrollRect productDetailListView;
    /*0x38*/ UnityEngine.RectTransform detailContent;
    /*0x40*/ UnityEngine.GameObject purchaseItem;
    /*0x48*/ UnityEngine.UI.ScrollRect purchaseListView;
    /*0x50*/ UnityEngine.RectTransform purchaseContent;
    /*0x58*/ UnityEngine.GameObject scrollLog;
    /*0x60*/ UnityEngine.GameObject loading;
    /*0x68*/ System.Collections.Generic.List<Gaa.ProductDetail> productDetails;
    /*0x70*/ System.Collections.Generic.Dictionary<string, Gaa.PurchaseData> purchaseMap;
    /*0x78*/ System.Collections.Generic.Dictionary<string, string> signatureMap;
    /*0x80*/ UnityEngine.UI.Text pointView;
    /*0x88*/ UnityEngine.UI.Button connection;

    static /*0xde8ea8*/ MainUIScript();
    /*0xde8dd4*/ MainUIScript();
    /*0xde5f44*/ void Awake();
    /*0xde62d8*/ void OnDestroy();
    /*0xde66a0*/ void Start();
    /*0xde68e4*/ void Update();
    /*0xde6910*/ Gaa.PurchaseData GetPurchaseData(string productId);
    /*0xde6a6c*/ void SendLog(string tag, string message);
    /*0xde6b18*/ void UsePoint(int used);
    /*0xde6bf8*/ void AddPoint(int point);
    /*0xde67cc*/ void UpdatePoint(int point);
    /*0xde6878*/ System.Collections.IEnumerator StartConnectService();
    /*0xde6d10*/ void StartConnection();
    /*0xde6ed8*/ void BuyProduct(string productId, string type);
    /*0xde7008*/ void QueryPurchases();
    /*0xde739c*/ void ConsumePurchase(string productId);
    /*0xde74f8*/ void AcknowledgePurchase(string productId);
    /*0xde7654*/ void ManageRecurringProduct(string productId);
    /*0xde6eb8*/ void OnLoadingVisibility(bool visibility);
    /*0xde77e8*/ void PurchaseClientStateResponse(Gaa.IapResult iapResult);
    /*0xde7a48*/ void OnPurchaseUpdatedResponse(System.Collections.Generic.List<Gaa.PurchaseData> purchases, System.Collections.Generic.List<string> signatures);
    /*0xde8140*/ void OnQueryPurchasesResponse(System.Collections.Generic.List<Gaa.PurchaseData> purchases, System.Collections.Generic.List<string> signatures);
    /*0xde7aac*/ void ParsePurchaseData(string func, System.Collections.Generic.List<Gaa.PurchaseData> purchases, System.Collections.Generic.List<string> signatures);
    /*0xde81a4*/ void OnPurchaseItemClick(string productId, MainUIScript.PurchaseButtonState state);
    /*0xde830c*/ void OnProductDetailsResponse(System.Collections.Generic.List<Gaa.ProductDetail> products);
    /*0xde8760*/ void OnDetailItemClick(string productId, string productType);
    /*0xde8764*/ void OnConsumeSuccessResponse(Gaa.PurchaseData purchaseData);
    /*0xde8c4c*/ void OnAcknowledgeSuccessResponse(Gaa.PurchaseData purchaseData);
    /*0xde8d00*/ void OnManageRecurringResponse(Gaa.PurchaseData purchaseData, string action);

    enum PurchaseButtonState
    {
        NONE = 0,
        ACKNOWLEDGE = 1,
        CONSUME = 2,
        REACTIVE = 3,
        CANCEL = 4,
    }

    class <StartConnectService>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MainUIScript <>4__this;

        /*0xe5de14*/ <StartConnectService>d__33(int <>1__state);
        /*0xe5de40*/ void System.IDisposable.Dispose();
        /*0xe5de44*/ bool MoveNext();
        /*0xe5dee8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5def0*/ void System.Collections.IEnumerator.Reset();
        /*0xe5df30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ string id;
        /*0x18*/ MainUIScript.PurchaseButtonState state;
        /*0x20*/ MainUIScript <>4__this;

        /*0xe5ddb8*/ <>c__DisplayClass44_0();
        /*0xe5ddc0*/ void <ParsePurchaseData>b__0();
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ string id;
        /*0x18*/ string type;
        /*0x20*/ MainUIScript <>4__this;

        /*0xe5dde8*/ <>c__DisplayClass46_0();
        /*0xe5ddf0*/ void <OnProductDetailsResponse>b__0();
    }
}

class NetworkManager : Singleton.Component.SingletonComponent<NetworkManager>
{
    static int timeoutInterval = 30;
    static int retryMaxCount = 2;
    /*0x28*/ Newtonsoft.Json.JsonSerializerSettings _jsonConvertSettings;

    static /*0x2b4fcd8*/ void CheckBalanceUpdated(ServerProtocol.IResponseCommon res);
    /*0x2b51714*/ NetworkManager();
    /*0x2b4415c*/ void AwakeInstance();
    /*0x2b44160*/ bool InitInstance();
    /*0x2b44168*/ void ReleaseInstance();
    /*0x2b4416c*/ void Send_GateZone(System.Action callback);
    /*0x2b44764*/ void Send_GateInit(bool _loading, System.Action<bool, PTShare.Define.ErrorCode> _response);
    /*0x2b448f4*/ void Send_BalanceData(bool _loading, ServerProtocol.ReqBalanceData _request, System.Action<System.Byte[]> _respone);
    /*0x2b449e4*/ void Send_Language(bool _loading, ServerProtocol.ReqBalanceLocalize _request, System.Action<System.Byte[]> _respone);
    /*0x2b44a40*/ void Send_AccountLogin(bool _loading, ServerProtocol.ReqAccountLogin _request, System.Action<ServerProtocol.ResAccountLogin> _response, System.Action<int> _fail);
    /*0x2b44ae0*/ void Send_AccountLogout(bool _loading, ServerProtocol.ReqAccountLogout _request, System.Action<ServerProtocol.ResAccountLogout> _response);
    /*0x2b44b7c*/ void Send_AccountAttach(bool _loading, ServerProtocol.ReqAccountAttach _request, System.Action<ServerProtocol.ResAccountAttach> _response, System.Action<int, string> _fail);
    /*0x2b44c1c*/ void Send_AccountDetach(bool _loading, ServerProtocol.ReqAccountDetach _request, System.Action<ServerProtocol.ResAccountDetach> _response);
    /*0x2b44cb8*/ void Send_AccountNew(bool _loading, ServerProtocol.ReqAccountNew _request, System.Action<ServerProtocol.ResAccountNew> _response);
    /*0x2b44d54*/ void Send_AccountFirst(bool _loading, ServerProtocol.ReqAccountFirst _request, System.Action<ServerProtocol.ResAccountFirst> _response);
    /*0x2b44df0*/ void Send_UpdateProfile(bool _loading, ServerProtocol.ReqUpdateProfile _request, System.Action<ServerProtocol.ResUpdateProfile> _response);
    /*0x2b44e8c*/ void Send_UpdateNickName(bool _loading, ServerProtocol.ReqUpdateNickname _request, System.Action<ServerProtocol.ResUpdateNickname> _response);
    /*0x2b44f28*/ void Send_UpdateMoveArea(bool _loading, ServerProtocol.ReqAccountMoveArea _request, System.Action<ServerProtocol.ResAccountMoveArea> _response);
    /*0x2b44fc4*/ void Send_AccountPlayersArea(bool _loading, ServerProtocol.ReqAccountPlayers _request, System.Action<ServerProtocol.ResAccountPlayers> _response);
    /*0x2b45060*/ void Send_AccountIdle(bool _loading, ServerProtocol.ReqAccountIdle _request, System.Action<ServerProtocol.ResAccountIdle> _response);
    /*0x2b450fc*/ void Send_AccountTutorial(bool _loading, ServerProtocol.ReqAccountTutorial _request, System.Action<ServerProtocol.ResAccountTutorial> _response);
    /*0x2b45198*/ void Send_AccountDetail(bool _loading, ServerProtocol.ReqAccountDetail _request, System.Action<ServerProtocol.ResAccountDetail> _response);
    /*0x2b45234*/ void Send_AccountQuit(bool _loading, ServerProtocol.ReqAccountQuit _request, System.Action<ServerProtocol.ResAccountQuit> _response);
    /*0x2b452d0*/ void Send_AccountCancelQuit(bool _loading, ServerProtocol.ReqAccountCancelQuit _request, System.Action<ServerProtocol.ResAccountCancelQuit> _response);
    /*0x2b4536c*/ void Send_AccountNotice(bool _loading, ServerProtocol.ReqAccountNotice _request, System.Action<ServerProtocol.ResAccountNotice> _response);
    /*0x2b45408*/ void Send_AccountLanguage(bool _loading, ServerProtocol.ReqAccountLanguage _request, System.Action<ServerProtocol.ResAccountLanguage> _response);
    /*0x2b454a4*/ void Send_AccountPreviewIdle(bool _loading, ServerProtocol.ReqAccountPreviewIdle _request, System.Action<ServerProtocol.ResAccountPreviewIdle> _response);
    /*0x2b45540*/ void Send_AccountUpdateAttend(bool _loading, ServerProtocol.ReqAccountUpdateAttend _request, System.Action<ServerProtocol.ResAccountUpdateAttend> _response);
    /*0x2b455dc*/ void Send_AdminConsole(bool _loading, ServerProtocol.ReqAdminConsole _request, System.Action<ServerProtocol.ResAdminConsole> _response);
    /*0x2b456b8*/ void Send_AdminExport(bool _loading, ServerProtocol.ReqAdminExport _request, System.Action<System.Byte[]> _respone);
    /*0x2b45714*/ void Send_AdminImport(bool _loading, ServerProtocol.ReqAdminImport _request, System.Action<ServerProtocol.ResAdminImport> _response);
    /*0x2b4589c*/ void Send_VerifyBegin(bool _loading, ServerProtocol.ReqAdminVerifyBegin _request, System.Action<ServerProtocol.ResAdminVerifyBegin> _response, System.Action<int, string> _responseFail);
    /*0x2b4593c*/ void Send_VerifyFinish(bool _loading, ServerProtocol.ReqAdminVerifyFinish _request, System.Action<ServerProtocol.ResAdminVerifyFinish> _response);
    /*0x2b459d8*/ void Send_EnterBoard(bool _loading, ServerProtocol.ReqBoardEnter _request, System.Action<ServerProtocol.ResBoardEnter> _response);
    /*0x2b45a74*/ void Send_CampaignBoard(bool _loading, ServerProtocol.ReqBoardCampaign _request, System.Action<ServerProtocol.ResBoardCampaign> _response);
    /*0x2b45b10*/ void Send_HardCampaignBoard(bool _loading, ServerProtocol.ReqBoardHardCampaign _request, System.Action<ServerProtocol.ResBoardHardCampaign> _response);
    /*0x2b45bac*/ void Send_TowerBoard(bool _loading, ServerProtocol.ReqBoardTower _request, System.Action<ServerProtocol.ResBoardTower> _response);
    /*0x2b45c48*/ void Send_FactionBoard(bool _loading, ServerProtocol.ReqBoardHeroPoint _request, System.Action<ServerProtocol.ResBoardHeroPoint> _response);
    /*0x2b45ce4*/ void Send_BoardRewardList(bool _loading, ServerProtocol.ReqBoardRewardList _request, System.Action<ServerProtocol.ResBoardRewardList> _response);
    /*0x2b45d80*/ void Send_BoardTakeReward(bool _loading, ServerProtocol.ReqBoardTakeReward _request, System.Action<ServerProtocol.ResBoardTakeReward> _response);
    /*0x2b45e1c*/ void Send_BeginCampaign(bool _loading, ServerProtocol.ReqCampaignBegin _request, System.Action<ServerProtocol.ResCampaignBegin> _response);
    /*0x2b45eb8*/ void Send_FinishCampaign(bool _loading, ServerProtocol.ReqCampaignFinish _request, System.Action<ServerProtocol.ResCampaignFinish> _response);
    /*0x2b45f54*/ void Send_NextChapter(bool _loading, ServerProtocol.ReqCampaignNextChapter _request, System.Action<ServerProtocol.ResCampaignNextChapter> _response);
    /*0x2b45ff0*/ void Send_ChapterInfo(bool _loading, ServerProtocol.ReqCampaignInfo _request, System.Action<ServerProtocol.ResCampaignInfo> _response);
    /*0x2b4608c*/ void Send_CamapignReplay(bool _loading, ServerProtocol.ReqCampaignReplay _request, System.Action<ServerProtocol.ResCampaignReplay> _response);
    /*0x2b46128*/ void Send_CamapignBuddy(bool _loading, ServerProtocol.ReqCampaignBuddy _request, System.Action<ServerProtocol.ResCampaignBuddy> _response);
    /*0x2b461c4*/ void Send_GetFriends(bool _loading, ServerProtocol.ReqFriendFriends _request, System.Action<ServerProtocol.ResFriendFriends> _response);
    /*0x2b46260*/ void Send_GetFriendRequestors(bool _loading, ServerProtocol.ReqFriendRequestors _request, System.Action<ServerProtocol.ResFriendRequestors> _response);
    /*0x2b462fc*/ void Send_GetFriendBlacks(bool _loading, ServerProtocol.ReqFriendBlacks _request, System.Action<ServerProtocol.ResFriendBlacks> _response);
    /*0x2b46398*/ void Send_SearchFriend(bool _loading, ServerProtocol.ReqFriendSearch _request, System.Action<ServerProtocol.ResFriendSearch> _response);
    /*0x2b46434*/ void Send_InviteFriend(bool _loading, ServerProtocol.ReqFriendSend _request, System.Action<ServerProtocol.ResFriendSend> _response);
    /*0x2b464d0*/ void Send_AcceptFriend(bool _loading, ServerProtocol.ReqFriendAccept _request, System.Action<ServerProtocol.ResFriendAccept> _response);
    /*0x2b4656c*/ void Send_DenyFriend(bool _loading, ServerProtocol.ReqFriendDeny _request, System.Action<ServerProtocol.ResFriendDeny> _response);
    /*0x2b46608*/ void Send_DeleteFriend(bool _loading, ServerProtocol.ReqFriendDelete _request, System.Action<ServerProtocol.ResFriendDelete> _response);
    /*0x2b466a4*/ void Send_SendPointFriend(bool _loading, ServerProtocol.ReqFriendSendPoint _request, System.Action<ServerProtocol.ResFriendSendPoint> _response);
    /*0x2b46740*/ void Send_TakePointFriend(bool _loading, ServerProtocol.ReqFriendTakePoint _request, System.Action<ServerProtocol.ResFriendTakePoint> _response);
    /*0x2b467dc*/ void Send_AllAtOncePointFriend(bool _loading, ServerProtocol.ReqFriendAllPoint _request, System.Action<ServerProtocol.ResFriendAllPoint> _response);
    /*0x2b46878*/ void Send_AddBlacklist(bool _loading, ServerProtocol.ReqFriendBlacklist _request, System.Action<ServerProtocol.ResFriendBlacklist> _response);
    /*0x2b46914*/ void Send_RemoveBlacklist(bool _loading, ServerProtocol.ReqFriendBlacklistRemove _request, System.Action<ServerProtocol.ResFriendBlacklistRemove> _response);
    /*0x2b469b0*/ void Send_Sparring(bool _loading, ServerProtocol.ReqFriendSparring _request, System.Action<ServerProtocol.ResFriendSparring> _response);
    /*0x2b3d778*/ void Send_MercenaryRentList(bool _loading, ServerProtocol.ReqMercenaryRentList _request, System.Action<ServerProtocol.ResMercenaryRentList> _response);
    /*0x2b3d960*/ void Send_MercenaryRent(bool _loading, ServerProtocol.ReqMercenaryRent _request, System.Action<ServerProtocol.ResMercenaryRent> _response);
    /*0x2b3db48*/ void Send_MercenaryRentCancel(bool _loading, ServerProtocol.ReqMercenaryRentCancel _request, System.Action<ServerProtocol.ResMercenaryRentCancel> _response);
    /*0x2b3dd30*/ void Send_MercenaryRentReturn(bool _loading, ServerProtocol.ReqMercenaryRentReturn _request, System.Action<ServerProtocol.ResMercenaryRentReturn> _response);
    /*0x2b3ddcc*/ void Send_MercenaryLendList(bool _loading, ServerProtocol.ReqMercenaryLendList _request, System.Action<ServerProtocol.ResMercenaryLendList> _response);
    /*0x2b3de68*/ void Send_MercenaryLend(bool _loading, ServerProtocol.ReqMercenaryLend _request, System.Action<ServerProtocol.ResMercenaryLend> _response);
    /*0x2b3e038*/ void Send_MercenaryLendFast(bool _loading, ServerProtocol.ReqMercenaryLendFast _request, System.Action<ServerProtocol.ResMercenaryLendFast> _response);
    /*0x2b3e0d4*/ void Send_MercenaryLendDeny(bool _loading, ServerProtocol.ReqMercenaryLendDeny _request, System.Action<ServerProtocol.ResMercenaryLendDeny> _response);
    /*0x2b3e2a4*/ void Send_MercenaryLendDenyAll(bool _loading, ServerProtocol.ReqMercenaryLendDenyAll _request, System.Action<ServerProtocol.ResMercenaryLendDenyAll> _response);
    /*0x2b46a4c*/ void Send_EnterGuild(bool _loading, ServerProtocol.ReqGuildEnter _request, System.Action<ServerProtocol.ResGuildEnter> _response, System.Action<int, string> _failed);
    /*0x2b46aec*/ void Send_SearchGuild(bool _loading, ServerProtocol.ReqGuildSearch _request, System.Action<ServerProtocol.ResGuildSearch> _response);
    /*0x2b46b88*/ void Send_CreateGuild(bool _loading, ServerProtocol.ReqGuildCreate _request, System.Action<ServerProtocol.ResGuildCreate> _response);
    /*0x2b46c24*/ void Send_AcceptGuild(bool _loading, ServerProtocol.ReqGuildAcceptReq _request, System.Action<ServerProtocol.ResGuildAcceptReq> _response);
    /*0x2b46cc0*/ void Send_AcceptReqAllGuild(bool _loading, ServerProtocol.ReqGuildAcceptReqAll _request, System.Action<ServerProtocol.ResGuildAcceptReqAll> _response);
    /*0x2b46d5c*/ void Send_DenyGuild(bool _loading, ServerProtocol.ReqGuildDenyReq _request, System.Action<ServerProtocol.ResGuildDenyReq> _response);
    /*0x2b46df8*/ void Send_DenyReqAllGuild(bool _loading, ServerProtocol.ReqGuildDenyReqAll _request, System.Action<ServerProtocol.ResGuildDenyReqAll> _response);
    /*0x2b46e94*/ void Send_DetailGuild(bool _loading, ServerProtocol.ReqGuildDetail _request, System.Action<ServerProtocol.ResGuildDetail> _response);
    /*0x2b46f30*/ void Send_GuildRecommend(bool _loading, ServerProtocol.ReqGuildRecommend _request, System.Action<ServerProtocol.ResGuildRecommend> _response);
    /*0x2b46fcc*/ void Send_SendReqGuild(bool _loading, ServerProtocol.ReqGuildSendReq _request, System.Action<ServerProtocol.ResGuildSendReq> _response, System.Action<int, string> _fail);
    /*0x2b4706c*/ void Send_RequestorsGuild(bool _loading, ServerProtocol.ReqGuildRequestors _request, System.Action<ServerProtocol.ResGuildRequestors> _response);
    /*0x2b47108*/ void Send_UpdateNameGuild(bool _loading, ServerProtocol.ReqUpdateName _request, System.Action<ServerProtocol.ResUpdateName> _response);
    /*0x2b471a4*/ void Send_KickGuild(bool _loading, ServerProtocol.ReqGuildKick _request, System.Action<ServerProtocol.ResGuildKick> _response);
    /*0x2b47240*/ void Send_LeaveGuild(bool _loading, ServerProtocol.ReqGuildLeave _request, System.Action<ServerProtocol.ResGuildLeave> _response);
    /*0x2b472dc*/ void Send_DevolveGuild(bool _loading, ServerProtocol.ReqGuildDevolve _request, System.Action<ServerProtocol.ResGuildDevolve> _response);
    /*0x2b47378*/ void Send_SetPositionGuild(bool _loading, ServerProtocol.ReqGuildSetPosition _request, System.Action<ServerProtocol.ResGuildSetPosition> _response);
    /*0x2b47414*/ void Send_SetAuthGuild(bool _loading, ServerProtocol.ReqGuildSetAuth _request, System.Action<ServerProtocol.ResGuildSetPosition> _response, System.Action<int, string> _fail);
    /*0x2b474b4*/ void Send_UpdateInfoGuild(bool _loading, ServerProtocol.ReqGuildUpdateInfo _request, System.Action<ServerProtocol.ResGuildUpdateInfo> _response);
    /*0x2b47550*/ void Send_SetCampGuild(bool _loading, ServerProtocol.ReqGuildSetCamp _request, System.Action<ServerProtocol.ResGuildSetCamp> _response);
    /*0x2b475ec*/ void Send_CleanGuild(bool _loading, ServerProtocol.ReqGuildClean _request, System.Action<ServerProtocol.ResGuildClean> _response);
    /*0x2b47688*/ void Send_OfficeGuild(bool _loading, ServerProtocol.ReqGuildOffice _request, System.Action<ServerProtocol.ResGuildOffice> _response);
    /*0x2b47724*/ void Send_BossOpenGuild(bool _loading, ServerProtocol.ReqGuildBossOpen _request, System.Action<ServerProtocol.ResGuildBossOpen> _response);
    /*0x2b477c0*/ void Send_BeginGuild(bool _loading, ServerProtocol.ReqGuildBegin _request, System.Action<ServerProtocol.ResGuildBegin> _response);
    /*0x2b4785c*/ void Send_FinishGuild(bool _loading, ServerProtocol.ReqGuildFinish _request, System.Action<ServerProtocol.ResGuildFinish> _response);
    /*0x2b478f8*/ void Send_MopUpGuild(bool _loading, ServerProtocol.ReqGuildMopUp _request, System.Action<ServerProtocol.ResGuildMopUp> _response);
    /*0x2b47994*/ void Send_BossHistory(bool _loading, ServerProtocol.ReqGuildBossHistory _request, System.Action<ServerProtocol.ResGuildBossHistory> _response);
    /*0x2b47a30*/ void Send_BossReplayGuild(bool _loading, ServerProtocol.ReqGuildReplay _request, System.Action<ServerProtocol.ResGuildReplay> _response);
    /*0x2b47acc*/ void Send_BossRanking(bool _loading, ServerProtocol.ReqGuildRanking _request, System.Action<ServerProtocol.ResGuildRanking> _response);
    /*0x2b47b68*/ void Send_BossGuildRanking(bool _loading, ServerProtocol.ReqGuildGuildRanking _request, System.Action<ServerProtocol.ResGuildGuildRanking> _response);
    /*0x2b47c04*/ void Send_GuildWarEnter(bool _loading, ServerProtocol.ReqGuildWarEnter _request, System.Action<ServerProtocol.ResGuildWarEnter> _response);
    /*0x2b47ca0*/ void Send_GuildWarSearch(bool _loading, ServerProtocol.ReqGuildWarSearch _request, System.Action<ServerProtocol.ResGuildWarSearch> _response, System.Action<int, string> error);
    /*0x2b47d40*/ void Send_GuildWarChoice(bool _loading, ServerProtocol.ReqGuildWarChoice _request, System.Action<ServerProtocol.ResGuildWarChoice> _response);
    /*0x2b47ddc*/ void Send_GuildWarFinish(bool _loading, ServerProtocol.ReqGuildWarFinish _request, System.Action<ServerProtocol.ResGuildWarFinish> _response);
    /*0x2b47e78*/ void Send_GuildWarHistory(bool _loading, ServerProtocol.ReqGuildWarHistory _request, System.Action<ServerProtocol.ResGuildWarHistory> _response);
    /*0x2b47f14*/ void Send_GuildWarReplay(bool _loading, ServerProtocol.ReqGuildWarReplay _request, System.Action<ServerProtocol.ResGuildWarReplay> _response);
    /*0x2b47fb0*/ void Send_GuildWarSetCaptain(bool _loading, ServerProtocol.ReqGuildWarSetCaptain _request, System.Action<ServerProtocol.ResGuildWarSetCaptain> _response);
    /*0x2b4804c*/ void Send_GuildWarBuyTactic(bool _loading, ServerProtocol.ReqGuildWarBuyTactic _request, System.Action<ServerProtocol.ResGuildWarBuyTactic> _response);
    /*0x2b480e8*/ void Send_GuildWarDeck(bool _loading, ServerProtocol.ReqGuildWarDeck _request, System.Action<ServerProtocol.ResGuildWarDeck> _response);
    /*0x2b48184*/ void Send_GuildWarTicket(bool _loading, ServerProtocol.ReqGuildWarTicket _request, System.Action<ServerProtocol.ResGuildWarTicket> _response);
    /*0x2b48220*/ void Send_GuildWarForm(bool _loading, ServerProtocol.ReqGuildWarForm _request, System.Action<ServerProtocol.ResGuildWarForm> _response);
    /*0x2b482bc*/ void Send_GuildWarFormDetail(bool _loading, ServerProtocol.ReqGuildWarFormDetail _request, System.Action<ServerProtocol.ResGuildWarFormDetail> _response);
    /*0x2b48358*/ void Send_GuildWarSetForm(bool _loading, ServerProtocol.ReqGuildWarSetForm _request, System.Action<ServerProtocol.ResGuildWarSetForm> _response, System.Action<int, string> _fail);
    /*0x2b483f8*/ void Send_GuildWarUnsetForm(bool _loading, ServerProtocol.ReqGuildWarUnsetForm _request, System.Action<ServerProtocol.ResGuildWarUnsetForm> _response, System.Action<int, string> _fail);
    /*0x2b48498*/ void Send_GuildWarUpdateDeck(bool _loading, ServerProtocol.ReqGuildWarUpdateDeck _request, System.Action<ServerProtocol.ResGuildWarUpdateDeck> _response);
    /*0x2b48534*/ void Send_GuildWarMyFormHero(bool _loading, ServerProtocol.ReqGuildWarMyFormHero _request, System.Action<ServerProtocol.ResGuildWarMyFormHero> _response);
    /*0x2b485d0*/ void Send_GuildWarMember(bool _loading, ServerProtocol.ReqGuildWarMember _request, System.Action<ServerProtocol.ResGuildWarMember> _response);
    /*0x2b4866c*/ void Send_GuildWarContribution(bool _loading, ServerProtocol.ReqGuildWarContribution _request, System.Action<ServerProtocol.ResGuildWarContribution> _response);
    /*0x2b48708*/ void Send_HousingEnter(bool _loading, ServerProtocol.ReqHousingEnter _request, System.Action<ServerProtocol.ResHousingEnter> _response);
    /*0x2b487a4*/ void Send_HousingOpenStart(bool _loading, ServerProtocol.ReqHousingOpenStart _request, System.Action<ServerProtocol.ResHousingOpenStart> _response);
    /*0x2b48840*/ void Send_HousingOpenEnd(bool _loading, ServerProtocol.ReqHousingOpenEnd _request, System.Action<ServerProtocol.ResHousingOpenEnd> _response);
    /*0x2b488dc*/ void Send_HousingFastOpen(bool _loading, ServerProtocol.ReqHousingFastOpen _request, System.Action<ServerProtocol.ResHousingFastOpen> _response);
    /*0x2b48978*/ void Send_HousingUpdate(bool _loading, ServerProtocol.ReqHousingUpdate _request, System.Action<ServerProtocol.ResHousingUpdate> _response);
    /*0x2b48a14*/ void Send_HousingUpdateDeck(bool _loading, ServerProtocol.ReqHousingUpdateDeck _request, System.Action<ServerProtocol.ResHousingUpdateDeck> _response);
    /*0x2b48ab0*/ void Send_HousingCleanStart(bool _loading, ServerProtocol.ReqHousingClearStart _request, System.Action<ServerProtocol.ResHousingClearStart> _response);
    /*0x2b48b4c*/ void Send_HousingCleanEnd(bool _loading, ServerProtocol.ReqHousingClearEnd _request, System.Action<ServerProtocol.ResHousingClearEnd> _response);
    /*0x2b48be8*/ void Send_HousingSendPoint(bool _loading, ServerProtocol.ReqHousingSendPoint _request, System.Action<ServerProtocol.ResHousingSendPoint> _response);
    /*0x2b48c84*/ void Send_HousingTakePoint(bool _loading, ServerProtocol.ReqHousingTakePoint _request, System.Action<ServerProtocol.ResHousingTakePoint> _response);
    /*0x2b48d20*/ void Send_HousingAllPoint(bool _loading, ServerProtocol.ReqHousingAllPoint _request, System.Action<ServerProtocol.ResHousingAllPoint> _response);
    /*0x2b48dbc*/ void Send_HousingVisit(bool _loading, ServerProtocol.ReqHousingVisit _request, System.Action<ServerProtocol.ResHousingVisit> _response);
    /*0x2b48e58*/ void Send_HousingHistory(bool _loading, ServerProtocol.ReqHousingHistory _request, System.Action<ServerProtocol.ResHousingHistory> _response);
    /*0x2b48ef4*/ void Send_HousingSaveList(bool _loading, ServerProtocol.ReqHousingSaveList _request, System.Action<ServerProtocol.ResHousingSaveList> _response);
    /*0x2b48f90*/ void Send_HousingSave(bool _loading, ServerProtocol.ReqHousingSave _request, System.Action<ServerProtocol.ResHousingSave> _response);
    /*0x2b49028*/ void Send_HousingSaveName(bool _loading, ServerProtocol.ReqHousingSaveName _request, System.Action<ServerProtocol.ResHousingSaveName> _response);
    /*0x2b490c4*/ void Send_HousingDelete(bool _loading, ServerProtocol.ReqHousingDelete _request, System.Action<ServerProtocol.ResHousingDelete> _response);
    /*0x2b49160*/ void Send_HousingUpgrade(bool _loading, ServerProtocol.ReqHousingObjUpgrade _request, System.Action<ServerProtocol.ResHousingObjUpgrade> _response);
    /*0x2b491f8*/ void Send_HousingUpgradeComplete(bool _loading, ServerProtocol.ReqHousingObjComplete _request, System.Action<ServerProtocol.ResHousingObjComplete> _response);
    /*0x2b49294*/ void Send_HousingPurchase(bool _loading, ServerProtocol.ReqHousingObjPurchase _request, System.Action<ServerProtocol.ResHousingObjPurchase> _response);
    /*0x2b49330*/ void Send_HousingSell(bool _loading, ServerProtocol.ReqHousingObjSell _request, System.Action<ServerProtocol.ResHousingObjSell> _response);
    /*0x2b493cc*/ void Send_HousingDismiss(bool _loading, ServerProtocol.ReqHousingObjDismiss _request, System.Action<ServerProtocol.ResHousingObjDismiss> _response);
    /*0x2b49468*/ void Send_HousingBuy(bool _loading, ServerProtocol.ReqHousingObjBuy _request, System.Action<ServerProtocol.ResHousingObjBuy> _response);
    /*0x2b49504*/ void Send_HousingObjLock(bool _loading, ServerProtocol.ReqHousingObjLock _request, System.Action<ServerProtocol.ResHousingObjLock> _response);
    /*0x2b495a0*/ void Send_VIPReward(bool _loading, ServerProtocol.ReqCashShopVIPReward _request, System.Action<ServerProtocol.ResCashShopVIPReward> _response);
    /*0x2b4963c*/ void Send_GetHeroInven(bool _loading, ServerProtocol.ReqHeroInven _request, System.Action<ServerProtocol.ResHeroInven> _response);
    /*0x2b496d8*/ void Send_EquipHero(bool _loading, ServerProtocol.ReqHeroEquip _request, System.Action<ServerProtocol.ResHeroEquip> _response);
    /*0x2b49774*/ void Send_AutoEquipHero(bool _loading, ServerProtocol.ReqHeroAutoEquip _request, System.Action<ServerProtocol.ResHeroAutoEquip> _response);
    /*0x2b49810*/ void Send_UnequipHero(bool _loading, ServerProtocol.ReqHeroUnequip _request, System.Action<ServerProtocol.ResHeroUnequip> _response);
    /*0x2b498ac*/ void Send_UnequipHeroAll(bool _loading, ServerProtocol.ReqHeroAllUnequip _request, System.Action<ServerProtocol.ResHeroAllUnequip> _response);
    /*0x2b49948*/ void Send_PromoteHero(bool _loading, ServerProtocol.ReqHeroPromote _request, System.Action<ServerProtocol.ResHeroPromote> _response);
    /*0x2b499e4*/ void Send_PromoteMultiHero(bool _loading, ServerProtocol.ReqHeroPromoteMulti _request, System.Action<ServerProtocol.ResHeroPromoteMulti> _response);
    /*0x2b49a7c*/ void Send_LevelupHero(bool _loading, ServerProtocol.ReqHeroLevelUp _request, System.Action<ServerProtocol.ResHeroLevelUp> _response);
    /*0x2b49b18*/ void Send_LockHero(bool _loading, ServerProtocol.ReqHeroLock _request, System.Action<ServerProtocol.ResHeroLock> _response);
    /*0x2b49bb4*/ void Send_ExtendSlot(bool _loading, ServerProtocol.ReqHeroExtendSlot _request, System.Action<ServerProtocol.ResHeroExtendSlot> _response);
    /*0x2b49c50*/ void Send_BookReward(bool _loading, ServerProtocol.ReqHeroBookReward _request, System.Action<ServerProtocol.ResHeroBookReward> _response);
    /*0x2b49cec*/ void Send_ResetHero(bool _loading, ServerProtocol.ReqHeroWagon _request, System.Action<ServerProtocol.ResHeroWagon> _response);
    /*0x2b49d88*/ void Send_RevertHero(bool _loading, ServerProtocol.ReqHeroRevert _request, System.Action<ServerProtocol.ResHeroRevert> _response);
    /*0x2b49e24*/ void Send_DismissHero(bool _loading, ServerProtocol.ReqHeroDismiss _request, System.Action<ServerProtocol.ResHeroDismiss> _response);
    /*0x2b49ebc*/ void Send_ResetFactionBonus(bool _loading, ServerProtocol.ReqEquipResetFactionBonus _request, System.Action<ServerProtocol.ResEquipResetFactionBonus> _response);
    /*0x2b49f58*/ void Send_ConfirmFactionBonus(bool _loading, ServerProtocol.ReqEquipConfirmFactionBonus _request, System.Action<ServerProtocol.ResEquipConfirmFactionBonus> _response);
    /*0x2b49ff4*/ void Send_PromoteEquipment(bool _loading, ServerProtocol.ReqEquipPromote _request, System.Action<ServerProtocol.ResEquipPromote> _response);
    /*0x2b4a090*/ void Send_ReinforceHero(bool _loading, ServerProtocol.ReqEquipReinforce _request, System.Action<ServerProtocol.ResEquipReinforce> _response);
    /*0x2b4a128*/ void Send_EquipSignature(bool _loading, ServerProtocol.ReqEquipSignature _request, System.Action<ServerProtocol.ResEquipSignature> _response);
    /*0x2b4a1c0*/ void Send_UseItem(bool _loading, ServerProtocol.ReqItemUse _request, System.Action<ServerProtocol.ResItemUse> _response);
    /*0x2b4a25c*/ void Send_SearchMail(bool _loading, ServerProtocol.ReqMailInbox _request, System.Action<ServerProtocol.ResMailInbox> _response);
    /*0x2b4a2f8*/ void Send_TakeMail(bool _loading, ServerProtocol.ReqMailTake _request, System.Action<ServerProtocol.ResMailTake> _response);
    /*0x2b4a394*/ void Send_TakeAllMail(bool _loading, ServerProtocol.ReqMailTakeAll _request, System.Action<ServerProtocol.ResMailTakeAll> _response);
    /*0x2b4a430*/ void Send_RemoveMail(bool _loading, ServerProtocol.ReqMailRemove _request, System.Action<ServerProtocol.ResMailRemove> _response);
    /*0x2b4a4cc*/ void Send_RemoveAllMail(bool _loading, ServerProtocol.ReqMailRemoveAll _request, System.Action<ServerProtocol.ResMailRemoveAll> _response);
    /*0x2b4a568*/ void Send_CashShopPurchase(bool _loading, ServerProtocol.ReqCashShopPurchase _request, System.Action<ServerProtocol.ResCashShopPurchase> _response);
    /*0x2b4a600*/ void Send_CashShopCheck(bool _loading, ServerProtocol.ReqCashShopCheck _request, System.Action<ServerProtocol.ResCashShopCheck> _response, System.Action<int, string> _failed);
    /*0x2b4a6a0*/ void Send_GrowthEnter(bool _loading, ServerProtocol.ReqGrowthEnter _request, System.Action<ServerProtocol.ResGrowthEnter> _response, System.Action<int, string> _failed);
    /*0x2b4a740*/ void Send_GrowthTake(bool _loading, ServerProtocol.ReqGrowthTake _request, System.Action<ServerProtocol.ResGrowthTake> _response, System.Action<int, string> _failed);
    /*0x2b4a7e0*/ void Send_CashShopClaim(bool _loading, ServerProtocol.ReqCashShopClaim _request, System.Action<ServerProtocol.ResCashShopClaim> _response, System.Action<int, string> _failed);
    /*0x2b4a880*/ void Send_CashShopInstant(bool _loading, ServerProtocol.ReqCashShopInstant _request, System.Action<ServerProtocol.ResCashShopInstant> _response, System.Action<int, string> _failed);
    /*0x2b4a920*/ void Send_BeginTower(bool _loading, ServerProtocol.ReqTowerBegin _request, System.Action<ServerProtocol.ResTowerBegin> _response);
    /*0x2b4a9bc*/ void Send_FinishTower(bool _loading, ServerProtocol.ReqTowerFinish _request, System.Action<ServerProtocol.ResTowerFinish> _response);
    /*0x2b4aa58*/ void Send_TowerRanking(bool _loading, ServerProtocol.ReqTowerRanking _request, System.Action<ServerProtocol.ResTowerRanking> _response);
    /*0x2b4aaf4*/ void Send_TowerOthers(bool _loading, ServerProtocol.ReqTowerOthers _request, System.Action<ServerProtocol.ResTowerOthers> _response);
    /*0x2b4ab90*/ void Send_TowerInfo(bool _loading, ServerProtocol.ReqTowerInfo _request, System.Action<ServerProtocol.ResTowerInfo> _response);
    /*0x2b4ac2c*/ void Send_TowerReplay(bool _loading, ServerProtocol.ReqTowerReplay _request, System.Action<ServerProtocol.ResTowerReplay> _response);
    /*0x2b4acc8*/ void Send_BuyGacha(bool _loading, ServerProtocol.ReqGachaBuy _request, System.Action<ServerProtocol.ResGachaBuy> _response);
    /*0x2b4ad64*/ void Send_CommitWishList(bool _loading, ServerProtocol.ReqGachaCommitWishList _request, System.Action<ServerProtocol.ResGachaCommitWishList> _response);
    /*0x2b4ae00*/ void Send_EnterGacha(bool _loading, ServerProtocol.ReqGachaEnter _request, System.Action<ServerProtocol.ResGachaEnter> _response);
    /*0x2b4ae9c*/ void Send_BuyFactionPool(bool _loading, ServerProtocol.ReqGachaBuyFactionPool _request, System.Action<ServerProtocol.ResGachaBuyFactionPool> _response);
    /*0x2b4af38*/ void Send_SetAutoDismiss(bool _loading, ServerProtocol.ReqGachaSetAutoDismiss _request, System.Action<ServerProtocol.ResGachaSetAutoDismiss> _response);
    /*0x2b4afd4*/ void Send_LoadTroop(bool _loading, ServerProtocol.ReqTroopLoad _request, System.Action<ServerProtocol.ResTroopLoad> _response);
    /*0x2b4b070*/ void Send_MakeTroop(bool _loading, ServerProtocol.ReqTroopMake _request, System.Action<ServerProtocol.ResTroopMake> _response);
    /*0x2b4b10c*/ void Send_UpdateTroopName(bool _loading, ServerProtocol.ReqTroopUpdateName _request, System.Action<ServerProtocol.ResTroopUpdateName> _response);
    /*0x2b4b1a8*/ void Send_UpdateTroopOrder(bool _loading, ServerProtocol.ReqTroopUpdateOrder _request, System.Action<ServerProtocol.ResTroopUpdateOrder> _response);
    /*0x2b4b244*/ void Send_UpdateTroopHeroes(bool _loading, ServerProtocol.ReqTroopUpdateHeroes _request, System.Action<ServerProtocol.ResTroopUpdateHeroes> _response);
    /*0x2b4b2e0*/ void Send_RemoveTroop(bool _loading, ServerProtocol.ReqTroopRemove _request, System.Action<ServerProtocol.ResTroopRemove> _response);
    /*0x2b4b37c*/ void Send_EnterQuest(bool _loading, ServerProtocol.ReqQuestEnter _request, System.Action<ServerProtocol.ResQuestEnter> _response);
    /*0x2b4b418*/ void Send_NewQuest(bool _loading, ServerProtocol.ReqQuestNew _request, System.Action<ServerProtocol.ResQuestNew> _response);
    /*0x2b4b4b4*/ void Send_TakeQuest(bool _loading, ServerProtocol.ReqQuestTake _request, System.Action<ServerProtocol.ResQuestTake> _response);
    /*0x2b4b550*/ void Send_ExchangeQuest(bool _loading, ServerProtocol.ReqQuestExchange _request, System.Action<ServerProtocol.ResQuestExchange> _response);
    /*0x2b4b5ec*/ void Send_TakeMainQuest(bool _loading, ServerProtocol.ReqQuestTakeMain _request, System.Action<ServerProtocol.ResQuestTakeMain> _response);
    /*0x2b4b688*/ void Send_VisitSite(bool _loading, ServerProtocol.ReqQuestVisitSite _request, System.Action<ServerProtocol.ResQuestVisitSite> _response);
    /*0x2b4b724*/ void Send_MainArena(bool _loading, ServerProtocol.ReqArenaMain _request, System.Action<ServerProtocol.ResArenaMain> _response);
    /*0x2b4b7c0*/ void Send_EnterArena(bool _loading, ServerProtocol.ReqArenaEnter _request, System.Action<ServerProtocol.ResArenaEnter> _response);
    /*0x2b4b85c*/ void Send_UpdateDeckArena(bool _loading, ServerProtocol.ReqArenaUpdateDeck _request, System.Action<ServerProtocol.ResArenaUpdateDeck> _response);
    /*0x2b4b8f8*/ void Send_SearchArena(bool _loading, ServerProtocol.ReqArenaSearch _request, System.Action<ServerProtocol.ResArenaSearch> _response);
    /*0x2b4b994*/ void Send_HistoryArena(bool _loading, ServerProtocol.ReqArenaHistory _request, System.Action<ServerProtocol.ResArenaHistory> _response);
    /*0x2b4ba30*/ void Send_ChoiceArena(bool _loading, ServerProtocol.ReqArenaChoice _request, System.Action<ServerProtocol.ResArenaChoice> _response, System.Action<int, string> _failed);
    /*0x2b4bad0*/ void Send_FinishArena(bool _loading, ServerProtocol.ReqArenaFinish _request, System.Action<ServerProtocol.ResArenaFinish> _response);
    /*0x2b4bb6c*/ void Send_ReplayArena(bool _loading, ServerProtocol.ReqArenaReplay _request, System.Action<ServerProtocol.ResArenaReplay> _response);
    /*0x2b4bc08*/ void Send_TicketArena(bool _loading, ServerProtocol.ReqArenaTicket _request, System.Action<ServerProtocol.ResArenaTicket> _response);
    /*0x2b4bca4*/ void Send_EnterWorldArena(bool _loading, ServerProtocol.ReqWorldArenaEnter _request, System.Action<ServerProtocol.ResWorldArenaEnter> _response);
    /*0x2b4bd40*/ void Send_TakeRewardWorldArena(bool _loading, ServerProtocol.ReqWorldArenaTakeReward _request, System.Action<ServerProtocol.ResWorldArenaReward> _response);
    /*0x2b4bddc*/ void Send_UpdateDeckWorldArena(bool _loading, ServerProtocol.ReqWorldArenaUpdateDeck _request, System.Action<ServerProtocol.ResWorldArenaUpdateDeck> _response);
    /*0x2b4be78*/ void Send_TicketWorldArena(bool _loading, ServerProtocol.ReqWorldArenaTicket _request, System.Action<ServerProtocol.ResWorldArenaTicket> _response);
    /*0x2b4bf14*/ void Send_RefreshWorldArena(bool _loading, ServerProtocol.ReqWorldArenaRefresh _request, System.Action<ServerProtocol.ResWorldArenaRefresh> _response);
    /*0x2b4bfb0*/ void Send_HistoryWorldArena(bool _loading, ServerProtocol.ReqWorldArenaHistory _request, System.Action<ServerProtocol.ResWorldArenaHistory> _response);
    /*0x2b4c04c*/ void Send_ChoiceWorldArena(bool _loading, ServerProtocol.ReqWorldArenaChoice _request, System.Action<ServerProtocol.ResWorldArenaChoice> _response, System.Action<int, string> _failed);
    /*0x2b4c0ec*/ void Send_FinishWorldArena(bool _loading, ServerProtocol.ReqWorldArenaFinish _request, System.Action<ServerProtocol.ResWorldArenaFinish> _response);
    /*0x2b4c188*/ void Send_TrainingWorldArena(bool _loading, ServerProtocol.ReqWorldArenaTraining _request, System.Action<ServerProtocol.ResWorldArenaTraining> _response);
    /*0x2b4c224*/ void Send_MazeEnter(bool _loading, ServerProtocol.ReqMazeEnter _request, System.Action<ServerProtocol.ResMazeEnter> _response);
    /*0x2b4c2c0*/ void Send_MazeDice(bool _loading, ServerProtocol.ReqMazeDice _request, System.Action<ServerProtocol.ResMazeDice> _response);
    /*0x2b4c35c*/ void Send_MazeBegin(bool _loading, ServerProtocol.ReqMazeBegin _request, System.Action<ServerProtocol.ResMazeBegin> _response);
    /*0x2b4c3f8*/ void Send_MazeFinish(bool _loading, ServerProtocol.ReqMazeFinish _request, System.Action<ServerProtocol.ResMazeFinish> _response);
    /*0x2b4c494*/ void Send_MazeMate(bool _loading, ServerProtocol.ReqMazeMate _request, System.Action<ServerProtocol.ResMazeMate> _response);
    /*0x2b4c530*/ void Send_MazeMateReset(bool _loading, ServerProtocol.ReqMazeMateReset _request, System.Action<ServerProtocol.ResMazeMateReset> _response);
    /*0x2b4c5cc*/ void Send_MazeItem(bool _loading, ServerProtocol.ReqMazeItem _request, System.Action<ServerProtocol.ResMazeItem> _response);
    /*0x2b4c668*/ void Send_MazeRoll(bool _loading, ServerProtocol.ReqMazeRoll _request, System.Action<ServerProtocol.ResMazeRoll> _response);
    /*0x2b4c704*/ void Send_MazeInfo(bool _loading, ServerProtocol.ReqMazeInfo _request, System.Action<ServerProtocol.ResMazeInfo> _response);
    /*0x2b4c7a0*/ void Send_EnterResonance(bool _loading, ServerProtocol.ReqResonanceEnter _request, System.Action<ServerProtocol.ResResonanceEnter> _response);
    /*0x2b4c83c*/ void Send_OpenResonance(bool _loading, ServerProtocol.ReqResonanceOpen _request, System.Action<ServerProtocol.ResResonanceOpen> _response);
    /*0x2b4c8d8*/ void Send_CleanResonance(bool _loading, ServerProtocol.ReqResonanceClean _request, System.Action<ServerProtocol.ResResonanceClean> _response);
    /*0x2b4c974*/ void Send_PushResonance(bool _loading, ServerProtocol.ReqResonancePush _request, System.Action<ServerProtocol.ResResonancePush> _response);
    /*0x2b4ca10*/ void Send_PopResonance(bool _loading, ServerProtocol.ReqResonancePop _request, System.Action<ServerProtocol.ResResonancePop> _response);
    /*0x2b4caac*/ void Send_UnlockResonance(bool _loading, ServerProtocol.ReqResonanceUnlock _request, System.Action<ServerProtocol.ResResonanceUnlock> _response);
    /*0x2b4cb48*/ void Send_ReinforceResonance(bool _loading, ServerProtocol.ReqResonanceReinforce _request, System.Action<ServerProtocol.ResResonanceReinforce> _response);
    /*0x2b4cbe4*/ void Send_LevelUpResonance(bool _loading, ServerProtocol.ReqResonanceLevelUp _request, System.Action<ServerProtocol.ResResonanceLevelUp> _response);
    /*0x2b4cc80*/ void Send_ContentShopEnter(bool _loading, ServerProtocol.ReqContentShopEnter _request, System.Action<ServerProtocol.ResContentShopEnter> _response);
    /*0x2b4cd1c*/ void Send_ContentShopPurchase(bool _loading, ServerProtocol.ReqContentShopPurchase _request, System.Action<ServerProtocol.ResContentShopPurchase> _response);
    /*0x2b4cdb8*/ void Send_ContentShopReset(bool _loading, ServerProtocol.ReqContentShopReset _request, System.Action<ServerProtocol.ResContentShopReset> _response);
    /*0x2b4ce54*/ void Send_AttendReward(bool _loading, ServerProtocol.ReqEventAttendReward _request, System.Action<ServerProtocol.ResEventAttendReward> _response);
    /*0x2b4cef0*/ void Send_BattlePassRefresh(bool _loading, ServerProtocol.ReqEventPassRefresh _request, System.Action<ServerProtocol.ResEventPassRefresh> _response);
    /*0x2b4cf8c*/ void Send_BattlePassReward(bool _loading, ServerProtocol.ReqEventPassReward _request, System.Action<ServerProtocol.ResEventPassReward> _response);
    /*0x2b4d028*/ void Send_EventMissionEnter(bool _loading, ServerProtocol.ReqMissionEnter _request, System.Action<ServerProtocol.ResMissionEnter> _response, System.Action<int, string> _fail);
    /*0x2b4d0c8*/ void Send_EventMissionTake(bool _loading, ServerProtocol.ReqMissionTake _request, System.Action<ServerProtocol.ResMissionTake> _response, System.Action<int, string> _fail);
    /*0x2b4d168*/ void Send_EventMissionExchange(bool _loading, ServerProtocol.ReqMissionExchange _request, System.Action<ServerProtocol.ResMissionExchange> _response, System.Action<int, string> _fail);
    /*0x2b4d208*/ void Send_EventExchange(bool _loading, ServerProtocol.ReqEventExchange _request, System.Action<ServerProtocol.ResEventExchange> _response);
    /*0x2b4d2a4*/ void Send_Coupon(bool _loading, ServerProtocol.ReqEventCoupon _request, System.Action<ServerProtocol.ResEventCoupon> _response, System.Action<int, string> _fail);
    /*0x2b4d344*/ void Send_BountyEnter(bool _loading, ServerProtocol.ReqBountyEnter _request, System.Action<ServerProtocol.ResBountyEnter> _response, System.Action<int, string> _fail);
    /*0x2b4d3e4*/ void Send_BountyDispatch(bool _loading, ServerProtocol.ReqBountyDispatch _request, System.Action<ServerProtocol.ResBountyDispatch> _response, System.Action<int, string> _fail);
    /*0x2b4d484*/ void Send_BountySupport(bool _loading, ServerProtocol.ReqBountySupporter _request, System.Action<ServerProtocol.ResBountySupporter> _response, System.Action<int, string> _fail);
    /*0x2b4d524*/ void Send_BountySetSupport(bool _loading, ServerProtocol.ReqBountySetSupporter _request, System.Action<ServerProtocol.ResBountySetSupporter> _response, System.Action<int, string> _fail);
    /*0x2b4d5c4*/ void Send_BountyReleaseSupporter(bool _loading, ServerProtocol.ReqBountyReleaseSupporter _request, System.Action<ServerProtocol.ResBountyReleaseSupporter> _response, System.Action<int, string> _fail);
    /*0x2b4d664*/ void Send_BountyReceive(bool _loading, ServerProtocol.ReqBountyReceive _request, System.Action<ServerProtocol.ResBountyReceive> _response, System.Action<int, string> _fail);
    /*0x2b4d704*/ void Send_BountyReceiveAll(bool _loading, ServerProtocol.ReqBountyReceiveAll _request, System.Action<ServerProtocol.ResBountyReceiveAll> _response, System.Action<int, string> _fail);
    /*0x2b4d7a4*/ void Send_BountyReset(bool _loading, ServerProtocol.ReqBountyReset _request, System.Action<ServerProtocol.ResBountyReset> _response, System.Action<int, string> _fail);
    /*0x2b4d844*/ void Send_RelationActivate(bool _loading, ServerProtocol.ReqRelationActivate _request, System.Action<ServerProtocol.ResRelationActivate> _response);
    /*0x2b4d8e0*/ void Send_RaceEnter(bool _loading, ServerProtocol.ReqRaceEnter _request, System.Action<ServerProtocol.ResRaceEnter> _response);
    /*0x2b4d97c*/ void Send_RaceVote(bool _loading, ServerProtocol.ReqRaceVote _request, System.Action<ServerProtocol.ResRaceVote> _response);
    /*0x2b4da18*/ void Send_RaceList(bool _loading, ServerProtocol.ReqRaceList _request, System.Action<ServerProtocol.ResRaceList> _response);
    /*0x2b4dab4*/ void Send_RaceView(bool _loading, ServerProtocol.ReqRaceView _request, System.Action<ServerProtocol.ResRaceView> _response);
    /*0x2b4db50*/ void Send_RaceReward(bool _loading, ServerProtocol.ReqRaceReward _request, System.Action<ServerProtocol.ResRaceReward> _response);
    /*0x2b4dbec*/ void Send_RaceRanking(bool _loading, ServerProtocol.ReqRaceRanking _request, System.Action<ServerProtocol.ResRaceRanking> _response);
    /*0x2b4dc88*/ void Send_ArtifactReinforce(bool _loading, ServerProtocol.ReqEquipArtifactReinforce _request, System.Action<ServerProtocol.ResEquipArtifactReinforce> _response);
    /*0x2b4dd24*/ void Send_ArtifactEquip(bool _loading, ServerProtocol.ReqHeroArtifactEquip _request, System.Action<ServerProtocol.ResHeroArtifactEquip> _response);
    /*0x2b4ddc0*/ void Send_ArtifactSwap(bool _loading, ServerProtocol.ReqHeroArtifactSwap _request, System.Action<ServerProtocol.ResHeroArtifactSwap> _response);
    /*0x2b4de5c*/ void Send_ArtifactUnEquip(bool _loading, ServerProtocol.ReqHeroArtifactUnequip _request, System.Action<ServerProtocol.ResHeroArtifactUnequip> _response);
    /*0x2b4def8*/ void Send_SkinBuy(bool _loading, ServerProtocol.ReqSkinBuy _request, System.Action<ServerProtocol.ResSkinBuy> _response);
    /*0x2b4df94*/ void Send_SkinEquip(bool _loading, ServerProtocol.ReqSkinEquip _request, System.Action<ServerProtocol.ResSkinEquip> _response);
    /*0x2b4e030*/ void Send_SkinUnEquip(bool _loading, ServerProtocol.ReqSkinUnequip _request, System.Action<ServerProtocol.ResSkinUnequip> _response);
    /*0x2b4e0cc*/ void Send_DungeonEnter(bool _loading, ServerProtocol.ReqDungeonEnter _request, System.Action<ServerProtocol.ResDungeonEnter> _response);
    /*0x2b4e168*/ void Send_DungeonExploreStart(bool _loading, ServerProtocol.ReqDungeonExploreStart _request, System.Action<ServerProtocol.ResDungeonExploreStart> _response);
    /*0x2b4e204*/ void Send_DungeonExploreContinue(bool _loading, ServerProtocol.ReqDungeonExploreContinue _request, System.Action<ServerProtocol.ResDungeonExploreContinue> _response);
    /*0x2b4e2a0*/ void Send_DungeonExploreCancel(bool _loading, ServerProtocol.ReqDungeonExploreCancel _request, System.Action<ServerProtocol.ResDungeonExploreCancel> _response);
    /*0x2b4e33c*/ void Send_DungeonMove(bool _loading, ServerProtocol.ReqDungeonMove _request, System.Action<ServerProtocol.ResDungeonMove> _response);
    /*0x2b4e3d8*/ void Send_DungeonCoinReward(bool _loading, ServerProtocol.ReqDungeonCoinReward _request, System.Action<ServerProtocol.ResDungeonCoinReward> _response, System.Action<int, string> _failed);
    /*0x2b4e478*/ void Send_DungeonJail(bool _loading, ServerProtocol.ReqDungeonJail _request, System.Action<ServerProtocol.ResDungeonJail> _response);
    /*0x2b4e514*/ void Send_DungeonBegin(bool _loading, ServerProtocol.ReqDungeonBegin _request, System.Action<ServerProtocol.ResDungeonBegin> _response);
    /*0x2b4e5b0*/ void Send_DungeonFinish(bool _loading, ServerProtocol.ReqDungeonFinish _request, System.Action<ServerProtocol.ResDungeonFinish> _response);
    /*0x2b4e64c*/ void Send_DungeonHeal(bool _loading, ServerProtocol.ReqDungeonHeal _request, System.Action<ServerProtocol.ResDungeonHeal> _response);
    /*0x2b4e6e8*/ void Send_DungeonRevival(bool _loading, ServerProtocol.ReqDungeonRevival _request, System.Action<ServerProtocol.ResDungeonRevival> _response);
    /*0x2b4e784*/ void Send_DungeonMate(bool _loading, ServerProtocol.ReqDungeonMate _request, System.Action<ServerProtocol.ResDungeonMate> _response);
    /*0x2b4e820*/ void Send_DungeonWall(bool _loading, ServerProtocol.ReqDungeonWall _request, System.Action<ServerProtocol.ResDungeonWall> _response);
    /*0x2b4e8bc*/ void Send_DungeonProgress(bool _loading, ServerProtocol.ReqDungeonProgress _request, System.Action<ServerProtocol.ResDungeonProgress> _response);
    /*0x2b4e958*/ void Send_DungeonAssign(bool _loading, ServerProtocol.ReqDungeonAssign _request, System.Action<ServerProtocol.ResDungeonAssign> _response);
    /*0x2b4e9f4*/ void Send_AtticBuyGacha(bool _loading, ServerProtocol.ReqAtticBuy _request, System.Action<ServerProtocol.ResAtticBuy> _response);
    /*0x2b4ea90*/ void Send_AtticCommit(bool _loading, ServerProtocol.ReqAtticCommit _request, System.Action<ServerProtocol.ResAtticCommit> _response);
    /*0x2b4eb2c*/ void Send_WorldBossEnter(bool _loading, ServerProtocol.ReqWorldBossEnter _request, System.Action<ServerProtocol.ResWorldBossEnter> _response);
    /*0x2b4ebc8*/ void Send_WorldBossTake(bool _loading, ServerProtocol.ReqWorldBossTake _request, System.Action<ServerProtocol.ResWorldBossTake> _response);
    /*0x2b4ec64*/ void Send_WorldBossBegin(bool _loading, ServerProtocol.ReqWorldBossBegin _request, System.Action<ServerProtocol.ResWorldBossBegin> _response);
    /*0x2b4ed00*/ void Send_WorldBossFinish(bool _loading, ServerProtocol.ReqWorldBossFinish _request, System.Action<ServerProtocol.ResWorldBossFinish> _response);
    /*0x2b4ed9c*/ void Send_EventBossBegin(bool _loading, ServerProtocol.ReqEventBegin _request, System.Action<ServerProtocol.ResEventBegin> _response);
    /*0x2b4ee38*/ void Send_EventBossFinish(bool _loading, ServerProtocol.ReqEventFinish _request, System.Action<ServerProtocol.ResEventFinish> _response);
    /*0x2b4eed4*/ void Send_EventBossMopup(bool _loading, ServerProtocol.ReqEventMopUp _request, System.Action<ServerProtocol.ResEventMopUp> _response);
    /*0x2b4ef70*/ void Send_EventBossHistory(bool _loading, ServerProtocol.ReqEventBossHistory _request, System.Action<ServerProtocol.ResEventBossHistory> _response);
    /*0x2b4f00c*/ void Send_EventBossReplay(bool _loading, ServerProtocol.ReqEventReplay _request, System.Action<ServerProtocol.ResEventReplay> _response);
    /*0x2b4f0a8*/ void Send_ManufactureEnter(bool _loading, ServerProtocol.ReqManufactureEnter _request, System.Action<ServerProtocol.ResManufactureEnter> _response);
    /*0x2b4f144*/ void Send_ManufactureInsert(bool _loading, ServerProtocol.ReqManufactureInsert _request, System.Action<ServerProtocol.ResManufactureInsert> _response);
    /*0x2b4f1e0*/ void Send_Roulette(bool _loading, ServerProtocol.ReqEventRoulette _request, System.Action<ServerProtocol.ResEventRoulette> _response);
    /*0x2b4f27c*/ void Send_AbilityFreeRoll(bool _loading, ServerProtocol.ReqAbilityFreeRoll _request, System.Action<ServerProtocol.ResAbilityFreeRoll> _response);
    /*0x2b4f318*/ void Send_AbilityCurrencyRoll(bool _loading, ServerProtocol.ReqAbilityCurrencyRoll _request, System.Action<ServerProtocol.ResAbilityCurrencyRoll> _response);
    /*0x2b4f3b4*/ void Send_AbilityItemRoll(bool _loading, ServerProtocol.ReqAbilityItemRoll _request, System.Action<ServerProtocol.ResAbilityItemRoll> _response);
    /*0x2b4f450*/ void Send_AbilityConfirm(bool _loading, ServerProtocol.ReqAbilityConfirm _request, System.Action<ServerProtocol.ResAbilityConfirm> _response);
    /*0x2b4f4ec*/ void Send_PveRankingEnter(bool _loading, ServerProtocol.ReqPveRankingEnter _request, System.Action<ServerProtocol.ResPveRankingEnter> _response);
    /*0x2b4f588*/ void Send_PveRankingRanking(bool _loading, ServerProtocol.ReqPveRankingRanking _request, System.Action<ServerProtocol.ResPveRankingRanking> _response);
    /*0x2b4f624*/ void Send_PveRankingBegin(bool _loading, ServerProtocol.ReqPveRankingBegin _request, System.Action<ServerProtocol.ResPveRankingBegin> _response);
    /*0x2b4f6c0*/ void Send_PveRankingFinish(bool _loading, ServerProtocol.ReqPveRankingFinish _request, System.Action<ServerProtocol.ResPveRankingFinish> _response);
    /*0x2b4f75c*/ void Send_RunGameReward(bool _loading, ServerProtocol.ReqRunGameReward _request, System.Action<ServerProtocol.ResRunGameReward> _response);
    /*0x2b4f7f8*/ void Send_RunGameRanking(bool _loading, ServerProtocol.ReqRunGameRanking _request, System.Action<ServerProtocol.ResRunGameRanking> _response);
    /*0x2b4f894*/ void Send_AdsFinal(bool _loading, ServerProtocol.ReqADFinalReward _request, System.Action<ServerProtocol.ResADFinalReward> _response);
    /*0x2b4f930*/ void Send_HardCampaignBegin(bool _loading, ServerProtocol.ReqHardCampaignBegin _request, System.Action<ServerProtocol.ResHardCampaignBegin> _response);
    /*0x2b4f9cc*/ void Send_HardCampaignFinish(bool _loading, ServerProtocol.ReqHardCampaignFinish _request, System.Action<ServerProtocol.ResHardCampaignFinish> _response);
    /*0x2b4fa68*/ void Send_HardCampaignNextChapter(bool _loading, ServerProtocol.ReqHardCampaignNextChapter _request, System.Action<ServerProtocol.ResHardCampaignNextChapter> _response);
    /*0x2b4fb04*/ void Send_HardCampaignInfo(bool _loading, ServerProtocol.ReqHardCampaignInfo _request, System.Action<ServerProtocol.ResHardCampaignInfo> _response);
    /*0x2b4fba0*/ void Send_HardCampaignReplay(bool _loading, ServerProtocol.ReqHardCampaignReplay _request, System.Action<ServerProtocol.ResHardCampaignReplay> _response);
    /*0x2b4fc3c*/ void Send_HardCampaignBuddy(bool _loading, ServerProtocol.ReqHardCampaignBuddy _request, System.Action<ServerProtocol.ResHardCampaignBuddy> _response);
    /*0x2b44404*/ string SetURL(ServerProtocol.ProtocolType _parentType, ServerProtocol.ProtocolSubType _childType, object _data);
    /*0x2b457ac*/ string SetURL(ServerProtocol.ProtocolType _protocol, ServerProtocol.ProtocolSubType _subProtocol);
    /*0x2b44950*/ System.Collections.IEnumerator CoWebRequest(bool _loading, string _uri, System.Action<System.Byte[]> _callBack);
    System.Collections.IEnumerator CoWebRequest_GateInit<T>(bool _loading, string _uri, System.Action<T> _callback);
    System.Collections.IEnumerator CoWebRequest<T>(bool _loading, string _uri, System.Action<T> _callback, System.Action<int, string> _failcallback);
    System.Collections.IEnumerator CoWebRequestPOST<T>(bool _loading, string _uri, object _data, System.Action<T> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    System.Collections.IEnumerator CoWebRequest<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(bool _loading, string _uri, System.Action<T0> _callback, System.Action<int> _failcallback);
    /*0x2b5014c*/ void ToFiliterOutErrorCode(int _errorCode, string arg);
    void <CoWebRequest>g__Fail|315_0<T>(int code, UnityEngine.Networking.UnityWebRequest req, ref NetworkManager.<>c__DisplayClass315_0<T> );
    void <CoWebRequest>g__Fail|317_0<T0, T1, T2>(int code, ref NetworkManager.<>c__DisplayClass317_0<T0, T1, T2> );
    void <CoWebRequest>g__Fail|318_0<T0, T1, T2, T3>(int code, ref NetworkManager.<>c__DisplayClass318_0<T0, T1, T2, T3> );
    void <CoWebRequest>g__Fail|319_0<T0, T1, T2, T3, T4>(int code, ref NetworkManager.<>c__DisplayClass319_0<T0, T1, T2, T3, T4> );
    void <CoWebRequest>g__Fail|320_0<T0, T1, T2, T3, T4, T5, T6>(int code, ref NetworkManager.<>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6> );
    void <CoWebRequest>g__Fail|321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(int code, ref NetworkManager.<>c__DisplayClass321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> );
    void <CoWebRequest>g__Fail|322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(int code, ref NetworkManager.<>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> );
    void <CoWebRequest>g__Fail|323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(int code, ref NetworkManager.<>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> );
    void <CoWebRequest>g__Fail|324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(int code, ref NetworkManager.<>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> );
    void <CoWebRequest>g__Fail|325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(int code, ref NetworkManager.<>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> );

    class <>c__DisplayClass6_0
    {
        /*0x10*/ System.Action callback;

        /*0x108925c*/ <>c__DisplayClass6_0();
        /*0x1089264*/ void <Send_GateZone>b__0(ServerProtocol.ResGateZone res);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ System.Action<bool, PTShare.Define.ErrorCode> _response;

        /*0x1089358*/ <>c__DisplayClass7_0();
        /*0x1089360*/ void <Send_GateInit>b__0(ServerProtocol.ResGateInit res);
    }

    class <>c__DisplayClass310_0
    {
        /*0x10*/ object _data;

        /*0x1089170*/ <>c__DisplayClass310_0();
        /*0x1089178*/ System.ValueTuple<string, string> <SetURL>b__0(System.Reflection.FieldInfo s);
    }

    class <>c
    {
        static /*0x0*/ NetworkManager.<> <>9;
        static /*0x8*/ System.Func<System.ValueTuple<string, string>, bool> <>9__310_1;
        static /*0x10*/ System.Func<System.ValueTuple<string, string>, string> <>9__310_2;
        static /*0x18*/ System.Action<bool> <>9__313_0;
        static /*0x20*/ System.Action<bool> <>9__326_0;
        static /*0x28*/ System.Action<bool> <>9__326_1;
        static /*0x30*/ System.Action<bool> <>9__326_2;
        static /*0x38*/ System.Action<bool> <>9__326_3;
        static /*0x40*/ System.Action<bool> <>9__326_4;

        static /*0x1088dcc*/ <>c();
        /*0x1088e2c*/ <>c();
        /*0x1088e34*/ bool <SetURL>b__310_1(System.ValueTuple<string, string> w);
        /*0x1088e58*/ string <SetURL>b__310_2(System.ValueTuple<string, string> s);
        /*0x1088ed0*/ void <CheckBalanceUpdated>b__313_0(bool _result);
        /*0x1088f2c*/ void <ToFiliterOutErrorCode>b__326_0(bool _result);
        /*0x1088f88*/ void <ToFiliterOutErrorCode>b__326_1(bool _result);
        /*0x1088fe4*/ void <ToFiliterOutErrorCode>b__326_2(bool _result);
        /*0x1089040*/ void <ToFiliterOutErrorCode>b__326_3(bool _);
        /*0x108909c*/ void <ToFiliterOutErrorCode>b__326_4(bool result);
    }

    class <>c__DisplayClass312_0
    {
        /*0x10*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        /*0x1089238*/ <>c__DisplayClass312_0();
        /*0x1089240*/ bool <CoWebRequest>b__0();
    }

    class <CoWebRequest>d__312 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ string _uri;
        /*0x28*/ NetworkManager <>4__this;
        /*0x30*/ bool _loading;
        /*0x38*/ System.Action<System.Byte[]> _callBack;
        /*0x40*/ UnityEngine.Networking.UnityWebRequest <req>5__2;

        /*0x10897f8*/ <CoWebRequest>d__312(int <>1__state);
        /*0x1089824*/ void System.IDisposable.Dispose();
        /*0x10898fc*/ bool MoveNext();
        /*0x1089840*/ void <>m__Finally1();
        /*0x1089c7c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1089c84*/ void System.Collections.IEnumerator.Reset();
        /*0x1089cc4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass314_0<T>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        <>c__DisplayClass314_0();
        bool <CoWebRequest_GateInit>b__0();
    }

    class <CoWebRequest_GateInit>d__314<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<T> _callback;
        /*0x0*/ UnityEngine.Networking.UnityWebRequest <req>5__2;

        <CoWebRequest_GateInit>d__314(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass315_0<T>
    {
        /*0x0*/ System.Action<int, string> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
    }

    class <>c__DisplayClass315_<T>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        <>c__DisplayClass315_();
        bool <CoWebRequest>b__1();
    }

    class <CoWebRequest>d__315<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ System.Action<int, string> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass315_0<T> <>8__1;
        /*0x0*/ System.Action<T> _callback;
        /*0x0*/ int <retryCount>5__2;
        /*0x0*/ UnityEngine.Networking.UnityWebRequest <req>5__3;

        <CoWebRequest>d__315(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass316_0<T>
    {
        /*0x0*/ object _data;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Func<System.Reflection.FieldInfo, bool> <>9__1;
        /*0x0*/ System.Func<System.Reflection.FieldInfo, string> <>9__3;

        <>c__DisplayClass316_0();
        bool <CoWebRequestPOST>b__1(System.Reflection.FieldInfo w);
        string <CoWebRequestPOST>b__3(System.Reflection.FieldInfo v);
        void <CoWebRequestPOST>g__Fail|0(int code);
    }

    class <>c__DisplayClass316_<T>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;

        <>c__DisplayClass316_();
        bool <CoWebRequestPOST>b__4();
    }

    class <>c__316<T>
    {
        static /*0x0*/ NetworkManager.<>c__316<T> <>9;
        static /*0x0*/ System.Func<System.Reflection.FieldInfo, string> <>9__316_2;

        static <>c__316();
        <>c__316();
        string <CoWebRequestPOST>b__316_2(System.Reflection.FieldInfo k);
    }

    class <CoWebRequestPOST>d__316<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ object _data;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ string _uri;
        /*0x0*/ NetworkManager.<>c__DisplayClass316_0<T> <>8__1;
        /*0x0*/ bool _loading;
        /*0x0*/ System.Action<T> _callback;
        /*0x0*/ int <retryCount>5__2;
        /*0x0*/ UnityEngine.Networking.UnityWebRequest <req>5__3;

        <CoWebRequestPOST>d__316(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass317_0<T0, T1, T2>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass317_1<T0, T1, T2>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass317_2<T0, T1, T2>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass317_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass317_0<T0, T1, T2> , ref NetworkManager.<>c__DisplayClass317_1<T0, T1, T2> );
    }

    class <CoWebRequest>d__317<T0, T1, T2> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass317_2<T0, T1, T2> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass317_1<T0, T1, T2> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass317_0<T0, T1, T2> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__317(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass318_0<T0, T1, T2, T3>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass318_1<T0, T1, T2, T3>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass318_2<T0, T1, T2, T3>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass318_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass318_0<T0, T1, T2, T3> , ref NetworkManager.<>c__DisplayClass318_1<T0, T1, T2, T3> );
    }

    class <CoWebRequest>d__318<T0, T1, T2, T3> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass318_2<T0, T1, T2, T3> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass318_1<T0, T1, T2, T3> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass318_0<T0, T1, T2, T3> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ int <retryCount>5__2;

        <CoWebRequest>d__318(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass319_0<T0, T1, T2, T3, T4>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass319_1<T0, T1, T2, T3, T4>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass319_2<T0, T1, T2, T3, T4>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass319_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass319_0<T0, T1, T2, T3, T4> , ref NetworkManager.<>c__DisplayClass319_1<T0, T1, T2, T3, T4> );
    }

    class <CoWebRequest>d__319<T0, T1, T2, T3, T4> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass319_2<T0, T1, T2, T3, T4> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass319_1<T0, T1, T2, T3, T4> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass319_0<T0, T1, T2, T3, T4> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ int <retryCount>5__2;

        <CoWebRequest>d__319(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass320_1<T0, T1, T2, T3, T4, T5, T6>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass320_2<T0, T1, T2, T3, T4, T5, T6>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass320_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6> , ref NetworkManager.<>c__DisplayClass320_1<T0, T1, T2, T3, T4, T5, T6> );
    }

    class <CoWebRequest>d__320<T0, T1, T2, T3, T4, T5, T6> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass320_2<T0, T1, T2, T3, T4, T5, T6> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass320_1<T0, T1, T2, T3, T4, T5, T6> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass320_0<T0, T1, T2, T3, T4, T5, T6> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__320(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass321_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass321_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass321_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass321_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> , ref NetworkManager.<>c__DisplayClass321_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> );
    }

    class <CoWebRequest>d__32<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass321_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass321_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass321_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__32(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass322_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass322_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass322_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> , ref NetworkManager.<>c__DisplayClass322_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> );
    }

    class <CoWebRequest>d__322<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass322_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass322_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass322_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__322(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass323_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass323_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass323_();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> , ref NetworkManager.<>c__DisplayClass323_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> );
    }

    class <CoWebRequest>d__323<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass323_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass323_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass323_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__323(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass324_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass324_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass324_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> , ref NetworkManager.<>c__DisplayClass324_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> );
    }

    class <CoWebRequest>d__324<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass324_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass324_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass324_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__324(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    struct <>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    {
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
    }

    struct <>c__DisplayClass325_<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequest req;
    }

    class <>c__DisplayClass325_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    {
        /*0x0*/ UnityEngine.Networking.UnityWebRequestAsyncOperation send;
        /*0x0*/ T0 callResponse;

        <>c__DisplayClass325_2();
        bool <CoWebRequest>b__1();
        void <CoWebRequest>g__Deserialize|2<U>(ref NetworkManager.<>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> , ref NetworkManager.<>c__DisplayClass325_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> );
    }

    class <CoWebRequest>d__325<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ NetworkManager <>4__this;
        /*0x0*/ System.Action<int> _failcallback;
        /*0x0*/ string _uri;
        /*0x0*/ bool _loading;
        /*0x0*/ NetworkManager.<>c__DisplayClass325_2<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> <>8__1;
        /*0x0*/ NetworkManager.<>c__DisplayClass325_1<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> <>8__2;
        /*0x0*/ NetworkManager.<>c__DisplayClass325_0<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> <>8__3;
        /*0x0*/ System.Action<T0> _callback;
        /*0x0*/ System.Uri <_result>5__2;
        /*0x0*/ int <retryCount>5__3;

        <CoWebRequest>d__325(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        void <>m__Finally1();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class GameClient
{
    static int GameVersion = 2505;
}

enum ServerRegion
{
    None = 0,
    ASIA1 = 1,
    ASIA2 = 2,
    NORTHAMERICA = 3,
    EUROPE = 4,
    End = 5,
}

class GameServer
{
    static /*0x0*/ System.Collections.Generic.Dictionary<ServerRegion, string> regionDics;
    static /*0x8*/ string curSetBaseAddress;
    static /*0x10*/ string curLiveAddress;
    static /*0x18*/ System.DateTime <InspectionTime>k__BackingField;
    static /*0x20*/ string <UserIP>k__BackingField;
    static /*0x28*/ int <ProtocolVersion>k__BackingField;
    static /*0x2c*/ bool <UseCouponSystem>k__BackingField;
    static /*0x2d*/ bool <UseMoveRegion>k__BackingField;
    static /*0x30*/ ServerRegion <CurrentZone>k__BackingField;
    static /*0x38*/ System.ValueTuple<string, string, string, string, string> <URL>k__BackingField;
    static /*0x60*/ System.Collections.Generic.Dictionary<string, string> <CommunityURL>k__BackingField;

    static /*0xecfd88*/ GameServer();
    static /*0xecee74*/ string get_curBaseAddress();
    static /*0xecf064*/ void set_curBaseAddress(string value);
    static /*0xecf20c*/ string get_GuestID();
    static /*0xecf268*/ void set_GuestID(string value);
    static /*0xecf2cc*/ string GetRegionServerURL(ServerRegion region);
    static /*0xecf39c*/ string GetRegionServerURL(string region);
    static /*0xecf510*/ System.DateTime get_InspectionTime();
    static /*0xecf574*/ void set_InspectionTime(System.DateTime value);
    static /*0xecf5dc*/ string get_UserIP();
    static /*0xecf640*/ void set_UserIP(string value);
    static /*0xecf6a8*/ int get_ProtocolVersion();
    static /*0xecf70c*/ void set_ProtocolVersion(int value);
    static /*0xecf774*/ bool get_UseCouponSystem();
    static /*0xecf7d8*/ void set_UseCouponSystem(bool value);
    static /*0xecf844*/ bool get_UseMoveRegion();
    static /*0xecf8a8*/ void set_UseMoveRegion(bool value);
    static /*0xecf914*/ ServerRegion get_CurrentZone();
    static /*0xecf978*/ void set_CurrentZone(ServerRegion value);
    static /*0xecf9e0*/ string BattleVersion();
    static /*0xecfbac*/ System.ValueTuple<string, string, string, string, string> get_URL();
    static /*0xecfc24*/ void set_URL(System.ValueTuple<string, string, string, string, string> value);
    static /*0xecfcb4*/ System.Collections.Generic.Dictionary<string, string> get_CommunityURL();
    static /*0xecfd18*/ void set_CommunityURL(System.Collections.Generic.Dictionary<string, string> value);
    static /*0xecf470*/ ServerRegion <GetRegionServerURL>g__EnumParse|10_0(ref GameServer.<> );
    /*0xecfd80*/ GameServer();

    struct <>c__DisplayClass10_0
    {
        /*0x10*/ string region;
    }
}

class ArtifactBase
{
    /*0x10*/ int <ArtifactID>k__BackingField;
    /*0x14*/ int <ArtifactLV>k__BackingField;
    /*0x18*/ CharacterBase m_Owner;
    /*0x20*/ SkillFXTrigger m_SkillFXTrigger;
    /*0x78*/ TableData.TableData_Artifact m_tArtifactData;
    /*0x80*/ Battle.ColliderData m_SightCollider;
    /*0x8c*/ float m_fCooltime;
    /*0x90*/ float m_fCurCooltime;
    /*0x94*/ int m_nBuffID;
    /*0x98*/ int m_nStartBuffID;
    /*0x9c*/ bool m_bUpdateStart;

    /*0xeebc8c*/ ArtifactBase();
    /*0xeeb878*/ int get_ArtifactID();
    /*0xeeb880*/ void set_ArtifactID(int value);
    /*0xeeb888*/ int get_ArtifactLV();
    /*0xeeb890*/ void set_ArtifactLV(int value);
    /*0xeeb898*/ bool get_IsPlayer();
    /*0xeeb8ac*/ void Init(CharacterBase _owner, int _nArtifactID, int _nArtifactLV);
    /*0xeebb44*/ void InitChild();
    /*0xeebb48*/ void RemoveInit();
    /*0xeebb54*/ void RemoveInitChild();
    /*0xeebb58*/ void Update();
    /*0xeebc6c*/ void UpdateChild();
    /*0xeebc50*/ void StartArtifactWithCooltime();
    /*0xeebc70*/ void StartArtifactChildWithCooltime();
    /*0xeebc74*/ void SetUpdateStart(bool _bUpdateStart);
    /*0xeebc80*/ void StartSkillFX();
    /*0xeebb3c*/ void SetCooltime(float _fCooltime, float _fStartCooltime);
    /*0xeebbbc*/ bool CheckCooltime();
}

class Artifact_KasimCrown : ArtifactBase
{
    /*0xef0d30*/ Artifact_KasimCrown();
    /*0xef0858*/ void InitChild();
    /*0xef09a8*/ void HandleStartGame();
}

class Artifact_KasimEarring : ArtifactBase
{
    /*0xef0ffc*/ Artifact_KasimEarring();
    /*0xef0d38*/ void InitChild();
    /*0xef0e48*/ void RemoveInitChild();
    /*0xef0f08*/ void HandleCheckAttackCritical();
}

class Artifact_KasimGlass : ArtifactBase
{
    /*0x9d*/ bool m_bCollision;
    /*0x9e*/ bool m_bCheckFirst;

    /*0xef1300*/ Artifact_KasimGlass();
    /*0xef1004*/ void RemoveInitChild();
    /*0xef103c*/ void UpdateChild();
}

class Artifact_KasimHeart : ArtifactBase
{
    /*0xa0*/ float m_fAddMP;

    /*0xef18c0*/ Artifact_KasimHeart();
    /*0xef1308*/ void InitChild();
    /*0xef14f8*/ void RemoveInitChild();
    /*0xef161c*/ void HandleUpdateSecondCooltime();
    /*0xef1640*/ void HandleOwnerDeath();
}

class Artifact_KasimNecklace : ArtifactBase
{
    /*0xa0*/ float m_fPostHP;

    /*0xef1e18*/ Artifact_KasimNecklace();
    /*0xef18c8*/ void InitChild();
    /*0xef1aa8*/ void RemoveInitChild();
    /*0xef1be0*/ void HandleCheckSHP_Pre(float _fHealAmount);
    /*0xef1c00*/ void HandleCheckSHP_Post(float _fHealAmount);
}

class Artifact_KasimShield : ArtifactBase
{
    /*0xa0*/ int m_nBuffID_Def;
    /*0xa4*/ int m_nBuffID_Provoke;
    /*0xa8*/ int m_nCurrentBuffCount;

    /*0xef2474*/ Artifact_KasimShield();
    /*0xef1e20*/ void InitChild();
    /*0xef1e64*/ void RemoveInitChild();
    /*0xef1e9c*/ void UpdateChild();
    /*0xef21bc*/ void StartArtifactChildWithCooltime();
}

class Artifact_KasimWing : ArtifactBase
{
    /*0xa0*/ float m_fHealPercentage;
    /*0xa4*/ bool m_bHitCritical;

    /*0xf76f94*/ Artifact_KasimWing();
    /*0xf76ab8*/ void InitChild();
    /*0xf76cd4*/ void RemoveInitChild();
    /*0xf76e34*/ void HandleCheckHitCritical(bool _bCritical);
    /*0xf76e40*/ void HandleCheckHitDamage(CharacterBase _attacker, float _fDamage);
}

class CharacterSkill_ALCHEMY_02 : CharacterSkill_Active
{
    /*0x13208e4*/ CharacterSkill_ALCHEMY_02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132090c*/ void FlipToTarget();
}

class CharacterSkill_Active : CharacterState
{
    /*0x54*/ int <SkillLV>k__BackingField;
    /*0x58*/ Battle.ColliderData SightCollider_Origin;
    /*0x64*/ Battle.ColliderData SightCollider_Darkness;
    /*0x70*/ Battle.ColliderData FindCollider_Origin;
    /*0x7c*/ Battle.ColliderData FindCollider_Darkness;
    /*0x88*/ System.Collections.Generic.List<CharacterBase> m_lisTarget;
    /*0x90*/ CharacterBase m_CurTarget;
    /*0x98*/ SkillFXTrigger m_SkillFXTrigger;
    /*0xf0*/ TableData.TableData_Skillbase m_tSkillBase;
    /*0xf8*/ Battle.TargetType1 m_eTargetType1;
    /*0xfc*/ Battle.TargetType2 m_eTargetType2;
    /*0x100*/ Battle.TargetType3 m_eTargetType3;
    /*0x104*/ Battle.SkillType m_eSkillType;
    /*0x108*/ Battle.ActiveType m_eActiveType;
    /*0x10c*/ Battle.AttackType m_eAttackType;
    /*0x110*/ float m_fCurCD;
    /*0x114*/ bool m_bCheckCooltime;
    /*0x115*/ bool m_bFindTargetWithSightCollider;

    /*0x13208f8*/ CharacterSkill_Active(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1320a08*/ int get_SkillLV();
    /*0x1320a10*/ void set_SkillLV(int value);
    /*0x1320a18*/ int get_SkillSlot();
    /*0x1320a34*/ bool get_IsSpecialSkill();
    /*0x1320a44*/ Battle.ColliderData get_SightCollider();
    /*0x1320a84*/ Battle.ColliderData get_FindCollider();
    /*0x1320ac4*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1321054*/ bool CheckSkillEnable();
    /*0x13212cc*/ bool InitStateChild();
    /*0x13219d0*/ bool InitSkill();
    /*0x13219d8*/ void RemoveStateChild();
    /*0x1321a3c*/ void RemoveSkill();
    /*0x1321a40*/ void StartStateChild();
    /*0x1321c08*/ void StartSkill();
    /*0x1321ff4*/ void ExitStateChild();
    /*0x132212c*/ void ExitSkill();
    /*0x13218b0*/ void RegistCheckCooltime(bool _boolean);
    /*0x1322130*/ void HandleCheckCooltime();
    /*0x13221f4*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x1321f78*/ void StartSkillSettings(bool _isSpecialSkill, ANIMATION_CLIP _animation_Clip, bool _isAnimLoop, bool _isHitAnimRotateInit, Spine.AnimationState.TrackEntryDelegate _delAddComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delAddEvents);
    /*0x13222a0*/ bool InvokeAnimEvent(AnimEvent _animEvent);
    /*0x13222e4*/ void FlipToTarget();
    /*0x1320d1c*/ bool SetTarget(bool _bSetCurTarget);
    /*0x1322388*/ CharacterBase FindTarget(Battle.ColliderData _rangeCollider);
    /*0x1321148*/ void SetMovePOS();
    /*0x1321be4*/ void SetFirstPOS();
    /*0x13223d4*/ void StartFX(int _nSkillFXID);
    /*0x13223e0*/ void SetCooltime(float _fCooltime);
    /*0x1322414*/ void SetGlobalCD(float _fGlobalCooltime);
    /*0x1322430*/ void AddCooltime(float _fAddCootime);
    /*0x1322448*/ void SetCheckCooltime(bool _bCheckCooltime);
    /*0x1322454*/ void SetFindTargetWithSightCollider(bool _bFindWithSightCollider);
}

class CharacterSkill_Akimbo : CharacterSkill_Active
{
    /*0x118*/ float m_SIG_MultGlobalCD;

    /*0x1322460*/ CharacterSkill_Akimbo(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322474*/ bool InitStateChild();
    /*0x13224dc*/ void SetGlobalCD(float _fGlobalCooltime);
}

class CharacterSkill_Breeze_01 : CharacterSkill_Active
{
    /*0x118*/ int m_nAddBuffID;
    /*0x11c*/ int m_nAddBuffConditionLevel;
    /*0x120*/ bool m_bAnimCompleteExit;

    /*0x1322508*/ CharacterSkill_Breeze_01(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132251c*/ bool InitSkill();
    /*0x1322584*/ void StartSkill();
    /*0x13226bc*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x132273c*/ void ExitSkill();
    /*0x13229f4*/ void HandleCheckRecieveDamage(CharacterBase _, float _fDamage);
}

class CharacterSkill_ICE_03 : CharacterSkill_Active
{
    static float m_fNeedHPRatio = 0.699999988079071;
    static float m_fUseHPRatio = -0.20000000298023224;

    /*0x1322a1c*/ CharacterSkill_ICE_03(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322a30*/ bool CheckSkillEnable();
    /*0x1322a84*/ void StartSkill();
}

class CharacterSkill_Lamplight_02 : CharacterSkill_Active
{
    /*0x1322ad4*/ CharacterSkill_Lamplight_02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322ae8*/ void StartStateChild();
}

class CharacterSkill_QUEEN_ATK_SP02 : CharacterSkill_Active
{
    /*0x118*/ int m_nContitionLV;
    /*0x11c*/ int m_nAttackCount;
    /*0x120*/ int m_nAddBuffID;
    /*0x124*/ int m_nCurSkillLV;

    /*0x1322b08*/ CharacterSkill_QUEEN_ATK_SP02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322b1c*/ bool InitSkill();
    /*0x1322c2c*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1322c68*/ void AnimComplete(Spine.TrackEntry entry);
}

class CharacterSkill_Rabbit : CharacterSkill_Active
{
    /*0x118*/ int m_nAddMP;
    /*0x11c*/ int m_nPassiveSkillLV;

    /*0x1322e74*/ CharacterSkill_Rabbit(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1322e88*/ bool InitSkill();
    /*0x1322f94*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x13233b0*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x13233b8*/ void ExitSkill();
    /*0x1323298*/ void NoneComboExitInit();
    /*0x13231d8*/ bool CheckComboEnable();
    /*0x13234ac*/ void HandleCheckKills(CharacterBase _killUnit);
}

class CharacterSkill_Sabre_01 : CharacterSkill_Active
{
    /*0x132351c*/ CharacterSkill_Sabre_01(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1323530*/ void StartSkill();
}

class CharacterSkill_Sabre_02 : CharacterSkill_Active
{
    /*0x116*/ bool m_bKill;

    /*0x132357c*/ CharacterSkill_Sabre_02(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1323590*/ void StartSkill();
    /*0x13236c8*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x13237cc*/ void ExitSkill();
    /*0x13238a0*/ void HandleCheckKills(CharacterBase _killTarget);
}

class CharacterSkill_Swordcat : CharacterSkill_Active
{
    /*0x116*/ bool m_bHit;
    /*0x118*/ int m_nPassiveSkillLV;
    /*0x11c*/ int m_nAddMP;
    /*0x120*/ int m_nBuffID;
    /*0x124*/ float m_fCounterPercentage;

    /*0x13238ac*/ CharacterSkill_Swordcat(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13238c0*/ bool InitSkill();
    /*0x1323a28*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1323a60*/ void StartSkill();
    /*0x1323c80*/ void AnimComplete(Spine.TrackEntry entry);
    /*0x1323fd4*/ void HandleCheckHit(CharacterBase _attacker, float _f);
    /*0x132413c*/ void HandleCheckAvoid(CharacterBase _attacker);
    /*0x1323fdc*/ void Revenge(CharacterBase _attacker, bool _bAvoid);
}

class CharacterBase : ObjectBase
{
    /*0x39*/ bool IsWorldBoss;
    /*0x3a*/ bool IsGuildBoss;
    /*0x3b*/ bool IsSummonerEnableULT;
    /*0x3c*/ int <UnitID>k__BackingField;
    /*0x40*/ Battle.UnitNameID <UnitID_Enum>k__BackingField;
    /*0x48*/ string <UnitID_StringNumber>k__BackingField;
    /*0x50*/ int <SkinID>k__BackingField;
    /*0x58*/ string <SkinID_StringNumber>k__BackingField;
    /*0x60*/ bool <UseSkin>k__BackingField;
    /*0x68*/ string <SkinName>k__BackingField;
    /*0x70*/ int <FactionID>k__BackingField;
    /*0x74*/ int <PositionNumber>k__BackingField;
    /*0x78*/ TableData.TableData_Unitbase <UnitBase>k__BackingField;
    /*0x80*/ TableData.TableData_Unitbase <SkinUnitBase>k__BackingField;
    /*0x88*/ int <UnitLV>k__BackingField;
    /*0x8c*/ int <UnitGrade>k__BackingField;
    /*0x90*/ int <UnitTier>k__BackingField;
    /*0x94*/ float <UnitSize>k__BackingField;
    /*0x98*/ UnitClassType <UnitClass>k__BackingField;
    /*0x9c*/ Battle.AttackType <UnitAttackType>k__BackingField;
    /*0xa0*/ Battle.CharacterFlag m_eFlag;
    /*0xa4*/ bool m_bStartInitialized;
    /*0xa8*/ CharacterBase m_PrevTarget;
    /*0xb0*/ CharacterBase m_CurTarget;
    /*0xb8*/ CharacterBase m_MoveTarget;
    /*0xc0*/ System.Collections.Generic.List<CharacterBase> m_lisCurCollision;
    /*0xc8*/ UnityEngine.Vector2 m_vCurCollisionCenterPOS;
    /*0xd0*/ System.Collections.Generic.List<int> m_lisAblities;
    /*0xd8*/ ObjectBase ObjectBase;
    /*0xe0*/ Spine.Unity.SkeletonAnimation Anim;
    /*0xe8*/ UnityEngine.MeshRenderer m_MeshRenderer;
    /*0xf0*/ ANIMATION_CLIP <CurAnimID>k__BackingField;
    /*0xf8*/ ActorAnimSyncData m_CurAnimSyncData;
    /*0x100*/ System.Collections.Generic.List<AnimEvent> m_lisCurEvent;
    /*0x108*/ System.Collections.Generic.Dictionary<ANIMATION_CLIP, System.Collections.Generic.List<AnimEvent>> m_dicAnimEventList;
    /*0x110*/ float m_fAnimElapseTime;
    /*0x118*/ UnityEngine.MaterialPropertyBlock m_MaterialBlock;
    /*0x120*/ Spine.Bone m_FireBone;
    /*0x128*/ Spine.Bone m_HeadBone;
    /*0x130*/ Spine.Bone m_BodyBone_01;
    /*0x138*/ Spine.Bone m_BodyBone_02;
    /*0x140*/ Spine.Slot m_EyeInSlot;
    /*0x148*/ Spine.Slot m_EyeOutSlot;
    /*0x150*/ Spine.Slot m_MouthSlot;
    /*0x158*/ Spine.Attachment m_EyeInAttach;
    /*0x160*/ Spine.Attachment m_EyeInAttach_Origin;
    /*0x168*/ Spine.Attachment m_EyeOutAttach;
    /*0x170*/ Spine.Attachment m_EyeOutAttach_Origin;
    /*0x178*/ Spine.Attachment m_MouthAttach;
    /*0x180*/ Spine.Attachment m_MouthAttach_Origin;
    /*0x188*/ bool m_bSkipMouseChange;
    /*0x18c*/ float m_fHitAnimRotaionDegrees;
    /*0x190*/ float m_fHitAnimRotationDegreesTarget;
    /*0x194*/ float m_fCurHitAnimRotationDgrees;
    /*0x198*/ bool m_bIncHitAnimRotationDgrees;
    /*0x1a0*/ AnimEvent m_recentInvokeAnimEvent;
    /*0x1a8*/ System.Collections.Generic.List<ArtifactBase> m_lisArtifact;
    /*0x1b0*/ UnityEngine.RectTransform m_UnitBuffSpace;
    /*0x1b8*/ float NoLessHP;
    /*0x1bc*/ float MultHitDamage;
    /*0x1c0*/ float MultHitDamage_Physical;
    /*0x1c4*/ float MultHitDamage_Magical;
    /*0x1c8*/ float MultMPPAY;
    /*0x1cc*/ float MultRestoreHP;
    /*0x1d0*/ float MultRestoreMP;
    /*0x1d4*/ float MultHP_InitData;
    /*0x1d8*/ float MultDamage_InitData;
    /*0x1dc*/ float MultMPR;
    /*0x1e0*/ float MultCooltime;
    /*0x1e4*/ float MultDamageCC;
    /*0x1e8*/ float MultDamageBoss;
    /*0x1ec*/ float MultFactionHitPenalty;
    /*0x1f0*/ float MultBuffTime;
    /*0x1f4*/ float MultDamageCritical_Buff;
    /*0x1f8*/ bool <IsImmuneKnockback>k__BackingField;
    /*0x1f9*/ bool <IsDarkness>k__BackingField;
    /*0x1fa*/ bool IsAvoidMagical;
    /*0x1fc*/ float IgnoreDamagePerMaxHP;
    /*0x200*/ System.Collections.Generic.List<Buff_Base> m_lisBuff;
    /*0x208*/ System.Collections.Generic.List<Buff_Container> m_lisBuffContainer;
    /*0x210*/ System.Collections.Generic.List<BuffIcon> m_lisBuffIcon;
    /*0x218*/ System.Collections.Generic.List<int> m_lisCommonCooltimeKeyValue;
    /*0x220*/ System.Collections.Generic.Dictionary<int, int> m_dicBuffStack;
    /*0x228*/ System.Collections.Generic.Dictionary<int, int> m_dicBuffChange;
    /*0x230*/ System.Collections.Generic.Dictionary<int, BuffIcon> m_dicBuffIcon;
    /*0x238*/ System.Collections.Generic.Dictionary<int, float> m_dicCommonCooltime;
    /*0x240*/ bool m_bCheckNextBuffWithUdpate;
    /*0x248*/ System.Action OnStart;
    /*0x250*/ System.Action OnAlways;
    /*0x258*/ System.Action OnAlways_NoAffectGame;
    /*0x260*/ System.Action OnCheckCooltimePerSecond;
    /*0x268*/ System.Action OnSkillPause;
    /*0x270*/ System.Action OnDeath;
    /*0x278*/ System.Action OnChangeHP;
    /*0x280*/ System.Action OnSkillStart;
    /*0x288*/ System.Action OnCritical;
    /*0x290*/ System.Action OnStateExit;
    /*0x298*/ System.Action OnStartCCBuff;
    /*0x2a0*/ System.Action OnMaxHP;
    /*0x2a8*/ System.Action OnLessMaxHP;
    /*0x2b0*/ System.Action<int> OnAddBuff;
    /*0x2b8*/ System.Action<int> OnRemoveBuff;
    /*0x2c0*/ System.Action<int> OnSlotSkillStart;
    /*0x2c8*/ System.Action<CharacterBase> OnChangeHPWithCaster;
    /*0x2d0*/ System.Action<CharacterBase> OnAvoidWithAttacker;
    /*0x2d8*/ System.Action<CharacterBase> OnAttack_PreCalc;
    /*0x2e0*/ System.Action<CharacterBase> OnKills;
    /*0x2e8*/ System.Action<float> OnSHP_Pre;
    /*0x2f0*/ System.Action<float> OnSHP_Post;
    /*0x2f8*/ System.Action OnAttack;
    /*0x300*/ System.Action<int, bool> OnAttack_SkillSlot_Critical_PostCalc;
    /*0x308*/ System.Action<CharacterBase, int, bool> OnAttack_Target_FXID_Critical;
    /*0x310*/ System.Action<CharacterBase, int, float> OnAttack_Target_FXID_Damage;
    /*0x318*/ System.Action<int> OnStartSkillFX_FXID;
    /*0x320*/ System.Action OnSetAttackCollisionList;
    /*0x328*/ System.Action OnMiss;
    /*0x330*/ System.Action<CharacterBase> OnActivateGamblerCardEffect;
    /*0x338*/ System.Action<int, bool> OnRemoveBuffWithIDAndForceRemove;
    /*0x340*/ System.Action<int, bool> OnRemoveBuffWithBuffEffectTypeAndForceRemove;
    /*0x348*/ System.Action<Battle.AttackType> OnHitWithAttackType_PostCalc;
    /*0x350*/ System.Action<bool> OnHitWithCritical;
    /*0x358*/ System.Action<Battle.AttackType> OnHitWithAttackType_PreCalc;
    /*0x360*/ System.Action<CharacterBase, float> OnHitWithAttackerDamage_PreCalc;
    /*0x368*/ System.Action<CharacterBase, float> OnHitWithAttackerDamage_PostCalc;
    /*0x370*/ System.Action<CharacterBase> OnFall;
    /*0x378*/ System.Action<float> OnChangeHPWithAmount;
    /*0x380*/ UnityEngine.Vector2 <CenterToRootDistance>k__BackingField;
    /*0x388*/ System.Nullable<UnityEngine.Vector2> <MovePOS>k__BackingField;
    /*0x394*/ UnityEngine.Vector2 <MoveDIR>k__BackingField;
    /*0x3a0*/ CharacterBase <KilledAttacker>k__BackingField;
    /*0x3a8*/ UnityEngine.Transform TransformAnim;
    /*0x3b0*/ UnityEngine.Transform m_CenterTrans;
    /*0x3b8*/ System.Collections.Generic.List<UnityEngine.Transform> BossHitPositions;
    /*0x3c0*/ CharacterBase m_Owner;
    /*0x3c8*/ System.Collections.Generic.Dictionary<long, bool> m_DicRefNum;
    /*0x3d0*/ UnityEngine.Vector2 m_vecCenterPosition;
    /*0x3d8*/ UnityEngine.Vector3 m_vFirstTargetPosition;
    /*0x3e8*/ System.Collections.Generic.Dictionary<Battle.UnitShaderType, ShaderChanger> m_dicShaderChanger;
    /*0x3f0*/ Battle.UnitShaderType m_CurShaderType;
    /*0x3f8*/ ShaderChanger m_CurShaderChanger;
    /*0x400*/ float m_fStartShaderFloatProperty;
    /*0x404*/ float m_fCurShaderFloatPropertyDuration;
    /*0x408*/ float m_fEndShaderFloatProperty;
    /*0x40c*/ float m_fShaderFloatPropertyDuration;
    /*0x410*/ bool m_bHit;
    /*0x414*/ float m_fCurHitEffectTime;
    /*0x418*/ float m_fCurBossHitColorTime;
    /*0x41c*/ float m_fCurHPSPDeltaTime;
    /*0x420*/ float m_fCurDOTDeltaTime;
    /*0x424*/ Battle.DamageResult m_NoDamage;
    /*0x42c*/ Battle.DamageResult m_Avoid;
    /*0x434*/ UnityEngine.Vector2 m_vecKnockBackMoveAmount;
    /*0x43c*/ float m_fCurKnockBackTime;
    /*0x440*/ bool m_bCheckKnockBack;
    /*0x441*/ bool m_bTweenColorStart;
    /*0x442*/ bool m_bTweenColorInc;
    /*0x444*/ float m_fTweenColorRatio;
    /*0x448*/ UnityEngine.Color m_TweenColorCurrent;
    /*0x458*/ UnityEngine.Color m_TweenColorTarget;
    /*0x468*/ bool m_bNoStatusBarWhenFully;
    /*0x469*/ bool m_bMaxHP;
    /*0x470*/ UnityEngine.UI.Text m_DialogueText;
    /*0x478*/ DG.Tweening.Sequence m_DialogueSequence;
    /*0x480*/ bool m_bEyeMouthChanged;
    /*0x484*/ UnityEngine.Color m_currentColor;
    /*0x494*/ UnityEngine.Color m_currentColorTint;
    /*0x4a4*/ bool m_bPlaySound;
    /*0x4a8*/ System.Collections.Generic.List<Passive_Base> m_lisPassive;
    /*0x4b0*/ System.Collections.Generic.Dictionary<int, Passive_Base> m_dicPassive;
    /*0x4b8*/ System.Collections.Generic.Dictionary<int, int> m_dicFXChanger;
    /*0x4c0*/ bool <IsPassiveEnable>k__BackingField;
    /*0x4c1*/ bool <Rabbit_bComboStart>k__BackingField;
    /*0x4c4*/ int <Rabbit_nComboCount>k__BackingField;
    /*0x4c8*/ bool <Swordcat_bCounter>k__BackingField;
    /*0x4c9*/ bool <Queen_bDebuffSuccess>k__BackingField;
    /*0x4ca*/ bool <Queen_bComboStart>k__BackingField;
    /*0x4cc*/ int <Queen_nComboCount>k__BackingField;
    /*0x4d0*/ bool <Akimbo_bMagazineOn>k__BackingField;
    /*0x4d8*/ System.Collections.Generic.List<CharacterBase> <Akimbo_ULT_TargetList>k__BackingField;
    /*0x4e0*/ float <Sugar_fMultHPMP>k__BackingField;
    /*0x4e4*/ bool <Deathscythe_bUseSP01>k__BackingField;
    /*0x4e8*/ CharacterBase <Sabre_ULT_Target>k__BackingField;
    /*0x4f0*/ CharacterBase <Sabre_SP03_Target>k__BackingField;
    /*0x4f8*/ int <Sabre_ULT_ProjectileCount>k__BackingField;
    /*0x4fc*/ bool <Sabre_ULT_KillEnemy>k__BackingField;
    /*0x500*/ ParticleBase <Breeze_ULT_Particle>k__BackingField;
    /*0x508*/ ParticleBase <Cleric_SP01_Particle>k__BackingField;
    /*0x510*/ float <Lamplight_ULT_MultDmage>k__BackingField;
    /*0x514*/ bool <Lamplight_SP01_FX2_START>k__BackingField;
    /*0x518*/ System.Action<CharacterBase> <Baba_SIG_OnCC_WithCaster>k__BackingField;
    /*0x520*/ int <TargetType3_nNextTargetCount>k__BackingField;
    /*0x524*/ float <TMP_ReflectionDamage>k__BackingField;
    /*0x528*/ float <TMP_MultHitDamage>k__BackingField;
    /*0x52c*/ float <TMP_AddCriticalBeforeCalcDamage>k__BackingField;
    /*0x530*/ float <TMP_SHP>k__BackingField;
    /*0x534*/ float <TMP_AddDamage_Physical>k__BackingField;
    /*0x538*/ float <TMP_AddDamage_Magical>k__BackingField;
    /*0x53c*/ float <Blood_fMultDamage>k__BackingField;
    /*0x540*/ CharacterBase <Target_Passive>k__BackingField;
    /*0x548*/ System.Collections.Generic.List<Battle.CharacterStat> <StatList>k__BackingField;
    /*0x550*/ Battle.CharacterStat OriginStat;
    /*0x558*/ Battle.CharacterStat <DefaultStat>k__BackingField;
    /*0x560*/ System.Collections.Generic.List<Battle.CharacterStat> <EquipStat>k__BackingField;
    /*0x568*/ Battle.CharacterStat <BonusStat>k__BackingField;
    /*0x570*/ System.Collections.Generic.List<PTShare.Define.SEquip> <EquipList>k__BackingField;
    /*0x578*/ float <DefaultMoveSpeed>k__BackingField;
    /*0x57c*/ Battle.ColliderData <HitCollider>k__BackingField;
    /*0x588*/ Battle.AttackType <AttackType>k__BackingField;
    /*0x590*/ long <TotalPower>k__BackingField;
    /*0x598*/ float <CurHP>k__BackingField;
    /*0x59c*/ float <MaxShield>k__BackingField;
    /*0x5a0*/ float <CurShield>k__BackingField;
    /*0x5a4*/ float <CurMP>k__BackingField;
    /*0x5a8*/ float <CurGlobalCD>k__BackingField;
    /*0x5ac*/ int <SignatureLV>k__BackingField;
    /*0x5b0*/ bool <SignatureEnable>k__BackingField;
    /*0x5b8*/ PTShare.Define.SStatBonus CurStatBonus;
    /*0x5c0*/ System.Collections.Generic.List<CharacterState> m_lisState;
    /*0x5c8*/ System.Collections.Generic.Dictionary<Battle.StateAndSkillID, CharacterState> m_dicState;
    /*0x5d0*/ Battle.StateAndSkillID PrevStateEnum;
    /*0x5d4*/ Battle.StateAndSkillID CurStateEnum;
    /*0x5d8*/ Battle.StateAndSkillID NextStateEnum;
    /*0x5dc*/ Battle.StateAndSkillID MoveStateEnum;
    /*0x5e0*/ CharacterState <CurState>k__BackingField;
    /*0x5e8*/ CharacterState <PrevState>k__BackingField;
    /*0x5f0*/ CharacterState <NextState>k__BackingField;
    /*0x5f8*/ CharacterState m_TmpState;
    /*0x600*/ CharacterState m_TouchSkill;
    /*0x608*/ Battle.StateAndSkillID m_TouchSkillID;
    /*0x60c*/ bool IsStateChangeWhenChangeNextState;
    /*0x60d*/ bool IsGuildBattleSupportUnit;
    /*0x610*/ UnityEngine.Transform m_WorldUICanvas;
    /*0x618*/ UnityEngine.Transform m_DamageMarkerTrans;
    /*0x620*/ UnitStatusBar m_StatusWorldUI;
    /*0x628*/ UnityEngine.GameObject m_goMyUnitMarker;
    /*0x630*/ int m_nCurKillCount_GuildBattle;
    /*0x634*/ float m_fCurKillCountCooltime_GuildBattle;
    /*0x638*/ UnityEngine.GameObject m_DialogueParent;
    /*0x640*/ UnityEngine.UI.Image m_DialogueBackground;
    /*0x648*/ LocalizeString m_DialogueLocalize;
    /*0x650*/ bool m_bCheckDialogueDuration;
    /*0x654*/ float m_fCurrentDialogueDuration;

    static /*0xd765d4*/ ArtifactBase <AddArtifact>g__GetArtifactClass|140_0(ref CharacterBase.<> );
    /*0xd86ecc*/ CharacterBase();
    /*0xd71e70*/ bool get_IsPlayer();
    /*0xd71e84*/ bool get_IsDeath();
    /*0xd71e98*/ bool get_IsBoss();
    /*0xd71eb8*/ bool get_IsSummoner();
    /*0xd71ecc*/ int get_UnitID();
    /*0xd71ed4*/ void set_UnitID(int value);
    /*0xd71edc*/ Battle.UnitNameID get_UnitID_Enum();
    /*0xd71ee4*/ void set_UnitID_Enum(Battle.UnitNameID value);
    /*0xd71eec*/ string get_UnitID_StringNumber();
    /*0xd71ef4*/ void set_UnitID_StringNumber(string value);
    /*0xd71efc*/ int get_SkinID();
    /*0xd71f04*/ void set_SkinID(int value);
    /*0xd71f0c*/ string get_SkinID_StringNumber();
    /*0xd71f14*/ void set_SkinID_StringNumber(string value);
    /*0xd71f1c*/ bool get_UseSkin();
    /*0xd71f24*/ void set_UseSkin(bool value);
    /*0xd71f30*/ string get_SkinName();
    /*0xd71f38*/ void set_SkinName(string value);
    /*0xd71f40*/ int get_FactionID();
    /*0xd71f48*/ void set_FactionID(int value);
    /*0xd71f50*/ int get_PositionNumber();
    /*0xd71f58*/ void set_PositionNumber(int value);
    /*0xd71f60*/ TableData.TableData_Unitbase get_UnitBase();
    /*0xd71f68*/ void set_UnitBase(TableData.TableData_Unitbase value);
    /*0xd71f70*/ TableData.TableData_Unitbase get_SkinUnitBase();
    /*0xd71f78*/ void set_SkinUnitBase(TableData.TableData_Unitbase value);
    /*0xd71f80*/ int get_UnitLV();
    /*0xd71f88*/ void set_UnitLV(int value);
    /*0xd71f90*/ int get_UnitGrade();
    /*0xd71f98*/ void set_UnitGrade(int value);
    /*0xd71fa0*/ int get_UnitTier();
    /*0xd71fa8*/ void set_UnitTier(int value);
    /*0xd71fb0*/ float get_UnitSize();
    /*0xd71fb8*/ void set_UnitSize(float value);
    /*0xd71fc0*/ UnitClassType get_UnitClass();
    /*0xd71fc8*/ void set_UnitClass(UnitClassType value);
    /*0xd71fd0*/ Battle.AttackType get_UnitAttackType();
    /*0xd71fd8*/ void set_UnitAttackType(Battle.AttackType value);
    /*0xd71fe0*/ void StartInit();
    /*0xd7211c*/ bool Init(int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, bool _bIdle, bool _bSyncTool, bool _bDemo, string[] _params);
    /*0xd74028*/ void SetPositionIndex(int _nPositionIndex);
    /*0xd74078*/ void RemoveInit();
    /*0xd74620*/ void UpdateObject();
    /*0xd74e48*/ void Update_PauseOnly();
    /*0xd746d4*/ bool CheckUpdateAnimationOnly();
    /*0xd74cf8*/ void UpdateCooltimePerSecond();
    /*0xd74f38*/ void SetAbilityList(System.Collections.Generic.List<int> _abilityList);
    /*0xd7548c*/ ANIMATION_CLIP get_CurAnimID();
    /*0xd75494*/ void set_CurAnimID(ANIMATION_CLIP value);
    /*0xd7549c*/ Spine.SkeletonData get_GetSkelectonData();
    /*0xd725c8*/ void InitAnimation();
    /*0xd755c4*/ void LoadSyncData(TableData.TableData_Unitbase _unitBase);
    /*0xd75664*/ System.Collections.Generic.List<AnimEvent> GetAnimEventList(ANIMATION_CLIP _animID);
    /*0xd74838*/ void UpdateAnimation();
    /*0xd757c4*/ void InvokeAnimEvent(AnimEvent _animEvent);
    /*0xd764b0*/ void InvokeRecentAnimEvent();
    /*0xd764c0*/ void UpdateAnimationOnly();
    /*0xd754c8*/ void SetAnimation(ANIMATION_CLIP _animID, bool _bLoop, bool _bForceChange);
    /*0xd73d40*/ void InitArtifact();
    /*0xd7435c*/ void RemoveInitArtifact();
    /*0xd76538*/ void AddArtifact(int _nArtifactID, int _nArtifactLV);
    /*0xd74c4c*/ void UpdateArtifact();
    /*0xd76768*/ float get_MultDamageCritical();
    /*0xd76798*/ bool get_IsImmuneKnockback();
    /*0xd767a0*/ void set_IsImmuneKnockback(bool value);
    /*0xd767ac*/ bool get_IsDarkness();
    /*0xd767b4*/ void set_IsDarkness(bool value);
    /*0xd73bdc*/ void InitBuff();
    /*0xd74330*/ void RemoveInitBuff();
    /*0xd74b88*/ void UpdateBuff();
    /*0xd76fc0*/ void AddBuff(int _nBuffID, CharacterBase _caster, int _nSkillID, float[] _arrParams);
    /*0xd76fc8*/ void AddBuff(int _nBuffID, CharacterBase _caster, int _nSkillID, float _fMPPay, float[] _arrParams);
    /*0xd77c50*/ void AddBuff(Battle.BuffID _eBuffID, CharacterBase _caster, int _nSkillID);
    /*0xd77d48*/ void AddBuffIcon(int _nBuffID, string _sIconName);
    /*0xd77568*/ Buff_Base RegistBuff(int _nBuffID, Battle.BuffEffectType _eBuffType, bool _bIgnoreNoneType);
    /*0xd79600*/ void DeleteBuffContainer(Buff_Container _buffContainer);
    /*0xd79684*/ void RemoveBuff(Buff_Base _buff, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79c28*/ void DeleteBuff(Buff_Base _buff, bool _bUpdateRemove);
    /*0xd79cb4*/ void RemoveBuff(int _nBuffID, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79df0*/ void RemoveBuff(Battle.BuffID _eBuffID, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79e0c*/ void RemoveBuffWithBuffEffectType(Battle.BuffEffectType _eBuffEffectType, bool _bForceRemove);
    /*0xd79e68*/ void RemoveBuff_Once(int _nBuffID, bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0xd79ec8*/ bool RemoveBuff_One();
    /*0xd7a010*/ void RemoveDebuff_One();
    /*0xd7a150*/ void RemoveBuffMostTime(bool _bBuffOnly, bool _bRemoveSameID);
    /*0xd7a364*/ void RemoveBuffAllWithBuffFlag(Battle.BuffFlag _eBuffFlag);
    /*0xd7a49c*/ void RemoveBuffShield();
    /*0xd767c0*/ void RemoveBuffAll(bool _bForceRemove, bool _bDeathRemove);
    /*0xd7a5d8*/ void RemoveBuffAll();
    /*0xd7a6ec*/ void RemoveDebuffAll();
    /*0xd7a800*/ void RemoveBuffAll_CC();
    /*0xd7a924*/ void RemoveBuff_OneCC(int _nExceptBuffID);
    /*0xd7aad0*/ bool CheckBuffExist(int _nBuffID);
    /*0xd7aaf8*/ bool CheckBuffExist(Battle.BuffID _eBuffIDEnum);
    /*0xd7ab08*/ bool CheckBuffExist(Battle.BuffEffectType _eBuffEffectType);
    /*0xd7ab30*/ bool CheckBuffExist(Battle.BuffFlag _eBuffFlag);
    /*0xd77678*/ CharacterBase.AddBuffCheckStackState CheckBuffStack(int _nBuffID);
    /*0xd7ab58*/ int GetBuffCount(bool _bRemoveEnableOnly, bool _bNoDebuff);
    /*0xd7ac60*/ int GetBuffCount_CC(bool _bRemoveEnableOnly);
    /*0xd7ad50*/ System.ValueTuple<int, int> GetBuffCount_Debuff_CC(bool _bRemoveEnableOnly);
    /*0xd7aeb8*/ int GetBuffCount(int _nBuffID);
    /*0xd7af34*/ int GetBuffCount(Battle.BuffEffectType _eBuffEffectType);
    /*0xd7b000*/ Buff_Base FindBuffWithBuffEffectType(Battle.BuffEffectType _eEffectType);
    /*0xd7b0e0*/ bool IsDefenseDownDebuff();
    /*0xd7b208*/ Buff_Base FindBuffWithBuffFlag(Battle.BuffFlag _eBuffFlag);
    /*0xd7b2ec*/ Buff_Base FindBuffWithBuffID(int _nBuffID);
    /*0xd7a974*/ int FindRemoveEnableCCBuffID(int _nExceptBuffID);
    /*0xd7b3cc*/ void AddChangeBuff(int _nPrevBuffID, int _nNewBuffID);
    /*0xd7b49c*/ void RemoveChangeBuff(int _nBuffID);
    /*0xd774ec*/ int GetChangeBuff(int _nPrevBuffID);
    /*0xd7b53c*/ void CheckSkillEnableWithCCBuff();
    /*0xd7bbe8*/ void CheckImmuneKnockback();
    /*0xd7bc20*/ void CheckDarkness();
    /*0xd7bc58*/ void CheckEquipEnableWithBuff();
    /*0xd7be78*/ void CheckNoLessValueWithBuff();
    /*0xd7bf78*/ void CheckMultDamageCriticalWithBuff();
    /*0xd7c06c*/ void CheckMultCooltimeWithBuff();
    /*0xd7c160*/ void CheckMultMPPayWithBuff();
    /*0xd7c254*/ void SetCheckNextBuffWithUpdate(bool _bCheck);
    /*0xd76c50*/ void CheckNextBuff();
    /*0xd7c260*/ CharacterBase GetRecentProvokeTarget();
    /*0xd7c4a0*/ void SetBuffCommonCooltime(int _nBuffID, float _fCooltime);
    /*0xd7c57c*/ float GetBuffCommonCooltime(int _nBuffID);
    /*0xd7699c*/ void CheckCommonBuffCooltime();
    /*0xd7c620*/ bool IsCCState();
    /*0xd7c758*/ bool IsCCStateForCheckAvoid();
    /*0xd7c874*/ void CheckAvoidMagical();
    /*0xd7c924*/ void SpawnBuffParticle(Buff_Container _buffContainer);
    /*0xd7808c*/ Buff_Base GetBuffClass(int _nBuffID, Battle.BuffEffectType _eBuffType);
    /*0xd7c9e4*/ Battle.CharacterStat GetBuffStat(int _nBuffID, TableData.TableData_Buff _tBuffData);
    /*0xd7cc88*/ float GetBuffStatValue(ref TableData.TableData_Buff _buffData, Battle.CharacterStat.StatType _eStatType);
    /*0xd7d094*/ float GetBuffStatValue_Housing(ref TableData.TableData_Buff _buffData, Battle.CharacterStat.StatType _eStatType, float _fRatio);
    /*0xd7d440*/ float GetBuffShieldAmount(int _nBuffID, float _fShieldAmountRatio);
    /*0xd725a8*/ void InitEvent();
    /*0xd74c38*/ void UpdateEvent();
    /*0xd7d4e0*/ UnityEngine.Vector2 get_CenterPosition();
    /*0xd7d4ec*/ UnityEngine.Vector2 get_RootPosition();
    /*0xd7d508*/ UnityEngine.Vector2 get_CenterToRootDistance();
    /*0xd7d514*/ void set_CenterToRootDistance(UnityEngine.Vector2 value);
    /*0xd7d520*/ UnityEngine.Vector2 get_HeadPosition();
    /*0xd7d534*/ UnityEngine.Vector2 get_FirePosition();
    /*0xd7d548*/ UnityEngine.Vector2 get_BodyPosition();
    /*0xd7d55c*/ UnityEngine.Vector2 get_BodyLocalPosition();
    /*0xd7d5b4*/ Battle.Direction get_GetDirection();
    /*0xd7d61c*/ System.Nullable<UnityEngine.Vector2> get_MovePOS();
    /*0xd7d62c*/ void set_MovePOS(System.Nullable<UnityEngine.Vector2> value);
    /*0xd7d638*/ UnityEngine.Vector2 get_MoveDIR();
    /*0xd7d644*/ void set_MoveDIR(UnityEngine.Vector2 value);
    /*0xd7d650*/ CharacterBase get_KilledAttacker();
    /*0xd7d658*/ void set_KilledAttacker(CharacterBase value);
    /*0xd7d660*/ System.Collections.Generic.List<UnityEngine.Transform> get_BossHitPositionList();
    /*0xd72024*/ void StartInitMethod();
    /*0xd731d4*/ void InitMethod();
    /*0xd74114*/ void RemoveInitMethod();
    /*0xd74b30*/ void UpdateMethod();
    /*0xd7d6c8*/ void CheckTimer();
    /*0xd756e8*/ void CheckHitAnimation();
    /*0xd74e4c*/ void CheckKnockBack();
    /*0xd7d84c*/ void CheckTweenColor();
    /*0xd7d9bc*/ void SetPositionZ();
    /*0xd7da60*/ void UpdateHPMP();
    /*0xd7e45c*/ bool CheckSignatureEnable(int _nSignatureLV);
    /*0xd7e46c*/ TableData.TableData_Skillextra GetSignatureData(int _nSignatureLV, Battle.SkillExtraID _eExtraID);
    /*0xd7e48c*/ Battle.DamageResult RecievePercentageDamage(CharacterBase _attacker, float _fPercentage, Battle.AttackType _eAttackType, int _nFactionID, int _nSkillID);
    /*0xd7e568*/ Battle.DamageResult RecieveDotDamage(CharacterBase _attacker, ref Battle.StatTransfer _statTransfer);
    /*0xd7ef0c*/ void Death(CharacterBase _Attacker);
    /*0xd7f560*/ Battle.DamageResult RecieveDamage(CharacterBase _attacker, ref Battle.StatTransfer _statTransfer, bool _bAddDamage, System.Nullable<UnityEngine.Vector2> _vAttackPOS);
    /*0xd7ed20*/ void GiveDamageResult(Battle.DamageResult _result, bool _bDotDamage, int _nAttackSkillID);
    /*0xd7eb30*/ float RecieveShieldDamage(float _fDamage, Battle.AttackType _eAttackType);
    /*0xd7e894*/ float RecieveFreezeDamage(float _fDamage);
    /*0xd80204*/ void CheckShieldAmountWithBuff();
    /*0xd80054*/ float CalcDamage(float _fDamage, float _fDEF);
    /*0xd80074*/ bool CheckCritical(float _fCRI);
    /*0xd7ff60*/ bool CheckAvoid(float _fACC);
    /*0xd80104*/ bool CheckAvoidForMagicalAttack(float _fACC);
    /*0xd7e828*/ bool IsFactionMult(int _nFactionID);
    /*0xd8041c*/ void HandleCheckActiveSliderWhenMaxHP();
    /*0xd80450*/ void HandleCheckDisactiveSliderWhenLessMaxHP();
    /*0xd74a68*/ void SetHitEyeMouthChange(bool _boolean);
    /*0xd80484*/ void HandleChangeFaceAttachment(Spine.Unity.ISkeletonAnimation animated);
    /*0xd804f4*/ void HandleHitHeadTurn(Spine.Unity.ISkeletonAnimation animated);
    /*0xd80528*/ void HandleHitBodyRotate(Spine.Unity.ISkeletonAnimation animated);
    /*0xd8056c*/ void SetStatusSlot(UnitBattleStatusSlot _slot);
    /*0xd7f490*/ void SetActiveStatusBar(bool _bActive);
    /*0xd7f4a8*/ void SetActiveStatusSlotBar(bool _bActive);
    /*0xd806fc*/ void SetGuildBoss();
    /*0xd762f0*/ UnityEngine.Vector2 GetBonePosition(Battle.BonePositionType _type);
    /*0xd80738*/ void SetOwner(CharacterBase _Owner);
    /*0xd80740*/ void SetUnitSize(float _fSize);
    /*0xd7e0dc*/ float GetHPRatio();
    /*0xd807f4*/ int GetHPRatioForVerify();
    /*0xd7e0ac*/ float GetMPRatio();
    /*0xd808e8*/ int GetMPRatioForVerify();
    /*0xd809dc*/ void FlipCharacterDIR(UnityEngine.Vector2 _vecDIR);
    /*0xd80a6c*/ void FlipCharacterPOS(UnityEngine.Vector2 _vecPOS);
    /*0xd80ae8*/ void SetDirection(Battle.Direction _eDirection);
    /*0xd74408*/ void HitEffect(bool _bHit, bool _bEffectOnly, System.Nullable<UnityEngine.Vector2> _vAttackPOS);
    /*0xd80b38*/ void SetHP_NoOptions(float _fRatio, bool _bSetDecrease);
    /*0xd80cd4*/ void SetHP_NoOptions_SetAmount(float _fHPAmount, bool _bSetDecrease);
    /*0xd73ef8*/ void SetHP(float _fRatio, CharacterBase _caster, Battle.DamageMarkType _eMarkType);
    /*0xd7e10c*/ void AddHP(float _fAddValue, CharacterBase _caster, bool _bAddDamage, Battle.DamageMarkType _eMarkType);
    /*0xd80d78*/ float CheckUnitMaxHPAndReturnOverHeal(bool _bHeal);
    /*0xd7ff04*/ void AddHPWithRatio(float _fAddRatio, CharacterBase _caster, Battle.DamageMarkType _eMarkType);
    /*0xd80e1c*/ void AddHPWithRatio_CurHP(float _fAddRatio, CharacterBase _caster, Battle.DamageMarkType _eMarkType);
    /*0xd73fd4*/ void SetSP(float _fRatio);
    /*0xd775b8*/ void AddSP(float _fAddValue);
    /*0xd80bdc*/ void SetHPSlider(bool _bSetDecrease);
    /*0xd80354*/ void SetShieldSlider();
    /*0xd80e30*/ void SetSPSlider();
    /*0xd7f4c0*/ void SetGrayStatusUI();
    /*0xd80f04*/ void SetKnockBack(Battle.Direction _dir, float _distance, float _duration);
    /*0xd80f2c*/ void SetKnockBack(UnityEngine.Vector2 _moveAmount, float _duration);
    /*0xd7dfe4*/ void SetUnitPosition(UnityEngine.Vector2 _vecMovePosition, bool _bCheckAreaLimit);
    /*0xd81060*/ bool FlagEquals(Battle.CharacterFlag _eFlag);
    /*0xd810d8*/ bool FlagEqualsBuff(Battle.BuffFlag _eBuffFlag);
    /*0xd81190*/ bool FlagEqualsBuff(Battle.BuffEffectType _eBuffEffectType);
    /*0xd81244*/ bool FlagEqualsBuff(Battle.BuffEffectType[] _eBuffEffectTypes);
    /*0xd81358*/ void SetFlag(Battle.CharacterFlag _flag, bool _boolean);
    /*0xd813d8*/ void ClearFlag();
    /*0xd81440*/ void SetStartHAST();
    /*0xd81988*/ void SetPrevTarget(CharacterBase _target);
    /*0xd81990*/ void SetCurTarget(CharacterBase _target);
    /*0xd81998*/ void SetMoveTarget(CharacterBase _target, Battle.StateAndSkillID _eStateID);
    /*0xd819a4*/ void SetMovePOS(System.Nullable<UnityEngine.Vector2> _vecPOS);
    /*0xd81a88*/ void SetFirstTargetPostiion(CharacterBase _target);
    /*0xd81b64*/ void SetCurCollisionList(System.Collections.Generic.List<CharacterBase> _lisTarget, UnityEngine.Vector2 _vCenterPOS);
    /*0xd81bf4*/ CharacterBase GetPrevTarget();
    /*0xd81c64*/ CharacterBase GetCurTarget();
    /*0xd81cd4*/ CharacterBase GetMoveTarget();
    /*0xd81d44*/ UnityEngine.Vector2 GetFirstTargertPosition();
    /*0xd81d50*/ System.Collections.Generic.List<CharacterBase> GetCurCollisionList();
    /*0xd81d58*/ UnityEngine.Vector2 GetCurCollisionCenterPOS();
    /*0xd81d60*/ void AddReference(long _nRefNum);
    /*0xd81dc8*/ void RemoveReference(long _nRefNum);
    /*0xd81e34*/ void CheckReferenceExist();
    /*0xd81edc*/ bool IsExistReference();
    /*0xd7de18*/ void SetColor(UnityEngine.Color _color, bool _bTint, bool _bCheckCurrentColor);
    /*0xd81f60*/ void SetColorTween(UnityEngine.Color _color);
    /*0xd82024*/ void SetColorTweenExit();
    /*0xd82058*/ void SetBattleEndState();
    /*0xd7d680*/ void SetColorToOrigin();
    /*0xd820e4*/ void SetSkillCooltime(int _nSkillSlot, float _fCooltime);
    /*0xd8227c*/ void AddSkillCooltime(int _nSkillSlot, float _fAddCooltime);
    /*0xd7d668*/ void SetEnableMPSlider(bool _bEnable);
    /*0xd80720*/ void SetEnableHPSlider(bool _bEnable);
    /*0xd7e9e4*/ void PlaySound_HIT(Battle.Hit_WpnType _eWeaponType, bool _bCritical, bool _bCheckPlayPrev);
    /*0xd82668*/ void PlaySound_ULT();
    /*0xd822b4*/ string GetSoundName_HIT(Battle.Hit_WpnType _eWeaponType, bool _bCritical);
    /*0xd82780*/ string GetSoundName_ULT(UnitClassType _eClassType);
    /*0xd7635c*/ void ChangeShader(Battle.UnitShaderType _type);
    /*0xd82900*/ void SetShaderFloatProperty(Battle.UnitShaderType _eShaderType, float _fValue);
    /*0xd76464*/ void SetShaderFloatProperty(Battle.UnitShaderType _eShaderType, float _fStartValue, float _fEndValue, float _fDuration);
    /*0xd82964*/ bool get_IsPassiveEnable();
    /*0xd8296c*/ void set_IsPassiveEnable(bool value);
    /*0xd73898*/ void InitPassive();
    /*0xd7421c*/ void RemoveInitPassive();
    /*0xd82978*/ void AddPassiveSkills();
    /*0xd82a2c*/ void AddPassive(int _nPassiveID);
    /*0xd82b2c*/ Passive_Base GetPassiveClass(Battle.PassiveConditionType _eConditionType);
    /*0xd83170*/ void AddFXChanger(int _nPrevFXID, int _nChangeFXID);
    /*0xd83240*/ void RemoveFXChanger(int _nDeletePrevFXID);
    /*0xd832e0*/ int GetFXChanger(int _nPrevFXID);
    /*0xd83384*/ Passive_Base FindPassiveBySkillID(int _nSkillID);
    /*0xd83420*/ bool get_Rabbit_bComboStart();
    /*0xd83428*/ void set_Rabbit_bComboStart(bool value);
    /*0xd83434*/ int get_Rabbit_nComboCount();
    /*0xd8343c*/ void set_Rabbit_nComboCount(int value);
    /*0xd83444*/ bool get_Swordcat_bCounter();
    /*0xd8344c*/ void set_Swordcat_bCounter(bool value);
    /*0xd83458*/ bool get_Queen_bDebuffSuccess();
    /*0xd83460*/ void set_Queen_bDebuffSuccess(bool value);
    /*0xd8346c*/ bool get_Queen_bComboStart();
    /*0xd83474*/ void set_Queen_bComboStart(bool value);
    /*0xd83480*/ int get_Queen_nComboCount();
    /*0xd83488*/ void set_Queen_nComboCount(int value);
    /*0xd83490*/ bool get_Akimbo_bMagazineOn();
    /*0xd83498*/ void set_Akimbo_bMagazineOn(bool value);
    /*0xd834a4*/ System.Collections.Generic.List<CharacterBase> get_Akimbo_ULT_TargetList();
    /*0xd834ac*/ void set_Akimbo_ULT_TargetList(System.Collections.Generic.List<CharacterBase> value);
    /*0xd834b4*/ float get_Sugar_fMultHPMP();
    /*0xd834bc*/ void set_Sugar_fMultHPMP(float value);
    /*0xd834c4*/ bool get_Deathscythe_bUseSP01();
    /*0xd834cc*/ void set_Deathscythe_bUseSP01(bool value);
    /*0xd834d8*/ CharacterBase get_Sabre_ULT_Target();
    /*0xd834e0*/ void set_Sabre_ULT_Target(CharacterBase value);
    /*0xd834e8*/ CharacterBase get_Sabre_SP03_Target();
    /*0xd834f0*/ void set_Sabre_SP03_Target(CharacterBase value);
    /*0xd834f8*/ int get_Sabre_ULT_ProjectileCount();
    /*0xd83500*/ void set_Sabre_ULT_ProjectileCount(int value);
    /*0xd83508*/ bool get_Sabre_ULT_KillEnemy();
    /*0xd83510*/ void set_Sabre_ULT_KillEnemy(bool value);
    /*0xd8351c*/ ParticleBase get_Breeze_ULT_Particle();
    /*0xd83524*/ void set_Breeze_ULT_Particle(ParticleBase value);
    /*0xd8352c*/ ParticleBase get_Cleric_SP01_Particle();
    /*0xd83534*/ void set_Cleric_SP01_Particle(ParticleBase value);
    /*0xd8353c*/ float get_Lamplight_ULT_MultDmage();
    /*0xd83544*/ void set_Lamplight_ULT_MultDmage(float value);
    /*0xd8354c*/ bool get_Lamplight_SP01_FX2_START();
    /*0xd83554*/ void set_Lamplight_SP01_FX2_START(bool value);
    /*0xd83560*/ System.Action<CharacterBase> get_Baba_SIG_OnCC_WithCaster();
    /*0xd83568*/ void set_Baba_SIG_OnCC_WithCaster(System.Action<CharacterBase> value);
    /*0xd83570*/ int get_TargetType3_nNextTargetCount();
    /*0xd83578*/ void set_TargetType3_nNextTargetCount(int value);
    /*0xd83580*/ float get_TMP_ReflectionDamage();
    /*0xd83588*/ void set_TMP_ReflectionDamage(float value);
    /*0xd83590*/ float get_TMP_MultHitDamage();
    /*0xd83598*/ void set_TMP_MultHitDamage(float value);
    /*0xd835a0*/ float get_TMP_AddCriticalBeforeCalcDamage();
    /*0xd835a8*/ void set_TMP_AddCriticalBeforeCalcDamage(float value);
    /*0xd835b0*/ float get_TMP_SHP();
    /*0xd835b8*/ void set_TMP_SHP(float value);
    /*0xd835c0*/ float get_TMP_AddDamage_Physical();
    /*0xd835c8*/ void set_TMP_AddDamage_Physical(float value);
    /*0xd835d0*/ float get_TMP_AddDamage_Magical();
    /*0xd835d8*/ void set_TMP_AddDamage_Magical(float value);
    /*0xd835e0*/ float get_Blood_fMultDamage();
    /*0xd835e8*/ void set_Blood_fMultDamage(float value);
    /*0xd835f0*/ CharacterBase get_Target_Passive();
    /*0xd835f8*/ void set_Target_Passive(CharacterBase value);
    /*0xd83600*/ System.Collections.Generic.List<Battle.CharacterStat> get_StatList();
    /*0xd83608*/ void set_StatList(System.Collections.Generic.List<Battle.CharacterStat> value);
    /*0xd83610*/ Battle.CharacterStat get_DefaultStat();
    /*0xd83618*/ void set_DefaultStat(Battle.CharacterStat value);
    /*0xd83620*/ System.Collections.Generic.List<Battle.CharacterStat> get_EquipStat();
    /*0xd83628*/ void set_EquipStat(System.Collections.Generic.List<Battle.CharacterStat> value);
    /*0xd83630*/ Battle.CharacterStat get_BonusStat();
    /*0xd83638*/ void set_BonusStat(Battle.CharacterStat value);
    /*0xd83640*/ System.Collections.Generic.List<PTShare.Define.SEquip> get_EquipList();
    /*0xd83648*/ void set_EquipList(System.Collections.Generic.List<PTShare.Define.SEquip> value);
    /*0xd83650*/ float get_DefaultMoveSpeed();
    /*0xd83658*/ void set_DefaultMoveSpeed(float value);
    /*0xd83660*/ Battle.ColliderData get_HitCollider();
    /*0xd83674*/ void set_HitCollider(Battle.ColliderData value);
    /*0xd83684*/ Battle.AttackType get_AttackType();
    /*0xd8368c*/ void set_AttackType(Battle.AttackType value);
    /*0xd83694*/ long get_TotalPower();
    /*0xd8369c*/ void set_TotalPower(long value);
    /*0xd836a4*/ float get_CurHP();
    /*0xd836ac*/ void set_CurHP(float value);
    /*0xd7e818*/ float get_MaxHP();
    /*0xd836b4*/ float get_MaxShield();
    /*0xd836bc*/ void set_MaxShield(float value);
    /*0xd836c4*/ float get_CurShield();
    /*0xd836cc*/ void set_CurShield(float value);
    /*0xd836d4*/ float get_CurMP();
    /*0xd836dc*/ void set_CurMP(float value);
    /*0xd836e4*/ float get_CurGlobalCD();
    /*0xd836ec*/ void set_CurGlobalCD(float value);
    /*0xd836f4*/ int get_SignatureLV();
    /*0xd836fc*/ void set_SignatureLV(int value);
    /*0xd83704*/ bool get_SignatureEnable();
    /*0xd8370c*/ void set_SignatureEnable(bool value);
    /*0xd72ee8*/ void InitStat();
    /*0xd75354*/ void AddStat(Battle.CharacterStat _stat);
    /*0xd7bddc*/ void AddStats(System.Collections.Generic.List<Battle.CharacterStat> _lisStat);
    /*0xd753f0*/ void RemoveStat(Battle.CharacterStat _stat);
    /*0xd7bd40*/ void RemoveStats(System.Collections.Generic.List<Battle.CharacterStat> _lisStat);
    /*0xd83754*/ void SetEquipments(System.Collections.Generic.List<PTShare.Define.SEquip> _lisEquip);
    /*0xd72574*/ void SetSignature(int _nSignatureLV);
    /*0xd83b54*/ void SetTotalPower();
    /*0xd7d030*/ float GetDefaultStat(Battle.CharacterStat.StatType _eStatType, bool _bApplyInitAddHP);
    /*0xd757b0*/ float GetTotalStat(Battle.CharacterStat.StatType _eStatType);
    /*0xd83718*/ void CheckMaxHP();
    /*0xd84448*/ float GetStatFromStruct(Battle.CharacterStat _stat, Battle.CharacterStat.StatType _eStatType, bool _bApplyInitAddHP);
    /*0xd83ca4*/ float GetStatFromListStruct(System.Collections.Generic.List<Battle.CharacterStat> _lisStat, Battle.CharacterStat.StatType _eStatType, bool _bApplyInitAddHP);
    /*0xd8453c*/ CharacterState get_CurState();
    /*0xd84544*/ void set_CurState(CharacterState value);
    /*0xd8454c*/ CharacterState get_PrevState();
    /*0xd84554*/ void set_PrevState(CharacterState value);
    /*0xd8455c*/ CharacterState get_NextState();
    /*0xd84564*/ void set_NextState(CharacterState value);
    /*0xd73918*/ void InitState();
    /*0xd84674*/ void AddActiveSkills();
    /*0xd740dc*/ void RemoveInitBT();
    /*0xd74748*/ void UpdateState();
    /*0xd84ab8*/ bool CheckNextStateEnable();
    /*0xd84ce4*/ void SetExitCurrentStateWhenNextUpdate(bool _bExit);
    /*0xd84cfc*/ void SetNextState(Battle.StateAndSkillID _nextState, bool _isOverride);
    /*0xd84b24*/ void ChangeToNextState();
    /*0xd7f210*/ bool ChangeState(Battle.StateAndSkillID _eNextState, Battle.StateRecursiveType _eRecursiveType, bool _bTouch);
    /*0xd84a74*/ void ExitCurState();
    /*0xd84da8*/ void SetEnableState(Battle.StateAndSkillID _state, bool _boolean);
    /*0xd84e60*/ void SetEnableState(CharacterState _state, bool _boolean);
    /*0xd81534*/ void AddNewState(Battle.StateAndSkillID _addStateID, bool _isStateEnable, Battle.StateAndSkillID[] _nextStates);
    /*0xd84f24*/ void AddNewState(int _addStateID, bool _isStateEnable, Battle.StateAndSkillID[] _nextStates);
    /*0xd817a8*/ void AddStateToNextStateList(Battle.StateAndSkillID _addStateID, int _priority, Battle.StateAndSkillID[] _baseStates);
    /*0xd84f2c*/ void AddStateToNextStateList(int _addStateID, int _priority, Battle.StateAndSkillID[] _baseStates);
    /*0xd84f30*/ void RemoveState(CharacterState _state);
    /*0xd8509c*/ void RemoveState(Battle.StateAndSkillID _state);
    /*0xd85148*/ void RemoveStateAtNextStateList(Battle.StateAndSkillID _baseState, CharacterState _removeState);
    /*0xd85260*/ void RemoveStateAtNextStateList(Battle.StateAndSkillID _baseState, Battle.StateAndSkillID _removeState);
    /*0xd8456c*/ void RemoveStateAll();
    /*0xd85314*/ bool IsStateExist(Battle.StateAndSkillID _state);
    /*0xd85378*/ CharacterState GetStateClass(int _nID, bool _bStateEnable);
    /*0xd84f1c*/ CharacterState GetStateClass(Battle.StateAndSkillID _eID, bool _bStateEnable);
    /*0xd85a40*/ void StartStateSettings(bool _bSpecialSkill, ANIMATION_CLIP _animID, bool _bAnimLoop, bool _bHitAnimRotateInit, Spine.AnimationState.TrackEntryDelegate _delAnimComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delAnimEvents);
    /*0xd85d04*/ void SpecialSkillEffectEvent(Spine.TrackEntry entry, Spine.Event e);
    /*0xd85c54*/ bool IsPauseWhenSpecialSkillStart();
    /*0xd860bc*/ bool IsNoPauseStateWhenSpecialSkill();
    /*0xd86124*/ void ExitStateSettings(bool _isSpecialSkill, Spine.AnimationState.TrackEntryDelegate _delRemoveComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delRemoveEvents);
    /*0xd7b7d0*/ void SetAllSkillsEnable(bool _bEnable, bool _bIncludeDefault);
    /*0xd7b93c*/ void SetDefaultSkillEnable(bool _bEnable);
    /*0xd7ba7c*/ void SetSpecialSkillEnable(bool _bEnable);
    /*0xd86254*/ void SetSkillEnable(int _nSkillSlot, bool _bEnable);
    /*0xd7f4e0*/ bool SetTouchSkillUI(bool _isOn);
    /*0xd8646c*/ void SetNextStateToTouchSkill();
    /*0xd86478*/ Battle.ColliderData GetCurSkillSight();
    /*0xd8653c*/ void StartSkillFX(Battle.StateAndSkillID _eSkillID, int _nSkillFXID);
    /*0xd865f4*/ CharacterSkill_Active FindActiveSkillWithSlot(Battle.SkillSlotType _eSlotType);
    /*0xd82124*/ CharacterSkill_Active FindActiveSkillWithSlot(int _nSkillSlot);
    /*0xd865f8*/ void SetEnableCheckSkillCooltime(int _nSkillSlot, bool _bCheckCooltime);
    /*0xd86624*/ void SetEnableCheckSkillCooltime(Battle.SkillSlotType _eSlotType, bool _bCheckCooltime);
    /*0xd86650*/ void SetEnableFindTargetWithSightCollider(int _nSkillSlot, bool _bFindWithSightCollider);
    /*0xd8667c*/ void SetEnableFindTargetWithSightCollider(Battle.SkillSlotType _eSlotType, bool _bFindWithSightCollider);
    /*0xd866a8*/ UnityEngine.Transform get_GetDamageMarkerTrans();
    /*0xd73d44*/ void InitUI();
    /*0xd74da0*/ void UpdateUI();
    /*0xd866f0*/ void HandleGuildWarKillUnit(CharacterBase _killUnit);
    /*0xd86954*/ void SetDialogueRandomText();
    /*0xd86b74*/ void SetDialogue(string _sLocalKey, float _fDuration);
    /*0xd7dc08*/ void CheckDialogueDuration();
    /*0xd866b0*/ void CheckGuildBattleUIOptions();
    /*0xd86e54*/ void SetActiveHPMPGage(bool _bActive);
    /*0xd86e90*/ void SetActiveBuffImage(bool _bActive);
    /*0xd77af8*/ void <AddBuff>g__RenewAndReturnBuffCount|185_0(ref CharacterBase.<> );
    /*0xd7780c*/ void <AddBuff>g__AddAndStartBuff|185_1(ref CharacterBase.<> );
    /*0xd873cc*/ void <SetDialogue>b__750_0();
    /*0xd87480*/ void <CheckDialogueDuration>b__751_0();

    enum AddBuffCheckStackState
    {
        NONE = 0,
        RENEW_AND_ADD_BUFF = 1,
        RENEW_AND_MAX_STACK = 2,
        NO_STACK_ADD_BUFF = 3,
        EXIST_STACK_NO_MATCH_BUFF = 4,
    }

    struct <>c__DisplayClass140_0
    {
        /*0x10*/ int _nArtifactID;
    }

    struct <>c__DisplayClass185_0
    {
        /*0x10*/ CharacterBase <>4__this;
        /*0x18*/ int _nBuffID;
        /*0x20*/ Buff_Container buffContainer;
        /*0x28*/ TableData.TableData_Buff buffData;
        /*0x30*/ CharacterBase _caster;
    }
}

class CharacterBase_WorldBoss : CharacterBase
{
    /*0x13208dc*/ CharacterBase_WorldBoss();
    /*0x132085c*/ void UpdateObject();
}

class Buff_AKIMBO_Critical : Buff_Base
{
    /*0x54*/ int m_nPassiveSkillID;
    /*0x58*/ Passive_Base m_PassiveSkill;

    /*0x16f2e88*/ Buff_AKIMBO_Critical();
    /*0x16f2c04*/ void InitChild();
    /*0x16f2c64*/ void StartBuffAfterInit();
    /*0x16f2d94*/ void RemoveInitChild();
    /*0x16f2e68*/ void HandleCheckCritical(int _nSkillSlot, bool _bCritical);
}

class Buff_AKIMBO_Magazine : Buff_Base
{
    /*0x54*/ int m_nRemoveBuffID;

    /*0x16f2f54*/ Buff_AKIMBO_Magazine();
    /*0x16f2e98*/ void InitChild();
    /*0x16f2ed4*/ void RemoveInitChild();
}

class Buff_AKIMBO_Magnum : Buff_Base
{
    /*0x54*/ int m_nAddBuffID_Magazine;
    /*0x58*/ int m_nAddBuffID_ATK;
    /*0x5c*/ int m_SIG_MagnumAddCount;

    /*0x16f31ec*/ Buff_AKIMBO_Magnum();
    /*0x16f2f5c*/ void InitChild();
    /*0x16f30bc*/ void StartBuffAfterInit();
    /*0x16f30d8*/ void Renew();
}

class Buff_ASS_Mark : Buff_Base
{
    /*0x54*/ float m_fMultDamageRatio;
    /*0x58*/ int m_nAddMP;
    /*0x5c*/ int m_nAddBuffID;

    /*0x16f3834*/ Buff_ASS_Mark();
    /*0x16f31f4*/ void InitChild();
    /*0x16f3254*/ void StartBuffAfterInit();
    /*0x16f345c*/ void RemoveInitChild();
    /*0x16f35bc*/ void HandleCheckAttack(CharacterBase _attacker, float _f);
    /*0x16f3658*/ void HandleCheckKills(CharacterBase _killTarget);
}

class Buff_AddBuff_LessHP : Buff_Base
{
    /*0x54*/ float m_fLessHPRatio;
    /*0x58*/ int m_nBuffID;

    /*0x16f3b78*/ Buff_AddBuff_LessHP();
    /*0x16f383c*/ void InitChild();
    /*0x16f3880*/ void StartBuffAfterInit();
    /*0x16f3aa0*/ void RemoveInitChild();
    /*0x16f3b68*/ void ActionLessHP();
    /*0x16f39b0*/ void HandleCheckHP();
}

class Buff_AddBuff_Renew_P2 : Buff_Base
{
    /*0x54*/ int m_nAddBuffID;

    /*0x16f3c14*/ Buff_AddBuff_Renew_P2();
    /*0x16f3b80*/ void InitChild();
    /*0x16f3bbc*/ void Renew();
}

class Buff_AddMP : Buff_Base
{
    /*0x54*/ float m_fAddMP;

    /*0x16f3c64*/ Buff_AddMP();
    /*0x16f3c1c*/ void InitChild();
    /*0x16f3c40*/ void StartBuffAfterInit();
}

class Buff_AddbuffAttack : Buff_Base
{
    /*0x54*/ float m_fPercentage;
    /*0x58*/ int m_nBuffID;

    /*0x16f3eb0*/ Buff_AddbuffAttack();
    /*0x16f3c6c*/ void InitChild();
    /*0x16f3cb0*/ void StartBuffAfterInit();
    /*0x16f3df4*/ void HandleHitTarget(CharacterBase _target, int _n, bool _b);
}

class Buff_AddbuffCritical : Buff_Base
{
    /*0x54*/ int m_nBuffID;

    /*0x16f4040*/ Buff_AddbuffCritical();
    /*0x16f3eb8*/ void InitChild();
    /*0x16f3ef4*/ void StartBuffAfterInit();
    /*0x16f402c*/ void HandleHitTarget(CharacterBase _target, int _n, bool _bCritical);
}

class Buff_Addbuff_Dodge : Buff_Base
{
    /*0x54*/ int m_nAddBuffID;

    /*0x16f4294*/ Buff_Addbuff_Dodge();
    /*0x16f4048*/ void InitChild();
    /*0x16f4084*/ void StartBuffAfterInit();
    /*0x16f41b0*/ void RemoveInitChild();
    /*0x16f4284*/ void HandleCheckDodge(CharacterBase _attacker);
}

class Buff_Addbuff_Hit : Buff_Base
{
    /*0x16f44a8*/ Buff_Addbuff_Hit();
    /*0x16f429c*/ void StartBuffAfterInit();
    /*0x16f43c8*/ void RemoveInitChild();
    /*0x16f449c*/ void HandleCheckHit(bool _b);
}

class Buff_AvoidMagical : Buff_Base
{
    /*0x16f44ec*/ Buff_AvoidMagical();
    /*0x16f44b0*/ void StartBuffAfterInit();
    /*0x16f44cc*/ void RemoveInitChild();
}

class Buff_BDragon_DOT_MP : Buff_Base
{
    /*0x54*/ float m_fAddMP;
    /*0x58*/ float m_fCurDOTDeltaTime;
    /*0x60*/ ParticleBase m_Particle;

    /*0x16f47d4*/ Buff_BDragon_DOT_MP();
    /*0x16f44f4*/ void InitChild();
    /*0x16f4514*/ void StartBuffAfterInit();
    /*0x16f463c*/ void RemoveInitChild();
    /*0x16f46e8*/ void UpdateChild();
}

class Buff_BULLYGIRL_Shield : Buff_Shield
{
    /*0x16f47dc*/ Buff_BULLYGIRL_Shield();
}

class Buff_Baba_DOT_Heal : Buff_DOT_Damage
{
    /*0x16f4830*/ Buff_Baba_DOT_Heal();
    /*0x16f47e4*/ void InitDotDamage();
}

class Buff_Base
{
    /*0x10*/ CharacterBase Owner;
    /*0x18*/ CharacterBase Caster;
    /*0x20*/ Buff_Container Container;
    /*0x28*/ int <BuffID>k__BackingField;
    /*0x2c*/ Battle.BuffEffectType <BuffType>k__BackingField;
    /*0x30*/ bool <IsCC>k__BackingField;
    /*0x34*/ Battle.BuffFlag Flag;
    /*0x38*/ float CoolTime;
    /*0x40*/ TableData.TableData_Buff m_tBuffData;
    /*0x48*/ float[] m_arrParams;
    /*0x50*/ bool m_bUseUpdate;
    /*0x51*/ bool m_bInitFailed;

    /*0x16f2e90*/ Buff_Base();
    /*0x16f4840*/ int get_BuffID();
    /*0x16f4848*/ void set_BuffID(int value);
    /*0x16f4850*/ Battle.BuffEffectType get_BuffType();
    /*0x16f4858*/ void set_BuffType(Battle.BuffEffectType value);
    /*0x16f4860*/ TableData.TableData_Buff get_BuffData();
    /*0x16f4868*/ bool get_IsClearDeath();
    /*0x16f4888*/ bool get_IsRemoveable();
    /*0x16f48a8*/ bool get_IsStackable();
    /*0x16f48c8*/ bool get_IsDebuff();
    /*0x16f4948*/ bool get_IsBuff();
    /*0x16f4950*/ bool get_IsCC();
    /*0x16f4958*/ void set_IsCC(bool value);
    /*0x16f4964*/ bool get_IsGuildWarCC();
    /*0x16f31c0*/ int get_MaxStack();
    /*0x16f49d8*/ int get_SkillID();
    /*0x16f49f4*/ float get_CurrentCoolTime();
    /*0x16f4a10*/ float get_m_fMultDamage();
    /*0x16f2f30*/ int get_m_nBuffCount();
    /*0x16f4a2c*/ bool get_InitSuccess();
    /*0x16f4a3c*/ bool get_IsPlayer();
    /*0x16f4a50*/ bool Init(CharacterBase _owner, CharacterBase _caster, Buff_Container _container, TableData.TableData_Buff _buffData, int _nBuffID, float[] _arrParams);
    /*0x16f3c3c*/ void InitChild();
    /*0x16f30b0*/ void SetInitFailed();
    /*0x16f4de0*/ void Update();
    /*0x16f4df8*/ void UpdateChild();
    /*0x16f4620*/ void SetUpdate(bool _bUseUpdate);
    /*0x16f4dfc*/ void SetBuffType(Battle.BuffEffectType _eBuffType);
    /*0x16f2d90*/ void StartBuffAfterInit();
    /*0x16f4e04*/ void StartBuffFromOutside();
    /*0x16f3bec*/ void Renew();
    /*0x16f4e20*/ void RemoveInit(bool _bUpdateRemove);
    /*0x16f4fe4*/ void RemoveWithUpdate();
    /*0x16f4fe8*/ void RemoveWithoutUpdate();
    /*0x16f44e8*/ void RemoveInitChild();
    /*0x16f4fec*/ void Remove(bool _bUpdateRemove);
    /*0x16f501c*/ void RecieveDamageToTarget(CharacterBase _attacker, CharacterBase _target, ref Battle.StatTransfer _transfer);
    /*0x16f50d4*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
    /*0x16f31d8*/ void AddBuffToOwner(CharacterBase _caster, int _nBuffID);
    /*0x16f3714*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID);
    /*0x16f51d4*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x16f51dc*/ CharacterBase GetBuffTarget();
    /*0x16f51e4*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x16f48d0*/ bool FlagEquals(Battle.BuffFlag _flag);
    /*0x16f51e8*/ bool FlagEqualsAllBuffs(Battle.BuffFlag _flag);
    /*0x16f4b78*/ void SetFlag(Battle.BuffFlag _flag, bool _boolean);
    /*0x16f4f74*/ void ClearFlagAndBuffType();
    /*0x16f520c*/ void SetCurrentCooltime(float _fCooltime, bool _bSkipNextFrame);
    /*0x16f4e08*/ void RenewCooltime();
    /*0x16f5434*/ void SetTimeCheck(bool _bCheck);
    /*0x16f5454*/ void SetRemoveEnable(bool _bSetEnable);
    /*0x16f5474*/ void CheckSkillEnable();
    /*0x16f5488*/ void CheckImmuneKnockback();
    /*0x16f549c*/ void CheckEquipEnable();
    /*0x16f54b0*/ void CheckNoLessValue();
    /*0x16f54c4*/ void CheckShieldAmount();
    /*0x16f54d8*/ void CheckMultDamageCritical();
    /*0x16f54ec*/ void CheckMultMPPay();
    /*0x16f5500*/ void CheckMultCooltime();
    /*0x16f5514*/ void CheckNextBuff();
    /*0x16f4bf8*/ bool CheckCC();
    /*0x16f4968*/ bool CheckGuildWarCC();
    /*0x16f4cc8*/ bool CheckImmune();

    enum BuffValueType
    {
        NONE = 0,
        NOLESSHP = 1,
        SHIELD_AMOUNT = 2,
        SHIELD_AMOUNT_MAX = 3,
        SHIELD_TYPE = 4,
        MULT_HIT_DAMAGE = 5,
        MULT_HIT_DAMAGE_PHYSICAL = 6,
        MULT_HIT_DAMAGE_MAGICAL = 7,
        MULT_DAMAGE_CRITICAL = 8,
        MULT_RECYCLE_HP = 9,
        MULT_RECYCLE_MP = 10,
        MULT_MPPAY = 11,
        MULT_COOLTIME = 12,
        PROVOKE_AWAKETIME = 13,
        FREEZE_HP = 14,
        BOSS_DAMAGE_NEXT_TARGET = 15,
        BOSS_BUFF_COUNT = 16,
    }
}

class Buff_Blind : Buff_Base
{
    /*0x54*/ UnityEngine.Vector2 m_vecMovePOS;
    /*0x5c*/ float m_fMaxDistance;
    /*0x60*/ float m_fDistanceOriginPOS;

    /*0x16f5858*/ Buff_Blind();
    /*0x16f5528*/ void InitChild();
    /*0x16f5564*/ void StartBuffAfterInit();
    /*0x16f56b8*/ void StartBuffFromOutside();
    /*0x16f55ac*/ void SetRandomMovePOS();
    /*0x16f56d8*/ void RemoveInitChild();
    /*0x16f5738*/ void UpdateChild();
}

class Buff_Blood : Buff_DOT_Damage
{
    /*0x16f5a08*/ Buff_Blood();
    /*0x16f5860*/ void InitChild();
    /*0x16f58d4*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_Blood_PerHP : Buff_Blood
{
    /*0x16f5ac8*/ Buff_Blood_PerHP();
    /*0x16f5a10*/ void InitChild();
    /*0x16f5a74*/ void InitDotDamage();
}

class Buff_Boss_Stack_Guild : Buff_Base
{
    /*0x54*/ int m_nStackCount_StartMiddle;
    /*0x58*/ int m_nStackCount_Final;
    /*0x5c*/ float m_fCurrentTotalHit;
    /*0x60*/ double m_dTotalHit;
    /*0x68*/ int m_nAddBuffID;
    /*0x6c*/ float m_fCondition_1;
    /*0x70*/ float m_fCondition_2;
    /*0x74*/ float m_fCondition_3;

    /*0x16f5efc*/ Buff_Boss_Stack_Guild();
    /*0x16f5ad0*/ void InitChild();
    /*0x16f5b30*/ void StartBuffAfterInit();
    /*0x16f5c68*/ void RemoveInitChild();
    /*0x16f5d28*/ void HandleCheckAddBuff();
    /*0x16f5e94*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_Burn : Buff_DOT_Damage
{
    /*0x16f5f2c*/ Buff_Burn();
    /*0x16f5f04*/ void InitChild();
}

class Buff_ChangeBuff : Buff_Base
{
    /*0x16f5fdc*/ Buff_ChangeBuff();
    /*0x16f5f34*/ void StartBuffAfterInit();
    /*0x16f5f94*/ void RemoveInitChild();
}

class Buff_Charm : Buff_Base
{
    /*0x16f6060*/ Buff_Charm();
    /*0x16f5fe4*/ void InitChild();
    /*0x16f5ff0*/ void StartBuffAfterInit();
    /*0x16f602c*/ void StartBuffFromOutside();
    /*0x16f604c*/ void RemoveInitChild();
}

class Buff_Cleric_Retreat : Buff_Horror
{
    /*0x16f635c*/ Buff_Cleric_Retreat();
    /*0x16f6068*/ void InitChild();
    /*0x16f60d0*/ void SetMovePOS();
    /*0x16f61a4*/ void UpdateChild();
}

class Buff_Container
{
    /*0x10*/ Battle.BuffType <BuffType>k__BackingField;
    /*0x18*/ long UniqueNumber;
    /*0x20*/ Battle.BuffID BuffID_Enum;
    /*0x24*/ int BuffID;
    /*0x28*/ bool <UseUpdate>k__BackingField;
    /*0x29*/ bool <IsRemoved>k__BackingField;
    /*0x2c*/ int <SkillID>k__BackingField;
    /*0x30*/ System.Collections.Generic.List<Buff_Base> BuffList;
    /*0x38*/ CharacterBase m_Owner;
    /*0x40*/ CharacterBase m_Caster;
    /*0x48*/ ParticleBase m_Particle;
    /*0x50*/ bool m_bRemoveParticleOnDeleteBuff;
    /*0x54*/ float m_fTime;
    /*0x58*/ float CurTime;
    /*0x5c*/ bool IsCheckTime;
    /*0x5d*/ bool m_bExitWhenOwnerSkillEnd;
    /*0x5e*/ bool m_bExitWhenCasterSkillEnd;
    /*0x5f*/ bool m_bSkipNextFrameUpdateTime;

    /*0x16f6400*/ Buff_Container();
    /*0x16f636c*/ Battle.BuffType get_BuffType();
    /*0x16f6374*/ void set_BuffType(Battle.BuffType value);
    /*0x16f637c*/ int get_GetBuffCount();
    /*0x16f63c8*/ bool get_UseUpdate();
    /*0x16f63d0*/ void set_UseUpdate(bool value);
    /*0x16f63dc*/ bool get_IsRemoved();
    /*0x16f63e4*/ void set_IsRemoved(bool value);
    /*0x16f63f0*/ int get_SkillID();
    /*0x16f63f8*/ void set_SkillID(int value);
    /*0x16f64b4*/ void Init(int _nBuffID, CharacterBase _Owner, CharacterBase _Caster, TableData.TableData_Buff _BuffData, int _nSkillID);
    /*0x16f5228*/ void SetCurrentCoolTime(float _fCoolTime, bool _bSkipNextFrameUpdateTime);
    /*0x16f6520*/ void SetMultCooltimeForGuildWar();
    /*0x16f65ac*/ void SetMultCooltimeForAddBuff(float _fMultRatio);
    /*0x16f5410*/ void RenewCooltime();
    /*0x16f65d4*/ void Update();
    /*0x16f67cc*/ void AddBuff(Buff_Base _buff);
    /*0x16f6840*/ void RenewBuffAll();
    /*0x16f68fc*/ void SpawnParticle(string _sParticleName, bool _bRemoveOnDeleteBuff, bool _bOwnCaster);
    /*0x16f6a44*/ void RemoveInit();
    /*0x16f6714*/ void RemoveBuffAll(bool _bForceRemove, bool _bDeathRemove, bool _bUpdateRemove);
    /*0x16f6bd0*/ bool IsCC();
    /*0x16f6c7c*/ bool IsGuildWarCC();
    /*0x16f6d28*/ Battle.BuffType SetBuffType();
    /*0x16f6df4*/ void HandleStateExit();
}

class Buff_Cook_DotHeal : Buff_DOT_Damage
{
    /*0x64*/ int m_nBuffID;
    /*0x68*/ float m_fBuffChance;
    /*0x6c*/ float m_SIG_AddHealPercent;
    /*0x70*/ int m_SIG_AddBuffID;

    /*0x16f7318*/ Buff_Cook_DotHeal();
    /*0x16f6edc*/ void InitChild();
    /*0x16f6f34*/ void StartBuffAfterInit();
    /*0x16f7174*/ void SetDotDamage(float _fDamage);
    /*0x16f7194*/ void RemoveWithUpdate();
}

class Buff_Cook_Food : Buff_Base
{
    /*0x54*/ float m_fHealRatio;
    /*0x58*/ float m_fConditionHP;
    /*0x5c*/ float m_fCooltime;
    /*0x60*/ float m_SIG_AddHealPercent;
    /*0x64*/ int m_SIG_AddBuffID;
    /*0x68*/ int m_SIG_RemoveDebuffCount;

    /*0x16f77ac*/ Buff_Cook_Food();
    /*0x16f7320*/ void InitChild();
    /*0x16f7364*/ void StartBuffAfterInit();
    /*0x16f763c*/ void UpdateChild();
}

class Buff_DOT_Damage : Buff_Base
{
    /*0x54*/ float m_fDotDamageParam;
    /*0x58*/ float m_fDOTDamage;
    /*0x5c*/ Battle.AttackType m_eAttackType;
    /*0x60*/ float m_fCurDOTDeltaTime;

    /*0x16f4838*/ Buff_DOT_Damage();
    /*0x16f5898*/ void InitChild();
    /*0x16f77b4*/ void InitDotDamage();
    /*0x16f712c*/ void StartBuffAfterInit();
    /*0x16f7884*/ void UpdateChild();
    /*0x16f7978*/ void SetDotDamage(float _fDamage);
}

class Buff_DOT_Damage_PerHP : Buff_DOT_Damage
{
    /*0x16f7a24*/ Buff_DOT_Damage_PerHP();
    /*0x16f7980*/ void InitChild();
    /*0x16f79cc*/ void InitDotDamage();
}

class Buff_DOT_Damage_PerHP_P2 : Buff_DOT_Damage_PerHP
{
    /*0x16f7a60*/ Buff_DOT_Damage_PerHP_P2();
    /*0x16f7a2c*/ void InitChild();
}

class Buff_DOT_MP : Buff_DOT_Damage
{
    /*0x64*/ int m_nAddMP;

    /*0x16f7ae4*/ Buff_DOT_MP();
    /*0x16f7a68*/ void InitChild();
    /*0x16f7ab8*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_DOT_MP_P3 : Buff_DOT_MP
{
    /*0x16f7b3c*/ Buff_DOT_MP_P3();
    /*0x16f7aec*/ void InitChild();
}

class Buff_Darkelf_Bind : Buff_Base
{
    /*0x54*/ float m_fAddHPRatio;
    /*0x58*/ float m_fAddMPAmount;

    /*0x16f7f54*/ Buff_Darkelf_Bind();
    /*0x16f7b44*/ void InitChild();
    /*0x16f7b6c*/ void StartBuffAfterInit();
    /*0x16f7d60*/ void HandleUnitDeath();
    /*0x16f7d84*/ void HandleHitDamage(CharacterBase _attacker, float _fDamage);
    /*0x16f7e08*/ void RemoveInitChild();
}

class Buff_Darkelf_Blood : Buff_Blood
{
    /*0x64*/ float m_fAddHP;

    /*0x16f804c*/ Buff_Darkelf_Blood();
    /*0x16f7f5c*/ void InitChild();
    /*0x16f7fa8*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_Darkelf_Mark : Buff_Base
{
    /*0x54*/ float m_fCasterHPDown;
    /*0x58*/ float m_fCasterTeamHPAdd;

    /*0x16f830c*/ Buff_Darkelf_Mark();
    /*0x16f8054*/ void InitChild();
    /*0x16f807c*/ void StartBuffAfterInit();
    /*0x16f81c8*/ void HandleUnitDeath();
    /*0x16f824c*/ void RemoveInitChild();
}

class Buff_Darkness : Buff_Base
{
    /*0x16f8348*/ Buff_Darkness();
    /*0x16f8314*/ void InitChild();
    /*0x16f8320*/ void StartBuffAfterInit();
    /*0x16f8334*/ void RemoveInitChild();
}

class Buff_EVILPET_Delay : Buff_Base
{
    /*0x16f83a0*/ Buff_EVILPET_Delay();
    /*0x16f8350*/ void InitChild();
    /*0x16f8368*/ void UpdateChild();
}

class Buff_EVILPET_Reflection : Buff_Base
{
    /*0x54*/ float m_fTotalRecieveDamage;
    /*0x58*/ float m_fReflectionRatio;
    /*0x5c*/ float m_fHealAmountPercentage;
    /*0x60*/ ParticleBase m_shieldParticle;

    /*0x16f89d0*/ Buff_EVILPET_Reflection();
    /*0x16f83a8*/ void InitChild();
    /*0x16f83d0*/ void StartBuffAfterInit();
    /*0x16f85a8*/ void RemoveInitChild();
    /*0x16f89c0*/ void HandleCheckRecieveDamage(CharacterBase _, float _fDamage);
}

class Buff_Fall : Buff_Base
{
    /*0x16f8b64*/ Buff_Fall();
    /*0x16f89d8*/ void InitChild();
    /*0x16f89e4*/ void StartBuffAfterInit();
    /*0x16f8ab0*/ void StartBuffFromOutside();
    /*0x16f8b20*/ void RemoveInitChild();
}

class Buff_Fiance_Reflection : Buff_Reflection
{
    /*0x58*/ int m_nSkillFXID;

    /*0x16f8cd8*/ Buff_Fiance_Reflection();
    /*0x16f8b6c*/ void InitChild();
    /*0x16f8bc0*/ void RemoveWithUpdate();
}

class Buff_Fiance_SIG_Reflection : Buff_Reflection
{
    /*0x58*/ int m_nSkillFXID_Needle;
    /*0x5c*/ int m_nSkillFXID_SIG_Needle;
    /*0x60*/ int m_nSkillFXID_SIG_TickAttack;
    /*0x64*/ int m_nSIGLevel;

    /*0x16f9118*/ Buff_Fiance_SIG_Reflection();
    /*0x16f8ce0*/ void InitChild();
    /*0x16f8d7c*/ void StartBuffAfterInit();
    /*0x16f8ea4*/ void HandleCheckCooltime();
    /*0x16f8eec*/ void AttackNeedle();
    /*0x16f9028*/ void RemoveWithUpdate();
    /*0x16f902c*/ void RemoveWithoutUpdate();
    /*0x16f9040*/ void RemoveInitChild();
}

class Buff_Flower_Provoke_Target : Buff_Provoke_Target
{
    /*0x58*/ float m_fPercentage;
    /*0x5c*/ int m_nBuffID;
    /*0x60*/ int m_nAddMP;

    /*0x16f96dc*/ Buff_Flower_Provoke_Target();
    /*0x16f9120*/ void InitChild();
    /*0x16f9198*/ void StartBuffAfterInit();
    /*0x16f9408*/ void RemoveInitChild();
    /*0x16f95d8*/ void HandleHit(bool _b);
    /*0x16f95f8*/ void HandleAttack(CharacterBase _target, int _n, bool _b);
}

class Buff_Flower_Seed : Buff_Base
{
    /*0x54*/ float m_fUnderHPRatio;
    /*0x58*/ float m_fAddHPRatio;

    /*0x16f99c8*/ Buff_Flower_Seed();
    /*0x16f96e4*/ void InitChild();
    /*0x16f970c*/ void StartBuffAfterInit();
    /*0x16f9908*/ void RemoveInitChild();
    /*0x16f9820*/ void HandleCheckHP();
}

class Buff_Freeze : Buff_Base
{
    /*0x54*/ float m_fHPRatio;
    /*0x58*/ float m_fCurHP;

    /*0x16f9c6c*/ Buff_Freeze();
    /*0x16f99d0*/ void InitChild();
    /*0x16f99f8*/ void StartBuffAfterInit();
    /*0x16f9b48*/ void StartBuffFromOutside();
    /*0x16f9b70*/ void RemoveInitChild();
    /*0x16f9bd4*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x16f9c54*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x16f9c68*/ void IceDestroyed();
}

class Buff_Freeze_Ice : Buff_Freeze
{
    /*0x5c*/ float m_fDownHPRatio_LV2;
    /*0x60*/ float m_fDownHPRatio_LV3;
    /*0x64*/ float m_fCurSkillLV;
    /*0x68*/ int SkillID_Override;

    /*0x16f9da4*/ Buff_Freeze_Ice();
    /*0x16f9c74*/ void InitChild();
    /*0x16f9d38*/ void IceDestroyed();
}

class Buff_Frost : Buff_Base
{
    /*0x16f9dfc*/ Buff_Frost();
    /*0x16f9db4*/ void InitChild();
}

class Buff_GAMBLER_Charm : Buff_Charm
{
    /*0x52*/ bool m_SIG_bEnable;

    /*0x16fa14c*/ Buff_GAMBLER_Charm();
    /*0x16f9e04*/ void InitChild();
    /*0x16f9e10*/ void StartBuffAfterInit();
    /*0x16f9f84*/ void HandleCheckKillAlly(CharacterBase _killedUnit);
    /*0x16fa060*/ void RemoveInitChild();
}

class Buff_GDRAGON_Rage : Buff_Base
{
    /*0x16fa1fc*/ Buff_GDRAGON_Rage();
    /*0x16fa154*/ void StartBuffAfterInit();
    /*0x16fa1e8*/ void RemoveInitChild();
}

class Buff_Gambler_Card : Buff_Base
{
    /*0x54*/ int m_SIG_nBuffID_Heart;

    /*0x16fa58c*/ Buff_Gambler_Card();
    /*0x16fa204*/ void StartBuffAfterInit();
}

class Buff_Horror : Buff_Base
{
    /*0x54*/ float m_fDistance;
    /*0x58*/ UnityEngine.Vector2 m_vecMovePOS;

    /*0x16f6364*/ Buff_Horror();
    /*0x16f6094*/ void InitChild();
    /*0x16fa594*/ void StartBuffAfterInit();
    /*0x16fa5f8*/ void StartBuffFromOutside();
    /*0x16fa618*/ void SetMovePOS();
    /*0x16fa6c4*/ void RemoveInitChild();
    /*0x16fa724*/ void UpdateChild();
}

class Buff_Horror_P2 : Buff_Horror
{
    /*0x16fa8f8*/ Buff_Horror_P2();
    /*0x16fa8c4*/ void InitChild();
}

class Buff_Housing_Stat : Buff_Stat
{
    /*0x68*/ CharacterBase m_StatTarget;
    /*0x70*/ TableData.TableData_Buff m_tMaxStatData;

    /*0x16fadbc*/ Buff_Housing_Stat();
    /*0x16fa900*/ void StartBuffAfterInit();
    /*0x16fac74*/ float GetStatWithMaxValue(Battle.CharacterStat.StatType _eStatType, float _ftotalValue);
}

class Buff_IgnoreDamagePerHP : Buff_Base
{
    /*0x54*/ float m_fIgnoreDamage;
    /*0x58*/ bool m_bStartBuff;

    /*0x16fae44*/ Buff_IgnoreDamagePerHP();
    /*0x16fadc4*/ void InitChild();
    /*0x16fade4*/ void StartBuffAfterInit();
    /*0x16fae14*/ void RemoveInitChild();
}

class Buff_Immune_Knockback : Buff_Base
{
    /*0x16faea0*/ Buff_Immune_Knockback();
    /*0x16fae78*/ void StartBuffAfterInit();
    /*0x16fae8c*/ void RemoveInitChild();
}

class Buff_Immune_CC : Buff_Base
{
    /*0x16fae70*/ Buff_Immune_CC();
    /*0x16fae4c*/ void StartBuffAfterInit();
}

class Buff_Invincible : Buff_Base
{
    /*0x16faeb4*/ Buff_Invincible();
    /*0x16faea8*/ void InitChild();
}

class Buff_Invincible_Color : Buff_Invincible
{
    /*0x16faf64*/ Buff_Invincible_Color();
    /*0x16faebc*/ void StartBuffAfterInit();
    /*0x16faf50*/ void RemoveInitChild();
}

class Buff_Invisible : Buff_Base
{
    /*0x16faf78*/ Buff_Invisible();
    /*0x16faf6c*/ void InitChild();
}

class Buff_LADYDEATH_Horror : Buff_Horror
{
    /*0x16faf80*/ Buff_LADYDEATH_Horror();
}

class Buff_Ladydeath_Debuff : Buff_Base
{
    /*0x54*/ float m_fCheckTime;
    /*0x58*/ float m_fCurTime;
    /*0x5c*/ float m_fPercentage;
    /*0x60*/ int m_nBuffID;

    /*0x16fb0dc*/ Buff_Ladydeath_Debuff();
    /*0x16faf88*/ void InitChild();
    /*0x16faff8*/ void UpdateChild();
}

class Buff_Launch : Buff_Base
{
    /*0x16fb270*/ Buff_Launch();
    /*0x16fb0e4*/ void InitChild();
    /*0x16fb0f0*/ void StartBuffAfterInit();
    /*0x16fb1bc*/ void StartBuffFromOutside();
    /*0x16fb22c*/ void RemoveInitChild();
}

class Buff_Launch_Knockback : Buff_Launch
{
    /*0x54*/ float m_fKnockbackDistance;
    /*0x58*/ float m_fKnockbackTime;

    /*0x16fb2fc*/ Buff_Launch_Knockback();
    /*0x16fb278*/ void InitChild();
    /*0x16fb2a8*/ void StartBuffFromOutside();
}

class Buff_MIDNIGHT_Mark : Buff_Base
{
    /*0x54*/ float m_fConditionHP;
    /*0x58*/ int m_nAddBuffID;
    /*0x5c*/ int m_nAddMP;
    /*0x60*/ float m_fAddMPCooltime;
    /*0x64*/ float m_fCurAddMPCooltime;
    /*0x68*/ int m_SIG_BuffID_Attacker;
    /*0x6c*/ int m_SIG_BuffID_Ally;
    /*0x70*/ float m_SIG_Buff_Ally_Range;

    /*0x16fbc24*/ Buff_MIDNIGHT_Mark();
    /*0x16fb304*/ void InitChild();
    /*0x16fb4f4*/ void StartBuffAfterInit();
    /*0x16fb6f0*/ void RemoveInitChild();
    /*0x16fb83c*/ void HandleCheckHit(CharacterBase _attacker, float _fDamage);
    /*0x16fbba4*/ void HandleCheckAddMPCooltime();
}

class Buff_MIKO_Defdown : Buff_Base
{
    /*0x54*/ int m_nMaxCount;
    /*0x58*/ int m_nCurCount;
    /*0x5c*/ float m_fCurDOTDeltaTime;
    /*0x60*/ Battle.CharacterStat m_Stat;

    /*0x16fbe14*/ Buff_MIKO_Defdown();
    /*0x16fbc2c*/ void InitChild();
    /*0x16fbc68*/ void StartBuffAfterInit();
    /*0x16fbcd8*/ void UpdateChild();
    /*0x16fbdf8*/ void RemoveInitChild();
}

class Buff_MIKO_Sleep : Buff_Sleep
{
    /*0x54*/ int m_nBuffID;

    /*0x16fbeb8*/ Buff_MIKO_Sleep();
    /*0x16fbe1c*/ void InitChild();
    /*0x16fbe70*/ void HandleCheckHit(CharacterBase _, float _fDamage);
}

class Buff_Middle_MultHitDamage : Buff_MultHitDamage
{
    /*0x59*/ bool m_bAddMultHitDamage;

    /*0x16fc134*/ Buff_Middle_MultHitDamage();
    /*0x16fbec0*/ void StartBuffAfterInit();
    /*0x16fc014*/ void RemoveInitChild();
    /*0x16fc114*/ void HandleCheckHit(Battle.AttackType _eAttackType);
}

class Buff_MultCooltime : Buff_Base
{
    /*0x54*/ float m_fMultCooltime;

    /*0x16fc1a0*/ Buff_MultCooltime();
    /*0x16fc144*/ void InitChild();
    /*0x16fc164*/ void StartBuffAfterInit();
    /*0x16fc178*/ void RemoveInitChild();
    /*0x16fc18c*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_MultCooltime_P3 : Buff_MultCooltime
{
    /*0x16fc1d0*/ Buff_MultCooltime_P3();
    /*0x16fc1a8*/ void InitChild();
}

class Buff_MultDamageBlood : Buff_Base
{
    /*0x54*/ float m_fBloodMult;
    /*0x58*/ bool m_bAddMult;

    /*0x16fc26c*/ Buff_MultDamageBlood();
    /*0x16fc1d8*/ void InitChild();
    /*0x16fc1fc*/ void StartBuffAfterInit();
    /*0x16fc234*/ void RemoveInitChild();
}

class Buff_MultDamageCritical : Buff_Base
{
    /*0x54*/ float m_fMultDamageCritical;

    /*0x16fc2d0*/ Buff_MultDamageCritical();
    /*0x16fc274*/ void InitChild();
    /*0x16fc294*/ void StartBuffAfterInit();
    /*0x16fc2a8*/ void RemoveInitChild();
    /*0x16fc2bc*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_MultHitDamage : Buff_Base
{
    /*0x54*/ float m_fAddDamage;
    /*0x58*/ bool m_bAddMult;

    /*0x16fc13c*/ Buff_MultHitDamage();
    /*0x16fc2d8*/ void InitChild();
    /*0x16fc2fc*/ void StartBuffAfterInit();
    /*0x16fc32c*/ void RemoveInitChild();
}

class Buff_MultHitDamage_AttackType : Buff_Base
{
    /*0x54*/ float m_fAddDamage_Physical;
    /*0x58*/ float m_fAddDamage_Magical;
    /*0x5c*/ bool m_bAddMultDamageValue;

    /*0x16fc420*/ Buff_MultHitDamage_AttackType();
    /*0x16fc35c*/ void InitChild();
    /*0x16fc384*/ void StartBuffAfterInit();
    /*0x16fc3d0*/ void RemoveInitChild();
}

class Buff_MultMPPay : Buff_Base
{
    /*0x54*/ float m_fMultMPPay;

    /*0x16fc484*/ Buff_MultMPPay();
    /*0x16fc428*/ void InitChild();
    /*0x16fc448*/ void StartBuffAfterInit();
    /*0x16fc45c*/ void RemoveInitChild();
    /*0x16fc470*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
}

class Buff_NoEquip : Buff_Base
{
    /*0x16fc4c0*/ Buff_NoEquip();
    /*0x16fc48c*/ void InitChild();
    /*0x16fc498*/ void StartBuffAfterInit();
    /*0x16fc4ac*/ void RemoveInitChild();
}

class Buff_NoLessHP : Buff_Base
{
    /*0x54*/ float m_fLessHPValue;

    /*0x16fc540*/ Buff_NoLessHP();
    /*0x16fc4c8*/ void InitChild();
    /*0x16fc504*/ void StartBuffAfterInit();
    /*0x16fc518*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x16fc52c*/ void RemoveInitChild();
}

class Buff_NoSkill : Buff_Base
{
    /*0x16fc57c*/ Buff_NoSkill();
    /*0x16fc548*/ void InitChild();
    /*0x16fc554*/ void StartBuffAfterInit();
    /*0x16fc568*/ void RemoveInitChild();
}

class Buff_NoSkill_ULT : Buff_Base
{
    /*0x16fc584*/ Buff_NoSkill_ULT();
}

class Buff_PARU_Defense_CC : Buff_Base
{
    /*0x54*/ float m_fAddDefensePercentage;
    /*0x58*/ Battle.CharacterStat m_AddDefenseStat;
    /*0x60*/ bool m_bAddDefenseStat;

    /*0x16fc870*/ Buff_PARU_Defense_CC();
    /*0x16fc58c*/ void InitChild();
    /*0x16fc5b0*/ void StartBuffAfterInit();
    /*0x16fc6c0*/ void RemoveInitChild();
    /*0x16fc790*/ void HandleCheckBuffCC();
}

class Buff_PARU_Defense_Miss : Buff_Base
{
    /*0x54*/ int m_nDefenseUpBuffID;

    /*0x16fca94*/ Buff_PARU_Defense_Miss();
    /*0x16fc878*/ void InitChild();
    /*0x16fc8b4*/ void StartBuffAfterInit();
    /*0x16fc9c4*/ void RemoveInitChild();
    /*0x16fca84*/ void HandleCheckMiss();
}

class Buff_PARU_DotHeal : Buff_Base
{
    /*0x58*/ System.Collections.Generic.List<Buff_PARU_DotHeal.PARU_DotHeal> m_lisDotHeal;
    /*0x60*/ float m_fDotHealTime;

    /*0x16fd028*/ Buff_PARU_DotHeal();
    /*0x16fca9c*/ void InitChild();
    /*0x16fcabc*/ void StartBuffAfterInit();
    /*0x16fccd4*/ void RemoveInitChild();
    /*0x16fce20*/ void HandleCheckRecieveDamage(CharacterBase _attacker, float _fDamage);
    /*0x16fcebc*/ void HandleCheckDotHeal();

    class PARU_DotHeal
    {
        /*0x10*/ float healAmount;
        /*0x14*/ float curTime;
        /*0x18*/ int tickCount;

        /*0xda52ec*/ PARU_DotHeal(float _healAmount, float _time);
    }
}

class Buff_Pirate : Buff_Base
{
    /*0x54*/ float m_fDrainMPRatio;
    /*0x58*/ float m_fDrainMPAmount;
    /*0x5c*/ float m_fDeathAddMPAmount;

    /*0x16fd510*/ Buff_Pirate();
    /*0x16fd0a0*/ void InitChild();
    /*0x16fd0c8*/ void StartBuffAfterInit();
    /*0x16fd2d4*/ void RemoveInitChild();
    /*0x16fd420*/ void HandleHit(CharacterBase _attacker, float _fDamage);
    /*0x16fd48c*/ void HandleDeath();
}

class Buff_Provoke : Buff_Base
{
    /*0x54*/ int m_nAwakeTime;

    /*0x1331cdc*/ Buff_Provoke();
    /*0x1331b88*/ void InitChild();
    /*0x1331c54*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x1331c80*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x1331c98*/ void RemoveInitChild();
}

class Buff_Provoke_Target : Buff_Provoke
{
    /*0x1331cec*/ Buff_Provoke_Target();
    /*0x1331ce4*/ CharacterBase GetBuffTarget();
}

class Buff_QUEEN_Mark : Buff_Base
{
    /*0x54*/ float m_fAddATKRatio;
    /*0x58*/ int m_nAddMP;
    /*0x5c*/ int m_nBuffID;
    /*0x60*/ float m_fCurrentHPRatio;
    /*0x68*/ Battle.CharacterStat m_AtkStat;

    /*0x13324a0*/ Buff_QUEEN_Mark();
    /*0x1331cf4*/ void InitChild();
    /*0x1331d54*/ void StartBuffAfterInit();
    /*0x1332064*/ void RemoveInitChild();
    /*0x1332290*/ void HandleCheckHP();
    /*0x1332384*/ void HandleCheckKills(CharacterBase _);
    /*0x13323ac*/ void HandleCheckDeath();
}

class Buff_QUEEN_NoLimit_Kills : Buff_Base
{
    /*0x13327bc*/ Buff_QUEEN_NoLimit_Kills();
    /*0x13324a8*/ void StartBuffAfterInit();
    /*0x13325d4*/ void RemoveInitChild();
    /*0x13326a8*/ void HandleCheckKills(CharacterBase _);
}

class Buff_QUEEN_Slow : Buff_Base
{
    /*0x1332804*/ Buff_QUEEN_Slow();
    /*0x13327c4*/ void StartBuffAfterInit();
    /*0x13327e4*/ void Renew();
}

class Buff_RABBIT_SIG_Invisible : Buff_Invisible
{
    /*0x1332a08*/ Buff_RABBIT_SIG_Invisible();
    /*0x133280c*/ void StartBuffAfterInit();
    /*0x1332928*/ void RemoveInitChild();
    /*0x13329f4*/ void HandleCheckAttack();
}

class Buff_RDRAGON_Mark : Buff_AddBuff_LessHP
{
    /*0x5c*/ int m_nBuffID_2;
    /*0x60*/ float m_fDistance;

    /*0x1332d94*/ Buff_RDRAGON_Mark();
    /*0x1332a10*/ void InitChild();
    /*0x1332a88*/ void StartBuffAfterInit();
    /*0x1332be4*/ void RemoveInitChild();
    /*0x1332cb0*/ void ActionLessHP();
    /*0x1332d80*/ void HandleUnitDeath();
}

class Buff_REDHEAD_Horror : Buff_Horror
{
    /*0x60*/ float m_fHitDamageMultRatio;
    /*0x64*/ bool m_bAddMult;

    /*0x1332f30*/ Buff_REDHEAD_Horror();
    /*0x1332d9c*/ void InitChild();
    /*0x1332dd4*/ void StartBuffAfterInit();
    /*0x1332e1c*/ void RemoveInitChild();
    /*0x1332e64*/ void SetMovePOS();
}

class Buff_Rabbit_Critical : Buff_Base
{
    /*0x54*/ float m_fAddCriticalAttack;
    /*0x58*/ float m_fAddCriticalLowHP;
    /*0x5c*/ float m_fLowHPRatio;

    /*0x13332b4*/ Buff_Rabbit_Critical();
    /*0x1332f38*/ void InitChild();
    /*0x1332f68*/ void StartBuffAfterInit();
    /*0x13330c4*/ void RemoveInitChild();
    /*0x13331bc*/ void HandleCheckAttack(CharacterBase _target);
}

class Buff_Redhood : Buff_MultHitDamage
{
    /*0x5c*/ float m_fAddHPRatio;

    /*0x1333540*/ Buff_Redhood();
    /*0x13332bc*/ void InitChild();
    /*0x13332f4*/ void StartBuffAfterInit();
    /*0x133342c*/ void RemoveInitChild();
    /*0x133350c*/ void HandleCheckCondition(CharacterBase _attacker, float _fDamage);
}

class Buff_Redhood_Blood : Buff_Blood
{
    /*0x64*/ float m_fBloodPercentage;

    /*0x13335c8*/ Buff_Redhood_Blood();
    /*0x1333548*/ void InitChild();
    /*0x1333580*/ void InitDotDamage();
}

class Buff_Reflection : Buff_Base
{
    /*0x54*/ float m_fReflectionRatio;

    /*0x13338a8*/ Buff_Reflection();
    /*0x13335d0*/ void InitChild();
    /*0x13335f0*/ void StartBuffAfterInit();
    /*0x1333728*/ void HandleCheckHit(CharacterBase _attacker, float _fDamage);
    /*0x13337d4*/ void RemoveInitChild();
}

class Buff_ReleaseBuff : Buff_Base
{
    /*0x54*/ int m_nBuffID;

    /*0x13338fc*/ Buff_ReleaseBuff();
    /*0x13338b0*/ void InitChild();
    /*0x13338ec*/ void RemoveWithUpdate();
}

class Buff_ReleaseBuff_Caster : Buff_ReleaseBuff
{
    /*0x1333918*/ Buff_ReleaseBuff_Caster();
    /*0x1333904*/ void RemoveWithUpdate();
}

class Buff_ReleaseBuff_P2 : Buff_ReleaseBuff
{
    /*0x133395c*/ Buff_ReleaseBuff_P2();
    /*0x1333920*/ void InitChild();
}

class Buff_ReleaseBuff_Removed : Buff_Base
{
    /*0x54*/ int m_nBuffID;

    /*0x13339b0*/ Buff_ReleaseBuff_Removed();
    /*0x1333964*/ void InitChild();
    /*0x13339a0*/ void RemoveWithoutUpdate();
}

class Buff_ReleaseBuff_Removed_P2 : Buff_ReleaseBuff_Removed
{
    /*0x1333a10*/ Buff_ReleaseBuff_Removed_P2();
    /*0x13339b8*/ void InitChild();
}

class Buff_ReleaseDamage_Magic : Buff_Base
{
    /*0x54*/ float m_fATKRatio;
    /*0x58*/ Battle.StatTransfer m_ReleaseTransfer;

    /*0x1333ba8*/ Buff_ReleaseDamage_Magic();
    /*0x1333a18*/ void InitChild();
    /*0x1333a38*/ void StartBuffAfterInit();
    /*0x1333b98*/ void RemoveInitChild();
}

class Buff_ReleaseDeath : Buff_Base
{
    /*0x1333bc8*/ Buff_ReleaseDeath();
    /*0x1333bb0*/ void RemoveInitChild();
}

class Buff_Release_AddMP : Buff_Base
{
    /*0x54*/ int m_nAddMP;

    /*0x1333c2c*/ Buff_Release_AddMP();
    /*0x1333bd0*/ void InitChild();
    /*0x1333c0c*/ void RemoveWithUpdate();
}

class Buff_Release_AddMP_P2 : Buff_Release_AddMP
{
    /*0x1333c70*/ Buff_Release_AddMP_P2();
    /*0x1333c34*/ void InitChild();
}

class Buff_Renew_Kill : Buff_Base
{
    /*0x1333eec*/ Buff_Renew_Kill();
    /*0x1333c78*/ void StartBuffAfterInit();
    /*0x1333db0*/ void HandleKillUnit(CharacterBase _killUnit);
    /*0x1333e18*/ void RemoveInitChild();
}

class Buff_Restore_HP : Buff_Base
{
    /*0x54*/ float m_fRestoreHP;
    /*0x58*/ bool m_bAddValue;

    /*0x1333f84*/ Buff_Restore_HP();
    /*0x1333ef4*/ void InitChild();
    /*0x1333f14*/ void StartBuffAfterInit();
    /*0x1333f4c*/ void RemoveInitChild();
}

class Buff_Restore_HP_MP : Buff_Restore_HP
{
    /*0x5c*/ float m_fRestoreMP;

    /*0x133405c*/ Buff_Restore_HP_MP();
    /*0x1333f8c*/ void InitChild();
    /*0x1333fb4*/ void StartBuffAfterInit();
    /*0x1334010*/ void RemoveInitChild();
}

class Buff_Restore_HP_P2 : Buff_Restore_HP
{
    /*0x133408c*/ Buff_Restore_HP_P2();
    /*0x1334064*/ void InitChild();
}

class Buff_Restore_MP : Buff_Base
{
    /*0x54*/ float m_fRecycleMP;
    /*0x58*/ bool m_bAddValue;

    /*0x1334124*/ Buff_Restore_MP();
    /*0x1334094*/ void InitChild();
    /*0x13340b4*/ void StartBuffAfterInit();
    /*0x13340ec*/ void RemoveInitChild();
}

class Buff_SUGAR_DOT_Heal : Buff_DOT_Damage
{
    /*0x1334264*/ Buff_SUGAR_DOT_Heal();
    /*0x133412c*/ Battle.DamageResult RecieveDotDamageToTarget(CharacterBase _attacker, CharacterBase _target, float _fDamage, Battle.AttackType _eAttackType, int _nFactionID);
}

class Buff_SUGAR_Powder : Buff_Base
{
    /*0x54*/ float m_fMultRatio;

    /*0x13342cc*/ Buff_SUGAR_Powder();
    /*0x133426c*/ void InitChild();
    /*0x133428c*/ void StartBuffAfterInit();
    /*0x13342ac*/ void RemoveInitChild();
}

class Buff_Sacrifice : Buff_Base
{
    /*0x54*/ float m_fSacrificeDamageRatio;

    /*0x13345fc*/ Buff_Sacrifice();
    /*0x13342d4*/ void InitChild();
    /*0x13342f4*/ void StartBuffAfterInit();
    /*0x1334438*/ void RemoveInitChild();
    /*0x133450c*/ void HandleCheckHit(CharacterBase _attacker, float _fDamage);
}

class Buff_Shield : Buff_Base
{
    /*0x54*/ Battle.BuffOriginType m_eBuffOriginType;
    /*0x58*/ Battle.ShieldType m_eShieldType;
    /*0x5c*/ float m_fShieldAmount;
    /*0x60*/ float m_fCurShieldAmount;
    /*0x68*/ ParticleBase m_ShieldParticle;
    /*0x70*/ string m_sShieldParticleName;

    /*0x1334b64*/ Buff_Shield();
    /*0x1334604*/ void InitChild();
    /*0x1334644*/ void StartBuffAfterInit();
    /*0x13347a4*/ void SetShieldEffectName(string _sShieldEffectName);
    /*0x13347ac*/ void SetShieldEffectName();
    /*0x1334998*/ void CreateShieldEffect();
    /*0x13346b4*/ void SetShieldAmount();
    /*0x1334a44*/ void RemoveInitChild();
    /*0x1334ab0*/ void Renew();
    /*0x1334ad8*/ float GetBuffValue(Buff_Base.BuffValueType _eValueType);
    /*0x1334b10*/ void SetBuffValue(Buff_Base.BuffValueType _eValueType, float _fValue);
    /*0x1334b50*/ void RemoveWithAttack();
}

class Buff_Shield_Amount_Param0 : Buff_Shield
{
    /*0x1334bd0*/ Buff_Shield_Amount_Param0();
    /*0x1334b6c*/ void StartBuffAfterInit();
}

class Buff_Shield_BABA_SIG : Buff_Shield_Baba
{
    /*0x7c*/ float m_SIG_AddMP;
    /*0x80*/ int m_SIG_AddBuffID;

    /*0x1335120*/ Buff_Shield_BABA_SIG();
    /*0x1334bd8*/ void InitChild();
    /*0x1334d38*/ void StartBuffAfterInit();
    /*0x1334e78*/ void RemoveWithUpdate();
    /*0x1334eb8*/ void RemoveInitChild();
    /*0x1335054*/ void HandleHitAttack(CharacterBase _attacker, float _fDamage);
}

class Buff_Shield_Baba : Buff_Shield
{
    /*0x78*/ float m_fRecoveryHPRatio;

    /*0x1335128*/ Buff_Shield_Baba();
    /*0x1334d04*/ void InitChild();
    /*0x1335130*/ void SetShieldEffectName();
    /*0x1334fa0*/ void RemoveInitChild();
}

class Buff_Shield_FIANCE_SIG : Buff_Shield
{
    /*0x13351a8*/ Buff_Shield_FIANCE_SIG();
}

class Buff_Shield_RDRAGON_SIG : Buff_Shield
{
    /*0x78*/ int m_nAddMP;

    /*0x1335254*/ Buff_Shield_RDRAGON_SIG();
    /*0x13351b0*/ void InitChild();
    /*0x1335200*/ void RemoveWithAttack();
}

class Buff_Shield_Slime : Buff_Shield
{
    /*0x13353f8*/ Buff_Shield_Slime();
    /*0x133525c*/ void CreateShieldEffect();
}

class Buff_Silence : Buff_Base
{
    /*0x1335444*/ Buff_Silence();
    /*0x1335400*/ void InitChild();
    /*0x1335410*/ void StartBuffAfterInit();
    /*0x133543c*/ void RemoveInitChild();
}

class Buff_Sleep : Buff_Base
{
    /*0x13357b0*/ Buff_Sleep();
    /*0x133544c*/ void InitChild();
    /*0x133545c*/ void StartBuffAfterInit();
    /*0x1335518*/ void AddCheckDamageAction();
    /*0x1335630*/ void RemoveCheckDamageAction();
    /*0x13356f4*/ void StartBuffFromOutside();
    /*0x133571c*/ void RemoveInitChild();
    /*0x1335790*/ void HandleCheckHit(CharacterBase _, float _fDamage);
}

class Buff_Stack_Add : Buff_Base
{
    /*0x54*/ int m_nStackCondition;
    /*0x58*/ int m_nAddBuffID;

    /*0x1335868*/ Buff_Stack_Add();
    /*0x13357b8*/ void InitChild();
    /*0x1335810*/ void StartBuffAfterInit();
}

class Buff_Stack_Change : Buff_Base
{
    /*0x54*/ int m_nNeedBuffStack;
    /*0x58*/ int m_nChangeBuffID;

    /*0x1335950*/ Buff_Stack_Change();
    /*0x1335870*/ void InitChild();
    /*0x13358c8*/ void StartBuffAfterInit();
}

class Buff_Stat : Buff_Base
{
    /*0x58*/ Battle.CharacterStat m_Stat;
    /*0x60*/ Battle.BuffOriginType m_eBuffOriginType;

    /*0x1335ad4*/ Buff_Stat();
    /*0x1335958*/ void InitChild();
    /*0x1335984*/ void StartBuffAfterInit();
    /*0x1335ab8*/ void RemoveInitChild();
}

class Buff_Stun : Buff_Base
{
    /*0x1335c1c*/ Buff_Stun();
    /*0x1335adc*/ void InitChild();
    /*0x1335aec*/ void StartBuffAfterInit();
    /*0x1335b94*/ void StartBuffFromOutside();
    /*0x1335bbc*/ void RemoveInitChild();
}

class Buff_Swordcat_Dodge : Buff_Base
{
    /*0x54*/ float m_fAddTime;

    /*0x13360c4*/ Buff_Swordcat_Dodge();
    /*0x1335c24*/ void InitChild();
    /*0x1335c5c*/ void StartBuffAfterInit();
    /*0x1335da0*/ void Renew();
    /*0x1335ee4*/ void HandleCheckAvoid(CharacterBase _attacker);
    /*0x1335fd8*/ void RemoveInitChild();
}

class Buff_WATER_Blood_Mult : Buff_Base
{
    /*0x54*/ float m_fBloodMult;
    /*0x58*/ bool m_bAddMult;

    /*0x1336160*/ Buff_WATER_Blood_Mult();
    /*0x13360cc*/ void InitChild();
    /*0x13360f0*/ void StartBuffAfterInit();
    /*0x1336128*/ void RemoveInitChild();
}

class Buff_WATER_Freeze : Buff_Freeze
{
    /*0x5c*/ float m_fAddHPRatio;
    /*0x60*/ float m_nCureDuration;
    /*0x64*/ int m_nAddMP;
    /*0x68*/ float m_fCurDeltaTime_AddHP;
    /*0x6c*/ float m_fCurDeltaTime_Cure;

    /*0x1336368*/ Buff_WATER_Freeze();
    /*0x1336168*/ void InitChild();
    /*0x13361cc*/ void StartBuffAfterInit();
    /*0x13361fc*/ void UpdateChild();
}

class Passive_AKIMBO_Cooltime : Passive_Cooltime
{
    /*0x1144198*/ Passive_AKIMBO_Cooltime();
    /*0x11440b8*/ void InitChild();
}

class Passive_AddBuff_CC : Passive_Base
{
    /*0x1144470*/ Passive_AddBuff_CC();
    /*0x11441a8*/ void InitChild();
    /*0x114438c*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_Attack : Passive_Base
{
    /*0xf0*/ int m_nAttackCount;
    /*0xf4*/ int m_nCurAttackCount;

    /*0x1144688*/ Passive_Attack();
    /*0x1144480*/ void InitChild();
    /*0x1144668*/ bool CheckCondition_Child();
}

class Passive_AttackSkillFX : Passive_Base
{
    /*0x11446d4*/ Passive_AttackSkillFX();
    /*0x1144690*/ void InitChild();
    /*0x11446b0*/ bool CheckCondition_Child();
}

class Passive_Avoid : Passive_Base
{
    /*0xf0*/ int m_nAvoidCount;
    /*0xf4*/ int m_nCurAvoidCount;

    /*0x1144748*/ Passive_Avoid();
    /*0x11446dc*/ void InitChild();
    /*0x1144728*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_BULLYGIRL_SIG_Shield_Removed : Passive_Base
{
    /*0x1144944*/ Passive_BULLYGIRL_SIG_Shield_Removed();
    /*0x1144750*/ void InitChild();
    /*0x1144934*/ bool CheckCondition_Child(int _nBuffEffectType, bool _bForceRemoved);
}

class Passive_Base
{
    /*0x10*/ int <PassiveID>k__BackingField;
    /*0x14*/ bool <IsSignature>k__BackingField;
    /*0x18*/ InGameController m_InGameController;
    /*0x20*/ CharacterBase m_Character;
    /*0x28*/ SkillFXTrigger m_SkillFXTrigger;
    /*0x80*/ Battle.ColliderData m_SightCollider;
    /*0x8c*/ Battle.AttackType m_eAttackType;
    /*0x90*/ Battle.PassiveConditionType m_ePassiveCondition;
    /*0x98*/ TableData.TableData_Skillbase m_tSkillBase;
    /*0xa0*/ float m_fCoolTime;
    /*0xa4*/ float m_fCurCoolTime;
    /*0xa8*/ bool m_bCoolTimeNone;
    /*0xb0*/ System.Action m_OnRemoveInit;
    /*0xb8*/ System.Action m_ActionRemove;
    /*0xc0*/ System.Action<bool> m_ActionRemove_bool;
    /*0xc8*/ System.Action<int> m_ActionRemove_int;
    /*0xd0*/ System.Action<int, bool> m_ActionRemove_int_bool;
    /*0xd8*/ System.Action<float> m_ActionRemove_float;
    /*0xe0*/ System.Action<CharacterBase> m_ActionRemove_unit;
    /*0xe8*/ System.Action<CharacterBase, float> m_ActionRemove_unit_float;

    /*0x1144478*/ Passive_Base();
    /*0x114494c*/ int get_PassiveID();
    /*0x1144954*/ void set_PassiveID(int value);
    /*0x114495c*/ bool get_IsSignature();
    /*0x1144964*/ void set_IsSignature(bool value);
    /*0x1144970*/ bool Init(CharacterBase _character, int _nSkillID);
    /*0x11446ac*/ void InitChild();
    /*0x1144e20*/ void RemoveInit();
    /*0x1144e6c*/ void HandleRemoveInit();
    /*0x1144f2c*/ void RemoveInitChild();
    /*0x1144f30*/ void SetCooltime();
    /*0x1144f6c*/ void StartFXAll(bool _bSetCooltime);
    /*0x11444cc*/ void SetActionStartFX(ref System.Action _action);
    /*0x1144fd4*/ void SetActionStartFX(ref System.Action<bool> _action);
    /*0x114519c*/ void SetActionStartFX(ref System.Action<int> _action);
    /*0x114476c*/ void SetActionStartFX(ref System.Action<int, bool> _action);
    /*0x1145364*/ void SetActionStartFX(ref System.Action<float> _action);
    /*0x11441c4*/ void SetActionStartFX(ref System.Action<CharacterBase> _action);
    /*0x114552c*/ void SetActionStartFX(ref System.Action<CharacterBase, float> _action);
    /*0x11456f4*/ bool CheckCondition_Common();
    /*0x1145768*/ void StartFX();
    /*0x11457bc*/ void StartFX(bool _bValue);
    /*0x114581c*/ void StartFX(int _nValue);
    /*0x114587c*/ void StartFX(int _nValue, bool _bValue);
    /*0x11458f0*/ void StartFX(float _fValue);
    /*0x1145958*/ void StartFX(CharacterBase _unit);
    /*0x11459b8*/ void StartFX(CharacterBase _unit, float _fValue);
    /*0x1145a30*/ bool CheckCondition_Child();
    /*0x1145a38*/ bool CheckCondition_Child(bool _bValue);
    /*0x1145a40*/ bool CheckCondition_Child(int _nValue);
    /*0x1145a48*/ bool CheckCondition_Child(int _nValue, bool _bValue);
    /*0x1145a50*/ bool CheckCondition_Child(float _fValue);
    /*0x1145a58*/ bool CheckCondition_Child(CharacterBase _unit);
    /*0x1145a60*/ bool CheckCondition_Child(CharacterBase _unit, float _fValue);
    /*0x1145a68*/ void HandleCheckCoolTime();
    /*0x1144454*/ void SetPassiveTarget(CharacterBase _target);
    /*0x1144440*/ bool get_IsPlayer();
    /*0x1145afc*/ void <SetActionStartFX>b__33_0();
    /*0x1145ba8*/ void <SetActionStartFX>b__34_0();
    /*0x1145c68*/ void <SetActionStartFX>b__35_0();
    /*0x1145d28*/ void <SetActionStartFX>b__36_0();
    /*0x1145de8*/ void <SetActionStartFX>b__37_0();
    /*0x1145ea8*/ void <SetActionStartFX>b__38_0();
    /*0x1145f68*/ void <SetActionStartFX>b__39_0();
}

class Passive_Chance : Passive_Base
{
    /*0xf0*/ float m_fPercentage;

    /*0x1146114*/ Passive_Chance();
    /*0x1146028*/ void InitChild();
    /*0x1146058*/ bool CheckCondition_Child();
}

class Passive_ChangeFX : Passive_Base
{
    /*0xf0*/ int m_nPrevFXID;
    /*0xf4*/ int m_nChangeFXID;

    /*0x11461b4*/ Passive_ChangeFX();
    /*0x114611c*/ void InitChild();
    /*0x1146190*/ void RemoveInitChild();
}

class Passive_Cleric_Retreat : Passive_Base
{
    /*0xf0*/ float m_fConditionAllyHPPercent;

    /*0x114646c*/ Passive_Cleric_Retreat();
    /*0x11461bc*/ void InitChild();
    /*0x11461ec*/ bool CheckCondition_Child();
}

class Passive_Cooltime : Passive_Base
{
    /*0x11441a0*/ Passive_Cooltime();
    /*0x114417c*/ void InitChild();
}

class Passive_Critical : Passive_Base
{
    /*0xf0*/ int m_nCriticalCount;
    /*0xf4*/ int m_nCurCriticalCount;

    /*0x11464e0*/ Passive_Critical();
    /*0x1146474*/ void InitChild();
    /*0x11464c0*/ bool CheckCondition_Child();
}

class Passive_DEATHSCYTHE_SIG_Death : Passive_DeathAlly
{
    /*0xfc*/ Battle.ColliderData rangeCollider;

    /*0x1146788*/ Passive_DEATHSCYTHE_SIG_Death();
    /*0x11464e8*/ void InitChild();
    /*0x1146610*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_Damaged : Passive_Base
{
    /*0xf0*/ int m_nDamagedCount;
    /*0xf4*/ int m_nCurDamagedCount;

    /*0x1146834*/ Passive_Damaged();
    /*0x1146798*/ void InitChild();
    /*0x11467f4*/ bool CheckCondition_Child(CharacterBase _attacker, float _fDamage);
}

class Passive_Damaged_Chance : Passive_Base
{
    /*0xf0*/ float m_fChancePercentage;

    /*0x114691c*/ Passive_Damaged_Chance();
    /*0x114683c*/ void InitChild();
    /*0x114687c*/ bool CheckCondition_Child(CharacterBase _attacker, float _fDamage);
}

class Passive_Death : Passive_Base
{
    /*0x1146940*/ Passive_Death();
    /*0x1146924*/ void InitChild();
}

class Passive_DeathAlly : Passive_Base
{
    /*0xf0*/ bool m_bPlayer;
    /*0xf4*/ int m_nDeathCount;
    /*0xf8*/ int m_nCurDeathCount;

    /*0x1146790*/ Passive_DeathAlly();
    /*0x114659c*/ void InitChild();
    /*0x1146948*/ bool CheckCondition_Child(CharacterBase _unit);
}

class Passive_Death_Target_Attacker : Passive_Death
{
    /*0x1146a30*/ Passive_Death_Target_Attacker();
    /*0x1146a0c*/ bool CheckCondition_Child();
}

class Passive_Free : Passive_Base
{
    /*0xf0*/ Passive_Free.FreeType m_eFreeType;

    /*0x1146b04*/ Passive_Free();
    /*0x1146a38*/ void InitChild();
    /*0x1146a8c*/ bool CheckCondition_Child();

    enum FreeType
    {
        FREE = 0,
        NOTFREE = 1,
    }
}

class Passive_HP : Passive_Base
{
    /*0xf0*/ bool m_bHPOver;
    /*0xf4*/ float m_fHPRatio;

    /*0x1146bf0*/ Passive_HP();
    /*0x1146b0c*/ void InitChild();
    /*0x1146b7c*/ bool CheckCondition_Child();
}

class Passive_HP_Change : Passive_HP
{
    /*0x1146c68*/ Passive_HP_Change();
    /*0x1146bf8*/ void InitChild();
}

class Passive_HP_EVILPET : Passive_HP
{
    /*0x1146d10*/ Passive_HP_EVILPET();
    /*0x1146c70*/ void InitChild();
    /*0x1146cb4*/ bool CheckCondition_Common();
}

class Passive_HitBuff_CC : Passive_Base
{
    /*0x1146d34*/ Passive_HitBuff_CC();
    /*0x1146d18*/ void InitChild();
}

class Passive_Kill : Passive_Base
{
    /*0x1146d58*/ Passive_Kill();
    /*0x1146d3c*/ void InitChild();
}

class Passive_LADYDEATH_UseSkill : Passive_UseSkillSlot
{
    /*0x1146d78*/ Passive_LADYDEATH_UseSkill();
    /*0x1146d60*/ bool CheckCondition_Child(int _nSlotNumber);
}

class Passive_PAJAMA_Invisible : Passive_Base
{
    /*0x1146dc8*/ Passive_PAJAMA_Invisible();
    /*0x1146d88*/ void InitChild();
    /*0x1146da4*/ bool CheckCondition_Child();
}

class Passive_RABBIT_HP : Passive_Base
{
    /*0xf0*/ float m_fHPUnderRatio;
    /*0xf4*/ float m_fHPHealRatio;

    /*0x1146f94*/ Passive_RABBIT_HP();
    /*0x1146dd0*/ void InitChild();
    /*0x1146e20*/ bool CheckCondition_Child(CharacterBase _unit, float _fValue);
}

class Passive_REDHOOD_NotFree : Passive_Free
{
    /*0xf4*/ bool m_bSignatureOn;

    /*0x1146ff8*/ Passive_REDHOOD_NotFree();
    /*0x1146f9c*/ void InitChild();
    /*0x1146fe4*/ bool CheckCondition_Child();
}

class Passive_SABRE_Launch : Passive_Base
{
    /*0x1147274*/ Passive_SABRE_Launch();
    /*0x1147000*/ void InitChild();
    /*0x114701c*/ bool CheckCondition_Child();
}

class Passive_SHAMAN_Horror : Passive_Base
{
    /*0x1147404*/ Passive_SHAMAN_Horror();
    /*0x114727c*/ void InitChild();
    /*0x1147298*/ bool CheckCondition_Child();
}

class Passive_SHP : Passive_Base
{
    /*0x1147434*/ Passive_SHP();
    /*0x114740c*/ void InitChild();
    /*0x1147428*/ bool CheckCondition_Child(float _fValue);
}

class Passive_Start : Passive_Base
{
    /*0x1147458*/ Passive_Start();
    /*0x114743c*/ void InitChild();
}

class Passive_StartSkillFX : Passive_Base
{
    /*0xf0*/ int m_nStartSkillFXID;

    /*0x114758c*/ Passive_StartSkillFX();
    /*0x11474d4*/ void InitChild();
    /*0x114757c*/ bool CheckCondition_Child(int _nValue);
}

class Passive_StartSkill : Passive_Base
{
    /*0xf0*/ int m_nSkillUseCount;
    /*0xf4*/ int m_nCurSkillUseCount;

    /*0x11474cc*/ Passive_StartSkill();
    /*0x1147460*/ void InitChild();
    /*0x11474ac*/ bool CheckCondition_Child();
}

class Passive_UseSkillSlot : Passive_Base
{
    /*0xf0*/ int m_nSlotNumber;
    /*0xf4*/ int m_nSkillUseCount;
    /*0xf8*/ int m_nCurSkillUseCount;

    /*0x1146d80*/ Passive_UseSkillSlot();
    /*0x1147594*/ void InitChild();
    /*0x11475fc*/ bool CheckCondition_Child(int _nSlotNumber);
}

struct SkillFXTrigger
{
    /*0x10*/ Battle.ColliderData SightCollider;
    /*0x1c*/ Battle.AttackType AttackType;
    /*0x20*/ ObjectBase Owner;
    /*0x28*/ CharacterBase Character;
    /*0x30*/ int SkillID;
    /*0x34*/ int SkillLV;
    /*0x38*/ bool IsPlayer;
    /*0x40*/ System.Collections.Generic.List<SkillFX_Base> m_lisSkillFX;
    /*0x48*/ System.Collections.Generic.Dictionary<int, SkillFX_Base> m_dicSkillFX;
    /*0x50*/ string <HitEffectName>k__BackingField;
    /*0x58*/ bool <UseHitEffect>k__BackingField;
    /*0x5c*/ int <SkillSlot>k__BackingField;
    /*0x60*/ bool <IsPassive>k__BackingField;
    /*0x61*/ bool <Initialized>k__BackingField;

    /*0xaa2f74*/ SkillFXTrigger(ObjectBase _owner, int _nSkillID, int _nSkillLV, Battle.AttackType _eAttackType, ref Battle.ColliderData _sightCollider, SkillFXTrigger.SkillTriggerType _eTriggerType, string _sHitEffectName, int[] _arrSkillFXID);
    /*0xaa2f84*/ SkillFXTrigger(ObjectBase _owner, int _nArtifactID, string _sHitEffectName, float[] _arrParams);
    /*0xaa2e7c*/ string get_HitEffectName();
    /*0xaa2e84*/ void set_HitEffectName(string value);
    /*0xaa2e8c*/ bool get_UseHitEffect();
    /*0xaa2e94*/ void set_UseHitEffect(bool value);
    /*0xaa2ea0*/ int get_SkillSlot();
    /*0xaa2ea8*/ void set_SkillSlot(int value);
    /*0xaa2eb0*/ bool get_IsPassive();
    /*0xaa2eb8*/ void set_IsPassive(bool value);
    /*0xaa2ec4*/ bool get_Initialized();
    /*0xaa2ecc*/ void set_Initialized(bool value);
    /*0xaa2ed8*/ float get_DamageMULT();
    /*0xaa2f04*/ float get_DamageMULT_Critical();
    /*0xaa2f0c*/ Battle.TargetType1 get_GetBaseTargetType1();
    /*0xaa2f14*/ Battle.TargetType2 get_GetBaseTargetType2();
    /*0xaa2f1c*/ Battle.TargetType3 get_GetBaseTargetType3();
    /*0xaa2f24*/ int get_GetSkillFXCount();
    /*0xaa2f8c*/ bool StartFX(int _nSkillFXID);
    /*0xaa2f94*/ bool StartFX(int _nSkillFXID, SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0xaa2f9c*/ void StartFXAll();
    /*0xaa2fa4*/ void StartFXAll(SkillFX_Base.SkillFX_Param[] _params);
    /*0xaa2fac*/ void SetParams(SkillFX_Base.SkillFX_Param[] _params);
    /*0xaa2fb4*/ void AddSkillFX(int _nSkillFXID, int _nSkillLV);
    /*0xaa2fbc*/ void RemoveSkillFX(SkillFX_Base _skillFX, bool _bCallRemoveInit);
    /*0xaa2fc8*/ void RemoveSkillFXAll(bool _bForceRemoveInit);
    /*0xaa2fd4*/ void HandleRemoveSkillFXAll();
    /*0xaa2fdc*/ SkillFX_Base GetSkillFXClass(int _nSkillFXID, int _nSkillLV);
    /*0xaa2fe0*/ float GetStat(Battle.CharacterStat.StatType _eStatType);
    /*0xaa2ffc*/ bool CheckSkillCritical();
    /*0xaa3004*/ void SetHitEffectName(string _sEffectName);

    enum SkillTriggerType
    {
        NONE = 0,
        SKILL = 1,
        PROJECTILE = 2,
        ARTIFACT = 3,
        SIGNATURE = 4,
    }
}

class SkillFX_AddMP : SkillFX_Attack
{
    /*0x164*/ int m_nAddMP;

    /*0x1515224*/ SkillFX_AddMP();
    /*0x1516a7c*/ void InitChild();
    /*0x1516ab8*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_AKIMBO_0_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nFindSkillFXID;
    /*0x168*/ float m_fAddDamageRatio;
    /*0x16c*/ bool m_bMagnum;
    /*0x170*/ TableData.TableData_Skillfx m_SkillFXData;

    /*0x1515010*/ SkillFX_AKIMBO_0_FX1();
    /*0x151539c*/ void InitChild();
    /*0x15155b0*/ void StartFXChild();
    /*0x15156ec*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x1515b14*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_AKIMBO_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageRatio;
    /*0x168*/ bool m_bMagnum;
    /*0x16c*/ int m_nTargetIndex;
    /*0x170*/ bool m_bTargetSelect;

    /*0x1515014*/ SkillFX_AKIMBO_1_FX1();
    /*0x1515c98*/ void InitChild();
    /*0x1515cb8*/ void StartFXChild();
    /*0x1515da8*/ bool FindTarget(CharacterBase _except);
    /*0x1516138*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x15161b8*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_AKIMBO_1_FX2 : SkillFX_Base
{
    /*0x1515018*/ SkillFX_AKIMBO_1_FX2();
    /*0x15161c8*/ void StartFXChild();
}

class SkillFX_AKIMBO_SIG_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_SIG_MagnumBuffID;
    /*0x168*/ int m_SIG_AddBuffCount;

    /*0x1515078*/ SkillFX_AKIMBO_SIG_FX1();
    /*0x15163d0*/ void CheckBuff(int _nAddBuffID, bool _bUseMPPay);
}

class SkillFX_AddHP_Ratio : SkillFX_Attack
{
    /*0x164*/ float m_fAddHPRatio;

    /*0x1515228*/ SkillFX_AddHP_Ratio();
    /*0x15168cc*/ void InitChild();
    /*0x15168ec*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
    /*0x1516994*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Attack : SkillFX_Base
{
    /*0x1515090*/ SkillFX_Attack();
    /*0x151569c*/ void StartFXChild();
    /*0x1516ad4*/ void CheckAttack();
    /*0x1516b94*/ void OnKills();
}

class SkillFX_Attack_AddMP : SkillFX_Attack
{
    /*0x164*/ int m_nAddMP;

    /*0x15150f0*/ SkillFX_Attack_AddMP();
    /*0x1516b98*/ void InitChild();
    /*0x1516c1c*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_Attack_BuffExit : SkillFX_Attack
{
    /*0x164*/ int m_nRefBuffID;
    /*0x168*/ bool m_bBuffExit;

    /*0x15150f4*/ SkillFX_Attack_BuffExit();
    /*0x1516db8*/ void InitChild();
    /*0x1516f14*/ void StartFXChild();
    /*0x1516f70*/ void HandleBuffExit(int _nBuffID, bool _b);
    /*0x1516fb8*/ void ExitFXChild();
}

class SkillFX_Attack_BuffExit_Force : SkillFX_Attack_BuffExit
{
    /*0x15150f8*/ SkillFX_Attack_BuffExit_Force();
    /*0x1517084*/ void HandleBuffExit(int _nBuffID, bool _bForceRemove);
}

class SkillFX_BABA_3_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fCurTime;
    /*0x168*/ float m_fTimeTick;
    /*0x16c*/ float m_fAddATK;
    /*0x170*/ float m_fAddATK_Under50;
    /*0x174*/ float m_fDecreaseSPD;
    /*0x178*/ float m_fCurAddATK;
    /*0x17c*/ float m_fCurDecreaseSPD;
    /*0x180*/ float m_fDrainHPRatio;
    /*0x184*/ int m_nDotHealBuffID;
    /*0x188*/ int m_nMaxCount;
    /*0x18c*/ int m_nCurAddCount;
    /*0x190*/ Battle.CharacterStat m_AddStat;

    /*0x1514f2c*/ SkillFX_BABA_3_FX1();
    /*0x15170d4*/ void InitChild();
    /*0x1517334*/ void HandleCheckCondition();
    /*0x1517524*/ void HandleCheckKills(CharacterBase _target);
    /*0x1517688*/ void ExitFXChild();
}

class SkillFX_BLACKSMITH_1_FX1 : SkillFX_Attack
{
    /*0x164*/ Battle.ColliderData m_EffectCollider;
    /*0x170*/ float m_fDamagePercent;
    /*0x174*/ Battle.StatTransfer m_StatTransferTmp;
    /*0x1a8*/ System.Collections.Generic.List<CharacterBase> m_lisEffectTarget;

    /*0x1514f24*/ SkillFX_BLACKSMITH_1_FX1();
    /*0x15177fc*/ void InitChild();
    /*0x1517870*/ void GiveDamageToTarget(CharacterBase _target);
}

class SkillFX_BLACKSMITH_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ int m_nNeedBuffCount;
    /*0x16c*/ int m_nAddBuffID;

    /*0x1514f28*/ SkillFX_BLACKSMITH_2_FX1();
    /*0x1517b14*/ void InitChild();
    /*0x1517b88*/ void CheckBuff();
}

class SkillFX_BROWNPONY_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fHealPercentage;

    /*0x1514eb8*/ SkillFX_BROWNPONY_3_FX1();
    /*0x1517dbc*/ void InitChild();
    /*0x1517f60*/ void HandleCheckCondition(CharacterBase _target, int _nSkillFXID, float _fDamage);
    /*0x1518254*/ void ExitFXChild();
}

class SkillFX_BULLYGIRL_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fEffectLevel;
    /*0x168*/ float m_fDrainMPRatio;

    /*0x1514ec0*/ SkillFX_BULLYGIRL_3_FX1();
    /*0x1518380*/ void CheckAttack();
}

class SkillFX_BULLYGIRL_4_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fHPRatioTarget;
    /*0x168*/ float m_fDEFRatio;
    /*0x16c*/ float m_fATKRatio;
    /*0x170*/ Battle.CharacterStat AddStat;
    /*0x178*/ float m_fPrevHPRatio;
    /*0x17c*/ float m_fCurHPRatio;
    /*0x180*/ int m_nCurCount;

    /*0x1514ec4*/ SkillFX_BULLYGIRL_4_FX1();
    /*0x151859c*/ void InitChild();
    /*0x15186e4*/ void CheckCondition();
    /*0x15188ec*/ void ExitFXChild();
}

class SkillFX_Base
{
    static /*0x0*/ bool IsTick;
    /*0x10*/ int <ID>k__BackingField;
    /*0x14*/ int <SkillLV_Table>k__BackingField;
    /*0x18*/ TableData.TableData_Skillfx SkillFXData;
    /*0x20*/ bool <IsCritical>k__BackingField;
    /*0x21*/ bool <IsStart>k__BackingField;
    /*0x22*/ bool <IsIgnoreRemoveInit>k__BackingField;
    /*0x28*/ long <UniqueNumber>k__BackingField;
    /*0x30*/ InGameController m_InGameController;
    /*0x38*/ ObjectBase m_Owner;
    /*0x40*/ CharacterBase m_Target;
    /*0x48*/ System.Collections.Generic.List<CharacterBase> m_lisTarget;
    /*0x50*/ System.Collections.Generic.List<CharacterBase> m_lisCollisionTarget;
    /*0x58*/ SkillFXTrigger m_SkillFXTrigger;
    /*0xb0*/ Battle.StatTransfer m_StatTransfer;
    /*0xe0*/ Battle.ColliderData m_RangeCollider;
    /*0xec*/ Battle.TargetType1 m_TargetType1;
    /*0xf0*/ Battle.TargetType2 m_TargetType2;
    /*0xf4*/ Battle.TargetType3 m_TargetType3;
    /*0xf8*/ Battle.RangePositionType m_RangePOSType;
    /*0xfc*/ Battle.RangeDirectionType m_RangeDIRType;
    /*0x100*/ Battle.CharacterStat.StatType m_COEFType;
    /*0x104*/ Battle.SkillFXType m_SkillFXType;
    /*0x108*/ Battle.Hit_WpnType m_eHitWeaponType;
    /*0x10c*/ Battle.AttackType m_eAttackType;
    /*0x110*/ Battle.BuffConditionType m_BuffConditionType;
    /*0x114*/ Battle.BuffTargetType m_BuffTargetType;
    /*0x118*/ Battle.DamageResult m_damageResult;
    /*0x120*/ Battle.DamageResult m_damageResult_Origin;
    /*0x128*/ System.Action<System.ValueTuple<CharacterBase, float>> OnDamageWithTarget;
    /*0x130*/ System.Collections.Generic.List<CharacterBase> m_lisExceptCollision;
    /*0x138*/ int m_nMaxCollisionCount;
    /*0x13c*/ bool m_bPlayer;
    /*0x140*/ UnityEngine.Vector2 m_vStartPOS;
    /*0x148*/ bool m_bSetStartPOS;
    /*0x149*/ bool m_bCheckCollisionCharm;
    /*0x14a*/ bool m_bCollisionUnitExcept;
    /*0x14b*/ bool m_bSetCollisionList;
    /*0x150*/ SkillFX_Base.SkillFX_Param[] m_arrParams;
    /*0x158*/ bool m_bMPPayWithAddBuff;
    /*0x15c*/ float m_fMPPay;
    /*0x160*/ int m_nAddBuffCount;

    static /*0x151a404*/ SkillFX_Base();
    /*0x151522c*/ SkillFX_Base();
    /*0x15189b4*/ int get_ID();
    /*0x15189bc*/ void set_ID(int value);
    /*0x15189c4*/ int get_SkillBaseID();
    /*0x15189cc*/ int get_SkillLV_Table();
    /*0x15189d4*/ void set_SkillLV_Table(int value);
    /*0x15189dc*/ int get_SkillLV_Trigger();
    /*0x15189e4*/ Battle.TargetType1 get_GetTargetType1();
    /*0x15189ec*/ Battle.TargetType2 get_GetTargetType2();
    /*0x15189f4*/ Battle.TargetType3 get_GetTargetType3();
    /*0x1516078*/ bool get_IsPlayer();
    /*0x15189fc*/ bool get_IsCritical();
    /*0x1518a04*/ void set_IsCritical(bool value);
    /*0x1518a10*/ bool get_IsProjectile();
    /*0x1518a30*/ bool get_IsPassive();
    /*0x1518a38*/ bool get_IsStart();
    /*0x1518a40*/ void set_IsStart(bool value);
    /*0x1518a4c*/ UnityEngine.Vector2 get_GetStartPOS();
    /*0x1518a58*/ bool get_IsSetStartPOS();
    /*0x1518a60*/ Battle.ColliderData get_GetRangeCollider();
    /*0x1518a70*/ bool get_IsIgnoreRemoveInit();
    /*0x1518a78*/ void set_IsIgnoreRemoveInit(bool value);
    /*0x1518a84*/ long get_UniqueNumber();
    /*0x1518a8c*/ void set_UniqueNumber(long value);
    /*0x1516b8c*/ bool get_IsKilled();
    /*0x1515598*/ CharacterBase get_m_Character();
    /*0x1518a94*/ int get_BuffID();
    /*0x1518ab0*/ float get_DamageMult();
    /*0x1518adc*/ float get_DamageMult_Critical();
    /*0x15163c0*/ Battle.ColliderData get_m_SightCollider();
    /*0x15148ac*/ bool Init(int _nID, int _nSkillLV, SkillFXTrigger _skillFXTrigger);
    /*0x1518ae4*/ void InitEvents();
    /*0x1515524*/ void InitChild();
    /*0x151298c*/ void StartFX();
    /*0x1518aec*/ void StartFX(SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0x15163b0*/ void StartFXChild();
    /*0x1514be0*/ void RemoveInitFX();
    /*0x1518c40*/ void ExitFX();
    /*0x1512b10*/ void SetParams(SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0x1518cac*/ void ExitFXChild();
    /*0x1515f08*/ bool FindTarget(CharacterBase _except);
    /*0x1518cb0*/ bool FindTarget(System.Collections.Generic.List<CharacterBase> _exceptList);
    /*0x1516080*/ void SetTarget(CharacterBase _target);
    /*0x1518d64*/ bool CheckAttackCollision();
    /*0x15193d8*/ System.Collections.Generic.List<CharacterBase> GetUnitListWithMaxCollisionUnitCount(System.Collections.Generic.List<CharacterBase> _list);
    /*0x1518ff8*/ System.Collections.Generic.List<CharacterBase> GetUnitListWithMaxCollisionUnitCount(System.Collections.Generic.List<CharacterBase> _list, UnityEngine.Vector2 _vCenter);
    /*0x1519414*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
    /*0x1519510*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x15195cc*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x151971c*/ void KnockBackProcess(CharacterBase _target, float _fKnockBackDistance);
    /*0x1516c60*/ void CalcDamage(CharacterBase _target);
    /*0x1517a88*/ void GiveDamageToTarget(CharacterBase _target);
    /*0x15197f4*/ void InvokeEventsBeforeCalcDamage(CharacterBase _target);
    /*0x151988c*/ void InvokeEventsAfterCalcDamage(CharacterBase _target);
    /*0x151576c*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x15199e8*/ void RecieveAddDamage(CharacterBase _target, ref Battle.StatTransfer _stat);
    /*0x1519b58*/ float GetAddDamageMultRatio(CharacterBase _target);
    /*0x1517d7c*/ void CheckBuff();
    /*0x1516584*/ void CheckBuff(int _nAddBuffID, bool _bUseMPPay);
    /*0x1519b60*/ bool CheckBuffAddible(CharacterBase _target, int _nAddBuffID, System.Nullable<float> _fParameter);
    /*0x1517d68*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float[] _arrParams);
    /*0x1515b24*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
    /*0x1517654*/ void AddBuffToOwner(CharacterBase _caster, int _nBuffID, float[] _arrParams);
    /*0x1519ca4*/ bool CheckSignatureEnable(int _nSignatureLV);
    /*0x1519cc8*/ TableData.TableData_Skillextra GetSignatureData(int _nSignatureLV, Battle.SkillExtraID _eExtraID);
    /*0x1519cec*/ void SetCollisionUnitExcept(bool _bSet);
    /*0x1519cf8*/ void ClearCollisionUnitExcept();
    /*0x1519d54*/ SkillFX_Base.SkillFX_ParamsType GetParamsType();
    /*0x1519d8c*/ Battle.StatTransfer GetStatTransfer();
    /*0x15180dc*/ Battle.StatTransfer GetStarTransferWithDamage(Battle.AttackType _eAttackType, float _fDamage);
    /*0x1519dd8*/ Battle.StatTransfer GetStatTransferWithCOEF(Battle.AttackType _eAttackType, float _fCOEFNum);
    /*0x1519e6c*/ Battle.StatTransfer GetStatTransferWithCOEF(Battle.CharacterStat.StatType _eStatType, Battle.AttackType _eAttackType, float _fCOEFNum);
    /*0x1515aa0*/ Battle.StatTransfer GetStatTransferWithCOEF(float _fCOEFNum);
    /*0x1519f18*/ Battle.StatTransfer GetStatTransferWithCOEF(Battle.CharacterStat.StatType _eStatType, float _fCOEFNum);
    /*0x1519f70*/ float GetCOEF();
    /*0x1519e30*/ float GetCOEF(float _fCOEFNum);
    /*0x1519fb4*/ float GetCOEF(Battle.CharacterStat.StatType _eStatType);
    /*0x1519ee4*/ float GetCOEF(Battle.CharacterStat.StatType _eStatType, float _fCOEFNum);
    /*0x1519ff4*/ void SetFXStartPOS(CharacterBase _target);
    /*0x151a03c*/ void SetFXStartPOS(UnityEngine.Vector2 _vOffset);
    /*0x151a090*/ void SetFXStartPOS();
    /*0x1518c7c*/ void ClearFXStartPOS();
    /*0x151a0cc*/ UnityEngine.Vector2 GetFXStartPOS();
    /*0x151a100*/ UnityEngine.Vector2 CalcFXStartPOS();
    /*0x1515528*/ void DeepCopySkillFXData();
    /*0x151a338*/ void SetCheckCollisionCharm(bool _bCheck);
    /*0x151a344*/ void SetAttackType(Battle.AttackType _eAttackType);
    /*0x151a34c*/ void AddReference();
    /*0x151a3e0*/ void RemoveReference();

    enum SkillFX_ParamsType
    {
        NONE = 0,
        EXCEPT_UNIT = 1,
    }

    struct SkillFX_Param
    {
        /*0x10*/ SkillFX_Base.SkillFX_ParamsType type;
        /*0x18*/ CharacterBase unit;
        /*0x20*/ float value;

        /*0xa82644*/ SkillFX_Param(SkillFX_Base.SkillFX_ParamsType _eType, CharacterBase _unit, float _fValue);
    }

    class <>c
    {
        static /*0x0*/ SkillFX_Base.<> <>9;
        static /*0x8*/ System.Func<System.ValueTuple<int, float>, float> <>9__111_0;

        static /*0xcc0178*/ <>c();
        /*0xcc01d8*/ <>c();
        /*0xcc01e0*/ float <GetUnitListWithMaxCollisionUnitCount>b__111_0(System.ValueTuple<int, float> x);
    }
}

class SkillFX_Buff : SkillFX_Base
{
    /*0x15150fc*/ SkillFX_Buff();
    /*0x151a408*/ void StartFXChild();
}

class SkillFX_Buff_BuffExit : SkillFX_Buff
{
    /*0x164*/ int m_nRefBuffID;

    /*0x151515c*/ SkillFX_Buff_BuffExit();
    /*0x151a444*/ void InitChild();
    /*0x151a59c*/ void HandleBuffExit(int _nBuffID, bool _b);
    /*0x151a5c4*/ void ExitFXChild();
}

class SkillFX_Buff_MultiCount : SkillFX_Buff
{
    /*0x1515160*/ SkillFX_Buff_MultiCount();
    /*0x151a690*/ void InitChild();
}

class SkillFX_CARROT_1_FX2 : SkillFX_Attack
{
    /*0x164*/ float m_fPerEnemySPPercentage;
    /*0x168*/ float m_fAddDamagePercentage;

    /*0x1514ebc*/ SkillFX_CARROT_1_FX2();
    /*0x151a714*/ void InitChild();
    /*0x151a73c*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_CLERIC_1_FX1 : SkillFX_Tick_Cure
{
    /*0x151507c*/ SkillFX_CLERIC_1_FX1();
    /*0x151a78c*/ void StartFXChild();
    /*0x151a7c0*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_CLERIC_2_FX1 : SkillFX_Attack
{
    /*0x1515084*/ SkillFX_CLERIC_2_FX1();
    /*0x151a958*/ void StartFXChild();
    /*0x151ab94*/ void HandleCheckSkillExit();
    /*0x151acd4*/ void <HandleCheckSkillExit>b__1_0();
}

class SkillFX_CLERIC_3_FX1 : SkillFX_Tick_Follow
{
    /*0x1515088*/ SkillFX_CLERIC_3_FX1();
    /*0x151ad08*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_COOK_1_FX1 : SkillFX_Heal
{
    /*0x164*/ float m_fHealAmount;
    /*0x168*/ int m_nBuffID;
    /*0x16c*/ int m_nBuffCount;
    /*0x170*/ float m_SIG_AddHealPercent;
    /*0x174*/ int m_SIG_AddBuffID;
    /*0x178*/ int m_SIG_RemoveDebuffCount;
    /*0x17c*/ int m_SIG_RemoveDebuffUnitNumMax;

    /*0x1514ffc*/ SkillFX_COOK_1_FX1();
    /*0x151adfc*/ void InitChild();
    /*0x151b23c*/ bool CheckAttackCollision();
    /*0x151b514*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x151b738*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_COOK_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_SIG_RemoveDebuffCount;
    /*0x168*/ int m_SIG_CurrentCureCount;
    /*0x16c*/ int m_SIG_RemoveDebuffUnitNumMax;

    /*0x1515004*/ SkillFX_COOK_2_FX1();
    /*0x151b788*/ void InitChild();
    /*0x151b9ec*/ void StartFXChild();
    /*0x151ba40*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_COOK_3_FX1 : SkillFX_Heal
{
    /*0x164*/ float m_SIG_AddHealPercent;
    /*0x168*/ int m_SIG_AddBuffID;
    /*0x16c*/ int m_SIG_RemoveDebuffCount;

    /*0x1515008*/ SkillFX_COOK_3_FX1();
    /*0x151bab8*/ void InitChild();
    /*0x151bdd8*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x151bff0*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_CRUSADER_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamage;

    /*0x1514f94*/ SkillFX_CRUSADER_1_FX1();
    /*0x151c040*/ void InitChild();
    /*0x151c060*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_CRUSADER_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_SIG_AddBuffID;

    /*0x1514f98*/ SkillFX_CRUSADER_2_FX1();
    /*0x151c0c4*/ void InitChild();
    /*0x151c158*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_CRUSADER_4_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fHealAmount;
    /*0x168*/ bool m_SIG_IgnoreRemoveRevengeBuff;

    /*0x1514f9c*/ SkillFX_CRUSADER_4_FX1();
    /*0x151c1d8*/ void InitChild();
    /*0x151c424*/ void HandleHit(bool _b);
    /*0x151c554*/ void HandleKillUnit(CharacterBase _killUnit);
}

class SkillFX_ChangeBuff : SkillFX_Base
{
    /*0x164*/ int m_nPrevBuffID;
    /*0x168*/ int m_nPostBuffID;

    /*0x1515164*/ SkillFX_ChangeBuff();
    /*0x151c680*/ void InitChild();
    /*0x151c6d8*/ void StartFXChild();
    /*0x151c724*/ void ExitFXChild();
}

class SkillFX_ChangeBuff_3Prev1Post : SkillFX_Base
{
    /*0x164*/ int m_nPrevBuffID_1;
    /*0x168*/ int m_nPrevBuffID_2;
    /*0x16c*/ int m_nPrevBuffID_3;
    /*0x170*/ int m_nPostBuffID;

    /*0x15151c4*/ SkillFX_ChangeBuff_3Prev1Post();
    /*0x151c750*/ void InitChild();
    /*0x151c7e0*/ void StartFXChild();
    /*0x151c86c*/ void ExitFXChild();
}

class SkillFX_ChangeSkillFX : SkillFX_Base
{
    /*0x164*/ int m_nPrevSkillFXID;
    /*0x168*/ int m_nChangeSkillFXID;

    /*0x1441e18*/ SkillFX_ChangeSkillFX();
    /*0x1441cc4*/ void InitChild();
    /*0x1441d6c*/ void StartFX(SkillFX_Base.SkillFX_Param[] _arrParams);
    /*0x1441dc4*/ void ExitFXChild();
}

class SkillFX_Cure : SkillFX_Attack
{
    /*0x1441f44*/ SkillFX_Cure();
    /*0x1441e7c*/ void InitChild();
    /*0x1441ea4*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Cure_BuffExit : SkillFX_Cure
{
    /*0x164*/ int m_nRefBuffID;

    /*0x1442198*/ SkillFX_Cure_BuffExit();
    /*0x1441f4c*/ void InitChild();
    /*0x14420ac*/ void HandleBuffExit(int _nBuffID, bool _b);
    /*0x14420c4*/ void ExitFXChild();
}

class SkillFX_Cure_CC : SkillFX_Cure
{
    /*0x164*/ bool m_bBreeze;
    /*0x168*/ int m_nRemoveCount;

    /*0x1442458*/ SkillFX_Cure_CC();
    /*0x14421a0*/ void InitChild();
    /*0x1442254*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_DARKELF_SIG : SkillFX_Base
{
    /*0x164*/ float m_fAbsorbTime;
    /*0x168*/ float m_fCurAbosrbTime;
    /*0x16c*/ float m_fTotalAbsorb;
    /*0x170*/ float m_fHealRatio;
    /*0x174*/ float m_fDamageRatio;
    /*0x178*/ float m_fEmergencyCooltime;
    /*0x17c*/ float m_fCurEmergencyCooltime;

    /*0x1442a64*/ SkillFX_DARKELF_SIG();
    /*0x1442460*/ void InitChild();
    /*0x14426b8*/ void HandleCheckAbsorbTime();
    /*0x14429ec*/ void HandleChangeHP(float _fAddHP);
    /*0x1442784*/ void PainRealse();
}

class SkillFX_DARKTEMPLAR_1_FX1 : SkillFX_Attack
{
    /*0x1442c18*/ SkillFX_DARKTEMPLAR_1_FX1();
    /*0x1442ad0*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_DARKTEMPLAR_3_FX1 : SkillFX_Attack
{
    /*0x1442de4*/ SkillFX_DARKTEMPLAR_3_FX1();
    /*0x1442c20*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_DEATHSCYTHE_2_FX1 : SkillFX_Tick_Follow
{
    /*0x178*/ float m_fRemoveBuffPercentage;
    /*0x17c*/ float m_sig_0_HealRatio;
    /*0x180*/ float m_sig_10_AddDamage;
    /*0x184*/ int m_sig_10_BuffID;
    /*0x188*/ int m_sig_20_BuffID;

    /*0x14436dc*/ SkillFX_DEATHSCYTHE_2_FX1();
    /*0x1442dec*/ void InitChild();
    /*0x1442f18*/ void StartFXChild();
    /*0x1443070*/ void ExitFXChild();
    /*0x14431f4*/ void CalcDamage(CharacterBase _target);
    /*0x1443368*/ void CheckBuff();
    /*0x14434ec*/ Battle.StatTransfer GetStatTransfer();
    /*0x144355c*/ void TickEffect();
}

class SkillFX_DUALCROSS_1_FX2 : SkillFX_Attack
{
    /*0x164*/ float m_SIG_AddCritical;
    /*0x168*/ float m_SIG_AddACC;
    /*0x16c*/ int m_SIG_AddBuffID;

    /*0x144398c*/ SkillFX_DUALCROSS_1_FX2();
    /*0x1443740*/ int get_BuffID();
    /*0x1443748*/ void InitChild();
    /*0x14438b0*/ Battle.StatTransfer GetStatTransfer();
}

class SkillFX_DUALCROSS_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddHPRatio;

    /*0x1443a44*/ SkillFX_DUALCROSS_3_FX1();
    /*0x1443994*/ void InitChild();
    /*0x14439cc*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_DUALCROSS_4_FX1 : SkillFX_Base
{
    /*0x164*/ float m_fBuffCheckDuration;
    /*0x168*/ float m_fCurTime;

    /*0x1444094*/ SkillFX_DUALCROSS_4_FX1();
    /*0x1443a4c*/ void InitChild();
    /*0x1443a6c*/ void StartFXChild();
    /*0x1443c9c*/ void ExitFXChild();
    /*0x1443d74*/ void HandleCheckTime();
    /*0x1443fc4*/ void HandleCheckAttackTarget(CharacterBase _hitCharacter, int _n, bool _b);
}

class SkillFX_EVILPET_1_FX1 : SkillFX_Attack
{
    /*0x168*/ System.Collections.Generic.List<UnityEngine.Vector2> m_lisNiddlePOS;
    /*0x170*/ UnityEngine.Vector2 m_vCurrentNiddlePOS;
    /*0x178*/ System.Collections.Generic.List<SkillFX_EVILPET_1_FX1.NiddleInfo> m_lisNiddleInfo;
    /*0x180*/ bool m_bCheckNiddleDelay;
    /*0x184*/ float m_fCurDelay;

    /*0x1444ba0*/ SkillFX_EVILPET_1_FX1();
    /*0x14440f8*/ void InitChild();
    /*0x1444350*/ void StartFXChild();
    /*0x144473c*/ void HandleCheckNiddleDelay();
    /*0x14449c0*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x1444b08*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();

    class NiddleInfo
    {
        /*0x10*/ UnityEngine.Vector2 position;
        /*0x18*/ System.Action completeAction;

        /*0xcc036c*/ NiddleInfo();
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ ParticleBase niddle;
        /*0x18*/ UnityEngine.Vector2 pos;
        /*0x20*/ SkillFX_EVILPET_1_FX1 <>4__this;
        /*0x28*/ System.Action <>9__2;

        /*0xcc01fc*/ <>c__DisplayClass6_0();
        /*0xcc0204*/ void <StartFXChild>b__0();
        /*0xcc0374*/ void <StartFXChild>b__2();
    }

    class <>c__DisplayClass6_1
    {
        /*0x10*/ SkillFX_EVILPET_1_FX1.NiddleInfo info;
        /*0x18*/ SkillFX_EVILPET_1_FX1.<> CS$<>8__locals1;

        /*0xcc0364*/ <>c__DisplayClass6_1();
        /*0xcc03a4*/ void <StartFXChild>b__1();
    }
}

class SkillFX_EVILPET_2_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fNearCOEF;
    /*0x168*/ int m_nAddBuffID_Kill;
    /*0x16c*/ float m_fFallPercentage;
    /*0x170*/ int m_nAddBuffID_Fall;
    /*0x174*/ bool m_bAttackNear;

    /*0x1445254*/ SkillFX_EVILPET_2_FX1();
    /*0x1444c58*/ void InitChild();
    /*0x1444cd8*/ void StartFXChild();
    /*0x1444fd0*/ void CheckBuff();
    /*0x144500c*/ bool CheckBuffAddible(CharacterBase _target, int _nAddBuffID, System.Nullable<float> _fParameter);
    /*0x14450d0*/ float GetCOEF();
    /*0x1445124*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
}

class SkillFX_EVILPET_4_FX1 : SkillFX_Attack
{
    /*0x144533c*/ SkillFX_EVILPET_4_FX1();
    /*0x144525c*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_FIANCE_3_FX1 : SkillFX_Buff
{
    /*0x14457bc*/ SkillFX_FIANCE_3_FX1();
    /*0x1445344*/ void CheckBuff();
}

class SkillFX_FLORA_1_FX1 : SkillFX_Tick
{
    /*0x178*/ float m_fAttackDelay;
    /*0x17c*/ float m_fCurDelay;

    /*0x1445da8*/ SkillFX_FLORA_1_FX1();
    /*0x14457c4*/ void InitChild();
    /*0x1445848*/ void StartFXChild();
    /*0x1445af4*/ void CheckTickDelay();
    /*0x1445b94*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
    /*0x1445c9c*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_FLORA_2_FX1 : SkillFX_Tick
{
    /*0x178*/ float m_fFallAttackCOEF;

    /*0x1446380*/ SkillFX_FLORA_2_FX1();
    /*0x1445e6c*/ void InitChild();
    /*0x1445ea0*/ void ExitFXChild();
    /*0x144600c*/ void TickEffect();
    /*0x14461e8*/ void HandleCheckFall(CharacterBase _target);
}

class SkillFX_FLOWER_1_FX1 : SkillFX_Tick
{
    /*0x178*/ float m_fCustomCOEF;
    /*0x17c*/ float m_fOriginCOEF;
    /*0x180*/ bool m_bCustomCOEF;
    /*0x184*/ float m_fFlowerOffsetPosX;

    /*0x14465e4*/ SkillFX_FLOWER_1_FX1();
    /*0x14463e0*/ void InitChild();
    /*0x144642c*/ void StartFXChild();
    /*0x1446550*/ void ExitFXChild();
    /*0x144659c*/ float GetCOEF();
}

class SkillFX_FOXY_4_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nAlterBuffID;
    /*0x168*/ int m_nProvokeBuffID;
    /*0x16c*/ float m_fAddHPRatio;
    /*0x170*/ CharacterBase m_Alter;
    /*0x178*/ int m_SIG_Buff_Alter;
    /*0x17c*/ int m_SIG_Buff1_Caster;
    /*0x180*/ int m_SIG_Buff2_Caster;

    /*0x144772c*/ SkillFX_FOXY_4_FX1();
    /*0x1446644*/ void InitChild();
    /*0x144677c*/ void StartFXChild();
    /*0x1447430*/ void ExitFXChild();
    /*0x1447544*/ void HandleCheckHit(CharacterBase _attacker);
    /*0x1447724*/ void HandlerAlterdeath();
}

class SkillFX_GAMBLER_4_FX1 : SkillFX_Base
{
    /*0x168*/ int[] m_arrRandombuffID;
    /*0x170*/ int m_nBuffID_Clover;

    /*0x1447ec8*/ SkillFX_GAMBLER_4_FX1();
    /*0x1447790*/ void InitChild();
    /*0x1447a2c*/ void HandleCheckCondition(CharacterBase _target, int _nSkillFXID, bool _b);
    /*0x1447c2c*/ void HandleActivateCardEffect(CharacterBase _target);
    /*0x1447d00*/ void ExitFXChild();
}

class SkillFX_GDRAGON_1_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ int m_nCheckBuffCount;
    /*0x16c*/ float m_fAddDamageRatio;
    /*0x170*/ int m_nBuffCount;

    /*0x14480b8*/ SkillFX_GDRAGON_1_FX1();
    /*0x1447f50*/ void InitChild();
    /*0x1447fc8*/ float GetAddDamageMultRatio(CharacterBase _target);
    /*0x1448014*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_GDRAGON_2_FX2 : SkillFX_Buff
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ int m_nAddBuffID_Default;
    /*0x16c*/ int m_nAddBuffID_Change;

    /*0x144819c*/ SkillFX_GDRAGON_2_FX2();
    /*0x14480c0*/ void InitChild();
    /*0x1448138*/ void CheckBuff();
}

class SkillFX_GDRAGON_3_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckRage;
    /*0x168*/ int m_nAddBuffID_Default;
    /*0x16c*/ int m_nAddBuffID_Change;

    /*0x1448290*/ SkillFX_GDRAGON_3_FX1();
    /*0x14481a4*/ void InitChild();
    /*0x144821c*/ void CheckBuff();
}

class SkillFX_GDRAGON_4_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nBuffID_Tear;
    /*0x168*/ int m_nBuffID_Rage;
    /*0x16c*/ int m_nAddBuffCount_Critical;
    /*0x170*/ int m_nAddBuffCount_CC;
    /*0x174*/ int m_nAddBuffCondition_Rage;
    /*0x178*/ int m_nCurBuffCount;
    /*0x17c*/ bool m_bRageBuffOn;

    /*0x1448e64*/ SkillFX_GDRAGON_4_FX1();
    /*0x1448298*/ void InitChild();
    /*0x1448718*/ void ExitFXChild();
    /*0x14489a4*/ void HandleCheckHit(bool _bCritical);
    /*0x1448b9c*/ void HandleCheckCC();
    /*0x1448cc4*/ void HandleCheckBuff(int _nBuffID);
}

class SkillFX_GUITAR_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageRatio;

    /*0x144900c*/ SkillFX_GUITAR_1_FX1();
    /*0x1448ec8*/ void InitChild();
    /*0x1448ee8*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_GUITAR_2_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_nAddBuffID;

    /*0x1449184*/ SkillFX_GUITAR_2_FX1();
    /*0x1449014*/ void InitChild();
    /*0x1449050*/ bool CheckBuffAddible(CharacterBase _target, int _nAddBuffID, System.Nullable<float> _fParameter);
}

class SkillFX_GUITAR_4_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_nNeedBuffCount;
    /*0x168*/ float m_fAddSHD;
    /*0x16c*/ bool m_bBuffFull;

    /*0x1449498*/ SkillFX_GUITAR_4_FX1();
    /*0x144918c*/ void InitChild();
    /*0x14491d0*/ void ExitFXChild();
    /*0x14492b8*/ void CheckBuff();
    /*0x1449458*/ void HandleCheckNormalSHP(int _nSkillSlot);
}

class SkillFX_HARP_3_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nRemoveBuffCount;
    /*0x168*/ int m_nBuffID;

    /*0x14498fc*/ SkillFX_HARP_3_FX1();
    /*0x14494a0*/ void InitChild();
    /*0x14494f8*/ void StartFXChild();
}

class SkillFX_HIGHELF_1_FX1 : SkillFX_Tick
{
    /*0x178*/ int m_nAddSkillFXID;
    /*0x17c*/ UnityEngine.Vector3 m_vecProjectilePos;
    /*0x188*/ UnityEngine.Vector3 m_vecProjectileTargetPos;

    /*0x1449b6c*/ SkillFX_HIGHELF_1_FX1();
    /*0x1449960*/ void InitChild();
    /*0x14499b0*/ void TickEffect();
}

class SkillFX_HIGHELF_4_FX1 : SkillFX_Buff
{
    /*0x164*/ int m_nBuffCount;
    /*0x168*/ System.Collections.Generic.List<CharacterBase> m_lisExcept;
    /*0x170*/ int m_SIG_AddBuffID;
    /*0x174*/ int m_SIG_AddBuffCount;
    /*0x178*/ float m_SIG_HealAmount;

    /*0x144a10c*/ SkillFX_HIGHELF_4_FX1();
    /*0x1449bcc*/ void InitChild();
    /*0x1449d5c*/ void StartFXChild();
    /*0x1449f40*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_Heal : SkillFX_Attack
{
    /*0x144a1b0*/ SkillFX_Heal();
    /*0x144a184*/ void InitChild();
}

class SkillFX_ICE_4_FX1 : SkillFX_Base
{
    /*0x144a594*/ SkillFX_ICE_4_FX1();
    /*0x144a1b8*/ void InitChild();
    /*0x144a358*/ void HandleCheckCondition(CharacterBase _target, int _nSkillFXID, float _fDamage);
    /*0x144a464*/ void ExitFXChild();
}

class SkillFX_IDOL_1_FX1 : SkillFX_Heal
{
    /*0x164*/ int m_nSignatureBuffID;

    /*0x144a864*/ SkillFX_IDOL_1_FX1();
    /*0x144a5f8*/ void InitChild();
    /*0x144a6f4*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_IDOL_2_FX1 : SkillFX_Heal
{
    /*0x164*/ int m_nSignatureBuffID;

    /*0x144aad8*/ SkillFX_IDOL_2_FX1();
    /*0x144a86c*/ void InitChild();
    /*0x144a968*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_IDOL_3_FX1 : SkillFX_Cure
{
    /*0x164*/ float m_fReduceCooltime;
    /*0x168*/ int m_nSignatureBuffID;

    /*0x144ae24*/ SkillFX_IDOL_3_FX1();
    /*0x144aae0*/ void InitChild();
    /*0x144abec*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_JACKRABBIT_3_FX1 : SkillFX_AddHP_Ratio
{
    /*0x144af7c*/ SkillFX_JACKRABBIT_3_FX1();
    /*0x144ae2c*/ void StartFXChild();
}

class SkillFX_Jungle_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddMP;

    /*0x144b064*/ SkillFX_Jungle_1_FX1();
    /*0x144af84*/ void InitChild();
    /*0x144afbc*/ bool CheckAttackCollision();
}

class SkillFX_LAMPLIGHT_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddMultDamage;
    /*0x168*/ float m_fMaxMultDamage;
    /*0x16c*/ bool m_bHitAttack;

    /*0x144b264*/ SkillFX_LAMPLIGHT_1_FX1();
    /*0x144b06c*/ void InitChild();
    /*0x144b0ac*/ void StartFXChild();
    /*0x144b0b8*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144b150*/ void CalcDamage(CharacterBase _target);
    /*0x144b24c*/ void CheckBuff(int _nAddBuffID, bool _bUseMPPay);
}

class SkillFX_LAMPLIGHT_2_FX1 : SkillFX_Attack
{
    /*0x164*/ bool m_bUseAttackTwice;
    /*0x165*/ bool m_bAddBuff;

    /*0x144b3e4*/ SkillFX_LAMPLIGHT_2_FX1();
    /*0x144b26c*/ void InitChild();
    /*0x144b2ac*/ void StartFXChild();
    /*0x144b2f8*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_LAMPLIGHT_2_FX2 : SkillFX_LAMPLIGHT_2_FX1
{
    /*0x144b430*/ SkillFX_LAMPLIGHT_2_FX2();
    /*0x144b3ec*/ void StartFXChild();
}

class SkillFX_MIDDLE_2_FX1 : SkillFX_Spawn
{
    /*0x178*/ float m_UnitSizeMult;
    /*0x17c*/ float m_UnitHPMult;
    /*0x180*/ float m_UnitATKMult;
    /*0x184*/ float m_UnitMP;
    /*0x188*/ bool m_bSignatureEnable;

    /*0x144ba1c*/ SkillFX_MIDDLE_2_FX1();
    /*0x144b438*/ void InitChild();
    /*0x144b584*/ CharacterBase SpawnUnit();
    /*0x144b7f8*/ void StartFXChild();
    /*0x144b55c*/ void <InitChild>g__SetSignatureData|5_0(TableData.TableData_Skillextra _extra);
}

class SkillFX_MIDNIGHT_1_FX1 : SkillFX_Warp
{
    /*0x144bb80*/ SkillFX_MIDNIGHT_1_FX1();
    /*0x144ba8c*/ UnityEngine.Vector2 CalcFXStartPOS();
}

class SkillFX_MIDNIGHT_2_FX1 : SkillFX_Warp
{
    /*0x144bcdc*/ SkillFX_MIDNIGHT_2_FX1();
    /*0x144bbe8*/ UnityEngine.Vector2 CalcFXStartPOS();
}

class SkillFX_MIDNIGHT_3_FX1 : SkillFX_Tick
{
    /*0x144bf94*/ SkillFX_MIDNIGHT_3_FX1();
    /*0x144bce0*/ System.Collections.Generic.List<CharacterBase> GetCollisionList();
    /*0x144be98*/ void KnockBackProcess(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_MIKO_1_FX1 : SkillFX_Base
{
    /*0x164*/ int m_nProjectileSkillFXID;

    /*0x144c464*/ SkillFX_MIKO_1_FX1();
    /*0x144bff4*/ void StartFXChild();
}

class SkillFX_NUN_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fMultDamageDistance;
    /*0x168*/ float m_fMultDamageRatio;
    /*0x16c*/ int m_nBuffID;
    /*0x170*/ int m_nBuffIDWhenCritical;
    /*0x174*/ int m_SIG_FallBuffID;
    /*0x178*/ int m_SIG_SpeedDownBuffID;
    /*0x17c*/ float m_SIG_FallPercentage;
    /*0x180*/ float m_SIG_KnockbackDistance;
    /*0x184*/ bool m_SIG_IgnoreShield;

    /*0x144ca54*/ SkillFX_NUN_1_FX1();
    /*0x144c4c8*/ void InitChild();
    /*0x144c670*/ void StartFXChild();
    /*0x144c78c*/ void CheckBuff();
    /*0x144c870*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144c954*/ void RecieveAddDamage(CharacterBase _target, ref Battle.StatTransfer _stat);
    /*0x144c9c0*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_NUN_2_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nAddSP;

    /*0x144cba8*/ SkillFX_NUN_2_FX1();
    /*0x144ca5c*/ void InitChild();
    /*0x144cab0*/ bool CheckAttackCollision();
}

class SkillFX_PAJAMA_1_FX4 : SkillFX_Attack
{
    /*0x144cbbc*/ SkillFX_PAJAMA_1_FX4();
    /*0x144cbb0*/ void AddBuffToTarget(CharacterBase _target, CharacterBase _caster, int _nBuffID, float _fMPPay, float[] _arrParams);
}

class SkillFX_PAJAMA_2_FX1 : SkillFX_Attack
{
    /*0x164*/ bool m_bUseDebuff;
    /*0x168*/ float m_fMultDamageRatio;
    /*0x16c*/ int m_nStunBuffID;
    /*0x170*/ float m_SIG_AccAdd;
    /*0x174*/ bool m_SIG_Ignore_DEF;
    /*0x178*/ float m_SIG_MultDamageRatio;

    /*0x144cf00*/ SkillFX_PAJAMA_2_FX1();
    /*0x144cbc4*/ void InitChild();
    /*0x144ccec*/ void GiveDamageToTarget(CharacterBase _target);
    /*0x144ce3c*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_PIRATE_1_FX1 : SkillFX_Tick
{
    /*0x178*/ int m_nAddSkillFXID;
    /*0x17c*/ UnityEngine.Vector3 m_vecProjectilePos;
    /*0x188*/ UnityEngine.Vector3 m_vecProjectileTargetPos;

    /*0x144d114*/ SkillFX_PIRATE_1_FX1();
    /*0x144cf08*/ void InitChild();
    /*0x144cf58*/ void TickEffect();
}

class SkillFX_PIRATE_1_FX2 : SkillFX_Attack
{
    /*0x164*/ int m_nCheckBuffID;
    /*0x168*/ float m_fAddDamageATKRatio;

    /*0x144d278*/ SkillFX_PIRATE_1_FX2();
    /*0x144d174*/ void InitChild();
    /*0x144d1b8*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_PRIEST_2_FX1 : SkillFX_Heal
{
    /*0x164*/ int m_nCureCount;
    /*0x168*/ float m_fConditionHPRatio;
    /*0x16c*/ float m_fHealATKRatio;

    /*0x144d434*/ SkillFX_PRIEST_2_FX1();
    /*0x144d280*/ void InitChild();
    /*0x144d2cc*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_QUEEN_SIG_AddHP_Ratio : SkillFX_AddHP_Ratio
{
    /*0x168*/ float m_fHealHPRatioPerMP1Percent;
    /*0x16c*/ int m_nAddShieldBuffID;
    /*0x170*/ float m_fRecentHealAmount;

    /*0x144d778*/ SkillFX_QUEEN_SIG_AddHP_Ratio();
    /*0x144d43c*/ void InitChild();
    /*0x144d4d4*/ void StartFXChild();
    /*0x144d688*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Queen_1_FX2 : SkillFX_Base
{
    /*0x164*/ int m_nATKBuffID;
    /*0x168*/ int m_nInvincibleBuffID;
    /*0x16c*/ float m_fCheckHPRatio;

    /*0x144d938*/ SkillFX_Queen_1_FX2();
    /*0x144d780*/ void InitChild();
    /*0x144d7f8*/ void StartFXChild();
}

class SkillFX_REDEYE_2_FX1 : SkillFX_Attack
{
    /*0x144dbd0*/ SkillFX_REDEYE_2_FX1();
    /*0x144d99c*/ void InitChild();
    /*0x144dae0*/ void HandleAttack(System.ValueTuple<CharacterBase, float> _info);
}

class SkillFX_REDHEAD_1_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageRatio;
    /*0x168*/ int m_nAddMP;

    /*0x144de78*/ SkillFX_REDHEAD_1_FX1();
    /*0x144dbd8*/ void InitChild();
    /*0x144dc34*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144dda8*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_REDHOOD_3_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamageAmount;
    /*0x168*/ int m_nBuffID;
    /*0x16c*/ int m_nBuffCount;
    /*0x170*/ float m_nAddDamageMult;

    /*0x144e070*/ SkillFX_REDHOOD_3_FX1();
    /*0x144de80*/ void InitChild();
    /*0x144dedc*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
    /*0x144e00c*/ float GetAddDamageMultRatio(CharacterBase _target);
}

class SkillFX_RemoveBuff : SkillFX_Attack
{
    /*0x164*/ int m_nRemoveBuffCount;

    /*0x144e1d4*/ SkillFX_RemoveBuff();
    /*0x144e078*/ void InitChild();
    /*0x144e10c*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_SABRE_4_FX1 : SkillFX_Base
{
    /*0x144e380*/ SkillFX_SABRE_4_FX1();
    /*0x144e1dc*/ void StartFXChild();
}

class SkillFX_SABRE_5_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fAddDamagePercent;
    /*0x168*/ float m_fHealPercent;

    /*0x144e6ec*/ SkillFX_SABRE_5_FX1();
    /*0x144e3e4*/ void InitChild();
    /*0x144e424*/ bool FindTarget(CharacterBase _except);
    /*0x144e4f4*/ Battle.StatTransfer GetStatTransfer();
    /*0x144e5e8*/ void OnKills();
}

class SkillFX_SHAMAN_4_FX1 : SkillFX_Attack_AddMP
{
    /*0x144e7cc*/ SkillFX_SHAMAN_4_FX1();
    /*0x144e6f4*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_SKYBLUE_1_FX1 : SkillFX_Tick
{
    /*0x177*/ bool m_bDrainMP;
    /*0x178*/ float m_fDrainMPValue;

    /*0x144e86c*/ SkillFX_SKYBLUE_1_FX1();
    /*0x144e7d4*/ void InitChild();
    /*0x144e81c*/ void CalcDamage(CharacterBase _target);
}

class SkillFX_SKYBLUE_2_FX1 : SkillFX_Attack
{
    /*0x164*/ bool m_bCheckCritical;
    /*0x168*/ float m_fCriticalLessHP;

    /*0x144e9a4*/ SkillFX_SKYBLUE_2_FX1();
    /*0x144e8cc*/ void InitChild();
    /*0x144e918*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_SUGAR_1_FX1 : SkillFX_AddMP
{
    /*0x168*/ float m_fAddMP_Origin;

    /*0x144ea44*/ SkillFX_SUGAR_1_FX1();
    /*0x144e9ac*/ void InitChild();
    /*0x144e9dc*/ void StartFXChild();
}

class SkillFX_SUGAR_1_FX2 : SkillFX_Heal
{
    /*0x164*/ float m_fCOEFNum_Origin;

    /*0x144eaf0*/ SkillFX_SUGAR_1_FX2();
    /*0x144ea4c*/ void InitChild();
    /*0x144ea9c*/ void StartFXChild();
}

class SkillFX_SUGAR_3_FX1 : SkillFX_Buff
{
    /*0x164*/ float m_fHPRatio;

    /*0x144ecb4*/ SkillFX_SUGAR_3_FX1();
    /*0x144eaf8*/ void InitChild();
    /*0x144eb18*/ void StartFXChild();
}

class SkillFX_SUGAR_SIG_Heal : SkillFX_Heal
{
    /*0x164*/ float m_fConditionHPRatio;
    /*0x168*/ float m_fHealMultRatio;

    /*0x144ed78*/ SkillFX_SUGAR_SIG_Heal();
    /*0x144ecbc*/ void InitChild();
    /*0x144ece4*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_SWORDCAT_1_FX2 : SkillFX_Attack
{
    /*0x164*/ float m_sig_HealRatio;

    /*0x144ee64*/ SkillFX_SWORDCAT_1_FX2();
    /*0x144ed80*/ void InitChild();
    /*0x144edd4*/ void GiveDamageToTarget(CharacterBase _target);
}

class SkillFX_Sabre_1_FX1 : SkillFX_Attack
{
    /*0x164*/ int m_nAddBuff_Sentence;
    /*0x168*/ bool m_bRemoveTargetBuffAll;

    /*0x144f144*/ SkillFX_Sabre_1_FX1();
    /*0x144ee6c*/ void InitChild();
    /*0x144eed4*/ bool FindTarget(CharacterBase _except);
    /*0x144efa4*/ void CheckAttack();
}

class SkillFX_Spawn : SkillFX_Base
{
    /*0x164*/ int m_nSpawnUnitID;
    /*0x168*/ float m_fSpawnUnitLevelRatio;
    /*0x170*/ CharacterBase m_SpawnUnit;

    /*0x144ba28*/ SkillFX_Spawn();
    /*0x144b518*/ void InitChild();
    /*0x144b83c*/ void StartFXChild();
    /*0x144f14c*/ CharacterBase SpawnUnit();
}

class SkillFX_TAILOR_2_FX1 : SkillFX_Attack
{
    /*0x164*/ float m_fMultDamageRatio_NoRestoreHP;
    /*0x168*/ float m_fMultDamageRatio_Blood;

    /*0x144f394*/ SkillFX_TAILOR_2_FX1();
    /*0x144f2a8*/ void InitChild();
    /*0x144f2e8*/ void RecieveDamage(CharacterBase _target, Battle.StatTransfer _stat);
}

class SkillFX_TAILOR_3_FX1 : SkillFX_Base
{
    /*0x164*/ int m_BuffID_Cloth;
    /*0x168*/ int m_BuffID_Light;
    /*0x16c*/ int m_BuffID_Heavy;
    /*0x170*/ System.Collections.Generic.List<CharacterBase> m_CollisionList;

    /*0x144f718*/ SkillFX_TAILOR_3_FX1();
    /*0x144f39c*/ void InitChild();
    /*0x144f460*/ void StartFXChild();
}

class SkillFX_TAILOR_4_FX1 : SkillFX_Attack
{
    /*0x144f7b8*/ SkillFX_TAILOR_4_FX1();
    /*0x144f77c*/ void InitChild();
}

class SkillFX_TAILOR_SIG_FX1 : SkillFX_Base
{
    /*0x164*/ int m_BuffID_Staff;
    /*0x168*/ int m_BuffID_LightWeapon;
    /*0x16c*/ int m_BuffID_HeavyWeapon;
    /*0x170*/ int m_BuffID_CriDown;
    /*0x178*/ System.Collections.Generic.List<CharacterBase> m_CollisionList;

    /*0x144fc34*/ SkillFX_TAILOR_SIG_FX1();
    /*0x144f7c0*/ void InitChild();
    /*0x144f89c*/ void StartFXChild();
}

class SkillFX_Tick : SkillFX_Base
{
    static /*0x0*/ bool IsTick;
    /*0x164*/ float m_fTick;
    /*0x168*/ float m_fCurTick;
    /*0x16c*/ int m_nCount;
    /*0x170*/ int m_nCurCount;
    /*0x174*/ bool m_bStart;
    /*0x175*/ bool m_bRemovedFromStartFX;
    /*0x176*/ bool m_bTickFollow;

    static /*0x144fe80*/ SkillFX_Tick();
    /*0x1445e08*/ SkillFX_Tick();
    /*0x14457f8*/ void InitChild();
    /*0x1445878*/ void StartFXChild();
    /*0x14430a8*/ void ExitFXChild();
    /*0x144fc98*/ void HandleCheckTickCondition();
    /*0x144fdb0*/ void CheckTickDelay();
    /*0x1443680*/ void TickEffect();
    /*0x144fcd8*/ bool IsPaused();
}

class SkillFX_Tick_Buff : SkillFX_Tick
{
    /*0x178*/ int m_nRefBuffID;

    /*0x144ff80*/ SkillFX_Tick_Buff();
    /*0x144fed0*/ void InitChild();
    /*0x144ff24*/ void StartFXChild();
    /*0x144ff28*/ void TickEffect();
}

class SkillFX_Tick_Buff_Follow : SkillFX_Tick_Buff
{
    /*0x145002c*/ SkillFX_Tick_Buff_Follow();
    /*0x144ffe0*/ void InitChild();
    /*0x1450008*/ void StartFXChild();
}

class SkillFX_Tick_Cure : SkillFX_Tick
{
    /*0x14500d0*/ SkillFX_Tick_Cure();
    /*0x1450030*/ void CollisionEffect(System.Collections.Generic.List<CharacterBase> _lisTargets);
}

class SkillFX_Tick_Cure_Follow : SkillFX_Tick_Cure
{
    /*0x145017c*/ SkillFX_Tick_Cure_Follow();
    /*0x1450130*/ void InitChild();
    /*0x1450158*/ void StartFXChild();
}

class SkillFX_Tick_Follow : SkillFX_Tick
{
    /*0x14436e0*/ SkillFX_Tick_Follow();
    /*0x1442ef0*/ void InitChild();
    /*0x144304c*/ void StartFXChild();
}

class SkillFX_Warp : SkillFX_Base
{
    /*0x144bb84*/ SkillFX_Warp();
    /*0x1450180*/ void StartFXChild();
}

class CharacterState
{
    /*0x10*/ int StateID;
    /*0x14*/ Battle.StateFlag Flag;
    /*0x18*/ CharacterState.CheckStateEnableResultType <CheckStateEnableResult>k__BackingField;
    /*0x20*/ System.Collections.Generic.List<Battle.StateAndSkillID> NextStateIndexList;
    /*0x28*/ CharacterBase m_Character;
    /*0x30*/ InGameController m_InGameController;
    /*0x38*/ Spine.AnimationState.TrackEntryDelegate m_delComplete;
    /*0x40*/ Spine.AnimationState.TrackEntryEventDelegate[] m_arrDelEvent;
    /*0x48*/ ANIMATION_CLIP m_AnimID;
    /*0x4c*/ Battle.CharacterFlag m_FlagTmp;
    /*0x50*/ bool m_bSpecialSkill;
    /*0x51*/ bool m_bExitNextUpdate;

    /*0x1320940*/ CharacterState(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13279fc*/ Battle.StateAndSkillID get_StateEnumID();
    /*0x1327a04*/ CharacterState.CheckStateEnableResultType get_CheckStateEnableResult();
    /*0x1327a0c*/ void set_CheckStateEnableResult(CharacterState.CheckStateEnableResultType value);
    /*0x1327a14*/ bool get_IsStateEnable();
    /*0x1327a80*/ bool get_IsSkill();
    /*0x1321844*/ bool get_IsSkillULT();
    /*0x1322260*/ string get_m_AnimName();
    /*0x1327aec*/ bool CheckStateEnable(bool _bSkillUITouch);
    /*0x1327afc*/ bool InitState(CharacterBase _character, int _stateID);
    /*0x1327b78*/ bool InitStateChild();
    /*0x1327b80*/ void RemoveState();
    /*0x1327b8c*/ void RemoveStateChild();
    /*0x1327b90*/ void StartState();
    /*0x1327b9c*/ void StartStateChild();
    /*0x1327ba0*/ bool UpdateState();
    /*0x1327bc8*/ bool UpdateStateChild();
    /*0x1327bd0*/ void ExitState();
    /*0x1327c24*/ void ExitStateChild();
    /*0x1327c28*/ bool InvokeAnimEvent(AnimEvent _animEvent);
    /*0x1320cc4*/ bool IsChangeableMovePOS();
    /*0x1321038*/ void SetMoveTarget(CharacterBase _target, Battle.StateAndSkillID _eStateID);
    /*0x1321020*/ void SetMovePOS(System.Nullable<UnityEngine.Vector2> _vecPOS);
    /*0x1327c30*/ void SetMoveDIR(UnityEngine.Vector2 _vecDIR);
    /*0x132226c*/ void StartStateSettings(bool _bSpecialSkill, ANIMATION_CLIP _animationClip, bool _bAnimLoop, bool _bHitAnimRotateInit, Spine.AnimationState.TrackEntryDelegate _delAnimComplete, Spine.AnimationState.TrackEntryEventDelegate[] _delAnimEvents);
    /*0x1327bfc*/ void ExitStateSettings();
    /*0x1327c50*/ void StartFX(int _nSkillFXID);
    /*0x1327c54*/ void SetExitNextUpdate(bool _bExit);
    /*0x1327c60*/ void ClearFlag();
    /*0x1324144*/ bool FlagEquals(Battle.StateFlag _eCompare);
    /*0x13217c4*/ void SetFlag(Battle.StateFlag _eValue, bool _bBoolean);

    enum CheckStateEnableResultType
    {
        NONE = 0,
        CANNOT_USE_TOUCH_SKILL = 1,
    }
}

class CharacterState_BDRAGON_Idle : CharacterState_Idle
{
    /*0x1327cc8*/ CharacterState_BDRAGON_Idle(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1327ce0*/ void SetAnimation();
}

class CharacterState_Death : CharacterState
{
    /*0x52*/ bool m_bStartDissolve;
    /*0x54*/ float m_fAnimDuation;
    /*0x58*/ float m_fStartAnimDuraionRatio;
    /*0x5c*/ float m_fMultCurAnimRatio;

    /*0x1327d64*/ CharacterState_Death(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1327d70*/ bool InitStateChild();
    /*0x1327d90*/ void ExitStateChild();
    /*0x1327e58*/ void StartStateChild();
    /*0x132809c*/ void HandleSetDissolveShader(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x1328384*/ void DeathAnimComplete(Spine.TrackEntry entry);
    /*0x13283f8*/ void SetDissolveValue();
    /*0x13282ec*/ bool CheckUseDissolve();
}

class CharacterState_Death_WorldBoss : CharacterState_Death
{
    /*0x1328520*/ CharacterState_Death_WorldBoss(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132852c*/ void StartStateChild();
    /*0x1328624*/ void DeathAnimComplete(Spine.TrackEntry entry);
    /*0x1328694*/ void <StartStateChild>g__HandleAnimEventVoice|1_0(Spine.TrackEntry trackEntry, Spine.Event e);
}

class CharacterState_Fall : CharacterState
{
    /*0x13287b4*/ CharacterState_Fall(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13287c0*/ bool InitStateChild();
    /*0x13287e8*/ void StartStateChild();
    /*0x13288c4*/ void AnimComplete(Spine.TrackEntry entry);
}

class CharacterState_Freeze : CharacterState
{
    /*0x1328930*/ CharacterState_Freeze(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132893c*/ bool InitStateChild();
    /*0x1328964*/ void StartStateChild();
}

class CharacterState_Idle : CharacterState
{
    /*0x54*/ int m_nCurEndPoseDelayCount;
    /*0x58*/ bool m_bLoop;

    /*0x1327cd4*/ CharacterState_Idle(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328980*/ void StartStateChild();
    /*0x1328990*/ bool UpdateStateChild();
    /*0x13289b0*/ void SetIdleAnimation();
    /*0x1327d38*/ void SetAnimation();
}

class CharacterState_Idle_WorldBoss : CharacterState_Idle
{
    /*0x59*/ bool m_bStartGameEndVoice;

    /*0x1328b68*/ CharacterState_Idle_WorldBoss(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328b74*/ void SetAnimation();
    /*0x1328cb0*/ void <SetAnimation>g__HandleAnimEventVoice|2_0(Spine.TrackEntry trackEntry, Spine.Event e);
}

class CharacterState_Launch : CharacterState
{
    /*0x1328dd0*/ CharacterState_Launch(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328ddc*/ bool InitStateChild();
    /*0x1328e04*/ void StartStateChild();
    /*0x1328ea0*/ void AnimComplete(Spine.TrackEntry entry);
}

class CharacterState_Move : CharacterState
{
    /*0x54*/ float m_fMoveSpeed;

    /*0x1328f0c*/ CharacterState_Move(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1328f18*/ bool CheckStateEnable(bool _bTouchSkill);
    /*0x1328f6c*/ void StartStateChild();
    /*0x1329158*/ bool UpdateStateChild();
}

class CharacterState_Move_WorldBoss : CharacterState_Move
{
    /*0x1329160*/ CharacterState_Move_WorldBoss(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132916c*/ void StartStateChild();
}

class CharacterState_Sleep : CharacterState
{
    /*0x13291c0*/ CharacterState_Sleep(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13291cc*/ bool InitStateChild();
    /*0x13291f4*/ void StartStateChild();
}

class CharacterState_StartHAST : CharacterState
{
    /*0x54*/ UnityEngine.Vector3 m_vecMovePos;
    /*0x60*/ bool m_bRightDIR;

    /*0x1329210*/ CharacterState_StartHAST(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x132921c*/ bool InitStateChild();
    /*0x13292d0*/ bool CheckStateEnable(bool _bTouchSkill);
}

class CharacterState_Stun : CharacterState
{
    /*0x13294e8*/ CharacterState_Stun(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x13294f4*/ bool InitStateChild();
    /*0x132951c*/ void StartStateChild();
}

class CharacterState_Swordcat_Idle : CharacterState_Idle
{
    /*0x5c*/ int m_nPassiveSkillLV;
    /*0x60*/ int m_nAddMP;
    /*0x64*/ int m_nBuffID;
    /*0x68*/ float m_fCounterPercentage;

    /*0x1329538*/ CharacterState_Swordcat_Idle(bool _isStateEnable, bool _isRecursiveEnable);
    /*0x1329544*/ bool InitStateChild();
    /*0x132966c*/ void StartStateChild();
    /*0x1329894*/ void ExitStateChild();
    /*0x1329a00*/ void HandleCheckAvoid(CharacterBase _attacker);
    /*0x1329cd0*/ void HandleCheckHit(CharacterBase _attacker, float _f);
    /*0x1329a08*/ void Revenge(CharacterBase _attacker, bool _bAvoid);
}

class ParticleBase : ObjectBase
{
    /*0x3c*/ float Duration;
    /*0x40*/ bool IsFollow;
    /*0x41*/ bool AutoDirection;
    /*0x42*/ bool UseSpine;
    /*0x44*/ Battle.BonePositionType PositionType;
    /*0x48*/ float xPosFactor;
    /*0x4c*/ float yPosFactor;
    /*0x50*/ float zPosForward;
    /*0x58*/ CharacterBase <OwnerDeath>k__BackingField;
    /*0x60*/ UnityEngine.ParticleSystem m_Particle;
    /*0x68*/ Spine.Unity.SkeletonAnimation m_SpineAnimation;
    /*0x70*/ UnityEngine.ParticleSystem[] m_arrParticles;
    /*0x78*/ System.Action m_SpineCompleteAction;
    /*0x80*/ System.Action m_RemoveAction;
    /*0x88*/ float m_fOriginRotation;
    /*0x8c*/ float m_fTime;
    /*0x90*/ float m_fSpeed;
    /*0x94*/ float m_fParticleSpeed;
    /*0x98*/ bool m_bStartInit;
    /*0x99*/ bool m_bLoop;
    /*0x9a*/ bool m_bNoPause;
    /*0x9b*/ bool m_bPuased;
    /*0xa0*/ UnityEngine.Transform m_Transform;
    /*0xa8*/ UnityEngine.Color m_curColor;

    /*0x1143a94*/ ParticleBase();
    /*0x11425e8*/ CharacterBase get_OwnerDeath();
    /*0x11425f0*/ void set_OwnerDeath(CharacterBase value);
    /*0x11425f8*/ void StartInit();
    /*0x1142714*/ void StartInitForUI();
    /*0x11427a4*/ void InitParticleForProjectile();
    /*0x1142864*/ void InitParticleForUI(UnityEngine.Transform _parent, bool _isLoop, float _fSpeed);
    /*0x1142894*/ void InitParticleForUI(UnityEngine.Transform _parent, float _fSpeed);
    /*0x1142b5c*/ void InitParticleForBattle(UnityEngine.Transform _parent, ObjectBase _owner, CharacterBase _ownerDeath);
    /*0x1142e2c*/ void SetNoPuase();
    /*0x1142e38*/ void PlayParticle();
    /*0x1142ef4*/ void PauseParticle(bool _boolean);
    /*0x11430d0*/ void PuaseParticle_ForPausePopup(bool _bPause);
    /*0x1142e04*/ void SetParticleSpeed(float _speed);
    /*0x1142b44*/ void SetParticleSpeedForUI(float _fSpeed);
    /*0x114315c*/ void SetParticleSpeedValue(float _fSpeed);
    /*0x1142a20*/ void SetParticleLoop(bool _bLoop, bool _bIncludeChildren);
    /*0x11431ec*/ void DeleteParticle();
    /*0x1143320*/ void StopParticle();
    /*0x114326c*/ void SetDirectionToOrigin();
    /*0x11433dc*/ void SetDirection(Battle.Direction _eDirection);
    /*0x1143460*/ void SetSpineSkin(string _sSkinName);
    /*0x114351c*/ void SetSpineAnimation(string _sAnimationName, bool _bLoop);
    /*0x11435f4*/ void SetSpineCompleteAction(System.Action _action);
    /*0x114373c*/ void HandleCompleteAnimation(Spine.TrackEntry _entry);
    /*0x11437f0*/ void SetRemoveParticleAction(System.Action _action);
    /*0x1143890*/ void UpdateObject();
    /*0x1143a68*/ bool UpdateTimer(float _fDeltaTime);
}

class ParticleBase_Deathscythe_SP01 : ParticleBase
{
    /*0xb8*/ int ConditionSkillLV;
    /*0xbc*/ float Duration_Default;
    /*0xc0*/ float Duration_LV3;

    /*0x1143b20*/ ParticleBase_Deathscythe_SP01();
    /*0x1143a9c*/ void InitParticleForBattle(UnityEngine.Transform _parent, ObjectBase _owner, CharacterBase _ownerDeath);
}

class ParticleBase_MIDNIGHT_SP02 : ParticleBase
{
    /*0x1143be0*/ ParticleBase_MIDNIGHT_SP02();
    /*0x1143b3c*/ void SetDirection(Battle.Direction _eDirection);
}

class InGameState
{
    /*0x10*/ InGameController m_InGameController;
    /*0x18*/ System.Collections.Generic.Dictionary<Battle.InGameStateMethodType, System.Action> m_dicStateAction;
    /*0x20*/ bool m_bUpdateSync;

    /*0x1571f40*/ InGameState();
    /*0x15717a0*/ void Init();
    /*0x157182c*/ bool CheckStateChangeable();
    void InitAddActions();
    /*0x1571834*/ void AddAction(Battle.InGameStateMethodType _type, System.Action _addAction);
    /*0x1571a00*/ void AddUpdateCountAction();
    /*0x1571a8c*/ void RemoveAction(Battle.InGameStateMethodType _type, System.Action _action);
    /*0x1571b98*/ void Start();
    /*0x1571c68*/ void Update();
    /*0x1571e70*/ void Exit();
}

class InGameState_GameOver : InGameState
{
    /*0x1572110*/ InGameState_GameOver();
    /*0x1571fb8*/ void InitAddActions();
}

class InGameState_GameOver_Verify : InGameState
{
    /*0x15721e4*/ InGameState_GameOver_Verify();
    /*0x1572114*/ void InitAddActions();
}

class InGameState_Idle : InGameState
{
    /*0x15722fc*/ InGameState_Idle();
    /*0x15721e8*/ void InitAddActions();
}

class InGameState_Initialize : InGameState
{
    /*0x157259c*/ InGameState_Initialize();
    /*0x1572300*/ void InitAddActions();

    class <>c
    {
        static /*0x0*/ InGameState_Initialize.<> <>9;
        static /*0x8*/ System.Action <>9__0_0;
        static /*0x10*/ System.Action <>9__0_1;

        static /*0xe4f59c*/ <>c();
        /*0xe4f5fc*/ <>c();
        /*0xe4f604*/ void <InitAddActions>b__0_0();
        /*0xe4f67c*/ void <InitAddActions>b__0_1();
    }
}

class InGameState_None : InGameState
{
    /*0x15725a4*/ InGameState_None();
    /*0x15725a0*/ void InitAddActions();
}

class InGameState_Pause : InGameState
{
    /*0x15725ac*/ InGameState_Pause();
    /*0x15725a8*/ void InitAddActions();
}

class InGameState_Play : InGameState
{
    /*0x15728e4*/ InGameState_Play();
    /*0x15725b0*/ void InitAddActions();
}

class InGameState_Play_DPS : InGameState
{
    /*0x1572ac8*/ InGameState_Play_DPS();
    /*0x15728e8*/ void InitAddActions();
}

class InGameState_Play_Demo : InGameState
{
    /*0x1572cf0*/ InGameState_Play_Demo();
    /*0x1572acc*/ void InitAddActions();
}

class InGameState_Play_GuildWar : InGameState_Play
{
    /*0x1572e98*/ InGameState_Play_GuildWar();
    /*0x1572cf4*/ void InitAddActions();
}

class InGameState_Play_GuildWar_Verify : InGameState_Play_GuildWar
{
    /*0x1572f30*/ InGameState_Play_GuildWar_Verify();
    /*0x1572e9c*/ void InitAddActions();
}

class InGameState_Play_Verify : InGameState_Play
{
    /*0x1572fc8*/ InGameState_Play_Verify();
    /*0x1572f34*/ void InitAddActions();
}

class InGameState_Preview : InGameState
{
    /*0x1572fd0*/ InGameState_Preview();
    /*0x1572fcc*/ void InitAddActions();
}

class InGameState_WorldBossPrev : InGameState
{
    /*0x1573174*/ InGameState_WorldBossPrev();
    /*0x1572fd4*/ void InitAddActions();
    /*0x15730e8*/ void AddUpdateCountAction();
}

class BattleSceneManager : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Camera m_BattleSceneCamera;
    /*0x20*/ UnityEngine.GameObject m_Background;

    /*0xe3e638*/ BattleSceneManager();
    /*0xe3d868*/ void Start();
    /*0xe3e0b4*/ void HandleGameStart();
    /*0xe3e214*/ void HandleGameExit();
    /*0xe3e48c*/ void HandleCameraSetActive(bool _bActive);
}

class BattleStageManager : Singleton.Component.SingletonComponent<BattleStageManager>
{
    /*0x24*/ Battle.GameModeType <CurrentGameMode>k__BackingField;
    /*0x28*/ Battle.BattleStateType <CurrentBattleState>k__BackingField;
    /*0x2c*/ Battle.BattleStateType <CurrentBattleState_Origin>k__BackingField;
    /*0x30*/ TableData.TableData_Stagebattle <CurrentStageData>k__BackingField;
    /*0x38*/ TableData.TableData_Demodata <CurrentDemoData>k__BackingField;
    /*0x40*/ TableData.TableData_Mazebattle <CurrentMazeBattleData>k__BackingField;
    /*0x48*/ int <CurrentRandomSeed>k__BackingField;
    /*0x50*/ string <CurrentStageReplayData>k__BackingField;
    /*0x58*/ CString <CurrentVerifyID>k__BackingField;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> <CurrentVerifyHeroListAlly>k__BackingField;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> <CurrentVerifyHeroListEnemy>k__BackingField;
    /*0x70*/ string <CurrentVerifyStageInfo>k__BackingField;
    /*0x78*/ PTShare.Define.SStatBonus <CurrentStatBonus_VS>k__BackingField;
    /*0x80*/ PTShare.Define.SStatBonus <CurrentStatBonus_My>k__BackingField;
    /*0x88*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSpawnInfo_Ally>k__BackingField;
    /*0x90*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSpawnInfo_Enemy>k__BackingField;
    /*0x98*/ System.Collections.Generic.List<int> <CurrentFactionBuffIDList_Ally>k__BackingField;
    /*0xa0*/ System.Collections.Generic.List<int> <CurrentFactionBuffIDList_Ally2>k__BackingField;
    /*0xa8*/ System.Collections.Generic.List<int> <CurrentFactionBuffIDList_Enemy>k__BackingField;
    /*0xb0*/ string m_sCurrentTotalPowerAlly;
    /*0xb8*/ string m_sCurrentTotalPowerEnemy;
    /*0xc0*/ long m_lCurrentTotalPowerAlly;
    /*0xc8*/ long m_lCurrentTotalPowerEnemy;
    /*0xd0*/ ArenaTargetUser m_CurrentArenaTarget;
    /*0xf0*/ PlayerProfileInfo m_CurrentAllyProfileInfo;
    /*0x118*/ PlayerProfileInfo m_CurrentEnemyProfileInfo;
    /*0x140*/ string m_sCurrentAllyNickname;
    /*0x148*/ string m_sCurrentEnemyNickname;
    /*0x150*/ System.Collections.Generic.List<PTShare.Define.SReplay> m_lisReplayData;
    /*0x158*/ int m_nReplayCount_Max;
    /*0x15c*/ int m_nReplayCount_Current;
    /*0x160*/ HeroTroopPopup_GuildWar <CurrentTroopPopup_GuildBattle>k__BackingField;
    /*0x168*/ int <CurrentFormationID_Ally>k__BackingField;
    /*0x16c*/ int <CurrentFormationID_Enemy>k__BackingField;
    /*0x170*/ System.Collections.Generic.List<int> <CurrentFormationList_VS>k__BackingField;
    /*0x178*/ System.Collections.Generic.List<int> <CurrentFormationList_My>k__BackingField;
    /*0x180*/ System.Collections.Generic.List<int> <RandomUnitIDList>k__BackingField;
    /*0x188*/ int <CurrentGuildWarMyProfileUnitID>k__BackingField;
    /*0x18c*/ int <CurrentGuildWarAttackCaptainID>k__BackingField;
    /*0x190*/ int <CurrentGuildWarDefenseCaptainID>k__BackingField;
    /*0x194*/ int <CurrentMaxCPSupportUnitSkinID_Ally>k__BackingField;
    /*0x198*/ int <CurrentMaxCPSupportUnitSkinID_Enemy>k__BackingField;
    /*0x19c*/ int <CurrentGuildWarMyUnitID>k__BackingField;
    /*0x1a0*/ int <CurrentGuildBattleUnitCount_Ally>k__BackingField;
    /*0x1a4*/ int <CurrentGuildBattleUnitCount_Enemy>k__BackingField;
    /*0x1a8*/ System.Collections.Generic.Dictionary<int, string> <CurrentGuildWarNicknameDic_Ally>k__BackingField;
    /*0x1b0*/ System.Collections.Generic.Dictionary<int, string> <CurrentGuildWarNicknameDic_Enemy>k__BackingField;
    /*0x1b8*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> <CurrentGuildWarBonusStatDic_Ally>k__BackingField;
    /*0x1c0*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> <CurrentGuildWarBonusStatDic_Enemy>k__BackingField;
    /*0x1c8*/ string <CurrentGuildWarUniqueIDs>k__BackingField;
    /*0x1d0*/ ServerProtocol.ResGuildWarFinish <CurrentResGuildWarFinish>k__BackingField;
    /*0x1d8*/ bool GuildWarTest_IsAttackCaptain;
    /*0x1e0*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSupportSpawnInfo_Ally>k__BackingField;
    /*0x1e8*/ System.Collections.Generic.List<UnitSpawnInfo> <CurrentSupportSpawnInfo_Enemy>k__BackingField;
    /*0x1f0*/ System.Collections.Generic.List<bool> <CurrentSupportSlotUseInfo_Ally>k__BackingField;
    /*0x1f8*/ System.Collections.Generic.List<bool> <CurrentSupportSlotUseInfo_Enemy>k__BackingField;
    /*0x200*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> <CurrentSGuildWarHero_Ally>k__BackingField;
    /*0x208*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> <CurrentSGuildWarHero_Enemy>k__BackingField;
    /*0x210*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, long>, PTShare.Define.SGuildWarHero> m_DicSGuildWarHero_Ally;
    /*0x218*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, long>, PTShare.Define.SGuildWarHero> m_DicSGuildWarHero_Enemy;
    /*0x220*/ BattleStageManager.GuildWarMVPInfo <CurrentGuildWarMVPInfo>k__BackingField;
    /*0x238*/ PTShare.Define.SGuildWarHistory <CurrentGuildWarHistory>k__BackingField;
    /*0x240*/ BattleStageManager.GuildWarGuildInfo <CurrentGuildWarGuildInfo_Ally>k__BackingField;
    /*0x258*/ BattleStageManager.GuildWarGuildInfo <CurrentGuildWarGuildInfo_Enemy>k__BackingField;
    /*0x270*/ double <GW_CurrentMaxValueDamage_Ally>k__BackingField;
    /*0x278*/ double <GW_CurrentMaxValueHit_Ally>k__BackingField;
    /*0x280*/ double <GW_CurrentMaxValueHeal_Ally>k__BackingField;
    /*0x288*/ double <GW_CurrentMaxValueDamage_Enemy>k__BackingField;
    /*0x290*/ double <GW_CurrentMaxValueHit_Enemy>k__BackingField;
    /*0x298*/ double <GW_CurrentMaxValueHeal_Enemy>k__BackingField;
    /*0x2a0*/ System.Collections.Generic.List<Battle.BattleGraphValue> <GW_CurrentGraphList_Ally>k__BackingField;
    /*0x2a8*/ System.Collections.Generic.List<Battle.BattleGraphValue> <GW_CurrentGraphList_Enemy>k__BackingField;
    /*0x2b0*/ TableData.TableData_Pvechallenge <CurrentPveChallengeData>k__BackingField;
    /*0x2b8*/ int CurrentPveRankingVerifyPlaytime;
    /*0x2bc*/ int <CurrentPveRankingDifficulty>k__BackingField;
    /*0x2c0*/ long WorldBoss_PrevRecieveDamage;
    /*0x2c8*/ long WorldBoss_BeginHP_Verify;
    /*0x2d0*/ TableData.TableData_Worldbossstep CurrentWorldBossStepTable;

    static /*0xe3f644*/ PTShare.Define.SHero <GoToBattleSceneForDPS>g__GetSHero|116_0(DPSTest.UnitSetting _setting);
    static /*0xe43bb4*/ long <GetFakeStageDataCP>g__CalcFakeCP|185_0(ref BattleStageManager.<> );
    static /*0xe4438c*/ UnitSpawnInfo <FindUnitStageByTableID>g__Load|190_0(int index, int id, int lv, int grade, int tier, int initbuff, int mp, int[] equips, ref BattleStageManager.<> );
    static /*0xe47704*/ System.Collections.Generic.List<Battle.BattleGraphValue> <SetGuildWarReplayDatasWithHistory>g__GetGraphList|390_2(System.Collections.Generic.List<string> _lisGraphDatas, System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero);
    static /*0xe48d30*/ string[] <SetEnemyUnitSpawnInfoListWithPVEChallengeData>g__SplitInfo|404_0(string _str);
    /*0xe491e4*/ BattleStageManager();
    /*0xe3e640*/ Battle.GameModeType get_CurrentGameMode();
    /*0xe3e648*/ void set_CurrentGameMode(Battle.GameModeType value);
    /*0xe3e650*/ Battle.BattleStateType get_CurrentBattleState();
    /*0xe3e658*/ void set_CurrentBattleState(Battle.BattleStateType value);
    /*0xe3e660*/ Battle.BattleStateType get_CurrentBattleState_Origin();
    /*0xe3e668*/ void set_CurrentBattleState_Origin(Battle.BattleStateType value);
    /*0xe3e670*/ TableData.TableData_Stagebattle get_CurrentStageData();
    /*0xe3e678*/ void set_CurrentStageData(TableData.TableData_Stagebattle value);
    /*0xe3e680*/ TableData.TableData_Demodata get_CurrentDemoData();
    /*0xe3e688*/ void set_CurrentDemoData(TableData.TableData_Demodata value);
    /*0xe3e690*/ TableData.TableData_Mazebattle get_CurrentMazeBattleData();
    /*0xe3e698*/ void set_CurrentMazeBattleData(TableData.TableData_Mazebattle value);
    /*0xe3e6a0*/ int get_CurrentRandomSeed();
    /*0xe3e6a8*/ void set_CurrentRandomSeed(int value);
    /*0xe3e6b0*/ string get_CurrentStageReplayData();
    /*0xe3e6b8*/ void set_CurrentStageReplayData(string value);
    /*0xe3e6c0*/ CString get_CurrentVerifyID();
    /*0xe3e6c8*/ void set_CurrentVerifyID(CString value);
    /*0xe3e6d0*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> get_CurrentVerifyHeroListAlly();
    /*0xe3e6d8*/ void set_CurrentVerifyHeroListAlly(System.Collections.Generic.List<PTShare.Define.SVerifyHero> value);
    /*0xe3e6e0*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> get_CurrentVerifyHeroListEnemy();
    /*0xe3e6e8*/ void set_CurrentVerifyHeroListEnemy(System.Collections.Generic.List<PTShare.Define.SVerifyHero> value);
    /*0xe3e6f0*/ string get_CurrentVerifyStageInfo();
    /*0xe3e6f8*/ void set_CurrentVerifyStageInfo(string value);
    /*0xe3e700*/ PTShare.Define.SStatBonus get_CurrentStatBonus_VS();
    /*0xe3e708*/ void set_CurrentStatBonus_VS(PTShare.Define.SStatBonus value);
    /*0xe3e710*/ PTShare.Define.SStatBonus get_CurrentStatBonus_My();
    /*0xe3e718*/ void set_CurrentStatBonus_My(PTShare.Define.SStatBonus value);
    /*0xe3e720*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSpawnInfo_Ally();
    /*0xe3e728*/ void set_CurrentSpawnInfo_Ally(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe3e730*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSpawnInfo_Enemy();
    /*0xe3e738*/ void set_CurrentSpawnInfo_Enemy(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe3e740*/ System.Collections.Generic.List<int> get_CurrentFactionBuffIDList_Ally();
    /*0xe3e748*/ void set_CurrentFactionBuffIDList_Ally(System.Collections.Generic.List<int> value);
    /*0xe3e750*/ System.Collections.Generic.List<int> get_CurrentFactionBuffIDList_Ally2();
    /*0xe3e758*/ void set_CurrentFactionBuffIDList_Ally2(System.Collections.Generic.List<int> value);
    /*0xe3e760*/ System.Collections.Generic.List<int> get_CurrentFactionBuffIDList_Enemy();
    /*0xe3e768*/ void set_CurrentFactionBuffIDList_Enemy(System.Collections.Generic.List<int> value);
    /*0xe34218*/ bool get_IsEventBoss1st();
    /*0xe3e770*/ bool get_IsCurrentReplay();
    /*0xe3e780*/ bool get_IsSelectReplay();
    /*0xe3e790*/ bool get_IsVerifyReplay();
    /*0xe345ec*/ bool get_IsReplay();
    /*0xe3e7a0*/ bool get_IsCustom();
    /*0xe330bc*/ bool get_IsTutorial();
    /*0xe36b28*/ bool get_IsArena();
    /*0xe3e7b0*/ string get_UserToken();
    /*0xe3e830*/ void AwakeInstance();
    /*0xe3e834*/ bool InitInstance();
    /*0xe3e83c*/ void ReleaseInstance();
    /*0xe3e840*/ void InitializeCurrentSettingsForIdle();
    /*0xe3e86c*/ void InitializeCurrentSettingsForGameReady();
    /*0xe34f5c*/ void StartBattleFromBattleScene();
    /*0xe3e9ec*/ void SceneChange(Battle.GameModeType _eGameModeType, bool _bNoLoadingPage);
    /*0xe3eaa8*/ void ChangeToBattleScene(Battle.GameModeType _eGameModeType, Battle.BattleStateType _eBattleStateType);
    /*0xe3eab4*/ void GoToBattleSceneForStage(Battle.GameModeType _eGameModeType, int _nBattleID);
    /*0xe3f16c*/ void GoToBattleSceneForDemo(int _nUnitID, int _nSkinID);
    /*0xe3f450*/ void GoToBattleSceneForDPS();
    /*0xe3f8dc*/ void GoToBattleSceneForTutorialBattle(int _nBattleID, System.Collections.Generic.List<PTShare.Define.SHero> _lisSHero);
    /*0xe3fa68*/ void GoToBattleSceneForArena(PTShare.Define.ArenaSubType _ArenaType, ArenaTargetUser _ArenaTarget, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero);
    /*0xe40134*/ void GoToBattleSceneForMaze(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisEnemyHero);
    /*0xe403dc*/ void GoToBattleSceneForFriendBattle(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero, long _lFriendPlayerID);
    /*0xe405a8*/ void GoToBattleSceneForGuildHunt(int _nBattleID);
    /*0xe406f4*/ void GoToBattleSceneForEventBoss(int _nBattleID);
    /*0xe40768*/ void GoToBattleSceneForDungeon(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisEnemyHero, int _nBattleID);
    /*0xe40b70*/ void StartRetryCurrentStage();
    /*0xe40b9c*/ void StartVerify_Server();
    /*0xe41bf4*/ void StartVerify_Client();
    /*0xe2f388*/ void StartReplayCurrentStage(bool _bEnableVerify);
    /*0xe41c08*/ void StartReplay(Battle.GameModeType _eGameModeType, int _nStageID, int _nRandomSeed, string _sReplayData, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisAllyHero, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero);
    /*0xe41ff0*/ void StartReplayArena(Battle.GameModeType _eGameModeType, int _nRandomSeed, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisAllyHero, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHero);
    /*0xe42008*/ void StartArenaResult();
    /*0xe4201c*/ void SetHeroSelectList(Battle.GameModeType _eGameModeType, Battle.HeroSelectValue[] _arrHeroID);
    /*0xe42338*/ System.Collections.Generic.List<Battle.HeroSelectValue> GetHeroSelectList(Battle.GameModeType _eGameModeType);
    /*0xe3e8b8*/ string GetHeroSelectListToString(Battle.GameModeType _eGameModeType);
    /*0xe42350*/ void SetHeroListCampainClear();
    /*0xe423e4*/ System.Collections.Generic.List<Battle.HeroSelectValue> GetHeroListCampainClear();
    /*0xe3484c*/ int[] GetCurrentUnitIDListForBuffIcon(Helper_FactionBuff.FactionBuffType _eType);
    /*0xe423f0*/ int[] GetCurrentAllyUnitIDList();
    /*0xe42604*/ int[] GetCurrentEnemyUnitIDList();
    /*0xe42818*/ System.Collections.Generic.List<UnitSpawnInfo> GetCurrentUnitSpawnInfoList(bool _bPlayer);
    /*0xe42830*/ UnitSpawnInfo GetCurrentUnitSpawnInfo(bool _bPlayer, int _nIndex);
    /*0xe3ebe0*/ void SetCurrentStageBattleData(int _nBattleID);
    /*0xe3e878*/ void SetRandomSeed(int _nRandomSeed);
    /*0xe428cc*/ void SetCurrentStatBonus_VS(PTShare.Define.SStatBonus _statBonus);
    /*0xe3ebd8*/ void SetCurrentStatBonus_My(PTShare.Define.SStatBonus _statBonus);
    /*0xe41f68*/ PTShare.Define.SStatBonus GetCurrentStatBonusForBattle(bool _bAlly);
    /*0xe42914*/ PTShare.Define.SStatBonus GetCurrentStatBonusForTroop(bool _bAlly);
    /*0xe42a14*/ PTShare.Define.SStatBonus GetCurrentStatBonus(bool _bAlly);
    /*0xe428d4*/ PTShare.Define.SStatBonus GetCurrentStatBonusWithGameMode(bool _bAlly, Battle.GameModeType _eGameMode);
    /*0xe42aa4*/ void SetTotalPower(string _sTotalPowerAlly, string _sTotalPowerEnemy);
    /*0xe41fac*/ void SetTotalPower(long _lTotalPowerAlly, long _lTotalPowerEnemy);
    /*0xe42aac*/ long GetTotalPower(bool _bPlayer);
    /*0xe2ef50*/ string GetTotalPower_String(bool _bPlayer);
    /*0xe42ac4*/ void SetCurrentArenaTarget(ArenaTargetUser _arenaTargetUser);
    /*0xe42ad0*/ ArenaTargetUser GetCurrentArenaTarget();
    /*0xe41f60*/ void SetCurrentStageReplayData(string _sData);
    /*0xe42adc*/ void SetAllyProfileInfo(PlayerProfileInfo _profileInfo);
    /*0xe42af0*/ PlayerProfileInfo GetAllyProfileInfo();
    /*0xe42b04*/ void SetEnemyProfileInfo(PlayerProfileInfo _profileInfo);
    /*0xe42b24*/ PlayerProfileInfo GetEnemyProfileInfo();
    /*0xe42b44*/ void SetAllyNickname(string _sNickname);
    /*0xe42b4c*/ void SetEnemyNickname(string _sNickname);
    /*0xe42b54*/ string GetEnemyNickname();
    /*0xe42b5c*/ string GetAllyNickname();
    /*0xe4219c*/ void SetAllyUnitInfoListWithSelectList(Battle.HeroSelectValue[] _arrHeroSelect);
    /*0xe3f2d4*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SHero> _lisSHero, bool _bAlly);
    /*0xe42b64*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe3fda4*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, bool _bAlly);
    /*0xe3ff2c*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, System.Collections.Generic.List<int> _liBlinds, bool _bAlly);
    /*0xe42cec*/ void SetUnitSpawnInfoList_WorldBoss(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe42e7c*/ void SetUnitSpawnInfoList_ForPveRanking(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, bool _bAlly);
    /*0xe43004*/ void SetUnitSpawnInfoList_ForPveRanking(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe4318c*/ void SetUnitSpawnInfoList_WorldBoss(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisSBattleHero, bool _bAlly);
    /*0xe4331c*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisSCondisionHero, bool _bAlly);
    /*0xe40250*/ void SetUnitSpawnInfoListForMaze(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisSCondisionHero, bool _bAlly);
    /*0xe434a4*/ void SetUnitSpawnInfoListForMaze(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly);
    /*0xe408dc*/ void SetUnitSpawnInfoList_ForDungeon(System.Collections.Generic.List<PTShare.Define.SConditionHero> _lisSCondisionHero, bool _bAlly);
    /*0xe43630*/ void SetUnitSpawnInfoList_ForDungeon(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisSVerifyHero, bool _bAlly, int _nDungeonID, int _nDungeonLV);
    /*0xe438e8*/ void CreateEmptyEnemyUnitSpawnInfoList();
    /*0xe3ec0c*/ System.Collections.Generic.List<UnitSpawnInfo> SetEnemyUnitSpawnInfoListWithStageData(Battle.GameModeType _eGameMode, bool _bOverrideInfo);
    /*0xe41d74*/ void UpdateAllyUnitSpawnDataWithStageData();
    /*0xe43a28*/ void SetCurrentBattleState(Battle.BattleStateType _eStateType);
    /*0xe43a30*/ int GetFakeStageDataLevel(TableData.TableData_Stagebattle _stageBattleData, int _nUnitID, int _nUnitLV, int _nUnitGrade);
    /*0xe43b0c*/ int GetFakeStageDataLevel(int _nUnitID, int _nUnitLV, int _nUnitGrade);
    /*0xe43b24*/ int GetFakeMazeDataLevel(int _nIndex);
    /*0xe43b74*/ long GetFakeStageDataCP(TableData.TableData_Stagebattle _stageBattleData);
    /*0xe43d50*/ long GetFakeStageDataCP();
    /*0xe43d94*/ long GetFakeMazeDataCP(System.Collections.Generic.List<int> _lisUnitID);
    /*0xe41d44*/ bool CheckUseStageData();
    /*0xe4206c*/ DataStorage.DATA_BATTLE.TroopModeType ConvertGameModeToTroopMode(Battle.GameModeType _eGameMode);
    /*0xe43f98*/ System.Collections.Generic.List<UnitSpawnInfo> FindUnitStageByTableID(int _index);
    /*0xe3f9b8*/ Battle.GameModeType GetGameModeWithCurrentStageData();
    /*0xe44608*/ void ChangeForegroundImageMatchStage(UnityEngine.UI.Image _image, Battle.GameModeType _eGameMode);
    /*0xe446c0*/ UnityEngine.Sprite GetChapterBGSpriteWithGameMode(Battle.GameModeType _eGameMode);
    /*0xe3e0ac*/ string GetChapterBackgroundNameWithCurrentGameMode();
    /*0xe447e4*/ string GetChapterBackgroundName(Battle.GameModeType _eGameMode);
    /*0xe4493c*/ HeroTroopPopup_GuildWar get_CurrentTroopPopup_GuildBattle();
    /*0xe44944*/ void set_CurrentTroopPopup_GuildBattle(HeroTroopPopup_GuildWar value);
    /*0xe4494c*/ int get_CurrentFormationID_Ally();
    /*0xe44954*/ void set_CurrentFormationID_Ally(int value);
    /*0xe4495c*/ int get_CurrentFormationID_Enemy();
    /*0xe44964*/ void set_CurrentFormationID_Enemy(int value);
    /*0xe4496c*/ System.Collections.Generic.List<int> get_CurrentFormationList_VS();
    /*0xe44974*/ void set_CurrentFormationList_VS(System.Collections.Generic.List<int> value);
    /*0xe4497c*/ System.Collections.Generic.List<int> get_CurrentFormationList_My();
    /*0xe44984*/ void set_CurrentFormationList_My(System.Collections.Generic.List<int> value);
    /*0xe4498c*/ System.Collections.Generic.List<int> get_RandomUnitIDList();
    /*0xe44994*/ void set_RandomUnitIDList(System.Collections.Generic.List<int> value);
    /*0xe4499c*/ int get_CurrentGuildWarMyProfileUnitID();
    /*0xe449a4*/ void set_CurrentGuildWarMyProfileUnitID(int value);
    /*0xe449ac*/ int get_CurrentGuildWarAttackCaptainID();
    /*0xe449b4*/ void set_CurrentGuildWarAttackCaptainID(int value);
    /*0xe449bc*/ int get_CurrentGuildWarDefenseCaptainID();
    /*0xe449c4*/ void set_CurrentGuildWarDefenseCaptainID(int value);
    /*0xe449cc*/ int get_CurrentMaxCPSupportUnitSkinID_Ally();
    /*0xe449d4*/ void set_CurrentMaxCPSupportUnitSkinID_Ally(int value);
    /*0xe449dc*/ int get_CurrentMaxCPSupportUnitSkinID_Enemy();
    /*0xe449e4*/ void set_CurrentMaxCPSupportUnitSkinID_Enemy(int value);
    /*0xe449ec*/ int get_CurrentGuildWarMyUnitID();
    /*0xe449f4*/ void set_CurrentGuildWarMyUnitID(int value);
    /*0xe449fc*/ int get_CurrentGuildBattleUnitCount_Ally();
    /*0xe44a04*/ void set_CurrentGuildBattleUnitCount_Ally(int value);
    /*0xe44a0c*/ int get_CurrentGuildBattleUnitCount_Enemy();
    /*0xe44a14*/ void set_CurrentGuildBattleUnitCount_Enemy(int value);
    /*0xe44a1c*/ System.Collections.Generic.Dictionary<int, string> get_CurrentGuildWarNicknameDic_Ally();
    /*0xe44a24*/ void set_CurrentGuildWarNicknameDic_Ally(System.Collections.Generic.Dictionary<int, string> value);
    /*0xe44a2c*/ System.Collections.Generic.Dictionary<int, string> get_CurrentGuildWarNicknameDic_Enemy();
    /*0xe44a34*/ void set_CurrentGuildWarNicknameDic_Enemy(System.Collections.Generic.Dictionary<int, string> value);
    /*0xe44a3c*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> get_CurrentGuildWarBonusStatDic_Ally();
    /*0xe44a44*/ void set_CurrentGuildWarBonusStatDic_Ally(System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> value);
    /*0xe44a4c*/ System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> get_CurrentGuildWarBonusStatDic_Enemy();
    /*0xe44a54*/ void set_CurrentGuildWarBonusStatDic_Enemy(System.Collections.Generic.Dictionary<int, PTShare.Define.SStatBonus> value);
    /*0xe44a5c*/ string get_CurrentGuildWarUniqueIDs();
    /*0xe44a64*/ void set_CurrentGuildWarUniqueIDs(string value);
    /*0xe44a6c*/ ServerProtocol.ResGuildWarFinish get_CurrentResGuildWarFinish();
    /*0xe44a74*/ void set_CurrentResGuildWarFinish(ServerProtocol.ResGuildWarFinish value);
    /*0xe44a7c*/ void GoToBattleSceneForGuildWar(ServerProtocol.ResGuildWarChoice _resGuildWarChoice);
    /*0xe45004*/ int get_GuildWarTest_GetVSCaptianProfileID();
    /*0xe45020*/ void GoToBattleSceneForGuildWarTest();
    /*0xe2f4cc*/ void StartReplayGuildWar();
    /*0xe452f8*/ void StartGuildWarResult();
    /*0xe4530c*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSupportSpawnInfo_Ally();
    /*0xe45314*/ void set_CurrentSupportSpawnInfo_Ally(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe4531c*/ System.Collections.Generic.List<UnitSpawnInfo> get_CurrentSupportSpawnInfo_Enemy();
    /*0xe45324*/ void set_CurrentSupportSpawnInfo_Enemy(System.Collections.Generic.List<UnitSpawnInfo> value);
    /*0xe4532c*/ System.Collections.Generic.List<bool> get_CurrentSupportSlotUseInfo_Ally();
    /*0xe45334*/ void set_CurrentSupportSlotUseInfo_Ally(System.Collections.Generic.List<bool> value);
    /*0xe4533c*/ System.Collections.Generic.List<bool> get_CurrentSupportSlotUseInfo_Enemy();
    /*0xe45344*/ void set_CurrentSupportSlotUseInfo_Enemy(System.Collections.Generic.List<bool> value);
    /*0xe4534c*/ void SetGuildWarHeroListForVerify(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisHero, bool _bAlly);
    /*0xe45990*/ void SetGuildWarHeroListForReplay(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisHero, bool _bAlly);
    /*0xe44e7c*/ void SetGuildWarHeroListForBattle(bool _bAlly, System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero);
    /*0xe45b18*/ void SetUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisSHero, bool _bAlly);
    /*0xe45fe0*/ void SetSupportUnitSpawnInfoList(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisSHero, bool _bAlly);
    /*0xe464a4*/ System.Collections.Generic.List<UnitSpawnInfo> GetCurrentSupportUnitSpawnInfoList(bool _bPlayer);
    /*0xe457f0*/ void SetSpawnUnitListWithGuildWarHeros(bool _bAlly);
    /*0xe464bc*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> get_CurrentSGuildWarHero_Ally();
    /*0xe464c4*/ void set_CurrentSGuildWarHero_Ally(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> value);
    /*0xe464cc*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> get_CurrentSGuildWarHero_Enemy();
    /*0xe464d4*/ void set_CurrentSGuildWarHero_Enemy(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> value);
    /*0xe454e4*/ void SetGuildWarHeroList(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _list, bool _bPlayer);
    /*0xe45e90*/ PTShare.Define.SGuildWarHero FindGuildWarHero(int _nHeroID, long _lPlayerID, bool _bPlayer);
    /*0xe464dc*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> FindGuildWarHeroListWithProperty(PropertyType _eProperty);
    /*0xe465dc*/ void SetGuildWarNicknameForReplayGraph(System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero, bool _bAlly);
    /*0xe44ba4*/ void SetGuildWarStatBonusAndNickname(System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero, bool _bAlly);
    /*0xe46730*/ void SetGuildWarNickname_GuildWarTest(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisHero, System.Collections.Generic.List<PTShare.Define.SStatBonusHero> _lisStatBonus, bool _bAlly);
    /*0xe46b30*/ void SetGuildWarStatBonusForVerify(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _lisHero, bool _bAlly);
    /*0xe46c84*/ string FindGuildWarNicknameWithUnitID(int _nUnitID, bool _bAlly);
    /*0xe463e0*/ PTShare.Define.SStatBonus FindGuildWarStatBonusWithUnitID(int _nUnitID, bool _bAlly);
    /*0xe46df4*/ void ChangeForegroundImageMatchStage_ForGuildBattle(UnityEngine.UI.Image _image, bool _bSupportView);
    /*0xe46fac*/ void SetFormation(System.Collections.Generic.List<int> _lisFormation, int _nFormationID, bool _bPlayer);
    /*0xe46fd4*/ void SetFormation(int _nFormationID, bool _bPlayer);
    /*0xe37e2c*/ void SetGuildBattleUnitCount();
    /*0xe47174*/ int DiscountGuildBattleUnitCount(bool _bAlly);
    /*0xe38094*/ int GetCurrentGuildBattleUnitCount(bool _bAlly);
    /*0xe4719c*/ BattleStageManager.GuildWarMVPInfo get_CurrentGuildWarMVPInfo();
    /*0xe471b0*/ void set_CurrentGuildWarMVPInfo(BattleStageManager.GuildWarMVPInfo value);
    /*0xe471c4*/ PTShare.Define.SGuildWarHistory get_CurrentGuildWarHistory();
    /*0xe471cc*/ void set_CurrentGuildWarHistory(PTShare.Define.SGuildWarHistory value);
    /*0xe471d4*/ BattleStageManager.GuildWarGuildInfo get_CurrentGuildWarGuildInfo_Ally();
    /*0xe471e8*/ void set_CurrentGuildWarGuildInfo_Ally(BattleStageManager.GuildWarGuildInfo value);
    /*0xe471fc*/ BattleStageManager.GuildWarGuildInfo get_CurrentGuildWarGuildInfo_Enemy();
    /*0xe47214*/ void set_CurrentGuildWarGuildInfo_Enemy(BattleStageManager.GuildWarGuildInfo value);
    /*0xe46d40*/ bool get_GuildWar_AllyIsAttacker();
    /*0xe4722c*/ double get_GW_CurrentMaxValueDamage_Ally();
    /*0xe47234*/ void set_GW_CurrentMaxValueDamage_Ally(double value);
    /*0xe4723c*/ double get_GW_CurrentMaxValueHit_Ally();
    /*0xe47244*/ void set_GW_CurrentMaxValueHit_Ally(double value);
    /*0xe4724c*/ double get_GW_CurrentMaxValueHeal_Ally();
    /*0xe47254*/ void set_GW_CurrentMaxValueHeal_Ally(double value);
    /*0xe4725c*/ double get_GW_CurrentMaxValueDamage_Enemy();
    /*0xe47264*/ void set_GW_CurrentMaxValueDamage_Enemy(double value);
    /*0xe4726c*/ double get_GW_CurrentMaxValueHit_Enemy();
    /*0xe47274*/ void set_GW_CurrentMaxValueHit_Enemy(double value);
    /*0xe4727c*/ double get_GW_CurrentMaxValueHeal_Enemy();
    /*0xe47284*/ void set_GW_CurrentMaxValueHeal_Enemy(double value);
    /*0xe2fc10*/ double get_GW_CurrentMaxValueDamage();
    /*0xe2fc24*/ double get_GW_CurrentMaxValueHit();
    /*0xe2fc38*/ double get_GW_CurrentMaxValueHeal();
    /*0xe4728c*/ System.Collections.Generic.List<Battle.BattleGraphValue> get_GW_CurrentGraphList_Ally();
    /*0xe47294*/ void set_GW_CurrentGraphList_Ally(System.Collections.Generic.List<Battle.BattleGraphValue> value);
    /*0xe4729c*/ System.Collections.Generic.List<Battle.BattleGraphValue> get_GW_CurrentGraphList_Enemy();
    /*0xe472a4*/ void set_GW_CurrentGraphList_Enemy(System.Collections.Generic.List<Battle.BattleGraphValue> value);
    /*0xe45280*/ void SetGuildWarGuildInfos(int _nEmblemID, int _nFrameID, int _nLevel, string _sGuildName, bool _bAlly);
    /*0xe472ac*/ void SetGuildWarReplayDatasWithHistory(PTShare.Define.SGuildWarHistory _history);
    /*0xe2f560*/ void SetGuildWarReplayDatas(ServerProtocol.ResGuildWarReplay _replayData);
    /*0xe47ca4*/ void SortBattleGraphValueAndSelectMVP(bool _bAlly, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValue, bool _bSetMVPInfo);
    /*0xe48268*/ TableData.TableData_Pvechallenge get_CurrentPveChallengeData();
    /*0xe48270*/ void set_CurrentPveChallengeData(TableData.TableData_Pvechallenge value);
    /*0xe48278*/ int get_CurrentPveRankingDifficulty();
    /*0xe48280*/ void set_CurrentPveRankingDifficulty(int value);
    /*0xe48288*/ void GoToBattleSceneForPVE(int _nChallengeID, int _nChallengeLV, int _nDifficulty);
    /*0xe3e8d0*/ void Send_PveRanking(string _sHeroIDs, System.Action<ServerProtocol.ResPveRankingBegin> _res);
    /*0xe483ec*/ void SetEnemyUnitSpawnInfoListWithPVEChallengeData();
    /*0xe48ec4*/ void GoToBattleSceneForWorldBoss();
    /*0xe48f18*/ void GoToBattleSceneForWorldBoss(int bossId, int bossLevel, int bossGrade, long damage);
    /*0xe493bc*/ void <StartBattleFromBattleScene>b__111_7();
    /*0xe49418*/ void <StartBattleFromBattleScene>b__111_8();
    /*0xe49474*/ void <StartBattleFromBattleScene>b__111_1();
    /*0xe494d0*/ void <StartBattleFromBattleScene>b__111_2(int randomSeed);
    /*0xe49544*/ void <StartBattleFromBattleScene>b__111_3(int randomSeed, System.Collections.Generic.List<PTShare.Define.SBattleHero> sBattleHeroList);
    /*0xe495b8*/ void <StartBattleFromBattleScene>b__111_4(int randomSeed, System.Collections.Generic.List<PTShare.Define.SBattleHero> sBattleHeroList);
    /*0xe4962c*/ void <StartBattleFromBattleScene>b__111_5(int randomSeed);
    /*0xe496a0*/ void <StartBattleFromBattleScene>b__111_6(ServerProtocol.ResPveRankingBegin res);
    /*0xe49728*/ void <GoToBattleSceneForFriendBattle>b__120_0(ServerProtocol.ResAccountDetail response);
    /*0xe497c4*/ void <StartVerify_Server>b__125_0(ServerProtocol.ResAdminVerifyBegin res);
    /*0xe49854*/ void <StartVerify_Server>b__125_1(int resFail, string args);
    /*0xe40db4*/ void <StartVerify_Server>g__StartVerify|125_2(PTShare.Define.SReplay _replayData);
    /*0xe49970*/ void <UpdateAllyUnitSpawnDataWithStageData>b__180_1(UnitSpawnInfo f);
    /*0xe43dd8*/ long <GetFakeMazeDataCP>g__CalcFakeCP|187_0(ref BattleStageManager.<> );
    /*0xe499ac*/ void <GoToBattleSceneForGuildWarTest>b__280_0(ServerProtocol.ResGuildWarDeck res);
    /*0xe49adc*/ void <GoToBattleSceneForGuildWarTest>b__280_1(ServerProtocol.ResGuildWarDeck res2);
    /*0xe47b48*/ long <SetGuildWarReplayDatasWithHistory>g__SetTotalPowerWithGuildWarHeros|390_1(System.Collections.Generic.List<PTShare.Define.SGuildWarBattleHero> _lisHero, bool _bAlly);

    struct GuildWarMVPInfo
    {
        /*0x10*/ PTShare.Define.SHero sHero;
        /*0x18*/ string nickname;
        /*0x20*/ int skinID;
    }

    struct GuildWarGuildInfo
    {
        /*0x10*/ int emblemID;
        /*0x14*/ int frameID;
        /*0x18*/ int level;
        /*0x20*/ string guildName;

        /*0xa828dc*/ GuildWarGuildInfo(int _nEmblemID, int _nFrameID, int _nLevel, string _sGuildName);
    }

    class <>c
    {
        static /*0x0*/ BattleStageManager.<> <>9;
        static /*0x8*/ System.Action<int> <>9__111_0;
        static /*0x10*/ System.Func<UnitSpawnInfo, bool> <>9__137_0;
        static /*0x18*/ System.Func<UnitSpawnInfo, int> <>9__137_1;
        static /*0x20*/ System.Func<UnitSpawnInfo, bool> <>9__138_0;
        static /*0x28*/ System.Func<UnitSpawnInfo, int> <>9__138_1;
        static /*0x30*/ System.Converter<PTShare.Define.SHero, UnitSpawnInfo> <>9__165_0;
        static /*0x38*/ System.Func<int, PTShare.Define.SEquip> <>9__179_0;
        static /*0x40*/ System.Func<UnitSpawnInfo, bool> <>9__180_0;
        static /*0x48*/ System.Converter<PTShare.Define.SGuildWarHero, UnitSpawnInfo> <>9__302_0;
        static /*0x50*/ System.Func<PTShare.Define.SGuildWarHero, int> <>9__316_0;
        static /*0x58*/ System.Func<PTShare.Define.SGuildWarHero, System.ValueTuple<int, long>> <>9__316_1;
        static /*0x60*/ System.Func<PTShare.Define.SGuildWarHero, System.ValueTuple<int, long>> <>9__316_2;
        static /*0x68*/ System.Predicate<PTShare.Define.SGuildWarBattleHero> <>9__390_0;
        static /*0x70*/ System.Comparison<PTShare.Define.SGuildWarBattleHero> <>9__390_3;
        static /*0x78*/ System.Func<char, bool> <>9__404_1;

        static /*0xda17d0*/ <>c();
        /*0xda1830*/ <>c();
        /*0xda1838*/ void <StartBattleFromBattleScene>b__111_0(int randomSeed);
        /*0xda1894*/ bool <GetCurrentAllyUnitIDList>b__137_0(UnitSpawnInfo w);
        /*0xda18a0*/ int <GetCurrentAllyUnitIDList>b__137_1(UnitSpawnInfo s);
        /*0xda18b8*/ bool <GetCurrentEnemyUnitIDList>b__138_0(UnitSpawnInfo w);
        /*0xda18c4*/ int <GetCurrentEnemyUnitIDList>b__138_1(UnitSpawnInfo s);
        /*0xda18dc*/ UnitSpawnInfo <SetUnitSpawnInfoList>b__165_0(PTShare.Define.SHero s);
        /*0xda1948*/ PTShare.Define.SEquip <SetEnemyUnitSpawnInfoListWithStageData>b__179_0(int s);
        /*0xda19a8*/ bool <UpdateAllyUnitSpawnDataWithStageData>b__180_0(UnitSpawnInfo w);
        /*0xda19b4*/ UnitSpawnInfo <SetUnitSpawnInfoList>b__302_0(PTShare.Define.SGuildWarHero s);
        /*0xda1a20*/ int <SetGuildWarHeroList>b__316_0(PTShare.Define.SGuildWarHero x);
        /*0xda1a38*/ System.ValueTuple<int, long> <SetGuildWarHeroList>b__316_1(PTShare.Define.SGuildWarHero x);
        /*0xda1aa8*/ System.ValueTuple<int, long> <SetGuildWarHeroList>b__316_2(PTShare.Define.SGuildWarHero x);
        /*0xda1b18*/ bool <SetGuildWarReplayDatasWithHistory>b__390_0(PTShare.Define.SGuildWarBattleHero x);
        /*0xda1bb4*/ int <SetGuildWarReplayDatasWithHistory>b__390_3(PTShare.Define.SGuildWarBattleHero a, PTShare.Define.SGuildWarBattleHero b);
        /*0xda1be0*/ bool <SetEnemyUnitSpawnInfoListWithPVEChallengeData>b__404_1(char w);
    }

    class <>c__DisplayClass125_0
    {
        /*0x10*/ string modeInfo;

        /*0xda1c10*/ <>c__DisplayClass125_0();
        /*0xda1c18*/ bool <StartVerify_Server>b__3(TableData.TableData_Guildboss x);
    }

    class <>c__DisplayClass166_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1c50*/ <>c__DisplayClass166_0();
        /*0xda1c58*/ void <SetUnitSpawnInfoList>b__0(PTShare.Define.SVerifyHero _hero);
    }

    class <>c__DisplayClass167_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1d08*/ <>c__DisplayClass167_0();
        /*0xda1d10*/ void <SetUnitSpawnInfoList>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass169_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1dc4*/ <>c__DisplayClass169_0();
        /*0xda1dcc*/ void <SetUnitSpawnInfoList_WorldBoss>b__0(PTShare.Define.SVerifyHero _hero);
    }

    class <>c__DisplayClass170_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1e7c*/ <>c__DisplayClass170_0();
        /*0xda1e84*/ void <SetUnitSpawnInfoList_ForPveRanking>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass171_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1f38*/ <>c__DisplayClass171_0();
        /*0xda1f40*/ void <SetUnitSpawnInfoList_ForPveRanking>b__0(PTShare.Define.SVerifyHero _hero);
    }

    class <>c__DisplayClass172_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda1ff0*/ <>c__DisplayClass172_0();
        /*0xda1ff8*/ void <SetUnitSpawnInfoList_WorldBoss>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass173_0
    {
        /*0x10*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda20ac*/ <>c__DisplayClass173_0();
        /*0xda20b4*/ void <SetUnitSpawnInfoList>b__0(PTShare.Define.SConditionHero _hero);
    }

    class <>c__DisplayClass174_0
    {
        /*0x10*/ bool _bAlly;
        /*0x18*/ BattleStageManager <>4__this;
        /*0x20*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda2164*/ <>c__DisplayClass174_0();
        /*0xda216c*/ void <SetUnitSpawnInfoListForMaze>b__0(PTShare.Define.SConditionHero _hero);
    }

    class <>c__DisplayClass175_0
    {
        /*0x10*/ bool _bAlly;
        /*0x18*/ BattleStageManager <>4__this;
        /*0x20*/ System.Collections.Generic.List<UnitSpawnInfo> list;

        /*0xda22c0*/ <>c__DisplayClass175_0();
        /*0xda22c8*/ void <SetUnitSpawnInfoListForMaze>b__0(PTShare.Define.SVerifyHero _hero);
    }

    struct <>c__DisplayClass185_0
    {
        /*0x10*/ TableData.TableData_Stagebattle _stageBattleData;
    }

    struct <>c__DisplayClass187_0
    {
        /*0x10*/ BattleStageManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<int> _lisUnitID;
    }

    struct <>c__DisplayClass190_0
    {
        /*0x10*/ TableData.TableData_Stagebattle tStageBattle;
    }

    class <>c__DisplayClass302_0
    {
        /*0x10*/ int slotCount;
        /*0x18*/ System.Predicate<PTShare.Define.SGuildWarHero> <>9__1;

        /*0xda241c*/ <>c__DisplayClass302_0();
        /*0xda2424*/ bool <SetUnitSpawnInfoList>b__1(PTShare.Define.SGuildWarHero x);
    }

    class <>c__DisplayClass303_0
    {
        /*0x10*/ int i;

        /*0xda2448*/ <>c__DisplayClass303_0();
        /*0xda2450*/ bool <SetSupportUnitSpawnInfoList>b__0(PTShare.Define.SGuildWarHero x);
    }

    class <>c__DisplayClass318_0
    {
        /*0x10*/ PropertyType _eProperty;

        /*0xda2474*/ <>c__DisplayClass318_0();
        /*0xda247c*/ bool <FindGuildWarHeroListWithProperty>b__0(PTShare.Define.SGuildWarHero x);
    }

    class <>c__DisplayClass321_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisHero;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__0;

        /*0xda24a0*/ <>c__DisplayClass321_0();
        /*0xda24a8*/ bool <SetGuildWarNickname_GuildWarTest>b__0(PTShare.Define.SStatBonusHero x);
    }

    class <>c__DisplayClass392_0
    {
        /*0x10*/ double totalValueDamage;
        /*0x18*/ double totalValueHit;
        /*0x20*/ bool _bAlly;
        /*0x28*/ double totalCountKills;

        /*0xda2538*/ <>c__DisplayClass392_0();
        /*0xda2540*/ int <SortBattleGraphValueAndSelectMVP>b__0(Battle.BattleGraphValue a, Battle.BattleGraphValue b);
        /*0xda2588*/ double <SortBattleGraphValueAndSelectMVP>g__GetScore|1(Battle.BattleGraphValue _graphValue);
    }
}

class InGameController : Singleton.Component.SingletonComponent<InGameController>
{
    static /*0x0*/ long m_nUniqueNumberCount;
    static /*0x8*/ int UpdateCount;
    static /*0xc*/ int CurrentUpdateCount;
    static /*0x10*/ int m_nRandomSeed;
    static /*0x18*/ System.Random m_RandomClass;
    static /*0x20*/ System.Action OnCallSpawnUnits;
    static /*0x28*/ System.Action OnInitializeUI;
    static /*0x30*/ System.Action OnInitializeComplete;
    static /*0x38*/ System.Action<bool> OnChangeSpriteActive;
    static /*0x40*/ System.Action<bool, int> OnTouchSkillEnable;
    static /*0x48*/ System.Action<float> OnChangeTime;
    static /*0x50*/ System.Action OnGameEnd;
    static /*0x58*/ Battle.BattleSpeedType <GameSpeedType>k__BackingField;
    static /*0x5c*/ float <GameSpeedPerFrame_Origin>k__BackingField;
    static /*0x60*/ CFloat <GameSpeedMult>k__BackingField;
    static /*0x68*/ float <DeltaTimeMult>k__BackingField;
    static /*0x6c*/ float <DeltaTimeMultOrigin>k__BackingField;
    /*0x24*/ float <CameraSizeOrigin>k__BackingField;
    /*0x28*/ float <CameraSizeOrigin_Idle>k__BackingField;
    /*0x30*/ System.Collections.Generic.List<int> m_lisCollisionUnitIndex;
    /*0x38*/ System.Collections.Generic.List<int> m_listRandomTargetIndex;
    /*0x40*/ System.Collections.Generic.List<System.ValueTuple<float, int>> m_lisCollisionUnitValue;
    /*0x48*/ System.Collections.Generic.List<float> m_lisTargetPosition;
    /*0x50*/ System.Collections.Generic.List<CharacterBase> m_lisCheckTargetCollider;
    /*0x58*/ System.Collections.Generic.List<CharacterBase> m_lisCheckTargetTargetType2;
    /*0x60*/ float <DPS_Time>k__BackingField;
    /*0x68*/ long <DPS_MaxDamage>k__BackingField;
    /*0x70*/ long <DPS_TotalDamage>k__BackingField;
    /*0x78*/ long <DPS_TotalDamage_ATK>k__BackingField;
    /*0x80*/ long <DPS_TotalDamage_ULT>k__BackingField;
    /*0x88*/ long <DPS_TotalDamage_SP01>k__BackingField;
    /*0x90*/ long <DPS_TotalDamage_SP02>k__BackingField;
    /*0x98*/ long <DPS_TotalDamage_SP03>k__BackingField;
    /*0xa0*/ int DPS_RecentSecond;
    /*0xa4*/ float CurrentGuildWarSupportInitMP;
    /*0xa8*/ float m_fGuildWarSupportAddMPCooltime;
    /*0xb0*/ System.Collections.Generic.List<ProjectileBase> <Projectiles>k__BackingField;
    /*0xb8*/ System.Collections.Generic.List<ParticleBase> <Particles>k__BackingField;
    /*0xc0*/ System.Collections.Generic.List<ParticleBase> <Particles_Sync>k__BackingField;
    /*0xc8*/ System.Collections.Generic.List<DamageMarker> <DamageMarkers>k__BackingField;
    /*0xd0*/ System.Collections.Generic.List<DropCoin> <DropCoins>k__BackingField;
    /*0xd8*/ System.Collections.Generic.List<BossDropItem> <BossDropItems>k__BackingField;
    /*0xe0*/ double <GuildBossTotalHitDamage>k__BackingField;
    /*0xe8*/ UnityEngine.Camera m_MainCam;
    /*0xf0*/ UnityEngine.Vector3 m_CameraPosOrigin;
    /*0x100*/ System.Collections.Generic.List<CharacterBase> Units_All_Current;
    /*0x108*/ System.Collections.Generic.List<CharacterBase> Units_Allies_Current;
    /*0x110*/ System.Collections.Generic.List<CharacterBase> Units_Enemies_Current;
    /*0x118*/ System.Collections.Generic.List<CharacterBase> Units_All_Main;
    /*0x120*/ System.Collections.Generic.List<CharacterBase> Units_Allies_Main;
    /*0x128*/ System.Collections.Generic.List<CharacterBase> Units_Enemies_Main;
    /*0x130*/ CharacterBase m_GuildHuntBoss;
    /*0x138*/ CharacterBase m_LastSurviveUnit;
    /*0x140*/ float m_fColliderCheckDelay;
    /*0x144*/ int i;
    /*0x148*/ System.Collections.Generic.List<UnityEngine.Vector3> m_vecSpawnEnemy;
    /*0x150*/ bool m_bSpawnDemoUnitSwitch;
    /*0x158*/ InGameController.GuildBattleSupportInfo m_SupportInfoAlly;
    /*0x160*/ InGameController.GuildBattleSupportInfo m_SupportInfoEnemy;
    /*0x168*/ int CheatDemoUnitLevel;
    /*0x170*/ System.Collections.Generic.List<UnitSpawnInfo> tmp_lisUnitIdleEnemy;
    /*0x178*/ UnityEngine.Vector2 tmp_vecSpawnPos;
    /*0x180*/ CharacterBase tmp_Character;
    /*0x188*/ int tmp_nUnitID;
    /*0x18c*/ int tmp_nUnitLV;
    /*0x190*/ int tmp_nIndex;
    /*0x194*/ Battle.InGameStateType <CurGameState>k__BackingField;
    /*0x198*/ Battle.InGameStateType <PrevGameState>k__BackingField;
    /*0x1a0*/ InGameState m_CurGameState;
    /*0x1a8*/ InGameState m_PrevGameState;
    /*0x1b0*/ System.Collections.Generic.Dictionary<Battle.InGameStateType, InGameState> m_dicInGameState;
    /*0x1b8*/ CInt <CheatEncrypt_Verify>k__BackingField;
    /*0x1c0*/ CString <OriginGraphData>k__BackingField;
    /*0x1c8*/ BattleSystemInit <CurrentBattleSystemInit>k__BackingField;
    /*0x1d0*/ BattleSceneManager m_CurrentBattleSceneManager;
    /*0x1d8*/ System.Collections.Generic.List<Battle.BattleGraphValue> m_lisGraphValue;
    /*0x1e0*/ System.Collections.Generic.List<Battle.BattleGraphValue> m_lisGraphValue_ArenaSimulation;
    /*0x1e8*/ System.Collections.Generic.List<int> m_lisSkillRecord;
    /*0x1f0*/ int m_nCurSkillRecordIndex;
    /*0x1f4*/ float m_fGameSpeedTmp;
    /*0x1f8*/ float m_fCurTotalDeltaTime;
    /*0x1fc*/ float m_fCurPauseTime;
    /*0x200*/ float m_fCurCasterPauseTime;
    /*0x204*/ float m_fCurSkillFadeTime;
    /*0x208*/ CFloat m_fCurLimitTime;
    /*0x210*/ float m_fCurPlayTime;
    /*0x214*/ float m_fCurEnemyWaveCD_Ally;
    /*0x218*/ float m_fCurEnemyWaveCD_Enemy;
    /*0x21c*/ float m_fCurBattleResultDelay;
    /*0x220*/ float m_fCurEndToIdleDelay;
    /*0x228*/ CInt m_nCurBattleWin;
    /*0x230*/ bool m_bCheckEndToIdleDelay;
    /*0x231*/ bool m_bAutoTmp;
    /*0x234*/ int m_nSkillPauseCount;
    /*0x238*/ System.Collections.Generic.List<float> m_lisSoundPlayDelay;
    /*0x240*/ System.Collections.Generic.List<Battle.SoundDelayInfo> m_lisSoundPlayDelayInfo;
    /*0x248*/ System.Collections.Generic.List<int> m_lisSoundDelayDeleteIndex;
    /*0x250*/ float m_fVerifyGameSpeed;
    /*0x254*/ int m_nCurrentVerifyCount;
    /*0x258*/ bool m_bDefeatSlowMotion;
    /*0x260*/ System.Action OnChangeGameSpeed;
    /*0x268*/ System.Action<CharacterBase, bool> OnPauseGame;
    /*0x270*/ System.Action<bool> OnPauseGame_PasuePopup;
    /*0x278*/ System.Action <OnEndPause>k__BackingField;
    /*0x280*/ System.Action OnSyncUpdate;
    /*0x288*/ System.Action OnGameStart;
    /*0x290*/ System.Action OnGameExit;
    /*0x298*/ System.Action<CharacterBase> OnUnitDeath;
    /*0x2a0*/ System.Action<CharacterBase> OnAddBuff;
    /*0x2a8*/ System.Action<CharacterBase> OnAddBuff_CC;
    /*0x2b0*/ System.Action<CharacterBase, float> OnHealHP;
    /*0x2b8*/ System.Action<Battle.BattleGraphType, int> OnAddBattleGraph;
    /*0x2c0*/ ParticleBase m_SkillCutsceneParticle;
    /*0x2c8*/ KillCutscene m_KillCutscene;
    /*0x2d0*/ SupportCutScene m_SupportCutScene;
    /*0x2d8*/ System.Collections.Generic.List<bool> <IsTouchSkillEnable>k__BackingField;
    /*0x2e0*/ System.Collections.Generic.List<CharacterBase> m_lisTouchSkillUnit;
    /*0x2e8*/ BattleMainWindow <CurrentBattleMainWindow>k__BackingField;
    /*0x2f0*/ BattleMainWindow_GuildWar <CurrentBattleMainWindow_GuildBattle>k__BackingField;
    /*0x2f8*/ long m_lGuildBossStepUpDamage;
    /*0x300*/ int m_nGuildBossRwardStep;
    /*0x304*/ bool m_bGetAllRewardWithLimitTime;
    /*0x305*/ bool m_bGetAllRewardWithLimitTime_2;
    /*0x306*/ bool <EnableHPMPGamge>k__BackingField;
    /*0x307*/ bool <EnableBuffImage>k__BackingField;
    /*0x308*/ bool <EnableDamageFont>k__BackingField;
    /*0x310*/ double SpawnedUnitTotalHP_Ally;
    /*0x318*/ double SpawnedUnitTotalHP_Enemy;
    /*0x320*/ System.Collections.Generic.List<InGameController.KillCutsceneInfo> m_lisKillCutscene;
    /*0x328*/ float m_fCutsceneCooltime;
    /*0x32c*/ float m_fSupportCutSceneCooltime;
    /*0x330*/ System.Collections.Generic.List<System.ValueTuple<int, bool>> m_lisSupportCutSceneSkinID;
    /*0x338*/ float m_fCurrentIdleDialogueCooltime;
    /*0x340*/ CFloat <Encryt_MultSpeed>k__BackingField;
    /*0x348*/ CInt <IsCheatEnable_OneKill>k__BackingField;
    /*0x350*/ CInt <IsCheatEnable_Invincible>k__BackingField;
    /*0x358*/ bool <IsPlayingBattle>k__BackingField;
    /*0x359*/ bool <IsGameStart>k__BackingField;
    /*0x35a*/ bool <IsGameEnd>k__BackingField;
    /*0x35b*/ bool <IsBattleWin_SavedForSkip>k__BackingField;
    /*0x35c*/ bool <IsArenaSkip>k__BackingField;
    /*0x35d*/ bool <IsReplay>k__BackingField;
    /*0x35e*/ bool <IsIdle>k__BackingField;
    /*0x35f*/ bool <IsAuto>k__BackingField;
    /*0x360*/ bool <IsAutoButtonDisable>k__BackingField;
    /*0x361*/ bool <IsFullAuto>k__BackingField;
    /*0x362*/ bool <IsSyncTool>k__BackingField;
    /*0x363*/ bool <IsArena>k__BackingField;
    /*0x364*/ bool <IsGuildWar>k__BackingField;
    /*0x365*/ bool <IsGuildWarTest>k__BackingField;
    /*0x366*/ bool <IsWorldBossMode>k__BackingField;
    /*0x367*/ bool <IsSimulation>k__BackingField;
    /*0x368*/ System.Collections.Generic.List<InGameController.InGameTimerInfo> m_lisTimerInfo;
    /*0x370*/ CharacterBase <CurrentPauseCharacter>k__BackingField;
    /*0x378*/ System.Collections.Generic.Dictionary<int, PTShare.Define.EquipmentType> m_DicEquipmentTypeWithUnitID;
    /*0x380*/ CharacterBase <WorldBoss>k__BackingField;
    /*0x388*/ BattleMainWindow_WorldBoss <CurrentBattleMainWindow_WorldBoss>k__BackingField;
    /*0x390*/ double <WorldBossTotalHitDamage>k__BackingField;
    /*0x398*/ bool <WorldCheatBattle>k__BackingField;
    /*0x39c*/ InGameController.WorldBossPrevPhase m_eCurrentWorldBossPhase;
    /*0x3a0*/ bool m_bSkippedStartAnimation;

    static /*0xd3d008*/ InGameController();
    static /*0xd29ec8*/ long get_GetUniqueNumber();
    static /*0xd3074c*/ float GetRandom();
    static /*0xd307ac*/ float GetRandom(float _min, float _max);
    static /*0xd2887c*/ int GetRandom(int _min, int _max);
    static /*0xd308a0*/ UnityEngine.Vector2 GetRandomCircle(float _fRadius, bool _bRandomRadius);
    static /*0xd30824*/ float GetRandomKeyValue();
    static /*0xd30918*/ UnityEngine.Vector2 CalcRandomInsideCirclePoint(bool _bRandomRadius);
    static /*0xd3a47c*/ Battle.BattleSpeedType get_GameSpeedType();
    static /*0xd3a4e0*/ void set_GameSpeedType(Battle.BattleSpeedType value);
    static /*0xd3a548*/ float get_GameSpeedPerFrame_Origin();
    static /*0xd3a5ac*/ void set_GameSpeedPerFrame_Origin(float value);
    static /*0xd3a61c*/ CFloat get_GameSpeedMult();
    static /*0xd3a680*/ void set_GameSpeedMult(CFloat value);
    static /*0xd2acb4*/ float get_GameSpeed();
    static /*0xd35bf4*/ float get_DeltaTime();
    static /*0xd3a6e8*/ float get_DeltaTimeMult();
    static /*0xd3a74c*/ void set_DeltaTimeMult(float value);
    static /*0xd3a7bc*/ float get_DeltaTimeMultOrigin();
    static /*0xd3a820*/ void set_DeltaTimeMultOrigin(float value);
    static /*0xd29cc4*/ float get_DeltaTimeReal();
    static /*0xd3752c*/ float get_DeltaTimeReal_Sync();
    static /*0xd28364*/ bool <GetTarget>g__isExcept|55_0(CharacterBase _target, ref InGameController.<> );
    /*0xd3c94c*/ InGameController();
    /*0xd22cf8*/ float get_CameraSizeOrigin();
    /*0xd22d00*/ void set_CameraSizeOrigin(float value);
    /*0xd22d08*/ float get_CameraSizeOrigin_Idle();
    /*0xd22d10*/ void set_CameraSizeOrigin_Idle(float value);
    /*0xd22d18*/ void Init(bool _bReplay, bool _bIdle, int _nRandomSeed);
    /*0xd24d10*/ void InitForGameReady();
    /*0xd24f6c*/ void InitForGameExit();
    /*0xd2502c*/ void InitForIdle();
    /*0xd25060*/ void InitForDemo();
    /*0xd25070*/ void InitForCampaign(int _nRandomSeed);
    /*0xd25080*/ void InitForTower(int _nRandomSeed);
    /*0xd25090*/ void InitForMaze(int _nRandomSeed);
    /*0xd250a0*/ void InitForFriendBattle(int _nRandomSeed);
    /*0xd250b0*/ void InitForGuildWarResult(int _nRandomSeed);
    /*0xd25188*/ void InitForGuildWarSimulation(int _nRandomSeed);
    /*0xd25334*/ void InitForGuildWarReplay(int _nRandomSeed);
    /*0xd2540c*/ void InitForGuildWarVerify(int _nRandomSeed);
    /*0xd255f4*/ void InitForArenaResult(int _nRandomSeed);
    /*0xd25628*/ void InitForArenaReplay(int _nRandomSeed);
    /*0xd2565c*/ void InitForArenaSimulation(int _nRandomSeed);
    /*0xd257e4*/ void InitForArenaVerify(int _nRandomSeed);
    /*0xd25974*/ void InitForGuildHunt(int _nRandomSeed);
    /*0xd25d00*/ void InitForDungeon(int _nRandomSeed);
    /*0xd25d10*/ void InitForGuildHuntReplay(int _nRandomSeed);
    /*0xd25e74*/ void InitForWorldBoss(int _nRandomSeed);
    /*0xd26020*/ void InitForWorldBossReplay(int _nRandomSeed);
    /*0xd261cc*/ void InitForWorldBossVerify(int _nRandomSeed);
    /*0xd263b4*/ void InitForPveRanking(int _nRandomSeed);
    /*0xd26578*/ void InitForVerify(int _nRandomSeed);
    /*0xd26778*/ void InitForReplay(int _nRandomSeed);
    /*0xd26848*/ void InitForCustom(int _nRandomSeed);
    /*0xd26858*/ void Update();
    /*0xd269f0*/ void OnApplicationPause(bool pause);
    /*0xd26b30*/ void AwakeInstance();
    /*0xd26b34*/ bool InitInstance();
    /*0xd26b3c*/ void ReleaseInstance();
    /*0xd26b40*/ void Destroy();
    /*0xd24870*/ void InitCollision();
    /*0xd26888*/ void UpdateCollision();
    /*0xd26b4c*/ bool IsTargetInSight(CharacterBase _caster, CharacterBase _target, Battle.ColliderData _sightCollider);
    /*0xd271ac*/ bool IsEnemyInSight(CharacterBase _caster, Battle.ColliderData _sightCollider);
    /*0xd272f8*/ CharacterBase GetProvokeTarget(ObjectBase _caster, bool _bPlayer);
    /*0xd273cc*/ CharacterBase GetProvokeTarget(ObjectBase _caster, bool _bPlayer, Battle.ColliderData _sRangeCollider);
    /*0xd274ec*/ CharacterBase GetTarget(ObjectBase _caster, Battle.TargetType1 _targetType1, Battle.TargetType2 _targetType2, Battle.TargetType3 _targetType3);
    /*0xd275a0*/ CharacterBase GetTarget(ObjectBase _caster, Battle.TargetType1 _targetType1, Battle.TargetType2 _targetType2, Battle.TargetType3 _targetType3, Battle.ColliderData _sightCollider, InGameController.GetTargetState _eState, System.Collections.Generic.List<CharacterBase> _exceptList);
    /*0xd2845c*/ System.Collections.Generic.List<CharacterBase> GetMatchListSightCollider(System.Collections.Generic.List<CharacterBase> _lisTarget, UnityEngine.Vector2 _vecCasterPOS, Battle.ColliderData _sCollider);
    /*0xd286fc*/ System.Collections.Generic.List<CharacterBase> GetMatchListTargetType2(System.Collections.Generic.List<CharacterBase> _lisTarget, Battle.TargetType2 _eTargetType2);
    /*0xd28918*/ System.Collections.Generic.List<CharacterBase> CheckAttackCollision(ObjectBase _Caster, Battle.TargetType1 _eTargetType, Battle.RangeDirectionType _eDirType, Battle.Direction _eDir, UnityEngine.Vector2 _casterPos, Battle.ColliderData _attackCollider, bool m_bCheckCharm, System.Collections.Generic.List<CharacterBase> _lisExcept, bool _bProjectile);
    /*0xd272b8*/ System.Collections.Generic.List<CharacterBase> GetTargetList_Current(bool _isPlayer, bool _bTargetEnemies);
    /*0xd2904c*/ System.Collections.Generic.List<CharacterBase> GetTargetList_Main(bool _isPlayer, bool _bTargetEnemies);
    /*0xd26da8*/ bool CheckTargetEnable(CharacterBase _target, bool _bPlayer);
    /*0xd28ee8*/ bool CheckAttackEnable(CharacterBase _target, bool _bPlayer);
    /*0xd2908c*/ UnityEngine.Vector2 GetSidePosition(CharacterBase _caster, Battle.ColliderData _casterCol, CharacterBase _target);
    /*0xd26ef4*/ UnityEngine.Vector2 GetWorldBossNearPosition(UnityEngine.Vector2 _vStartPOS);
    /*0xd29774*/ UnityEngine.Vector2 GetWorldBossNearPosition(UnityEngine.Vector2 _vStartPOS, CharacterBase _boss);
    /*0xd298ec*/ UnityEngine.Vector2 GetWorldBossNearPositionOffset(UnityEngine.Vector2 _vStartPOS);
    /*0xd2924c*/ void CheckPositionOverlap(ref UnityEngine.Vector2 _vecCurPos, CharacterBase _caster, float _fStart, float _fMin, float _fMax);
    /*0xd26efc*/ bool IsColliderBump(Battle.ColliderData _colA, ref UnityEngine.Vector2 _posA, Battle.ColliderData _colB, ref UnityEngine.Vector2 _posB, bool _bCircleToRectangle);
    /*0xd29940*/ UnityEngine.Vector2 GetDir(ref UnityEngine.Vector2 _startPos, ref UnityEngine.Vector2 _targetPos);
    /*0xd28868*/ float GetDistanceFloat(float a, float b);
    /*0xd29974*/ bool IsCatchBattleLimitPosition(UnityEngine.Vector2 _vecPOS);
    /*0xd29584*/ void CheckAndRewriteBattleLimitPosition(ref UnityEngine.Vector2 _vecPOS);
    /*0xd29aa0*/ float get_DPS_Time();
    /*0xd29aa8*/ void set_DPS_Time(float value);
    /*0xd29ab0*/ long get_DPS_MaxDamage();
    /*0xd29ab8*/ void set_DPS_MaxDamage(long value);
    /*0xd29ac0*/ long get_DPS_TotalDamage();
    /*0xd29ac8*/ void set_DPS_TotalDamage(long value);
    /*0xd29ad0*/ long get_DPS_TotalDamage_ATK();
    /*0xd29ad8*/ void set_DPS_TotalDamage_ATK(long value);
    /*0xd29ae0*/ long get_DPS_TotalDamage_ULT();
    /*0xd29ae8*/ void set_DPS_TotalDamage_ULT(long value);
    /*0xd29af0*/ long get_DPS_TotalDamage_SP01();
    /*0xd29af8*/ void set_DPS_TotalDamage_SP01(long value);
    /*0xd29b00*/ long get_DPS_TotalDamage_SP02();
    /*0xd29b08*/ void set_DPS_TotalDamage_SP02(long value);
    /*0xd29b10*/ long get_DPS_TotalDamage_SP03();
    /*0xd29b18*/ void set_DPS_TotalDamage_SP03(long value);
    /*0xd29b20*/ float get_DPS_TotalDamage_Skills();
    /*0xd29b4c*/ void InitDPS();
    /*0xd29b68*/ void DPS_AddDamage(Battle.SkillSlotType _eSlotType, long _lDamage);
    /*0xd29bfc*/ void DPS_HandleAddTime();
    /*0xd24c0c*/ void InitGuildWar();
    /*0xd29d6c*/ void HandleCheckGuildWarSupportAddMPCooltime();
    /*0xd29e58*/ System.Collections.Generic.List<ProjectileBase> get_Projectiles();
    /*0xd29e60*/ void set_Projectiles(System.Collections.Generic.List<ProjectileBase> value);
    /*0xd29e68*/ System.Collections.Generic.List<ParticleBase> get_Particles();
    /*0xd29e70*/ void set_Particles(System.Collections.Generic.List<ParticleBase> value);
    /*0xd29e78*/ System.Collections.Generic.List<ParticleBase> get_Particles_Sync();
    /*0xd29e80*/ void set_Particles_Sync(System.Collections.Generic.List<ParticleBase> value);
    /*0xd29e88*/ System.Collections.Generic.List<DamageMarker> get_DamageMarkers();
    /*0xd29e90*/ void set_DamageMarkers(System.Collections.Generic.List<DamageMarker> value);
    /*0xd29e98*/ System.Collections.Generic.List<DropCoin> get_DropCoins();
    /*0xd29ea0*/ void set_DropCoins(System.Collections.Generic.List<DropCoin> value);
    /*0xd29ea8*/ System.Collections.Generic.List<BossDropItem> get_BossDropItems();
    /*0xd29eb0*/ void set_BossDropItems(System.Collections.Generic.List<BossDropItem> value);
    /*0xd29eb8*/ double get_GuildBossTotalHitDamage();
    /*0xd29ec0*/ void set_GuildBossTotalHitDamage(double value);
    /*0xd24258*/ void InitObject();
    /*0xd29f94*/ void UpdateProjectiles();
    /*0xd2a038*/ void UpdateUnits();
    /*0xd2a134*/ void UpdateParticlesSync();
    /*0xd2a1d8*/ void UpdateParticles();
    /*0xd2a27c*/ void SetCameraPositionToOrigin();
    /*0xd28ff8*/ System.Collections.Generic.List<CharacterBase> GetUnitList(Battle.UnitListType _eUnitListType);
    /*0xd2a2bc*/ int GetUnitCount(bool _bAlly, bool _bExceptSummoner);
    /*0xd2a3e4*/ void AddSPtoAllTeamUnits(Battle.UnitListType _eType, float _fAddSPAmount);
    /*0xd2a4fc*/ void AddHPtoAllTeamUnits(Battle.UnitListType _eType, float _fAddHPRatio);
    /*0xd2a61c*/ void CheckLastAllySurviveUnit();
    /*0xd2a6ec*/ void CheckUnitCollider();
    /*0xd25ad8*/ int GetGuildBossPositionNumber(bool _bIgnoreDeath);
    /*0xd25be8*/ CharacterBase GetUnitWithPositionNumber(int _nPositionNumber, bool _bIgnoreDeath);
    /*0xd2abd0*/ void SetAllParticlesSpeedMult(float _fMult);
    /*0xd2add8*/ float GetHPRatioAllUnits(bool _bAlly);
    /*0xd2af8c*/ System.Collections.Generic.List<PTShare.Define.SHero> GetGuildBattleSupportUnitSHeroList(bool _bAlly);
    /*0xd2b1ec*/ void HandleSetGameSpeedObject();
    /*0xd2b2cc*/ void HandlePauseObjects(CharacterBase _caster, bool _isPause);
    /*0xd2b57c*/ void SetPasueParticlesWithCaster(CharacterBase _caster, bool _bPasue);
    /*0xd2b6b4*/ void HandlePauseParticles_ForPausePopup(bool _bPause);
    /*0xd2b76c*/ void HandleUpdateSyncObject();
    /*0xd2bc70*/ void HandleUpdateSyncObjectGameEnd();
    /*0xd2bc74*/ void HandleUpdateObject();
    /*0xd2bc78*/ void HandleFlipAllUnits();
    /*0xd2bd98*/ void HandleSetSkillEnableAllUnits(bool _isEnable);
    /*0xd246b8*/ void InitSpawn();
    /*0xd2be54*/ UnityEngine.Vector3 GetDestPosStartHAST(UnityEngine.Vector3 _curPos);
    /*0xd2be7c*/ void SpawnIdleEnemy();
    /*0xd2c34c*/ void SpawnDemoUnit(bool _bAlly, bool _bPositionLock);
    /*0xd2c5f8*/ CharacterBase SpawnCharacterForDemoSpawnUnit(int _nUnitID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos);
    /*0xd2cd94*/ CharacterBase SpawnCharacterForDemoMaxLevelAlly(int _nUnitID, int _nSkinID, bool _bPlayer, UnityEngine.Vector2 _vecPos);
    /*0xd2cf28*/ CharacterBase SpawnCharacterForWorldBoss(int _nUnitID, int _nUnitLV, int _nUnitGrade, UnityEngine.Vector2 _vecPOS);
    /*0xd2d068*/ CharacterBase SpawnCharacterMainPosition(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, System.Collections.Generic.List<int> _abilityList, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d1dc*/ CharacterBase SpawnCharacterGuildBattleSupporter(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, System.Collections.Generic.List<int> _abilityList, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d334*/ CharacterBase SpawnCharacterForIdleAlly(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2c1ec*/ CharacterBase SpawnCharacterForIdleEnemy(int _nUnitID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d4a4*/ CharacterBase SpawnCharacterForSummoner(System.Collections.Generic.List<PTShare.Define.SEquip> _equip, int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSizeMult);
    /*0xd2d610*/ CharacterBase SpawnCharacterForSyncTool(int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, bool _bPlayer, UnityEngine.Vector2 _vecPos, float _fSize);
    /*0xd2c748*/ CharacterBase SpawnCharacterAllOptions(int _nUnitID, int _nSkinID, int _nUnitLV, int _nUnitGrade, int _nUnitTier, int _nSignatureLV, bool _bPlayer, UnityEngine.Vector2 _vecPos, System.Collections.Generic.List<PTShare.Define.SEquip> _lisEquip, System.Collections.Generic.List<int> _lisAbility, float _fSizeMult, InGameController.SpawnModeType _eModeType, InGameController.SpawnUnitType _eUnitType, string[] _params);
    /*0xd2d7b0*/ void RemoveCharacter(CharacterBase character, bool _bCheckDeath);
    /*0xd2d974*/ void RemoveUnitOnCurrentUnitList(CharacterBase _unit);
    /*0xd230e4*/ void RemoveObjectAll(bool _bExceptUnit);
    /*0xd2dd7c*/ ProjectileBase SpawnProjectile(string _sName, CharacterBase _owner, UnityEngine.Vector3 _vecSpawnPos, UnityEngine.Vector2 _vecTargetPos, int _nSkillLV, int[] _arrSkillFXID);
    /*0xd2db1c*/ void RemoveProjectile(ProjectileBase projectile);
    /*0xd2df8c*/ ParticleBase SpawnParticleToTransform(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Transform _target, UnityEngine.Vector3 _vOffset, bool _isLoop, bool _isUpdateSync);
    /*0xd2e348*/ ParticleBase SpawnParticleToCenter(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2e400*/ ParticleBase SpawnParticleToCenter_Background(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2e4b8*/ void SpawnCutScene(CharacterBase _owner);
    /*0xd2dfdc*/ ParticleBase SpawnParticleToTransformAllOptions(bool _bParticleUI, AssetBundleType _eAssetBundleType, string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Transform _target, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2e678*/ ParticleBase SpawnParticleToUnit(string _name, ObjectBase _owner, ObjectBase _caster, CharacterBase _moveTarget, UnityEngine.Vector3 _vOffset, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync);
    /*0xd2ea5c*/ ParticleBase SpawnParticleToPosition(string _name, ObjectBase _owner, ObjectBase _caster, UnityEngine.Vector3 _vPosition, CharacterBase _ownerDeath, bool _isLoop, bool _isUpdateSync, bool _ignoreCameraOff);
    /*0xd2da08*/ void RemoveParticle(ParticleBase particle);
    /*0xd2ed74*/ DamageMarker SpawnDamageMarker(UnityEngine.Transform _parent, float _fUnitSize, float _fDamage, bool _bCritical, bool _bDelayed);
    /*0xd2dc1c*/ void RemoveDamageMarker(DamageMarker marker);
    /*0xd2ef10*/ BuffIcon SpawnBuffIcon(string _sBuffIconName, int _nBuffID);
    /*0xd2f008*/ BuffIcon SpawnBuffIconForWorldBoss(string _sBuffIconName, int _nBuffID);
    /*0xd2f158*/ void RemoveBuffIcon(BuffIcon _buffIcon);
    /*0xd2f1d4*/ void SpawnDropCoin(UnityEngine.Vector3 _pos, int _num);
    /*0xd2dccc*/ void RemoveDropCoin(DropCoin _coin);
    /*0xd2f30c*/ void SpawnBossDropItem(UnityEngine.Vector3 _pos, int _nStep);
    /*0xd2f4b8*/ void RemoveBossDropItem(BossDropItem _box);
    /*0xd2f568*/ KillCutscene SpawnKillCutscene(InGameController.KillCutsceneInfo _info);
    /*0xd2f718*/ void RemoveKillCutscene();
    /*0xd2f828*/ void SpawnGuildBattleSupportUnit(bool _bPlayer);
    /*0xd2f85c*/ SupportCutScene SpawnSupportCutScene(int _nSkinID, bool _bAlly);
    /*0xd2f9f0*/ void RemoveSupportCutScene();
    /*0xd2fac8*/ void HandleSetSpawnEenemyPosIdle(System.Collections.Generic.List<UnityEngine.Transform> _SpawnTransEnemyList);
    /*0xd2fbc0*/ void HandleCheckGuildBattleSpawnSupportUnitCooltime();
    /*0xd2fd14*/ Battle.InGameStateType get_CurGameState();
    /*0xd2fd1c*/ void set_CurGameState(Battle.InGameStateType value);
    /*0xd2fd24*/ Battle.InGameStateType get_PrevGameState();
    /*0xd2fd2c*/ void set_PrevGameState(Battle.InGameStateType value);
    /*0xd2368c*/ void InitState();
    /*0xd24c1c*/ void ChangeGameState(Battle.InGameStateType _nextState);
    /*0xd2fd34*/ void HandleSetGameStateToPlay();
    /*0xd3006c*/ CInt get_CheatEncrypt_Verify();
    /*0xd30074*/ void set_CheatEncrypt_Verify(CInt value);
    /*0xd3007c*/ CString get_OriginGraphData();
    /*0xd30084*/ void set_OriginGraphData(CString value);
    /*0xd3008c*/ int get_CurPlayTimeSeconds();
    /*0xd300b0*/ int get_CurPlayTimeMS();
    /*0xd300e0*/ int get_CurLimitTimeSeconds();
    /*0xd30168*/ BattleSystemInit get_CurrentBattleSystemInit();
    /*0xd30170*/ void set_CurrentBattleSystemInit(BattleSystemInit value);
    /*0xd30178*/ System.Action get_OnEndPause();
    /*0xd30180*/ void set_OnEndPause(System.Action value);
    /*0xd23a2c*/ void InitSystem(int _nRandomSeed);
    /*0xd24edc*/ void InitLocalEvent();
    /*0xd30a3c*/ void AddSkillRecord(int _nPositionNumber);
    /*0xd30b00*/ void CheckSkillRecord();
    /*0xd30dd0*/ string GetReplayData();
    /*0xd301dc*/ System.Collections.Generic.List<int> ConvertReplayDataToList(string _sRecord);
    /*0xd30e78*/ void CopyGraphList(System.Collections.Generic.List<Battle.BattleGraphValue> _listCopy, System.Collections.Generic.List<Battle.BattleGraphValue> _listPaste);
    /*0xd30fd8*/ string GetBattleGraphData();
    /*0xd31454*/ void AddBattleGraphValue(Battle.BattleGraphType _eBattleGraphType, int _nPositionNumber, float _fValue);
    /*0xd3161c*/ double GetBattleGraphFloatValue(int _nPosition, Battle.BattleGraphType _eType);
    /*0xd31720*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList(bool _bPlayer);
    /*0xd31790*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList_ForPveRanking(bool _bPlayer);
    /*0xd31800*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList_ForGuildWar(bool _bPlayer);
    /*0xd31870*/ System.Collections.Generic.List<Battle.BattleGraphValue> GetBattleGraphValueList_ForWorldBoss(bool _bPlayer);
    /*0xd31048*/ System.Collections.Generic.List<long> GetBattleGraphIntValueList();
    /*0xd318f4*/ void ShowBattleGraph(bool _bWin);
    /*0xd31cf0*/ void CheckOriginGraphData();
    /*0xd31d28*/ string GetUnitHPMPString();
    /*0xd32614*/ void SkipArena();
    /*0xd32654*/ void ShowVictoryPopup();
    /*0xd328e8*/ void ShowDefeatPopup();
    /*0xd32764*/ void ShowResultPopup();
    /*0xd329f8*/ void ShowCampainResultPopup();
    /*0xd32e58*/ void ShowTowerResultPopup();
    /*0xd33120*/ void ShowArenaResultPopup();
    /*0xd33234*/ void ShowWorldArenaResultPopup();
    /*0xd33348*/ void ShowMazeResultPopup();
    /*0xd33a1c*/ void ShowDungeonResultPopup();
    /*0xd33508*/ void ShowFriendBattleResultPopup();
    /*0xd335b0*/ void ShowGuildWarResultPopup();
    /*0xd33684*/ void ShowGuildHuntResultPopup();
    /*0xd33bdc*/ void ShowWorldBossResultPopup();
    /*0xd33ef4*/ void ShowPveRankingResultPopup();
    /*0xd343f4*/ void HandleUpdateSkillRecord();
    /*0xd3447c*/ void HandleCheckStartGame();
    /*0xd345c4*/ void HandleSetGameSpeed();
    /*0xd34798*/ void HandleSetPauseWithPopup_Pause();
    /*0xd348cc*/ void HandleSetPauseWithPopup_Play();
    /*0xd3496c*/ void HandleSetAuto();
    /*0xd34a10*/ void HandleCalcUpdateCount();
    /*0xd34b0c*/ void HandleCheckPauseTime();
    /*0xd34f7c*/ void HandleCheckSkillFadeTime();
    /*0xd350e8*/ void HandleCheckLimitTime();
    /*0xd353bc*/ void HandleCheckIdleWave();
    /*0xd35488*/ void HandleCheckDemoWave();
    /*0xd355c0*/ void HandleCheckAllUnitDeath();
    /*0xd35b34*/ void HandleCheckEndToIdleDelay();
    /*0xd35c9c*/ void HandleUpdateDelayBattleResultPopup();
    /*0xd35e0c*/ void HandleStartGameOver();
    /*0xd36b68*/ void HandleStartGameOver_Verify();
    /*0xd37278*/ void HandleAfterArenaFastAndReturnProtocalResult();
    /*0xd37340*/ void HandleAfterGuildWarFastAndReturnProtocalResult();
    /*0xd37408*/ void HandleInitializeOriginGraphData();
    /*0xd37484*/ void HandleCheckIdleDialogueTime();
    /*0xd37638*/ void HandleCheckExitVerify();
    /*0xd376ac*/ void HandleSpawnBackgroundParticles();
    /*0xd36ecc*/ System.Collections.IEnumerator CoDelayedStartNextVerifyClient();
    /*0xd377e4*/ System.Collections.IEnumerator CoDelayedStartNextVerify(float _fDelay);
    /*0xd37860*/ System.Collections.IEnumerator CoDelayedStartGoToMainScene();
    /*0xd35320*/ void SetEndStateAllUnits();
    /*0xd3679c*/ void SetBattleEndIdleStateAllUnits(bool _bPlayerWin);
    /*0xd3590c*/ bool CheckAllUnitDeath(bool _bPlayer);
    /*0xd351ac*/ bool CheckLimitTimeOver();
    /*0xd378bc*/ void BeginVerify();
    /*0xd36f28*/ void FinishVerify(bool _bSendProtocal);
    /*0xd370f0*/ void CallVerifyFinishProtocal(System.Action _action);
    /*0xd37990*/ int GetVerifyScore();
    /*0xd38e50*/ void SetNullBattleSceneLocalScripts();
    /*0xd38e58*/ void SetBattleSystemInit(BattleSystemInit _script);
    /*0xd38e60*/ void SetBattleSceneManager(BattleSceneManager _script);
    /*0xd38e68*/ void StartBattleSceneLocalScripts();
    /*0xd38eac*/ System.Collections.Generic.List<bool> get_IsTouchSkillEnable();
    /*0xd38eb4*/ void set_IsTouchSkillEnable(System.Collections.Generic.List<bool> value);
    /*0xd38ebc*/ UnityEngine.Vector2 get_GetBossPosition();
    /*0xd38ef4*/ BattleMainWindow get_CurrentBattleMainWindow();
    /*0xd38efc*/ void set_CurrentBattleMainWindow(BattleMainWindow value);
    /*0xd38f04*/ BattleMainWindow_GuildWar get_CurrentBattleMainWindow_GuildBattle();
    /*0xd38f0c*/ void set_CurrentBattleMainWindow_GuildBattle(BattleMainWindow_GuildWar value);
    /*0xd38f14*/ bool get_EnableHPMPGamge();
    /*0xd38f1c*/ void set_EnableHPMPGamge(bool value);
    /*0xd38f28*/ bool get_EnableBuffImage();
    /*0xd38f30*/ void set_EnableBuffImage(bool value);
    /*0xd38f3c*/ bool get_EnableDamageFont();
    /*0xd38f44*/ void set_EnableDamageFont(bool value);
    /*0xd24950*/ void InitUI();
    /*0xd2688c*/ void UpdateUI();
    /*0xd39298*/ void CheckGuildBossContent();
    /*0xd36a24*/ void GetAllBossRewardItems();
    /*0xd38f50*/ void CheckIdleVoiceMousePosition();
    /*0xd39550*/ void SetTouchSkillUI(bool _isOn, int _nPositionNumber);
    /*0xd30c2c*/ bool TouchSkillUI(int _nPositionNumber, bool _bTouch);
    /*0xd39680*/ bool CheckPositionNumberEnable(int _nPositionNumber);
    /*0xd396f0*/ void SetBattleMainWindow(BattleMainWindow _window);
    /*0xd396f8*/ void SetBattleMainWindow_GuildBattle(BattleMainWindow_GuildWar _window);
    /*0xd39700*/ void SetActiveHPMPGage(bool _bActive);
    /*0xd397b4*/ void SetActiveBuffImage(bool _bActive);
    /*0xd39868*/ void SetActiveDamageFont(bool _bActive);
    /*0xd39874*/ void SetUnitCountForGuildBattle(bool _bAlly);
    /*0xd39924*/ void StartSpawnGuildSupportUnit(InGameController.GuildBattleSupportInfo _supportInfo);
    /*0xd39ad4*/ void SetKillCutscene(int _nKillSkinID, int _nDeathSkinID, bool _bAlly, int _nKillCount);
    /*0xd39ba8*/ void HandleCheckKillCutscene_Ally();
    /*0xd39d24*/ void HandleUpdateSupportCutscene();
    /*0xd39d38*/ void AddSupportCutSceneForList(int _nSkinID, bool _bAlly);
    /*0xd39ddc*/ void HandleCheckSupportCutSceneCooltime();
    /*0xd375a8*/ void SetRandomDialogue();
    /*0xd39f9c*/ void SetDialogueCoolTime(float _fCoolTime);
    /*0xd3a03c*/ void HandleRegistTouchSkillUI();
    /*0xd3a170*/ void HandleCheckGuildBossHitDamage(CharacterBase _caster);
    /*0xd37910*/ string get_UserToken();
    /*0xd2300c*/ Battle.GameModeType get_CurrentGameMode();
    /*0xd3a46c*/ CFloat get_Encryt_MultSpeed();
    /*0xd3a474*/ void set_Encryt_MultSpeed(CFloat value);
    /*0xd3a890*/ CInt get_IsCheatEnable_OneKill();
    /*0xd3a898*/ void set_IsCheatEnable_OneKill(CInt value);
    /*0xd3a8a0*/ CInt get_IsCheatEnable_Invincible();
    /*0xd3a8a8*/ void set_IsCheatEnable_Invincible(CInt value);
    /*0xd3a8b0*/ bool get_IsPlayingBattle();
    /*0xd3a8b8*/ void set_IsPlayingBattle(bool value);
    /*0xd3a8c4*/ bool get_IsGameStart();
    /*0xd3a8cc*/ void set_IsGameStart(bool value);
    /*0xd3a8d8*/ bool get_IsGameEnd();
    /*0xd3a8e0*/ void set_IsGameEnd(bool value);
    /*0xd3432c*/ bool get_IsBattleWin();
    /*0xd23060*/ void set_IsBattleWin(bool value);
    /*0xd3a8ec*/ bool get_IsBattleWin_SavedForSkip();
    /*0xd3a8f4*/ void set_IsBattleWin_SavedForSkip(bool value);
    /*0xd3a900*/ bool get_IsArenaSkip();
    /*0xd3a908*/ void set_IsArenaSkip(bool value);
    /*0xd3a914*/ bool get_IsPaused();
    /*0xd3a924*/ bool get_IsBattleScene();
    /*0xd3a9c4*/ bool get_IsReplay();
    /*0xd3a9cc*/ void set_IsReplay(bool value);
    /*0xd343a0*/ bool get_IsSelectReplay();
    /*0xd3a9d8*/ bool get_IsIdle();
    /*0xd3a9e0*/ void set_IsIdle(bool value);
    /*0xd3a9ec*/ bool get_IsAuto();
    /*0xd3a9f4*/ void set_IsAuto(bool value);
    /*0xd3aa00*/ bool get_IsAutoButtonDisable();
    /*0xd3aa08*/ void set_IsAutoButtonDisable(bool value);
    /*0xd3aa14*/ bool get_IsFullAuto();
    /*0xd3aa1c*/ void set_IsFullAuto(bool value);
    /*0xd3aa28*/ bool get_IsSyncTool();
    /*0xd3aa30*/ void set_IsSyncTool(bool value);
    /*0xd3aa3c*/ bool get_IsArena();
    /*0xd3aa44*/ void set_IsArena(bool value);
    /*0xd3aa50*/ bool get_IsGuildWar();
    /*0xd3aa58*/ void set_IsGuildWar(bool value);
    /*0xd3aa64*/ bool get_IsGuildWarTest();
    /*0xd3aa6c*/ void set_IsGuildWarTest(bool value);
    /*0xd3aa78*/ bool get_IsWorldBossMode();
    /*0xd3aa80*/ void set_IsWorldBossMode(bool value);
    /*0xd3aa8c*/ bool get_IsSimulation();
    /*0xd3aa94*/ void set_IsSimulation(bool value);
    /*0xd26478*/ bool get_IsVerify();
    /*0xd3aaa0*/ bool get_CurrentMode_IsGuildWar();
    /*0xd3aafc*/ bool get_CurrentMode_IsWorldBoss();
    /*0xd3ab58*/ bool get_CurrentMode_IsPveRanking();
    /*0xd30188*/ void InitTimer();
    /*0xd264cc*/ void AddTimer(float _fCooltime, InGameController.InGameTimerType _eTimerType, System.Action _CompleteAction);
    /*0xd3abb4*/ void HandleUpdateInGameTimer();
    /*0xd3ad70*/ TrackPlayType GetTrackPlayType(AssetBundleType _eAssetBundleType);
    /*0xd35a44*/ float PlaySoundVoice(AssetBundleType _eBundleType, string _sAudioName, bool _bLoop);
    /*0xd3ad94*/ void PlaySoundSFX(AssetBundleType _eBundleType, string _sAudioName, float _fPlayDelay, bool _bLoop);
    /*0xd3afb8*/ void PlaySoundBGM(AssetBundleType _eBundleType, string _sAudioName, bool _bLoop);
    /*0xd2b7a8*/ void UpdateSoundDelay();
    /*0xd36910*/ void PlayBgm(bool _bPlayerWin);
    /*0xd3b0a8*/ CharacterBase get_CurrentPauseCharacter();
    /*0xd3b0b0*/ void set_CurrentPauseCharacter(CharacterBase value);
    /*0xd3b0b8*/ void PauseGameState(bool _isPause);
    /*0xd3b180*/ void PauseGameForSpecialSkillStart(CharacterBase _caster, float _fDuration);
    /*0xd34ccc*/ void PauseGameForSpecialSkill(CharacterBase _caster, bool _bPause, float _fDuration, bool _bSetShade, System.Action _onComplete);
    /*0xd34838*/ void PauseGameWithInGameState(bool _bPause);
    /*0xd35054*/ void SetShade(bool _bShade);
    /*0xd3b224*/ float SetGameSpeed(float _timeScale);
    /*0xd3b3a4*/ float SetGameSpeed(Battle.BattleSpeedType _eSpeedType);
    /*0xd3039c*/ void SetGameSpeedType();
    /*0xd3b504*/ void SetCheatMultSpeed(float _fSpeed);
    /*0xd3b57c*/ bool SetAuto(bool _boolean);
    /*0xd3b624*/ bool ToggleAuto();
    /*0xd3b634*/ bool ToggleCheatOneKill();
    /*0xd3b6ec*/ bool ToggleCheatInvincible();
    /*0xd3b7a4*/ void SetCheatVerify(bool _bEnable, bool _bServer, int _nCount, float _fSpeed);
    /*0xd3b8f0*/ void CompletePauseSkillAnimation();
    /*0xd24df8*/ void SetDeltatimeMultToOrigin();
    /*0xd3b978*/ void SetGraphicPositionInfo(int _nPosition, string _sSkinName, int _nUnitID, int _nFactionID, int _nLevel, int _nGrade);
    /*0xd3ba58*/ PTShare.Define.EquipmentType GetEquipmentTypeWithUnitID(int _nUnitID);
    /*0xd3bba0*/ CharacterBase get_WorldBoss();
    /*0xd3bba8*/ void set_WorldBoss(CharacterBase value);
    /*0xd3bbb0*/ BattleMainWindow_WorldBoss get_CurrentBattleMainWindow_WorldBoss();
    /*0xd3bbb8*/ void set_CurrentBattleMainWindow_WorldBoss(BattleMainWindow_WorldBoss value);
    /*0xd3bbc0*/ double get_WorldBossTotalHitDamage();
    /*0xd3bbc8*/ void set_WorldBossTotalHitDamage(double value);
    /*0xd3bbd0*/ bool get_WorldCheatBattle();
    /*0xd3bbd8*/ void set_WorldCheatBattle(bool value);
    /*0xd3bbe4*/ void SetWorldBoss(CharacterBase _boss);
    /*0xd3bbec*/ void SetBattleMainWindow_WorldBoss(BattleMainWindow_WorldBoss _window);
    /*0xd3bbf4*/ void HandleCalcUpdateCount_WorldBoss();
    /*0xd3bcf0*/ void WorldBoss_UpdateAnimation();
    /*0xd2fe08*/ void WorldBoss_SkipStartAnimation();
    /*0xd3bdf0*/ void WorldBoss_Prev_Phase1();
    /*0xd3c0f0*/ void WorldBoss_Prev_Phase2();
    /*0xd3c2f8*/ void HandleAnimVoice1Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xd3c410*/ void HandleAnimVoice2Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xd3c528*/ void HandleEventBossAnimationIN(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xd3c680*/ void HandleCompleteBossAnimationIN(Spine.TrackEntry trackEntry);
    /*0xd3c75c*/ void HandleCheckWorldBossHP();
    /*0xd3c830*/ void RemoveCharacter_WorldBoss(CharacterBase character);
    /*0xd3d0ec*/ void <InitForPveRanking>b__31_0();
    /*0xd2fbf8*/ void <HandleCheckGuildBattleSpawnSupportUnitCooltime>g__CheckGuildBattleSpawnSupportUnitCooltime|240_0(bool _bPlayer);
    /*0xd31ea4*/ void <GetUnitHPMPString>g__FillInfosForGuildWar|348_0(Battle.UnitListType type, bool isPlayer, int _nBeginIndex, int _nFillIndexCount, ref InGameController.<> );
    /*0xd3235c*/ void <GetUnitHPMPString>g__FillInfos|348_1(Battle.UnitListType type, bool isPlayer, int _nBeginIndex, int _nFillIndexCount, ref InGameController.<> );
    /*0xd3d338*/ void <ShowMazeResultPopup>b__357_0();
    /*0xd3d420*/ void <ShowDungeonResultPopup>b__358_0();
    /*0xd3d510*/ void <ShowPveRankingResultPopup>b__363_1(ServerProtocol.ResPveRankingFinish res, int prev);
    /*0xd3d610*/ void <HandleStartGameOver>b__379_0(ServerProtocol.ResGuildWarFinish res);
    /*0xd3d67c*/ void <HandleStartGameOver_Verify>b__380_0();
    /*0xd3d6ac*/ void <HandleStartGameOver_Verify>b__380_1();
    /*0xd38180*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> <GetVerifyScore>g__GetCurrentUnitVerifyInfoList|397_0(System.Collections.Generic.List<CharacterBase> _list, bool _bPlayer, ref InGameController.<> );
    /*0xd38598*/ int <GetVerifyScore>g__CompareHPMPs|397_1(System.Collections.Generic.List<PTShare.Define.SVerifyHero> _current, System.Collections.Generic.List<PTShare.Define.SVerifyHero> _compare, bool _bPlayer, ref InGameController.<> );

    enum GetTargetState
    {
        NONE = 0,
        SKILLFX_PASSIVE = 1,
    }

    enum SpawnModeType
    {
        NORMAL = 0,
        DEMO = 1,
        IDLE = 2,
        SYNCTOOL = 3,
    }

    enum SpawnUnitType
    {
        NORMAL = 0,
        MAIN = 1,
        SUMMONER = 2,
        IDLE_ALLY = 3,
        IDLE_EMEMY = 4,
        BOSS_BIG = 5,
    }

    class GuildBattleSupportInfo
    {
        /*0x10*/ bool isAlly;
        /*0x14*/ float supportUnitCooltime;
        /*0x18*/ int curCountMainUnitDeath;
        /*0x1c*/ int curCountSpawnSupportUnit;

        /*0xe4f58c*/ GuildBattleSupportInfo();
    }

    struct KillCutsceneInfo
    {
        /*0x10*/ int killUnitSkinID;
        /*0x14*/ int deathUnitSkinID;
        /*0x18*/ bool isAlly;
        /*0x1c*/ int killCount;
    }

    enum InGameTimerType
    {
        DELTATIME = 0,
        DELTATIME_REAL = 1,
        DELTATIME_REAL_SYNC = 2,
    }

    class InGameTimerInfo
    {
        /*0x10*/ InGameController.InGameTimerType timerType;
        /*0x14*/ float cooltime;
        /*0x18*/ System.Action completeAction;

        /*0xe4f594*/ InGameTimerInfo();
    }

    enum WorldBossPrevPhase
    {
        PHASE1 = 0,
        PHASE2 = 1,
    }

    class <>c
    {
        static /*0x0*/ InGameController.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__31_1;
        static /*0x10*/ System.Action<PTShare.Define.SProperty> <>9__353_0;
        static /*0x18*/ System.Action<PTShare.Define.SProperty> <>9__353_1;
        static /*0x20*/ System.Action<PTShare.Define.SProperty> <>9__354_0;
        static /*0x28*/ System.Action<PTShare.Define.SProperty> <>9__361_0;
        static /*0x30*/ System.Action<PTShare.Define.SProperty> <>9__361_1;
        static /*0x38*/ System.Action<PTShare.Define.SProperty> <>9__362_0;
        static /*0x40*/ System.Action<bool> <>9__363_0;
        static /*0x48*/ System.Func<bool> <>9__387_0;
        static /*0x50*/ System.Func<bool> <>9__388_0;
        static /*0x58*/ System.Func<bool> <>9__389_0;
        static /*0x60*/ System.Func<CharacterBase, bool> <>9__392_0;

        static /*0xe4e5c4*/ <>c();
        /*0xe4e624*/ <>c();
        /*0xe4e62c*/ void <InitForPveRanking>b__31_1(bool confirm);
        /*0xe4e688*/ void <ShowCampainResultPopup>b__353_0(PTShare.Define.SProperty rewards);
        /*0xe4e78c*/ void <ShowCampainResultPopup>b__353_1(PTShare.Define.SProperty rewards);
        /*0xe4e890*/ void <ShowTowerResultPopup>b__354_0(PTShare.Define.SProperty rewards);
        /*0xe4e91c*/ void <ShowGuildHuntResultPopup>b__361_0(PTShare.Define.SProperty reward);
        /*0xe4e9a8*/ void <ShowGuildHuntResultPopup>b__361_1(PTShare.Define.SProperty reward);
        /*0xe4ea34*/ void <ShowWorldBossResultPopup>b__362_0(PTShare.Define.SProperty reward);
        /*0xe4eac0*/ void <ShowPveRankingResultPopup>b__363_0(bool confirm);
        /*0xe4eb1c*/ bool <CoDelayedStartNextVerifyClient>b__387_0();
        /*0xe4eb78*/ bool <CoDelayedStartNextVerify>b__388_0();
        /*0xe4ebd4*/ bool <CoDelayedStartGoToMainScene>b__389_0();
        /*0xe4ec30*/ bool <CheckAllUnitDeath>b__392_0(CharacterBase u);
    }

    struct <>c__DisplayClass55_0
    {
        /*0x10*/ System.Collections.Generic.List<CharacterBase> _exceptList;
    }

    struct <>c__DisplayClass348_0
    {
        /*0x10*/ InGameController <>4__this;
        /*0x18*/ System.Collections.Generic.List<string> infos;
    }

    class <>c__DisplayClass348_1
    {
        /*0x10*/ int i;

        /*0xe4ec4c*/ <>c__DisplayClass348_1();
        /*0xe4ec54*/ bool <GetUnitHPMPString>b__2(CharacterBase f);
    }

    class <>c__DisplayClass348_2
    {
        /*0x10*/ int i;

        /*0xe4ec78*/ <>c__DisplayClass348_2();
        /*0xe4ec80*/ bool <GetUnitHPMPString>b__3(CharacterBase f);
    }

    class <CoDelayedStartNextVerifyClient>d__387 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe4f388*/ <CoDelayedStartNextVerifyClient>d__387(int <>1__state);
        /*0xe4f3b4*/ void System.IDisposable.Dispose();
        /*0xe4f3b8*/ bool MoveNext();
        /*0xe4f53c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4f544*/ void System.Collections.IEnumerator.Reset();
        /*0xe4f584*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoDelayedStartNextVerify>d__388 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fDelay;
        /*0x28*/ InGameController <>4__this;

        /*0xe4f140*/ <CoDelayedStartNextVerify>d__388(int <>1__state);
        /*0xe4f16c*/ void System.IDisposable.Dispose();
        /*0xe4f170*/ bool MoveNext();
        /*0xe4f338*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4f340*/ void System.Collections.IEnumerator.Reset();
        /*0xe4f380*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoDelayedStartGoToMainScene>d__389 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe4eef0*/ <CoDelayedStartGoToMainScene>d__389(int <>1__state);
        /*0xe4ef1c*/ void System.IDisposable.Dispose();
        /*0xe4ef20*/ bool MoveNext();
        /*0xe4f0f0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4f0f8*/ void System.Collections.IEnumerator.Reset();
        /*0xe4f138*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass396_0
    {
        /*0x10*/ System.Action _action;

        /*0xe4eca4*/ <>c__DisplayClass396_0();
        /*0xe4ecac*/ void <CallVerifyFinishProtocal>b__0(ServerProtocol.ResAdminVerifyFinish res);
    }

    struct <>c__DisplayClass397_0
    {
        /*0x10*/ InGameController <>4__this;
        /*0x18*/ string hackInfo;
    }

    class <>c__DisplayClass397_1
    {
        /*0x10*/ int startPositionIndex;
        /*0x14*/ int i;
        /*0x18*/ System.Predicate<CharacterBase> <>9__2;

        /*0xe4ecd8*/ <>c__DisplayClass397_1();
        /*0xe4ece0*/ bool <GetVerifyScore>b__2(CharacterBase x);
    }

    class <>c__DisplayClass397_2
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SVerifyHero> _compare;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SVerifyHero> <>9__3;

        /*0xe4ed08*/ <>c__DisplayClass397_2();
        /*0xe4ed10*/ bool <GetVerifyScore>b__3(PTShare.Define.SVerifyHero x);
    }

    class <>c__DisplayClass452_0
    {
        /*0x10*/ InGameController <>4__this;
        /*0x18*/ InGameController.GuildBattleSupportInfo _supportInfo;
        /*0x20*/ System.Collections.Generic.List<UnitSpawnInfo> supportInfoList;

        /*0xe4eda0*/ <>c__DisplayClass452_0();
        /*0xe4eda8*/ void <StartSpawnGuildSupportUnit>b__0();
    }
}

class ReplayCheatManager : Singleton.Component.SingletonComponent<ReplayCheatManager>
{
    /*0x24*/ Battle.GameModeType GameMode;
    /*0x28*/ string MappointName;
    /*0x30*/ string ReplayID;
    /*0x38*/ long PlayerID;

    /*0xf1f5b8*/ ReplayCheatManager();
    /*0xf1efe8*/ void StartReplay();
    /*0xf1f5a8*/ void AwakeInstance();
    /*0xf1f5ac*/ bool InitInstance();
    /*0xf1f5b4*/ void ReleaseInstance();
    /*0xf1f634*/ void <StartReplay>b__4_0(ServerProtocol.ResCampaignReplay response);
    /*0xf1f70c*/ void <StartReplay>b__4_1(ServerProtocol.ResTowerReplay response);
    /*0xf1f7e4*/ void <StartReplay>b__4_2(ServerProtocol.ResArenaReplay res);
    /*0xf1f8c4*/ void <StartReplay>b__4_3(PTShare.Define.SGuildBossReplay sGuildBossReplay);
}

class ProjectileBase : ObjectBase
{
    /*0x3c*/ Battle.ColliderData m_SightCollider;
    /*0x48*/ float m_Speed;
    /*0x50*/ ParticleBase m_Particle;
    /*0x58*/ string m_ExitEffectName;
    /*0x60*/ string m_HitEffectName;
    /*0x68*/ AssetBundleType m_ExitSoundType;
    /*0x70*/ string m_ExitSoundName;
    /*0x78*/ bool m_FixTopBottom;
    /*0x80*/ SkillFXTrigger m_SkillFXTrigger;
    /*0xd8*/ Battle.AttackType m_eAttackType;
    /*0xe0*/ System.Collections.Generic.List<CharacterBase> m_lisTarget;
    /*0xe8*/ bool m_bPlayer;
    /*0xec*/ float m_fTotalMoveDistance;
    /*0xf0*/ UnityEngine.Vector2 m_vTargetPOS;
    /*0xf8*/ UnityEngine.Vector2 m_vTargetDIR;
    /*0x100*/ UnityEngine.Vector2 m_vMoveDIR;
    /*0x108*/ Battle.StateAndSkillID m_OwnerSkillID;
    /*0x10c*/ bool m_bStartInit;
    /*0x110*/ UnityEngine.Vector3 m_vScaleOrigin;

    /*0x100f5fc*/ ProjectileBase();
    /*0x100ed90*/ Battle.Direction get_GetDirection();
    /*0x100eda4*/ UnityEngine.Vector2 get_GetDirectionVector2();
    /*0x100edac*/ bool get_IsProjectile();
    /*0x100edb4*/ void StartInit();
    /*0x100eeb4*/ void Init(CharacterBase _owner, UnityEngine.Vector3 _vSpawnPos, UnityEngine.Vector2 _vecTargetPos, int _nSkillLV, int[] _arrSkillFXID);
    /*0x100f10c*/ void InitChild();
    /*0x100f110*/ void UpdateObject();
    /*0x100f260*/ bool CheckProjectileOut();
    /*0x100f274*/ void RotateToTarget(UnityEngine.Vector2 _vecTargetPos);
    /*0x100f3b4*/ void MoveProjectile();
    /*0x100f45c*/ void DeleteEffect();
    /*0x100f1fc*/ void DeleteProjectile();
    /*0x100f534*/ bool CheckAttackCollisionProjectile();
    /*0x100f0f0*/ void AddReference();
    /*0x100f518*/ void RemoveReference();
}

class Projectile_Bomb : ProjectileBase
{
    /*0x11c*/ float m_fHeight;
    /*0x120*/ UnityEngine.Vector3 m_vecMovePOS;
    /*0x12c*/ UnityEngine.Vector2 m_vecStartPOS;
    /*0x134*/ bool m_bTargetLeft;
    /*0x138*/ float m_fCurTime;
    /*0x13c*/ float m_fHighestY;
    /*0x140*/ bool m_bFallen;

    /*0x100fb2c*/ Projectile_Bomb();
    /*0x100f840*/ void InitChild();
    /*0x100f898*/ void MoveProjectile();
    /*0x100f964*/ void CalcParabola(ref UnityEngine.Vector3 curPos, UnityEngine.Vector2 start, UnityEngine.Vector2 end, float height, float t);
    /*0x100fae4*/ bool CheckAttackCollisionProjectile();
    /*0x100faec*/ bool CheckProjectileOut();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ float height;

        /*0x108c5d0*/ <>c__DisplayClass9_0();
        /*0x108c5d8*/ float <CalcParabola>b__0(float x);
    }
}

class Projectile_Bomb_Center : Projectile_Bomb
{
    /*0x100fb64*/ Projectile_Bomb_Center();
    /*0x100fb38*/ void InitChild();
}

class Projectile_Boomerang : ProjectileBase
{
    /*0x11c*/ float ReturnSpeedMult;
    /*0x120*/ float DisperseDistance;
    /*0x124*/ UnityEngine.Vector2 m_vFirstMovePosition;
    /*0x12c*/ UnityEngine.Vector2 m_vRecentTargetPosition;
    /*0x134*/ Battle.ColliderData m_targetCollider;
    /*0x140*/ bool m_bFirstMoveState;
    /*0x141*/ bool m_bTargetEnable;
    /*0x148*/ CharacterBase m_Target;

    /*0x1010004*/ Projectile_Boomerang();
    /*0x100fb70*/ void InitChild();
    /*0x100fcf0*/ void Init(CharacterBase _owner, UnityEngine.Vector3 _vSpawnPos, UnityEngine.Vector2 _vecTargetPos, int _nSkillLV, int[] _arrSkillFXID);
    /*0x100fd28*/ void MoveProjectile();
    /*0x100ff1c*/ bool CheckAttackCollisionProjectile();
    /*0x100ffd0*/ void SetTarget();
}

class Projectile_Delayed_Dualcross : ProjectileBase
{
    /*0x11c*/ float m_fDelayedTime;
    /*0x120*/ string m_HitEffectName_Instant;
    /*0x128*/ float m_fCurDelayTime;
    /*0x130*/ CharacterBase m_DelayTarget;

    /*0x10105bc*/ Projectile_Delayed_Dualcross();
    /*0x1010018*/ void InitChild();
    /*0x1010044*/ bool CheckAttackCollisionProjectile();
    /*0x10102ec*/ void DeleteEffect();
    /*0x10103c4*/ void MoveProjectile();
    /*0x1010474*/ void HandleCheckDelayTime();
}

class Projectile_Fallen : ProjectileBase
{
    /*0x11c*/ float m_FallenDistanceX;
    /*0x120*/ float m_FallenDistanceY;

    /*0x10106b4*/ Projectile_Fallen();
    /*0x10105c0*/ void InitChild();
    /*0x10105d0*/ void SetFallenDistancePosition();
    /*0x1010658*/ bool CheckAttackCollisionProjectile();
    /*0x1010660*/ bool CheckProjectileOut();
}

class Projectile_Penetration : ProjectileBase
{
    /*0x120*/ System.Collections.Generic.List<CharacterBase> m_lisExcept;
    /*0x128*/ float m_PenetrationRate;

    /*0x1010a0c*/ Projectile_Penetration();
    /*0x10106c0*/ void InitChild();
    /*0x10107ac*/ bool CheckAttackCollisionProjectile();
}

class Projectile_Penetration_Dualcross : Projectile_Penetration
{
    /*0x1010b64*/ Projectile_Penetration_Dualcross();
    /*0x1010a88*/ void InitChild();
}

class Projectile_Penetration_MIKO : Projectile_Penetration
{
    /*0x1010c64*/ Projectile_Penetration_MIKO();
    /*0x1010b68*/ void InitChild();
}

class Projectile_Penetration_Monk : Projectile_Penetration
{
    /*0x1010ce8*/ Projectile_Penetration_Monk();
    /*0x1010c68*/ void InitChild();
}

class Projectile_Sabre : Projectile_Boomerang
{
    /*0x1010d3c*/ Projectile_Sabre();
    /*0x1010cec*/ void SetTarget();
}

class ShaderChanger : UnityEngine.MonoBehaviour
{
    static string m_InstanceMaterialName = "CustomInstanceMaterial";
    static /*0x0*/ ulong count;
    /*0x18*/ Battle.UnitShaderType ShaderType;
    /*0x20*/ UnityEngine.UI.Image m_Image;
    /*0x28*/ Spine.Unity.SkeletonAnimation m_SkeletonAnimation;
    /*0x30*/ UnityEngine.MeshRenderer m_MeshRenderer;
    /*0x38*/ Spine.Unity.SkeletonGraphic m_SkeletonGraphic;
    /*0x40*/ ShaderChanger_Data m_ShaderChangerData;

    static /*0xe2849c*/ ShaderChanger();
    /*0xe28494*/ ShaderChanger();
    /*0xe27964*/ UnityEngine.Material get_CurrentMaterial();
    /*0xe2797c*/ void set_CurrentMaterial(UnityEngine.Material value);
    /*0xe27998*/ Spine.Unity.SkeletonDataAsset get_CurrentSpineAsset();
    /*0xe279b0*/ void set_CurrentSpineAsset(Spine.Unity.SkeletonDataAsset value);
    void SetShader();
    /*0xe279cc*/ void Initialize();
    /*0xe2848c*/ void ExitShader();
    /*0xe28490*/ void SetFloatProperty(float _value);
}

class ShaderChanger_Data : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Material CurrentMaterial;
    /*0x20*/ Spine.Unity.SkeletonDataAsset CurrentSkeletonDataAsset;

    /*0xe28508*/ ShaderChanger_Data();
    /*0xe284a0*/ void OnDestroy();
}

class ShaderChanger_Dissolve : ShaderChanger
{
    static string m_ColorPropertyName = "_EmissionColor";
    static string m_PowerPropertyName = "_DissolvePower";
    static string m_ThicknessPropertyName = "_EmissionThickness";
    static string m_TexturePropertyName = "_DissolveTex";
    /*0x48*/ UnityEngine.Shader m_Shader;
    /*0x50*/ UnityEngine.Texture m_Texture;
    /*0x58*/ UnityEngine.Color m_Color;
    /*0x68*/ float m_Thickness;

    /*0xe2875c*/ ShaderChanger_Dissolve();
    /*0xe28510*/ void SetShader();
    /*0xe2865c*/ void ExitShader();
    /*0xe2866c*/ void SetFloatProperty(float _fdissolveRatio);
    /*0xe28750*/ void SetColor(UnityEngine.Color _color);
}

class ShaderChanger_Gray : UnityEngine.MonoBehaviour
{
    static string EnableGray = "_GrayPhase";
    /*0x18*/ bool m_IsEnableGray;
    /*0x20*/ Spine.Unity.SkeletonGraphic skeletonGraphics;
    /*0x28*/ UnityEngine.Material curMaterial;

    /*0xe289a8*/ ShaderChanger_Gray();
    /*0xe287dc*/ void SetEnableGray(bool enable);
}

class ShaderChanger_Original : ShaderChanger
{
    /*0x48*/ UnityEngine.Shader m_Shader;

    /*0xe28bc8*/ ShaderChanger_Original();
    /*0xe289b8*/ void Initialize();
    /*0xe28a98*/ void SetShader();
}

class BattleSystemInit : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform SpawnParentTrans;
    /*0x20*/ UnityEngine.RectTransform SafeAreaTrans;
    /*0x28*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_Idle;
    /*0x30*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy_Idle;
    /*0x38*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly;
    /*0x40*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_Big;
    /*0x50*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy_Big;
    /*0x58*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_WorldBoss;
    /*0x60*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListAlly_PVE;
    /*0x68*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosListEnemy_PVE;
    /*0x70*/ UnityEngine.SpriteRenderer m_goSkillFadeSprite;
    /*0x78*/ bool m_bBattleScene;
    /*0x7c*/ Battle.GameModeType m_eGameModeType;
    /*0x80*/ CharacterBase tmp_Unit;
    /*0x88*/ UnityEngine.Vector2 tmp_vecPos;
    /*0x90*/ int tmp_nUnitID;
    /*0x94*/ int i;
    /*0x98*/ System.Collections.Generic.List<UnitSpawnInfo> tmp_lisUnitSpawnInfo;
    /*0xa0*/ System.Collections.Generic.List<int> tmp_lisFactionBuffID;
    /*0xa8*/ int m_nGuildBattlePositionIndex_Ally;
    /*0xac*/ int m_nGuildBattlePositionIndex_Enemy;

    /*0x1360298*/ BattleSystemInit();
    /*0x135bfe8*/ UnityEngine.Vector3 get_GetIdleAllySpawnPOS();
    /*0x135c050*/ void OnDestroy();
    /*0x135c14c*/ void Start();
    /*0x135cd40*/ System.Collections.IEnumerator CoDelayedStartIdle();
    /*0x135cdac*/ void HandleCheckChangeMainMenu(MainMenuType _eType);
    /*0x135cea4*/ void InitializeForIdle();
    /*0x135d1f8*/ void SetRectTransPosY(float _fPosY);
    /*0x135d1dc*/ void SetRectTransAnchor(UnityEngine.Vector2 _vAnchorPosition);
    /*0x135c2f8*/ void InitalizeEvent();
    /*0x135d4f4*/ void HandleSpawnStageUnitsAll();
    /*0x135e0f0*/ void HandleSpawnUnitsForWorldBoss();
    /*0x135e20c*/ void HandleSpawnUnitsForPveRanking();
    /*0x135e4d8*/ void HandleSpawnStageUnitsAll_Big();
    /*0x135f264*/ void HandleSpawnUnitsForInGameBattle();
    /*0x135f358*/ void HandleSpawnUnitsForInGameBattle_Big();
    /*0x135f44c*/ void HandleSpawnUnitsForInGameDemo();
    /*0x135f7dc*/ void HandleSpawnUnitsForDPSTest();
    /*0x135f98c*/ void HandleSpawnAllyUnitsForIdleBattle();
    /*0x1360128*/ void HandleSpriteActive(bool _bActive);
    /*0x135d5f8*/ void SpawnUnit(int _nUnitIndex, int _nPosIndex, bool _bPlayer, BattleSystemInit.SpawnUnitType _eSpawnType);
    /*0x1360208*/ void SpawnUnit_Support(int _nUnitIndex, bool _bPlayer);
    /*0x135d244*/ System.Collections.Generic.List<UnityEngine.Transform> GetSpawnPosList(bool _bPlayer);
    /*0x135d338*/ void ShowTroopPopup();
    /*0x13602a0*/ void <InitializeForIdle>b__22_0();
    /*0x13602fc*/ void <InitializeForIdle>b__22_1();

    struct SpawnUnitSetting
    {
        /*0x10*/ Battle.UnitNameID UnitID;
        /*0x14*/ int UnitLV;
        /*0x18*/ int UnitGrade;
        /*0x1c*/ int UnitTier;
    }

    enum SpawnUnitType
    {
        NONE = 0,
        GUILD_SUPPORT = 1,
        WORLD_BOSS = 2,
    }

    class <CoDelayedStartIdle>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BattleSystemInit <>4__this;

        /*0xda2888*/ <CoDelayedStartIdle>d__20(int <>1__state);
        /*0xda28b4*/ void System.IDisposable.Dispose();
        /*0xda28b8*/ bool MoveNext();
        /*0xda2958*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda2960*/ void System.Collections.IEnumerator.Reset();
        /*0xda29a0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ System.Collections.Generic.List<UnityEngine.Transform> spawnPosList;

        /*0xda27c8*/ <>c__DisplayClass25_0();
        /*0xda27d0*/ void <InitalizeEvent>b__0();
        /*0xda282c*/ void <InitalizeEvent>b__1();
    }
}

class DebugDisplay : Singleton.Component.SingletonComponent<DebugDisplay>
{
    static float FONT_SIZE_MULT = 0.019999999552965164;
    /*0x21*/ bool isEnable;
    /*0x28*/ UnityEngine.GameObject m_Background;
    /*0x30*/ UnityEngine.Color COLOR_NORMAL;
    /*0x40*/ UnityEngine.Color COLOR_WARNING;
    /*0x50*/ UnityEngine.Color COLOR_ERROR;
    /*0x60*/ UnityEngine.Color COLOR_FRAME;
    /*0x70*/ UnityEngine.Color COLOR_MEMORY;
    /*0x80*/ bool m_bBackgroundOn;
    /*0x88*/ UnityEngine.GUIStyle style;
    /*0x90*/ float deltaTime;
    /*0x94*/ UnityEngine.Rect rect;
    /*0xa4*/ int h;
    /*0xa8*/ int w;
    /*0xb0*/ string text;
    /*0xb8*/ System.Collections.Generic.List<Debug.DebugInfo> m_lisDebugInfo;
    /*0xc0*/ System.Text.StringBuilder m_StringBuilder;

    /*0xf5f0cc*/ DebugDisplay();
    /*0xf5e788*/ void AwakeInstance();
    /*0xf5e78c*/ bool InitInstance();
    /*0xf5e794*/ void ReleaseInstance();
    /*0xf5e798*/ void Update();
    /*0xf5e880*/ void OnGUI();
}

class EnumFlagsAttribute : UnityEngine.PropertyAttribute
{
    /*0x14b9d50*/ EnumFlagsAttribute();
}

class ObjectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform <transform>k__BackingField;
    /*0x20*/ long <UniqueNumber>k__BackingField;
    /*0x28*/ CharacterBase <Character>k__BackingField;
    /*0x30*/ InGameController m_InGameController;
    /*0x38*/ bool m_bBaseStartInit;

    /*0x2b53d48*/ ObjectBase();
    /*0x2b53ad4*/ UnityEngine.Transform get_transform();
    /*0x2b53adc*/ void set_transform(UnityEngine.Transform value);
    /*0x2b53ae4*/ long get_UniqueNumber();
    /*0x2b53aec*/ void set_UniqueNumber(long value);
    /*0x2b53af4*/ CharacterBase get_Character();
    /*0x2b53afc*/ void set_Character(CharacterBase value);
    /*0x2b53b04*/ UnityEngine.Vector2 get_CenterPosition();
    /*0x2b53b20*/ UnityEngine.Vector2 get_RootPosition();
    /*0x2b53b2c*/ UnityEngine.Vector2 get_FirstTargetPosition();
    /*0x2b53b4c*/ Battle.Direction get_GetDirection();
    /*0x2b53bb4*/ UnityEngine.Vector2 get_GetDirectionVector2();
    /*0x2b53bbc*/ bool get_IsProjectile();
    /*0x2b53bc4*/ void Awake();
    /*0x2b53bc8*/ void BaseStartInit();
    /*0x2b53c2c*/ void BaseInit(CharacterBase _character);
    /*0x2b53c34*/ void BaseInit();
    /*0x2b53c9c*/ void SetUniqueNumber();
    /*0x2b53d04*/ void UpdateObject();
    /*0x2b53d08*/ CharacterBase GetPrevTarget();
    /*0x2b53d1c*/ float GetTotalStat(Battle.CharacterStat.StatType _eStatType);
    /*0x2b53d34*/ bool get_IsPlayer();
}

class BossDropItem : UnityEngine.MonoBehaviour
{
    /*0x18*/ BossDropItem.ItemState <CurrentItemState>k__BackingField;
    /*0x20*/ UnityEngine.SpriteRenderer m_RewardBoxSprite;
    /*0x28*/ int m_nRewardStep;
    /*0x2c*/ UnityEngine.Vector3 m_vTargetPosition;
    /*0x38*/ UnityEngine.Transform m_Transform;
    /*0x40*/ DG.Tweening.Sequence m_Seq;

    /*0x136446c*/ BossDropItem();
    /*0x1363e58*/ BossDropItem.ItemState get_CurrentItemState();
    /*0x1363e60*/ void set_CurrentItemState(BossDropItem.ItemState value);
    /*0x1363e68*/ UnityEngine.Vector2 get_GetPosition();
    /*0x1363e90*/ void Init(int _nRewardStep);
    /*0x13641b0*/ void Update();
    /*0x13643fc*/ void Delete();
    /*0x136445c*/ void ChangeToGetRewardState();
    /*0x1364468*/ void UpdateGetItemTween();

    enum ItemState
    {
        NONE = 0,
        DROP = 1,
        WAIT = 2,
        GET = 3,
    }
}

class BuffIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ int <BuffID>k__BackingField;
    /*0x20*/ UnityEngine.Transform transform;
    /*0x28*/ AtlasImage m_Atlas;
    /*0x30*/ UnityEngine.UI.Text m_CountText;
    /*0x38*/ int m_nBuffCount;

    /*0x16f08a4*/ BuffIcon();
    /*0x16f070c*/ int get_BuffID();
    /*0x16f0714*/ void set_BuffID(int value);
    /*0x16f071c*/ void Init(string _sBuffIconName, int _nBuffID);
    /*0x16f07a8*/ void SetCount(int _nCount);
}

class BuffIconUI : UnityEngine.MonoBehaviour
{
    static string ATK_BUFF_IMAGE_NAME = "PowerUp1_Buff";
    static string HP_BUFF_IMAGE_NAME = "HpUp1_Buff";
    static string DEF_BUFF_IMAGE_NAME = "GuardUp1_Buff";
    static string SP_HIT_BUFF_IMAGE_NAME = "MpUp1_Buff";
    static string CRIT_BUFF_IMAGE_NAME = "FatalBlowUp1_Buff";
    static string CRIT_DAMAGE_BUFF_IMAGE_NAME = "FatalBlowEffectUp1_Buff";
    static string HAST_BUFF_IMAGE_NAME = "FastUp1_Buff";
    static string FRAME_LV1_NAME = "Buff_Frame1";
    static string FRAME_LV3_NAME = "Buff_Frame2";
    static string FRAME_LV2_LV4_NAME = "Buff_Frame3";
    /*0x18*/ AtlasImage m_BuffImage;
    /*0x20*/ AtlasImage m_BuffFrame;
    /*0x28*/ UnityEngine.UI.Image m_BuffGage;
    /*0x30*/ Helper_FactionBuff.FactionBuffType m_eFactionBuffType;
    /*0x34*/ Battle.BuffIconType m_eCurrentBuffIconType;

    /*0x16f1e70*/ BuffIconUI();
    /*0x16f1808*/ void Init(Battle.BuffIconType _eIconType, int _nMaxLV, int _nBuffLV, Helper_FactionBuff.FactionBuffType _eFactionBuffType);
    /*0x16f1cb0*/ void OpenBuffPage();
    /*0x16f1b80*/ UnityEngine.GameObject GetImageObject();
}

class CutScenePrefab : ObjectBase
{
    /*0x40*/ CutSceneEntity m_CutSceneEntity;
    /*0x48*/ ParticleBase m_Particle;
    /*0x50*/ bool m_bStartInit;
    /*0x54*/ float m_fDeleteCooltime;

    /*0xf4f250*/ CutScenePrefab();
    /*0xf4efe4*/ void StartInit();
    /*0xf4f13c*/ void InitCutScene(int _nUnitID);
    /*0xf4f1d0*/ void UpdateObject();
}

class DamageMarker : ObjectBase
{
    /*0x40*/ UnityEngine.UI.Text m_Text;
    /*0x48*/ float m_FontSizeMult;
    /*0x4c*/ float m_MissSizeMult;
    /*0x50*/ float m_CriticalSizeMult;
    /*0x54*/ float m_ExpandDuration;
    /*0x58*/ float m_ShrinkDuration;
    /*0x5c*/ float m_FadeOutDuration;
    /*0x60*/ UnityEngine.RectTransform m_RectTransform;
    /*0x68*/ UnityEngine.Transform m_ParentOrigin;
    /*0x70*/ UnityEngine.Transform m_Parent;
    /*0x78*/ DG.Tweening.Sequence m_Seq;
    /*0x80*/ int m_nDamage;
    /*0x84*/ float m_fCurTime;
    /*0x88*/ float m_fScaleMultParent;
    /*0x8c*/ UnityEngine.Vector2 m_vecScaleOrigin;
    /*0x94*/ int m_nFontSizeOrigin;
    /*0x98*/ float m_fFontSizeMultPost;
    /*0x9c*/ bool m_bStartInit;
    /*0xa0*/ DamageMarker.InitParams m_InitParams;
    /*0xb8*/ float m_fCurrentDelay;
    /*0xbc*/ bool m_bDelayed;

    /*0xf5cbe0*/ DamageMarker();
    /*0xf5c1ac*/ void Awake();
    /*0xf5c200*/ void StartInit();
    /*0xf5c2b4*/ void Init(UnityEngine.Transform _parent, float _fUnitSize, float _fDamage, bool _bCritical, bool _bDelayed);
    /*0xf5ca50*/ void Init();
    /*0xf5ca68*/ void Update();
    /*0xf5c8f0*/ void DeleteMarker(bool _bUseTween);
    /*0xf5cc14*/ void <DeleteMarker>b__27_0();

    struct InitParams
    {
        /*0x10*/ UnityEngine.Transform Parent;
        /*0x18*/ float UnitSize;
        /*0x1c*/ float Damage;
        /*0x20*/ bool IsCriitical;

        /*0xa8a1b8*/ InitParams(UnityEngine.Transform _parent, float _fUnitSize, float _fDamage, bool _bCritical);
    }
}

class DropCoin : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform m_Trans;
    /*0x20*/ Spine.Unity.SkeletonAnimation m_Anim;
    /*0x28*/ DropCoin.CoinState m_CoinState;
    /*0x2c*/ UnityEngine.Vector2 m_Dir;
    /*0x34*/ float m_fFallenSpeed;
    /*0x38*/ float m_fTotalTime;
    /*0x3c*/ UnityEngine.Vector2 m_vCoinDest;
    /*0x44*/ bool m_bSetCoinDest;

    /*0x11f2d84*/ DropCoin();
    /*0x11f2638*/ void Init();
    /*0x11f2908*/ void Update();
    /*0x11f2b60*/ void CoinAnimFallenEvent(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x11f2ce0*/ void CoinAnimIdleComplete(Spine.TrackEntry trackEntry);
    /*0x11f2b04*/ void DeleteCoin();

    enum CoinState
    {
        IDLE = 0,
        FALLEN = 1,
        FLYING = 2,
    }
}

class FactionBuffPopupButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ Helper_FactionBuff.FactionBuffType m_FactionBuffType;

    /*0x11d9a8c*/ FactionBuffPopupButton();
    /*0x11d9a04*/ void OpenBuffPage();
}

class GizmoGUI : UnityEngine.MonoBehaviour
{
    /*0xed37a8*/ GizmoGUI();
}

class GizmoGUI_Data
{
}

class KillCutscene : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_Cutscene_Kill;
    /*0x20*/ Spine.Unity.Modules.SkeletonGraphicMultiObject m_Cutscene_Death;
    /*0x28*/ Spine.Unity.SkeletonGraphic m_Cutscene_KillMessage;
    /*0x30*/ float m_Duration;
    /*0x34*/ float m_DeathDelay;
    /*0x38*/ float anchorY;
    /*0x3c*/ InGameController.KillCutsceneInfo m_CutsceneInfo;
    /*0x4c*/ float m_fCurDuration;
    /*0x50*/ float m_fCurDeathDelay;

    /*0xfa883c*/ KillCutscene();
    /*0xfa82e8*/ void Init(InGameController.KillCutsceneInfo _info);
    /*0xfa868c*/ void UpdateCutscene();
}

class SupportCutScene : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector2 AnchorPosition;
    /*0x20*/ UnityEngine.UI.Image m_TextBoxFrame;
    /*0x28*/ LocalizeString m_SpawnText;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_Animation;
    /*0x38*/ int m_nSkinID;
    /*0x40*/ DG.Tweening.Sequence m_Sequence;

    /*0xc9d8cc*/ SupportCutScene();
    /*0xc9d550*/ void Init(int _nSkinID);
    /*0xc9d7e8*/ void UpdateSupportCutScene();
    /*0xc9d868*/ void Delete();

    class <>c__DisplayClass6_0
    {
        /*0x10*/ SupportCutScene <>4__this;
        /*0x18*/ int _nSkinID;

        /*0xcc3c40*/ <>c__DisplayClass6_0();
        /*0xcc3c48*/ void <Init>g__HandleCompleteIn|0(Spine.TrackEntry _entry);
        /*0xcc3de4*/ void <Init>b__2();
        /*0xcc402c*/ void <Init>g__HandleCompleteOut|1(Spine.TrackEntry _entry);
    }
}

class UnitBattleStatusSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnitStatusSlotBar m_StatusBar;
    /*0x20*/ AtlasImage m_Frame;
    /*0x28*/ AtlasImage m_Background;
    /*0x30*/ AtlasImage m_Character;
    /*0x38*/ AtlasImage m_PropertyIcon;
    /*0x40*/ AtlasImage m_BackgroundHPMP;
    /*0x48*/ AtlasImage m_originalEpicIcon;
    /*0x50*/ LocalizeString m_CharacterName;
    /*0x58*/ UnityEngine.GameObject m_SkillOnParticle;
    /*0x60*/ UnityEngine.ParticleSystem m_SkillUseParticle;
    /*0x68*/ AtlasImage[] m_arrStar;
    /*0x70*/ bool <IsInitialized>k__BackingField;
    /*0x74*/ int m_TouchIndex;
    /*0x78*/ UnityEngine.RectTransform m_RectTransform;
    /*0x80*/ CharacterBase m_LinkCharacter;
    /*0x88*/ bool m_bSkillEnable;
    /*0x90*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x98*/ UnityEngine.Transform m_ParentTransform;
    /*0xa0*/ UnityEngine.Transform m_SkillUseParticleParentTrans;

    /*0x10c18e8*/ UnitBattleStatusSlot();
    /*0x10c0440*/ UnitStatusSlotBar get_StatusBar();
    /*0x10c0448*/ bool get_IsInitialized();
    /*0x10c0450*/ void set_IsInitialized(bool value);
    /*0x10c045c*/ bool IsReadySkill();
    /*0x10c0464*/ void Init(CharacterBase _character, bool _isEnemy, int _id, int _grade, float _health, float _maxHealth);
    /*0x10c114c*/ void SetActiveStatusSlotBar(bool _bActive);
    /*0x10c1190*/ void EnableGray(bool _enable);
    /*0x10c12a4*/ void SetTouchIndex(int _index);
    /*0x10c12ac*/ void TouchSkillUI();
    /*0x10c1328*/ void SetActiveSkillEnableParticle(bool _bActive);
    /*0x10c10d4*/ void SetActiveUIParticles(bool _bActive);
    /*0x10c13c4*/ void SetActiveBattleStatusSlot(bool _bActive);
    /*0x10c112c*/ void SetActiveOriginalEpicIcon(bool _bActive);
    /*0x10c13f8*/ void SetDecreaseToCurrent();
    /*0x10c1470*/ void HandleParticleSetParent();
    /*0x10c1664*/ void HandleCheckUseSkillULT(int _nSkillSlot);
    /*0x10c174c*/ void HandleParticleDisenable();
}

class UnitStatusBar : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Slider m_HealthBar;
    /*0x20*/ UnityEngine.UI.Slider m_HealthDecreaseBar;
    /*0x28*/ AtlasImage m_HealthImage;
    /*0x30*/ AtlasImage m_HealthFrame;
    /*0x38*/ UnityEngine.UI.Slider m_SteminaBar;
    /*0x40*/ AtlasImage m_SteminaImage;
    /*0x48*/ AtlasImage m_SteminaFrame;
    /*0x50*/ UnityEngine.UI.Slider m_ShieldBar;
    /*0x58*/ AtlasImage m_ShieldImage;
    /*0x60*/ float m_HealthBarDecreaseWaitTime;
    /*0x64*/ float m_HealthBarDecreaseTickTime;
    /*0x68*/ float m_HealthBarDecreaseAmount;
    /*0x70*/ UnitBattleStatusSlot m_UnitStatusSlot;
    /*0x78*/ UnityEngine.GameObject m_Parent;
    /*0x80*/ UnityEngine.WaitForSeconds m_CoDecreaseTicks;
    /*0x88*/ bool m_Enemy;
    /*0x8c*/ float m_fHealth;
    /*0x90*/ float m_fMaxHealth;
    /*0x94*/ float m_fPrevHealth;
    /*0x98*/ bool m_bStartProgress;
    /*0xa0*/ System.Collections.IEnumerator m_ieAnimation;
    /*0xa8*/ bool <IsParentActive>k__BackingField;

    /*0x10c3dd8*/ UnitStatusBar();
    /*0x10c33bc*/ bool get_IsParentActive();
    /*0x10c33c4*/ void set_IsParentActive(bool value);
    /*0x10c33d0*/ void Init(bool _enemy, float _health, float _maxHealth, float _stamina, float _maxStamina, UnitBattleStatusSlot _slot);
    /*0x10c3918*/ void SetActiveStatusBar(bool _bActive);
    /*0x10c3938*/ void SetActiveStatusSlotBar(bool _bActive);
    /*0x10c3888*/ void SetEnableMPSlider(bool _bEnable);
    /*0x10c38d0*/ void SetEnableHPSlider(bool _bEnable);
    /*0x10c394c*/ void SetHealthBar(float _health, float _maxHealth);
    /*0x10c3ba0*/ void SetShieldBar(float _shield, float _maxShield);
    /*0x10c3c7c*/ void SetSteminaBar(float _stemina, float _maxStemina);
    /*0x10c371c*/ void EnableGray(bool _enable);
    /*0x10c3c18*/ void RefreshShieldSilder();
    /*0x10c1408*/ void SetDecreaseToCurrent();
    /*0x10c3a00*/ void StartDecrease();
    /*0x10c3d6c*/ System.Collections.IEnumerator CoDecreaseHealthBar();

    class <CoDecreaseHealthBar>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnitStatusBar <>4__this;
        /*0x28*/ float <barProgress>5__2;

        /*0xd8a714*/ <CoDecreaseHealthBar>d__37(int <>1__state);
        /*0xd8a740*/ void System.IDisposable.Dispose();
        /*0xd8a744*/ bool MoveNext();
        /*0xd8a924*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8a92c*/ void System.Collections.IEnumerator.Reset();
        /*0xd8a96c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class UnitStatusSlotBar : UnitStatusBar
{
    /*0x10c3f30*/ UnitStatusSlotBar();
    /*0x10c0b48*/ void Init(bool _enemy, float _health, float _maxHealth, UnitBattleStatusSlot _slot);
    /*0x10c3dfc*/ void SetSteminaBar(float _stemina, float _maxStemina);
    /*0x10c3e6c*/ void SetHealthBar(float _curHealth, float _maxHealth);
    /*0x10c3eb8*/ void SetShieldBar(float _curShield, float _maxShield);
}

class VerifyCodeVersion
{
    static /*0x0*/ string Value;

    static /*0x10d28f4*/ VerifyCodeVersion();
}

class AssetBundleLoadOperation : System.Collections.IEnumerator
{
    /*0xf77374*/ AssetBundleLoadOperation();
    /*0xf7780c*/ object get_Current();
    /*0xf77814*/ bool MoveNext();
    /*0xf77838*/ void Reset();
    bool Update();
    bool IsDone();
    float GetProgress();
}

class AssetBundleLoadLevelSimulationOperation : AssetBundleLoadOperation
{
    /*0xf777ec*/ AssetBundleLoadLevelSimulationOperation();
    /*0xf777f4*/ bool Update();
    /*0xf777fc*/ bool IsDone();
    /*0xf77804*/ float GetProgress();
}

class AssetBundleLoadLevelOperation : AssetBundleLoadOperation
{
    /*0x10*/ string m_AssetBundleName;
    /*0x18*/ string m_LevelName;
    /*0x20*/ bool m_IsAdditive;
    /*0x28*/ string m_DownloadingError;
    /*0x30*/ UnityEngine.AsyncOperation m_Request;

    /*0xf775e8*/ AssetBundleLoadLevelOperation(string assetbundleName, string levelName, bool isAdditive);
    /*0xf7766c*/ bool get_IsStart();
    /*0xf7767c*/ void SetAllowSceneActivation(bool enable);
    /*0xf7769c*/ bool Update();
    /*0xf77778*/ bool IsDone();
    /*0xf7779c*/ float GetProgress();
}

class AssetBundleLoadAssetOperation : AssetBundleLoadOperation
{
    /*0xf7736c*/ AssetBundleLoadAssetOperation();
    T GetAsset<T>();
}

class AssetBundleLoadAssetOperationSimulation : AssetBundleLoadAssetOperation
{
    /*0x10*/ UnityEngine.Object m_SimulatedObject;

    /*0xf775a4*/ AssetBundleLoadAssetOperationSimulation(UnityEngine.Object simulatedObject);
    T GetAsset<T>();
    /*0xf775d0*/ bool Update();
    /*0xf775d8*/ bool IsDone();
    /*0xf775e0*/ float GetProgress();
}

class AssetBundleLoadAssetOperationFull : AssetBundleLoadAssetOperation
{
    /*0x10*/ string m_AssetBundleName;
    /*0x18*/ string m_AssetName;
    /*0x20*/ string m_DownloadingError;
    /*0x28*/ System.Type m_Type;
    /*0x30*/ UnityEngine.AssetBundleRequest m_Request;

    /*0xf7737c*/ AssetBundleLoadAssetOperationFull(string bundleName, string assetName, System.Type type);
    T GetAsset<T>();
    /*0xf773bc*/ bool Update();
    /*0xf77530*/ bool IsDone();
    /*0xf77554*/ float GetProgress();
}

class AssetBundleManager : Singleton.Component.SingletonComponent<AssetBundleManager>
{
    static bool useTempCachedBundle = true;
    static /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.Object, UsingAssetData> _usingAssetDic;
    /*0x28*/ System.Text.StringBuilder _tempSB;
    /*0x30*/ System.Collections.Generic.Dictionary<string, LoadedAssetBundle> _loadedAssetBundles;
    /*0x38*/ System.Collections.Generic.List<BundleManifest> _loadedBundleManifest;
    /*0x40*/ string _streamingPath;
    /*0x48*/ string _cachePath;

    static /*0xf7a340*/ AssetBundleManager();
    static /*0xf78b78*/ string GetBundleName_ForBuild(AssetBundleType _type, string[] _arg);
    static /*0xf788ec*/ string ParseAssetBundleParam_Name(AssetBundleType type, string[] arg);
    /*0xf7a228*/ AssetBundleManager();
    /*0xf7783c*/ void IncreaseUsingData(string bundleName, LoadedAssetBundle loadedBundle, UnityEngine.Object asset);
    /*0xf779c4*/ void DecreaseUsingData(UnityEngine.Object asset);
    /*0xf77cdc*/ void LoadLevel(AssetBundleSceneType _type, string _scene_name, bool _is_additive);
    /*0xf77f3c*/ void UnloadAllLevelAssetBundles();
    /*0xf77f80*/ void UnloadAssetBundleScene(AssetBundleSceneType _type);
    /*0xf78030*/ void UnloadLevelAndDecRef(AssetBundleSceneType _type, string _scene_name);
    /*0xf780f8*/ void UnloadLevelAndAssetBundle(AssetBundleSceneType _type, string _scene_name);
    T LoadAsset<T>(AssetBundleType _type, string _file_name, string[] _arg);
    System.Collections.IEnumerator LoadAsync_Asset<T>(System.Action<T> _result_func, AssetBundleType _type, string _file_name, string[] _arg);
    /*0xf781f0*/ void UnloadAsset(UnityEngine.Object _asset);
    /*0xf78284*/ string GetSimulateAssetBundlePath(string[] _asset_paths, AssetBundleType _type, string _file_name, string[] _arg);
    /*0xf77d98*/ string GetBundleName(AssetBundleSceneType _type);
    /*0xf789fc*/ string GetBundleName(AssetBundleType _type, string[] _arg);
    /*0xf78cb4*/ string GetResourcePath(AssetBundleType _type, string[] _arg);
    /*0xf78e18*/ string get_baseDownloadURL();
    /*0xf78eb4*/ string get_streamingPath();
    /*0xf78f28*/ string get_cachePath();
    /*0xf78f6c*/ void AwakeInstance();
    /*0xf78f70*/ bool InitInstance();
    /*0xf78f78*/ void ReleaseInstance();
    /*0xf77460*/ LoadedAssetBundle GetLoadedAssetBundle(string _asset_bundle_name, ref string _error);
    /*0xf77e24*/ void LoadAssetBundle(string _asset_bundle_name, bool orDownload);
    /*0xf79274*/ System.Collections.Generic.List<BundleManifest> GetBundleManifest();
    /*0xf7927c*/ System.Collections.IEnumerator FindStreamingBundleManifest();
    /*0xf792e8*/ string GetBundleURLWithHash(string _bundle_name);
    /*0xf793e8*/ bool IsDontUnloadScene(string bundleName);
    /*0xf77be8*/ void UnloadAssetBundle(string _asset_bundle_name);
    /*0xf796e8*/ void UnloadAssetBundleInternal(string _asset_bundle_name);
    /*0xf797e4*/ void AddBundleManifest(BundleManifest _manifest);
    /*0xf79a00*/ bool IsStreamingAssetBundle(string _bundle_name);
    /*0xf79144*/ LoadedAssetBundle LoadBundleInTempCache(string bundleName, ref string error, bool orDownload);
    /*0xf77ec0*/ LoadedAssetBundle GetLoadedBundle(string bundleName);
    /*0xf79b0c*/ void LoadBundleInTempCache_Internal(string bundleName, bool orDownload, bool _checkDependency);
    /*0xf79c44*/ LoadedAssetBundle LoadBundleInTempCache_Impl(string bundleName, bool orDownload, bool _checkDependency);

    class <>c__DisplayClass3_0
    {
        /*0x10*/ UsingAssetData _using_data;

        /*0xd9de78*/ <>c__DisplayClass3_0();
        /*0xd9de80*/ bool <DecreaseUsingData>b__0(BundleManifest x);
    }

    class <LoadAsync_Asset>d__10<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ System.Action<T> _result_func;
        /*0x0*/ AssetBundleManager <>4__this;
        /*0x0*/ AssetBundleType _type;
        /*0x0*/ string[] _arg;
        /*0x0*/ string _file_name;
        /*0x0*/ string <_bundle_name>5__2;
        /*0x0*/ LoadedAssetBundle <_loaded_bundle>5__3;
        /*0x0*/ UnityEngine.AssetBundleRequest <_request>5__4;

        <LoadAsync_Asset>d__10(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ StreamingAssetEnumerator _enumarator;

        /*0xd9de18*/ <>c__DisplayClass35_0();
        /*0xd9de20*/ bool <FindStreamingBundleManifest>b__0();
    }

    class <FindStreamingBundleManifest>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AssetBundleManager <>4__this;
        /*0x28*/ AssetBundleManager.<> <>8__1;

        /*0xd9dfcc*/ <FindStreamingBundleManifest>d__35(int <>1__state);
        /*0xd9dff8*/ void System.IDisposable.Dispose();
        /*0xd9e0dc*/ bool MoveNext();
        /*0xd9e014*/ void <>m__Finally1();
        /*0xd9e630*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9e638*/ void System.Collections.IEnumerator.Reset();
        /*0xd9e678*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ string _bundle_name;

        /*0xd9de4c*/ <>c__DisplayClass36_0();
        /*0xd9de54*/ bool <GetBundleURLWithHash>b__0(BundleManifest x);
    }

    class <>c__DisplayClass40_0
    {
        /*0x10*/ BundleManifest _manifest;

        /*0xd9ded0*/ <>c__DisplayClass40_0();
        /*0xd9ded8*/ bool <AddBundleManifest>b__0(BundleManifest x);
        /*0xd9defc*/ bool <AddBundleManifest>b__1(BundleManifest x);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ string _bundle_name;

        /*0xd9df20*/ <>c__DisplayClass41_0();
        /*0xd9df28*/ bool <IsStreamingAssetBundle>b__0(BundleManifest x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ string bundleName;

        /*0xd9df4c*/ <>c__DisplayClass45_0();
        /*0xd9df54*/ bool <LoadBundleInTempCache_Impl>b__0(BundleManifest x);
        /*0xd9dfa8*/ bool <LoadBundleInTempCache_Impl>b__1(BundleManifest x);
    }
}

class StreamingAssetEnumerator : System.Collections.Generic.IEnumerator<bool>, System.Collections.IEnumerator, System.IDisposable
{
    /*0x10*/ string _uri;
    /*0x18*/ UnityEngine.Networking.UnityWebRequest _www;
    /*0x20*/ bool _isFile;
    /*0x28*/ UnityEngine.AssetBundle _assetbundle;
    /*0x30*/ UnityEngine.Networking.UnityWebRequestAsyncOperation _operation;

    /*0xc9ce30*/ StreamingAssetEnumerator(string _path, string _bundlename);
    /*0xc9ceec*/ StreamingAssetEnumerator(string _uri, bool _isStreamingAsset);
    /*0xc9cdfc*/ bool get_Current();
    /*0xc9ce28*/ object System.Collections.IEnumerator.get_Current();
    /*0xc9d000*/ void Dispose();
    /*0xc9d068*/ bool MoveNext();
    /*0xc9d0a4*/ void Reset();
    /*0xc9d194*/ UnityEngine.AssetBundle GetAssetBundle();
    /*0xc9d19c*/ string GetText();
    /*0xc9d1c8*/ byte[] GetBytes();
}

class Helper_Localize
{
    static /*0x0*/ string LOCALIZE_PATH;
    static /*0x8*/ string USEREXP_NAME;
    static /*0x10*/ string USEREXP_TOOLTIP;
    static /*0x18*/ string VIPPOINT_NAME;
    static /*0x20*/ string VIPPOINT_TOOLTIP;

    static /*0x10fe420*/ Helper_Localize();
    /*0x10fe418*/ Helper_Localize();
}

class LocalizeEffect_Flow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_Parent;
    /*0x20*/ UnityEngine.RectTransform m_ParentTransform;
    /*0x28*/ UnityEngine.RectTransform m_BackTransform;
    /*0x30*/ bool m_bHorizontal;
    /*0x34*/ float m_fFlowSpeed;
    /*0x38*/ float m_fWaitStartTime;
    /*0x3c*/ float m_fWaitEndTime;
    /*0x40*/ float m_fOffset;
    /*0x48*/ System.Collections.IEnumerator m_ieEffect;

    /*0xfb2e54*/ LocalizeEffect_Flow();
    /*0xfb29e0*/ void Awake();
    /*0xfb2ad4*/ void OnEnable();
    /*0xfb2b24*/ void SetStartTransform();
    /*0xfb2ad8*/ void StartEffect();
    /*0xfb2de8*/ System.Collections.IEnumerator CoEffect();

    class <CoEffect>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LocalizeEffect_Flow <>4__this;

        /*0xe59fbc*/ <CoEffect>d__13(int <>1__state);
        /*0xe59fe8*/ void System.IDisposable.Dispose();
        /*0xe59fec*/ bool MoveNext();
        /*0xe5a2a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5a2a8*/ void System.Collections.IEnumerator.Reset();
        /*0xe5a2e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LocalizeManager : Singleton.Component.SingletonComponent<LocalizeManager>
{
    static LocaleLanguageType DEFAULT_LOCALE_TYPE = 0;
    static string LOCALIZE_LIST_FILENAME = "LocalizeList.csv";
    static string OPEN_PARAM = "<%";
    static string CLOSE_PARAM = "%>";
    static int STACK_EXCEPTION_MAX_COUNT = 5;
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x24*/ int _stack_exception_count;
    /*0x28*/ string _temp_first_word;
    /*0x30*/ LocaleLanguageType _selectedLocaleType;
    /*0x38*/ System.Collections.Generic.Dictionary<PTShare.Define.LanguageCode, LocalizeFileData> _fontListDic;
    /*0x40*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<LocalizeCmd>> _localizeDic;
    /*0x48*/ System.Collections.Generic.List<string> _filtterDB;
    /*0x50*/ System.Collections.Generic.Dictionary<int, string> _astarList;
    /*0x58*/ UnityEngine.Font[] _arrFont;
    /*0x60*/ System.Text.StringBuilder _tempSB;

    static /*0xfb3ad4*/ void add_OnChangeEvent(System.Action value);
    static /*0xfb3b90*/ void remove_OnChangeEvent(System.Action value);
    static /*0xfb3e90*/ void GetFontList(System.Collections.Generic.Dictionary<PTShare.Define.LanguageCode, LocalizeFileData> _resultFileListDic);
    /*0xfb9a78*/ LocalizeManager();
    /*0xfb3c4c*/ LocaleLanguageType get_currentLocaleType();
    /*0xfb3c54*/ void set_currentLocaleType(LocaleLanguageType value);
    /*0xfb3d34*/ void AwakeInstance();
    /*0xfb3d38*/ bool InitInstance();
    /*0xfb3e44*/ void ReleaseInstance();
    /*0xfb3d54*/ void InitLocalize(bool _resource);
    /*0xfb42a8*/ void InitLanguage(LocaleLanguageType type, bool _resource);
    /*0xfb3c64*/ void ChangeLocale(LocaleLanguageType type, bool _send_event, bool _force, bool _resource);
    /*0xfb5130*/ void LoadLocale(bool _send_event, bool _resource);
    /*0xfb53c8*/ UnityEngine.Font GetFont(LocalizeManager.FontSymbol symbolType);
    /*0xfa36e8*/ string GetLocalizeStr(string _key, string[] _arg);
    /*0xfb56d4*/ void ApplyLocalizeToTarget(UnityEngine.UI.Text _target, string _key, string[] _arg);
    /*0xfb5a68*/ System.Collections.Generic.List<LocalizeCmd> GetCmdList(string _key);
    /*0xfb5b10*/ string GetLocalizeExceptStr(string inputString);
    /*0xfb5e08*/ bool IsLocalizeExceptStr(string inputString);
    /*0xfb6084*/ bool IsLocalizeExceptStrGuild(string inputString);
    /*0xfb5e50*/ bool HasExceptStringIn(string input);
    /*0xfb60cc*/ bool IsExistKey(string _key);
    /*0xfb52d8*/ LocaleLanguageType GetServerLanguageType();
    /*0xfb6130*/ void InitFiltter(System.Collections.Generic.List<string> _data);
    /*0xfb622c*/ void AddFilter(ref string slang);
    /*0xfb6300*/ string AddAstar(int length);
    /*0xfb6378*/ void InitLocalizeCmd(string _key, string _value);
    /*0xfb6430*/ void InitCmdList(System.Collections.Generic.List<LocalizeCmd> _list, string _src);
    /*0xfb6708*/ void InitCmd(string _cmd, ref LocalizeCmd _result);
    /*0xfb683c*/ void InitCmd(string _cmd, string _data, ref LocalizeCmd _result);
    /*0xfb6be4*/ void InitCmd_kr(string _data, ref LocalizeCmd _result);
    /*0xfb6dcc*/ void InitCmd_Rank(string _data, ref LocalizeCmd _result);
    /*0xfb66a4*/ LocalizeCmd_Text MakeCmd_Text(string _text);
    /*0xfb6b18*/ LocalizeCmd_Param MakeCmd_Param(int _param_id);
    /*0xfb6b7c*/ LocalizeCmd_Key MakeCmd_Key(string _key);
    /*0xfb6ec4*/ LocalizeCmd_Kr MakeCmd_kr(string _param1, string _param2);
    /*0xfb6cdc*/ LocalizeCmd_Enter MakeCmd_Enter();
    /*0xfb6d3c*/ LocalizeCmd_Outline MakeCmd_Outline(string _color);
    /*0xfb6f38*/ LocalizeCmd_Rank MakeCmd_Rank(string[] _params);
    /*0xfb520c*/ void LoadFont(bool _send_event);
    /*0xfb6fa0*/ void LoadFont_Impl(LocalizeFileData _data);
    /*0xfb7188*/ void UnloadFont();
    /*0xfb50bc*/ void ClearLocalize();
    /*0xfb5404*/ bool FindKeyToValue(string key, ref System.Collections.Generic.List<LocalizeCmd> _result);
    /*0xfb5498*/ string ParseCommand(System.Collections.Generic.List<LocalizeCmd> _cmd_list, string[] _arg);
    /*0xfb57fc*/ void ApplyCommand(UnityEngine.UI.Text _target, System.Collections.Generic.List<LocalizeCmd> _cmd_list, string[] _arg);
    /*0xfb52cc*/ bool IsValidLocaleType(LocaleLanguageType type);
    /*0xfb71ec*/ void StartDebug();
    /*0xfb42b8*/ void LoadLocalizeFile_ForInitialize(bool _resource);
    /*0xfb71f0*/ void LoadLocalizeFile_Impl(bool _isResource, string _filename, LocalizeManager.LocaleType _locale_type);
    /*0xfb73f4*/ void LoadLocalizeData(System.Collections.Generic.Dictionary<string, string> _data);
    /*0xfb752c*/ string GetPropertyName(int _type);
    /*0xfb76c4*/ string GetPropertyName(PropertyType _type);
    /*0xfb785c*/ string GetCurrencyName(int _type);
    /*0xfb79f4*/ string GetCurrencyName(PTShare.Define.Currency _type);
    /*0xfb7b8c*/ string GetUnitGradeName(int _grade);
    /*0xfb7d24*/ string GetEquipGradeName(int _grade);
    /*0xfb7ebc*/ string GetStatusName(int _type);
    /*0xfb8054*/ string GetStatusName(Battle.CharacterStat.StatType _type, bool _bIsShort);
    /*0xfb821c*/ string GetHeroStateTypeName(int _type);
    /*0xfb83b4*/ string GetHeroStateTypeName(PTShare.Define.EquipmentType _type);
    /*0xfb854c*/ string GetEquipTypeName(int _type);
    /*0xfb86e4*/ string GetEquipTypeName(EquipSubType _type);
    /*0xfb887c*/ string GetConvertTimeString(System.DateTime _time);
    /*0xfb8cac*/ string GetTrainningStatusLocalize(TrainningStatusType type, string value);
    /*0xfb8f4c*/ string GetTierName(int _nTier);
    /*0xfb907c*/ string GetMeasureString(Battle.CharacterStat.StatType eType);
    /*0xfb90f8*/ string GetPropertyTowerTitleKey(int _faction);
    /*0xfb918c*/ string GetDayString(System.DayOfWeek dayOfWeek);
    /*0xfb9684*/ string GetRankingBoardTitle(RankingBoardType rankingBoardType);
    /*0xfb9848*/ string GetRewardName(Rewards reward);

    enum FontSymbol
    {
        Font_Default = 0,
        Font_Number = 1,
        Font_Influence = 2,
        Font_Chat = 3,
        Font_Bold = 4,
        End = 5,
    }

    enum LocaleType
    {
        Localize = 0,
        Filtter = 1,
        End = 2,
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ LocalizeManager <>4__this;
        /*0x18*/ bool _resource;

        /*0xe5a3c0*/ <>c__DisplayClass65_0();
        /*0xe5a3c8*/ void <LoadLocalizeFile_ForInitialize>b__1(string l);
    }

    class <>c
    {
        static /*0x0*/ LocalizeManager.<> <>9;
        static /*0x8*/ System.Func<string, string> <>9__65_0;

        static /*0xe5a2f0*/ <>c();
        /*0xe5a350*/ <>c();
        /*0xe5a358*/ string <LoadLocalizeFile_ForInitialize>b__65_0(string s);
    }

    class <>c__DisplayClass66_0
    {
        /*0x10*/ LocalizeManager <>4__this;
        /*0x18*/ bool _isResource;

        /*0xe5a3f4*/ <>c__DisplayClass66_0();
        /*0xe5a3fc*/ void <LoadLocalizeFile_Impl>b__0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }

    class <>c__DisplayClass66_1
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, string> _data;
        /*0x18*/ LocalizeManager.<> CS$<>8__locals1;

        /*0xe5a494*/ <>c__DisplayClass66_1();
        /*0xe5a49c*/ void <LoadLocalizeFile_Impl>b__1(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }
}

class LocalizeString : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeManager.FontSymbol fontSymbolType;
    /*0x20*/ string key;
    /*0x28*/ System.Collections.Generic.List<string> paramList;
    /*0x30*/ bool isReceiveChangeLocalizeEvent;
    /*0x31*/ bool isRefreshPreferredWidth;
    /*0x32*/ bool isRefreshPreferredHeight;
    /*0x38*/ UnityEngine.UI.Text <localizeTarget>k__BackingField;
    /*0x40*/ UnityEngine.UI.Outline <localizeOutline>k__BackingField;

    /*0xfba714*/ LocalizeString();
    /*0xfb9c44*/ UnityEngine.UI.Text get_localizeTarget();
    /*0xfb9c4c*/ void set_localizeTarget(UnityEngine.UI.Text value);
    /*0xfb9c54*/ UnityEngine.UI.Outline get_localizeOutline();
    /*0xfb9c5c*/ void set_localizeOutline(UnityEngine.UI.Outline value);
    /*0xfb9c64*/ string GetText();
    /*0xfa3380*/ void SetLocaleKey(string _new_key, string[] _params);
    /*0xfa3c4c*/ void SetCustomText(string _text);
    /*0xfb9f48*/ void SetColor(UnityEngine.Color _color);
    /*0xfba018*/ void SetOpecity(float _opecity);
    /*0xfb9d7c*/ void SetParam(string[] _params);
    /*0xfba34c*/ void RefreshLocale();
    /*0xfba378*/ void RefreshFont();
    /*0xfba0f4*/ void RefreshLabel();
    /*0xfb2ccc*/ void RefreshPreferred();
    /*0xfba51c*/ void SetAlignment(UnityEngine.TextAnchor _anchor);
    /*0xfba554*/ void SetSize(int _size);
    /*0xfba58c*/ void SetOutlineColor(UnityEngine.Color _color);
    /*0xfb9c88*/ void InitLocalizeTarget();
    /*0xfba5ec*/ void OnDestroy();
    /*0xfba664*/ void Awake();
    /*0xfba690*/ void Start();
    /*0xfba710*/ void OnChangedLocale();
}

class CodeMask
{
    static int mask_interval = 100;

    /*0x10dfa6c*/ CodeMask();
}

enum MaskCodeType
{
    Common = 0,
    Login = 100,
    Account = 200,
}

class ActionCode
{
    /*0x120e010*/ ActionCode();

    enum Common
    {
        QuitGame = 0,
        QuitGameForce = 1,
        RestartGameForce = 2,
    }

    enum Login
    {
        ForceLogout = 100,
        AlreadyLogin = 101,
    }

    enum Account
    {
        Expand_Unit_inven = 200,
    }
}

class ErrorEnum
{
    /*0x114d7a0*/ ErrorEnum();

    enum Common
    {
        wating_from_server_respone = 0,
        invalid_network_state = 1,
    }

    enum Login
    {
        invalid_account_block_data = 100,
    }

    enum Account
    {
        not_enough_gold = 200,
    }
}

class LocalizeKeyManager : Singleton.Component.SingletonComponent<LocalizeKeyManager>
{
    /*0x28*/ System.Collections.Generic.Dictionary<int, string> actionDic;
    /*0x30*/ System.Collections.Generic.Dictionary<int, string> codeDic;

    /*0xfb3a28*/ LocalizeKeyManager();
    /*0xfb2ed0*/ void AwakeInstance();
    /*0xfb2ed4*/ bool InitInstance();
    /*0xfb30c0*/ void ReleaseInstance();
    /*0xfb3124*/ string FindActionKey(int action);
    /*0xfb31bc*/ string FindErrorKey(int code);
    /*0xfb2f00*/ void InitAction();
    /*0xfb2fe0*/ void InitErrorCode();
    /*0xfb3254*/ void AddActionCode(System.Type _enumType);
    /*0xfb3604*/ void AddErrorCode(System.Type _enumType);
}

class Aes
{
    static /*0x0*/ Aes _Instance;
    /*0x10*/ byte[] Iv;
    /*0x18*/ byte[] simple;

    static /*0xed9dc8*/ Aes get_Instance();
    /*0xed9e40*/ Aes();
    /*0xed9ee8*/ void Init();
    /*0xed9eec*/ byte[] CreateKey();
    /*0xed9f88*/ string Encrypt(byte[] key, string toEncrypt);
    /*0xeda088*/ string Decrypt(byte[] key, string toDecrypt);
    /*0xeda180*/ byte[] FixedEncrypt(byte[] data);
    /*0xeda460*/ byte[] FixedDecrypt(byte[] data);
    /*0xeda06c*/ byte[] Encrypt(byte[] key, byte[] data, int offset);
    /*0xeda1a4*/ byte[] Encrypt(byte[] key, byte[] data, int offset, int count);
    /*0xeda830*/ System.IO.Stream Encrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset);
    /*0xeda84c*/ System.IO.Stream Encrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset, int count);
    /*0xeda164*/ byte[] Decrypt(byte[] key, byte[] data, int offset);
    /*0xeda484*/ byte[] Decrypt(byte[] key, byte[] data, int offset, int count);
    /*0xeda8b0*/ System.IO.Stream Decrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset);
    /*0xeda8cc*/ System.IO.Stream Decrypt(byte[] key, System.IO.Stream dest, byte[] data, int offset, int count);
}

class EmulatorChecker
{
    static /*0x14b9240*/ string Check(ref bool useEmul);
    static /*0x14b9248*/ string Check_Impl(ref bool useEmul);
    static /*0x14b9500*/ string GetEmulatorName(string dModel, string dVendor, string dName);
    static /*0x14b9634*/ bool IsBlueStacks(string dModel, string dVendor, string dName);
    static /*0x14b96f4*/ bool IsBlueStacks2(string dModel, string dVendor, string dName);
    static /*0x14b97b4*/ bool IsNox_3_0(string dModel, string dVendor, string dName);
    static /*0x14b9888*/ bool IsAndyroid(string dModel, string dVendor, string dName);
    static /*0x14b995c*/ bool Genymotion(string dModel, string dVendor, string dName);
    /*0x14b9a30*/ EmulatorChecker();
}

class ExceptionHandler : UnityEngine.MonoBehaviour
{
    static /*0x0*/ ExceptionHandler _instance;

    static /*0x11d66ec*/ ExceptionHandler();
    static /*0x11d6554*/ ExceptionHandler get_Instance();
    /*0x11d66f0*/ ExceptionHandler();
    /*0x11d66f8*/ string StrToHex(string hex);
    /*0x11d6724*/ string StrToHex(string str, System.Text.Encoding encoding);
    /*0x11d688c*/ string HexToStr(string hex);
    /*0x11d68b8*/ string HexToStr(string hex, System.Text.Encoding encoding);
    /*0x11d6adc*/ void SendLog(string _strMsg);
}

class RegularExpression
{
    static string ratinParttern_ableSpace = "[";
    static string ratinParttern = "[";
    static string hanguljamoParttern = "[ᄀ-ᇹ";
    static string specialCharParttern = "[‌-〿㈀-㏿ꓸ-꯿ힰ-ﬀ";

    static /*0x11c8d88*/ bool CheckNickNAme(string input);
    static /*0x11c8e64*/ bool CheckGuildName(string input);
    /*0x11c8f40*/ RegularExpression();
}

class SlangFinder : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string LINE_SPLIT_RE;
    /*0x18*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> filterDB;
    /*0x20*/ System.Collections.Generic.Dictionary<int, string> astarDic;
    /*0x28*/ string _temp_input;
    /*0x30*/ string _temp_first_word;
    /*0x38*/ string _temp_astar;
    /*0x40*/ System.Text.StringBuilder _temp_result;

    static /*0x1451368*/ SlangFinder();
    /*0x1451248*/ SlangFinder();
    /*0x1450a1c*/ void Awake();
    /*0x1450bf8*/ void Start();
    /*0x1450a20*/ void InitExceptStrings();
    /*0x1450ff4*/ void AddFilter(ref string slang);
    /*0x14511d0*/ string AddAstar(int length);
    /*0x1450cc4*/ string Replace(string inputString);
}

class PathGroup
{
    /*0x10*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PathData>> DataList;

    /*0x114764c*/ PathGroup(int _initCount);
    /*0x1147994*/ System.Collections.Generic.List<PathData> GetPathData(int _mapIndex);

    class <>c__DisplayClass1_0
    {
        /*0x10*/ System.Collections.Generic.List<PathData> list;

        /*0x108c4a0*/ <>c__DisplayClass1_0();
        /*0x108c4a8*/ void <.ctor>b__0(TableData.CSVTableReader.ParseString s, TableData.CSVTableReader.ParseInt i, TableData.CSVTableReader.ParseBool b, TableData.CSVTableReader.ParseLong l, TableData.CSVTableReader.ParseFloat f);
    }
}

class SpineData
{
    /*0x10*/ System.Collections.Generic.Dictionary<string, Spine.Unity.SkeletonDataAsset> data;

    /*0x1455cb8*/ SpineData();
    /*0x1455810*/ void Init();
    /*0x1455920*/ void LoadAddSkelectonData(string _strData);
    /*0x1455b94*/ Spine.Unity.SkeletonDataAsset GetAsset(string _name);
    /*0x1455c48*/ System.Collections.Generic.List<Spine.Unity.SkeletonDataAsset> GetAllLists();
}

class SystemData
{
    /*0x10*/ bool BGMEnable;
    /*0x11*/ bool SFXEnable;
    /*0x14*/ float BGMVolume;
    /*0x18*/ float SFXVolume;

    /*0xc9e09c*/ SystemData();
}

class TableManager
{
    static /*0x0*/ TableData.TableData_Basic mBasic;
    static /*0x8*/ TableData.TableData_Systembasic mSystemBasic;
    static /*0x10*/ TableData.TableData_Friend mFriend;
    static /*0x18*/ TableData.TableData_Arena mArena;
    static /*0x20*/ TableData.TableData_Herolvsync mHeroLvSync;
    static /*0x28*/ System.Collections.Generic.Dictionary<string, string> mWorldArenaConfig;
    static /*0x30*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Buff> mBuffMap;
    static /*0x38*/ System.Collections.Generic.Dictionary<int, Battle.BuffEffectType> mBuffEffectType1;
    static /*0x40*/ System.Collections.Generic.Dictionary<int, Battle.BuffEffectType> mBuffEffectType2;
    static /*0x48*/ System.Collections.Generic.Dictionary<int, Battle.BuffEffectType> mBuffEffectType3;
    static /*0x50*/ System.Collections.Generic.Dictionary<int, Battle.BuffOriginType> mBuffOriginType;
    static /*0x58*/ System.Collections.Generic.Dictionary<int, Battle.BuffType> mBuffType;
    static /*0x60*/ System.Collections.Generic.Dictionary<int, Battle.ShieldType> mShieldType;
    static /*0x68*/ System.Collections.Generic.Dictionary<int, Battle.CharacterStat.StatType> mShieldStatType;
    static /*0x70*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Skillbase> mSkillTableData;
    static /*0x78*/ System.Collections.Generic.Dictionary<int, Battle.SkillType> mSkillType;
    static /*0x80*/ System.Collections.Generic.Dictionary<int, Battle.ActiveType> mActiveType;
    static /*0x88*/ System.Collections.Generic.Dictionary<int, Battle.ColliderType> mSightColliderType;
    static /*0x90*/ System.Collections.Generic.Dictionary<int, Battle.ColliderType> mFindColliderType;
    static /*0x98*/ System.Collections.Generic.Dictionary<int, Battle.AttackType> mAttackType;
    static /*0xa0*/ System.Collections.Generic.Dictionary<int, Battle.PassiveConditionType> mPassiveConditionType;
    static /*0xa8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mActiveSkillTableDataList;
    static /*0xb0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mPassiveSkillTableDataList;
    static /*0xb8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mSkillBaseCasterIdIgnoreDefault;
    static /*0xc0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> mSkillBaseCasterId;
    static /*0xc8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>>> mSkillBaseCasterIDSlot;
    static /*0xd0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Skillfx> mSkillFXIDSkillLv;
    static /*0xd8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillfx>> mSkillFX;
    static /*0xe0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, Battle.SkillEnumGroup> mSkillFXEnum;
    static /*0xe8*/ System.Collections.Generic.Dictionary<Battle.SkillExtraID, TableData.TableData_Skillextra> mSkillExtra;
    static /*0xf0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Skilllv>> mSkillLv;
    static /*0xf8*/ System.Collections.Generic.Dictionary<UnitSkillLevel, System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Skilllv>> mSkillLvTierMaxGrade;
    static /*0x100*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, System.Collections.Generic.List<TableData.TableData_Skilldesc>> mSkillDesc;
    static /*0x108*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Enhanceequip> mEnhanceEquip;
    static /*0x110*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Equipment> mEquipment;
    static /*0x118*/ System.Collections.Generic.Dictionary<System.ValueTuple<string, int>, TableData.TableData_Equipment> mEquipmentTypeGrade;
    static /*0x120*/ System.Collections.Generic.Dictionary<System.ValueTuple<PTShare.Define.EquipParts, int, string>, TableData.TableData_Equipment> mEquipmentSlotGradeClass;
    static /*0x128*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Equipment>> mEquipmentClassType;
    static /*0x130*/ System.Collections.Generic.Dictionary<int, int> mEquipmentIndexEquipSlot;
    static /*0x138*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Advanceequip>> mAdvanceEquip;
    static /*0x140*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, string>> mAdvanceEquipClassGrade;
    static /*0x148*/ System.Collections.Generic.List<TableData.TableData_Unitbase> mUnitbaseOri;
    static /*0x150*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitbase> mUnitbase;
    static /*0x158*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> mUnitOriginalList;
    static /*0x160*/ System.Collections.Generic.Dictionary<int, Battle.ColliderType> mUnitbaseColliderType;
    static /*0x168*/ System.Collections.Generic.Dictionary<int, Battle.AttackType> mUnitbaseAttackType;
    static /*0x170*/ System.Collections.Generic.Dictionary<int, UnitClassType> mUnitbaseUnitClassType;
    static /*0x178*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitbase>> mUnitbaseMaxGrade;
    static /*0x180*/ System.Collections.Generic.List<TableData.TableData_Unitbase> mUnitbase2;
    static /*0x188*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Unitgrade>> mUnitgrade;
    static /*0x190*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgrade>> mUnitgradeIdGrade;
    static /*0x198*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgradelv> mUnitGradeLv;
    static /*0x1a0*/ System.Collections.Generic.List<TableData.TableData_Unitlv> mUnitLvList;
    static /*0x1a8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitlv> mUnitLv;
    static /*0x1b0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Unittier>> mUnitTier;
    static /*0x1b8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unittierlv> mUnitTierLV;
    static /*0x1c0*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> mSkinBasic;
    static /*0x1c8*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, string>, TableData.TableData_Voice> mSkinVoice;
    static /*0x1d0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Artifact> mArtifact;
    static /*0x1d8*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, TableData.TableData_Artifact> mArtifactEquip;
    static /*0x1e0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int>, Battle.ColliderType> mArtifactColliderType;
    static /*0x1e8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Artifact>> mArtifactUnique;
    static /*0x1f0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Quest> mQuestIndex;
    static /*0x1f8*/ System.Collections.Generic.List<int> mDailyQuestIndices;
    static /*0x200*/ System.Collections.Generic.List<int> mWeeklyQuestIndices;
    static /*0x208*/ System.Collections.Generic.Dictionary<QuestContentType, System.Collections.Generic.List<TableData.TableData_Quest>> mQuestContentType;
    static /*0x210*/ System.Collections.Generic.Dictionary<System.ValueTuple<QuestContentType, QuestGroupType>, System.Collections.Generic.List<TableData.TableData_Quest>> mQuestContentTypeQuestGroupType;
    static /*0x218*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Quest> mQuestQuestGroupID;
    static /*0x220*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Questgroup>> mQuestGroupId;
    static /*0x228*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questpropertypoint> mQuestPropertyPoint;
    static /*0x230*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questchapterclear> mQuestChapterClear;
    static /*0x238*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Queststageclear> mQuestStageClear;
    static /*0x240*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questgacha> mQuestGacha;
    static /*0x248*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Queststageidle> mQuestStageIdle;
    static /*0x250*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Queststagetry> mQuestStageTry;
    static /*0x258*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questheroupgrade> mQuestHeroUpgrade;
    static /*0x260*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questequipupgrade> mQuestEquipUpgrade;
    static /*0x268*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questfriend> mQuestFriend;
    static /*0x270*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questprizeboard> mQuestPrizeBoard;
    static /*0x278*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questbuy> mQuestBuy;
    static /*0x280*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questarena> mQuestArena;
    static /*0x288*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questheroget> mQuestHeroGet;
    static /*0x290*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questlevel> mQuestLevel;
    static /*0x298*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questgetitem> mQuestGetItem;
    static /*0x2a0*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questmove> mQuestMove;
    static /*0x2a8*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questlabyrinth> mQuestLabyrinth;
    static /*0x2b0*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questresonance> mQuestResonance;
    static /*0x2b8*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Questspirittowerclear> mQuestSpirittower;
    static /*0x2c0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Gacha>> mGacha;
    static /*0x2c8*/ System.Collections.Generic.Dictionary<GachaFactionType, System.Collections.Generic.List<TableData.TableData_Gacha>> mGachaFactionType;
    static /*0x2d0*/ System.Collections.Generic.List<TableData.TableData_Highgacha> mHighGacha;
    static /*0x2d8*/ System.Collections.Generic.List<TableData.TableData_Highdroprate> mHighDropRate;
    static /*0x2e0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Highdroprate> mHighDropRateMap;
    static /*0x2e8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Gachabonus>> mGachaBonus;
    static /*0x2f0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Gachadroppattern> mGachaDrop;
    static /*0x2f8*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> mGachaUnitPercent;
    static /*0x300*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Chapter> mChapter;
    static /*0x308*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Hardchapter> mHardChapter;
    static /*0x310*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Stage>> mStageChapterId;
    static /*0x318*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Stage> mStageBattleID;
    static /*0x320*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Stage> mStageMappointName;
    static /*0x328*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Hardstage>> mHardStageChapterId;
    static /*0x330*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Hardstage> mHardStageBattleID;
    static /*0x338*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Hardstage> mHardStageMappointName;
    static /*0x340*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Stageidle> mStageIdle;
    static /*0x348*/ System.Collections.Generic.List<TableData.TableData_Tower> mTowerBasic;
    static /*0x350*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Towerfloor>> mTowerFloorId;
    static /*0x358*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Towerfloor>> mTowerBattleId;
    static /*0x360*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Towerfloor> mTowerLast;
    static /*0x368*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Stagebattle> mStageBattleIndex;
    static /*0x370*/ System.Collections.Generic.List<TableData.TableData_Stagebattle> mStageBattle;
    static /*0x378*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Item> mItem;
    static /*0x380*/ System.Collections.Generic.Dictionary<int, string> mItemName;
    static /*0x388*/ System.Collections.Generic.Dictionary<ItemType, System.Collections.Generic.List<TableData.TableData_Item>> mItemType;
    static /*0x390*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Userlvexp> mUserLvExp;
    static /*0x398*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Fastidle> mFastIdle;
    static /*0x3a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Arenarank> mArenaRank;
    static /*0x3a8*/ System.Collections.Generic.List<TableData.TableData_Tutorial> mTutorial;
    static /*0x3b0*/ System.Collections.Generic.List<TableData.TableData_Tutorialbattlehero> mTutorialBattleHero;
    static /*0x3b8*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<TableData.TableData_Chest, System.Int32[]>> mChest;
    static /*0x3c0*/ System.Collections.Generic.Dictionary<ContentType, TableData.TableData_Contenthelp> mContentHelp;
    static /*0x3c8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Contentunlock> mContentUnlockIndex;
    static /*0x3d0*/ System.Collections.Generic.Dictionary<ContentType, TableData.TableData_Contentunlock> mContentUnlockContentType;
    static /*0x3d8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Mazemateequip> mMazeMateEquip;
    static /*0x3e0*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, int, int>, TableData.TableData_Mazebattle> mMazeBattle1;
    static /*0x3e8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Mazebattle> mMazeBattle2;
    static /*0x3f0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Mazecourse>> mMazeCourse;
    static /*0x3f8*/ System.Collections.Generic.List<TableData.TableData_Cashshopindex> mCashShopIndex;
    static /*0x400*/ System.Collections.Generic.List<TableData.TableData_Cashshopdaily> mCashShopDaily;
    static /*0x408*/ System.Collections.Generic.List<TableData.TableData_Cashshopweekly> mCashShopWeekly;
    static /*0x410*/ System.Collections.Generic.List<TableData.TableData_Cashshopmonthly> mCashShopMonthly;
    static /*0x418*/ System.Collections.Generic.List<TableData.TableData_Cashshopstar> mCashShopStar;
    static /*0x420*/ System.Collections.Generic.List<TableData.TableData_Cashshoplimit> mCashShopLimit;
    static /*0x428*/ System.Collections.Generic.List<TableData.TableData_Cashshopsubscription> mCashShopSubscription;
    static /*0x430*/ System.Collections.Generic.List<TableData.TableData_Cashshophero> mCashShopHero;
    static /*0x438*/ System.Collections.Generic.List<TableData.TableData_Cashshopbeginner> mCashShopBeginner;
    static /*0x440*/ System.Collections.Generic.List<TableData.TableData_Cashshopinstant> mCashShopInstant;
    static /*0x448*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Cashshopinstant> mCashShopInstantMap;
    static /*0x450*/ System.Collections.Generic.List<TableData.TableData_Cashshopquest> mCashShopQuest;
    static /*0x458*/ System.Collections.Generic.List<TableData.TableData_Cashshopskinpiece> mCashShopSkein;
    static /*0x460*/ System.Collections.Generic.List<TableData.TableData_Cashshopskin> mCashShopSkin;
    static /*0x468*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Packagetime>> mCashShopPackageTime;
    static /*0x470*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Packageproductgroup>> mCashShopPackageProductGroup;
    static /*0x478*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Cashshopquestreward>> mCashShopQuestRewardList;
    static /*0x480*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Cashshopquestreward> mCashShopQuestReward;
    static /*0x488*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Demodata> mDemoIndex;
    static /*0x490*/ System.Collections.Generic.List<TableData.TableData_Contentshop> mContentShop;
    static /*0x498*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, TableData.TableData_Contentshoparrangement>> mContentShopArrangement;
    static /*0x4a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Idleunittipdialog> mIdleUnitTipDialog;
    static /*0x4a8*/ System.Collections.Generic.Dictionary<TopMenuType, TableData.TableData_Menusettingbase> mMenuSettingBase;
    static /*0x4b0*/ System.Collections.Generic.List<TableData.TableData_Triggerdata> mTriggerData;
    static /*0x4b8*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> mFactionBuff;
    static /*0x4c0*/ System.Collections.Generic.List<TableData.TableData_Profileskin> mProfileSkin;
    static /*0x4c8*/ System.Collections.Generic.List<TableData.TableData_Emoticon> mEmoticon;
    static /*0x4d0*/ System.Collections.Generic.List<TableData.TableData_Worldarenachampreward> mWorldArenaChampReward;
    static /*0x4d8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Worldarenatier2> mWorldArenaTier;
    static /*0x4e0*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> mTrainingRoom;
    static /*0x4e8*/ System.Collections.Generic.List<TableData.TableData_Revert> mHeroRevert;
    static /*0x4f0*/ System.Collections.Generic.Dictionary<int, int> mMaxUnitLV;
    static /*0x4f8*/ System.Collections.Generic.List<TableData.TableData_Event> mEvent;
    static /*0x500*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> mEventAttendacne;
    static /*0x508*/ System.Collections.Generic.List<TableData.TableData_Eventpass> mEventPass;
    static /*0x510*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> mEventPassReward;
    static /*0x518*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> mEventCurrencyLocal;
    static /*0x520*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventcurrencylocal> mEventCurrencyLocalMap;
    static /*0x528*/ System.Collections.Generic.List<TableData.TableData_Eventmission> mEventMission;
    static /*0x530*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventquest>> mEventQuestMap;
    static /*0x538*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Eventquestgroup>> mEventQuestGroupMap;
    static /*0x540*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventquestgroup> mEventQuestGroup;
    static /*0x548*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventroulette>> mEventRoulette;
    static /*0x550*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> mFBEventLog;
    static /*0x558*/ System.Collections.Generic.Dictionary<string, int> mEventPassMap3;
    static /*0x560*/ System.Collections.Generic.Dictionary<string, int> mEventPassMap4;
    static /*0x568*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventpage>> mEventPage;
    static /*0x570*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventhottime> mEventHotTime;
    static /*0x578*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>>> mEventBonusMap;
    static /*0x580*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventpreset> mEventPreset;
    static /*0x588*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventmissionpoint>> mEventMissionPoint;
    static /*0x590*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventexchange>> mEventExchange;
    static /*0x598*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventbuyinapp> mEventBuyInApp;
    static /*0x5a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventboss> mEventBoss;
    static /*0x5a8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Eventboss> mEventBossIndex;
    static /*0x5b0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventbossreward>> mEventBossReward;
    static /*0x5b8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventcomplete>> mEventComplete;
    static /*0x5c0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventcompletemission>> mEventCompleteMission;
    static /*0x5c8*/ System.Collections.Generic.Dictionary<string, string> mConfig1;
    static /*0x5d0*/ System.Collections.Generic.Dictionary<string, int> mConfig2;
    static /*0x5d8*/ TableData.TableData_Guild mGuild;
    static /*0x5e0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Guildlevel> mGuildLevel;
    static /*0x5e8*/ System.Collections.Generic.List<TableData.TableData_Guildboss> mGuildBoss;
    static /*0x5f0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Guildhuntingreward>> mGuildHunting;
    static /*0x5f8*/ System.Collections.Generic.Dictionary<string, string> mGuildWarConfig;
    static /*0x600*/ System.Collections.Generic.List<TableData.TableData_Guildwarpoint> mGuildWarPoint;
    static /*0x608*/ System.Collections.Generic.Dictionary<PTShare.Define.GuildWarPosition, System.Collections.Generic.List<TableData.TableData_Guildwarorganize>> mGuildWarOrganize;
    static /*0x610*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Guildwarrank>> mGuildWarRank;
    static /*0x618*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Guildwarrankreward> mGuildWarRankReward;
    static /*0x620*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Guildwartactic> mGuildTactic;
    static /*0x628*/ System.Collections.Generic.List<TableData.TableData_Vip> mVip;
    static /*0x630*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Vip> mVip2;
    static /*0x638*/ System.Collections.Generic.List<TableData.TableData_Bountyquest> mBountyQuest;
    static /*0x640*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Bountyquest> mBountyQuest2;
    static /*0x648*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Bountylv> mBountyLevel;
    static /*0x650*/ System.Collections.Generic.List<TableData.TableData_Dungeon> mDungeon;
    static /*0x658*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Dungeon> mDungeon2;
    static /*0x660*/ TableData.TableData_Dungeonsetting mDungeonConfig;
    static /*0x668*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeongroup>> mDungeonGroup;
    static /*0x670*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeonmap>> mDungeonMap;
    static /*0x678*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Dungeontile> mDungeonTile;
    static /*0x680*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Dungeonmateequip> mDungeonMateEquip;
    static /*0x688*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeondialog>> mDungeonDialog;
    static /*0x690*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeonreward>> mDungeonReward;
    static /*0x698*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection>> mDungeonDialogDirection;
    static /*0x6a0*/ System.Collections.Generic.List<TableData.TableData_Racetile> mRaceTile;
    static /*0x6a8*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> mRaceAccel;
    static /*0x6b0*/ System.Collections.Generic.List<TableData.TableData_Racereward> mRaceReward;
    static /*0x6b8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Runlife> mRunLife;
    static /*0x6c0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Runreward> mRunReward;
    static /*0x6c8*/ System.Collections.Generic.List<TableData.TableData_Relation> mRelation;
    static /*0x6d0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Worldbossstep> mWorldBossStepMap;
    static /*0x6d8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Worldbossmission>> mWorldBossMission;
    static /*0x6e0*/ System.Collections.Generic.List<TableData.TableData_Pvenoblity> mPveNoblity;
    static /*0x6e8*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> mPveClearReward;
    static /*0x6f0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Pvenoblity> mPveNoblityMap;
    static /*0x6f8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Pvechallenge>> mPveChallenge;
    static /*0x700*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Pveclearreward> mPveClearRewardMap;
    static /*0x708*/ System.Collections.Generic.Dictionary<string, string> mHousing;
    static /*0x710*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Housingfloor> mHousingFloor;
    static /*0x718*/ int mHousingMaxFloor;
    static /*0x720*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Housinggacha>> mHousingGacha;
    static /*0x728*/ int mHousingGachaMaxGroup;
    static /*0x730*/ System.Collections.Generic.List<TableData.TableData_Housingdismiss> mHousingDismiss;
    static /*0x738*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furniture> mFurnitureMap;
    static /*0x740*/ System.Collections.Generic.List<TableData.TableData_Furniture> mFurniture;
    static /*0x748*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> mFurnitureleveltypelistMap;
    static /*0x750*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> mFurnitureleveltypelistMap2;
    static /*0x758*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Furnitureeffecttype> mFurnitureeffecttypeMap;
    static /*0x760*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> mFurnitureeffecttype;
    static /*0x768*/ System.Collections.Generic.List<TableData.TableData_Furnitureshop> mFurnitureshop;
    static /*0x770*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Furnitureshoplist>> mFurnitureshoplist;
    static /*0x778*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furnitureshoplist> mFurnitureshopMap;
    static /*0x780*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Housingfloorpattern> mFloorPattern;
    static /*0x788*/ System.Collections.Generic.List<TableData.TableData_Furnitureset> mFurnitureSet;
    static /*0x790*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furniturecontentseffect> mContentEffect;
    static /*0x798*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furnitureheroeffect> mFurnitureUnitStatEffect;
    static /*0x7a0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Furniturelevelup> mFurnitureLevelUp;
    static /*0x7a8*/ System.Collections.Generic.List<TableData.TableData_Furniturelevelup> mFurnitureLevelUpList;
    static /*0x7b0*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Furnitureexp> mFurnitureExp;
    static /*0x7b8*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Abilitypercent> mAbilityPercentMap;
    static /*0x7c0*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> mAbilityPercentList;
    static /*0x7c8*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue>> mAbilityOptionValueMap;
    static /*0x7d0*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Abilityoptionvalue> mAbilityOptionValueMap2;
    static /*0x7d8*/ System.Collections.Generic.Dictionary<string, TableData.TableData_Abilityreset> mAbilityResetMap;
    static /*0x7e0*/ TableData.TableGroup mTable;

    static /*0xca20f4*/ TableData.TableGroup get_GetTableGroup();
    static /*0xca2140*/ void Init(TableData.TableGroup table);
    static /*0xcba664*/ TableData.TableGroup Group();
    static /*0xcba6b0*/ TableData.TableData_Basic Basic();
    static /*0xcba6fc*/ TableData.TableData_Systembasic SystemBasic();
    static /*0xcba748*/ TableData.TableData_Friend Friend();
    static /*0xcba794*/ TableData.TableData_Arena Arena();
    static /*0xcba7e0*/ TableData.TableData_Herolvsync HeroLvSync();
    static /*0xcba82c*/ TableData.TableData_Chapter FindChapterTable(int _index);
    static /*0xcba8c0*/ TableData.TableData_Hardchapter FindHardChapterTable(int _index);
    static /*0xcba954*/ int GetChapterCount();
    static /*0xc934b8*/ System.Collections.Generic.List<TableData.TableData_Stage> FindStageList(int _chapterID);
    static /*0xcba9c0*/ TableData.TableData_Stage FindStageToBattleID(int _nBattleID);
    static /*0xcbaa54*/ TableData.TableData_Stage FindStageToMappointName(string _mappointName);
    static /*0xc93554*/ System.Collections.Generic.List<TableData.TableData_Hardstage> FindHardStageList(int _chapterID);
    static /*0xcbaae8*/ TableData.TableData_Hardstage FindHardStageToBattleID(int _nBattleID);
    static /*0xcbab7c*/ TableData.TableData_Hardstage FindHardStageToMappointName(string _mappointName);
    static /*0xc90c38*/ TableData.TableData_Stagebattle GetStageBattle(int _battleID);
    static /*0xcbac10*/ System.Collections.Generic.List<TableData.TableData_Stagebattle> GetStageBattleList();
    static /*0xcbac5c*/ TableData.TableData_Userlvexp GetUserLevel(int _level);
    static /*0xcbacf0*/ int GetMaxUserLevel();
    static /*0xcbad5c*/ TableData.TableData_Fastidle FindFastIdlebyIndex(int _index);
    static /*0xc97828*/ TableData.TableData_Contenthelp FindContentHelp(ContentType _type);
    static /*0xcbadf0*/ TableData.TableData_Demodata GetDemoByIndex(int _index);
    static /*0xcbae84*/ System.Collections.Generic.List<TableData.TableData_Factionbuff> GetFactionBuff();
    static /*0xcbaed0*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> GetFirebaseLog();
    static /*0xcbaf1c*/ int GetMaxUnitLV(int _nUnitID);

    class Buff
    {
        static /*0xccc9e4*/ TableData.TableData_Buff Find(int _nBuffID);
        static /*0xccca78*/ TableData.TableData_Buff FindWithEffectType(Battle.BuffEffectType _eType);
        static /*0xcccb90*/ Battle.BuffEffectType FindEffectType1(int _nBuffID);
        static /*0xcccc24*/ Battle.BuffEffectType FindEffectType2(int _nBuffID);
        static /*0xccccb8*/ Battle.BuffEffectType FindEffectType3(int _nBuffID);
        static /*0xcccd4c*/ Battle.BuffOriginType FindOriginType(int _nBuffID);
        static /*0xcccde0*/ Battle.BuffType FindBuffType(int _nBuffID);
        static /*0xccce74*/ Battle.ShieldType FindShieldType(int _nBuffID);
        static /*0xcccf08*/ Battle.CharacterStat.StatType FindShieldStatType(int _nBuffID);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ Battle.BuffEffectType _eType;

            /*0xd90c14*/ <>c__DisplayClass1_0();
            /*0xd90c1c*/ bool <FindWithEffectType>b__0(TableData.TableData_Buff x);
        }
    }

    class Skill
    {
        class Base
        {
            static /*0xd9572c*/ TableData.TableData_Skillbase Find(int _nSkillID);
            static /*0xd957c0*/ Battle.SkillType FindSkillType(int _nSkillID);
            static /*0xd95854*/ Battle.ActiveType FindActiveType(int _nSkillID);
            static /*0xd958e8*/ Battle.ColliderType FindSightColliderType(int _nSkillID);
            static /*0xd9597c*/ Battle.ColliderType FindFindColliderType(int _nSkillID);
            static /*0xd95a10*/ Battle.AttackType FindAttackType(int _nSkillID);
            static /*0xd95aa4*/ Battle.PassiveConditionType FindPCType(int _nSkillID);
            static /*0xd95b38*/ int FindSkillSlot(int _nSkillID);
            static /*0xd95b54*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindManyActiveSkill(int _nUnitID);
            static /*0xd95c28*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindManyPassiveSkill(int _nUnitID);
            static /*0xd95cfc*/ TableData.TableData_Skillbase Find(Battle.StateAndSkillID _eSkillID);
            static /*0xd95d00*/ int FindSkillSlot(Battle.StateAndSkillID _eSkillID);
            static /*0xd95d1c*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindManyIgnoreDefault(int _casterID);
            static /*0xd95db0*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindMany(int _casterID);
            static /*0xd95e44*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindMany(int _nUnitID, int _skillSlot);
        }

        class FX
        {
            static /*0xd960bc*/ TableData.TableData_Skillfx Find(int _nSkillFXID, int _nSkillLV);
            static /*0xd96188*/ System.Collections.Generic.List<TableData.TableData_Skillfx> FindMany(int _skillbaseID);
            static /*0xd9625c*/ Battle.SkillEnumGroup FindEnum(int _nSkillFXID, int _nSkillLV);
        }

        class Extra
        {
            static /*0xd96028*/ TableData.TableData_Skillextra Find(Battle.SkillExtraID _eSkillExtraID);
        }

        class Level
        {
            static /*0xd96328*/ bool IsUseSkillTier(int tier, int maxGrade);
            static /*0xd9647c*/ TableData.TableData_Skilllv Find(int _maxGrade, int _skillSlot);
            static /*0xd96558*/ TableData.TableData_Skilllv FindByTypeTierGrade(UnitSkillLevel _type, int _tier, int _maxgrade);

            class <>c__DisplayClass0_0
            {
                /*0x10*/ int tier;

                /*0xd96474*/ <>c__DisplayClass0_0();
                /*0xd97c24*/ bool <IsUseSkillTier>b__0(System.Collections.Generic.KeyValuePair<int, TableData.TableData_Skilllv> x);
            }
        }

        class Desc
        {
            static /*0xd95f5c*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> FindMany(int _casterID, int _skillSlot);
        }
    }

    class Equip
    {
        static /*0xccd514*/ TableData.TableData_Equipment Find(int _tableid);
        static /*0xccd5d4*/ TableData.TableData_Equipment FindByTypeGrade(string _type, int _grade);
        static /*0xccd6d0*/ TableData.TableData_Equipment FindBySlotGradeClass(PTShare.Define.EquipParts _equipslot, int _grade, string _classtype);
        static /*0xccd7a8*/ System.Collections.Generic.List<TableData.TableData_Equipment> FindByClass(string _classType);
        static /*0xccd83c*/ System.Collections.Generic.List<TableData.TableData_Equipment> FindAllPartsType(EquipSubType eType);
        static /*0xccd984*/ int FindEquipSlot(int _tableid);

        class Advance
        {
            static /*0xd920d8*/ string FindRequireCost(int _classGroup, int _advanceGrade);
        }

        class Enhance
        {
            static /*0xd921b4*/ TableData.TableData_Enhanceequip Find(int _index);
        }

        class <>c__DisplayClass4_0
        {
            /*0x10*/ EquipSubType eType;

            /*0xd92030*/ <>c__DisplayClass4_0();
            /*0xd92038*/ bool <FindAllPartsType>b__0(TableData.TableData_Equipment x);
        }
    }

    class Unit
    {
        class Base
        {
            static /*0xd966f8*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindAll();
            static /*0xd96744*/ TableData.TableData_Unitbase Find(int _tableid);
            static /*0xd967d8*/ Battle.ColliderType FindColliderType(int _nUnitID);
            static /*0xd9686c*/ Battle.AttackType FindAttackType(int _nUnitID);
            static /*0xd96900*/ UnitClassType FindUnitClassType(int _nUnitID);
            static /*0xd96994*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindMany(int _maxgrade);
            static /*0xd96a68*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindMany();
            static /*0xd96ab4*/ System.Collections.Generic.List<TableData.TableData_Unitbase> FindOriginalList(int _nUnitID);
        }

        class Grade
        {
            static /*0xd96b88*/ System.Collections.Generic.List<TableData.TableData_Unitgrade> FindMany(int _nIndex);
            static /*0xd96c5c*/ TableData.TableData_Unitgrade Find(int _nUnitID, int _grade);
        }

        class GradeLevel
        {
            static /*0xd96d38*/ TableData.TableData_Unitgradelv Find(int _index);
        }

        class Level
        {
            static /*0xd96df8*/ System.Collections.Generic.List<TableData.TableData_Unitlv> FindAll();
            static /*0xd96e44*/ TableData.TableData_Unitlv Find(int _lv);
        }

        class Tier
        {
            static /*0xd96f04*/ TableData.TableData_Unittier Find(int _nUnitID, int _tier);
        }

        class TierLevel
        {
            static /*0xd96fe0*/ TableData.TableData_Unittierlv Find(int _tier);
        }
    }

    class Skin
    {
        static /*0xccecc8*/ TableData.TableData_Skinbasic FindSkin(int index);
        static /*0xccedd0*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> FindSkinAll();
        static /*0xccee1c*/ System.Collections.Generic.List<TableData.TableData_Skinbasic> FindSkinAll(int nUnitID);
        static /*0xccef24*/ TableData.TableData_Voice FindVoice(int _nUnitID, string _sKey);

        class <>c__DisplayClass0_0
        {
            /*0x10*/ int index;

            /*0xd96654*/ <>c__DisplayClass0_0();
            /*0xd9665c*/ bool <FindSkin>b__0(TableData.TableData_Skinbasic x);
        }

        class <>c__DisplayClass2_0
        {
            /*0x10*/ int nUnitID;

            /*0xd96680*/ <>c__DisplayClass2_0();
            /*0xd96688*/ bool <FindSkinAll>b__0(TableData.TableData_Skinbasic x);
        }
    }

    class Artifact
    {
        static /*0xccc328*/ System.Collections.Generic.List<TableData.TableData_Artifact> FindUniqueAll();
        static /*0xccc550*/ System.Collections.Generic.List<TableData.TableData_Artifact> FindUniqueList(int artifactID);
        static /*0xccc5e4*/ TableData.TableData_Artifact Find(PTShare.Define.SArtifact artifact, bool desc);
        static /*0xccc77c*/ TableData.TableData_Artifact Find(int _nArtifactID, int _nArtifactLV);
        static /*0xccc848*/ TableData.TableData_Artifact FindWithEquipIDLV(int _nEquipID, int _nEquipLV);
        static /*0xccc914*/ Battle.ColliderType FindColliderType(int _nArtifactID, int _nArtifactLV);

        class <>c
        {
            static /*0x0*/ TableManager.Artifact.<> <>9;
            static /*0x8*/ System.Func<System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>>, int> <>9__0_0;
            static /*0x10*/ System.Func<System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>>, TableData.TableData_Artifact> <>9__0_1;

            static /*0xd90920*/ <>c();
            /*0xd90980*/ <>c();
            /*0xd90988*/ int <FindUniqueAll>b__0_0(System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>> k);
            /*0xd909c8*/ TableData.TableData_Artifact <FindUniqueAll>b__0_1(System.Collections.Generic.KeyValuePair<int, System.Collections.Generic.List<TableData.TableData_Artifact>> v);
        }

        class <>c__DisplayClass2_0
        {
            /*0x10*/ PTShare.Define.SArtifact artifact;

            /*0xd90a20*/ <>c__DisplayClass2_0();
            /*0xd90a28*/ bool <Find>b__0(System.ValueTuple<int, int> x);
            /*0xd90a64*/ bool <Find>b__1(System.ValueTuple<int, int> x);
        }
    }

    class Quest
    {
        static /*0xcce378*/ TableData.TableData_Quest Find(int _index);
        static /*0xcce40c*/ System.Collections.Generic.List<int> FindIndices(PTShare.Define.QuestType type);
        static /*0xcce46c*/ System.Collections.Generic.List<TableData.TableData_Quest> FindMany(QuestContentType _eContentType);
        static /*0xcce540*/ System.Collections.Generic.List<TableData.TableData_Quest> FindMany(QuestContentType _eContentType, QuestGroupType _eGroupType);
        static /*0xcce650*/ TableData.TableData_Quest Find(TableData.TableData_Questgroup _group);

        class Group
        {
            static /*0xd94da4*/ System.Collections.Generic.List<TableData.TableData_Questgroup> FindMany(string _strQuestGroupid);
            static /*0xd94e78*/ System.Collections.Generic.List<string> FindAllKeys();
            static /*0xd94f00*/ TableData.TableData_Questgroup Find(string _questgroupId);
        }

        class PropertyPoint
        {
            static /*0xd952e0*/ TableData.TableData_Questpropertypoint Find(string _questid);
        }

        class ChapterClear
        {
            static /*0xd94ac0*/ TableData.TableData_Questchapterclear Find(string _questid);
        }

        class StageClear
        {
            static /*0xd9549c*/ TableData.TableData_Queststageclear Find(string _questid);
        }

        class Gacha
        {
            static /*0xd94c7c*/ TableData.TableData_Questgacha Find(string _questid);
        }

        class StageIdle
        {
            static /*0xd95530*/ TableData.TableData_Queststageidle Find(string _questid);
        }

        class StageTry
        {
            static /*0xd955c4*/ TableData.TableData_Queststagetry Find(string _questid);
        }

        class HeroUpgrade
        {
            static /*0xd94ffc*/ TableData.TableData_Questheroupgrade Find(string _questid);
        }

        class EquipUpgrade
        {
            static /*0xd94b54*/ TableData.TableData_Questequipupgrade Find(string _questid);
        }

        class Friend
        {
            static /*0xd94be8*/ TableData.TableData_Questfriend Find(string _questid);
        }

        class PrizeBoard
        {
            static /*0xd9524c*/ TableData.TableData_Questprizeboard Find(string _questid);
        }

        class Buy
        {
            static /*0xd94a2c*/ TableData.TableData_Questbuy Find(string _questid);
        }

        class Arena
        {
            static /*0xd94998*/ TableData.TableData_Questarena Find(string _questid);
        }

        class HeroGet
        {
            static /*0xd94f68*/ TableData.TableData_Questheroget Find(string _questid);
        }

        class Level
        {
            static /*0xd95124*/ TableData.TableData_Questlevel Find(string _questid);
        }

        class GetItem
        {
            static /*0xd94d10*/ TableData.TableData_Questgetitem Find(string _questid);
        }

        class Move
        {
            static /*0xd951b8*/ TableData.TableData_Questmove Find(string _questid);
        }

        class Labyrinth
        {
            static /*0xd95090*/ TableData.TableData_Questlabyrinth Find(string _questid);
        }

        class Resonance
        {
            static /*0xd95374*/ TableData.TableData_Questresonance Find(string _questid);
        }

        class SpiritTower
        {
            static /*0xd95408*/ TableData.TableData_Questspirittowerclear Find(string _questid);
        }
    }

    class Gacha
    {
        static /*0xccda64*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Gacha>> FindBaseDics();
        static /*0xccdab0*/ System.Collections.Generic.List<TableData.TableData_Gacha> FindMany(GachaFactionType _type);

        class Bonus
        {
            static /*0xd92d4c*/ System.Collections.Generic.List<int> FindAllKeys();
            static /*0xd92dd4*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> FindMany(int _pt);
        }

        class DropPattern
        {
            static /*0xd92e68*/ TableData.TableData_Gachadroppattern Find(int _index);
        }

        class UnitPercent
        {
            static /*0xd93028*/ System.Collections.Generic.List<TableData.TableData_Gachaunitpercent> FindAll();
        }

        class HightGacha
        {
            static /*0xd92fdc*/ System.Collections.Generic.List<TableData.TableData_Highgacha> FindAll();
        }

        class HighDropRate
        {
            static /*0xd92efc*/ System.Collections.Generic.List<TableData.TableData_Highdroprate> FindAll();
            static /*0xd92f48*/ TableData.TableData_Highdroprate Find(int index);
        }
    }

    class Idle
    {
        static /*0xccdda0*/ TableData.TableData_Stageidle Find(int _nIdleID);
    }

    class Tower
    {
        static /*0xcceff0*/ System.Collections.Generic.List<TableData.TableData_Tower> FindBasicAll();
        static /*0xccf03c*/ TableData.TableData_Towerfloor Find(int factionid, int _nFloorID);
        static /*0xccf0f8*/ TableData.TableData_Towerfloor FindByBattleID(int factionid, int _nBattleID);
        static /*0xccf1b4*/ TableData.TableData_Towerfloor FindLast(int factionid);
    }

    class Item
    {
        static /*0xccdec8*/ TableData.TableData_Item Find(int _itemID);
        static /*0xccdf5c*/ string FindName(int _itemID);
        static /*0xccdff0*/ System.Collections.Generic.List<TableData.TableData_Item> FindMany(ItemType _type);
    }

    class ArenaRank
    {
        static /*0xccc294*/ TableData.TableData_Arenarank Find(int _index);
    }

    class Tutorial
    {
        static /*0xccf294*/ System.Collections.Generic.List<TableData.TableData_Tutorial> FindAll();

        class BattleHero
        {
            static /*0xd966ac*/ System.Collections.Generic.List<TableData.TableData_Tutorialbattlehero> FindAll();
        }
    }

    class Chest
    {
        static /*0xcccf9c*/ System.ValueTuple<TableData.TableData_Chest, System.Int32[]> Find(int _index);
    }

    class ContentUnlock
    {
        static /*0xccd158*/ TableData.TableData_Contentunlock Find(int _index);
        static /*0xccd1ec*/ TableData.TableData_Contentunlock Find(ContentType _type);
    }

    class Maze
    {
        class MateEquip
        {
            static /*0xd943e0*/ TableData.TableData_Mazemateequip Find(int _mategrade);
        }

        class Battle
        {
            static /*0xd941d8*/ TableData.TableData_Mazebattle Find(int _chapter, int _floor, PTShare.Define.MazeEnemies _type);
            static /*0xd942b8*/ TableData.TableData_Mazebattle Find(int _index);
        }

        class Course
        {
            static /*0xd9434c*/ System.Collections.Generic.List<TableData.TableData_Mazecourse> FindMany(int _mazeId);
        }
    }

    class CashShop
    {
        class ShopIndex
        {
            static /*0xd91144*/ System.Collections.Generic.List<string> GetPlatformProductKeyList();
            static /*0xd914f8*/ string GetProductIDToPackageKey(string key);

            class <>c
            {
                static /*0x0*/ TableManager.CashShop.ShopIndex.<> <>9;
                static /*0x8*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_0;
                static /*0x10*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_1;
                static /*0x18*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_2;
                static /*0x20*/ System.Converter<TableData.TableData_Cashshopindex, string> <>9__0_3;

                static /*0xd97684*/ <>c();
                /*0xd976e4*/ <>c();
                /*0xd976ec*/ string <GetPlatformProductKeyList>b__0_0(TableData.TableData_Cashshopindex x);
                /*0xd97704*/ string <GetPlatformProductKeyList>b__0_1(TableData.TableData_Cashshopindex x);
                /*0xd9771c*/ string <GetPlatformProductKeyList>b__0_2(TableData.TableData_Cashshopindex x);
                /*0xd97734*/ string <GetPlatformProductKeyList>b__0_3(TableData.TableData_Cashshopindex x);
            }

            class <>c__DisplayClass1_0
            {
                /*0x10*/ string key;

                /*0xd917d0*/ <>c__DisplayClass1_0();
                /*0xd9774c*/ bool <GetProductIDToPackageKey>b__0(TableData.TableData_Cashshopindex x);
                /*0xd97778*/ bool <GetProductIDToPackageKey>b__1(TableData.TableData_Cashshopindex x);
                /*0xd977a4*/ bool <GetProductIDToPackageKey>b__2(TableData.TableData_Cashshopindex x);
                /*0xd977d0*/ bool <GetProductIDToPackageKey>b__3(TableData.TableData_Cashshopindex x);
            }
        }

        class Daily
        {
            static /*0xd90dc0*/ System.Collections.Generic.List<TableData.TableData_Cashshopdaily> FindAll();
        }

        class Weekly
        {
            static /*0xd91908*/ System.Collections.Generic.List<TableData.TableData_Cashshopweekly> FindAll();
        }

        class Monthly
        {
            static /*0xd90f84*/ System.Collections.Generic.List<TableData.TableData_Cashshopmonthly> FindAll();
        }

        class Star
        {
            static /*0xd91870*/ System.Collections.Generic.List<TableData.TableData_Cashshopstar> FindAll();
        }

        class Limit
        {
            static /*0xd90f38*/ System.Collections.Generic.List<TableData.TableData_Cashshoplimit> FindAll();
        }

        class Subscription
        {
            static /*0xd918bc*/ System.Collections.Generic.List<TableData.TableData_Cashshopsubscription> FindAll();
        }

        class Hero
        {
            static /*0xd90e0c*/ System.Collections.Generic.List<TableData.TableData_Cashshophero> FindAll();
        }

        class Beginner
        {
            static /*0xd90d74*/ System.Collections.Generic.List<TableData.TableData_Cashshopbeginner> FindAll();
        }

        class Skein
        {
            static /*0xd917d8*/ System.Collections.Generic.List<TableData.TableData_Cashshopskinpiece> FindAll();
        }

        class Skin
        {
            static /*0xd91824*/ System.Collections.Generic.List<TableData.TableData_Cashshopskin> FindAll();
        }

        class Quest
        {
            static /*0xd910f8*/ System.Collections.Generic.List<TableData.TableData_Cashshopquest> FindAll();

            class Reward
            {
                static /*0xd9755c*/ TableData.TableData_Cashshopquestreward Find(int index);
                static /*0xd975f0*/ System.Collections.Generic.List<TableData.TableData_Cashshopquestreward> FindMany(string packageId);
            }
        }

        class Instant
        {
            static /*0xd90e58*/ System.Collections.Generic.List<TableData.TableData_Cashshopinstant> FindAll();
            static /*0xd90ea4*/ TableData.TableData_Cashshopinstant Find(int index);
        }

        class PackageTime
        {
            static /*0xd91064*/ System.Collections.Generic.List<TableData.TableData_Packagetime> FindMany(string timeKey);
        }

        class PackageProductGroup
        {
            static /*0xd90fd0*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> FindMany(string packageId);
        }
    }

    class ContentShop
    {
        static /*0xccd10c*/ System.Collections.Generic.List<TableData.TableData_Contentshop> FindAll();

        class Arrangement
        {
            static /*0xd919c8*/ TableData.TableData_Contentshoparrangement Find(int _index, int _subidx);
        }
    }

    class IdleUnitTipDialog
    {
        static /*0xccde34*/ TableData.TableData_Idleunittipdialog Find(int _nUnitID);
    }

    class MenuSetting
    {
        static /*0xcce084*/ TableData.TableData_Menusettingbase Find(TopMenuType _type);
    }

    class TriggerData
    {
        static /*0xccf248*/ System.Collections.Generic.List<TableData.TableData_Triggerdata> FindAll();
    }

    class Event
    {
        static /*0xccda18*/ System.Collections.Generic.List<TableData.TableData_Event> FindAll();

        class Attendance
        {
            static /*0xd92274*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> FindAll();
        }

        class Pass
        {
            static /*0xd92960*/ System.Collections.Generic.List<TableData.TableData_Eventpass> FindAll();
            static /*0xd929ac*/ int FindEventIDByPointName(string resetpointtype);
            static /*0xd92a54*/ int FindEventIDByEventName(string eventname);

            class Reward
            {
                static /*0xd979f4*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> FindAll();
            }
        }

        class CurrencyLocal
        {
            static /*0xd92550*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> FindAll();
            static /*0xd9259c*/ TableData.TableData_Eventcurrencylocal Find(int index);
        }

        class EventMission
        {
            static /*0xd92758*/ System.Collections.Generic.List<TableData.TableData_Eventmission> FindAll();

            class Point
            {
                static /*0xd97960*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> Find(int _missionId);
            }
        }

        class EventPage
        {
            static /*0xd927a4*/ System.Collections.Generic.List<TableData.TableData_Eventpage> FindMany(int _eventPageID);
        }

        class EventPreset
        {
            static /*0xd92838*/ TableData.TableData_Eventpreset Find(int index);
        }

        class EventExchange
        {
            static /*0xd926c4*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> FindMany(int _typeEventID);
        }

        class EventBuyInApp
        {
            static /*0xd92630*/ TableData.TableData_Eventbuyinapp Find(int _typeEventID);
        }

        class HotTime
        {
            static /*0xd928cc*/ TableData.TableData_Eventhottime Find(int _hotTimeID);
        }

        class Bonus
        {
            static /*0xd922c0*/ System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>> FindMany(string trigger);
        }

        class Quest
        {
            static /*0xd92afc*/ System.Collections.Generic.List<TableData.TableData_Eventquest> FindMany(int eventQuestId);
        }

        class QuestGroup
        {
            static /*0xd92b90*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> FindMany(string eventQuestGroup);
            static /*0xd92c24*/ TableData.TableData_Eventquestgroup Find(int index);
        }

        class Roulette
        {
            static /*0xd92cb8*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> FindMany(int eventId);
        }

        class Boss
        {
            static /*0xd92394*/ TableData.TableData_Eventboss Find(int eventBossId);
            static /*0xd92428*/ TableData.TableData_Eventboss FindIndex(int index);

            class Reward
            {
                static /*0xd97838*/ System.Collections.Generic.List<TableData.TableData_Eventbossreward> FindMany(int eventBossRewardId);
            }
        }

        class Complete
        {
            static /*0xd924bc*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> FindMany(int eventCompleteID);

            class Mission
            {
                static /*0xd978cc*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> FindMany(int eventcompleteMissionID);
            }
        }
    }

    class Config
    {
        static /*0xccc0f0*/ string Find(string name);
        static /*0xccd064*/ int FindInt(string name);
        static /*0xccbe10*/ System.Collections.Generic.List<int> FindIntArray(string name);

        class <>c
        {
            static /*0x0*/ TableManager.Config.<> <>9;
            static /*0x8*/ System.Func<string, int> <>9__2_0;

            static /*0xd91954*/ <>c();
            /*0xd919b4*/ <>c();
            /*0xd919bc*/ int <FindIntArray>b__2_0(string s);
        }
    }

    class Profile
    {
        static /*0xcce118*/ System.Collections.Generic.List<TableData.TableData_Profileskin> FindAll();
        static /*0xcce164*/ System.Collections.Generic.List<TableData.TableData_Profileskin> FindSelectAll(ProfileSkinType type);
        static /*0xcce280*/ TableData.TableData_Profileskin Find(ProfileSkinType type, int id);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ ProfileSkinType type;

            /*0xd948a4*/ <>c__DisplayClass1_0();
            /*0xd948ac*/ bool <FindSelectAll>b__0(TableData.TableData_Profileskin x);
        }

        class <>c__DisplayClass2_0
        {
            /*0x10*/ int id;

            /*0xd9496c*/ <>c__DisplayClass2_0();
            /*0xd94974*/ bool <Find>b__0(TableData.TableData_Profileskin x);
        }
    }

    class Emoticon
    {
        static /*0xccd3ac*/ System.Collections.Generic.List<TableData.TableData_Emoticon> FindAll();
        static /*0xccd3f8*/ TableData.TableData_Emoticon Find(string val);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ string val;

            /*0xd92004*/ <>c__DisplayClass1_0();
            /*0xd9200c*/ bool <Find>b__0(TableData.TableData_Emoticon x);
        }
    }

    class WorldArena
    {
        static /*0xccf3c0*/ System.Collections.Generic.List<TableData.TableData_Worldarenachampreward> CampRewardAll();
        static /*0xccf40c*/ int TierCount();
        static /*0xccf478*/ TableData.TableData_Worldarenatier2 GetTier(int nTier);
        static /*0xccf50c*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> TrainingAll();
        static /*0xccf558*/ TableData.TableData_Trainingroom GetTraining(Battle.CharacterStat.StatType type);
        static /*0xccf674*/ int GetTrainingIndex(Battle.CharacterStat.StatType type);
        static /*0xccf790*/ TableData.TableData_Trainingroom GetTraining(PTShare.Define.Currency type);
        static /*0xccf8ac*/ int GetTrainingIndex(PTShare.Define.Currency type);
        static /*0xccf9c8*/ string GetConfig(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfae0*/ int GetConfigInt(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfb18*/ float GetConfigFloat(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfb54*/ System.Collections.Generic.List<Rewards> GetConfigRewards(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfbd0*/ System.DateTime GetConfigDateTime(TableManager.WorldArena.WorldArenaConfigKey key);
        static /*0xccfc84*/ System.Collections.Generic.List<Rewards> GetTrainingReward(int groupIndex, int indivIndex);
        static /*0xccfecc*/ System.Collections.Generic.List<Rewards> GetTierBattleWinReward(int nTier);
        static /*0xccff50*/ System.Collections.Generic.List<Rewards> GetTierRaiseReward(int nTier);
        static /*0xccffd4*/ System.Collections.Generic.List<Rewards> GetTierDailyReward(int nTier);
        static /*0xcd0058*/ System.Collections.Generic.List<Rewards> GetTierSeasonReward(int nTier);
        static /*0xcd00dc*/ System.ValueTuple<bool, int, Rewards> GetTierReward(int nTier);

        enum WorldArenaConfigKey
        {
            WorldArenaListResetCost = 0,
            WorldArenaFreeListResetCD = 1,
            WorldArenaUnitHideTier = 2,
            WorldArenaMatchingRangeN = 3,
            DailyFreeTicket = 4,
            WorldArenaEntryItem = 5,
            TrainingRoationMax = 6,
            WorldArenaSeasonStart = 7,
            WorldArenaSeasonRotation = 8,
            SeasonReward = 9,
            SeasonRankRewardCount = 10,
            SeasonRankReward = 11,
            AttackerWinF1 = 12,
            AttackerWinF2 = 13,
            AttackerWinRange = 14,
            AttackerLoseF1 = 15,
            AttackerLoseF2 = 16,
            AttackerLoseRange = 17,
            DefenderWinF1 = 18,
            DefenderWinF2 = 19,
            DefenderWinRange = 20,
            DefenderLoseF1 = 21,
            DefenderLoseF2 = 22,
            DefenderLoseRange = 23,
            DailyBreakTime = 24,
            WorldArenaTicketPrice = 25,
            WorldArenaUnitHideCount = 26,
            RankApplyTier = 27,
        }

        class Training
        {
            static /*0xd973e8*/ System.Collections.Generic.List<TableData.TableData_Trainingroom> FindAll();
        }

        class <>c__DisplayClass5_0
        {
            /*0x10*/ Battle.CharacterStat.StatType type;

            /*0xd97108*/ <>c__DisplayClass5_0();
            /*0xd97110*/ bool <GetTraining>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass6_0
        {
            /*0x10*/ Battle.CharacterStat.StatType type;

            /*0xd971c0*/ <>c__DisplayClass6_0();
            /*0xd971c8*/ bool <GetTrainingIndex>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass7_0
        {
            /*0x10*/ PTShare.Define.Currency type;

            /*0xd97278*/ <>c__DisplayClass7_0();
            /*0xd97280*/ bool <GetTraining>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass8_0
        {
            /*0x10*/ PTShare.Define.Currency type;

            /*0xd97330*/ <>c__DisplayClass8_0();
            /*0xd97338*/ bool <GetTrainingIndex>b__0(TableData.TableData_Trainingroom x);
        }

        class <>c__DisplayClass14_0
        {
            /*0x10*/ int groupIndex;

            /*0xd970a0*/ <>c__DisplayClass14_0();
            /*0xd970a8*/ Rewards <GetTrainingReward>b__0(Rewards x);
        }
    }

    class Guild
    {
        static /*0xccdb44*/ TableData.TableData_Guild GuildConfig();

        class GuildLevel
        {
            static /*0xd93154*/ TableData.TableData_Guildlevel Find(int lv);
        }

        class GuildBoss
        {
            static /*0xd93074*/ System.Collections.Generic.List<TableData.TableData_Guildboss> FindAll();
        }

        class GuildHuntingReward
        {
            static /*0xd930c0*/ System.Collections.Generic.List<TableData.TableData_Guildhuntingreward> FindMany(int rewardID);
        }

        class GuildWar
        {
            static /*0xd9327c*/ string GetConfig(TableManager.Guild.GuildWar.GuildWarConfigType eType);
            static /*0xd93360*/ int GetConfigInteger(TableManager.Guild.GuildWar.GuildWarConfigType eType);
            static /*0xd93398*/ System.Collections.Generic.List<TableData.TableData_Guildwarorganize> FindGuildWarOrganize(PTShare.Define.GuildWarPosition position);
            static /*0xd9342c*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> FindGuildRanks(int season);
            static /*0xd934f0*/ TableData.TableData_Guildwarrankreward FindGuildRankRewards(string groupid);

            enum GuildWarConfigType
            {
                SeasonStartPoint = 0,
                DailyFreeTicketMember = 1,
                DailyFreeTicketAttackCaptain = 2,
                SearchAPtRange = 3,
                AddSearchAPtRange = 4,
                AddSearchAPtRangeMax = 5,
                ArenaCalculationTime = 6,
                ArenaPreCalculationTime = 7,
                ArenaEntryItemPrice = 8,
                GuildArenaReset = 9,
                GuildArenaPickCharLevel = 10,
                GuildMastercorrection = 11,
                AttackerCpataincorrection = 12,
                DefenderCaptaincorrection = 13,
                ViceGuildMastercorrection = 14,
                Generalcorrection = 15,
                GuildMembercorrection = 16,
                ParticipationBonus = 17,
                DailyFreeTicketDefenceCaptain = 18,
            }
        }

        class GuildTactic
        {
            static /*0xd931e8*/ TableData.TableData_Guildwartactic Find(int _nFormationID);
        }
    }

    class VIP
    {
        static /*0xccf2e0*/ System.Collections.Generic.List<TableData.TableData_Vip> FindAll();
        static /*0xccf32c*/ TableData.TableData_Vip Find(int level);
    }

    class Bounty
    {
        class BountyLevel
        {
            static /*0xd90aa0*/ TableData.TableData_Bountylv Find(int lv);
        }

        class BountyQuest
        {
            static /*0xd90b34*/ TableData.TableData_Bountyquest Find(int index);
            static /*0xd90bc8*/ System.Collections.Generic.List<TableData.TableData_Bountyquest> FindAll();
        }
    }

    class HeroRevert
    {
        static /*0xccdb90*/ System.Collections.Generic.List<TableData.TableData_Revert> FindAll();
        static /*0xccdbdc*/ TableData.TableData_Revert Find(HEROGRADE eType);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ HEROGRADE eType;

            /*0xd93584*/ <>c__DisplayClass1_0();
            /*0xd9358c*/ bool <Find>b__0(TableData.TableData_Revert x);
        }
    }

    class Dungeon
    {
        static /*0xccd280*/ TableData.TableData_Dungeon Find(int dungeonId);
        static /*0xccd314*/ System.Collections.Generic.List<TableData.TableData_Dungeon> FindAll();
        static /*0xccd360*/ TableData.TableData_Dungeonsetting Config();

        class DungeonGroup
        {
            static /*0xd91bfc*/ System.Collections.Generic.List<TableData.TableData_Dungeongroup> FindMany(int dungeonId);
            static /*0xd91c90*/ TableData.TableData_Dungeongroup FindWithDungeonIDDungeonLV(int _nDungeonID, int _nDungeonLV);

            class <>c__DisplayClass1_0
            {
                /*0x10*/ int _nDungeonID;
                /*0x14*/ int _nDungeonLV;

                /*0xd91dac*/ <>c__DisplayClass1_0();
                /*0xd977fc*/ bool <FindWithDungeonIDDungeonLV>b__0(TableData.TableData_Dungeongroup x);
            }
        }

        class DungeonMap
        {
            static /*0xd91db4*/ System.Collections.Generic.List<TableData.TableData_Dungeonmap> FindMany(int dungeonId);
        }

        class DungeonTile
        {
            static /*0xd91f70*/ TableData.TableData_Dungeontile Find(int index);
        }

        class DungeonMateEquip
        {
            static /*0xd91e48*/ TableData.TableData_Dungeonmateequip Find(int grade);
        }

        class DungeonDialog
        {
            static /*0xd91a88*/ System.Collections.Generic.List<TableData.TableData_Dungeondialog> FindMany(int dungeonId);
            static /*0xd91b1c*/ System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection> FindManyDirection(int dungeonId);
            static /*0xd91bb0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Dungeondialog>> FindAll();
        }

        class DungeonReward
        {
            static /*0xd91edc*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> FindMany(int dungeonId);
        }
    }

    class Race
    {
        static /*0xcce714*/ System.Collections.Generic.List<TableData.TableData_Racetile> TileAll();
        static /*0xcce760*/ System.Collections.Generic.List<TableData.TableData_Raceaccel> AccelAll();
        static /*0xcce7ac*/ System.Collections.Generic.List<TableData.TableData_Racereward> RewardAll();
        static /*0xcce7f8*/ TableData.TableData_Racetile FindTile(RaceTileType eType);

        class <>c__DisplayClass3_0
        {
            /*0x10*/ RaceTileType eType;

            /*0xd95658*/ <>c__DisplayClass3_0();
            /*0xd95660*/ bool <FindTile>b__0(TableData.TableData_Racetile x);
        }
    }

    class Run
    {
        static /*0xccea54*/ TableData.TableData_Runlife FindLife(int _nUnitID);
        static /*0xcceae8*/ TableData.TableData_Runreward FindReward(int _nUserLV);
    }

    class Relation
    {
        static /*0xcce900*/ System.Collections.Generic.List<TableData.TableData_Relation> FindAll();
        static /*0xcce94c*/ TableData.TableData_Relation Find(int nIndex);

        class <>c__DisplayClass1_0
        {
            /*0x10*/ int nIndex;

            /*0xd95700*/ <>c__DisplayClass1_0();
            /*0xd95708*/ bool <Find>b__0(TableData.TableData_Relation x);
        }
    }

    class WorldBoss
    {
        class Step
        {
            static /*0xd974c8*/ TableData.TableData_Worldbossstep Find(int stepId);
        }

        class Mission
        {
            static /*0xd97434*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> FindMany(int bossId);
        }
    }

    class PVE_Ranking
    {
        class Noblity
        {
            static /*0xd947c4*/ TableData.TableData_Pvenoblity Find(int idx);
            static /*0xd94858*/ System.Collections.Generic.List<TableData.TableData_Pvenoblity> FindAll();
        }

        class Challenge
        {
            static /*0xd94474*/ int FindMaxChallengeLv(int challengeId);
            static /*0xd94510*/ TableData.TableData_Pvechallenge Find(int challengeId, int challengeLv);
            static /*0xd94650*/ System.Collections.Generic.List<TableData.TableData_Pvechallenge> FindAll(int challengeId);

            class <>c__DisplayClass1_0
            {
                /*0x10*/ int challengeLv;

                /*0xd94648*/ <>c__DisplayClass1_0();
                /*0xd97c00*/ bool <Find>b__0(TableData.TableData_Pvechallenge data);
            }
        }

        class ClearReward
        {
            static /*0xd946e4*/ System.Collections.Generic.List<TableData.TableData_Pveclearreward> FindAll();
            static /*0xd94730*/ TableData.TableData_Pveclearreward Find(int clearCount);
        }
    }

    class Housing
    {
        static /*0xccdcf8*/ string Find(string name);

        class Floor
        {
            static /*0xd93c5c*/ TableData.TableData_Housingfloor Find(int floor);
            static /*0xd93cf0*/ int MaxFloor();
        }

        class Gacha
        {
            static /*0xd94070*/ System.Collections.Generic.List<TableData.TableData_Housinggacha> FindGachaMany(int groupId);
            static /*0xd94104*/ System.Collections.Generic.List<int> Keys();
            static /*0xd9418c*/ int MaxGroup();
        }

        class Effect
        {
            static /*0xd936b8*/ TableData.TableData_Furniturecontentseffect FindContentEffect(int contentsEffectId);
            static /*0xd9374c*/ TableData.TableData_Furnitureheroeffect FindHeroEffect(int id);
            static /*0xd937e0*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> FindEffectTypeAll();
            static /*0xd9382c*/ TableData.TableData_Furnitureeffecttype FindEffectType(string type);
            static /*0xd938c0*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> FindLevelTypeMany_EffectType(string effectType);
            static /*0xd93954*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> FindLevelTypeMany_LevelupType(string levelupType);
            static /*0xd939e8*/ TableData.TableData_Furnitureleveltypelist FindLevelType(string leveluptype, int level);
            static /*0xd93b3c*/ TableData.TableData_Furnitureleveltypelist FindLevelType(int heroEffectID);

            class <>c__DisplayClass6_0
            {
                /*0x10*/ int level;

                /*0xd93b34*/ <>c__DisplayClass6_0();
                /*0xd97a40*/ bool <FindLevelType>b__0(TableData.TableData_Furnitureleveltypelist x);
            }

            class <>c__DisplayClass7_0
            {
                /*0x10*/ int heroEffectID;

                /*0xd93c54*/ <>c__DisplayClass7_0();
                /*0xd97a68*/ bool <FindLevelType>b__0(TableData.TableData_Furnitureleveltypelist x);
            }
        }

        class Furniture
        {
            static /*0xd93d3c*/ System.Collections.Generic.List<TableData.TableData_Furnitureset> FindSetAll();
            static /*0xd93d88*/ TableData.TableData_Furniture Find(int index);
            static /*0xd93e1c*/ System.Collections.Generic.List<TableData.TableData_Furniture> FindAll();
            static /*0xd93e68*/ System.Collections.Generic.List<TableData.TableData_Furnitureshop> FindShopAll();
            static /*0xd93eb4*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> FindShopListMany(int groupId);
            static /*0xd93f48*/ TableData.TableData_Furnitureshoplist FindShop(int index);
            static /*0xd93fdc*/ TableData.TableData_Housingfloorpattern FindPattern(string patternId);

            class LevelUp
            {
                static /*0xd97a8c*/ System.Collections.Generic.List<TableData.TableData_Furniturelevelup> FindAll();
                static /*0xd97ad8*/ TableData.TableData_Furniturelevelup Find(int level);
                static /*0xd97b6c*/ TableData.TableData_Furnitureexp FindExp(string grade);
            }
        }

        class Dismiss
        {
            static /*0xd9366c*/ System.Collections.Generic.List<TableData.TableData_Housingdismiss> FindAll();
        }
    }

    class Ability
    {
        class AbilityPercent
        {
            static /*0xd907ac*/ TableData.TableData_Abilitypercent Find(int index);
            static /*0xd90840*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> FindMany();
        }

        class AbilityOptionValue
        {
            static /*0xd90684*/ TableData.TableData_Abilityoptionvalue Find(int index);
            static /*0xd90718*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> FindMany(string optionId);
        }

        class AbilityReset
        {
            static /*0xd9088c*/ TableData.TableData_Abilityreset Find(string grade);
        }
    }

    class Ads
    {
        static /*0xccbdcc*/ System.Collections.Generic.List<int> GetLimit();
        static /*0xccc000*/ System.Collections.Generic.List<Rewards> GetRewards(TableManager.Ads.AdsRewardType eType);
        static /*0xccc198*/ PTShare.Define.SProperty GetProperty(TableManager.Ads.AdsRewardType eType);

        enum AdsRewardType
        {
            ADReward1 = 1,
            ADReward2 = 2,
            ADReward3 = 3,
            ADReward4 = 4,
            ADRewardFinal = 5,
        }
    }

    class <>c__DisplayClass255_0
    {
        /*0x10*/ TableData.TableGroup table;

        /*0xccbc7c*/ <>c__DisplayClass255_0();
        /*0xccbc84*/ int <Init>b__299(TableData.TableData_Unitbase v);
    }

    class <>c__DisplayClass255_1
    {
        /*0x10*/ TableData.TableData_Unitbase v;

        /*0xccbd94*/ <>c__DisplayClass255_1();
        /*0xccbd9c*/ bool <Init>b__486(TableData.TableData_Unitgradelv f);
    }

    class <>c
    {
        static /*0x0*/ TableManager.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Arenaconfig, string> <>9__255_0;
        static /*0x10*/ System.Func<TableData.TableData_Arenaconfig, string> <>9__255_1;
        static /*0x18*/ System.Func<TableData.TableData_Buff, int> <>9__255_2;
        static /*0x20*/ System.Func<TableData.TableData_Buff, TableData.TableData_Buff> <>9__255_3;
        static /*0x28*/ System.Func<TableData.TableData_Buff, int> <>9__255_4;
        static /*0x30*/ System.Func<TableData.TableData_Buff, Battle.BuffEffectType> <>9__255_5;
        static /*0x38*/ System.Func<TableData.TableData_Buff, int> <>9__255_6;
        static /*0x40*/ System.Func<TableData.TableData_Buff, Battle.BuffEffectType> <>9__255_7;
        static /*0x48*/ System.Func<TableData.TableData_Buff, int> <>9__255_8;
        static /*0x50*/ System.Func<TableData.TableData_Buff, Battle.BuffEffectType> <>9__255_9;
        static /*0x58*/ System.Func<TableData.TableData_Buff, int> <>9__255_10;
        static /*0x60*/ System.Func<TableData.TableData_Buff, Battle.BuffOriginType> <>9__255_11;
        static /*0x68*/ System.Func<TableData.TableData_Buff, int> <>9__255_12;
        static /*0x70*/ System.Func<TableData.TableData_Buff, Battle.BuffType> <>9__255_13;
        static /*0x78*/ System.Func<TableData.TableData_Buff, int> <>9__255_14;
        static /*0x80*/ System.Func<TableData.TableData_Buff, Battle.ShieldType> <>9__255_15;
        static /*0x88*/ System.Func<TableData.TableData_Buff, int> <>9__255_16;
        static /*0x90*/ System.Func<TableData.TableData_Buff, Battle.CharacterStat.StatType> <>9__255_17;
        static /*0x98*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_18;
        static /*0xa0*/ System.Func<TableData.TableData_Skillbase, TableData.TableData_Skillbase> <>9__255_19;
        static /*0xa8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_20;
        static /*0xb0*/ System.Func<TableData.TableData_Skillbase, Battle.SkillType> <>9__255_21;
        static /*0xb8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_22;
        static /*0xc0*/ System.Func<TableData.TableData_Skillbase, Battle.ActiveType> <>9__255_23;
        static /*0xc8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_24;
        static /*0xd0*/ System.Func<TableData.TableData_Skillbase, Battle.ColliderType> <>9__255_25;
        static /*0xd8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_26;
        static /*0xe0*/ System.Func<TableData.TableData_Skillbase, Battle.ColliderType> <>9__255_27;
        static /*0xe8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_28;
        static /*0xf0*/ System.Func<TableData.TableData_Skillbase, Battle.AttackType> <>9__255_29;
        static /*0xf8*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_30;
        static /*0x100*/ System.Func<TableData.TableData_Skillbase, Battle.PassiveConditionType> <>9__255_31;
        static /*0x108*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_32;
        static /*0x110*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_33;
        static /*0x118*/ System.Func<TableData.TableData_Skillbase, bool> <>9__255_457;
        static /*0x120*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_34;
        static /*0x128*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_35;
        static /*0x130*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_36;
        static /*0x138*/ System.Func<TableData.TableData_Skillbase, bool> <>9__255_458;
        static /*0x140*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_37;
        static /*0x148*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_38;
        static /*0x150*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_39;
        static /*0x158*/ System.Func<TableData.TableData_Skillbase, bool> <>9__255_459;
        static /*0x160*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_40;
        static /*0x168*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_41;
        static /*0x170*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_42;
        static /*0x178*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_43;
        static /*0x180*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_44;
        static /*0x188*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_45;
        static /*0x190*/ System.Func<TableData.TableData_Skillbase, int> <>9__255_460;
        static /*0x198*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, int> <>9__255_461;
        static /*0x1a0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.List<TableData.TableData_Skillbase>> <>9__255_462;
        static /*0x1a8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>>> <>9__255_46;
        static /*0x1b0*/ System.Func<TableData.TableData_Skillfx, int> <>9__255_47;
        static /*0x1b8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillfx>, int> <>9__255_48;
        static /*0x1c0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillfx>, System.Collections.Generic.List<TableData.TableData_Skillfx>> <>9__255_49;
        static /*0x1c8*/ System.Func<TableData.TableData_Skillfx, System.ValueTuple<int, int>> <>9__255_50;
        static /*0x1d0*/ System.Func<TableData.TableData_Skillfx, TableData.TableData_Skillfx> <>9__255_51;
        static /*0x1d8*/ System.Func<TableData.TableData_Skillfx, System.ValueTuple<int, int>> <>9__255_52;
        static /*0x1e0*/ System.Func<TableData.TableData_Skillfx, Battle.SkillEnumGroup> <>9__255_53;
        static /*0x1e8*/ System.Comparison<TableData.TableData_Skillfx> <>9__255_54;
        static /*0x1f0*/ System.Func<TableData.TableData_Skillextra, Battle.SkillExtraID> <>9__255_55;
        static /*0x1f8*/ System.Func<TableData.TableData_Skillextra, TableData.TableData_Skillextra> <>9__255_56;
        static /*0x200*/ System.Func<TableData.TableData_Skilllv, int> <>9__255_57;
        static /*0x208*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skilllv>, int> <>9__255_58;
        static /*0x210*/ System.Func<TableData.TableData_Skilllv, int> <>9__255_463;
        static /*0x218*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_464;
        static /*0x220*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skilllv>, System.Collections.Generic.Dictionary<int, TableData.TableData_Skilllv>> <>9__255_59;
        static /*0x228*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_465;
        static /*0x230*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_466;
        static /*0x238*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_467;
        static /*0x240*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_468;
        static /*0x248*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_469;
        static /*0x250*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_470;
        static /*0x258*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_471;
        static /*0x260*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_472;
        static /*0x268*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_473;
        static /*0x270*/ System.Func<TableData.TableData_Skilllv, bool> <>9__255_474;
        static /*0x278*/ System.Func<TableData.TableData_Skilllv, System.ValueTuple<int, int>> <>9__255_475;
        static /*0x280*/ System.Func<TableData.TableData_Skilllv, TableData.TableData_Skilllv> <>9__255_476;
        static /*0x288*/ System.Func<TableData.TableData_Skilldesc, System.ValueTuple<int, int>> <>9__255_60;
        static /*0x290*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc>, System.ValueTuple<int, int>> <>9__255_61;
        static /*0x298*/ System.Func<TableData.TableData_Skilldesc, int> <>9__255_477;
        static /*0x2a0*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc>, System.Collections.Generic.List<TableData.TableData_Skilldesc>> <>9__255_62;
        static /*0x2a8*/ System.Func<TableData.TableData_Enhanceequip, int> <>9__255_63;
        static /*0x2b0*/ System.Func<TableData.TableData_Enhanceequip, TableData.TableData_Enhanceequip> <>9__255_64;
        static /*0x2b8*/ System.Func<TableData.TableData_Equipment, int> <>9__255_65;
        static /*0x2c0*/ System.Func<TableData.TableData_Equipment, TableData.TableData_Equipment> <>9__255_66;
        static /*0x2c8*/ System.Func<TableData.TableData_Equipment, bool> <>9__255_67;
        static /*0x2d0*/ System.Func<TableData.TableData_Equipment, System.ValueTuple<string, int>> <>9__255_68;
        static /*0x2d8*/ System.Func<TableData.TableData_Equipment, TableData.TableData_Equipment> <>9__255_69;
        static /*0x2e0*/ System.Func<TableData.TableData_Equipment, System.ValueTuple<PTShare.Define.EquipParts, int, string>> <>9__255_70;
        static /*0x2e8*/ System.Func<TableData.TableData_Equipment, TableData.TableData_Equipment> <>9__255_71;
        static /*0x2f0*/ System.Func<TableData.TableData_Equipment, string> <>9__255_72;
        static /*0x2f8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Equipment>, string> <>9__255_73;
        static /*0x300*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Equipment>, System.Collections.Generic.List<TableData.TableData_Equipment>> <>9__255_74;
        static /*0x308*/ System.Func<TableData.TableData_Equipment, int> <>9__255_75;
        static /*0x310*/ System.Func<TableData.TableData_Equipment, int> <>9__255_76;
        static /*0x318*/ System.Func<TableData.TableData_Advanceequip, int> <>9__255_77;
        static /*0x320*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, int> <>9__255_78;
        static /*0x328*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, System.Collections.Generic.List<TableData.TableData_Advanceequip>> <>9__255_79;
        static /*0x330*/ System.Func<TableData.TableData_Advanceequip, int> <>9__255_80;
        static /*0x338*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, int> <>9__255_81;
        static /*0x340*/ System.Func<TableData.TableData_Advanceequip, int> <>9__255_478;
        static /*0x348*/ System.Func<TableData.TableData_Advanceequip, string> <>9__255_479;
        static /*0x350*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Advanceequip>, System.Collections.Generic.Dictionary<int, string>> <>9__255_82;
        static /*0x358*/ System.Predicate<TableData.TableData_Unitbase> <>9__255_83;
        static /*0x360*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_84;
        static /*0x368*/ System.Func<TableData.TableData_Unitbase, TableData.TableData_Unitbase> <>9__255_85;
        static /*0x370*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_86;
        static /*0x378*/ System.Func<TableData.TableData_Unitbase, Battle.ColliderType> <>9__255_87;
        static /*0x380*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_88;
        static /*0x388*/ System.Func<TableData.TableData_Unitbase, Battle.AttackType> <>9__255_89;
        static /*0x390*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_90;
        static /*0x398*/ System.Func<TableData.TableData_Unitbase, UnitClassType> <>9__255_91;
        static /*0x3a0*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_92;
        static /*0x3a8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, int> <>9__255_93;
        static /*0x3b0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, System.Collections.Generic.List<TableData.TableData_Unitbase>> <>9__255_94;
        static /*0x3b8*/ System.Func<TableData.TableData_Unitbase, bool> <>9__255_95;
        static /*0x3c0*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_96;
        static /*0x3c8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, int> <>9__255_97;
        static /*0x3d0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitbase>, System.Collections.Generic.List<TableData.TableData_Unitbase>> <>9__255_98;
        static /*0x3d8*/ System.Func<TableData.TableData_Unitgrade, int> <>9__255_99;
        static /*0x3e0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, int> <>9__255_100;
        static /*0x3e8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, System.Collections.Generic.List<TableData.TableData_Unitgrade>> <>9__255_101;
        static /*0x3f0*/ System.Func<TableData.TableData_Unitgrade, int> <>9__255_102;
        static /*0x3f8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, int> <>9__255_103;
        static /*0x400*/ System.Func<TableData.TableData_Unitgrade, int> <>9__255_480;
        static /*0x408*/ System.Func<TableData.TableData_Unitgrade, TableData.TableData_Unitgrade> <>9__255_481;
        static /*0x410*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unitgrade>, System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgrade>> <>9__255_104;
        static /*0x418*/ System.Func<TableData.TableData_Unitgradelv, int> <>9__255_105;
        static /*0x420*/ System.Func<TableData.TableData_Unitgradelv, TableData.TableData_Unitgradelv> <>9__255_106;
        static /*0x428*/ System.Func<TableData.TableData_Unitlv, int> <>9__255_107;
        static /*0x430*/ System.Func<TableData.TableData_Unitlv, TableData.TableData_Unitlv> <>9__255_108;
        static /*0x438*/ System.Func<TableData.TableData_Unittier, int> <>9__255_109;
        static /*0x440*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unittier>, int> <>9__255_110;
        static /*0x448*/ System.Func<TableData.TableData_Unittier, int> <>9__255_482;
        static /*0x450*/ System.Func<TableData.TableData_Unittier, TableData.TableData_Unittier> <>9__255_483;
        static /*0x458*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Unittier>, System.Collections.Generic.Dictionary<int, TableData.TableData_Unittier>> <>9__255_111;
        static /*0x460*/ System.Func<TableData.TableData_Unittierlv, int> <>9__255_112;
        static /*0x468*/ System.Func<TableData.TableData_Unittierlv, TableData.TableData_Unittierlv> <>9__255_113;
        static /*0x470*/ System.Predicate<TableData.TableData_Skinbasic> <>9__255_114;
        static /*0x478*/ System.Func<TableData.TableData_Voice, System.ValueTuple<int, string>> <>9__255_115;
        static /*0x480*/ System.Func<TableData.TableData_Voice, TableData.TableData_Voice> <>9__255_116;
        static /*0x488*/ System.Func<TableData.TableData_Artifact, System.ValueTuple<int, int>> <>9__255_117;
        static /*0x490*/ System.Func<TableData.TableData_Artifact, TableData.TableData_Artifact> <>9__255_118;
        static /*0x498*/ System.Func<TableData.TableData_Artifact, System.ValueTuple<int, int>> <>9__255_119;
        static /*0x4a0*/ System.Func<TableData.TableData_Artifact, TableData.TableData_Artifact> <>9__255_120;
        static /*0x4a8*/ System.Func<TableData.TableData_Artifact, System.ValueTuple<int, int>> <>9__255_121;
        static /*0x4b0*/ System.Func<TableData.TableData_Artifact, Battle.ColliderType> <>9__255_122;
        static /*0x4b8*/ System.Func<TableData.TableData_Artifact, int> <>9__255_123;
        static /*0x4c0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Artifact>, int> <>9__255_124;
        static /*0x4c8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Artifact>, System.Collections.Generic.List<TableData.TableData_Artifact>> <>9__255_125;
        static /*0x4d0*/ System.Func<TableData.TableData_Quest, int> <>9__255_126;
        static /*0x4d8*/ System.Func<TableData.TableData_Quest, TableData.TableData_Quest> <>9__255_127;
        static /*0x4e0*/ System.Func<TableData.TableData_Quest, bool> <>9__255_128;
        static /*0x4e8*/ System.Func<TableData.TableData_Quest, int> <>9__255_129;
        static /*0x4f0*/ System.Func<TableData.TableData_Quest, bool> <>9__255_130;
        static /*0x4f8*/ System.Func<TableData.TableData_Quest, int> <>9__255_131;
        static /*0x500*/ System.Func<TableData.TableData_Quest, string> <>9__255_132;
        static /*0x508*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Quest>, QuestContentType> <>9__255_133;
        static /*0x510*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Quest>, System.Collections.Generic.List<TableData.TableData_Quest>> <>9__255_134;
        static /*0x518*/ System.Func<TableData.TableData_Quest, System.ValueTuple<QuestContentType, QuestGroupType>> <>9__255_135;
        static /*0x520*/ System.Func<System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest>, System.ValueTuple<QuestContentType, QuestGroupType>> <>9__255_136;
        static /*0x528*/ System.Func<System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest>, System.Collections.Generic.List<TableData.TableData_Quest>> <>9__255_137;
        static /*0x530*/ System.Func<TableData.TableData_Quest, string> <>9__255_138;
        static /*0x538*/ System.Func<TableData.TableData_Quest, TableData.TableData_Quest> <>9__255_139;
        static /*0x540*/ System.Func<TableData.TableData_Questgroup, string> <>9__255_140;
        static /*0x548*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Questgroup>, string> <>9__255_141;
        static /*0x550*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Questgroup>, System.Collections.Generic.List<TableData.TableData_Questgroup>> <>9__255_142;
        static /*0x558*/ System.Func<TableData.TableData_Questpropertypoint, string> <>9__255_143;
        static /*0x560*/ System.Func<TableData.TableData_Questpropertypoint, TableData.TableData_Questpropertypoint> <>9__255_144;
        static /*0x568*/ System.Func<TableData.TableData_Questchapterclear, string> <>9__255_145;
        static /*0x570*/ System.Func<TableData.TableData_Questchapterclear, TableData.TableData_Questchapterclear> <>9__255_146;
        static /*0x578*/ System.Func<TableData.TableData_Queststageclear, string> <>9__255_147;
        static /*0x580*/ System.Func<TableData.TableData_Queststageclear, TableData.TableData_Queststageclear> <>9__255_148;
        static /*0x588*/ System.Func<TableData.TableData_Questgacha, string> <>9__255_149;
        static /*0x590*/ System.Func<TableData.TableData_Questgacha, TableData.TableData_Questgacha> <>9__255_150;
        static /*0x598*/ System.Func<TableData.TableData_Queststageidle, string> <>9__255_151;
        static /*0x5a0*/ System.Func<TableData.TableData_Queststageidle, TableData.TableData_Queststageidle> <>9__255_152;
        static /*0x5a8*/ System.Func<TableData.TableData_Queststagetry, string> <>9__255_153;
        static /*0x5b0*/ System.Func<TableData.TableData_Queststagetry, TableData.TableData_Queststagetry> <>9__255_154;
        static /*0x5b8*/ System.Func<TableData.TableData_Questheroupgrade, string> <>9__255_155;
        static /*0x5c0*/ System.Func<TableData.TableData_Questheroupgrade, TableData.TableData_Questheroupgrade> <>9__255_156;
        static /*0x5c8*/ System.Func<TableData.TableData_Questequipupgrade, string> <>9__255_157;
        static /*0x5d0*/ System.Func<TableData.TableData_Questequipupgrade, TableData.TableData_Questequipupgrade> <>9__255_158;
        static /*0x5d8*/ System.Func<TableData.TableData_Questfriend, string> <>9__255_159;
        static /*0x5e0*/ System.Func<TableData.TableData_Questfriend, TableData.TableData_Questfriend> <>9__255_160;
        static /*0x5e8*/ System.Func<TableData.TableData_Questprizeboard, string> <>9__255_161;
        static /*0x5f0*/ System.Func<TableData.TableData_Questprizeboard, TableData.TableData_Questprizeboard> <>9__255_162;
        static /*0x5f8*/ System.Func<TableData.TableData_Questbuy, string> <>9__255_163;
        static /*0x600*/ System.Func<TableData.TableData_Questbuy, TableData.TableData_Questbuy> <>9__255_164;
        static /*0x608*/ System.Func<TableData.TableData_Questarena, string> <>9__255_165;
        static /*0x610*/ System.Func<TableData.TableData_Questarena, TableData.TableData_Questarena> <>9__255_166;
        static /*0x618*/ System.Func<TableData.TableData_Questheroget, string> <>9__255_167;
        static /*0x620*/ System.Func<TableData.TableData_Questheroget, TableData.TableData_Questheroget> <>9__255_168;
        static /*0x628*/ System.Func<TableData.TableData_Questlevel, string> <>9__255_169;
        static /*0x630*/ System.Func<TableData.TableData_Questlevel, TableData.TableData_Questlevel> <>9__255_170;
        static /*0x638*/ System.Func<TableData.TableData_Questgetitem, string> <>9__255_171;
        static /*0x640*/ System.Func<TableData.TableData_Questgetitem, TableData.TableData_Questgetitem> <>9__255_172;
        static /*0x648*/ System.Func<TableData.TableData_Questmove, string> <>9__255_173;
        static /*0x650*/ System.Func<TableData.TableData_Questmove, TableData.TableData_Questmove> <>9__255_174;
        static /*0x658*/ System.Func<TableData.TableData_Questlabyrinth, string> <>9__255_175;
        static /*0x660*/ System.Func<TableData.TableData_Questlabyrinth, TableData.TableData_Questlabyrinth> <>9__255_176;
        static /*0x668*/ System.Func<TableData.TableData_Questresonance, string> <>9__255_177;
        static /*0x670*/ System.Func<TableData.TableData_Questresonance, TableData.TableData_Questresonance> <>9__255_178;
        static /*0x678*/ System.Func<TableData.TableData_Questspirittowerclear, string> <>9__255_179;
        static /*0x680*/ System.Func<TableData.TableData_Questspirittowerclear, TableData.TableData_Questspirittowerclear> <>9__255_180;
        static /*0x688*/ System.Func<TableData.TableData_Gacha, int> <>9__255_181;
        static /*0x690*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gacha>, int> <>9__255_182;
        static /*0x698*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gacha>, System.Collections.Generic.List<TableData.TableData_Gacha>> <>9__255_183;
        static /*0x6a0*/ System.Func<TableData.TableData_Gacha, string> <>9__255_184;
        static /*0x6a8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Gacha>, GachaFactionType> <>9__255_185;
        static /*0x6b0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Gacha>, System.Collections.Generic.List<TableData.TableData_Gacha>> <>9__255_186;
        static /*0x6b8*/ System.Func<TableData.TableData_Gachabonus, int> <>9__255_187;
        static /*0x6c0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gachabonus>, int> <>9__255_188;
        static /*0x6c8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Gachabonus>, System.Collections.Generic.List<TableData.TableData_Gachabonus>> <>9__255_189;
        static /*0x6d0*/ System.Func<TableData.TableData_Gachadroppattern, int> <>9__255_190;
        static /*0x6d8*/ System.Func<TableData.TableData_Gachadroppattern, TableData.TableData_Gachadroppattern> <>9__255_191;
        static /*0x6e0*/ System.Func<TableData.TableData_Highdroprate, int> <>9__255_192;
        static /*0x6e8*/ System.Func<TableData.TableData_Highdroprate, TableData.TableData_Highdroprate> <>9__255_193;
        static /*0x6f0*/ System.Func<TableData.TableData_Chapter, int> <>9__255_194;
        static /*0x6f8*/ System.Func<TableData.TableData_Chapter, TableData.TableData_Chapter> <>9__255_195;
        static /*0x700*/ System.Func<TableData.TableData_Hardchapter, int> <>9__255_196;
        static /*0x708*/ System.Func<TableData.TableData_Hardchapter, TableData.TableData_Hardchapter> <>9__255_197;
        static /*0x710*/ System.Func<TableData.TableData_Stage, int> <>9__255_198;
        static /*0x718*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Stage>, int> <>9__255_199;
        static /*0x720*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Stage>, System.Collections.Generic.List<TableData.TableData_Stage>> <>9__255_200;
        static /*0x728*/ System.Func<TableData.TableData_Stage, string> <>9__255_201;
        static /*0x730*/ System.Func<TableData.TableData_Stage, TableData.TableData_Stage> <>9__255_202;
        static /*0x738*/ System.Func<TableData.TableData_Stage, int> <>9__255_203;
        static /*0x740*/ System.Func<TableData.TableData_Stage, TableData.TableData_Stage> <>9__255_204;
        static /*0x748*/ System.Func<TableData.TableData_Hardstage, int> <>9__255_205;
        static /*0x750*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Hardstage>, int> <>9__255_206;
        static /*0x758*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Hardstage>, System.Collections.Generic.List<TableData.TableData_Hardstage>> <>9__255_207;
        static /*0x760*/ System.Func<TableData.TableData_Hardstage, string> <>9__255_208;
        static /*0x768*/ System.Func<TableData.TableData_Hardstage, TableData.TableData_Hardstage> <>9__255_209;
        static /*0x770*/ System.Func<TableData.TableData_Hardstage, int> <>9__255_210;
        static /*0x778*/ System.Func<TableData.TableData_Hardstage, TableData.TableData_Hardstage> <>9__255_211;
        static /*0x780*/ System.Func<TableData.TableData_Stageidle, int> <>9__255_212;
        static /*0x788*/ System.Func<TableData.TableData_Stageidle, TableData.TableData_Stageidle> <>9__255_213;
        static /*0x790*/ System.Func<TableData.TableData_Towernormal, int> <>9__255_214;
        static /*0x798*/ System.Func<TableData.TableData_Towernormal, TableData.TableData_Towerfloor> <>9__255_215;
        static /*0x7a0*/ System.Func<TableData.TableData_Towerfire, int> <>9__255_216;
        static /*0x7a8*/ System.Func<TableData.TableData_Towerfire, TableData.TableData_Towerfloor> <>9__255_217;
        static /*0x7b0*/ System.Func<TableData.TableData_Towerwind, int> <>9__255_218;
        static /*0x7b8*/ System.Func<TableData.TableData_Towerwind, TableData.TableData_Towerfloor> <>9__255_219;
        static /*0x7c0*/ System.Func<TableData.TableData_Towernatural, int> <>9__255_220;
        static /*0x7c8*/ System.Func<TableData.TableData_Towernatural, TableData.TableData_Towerfloor> <>9__255_221;
        static /*0x7d0*/ System.Func<TableData.TableData_Towerwater, int> <>9__255_222;
        static /*0x7d8*/ System.Func<TableData.TableData_Towerwater, TableData.TableData_Towerfloor> <>9__255_223;
        static /*0x7e0*/ System.Func<TableData.TableData_Towernormal, int> <>9__255_224;
        static /*0x7e8*/ System.Func<TableData.TableData_Towernormal, TableData.TableData_Towerfloor> <>9__255_225;
        static /*0x7f0*/ System.Func<TableData.TableData_Towerfire, int> <>9__255_226;
        static /*0x7f8*/ System.Func<TableData.TableData_Towerfire, TableData.TableData_Towerfloor> <>9__255_227;
        static /*0x800*/ System.Func<TableData.TableData_Towerwind, int> <>9__255_228;
        static /*0x808*/ System.Func<TableData.TableData_Towerwind, TableData.TableData_Towerfloor> <>9__255_229;
        static /*0x810*/ System.Func<TableData.TableData_Towernatural, int> <>9__255_230;
        static /*0x818*/ System.Func<TableData.TableData_Towernatural, TableData.TableData_Towerfloor> <>9__255_231;
        static /*0x820*/ System.Func<TableData.TableData_Towerwater, int> <>9__255_232;
        static /*0x828*/ System.Func<TableData.TableData_Towerwater, TableData.TableData_Towerfloor> <>9__255_233;
        static /*0x830*/ System.Func<TableData.TableData_Battlecampaign, TableData.TableData_Stagebattle> <>9__255_234;
        static /*0x838*/ System.Func<TableData.TableData_Battletower, TableData.TableData_Stagebattle> <>9__255_235;
        static /*0x840*/ System.Func<TableData.TableData_Battledungeon, TableData.TableData_Stagebattle> <>9__255_236;
        static /*0x848*/ System.Func<TableData.TableData_Battleidle, TableData.TableData_Stagebattle> <>9__255_237;
        static /*0x850*/ System.Func<TableData.TableData_Battletutorial, TableData.TableData_Stagebattle> <>9__255_238;
        static /*0x858*/ System.Func<TableData.TableData_Battleguildboss, TableData.TableData_Stagebattle> <>9__255_239;
        static /*0x860*/ System.Func<TableData.TableData_Battlehardcampaign, TableData.TableData_Stagebattle> <>9__255_240;
        static /*0x868*/ System.Func<TableData.TableData_Stagebattle, int> <>9__255_241;
        static /*0x870*/ System.Func<TableData.TableData_Stagebattle, TableData.TableData_Stagebattle> <>9__255_242;
        static /*0x878*/ System.Func<TableData.TableData_Item, int> <>9__255_243;
        static /*0x880*/ System.Func<TableData.TableData_Item, TableData.TableData_Item> <>9__255_244;
        static /*0x888*/ System.Func<TableData.TableData_Item, int> <>9__255_245;
        static /*0x890*/ System.Func<TableData.TableData_Item, string> <>9__255_246;
        static /*0x898*/ System.Func<TableData.TableData_Item, string> <>9__255_247;
        static /*0x8a0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Item>, ItemType> <>9__255_248;
        static /*0x8a8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Item>, System.Collections.Generic.List<TableData.TableData_Item>> <>9__255_249;
        static /*0x8b0*/ System.Func<TableData.TableData_Userlvexp, int> <>9__255_250;
        static /*0x8b8*/ System.Func<TableData.TableData_Userlvexp, TableData.TableData_Userlvexp> <>9__255_251;
        static /*0x8c0*/ System.Func<TableData.TableData_Fastidle, int> <>9__255_252;
        static /*0x8c8*/ System.Func<TableData.TableData_Fastidle, TableData.TableData_Fastidle> <>9__255_253;
        static /*0x8d0*/ System.Func<TableData.TableData_Arenarank, int> <>9__255_254;
        static /*0x8d8*/ System.Func<TableData.TableData_Arenarank, TableData.TableData_Arenarank> <>9__255_255;
        static /*0x8e0*/ System.Func<TableData.TableData_Chest, int> <>9__255_256;
        static /*0x8e8*/ System.Func<TableData.TableData_Chest, System.ValueTuple<TableData.TableData_Chest, System.Int32[]>> <>9__255_257;
        static /*0x8f0*/ System.Func<TableData.TableData_Contenthelp, ContentType> <>9__255_258;
        static /*0x8f8*/ System.Func<TableData.TableData_Contenthelp, TableData.TableData_Contenthelp> <>9__255_259;
        static /*0x900*/ System.Func<TableData.TableData_Contentunlock, int> <>9__255_260;
        static /*0x908*/ System.Func<TableData.TableData_Contentunlock, TableData.TableData_Contentunlock> <>9__255_261;
        static /*0x910*/ System.Func<TableData.TableData_Contentunlock, ContentType> <>9__255_262;
        static /*0x918*/ System.Func<TableData.TableData_Contentunlock, TableData.TableData_Contentunlock> <>9__255_263;
        static /*0x920*/ System.Func<TableData.TableData_Mazemateequip, int> <>9__255_264;
        static /*0x928*/ System.Func<TableData.TableData_Mazemateequip, TableData.TableData_Mazemateequip> <>9__255_265;
        static /*0x930*/ System.Func<TableData.TableData_Mazebattle, System.ValueTuple<int, int, int>> <>9__255_266;
        static /*0x938*/ System.Func<TableData.TableData_Mazebattle, TableData.TableData_Mazebattle> <>9__255_267;
        static /*0x940*/ System.Func<TableData.TableData_Mazebattle, int> <>9__255_268;
        static /*0x948*/ System.Func<TableData.TableData_Mazebattle, TableData.TableData_Mazebattle> <>9__255_269;
        static /*0x950*/ System.Func<TableData.TableData_Mazecourse, int> <>9__255_270;
        static /*0x958*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Mazecourse>, int> <>9__255_271;
        static /*0x960*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Mazecourse>, System.Collections.Generic.List<TableData.TableData_Mazecourse>> <>9__255_272;
        static /*0x968*/ System.Func<TableData.TableData_Cashshopinstant, int> <>9__255_273;
        static /*0x970*/ System.Func<TableData.TableData_Cashshopinstant, TableData.TableData_Cashshopinstant> <>9__255_274;
        static /*0x978*/ System.Func<TableData.TableData_Packagetime, string> <>9__255_275;
        static /*0x980*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packagetime>, string> <>9__255_276;
        static /*0x988*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packagetime>, System.Collections.Generic.List<TableData.TableData_Packagetime>> <>9__255_277;
        static /*0x990*/ System.Func<TableData.TableData_Packageproductgroup, string> <>9__255_278;
        static /*0x998*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup>, string> <>9__255_279;
        static /*0x9a0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup>, System.Collections.Generic.List<TableData.TableData_Packageproductgroup>> <>9__255_280;
        static /*0x9a8*/ System.Func<TableData.TableData_Cashshopquestreward, string> <>9__255_281;
        static /*0x9b0*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward>, string> <>9__255_282;
        static /*0x9b8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward>, System.Collections.Generic.List<TableData.TableData_Cashshopquestreward>> <>9__255_283;
        static /*0x9c0*/ System.Func<TableData.TableData_Cashshopquestreward, int> <>9__255_284;
        static /*0x9c8*/ System.Func<TableData.TableData_Cashshopquestreward, TableData.TableData_Cashshopquestreward> <>9__255_285;
        static /*0x9d0*/ System.Func<TableData.TableData_Demodata, int> <>9__255_286;
        static /*0x9d8*/ System.Func<TableData.TableData_Demodata, TableData.TableData_Demodata> <>9__255_287;
        static /*0x9e0*/ System.Func<TableData.TableData_Contentshoparrangement, int> <>9__255_288;
        static /*0x9e8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement>, int> <>9__255_289;
        static /*0x9f0*/ System.Func<TableData.TableData_Contentshoparrangement, int> <>9__255_484;
        static /*0x9f8*/ System.Func<TableData.TableData_Contentshoparrangement, TableData.TableData_Contentshoparrangement> <>9__255_485;
        static /*0xa00*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement>, System.Collections.Generic.Dictionary<int, TableData.TableData_Contentshoparrangement>> <>9__255_290;
        static /*0xa08*/ System.Func<TableData.TableData_Idleunittipdialog, int> <>9__255_291;
        static /*0xa10*/ System.Func<TableData.TableData_Idleunittipdialog, TableData.TableData_Idleunittipdialog> <>9__255_292;
        static /*0xa18*/ System.Func<TableData.TableData_Menusettingbase, TopMenuType> <>9__255_293;
        static /*0xa20*/ System.Func<TableData.TableData_Menusettingbase, TableData.TableData_Menusettingbase> <>9__255_294;
        static /*0xa28*/ System.Predicate<TableData.TableData_Profileskin> <>9__255_295;
        static /*0xa30*/ System.Func<TableData.TableData_Worldarenatier2, int> <>9__255_296;
        static /*0xa38*/ System.Func<TableData.TableData_Worldarenatier2, TableData.TableData_Worldarenatier2> <>9__255_297;
        static /*0xa40*/ System.Func<TableData.TableData_Unitbase, int> <>9__255_298;
        static /*0xa48*/ System.Func<TableData.TableData_Eventcurrencylocal, int> <>9__255_300;
        static /*0xa50*/ System.Func<TableData.TableData_Eventcurrencylocal, TableData.TableData_Eventcurrencylocal> <>9__255_301;
        static /*0xa58*/ System.Func<TableData.TableData_Eventpass, string> <>9__255_302;
        static /*0xa60*/ System.Func<TableData.TableData_Eventpass, int> <>9__255_303;
        static /*0xa68*/ System.Func<TableData.TableData_Eventpass, string> <>9__255_304;
        static /*0xa70*/ System.Func<TableData.TableData_Eventpass, int> <>9__255_305;
        static /*0xa78*/ System.Func<TableData.TableData_Eventpage, int> <>9__255_306;
        static /*0xa80*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventpage>, int> <>9__255_307;
        static /*0xa88*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventpage>, System.Collections.Generic.List<TableData.TableData_Eventpage>> <>9__255_308;
        static /*0xa90*/ System.Func<TableData.TableData_Eventhottime, int> <>9__255_309;
        static /*0xa98*/ System.Func<TableData.TableData_Eventhottime, TableData.TableData_Eventhottime> <>9__255_310;
        static /*0xaa0*/ System.Func<TableData.TableData_Eventcurrencylocal, string> <>9__255_311;
        static /*0xaa8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal>, string> <>9__255_312;
        static /*0xab0*/ System.Func<TableData.TableData_Eventcurrencylocal, System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>> <>9__255_487;
        static /*0xab8*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal>, System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>>> <>9__255_313;
        static /*0xac0*/ System.Func<TableData.TableData_Eventpreset, int> <>9__255_314;
        static /*0xac8*/ System.Func<TableData.TableData_Eventpreset, TableData.TableData_Eventpreset> <>9__255_315;
        static /*0xad0*/ System.Func<TableData.TableData_Eventmissionpoint, int> <>9__255_316;
        static /*0xad8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint>, int> <>9__255_317;
        static /*0xae0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint>, System.Collections.Generic.List<TableData.TableData_Eventmissionpoint>> <>9__255_318;
        static /*0xae8*/ System.Func<TableData.TableData_Eventexchange, int> <>9__255_319;
        static /*0xaf0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventexchange>, int> <>9__255_320;
        static /*0xaf8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventexchange>, System.Collections.Generic.List<TableData.TableData_Eventexchange>> <>9__255_321;
        static /*0xb00*/ System.Func<TableData.TableData_Eventbuyinapp, int> <>9__255_322;
        static /*0xb08*/ System.Func<TableData.TableData_Eventbuyinapp, TableData.TableData_Eventbuyinapp> <>9__255_323;
        static /*0xb10*/ System.Func<TableData.TableData_Eventquest, int> <>9__255_324;
        static /*0xb18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventquest>, int> <>9__255_325;
        static /*0xb20*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventquest>, System.Collections.Generic.List<TableData.TableData_Eventquest>> <>9__255_326;
        static /*0xb28*/ System.Func<TableData.TableData_Eventquestgroup, string> <>9__255_327;
        static /*0xb30*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup>, string> <>9__255_328;
        static /*0xb38*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup>, System.Collections.Generic.List<TableData.TableData_Eventquestgroup>> <>9__255_329;
        static /*0xb40*/ System.Func<TableData.TableData_Eventquestgroup, int> <>9__255_330;
        static /*0xb48*/ System.Func<TableData.TableData_Eventquestgroup, TableData.TableData_Eventquestgroup> <>9__255_331;
        static /*0xb50*/ System.Func<TableData.TableData_Eventroulette, int> <>9__255_332;
        static /*0xb58*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventroulette>, int> <>9__255_333;
        static /*0xb60*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventroulette>, System.Collections.Generic.List<TableData.TableData_Eventroulette>> <>9__255_334;
        static /*0xb68*/ System.Func<TableData.TableData_Eventboss, int> <>9__255_335;
        static /*0xb70*/ System.Func<TableData.TableData_Eventboss, TableData.TableData_Eventboss> <>9__255_336;
        static /*0xb78*/ System.Func<TableData.TableData_Eventboss, int> <>9__255_337;
        static /*0xb80*/ System.Func<TableData.TableData_Eventboss, TableData.TableData_Eventboss> <>9__255_338;
        static /*0xb88*/ System.Func<TableData.TableData_Eventbossreward, int> <>9__255_339;
        static /*0xb90*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventbossreward>, int> <>9__255_340;
        static /*0xb98*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventbossreward>, System.Collections.Generic.List<TableData.TableData_Eventbossreward>> <>9__255_341;
        static /*0xba0*/ System.Func<TableData.TableData_Eventcomplete, int> <>9__255_342;
        static /*0xba8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcomplete>, int> <>9__255_343;
        static /*0xbb0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcomplete>, System.Collections.Generic.List<TableData.TableData_Eventcomplete>> <>9__255_344;
        static /*0xbb8*/ System.Func<TableData.TableData_Eventcompletemission, int> <>9__255_345;
        static /*0xbc0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission>, int> <>9__255_346;
        static /*0xbc8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission>, System.Collections.Generic.List<TableData.TableData_Eventcompletemission>> <>9__255_347;
        static /*0xbd0*/ System.Func<TableData.TableData_Config, string> <>9__255_348;
        static /*0xbd8*/ System.Func<TableData.TableData_Config, string> <>9__255_349;
        static /*0xbe0*/ System.Func<TableData.TableData_Config, bool> <>9__255_350;
        static /*0xbe8*/ System.Func<TableData.TableData_Config, string> <>9__255_351;
        static /*0xbf0*/ System.Func<TableData.TableData_Config, int> <>9__255_352;
        static /*0xbf8*/ System.Func<TableData.TableData_Guildlevel, int> <>9__255_353;
        static /*0xc00*/ System.Func<TableData.TableData_Guildlevel, TableData.TableData_Guildlevel> <>9__255_354;
        static /*0xc08*/ System.Func<TableData.TableData_Guildhuntingreward, int> <>9__255_355;
        static /*0xc10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward>, int> <>9__255_356;
        static /*0xc18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward>, System.Collections.Generic.List<TableData.TableData_Guildhuntingreward>> <>9__255_357;
        static /*0xc20*/ System.Func<TableData.TableData_Guildwar, string> <>9__255_358;
        static /*0xc28*/ System.Func<TableData.TableData_Guildwar, string> <>9__255_359;
        static /*0xc30*/ System.Func<TableData.TableData_Guildwarorganize, PTShare.Define.GuildWarPosition> <>9__255_360;
        static /*0xc38*/ System.Func<System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize>, PTShare.Define.GuildWarPosition> <>9__255_361;
        static /*0xc40*/ System.Func<System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize>, System.Collections.Generic.List<TableData.TableData_Guildwarorganize>> <>9__255_362;
        static /*0xc48*/ System.Func<TableData.TableData_Guildwarrank, int> <>9__255_363;
        static /*0xc50*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildwarrank>, int> <>9__255_364;
        static /*0xc58*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Guildwarrank>, System.Collections.Generic.List<TableData.TableData_Guildwarrank>> <>9__255_365;
        static /*0xc60*/ System.Func<TableData.TableData_Guildwarrankreward, string> <>9__255_366;
        static /*0xc68*/ System.Func<TableData.TableData_Guildwarrankreward, TableData.TableData_Guildwarrankreward> <>9__255_367;
        static /*0xc70*/ System.Func<TableData.TableData_Guildwartactic, int> <>9__255_368;
        static /*0xc78*/ System.Func<TableData.TableData_Guildwartactic, TableData.TableData_Guildwartactic> <>9__255_369;
        static /*0xc80*/ System.Func<TableData.TableData_Vip, int> <>9__255_370;
        static /*0xc88*/ System.Func<TableData.TableData_Vip, TableData.TableData_Vip> <>9__255_371;
        static /*0xc90*/ System.Func<TableData.TableData_Bountyquest, int> <>9__255_372;
        static /*0xc98*/ System.Func<TableData.TableData_Bountyquest, TableData.TableData_Bountyquest> <>9__255_373;
        static /*0xca0*/ System.Func<TableData.TableData_Bountylv, int> <>9__255_374;
        static /*0xca8*/ System.Func<TableData.TableData_Bountylv, TableData.TableData_Bountylv> <>9__255_375;
        static /*0xcb0*/ System.Func<TableData.TableData_Dungeon, int> <>9__255_376;
        static /*0xcb8*/ System.Func<TableData.TableData_Dungeon, TableData.TableData_Dungeon> <>9__255_377;
        static /*0xcc0*/ System.Func<TableData.TableData_Dungeongroup, int> <>9__255_378;
        static /*0xcc8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeongroup>, int> <>9__255_379;
        static /*0xcd0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeongroup>, System.Collections.Generic.List<TableData.TableData_Dungeongroup>> <>9__255_380;
        static /*0xcd8*/ System.Func<TableData.TableData_Dungeonmap, int> <>9__255_381;
        static /*0xce0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonmap>, int> <>9__255_382;
        static /*0xce8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonmap>, System.Collections.Generic.List<TableData.TableData_Dungeonmap>> <>9__255_383;
        static /*0xcf0*/ System.Func<TableData.TableData_Dungeontile, int> <>9__255_384;
        static /*0xcf8*/ System.Func<TableData.TableData_Dungeontile, TableData.TableData_Dungeontile> <>9__255_385;
        static /*0xd00*/ System.Func<TableData.TableData_Dungeonmateequip, int> <>9__255_386;
        static /*0xd08*/ System.Func<TableData.TableData_Dungeonmateequip, TableData.TableData_Dungeonmateequip> <>9__255_387;
        static /*0xd10*/ System.Func<TableData.TableData_Dungeondialog, int> <>9__255_388;
        static /*0xd18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialog>, int> <>9__255_389;
        static /*0xd20*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialog>, System.Collections.Generic.List<TableData.TableData_Dungeondialog>> <>9__255_390;
        static /*0xd28*/ System.Func<TableData.TableData_Dungeonreward, int> <>9__255_391;
        static /*0xd30*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonreward>, int> <>9__255_392;
        static /*0xd38*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeonreward>, System.Collections.Generic.List<TableData.TableData_Dungeonreward>> <>9__255_393;
        static /*0xd40*/ System.Func<TableData.TableData_Dungeondialogdirection, int> <>9__255_394;
        static /*0xd48*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection>, int> <>9__255_395;
        static /*0xd50*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection>, System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection>> <>9__255_396;
        static /*0xd58*/ System.Func<TableData.TableData_Runlife, int> <>9__255_397;
        static /*0xd60*/ System.Func<TableData.TableData_Runlife, TableData.TableData_Runlife> <>9__255_398;
        static /*0xd68*/ System.Func<TableData.TableData_Runreward, int> <>9__255_399;
        static /*0xd70*/ System.Func<TableData.TableData_Runreward, TableData.TableData_Runreward> <>9__255_400;
        static /*0xd78*/ System.Predicate<TableData.TableData_Relation> <>9__255_401;
        static /*0xd80*/ System.Func<TableData.TableData_Worldbossstep, int> <>9__255_402;
        static /*0xd88*/ System.Func<TableData.TableData_Worldbossstep, TableData.TableData_Worldbossstep> <>9__255_403;
        static /*0xd90*/ System.Func<TableData.TableData_Worldbossmission, int> <>9__255_404;
        static /*0xd98*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Worldbossmission>, int> <>9__255_405;
        static /*0xda0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Worldbossmission>, System.Collections.Generic.List<TableData.TableData_Worldbossmission>> <>9__255_406;
        static /*0xda8*/ System.Func<TableData.TableData_Pvenoblity, int> <>9__255_407;
        static /*0xdb0*/ System.Func<TableData.TableData_Pvenoblity, TableData.TableData_Pvenoblity> <>9__255_408;
        static /*0xdb8*/ System.Func<TableData.TableData_Pvechallenge, int> <>9__255_409;
        static /*0xdc0*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Pvechallenge>, int> <>9__255_410;
        static /*0xdc8*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Pvechallenge>, System.Collections.Generic.List<TableData.TableData_Pvechallenge>> <>9__255_411;
        static /*0xdd0*/ System.Func<TableData.TableData_Pveclearreward, int> <>9__255_412;
        static /*0xdd8*/ System.Func<TableData.TableData_Pveclearreward, TableData.TableData_Pveclearreward> <>9__255_413;
        static /*0xde0*/ System.Func<TableData.TableData_Housing, string> <>9__255_414;
        static /*0xde8*/ System.Func<TableData.TableData_Housing, string> <>9__255_415;
        static /*0xdf0*/ System.Func<TableData.TableData_Housingfloor, int> <>9__255_416;
        static /*0xdf8*/ System.Func<TableData.TableData_Housingfloor, TableData.TableData_Housingfloor> <>9__255_417;
        static /*0xe00*/ System.Func<TableData.TableData_Housingfloor, int> <>9__255_418;
        static /*0xe08*/ System.Func<TableData.TableData_Housinggacha, int> <>9__255_419;
        static /*0xe10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Housinggacha>, int> <>9__255_420;
        static /*0xe18*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Housinggacha>, System.Collections.Generic.List<TableData.TableData_Housinggacha>> <>9__255_421;
        static /*0xe20*/ System.Func<TableData.TableData_Housinggacha, int> <>9__255_422;
        static /*0xe28*/ System.Func<TableData.TableData_Furniture, int> <>9__255_423;
        static /*0xe30*/ System.Func<TableData.TableData_Furniture, TableData.TableData_Furniture> <>9__255_424;
        static /*0xe38*/ System.Func<TableData.TableData_Furnitureleveltypelist, string> <>9__255_425;
        static /*0xe40*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, string> <>9__255_426;
        static /*0xe48*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> <>9__255_427;
        static /*0xe50*/ System.Func<TableData.TableData_Furnitureleveltypelist, string> <>9__255_428;
        static /*0xe58*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, string> <>9__255_429;
        static /*0xe60*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist>, System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist>> <>9__255_430;
        static /*0xe68*/ System.Func<TableData.TableData_Furnitureeffecttype, string> <>9__255_431;
        static /*0xe70*/ System.Func<TableData.TableData_Furnitureeffecttype, TableData.TableData_Furnitureeffecttype> <>9__255_432;
        static /*0xe78*/ System.Func<TableData.TableData_Furnitureshoplist, int> <>9__255_433;
        static /*0xe80*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist>, int> <>9__255_434;
        static /*0xe88*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist>, System.Collections.Generic.List<TableData.TableData_Furnitureshoplist>> <>9__255_435;
        static /*0xe90*/ System.Func<TableData.TableData_Furnitureshoplist, int> <>9__255_436;
        static /*0xe98*/ System.Func<TableData.TableData_Furnitureshoplist, TableData.TableData_Furnitureshoplist> <>9__255_437;
        static /*0xea0*/ System.Func<TableData.TableData_Housingfloorpattern, string> <>9__255_438;
        static /*0xea8*/ System.Func<TableData.TableData_Housingfloorpattern, TableData.TableData_Housingfloorpattern> <>9__255_439;
        static /*0xeb0*/ System.Func<TableData.TableData_Furniturecontentseffect, int> <>9__255_440;
        static /*0xeb8*/ System.Func<TableData.TableData_Furniturecontentseffect, TableData.TableData_Furniturecontentseffect> <>9__255_441;
        static /*0xec0*/ System.Func<TableData.TableData_Furnitureheroeffect, int> <>9__255_442;
        static /*0xec8*/ System.Func<TableData.TableData_Furnitureheroeffect, TableData.TableData_Furnitureheroeffect> <>9__255_443;
        static /*0xed0*/ System.Func<TableData.TableData_Furniturelevelup, int> <>9__255_444;
        static /*0xed8*/ System.Func<TableData.TableData_Furniturelevelup, TableData.TableData_Furniturelevelup> <>9__255_445;
        static /*0xee0*/ System.Func<TableData.TableData_Furnitureexp, string> <>9__255_446;
        static /*0xee8*/ System.Func<TableData.TableData_Furnitureexp, TableData.TableData_Furnitureexp> <>9__255_447;
        static /*0xef0*/ System.Func<TableData.TableData_Abilitypercent, int> <>9__255_448;
        static /*0xef8*/ System.Func<TableData.TableData_Abilitypercent, TableData.TableData_Abilitypercent> <>9__255_449;
        static /*0xf00*/ System.Func<TableData.TableData_Abilityoptionvalue, string> <>9__255_450;
        static /*0xf08*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue>, string> <>9__255_451;
        static /*0xf10*/ System.Func<System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue>, System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue>> <>9__255_452;
        static /*0xf18*/ System.Func<TableData.TableData_Abilityoptionvalue, int> <>9__255_453;
        static /*0xf20*/ System.Func<TableData.TableData_Abilityoptionvalue, TableData.TableData_Abilityoptionvalue> <>9__255_454;
        static /*0xf28*/ System.Func<TableData.TableData_Abilityreset, string> <>9__255_455;
        static /*0xf30*/ System.Func<TableData.TableData_Abilityreset, TableData.TableData_Abilityreset> <>9__255_456;

        static /*0xcc4048*/ <>c();
        /*0xcc40a8*/ <>c();
        /*0xcc40b0*/ string <Init>b__255_0(TableData.TableData_Arenaconfig k);
        /*0xcc40c8*/ string <Init>b__255_1(TableData.TableData_Arenaconfig v);
        /*0xcc40e0*/ int <Init>b__255_2(TableData.TableData_Buff k);
        /*0xcc40f8*/ TableData.TableData_Buff <Init>b__255_3(TableData.TableData_Buff v);
        /*0xcc4100*/ int <Init>b__255_4(TableData.TableData_Buff k);
        /*0xcc4118*/ Battle.BuffEffectType <Init>b__255_5(TableData.TableData_Buff v);
        /*0xcc41a0*/ int <Init>b__255_6(TableData.TableData_Buff k);
        /*0xcc41b8*/ Battle.BuffEffectType <Init>b__255_7(TableData.TableData_Buff v);
        /*0xcc4240*/ int <Init>b__255_8(TableData.TableData_Buff k);
        /*0xcc4258*/ Battle.BuffEffectType <Init>b__255_9(TableData.TableData_Buff v);
        /*0xcc42e0*/ int <Init>b__255_10(TableData.TableData_Buff k);
        /*0xcc42f8*/ Battle.BuffOriginType <Init>b__255_11(TableData.TableData_Buff v);
        /*0xcc4380*/ int <Init>b__255_12(TableData.TableData_Buff k);
        /*0xcc4398*/ Battle.BuffType <Init>b__255_13(TableData.TableData_Buff v);
        /*0xcc4420*/ int <Init>b__255_14(TableData.TableData_Buff k);
        /*0xcc4438*/ Battle.ShieldType <Init>b__255_15(TableData.TableData_Buff v);
        /*0xcc44c0*/ int <Init>b__255_16(TableData.TableData_Buff k);
        /*0xcc44d8*/ Battle.CharacterStat.StatType <Init>b__255_17(TableData.TableData_Buff v);
        /*0xcc4560*/ int <Init>b__255_18(TableData.TableData_Skillbase k);
        /*0xcc4578*/ TableData.TableData_Skillbase <Init>b__255_19(TableData.TableData_Skillbase v);
        /*0xcc4580*/ int <Init>b__255_20(TableData.TableData_Skillbase k);
        /*0xcc4598*/ Battle.SkillType <Init>b__255_21(TableData.TableData_Skillbase v);
        /*0xcc4620*/ int <Init>b__255_22(TableData.TableData_Skillbase k);
        /*0xcc4638*/ Battle.ActiveType <Init>b__255_23(TableData.TableData_Skillbase v);
        /*0xcc46c0*/ int <Init>b__255_24(TableData.TableData_Skillbase k);
        /*0xcc46d8*/ Battle.ColliderType <Init>b__255_25(TableData.TableData_Skillbase v);
        /*0xcc4760*/ int <Init>b__255_26(TableData.TableData_Skillbase k);
        /*0xcc4778*/ Battle.ColliderType <Init>b__255_27(TableData.TableData_Skillbase v);
        /*0xcc4800*/ int <Init>b__255_28(TableData.TableData_Skillbase k);
        /*0xcc4818*/ Battle.AttackType <Init>b__255_29(TableData.TableData_Skillbase v);
        /*0xcc48a0*/ int <Init>b__255_30(TableData.TableData_Skillbase k);
        /*0xcc48b8*/ Battle.PassiveConditionType <Init>b__255_31(TableData.TableData_Skillbase v);
        /*0xcc4940*/ int <Init>b__255_32(TableData.TableData_Skillbase g);
        /*0xcc4958*/ int <Init>b__255_33(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc4a00*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_34(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc4b34*/ bool <Init>b__255_457(TableData.TableData_Skillbase w);
        /*0xcc4b60*/ int <Init>b__255_35(TableData.TableData_Skillbase g);
        /*0xcc4b78*/ int <Init>b__255_36(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc4c20*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_37(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc4d54*/ bool <Init>b__255_458(TableData.TableData_Skillbase w);
        /*0xcc4d80*/ int <Init>b__255_38(TableData.TableData_Skillbase g);
        /*0xcc4d98*/ int <Init>b__255_39(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc4e40*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_40(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc4f74*/ bool <Init>b__255_459(TableData.TableData_Skillbase w);
        /*0xcc501c*/ int <Init>b__255_41(TableData.TableData_Skillbase g);
        /*0xcc5034*/ int <Init>b__255_42(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc50dc*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_43(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc5128*/ int <Init>b__255_44(TableData.TableData_Skillbase g);
        /*0xcc5140*/ int <Init>b__255_45(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc51e8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Skillbase>> <Init>b__255_46(System.Linq.IGrouping<int, TableData.TableData_Skillbase> v);
        /*0xcc5498*/ int <Init>b__255_460(TableData.TableData_Skillbase g);
        /*0xcc54b0*/ int <Init>b__255_461(System.Linq.IGrouping<int, TableData.TableData_Skillbase> k);
        /*0xcc5558*/ System.Collections.Generic.List<TableData.TableData_Skillbase> <Init>b__255_462(System.Linq.IGrouping<int, TableData.TableData_Skillbase> w);
        /*0xcc55a4*/ int <Init>b__255_47(TableData.TableData_Skillfx g);
        /*0xcc55bc*/ int <Init>b__255_48(System.Linq.IGrouping<int, TableData.TableData_Skillfx> k);
        /*0xcc5664*/ System.Collections.Generic.List<TableData.TableData_Skillfx> <Init>b__255_49(System.Linq.IGrouping<int, TableData.TableData_Skillfx> v);
        /*0xcc56b0*/ System.ValueTuple<int, int> <Init>b__255_50(TableData.TableData_Skillfx k);
        /*0xcc5720*/ TableData.TableData_Skillfx <Init>b__255_51(TableData.TableData_Skillfx v);
        /*0xcc5728*/ System.ValueTuple<int, int> <Init>b__255_52(TableData.TableData_Skillfx k);
        /*0xcc5798*/ Battle.SkillEnumGroup <Init>b__255_53(TableData.TableData_Skillfx v);
        /*0xcc5a60*/ int <Init>b__255_54(TableData.TableData_Skillfx x, TableData.TableData_Skillfx y);
        /*0xcc5a8c*/ Battle.SkillExtraID <Init>b__255_55(TableData.TableData_Skillextra k);
        /*0xcc5aa4*/ TableData.TableData_Skillextra <Init>b__255_56(TableData.TableData_Skillextra v);
        /*0xcc5aac*/ int <Init>b__255_57(TableData.TableData_Skilllv g);
        /*0xcc5ac4*/ int <Init>b__255_58(System.Linq.IGrouping<int, TableData.TableData_Skilllv> k);
        /*0xcc5b6c*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Skilllv> <Init>b__255_59(System.Linq.IGrouping<int, TableData.TableData_Skilllv> v);
        /*0xcc5d38*/ int <Init>b__255_463(TableData.TableData_Skilllv k);
        /*0xcc5d50*/ TableData.TableData_Skilllv <Init>b__255_464(TableData.TableData_Skilllv w);
        /*0xcc5d58*/ bool <Init>b__255_465(TableData.TableData_Skilllv w);
        /*0xcc5d78*/ System.ValueTuple<int, int> <Init>b__255_466(TableData.TableData_Skilllv k);
        /*0xcc5de8*/ TableData.TableData_Skilllv <Init>b__255_467(TableData.TableData_Skilllv v);
        /*0xcc5df0*/ bool <Init>b__255_468(TableData.TableData_Skilllv w);
        /*0xcc5e10*/ System.ValueTuple<int, int> <Init>b__255_469(TableData.TableData_Skilllv k);
        /*0xcc5e80*/ TableData.TableData_Skilllv <Init>b__255_470(TableData.TableData_Skilllv v);
        /*0xcc5e88*/ bool <Init>b__255_471(TableData.TableData_Skilllv w);
        /*0xcc5ea8*/ System.ValueTuple<int, int> <Init>b__255_472(TableData.TableData_Skilllv k);
        /*0xcc5f18*/ TableData.TableData_Skilllv <Init>b__255_473(TableData.TableData_Skilllv v);
        /*0xcc5f20*/ bool <Init>b__255_474(TableData.TableData_Skilllv w);
        /*0xcc5f40*/ System.ValueTuple<int, int> <Init>b__255_475(TableData.TableData_Skilllv k);
        /*0xcc5fb0*/ TableData.TableData_Skilllv <Init>b__255_476(TableData.TableData_Skilllv v);
        /*0xcc5fb8*/ System.ValueTuple<int, int> <Init>b__255_60(TableData.TableData_Skilldesc g);
        /*0xcc6024*/ System.ValueTuple<int, int> <Init>b__255_61(System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc> k);
        /*0xcc60cc*/ System.Collections.Generic.List<TableData.TableData_Skilldesc> <Init>b__255_62(System.Linq.IGrouping<System.ValueTuple<int, int>, TableData.TableData_Skilldesc> v);
        /*0xcc6200*/ int <Init>b__255_477(TableData.TableData_Skilldesc o);
        /*0xcc6218*/ int <Init>b__255_63(TableData.TableData_Enhanceequip k);
        /*0xcc6230*/ TableData.TableData_Enhanceequip <Init>b__255_64(TableData.TableData_Enhanceequip v);
        /*0xcc6238*/ int <Init>b__255_65(TableData.TableData_Equipment k);
        /*0xcc6250*/ TableData.TableData_Equipment <Init>b__255_66(TableData.TableData_Equipment v);
        /*0xcc6258*/ bool <Init>b__255_67(TableData.TableData_Equipment w);
        /*0xcc62ec*/ System.ValueTuple<string, int> <Init>b__255_68(TableData.TableData_Equipment k);
        /*0xcc635c*/ TableData.TableData_Equipment <Init>b__255_69(TableData.TableData_Equipment v);
        /*0xcc6364*/ System.ValueTuple<PTShare.Define.EquipParts, int, string> <Init>b__255_70(TableData.TableData_Equipment k);
        /*0xcc642c*/ TableData.TableData_Equipment <Init>b__255_71(TableData.TableData_Equipment v);
        /*0xcc6434*/ string <Init>b__255_72(TableData.TableData_Equipment g);
        /*0xcc644c*/ string <Init>b__255_73(System.Linq.IGrouping<string, TableData.TableData_Equipment> k);
        /*0xcc64f4*/ System.Collections.Generic.List<TableData.TableData_Equipment> <Init>b__255_74(System.Linq.IGrouping<string, TableData.TableData_Equipment> v);
        /*0xcc6540*/ int <Init>b__255_75(TableData.TableData_Equipment k);
        /*0xcc6558*/ int <Init>b__255_76(TableData.TableData_Equipment v);
        /*0xcc65e0*/ int <Init>b__255_77(TableData.TableData_Advanceequip g);
        /*0xcc65f8*/ int <Init>b__255_78(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> k);
        /*0xcc66a0*/ System.Collections.Generic.List<TableData.TableData_Advanceequip> <Init>b__255_79(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> v);
        /*0xcc66ec*/ int <Init>b__255_80(TableData.TableData_Advanceequip g);
        /*0xcc6704*/ int <Init>b__255_81(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> k);
        /*0xcc67ac*/ System.Collections.Generic.Dictionary<int, string> <Init>b__255_82(System.Linq.IGrouping<int, TableData.TableData_Advanceequip> v);
        /*0xcc6978*/ int <Init>b__255_478(TableData.TableData_Advanceequip k);
        /*0xcc6990*/ string <Init>b__255_479(TableData.TableData_Advanceequip w);
        /*0xcc69a8*/ bool <Init>b__255_83(TableData.TableData_Unitbase x);
        /*0xcc6ac4*/ int <Init>b__255_84(TableData.TableData_Unitbase k);
        /*0xcc6adc*/ TableData.TableData_Unitbase <Init>b__255_85(TableData.TableData_Unitbase v);
        /*0xcc6ae4*/ int <Init>b__255_86(TableData.TableData_Unitbase k);
        /*0xcc6afc*/ Battle.ColliderType <Init>b__255_87(TableData.TableData_Unitbase v);
        /*0xcc6b84*/ int <Init>b__255_88(TableData.TableData_Unitbase k);
        /*0xcc6b9c*/ Battle.AttackType <Init>b__255_89(TableData.TableData_Unitbase v);
        /*0xcc6c24*/ int <Init>b__255_90(TableData.TableData_Unitbase k);
        /*0xcc6c3c*/ UnitClassType <Init>b__255_91(TableData.TableData_Unitbase v);
        /*0xcc6cc4*/ int <Init>b__255_92(TableData.TableData_Unitbase g);
        /*0xcc6cdc*/ int <Init>b__255_93(System.Linq.IGrouping<int, TableData.TableData_Unitbase> k);
        /*0xcc6d84*/ System.Collections.Generic.List<TableData.TableData_Unitbase> <Init>b__255_94(System.Linq.IGrouping<int, TableData.TableData_Unitbase> v);
        /*0xcc6dd0*/ bool <Init>b__255_95(TableData.TableData_Unitbase w);
        /*0xcc6e7c*/ int <Init>b__255_96(TableData.TableData_Unitbase g);
        /*0xcc6e94*/ int <Init>b__255_97(System.Linq.IGrouping<int, TableData.TableData_Unitbase> k);
        /*0xcc6f3c*/ System.Collections.Generic.List<TableData.TableData_Unitbase> <Init>b__255_98(System.Linq.IGrouping<int, TableData.TableData_Unitbase> v);
        /*0xcc6f88*/ int <Init>b__255_99(TableData.TableData_Unitgrade g);
        /*0xcc6fa0*/ int <Init>b__255_100(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> k);
        /*0xcc7048*/ System.Collections.Generic.List<TableData.TableData_Unitgrade> <Init>b__255_101(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> v);
        /*0xcc7094*/ int <Init>b__255_102(TableData.TableData_Unitgrade g);
        /*0xcc70ac*/ int <Init>b__255_103(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> k);
        /*0xcc7154*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unitgrade> <Init>b__255_104(System.Linq.IGrouping<int, TableData.TableData_Unitgrade> v);
        /*0xcc7320*/ int <Init>b__255_480(TableData.TableData_Unitgrade k);
        /*0xcc7338*/ TableData.TableData_Unitgrade <Init>b__255_481(TableData.TableData_Unitgrade w);
        /*0xcc7340*/ int <Init>b__255_105(TableData.TableData_Unitgradelv k);
        /*0xcc7358*/ TableData.TableData_Unitgradelv <Init>b__255_106(TableData.TableData_Unitgradelv v);
        /*0xcc7360*/ int <Init>b__255_107(TableData.TableData_Unitlv k);
        /*0xcc7378*/ TableData.TableData_Unitlv <Init>b__255_108(TableData.TableData_Unitlv v);
        /*0xcc7380*/ int <Init>b__255_109(TableData.TableData_Unittier g);
        /*0xcc7398*/ int <Init>b__255_110(System.Linq.IGrouping<int, TableData.TableData_Unittier> k);
        /*0xcc7440*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Unittier> <Init>b__255_111(System.Linq.IGrouping<int, TableData.TableData_Unittier> v);
        /*0xcc760c*/ int <Init>b__255_482(TableData.TableData_Unittier k);
        /*0xcc7624*/ TableData.TableData_Unittier <Init>b__255_483(TableData.TableData_Unittier w);
        /*0xcc762c*/ int <Init>b__255_112(TableData.TableData_Unittierlv k);
        /*0xcc7644*/ TableData.TableData_Unittierlv <Init>b__255_113(TableData.TableData_Unittierlv v);
        /*0xcc764c*/ bool <Init>b__255_114(TableData.TableData_Skinbasic x);
        /*0xcc7678*/ System.ValueTuple<int, string> <Init>b__255_115(TableData.TableData_Voice k);
        /*0xcc76e8*/ TableData.TableData_Voice <Init>b__255_116(TableData.TableData_Voice v);
        /*0xcc76f0*/ System.ValueTuple<int, int> <Init>b__255_117(TableData.TableData_Artifact k);
        /*0xcc775c*/ TableData.TableData_Artifact <Init>b__255_118(TableData.TableData_Artifact v);
        /*0xcc7764*/ System.ValueTuple<int, int> <Init>b__255_119(TableData.TableData_Artifact k);
        /*0xcc77d0*/ TableData.TableData_Artifact <Init>b__255_120(TableData.TableData_Artifact v);
        /*0xcc77d8*/ System.ValueTuple<int, int> <Init>b__255_121(TableData.TableData_Artifact k);
        /*0xcc7844*/ Battle.ColliderType <Init>b__255_122(TableData.TableData_Artifact v);
        /*0xcc78cc*/ int <Init>b__255_123(TableData.TableData_Artifact x);
        /*0xcc78e4*/ int <Init>b__255_124(System.Linq.IGrouping<int, TableData.TableData_Artifact> k);
        /*0xcc798c*/ System.Collections.Generic.List<TableData.TableData_Artifact> <Init>b__255_125(System.Linq.IGrouping<int, TableData.TableData_Artifact> v);
        /*0xcc79d8*/ int <Init>b__255_126(TableData.TableData_Quest k);
        /*0xcc79f0*/ TableData.TableData_Quest <Init>b__255_127(TableData.TableData_Quest v);
        /*0xcc79f8*/ bool <Init>b__255_128(TableData.TableData_Quest w);
        /*0xcc7b08*/ int <Init>b__255_129(TableData.TableData_Quest s);
        /*0xcc7b20*/ bool <Init>b__255_130(TableData.TableData_Quest w);
        /*0xcc7c34*/ int <Init>b__255_131(TableData.TableData_Quest s);
        /*0xcc7c4c*/ string <Init>b__255_132(TableData.TableData_Quest g);
        /*0xcc7c64*/ QuestContentType <Init>b__255_133(System.Linq.IGrouping<string, TableData.TableData_Quest> k);
        /*0xcc7d64*/ System.Collections.Generic.List<TableData.TableData_Quest> <Init>b__255_134(System.Linq.IGrouping<string, TableData.TableData_Quest> v);
        /*0xcc7db0*/ System.ValueTuple<QuestContentType, QuestGroupType> <Init>b__255_135(TableData.TableData_Quest g);
        /*0xcc7ea0*/ System.ValueTuple<QuestContentType, QuestGroupType> <Init>b__255_136(System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest> k);
        /*0xcc7f48*/ System.Collections.Generic.List<TableData.TableData_Quest> <Init>b__255_137(System.Linq.IGrouping<System.ValueTuple<QuestContentType, QuestGroupType>, TableData.TableData_Quest> v);
        /*0xcc7f94*/ string <Init>b__255_138(TableData.TableData_Quest k);
        /*0xcc7fac*/ TableData.TableData_Quest <Init>b__255_139(TableData.TableData_Quest v);
        /*0xcc7fb4*/ string <Init>b__255_140(TableData.TableData_Questgroup g);
        /*0xcc7fcc*/ string <Init>b__255_141(System.Linq.IGrouping<string, TableData.TableData_Questgroup> k);
        /*0xcc8074*/ System.Collections.Generic.List<TableData.TableData_Questgroup> <Init>b__255_142(System.Linq.IGrouping<string, TableData.TableData_Questgroup> v);
        /*0xcc80c0*/ string <Init>b__255_143(TableData.TableData_Questpropertypoint k);
        /*0xcc80d8*/ TableData.TableData_Questpropertypoint <Init>b__255_144(TableData.TableData_Questpropertypoint v);
        /*0xcc80e0*/ string <Init>b__255_145(TableData.TableData_Questchapterclear k);
        /*0xcc80f8*/ TableData.TableData_Questchapterclear <Init>b__255_146(TableData.TableData_Questchapterclear v);
        /*0xcc8100*/ string <Init>b__255_147(TableData.TableData_Queststageclear k);
        /*0xcc8118*/ TableData.TableData_Queststageclear <Init>b__255_148(TableData.TableData_Queststageclear v);
        /*0xcc8120*/ string <Init>b__255_149(TableData.TableData_Questgacha k);
        /*0xcc8138*/ TableData.TableData_Questgacha <Init>b__255_150(TableData.TableData_Questgacha v);
        /*0xcc8140*/ string <Init>b__255_151(TableData.TableData_Queststageidle k);
        /*0xcc8158*/ TableData.TableData_Queststageidle <Init>b__255_152(TableData.TableData_Queststageidle v);
        /*0xcc8160*/ string <Init>b__255_153(TableData.TableData_Queststagetry k);
        /*0xcc8178*/ TableData.TableData_Queststagetry <Init>b__255_154(TableData.TableData_Queststagetry v);
        /*0xcc8180*/ string <Init>b__255_155(TableData.TableData_Questheroupgrade k);
        /*0xcc8198*/ TableData.TableData_Questheroupgrade <Init>b__255_156(TableData.TableData_Questheroupgrade v);
        /*0xcc81a0*/ string <Init>b__255_157(TableData.TableData_Questequipupgrade k);
        /*0xcc81b8*/ TableData.TableData_Questequipupgrade <Init>b__255_158(TableData.TableData_Questequipupgrade v);
        /*0xcc81c0*/ string <Init>b__255_159(TableData.TableData_Questfriend k);
        /*0xcc81d8*/ TableData.TableData_Questfriend <Init>b__255_160(TableData.TableData_Questfriend v);
        /*0xcc81e0*/ string <Init>b__255_161(TableData.TableData_Questprizeboard k);
        /*0xcc81f8*/ TableData.TableData_Questprizeboard <Init>b__255_162(TableData.TableData_Questprizeboard v);
        /*0xcc8200*/ string <Init>b__255_163(TableData.TableData_Questbuy k);
        /*0xcc8218*/ TableData.TableData_Questbuy <Init>b__255_164(TableData.TableData_Questbuy v);
        /*0xcc8220*/ string <Init>b__255_165(TableData.TableData_Questarena k);
        /*0xcc8238*/ TableData.TableData_Questarena <Init>b__255_166(TableData.TableData_Questarena v);
        /*0xcc8240*/ string <Init>b__255_167(TableData.TableData_Questheroget k);
        /*0xcc8258*/ TableData.TableData_Questheroget <Init>b__255_168(TableData.TableData_Questheroget v);
        /*0xcc8260*/ string <Init>b__255_169(TableData.TableData_Questlevel k);
        /*0xcc8278*/ TableData.TableData_Questlevel <Init>b__255_170(TableData.TableData_Questlevel v);
        /*0xcc8280*/ string <Init>b__255_171(TableData.TableData_Questgetitem k);
        /*0xcc8298*/ TableData.TableData_Questgetitem <Init>b__255_172(TableData.TableData_Questgetitem v);
        /*0xcc82a0*/ string <Init>b__255_173(TableData.TableData_Questmove k);
        /*0xcc82b8*/ TableData.TableData_Questmove <Init>b__255_174(TableData.TableData_Questmove v);
        /*0xcc82c0*/ string <Init>b__255_175(TableData.TableData_Questlabyrinth k);
        /*0xcc82d8*/ TableData.TableData_Questlabyrinth <Init>b__255_176(TableData.TableData_Questlabyrinth v);
        /*0xcc82e0*/ string <Init>b__255_177(TableData.TableData_Questresonance k);
        /*0xcc82f8*/ TableData.TableData_Questresonance <Init>b__255_178(TableData.TableData_Questresonance v);
        /*0xcc8300*/ string <Init>b__255_179(TableData.TableData_Questspirittowerclear k);
        /*0xcc8318*/ TableData.TableData_Questspirittowerclear <Init>b__255_180(TableData.TableData_Questspirittowerclear v);
        /*0xcc8320*/ int <Init>b__255_181(TableData.TableData_Gacha g);
        /*0xcc8338*/ int <Init>b__255_182(System.Linq.IGrouping<int, TableData.TableData_Gacha> k);
        /*0xcc83e0*/ System.Collections.Generic.List<TableData.TableData_Gacha> <Init>b__255_183(System.Linq.IGrouping<int, TableData.TableData_Gacha> v);
        /*0xcc842c*/ string <Init>b__255_184(TableData.TableData_Gacha g);
        /*0xcc8444*/ GachaFactionType <Init>b__255_185(System.Linq.IGrouping<string, TableData.TableData_Gacha> k);
        /*0xcc8544*/ System.Collections.Generic.List<TableData.TableData_Gacha> <Init>b__255_186(System.Linq.IGrouping<string, TableData.TableData_Gacha> v);
        /*0xcc8590*/ int <Init>b__255_187(TableData.TableData_Gachabonus g);
        /*0xcc85a8*/ int <Init>b__255_188(System.Linq.IGrouping<int, TableData.TableData_Gachabonus> k);
        /*0xcc8650*/ System.Collections.Generic.List<TableData.TableData_Gachabonus> <Init>b__255_189(System.Linq.IGrouping<int, TableData.TableData_Gachabonus> v);
        /*0xcc869c*/ int <Init>b__255_190(TableData.TableData_Gachadroppattern k);
        /*0xcc86b4*/ TableData.TableData_Gachadroppattern <Init>b__255_191(TableData.TableData_Gachadroppattern v);
        /*0xcc86bc*/ int <Init>b__255_192(TableData.TableData_Highdroprate k);
        /*0xcc86d4*/ TableData.TableData_Highdroprate <Init>b__255_193(TableData.TableData_Highdroprate v);
        /*0xcc86dc*/ int <Init>b__255_194(TableData.TableData_Chapter k);
        /*0xcc86f4*/ TableData.TableData_Chapter <Init>b__255_195(TableData.TableData_Chapter v);
        /*0xcc86fc*/ int <Init>b__255_196(TableData.TableData_Hardchapter k);
        /*0xcc8714*/ TableData.TableData_Hardchapter <Init>b__255_197(TableData.TableData_Hardchapter v);
        /*0xcc871c*/ int <Init>b__255_198(TableData.TableData_Stage g);
        /*0xcc8734*/ int <Init>b__255_199(System.Linq.IGrouping<int, TableData.TableData_Stage> k);
        /*0xcc87dc*/ System.Collections.Generic.List<TableData.TableData_Stage> <Init>b__255_200(System.Linq.IGrouping<int, TableData.TableData_Stage> v);
        /*0xcc8828*/ string <Init>b__255_201(TableData.TableData_Stage k);
        /*0xcc8840*/ TableData.TableData_Stage <Init>b__255_202(TableData.TableData_Stage v);
        /*0xcc8848*/ int <Init>b__255_203(TableData.TableData_Stage k);
        /*0xcc8860*/ TableData.TableData_Stage <Init>b__255_204(TableData.TableData_Stage v);
        /*0xcc8868*/ int <Init>b__255_205(TableData.TableData_Hardstage g);
        /*0xcc8880*/ int <Init>b__255_206(System.Linq.IGrouping<int, TableData.TableData_Hardstage> k);
        /*0xcc8928*/ System.Collections.Generic.List<TableData.TableData_Hardstage> <Init>b__255_207(System.Linq.IGrouping<int, TableData.TableData_Hardstage> v);
        /*0xcc8974*/ string <Init>b__255_208(TableData.TableData_Hardstage k);
        /*0xcc898c*/ TableData.TableData_Hardstage <Init>b__255_209(TableData.TableData_Hardstage v);
        /*0xcc8994*/ int <Init>b__255_210(TableData.TableData_Hardstage k);
        /*0xcc89ac*/ TableData.TableData_Hardstage <Init>b__255_211(TableData.TableData_Hardstage v);
        /*0xcc89b4*/ int <Init>b__255_212(TableData.TableData_Stageidle k);
        /*0xcc89cc*/ TableData.TableData_Stageidle <Init>b__255_213(TableData.TableData_Stageidle v);
        /*0xcc89d4*/ int <Init>b__255_214(TableData.TableData_Towernormal k);
        /*0xcc89ec*/ TableData.TableData_Towerfloor <Init>b__255_215(TableData.TableData_Towernormal v);
        /*0xcc89f4*/ int <Init>b__255_216(TableData.TableData_Towerfire k);
        /*0xcc8a0c*/ TableData.TableData_Towerfloor <Init>b__255_217(TableData.TableData_Towerfire v);
        /*0xcc8a14*/ int <Init>b__255_218(TableData.TableData_Towerwind k);
        /*0xcc8a2c*/ TableData.TableData_Towerfloor <Init>b__255_219(TableData.TableData_Towerwind v);
        /*0xcc8a34*/ int <Init>b__255_220(TableData.TableData_Towernatural k);
        /*0xcc8a4c*/ TableData.TableData_Towerfloor <Init>b__255_221(TableData.TableData_Towernatural v);
        /*0xcc8a54*/ int <Init>b__255_222(TableData.TableData_Towerwater k);
        /*0xcc8a6c*/ TableData.TableData_Towerfloor <Init>b__255_223(TableData.TableData_Towerwater v);
        /*0xcc8a74*/ int <Init>b__255_224(TableData.TableData_Towernormal k);
        /*0xcc8a8c*/ TableData.TableData_Towerfloor <Init>b__255_225(TableData.TableData_Towernormal v);
        /*0xcc8a94*/ int <Init>b__255_226(TableData.TableData_Towerfire k);
        /*0xcc8aac*/ TableData.TableData_Towerfloor <Init>b__255_227(TableData.TableData_Towerfire v);
        /*0xcc8ab4*/ int <Init>b__255_228(TableData.TableData_Towerwind k);
        /*0xcc8acc*/ TableData.TableData_Towerfloor <Init>b__255_229(TableData.TableData_Towerwind v);
        /*0xcc8ad4*/ int <Init>b__255_230(TableData.TableData_Towernatural k);
        /*0xcc8aec*/ TableData.TableData_Towerfloor <Init>b__255_231(TableData.TableData_Towernatural v);
        /*0xcc8af4*/ int <Init>b__255_232(TableData.TableData_Towerwater k);
        /*0xcc8b0c*/ TableData.TableData_Towerfloor <Init>b__255_233(TableData.TableData_Towerwater v);
        /*0xcc8b14*/ TableData.TableData_Stagebattle <Init>b__255_234(TableData.TableData_Battlecampaign s);
        /*0xcc8b1c*/ TableData.TableData_Stagebattle <Init>b__255_235(TableData.TableData_Battletower s);
        /*0xcc8b24*/ TableData.TableData_Stagebattle <Init>b__255_236(TableData.TableData_Battledungeon s);
        /*0xcc8b2c*/ TableData.TableData_Stagebattle <Init>b__255_237(TableData.TableData_Battleidle s);
        /*0xcc8b34*/ TableData.TableData_Stagebattle <Init>b__255_238(TableData.TableData_Battletutorial s);
        /*0xcc8b3c*/ TableData.TableData_Stagebattle <Init>b__255_239(TableData.TableData_Battleguildboss s);
        /*0xcc8b44*/ TableData.TableData_Stagebattle <Init>b__255_240(TableData.TableData_Battlehardcampaign s);
        /*0xcc8b4c*/ int <Init>b__255_241(TableData.TableData_Stagebattle k);
        /*0xcc8b64*/ TableData.TableData_Stagebattle <Init>b__255_242(TableData.TableData_Stagebattle v);
        /*0xcc8b6c*/ int <Init>b__255_243(TableData.TableData_Item k);
        /*0xcc8b84*/ TableData.TableData_Item <Init>b__255_244(TableData.TableData_Item v);
        /*0xcc8b8c*/ int <Init>b__255_245(TableData.TableData_Item k);
        /*0xcc8ba4*/ string <Init>b__255_246(TableData.TableData_Item v);
        /*0xcc8bbc*/ string <Init>b__255_247(TableData.TableData_Item g);
        /*0xcc8bd4*/ ItemType <Init>b__255_248(System.Linq.IGrouping<string, TableData.TableData_Item> k);
        /*0xcc8cd4*/ System.Collections.Generic.List<TableData.TableData_Item> <Init>b__255_249(System.Linq.IGrouping<string, TableData.TableData_Item> v);
        /*0xcc8d20*/ int <Init>b__255_250(TableData.TableData_Userlvexp k);
        /*0xcc8d38*/ TableData.TableData_Userlvexp <Init>b__255_251(TableData.TableData_Userlvexp v);
        /*0xcc8d40*/ int <Init>b__255_252(TableData.TableData_Fastidle k);
        /*0xcc8d58*/ TableData.TableData_Fastidle <Init>b__255_253(TableData.TableData_Fastidle v);
        /*0xcc8d60*/ int <Init>b__255_254(TableData.TableData_Arenarank k);
        /*0xcc8d78*/ TableData.TableData_Arenarank <Init>b__255_255(TableData.TableData_Arenarank v);
        /*0xcc8d80*/ int <Init>b__255_256(TableData.TableData_Chest k);
        /*0xcc8d98*/ System.ValueTuple<TableData.TableData_Chest, System.Int32[]> <Init>b__255_257(TableData.TableData_Chest v);
        /*0xcc8ef8*/ ContentType <Init>b__255_258(TableData.TableData_Contenthelp k);
        /*0xcc8f80*/ TableData.TableData_Contenthelp <Init>b__255_259(TableData.TableData_Contenthelp v);
        /*0xcc8f88*/ int <Init>b__255_260(TableData.TableData_Contentunlock k);
        /*0xcc8fa0*/ TableData.TableData_Contentunlock <Init>b__255_261(TableData.TableData_Contentunlock v);
        /*0xcc8fa8*/ ContentType <Init>b__255_262(TableData.TableData_Contentunlock k);
        /*0xcc9030*/ TableData.TableData_Contentunlock <Init>b__255_263(TableData.TableData_Contentunlock v);
        /*0xcc9038*/ int <Init>b__255_264(TableData.TableData_Mazemateequip k);
        /*0xcc9050*/ TableData.TableData_Mazemateequip <Init>b__255_265(TableData.TableData_Mazemateequip v);
        /*0xcc9058*/ System.ValueTuple<int, int, int> <Init>b__255_266(TableData.TableData_Mazebattle k);
        /*0xcc9134*/ TableData.TableData_Mazebattle <Init>b__255_267(TableData.TableData_Mazebattle v);
        /*0xcc913c*/ int <Init>b__255_268(TableData.TableData_Mazebattle k);
        /*0xcc9154*/ TableData.TableData_Mazebattle <Init>b__255_269(TableData.TableData_Mazebattle v);
        /*0xcc915c*/ int <Init>b__255_270(TableData.TableData_Mazecourse g);
        /*0xcc9174*/ int <Init>b__255_271(System.Linq.IGrouping<int, TableData.TableData_Mazecourse> k);
        /*0xcc921c*/ System.Collections.Generic.List<TableData.TableData_Mazecourse> <Init>b__255_272(System.Linq.IGrouping<int, TableData.TableData_Mazecourse> v);
        /*0xcc9268*/ int <Init>b__255_273(TableData.TableData_Cashshopinstant k);
        /*0xcc9280*/ TableData.TableData_Cashshopinstant <Init>b__255_274(TableData.TableData_Cashshopinstant v);
        /*0xcc9288*/ string <Init>b__255_275(TableData.TableData_Packagetime g);
        /*0xcc92a0*/ string <Init>b__255_276(System.Linq.IGrouping<string, TableData.TableData_Packagetime> k);
        /*0xcc9348*/ System.Collections.Generic.List<TableData.TableData_Packagetime> <Init>b__255_277(System.Linq.IGrouping<string, TableData.TableData_Packagetime> v);
        /*0xcc9394*/ string <Init>b__255_278(TableData.TableData_Packageproductgroup g);
        /*0xcc93ac*/ string <Init>b__255_279(System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup> k);
        /*0xcc9454*/ System.Collections.Generic.List<TableData.TableData_Packageproductgroup> <Init>b__255_280(System.Linq.IGrouping<string, TableData.TableData_Packageproductgroup> v);
        /*0xcc94a0*/ string <Init>b__255_281(TableData.TableData_Cashshopquestreward g);
        /*0xcc94b8*/ string <Init>b__255_282(System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward> k);
        /*0xcc9560*/ System.Collections.Generic.List<TableData.TableData_Cashshopquestreward> <Init>b__255_283(System.Linq.IGrouping<string, TableData.TableData_Cashshopquestreward> v);
        /*0xcc95ac*/ int <Init>b__255_284(TableData.TableData_Cashshopquestreward k);
        /*0xcc95c4*/ TableData.TableData_Cashshopquestreward <Init>b__255_285(TableData.TableData_Cashshopquestreward v);
        /*0xcc95cc*/ int <Init>b__255_286(TableData.TableData_Demodata k);
        /*0xcc95e4*/ TableData.TableData_Demodata <Init>b__255_287(TableData.TableData_Demodata v);
        /*0xcc95ec*/ int <Init>b__255_288(TableData.TableData_Contentshoparrangement g);
        /*0xcc9604*/ int <Init>b__255_289(System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement> k);
        /*0xcc96ac*/ System.Collections.Generic.Dictionary<int, TableData.TableData_Contentshoparrangement> <Init>b__255_290(System.Linq.IGrouping<int, TableData.TableData_Contentshoparrangement> v);
        /*0xcc9878*/ int <Init>b__255_484(TableData.TableData_Contentshoparrangement a);
        /*0xcc9890*/ TableData.TableData_Contentshoparrangement <Init>b__255_485(TableData.TableData_Contentshoparrangement b);
        /*0xcc9898*/ int <Init>b__255_291(TableData.TableData_Idleunittipdialog k);
        /*0xcc98b0*/ TableData.TableData_Idleunittipdialog <Init>b__255_292(TableData.TableData_Idleunittipdialog v);
        /*0xcc98b8*/ TopMenuType <Init>b__255_293(TableData.TableData_Menusettingbase k);
        /*0xcc9940*/ TableData.TableData_Menusettingbase <Init>b__255_294(TableData.TableData_Menusettingbase v);
        /*0xcc9948*/ bool <Init>b__255_295(TableData.TableData_Profileskin x);
        /*0xcc9968*/ int <Init>b__255_296(TableData.TableData_Worldarenatier2 k);
        /*0xcc9980*/ TableData.TableData_Worldarenatier2 <Init>b__255_297(TableData.TableData_Worldarenatier2 v);
        /*0xcc9988*/ int <Init>b__255_298(TableData.TableData_Unitbase k);
        /*0xcc99a0*/ int <Init>b__255_300(TableData.TableData_Eventcurrencylocal k);
        /*0xcc99b8*/ TableData.TableData_Eventcurrencylocal <Init>b__255_301(TableData.TableData_Eventcurrencylocal v);
        /*0xcc99c0*/ string <Init>b__255_302(TableData.TableData_Eventpass k);
        /*0xcc99e4*/ int <Init>b__255_303(TableData.TableData_Eventpass v);
        /*0xcc99fc*/ string <Init>b__255_304(TableData.TableData_Eventpass k);
        /*0xcc9a20*/ int <Init>b__255_305(TableData.TableData_Eventpass v);
        /*0xcc9a38*/ int <Init>b__255_306(TableData.TableData_Eventpage g);
        /*0xcc9a50*/ int <Init>b__255_307(System.Linq.IGrouping<int, TableData.TableData_Eventpage> k);
        /*0xcc9af8*/ System.Collections.Generic.List<TableData.TableData_Eventpage> <Init>b__255_308(System.Linq.IGrouping<int, TableData.TableData_Eventpage> v);
        /*0xcc9b44*/ int <Init>b__255_309(TableData.TableData_Eventhottime k);
        /*0xcc9b5c*/ TableData.TableData_Eventhottime <Init>b__255_310(TableData.TableData_Eventhottime v);
        /*0xcc9b64*/ string <Init>b__255_311(TableData.TableData_Eventcurrencylocal g);
        /*0xcc9c04*/ string <Init>b__255_312(System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal> k);
        /*0xcc9cac*/ System.Collections.Generic.List<System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]>> <Init>b__255_313(System.Linq.IGrouping<string, TableData.TableData_Eventcurrencylocal> v);
        /*0xcc9de0*/ System.ValueTuple<TableData.TableData_Eventcurrencylocal, System.String[]> <Init>b__255_487(TableData.TableData_Eventcurrencylocal s);
        /*0xcc9ea8*/ int <Init>b__255_314(TableData.TableData_Eventpreset k);
        /*0xcc9ec0*/ TableData.TableData_Eventpreset <Init>b__255_315(TableData.TableData_Eventpreset v);
        /*0xcc9ec8*/ int <Init>b__255_316(TableData.TableData_Eventmissionpoint g);
        /*0xcc9ee0*/ int <Init>b__255_317(System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint> k);
        /*0xcc9f88*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> <Init>b__255_318(System.Linq.IGrouping<int, TableData.TableData_Eventmissionpoint> v);
        /*0xcc9fd4*/ int <Init>b__255_319(TableData.TableData_Eventexchange g);
        /*0xcc9fec*/ int <Init>b__255_320(System.Linq.IGrouping<int, TableData.TableData_Eventexchange> k);
        /*0xcca094*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> <Init>b__255_321(System.Linq.IGrouping<int, TableData.TableData_Eventexchange> v);
        /*0xcca0e0*/ int <Init>b__255_322(TableData.TableData_Eventbuyinapp k);
        /*0xcca0f8*/ TableData.TableData_Eventbuyinapp <Init>b__255_323(TableData.TableData_Eventbuyinapp v);
        /*0xcca100*/ int <Init>b__255_324(TableData.TableData_Eventquest g);
        /*0xcca118*/ int <Init>b__255_325(System.Linq.IGrouping<int, TableData.TableData_Eventquest> k);
        /*0xcca1c0*/ System.Collections.Generic.List<TableData.TableData_Eventquest> <Init>b__255_326(System.Linq.IGrouping<int, TableData.TableData_Eventquest> v);
        /*0xcca20c*/ string <Init>b__255_327(TableData.TableData_Eventquestgroup g);
        /*0xcca224*/ string <Init>b__255_328(System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup> k);
        /*0xcca2cc*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> <Init>b__255_329(System.Linq.IGrouping<string, TableData.TableData_Eventquestgroup> v);
        /*0xcca318*/ int <Init>b__255_330(TableData.TableData_Eventquestgroup k);
        /*0xcca330*/ TableData.TableData_Eventquestgroup <Init>b__255_331(TableData.TableData_Eventquestgroup v);
        /*0xcca338*/ int <Init>b__255_332(TableData.TableData_Eventroulette g);
        /*0xcca350*/ int <Init>b__255_333(System.Linq.IGrouping<int, TableData.TableData_Eventroulette> k);
        /*0xcca3f8*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> <Init>b__255_334(System.Linq.IGrouping<int, TableData.TableData_Eventroulette> v);
        /*0xcca444*/ int <Init>b__255_335(TableData.TableData_Eventboss k);
        /*0xcca45c*/ TableData.TableData_Eventboss <Init>b__255_336(TableData.TableData_Eventboss v);
        /*0xcca464*/ int <Init>b__255_337(TableData.TableData_Eventboss k);
        /*0xcca47c*/ TableData.TableData_Eventboss <Init>b__255_338(TableData.TableData_Eventboss v);
        /*0xcca484*/ int <Init>b__255_339(TableData.TableData_Eventbossreward g);
        /*0xcca49c*/ int <Init>b__255_340(System.Linq.IGrouping<int, TableData.TableData_Eventbossreward> k);
        /*0xcca544*/ System.Collections.Generic.List<TableData.TableData_Eventbossreward> <Init>b__255_341(System.Linq.IGrouping<int, TableData.TableData_Eventbossreward> v);
        /*0xcca590*/ int <Init>b__255_342(TableData.TableData_Eventcomplete g);
        /*0xcca5a8*/ int <Init>b__255_343(System.Linq.IGrouping<int, TableData.TableData_Eventcomplete> k);
        /*0xcca650*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> <Init>b__255_344(System.Linq.IGrouping<int, TableData.TableData_Eventcomplete> v);
        /*0xcca69c*/ int <Init>b__255_345(TableData.TableData_Eventcompletemission g);
        /*0xcca6b4*/ int <Init>b__255_346(System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission> k);
        /*0xcca75c*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> <Init>b__255_347(System.Linq.IGrouping<int, TableData.TableData_Eventcompletemission> v);
        /*0xcca7a8*/ string <Init>b__255_348(TableData.TableData_Config k);
        /*0xcca7cc*/ string <Init>b__255_349(TableData.TableData_Config v);
        /*0xcca7e4*/ bool <Init>b__255_350(TableData.TableData_Config w);
        /*0xcca81c*/ string <Init>b__255_351(TableData.TableData_Config k);
        /*0xcca840*/ int <Init>b__255_352(TableData.TableData_Config v);
        /*0xcca85c*/ int <Init>b__255_353(TableData.TableData_Guildlevel k);
        /*0xcca874*/ TableData.TableData_Guildlevel <Init>b__255_354(TableData.TableData_Guildlevel v);
        /*0xcca87c*/ int <Init>b__255_355(TableData.TableData_Guildhuntingreward g);
        /*0xcca894*/ int <Init>b__255_356(System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward> k);
        /*0xcca93c*/ System.Collections.Generic.List<TableData.TableData_Guildhuntingreward> <Init>b__255_357(System.Linq.IGrouping<int, TableData.TableData_Guildhuntingreward> v);
        /*0xcca988*/ string <Init>b__255_358(TableData.TableData_Guildwar k);
        /*0xcca9a0*/ string <Init>b__255_359(TableData.TableData_Guildwar v);
        /*0xcca9b8*/ PTShare.Define.GuildWarPosition <Init>b__255_360(TableData.TableData_Guildwarorganize g);
        /*0xccaa40*/ PTShare.Define.GuildWarPosition <Init>b__255_361(System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize> k);
        /*0xccaae8*/ System.Collections.Generic.List<TableData.TableData_Guildwarorganize> <Init>b__255_362(System.Linq.IGrouping<PTShare.Define.GuildWarPosition, TableData.TableData_Guildwarorganize> v);
        /*0xccab34*/ int <Init>b__255_363(TableData.TableData_Guildwarrank g);
        /*0xccab4c*/ int <Init>b__255_364(System.Linq.IGrouping<int, TableData.TableData_Guildwarrank> k);
        /*0xccabf4*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> <Init>b__255_365(System.Linq.IGrouping<int, TableData.TableData_Guildwarrank> v);
        /*0xccac40*/ string <Init>b__255_366(TableData.TableData_Guildwarrankreward k);
        /*0xccac58*/ TableData.TableData_Guildwarrankreward <Init>b__255_367(TableData.TableData_Guildwarrankreward v);
        /*0xccac60*/ int <Init>b__255_368(TableData.TableData_Guildwartactic k);
        /*0xccac78*/ TableData.TableData_Guildwartactic <Init>b__255_369(TableData.TableData_Guildwartactic v);
        /*0xccac80*/ int <Init>b__255_370(TableData.TableData_Vip k);
        /*0xccac98*/ TableData.TableData_Vip <Init>b__255_371(TableData.TableData_Vip v);
        /*0xccaca0*/ int <Init>b__255_372(TableData.TableData_Bountyquest k);
        /*0xccacb8*/ TableData.TableData_Bountyquest <Init>b__255_373(TableData.TableData_Bountyquest v);
        /*0xccacc0*/ int <Init>b__255_374(TableData.TableData_Bountylv k);
        /*0xccacd8*/ TableData.TableData_Bountylv <Init>b__255_375(TableData.TableData_Bountylv v);
        /*0xccace0*/ int <Init>b__255_376(TableData.TableData_Dungeon k);
        /*0xccacf8*/ TableData.TableData_Dungeon <Init>b__255_377(TableData.TableData_Dungeon v);
        /*0xccad00*/ int <Init>b__255_378(TableData.TableData_Dungeongroup g);
        /*0xccad18*/ int <Init>b__255_379(System.Linq.IGrouping<int, TableData.TableData_Dungeongroup> k);
        /*0xccadc0*/ System.Collections.Generic.List<TableData.TableData_Dungeongroup> <Init>b__255_380(System.Linq.IGrouping<int, TableData.TableData_Dungeongroup> v);
        /*0xccae0c*/ int <Init>b__255_381(TableData.TableData_Dungeonmap g);
        /*0xccae24*/ int <Init>b__255_382(System.Linq.IGrouping<int, TableData.TableData_Dungeonmap> k);
        /*0xccaecc*/ System.Collections.Generic.List<TableData.TableData_Dungeonmap> <Init>b__255_383(System.Linq.IGrouping<int, TableData.TableData_Dungeonmap> v);
        /*0xccaf18*/ int <Init>b__255_384(TableData.TableData_Dungeontile k);
        /*0xccaf30*/ TableData.TableData_Dungeontile <Init>b__255_385(TableData.TableData_Dungeontile v);
        /*0xccaf38*/ int <Init>b__255_386(TableData.TableData_Dungeonmateequip k);
        /*0xccaf50*/ TableData.TableData_Dungeonmateequip <Init>b__255_387(TableData.TableData_Dungeonmateequip v);
        /*0xccaf58*/ int <Init>b__255_388(TableData.TableData_Dungeondialog g);
        /*0xccaf70*/ int <Init>b__255_389(System.Linq.IGrouping<int, TableData.TableData_Dungeondialog> k);
        /*0xccb018*/ System.Collections.Generic.List<TableData.TableData_Dungeondialog> <Init>b__255_390(System.Linq.IGrouping<int, TableData.TableData_Dungeondialog> v);
        /*0xccb064*/ int <Init>b__255_391(TableData.TableData_Dungeonreward g);
        /*0xccb07c*/ int <Init>b__255_392(System.Linq.IGrouping<int, TableData.TableData_Dungeonreward> k);
        /*0xccb124*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> <Init>b__255_393(System.Linq.IGrouping<int, TableData.TableData_Dungeonreward> v);
        /*0xccb170*/ int <Init>b__255_394(TableData.TableData_Dungeondialogdirection g);
        /*0xccb188*/ int <Init>b__255_395(System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection> k);
        /*0xccb230*/ System.Collections.Generic.List<TableData.TableData_Dungeondialogdirection> <Init>b__255_396(System.Linq.IGrouping<int, TableData.TableData_Dungeondialogdirection> v);
        /*0xccb27c*/ int <Init>b__255_397(TableData.TableData_Runlife k);
        /*0xccb294*/ TableData.TableData_Runlife <Init>b__255_398(TableData.TableData_Runlife v);
        /*0xccb29c*/ int <Init>b__255_399(TableData.TableData_Runreward k);
        /*0xccb2b4*/ TableData.TableData_Runreward <Init>b__255_400(TableData.TableData_Runreward v);
        /*0xccb2bc*/ bool <Init>b__255_401(TableData.TableData_Relation x);
        /*0xccb2dc*/ int <Init>b__255_402(TableData.TableData_Worldbossstep k);
        /*0xccb2f4*/ TableData.TableData_Worldbossstep <Init>b__255_403(TableData.TableData_Worldbossstep v);
        /*0xccb2fc*/ int <Init>b__255_404(TableData.TableData_Worldbossmission g);
        /*0xccb314*/ int <Init>b__255_405(System.Linq.IGrouping<int, TableData.TableData_Worldbossmission> k);
        /*0xccb3bc*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> <Init>b__255_406(System.Linq.IGrouping<int, TableData.TableData_Worldbossmission> v);
        /*0xccb408*/ int <Init>b__255_407(TableData.TableData_Pvenoblity k);
        /*0xccb420*/ TableData.TableData_Pvenoblity <Init>b__255_408(TableData.TableData_Pvenoblity v);
        /*0xccb428*/ int <Init>b__255_409(TableData.TableData_Pvechallenge g);
        /*0xccb440*/ int <Init>b__255_410(System.Linq.IGrouping<int, TableData.TableData_Pvechallenge> k);
        /*0xccb4e8*/ System.Collections.Generic.List<TableData.TableData_Pvechallenge> <Init>b__255_411(System.Linq.IGrouping<int, TableData.TableData_Pvechallenge> v);
        /*0xccb534*/ int <Init>b__255_412(TableData.TableData_Pveclearreward k);
        /*0xccb54c*/ TableData.TableData_Pveclearreward <Init>b__255_413(TableData.TableData_Pveclearreward v);
        /*0xccb554*/ string <Init>b__255_414(TableData.TableData_Housing k);
        /*0xccb578*/ string <Init>b__255_415(TableData.TableData_Housing v);
        /*0xccb590*/ int <Init>b__255_416(TableData.TableData_Housingfloor k);
        /*0xccb5a8*/ TableData.TableData_Housingfloor <Init>b__255_417(TableData.TableData_Housingfloor v);
        /*0xccb5b0*/ int <Init>b__255_418(TableData.TableData_Housingfloor k);
        /*0xccb5c8*/ int <Init>b__255_419(TableData.TableData_Housinggacha g);
        /*0xccb5e0*/ int <Init>b__255_420(System.Linq.IGrouping<int, TableData.TableData_Housinggacha> k);
        /*0xccb688*/ System.Collections.Generic.List<TableData.TableData_Housinggacha> <Init>b__255_421(System.Linq.IGrouping<int, TableData.TableData_Housinggacha> v);
        /*0xccb6d4*/ int <Init>b__255_422(TableData.TableData_Housinggacha k);
        /*0xccb6ec*/ int <Init>b__255_423(TableData.TableData_Furniture k);
        /*0xccb704*/ TableData.TableData_Furniture <Init>b__255_424(TableData.TableData_Furniture v);
        /*0xccb70c*/ string <Init>b__255_425(TableData.TableData_Furnitureleveltypelist g);
        /*0xccb724*/ string <Init>b__255_426(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> k);
        /*0xccb7cc*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> <Init>b__255_427(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> v);
        /*0xccb818*/ string <Init>b__255_428(TableData.TableData_Furnitureleveltypelist g);
        /*0xccb830*/ string <Init>b__255_429(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> k);
        /*0xccb8d8*/ System.Collections.Generic.List<TableData.TableData_Furnitureleveltypelist> <Init>b__255_430(System.Linq.IGrouping<string, TableData.TableData_Furnitureleveltypelist> v);
        /*0xccb924*/ string <Init>b__255_431(TableData.TableData_Furnitureeffecttype k);
        /*0xccb93c*/ TableData.TableData_Furnitureeffecttype <Init>b__255_432(TableData.TableData_Furnitureeffecttype v);
        /*0xccb944*/ int <Init>b__255_433(TableData.TableData_Furnitureshoplist g);
        /*0xccb95c*/ int <Init>b__255_434(System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist> k);
        /*0xccba04*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> <Init>b__255_435(System.Linq.IGrouping<int, TableData.TableData_Furnitureshoplist> v);
        /*0xccba50*/ int <Init>b__255_436(TableData.TableData_Furnitureshoplist k);
        /*0xccba68*/ TableData.TableData_Furnitureshoplist <Init>b__255_437(TableData.TableData_Furnitureshoplist v);
        /*0xccba70*/ string <Init>b__255_438(TableData.TableData_Housingfloorpattern k);
        /*0xccba88*/ TableData.TableData_Housingfloorpattern <Init>b__255_439(TableData.TableData_Housingfloorpattern v);
        /*0xccba90*/ int <Init>b__255_440(TableData.TableData_Furniturecontentseffect k);
        /*0xccbaa8*/ TableData.TableData_Furniturecontentseffect <Init>b__255_441(TableData.TableData_Furniturecontentseffect v);
        /*0xccbab0*/ int <Init>b__255_442(TableData.TableData_Furnitureheroeffect k);
        /*0xccbac8*/ TableData.TableData_Furnitureheroeffect <Init>b__255_443(TableData.TableData_Furnitureheroeffect v);
        /*0xccbad0*/ int <Init>b__255_444(TableData.TableData_Furniturelevelup k);
        /*0xccbae8*/ TableData.TableData_Furniturelevelup <Init>b__255_445(TableData.TableData_Furniturelevelup v);
        /*0xccbaf0*/ string <Init>b__255_446(TableData.TableData_Furnitureexp k);
        /*0xccbb08*/ TableData.TableData_Furnitureexp <Init>b__255_447(TableData.TableData_Furnitureexp v);
        /*0xccbb10*/ int <Init>b__255_448(TableData.TableData_Abilitypercent k);
        /*0xccbb28*/ TableData.TableData_Abilitypercent <Init>b__255_449(TableData.TableData_Abilitypercent v);
        /*0xccbb30*/ string <Init>b__255_450(TableData.TableData_Abilityoptionvalue g);
        /*0xccbb48*/ string <Init>b__255_451(System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue> k);
        /*0xccbbf0*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> <Init>b__255_452(System.Linq.IGrouping<string, TableData.TableData_Abilityoptionvalue> v);
        /*0xccbc3c*/ int <Init>b__255_453(TableData.TableData_Abilityoptionvalue k);
        /*0xccbc54*/ TableData.TableData_Abilityoptionvalue <Init>b__255_454(TableData.TableData_Abilityoptionvalue v);
        /*0xccbc5c*/ string <Init>b__255_455(TableData.TableData_Abilityreset k);
        /*0xccbc74*/ TableData.TableData_Abilityreset <Init>b__255_456(TableData.TableData_Abilityreset v);
    }
}

class GameDataManager : Singleton.Data.SingletonData<GameDataManager>
{
    /*0x20*/ PathGroup MapPath;
    /*0x28*/ SystemData System;
    /*0x30*/ SpineData Spine;
    /*0x38*/ TableData.TableGroup mTableGroup;

    static /*0xecb644*/ string <InitInstance>g__Version|4_1();
    /*0xecc154*/ GameDataManager();
    /*0xecab0c*/ bool InitInstance();
    /*0xecb69c*/ void ReleaseInstance();
    /*0xecb6a0*/ void InitGameDataManager();
    /*0xecb838*/ void InitializeMapPath();
    /*0xecb8b0*/ Spine.Unity.SkeletonDataAsset GetSpineAsset(string _name);
    /*0xecb8cc*/ System.Collections.Generic.List<TableData.TableData_Skillbase> FindSkillList(int _casterId, bool _ignoreDefault);
    /*0xecb8e0*/ System.Collections.Generic.List<PathData> GetMapPath(int _mapIndex);
    /*0xecb8fc*/ int GetCurSkillLV(int _nUnitID, int _nCurTier, int _nSkillSlot);
    /*0xecb9b4*/ bool IsRangerClassMelee(int _nUnitID);
    /*0xecba44*/ System.Collections.Generic.List<TableData.TableData_Skillfx> GetSkillFXList2(int _nSkillID, int _nSkillLV);
    /*0xecbdac*/ System.Collections.Generic.List<TableData.TableData_Skillfx> GetSkillFXList(int _nSkillID, int _nSkillLV);
    /*0xecc0b0*/ TableData.TableData_Skillfx FindSkillFXData(int _nSkillFXID, int _nSkillLV);

    class <>c
    {
        static /*0x0*/ GameDataManager.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__4_0;
        static /*0x10*/ System.Func<string, bool> <>9__4_2;
        static /*0x18*/ System.Func<string, string> <>9__4_3;
        static /*0x20*/ System.Action<bool> <>9__4_4;
        static /*0x28*/ System.Func<TableData.TableData_Skillfx, int> <>9__13_0;
        static /*0x30*/ System.Func<TableData.TableData_Skillfx, int> <>9__13_6;
        static /*0x38*/ System.Func<TableData.TableData_Skillfx, int> <>9__13_3;

        static /*0xf67f64*/ <>c();
        /*0xf67fc4*/ <>c();
        /*0xf67fcc*/ void <InitInstance>b__4_0(bool r);
        /*0xf68028*/ bool <InitInstance>b__4_2(string w);
        /*0xf680b8*/ string <InitInstance>b__4_3(string s);
        /*0xf681b4*/ void <InitInstance>b__4_4(bool r);
        /*0xf68210*/ int <GetSkillFXList2>b__13_0(TableData.TableData_Skillfx g);
        /*0xf68228*/ int <GetSkillFXList2>b__13_6(TableData.TableData_Skillfx o);
        /*0xf68240*/ int <GetSkillFXList2>b__13_3(TableData.TableData_Skillfx o);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ int _nSkillLV;
        /*0x18*/ System.Func<TableData.TableData_Skillfx, bool> <>9__4;
        /*0x20*/ System.Func<TableData.TableData_Skillfx, bool> <>9__5;

        /*0xf68258*/ <>c__DisplayClass13_0();
        /*0xf68260*/ bool <GetSkillFXList2>b__1(System.Linq.IGrouping<int, TableData.TableData_Skillfx> w);
        /*0xf6832c*/ bool <GetSkillFXList2>b__4(TableData.TableData_Skillfx c);
        /*0xf68350*/ TableData.TableData_Skillfx <GetSkillFXList2>b__2(System.Linq.IGrouping<int, TableData.TableData_Skillfx> s);
        /*0xf6851c*/ bool <GetSkillFXList2>b__5(TableData.TableData_Skillfx w);
    }
}

class CData
{
    /*0x133a754*/ CData();
    int CalculateCRC();
    /*0x133a130*/ int getDataLength(object _value);
    /*0x133a1f8*/ string readString(byte[] _data, ref int _offset);
    /*0x133a320*/ float readFloat(byte[] _data, ref int _offset);
    /*0x133a3a8*/ short readInt16(byte[] _data, ref int _offset);
    /*0x133a430*/ int readInt32(byte[] _data, ref int _offset);
    /*0x133a4b8*/ void writeString(string _value, byte[] _dest, ref int _offset);
    /*0x133a614*/ void writeFloat(float _value, byte[] _dest, ref int _offset);
    /*0x133a578*/ void writeInt16(short _value, byte[] _dest, ref int _offset);
    /*0x133a6b8*/ void writeInt32(int _value, byte[] _dest, ref int _offset);
}

enum ENCRYPT_TYPE
{
    INT = 0,
    FLOAT = 1,
    STRING = 2,
}

class CEncryptBase
{
    /*0x133a75c*/ CEncryptBase();
    ENCRYPT_TYPE get_Type();
}

class CEncrypt<T> : CEncryptBase
{
    static /*0x0*/ int index;
    static /*0x0*/ int dummy;
    /*0x0*/ byte[] data1;
    /*0x0*/ byte[] data2;
    /*0x0*/ byte crc;
    /*0x0*/ bool isValid;
    /*0x0*/ byte[] seedAry;

    static CEncrypt();
    CEncrypt();
    T get();
    void set(T value);
    bool get_IsValid();
    T get_Value();
    void set_Value(T value);
    string ToString();
    string ToEncrypedString();
    void Load(string _data);
    bool checkCRC();
    void updateCRC();
    void Seed();
    byte getSeedValue(int _index);
}

class CEncryptErrorReport : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GUIStyle style;
    /*0x20*/ UnityEngine.Rect rect;
    /*0x30*/ float remainTime;

    /*0x133aab0*/ CEncryptErrorReport();
    /*0x133a764*/ void Awake();
    /*0x133a8cc*/ void Start();
    /*0x133a8d8*/ void OnGUI();
    /*0x133a9fc*/ void Update();
}

class CEncryptErrors
{
    static /*0x0*/ CEncryptErrors _instance;
    /*0x10*/ System.Collections.Generic.Dictionary<DefineHack.LT_ABUSE_TYPE, CEncryptErrors.ErrorData> mErrors;

    static /*0x133b110*/ CEncryptErrors();
    static /*0x133aab8*/ CEncryptErrors get_Instance();
    /*0x133b098*/ CEncryptErrors();
    /*0x133ab1c*/ int get_Item(DefineHack.LT_ABUSE_TYPE _error);
    /*0x133aba4*/ CEncryptErrors.ErrorData get_CurrentError();
    /*0x133acd4*/ int get_ErrorCount();
    /*0x133ae04*/ void Clear();
    /*0x133ae58*/ void ShowErrors();
    /*0x133af98*/ void Add(DefineHack.LT_ABUSE_TYPE _error, string _message);

    class ErrorData
    {
        /*0x10*/ DefineHack.LT_ABUSE_TYPE AbuseType;
        /*0x18*/ string LastError;
        /*0x20*/ int Count;

        /*0xda5828*/ ErrorData();
    }
}

class CEncryptEx<T>
{
    static /*0x0*/ int index;
    /*0x0*/ int[] data1;
    /*0x0*/ int[] data2;
    /*0x0*/ bool isValid;
    /*0x0*/ int crc;
    /*0x0*/ byte[] seedAry;

    static CEncryptEx();
    CEncryptEx();
    T get();
    void set(T value);
    bool get_IsValid();
    T get_Value();
    void set_Value(T value);
    void Init(int[] _data1, int[] _data2);
    void seed();
    int getSeedValue();
}

class CEncryptUtil
{
    static /*0x0*/ byte[] encryptData;
    static /*0x8*/ byte[] decryptData;

    static /*0x133d1c4*/ CEncryptUtil();
    static /*0x133b16c*/ int GetCRC(CInt _obj);
    static /*0x133b1fc*/ int GetCRC(int _value);
    static /*0x133b2c4*/ int GetCRC(CFloat _obj);
    static /*0x133b358*/ int GetCRC(float _value);
    static /*0x133b420*/ int GetCRC(string _value);
    static /*0x133b4b0*/ int GetCRC(byte[] _value, int _length);
    static /*0x133b5b8*/ bool GetCRC_FileEx(string _fileName, ref int _crc);
    static /*0x133b8b0*/ bool ReadCRC(string _fileName, ref int _crc);
    static /*0x133ba74*/ bool GetCRC_File(string _fileName, ref int _crc);
    static /*0x133bce4*/ bool EncryptFile(string _readFilePath, string _writeFilePath);
    static /*0x133c1f8*/ bool DecryptFile(string _readFilePath, string _writeFilePath);
    static /*0x133c69c*/ string Base64Encode(byte[] _source);
    static /*0x133c77c*/ byte[] Base64Decode(string _base64);
    static /*0x133c864*/ byte[] Encrypt(string _source);
    static /*0x133c9ac*/ string Decrypt(byte[] _data);
    static /*0x133c0dc*/ int Encrypt(byte[] _from, ref byte[] _dest, int _length);
    static /*0x133c580*/ int Decrypt(byte[] _from, ref byte[] _dest, int _length);
    static /*0x133cad8*/ string EncryptEx(string _source);
    static /*0x133cdd4*/ string DecryptEx(string _encrypt);
    /*0x133d1bc*/ CEncryptUtil();
}

class CFloat : CEncrypt<float>
{
    static /*0x0*/ byte[] temp;

    static /*0x133d840*/ CFloat();
    static /*0x133d2a0*/ float op_Implicit(CFloat obj);
    static /*0x133d2b8*/ string op_Implicit(CFloat obj);
    static /*0x133d33c*/ CFloat op_Implicit(float _value);
    static /*0x133d458*/ CFloat op_Implicit(string _encrypt);
    /*0x133d4dc*/ CFloat();
    /*0x133d3a0*/ CFloat(float _value);
    /*0x133d298*/ ENCRYPT_TYPE get_Type();
    /*0x133d55c*/ float get();
    /*0x133d6ec*/ void set(float value);
}

class CFloatEx : CEncryptEx<float>
{
    static /*0x133d8ac*/ float op_Implicit(CFloatEx obj);
    static /*0x133d8c4*/ CFloatEx op_Implicit(float _value);
    /*0x133d9e0*/ CFloatEx();
    /*0x133d928*/ CFloatEx(float _value);
    /*0x133da60*/ float get();
    /*0x133dd20*/ void set(float value);
}

class CInt : CEncrypt<int>
{
    static /*0x0*/ byte[] temp;

    static /*0x133e6b8*/ CInt();
    static /*0x133dfcc*/ int op_Implicit(CInt obj);
    static /*0x133dfe0*/ string op_Implicit(CInt obj);
    static /*0x133e064*/ CInt op_Implicit(int _value);
    static /*0x133e178*/ CInt op_Implicit(string _encrypt);
    /*0x133e254*/ CInt();
    /*0x133e0c0*/ CInt(int _value);
    /*0x133dfc4*/ ENCRYPT_TYPE get_Type();
    /*0x133e2d4*/ int get();
    /*0x133e56c*/ void set(int value);
}

class CIntEx : CEncryptEx<int>
{
    static /*0x133e724*/ float op_Implicit(CIntEx obj);
    static /*0x133e750*/ CIntEx op_Implicit(int _value);
    /*0x133e864*/ CIntEx();
    /*0x133e7ac*/ CIntEx(int _value);
    /*0x133e8e4*/ int get();
    /*0x133eb28*/ void set(int value);
}

class CString : CEncryptBase
{
    /*0x10*/ byte[] data;

    static /*0x1341068*/ CString op_Implicit(string value);
    static /*0x1341100*/ string op_Implicit(CString obj);
    /*0x13410d0*/ CString(string _value);
    /*0x1341060*/ ENCRYPT_TYPE get_Type();
    /*0x134116c*/ string ToString();
    /*0x134125c*/ void SetString(string value);
}

class CStringEx
{
    /*0x10*/ string data;

    static /*0x13413c0*/ string op_Implicit(CStringEx obj);
    /*0x1341574*/ CStringEx();
    /*0x13415d4*/ CStringEx(string _value);
    /*0x1341348*/ int GetHashCode();
    /*0x1341380*/ bool Equals(object obj);
    /*0x1341374*/ string get_Value();
    /*0x13413dc*/ void set_Value(string value);
    /*0x1341450*/ string ToString();
    /*0x1341604*/ void SetString(string value);
}

class SFloat
{
    static /*0x0*/ byte[] temp;
    /*0x10*/ byte[] data1;
    /*0x18*/ byte[] data2;

    static /*0x1297fcc*/ SFloat();
    static /*0x129796c*/ float op_Implicit(SFloat obj);
    static /*0x1297c1c*/ SFloat op_Implicit(float _value);
    /*0x1297d0c*/ SFloat();
    /*0x1297c80*/ SFloat(float _value);
    /*0x1297fc8*/ float get_Value();
    /*0x129797c*/ float get();
    /*0x1297e3c*/ void set(float value);
    /*0x1297d80*/ void seed();
}

class SInt
{
    static /*0x0*/ byte[] temp;
    /*0x10*/ byte[] data1;
    /*0x18*/ byte[] data2;

    static /*0x1298f90*/ SInt();
    static /*0x1298920*/ int op_Implicit(SInt obj);
    static /*0x1298bcc*/ ulong op_Implicit(SInt obj);
    static /*0x1298be8*/ SInt op_Implicit(int _value);
    /*0x1298cd0*/ SInt();
    /*0x1298c44*/ SInt(int _value);
    /*0x1298f8c*/ int get_Value();
    /*0x129892c*/ int get();
    /*0x1298e00*/ void set(int value);
    /*0x1298d44*/ void seed();
}

class SLong
{
    static /*0x0*/ byte[] temp;
    /*0x10*/ byte[] data1;
    /*0x18*/ byte[] data2;

    static /*0x12999b4*/ SLong();
    static /*0x12990f4*/ long op_Implicit(SLong obj);
    static /*0x12994f0*/ ulong op_Implicit(SLong obj);
    static /*0x12994fc*/ SLong op_Implicit(long _value);
    /*0x12995e4*/ SLong();
    /*0x1299558*/ SLong(long _value);
    /*0x12999b0*/ long get_Value();
    /*0x1299100*/ long get();
    /*0x1299714*/ void set(long value);
    /*0x1299658*/ void seed();
}

class Helper_Account
{
    static /*0x10f08f0*/ void HandlerOpenProfile(long _playerid);
    static /*0x10f70a4*/ void HandlerOpenProfile(long _playerid, string _campaign);
    static /*0x10f7224*/ void HandlerOpenProfile(long _playerid, int _faction, int _floor);
    static /*0x10f73e4*/ void HandlerOpenProfile_Arena(long _playerid);
    static /*0x10f7574*/ void HandlerOpenProfile_WorldArena(long _playerid);
    static /*0x10f7704*/ void HandlerOpenProfile_Guild(long _playerid);

    class <>c
    {
        static /*0x0*/ Helper_Account.<> <>9;
        static /*0x8*/ System.Action<ServerProtocol.ResAccountDetail> <>9__0_0;
        static /*0x10*/ System.Action<ServerProtocol.ResAccountDetail> <>9__1_0;
        static /*0x18*/ System.Action<ServerProtocol.ResAccountDetail> <>9__2_0;
        static /*0x20*/ System.Action<ServerProtocol.ResAccountDetail> <>9__3_0;
        static /*0x28*/ System.Action<ServerProtocol.ResAccountDetail> <>9__4_0;

        static /*0xf747ac*/ <>c();
        /*0xf7480c*/ <>c();
        /*0xf74814*/ void <HandlerOpenProfile>b__0_0(ServerProtocol.ResAccountDetail result);
        /*0xf7489c*/ void <HandlerOpenProfile>b__1_0(ServerProtocol.ResAccountDetail result);
        /*0xf74924*/ void <HandlerOpenProfile>b__2_0(ServerProtocol.ResAccountDetail result);
        /*0xf749ac*/ void <HandlerOpenProfile_Arena>b__3_0(ServerProtocol.ResAccountDetail result);
        /*0xf74a34*/ void <HandlerOpenProfile_WorldArena>b__4_0(ServerProtocol.ResAccountDetail result);
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ long _playerid;
        /*0x18*/ System.Predicate<PTShare.Define.SGuildMember> <>9__1;

        /*0xf74abc*/ <>c__DisplayClass5_0();
        /*0xf74ac4*/ void <HandlerOpenProfile_Guild>b__0(ServerProtocol.ResAccountDetail result);
        /*0xf74c08*/ bool <HandlerOpenProfile_Guild>b__1(PTShare.Define.SGuildMember data);
    }
}

class Helper_Audio
{
    static /*0x10f7cb4*/ void RefreshAudioVolume();
    static /*0x10f7d6c*/ float GetSavedVolumeBGM();
    static /*0x10f7d74*/ float GetSavedVolumeSFX();
    /*0x10f7d7c*/ Helper_Audio();
}

class Helper_Color
{
    static string HEROFRAMECOLORS = "HeroFrameColors";
    static string HEROGRADECOLORS = "HeroGradeColors";
    static string HEROGRADEOUTLINECOLORS = "HeroGradeOutlineColors";
    static string HEROGRADESHADOWCOLORS = "HeroGradeShadowColors";
    static string EQUIPGRADECOLORS = "EquipGradeColors";
    static string EQUIPGRADEOUTLINECOLORS = "EquipGradeOutlineColors";
    static string HEROFACTIONCOLORS = "HeroFactionColors";
    static string HEROFACTIONOUTLINECOLORS = "HeroFactionOutlineColors";
    static /*0x0*/ System.Collections.Generic.Dictionary<string, ColorGroup> m_dicColorGroup;

    static /*0x10f80e0*/ Helper_Color();
    static /*0x10f7d84*/ UnityEngine.Color GetColors(string _name, int _index);
    static /*0x10f7e48*/ ColorGroup GetColorGroup(string _name);
    /*0x10f80d8*/ Helper_Color();
}

enum ContentType
{
    None = 0,
    BattleAcceleration = 1,
    ContentShop = 2,
    Friend = 3,
    GeneralArena = 4,
    GoddessTemple = 5,
    ImmediatelyHunt = 6,
    Maze = 7,
    Mercenary = 8,
    Pub = 9,
    RankingBoard = 10,
    ResetHero = 11,
    StageTower = 12,
    Troop = 13,
    Resonance = 14,
    EventBattlePass = 15,
    EventRoyalPass = 16,
    Event7daynewbie = 17,
    EventSnowflower = 18,
    EventSpringSeed = 19,
    WorldArena = 20,
    Training = 21,
    Guild = 22,
    Bounty = 23,
    Revert = 24,
    Event7dayArena = 25,
    EventExchangeRotationA = 26,
    EventExchangeRotationB = 27,
    EventExchangeRotationC = 28,
    Relation = 29,
    FactionTower = 30,
    Minigame = 31,
    ArtifactEnhance = 32,
    Dungeon = 33,
    ArtifactUpgrade = 34,
    GuildWaste = 35,
    EventMissionShort = 36,
    StageTowerFire = 37,
    StageTowerWind = 38,
    StageTowerNature = 39,
    StageTowerWater = 40,
    GuildWar = 41,
    ResonanceUp = 42,
    Dismiss = 43,
    WorldBoss = 44,
    PveRanking = 45,
    HighGacha = 46,
    Signature = 47,
    Housing = 48,
    Housing_dismiss = 49,
    Ability = 50,
    EventBoss = 51,
    EventComplete = 52,
    Hardmode = 53,
    End = 54,
}

class Helper_Currency
{
    static /*0x10f8168*/ bool IsVaildCurrency(PTShare.Define.Currency _type, long _amount);
    static /*0x10f82d4*/ long GetCurrency(PTShare.Define.Currency _type);
    static /*0x10f842c*/ string GetCurrencyTooltipDesc(PTShare.Define.Currency _type);
    static /*0x10f8534*/ int GetCurrencyQuality(PTShare.Define.Currency _type, bool _bIsFrame);
    static /*0x10f8554*/ int GetUserExpQuality(bool _bIsFrame);
    static /*0x10f855c*/ int GetVipPointQuality(bool _bIsFrame);
    static /*0x10f8564*/ int GetResetPointQuality(bool _bIsFrame);
    static /*0x10f856c*/ int GetGuildPoint(bool _bIsFrame);
    static /*0x10f8574*/ int GetDungeonItemQuality(bool _bIsFrame);
    static /*0x10f857c*/ int GetFrameDecoQuality(bool _bisFrame);
    static /*0x10f8584*/ void NotEnoughNotice(PTShare.Define.Currency _type);
    static /*0x10ee050*/ string ChangeMeasureToNumber(long _Number);
}

class Helper_Equipment
{
    static /*0x10f879c*/ int GetEquipmentUpgradeExp(PTShare.Define.SEquip _equip);
    static /*0x10f8880*/ System.Collections.Generic.List<int> GetEnhanceEquipmentExperienceList(TableData.TableData_Equipment _equip);
    static /*0x10f898c*/ System.Collections.Generic.List<EquipSetItem> GetEquipSetItemList();
    static /*0x10f8bf0*/ System.Collections.Generic.List<EquipSetItem> GetEquipSetItemList(System.Collections.Generic.List<PTShare.Define.SEquip> _liEquipList);

    class <>c
    {
        static /*0x0*/ Helper_Equipment.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SEquip, System.ValueTuple<int, int, int>> <>9__2_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip>, EquipSetItem> <>9__2_1;
        static /*0x18*/ System.Func<PTShare.Define.SEquip, System.ValueTuple<int, int, int>> <>9__3_0;
        static /*0x20*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip>, EquipSetItem> <>9__3_1;

        static /*0xf74c2c*/ <>c();
        /*0xf74c8c*/ <>c();
        /*0xf74c94*/ System.ValueTuple<int, int, int> <GetEquipSetItemList>b__2_0(PTShare.Define.SEquip g);
        /*0xf74d0c*/ EquipSetItem <GetEquipSetItemList>b__2_1(System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip> s);
        /*0xf74e50*/ System.ValueTuple<int, int, int> <GetEquipSetItemList>b__3_0(PTShare.Define.SEquip g);
        /*0xf74ec8*/ EquipSetItem <GetEquipSetItemList>b__3_1(System.Linq.IGrouping<System.ValueTuple<int, int, int>, PTShare.Define.SEquip> s);
    }
}

struct EquipSetItem
{
    /*0x10*/ PTShare.Define.SEquip Equip;
    /*0x18*/ TableData.TableData_Equipment Table;
    /*0x20*/ int Index;
    /*0x24*/ int Amount;

    /*0xaa2c90*/ EquipSetItem(PTShare.Define.SEquip equip, TableData.TableData_Equipment table, int index, int amount);
}

class EquipSetItem_Update_Comparer_Sort : System.Collections.Generic.IComparer<EquipSetItem>
{
    /*0x14c234c*/ EquipSetItem_Update_Comparer_Sort();
    /*0x14c231c*/ int Compare(EquipSetItem left, EquipSetItem right);
}

class EquipSetItem_Inventory_Comparer_Sort : System.Collections.Generic.IComparer<EquipSetItem>
{
    /*0x10*/ TableData.TableData_Equipment tableLeft;
    /*0x18*/ TableData.TableData_Equipment tableRight;
    /*0x20*/ EquipSubType _subTypeLeft;
    /*0x24*/ EquipSubType _subTypeRight;
    /*0x28*/ PTShare.Define.EquipParts _partsTypeLeft;
    /*0x2c*/ PTShare.Define.EquipParts _partsTypeRight;

    /*0x14baf04*/ EquipSetItem_Inventory_Comparer_Sort();
    /*0x14c2160*/ int Compare(EquipSetItem left, EquipSetItem right);
}

class Helper_FactionBuff
{
    static /*0x0*/ bool[] FactionBuffEnableListAlly;
    static /*0x8*/ bool[] FactionBuffEnableListAlly2;
    static /*0x10*/ bool[] FactionBuffEnableListEnemy;
    static /*0x18*/ int m_nBuffDataCount;
    static /*0x1c*/ bool m_bStartInit;

    static /*0x10f91f4*/ Helper_FactionBuff();
    static /*0x10f8e54*/ void SetFactionBuffEnable(int _nIndex, bool _bValue, Helper_FactionBuff.FactionBuffType _eBuffType);
    static /*0x10f90d0*/ bool GetFactionBuffEnable(int _nIndex, Helper_FactionBuff.FactionBuffType _eBuffType);
    static /*0x10f8fa0*/ void StartInit();

    enum FactionBuffType
    {
        Ally = 0,
        Ally2 = 1,
        Enemy = 2,
    }
}

class Helper_GuiAction
{
    static string CashShopPopup_InitializePopup = "InitializePopup";
    static string HeroManagePopup_InitalizeBook = "InitalizeBook";
    static string HeroManagePopup_InitalizeHero = "InitalizeHero";
    static string HeroSkinPopup_InitializeFastSkin = "InitializeFastSkin";
    static string HeroMainWindow_SetCurrentMenu = "SetCurrentMenu";
    static string MainUserWindow_InitalizeMenu = "InitalizeMenu";
    static string RelationListPopup_InitializePopup = "InitializePopup";
    static string RelationDetailPopup_InitializePopup = "InitializePopup";

    static /*0x10f91f8*/ void AddMainUserWindowInitalizeMenu(MainMenuType menuType);
    static /*0x10f9398*/ void AddHeroManagePopup_Book();
    static /*0x10f9554*/ void AddHeroManagePopup_Book(object[] param);
    static /*0x10f9604*/ void OpenHeroInfo_HeroBook();
    static /*0x10f9764*/ void OpenHeroInfo_Relation(TableData.TableData_Unitbase unit, bool arrow, TableData.TableData_Relation relation);
    static /*0x10f9a1c*/ void OpenHeroInfo_Shop(DefineCashShop.CashShopCategoryType categoryType, DefineCashShop.CashShopTabType tabType, int heroID);
    static /*0x10f9c84*/ void OpenHeroInfo_SkinRoom(TableData.TableData_Unitbase unit, PTShare.Define.SHero hero, int currentIndex, bool isBook);
    /*0x10fa280*/ Helper_GuiAction();
}

class Helper_Handler
{
    static /*0x10fa288*/ void HandleDragScrollSound(UnityEngine.Vector2 value);
}

class Helper_Hero
{
    static /*0x10fa2cc*/ PTShare.Define.SHero ConvertSBattleHeroToSHero(PTShare.Define.SBattleHero _sBattleHero);
    static /*0x10fa35c*/ PTShare.Define.SHero ConvertUnitSpawnInfoToSHero(UnitSpawnInfo _unitSpawnInfo);
    static /*0x10fa3ec*/ PTShare.Define.SHero ConvertSSmallHeroToSHero(PTShare.Define.SSmallHero _sSmallHero);
    static /*0x10fa474*/ PTShare.Define.SSmallHero ConvertSHeroToSSmallHero(PTShare.Define.SHero _sHero);
    static /*0x10fa4fc*/ int GetFakeCp(bool isCorrectionApply, int viewCP, int monsterCount);
    static /*0x10fa5d8*/ string GetTotalPowerbyUnitStage(System.Collections.Generic.List<UnitSpawnInfo> _unitStages, PTShare.Define.SStatBonus _statbonus);
    static /*0x10fa7c8*/ long GetTotalPowerHero(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, int _nLevelOffset);
    static /*0x10fab5c*/ long GetTotalPowerHero(PTShare.Define.SConditionHero _hero, PTShare.Define.SStatBonus _statbonus, int _nLevelOffset);
    static /*0x10faef0*/ long GetTotalPowerBattleHeroList(System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisBattleHero, PTShare.Define.SStatBonus _statbonus);
    static /*0x10faff0*/ long GetTotalPowerBattleHeroList(System.Collections.Generic.List<UnitSpawnInfo> _lisUnitSpawnInfo, PTShare.Define.SStatBonus _statbonus);
    static /*0x10fb0f0*/ Battle.CharacterStat GetTotalCharacterStat(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, int _nLevelOffest);
    static /*0x10fb458*/ long GetHeroSelectValueTotalPower(System.Collections.Generic.List<Battle.HeroSelectValue> _liValue, PTShare.Define.SStatBonus _statbonus);
    static /*0x10fb540*/ long GetTotalCombatPowerByUser(PTShare.Define.SStatBonus _statbonus);
    static /*0x10fb684*/ bool EnablePromote(System.Collections.Generic.List<PTShare.Define.SHero> _containTarget, PTShare.Define.SHero _sHero);
    static /*0x10fb9d0*/ System.Collections.Generic.List<Battle.BattleGraphValue> ReturnBattleGraphView(string _statistics, System.Collections.Generic.List<PTShare.Define.SSmallHero> _sSmallHeroes, System.Collections.Generic.List<UnitSpawnInfo> _unitStages);
    static /*0x10fbef4*/ System.Collections.Generic.List<Battle.BattleGraphValue> ReturnBattleGraphView(string _statistics, System.Collections.Generic.List<PTShare.Define.SSmallHero> _sSmallMyHeros, System.Collections.Generic.List<PTShare.Define.SSmallHero> _sSmallVSHeros);
    static /*0x10fc3e0*/ System.Collections.Generic.List<Battle.BattleGraphValue> ReturnBattleGraphView(string _statistics, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisAllyHeros, System.Collections.Generic.List<PTShare.Define.SBattleHero> _lisEnemyHeros);
    static /*0x10fc918*/ bool IsPossibleLevelUpHero(PTShare.Define.SHero _hero);
    static /*0x10fca18*/ bool IsNextRequireTierHero(PTShare.Define.SHero _hero);
    static /*0x10fca8c*/ bool IsMaxLevelHero(PTShare.Define.SHero _hero, int _nOffsetLv);
    static /*0x10fcad8*/ bool IsMaxGradeHero(PTShare.Define.SHero _hero);
    static /*0x10fcba0*/ PTShare.Define.SProperty GetHeroResetMaterials(PTShare.Define.SHero _hero);
    static /*0x10fce80*/ void GetHeroUseMaterials(System.Collections.Generic.List<Rewards> _reward, int _nBaseLevel, int _nLevel);
    static /*0x10fd1b8*/ PTShare.Define.SProperty GetHeroRevertMaterials(PTShare.Define.SHero _hero);
    static /*0x10fd578*/ void SetMostFiveHeroes(System.Collections.Generic.List<PTShare.Define.SHero> _liHero);
    static /*0x10fd6c8*/ PTShare.Define.SGuildWarHero ConvertSGuildWarHero(PTShare.Define.SVerifyHero source);
    static /*0x10fd900*/ PTShare.Define.SGuildWarHero ConvertSGuildWarHero(PTShare.Define.SBattleHero source);
    static /*0x10fd9fc*/ PTShare.Define.SGuildWarHero ConvertSGuildWarHero(PTShare.Define.SGuildWarBattleHero source);
    static /*0x10fd7c8*/ System.Collections.Generic.List<PTShare.Define.SEquip> <ConvertSGuildWarHero>g__ChangeToSEquip|25_0(System.Collections.Generic.List<PTShare.Define.SVerifyEquip> _equips);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ Battle.CharacterStat equipStat;
        /*0x18*/ TableData.TableData_Unitbase _base;

        /*0xf75588*/ <>c__DisplayClass6_0();
        /*0xf75590*/ void <GetTotalPowerHero>b__0(PTShare.Define.SEquip _equip);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ Battle.CharacterStat equipStat;
        /*0x18*/ TableData.TableData_Unitbase _base;

        /*0xf75654*/ <>c__DisplayClass7_0();
        /*0xf7565c*/ void <GetTotalPowerHero>b__0(PTShare.Define.SEquip _equip);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf75720*/ <>c__DisplayClass8_0();
        /*0xf75728*/ long <GetTotalPowerBattleHeroList>b__0(PTShare.Define.SBattleHero _hero);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf7575c*/ <>c__DisplayClass9_0();
        /*0xf75764*/ long <GetTotalPowerBattleHeroList>b__0(UnitSpawnInfo _hero);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ Battle.CharacterStat equipStat;
        /*0x18*/ TableData.TableData_Unitbase _base;

        /*0xf7500c*/ <>c__DisplayClass10_0();
        /*0xf75014*/ void <GetTotalCharacterStat>b__0(PTShare.Define.SEquip _equip);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf750d8*/ <>c__DisplayClass11_0();
        /*0xf750e0*/ long <GetHeroSelectValueTotalPower>b__0(Battle.HeroSelectValue x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ PTShare.Define.SStatBonus _statbonus;

        /*0xf75188*/ <>c__DisplayClass12_0();
        /*0xf75190*/ long <GetTotalCombatPowerByUser>b__0(PTShare.Define.SHero _hero);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ TableData.TableData_Unitgradelv tUnitGradeLv;
        /*0x18*/ PTShare.Define.SHero _sHero;

        /*0xf751a8*/ <>c__DisplayClass13_0();
        /*0xf751b0*/ bool <EnablePromote>b__0(PTShare.Define.SHero x);
        /*0xf751e0*/ bool <EnablePromote>b__1(PTShare.Define.SHero x);
        /*0xf75234*/ bool <EnablePromote>b__2(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ PTShare.Define.SProperty _reward;

        /*0xf75288*/ <>c__DisplayClass21_0();
        /*0xf75290*/ void <GetHeroResetMaterials>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ PTShare.Define.SProperty reward;
        /*0x18*/ PropertyType faction;
        /*0x20*/ System.Action<Rewards> <>9__2;

        /*0xf752ac*/ <>c__DisplayClass23_0();
        /*0xf752b4*/ void <GetHeroRevertMaterials>b__2(Rewards r);
        /*0xf75344*/ int <GetHeroRevertMaterials>g__GetFactionItem|0();
        /*0xf753d8*/ System.ValueTuple<int, int> <GetHeroRevertMaterials>g__GetFactionSlime|1();
    }
}

class Helper_Housing
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>>> m_HousingBuffStatDicWithUnitID;

    static /*0x10fe390*/ Helper_Housing();
    static /*0x10fdadc*/ void RenewHousingHeroEffectDatas(PTShare.Define.SStatBonus _statBonus);
    static /*0x10fdb50*/ void RenewHousingHeroEffectDatas(string _housingGroupStr);
    static /*0x10fdfe8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> GetHousingHeroEffectDicWithUnitID(PTShare.Define.SStatBonus _statBonus);
    static /*0x10fdbcc*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> GetHousingHeroEffectDicWithUnitID(string _housingGroupStr);
    static /*0x10fe244*/ System.Collections.Generic.List<System.ValueTuple<int, int>> GetHousingGroupDataList(PTShare.Define.SStatBonus _statBonus);
    static /*0x10fe060*/ System.Collections.Generic.List<System.ValueTuple<int, int>> GetHousingGroupDataList(string _housingGroupStr);
    static /*0x10fe2bc*/ byte <GetHousingGroupDataList>g__GetByte|6_0(ref Helper_Housing.<> );
    static /*0x10fe308*/ short <GetHousingGroupDataList>g__GetInt16|6_1(ref Helper_Housing.<> );

    struct <>c__DisplayClass6_0
    {
        /*0x10*/ byte[] byteDatas;
        /*0x18*/ int curByteIndex;
    }
}

class Helper_Resonance
{
    static /*0x10fe508*/ Rewards GetUnlockCurrencyReward();
    static /*0x10fe748*/ Rewards GetUnlockPriceReward();
    static /*0x10fe82c*/ Rewards GetCleaningReward();
    static /*0x10fe910*/ long GetUnlockCurrency();
    static /*0x10fea70*/ long GetUnlockPrice();
    static /*0x10febc0*/ bool IsVaildCurrency();
    static /*0x10febf8*/ void OpenBuyResonanceSlotPopup(System.Action _currencyCallback, System.Action _priceCallback);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ System.Action _currencyCallback;
        /*0x18*/ System.Action _priceCallback;

        /*0xf757a4*/ <>c__DisplayClass6_0();
        /*0xf757ac*/ void <OpenBuyResonanceSlotPopup>b__0(bool result);
        /*0xf757c4*/ void <OpenBuyResonanceSlotPopup>b__1(bool result);
    }
}

class Helper_Reward
{
    static /*0x0*/ int lastCurrentLevel;

    static /*0x1102398*/ Helper_Reward();
    static /*0x10ff10c*/ void ResetLastCurrentLevel();
    static /*0x10ff170*/ void UpdateReward(PTShare.Define.SProperty _property);
    static /*0x10ff6d4*/ void UpdateReward(PTShare.Define.SCurrency _curCurrency, PTShare.Define.SProperty _property);
    static /*0x10ff79c*/ void ShowReward(PTShare.Define.SProperty _property, System.Action _exitCallback, ItemRewardBoxType[] _ignoreType);
    static /*0x10ff894*/ void ShowReward(System.Collections.Generic.List<Rewards> _reward, System.Action _exitCallback);
    static /*0x10ff988*/ void ShowReward(System.Collections.Generic.List<Rewards> _reward, bool combine, System.Action _exitCallback);
    static /*0x10ffa80*/ void ShowActorReward(System.Collections.Generic.List<PTShare.Define.SHero> _sHeroes, System.Action _exitCallBack);
    static /*0x10ffb70*/ bool ShowLevelReward();
    static /*0x10f156c*/ System.Collections.Generic.List<Rewards> ReturnRewards(string _rewards, int _userexp, int _vippoint);
    static /*0x10ffd4c*/ System.Collections.Generic.List<Rewards> CombineRewardList(System.Collections.Generic.List<Rewards> _reward, bool _sort);
    static /*0x10fffb8*/ int FindSameRewardIndex(System.Collections.Generic.List<Rewards> _reward, PTShare.Define.SProperty _property);
    static /*0x1100480*/ bool IsNotVaildRewardsNotice(Rewards _Reward);
    static /*0x1100584*/ bool IsNotVaildRewardsNotice(System.Collections.Generic.List<Rewards> _liRewards);
    static /*0x110093c*/ bool IsNotVaildRewards(System.Collections.Generic.List<Rewards> _liRewards);
    static /*0x10ff4a8*/ void UpdatePlayerLevel(long _exp);
    static /*0x10fe688*/ Rewards Discount(Rewards reward, int discount);
    static /*0x1100b20*/ Rewards Discount(Rewards reward, float discount);
    static /*0x1100c20*/ Rewards Impression(Rewards reward, int impression);
    static /*0x1100c88*/ Rewards Impression(Rewards reward, float impression);
    static /*0x1100d0c*/ System.ValueTuple<long, long> GetRewardAmount(Rewards reward);
    static /*0x1100e6c*/ System.ValueTuple<int, int, int> GetIdleMinutesRewards();
    static /*0x1100344*/ System.Collections.Generic.List<Rewards> ConvertSpropertyToRewardList(PTShare.Define.SProperty sproperty);
    static /*0x1101314*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, PTShare.Define.Wealth wealth, int value);
    static /*0x110144c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, PTShare.Define.SCurrency sCurrency);
    static /*0x110155c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SItem> items);
    static /*0x110170c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SEquip> equips);
    static /*0x11018f0*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SSkin> sSkins);
    static /*0x1101a84*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SLittleHero> sLittleHero);
    static /*0x1101c44*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SPassPoint> sPassPoint);
    static /*0x1101e50*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SArtifact> sArtifact);
    static /*0x110204c*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SFrame> sFrame);
    static /*0x1102240*/ void AddRewards(ref System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> sHousingObj);

    class <>c
    {
        static /*0x0*/ Helper_Reward.<> <>9;
        static /*0x8*/ System.Func<char, bool> <>9__9_0;
        static /*0x10*/ System.Predicate<Rewards> <>9__21_0;
        static /*0x18*/ System.Predicate<Rewards> <>9__21_1;

        static /*0xf757dc*/ <>c();
        /*0xf7583c*/ <>c();
        /*0xf75844*/ bool <ReturnRewards>b__9_0(char w);
        /*0xf75874*/ bool <GetIdleMinutesRewards>b__21_0(Rewards x);
        /*0xf7591c*/ bool <GetIdleMinutesRewards>b__21_1(Rewards x);
    }
}

class Sort_TableReward : System.Collections.Generic.IComparer<Rewards>
{
    static /*0x0*/ System.Collections.Generic.List<PTShare.Define.Wealth> mWealthTable;

    static /*0x14526e0*/ Sort_TableReward();
    /*0x14526d8*/ Sort_TableReward();
    /*0x14523fc*/ int Compare(Rewards x, Rewards y);

    class <>c__DisplayClass1_0
    {
        /*0x10*/ Rewards x;
        /*0xd8*/ Rewards y;

        /*0xcc0774*/ <>c__DisplayClass1_0();
        /*0xcc077c*/ bool <Compare>b__0(PTShare.Define.Wealth w);
        /*0xcc078c*/ bool <Compare>b__1(PTShare.Define.Wealth w);
    }
}

enum SkinKeyType
{
    NONE = 0,
    GET = 1,
    ULT = 2,
    DEATH = 3,
    ENTRY = 4,
    GREETING = 5,
    TITLE = 6,
}

class Helper_Skin
{
    static /*0x110253c*/ string GetSkinKey(SkinKeyType _eSkinKeyType);
}

class Helper_UserStatus
{
    static /*0x0*/ long _totalPower;
    static /*0x8*/ long _highTotalPower;
    static /*0x10*/ int _guildwarHeroId;
    static /*0x18*/ System.Action OnUpdateHelperUserStatus;

    static /*0x1103460*/ Helper_UserStatus();
    static /*0x11025bc*/ void add_OnUpdateHelperUserStatus(System.Action value);
    static /*0x11026b4*/ void remove_OnUpdateHelperUserStatus(System.Action value);
    static /*0x11027ac*/ long GetHighTotalPower();
    static /*0x1102810*/ void SetHighTotalPower(long _power);
    static /*0x1102878*/ long GetTotalPower();
    static /*0x11028dc*/ void SetTotalPower(long _power);
    static /*0x1102944*/ long SetTotalPower(bool _isAdd, PTShare.Define.SHero _hero, bool sendHighTotalCP);
    static /*0x1102cac*/ void RemoveBonusStat();
    static /*0x1102e8c*/ void AddBonusStat();
    static /*0x1103090*/ void AddTotalPower(Battle.CharacterStat.StatType type);
    static /*0x1102b8c*/ bool SendHighTotalCP();
    static /*0x110311c*/ void SetGuildWarHeroId(int heroId);
    static /*0x1103184*/ void SendGuildWarUpdateMyCP(int heroId);
    static /*0x11032f4*/ void SendGuildWarUpdateMyCP();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ long _equipCP;
        /*0x18*/ PTShare.Define.SHero _hero;
        /*0x20*/ bool _isAdd;

        /*0xf759c8*/ <>c__DisplayClass10_0();
        /*0xf759d0*/ void <SetTotalPower>b__0(PTShare.Define.SEquip x);
    }
}

class Helper_Verify
{
    static /*0x0*/ int CurrentVerifyPass;
    static /*0x4*/ int CurrentVerifyDoubt;
    static /*0x8*/ int CurrentVerifyFail;

    static /*0x1103550*/ Helper_Verify();
    static /*0x1103464*/ int get_CurrentVerifyTotal();
    static /*0x11034d8*/ void ClearCounts();
}

class AbilityConfirmPopup : GuiBase
{
    /*0x40*/ AbilityEntity[] m_beforeEntitys;
    /*0x48*/ AbilityEntity[] m_afterEntitys;
    /*0x50*/ int m_heroTableId;

    /*0x1201b68*/ AbilityConfirmPopup();
    /*0x1201478*/ void OnCreate();
    /*0x120147c*/ void OnDelete();
    /*0x1201480*/ void OnEnter();
    /*0x1201484*/ void OnFinish();
    /*0x1201488*/ void OnLeave();
    /*0x120148c*/ void OnStart();
    /*0x1201490*/ void OnExit();
    /*0x1201494*/ void InitPopup(int heroTableId, System.Collections.Generic.List<int> beforeAbility, System.Collections.Generic.List<int> afterAbility);
    /*0x1201840*/ void OnClickConfirm();
    /*0x12019d4*/ void OnClickCancel();
    /*0x1201b70*/ void <OnClickConfirm>b__11_0(bool confirm);
    /*0x1201dfc*/ void <OnClickConfirm>b__11_1();
    /*0x1201e80*/ void <OnClickCancel>b__12_0(bool confirm);
}

class AbilityEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_lockImage;
    /*0x20*/ AtlasImage m_frameImage;
    /*0x28*/ LocalizeString m_desc;
    /*0x30*/ UnityEngine.GameObject m_lockMask;
    /*0x38*/ ParticleBase m_particle;
    /*0x40*/ TooltipData_Percent m_tooltipPercent;
    /*0x48*/ TooltipTargetUI m_tooltipUI;
    /*0x50*/ int m_slotIndex;
    /*0x58*/ AbilityPopup m_parent;
    /*0x60*/ int m_abilityIndex;
    /*0x64*/ bool m_isLock;
    /*0x68*/ System.Action m_lockCallBack;

    /*0x12029ac*/ AbilityEntity();
    /*0x1201eb4*/ bool IsLock();
    /*0x1201ebc*/ void Unlock();
    /*0x1202148*/ void ShowParticle();
    /*0x12016d8*/ void InitEntity(int slotIndex, AbilityPopup parent, int abilityData, System.Action lockCallBack);
    /*0x1201f00*/ void SetLockImage(bool isLock);
    /*0x120222c*/ void SetFrame();
    /*0x1202378*/ void SetDesc();
    /*0x1202650*/ void SetTooltipData();
    /*0x1202810*/ void OnClickLock();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ TableData.TableData_Abilityoptionvalue table;

        /*0xe12490*/ <>c__DisplayClass19_0();
        /*0xe12498*/ bool <SetTooltipData>b__0(TableData.TableData_Abilityoptionvalue f);
    }
}

class AbilityHeroSelectPopup : GuiBase
{
    /*0x40*/ WishSlot m_selectHeroSlot;
    /*0x48*/ HeroPropertySlotWindow m_propertySlotWindow;
    /*0x50*/ ScrollContent_AbilityHeroSlot m_scrollContent;
    /*0x58*/ UnityEngine.UI.Button m_button;
    /*0x60*/ UnityEngine.GameObject m_backButton;
    /*0x68*/ int m_selectTableId;
    /*0x6c*/ int m_selectFaction;
    /*0x70*/ System.Collections.Generic.List<int> m_heroList;
    /*0x78*/ System.Action<int> m_onSelect;

    /*0x1203854*/ AbilityHeroSelectPopup();
    /*0x1202c14*/ void OnCreate();
    /*0x1202c18*/ void OnDelete();
    /*0x1202c1c*/ void OnEnter();
    /*0x1202c20*/ void OnExit();
    /*0x1202c84*/ void OnFinish();
    /*0x1202c88*/ void OnLeave();
    /*0x1202c8c*/ void OnStart();
    /*0x1202c90*/ void InitPopup(int selectTableId, System.Action<int> onSelect);
    /*0x1202ff8*/ void UpdateHeroList();
    /*0x1202c48*/ void Clear();
    /*0x1202f18*/ void InitPropertySlot();
    /*0x1202fa8*/ void UpdateSelectSlot(int tableId);
    /*0x1202fcc*/ void UpdateButton();
    /*0x1202db0*/ void BindEvent();
    /*0x1203370*/ void RemoveEvent();
    /*0x12034d0*/ void HandleScrollContent(int index, AbilityHeroSlot obj);
    /*0x12036dc*/ void HandleChangeFaction(int faction);
    /*0x12036e4*/ void HandleOnSelect(int tableId);
    /*0x1203774*/ void OnConfirm();

    class <>c
    {
        static /*0x0*/ AbilityHeroSelectPopup.<> <>9;
        static /*0x8*/ System.Comparison<int> <>9__17_0;

        static /*0xe124c8*/ <>c();
        /*0xe12528*/ <>c();
        /*0xe12530*/ int <UpdateHeroList>b__17_0(int lhs, int rhs);
    }
}

class AbilityHeroSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ WishPropertySlot m_slot;
    /*0x20*/ AtlasImage m_grade;
    /*0x28*/ int m_tableId;
    /*0x30*/ System.Action<int> m_onClick;

    /*0x1203a28*/ AbilityHeroSlot();
    /*0x12035b0*/ void InitSlot(int tableId, System.Action<int> onClick);
    /*0x12039c8*/ void OnClick();
}

class AbilityItemSelectPopup : GuiBase
{
    /*0x40*/ ScrollContent_AbilityItemSlot m_scollContent;
    /*0x48*/ UnityEngine.GameObject m_empty;
    /*0x50*/ int m_abilityGrade;
    /*0x54*/ int m_selectTableId;
    /*0x58*/ System.Collections.Generic.List<int> m_itemList;
    /*0x60*/ System.Action<int> m_onSelect;

    /*0x1204554*/ AbilityItemSelectPopup();
    /*0x1203a30*/ void OnCreate();
    /*0x1203a34*/ void OnDelete();
    /*0x1203a38*/ void OnEnter();
    /*0x1203a3c*/ void OnFinish();
    /*0x1203a40*/ void OnLeave();
    /*0x1203a44*/ void OnStart();
    /*0x1203a48*/ void OnExit();
    /*0x1203b44*/ void InitPopup(int selectItemId, int abilityGrade, System.Action<int> onSelect);
    /*0x1203d7c*/ void AddList(int itemId);
    /*0x1203e4c*/ void Refresh();
    /*0x1203ca0*/ void BindEvent();
    /*0x1203a70*/ void RemoveEvent();
    /*0x1203ea8*/ void HandleScrollContent(int index, AbilityItemSlot obj);
    /*0x120436c*/ void HandleSelectItem(int tableId);
    /*0x1204400*/ void OnClickConfirm();
}

class AbilityItemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemSlot;
    /*0x20*/ LocalizeString m_itemName;
    /*0x28*/ LocalizeString m_itemDesc;
    /*0x30*/ UnityEngine.GameObject m_checkMark;
    /*0x38*/ int m_tableId;
    /*0x40*/ System.Action<int> m_onSelect;

    /*0x120462c*/ AbilityItemSlot();
    /*0x1203fcc*/ void InitSlot(int tableId, bool isCheck, System.Action<int> onSelect);
    /*0x12045cc*/ void OnClick();
}

class AbilityManager : Singleton.Data.SingletonData<AbilityManager>
{
    /*0x1c*/ int m_freeRollCount;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SAbilityGroup> m_abilityList;

    /*0x1205060*/ AbilityManager();
    /*0x1204634*/ bool InitInstance();
    /*0x120463c*/ void ReleaseInstance();
    /*0x1204640*/ void ReleaseSingleton();
    /*0x120468c*/ int GetFreeRollCount();
    /*0x1204694*/ bool EnableFreeRoll();
    /*0x12046f0*/ PTShare.Define.SAbilityGroup FindAbilityGroup(int heroTableId);
    /*0x12047e0*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> FindTableAbilityOptionValueList(int abilityIndex);
    /*0x12038cc*/ int FindGrade(int heroTableId);
    /*0x1204818*/ void SetFirst(int freeRollCount, System.Collections.Generic.List<PTShare.Define.SAbilityGroup> abilityList);
    /*0x1204824*/ void Send_FreeRoll(int heroTableId, System.Action callBack);
    /*0x12049c4*/ void Send_CurrencyRoll(int heroTableId, PTShare.Define.Currency currencyType, System.Collections.Generic.List<bool> lockAbility, System.Action callBack);
    /*0x1204c90*/ void Send_ItemRoll(int heroTableId, int itemTableId, System.Action callBack);
    /*0x1201c6c*/ void Send_Confirm(int heroTableId, System.Action callBack);
    /*0x1204e38*/ void RefreshData(PTShare.Define.SAbilityGroup data);
    /*0x1204fe0*/ void DailyChange();

    class <>c__DisplayClass7_0
    {
        /*0x10*/ int heroTableId;

        /*0xe12bf8*/ <>c__DisplayClass7_0();
        /*0xe12c00*/ bool <FindAbilityGroup>b__0(PTShare.Define.SAbilityGroup f);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ int heroTableId;

        /*0xe12c24*/ <>c__DisplayClass9_0();
        /*0xe12c2c*/ bool <FindGrade>b__0(PTShare.Define.SAbilityGroup f);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ AbilityManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xe126bc*/ <>c__DisplayClass11_0();
        /*0xe126c4*/ void <Send_FreeRoll>b__0(ServerProtocol.ResAbilityFreeRoll response);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ AbilityManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xe12724*/ <>c__DisplayClass12_0();
        /*0xe1272c*/ void <Send_CurrencyRoll>b__0(ServerProtocol.ResAbilityCurrencyRoll response);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ int itemTableId;
        /*0x18*/ AbilityManager <>4__this;
        /*0x20*/ System.Action callBack;

        /*0xe12858*/ <>c__DisplayClass13_0();
        /*0xe12860*/ void <Send_ItemRoll>b__0(ServerProtocol.ResAbilityItemRoll response);
    }

    class <>c__DisplayClass13_1
    {
        /*0x10*/ ServerProtocol.ResAbilityItemRoll response;

        /*0xe12b28*/ <>c__DisplayClass13_1();
        /*0xe12b30*/ bool <Send_ItemRoll>b__1(PTShare.Define.SAbilityGroup f);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ AbilityManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xe12b68*/ <>c__DisplayClass14_0();
        /*0xe12b70*/ void <Send_Confirm>b__0(ServerProtocol.ResAbilityConfirm response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ PTShare.Define.SAbilityGroup data;

        /*0xe12bc0*/ <>c__DisplayClass15_0();
        /*0xe12bc8*/ bool <RefreshData>b__0(PTShare.Define.SAbilityGroup f);
    }
}

class AbilityPercentEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ TooltipData_Percent m_tooltipPercent;
    /*0x20*/ LocalizeString m_desc;
    /*0x28*/ LocalizeString m_percent;
    /*0x30*/ System.Collections.Generic.List<TableData.TableData_Abilityoptionvalue> m_tableList;
    /*0x38*/ int m_grade;
    /*0x40*/ string m_abilityOptionId;

    /*0x1205800*/ AbilityPercentEntity();
    /*0x1205400*/ void InitEntity(TableData.TableData_Abilitypercent tableData, int grade, float correctionPercent);
    /*0x12057dc*/ void SetTooltipData();

    class <>c__DisplayClass6_0
    {
        /*0x10*/ string gradeToString;

        /*0xe12c50*/ <>c__DisplayClass6_0();
        /*0xe12c58*/ bool <InitEntity>b__0(TableData.TableData_Abilityoptionvalue f);
    }
}

class AbilityPercentPopup : GuiBase
{
    /*0x40*/ AtlasImage m_gradeBG;
    /*0x48*/ AtlasImage m_gradeIcon;
    /*0x50*/ AtlasImage m_gradeTextImage;
    /*0x58*/ ScrollContent_AbilityPercentEntity m_scollContent;
    /*0x60*/ LocalizeString m_title;
    /*0x68*/ UnityEngine.GameObject m_prevButton;
    /*0x70*/ UnityEngine.GameObject m_nextButton;
    /*0x78*/ System.Collections.Generic.List<TableData.TableData_Abilitypercent> m_abilityList;
    /*0x80*/ int m_heroTableId;
    /*0x84*/ int m_showGrade;
    /*0x88*/ float m_correctionPercent;

    /*0x1206530*/ AbilityPercentPopup();
    /*0x1205894*/ void OnCreate();
    /*0x1205898*/ void OnDelete();
    /*0x120589c*/ void OnEnter();
    /*0x12058a0*/ void OnExit();
    /*0x12059f8*/ void OnFinish();
    /*0x12059fc*/ void OnLeave();
    /*0x1205a00*/ void OnStart();
    /*0x1205a04*/ void InitPopup(int heroTableId, int showGrade);
    /*0x1205b74*/ void Refresh();
    /*0x1205bf0*/ void UpdateData();
    /*0x1205e68*/ void UpdateTitle();
    /*0x1206164*/ void UpdateGrade();
    /*0x1205fe4*/ void UpdateButton();
    /*0x1205a98*/ void BindEvent();
    /*0x1205924*/ void RemoveEvent();
    /*0x12063a0*/ void HandleScrollContent(int index, AbilityPercentEntity obj);
    /*0x1206428*/ void OnClickPrev();
    /*0x12064ac*/ void OnClickNext();
    /*0x1206398*/ bool CheckUsePercent(TableData.TableData_Abilitypercent tableData);
}

class AbilityPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefreshUI;
    /*0x40*/ UnityEngine.GameObject m_emptyGameObject;
    /*0x48*/ AtlasImage m_gradeBG;
    /*0x50*/ AtlasImage m_gradeIcon;
    /*0x58*/ AtlasImage m_gradeTextImage;
    /*0x60*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x68*/ AbilityEntity[] m_abilityEntitys;
    /*0x70*/ AmountSlot m_goldAmount;
    /*0x78*/ AmountSlot m_starAmount;
    /*0x80*/ AmountSlot m_itemAmount;
    /*0x88*/ LocalizeString m_freeText;
    /*0x90*/ LocalizeString m_goldText;
    /*0x98*/ LocalizeString m_starText;
    /*0xa0*/ LocalizeString m_disableText;
    /*0xa8*/ LocalizeString m_characterText;
    /*0xb0*/ CurrencyTopWindow m_currencyTopWindow;
    /*0xb8*/ SingleTab m_buttonTabs;
    /*0xc0*/ UnityEngine.UI.Toggle m_toggle;
    /*0xc8*/ int m_selectHero;
    /*0xcc*/ int m_selectItem;
    /*0xd0*/ string m_grade;
    /*0xd8*/ PTShare.Define.SAbilityGroup m_ability;
    /*0xe0*/ TableData.TableData_Abilityreset m_resetData;

    static /*0x1209a40*/ AbilityPopup();
    /*0x12099ec*/ AbilityPopup();
    /*0x1206868*/ void OnCreate();
    /*0x120686c*/ void OnDelete();
    /*0x1206870*/ void OnEnter();
    /*0x1206874*/ void OnFinish();
    /*0x1206878*/ void OnLeave();
    /*0x120687c*/ void OnStart();
    /*0x1206880*/ void OnExit();
    /*0x1202200*/ bool EnableLock();
    /*0x1206ab8*/ int GetLockCount();
    /*0x1206b24*/ System.Collections.Generic.List<bool> GetLockList();
    /*0x1206c0c*/ int GetSelectHeroTableId();
    /*0x1206c14*/ void InitPopup(int selectHero);
    /*0x1206ff0*/ void ClearData();
    /*0x1207140*/ void UpdateData();
    /*0x1207538*/ void Refresh();
    /*0x12075e8*/ void ShowParticles();
    /*0x12072f0*/ void UpdateUI();
    /*0x1207658*/ void UpdateEntitys();
    /*0x12077ec*/ void UpdateButton();
    /*0x120731c*/ void UpdateCharacter();
    /*0x1207f7c*/ void UpdateGrade();
    /*0x12082b4*/ long GetGoldCost();
    /*0x1208334*/ long GetStarCost();
    /*0x12083b4*/ bool CheckAlarm();
    /*0x1207048*/ void BindEvent();
    /*0x12069c8*/ void RemoveEvent();
    /*0x12085ec*/ void OnClickHelp();
    /*0x1208690*/ void OnClickPercent();
    /*0x1208734*/ void OnClickSelectHero();
    /*0x120882c*/ void OnClickSelectItem();
    /*0x1208a2c*/ void OnClickFreeRoll();
    /*0x1208d68*/ void OnClickGoldAmountRoll();
    /*0x1209090*/ void OnClickStarAmountRoll();
    /*0x12093b8*/ void OnClickItemRoll();
    /*0x1209870*/ void OnClickExit();
    /*0x120987c*/ void OnClickResonance();
    /*0x1209950*/ void OnClickAlarm();
    /*0x1209a44*/ void <OnClickSelectHero>b__52_0(int tableId);
    /*0x1209a6c*/ void <OnClickSelectItem>b__53_0(int tableId);
    /*0x1209a74*/ void <OnClickFreeRoll>b__54_0(bool confirm);
    /*0x1208c44*/ void <OnClickFreeRoll>g__Roll|54_1();
    /*0x1209a80*/ void <OnClickFreeRoll>b__54_2();
    /*0x1209aa4*/ void <OnClickGoldAmountRoll>b__55_0(bool confirm);
    /*0x1208f50*/ void <OnClickGoldAmountRoll>g__Roll|55_1();
    /*0x1209ab0*/ void <OnClickGoldAmountRoll>b__55_2();
    /*0x1209ad4*/ void <OnClickStarAmountRoll>b__56_0(bool confirm);
    /*0x1209278*/ void <OnClickStarAmountRoll>g__Roll|56_1();
    /*0x1209ae0*/ void <OnClickStarAmountRoll>b__56_2();
    /*0x1209b04*/ void <OnClickItemRoll>b__57_1();
    /*0x1209b28*/ void <OnClickResonance>b__59_0();

    enum AbilityTabType
    {
        FREE = 0,
        AMOUNT = 1,
        ITEM = 2,
        DISABLE = 3,
    }

    class <>c
    {
        static /*0x0*/ AbilityPopup.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__57_0;

        static /*0xe12c84*/ <>c();
        /*0xe12ce4*/ <>c();
        /*0xe12cec*/ void <OnClickItemRoll>b__57_0(bool confirm);
    }
}

class DefineAbility
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, int> AbilityGradeMap;
    static /*0x8*/ int ABILITYMINGRADE;
    static /*0xc*/ int ABILITYMAXGRADE;

    static /*0xf5f6e4*/ DefineAbility();
    static /*0xf5f258*/ string ConvertAbilityGrade(int value);
    static /*0xf5f2e0*/ string GetGradeLocalize(int grade);
    static /*0xf5f374*/ bool IsActiveAbilityOption(TableData.TableData_Abilitypercent table, int grade);
    static /*0xf5f3ec*/ float GetAbilityOptionPercent(TableData.TableData_Abilitypercent tableData, int grade);
    static /*0xf5f454*/ TableData.TableData_Abilityoptionvalue FindOptionValue(int optionType, int valueIndex);
    static /*0xf5f5a8*/ int indexToValueIndex(int index);
    static /*0xf5f5cc*/ int indexToGrade(int index);
    static /*0xf5f608*/ int indexToIndex(int index);
    static /*0xf5f624*/ float ConvertValue(PTShare.Define.AbilityOptionType abilityOptionType, float value);
    static /*0xf5f6bc*/ bool IsPercentAbility(PTShare.Define.AbilityOptionType abilityOptionType);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ int valueIndex;

        /*0x1076658*/ <>c__DisplayClass5_0();
        /*0x1076660*/ bool <FindOptionValue>b__0(TableData.TableData_Abilityoptionvalue f);
    }
}

class ScrollContent_AbilityHeroSlot : ScrollContent<AbilityHeroSlot>
{
    /*0xe1883c*/ ScrollContent_AbilityHeroSlot();
}

class ScrollContent_AbilityItemSlot : ScrollContent<AbilityItemSlot>
{
    /*0xe188b4*/ ScrollContent_AbilityItemSlot();
}

class ScrollContent_AbilityPercentEntity : ScrollContent<AbilityPercentEntity>
{
    /*0xe1892c*/ ScrollContent_AbilityPercentEntity();
}

struct SProfile
{
    /*0x10*/ string profileids;
    /*0x18*/ PTShare.Define.Gender gender;
    /*0x20*/ string message;
    /*0x28*/ PTShare.Define.LanguageCode language;

    /*0xa8e804*/ SProfile(string _profileids, PTShare.Define.LanguageCode _lang, PTShare.Define.Gender _gender, string _msg);
    /*0xa8e818*/ void CheckProfileExpire();
}

struct UserData
{
    /*0x10*/ string token;
    /*0x18*/ string chatip;
    /*0x20*/ System.DateTime now;
    /*0x28*/ string nickname;
    /*0x30*/ int level;
    /*0x38*/ long exp;
    /*0x40*/ string campaign;
    /*0x48*/ string hcampaign;
    /*0x50*/ int campaignchapter;
    /*0x54*/ int hcampaignchapter;
    /*0x58*/ System.Collections.Generic.List<int> towerFloors;
    /*0x60*/ bool admin;
    /*0x68*/ long guildid;
    /*0x70*/ string guildname;
    /*0x78*/ PTShare.Define.SCurrency currency;
    /*0x80*/ System.DateTime lastidle;
    /*0x88*/ int heroslot;
    /*0x8c*/ bool newmail;
    /*0x90*/ int fastidleCount;
    /*0x98*/ long playerid;
    /*0xa0*/ string language;
    /*0xa8*/ long tutorial;
    /*0xb0*/ int vipPoint;
    /*0xb4*/ bool olduser;
    /*0xb8*/ PTShare.Define.SPlayer basic;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SPass> passs;
    /*0xc8*/ bool nickfree;
    /*0xc9*/ bool purchaseoff;

    /*0xa8a368*/ UserData(string _token, string _chatip, System.DateTime _now, string _nickname, int _level, long _exp, string _campaign, int _campaignchapter, string _hcampaign, int _hcampaignchapter, bool _admin, long _guildid, string _guildname, PTShare.Define.SCurrency _currency, System.DateTime _lastidle, System.Collections.Generic.List<int> _towerfloors, bool _newmail, int _heroslot, long _playerid, string _language, int _nFastIdleCount, long _tutorial, int _vipPoint, bool _olduser, PTShare.Define.SPlayer _basic, System.Collections.Generic.List<PTShare.Define.SPass> _passs);
}

class AccountManager : Singleton.Data.SingletonData<AccountManager>
{
    static /*0x0*/ System.Action OnChangeUserInfo;
    static /*0x8*/ System.Action OnCallbackTop;
    /*0x20*/ UserData m_curUserData;
    /*0xe0*/ SProfile m_curProfile;
    /*0x100*/ PTShare.Define.SStatBonus m_curStatBonus;
    /*0x108*/ System.Collections.Generic.List<PTShare.Define.SGuild> m_curSearchGuild;
    /*0x110*/ int m_curMaxChannel;
    /*0x118*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> m_curAreaPlayers;
    /*0x120*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> m_curFrameDecorate;
    /*0x128*/ System.Action<PTShare.Define.SProperty> OnCallBackIdle;
    /*0x130*/ bool m_revertFree;

    static /*0x120d908*/ AccountManager();
    static /*0x120a6b4*/ void add_OnChangeUserInfo(System.Action value);
    static /*0x120a7a8*/ void remove_OnChangeUserInfo(System.Action value);
    static /*0x120a89c*/ void add_OnCallbackTop(System.Action value);
    static /*0x120a994*/ void remove_OnCallbackTop(System.Action value);
    /*0x120d890*/ AccountManager();
    /*0x120a5e8*/ bool InitInstance();
    /*0x120a5f0*/ void ReleaseInstance();
    /*0x120a674*/ UserData GetUserData();
    /*0x120a684*/ SProfile GetPlayer();
    /*0x120a690*/ bool GetStatusRevertFree();
    /*0x120a698*/ bool ToggleRevertFree();
    /*0x12049bc*/ string get_UserToken();
    /*0x120aa8c*/ long get_PlayerID();
    /*0x120aa94*/ string get_NickName();
    /*0x120aa9c*/ string get_CurChatIP();
    /*0x120aaa4*/ PTShare.Define.SStatBonus get_StatBonus();
    /*0x120aaac*/ int Level();
    /*0x120aab4*/ long Exp();
    /*0x120aabc*/ long Gold();
    /*0x120aad8*/ long Cash();
    /*0x120aaf4*/ long HeroExp();
    /*0x120ab10*/ long Crystal();
    /*0x120ab2c*/ long FriendShip();
    /*0x120ab48*/ long MazeCoin();
    /*0x120ab64*/ long DungeonCoin();
    /*0x120ab80*/ long PveCoin1();
    /*0x120ab9c*/ long PveCoin2();
    /*0x120abb8*/ int HeroSlot();
    /*0x120ac80*/ string Message();
    /*0x120ac88*/ PTShare.Define.SCurrency GetCurrency();
    /*0x120ac90*/ void set_LastIdle(System.DateTime value);
    /*0x120ad20*/ int get_PlayerServer();
    /*0x120ad3c*/ string get_GuildName();
    /*0x120ad44*/ void SetUserLevel(int level, long exp);
    /*0x120ae80*/ void SetUserDataInfo(ServerProtocol.ResAccountLogin_Normal _resAccountLogin);
    /*0x120b24c*/ void Send_UpdateNickName(string _changeNickName);
    /*0x120b390*/ void Send_UpdateProfile(System.Action _callback);
    /*0x120b540*/ void Send_UpdateProfile(SProfile _sProfile);
    /*0x120b6b8*/ void Send_AccountNew(System.Action _callback);
    /*0x120b7ec*/ void Send_AccountFirst(System.Action _callback);
    /*0x120b968*/ void Send_AccountIdle(bool _isFast, System.Action<PTShare.Define.SProperty> _callback);
    /*0x120babc*/ void Send_AccountDetail(System.Action<ServerProtocol.ResAccountDetail> _callback, long _targetid, string _campaign, int _faction, int _floor, PTShare.Define.ArenaSubType _arena);
    /*0x120bc30*/ void Send_AccountQuit();
    /*0x120bda0*/ void Send_AccountCancelQuit(string guestid, string authtoken, System.Action _callback);
    /*0x120bee0*/ void Send_GetAreaPlayers(System.Action _callback);
    /*0x120c014*/ void Send_MoveArea(int nAreaID);
    /*0x120c18c*/ void Send_AccountUpdateCP(System.Action callback, long cp, long arenacp, long worldarenacp);
    /*0x120c27c*/ void Send_AccountLanguage(System.Action<int, int> callback);
    /*0x120c3b0*/ void Send_AccountPreviewIdle(System.Action<PTShare.Define.SProperty> callback);
    /*0x120c4e4*/ void Send_AccountUpdateAttend(System.Action callBack);
    /*0x120c618*/ void UpdateServerTime(System.DateTime time);
    /*0x120c620*/ void UpdateSAsset(PTShare.Define.SCurrency _currency);
    /*0x120c70c*/ void UpdateVipPoint(int _vipPoint);
    /*0x120ade4*/ void UpdateLevel(int _level, long _exp);
    /*0x120c824*/ void UpdateCampaign(StageDifficult _diff, string _campaign);
    /*0x120c8d4*/ void UpdateChapter(StageDifficult _diff, int _chapter);
    /*0x120c980*/ void UpdateNewMail(bool _enable);
    /*0x120c98c*/ void UpdateHeroSlot(int _sloAmount);
    /*0x120ca20*/ void UpdateRewardPopup(PTShare.Define.SProperty _tProperty);
    /*0x120cb84*/ void UpdateRewardIdlePopup(System.DateTime _clearTime, PTShare.Define.SProperty _tProperty);
    /*0x120cd1c*/ void UpdateTowerFloor(int _nFaction, int _nFloor);
    /*0x120cddc*/ void UpdateLanguage(LocaleLanguageType _eType);
    /*0x120ce7c*/ void UpdateTrainingLv(int _nlv, bool _updateCp);
    /*0x120cf3c*/ void UpdateHousingGroup(string str, bool _updateCp);
    /*0x120cffc*/ void UpdateGuildId(int _id);
    /*0x120d008*/ void UpdateGuildName(string _name);
    /*0x120d010*/ void UpdateFastIdleCount(int _count);
    /*0x120d018*/ System.Collections.Generic.List<PTShare.Define.SAreaPlayer> GetAreaPlayerList();
    /*0x120d020*/ int GetAreaMaxChannel();
    /*0x120d028*/ bool IsUseDecorateFrame(int nIndex);
    /*0x120d218*/ PTShare.Define.SProfileDecorate GetProfileDecorate(int nIndex);
    /*0x120d314*/ string GetProfileDecorateExpireDate(int nIndex);
    /*0x120d5ac*/ void UpdateProfileDecorateFrame(System.Collections.Generic.List<PTShare.Define.SFrame> frameList);

    class <>c__DisplayClass53_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ string _changeNickName;

        /*0xe12edc*/ <>c__DisplayClass53_0();
        /*0xe12ee4*/ void <Send_UpdateNickName>b__0(ServerProtocol.ResUpdateNickname _resUpdateNickName);
    }

    class <>c
    {
        static /*0x0*/ AccountManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__53_1;
        static /*0x10*/ System.Action<ServerProtocol.ResAccountQuit> <>9__60_0;
        static /*0x18*/ System.Action<ServerProtocol.ResAccountMoveArea> <>9__63_0;

        static /*0xe12cf0*/ <>c();
        /*0xe12d50*/ <>c();
        /*0xe12d58*/ void <Send_UpdateNickName>b__53_1(PTShare.Define.SItem item);
        /*0xe12de0*/ void <Send_AccountQuit>b__60_0(ServerProtocol.ResAccountQuit res);
        /*0xe12e60*/ void <Send_MoveArea>b__63_0(ServerProtocol.ResAccountMoveArea res);
    }

    class <>c__DisplayClass54_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe130e4*/ <>c__DisplayClass54_0();
        /*0xe130ec*/ void <Send_UpdateProfile>b__0(ServerProtocol.ResUpdateProfile _resUpdateProfile);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ SProfile _sProfile;

        /*0xe13258*/ <>c__DisplayClass55_0();
        /*0xe13260*/ void <Send_UpdateProfile>b__0(ServerProtocol.ResUpdateProfile _resUpdateProfile);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe1334c*/ <>c__DisplayClass56_0();
        /*0xe13354*/ void <Send_AccountNew>b__0(ServerProtocol.ResAccountNew _instance);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Func<PTShare.Define.SHero, long> <>9__1;

        /*0xe13688*/ <>c__DisplayClass57_0();
        /*0xe13690*/ void <Send_AccountFirst>b__0(ServerProtocol.ResAccountFirst _instance);
        /*0xe1448c*/ long <Send_AccountFirst>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ bool _isFast;
        /*0x18*/ AccountManager <>4__this;

        /*0xe144b4*/ <>c__DisplayClass58_0();
        /*0xe144bc*/ void <Send_AccountIdle>b__0(ServerProtocol.ResAccountIdle _response);
    }

    class <>c__DisplayClass59_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResAccountDetail> _callback;

        /*0xe146e8*/ <>c__DisplayClass59_0();
        /*0xe146f0*/ void <Send_AccountDetail>b__0(ServerProtocol.ResAccountDetail response);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ System.Action _callback;

        /*0xe147bc*/ <>c__DisplayClass61_0();
        /*0xe147c4*/ void <Send_AccountCancelQuit>b__0(ServerProtocol.ResAccountCancelQuit res);
    }

    class <>c__DisplayClass62_0
    {
        /*0x10*/ AccountManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe147d8*/ <>c__DisplayClass62_0();
        /*0xe147e0*/ void <Send_GetAreaPlayers>b__0(ServerProtocol.ResAccountPlayers res);
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ System.Action<int, int> callback;

        /*0xe1489c*/ <>c__DisplayClass65_0();
        /*0xe148a4*/ void <Send_AccountLanguage>b__0(ServerProtocol.ResAccountLanguage res);
    }

    class <>c__DisplayClass66_0
    {
        /*0x10*/ System.Action<PTShare.Define.SProperty> callback;

        /*0xe1491c*/ <>c__DisplayClass66_0();
        /*0xe14924*/ void <Send_AccountPreviewIdle>b__0(ServerProtocol.ResAccountPreviewIdle res);
    }

    class <>c__DisplayClass67_0
    {
        /*0x10*/ System.Action callBack;

        /*0xe1499c*/ <>c__DisplayClass67_0();
        /*0xe149a4*/ void <Send_AccountUpdateAttend>b__0(ServerProtocol.ResAccountUpdateAttend res);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ int nIndex;

        /*0xe14a30*/ <>c__DisplayClass87_0();
        /*0xe14a38*/ bool <IsUseDecorateFrame>b__0(PTShare.Define.SProfileDecorate x);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ int nIndex;

        /*0xe14a5c*/ <>c__DisplayClass88_0();
        /*0xe14a64*/ bool <GetProfileDecorate>b__0(PTShare.Define.SProfileDecorate x);
    }
}

class AdjustManager : Singleton.Component.SingletonComponent<AdjustManager>
{
    static string EVENT_LOGIN = "2d6w4e";
    static string EVENT_NEWCHARACTER = "djzlk1";
    static string EVENT_COMPLETETUTORIAL = "1r5exi";
    static string EVENT_REVENUE = "oj074e";
    static string EVENT_PLAYERLEVEL_3 = "to7sti";
    static string EVENT_PLAYERLEVEL_10 = "urjpax";
    static string EVENT_PLAYERLEVEL_30 = "81biv4";
    static string EVENT_PLAYERLEVEL_50 = "ze9l6c";
    static string EVENT_PLAYERLEVEL_100 = "yv8c5a";
    static string EVENT_PLAYERLEVEL_200 = "d54j4i";
    static string EVENT_CLEARSTAGE_2_1 = "9k7h9y";
    static string EVENT_CLEARSTAGE_3_1 = "ggaeb3";
    static string EVENT_CLEARSTAGE_4_1 = "rbq7xf";
    static string EVENT_CLEARSTAGE_5_1 = "c6zq3f";
    static string EVENT_CLEARSTAGE_10_1 = "go1qbe";
    static string EVENT_CLEARSTAGE_15_1 = "ifk4pg";
    /*0x28*/ string _AppToken;
    /*0x30*/ string _SecretToken;
    /*0x38*/ bool _OfflineMode;
    /*0x3c*/ com.adjust.sdk.AdjustLogLevel _LogLevel;
    /*0x40*/ com.adjust.sdk.AdjustEnvironment _Environment;

    /*0x1218a74*/ AdjustManager();
    /*0x121839c*/ void AwakeInstance();
    /*0x12183a0*/ bool InitInstance();
    /*0x1218564*/ void ReleaseInstance();
    /*0x12183b8*/ void Init();
    /*0x1218568*/ void AddEvent(string entToken);
    /*0x120b1f4*/ void Event_Login();
    /*0x12185e8*/ void Event_NewCharacter();
    /*0x1218640*/ void Event_CompleteTutorial();
    /*0x1218698*/ void Event_PlayerLevel(int nLevel);
    /*0x12187bc*/ void Event_StageClear(string mappoint);
    /*0x12189a8*/ void SetRevenue(string transcationId, double price, string monetary);
}

class ConsoleCheatManager : Singleton.Data.SingletonData<ConsoleCheatManager>
{
    static /*0x0*/ System.Action OnCheatRefreshEvent;
    static /*0x8*/ System.Action<string> OnCallReturnMessage;
    /*0x20*/ CheatKeyWindow m_CheatKeyWindow;

    static /*0x10e964c*/ ConsoleCheatManager();
    static /*0x10e9034*/ void add_OnCheatRefreshEvent(System.Action value);
    static /*0x10e9128*/ void remove_OnCheatRefreshEvent(System.Action value);
    static /*0x10dad70*/ void add_OnCallReturnMessage(System.Action<string> value);
    static /*0x10dac78*/ void remove_OnCallReturnMessage(System.Action<string> value);
    static /*0x10e932c*/ System.Collections.Generic.List<string> <Send_ConsoleCheat>g__GetSSSFileNames|11_2();
    static /*0x10e92a8*/ string <Send_ConsoleCheat>g__NormalizeAndroidPath|11_3(string indata);
    /*0x10e95d4*/ ConsoleCheatManager();
    /*0x10e921c*/ string get_Token();
    /*0x10e929c*/ bool InitInstance();
    /*0x10e92a4*/ void ReleaseInstance();
    /*0x10db1bc*/ void Send_ConsoleCheat(string _input);
    /*0x10e95cc*/ void SetCheatKeyWindow(CheatKeyWindow _window);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ string[] _split;
        /*0x18*/ System.Action <>9__6;
        /*0x20*/ System.Action <>9__5;

        /*0x1071b54*/ <>c__DisplayClass11_0();
        /*0x1071b5c*/ void <Send_ConsoleCheat>b__4(ServerProtocol.ResAccountLogin res);
        /*0x1071d04*/ void <Send_ConsoleCheat>b__5();
        /*0x1071dec*/ void <Send_ConsoleCheat>b__6();
    }

    class <>c__DisplayClass11_1
    {
        /*0x10*/ int idx;
        /*0x18*/ System.Text.StringBuilder sb;

        /*0x1071f40*/ <>c__DisplayClass11_1();
        /*0x1071f48*/ string <Send_ConsoleCheat>b__7(string _name);
        /*0x1071fe0*/ void <Send_ConsoleCheat>b__8(string a);
    }

    class <>c__DisplayClass11_2
    {
        /*0x10*/ int faction;
        /*0x18*/ System.Action<TableData.TableData_Gacha> <>9__10;

        /*0x1071ffc*/ <>c__DisplayClass11_2();
        /*0x1072004*/ void <Send_ConsoleCheat>b__10(TableData.TableData_Gacha table);
    }

    class <>c__DisplayClass11_3
    {
        /*0x10*/ string furnitureSet;

        /*0x1072528*/ <>c__DisplayClass11_3();
        /*0x1072530*/ bool <Send_ConsoleCheat>b__11(TableData.TableData_Furniture f);
    }

    class <>c__DisplayClass11_4
    {
        /*0x10*/ ServerProtocol.ResAdminConsole _instance;

        /*0x107165c*/ <>c__DisplayClass11_4();
        /*0x1072570*/ bool <Send_ConsoleCheat>b__15(System.ValueTuple<string, string, string> w);
    }

    class <>c
    {
        static /*0x0*/ ConsoleCheatManager.<> <>9;
        static /*0x8*/ System.Action<System.Byte[]> <>9__11_0;
        static /*0x10*/ System.Action<ServerProtocol.ResAdminImport> <>9__11_9;
        static /*0x18*/ System.Comparison<TableData.TableData_Furniture> <>9__11_12;
        static /*0x20*/ System.Func<string, long> <>9__11_16;
        static /*0x28*/ System.Action <>9__11_18;
        static /*0x30*/ System.Action <>9__11_17;
        static /*0x38*/ System.Action<ServerProtocol.ResAccountLogin> <>9__11_13;
        static /*0x40*/ System.Action <>9__11_14;
        static /*0x48*/ System.Action<ServerProtocol.ResAdminConsole> <>9__11_1;
        static /*0x50*/ System.Func<System.IO.FileInfo, string> <>9__11_19;
        static /*0x58*/ System.Func<string, string> <>9__11_20;

        static /*0x106f614*/ <>c();
        /*0x106f674*/ <>c();
        /*0x106f67c*/ void <Send_ConsoleCheat>b__11_0(byte[] _res);
        /*0x106fbac*/ void <Send_ConsoleCheat>b__11_9(ServerProtocol.ResAdminImport _res);
        /*0x106fca0*/ int <Send_ConsoleCheat>b__11_12(TableData.TableData_Furniture lhs, TableData.TableData_Furniture rhs);
        /*0x106fd9c*/ void <Send_ConsoleCheat>b__11_1(ServerProtocol.ResAdminConsole _instance);
        /*0x1071664*/ long <Send_ConsoleCheat>b__11_16(string s);
        /*0x1071670*/ void <Send_ConsoleCheat>b__11_13(ServerProtocol.ResAccountLogin res);
        /*0x107181c*/ void <Send_ConsoleCheat>b__11_17();
        /*0x1071964*/ void <Send_ConsoleCheat>b__11_18();
        /*0x1071a7c*/ void <Send_ConsoleCheat>b__11_14();
        /*0x1071b2c*/ string <Send_ConsoleCheat>b__11_19(System.IO.FileInfo s);
        /*0x1071b4c*/ string <Send_ConsoleCheat>b__11_20(string o);
    }
}

class AdmobManager : Singleton.Component.SingletonComponent<AdmobManager>
{
    /*0x28*/ string[] m_arrAppID;
    /*0x30*/ string[] m_arrRewardUnitID;
    /*0x38*/ GoogleMobileAds.Api.RewardedAd m_rewardedAd;
    /*0x40*/ bool m_bInitialized;
    /*0x44*/ TableManager.Ads.AdsRewardType m_eLastRewardType;
    /*0x48*/ System.Collections.IEnumerator m_ieLoading;

    /*0x121acf8*/ AdmobManager();
    /*0x121a200*/ string get_UnitID();
    /*0x121a234*/ void AwakeInstance();
    /*0x121a238*/ bool InitInstance();
    /*0x121a2e0*/ void ReleaseInstance();
    /*0x121a250*/ void InitializeMediation();
    /*0x121a2e4*/ void ShowRewarded(TableManager.Ads.AdsRewardType eRewardType);
    /*0x121a704*/ void M_rewardedAd_OnAdLoaded(object sender, System.EventArgs e);
    /*0x121a698*/ System.Collections.IEnumerator CoLoadingAds();
    /*0x121aa64*/ void M_rewardedAd_OnUserEarnedReward(object sender, GoogleMobileAds.Api.Reward e);
    /*0x121aafc*/ void M_rewardedAd_OnAdClosed(object sender, System.EventArgs e);
    /*0x121aba8*/ void M_rewardedAd_OnAdFailedToShow(object sender, GoogleMobileAds.Api.AdErrorEventArgs e);
    /*0x121ac50*/ void M_rewardedAd_OnAdFailedToLoad(object sender, GoogleMobileAds.Api.AdFailedToLoadEventArgs e);
    /*0x121aa90*/ System.Collections.IEnumerator CoEarnedReward();
    /*0x121ab04*/ void PauseAudio(bool _bPause);
    /*0x121aeac*/ void <InitializeMediation>b__11_0(GoogleMobileAds.Api.InitializationStatus initStatus);
    /*0x121b23c*/ bool <CoLoadingAds>b__14_0();

    class <CoLoadingAds>d__14 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AdmobManager <>4__this;

        /*0xd997b0*/ <CoLoadingAds>d__14(int <>1__state);
        /*0xd997dc*/ void System.IDisposable.Dispose();
        /*0xd997e0*/ bool MoveNext();
        /*0xd9992c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd99934*/ void System.Collections.IEnumerator.Reset();
        /*0xd99974*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEarnedReward>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AdmobManager <>4__this;

        /*0xd995e4*/ <CoEarnedReward>d__19(int <>1__state);
        /*0xd99610*/ void System.IDisposable.Dispose();
        /*0xd99614*/ bool MoveNext();
        /*0xd99760*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd99768*/ void System.Collections.IEnumerator.Reset();
        /*0xd997a8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AdMobUtility
{
    static /*0x120e57c*/ string GetTestDeviceId();
    static /*0x120e5a4*/ string GetAndroidId();
    static /*0x120e880*/ byte[] GetASCIIBytes(string str);
    static /*0x120e86c*/ string CalculateMD5Hash(string input);
    static /*0x120e954*/ string CalculateMD5Hash(byte[] input);
}

class AdsManager : Singleton.Component.SingletonComponent<AdsManager>
{
    static /*0x0*/ System.Action onRewardUpdateEvent;
    /*0x28*/ System.Collections.Generic.List<TableManager.Ads.AdsRewardType> m_liPickupRewards;

    static /*0xed8e50*/ AdsManager();
    static /*0xed8278*/ void add_onRewardUpdateEvent(System.Action value);
    static /*0xed836c*/ void remove_onRewardUpdateEvent(System.Action value);
    /*0xed8dc4*/ AdsManager();
    /*0xed8460*/ void AwakeInstance();
    /*0xed8464*/ bool InitInstance();
    /*0xed846c*/ void ReleaseInstance();
    /*0xed84d0*/ void SetPickupRewards(System.Collections.Generic.List<string> data);
    /*0xed8884*/ void AddPickupReward(TableManager.Ads.AdsRewardType _eType);
    /*0xed8a10*/ bool IsAlreadyGetReward(TableManager.Ads.AdsRewardType _eType);
    /*0xed8b0c*/ bool IsNotCompleteAdsReward();
    /*0xed8b80*/ bool IsPossibleFinalReward();
    /*0xed8be0*/ void ResetDailyAdsReward();
    /*0xed8c3c*/ void Send_AdsFinal(System.Action callback);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ TableManager.Ads.AdsRewardType _eType;

        /*0xd99a94*/ <>c__DisplayClass8_0();
        /*0xd99a9c*/ bool <AddPickupReward>b__0(TableManager.Ads.AdsRewardType x);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ TableManager.Ads.AdsRewardType _eType;

        /*0xd99b40*/ <>c__DisplayClass9_0();
        /*0xd99b48*/ bool <IsAlreadyGetReward>b__0(TableManager.Ads.AdsRewardType x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ System.Action callback;

        /*0xd9997c*/ <>c__DisplayClass13_0();
        /*0xd99984*/ void <Send_AdsFinal>b__0(ServerProtocol.ResADFinalReward res);
    }
}

struct ArenaTargetUser
{
    /*0x10*/ long playerid;
    /*0x18*/ string nickname;
    /*0x20*/ int herotableid;
    /*0x24*/ int gender;
    /*0x28*/ int level;

    /*0xa84b90*/ ArenaTargetUser(long playerid, string nickname, int herotableid, int gender, int level);
    /*0xa84ba0*/ ArenaTargetUser(PTShare.Define.SArenaTarget _target);
    /*0xa84ba8*/ ArenaTargetUser(PTShare.Define.SArenaHistory _target);
    /*0xa84bb0*/ ArenaTargetUser(PTShare.Define.SWorldArenaTarget _target);
}

struct ArenaTarget
{
    /*0x10*/ ArenaTargetUser target;
    /*0x30*/ int myscore_before;
    /*0x34*/ int myscore_after;
    /*0x38*/ int targetscore_before;
    /*0x3c*/ int targetscore_after;
    /*0x40*/ int myrank;
    /*0x44*/ int myrank_move;

    /*0xa84b78*/ ArenaTarget(ArenaTargetUser target, int myscore_before, int myscore_after, int targetscore_before, int targetscore_after, int myrank, int myrank_move);
}

class ArenaManager : Singleton.Data.SingletonData<ArenaManager>
{
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x20*/ System.Collections.Generic.List<int> liGeneralArenaDeck;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> liArenaRankers;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> liArenaTargets;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> liArenaHistory;
    /*0x40*/ int nMyPoint;
    /*0x44*/ int nMyRank;
    /*0x48*/ int nRandomSeed;
    /*0x4c*/ int nFreeArenaTicket;
    /*0x50*/ long nArenaDeckTotalPower;
    /*0x58*/ int nRewardIndex;
    /*0x5c*/ int nArenaWinCount;
    /*0x60*/ bool bIsReward;
    /*0x61*/ bool bIsTargetArenaWinner;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> liTargetPlayerHero;
    /*0x70*/ ArenaTarget arenaTarget;
    /*0xa8*/ PTShare.Define.SStatBonus vsStatBonus;
    /*0xb0*/ PTShare.Define.SStatBonus myStatBonus;
    /*0xb8*/ System.Collections.Generic.List<int> liWorldArenaDeck;
    /*0xc0*/ System.Collections.Generic.List<int> liWorldArenaBlind;
    /*0xc8*/ System.Collections.Generic.List<int> liTmpWorldArenaBlind;
    /*0xd0*/ ServerProtocol.ResWorldArenaEnter currentWorldArenaInfo;
    /*0xd8*/ int nTrainingLevel;
    /*0xe0*/ long nWorldArenaDeckTotalPower;
    /*0xe8*/ System.Collections.Generic.List<int> liTargetPlayerBlind;
    /*0xf0*/ System.Collections.Generic.List<int> liEmptyBlind;

    static /*0xee84dc*/ ArenaManager();
    static /*0xee4338*/ void add_OnChangeEvent(System.Action value);
    static /*0xee4244*/ void remove_OnChangeEvent(System.Action value);
    static /*0xee4dd8*/ bool <RemoveHero>g__IsEmptyArenaDeck|24_0(ref System.Collections.Generic.List<int> target, ref ArenaManager.<> );
    /*0xee8238*/ ArenaManager();
    /*0xee4b0c*/ string get_UserToken();
    /*0xee4b8c*/ bool InitInstance();
    /*0xee4b94*/ void ReleaseInstance();
    /*0xee4bf8*/ void RemoveHero(int heroId);
    /*0xee4640*/ void Send_MainArena(System.Action _callback);
    /*0xee523c*/ void Send_EnterArena(System.Action _callback);
    /*0xee5374*/ void Send_UpdateDeckArena(System.Action _callback, string _heroids);
    /*0xee54c4*/ void Send_SearchArena(System.Action _callback);
    /*0xee55fc*/ void Send_ChoiceArena(System.Action _callback, int _seqid);
    /*0xee5808*/ void Send_FinishArena(System.Action _callback, string _heroids, long lcp, long rcp, ArenaTargetUser _target, string _graphData, string _hpmps, bool _isWin);
    /*0xee59ac*/ void Send_HistoryArena(System.Action _callback);
    /*0xee5ae4*/ void Send_TicketArena(System.Action _callback, int _count);
    /*0xee5c28*/ void Send_ReplayArena(Battle.GameModeType _eType, PTShare.Define.SArenaHistory _history, System.Action _callback);
    /*0xee5d70*/ int GetMyRank();
    /*0xee5d78*/ int GetMyPoint();
    /*0xee5d80*/ int GetRandomSeed();
    /*0xee5d88*/ int GetFreeTicket();
    /*0xee5d90*/ int GetRewardIndex();
    /*0xee5d98*/ int GetArenaWinCount();
    /*0xee5da0*/ bool GetIsReward();
    /*0xee5da8*/ System.Collections.Generic.List<int> GetArenaDeck();
    /*0xee5e20*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> GetArenaRankers();
    /*0xee5e98*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> GetArenaTargets();
    /*0xee5f10*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> GetArenaHistory();
    /*0xee5f88*/ void SetResultArenaTarget(ArenaTarget _arenaTarget);
    /*0xee5fa4*/ ArenaTarget GetResultArena();
    /*0xee5fc0*/ PTShare.Define.SStatBonus GetStatBonus_VS();
    /*0xee5fc8*/ PTShare.Define.SStatBonus GetStatBonus_My();
    /*0xee5fd0*/ System.Collections.Generic.List<PTShare.Define.SBattleHero> GetTargetPlayerHero();
    /*0xee6048*/ long GetArenaDeckTotalPower();
    /*0xee6050*/ bool GetTargetWinner();
    /*0xee4efc*/ long GetArenaDeckListTotalPower(bool _updateCp);
    /*0xee3928*/ bool GetReadyArena(bool checkSeasonFinishTime);
    /*0xee6058*/ void SetTargetWinner(bool _isWin);
    /*0xee6064*/ void SetArenaDeck(System.Collections.Generic.List<int> deck);
    /*0xee6090*/ void SetArenaWindCount(int arenaWinCount);
    /*0xee48f8*/ void RefreshArenaDeckPower(bool updateCp);
    /*0xee6098*/ void UpdateArenaDeckPower(int heroId);
    /*0xee613c*/ void Send_EnterWorldArena(System.Action _callback);
    /*0xee6274*/ void Send_UpdateDeckWorldArena(System.Action _callback, string _heroids);
    /*0xee655c*/ void Send_ChoiceWorldArena(System.Action _callback, long _playerid);
    /*0xee68a0*/ void Send_RefreshWorldArena(System.Action _callback);
    /*0xee69d8*/ void Send_FinishWorldArena(System.Action _callback, string _heroids, long lcp, long rcp, ArenaTargetUser _target, string _graphData, string _hpmps, bool _isWin);
    /*0xee6b7c*/ void Send_HistoryWorldArena(System.Action _callback);
    /*0xee6cb4*/ void Send_TicketWorldArena(System.Action _callback, int _count);
    /*0xee6df8*/ void Send_TrainingWorldArena(System.Action _callback);
    /*0xee6f30*/ void SetTraningLevel(int level, bool _updateCp);
    /*0xee6fd0*/ void SetWorldArenaDeck(System.Collections.Generic.List<int> deck, System.Collections.Generic.List<int> blind);
    /*0xee70ec*/ void SetWorldArenaScore(int score);
    /*0xee7108*/ void SetWorldArenaTier(int tier);
    /*0xee7124*/ void SetWorldArenaRank(int rank);
    /*0xee715c*/ void SetTmpWorldArenaBlind(int index, bool enable);
    /*0xee7224*/ void ApplyWorldArenaBlind();
    /*0xee72a0*/ long GetWorldTotalPower();
    /*0xee509c*/ long GetWorldArenaDeckListTotalPower(bool _updateCp);
    /*0xee72a8*/ System.Collections.Generic.List<int> GetWorldArenaDeck();
    /*0xee7320*/ System.Collections.Generic.List<int> GetWorldArenaBlind();
    /*0xee7404*/ System.Collections.Generic.List<int> GetWorldArenaEmptyBlind();
    /*0xee740c*/ System.Collections.Generic.List<int> GetWorldArenaTargetBlind(long playerid);
    /*0xee7570*/ System.Collections.Generic.List<PTShare.Define.SSmallHero> GetWorldArenaTargetHeroes(long playerid);
    /*0xee7670*/ int GetWorldArenaTargetTier(long playerid);
    /*0xee7770*/ int GetWorldArenaRankerTier(long playerid);
    /*0xee7870*/ System.Collections.Generic.List<int> GetWorldArenaCurrentTargetBlind();
    /*0xee78e8*/ int GetWorldArenaSeason();
    /*0xee7900*/ int GetWorldArenaScore();
    /*0xee7918*/ int GetWorldArenaBestScore();
    /*0xee2384*/ int GetWorldArenaRank();
    /*0xee7930*/ int GetWorldArenaTopRank();
    /*0xee2adc*/ int GetWorldArenaTier();
    /*0xee7948*/ int GetWorldArenaTopTier();
    /*0xee7960*/ long GetWorldArenaCP();
    /*0xee7978*/ int GetWorldArenaFreeTicket();
    /*0xee7990*/ System.DateTime GetWorldArenaFreeRefreshTime();
    /*0xee7a2c*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaTarget> GetWorldArenaTargets();
    /*0xee7aac*/ System.Collections.Generic.List<PTShare.Define.SWorldArenaRanker> GetWorldArenaRankers();
    /*0xee7b2c*/ bool IsPossiableFreeRefresh();
    /*0xee3ba4*/ bool IsWorldArenaCalculateTIme(bool isDaily);
    /*0xee7c00*/ bool IsWorldArenaCalculateAfterTIme(bool isDaily);
    /*0xee7d64*/ System.TimeSpan GetWorldArenaCalculateTime(bool isDaily);
    /*0xee7ecc*/ bool IsPossiableBlindSystem();
    /*0xee753c*/ bool IsPossiableBlindSystem_Target(long playerid);
    /*0xee7f08*/ bool IsPossiableBlindSystem_Ranker(long playerid);
    /*0xee7f3c*/ int GetTrainingLevel();
    /*0xee7f44*/ int GetTraningGroupLevel(int nTraninglv);
    /*0xee7fc4*/ int GetTraningIndivLevel(int nTraninglv);
    /*0xee8048*/ float GetTrainingStat(Battle.CharacterStat.StatType type, int nTraininglv);
    /*0xee80c4*/ float GetTrainingStat(Battle.CharacterStat.StatType type);
    /*0xee8140*/ float GetTrainingStat(PTShare.Define.Currency type, int nTraininglv);
    /*0xee81bc*/ float GetTrainingStat(PTShare.Define.Currency type);

    struct <>c__DisplayClass24_0
    {
        /*0x10*/ int heroId;
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b120*/ <>c__DisplayClass25_0();
        /*0xd9b128*/ void <Send_MainArena>b__0(ServerProtocol.ResArenaMain res);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b1fc*/ <>c__DisplayClass26_0();
        /*0xd9b204*/ void <Send_EnterArena>b__0(ServerProtocol.ResArenaEnter res);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ string _heroids;
        /*0x20*/ System.Action _callback;

        /*0xd9b290*/ <>c__DisplayClass27_0();
        /*0xd9b298*/ void <Send_UpdateDeckArena>b__0(ServerProtocol.ResArenaUpdateDeck res);
    }

    class <>c
    {
        static /*0x0*/ ArenaManager.<> <>9;
        static /*0x8*/ System.Converter<string, int> <>9__27_1;
        static /*0x10*/ System.Action<int, string> <>9__29_1;
        static /*0x18*/ System.Func<int, long> <>9__52_0;
        static /*0x20*/ System.Converter<string, int> <>9__68_1;
        static /*0x28*/ System.Func<PTShare.Define.SWorldArenaRanker, bool> <>9__68_2;
        static /*0x30*/ System.Predicate<int> <>9__69_0;
        static /*0x38*/ System.Action<int, string> <>9__69_2;
        static /*0x40*/ System.Func<int, long> <>9__83_0;

        static /*0xd9acac*/ <>c();
        /*0xd9ad0c*/ <>c();
        /*0xd9ad14*/ int <Send_UpdateDeckArena>b__27_1(string x);
        /*0xd9ad4c*/ void <Send_ChoiceArena>b__29_1(int failed, string args);
        /*0xd9ae30*/ long <GetArenaDeckListTotalPower>b__52_0(int x);
        /*0xd9af00*/ int <Send_UpdateDeckWorldArena>b__68_1(string x);
        /*0xd9af38*/ bool <Send_UpdateDeckWorldArena>b__68_2(PTShare.Define.SWorldArenaRanker x);
        /*0xd9afd4*/ bool <Send_ChoiceWorldArena>b__69_0(int x);
        /*0xd9afe0*/ void <Send_ChoiceWorldArena>b__69_2(int failed, string args);
        /*0xd9b050*/ long <GetWorldArenaDeckListTotalPower>b__83_0(int x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b568*/ <>c__DisplayClass28_0();
        /*0xd9b570*/ void <Send_SearchArena>b__0(ServerProtocol.ResArenaSearch res);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b5ac*/ <>c__DisplayClass29_0();
        /*0xd9b5b4*/ void <Send_ChoiceArena>b__0(ServerProtocol.ResArenaChoice res);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ bool _isWin;
        /*0x20*/ ArenaTargetUser _target;
        /*0x40*/ System.Action _callback;

        /*0xd9b6bc*/ <>c__DisplayClass30_0();
        /*0xd9b6c4*/ void <Send_FinishArena>b__0(ServerProtocol.ResArenaFinish res);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9b958*/ <>c__DisplayClass31_0();
        /*0xd9b960*/ void <Send_HistoryArena>b__0(ServerProtocol.ResArenaHistory res);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ System.Action _callback;

        /*0xd9b99c*/ <>c__DisplayClass32_0();
        /*0xd9b9a4*/ void <Send_TicketArena>b__0(ServerProtocol.ResArenaTicket res);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ Battle.GameModeType _eType;

        /*0xd9bab4*/ <>c__DisplayClass33_0();
        /*0xd9babc*/ void <Send_ReplayArena>b__0(ServerProtocol.ResArenaReplay res);
    }

    class <>c__DisplayClass67_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9bb9c*/ <>c__DisplayClass67_0();
        /*0xd9bba4*/ void <Send_EnterWorldArena>b__0(ServerProtocol.ResWorldArenaEnter res);
    }

    class <>c__DisplayClass67_1
    {
        /*0x10*/ bool tiercheck;
        /*0x11*/ bool pointcheck;
        /*0x18*/ ArenaManager.<> CS$<>8__locals1;

        /*0xd9bd88*/ <>c__DisplayClass67_1();
        /*0xd9bd90*/ void <Send_EnterWorldArena>b__1(ServerProtocol.ResWorldArenaReward res2);
    }

    class <>c__DisplayClass68_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ string _heroids;
        /*0x20*/ System.Action _callback;

        /*0xd9c158*/ <>c__DisplayClass68_0();
        /*0xd9c160*/ void <Send_UpdateDeckWorldArena>b__0(ServerProtocol.ResWorldArenaUpdateDeck res);
    }

    class <>c__DisplayClass69_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ long _playerid;
        /*0x20*/ System.Action _callback;

        /*0xd9c6dc*/ <>c__DisplayClass69_0();
        /*0xd9c6e4*/ void <Send_ChoiceWorldArena>b__1(ServerProtocol.ResWorldArenaChoice res);
    }

    class <>c__DisplayClass70_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9c858*/ <>c__DisplayClass70_0();
        /*0xd9c860*/ void <Send_RefreshWorldArena>b__0(ServerProtocol.ResWorldArenaRefresh res);
    }

    class <>c__DisplayClass71_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ bool _isWin;
        /*0x20*/ ArenaTargetUser _target;
        /*0x40*/ System.Action _callback;

        /*0xd9c9b0*/ <>c__DisplayClass71_0();
        /*0xd9c9b8*/ void <Send_FinishWorldArena>b__0(ServerProtocol.ResWorldArenaFinish res);
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9cb84*/ <>c__DisplayClass72_0();
        /*0xd9cb8c*/ void <Send_HistoryWorldArena>b__0(ServerProtocol.ResWorldArenaHistory res);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ System.Action _callback;

        /*0xd9cbc8*/ <>c__DisplayClass73_0();
        /*0xd9cbd0*/ void <Send_TicketWorldArena>b__0(ServerProtocol.ResWorldArenaTicket res);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ ArenaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xd9cce0*/ <>c__DisplayClass74_0();
        /*0xd9cce8*/ void <Send_TrainingWorldArena>b__0(ServerProtocol.ResWorldArenaTraining res);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ long playerid;

        /*0xd9ce34*/ <>c__DisplayClass87_0();
        /*0xd9ce3c*/ bool <GetWorldArenaTargetBlind>b__0(PTShare.Define.SWorldArenaTarget x);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ long playerid;

        /*0xd9ce60*/ <>c__DisplayClass88_0();
        /*0xd9ce68*/ bool <GetWorldArenaTargetHeroes>b__0(PTShare.Define.SWorldArenaTarget x);
    }

    class <>c__DisplayClass89_0
    {
        /*0x10*/ long playerid;

        /*0xd9ce8c*/ <>c__DisplayClass89_0();
        /*0xd9ce94*/ bool <GetWorldArenaTargetTier>b__0(PTShare.Define.SWorldArenaTarget x);
    }

    class <>c__DisplayClass90_0
    {
        /*0x10*/ long playerid;

        /*0xd9ceb8*/ <>c__DisplayClass90_0();
        /*0xd9cec0*/ bool <GetWorldArenaRankerTier>b__0(PTShare.Define.SWorldArenaRanker x);
    }
}

enum WorldArenaRecordType
{
    Tier = 0,
    Point = 1,
}

class ArtifactManager : Singleton.Data.SingletonData<ArtifactManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SArtifact> liArtifactData;

    /*0xeef2dc*/ ArtifactManager();
    /*0xeeeea4*/ string get_UserToken();
    /*0xeeef24*/ bool InitInstance();
    /*0xeeef2c*/ void ReleaseInstance();
    /*0xeeef30*/ void Send_ArtifactReinforce(int artifactid, System.Action<PTShare.Define.SHero> callback);
    /*0xeec5e4*/ void Send_ArtifactEquip(int heroid, int artifactid, System.Action<PTShare.Define.SHero> callback);
    /*0xeec8e4*/ void Send_ArtifactSwap(int heroid, int destheroid, System.Action<PTShare.Define.SHero> callback);
    /*0xeeebd0*/ void Send_ArtifactUnEquip(int heroid, System.Action<PTShare.Define.SHero> callback);
    /*0xeef084*/ void SetArtifactList(System.Collections.Generic.List<PTShare.Define.SArtifact> list);
    /*0xeef114*/ System.Collections.Generic.List<PTShare.Define.SArtifact> GetArtifactList();
    /*0xeec140*/ PTShare.Define.SArtifact FindArtifactToID(int artifactid);
    /*0xeef11c*/ void IncreaseArtifact(System.Collections.Generic.List<PTShare.Define.SArtifact> list);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ ArtifactManager <>4__this;
        /*0x18*/ int artifactid;
        /*0x20*/ System.Action<PTShare.Define.SHero> callback;
        /*0x28*/ System.Func<PTShare.Define.SArtifact, bool> <>9__1;

        /*0xd9d570*/ <>c__DisplayClass5_0();
        /*0xd9d578*/ void <Send_ArtifactReinforce>b__0(ServerProtocol.ResEquipArtifactReinforce res);
        /*0xd9d83c*/ bool <Send_ArtifactReinforce>b__1(PTShare.Define.SArtifact x);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ ArtifactManager <>4__this;
        /*0x18*/ int artifactid;
        /*0x1c*/ int heroid;
        /*0x20*/ System.Action<PTShare.Define.SHero> callback;
        /*0x28*/ System.Func<PTShare.Define.SArtifact, bool> <>9__1;

        /*0xd9d860*/ <>c__DisplayClass6_0();
        /*0xd9d868*/ void <Send_ArtifactEquip>b__0(ServerProtocol.ResHeroArtifactEquip res);
        /*0xd9da58*/ bool <Send_ArtifactEquip>b__1(PTShare.Define.SArtifact x);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ int heroid;
        /*0x14*/ int destheroid;
        /*0x18*/ System.Action<PTShare.Define.SHero> callback;

        /*0xd9da7c*/ <>c__DisplayClass7_0();
        /*0xd9da84*/ void <Send_ArtifactSwap>b__0(ServerProtocol.ResHeroArtifactSwap res);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ int heroid;
        /*0x18*/ System.Action<PTShare.Define.SHero> callback;

        /*0xd9dbf4*/ <>c__DisplayClass8_0();
        /*0xd9dbfc*/ void <Send_ArtifactUnEquip>b__0(ServerProtocol.ResHeroArtifactUnequip res);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ int artifactid;

        /*0xd9d4ac*/ <>c__DisplayClass11_0();
        /*0xd9d4b4*/ bool <FindArtifactToID>b__0(PTShare.Define.SArtifact x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SArtifact> list;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SArtifact> <>9__0;

        /*0xd9d4d8*/ <>c__DisplayClass12_0();
        /*0xd9d4e0*/ bool <IncreaseArtifact>b__0(PTShare.Define.SArtifact data);
    }
}

class AtlasImage : Atlas.AtlasComponent<UnityEngine.UI.Image>
{
    /*0x30*/ UnityEngine.UI.Selectable m_SelectableObject;
    /*0x38*/ UnityEngine.RectTransform rectTransform;
    /*0x40*/ bool IsLastMissingSprite;

    /*0xf7b410*/ AtlasImage();
    /*0xf7a3dc*/ UnityEngine.RectTransform get_RectTransform();
    /*0xf7a4e4*/ void Awake();
    /*0xf7a5e0*/ void OnEnableMethod();
    /*0xf7a62c*/ void OnDisableMethod();
    /*0xf7a678*/ void UnloadImage();
    /*0xf7a6e0*/ void SetSprite(UnityEngine.Sprite _sprite);
    /*0xf7a7ec*/ UnityEngine.Sprite GetSprite();
    /*0xf7a848*/ bool IsLastedMissing();
    /*0xf7a850*/ string GetImageName();
    /*0xf7a858*/ void SetImage(AtlasType _atlasType, string _name);
    /*0xf7a6d0*/ void SetImageName(string _name);
    /*0xf7a86c*/ void RefreshImage();
    /*0xf7a9fc*/ void RefreshImage(string _path);
    /*0xf7aa68*/ void SetNativeSize();
    /*0xf7aafc*/ void SetStretchSize(UnityEngine.Vector2 criteriaSize, UnityEngine.Vector4 offset);
    /*0xf7acdc*/ void SetActive(bool _enable);
    /*0xf7ad64*/ void SetColor(UnityEngine.Color _color);
    /*0xf7ae30*/ void SetOpecity(float _opecity);
    /*0xf7af74*/ void SetRaycast(bool _enable);
    /*0xf7a544*/ void RefreshSelectableObject();
    /*0xf7b01c*/ void SetState();
    /*0xf7b0c8*/ UnityEngine.Sprite RequestAtlasState(AtlasType _type, UnityEngine.Sprite _sprite);
    /*0xf7b144*/ string SetReplaceStateName(UnityEngine.Sprite _sprite);
}

class AtlasSprite : Atlas.AtlasComponent<UnityEngine.SpriteRenderer>
{
    /*0x2d*/ bool IsLastMissingSprite;

    /*0xf7c918*/ AtlasSprite();
    /*0xf7be38*/ void Awake();
    /*0xf7be3c*/ void OnEnableMethod();
    /*0xf7be88*/ void OnDisableMethod();
    /*0xf7bed4*/ void UnloadImage();
    /*0xf7bf3c*/ void SetSprite(UnityEngine.Sprite _sprite);
    /*0xf7c048*/ UnityEngine.Sprite GetSprite();
    /*0xf7c0a4*/ bool IsLastedMissing();
    /*0xf7c0ac*/ string GetImageName();
    /*0xf7c0b4*/ void SetImage(AtlasType _atlasType, string _name);
    /*0xf7bf2c*/ void SetImageName(string _name);
    /*0xf7c0c8*/ void SetSortingOrder(int _order);
    /*0xf7c134*/ void RefreshImage();
    /*0xf7c194*/ void RefreshImage(string _path);
    /*0xf7c200*/ void SetNativeSize();
    /*0xf7c2ac*/ void SetSize(float width, float height);
    /*0xf7c46c*/ UnityEngine.Vector2 GetOriginalSize();
    /*0xf7c55c*/ UnityEngine.Vector2 GetSizeScale();
    /*0xf7c6a8*/ void SetActive(bool _enable);
    /*0xf7c730*/ void SetColor(UnityEngine.Color _color);
    /*0xf7c7f4*/ void SetOpecity(float _opecity);
}

enum AtlasType
{
    NONE = 0,
    UICOMMON = 1,
    UIICON = 2,
    UIMAIN = 3,
    UIUNIT = 4,
    UIBATTLE = 5,
    UIILLUST = 6,
    UIRESDEFAULT = 7,
    TUTORIAL = 8,
    UIEQUIPMENT = 9,
    UISKILLICON = 10,
    UISUMMON = 11,
    UIASCENT = 12,
    UISTRENGTHEN = 13,
    UITOWER = 14,
    UICASHSHOP = 15,
    UIMAZE = 16,
    UIRESONATING = 17,
    UIGUILD = 18,
    UIDECORATEPROFILEBACKGROUND = 19,
    UIDECORATEPROFILEFRAME = 20,
    UICHATICON = 21,
    UITILE = 22,
    UIDUNGEON = 23,
    UIARTIFACT = 24,
    UISKINROOM = 25,
    DISABLED = 26,
    UIRANKINGBOARD = 27,
    UIWORLDBOSS = 28,
    UIPVERANK = 29,
    UIHOUSING = 30,
    UIABILITY = 31,
    UIEVENT = 32,
    UIADS = 33,
    End = 34,
}

class AtlasManager : Singleton.Component.SingletonComponent<AtlasManager>
{
    static /*0x0*/ System.Collections.Generic.Dictionary<int, UnityEngine.U2D.SpriteAtlas> m_dicAtlas;
    static /*0x8*/ System.Collections.Generic.Queue<System.ValueTuple<AtlasImage, UnityEngine.Sprite>> m_QueueImage;
    static /*0x10*/ System.Collections.Generic.Queue<System.ValueTuple<AtlasSprite, UnityEngine.Sprite>> m_QueueSprite;
    /*0x28*/ System.Collections.IEnumerator m_ieUpdate;

    static /*0xf7bd20*/ AtlasManager();
    /*0xf7bcd4*/ AtlasManager();
    /*0xf7b45c*/ void AwakeInstance();
    /*0xf7b460*/ bool InitInstance();
    /*0xf7b468*/ void ReleaseInstance();
    /*0xf7b544*/ void ImportAtlas(AtlasType _type);
    /*0xf7b890*/ void AtlasUnloadAll();
    /*0xf7b228*/ UnityEngine.Sprite RequestAtlasSprite(AtlasType _type, string _name, bool _alreadyCheck);
    /*0xf7a8cc*/ void GetAtlasSprite(AtlasImage _comp, AtlasType _type, string _name);
    /*0xf7bb48*/ void GetAtlasSprite(AtlasSprite _comp, AtlasType _type, string _name);
    /*0xf7baec*/ System.Collections.IEnumerator CoSetAtlasImageProcess();
    /*0xf7bc78*/ System.Collections.IEnumerator CoSetAtlasSpriteProcess();

    class <CoSetAtlasImageProcess>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9e680*/ <CoSetAtlasImageProcess>d__12(int <>1__state);
        /*0xd9e6ac*/ void System.IDisposable.Dispose();
        /*0xd9e6b0*/ bool MoveNext();
        /*0xd9e7fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9e804*/ void System.Collections.IEnumerator.Reset();
        /*0xd9e844*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSetAtlasSpriteProcess>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xd9e84c*/ <CoSetAtlasSpriteProcess>d__13(int <>1__state);
        /*0xd9e878*/ void System.IDisposable.Dispose();
        /*0xd9e87c*/ bool MoveNext();
        /*0xd9e9c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9e9d0*/ void System.Collections.IEnumerator.Reset();
        /*0xd9ea10*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum TrackPlayType
{
    NONE = 0,
    BGM = 1,
    SFX = 2,
    VOICE = 3,
    End = 4,
}

enum ButtonSound
{
    None = 0,
    Button01_02 = 1,
    Btn_Main = 2,
    Effect_Popup_Open = 3,
    Effect_Back = 4,
    Btn_Normal = 5,
    Effect_Select = 6,
    Effect_Lock = 7,
    Btn_Tap = 8,
    Effect_Placement_Hero = 9,
    Effect_Hero_Equip = 10,
    Effect_Clear = 11,
    Effect_Battle_Start = 12,
    Effect_Scoll = 13,
    Effect_Buy = 14,
    Effect_Game_Entry = 15,
    Effect_Maze_Entry = 16,
    Effect_Dice_Btn = 17,
    Effect_Maze_Dice = 18,
    Effect_Reward = 19,
    Effect_Maze_Tile_Light = 20,
    Effect_Levelup_User = 21,
    Effect_Dialog = 22,
    Effect_Hero_Equip_Clear = 23,
    Effect_Equip_Upgrade = 24,
    Effect_GaugeUp = 25,
    Effect_Gacha_Item = 26,
    Effect_Gacha_SS = 27,
    Effect_Gacha_SSS = 28,
    Effect_Levelup_Hero = 29,
    Effect_Battle_Win = 30,
    Effect_Battle_Lose = 31,
    Effect_UnitGrade_Success = 32,
    ArtifactUpgrade = 33,
    End = 34,
}

class AudioManager : Singleton.Component.SingletonComponent<AudioManager>
{
    /*0x28*/ System.Collections.Generic.List<AudioManager.ListClip> m_Clips;
    /*0x30*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<AudioManager.AudioTrack>> dicTrackList;
    /*0x38*/ System.Collections.Generic.Dictionary<int, float> dicSoundVolume;
    /*0x40*/ float m_fOriginVolumeBGM;
    /*0x44*/ float m_fOriginVolumeSFX;
    /*0x48*/ float m_fRecentPlayClipDuration;
    /*0x4c*/ float m_fCurVoiceDuration;
    /*0x50*/ bool m_isPlayingVoice;
    /*0x54*/ int m_recentFrameCount;

    /*0xf861f0*/ AudioManager();
    /*0xf84478*/ void AwakeInstance();
    /*0xf8447c*/ bool InitInstance();
    /*0xf84484*/ void ReleaseInstance();
    /*0xf84780*/ void Play(TrackPlayType _eType, string _soundName, bool _isLoop, bool _isDuplicate, float _volume);
    /*0xf84cdc*/ void Play(AssetBundleType _eBundleType, TrackPlayType _eType, string _soundName, bool _isLoop, bool _isDuplicate, float _volume);
    /*0xf7de80*/ void Play(AssetBundleType _eBundleType, TrackPlayType _eType, ButtonSound _soundType, bool _isLoop, bool _isDuplicate, float _volume);
    /*0xf85214*/ void PlayCallBack(AssetBundleType _eBundleType, TrackPlayType _eType, string _soundName, bool _isLoop, bool _isDuplicate, float _volume, System.Action<float> callBack);
    /*0xf855d8*/ void Stop(TrackPlayType _eType);
    /*0xf85714*/ void Stop(TrackPlayType _eType, string _soundName);
    /*0xf85818*/ void Stop(string _soundName);
    /*0xf85b4c*/ void Pause(TrackPlayType _eType, bool _pause);
    /*0xf85c54*/ bool IsPlaying(TrackPlayType _eType, string _soundName);
    /*0xf84c20*/ float GetSoundVolume(TrackPlayType _ePlayType);
    /*0xf85d60*/ void SetSoundVolume(TrackPlayType _ePlayType, float _volume);
    /*0xf84b24*/ System.Collections.Generic.List<AudioManager.AudioTrack> GetOrExistAddDictionaryList(TrackPlayType _ePlayType);
    /*0xf85dfc*/ void RefreshVolume(TrackPlayType _ePlayType);
    /*0xf851a8*/ string GetResExtension(TrackPlayType _eType);
    /*0xf85f00*/ void SetOriginalVolumeForIngame(bool _bRefresh);
    /*0xf85f40*/ float PlayForIngameVoice(AssetBundleType _eBundleType, TrackPlayType _eType, string _soundName, bool _bReduceSFX, bool _bLoop);
    /*0xf85f8c*/ void AddVoiceDuration(float _fDuration);
    /*0xf85fa0*/ void UpdateForIngameVoice(float _fLerpDeltaTime, float _fDurationDeltaTime);

    class AudioTrack
    {
        /*0x10*/ string audioName;
        /*0x18*/ UnityEngine.AudioSource audioSource;
        /*0x20*/ float originalVolume;
        /*0x24*/ float changeVolume;

        /*0xda05e4*/ AudioTrack(string audioName, UnityEngine.AudioSource audioSource, UnityEngine.AudioClip audioClip, float originalVolume, float changeVolume, bool _isLoop);
        /*0xd9ff9c*/ bool get_IsPlaying();
        /*0xda0650*/ void SetAudioSource(UnityEngine.AudioClip _clip, float _volume, bool _isLoop);
        /*0xda05c0*/ void SetVolume(float _volume);
        /*0xda06b4*/ void Play();
        /*0xd9fedc*/ void Stop();
        /*0xda04cc*/ void Pause();
        /*0xda04e8*/ void UnPause();
    }

    class ListClip
    {
        /*0x10*/ TrackPlayType type;
        /*0x18*/ System.Collections.Generic.List<UnityEngine.AudioClip> clips;

        /*0xda06d0*/ ListClip();
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ string _soundName;
        /*0x18*/ bool _isDuplicate;
        /*0x1c*/ TrackPlayType _eType;

        /*0xd9fef8*/ <>c__DisplayClass12_0();
        /*0xd9ff00*/ bool <Play>b__0(AudioManager.AudioTrack x);
        /*0xd9ffb8*/ bool <Play>b__1(AudioManager.ListClip x);
        /*0xd9ffdc*/ bool <Play>b__2(UnityEngine.AudioClip x);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ TrackPlayType _eType;
        /*0x18*/ string _soundName;
        /*0x20*/ AudioManager.ListClip _clip;
        /*0x28*/ AudioManager <>4__this;
        /*0x30*/ bool _isLoop;
        /*0x31*/ bool _isDuplicate;
        /*0x34*/ float _volume;

        /*0xda0040*/ <>c__DisplayClass15_0();
        /*0xda0048*/ bool <Play>b__0(AudioManager.ListClip x);
        /*0xda006c*/ bool <Play>b__1(UnityEngine.AudioClip x);
        /*0xda00cc*/ void <Play>b__2(UnityEngine.AudioClip clip);
        /*0xda01ac*/ void <Play>b__3(UnityEngine.AudioClip clip);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ TrackPlayType _eType;
        /*0x18*/ string _soundName;
        /*0x20*/ AudioManager.ListClip _clip;
        /*0x28*/ AudioManager <>4__this;
        /*0x30*/ bool _isLoop;
        /*0x31*/ bool _isDuplicate;
        /*0x34*/ float _volume;
        /*0x38*/ System.Action<float> callBack;

        /*0xda028c*/ <>c__DisplayClass17_0();
        /*0xda0294*/ bool <PlayCallBack>b__0(AudioManager.ListClip x);
        /*0xda02b8*/ bool <PlayCallBack>b__1(UnityEngine.AudioClip x);
        /*0xda0318*/ void <PlayCallBack>b__2(UnityEngine.AudioClip clip);
    }

    class <>c
    {
        static /*0x0*/ AudioManager.<> <>9;
        static /*0x8*/ System.Action<AudioManager.AudioTrack> <>9__18_0;

        static /*0xd9fe50*/ <>c();
        /*0xd9feb0*/ <>c();
        /*0xd9feb8*/ void <Stop>b__18_0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ string _soundName;

        /*0xda0428*/ <>c__DisplayClass19_0();
        /*0xda0430*/ void <Stop>b__0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ bool _pause;

        /*0xda0488*/ <>c__DisplayClass21_0();
        /*0xda0490*/ void <Pause>b__0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ string _soundName;

        /*0xda0504*/ <>c__DisplayClass22_0();
        /*0xda050c*/ bool <IsPlaying>b__0(AudioManager.AudioTrack x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ AudioManager <>4__this;
        /*0x18*/ TrackPlayType _ePlayType;

        /*0xda0568*/ <>c__DisplayClass26_0();
        /*0xda0570*/ void <RefreshVolume>b__0(AudioManager.AudioTrack x);
    }
}

class BalanceManager : Singleton.Data.SingletonData<BalanceManager>
{
    /*0x20*/ System.Action<bool> OnCallResult;
    /*0x28*/ System.Text.StringBuilder m_cStringBuilder;
    /*0x30*/ System.Security.Cryptography.MD5CryptoServiceProvider md5CryptoServiceProvider;
    /*0x38*/ string BalancePathZip;
    /*0x40*/ string LocalizePathZip;

    static /*0xf87e04*/ void SetInvariantCulture();
    /*0xf88194*/ BalanceManager();
    /*0xf87df8*/ bool InitInstance();
    /*0xf87e00*/ void ReleaseInstance();
    /*0xf87e68*/ void Send_BalanceData(System.Action<bool> _onCallbackResult);
    /*0xf87fa8*/ void Send_LocalizeGetData(PTShare.Define.LanguageCode _code, System.Action<bool> _onCallbackResult);
    /*0xf87e70*/ void LoadBalanceData();
    /*0xf87fb0*/ void LoadLocalizeData(PTShare.Define.LanguageCode _code);
    /*0xf88104*/ System.Collections.IEnumerator UnZipProcess(string _zipPath, byte[] downloadBytes, int bytesLength);
    /*0xf882e4*/ void <LoadBalanceData>b__10_0(byte[] _instance);
    /*0xf8852c*/ void <LoadLocalizeData>b__11_0(byte[] _instance);
    /*0xf886f4*/ void <LoadLocalizeData>b__11_1(byte m);

    class <>c
    {
        static /*0x0*/ BalanceManager.<> <>9;
        static /*0x8*/ System.Func<byte, string> <>9__10_1;

        static /*0xda08b8*/ <>c();
        /*0xda0918*/ <>c();
        /*0xda0920*/ string <LoadBalanceData>b__10_1(byte s);
    }

    class <UnZipProcess>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ byte[] downloadBytes;
        /*0x28*/ string _zipPath;
        /*0x30*/ int bytesLength;
        /*0x38*/ BalanceManager <>4__this;

        /*0xda0974*/ <UnZipProcess>d__12(int <>1__state);
        /*0xda09a0*/ void System.IDisposable.Dispose();
        /*0xda09a4*/ bool MoveNext();
        /*0xda0aec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda0af4*/ void System.Collections.IEnumerator.Reset();
        /*0xda0b34*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BountyAutoDispatchPopup : GuiBase
{
    /*0x40*/ ScrollContent_BountyAutoQuestEntity m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ DefineBounty.BOUNTY_TYPE m_bountyType;
    /*0x58*/ System.Collections.Generic.List<DefineBounty.BountyData> m_showBountyList;
    /*0x60*/ System.Collections.Generic.List<DefineBounty.BountyData> m_autoBountyList;
    /*0x68*/ System.Collections.Generic.Dictionary<DefineBounty.BountyData, System.Collections.Generic.List<PTShare.Define.SBountyHero>> m_bountySelectHeroData;

    /*0x136640c*/ BountyAutoDispatchPopup();
    /*0x1364990*/ void OnCreate();
    /*0x1364994*/ void OnDelete();
    /*0x1364998*/ void OnEnter();
    /*0x136499c*/ void OnExit();
    /*0x1364be8*/ void OnFinish();
    /*0x1364bec*/ void OnLeave();
    /*0x1364bf0*/ void OnStart();
    /*0x1364bf4*/ void InitPopup(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1364e28*/ void SetBountyData();
    /*0x13653b4*/ void SetScrollContent();
    /*0x1364c8c*/ void BindEvent();
    /*0x13649cc*/ void RemoveEvent();
    /*0x1364b60*/ void ClearData();
    /*0x13657a0*/ void HandleScrollContent(int index, BountyAutoQuestEntity bountyAutoQuestEntity);
    /*0x1365954*/ void HandleOnChagneAutoSelect(DefineBounty.BountyData bountyData, bool enable);
    /*0x13659ec*/ void OnClickDispatch();
    /*0x1366300*/ void OnClickExit();
    /*0x13664ec*/ void <OnClickExit>b__22_0(DefineBounty.BountyData data);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> dispatchList;

        /*0xda2bd0*/ <>c__DisplayClass14_0();
        /*0xda2bd8*/ void <SetBountyData>b__1(PTShare.Define.SBountyHero data);
    }

    class <>c
    {
        static /*0x0*/ BountyAutoDispatchPopup.<> <>9;
        static /*0x8*/ System.Comparison<DefineBounty.BountyData> <>9__14_0;
        static /*0x10*/ System.Action<PTShare.Define.SBountyHero> <>9__14_2;
        static /*0x18*/ System.Action<PTShare.Define.SBountyHero> <>9__21_1;
        static /*0x20*/ System.Action <>9__21_0;
        static /*0x28*/ System.Action<PTShare.Define.SBountyHero> <>9__22_1;

        static /*0xda29a8*/ <>c();
        /*0xda2a08*/ <>c();
        /*0xda2a10*/ int <SetBountyData>b__14_0(DefineBounty.BountyData lhs, DefineBounty.BountyData rhs);
        /*0xda2a50*/ void <SetBountyData>b__14_2(PTShare.Define.SBountyHero data);
        /*0xda2b14*/ void <OnClickDispatch>b__21_1(PTShare.Define.SBountyHero heroData);
        /*0xda2b70*/ void <OnClickDispatch>b__21_0();
        /*0xda2b74*/ void <OnClickExit>b__22_1(PTShare.Define.SBountyHero heroData);
    }
}

class BountyAutoQuestEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<DefineBounty.BountyData, bool> OnChangeCheck;
    /*0x18*/ LocalizeString m_questName;
    /*0x20*/ AtlasImage[] m_stars;
    /*0x28*/ HeroSlotBounty[] m_heroSlots;
    /*0x30*/ HeroPropertySlotBounty[] m_heroPropertySlots;
    /*0x38*/ AtlasImage m_checkIcon;
    /*0x40*/ AtlasImage m_questGradeImage;
    /*0x48*/ LocalizeString m_questNeedRequireCount;
    /*0x50*/ ItemTableRewardSlot m_itemTableRewardSlot;
    /*0x58*/ DefineBounty.BountyData m_bountyData;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> m_selectHeros;
    /*0x68*/ bool m_isCheck;
    /*0x6c*/ DefineBounty.BOUNTY_TYPE m_bountyType;

    static /*0x1367508*/ BountyAutoQuestEntity();
    /*0x13674f8*/ BountyAutoQuestEntity();
    /*0x1365890*/ void InitEntity(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType, System.Collections.Generic.List<PTShare.Define.SBountyHero> selectHeros);
    /*0x1366644*/ void SetBountyStar();
    /*0x13667b4*/ void SetHeroSlot();
    /*0x1366948*/ void SetHeroPropertySlot();
    /*0x1366a78*/ void SetRewardSlot();
    /*0x1366bdc*/ void SetQuestName();
    /*0x1366cf4*/ void SetQuestGrade();
    /*0x1366e00*/ void SetRequireCount();
    /*0x1367024*/ void UpdateCheckIcon();
    /*0x1367414*/ void OnClickCheck();
}

class BountyDispatchPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_descText;
    /*0x50*/ LocalizeString m_dispatchRequireCountText;
    /*0x58*/ ItemTableRewardSlot m_rewardItem;
    /*0x60*/ HeroSlotBounty[] m_dispatchSlots;
    /*0x68*/ UnityEngine.GameObject m_mercenarySlotParent;
    /*0x70*/ HeroSlotBounty m_mercenarySlot;
    /*0x78*/ HeroPropertySlotBounty[] m_heroPropertySlots;
    /*0x80*/ AtlasImage m_dispatchGradeImage;
    /*0x88*/ AtlasImage m_dispatchNeedCountCheckIcon;
    /*0x90*/ UnityEngine.UI.Button m_autoSelectButton;
    /*0x98*/ UnityEngine.UI.Button m_confirmButton;
    /*0xa0*/ BountyDispatchWindow m_bountyDispatchWindow;
    /*0xa8*/ bool m_isUnlockVip;
    /*0xb0*/ DefineBounty.BountyData m_bountyData;
    /*0xb8*/ DefineBounty.BOUNTY_TYPE m_bountyType;

    /*0x1369614*/ BountyDispatchPopup();
    /*0x136750c*/ void OnCreate();
    /*0x1367510*/ void OnDelete();
    /*0x1367514*/ void OnEnter();
    /*0x1367518*/ void OnExit();
    /*0x1367630*/ void OnFinish();
    /*0x1367634*/ void OnLeave();
    /*0x1367638*/ void OnStart();
    /*0x136763c*/ void InitPopup(DefineBounty.BOUNTY_TYPE bountyType, DefineBounty.BountyData bountyData);
    /*0x1367928*/ void SetUI();
    /*0x136796c*/ void UpdatePopup();
    /*0x136778c*/ void SetData();
    /*0x13679a8*/ void SetTitle();
    /*0x1367ac0*/ void SetDesc();
    /*0x1367bb0*/ void SetReward();
    /*0x1367cb8*/ void SetDispatchGrade();
    /*0x1367dc4*/ void SetFactions();
    /*0x1367ef4*/ void SetButton();
    /*0x1367f94*/ void UpdateDispatchHeros();
    /*0x1368268*/ void UpdateMercenarySlot();
    /*0x1368454*/ void UpdateDispatchRequireCount();
    /*0x136890c*/ void UpdateButton();
    /*0x1368638*/ void UpdateFactionPropertyIcon();
    /*0x1368e5c*/ void HandleOnSelectDispatchHero();
    /*0x1368e60*/ void HandleOnUnSelectDispatchHero(PTShare.Define.SBountyHero sHero);
    /*0x1369120*/ void HandleOnUnSelectDispatchMercenary(PTShare.Define.SBountyHero sHero);
    /*0x1367830*/ void BindEvent();
    /*0x1367540*/ void RemoveEvent();
    /*0x1369204*/ void OnClickAutoSelect();
    /*0x1369300*/ void OnClickConfirm();
    /*0x1369594*/ void OnClickExit();
    /*0x1369624*/ void <OnClickConfirm>b__44_0();
}

class BountyDispatchSupportEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlotBounty m_heroSlot;
    /*0x20*/ AtlasImage m_gradeImage;
    /*0x28*/ LocalizeString m_heroNameText;
    /*0x30*/ LocalizeString m_helpInfoText;
    /*0x38*/ UnityEngine.GameObject m_emptyInfoObject;
    /*0x40*/ UnityEngine.GameObject m_releaseButtonObject;
    /*0x48*/ UnityEngine.GameObject m_heroInfoParentObject;
    /*0x50*/ PTShare.Define.SBountyHero m_sBountyHero;

    /*0x136a1e0*/ BountyDispatchSupportEntity();
    /*0x13696a4*/ bool IsEmpty();
    /*0x13696b4*/ HeroSlotBounty GetHeroSlotBounty();
    /*0x13696bc*/ void InitEntity(PTShare.Define.SBountyHero sBountyHero);
    /*0x13696fc*/ void SetHeroSlot();
    /*0x1369838*/ void SetHeroGrade();
    /*0x1369900*/ void SetHeroName();
    /*0x1369a58*/ void SetHelpInfoText();
    /*0x1369c50*/ void SetEnableObjects();
    /*0x1369dbc*/ void HandleShowHeroPopup(PTShare.Define.SBountyHero sHero);
    /*0x1369eec*/ void OnClickRelease();

    class <>c
    {
        static /*0x0*/ BountyDispatchSupportEntity.<> <>9;
        static /*0x8*/ System.Action <>9__17_0;

        static /*0xda2c3c*/ <>c();
        /*0xda2c9c*/ <>c();
        /*0xda2ca4*/ void <OnClickRelease>b__17_0();
    }
}

class BountyDispatchSupportPopup : GuiBase
{
    /*0x40*/ ScrollContent_BountyDispatchSupportEntity m_scrollContent;
    /*0x48*/ LocalizeString m_descText;

    /*0x136a9f8*/ BountyDispatchSupportPopup();
    /*0x136a1e8*/ void OnCreate();
    /*0x136a1ec*/ void OnDelete();
    /*0x136a1f0*/ void OnEnter();
    /*0x136a1f4*/ void OnFinish();
    /*0x136a1f8*/ void OnLeave();
    /*0x136a1fc*/ void OnStart();
    /*0x136a200*/ void OnExit();
    /*0x136a404*/ void InitPopup();
    /*0x136a66c*/ void SetDesc();
    /*0x136a848*/ void UpdateScrollContent();
    /*0x136a4e4*/ void BindEvent();
    /*0x136a284*/ void RemoveEvent();
    /*0x136a918*/ void HandleScrollContent(int index, BountyDispatchSupportEntity obj);
    /*0x136a9d4*/ void HandleRefresh();
}

class BountyDispatchSupportSelectPopup : GuiBase
{
    /*0x40*/ HeroPropertySlotWindow m_heroPropertySlotWindow;
    /*0x48*/ ScrollContent_HeroSlotBounty m_scrollContent;
    /*0x50*/ UnityEngine.UI.Button m_dispatchButton;
    /*0x58*/ LocalizeString m_emptyText;
    /*0x60*/ PTShare.Define.SBountyHero m_selectHero;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHero> m_heroList;

    /*0x136b8e4*/ BountyDispatchSupportSelectPopup();
    /*0x136aa00*/ void OnCreate();
    /*0x136aa04*/ void OnDelete();
    /*0x136aa08*/ void OnEnter();
    /*0x136aa0c*/ void OnFinish();
    /*0x136aa10*/ void OnLeave();
    /*0x136aa14*/ void OnStart();
    /*0x136aa18*/ void OnExit();
    /*0x1369e38*/ void InitPopup();
    /*0x136af58*/ void SetPropertySlotWindow();
    /*0x136b010*/ void UpdateScrollContent();
    /*0x136b0ec*/ void UpdateButton();
    /*0x136ac14*/ void BindEvent();
    /*0x136aab4*/ void RemoveEvent();
    /*0x136ad7c*/ void HandleChangeProperty(int _type);
    /*0x136b188*/ void HandleScrollContent(int index, HeroSlotBounty obj);
    /*0x136b468*/ void HandleOnClickHero(PTShare.Define.SBountyHero sHero);
    /*0x136b5e8*/ void OnClickDispatch();
    /*0x136b8ec*/ void <OnClickDispatch>b__22_0();

    class <>c__DisplayClass20_0
    {
        /*0x10*/ BountyDispatchSupportSelectPopup <>4__this;
        /*0x18*/ int index;

        /*0xda2d10*/ <>c__DisplayClass20_0();
        /*0xda2d18*/ bool <HandleScrollContent>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ PTShare.Define.SBountyHero sHero;

        /*0xda2db0*/ <>c__DisplayClass21_0();
        /*0xda2db8*/ bool <HandleOnClickHero>b__0(PTShare.Define.SBountyHero data);
    }
}

class BountyDispatchWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HeroSlot m_baseSlot;
    /*0x20*/ HeroSlot m_mercenarySlot;
    /*0x28*/ LocalizeString m_emptyText;
    /*0x30*/ HeroPropertySlotWindow m_propertySlotWindow;
    /*0x38*/ ScrollContent_HeroSlotBounty m_scrollContent;
    /*0x40*/ DefineBounty.BountyData m_bountyData;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHero> m_showHeroList;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> m_supportHeroList;
    /*0x58*/ bool m_isOpen;
    /*0x5c*/ PropertyType m_eCurPropertyType;
    /*0x60*/ DefineBounty.BOUNTY_TYPE m_bountyType;

    /*0x136d2f0*/ BountyDispatchWindow();
    /*0x136b8f8*/ void OnDisable();
    /*0x1368f44*/ void InitWindow(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136bd54*/ void SetPropertySlot();
    /*0x136be0c*/ void UpdateWindow();
    /*0x136be10*/ void UpdateHeroList();
    /*0x136bb3c*/ void BindEvent();
    /*0x136b92c*/ void RemoveEvent();
    /*0x136c6ac*/ void HandleScrollContent(int index, HeroSlotBounty heroSlot);
    /*0x136ca08*/ void HandleClickHeroSlot(PTShare.Define.SBountyHero sHero);
    /*0x136d2e4*/ void HandleChangeProperty(int _type);
    /*0x136d2ec*/ void HandleOnSelectDispatchHero();
}

class BountyLevelInfoPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_currentLevelText;
    /*0x50*/ LocalizeString m_nextLevelText;
    /*0x58*/ UnityEngine.UI.Slider m_soloBountySlider;
    /*0x60*/ LocalizeString m_soloRequireText;
    /*0x68*/ LocalizeString m_soloBountyText;
    /*0x70*/ UnityEngine.UI.Slider m_raidBountySlider;
    /*0x78*/ LocalizeString m_raidRequireText;
    /*0x80*/ LocalizeString m_raidBountyText;
    /*0x88*/ UnityEngine.GameObject m_soloSliderParent;
    /*0x90*/ UnityEngine.GameObject m_raidSliderParent;

    /*0x136e608*/ BountyLevelInfoPopup();
    /*0x136d818*/ void OnCreate();
    /*0x136d81c*/ void OnDelete();
    /*0x136d820*/ void OnEnter();
    /*0x136d824*/ void OnExit();
    /*0x136d8a0*/ void OnFinish();
    /*0x136d8a4*/ void OnLeave();
    /*0x136d8a8*/ void OnStart();
    /*0x136d8ac*/ void InitPopup(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136dc30*/ void SetCurrentText(int bountyLevel);
    /*0x136d994*/ void SetTitle(int bountyLevel);
    /*0x136dd84*/ void SetNextText(int bountyLevel);
    /*0x136dfa8*/ void SetLevelupRequireData(int bountyLevel);
}

class BountyManager : Singleton.Component.SingletonComponent<BountyManager>
{
    static /*0x0*/ System.Action OnRefreshBounty;
    /*0x28*/ DefineBounty.BountyUserData m_bountyUserData;
    /*0x30*/ System.Collections.Generic.List<BountyManager.HeroIds> m_busyHeroIds;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> m_selectDispatchHeros;
    /*0x40*/ PTShare.Define.SBountyHero m_selectMercenaryHero;
    /*0x48*/ System.Collections.Generic.List<DefineBounty.BountyData> m_soloBountyDataList;
    /*0x50*/ System.Collections.Generic.List<DefineBounty.BountyData> m_raidBountyDataList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> m_supportList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> m_mySupporterList;

    static /*0x1370e90*/ BountyManager();
    /*0x1370d04*/ BountyManager();
    /*0x136e610*/ void AwakeInstance();
    /*0x136e614*/ bool InitInstance();
    /*0x136e61c*/ void ReleaseInstance();
    /*0x136d978*/ int GetBountyLevel();
    /*0x136e5dc*/ int GetBountyExp(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x13655b0*/ PTShare.Define.SBountyHeroExtend GetSelectMercenaryHero();
    /*0x136e680*/ System.Collections.Generic.List<PTShare.Define.SBountyHeroExtend> GetSupportHeroList();
    /*0x136e688*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> GetMySupportHeroList();
    /*0x136e690*/ System.Collections.Generic.List<PTShare.Define.SBountyHero> GetSelectDispatchHeros();
    /*0x136e698*/ System.Collections.Generic.List<DefineBounty.BountyData> GetSoloBountyDataList();
    /*0x136e6a0*/ System.Collections.Generic.List<DefineBounty.BountyData> GetRaidBountyDataList();
    /*0x1368b2c*/ int GetRequireGradeCount(int requireGrade, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1368c14*/ System.Collections.Generic.Dictionary<int, int> GetSelectFactionDatas(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136c574*/ bool IsUnUsedHero(int tableId);
    /*0x136c5a8*/ bool IsBusyHero(long playerId, int heroId);
    /*0x136e6a8*/ BountyManager.HeroIds FindBusyHeroId(long playerId, int heroId);
    /*0x1366038*/ long FindBountyPlayerId(PTShare.Define.SBountyHero sBountyHero);
    /*0x136e7a0*/ bool IsHelpHero(int heroID);
    /*0x136cd60*/ bool IsDispatchHero(DefineBounty.BountyData bountyData, PTShare.Define.SBountyHero sHero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136cc2c*/ bool IsSelectHero(PTShare.Define.SBountyHero hero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136d1cc*/ bool IsSameSeletectTableIdHero(int tableId);
    /*0x136d0fc*/ void AddSelectDispatchHero(PTShare.Define.SBountyHero hero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1368f98*/ void RemoveSelectDispatchHero(PTShare.Define.SBountyHero hero, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x13654bc*/ bool AutoSelectBountyQuest(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136f28c*/ System.Collections.Generic.List<int> ComputeEmptyFactionList(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136ed48*/ void AutoFillBounty(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x136e8d0*/ void AutoFillBountyMercenary(DefineBounty.BountyData bountyData);
    /*0x136e89c*/ int FindFactionId(PTShare.Define.SBountyHero sBountyHero);
    /*0x136f434*/ PTShare.Define.SHero ConvertBountyHeroToSHero(PTShare.Define.SBountyHero sBountyHero);
    /*0x136b3d0*/ PTShare.Define.SBountyHero ConvertSHeroToBountyHero(PTShare.Define.SHero sHero);
    /*0x136f554*/ System.ValueTuple<long, int> ConvertStringToIds(string str);
    /*0x1365630*/ void AddBusyHero(long playerId, int heroId);
    /*0x136f6bc*/ void AddBusyHero(PTShare.Define.SBountyHero sBountyHero);
    /*0x136f6f4*/ void RemoveBusyHero(long playerId, int heroId);
    /*0x136f770*/ void RemoveBusyHero(PTShare.Define.SBountyHero sBountyHero);
    /*0x136f7a8*/ void DeleteHero(PTShare.Define.SHero sHero);
    /*0x1365460*/ void ClearSelectDispatchHero();
    /*0x136f8d8*/ void Send_BountyEnter(System.Action callBack);
    /*0x136fb34*/ void SetQuestData(System.Collections.Generic.List<PTShare.Define.SBountyQuest> quests);
    /*0x137009c*/ void SortBountyDataList(System.Collections.Generic.List<DefineBounty.BountyData> sortList);
    /*0x136fe40*/ void ParseAddDispatchHero(System.Collections.Generic.List<string> parseData);
    /*0x13701bc*/ void ParseAddDispatchHero(string parseDatas);
    /*0x137042c*/ void Send_BountySupportEnter(System.Action callBack);
    /*0x13705bc*/ void Send_ResetSoloBounty(System.Action callBack);
    /*0x136b6b8*/ void Send_Support(PTShare.Define.SBountyHero sHero, System.Action callBack);
    /*0x136a034*/ void Send_ReleaseSupport(int heroId, System.Action callBack);
    /*0x1366110*/ void Send_Dispatch(string questIds, string heroids, System.Action callBack);
    /*0x137074c*/ void Send_Reward(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType, System.Action callBack);
    /*0x1370a0c*/ void Send_AllReward(DefineBounty.BOUNTY_TYPE bountyType, System.Action callBack);
    /*0x1370bb8*/ void UpdateReddot();
    /*0x13670c4*/ Rewards GetReward(int bountyIndex, DefineBounty.BOUNTY_TYPE bountyType);

    class HeroIds
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda43e0*/ HeroIds(long _playerId, int _heroId);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda2f5c*/ <>c__DisplayClass24_0();
        /*0xda2f64*/ bool <IsBusyHero>b__0(BountyManager.HeroIds data);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda2fa0*/ <>c__DisplayClass25_0();
        /*0xda2fa8*/ bool <FindBusyHeroId>b__0(BountyManager.HeroIds data);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ int heroID;

        /*0xda2fe4*/ <>c__DisplayClass27_0();
        /*0xda2fec*/ bool <IsHelpHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ PTShare.Define.SBountyHero sHero;

        /*0xda3010*/ <>c__DisplayClass28_0();
        /*0xda3018*/ bool <IsDispatchHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ PTShare.Define.SBountyHero hero;

        /*0xda3048*/ <>c__DisplayClass29_0();
        /*0xda3050*/ bool <IsSelectHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ int tableId;

        /*0xda3080*/ <>c__DisplayClass30_0();
        /*0xda3088*/ bool <IsSameSeletectTableIdHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ PTShare.Define.SBountyHero hero;

        /*0xda30ac*/ <>c__DisplayClass32_0();
        /*0xda30b4*/ bool <RemoveSelectDispatchHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHero> heroList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SBountyHero> <>9__0;

        /*0xda30e4*/ <>c__DisplayClass35_0();
        /*0xda30ec*/ bool <AutoFillBounty>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SBountyHero> <>9__0;

        /*0xda317c*/ <>c__DisplayClass36_0();
        /*0xda3184*/ bool <AutoFillBountyMercenary>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ long playerId;
        /*0x18*/ int heroId;

        /*0xda321c*/ <>c__DisplayClass41_0();
        /*0xda3224*/ bool <AddBusyHero>b__0(BountyManager.HeroIds data);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0xda3260*/ <>c__DisplayClass45_0();
        /*0xda3268*/ bool <DeleteHero>b__0(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda3298*/ <>c__DisplayClass47_0();
        /*0xda32a0*/ void <Send_BountyEnter>b__0(ServerProtocol.ResBountyEnter instance);
    }

    class <>c
    {
        static /*0x0*/ BountyManager.<> <>9;
        static /*0x8*/ System.Comparison<DefineBounty.BountyData> <>9__49_0;

        static /*0xda2de8*/ <>c();
        /*0xda2e48*/ <>c();
        /*0xda2e50*/ int <SortBountyDataList>b__49_0(DefineBounty.BountyData a, DefineBounty.BountyData b);
    }

    class <>c__DisplayClass52_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda3348*/ <>c__DisplayClass52_0();
        /*0xda3350*/ void <Send_BountySupportEnter>b__0(ServerProtocol.ResBountySupporter instance);
    }

    class <>c__DisplayClass53_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda338c*/ <>c__DisplayClass53_0();
        /*0xda3394*/ void <Send_ResetSoloBounty>b__0(ServerProtocol.ResBountyReset instance);
    }

    class <>c__DisplayClass54_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ PTShare.Define.SBountyHero sHero;
        /*0x20*/ System.Action callBack;

        /*0xda34a4*/ <>c__DisplayClass54_0();
        /*0xda34ac*/ void <Send_Support>b__0(ServerProtocol.ResBountySetSupporter instance);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ int heroId;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SBountyHero> <>9__1;

        /*0xda356c*/ <>c__DisplayClass55_0();
        /*0xda3574*/ void <Send_ReleaseSupport>b__0(ServerProtocol.ResBountyReleaseSupporter instance);
        /*0xda36cc*/ bool <Send_ReleaseSupport>b__1(PTShare.Define.SBountyHero data);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ string questIds;
        /*0x18*/ BountyManager <>4__this;
        /*0x20*/ string heroids;
        /*0x28*/ System.Action callBack;

        /*0xda36f0*/ <>c__DisplayClass56_0();
        /*0xda36f8*/ void <Send_Dispatch>b__0(ServerProtocol.ResBountyDispatch instance);
    }

    class <>c__DisplayClass56_1
    {
        /*0x10*/ int id;

        /*0xda3a10*/ <>c__DisplayClass56_1();
        /*0xda3a18*/ bool <Send_Dispatch>b__1(DefineBounty.BountyData data);
        /*0xda3a3c*/ bool <Send_Dispatch>b__2(DefineBounty.BountyData data);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda3a60*/ <>c__DisplayClass57_0();
        /*0xda3a68*/ void <Send_Reward>b__0(ServerProtocol.ResBountyReceive instance);
    }

    class <>c__DisplayClass57_1
    {
        /*0x10*/ ServerProtocol.ResBountyReceive instance;
        /*0x18*/ BountyManager.<> CS$<>8__locals1;

        /*0xda3cd4*/ <>c__DisplayClass57_1();
        /*0xda3cdc*/ void <Send_Reward>b__1();
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ BountyManager <>4__this;
        /*0x18*/ DefineBounty.BOUNTY_TYPE bountyType;
        /*0x20*/ System.Action callBack;

        /*0xda3d94*/ <>c__DisplayClass58_0();
        /*0xda3d9c*/ void <Send_AllReward>b__0(ServerProtocol.ResBountyReceiveAll instance);
    }

    class <>c__DisplayClass58_1
    {
        /*0x10*/ ServerProtocol.ResBountyReceiveAll instance;
        /*0x18*/ BountyManager.<> CS$<>8__locals1;

        /*0xda4280*/ <>c__DisplayClass58_1();
        /*0xda4290*/ void <Send_AllReward>b__1();
    }

    class <>c__DisplayClass58_2
    {
        /*0x10*/ int i;
        /*0x18*/ BountyManager.<> CS$<>8__locals2;

        /*0xda4288*/ <>c__DisplayClass58_2();
        /*0xda4348*/ bool <Send_AllReward>b__2(DefineBounty.BountyData data);
    }
}

class BountyPopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_bountyQuestRectTransform;
    /*0x48*/ ScrollContent_BountyQuestEntity m_scrollContent;
    /*0x50*/ LocalizeString m_emptyText;
    /*0x58*/ UnityEngine.GameObject[] m_unSelectButtons;
    /*0x60*/ UnityEngine.GameObject[] m_selectButtons;
    /*0x68*/ BountyTopMenu m_bountyTopMenu;
    /*0x70*/ UnityEngine.UI.Button m_autoDispatchButton;
    /*0x78*/ UnityEngine.UI.Button m_fastRewardButton;
    /*0x80*/ System.Collections.Generic.List<DefineBounty.BountyData> m_bountyDataList;
    /*0x88*/ DefineBounty.BOUNTY_TYPE m_currencyBountyTab;
    /*0x8c*/ bool m_isUnlockVip;

    /*0x1371e00*/ BountyPopup();
    /*0x1370e94*/ void OnCreate();
    /*0x1370e98*/ void OnDelete();
    /*0x1370e9c*/ void OnEnter();
    /*0x1371028*/ void OnExit();
    /*0x13710d0*/ void OnFinish();
    /*0x13710d4*/ void OnLeave();
    /*0x1371258*/ void OnStart();
    /*0x137125c*/ void InitBountyPopup(DefineBounty.BOUNTY_TYPE showTab);
    /*0x1371330*/ void UpdateBountyPopup(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x1371554*/ void UpdateBountyData();
    /*0x137143c*/ void UpdateTab();
    /*0x137189c*/ void UpdateButton();
    /*0x13715e0*/ void UpdateBountyScrollSize();
    /*0x1371670*/ void UpdateBountyScrollContent();
    /*0x13716cc*/ void UpdateEmptyText();
    /*0x1370ea0*/ void BindEvent();
    /*0x13710d8*/ void RemoveEvent();
    /*0x1371a0c*/ void HandleRefreshPopup();
    /*0x1371a14*/ void HandleScrollContent(int index, BountyQuestEntity bountyQuestEntity);
    /*0x1371a9c*/ void OnClickTabChange(int tabIndex);
    /*0x1371b24*/ void OnClickAllReward();
    /*0x1371d68*/ void OnClickAutoDispatch();
    /*0x1371e80*/ void <OnClickAllReward>b__31_0();
}

class BountyQuestEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage[] m_stars;
    /*0x20*/ LocalizeString m_questNameText;
    /*0x28*/ UnityEngine.UI.Slider m_progressSlider;
    /*0x30*/ LocalizeString m_progressText;
    /*0x38*/ LocalizeString m_questTimeText;
    /*0x40*/ LocalizeString m_expireText;
    /*0x48*/ ItemTableRewardSlot m_itemTableRewardSlot;
    /*0x50*/ UnityEngine.GameObject m_dispatchButtonObject;
    /*0x58*/ UnityEngine.GameObject m_rewardButtonObject;
    /*0x60*/ System.Collections.Generic.List<AtlasImage> m_starImageList;
    /*0x68*/ DefineBounty.BountyData m_bountyData;
    /*0x70*/ bool m_isBountyExpire;
    /*0x74*/ DefineBounty.BOUNTY_TYPE m_bountyType;
    /*0x78*/ UnityEngine.Coroutine m_sliderCoroutine;

    /*0x16ee26c*/ BountyQuestEntity();
    /*0x16ed230*/ void OnDisable();
    /*0x16ed33c*/ void WarningPass();
    /*0x16ed3b8*/ void InitEntity(DefineBounty.BountyData bountyData, DefineBounty.BOUNTY_TYPE bountyType);
    /*0x16ed524*/ void SetBountyData();
    /*0x16ed61c*/ void SetBountyTitle();
    /*0x16ed734*/ void SetExpireTime();
    /*0x16eda00*/ void SetButton();
    /*0x16edaf4*/ void SetBountyStar();
    /*0x16edc64*/ void SetRewardSlot();
    /*0x16edda0*/ void SetBountyTime();
    /*0x16edf98*/ void PlaySlideCoroutine();
    /*0x16ee054*/ void StopCoroutines();
    /*0x16ed42c*/ void BindEvent();
    /*0x16ed234*/ void RemoveEvent();
    /*0x16edfe8*/ System.Collections.IEnumerator CoUpdateBountySlider();
    /*0x16ee058*/ void HandleRefresh();
    /*0x16ee0a8*/ void OnClickDispath();
    /*0x16ee134*/ void OnClickReward();

    class <CoUpdateBountySlider>d__28 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BountyQuestEntity <>4__this;
        /*0x28*/ System.TimeSpan <fullTime>5__2;
        /*0x30*/ System.TimeSpan <expireTime>5__3;
        /*0x38*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__4;
        /*0x40*/ System.TimeSpan <secSpan>5__5;

        /*0xda4488*/ <CoUpdateBountySlider>d__28(int <>1__state);
        /*0xda44b4*/ void System.IDisposable.Dispose();
        /*0xda44b8*/ bool MoveNext();
        /*0xda4988*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda4990*/ void System.Collections.IEnumerator.Reset();
        /*0xda49d0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ BountyQuestEntity.<> <>9;
        static /*0x8*/ System.Action <>9__31_0;

        static /*0xda441c*/ <>c();
        /*0xda447c*/ <>c();
        /*0xda4484*/ void <OnClickReward>b__31_0();
    }
}

class BountyTopMenu : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnShowLevelUpParticle;
    /*0x18*/ UnityEngine.UI.Button m_resetButton;
    /*0x20*/ UnityEngine.UI.Button m_helpButton;
    /*0x28*/ LocalizeString m_levelText;
    /*0x30*/ LocalizeString m_resetTimeTitleText;
    /*0x38*/ LocalizeString m_resetTimeText;
    /*0x40*/ ParticleBase m_levelupParticle;
    /*0x48*/ DefineBounty.BOUNTY_TYPE m_currencyBountyTab;
    /*0x50*/ UnityEngine.Coroutine m_timerCoroutine;

    static /*0x16ef5a4*/ BountyTopMenu();
    /*0x16ef594*/ BountyTopMenu();
    /*0x16ee5c4*/ void OnDisable();
    /*0x16ee6fc*/ void InitMenu(DefineBounty.BOUNTY_TYPE bountyType);
    /*0x16ee8c4*/ void UpdateButton();
    /*0x16eeb8c*/ void UpdateLevelText();
    /*0x16eec9c*/ void UpdateLeftTime(ref System.TimeSpan timeSpan);
    /*0x16ee874*/ void StartUpdateTimer();
    /*0x16ee6cc*/ void StopTimer();
    /*0x16eeec0*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0x16eef2c*/ void HandleShowLevelupParticle();
    /*0x16ef030*/ void OnClickReset();
    /*0x16ef34c*/ void OnClickDispatchSupport();
    /*0x16ef468*/ void OnClickLevel();
    /*0x16ef4f0*/ void OnClickHelp();
    /*0x16ef5a8*/ void <CoUpdateTimer>b__16_0();

    class <>c
    {
        static /*0x0*/ BountyTopMenu.<> <>9;
        static /*0x8*/ System.Predicate<DefineBounty.BountyData> <>9__11_0;
        static /*0x10*/ System.Action <>9__18_1;
        static /*0x18*/ System.Action<bool> <>9__18_0;
        static /*0x20*/ System.Action <>9__19_0;

        static /*0xda49d8*/ <>c();
        /*0xda4a38*/ <>c();
        /*0xda4a40*/ bool <UpdateButton>b__11_0(DefineBounty.BountyData data);
        /*0xda4a60*/ void <OnClickReset>b__18_0(bool result);
        /*0xda4b94*/ void <OnClickReset>b__18_1();
        /*0xda4b98*/ void <OnClickDispatchSupport>b__19_0();
    }

    class <CoUpdateTimer>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BountyTopMenu <>4__this;
        /*0x28*/ System.TimeSpan <timeSpan>5__2;
        /*0x30*/ System.TimeSpan <sec>5__3;
        /*0x38*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__4;

        /*0xda4c18*/ <CoUpdateTimer>d__16(int <>1__state);
        /*0xda4c44*/ void System.IDisposable.Dispose();
        /*0xda4c48*/ bool MoveNext();
        /*0xda5124*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda512c*/ void System.Collections.IEnumerator.Reset();
        /*0xda516c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DefineBounty
{
    static /*0x0*/ int BOUNTY_MAX_STAR;
    static /*0x4*/ int BOUNTY_MAX_SUPPORT_COUNT;
    static /*0x8*/ int BOUNTY_MAX_LEVEL;
    static /*0x10*/ string BOUNTY_STAR_IMAGE;
    static /*0x18*/ string BOUNTY_EMPTY_STAR_IMAGE;
    static /*0x20*/ System.DateTime BountyDefaultTime;

    static /*0xf60038*/ DefineBounty();
    static /*0xf5fc38*/ string GetBountyTitle(int star, int localizeIndex);
    static /*0xf5fdb4*/ string GetBountyDesc(int star, int localizeIndex);
    static /*0xf5ff30*/ UnityEngine.Color FindBountyColor(int star);
    static /*0xf60014*/ int FindBountyGrade(int star);

    enum BOUNTY_TYPE
    {
        SOLO = 0,
        TEAM = 1,
        NULL = 2,
    }

    class BountyData
    {
        /*0x10*/ int id;
        /*0x14*/ int bountyStar;
        /*0x18*/ int bountyIndex;
        /*0x1c*/ int localizeType;
        /*0x20*/ int[] factions;
        /*0x28*/ int needUnitCount;
        /*0x2c*/ bool isPlayingBounty;
        /*0x30*/ System.Collections.Generic.List<string> dispatchHeros;
        /*0x38*/ System.DateTime expireTime;

        /*0x1076684*/ BountyData(PTShare.Define.SBountyQuest bountyPacket, TableData.TableData_Bountyquest tableData);
        /*0x1076858*/ bool IsFinish();
    }

    class BountyUserData
    {
        /*0x10*/ int bountyLevel;
        /*0x14*/ int soloClearCount;
        /*0x18*/ int raidClearCount;

        /*0x107695c*/ BountyUserData();
    }
}

class HeroPropertySlotBounty : HeroPropertySlot
{
    /*0x38*/ AtlasImage m_checkIcon;

    /*0x122c094*/ HeroPropertySlotBounty();
    /*0x122bfe4*/ void SetCheckIcon(bool _enable);
}

class HeroSlotBounty : HeroSlot
{
    /*0x48*/ LocalizeString m_playerName;
    /*0x50*/ AtlasImage m_PlusIcon;
    /*0x58*/ PTShare.Define.SBountyHero m_bountyHero;
    /*0x60*/ System.Action<PTShare.Define.SBountyHero> OnClickBountyHeroAction;

    /*0x126c698*/ HeroSlotBounty();
    /*0x126c280*/ void InitBounty(PTShare.Define.SBountyHero _hero, System.Action<PTShare.Define.SBountyHero> _callback);
    /*0x126c43c*/ PTShare.Define.SBountyHeroExtend GetBountyHeroExtend();
    /*0x126c4bc*/ long GetPlayerId();
    /*0x126c568*/ void SetPlayerName(string name);
    /*0x126c348*/ void SetActiveObject(bool _enable, System.Action<PTShare.Define.SBountyHero> callBack);
    /*0x126c330*/ void SetActivePlusIcon(bool _enable);
    /*0x126c60c*/ void OnClick();
    /*0x126c674*/ void Clear();
}

class ScrollContent_BountyAutoQuestEntity : ScrollContent<BountyAutoQuestEntity>
{
    /*0xe18b84*/ ScrollContent_BountyAutoQuestEntity();
}

class ScrollContent_BountyDispatchSupportEntity : ScrollContent<BountyDispatchSupportEntity>
{
    /*0xe18bfc*/ ScrollContent_BountyDispatchSupportEntity();
}

class ScrollContent_BountyQuestEntity : ScrollContent<BountyQuestEntity>
{
    /*0xe18c74*/ ScrollContent_BountyQuestEntity();
}

class ScrollContent_HeroSlotBounty : ScrollContent<HeroSlotBounty>
{
    /*0xe1a45c*/ ScrollContent_HeroSlotBounty();
}

class MainCameraManager : Singleton.Component.SingletonComponent<MainCameraManager>
{
    /*0x28*/ UnityEngine.Camera m_MainCamera;
    /*0x30*/ float m_fDefaultSize;
    /*0x34*/ UnityEngine.Vector2 m_vecDefaultRatio;
    /*0x3c*/ float m_fSizeOffest;
    /*0x40*/ float m_fCurRatio;
    /*0x44*/ bool m_bFastenCameraEnable;

    /*0xde5eec*/ MainCameraManager();
    /*0xde59ec*/ float get_DefaultSize();
    /*0xde59f4*/ UnityEngine.Camera get_MainCamera();
    /*0xde59fc*/ float get_GetCurrentRatio();
    /*0xde5a04*/ void AwakeInstance();
    /*0xde5bdc*/ bool InitInstance();
    /*0xde5be4*/ void ReleaseInstance();
    /*0xde5cbc*/ void SetCameraDepth(int _depth);
    /*0xde5d60*/ void SetCameraPosition(UnityEngine.Vector3 _vec, bool _local);
    /*0xde56a4*/ void SetEnableCamera(bool _enable);
    /*0xde5e58*/ void FastenCurrentCameraEnableState(bool _fasten);
    /*0xde5e64*/ float GetCameraOffsetSize(int _type);
    /*0xde5ec8*/ float GetCameraOrthographicSize(int _type);
    /*0xde5ae0*/ void SetResolution();
    /*0xde5ee4*/ void HandlerActiveCamera();
}

class PostEffectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ bool supportHDRTextures;
    /*0x19*/ bool isSupported;

    /*0x100bcd8*/ PostEffectBase();
    /*0x100b434*/ UnityEngine.Material CheckShaderAndCreateMaterial(UnityEngine.Shader s, UnityEngine.Material m2Create);
    /*0x100b61c*/ UnityEngine.Material CreateMaterial(UnityEngine.Shader s, UnityEngine.Material m2Create);
    /*0x100b7b4*/ void OnEnable();
    /*0x100b7c0*/ bool CheckSupport();
    /*0x100b89c*/ bool CheckResources();
    /*0x100b8a4*/ void Start();
    /*0x100b7c8*/ bool CheckSupport(bool needDepth);
    /*0x100b8b0*/ bool CheckSupport(bool needDepth, bool needHdr);
    /*0x100b90c*/ void ReportAutoDisable();
    /*0x100b910*/ bool CheckShader(UnityEngine.Shader s);
    /*0x100b5f0*/ void NotSupported();
    /*0x100b95c*/ void DrawBorder(UnityEngine.RenderTexture dest, UnityEngine.Material material);
}

class PostEffectBase_Image : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Shader shader;
    /*0x20*/ UnityEngine.Material m_Material;

    static /*0x100bce8*/ void RenderDistortion(UnityEngine.Material material, UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination, float angle, UnityEngine.Vector2 center, UnityEngine.Vector2 radius);
    /*0x100c14c*/ PostEffectBase_Image();
    /*0x100bf34*/ void Start();
    /*0x100bfd4*/ UnityEngine.Material get_material();
    /*0x100c0a0*/ void OnDisable();
}

class PostEffect_Antialiasing : PostEffectBase
{
    /*0x20*/ UnityEngine.Shader ssaaShader;
    /*0x28*/ UnityEngine.Material ssaa;

    /*0x100c574*/ PostEffect_Antialiasing();
    /*0x100c438*/ bool CheckResources();
    /*0x100c4ac*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_Bloom : PostEffectBase
{
    /*0x1c*/ float threshold;
    /*0x20*/ float intensity;
    /*0x24*/ float blurSize;
    /*0x28*/ PostEffect_Bloom.Resolution resolution;
    /*0x2c*/ int blurIterations;
    /*0x30*/ PostEffect_Bloom.BlurType blurType;
    /*0x38*/ UnityEngine.Shader fastBloomShader;
    /*0x40*/ UnityEngine.Material fastBloomMaterial;

    /*0x100ca4c*/ PostEffect_Bloom();
    /*0x100c584*/ bool CheckResources();
    /*0x100c5c0*/ void OnDisable();
    /*0x100c66c*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);

    enum Resolution
    {
        Low = 0,
        High = 1,
    }

    enum BlurType
    {
        Standard = 0,
        Sgx = 1,
    }
}

class PostEffect_Blur : PostEffectBase
{
    /*0x1c*/ int downsample;
    /*0x20*/ float blurSize;
    /*0x24*/ int blurIterations;
    /*0x28*/ PostEffect_Blur.BlurType blurType;
    /*0x30*/ UnityEngine.Shader blurShader;
    /*0x38*/ UnityEngine.Material blurMaterial;

    /*0x100cf0c*/ PostEffect_Blur();
    /*0x100ca78*/ bool CheckResources();
    /*0x100cab4*/ void OnDisable();
    /*0x100cb60*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);

    enum BlurType
    {
        StandardGauss = 0,
        SgxGauss = 1,
    }
}

class PostEffect_Fade : PostEffectBase_Image
{
    /*0x28*/ UnityEngine.Color fadeColor;
    /*0x38*/ float intensity;

    /*0x100d024*/ PostEffect_Fade();
    /*0x100cf30*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_Fisheye : PostEffectBase
{
    /*0x1c*/ float strengthX;
    /*0x20*/ float strengthY;
    /*0x28*/ UnityEngine.Shader fishEyeShader;
    /*0x30*/ UnityEngine.Material fisheyeMaterial;

    /*0x100d1e0*/ PostEffect_Fisheye();
    /*0x100d02c*/ bool CheckResources();
    /*0x100d068*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_Grayscale : PostEffectBase_Image
{
    /*0x28*/ float intensity;

    /*0x100d2c0*/ PostEffect_Grayscale();
    /*0x100d200*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_MotionBlur : PostEffectBase_Image
{
    /*0x28*/ float blurAmount;
    /*0x2c*/ bool extraBlur;
    /*0x30*/ UnityEngine.RenderTexture accumTexture;

    /*0x100d6c0*/ PostEffect_MotionBlur();
    /*0x100d2c8*/ void Start();
    /*0x100d2cc*/ void OnDisable();
    /*0x100d33c*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class PostEffect_SunShafts : PostEffectBase
{
    /*0x1c*/ PostEffect_SunShafts.SunShaftsResolution resolution;
    /*0x20*/ PostEffect_SunShafts.ShaftsScreenBlendMode screenBlendMode;
    /*0x28*/ UnityEngine.Transform sunTransform;
    /*0x30*/ int radialBlurIterations;
    /*0x34*/ UnityEngine.Color sunColor;
    /*0x44*/ UnityEngine.Color sunThreshold;
    /*0x54*/ float sunShaftBlurRadius;
    /*0x58*/ float sunShaftIntensity;
    /*0x5c*/ float maxRadius;
    /*0x60*/ bool useDepthTexture;
    /*0x68*/ UnityEngine.Shader sunShaftsShader;
    /*0x70*/ UnityEngine.Material sunShaftsMaterial;
    /*0x78*/ UnityEngine.Shader simpleClearShader;
    /*0x80*/ UnityEngine.Material simpleClearMaterial;

    /*0x100df00*/ PostEffect_SunShafts();
    /*0x100d6d4*/ bool CheckResources();
    /*0x100d720*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);

    enum SunShaftsResolution
    {
        Low = 0,
        Normal = 1,
        High = 2,
    }

    enum ShaftsScreenBlendMode
    {
        Screen = 0,
        Add = 1,
    }
}

class PostEffect_Vortex : PostEffectBase_Image
{
    /*0x28*/ UnityEngine.Vector2 radius;
    /*0x30*/ float angle;
    /*0x34*/ UnityEngine.Vector2 center;

    /*0x100dfe4*/ PostEffect_Vortex();
    /*0x100dfa0*/ void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination);
}

class ScreenEffectObserver
{
    static /*0x0*/ ScreenEffectObserver _instance;
    /*0x10*/ System.Collections.Generic.List<CharacterBase> pause_occur_list;

    static /*0x12a4c90*/ ScreenEffectObserver();
    static /*0x12a496c*/ ScreenEffectObserver get_Instance();
    /*0x12a4a28*/ ScreenEffectObserver();
    /*0x12a4aa0*/ void IncDarkChange(CharacterBase occurActor, float intensive, float executeTime);
    /*0x12a4bac*/ void DecDarkChange(CharacterBase occurActor);
}

class ScreenEffect_Antialiasing : PostEffectProcess
{
    /*0x12a1dbc*/ ScreenEffect_Antialiasing();
    /*0x12a53f8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5464*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__1 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Antialiasing <>4__this;

        /*0xf9dc98*/ <OnProcess_Execute>d__1(int <>1__state);
        /*0xf9dcc4*/ void System.IDisposable.Dispose();
        /*0xf9dcc8*/ bool MoveNext();
        /*0xf9dd38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9dd40*/ void System.Collections.IEnumerator.Reset();
        /*0xf9dd80*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Antialiasing <>4__this;

        /*0xf9dd88*/ <OnProcess_Undo>d__2(int <>1__state);
        /*0xf9ddb4*/ void System.IDisposable.Dispose();
        /*0xf9ddb8*/ bool MoveNext();
        /*0xf9de1c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9de24*/ void System.Collections.IEnumerator.Reset();
        /*0xf9de64*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_BackgroundEffect : ScreenEffectProcess
{
    static float BG_EFFECT_DISTANCE = 60;
    static float MUL_EFFECT_SCALE = 0.17499999701976776;
    /*0x50*/ string effectName;
    /*0x58*/ UnityEngine.GameObject[] backgroundGroup;
    /*0x60*/ UnityEngine.Transform _bgEffect;
    /*0x68*/ System.Collections.IEnumerator _moveEffectProcess;

    /*0x12a1c0c*/ ScreenEffect_BackgroundEffect();
    /*0x12a54d0*/ ScreenEffectFlag GetCurIgnoreFlag();
    /*0x12a54d8*/ void ApplyDefault();
    /*0x12a5710*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a578c*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a5600*/ void SetVisible_BackgroundGroup(bool _is_on);
    /*0x12a5808*/ void LoadBGEffect();
    /*0x12a5560*/ void ReleaseBGEffect();
    /*0x12a58a8*/ void StartMoveEffectProcess();
    /*0x12a583c*/ void StopMoveEffectProcess();
    /*0x12a5968*/ System.Collections.IEnumerator OnMoveEffectProcess();

    class <OnProcess_Execute>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_BackgroundEffect <>4__this;
        /*0x30*/ float <_start_intensity>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xf9e168*/ <OnProcess_Execute>d__9(int <>1__state);
        /*0xf9e194*/ void System.IDisposable.Dispose();
        /*0xf9e198*/ bool MoveNext();
        /*0xf9e2d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e2e0*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e320*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_BackgroundEffect <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_factor>5__3;

        /*0xf9e328*/ <OnProcess_Undo>d__10(int <>1__state);
        /*0xf9e354*/ void System.IDisposable.Dispose();
        /*0xf9e358*/ bool MoveNext();
        /*0xf9e4cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e4d4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e514*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnMoveEffectProcess>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_BackgroundEffect <>4__this;
        /*0x28*/ UnityEngine.Transform <_camera_transform>5__2;

        /*0xf9de6c*/ <OnMoveEffectProcess>d__16(int <>1__state);
        /*0xf9de98*/ void System.IDisposable.Dispose();
        /*0xf9de9c*/ bool MoveNext();
        /*0xf9e118*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e120*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e160*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Bloom : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_Bloom _usingEffect;

    /*0x12a1d98*/ ScreenEffect_Bloom();
    /*0x12a59d4*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5a50*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a5acc*/ void GetCurValue(ref float _intensity);
    /*0x12a5b64*/ void GetGoalValue(float _factor, ref float _intensity);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Bloom <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9e51c*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9e548*/ void System.IDisposable.Dispose();
        /*0xf9e54c*/ bool MoveNext();
        /*0xf9e6f8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e700*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e740*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Bloom <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9e748*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9e774*/ void System.IDisposable.Dispose();
        /*0xf9e778*/ bool MoveNext();
        /*0xf9e910*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9e918*/ void System.Collections.IEnumerator.Reset();
        /*0xf9e958*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Blur : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_Blur _usingEffect;

    /*0x12a1d8c*/ ScreenEffect_Blur();
    /*0x12a5b98*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5c14*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a5c90*/ void GetCurValue(ref float _size);
    /*0x12a5d28*/ void GetGoalValue(float _factor, ref float _size);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Blur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_size>5__2;
        /*0x30*/ float <_goal_size>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9e960*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9e98c*/ void System.IDisposable.Dispose();
        /*0xf9e990*/ bool MoveNext();
        /*0xf9eb3c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9eb44*/ void System.Collections.IEnumerator.Reset();
        /*0xf9eb84*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Blur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_size>5__2;
        /*0x30*/ float <_goal_size>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9eb8c*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9ebb8*/ void System.IDisposable.Dispose();
        /*0xf9ebbc*/ bool MoveNext();
        /*0xf9ed54*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9ed5c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ed9c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_ColorChange : ScreenEffectProcess
{
    /*0x4c*/ UnityEngine.Color ambientLight;

    /*0x12a1b08*/ ScreenEffect_ColorChange();
    /*0x12a5d5c*/ void ApplyDefault();
    /*0x12a5dc8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5e44*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_ColorChange <>4__this;
        /*0x30*/ UnityEngine.Color <_start_color>5__2;
        /*0x40*/ float <_factor>5__3;

        /*0xf9eda4*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9edd0*/ void System.IDisposable.Dispose();
        /*0xf9edd4*/ bool MoveNext();
        /*0xf9ef08*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9ef10*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ef50*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ UnityEngine.Color <_start_color>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xf9ef58*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9ef84*/ void System.IDisposable.Dispose();
        /*0xf9ef88*/ bool MoveNext();
        /*0xf9f0f8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f100*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f140*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_DarkChange : ScreenEffectProcess
{
    /*0x4c*/ float ambientIntensity;

    /*0x12a1a8c*/ ScreenEffect_DarkChange();
    /*0x12a5eb8*/ void ApplyDefault();
    /*0x12a5f20*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a5f9c*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_DarkChange <>4__this;
        /*0x30*/ float <_start_intensity>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xf9f148*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9f174*/ void System.IDisposable.Dispose();
        /*0xf9f178*/ bool MoveNext();
        /*0xf9f294*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f29c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f2dc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ float <_start_intensity>5__2;
        /*0x28*/ float <_factor>5__3;

        /*0xf9f2e4*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9f310*/ void System.IDisposable.Dispose();
        /*0xf9f314*/ bool MoveNext();
        /*0xf9f45c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f464*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f4a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Fade : PostEffectProcess
{
    /*0x58*/ UnityEngine.Color fadeColor;
    /*0x68*/ float intensity;
    /*0x70*/ PostEffect_Fade _usingEffect;

    /*0x12a1dc8*/ ScreenEffect_Fade();
    /*0x12a6010*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a608c*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a6108*/ void GetCurValue(ref float _intensity);
    /*0x12a61a0*/ void GetGoalValue(float _factor, ref float _intensity);

    class <OnProcess_Execute>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fade <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9f4ac*/ <OnProcess_Execute>d__4(int <>1__state);
        /*0xf9f4d8*/ void System.IDisposable.Dispose();
        /*0xf9f4dc*/ bool MoveNext();
        /*0xf9f6a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f6ac*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f6ec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fade <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9f6f4*/ <OnProcess_Undo>d__5(int <>1__state);
        /*0xf9f720*/ void System.IDisposable.Dispose();
        /*0xf9f724*/ bool MoveNext();
        /*0xf9f880*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9f888*/ void System.Collections.IEnumerator.Reset();
        /*0xf9f8c8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Fisheye : PostEffectProcess
{
    /*0x58*/ float intensityX;
    /*0x5c*/ float intensityY;
    /*0x60*/ PostEffect_Fisheye _usingEffect;

    /*0x12a1db0*/ ScreenEffect_Fisheye();
    /*0x12a61d4*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6250*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a62cc*/ void GetCurValue(ref float _strength_x, ref float _strength_y);
    /*0x12a6380*/ void GetGoalStrengthX(float _factor, ref float _strength_x);
    /*0x12a63b4*/ void GetGoalStrengthY(float _factor, ref float _strength_y);

    class <OnProcess_Execute>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fisheye <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_x>5__2;
        /*0x30*/ float <_start_y>5__3;
        /*0x34*/ float <_goal_x>5__4;
        /*0x38*/ float <_goal_y>5__5;
        /*0x3c*/ float <_factor>5__6;

        /*0xf9f8d0*/ <OnProcess_Execute>d__4(int <>1__state);
        /*0xf9f8fc*/ void System.IDisposable.Dispose();
        /*0xf9f900*/ bool MoveNext();
        /*0xf9fae8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9faf0*/ void System.Collections.IEnumerator.Reset();
        /*0xf9fb30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Fisheye <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_x>5__2;
        /*0x30*/ float <_start_y>5__3;
        /*0x34*/ float <_goal_x>5__4;
        /*0x38*/ float <_goal_y>5__5;
        /*0x3c*/ float <_factor>5__6;

        /*0xf9fb38*/ <OnProcess_Undo>d__5(int <>1__state);
        /*0xf9fb64*/ void System.IDisposable.Dispose();
        /*0xf9fb68*/ bool MoveNext();
        /*0xf9fd38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9fd40*/ void System.Collections.IEnumerator.Reset();
        /*0xf9fd80*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Grayscale : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_Grayscale _usingEffect;

    /*0x12a1da4*/ ScreenEffect_Grayscale();
    /*0x12a63e8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6464*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a64e0*/ void GetCurValue(ref float _intensity);
    /*0x12a6578*/ void GetGoalValue(float _factor, ref float _intensity);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Grayscale <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9fd88*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xf9fdb4*/ void System.IDisposable.Dispose();
        /*0xf9fdb8*/ bool MoveNext();
        /*0xf9ff60*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9ff68*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ffa8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Grayscale <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_intensity>5__2;
        /*0x30*/ float <_goal_intensity>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xf9ffb0*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xf9ffdc*/ void System.IDisposable.Dispose();
        /*0xf9ffe0*/ bool MoveNext();
        /*0xfa0178*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0180*/ void System.Collections.IEnumerator.Reset();
        /*0xfa01c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_LookAtTarget : ScreenEffectProcess
{
    /*0x4c*/ UnityEngine.Vector3 cameraPos;
    /*0x58*/ UnityEngine.Transform trTarget;
    /*0x60*/ UnityEngine.Vector3 _defaultCameraLookAtPos;

    /*0x12a1c88*/ ScreenEffect_LookAtTarget();
    /*0x12a65ac*/ ScreenEffectFlag GetCurIgnoreFlag();
    /*0x12a65b4*/ void ApplyDefault();
    /*0x12a6704*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6780*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_LookAtTarget <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x44*/ UnityEngine.Vector3 <_look_start_pos>5__4;
        /*0x50*/ UnityEngine.Vector3 <_look_goal_pos>5__5;
        /*0x5c*/ float <_factor>5__6;

        /*0xfa01c8*/ <OnProcess_Execute>d__6(int <>1__state);
        /*0xfa01f4*/ void System.IDisposable.Dispose();
        /*0xfa01f8*/ bool MoveNext();
        /*0xfa04b4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa04bc*/ void System.Collections.IEnumerator.Reset();
        /*0xfa04fc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_LookAtTarget <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x44*/ UnityEngine.Vector3 <_look_start_pos>5__4;
        /*0x50*/ UnityEngine.Vector3 <_look_goal_pos>5__5;
        /*0x5c*/ float <_factor>5__6;

        /*0xfa0504*/ <OnProcess_Undo>d__7(int <>1__state);
        /*0xfa0530*/ void System.IDisposable.Dispose();
        /*0xfa0534*/ bool MoveNext();
        /*0xfa0790*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0798*/ void System.Collections.IEnumerator.Reset();
        /*0xfa07d8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_MotionBlur : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ PostEffect_MotionBlur _usingEffect;

    /*0x12a1d80*/ ScreenEffect_MotionBlur();
    /*0x12a67fc*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6878*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0x12a68f4*/ void GetCurValue(ref float _blur_amount);
    /*0x12a698c*/ void GetGoalValue(float _factor, ref float _blur_amount);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_MotionBlur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_amount>5__2;
        /*0x30*/ float <_goal_amount>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xfa07e0*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xfa080c*/ void System.IDisposable.Dispose();
        /*0xfa0810*/ bool MoveNext();
        /*0xfa09b8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa09c0*/ void System.Collections.IEnumerator.Reset();
        /*0xfa0a00*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_MotionBlur <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_amount>5__2;
        /*0x30*/ float <_goal_amount>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xfa0a08*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xfa0a34*/ void System.IDisposable.Dispose();
        /*0xfa0a38*/ bool MoveNext();
        /*0xfa0bd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0bd8*/ void System.Collections.IEnumerator.Reset();
        /*0xfa0c18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Move : ScreenEffectProcess
{
    /*0x4c*/ UnityEngine.Vector3 goalPos;

    /*0x12a1998*/ ScreenEffect_Move();
    /*0x12a69c4*/ void ApplyDefault();
    /*0x12a6ae4*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6b60*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Move <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x44*/ UnityEngine.Vector3 <_goal_pos>5__4;
        /*0x50*/ float <_factor>5__5;

        /*0xfa0c20*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xfa0c4c*/ void System.IDisposable.Dispose();
        /*0xfa0c50*/ bool MoveNext();
        /*0xfa0e90*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa0e98*/ void System.Collections.IEnumerator.Reset();
        /*0xfa0ed8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x30*/ UnityEngine.Vector3 <_start_pos>5__3;
        /*0x3c*/ float <_factor>5__4;

        /*0xfa0ee0*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xfa0f0c*/ void System.IDisposable.Dispose();
        /*0xfa0f10*/ bool MoveNext();
        /*0xfa1144*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa114c*/ void System.Collections.IEnumerator.Reset();
        /*0xfa118c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_ObjectShake : ScreenEffectProcess
{
    /*0x50*/ UnityEngine.RectTransform ShakeTransform;
    /*0x58*/ float shakePower;
    /*0x5c*/ UnityEngine.Vector2 _shakeTransformPos;
    /*0x68*/ UnityEngine.RectTransform _rectTransform;

    /*0x12a1d04*/ ScreenEffect_ObjectShake();
    /*0x12a6bd4*/ void ApplyDefault();
    /*0x12a6c60*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6cdc*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_ObjectShake <>4__this;
        /*0x30*/ float <_factor>5__2;

        /*0xfa1194*/ <OnProcess_Execute>d__6(int <>1__state);
        /*0xfa11c0*/ void System.IDisposable.Dispose();
        /*0xfa11c4*/ bool MoveNext();
        /*0xfa13a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa13a8*/ void System.Collections.IEnumerator.Reset();
        /*0xfa13e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_ObjectShake <>4__this;
        /*0x30*/ float <_factor>5__2;

        /*0xfa13f0*/ <OnProcess_Undo>d__7(int <>1__state);
        /*0xfa141c*/ void System.IDisposable.Dispose();
        /*0xfa1420*/ bool MoveNext();
        /*0xfa1614*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa161c*/ void System.Collections.IEnumerator.Reset();
        /*0xfa165c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Shake : ScreenEffectProcess
{
    /*0x4c*/ float shakePower;

    /*0x12a1a10*/ ScreenEffect_Shake();
    /*0x12a6d58*/ void ApplyDefault();
    /*0x12a6e48*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a6ec4*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_Shake <>4__this;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ float <_factor>5__3;

        /*0xfa1664*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xfa1690*/ void System.IDisposable.Dispose();
        /*0xfa1694*/ bool MoveNext();
        /*0xfa1904*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa190c*/ void System.Collections.IEnumerator.Reset();
        /*0xfa194c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_Shake <>4__this;
        /*0x30*/ UnityEngine.Transform <_camera_transform>5__2;
        /*0x38*/ float <_factor>5__3;

        /*0xfa1954*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xfa1980*/ void System.IDisposable.Dispose();
        /*0xfa1984*/ bool MoveNext();
        /*0xfa1bc4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa1bcc*/ void System.Collections.IEnumerator.Reset();
        /*0xfa1c0c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_SpeedChange : ScreenEffectProcess
{
    /*0x4c*/ float _timeScale;

    /*0x12a1b84*/ ScreenEffect_SpeedChange();
    /*0x12a6f40*/ float get_timeScale();
    /*0x12a3260*/ void set_timeScale(float value);
    /*0x12a6f48*/ void ApplyDefault();
    /*0x12a6fc8*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0x12a7044*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x28*/ ScreenEffect_SpeedChange <>4__this;
        /*0x30*/ float <_start_time_scale>5__2;
        /*0x34*/ float <_factor>5__3;

        /*0xfa1c14*/ <OnProcess_Execute>d__6(int <>1__state);
        /*0xfa1c40*/ void System.IDisposable.Dispose();
        /*0xfa1c44*/ bool MoveNext();
        /*0xfa1e20*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xfa1e28*/ void System.Collections.IEnumerator.Reset();
        /*0xfa1e68*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ float <_start_time_scale>5__2;
        /*0x28*/ float <_remain_time_scale>5__3;
        /*0x2c*/ float <_factor>5__4;

        /*0xcbbfb0*/ <OnProcess_Undo>d__7(int <>1__state);
        /*0xcbbfdc*/ void System.IDisposable.Dispose();
        /*0xcbbfe0*/ bool MoveNext();
        /*0xcbc210*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc218*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc258*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_SunShafts : PostEffectProcess
{
    /*0x58*/ float intensity;
    /*0x60*/ UnityEngine.Transform caster;
    /*0x68*/ PostEffect_SunShafts _usingEffect;

    /*0xe16270*/ ScreenEffect_SunShafts();
    /*0xe1627c*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0xe162f8*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0xe16374*/ void GetCurValue(ref UnityEngine.Color _sun_threshold);
    /*0xe1641c*/ void GetGoalSunThreshold(float _factor, ref UnityEngine.Color _sun_threshold);

    class <OnProcess_Execute>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_SunShafts <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ UnityEngine.Color <_start_threshold>5__2;
        /*0x3c*/ UnityEngine.Color <_goal_threshold>5__3;
        /*0x4c*/ float <_factor>5__4;

        /*0xcbc260*/ <OnProcess_Execute>d__4(int <>1__state);
        /*0xcbc28c*/ void System.IDisposable.Dispose();
        /*0xcbc290*/ bool MoveNext();
        /*0xcbc470*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc478*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc4b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_SunShafts <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ UnityEngine.Color <_start_threshold>5__2;
        /*0x3c*/ UnityEngine.Color <_goal_threshold>5__3;
        /*0x4c*/ float <_factor>5__4;

        /*0xcbc4c0*/ <OnProcess_Undo>d__5(int <>1__state);
        /*0xcbc4ec*/ void System.IDisposable.Dispose();
        /*0xcbc4f0*/ bool MoveNext();
        /*0xcbc6b8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc6c0*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc700*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Vortex : PostEffectProcess
{
    /*0x58*/ float angle;
    /*0x5c*/ float radius;
    /*0x60*/ UnityEngine.Vector2 center;
    /*0x68*/ PostEffect_Vortex _usingEffect;

    /*0xe164b0*/ ScreenEffect_Vortex();
    /*0xe164bc*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0xe16538*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);
    /*0xe165b4*/ void GetCurValue(ref float _angle);

    class <OnProcess_Execute>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Vortex <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_angle>5__2;
        /*0x30*/ float <_factor>5__3;

        /*0xcbc708*/ <OnProcess_Execute>d__5(int <>1__state);
        /*0xcbc734*/ void System.IDisposable.Dispose();
        /*0xcbc738*/ bool MoveNext();
        /*0xcbc8d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbc8d8*/ void System.Collections.IEnumerator.Reset();
        /*0xcbc918*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Vortex <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_angle>5__2;
        /*0x30*/ float <_factor>5__3;

        /*0xcbc920*/ <OnProcess_Undo>d__6(int <>1__state);
        /*0xcbc94c*/ void System.IDisposable.Dispose();
        /*0xcbc950*/ bool MoveNext();
        /*0xcbcad4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbcadc*/ void System.Collections.IEnumerator.Reset();
        /*0xcbcb1c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ScreenEffect_Zoom : ScreenEffectProcess
{
    /*0x4c*/ float zoomSize;

    /*0xe1664c*/ ScreenEffect_Zoom();
    /*0xe166b4*/ void ApplyDefault();
    /*0xe16738*/ System.Collections.IEnumerator OnProcess_Execute(float _trans_speed);
    /*0xe167b4*/ System.Collections.IEnumerator OnProcess_Undo(float _trans_speed);

    class <OnProcess_Execute>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ScreenEffect_Zoom <>4__this;
        /*0x28*/ float _trans_speed;
        /*0x2c*/ float <_start_size>5__2;
        /*0x30*/ float <_orthographic_size>5__3;
        /*0x34*/ float <_factor>5__4;

        /*0xcbcb24*/ <OnProcess_Execute>d__3(int <>1__state);
        /*0xcbcb50*/ void System.IDisposable.Dispose();
        /*0xcbcb54*/ bool MoveNext();
        /*0xcbcd60*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbcd68*/ void System.Collections.IEnumerator.Reset();
        /*0xcbcda8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Undo>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _trans_speed;
        /*0x24*/ float <_start_size>5__2;
        /*0x28*/ float <_factor>5__3;

        /*0xcbcdb0*/ <OnProcess_Undo>d__4(int <>1__state);
        /*0xcbcddc*/ void System.IDisposable.Dispose();
        /*0xcbcde0*/ bool MoveNext();
        /*0xcbcfc4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcbcfcc*/ void System.Collections.IEnumerator.Reset();
        /*0xcbd00c*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum PostEffectFlag
{
    None = 0,
    MotionBlur = 1,
    Blur = 2,
    Bloom = 4,
    Grayscale = 8,
    Fisheye = 16,
    Vortex = 32,
    SunShafts = 64,
    Antialiasing = 128,
    Fade = 256,
}

class ScreenPostEffectController
{
    static string SHADER_MOTION_BLUR = "Hidden/M3_MotionBlur";
    static string SHADER_BLUR = "Hidden/M3_FastBlur";
    static string SHADER_BLOOM = "Hidden/M3_FastBloom";
    static string SHADER_GRAYSCALE = "Hidden/M3_Grayscale";
    static string SHADER_FISHEYE = "Hidden/M3_FisheyeShader";
    static string SHADER_VORTEX = "Hidden/M3_VortexEffect";
    static string SHADER_SUNSHAFTS_COMPOSITE = "Hidden/M3_SunShaftsComposite";
    static string SHADER_SIMPLE_CLEAR = "Hidden/M3_SimpleClear";
    static string SHADER_ANTIALIASING = "Hidden/M3_Antialiasing";
    static string SHADER_FADE = "Hidden/M3_Fade";
    static /*0x0*/ System.Collections.Generic.Dictionary<PostEffectFlag, int> _effectRefDic;
    /*0x10*/ UnityEngine.Camera _curCamera;
    /*0x18*/ PostEffectFlag _postEffectFlag;

    static /*0xe17e44*/ ScreenPostEffectController();
    static /*0xe16828*/ int GetUsingPostEffectCount(PostEffectFlag _flag);
    /*0xe17e3c*/ ScreenPostEffectController();
    /*0xe168d4*/ UnityEngine.Camera get_curCamera();
    /*0xe168dc*/ void Init(UnityEngine.Camera _camera);
    /*0xe16968*/ void Clear();
    /*0xe16f2c*/ void StopPostEffect(PostEffectFlag _type);
    /*0xe16fac*/ PostEffect_MotionBlur ApplyPostEffect_MotionBlur(float _amount);
    /*0xe16a40*/ void StopPostEffect_MotionBlur();
    /*0xe170f8*/ PostEffect_Blur ApplyPostEffect_Blur(float _size, int _iterations);
    /*0xe16acc*/ void StopPostEffect_Blur();
    /*0xe17244*/ PostEffect_Bloom ApplyPostEffect_Bloom(float _intensity, float _blur_size);
    /*0xe16b58*/ void StopPostEffect_Bloom();
    /*0xe1738c*/ PostEffect_Grayscale ApplyPostEffect_Grayscale(float _intensity);
    /*0xe16be4*/ void StopPostEffect_Grayscale();
    /*0xe174c8*/ PostEffect_Fisheye ApplyPostEffect_Fisheye(float _strength_x, float _strength_y);
    /*0xe16c70*/ void StopPostEffect_Fisheye();
    /*0xe17608*/ PostEffect_Vortex ApplyPostEffect_Vortex(float _angle, float _radius_x, float _radius_y, float _center_x, float _center_y);
    /*0xe16cfc*/ void StopPostEffect_Vortex();
    /*0xe1776c*/ PostEffect_SunShafts ApplyPostEffect_SunShafts(UnityEngine.Color _sun_threshold, UnityEngine.Transform _caster, float _intensity);
    /*0xe16d88*/ void StopPostEffect_SunShafts();
    /*0xe17940*/ PostEffect_Antialiasing ApplyPostEffect_Antialiasing();
    /*0xe16e14*/ void StopPostEffect_Antialiasing();
    /*0xe17a6c*/ PostEffect_Fade ApplyPostEffect_Fade(float _intensity, UnityEngine.Color _color);
    /*0xe16ea0*/ void StopPostEffect_Fade();
    /*0xe170e8*/ bool IsUsingPostEffect_CurCamera(PostEffectFlag _flag);
    /*0xe16a30*/ bool IsUsingPostEffect_CurCamera();
    T LoadPostEffect<T>();
    void SetPostEffect<T>(PostEffectFlag _type, T _effect, bool _is_on);
    /*0xe17bd0*/ void AddPostEffectFlag(PostEffectFlag _flag);
    /*0xe17d2c*/ void RemovePostEffectFlag(PostEffectFlag _flag);
}

class ScreenEffectManager : Singleton.Component.SingletonComponent<ScreenEffectManager>
{
    static /*0x0*/ bool useScreenEffect;
    static /*0x8*/ bool[] _effectState;
    /*0x28*/ ScreenEffectProcess[] _effectList;

    static /*0x12a48f0*/ ScreenEffectManager();
    static /*0x12a1114*/ void SetUseEffect(ScreenEffectType _type, bool _is_on);
    static /*0x12a11b4*/ bool IsUsableEffect(ScreenEffectType _type);
    /*0x12a4880*/ ScreenEffectManager();
    /*0x12a1278*/ void AwakeInstance();
    /*0x12a1dd4*/ bool InitInstance();
    /*0x12a1e84*/ void ReleaseInstance();
    /*0x12a1f2c*/ void SetDefaultCameraValue(UnityEngine.Camera _camera);
    /*0x12a20ac*/ void SetDefaultAmbientValue(float _intensity, UnityEngine.Color _color);
    /*0x12a21e0*/ void StopEffect();
    /*0x12a22e4*/ void ForceStopEffect();
    /*0x12a23e0*/ void ForceStopEffect(ScreenEffectType _type);
    /*0x12a245c*/ void FreeIgnoreFlag(ScreenEffectType _type);
    /*0x12a257c*/ void ApplyEffect(ScreenEffectData_Move _data);
    /*0x12a2680*/ void ApplyEffect(ScreenEffectData_Zoom _data);
    /*0x12a2774*/ void ApplyEffect(ScreenEffectData_Shake _data);
    /*0x12a2868*/ void ApplyEffect(ScreenEffectData_DarkChange _data);
    /*0x12a2950*/ void ApplyEffect(ScreenEffectData_ColorChange _data);
    /*0x12a2a70*/ void ApplyEffect(ScreenEffectData_SpeedChange _data);
    /*0x12a2b78*/ void ApplyEffect(ScreenEffectData_BackgroundEffect _data);
    /*0x12a2c7c*/ void ApplyEffect(ScreenEffectData_LookAtTarget _data);
    /*0x12a258c*/ void ApplyEffect_Move(UnityEngine.Vector3 _goal_pos, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a2f40*/ void StopEffect_Move();
    /*0x12a2688*/ void ApplyEffect_Zoom(float _zoom_size, float _trans_time_execute, float _trans_time_undo, float _fixed_time, System.Action _OnCompleteAction);
    /*0x12a2fe0*/ void StopEffect_Zoom();
    /*0x12a277c*/ void ApplyEffect_Shake(float _shake_power, float _trans_time_execute, float _trans_time_undo, System.Action _OnCompleteAction);
    /*0x12a3080*/ void StopEffect_Shake();
    /*0x12a2874*/ void ApplyEffect_DarkChange(float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3120*/ void StopEffect_DarkChange();
    /*0x12a2968*/ void ApplyEffect_ColorChange(UnityEngine.Color _color, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a31c0*/ void StopEffect_ColorChange();
    /*0x12a2a7c*/ void ApplyEffect_SpeedChange(float _time_scale, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3294*/ void StopEffect_SpeedChange();
    /*0x12a2b8c*/ void ApplyEffect_BackgroundEffect(string _bg_effect_name, UnityEngine.GameObject[] _bg_group, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3334*/ void StopEffect_BackgroundEffect();
    /*0x12a2c98*/ void ApplyEffect_LookAtTarget(UnityEngine.Vector3 _camera_pos, UnityEngine.Transform _tr_target, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a33d4*/ void StopEffect_LookAtTarget();
    /*0x12a33f0*/ void ApplyEffect_ObjectShake(UnityEngine.RectTransform transform, float _shake_power, float _trans_time_execute, float _trans_time_undo);
    /*0x12a3564*/ void StopEffect_ObjectShake();
    /*0x12a3580*/ void ApplyPostEffect_MotionBlur(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a371c*/ void StopPostEffect_MotionBlur();
    /*0x12a3738*/ void ApplyPostEffect_Blur(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a38cc*/ void StopPostEffect_Blur();
    /*0x12a38e8*/ void ApplyPostEffect_Bloom(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3a7c*/ void StopPostEffect_Bloom();
    /*0x12a3a98*/ void ApplyPostEffect_Grayscale(UnityEngine.Camera _camera, float _intensity, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3c2c*/ void StopPostEffect_Grayscale();
    /*0x12a3c48*/ void ApplyPostEffect_Fisheye(UnityEngine.Camera _camera, float _intensity_x, float _intensity_y, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3de0*/ void StopPostEffect_Fisheye();
    /*0x12a3dfc*/ void ApplyPostEffect_Vortex(UnityEngine.Camera _camera, float _angle, float _radius, float _center_x, float _center_y, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a3fac*/ void StopPostEffect_Vortex();
    /*0x12a3fc8*/ void ApplyPostEffect_SunShafts(UnityEngine.Camera _camera, float _intensity, UnityEngine.Transform _caster, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a4164*/ void StopPostEffect_SunShafts();
    /*0x12a4180*/ void ApplyPostEffect_Antialiasing(UnityEngine.Camera _camera, float _fixed_time);
    /*0x12a42d0*/ void StopPostEffect_Antialiasing();
    /*0x12a42ec*/ void ApplyPostEffect_Fade(UnityEngine.Camera _camera, float _intensity, UnityEngine.Color _fade_color, float _trans_time_execute, float _trans_time_undo, float _fixed_time);
    /*0x12a44b0*/ void StopPostEffect_Fade();
    /*0x12a44cc*/ bool IsProcessing(ScreenEffectType _type);
    /*0x12a4500*/ bool IsProcessing_CameraEffect();
    /*0x12a45c4*/ void OnChangeScene();
    /*0x12a45c8*/ void Clear();
    /*0x12a2410*/ ScreenEffectProcess GetEffectProcess(ScreenEffectType _type);
    /*0x12a2da0*/ ScreenEffect_Move GetEffectProcess_Move();
    /*0x12a2f5c*/ ScreenEffect_Zoom GetEffectProcess_Zoom();
    /*0x12a2ffc*/ ScreenEffect_Shake GetEffectProcess_Shake();
    /*0x12a309c*/ ScreenEffect_DarkChange GetEffectProcess_DarkChange();
    /*0x12a313c*/ ScreenEffect_ColorChange GetEffectProcess_ColorChange();
    /*0x12a31dc*/ ScreenEffect_SpeedChange GetEffectProcess_SpeedChange();
    /*0x12a32b0*/ ScreenEffect_BackgroundEffect GetEffectProcess_BackgroundEffect();
    /*0x12a3350*/ ScreenEffect_LookAtTarget GetEffectProcess_LookAtTarget();
    /*0x12a34e0*/ ScreenEffect_ObjectShake GetEffectProcess_ObjectShake();
    /*0x12a3698*/ ScreenEffect_MotionBlur GetEffectProcess_MotionBlur();
    /*0x12a3848*/ ScreenEffect_Blur GetEffectProcess_Blur();
    /*0x12a39f8*/ ScreenEffect_Bloom GetEffectProcess_Bloom();
    /*0x12a3ba8*/ ScreenEffect_Grayscale GetEffectProcess_Grayscale();
    /*0x12a3d5c*/ ScreenEffect_Fisheye GetEffectProcess_Fisheye();
    /*0x12a3f28*/ ScreenEffect_Vortex GetEffectProcess_Vortex();
    /*0x12a40e0*/ ScreenEffect_SunShafts GetEffectProcess_SunShafts();
    /*0x12a424c*/ ScreenEffect_Antialiasing GetEffectProcess_Antialiasing();
    /*0x12a442c*/ ScreenEffect_Fade GetEffectProcess_Fade();
}

class CashShopManager : Singleton.Component.SingletonComponent<CashShopManager>
{
    static /*0x0*/ System.Action OnRefreshEndShop;
    static /*0x8*/ System.Action<string> OnPurchaseEvent;
    static /*0x10*/ System.Action<DefineCashShop.CashShopTabType> OnJoinPage;
    static /*0x18*/ System.Action OnRefreshInstant;
    static /*0x20*/ System.Action OnExitPage;
    static /*0x28*/ System.Action<PTShare.Define.SInstant> OnExpireInstant;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SGoods> m_purchaseDataList;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> m_subscriptPurchaseDataList;
    /*0x38*/ System.Collections.Generic.List<string> m_purchaseOnceHistoryList;
    /*0x40*/ System.DateTime m_beginnerEndTime;
    /*0x48*/ PTShare.Define.SGrowth m_growth;
    /*0x50*/ System.Collections.Generic.Dictionary<DefineCashShop.CashShopTabType, System.Collections.Generic.List<DefineCashShop.CashShopPackageData>> m_parsingPackageDataDictionary;
    /*0x58*/ InstantPackageUnlockData m_instantUnlockData;
    /*0x60*/ System.Collections.Generic.List<DefineEvent.TriggerData> m_InstantTriggerList;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SInstant> m_specialSellerList;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SInstant> m_newSpecialSellerList;
    /*0x78*/ UnityEngine.Coroutine m_specialSellerCoroutine;
    /*0x80*/ UnityEngine.Coroutine m_newShowSepcialSellerCoroutine;

    static /*0x1547c84*/ CashShopManager();
    /*0x1547a6c*/ CashShopManager();
    /*0x1543024*/ System.Collections.Generic.List<PTShare.Define.SGoods> GetPurchaseDataList();
    /*0x154302c*/ System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> GetSubscriptPurchaseDataList();
    /*0x1543034*/ PTShare.Define.SSubscriptGoods FindSubscriptPurchaseDataList(string packageId);
    /*0x15418a0*/ bool IsFirstPurchasePackage(string packageId);
    /*0x1543124*/ System.DateTime GetBeginnerEndTime();
    /*0x154312c*/ PTShare.Define.SGoods FindPurchaseData(string packageId);
    /*0x154321c*/ DefineCashShop.CashShopTabType FindInnerTab(string packageId);
    /*0x1543338*/ PTShare.Define.SGrowth GetGrowthPacket();
    /*0x1543340*/ void SetPurchaseDataList(System.Collections.Generic.List<PTShare.Define.SGoods> dataList);
    /*0x1543348*/ void SetSubScriptPurchaseDataList(System.Collections.Generic.List<PTShare.Define.SSubscriptGoods> dataList);
    /*0x1543350*/ void SetPurchaseOnceHistoryList(System.Collections.Generic.List<string> dataList);
    /*0x1543358*/ void SetBeginnerEndTime(System.DateTime dateTime);
    /*0x15433f4*/ void AwakeInstance();
    /*0x15433f8*/ bool InitInstance();
    /*0x15436f4*/ void ReleaseInstance();
    /*0x154342c*/ void InitCashShop();
    /*0x1544210*/ void Send_GrowthEnter(System.Action callBack);
    /*0x15443a4*/ void Send_GrowthTake(int index, System.Action callBack);
    /*0x1544550*/ PTShare.Define.SGoods GetPurchaseData(string packageId);
    /*0x154463c*/ void AddPurchaseData(PTShare.Define.SGoods sGoods);
    /*0x15446f8*/ void AddPurchaseData(PTShare.Define.SSubscriptGoods sSubscriptGoods);
    /*0x15447b4*/ bool CheckReddot(DefineCashShop.CashShopCategoryType categoryType, DefineCashShop.CashShopTabType cashShopTabType);
    /*0x1544994*/ bool CheckReddot(DefineCashShop.CashShopTabType tabType);
    /*0x1544a40*/ bool CheckReddotLimited();
    /*0x1544d3c*/ void UpdateLastLimitedTime();
    /*0x1544bf0*/ bool CheckReddotFreeReward(DefineCashShop.CashShopTabType tabType);
    /*0x1544dfc*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> GetSellItemList(DefineCashShop.CashShopTabType tabType);
    /*0x1543948*/ void UpdateParsingPackages();
    /*0x1544b58*/ bool IsNeedReddotCheck(DefineCashShop.CashShopTabType tabType);
    /*0x15438b0*/ void SetRefreshData(DefineCashShop.CashShopTabType tabType, int value);
    /*0x1545a6c*/ void HandleOnJoinPage(DefineCashShop.CashShopTabType tabType);
    /*0x1545aa0*/ void HandleOnNotifyNewPackage(string packageId);
    /*0x15435b0*/ void StartResetShopCorotine();
    /*0x1545be4*/ System.Collections.IEnumerator CoDailyReset();
    /*0x1545c50*/ System.Collections.IEnumerator CoWeeklyReset();
    /*0x1545cbc*/ System.Collections.IEnumerator CoMonthlyReset();
    /*0x1543388*/ System.Collections.IEnumerator CoBegginerRefresh();
    /*0x1545d28*/ System.Collections.Generic.List<PTShare.Define.SInstant> GetSpecialSellerList();
    /*0x1545d30*/ System.Collections.Generic.List<PTShare.Define.SInstant> GetNewSpecialSellerList();
    /*0x1545d38*/ PTShare.Define.SInstant GetSpeiclaSeller(int index);
    /*0x154360c*/ void InitInstantPackage();
    /*0x1543808*/ void ReleaseInstantPackage();
    /*0x15460d4*/ void ShowInstantPopup(PTShare.Define.SInstant sInstant);
    /*0x15462f8*/ DefineCashShop.SpecialSellerType GetSpecialSellerType(PTShare.Define.SInstant sInstant);
    /*0x1546470*/ System.Collections.IEnumerator CoSpecialSellerUpdate();
    /*0x15464dc*/ System.Collections.IEnumerator CoShowNewSpecialSellerPopup();
    /*0x1546548*/ bool IsReadyPopup();
    /*0x1546808*/ void HandleInstantPackageChecker();
    /*0x15472c8*/ void DefeatTriggerCheck();
    /*0x1545dc4*/ void InitInstantTrigger();
    /*0x15476d4*/ void SetSpecialSeller(System.Collections.Generic.List<PTShare.Define.SInstant> packet);
    /*0x1547748*/ void SetDefeatData(PTShare.Define.SDefeat packet);
    /*0x15477bc*/ void AddLoseCampainCount();
    /*0x1547828*/ void AddLoseTowerCount();
    /*0x1546f40*/ void AddSpecialSeller(DefineEvent.TriggerData triggerData);
    /*0x1547894*/ void RemoveSpecialSeller(PTShare.Define.SInstant packet);
    /*0x15476fc*/ void PlaySpecialSellerCoroutine();
    /*0x1547a20*/ void PlayShowNewSpeicalSellerPopupCoroutine();
    /*0x1545ed4*/ void UpdateInstantUnlockData();
    /*0x15471a4*/ void SortSpecialSeller();
    /*0x1547c88*/ void <UpdateParsingPackages>b__38_0(TableData.TableData_Cashshopdaily f);
    /*0x1547d54*/ void <UpdateParsingPackages>b__38_1(TableData.TableData_Cashshopweekly f);
    /*0x1547e20*/ void <UpdateParsingPackages>b__38_2(TableData.TableData_Cashshopmonthly f);
    /*0x1547eec*/ void <UpdateParsingPackages>b__38_3(TableData.TableData_Cashshopstar f);
    /*0x1547fb8*/ void <UpdateParsingPackages>b__38_4(TableData.TableData_Cashshoplimit f);
    /*0x1548084*/ void <UpdateParsingPackages>b__38_5(TableData.TableData_Cashshopsubscription f);
    /*0x1548150*/ void <UpdateParsingPackages>b__38_6(TableData.TableData_Cashshophero f);
    /*0x154821c*/ void <UpdateParsingPackages>b__38_7(TableData.TableData_Cashshopbeginner f);
    /*0x15482e8*/ void <UpdateParsingPackages>b__38_8(TableData.TableData_Cashshopskinpiece f);
    /*0x15483b4*/ void <UpdateParsingPackages>b__38_9(TableData.TableData_Cashshopskin f);
    /*0x1548480*/ void <InitInstantTrigger>b__67_0(TableData.TableData_Cashshopinstant data);

    class <>c__DisplayClass13_0
    {
        /*0x10*/ string packageId;

        /*0xda927c*/ <>c__DisplayClass13_0();
        /*0xda9284*/ bool <FindSubscriptPurchaseDataList>b__0(PTShare.Define.SSubscriptGoods packet);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ string packageId;

        /*0xda92b0*/ <>c__DisplayClass14_0();
        /*0xda92b8*/ bool <IsFirstPurchasePackage>b__0(string id);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ string packageId;

        /*0xda92d8*/ <>c__DisplayClass16_0();
        /*0xda92e0*/ bool <FindPurchaseData>b__0(PTShare.Define.SGoods data);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ CashShopManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xda930c*/ <>c__DisplayClass27_0();
        /*0xda9314*/ void <Send_GrowthEnter>b__0(ServerProtocol.ResGrowthEnter instance);
    }

    class <>c
    {
        static /*0x0*/ CashShopManager.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SGrowthRow> <>9__27_1;
        static /*0x10*/ System.Action<ServerProtocol.ResCashShopClaim> <>9__44_1;
        static /*0x18*/ System.Action<int, string> <>9__72_1;
        static /*0x20*/ System.Comparison<PTShare.Define.SInstant> <>9__77_0;

        static /*0xda9040*/ <>c();
        /*0xda90a0*/ <>c();
        /*0xda90a8*/ bool <Send_GrowthEnter>b__27_1(PTShare.Define.SGrowthRow data);
        /*0xda90c8*/ void <CoDailyReset>b__44_1(ServerProtocol.ResCashShopClaim instance);
        /*0xda9194*/ void <AddSpecialSeller>b__72_1(int errorCode, string value);
        /*0xda9198*/ int <SortSpecialSeller>b__77_0(PTShare.Define.SInstant a, PTShare.Define.SInstant b);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ CashShopManager <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SGrowthRow> <>9__1;

        /*0xda956c*/ <>c__DisplayClass28_0();
        /*0xda9574*/ void <Send_GrowthTake>b__0(ServerProtocol.ResGrowthTake instance);
        /*0xda9770*/ bool <Send_GrowthTake>b__1(PTShare.Define.SGrowthRow data);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> dataList;

        /*0xda9794*/ <>c__DisplayClass37_0();
        /*0xda979c*/ void <GetSellItemList>b__0(TableData.TableData_Cashshopdaily f);
        /*0xda983c*/ void <GetSellItemList>b__1(TableData.TableData_Cashshopweekly f);
        /*0xda98dc*/ void <GetSellItemList>b__2(TableData.TableData_Cashshopmonthly f);
        /*0xda997c*/ void <GetSellItemList>b__3(TableData.TableData_Cashshopstar f);
        /*0xda9a1c*/ void <GetSellItemList>b__4(TableData.TableData_Cashshoplimit f);
        /*0xda9abc*/ void <GetSellItemList>b__5(TableData.TableData_Cashshopsubscription f);
        /*0xda9b5c*/ void <GetSellItemList>b__6(TableData.TableData_Cashshophero f);
        /*0xda9bfc*/ void <GetSellItemList>b__7(TableData.TableData_Cashshopbeginner f);
        /*0xda9c9c*/ void <GetSellItemList>b__8(TableData.TableData_Cashshopskinpiece f);
        /*0xda9d3c*/ void <GetSellItemList>b__9(TableData.TableData_Cashshopskin f);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> packageDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SGoods> <>9__0;

        /*0xda9ddc*/ <>c__DisplayClass44_0();
        /*0xda9de4*/ bool <CoDailyReset>b__0(PTShare.Define.SGoods packet);
    }

    class <CoDailyReset>d__44 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ CashShopManager.<> <>8__1;

        /*0xdaa438*/ <CoDailyReset>d__44(int <>1__state);
        /*0xdaa464*/ void System.IDisposable.Dispose();
        /*0xdaa468*/ bool MoveNext();
        /*0xdaaa98*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaaaa0*/ void System.Collections.IEnumerator.Reset();
        /*0xdaaae0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> packageDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SGoods> <>9__0;

        /*0xda9e78*/ <>c__DisplayClass45_0();
        /*0xda9e80*/ bool <CoWeeklyReset>b__0(PTShare.Define.SGoods packet);
    }

    class <CoWeeklyReset>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ CashShopManager.<> <>8__1;

        /*0xdab624*/ <CoWeeklyReset>d__45(int <>1__state);
        /*0xdab650*/ void System.IDisposable.Dispose();
        /*0xdab654*/ bool MoveNext();
        /*0xdaba48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaba50*/ void System.Collections.IEnumerator.Reset();
        /*0xdaba90*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ System.Collections.Generic.List<DefineCashShop.CashShopPackageData> packageDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SGoods> <>9__0;

        /*0xda9f14*/ <>c__DisplayClass46_0();
        /*0xda9f1c*/ bool <CoMonthlyReset>b__0(PTShare.Define.SGoods packet);
    }

    class <CoMonthlyReset>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ CashShopManager.<> <>8__1;

        /*0xdaaae8*/ <CoMonthlyReset>d__46(int <>1__state);
        /*0xdaab14*/ void System.IDisposable.Dispose();
        /*0xdaab18*/ bool MoveNext();
        /*0xdaaf0c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaaf14*/ void System.Collections.IEnumerator.Reset();
        /*0xdaaf54*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoBegginerRefresh>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;

        /*0xdaa204*/ <CoBegginerRefresh>d__47(int <>1__state);
        /*0xdaa230*/ void System.IDisposable.Dispose();
        /*0xdaa234*/ bool MoveNext();
        /*0xdaa3e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdaa3f0*/ void System.Collections.IEnumerator.Reset();
        /*0xdaa430*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass60_0
    {
        /*0x10*/ PTShare.Define.SInstant sInstant;

        /*0xda9fb0*/ <>c__DisplayClass60_0();
        /*0xda9fb8*/ bool <ShowInstantPopup>b__0(TableData.TableData_Cashshopinstant data);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ PTShare.Define.SInstant sInstant;

        /*0xda9fe8*/ <>c__DisplayClass61_0();
        /*0xda9ff0*/ bool <GetSpecialSellerType>b__0(TableData.TableData_Cashshopinstant data);
    }

    class <CoSpecialSellerUpdate>d__62 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;

        /*0xdab200*/ <CoSpecialSellerUpdate>d__62(int <>1__state);
        /*0xdab22c*/ void System.IDisposable.Dispose();
        /*0xdab230*/ bool MoveNext();
        /*0xdab5d4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdab5dc*/ void System.Collections.IEnumerator.Reset();
        /*0xdab61c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowNewSpecialSellerPopup>d__63 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ CashShopManager <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xdaaf5c*/ <CoShowNewSpecialSellerPopup>d__63(int <>1__state);
        /*0xdaaf88*/ void System.IDisposable.Dispose();
        /*0xdaaf8c*/ bool MoveNext();
        /*0xdab1b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xdab1b8*/ void System.Collections.IEnumerator.Reset();
        /*0xdab1f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass67_0
    {
        /*0x10*/ string[] requireQuestGroupIds;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<DefineEvent.TriggerData> <>9__1;

        /*0xdaa020*/ <>c__DisplayClass67_0();
        /*0xdaa028*/ bool <InitInstantTrigger>b__1(DefineEvent.TriggerData triggerData);
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ DefineEvent.TriggerData triggerData;
        /*0x18*/ CashShopManager <>4__this;

        /*0xdaa078*/ <>c__DisplayClass72_0();
        /*0xdaa080*/ void <AddSpecialSeller>b__0(ServerProtocol.ResCashShopInstant response);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ PTShare.Define.SInstant packet;

        /*0xdaa1cc*/ <>c__DisplayClass73_0();
        /*0xdaa1d4*/ bool <RemoveSpecialSeller>b__0(PTShare.Define.SInstant data);
    }
}

class InstantPackageUnlockData
{
    /*0x10*/ int oldStageBattleID;
    /*0x14*/ int oldAccountLevel;
    /*0x18*/ int oldChapter;
    /*0x1c*/ int oldTower;
    /*0x20*/ int oldSpiritTower;
    /*0x24*/ int defeatCount;
    /*0x28*/ int defeatCampain;
    /*0x2c*/ int defeatTower;
    /*0x30*/ int lastDefeatCount;
    /*0x34*/ int lastDefeatCampainCount;
    /*0x38*/ int lastDefeatTowerCount;

    /*0x15741d4*/ InstantPackageUnlockData();
    /*0x15741bc*/ void UpdateLastDefeatCount();
    /*0x15741d0*/ void ShowDebugLog();
}

class ChatServerLogger
{
    /*0x10*/ ChatSystem.ChannelInfo currentChannel;
    /*0x18*/ System.Collections.Generic.Dictionary<string, ChatSystem.ChannelInfo> liChannelMap;
    /*0x20*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<ChatSystem.ChatLog>> dicChannelLog;

    /*0x10d9ff0*/ ChatServerLogger();
    /*0x10d81bc*/ void InitializeEvent();
    /*0x10d81e0*/ void ClearAll();
    /*0x10d83cc*/ ChatSystem.ChannelInfo GetCurrentChannel();
    /*0x10d83d4*/ ChatSystem.ChannelInfo SetCurrentChannel(ChatSystem.ChannelInfo _info);
    /*0x10d8204*/ void ClearChannelInfo();
    /*0x10d83e0*/ bool IsExistChannelInfo(ChatSystem.ChannelInfo _info);
    /*0x10d84e4*/ void AddChannelInfo(ChatSystem.ChannelInfo _info);
    /*0x10d8550*/ void DeleteChannelInfo(string _uniquekey);
    /*0x10d85b4*/ void DeleteChannelKeyword(string _keyword);
    /*0x10d873c*/ ChatSystem.ChannelInfo FindChannelInfo(string _uniquekey);
    /*0x10d87b8*/ ChatSystem.ChannelInfo FindChannelInfoKeyword(string _keyword);
    /*0x10d86cc*/ System.Collections.Generic.List<ChatSystem.ChannelInfo> GetInfoList();
    /*0x10d8260*/ void ClearAllChatLog();
    /*0x10d88b0*/ ChatSystem.ChatLog AddChatLog(ChatSystem.ChannelInfo _info, ChatApp.Shared.MessagePackObjects.SMessage _msg);
    /*0x10d88c8*/ ChatSystem.ChatLog AddChatLog(string _uniquekey, ChatApp.Shared.MessagePackObjects.SMessage _msg);
    /*0x10d8a5c*/ System.Collections.Generic.List<ChatSystem.ChatLog> GetChatLogs(ChatSystem.ChannelInfo _info);
    /*0x10d8a74*/ System.Collections.Generic.List<ChatSystem.ChatLog> GetChatLogs(string _uniquekey);
    /*0x10d8b70*/ void SetChatLogSize(string _uniquekey, int _index, UnityEngine.Vector2 _textsize, UnityEngine.Vector2 _backgroundsize, UnityEngine.Vector2 _parentsize);
    /*0x10d8d78*/ void RemovePartsChatLog(string _uniquekey, int _safeLimitAmount);
    /*0x10d8e60*/ void RemoveChatLogKeyword(string _keyword);
    /*0x10d9060*/ void RemoveChatLog(ChatSystem.ChannelInfo _info);
    /*0x10d8f78*/ void RemoveChatLog(string _uniquekey);
    /*0x10d9078*/ int ChatLogCount(ChatSystem.ChannelInfo _info);
    /*0x10d9090*/ int ChatLogCount(string _uniquekey);
    /*0x10d91a4*/ void TCLoginAck(System.Collections.Generic.List<ChatApp.Shared.MessagePackObjects.Room> rooms);
    /*0x10d92c8*/ void TCChatGroupAck(int result, string groupid, ChatApp.Shared.MessagePackObjects.SMessage chat);
    /*0x10d9508*/ void TCChatPrivateAck(ChatApp.Shared.MessagePackObjects.SMessage chat);
    /*0x10d9834*/ void TCLuckyAck(int unitid, string nickname);
    /*0x10d9b70*/ void TCAdminNoticeAck(string notice);
    /*0x10d9c28*/ void TCMoveLangChannelAck(ChatApp.Shared.MessagePackObjects.Room newroom);
    /*0x10d9e50*/ void CTChatPrivateReq(long toplayerid, string msg);
    /*0x10d9fb8*/ void CTExitPrivateReq(long playerid);
    /*0x10d9760*/ bool IsOpenChatWindow();
    /*0x10da0a8*/ void <TCLoginAck>b__27_0(ChatApp.Shared.MessagePackObjects.Room x);

    class <>c__DisplayClass8_0
    {
        /*0x10*/ ChatSystem.ChannelInfo _info;

        /*0x106e804*/ <>c__DisplayClass8_0();
        /*0x106e80c*/ bool <IsExistChannelInfo>b__0(System.Collections.Generic.KeyValuePair<string, ChatSystem.ChannelInfo> x);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ string _keyword;

        /*0x106e3ac*/ <>c__DisplayClass11_0();
        /*0x106e3b4*/ bool <DeleteChannelKeyword>b__0(ChatSystem.ChannelInfo x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ string _keyword;

        /*0x106e3e0*/ <>c__DisplayClass13_0();
        /*0x106e3e8*/ bool <FindChannelInfoKeyword>b__0(ChatSystem.ChannelInfo x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ ChatServerLogger <>4__this;
        /*0x18*/ string _keyword;

        /*0x106e414*/ <>c__DisplayClass22_0();
        /*0x106e41c*/ bool <RemoveChatLogKeyword>b__0(System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<ChatSystem.ChatLog>> x);
    }

    class <>c__DisplayClass22_1
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<ChatSystem.ChatLog>> x;

        /*0x106e548*/ <>c__DisplayClass22_1();
        /*0x106e550*/ bool <RemoveChatLogKeyword>b__1(ChatSystem.ChannelInfo y);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ ChatSystem.ChannelInfo _info;
        /*0x18*/ System.DateTime saveTime;
        /*0x20*/ ChatServerLogger <>4__this;

        /*0x106e5ac*/ <>c__DisplayClass27_0();
        /*0x106e5b4*/ void <TCLoginAck>b__1(ChatApp.Shared.MessagePackObjects.SMessage y);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ ChatServerLogger <>4__this;
        /*0x18*/ ChatSystem.ChannelInfo _info;

        /*0x106e738*/ <>c__DisplayClass32_0();
        /*0x106e740*/ void <TCMoveLangChannelAck>b__0(ChatApp.Shared.MessagePackObjects.SMessage y);
    }
}

class ChatServerManager : Singleton.Component.SingletonComponent<ChatServerManager>
{
    static /*0x0*/ bool IsViewOnChat;
    /*0x28*/ System.Collections.Generic.Queue<string> m_whisperQueue;
    /*0x30*/ ChatServerLogger logger;
    /*0x38*/ Assets.Scripts.ChatComponent ChatServer;

    static /*0x10da460*/ ChatServerManager();
    /*0x10da3d4*/ ChatServerManager();
    /*0x10da284*/ void AwakeInstance();
    /*0x10da288*/ bool InitInstance();
    /*0x10da3b0*/ void ReleaseInstance();
    /*0x10da3c4*/ ChatServerLogger GetLogger();
    /*0x10da3cc*/ System.Collections.Generic.Queue<string> GetWhisperQueue();
}

class ContentShopManager : Singleton.Component.SingletonComponent<ContentShopManager>
{
    static /*0x0*/ System.Action OnShopReset;
    static /*0x8*/ System.Action OnShopRefresh;
    /*0x28*/ System.Collections.Generic.Dictionary<DefineContentShop.ContentShopCategoryType, System.Collections.Generic.List<DefineContentShop.ContentPackageShopData>> m_contentShopDataDictionary;
    /*0x30*/ int m_normalShopResetCount;
    /*0x34*/ int m_guildShopResetCount;
    /*0x38*/ int m_pveShopResetCount;

    static /*0xf47db0*/ ContentShopManager();
    /*0xf47d24*/ ContentShopManager();
    /*0xf46b2c*/ void AwakeInstance();
    /*0xf46b30*/ bool InitInstance();
    /*0xf46b38*/ void ReleaseInstance();
    /*0xf46b3c*/ int GetNormalShopResetCost();
    /*0xf46ba8*/ int GetGuildShopResetCost();
    /*0xf46c14*/ int GetPveShopResetCost();
    /*0xf46c80*/ TableData.TableData_Contentshop FindContentShop(DefineContentShop.ContentShopCategoryType categoryType);
    /*0xf46dd0*/ System.Collections.Generic.List<DefineContentShop.ContentPackageShopData> FindContentShopPackageList(DefineContentShop.ContentShopCategoryType categoryType);
    /*0xf46e34*/ void Send_ShopEnter(System.Action callBack);
    /*0xf46fc0*/ void Send_ShopReset(DefineContentShop.ContentShopCategoryType resetCategory);
    /*0xf47168*/ void Send_Purchase(DefineContentShop.ContentShopCategoryType contentShopCategoryType, int index, System.Action<int> callBack);
    /*0xf47314*/ bool IsUnlockCheckByQuestGroupId(string questGroupId);
    /*0xf47480*/ void InitContentDictionary(System.Collections.Generic.List<string> goodsList);
    /*0xf4791c*/ void RefreshContentDictionary(DefineContentShop.ContentShopCategoryType categoryType, System.Collections.Generic.List<string> goodsList);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ DefineContentShop.ContentShopCategoryType categoryType;

        /*0x1072d20*/ <>c__DisplayClass12_0();
        /*0x1072d28*/ bool <FindContentShop>b__0(TableData.TableData_Contentshop f);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ContentShopManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1072dd8*/ <>c__DisplayClass14_0();
        /*0x1072de0*/ void <Send_ShopEnter>b__0(ServerProtocol.ResContentShopEnter instance);
    }

    class <>c__DisplayClass14_1
    {
        /*0x10*/ int normalshopindex;
        /*0x14*/ int guildshopindex;
        /*0x18*/ int pveshopindex;

        /*0x10732ec*/ <>c__DisplayClass14_1();
        /*0x10732f4*/ bool <Send_ShopEnter>b__4(PTShare.Define.SContentShopReset f);
        /*0x1073318*/ bool <Send_ShopEnter>b__5(PTShare.Define.SContentShopReset f);
        /*0x107333c*/ bool <Send_ShopEnter>b__6(PTShare.Define.SContentShopReset f);
    }

    class <>c
    {
        static /*0x0*/ ContentShopManager.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Contentshop, bool> <>9__14_1;
        static /*0x10*/ System.Func<TableData.TableData_Contentshop, bool> <>9__14_2;
        static /*0x18*/ System.Func<TableData.TableData_Contentshop, bool> <>9__14_3;

        static /*0x1072bb0*/ <>c();
        /*0x1072c10*/ <>c();
        /*0x1072c18*/ bool <Send_ShopEnter>b__14_1(TableData.TableData_Contentshop f);
        /*0x1072c70*/ bool <Send_ShopEnter>b__14_2(TableData.TableData_Contentshop f);
        /*0x1072cc8*/ bool <Send_ShopEnter>b__14_3(TableData.TableData_Contentshop f);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ DefineContentShop.ContentShopCategoryType resetCategory;
        /*0x18*/ ContentShopManager <>4__this;

        /*0x1073360*/ <>c__DisplayClass15_0();
        /*0x1073368*/ void <Send_ShopReset>b__0(ServerProtocol.ResContentShopReset instance);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ ContentShopManager <>4__this;
        /*0x18*/ DefineContentShop.ContentShopCategoryType contentShopCategoryType;
        /*0x1c*/ int index;
        /*0x20*/ System.Action<int> callBack;
        /*0x28*/ System.Predicate<DefineContentShop.ContentPackageShopData> <>9__1;

        /*0x10734c8*/ <>c__DisplayClass16_0();
        /*0x10734d0*/ void <Send_Purchase>b__0(ServerProtocol.ResContentShopPurchase instance);
        /*0x10737b8*/ bool <Send_Purchase>b__1(DefineContentShop.ContentPackageShopData x);
    }
}

class ContentShopResetPopup : GuiBase
{
    /*0x40*/ LocalizeString m_popupInfoText;
    /*0x48*/ LocalizeString m_playerCurrencyText;
    /*0x50*/ LocalizeString m_costCurrencyText;
    /*0x58*/ LocalizeString m_purchaseText;
    /*0x60*/ DefineContentShop.ContentShopCategoryType m_contentShopCategoryType;

    /*0xf4beb0*/ ContentShopResetPopup();
    /*0xf4b564*/ void OnCreate();
    /*0xf4b568*/ void OnDelete();
    /*0xf4b56c*/ void OnEnter();
    /*0xf4b5d8*/ void OnFinish();
    /*0xf4b5dc*/ void OnLeave();
    /*0xf4b5e0*/ void OnExit();
    /*0xf4b65c*/ void OnStart();
    /*0xf49fb0*/ void InitializePopup(DefineContentShop.ContentShopCategoryType contentShopType);
    /*0xf4b660*/ void SetPopupInfo();
    /*0xf4baf8*/ void UpdatePlayerCurrency();
    /*0xf4bbb0*/ void UpdateResetCost();
    /*0xf4be48*/ void OnClickReset();
}

class DefineManager
{
    static /*0x0*/ SERVER_MODE ServerMode;
    static /*0x4*/ ASSET_MODE AssetMode;
    static /*0x8*/ CSV_MODE CsvMode;
    static /*0xc*/ DEBUGGING_MODE DebuggingMode;
    static /*0x10*/ SDK_MODE SdkMode;
    static /*0x14*/ bool IsIOS;

    static /*0x11e7758*/ DefineManager();
}

enum SERVER_MODE
{
    OPEN_SELECT_POPUP = 0,
    USE_URL_TEST_ONE = 1,
    USE_URL_TEST_TWO = 2,
    USE_URL_TEST_THREE = 3,
    USE_URL_TEST_FOUR = 4,
    USE_URL_TEST_FIVE = 5,
    USE_URL_TEST_SIX = 6,
    USE_URL_TEST_SEVEN = 7,
    USE_URL_TEST_EIGHT = 8,
    USE_URL_TEST_NINE = 9,
    USE_URL_LIVE = 10,
    USE_URL_INSPECTION = 11,
}

enum ASSET_MODE
{
    ASSET_DIRECT = 0,
    ASSET_CDN = 1,
    ASSET_BUILTIN = 2,
    ASSET_BUILTIN_CDN = 3,
}

enum CSV_MODE
{
    CSV_SERVER = 0,
    CSV_BUILTIN = 1,
}

enum DEBUGGING_MODE
{
    INCLUDE_DEBUGGING = 0,
    EXCLUDE_DEBUGGING = 1,
}

enum SDK_MODE
{
    LOGIN_DEV = 0,
    LOGIN_FIREBASE = 1,
}

enum TEXTURE_MODE
{
    NO_COMPRESS = 0,
    COMPRESS = 1,
}

enum EXTENSION_MODE
{
    APK = 0,
    AAB = 1,
    OBB = 2,
}

enum ADJUST_MODE
{
    ADJUST_SANDBOX = 0,
    ADJUST_RELEASE = 1,
}

enum PUBSDK_LOG_MODE
{
    UNABLE_PUBLOG = 0,
    ENABLE_PUBLOG = 1,
}

enum IAP_MODE
{
    UNITYIAP = 0,
    ONESTORE = 1,
}

class DialogManager : Singleton.Component.SingletonComponent<DialogManager>
{
    /*0x21*/ bool m_isShowWellComeDialog;

    /*0x11f0428*/ DialogManager();
    /*0x11f0080*/ void AwakeInstance();
    /*0x11f0084*/ bool InitInstance();
    /*0x11f00a4*/ void ReleaseInstance();
    /*0x11f00a8*/ bool IsShowWellComeDialog();
    /*0x11f00b0*/ void DontShowWellComeDialog();
    /*0x11f00b8*/ void ShowWellComeDialog(SkinKeyType skinKeyType);
    /*0x11f0394*/ void PlayDialog(DialogData dialogData);
    /*0x11f0098*/ void Init();
    /*0x11f0418*/ void CheatPlay();
}

class DefineDungeon
{
    static int HAMMER_INDEX = 1;
    static int KEY_INDEX = 2;
    static /*0x0*/ float SHADOW_TIME;
    static /*0x4*/ UnityEngine.Vector2Int START_POINT;
    static /*0xc*/ float DUNGEON_TOAST_Y;
    static /*0x10*/ UnityEngine.Color RED_ALERT;
    static /*0x20*/ UnityEngine.Color GREEN_ALERT;
    static /*0x30*/ UnityEngine.Color FREEZE_ALERT;

    static /*0x11e40f0*/ DefineDungeon();

    enum DungeonColorType
    {
        MINIMAP = 0,
        FULLMAP = 1,
    }

    enum TILETYPE
    {
        NORMAL = 0,
        RANDOM = 1,
        BATTLE = 2,
        BATTLEBOSS = 3,
        REVIVAL = 4,
        HEAL = 5,
        BUFFATK = 6,
        BUFFDEFENCE = 7,
        DEBUFFATK = 8,
        DEBUFFDEFENCE = 9,
        RANDOMREWARD = 10,
        JAIL = 11,
        ESCAPE = 12,
        MOVEUP = 13,
        MOVEDOWN = 14,
        MOVELEFT = 15,
        MOVERIGHT = 16,
        EXPLORE = 17,
        TRAP = 18,
        COINREWARD = 19,
        CONDITIONREWARD = 20,
        WALL = 21,
        START = 22,
        BLOCK = 23,
        MATE = 24,
        BUFFRESET = 25,
        CLIENT_FREEZE = 26,
        BROKEN = 27,
        BOMB = 28,
        BOMBCLEAR = 29,
        WALL_FIRE = 30,
        WALL_NATURAL = 31,
        WALL_WATER = 32,
        WALL_WIND = 33,
        NULL = 34,
    }

    enum SEETYPE
    {
        BLUR = 0,
        SEE = 1,
    }

    enum SHOWTYPE
    {
        DEEPHIDE = 0,
        HIDE = 1,
        LIGHT = 2,
        SUPERLIGHT = 3,
        NULL = 4,
    }

    enum TILEVIEWTYPE
    {
        NONE = 0,
        USEVIEW = 1,
        AFTERVIEW = 2,
    }

    enum SPREADTYPE
    {
        LIGHT = 0,
        SUPER_LIGHT = 1,
        HIDE = 2,
        DEEPHIDE = 3,
        NULL = 4,
    }

    enum DUNGEON_SOUND
    {
        Dungeon_Buff = 0,
        Dungeon_Debuff = 1,
        Dungeon_Heal = 2,
        Dungeon_Jail_Frozen = 3,
        Dungeon_Jail_Release = 4,
        Dungeon_Revival = 5,
        Dungeon_Run = 6,
        Dungeon_Trap = 7,
        Dungeon_Wall_Open = 8,
    }

    class DungeonRouteNode
    {
        /*0x10*/ DefineDungeon.DungeonRouteNode parentNode;
        /*0x18*/ UnityEngine.Vector2Int routePoint;
        /*0x20*/ float cost;

        /*0x10775d0*/ DungeonRouteNode(DefineDungeon.DungeonRouteNode parentNode, UnityEngine.Vector2Int routePoint, float cost);
    }

    class DungeonItem
    {
        /*0x10*/ int hammerAmount;
        /*0x14*/ int keyAmount;

        /*0x10775b0*/ DungeonItem();
        /*0x10775a8*/ void Clear();
    }

    class DungeonConditionRewardData
    {
        /*0x10*/ bool isGoal;
        /*0x14*/ int score;
        /*0x18*/ int destScore;

        /*0x10772f0*/ DungeonConditionRewardData();
        /*0x10772e0*/ void Clear();
        /*0x10772ec*/ void DebugLog();
    }

    class DungeonForceMoveData
    {
        /*0x10*/ UnityEngine.Vector2Int destPoint;
        /*0x18*/ string forceWay;
        /*0x20*/ int moveValue;

        /*0x1077548*/ DungeonForceMoveData();
        /*0x1077354*/ void SetForceWay(string forceWay);
        /*0x1077420*/ void RemoveFirstWay();
        /*0x10774ec*/ void Clear();
    }

    class DungeonRandomRewardLimitData
    {
        /*0x10*/ int makeGold;
        /*0x14*/ int makeHeroExp;

        /*0x10775c8*/ DungeonRandomRewardLimitData();
        /*0x10775b8*/ void SetData(int makeGold, int makeHeroExp);
        /*0x10775c0*/ void Clear();
    }

    class DungeonDefeatData
    {
        /*0x10*/ bool isDefeat;
        /*0x14*/ UnityEngine.Vector2Int defeatPoint;

        /*0x1077324*/ DungeonDefeatData();
        /*0x10772f8*/ void Clear();
    }
}

class DungeonBombUI : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int EFFECT_MAX_BOMB_COUNT;
    /*0x18*/ UnityEngine.CanvasGroup m_parent;
    /*0x20*/ UnityEngine.GameObject m_bg;
    /*0x28*/ LocalizeString m_countText;
    /*0x30*/ UnityEngine.Coroutine m_bombEffectCoroutine;

    static /*0x11f4934*/ DungeonBombUI();
    /*0x11f492c*/ DungeonBombUI();
    /*0x11f4454*/ void OnDisable();
    /*0x11f4560*/ void InitUI();
    /*0x11f4584*/ void BindEvent();
    /*0x11f4458*/ void RemoveEvent();
    /*0x11f478c*/ void SetEnable(bool enable);
    /*0x11f4850*/ void FadeOut(float time);
    /*0x11f467c*/ void UpdateCount();
    /*0x11f48c0*/ System.Collections.IEnumerator CoBombShake();

    class <CoBombShake>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonBombUI <>4__this;
        /*0x28*/ UnityEngine.Vector3 <rot>5__2;
        /*0x34*/ int <power>5__3;
        /*0x38*/ float <time>5__4;

        /*0x10798ac*/ <CoBombShake>d__12(int <>1__state);
        /*0x10798d8*/ void System.IDisposable.Dispose();
        /*0x10798dc*/ bool MoveNext();
        /*0x1079b44*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079b4c*/ void System.Collections.IEnumerator.Reset();
        /*0x1079b8c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonButton : UnityEngine.MonoBehaviour, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerClickHandler, UnityEngine.EventSystems.IPointerUpHandler, UnityEngine.EventSystems.IDragHandler
{
    /*0x18*/ DungeonMainPopup m_dungeonMainPopup;
    /*0x20*/ UnityEngine.Events.UnityEvent m_ButtonAction;
    /*0x28*/ UnityEngine.Vector2 m_prevPosition;
    /*0x30*/ UnityEngine.Vector2 m_downPosition;
    /*0x38*/ float pointerDownTime;
    /*0x3c*/ bool m_isUseDrag;
    /*0x3d*/ bool m_bIsEnabled;

    /*0x11f4cc4*/ DungeonButton();
    /*0x11f4984*/ bool get_Enabled();
    /*0x11f498c*/ void set_Enabled(bool value);
    /*0x11f4998*/ System.Action get_GetButtonAction();
    /*0x11f4a10*/ UnityEngine.Events.UnityEvent get_GetButtonEvent();
    /*0x11f4a18*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4adc*/ void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4bbc*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4bc0*/ void AddEvent(UnityEngine.Events.UnityAction evt);
    /*0x11f4bdc*/ void ClearEvent();
    /*0x11f4bf8*/ void OnDrag(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x11f4cd4*/ void <get_GetButtonAction>b__11_0();
}

class DungeonCoinRewardPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ButtonCancel;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ LocalizeString m_ConfirmBtnText;
    /*0x58*/ LocalizeString m_CancelBtnText;
    /*0x60*/ LocalizeString m_ConfirmMessage;
    /*0x68*/ LocalizeString m_dungeonCoin;
    /*0x70*/ AtlasImage m_image;
    /*0x78*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x80*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x88*/ ScrollContent_StageReward m_rewardScrollContent;
    /*0x90*/ bool m_EnableCancel;
    /*0x91*/ bool m_IsExitBackground;
    /*0x98*/ System.Action<bool> m_OnClickButton;
    /*0xa0*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0xa8*/ int m_receivedStartIndex;

    /*0x11f5cc8*/ DungeonCoinRewardPopup();
    /*0x11f4ce8*/ void OnCreate();
    /*0x11f4cec*/ void OnEnter();
    /*0x11f4cf0*/ void OnStart();
    /*0x11f4cf4*/ void OnLeave();
    /*0x11f4cf8*/ void OnDelete();
    /*0x11f4cfc*/ void OnFinish();
    /*0x11f4d00*/ void Init(AtlasType atlasType, string imagePath, System.Collections.Generic.List<Rewards> rewardList, System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0x11f5080*/ void UpdateReceivedRewards(System.Collections.Generic.List<Rewards> rewardList);
    /*0x11f532c*/ void SetAtlas(AtlasType atlasType, string imagePath);
    /*0x11f54a0*/ void SetText(LocalizeString _str, string _key);
    /*0x11f58f8*/ void SetActiveCancelButton(bool _enable);
    /*0x11f5698*/ void SetRewardList();
    /*0x11f5758*/ void SetDungeonCoin();
    /*0x11f5594*/ string GetLocalizeStr(string _key);
    /*0x11f4fa4*/ void BindEvent();
    /*0x11f59ac*/ void RemoveEvent();
    /*0x11f5a80*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0x11f5b68*/ void OnConfirm();
    /*0x11f5c10*/ void OnCancel();
    /*0x11f5c70*/ void OnExit();
    /*0x11f5cb0*/ void OnExitBackground();
    /*0x11f5940*/ System.Collections.IEnumerator CoSetText();

    class <CoSetText>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonCoinRewardPopup <>4__this;

        /*0x1079b94*/ <CoSetText>d__36(int <>1__state);
        /*0x1079bc0*/ void System.IDisposable.Dispose();
        /*0x1079bc4*/ bool MoveNext();
        /*0x1079c24*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079c2c*/ void System.Collections.IEnumerator.Reset();
        /*0x1079c6c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonCurrencyTopWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Transform m_Parent;
    /*0x20*/ System.Collections.Generic.List<CurrencyTopEntity> m_liCurrencyEntity;
    /*0x28*/ int nStartCount;
    /*0x2c*/ int nEndCount;

    /*0x11f618c*/ DungeonCurrencyTopWindow();
    /*0x11f5d4c*/ void OnEnable();
    /*0x11f5e24*/ void OnDisable();
    /*0x11f5ecc*/ void InitalizeInfo(TopCurrencyInfo[] _viewInfos);
    /*0x11f60d4*/ void HandlerChangeInfo();
}

class DungeonDialogEnter : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<DungeonFieldCharacter> m_dungeonDialogCharacterList;
    /*0x20*/ DungeonMap m_dungeonMap;
    /*0x28*/ bool m_isFast;
    /*0x30*/ System.Action m_exitCallBack;

    /*0x11f6e50*/ DungeonDialogEnter();
    /*0x11f6434*/ void Init(DungeonMap map, System.Action exitCallback);
    /*0x11f6488*/ void Close();
    /*0x11f65bc*/ void Show(int dungeonId);
    /*0x11f696c*/ void HandleExitDialog();
    /*0x11f6de4*/ System.Collections.IEnumerator CoCloseMove();

    class <CoCloseMove>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonDialogEnter <>4__this;

        /*0x1079c74*/ <CoCloseMove>d__8(int <>1__state);
        /*0x1079ca0*/ void System.IDisposable.Dispose();
        /*0x1079ca4*/ bool MoveNext();
        /*0x1079d88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1079d90*/ void System.Collections.IEnumerator.Reset();
        /*0x1079dd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonFieldCharacter : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnMoveEnd;
    /*0x18*/ Spine.Unity.SkeletonAnimation m_baseCharacterSkel;
    /*0x20*/ UnityEngine.MeshRenderer m_meshRenderer;
    /*0x28*/ Spine.Unity.BoneFollower m_boneFollower;
    /*0x30*/ int m_sortOrderBonus;
    /*0x38*/ DungeonView m_light;
    /*0x40*/ DungeonView m_slimeLight;
    /*0x48*/ DungeonMap m_dungeonMap;
    /*0x50*/ UnityEngine.Vector2Int m_standTile;
    /*0x58*/ UnityEngine.Vector2Int m_prevTile;
    /*0x60*/ UnityEngine.Vector2Int m_newRequestMove;
    /*0x68*/ int m_freezeCharacterId;
    /*0x70*/ UnityEngine.Coroutine m_routeCoroutine;
    /*0x78*/ bool m_isDontOtherMove;
    /*0x79*/ bool m_isSlime;
    /*0x7a*/ bool m_isPlayerble;
    /*0x80*/ string m_curAnim;
    /*0x88*/ System.Action m_animEndCallBack;

    static /*0x11f8d54*/ DungeonFieldCharacter();
    static /*0x11f71ec*/ void add_OnMoveEnd(System.Action value);
    static /*0x11f72e0*/ void remove_OnMoveEnd(System.Action value);
    /*0x11f8ccc*/ DungeonFieldCharacter();
    /*0x11f73d4*/ UnityEngine.Vector2Int GetStandPoint();
    /*0x11f73dc*/ DungeonView GetDungeonView();
    /*0x11f73f8*/ bool IsLeftLook();
    /*0x11f7428*/ bool IsPlayerble();
    /*0x11f7430*/ void SetSortOrderBonus(int value);
    /*0x11f7438*/ void SetPlayerble(bool enable);
    /*0x11f7444*/ void OnDisable();
    /*0x11f754c*/ void InitCharacter(DungeonMap map, UnityEngine.Vector2Int stand, UnityEngine.Vector2Int prevTile);
    /*0x11f6854*/ void InitCharacter(DungeonMap map, UnityEngine.Vector2Int stand, int characterId);
    /*0x11f7f48*/ void InitFreeze(DungeonMap map, UnityEngine.Vector2Int stand, int tableId);
    /*0x11f7744*/ void Clear();
    /*0x11f78c4*/ void SetCharacter(int tableId);
    /*0x11f7c1c*/ void SetBoneFollower(bool enable);
    /*0x11f7e44*/ void SetLight();
    /*0x11f809c*/ void SetAnimation(string anim, bool loop, System.Action completeCallBack);
    /*0x11f7da4*/ void CheckStandTile();
    /*0x11f7d0c*/ void PlayWinningAnim();
    /*0x11f836c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x11f8420*/ float UpdateCharacterAnim(DefineDungeon.TILETYPE tileType);
    /*0x11f6b08*/ void PlayMove(UnityEngine.Vector2Int end, bool isDontOtherMove);
    /*0x11f85d4*/ void PlayMoveFixed(UnityEngine.Vector2Int end, bool isDontOtherMove);
    /*0x11f8688*/ void PlayForceMove(UnityEngine.Vector2Int end);
    /*0x11f8758*/ void PressStandTile();
    /*0x11f88b8*/ void StopMove();
    /*0x11f77b8*/ void BindEvent();
    /*0x11f7448*/ void RemoveEvent();
    /*0x11f8990*/ void HandleEndMoveDiceEffect(int diceNumber, char moveDir);
    /*0x11f8af8*/ char GetArrowToRoute(ARROW arrow);
    /*0x11f8b2c*/ void SendMove(string way, System.Action callBack);
    /*0x11f8554*/ System.Collections.IEnumerator CoMoveRoute(UnityEngine.Vector2Int end, string defalutWay);
    /*0x11f86e0*/ System.Collections.IEnumerator CoForceMove(UnityEngine.Vector2Int end);
    /*0x11f8c3c*/ System.Collections.IEnumerator CoMove(UnityEngine.Vector2Int start, UnityEngine.Vector2Int end, float time);
    /*0x11f8d58*/ void <PlayWinningAnim>b__36_0();

    class <>c__DisplayClass31_0
    {
        /*0x10*/ int tableId;

        /*0x1079e4c*/ <>c__DisplayClass31_0();
        /*0x1079e54*/ bool <SetCharacter>b__0(PTShare.Define.SHero hero);
    }

    class <>c
    {
        static /*0x0*/ DungeonFieldCharacter.<> <>9;
        static /*0x8*/ System.Action <>9__39_0;
        static /*0x10*/ System.Action <>9__42_0;
        static /*0x18*/ System.Action <>9__49_0;

        static /*0x1079dd8*/ <>c();
        /*0x1079e38*/ <>c();
        /*0x1079e40*/ void <PlayMove>b__39_0();
        /*0x1079e44*/ void <PressStandTile>b__42_0();
        /*0x1079e48*/ void <CoMoveRoute>b__49_0();
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ DungeonFieldCharacter <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1079e78*/ <>c__DisplayClass48_0();
        /*0x1079e80*/ void <SendMove>b__0();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ bool isWait;
        /*0x11*/ bool backup;
        /*0x18*/ DungeonFieldCharacter <>4__this;

        /*0x1079f50*/ <>c__DisplayClass49_0();
        /*0x1079f58*/ void <CoMoveRoute>b__1();
        /*0x1079f60*/ bool <CoMoveRoute>b__2();
        /*0x1079f70*/ void <CoMoveRoute>b__3();
        /*0x1079f94*/ bool <CoMoveRoute>b__4();
    }

    class <CoMoveRoute>d__49 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector2Int end;
        /*0x30*/ string defalutWay;
        /*0x38*/ DungeonFieldCharacter.<> <>8__1;
        /*0x40*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> <route>5__2;
        /*0x48*/ string <way>5__3;
        /*0x50*/ int <i>5__4;
        /*0x54*/ bool <isBomb>5__5;
        /*0x55*/ bool <isStopTile>5__6;
        /*0x58*/ float <waitTime>5__7;
        /*0x60*/ DungeonTileBase <standTile>5__8;

        /*0x107aae4*/ <CoMoveRoute>d__49(int <>1__state);
        /*0x107ab10*/ void System.IDisposable.Dispose();
        /*0x107ab14*/ bool MoveNext();
        /*0x107b6e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107b6ec*/ void System.Collections.IEnumerator.Reset();
        /*0x107b72c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ bool isStopTile;

        /*0x1079fa4*/ <>c__DisplayClass50_0();
        /*0x1079fac*/ void <CoForceMove>b__0();
        /*0x1079fb4*/ bool <CoForceMove>b__1();
    }

    class <CoForceMove>d__50 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector2Int end;
        /*0x30*/ DungeonFieldCharacter.<> <>8__1;
        /*0x38*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> <route>5__2;
        /*0x40*/ bool <isBomb>5__3;
        /*0x44*/ DefineDungeon.TILETYPE <standTileType>5__4;
        /*0x48*/ int <i>5__5;

        /*0x1079fc4*/ <CoForceMove>d__50(int <>1__state);
        /*0x1079ff0*/ void System.IDisposable.Dispose();
        /*0x1079ff4*/ bool MoveNext();
        /*0x107a860*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107a868*/ void System.Collections.IEnumerator.Reset();
        /*0x107a8a8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMove>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector2Int start;
        /*0x30*/ UnityEngine.Vector2Int end;
        /*0x38*/ float time;
        /*0x3c*/ float <t>5__2;
        /*0x40*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x4c*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x58*/ float <speed>5__5;

        /*0x107a8b0*/ <CoMove>d__51(int <>1__state);
        /*0x107a8dc*/ void System.IDisposable.Dispose();
        /*0x107a8e0*/ bool MoveNext();
        /*0x107aa94*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107aa9c*/ void System.Collections.IEnumerator.Reset();
        /*0x107aadc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonFullMap : MiniMapBase<TableData.TableData_Dungeonmap, DungeonFullMapTile>
{
    /*0x98*/ UnityEngine.GameObject m_characterPointer;
    /*0xa0*/ DungeonSetting m_dungeonSetting;
    /*0xa8*/ UnityEngine.Vector2Int m_cameraPoint;
    /*0xb0*/ System.Collections.Generic.List<AtlasImage> m_conditionRewardList;
    /*0xb8*/ UnityEngine.Coroutine m_followCoroutine;

    /*0x11f9adc*/ DungeonFullMap();
    /*0x11f8dac*/ void ExitMap();
    /*0x11f8e3c*/ void ClearConditionRewardList();
    /*0x11f8f68*/ UnityEngine.Vector2Int GetCameraPoint();
    /*0x11f8f70*/ DungeonSetting GetDungeonSetting();
    /*0x11f8f78*/ float GetDungeonMoveTime();
    /*0x11f8fdc*/ void SetCameraPosition(UnityEngine.Vector2Int point);
    /*0x11f9040*/ void InitMap(int id);
    /*0x11f946c*/ void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    /*0x11f9674*/ void UpdateZoom();
    /*0x11f97b8*/ int GetGroup(TableData.TableData_Dungeonmap data);
    /*0x11f97cc*/ string GetParameters(TableData.TableData_Dungeonmap data);
    /*0x11f9820*/ UnityEngine.Vector2Int GetPoint(TableData.TableData_Dungeonmap data);
    /*0x11f9850*/ int GetTileID(TableData.TableData_Dungeonmap data);
    /*0x11f9864*/ void InitTile(int index, TableData.TableData_Dungeonmap data, DungeonFullMapTile tileBasePrefab);
    /*0x11f9224*/ void SetScrollRectField();
    /*0x11f99e4*/ void StartFollowPoint(UnityEngine.Vector2Int point);
    /*0x11f8f38*/ void StopFollowCharacter();
    /*0x11f9a58*/ System.Collections.IEnumerator CoFollowPoint(UnityEngine.Vector2Int point);
    /*0x11f9ad0*/ void OnClickExit();

    class <CoFollowPoint>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonFullMap <>4__this;
        /*0x28*/ UnityEngine.Vector2Int point;
        /*0x30*/ float <speed>5__2;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x40*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x4c*/ float <t>5__5;

        /*0x107b734*/ <CoFollowPoint>d__22(int <>1__state);
        /*0x107b760*/ void System.IDisposable.Dispose();
        /*0x107b764*/ bool MoveNext();
        /*0x107b8d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x107b8d8*/ void System.Collections.IEnumerator.Reset();
        /*0x107b918*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonFullMapPopup : GuiBase
{
    /*0x40*/ DungeonFullMap m_dungeonFullMap;

    /*0x11f9ca4*/ DungeonFullMapPopup();
    /*0x11f9ba0*/ void OnCreate();
    /*0x11f9ba4*/ void OnDelete();
    /*0x11f9ba8*/ void OnEnter();
    /*0x11f9bac*/ void OnExit();
    /*0x11f9c04*/ void OnFinish();
    /*0x11f9c08*/ void OnLeave();
    /*0x11f9c0c*/ void OnStart();
    /*0x11f9c10*/ DungeonFullMap GetDungeonFullMap();
    /*0x11f9c18*/ void InitPopup();
}

class DungeonFullMapTile : TileBase
{
    /*0x78*/ AtlasImage m_tileImage;
    /*0x80*/ AtlasImage m_objectImage;
    /*0x88*/ DungeonFullMap m_dungeonMap;
    /*0x90*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x94*/ DefineDungeon.TILETYPE m_tileType;
    /*0x98*/ DefineDungeon.TILEVIEWTYPE m_tileViewType;
    /*0x9c*/ int m_tileID;
    /*0xa0*/ UnityEngine.Vector2Int m_tilePoint;
    /*0xa8*/ TableData.TableData_Dungeonmap m_dungeonMapData;

    /*0x11fa604*/ DungeonFullMapTile();
    /*0x11f9cac*/ DefineDungeon.TILETYPE GetTileType();
    /*0x11f9cb4*/ DefineDungeon.TILEVIEWTYPE GetViewType();
    /*0x11f9cbc*/ UnityEngine.Vector2Int GetTilePoint();
    /*0x11f9cc4*/ TableData.TableData_Dungeontile GetTableData();
    /*0x11f9cd0*/ bool IsViewReward();
    /*0x11f9dd0*/ bool IsTileKeep();
    /*0x11f9888*/ void InitTile(int index, DungeonFullMap map, TableData.TableData_Dungeonmap data);
    /*0x11f9218*/ void RefreshTile();
    /*0x11f9e34*/ void SetData();
    /*0x11fa014*/ void ChangeNormalTile();
    /*0x11f9dfc*/ void Clear();
    /*0x11f9620*/ void SetHide(bool isDeep);
    /*0x11f9600*/ void SetLight();
    /*0x11fa0e4*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
    /*0x11fa540*/ void UpdateObjectImage();
    /*0x11fa63c*/ bool <IsViewReward>b__13_0(TableData.TableData_Dungeonreward data);
}

class DungeonFunction
{
    static /*0x11fa678*/ bool IsStopTile(DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    static /*0x11fa758*/ void PlayPressSoundTile(DefineDungeon.TILETYPE tileType);
    static /*0x11fa8ac*/ void PlayPressAfterSoundTile(DefineDungeon.TILETYPE tileType);
    static /*0x11faab8*/ void PlaySoundTarget(DefineDungeon.TILETYPE tileType);
    static /*0x11fa1cc*/ bool IsSeeTile(UnityEngine.Vector2Int tilePoint);
    static /*0x11f9fb8*/ bool IsUsedTile(UnityEngine.Vector2Int tilePoint);
    static /*0x11fad14*/ bool IsViewReward(UnityEngine.Vector2Int tilePoint);
    static /*0x11fa228*/ DefineDungeon.SHOWTYPE GetShowType(DefineDungeon.SHOWTYPE prevShowType);
    static /*0x11fa248*/ UnityEngine.Color GetColor(UnityEngine.Vector2Int tilePoint, int tileId, DefineDungeon.TILEVIEWTYPE viewType, DefineDungeon.TILETYPE tileType, DefineDungeon.DungeonColorType colorType);
    static /*0x11fae44*/ bool IsBroken(DungeonTileBase tile);
    static /*0x11faee0*/ void PressTile(DungeonFieldCharacter character, DungeonTileBase tile, DungeonMap dungeonMap, UnityEngine.Vector2Int prevPoint, bool isFinish, System.Action callBack);

    class <>c__DisplayClass6_0
    {
        /*0x10*/ UnityEngine.Vector2Int tilePoint;

        /*0x10923e8*/ <>c__DisplayClass6_0();
        /*0x10923f0*/ bool <IsViewReward>b__0(TableData.TableData_Dungeonreward data);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Action callBack;
        /*0x18*/ DungeonFieldCharacter character;
        /*0x20*/ DungeonTileBase tile;
        /*0x28*/ DefineDungeon.TILETYPE tileType;
        /*0x30*/ DungeonMap dungeonMap;
        /*0x38*/ UnityEngine.Vector2Int prevPoint;
        /*0x40*/ bool isFinish;
        /*0x48*/ System.Action <>9__25;
        /*0x50*/ System.Action <>9__28;
        /*0x58*/ System.Action <>9__31;
        /*0x60*/ System.Action <>9__33;
        /*0x68*/ System.Action <>9__34;
        /*0x70*/ System.Action <>9__35;
        /*0x78*/ System.Action <>9__38;

        /*0x107b9e4*/ <>c__DisplayClass10_0();
        /*0x107b9ec*/ void <PressTile>b__23();
        /*0x107ba00*/ void <PressTile>b__0(bool action);
        /*0x107bbcc*/ void <PressTile>b__25();
        /*0x107bc34*/ void <PressTile>b__1(bool action);
        /*0x107bd8c*/ void <PressTile>b__2(bool action);
        /*0x107bee4*/ void <PressTile>b__3(bool action);
        /*0x107c1d0*/ void <PressTile>b__4(bool action);
        /*0x107c4bc*/ void <PressTile>b__5(bool action);
        /*0x107c7a8*/ void <PressTile>b__6(bool action);
        /*0x107ca94*/ void <PressTile>b__7(bool action);
        /*0x107cd24*/ void <PressTile>b__8();
        /*0x107cdc8*/ void <PressTile>b__9(bool action);
        /*0x107cea0*/ void <PressTile>b__10(bool action);
        /*0x107ceac*/ void <PressTile>b__11();
        /*0x107d030*/ void <PressTile>b__28();
        /*0x107d088*/ void <PressTile>b__29(bool action);
        /*0x107d09c*/ void <PressTile>b__12(bool action);
        /*0x107d1b4*/ void <PressTile>b__13(bool action);
        /*0x107d284*/ void <PressTile>b__31();
        /*0x107d450*/ void <PressTile>b__14(int diceNumber, char dir);
        /*0x107d81c*/ void <PressTile>b__15(bool action);
        /*0x107dc78*/ void <PressTile>b__33();
        /*0x107dcc0*/ void <PressTile>b__34();
        /*0x107dcdc*/ void <PressTile>b__16(bool action);
        /*0x107dd44*/ void <PressTile>b__17(bool action);
        /*0x107ddf0*/ void <PressTile>b__18(bool action);
        /*0x107def0*/ void <PressTile>b__35();
        /*0x107e138*/ void <PressTile>b__19(bool action);
        /*0x107e14c*/ void <PressTile>b__36(PTShare.Define.SHero select);
        /*0x107e258*/ void <PressTile>b__20(bool action);
        /*0x107e310*/ void <PressTile>b__21(bool action);
        /*0x107e420*/ void <PressTile>b__38();
        /*0x107e434*/ void <PressTile>b__22(bool action);
    }

    class <>c__DisplayClass10_1
    {
        /*0x10*/ int reviveValue;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals1;

        /*0x107bd84*/ <>c__DisplayClass10_1();
        /*0x107e488*/ void <PressTile>b__26();
    }

    class <>c__DisplayClass10_2
    {
        /*0x10*/ int healValue;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals2;

        /*0x107bedc*/ <>c__DisplayClass10_2();
        /*0x107e6dc*/ void <PressTile>b__27();
    }

    class <>c__DisplayClass10_3
    {
        /*0x10*/ bool action;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals3;

        /*0x107d1ac*/ <>c__DisplayClass10_3();
        /*0x107e930*/ void <PressTile>b__30();
    }

    class <>c__DisplayClass10_4
    {
        /*0x10*/ int diceNumber;
        /*0x14*/ char dir;

        /*0x107d814*/ <>c__DisplayClass10_4();
        /*0x107ec34*/ void <PressTile>b__32(bool action);
    }

    class <>c__DisplayClass10_5
    {
        /*0x10*/ PTShare.Define.SHero select;
        /*0x18*/ DungeonFunction.<> CS$<>8__locals4;

        /*0x107e250*/ <>c__DisplayClass10_5();
        /*0x107eccc*/ void <PressTile>b__37();
    }

    class <>c
    {
        static /*0x0*/ DungeonFunction.<> <>9;
        static /*0x8*/ System.Action <>9__10_24;

        static /*0x107b920*/ <>c();
        /*0x107b980*/ <>c();
        /*0x107b988*/ void <PressTile>b__10_24();
    }
}

class DungeonHeroListPopup : ConditionHeroListPopup
{
    /*0x12daa7c*/ DungeonHeroListPopup();
    /*0x12da838*/ void HandleScrollContent(int index, HeroSlotMaze obj);
}

class DungeonMainPopup : GuiBase
{
    static /*0x0*/ System.Action<int, char> OnPlayMoveDice;
    static /*0x8*/ System.Action<int, char> OnEndMoveDiceEffect;
    /*0x40*/ DungeonMap m_mapPrefab;
    /*0x48*/ DungeonCurrencyTopWindow m_currencyTopWindow;
    /*0x50*/ DungeonStateWindow m_stateWindow;
    /*0x58*/ AtlasImage m_heroButtonIcon;
    /*0x60*/ AtlasImage m_dungeonInfoButtonIcon;
    /*0x68*/ MazeDiceSpineEffect m_diceEffect;
    /*0x70*/ DungeonMinimap m_dungeonMinimap;
    /*0x78*/ UnityEngine.GameObject m_itemParent;
    /*0x80*/ TweenPosition m_itemTween;
    /*0x88*/ AtlasImage m_itemIcon;
    /*0x90*/ LocalizeString m_itemAmountText;
    /*0x98*/ LocalizeString m_titleText;
    /*0xa0*/ DungeonMissionButton m_missionButton;
    /*0xa8*/ AtlasImage m_fastImage;
    /*0xb0*/ UnityEngine.GameObject m_fastObject;
    /*0xb8*/ DungeonNaviArrow[] m_naviArrows;
    /*0xc0*/ DungeonBombUI m_dungeonBombUI;
    /*0xc8*/ DungeonMap m_dungeonMap;
    /*0xd0*/ int m_dungeonID;
    /*0xd4*/ bool m_fast;

    static /*0x12dd44c*/ DungeonMainPopup();
    /*0x12dd444*/ DungeonMainPopup();
    /*0x12daa84*/ void OnCreate();
    /*0x12daa88*/ void OnDelete();
    /*0x12daa8c*/ void OnEnter();
    /*0x12daa90*/ void OnExit();
    /*0x12db008*/ void OnFinish();
    /*0x12db00c*/ void OnLeave();
    /*0x12db010*/ void OnStart();
    /*0x12db014*/ void ClickMap(UnityEngine.Vector3 position);
    /*0x12db28c*/ void DragMap(UnityEngine.Vector3 dir);
    /*0x12db354*/ void InitPopup(int dungeonID);
    /*0x12dc228*/ void SetBombFadeOut();
    /*0x12dc2c0*/ System.Collections.Generic.List<UnityEngine.Vector2Int> FindPoint(DefineDungeon.TILETYPE tileType);
    /*0x12dba7c*/ void SetEnableRewardNotify(bool enable);
    /*0x12dbb2c*/ void SetTitle();
    /*0x12dbcbc*/ void SetStateWindow();
    /*0x12dbd4c*/ void UpdateCurrencyTopWindow();
    /*0x12dbfa4*/ void UpdateFastIcon();
    /*0x12db94c*/ void CheckDialog();
    /*0x12dc934*/ System.Collections.IEnumerator CoOpenDialog(System.Collections.Generic.List<DialogData> dialogList);
    /*0x12dc9a0*/ System.Collections.IEnumerator CoShowReward(PTShare.Define.SProperty gain);
    /*0x12dca18*/ void SetItemReward(PTShare.Define.SProperty gain);
    /*0x12db5a0*/ void BindEvent();
    /*0x12dad28*/ void RemoveEvent();
    /*0x12dced8*/ void HandleShowSmallReward(PTShare.Define.SProperty sProperty);
    /*0x12dcf0c*/ void HandlePlayDice(int diceNumber, char moveDir);
    /*0x12dd064*/ void HandleOnChangeProgressPercent(int dungeonID, float percent);
    /*0x12dc0c0*/ void HandleBombChange();
    /*0x12dd134*/ void HandleRefreshUI();
    /*0x12dd138*/ void OnClickHero();
    /*0x12dd270*/ void OnClickDungeonInfo();
    /*0x12dd388*/ void OnClickFullMap();
    /*0x12dd408*/ void OnClickFastToggle();
    /*0x12dd450*/ void <CheckDialog>b__39_0();
    /*0x12dd6e4*/ void <OnClickHero>b__50_0();
    /*0x12dd740*/ void <OnClickDungeonInfo>b__51_0();

    class <>c__DisplayClass33_0
    {
        /*0x10*/ UnityEngine.Vector2Int localPoint;

        /*0x109242c*/ <>c__DisplayClass33_0();
        /*0x1092434*/ int <FindPoint>b__0(UnityEngine.Vector2Int lhs, UnityEngine.Vector2Int rhs);
    }

    class <CoOpenDialog>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Collections.Generic.List<DialogData> dialogList;

        /*0x1092644*/ <CoOpenDialog>d__40(int <>1__state);
        /*0x1092670*/ void System.IDisposable.Dispose();
        /*0x1092674*/ bool MoveNext();
        /*0x1092754*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109275c*/ void System.Collections.IEnumerator.Reset();
        /*0x109279c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__41 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonMainPopup <>4__this;
        /*0x28*/ PTShare.Define.SProperty gain;

        /*0x10927a4*/ <CoShowReward>d__41(int <>1__state);
        /*0x10927d0*/ void System.IDisposable.Dispose();
        /*0x10927d4*/ bool MoveNext();
        /*0x10928e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10928f0*/ void System.Collections.IEnumerator.Reset();
        /*0x1092930*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ DungeonMainPopup <>4__this;
        /*0x18*/ int diceNumber;
        /*0x1c*/ char moveDir;

        /*0x1092578*/ <>c__DisplayClass46_0();
        /*0x1092580*/ void <HandlePlayDice>b__0();
    }
}

class DungeonManager : Singleton.Component.SingletonComponent<DungeonManager>
{
    static /*0x0*/ System.Action<int, float> OnChangeProgressPercent;
    static /*0x8*/ System.Action OnRefreshUI;
    static /*0x10*/ System.Action<PTShare.Define.SProperty> OnShowSmallReward;
    static /*0x18*/ System.Action<UnityEngine.Vector2Int> OnEscapeFreeze;
    static /*0x20*/ int BOMB_IDLE;
    static /*0x28*/ System.Action OnBombChange;
    /*0x28*/ System.Collections.Generic.List<ConditionHeroData> m_dungeonHeroList;
    /*0x30*/ System.Collections.Generic.Dictionary<int, float> m_dungeonProgressDic;
    /*0x38*/ System.Collections.Generic.Dictionary<int, float> m_dungeonBestProgressDic;
    /*0x40*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, int> m_jailHeroDic;
    /*0x48*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, int> m_randomTileDic;
    /*0x50*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, System.Collections.Generic.List<int>> m_coinRewardDic;
    /*0x58*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_useTileList;
    /*0x60*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_conditionRewardList;
    /*0x68*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, DefineDungeon.SEETYPE> m_seeTileDic;
    /*0x70*/ System.Collections.Generic.Dictionary<int, long> m_dungeonCoinGainValueDic;
    /*0x78*/ System.Collections.Generic.List<PTShare.Define.SDungeon> m_sDungeonDataList;
    /*0x80*/ UnityEngine.Vector2Int m_playerPoint;
    /*0x88*/ UnityEngine.Vector2Int m_prevPoint;
    /*0x90*/ bool m_isTileDone;
    /*0x94*/ int m_dungeonID;
    /*0x98*/ DefineDungeon.DungeonItem m_dungeonItem;
    /*0xa0*/ DefineDungeon.DungeonConditionRewardData m_dungeonConditionData;
    /*0xa8*/ DefineDungeon.DungeonForceMoveData m_dungeonForceMoveData;
    /*0xb0*/ DefineDungeon.DungeonRandomRewardLimitData m_dungeonRandomRewardLimitData;
    /*0xb8*/ DefineDungeon.DungeonDefeatData m_dungeonDefeatData;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SDungeon> m_unlockDungeonList;
    /*0xc8*/ PTShare.Define.SProperty m_rewardResponse;
    /*0xd0*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_playerBattleHeroList;
    /*0xd8*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_enemyBattleHeroList;
    /*0xe0*/ PTShare.Define.SDungeonBuff m_buffs;
    /*0xe8*/ PTShare.Define.SDungeonBuff m_lastBuffValue;
    /*0xf0*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> m_mateCandiDateList;
    /*0xf8*/ System.Collections.Generic.Dictionary<int, DefineEvent.TriggerData> m_triggerDic;
    /*0x100*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<DialogData>> m_dialogDic;
    /*0x108*/ bool <ShowWinnerAnim>k__BackingField;
    /*0x10c*/ int m_bombCount;
    /*0x110*/ int m_tmpCount;
    /*0x118*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, int> m_wallHeroDic;

    static /*0x12e7218*/ DungeonManager();
    static /*0x12dd79c*/ void add_OnChangeProgressPercent(System.Action<int, float> value);
    static /*0x12dd890*/ void remove_OnChangeProgressPercent(System.Action<int, float> value);
    static /*0x12dcce8*/ void add_OnShowSmallReward(System.Action<PTShare.Define.SProperty> value);
    static /*0x12dcde0*/ void remove_OnShowSmallReward(System.Action<PTShare.Define.SProperty> value);
    static /*0x12dd984*/ void add_OnEscapeFreeze(System.Action<UnityEngine.Vector2Int> value);
    static /*0x12dda7c*/ void remove_OnEscapeFreeze(System.Action<UnityEngine.Vector2Int> value);
    /*0x12e6d0c*/ DungeonManager();
    /*0x12ddb74*/ bool get_ShowWinnerAnim();
    /*0x12ddb7c*/ void set_ShowWinnerAnim(bool value);
    /*0x12ddb88*/ int GetAtkBuff();
    /*0x12ddba4*/ int GetDefBuff();
    /*0x12ddbc0*/ int GetLastBuffValueAtk();
    /*0x12ddbdc*/ int GetLastBuffValueDef();
    /*0x12ddbf8*/ int GetDungeonID();
    /*0x12ddc00*/ int GetJailCount();
    /*0x12ddc54*/ int GetMonsterAddHP();
    /*0x12dde1c*/ int GetMonsterAddDMG();
    /*0x12dc528*/ int GetHammerCount();
    /*0x12dc50c*/ int GetKeyCount();
    /*0x12dde48*/ DefineDungeon.DungeonConditionRewardData GetConditionRewardData();
    /*0x12dde50*/ DefineDungeon.DungeonRandomRewardLimitData GetDungeonRandomRewardLimitData();
    /*0x12dde58*/ ConditionHeroData GetJailHero(UnityEngine.Vector2Int point);
    /*0x12ddfbc*/ ConditionHeroData GetJailHeroByConvert(int heroId);
    /*0x12de094*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> GetMateCandidateList();
    /*0x12de09c*/ System.Collections.Generic.List<ConditionHeroData> GetDungeonHeroList();
    /*0x12de0a4*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> GetEnemyHeroList();
    /*0x12de0ac*/ int GetStageBattleID();
    /*0x12de2cc*/ PTShare.Define.SProperty GetReward();
    /*0x12de2d4*/ PTShare.Define.SProperty GetBattleReward();
    /*0x12de494*/ float GetMoveTime(float time);
    /*0x12de4c8*/ float GetAnimScale(float scale);
    /*0x12de500*/ PTShare.Define.SStatBonus GetStatBonus();
    /*0x12de634*/ System.Collections.Generic.List<UnityEngine.Vector2Int> GetConditionRewardList();
    /*0x12de63c*/ float GetDungeonProgressPercent(bool isBest);
    /*0x12de64c*/ float GetDungeonProgressPercent(int dungeonID, bool isBest);
    /*0x12de710*/ float GetBestDungeonProgressPercent(int dungeonID);
    /*0x12de7c8*/ float FindRewardPercent(int dungeonId);
    /*0x12de92c*/ int FindRandomTile(UnityEngine.Vector2Int point);
    /*0x12ddc80*/ TableData.TableData_Dungeongroup FindDungeonGroup(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12de488*/ DefineDungeon.TILETYPE GetTileType();
    /*0x12de9d0*/ DefineDungeon.TILETYPE GetTileType(int dungeonID);
    /*0x12de0fc*/ DefineDungeon.TILETYPE GetTileType(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12de9d8*/ System.Collections.Generic.List<Rewards> GetTileRewardList(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12deba8*/ System.Collections.Generic.List<Rewards> GetTileRewardList(int dungeonID, DefineDungeon.TILETYPE tileType);
    /*0x12ded8c*/ System.Collections.Generic.List<UnityEngine.Vector2Int> GetRewardPointList(int dungeonID, DefineDungeon.TILETYPE tileType);
    /*0x12def30*/ string GetOpenTrigger(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12df058*/ int GetReceivedCoinRewardCount(UnityEngine.Vector2Int point);
    /*0x12df108*/ bool IsAllReceivedCoinReward(UnityEngine.Vector2Int point);
    /*0x12df17c*/ bool IsReceivedCoinReward(UnityEngine.Vector2Int point, int index);
    /*0x12df248*/ bool IsReceivedConditionReward(int dungeonID, UnityEngine.Vector2Int point);
    /*0x12df468*/ bool IsTileDone();
    /*0x12df470*/ bool IsFightUnit();
    /*0x12df5bc*/ bool IsDeadUnit();
    /*0x12da9b4*/ bool IsJailUnit(int heroID);
    /*0x12df708*/ bool IsJailUnit(UnityEngine.Vector2Int point);
    /*0x12df76c*/ bool IsUseUnit(ConditionHeroData conditionHero);
    /*0x12de8c8*/ bool IsUseTile(UnityEngine.Vector2Int point);
    /*0x12df7d8*/ bool IsSeeTile(UnityEngine.Vector2Int point);
    /*0x12df87c*/ bool IsBlurTile(UnityEngine.Vector2Int point);
    /*0x12df920*/ bool IsPlayingDungeon();
    /*0x12df930*/ bool IsStartPoint();
    /*0x12df9b4*/ bool IsDefeat();
    /*0x12df9d0*/ UnityEngine.Vector2Int GetPlayerPoint();
    /*0x12df9d8*/ UnityEngine.Vector2Int GetPrevPoint();
    /*0x12df9e0*/ UnityEngine.Vector2Int GetDefeatPoint();
    /*0x12df9fc*/ System.Collections.Generic.List<Rewards> GetBattleRewards();
    /*0x12dfc38*/ System.Collections.Generic.List<Rewards> GetBattleBossRewards();
    /*0x12dc500*/ TableData.TableData_Dungeon GetCurrDungeonData();
    /*0x12dfd88*/ long GetGainDungeonCoin(int dungeonId);
    /*0x12de404*/ long GetLeftGainDungeonCoin(int dungeonId);
    /*0x12dfe48*/ bool IsExistHero(int heroId);
    /*0x12dff8c*/ void SetForceMoveEnd(UnityEngine.Vector2Int point);
    /*0x12dfe90*/ PTShare.Define.SHero FindSHero(int heroId);
    /*0x12dff94*/ ConditionHeroData FindConditionHero(int heroId);
    /*0x12e0084*/ void AddUseTile(UnityEngine.Vector2Int point);
    /*0x12e0124*/ void AddSeeTile(UnityEngine.Vector2Int point);
    /*0x12e01f0*/ void AddBlurTile(UnityEngine.Vector2Int point);
    /*0x12e0294*/ bool IsShowDialog();
    /*0x12dc544*/ System.Collections.Generic.List<DialogData> CheckDialog(ref bool isEnterTrigger);
    /*0x12e03e4*/ void AwakeInstance();
    /*0x12e03e8*/ bool InitInstance();
    /*0x12e05cc*/ void ReleaseInstance();
    /*0x12e0630*/ void SetPlayerPosition(UnityEngine.Vector2Int point);
    /*0x12e0400*/ void Init();
    /*0x12e0658*/ void ClearData(bool clearCurrProgress);
    /*0x12e0cc4*/ void ClearDefeatData();
    /*0x12e0854*/ void UpdateProcessPercent(int dungeonID, float percent);
    /*0x12e0ce0*/ void UpdateBestProgressPercent(int dungeonID, float percent);
    /*0x12e0d98*/ void Send_Enter(System.Action callBack);
    /*0x12e0f30*/ void Send_DungeonExploreStart(int dungeonID, System.Action callBack);
    /*0x12e10e4*/ void Send_DungeonExploreContinue(System.Action callBack);
    /*0x12e12ac*/ void Send_DungeonExploreCancel(System.Action callBack);
    /*0x12e1438*/ void Send_DungeonProgress(System.Action<System.Collections.Generic.List<PTShare.Define.SDungeonCondition>> callBack);
    /*0x12e15c0*/ void Send_DungeonMove(string way, System.Action callBack);
    /*0x12e175c*/ void Send_HealTile(UnityEngine.Vector2Int point, int index, System.Action callBack);
    /*0x12e18e8*/ void Send_ReviveTile(UnityEngine.Vector2Int point, int index, System.Action callBack);
    /*0x12e1a74*/ void Send_BattleBegin(string heroIds, System.Action<int> callBack_WithRandomSeed);
    /*0x12e1c10*/ void Send_BattleFinish(bool isWin, string playData, long lcp, string HpMps, System.Action callBack);
    /*0x12e1dd4*/ void GetForceMoveWay(UnityEngine.Vector2Int point, int index, System.Action<int, char> callBack);
    /*0x12e1e6c*/ void Send_CoinReward(UnityEngine.Vector2Int point, System.Action callBack, System.Action rewardPopupExitCallBack);
    /*0x12e2068*/ void Send_MateTile(UnityEngine.Vector2Int point, System.Action callBack);
    /*0x12e2080*/ void Send_MateRequest(int tabledId, System.Action callBack);
    /*0x12e221c*/ void Send_FreezeUnlock(UnityEngine.Vector2Int point, System.Action callBack);
    /*0x12e23b0*/ void Send_WallRequest(UnityEngine.Vector2Int point, bool isUse, System.Action callBack);
    /*0x12e259c*/ void ShowSmallReward();
    /*0x12e3234*/ string GetDescDungeonRewardOpenCondition(string trigger);
    /*0x12e37f8*/ PTShare.Define.SHero ConvertSMateCandidateToSHero(PTShare.Define.SMateCandidate sMateCandidate);
    /*0x12e39f8*/ void AddMate(PTShare.Define.SMate newMate);
    /*0x12e3d24*/ void UpdateHeroList(System.Collections.Generic.List<PTShare.Define.SMate> mateList);
    /*0x12e3fbc*/ void UpdateHeroList();
    /*0x12e41e8*/ void UpdateHeroCondition(PTShare.Define.SCondition condition);
    /*0x12e4328*/ void UpdateHeroConditions(System.Collections.Generic.List<PTShare.Define.SCondition> conditions);
    /*0x12e4220*/ void SetHeroCondition(int heroId, int hp, int mp);
    /*0x12e09b0*/ void RemoveMateHeros();
    /*0x12e3c00*/ void SortHeroList();
    /*0x12e4498*/ void AddBuff(int atk, int def);
    /*0x12e44ec*/ void AddDebuff(int atk, int def);
    /*0x12e4540*/ void ResetBuff();
    /*0x12e3954*/ PTShare.Define.SEquip FindEquipItem(int tableId, int equipGrade, PTShare.Define.EquipParts equipParts);
    /*0x12e4584*/ void SetRandomTileData(System.Collections.Generic.Dictionary<string, int> data);
    /*0x12e4824*/ void SetSeeTileData(System.Collections.Generic.List<string> data);
    /*0x12e49c4*/ void SetUseTileData(System.Collections.Generic.List<string> data);
    /*0x12e4b60*/ void SetJailTileData(System.Collections.Generic.Dictionary<string, int> data);
    /*0x12e4fd0*/ void SetCoinRewardData(System.Collections.Generic.List<string> data);
    /*0x12e5268*/ void AddCoinRewardData(UnityEngine.Vector2Int point, int index);
    /*0x12e5514*/ void AddConditionRewardData(UnityEngine.Vector2Int point);
    /*0x12e5678*/ void InitTriggerDialog(int dungeonID);
    /*0x12dfa90*/ System.Collections.Generic.List<Rewards> CutRewardLimitCoin(System.Collections.Generic.List<Rewards> cutTarget);
    /*0x12dc0b0*/ bool UseBomb();
    /*0x12e5b9c*/ int GetBombCount();
    /*0x12e5ba4*/ int GetTmpBombCount();
    /*0x12e0bdc*/ void SetBombClear();
    /*0x12e5bac*/ void SetBombCount(int count);
    /*0x12e5c48*/ bool ClientMoveByBomb();
    /*0x12e5d0c*/ void DebugDungeon();
    /*0x12e5fd0*/ string[] DebugSplitString(string str);
    /*0x12e60c4*/ int DebugGetRandomTileCount(string[] str);
    /*0x12e6168*/ int DebugGetTileCount(int dungeonId, System.Collections.Generic.List<int> tileIndexList);
    /*0x12e6274*/ void DebugCheckBattleTileNotSelectGroup(int dungeonId, System.Collections.Generic.List<int> tileIndexList);
    /*0x12e0c70*/ void ClearPropertyWallData();
    /*0x12e64ac*/ void SetWallTileData(System.Collections.Generic.Dictionary<string, int> data);
    /*0x12daa18*/ bool IsPropertyWallHero(int heroId);
    /*0x12e691c*/ bool IsPropertyWallHero(UnityEngine.Vector2Int point);
    /*0x12e6938*/ ConditionHeroData FindPropertyWallHero(UnityEngine.Vector2Int point);
    /*0x12e69e8*/ void PushWallHero(UnityEngine.Vector2Int point, int heroId);
    /*0x12e6ab8*/ void Send_Assign(UnityEngine.Vector2Int point, PTShare.Define.SHero hero, System.Action callBack);
    /*0x12e7294*/ bool <AddCoinRewardData>b__158_0(PTShare.Define.SDungeon data);
    /*0x12e72b8*/ bool <AddConditionRewardData>b__159_0(PTShare.Define.SDungeon data);

    class <>c__DisplayClass55_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ UnityEngine.Vector2Int point;

        /*0x1094d5c*/ <>c__DisplayClass55_0();
        /*0x1094d64*/ bool <GetJailHero>b__0(ConditionHeroData data);
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;
        /*0x18*/ TableData.TableData_Dungeonmap mapData;

        /*0x1094dec*/ <>c__DisplayClass72_0();
        /*0x1094df4*/ bool <FindDungeonGroup>b__0(TableData.TableData_Dungeonmap data);
        /*0x1094e30*/ bool <FindDungeonGroup>b__1(TableData.TableData_Dungeongroup data);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1094e60*/ <>c__DisplayClass75_0();
        /*0x1094e68*/ bool <GetTileType>b__0(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass79_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1094ea4*/ <>c__DisplayClass79_0();
        /*0x1094eac*/ bool <GetOpenTrigger>b__0(TableData.TableData_Dungeonreward data);
    }

    class <>c__DisplayClass83_0
    {
        /*0x10*/ int dungeonID;

        /*0x1094ee8*/ <>c__DisplayClass83_0();
        /*0x1094ef0*/ bool <IsReceivedConditionReward>b__0(PTShare.Define.SDungeon data);
    }

    class <>c
    {
        static /*0x0*/ DungeonManager.<> <>9;
        static /*0x8*/ System.Predicate<ConditionHeroData> <>9__85_0;
        static /*0x10*/ System.Predicate<ConditionHeroData> <>9__86_0;
        static /*0x18*/ System.Comparison<ConditionHeroData> <>9__148_0;

        static /*0x1092938*/ <>c();
        /*0x1092998*/ <>c();
        /*0x10929a0*/ bool <IsFightUnit>b__85_0(ConditionHeroData data);
        /*0x10929c0*/ bool <IsDeadUnit>b__86_0(ConditionHeroData data);
        /*0x10929e0*/ int <SortHeroList>b__148_0(ConditionHeroData a, ConditionHeroData b);
    }

    class <>c__DisplayClass106_0
    {
        /*0x10*/ int heroId;

        /*0x1092a7c*/ <>c__DisplayClass106_0();
        /*0x1092a84*/ bool <FindSHero>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass107_0
    {
        /*0x10*/ int heroId;

        /*0x1092ab4*/ <>c__DisplayClass107_0();
        /*0x1092abc*/ bool <FindConditionHero>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass122_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1092aec*/ <>c__DisplayClass122_0();
        /*0x1092af4*/ void <Send_Enter>b__0(ServerProtocol.ResDungeonEnter response);
    }

    class <>c__DisplayClass123_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ int dungeonID;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Action<TableData.TableData_Dungeonmap> <>9__1;
        /*0x30*/ System.Predicate<PTShare.Define.SDungeon> <>9__2;

        /*0x1092d0c*/ <>c__DisplayClass123_0();
        /*0x1092d14*/ void <Send_DungeonExploreStart>b__0(ServerProtocol.ResDungeonExploreStart response);
        /*0x1092ff8*/ void <Send_DungeonExploreStart>b__1(TableData.TableData_Dungeonmap data);
        /*0x109311c*/ bool <Send_DungeonExploreStart>b__2(PTShare.Define.SDungeon data);
    }

    class <>c__DisplayClass124_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ float progress;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Action<TableData.TableData_Dungeonmap> <>9__1;

        /*0x109314c*/ <>c__DisplayClass124_0();
        /*0x1093154*/ void <Send_DungeonExploreContinue>b__0(ServerProtocol.ResDungeonExploreContinue response);
        /*0x10934f0*/ void <Send_DungeonExploreContinue>b__1(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass125_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1093614*/ <>c__DisplayClass125_0();
        /*0x109361c*/ void <Send_DungeonExploreCancel>b__0(ServerProtocol.ResDungeonExploreCancel response);
    }

    class <>c__DisplayClass126_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SDungeonCondition>> callBack;

        /*0x1093668*/ <>c__DisplayClass126_0();
        /*0x1093670*/ void <Send_DungeonProgress>b__0(ServerProtocol.ResDungeonProgress response);
    }

    class <>c__DisplayClass127_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10936e8*/ <>c__DisplayClass127_0();
        /*0x10936f0*/ void <Send_DungeonMove>b__0(ServerProtocol.ResDungeonMove response);
    }

    class <>c__DisplayClass128_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1093de0*/ <>c__DisplayClass128_0();
        /*0x1093de8*/ void <Send_HealTile>b__0(ServerProtocol.ResDungeonHeal response);
    }

    class <>c__DisplayClass129_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1093e38*/ <>c__DisplayClass129_0();
        /*0x1093e40*/ void <Send_ReviveTile>b__0(ServerProtocol.ResDungeonRevival response);
    }

    class <>c__DisplayClass130_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action<int> callBack_WithRandomSeed;

        /*0x1093e90*/ <>c__DisplayClass130_0();
        /*0x1093e98*/ void <Send_BattleBegin>b__0(ServerProtocol.ResDungeonBegin instance);
    }

    class <>c__DisplayClass131_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ string HpMps;
        /*0x20*/ System.Action callBack;

        /*0x1094068*/ <>c__DisplayClass131_0();
        /*0x1094070*/ void <Send_BattleFinish>b__0(ServerProtocol.ResDungeonFinish instance);
    }

    class <>c__DisplayClass133_0
    {
        /*0x10*/ System.Action rewardPopupExitCallBack;
        /*0x18*/ DungeonManager <>4__this;
        /*0x20*/ UnityEngine.Vector2Int point;
        /*0x28*/ System.Action callBack;

        /*0x10945b0*/ <>c__DisplayClass133_0();
        /*0x10945b8*/ void <Send_CoinReward>b__0(ServerProtocol.ResDungeonCoinReward response);
        /*0x1094730*/ void <Send_CoinReward>b__1(int faield, string value);
    }

    class <>c__DisplayClass135_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1094744*/ <>c__DisplayClass135_0();
        /*0x109474c*/ void <Send_MateRequest>b__0(ServerProtocol.ResDungeonMate response);
    }

    class <>c__DisplayClass136_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ UnityEngine.Vector2Int point;
        /*0x20*/ System.Action callBack;

        /*0x10947ac*/ <>c__DisplayClass136_0();
        /*0x10947b4*/ void <Send_FreezeUnlock>b__0(ServerProtocol.ResDungeonJail response);
    }

    class <>c__DisplayClass137_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1094928*/ <>c__DisplayClass137_0();
        /*0x1094930*/ void <Send_WallRequest>b__0(ServerProtocol.ResDungeonWall response);
    }

    class <>c__DisplayClass146_0
    {
        /*0x10*/ int heroId;

        /*0x1094974*/ <>c__DisplayClass146_0();
        /*0x109497c*/ bool <SetHeroCondition>b__0(ConditionHeroData _hero);
    }

    class <>c__DisplayClass156_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<string, int> jailHeroData;

        /*0x10949ac*/ <>c__DisplayClass156_0();
        /*0x10949b4*/ bool <SetJailTileData>b__0(ConditionHeroData heroData);
        /*0x1094a1c*/ bool <SetJailTileData>b__1(PTShare.Define.SHero heroData);
    }

    class <>c__DisplayClass175_0
    {
        /*0x10*/ System.Collections.Generic.List<int> tileIndexList;
        /*0x18*/ int count;

        /*0x1094a7c*/ <>c__DisplayClass175_0();
        /*0x1094a84*/ void <DebugGetTileCount>b__0(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass176_0
    {
        /*0x10*/ System.Collections.Generic.List<int> dungeonGroupIndexList;
        /*0x18*/ System.Collections.Generic.List<int> tileIndexList;
        /*0x20*/ System.Collections.Generic.List<UnityEngine.Vector2Int> groupFailed;

        /*0x1094b00*/ <>c__DisplayClass176_0();
        /*0x1094b08*/ void <DebugCheckBattleTileNotSelectGroup>b__0(TableData.TableData_Dungeongroup data);
        /*0x1094b70*/ void <DebugCheckBattleTileNotSelectGroup>b__1(TableData.TableData_Dungeonmap data);
    }

    class <>c__DisplayClass179_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<string, int> wallHeroData;

        /*0x1094c2c*/ <>c__DisplayClass179_0();
        /*0x1094c34*/ bool <SetWallTileData>b__0(ConditionHeroData heroData);
        /*0x1094c9c*/ bool <SetWallTileData>b__1(PTShare.Define.SHero heroData);
    }

    class <>c__DisplayClass184_0
    {
        /*0x10*/ DungeonManager <>4__this;
        /*0x18*/ UnityEngine.Vector2Int point;
        /*0x20*/ PTShare.Define.SHero hero;
        /*0x28*/ System.Action callBack;

        /*0x1094cfc*/ <>c__DisplayClass184_0();
        /*0x1094d04*/ void <Send_Assign>b__0(ServerProtocol.ResDungeonAssign response);
    }
}

class DungeonMap : MapBase<TableData.TableData_Dungeonmap, DungeonTileBase>
{
    static /*0x0*/ System.Action<DungeonTileBase> OnClickTile;
    static /*0x8*/ System.Action<bool> OnBattleEnd;
    /*0xf8*/ DungeonFieldCharacter m_dungeonFieldCharacter;
    /*0x100*/ DungeonFieldCharacter m_freezeFieldCharacter;
    /*0x108*/ DungeonDialogEnter m_dungeonDialogEnter;
    /*0x110*/ DungeonRouteEffect m_dungeonRouteEffect;
    /*0x118*/ DungeonSetting m_dungeonSetting;
    /*0x120*/ UnityEngine.SpriteRenderer m_dungeonBackground;
    /*0x128*/ DungeonParticle m_dungeonParticle;
    /*0x130*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> m_closeList;
    /*0x138*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> m_openList;
    /*0x140*/ UnityEngine.Coroutine m_followCoroutine;
    /*0x148*/ UnityEngine.Camera m_dungeonSceneCamera;
    /*0x150*/ DungeonMinimap m_miniMap;
    /*0x158*/ int m_dungeonID;
    /*0x15c*/ bool m_waitDrag;
    /*0x15d*/ bool m_lockTileClick;

    static /*0x12ea284*/ DungeonMap();
    /*0x12ea1ac*/ DungeonMap();
    /*0x12e72dc*/ void ExitMap();
    /*0x12e758c*/ DefineDungeon.TILETYPE GetTileType(UnityEngine.Vector2Int point);
    /*0x12e75fc*/ ARROW GetPlayerMoveDir();
    /*0x12e767c*/ DungeonSetting GetDungeonSetting();
    /*0x12e7684*/ float GetDungeonMoveTime();
    /*0x12e7704*/ float GetDungeonAnimScale();
    /*0x12dc4e4*/ UnityEngine.Vector2Int GetCharacterStandPoint();
    /*0x12e7788*/ UnityEngine.Vector3 GetCharacterStandWorldPoint();
    /*0x12e77b4*/ DungeonFieldCharacter GetFreezeCharacter();
    /*0x12e77bc*/ DungeonFullMap GetDungeonFullMap();
    /*0x12e78b4*/ void SetLockClick(bool lockClick);
    /*0x12e78c0*/ void SetView(bool isExplore);
    /*0x12e7970*/ void InitMap(int id);
    /*0x12db888*/ void InitMap(int id, DungeonMinimap minimap);
    /*0x12e7a7c*/ void InitTileType();
    /*0x12e7b38*/ void SetBackground(int dungeonID);
    /*0x12e7d28*/ void DragMap(UnityEngine.Vector3 dir);
    /*0x12e7e7c*/ void MoveBackGround(UnityEngine.Vector3 dir);
    /*0x12e7fb4*/ void FixedCamera();
    /*0x12e8288*/ System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> FindRoute(UnityEngine.Vector2Int start, UnityEngine.Vector2Int end, bool isLeftFast, int maxDist);
    /*0x12e89dc*/ DefineDungeon.DungeonRouteNode FindLowCostNode();
    /*0x12e86cc*/ void AddOpenList(DefineDungeon.DungeonRouteNode parent, UnityEngine.Vector2Int point, UnityEngine.Vector2Int end, float cost);
    /*0x12e8e40*/ void StartSpreadTile(UnityEngine.Vector2Int target, int activePower, int power, string spreadType);
    /*0x12e8f60*/ void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    /*0x12e9114*/ int GetGroup(TableData.TableData_Dungeonmap data);
    /*0x12e9128*/ string GetParameters(TableData.TableData_Dungeonmap data);
    /*0x12e917c*/ UnityEngine.Vector2Int GetPoint(TableData.TableData_Dungeonmap data);
    /*0x12e91ac*/ int GetTileID(TableData.TableData_Dungeonmap data);
    /*0x12e91c0*/ void InitTile(int index, TableData.TableData_Dungeonmap data, DungeonTileBase tileBasePrefab);
    /*0x12e91e8*/ void BindEvent();
    /*0x12e9388*/ void RemoveEvent();
    /*0x12db0d0*/ void HandleTouchEvent(UnityEngine.Vector3 position);
    /*0x12e9528*/ void HandleClickTile(DungeonTileBase click);
    /*0x12e95c0*/ void HandleShowClearPopup();
    /*0x12dc878*/ void ShowDialogEnter(System.Action exitCallBack);
    /*0x12e96c4*/ void ShowParticle(DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point, bool isUse);
    /*0x12e9a7c*/ void ShowBomb(DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12e9c98*/ void StandCharacter(UnityEngine.Vector2Int point);
    /*0x12e9f1c*/ void StartFollowPoint(UnityEngine.Vector2Int point);
    /*0x12e7398*/ void StopFollowCharacter();
    /*0x12ea008*/ System.Collections.IEnumerator CoFollowPoint(UnityEngine.Vector2Int point);
    /*0x12e9668*/ System.Collections.IEnumerator CoClearPopup();
    /*0x12ea0dc*/ float GetZoomMin();
    /*0x12ea0f8*/ float GetZoomMax();
    /*0x12ea114*/ void UpdateZoom();
    /*0x12ea288*/ void <InitTileType>b__31_0(DungeonTileBase data);

    class <>c__DisplayClass37_0
    {
        /*0x10*/ float minCost;
        /*0x18*/ DefineDungeon.DungeonRouteNode nowNode;

        /*0x1094f14*/ <>c__DisplayClass37_0();
        /*0x1094f1c*/ void <FindLowCostNode>b__0(DefineDungeon.DungeonRouteNode data);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1094f48*/ <>c__DisplayClass38_0();
        /*0x1094f50*/ bool <AddOpenList>b__0(DefineDungeon.DungeonRouteNode data);
        /*0x1094f80*/ bool <AddOpenList>b__1(DefineDungeon.DungeonRouteNode data);
    }

    class <CoFollowPoint>d__57 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonMap <>4__this;
        /*0x28*/ UnityEngine.Vector2Int point;
        /*0x30*/ float <speed>5__2;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x40*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x4c*/ float <t>5__5;
        /*0x50*/ UnityEngine.Vector3 <bgMoveDir>5__6;

        /*0x10951ac*/ <CoFollowPoint>d__57(int <>1__state);
        /*0x10951d8*/ void System.IDisposable.Dispose();
        /*0x10951dc*/ bool MoveNext();
        /*0x10953e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10953ec*/ void System.Collections.IEnumerator.Reset();
        /*0x109542c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoClearPopup>d__58 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x1094fb0*/ <CoClearPopup>d__58(int <>1__state);
        /*0x1094fdc*/ void System.IDisposable.Dispose();
        /*0x1094fe0*/ bool MoveNext();
        /*0x109515c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1095164*/ void System.Collections.IEnumerator.Reset();
        /*0x10951a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonMatePopup : GuiBase
{
    /*0x40*/ HeroSlotInventory[] m_mateSlots;
    /*0x48*/ LocalizeString[] m_cpTexts;
    /*0x50*/ int m_selectedHeroTableId;
    /*0x58*/ DungeonTileBase m_caller;

    /*0x12eb378*/ DungeonMatePopup();
    /*0x12ea96c*/ void OnCreate();
    /*0x12ea970*/ void OnDelete();
    /*0x12ea974*/ void OnEnter();
    /*0x12ea9e0*/ void OnFinish();
    /*0x12ea9e4*/ void OnLeave();
    /*0x12ea9e8*/ void OnStart();
    /*0x12ea9ec*/ void OnExit();
    /*0x12eaa68*/ void InitPopup(DungeonTileBase tile);
    /*0x12eadd0*/ bool HandleClickMate(PTShare.Define.SHero sHero, bool bSelected, bool bShaded, long lPlayerID);
    /*0x12eaeb0*/ void OnClickSelect();

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x1095434*/ <>c__DisplayClass11_0();
        /*0x109543c*/ void <InitPopup>b__0();
    }
}

class DungeonMinimap : MiniMapBase<TableData.TableData_Dungeonmap, DungeonMinimapTile>
{
    /*0x98*/ DungeonSetting m_dungeonSetting;
    /*0xa0*/ LocalizeString m_percentText;
    /*0xa8*/ UnityEngine.GameObject m_characterPointer;
    /*0xb0*/ UnityEngine.Coroutine m_followCoroutine;
    /*0xb8*/ UnityEngine.Vector2Int m_cameraPoint;

    /*0x12ebf70*/ DungeonMinimap();
    /*0x12eb388*/ void ExitMap();
    /*0x12eb420*/ DungeonSetting GetDungeonSetting();
    /*0x12eb428*/ float GetDungeonMoveTime();
    /*0x12eb4a8*/ UnityEngine.Vector2Int GetCameraPoint();
    /*0x12eb4b0*/ void SetCameraPosition(UnityEngine.Vector2Int point);
    /*0x12eb514*/ void InitMap(int id);
    /*0x12eb780*/ void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    /*0x12eb9a0*/ void UpdateZoom();
    /*0x12eba90*/ int GetGroup(TableData.TableData_Dungeonmap data);
    /*0x12ebaa4*/ string GetParameters(TableData.TableData_Dungeonmap data);
    /*0x12ebaf8*/ UnityEngine.Vector2Int GetPoint(TableData.TableData_Dungeonmap data);
    /*0x12ebb28*/ int GetTileID(TableData.TableData_Dungeonmap data);
    /*0x12ebb3c*/ void InitTile(int index, TableData.TableData_Dungeonmap data, DungeonMinimapTile tileBasePrefab);
    /*0x12ebc64*/ void BindEvent();
    /*0x12ebd3c*/ void RemoveEvent();
    /*0x12ea080*/ void StartFollowPoint(UnityEngine.Vector2Int point);
    /*0x12eb3f0*/ void StopFollowCharacter();
    /*0x12eb618*/ void SetPercent(float percent);
    /*0x12ebe14*/ System.Collections.IEnumerator CoFollowPoint(UnityEngine.Vector2Int point);
    /*0x12ebe8c*/ float GetZoomMin();
    /*0x12ebea8*/ float GetZoomMax();
    /*0x12ebec4*/ void HandleOnChangeProgressPercent(int dungeonID, float percent);
    /*0x12ebec8*/ void OnClickZoom(bool isPlus);

    class <CoFollowPoint>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonMinimap <>4__this;
        /*0x28*/ UnityEngine.Vector2Int point;
        /*0x30*/ float <speed>5__2;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x40*/ UnityEngine.Vector3 <endPosition>5__4;
        /*0x4c*/ float <t>5__5;

        /*0x1095508*/ <CoFollowPoint>d__23(int <>1__state);
        /*0x1095534*/ void System.IDisposable.Dispose();
        /*0x1095538*/ bool MoveNext();
        /*0x1095708*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1095710*/ void System.Collections.IEnumerator.Reset();
        /*0x1095750*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonMinimapTile : TileBase
{
    /*0x78*/ AtlasImage m_tileImage;
    /*0x80*/ DungeonMinimap m_dungeonMap;
    /*0x88*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x8c*/ DefineDungeon.TILETYPE m_tileType;
    /*0x90*/ DefineDungeon.TILEVIEWTYPE m_tileViewType;
    /*0x94*/ int m_tileID;
    /*0x98*/ UnityEngine.Vector2Int m_tilePoint;

    /*0x12ec554*/ DungeonMinimapTile();
    /*0x12ebff4*/ DefineDungeon.TILETYPE GetTileType();
    /*0x12ebffc*/ DefineDungeon.TILEVIEWTYPE GetViewType();
    /*0x12ec004*/ UnityEngine.Vector2Int GetTilePoint();
    /*0x12ec00c*/ TableData.TableData_Dungeontile GetTableData();
    /*0x12ec018*/ bool IsBlockTile();
    /*0x12ec028*/ bool IsTileKeep();
    /*0x12ebb60*/ void InitTile(int index, DungeonMinimap map, TableData.TableData_Dungeonmap data);
    /*0x12ec08c*/ void SetData();
    /*0x12ec208*/ void ChangeNormalTile();
    /*0x12ec054*/ void Clear();
    /*0x12eb948*/ void SetHide(bool isDeep);
    /*0x12eb914*/ void SetLight();
    /*0x12ec2d0*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
    /*0x12ec464*/ void PlayShadeChage(float time, AtlasImage image, UnityEngine.Color startColor, UnityEngine.Color endColor);
    /*0x12ec4a0*/ System.Collections.IEnumerator CoShadeChange(float time, AtlasImage image, UnityEngine.Color startColor, UnityEngine.Color endColor);

    class <CoShadeChange>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ AtlasImage image;
        /*0x30*/ UnityEngine.Color startColor;
        /*0x40*/ UnityEngine.Color endColor;
        /*0x50*/ float <t>5__2;
        /*0x54*/ float <speed>5__3;

        /*0x1095758*/ <CoShadeChange>d__21(int <>1__state);
        /*0x1095784*/ void System.IDisposable.Dispose();
        /*0x1095788*/ bool MoveNext();
        /*0x1095884*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109588c*/ void System.Collections.IEnumerator.Reset();
        /*0x10958cc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonMissionButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ DungeonMap m_dungeonMap;

    /*0x12ed5f0*/ DungeonMissionButton();
    /*0x12ec58c*/ void InitButton(DungeonMap dungeonMap);
    /*0x12dd468*/ void ShowOpenDesc();
    /*0x12ec594*/ void OnClick();
    /*0x12ecf8c*/ string GetDesc(string trigger, bool isFirstLine);
    /*0x12ed2a0*/ string GetDesc(string trigger, bool isFirstLine, int score, int goalScore);

    class <>c__DisplayClass2_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> datas;
        /*0x18*/ DungeonMissionButton <>4__this;
        /*0x20*/ int i;

        /*0x1095958*/ <>c__DisplayClass2_0();
    }

    class <>c__DisplayClass2_1
    {
        /*0x10*/ string desc;
        /*0x18*/ DungeonMissionButton.<> CS$<>8__locals1;

        /*0x1095960*/ <>c__DisplayClass2_1();
        /*0x1095968*/ void <ShowOpenDesc>b__0(System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response);
    }

    class <>c__DisplayClass2_2
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response;
        /*0x18*/ int j;
        /*0x20*/ System.Predicate<TableData.TableData_Dungeonreward> <>9__3;

        /*0x1096138*/ <>c__DisplayClass2_2();
        /*0x1096140*/ bool <ShowOpenDesc>b__3(TableData.TableData_Dungeonreward data);
    }

    class <>c
    {
        static /*0x0*/ DungeonMissionButton.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__2_1;
        static /*0x10*/ System.Action<bool> <>9__2_2;
        static /*0x18*/ System.Action<bool> <>9__3_2;
        static /*0x20*/ System.Action<bool> <>9__3_3;
        static /*0x28*/ System.Action<bool> <>9__3_5;
        static /*0x30*/ System.Action<bool> <>9__3_6;
        static /*0x38*/ System.Action<bool> <>9__3_0;

        static /*0x10958d4*/ <>c();
        /*0x1095934*/ <>c();
        /*0x109593c*/ void <ShowOpenDesc>b__2_1(bool action);
        /*0x1095940*/ void <ShowOpenDesc>b__2_2(bool action);
        /*0x1095944*/ void <OnClick>b__3_2(bool action);
        /*0x1095948*/ void <OnClick>b__3_3(bool action);
        /*0x109594c*/ void <OnClick>b__3_5(bool action);
        /*0x1095950*/ void <OnClick>b__3_6(bool action);
        /*0x1095954*/ void <OnClick>b__3_0(bool confirm);
    }

    class <>c__DisplayClass3_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Dungeonreward> datas;
        /*0x18*/ DungeonMissionButton <>4__this;
        /*0x20*/ int i;

        /*0x1096220*/ <>c__DisplayClass3_0();
    }

    class <>c__DisplayClass3_1
    {
        /*0x10*/ string desc;
        /*0x18*/ DungeonMissionButton.<> CS$<>8__locals1;

        /*0x1096228*/ <>c__DisplayClass3_1();
        /*0x1096230*/ void <OnClick>b__1(System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response);
    }

    class <>c__DisplayClass3_2
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SDungeonCondition> response;
        /*0x18*/ int j;
        /*0x20*/ System.Predicate<TableData.TableData_Dungeonreward> <>9__4;

        /*0x1096a00*/ <>c__DisplayClass3_2();
        /*0x1096a08*/ bool <OnClick>b__4(TableData.TableData_Dungeonreward data);
    }
}

class DungeonNaviArrow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.RectTransform m_arrow;
    /*0x20*/ UnityEngine.RectTransform m_limit;
    /*0x28*/ UnityEngine.Vector2Int m_targetPoint;
    /*0x30*/ DungeonMap m_dungeonMap;
    /*0x38*/ UnityEngine.Coroutine m_updateCoroutine;
    /*0x40*/ UnityEngine.Vector3 m_dir;
    /*0x4c*/ UnityEngine.Vector3 m_targetPosition;
    /*0x58*/ DungeonNaviArrow.TARGET_TYPE m_targetType;
    /*0x5c*/ UnityEngine.Vector2Int UNKOWN_POINT;
    /*0x64*/ float m_range;

    /*0x12eddf4*/ DungeonNaviArrow();
    /*0x12dc0a8*/ void InitArrow(DungeonMap dungeon);
    /*0x12dd0d4*/ void SetTarget(UnityEngine.Vector2Int targetPoint, DungeonNaviArrow.TARGET_TYPE targetType);
    /*0x12dd078*/ void CloseTarget();
    /*0x12ed5f8*/ void StopCoroutine();
    /*0x12ed62c*/ System.Collections.IEnumerator CoUpdate();
    /*0x12ed69c*/ void ComputeLimit();
    /*0x12ed8c4*/ void ComputeArrow();
    /*0x12edd5c*/ void ComputeArrowRotate();
    /*0x12edcbc*/ void HideArrow();
    /*0x12ed698*/ void ClearEvent();

    enum TARGET_TYPE
    {
        BOMB = 0,
    }

    class <CoUpdate>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonNaviArrow <>4__this;

        /*0x1096ae8*/ <CoUpdate>d__15(int <>1__state);
        /*0x1096b14*/ void System.IDisposable.Dispose();
        /*0x1096b18*/ bool MoveNext();
        /*0x1096b8c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096b94*/ void System.Collections.IEnumerator.Reset();
        /*0x1096bd4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonObject : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonAnimation m_objectSkel;
    /*0x20*/ DungeonMap m_dungeonMap;
    /*0x28*/ DungeonTileBase m_linkTile;
    /*0x30*/ System.Action m_outCallBack;
    /*0x38*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x3c*/ DefineDungeon.SHOWTYPE m_prevShowType;
    /*0x40*/ DefineDungeon.TILEVIEWTYPE m_viewType;

    /*0x12eed50*/ DungeonObject();
    /*0x12ede54*/ void InitObject(DungeonMap map, DungeonTileBase baseTile, DefineDungeon.SHOWTYPE showType, DefineDungeon.TILEVIEWTYPE viewType);
    /*0x12ee5ac*/ void ChangePropertyWall();
    /*0x12ee5b0*/ void ShowUseView();
    /*0x12ee040*/ void UpdateDungeonObjects(bool isFastShade);
    /*0x12ee2b8*/ void SetObjectSkin();
    /*0x12ee63c*/ void PlayObjectSkelAnim();
    /*0x12ee784*/ void OutAnim(System.Action callBack);
    /*0x12ee8d4*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0x12ee9a8*/ void OpenBox(System.Action callBack);
    /*0x12eeb28*/ void HandleAnimCompleteOpenBox(Spine.TrackEntry trackEntry);
    /*0x12eec4c*/ void HandleAnimCompleteOut(Spine.TrackEntry trackEntry);
    /*0x12eed40*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
}

class DungeonParticle : UnityEngine.MonoBehaviour
{
    /*0x18*/ ParticleBase m_trapParticle;
    /*0x20*/ ParticleBase m_freezeParticle;
    /*0x28*/ ParticleBase m_hammerParticle;
    /*0x30*/ System.Collections.Generic.Dictionary<DefineDungeon.TILETYPE, ParticleBase> m_poolDictionary;

    /*0x12ef4bc*/ DungeonParticle();
    /*0x12eed58*/ void AllReturn();
    /*0x12e9798*/ void ShowParticle(DungeonMap dungeon, DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12e9880*/ void AfterShowParticle(DungeonMap dungeon, DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12e9b28*/ void ShowBomb(DungeonMap dungeon, DefineDungeon.TILETYPE tileType, UnityEngine.Vector2Int point);
    /*0x12eef00*/ void GetParticle(DefineDungeon.TILETYPE tileType);
    /*0x12ef3ac*/ void ReturnParticle(DefineDungeon.TILETYPE tileType);
}

class DungeonPropertyWallPopup : GuiBase
{
    /*0x40*/ AtlasImage m_propertyIcon;
    /*0x48*/ LocalizeString m_infoText;
    /*0x50*/ HeroSlotSelect m_selectSlot;
    /*0x58*/ HeroSelectWindow m_selectWindow;
    /*0x60*/ UnityEngine.UI.Button m_confirmButton;
    /*0x68*/ PropertyType m_propertyType;
    /*0x70*/ System.Action<PTShare.Define.SHero> m_confirm;
    /*0x78*/ UnityEngine.Vector2Int m_tilePoint;

    /*0x12efbb0*/ DungeonPropertyWallPopup();
    /*0x12ef534*/ void OnCreate();
    /*0x12ef538*/ void OnDelete();
    /*0x12ef53c*/ void OnEnter();
    /*0x12ef540*/ void OnFinish();
    /*0x12ef544*/ void OnLeave();
    /*0x12ef548*/ void OnStart();
    /*0x12ef54c*/ void OnExit();
    /*0x12ef554*/ void OnExit_CallBack();
    /*0x12ef630*/ void InitPopup(UnityEngine.Vector2Int tilePoint, PropertyType propertyType, System.Action<PTShare.Define.SHero> onConfirm);
    /*0x12ef5cc*/ PTShare.Define.SHero GetCurrSHero();
    /*0x12ef8f4*/ void SetPropertyIcon(PropertyType propertyType);
    /*0x12ef9c0*/ void UpdateButton();
    /*0x12ef728*/ void HandleOnClickSlot(int dummy);
    /*0x12efa64*/ void HandleOnChangeHero(PTShare.Define.SHero sHero);
    /*0x12efb20*/ void OnClickCancel();
    /*0x12efb2c*/ void OnClickConfirm();
    /*0x12efbe0*/ bool <HandleOnClickSlot>b__20_0(ConditionHeroData data);
}

class DungeonRouteEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ string m_routeObjectName;
    /*0x20*/ string m_routeDestObjectName;
    /*0x28*/ System.Collections.Generic.List<DungeonRouteObject> m_routeObjectList;
    /*0x30*/ DungeonMap m_dungeonMap;

    /*0x12f0110*/ DungeonRouteEffect();
    /*0x12e73e0*/ void ReturnPool();
    /*0x12eff1c*/ void InitEffect(DungeonMap dungeonMap);
    /*0x12e9e78*/ void HideEffect(UnityEngine.Vector2Int point);
    /*0x12e8ad8*/ void ShowRoute(System.Collections.Generic.List<DefineDungeon.DungeonRouteNode> routeNodeList);
    /*0x12eff80*/ void GetPool(int count);
}

class DungeonRouteObject : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.SpriteRenderer m_spriteRenderer;
    /*0x20*/ UnityEngine.Vector2Int m_point;

    /*0x12f023c*/ DungeonRouteObject();
    /*0x12f00b4*/ void InitObject(int sortOrder, UnityEngine.Vector2Int point);
    /*0x12eff24*/ bool HideObject(UnityEngine.Vector2Int point);
    /*0x12f01c0*/ System.Collections.IEnumerator CoHide(float time);

    class <CoHide>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ DungeonRouteObject <>4__this;
        /*0x30*/ float <t>5__2;
        /*0x34*/ float <speed>5__3;
        /*0x38*/ UnityEngine.Color <color>5__4;

        /*0x1096bdc*/ <CoHide>d__4(int <>1__state);
        /*0x1096c08*/ void System.IDisposable.Dispose();
        /*0x1096c0c*/ bool MoveNext();
        /*0x1096d10*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096d18*/ void System.Collections.IEnumerator.Reset();
        /*0x1096d58*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonSetting : UnityEngine.ScriptableObject
{
    /*0x18*/ float tileMoveTime;
    /*0x1c*/ float tileShadeTime;
    /*0x20*/ float characterAnimScale;
    /*0x24*/ float popupWaitTime;
    /*0x28*/ UnityEngine.Vector2 cameraLimit;
    /*0x30*/ float zoomMin;
    /*0x34*/ float zoomMax;
    /*0x38*/ UnityEngine.Vector3 viewScale;
    /*0x44*/ UnityEngine.Vector3 exploreViewScale;
    /*0x50*/ float bgMoveSpeed;

    /*0x12f026c*/ DungeonSetting();
}

class DungeonStageEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string BANNER_KEY;
    /*0x18*/ AtlasImage m_bannerImage;
    /*0x20*/ LocalizeString m_titleText;
    /*0x28*/ UnityEngine.UI.Slider m_completeSlider;
    /*0x30*/ LocalizeString m_completeText;
    /*0x38*/ UnityEngine.GameObject m_lockObject;
    /*0x40*/ UnityEngine.GameObject m_slideObject;
    /*0x48*/ ParticleBase[] m_dungoenFireParticles;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_door;
    /*0x58*/ int m_dungeonID;
    /*0x5c*/ bool m_isBestProgress;
    /*0x5d*/ bool m_isLock;
    /*0x5e*/ bool m_isDummy;

    static /*0x12f1c58*/ DungeonStageEntity();
    /*0x12f1c50*/ DungeonStageEntity();
    /*0x12f04d8*/ void OnDisable();
    /*0x12f05c8*/ void InitDummy();
    /*0x12f09ac*/ void InitEntity(int dungeonID, bool isBestProgress);
    /*0x12f0b04*/ void Init(TableData.TableData_Dungeon dungeonData);
    /*0x12f0d24*/ void SetBannerImage(int dungeonID);
    /*0x12f0e44*/ void SetTitle(string key);
    /*0x12f0f84*/ void SetSlide(float percent);
    /*0x12f05fc*/ void SetLock(bool enable);
    /*0x12f10d4*/ System.Collections.IEnumerator CoDontShow(int dungeonID);
    /*0x12f1140*/ void HandleDoorUpdateComplete(Spine.TrackEntry trackEntry);
    /*0x12f08d8*/ void SetParticle(bool enable);
    /*0x12f1248*/ void OnClick();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ int dungeonID;

        /*0x1096dd0*/ <>c__DisplayClass15_0();
        /*0x1096dd8*/ bool <InitEntity>b__0(TableData.TableData_Dungeon data);
    }

    class <CoDontShow>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int dungeonID;

        /*0x1096dfc*/ <CoDontShow>d__21(int <>1__state);
        /*0x1096e28*/ void System.IDisposable.Dispose();
        /*0x1096e2c*/ bool MoveNext();
        /*0x1096ecc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096ed4*/ void System.Collections.IEnumerator.Reset();
        /*0x1096f14*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ DungeonStageEntity.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__24_0;
        static /*0x10*/ System.Action<bool> <>9__24_1;

        static /*0x1096d60*/ <>c();
        /*0x1096dc0*/ <>c();
        /*0x1096dc8*/ void <OnClick>b__24_0(bool confirm);
        /*0x1096dcc*/ void <OnClick>b__24_1(bool confirm);
    }
}

class DungeonStageInfoPopup : GuiBase
{
    /*0x40*/ DungeonStageEntity m_dungeonStageEntity;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_descText;
    /*0x58*/ LocalizeString m_coinLimitText;
    /*0x60*/ ScrollContent_StageReward m_scrollContent;
    /*0x68*/ UnityEngine.UI.ScrollRect m_descScrollRect;
    /*0x70*/ UnityEngine.GameObject m_travelButton;
    /*0x78*/ UnityEngine.GameObject m_stopButton;
    /*0x80*/ LocalizeString m_travelText;
    /*0x88*/ int m_dungeonID;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x98*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_rewardPointList;
    /*0xa0*/ bool m_showTravelButton;
    /*0xa8*/ System.Action m_exitCallback;

    /*0x14b280c*/ DungeonStageInfoPopup();
    /*0x14b1290*/ void OnCreate();
    /*0x14b1294*/ void OnDelete();
    /*0x14b1298*/ void OnEnter();
    /*0x14b129c*/ void OnExit();
    /*0x14b1408*/ void OnFinish();
    /*0x14b140c*/ void OnLeave();
    /*0x14b1410*/ void OnStart();
    /*0x14b1414*/ void InitPopup(int dungeonID, bool showTravelButton, System.Action exitCallback);
    /*0x14b15c4*/ void SetStageEntity();
    /*0x14b165c*/ void SetScrollContent();
    /*0x14b17a4*/ void SetTitle();
    /*0x14b18f0*/ void SetDesc();
    /*0x14b1c9c*/ void SetCoinLimit();
    /*0x14b1a60*/ void SetButton();
    /*0x14b1df8*/ TableData.TableData_Dungeon GetDungeonData();
    /*0x14b1ee4*/ System.Collections.IEnumerator CoSetScrollRect();
    /*0x14b14e8*/ void BindEvent();
    /*0x14b1334*/ void RemoveEvent();
    /*0x14b1f50*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0x14b20a0*/ void OnClickStopTravel();
    /*0x14b23b8*/ void OnClickTravel();
    /*0x14b28c4*/ bool <GetDungeonData>b__28_0(TableData.TableData_Dungeon data);
    /*0x14b28e8*/ void <OnClickStopTravel>b__33_0(bool confirm);
    /*0x14b29b4*/ void <OnClickStopTravel>b__33_1();
    /*0x14b2a58*/ void <OnClickTravel>b__34_0();
    /*0x14b2ad0*/ void <OnClickTravel>b__34_1(bool confirm);
    /*0x14b2ba4*/ void <OnClickTravel>b__34_3();
    /*0x14b2c1c*/ void <OnClickTravel>b__34_2();

    class <CoSetScrollRect>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonStageInfoPopup <>4__this;

        /*0x1096f1c*/ <CoSetScrollRect>d__29(int <>1__state);
        /*0x1096f48*/ void System.IDisposable.Dispose();
        /*0x1096f4c*/ bool MoveNext();
        /*0x1096fac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1096fb4*/ void System.Collections.IEnumerator.Reset();
        /*0x1096ff4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonStagePopup : GuiBase
{
    static int DUMMY_COUNT = 1;
    /*0x40*/ ScrollContent_DungeonStageEntity m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Dungeon> m_dungeonDataList;

    /*0x14b31ec*/ DungeonStagePopup();
    /*0x14b2c94*/ void OnCreate();
    /*0x14b2c98*/ void OnDelete();
    /*0x14b2c9c*/ void OnEnter();
    /*0x14b2ca0*/ void OnExit();
    /*0x14b2df8*/ void OnFinish();
    /*0x14b2dfc*/ void OnLeave();
    /*0x14b2e00*/ void OnStart();
    /*0x14b2e04*/ void InitPopup();
    /*0x14b2f4c*/ void UpdateScrollContent();
    /*0x14b2e70*/ void BindEvent();
    /*0x14b2d24*/ void RemoveEvent();
    /*0x14b308c*/ void HandleScrollContent(int index, DungeonStageEntity obj);
    /*0x14b3148*/ void OnClickHelp();
}

class DungeonStateEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ DungeonStateEntity.STATE_TYPE m_stateType;
    /*0x20*/ AtlasImage m_icon;
    /*0x28*/ LocalizeString m_value;

    /*0x14b3704*/ DungeonStateEntity();
    /*0x14b31f4*/ bool IsShow();
    /*0x14b32c0*/ void Init();
    /*0x14b32e8*/ void InitJail();
    /*0x14b33b4*/ void InitAtk();
    /*0x14b355c*/ void InitDef();

    enum STATE_TYPE
    {
        JAIL = 0,
        ATK = 1,
        DEF = 2,
        WALL = 3,
        NULL = 4,
    }
}

class DungeonStateWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<DungeonStateEntity> m_dungeonStateList;

    /*0x14b3ba0*/ DungeonStateWindow();
    /*0x14b3714*/ void OnDisable();
    /*0x14b3808*/ void InitWindow();
    /*0x14b395c*/ void BindEvent();
    /*0x14b3718*/ void RemoveEvent();
    /*0x14b3a54*/ void HandleUpdateWindow();
}

class DungeonTileBase : TileBase
{
    /*0x78*/ DungeonObject m_sortObjectBase;
    /*0x80*/ AtlasSprite m_tileImage;
    /*0x88*/ Spine.Unity.SkeletonAnimation m_objectSkel;
    /*0x90*/ DungeonMap m_dungeonMap;
    /*0x98*/ DefineDungeon.SHOWTYPE m_showType;
    /*0x9c*/ DefineDungeon.TILETYPE m_tileType;
    /*0xa0*/ DefineDungeon.TILEVIEWTYPE m_tileViewType;
    /*0xa4*/ int m_tileID;
    /*0xa8*/ UnityEngine.Vector2Int m_tilePoint;
    /*0xb0*/ bool m_isBrokenTime;

    /*0x14b6304*/ DungeonTileBase();
    /*0x14b40bc*/ DefineDungeon.TILETYPE GetTileType();
    /*0x14b40c4*/ DefineDungeon.TILEVIEWTYPE GetViewType();
    /*0x14b40cc*/ UnityEngine.Vector2Int GetTilePoint();
    /*0x14b40d4*/ int GetTileValue();
    /*0x14b417c*/ string[] GetTileValues(char split);
    /*0x14b421c*/ TableData.TableData_Dungeontile GetTableData();
    /*0x14b4228*/ string GetTileRepresentImage();
    /*0x14b435c*/ bool IsBlockTile();
    /*0x14b438c*/ bool IsTileKeep();
    /*0x14b43b8*/ void InitTile(int index, DungeonMap map, TableData.TableData_Dungeonmap data);
    /*0x14b4880*/ void SetTileOption(TableData.TableData_Dungeonmap mapData);
    /*0x14b46fc*/ void SetData();
    /*0x14b5190*/ void SetObjectPosition();
    /*0x14b5100*/ void SetTileImage();
    /*0x14b45e4*/ void Clear();
    /*0x14b4d24*/ void ChangeUsedTile();
    /*0x14b5450*/ void MoveOutTile(DungeonFieldCharacter character);
    /*0x14b5588*/ void UseTile(DungeonFieldCharacter character, UnityEngine.Vector2Int prevPoint, float waitTime, bool isFinish, System.Action callBack);
    /*0x14b5780*/ void EndTile();
    /*0x14b58bc*/ void EndTile(DungeonFieldCharacter character, System.Action callBack);
    /*0x14b5a74*/ void OpenConditionReward(System.Action callback);
    /*0x14b5698*/ void ShowUseView();
    /*0x14b4e5c*/ void UpdateDungeonObjects(bool isFastShade);
    /*0x14b5ca0*/ void UpdateFreezeCharacter();
    /*0x14b52d4*/ void SetObjectSkin();
    /*0x14b5ddc*/ void SetHide(bool isDeep);
    /*0x14b5ebc*/ void SetLight();
    /*0x14b5f34*/ void SetSuperLight();
    /*0x14b4b3c*/ void SetShowType(DefineDungeon.SHOWTYPE showType, bool isFastShade);
    /*0x14b5b58*/ void PlayObjectSkelAnim();
    /*0x14b5fdc*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0x14b5fa0*/ void PlayShadeChage(float time, AtlasSprite image, UnityEngine.Color startColor, UnityEngine.Color endColor);
    /*0x14b5508*/ System.Collections.IEnumerator CoBrokenTile(float waitTime, float time);
    /*0x14b6164*/ System.Collections.IEnumerator CoShadeFillTile(float time, UnityEngine.UI.Image image, float start, float end);
    /*0x14b60b0*/ System.Collections.IEnumerator CoShadeChange(float time, AtlasSprite image, UnityEngine.Color startColor, UnityEngine.Color endColor);
    /*0x14b5704*/ System.Collections.IEnumerator CoOnPressTime(float time, System.Action callBack);
    /*0x14b61f4*/ System.Collections.IEnumerator CoLateCallBack(float time, System.Action callBack);
    /*0x14b6270*/ void OnClickTile();
    /*0x14b633c*/ void <EndTile>b__28_0();

    class <>c__DisplayClass27_0
    {
        /*0x10*/ DungeonFieldCharacter character;
        /*0x18*/ DungeonTileBase <>4__this;
        /*0x20*/ UnityEngine.Vector2Int prevPoint;
        /*0x28*/ bool isFinish;
        /*0x30*/ System.Action callBack;
        /*0x38*/ System.Action <>9__1;

        /*0x1096ffc*/ <>c__DisplayClass27_0();
        /*0x1097004*/ void <UseTile>b__0();
        /*0x10970d8*/ void <UseTile>b__1();
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ System.Action callBack;

        /*0x10970ec*/ <>c__DisplayClass29_0();
        /*0x10970f4*/ void <EndTile>b__0();
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ DungeonTileBase <>4__this;
        /*0x18*/ System.Action callback;

        /*0x1097108*/ <>c__DisplayClass30_0();
        /*0x1097110*/ void <OpenConditionReward>b__0();
    }

    class <CoBrokenTile>d__42 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonTileBase <>4__this;
        /*0x28*/ float waitTime;
        /*0x2c*/ float time;
        /*0x30*/ UnityEngine.Vector3 <original>5__2;
        /*0x3c*/ int <i>5__3;

        /*0x109716c*/ <CoBrokenTile>d__42(int <>1__state);
        /*0x1097198*/ void System.IDisposable.Dispose();
        /*0x109719c*/ bool MoveNext();
        /*0x10975a4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10975ac*/ void System.Collections.IEnumerator.Reset();
        /*0x10975ec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShadeFillTile>d__43 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ UnityEngine.UI.Image image;
        /*0x30*/ float start;
        /*0x34*/ float end;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;

        /*0x10979ec*/ <CoShadeFillTile>d__43(int <>1__state);
        /*0x1097a18*/ void System.IDisposable.Dispose();
        /*0x1097a1c*/ bool MoveNext();
        /*0x1097af4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1097afc*/ void System.Collections.IEnumerator.Reset();
        /*0x1097b3c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShadeChange>d__44 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ AtlasSprite image;
        /*0x30*/ UnityEngine.Color startColor;
        /*0x40*/ UnityEngine.Color endColor;
        /*0x50*/ float <t>5__2;
        /*0x54*/ float <speed>5__3;

        /*0x1097870*/ <CoShadeChange>d__44(int <>1__state);
        /*0x109789c*/ void System.IDisposable.Dispose();
        /*0x10978a0*/ bool MoveNext();
        /*0x109799c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10979a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10979e4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoOnPressTime>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ System.Action callBack;

        /*0x1097720*/ <CoOnPressTime>d__45(int <>1__state);
        /*0x109774c*/ void System.IDisposable.Dispose();
        /*0x1097750*/ bool MoveNext();
        /*0x1097820*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1097828*/ void System.Collections.IEnumerator.Reset();
        /*0x1097868*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateCallBack>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ System.Action callBack;

        /*0x10975f4*/ <CoLateCallBack>d__46(int <>1__state);
        /*0x1097620*/ void System.IDisposable.Dispose();
        /*0x1097624*/ bool MoveNext();
        /*0x10976d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10976d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1097718*/ object System.Collections.IEnumerator.get_Current();
    }
}

class DungeonView : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.SpriteRenderer m_viewSprite;
    /*0x20*/ UnityEngine.SpriteRenderer[] m_viewAlphaTargetList;
    /*0x28*/ UnityEngine.Color m_viewColor;
    /*0x38*/ UnityEngine.Color m_secondViewColor;
    /*0x48*/ UnityEngine.Color m_exploreViewColor;
    /*0x58*/ UnityEngine.Color m_exploreSecondViewColor;
    /*0x68*/ DungeonMap m_dungeonMap;

    /*0x14b6938*/ DungeonView();
    /*0x14b66a4*/ void InitView(DungeonMap dungeonMap);
    /*0x14b66ac*/ void SetView(bool isExplore);
    /*0x14b6794*/ void NormalView();
    /*0x14b66b8*/ void ExploreView();
    /*0x14b6870*/ System.Collections.IEnumerator CoChangeView(UnityEngine.Vector3 destScale, UnityEngine.Color destColor, UnityEngine.SpriteRenderer destRenderer, float time);

    class <CoChangeView>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DungeonView <>4__this;
        /*0x28*/ UnityEngine.SpriteRenderer destRenderer;
        /*0x30*/ float time;
        /*0x34*/ UnityEngine.Vector3 destScale;
        /*0x40*/ UnityEngine.Color destColor;
        /*0x50*/ UnityEngine.Vector3 <startScale>5__2;
        /*0x5c*/ UnityEngine.Color <startColor>5__3;
        /*0x6c*/ float <t>5__4;
        /*0x70*/ float <speed>5__5;

        /*0x1097b44*/ <CoChangeView>d__11(int <>1__state);
        /*0x1097b70*/ void System.IDisposable.Dispose();
        /*0x1097b74*/ bool MoveNext();
        /*0x1097d5c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1097d64*/ void System.Collections.IEnumerator.Reset();
        /*0x1097da4*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum ARROW
{
    THIS = 0,
    LEFT = 1,
    RIGHT = 2,
    TOP = 3,
    BOTTOM = 4,
}

class MapBase<M, T> : MiniMapBase<M, T>
{
    static /*0x0*/ int ZOOM_FINGER_COUNT;
    /*0x0*/ int defaultSortOrder;
    /*0x0*/ UnityEngine.Vector2 m_tileLeft;
    /*0x0*/ UnityEngine.Vector2 m_tileRight;
    /*0x0*/ UnityEngine.Vector2 m_tileTop;
    /*0x0*/ UnityEngine.Vector2 m_tileBot;
    /*0x0*/ bool m_doublePeekCheckXFlip;
    /*0x0*/ UnityEngine.Vector2 m_filpLeft;
    /*0x0*/ UnityEngine.Vector2 m_filpRight;
    /*0x0*/ UnityEngine.Vector2 m_filpTop;
    /*0x0*/ UnityEngine.Vector2 m_filpBot;
    /*0x0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<T>> m_tileGroupMap;
    /*0x0*/ System.Collections.Generic.List<UnityEngine.GameObject> m_returnObjectList;
    /*0x0*/ float dragSpeed;

    static MapBase();
    MapBase();
    UnityEngine.Vector2Int GetPointByArrow(UnityEngine.Vector2Int point, ARROW arrow);
    ARROW GetDir(UnityEngine.Vector2Int start, UnityEngine.Vector2Int dest);
    float GetZoomValue();
    int GetSortOrderLayer(UnityEngine.Vector2Int point, int weight);
    UnityEngine.Vector3 GetTouchPosition(UnityEngine.Vector3 touchPosition, UnityEngine.Camera camera);
    bool ExistTile(UnityEngine.Vector2Int point);
    T GetTile(UnityEngine.Vector2Int point);
    void DragMap(UnityEngine.Vector3 dir);
    void FixedCamera();
    void InitMap(int id);
    void ExitMap();
    void SetComputeData();
    T AddNewTile(M data);
    void DestroyTiles();
    T PickTile(UnityEngine.Vector3 pickPosition);
    void OnDrawGizmosSelected();
    void ResizeMap();
    void BindEvent();
    void RemoveEvent();
    void Update();
    void UpdateZoom();
    System.Collections.IEnumerator CoScrollRectModeChange();

    class <>c<M, T>
    {
        static /*0x0*/ MapBase.<>c<M, T> <>9;
        static /*0x0*/ System.Comparison<T> <>9__30_0;

        static <>c();
        <>c();
        int <ResizeMap>b__30_0(T lhs, T rhs);
    }

    class <CoScrollRectModeChange>d__35<M, T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;

        <CoScrollRectModeChange>d__35(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class MiniMapBase<M, T> : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int LINE_COUNT;
    /*0x0*/ UnityEngine.GameObject m_camera;
    /*0x0*/ UnityEngine.GameObject m_layerParent;
    /*0x0*/ UnityEngine.GameObject m_scaleSupport;
    /*0x0*/ UnityEngine.Vector3 m_interval;
    /*0x0*/ T m_baseTilePrefab;
    /*0x0*/ UnityEngine.Vector2 m_margin;
    /*0x0*/ System.Collections.Generic.List<UnityEngine.Vector2Int> m_spreadCloseList;
    /*0x0*/ UnityEngine.GameObject m_tileLayer;
    /*0x0*/ System.Collections.Generic.List<T> m_tileList;
    /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, T> m_tileMap;
    /*0x0*/ float m_intervalSqrMagnitude;
    /*0x0*/ float m_startX;
    /*0x0*/ UnityEngine.Vector3 m_halfInterval;
    /*0x0*/ UnityEngine.Rect m_minmax;
    /*0x0*/ float m_zoomValue;

    static MiniMapBase();
    MiniMapBase();
    System.Collections.Generic.List<T> GetTileList();
    void OnDisable();
    UnityEngine.Vector3 GetCameraPosition();
    void SetCameraPosition(UnityEngine.Vector2Int point);
    void SetCameraPosition(UnityEngine.Vector3 position, UnityEngine.Space space);
    void InitMap(int id);
    void ExitMap();
    void CreateMap(System.Collections.Generic.List<M> mapDataList);
    void SetComputeData();
    T AddNewTile(M data);
    void DestroyTiles();
    void StartSpreadTile(UnityEngine.Vector2Int target, int activePower, int power, string spreadType);
    void SpreadTile(UnityEngine.Vector2Int target, int startPower, int power, int spreadMinPower, string spreadType);
    void Spread(UnityEngine.Vector2Int target, int startPower, int power, string spreadType);
    UnityEngine.Vector3 GetTileLocalPositionToCamera(UnityEngine.Vector2Int point);
    UnityEngine.Vector3 GetTileWorldPositionToCamera(UnityEngine.Vector2Int point);
    UnityEngine.Vector3 GetTileLocalPosition(UnityEngine.Vector2Int point);
    UnityEngine.Vector3 GetTileWorldPosition(UnityEngine.Vector2Int point);
    void UpdateMinMaxWindowSize(UnityEngine.Vector3 checker);
    void UpdateZoom();
    void ResizeMap();
    void BindEvent();
    void RemoveEvent();
    UnityEngine.Vector3 GetPosition(M data);
    UnityEngine.Vector3 GetPosition(UnityEngine.Vector2Int point);
    int GetTileID(M data);
    int GetGroup(M data);
    UnityEngine.Vector2Int GetPoint(M data);
    string GetParameters(M data);
    void InitTile(int index, M data, T tileBasePrefab);
    float GetZoomMin();
    float GetZoomMax();
    System.Collections.IEnumerator CoLateCallBack(System.Action callBack);

    class <CoLateCallBack>d__48<M, T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ System.Action callBack;

        <CoLateCallBack>d__48(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class ScrollContent_DungeonStageEntity : ScrollContent<DungeonStageEntity>
{
    /*0xe1919c*/ ScrollContent_DungeonStageEntity();
}

class EnumParserManager : Singleton.Component.SingletonComponent<EnumParserManager>
{
    /*0x28*/ System.Collections.Generic.Dictionary<string, PTShare.Define.EquipParts> m_equipPartsDictionary;
    /*0x30*/ System.Collections.Generic.Dictionary<string, EquipSubType> m_equipSubDictionary;

    /*0x14b9f5c*/ EnumParserManager();
    /*0x14b9d58*/ PTShare.Define.EquipParts FindEquipParts(string key, PTShare.Define.EquipParts defaultEnum);
    /*0x14b9e00*/ EquipSubType FindEquipSubType(string key, EquipSubType defaultEnum);
    /*0x14b9ea8*/ void AwakeInstance();
    /*0x14b9f50*/ bool InitInstance();
    /*0x14b9f58*/ void ReleaseInstance();
    /*0x14b9eac*/ void InitDictionary();
}

struct HeroEquipSet
{
    /*0x10*/ PTShare.Define.SHero Hero;
    /*0x18*/ PTShare.Define.SEquip Equip;

    /*0xa85430*/ HeroEquipSet(PTShare.Define.SHero hero, PTShare.Define.SEquip equip);
}

class EquipManager : Singleton.Data.SingletonData<EquipManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SEquip> m_liEquipList;
    /*0x28*/ PTShare.Define.SHero _CurSHero;
    /*0x30*/ PTShare.Define.SEquip _CurSEquip;
    /*0x38*/ int nArrIndex;
    /*0x3c*/ int nStartCount;
    /*0x40*/ int nEndCount;

    /*0x14bf6c4*/ EquipManager();
    /*0x14be314*/ bool InitInstance();
    /*0x14be31c*/ void ReleaseInstance();
    /*0x14be370*/ string get_UserToken();
    /*0x14be3f0*/ void Send_ResetFactionBonus(System.Action<int> _callback, int _equipid);
    /*0x14be534*/ void Send_ConfirmFactionBonus(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback, int _equipid);
    /*0x14be678*/ void Send_ReinforceEquip(System.Action<PTShare.Define.SEquip> _callback, int _equipid, System.Collections.Generic.List<int> _materialItemID, System.Collections.Generic.List<int> _materialEquipID);
    /*0x14bea30*/ void Send_PromoteEquip(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback, int _equipid);
    /*0x14beb84*/ void SetEquipList(System.Collections.Generic.List<PTShare.Define.SEquip> _liEquip);
    /*0x14bec84*/ System.Collections.Generic.List<PTShare.Define.SEquip> GetEquipList();
    /*0x14bec8c*/ PTShare.Define.SEquip GetEquipId(int _equipid);
    /*0x14badf8*/ System.Collections.Generic.List<PTShare.Define.SEquip> FindEquipListToType(PTShare.Define.EquipParts _parts, PTShare.Define.EquipmentType _type);
    /*0x14bed7c*/ void IncreaseEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> _equip);
    /*0x14bedfc*/ void IncreaseEquipment(PTShare.Define.SEquip _equip);
    /*0x14bee60*/ void DecreaseEquipment(int _equipid);
    /*0x14befe0*/ void DecreaseEquipment(PTShare.Define.SEquip _equipid);
    /*0x14bf160*/ void DecreaseEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> _equip);
    /*0x14bf360*/ void EqualChangeEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> _beforeEquip, System.Collections.Generic.List<PTShare.Define.SEquip> _afterEquip);
    /*0x14bf068*/ int GetEquipIndex(PTShare.Define.SEquip _item);
    /*0x14beee8*/ int GetEquipIndex(int _equipid);
    /*0x14bf38c*/ void IncreaseEquipmentToHero(PTShare.Define.SHero _hero, int _equipid);
    /*0x14baf0c*/ System.Collections.Generic.List<HeroEquipSet> FindHeroEquipment(int _ignoreHeroid, PTShare.Define.EquipParts _parts, PTShare.Define.EquipmentType _equipType);
    /*0x14bf4dc*/ PTShare.Define.SHero FindHeroToEquipID(int _equipid);
    /*0x14bec00*/ void SortEquip();
    /*0x14bf6a0*/ TableData.TableData_Equipment FindNextAdvanceEquipmentTableData(TableData.TableData_Equipment _equip);

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Action<int> _callback;

        /*0x10983cc*/ <>c__DisplayClass10_0();
        /*0x10983d4*/ void <Send_ResetFactionBonus>b__0(ServerProtocol.ResEquipResetFactionBonus response);
    }

    class <>c
    {
        static /*0x0*/ EquipManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__10_1;
        static /*0x10*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__12_0;
        static /*0x18*/ System.Func<int, string> <>9__12_1;
        static /*0x20*/ System.Converter<PTShare.Define.SEquip, int> <>9__22_0;

        static /*0x1098238*/ <>c();
        /*0x1098298*/ <>c();
        /*0x10982a0*/ void <Send_ResetFactionBonus>b__10_1(PTShare.Define.SItem item);
        /*0x1098328*/ System.Collections.Generic.IEnumerable<byte> <Send_ReinforceEquip>b__12_0(int s);
        /*0x109838c*/ string <Send_ReinforceEquip>b__12_1(int s);
        /*0x10983b4*/ int <DecreaseEquipment>b__22_0(PTShare.Define.SEquip c);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ EquipManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__1;

        /*0x1098544*/ <>c__DisplayClass11_0();
        /*0x109854c*/ void <Send_ConfirmFactionBonus>b__0(ServerProtocol.ResEquipConfirmFactionBonus response);
        /*0x10987a8*/ bool <Send_ConfirmFactionBonus>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ EquipManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SEquip> _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__3;

        /*0x10987cc*/ <>c__DisplayClass12_0();
        /*0x10987d4*/ void <Send_ReinforceEquip>b__2(ServerProtocol.ResEquipReinforce response);
        /*0x1098ba4*/ bool <Send_ReinforceEquip>b__3(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ EquipManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__1;

        /*0x1098bc8*/ <>c__DisplayClass13_0();
        /*0x1098bd0*/ void <Send_PromoteEquip>b__0(ServerProtocol.ResEquipPromote response);
        /*0x1098f14*/ bool <Send_PromoteEquip>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int _equipid;

        /*0x1098f38*/ <>c__DisplayClass16_0();
        /*0x1098f40*/ bool <GetEquipId>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.EquipParts _parts;
        /*0x14*/ PTShare.Define.EquipmentType _type;

        /*0x1098f64*/ <>c__DisplayClass17_0();
        /*0x1098f6c*/ bool <FindEquipListToType>b__0(PTShare.Define.SEquip item);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ System.Collections.Generic.List<int> decIDs;

        /*0x10990b0*/ <>c__DisplayClass22_0();
        /*0x10990b8*/ bool <DecreaseEquipment>b__1(PTShare.Define.SEquip w);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ PTShare.Define.SEquip _item;

        /*0x109912c*/ <>c__DisplayClass24_0();
        /*0x1099134*/ bool <GetEquipIndex>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ int _equipid;

        /*0x1099164*/ <>c__DisplayClass25_0();
        /*0x109916c*/ bool <GetEquipIndex>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ int _equipid;

        /*0x1099190*/ <>c__DisplayClass26_0();
        /*0x1099198*/ bool <IncreaseEquipmentToHero>b__0(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ PTShare.Define.EquipParts _parts;
        /*0x14*/ PTShare.Define.EquipmentType _equipType;
        /*0x18*/ int _ignoreHeroid;
        /*0x20*/ System.Predicate<PTShare.Define.SEquip> <>9__2;

        /*0x10991bc*/ <>c__DisplayClass27_0();
        /*0x10991c4*/ HeroEquipSet <FindHeroEquipment>b__0(PTShare.Define.SHero x);
        /*0x10992c4*/ bool <FindHeroEquipment>b__2(PTShare.Define.SEquip y);
        /*0x1099408*/ bool <FindHeroEquipment>b__1(HeroEquipSet x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ int _equipid;

        /*0x1099438*/ <>c__DisplayClass28_0();
        /*0x1099440*/ bool <FindHeroToEquipID>b__0(PTShare.Define.SHero item);
        /*0x1099518*/ bool <FindHeroToEquipID>b__1(PTShare.Define.SEquip x);
    }
}

class EquipComparer_Sort : System.Collections.Generic.IComparer<PTShare.Define.SEquip>
{
    /*0x10*/ TableData.TableData_Equipment tableLeft;
    /*0x18*/ TableData.TableData_Equipment tableRight;
    /*0x20*/ EquipSubType _subTypeLeft;
    /*0x24*/ EquipSubType _subTypeRight;
    /*0x28*/ PTShare.Define.EquipParts _partsTypeLeft;
    /*0x2c*/ PTShare.Define.EquipParts _partsTypeRight;

    /*0x14bb85c*/ EquipComparer_Sort();
    /*0x14bb6e0*/ int Compare(PTShare.Define.SEquip left, PTShare.Define.SEquip right);
}

class AttendanceContinueEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_boxIcon;
    /*0x20*/ LocalizeString m_dayText;
    /*0x28*/ UnityEngine.GameObject m_viewRewardBackground;
    /*0x30*/ UnityEngine.GameObject m_viewRewardParent;
    /*0x38*/ Spine.Unity.SkeletonGraphic m_treasureBoxSkel;
    /*0x40*/ TableData.TableData_Eventattendance m_attendanceData;
    /*0x48*/ TableData.TableData_Event m_eventData;
    /*0x50*/ bool m_isReceiveReward;

    /*0xf7d3dc*/ AttendanceContinueEntity();
    /*0xf7c964*/ void OnDisable();
    /*0xf7c974*/ void InitEntity(TableData.TableData_Event eventData, TableData.TableData_Eventattendance attendanceData);
    /*0xf7cc10*/ void SetBoxIcon();
    /*0xf7cd0c*/ void SetBoxSkel();
    /*0xf7cedc*/ void SetTreasureBox(string animName, bool loop);
    /*0xf7c9b4*/ void SetData();
    /*0xf7ca28*/ void SetDay();
    /*0xf7cf64*/ bool IsOpenedDay();
    /*0xf7ce58*/ bool HaveBeenOpend();
    /*0xf7cfe8*/ void OnClickReward();
    /*0xf7d384*/ void OnClickHide();
    /*0xf7d0f4*/ void ViewReward();
    /*0xf7c96c*/ void HideReward();
    /*0xf7d38c*/ void SetActiveReward(bool _enable);
    /*0xf7d3e4*/ void <OnClickReward>b__17_0();
}

class AttendanceEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_rewardSlot;
    /*0x20*/ UnityEngine.GameObject m_checkObject;
    /*0x28*/ UnityEngine.GameObject m_checkIcon;
    /*0x30*/ LocalizeString m_dayText;
    /*0x38*/ UnityEngine.GameObject m_rewardBtn;
    /*0x40*/ AtlasImage m_effectImage;
    /*0x48*/ AtlasImage m_checkRewardNotifyImage;
    /*0x50*/ UnityEngine.GameObject m_reddot;
    /*0x58*/ TableData.TableData_Eventattendance m_attendanceData;
    /*0x60*/ TableData.TableData_Event m_eventData;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x70*/ bool m_isReceiveReward;

    /*0xf7e0f8*/ AttendanceEntity();
    /*0xf7d438*/ void InitEntity(TableData.TableData_Event eventData, TableData.TableData_Eventattendance attendanceData);
    /*0xf7d448*/ void UpdateEntitiy();
    /*0xf7d49c*/ void SetData();
    /*0xf7d510*/ void SetReward();
    /*0xf7d6b8*/ void SetRewardButton();
    /*0xf7d74c*/ void SetRewardEffect();
    /*0xf7d7f4*/ void SetReddot();
    /*0xf7d888*/ void SetCheckIcon();
    /*0xf7dac8*/ void SetDay();
    /*0xf7dcb0*/ void SetRewardCheck();
    /*0xf7ddac*/ void OnClickReward();
    /*0xf7df5c*/ System.Collections.IEnumerator CoShowReward(PTShare.Define.SAttendReward attendRewardPacket);
    /*0xf7dfd4*/ void DoRewardEffect();
    /*0xf7dd40*/ System.Collections.IEnumerator CoRewardEffectLoop();
    /*0xf7e100*/ void <CoShowReward>b__23_0();

    class <CoShowReward>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AttendanceEntity <>4__this;
        /*0x28*/ PTShare.Define.SAttendReward attendRewardPacket;

        /*0xd9ec44*/ <CoShowReward>d__23(int <>1__state);
        /*0xd9ec70*/ void System.IDisposable.Dispose();
        /*0xd9ec74*/ bool MoveNext();
        /*0xd9edb0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9edb8*/ void System.Collections.IEnumerator.Reset();
        /*0xd9edf8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRewardEffectLoop>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ AttendanceEntity <>4__this;

        /*0xd9ea18*/ <CoRewardEffectLoop>d__25(int <>1__state);
        /*0xd9ea44*/ void System.IDisposable.Dispose();
        /*0xd9ea48*/ bool MoveNext();
        /*0xd9ebf4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9ebfc*/ void System.Collections.IEnumerator.Reset();
        /*0xd9ec3c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AttendanceMonthlyPopup : AttendancePopupBase
{
    static /*0x0*/ float CONTINUE_LOCAL_Y;
    /*0x80*/ LocalizeString m_continueDayText;
    /*0x88*/ ScrollContent_AttendanceEntity m_scrollContent;
    /*0x90*/ AttendanceContinueEntity m_attendanceConinueEntityPrefab;
    /*0x98*/ UnityEngine.RectTransform m_continueParent;
    /*0xa0*/ UnityEngine.UI.Slider m_slider;
    /*0xa8*/ System.Collections.Generic.List<AttendanceContinueEntity> m_continueEntityList;

    static /*0xf7ef08*/ AttendanceMonthlyPopup();
    /*0xf7ee1c*/ AttendanceMonthlyPopup();
    /*0xf7e108*/ void OnEnter();
    /*0xf7e118*/ void OnLeave();
    /*0xf7e128*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xf7e1e0*/ void SetAttendanceEntity();
    /*0xf7e31c*/ void SetContinueEntity();
    /*0xf7e73c*/ void SetContinueSlider();
    /*0xf7ead8*/ void SetSliderValue(float percent);
    /*0xf7ea40*/ void SetCurrencyContinueDay();
    /*0xf7eb84*/ void BindEvent();
    /*0xf7ec7c*/ void RemoveEvent();
    /*0xf7ed54*/ void OnClickHelp();
    /*0xf7ed58*/ void HandleScrollContent(int index, AttendanceEntity obj);
}

class AttendancePopup7Day : AttendancePopupBase
{
    /*0x80*/ AttendanceEntity[] m_attendanceEntityArray;

    /*0xf7f3c4*/ AttendancePopup7Day();
    /*0xf7ef58*/ void OnEnter();
    /*0xf7ef68*/ void OnLeave();
    /*0xf7ef78*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xf7efd4*/ void SetAttendanceEntity(AttendanceEntity[] entityArray, PTShare.Define.EventCheckType eventCheckType);
    /*0xf7f1b4*/ void UpdateLeftTime();
}

class AttendancePopupBase : EventPopupBase
{
    /*0x78*/ System.Collections.Generic.Dictionary<PTShare.Define.EventCheckType, System.Collections.Generic.List<TableData.TableData_Eventattendance>> m_dataDictionary;

    /*0xf7ee90*/ AttendancePopupBase();
    /*0xf7f3c8*/ void OnCreate();
    /*0xf7f3cc*/ void OnDelete();
    /*0xf7f3d0*/ void OnEnter();
    /*0xf7f3e0*/ void OnFinish();
    /*0xf7f3e4*/ void OnLeave();
    /*0xf7f3f4*/ void OnStart();
    /*0xf7f3f8*/ void OnExit();
    /*0xf7e1ac*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xf7f4cc*/ void SetAttendanceData(PTShare.Define.EventCheckType checkType);
    /*0xf7ec6c*/ void BindEvent();
    /*0xf7ed50*/ void RemoveEvent();
    /*0xf7f808*/ void <OnExit>b__7_0();
}

class BattlePassEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string[] REWARD_ACTIVE_BG;
    /*0x18*/ AtlasImage m_battlePassBG;
    /*0x20*/ UnityEngine.UI.Image m_battlePassActiveBG;
    /*0x28*/ ItemTableRewardSlot[] m_freeRewardSlotArray;
    /*0x30*/ ItemTableRewardSlot[] m_premiumRewardSlotArray;
    /*0x38*/ AtlasImage[] m_freeRewardEffects;
    /*0x40*/ AtlasImage[] m_premiumRewardEffects;
    /*0x48*/ UnityEngine.GameObject[] m_freeSoldOutObjects;
    /*0x50*/ UnityEngine.GameObject[] m_premiumSoldOutObjects;
    /*0x58*/ UnityEngine.GameObject[] m_premiumLockObjects;
    /*0x60*/ UnityEngine.GameObject m_rewardBtn;
    /*0x68*/ UnityEngine.Material m_grayScaleMaterial;
    /*0x70*/ TableData.TableData_Eventpassreward m_battlePassData;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_freeRewardList;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_premiumRewardList;
    /*0x88*/ PTShare.Define.REWARD_STATE m_rewardState;
    /*0x8c*/ bool m_isUnlockPoint;
    /*0x8d*/ bool m_isUnlockPremium;

    static /*0xe3a394*/ BattlePassEntity();
    /*0xe3a384*/ BattlePassEntity();
    /*0xe393e0*/ void OnEnable();
    /*0xe393f0*/ void OnDisable();
    /*0xe39400*/ void InitBattlePass(TableData.TableData_Eventpassreward battlePassData);
    /*0xe39434*/ void UpdateUI();
    /*0xe394c4*/ void SetData();
    /*0xe39edc*/ void SetBGColor();
    /*0xe39d68*/ void SetLock();
    /*0xe39dfc*/ void SetRewardBtn();
    /*0xe39988*/ void UpdateSoldOutObject();
    /*0xe3a1dc*/ void SetItemSlotMaterial(UnityEngine.GameObject parentObject, UnityEngine.Material material);
    /*0xe3959c*/ void SetFreeScrollContent();
    /*0xe397a0*/ void SetPremiumScrollContent();
    /*0xe3a15c*/ System.Collections.IEnumerator CoRewardEffectLoop(bool isFree);
    /*0xe393e8*/ void BindEvent();
    /*0xe393f8*/ void RemoveEvent();
    /*0xe3a2c4*/ void OnClickReward();
    /*0xe3a4cc*/ void <OnClickReward>b__33_0();

    class <CoRewardEffectLoop>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool isFree;
        /*0x28*/ BattlePassEntity <>4__this;
        /*0x30*/ AtlasImage[] <targetImages>5__2;

        /*0xda124c*/ <CoRewardEffectLoop>d__30(int <>1__state);
        /*0xda1278*/ void System.IDisposable.Dispose();
        /*0xda127c*/ bool MoveNext();
        /*0xda15d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda15d8*/ void System.Collections.IEnumerator.Reset();
        /*0xda1618*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BattlePassLineEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string[] BATTLEPASS_LINE_IMAGE_NAMES;
    static /*0x8*/ string[] ROYALPASS_LINE_IMAGE_NAMES;
    static /*0x10*/ string[] BATTLEPASS_BUTTON_SLOT;
    static /*0x18*/ string[] ROYALPASS_BUTTON_SLOT;
    /*0x18*/ AtlasImage m_activeButtonImage;
    /*0x20*/ AtlasImage m_disableButtonImage;
    /*0x28*/ AtlasImage m_nextLineImage;
    /*0x30*/ LocalizeString[] m_passNumberTexts;

    static /*0xe3a808*/ BattlePassLineEntity();
    /*0xe3a800*/ BattlePassLineEntity();
    /*0xe3a4d0*/ void InitEntity(int passNumber, bool isActivePass, bool isActiveNext, bool isLast, DefineEvent.BATTLEPASS passType);
    /*0xe3a51c*/ void SetButtonUI(int passNumber, bool isActivePass, DefineEvent.BATTLEPASS passType);
    /*0xe3a6b0*/ void SetLineUI(bool isActiveNext, bool isLast, DefineEvent.BATTLEPASS passType);
}

class BattlePassPopup : EventPopupBase
{
    /*0x78*/ ScrollContent_BattlePassEntity m_scrollContent;
    /*0x80*/ UnityEngine.GameObject m_battlePassLineParent;
    /*0x88*/ BattlePassLineEntity m_battlePassLineEntityPrefab;
    /*0x90*/ LocalizeString m_pointText;
    /*0x98*/ LocalizeString m_rankText;
    /*0xa0*/ UnityEngine.UI.Slider m_slider;
    /*0xa8*/ CurrencyTopWindow m_currencyWindow;
    /*0xb0*/ AtlasImage m_battlePassButton;
    /*0xb8*/ UnityEngine.UI.Outline m_battlePassOutline;
    /*0xc0*/ System.Collections.Generic.List<BattlePassLineEntity> m_battlePassLineList;
    /*0xc8*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> m_battlePassRewardDataList;
    /*0xd0*/ PTShare.Define.SPass m_sPass;
    /*0xd8*/ int m_currentPassLevelIndex;

    /*0xe3c9f4*/ BattlePassPopup();
    /*0xe3aaf0*/ void OnCreate();
    /*0xe3aaf4*/ void OnDelete();
    /*0xe3aaf8*/ void OnEnter();
    /*0xe3abd8*/ void OnFinish();
    /*0xe3abdc*/ void OnLeave();
    /*0xe3acb4*/ void OnStart();
    /*0xe3acb8*/ void OnExit();
    /*0xe3ad8c*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0xe3bb80*/ void UpdatePopup();
    /*0xe3bba4*/ void UpdateLeftTime();
    /*0xe3bf68*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0xe3af50*/ void SetBattlePassData();
    /*0xe3b12c*/ void SetScrollContentBattlePass();
    /*0xe3b558*/ void SetBattlePassLine();
    /*0xe3b218*/ void SetPassPoint();
    /*0xe3b874*/ void SetRank();
    /*0xe3ba10*/ void Setbutton();
    /*0xe3aafc*/ void BindEvent();
    /*0xe3abe0*/ void RemoveEvent();
    /*0xe3bfd4*/ void HandleScrollContent(int index, BattlePassEntity obj);
    /*0xe3c064*/ void OnClickPremiumActive();
    /*0xe3caac*/ void <OnExit>b__19_0();
    /*0xe3cb30*/ void <OnClickPremiumActive>b__33_0(bool isPurchase);

    class <CoUpdateLeftTime>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BattlePassPopup <>4__this;

        /*0xda1620*/ <CoUpdateLeftTime>d__23(int <>1__state);
        /*0xda164c*/ void System.IDisposable.Dispose();
        /*0xda1650*/ bool MoveNext();
        /*0xda16c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda16c8*/ void System.Collections.IEnumerator.Reset();
        /*0xda1708*/ object System.Collections.IEnumerator.get_Current();
    }
}

class BattlePassPurchasePopup : GuiBase
{
    static /*0x0*/ string[] TITLE;
    static /*0x8*/ string[] DESC;
    static /*0x10*/ string[] DESC2;
    static /*0x18*/ string[] REWARDDESC;
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_desc1;
    /*0x50*/ LocalizeString m_desc2;
    /*0x58*/ LocalizeString m_rewardText;
    /*0x60*/ LocalizeString m_priceText;
    /*0x68*/ ItemTableRewardSlot[] m_rewardSlotList;
    /*0x70*/ UnityEngine.UI.GridLayoutGroup m_layoutGroup;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x80*/ int m_eventTypeID;
    /*0x88*/ System.Action<bool> m_callBack;

    static /*0xe3d4d0*/ BattlePassPurchasePopup();
    /*0xe3d458*/ BattlePassPurchasePopup();
    /*0xe3cbe8*/ void OnCreate();
    /*0xe3cbec*/ void OnDelete();
    /*0xe3cbf0*/ void OnEnter();
    /*0xe3cc5c*/ void OnFinish();
    /*0xe3cc60*/ void OnLeave();
    /*0xe3cc64*/ void OnStart();
    /*0xe3c180*/ void InitPopup(int eventTypeID, System.Action<bool> callBack);
    /*0xe3cc68*/ void SetPriceText();
    /*0xe3cec8*/ void UpdateRewardList(System.Collections.Generic.List<Rewards> source);
    /*0xe3d104*/ void OnClickCancel();
    /*0xe3d1ac*/ void OnClickPurchase();
    /*0xe3d2b4*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ BattlePassPurchasePopup <>4__this;
        /*0x18*/ int eventTypeID;
        /*0x20*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> eventPassRewardList;

        /*0xda1710*/ <>c__DisplayClass20_0();
        /*0xda1718*/ bool <InitPopup>b__0(TableData.TableData_Eventpass data);
        /*0xda1748*/ void <InitPopup>b__1(TableData.TableData_Eventpassreward data);
    }
}

class EventBossFastHuntPopup : GuiBase
{
    /*0x40*/ LocalizeString m_prevDamageText;
    /*0x48*/ LocalizeString m_rewardCountText;
    /*0x50*/ PTShare.Define.SEventBoss m_eventBoss;

    /*0x114fecc*/ EventBossFastHuntPopup();
    /*0x114f7c0*/ void OnCreate();
    /*0x114f7c4*/ void OnDelete();
    /*0x114f7c8*/ void OnEnter();
    /*0x114f7cc*/ void OnFinish();
    /*0x114f7d0*/ void OnLeave();
    /*0x114f7d4*/ void OnStart();
    /*0x114f7d8*/ void InitPopup(int bossIndex);
    /*0x114f960*/ void SetPrevDamage();
    /*0x114fa24*/ void SetRewardCount();
    /*0x114fc68*/ void OnClickFastHunt();
    /*0x114fed4*/ void <OnClickFastHunt>b__12_0();
    /*0x114ffb4*/ void <OnClickFastHunt>b__12_1();
}

class EventBossPopup : EventPopupBase
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x78*/ LocalizeString m_bossInfoText;
    /*0x80*/ LocalizeString m_bossNameText;
    /*0x88*/ ScrollContent_StageReward m_scrollContent;
    /*0x90*/ GuildBossSkillSlot[] m_bossSkills;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_character;
    /*0xa0*/ UnityEngine.UI.Button m_battleButton;
    /*0xa8*/ UnityEngine.UI.Button m_sweepButton;
    /*0xb0*/ LocalizeString m_tryCountText;
    /*0xb8*/ UnityEngine.UI.ScrollRect m_scrollInfoText;
    /*0xc0*/ TableData.TableData_Unitbase m_unitBase;
    /*0xc8*/ TableData.TableData_Unitlv m_unitLvData;
    /*0xd0*/ TableData.TableData_Eventboss m_eventBossData;
    /*0xd8*/ System.Collections.Generic.List<Rewards> m_rewardList;

    static /*0x11520dc*/ EventBossPopup();
    /*0x1152064*/ EventBossPopup();
    /*0x1150064*/ void OnCreate();
    /*0x1150068*/ void OnDelete();
    /*0x115006c*/ void OnEnter();
    /*0x1150070*/ void OnFinish();
    /*0x1150074*/ void OnLeave();
    /*0x1150290*/ void OnStart();
    /*0x1150294*/ void OnExit();
    /*0x1150368*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x1150648*/ void UpdatePage();
    /*0x1150704*/ void UpdateButtons();
    /*0x1150884*/ void UpdateBossName();
    /*0x11509cc*/ void UpdateBossInfo();
    /*0x11506a8*/ void UpdateBossData();
    /*0x1150fb0*/ void UpdateSkillList();
    /*0x1151508*/ void UpdateTryCount();
    /*0x1151804*/ int GetSkillLevel(TableData.TableData_Skilllv skillData, int tier);
    /*0x11513a4*/ void UpdateBoss();
    /*0x1150b38*/ void UpdateRewardList();
    /*0x1151908*/ void UpdateLeftTime();
    /*0x115172c*/ int FindEventHuntCount();
    /*0x1151a48*/ void OnClickBattleStart();
    /*0x1151b38*/ void OnClickFastHunting();
    /*0x1151c20*/ void OnClickRecord();
    /*0x1150428*/ void BindEvent();
    /*0x1150078*/ void RemoveEvent();
    /*0x1151ec4*/ void HandleScrollContent(int index, ItemTableRewardSlot obj);
    /*0x1151f7c*/ void HandleDailyChange();
    /*0x1152060*/ void HandleRefresh();
    /*0x11520e0*/ void <OnExit>b__20_0();
    /*0x1151798*/ System.Collections.IEnumerator <UpdateBossInfo>g__CoLateRefresh|25_0();
    /*0x1152250*/ void <OnClickRecord>b__36_0(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historys);

    class <>c
    {
        static /*0x0*/ EventBossPopup.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__27_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__27_1;

        static /*0x109b070*/ <>c();
        /*0x109b0d0*/ <>c();
        /*0x109b0d8*/ int <UpdateSkillList>b__27_0(TableData.TableData_Skillbase x);
        /*0x109b0f0*/ TableData.TableData_Skillbase <UpdateSkillList>b__27_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
    }

    class <<UpdateBossInfo>g__CoLateRefresh|25_0>d : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventBossPopup <>4__this;

        /*0x109af30*/ <<UpdateBossInfo>g__CoLateRefresh|25_0>d(int <>1__state);
        /*0x109af5c*/ void System.IDisposable.Dispose();
        /*0x109af60*/ bool MoveNext();
        /*0x109b020*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109b028*/ void System.Collections.IEnumerator.Reset();
        /*0x109b068*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventBossRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildBossRecordEntity m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> m_historyList;
    /*0x58*/ int m_bossIndex;

    /*0x11526cc*/ EventBossRecordPopup();
    /*0x115233c*/ void OnCreate();
    /*0x1152340*/ void OnDelete();
    /*0x1152344*/ void OnEnter();
    /*0x1152348*/ void OnFinish();
    /*0x115234c*/ void OnLeave();
    /*0x1152350*/ void OnStart();
    /*0x1152354*/ void OnExit();
    /*0x1152300*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historyList, int bossIndex);
    /*0x115252c*/ void SetScrollContent();
    /*0x1152450*/ void BindEvnet();
    /*0x115237c*/ void RemoveEvent();
    /*0x1152644*/ void HandleScrollContent(int index, GuildBossRecordEntity obj);
}

class EventCompleteEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_title;
    /*0x20*/ LocalizeString m_desc;
    /*0x28*/ EventCompleteTotalSlide m_slide;
    /*0x30*/ TableData.TableData_Eventcomplete m_tableData;
    /*0x38*/ Rewards m_exchangeData;
    /*0x100*/ System.Action m_sendCallBack;

    /*0x11538d0*/ EventCompleteEntity();
    /*0x1152f3c*/ void InitEntity(TableData.TableData_Eventcomplete tableData, System.Action sendCallBack);
    /*0x1153020*/ void UpdateUI();
    /*0x1152f68*/ void SetData();
    /*0x115304c*/ void SetTitle();
    /*0x1153178*/ void SetDesc();
    /*0x11532a4*/ void SetSlide();
    /*0x11533e4*/ string GetExchangeItemName();
    /*0x1153558*/ int GetPushCount();
    /*0x11537b0*/ void OnClick_Send();
    /*0x11538d8*/ bool <GetPushCount>b__13_0(PTShare.Define.SManufacture f);
}

class EventCompleteInsertPopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot m_insertItemSlot;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_desc;
    /*0x58*/ LocalizeString m_subTitleText;
    /*0x60*/ UnityEngine.UI.Slider m_AmountSilder;
    /*0x68*/ LocalizeString m_SilderText;
    /*0x70*/ LocalizeString m_ExchangeCountText;
    /*0x78*/ LocalizeString m_exchangeBtnText;
    /*0x80*/ System.Collections.Generic.List<Rewards> m_insertList;
    /*0x88*/ TableData.TableData_Eventcomplete m_tableData;
    /*0x90*/ int m_nMaxAmount;
    /*0x94*/ int m_nAmount;
    /*0x98*/ System.Action m_confirmCallBack;

    /*0x1154adc*/ EventCompleteInsertPopup();
    /*0x1153908*/ void OnCreate();
    /*0x115390c*/ void OnDelete();
    /*0x1153910*/ void OnEnter();
    /*0x115397c*/ void OnFinish();
    /*0x1153980*/ void OnLeave();
    /*0x1153984*/ void OnStart();
    /*0x1153988*/ void OnExit();
    /*0x1153888*/ void InitializePopup(TableData.TableData_Eventcomplete tableData, int defaultMaxCount, System.Action confirmCallBack);
    /*0x1153a04*/ void SetData();
    /*0x1153b7c*/ void ComputeMaxAmount(int defaultMaxCount);
    /*0x1153de8*/ void SetLocalizeItem();
    /*0x11541d8*/ void ChangeAmount(int _amount);
    /*0x11545f8*/ string GetExchangeItemName();
    /*0x11547fc*/ void OnClickChangeAmount(int count);
    /*0x115484c*/ void OnClickInsert();
    /*0x1154b54*/ void <OnClickInsert>b__27_0();
}

class EventCompletePopup : EventPopupBase
{
    static /*0x0*/ string[] CAKE_IMAGES;
    /*0x78*/ ScrollContent_EventCompleteEntity m_scrollcontentEntity;
    /*0x80*/ AtlasImage m_progressImage;
    /*0x88*/ UnityEngine.UI.Image m_cakeImage;
    /*0x90*/ UnityEngine.GameObject[] m_progressActiveSteps;
    /*0x98*/ EventCompleteRewardView m_eventCompleteView;
    /*0xa0*/ System.Collections.Generic.List<TableData.TableData_Eventcomplete> m_completeDataList;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Eventcompletemission> m_completeMissionDataList;
    /*0xb0*/ System.Collections.Generic.List<int> m_completeStepList;

    static /*0x1156280*/ EventCompletePopup();
    /*0x1156188*/ EventCompletePopup();
    /*0x1154f10*/ void OnCreate();
    /*0x1154f14*/ void OnDelete();
    /*0x1154f18*/ void OnEnter();
    /*0x1154f1c*/ void OnFinish();
    /*0x1154f20*/ void OnLeave();
    /*0x1154f24*/ void OnStart();
    /*0x1154f28*/ void OnExit();
    /*0x1154ffc*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11554f4*/ void UpdateUI();
    /*0x11551bc*/ void SetData();
    /*0x115569c*/ void SetProgress();
    /*0x1155034*/ void BindEvent();
    /*0x1155a90*/ void RemoveEvent();
    /*0x1155c10*/ void HandleScrollContentEntity(int index, EventCompleteEntity obj);
    /*0x1155ce4*/ void HandleDailyChange();
    /*0x1155de8*/ void OnClickRewardView(int index);
    /*0x115648c*/ void <OnExit>b__15_0();

    class <>c
    {
        static /*0x0*/ EventCompletePopup.<> <>9;
        static /*0x8*/ System.Comparison<int> <>9__18_0;

        static /*0x109b13c*/ <>c();
        /*0x109b19c*/ <>c();
        /*0x109b1a4*/ int <SetData>b__18_0(int lhs, int rhs);
    }
}

class EventCompleteRewardView : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_parent;
    /*0x20*/ System.Collections.Generic.List<UnityEngine.GameObject> m_rewardParents;

    /*0x1156520*/ EventCompleteRewardView();
    /*0x1155eb8*/ void Show(int index, System.Collections.Generic.List<Rewards> rewardList);
    /*0x1155564*/ void Hide();

    class <>c
    {
        static /*0x0*/ EventCompleteRewardView.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.GameObject> <>9__3_0;

        static /*0x109b1bc*/ <>c();
        /*0x109b21c*/ <>c();
        /*0x109b224*/ void <Hide>b__3_0(UnityEngine.GameObject f);
    }
}

class EventCompleteTotalSlide : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_itemIcon;
    /*0x20*/ UnityEngine.UI.Slider m_slider;
    /*0x28*/ LocalizeString m_percent;

    /*0x11568b0*/ EventCompleteTotalSlide();
    /*0x115365c*/ void Init(Rewards rewards, float percent, int currValue, int maxValue);
    /*0x1156788*/ void SetIcon(Rewards rewards);
}

class ScrollContent_EventCompleteEntity : ScrollContent<EventCompleteEntity>
{
    /*0xe1946c*/ ScrollContent_EventCompleteEntity();
}

class ScrollContent_EventCompleteTotalSlide : ScrollContent<EventCompleteTotalSlide>
{
    /*0xe194e4*/ ScrollContent_EventCompleteTotalSlide();
}

class DefineEvent
{
    static /*0x0*/ string CATEGORY_1ST_KEY;

    static /*0x11e4e78*/ DefineEvent();
    static /*0x11e421c*/ TableData.TableData_Event ConvertTableDataEventByPass(TableData.TableData_Eventpass dataPass);
    static /*0x11e435c*/ bool IsClearTrigger(string triggerString, int score, int destScore);
    static /*0x11e46ac*/ bool IsClearTriggerByClient(string triggerString);

    enum TRIGGERS
    {
        MAZE_CLEAR = 0,
        DAILY_QUEST_EXCHANGE = 1,
        WEEKLY_QUEST_EXCHANGE = 2,
        IDLE = 3,
        USER_LEVEL = 4,
        BATTLEPOWER = 5,
        CHARACTER_LEVEL = 6,
        CAMPAIGN_CLEAR = 7,
        TOWER_CLEAR = 8,
        EQUIPMENT_UPGRADE = 9,
        ASCEND = 10,
        SHOP_BUY = 11,
        GACHA = 12,
        ARENA_BATTLE_WIN = 13,
        CRYSTALROOM_SLOT = 14,
        TRY = 15,
        HERO_GRADE = 16,
        CHAPTER_CLEAR = 17,
        CRYSTALROOM_LEVEL = 18,
        HERO_FACTION = 19,
        HERO_TOTAL = 20,
        CURRENCY = 21,
        CURRENCY_IDLE = 22,
        VISIT = 23,
        ARENA_WIN = 24,
        ARENA_POINT = 25,
        ARENA_TRY = 26,
        PURCHASE_STORE = 27,
        PURCHASE_GOODS = 28,
        FIRST_PURCHASE_STORE = 29,
        FIRST_PURCHASE_GOODS = 30,
        DUNGEONCONDITIONREWARDFIND = 31,
        DUNGEONPROGRESS = 32,
        DUNGEONENTER = 33,
        DUNGEONFIND = 34,
        DUNGEON = 35,
        DISPATCH = 36,
        TAKE_IDLE = 37,
        VOTE_RACE = 38,
        CLEAN_GUILDROOM = 39,
        HERO_LEVELUP = 40,
        DEFEAT = 41,
        SPEND = 42,
        TOWER_SPIRIT_CLEAR = 43,
        GUILDBOSS_BATTLE_FINISH = 44,
        WORLDBOSS = 45,
        JOIN = 46,
        GATE_OPEN = 47,
        PVERANKING_CLEAR = 48,
        PVERANKING = 49,
        LONG_TIME_NO_SEE = 50,
        FURNITURE_PLACE = 51,
        HOUSING = 52,
        FUNRNITURE_GET = 53,
        FUNRNITURE_GACHA = 54,
        FUNRNITURE_BUY = 55,
        LOGIN = 56,
        EVENTQUEST = 57,
        EVENTPOINT = 58,
        GET = 59,
        TAKE = 60,
        EVENTCOMPLETE1ST = 61,
        NULL = 62,
    }

    enum EVENT_TYPE
    {
        SINGLE = 0,
        GROUP = 1,
        SELECT = 2,
        BUYINAPP = 3,
        EXCHANGE = 4,
        ATTENDANCE = 5,
        MISSION = 6,
        HOTTIME = 7,
        PASS = 8,
        COMPLETE = 9,
        QUEST = 10,
        BOSS = 11,
        ROULETTE = 12,
        NULL = 13,
    }

    enum TAB_TYPE
    {
        LOCK = 0,
        UNLOCK = 1,
        SELECTED = 2,
    }

    enum EXCHANGE_EVENT_TYPE
    {
        NORMAL = 0,
        SHOP = 1,
    }

    enum EVENTQUESTTYPE
    {
        QUEST = 0,
        POINT = 1,
    }

    enum BATTLEPASS
    {
        ROYALPASS = 1,
        BATTLEPASS = 2,
    }

    class TriggerData
    {
        /*0x10*/ int Index;
        /*0x18*/ string Trigger;
        /*0x20*/ string TriggerType;
        /*0x28*/ int TriggerRequireValue;
        /*0x30*/ string[] TriggerSplits;
        /*0x38*/ int[] ParamArray;
        /*0x40*/ DefineEvent.TRIGGERS TriggerEnum;
        /*0x44*/ bool isGte;

        /*0x1077628*/ TriggerData();
        /*0x1077784*/ TriggerData(TableData.TableData_Eventcurrencylocal currencyLocal);
        /*0x1077aec*/ TriggerData(string trigger, int[] paramArray);
        /*0x1077b74*/ TriggerData(string trigger, string triggerType, int triggerRequireValue, int index, int[] paramArray);
        /*0x10778c4*/ void Init(string trigger, string triggerType, int triggerRequireValue, int index, int[] paramArray);
        /*0x107768c*/ void Clear();
        /*0x1077c18*/ bool IsUnlockTrigger();
        /*0x1077c74*/ bool IsMoveDest();
        /*0x1077cd0*/ void MoveTrigger();
        /*0x1077d2c*/ string GetTriggerInfoKey();
        /*0x1077d88*/ string GetTriggerTitleKey();
        /*0x1077de4*/ int GetTriggerDestPoint(int defaultScore);
        /*0x1077f10*/ bool IsClearTrigger(int score, int destScore);
        /*0x1077f90*/ bool IsClearTriggerClientSelf();
        /*0x1077ff8*/ bool CheckTrigger(string trigger);
        /*0x1078014*/ bool CheckTrigger(string trigger, int requireValue);
        /*0x1078078*/ bool CheckTrigger(string trigger, string triggerType, int requireValue);
    }

    enum EVENT_MISSION_TYPE
    {
        NONE = 0,
        DAILY = 1,
        DAILYEND = 2,
        DAILYCLEAR = 3,
        STEPCLEAR = 4,
    }
}

class EventBannerEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Image m_bannerImage;
    /*0x20*/ LocalizeString m_bannerTitleText;
    /*0x28*/ LocalizeString m_bannerInfoText;
    /*0x30*/ LocalizeString m_leftTimeText;
    /*0x38*/ UnityEngine.GameObject m_reddot;
    /*0x40*/ TableData.TableData_Event m_eventData;
    /*0x48*/ TableData.TableData_Eventpreset m_eventPreset;
    /*0x50*/ UnityEngine.Coroutine m_leftTimerCoroutine;

    /*0x114f7b0*/ EventBannerEntity();
    /*0x114dba0*/ void OnEnable();
    /*0x114dbf4*/ void OnDisable();
    /*0x114dc24*/ void InitEntity(TableData.TableData_Event eventData);
    /*0x114e8d4*/ void OnClickBanner();
    /*0x114ed68*/ void ShowPopup();
    /*0x114dcac*/ void SetBannerImage();
    /*0x114de78*/ void SetBannerTitle();
    /*0x114df94*/ void SetBannerInfo();
    /*0x114e0b0*/ void SetBannerColor();
    /*0x114e284*/ void SetReddot();
    /*0x114e300*/ void UpdateLeftTime();
    /*0x114f6d0*/ EventParentPopup ShowEventParent();
    /*0x114ea70*/ void ShowEventPopup();
    /*0x114dba4*/ void PlayLeftTimerCoroutine();
    /*0x114f744*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0x114f7b8*/ void <OnClickBanner>b__11_0();
    /*0x114f7bc*/ void <ShowPopup>b__12_0();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ EventBannerEntity <>4__this;
        /*0x18*/ int eventDay;

        /*0x109ade8*/ <>c__DisplayClass18_0();
        /*0x109adf0*/ void <UpdateLeftTime>b__0(TableData.TableData_Eventmission data);
    }

    class <>c
    {
        static /*0x0*/ EventBannerEntity.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Eventpage> <>9__18_1;
        static /*0x10*/ System.Predicate<TableData.TableData_Eventpage> <>9__20_0;

        static /*0x109ad28*/ <>c();
        /*0x109ad88*/ <>c();
        /*0x109ad90*/ bool <UpdateLeftTime>b__18_1(TableData.TableData_Eventpage eventPageData);
        /*0x109adbc*/ bool <ShowEventPopup>b__20_0(TableData.TableData_Eventpage eventPageData);
    }

    class <CoUpdateLeftTime>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventBannerEntity <>4__this;

        /*0x109ae48*/ <CoUpdateLeftTime>d__22(int <>1__state);
        /*0x109ae74*/ void System.IDisposable.Dispose();
        /*0x109ae78*/ bool MoveNext();
        /*0x109aee0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109aee8*/ void System.Collections.IEnumerator.Reset();
        /*0x109af28*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.UI.Image m_image;
    /*0x20*/ LocalizeString m_text;
    /*0x28*/ TableData.TableData_Eventpage m_eventPageData;
    /*0x30*/ bool m_isSetupDefaultPosition;
    /*0x34*/ UnityEngine.Vector3 m_imageDefaultPosition;
    /*0x40*/ UnityEngine.Vector3 m_textDefaultPosition;

    /*0x11574c4*/ EventEntity();
    /*0x1156b18*/ void InitEntity(TableData.TableData_Eventpage eventPageData);
    /*0x11574c0*/ void SetDefault();
    /*0x1156b7c*/ void SetDefaultPosition();
    /*0x1156d40*/ void SetImage(string imageKey, string imagePos);
    /*0x1157038*/ void SetText(string textKey, string textPos);
    /*0x11572d0*/ void SetTextColor(string outlineColor, string inlineColor);
}

class EventListButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ string m_categoryType;
    /*0x20*/ AtlasImage m_menuImage;
    /*0x28*/ UnityEngine.GameObject m_reddot;
    /*0x30*/ string m_activeSprite;
    /*0x38*/ string m_unactiveSprite;

    /*0x115a034*/ EventListButton();
    /*0x1159e3c*/ string GetCategoryType();
    /*0x1159e44*/ void SetReddot(bool enable);
    /*0x1159ee8*/ void SetSelectIcoc(bool enable);
    /*0x1159fa0*/ void OnClick();
}

class EventListPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefresh;
    static /*0x8*/ System.Action<string> OnChangeCategory;
    /*0x40*/ ScrollContent_EventBannerEntity m_scrollContent;
    /*0x48*/ float m_arrowSpeed;
    /*0x50*/ string m_defaultCategory;
    /*0x58*/ string m_priorityCategory;
    /*0x60*/ EventListButton[] m_buttons;
    /*0x68*/ System.Collections.Generic.List<TableData.TableData_Event> m_eventDataList;
    /*0x70*/ string m_currCategoryType;

    static /*0x115b2dc*/ EventListPopup();
    /*0x115b1e8*/ EventListPopup();
    /*0x115a08c*/ void OnCreate();
    /*0x115a090*/ void OnDelete();
    /*0x115a094*/ void OnEnter();
    /*0x115a374*/ void OnFinish();
    /*0x115a378*/ void OnLeave();
    /*0x115a650*/ void OnStart();
    /*0x115a654*/ void OnExit();
    /*0x11521bc*/ void InitEventList();
    /*0x115a874*/ void SetData();
    /*0x115a9f4*/ void SetButtons();
    /*0x115ae60*/ bool IsReddot(string categoryType);
    /*0x115ab64*/ void SetScrollContent();
    /*0x115a098*/ void BindEvent();
    /*0x115a37c*/ void RemoveEvent();
    /*0x115afb4*/ void HandleScrollContent(int index, EventBannerEntity obj);
    /*0x115b044*/ void HandleExpireEvent(TableData.TableData_Event data);
    /*0x115b0f8*/ void HandleChangeCategory(string category);
    /*0x115b048*/ void HandleRefresh();
    /*0x115b100*/ void Refresh();
    /*0x115ac4c*/ void SortEventList();
    /*0x115b2e0*/ void <OnExit>b__15_0();
    /*0x115b2e8*/ void <HandleRefresh>b__26_0();

    class <>c
    {
        static /*0x0*/ EventListPopup.<> <>9;
        static /*0x8*/ System.Comparison<TableData.TableData_Event> <>9__28_0;
        static /*0x10*/ System.Comparison<TableData.TableData_Event> <>9__28_1;

        static /*0x109b244*/ <>c();
        /*0x109b2a4*/ <>c();
        /*0x109b2ac*/ int <SortEventList>b__28_0(TableData.TableData_Event a, TableData.TableData_Event b);
        /*0x109b3bc*/ int <SortEventList>b__28_1(TableData.TableData_Event a, TableData.TableData_Event b);
    }
}

class EventManager : Singleton.Component.SingletonComponent<EventManager>
{
    static /*0x0*/ System.Action OnRefreshBuyInapp;
    static /*0x8*/ System.Action<TableData.TableData_Event> OnExpireEvent;
    static /*0x10*/ System.Action OnShowUnlockAttendEvent;
    /*0x28*/ System.Collections.Generic.List<TableData.TableData_Event> m_eventDataList;
    /*0x30*/ System.Collections.Generic.List<int> m_showEventIDList;
    /*0x38*/ System.Collections.Generic.List<string> m_buyStoreHistory;
    /*0x40*/ System.Collections.Generic.List<string> m_buyHistory;
    /*0x48*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0x50*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> m_attendanceDataList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SAttend> m_attendancePacketList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SAttendReward> m_attendanceRewardPacketList;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SEventBoss> m_eventBossList;
    /*0x70*/ TableData.TableData_Event m_eventBossTableBase;
    /*0x78*/ int m_currBossIndex;
    /*0x7c*/ bool m_eventBossBattle;
    /*0x80*/ ServerProtocol.ResManufactureEnter m_completePacketData;
    /*0x88*/ System.Collections.Generic.List<TableData.TableData_Eventcurrencylocal> m_eventCurrencyLocal;
    /*0x90*/ System.Collections.Generic.List<DefineEvent.TriggerData> m_currencyLocalTriggerData;
    /*0x98*/ System.Collections.Generic.List<PTShare.Define.SEventExchange> m_exchangeList;
    /*0xa0*/ System.Collections.Generic.List<TableData.TableData_Eventmission> m_eventMissionDataList;
    /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SMission> m_missionList;
    /*0xb0*/ System.Collections.Generic.List<TableData.TableData_Eventpass> m_passDataList;
    /*0xb8*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> m_passRewardDataList;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SPass> m_passPacketList;
    /*0xc8*/ System.Collections.Generic.List<PTShare.Define.SPassReward> m_passRewardPacketList;
    /*0xd0*/ int m_rouletteFreeCount;

    static /*0x11629e4*/ EventManager();
    static /*0x1161be0*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> <CheckReddotQuest>g__GetPointQuestList|138_0(ref EventManager.<> );
    static /*0x1161d3c*/ bool <CheckReddotQuest>g__CheckPointQuest|138_1(ref EventManager.<> );
    /*0x1162570*/ EventManager();
    /*0x115b2ec*/ void AwakeInstance();
    /*0x115b2f0*/ bool InitInstance();
    /*0x115b970*/ void ReleaseInstance();
    /*0x115bb30*/ System.Collections.Generic.List<TableData.TableData_Event> GetEventDataList();
    /*0x115a768*/ bool IsProgressCategoryType(string category);
    /*0x115bb38*/ bool IsExpire(TableData.TableData_Event eventTable);
    /*0x115bc6c*/ void RefreshInit();
    /*0x115b12c*/ void Send_EventEnter(System.Action callBack);
    /*0x115c330*/ void SetBuyInAppFirst(System.Collections.Generic.List<string> firsts, System.Collections.Generic.List<string> stores);
    /*0x115c338*/ void AddPurchaseHistory(string key);
    /*0x115c568*/ void InitBuyInApp();
    /*0x115c654*/ bool IsBuyHistory(string packageID, DefineCashShop.CashShopTabType tab);
    /*0x115cd8c*/ void AddEventData(int typeEventID, DefineEvent.EVENT_TYPE eventType);
    /*0x115d5f0*/ void AddEventData_DateTime(DefineEvent.EVENT_TYPE eventType);
    /*0x115d008*/ void AddEventDataByPass(int typeEventId);
    /*0x115d524*/ void AddEventData(TableData.TableData_Event addEvent);
    /*0x115d184*/ bool CheckExpireEvent(TableData.TableData_Event tableDataEvent, DefineEvent.EVENT_TYPE eventType);
    /*0x115d76c*/ System.Collections.IEnumerator CoLateCallFunc(System.Action callBack);
    /*0x115d7d8*/ bool IsReddot();
    /*0x114ee3c*/ bool IsReddot(TableData.TableData_Event tableDataEvent);
    /*0x114f40c*/ bool SetEventTime(LocalizeString localizeString, int typeEventID, DefineEvent.EVENT_TYPE eventType);
    /*0x114f160*/ bool SetEventTime(LocalizeString localizeString, string normalKey, string secKey, int typeEventID, DefineEvent.EVENT_TYPE eventType);
    /*0x115e4bc*/ void PlayExpireCoroutine();
    /*0x115e578*/ void HandleNextChapter();
    /*0x115e50c*/ System.Collections.IEnumerator CoUpdateExpireEvent();
    /*0x115e660*/ System.Collections.Generic.List<TableData.TableData_Eventattendance> GetAttendanceDataList();
    /*0x115e668*/ PTShare.Define.SAttend FindAttendancePacket(int typeEventID);
    /*0x115e758*/ PTShare.Define.SAttendReward FindAttendRewardPacket(int index);
    /*0x115e848*/ void SetAttendanceRewardPacketList(System.Collections.Generic.List<PTShare.Define.SAttendReward> attendanceRewardPacketList);
    /*0x115b724*/ void InitAttendanceData();
    /*0x115e850*/ void UpdateAttendData(System.Collections.Generic.List<PTShare.Define.SAttend> attends, System.Collections.Generic.List<PTShare.Define.SAttendReward> attendRewards);
    /*0x115e858*/ void Send_AttendanceReward(PTShare.Define.SAttendReward attendReward, System.Action callBack);
    /*0x115dbac*/ bool CheckReddotAttendance(TableData.TableData_Event tableDataEvent);
    /*0x115d384*/ bool CheckShowAttendanceEvent(TableData.TableData_Event tableDataEvent);
    /*0x115ea00*/ System.Collections.IEnumerator CoOpenAttendancePopup();
    /*0x115ea6c*/ void AddEventAttendance();
    /*0x115c23c*/ void BindEventAttendance();
    /*0x115bacc*/ void RemoveEventAttendance();
    /*0x115eb14*/ void UpdateDailyChangeAttend();
    /*0x115eb40*/ System.Collections.IEnumerator CoUpdateAttend();
    /*0x115eb9c*/ void OpenEventBossPopup();
    /*0x115ed74*/ TableData.TableData_Event FindPlayingEventBossBaseTable();
    /*0x115eea0*/ TableData.TableData_Eventboss FindPlayingEventBossTable();
    /*0x115efe8*/ bool IsPlayingEventBoss();
    /*0x115f0f0*/ bool IsExpireEventBoss();
    /*0x115f244*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardData(long damage);
    /*0x115f29c*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardDataByPrev(long damage);
    /*0x115f2f4*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardDataByPrev(int hutingRewardID, long damage);
    /*0x114fb54*/ TableData.TableData_Eventbossreward GetEventBossHuntingRewardData(int rewardId, long damage);
    /*0x115f424*/ TableData.TableData_Eventbossreward CreateDummyTable(TableData.TableData_Eventbossreward prev);
    /*0x115f4b8*/ bool IsEventBossBattle();
    /*0x115f4c0*/ void SetEventBossBattle(bool enable);
    /*0x1151a28*/ int GetEventBossTryCount(int index);
    /*0x115170c*/ long GetEventBosLastDamage(int index);
    /*0x114f864*/ PTShare.Define.SEventBoss FindEventBoss(int index);
    /*0x115069c*/ void SetCurrEventBossData(int bossIndex, TableData.TableData_Event tableBase);
    /*0x115f4cc*/ TableData.TableData_Event GetCurrEventBossTable();
    /*0x115f4d4*/ int GetCurrEventBossIndex();
    /*0x115f4dc*/ void SetEventBossData(System.Collections.Generic.List<PTShare.Define.SEventBoss> eventBossList);
    /*0x115f4e4*/ void Send_BossBegin(string heroIds, System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack);
    /*0x115f688*/ void Send_BossFinish(string statistics, string playData, long lcp, string hpmps, double bossTotalDamage, System.Action<PTShare.Define.SProperty> action);
    /*0x114fd24*/ void Send_BossMopUp(int index, System.Action callBack);
    /*0x1151d2c*/ void Send_BossHistory(int bossIndex, System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack);
    /*0x115f858*/ void Send_BossReplay(string replayId, System.Action<PTShare.Define.SGuildBossReplay> callBack);
    /*0x115f9f0*/ void AddEventBoss();
    /*0x115f9f8*/ void UpdateDailyChangeEventBoss();
    /*0x115e388*/ bool CheckReddotEventBoss(TableData.TableData_Event tableDataEvent);
    /*0x115fad8*/ ServerProtocol.ResManufactureEnter GetEventCompletePacket();
    /*0x115fae0*/ int GetEventCompletePushcount(TableData.TableData_Eventcomplete table);
    /*0x1153648*/ int GetEventCompleteCount(TableData.TableData_Eventcomplete table);
    /*0x115fbec*/ void AddEventComplete();
    /*0x114ebdc*/ void Send_CompleteEnter(System.Action callBack);
    /*0x1154938*/ void Send_CompleteInsert(int index, int amount, System.Action callBack);
    /*0x115b860*/ void InitTrigger();
    /*0x115fbf4*/ System.Collections.Generic.List<Rewards> GetDailyQuestClearReward(int progressNumber);
    /*0x11600f8*/ System.Collections.Generic.List<Rewards> GetWeeklyQuestClearReward(int progressNumber);
    /*0x11601e8*/ System.Collections.Generic.List<Rewards> GetMazeClearFloorReward(int floor);
    /*0x115fce4*/ System.Collections.Generic.List<Rewards> GetCurrencyLocalReward(string trigger);
    /*0x11602d4*/ DefineEvent.TriggerData FindCurrencyLocalTriggerData(string trigger, string type, int requireValue);
    /*0x11603d8*/ PTShare.Define.SEventExchange FindEventExchangePacket(int index);
    /*0x1158408*/ int FindEventExchangeCount(int index, int defaultCount);
    /*0x11604c8*/ void SetExchangePacketList(System.Collections.Generic.List<PTShare.Define.SEventExchange> eventExchangePacketList);
    /*0x115d888*/ bool CheckReddotExchange(TableData.TableData_Event tableDataEvent);
    /*0x115b858*/ void InitEventExchange();
    /*0x1160558*/ void Send_EventExchange(int index, int count, int defaultLimitCount, System.Action callBack);
    /*0x1160710*/ System.Collections.Generic.List<TableData.TableData_Eventmission> GetEventMissionData();
    /*0x114f070*/ PTShare.Define.SMission FindMissionPacket(int typeEventID);
    /*0x1160718*/ void InitEvnetMission();
    /*0x1160828*/ void Send_EventMissionEnter(System.Action callBack);
    /*0x11609b8*/ void Send_EventMissionTake(int missionIndex, int eventMissionID, int missionPoint, System.Action callBack);
    /*0x1160b70*/ void Send_EventMissionExchange(int missionId, int pointIndex, System.Action callBack);
    /*0x1160d20*/ void AddEventMission();
    /*0x115dcec*/ bool CheckReddotMission(TableData.TableData_Event tableDataEvent);
    /*0x1160dc8*/ bool CheckShowMissionEvent(TableData.TableData_Event tableDataEvent);
    /*0x1161004*/ System.Collections.Generic.List<TableData.TableData_Eventpassreward> GetPassDataList();
    /*0x116100c*/ TableData.TableData_Eventpass FindPassData(int eventId);
    /*0x114ef80*/ PTShare.Define.SPass FindPassPacket(int eventId);
    /*0x11610fc*/ PTShare.Define.SPassReward FindPassRewardPacket(int rewardTableIndex);
    /*0x11611ec*/ void SetPassRewardPacketList(System.Collections.Generic.List<PTShare.Define.SPassReward> passRewardPacketList);
    /*0x115b394*/ void InitBattlePassData();
    /*0x11611f4*/ System.Collections.Generic.List<System.ValueTuple<string, int>> GetPassIdleRewardData();
    /*0x115be60*/ void CheckBattlePassExpire(System.Action callBack);
    /*0x115e030*/ bool CheckReddotPass(TableData.TableData_Event tableDataEvent);
    /*0x1161380*/ void IncreasePassPoint(System.Collections.Generic.List<PTShare.Define.SPassPoint> sPassPointList);
    /*0x116141c*/ void IncreasePassPoint(PTShare.Define.SPassPoint sPassPoint);
    /*0x1161534*/ void SetPassPoint(PTShare.Define.SPassPoint sPassPoint);
    /*0x1161644*/ void SetPassPremium(int eventId);
    /*0x116174c*/ void AddPass(PTShare.Define.SPass sPass);
    /*0x11617c4*/ void Send_BattlePassReward(int passRewardIndex, System.Action callBack);
    /*0x116196c*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> GetMazeClearFloorRewardBySPass(int floor);
    /*0x1161984*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> ParseSPoint(System.Collections.Generic.List<Rewards> rewardList);
    /*0x1161acc*/ void AddEventPass();
    /*0x1161b74*/ bool AddEventQuest();
    /*0x115e188*/ bool CheckReddotQuest(TableData.TableData_Event tableDataEvent);
    /*0x1161f60*/ bool IsShowRouletteMainBanner();
    /*0x1162070*/ void OpenEventRoulettePopup();
    /*0x1162300*/ int GetRouletteFreeCount();
    /*0x1162358*/ void SetRouletteFreeCount(int count);
    /*0x1162360*/ bool AddEventRoulette();
    /*0x115e4a0*/ bool CheckReddotRoullet();
    /*0x11623cc*/ void Send_Roulette(int eventId, int priceId, System.Action<PTShare.Define.SProperty> callBack);
    /*0x11629e8*/ void <RefreshInit>b__13_0();
    /*0x1162abc*/ void <InitBuyInApp>b__17_0(TableData.TableData_Event data);
    /*0x1162de8*/ void <HandleNextChapter>b__30_0();
    /*0x1162e14*/ void <InitAttendanceData>b__40_0(TableData.TableData_Eventattendance attendanceData);
    /*0x1162e78*/ void <InitTrigger>b__91_0(TableData.TableData_Eventcurrencylocal data);
    /*0x1162f0c*/ void <InitEvnetMission>b__108_0(TableData.TableData_Eventmission missionData);
    /*0x1162f70*/ void <InitBattlePassData>b__124_0(TableData.TableData_Eventpass passData);
    /*0x1162fd4*/ void <InitBattlePassData>b__124_1(TableData.TableData_Eventpassreward passData);
    /*0x1163038*/ void <InitBattlePassData>b__124_2(TableData.TableData_Eventcurrencylocal passData);
    /*0x116309c*/ void <InitBattlePassData>b__124_3(PTShare.Define.SPass packetData);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ string categoryToUpper;

        /*0x109bfd4*/ <>c__DisplayClass11_0();
        /*0x109bfdc*/ bool <IsProgressCategoryType>b__0(TableData.TableData_Event f);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action <>9__2;
        /*0x28*/ System.Action <>9__1;

        /*0x109c794*/ <>c__DisplayClass14_0();
        /*0x109c79c*/ void <Send_EventEnter>b__0();
        /*0x109c83c*/ void <Send_EventEnter>b__1();
        /*0x109ca30*/ void <Send_EventEnter>b__2();
    }

    class <>c
    {
        static /*0x0*/ EventManager.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Event> <>9__16_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Event> <>9__45_0;
        static /*0x18*/ System.Predicate<TableData.TableData_Eventpage> <>9__45_1;
        static /*0x20*/ System.Predicate<TableData.TableData_Eventpage> <>9__55_0;
        static /*0x28*/ System.Action<PTShare.Define.SItem> <>9__88_1;
        static /*0x30*/ System.Predicate<TableData.TableData_Eventpage> <>9__141_0;

        static /*0x109b514*/ <>c();
        /*0x109b574*/ <>c();
        /*0x109b57c*/ bool <AddPurchaseHistory>b__16_0(TableData.TableData_Event data);
        /*0x109b610*/ bool <CoOpenAttendancePopup>b__45_0(TableData.TableData_Event data);
        /*0x109b704*/ bool <CoOpenAttendancePopup>b__45_1(TableData.TableData_Eventpage eventPageData);
        /*0x109b730*/ bool <OpenEventBossPopup>b__55_0(TableData.TableData_Eventpage f);
        /*0x109b75c*/ void <Send_CompleteInsert>b__88_1(PTShare.Define.SItem m);
        /*0x109b7e4*/ bool <OpenEventRoulettePopup>b__141_0(TableData.TableData_Eventpage f);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ DefineEvent.TriggerData triggerData;

        /*0x109ca78*/ <>c__DisplayClass17_0();
        /*0x109ca80*/ bool <InitBuyInApp>b__1(string str);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string packageID;

        /*0x109cacc*/ <>c__DisplayClass18_0();
        /*0x109cad4*/ bool <IsBuyHistory>b__0(TableData.TableData_Cashshopdaily data);
        /*0x109cb00*/ bool <IsBuyHistory>b__1(TableData.TableData_Cashshopweekly data);
        /*0x109cb2c*/ bool <IsBuyHistory>b__2(TableData.TableData_Cashshopmonthly data);
        /*0x109cb58*/ bool <IsBuyHistory>b__3(TableData.TableData_Cashshopstar data);
        /*0x109cb84*/ bool <IsBuyHistory>b__4(TableData.TableData_Cashshoplimit data);
        /*0x109cbb0*/ bool <IsBuyHistory>b__5(TableData.TableData_Cashshopsubscription data);
        /*0x109cbdc*/ bool <IsBuyHistory>b__6(TableData.TableData_Cashshophero data);
        /*0x109cc08*/ bool <IsBuyHistory>b__7(TableData.TableData_Cashshopbeginner data);
        /*0x109cc34*/ bool <IsBuyHistory>b__8(TableData.TableData_Cashshopskinpiece data);
        /*0x109cc60*/ bool <IsBuyHistory>b__9(TableData.TableData_Cashshopskin data);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ int typeEventID;
        /*0x14*/ DefineEvent.EVENT_TYPE eventType;

        /*0x109cc8c*/ <>c__DisplayClass19_0();
        /*0x109cc94*/ bool <AddEventData>b__0(TableData.TableData_Event data);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ DefineEvent.EVENT_TYPE eventType;
        /*0x18*/ System.DateTime startTime;
        /*0x20*/ System.DateTime endTime;
        /*0x28*/ System.DateTime now;
        /*0x30*/ EventManager <>4__this;

        /*0x109cd50*/ <>c__DisplayClass20_0();
        /*0x109cd58*/ void <AddEventData_DateTime>b__0(TableData.TableData_Event data);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int typeEventId;

        /*0x109cf70*/ <>c__DisplayClass21_0();
        /*0x109cf78*/ bool <AddEventDataByPass>b__0(TableData.TableData_Eventpass data);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ TableData.TableData_Event tableDataEvent;

        /*0x109cf9c*/ <>c__DisplayClass23_0();
        /*0x109cfa4*/ void <CheckExpireEvent>b__0();
    }

    class <CoLateCallFunc>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action callBack;

        /*0x109df24*/ <CoLateCallFunc>d__24(int <>1__state);
        /*0x109df50*/ void System.IDisposable.Dispose();
        /*0x109df54*/ bool MoveNext();
        /*0x109dfb0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109dfb8*/ void System.Collections.IEnumerator.Reset();
        /*0x109dff8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ int typeEventID;
        /*0x14*/ DefineEvent.EVENT_TYPE eventType;

        /*0x109d01c*/ <>c__DisplayClass27_0();
        /*0x109d024*/ bool <SetEventTime>b__0(TableData.TableData_Event table);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ int typeEventID;
        /*0x14*/ DefineEvent.EVENT_TYPE eventType;

        /*0x109d0fc*/ <>c__DisplayClass28_0();
        /*0x109d104*/ bool <SetEventTime>b__0(TableData.TableData_Event table);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int i;

        /*0x109d1dc*/ <>c__DisplayClass31_0();
    }

    class <>c__DisplayClass31_1
    {
        /*0x10*/ int eventDay;
        /*0x18*/ EventManager.<> CS$<>8__locals1;

        /*0x109d1e4*/ <>c__DisplayClass31_1();
        /*0x109d1ec*/ void <CoUpdateExpireEvent>b__0(TableData.TableData_Eventmission data);
    }

    class <CoUpdateExpireEvent>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventManager <>4__this;
        /*0x28*/ TableData.TableData_Event <minExpireData>5__2;

        /*0x109e5c0*/ <CoUpdateExpireEvent>d__31(int <>1__state);
        /*0x109e5ec*/ void System.IDisposable.Dispose();
        /*0x109e5f0*/ bool MoveNext();
        /*0x109ec9c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109eca4*/ void System.Collections.IEnumerator.Reset();
        /*0x109ece4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ int typeEventID;

        /*0x109d2a8*/ <>c__DisplayClass37_0();
        /*0x109d2b0*/ bool <FindAttendancePacket>b__0(PTShare.Define.SAttend packet);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ int index;

        /*0x109d2d4*/ <>c__DisplayClass38_0();
        /*0x109d2dc*/ bool <FindAttendRewardPacket>b__0(PTShare.Define.SAttendReward packet);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ PTShare.Define.SAttendReward attendReward;
        /*0x20*/ System.Action callBack;

        /*0x109d300*/ <>c__DisplayClass42_0();
        /*0x109d308*/ void <Send_AttendanceReward>b__0(ServerProtocol.ResEventAttendReward instance);
    }

    class <CoOpenAttendancePopup>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventManager <>4__this;

        /*0x109e000*/ <CoOpenAttendancePopup>d__45(int <>1__state);
        /*0x109e02c*/ void System.IDisposable.Dispose();
        /*0x109e030*/ bool MoveNext();
        /*0x109e3e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109e3f0*/ void System.Collections.IEnumerator.Reset();
        /*0x109e430*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoUpdateAttend>d__50 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x109e438*/ <CoUpdateAttend>d__50(int <>1__state);
        /*0x109e464*/ void System.IDisposable.Dispose();
        /*0x109e468*/ bool MoveNext();
        /*0x109e570*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109e578*/ void System.Collections.IEnumerator.Reset();
        /*0x109e5b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass69_0
    {
        /*0x10*/ int index;

        /*0x109d4b0*/ <>c__DisplayClass69_0();
        /*0x109d4b8*/ bool <FindEventBoss>b__0(PTShare.Define.SEventBoss f);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack;

        /*0x109d4dc*/ <>c__DisplayClass74_0();
        /*0x109d4e4*/ void <Send_BossBegin>b__0(ServerProtocol.ResEventBegin instance);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ double bossTotalDamage;
        /*0x20*/ System.Action<PTShare.Define.SProperty> action;

        /*0x109d598*/ <>c__DisplayClass75_0();
        /*0x109d5a0*/ void <Send_BossFinish>b__0(ServerProtocol.ResEventFinish instance);
    }

    class <>c__DisplayClass76_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action callBack;

        /*0x109d6f4*/ <>c__DisplayClass76_0();
        /*0x109d6fc*/ void <Send_BossMopUp>b__0(ServerProtocol.ResEventMopUp instance);
    }

    class <>c__DisplayClass77_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack;

        /*0x109d878*/ <>c__DisplayClass77_0();
        /*0x109d880*/ void <Send_BossHistory>b__0(ServerProtocol.ResEventBossHistory instance);
    }

    class <>c__DisplayClass78_0
    {
        /*0x10*/ System.Action<PTShare.Define.SGuildBossReplay> callBack;

        /*0x109d8f8*/ <>c__DisplayClass78_0();
        /*0x109d900*/ void <Send_BossReplay>b__0(ServerProtocol.ResEventReplay instance);
    }

    class <>c__DisplayClass81_0
    {
        /*0x10*/ TableData.TableData_Eventboss bossTable;

        /*0x109d978*/ <>c__DisplayClass81_0();
        /*0x109d980*/ bool <CheckReddotEventBoss>b__0(PTShare.Define.SEventBoss f);
    }

    class <>c__DisplayClass84_0
    {
        /*0x10*/ TableData.TableData_Eventcomplete table;

        /*0x109d9b0*/ <>c__DisplayClass84_0();
        /*0x109d9b8*/ bool <GetEventCompletePushcount>b__0(PTShare.Define.SManufacture f);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x109d9e8*/ <>c__DisplayClass87_0();
        /*0x109d9f0*/ void <Send_CompleteEnter>b__0(ServerProtocol.ResManufactureEnter response);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x109da1c*/ <>c__DisplayClass88_0();
        /*0x109da24*/ void <Send_CompleteInsert>b__0(ServerProtocol.ResManufactureInsert response);
    }

    class <>c__DisplayClass88_1
    {
        /*0x10*/ ServerProtocol.ResManufactureInsert response;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SManufacture> <>9__2;

        /*0x109dd88*/ <>c__DisplayClass88_1();
        /*0x109dd90*/ bool <Send_CompleteInsert>b__2(PTShare.Define.SManufacture f);
    }

    class <>c__DisplayClass95_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewards;
        /*0x18*/ System.Action<Rewards> <>9__0;

        /*0x109de28*/ <>c__DisplayClass95_0();
        /*0x109de30*/ void <GetCurrencyLocalReward>b__0(Rewards data);
    }

    class <>c__DisplayClass96_0
    {
        /*0x10*/ string trigger;
        /*0x18*/ string type;
        /*0x20*/ int requireValue;

        /*0x109dec8*/ <>c__DisplayClass96_0();
        /*0x109ded0*/ bool <FindCurrencyLocalTriggerData>b__0(DefineEvent.TriggerData data);
    }

    class <>c__DisplayClass98_0
    {
        /*0x10*/ int index;

        /*0x109def8*/ <>c__DisplayClass98_0();
        /*0x109df00*/ bool <FindEventExchangePacket>b__0(PTShare.Define.SEventExchange data);
    }

    class <>c__DisplayClass103_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int index;
        /*0x1c*/ int count;
        /*0x20*/ int defaultLimitCount;
        /*0x28*/ System.Action callBack;

        /*0x109b810*/ <>c__DisplayClass103_0();
        /*0x109b818*/ void <Send_EventExchange>b__0(ServerProtocol.ResEventExchange instance);
    }

    class <>c__DisplayClass107_0
    {
        /*0x10*/ int typeEventID;

        /*0x109ba94*/ <>c__DisplayClass107_0();
        /*0x109ba9c*/ bool <FindMissionPacket>b__0(PTShare.Define.SMission data);
    }

    class <>c__DisplayClass109_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x109bac0*/ <>c__DisplayClass109_0();
        /*0x109bac8*/ void <Send_EventMissionEnter>b__0(ServerProtocol.ResMissionEnter instance);
    }

    class <>c__DisplayClass110_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int eventMissionID;
        /*0x1c*/ int missionIndex;
        /*0x20*/ int missionPoint;
        /*0x28*/ System.Action callBack;
        /*0x30*/ System.Predicate<PTShare.Define.SQuestRow> <>9__1;

        /*0x109bb04*/ <>c__DisplayClass110_0();
        /*0x109bb0c*/ void <Send_EventMissionTake>b__0(ServerProtocol.ResMissionTake instance);
        /*0x109bd58*/ bool <Send_EventMissionTake>b__1(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass111_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int missionId;
        /*0x1c*/ int pointIndex;
        /*0x20*/ System.Action callBack;

        /*0x109bd7c*/ <>c__DisplayClass111_0();
        /*0x109bd84*/ void <Send_EventMissionExchange>b__0(ServerProtocol.ResMissionExchange instance);
    }

    class <>c__DisplayClass113_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Eventmission> missionDataList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SQuestRow> <>9__0;

        /*0x109bf3c*/ <>c__DisplayClass113_0();
        /*0x109bf44*/ bool <CheckReddotMission>b__0(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass120_0
    {
        /*0x10*/ int eventId;

        /*0x109c01c*/ <>c__DisplayClass120_0();
        /*0x109c024*/ bool <FindPassData>b__0(TableData.TableData_Eventpass data);
    }

    class <>c__DisplayClass121_0
    {
        /*0x10*/ int eventId;

        /*0x109c048*/ <>c__DisplayClass121_0();
        /*0x109c050*/ bool <FindPassPacket>b__0(PTShare.Define.SPass packet);
    }

    class <>c__DisplayClass122_0
    {
        /*0x10*/ int rewardTableIndex;

        /*0x109c074*/ <>c__DisplayClass122_0();
        /*0x109c07c*/ bool <FindPassRewardPacket>b__0(PTShare.Define.SPassReward pacekt);
    }

    class <>c__DisplayClass125_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<System.ValueTuple<string, int>> idleRewardData;
        /*0x20*/ int i;
        /*0x28*/ System.Action<TableData.TableData_Eventcurrencylocal> <>9__0;

        /*0x109c0a0*/ <>c__DisplayClass125_0();
        /*0x109c0a8*/ void <GetPassIdleRewardData>b__0(TableData.TableData_Eventcurrencylocal data);
    }

    class <>c__DisplayClass126_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<PTShare.Define.SPass> refreshList;
        /*0x20*/ int i;
        /*0x28*/ System.Action<ServerProtocol.ResEventPassRefresh> <>9__0;

        /*0x109c1a8*/ <>c__DisplayClass126_0();
        /*0x109c1b0*/ void <CheckBattlePassExpire>b__0(ServerProtocol.ResEventPassRefresh instance);
    }

    class <>c__DisplayClass129_0
    {
        /*0x10*/ int eventid;

        /*0x109c274*/ <>c__DisplayClass129_0();
        /*0x109c27c*/ bool <IncreasePassPoint>b__0(PTShare.Define.SPass packetData);
    }

    class <>c__DisplayClass130_0
    {
        /*0x10*/ int eventid;

        /*0x109c2a0*/ <>c__DisplayClass130_0();
        /*0x109c2a8*/ bool <SetPassPoint>b__0(PTShare.Define.SPass packetData);
    }

    class <>c__DisplayClass131_0
    {
        /*0x10*/ int eventId;

        /*0x109c2cc*/ <>c__DisplayClass131_0();
        /*0x109c2d4*/ bool <SetPassPremium>b__0(PTShare.Define.SPass packetData);
    }

    class <>c__DisplayClass133_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ int passRewardIndex;
        /*0x20*/ System.Action callBack;

        /*0x109c2f8*/ <>c__DisplayClass133_0();
        /*0x109c300*/ void <Send_BattlePassReward>b__0(ServerProtocol.ResEventPassReward instance);
    }

    class <>c__DisplayClass135_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SPassPoint> passPointList;

        /*0x109c524*/ <>c__DisplayClass135_0();
        /*0x109c52c*/ void <ParseSPoint>b__0(Rewards data);
    }

    struct <>c__DisplayClass138_0
    {
        /*0x10*/ TableData.TableData_Event tableDataEvent;
        /*0x18*/ PTShare.Define.SQuest sQuest;
        /*0x20*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> pointQuestList;
    }

    class <>c__DisplayClass146_0
    {
        /*0x10*/ EventManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> callBack;

        /*0x109c63c*/ <>c__DisplayClass146_0();
        /*0x109c644*/ void <Send_Roulette>b__0(ServerProtocol.ResEventRoulette response);
    }
}

class EventMissionEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_missionName;
    /*0x20*/ LocalizeString m_missionInfo;
    /*0x28*/ LocalizeString[] m_missionPoints;
    /*0x30*/ UnityEngine.GameObject m_rewardPointParent;
    /*0x38*/ ItemTableRewardSlot m_rewardSlot;
    /*0x40*/ UnityEngine.UI.Button m_rewardBtn;
    /*0x48*/ UnityEngine.UI.Button m_quickMoveBtn;
    /*0x50*/ TableData.TableData_Eventmission m_eventMissionData;
    /*0x58*/ DefineEvent.TriggerData m_triggerData;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x1163fbc*/ EventMissionEntity();
    /*0x1163100*/ void InitEntity(TableData.TableData_Eventmission eventMissionData);
    /*0x1163c5c*/ int GetScore();
    /*0x1163d58*/ bool IsReceiveReward();
    /*0x1163148*/ void SetMissionData();
    /*0x11633b4*/ void SetReward();
    /*0x116328c*/ void SetMissionPoint();
    /*0x1163584*/ void SetTitle();
    /*0x11636d4*/ void SetInfo();
    /*0x11638a4*/ void UpdateButton();
    /*0x1163d74*/ bool IsUnlockContent();
    /*0x1163d90*/ void OnClickReward();
    /*0x1163f1c*/ void OnClickMove();
    /*0x1164060*/ bool <GetScore>b__11_0(PTShare.Define.SQuestRow data);
    /*0x1164090*/ void <OnClickReward>b__20_0();
}

class EventMissionPaybackEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_value;
    /*0x20*/ LocalizeString m_progress;
    /*0x28*/ ItemTableRewardSlot[] m_rewardSlots;
    /*0x30*/ UnityEngine.GameObject m_checkObject;
    /*0x38*/ UnityEngine.GameObject m_checkIcon;
    /*0x40*/ AtlasImage m_rewardFrame;
    /*0x48*/ UnityEngine.UI.Button m_rewardBtn;
    /*0x50*/ UnityEngine.UI.Button m_quickMoveBtn;
    /*0x58*/ TableData.TableData_Eventmission m_eventMissionData;
    /*0x60*/ DefineEvent.TriggerData m_triggerData;

    /*0x11655dc*/ EventMissionPaybackEntity();
    /*0x1164120*/ void InitEntity(TableData.TableData_Eventmission eventMissionData);
    /*0x1164158*/ void SetMissionData();
    /*0x116429c*/ void SetUI();
    /*0x11647d0*/ void SetRewards();
    /*0x11649d4*/ void UpdateButton();
    /*0x1164e00*/ int GetScore();
    /*0x1164de4*/ bool IsReceiveReward();
    /*0x1164f68*/ void OnClickReward();
    /*0x11650f4*/ void OnClickMove();
    /*0x1165438*/ void DoRewardEffect();
    /*0x1164efc*/ System.Collections.IEnumerator CoRewardEffectLoop();
    /*0x1165640*/ bool <GetScore>b__15_0(PTShare.Define.SQuestRow data);
    /*0x1165670*/ void <OnClickReward>b__17_0();
    /*0x1165674*/ void <OnClickMove>b__18_0(bool confirm);

    class <CoRewardEffectLoop>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPaybackEntity <>4__this;

        /*0x109ecec*/ <CoRewardEffectLoop>d__20(int <>1__state);
        /*0x109ed18*/ void System.IDisposable.Dispose();
        /*0x109ed1c*/ bool MoveNext();
        /*0x109eed0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109eed8*/ void System.Collections.IEnumerator.Reset();
        /*0x109ef18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventMissionPointRewardEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_pointRewardSlot;
    /*0x20*/ LocalizeString m_pointRewardText;
    /*0x28*/ AtlasImage m_rewardButtonImage;
    /*0x30*/ UnityEngine.GameObject m_soldOutObject;
    /*0x38*/ AtlasImage m_checkIcon;
    /*0x40*/ bool m_isSoldOut;
    /*0x41*/ bool m_isOpen;
    /*0x48*/ TableData.TableData_Eventmissionpoint m_missionPointData;

    /*0x11cc1f4*/ EventMissionPointRewardEntity();
    /*0x11cbd94*/ void OnDisable();
    /*0x11cbd9c*/ void Init_Entity(TableData.TableData_Eventmissionpoint missionPointTable, bool isOpen, bool soldOut);
    /*0x11cc018*/ void OnClickReward();
    /*0x11cc064*/ System.Collections.IEnumerator CoShowReward();
    /*0x11cc0d0*/ void DoRewardEffect();
    /*0x11cbfac*/ System.Collections.IEnumerator CoRewardEffectLoop();

    class <>c
    {
        static /*0x0*/ EventMissionPointRewardEntity.<> <>9;
        static /*0x8*/ System.Action <>9__11_0;

        static /*0x109ef20*/ <>c();
        /*0x109ef80*/ <>c();
        /*0x109ef88*/ void <CoShowReward>b__11_0();
    }

    class <CoShowReward>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPointRewardEntity <>4__this;

        /*0x109f2c8*/ <CoShowReward>d__11(int <>1__state);
        /*0x109f2f4*/ void System.IDisposable.Dispose();
        /*0x109f2f8*/ bool MoveNext();
        /*0x109f4d4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109f4dc*/ void System.Collections.IEnumerator.Reset();
        /*0x109f51c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRewardEffectLoop>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPointRewardEntity <>4__this;

        /*0x109f018*/ <CoRewardEffectLoop>d__13(int <>1__state);
        /*0x109f044*/ void System.IDisposable.Dispose();
        /*0x109f048*/ bool MoveNext();
        /*0x109f278*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109f280*/ void System.Collections.IEnumerator.Reset();
        /*0x109f2c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventMissionPopup : EventPopupBase
{
    static float GRID_PADDING = 3;
    static /*0x0*/ System.Action<bool> OnRefreshTab;
    static /*0x8*/ System.Action<int> OnChangeTab;
    /*0x78*/ EventMissionTab m_eventMissionTabPrefab;
    /*0x80*/ UnityEngine.UI.GridLayoutGroup m_tabGridGroup;
    /*0x88*/ ScrollContent_EventMissionEntity m_scrollContent;
    /*0x90*/ EventMissionPointRewardEntity[] m_eventPointRewardEntitys;
    /*0x98*/ LocalizeString m_accPointText;
    /*0xa0*/ System.Collections.Generic.List<EventMissionTab> m_eventMissionTabEntityList;
    /*0xa8*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<TableData.TableData_Eventmission>> m_eventMissionDataDictionary;
    /*0xb0*/ System.Collections.Generic.List<TableData.TableData_Eventmissionpoint> m_eventMissionPointList;
    /*0xb8*/ PTShare.Define.SMission m_sMission;
    /*0xc0*/ int m_currTabIndex;
    /*0xc4*/ DefineEvent.EVENT_MISSION_TYPE m_eventMissionType;

    static /*0x11ce9d8*/ EventMissionPopup();
    /*0x11ce910*/ EventMissionPopup();
    /*0x11cc434*/ void OnCreate();
    /*0x11cc438*/ void OnDelete();
    /*0x11cc43c*/ void OnEnter();
    /*0x11cc44c*/ void OnFinish();
    /*0x11cc450*/ void OnLeave();
    /*0x11cc460*/ void OnStart();
    /*0x11cc464*/ void OnExit();
    /*0x11cc538*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11ccc9c*/ void SetEventMissionData();
    /*0x11cc7f8*/ void SetEventTab();
    /*0x11cd02c*/ System.Collections.IEnumerator CoUpdateTab();
    /*0x11cd098*/ void UpdateEventTab();
    /*0x11cd230*/ void UpdateReddot();
    /*0x11cd63c*/ void UpdateEventRewards();
    /*0x11ccc38*/ void UpdateTab(int tab, bool resetscrollposition);
    /*0x11cd93c*/ void UpdateMissionScrollContent(bool resetscrollposition);
    /*0x11ccbc8*/ bool UnLockTab(int tabIndex);
    /*0x11cdb9c*/ void UpdateLeftTime();
    /*0x11cde2c*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0x11cda4c*/ bool AllClearTabMission(int tabIndex);
    /*0x11cde98*/ void BindEvent();
    /*0x11ce0d0*/ void RemoveEvent();
    /*0x11ce2f4*/ void HandleRefreshTab(bool isLog);
    /*0x11ce7d8*/ void HandleOnChangeTab(int tab);
    /*0x11ce864*/ void HandleScrollContent(int index, EventMissionEntity obj);
    /*0x11ce9dc*/ void <OnExit>b__20_0();

    class <CoUpdateTab>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPopup <>4__this;

        /*0x109f8bc*/ <CoUpdateTab>d__24(int <>1__state);
        /*0x109f8e8*/ void System.IDisposable.Dispose();
        /*0x109f8ec*/ bool MoveNext();
        /*0x109fabc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109fac4*/ void System.Collections.IEnumerator.Reset();
        /*0x109fb04*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ System.Collections.Generic.Dictionary.Enumerator<int, System.Collections.Generic.List<TableData.TableData_Eventmission>> iter;

        /*0x109f524*/ <>c__DisplayClass26_0();
    }

    class <>c__DisplayClass26_1
    {
        /*0x10*/ int i;
        /*0x18*/ EventMissionPopup.<> CS$<>8__locals1;

        /*0x109f52c*/ <>c__DisplayClass26_1();
        /*0x109f534*/ bool <UpdateReddot>b__0(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ EventMissionPopup <>4__this;
        /*0x18*/ int eventDay;

        /*0x109f5e4*/ <>c__DisplayClass31_0();
        /*0x109f5ec*/ void <UpdateLeftTime>b__0(TableData.TableData_Eventmission data);
    }

    class <CoUpdateLeftTime>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventMissionPopup <>4__this;

        /*0x109f7cc*/ <CoUpdateLeftTime>d__32(int <>1__state);
        /*0x109f7f8*/ void System.IDisposable.Dispose();
        /*0x109f7fc*/ bool MoveNext();
        /*0x109f86c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109f874*/ void System.Collections.IEnumerator.Reset();
        /*0x109f8b4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ EventMissionPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SQuestRow> <>9__0;

        /*0x109f644*/ <>c__DisplayClass36_0();
        /*0x109f64c*/ bool <HandleRefreshTab>b__0(PTShare.Define.SQuestRow data);
    }

    class <>c__DisplayClass36_1
    {
        /*0x10*/ System.Collections.Generic.Dictionary.Enumerator<int, System.Collections.Generic.List<TableData.TableData_Eventmission>> iter;

        /*0x109f70c*/ <>c__DisplayClass36_1();
    }

    class <>c__DisplayClass36_2
    {
        /*0x10*/ int i;
        /*0x18*/ EventMissionPopup.<> CS$<>8__locals1;

        /*0x109f714*/ <>c__DisplayClass36_2();
        /*0x109f71c*/ bool <HandleRefreshTab>b__1(PTShare.Define.SQuestRow data);
    }
}

class EventMissionPopup_Payback : EventMissionPopup
{
    /*0xc8*/ ScrollContent_EventMissionPaybackEntity m_scrollContentPayback;

    /*0x11cef8c*/ EventMissionPopup_Payback();
    /*0x11cec4c*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11cec50*/ void UpdateMissionScrollContent(bool resetscrollposition);
    /*0x11ced24*/ void HandleScrollContent(int index, EventMissionPaybackEntity obj);
    /*0x11cedd0*/ void BindEvent();
    /*0x11ceeb8*/ void RemoveEvent();
}

class EventMissionPopup_Summon : EventMissionPopup
{
    /*0x11cefec*/ EventMissionPopup_Summon();
}

class EventMissionTab : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_lockBtnObject;
    /*0x20*/ UnityEngine.GameObject m_selectedBtnObject;
    /*0x28*/ UnityEngine.GameObject m_activeBtnObject;
    /*0x30*/ LocalizeString[] m_dayTexts;
    /*0x38*/ UnityEngine.GameObject m_reddot;
    /*0x40*/ int m_tabIndex;
    /*0x44*/ DefineEvent.TAB_TYPE m_missionTabType;
    /*0x48*/ DefineEvent.EVENT_MISSION_TYPE m_missionType;

    /*0x11cf298*/ EventMissionTab();
    /*0x11cf04c*/ void OnEnable();
    /*0x11cf054*/ void OnDisable();
    /*0x11ccfc4*/ void InitTab(string eventTabKey, int tabIndex, DefineEvent.TAB_TYPE tabType, DefineEvent.EVENT_MISSION_TYPE eventMissionType, TableData.TableData_Eventmission eventData);
    /*0x11cf05c*/ void SetTabDay(string key);
    /*0x11cf180*/ void SetTabButton();
    /*0x11cd61c*/ void SetReddot(bool enable);
    /*0x11cf1f8*/ void OnClickUnlock();
    /*0x11cf1fc*/ void OnClickTab();
    /*0x11cf050*/ void BindEvent();
    /*0x11cf058*/ void DeleteEvent();
}

class EventParentPopup : GuiBase
{
    /*0x40*/ EventPopupBase m_currEvent;

    /*0x11cfbe0*/ EventParentPopup();
    /*0x11cf878*/ void OnCreate();
    /*0x11cf87c*/ void OnDelete();
    /*0x11cf880*/ void OnEnter();
    /*0x11cf884*/ void OnFinish();
    /*0x11cf888*/ void OnLeave();
    /*0x11cf88c*/ void OnStart();
    /*0x11cf890*/ void OnExit();
    /*0x11cf978*/ void InitPopup(string eventPopupName, TableData.TableData_Event eventData);
    /*0x11cf8b8*/ void CloseEventPopup();
}

class EventPopupBase : GuiBase
{
    /*0x40*/ UnityEngine.UI.Image m_bannerImage;
    /*0x48*/ LocalizeString m_bannerTitleText;
    /*0x50*/ LocalizeString m_bannerInfoText;
    /*0x58*/ LocalizeString m_leftTimeText;
    /*0x60*/ TableData.TableData_Event m_eventData;
    /*0x68*/ TableData.TableData_Eventpreset m_eventPreset;
    /*0x70*/ UnityEngine.Coroutine m_timerCoroutine;

    /*0x11ce9d0*/ EventPopupBase();
    /*0x11cea5c*/ void OnExit();
    /*0x11cc634*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d05ec*/ void SetBanner(string bannerImage);
    /*0x11d0324*/ void SetEventTitle(string titleKey);
    /*0x11d0464*/ void SetEventInfo(string infoKey);
    /*0x11d079c*/ void SetEventPage();
    /*0x11d0994*/ void UpdateLeftTime();
    /*0x11d05a4*/ void PlayTimer();
    /*0x11d027c*/ void StopTimer();
    /*0x11d0ab4*/ bool IsExpire();
    /*0x11d0bf0*/ void HandleExpireEvent(TableData.TableData_Event eventData);
    /*0x11d0c50*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0x11d0cbc*/ void OnClickHelp();

    class <CoUpdateLeftTime>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventPopupBase <>4__this;

        /*0x109fb0c*/ <CoUpdateLeftTime>d__18(int <>1__state);
        /*0x109fb38*/ void System.IDisposable.Dispose();
        /*0x109fb3c*/ bool MoveNext();
        /*0x109fbc4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109fbcc*/ void System.Collections.IEnumerator.Reset();
        /*0x109fc0c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventExchangeEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage[] m_eventCurrencyIcons;
    /*0x20*/ LocalizeString[] m_exchangeAmountTexts;
    /*0x28*/ LocalizeString m_exchangeLimitText;
    /*0x30*/ ItemTableRewardSlot m_rewardSlot;
    /*0x38*/ UnityEngine.UI.Button m_exchangeBtn;
    /*0x40*/ AtlasImage m_soldOutIcon;
    /*0x48*/ UnityEngine.Material m_grayColorMat;
    /*0x50*/ LocalizeString m_exchangeBtnText;
    /*0x58*/ TableData.TableData_Eventexchange m_eventExchangeData;
    /*0x60*/ int m_exchangeLeftCount;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_currencyList;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x78*/ DefineEvent.EXCHANGE_EVENT_TYPE m_exchangeType;

    /*0x11584c4*/ EventExchangeEntity();
    /*0x11574cc*/ void InitEntity(TableData.TableData_Eventexchange eventExchangeData, DefineEvent.EXCHANGE_EVENT_TYPE exchangeType);
    /*0x1157500*/ void SetEntityData();
    /*0x1157830*/ void UpdateUI();
    /*0x11575d8*/ void SetCurrencyIcon();
    /*0x1158320*/ void SetItemSlotMaterial(UnityEngine.GameObject parentObject, UnityEngine.Material material);
    /*0x1157d58*/ void UpdateExchangeCount();
    /*0x115786c*/ void UpdateAmountText();
    /*0x1157eb8*/ void UpdateSoldOut();
    /*0x1157f88*/ void UpdateButton();
    /*0x1157c6c*/ void UpdateRewardSlot();
    /*0x1158434*/ void OnClickExchange();
}

class EventExchangePopup : EventPopupBase
{
    static /*0x0*/ System.Action OnRefreshPopup;
    /*0x78*/ AtlasImage[] m_currencyItemIcons;
    /*0x80*/ LocalizeString[] m_currencyItemAmounts;
    /*0x88*/ ScrollContent_EventExchangeEntity m_scrollContent;
    /*0x90*/ System.Collections.Generic.List<Rewards> m_currencyList;
    /*0x98*/ System.Collections.Generic.List<TableData.TableData_Eventexchange> m_eventExchangeDataList;

    static /*0x1159494*/ EventExchangePopup();
    /*0x11593dc*/ EventExchangePopup();
    /*0x115855c*/ DefineEvent.EXCHANGE_EVENT_TYPE GetExchnageEventType();
    /*0x1158564*/ void OnCreate();
    /*0x1158568*/ void OnDelete();
    /*0x115856c*/ void OnEnter();
    /*0x1158790*/ void OnFinish();
    /*0x1158794*/ void OnLeave();
    /*0x11589b0*/ void OnStart();
    /*0x11589b4*/ void OnExit();
    /*0x1158a88*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x1158b24*/ void InitExchangeDataList();
    /*0x1158e6c*/ void UpdateUI();
    /*0x1158c10*/ void SetCurrencyIcon();
    /*0x1158f3c*/ void UpdateAmountText();
    /*0x1158e90*/ void UpdateExchangeScrollContent();
    /*0x1158570*/ void BindEvent();
    /*0x1158798*/ void RemoveEvent();
    /*0x1159218*/ void HandleRefreshPopup();
    /*0x115923c*/ void HandleDailyChange();
    /*0x1159340*/ void HandleScrollContent(int index, EventExchangeEntity obj);
    /*0x1159498*/ void <OnExit>b__13_0();
}

class EventExchangePopup_Shop : EventExchangePopup
{
    /*0x11596a8*/ EventExchangePopup_Shop();
    /*0x1159554*/ DefineEvent.EXCHANGE_EVENT_TYPE GetExchnageEventType();
    /*0x115955c*/ void UpdateLeftTime();
}

class ExchangeUsePopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot m_exchangeItemSlot;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_desc;
    /*0x58*/ LocalizeString m_subTitleText;
    /*0x60*/ UnityEngine.UI.Slider m_AmountSilder;
    /*0x68*/ LocalizeString m_SilderText;
    /*0x70*/ LocalizeString m_ExchangeCountText;
    /*0x78*/ LocalizeString m_exchangeBtnText;
    /*0x80*/ UnityEngine.GameObject[] m_tokenObjects;
    /*0x88*/ AtlasImage[] m_tokenItemIcons;
    /*0x90*/ LocalizeString[] m_tokenItemAmounts;
    /*0x98*/ TableData.TableData_Eventexchange m_eventExchangeData;
    /*0xa0*/ System.Collections.Generic.List<Rewards> m_currencyList;
    /*0xa8*/ Rewards m_exchangeItemReward;
    /*0x170*/ DefineEvent.EXCHANGE_EVENT_TYPE m_exchangeType;
    /*0x174*/ int m_nMaxAmount;
    /*0x178*/ int m_nAmount;

    /*0x11d84b8*/ ExchangeUsePopup();
    /*0x11d6ae0*/ void OnCreate();
    /*0x11d6ae4*/ void OnDelete();
    /*0x11d6ae8*/ void OnEnter();
    /*0x11d6b54*/ void OnFinish();
    /*0x11d6b58*/ void OnLeave();
    /*0x11d6b5c*/ void OnStart();
    /*0x11d6b60*/ void OnExit();
    /*0x11d6bdc*/ void InitializePopup(TableData.TableData_Eventexchange eventExchange, int defaultMaxCount, DefineEvent.EXCHANGE_EVENT_TYPE exchangeType);
    /*0x11d6c2c*/ void SetData();
    /*0x11d6d50*/ void ComputeMaxAmount(int defaultMaxCount);
    /*0x11d6fbc*/ void SetLocalizeItem();
    /*0x11d7bc0*/ void SetTokenItems();
    /*0x11d7cc0*/ void ChangeAmount(int _amount);
    /*0x11d838c*/ void OnClickChangeAmount(int count);
    /*0x11d83e0*/ void OnClickExchange();
    /*0x11d8530*/ void <OnClickExchange>b__31_0();
}

class EventPurchasePopup : EventPopupBase
{
    /*0x78*/ TableData.TableData_Eventbuyinapp m_eventBuyInApp;

    /*0x11d1244*/ EventPurchasePopup();
    /*0x11d10b0*/ void OnCreate();
    /*0x11d10b4*/ void OnDelete();
    /*0x11d10b8*/ void OnEnter();
    /*0x11d10c8*/ void OnFinish();
    /*0x11d10cc*/ void OnLeave();
    /*0x11d10dc*/ void OnStart();
    /*0x11d10e0*/ void OnExit();
    /*0x11d11b4*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d11f8*/ void InitEventData();
    /*0x11d1230*/ void BindEvent();
    /*0x11d1240*/ void RemoveEvent();
    /*0x11d124c*/ void <OnExit>b__7_0();
}

class FirstPurchasePopup : EventPurchasePopup
{
    /*0x80*/ ItemTableRewardSlot[] m_itemSlots;
    /*0x88*/ DefineEvent.TriggerData m_triggerData;

    /*0x11da4e8*/ FirstPurchasePopup();
    /*0x11da128*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11da370*/ void InitEventData();
    /*0x11da174*/ void SetItemSlots();
    /*0x11da4b8*/ void OnClickButton();
}

class EventQuestPopup : EventPopupBase
{
    /*0x78*/ ScrollContent_TriggerMissionEntity m_scrollContent;
    /*0x80*/ EventQuestProgress m_questProgress;
    /*0x88*/ System.Collections.Generic.List<TableData.TableData_Eventquest> m_questList;
    /*0x90*/ PTShare.Define.SQuest m_sQuest;
    /*0x98*/ int m_tmpClearScore;

    /*0x11d2398*/ EventQuestPopup();
    /*0x11d14d8*/ void OnCreate();
    /*0x11d14dc*/ void OnDelete();
    /*0x11d14e0*/ void OnEnter();
    /*0x11d14e4*/ void OnFinish();
    /*0x11d14e8*/ void OnLeave();
    /*0x11d14ec*/ void OnStart();
    /*0x11d14f0*/ void OnExit();
    /*0x11d1694*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d172c*/ void BindEvent();
    /*0x11d1514*/ void RemoveEvent();
    /*0x11d18fc*/ void SetQuestEventData();
    /*0x11d1bdc*/ void HandleDailyChange();
    /*0x11d1e38*/ void HandleRefresh();
    /*0x11d1eac*/ void HandleScrollContnet(int index, TriggerMissionEntity obj);
    /*0x11d21f8*/ System.Collections.Generic.List<Rewards> GetRewards(string reward);
    /*0x11d1b6c*/ TableData.TableData_Eventquestgroup FindQuestGroup(string eventGroup);
    /*0x11d2410*/ int <SetQuestEventData>b__15_0(TableData.TableData_Eventquest lhs, TableData.TableData_Eventquest rhs);
    /*0x11d2818*/ void <HandleDailyChange>b__16_1();
    /*0x11d2828*/ void <HandleDailyChange>b__16_0();

    class <>c__DisplayClass15_0
    {
        /*0x10*/ TableData.TableData_Eventquest lhs;
        /*0x18*/ TableData.TableData_Eventquest rhs;

        /*0x109fc14*/ <>c__DisplayClass15_0();
        /*0x109fc1c*/ bool <SetQuestEventData>b__1(PTShare.Define.SQuestRow f);
        /*0x109fc4c*/ bool <SetQuestEventData>b__2(PTShare.Define.SQuestRow f);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ EventQuestPopup <>4__this;
        /*0x18*/ int index;
        /*0x20*/ TableData.TableData_Eventquestgroup questGroup;

        /*0x109fc7c*/ <>c__DisplayClass18_0();
        /*0x109fc84*/ bool <HandleScrollContnet>b__0(PTShare.Define.SQuestRow f);
        /*0x109fd1c*/ void <HandleScrollContnet>b__1();
    }
}

class EventQuestProgress : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_CurrentPoint;
    /*0x20*/ LocalizeString m_time;
    /*0x28*/ UnityEngine.UI.Slider m_PointSlider;
    /*0x30*/ System.Collections.Generic.List<EventQuestProgressEntity> m_liProgressEntity;
    /*0x38*/ PTShare.Define.SQuest m_sQuest;
    /*0x40*/ TableData.TableData_Event m_eventData;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Eventquestgroup> m_pointQuestList;
    /*0x50*/ int m_maxPoint;

    /*0x11d2f8c*/ EventQuestProgress();
    /*0x11d2838*/ void OnDisable();
    /*0x11d18b4*/ void InitProgress(TableData.TableData_Event eventData);
    /*0x11d2840*/ void BindEvent();
    /*0x11d283c*/ void RemoveEvent();
    /*0x11d2844*/ void SetData();
    /*0x11d2a04*/ void SetEntitys();
    /*0x11d2e00*/ void SetStatusView();
    /*0x11d2e7c*/ System.Collections.IEnumerator CoTimer();

    class <CoTimer>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EventQuestProgress <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <seconds>5__2;

        /*0x109ff1c*/ <CoTimer>d__15(int <>1__state);
        /*0x109ff48*/ void System.IDisposable.Dispose();
        /*0x109ff4c*/ bool MoveNext();
        /*0x10a00a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a00a8*/ void System.Collections.IEnumerator.Reset();
        /*0x10a00e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EventQuestProgressEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action<int> OnExChagneEvent;
    /*0x18*/ AtlasImage m_BoxIcon;
    /*0x20*/ AtlasImage m_Background;
    /*0x28*/ UnityEngine.GameObject m_RewardParent;
    /*0x30*/ UnityEngine.GameObject m_reddot;
    /*0x38*/ LocalizeString m_NeedPoint;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_treasureBoxSkel;
    /*0x48*/ int m_nEventQuestIndex;
    /*0x4c*/ int m_nIndex;
    /*0x50*/ int m_nPoint;
    /*0x54*/ int m_nMaxPoint;
    /*0x58*/ int m_nEventId;
    /*0x5c*/ bool m_bIsOpen;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_rewards;

    static /*0x11d39f8*/ EventQuestProgressEntity();
    static /*0x11d3044*/ void add_OnExChagneEvent(System.Action<int> value);
    static /*0x11d3138*/ void remove_OnExChagneEvent(System.Action<int> value);
    /*0x11d3980*/ EventQuestProgressEntity();
    /*0x11d322c*/ void OnDisable();
    /*0x11d2ee8*/ void InitializeEntity(int _nIndex, int _nEventQuestIndex, int _nEventId, int _nPoint, int _nMaxPoint, bool _bOpen, System.Collections.Generic.List<Rewards> _rewards);
    /*0x11d3480*/ bool IsOnReddot();
    /*0x11d323c*/ void OpenBox(bool _bOpen);
    /*0x11d3330*/ void SetTreasureBox();
    /*0x11d34a0*/ void SetTreasureBox(string animName, bool loop);
    /*0x11d3468*/ void SetReddot(bool _enable);
    /*0x11d3528*/ void OnClick_RewardBox();
    /*0x11d36d4*/ void ViewReward(bool isReceive);
    /*0x11d3234*/ void HideReward();
    /*0x11d3930*/ void SetActiveReward(bool _enable);
}

class EventRoulettePopup : EventPopupBase
{
    /*0x78*/ WheelSpinSystem m_wheelSpinSystem;
    /*0x80*/ UnityEngine.GameObject m_freeParent;
    /*0x88*/ UnityEngine.GameObject m_currencyParent;
    /*0x90*/ LocalizeString m_freeAmount;
    /*0x98*/ AmountSlot[] m_currencyAmount;
    /*0xa0*/ LocalizeString[] m_currencyText;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> m_rouletteList;

    /*0x11d4370*/ EventRoulettePopup();
    /*0x11d3c0c*/ void OnCreate();
    /*0x11d3c10*/ void OnDelete();
    /*0x11d3c14*/ void OnEnter();
    /*0x11d3c18*/ void OnFinish();
    /*0x11d3c1c*/ void OnLeave();
    /*0x11d3c20*/ void OnStart();
    /*0x11d3c24*/ void OnExit();
    /*0x11d3c68*/ void InitEventPopup(TableData.TableData_Event eventData);
    /*0x11d3cac*/ void BindEvent();
    /*0x11d4198*/ void RemoveEvent();
    /*0x11d3cb0*/ void SetData();
    /*0x11d3ce8*/ void SetUI();
    /*0x11d419c*/ void OnClickCurrency(int number);
    /*0x11d43e8*/ void <OnClickCurrency>b__19_0(PTShare.Define.SProperty response);
}

class WheelSpinEntity : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnSpinEnd;
    /*0x18*/ WheelSpinIcon[] m_wheelIcons;
    /*0x20*/ float m_spinSpeed;
    /*0x24*/ int m_currIndex;
    /*0x28*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x30*/ UnityEngine.Coroutine m_coroutine;
    /*0x38*/ int m_banner;
    /*0x40*/ System.Collections.Generic.List<TableData.TableData_Eventroulette> m_tableDataList;
    /*0x48*/ int m_goal;

    static /*0xdffa38*/ WheelSpinEntity();
    /*0xdff9b8*/ WheelSpinEntity();
    /*0xdfeaf8*/ void OnDisable();
    /*0xdfeb28*/ void InitEntity(System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<TableData.TableData_Eventroulette> rouletteList, int startIndex);
    /*0xdfed38*/ float Height();
    /*0xdfedf4*/ Rewards GetReward(int index);
    /*0xdfee90*/ bool IsReady();
    /*0xdfeea0*/ bool Spin(float delay, int spinCount, int goal);
    /*0xdfefe8*/ void Skip();
    /*0xdfef58*/ System.Collections.IEnumerator CoSpin(float delay, int spinCount, int goal);
    /*0xdfebf4*/ void UpdateWheelUI();
    /*0xdffa3c*/ bool <CoSpin>g__WheelLoopUpdate|16_0(float _speed, ref WheelSpinEntity.<> );

    struct <>c__DisplayClass16_0
    {
        /*0x10*/ WheelSpinEntity <>4__this;
        /*0x18*/ int leftSpin;
    }

    class <CoSpin>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ WheelSpinEntity <>4__this;
        /*0x28*/ float delay;
        /*0x2c*/ int goal;
        /*0x30*/ int spinCount;
        /*0x38*/ WheelSpinEntity.<> <>8__1;
        /*0x48*/ int <totalSpin>5__2;
        /*0x4c*/ float <speed>5__3;
        /*0x50*/ float <minSpeed>5__4;

        /*0xd8bdec*/ <CoSpin>d__16(int <>1__state);
        /*0xd8be18*/ void System.IDisposable.Dispose();
        /*0xd8be1c*/ bool MoveNext();
        /*0xd8c248*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8c250*/ void System.Collections.IEnumerator.Reset();
        /*0xd8c290*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WheelSpinIcon : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Color[] AMOUNT_COLOR;
    /*0x20*/ AtlasImage m_bg;
    /*0x28*/ AtlasImage m_itemIcon;
    /*0x30*/ LocalizeString m_itemName;
    /*0x38*/ LocalizeString m_itemAmount;

    /*0xdffb90*/ WheelSpinIcon();
    /*0xdff0f8*/ void InitIcon(Rewards rewards, bool banner);
    /*0xdff544*/ void InitIcon(Rewards rewards, TableData.TableData_Eventroulette tableData, bool banner);
    /*0xdfed70*/ float Height();
}

class WheelSpinSystem : UnityEngine.MonoBehaviour
{
    /*0x18*/ WheelSpinEntity[] m_wheels;
    /*0x20*/ float m_spinInterval;
    /*0x28*/ UnityEngine.GameObject m_skipButton;
    /*0x30*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x38*/ PTShare.Define.SProperty m_gain;
    /*0x40*/ int m_spinCount;

    /*0xe00608*/ WheelSpinSystem();
    /*0xdffc84*/ void OnDisable();
    /*0xdffd78*/ void InitSystem(System.Collections.Generic.List<TableData.TableData_Eventroulette> rouletteList);
    /*0xe00194*/ bool IsReadySpin();
    /*0xe00200*/ void OnSpin(PTShare.Define.SProperty sProperty);
    /*0xe003f0*/ void SetSpinCount();
    /*0xe0009c*/ void BindEvent();
    /*0xdffc88*/ void RemoveEvent();
    /*0xe00464*/ void HandleSpinEnd();
    /*0xe00598*/ void OnClickSkip();
}

class FriendManager : Singleton.Data.SingletonData<FriendManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SFriend> m_curFriendList;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_curReqFriendList;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_curBlackList;
    /*0x38*/ System.Collections.Generic.List<long> m_curBlackLongList;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> m_curSearchFriendList;
    /*0x48*/ int m_curTodayRecvPoint;
    /*0x4c*/ int m_curTodaySendPoint;
    /*0x50*/ CFriendSort_ConnectionStatus m_cFriendSortConnection;
    /*0x58*/ CFriendSort_Name m_cFriendSortName;
    /*0x60*/ FriendSortType m_eFriendSortType;
    /*0x64*/ bool m_newRequestorReddot;
    /*0x65*/ bool m_newMercenaryReddot;
    /*0x68*/ int _nArrIndex;
    /*0x6c*/ int _nStartCount;
    /*0x70*/ int _nEndCount;
    /*0x78*/ PTShare.Define.SFriend _sFriendInfo;
    /*0x80*/ PTShare.Define.SSearchPlayer _sSearchInfo;

    /*0x11e2ef0*/ FriendManager();
    /*0x11e1f48*/ string get_UserToken();
    /*0x11e1fc8*/ bool InitInstance();
    /*0x11e1fd0*/ void ReleaseInstance();
    /*0x11e1fd4*/ void Send_FriendList(System.Action _showResult);
    /*0x11decac*/ void Send_FriendRequestors(System.Action _showResult);
    /*0x11e210c*/ void Send_BlackList(System.Action _showResult);
    /*0x11dfe34*/ void Send_AcceptFriend(System.Action _callback, long _acceptAccountID);
    /*0x11e2244*/ void Send_DeleteFriend(System.Action _callback, long _acceptAccountID);
    /*0x11e0064*/ void Send_DenyFriend(System.Action _callback, long _acceptAccountID);
    /*0x11dfc04*/ void Send_InviteFriend(System.Action _callback, long _acceptAccountID);
    /*0x11dd740*/ void Send_SendPointFriend(System.Action _callback, long _acceptAccountID);
    /*0x11e1b2c*/ void Send_SearchFriend(System.Action _callback, string _query);
    /*0x11dd314*/ void Send_TakePointFriend(System.Action _callback, long _acceptAccountID);
    /*0x11def00*/ void Send_AllAtOncePointFriend(System.Action _callback);
    /*0x11e2394*/ void Send_AddBlacklist(System.Action _callback, long _accountid);
    /*0x11dfabc*/ void Send_RemoveBlacklist(System.Action _callback, long _accountid);
    /*0x11dd954*/ void Send_Sparring(long _accountid);
    /*0x11e24dc*/ void SetBlacklist(System.Collections.Generic.List<PTShare.Define.SPlayer> blacklist);
    /*0x11e2664*/ void SetBlacklist(System.Collections.Generic.List<long> blacklist);
    /*0x11e26f4*/ void SetFriendList(System.Collections.Generic.List<PTShare.Define.SFriend> friendlist);
    /*0x11deaa0*/ System.Collections.Generic.List<PTShare.Define.SFriend> GetCurFriendList(FriendSortType _friendSortType);
    /*0x11e2784*/ System.Collections.Generic.List<PTShare.Define.SPlayer> GetReqFriendListToMe();
    /*0x11e278c*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> GetSearchPlayerList();
    /*0x11e2794*/ System.Collections.Generic.List<PTShare.Define.SPlayer> GetBlackList();
    /*0x11e279c*/ int GetTodayRecvPoint();
    /*0x11e27a4*/ int GetTodaySendPoint();
    /*0x11e27ac*/ PTShare.Define.SFriend FindFriendID(long _playerid);
    /*0x11e28e8*/ PTShare.Define.SPlayer FindBlacklist(long _playerid);
    /*0x11e2a4c*/ long FindBlacklistPlayerid(long _playerid);
    /*0x11e2b88*/ bool IsMyFriendPlayer(long _playerid);
    /*0x11e2bac*/ bool IsMyBlacklistPlayer(long _playerid);
    /*0x11e2bc8*/ void ChangeFriendReceveState(long _accountid, PTShare.Define.FriendShipRecvState _state);
    /*0x11e2d50*/ void ChangeFriendSendState(long _accountid, PTShare.Define.FriendShipSendState _state);
    /*0x11e2ed8*/ bool GetFriendRequestorReddot();
    /*0x11e2ee0*/ bool GetMercenaryReddot();
    /*0x11deca4*/ void SetHideFriendRequestReddot();
    /*0x11e2ee8*/ void SetHideMercenaryReddot();

    class <>c__DisplayClass21_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _showResult;

        /*0x10a0890*/ <>c__DisplayClass21_0();
        /*0x10a0898*/ void <Send_FriendList>b__0(ServerProtocol.ResFriendFriends request);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _showResult;

        /*0x10a09d4*/ <>c__DisplayClass22_0();
        /*0x10a09dc*/ void <Send_FriendRequestors>b__0(ServerProtocol.ResFriendRequestors instance);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _showResult;

        /*0x10a0a28*/ <>c__DisplayClass23_0();
        /*0x10a0a30*/ void <Send_BlackList>b__0(ServerProtocol.ResFriendBlacks instance);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a0a80*/ <>c__DisplayClass24_0();
        /*0x10a0a88*/ void <Send_AcceptFriend>b__0(ServerProtocol.ResFriendAccept _resFriendAccept);
    }

    class <>c__DisplayClass24_1
    {
        /*0x10*/ ServerProtocol.ResFriendAccept _resFriendAccept;

        /*0x10a0cc0*/ <>c__DisplayClass24_1();
        /*0x10a0cc8*/ bool <Send_AcceptFriend>b__1(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ long _acceptAccountID;
        /*0x20*/ System.Action _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SFriend> <>9__1;

        /*0x10a0d00*/ <>c__DisplayClass25_0();
        /*0x10a0d08*/ void <Send_DeleteFriend>b__0(ServerProtocol.ResFriendDelete _resFriendDelete);
        /*0x10a0e1c*/ bool <Send_DeleteFriend>b__1(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a0e40*/ <>c__DisplayClass26_0();
        /*0x10a0e48*/ void <Send_DenyFriend>b__0(ServerProtocol.ResFriendDeny _resDenyFriend);
    }

    class <>c__DisplayClass26_1
    {
        /*0x10*/ ServerProtocol.ResFriendDeny _resDenyFriend;

        /*0x10a0fa4*/ <>c__DisplayClass26_1();
        /*0x10a0fac*/ bool <Send_DenyFriend>b__1(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a0fdc*/ <>c__DisplayClass27_0();
        /*0x10a0fe4*/ void <Send_InviteFriend>b__0(ServerProtocol.ResFriendSend _resFriendSend);
    }

    class <>c__DisplayClass27_1
    {
        /*0x10*/ ServerProtocol.ResFriendSend _resFriendSend;

        /*0x10a11a0*/ <>c__DisplayClass27_1();
        /*0x10a11a8*/ bool <Send_InviteFriend>b__1(PTShare.Define.SSearchPlayer x);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a11d8*/ <>c__DisplayClass28_0();
        /*0x10a11e0*/ void <Send_SendPointFriend>b__0(ServerProtocol.ResFriendSendPoint _resFriendSendPoint);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a138c*/ <>c__DisplayClass29_0();
        /*0x10a1394*/ void <Send_SearchFriend>b__0(ServerProtocol.ResFriendSearch _resFriendSearch);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a13d0*/ <>c__DisplayClass30_0();
        /*0x10a13d8*/ void <Send_TakePointFriend>b__0(ServerProtocol.ResFriendTakePoint _resFriendTakePoint);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a1584*/ <>c__DisplayClass31_0();
        /*0x10a158c*/ void <Send_AllAtOncePointFriend>b__0(ServerProtocol.ResFriendAllPoint _instance);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a19ac*/ <>c__DisplayClass32_0();
        /*0x10a19b4*/ void <Send_AddBlacklist>b__0(ServerProtocol.ResFriendBlacklist response);
    }

    class <>c__DisplayClass32_1
    {
        /*0x10*/ ServerProtocol.ResFriendBlacklist response;

        /*0x10a1b64*/ <>c__DisplayClass32_1();
        /*0x10a1b6c*/ bool <Send_AddBlacklist>b__1(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ FriendManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10a1ba4*/ <>c__DisplayClass33_0();
        /*0x10a1bac*/ void <Send_RemoveBlacklist>b__0(ServerProtocol.ResFriendBlacklistRemove response);
    }

    class <>c__DisplayClass33_1
    {
        /*0x10*/ ServerProtocol.ResFriendBlacklistRemove response;

        /*0x10a1dcc*/ <>c__DisplayClass33_1();
        /*0x10a1dd4*/ bool <Send_RemoveBlacklist>b__1(PTShare.Define.SPlayer x);
        /*0x10a1e04*/ bool <Send_RemoveBlacklist>b__2(long x);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ long _accountid;

        /*0x10a1e28*/ <>c__DisplayClass34_0();
        /*0x10a1e30*/ void <Send_Sparring>b__0(ServerProtocol.ResFriendSparring response);
    }

    class <>c
    {
        static /*0x0*/ FriendManager.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SPlayer, long> <>9__35_0;

        static /*0x10a0810*/ <>c();
        /*0x10a0870*/ <>c();
        /*0x10a0878*/ long <SetBlacklist>b__35_0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ long _playerid;

        /*0x10a1fe8*/ <>c__DisplayClass44_0();
        /*0x10a1ff0*/ bool <FindFriendID>b__0(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ long _playerid;

        /*0x10a2014*/ <>c__DisplayClass45_0();
        /*0x10a201c*/ bool <FindBlacklist>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ long _playerid;

        /*0x10a2040*/ <>c__DisplayClass46_0();
        /*0x10a2048*/ bool <FindBlacklistPlayerid>b__0(long x);
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ long _accountid;

        /*0x10a2058*/ <>c__DisplayClass49_0();
        /*0x10a2060*/ bool <ChangeFriendReceveState>b__0(PTShare.Define.SFriend x);
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ long _accountid;

        /*0x10a2084*/ <>c__DisplayClass50_0();
        /*0x10a208c*/ bool <ChangeFriendSendState>b__0(PTShare.Define.SFriend x);
    }
}

class AtticManager : Singleton.Data.SingletonData<AtticManager>
{
    /*0x1c*/ int m_luckyHeroId;

    /*0xf830c0*/ AtticManager();
    /*0xf82bec*/ bool InitInstance();
    /*0xf82bf4*/ void ReleaseInstance();
    /*0xf82bf8*/ int GetLuckyHeroId();
    /*0xf82c00*/ void SetLuckyHeroId(int heroId);
    /*0xf81420*/ void Send_Buy(int gachaid, int priceid, System.Action<System.Collections.Generic.List<int>> callBack);
    /*0xf828ec*/ void Send_Commit(int heroId, System.Action callBack);
    /*0xf82c08*/ bool IsPossiblePriceCount(int gachaCount);
    /*0xf82d40*/ bool IsPossiblePrice(TableData.TableData_Highgacha gachaData);
    /*0xf82f00*/ bool IsPossibleSubPrice(TableData.TableData_Highgacha gachaData);

    class <>c__DisplayClass5_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<int>> callBack;

        /*0xd9fc14*/ <>c__DisplayClass5_0();
        /*0xd9fc1c*/ void <Send_Buy>b__0(ServerProtocol.ResAtticBuy response);
    }

    class <>c
    {
        static /*0x0*/ AtticManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__5_1;

        static /*0xd9fb24*/ <>c();
        /*0xd9fb84*/ <>c();
        /*0xd9fb8c*/ void <Send_Buy>b__5_1(PTShare.Define.SItem m);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ AtticManager <>4__this;
        /*0x18*/ int heroId;
        /*0x20*/ System.Action callBack;

        /*0xd9fe04*/ <>c__DisplayClass6_0();
        /*0xd9fe0c*/ void <Send_Commit>b__0(ServerProtocol.ResAtticCommit response);
    }
}

class GachaManager : Singleton.Component.SingletonComponent<GachaManager>
{
    static int _nPropertyLimit = 4;
    static /*0x0*/ System.Action OnUpdateFactionEvent;
    /*0x28*/ System.Collections.Generic.List<string> m_liWishList;
    /*0x30*/ bool[] m_arrEnableFaction;
    /*0x38*/ System.Collections.Generic.List<int> m_liAutoDismiss;
    /*0x40*/ int m_nOldBonusCount;
    /*0x44*/ int m_nCurBonusCount;
    /*0x48*/ bool m_bReceiveBonus;
    /*0x50*/ System.Collections.Generic.List<int> m_liRecevieGainBonus;
    /*0x58*/ System.Text.StringBuilder m_strResult;
    /*0x60*/ PropertyType ePropertyType;
    /*0x64*/ int nArrayIndex;
    /*0x68*/ bool <IsChangedWishlist>k__BackingField;

    static /*0xec05e4*/ GachaManager();
    static /*0xebee0c*/ void add_OnUpdateFactionEvent(System.Action value);
    static /*0xebef00*/ void remove_OnUpdateFactionEvent(System.Action value);
    /*0xec04c8*/ GachaManager();
    /*0xebeff4*/ bool get_IsChangedWishlist();
    /*0xebeffc*/ void set_IsChangedWishlist(bool value);
    /*0xebf008*/ string get_UserToken();
    /*0xebf088*/ void AwakeInstance();
    /*0xebf090*/ bool InitInstance();
    /*0xebf098*/ void ReleaseInstance();
    /*0xebf150*/ System.Collections.Generic.List<int> GetAutoDismissList();
    /*0xebf158*/ void SetWishList(System.Collections.Generic.List<string> list);
    /*0xebf160*/ void SetAutoDismiss(System.Collections.Generic.List<int> list);
    /*0xebf168*/ void Send_BuyGacha(int _gachaid, int _priceid, int _factionid, System.Action<System.String[]> _callback);
    /*0xebf2c8*/ void Send_EnterGacha(System.Action _callback);
    /*0xebecc4*/ void Send_BuyFactionPool(int _factionid, System.Action _callback);
    /*0xebf400*/ void Send_CommitWishList(System.Action _callback);
    /*0xebf68c*/ void Send_AutoDismiss(System.Collections.Generic.List<int> dismissList, System.Action _callBack);
    /*0xebf814*/ void OpenGachaShop(bool bIsHideAll);
    /*0xebf8d4*/ bool IsPossiblePriceAll();
    /*0xebfc84*/ bool IsPossiblePriceCount(int gachaCount);
    /*0xebfac4*/ bool IsPossiblePrice(TableData.TableData_Gacha gachaData);
    /*0xebfebc*/ int GetOldBounsCount();
    /*0xebfec4*/ void SetOldBonusCount(int _count);
    /*0xebfecc*/ int GetCurBonusCount();
    /*0xebfed4*/ bool GetReceiveBonus();
    /*0xebfedc*/ void SetReceiveBonus(bool _enable);
    /*0xebfee8*/ System.Collections.Generic.List<int> GetRewardBonusList();
    /*0xebfef0*/ bool[] GetBuyFactionList();
    /*0xebdd34*/ bool IsBuyFaction(int _type);
    /*0xebfef8*/ int GetFirstIndexIsBuyFaction();
    /*0xebff64*/ System.Collections.Generic.List<string> GetWishList();
    /*0xebff6c*/ bool IsUseUnitWishList(int _factionid, int _unitid);
    /*0xec008c*/ bool IsContainUnitId(string _value, string _unitid);
    /*0xec015c*/ void UpdateWishList(int _factionid, int _slotid, int _value);
    /*0xec001c*/ bool IsVaildWishList(int _factionid);
    /*0xebf584*/ void SetStringListAll();
    /*0xec03a8*/ string[] ConvertSHeroStringAll(System.Collections.Generic.List<PTShare.Define.SLittleHero> _liHero);

    class <>c__DisplayClass26_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action<System.String[]> _callback;

        /*0xf65ef4*/ <>c__DisplayClass26_0();
        /*0xf65efc*/ void <Send_BuyGacha>b__0(ServerProtocol.ResGachaBuy response);
    }

    class <>c
    {
        static /*0x0*/ GachaManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__26_1;
        static /*0x10*/ System.Action<PTShare.Define.SItem> <>9__28_1;

        static /*0xf65d7c*/ <>c();
        /*0xf65ddc*/ <>c();
        /*0xf65de4*/ void <Send_BuyGacha>b__26_1(PTShare.Define.SItem item);
        /*0xf65e6c*/ void <Send_BuyFactionPool>b__28_1(PTShare.Define.SItem item);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf661d4*/ <>c__DisplayClass27_0();
        /*0xf661dc*/ void <Send_EnterGacha>b__0(ServerProtocol.ResGachaEnter response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf6630c*/ <>c__DisplayClass28_0();
        /*0xf66314*/ void <Send_BuyFactionPool>b__0(ServerProtocol.ResGachaBuyFactionPool response);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf66500*/ <>c__DisplayClass29_0();
        /*0xf66508*/ void <Send_CommitWishList>b__0(ServerProtocol.ResGachaCommitWishList response);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ GachaManager <>4__this;
        /*0x18*/ System.Action _callBack;

        /*0xf66550*/ <>c__DisplayClass30_0();
        /*0xf66558*/ void <Send_AutoDismiss>b__0(ServerProtocol.ResGachaSetAutoDismiss response);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ bool bIsHideAll;
        /*0x18*/ System.Action <>9__1;

        /*0xf66594*/ <>c__DisplayClass31_0();
        /*0xf6659c*/ void <OpenGachaShop>b__0();
        /*0xf6667c*/ void <OpenGachaShop>b__1();
    }
}

class GameManager : Singleton.Component.SingletonComponent<GameManager>
{
    static /*0x0*/ bool CHECK_GAME_DB_SCRIPT_VERSION;
    static /*0x1*/ bool ALL_CAMERA_DISENABLED;
    static /*0x8*/ System.Action OnInputEscapeEvent;
    /*0x28*/ System.Action<bool> OnCemeraSetActive;

    static /*0xeccaf8*/ GameManager();
    static /*0xecc1cc*/ void add_OnInputEscapeEvent(System.Action value);
    static /*0xecc2c4*/ void remove_OnInputEscapeEvent(System.Action value);
    static /*0xecc554*/ void DoQuit();
    /*0xeccaac*/ GameManager();
    /*0xecc3bc*/ void AwakeInstance();
    /*0xecc3ec*/ bool InitInstance();
    /*0xecc3f4*/ void ReleaseInstance();
    /*0xecc458*/ void OnEnable();
    /*0xecc4c0*/ int get_CurrentTargetFrameRate();
    /*0xecc3e0*/ void EnvironmentSetting();
    /*0xecc4c8*/ void DoRestart();
    /*0xecc5b0*/ void SetActiveAllCamerasForBattleSimulation(bool _bActive, bool _bFasten, bool _bEffectFrontCanvas);
    /*0xecc7fc*/ void OnEscapeProcess();
    /*0xeccaa8*/ void Update();
}

enum ResourceType
{
    Atlas = 1,
    Config = 2,
    Effect = 3,
    LoadPage = 4,
    Localize = 5,
    Sprites = 6,
    UI = 7,
    Balance = 8,
}

class ResourcePath
{
    static string ATLAS_PATH = "Atlas/";
    static string BALANCE_PATH = "BalanceData/";
    static string CONFIG_PATH = "Config/";
    static string LOAD_PAGE_PATH = "LoadPage/";
    static string LOCALIZE_PATH = "Localize/";
    static string UI_PATH = "UI/Popup/";

    static /*0xf29b3c*/ string GetPath(ResourceType type);
    /*0xf29be8*/ ResourcePath();
}

class ResourceManager : Singleton.Data.SingletonData<ResourceManager>
{
    /*0x20*/ System.Collections.Generic.Dictionary<string, SG.Pool> poolDict;

    /*0xf29a84*/ ResourceManager();
    /*0xf291c4*/ bool InitInstance();
    /*0xf291cc*/ void ReleaseInstance();
    T LoadResource<T>(ResourceType type, string filename);
    System.Collections.IEnumerator LoadAsync_Resource<T>(System.Action<T> resultFunc, ResourceType type, string filename);
    /*0xf291d0*/ void UnloadResource(UnityEngine.Object _asset);
    T LoadAsset<T>(AssetBundleType type, string filename, string[] arg);
    void LoadAsync_Asset<T>(UnityEngine.MonoBehaviour _parent, System.Action<T> resultFunc, AssetBundleType type, string filename, string[] arg);
    /*0xf291dc*/ void UnloadAsset(UnityEngine.Object _asset);
    /*0xf29238*/ TooltipUIBase LoadTooltipUI(TooltipType _type);
    /*0xf29460*/ void UnloadTooltipUI(TooltipUIBase _instance);
    /*0xf292d0*/ string GetTooltipUIFileName(TooltipType _type);
    /*0xf295b4*/ void ReleaseSingleton();
    /*0xf29628*/ void ReleaseData();
    /*0xf2967c*/ void InitPool(AssetBundleType _assetBundleType, string poolName, int size, SG.PoolInflationType type);
    T GetObjectFromPool<T>(AssetBundleType _assetBundleType, string poolName, bool autoActive, int autoCreate);
    /*0xf298e0*/ void ReturnObjectToPool(UnityEngine.GameObject go);
    /*0xf299dc*/ void ReturnTransformToPool(UnityEngine.Transform t);

    class <LoadAsync_Resource>d__3<T> : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x0*/ int <>1__state;
        /*0x0*/ object <>2__current;
        /*0x0*/ ResourceType type;
        /*0x0*/ string filename;
        /*0x0*/ System.Action<T> resultFunc;
        /*0x0*/ UnityEngine.ResourceRequest <async>5__2;

        <LoadAsync_Resource>d__3(int <>1__state);
        void System.IDisposable.Dispose();
        bool MoveNext();
        object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        void System.Collections.IEnumerator.Reset();
        object System.Collections.IEnumerator.get_Current();
    }
}

class GuiBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_background;
    /*0x20*/ bool _isFinished;
    /*0x28*/ string[] _params;
    /*0x30*/ System.Collections.Generic.Dictionary<string, UnityEngine.Transform> _usedTransList;
    /*0x38*/ string m_typeName;

    /*0xe5fee0*/ GuiBase();
    /*0xe5faf4*/ void Awake();
    /*0xe5fb00*/ void Start();
    /*0xe5fb10*/ void OnEnable();
    /*0xe5fb20*/ void OnDisable();
    /*0xe5fb4c*/ void OnDestroy();
    /*0xe5fb58*/ void FindTrans();
    /*0xe5fb88*/ void RecursiveFind(UnityEngine.Transform pTrans, System.Collections.Generic.Dictionary<string, UnityEngine.Transform> pFindTransList);
    /*0xe5fc8c*/ bool get_IsFinished();
    /*0xe5fc94*/ void Finish();
    /*0xe5fcc4*/ void SetParameter(string _typeName, string[] pParams);
    /*0xe5fcd0*/ void IsRender(bool pIsRender);
    /*0xe5fd04*/ void SetBackground(bool _isActive);
    void OnCreate();
    void OnEnter();
    void OnStart();
    void OnFinish();
    void OnLeave();
    void OnDelete();
    /*0xe5fda8*/ void OnExit();
}

class GuiManager : Singleton.Component.SingletonComponent<GuiManager>
{
    static /*0x0*/ System.Collections.Generic.List<System.ValueTuple<string, GuiManager.ELayerType>> GuiList;
    static /*0x8*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.ValueTuple<string, System.Object[]>>> GuiActionList;
    /*0x28*/ UnityEngine.Canvas topmostCanvas;
    /*0x30*/ UnityEngine.Canvas frontCanvas;
    /*0x38*/ UnityEngine.Canvas backCanvas;
    /*0x40*/ UnityEngine.Camera clearCamera;
    /*0x48*/ System.Collections.Generic.Dictionary<string, GuiBase> _showGuiEntityList;
    /*0x50*/ System.Collections.Generic.Dictionary<string, GuiBase> _hideGuiEntityList;
    /*0x58*/ System.Collections.Generic.List<string> _showGuiStringList;
    /*0x60*/ bool <IgnoreLoadingPopup>k__BackingField;

    static /*0xe61d88*/ GuiManager();
    static /*0xe60de4*/ void ShowQuitGame(string[] _params);
    static /*0xe6016c*/ void ClearAll();
    static void Add<T>(GuiManager.ELayerType layer);
    static /*0xe61854*/ void Remove(string name);
    static void AddAction<T>(string name, object[] param);
    static /*0xe6197c*/ void RemoveAction(string guiName);
    static /*0xe61ab0*/ void StartGUI(System.Action emptyCallback);
    /*0xe61c9c*/ GuiManager();
    /*0xe5ff74*/ bool get_IgnoreLoadingPopup();
    /*0xe5ff7c*/ void set_IgnoreLoadingPopup(bool value);
    /*0xe5ff88*/ void AwakeInstance();
    /*0xe60060*/ bool InitInstance();
    /*0xe60068*/ void ReleaseInstance();
    T Find<T>();
    T Show<T>(GuiManager.ELayerType pLayer, bool pShow, string[] pParams);
    /*0xe5fe00*/ void Hide(string _guiTypeName);
    void Hide<T>();
    /*0xe604ac*/ void AddShowDictionary(string _guiTypeName, GuiBase _base);
    /*0xe6033c*/ void RemoveShowDictionary(string _guiTypeName);
    /*0xe60440*/ void AddHideDictionary(string _guiTypeName, GuiBase _base);
    /*0xe605d0*/ void RemoveHideDictionary(string _guiTypeName);
    /*0xe60634*/ UnityEngine.Camera TopMostCamera();
    /*0xe60650*/ UnityEngine.Camera FrontCamera();
    /*0xe6066c*/ UnityEngine.Camera BackCamera();
    /*0xe60688*/ UnityEngine.Camera ClearCamera();
    /*0xe60690*/ UnityEngine.Canvas FrontCanvas();
    /*0xe60698*/ UnityEngine.Canvas BackCanvas();
    /*0xe606a0*/ UnityEngine.Canvas TopMostCanvas();
    /*0xe606a8*/ UnityEngine.RectTransform FrontCanvasRectTransform();
    /*0xe606fc*/ UnityEngine.RectTransform TopMostCanvasRectTransform();
    /*0xe60750*/ void ShowMessageBox(GuiManager.ELayerType _eType, System.Action<bool> _onAction, bool _isYesNo, bool _isBgExit, string[] _params);
    /*0xe607f0*/ void ShowBuyMessageBox(PTShare.Define.Currency _type, long _amount, System.Action<bool> _onAction, string[] _params);
    /*0xe60890*/ void ShowBuyMessageBox(PTShare.Define.Currency _type, long _amount, System.Action<bool> _onAction, ButtonSound confirmSound, ButtonSound cancelSound, string[] _params);
    /*0xe60940*/ void ShowBuyMessageBox_IdleReward(PTShare.Define.Currency _type, long _amount, System.Action<bool> _onAction, System.TimeSpan _remainTime, string[] _params);
    /*0xe60a00*/ void ShowBuyMessageBox_GuildPoint(long _amount, System.Action<bool> _onAction, string[] _params);
    /*0xe60a94*/ void ShowImageMessageBox(GuiManager.ELayerType _eType, AtlasType _atlasType, string _imagePath, System.Action<bool> _onAction, bool _isYesNo, bool _isBgExit, string[] _params);
    /*0xe60b4c*/ void ShowImageMessageBox(GuiManager.ELayerType _eType, AtlasType _imageAtlas, string _imagePath, AtlasType _frameAtlas, string _framePath, System.Action<bool> _onAction, bool _isYesNo, bool _isBgExit, string[] _params);
    /*0xe60c1c*/ void ShowToastMessage(string _str, float _duration);
    /*0xe60ca4*/ void ShowToastMessage(string _str, float _duration, string[] _params);
    /*0xe60d34*/ void ShowToastMessage(string _str, float _duration, UnityEngine.Vector3 _addPosition, string[] _params);
    /*0xe60f2c*/ void ShowLoading(bool _isShow, bool _isView);
    /*0xe60ff0*/ void ShowExitMessageBox();
    /*0xe61348*/ string GetCurrentGUIName();
    bool IsShowExistGUI<T>();
    /*0xe613d0*/ void HideGuiBaseAll(bool _bDestroy);
    /*0xe615d8*/ int GetCanvasChildCount(GuiManager.ELayerType _eLayerType, bool _bIncludeInactive);
    /*0xe61770*/ bool OnEscape();
    /*0xe6184c*/ void HandlerHideGuiBaseAll();

    enum ELayerType
    {
        Back = 0,
        Front = 1,
        MostFront = 2,
    }

    class <>c
    {
        static /*0x0*/ GuiManager.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__42_0;
        static /*0x10*/ System.Action<bool> <>9__44_0;
        static /*0x18*/ System.Action<System.ValueTuple<string, GuiManager.ELayerType>> <>9__53_0;
        static /*0x20*/ System.Action<System.ValueTuple<string, GuiManager.ELayerType>> <>9__58_0;

        static /*0xf68df8*/ <>c();
        /*0xf68e58*/ <>c();
        /*0xf68e60*/ void <ShowQuitGame>b__42_0(bool _result);
        /*0xf68ebc*/ void <ShowExitMessageBox>b__44_0(bool _result);
        /*0xf68f2c*/ void <ClearAll>b__53_0(System.ValueTuple<string, GuiManager.ELayerType> x);
        /*0xf68f90*/ void <StartGUI>b__58_0(System.ValueTuple<string, GuiManager.ELayerType> x);
    }

    class <>c__46<T>
    {
        static /*0x0*/ GuiManager.<>c__46<T> <>9;
        static /*0x0*/ System.Predicate<string> <>9__46_0;

        static <>c__46();
        <>c__46();
        bool <IsShowExistGUI>b__46_0(string x);
    }

    class <>c__DisplayClass54_0<T>
    {
        /*0x0*/ string name;

        <>c__DisplayClass54_0();
        bool <Add>b__0(System.ValueTuple<string, GuiManager.ELayerType> x);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ string name;

        /*0xf69330*/ <>c__DisplayClass55_0();
        /*0xf69338*/ bool <Remove>b__0(System.ValueTuple<string, GuiManager.ELayerType> x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ System.Type type;
        /*0x18*/ object parent;

        /*0xf69328*/ <>c__DisplayClass58_0();
        /*0xf6935c*/ void <StartGUI>b__1(System.ValueTuple<string, System.Object[]> y);
    }
}

class GuildBossBestRecordPopup : GuiBase
{
    /*0x40*/ LocalizeString m_bestPlayerNameText;
    /*0x48*/ LocalizeString m_bestDamageText;
    /*0x50*/ PlayerProfileSlot m_bestPlayerProfile;
    /*0x58*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x60*/ int m_bossIndex;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x70*/ PTShare.Define.SGuildBoss m_sGuildBoss;
    /*0x78*/ PTShare.Define.SGuildMember m_sGuildMemeber;

    /*0xe62b58*/ GuildBossBestRecordPopup();
    /*0xe61e58*/ void OnCreate();
    /*0xe61e5c*/ void OnDelete();
    /*0xe61e60*/ void OnEnter();
    /*0xe61e64*/ void OnExit();
    /*0xe61fb8*/ void OnFinish();
    /*0xe61fbc*/ void OnLeave();
    /*0xe61fc0*/ void OnStart();
    /*0xe61fc4*/ void InitPopup(int bossIndex);
    /*0xe62514*/ void SetPlayerName();
    /*0xe625b0*/ void SetBestDamage();
    /*0xe62674*/ void SetBestPlayerProfile();
    /*0xe627c8*/ void SetScrollContent();
    /*0xe620fc*/ void EnableUI(bool enable);
    /*0xe62438*/ void BindEvent();
    /*0xe61ee4*/ void RemoveEvent();
    /*0xe62a60*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0xe62bcc*/ void <SetBestPlayerProfile>b__18_0();
    /*0xe62bec*/ bool <SetScrollContent>b__19_0(TableData.TableData_Guildboss data);
}

class GuildBossFastHuntPopup : GuiBase
{
    /*0x40*/ LocalizeString m_prevDamageText;
    /*0x48*/ LocalizeString m_rewardCountText;
    /*0x50*/ PTShare.Define.SGuildBoss m_sGuildBoss;

    /*0xe63304*/ GuildBossFastHuntPopup();
    /*0xe62c10*/ void OnCreate();
    /*0xe62c14*/ void OnDelete();
    /*0xe62c18*/ void OnEnter();
    /*0xe62c1c*/ void OnFinish();
    /*0xe62c20*/ void OnLeave();
    /*0xe62c24*/ void OnStart();
    /*0xe62c28*/ void InitPopup(int bossIndex);
    /*0xe62cb4*/ void SetPrevDamage();
    /*0xe62d78*/ void SetRewardCount();
    /*0xe630a0*/ void OnClickFastHunt();
    /*0xe63308*/ bool <SetRewardCount>b__11_0(TableData.TableData_Guildboss data);
    /*0xe63338*/ void <OnClickFastHunt>b__12_0();
}

class GuildBossOpenPopup : GuiBase
{
    /*0x40*/ LocalizeString m_desc;
    /*0x48*/ LocalizeString m_point;
    /*0x50*/ int m_bossIndex;

    /*0xe63c40*/ GuildBossOpenPopup();
    /*0xe633b8*/ void OnCreate();
    /*0xe633bc*/ void OnDelete();
    /*0xe633c0*/ void OnEnter();
    /*0xe633c4*/ void OnExit();
    /*0xe633c8*/ void OnFinish();
    /*0xe633cc*/ void OnLeave();
    /*0xe633d0*/ void OnStart();
    /*0xe633d4*/ void InitPopup(int bossIndex);
    /*0xe63464*/ void SetDesc();
    /*0xe63690*/ void SetUnlockAmount();
    /*0xe638a0*/ void OnClickRelease();
    /*0xe63bc0*/ void OnClickExit();
    /*0xe63c44*/ bool <SetDesc>b__11_0(TableData.TableData_Guildboss data);
    /*0xe63c68*/ bool <SetUnlockAmount>b__12_0(TableData.TableData_Guildboss data);

    class <>c
    {
        static /*0x0*/ GuildBossOpenPopup.<> <>9;
        static /*0x8*/ System.Action <>9__13_0;

        static /*0xf693d4*/ <>c();
        /*0xf69434*/ <>c();
        /*0xf6943c*/ void <OnClickRelease>b__13_0();
    }
}

class GuildBossRecordEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x20*/ LocalizeString m_playerNameText;
    /*0x28*/ LocalizeString m_damageText;
    /*0x30*/ PTShare.Define.SGuildBossHistory m_sHistory;
    /*0x38*/ int m_bossIndex;

    /*0xe6464c*/ GuildBossRecordEntity();
    /*0xe63c8c*/ void InitEntityByGuildBoss(PTShare.Define.SGuildBossHistory sHistory, int bossIndex);
    /*0xe63f94*/ void InitEntityByEventBoss(PTShare.Define.SGuildBossHistory sHistory, int bossIndex);
    /*0xe63d10*/ void SetProfileSlot();
    /*0xe63e34*/ void SetPlayerName();
    /*0xe63ed0*/ void SetDamage();
    /*0xe6401c*/ void OnClickShowRecord();
    /*0xe640fc*/ void ShowBattleGraph_EventBoss(int _nBossIndex, string _sStatistics, PTShare.Define.SGuildBossHistory _guildBossHistory);
    /*0xe64350*/ void ShowBattleGraph_GuildBoss(int _nBossIndex, string _sStatistics, PTShare.Define.SGuildBossHistory _guildBossHistory);
    /*0xe64654*/ void <SetProfileSlot>b__7_0();
    /*0xe64674*/ bool <ShowBattleGraph_GuildBoss>b__12_0(TableData.TableData_Guildboss data);
}

class GuildBossRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildBossRecordEntity m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> m_historyList;
    /*0x58*/ int m_bossIndex;

    /*0xe64a5c*/ GuildBossRecordPopup();
    /*0xe64698*/ void OnCreate();
    /*0xe6469c*/ void OnDelete();
    /*0xe646a0*/ void OnEnter();
    /*0xe646a4*/ void OnFinish();
    /*0xe646a8*/ void OnLeave();
    /*0xe646ac*/ void OnStart();
    /*0xe646b0*/ void OnExit();
    /*0xe647a8*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historyList, int bossIndex);
    /*0xe648c0*/ void SetScrollContent();
    /*0xe647e4*/ void BindEvnet();
    /*0xe646d4*/ void RemoveEvent();
    /*0xe649d8*/ void HandleScrollContent(int index, GuildBossRecordEntity obj);
}

class GuildBossSkillSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_select;
    /*0x20*/ AtlasImage m_icon;
    /*0x28*/ TooltipData_Skill m_tooltipSkillData;
    /*0x30*/ AtlasImage m_strongIcon;
    /*0x38*/ UnityEngine.GameObject m_freamParent;

    /*0xe64e1c*/ GuildBossSkillSlot();
    /*0xe64ad0*/ void InitSlot(int slotIndex, TableData.TableData_Skillbase skillBase, TableData.TableData_Skilllv skillLevelData, int skillLevel);
    /*0xe64ba8*/ void SetIcon(string type, string name);
    /*0xe64e24*/ void <InitSlot>b__5_0(bool isOn);
}

class GuildCalanderEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemTableRewardSlot m_itemRewardSlot;
    /*0x20*/ LocalizeString m_attendConditionText;
    /*0x28*/ LocalizeString m_attendDayText;
    /*0x30*/ LocalizeString m_attendRewardText;
    /*0x38*/ AtlasImage m_backGround;
    /*0x40*/ int m_attendDay;
    /*0x44*/ GuildCalanderEntity.CONDITION m_condition;

    /*0xe65b30*/ GuildCalanderEntity();
    /*0xe658ac*/ void InitEntity(int attendDay, Rewards reward, GuildCalanderEntity.CONDITION condition);
    /*0xe6597c*/ void SetAttendDayText(int day);
    /*0xe659bc*/ void UpdateCondition();
    /*0xe65aa0*/ void OnClickCalander();

    enum CONDITION
    {
        RECEIVE = 0,
        RECEIVE_WAIT = 1,
        NONE = 2,
    }
}

class GuildCalanderPopup : GuiBase
{
    /*0x40*/ LocalizeString m_attendCountText;
    /*0x48*/ LocalizeString m_changeButtonText;
    /*0x50*/ UnityEngine.GameObject m_attendRewardListObject;
    /*0x58*/ UnityEngine.GameObject m_attendMemberListObject;
    /*0x60*/ ScrollContent_GuildMemberEntity m_scrollContentMemberEntity;
    /*0x68*/ ScrollContent_GuildCalanderEntity m_scrollContentAttendEntity;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> m_attendList;
    /*0x78*/ System.Collections.Generic.List<Rewards> m_attendRewardList;
    /*0x80*/ int m_attendDay;
    /*0x84*/ bool m_isNowReceiveReward;
    /*0x85*/ bool m_isViewReward;

    /*0xe66284*/ GuildCalanderPopup();
    /*0xe65b40*/ void OnCreate();
    /*0xe65b44*/ void OnDelete();
    /*0xe65b48*/ void OnEnter();
    /*0xe65cb4*/ void OnFinish();
    /*0xe65cb8*/ void OnLeave();
    /*0xe65e1c*/ void OnStart();
    /*0xe65e20*/ void InitPopup();
    /*0xe65e90*/ void UpdatePopup();
    /*0xe65fd4*/ void UpdateMemberList();
    /*0xe65f28*/ void UpdateAttendRewardList();
    /*0xe66080*/ void UpdateAttendCountText();
    /*0xe660ec*/ void OnClickCalanderViewChange();
    /*0xe660fc*/ void HandleScrollContentAttendMember(int index, GuildMemberEntity obj);
    /*0xe661a0*/ void HandleScrollContentAttendReward(int index, GuildCalanderEntity obj);
    /*0xe65b4c*/ void BindEvent();
    /*0xe65cbc*/ void RemoveEvent();
}

class GuildCharacterData : UnityEngine.ScriptableObject
{
    /*0x18*/ float runTime;
    /*0x1c*/ float runAnimTimeScale;
    /*0x20*/ int tileFindCount;
    /*0x24*/ float scale;
    /*0x28*/ float minRestTime;
    /*0x2c*/ float maxRestTime;
    /*0x30*/ int minRestMove;
    /*0x34*/ int maxRestMove;

    /*0xe66340*/ GuildCharacterData();
}

class GuildCreateWithSettingPopup : GuiBase
{
    static /*0x0*/ System.Action<int, int> OnChangeGuildEmblem;
    static /*0x8*/ System.Action<string> OnChangeGuildName;
    static /*0x10*/ System.Action<string> OnChangeGuildJoinGuide;
    static /*0x18*/ System.Action<string> OnChangeGuildLanguage;
    /*0x40*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x48*/ GuildWindowRequireDropDown m_guildRequireDropdown;
    /*0x50*/ LocalizeString m_titleText;
    /*0x58*/ LocalizeString m_guildNameText;
    /*0x60*/ LocalizeString m_guildJoinNotice;
    /*0x68*/ LocalizeString m_userPriceText;
    /*0x70*/ LocalizeString m_costPriceText;
    /*0x78*/ LocalizeString m_guildLevelRequireText;
    /*0x80*/ LocalizeString m_emptyJoinNoticeText;
    /*0x88*/ UnityEngine.GameObject m_createObject;
    /*0x90*/ UnityEngine.GameObject m_settingButton;
    /*0x98*/ UnityEngine.GameObject m_exitButton;
    /*0xa0*/ long m_amount;
    /*0xa8*/ PTShare.Define.GuildAcceptType m_guildRequireType;
    /*0xac*/ int m_levelRequire;
    /*0xb0*/ int m_guildEmblemIndex;
    /*0xb4*/ int m_guildFrameIndex;
    /*0xb8*/ string m_guildLang;

    static /*0xe68f4c*/ GuildCreateWithSettingPopup();
    /*0xe68ee8*/ GuildCreateWithSettingPopup();
    /*0xe66378*/ void OnCreate();
    /*0xe6637c*/ void OnDelete();
    /*0xe663fc*/ void OnEnter();
    /*0xe66468*/ void OnFinish();
    /*0xe6646c*/ void OnLeave();
    /*0xe66470*/ void OnStart();
    /*0xe66474*/ void OnExit();
    /*0xe66778*/ bool IsCreateMode();
    /*0xe667d4*/ void InitPopup();
    /*0xe66ff4*/ void InitCreatePopup();
    /*0xe672b4*/ void InitSettingPopup();
    /*0xe66d58*/ void SetTitle();
    /*0xe67314*/ void UpdateGuildEmblem();
    /*0xe67338*/ void SetCurrency();
    /*0xe67634*/ void UpdateGuildName(string name);
    /*0xe66ed0*/ void UpdateGuildJoinGuide(string notify);
    /*0xe67100*/ void UpdateGuildRequireLevel();
    /*0xe67648*/ void OnClickEmblemChange();
    /*0xe6786c*/ void OnClickNameChange();
    /*0xe67904*/ void OnClickNotifyChange();
    /*0xe679ac*/ void OnClickGuildLanguageChange();
    /*0xe67a2c*/ void OnClickCreate();
    /*0xe67db0*/ void OnClickConfirm();
    /*0xe68050*/ void OnClickAddLevelRequire();
    /*0xe68138*/ void OnClickMinusLevelRequire();
    /*0xe68220*/ void HandleChangeGuildName(string name);
    /*0xe68234*/ void HandleChangeGuildJoinGuide(string notify);
    /*0xe68550*/ void HandleGuildEmblemChange(int icon, int frame);
    /*0xe688b4*/ void HandleGuildRequireChange(PTShare.Define.GuildAcceptType guildRequireType);
    /*0xe68bd0*/ void HandleGuildLanguageChange(string lang);
    /*0xe66a70*/ void BindEvent();
    /*0xe66498*/ void RemoveEvent();
    /*0xe68f50*/ void <OnClickCreate>b__43_0(bool confirm);
    /*0xe6942c*/ void <OnClickCreate>b__43_1();
    /*0xe69438*/ void <OnClickConfirm>b__44_0();

    class <>c
    {
        static /*0x0*/ GuildCreateWithSettingPopup.<> <>9;
        static /*0x8*/ System.Action <>9__48_0;
        static /*0x10*/ System.Action <>9__49_0;
        static /*0x18*/ System.Action <>9__50_0;
        static /*0x20*/ System.Action <>9__51_0;

        static /*0xf69528*/ <>c();
        /*0xf69588*/ <>c();
        /*0xf69590*/ void <HandleChangeGuildJoinGuide>b__48_0();
        /*0xf69594*/ void <HandleGuildEmblemChange>b__49_0();
        /*0xf69598*/ void <HandleGuildRequireChange>b__50_0();
        /*0xf6959c*/ void <HandleGuildLanguageChange>b__51_0();
    }
}

class GuildDefine
{
    static int GUILD_WAR_DEFAULT_JOIN_COUNT = 20;
    static int GUILD_WAR_DEFAULT_CAPTAIN_COUNT = 1;
    static int GUILD_WAR_DEFAULT_SEASON_DAY = 14;
    static int GUILD_WAR_DEFAULT_SEASON_HOUR = 72;
    static int GUILD_WAR_IMPOSSIBLE_BATTLE_TIME_MINUTE = 10;
    static /*0x0*/ int GUILD_MAX_LEVEL;
    static /*0x4*/ int GUILD_FIELD_CHARACTER_COUNT;
    static /*0x8*/ int GUILD_MAP_MAX_EXTEND;
    static /*0xc*/ int TMP_HOUSE_EXTEND;
    static /*0x10*/ UnityEngine.Vector3 TMP_LEFT_LOOK;
    static /*0x1c*/ UnityEngine.Vector3 TMP_RIGHT_LOOK;
    static /*0x28*/ UnityEngine.Vector3 TMP_HOUSE_LEFT_LOOK;
    static /*0x34*/ UnityEngine.Vector3 TMP_HOUSE_RIGHT_LOOK;
    static /*0x40*/ System.DateTime GuildDefaultDateTime;

    static /*0xe69444*/ GuildDefine();

    enum GUILD_MANAGE_BTN
    {
        GUILD_SEARCH = 0,
        GUILD_QUIT = 1,
        GUILD_NOTIFY_CHANGE = 2,
        GUILD_SETTING = 3,
        GUILD_MAIL = 4,
        GUILD_GUILD_REGISTERLIST = 5,
        GUILD_MASTER_CHANGE = 6,
        GUILD_ELDER_CHANGE = 7,
        GUILD_CAPTAIN_CHANGE = 8,
        GUILD_KICK = 9,
        NULL = 10,
    }

    enum GUILD_POSITION
    {
        NORMAL = 0,
        ELDER = 1,
        MASTER = 2,
        ATTACKER = 3,
        DEFENDER = 4,
    }

    enum GUILD_TILE_TYPE
    {
        NON = 0,
        BUILDING_TILE = 1,
        CHARACTER_ROAD_TILE = 2,
        HOUSING = 3,
        NULL = 4,
    }

    enum GUILD_CHARACTER_MOVE_DESIRE
    {
        LT = 0,
        LB = 1,
        RT = 2,
        RB = 3,
        NULL = 4,
    }

    enum GUILD_MAP_TYPE
    {
        MAIN = 0,
        HOUSE = 1,
    }

    enum GUILD_BOSSTYPE
    {
        COMMON = 0,
        EPIC = 1,
        NULL = 2,
    }
}

class GuildEmblemSettingPopup : GuiBase
{
    static /*0x0*/ System.Action<int, int> OnClickEmblem;
    /*0x40*/ UnityEngine.GameObject m_toggleParent;
    /*0x48*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggle;
    /*0x50*/ ScrollContent_GuildEmblemSlot m_scrollContent;
    /*0x58*/ GuildEmblemSlot m_currentGuildEmblem;
    /*0x60*/ int m_currentEmblemIndex;
    /*0x64*/ int m_currentFrameIndex;
    /*0x68*/ System.Collections.Generic.List<int> m_emblemList;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Profileskin> m_frameList;
    /*0x78*/ GuildEmblemSettingPopup.GuildEmblemSetType currentToggleType;

    static /*0xe6abc0*/ GuildEmblemSettingPopup();
    /*0xe6ab38*/ GuildEmblemSettingPopup();
    /*0xe69548*/ void OnCreate();
    /*0xe6954c*/ void OnDelete();
    /*0xe69550*/ void OnEnter();
    /*0xe697a8*/ void OnFinish();
    /*0xe697ac*/ void OnLeave();
    /*0xe699a8*/ void OnStart();
    /*0xe699ac*/ void OnExit();
    /*0xe676c8*/ void InitPopup(GuildEmblemSettingPopup.GuildEmblemSetType eType);
    /*0xe69a24*/ void InitializeToggle();
    /*0xe69c3c*/ void UpdatePopup();
    /*0xe69c78*/ void UpdateCurrenctEmblem();
    /*0xe69c9c*/ void UpdateEmblemList();
    /*0xe69ed0*/ void OnClick_Confirm();
    /*0xe69f94*/ void HandleChangeEmblem(int icon, int frame);
    /*0xe69f9c*/ void HandleScrollContent_Frame(int index, GuildEmblemSlot obj);
    /*0xe6a9bc*/ void HandleScrollContent_Icon(int index, GuildEmblemSlot obj);
    /*0xe695c8*/ void BindEvnet();
    /*0xe697b0*/ void RemoveEvent();

    enum GuildEmblemSetType
    {
        ICON = 0,
        FRAME = 1,
        End = 2,
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ GuildEmblemSettingPopup.GuildEmblemSetType index;
        /*0x18*/ GuildEmblemSettingPopup <>4__this;

        /*0xf695a0*/ <>c__DisplayClass19_0();
        /*0xf695a8*/ void <InitializeToggle>b__0(bool on);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ int index;

        /*0xf69648*/ <>c__DisplayClass25_0();
        /*0xf69650*/ bool <HandleScrollContent_Frame>b__0(TableData.TableData_Profileskin x);
    }
}

class GuildEmblemSettingSlot : GuildEmblemSlot
{
    /*0x38*/ UnityEngine.GameObject m_selectObject;
    /*0x40*/ LocalizeString m_requireText;
    /*0x48*/ UnityEngine.Material m_grayScaleMaterial;
    /*0x50*/ bool m_isUnlock;
    /*0x54*/ GuildEmblemSettingPopup.GuildEmblemSetType currentType;

    /*0xe6b0cc*/ GuildEmblemSettingSlot();
    /*0xe6abc4*/ void InitEmblem(int emblemIndex, int frameImage, int guildLevel);
    /*0xe6ac40*/ void InitReuire();
    /*0xe6ae68*/ void SetRequireText(bool isUnlock, int needLevel);
    /*0xe6a9a0*/ void SetTextSize(int size);
    /*0xe6a964*/ void SetActiveText(bool enable);
    /*0xe6a948*/ void SetLocalText(string key, string[] param);
    /*0xe6a4e4*/ void SetMaterial(bool isUnlock);
    /*0xe6a310*/ void Selected(bool select);
    /*0xe6afb4*/ void OnClickEmblem();
}

class GuildEmblemSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_iconImage;
    /*0x20*/ AtlasImage m_frameImage;
    /*0x28*/ int m_emblemIndex;
    /*0x2c*/ int m_frameIndex;
    /*0x30*/ int m_guildLevel;

    /*0xe6b0d4*/ GuildEmblemSlot();
    /*0xe6b0dc*/ void InitEmblem(PTShare.Define.SGuildMini data);
    /*0xe6ac0c*/ void InitEmblem(int emblemIndex, int frameIndex, int guildLevel);
    /*0xe6b104*/ void SetIconImage(int index);
    /*0xe6b1d0*/ void SetFrameImage(int index);
}

class GuildFieldCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_baseCharacterSkel;
    /*0x20*/ AtlasImage m_characterNameBG;
    /*0x28*/ LocalizeString m_characterNameText;
    /*0x30*/ GuildCharacterData m_guildCharacterData;
    /*0x38*/ DialogTalk m_dialog;
    /*0x40*/ GuildMap m_guildMap;
    /*0x48*/ PTShare.Define.SGuildMember m_member;
    /*0x50*/ GuildTile m_standTile;
    /*0x58*/ GuildTile m_prevTile;
    /*0x60*/ GuildDefine.GUILD_CHARACTER_MOVE_DESIRE m_desire;
    /*0x64*/ GuildDefine.GUILD_MAP_TYPE m_guildMapType;
    /*0x68*/ bool m_wantRest;
    /*0x70*/ string m_prevPlayAnim;
    /*0x78*/ UnityEngine.Coroutine m_restCoroutine;
    /*0x80*/ UnityEngine.Coroutine m_moveCoroutine;
    /*0x88*/ int m_leftRestTick;

    /*0xe6c4f0*/ GuildFieldCharacter();
    /*0xe6b2c0*/ PTShare.Define.SGuildMember GetMember();
    /*0xe6b2c8*/ void OnDisable();
    /*0xe6b328*/ void SetMember(PTShare.Define.SGuildMember member);
    /*0xe6b84c*/ void SetStandTile(GuildTile standTile);
    /*0xe6b94c*/ void StartMove();
    /*0xe6ba04*/ void MoveCharacter();
    /*0xe6c0f4*/ void InitCharacter(PTShare.Define.SGuildMember member, GuildMap parent, GuildDefine.GUILD_MAP_TYPE guildMapTile);
    /*0xe6b330*/ void SetCharacter();
    /*0xe6bf34*/ void SetRestTick();
    /*0xe6b900*/ void SetPosition(UnityEngine.Vector3 worldPosition);
    /*0xe6bf7c*/ GuildDefine.GUILD_CHARACTER_MOVE_DESIRE GetIgnoreDesire(GuildDefine.GUILD_CHARACTER_MOVE_DESIRE prevDesire);
    /*0xe6bf98*/ bool IsDontMove(GuildDefine.GUILD_CHARACTER_MOVE_DESIRE ignoreDesire);
    /*0xe6be18*/ void UpdateCharacterAnim(Spine.Unity.SkeletonGraphic target, string animName, bool isLoop, float timeScale, bool init);
    /*0xe6b998*/ System.Collections.IEnumerator CoMoveLoop();
    /*0xe6bec8*/ System.Collections.IEnumerator CoRestTimer();
    /*0xe6c064*/ System.Collections.IEnumerator CoMoveDest(UnityEngine.Vector3 dest);
    /*0xe6c200*/ System.Collections.IEnumerator CoLateResize();
    /*0xe6c26c*/ void OnClick();

    class <CoMoveLoop>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;

        /*0xf69a20*/ <CoMoveLoop>d__29(int <>1__state);
        /*0xf69a4c*/ void System.IDisposable.Dispose();
        /*0xf69a50*/ bool MoveNext();
        /*0xf69b00*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf69b08*/ void System.Collections.IEnumerator.Reset();
        /*0xf69b48*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRestTimer>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;

        /*0xf69b50*/ <CoRestTimer>d__30(int <>1__state);
        /*0xf69b7c*/ void System.IDisposable.Dispose();
        /*0xf69b80*/ bool MoveNext();
        /*0xf69c74*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf69c7c*/ void System.Collections.IEnumerator.Reset();
        /*0xf69cbc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMoveDest>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;
        /*0x28*/ UnityEngine.Vector3 dest;
        /*0x34*/ UnityEngine.Vector3 <startPosition>5__2;
        /*0x40*/ float <moveSpeed>5__3;
        /*0x44*/ float <t>5__4;

        /*0xf69830*/ <CoMoveDest>d__31(int <>1__state);
        /*0xf6985c*/ void System.IDisposable.Dispose();
        /*0xf69860*/ bool MoveNext();
        /*0xf699d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf699d8*/ void System.Collections.IEnumerator.Reset();
        /*0xf69a18*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateResize>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildFieldCharacter <>4__this;

        /*0xf69678*/ <CoLateResize>d__32(int <>1__state);
        /*0xf696a4*/ void System.IDisposable.Dispose();
        /*0xf696a8*/ bool MoveNext();
        /*0xf697e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf697e8*/ void System.Collections.IEnumerator.Reset();
        /*0xf69828*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildGeneralBossPopup : GuiBase
{
    static /*0x0*/ int m_lastPage;
    /*0x40*/ LocalizeString m_bossInfoText;
    /*0x48*/ LocalizeString m_bossNameText;
    /*0x50*/ LocalizeString m_leftTime;
    /*0x58*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x60*/ GuildBossSkillSlot[] m_guildBossSkills;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x70*/ UnityEngine.GameObject[] m_pageButtonObjects;
    /*0x78*/ UnityEngine.UI.Button m_battleButton;
    /*0x80*/ UnityEngine.UI.Button m_sweepButton;
    /*0x88*/ UnityEngine.UI.Button m_unlockButton;
    /*0x90*/ UnityEngine.GameObject m_bestHuntObject;
    /*0x98*/ LocalizeString m_unlockAmountText;
    /*0xa0*/ LocalizeString m_tryCountText;
    /*0xa8*/ UnityEngine.UI.ScrollRect m_scrollInfoText;
    /*0xb0*/ HeroManageTooltip m_tooltip;
    /*0xb8*/ int m_currenctPageIndex;
    /*0xc0*/ TableData.TableData_Unitbase m_unitBase;
    /*0xc8*/ TableData.TableData_Unitlv m_unitLvData;
    /*0xd0*/ TableData.TableData_Guildboss m_guildBossData;
    /*0xd8*/ UnityEngine.Coroutine m_timerCoroutine;
    /*0xe0*/ int m_bossPageCount;
    /*0xe8*/ System.Collections.Generic.List<Rewards> m_rewardList;

    static /*0xe6fd3c*/ GuildGeneralBossPopup();
    /*0xe6fcc8*/ GuildGeneralBossPopup();
    /*0xe6c54c*/ void OnCreate();
    /*0xe6c550*/ void OnDelete();
    /*0xe6c554*/ void OnEnter();
    /*0xe6c5c0*/ void OnFinish();
    /*0xe6c5c4*/ void OnLeave();
    /*0xe6c760*/ void OnStart();
    /*0xe6c764*/ void OnExit();
    /*0xe6c8c8*/ void InitPopup();
    /*0xe6c934*/ void InitPopup(int pageIndex);
    /*0xe6cb68*/ void UpdatePage();
    /*0xe6ccfc*/ void UpdateButtons();
    /*0xe6d0ac*/ void UpdateUnlockAmount();
    /*0xe6d2c0*/ void UpdateBossName();
    /*0xe6d408*/ void UpdateBossInfo();
    /*0xe6e638*/ System.Collections.IEnumerator CoLateRefresh();
    /*0xe6cc40*/ void UpdateBossData();
    /*0xe6d9dc*/ void UpdateSkillList();
    /*0xe6e044*/ void UpdateTryCount();
    /*0xe6e6a4*/ int GetSkillLevel(TableData.TableData_Skilllv skillData, int tier);
    /*0xe6ddc8*/ void UpdateBoss();
    /*0xe6d574*/ void UpdateRewardList();
    /*0xe6df2c*/ void UpdatePageButton();
    /*0xe6e2e8*/ bool IsUnlockBoss();
    /*0xe6e5cc*/ int FindGuildHuntCount();
    /*0xe6eadc*/ void OnClickPage(bool isLeft);
    /*0xe6eba0*/ void OnClickBattleStart();
    /*0xe6eec4*/ void OnClickFastHunting();
    /*0xe6f1e8*/ void OnClickBestRecord();
    /*0xe6f35c*/ void OnClickRecord();
    /*0xe6f600*/ void OnClickHelp();
    /*0xe6f6a4*/ void OnClickRankBoard();
    /*0xe6f99c*/ void OnClickOpenBoss();
    /*0xe6faa8*/ void OnClickBossTooltip();
    /*0xe6fb28*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0xe6fc58*/ void HandleOnRefreshBoss();
    /*0xe6e298*/ void PlayLeftTime();
    /*0xe6fc5c*/ System.Collections.IEnumerator CoUpdateLeftTime();
    /*0xe6c9e0*/ void BindEvent();
    /*0xe6c5c8*/ void RemoveEvent();
    /*0xe6fd40*/ bool <UpdateUnlockAmount>b__34_0(TableData.TableData_Guildboss data);
    /*0xe6fd70*/ void <OnClickRecord>b__51_0(System.Collections.Generic.List<PTShare.Define.SGuildBossHistory> historys);

    class <CoLateRefresh>d__37 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildGeneralBossPopup <>4__this;

        /*0xf69e38*/ <CoLateRefresh>d__37(int <>1__state);
        /*0xf69e64*/ void System.IDisposable.Dispose();
        /*0xf69e68*/ bool MoveNext();
        /*0xf69f28*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf69f30*/ void System.Collections.IEnumerator.Reset();
        /*0xf69f70*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ GuildGeneralBossPopup.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Skillbase, int> <>9__39_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__39_1;
        static /*0x18*/ System.Action<ServerProtocol.ResGuildGuildRanking> <>9__53_0;

        static /*0xf69cc4*/ <>c();
        /*0xf69d24*/ <>c();
        /*0xf69d2c*/ int <UpdateSkillList>b__39_0(TableData.TableData_Skillbase x);
        /*0xf69d44*/ TableData.TableData_Skillbase <UpdateSkillList>b__39_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
        /*0xf69d90*/ void <OnClickRankBoard>b__53_0(ServerProtocol.ResGuildGuildRanking response);
    }

    class <CoUpdateLeftTime>d__59 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildGeneralBossPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__2;
        /*0x30*/ System.TimeSpan <timeSpan>5__3;

        /*0xf69f78*/ <CoUpdateLeftTime>d__59(int <>1__state);
        /*0xf69fa4*/ void System.IDisposable.Dispose();
        /*0xf69fa8*/ bool MoveNext();
        /*0xf6a634*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6a63c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6a67c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildHousePopup : GuiBase
{
    /*0x40*/ GuildMap m_guildMap;
    /*0x48*/ GuildTopWindow m_guildTopWindow;
    /*0x50*/ GuildNpcCharacter m_guildNPC;

    /*0xe70840*/ GuildHousePopup();
    /*0xe6fe20*/ void OnCreate();
    /*0xe6fe24*/ void OnEnter();
    /*0xe6fe90*/ void OnStart();
    /*0xe6fe94*/ void OnFinish();
    /*0xe6fe98*/ void OnLeave();
    /*0xe6fe9c*/ void OnDelete();
    /*0xe6fea0*/ void OnExit();
    /*0xe6ff8c*/ void InitPopup();
    /*0xe70070*/ void InitDialog();
    /*0xe705a0*/ void OnClickHelp();
    /*0xe70644*/ void OnClickExit();
    /*0xe70650*/ void OnClickGuildMemberList();
    /*0xe70724*/ void OnClickGuildShop();
    /*0xe70844*/ void <OnClickGuildMemberList>b__14_0();

    class <>c
    {
        static /*0x0*/ GuildHousePopup.<> <>9;
        static /*0x8*/ System.Action <>9__15_1;
        static /*0x10*/ System.Action <>9__15_0;

        static /*0xf6a684*/ <>c();
        /*0xf6a6e4*/ <>c();
        /*0xf6a6ec*/ void <OnClickGuildShop>b__15_0();
        /*0xf6a834*/ void <OnClickGuildShop>b__15_1();
    }
}

class GuildInfomationPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildMemberEntity m_scrollContent;
    /*0x48*/ LocalizeString m_guildId;
    /*0x50*/ LocalizeString m_titleText;
    /*0x58*/ LocalizeString m_levelRequireText;
    /*0x60*/ LocalizeString m_langText;
    /*0x68*/ LocalizeString m_requireText;
    /*0x70*/ LocalizeString m_crownCountText;
    /*0x78*/ LocalizeString m_guildNotifyText;
    /*0x80*/ LocalizeString m_guildUserCountText;
    /*0x88*/ GuildLevelSlot m_guildLevelSlot;
    /*0x90*/ UnityEngine.UI.Button m_guildRegisterButton;
    /*0x98*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0xa0*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0xa8*/ UnityEngine.GameObject m_guildCP;
    /*0xb0*/ LocalizeString m_guildCPText;
    /*0xb8*/ PTShare.Define.SGuild m_sGuild;
    /*0xc0*/ PTShare.Define.SGuildSummary m_sGuildSummary;
    /*0xc8*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> m_memberList;

    /*0xe72ee4*/ GuildInfomationPopup();
    /*0xe711bc*/ void OnCreate();
    /*0xe711c0*/ void OnDelete();
    /*0xe711c4*/ void OnEnter();
    /*0xe71318*/ void OnFinish();
    /*0xe7131c*/ void OnLeave();
    /*0xe71468*/ void OnStart();
    /*0xe7146c*/ void InitPopup(bool bJoinBtnActive, long cp);
    /*0xe715a4*/ void InitPopup(PTShare.Define.SGuildSummary sGuildSummary, PTShare.Define.SGuild sGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMember, bool bJoinBtnActive, long cp);
    /*0xe71808*/ void SetGuildId(int id);
    /*0xe718f0*/ void SetGuildLevelSlot(int level);
    /*0xe71900*/ void SetLevelRequire(int level);
    /*0xe71fa0*/ void SetLanguage(string lang);
    /*0xe71be8*/ void SetRequire(int requireType);
    /*0xe7278c*/ void SetEnableGuildMemberRegisterBtn(bool enable);
    /*0xe72348*/ void SetGuildName();
    /*0xe72308*/ void SetCrown(int crown);
    /*0xe723e4*/ void SetGuildNotify(string notify);
    /*0xe724cc*/ void SetGuildUserCount(int max, int now);
    /*0xe725e8*/ void SetGuildMemberList(System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMemberList);
    /*0xe72424*/ void SetGuildEmblem(PTShare.Define.SGuildMini data);
    /*0xe726c8*/ bool IsShowJoinRequestObject();
    /*0xe728c8*/ void OnClickRegisterRequest();
    /*0xe7285c*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0xe7123c*/ void BindEvent();
    /*0xe71394*/ void RemoveEvent();
    /*0xe72e0c*/ void HandleScrollContent(int index, GuildMemberEntity obj);
    /*0xe72ee8*/ void <OnClickRegisterRequest>b__39_0();

    class <CoLateScrollRectRefresh>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildInfomationPopup <>4__this;

        /*0xf6a8b8*/ <CoLateScrollRectRefresh>d__40(int <>1__state);
        /*0xf6a8e4*/ void System.IDisposable.Dispose();
        /*0xf6a8e8*/ bool MoveNext();
        /*0xf6a9a8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6a9b0*/ void System.Collections.IEnumerator.Reset();
        /*0xf6a9f0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildLanguageChangePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle[] Toogles;
    /*0x48*/ UnityEngine.UI.Text[] m_cLocalizeArray;
    /*0x50*/ int m_localizeTypeIndex;

    /*0xe73508*/ GuildLanguageChangePopup();
    /*0xe7308c*/ void OnCreate();
    /*0xe73090*/ void OnDelete();
    /*0xe73094*/ void OnEnter();
    /*0xe73098*/ void OnFinish();
    /*0xe7309c*/ void OnLeave();
    /*0xe730a0*/ void OnStart();
    /*0xe67a28*/ void InitPopup();
    /*0xe730a4*/ void LoadLocalizeType();
    /*0xe73308*/ void OnClickConfirm();
    /*0xe73474*/ void OnClickCancel();
    /*0xe73480*/ void OnClick_ChangeLanguage(int nIndex);
    /*0xe73500*/ void BindEvent();
    /*0xe73504*/ void RemoveEvent();
}

class GuildLevelSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_frame;
    /*0x20*/ LocalizeString m_level;
    /*0x28*/ ParticleBase m_particle;

    /*0xe73718*/ GuildLevelSlot();
    /*0xe72830*/ void InitSlot(int level);
    /*0xe73514*/ void SetLevel(int level);
    /*0xe735bc*/ void SetFrame(int level);
    /*0xe73628*/ void SetLevelUpParticle();
}

class GuildMainPopup : GuiBase
{
    /*0x40*/ GuildMap m_guildMap;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x50*/ GuildTopWindow m_guildTopWindow;
    /*0x58*/ UnityEngine.GameObject m_bossReddot;
    /*0x60*/ UnityEngine.GameObject m_guildManageReddot;
    /*0x68*/ UnityEngine.GameObject m_guildHouseReddt;
    /*0x70*/ UnityEngine.GameObject m_guildWarReddt;
    /*0x78*/ UnityEngine.Coroutine m_bossCoroutine;

    /*0xe74e1c*/ GuildMainPopup();
    /*0xe73a70*/ void OnCreate();
    /*0xe73a74*/ void OnDelete();
    /*0xe73a78*/ void OnEnter();
    /*0xe73a7c*/ void OnFinish();
    /*0xe73a80*/ void OnLeave();
    /*0xe73cc4*/ void OnStart();
    /*0xe73cc8*/ void OnExit();
    /*0xe6c7f4*/ void InitPopup();
    /*0xe74664*/ void RefreshReddot();
    /*0xe745a4*/ void CheckChangeMaster();
    /*0xe74050*/ void SetGuildBoss();
    /*0xe743a0*/ void SetReddot();
    /*0xe73d98*/ bool GetIsBossTryReddot();
    /*0xe74668*/ void UpdateCharacterAnim(Spine.Unity.SkeletonGraphic target, string animName, bool isLoop, float timeScale);
    /*0xe73e7c*/ void BindEvent();
    /*0xe73a84*/ void RemoveEvent();
    /*0xe74750*/ void HandleChangeGuild(PTShare.Define.SGuild sGuild);
    /*0xe74764*/ void HandleCharacterAnimComplete(Spine.TrackEntry trackEntry);
    /*0xe74828*/ void OnClickGuildMemberList();
    /*0xe748fc*/ void OnClickHunting();
    /*0xe749d0*/ void OnClickGuildShop();
    /*0xe74aec*/ void OnClickGuildHouse();
    /*0xe74d28*/ void OnClickGuildWar();
    /*0xe74dfc*/ void HandleChangeMemberData();
    /*0xe746e4*/ System.Collections.IEnumerator CoUpdateGuildBossAnim();
    /*0xe74e20*/ void <OnClickGuildMemberList>b__26_0();
    /*0xe74eb4*/ void <OnClickHunting>b__27_0();
    /*0xe74f48*/ void <OnClickGuildHouse>b__29_0();
    /*0xe7501c*/ void <OnClickGuildHouse>b__29_1();
    /*0xe750ac*/ void <OnClickGuildWar>b__30_0();

    class <>c__DisplayClass18_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> unlockBossList;

        /*0xf6ac2c*/ <>c__DisplayClass18_0();
        /*0xf6ac34*/ bool <SetGuildBoss>b__0(TableData.TableData_Guildboss data);
        /*0xf6ace0*/ bool <SetGuildBoss>b__1(TableData.TableData_Guildboss data);
    }

    class <>c
    {
        static /*0x0*/ GuildMainPopup.<> <>9;
        static /*0x8*/ System.Action <>9__28_1;
        static /*0x10*/ System.Action <>9__28_0;

        static /*0xf6a9f8*/ <>c();
        /*0xf6aa58*/ <>c();
        /*0xf6aa60*/ void <OnClickGuildShop>b__28_0();
        /*0xf6aba8*/ void <OnClickGuildShop>b__28_1();
    }

    class <CoUpdateGuildBossAnim>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMainPopup <>4__this;

        /*0xf6ad64*/ <CoUpdateGuildBossAnim>d__32(int <>1__state);
        /*0xf6ad90*/ void System.IDisposable.Dispose();
        /*0xf6ad94*/ bool MoveNext();
        /*0xf6aed4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6aedc*/ void System.Collections.IEnumerator.Reset();
        /*0xf6af1c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildManageButton : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_buttonName;
    /*0x20*/ UnityEngine.GameObject m_reddot;
    /*0x28*/ GuildDefine.GUILD_MANAGE_BTN m_buttonType;
    /*0x30*/ System.Action m_callBack;
    /*0x38*/ PTShare.Define.SGuildMember m_sMember;

    /*0xe77228*/ GuildManageButton();
    /*0xe75180*/ void InitManageButton(PTShare.Define.SGuildMember member, GuildDefine.GUILD_MANAGE_BTN btnType, System.Action callBack);
    /*0xe7591c*/ void SetReddot();
    /*0xe751ac*/ void SetButtonName();
    /*0xe759f4*/ void OnClick();
    /*0xe77238*/ void <OnClick>b__8_4(bool confirm);
    /*0xe776e0*/ void <OnClick>b__8_5(bool confirm);
    /*0xe77b8c*/ void <OnClick>b__8_6(bool confirm);
    /*0xe78038*/ void <OnClick>b__8_7(bool confirm);
    /*0xe784e8*/ void <OnClick>b__8_8(bool confirm);
    /*0xe78a58*/ void <OnClick>b__8_9(bool confirm);
    /*0xe78e8c*/ void <OnClick>b__8_17();

    class <>c
    {
        static /*0x0*/ GuildManageButton.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__8_0;
        static /*0x10*/ System.Action <>9__8_10;
        static /*0x18*/ System.Action<bool> <>9__8_1;
        static /*0x20*/ System.Action <>9__8_11;
        static /*0x28*/ System.Action<bool> <>9__8_2;
        static /*0x30*/ System.Action<System.Collections.Generic.List<PTShare.Define.SPlayer>> <>9__8_3;
        static /*0x38*/ System.Action <>9__8_12;
        static /*0x40*/ System.Action <>9__8_13;
        static /*0x48*/ System.Action <>9__8_14;
        static /*0x50*/ System.Action <>9__8_15;
        static /*0x58*/ System.Action <>9__8_16;

        static /*0xf6af24*/ <>c();
        /*0xf6af84*/ <>c();
        /*0xf6af8c*/ void <OnClick>b__8_0(bool instance);
        /*0xf6b04c*/ void <OnClick>b__8_1(bool confirm);
        /*0xf6b180*/ void <OnClick>b__8_10();
        /*0xf6b184*/ void <OnClick>b__8_2(bool confirm);
        /*0xf6b2b8*/ void <OnClick>b__8_11();
        /*0xf6b2bc*/ void <OnClick>b__8_3(System.Collections.Generic.List<PTShare.Define.SPlayer> instance);
        /*0xf6b344*/ void <OnClick>b__8_12();
        /*0xf6b3bc*/ void <OnClick>b__8_13();
        /*0xf6b434*/ void <OnClick>b__8_14();
        /*0xf6b4ac*/ void <OnClick>b__8_15();
        /*0xf6b524*/ void <OnClick>b__8_16();
    }
}

class GuildManagePopup : GuiBase
{
    static /*0x0*/ System.Action<string> OnChangeNotify;
    static /*0x8*/ System.Action OnChangeMemberData;
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ ScrollContent_GuildMemberEntity m_scrollContent;
    /*0x50*/ GuildLevelSlot m_guildLevelSlot;
    /*0x58*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x60*/ GuildManageWindow m_guildManageWindow;
    /*0x68*/ LocalizeString m_guildNameText;
    /*0x70*/ LocalizeString m_guildCrownText;
    /*0x78*/ LocalizeString m_guildNotifyText;
    /*0x80*/ LocalizeString m_guildUserCountText;
    /*0x88*/ LocalizeString m_guildIdText;
    /*0x90*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x98*/ UnityEngine.UI.Slider m_expSlider;
    /*0xa0*/ LocalizeString m_expSliderText;
    /*0xa8*/ UnityEngine.GameObject m_guildNewRequesterReddot;
    /*0xb0*/ PTShare.Define.SGuild m_sGuild;
    /*0xb8*/ GuildDefine.GUILD_MAP_TYPE m_openType;

    static /*0xe7a7ec*/ GuildManagePopup();
    /*0xe7a7e8*/ GuildManagePopup();
    /*0xe7905c*/ void OnCreate();
    /*0xe79060*/ void OnDelete();
    /*0xe79064*/ void OnEnter();
    /*0xe7955c*/ void OnFinish();
    /*0xe79560*/ void OnLeave();
    /*0xe799dc*/ void OnStart();
    /*0xe799e0*/ void OnExit();
    /*0xe79b20*/ void InitPopup();
    /*0xe708d8*/ void InitPopup(GuildDefine.GUILD_MAP_TYPE openType);
    /*0xe79b28*/ void SetGuildId();
    /*0xe79c18*/ void SetGuildLevelSlot(int level);
    /*0xe79c28*/ void SetGuildName(string name);
    /*0xe79c3c*/ void SetGuildCrown(int crown);
    /*0xe79c7c*/ void SetNotify(string notify);
    /*0xe79c90*/ void SetGuildUserCount(int maxUser, int currUser);
    /*0xe79f24*/ void SetSlider(int currValue, int maxValue);
    /*0xe79e28*/ void SetSliderMax();
    /*0xe79d54*/ void SetGuildEmblem(int index, int frame);
    /*0xe79d70*/ void SetReddot();
    /*0xe7a05c*/ void UpdateScrollContent();
    /*0xe7a170*/ void HandleChangeEmblem(int icon, int frame);
    /*0xe7a18c*/ void HandleChangeNotify(string notify);
    /*0xe7a1a0*/ void HandleChangeName(string name);
    /*0xe7a1b4*/ void HandleChangeMemberData();
    /*0xe7a268*/ void HandleGuildChange(PTShare.Define.SGuild sGuild);
    /*0xe7a27c*/ void OnClickGuildManage();
    /*0xe790dc*/ void BindEvent();
    /*0xe79564*/ void RemoveEvent();
    /*0xe7a104*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0xe7a744*/ void HandleScrollContent(int index, GuildMemberEntity obj);

    class <CoLateScrollRectRefresh>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildManagePopup <>4__this;

        /*0xf6b59c*/ <CoLateScrollRectRefresh>d__46(int <>1__state);
        /*0xf6b5c8*/ void System.IDisposable.Dispose();
        /*0xf6b5cc*/ bool MoveNext();
        /*0xf6b68c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6b694*/ void System.Collections.IEnumerator.Reset();
        /*0xf6b6d4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildManageWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildManageButton m_guildManageButtonPrefab;
    /*0x20*/ UnityEngine.GameObject parent;
    /*0x28*/ System.Collections.Generic.List<GuildManageButton> m_cashingList;
    /*0x30*/ bool m_exitWait;

    /*0xe7a94c*/ GuildManageWindow();
    /*0xe7a4c8*/ void InitWindow(PTShare.Define.SGuildMember member, GuildDefine.GUILD_MANAGE_BTN[] guildManageBtns);
    /*0xe7a7f0*/ void SetEnableButtons(bool enable);
    /*0xe7a914*/ void OnClickHide();
    /*0xe7a8a8*/ System.Collections.IEnumerator CoTouchBlock();

    class <CoTouchBlock>d__7 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildManageWindow <>4__this;

        /*0xf6b6dc*/ <CoTouchBlock>d__7(int <>1__state);
        /*0xf6b708*/ void System.IDisposable.Dispose();
        /*0xf6b70c*/ bool MoveNext();
        /*0xf6b7c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6b7d0*/ void System.Collections.IEnumerator.Reset();
        /*0xf6b810*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildManager : Singleton.Component.SingletonComponent<GuildManager>
{
    static /*0x0*/ System.Action<PTShare.Define.SGuild> OnChangeGuild;
    static /*0x8*/ System.Action OnRefreshGuild;
    static /*0x10*/ System.Action OnRefreshBoss;
    static /*0x18*/ System.Action OnRefreshReddot;
    /*0x28*/ PTShare.Define.SGuild m_playerGuild;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> m_playerGuildMemberList;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> m_searchGuildList;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> m_guildBossDataList;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> m_guildFrameList;
    /*0x50*/ int m_dailyPoint;
    /*0x54*/ int m_huntingRewardID;
    /*0x58*/ ServerProtocol.ResGuildRanking m_bossDamagePersonData;
    /*0x60*/ ServerProtocol.ResGuildGuildRanking m_bossDamageGuildData;
    /*0x68*/ bool <isNeedSetCamp>k__BackingField;
    /*0x69*/ bool <IsNewRequester>k__BackingField;
    /*0x6a*/ bool <IsNewOffice>k__BackingField;
    /*0x6b*/ bool <IsNewGuildWar>k__BackingField;
    /*0x6c*/ int <TrashCount>k__BackingField;
    /*0x70*/ int <SelectBoss>k__BackingField;
    /*0x74*/ int <GuildStayTime>k__BackingField;
    /*0x78*/ long <GuildBeforeMaster>k__BackingField;
    /*0x80*/ System.Collections.Generic.Dictionary<int, PTShare.Define.GuildWarPosition> currentMyGuildWarPosition;
    /*0x88*/ GuildPositionStatus currentMyOrganizeStatus;
    /*0x90*/ System.Collections.Generic.List<int> currentAttackUsingHeroIds;
    /*0x98*/ System.Collections.Generic.List<int> currentDefenseUsingHeroIds;
    /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> currentAttackMostHeroList;
    /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> currentDefenseMostHeroList;
    /*0xb0*/ PTShare.Define.SGuildWarPlayer currentAttackCaptainPlayer;
    /*0xb8*/ PTShare.Define.SGuildWarPlayer currentDefenseCaptainPlayer;
    /*0xc0*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> currentLegionHeroList;
    /*0xc8*/ bool bNewAtkDeckReddot;
    /*0xc9*/ bool bNewDefDeckReddot;
    /*0xd0*/ GuildWarInfomation guildWarInfomation;
    /*0x118*/ System.Collections.Generic.List<PTShare.Define.SContribution> guildWarContributionlist;
    /*0x120*/ int guildWarContributionRewardIndex;
    /*0x128*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> <CurrentDeckHeroes>k__BackingField;
    /*0x130*/ int <CurrentAttackTactics>k__BackingField;
    /*0x134*/ int <CurrentDefenseTactics>k__BackingField;

    static /*0xe81554*/ GuildManager();
    static /*0xe7e2d8*/ int SortGuildMember(PTShare.Define.SGuildMember lhs, PTShare.Define.SGuildMember rhs);
    /*0xe81354*/ GuildManager();
    /*0xe7a9c4*/ void AwakeInstance();
    /*0xe7a9c8*/ bool InitInstance();
    /*0xe7abe8*/ void ReleaseInstance();
    /*0xe7ad24*/ bool get_isNeedSetCamp();
    /*0xe7ad2c*/ void set_isNeedSetCamp(bool value);
    /*0xe7ad38*/ bool get_IsNewRequester();
    /*0xe7ad40*/ void set_IsNewRequester(bool value);
    /*0xe7ad4c*/ bool get_IsNewOffice();
    /*0xe7ad54*/ void set_IsNewOffice(bool value);
    /*0xe7ad60*/ bool get_IsNewGuildWar();
    /*0xe7ad68*/ void set_IsNewGuildWar(bool value);
    /*0xe7ad74*/ int get_TrashCount();
    /*0xe7ad7c*/ void set_TrashCount(int value);
    /*0xe65464*/ bool IsHaveGuild();
    /*0xe7ad84*/ int get_SelectBoss();
    /*0xe7ad8c*/ void set_SelectBoss(int value);
    /*0xe7ad94*/ int get_GuildStayTime();
    /*0xe7ad9c*/ void set_GuildStayTime(int value);
    /*0xe7ada4*/ long get_GuildBeforeMaster();
    /*0xe7adac*/ void set_GuildBeforeMaster(long value);
    /*0xe7adb4*/ ServerProtocol.ResGuildRanking GetBossDamagePersonRankData();
    /*0xe7adbc*/ ServerProtocol.ResGuildGuildRanking GetBossDamageGuildRankData();
    /*0xe7adc4*/ PTShare.Define.SGuild GetPlayerGuild();
    /*0xe65500*/ PTShare.Define.SGuildMember GetLocalPlayerMemberData();
    /*0xe6fa88*/ GuildDefine.GUILD_POSITION GetLocalPlayerGuildPosition();
    /*0xe7adcc*/ System.Collections.Generic.List<PTShare.Define.SGuildBoss> GetUnlockBossList();
    /*0xe7add4*/ bool IsMemberFull();
    /*0xe7ae44*/ System.Collections.Generic.List<PTShare.Define.SGuildMember> GetMemberList();
    /*0xe7ae4c*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> GetSearchGuildList();
    /*0xe62348*/ PTShare.Define.SGuildMember FindMemberData(long userId);
    /*0xe6224c*/ PTShare.Define.SGuildBoss FindUnlockBoss(int index);
    /*0xe7ae54*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardData(long damage);
    /*0xe7af64*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardDataByPrev(long damage);
    /*0xe7b074*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardDataByPrev(int hutingRewardID, long damage);
    /*0xe62f8c*/ TableData.TableData_Guildhuntingreward GetGuildHuntingRewardData(int hutingRewardID, long damage);
    /*0xe7b1a4*/ TableData.TableData_Guildhuntingreward CreateDummyTable(TableData.TableData_Guildhuntingreward prev);
    /*0xe7b238*/ TableData.TableData_Unitbase GetSelectBossTableData();
    /*0xe6acfc*/ int FindNeedEmblemLevel(int emblemIndex);
    /*0xe6ace4*/ int GetGuildLevel();
    /*0xe69bcc*/ int GetGuildEmblemIndex();
    /*0xe69be4*/ int GetGuildFrameIndex();
    /*0xe77048*/ string GetGuildName();
    /*0xe6e7a8*/ int GetGuildBossTryMaxCount();
    /*0xe79eec*/ int GetNextExp();
    /*0xe7b398*/ int GetLeftExp();
    /*0xe63884*/ int GetConsumeGuildPoint();
    /*0xe7b434*/ int GetDailyEarnGuildPoint();
    /*0xe7b450*/ int GetDayEarnGuildPoint();
    /*0xe7b458*/ int GetWeeklyEarnGuildPoint();
    /*0xe7b478*/ bool IsControlMember(string guildName, int position);
    /*0xe6e840*/ System.Collections.Generic.List<Rewards> GetHuntingDropItem(int bossIndex, long damage);
    /*0xe7b760*/ void NoticeKickGuild();
    /*0xe7b7e4*/ void UpdateAccountGuildData();
    /*0xe7b56c*/ void ParseEquipRewards(ref System.Collections.Generic.List<Rewards> refRewardList, int rate, string data);
    /*0xe7b914*/ void Send_GuildEnter(System.Action callBack);
    /*0xe74b9c*/ void Send_HouseEnter(System.Action callBack);
    /*0xe69080*/ void Send_GuildCreate(int guildMarkIndex, string guildName, string guildLang, int guildJoinRequire, int minLevelRequire, string joinNotify, System.Action callBack);
    /*0xe7bbc0*/ void Send_UpdateInfo(int guildMarkIndex, string guildLang, int guildJoinRequire, int minLevelRequire, string joinNotify, System.Action callBack);
    /*0xe686c8*/ void Send_UpdateEmblem(int emblemIndex, int frameIndex, System.Action callBack);
    /*0xe68d04*/ void Send_UpdateGuildLang(string lang, System.Action callBack);
    /*0xe689e8*/ void Send_UpdateGuildAcceptType(int guildJoinRequire, System.Action callBack);
    /*0xe67e68*/ void Send_UpdateGuildMinReq(int minLevelRequire, System.Action callBack);
    /*0xe6836c*/ void Send_UpdateJoinGuide(string guide, System.Action callBack);
    /*0xe7bdc0*/ void Send_ChangeGuildNotify(string notice, System.Action callBack);
    /*0xe76ebc*/ void Send_GuildRecommend(System.Action<bool> callBack);
    /*0xe7bfa4*/ void Send_ChangeGuildName(string str, System.Action callBack);
    /*0xe77380*/ void Send_GuildMasterInherit(long playerId, System.Action callBack);
    /*0xe78b2c*/ void Send_GuildKick(long playerId, System.Action callBack);
    /*0xe7c148*/ void Send_GuildDestroy(System.Action callBack);
    /*0xe7c498*/ void Send_GuildLeave(System.Action callBack);
    /*0xe7c7e8*/ void Send_GuildSearch(string str, System.Action callBack);
    /*0xe7c984*/ void Send_GuildDetail(int guildId, System.Action<PTShare.Define.SGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember>> callback);
    /*0xe729f8*/ void Send_GuildRegisterRequest(int guildId, System.Action callBack);
    /*0xe770a0*/ void Send_GuildRequesters(System.Action<System.Collections.Generic.List<PTShare.Define.SPlayer>> callBack);
    /*0xe7cb1c*/ void Send_AcceptGuildMember(long playerId, System.Action callBack);
    /*0xe7ce70*/ void Send_DeclineGuildRequester(long playerId, System.Action callBack);
    /*0xe7d008*/ void Send_AllAcceptGuildMember(System.Action callBack);
    /*0xe7d348*/ void Send_AllDeclineGuildRequester(System.Action callBack);
    /*0xe7d4d0*/ void Send_GuildMail(string name, string desc, System.Action callBack);
    /*0xe77cd4*/ void Send_ElderPromotion(long playerId, System.Action callBack);
    /*0xe78630*/ void Send_CaptainPromotion(long playerId, System.Action callBack);
    /*0xe77828*/ void Send_ElderDemote(long playerId, System.Action callBack);
    /*0xe78180*/ void Send_CaptainDemote(long playerId, System.Action callBack);
    /*0xe7d4e4*/ void Send_SetCamp(long playerId, int x, int y, System.Action callBack);
    /*0xe7d6b4*/ void Send_Clean(System.Action<PTShare.Define.SProperty> callBack);
    /*0xe63a1c*/ void Send_BossOpen(int bossIndex, System.Action callBack);
    /*0xe7d844*/ void Send_BossBegin(string heroIds, System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack);
    /*0xe7d9e8*/ void Send_BossFinish(string statistics, string playData, long lcp, string hpmps, double guildBossTotalHitDamage, System.Action<PTShare.Define.SProperty> action);
    /*0xe6315c*/ void Send_SweepBoss(int bossIndex, System.Action callBack);
    /*0xe6f468*/ void Send_BossHistory(int bossIndex, System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack);
    /*0xe7dbb8*/ void Send_BossReplay(string replayId, System.Action<PTShare.Define.SGuildBossReplay> callBack);
    /*0xe7dd50*/ void Send_BossGuildPersonDamageRanking(int bossIndex, System.Action<ServerProtocol.ResGuildRanking> callBack);
    /*0xe6f800*/ void Send_BossGuildDamageRanking(int bossIndex, System.Action<ServerProtocol.ResGuildGuildRanking> callBack);
    /*0xe7deec*/ void Send_WarHeroId(long playerId);
    /*0xe7dfec*/ void HandleOnChangeGuild(PTShare.Define.SGuild sGuild);
    /*0xe7e3b8*/ void HandleDailyChange();
    /*0xe7e5b8*/ void UpdateGuildFrame(System.Collections.Generic.List<PTShare.Define.SFrame> frameList);
    /*0xe7e89c*/ System.Collections.Generic.List<PTShare.Define.SProfileDecorate> GetUseGuildFrameList();
    /*0xe6a5c0*/ PTShare.Define.SProfileDecorate GetGuildFrame(int id);
    /*0xe6a6b0*/ string GetGuildFrameExpireDate(int id);
    /*0xe6a3bc*/ bool IsNotExpireGuildFrame(int id);
    /*0xe7e8a4*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHero> get_CurrentDeckHeroes();
    /*0xe7e8ac*/ void set_CurrentDeckHeroes(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> value);
    /*0xe7e8b4*/ int get_CurrentAttackTactics();
    /*0xe7e8bc*/ void set_CurrentAttackTactics(int value);
    /*0xe7e8c4*/ int get_CurrentDefenseTactics();
    /*0xe7e8cc*/ void set_CurrentDefenseTactics(int value);
    /*0xe7e8d4*/ string get_UserToken();
    /*0xe7e954*/ void Send_EnterGuildWar(System.Action onSuccess);
    /*0xe7ea8c*/ void Send_FormGuildWar(System.Action onSuccess);
    /*0xe7ebc4*/ void Send_MyFormGuildWar(System.Action<int, int> onSuccess);
    /*0xe7ecf8*/ void Send_FormDetailGuildWar(int type, int tableid, System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess);
    /*0xe7ee54*/ void Send_SetFormGuildWar(int type, PTShare.Define.SLegionHero hero, string unsetUniqueid, System.Action<PTShare.Define.SHero, long> onSuccess, System.Action<int, string> onFail);
    /*0xe7efdc*/ void Send_SetFormGuildWar(int type, PTShare.Define.SLegionHero hero, PTShare.Define.SHero unsetHero, long unsetPlayerId, System.Action onSuccess, System.Action<int, string> onFail);
    /*0xe7f164*/ void SetFormSubMethod(PTShare.Define.LegionStatus status, PTShare.Define.SLegionHero hero);
    /*0xe7f884*/ void Send_UnsetFormGuildWar(int type, PTShare.Define.SLegionHero hero, System.Action onSuccess, System.Action<int, string> onFail);
    /*0xe7f9f8*/ void Send_SearchGuildWar(bool bIsBuy, System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWar>> onSuccess, System.Action<int, string> onFail);
    /*0xe7fb48*/ void Send_ChoiceGuildWar(int guildid, System.Action<ServerProtocol.ResGuildWarChoice> onSuccess);
    /*0xe7fc8c*/ void Send_HistoryGuildWar(System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarHistory>> onSuccess);
    /*0xe7fdc0*/ void Send_SetCaptain(long playerid, int auth, System.Action onSuccess);
    /*0xe7ff10*/ void Send_BuyTactic(int tacticid, System.Action onSuccess);
    /*0xe80064*/ void Send_GuildWarDeck(int type, System.Action onSuccess);
    /*0xe801ac*/ void Send_GuildWarDeck_ForGuildWarTest(int type, System.Action<ServerProtocol.ResGuildWarDeck> onSuccess);
    /*0xe802f0*/ void Send_GuildWarUpdateDeck(int type, int tactic, string uniqueids, System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess);
    /*0xe8044c*/ void Send_GuildWarBuyTicket(int count, System.Action onSuccess);
    /*0xe80594*/ void Send_GuildWarMember(System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer>> onSuccess);
    /*0xe806c8*/ void Send_GuildWarContribution(System.Action<int, System.Collections.Generic.List<PTShare.Define.SContribution>> onSuccess);
    /*0xe80800*/ void Send_GuildWarUpdateMyCp(long cp);
    /*0xe80864*/ void SetGuildWarPosition(ArenaType type, PTShare.Define.GuildWarPosition position);
    /*0xe808d0*/ void SetGuildWarFormReddot(bool enable);
    /*0xe808dc*/ void SetGuildWarMyHeroReddot(bool enable);
    /*0xe808e8*/ void SetGuildWarAtkDeckReddot(bool enable);
    /*0xe808f4*/ void SetGuildWarDefDeckReddot(bool enable);
    /*0xe80900*/ void SetGuildWarCP(long cp);
    /*0xe80908*/ void SetCurrentTactics(PTShare.Define.GuildWarPosition ePosition, int nIndex);
    /*0xe8092c*/ GuildPositionStatus GetCurrentOrganizeStatus(ArenaType type);
    /*0xe80984*/ PTShare.Define.GuildWarPosition GetCurrentMyGuildWarPosition(ArenaType type);
    /*0xe80a00*/ GuildWarInfomation GetGuildWarInfomation();
    /*0xe80a10*/ PTShare.Define.SGuildWarPlayer GetGuildWarCaptain(PTShare.Define.GuildWarPosition ePosition);
    /*0xe80a2c*/ System.Collections.Generic.List<int> GetUseTacticsList();
    /*0xe80a34*/ bool IsUseTactics(int index);
    /*0xe80b60*/ System.Collections.Generic.List<int> GetCurrentUsingHeroIds(PTShare.Define.GuildWarPosition ePosition);
    /*0xe80b78*/ bool IsCurrentUsingHero(PTShare.Define.GuildWarPosition ePosition, int nTableID);
    /*0xe80c90*/ System.Collections.Generic.List<PTShare.Define.SStatBonusHero> GetCurrentMostHeroList(PTShare.Define.GuildWarPosition ePosition);
    /*0xe80cac*/ PTShare.Define.SStatBonusHero GetCurrentMostHero(PTShare.Define.GuildWarPosition ePosition, long playerid, int heroId);
    /*0xe80dc4*/ bool IsGuildWarFormReddot();
    /*0xe80dcc*/ bool IsGuildWarMyHeroReddot();
    /*0xe80dd4*/ bool IsGuildWarAtkDeckReddot();
    /*0xe80ddc*/ bool IsGuildWarDefDeckReddot();
    /*0xe80de4*/ System.Collections.Generic.List<PTShare.Define.SContribution> GetCurrentContributionList();
    /*0xe80dec*/ int GetCurrentContributionRewardIndex();
    /*0xe80df4*/ int GetLegionPlayerMaxCount();
    /*0xe80dfc*/ bool IsLocalGuildWarAttackCaptain();
    /*0xe80e68*/ bool IsLocalGuildWarDeffendCaptain();
    /*0xe7bb04*/ bool IsPossiableGuildWar();
    /*0xe81004*/ System.DateTime GetSeasonStartTime(int offset);
    /*0xe81180*/ System.DateTime GetSeasonNextTime();
    /*0xe80ec8*/ System.TimeSpan GetGuildWarReadyTime();
    /*0xe7bb20*/ System.TimeSpan GetGuildWarBattleTime();
    /*0xe81188*/ bool IsImpossibleGuildWarBattleTime();
    /*0xe81204*/ int GetGuildWarSeason();
    /*0xe81558*/ bool <GetGuildHuntingRewardData>b__60_0(TableData.TableData_Guildboss data);
    /*0xe8157c*/ bool <GetGuildHuntingRewardDataByPrev>b__61_0(TableData.TableData_Guildboss data);

    class <>c__DisplayClass58_0
    {
        /*0x10*/ long userId;

        /*0xf6fb48*/ <>c__DisplayClass58_0();
        /*0xf6fb50*/ bool <FindMemberData>b__0(PTShare.Define.SGuildMember member);
    }

    class <>c__DisplayClass59_0
    {
        /*0x10*/ int index;

        /*0xf6fb74*/ <>c__DisplayClass59_0();
        /*0xf6fb7c*/ bool <FindUnlockBoss>b__0(PTShare.Define.SGuildBoss data);
    }

    class <>c
    {
        static /*0x0*/ GuildManager.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Guildboss> <>9__65_0;
        static /*0x10*/ System.Action<bool> <>9__83_2;
        static /*0x18*/ System.Action<bool> <>9__83_3;
        static /*0x20*/ System.Action<int, string> <>9__101_1;
        static /*0x28*/ System.Action<int, string> <>9__109_1;
        static /*0x30*/ System.Action<bool> <>9__123_0;
        static /*0x38*/ System.Action <>9__125_0;
        static /*0x40*/ System.Action <>9__163_3;
        static /*0x48*/ System.Func<PTShare.Define.SLegionHero, long> <>9__165_3;
        static /*0x50*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__165_4;
        static /*0x58*/ System.Func<PTShare.Define.SLegionHero, long> <>9__165_6;
        static /*0x60*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__165_7;
        static /*0x68*/ System.Func<PTShare.Define.SLegionHero, long> <>9__166_4;
        static /*0x70*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__166_5;
        static /*0x78*/ System.Func<PTShare.Define.SLegionHero, long> <>9__166_7;
        static /*0x80*/ System.Func<PTShare.Define.SLegionHero, bool> <>9__166_8;

        static /*0xf6b818*/ <>c();
        /*0xf6b878*/ <>c();
        /*0xf6b880*/ bool <GetSelectBossTableData>b__65_0(TableData.TableData_Guildboss f);
        /*0xf6b8e8*/ void <Send_GuildEnter>b__83_2(bool dontused);
        /*0xf6b9d8*/ void <Send_GuildEnter>b__83_3(bool dontused);
        /*0xf6bac8*/ void <Send_GuildRegisterRequest>b__101_1(int errcode, string args);
        /*0xf6bc98*/ void <Send_CaptainPromotion>b__109_1(int errcode, string args);
        /*0xf6bfe8*/ void <HandleOnChangeGuild>b__123_0(bool instance);
        /*0xf6c094*/ void <HandleDailyChange>b__125_0();
        /*0xf6c140*/ void <Send_SetFormGuildWar>b__163_3();
        /*0xf6c228*/ long <SetFormSubMethod>b__165_3(PTShare.Define.SLegionHero x);
        /*0xf6c24c*/ bool <SetFormSubMethod>b__165_4(PTShare.Define.SLegionHero y);
        /*0xf6c270*/ long <SetFormSubMethod>b__165_6(PTShare.Define.SLegionHero x);
        /*0xf6c294*/ bool <SetFormSubMethod>b__165_7(PTShare.Define.SLegionHero y);
        /*0xf6c2b8*/ long <Send_UnsetFormGuildWar>b__166_4(PTShare.Define.SLegionHero x);
        /*0xf6c2dc*/ bool <Send_UnsetFormGuildWar>b__166_5(PTShare.Define.SLegionHero y);
        /*0xf6c300*/ long <Send_UnsetFormGuildWar>b__166_7(PTShare.Define.SLegionHero x);
        /*0xf6c324*/ bool <Send_UnsetFormGuildWar>b__166_8(PTShare.Define.SLegionHero y);
    }

    class <>c__DisplayClass79_0
    {
        /*0x10*/ int bossIndex;

        /*0xf6fba0*/ <>c__DisplayClass79_0();
        /*0xf6fba8*/ bool <GetHuntingDropItem>b__0(TableData.TableData_Guildboss data);
    }

    class <>c__DisplayClass83_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6fbcc*/ <>c__DisplayClass83_0();
        /*0xf6fbd4*/ void <Send_GuildEnter>b__0(ServerProtocol.ResGuildEnter instance);
        /*0xf6fe6c*/ void <Send_GuildEnter>b__1(int failed, string args);
    }

    class <>c__DisplayClass84_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6ffd4*/ <>c__DisplayClass84_0();
        /*0xf6ffdc*/ void <Send_HouseEnter>b__0(ServerProtocol.ResGuildOffice instance);
    }

    class <>c__DisplayClass85_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action <>9__1;

        /*0xf70018*/ <>c__DisplayClass85_0();
        /*0xf70020*/ void <Send_GuildCreate>b__0(ServerProtocol.ResGuildCreate instance);
        /*0xf70300*/ void <Send_GuildCreate>b__1();
    }

    class <>c__DisplayClass86_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int guildMarkIndex;
        /*0x20*/ string guildLang;
        /*0x28*/ int guildJoinRequire;
        /*0x2c*/ int minLevelRequire;
        /*0x30*/ string joinNotify;
        /*0x38*/ System.Action callBack;

        /*0xf703b0*/ <>c__DisplayClass86_0();
        /*0xf703b8*/ void <Send_UpdateInfo>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int emblemIndex;
        /*0x1c*/ int frameIndex;
        /*0x20*/ System.Action callBack;

        /*0xf70458*/ <>c__DisplayClass87_0();
        /*0xf70460*/ void <Send_UpdateEmblem>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string lang;
        /*0x20*/ System.Action callBack;

        /*0xf704b8*/ <>c__DisplayClass88_0();
        /*0xf704c0*/ void <Send_UpdateGuildLang>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass89_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int guildJoinRequire;
        /*0x20*/ System.Action callBack;

        /*0xf70500*/ <>c__DisplayClass89_0();
        /*0xf70508*/ void <Send_UpdateGuildAcceptType>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass90_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int minLevelRequire;
        /*0x20*/ System.Action callBack;

        /*0xf70548*/ <>c__DisplayClass90_0();
        /*0xf70550*/ void <Send_UpdateGuildMinReq>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass91_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string guide;
        /*0x20*/ System.Action callBack;

        /*0xf70590*/ <>c__DisplayClass91_0();
        /*0xf70598*/ void <Send_UpdateJoinGuide>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass92_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string notice;
        /*0x20*/ System.Action callBack;

        /*0xf705d8*/ <>c__DisplayClass92_0();
        /*0xf705e0*/ void <Send_ChangeGuildNotify>b__0(ServerProtocol.ResGuildUpdateInfo instance);
    }

    class <>c__DisplayClass93_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<bool> callBack;

        /*0xf70620*/ <>c__DisplayClass93_0();
        /*0xf70628*/ void <Send_GuildRecommend>b__0(ServerProtocol.ResGuildRecommend instance);
    }

    class <>c__DisplayClass94_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ string str;
        /*0x20*/ System.Action callBack;

        /*0xf7078c*/ <>c__DisplayClass94_0();
        /*0xf70794*/ void <Send_ChangeGuildName>b__0(ServerProtocol.ResUpdateName instance);
    }

    class <>c__DisplayClass95_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf70864*/ <>c__DisplayClass95_0();
        /*0xf7086c*/ void <Send_GuildMasterInherit>b__0(ServerProtocol.ResGuildDevolve instance);
    }

    class <>c__DisplayClass96_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf708f4*/ <>c__DisplayClass96_0();
        /*0xf708fc*/ void <Send_GuildKick>b__0(ServerProtocol.ResGuildKick instance);
    }

    class <>c__DisplayClass97_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf7099c*/ <>c__DisplayClass97_0();
        /*0xf709a4*/ void <Send_GuildDestroy>b__0(ServerProtocol.ResGuildLeave instance);
    }

    class <>c__DisplayClass98_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf70b10*/ <>c__DisplayClass98_0();
        /*0xf70b18*/ void <Send_GuildLeave>b__0(ServerProtocol.ResGuildLeave instance);
    }

    class <>c__DisplayClass99_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf70c08*/ <>c__DisplayClass99_0();
        /*0xf70c10*/ void <Send_GuildSearch>b__0(ServerProtocol.ResGuildSearch instance);
    }

    class <>c__DisplayClass100_0
    {
        /*0x10*/ System.Action<PTShare.Define.SGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember>> callback;

        /*0xf6c348*/ <>c__DisplayClass100_0();
        /*0xf6c350*/ void <Send_GuildDetail>b__0(ServerProtocol.ResGuildDetail instance);
    }

    class <>c__DisplayClass101_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action <>9__2;

        /*0xf6c3c8*/ <>c__DisplayClass101_0();
        /*0xf6c3d0*/ void <Send_GuildRegisterRequest>b__0(ServerProtocol.ResGuildSendReq instance);
        /*0xf6c4dc*/ void <Send_GuildRegisterRequest>b__2();
    }

    class <>c__DisplayClass102_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SPlayer>> callBack;

        /*0xf6c59c*/ <>c__DisplayClass102_0();
        /*0xf6c5a4*/ void <Send_GuildRequesters>b__0(ServerProtocol.ResGuildRequestors instance);
    }

    class <>c__DisplayClass103_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6c61c*/ <>c__DisplayClass103_0();
        /*0xf6c624*/ void <Send_AcceptGuildMember>b__0(ServerProtocol.ResGuildAcceptReq instance);
    }

    class <>c__DisplayClass104_0
    {
        /*0x10*/ System.Action callBack;

        /*0xf6c74c*/ <>c__DisplayClass104_0();
        /*0xf6c754*/ void <Send_DeclineGuildRequester>b__0(ServerProtocol.ResGuildDenyReq instance);
    }

    class <>c__DisplayClass105_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0xf6c768*/ <>c__DisplayClass105_0();
        /*0xf6c770*/ void <Send_AllAcceptGuildMember>b__0(ServerProtocol.ResGuildAcceptReqAll instance);
    }

    class <>c__DisplayClass106_0
    {
        /*0x10*/ System.Action callBack;

        /*0xf6c8e8*/ <>c__DisplayClass106_0();
        /*0xf6c8f0*/ void <Send_AllDeclineGuildRequester>b__0(ServerProtocol.ResGuildDenyReqAll instance);
    }

    class <>c__DisplayClass108_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6c904*/ <>c__DisplayClass108_0();
        /*0xf6c90c*/ void <Send_ElderPromotion>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass109_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6ca48*/ <>c__DisplayClass109_0();
        /*0xf6ca50*/ void <Send_CaptainPromotion>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass110_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6cb8c*/ <>c__DisplayClass110_0();
        /*0xf6cb94*/ void <Send_ElderDemote>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass111_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ long playerId;
        /*0x20*/ System.Action callBack;

        /*0xf6cccc*/ <>c__DisplayClass111_0();
        /*0xf6ccd4*/ void <Send_CaptainDemote>b__0(ServerProtocol.ResGuildSetPosition instance);
    }

    class <>c__DisplayClass112_0
    {
        /*0x10*/ System.Action callBack;

        /*0xf6ce0c*/ <>c__DisplayClass112_0();
        /*0xf6ce14*/ void <Send_SetCamp>b__0(ServerProtocol.ResGuildSetCamp instance);
    }

    class <>c__DisplayClass113_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> callBack;

        /*0xf6ce28*/ <>c__DisplayClass113_0();
        /*0xf6ce30*/ void <Send_Clean>b__0(ServerProtocol.ResGuildClean instance);
    }

    class <>c__DisplayClass114_0
    {
        /*0x10*/ int bossIndex;
        /*0x18*/ GuildManager <>4__this;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<TableData.TableData_Guildboss> <>9__1;
        /*0x30*/ System.Predicate<PTShare.Define.SGuildBoss> <>9__2;

        /*0xf6cf10*/ <>c__DisplayClass114_0();
        /*0xf6cf18*/ void <Send_BossOpen>b__0(ServerProtocol.ResGuildBossOpen instance);
        /*0xf6d2dc*/ bool <Send_BossOpen>b__1(TableData.TableData_Guildboss data);
        /*0xf6d300*/ bool <Send_BossOpen>b__2(PTShare.Define.SGuildBoss findData);
    }

    class <>c__DisplayClass115_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SBattleHero>> callBack;
        /*0x20*/ System.Predicate<TableData.TableData_Guildboss> <>9__1;

        /*0xf6d324*/ <>c__DisplayClass115_0();
        /*0xf6d32c*/ void <Send_BossBegin>b__0(ServerProtocol.ResGuildBegin instance);
        /*0xf6d4c0*/ bool <Send_BossBegin>b__1(TableData.TableData_Guildboss data);
    }

    class <>c__DisplayClass116_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ double guildBossTotalHitDamage;
        /*0x20*/ System.Action<PTShare.Define.SProperty> action;
        /*0x28*/ System.Predicate<PTShare.Define.SGuildBoss> <>9__1;

        /*0xf6d4f0*/ <>c__DisplayClass116_0();
        /*0xf6d4f8*/ void <Send_BossFinish>b__0(ServerProtocol.ResGuildFinish instance);
        /*0xf6d714*/ bool <Send_BossFinish>b__1(PTShare.Define.SGuildBoss data);
    }

    class <>c__DisplayClass117_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int bossIndex;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SGuildBoss> <>9__1;

        /*0xf6d744*/ <>c__DisplayClass117_0();
        /*0xf6d74c*/ void <Send_SweepBoss>b__0(ServerProtocol.ResGuildMopUp instance);
        /*0xf6d980*/ bool <Send_SweepBoss>b__1(PTShare.Define.SGuildBoss data);
    }

    class <>c__DisplayClass118_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildBossHistory>> callBack;

        /*0xf6d9a4*/ <>c__DisplayClass118_0();
        /*0xf6d9ac*/ void <Send_BossHistory>b__0(ServerProtocol.ResGuildBossHistory instance);
    }

    class <>c__DisplayClass119_0
    {
        /*0x10*/ System.Action<PTShare.Define.SGuildBossReplay> callBack;

        /*0xf6da24*/ <>c__DisplayClass119_0();
        /*0xf6da2c*/ void <Send_BossReplay>b__0(ServerProtocol.ResGuildReplay instance);
    }

    class <>c__DisplayClass120_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResGuildRanking> callBack;

        /*0xf6daa4*/ <>c__DisplayClass120_0();
        /*0xf6daac*/ void <Send_BossGuildPersonDamageRanking>b__0(ServerProtocol.ResGuildRanking response);
    }

    class <>c__DisplayClass121_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResGuildGuildRanking> callBack;

        /*0xf6db2c*/ <>c__DisplayClass121_0();
        /*0xf6db34*/ void <Send_BossGuildDamageRanking>b__0(ServerProtocol.ResGuildGuildRanking response);
    }

    class <>c__DisplayClass128_0
    {
        /*0x10*/ int id;

        /*0xf6dbb4*/ <>c__DisplayClass128_0();
        /*0xf6dbbc*/ bool <GetGuildFrame>b__0(PTShare.Define.SProfileDecorate x);
    }

    class <>c__DisplayClass159_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6dbe0*/ <>c__DisplayClass159_0();
        /*0xf6dbe8*/ void <Send_EnterGuildWar>b__0(ServerProtocol.ResGuildWarEnter res);
    }

    class <>c__DisplayClass160_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6dc64*/ <>c__DisplayClass160_0();
        /*0xf6dc6c*/ void <Send_FormGuildWar>b__0(ServerProtocol.ResGuildWarForm res);
    }

    class <>c__DisplayClass161_0
    {
        /*0x10*/ System.Action<int, int> onSuccess;

        /*0xf6df94*/ <>c__DisplayClass161_0();
        /*0xf6df9c*/ void <Send_MyFormGuildWar>b__0(ServerProtocol.ResGuildWarMyFormHero res);
    }

    class <>c__DisplayClass162_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int tableid;
        /*0x20*/ System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess;
        /*0x28*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__2;
        /*0x30*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__3;
        /*0x38*/ System.Action<PTShare.Define.SLegionHero> <>9__1;

        /*0xf6e014*/ <>c__DisplayClass162_0();
        /*0xf6e01c*/ void <Send_FormDetailGuildWar>b__0(ServerProtocol.ResGuildWarFormDetail res);
        /*0xf6e144*/ void <Send_FormDetailGuildWar>b__1(PTShare.Define.SLegionHero x);
        /*0xf6e2f4*/ bool <Send_FormDetailGuildWar>b__2(PTShare.Define.SStatBonusHero y);
        /*0xf6e318*/ bool <Send_FormDetailGuildWar>b__3(PTShare.Define.SStatBonusHero y);
    }

    class <>c__DisplayClass163_0
    {
        /*0x10*/ int type;
        /*0x18*/ GuildManager <>4__this;
        /*0x20*/ PTShare.Define.SLegionHero hero;
        /*0x28*/ System.Action<int, string> onFail;
        /*0x30*/ string unsetUniqueid;
        /*0x38*/ System.Action<PTShare.Define.SHero, long> onSuccess;
        /*0x40*/ System.Action<PTShare.Define.SHero, long> <>9__2;
        /*0x48*/ System.Action<PTShare.Define.SLegionHero> <>9__1;

        /*0xf6e33c*/ <>c__DisplayClass163_0();
        /*0xf6e344*/ void <Send_SetFormGuildWar>b__0(ServerProtocol.ResGuildWarSetForm res);
        /*0xf6e51c*/ void <Send_SetFormGuildWar>b__1(PTShare.Define.SLegionHero changeHero);
        /*0xf6e5f8*/ void <Send_SetFormGuildWar>b__2(PTShare.Define.SHero result, long playerId);
    }

    class <>c__DisplayClass164_0
    {
        /*0x10*/ int type;
        /*0x18*/ PTShare.Define.SHero unsetHero;
        /*0x20*/ GuildManager <>4__this;
        /*0x28*/ long unsetPlayerId;
        /*0x30*/ PTShare.Define.SLegionHero hero;
        /*0x38*/ System.Action onSuccess;

        /*0xf6e6f4*/ <>c__DisplayClass164_0();
        /*0xf6e6fc*/ void <Send_SetFormGuildWar>b__0(ServerProtocol.ResGuildWarSetForm res);
    }

    class <>c__DisplayClass165_0
    {
        /*0x10*/ int type;
        /*0x18*/ PTShare.Define.SLegionHero hero;

        /*0xf6e774*/ <>c__DisplayClass165_0();
        /*0xf6e77c*/ void <SetFormSubMethod>b__0(PTShare.Define.SLegionHero x);
        /*0xf6e7dc*/ bool <SetFormSubMethod>b__1(PTShare.Define.SStatBonusHero x);
        /*0xf6e80c*/ bool <SetFormSubMethod>b__2(PTShare.Define.SStatBonusHero x);
        /*0xf6e83c*/ bool <SetFormSubMethod>b__5(int x);
        /*0xf6e860*/ bool <SetFormSubMethod>b__8(int x);
    }

    class <>c__DisplayClass166_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ PTShare.Define.SLegionHero hero;
        /*0x20*/ int type;
        /*0x28*/ System.Action onSuccess;
        /*0x30*/ System.Action<PTShare.Define.SLegionHero> <>9__1;
        /*0x38*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__2;
        /*0x40*/ System.Predicate<PTShare.Define.SStatBonusHero> <>9__3;
        /*0x48*/ System.Func<int, bool> <>9__6;
        /*0x50*/ System.Func<int, bool> <>9__9;

        /*0xf6e884*/ <>c__DisplayClass166_0();
        /*0xf6e88c*/ void <Send_UnsetFormGuildWar>b__0(ServerProtocol.ResGuildWarUnsetForm res);
        /*0xf6f048*/ void <Send_UnsetFormGuildWar>b__1(PTShare.Define.SLegionHero x);
        /*0xf6f090*/ bool <Send_UnsetFormGuildWar>b__2(PTShare.Define.SStatBonusHero x);
        /*0xf6f0c0*/ bool <Send_UnsetFormGuildWar>b__3(PTShare.Define.SStatBonusHero x);
        /*0xf6f0f0*/ bool <Send_UnsetFormGuildWar>b__6(int x);
        /*0xf6f114*/ bool <Send_UnsetFormGuildWar>b__9(int x);
    }

    class <>c__DisplayClass167_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWar>> onSuccess;

        /*0xf6f138*/ <>c__DisplayClass167_0();
        /*0xf6f140*/ void <Send_SearchGuildWar>b__0(ServerProtocol.ResGuildWarSearch res);
    }

    class <>c__DisplayClass168_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResGuildWarChoice> onSuccess;

        /*0xf6f288*/ <>c__DisplayClass168_0();
        /*0xf6f290*/ void <Send_ChoiceGuildWar>b__0(ServerProtocol.ResGuildWarChoice res);
    }

    class <>c__DisplayClass169_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarHistory>> onSuccess;

        /*0xf6f300*/ <>c__DisplayClass169_0();
        /*0xf6f308*/ void <Send_HistoryGuildWar>b__0(ServerProtocol.ResGuildWarHistory res);
    }

    class <>c__DisplayClass170_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6f380*/ <>c__DisplayClass170_0();
        /*0xf6f388*/ void <Send_SetCaptain>b__0(ServerProtocol.ResGuildWarSetCaptain res);
    }

    class <>c__DisplayClass171_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ int tacticid;
        /*0x20*/ System.Action onSuccess;

        /*0xf6f658*/ <>c__DisplayClass171_0();
        /*0xf6f660*/ void <Send_BuyTactic>b__0(ServerProtocol.ResGuildWarBuyTactic res);
    }

    class <>c__DisplayClass172_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6f708*/ <>c__DisplayClass172_0();
        /*0xf6f710*/ void <Send_GuildWarDeck>b__0(ServerProtocol.ResGuildWarDeck res);
    }

    class <>c__DisplayClass173_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResGuildWarDeck> onSuccess;

        /*0xf6f76c*/ <>c__DisplayClass173_0();
        /*0xf6f774*/ void <Send_GuildWarDeck_ForGuildWarTest>b__0(ServerProtocol.ResGuildWarDeck res);
    }

    class <>c__DisplayClass174_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SLegionHero>> onSuccess;

        /*0xf6f7e4*/ <>c__DisplayClass174_0();
        /*0xf6f7ec*/ void <Send_GuildWarUpdateDeck>b__0(ServerProtocol.ResGuildWarUpdateDeck res);
    }

    class <>c__DisplayClass175_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0xf6f864*/ <>c__DisplayClass175_0();
        /*0xf6f86c*/ void <Send_GuildWarBuyTicket>b__0(ServerProtocol.ResGuildWarTicket res);
    }

    class <>c__DisplayClass176_0
    {
        /*0x10*/ System.Action<System.Collections.Generic.List<PTShare.Define.SGuildWarPlayer>> onSuccess;

        /*0xf6f9a8*/ <>c__DisplayClass176_0();
        /*0xf6f9b0*/ void <Send_GuildWarMember>b__0(ServerProtocol.ResGuildWarMember res);
    }

    class <>c__DisplayClass177_0
    {
        /*0x10*/ GuildManager <>4__this;
        /*0x18*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SContribution>> onSuccess;

        /*0xf6fa28*/ <>c__DisplayClass177_0();
        /*0xf6fa30*/ void <Send_GuildWarContribution>b__0(ServerProtocol.ResGuildWarContribution res);
    }

    class <>c__DisplayClass191_0
    {
        /*0x10*/ int index;

        /*0xf6fad4*/ <>c__DisplayClass191_0();
        /*0xf6fadc*/ bool <IsUseTactics>b__0(int x);
    }

    class <>c__DisplayClass193_0
    {
        /*0x10*/ int nTableID;

        /*0xf6faec*/ <>c__DisplayClass193_0();
        /*0xf6faf4*/ bool <IsCurrentUsingHero>b__0(int x);
    }

    class <>c__DisplayClass195_0
    {
        /*0x10*/ int heroId;
        /*0x18*/ long playerid;

        /*0xf6fb04*/ <>c__DisplayClass195_0();
        /*0xf6fb0c*/ bool <GetCurrentMostHero>b__0(PTShare.Define.SStatBonusHero f);
    }
}

class GuildPositionStatus
{
    /*0x10*/ PTShare.Define.GuildWarPosition Position;
    /*0x14*/ int MaximumDispatch;
    /*0x18*/ int DispatchChar;
    /*0x1c*/ bool Combat;
    /*0x1d*/ bool AttackDispatch;
    /*0x1e*/ bool AttackSetting;
    /*0x1f*/ bool AttackFormationSelect;
    /*0x20*/ bool AttackPickDispatch;
    /*0x21*/ bool DefenceSetting;
    /*0x22*/ bool DefenceDispatch;
    /*0x23*/ bool DefenceFormationSelect;
    /*0x24*/ bool DefencePickDispatch;

    /*0x110b55c*/ GuildPositionStatus();
    /*0x110b564*/ GuildPositionStatus(ArenaType type, PTShare.Define.GuildWarPosition position);
    /*0x110b594*/ void Initialize(ArenaType type, PTShare.Define.GuildWarPosition position);
    /*0x110b678*/ void Reset();
    /*0x110b76c*/ void <Initialize>b__14_0(TableData.TableData_Guildwarorganize x);
    /*0x110b864*/ void <Reset>b__15_0(System.Reflection.FieldInfo x);
}

struct GuildWarInfomation
{
    /*0x10*/ bool newForm;
    /*0x11*/ bool newMyHero;
    /*0x14*/ int guildPoint;
    /*0x18*/ int guildRank;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> rankguilds;
    /*0x28*/ System.Collections.Generic.List<int> tactics;
    /*0x30*/ int rewardIndex;
    /*0x34*/ int ticket;
    /*0x38*/ int buylimit;
    /*0x3c*/ int newauth;
    /*0x40*/ int myauth;
    /*0x48*/ long cp;
    /*0x50*/ PTShare.Define.SGuildWarReward newreward;

    /*0xa8a8e0*/ GuildWarInfomation(ServerProtocol.ResGuildWarEnter protocol);
}

class GuildMemberEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x20*/ LocalizeString m_nickNameText;
    /*0x28*/ LocalizeString m_guildCrownText;
    /*0x30*/ AtlasImage m_onlineIcon;
    /*0x38*/ LocalizeString m_lastAccessText;
    /*0x40*/ UnityEngine.GameObject m_battleButtonObject;
    /*0x48*/ TooltipTargetUI m_tooltipTargetUI;
    /*0x50*/ AtlasImage[] m_guildBadges;
    /*0x58*/ PTShare.Define.SGuildMember m_memberData;

    /*0x1109c1c*/ GuildMemberEntity();
    /*0x110943c*/ void InitEntity(PTShare.Define.SGuildMember member, bool showBattleBtn);
    /*0x1109830*/ void SerProfile();
    /*0x1109994*/ void SetNickName(string name);
    /*0x1109954*/ void SetCrownCount(int crownCount);
    /*0x11099a8*/ void SetOnlineIcon(bool enable);
    /*0x11099c0*/ void SetLastAccess(string lastAccess);
    /*0x11099d4*/ void SetBadge();
    /*0x1109bb0*/ void OnClickFight();
    /*0x1109c78*/ void <SerProfile>b__10_0();
}

class GuildNameChangePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_guildName;
    /*0x48*/ LocalizeString m_userCurrencyText;
    /*0x50*/ LocalizeString m_costCurrencyText;
    /*0x58*/ UnityEngine.GameObject[] m_currencyParent;

    /*0x110a62c*/ GuildNameChangePopup();
    /*0x1109d04*/ void OnCreate();
    /*0x1109d08*/ void OnDelete();
    /*0x1109d0c*/ void OnEnter();
    /*0x1109d78*/ void OnFinish();
    /*0x1109d7c*/ void OnLeave();
    /*0x1109d80*/ void OnStart();
    /*0x1109d84*/ void InitPopup(string name);
    /*0x1109e20*/ void SetCurrency();
    /*0x110a16c*/ void EnableCurrencyParent(bool enable);
    /*0x110a1e8*/ void OnClickConfirm();
    /*0x110a5ac*/ void OnClickCancel();
    /*0x110a634*/ void <OnClickConfirm>b__13_0();
}

class GuildNoticePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_notifyInputField;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_infoText;
    /*0x58*/ bool m_isJoinNotify;

    /*0x110ae28*/ GuildNoticePopup();
    /*0x110a718*/ void OnCreate();
    /*0x110a71c*/ void OnDelete();
    /*0x110a720*/ void OnEnter();
    /*0x110a78c*/ void OnFinish();
    /*0x110a790*/ void OnLeave();
    /*0x110a794*/ void OnStart();
    /*0x110a798*/ void InitPopup(bool isJoinNotify, string notice);
    /*0x110a9b8*/ void OnCancel();
    /*0x110aa38*/ void OnClickConfirm();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ string str;
        /*0x18*/ GuildNoticePopup <>4__this;

        /*0xf71568*/ <>c__DisplayClass12_0();
        /*0xf71570*/ void <OnClickConfirm>b__0();
    }
}

class GuildNpcCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_baseCharacterSkel;
    /*0x20*/ UnityEngine.CanvasGroup m_dialogCanvas;
    /*0x28*/ LocalizeString m_dialogText;
    /*0x30*/ System.Action m_action;
    /*0x38*/ bool m_isTalk;
    /*0x40*/ UnityEngine.Coroutine m_coroutine;

    /*0x110b1a0*/ GuildNpcCharacter();
    /*0x110ae30*/ void OnDisable();
    /*0x110ae64*/ void InitNpc();
    /*0x110af1c*/ void UpdateCharacterAnim(string animName, bool isLoop, float timeScale, bool init, System.Action callBack);
    /*0x110b0e8*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x110b0fc*/ void OnClickCharacter();
    /*0x110b134*/ System.Collections.IEnumerator CoCharacterTalk();
    /*0x110b07c*/ System.Collections.IEnumerator CoRandomShowWrite();
    /*0x110b1a8*/ void <CoRandomShowWrite>b__12_0();

    class <CoCharacterTalk>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildNpcCharacter <>4__this;
        /*0x28*/ float <t>5__2;

        /*0xf71610*/ <CoCharacterTalk>d__11(int <>1__state);
        /*0xf7163c*/ void System.IDisposable.Dispose();
        /*0xf71640*/ bool MoveNext();
        /*0xf71a58*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71a60*/ void System.Collections.IEnumerator.Reset();
        /*0xf71aa0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRandomShowWrite>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildNpcCharacter <>4__this;

        /*0xf71aa8*/ <CoRandomShowWrite>d__12(int <>1__state);
        /*0xf71ad4*/ void System.IDisposable.Dispose();
        /*0xf71ad8*/ bool MoveNext();
        /*0xf71c14*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71c1c*/ void System.Collections.IEnumerator.Reset();
        /*0xf71c5c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildPostPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_mailName;
    /*0x48*/ UnityEngine.UI.InputField m_mailDesc;

    /*0x110bc2c*/ GuildPostPopup();
    /*0x110b88c*/ void OnCreate();
    /*0x110b890*/ void OnDelete();
    /*0x110b894*/ void OnEnter();
    /*0x110b900*/ void OnFinish();
    /*0x110b904*/ void OnLeave();
    /*0x110b908*/ void OnStart();
    /*0x110b90c*/ void InitPopup();
    /*0x110b910*/ void OnClickCancel();
    /*0x110b990*/ void OnClickConfirm();

    class <>c
    {
        static /*0x0*/ GuildPostPopup.<> <>9;
        static /*0x8*/ System.Action <>9__10_0;

        static /*0xf71d2c*/ <>c();
        /*0xf71d8c*/ <>c();
        /*0xf71d94*/ void <OnClickConfirm>b__10_0();
    }
}

class GuildSearchEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x20*/ GuildLevelSlot m_guildLevelSlot;
    /*0x28*/ LocalizeString m_guildName;
    /*0x30*/ LocalizeString m_memberText;
    /*0x38*/ LocalizeString m_crownText;
    /*0x40*/ PTShare.Define.SGuildSummary m_sGuild;

    /*0x110c0d8*/ GuildSearchEntity();
    /*0x110bc34*/ void InitEntity(PTShare.Define.SGuildSummary sGuild);
    /*0x110be50*/ void SetMemberText(int max, int now);
    /*0x110bcac*/ void SetCrown();
    /*0x110bd58*/ void SetGuildEmblem();
    /*0x110bdf0*/ void SetGuildLevelSlot();
    /*0x110be20*/ void SetGuildName();
    /*0x110bf5c*/ void OnClickEntity();
    /*0x110c030*/ void HandleGuildDetail(PTShare.Define.SGuild sGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMember);
}

class GuildSearchPopup : GuiBase
{
    static /*0x0*/ float SEARCH_WAIT_TIME;
    /*0x40*/ UnityEngine.UI.InputField m_searchNameField;
    /*0x48*/ ScrollContent_GuildSearchEntity m_scrollContent;
    /*0x50*/ UnityEngine.GameObject m_searchEmptyObject;
    /*0x58*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x60*/ UnityEngine.GameObject m_guildCreateButton;
    /*0x68*/ UnityEngine.UI.Button m_searchButton;
    /*0x70*/ bool m_isReadySearchTime;
    /*0x78*/ System.Collections.Generic.List<PTShare.Define.SGuildSummary> m_searchGuildList;
    /*0x80*/ bool m_isNewGuild;

    static /*0x110d034*/ GuildSearchPopup();
    /*0x110cfbc*/ GuildSearchPopup();
    /*0x110c0e0*/ void OnCreate();
    /*0x110c0e4*/ void OnDelete();
    /*0x110c0e8*/ void OnEnter();
    /*0x110c0ec*/ void OnFinish();
    /*0x110c0f0*/ void OnLeave();
    /*0x110c310*/ void OnStart();
    /*0x110c314*/ void OnExit();
    /*0x110c46c*/ void InitPopup();
    /*0x110c918*/ void UpdateGuildList();
    /*0x110ca18*/ void HandleScrollContent(int index, GuildSearchEntity obj);
    /*0x110c6f4*/ void BindEvent();
    /*0x110c0f4*/ void RemoveEvent();
    /*0x110ca98*/ void OnClickSearch();
    /*0x110cc18*/ void OnClickRandomSearch();
    /*0x110cda0*/ void OnClickSearchCancel();
    /*0x110ce0c*/ void OnClickCreateGuild();
    /*0x110ce8c*/ void handleExitPopup(PTShare.Define.SGuild sGuild);
    /*0x110cf00*/ void HandleInputSearch(string value);
    /*0x110cf40*/ System.Collections.IEnumerator WaitSearchTime(float time);
    /*0x110d084*/ void <OnClickSearch>b__22_0();
    /*0x110d108*/ void <OnClickRandomSearch>b__23_0(bool instance);

    class <WaitSearchTime>d__28 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildSearchPopup <>4__this;
        /*0x28*/ float time;

        /*0xf71e04*/ <WaitSearchTime>d__28(int <>1__state);
        /*0xf71e30*/ void System.IDisposable.Dispose();
        /*0xf71e34*/ bool MoveNext();
        /*0xf71ef4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71efc*/ void System.Collections.IEnumerator.Reset();
        /*0xf71f3c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildBuildingWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_moveButton;
    /*0x20*/ UnityEngine.GameObject m_houseButton;
    /*0x28*/ GuildTile m_selectTile;

    /*0xe658a4*/ GuildBuildingWindow();
    /*0xe65154*/ void InitWindow(GuildTile tile);
    /*0xe65588*/ void OnClickHide();
    /*0xe655b0*/ void OnClickProfile();
    /*0xe65604*/ void OnClickHouse();
    /*0xe65770*/ void OnClickMove();

    class <>c
    {
        static /*0x0*/ GuildBuildingWindow.<> <>9;
        static /*0x8*/ System.Action <>9__6_0;

        static /*0xf69440*/ <>c();
        /*0xf694a0*/ <>c();
        /*0xf694a8*/ void <OnClickHouse>b__6_0();
    }
}

class GuildMap : UnityEngine.MonoBehaviour
{
    static int ZOOM_FINGER_COUNT = 2;
    static /*0x0*/ long EMPTY_ID;
    static /*0x8*/ System.Action<GuildTile> OnTouchGuildTile;
    static /*0x10*/ System.Action<GuildTile> OnMoveRequestGuildTile;
    static /*0x18*/ System.Action<UnityEngine.GameObject> OnMoveLayerMiddle;
    static /*0x20*/ System.Action<UnityEngine.GameObject> OnMoveLayerTop;
    static /*0x28*/ System.Action<GuildTrash> OnCleanTrash;
    static /*0x30*/ System.Action<bool> OnEnableMoveTileEffect;
    /*0x18*/ float ZOOM_MIN;
    /*0x1c*/ float ZOOM_MAX;
    /*0x20*/ UnityEngine.GameObject m_parentObject;
    /*0x28*/ GuildMapGrid m_mapGridBase;
    /*0x30*/ System.Collections.Generic.List<GuildTile> m_guildTileBaseList;
    /*0x38*/ UnityEngine.GameObject m_guildMapCamera;
    /*0x40*/ UnityEngine.GameObject m_mapParentObject;
    /*0x48*/ UnityEngine.GameObject m_middleLayerObject;
    /*0x50*/ UnityEngine.GameObject m_topLayerObject;
    /*0x58*/ GuildBuildingWindow m_guildBuildingWindow;
    /*0x60*/ GuildTrash m_baseTrash;
    /*0x68*/ UnityEngine.UI.ScrollRect m_guildScrollRect;
    /*0x70*/ UnityEngine.RectTransform m_guildBackGround;
    /*0x78*/ UnityEngine.Vector3 m_initPosition;
    /*0x88*/ System.Collections.Generic.List<GuildMapGrid> m_mapGridList;
    /*0x90*/ System.Collections.Generic.List<GuildTile> m_buildingTileList;
    /*0x98*/ System.Collections.Generic.List<GuildTile> m_moveTileList;
    /*0xa0*/ GuildTile[,] m_guildTiles;
    /*0xa8*/ System.Collections.Generic.List<GuildTrash> m_guildTrashs;
    /*0xb0*/ GuildTile m_moveWaitTile;
    /*0xb8*/ GuildDefine.GUILD_MAP_TYPE m_guildMapType;
    /*0xbc*/ float m_zoomValue;
    /*0xc0*/ float m_defaultWidth;
    /*0xc8*/ UnityEngine.Coroutine m_moveCoroutine;
    /*0xd0*/ UnityEngine.Coroutine m_scrollRectModeCoroutine;
    /*0xd8*/ UnityEngine.Vector3 interval;
    /*0xe4*/ float scrollLimit;
    /*0xe8*/ float scrollBGMaximum;
    /*0xec*/ float m_bgZoomPercent;
    /*0xf0*/ GuildFieldCharacter m_baseCharacter;
    /*0xf8*/ GuildCharacterData m_guildCharacterData;
    /*0x100*/ int m_skinCount;
    /*0x108*/ System.Collections.Generic.List<GuildFieldCharacter> m_characterList;
    /*0x110*/ System.Collections.Generic.List<int> m_characterSpawnList;

    static /*0x1109344*/ GuildMap();
    /*0x11090f4*/ GuildMap();
    /*0x1104770*/ int GetGridCount();
    /*0x11047bc*/ int GetTileCount();
    /*0x1104808*/ GuildTile GetTile(int index);
    /*0x110487c*/ void OnEnable();
    /*0x1104c10*/ void OnDisable();
    /*0x11050ec*/ void InitGuildMap(GuildDefine.GUILD_MAP_TYPE guildMapType);
    /*0x1105d14*/ void InitBuildings();
    /*0x1106058*/ void SetTrashs();
    /*0x1106580*/ void SetResize();
    /*0x1105538*/ void InitTile();
    /*0x1105b88*/ void SetLocalPlayerCamp();
    /*0x1105fec*/ void SetGuildBuilding(PTShare.Define.SGuildMember member, int x, int y);
    /*0x1106be4*/ void HideGuildBuildingWindow();
    /*0x11057d0*/ void HideLockTiles();
    /*0x1105f80*/ System.Collections.IEnumerator CoLateInit();
    /*0x1106cb0*/ void HandleTouchTile(GuildTile guildTile);
    /*0x1106fc8*/ void HandleMoveTopLayer(UnityEngine.GameObject moveObject);
    /*0x1107020*/ void HandleMoveMiddleLayer(UnityEngine.GameObject moveObject);
    /*0x11072ac*/ void HandleRegisterMoveTile(GuildTile moveTile);
    /*0x1107354*/ void HandleCleanTrash(GuildTrash guildTrash);
    /*0x11073b8*/ void HandleScrollRect(UnityEngine.Vector2 noneUsed);
    /*0x1104880*/ void BindEvent();
    /*0x1104d48*/ void RemoveEvent();
    /*0x11075a0*/ bool IsInTrash(int x, int y);
    /*0x1107694*/ System.Collections.IEnumerator CoScrollRectModeChange();
    /*0x1107080*/ void UpdateSortObjects();
    /*0x1107700*/ void UpdateZoom();
    /*0x11077fc*/ void Update();
    /*0x1107a14*/ void AddGrid();
    /*0x1107b20*/ void AddTile(int gridIndex, int tileIndex);
    /*0x1107d30*/ void RemoveTileLast(int gridIndex);
    /*0x1107ea8*/ void HighlightGrid(int lineIndex);
    /*0x1107f9c*/ void UpdateSyncPrefabs();
    /*0x1108450*/ void View();
    /*0x11082a0*/ GuildTile FindTile(string name);
    /*0x1107be0*/ GuildTile CopyTile(int tileIndex);
    /*0x1108508*/ void InitCharacters();
    /*0x1108ae0*/ void SwapIndex(ref System.Collections.Generic.List<int> indexList, int lhs, int rhs);
    /*0x1108e84*/ GuildTile FindNearMoveTile(GuildTile standTile, GuildDefine.GUILD_CHARACTER_MOVE_DESIRE desire);
    /*0x1105304*/ void SetGuildCharacterData();
    /*0x1108bd4*/ void SetGuildCharacter(PTShare.Define.SGuildMember member, int index);
    /*0x11054cc*/ System.Collections.IEnumerator CoUpdateCharacterMove();

    class <>c__DisplayClass40_0
    {
        /*0x10*/ int x;
        /*0x14*/ int y;
        /*0x18*/ System.Predicate<GuildTrash> <>9__0;

        /*0xf70d24*/ <>c__DisplayClass40_0();
        /*0xf70d2c*/ bool <SetTrashs>b__0(GuildTrash data);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ GuildMap <>4__this;
        /*0x18*/ UnityEngine.Vector2Int position;

        /*0xf70d68*/ <>c__DisplayClass44_0();
        /*0xf70d70*/ void <SetLocalPlayerCamp>b__0();
    }

    class <CoLateInit>d__48 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMap <>4__this;

        /*0xf70ff0*/ <CoLateInit>d__48(int <>1__state);
        /*0xf7101c*/ void System.IDisposable.Dispose();
        /*0xf71020*/ bool MoveNext();
        /*0xf710c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf710c8*/ void System.Collections.IEnumerator.Reset();
        /*0xf71108*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ GuildMap <>4__this;
        /*0x18*/ GuildTile guildTile;

        /*0xf70e94*/ <>c__DisplayClass49_0();
        /*0xf70e9c*/ void <HandleTouchTile>b__0();
    }

    class <CoScrollRectModeChange>d__60 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMap <>4__this;

        /*0xf71110*/ <CoScrollRectModeChange>d__60(int <>1__state);
        /*0xf7113c*/ void System.IDisposable.Dispose();
        /*0xf71140*/ bool MoveNext();
        /*0xf71210*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71218*/ void System.Collections.IEnumerator.Reset();
        /*0xf71258*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ GuildMap.<> <>9;
        static /*0x8*/ System.Comparison<UnityEngine.Transform> <>9__61_0;

        static /*0xf70c4c*/ <>c();
        /*0xf70cac*/ <>c();
        /*0xf70cb4*/ int <UpdateSortObjects>b__61_0(UnityEngine.Transform lhs, UnityEngine.Transform rhs);
    }

    class <>c__DisplayClass71_0
    {
        /*0x10*/ string name;

        /*0xf70fa0*/ <>c__DisplayClass71_0();
        /*0xf70fa8*/ bool <FindTile>b__0(GuildTile tile);
    }

    class <CoUpdateCharacterMove>d__83 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildMap <>4__this;
        /*0x28*/ int <i>5__2;

        /*0xf71260*/ <CoUpdateCharacterMove>d__83(int <>1__state);
        /*0xf7128c*/ void System.IDisposable.Dispose();
        /*0xf71290*/ bool MoveNext();
        /*0xf71518*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf71520*/ void System.Collections.IEnumerator.Reset();
        /*0xf71560*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildMapGrid : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildTile[] m_guildTiles;
    /*0x20*/ int m_gridIndex;
    /*0x28*/ UnityEngine.CanvasGroup m_canvasGroup;

    /*0x1109434*/ GuildMapGrid();
    /*0x11093c8*/ GuildTile[] GetGuildTileArray();
    /*0x1106c94*/ int GetTileCount();
    /*0x1106830*/ void InitGrid(int gridIndex);
    /*0x1106c1c*/ void SetEnable(bool enable);
    /*0x1107f80*/ void SetCanvasAlpha(float alpha);
    /*0x11093d0*/ void SetGridIndex(int index);
    /*0x1107cb8*/ void AddTile(GuildTile guildTile);
    /*0x1108390*/ void RemoveTileFront();
    /*0x1107dc8*/ void RemoveTileLast();
}

class GuildTile : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildDefine.GUILD_TILE_TYPE m_guildTileType;
    /*0x20*/ UnityEngine.GameObject m_parentObject;
    /*0x28*/ AtlasImage m_tileImage;
    /*0x30*/ AtlasImage m_buildingImage;
    /*0x38*/ UnityEngine.GameObject m_effectObj;
    /*0x40*/ LocalizeString m_buildingName;
    /*0x48*/ UnityEngine.GameObject m_disableObject;
    /*0x50*/ bool m_isTrashOk;
    /*0x58*/ string m_originalTileName;
    /*0x60*/ UnityEngine.Vector2Int m_position;
    /*0x68*/ int m_gridIndex;
    /*0x6c*/ int m_tileIndex;
    /*0x70*/ PTShare.Define.SGuildMember m_sMember;
    /*0x78*/ bool m_isEnable;

    /*0x110e030*/ GuildTile();
    /*0x1106f50*/ long GetTileOwnerId();
    /*0x110d61c*/ GuildDefine.GUILD_TILE_TYPE GetTileType();
    /*0x110d624*/ bool IsTrashOk();
    /*0x110d62c*/ UnityEngine.Sprite GetTileSprite();
    /*0x110d64c*/ void OnDisable();
    /*0x110d94c*/ void OnEnable();
    /*0x1106898*/ void InitTile(PTShare.Define.SGuildMember sMember, int tileIndex);
    /*0x110da1c*/ bool IsEnable();
    /*0x110da24*/ PTShare.Define.SGuildMember GetMember();
    /*0x110da2c*/ UnityEngine.Vector2Int GetPosition();
    /*0x110da34*/ int GetGridIndex();
    /*0x110da3c*/ int GetTileIndex();
    /*0x110da44*/ void SetGridIndex(int index);
    /*0x1106bdc*/ void SetPosition(int x, int y);
    /*0x110da4c*/ void SwapBuilding(GuildTile swapTarget);
    /*0x110d9f8*/ void SetBuilding();
    /*0x110da94*/ void SetBuildName();
    /*0x110dc74*/ void SetBuildImage();
    /*0x1106a8c*/ void SetEnable(bool enable);
    /*0x110de4c*/ System.Collections.IEnumerator CoLateMoveMiddle(UnityEngine.GameObject gameObject);
    /*0x110dde0*/ System.Collections.IEnumerator CoLateMoveTop(UnityEngine.GameObject gameObject);
    /*0x110deb8*/ void OnTouchTile();
    /*0x110df64*/ void HandleOnEnableEffect(bool enable);

    class <CoLateMoveMiddle>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.GameObject gameObject;

        /*0xf71f44*/ <CoLateMoveMiddle>d__33(int <>1__state);
        /*0xf71f70*/ void System.IDisposable.Dispose();
        /*0xf71f74*/ bool MoveNext();
        /*0xf7202c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf72034*/ void System.Collections.IEnumerator.Reset();
        /*0xf72074*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateMoveTop>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.GameObject gameObject;

        /*0xf7207c*/ <CoLateMoveTop>d__34(int <>1__state);
        /*0xf720a8*/ void System.IDisposable.Dispose();
        /*0xf720ac*/ bool MoveNext();
        /*0xf72164*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf7216c*/ void System.Collections.IEnumerator.Reset();
        /*0xf721ac*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildTopWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildLevelSlot m_guildLevelSlot;
    /*0x20*/ GuildEmblemSlot m_guildEmblemSlot;
    /*0x28*/ LocalizeString m_guildNameText;
    /*0x30*/ LocalizeString m_guildCorwnText;

    /*0x110e3a4*/ GuildTopWindow();
    /*0x110e084*/ void InitGuild();
    /*0x110e10c*/ void SetGuildLevelSlot(int level);
    /*0x110e1ac*/ void SetGuildName(string name);
    /*0x110e2f4*/ void SetGuildEmblem(int emblemIndex, int frameIndex);
    /*0x110e24c*/ void SetGuildCrown(int crown);
}

class GuildTrash : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_trashImage;
    /*0x20*/ ParticleBase m_cleanParticle;
    /*0x28*/ UnityEngine.GameObject m_itemParent;
    /*0x30*/ TweenPosition m_itemTween;
    /*0x38*/ AtlasImage m_itemIcon;
    /*0x40*/ LocalizeString m_itemAmountText;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_cleanEffect;
    /*0x50*/ float m_sweepTime;
    /*0x54*/ UnityEngine.Vector2Int m_position;
    /*0x5c*/ bool m_isClean;
    /*0x5d*/ bool m_free;

    /*0x110ea40*/ GuildTrash();
    /*0x110e3ac*/ UnityEngine.Vector2Int GetPosition();
    /*0x110e3b4*/ void OnDisable();
    /*0x110650c*/ void InitTrash(int x, int y);
    /*0x110e5f0*/ void SetEnableRewardNotify(bool enable);
    /*0x110e4c0*/ void SetRandomTrashImage();
    /*0x110e6a0*/ void SetItemReward(PTShare.Define.SProperty gain);
    /*0x110e91c*/ void OnClickTrash();
    /*0x110e95c*/ System.Collections.IEnumerator CoClean();
    /*0x110e9c8*/ System.Collections.IEnumerator CoShowReward(PTShare.Define.SProperty gain);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ PTShare.Define.SProperty gain;

        /*0xf721b4*/ <>c__DisplayClass18_0();
        /*0xf721bc*/ void <CoClean>b__0(PTShare.Define.SProperty instance);
        /*0xf721c4*/ bool <CoClean>b__1();
    }

    class <CoClean>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildTrash <>4__this;
        /*0x28*/ GuildTrash.<> <>8__1;

        /*0xf721d4*/ <CoClean>d__18(int <>1__state);
        /*0xf72200*/ void System.IDisposable.Dispose();
        /*0xf72204*/ bool MoveNext();
        /*0xf726ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf726b4*/ void System.Collections.IEnumerator.Reset();
        /*0xf726f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildTrash <>4__this;
        /*0x28*/ PTShare.Define.SProperty gain;

        /*0xf726fc*/ <CoShowReward>d__19(int <>1__state);
        /*0xf72728*/ void System.IDisposable.Dispose();
        /*0xf7272c*/ bool MoveNext();
        /*0xf729a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf729a8*/ void System.Collections.IEnumerator.Reset();
        /*0xf729e8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildWantRegisterEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_totalPowerText;
    /*0x20*/ LocalizeString m_userNameText;
    /*0x28*/ LocalizeString m_serverText;
    /*0x30*/ PlayerProfileSlot m_playerProfileSlot;
    /*0x38*/ PTShare.Define.SPlayer m_sPlayer;

    /*0x110f05c*/ GuildWantRegisterEntity();
    /*0x110ea54*/ void OnDisable();
    /*0x110ea58*/ void OnEnable();
    /*0x110ea5c*/ void InitEntity(PTShare.Define.SPlayer sPlayer);
    /*0x110ea94*/ void SetTotalPower();
    /*0x110eb40*/ void SetUserName();
    /*0x110ebdc*/ void SetServerText();
    /*0x110edbc*/ void SetPlayerProfile();
    /*0x110eedc*/ void OnClickAccept();
    /*0x110ef9c*/ void OnClickDecline();
    /*0x110f064*/ void <SetPlayerProfile>b__11_0();
    /*0x110f084*/ void <OnClickAccept>b__12_0();
    /*0x110f168*/ void <OnClickDecline>b__13_0();
}

class GuildWantRegisterPopup : GuiBase
{
    static /*0x0*/ System.Action<long> OnChangeRequesters;
    /*0x40*/ LocalizeString m_guildMemberCountText;
    /*0x48*/ ScrollContent_GuildWantRegisterEntity m_scrollContent;
    /*0x50*/ UnityEngine.GameObject m_noRequesterObject;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SPlayer> m_requesterList;

    static /*0x110fe68*/ GuildWantRegisterPopup();
    /*0x110fdc4*/ GuildWantRegisterPopup();
    /*0x110f208*/ void OnCreate();
    /*0x110f20c*/ void OnDelete();
    /*0x110f210*/ void OnEnter();
    /*0x110f214*/ void OnFinish();
    /*0x110f218*/ void OnLeave();
    /*0x110f21c*/ void OnStart();
    /*0x110f220*/ void OnExit();
    /*0x110f3dc*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SPlayer> memberList);
    /*0x110f608*/ void UpdatePopup();
    /*0x110f6e0*/ void UpdateGuildMemberCount();
    /*0x110f83c*/ void UpdateGuildRequesterList();
    /*0x110f910*/ void UpdateNoRequesterObject();
    /*0x110f9c0*/ void HandleChangeRequesters(long userId);
    /*0x110fb1c*/ void HandleScrollContent(int index, GuildWantRegisterEntity obj);
    /*0x110fb9c*/ void OnClickAllAccept();
    /*0x110fcd0*/ void OnClickAllDecline();
    /*0x110f46c*/ void BindEvent();
    /*0x110f248*/ void RemoveEvent();
    /*0x110fe6c*/ void <OnClickAllAccept>b__19_0();
    /*0x110ff18*/ void <OnClickAllDecline>b__20_0();

    class <>c__DisplayClass17_0
    {
        /*0x10*/ long userId;

        /*0xf729f0*/ <>c__DisplayClass17_0();
        /*0xf729f8*/ bool <HandleChangeRequesters>b__0(PTShare.Define.SPlayer player);
    }
}

class GuildWarFormationDotEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_icon;

    /*0x1116640*/ GuildWarFormationDotEntity();
    /*0x11164cc*/ void InitializeEntity(int nClassNumber);
}

class GuildWarMemberEntity : GuildMemberEntity
{
    /*0x60*/ AtlasImage m_background;
    /*0x68*/ AtlasImage m_checkIcon;
    /*0x70*/ LocalizeString m_gcPoint;
    /*0x78*/ int nEntityIndex;
    /*0x80*/ System.Action<int> onClickCallback;

    /*0x1119710*/ GuildWarMemberEntity();
    /*0x1114818*/ void InitEntity(int nIndex, PTShare.Define.SGuildWarPlayer member, bool selected, System.Action<int> onClick);
    /*0x11196b0*/ void OnClick();
}

class GuildWindowRequireDropDown : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<GuildWindowRequireDropDown.GuildRequireToggle> m_liToggle;
    /*0x20*/ UnityEngine.GameObject m_ToggleBackground;
    /*0x28*/ UnityEngine.GameObject m_ToggleTemplete;
    /*0x30*/ UnityEngine.GameObject m_ToggleArrow;
    /*0x38*/ LocalizeString m_MainText;
    /*0x40*/ bool m_bIsShow;
    /*0x44*/ int _nArrIndex;
    /*0x48*/ System.Action<PTShare.Define.GuildAcceptType> OnChangeDropdownEvent;

    /*0x10f6730*/ GuildWindowRequireDropDown();
    /*0x10f5f80*/ void add_OnChangeDropdownEvent(System.Action<PTShare.Define.GuildAcceptType> value);
    /*0x10f6020*/ void remove_OnChangeDropdownEvent(System.Action<PTShare.Define.GuildAcceptType> value);
    /*0x10f60c0*/ void OnEnable();
    /*0x10f61c4*/ void OnDisable();
    /*0x10f6194*/ void InitializeDropdown(PTShare.Define.GuildAcceptType _type);
    /*0x10f66f8*/ void ToggleDropdown();
    /*0x10f644c*/ void ViewDropdown(bool _isShow);
    /*0x10f653c*/ void SetDropdown();
    /*0x10f6254*/ void SetDropdownName(PTShare.Define.GuildAcceptType _type);
    /*0x10f6708*/ void HandlerDropDown(PTShare.Define.GuildAcceptType _type);

    class GuildRequireToggle
    {
        /*0x10*/ PTShare.Define.GuildAcceptType type;
        /*0x18*/ string keyName;
        /*0x20*/ UnityEngine.UI.Toggle toggle;

        /*0xf747a4*/ GuildRequireToggle();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ PTShare.Define.GuildAcceptType _sortType;
        /*0x18*/ GuildWindowRequireDropDown <>4__this;

        /*0xf746b0*/ <>c__DisplayClass16_0();
        /*0xf746b8*/ void <SetDropdown>b__0(bool ison);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.GuildAcceptType _type;

        /*0xf74778*/ <>c__DisplayClass17_0();
        /*0xf74780*/ bool <SetDropdownName>b__0(GuildWindowRequireDropDown.GuildRequireToggle x);
    }
}

class ResultPopup_GuildBoss : ResultPopupBase
{
    /*0x78*/ LocalizeString m_totalDamageText;
    /*0x80*/ UnityEngine.UI.Slider m_slider;
    /*0x88*/ AtlasImage m_rewardBoxImage;
    /*0x90*/ LocalizeString m_rewardStepText;

    /*0x11a1b50*/ ResultPopup_GuildBoss();
    /*0x11a0918*/ void OnCreate();
    /*0x11a091c*/ void OnEnter();
    /*0x11a0920*/ void OnStart();
    /*0x11a0928*/ void OnFinish();
    /*0x11a092c*/ void OnLeave();
    /*0x11a0930*/ void OnDelete();
    /*0x11a0934*/ void OnExit();
    /*0x11a09d8*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a1370*/ void InitializeWinReplay();
    /*0x11a0ea8*/ void InitializeWinByGuildBoss(PTShare.Define.SProperty _reward);
    /*0x11a16bc*/ void InitializeWinReplayByGuildBoss();
    /*0x11a0a60*/ void InitializeWinByEventBoss(PTShare.Define.SProperty _reward);
    /*0x11a13e0*/ void InitializeWinReplayByEventBoss();
    /*0x11a1a18*/ void InitializeLose();
    /*0x11a1a24*/ void OnNext();
    /*0x11a1aa4*/ void OnRetry();
    /*0x11a1af8*/ void OnShowGraph();
}

class ScrollContent_GuildBossRecordEntity : ScrollContent<GuildBossRecordEntity>
{
    /*0xe19a0c*/ ScrollContent_GuildBossRecordEntity();
}

class ScrollContent_GuildCalanderEntity : ScrollContent<GuildCalanderEntity>
{
    /*0xe19a84*/ ScrollContent_GuildCalanderEntity();
}

class ScrollContent_GuildEmblemSlot : ScrollContent<GuildEmblemSlot>
{
    /*0xe19afc*/ ScrollContent_GuildEmblemSlot();
}

class ScrollContent_GuildMemberEntity : ScrollContent<GuildMemberEntity>
{
    /*0xe19b74*/ ScrollContent_GuildMemberEntity();
}

class ScrollContent_GuildSearchEntity : ScrollContent<GuildSearchEntity>
{
    /*0xe19bec*/ ScrollContent_GuildSearchEntity();
}

class ScrollContent_GuildWantRegisterEntity : ScrollContent<GuildWantRegisterEntity>
{
    /*0xe19c64*/ ScrollContent_GuildWantRegisterEntity();
}

class GuildWarRankEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_EmblemSlot;
    /*0x20*/ GuildLevelSlot m_LevelSlot;
    /*0x28*/ LocalizeString m_GuildName;
    /*0x30*/ LocalizeString m_RankNumber;
    /*0x38*/ LocalizeString m_PointAmount;
    /*0x40*/ LocalizeString m_TotalPower;
    /*0x48*/ AtlasImage m_RankIcon;
    /*0x50*/ PTShare.Define.SGuildWar guildInfo;
    /*0x58*/ int nRank;

    /*0x10ee73c*/ GuildWarRankEntity();
    /*0x10edf80*/ void Release();
    /*0x10edf88*/ void InitializeEntity(int nRank, PTShare.Define.SGuildWar data);
    /*0x10ee354*/ void InitializeEntity(int nRank, int nPoint);
    /*0x10ee1b0*/ void SetRanks();
    /*0x10ee4c0*/ void OnClick_GuildInfomation();
    /*0x10ee604*/ void CallbackGuildDetail(PTShare.Define.SGuild sGuild, System.Collections.Generic.List<PTShare.Define.SGuildMember> guildMember);
}

class GuildWarRecordEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ GuildEmblemSlot m_EmblemSlot_Ally;
    /*0x20*/ GuildEmblemSlot m_EmblemSlot_Enemy;
    /*0x28*/ PlayerProfileSlot m_ProfileSlot;
    /*0x30*/ LocalizeString m_AllyName;
    /*0x38*/ LocalizeString m_EnemyName;
    /*0x40*/ LocalizeString m_Point;
    /*0x48*/ LocalizeString m_LastedTime;
    /*0x50*/ PTShare.Define.SGuildWarHistory historyInfo;

    /*0x10f08c0*/ GuildWarRecordEntity();
    /*0x10eff40*/ void InitializeEntity(PTShare.Define.SGuildWarHistory data);
    /*0x10f0474*/ void OnClick_GuildInfomation(bool ally);
    /*0x10f0478*/ void OnClick_Graph();
    /*0x10f08c8*/ void <InitializeEntity>b__8_0();
}

class HeroManager : Singleton.Data.SingletonData<HeroManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liHeroList;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SHero> m_llNewHeroPopupWaitList;
    /*0x30*/ System.Collections.Generic.Stack<int> m_newHeroPopupWaitStack;
    /*0x38*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.SHero>> m_dicPropertyHero;
    /*0x40*/ int _nCurIndex;
    /*0x44*/ int _nStartCount;
    /*0x48*/ int _nEndCount;
    /*0x50*/ PTShare.Define.SHero _CurHeroInfo;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SBook> <BookList>k__BackingField;
    /*0x60*/ System.Action<int> OnShowNewHero;
    /*0x68*/ System.Action OnShowNewHeroSweepStack;

    /*0x1221178*/ HeroManager();
    /*0x121c460*/ string get_UserToken();
    /*0x121c4e0*/ int get_HeroCount();
    /*0x121c530*/ void set_BookList(System.Collections.Generic.List<PTShare.Define.SBook> value);
    /*0x121c538*/ System.Collections.Generic.List<PTShare.Define.SBook> get_BookList();
    /*0x121c540*/ bool InitInstance();
    /*0x121c690*/ void ReleaseInstance();
    /*0x121c840*/ void Send_EquipHero(int _heroid, int _equipid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121c998*/ void Send_AutoEquipHero(int _heroid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121cae8*/ void Send_UnequipHero(int _heroid, int _equipid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121cc4c*/ void Send_UnequipAllHero(int _heroid, System.Action<PTShare.Define.SHero> _callback);
    /*0x121cd9c*/ void Send_PromoteHero(System.Action _callback, int _heroid, int[] _materialid);
    /*0x121cfd8*/ void Send_LevelupHero(int _heroid, int _count, bool _fast, System.Action<PTShare.Define.SHero> _callback);
    /*0x121d14c*/ void Send_LockHero(int _heroid, bool _isLock, System.Action<PTShare.Define.SHero> _callback);
    /*0x121d29c*/ void Send_ExtendSlot(System.Action _callback);
    /*0x121d3d0*/ void Send_BookReward(System.Action _callback, int _nUnitid);
    /*0x121d518*/ void Send_ResetHero(System.Action<int> _callback, int _heroid);
    /*0x121d66c*/ void Send_RevertHero(System.Action<int> _callback, int _heroid);
    /*0x121d7c0*/ void Send_DismissHero(System.Collections.Generic.List<PTShare.Define.SHero> list, PTShare.Define.SProperty gain, System.Action _callback);
    /*0x121db34*/ void InitalizeDictionary();
    /*0x121dea8*/ void AddDicsHero(PTShare.Define.SHero _hero);
    /*0x121df48*/ void DeleteDicsHero(PTShare.Define.SHero _hero);
    /*0x121e0cc*/ void SetHeroList(System.Collections.Generic.List<PTShare.Define.SHero> _liHero);
    /*0x121e1dc*/ void SetBookList(System.Collections.Generic.List<PTShare.Define.SBook> _liHero);
    /*0x121e1e4*/ System.Collections.Generic.List<PTShare.Define.SHero> FindHeroListbyProperty(PropertyType _type);
    /*0x121e258*/ System.Collections.Generic.List<PTShare.Define.SHero> FindIdleHeroListNoOverlapTableID();
    /*0x121e3e0*/ PTShare.Define.SHero GetPreviousHero(PTShare.Define.SHero _hero, int _type);
    /*0x121e5fc*/ PTShare.Define.SHero GetNextHero(PTShare.Define.SHero _hero, int _type);
    /*0x121e730*/ bool IsPromote(PTShare.Define.SHero hero);
    /*0x121e97c*/ bool IsNewHero(int tableId);
    /*0x121e148*/ void SortHeroList(System.Collections.Generic.List<PTShare.Define.SHero> _liSort);
    /*0x121ea30*/ bool CheckUseHero(int _tableid);
    /*0x121eb2c*/ bool IsExistHeroID(int _nHeroID);
    /*0x121ec30*/ bool IsExistHeroID(int _nHeroID, long _nPlayerID);
    /*0x121edac*/ PTShare.Define.SHero GetHeroData(int _nHeroID, long _nPlayerID);
    /*0x121ef0c*/ PTShare.Define.SHero GetHeroData(int _nHeroID);
    /*0x121effc*/ void IncreaseHero(PTShare.Define.SLittleHero _hero);
    /*0x121f4b0*/ void IncreaseHero(System.Collections.Generic.List<PTShare.Define.SLittleHero> _liHero);
    /*0x121f598*/ void DecreaseHero(PTShare.Define.SHero _hero);
    /*0x121f714*/ void DecreaseHero(System.Collections.Generic.List<PTShare.Define.SHero> _liHero);
    /*0x121f7bc*/ void DecreseHerobyID(System.Collections.Generic.List<int> _liHeroID);
    /*0x121f884*/ bool IsOutRangeInventory(int _addAmount);
    /*0x121fa7c*/ void ChangeMaxGradeSBook(PTShare.Define.SHero hero);
    /*0x121f330*/ void ChangeMaxGradeSBook(PTShare.Define.SLittleHero hero);
    /*0x121e4d4*/ int GetHeroListIndex(PTShare.Define.SHero _hero, int _type);
    /*0x121fbfc*/ int GetHeroListIndex(int _heroid, int _type);
    /*0x121cf00*/ string SetMaterialToString(int[] _materialid);
    /*0x121e6bc*/ System.Collections.Generic.List<PTShare.Define.SHero> GetTypeHeroList(int _type);
    /*0x121fd24*/ PTShare.Define.SHero FindHerobyHeroID(int _heroID);
    /*0x121fe14*/ PTShare.Define.SHero FindFirstByTableID(int _tableID);
    /*0x121ff00*/ PTShare.Define.SHero FindHerobyHeroIDandPlayerID(int _nHeroID, long _lPlayerID);
    /*0x121ffb8*/ void OverWriteGradebyHero(PTShare.Define.SHero _hero, bool ignorelv);
    /*0x12202c0*/ void OverWriteAbilityHero(int tableId, System.Collections.Generic.List<int> abilitys);
    /*0x12204f0*/ PTShare.Define.SBook FindSBookUnitID(int _unitid);
    /*0x1220614*/ bool HaveBookReward();
    /*0x1220730*/ bool CheckHeroSmartEquipmentALL(int maxHeroCount);
    /*0x1220844*/ bool CheckHeroSmartEquipment(System.Collections.Generic.List<PTShare.Define.SEquip> list, PTShare.Define.SHero hero);
    /*0x1220b30*/ PTShare.Define.SHero FindEquipArtifactHero(int artifactid);
    /*0x1220c1c*/ System.Collections.Generic.List<PTShare.Define.SHero> GetHeroList();
    /*0x1220c24*/ int GetHeroTableCount();
    /*0x1220d6c*/ void ChangeAllSkinHero(int unitid, int skinid);
    /*0x121c558*/ void BindNewHeroEvent();
    /*0x121c710*/ void DeleteNewHeroEvent();
    /*0x1220e60*/ void HandleShowSweepStack();
    /*0x1220edc*/ void HandleShowNewHero(int tableId);
    /*0x1221310*/ void <DecreseHerobyID>b__53_0(int f);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x20*/ int _heroid;

        /*0x105d6a4*/ <>c__DisplayClass20_0();
        /*0x105d6ac*/ void <Send_EquipHero>b__0(ServerProtocol.ResHeroEquip _response);
    }

    class <>c__DisplayClass20_1
    {
        /*0x10*/ ServerProtocol.ResHeroEquip _response;

        /*0x105da3c*/ <>c__DisplayClass20_1();
        /*0x105da44*/ bool <Send_EquipHero>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x20*/ int _heroid;

        /*0x105da74*/ <>c__DisplayClass21_0();
        /*0x105da7c*/ void <Send_AutoEquipHero>b__0(ServerProtocol.ResHeroAutoEquip _response);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _equipid;
        /*0x20*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x28*/ int _heroid;

        /*0x105dc84*/ <>c__DisplayClass22_0();
        /*0x105dc8c*/ void <Send_UnequipHero>b__0(ServerProtocol.ResHeroUnequip _response);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x20*/ int _heroid;

        /*0x105de84*/ <>c__DisplayClass23_0();
        /*0x105de8c*/ void <Send_UnequipAllHero>b__0(ServerProtocol.ResHeroAllUnequip _response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ System.Action _callback;
        /*0x18*/ int _heroid;

        /*0x105e088*/ <>c__DisplayClass24_0();
        /*0x105e090*/ void <Send_PromoteHero>b__0(ServerProtocol.ResHeroPromote _response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _count;
        /*0x20*/ System.Action<PTShare.Define.SHero> _callback;
        /*0x28*/ int _heroid;

        /*0x105e1cc*/ <>c__DisplayClass25_0();
        /*0x105e1d4*/ void <Send_LevelupHero>b__0(ServerProtocol.ResHeroLevelUp _response);
    }

    class <>c
    {
        static /*0x0*/ HeroManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__25_1;
        static /*0x10*/ System.Action<PTShare.Define.SItem> <>9__27_1;
        static /*0x18*/ System.Func<PTShare.Define.SHero, int> <>9__31_0;
        static /*0x20*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__31_1;
        static /*0x28*/ System.Action<PTShare.Define.SHero> <>9__31_3;
        static /*0x30*/ System.Func<PTShare.Define.SHero, int> <>9__32_0;
        static /*0x38*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, int> <>9__32_1;
        static /*0x40*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SHero>, System.Collections.Generic.List<PTShare.Define.SHero>> <>9__32_2;
        static /*0x48*/ System.Func<PTShare.Define.SBook, bool> <>9__67_0;
        static /*0x50*/ System.Func<TableData.TableData_Unitbase, bool> <>9__72_0;

        static /*0x105d250*/ <>c();
        /*0x105d2b0*/ <>c();
        /*0x105d2b8*/ void <Send_LevelupHero>b__25_1(PTShare.Define.SItem item);
        /*0x105d340*/ void <Send_ExtendSlot>b__27_1(PTShare.Define.SItem item);
        /*0x105d3c8*/ int <Send_DismissHero>b__31_0(PTShare.Define.SHero s);
        /*0x105d3e0*/ System.Collections.Generic.IEnumerable<byte> <Send_DismissHero>b__31_1(int b);
        /*0x105d444*/ void <Send_DismissHero>b__31_3(PTShare.Define.SHero s);
        /*0x105d4d0*/ int <InitalizeDictionary>b__32_0(PTShare.Define.SHero g);
        /*0x105d4fc*/ int <InitalizeDictionary>b__32_1(System.Linq.IGrouping<int, PTShare.Define.SHero> k);
        /*0x105d5a4*/ System.Collections.Generic.List<PTShare.Define.SHero> <InitalizeDictionary>b__32_2(System.Linq.IGrouping<int, PTShare.Define.SHero> v);
        /*0x105d5f0*/ bool <HaveBookReward>b__67_0(PTShare.Define.SBook y);
        /*0x105d610*/ bool <GetHeroTableCount>b__72_0(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHero> _callback;

        /*0x105e59c*/ <>c__DisplayClass26_0();
        /*0x105e5a4*/ void <Send_LockHero>b__0(ServerProtocol.ResHeroLock _response);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ System.Action _callback;

        /*0x105e6f0*/ <>c__DisplayClass27_0();
        /*0x105e6f8*/ void <Send_ExtendSlot>b__0(ServerProtocol.ResHeroExtendSlot _response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x105e8c0*/ <>c__DisplayClass28_0();
        /*0x105e8c8*/ void <Send_BookReward>b__0(ServerProtocol.ResHeroBookReward _response);
    }

    class <>c__DisplayClass28_1
    {
        /*0x10*/ ServerProtocol.ResHeroBookReward _response;

        /*0x105ea90*/ <>c__DisplayClass28_1();
        /*0x105ea98*/ bool <Send_BookReward>b__1(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _heroid;
        /*0x20*/ System.Action<int> _callback;

        /*0x105eac8*/ <>c__DisplayClass29_0();
        /*0x105ead0*/ void <Send_ResetHero>b__0(ServerProtocol.ResHeroWagon _response);
    }

    class <>c__DisplayClass29_1
    {
        /*0x10*/ ServerProtocol.ResHeroWagon _response;

        /*0x105ee20*/ <>c__DisplayClass29_1();
        /*0x105ee28*/ void <Send_ResetHero>b__1(PTShare.Define.SEquip x);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ HeroManager <>4__this;
        /*0x18*/ int _heroid;
        /*0x20*/ System.Action<int> _callback;

        /*0x105eed8*/ <>c__DisplayClass30_0();
        /*0x105eee0*/ void <Send_RevertHero>b__0(ServerProtocol.ResHeroRevert _response);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHero> list;
        /*0x18*/ HeroManager <>4__this;
        /*0x20*/ PTShare.Define.SProperty gain;
        /*0x28*/ System.Action _callback;

        /*0x105f160*/ <>c__DisplayClass31_0();
        /*0x105f168*/ void <Send_DismissHero>b__2(ServerProtocol.ResHeroDismiss _response);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105f460*/ <>c__DisplayClass34_0();
        /*0x105f468*/ bool <DeleteDicsHero>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ int _tableid;

        /*0x105f498*/ <>c__DisplayClass44_0();
        /*0x105f4a0*/ bool <CheckUseHero>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ int _nHeroID;

        /*0x105f4c4*/ <>c__DisplayClass45_0();
        /*0x105f4cc*/ bool <IsExistHeroID>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ long _nPlayerID;
        /*0x18*/ int _nHeroID;

        /*0x105f4ec*/ <>c__DisplayClass46_0();
        /*0x105f4f4*/ bool <IsExistHeroID>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ long _nPlayerID;
        /*0x18*/ int _nHeroID;

        /*0x105f530*/ <>c__DisplayClass47_0();
        /*0x105f538*/ bool <GetHeroData>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ int _nHeroID;

        /*0x105f574*/ <>c__DisplayClass48_0();
        /*0x105f57c*/ bool <GetHeroData>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ PTShare.Define.SLittleHero _hero;

        /*0x105f5a0*/ <>c__DisplayClass49_0();
        /*0x105f5a8*/ bool <IncreaseHero>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass53_0
    {
        /*0x10*/ int f;

        /*0x105f5d8*/ <>c__DisplayClass53_0();
        /*0x105f5e0*/ bool <DecreseHerobyID>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ PTShare.Define.SHero hero;

        /*0x105f604*/ <>c__DisplayClass55_0();
        /*0x105f60c*/ bool <ChangeMaxGradeSBook>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ PTShare.Define.SLittleHero hero;

        /*0x105f63c*/ <>c__DisplayClass56_0();
        /*0x105f644*/ bool <ChangeMaxGradeSBook>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105f674*/ <>c__DisplayClass57_0();
        /*0x105f67c*/ bool <GetHeroListIndex>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ int _heroid;

        /*0x105f6ac*/ <>c__DisplayClass58_0();
        /*0x105f6b4*/ bool <GetHeroListIndex>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ int _heroID;

        /*0x105f6d8*/ <>c__DisplayClass61_0();
        /*0x105f6e0*/ bool <FindHerobyHeroID>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass62_0
    {
        /*0x10*/ int _tableID;

        /*0x105f704*/ <>c__DisplayClass62_0();
        /*0x105f70c*/ bool <FindFirstByTableID>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass64_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105f730*/ <>c__DisplayClass64_0();
        /*0x105f738*/ bool <OverWriteGradebyHero>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass66_0
    {
        /*0x10*/ int _unitid;

        /*0x105f768*/ <>c__DisplayClass66_0();
        /*0x105f770*/ bool <FindSBookUnitID>b__0(PTShare.Define.SBook x);
    }

    class <>c__DisplayClass70_0
    {
        /*0x10*/ int artifactid;

        /*0x105f794*/ <>c__DisplayClass70_0();
        /*0x105f79c*/ bool <FindEquipArtifactHero>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ int unitid;
        /*0x14*/ int skinid;

        /*0x105f7d0*/ <>c__DisplayClass73_0();
        /*0x105f7d8*/ void <ChangeAllSkinHero>b__0(PTShare.Define.SHero x);
    }
}

class DefineHousing
{
    static /*0x0*/ System.Collections.Generic.Dictionary<string, int> HousingGradeMap;
    static /*0x8*/ float PRESS_TIME;
    static /*0xc*/ UnityEngine.Vector3 TILEINTERVAL;
    static /*0x18*/ UnityEngine.Vector3 SPACEINTERVAL;
    static /*0x24*/ int SPACE_SIZE;
    static /*0x28*/ UnityEngine.Vector3 TILESIZE;
    static /*0x34*/ UnityEngine.Vector3 WALLINTERVAL;
    static /*0x40*/ UnityEngine.Vector3 WALLSPACESIZE;
    static /*0x50*/ float[] SPACE_PADDINGS;
    static /*0x58*/ float WALL_ODD_Y;
    static /*0x60*/ int[] WALL_TEST;
    static /*0x68*/ UnityEngine.Color OBJECT_OK;
    static /*0x78*/ UnityEngine.Color OBJECT_NO;
    static /*0x88*/ UnityEngine.Color SPACE_BLOCK;
    static /*0x98*/ UnityEngine.Color GROUND_BLOCK;
    static /*0xa8*/ UnityEngine.Color WALL_BLOCK;
    static /*0xb8*/ UnityEngine.Color SPACE_NORMAL;
    static /*0xc8*/ UnityEngine.Color SPACE_TRANSPARENT;
    static /*0xd8*/ float ZOOM_MIN;
    static /*0xdc*/ float ZOOM_MAX;
    static /*0xe0*/ string WALLPAPER_KEY;
    static /*0xe8*/ string TILE_KEY;
    static /*0xf0*/ int WALL_HEIGHT;
    static /*0xf4*/ int CAPTURE_SIZE;
    static /*0xf8*/ UnityEngine.Vector2Int[] WASTE_POINT;

    static /*0x11e5224*/ DefineHousing();
    static /*0x11e4ee4*/ UnityEngine.Vector2Int ConvertPoint(UnityEngine.Vector2Int point, ARROW arrow);
    static /*0x11e4f38*/ TableData.TableData_Furniture GetWasteTable(int id);
    static /*0x11e5010*/ int GetDestLv(PTShare.Define.SHousingObj _obj, int offset);
    static /*0x11e50e4*/ bool IsLevelupState(PTShare.Define.SHousingObj obj);
    static /*0x11e5118*/ bool IsWaste(PTShare.Define.SHousingObj obj);
    static /*0x11e518c*/ bool IsEffectFurniture(PTShare.Define.SHousingObj obj);
    static /*0x11e51c8*/ bool EqualFloor(PTShare.Define.SHousingObj obj, int floor);
    static /*0x11e5184*/ bool IsWaste(int housingId);
    static /*0x11e51f8*/ bool IsEffectfurniture(TableData.TableData_Furniture table);

    enum LAYER
    {
        NONE = 0,
        HOUSING_OBJECT = 1,
        WALL_LEFT = 2,
        WALL_RIGHT = 3,
        CARPET = 4,
        ETC = 5,
    }

    enum SELECT_TYPE
    {
        MOVE = 0,
        BUY = 1,
        COLLOCATE = 2,
        NULL = 3,
    }

    enum SWEEP
    {
        NONE = 0,
        GROUND = 1,
        WALL = 2,
        EFFECT = 4,
        WALL_TILE = 8,
    }

    enum HOUSING_STATE
    {
        NONE = 0,
        SPACE_HOUSINGOBJECT = 1,
        SPACE_GROUND = 2,
        HIDE_OBJECT = 4,
        EDIT_WINDOW = 8,
        OBJECT_SELECT = 16,
        SPACE_WALL = 32,
        VIEW_MODE = 256,
        SHOW_CHARACTER = 512,
        HIDE_LAYER_FURNITURE = 1024,
        HIDE_LAYER_WALL = 2048,
        HIDE_LAYER_GROUND = 4096,
        HIDE_CHARACTER = 8192,
        EFFECT_ICON_VIEW_MODE = 16384,
        STATE_CHANGE = 268435456,
        STATE_ADD = 536870912,
        STATE_REMOVE = 1073741824,
        NULL = 1073741825,
    }

    enum HOUSING_SORTTAB
    {
        ALL = 0,
        SET = 1,
        TILE = 2,
        WALLPAPER = 3,
        FURNITURE = 4,
        WALL = 5,
        DECO = 6,
    }

    enum HOUSING_TYPE
    {
        NORMAL = 0,
        VISIT = 1,
        LOAD = 2,
    }

    enum VISIT_TYPE
    {
        IN_HOUSE = 0,
        ETC = 1,
    }

    enum PURCHASE_STATE
    {
        PURCHASE = 0,
        BUY_LIMIT = 1,
        OWN_LIMIT = 2,
    }

    enum SELL_TYPE
    {
        SALE = 0,
        NONE = 1,
    }
}

class FurnitureGachaButton : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x18*/ AtlasImage m_PriceIcon;
    /*0x20*/ LocalizeString m_PriceAmount;
    /*0x28*/ LocalizeString m_ButtonText;
    /*0x30*/ bool m_bIsEnough;
    /*0x31*/ bool m_bIsSubPrice;
    /*0x34*/ PTShare.Define.Wealth m_ePriceType;
    /*0x38*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x3c*/ int m_nItemId;
    /*0x40*/ long m_nAmount;
    /*0x48*/ bool m_isSingle;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_price;

    static /*0x10aa854*/ FurnitureGachaButton();
    /*0x10aa7dc*/ FurnitureGachaButton();
    /*0x10a9860*/ void InitializeButton(bool isSingle);
    /*0x10a9990*/ void InitialzePrice();
    /*0x10a9e20*/ void Refresh();
    /*0x10a9c08*/ void SetPriceButton();
    /*0x10a9e44*/ void OnClick();
    /*0x10aa330*/ bool InValidClickCondition();
    /*0x10aa56c*/ void SendBuyProtocol();
    /*0x10aa334*/ bool IsNotEnough();
    /*0x10aa6a0*/ int GetPriceType();
    /*0x10a9898*/ void BindEvent();
    /*0x10aa6c8*/ void RemoveEvent();
    /*0x10aa7b8*/ void HandleRefresh();
    /*0x10aa858*/ void <OnClick>b__16_0(bool _result);
    /*0x10aa864*/ void <SendBuyProtocol>b__18_0(System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> buyResult);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> rewardList;

        /*0x10a343c*/ <>c__DisplayClass18_0();
        /*0x10a3444*/ void <SendBuyProtocol>b__1(PTShare.Define.SMiniHousingObj data);
    }
}

class FurnitureGachaPercentPopup : GuiBase
{
    /*0x40*/ ScrollContent_RewardPercentSlot m_scrollContent;
    /*0x48*/ LocalizeString m_leftTime;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x58*/ System.Collections.Generic.List<float> m_dropPercentList;
    /*0x60*/ UnityEngine.Coroutine m_coroutine;
    /*0x68*/ System.Action exitCallBack;

    /*0x10ab5e8*/ FurnitureGachaPercentPopup();
    /*0x10aae8c*/ void OnCreate();
    /*0x10aae90*/ void OnDelete();
    /*0x10aae94*/ void OnEnter();
    /*0x10aae98*/ void OnExit();
    /*0x10ab01c*/ void OnFinish();
    /*0x10ab020*/ void OnLeave();
    /*0x10ab024*/ void OnStart();
    /*0x10ab028*/ void InitPopup(System.Action exitCallBack);
    /*0x10ab1dc*/ void UpdateData();
    /*0x10ab474*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0x10ab4e0*/ void HandleScrollContent(int index, RewardPercentSlot obj);
    /*0x10ab100*/ void BindEvent();
    /*0x10aaf48*/ void RemoveEvent();

    class <CoUpdateTimer>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureGachaPercentPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;
        /*0x30*/ System.DateTime <time>5__3;
        /*0x38*/ int <leftTime>5__4;

        /*0x10a3514*/ <CoUpdateTimer>d__15(int <>1__state);
        /*0x10a3540*/ void System.IDisposable.Dispose();
        /*0x10a3544*/ bool MoveNext();
        /*0x10a3804*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10a380c*/ void System.Collections.IEnumerator.Reset();
        /*0x10a384c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FurnitureGachaPopup : GuiBase
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x40*/ CurrencyTopWindow m_currencyTopWindow;
    /*0x48*/ FurnitureGachaButton[] m_gachaButtons;
    /*0x50*/ AtlasImage m_percentIcon;
    /*0x58*/ GachaCharacter m_gachaCharacter;

    static /*0x10ac2c0*/ FurnitureGachaPopup();
    /*0x10ac2b8*/ FurnitureGachaPopup();
    /*0x10ab6a0*/ void OnCreate();
    /*0x10ab6a4*/ void OnDelete();
    /*0x10ab6a8*/ void OnEnter();
    /*0x10ab6ac*/ void OnExit();
    /*0x10ab7b8*/ void OnFinish();
    /*0x10ab7bc*/ void OnLeave();
    /*0x10ab7c0*/ void OnStart();
    /*0x10ab7c4*/ void InitPopup();
    /*0x10abc7c*/ void InitCurrencyTop();
    /*0x10abe1c*/ void InitButtons();
    /*0x10ab86c*/ void BindEvent();
    /*0x10abebc*/ void RemoveEvent();
    /*0x10abfac*/ void HandleRefresh();
    /*0x10abfb0*/ void OnClickHelp();
    /*0x10ac054*/ void OnClickPercent();
    /*0x10ac170*/ void OnClickShop();
    /*0x10ac2c4*/ void <OnExit>b__8_0();
    /*0x10ac2cc*/ void <OnClickPercent>b__19_0();

    class <>c
    {
        static /*0x0*/ FurnitureGachaPopup.<> <>9;
        static /*0x8*/ System.Action <>9__20_0;

        static /*0xf62e84*/ <>c();
        /*0xf62ee4*/ <>c();
        /*0xf62eec*/ void <OnClickShop>b__20_0();
    }
}

class FurnitureGachaResultPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject[] m_singleEnables;
    /*0x48*/ UnityEngine.GameObject[] m_multiEnables;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_singleSkel;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_multiSkel;
    /*0x60*/ ParticleBase m_singleParticle;
    /*0x68*/ ParticleBase m_multiParticle;
    /*0x70*/ System.Collections.Generic.List<ItemTableRewardSlot> m_itemList;
    /*0x78*/ UnityEngine.Vector2 m_posMinMaxX;
    /*0x80*/ UnityEngine.Vector2 m_posMinMaxY;
    /*0x88*/ UnityEngine.Vector2 m_jumpPowerMinMax;
    /*0x90*/ UnityEngine.Vector2 m_jumpDurationMinMax;
    /*0x98*/ int m_jumpCount;
    /*0xa0*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0xa8*/ Spine.Unity.SkeletonGraphic m_curSkel;
    /*0xb0*/ bool m_isSingle;
    /*0xb1*/ bool m_isGacha;
    /*0xb8*/ System.Action m_animEndCallBack;

    /*0x10ac98c*/ FurnitureGachaResultPopup();
    /*0x10ac33c*/ void OnCreate();
    /*0x10ac340*/ void OnDelete();
    /*0x10ac344*/ void OnEnter();
    /*0x10ac348*/ void OnExit();
    /*0x10ac3d4*/ void OnFinish();
    /*0x10ac3d8*/ void OnLeave();
    /*0x10ac3dc*/ void OnStart();
    /*0x10aaa68*/ void InitPopup(bool isSingle, System.Collections.Generic.List<Rewards> rewardList);
    /*0x10ac3e0*/ void SetBox(bool isSingle);
    /*0x10ac4f8*/ void OnClick();
    /*0x10ac8b4*/ void HandleAnimComplete(Spine.TrackEntry trackEntry);
    /*0x10ac960*/ void HandleAnimCompleteOpenBox();
    /*0x10ac7fc*/ System.Collections.IEnumerator CoLatePlayOpenSoundSingle();
    /*0x10ac858*/ System.Collections.IEnumerator CoLatePlayOpenSound();
    /*0x10ac790*/ System.Collections.IEnumerator CoShowReward();
    /*0x10aca7c*/ void <InitPopup>b__24_1();

    class <>c
    {
        static /*0x0*/ FurnitureGachaResultPopup.<> <>9;
        static /*0x8*/ System.Action<ItemTableRewardSlot> <>9__24_0;

        static /*0xf62f6c*/ <>c();
        /*0xf62fcc*/ <>c();
        /*0xf62fd4*/ void <InitPopup>b__24_0(ItemTableRewardSlot data);
    }

    class <CoLatePlayOpenSoundSingle>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf6321c*/ <CoLatePlayOpenSoundSingle>d__29(int <>1__state);
        /*0xf63248*/ void System.IDisposable.Dispose();
        /*0xf6324c*/ bool MoveNext();
        /*0xf63358*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf63360*/ void System.Collections.IEnumerator.Reset();
        /*0xf633a0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLatePlayOpenSound>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf63004*/ <CoLatePlayOpenSound>d__30(int <>1__state);
        /*0xf63030*/ void System.IDisposable.Dispose();
        /*0xf63034*/ bool MoveNext();
        /*0xf631cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf631d4*/ void System.Collections.IEnumerator.Reset();
        /*0xf63214*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowReward>d__31 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureGachaResultPopup <>4__this;
        /*0x28*/ int <count>5__2;
        /*0x2c*/ int <i>5__3;

        /*0xf633a8*/ <CoShowReward>d__31(int <>1__state);
        /*0xf633d4*/ void System.IDisposable.Dispose();
        /*0xf633d8*/ bool MoveNext();
        /*0xf638e4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf638ec*/ void System.Collections.IEnumerator.Reset();
        /*0xf6392c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class FurnitureUpgradePopup : GuiBase
{
    /*0x40*/ ScrollContent_UpgradeEquipSlot m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemInfo;
    /*0x50*/ LocalizeString m_ExperienceText;
    /*0x58*/ UnityEngine.UI.Slider m_ExperienceSlider;
    /*0x60*/ LocalizeString m_furnitureName;
    /*0x68*/ UnityEngine.UI.Outline m_furniturNameOutColor;
    /*0x70*/ LocalizeString m_emptyText;
    /*0x78*/ ParticleBase m_levelUpParticle;
    /*0x80*/ AtlasImage m_fadeOutImage;
    /*0x88*/ AtlasImage[] m_prevLv;
    /*0x90*/ AtlasImage[] m_nextLv;
    /*0x98*/ LocalizeString m_prevInfo;
    /*0xa0*/ LocalizeString m_nextInfo;
    /*0xa8*/ LocalizeString m_upgradeTime;
    /*0xb0*/ TableData.TableData_Furniture m_TableInfo;
    /*0xb8*/ PTShare.Define.SHousingObj m_FurnitureInfo;
    /*0xc0*/ System.Collections.Generic.List<int> m_liExpInfo;
    /*0xc8*/ int m_curLevel;
    /*0xcc*/ int m_curExp;
    /*0xd0*/ System.Collections.Generic.List<PTShare.Define.SItem> m_liScrollItem;
    /*0xd8*/ System.Collections.Generic.List<HousingObjSet> m_liScrolFurniture;
    /*0xe0*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<bool, int>> m_dicItemAmount;
    /*0xe8*/ UpgradeEquipSlot _curSlot;
    /*0xf0*/ PTShare.Define.SItem _curSItem;
    /*0xf8*/ HousingObjSet _curFurnitureItem;
    /*0x100*/ int _curIndex;
    /*0x108*/ UnityEngine.Coroutine m_sliderCoroutine;

    /*0x10b15e4*/ FurnitureUpgradePopup();
    /*0x10ae100*/ void OnCreate();
    /*0x10ae104*/ void OnDelete();
    /*0x10ae1c4*/ void OnEnter();
    /*0x10ae4e4*/ void OnFinish();
    /*0x10ae4e8*/ void OnLeave();
    /*0x10ae6f0*/ void OnStart();
    /*0x10ae6f4*/ void OnExit();
    /*0x10ae7e0*/ void InitializePopup(TableData.TableData_Furniture _furniture, PTShare.Define.SHousingObj _user, int lv);
    /*0x10ae260*/ void BindEvent();
    /*0x10ae590*/ void RemoveEvent();
    /*0x10aee24*/ void InitializeScroll(int _selectindex);
    /*0x10af31c*/ void HandlerScrollContent(int _index, UpgradeEquipSlot _obj);
    /*0x10aeae8*/ void SetData();
    /*0x10aeba0*/ void SetStatusView();
    /*0x10af60c*/ void ClearInsertExperienceInfo();
    /*0x10af8b8*/ void RefreshText(float refreshTime);
    /*0x10afb4c*/ void SetExperience(int _index, int _amount, int _exp);
    /*0x10aef0c*/ void RefreshGrade();
    /*0x10af5ac*/ bool IsItem(int _nIndex);
    /*0x10affc0*/ void OnUpgrade();
    /*0x10b0474*/ void Upgrade();
    /*0x10b0c04*/ void OnFastSelect();
    /*0x10b11f8*/ void CallbackReinforce(PTShare.Define.SHousingObj obj);
    /*0x10b1340*/ void HandlerSelectEquip(int _index, int _equipExp, int _dummy);
    /*0x10b0414*/ bool IsConditionUpgrade();
    /*0x10b110c*/ bool IsConditionSelectItemLimit(int _exp);
    /*0x10ae50c*/ void ResetEffectCoroutineData();
    /*0x10afabc*/ System.Collections.IEnumerator CoSliderProgress(float oldPer, float newPer, float playTime);
    /*0x10b117c*/ System.Collections.IEnumerator CoRefreshText(int oldLevel);
    /*0x10b1480*/ System.Collections.IEnumerator CoEquipmentIconScaleEffect(int starAmount);
    /*0x10b14fc*/ System.Collections.IEnumerator CoEquipmentIconFadeOutEffect(float speed);
    /*0x10b1578*/ System.Collections.IEnumerator CoStopParticle(ParticleBase target);
    /*0x10ae3c8*/ void CleanEffectData();
    /*0x10b171c*/ void <OnUpgrade>b__46_0(bool confirm);
    /*0x10b1728*/ void <Upgrade>b__47_1(PTShare.Define.SHousingObj obj);

    class <>c
    {
        static /*0x0*/ FurnitureUpgradePopup.<> <>9;
        static /*0x8*/ System.Predicate<HousingObjSet> <>9__34_0;
        static /*0x10*/ System.Comparison<HousingObjSet> <>9__34_1;
        static /*0x18*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__47_0;

        static /*0xf63934*/ <>c();
        /*0xf63994*/ <>c();
        /*0xf6399c*/ bool <InitializePopup>b__34_0(HousingObjSet x);
        /*0xf639f8*/ int <InitializePopup>b__34_1(HousingObjSet a, HousingObjSet b);
        /*0xf63b20*/ System.Collections.Generic.IEnumerable<byte> <Upgrade>b__47_0(int s);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<int, System.ValueTuple<bool, int>> _val;

        /*0xf63b84*/ <>c__DisplayClass46_0();
        /*0xf63b8c*/ bool <OnUpgrade>b__1(HousingObjSet x);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<int, System.ValueTuple<bool, int>> _val;

        /*0xf63bf4*/ <>c__DisplayClass47_0();
        /*0xf63bfc*/ bool <Upgrade>b__2(PTShare.Define.SItem x);
        /*0xf63c5c*/ bool <Upgrade>b__3(HousingObjSet x);
    }

    class <>c__DisplayClass47_1
    {
        /*0x10*/ HousingObjSet _item;
        /*0x18*/ System.Predicate<PTShare.Define.SHousingObj> <>9__4;

        /*0xf63cc4*/ <>c__DisplayClass47_1();
        /*0xf63ccc*/ bool <Upgrade>b__4(PTShare.Define.SHousingObj y);
    }

    class <CoSliderProgress>d__54 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float playTime;
        /*0x28*/ FurnitureUpgradePopup <>4__this;
        /*0x30*/ float newPer;
        /*0x34*/ float oldPer;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;

        /*0xf64400*/ <CoSliderProgress>d__54(int <>1__state);
        /*0xf6442c*/ void System.IDisposable.Dispose();
        /*0xf64430*/ bool MoveNext();
        /*0xf64578*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf64580*/ void System.Collections.IEnumerator.Reset();
        /*0xf645c0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshText>d__55 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int oldLevel;
        /*0x28*/ FurnitureUpgradePopup <>4__this;

        /*0xf641a4*/ <CoRefreshText>d__55(int <>1__state);
        /*0xf641d0*/ void System.IDisposable.Dispose();
        /*0xf641d4*/ bool MoveNext();
        /*0xf643b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf643b8*/ void System.Collections.IEnumerator.Reset();
        /*0xf643f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconScaleEffect>d__56 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureUpgradePopup <>4__this;
        /*0x28*/ int starAmount;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ float <speed>5__3;

        /*0xf63f3c*/ <CoEquipmentIconScaleEffect>d__56(int <>1__state);
        /*0xf63f68*/ void System.IDisposable.Dispose();
        /*0xf63f6c*/ bool MoveNext();
        /*0xf64154*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6415c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6419c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconFadeOutEffect>d__57 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ FurnitureUpgradePopup <>4__this;
        /*0x28*/ float speed;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ UnityEngine.Color <color>5__3;

        /*0xf63dc8*/ <CoEquipmentIconFadeOutEffect>d__57(int <>1__state);
        /*0xf63df4*/ void System.IDisposable.Dispose();
        /*0xf63df8*/ bool MoveNext();
        /*0xf63eec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf63ef4*/ void System.Collections.IEnumerator.Reset();
        /*0xf63f34*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoStopParticle>d__58 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ParticleBase target;

        /*0xf645c8*/ <CoStopParticle>d__58(int <>1__state);
        /*0xf645f4*/ void System.IDisposable.Dispose();
        /*0xf645f8*/ bool MoveNext();
        /*0xf646c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf646c8*/ void System.Collections.IEnumerator.Reset();
        /*0xf64708*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroSlotHousing : HeroSlot
{
    /*0x48*/ LocalizeString m_name;
    /*0x50*/ LocalizeString m_floor;
    /*0x58*/ AtlasImage m_floorBg;

    /*0x126cd78*/ HeroSlotHousing();
    /*0x126cad0*/ void InitHousingSlot(PTShare.Define.SHero _hero, int floor, System.Action<PTShare.Define.SHero> _callback);
}

class HousingAmountNotify : HousingNotifyBase
{
    /*0x38*/ AmountSlot m_amountSlot;
    /*0x40*/ UnityEngine.Vector3 m_startPosition;

    /*0x130bdd4*/ HousingAmountNotify();
    /*0x130bc04*/ void InitNotify(UnityEngine.Vector3 startPosition, float time, Rewards amount);
    /*0x130bcd0*/ void DefaultUpdate();
}

class HousingCharacter : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int CHARACTER_LAYER;
    /*0x18*/ UISkeletonCharacter m_characterSkel;
    /*0x20*/ int m_oldTableId;
    /*0x24*/ UnityEngine.Vector2Int m_point;
    /*0x2c*/ UnityEngine.Vector2Int m_dest;
    /*0x38*/ UnityEngine.Coroutine m_moveCoroutine;
    /*0x40*/ UnityEngine.Coroutine m_talkCoroutine;

    static /*0x130c754*/ HousingCharacter();
    /*0x130c718*/ HousingCharacter();
    /*0x130be08*/ void OnDisable();
    /*0x130be48*/ UnityEngine.Vector2Int GetPoint();
    /*0x130be50*/ void InitCharacter(int tableId, bool refresh);
    /*0x130c364*/ void ClearCoroutine();
    /*0x130be0c*/ void Clear();
    /*0x130c41c*/ void EnableCharacter();
    /*0x130c22c*/ void HideCharacter();
    /*0x130bfd4*/ bool SetInitPoint();
    /*0x130c3b0*/ System.Collections.IEnumerator CoUpdate();
    /*0x130c44c*/ System.Collections.Generic.List<ARROW> GetMovePointList();
    /*0x130c5ac*/ void OnClick();
    /*0x130c6ac*/ System.Collections.IEnumerator CoTalkWait();

    class <CoUpdate>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingCharacter <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <moveTime>5__2;

        /*0x106414c*/ <CoUpdate>d__15(int <>1__state);
        /*0x1064178*/ void System.IDisposable.Dispose();
        /*0x106417c*/ bool MoveNext();
        /*0x106472c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1064734*/ void System.Collections.IEnumerator.Reset();
        /*0x1064774*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTalkWait>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingCharacter <>4__this;

        /*0x1064024*/ <CoTalkWait>d__18(int <>1__state);
        /*0x1064050*/ void System.IDisposable.Dispose();
        /*0x1064054*/ bool MoveNext();
        /*0x10640fc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1064104*/ void System.Collections.IEnumerator.Reset();
        /*0x1064144*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingDebugPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_parent;
    /*0x48*/ UnityEngine.UI.InputField m_startId;
    /*0x50*/ UnityEngine.UI.InputField m_endId;
    /*0x58*/ UnityEngine.UI.Text m_furnitureIdInstance;

    /*0x130cf30*/ HousingDebugPopup();
    /*0x130c7a4*/ void OnCreate();
    /*0x130c7a8*/ void OnDelete();
    /*0x130c7ac*/ void OnEnter();
    /*0x130c7b0*/ void OnFinish();
    /*0x130c7b4*/ void OnLeave();
    /*0x130c7b8*/ void OnStart();
    /*0x130c7bc*/ void Show();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ int max;
        /*0x14*/ int min;

        /*0x106477c*/ <>c__DisplayClass10_0();
        /*0x1064784*/ void <Show>b__0(HousingTileSpace f);
    }
}

class HousingEditWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingField m_mainField;
    /*0x20*/ UnityEngine.GameObject m_mainWindow;
    /*0x28*/ UnityEngine.GameObject m_editWindow;
    /*0x30*/ UnityEngine.GameObject m_viewWindow;
    /*0x38*/ UnityEngine.GameObject m_camera;
    /*0x40*/ DragPressEvent m_dragPressEvent;
    /*0x48*/ HousingSubMenu m_subMenu;
    /*0x50*/ HousingObjectSimpleMenu m_simpleMenu;
    /*0x58*/ ScrollContent_HousingFloorButton m_scrollContent;
    /*0x60*/ HousingObjectMenu m_housingObjectMenu;
    /*0x68*/ HousingPressImage m_housingPressImage;
    /*0x70*/ LocalizeString[] m_limitEffectFurnitureTexts;
    /*0x78*/ SingleTab m_viewModeTab;
    /*0x80*/ SingleTab m_effectViewModeTab;
    /*0x88*/ UnityEngine.GameObject m_shareButton;
    /*0x90*/ AtlasImage m_flashImage;
    /*0x98*/ UnityEngine.CanvasGroup m_mainCanvasGroup;
    /*0xa0*/ HousingObjectBase m_selectObject;
    /*0xa8*/ HousingObjectBase m_swapObject;
    /*0xb0*/ HousingTileSpace m_selectSpace;
    /*0xb8*/ float m_zoomValue;
    /*0xbc*/ bool m_isZoomUpdate;
    /*0xbd*/ bool m_isSaveMode;
    /*0xc0*/ UnityEngine.GameObject[] m_visitModeDisables;
    /*0xc8*/ UnityEngine.GameObject[] m_visitModeEnables;
    /*0xd0*/ LocalizeString m_totalLikeText;
    /*0xd8*/ LocalizeString m_likeText;
    /*0xe0*/ LocalizeString m_visitNameText;

    /*0x1312998*/ HousingEditWindow();
    /*0x130d148*/ void OnDisable();
    /*0x130d1e0*/ void InitWindow();
    /*0x130d840*/ void RegisterData();
    /*0x130e62c*/ void SetLimitCount();
    /*0x130e814*/ bool IsUseEvent();
    /*0x130d14c*/ void Clear();
    /*0x130d428*/ void BindEvent();
    /*0x130e81c*/ void RemoveEvent();
    /*0x130ec2c*/ HousingObjectBase RayToHousingObject();
    /*0x130ee00*/ void HandleChangeState(int state);
    /*0x130f258*/ void HandleClickFurniture(DefineHousing.SELECT_TYPE type, int id);
    /*0x130fd30*/ void HandleDownEvent();
    /*0x131072c*/ void HandleUpEvent(bool isClick);
    /*0x1310928*/ void HandleLongPressDragEvent(UnityEngine.Vector2 dir);
    /*0x1310a7c*/ void HandleDragEvent(UnityEngine.Vector2 dir);
    /*0x1310b08*/ void HandleScrollContent(int index, HousingFloorButton obj);
    /*0x1311050*/ void HandleViewModeChange(int index);
    /*0x13112f4*/ void HandleEffectViewModeChange(int index);
    /*0x1311440*/ void OnClickShowModeSwap();
    /*0x1311604*/ void OnClickRemove();
    /*0x1311684*/ void OnClickSubMenu();
    /*0x1311708*/ void OnClickViewMode();
    /*0x13118d4*/ void OnClickEditMode();
    /*0x13119fc*/ void OnClickEndEditMode();
    /*0x1311ad0*/ void OnClickRandom();
    /*0x130f53c*/ void OnClickStorage(int id);
    /*0x130f27c*/ void OnClickShop(int shopListIndex);
    /*0x1312238*/ void OnClickCam();
    /*0x1312264*/ System.Collections.IEnumerator CoShareCam();
    /*0x1311c64*/ void SetSelectObject(HousingObjectBase selectObject, bool useSnap, DefineHousing.SELECT_TYPE selectType, bool isCancel);
    /*0x130dd78*/ void UpdateZoom();
    /*0x13122d0*/ void SetSaveViewMode(bool enable);
    /*0x13124d4*/ void SetLoadViewMode(int slot);
    /*0x1312588*/ void Update();
    /*0x130da74*/ void SetVisitMenus();
    /*0x1312794*/ void OnClickLike();
    /*0x1312918*/ void OnClickMyHome();
    /*0x13129a8*/ void <HandleDownEvent>b__34_1();
    /*0x1312ad4*/ void <HandleDownEvent>b__34_0();
    /*0x1312b18*/ void <OnClickLike>b__63_0();

    class <>c
    {
        static /*0x0*/ HousingEditWindow.<> <>9;
        static /*0x8*/ System.Action<HousingObjectBase> <>9__34_2;
        static /*0x10*/ System.Action<HousingObjectBase> <>9__34_3;
        static /*0x18*/ System.Action<int> <>9__38_0;
        static /*0x20*/ System.Action <>9__47_1;
        static /*0x28*/ System.Action <>9__47_0;

        static /*0x10647d4*/ <>c();
        /*0x1064834*/ <>c();
        /*0x106483c*/ void <HandleDownEvent>b__34_2(HousingObjectBase selectObject);
        /*0x1064858*/ void <HandleDownEvent>b__34_3(HousingObjectBase selectObject);
        /*0x1064874*/ void <HandleScrollContent>b__38_0(int floor);
        /*0x1064a34*/ void <OnClickRandom>b__47_0();
        /*0x1064b7c*/ void <OnClickRandom>b__47_1();
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ HousingEditWindow <>4__this;
        /*0x18*/ TableData.TableData_Furniture data;
        /*0x20*/ string targetKey;

        /*0x1064c74*/ <>c__DisplayClass48_0();
        /*0x1064c7c*/ void <OnClickStorage>b__0();
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ bool isDone;
        /*0x18*/ UnityEngine.Texture2D texture2D;

        /*0x1064d5c*/ <>c__DisplayClass51_0();
        /*0x1064d64*/ void <CoShareCam>b__0(UnityEngine.Texture2D output);
        /*0x1064e20*/ bool <CoShareCam>b__1();
    }

    class <CoShareCam>d__51 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingEditWindow <>4__this;
        /*0x28*/ HousingEditWindow.<> <>8__1;
        /*0x30*/ float <t>5__2;
        /*0x34*/ UnityEngine.Vector3 <oldPosition>5__3;
        /*0x40*/ UnityEngine.Rect <captureRect>5__4;

        /*0x1064e28*/ <CoShareCam>d__51(int <>1__state);
        /*0x1064e54*/ void System.IDisposable.Dispose();
        /*0x1064e58*/ bool MoveNext();
        /*0x1065580*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1065588*/ void System.Collections.IEnumerator.Reset();
        /*0x10655c8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingEffectDetailEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingInfoSlot m_housingInfoSlot;
    /*0x20*/ LocalizeString m_floor;
    /*0x28*/ LocalizeString m_effect;
    /*0x30*/ AtlasImage[] m_levels;
    /*0x38*/ PTShare.Define.SHousingObj m_data;

    /*0x13131d4*/ HousingEffectDetailEntity();
    /*0x1312b1c*/ void InitEntity(PTShare.Define.SHousingObj source);
    /*0x1312dec*/ void SetLv(int tableId, int lv);
    /*0x131307c*/ void OnClick();
}

class HousingEffectDetailPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingEffectDetailEntity m_scrollContent;
    /*0x48*/ ScrollContent_HousingFloorButton m_floorButtonScrollContent;
    /*0x50*/ int m_checkFloor;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_objList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_showList;

    /*0x1313d74*/ HousingEffectDetailPopup();
    /*0x13131dc*/ void OnCreate();
    /*0x13131e0*/ void OnDelete();
    /*0x13131e4*/ void OnEnter();
    /*0x13131e8*/ void OnFinish();
    /*0x13131ec*/ void OnLeave();
    /*0x13131f0*/ void OnStart();
    /*0x13131f4*/ void OnExit();
    /*0x1313270*/ void InitPopup();
    /*0x1313464*/ void SetData();
    /*0x1313738*/ void UpdatePage();
    /*0x13132fc*/ void BindEvent();
    /*0x13138b4*/ void RemoveEvent();
    /*0x1313a14*/ void HandleScrollContent(int index, HousingEffectDetailEntity obj);
    /*0x1313a94*/ void HandleScrollContentFloorButton(int index, HousingFloorButton obj);
    /*0x1313cec*/ void OnClickChangeFloor(int floor);

    class <>c
    {
        static /*0x0*/ HousingEffectDetailPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SHousingObj> <>9__13_0;

        static /*0x10655d0*/ <>c();
        /*0x1065630*/ <>c();
        /*0x1065638*/ int <SetData>b__13_0(PTShare.Define.SHousingObj lhs, PTShare.Define.SHousingObj rhs);
    }
}

class HousingEffectEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LimitAtlasImage m_icon;
    /*0x20*/ UnityEngine.GameObject m_maxBadge;
    /*0x28*/ LocalizeString m_info;

    /*0x131471c*/ HousingEffectEntity();
    /*0x1313e0c*/ void InitEntity(TableData.TableData_Furnitureeffecttype tableData);
    /*0x13142b8*/ void InitEntity(PTShare.Define.SHousingEffect data);
    /*0x1314430*/ void InitEntity(HousingEffectIngame data);
    /*0x1314068*/ void SetIcon(string atlasType, string key);
    /*0x1314168*/ void SetInfo(string key, string[] param);
    /*0x1314214*/ void SetBadge(bool enable);
}

class HousingEffectNotify : HousingNotifyBase
{
    /*0x38*/ ParticleBase[] m_particles;
    /*0x40*/ Spine.Unity.SkeletonGraphic[] m_effects;
    /*0x48*/ HousingEffectNotify.EFFECT_TYPE m_effectType;
    /*0x50*/ HousingObjectBase m_housingObject;
    /*0x58*/ bool m_isEnd;
    /*0x60*/ System.Action<HousingObjectBase> m_completeCallBack;

    /*0x1314c40*/ HousingEffectNotify();
    /*0x1310670*/ void InitNotify(HousingObjectBase housingObject, HousingEffectNotify.EFFECT_TYPE effectType, System.Action<HousingObjectBase> completeCallBack);
    /*0x1314a18*/ void UpdateNotify();
    /*0x1314804*/ void EnableEffects(bool enable);
    /*0x131494c*/ void PlayEffects();
    /*0x1314b68*/ void EndNotify();
    /*0x13148e0*/ System.Collections.IEnumerator CoWasteClean();

    enum EFFECT_TYPE
    {
        WASTE_CLEAN = 0,
        LEVEL_UP = 1,
    }

    class <CoWasteClean>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingEffectNotify <>4__this;

        /*0x1065798*/ <CoWasteClean>d__12(int <>1__state);
        /*0x10657c4*/ void System.IDisposable.Dispose();
        /*0x10657c8*/ bool MoveNext();
        /*0x1065978*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1065980*/ void System.Collections.IEnumerator.Reset();
        /*0x10659c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingEffectPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingEffectEntity m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> m_effectList;
    /*0x50*/ System.Collections.Generic.List<HousingEffectIngame> m_ingameEffectList;

    /*0x1315194*/ HousingEffectPopup();
    /*0x1314c48*/ void OnCreate();
    /*0x1314c4c*/ void OnDelete();
    /*0x1314c50*/ void OnEnter();
    /*0x1314c54*/ void OnFinish();
    /*0x1314c58*/ void OnLeave();
    /*0x1314c5c*/ void OnStart();
    /*0x1314c60*/ void OnExit();
    /*0x1314cdc*/ void InitPopup();
    /*0x1314e08*/ void BindEvent();
    /*0x1314ee4*/ void RemoveEvent();
    /*0x1314fb8*/ void HandleScrollContent(int index, HousingEffectEntity obj);
    /*0x1315098*/ void OnClickLimit();
    /*0x1315118*/ void OnClickDetail();
}

class HousingField : UnityEngine.MonoBehaviour
{
    static /*0x0*/ UnityEngine.Vector3 OFFSET;
    /*0x18*/ UnityEngine.UI.Image[] m_wallImages;
    /*0x20*/ HousingTileSpace m_spaceBase;
    /*0x28*/ HousingTile m_tileBase;
    /*0x30*/ int m_spaceCountX;
    /*0x34*/ int m_spaceCountY;
    /*0x38*/ int m_placementCount;
    /*0x40*/ UnityEngine.GameObject m_tileParent;
    /*0x48*/ UnityEngine.CanvasGroup m_groundParent;
    /*0x50*/ UnityEngine.CanvasGroup m_spaceParent;
    /*0x58*/ UnityEngine.GameObject m_wallParent;
    /*0x60*/ UnityEngine.CanvasGroup m_wallSpaceLeft;
    /*0x68*/ UnityEngine.CanvasGroup m_wallSpaceRight;
    /*0x70*/ UnityEngine.CanvasGroup m_backLayer;
    /*0x78*/ UnityEngine.CanvasGroup m_sortLayer;
    /*0x80*/ UnityEngine.GameObject m_mostFront;
    /*0x88*/ System.Collections.Generic.List<HousingCharacter> m_characterList;
    /*0x90*/ UnityEngine.UI.Extensions.UILineRenderer m_groundLine;
    /*0x98*/ System.Collections.Generic.List<HousingTileSpace> m_spaceList;
    /*0xa0*/ System.Collections.Generic.List<HousingTileSpace> m_groundList;
    /*0xa8*/ System.Collections.Generic.List<HousingTileSpace> m_wallLeftSpaceList;
    /*0xb0*/ System.Collections.Generic.List<HousingTileSpace> m_wallRightSpaceList;
    /*0xb8*/ HousingTile[] m_tiles;
    /*0xc0*/ UnityEngine.Coroutine m_updateCoroutine;

    static /*0x13189cc*/ HousingField();
    static /*0x13153fc*/ UnityEngine.Vector3 GetOffSet();
    /*0x13188c4*/ HousingField();
    /*0x1315464*/ System.Collections.Generic.List<HousingTileSpace> GetSpaceList();
    /*0x131546c*/ System.Collections.Generic.List<HousingTileSpace> GetGroundList();
    /*0x1315474*/ System.Collections.Generic.List<HousingTileSpace> GetWallLeftSpaceList();
    /*0x131547c*/ System.Collections.Generic.List<HousingTileSpace> GetWallRightSpaceList();
    /*0x1315484*/ void InitField();
    /*0x130e7ac*/ UnityEngine.Transform GetParent(DefineHousing.LAYER layer);
    /*0x130de44*/ void UpdateFloorObjects();
    /*0x1315a9c*/ void UpdateFloorCharacter();
    /*0x1311ebc*/ void UpdateTile(TableData.TableData_Housingfloorpattern patternData);
    /*0x1311fa4*/ void UpdateWall(TableData.TableData_Housingfloorpattern patternData);
    /*0x131644c*/ void Clear();
    /*0x1315e44*/ void SortLayer(int layer);
    /*0x13157b4*/ void BindEvent();
    /*0x1316450*/ void RemoveEvent();
    /*0x1316798*/ void HandleSort(int layer);
    /*0x131679c*/ void HandleState(int viewMode);
    /*0x131709c*/ void HandleFloorChange();
    /*0x13170a0*/ void HandleSweepEvent(int sweep);
    /*0x1317614*/ void Sweep(int sweep, UnityEngine.GameObject targetLayer, ref System.Collections.Generic.List<int> sweepList);
    /*0x1316de8*/ void SetNotifyImage(DefineHousing.LAYER layer, bool isShowGrid, UnityEngine.Color blockColor, System.Collections.Generic.List<HousingTileSpace> target);
    /*0x1316d48*/ void HideCanvasGroup(UnityEngine.CanvasGroup canvasGroup);
    /*0x1316d98*/ void ActiveCanvasGroup(UnityEngine.CanvasGroup canvasGroup);
    /*0x131672c*/ System.Collections.IEnumerator CoSortUpdate();
    /*0x131775c*/ void CreateTiles();
    /*0x13179bc*/ void CreateSpace();
    /*0x1317d44*/ void CreateGround();
    /*0x13180cc*/ void InitWallField();
    /*0x1318428*/ void ClearTile();
    /*0x1318520*/ void ClearSpace();
    /*0x131861c*/ void ClearWall();

    class <>c
    {
        static /*0x0*/ HousingField.<> <>9;
        static /*0x8*/ System.Action<HousingCharacter> <>9__32_0;
        static /*0x10*/ System.Action <>9__42_0;

        static /*0x10659c8*/ <>c();
        /*0x1065a28*/ <>c();
        /*0x1065a30*/ void <UpdateFloorCharacter>b__32_0(HousingCharacter d);
        /*0x1065a60*/ void <HandleSweepEvent>b__42_0();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ int frontValue;
        /*0x14*/ int backValue;

        /*0x1065ad8*/ <>c__DisplayClass36_0();
        /*0x1065ae0*/ int <SortLayer>b__0(System.ValueTuple<UnityEngine.GameObject, UnityEngine.Vector3> lhs, System.ValueTuple<UnityEngine.GameObject, UnityEngine.Vector3> rhs);
    }

    class <CoSortUpdate>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingField <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0x1065b9c*/ <CoSortUpdate>d__47(int <>1__state);
        /*0x1065bc8*/ void System.IDisposable.Dispose();
        /*0x1065bcc*/ bool MoveNext();
        /*0x1065c80*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1065c88*/ void System.Collections.IEnumerator.Reset();
        /*0x1065cc8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1065b2c*/ <>c__DisplayClass49_0();
        /*0x1065b34*/ bool <CreateSpace>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1065b64*/ <>c__DisplayClass50_0();
        /*0x1065b6c*/ bool <CreateGround>b__0(HousingTileSpace d);
    }
}

class HousingFloorButton : UnityEngine.MonoBehaviour
{
    static /*0x0*/ System.Action OnRefresh;
    /*0x18*/ UnityEngine.GameObject m_selectObject;
    /*0x20*/ UnityEngine.GameObject m_openObject;
    /*0x28*/ UnityEngine.GameObject m_lockObject;
    /*0x30*/ UnityEngine.GameObject m_processingObject;
    /*0x38*/ UnityEngine.GameObject m_processingIcon;
    /*0x40*/ LocalizeString[] m_floorTexts;
    /*0x48*/ UnityEngine.GameObject m_effect;
    /*0x50*/ int m_floor;
    /*0x58*/ System.Action<int> m_onClick;
    /*0x60*/ UnityEngine.Coroutine m_processing;

    static /*0x13195a8*/ HousingFloorButton();
    static /*0x1318e44*/ void OnChangeFunc(int floor);
    /*0x13195a0*/ HousingFloorButton();
    /*0x1318a24*/ void OnEnable();
    /*0x1318ba8*/ void OnDisable();
    /*0x1310c20*/ void InitButton(int floor, System.Action<int> onClick);
    /*0x1313bd4*/ void InitButton(int floor, UnityEngine.Color floorColor, bool showEffect, System.Action<int> onClick);
    /*0x1318d24*/ void ClearParent();
    /*0x1318dc0*/ System.Collections.IEnumerator CoUpdateProcessing(System.DateTime startTime);
    /*0x1318a28*/ void BindEvent();
    /*0x1318bac*/ void RemoveEvent();
    /*0x1318e38*/ void HandleUpdate();
    /*0x1319540*/ void OnClickButton();

    class <CoUpdateProcessing>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingFloorButton <>4__this;
        /*0x28*/ System.DateTime startTime;
        /*0x30*/ double <lefttime>5__2;

        /*0x1065ec8*/ <CoUpdateProcessing>d__16(int <>1__state);
        /*0x1065ef4*/ void System.IDisposable.Dispose();
        /*0x1065ef8*/ bool MoveNext();
        /*0x10660d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10660d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1066118*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int floor;
        /*0x18*/ System.Action <>9__2;

        /*0x1065cd0*/ <>c__DisplayClass20_0();
        /*0x1065cd8*/ void <OnChangeFunc>b__0();
        /*0x1065db8*/ void <OnChangeFunc>b__2();
        /*0x1065e40*/ void <OnChangeFunc>b__1();
    }
}

class HousingFloorOpenPopup : GuiBase
{
    /*0x40*/ LocalizeString m_floorText;
    /*0x48*/ AmountSlot[] m_requires;
    /*0x50*/ AmountSlot m_fastOpen;
    /*0x58*/ LocalizeString m_openBenefit;
    /*0x60*/ LocalizeString m_openTime;
    /*0x68*/ TableData.TableData_Housingfloor m_tableData;

    /*0x1319b08*/ HousingFloorOpenPopup();
    /*0x13195ac*/ void OnCreate();
    /*0x13195b0*/ void OnEnter();
    /*0x13195b4*/ void OnStart();
    /*0x13195b8*/ void OnFinish();
    /*0x13195bc*/ void OnLeave();
    /*0x13195c0*/ void OnDelete();
    /*0x13195c4*/ void OnExit();
    /*0x1319138*/ void InitPopup(int floor);
    /*0x1319640*/ void OnClickOpen();
    /*0x1319794*/ void OnClickFastOpen();
    /*0x1319b10*/ void <OnClickOpen>b__14_0();
    /*0x1319b1c*/ void <OnClickFastOpen>b__15_0(bool _result);
    /*0x1319c20*/ void <OnClickFastOpen>b__15_1();
    /*0x1319cf4*/ void <OnClickFastOpen>b__15_2();
}

class HousingFloorProcessingPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString[] m_amounts;
    /*0x50*/ UnityEngine.GameObject m_starIcon;
    /*0x58*/ UnityEngine.GameObject m_amountText;
    /*0x60*/ LocalizeString m_openTime;
    /*0x68*/ UnityEngine.Coroutine m_update;
    /*0x70*/ double m_leftTime;
    /*0x78*/ int m_price;
    /*0x7c*/ bool m_isOpen;

    /*0x131a69c*/ HousingFloorProcessingPopup();
    /*0x1319fc4*/ void OnCreate();
    /*0x1319fc8*/ void OnDelete();
    /*0x1319fcc*/ void OnEnter();
    /*0x1319fd0*/ void OnFinish();
    /*0x1319fd4*/ void OnLeave();
    /*0x1319fd8*/ void OnStart();
    /*0x1319fdc*/ void OnExit();
    /*0x131a074*/ void InitPopup();
    /*0x131a19c*/ System.Collections.IEnumerator CoUpdate(System.DateTime startTime);
    /*0x131a214*/ void OnClick();

    class <CoUpdate>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingFloorProcessingPopup <>4__this;
        /*0x28*/ System.DateTime startTime;
        /*0x30*/ UnityEngine.WaitForSeconds <waitForSec>5__2;
        /*0x38*/ TableData.TableData_Housingfloor <table>5__3;
        /*0x40*/ System.DateTime <endtime>5__4;

        /*0x106654c*/ <CoUpdate>d__17(int <>1__state);
        /*0x1066578*/ void System.IDisposable.Dispose();
        /*0x106657c*/ bool MoveNext();
        /*0x1066d24*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1066d2c*/ void System.Collections.IEnumerator.Reset();
        /*0x1066d6c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ HousingFloorProcessingPopup <>4__this;
        /*0x18*/ int floor;
        /*0x20*/ System.Action <>9__2;
        /*0x28*/ System.Action <>9__4;
        /*0x30*/ System.Action <>9__3;

        /*0x1066120*/ <>c__DisplayClass18_0();
        /*0x1066128*/ void <OnClick>b__0();
        /*0x1066214*/ void <OnClick>b__2();
        /*0x10662b0*/ void <OnClick>b__1(bool _result);
        /*0x10663c4*/ void <OnClick>b__3();
        /*0x10664a4*/ void <OnClick>b__4();
    }
}

class HousingHeroSelectPopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotHousing m_scrollContent;
    /*0x48*/ LocalizeString m_heroCount;
    /*0x50*/ UnityEngine.UI.Dropdown m_dropDown;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SHero> m_heroList;
    /*0x60*/ bool m_dirty;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> m_oldList;

    /*0x131ca9c*/ HousingHeroSelectPopup();
    /*0x131ac0c*/ void OnCreate();
    /*0x131ac10*/ void OnEnter();
    /*0x131ac14*/ void OnStart();
    /*0x131ac18*/ void OnFinish();
    /*0x131ac1c*/ void OnLeave();
    /*0x131ae28*/ void OnDelete();
    /*0x131ae2c*/ void OnExit();
    /*0x131b49c*/ void InitPopup();
    /*0x131bfd4*/ void UpdateUI();
    /*0x131bcfc*/ void UpdatePage();
    /*0x131bb2c*/ void SetPacketData();
    /*0x131aec0*/ void UpdateData(bool updateData);
    /*0x131b91c*/ void BindEvent();
    /*0x131ac20*/ void RemoveEvent();
    /*0x131c1e8*/ void HandleOnChangeFloor(int floor);
    /*0x131c368*/ void HandleScrollContent(int index, HeroSlotHousing obj);
    /*0x131c534*/ void HandleScrollContentFloorButton(int index, HousingFloorButton obj);
    /*0x131c5e0*/ void HandleOnFloorChange();
    /*0x131c5e4*/ void HandleOnClickHero(PTShare.Define.SHero sHero);
    /*0x131cb54*/ void <HandleScrollContentFloorButton>b__22_0(int floor);
    /*0x131cbcc*/ void <HandleOnClickHero>b__24_1();
    /*0x131cbd0*/ void <HandleOnClickHero>b__24_0();

    class <>c__DisplayClass13_0
    {
        /*0x10*/ System.Collections.Generic.List<TableData.TableData_Unitbase> heroList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SHero> <>9__1;

        /*0x1066e54*/ <>c__DisplayClass13_0();
        /*0x1066e5c*/ bool <InitPopup>b__1(PTShare.Define.SHero d);
    }

    class <>c
    {
        static /*0x0*/ HousingHeroSelectPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SHero> <>9__13_2;
        static /*0x10*/ System.Comparison<PTShare.Define.SHero> <>9__13_0;

        static /*0x1066d74*/ <>c();
        /*0x1066dd4*/ <>c();
        /*0x1066ddc*/ int <InitPopup>b__13_2(PTShare.Define.SHero lhs, PTShare.Define.SHero rhs);
        /*0x1066e18*/ int <InitPopup>b__13_0(PTShare.Define.SHero lhs, PTShare.Define.SHero rhs);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ int floor;
        /*0x14*/ int count;

        /*0x1066eec*/ <>c__DisplayClass14_0();
        /*0x1066ef4*/ void <UpdateUI>b__0(HousingHeroExpand f);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ System.Collections.Generic.List<HousingHeroExpand> targetList;
        /*0x18*/ bool updateData;
        /*0x20*/ HousingHeroSelectPopup <>4__this;

        /*0x1066f3c*/ <>c__DisplayClass17_0();
        /*0x1066f44*/ void <UpdateData>b__0();
    }

    class <>c__DisplayClass17_1
    {
        /*0x10*/ int i;
        /*0x18*/ HousingHeroSelectPopup.<> CS$<>8__locals1;

        /*0x1066f6c*/ <>c__DisplayClass17_1();
        /*0x1066f74*/ bool <UpdateData>b__1(PTShare.Define.SHousingHero d);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int floor;

        /*0x1067014*/ <>c__DisplayClass20_0();
        /*0x106701c*/ void <HandleOnChangeFloor>b__0();
    }
}

class HousingHistoryPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingVisitEntity m_scrollContent;
    /*0x48*/ LocalizeString m_totalLikeCount;
    /*0x50*/ LocalizeString m_currHeart;
    /*0x58*/ LocalizeString m_dailyHeart;
    /*0x60*/ UnityEngine.GameObject m_noHistory;
    /*0x68*/ System.Collections.Generic.List<PTShare.Define.SVisitor> m_historyList;

    /*0x131d5b4*/ HousingHistoryPopup();
    /*0x131cbd4*/ void OnCreate();
    /*0x131cbd8*/ void OnDelete();
    /*0x131cbdc*/ void OnEnter();
    /*0x131cbe0*/ void OnExit();
    /*0x131ccb0*/ void OnFinish();
    /*0x131ccb4*/ void OnLeave();
    /*0x131ce04*/ void OnStart();
    /*0x131ce08*/ void InitPopup();
    /*0x131d07c*/ void BindEvent();
    /*0x131ccb8*/ void RemoveEvent();
    /*0x131d450*/ void HandleScrollContent(int index, HousingVisitEntity obj);
    /*0x131d1d0*/ void HandleRefreshPoint();
    /*0x131d4d4*/ void OnClickTakeAll();
    /*0x131d62c*/ void <OnClickTakeAll>b__18_0();

    class <>c
    {
        static /*0x0*/ HousingHistoryPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SVisitor> <>9__13_0;

        static /*0x10670a4*/ <>c();
        /*0x1067104*/ <>c();
        /*0x106710c*/ int <InitPopup>b__13_0(PTShare.Define.SVisitor lhs, PTShare.Define.SVisitor rhs);
    }
}

class HousingIconNotify : HousingNotifyBase
{
    /*0x38*/ LimitAtlasImage m_image;
    /*0x40*/ HousingObjectBase m_housingObject;

    /*0x131d7dc*/ HousingIconNotify();
    /*0x131d630*/ void InitNotify(HousingObjectBase housingObj, AtlasType atlasType, string icon);
    /*0x131d698*/ void UpdateNotify();
}

class HousingInfoPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_info;
    /*0x50*/ LocalizeString m_spaceText;
    /*0x58*/ LimitAtlasImage m_limitImage;
    /*0x60*/ LocalizeString m_currEffectText;
    /*0x68*/ AtlasImage[] m_levels;
    /*0x70*/ SingleTab m_lockTab;
    /*0x78*/ UnityEngine.GameObject m_effectNotice;
    /*0x80*/ UnityEngine.GameObject m_interactionNotice;
    /*0x88*/ UnityEngine.GameObject m_upgradeButton;
    /*0x90*/ AmountSlot m_sellButton;
    /*0x98*/ UnityEngine.GameObject m_collocateButton;
    /*0xa0*/ UnityEngine.GameObject m_sellText;
    /*0xa8*/ PTShare.Define.SHousingObj m_obj;
    /*0xb0*/ TableData.TableData_Furniture m_tableData;
    /*0xb8*/ int m_lv;
    /*0xbc*/ HousingInfoPopup.POPUP_TYPE m_popupType;
    /*0xc0*/ Rewards m_buyAmount;
    /*0x188*/ System.Action m_buyCallBack;

    /*0x131ea4c*/ HousingInfoPopup();
    /*0x131d7e4*/ void OnCreate();
    /*0x131d7e8*/ void OnDelete();
    /*0x131d7ec*/ void OnEnter();
    /*0x131d7f0*/ void OnExit();
    /*0x131d888*/ void OnFinish();
    /*0x131d88c*/ void OnLeave();
    /*0x131d890*/ void OnStart();
    /*0x1313104*/ void InitPopup(PTShare.Define.SHousingObj obj, HousingInfoPopup.POPUP_TYPE popupType);
    /*0x131df18*/ void InitPopupBuy(int tableId, Rewards amount, System.Action callBack);
    /*0x131d894*/ void InitPopup(int tableId, int lv, HousingInfoPopup.POPUP_TYPE popupType);
    /*0x131e30c*/ void SetSpace();
    /*0x131df64*/ void SetLevel();
    /*0x131e1e4*/ void SetEffectText();
    /*0x131e3fc*/ void HandleOnChangeLock(int value);
    /*0x131e4d0*/ void OnClickUpgrade();
    /*0x131e638*/ void OnClickSell();
    /*0x131e90c*/ void OnClickCollocate();
    /*0x131ea54*/ void <OnClickSell>b__35_0();

    enum POPUP_TYPE
    {
        NONE = 0,
        UPGRADE = 1,
        SELL = 2,
        BUY = 3,
    }
}

class HousingInfoSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ LimitAtlasImage m_image;
    /*0x20*/ AtlasImage m_bg;
    /*0x28*/ AtlasImage m_frame;
    /*0x30*/ LocalizeString m_name;
    /*0x38*/ LocalizeString m_amount;
    /*0x40*/ UnityEngine.GameObject[] m_levels;
    /*0x48*/ UnityEngine.GameObject m_effect;
    /*0x50*/ UnityEngine.GameObject m_interact;
    /*0x58*/ HousingObjSet m_housingObjSet;
    /*0x60*/ TableData.TableData_Furniture m_tableData;
    /*0x68*/ System.Action<int> m_onClick;

    /*0x131f854*/ HousingInfoSlot();
    /*0x131ec60*/ void InitSlot(HousingObjSet housingObjSet, System.Action<int> onClick);
    /*0x1312d5c*/ void InitSlot(PTShare.Define.SHousingObj housingObj, System.Action<int> onClick);
    /*0x131ecf4*/ void InitSlot(int tableId, System.Action<int> onClick);
    /*0x131ed2c*/ void InitCP(long cp);
    /*0x131eca0*/ void ClearData();
    /*0x131eca8*/ void UpdateUI();
    /*0x131f31c*/ void SetImage();
    /*0x131f1e4*/ void SetBG();
    /*0x131f41c*/ void SetName();
    /*0x131effc*/ void SetLevel();
    /*0x131f0c4*/ void SetAmount();
    /*0x131f564*/ void SetNotice();
    /*0x131f6b0*/ void SetFrame();
    /*0x131f7e8*/ void OnClick();
}

class HousingLimitEffectPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingEffectEntity m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Furnitureeffecttype> m_dataList;

    /*0x124de40*/ HousingLimitEffectPopup();
    /*0x124daa0*/ void OnCreate();
    /*0x124daa4*/ void OnDelete();
    /*0x124daa8*/ void OnEnter();
    /*0x124daac*/ void OnFinish();
    /*0x124dab0*/ void OnLeave();
    /*0x124dab4*/ void OnStart();
    /*0x124dab8*/ void OnExit();
    /*0x124db34*/ void InitPopup();
    /*0x124dc0c*/ void BindEvent();
    /*0x124dce8*/ void RemoveEvent();
    /*0x124ddbc*/ void HandleScrollContent(int index, HousingEffectEntity obj);
}

class HousingManager : Singleton.Data.SingletonData<HousingManager>
{
    static /*0x0*/ System.Action<int> OnSort;
    static /*0x8*/ System.Action<int> OnChangeState;
    static /*0x10*/ System.Action<int> OnSweepEvent;
    static /*0x18*/ System.Action OnSweepEventEnd;
    static /*0x20*/ System.Action OnFloorChange;
    static /*0x28*/ System.Action OnCharacterRefresh;
    static /*0x30*/ System.Action<DefineHousing.SELECT_TYPE, int> OnClickFurniture;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<HousingTileSpace>> m_spaceDic;
    /*0x28*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<UnityEngine.Vector2Int>> m_blockSpaceDic;
    /*0x30*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<UnityEngine.Vector2Int>> m_objectCenterDic;
    /*0x38*/ System.Collections.Generic.Dictionary<int, UnityEngine.Transform> m_layerDic;
    /*0x40*/ UnityEngine.GameObject m_camera;
    /*0x48*/ UnityEngine.RectTransform m_cameraRect;
    /*0x50*/ int m_state;
    /*0x54*/ int m_floor;
    /*0x58*/ System.DateTime m_floorOpenTime;
    /*0x60*/ HousingObjectBase m_editSelectObject;
    /*0x68*/ DefineHousing.SELECT_TYPE m_editSelectType;
    /*0x6c*/ int m_housingOpenFloor;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_housingObjs;
    /*0x78*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> m_housingWastes;
    /*0x80*/ System.Collections.Generic.List<PTShare.Define.SHousingHero> m_housingHeroes;
    /*0x88*/ int m_todayLikeSend;
    /*0x8c*/ int m_todayLikeRecv;
    /*0x90*/ long m_accLikeRecv;
    /*0x98*/ bool m_newlike;
    /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SVisitor> m_historyList;
    /*0xa8*/ ServerProtocol.ResHousingVisit m_visitData;
    /*0xb0*/ long m_visitLikeCount;
    /*0xb8*/ DefineHousing.HOUSING_TYPE m_housingType;
    /*0xbc*/ DefineHousing.VISIT_TYPE m_visitType;
    /*0xc0*/ ServerProtocol.ResHousingSaveList m_saveData;
    /*0xc8*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> m_loadData;
    /*0xd0*/ bool m_loadFailed;
    /*0xd8*/ System.Collections.Generic.List<int> m_loadFailedList;
    /*0xe0*/ bool m_loadSaveData;
    /*0xe8*/ System.Collections.Generic.List<HousingObjSet> m_housingObjectSetList;
    /*0xf0*/ System.Collections.Generic.List<HousingNotifyBase> m_housingNotifyList;
    /*0xf8*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> m_housingEffect;
    /*0x100*/ System.Collections.Generic.List<HousingEffectIngame> m_housingIngameEffect;
    /*0x108*/ System.Collections.Generic.List<int> m_furnitureShopGroupList;
    /*0x110*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<System.DateTime, System.DateTime>> m_furnitureShopTimeDic;
    /*0x118*/ System.Collections.Generic.List<PTShare.Define.SHousingGoods> m_purchaseDataList;
    /*0x120*/ int m_buyItemIndex;
    /*0x124*/ int m_gachaGroupId;
    /*0x128*/ System.DateTime m_gachaEndTime;

    static /*0x1259378*/ HousingManager();
    /*0x1258f20*/ HousingManager();
    /*0x124deb8*/ bool InitInstance();
    /*0x124dff4*/ void ReleaseInstance();
    /*0x124e0fc*/ void SetData(ServerProtocol.ResAccountFirst response);
    /*0x124eafc*/ void Send_Enter(System.Action callBack);
    /*0x124ec94*/ void Send_OpenStart(int floor, System.Action callBack);
    /*0x124ee30*/ void Send_OpenEnd(int floor, System.Action callBack);
    /*0x124efcc*/ void Send_FastOpen(int floor, System.Action callBack);
    /*0x124f168*/ void Send_Update(string sets, string unsets, System.Action callBack);
    /*0x124f31c*/ void Send_UpdateHero(string set, string unset, System.Action callBack);
    /*0x124f4c0*/ void Send_HousingCleanStart(int floor, int wasteid, System.Action callBack);
    /*0x124f664*/ void Send_HousingCleanEnd(int floor, int wasteid, bool fast, System.Action callBack);
    /*0x124f818*/ void Send_HousingUpgradeStart(int objId, string feedings, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x124f9bc*/ void Send_HousingUpgradeComplete(int objId, bool fast, System.Action callBack);
    /*0x124fb60*/ void Send_BuyAndCollocate(int index, int layer, UnityEngine.Vector2Int centerPoint, bool isReverse, int unsetId, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x124feec*/ void Send_BuyAndCollocate_Pattern(int index, string furnitureType, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x1250260*/ void Send_Purchase(int index, System.Action<PTShare.Define.SHousingObj> callBack);
    /*0x1250410*/ void Send_Sell(int objId, System.Action callBack);
    /*0x12505c8*/ void Send_Dismiss(System.Collections.Generic.List<PTShare.Define.SHousingObj> dissmissList, System.Action callBack);
    /*0x1250890*/ void Send_HousingBuy(int groupId, int priceType, System.Action<System.Collections.Generic.List<PTShare.Define.SMiniHousingObj>> callBack);
    /*0x1250a34*/ void Send_History(System.Action callBack);
    /*0x1250bc0*/ void Send_Visit(long playerId, int floor, DefineHousing.VISIT_TYPE visitType, System.Action callBack);
    /*0x1250dc0*/ void Send_Visit(int floor, System.Action callBack);
    /*0x1250f90*/ void Send_TakePoint(long friendId, int dayId, System.Action callBack);
    /*0x1251200*/ void Send_TakePointAll(System.Action callBack);
    /*0x12513e8*/ void Send_SendPoint(long playerId, System.Action callBack);
    /*0x1251584*/ void Send_SaveList(System.Action<ServerProtocol.ResHousingSaveList> callBack);
    /*0x1251740*/ void Send_Save(int slot, string thumb, System.Action<ServerProtocol.ResHousingSave> callBack);
    /*0x1251900*/ void Send_SaveName(int slot, string name, System.Action callBack);
    /*0x1251ab4*/ void Send_Delete(int slot, System.Action callBack);
    /*0x1251c5c*/ void Send_HousingObjectLock(int housingObjId, bool locking, System.Action callBack);
    /*0x1251e00*/ void Send_HousingHeroAdd(int tableId, System.Action callBack);
    /*0x1251ebc*/ void Send_HousingHeroRemove(int tableId, System.Action callBack);
    /*0x124dee4*/ void InitData();
    /*0x1252464*/ void IncreaseHousingObject(System.Collections.Generic.List<PTShare.Define.SMiniHousingObj> source);
    /*0x12525c0*/ void IncreaseHousingObject(System.Collections.Generic.List<PTShare.Define.SHousingObj> source);
    /*0x124e200*/ void UpdateWaste();
    /*0x124e600*/ void UpdateObjectSetList();
    /*0x125262c*/ PTShare.Define.SHousingObj CreateWasteData(PTShare.Define.SHousingWaste waste, int trashIndex);
    /*0x124e17c*/ void SetHousingEffect(System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingEffect);
    /*0x12527b0*/ System.Collections.Generic.List<PTShare.Define.SHousingEffect> GetEffectList();
    /*0x12527b8*/ int GetEffect_ValueInt(PTShare.Define.ContentEffectType effectType);
    /*0x1252994*/ int GetEffect_Value(PTShare.Define.ContentEffectType effectType);
    /*0x1252ac4*/ float GetEffect_ValuePercent(PTShare.Define.ContentEffectType effectType);
    /*0x12528e0*/ int GetEffect_MaxValue(PTShare.Define.ContentEffectType effectType);
    /*0x1252af4*/ TableData.TableData_Furnitureeffecttype GetEffect_MaxTableData(PTShare.Define.ContentEffectType effectType);
    /*0x1252b84*/ System.Collections.Generic.List<HousingEffectIngame> GetIngameEffectList();
    /*0x1252f2c*/ TableData.TableData_Furnitureeffecttype GetEffect_MaxTableData(string effectType);
    /*0x1252f58*/ TableData.TableData_Furnitureeffecttype GetEffect_MaxTableData(int lv, string effectLevelType);
    /*0x125307c*/ void UpdateHousingEffect(string housingGroup, System.Collections.Generic.List<PTShare.Define.SHousingEffect> housingEffect);
    /*0x1253128*/ string GetFurnitureEffectLocalize(int lv, string effectLevelType);
    /*0x1252f78*/ TableData.TableData_Furnitureleveltypelist FindFurnitureLevelType(int lv, string effectLevelType);
    /*0x12534e0*/ float EffectValueConvetByEffectId(int heroEffectId, float value);
    /*0x1253418*/ float EffectValueConvetByShowType(string statType, float value);
    /*0x1253544*/ void ExitEditMode();
    /*0x125368c*/ void SweepEvent(DefineHousing.SWEEP[] sweeps);
    /*0x1253794*/ bool IsSweepTarget(int sweep, DefineHousing.SWEEP check);
    /*0x12537a0*/ void ChangeState(bool callChange, DefineHousing.HOUSING_STATE[] states);
    /*0x12538f0*/ bool CheckState(int state, DefineHousing.HOUSING_STATE[] targets);
    /*0x1253954*/ bool IsState(DefineHousing.HOUSING_STATE state);
    /*0x1253964*/ bool IsStates(DefineHousing.HOUSING_STATE[] states);
    /*0x12539cc*/ void AddState(bool callChange, DefineHousing.HOUSING_STATE[] states);
    /*0x12535c4*/ void RemoveState(bool callChange, DefineHousing.HOUSING_STATE[] states);
    /*0x125384c*/ void CallChangeState(DefineHousing.HOUSING_STATE type, int value);
    /*0x12537e4*/ int ConvertStateToValue(DefineHousing.HOUSING_STATE[] states);
    /*0x125372c*/ int ConvertSweepToValue(DefineHousing.SWEEP[] sweeps);
    /*0x124dee8*/ void BindEvent();
    /*0x124dff8*/ void RemoveEvent();
    /*0x1253ac4*/ void HandleOnClickFurniture(DefineHousing.SELECT_TYPE selectType, int id);
    /*0x1253ad4*/ System.ValueTuple<bool, string, string> GetLoadUpdateData(int slot);
    /*0x125479c*/ void DeploymentFailedLoad(int id);
    /*0x1254808*/ void JoinLoadMode(int slot);
    /*0x1254dd8*/ void ExitLoadMode();
    /*0x1254de0*/ int GetFloorWorkCount();
    /*0x1254ef0*/ int GetFloorHeroCount();
    /*0x1255328*/ bool IsWorkFloor();
    /*0x125535c*/ System.Collections.Generic.List<HousingNotifyBase> GetNotifyList();
    T FindFollowNotify<T, T2>(T2 follow);
    T CreateNotify<T>(string name);
    /*0x1255364*/ void RemoveNotify(HousingNotifyBase remove);
    /*0x1255410*/ void ClearNotifys();
    /*0x1255560*/ System.Collections.Generic.List<PTShare.Define.SHousingWaste> GetWasteList();
    /*0x1255568*/ System.Collections.Generic.List<HousingObjSet> GetHousingObjectSetList();
    /*0x12501b8*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> GetHousingObjectList();
    /*0x1255590*/ PTShare.Define.SHousingWaste FindWaste(int floor, int id);
    /*0x1254644*/ PTShare.Define.SHousingObj FindHousingObj(int id);
    /*0x1255684*/ int GetUpgradeTime(int lv);
    /*0x12556a8*/ int GetFurnitureExp(int tableId, int lv, int exp);
    /*0x125589c*/ int GetFastFurnitureUpgradeAmount(int start, int end, System.DateTime endTime);
    /*0x1255a74*/ int GetFastWasteAmount(int floor, System.DateTime endTime);
    /*0x1255c1c*/ float GetDismissAdd(int tableId, int lv);
    /*0x1255c6c*/ System.Collections.Generic.List<HousingTileSpace> GetSpaceList(int layer);
    /*0x1255cd0*/ UnityEngine.GameObject GetCamera();
    /*0x1255cd8*/ UnityEngine.RectTransform GetCameraRect();
    /*0x1255ce0*/ HousingObjectBase GetEditSelectObject();
    /*0x1255ce8*/ DefineHousing.SELECT_TYPE GetSelectType();
    /*0x1255cf0*/ void SetSpaceList(int layer, System.Collections.Generic.List<HousingTileSpace> space);
    /*0x1255dfc*/ void SetLayer(int layer, UnityEngine.Transform parent);
    /*0x1255ea4*/ void SetCamera(UnityEngine.GameObject go);
    /*0x1253a18*/ void SetEditSelectObject(HousingObjectBase selectObject, DefineHousing.SELECT_TYPE selectType, bool isCancelOld);
    /*0x1256134*/ void AddPlaceObject(int layer, UnityEngine.Vector2Int centerPoint);
    /*0x1256260*/ void RemovePlaceObject(int layer, UnityEngine.Vector2Int centerPoint);
    /*0x1256328*/ bool CheckPlaceObject(int layer, System.Collections.Generic.List<UnityEngine.Vector2Int> pointList, UnityEngine.Vector2Int offset);
    /*0x1256690*/ bool BePlaceObject(int layer, UnityEngine.Vector2Int centerPoint);
    /*0x1256538*/ HousingTileSpace FindSpace(int layer, UnityEngine.Vector2Int point);
    /*0x125675c*/ UnityEngine.Transform FindLayer(int layer);
    /*0x12567f8*/ DefineHousing.LAYER ConvertLayer(string type);
    /*0x1256900*/ bool LayerIsWall(DefineHousing.LAYER layer);
    /*0x1256910*/ void AddBlock(int layer, UnityEngine.Vector2Int point);
    /*0x1256a8c*/ void RemoveBlock(int layer, UnityEngine.Vector2Int point);
    /*0x125646c*/ bool IsBlock(int layer, UnityEngine.Vector2Int point);
    /*0x1256b90*/ bool IsBlock_Empty(int layer, UnityEngine.Vector2Int point);
    /*0x1254ff4*/ System.Collections.Generic.List<HousingHeroExpand> GetHousingHeroListExpand();
    /*0x1256cbc*/ PTShare.Define.SHousingHero FindHousingHero(int tableId);
    /*0x1256df8*/ int GetFloor();
    /*0x1256e00*/ int GetFloorFurnitureCount();
    /*0x1257000*/ void ChangeFloor(int floor);
    /*0x1254d38*/ void ChangeFloorNotChecked(int floor);
    /*0x1257110*/ bool IsOpenFloor(int floor);
    /*0x125714c*/ int GetNextOpenFloor();
    /*0x1257158*/ System.ValueTuple<bool, System.DateTime> GetFloorOpenData();
    /*0x1257218*/ int GetOpenFloor();
    /*0x1257220*/ int GetFloorPlaceAllFurnitureCount();
    /*0x1257350*/ int GetPlaceEffectFurnitureCount();
    /*0x1257480*/ int GetPlaceEffectFurnitureCount(int tableId);
    /*0x1254484*/ System.Collections.Generic.List<int> GetPlaceEffectFurnitureList();
    /*0x1254734*/ int GetLimitEffectFurnitureMaxCount();
    /*0x125756c*/ System.Collections.Generic.List<PTShare.Define.SVisitor> GetHistoryList();
    /*0x1257574*/ ServerProtocol.ResHousingVisit GetVisit();
    /*0x125757c*/ DefineHousing.VISIT_TYPE GetVisitType();
    /*0x1257584*/ long GetTotalLikeCount();
    /*0x125758c*/ long GetVisitTotalLikeCount();
    /*0x1257594*/ int GetLeftSendLikeCount();
    /*0x1255570*/ bool IsVisit();
    /*0x12575f4*/ void SetVisitTotalLikeCount(long count);
    /*0x12575fc*/ void ExitVisit();
    /*0x1257608*/ void ExitVisitPopup();
    /*0x125119c*/ bool IsTakeDailyLike();
    /*0x1257848*/ int GetTodayLikeRecvCount();
    /*0x1257850*/ bool IsMaxLevelFurniture(int tableId, int lv);
    /*0x12579f0*/ int GetMaxLevelFurniture(int tableId);
    /*0x1257b80*/ bool IsNormalMode();
    /*0x1255580*/ bool IsLoadMode();
    /*0x1257b90*/ UnityEngine.Vector2Int ConvertPoint(UnityEngine.Vector2Int point, ARROW arrow);
    /*0x1257be8*/ bool IsDismissTarget(string grade);
    /*0x1257d10*/ System.DateTime ConvertEndTime(PTShare.Define.SHousingObj obj, TableData.TableData_Furniture table);
    /*0x1257f20*/ System.TimeSpan GetUpgradeTimeByNextLv(PTShare.Define.SHousingObj obj, TableData.TableData_Furniture table);
    /*0x1257eac*/ int GetWasteClearTime(bool effectable);
    /*0x12580a8*/ HousingObjectBase GetPoolObjectBase(string path);
    /*0x1258154*/ void UpdateDailyChange();
    /*0x1258178*/ string GetFurnitureIcon(string imagekey, bool isBig);
    /*0x1258208*/ string GetFurnitureShopIconKey(string imagekey, bool isBig);
    /*0x1258298*/ void SetLikeReddot(bool enable);
    /*0x12582a4*/ bool IsShowLikeReddot();
    /*0x12570ac*/ void ClearFloorData();
    /*0x12582f0*/ void ReleaseData();
    /*0x1258408*/ int GetCurrSelectItemIndex();
    /*0x1258410*/ System.Collections.Generic.List<int> GetSellGroupList();
    /*0x1258418*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> GetSellList(bool isUpdate);
    /*0x1258628*/ bool IsPossiblePriceCount();
    /*0x1251ff4*/ void UpdateShopData();
    /*0x1258730*/ int GetLeftPurchaseCount(int index);
    /*0x1258798*/ int GetPurchaseCount(int index);
    /*0x1258894*/ void AddPuchaseCount(int index);
    /*0x12589fc*/ DefineHousing.PURCHASE_STATE CheckLimitPurchase(int index);
    /*0x1258b24*/ System.ValueTuple<string, int, long, Rewards> GetShopPrice(int index);
    /*0x1258eac*/ System.ValueTuple<System.DateTime, System.DateTime> GetShopTime(int groudId);
    /*0x1258f10*/ int GetGachaId();
    /*0x1258f18*/ System.DateTime GetLeftGachaGroupExpireDay();
    /*0x125937c*/ void <UpdateObjectSetList>b__67_2(HousingObjSet d);
    /*0x1252ba8*/ void <GetIngameEffectList>g__UpdateIngameEffect|78_0();
    /*0x12593e0*/ void <ExitVisitPopup>b__175_0();

    class <>c__DisplayClass3_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x106972c*/ <>c__DisplayClass3_0();
        /*0x1069734*/ void <Send_Enter>b__0(ServerProtocol.ResHousingEnter response);
    }

    class <>c__DisplayClass4_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069814*/ <>c__DisplayClass4_0();
        /*0x106981c*/ void <Send_OpenStart>b__0(ServerProtocol.ResHousingOpenStart response);
    }

    class <>c__DisplayClass5_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10699e8*/ <>c__DisplayClass5_0();
        /*0x10699f0*/ void <Send_OpenEnd>b__0(ServerProtocol.ResHousingOpenEnd response);
    }

    class <>c__DisplayClass6_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069ad4*/ <>c__DisplayClass6_0();
        /*0x1069adc*/ void <Send_FastOpen>b__0(ServerProtocol.ResHousingFastOpen response);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069cfc*/ <>c__DisplayClass7_0();
        /*0x1069d04*/ void <Send_Update>b__0(ServerProtocol.ResHousingUpdate response);
    }

    class <>c__DisplayClass7_1
    {
        /*0x10*/ ServerProtocol.ResHousingUpdate response;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SHousingObj> <>9__1;

        /*0x106a02c*/ <>c__DisplayClass7_1();
        /*0x106a034*/ bool <Send_Update>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass8_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x106a0f8*/ <>c__DisplayClass8_0();
        /*0x106a100*/ void <Send_UpdateHero>b__0(ServerProtocol.ResHousingUpdateDeck response);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;
        /*0x20*/ System.Action<PTShare.Define.SHousingWaste> <>9__1;

        /*0x106a13c*/ <>c__DisplayClass9_0();
        /*0x106a144*/ void <Send_HousingCleanStart>b__0(ServerProtocol.ResHousingClearStart response);
        /*0x106a2fc*/ void <Send_HousingCleanStart>b__1(PTShare.Define.SHousingWaste d);
    }

    class <>c__DisplayClass9_1
    {
        /*0x10*/ PTShare.Define.SHousingWaste d;

        /*0x106a40c*/ <>c__DisplayClass9_1();
        /*0x106a414*/ bool <Send_HousingCleanStart>b__2(PTShare.Define.SHousingWaste f);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10675b8*/ <>c__DisplayClass10_0();
        /*0x10675c0*/ void <Send_HousingCleanEnd>b__0(ServerProtocol.ResHousingClearEnd response);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SHousingObj> callBack;

        /*0x1067844*/ <>c__DisplayClass11_0();
        /*0x106784c*/ void <Send_HousingUpgradeStart>b__0(ServerProtocol.ResHousingObjUpgrade response);
    }

    class <>c__DisplayClass11_1
    {
        /*0x10*/ ServerProtocol.ResHousingObjUpgrade response;

        /*0x10679f4*/ <>c__DisplayClass11_1();
        /*0x10679fc*/ bool <Send_HousingUpgradeStart>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1067aa4*/ <>c__DisplayClass12_0();
        /*0x1067aac*/ void <Send_HousingUpgradeComplete>b__0(ServerProtocol.ResHousingObjComplete response);
    }

    class <>c__DisplayClass12_1
    {
        /*0x10*/ ServerProtocol.ResHousingObjComplete response;

        /*0x1067d14*/ <>c__DisplayClass12_1();
        /*0x1067d1c*/ bool <Send_HousingUpgradeComplete>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int unsetId;
        /*0x1c*/ int index;
        /*0x20*/ System.Action<PTShare.Define.SHousingObj> callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingObj> <>9__1;

        /*0x1067d54*/ <>c__DisplayClass13_0();
        /*0x1067d5c*/ void <Send_BuyAndCollocate>b__0(ServerProtocol.ResHousingObjPurchase response);
        /*0x1067f9c*/ bool <Send_BuyAndCollocate>b__1(PTShare.Define.SHousingObj f);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int index;
        /*0x20*/ System.Action<PTShare.Define.SHousingObj> callBack;

        /*0x106803c*/ <>c__DisplayClass15_0();
        /*0x1068044*/ void <Send_Purchase>b__0(ServerProtocol.ResHousingObjPurchase response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int objId;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingObj> <>9__1;

        /*0x10682f0*/ <>c__DisplayClass16_0();
        /*0x10682f8*/ void <Send_Sell>b__0(ServerProtocol.ResHousingObjSell response);
        /*0x1068500*/ bool <Send_Sell>b__1(PTShare.Define.SHousingObj f);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068524*/ <>c__DisplayClass17_0();
        /*0x106852c*/ void <Send_Dismiss>b__0(ServerProtocol.ResHousingObjDismiss response);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action<System.Collections.Generic.List<PTShare.Define.SMiniHousingObj>> callBack;

        /*0x106869c*/ <>c__DisplayClass18_0();
        /*0x10686a4*/ void <Send_HousingBuy>b__0(ServerProtocol.ResHousingObjBuy response);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x10688fc*/ <>c__DisplayClass19_0();
        /*0x1068904*/ void <Send_History>b__0(ServerProtocol.ResHousingHistory response);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ DefineHousing.VISIT_TYPE visitType;
        /*0x20*/ System.Action callBack;

        /*0x1068998*/ <>c__DisplayClass20_0();
        /*0x10689a0*/ void <Send_Visit>b__0(ServerProtocol.ResHousingVisit response);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068a08*/ <>c__DisplayClass21_0();
        /*0x1068a10*/ void <Send_Visit>b__0(ServerProtocol.ResHousingVisit response);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ long friendId;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SVisitor> <>9__1;

        /*0x1068a68*/ <>c__DisplayClass22_0();
        /*0x1068a70*/ void <Send_TakePoint>b__0(ServerProtocol.ResHousingTakePoint response);
        /*0x1068d00*/ bool <Send_TakePoint>b__1(PTShare.Define.SVisitor f);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068d24*/ <>c__DisplayClass23_0();
        /*0x1068d2c*/ void <Send_TakePointAll>b__0(ServerProtocol.ResHousingAllPoint response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1068e9c*/ <>c__DisplayClass24_0();
        /*0x1068ea4*/ void <Send_SendPoint>b__0(ServerProtocol.ResHousingSendPoint response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResHousingSaveList> callBack;

        /*0x1068fe0*/ <>c__DisplayClass25_0();
        /*0x1068fe8*/ void <Send_SaveList>b__0(ServerProtocol.ResHousingSaveList response);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int slot;
        /*0x20*/ System.Action<ServerProtocol.ResHousingSave> callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingSave> <>9__1;

        /*0x1069078*/ <>c__DisplayClass26_0();
        /*0x1069080*/ void <Send_Save>b__0(ServerProtocol.ResHousingSave response);
        /*0x10692d0*/ bool <Send_Save>b__1(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int slot;
        /*0x20*/ string name;
        /*0x28*/ System.Action callBack;
        /*0x30*/ System.Predicate<PTShare.Define.SHousingSave> <>9__1;

        /*0x10692f4*/ <>c__DisplayClass27_0();
        /*0x10692fc*/ void <Send_SaveName>b__0(ServerProtocol.ResHousingSaveName response);
        /*0x1069400*/ bool <Send_SaveName>b__1(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int slot;
        /*0x20*/ System.Action callBack;
        /*0x28*/ System.Predicate<PTShare.Define.SHousingSave> <>9__1;

        /*0x1069424*/ <>c__DisplayClass28_0();
        /*0x106942c*/ void <Send_Delete>b__0(ServerProtocol.ResHousingDelete response);
        /*0x1069560*/ bool <Send_Delete>b__1(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1069584*/ <>c__DisplayClass29_0();
        /*0x106958c*/ void <Send_HousingObjectLock>b__0(ServerProtocol.ResHousingObjLock response);
    }

    class <>c__DisplayClass29_1
    {
        /*0x10*/ ServerProtocol.ResHousingObjLock response;

        /*0x10696c8*/ <>c__DisplayClass29_1();
        /*0x10696d0*/ bool <Send_HousingObjectLock>b__1(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ int tableId;

        /*0x1069700*/ <>c__DisplayClass31_0();
        /*0x1069708*/ bool <Send_HousingHeroRemove>b__0(PTShare.Define.SHousingHero d);
    }

    class <>c
    {
        static /*0x0*/ HousingManager.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SHousingObj, System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool>> <>9__67_0;
        static /*0x10*/ System.Func<System.Linq.IGrouping<System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool>, PTShare.Define.SHousingObj>, HousingObjSet> <>9__67_1;
        static /*0x18*/ System.Comparison<HousingObjSet> <>9__67_3;
        static /*0x20*/ System.Action<HousingNotifyBase> <>9__119_0;
        static /*0x28*/ System.Func<TableData.TableData_Furnitureleveltypelist, int> <>9__178_0;
        static /*0x30*/ System.Func<TableData.TableData_Furnitureleveltypelist, int> <>9__179_0;
        static /*0x38*/ System.Comparison<TableData.TableData_Furnitureshoplist> <>9__203_0;

        static /*0x1067194*/ <>c();
        /*0x10671f4*/ <>c();
        /*0x10671fc*/ System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool> <UpdateObjectSetList>b__67_0(PTShare.Define.SHousingObj g);
        /*0x1067274*/ HousingObjSet <UpdateObjectSetList>b__67_1(System.Linq.IGrouping<System.ValueTuple<int, int, PTShare.Define.SHousingObjLocation, int, bool>, PTShare.Define.SHousingObj> s);
        /*0x1067348*/ int <UpdateObjectSetList>b__67_3(HousingObjSet a, HousingObjSet b);
        /*0x106747c*/ void <ClearNotifys>b__119_0(HousingNotifyBase d);
        /*0x10674f4*/ int <IsMaxLevelFurniture>b__178_0(TableData.TableData_Furnitureleveltypelist f);
        /*0x106750c*/ int <GetMaxLevelFurniture>b__179_0(TableData.TableData_Furnitureleveltypelist f);
        /*0x1067524*/ int <GetSellList>b__203_0(TableData.TableData_Furnitureshoplist lhs, TableData.TableData_Furnitureshoplist rhs);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ int typeToInt;

        /*0x1069c34*/ <>c__DisplayClass73_0();
        /*0x1069c3c*/ bool <GetEffect_ValueInt>b__0(PTShare.Define.SHousingEffect f);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ int typeToInt;

        /*0x1069c60*/ <>c__DisplayClass74_0();
        /*0x1069c68*/ bool <GetEffect_Value>b__0(PTShare.Define.SHousingEffect f);
    }

    class <>c__DisplayClass78_0
    {
        /*0x10*/ TableData.TableData_Furnitureleveltypelist effectData;

        /*0x1069c8c*/ <>c__DisplayClass78_0();
        /*0x1069c94*/ bool <GetIngameEffectList>b__1(HousingEffectIngame f);
    }

    class <>c__DisplayClass83_0
    {
        /*0x10*/ int lv;

        /*0x106a0cc*/ <>c__DisplayClass83_0();
        /*0x106a0d4*/ bool <FindFurnitureLevelType>b__0(TableData.TableData_Furnitureleveltypelist f);
    }

    class <>c__DisplayClass108_0
    {
        /*0x10*/ int slot;

        /*0x1067554*/ <>c__DisplayClass108_0();
        /*0x106755c*/ bool <GetLoadUpdateData>b__0(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass108_1
    {
        /*0x10*/ TableData.TableData_Furniture table;
        /*0x18*/ int placeCount;

        /*0x1067580*/ <>c__DisplayClass108_1();
        /*0x1067588*/ void <GetLoadUpdateData>b__1(int f);
    }

    class <>c__DisplayClass110_0
    {
        /*0x10*/ int slot;

        /*0x10676f8*/ <>c__DisplayClass110_0();
        /*0x1067700*/ bool <JoinLoadMode>b__0(PTShare.Define.SHousingSave f);
    }

    class <>c__DisplayClass112_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int workCount;

        /*0x1067724*/ <>c__DisplayClass112_0();
        /*0x106772c*/ void <GetFloorWorkCount>b__0(PTShare.Define.SHousingObj f);
    }

    class <>c__DisplayClass113_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int count;

        /*0x10677ec*/ <>c__DisplayClass113_0();
        /*0x10677f4*/ void <GetFloorHeroCount>b__0(HousingHeroExpand f);
    }

    class <>c__DisplayClass116_0<T, T2>
    {
        /*0x0*/ T2 follow;

        <>c__DisplayClass116_0();
        bool <FindFollowNotify>b__0(HousingNotifyBase f);
    }

    class <>c__DisplayClass123_0
    {
        /*0x10*/ int id;
        /*0x14*/ int floor;

        /*0x1067a34*/ <>c__DisplayClass123_0();
        /*0x1067a3c*/ bool <FindWaste>b__0(PTShare.Define.SHousingWaste d);
    }

    class <>c__DisplayClass124_0
    {
        /*0x10*/ int id;

        /*0x1067a78*/ <>c__DisplayClass124_0();
        /*0x1067a80*/ bool <FindHousingObj>b__0(PTShare.Define.SHousingObj d);
    }

    class <>c__DisplayClass143_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x1067fc0*/ <>c__DisplayClass143_0();
        /*0x1067fc8*/ bool <FindSpace>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass154_0
    {
        /*0x10*/ HousingManager <>4__this;
        /*0x18*/ int wasteCount;

        /*0x1067ff8*/ <>c__DisplayClass154_0();
        /*0x1068000*/ void <GetFloorFurnitureCount>b__0(PTShare.Define.SHousingWaste f);
    }

    class <>c__DisplayClass183_0
    {
        /*0x10*/ string grade;

        /*0x1068668*/ <>c__DisplayClass183_0();
        /*0x1068670*/ bool <IsDismissTarget>b__0(TableData.TableData_Housingdismiss d);
    }

    class <>c__DisplayClass207_0
    {
        /*0x10*/ int index;

        /*0x1068940*/ <>c__DisplayClass207_0();
        /*0x1068948*/ bool <GetPurchaseCount>b__0(PTShare.Define.SHousingGoods f);
    }

    class <>c__DisplayClass208_0
    {
        /*0x10*/ int index;

        /*0x106896c*/ <>c__DisplayClass208_0();
        /*0x1068974*/ bool <AddPuchaseCount>b__0(PTShare.Define.SHousingGoods f);
    }
}

class HousingObjSet
{
    /*0x10*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> ObjectList;
    /*0x18*/ int tableId;
    /*0x1c*/ int lv;

    /*0x12598d4*/ HousingObjSet(System.Collections.Generic.List<PTShare.Define.SHousingObj> objectList, int tableId, int lv);
    /*0x1259914*/ HousingObjSet(PTShare.Define.SHousingObj obj);
    /*0x12599dc*/ int GetCount();
    /*0x1259a28*/ int GetFirstId();
    /*0x1259a9c*/ bool IsLock();
}

class HousingHeroExpand
{
    /*0x10*/ PTShare.Define.SHousingHero housingHero;
    /*0x18*/ int tableId;
    /*0x1c*/ int mfloor;

    /*0x131ac04*/ HousingHeroExpand();
    /*0x1316430*/ int get_floor();
}

class HousingEffectIngame
{
    /*0x10*/ string effectType;
    /*0x18*/ float value;
    /*0x1c*/ int effectId;
    /*0x20*/ int heroId;

    /*0x1314724*/ HousingEffectIngame();
    /*0x1314778*/ HousingEffectIngame(string effectType, float value, int effectId, int heroId);
}

class HousingNotifyBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector3 m_followInterval;
    /*0x28*/ UnityEngine.GameObject m_followTarget;
    /*0x30*/ float m_disableTime;

    /*0x12598a0*/ HousingNotifyBase();
    /*0x12596cc*/ UnityEngine.GameObject GetFollowTarget();
    /*0x12596d4*/ void LateUpdate();
    /*0x12596e0*/ void DefaultUpdate();
    /*0x1259874*/ void UpdateNotify();
    /*0x1259878*/ void EndNotify();
}

class HousingObjectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_image;
    /*0x20*/ HousingObjectSpace m_space;
    /*0x28*/ UnityEngine.GameObject m_spaceParent;
    /*0x30*/ int m_tableId;
    /*0x34*/ bool m_isReverse;
    /*0x38*/ DefineHousing.LAYER m_layer;
    /*0x40*/ HousingTileSpace m_snapSpace;
    /*0x48*/ bool m_snapLeft;
    /*0x50*/ PTShare.Define.SHousingObj m_data;
    /*0x58*/ TableData.TableData_Furniture m_tableData;
    /*0x60*/ DG.Tweening.Tween m_sotrageTween;
    /*0x68*/ HousingIconNotify m_tmp;

    /*0x125dad0*/ HousingObjectBase();
    /*0x1259b18*/ UnityEngine.GameObject GetImageObject();
    /*0x1259b34*/ UnityEngine.Vector3 GetImagePosition();
    /*0x1259b60*/ int GetTableId();
    /*0x1259b68*/ int GetObjectId();
    /*0x1259b84*/ PTShare.Define.SHousingObj GetData();
    /*0x1259b8c*/ HousingTileSpace GetCenterSpcae();
    /*0x1259ba8*/ UnityEngine.Vector2Int GetCenterPoint();
    /*0x1259bc4*/ HousingTileSpace GetSnapSpace();
    /*0x1259bcc*/ DefineHousing.LAYER GetLayer();
    /*0x1259bf8*/ string GetFurnitureTypeToString();
    /*0x1259c14*/ int GetLv();
    /*0x1259c2c*/ void SetCenterPoint(UnityEngine.Vector2Int point);
    /*0x1259c48*/ void SetLayer(DefineHousing.LAYER layer);
    /*0x1259c50*/ bool IsUpgradeComplete();
    /*0x1259d98*/ bool IsUpgradeProgress();
    /*0x1259dbc*/ void OnDisable();
    /*0x1259f40*/ string ConvertSaveString(bool snap);
    /*0x125a304*/ bool IsSweepTarget(int sweep);
    /*0x125a484*/ void InitObject(int tableId);
    /*0x125ad4c*/ void InitObject(PTShare.Define.SHousingObj data);
    /*0x125ae38*/ bool IsReverse();
    /*0x125ae40*/ void SetReverse(bool isReverse);
    /*0x125ae4c*/ bool Reverse();
    /*0x125b0cc*/ bool IsReversePoint();
    /*0x125acac*/ void UpdateReverse(bool reverse);
    /*0x125ad00*/ void UpdateHide();
    /*0x125b0d4*/ bool IsPatternObject();
    /*0x125b1e8*/ void CleanData();
    /*0x1255f58*/ void Cancel();
    /*0x125b6dc*/ void Upgrade();
    /*0x125b214*/ bool PlacePoint(UnityEngine.Vector2Int centerPoint);
    /*0x125b958*/ bool CheckPlacePoint(UnityEngine.Vector2Int centerPoint);
    /*0x125c018*/ bool CheckPlacePoint(DefineHousing.LAYER layer, UnityEngine.Vector2Int centerPoint);
    /*0x125c0cc*/ void RemovePlace(bool isDestroy);
    /*0x125c2c8*/ void ReturnItem();
    /*0x125c344*/ void CancelAndRemove(bool isDestroy);
    /*0x125c370*/ HousingTileSpace SnapFollow(UnityEngine.EventSystems.PointerEventData pointerEventData, bool picking);
    /*0x125c974*/ HousingTileSpace SnapGround(UnityEngine.EventSystems.PointerEventData pointerEventData, bool picking);
    /*0x125c38c*/ HousingTileSpace SnapWall(UnityEngine.EventSystems.PointerEventData pointerEventData, bool picking);
    /*0x125af10*/ void UpdatePlacePoint(UnityEngine.Vector2Int point, bool isLeft);
    /*0x125d298*/ void SelectObject();
    /*0x125ce14*/ bool ScreenPointToLocalPointInRectangle(UnityEngine.EventSystems.PointerEventData pointerEventData, ref UnityEngine.Vector2 pos);
    /*0x125a6ac*/ void BindEvent();
    /*0x1259dc0*/ void RemoveEvent();
    /*0x125d530*/ void HandleChangeState(int state);
    /*0x125aa04*/ void UpdateState();
    /*0x125cf98*/ bool UpdateWallGroundPoint(UnityEngine.Vector2Int centerPoint, bool isPlace);
    /*0x125bc9c*/ void UpdateWallGroundBlock(UnityEngine.Vector2Int centerPoint, bool add);
    /*0x125be38*/ System.Collections.Generic.List<UnityEngine.Vector2Int> FindWallGroundBlockList(UnityEngine.Vector2Int centerPoint);
    /*0x125d474*/ void TweenEffectSelect();
    /*0x125d930*/ void TweenEffectKeep(System.Action callBack);
    /*0x125da98*/ void SetSpace(HousingObjectSpace space);
    /*0x125daa0*/ AtlasImage GetAtlasImage();
    /*0x125daa8*/ void Debug_ShowSpace();
    /*0x125dac8*/ HousingObjectSpace Debug_GetSpace();
    /*0x125a478*/ bool IsWaste();
    /*0x125b938*/ int GetWasteId();
    /*0x125a834*/ void InitWaste();
    /*0x125dad8*/ void <Upgrade>b__40_0();

    class <>c
    {
        static /*0x0*/ HousingObjectBase.<> <>9;
        static /*0x8*/ System.Action <>9__40_1;

        static /*0x106a45c*/ <>c();
        /*0x106a4bc*/ <>c();
        /*0x106a4c4*/ void <Upgrade>b__40_1();
    }

    class <>c__DisplayClass62_0
    {
        /*0x10*/ HousingObjectBase <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x106a560*/ <>c__DisplayClass62_0();
        /*0x106a568*/ void <TweenEffectKeep>g__callback|0();
    }
}

class HousingObjectMenu : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_parent;
    /*0x20*/ UnityEngine.UI.Button m_collocateBtn;
    /*0x28*/ UnityEngine.UI.Button m_infoBtn;
    /*0x30*/ UnityEngine.UI.Button m_reverseBtn;
    /*0x38*/ UnityEngine.UI.Button m_keepBtn;
    /*0x40*/ UnityEngine.UI.Button m_sellBtn;
    /*0x48*/ UnityEngine.UI.Button m_cancelBtn;
    /*0x50*/ AtlasImage m_sellImage;
    /*0x58*/ LocalizeString m_sellText;
    /*0x60*/ LocalizeString m_collocateText;
    /*0x68*/ LocalizeString m_furnitureEffectText;
    /*0x70*/ HousingObjectBase m_target;

    /*0x125fd3c*/ HousingObjectMenu();
    /*0x125dae0*/ void InitMenu(HousingObjectBase target);
    /*0x125e578*/ void HideMenu();
    /*0x125de8c*/ void HideAllButton();
    /*0x125df8c*/ void UpdateSellButton();
    /*0x125e398*/ void UpdateFurnitureEffect();
    /*0x125df88*/ void BindEvent();
    /*0x125e5a0*/ void RemoveEvent();
    /*0x125e5a4*/ void OnClickCollocate();
    /*0x125e26c*/ bool IsLockRotate(int furnitureId);
    /*0x125f00c*/ void Purchase();
    /*0x125f3f0*/ void OnClickInfo();
    /*0x125f5d8*/ void OnClickReverse();
    /*0x125f720*/ void OnClickKeep();
    /*0x125f8d4*/ void OnClickCancel();
    /*0x125fa44*/ void OnClickSell();
    /*0x125fd44*/ void <OnClickCollocate>b__19_2(bool _result);
    /*0x125ee10*/ bool <OnClickCollocate>g__IsCollocate|19_0();
    /*0x125fd50*/ void <Purchase>b__21_0(PTShare.Define.SHousingObj instance);
    /*0x125feb8*/ void <OnClickKeep>b__24_0();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ UnityEngine.Vector2Int snapPoint;
        /*0x18*/ HousingObjectMenu <>4__this;

        /*0x106a760*/ <>c__DisplayClass19_0();
        /*0x106a768*/ void <OnClickCollocate>b__1();
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;
        /*0x18*/ HousingObjectMenu <>4__this;

        /*0x106a7f4*/ <>c__DisplayClass21_0();
        /*0x106a7fc*/ void <Purchase>b__1(PTShare.Define.SHousingObj instance);
    }

    class <>c
    {
        static /*0x0*/ HousingObjectMenu.<> <>9;
        static /*0x8*/ System.Action <>9__26_0;

        static /*0x106a65c*/ <>c();
        /*0x106a6bc*/ <>c();
        /*0x106a6c4*/ void <OnClickSell>b__26_0();
    }
}

class HousingObjectSimpleMenu : UnityEngine.MonoBehaviour
{
    /*0x18*/ TabGroup m_tabGroup;
    /*0x20*/ TabGroup m_sortTabGroup;
    /*0x28*/ ScrollContent_HousingStorageSlot m_storageScrollContent;
    /*0x30*/ ScrollContent_HousingShopSlot m_shopScrollContent;
    /*0x38*/ UnityEngine.GameObject m_parent;
    /*0x40*/ HousingObjectSimpleMenu.TABTYPE m_tabType;
    /*0x44*/ DefineHousing.HOUSING_SORTTAB m_sortTab;
    /*0x48*/ System.Collections.Generic.List<HousingObjSet> m_storageList;
    /*0x50*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> m_shopList;

    /*0x1260d54*/ HousingObjectSimpleMenu();
    /*0x125ffa8*/ void OnDisable();
    /*0x12601c0*/ void InitMenu();
    /*0x1260244*/ void HideMenu();
    /*0x1260264*/ void InitMenu(HousingObjectSimpleMenu.TABTYPE tabType);
    /*0x12601c8*/ void InitMenu(HousingObjectSimpleMenu.TABTYPE tabType, DefineHousing.HOUSING_SORTTAB sortTabType);
    /*0x1260488*/ void UpdateTab();
    /*0x12605b4*/ void UpdateStorageList();
    /*0x126072c*/ void UpdateShopList();
    /*0x126087c*/ void ChangeSubTab(int sortTab);
    /*0x126026c*/ void BindEvent();
    /*0x125ffac*/ void RemoveEvent();
    /*0x1260920*/ void Clear();
    /*0x1260a00*/ void HandleChangeMainTab(int tab);
    /*0x1260aa8*/ void HandleUpdateStorage(int index, HousingStorageSlot obj);
    /*0x1260b8c*/ System.Collections.IEnumerator CoUpdateScroll();
    /*0x1260bf8*/ void HandleUpdateShop(int index, HousingShopSlot obj);
    /*0x1260e0c*/ void <UpdateStorageList>b__16_0(HousingObjSet d);
    /*0x1260ef8*/ void <UpdateShopList>b__17_0(TableData.TableData_Furnitureshoplist d);
    /*0x1260fe4*/ void <HandleUpdateStorage>b__23_0(HousingObjSet objSet);

    enum TABTYPE
    {
        STORAGE = 0,
        SHOP = 1,
    }

    class <CoUpdateScroll>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingObjectSimpleMenu <>4__this;
        /*0x28*/ UnityEngine.Vector3 <start>5__2;
        /*0x38*/ UnityEngine.RectTransform <rect>5__3;
        /*0x40*/ float <t>5__4;

        /*0x106a9a8*/ <CoUpdateScroll>d__24(int <>1__state);
        /*0x106a9d4*/ void System.IDisposable.Dispose();
        /*0x106a9d8*/ bool MoveNext();
        /*0x106abd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106abd8*/ void System.Collections.IEnumerator.Reset();
        /*0x106ac18*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ HousingObjectSimpleMenu.<> <>9;
        static /*0x8*/ System.Action<int> <>9__25_0;

        static /*0x106a8b0*/ <>c();
        /*0x106a910*/ <>c();
        /*0x106a918*/ void <HandleUpdateShop>b__25_0(int response);
    }
}

class HousingObjectSpace : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingTileSpace m_center;
    /*0x20*/ System.Collections.Generic.List<HousingTileSpace> m_tileSpace;
    /*0x28*/ UnityEngine.Vector2Int m_centerPoint;

    /*0x1261ea4*/ HousingObjectSpace();
    /*0x12610f0*/ void SetReverse(bool reverse);
    /*0x12611e4*/ UnityEngine.Vector2Int GetCenterPoint();
    /*0x12611ec*/ System.Collections.Generic.List<HousingTileSpace> GetTileSpaceList();
    /*0x12611f4*/ HousingTileSpace GetCenterSpace();
    /*0x125bb60*/ System.Collections.Generic.List<UnityEngine.Vector2Int> GetSpacePointList(bool isReverse);
    /*0x12611fc*/ void SetCenterPoint(UnityEngine.Vector2Int centerPoint);
    /*0x1261204*/ bool IsMySpace(HousingTileSpace space);
    /*0x125a8a4*/ void SetColor(UnityEngine.Vector2Int selectPoint, UnityEngine.Color select, UnityEngine.Color none);
    /*0x1261338*/ HousingTileSpace GetLastSpace();
    /*0x12613b0*/ void UpdateEdit();
    /*0x1261434*/ UnityEngine.Vector2Int GetEmptySpacePoint(UnityEngine.Vector2Int start, UnityEngine.Vector2Int dir);
    /*0x12615b8*/ void IsEmptyAddCenter();
    /*0x126167c*/ bool IsEmpty(UnityEngine.Vector2Int point);
    /*0x12617b0*/ void AddSpace(HousingTileSpace space);
    /*0x1261814*/ void RemovePoint(UnityEngine.Vector2Int point);
    /*0x12619fc*/ void RemoveLast();
    /*0x1261b24*/ void ClearSpace();
    /*0x1261c80*/ void ResizeSpace(bool isFloor);

    class <>c__DisplayClass3_0
    {
        /*0x10*/ bool reverse;

        /*0xe4aba0*/ <>c__DisplayClass3_0();
        /*0xe4aba8*/ void <SetReverse>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass7_0
    {
        /*0x10*/ bool isReverse;
        /*0x18*/ System.Collections.Generic.List<UnityEngine.Vector2Int> pointlist;

        /*0xe4abcc*/ <>c__DisplayClass7_0();
        /*0xe4abd4*/ void <GetSpacePointList>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HousingTileSpace space;

        /*0xe4ac50*/ <>c__DisplayClass9_0();
        /*0xe4ac58*/ bool <IsMySpace>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;
        /*0x18*/ System.Predicate<HousingTileSpace> <>9__0;

        /*0x106ac20*/ <>c__DisplayClass13_0();
        /*0x106ac28*/ bool <GetEmptySpacePoint>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x106ac58*/ <>c__DisplayClass15_0();
        /*0x106ac60*/ bool <IsEmpty>b__0(HousingTileSpace d);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ UnityEngine.Vector2Int point;

        /*0x106ac90*/ <>c__DisplayClass17_0();
        /*0x106ac98*/ bool <RemovePoint>b__0(HousingTileSpace d);
    }
}

class HousingPopup : GuiBase
{
    /*0x40*/ HousingEditWindow m_editWindow;
    /*0x48*/ UnityEngine.GameObject m_camera;
    /*0x50*/ HousingField m_mainField;
    /*0x58*/ AmountSlot m_goldAmount;
    /*0x60*/ AmountSlot m_starAmount;
    /*0x68*/ AmountSlot m_slimeAmount;
    /*0x70*/ UnityEngine.GameObject[] m_walls;
    /*0x78*/ UnityEngine.UI.Image m_bg;

    /*0x1262780*/ HousingPopup();
    /*0x1261f28*/ void OnCreate();
    /*0x1261f2c*/ void OnDelete();
    /*0x12620d8*/ void OnEnter();
    /*0x12620dc*/ void OnFinish();
    /*0x12620e0*/ void OnLeave();
    /*0x12620fc*/ void OnStart();
    /*0x1262100*/ void OnExit();
    /*0x125954c*/ void InitPopup();
    /*0x1262340*/ void BindEvnet();
    /*0x1261f30*/ void RemoveEvent();
    /*0x1262684*/ void HandleChangeInfo();
    /*0x12624f0*/ void HandleChangeFloor();
    /*0x12626dc*/ void OnClickHelp();
    /*0x1262788*/ void <OnExit>b__14_0();
}

class HousingPressImage : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_image;
    /*0x20*/ UnityEngine.Coroutine m_updateCoroutine;
    /*0x28*/ float m_startTime;
    /*0x2c*/ float m_destTime;
    /*0x30*/ System.Action m_endCallBack;

    /*0x1262a54*/ HousingPressImage();
    /*0x1262880*/ void Init(float destTime, System.Action endCallBack);
    /*0x1262a00*/ void Hide();
    /*0x1262964*/ void Clear();
    /*0x1262994*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingPressImage <>4__this;

        /*0xe4acd0*/ <CoUpdate>d__8(int <>1__state);
        /*0xe4acfc*/ void System.IDisposable.Dispose();
        /*0xe4ad00*/ bool MoveNext();
        /*0xe4adf8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4ae00*/ void System.Collections.IEnumerator.Reset();
        /*0xe4ae40*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingSaveEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_name;
    /*0x20*/ UnityEngine.UI.Image m_image;
    /*0x28*/ UnityEngine.GameObject m_questionMark;
    /*0x30*/ UnityEngine.GameObject m_pencil;
    /*0x38*/ UnityEngine.UI.Button m_loadButton;
    /*0x40*/ UnityEngine.UI.Button m_deleteButton;
    /*0x48*/ int m_index;
    /*0x50*/ PTShare.Define.SHousingSave m_data;
    /*0x58*/ System.Action<HousingSaveEntity> m_savefunc;
    /*0x60*/ System.Action<HousingSaveEntity> m_loadfunc;

    /*0x1263560*/ HousingSaveEntity();
    /*0x1262a5c*/ int GetIndex();
    /*0x1262a64*/ int GetSlotId();
    /*0x1262a70*/ void InitEntity(int index, PTShare.Define.SHousingSave housingSave, System.Action<HousingSaveEntity> saveFunc, System.Action<HousingSaveEntity> loadFunc);
    /*0x1262b2c*/ void SetName();
    /*0x1262e44*/ string GetName();
    /*0x1262b60*/ void SetImage(string str);
    /*0x1262df0*/ void SetButton();
    /*0x1262f7c*/ void OnClickSave();
    /*0x126315c*/ void OnClickLoad();
    /*0x12631bc*/ void OnClickName();
    /*0x1263344*/ void OnClickDelete();
    /*0x1263568*/ void <OnClickSave>b__17_0(bool confirm);
    /*0x12635dc*/ void <OnClickName>b__19_0(bool confirm, string value);
    /*0x1263854*/ void <OnClickDelete>b__20_0(bool confirm);
    /*0x1263950*/ void <OnClickDelete>b__20_1();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ string value;
        /*0x18*/ HousingSaveEntity <>4__this;

        /*0xe4ae48*/ <>c__DisplayClass19_0();
        /*0xe4ae50*/ void <OnClickName>b__1();
    }
}

class HousingSavePopup : GuiBase
{
    /*0x40*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x48*/ ScrollContent_HousingSaveEntity m_scrollContent;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SHousingSave> m_saveDataList;
    /*0x58*/ System.Action m_exitCallBack;
    /*0x60*/ System.Action<int> m_loadFunc;

    /*0x126450c*/ HousingSavePopup();
    /*0x1263960*/ void OnCreate();
    /*0x1263964*/ void OnDelete();
    /*0x1263968*/ void OnEnter();
    /*0x126396c*/ void OnFinish();
    /*0x1263970*/ void OnLeave();
    /*0x1263974*/ void OnStart();
    /*0x1263978*/ void OnExit();
    /*0x1263a70*/ void InitPopup(System.Collections.Generic.List<PTShare.Define.SHousingSave> dataList, System.Action<int> loadFunc, System.Action exitCallBack);
    /*0x1263ba8*/ void BindEvent();
    /*0x1263c84*/ void RemoveEvent();
    /*0x1263d58*/ void Save(HousingSaveEntity source);
    /*0x1263fe8*/ void Load(HousingSaveEntity source);
    /*0x1264188*/ void LostConfirmMessage(string setData, string unsets);
    /*0x1264358*/ void HandleScrollContent(int index, HousingSaveEntity obj);

    class <>c__DisplayClass15_0
    {
        /*0x10*/ HousingSavePopup <>4__this;
        /*0x18*/ HousingSaveEntity source;

        /*0xe4aef4*/ <>c__DisplayClass15_0();
        /*0xe4aefc*/ void <Save>b__0(UnityEngine.Texture2D texture2D);
    }

    class <>c__DisplayClass15_1
    {
        /*0x10*/ UnityEngine.Texture2D texture2D;
        /*0x18*/ HousingSavePopup.<> CS$<>8__locals1;

        /*0xe4b0c8*/ <>c__DisplayClass15_1();
        /*0xe4b0d0*/ void <Save>b__1(bool confirm);
    }

    class <>c__DisplayClass15_2
    {
        /*0x10*/ string binary;
        /*0x18*/ HousingSavePopup.<> CS$<>8__locals2;

        /*0xe4b55c*/ <>c__DisplayClass15_2();
        /*0xe4b564*/ void <Save>b__3(ServerProtocol.ResHousingSave response);
    }

    class <>c
    {
        static /*0x0*/ HousingSavePopup.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__15_2;

        static /*0xe4ae88*/ <>c();
        /*0xe4aee8*/ <>c();
        /*0xe4aef0*/ void <Save>b__15_2(bool dummy);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ HousingSavePopup <>4__this;
        /*0x18*/ HousingSaveEntity source;
        /*0x20*/ System.Action <>9__1;

        /*0xe4b6fc*/ <>c__DisplayClass16_0();
        /*0xe4b704*/ void <Load>b__0(bool confirm);
        /*0xe4b8b8*/ void <Load>b__1();
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ string setData;
        /*0x18*/ string unsets;
        /*0x20*/ HousingSavePopup <>4__this;
        /*0x28*/ System.Action <>9__1;

        /*0xe4b8e4*/ <>c__DisplayClass17_0();
        /*0xe4b8ec*/ void <LostConfirmMessage>b__0(bool confirm);
        /*0xe4ba1c*/ void <LostConfirmMessage>b__1();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int index;

        /*0xe4ba48*/ <>c__DisplayClass18_0();
        /*0xe4ba50*/ bool <HandleScrollContent>b__0(PTShare.Define.SHousingSave f);
    }
}

class HousingSellNotifyPopup : GuiBase
{
    /*0x40*/ LimitAtlasImage m_limitImage;
    /*0x48*/ UnityEngine.GameObject[] m_levels;
    /*0x50*/ UnityEngine.GameObject m_effectNotice;
    /*0x58*/ UnityEngine.GameObject m_interactionNotice;
    /*0x60*/ AmountSlot m_sellAmount;
    /*0x68*/ LocalizeString m_sellText;
    /*0x70*/ TableData.TableData_Furniture m_tableData;
    /*0x78*/ int m_lv;

    /*0x1264a4c*/ HousingSellNotifyPopup();
    /*0x1264584*/ void OnCreate();
    /*0x1264588*/ void OnDelete();
    /*0x126458c*/ void OnEnter();
    /*0x1264590*/ void OnExit();
    /*0x126460c*/ void OnFinish();
    /*0x1264610*/ void OnLeave();
    /*0x1264614*/ void OnStart();
    /*0x1264618*/ void InitPopup(int tableId, int lv);
    /*0x1264778*/ void SetLevel();
    /*0x12647f0*/ void SetSellAmount();
    /*0x12649a4*/ void SetSellText();
}

class HousingSetPurchasePopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_desc;
    /*0x50*/ ScrollContent_HousingInfoSlot m_scrollContent;
    /*0x58*/ UnityEngine.UI.Text m_price;
    /*0x60*/ DefineCashShop.CashShopTabType m_currTab;
    /*0x68*/ DefineCashShop.CashShopPackageData m_cashShopPackageData;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x1265848*/ HousingSetPurchasePopup();
    /*0x1264a54*/ void OnCreate();
    /*0x1264a58*/ void OnDelete();
    /*0x1264a5c*/ void OnEnter();
    /*0x1264a60*/ void OnFinish();
    /*0x1264a64*/ void OnLeave();
    /*0x1264a68*/ void OnStart();
    /*0x1264a6c*/ void InitPopup(DefineCashShop.CashShopTabType tabType, DefineCashShop.CashShopPackageData cashShopPackageData, System.Collections.Generic.List<Rewards> rewardDataList);
    /*0x1264d8c*/ void UpdateVip();
    /*0x1264cb0*/ void BindEvent();
    /*0x1265170*/ void RemoveEvent();
    /*0x1264f04*/ void SetPrice();
    /*0x1265244*/ void HandleScrollContent(int index, HousingInfoSlot obj);
    /*0x1265404*/ void HandleOnClickFurniture(int tableId);
    /*0x1265494*/ void SuccessPurchase(ServerProtocol.ResCashShopPurchase resData);
    /*0x12654b4*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0x1265768*/ void OnClickPurchase();
}

class HousingShopEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ HousingInfoSlot m_infoSlot;
    /*0x20*/ UnityEngine.GameObject m_soldOut;
    /*0x28*/ UnityEngine.GameObject m_sellTimeParent;
    /*0x30*/ UnityEngine.GameObject m_limitParent;
    /*0x38*/ UnityEngine.GameObject m_badgeParent;
    /*0x40*/ AmountSlot m_price;
    /*0x48*/ LocalizeString m_sellTime;
    /*0x50*/ LocalizeString m_limitCount;
    /*0x58*/ LocalizeString m_badgeText;
    /*0x60*/ UnityEngine.GameObject m_setParent;
    /*0x68*/ LocalizeString m_setName;
    /*0x70*/ LimitAtlasImage m_setImage;
    /*0x78*/ UnityEngine.UI.Slider m_slider;
    /*0x80*/ LocalizeString m_setCount;
    /*0x88*/ int m_index;
    /*0x90*/ TableData.TableData_Furnitureshoplist m_shopData;
    /*0x98*/ UnityEngine.Coroutine m_timer;

    /*0x1266714*/ HousingShopEntity();
    /*0x12658c8*/ void InitEntity(int index);
    /*0x1265a24*/ void InitSetEntity(string key);
    /*0x1265938*/ void UpdateShopUI();
    /*0x1265d14*/ void SetAmount();
    /*0x1265f6c*/ void SetSellTime();
    /*0x12662d8*/ void SetLimitCount();
    /*0x1265c60*/ void SetSlider();
    /*0x126645c*/ System.Collections.IEnumerator CoTimerUpdate();
    /*0x12664c8*/ void OnClickPurchase();
    /*0x126671c*/ bool <SetSellTime>b__21_0(TableData.TableData_Furnitureshop f);
    /*0x126674c*/ bool <CoTimerUpdate>b__24_0(TableData.TableData_Furnitureshop f);

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string key;

        /*0xe4ba78*/ <>c__DisplayClass18_0();
        /*0xe4ba80*/ bool <InitSetEntity>b__0(TableData.TableData_Furnitureset f);
    }

    class <CoTimerUpdate>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingShopEntity <>4__this;
        /*0x28*/ System.DateTime <endTime>5__2;
        /*0x30*/ UnityEngine.WaitForSeconds <waitForSeconds>5__3;
        /*0x38*/ int <leftSec>5__4;

        /*0xe4c010*/ <CoTimerUpdate>d__24(int <>1__state);
        /*0xe4c03c*/ void System.IDisposable.Dispose();
        /*0xe4c040*/ bool MoveNext();
        /*0xe4c498*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4c4a0*/ void System.Collections.IEnumerator.Reset();
        /*0xe4c4e0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ string name;
        /*0x18*/ System.ValueTuple<string, int, long, Rewards> amountData;
        /*0xf8*/ HousingShopEntity <>4__this;
        /*0x100*/ System.Action<PTShare.Define.SHousingObj> <>9__2;
        /*0x108*/ System.Action<bool> <>9__1;

        /*0xe4baac*/ <>c__DisplayClass25_0();
        /*0xe4bab4*/ void <OnClickPurchase>b__0();
        /*0xe4becc*/ void <OnClickPurchase>b__1(bool _result);
        /*0xe4bff0*/ void <OnClickPurchase>b__2(PTShare.Define.SHousingObj response);
    }
}

class HousingShopPopup : GuiBase
{
    /*0x40*/ ScrollContent_HousingShopEntity m_scrollContent;
    /*0x48*/ TabGroup m_tabGroup;
    /*0x50*/ LocalizeString m_sellTime;
    /*0x58*/ AmountSlot m_goldAmount;
    /*0x60*/ AmountSlot m_starAmount;
    /*0x68*/ System.Collections.Generic.List<int> m_showList;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Furnitureshoplist> m_sellList;
    /*0x78*/ DefineHousing.HOUSING_SORTTAB m_subTab;
    /*0x80*/ UnityEngine.Coroutine m_timer;

    /*0xd19ab8*/ HousingShopPopup();
    /*0xd18bfc*/ void OnCreate();
    /*0xd18c00*/ void OnDelete();
    /*0xd18c04*/ void OnEnter();
    /*0xd18c08*/ void OnFinish();
    /*0xd18c0c*/ void OnLeave();
    /*0xd18c10*/ void OnStart();
    /*0xd18c14*/ void OnExit();
    /*0xd18f5c*/ void InitPopup();
    /*0xd18f64*/ void InitPopup(DefineHousing.HOUSING_SORTTAB subTab);
    /*0xd1934c*/ void UpdatePopup(DefineHousing.HOUSING_SORTTAB subTab);
    /*0xd19404*/ void SetData();
    /*0xd19678*/ void SetTime();
    /*0xd1960c*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xd19058*/ void BindEvent();
    /*0xd18cb4*/ void RemoveEvent();
    /*0xd19308*/ void HandleChangeInfo();
    /*0xd199ac*/ void HandleChangeTab(int index);
    /*0xd19a34*/ void HandleScrollContent(int index, HousingShopEntity obj);

    class <>c__DisplayClass19_0
    {
        /*0x10*/ string subTabType;
        /*0x18*/ HousingShopPopup <>4__this;

        /*0xe4c4e8*/ <>c__DisplayClass19_0();
        /*0xe4c4f0*/ void <SetData>b__0(TableData.TableData_Furnitureshoplist d);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ System.Collections.Generic.List<int> sellGroupList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<TableData.TableData_Furnitureshop> <>9__0;

        /*0xe4c5ac*/ <>c__DisplayClass20_0();
        /*0xe4c5b4*/ bool <SetTime>b__0(TableData.TableData_Furnitureshop f);
    }

    class <CoUpdateTimer>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingShopPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xe4c63c*/ <CoUpdateTimer>d__21(int <>1__state);
        /*0xe4c668*/ void System.IDisposable.Dispose();
        /*0xe4c66c*/ bool MoveNext();
        /*0xe4c72c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4c734*/ void System.Collections.IEnumerator.Reset();
        /*0xe4c774*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingShopSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemInfoSlot;
    /*0x20*/ UnityEngine.GameObject m_limitParent;
    /*0x28*/ LocalizeString m_limit;
    /*0x30*/ LocalizeString m_name;
    /*0x38*/ AmountSlot m_amountSlot;
    /*0x40*/ UnityEngine.GameObject m_sellPeriodParent;
    /*0x48*/ LocalizeString m_sellPeriod;
    /*0x50*/ HousingShopSlot.SOLDOUT_TYPE m_soldOutType;
    /*0x58*/ UnityEngine.GameObject m_soldOut;
    /*0x60*/ UnityEngine.GameObject m_interactionNotice;
    /*0x68*/ UnityEngine.GameObject m_effectNotice;
    /*0x70*/ UnityEngine.GameObject m_badgeParent;
    /*0x78*/ LocalizeString m_badgeText;
    /*0x80*/ System.Action<int> m_onClick;
    /*0x88*/ int m_index;
    /*0x90*/ TableData.TableData_Furnitureshoplist m_shopData;
    /*0x98*/ TableData.TableData_Furniture m_furnitureData;
    /*0xa0*/ UnityEngine.Coroutine m_timer;

    /*0xd1a890*/ HousingShopSlot();
    /*0xd19b70*/ void InitSlot(int index, System.Action<int> onClick);
    /*0xd19c48*/ void SetName();
    /*0xd19d90*/ void SetAmountSlot();
    /*0xd19ee8*/ void SetLimit();
    /*0xd1a218*/ void SetSellPeriod();
    /*0xd1a4a4*/ void SetNotice();
    /*0xd1a0c4*/ void SetSoldOut();
    /*0xd1a5d0*/ void SetBadge();
    /*0xd1a7c4*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xd1a830*/ void OnClick();
    /*0xd1a8a0*/ bool <SetSellPeriod>b__23_0(TableData.TableData_Furnitureshop f);

    enum SOLDOUT_TYPE
    {
        GREY = 0,
        GAMEOBJECT = 1,
    }

    class <CoUpdateTimer>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingShopSlot <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitForSeconds>5__2;

        /*0xe4c77c*/ <CoUpdateTimer>d__27(int <>1__state);
        /*0xe4c7a8*/ void System.IDisposable.Dispose();
        /*0xe4c7ac*/ bool MoveNext();
        /*0xe4c86c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4c874*/ void System.Collections.IEnumerator.Reset();
        /*0xe4c8b4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingStorageSlot : UnityEngine.MonoBehaviour
{
    /*0x18*/ ItemInfoSlot m_itemInfoSlot;
    /*0x20*/ LocalizeString m_amount;
    /*0x28*/ System.Action<HousingObjSet> m_onClick;
    /*0x30*/ HousingObjSet m_objSet;

    /*0xd1aa98*/ HousingStorageSlot();
    /*0xd1a8d0*/ int GetTableId();
    /*0xd1a8e8*/ void InitSlot(HousingObjSet housingObjSet, System.Action<HousingObjSet> onClick);
    /*0xd1aa38*/ void OnClick();
}

class HousingSubMenu : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_parent;
    /*0x20*/ HousingEditWindow m_housingEditWindow;

    /*0xd1b544*/ HousingSubMenu();
    /*0xd1aaa0*/ void InitMenu(HousingEditWindow housingEditWindow);
    /*0xd1aadc*/ void HideMenu();
    /*0xd1aad8*/ void BindEvent();
    /*0xd1ab0c*/ void RemoveEvent();
    /*0xd1ab10*/ void OnClickShop();
    /*0xd1ab9c*/ void OnClickInven();
    /*0xd1ac2c*/ void OnClickSave();
    /*0xd1ad20*/ void OnClickSweep();
    /*0xd1b08c*/ void OnClickHeroSelect();
    /*0xd1b118*/ void OnClickEffect();
    /*0xd1b1a4*/ void OnClickFurnitureGacha();
    /*0xd1b338*/ void OnClickRandom();
    /*0xd1b464*/ void OnClickGuestBook();
    /*0xd1b54c*/ void <OnClickSave>b__8_0(ServerProtocol.ResHousingSaveList response);
    /*0xd1b6bc*/ void <OnClickSave>b__8_1();
    /*0xd1b754*/ void <OnClickRandom>b__13_0();
    /*0xd1b8a8*/ void <OnClickGuestBook>b__14_0();

    class <>c
    {
        static /*0x0*/ HousingSubMenu.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;
        static /*0x10*/ System.Action <>9__13_1;

        static /*0xe4c8bc*/ <>c();
        /*0xe4c91c*/ <>c();
        /*0xe4c924*/ void <OnClickFurnitureGacha>b__12_0();
        /*0xe4c9a4*/ void <OnClickRandom>b__13_1();
    }
}

class HousingSweepPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_groundToggle;
    /*0x48*/ UnityEngine.UI.Toggle m_wallToggle;
    /*0x50*/ UnityEngine.UI.Toggle m_effectToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_wallTileToggle;
    /*0x60*/ LocalizeString m_desc;
    /*0x68*/ LocalizeString m_furnitureCount;

    /*0xd1bc50*/ HousingSweepPopup();
    /*0xd1b934*/ void OnCreate();
    /*0xd1b938*/ void OnDelete();
    /*0xd1b93c*/ void OnEnter();
    /*0xd1b940*/ void OnFinish();
    /*0xd1b944*/ void OnLeave();
    /*0xd1b948*/ void OnStart();
    /*0xd1b94c*/ void OnExit();
    /*0xd1ada8*/ void InitPopup();
    /*0xd1b9c8*/ void BindEvent();
    /*0xd1b9cc*/ void RemoveEvent();
    /*0xd1b9d0*/ void HandleOnChangeToggle();
    /*0xd1b9d4*/ void OnClickSweep();
}

class HousingTalkNotify : HousingNotifyBase
{
    /*0x38*/ DialogTalk m_dialogTalk;
    /*0x40*/ int m_characterId;

    /*0xd1c008*/ HousingTalkNotify();
    /*0xd1be38*/ void InitNotify(UnityEngine.GameObject follow, int characterId);
    /*0xd1be8c*/ void PlayDialog();
    /*0xd1bf80*/ void EndNotify();
}

class HousingTile : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_tileImage;
    /*0x20*/ bool m_isStair;

    /*0xd1c3c0*/ HousingTile();
    /*0xd1c010*/ void InitTile(TableData.TableData_Housingfloorpattern patternData, UnityEngine.Vector2Int point);
    /*0xd1c2a0*/ void AddBlock(int layer, UnityEngine.Vector2Int point);

    enum TILE_PATTERN
    {
        ONE = 0,
        CHECK = 1,
    }
}

class HousingTileSpace : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_notifyImage;
    /*0x20*/ UnityEngine.Vector2Int m_point;
    /*0x28*/ bool m_isWall;

    /*0xd1c910*/ HousingTileSpace();
    /*0xd1c3c8*/ bool IsWall();
    /*0xd1c3d0*/ UnityEngine.Vector2Int GetPoint();
    /*0xd1c3d8*/ void SetReverse(bool reverse);
    /*0xd1c4ac*/ void InitSpace(UnityEngine.Vector2Int point, UnityEngine.Vector3 size, UnityEngine.Vector3 interval, bool isWall, bool enableNotify, bool isReverse);
    /*0xd1c838*/ void SetNotifyImageColor(UnityEngine.Color col);
    /*0xd1c3e0*/ void SetNotifyImageReverse(bool reverse);
    /*0xd1c654*/ void EnableNotifyImage(bool isGrid);
    /*0xd1c798*/ void DisableNotifyImage();
}

class HousingTimeNotify : HousingNotifyBase
{
    /*0x38*/ LocalizeString m_leftTime;
    /*0x40*/ bool m_updateTimer;
    /*0x48*/ PTShare.Define.SHousingObj m_housingObj;
    /*0x50*/ TableData.TableData_Furniture m_tableData;

    /*0xd1d060*/ HousingTimeNotify();
    /*0xd1c940*/ void InitNotify(UnityEngine.GameObject follow, System.DateTime endTime);
    /*0xd1ca5c*/ void InitNotify(UnityEngine.GameObject follow, PTShare.Define.SHousingObj obj);
    /*0xd1cab4*/ void UpdateNotify();
    /*0xd1cf64*/ void EndNotify();
    /*0xd1cef8*/ System.Collections.IEnumerator CoUpdateWait();

    class <CoUpdateWait>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingTimeNotify <>4__this;

        /*0xe4ca9c*/ <CoUpdateWait>d__8(int <>1__state);
        /*0xe4cac8*/ void System.IDisposable.Dispose();
        /*0xe4cacc*/ bool MoveNext();
        /*0xe4cb78*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4cb80*/ void System.Collections.IEnumerator.Reset();
        /*0xe4cbc0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingUpgradePopup : GuiBase
{
    /*0x40*/ HousingUpgradeWindow m_upgradeWindow;
    /*0x48*/ HousingUpgradeWindow m_progressWindow;
    /*0x50*/ PTShare.Define.SHousingObj m_target;
    /*0x58*/ TableData.TableData_Furniture m_tableData;
    /*0x60*/ HousingObjectBase m_upgradeTargetObj;

    /*0xd1d86c*/ HousingUpgradePopup();
    /*0xd1d068*/ void OnCreate();
    /*0xd1d06c*/ void OnDelete();
    /*0xd1d070*/ void OnEnter();
    /*0xd1d074*/ void OnExit();
    /*0xd1d0f0*/ void OnFinish();
    /*0xd1d0f4*/ void OnLeave();
    /*0xd1d0f8*/ void OnStart();
    /*0xd1d0fc*/ void InitPopup(PTShare.Define.SHousingObj obj, HousingObjectBase housingObject);
    /*0xd1d558*/ void OnClickFastUpgrade();
    /*0xd1d874*/ void <OnClickFastUpgrade>b__13_0();

    class <>c
    {
        static /*0x0*/ HousingUpgradePopup.<> <>9;
        static /*0x8*/ System.Action<HousingObjectBase> <>9__13_1;

        static /*0xe4cbc8*/ <>c();
        /*0xe4cc28*/ <>c();
        /*0xe4cc30*/ void <OnClickFastUpgrade>b__13_1(HousingObjectBase selectObject);
    }
}

class HousingUpgradeWindow : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_title;
    /*0x20*/ LimitAtlasImage m_limitImage;
    /*0x28*/ AtlasImage[] m_levels;
    /*0x30*/ AtlasImage[] m_currlevels;
    /*0x38*/ LocalizeString m_currEffectText;
    /*0x40*/ AtlasImage[] m_nextlevels;
    /*0x48*/ LocalizeString m_nextEffectText;
    /*0x50*/ LocalizeString m_time;
    /*0x58*/ UnityEngine.GameObject m_effectNotice;
    /*0x60*/ UnityEngine.GameObject m_interactionNotice;
    /*0x68*/ LocalizeString m_needFastCost;
    /*0x70*/ PTShare.Define.SHousingObj m_target;
    /*0x78*/ TableData.TableData_Furniture m_tableData;

    /*0xd1dffc*/ HousingUpgradeWindow();
    /*0xd1db50*/ void OnDisable();
    /*0xd1d254*/ void InitWindow(PTShare.Define.SHousingObj obj);
    /*0xd1db58*/ void SetLevel(AtlasImage[] target, int lv);
    /*0xd1dd6c*/ void SetEffectText();
    /*0xd1dcd8*/ void InitProgress();
    /*0xd1df90*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingUpgradeWindow <>4__this;
        /*0x28*/ System.DateTime <endTime>5__2;

        /*0xe4cccc*/ <CoUpdate>d__18(int <>1__state);
        /*0xe4ccf8*/ void System.IDisposable.Dispose();
        /*0xe4ccfc*/ bool MoveNext();
        /*0xe4d0ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4d0f4*/ void System.Collections.IEnumerator.Reset();
        /*0xe4d134*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HousingVisitEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ PlayerProfileSlot m_profileSlot;
    /*0x20*/ LocalizeString m_name;
    /*0x28*/ LocalizeString m_visitTime;
    /*0x30*/ UnityEngine.GameObject m_heartParent;
    /*0x38*/ UnityEngine.UI.Button m_heart;
    /*0x40*/ PTShare.Define.SVisitor m_data;

    /*0xd1e444*/ HousingVisitEntity();
    /*0xd1e004*/ void InitEntity(PTShare.Define.SVisitor data);
    /*0xd1e1bc*/ void OnClickRecev();
    /*0xd1e2e0*/ void OnClickVisit();
    /*0xd1e44c*/ void <InitEntity>b__6_0();
    /*0xd1e46c*/ void <OnClickRecev>b__7_0();

    class <>c
    {
        static /*0x0*/ HousingVisitEntity.<> <>9;
        static /*0x8*/ System.Action <>9__8_0;

        static /*0xe4d13c*/ <>c();
        /*0xe4d19c*/ <>c();
        /*0xe4d1a4*/ void <OnClickVisit>b__8_0();
    }
}

class HousingWastePopup : GuiBase
{
    /*0x40*/ AmountSlot[] m_amountSlots;
    /*0x48*/ AmountSlot m_fastAmount;
    /*0x50*/ LocalizeString m_heroCount;
    /*0x58*/ LocalizeString m_needTime;
    /*0x60*/ LocalizeString m_leftTime;
    /*0x68*/ UnityEngine.GameObject m_cleanParent;
    /*0x70*/ UnityEngine.GameObject m_fastParent;
    /*0x78*/ TableData.TableData_Housingfloor m_tableData;
    /*0x80*/ PTShare.Define.SHousingWaste m_waste;
    /*0x88*/ HousingObjectBase m_housingObject;
    /*0x90*/ System.DateTime m_endTime;
    /*0x98*/ UnityEngine.Coroutine m_update;

    /*0xd1f604*/ HousingWastePopup();
    /*0xd1e4f8*/ void OnCreate();
    /*0xd1e4fc*/ void OnDelete();
    /*0xd1e500*/ void OnEnter();
    /*0xd1e504*/ void OnFinish();
    /*0xd1e508*/ void OnLeave();
    /*0xd1e50c*/ void OnStart();
    /*0xd1e510*/ void OnExit();
    /*0xd1e5d4*/ void InitPopup(int floor, int id, HousingObjectBase housingObject);
    /*0xd1e760*/ void UpdateCleanUI();
    /*0xd1ec60*/ void UpdateFastUI();
    /*0xd1e5a4*/ void ClearCoroutine();
    /*0xd1edd4*/ void OnClickClean();
    /*0xd1efd0*/ void OnClickFastClean();
    /*0xd1ed68*/ System.Collections.IEnumerator CoUpdate();
    /*0xd1f15c*/ int UpdateNotify();
    /*0xd1f60c*/ void <OnClickClean>b__23_0();
    /*0xd1f6bc*/ void <OnClickFastClean>b__24_0();

    class <>c
    {
        static /*0x0*/ HousingWastePopup.<> <>9;
        static /*0x8*/ System.Action<HousingObjectBase> <>9__24_1;

        static /*0xe4d30c*/ <>c();
        /*0xe4d36c*/ <>c();
        /*0xe4d374*/ void <OnClickFastClean>b__24_1(HousingObjectBase selectObject);
    }

    class <CoUpdate>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HousingWastePopup <>4__this;

        /*0xe4d394*/ <CoUpdate>d__25(int <>1__state);
        /*0xe4d3c0*/ void System.IDisposable.Dispose();
        /*0xe4d3c4*/ bool MoveNext();
        /*0xe4d43c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4d444*/ void System.Collections.IEnumerator.Reset();
        /*0xe4d484*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LimitAtlasImage : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x20*/ AtlasImage m_image;

    /*0xfa9d68*/ LimitAtlasImage();
    /*0xfa9b94*/ void SetImage(AtlasType atlasType, string key);
}

class ScrollContent_HousingEffectDetailEntity : ScrollContent<HousingEffectDetailEntity>
{
    /*0xe1a6b4*/ ScrollContent_HousingEffectDetailEntity();
}

class ScrollContent_HousingEffectEntity : ScrollContent<HousingEffectEntity>
{
    /*0xe1a72c*/ ScrollContent_HousingEffectEntity();
}

class ScrollContent_HousingFloorButton : ScrollContent<HousingFloorButton>
{
    /*0xe1a7a4*/ ScrollContent_HousingFloorButton();
}

class ScrollContent_HousingInfoSlot : ScrollContent<HousingInfoSlot>
{
    /*0xe1a81c*/ ScrollContent_HousingInfoSlot();
}

class ScrollContent_HousingSaveEntity : ScrollContent<HousingSaveEntity>
{
    /*0xe1a894*/ ScrollContent_HousingSaveEntity();
}

class ScrollContent_HousingShopEntity : ScrollContent<HousingShopEntity>
{
    /*0xe1a90c*/ ScrollContent_HousingShopEntity();
}

class ScrollContent_HousingShopSlot : ScrollContent<HousingShopSlot>
{
    /*0xe1a984*/ ScrollContent_HousingShopSlot();
}

class ScrollContent_HousingStorageSlot : ScrollContent<HousingStorageSlot>
{
    /*0xe1a9fc*/ ScrollContent_HousingStorageSlot();
}

class ScrollContent_HousingVisitEntity : ScrollContent<HousingVisitEntity>
{
    /*0xe1aa74*/ ScrollContent_HousingVisitEntity();
}

class SharePopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_parent;
    /*0x48*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x50*/ UnityEngine.UI.Image m_shareImage;
    /*0x58*/ UnityEngine.Texture2D m_shareTexture;

    /*0xe2901c*/ SharePopup();
    /*0xe28d88*/ void OnCreate();
    /*0xe28d8c*/ void OnDelete();
    /*0xe28d90*/ void OnEnter();
    /*0xe28d94*/ void OnExit();
    /*0xe28d9c*/ void OnFinish();
    /*0xe28da0*/ void OnLeave();
    /*0xe28da4*/ void OnStart();
    /*0xe28da8*/ void InitPopup(UnityEngine.Texture2D shareTexture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot);
    /*0xe28f70*/ void OnClickCancel();
    /*0xe28f7c*/ void OnClickShare();
}

class ItemManager : Singleton.Data.SingletonData<ItemManager>
{
    static /*0x0*/ System.Action OnChangeItemValue;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SItem> m_liItemList;
    /*0x28*/ int nArrIndex;
    /*0x2c*/ int nStartCount;
    /*0x30*/ int nEndCount;
    /*0x38*/ PTShare.Define.SItem sChangeItem;

    static /*0x1580d5c*/ ItemManager();
    static /*0x157f25c*/ void add_OnChangeItemValue(System.Action value);
    static /*0x157f168*/ void remove_OnChangeItemValue(System.Action value);
    /*0x1580ca4*/ ItemManager();
    /*0x157fef4*/ string get_UserToken();
    /*0x157ff74*/ bool InitInstance();
    /*0x157ff7c*/ void ReleaseInstance();
    /*0x157b7b8*/ void Send_UseItem(int _tableid, int _count, string _choice, System.Action<PTShare.Define.SProperty> _callback);
    /*0x158000c*/ void SetItemList(System.Collections.Generic.List<PTShare.Define.SItem> _liItem);
    /*0x1580144*/ System.Collections.Generic.List<PTShare.Define.SItem> GetItemList();
    /*0x1579f68*/ PTShare.Define.SItem GetItem(int _itemid);
    /*0x157670c*/ int GetItemAmount(int _itemid);
    /*0x1580244*/ bool GetItemReddot();
    /*0x157c540*/ string GetItemDesc(TableData.TableData_Item tableData);
    /*0x1580468*/ bool IsVaildItemAmount(int _itemid, long _amount);
    /*0x1580510*/ void IncreaseItem(PTShare.Define.SItem _item, bool _invCallback);
    /*0x15806c4*/ void IncreaseItem(System.Collections.Generic.List<PTShare.Define.SItem> _liItem);
    /*0x15807c8*/ void DecreaseItem(PTShare.Define.SItem _item, bool _invCallback);
    /*0x1580948*/ void DecreaseItem(System.Collections.Generic.List<PTShare.Define.SItem> _liItem);
    /*0x1580a4c*/ void ImportItem(PTShare.Define.SItem _item);
    /*0x1580b80*/ void ImportItem(System.Collections.Generic.List<PTShare.Define.SItem> _item);
    /*0x158014c*/ int GetItemIndex(int _tableid);
    /*0x1580660*/ void CreateItem(PTShare.Define.SItem _item);
    /*0x1580088*/ void SortItem();
    /*0x1580c28*/ ItemType GetItemType(string _type);
    /*0x1580d60*/ int <SortItem>b__28_0(PTShare.Define.SItem a, PTShare.Define.SItem b);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ ItemManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xe50928*/ <>c__DisplayClass12_0();
        /*0xe50930*/ void <Send_UseItem>b__0(ServerProtocol.ResItemUse response);
    }

    class <>c
    {
        static /*0x0*/ ItemManager.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Item, bool> <>9__17_0;

        static /*0xe50824*/ <>c();
        /*0xe50884*/ <>c();
        /*0xe5088c*/ bool <GetItemReddot>b__17_0(TableData.TableData_Item _item);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ int _tableid;

        /*0xe50b20*/ <>c__DisplayClass26_0();
        /*0xe50b28*/ bool <GetItemIndex>b__0(PTShare.Define.SItem x);
    }
}

class LoadPage : UnityEngine.MonoBehaviour
{
    static string IMAGE_LIST_PREFAB = "LoadPageImageList";
    /*0x18*/ UnityEngine.CanvasGroup canvasGroup;
    /*0x20*/ LocalizeString tooltipText;
    /*0x28*/ System.Action eventLoadPageBegin;
    /*0x30*/ System.Action eventLoadPageEnd;

    /*0xfaa0f8*/ LoadPage();
    /*0xfa9d98*/ void SetLoadPageEventFunc(System.Action _begin_func, System.Action _end_func);
    /*0xfa9da0*/ void DestoryLoadPage();
    /*0xfa9e1c*/ void SendLoadPageBegin();
    /*0xfa9e30*/ void SendLoadPageEnd();
    /*0xfa9e44*/ UnityEngine.Sprite LoadRandomImage();
    /*0xfa9f24*/ string LoadRandomLocalToltip(System.Collections.Generic.List<string> _Toltip_local_list);
    /*0xfa9fc4*/ string LoadRandomTooltip();
    /*0xfaa010*/ void SetActive_LoadPage(bool _active);
    /*0xfaa044*/ void SetAlpha(float _value);
    bool OpenLoadPage();
    void CloseLoadPage();
    /*0xfaa0f4*/ void SetCopyright();
}

class LoadPageImageList : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<string> imageNameList;

    /*0xfaa108*/ LoadPageImageList();
    /*0xfaa100*/ UnityEngine.Sprite LoadSprite(int _index);
    /*0xfa9ec4*/ UnityEngine.Sprite LoadRandomSprite();
}

class LoadPage_Effect : LoadPage
{
    /*0x38*/ float transTime;
    /*0x40*/ UnityEngine.UI.Image loadImageTarget;

    /*0xfaa4b4*/ LoadPage_Effect();
    /*0xfaa110*/ bool OpenLoadPage();
    /*0xfaa2f8*/ void CloseLoadPage();
    /*0xfaa28c*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfaa3a0*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfaa40c*/ void ClearLoadingImage();

    class <OnProcess_Open>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Effect <>4__this;
        /*0x28*/ float <factor>5__2;

        /*0xe5265c*/ <OnProcess_Open>d__4(int <>1__state);
        /*0xe52688*/ void System.IDisposable.Dispose();
        /*0xe5268c*/ bool MoveNext();
        /*0xe527cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe527d4*/ void System.Collections.IEnumerator.Reset();
        /*0xe52814*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Effect <>4__this;
        /*0x28*/ float <factor>5__2;

        /*0xe52480*/ <OnProcess_Close>d__5(int <>1__state);
        /*0xe524ac*/ void System.IDisposable.Dispose();
        /*0xe524b0*/ bool MoveNext();
        /*0xe5260c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52614*/ void System.Collections.IEnumerator.Reset();
        /*0xe52654*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Fade : LoadPage
{
    /*0x38*/ float transTime;

    /*0xfaa614*/ LoadPage_Fade();
    /*0xfaa4c4*/ bool OpenLoadPage();
    /*0xfaa57c*/ void CloseLoadPage();
    /*0xfaa510*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfaa5a8*/ System.Collections.IEnumerator OnProcess_Close();

    class <OnProcess_Open>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Fade <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe52960*/ <OnProcess_Open>d__3(int <>1__state);
        /*0xe5298c*/ void System.IDisposable.Dispose();
        /*0xe52990*/ bool MoveNext();
        /*0xe52a44*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52a4c*/ void System.Collections.IEnumerator.Reset();
        /*0xe52a8c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Fade <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe5281c*/ <OnProcess_Close>d__4(int <>1__state);
        /*0xe52848*/ void System.IDisposable.Dispose();
        /*0xe5284c*/ bool MoveNext();
        /*0xe52910*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52918*/ void System.Collections.IEnumerator.Reset();
        /*0xe52958*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Intro : LoadPage
{
    /*0x38*/ float transTime;
    /*0x40*/ UnityEngine.UI.Text descriptionText;
    /*0x48*/ UnityEngine.UI.Text progressText;
    /*0x50*/ UnityEngine.GameObject progress;
    /*0x58*/ UnityEngine.UI.Image progressBar;
    /*0x60*/ UnityEngine.RectTransform progressLine;
    /*0x68*/ UnityEngine.GameObject downloadProgress;
    /*0x70*/ UnityEngine.UI.Image downloadProgressBar;
    /*0x78*/ UnityEngine.RectTransform downloadProgressLine;
    /*0x80*/ System.Collections.Generic.List<string> tooltipLocaleKeyList;
    /*0x88*/ UnityEngine.UI.Text txtBuildVersion;
    /*0x90*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfab3ac*/ LoadPage_Intro();
    /*0xfaa628*/ void OnEnable();
    /*0xfaa8d8*/ void IntroImageSetting();
    /*0xfaab78*/ void OnDisable();
    /*0xfaaee8*/ bool OpenLoadPage();
    /*0xfab1a0*/ void CloseLoadPage();
    /*0xfab134*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfab1cc*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfab088*/ void SetDescription(string desc);
    /*0xfaaa24*/ void SetProgress(float value);
    /*0xfab238*/ void SetDownloadProgress(float value);
    /*0xfaa8dc*/ void SetShowDownloadProgress(bool isShow);
    /*0xfaa980*/ void SetActiveDownloadBar(bool isShow);
    /*0xfab2fc*/ void SetCopyright();

    class <OnProcess_Open>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Intro <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe52bd8*/ <OnProcess_Open>d__17(int <>1__state);
        /*0xe52c04*/ void System.IDisposable.Dispose();
        /*0xe52c08*/ bool MoveNext();
        /*0xe52cbc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52cc4*/ void System.Collections.IEnumerator.Reset();
        /*0xe52d04*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Intro <>4__this;
        /*0x28*/ float <fAlpha>5__2;

        /*0xe52a94*/ <OnProcess_Close>d__18(int <>1__state);
        /*0xe52ac0*/ void System.IDisposable.Dispose();
        /*0xe52ac4*/ bool MoveNext();
        /*0xe52b88*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52b90*/ void System.Collections.IEnumerator.Reset();
        /*0xe52bd0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Lobby : LoadPage
{
    /*0x38*/ UnityEngine.UI.Image imageTarget;
    /*0x40*/ UnityEngine.UI.Text progressText;
    /*0x48*/ UnityEngine.UI.Image progressBar;
    /*0x50*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfaba40*/ LoadPage_Lobby();
    /*0xfab3cc*/ void OnEnable();
    /*0xfab5ec*/ void OnDisable();
    /*0xfab640*/ bool OpenLoadPage();
    /*0xfab8bc*/ void CloseLoadPage();
    /*0xfab850*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfab8e8*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfab954*/ void ClearLoadingImage();
    /*0xfab498*/ void SetProgress(float value);

    class <OnProcess_Open>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Lobby <>4__this;

        /*0xe52e08*/ <OnProcess_Open>d__8(int <>1__state);
        /*0xe52e34*/ void System.IDisposable.Dispose();
        /*0xe52e38*/ bool MoveNext();
        /*0xe52e90*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52e98*/ void System.Collections.IEnumerator.Reset();
        /*0xe52ed8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Lobby <>4__this;

        /*0xe52d0c*/ <OnProcess_Close>d__9(int <>1__state);
        /*0xe52d38*/ void System.IDisposable.Dispose();
        /*0xe52d3c*/ bool MoveNext();
        /*0xe52db8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52dc0*/ void System.Collections.IEnumerator.Reset();
        /*0xe52e00*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Normal : LoadPage
{
    /*0x38*/ UnityEngine.UI.Image imageTarget;
    /*0x40*/ UnityEngine.UI.Text progressText;
    /*0x48*/ UnityEngine.UI.Slider progressBar;
    /*0x50*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfac280*/ LoadPage_Normal();
    /*0xfaba58*/ void OnEnable();
    /*0xfabc3c*/ void OnDisable();
    /*0xfabc40*/ bool OpenLoadPage();
    /*0xfabc5c*/ void CloseLoadPage();
    /*0xfabcf4*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfabc88*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfabd60*/ void ClearEvent();
    /*0xfabf44*/ void ClearLoadingImage();
    /*0xfac030*/ void SetProgress(float value);
    /*0xfac18c*/ void SetDesc(string _str);

    class <OnProcess_Open>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Normal <>4__this;

        /*0xe52fe8*/ <OnProcess_Open>d__8(int <>1__state);
        /*0xe53014*/ void System.IDisposable.Dispose();
        /*0xe53018*/ bool MoveNext();
        /*0xe53070*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53078*/ void System.Collections.IEnumerator.Reset();
        /*0xe530b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Normal <>4__this;

        /*0xe52ee0*/ <OnProcess_Close>d__9(int <>1__state);
        /*0xe52f0c*/ void System.IDisposable.Dispose();
        /*0xe52f10*/ bool MoveNext();
        /*0xe52f98*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52fa0*/ void System.Collections.IEnumerator.Reset();
        /*0xe52fe0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadPage_Scene : LoadPage
{
    /*0x38*/ UnityEngine.UI.Image imageTarget;
    /*0x40*/ UnityEngine.UI.Text progressText;
    /*0x48*/ UnityEngine.UI.Slider progressBar;
    /*0x50*/ UnityEngine.Vector3 _progressBarScale;

    /*0xfacac0*/ LoadPage_Scene();
    /*0xfac298*/ void OnEnable();
    /*0xfac47c*/ void OnDisable();
    /*0xfac480*/ bool OpenLoadPage();
    /*0xfac49c*/ void CloseLoadPage();
    /*0xfac534*/ System.Collections.IEnumerator OnProcess_Open();
    /*0xfac4c8*/ System.Collections.IEnumerator OnProcess_Close();
    /*0xfac5a0*/ void ClearEvent();
    /*0xfac784*/ void ClearLoadingImage();
    /*0xfac870*/ void SetProgress(float value);
    /*0xfac9cc*/ void SetDesc(string _str);

    class <OnProcess_Open>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Scene <>4__this;

        /*0xe531c8*/ <OnProcess_Open>d__8(int <>1__state);
        /*0xe531f4*/ void System.IDisposable.Dispose();
        /*0xe531f8*/ bool MoveNext();
        /*0xe53250*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53258*/ void System.Collections.IEnumerator.Reset();
        /*0xe53298*/ object System.Collections.IEnumerator.get_Current();
    }

    class <OnProcess_Close>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadPage_Scene <>4__this;

        /*0xe530c0*/ <OnProcess_Close>d__9(int <>1__state);
        /*0xe530ec*/ void System.IDisposable.Dispose();
        /*0xe530f0*/ bool MoveNext();
        /*0xe53178*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53180*/ void System.Collections.IEnumerator.Reset();
        /*0xe531c0*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum LoadPageType
{
    None = 0,
    LoadPage_Intro = 1,
    LoadPage_Normal = 2,
    LoadPage_Fade = 3,
    LoadPage_DirectingProcessNotFinishEvent = 4,
    LoadPage_Scene = 5,
}

class LoadTaskManager : Singleton.Component.SingletonComponent<LoadTaskManager>
{
    static /*0x0*/ System.Action OnEventBeginLoad;
    static /*0x8*/ System.Action OnEventFinishLoad;
    /*0x28*/ UnityEngine.Transform m_Parent;
    /*0x30*/ UnityEngine.Camera m_LoadTaskCamera;
    /*0x38*/ LoadPageType _curLoadPageType;
    /*0x40*/ UnityEngine.GameObject _loadPagePrefab;
    /*0x48*/ LoadPage _loadPage;
    /*0x50*/ System.Action<string> notifyDescription;
    /*0x58*/ System.Action<float> notifyProgress;
    /*0x60*/ System.Action<float> notifyDownloadProgress;
    /*0x68*/ System.Action<bool> notifyDownloadBarActive;
    /*0x70*/ System.Collections.Generic.List<LoadTask> _loadTaskListArray;
    /*0x78*/ bool <IsLoading>k__BackingField;
    /*0x79*/ bool <IsPushing>k__BackingField;
    /*0x80*/ System.Collections.IEnumerator _process;
    /*0x88*/ LoadTask _currentTask;

    /*0xfadfc8*/ LoadTaskManager();
    /*0xfacd88*/ bool get_IsLoading();
    /*0xfacd90*/ void set_IsLoading(bool value);
    /*0xfacd9c*/ bool get_IsPushing();
    /*0xfacda4*/ void set_IsPushing(bool value);
    /*0xfacdb0*/ void AwakeInstance();
    /*0xfacec0*/ bool InitInstance();
    /*0xfacec8*/ void ReleaseInstance();
    /*0xfacf2c*/ bool BeginPush();
    /*0xfacf4c*/ void PushTask(System.Collections.Generic.List<LoadTask> taskList);
    /*0xfacff8*/ void PushTask(LoadTask task);
    /*0xfad0cc*/ void EndPush(LoadPageType load_page_type);
    /*0xfacc54*/ void SetDescription(string _desc);
    /*0xfacccc*/ void SetDescription_Locale(string _key, string[] _arg);
    /*0xfad3d4*/ void ClearTaskList();
    /*0xfad1f8*/ void LoadStart(LoadPageType load_page_type);
    /*0xfadaa4*/ void OnLoadStart();
    /*0xfadad0*/ System.Collections.IEnumerator OnLoadProcess();
    /*0xfadb3c*/ void LoadFinish();
    /*0xfadbf0*/ void OnLoadFinish();
    /*0xfad504*/ bool CreateLoadPage(LoadPageType _load_page_type);
    /*0xfadca8*/ void RemoveLoadPage();
    /*0xfad364*/ void Send_Description(string _desc);
    /*0xfadd58*/ void Send_Progress(float value);
    /*0xfaddc8*/ void SetActiveDownloadBar(bool _active);
    /*0xfade38*/ void Send_DownloadProgress(float value);
    /*0xfadea8*/ void SetCopyright();
    /*0xfad170*/ int GetValidTaskTypeCount();
    /*0xfadf3c*/ int GetTotalTaskCount();
    /*0xfadd48*/ bool IsDontViewLoadPageType(LoadPageType _eType);
    /*0xfadfc0*/ UnityEngine.Camera GetCamera();

    class <OnLoadProcess>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTaskManager <>4__this;
        /*0x28*/ int <curTaskIndex>5__2;
        /*0x2c*/ float <curProgress>5__3;
        /*0x30*/ int <listCount>5__4;
        /*0x34*/ int <idxList>5__5;
        /*0x38*/ System.Collections.Generic.List<LoadTask> <taskList>5__6;
        /*0x40*/ int <taskCount>5__7;
        /*0x44*/ int <idxTask>5__8;
        /*0x48*/ LoadTask <task>5__9;

        /*0xe53390*/ <OnLoadProcess>d__34(int <>1__state);
        /*0xe533bc*/ void System.IDisposable.Dispose();
        /*0xe533c0*/ bool MoveNext();
        /*0xe53658*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53660*/ void System.Collections.IEnumerator.Reset();
        /*0xe536a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_GameInitialize : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<BundleManifest> liDownload;
    /*0x28*/ System.Collections.Generic.Dictionary<string, System.ValueTuple<string, long>> dicBundle;
    /*0x30*/ System.IO.StreamWriter logStream;

    /*0xfafdc4*/ LoadTask_GameInitialize();
    /*0xfafe88*/ System.Collections.IEnumerator OnProcess();
    /*0xfafef4*/ void Destory();
    /*0xfafef8*/ string get_BundlePath();
    /*0xfaff6c*/ string get_ManifestPath();
    /*0xfaffb8*/ string get_LogPath();
    /*0xfb0004*/ System.Collections.IEnumerator CheckStreamingAssets();
    /*0xfb0070*/ void BeginWriterLog();
    /*0xfb0188*/ void WriteLog(string log);
    /*0xfb01a4*/ void FlushLog();
    /*0xfb01bc*/ void EndWriterLog();
    /*0xfb01f0*/ void GetDiskBundle();
    /*0xfb037c*/ System.Collections.IEnumerator CheckDownloadAssetBundle();
    /*0xfb03e8*/ System.Collections.IEnumerator DownloadAssetBundle(bool notice);
    /*0xfb0468*/ System.Collections.IEnumerator DownloadAssetBundleOnDisk();
    /*0xfb04d4*/ System.Collections.IEnumerator VerifyAssetBundleOnDisk();
    /*0xfb0540*/ System.Collections.IEnumerator Init_LoadIndispensableBundle();
    /*0xfb059c*/ System.Collections.IEnumerator SetNoBackupAssetBundle(System.Collections.Generic.List<BundleManifest> _bundleManifest);
    /*0xfb05f8*/ System.Collections.IEnumerator ViewDownloadNotice(float _fileSize);
    /*0xfb066c*/ System.Collections.IEnumerator VerifyNotice();
    /*0xfb06d8*/ System.Collections.IEnumerator Init_IndispensableManager();
    /*0xfb0734*/ void <GetDiskBundle>b__17_0(System.IO.FileInfo f);

    class <OnProcess>d__1 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe56a00*/ <OnProcess>d__1(int <>1__state);
        /*0xe56a2c*/ void System.IDisposable.Dispose();
        /*0xe56a30*/ bool MoveNext();
        /*0xe56b24*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56b2c*/ void System.Collections.IEnumerator.Reset();
        /*0xe56b6c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CheckStreamingAssets>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe55694*/ <CheckStreamingAssets>d__12(int <>1__state);
        /*0xe556c0*/ void System.IDisposable.Dispose();
        /*0xe556c4*/ bool MoveNext();
        /*0xe558bc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe558c4*/ void System.Collections.IEnumerator.Reset();
        /*0xe55904*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string[] div;

        /*0xe54afc*/ <>c__DisplayClass18_0();
        /*0xe54b04*/ bool <CheckDownloadAssetBundle>b__0(BundleManifest x);
    }

    class <CheckDownloadAssetBundle>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;
        /*0x28*/ UnityEngine.Networking.UnityWebRequest <request>5__2;

        /*0xe54c84*/ <CheckDownloadAssetBundle>d__18(int <>1__state);
        /*0xe54cb0*/ void System.IDisposable.Dispose();
        /*0xe54cb4*/ bool MoveNext();
        /*0xe55644*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5564c*/ void System.Collections.IEnumerator.Reset();
        /*0xe5568c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ LoadTask_GameInitialize.<> <>9;
        static /*0x8*/ System.Func<BundleManifest, long> <>9__19_0;
        static /*0x10*/ System.Action<bool> <>9__24_0;

        static /*0xe54a88*/ <>c();
        /*0xe54ae8*/ <>c();
        /*0xe54af0*/ long <DownloadAssetBundle>b__19_0(BundleManifest m);
        /*0xe54af8*/ void <ViewDownloadNotice>b__24_0(bool result);
    }

    class <DownloadAssetBundle>d__19 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;
        /*0x28*/ bool notice;
        /*0x30*/ long <totaldownbytes>5__2;
        /*0x38*/ int <curIndex>5__3;
        /*0x40*/ ulong <currentdownbytes>5__4;
        /*0x48*/ System.Collections.Generic.List.Enumerator<BundleManifest> <>7__wrap4;
        /*0x88*/ BundleManifest <manifast>5__6;
        /*0xb8*/ UnityEngine.Networking.UnityWebRequest <downloadReq>5__7;
        /*0xc0*/ string <desc>5__8;

        /*0xe5590c*/ <DownloadAssetBundle>d__19(int <>1__state);
        /*0xe55938*/ void System.IDisposable.Dispose();
        /*0xe559a8*/ bool MoveNext();
        /*0xe55954*/ void <>m__Finally1();
        /*0xe5624c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56254*/ void System.Collections.IEnumerator.Reset();
        /*0xe56294*/ object System.Collections.IEnumerator.get_Current();
    }

    class <DownloadAssetBundleOnDisk>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe5629c*/ <DownloadAssetBundleOnDisk>d__20(int <>1__state);
        /*0xe562c8*/ void System.IDisposable.Dispose();
        /*0xe562cc*/ bool MoveNext();
        /*0xe563a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe563a8*/ void System.Collections.IEnumerator.Reset();
        /*0xe563e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <VerifyAssetBundleOnDisk>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe56c28*/ <VerifyAssetBundleOnDisk>d__21(int <>1__state);
        /*0xe56c54*/ void System.IDisposable.Dispose();
        /*0xe56c58*/ bool MoveNext();
        /*0xe56dd0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56dd8*/ void System.Collections.IEnumerator.Reset();
        /*0xe56e18*/ object System.Collections.IEnumerator.get_Current();
    }

    class <Init_LoadIndispensableBundle>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe56814*/ <Init_LoadIndispensableBundle>d__22(int <>1__state);
        /*0xe56840*/ void System.IDisposable.Dispose();
        /*0xe56844*/ bool MoveNext();
        /*0xe569b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe569b8*/ void System.Collections.IEnumerator.Reset();
        /*0xe569f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <SetNoBackupAssetBundle>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe56b74*/ <SetNoBackupAssetBundle>d__23(int <>1__state);
        /*0xe56ba0*/ void System.IDisposable.Dispose();
        /*0xe56ba4*/ bool MoveNext();
        /*0xe56bd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe56be0*/ void System.Collections.IEnumerator.Reset();
        /*0xe56c20*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ bool _bIsOK;

        /*0xe54b44*/ <>c__DisplayClass24_0();
        /*0xe54b4c*/ void <ViewDownloadNotice>b__1(bool result);
        /*0xe54bdc*/ bool <ViewDownloadNotice>b__2();
    }

    class <ViewDownloadNotice>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fileSize;

        /*0xe571e4*/ <ViewDownloadNotice>d__24(int <>1__state);
        /*0xe57210*/ void System.IDisposable.Dispose();
        /*0xe57214*/ bool MoveNext();
        /*0xe57708*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe57710*/ void System.Collections.IEnumerator.Reset();
        /*0xe57750*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ bool _bIsOK;

        /*0xe54be4*/ <>c__DisplayClass25_0();
        /*0xe54bec*/ void <VerifyNotice>b__0(bool result);
        /*0xe54c7c*/ bool <VerifyNotice>b__1();
    }

    class <VerifyNotice>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameInitialize <>4__this;

        /*0xe56e20*/ <VerifyNotice>d__25(int <>1__state);
        /*0xe56e4c*/ void System.IDisposable.Dispose();
        /*0xe56e50*/ bool MoveNext();
        /*0xe57194*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5719c*/ void System.Collections.IEnumerator.Reset();
        /*0xe571dc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <Init_IndispensableManager>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xe563f0*/ <Init_IndispensableManager>d__26(int <>1__state);
        /*0xe5641c*/ void System.IDisposable.Dispose();
        /*0xe56420*/ bool MoveNext();
        /*0xe567c4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe567cc*/ void System.Collections.IEnumerator.Reset();
        /*0xe5680c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_LoginProcess : LoadTask
{
    static /*0x0*/ bool Pause;

    static /*0xfb0ab0*/ LoadTask_LoginProcess();
    /*0xfb0a18*/ LoadTask_LoginProcess();
    /*0xfb0a40*/ void Destory();
    /*0xfb0a44*/ System.Collections.IEnumerator OnProcess();

    class <>c__DisplayClass3_0
    {
        /*0x10*/ bool _bLocalizeWaiting;

        /*0xe578fc*/ <>c__DisplayClass3_0();
        /*0xe57904*/ void <OnProcess>b__0(bool _result);
        /*0xe57a50*/ bool <OnProcess>b__1();
    }

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_LoginProcess <>4__this;

        /*0xe57a58*/ <OnProcess>d__3(int <>1__state);
        /*0xe57a84*/ void System.IDisposable.Dispose();
        /*0xe57a88*/ bool MoveNext();
        /*0xe58384*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5838c*/ void System.Collections.IEnumerator.Reset();
        /*0xe583cc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_GameReady : LoadTask
{
    /*0x1c*/ AssetBundleSceneType m_eCurScene;

    /*0xfb0978*/ LoadTask_GameReady(AssetBundleSceneType _eCurScene);
    /*0xfb09a8*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0a14*/ void Destory();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_GameReady <>4__this;

        /*0xe57758*/ <OnProcess>d__2(int <>1__state);
        /*0xe57784*/ void System.IDisposable.Dispose();
        /*0xe57788*/ bool MoveNext();
        /*0xe578ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe578b4*/ void System.Collections.IEnumerator.Reset();
        /*0xe578f4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask
{
    /*0x10*/ float _progress;
    /*0x14*/ bool _isDone;
    /*0x18*/ LoadTaskType <taskType>k__BackingField;

    /*0xfacaf8*/ LoadTask(LoadTaskType _task_type);
    /*0xfacad8*/ LoadTaskType get_taskType();
    /*0xfacae0*/ void set_taskType(LoadTaskType value);
    /*0xfacae8*/ float get_progress();
    /*0xfacaf0*/ bool get_isDone();
    /*0xfacb24*/ void OnTaskDone();
    /*0xfacb38*/ void SetProgress(float _value);
    /*0xfacb48*/ System.Collections.IEnumerator WaitProgress(float yieldProgress, float interval);
    /*0xfacbc8*/ void IncreaseProgress(float maxProgress, float interval);
    /*0xfacbe8*/ void SetDescription(string _desc);
    /*0xfacc64*/ void SetDescription_Locale(string _key, string[] _arg);
    System.Collections.IEnumerator OnProcess();
    void Destory();

    class <WaitProgress>d__13 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask <>4__this;
        /*0x28*/ float interval;
        /*0x2c*/ float yieldProgress;

        /*0xe532a0*/ <WaitProgress>d__13(int <>1__state);
        /*0xe532cc*/ void System.IDisposable.Dispose();
        /*0xe532d0*/ bool MoveNext();
        /*0xe53340*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe53348*/ void System.Collections.IEnumerator.Reset();
        /*0xe53388*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_BattleToDungeonScene : LoadTask
{
    /*0xfae038*/ LoadTask_BattleToDungeonScene();
    /*0xfae064*/ void Destory();
    /*0xfae068*/ System.Collections.IEnumerator OnProcess();
    /*0xfae0d4*/ void HandlerShowDungeon();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_BattleToDungeonScene <>4__this;

        /*0xe536a8*/ <OnProcess>d__2(int <>1__state);
        /*0xe536d4*/ void System.IDisposable.Dispose();
        /*0xe536d8*/ bool MoveNext();
        /*0xe53944*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5394c*/ void System.Collections.IEnumerator.Reset();
        /*0xe5398c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_BattleToMainScene : LoadTask
{
    /*0x1c*/ bool bIsUpdate;

    /*0xfae234*/ LoadTask_BattleToMainScene();
    /*0xfae260*/ void Destory();
    /*0xfae264*/ System.Collections.IEnumerator OnProcess();
    /*0xfae2d0*/ void HandlerShowCampain();
    /*0xfae500*/ void HandlerShowDemo();
    /*0xfae750*/ void HandlerShowCroManyonTower();
    /*0xfae9b4*/ void HandlerShowGeneralArena();
    /*0xfaeb2c*/ void HandlerShowWorldArena();
    /*0xfaeca4*/ void HandlerShowFriend();
    /*0xfaee1c*/ void HandlerShowGuildBoss();
    /*0xfaf164*/ void HandlerShowGuildWar();
    /*0xfaf3ac*/ void HandlerShowWorldBoss();
    /*0xfaf640*/ void HandlerShowPveRanking();
    /*0xfaf7e8*/ void <OnProcess>b__3_2();
    /*0xfaf7f4*/ bool <OnProcess>b__3_3();
    /*0xfaf7fc*/ void <OnProcess>b__3_0();
    /*0xfaf808*/ bool <OnProcess>b__3_1();

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_BattleToMainScene <>4__this;

        /*0xe53b7c*/ <OnProcess>d__3(int <>1__state);
        /*0xe53ba8*/ void System.IDisposable.Dispose();
        /*0xe53bac*/ bool MoveNext();
        /*0xe54350*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe54358*/ void System.Collections.IEnumerator.Reset();
        /*0xe54398*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ LoadTask_BattleToMainScene.<> <>9;
        static /*0x8*/ System.Action <>9__5_0;
        static /*0x10*/ System.Predicate<TableData.TableData_Eventpage> <>9__10_0;

        static /*0xe53994*/ <>c();
        /*0xe539f4*/ <>c();
        /*0xe539fc*/ void <HandlerShowDemo>b__5_0();
        /*0xe53b50*/ bool <HandlerShowGuildBoss>b__10_0(TableData.TableData_Eventpage f);
    }
}

class LoadTask_BattleToMazeScene : LoadTask
{
    /*0xfaf810*/ LoadTask_BattleToMazeScene();
    /*0xfaf83c*/ void Destory();
    /*0xfaf840*/ System.Collections.IEnumerator OnProcess();
    /*0xfaf8ac*/ void HandlerShowMaze();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_BattleToMazeScene <>4__this;

        /*0xe543a0*/ <OnProcess>d__2(int <>1__state);
        /*0xe543cc*/ void System.IDisposable.Dispose();
        /*0xe543d0*/ bool MoveNext();
        /*0xe5463c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe54644*/ void System.Collections.IEnumerator.Reset();
        /*0xe54684*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_DirectingProcess : LoadTask
{
    static /*0x0*/ System.Collections.Generic.Queue<System.Collections.IEnumerator> OnQueueDirectingProcessEvent;

    static /*0xfafb28*/ LoadTask_DirectingProcess();
    /*0xfafa0c*/ LoadTask_DirectingProcess();
    /*0xfafa38*/ void Destory();
    /*0xfafabc*/ System.Collections.IEnumerator OnProcess();

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_DirectingProcess <>4__this;

        /*0xe5468c*/ <OnProcess>d__3(int <>1__state);
        /*0xe546b8*/ void System.IDisposable.Dispose();
        /*0xe546bc*/ bool MoveNext();
        /*0xe547cc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe547d4*/ void System.Collections.IEnumerator.Reset();
        /*0xe54814*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_DungeonToMain : LoadTask
{
    /*0xfafbb0*/ LoadTask_DungeonToMain();
    /*0xfafbdc*/ void Destory();
    /*0xfafbe0*/ System.Collections.IEnumerator OnProcess();
    /*0xfafc4c*/ void HandlerShowPopupEvent();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_DungeonToMain <>4__this;

        /*0xe5481c*/ <OnProcess>d__2(int <>1__state);
        /*0xe54848*/ void System.IDisposable.Dispose();
        /*0xe5484c*/ bool MoveNext();
        /*0xe54a38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe54a40*/ void System.Collections.IEnumerator.Reset();
        /*0xe54a80*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MainToBattleScene : LoadTask
{
    /*0xfb0ab4*/ LoadTask_MainToBattleScene();
    /*0xfb0ae0*/ void Destory();
    /*0xfb0ae4*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0b50*/ void HandlerShowPopupEvent();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MainToBattleScene <>4__this;

        /*0xe583d4*/ <OnProcess>d__2(int <>1__state);
        /*0xe58400*/ void System.IDisposable.Dispose();
        /*0xe58404*/ bool MoveNext();
        /*0xe58548*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58550*/ void System.Collections.IEnumerator.Reset();
        /*0xe58590*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MainToDungeon : LoadTask
{
    /*0x1c*/ int m_dungeonID;

    /*0xfb0c74*/ LoadTask_MainToDungeon(int dungeonID);
    /*0xfb0ca4*/ void Destory();
    /*0xfb0ca8*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0d14*/ void HandlerShowPopupEvent();

    class <OnProcess>d__3 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MainToDungeon <>4__this;

        /*0xe58598*/ <OnProcess>d__3(int <>1__state);
        /*0xe585c4*/ void System.IDisposable.Dispose();
        /*0xe585c8*/ bool MoveNext();
        /*0xe58800*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58808*/ void System.Collections.IEnumerator.Reset();
        /*0xe58848*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MainToMazeScene : LoadTask
{
    /*0xfb0e84*/ LoadTask_MainToMazeScene();
    /*0xfb0eb0*/ void Destory();
    /*0xfb0eb4*/ System.Collections.IEnumerator OnProcess();
    /*0xfb0f20*/ void HandlerShowPopupEvent();

    class <>c__DisplayClass2_0
    {
        /*0x10*/ bool isEnter;

        /*0xe58850*/ <>c__DisplayClass2_0();
        /*0xe58858*/ void <OnProcess>b__0();
        /*0xe58864*/ bool <OnProcess>b__1();
    }

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MainToMazeScene <>4__this;

        /*0xe5886c*/ <OnProcess>d__2(int <>1__state);
        /*0xe58898*/ void System.IDisposable.Dispose();
        /*0xe5889c*/ bool MoveNext();
        /*0xe58bf8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58c00*/ void System.Collections.IEnumerator.Reset();
        /*0xe58c40*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_MazeToMain : LoadTask
{
    /*0xfb10bc*/ LoadTask_MazeToMain();
    /*0xfb10e8*/ void Destory();
    /*0xfb10ec*/ System.Collections.IEnumerator OnProcess();
    /*0xfb1158*/ void HandlerShowPopupEvent();

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_MazeToMain <>4__this;

        /*0xe58c48*/ <OnProcess>d__2(int <>1__state);
        /*0xe58c74*/ void System.IDisposable.Dispose();
        /*0xe58c78*/ bool MoveNext();
        /*0xe58e64*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe58e6c*/ void System.Collections.IEnumerator.Reset();
        /*0xe58eac*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_StartToMainScene : LoadTask
{
    static /*0x0*/ System.Action OnEventSceneAnimationCall;
    /*0x1c*/ bool bIsUpdate;

    static /*0xfb1c10*/ LoadTask_StartToMainScene();
    static /*0xfb198c*/ void add_OnEventSceneAnimationCall(System.Action value);
    static /*0xfb1a80*/ void remove_OnEventSceneAnimationCall(System.Action value);
    /*0xfb1b74*/ LoadTask_StartToMainScene();
    /*0xfb1ba0*/ void Destory();
    /*0xfb1ba4*/ System.Collections.IEnumerator OnProcess();
    /*0xfb1c14*/ void <OnProcess>b__6_0();
    /*0xfb1cf4*/ void <OnProcess>b__6_2();
    /*0xfb1d00*/ bool <OnProcess>b__6_1();

    class <OnProcess>d__6 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_StartToMainScene <>4__this;

        /*0xe59b64*/ <OnProcess>d__6(int <>1__state);
        /*0xe59b90*/ void System.IDisposable.Dispose();
        /*0xe59b94*/ bool MoveNext();
        /*0xe59e30*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59e38*/ void System.Collections.IEnumerator.Reset();
        /*0xe59e78*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct AssetBundleSceneData
{
    /*0x10*/ AssetBundleSceneType sceneType;
    /*0x18*/ string sceneName;
    /*0x20*/ string localeKeyDesc;

    /*0xa85574*/ AssetBundleSceneData(AssetBundleSceneType _scene_type, string _name, string _locale_key_desc);
}

class LoadTask_Scene_AssetBundle : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<AssetBundleSceneData> sceneList;

    /*0xfb14f4*/ LoadTask_Scene_AssetBundle();
    /*0xfb1520*/ System.Collections.IEnumerator OnProcess();
    /*0xfb158c*/ void Destory();
    /*0xfb15e4*/ void AddSceneData(AssetBundleSceneType _scene_type, string _scene_name, string _locale_key);
    /*0xfb1634*/ void AddSceneData(AssetBundleSceneData data);

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_Scene_AssetBundle <>4__this;
        /*0x28*/ int <_load_scene_count>5__2;
        /*0x2c*/ float <_once_progress>5__3;
        /*0x30*/ int <n>5__4;
        /*0x38*/ AssetBundleSceneData <_data>5__5;

        /*0xe592d0*/ <OnProcess>d__2(int <>1__state);
        /*0xe592fc*/ void System.IDisposable.Dispose();
        /*0xe59300*/ bool MoveNext();
        /*0xe596b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe596b8*/ void System.Collections.IEnumerator.Reset();
        /*0xe596f8*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum ELoadSceneType
{
    LoadType_None = 0,
    LoadType_Name = 1,
    LoadType_Index = 2,
}

struct SLoadSceneData
{
    /*0x10*/ ELoadSceneType scene_type;
    /*0x18*/ string scene_name;
    /*0x20*/ int scene_index;
    /*0x28*/ string localeKey_desc;

    /*0xa8e470*/ SLoadSceneData(int _index, string _localeKey_desc);
    /*0xa8e4dc*/ SLoadSceneData(string _name, string _localeKey_desc);
}

class LoadTask_Scene : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<SLoadSceneData> sceneList;

    /*0xfb1290*/ LoadTask_Scene();
    /*0xfb12bc*/ System.Collections.IEnumerator OnProcess();
    /*0xfb1328*/ void Destory();
    /*0xfb1380*/ void AddSceneData(int sceneIndex, string localeKey);
    /*0xfb14a8*/ void AddSceneData(string sceneName, string localeKey);
    /*0xfb13cc*/ void AddSceneData(SLoadSceneData data);

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_Scene <>4__this;
        /*0x28*/ int <loadSceneCount>5__2;
        /*0x2c*/ int <n>5__3;

        /*0xe58eb4*/ <OnProcess>d__2(int <>1__state);
        /*0xe58ee0*/ void System.IDisposable.Dispose();
        /*0xe58ee4*/ bool MoveNext();
        /*0xe59280*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59288*/ void System.Collections.IEnumerator.Reset();
        /*0xe592c8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadTask_Scene_Async : LoadTask
{
    /*0x20*/ System.Collections.Generic.List<SLoadSceneData> sceneList;

    /*0xfb1728*/ LoadTask_Scene_Async();
    /*0xfb1754*/ System.Collections.IEnumerator OnProcess();
    /*0xfb17c0*/ void Destory();
    /*0xfb1818*/ void AddSceneData(int sceneIndex, string localeKey);
    /*0xfb1940*/ void AddSceneData(string sceneName, string localeKey);
    /*0xfb1864*/ void AddSceneData(SLoadSceneData data);

    class <OnProcess>d__2 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LoadTask_Scene_Async <>4__this;
        /*0x28*/ int <loadSceneCount>5__2;
        /*0x2c*/ float <beginProgress>5__3;
        /*0x30*/ float <maxProgress>5__4;
        /*0x38*/ UnityEngine.AsyncOperation <async>5__5;
        /*0x40*/ int <n>5__6;

        /*0xe59700*/ <OnProcess>d__2(int <>1__state);
        /*0xe5972c*/ void System.IDisposable.Dispose();
        /*0xe59730*/ bool MoveNext();
        /*0xe59b14*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59b1c*/ void System.Collections.IEnumerator.Reset();
        /*0xe59b5c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class AuthManager : Singleton.Component.SingletonComponent<AuthManager>
{
    /*0xf8630c*/ AuthManager();
    /*0xf862fc*/ void AwakeInstance();
    /*0xf86300*/ bool InitInstance();
    /*0xf86308*/ void ReleaseInstance();
}

class GoogleSign
{
}

class MailManager : Singleton.Data.SingletonData<MailManager>
{
    static /*0x0*/ System.Action OnChangeAssetInfo;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMail> m_liMailList;
    /*0x28*/ int _nCurIndex;
    /*0x2c*/ int _nStartCount;
    /*0x30*/ int _nEndCount;
    /*0x38*/ PTShare.Define.SMail _nCurMailInfo;

    static /*0xde0818*/ MailManager();
    static /*0xddf7a4*/ void add_OnChangeAssetInfo(System.Action value);
    static /*0xddf898*/ void remove_OnChangeAssetInfo(System.Action value);
    /*0xde0760*/ MailManager();
    /*0xddf724*/ string get_UserToken();
    /*0xddf98c*/ bool InitInstance();
    /*0xddf994*/ void ReleaseInstance();
    /*0xddfa24*/ void Send_SearchMail(System.Action _callback);
    /*0xddfb5c*/ void Send_RemoveMail(int _mailid, System.Action _callback);
    /*0xddfcb0*/ void Send_RemoveMailAll(System.Action _callback);
    /*0xddfde8*/ void Send_TakeMail(int _mailid, System.Action<PTShare.Define.SProperty> _callback);
    /*0xddff30*/ void Send_TakeMailAll(System.Action<PTShare.Define.SProperty> _callback);
    /*0xde0068*/ System.Collections.Generic.List<PTShare.Define.SMail> GetMailList();
    /*0xde0070*/ bool GetEnableUseMail();
    /*0xde01a0*/ bool FindPossiableReceiveMail();
    /*0xde02d0*/ bool FindPossiableDeleteMail();
    /*0xde0400*/ void SortMail();
    /*0xde0530*/ int GetMailidSearchIndex(int _mailid);
    /*0xde0620*/ void ModifyRecvMail(int _mailid, bool _recv);
    /*0xde06d8*/ void UpdateNewMail(bool _enable);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe5c8fc*/ <>c__DisplayClass12_0();
        /*0xe5c904*/ void <Send_SearchMail>b__0(ServerProtocol.ResMailInbox _response);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ int _mailid;
        /*0x20*/ System.Action _callback;

        /*0xe5c9c8*/ <>c__DisplayClass13_0();
        /*0xe5c9d0*/ void <Send_RemoveMail>b__0(ServerProtocol.ResMailRemove _response);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xe5ca68*/ <>c__DisplayClass14_0();
        /*0xe5ca70*/ void <Send_RemoveMailAll>b__0(ServerProtocol.ResMailRemoveAll _response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xe5cb94*/ <>c__DisplayClass15_0();
        /*0xe5cb9c*/ void <Send_TakeMail>b__0(ServerProtocol.ResMailTake _response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ MailManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xe5cdf8*/ <>c__DisplayClass16_0();
        /*0xe5ce00*/ void <Send_TakeMailAll>b__0(ServerProtocol.ResMailTakeAll _response);
    }

    class <>c
    {
        static /*0x0*/ MailManager.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SMail> <>9__18_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SMail> <>9__19_0;
        static /*0x18*/ System.Predicate<PTShare.Define.SMail> <>9__20_0;
        static /*0x20*/ System.Comparison<PTShare.Define.SMail> <>9__21_0;

        static /*0xe5c768*/ <>c();
        /*0xe5c7c8*/ <>c();
        /*0xe5c7d0*/ bool <GetEnableUseMail>b__18_0(PTShare.Define.SMail x);
        /*0xe5c7f0*/ bool <FindPossiableReceiveMail>b__19_0(PTShare.Define.SMail x);
        /*0xe5c820*/ bool <FindPossiableDeleteMail>b__20_0(PTShare.Define.SMail x);
        /*0xe5c838*/ int <SortMail>b__21_0(PTShare.Define.SMail a, PTShare.Define.SMail b);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ int _mailid;

        /*0xe5d060*/ <>c__DisplayClass22_0();
        /*0xe5d068*/ bool <GetMailidSearchIndex>b__0(PTShare.Define.SMail x);
    }
}

enum TILE_TYPE
{
    NORMAL = 1,
    BATTLE = 2,
    REVIVAL = 3,
    HEAL = 4,
    MATE = 5,
    GOLDREWARD = 6,
    HEROEXPREWARD = 7,
    JEWELREWARD = 8,
    TICKETREWARD = 9,
    STARREWARD = 10,
    TIERSREWARD = 11,
    FINISH = 12,
    START = 13,
    NULL = 14,
}

class DefineMaze
{
    static /*0x0*/ System.DateTime MazeDefaultTime;
    static /*0x8*/ float ZOOM_MIN;
    static /*0xc*/ float ZOOM_MAX;
    static /*0x10*/ float WALK_IN_TIME;
    static /*0x14*/ float WALK_CENTER_TIME;
    static /*0x18*/ float WALK_OUT_TIME;
    static /*0x1c*/ float WALK_TILE_MOVE_TIME;
    static /*0x20*/ float HERO_WEIGHT;
    static /*0x24*/ float TILE_ROLLBACK_POWER;
    static /*0x28*/ float WALK_ANIM_START;
    static /*0x2c*/ int DICE_MAX_NUMBER;
    static /*0x30*/ float DICE_ROLLING_TIME;
    static /*0x34*/ int DICE_ROLLING_COUNT;
    static /*0x38*/ float TILE_LENGTH;
    static /*0x3c*/ float TILE_INTERVAL_X;
    static /*0x40*/ float TILE_INTERVAL_Y;
    static /*0x44*/ UnityEngine.Vector3 TILE_UP;
    static /*0x50*/ UnityEngine.Vector3 TILE_DOWN;
    static /*0x5c*/ UnityEngine.Vector3 TILE_RIGHT;
    static /*0x68*/ UnityEngine.Vector3 TILE_LEFT;
    static /*0x78*/ string NORMAL_TILE_NAME;
    static /*0x80*/ string BATTLE_TILE_NAME;
    static /*0x88*/ string HEAL_TILE_NAME;
    static /*0x90*/ string REVIVAL_TILE_NAME;
    static /*0x98*/ string MATE_TILE_NAME;
    static /*0xa0*/ string FINISH_TILE_NAME;
    static /*0xa8*/ string GOLD_TILE_NAME;
    static /*0xb0*/ string HEROEXP_TILE_NAME;
    static /*0xb8*/ string JEWEL_TILE_NAME;
    static /*0xc0*/ string TICKET_TILE_NAME;
    static /*0xc8*/ string STAR_TILE_NAME;
    static /*0xd0*/ string TIERS_TILE_NAME;
    static /*0xd8*/ string START_LEFT_TILE_NAME;
    static /*0xe0*/ string START_UP_TILE_NAME;
    static /*0xe8*/ string START_DOWN_TILE_NAME;
    static /*0xf0*/ string START_RIGHT_TILE_NAME;
    static /*0xf8*/ string TILE_OUTLINE_PASS_NAME;
    static /*0x100*/ string TILE_OUTLINE_DEST_NAME;
    static /*0x108*/ string DICE_NAME_DEFAULT;

    static /*0x11e77e4*/ DefineMaze();
    /*0x11e77dc*/ DefineMaze();

    enum MOVE_TYPE
    {
        UP = 0,
        DOWN = 1,
        RIGHT = 2,
        LEFT = 3,
        NULL = 4,
    }

    enum TILE_OUTLINE_TYPE
    {
        PASS = 0,
        DEST = 1,
        NULL = 2,
    }

    class MazeCourseData
    {
        /*0x10*/ int count;
        /*0x18*/ System.Collections.Generic.List<DefineMaze.MOVE_TYPE> moveTypeList;
        /*0x20*/ System.Collections.Generic.List<TILE_TYPE> tileTypeList;

        /*0x1078144*/ MazeCourseData();
        /*0x10780c8*/ void Clear();
    }
}

class MazeDiceImageEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_diceParent;
    /*0x20*/ AtlasImage m_diceImage;

    /*0xded320*/ MazeDiceImageEffect();
    /*0xded228*/ void ShowDice(int diceNumber);
    /*0xded300*/ void HideDice();
}

class MazeDiceSpineEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_diceSpineParent;
    /*0x20*/ Spine.Unity.SkeletonGraphic m_diceSpine;
    /*0x28*/ ParticleBase m_particleFollow;
    /*0x30*/ Spine.Unity.BoneFollowerGraphic m_boneFollowerBody;
    /*0x38*/ Spine.Unity.BoneFollowerGraphic m_boneFollowerEffect;
    /*0x40*/ System.Collections.Generic.List<ParticleBase> m_poolObjects;
    /*0x48*/ float m_defalutTimeScale;
    /*0x50*/ System.Action OnDiceEffect02;
    /*0x58*/ System.Action OnDiceEnd;

    /*0xded680*/ MazeDiceSpineEffect();
    /*0xded328*/ void PlayDice(int diceNumber, float timeScale, System.Action callBackEffect02, System.Action callBackEnd);
    /*0xded378*/ System.Collections.IEnumerator CoRollingDice(int diceNumber);
    /*0xded3f4*/ void HandleEffectEvent(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xded614*/ System.Collections.IEnumerator CoPlayEffect02();

    class <CoRollingDice>d__10 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeDiceSpineEffect <>4__this;
        /*0x28*/ int diceNumber;
        /*0x2c*/ float <time>5__2;

        /*0xe5e318*/ <CoRollingDice>d__10(int <>1__state);
        /*0xe5e344*/ void System.IDisposable.Dispose();
        /*0xe5e348*/ bool MoveNext();
        /*0xe5e80c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5e814*/ void System.Collections.IEnumerator.Reset();
        /*0xe5e854*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayEffect02>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeDiceSpineEffect <>4__this;

        /*0xe5e100*/ <CoPlayEffect02>d__12(int <>1__state);
        /*0xe5e12c*/ void System.IDisposable.Dispose();
        /*0xe5e130*/ bool MoveNext();
        /*0xe5e2c8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe5e2d0*/ void System.Collections.IEnumerator.Reset();
        /*0xe5e310*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeItemNotify : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.Vector3 m_itemAmountStartVector;
    /*0x24*/ UnityEngine.Vector3 m_itemAmountEndVector;
    /*0x30*/ UnityEngine.GameObject m_itemParent;
    /*0x38*/ UnityEngine.GameObject m_itemAmountParent;
    /*0x40*/ AtlasImage m_amountItemIcon;
    /*0x48*/ AtlasImage[] m_itemIcons;
    /*0x50*/ LocalizeString m_itemAmountText;

    /*0xdedf5c*/ MazeItemNotify();
    /*0xdede5c*/ void HideItem();
    /*0xdedea0*/ void PlayItemReward(UnityEngine.Vector3 heroLocalScale);
    /*0xdedecc*/ System.Collections.IEnumerator CoPlayItemReward(UnityEngine.Vector3 heroLocalScale);

    class <>c__DisplayClass9_0
    {
        /*0x10*/ UnityEngine.Vector3 heroLocalScale;

        /*0x10803c4*/ <>c__DisplayClass9_0();
        /*0x10803cc*/ void <CoPlayItemReward>b__0(AtlasImage _icon);
    }

    class <>c__DisplayClass9_1
    {
        /*0x10*/ TableData.TableData_Item item;

        /*0x108040c*/ <>c__DisplayClass9_1();
        /*0x1080414*/ void <CoPlayItemReward>b__6(AtlasImage _icon);
    }

    class <>c
    {
        static /*0x0*/ MazeItemNotify.<> <>9;
        static /*0x8*/ System.Action<AtlasImage> <>9__9_1;
        static /*0x10*/ System.Action<AtlasImage> <>9__9_2;
        static /*0x18*/ System.Action<AtlasImage> <>9__9_3;
        static /*0x20*/ System.Action<AtlasImage> <>9__9_4;
        static /*0x28*/ System.Action<AtlasImage> <>9__9_5;

        static /*0x1080158*/ <>c();
        /*0x10801b8*/ <>c();
        /*0x10801c0*/ void <CoPlayItemReward>b__9_1(AtlasImage _icon);
        /*0x108023c*/ void <CoPlayItemReward>b__9_2(AtlasImage _icon);
        /*0x10802b8*/ void <CoPlayItemReward>b__9_3(AtlasImage _icon);
        /*0x1080334*/ void <CoPlayItemReward>b__9_4(AtlasImage _icon);
        /*0x10803b0*/ void <CoPlayItemReward>b__9_5(AtlasImage _icon);
    }

    class <CoPlayItemReward>d__9 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.Vector3 heroLocalScale;
        /*0x30*/ MazeItemNotify <>4__this;

        /*0x1080494*/ <CoPlayItemReward>d__9(int <>1__state);
        /*0x10804c0*/ void System.IDisposable.Dispose();
        /*0x10804c4*/ bool MoveNext();
        /*0x1080c20*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1080c28*/ void System.Collections.IEnumerator.Reset();
        /*0x1080c68*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeBattleInfomationPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_descText;
    /*0x50*/ LocalizeString m_cpText;
    /*0x58*/ HeroSlotMaze[] m_heroMazes;
    /*0x60*/ ScrollContent_StageReward m_scrollContentStageReward;
    /*0x68*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0xdeb3bc*/ MazeBattleInfomationPopup();
    /*0xde9f38*/ void OnCreate();
    /*0xde9f3c*/ void OnDelete();
    /*0xde9f40*/ void OnEnter();
    /*0xdea01c*/ void OnFinish();
    /*0xdea020*/ void OnLeave();
    /*0xdea024*/ void OnStart();
    /*0xdea028*/ void OnExit();
    /*0xdea0a4*/ void InitMazeBattle(string titleKey, string infoKey, PTShare.Define.SProperty reward, System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0xdea258*/ void SetStageTitle(string titleKey);
    /*0xdea344*/ void SetStageInfo(string infoKey);
    /*0xdea430*/ void SetCP(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0xdea954*/ void InitOtherTeams(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0xdead80*/ void OnClick_BattleStart();
    /*0xdea58c*/ void InitRewardSetting(PTShare.Define.SProperty _rewards);
    /*0xdeb300*/ void HandlerTableStageReward(int _index, ItemTableRewardSlot _instance);
    /*0xdeaf90*/ void AddRewardCurrency(PTShare.Define.Currency currencyType, long amount);
    /*0xdeb044*/ void AddRewardItem(int tableId, long amount);
    /*0xdeb120*/ void AddRewardEquip(int tableId, long amount);
    /*0xdeb218*/ void AddRewardHero(int tableId, long amount);
    /*0xdeae44*/ void AddRewardResetPoint(string name, long amount);
}

class MazeBossInfoPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ ScrollContent_ItemInfoSlot m_scrollContentReward;
    /*0x50*/ ScrollContent_HeroSlot m_scrollContentHeroSlot;
    /*0x58*/ TabGroup m_tabGroup;
    /*0x60*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x68*/ ServerProtocol.ResMazeInfo m_data;
    /*0x70*/ MazeBossInfoPopup.TABTYPE m_tabType;

    /*0xdecadc*/ MazeBossInfoPopup();
    /*0xdeb9c0*/ void OnCreate();
    /*0xdeb9c4*/ void OnDelete();
    /*0xdeb9c8*/ void OnEnter();
    /*0xdeb9cc*/ void OnExit();
    /*0xdeba48*/ void OnFinish();
    /*0xdeba4c*/ void OnLeave();
    /*0xdebc1c*/ void OnStart();
    /*0xdebc20*/ void InitPopup(ServerProtocol.ResMazeInfo data, MazeBossInfoPopup.TABTYPE tabType);
    /*0xdebe90*/ void Refresh(MazeBossInfoPopup.TABTYPE tabType);
    /*0xdebed8*/ void SetTitle();
    /*0xdec02c*/ void SetHeroSlots();
    /*0xdec0c0*/ void SetRewards();
    /*0xdec52c*/ void AddPassPoint();
    /*0xdec660*/ void AddRewardResetPoint(string name, long amount);
    /*0xdebcbc*/ void BindEvent();
    /*0xdeba50*/ void RemoveEvent();
    /*0xdec7ac*/ void HandleItemInfoSlot(int index, ItemInfoSlot obj);
    /*0xdec868*/ void HandleHeroSlot(int index, HeroSlot obj);
    /*0xdeca54*/ void HandleTabChange(int tabType);
    /*0xdec9bc*/ PTShare.Define.SHero ConvertHero(PTShare.Define.SConditionHero source);

    enum TABTYPE
    {
        MIDDLE_BOSS = 0,
        BOSS = 1,
    }
}

class MazeDice : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_diceImage;
    /*0x20*/ int m_diceIndex;
    /*0x24*/ int m_diceNumber;
    /*0x28*/ System.Action<int> m_callBack;

    /*0xdecec4*/ MazeDice();
    /*0xdecd8c*/ void InitDice(int diceIndex, int number, System.Action<int> callBack);
    /*0xdece64*/ void OnClickDice();
}

class MazeDiceGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<MazeDice> m_diceList;

    /*0xded1b0*/ MazeDiceGroup();
    /*0xdececc*/ void InitDiceGroup(System.Action<int> callBack);

    class <>c
    {
        static /*0x0*/ MazeDiceGroup.<> <>9;
        static /*0x8*/ System.Action<MazeDice> <>9__1_0;

        static /*0xe5e068*/ <>c();
        /*0xe5e0c8*/ <>c();
        /*0xe5e0d0*/ void <InitDiceGroup>b__1_0(MazeDice data);
    }
}

class MazeHeroListPopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotMaze m_scrollContent;
    /*0x48*/ System.Collections.Generic.List<ConditionHeroData> m_mazeHeroDataList;

    /*0xdede54*/ MazeHeroListPopup();
    /*0xded700*/ void OnCreate();
    /*0xded704*/ void OnDelete();
    /*0xded708*/ void OnEnter();
    /*0xded85c*/ void OnFinish();
    /*0xded860*/ void OnLeave();
    /*0xded9b8*/ void OnStart();
    /*0xded9bc*/ void OnExit();
    /*0xdeda38*/ void InitializeMazePopup();
    /*0xdedaa0*/ void ShowScrollContent();
    /*0xdedb38*/ void HandleScrollContent(int index, HeroSlotMaze obj);
    /*0xdedd8c*/ void HandleCallBack(PTShare.Define.SHero sHero);
    /*0xded780*/ void BindEvent();
    /*0xded8e4*/ void DeleteEvent();

    class <>c__DisplayClass11_0
    {
        /*0x10*/ MazeHeroListPopup <>4__this;
        /*0x18*/ int index;

        /*0x107ffd0*/ <>c__DisplayClass11_0();
        /*0x107ffd8*/ void <HandleScrollContent>b__0();
    }
}

class MazeManager : Singleton.Component.SingletonComponent<MazeManager>
{
    static /*0x0*/ System.Action<TILE_TYPE> OnShowEffect;
    static /*0x8*/ System.Action<int> OnDiceResponse;
    static /*0x10*/ System.Action<int> OnDiceResponseCash;
    static /*0x18*/ System.Action<int> OnJoinTile;
    static /*0x20*/ System.Action OnRandomTileReward;
    static /*0x28*/ System.Action OnNewMazeCreate;
    /*0x28*/ System.Collections.Generic.List<ConditionHeroData> m_mazeHeroDataList;
    /*0x30*/ DefineMaze.MazeCourseData m_mazeCourseData;
    /*0x38*/ int m_heroPositionIndex;
    /*0x3c*/ int m_mazeStep;
    /*0x40*/ int m_mazeCourseId;
    /*0x48*/ int[] m_mazeTileIds;
    /*0x50*/ UnityEngine.Vector3 m_startPoint;
    /*0x5c*/ bool m_isTileDone;
    /*0x5d*/ bool m_isMazeClear;
    /*0x60*/ long m_selectDiceCost;
    /*0x68*/ string m_prevSceneName;
    /*0x70*/ bool m_isExpireMaze;
    /*0x78*/ System.Collections.Generic.List<int> m_diceList;
    /*0x80*/ System.Collections.Generic.List<int> m_history;
    /*0x88*/ int m_enemyIndex;
    /*0x8c*/ bool m_isShowMazeAwakeEffect;
    /*0x8d*/ bool m_isShowMazeClearEffect;
    /*0x8e*/ bool m_isShowBattleEffect;
    /*0x8f*/ bool m_waitFinishEffect;
    /*0x90*/ bool m_auto;
    /*0x98*/ PTShare.Define.SProperty m_rewardTileResponse;
    /*0xa0*/ PTShare.Define.SProperty m_battleTileRewardResponse;
    /*0xa8*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> m_mateCandiDateList;
    /*0xb0*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_playerBattleHeroList;
    /*0xb8*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> m_enemyBattleHeroList;
    /*0xc0*/ bool m_fastMaze;

    static /*0xdf19c0*/ MazeManager();
    /*0xdf1884*/ MazeManager();
    /*0xdedf78*/ System.Collections.Generic.List<ConditionHeroData> GetMazeHeroDataList();
    /*0xdedf80*/ DefineMaze.MazeCourseData GetMazeCourseData();
    /*0xdedf88*/ UnityEngine.Vector3 GetStartPoint();
    /*0xdedf94*/ bool GetIsTileDone();
    /*0xdedf9c*/ bool MazeIsClose();
    /*0xdedfa4*/ bool GetIsExpireMaze();
    /*0xdedfac*/ int GetMazeStepNumber();
    /*0xdedfb4*/ string GetPrevSceneName();
    /*0xdedfbc*/ PTShare.Define.SProperty GetReward();
    /*0xdedfc4*/ PTShare.Define.SProperty GetBattleReward();
    /*0xdedfcc*/ int GetHeroPositionIndex();
    /*0xdedff4*/ long GetSelectDiceCost();
    /*0xdedffc*/ bool GetIsUsePerfume();
    /*0xdee0e4*/ bool GetIsShowMazeClearEffect();
    /*0xdee0ec*/ bool GetIsShowBattleEffect();
    /*0xdee0f4*/ bool GetIsShowMazeAwakeEffect();
    /*0xdee0fc*/ TILE_TYPE GetTileType(int tileIndex);
    /*0xdee190*/ TILE_TYPE GetCurrTileType();
    /*0xdee198*/ System.Collections.Generic.List<PTShare.Define.SMateCandidate> GetMateCandidateList();
    /*0xdee1a0*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> GetPlayerBattleHeroList();
    /*0xdee1a8*/ System.Collections.Generic.List<PTShare.Define.SConditionHero> GetEnemyBattleHeroList();
    /*0xdee1b0*/ System.Collections.Generic.List<int> GetDiceList();
    /*0xdead74*/ TableData.TableData_Mazebattle GetMazeBattle();
    /*0xded160*/ int GetDiceCount();
    /*0xdee1b8*/ bool IsMoveHistory(int index);
    /*0xdee21c*/ bool GetAuto();
    /*0xdee224*/ void SetAuto(bool enable);
    /*0xdee230*/ PTShare.Define.SHero FindSHero(int heroId);
    /*0xdee32c*/ bool IsExistHero(int heroId);
    /*0xdee374*/ ConditionHeroData FindMazeHeroData(int heroId);
    /*0xdee464*/ bool GetFastMaze();
    /*0xdea238*/ bool IsFinishBattle();
    /*0xdee46c*/ bool SetFastMaze();
    /*0xdee488*/ void AwakeInstance();
    /*0xdee48c*/ bool InitInstance();
    /*0xdee6e0*/ void ReleaseInstance();
    /*0xdee9d0*/ void SetHeroCondition(int heroId, int hp, int mp);
    /*0xdeead8*/ void SetMazeClearEffect(bool isShow);
    /*0xdeeae4*/ void SetMazeBattleEffect(bool isShow);
    /*0xdeeaf0*/ void SetMazeAwakeEffect(bool isShow);
    /*0xdeeafc*/ void SetPrevSceneName(string sceneName);
    /*0xdeeb04*/ void Send_RequestMazeEnter(System.Action callBack);
    /*0xdeee10*/ void Send_DiceRoll(System.Action<int> callBack);
    /*0xdeef9c*/ void Send_DiceRequest(int diceNumber, bool isCash);
    /*0xdef150*/ void Send_MazeInfo(System.Action<ServerProtocol.ResMazeInfo> callBack);
    /*0xdef2d8*/ void Send_MazeMateRequest(int tabledId);
    /*0xdef440*/ void Send_MateReset(System.Action callBack);
    /*0xdef5cc*/ void Send_UsePerfume();
    /*0xdef724*/ void Send_BeginBattle(string heroIds, System.Action<int> callBack_WithRandomSeed);
    /*0xdef8c0*/ void Send_FinishBattle(bool isWin, string playData, long lcp, string HpMps, System.Action callBack);
    /*0xdefa90*/ void Send_RestoreRequest(bool confirm);
    /*0xdefc7c*/ void Send_ReviveRequest(bool confirm);
    /*0xdefe68*/ void HandleRestore(bool confirm);
    /*0xdefe70*/ void HandleRevive(bool confirm);
    /*0xdefe78*/ void HandleOnJoinTile(int tileIndex);
    /*0xdf06ec*/ void HandleRefreshHeroLevel();
    /*0xdf0864*/ void HandleRefreshHeroLevelSingle(PTShare.Define.SHero sHero);
    /*0xdf0964*/ void HandleOnEndFinishEffect();
    /*0xdf096c*/ void InitMapData(int mazeID);
    /*0xdf0c28*/ void PushMoveType(DefineMaze.MOVE_TYPE moveType, TILE_TYPE tileType, int count);
    /*0xdf0cf8*/ void UpdateTileType(TILE_TYPE tileType, int index);
    /*0xdf0d98*/ PTShare.Define.SHero ConvertSMateCandidateToSHero(PTShare.Define.SMateCandidate sMateCandidate);
    /*0xdf0f98*/ void AddMate(PTShare.Define.SMate newMate);
    /*0xdf0ef4*/ PTShare.Define.SEquip FindMateEquipItem(int tableId, int equipGrade, PTShare.Define.EquipParts equipParts);
    /*0xdf12c4*/ void UpdateHeroList(System.Collections.Generic.List<PTShare.Define.SMate> mateList);
    /*0xdf14e8*/ void UpdateHeroConditions(System.Collections.Generic.List<PTShare.Define.SCondition> conditions);
    /*0xdeec9c*/ void BindHeroManagePopupEvent();
    /*0xdee4a4*/ void BindEvent();
    /*0xdee6e4*/ void DeleteEvent();
    /*0xdefc34*/ string FindHealPercent();
    /*0xdefe20*/ string FindRevivalPercent();
    /*0xdf11a0*/ void SortHeroList();
    /*0xdf16c4*/ void SortDice();
    /*0xdf180c*/ System.Collections.IEnumerator CoWaitBossClearEffectInitMaze(ServerProtocol.ResMazeFinish_Victory instance);
    /*0xdf1658*/ System.Collections.IEnumerator CoExpireMaze();
    /*0xdf19c4*/ void <Send_MazeMateRequest>b__77_0(ServerProtocol.ResMazeMate instance);
    /*0xdf19f8*/ void <Send_UsePerfume>b__79_0(ServerProtocol.ResMazeItem instance);
    /*0xdf1b88*/ void <HandleRefreshHeroLevel>b__87_0(PTShare.Define.SHero sHero);

    class <>c__DisplayClass59_0
    {
        /*0x10*/ int heroId;

        /*0x1080e04*/ <>c__DisplayClass59_0();
        /*0x1080e0c*/ bool <FindSHero>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass61_0
    {
        /*0x10*/ int heroId;

        /*0x1080e3c*/ <>c__DisplayClass61_0();
        /*0x1080e44*/ bool <FindMazeHeroData>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass68_0
    {
        /*0x10*/ int heroId;

        /*0x1080e74*/ <>c__DisplayClass68_0();
        /*0x1080e7c*/ bool <SetHeroCondition>b__0(ConditionHeroData _hero);
    }

    class <>c__DisplayClass73_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1080eac*/ <>c__DisplayClass73_0();
        /*0x1080eb4*/ void <Send_RequestMazeEnter>b__0(ServerProtocol.ResMazeEnter instance);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action<int> callBack;

        /*0x1081200*/ <>c__DisplayClass74_0();
        /*0x1081208*/ void <Send_DiceRoll>b__0(ServerProtocol.ResMazeRoll instance);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ bool isCash;
        /*0x1c*/ int diceNumber;

        /*0x10812cc*/ <>c__DisplayClass75_0();
        /*0x10812d4*/ void <Send_DiceRequest>b__0(ServerProtocol.ResMazeDice instance);
    }

    class <>c
    {
        static /*0x0*/ MazeManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__75_1;
        static /*0x10*/ System.Comparison<ConditionHeroData> <>9__103_0;
        static /*0x18*/ System.Func<int, int> <>9__104_0;

        static /*0x1080c70*/ <>c();
        /*0x1080cd0*/ <>c();
        /*0x1080cd8*/ void <Send_DiceRequest>b__75_1(PTShare.Define.SItem m);
        /*0x1080d60*/ int <SortHeroList>b__103_0(ConditionHeroData a, ConditionHeroData b);
        /*0x1080dfc*/ int <SortDice>b__104_0(int o);
    }

    class <>c__DisplayClass76_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResMazeInfo> callBack;

        /*0x10818e0*/ <>c__DisplayClass76_0();
        /*0x10818e8*/ void <Send_MazeInfo>b__0(ServerProtocol.ResMazeInfo instance);
    }

    class <>c__DisplayClass78_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action callBack;

        /*0x1081958*/ <>c__DisplayClass78_0();
        /*0x1081960*/ void <Send_MateReset>b__0(ServerProtocol.ResMazeMateReset instance);
    }

    class <>c__DisplayClass80_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ System.Action<int> callBack_WithRandomSeed;

        /*0x1081a28*/ <>c__DisplayClass80_0();
        /*0x1081a30*/ void <Send_BeginBattle>b__0(ServerProtocol.ResMazeBegin instance);
    }

    class <>c__DisplayClass81_0
    {
        /*0x10*/ MazeManager <>4__this;
        /*0x18*/ bool isWin;
        /*0x20*/ string HpMps;
        /*0x28*/ System.Action callBack;

        /*0x1081bdc*/ <>c__DisplayClass81_0();
        /*0x1081be4*/ void <Send_FinishBattle>b__0(ServerProtocol.ResMazeFinish instance);
    }

    class <>c__DisplayClass87_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x1082044*/ <>c__DisplayClass87_0();
        /*0x108204c*/ bool <HandleRefreshHeroLevel>b__1(ConditionHeroData mazeHero);
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x1082084*/ <>c__DisplayClass88_0();
        /*0x108208c*/ bool <HandleRefreshHeroLevelSingle>b__0(ConditionHeroData mazeHero);
    }

    class <CoWaitBossClearEffectInitMaze>d__105 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ServerProtocol.ResMazeFinish_Victory instance;
        /*0x28*/ MazeManager <>4__this;

        /*0x10823dc*/ <CoWaitBossClearEffectInitMaze>d__105(int <>1__state);
        /*0x1082408*/ void System.IDisposable.Dispose();
        /*0x108240c*/ bool MoveNext();
        /*0x1082680*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082688*/ void System.Collections.IEnumerator.Reset();
        /*0x10826c8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoExpireMaze>d__106 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeManager <>4__this;

        /*0x10820c4*/ <CoExpireMaze>d__106(int <>1__state);
        /*0x10820f0*/ void System.IDisposable.Dispose();
        /*0x10820f4*/ bool MoveNext();
        /*0x108238c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082394*/ void System.Collections.IEnumerator.Reset();
        /*0x10823d4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeMatePopup : GuiBase
{
    /*0x40*/ HeroSlotInventory[] m_mateSlots;
    /*0x48*/ LocalizeString[] m_cpTexts;
    /*0x50*/ int m_selectedHeroTableId;

    /*0xdf27a0*/ MazeMatePopup();
    /*0xdf1f6c*/ void OnCreate();
    /*0xdf1f70*/ void OnDelete();
    /*0xdf1f74*/ void OnEnter();
    /*0xdf1fe0*/ void OnFinish();
    /*0xdf1fe4*/ void OnLeave();
    /*0xdf1fe8*/ void OnStart();
    /*0xdf1fec*/ void OnExit();
    /*0xdf0400*/ void InitializeMatePopup();
    /*0xdf2068*/ bool HandleClickMate(PTShare.Define.SHero sHero, bool bSelected, bool bShaded, long lPlayerID);
    /*0xdf2148*/ void OnClickSelect();
    /*0xdf23f4*/ void OnClickSelectAuto();
    /*0xdf2448*/ void OnClickReset();
    /*0xdf27b0*/ void <OnClickReset>b__14_0(bool _result);
    /*0xdf2878*/ void <OnClickReset>b__14_1();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ PTShare.Define.SHero sHero;

        /*0x10826d0*/ <>c__DisplayClass10_0();
        /*0x10826d8*/ void <InitializeMatePopup>b__0();
    }
}

class MazePerfumePopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotMaze m_scrollContent;
    /*0x48*/ AtlasImage m_perfumeIcon;
    /*0x50*/ LocalizeString m_perfumeAmountText;
    /*0x58*/ LocalizeString m_perfumeDesc;
    /*0x60*/ LocalizeString m_emptyText;
    /*0x68*/ System.Collections.Generic.List<ConditionHeroData> m_mazeHeroDataList;

    /*0xdf3854*/ MazePerfumePopup();
    /*0xdf287c*/ void OnCreate();
    /*0xdf2880*/ void OnDelete();
    /*0xdf28d4*/ void OnEnter();
    /*0xdf2a28*/ void OnFinish();
    /*0xdf2a2c*/ void OnLeave();
    /*0xdf2b84*/ void OnStart();
    /*0xdf2b88*/ void OnExit();
    /*0xdf2c04*/ void InitializeMazePopup();
    /*0xdf2da4*/ void InitializePerfumeTargetList();
    /*0xdf3028*/ void UpdatePerfume();
    /*0xdf3210*/ void ShowScrollContent();
    /*0xdf32a8*/ void HandleScrollContent(int index, HeroSlotMaze obj);
    /*0xdf294c*/ void BindEvent();
    /*0xdf2ab0*/ void DeleteEvent();
    /*0xdf34a0*/ void OnClickActive();

    class <>c__DisplayClass17_0
    {
        /*0x10*/ MazePerfumePopup <>4__this;
        /*0x18*/ int index;

        /*0x10827a4*/ <>c__DisplayClass17_0();
        /*0x10827ac*/ void <HandleScrollContent>b__0();
    }
}

class MazePopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_infoText;
    /*0x50*/ UnityEngine.GameObject m_leftBtnObject;
    /*0x58*/ System.Action<bool> m_rightButtonEvent;

    /*0xdf3a90*/ MazePopup();
    /*0xdf38cc*/ void OnCreate();
    /*0xdf38d0*/ void OnDelete();
    /*0xdf38d4*/ void OnEnter();
    /*0xdf3940*/ void OnFinish();
    /*0xdf3944*/ void OnLeave();
    /*0xdf3948*/ void OnStart();
    /*0xdf394c*/ void OnExit();
    /*0xdf02b8*/ void InitializeMazePopup(string titleKey, string infoKey, System.Action<bool> rightButtonEvent, bool isShowCancelBtn, string[] infoParam);
    /*0xdf39c8*/ void OnClickLeftButton();
    /*0xdf3a2c*/ void OnClickRightButton();
}

class MazeSelectDicePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_selectDiceEffectObject;
    /*0x48*/ AtlasImage m_priceIconImage;
    /*0x50*/ AtlasImage m_playerPriceIconImage;
    /*0x58*/ LocalizeString m_pirceAmountText;
    /*0x60*/ LocalizeString m_playerAmountText;
    /*0x68*/ LocalizeString m_selectText;
    /*0x70*/ UnityEngine.GameObject[] m_selectDiceArray;
    /*0x78*/ int m_selectDiceNumber;
    /*0x7c*/ bool m_isEnough;
    /*0x80*/ Rewards m_buyValue;

    /*0xdf44b8*/ MazeSelectDicePopup();
    /*0xdf3a98*/ void OnCreate();
    /*0xdf3a9c*/ void OnDelete();
    /*0xdf3aa0*/ void OnEnter();
    /*0xdf3b0c*/ void OnFinish();
    /*0xdf3b10*/ void OnLeave();
    /*0xdf3b88*/ void OnExit();
    /*0xdf3c04*/ void OnStart();
    /*0xdf3c08*/ void InitializeDicePopup();
    /*0xdf3d50*/ void SelectDice(int diceNumber);
    /*0xdf3e5c*/ void UpdateEnough(PTShare.Define.Currency currencyType, long buyAmount);
    /*0xdf3e90*/ void UpdatePlayerAmount(PTShare.Define.Currency currencyType);
    /*0xdf3f4c*/ void UpdatePriceCurrency(PTShare.Define.Currency currencyType, long buyAmount);
    /*0xdf4098*/ void OnClickSelectDice(int diceNumber);
    /*0xdf409c*/ void OnClickBuy();
    /*0xdf44c0*/ void <OnClickBuy>b__23_0(bool _result);
}

class MazeTileObject : UnityEngine.MonoBehaviour
{
    static /*0x0*/ string[] OUTLINE_PARTICLE_NAME;
    static /*0x8*/ string[] PUSH_PARTICLE_NAME;
    /*0x18*/ AtlasImage m_tileImage;
    /*0x20*/ AtlasImage m_tileShaderImage;
    /*0x28*/ AtlasImage m_iconImage;
    /*0x30*/ AtlasImage m_iconShadow;
    /*0x38*/ ShaderChanger m_shaderChanger;
    /*0x40*/ UnityEngine.GameObject m_particleParent;
    /*0x48*/ UnityEngine.GameObject m_iconParent;
    /*0x50*/ UnityEngine.CanvasGroup m_tileObjectParent;
    /*0x58*/ int m_mazeIndex;
    /*0x5c*/ float m_mazeHeight;
    /*0x60*/ DefineMaze.MOVE_TYPE m_mazeMoveType;
    /*0x64*/ TILE_TYPE m_mazeTileType;
    /*0x68*/ DefineMaze.TILE_OUTLINE_TYPE m_tileOutLineType;
    /*0x6c*/ UnityEngine.Vector3 m_originalLocalPosition;
    /*0x78*/ UnityEngine.Coroutine m_iconCoroutine;

    static /*0xdf5d60*/ MazeTileObject();
    /*0xdf5d44*/ MazeTileObject();
    /*0xdf454c*/ void ClearTile();
    /*0xdf4988*/ void InitializedTile(int mazeIndex, DefineMaze.MOVE_TYPE moveType, TILE_TYPE tileType);
    /*0xdf5288*/ void SetStartTile(DefineMaze.MOVE_TYPE nextMoveType);
    /*0xdf53e8*/ DefineMaze.MOVE_TYPE GetMoveType();
    /*0xdf53f0*/ TILE_TYPE GetTileType();
    /*0xdf53f8*/ float GetHeight();
    /*0xdf5400*/ void SetTileType(TILE_TYPE tileType);
    /*0xdf470c*/ void SetTileObjectParent(UnityEngine.GameObject target);
    /*0xdf5408*/ void AddTileObject(UnityEngine.GameObject target);
    /*0xdf554c*/ void ShowTileObject(float time);
    /*0xdf559c*/ void HideTileObject(float time);
    /*0xdf4b18*/ void SetIcon(bool isEnable);
    /*0xdf4878*/ void SetParticleParent(UnityEngine.GameObject target);
    /*0xdf55ec*/ void ShowOutLineTile(DefineMaze.TILE_OUTLINE_TYPE outlineType, UnityEngine.GameObject target);
    /*0xdf5124*/ void ReturnParticles();
    /*0xdf5768*/ void SetCloseRoute();
    /*0xdf4c3c*/ void SetColorTile(UnityEngine.Color color);
    /*0xdf5214*/ void UpdateIcon();
    /*0xdf5818*/ void RequestAwake(float time);
    /*0xdf5a0c*/ void RequestAwakeTileDown(float time);
    /*0xdf5ab4*/ void RequestWlalk(float inTime, float centerTime, float outTime);
    /*0xdf5b70*/ void RequestWlalkIn(float inTime, float centerTime);
    /*0xdf5c20*/ void RequestWlalkOut(float outTime);
    /*0xdf58a4*/ System.Collections.IEnumerator AwakeEffect(float time);
    /*0xdf598c*/ System.Collections.IEnumerator AwakeShaderBlack(float waitTime, float showTime);
    /*0xdf5920*/ System.Collections.IEnumerator AwakeShaderEffect();
    /*0xdf5ae0*/ System.Collections.IEnumerator WalkUpdate(float inTime, float centerTime, float outTime);
    /*0xdf5a38*/ System.Collections.IEnumerator AwakeTileDown(float centerTime);
    /*0xdf5b9c*/ System.Collections.IEnumerator WalkIn(float inTime, float centerTime);
    /*0xdf5c4c*/ System.Collections.IEnumerator WalkOut(float outTime);
    /*0xdf5cc8*/ System.Collections.IEnumerator CoPlayPushParticle(DefineMaze.TILE_OUTLINE_TYPE type);
    /*0xdf4c5c*/ void UpdateTileType();
    /*0xdf57ac*/ System.Collections.IEnumerator CoIconUpdate();

    class <AwakeEffect>d__40 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float time;
        /*0x2c*/ UnityEngine.Vector3 <end>5__2;

        /*0x108292c*/ <AwakeEffect>d__40(int <>1__state);
        /*0x1082958*/ void System.IDisposable.Dispose();
        /*0x108295c*/ bool MoveNext();
        /*0x1082b0c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082b14*/ void System.Collections.IEnumerator.Reset();
        /*0x1082b54*/ object System.Collections.IEnumerator.get_Current();
    }

    class <AwakeShaderBlack>d__41 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float waitTime;
        /*0x2c*/ float showTime;

        /*0x1082b5c*/ <AwakeShaderBlack>d__41(int <>1__state);
        /*0x1082b88*/ void System.IDisposable.Dispose();
        /*0x1082b8c*/ bool MoveNext();
        /*0x1082cac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082cb4*/ void System.Collections.IEnumerator.Reset();
        /*0x1082cf4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <AwakeShaderEffect>d__42 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float <speed>5__2;
        /*0x2c*/ float <t>5__3;

        /*0x1082cfc*/ <AwakeShaderEffect>d__42(int <>1__state);
        /*0x1082d28*/ void System.IDisposable.Dispose();
        /*0x1082d2c*/ bool MoveNext();
        /*0x1082f84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1082f8c*/ void System.Collections.IEnumerator.Reset();
        /*0x1082fcc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <WalkUpdate>d__43 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float inTime;
        /*0x2c*/ float centerTime;
        /*0x30*/ float outTime;

        /*0x1083c28*/ <WalkUpdate>d__43(int <>1__state);
        /*0x1083c54*/ void System.IDisposable.Dispose();
        /*0x1083c58*/ bool MoveNext();
        /*0x1083d1c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083d24*/ void System.Collections.IEnumerator.Reset();
        /*0x1083d64*/ object System.Collections.IEnumerator.get_Current();
    }

    class <AwakeTileDown>d__44 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;
        /*0x28*/ float centerTime;

        /*0x1082fd4*/ <AwakeTileDown>d__44(int <>1__state);
        /*0x1083000*/ void System.IDisposable.Dispose();
        /*0x1083004*/ bool MoveNext();
        /*0x1083170*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083178*/ void System.Collections.IEnumerator.Reset();
        /*0x10831b8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <WalkIn>d__45 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float inTime;
        /*0x28*/ MazeTileObject <>4__this;
        /*0x30*/ float centerTime;
        /*0x34*/ UnityEngine.Vector3 <origPosition>5__2;
        /*0x40*/ UnityEngine.Vector3 <currPosition>5__3;
        /*0x4c*/ float <time>5__4;

        /*0x1083714*/ <WalkIn>d__45(int <>1__state);
        /*0x1083740*/ void System.IDisposable.Dispose();
        /*0x1083744*/ bool MoveNext();
        /*0x108396c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083974*/ void System.Collections.IEnumerator.Reset();
        /*0x10839b4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <WalkOut>d__46 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float outTime;
        /*0x28*/ MazeTileObject <>4__this;
        /*0x30*/ UnityEngine.Vector3 <origPosition>5__2;
        /*0x3c*/ UnityEngine.Vector3 <currPosition>5__3;

        /*0x10839bc*/ <WalkOut>d__46(int <>1__state);
        /*0x10839e8*/ void System.IDisposable.Dispose();
        /*0x10839ec*/ bool MoveNext();
        /*0x1083bd8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083be0*/ void System.Collections.IEnumerator.Reset();
        /*0x1083c20*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayPushParticle>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ DefineMaze.TILE_OUTLINE_TYPE type;
        /*0x28*/ MazeTileObject <>4__this;
        /*0x30*/ ParticleBase <obj>5__2;

        /*0x1083460*/ <CoPlayPushParticle>d__47(int <>1__state);
        /*0x108348c*/ void System.IDisposable.Dispose();
        /*0x1083490*/ bool MoveNext();
        /*0x10836c4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10836cc*/ void System.Collections.IEnumerator.Reset();
        /*0x108370c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoIconUpdate>d__49 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeTileObject <>4__this;

        /*0x10831c0*/ <CoIconUpdate>d__49(int <>1__state);
        /*0x10831ec*/ void System.IDisposable.Dispose();
        /*0x10831f0*/ bool MoveNext();
        /*0x1083410*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1083418*/ void System.Collections.IEnumerator.Reset();
        /*0x1083458*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MazeWindow : GuiBase
{
    static int ZOOM_FINGER_COUNT = 2;
    static float m_heroTimeScale = 1;
    static /*0x0*/ System.Action OnEndFinishEffect;
    static /*0x8*/ System.Action OnRequestEscape;
    static /*0x10*/ System.Action OnResetIcon;
    /*0x40*/ MazeTileObject m_mazeTilePrefab;
    /*0x48*/ LocalizeString m_titleText;
    /*0x50*/ LocalizeString m_mazeResetText;
    /*0x58*/ UnityEngine.UI.Text m_bossLeftCountText;
    /*0x60*/ UnityEngine.UI.ScrollRect m_mazeScrollRect;
    /*0x68*/ TweenImageColor m_fadeTween;
    /*0x70*/ UnityEngine.GameObject m_mazeParent;
    /*0x78*/ UnityEngine.GameObject m_mazeCamera;
    /*0x80*/ ParticleBase[] m_mazeParticles;
    /*0x88*/ UnityEngine.GameObject m_tileParticleParent;
    /*0x90*/ UnityEngine.UI.Text[] m_tileNumbers;
    /*0x98*/ UnityEngine.CanvasGroup m_tileNumberParent;
    /*0xa0*/ UnityEngine.GameObject m_tileObjectParent;
    /*0xa8*/ AtlasImage m_enemyFlagPrefab;
    /*0xb0*/ AtlasImage m_bossFlagPrefab;
    /*0xb8*/ UnityEngine.GameObject m_heroParent;
    /*0xc0*/ Spine.Unity.SkeletonGraphic m_heroCharacter;
    /*0xc8*/ Spine.Unity.SkeletonGraphic m_effectSpine;
    /*0xd0*/ UnityEngine.GameObject m_enemyParent;
    /*0xd8*/ Spine.Unity.SkeletonGraphic m_enemyCharacter;
    /*0xe0*/ UnityEngine.GameObject m_mazeClearObject;
    /*0xe8*/ ParticleBase m_mazeClearParticle;
    /*0xf0*/ MazeDiceSpineEffect m_mazeDiceSpineEffect;
    /*0xf8*/ MazeDiceImageEffect m_mazeDiceImageEffect;
    /*0x100*/ MazeItemNotify m_mazeItemEffect;
    /*0x108*/ AtlasImage m_perfumeButtonIcon;
    /*0x110*/ AtlasImage m_heroButtonIcon;
    /*0x118*/ AtlasImage m_selectDiceButtonIcon;
    /*0x120*/ AtlasImage m_randomDiceButtonIcon;
    /*0x128*/ float m_fastValue;
    /*0x130*/ AtlasImage m_fastImage;
    /*0x138*/ UnityEngine.GameObject m_fastObject;
    /*0x140*/ MazeDiceGroup m_diceGroup;
    /*0x148*/ System.Action m_onEffectEndCallback;
    /*0x150*/ System.Action m_onCharacterAnimEndCallback;
    /*0x158*/ System.Collections.Generic.List<MazeTileObject> m_mazeTileList;
    /*0x160*/ UnityEngine.Rect m_minmax;
    /*0x170*/ UnityEngine.Vector3 m_heroLeftLook;
    /*0x17c*/ UnityEngine.Vector3 m_heroRightLook;
    /*0x188*/ bool m_waitDice;
    /*0x18c*/ float m_zoomValue;
    /*0x190*/ bool m_fast;
    /*0x191*/ bool m_isSlime;
    /*0x198*/ UnityEngine.Coroutine m_refreshCoroutine;
    /*0x1a0*/ UnityEngine.Coroutine m_timerCoroutine;
    /*0x1a8*/ UnityEngine.Coroutine m_autoCoroutine;

    static /*0xdfba44*/ MazeWindow();
    /*0xdfb970*/ MazeWindow();
    /*0xdf5f10*/ void OnCreate();
    /*0xdf5f14*/ void OnDelete();
    /*0xdf6378*/ void OnEnter();
    /*0xdf6b04*/ void OnFinish();
    /*0xdf6b08*/ void OnLeave();
    /*0xdf6c4c*/ void OnStart();
    /*0xdf6c50*/ void OnExit();
    /*0xdf678c*/ void InitMaze();
    /*0xdf6e6c*/ void CreateMaze();
    /*0xdf830c*/ void SortTiles();
    /*0xdf84a4*/ System.Collections.IEnumerator CoLateSortObjects();
    /*0xdf81e8*/ System.Collections.IEnumerator CoAuto();
    /*0xdf8884*/ void UpdateSortObjects();
    /*0xdf6b30*/ void ClearMaze();
    /*0xdf8510*/ void SetScrollRectField();
    /*0xdf8254*/ void UpdateMinMaxWindowSize(UnityEngine.Vector3 checker);
    /*0xdf7618*/ void UpdateTitle();
    /*0xdf7adc*/ void UpdateMazeResetTime();
    /*0xdf7728*/ void UpdateBossLeftStep(int currentStep);
    /*0xdf8cb4*/ int GetLeftStep(int currentStep);
    /*0xdf8e60*/ void UpdateEnemyCharacter(int tableid, int grade);
    /*0xdf77c0*/ void UpdateHeroCharacter();
    /*0xdf8fdc*/ void UpdateEffectAnim(string key, string animName, float timeScale);
    /*0xdf7960*/ void UpdateCharacterAnim(Spine.Unity.SkeletonGraphic target, string animName, bool isLoop, float timeScale);
    /*0xdf8068*/ void UpdateHeroLook(MazeTileObject destTile);
    /*0xdf934c*/ void UpdateRouteTileOutline(int startIndex, int endIndex);
    /*0xdf7eac*/ void UpdateCloseRoute();
    /*0xdf6db8*/ void UpdateZoom();
    /*0xdf7f64*/ void UpdateFastIcon();
    /*0xdf817c*/ System.Collections.IEnumerator CoPlayEnterEffect();
    /*0xdf9440*/ System.Collections.IEnumerator CoPlayEnterTheStage();
    /*0xdf94ac*/ System.Collections.IEnumerator CoPlayFinishEffect();
    /*0xdf8120*/ System.Collections.IEnumerator CoCheckShowTilePopup();
    /*0xdf9518*/ System.Collections.IEnumerator CoAwakeMazeEffectTile();
    /*0xdf9584*/ System.Collections.IEnumerator CoShowFade(float fadeOutTime, float fadeInTime);
    /*0xdf9604*/ System.Collections.IEnumerator CoRandomRollDice();
    /*0xdf9670*/ void PlayDiceSpine(int diceNumber);
    /*0xdf9bc8*/ System.Collections.IEnumerator CoChoiceDice(int selectNumber);
    /*0xdf9968*/ System.Collections.IEnumerator CoMoveHero(int oldIndex, int newIndex);
    /*0xdf9c44*/ System.Collections.IEnumerator CoFastMoveCamera(UnityEngine.Vector3 dest, float moveTime);
    /*0xdf9cdc*/ System.Collections.IEnumerator CoSmoothMoveCamera(int startIndex, int endIndex, float moveTime);
    /*0xdf9d6c*/ System.Collections.IEnumerator CoJumpMoveHero(int startIndex, int endIndex, float moveTime);
    /*0xdf9e00*/ System.Collections.IEnumerator CoPlayParticle(MazeWindow.MAZE_PARTICLE mazeParticle);
    /*0xdf6d34*/ void StartRefreshTimer();
    /*0xdf9e7c*/ System.Collections.IEnumerator CoRefreshTimer();
    /*0xdf9ee8*/ System.Collections.IEnumerator CoUpdateTimer();
    /*0xdf9f54*/ void StandHeroTileDonw();
    /*0xdf9924*/ void WaitDiceStart(bool disableTileNumber);
    /*0xdf75e0*/ void WaitDiceEnd();
    /*0xdfa034*/ void UpdateTileNumber(bool enable);
    /*0xdf8c04*/ UnityEngine.Vector3 GetTileLocalPositionToCamera(int index);
    /*0xdf8b7c*/ UnityEngine.Vector3 GetTileLocalPosition(int index);
    /*0xdfa3e8*/ void ShowClearEffect();
    /*0xdf74e4*/ void HideClearEffect();
    /*0xdf7534*/ void HideParticles();
    /*0xdf99e8*/ void ShowEnemyCharacter(int tableId, int grade);
    /*0xdf75b0*/ void HideEnemyCharacter();
    /*0xdf7504*/ void HideEffectSpine();
    /*0xdf639c*/ void BindEvent();
    /*0xdf5f18*/ void DeleteEvent();
    /*0xdfa434*/ void HandleDiceResponse(int diceNumber);
    /*0xdfa4f8*/ void HandleDiceResponseCash(int diceNumber);
    /*0xdfa508*/ void HandleShowEffect(TILE_TYPE tileType);
    /*0xdfa720*/ void HandleCharacterAnimComplete(Spine.TrackEntry trackEntry);
    /*0xdfa820*/ void HandleEffectSpineComplete(Spine.TrackEntry trackEntry);
    /*0xdfa8e4*/ void HandleCharacterAnimEndBattle();
    /*0xdfaa64*/ void HandleNewCreateMaze();
    /*0xdfaa68*/ void HandleRandomReward();
    /*0xdfaac8*/ void HandleRequestEscape();
    /*0xdf6c80*/ void HandleButtonIconReset();
    /*0xdfabac*/ void HandleFreeDiceSelect(int diceNumber);
    /*0xdfad7c*/ void OnClickHelp();
    /*0xdfae20*/ void OnClickExit();
    /*0xdfaec0*/ void OnClickPerfume();
    /*0xdfafe8*/ void OnClickHero();
    /*0xdfb0a8*/ void OnClickHeroCharacter();
    /*0xdfb198*/ void OnClickRandomDice();
    /*0xdfb2ec*/ void OnClickSelectDice();
    /*0xdfb41c*/ void OnClickMazeShop();
    /*0xdfb538*/ void OnClickHideClearEffect();
    /*0xdfb53c*/ void OnClickFastToggle();
    /*0xdfb578*/ void OnClickAuto();
    /*0xdfb628*/ void OnClickBossInfo();
    /*0xdfac34*/ bool CheckAndUpdateLeftWork();
    /*0xdfb750*/ void Update();
    /*0xdfba48*/ void <CoRandomRollDice>b__87_0(int number);
    /*0xdfbb04*/ void <CoRandomRollDice>b__87_1();
    /*0xdfbba8*/ bool <CoRefreshTimer>b__96_0();

    enum MAZE_PARTICLE
    {
        HEAL = 0,
        REVIVE = 1,
        WIN = 2,
        NULL = 3,
    }

    class <CoLateSortObjects>d__62 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10857bc*/ <CoLateSortObjects>d__62(int <>1__state);
        /*0x10857e8*/ void System.IDisposable.Dispose();
        /*0x10857ec*/ bool MoveNext();
        /*0x1085844*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108584c*/ void System.Collections.IEnumerator.Reset();
        /*0x108588c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoAuto>d__63 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10841e0*/ <CoAuto>d__63(int <>1__state);
        /*0x108420c*/ void System.IDisposable.Dispose();
        /*0x1084210*/ bool MoveNext();
        /*0x1084568*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084570*/ void System.Collections.IEnumerator.Reset();
        /*0x10845b0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ MazeWindow.<> <>9;
        static /*0x8*/ System.Comparison<UnityEngine.CanvasGroup> <>9__64_0;
        static /*0x10*/ System.Predicate<TILE_TYPE> <>9__71_0;
        static /*0x18*/ System.Action<bool> <>9__96_1;
        static /*0x20*/ System.Action <>9__130_1;
        static /*0x28*/ System.Action <>9__130_0;
        static /*0x30*/ System.Action<ServerProtocol.ResMazeInfo> <>9__134_0;

        static /*0x1083d6c*/ <>c();
        /*0x1083dcc*/ <>c();
        /*0x1083dd4*/ int <UpdateSortObjects>b__64_0(UnityEngine.CanvasGroup lhs, UnityEngine.CanvasGroup rhs);
        /*0x1083e44*/ bool <GetLeftStep>b__71_0(TILE_TYPE type);
        /*0x1083e50*/ void <CoRefreshTimer>b__96_1(bool _result);
        /*0x1083f40*/ void <OnClickMazeShop>b__130_0();
        /*0x1084088*/ void <OnClickMazeShop>b__130_1();
        /*0x108410c*/ void <OnClickBossInfo>b__134_0(ServerProtocol.ResMazeInfo response);
    }

    class <CoPlayEnterEffect>d__81 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ bool <isShowEnterStageHero>5__2;

        /*0x1085af4*/ <CoPlayEnterEffect>d__81(int <>1__state);
        /*0x1085b20*/ void System.IDisposable.Dispose();
        /*0x1085b24*/ bool MoveNext();
        /*0x1085ec4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1085ecc*/ void System.Collections.IEnumerator.Reset();
        /*0x1085f0c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayEnterTheStage>d__82 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x1085f14*/ <CoPlayEnterTheStage>d__82(int <>1__state);
        /*0x1085f40*/ void System.IDisposable.Dispose();
        /*0x1085f44*/ bool MoveNext();
        /*0x108609c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10860a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10860e4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayFinishEffect>d__83 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10860ec*/ <CoPlayFinishEffect>d__83(int <>1__state);
        /*0x1086118*/ void System.IDisposable.Dispose();
        /*0x108611c*/ bool MoveNext();
        /*0x108645c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086464*/ void System.Collections.IEnumerator.Reset();
        /*0x10864a4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCheckShowTilePopup>d__84 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0x10848ec*/ <CoCheckShowTilePopup>d__84(int <>1__state);
        /*0x1084918*/ void System.IDisposable.Dispose();
        /*0x108491c*/ bool MoveNext();
        /*0x1084a48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084a50*/ void System.Collections.IEnumerator.Reset();
        /*0x1084a90*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoAwakeMazeEffectTile>d__85 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ float <waitTime>5__2;
        /*0x2c*/ int <i>5__3;

        /*0x10845b8*/ <CoAwakeMazeEffectTile>d__85(int <>1__state);
        /*0x10845e4*/ void System.IDisposable.Dispose();
        /*0x10845e8*/ bool MoveNext();
        /*0x108489c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10848a4*/ void System.Collections.IEnumerator.Reset();
        /*0x10848e4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShowFade>d__86 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ float fadeOutTime;
        /*0x2c*/ float fadeInTime;

        /*0x1086f98*/ <CoShowFade>d__86(int <>1__state);
        /*0x1086fc4*/ void System.IDisposable.Dispose();
        /*0x1086fc8*/ bool MoveNext();
        /*0x10872c0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10872c8*/ void System.Collections.IEnumerator.Reset();
        /*0x1087308*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRandomRollDice>d__87 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10866c8*/ <CoRandomRollDice>d__87(int <>1__state);
        /*0x10866f4*/ void System.IDisposable.Dispose();
        /*0x10866f8*/ bool MoveNext();
        /*0x108685c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086864*/ void System.Collections.IEnumerator.Reset();
        /*0x10868a4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass88_0
    {
        /*0x10*/ MazeWindow <>4__this;
        /*0x18*/ int diceNumber;

        /*0x1084198*/ <>c__DisplayClass88_0();
        /*0x10841a0*/ void <PlayDiceSpine>b__0();
    }

    class <CoChoiceDice>d__89 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ int selectNumber;
        /*0x2c*/ int <newIndex>5__2;
        /*0x30*/ int <oldIndex>5__3;

        /*0x1084a98*/ <CoChoiceDice>d__89(int <>1__state);
        /*0x1084ac4*/ void System.IDisposable.Dispose();
        /*0x1084ac8*/ bool MoveNext();
        /*0x1084df0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084df8*/ void System.Collections.IEnumerator.Reset();
        /*0x1084e38*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoMoveHero>d__90 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ int oldIndex;
        /*0x2c*/ int newIndex;
        /*0x30*/ float <moveTime>5__2;

        /*0x1085894*/ <CoMoveHero>d__90(int <>1__state);
        /*0x10858c0*/ void System.IDisposable.Dispose();
        /*0x10858c4*/ bool MoveNext();
        /*0x1085aa4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1085aac*/ void System.Collections.IEnumerator.Reset();
        /*0x1085aec*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoFastMoveCamera>d__91 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float moveTime;
        /*0x28*/ MazeWindow <>4__this;
        /*0x30*/ UnityEngine.Vector3 dest;
        /*0x3c*/ float <speed>5__2;
        /*0x40*/ UnityEngine.Vector3 <startPosition>5__3;
        /*0x4c*/ float <t>5__4;

        /*0x1084e40*/ <CoFastMoveCamera>d__91(int <>1__state);
        /*0x1084e6c*/ void System.IDisposable.Dispose();
        /*0x1084e70*/ bool MoveNext();
        /*0x1084fcc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1084fd4*/ void System.Collections.IEnumerator.Reset();
        /*0x1085014*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSmoothMoveCamera>d__92 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float moveTime;
        /*0x24*/ int endIndex;
        /*0x28*/ int startIndex;
        /*0x30*/ MazeWindow <>4__this;
        /*0x38*/ float <speed>5__2;
        /*0x3c*/ int <count>5__3;
        /*0x40*/ int <i>5__4;
        /*0x44*/ UnityEngine.Vector3 <startPosition>5__5;
        /*0x50*/ UnityEngine.Vector3 <endPosition>5__6;
        /*0x5c*/ float <t>5__7;

        /*0x1087310*/ <CoSmoothMoveCamera>d__92(int <>1__state);
        /*0x108733c*/ void System.IDisposable.Dispose();
        /*0x1087340*/ bool MoveNext();
        /*0x10874e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10874f0*/ void System.Collections.IEnumerator.Reset();
        /*0x1087530*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoJumpMoveHero>d__93 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ int startIndex;
        /*0x2c*/ float moveTime;
        /*0x30*/ int endIndex;
        /*0x34*/ float <walkInTime>5__2;
        /*0x38*/ float <walkCenterTime>5__3;
        /*0x3c*/ float <walkOutTime>5__4;
        /*0x40*/ float <time>5__5;
        /*0x44*/ float <speed>5__6;
        /*0x48*/ int <count>5__7;
        /*0x4c*/ int <i>5__8;
        /*0x50*/ UnityEngine.Vector3 <startPosition>5__9;
        /*0x5c*/ UnityEngine.Vector3 <endPosition>5__10;
        /*0x68*/ float <t>5__11;
        /*0x6c*/ UnityEngine.Vector2 <jumpVector>5__12;

        /*0x108501c*/ <CoJumpMoveHero>d__93(int <>1__state);
        /*0x1085048*/ void System.IDisposable.Dispose();
        /*0x108504c*/ bool MoveNext();
        /*0x108576c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1085774*/ void System.Collections.IEnumerator.Reset();
        /*0x10857b4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoPlayParticle>d__94 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;
        /*0x28*/ MazeWindow.MAZE_PARTICLE mazeParticle;

        /*0x10864ac*/ <CoPlayParticle>d__94(int <>1__state);
        /*0x10864d8*/ void System.IDisposable.Dispose();
        /*0x10864dc*/ bool MoveNext();
        /*0x1086678*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086680*/ void System.Collections.IEnumerator.Reset();
        /*0x10866c0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshTimer>d__96 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x10868ac*/ <CoRefreshTimer>d__96(int <>1__state);
        /*0x10868d8*/ void System.IDisposable.Dispose();
        /*0x10868dc*/ bool MoveNext();
        /*0x1086f48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1086f50*/ void System.Collections.IEnumerator.Reset();
        /*0x1086f90*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoUpdateTimer>d__97 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MazeWindow <>4__this;

        /*0x1087538*/ <CoUpdateTimer>d__97(int <>1__state);
        /*0x1087564*/ void System.IDisposable.Dispose();
        /*0x1087568*/ bool MoveNext();
        /*0x10875d0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10875d8*/ void System.Collections.IEnumerator.Reset();
        /*0x1087618*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct MercenaryPlayerSet
{
    /*0x10*/ PTShare.Define.SHero hero;
    /*0x18*/ long playerid;
    /*0x20*/ bool myReq;

    /*0xc2e2cc*/ MercenaryPlayerSet(PTShare.Define.SHero hero, long playerid);
    /*0xc2e2d8*/ MercenaryPlayerSet(PTShare.Define.SHero hero, bool myReq);
}

class MercenaryManager : Singleton.Data.SingletonData<MercenaryManager>
{
    static /*0x0*/ bool <FirstGuildInitialize>k__BackingField;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> m_curRentList;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> m_curMercenaryList;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLend> m_curLendList;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> m_curLendedList;
    /*0x40*/ CMercenarySort_Grade m_sortMercenaryGrade;
    /*0x48*/ CMercenarySort_Rented m_sortMercenaryRented;
    /*0x50*/ bool m_isLendRequest;
    /*0x58*/ PTShare.Define.SModeCount <UseMercenary>k__BackingField;
    /*0x60*/ int _nArrIndex;
    /*0x64*/ int _nStartCount;
    /*0x68*/ int _nEndCount;
    /*0x70*/ PTShare.Define.SMercenaryRent _sRentInfo;

    static /*0x2b3f84c*/ MercenaryManager();
    static /*0x2b3d388*/ bool get_FirstGuildInitialize();
    static /*0x2b3d3ec*/ void set_FirstGuildInitialize(bool value);
    /*0x2b3f69c*/ MercenaryManager();
    /*0x2b3d2f8*/ PTShare.Define.SModeCount get_UseMercenary();
    /*0x2b3d300*/ void set_UseMercenary(PTShare.Define.SModeCount value);
    /*0x2b3d308*/ string get_UserToken();
    /*0x2b3d458*/ bool InitInstance();
    /*0x2b3d5a8*/ void ReleaseInstance();
    /*0x2b3d644*/ void Send_RentList(System.Action _callback);
    /*0x2b3d814*/ void Send_Rent(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3d9fc*/ void Send_CancelRent(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3dbe4*/ void Send_ReturnRent(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3d474*/ void Send_LendList(System.Action _callback);
    /*0x2b3ca34*/ void Send_Lend(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3df04*/ void Send_FastLend(System.Action _callback);
    /*0x2b3cc6c*/ void Send_DenyLend(System.Action _callback, long _playerid, int _heroid);
    /*0x2b3e170*/ void Send_DenyLendAll(System.Action _callback);
    /*0x2b3e340*/ void SetRentedList(System.Collections.Generic.List<PTShare.Define.SMercenaryRented> _rentedList);
    /*0x2b3e478*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> GetRentList();
    /*0x2b3e480*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> FindMercenaryList(int _tableid);
    /*0x2b3e5e8*/ PTShare.Define.SHero FindRentHero(int _nHeroID, long _lPlayerID);
    /*0x2b3e6e0*/ int GetRentHeroLevel(int _nHeroID, long _lPlayerID);
    /*0x2b3e7e4*/ PTShare.Define.SMercenaryRent GetRantHeroID(int _nHeroID);
    /*0x2b3e948*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLend> GetLendList();
    /*0x2b3e950*/ System.Collections.Generic.List<PTShare.Define.SMercenaryLended> GetLendedList();
    /*0x2b3e958*/ bool IsVaildRentedMercenary(long _playerid, int _heroid);
    /*0x2b3ea5c*/ bool IsVaildRequestMercenary(int _tableid);
    /*0x2b3eb58*/ System.Collections.Generic.List<MercenaryPlayerSet> GetLendPlayersList();
    /*0x2b3ee40*/ int GetRequestRentCount();
    /*0x2b3ef5c*/ System.Collections.Generic.List<MercenaryPlayerSet> FindRepresentativeMercenaryToSHero();
    /*0x2b3f27c*/ void SetSModeCount(PTShare.Define.SModeCount _SModeCount);
    /*0x2b3f288*/ void RequestRentMercenary(long _playerid, int _heroid, int _reqCount, bool _request);
    /*0x2b3f42c*/ void RemoveRentMercenary(int _heroid);
    /*0x2b3f55c*/ void RemoveLentMercenary(int _heroid);
    /*0x2b3f68c*/ bool GetIsLendReddot();
    /*0x2b3f694*/ void SetHideLendReddot();

    class <>c__DisplayClass23_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087a4c*/ <>c__DisplayClass23_0();
        /*0x1087a54*/ void <Send_RentList>b__0(ServerProtocol.ResMercenaryRentList response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087ab0*/ <>c__DisplayClass24_0();
        /*0x1087ab8*/ void <Send_Rent>b__0(ServerProtocol.ResMercenaryRent response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087b10*/ <>c__DisplayClass25_0();
        /*0x1087b18*/ void <Send_CancelRent>b__0(ServerProtocol.ResMercenaryRentCancel response);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087b70*/ <>c__DisplayClass26_0();
        /*0x1087b78*/ void <Send_ReturnRent>b__0(ServerProtocol.ResMercenaryRentReturn response);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087c24*/ <>c__DisplayClass27_0();
        /*0x1087c2c*/ void <Send_LendList>b__0(ServerProtocol.ResMercenaryLendList response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087c78*/ <>c__DisplayClass28_0();
        /*0x1087c80*/ void <Send_Lend>b__0(ServerProtocol.ResMercenaryLend response);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087d48*/ <>c__DisplayClass29_0();
        /*0x1087d50*/ void <Send_FastLend>b__0(ServerProtocol.ResMercenaryLendFast response);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x1087ec4*/ <>c__DisplayClass30_0();
        /*0x1087ecc*/ void <Send_DenyLend>b__0(ServerProtocol.ResMercenaryLendDeny response);
    }

    class <>c__DisplayClass30_1
    {
        /*0x10*/ ServerProtocol.ResMercenaryLendDeny response;

        /*0x108807c*/ <>c__DisplayClass30_1();
        /*0x1088084*/ bool <Send_DenyLend>b__1(PTShare.Define.SMercenaryLend x);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ MercenaryManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0x10880bc*/ <>c__DisplayClass31_0();
        /*0x10880c4*/ void <Send_DenyLendAll>b__0(ServerProtocol.ResMercenaryLendDenyAll response);
    }

    class <>c
    {
        static /*0x0*/ MercenaryManager.<> <>9;
        static /*0x8*/ System.Converter<PTShare.Define.SMercenaryRented, PTShare.Define.SMercenaryRent> <>9__32_0;
        static /*0x10*/ System.Func<PTShare.Define.SMercenaryRent, bool> <>9__43_0;
        static /*0x18*/ System.Func<PTShare.Define.SMercenaryRent, int> <>9__44_0;
        static /*0x20*/ System.Func<System.Linq.IGrouping<int, PTShare.Define.SMercenaryRent>, PTShare.Define.SMercenaryRent> <>9__44_1;
        static /*0x28*/ System.Converter<PTShare.Define.SMercenaryRent, MercenaryPlayerSet> <>9__44_2;

        static /*0x1087898*/ <>c();
        /*0x10878f8*/ <>c();
        /*0x1087900*/ PTShare.Define.SMercenaryRent <SetRentedList>b__32_0(PTShare.Define.SMercenaryRented x);
        /*0x10879a8*/ bool <GetRequestRentCount>b__43_0(PTShare.Define.SMercenaryRent x);
        /*0x10879c0*/ int <FindRepresentativeMercenaryToSHero>b__44_0(PTShare.Define.SMercenaryRent x);
        /*0x10879d8*/ PTShare.Define.SMercenaryRent <FindRepresentativeMercenaryToSHero>b__44_1(System.Linq.IGrouping<int, PTShare.Define.SMercenaryRent> x);
        /*0x1087a24*/ MercenaryPlayerSet <FindRepresentativeMercenaryToSHero>b__44_2(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ int _tableid;

        /*0x108813c*/ <>c__DisplayClass34_0();
        /*0x1088144*/ bool <FindMercenaryList>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ int _nHeroID;
        /*0x18*/ long _lPlayerID;

        /*0x1088168*/ <>c__DisplayClass35_0();
        /*0x1088170*/ bool <FindRentHero>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ int _nHeroID;
        /*0x18*/ long _lPlayerID;

        /*0x10881ac*/ <>c__DisplayClass36_0();
        /*0x10881b4*/ bool <GetRentHeroLevel>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ int _nHeroID;

        /*0x10881f0*/ <>c__DisplayClass37_0();
        /*0x10881f8*/ bool <GetRantHeroID>b__0(PTShare.Define.SMercenaryRent x);
        /*0x108821c*/ bool <GetRantHeroID>b__1(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass40_0
    {
        /*0x10*/ long _playerid;
        /*0x18*/ int _heroid;

        /*0x1088240*/ <>c__DisplayClass40_0();
        /*0x1088248*/ bool <IsVaildRentedMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ int _tableid;

        /*0x1088284*/ <>c__DisplayClass41_0();
        /*0x108828c*/ bool <IsVaildRequestMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ System.Converter<long, MercenaryPlayerSet> <>9__0;

        /*0x10882c4*/ <>c__DisplayClass42_0();
        /*0x10882cc*/ MercenaryPlayerSet <GetLendPlayersList>b__0(long x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ long _playerid;
        /*0x18*/ int _heroid;

        /*0x10882e8*/ <>c__DisplayClass46_0();
        /*0x10882f0*/ bool <RequestRentMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass47_0
    {
        /*0x10*/ int _heroid;

        /*0x108832c*/ <>c__DisplayClass47_0();
        /*0x1088334*/ bool <RemoveRentMercenary>b__0(PTShare.Define.SMercenaryRent x);
    }

    class <>c__DisplayClass48_0
    {
        /*0x10*/ int _heroid;

        /*0x1088358*/ <>c__DisplayClass48_0();
        /*0x1088360*/ bool <RemoveLentMercenary>b__0(PTShare.Define.SMercenaryLend x);
    }
}

class CMercenarySort_Grade : System.Collections.Generic.IComparer<PTShare.Define.SMercenaryRent>
{
    /*0x133fa2c*/ CMercenarySort_Grade();
    /*0x133f9d4*/ int Compare(PTShare.Define.SMercenaryRent left, PTShare.Define.SMercenaryRent right);
}

class CMercenarySort_Rented : System.Collections.Generic.IComparer<PTShare.Define.SMercenaryRent>
{
    /*0x133fa8c*/ CMercenarySort_Rented();
    /*0x133fa34*/ int Compare(PTShare.Define.SMercenaryRent left, PTShare.Define.SMercenaryRent right);
}

class OptionManager : Singleton.Data.SingletonData<OptionManager>
{
    static /*0x0*/ System.Action<bool> OnEventChangeTouchEffect;

    static /*0x113c2a4*/ OptionManager();
    static /*0x113b8d4*/ void add_OnEventChangeTouchEffect(System.Action<bool> value);
    static /*0x113b9c8*/ void remove_OnEventChangeTouchEffect(System.Action<bool> value);
    /*0x113c22c*/ OptionManager();
    /*0x113babc*/ bool InitInstance();
    /*0x113bac4*/ void ReleaseInstance();
    /*0x113bac8*/ void UpdateRepresentative(System.Collections.Generic.List<PTShare.Define.SHero> _ListRepresentative);
    /*0x113bacc*/ void AddRepresentative(PTShare.Define.SHero _sHero);
    /*0x113bad0*/ void ReleaseRepresentative(PTShare.Define.SHero _sHero);
    /*0x113bad4*/ void Restore_GameMode();
    /*0x113bae0*/ void Update_PowerSaving(bool _value);
    /*0x113bba8*/ void Update_HpView(bool _value);
    /*0x113bcb4*/ void Update_PlayVideo(bool _value);
    /*0x113bdc0*/ void Update_CombatTextView(bool _value);
    /*0x113becc*/ void Update_TouchEffect(bool _value);
    /*0x113c034*/ void Update_GachaNotice(bool _value);
    /*0x113c130*/ void Update_WhisperNotice(bool _value);
}

class AndroidManager : Singleton.Component.SingletonComponent<AndroidManager>
{
    static string FUNC_CERT_HASH = "certHash";
    static string FUNC_HACK_TOOL = "hackToolName";
    /*0x28*/ UnityEngine.AndroidJavaObject androidJavaObject;
    /*0x30*/ UnityEngine.AndroidJavaClass androidJavaClass;

    /*0xedc548*/ AndroidManager();
    /*0xedbdf8*/ void AwakeInstance();
    /*0xedbee4*/ bool InitInstance();
    /*0xedbeec*/ void ReleaseInstance();
    /*0xedbdfc*/ void AndoridInit();
    /*0xedbef0*/ string CallJavaFunc_GetXigncodeCookie(string _strSeed);
    /*0xedbf34*/ void ToUnity_OnHackDetectedMsg(string strCode);
    /*0xedbf38*/ void XingCodeError(bool isOk);
    /*0xedbf3c*/ string CallJavaStaticFunc(string _FuncName, string[] _params);
    /*0xedc150*/ void CallJavaFuncASync(string _ClassName, string[] _params);
    /*0xedc244*/ void CallStaticJar(string _className, object[] _parmas);
    /*0xedc2e0*/ void CallJar(string _className, object[] _parmas);
    /*0xedc37c*/ void ToUnity(string[] strSend);
    /*0xedc380*/ void AndroidComponet(string _params);
    /*0xedc384*/ void LoginSuccess(string _isLogin);
    /*0xedc464*/ void Back_GetPGSSignedState(string isPGSLogined);
    /*0xedc544*/ void Back_CancelPreSignPGS(string emptyArg);
}

class HeroPromoteManager : Singleton.Data.SingletonData<HeroPromoteManager>
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnEventResultPromote;
    static /*0x8*/ System.Action<System.Collections.Generic.List<PTShare.Define.SHero>, bool, bool> OnEventResultMulti;
    /*0x20*/ System.Collections.Generic.List<RecommendPromote> RecommendPromotes;
    /*0x28*/ System.Collections.Generic.List<RecommendPromote> FastPromotes;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHero> m_multiPromoteResult;
    /*0x38*/ bool m_isFast;
    /*0x39*/ bool m_isRecomend;

    static /*0x12296a8*/ HeroPromoteManager();
    static /*0x122511c*/ void add_OnEventResultPromote(System.Action<PTShare.Define.SHero> value);
    static /*0x1225028*/ void remove_OnEventResultPromote(System.Action<PTShare.Define.SHero> value);
    static /*0x1225308*/ void add_OnEventResultMulti(System.Action<System.Collections.Generic.List<PTShare.Define.SHero>, bool, bool> value);
    static /*0x1225210*/ void remove_OnEventResultMulti(System.Action<System.Collections.Generic.List<PTShare.Define.SHero>, bool, bool> value);
    static /*0x122618c*/ bool IsValidPromoteType(PromoteType ePromoteType, PTShare.Define.SHero _tTarget, TableData.TableData_Unitbase _tCompare);
    /*0x1229590*/ HeroPromoteManager();
    /*0x1227edc*/ bool InitInstance();
    /*0x1227ee4*/ void ReleaseInstance();
    /*0x1227f54*/ void FastPromote();
    /*0x1228c5c*/ void RecommendPromote();
    /*0x1228d24*/ void ReleasePromote(System.Collections.Generic.List<RecommendPromote> promoteSHeroes, PTShare.Define.SHero _sHero);
    /*0x12280b0*/ System.Collections.Generic.List<RecommendPromote> FindPromoteFeed(System.Collections.Generic.List<int> _returnValue, int _nGrade);
    /*0x122471c*/ TableData.TableData_Unitgradelv FindUnitGradeLvByGrade(int _index);
    /*0x1224340*/ void Send_RequestPromote(int _heroId, int[] _heroIds);
    /*0x1228f10*/ void Send_RequestPromoteMulti(System.Collections.Generic.List<RecommendPromote> _tRecommendPromotes, bool _isFast, bool _isRecomend);
    /*0x1229210*/ void OpenHeroRewardWindow(PTShare.Define.SHero _sHero);
    /*0x122420c*/ int[] GetPromoteFeeds(PTShare.Define.SHero[] _sHeros);

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int _nGrade;
        /*0x18*/ TableData.TableData_Unitgradelv tableGrade;
        /*0x20*/ System.Collections.Generic.List<int> _returnValue;

        /*0x105fea8*/ <>c__DisplayClass16_0();
        /*0x105feb0*/ bool <FindPromoteFeed>b__0(PTShare.Define.SHero x);
        /*0x105fed4*/ bool <FindPromoteFeed>b__2(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass16_1
    {
        /*0x10*/ PTShare.Define.SHero sHeroCurrent;
        /*0x18*/ HeroPromoteManager.<> CS$<>8__locals1;

        /*0x105ff04*/ <>c__DisplayClass16_1();
        /*0x105ff0c*/ bool <FindPromoteFeed>b__3(PTShare.Define.SHero x);
        /*0x105ff50*/ bool <FindPromoteFeed>b__4(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass16_2
    {
        /*0x10*/ int i;
        /*0x18*/ HeroPromoteManager.<> CS$<>8__locals2;

        /*0x105ff94*/ <>c__DisplayClass16_2();
        /*0x105ff9c*/ bool <FindPromoteFeed>b__5(PTShare.Define.SHero x);
    }

    class <>c
    {
        static /*0x0*/ HeroPromoteManager.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SHero> <>9__16_1;
        static /*0x10*/ System.Func<PTShare.Define.SHero, int> <>9__16_6;
        static /*0x18*/ System.Func<int, string> <>9__18_0;
        static /*0x20*/ System.Func<PTShare.Define.SHero, int> <>9__19_3;
        static /*0x28*/ System.Func<int, System.Collections.Generic.IEnumerable<byte>> <>9__19_4;
        static /*0x30*/ System.Func<System.Byte[], System.Collections.Generic.IEnumerable<byte>> <>9__19_2;
        static /*0x38*/ System.Func<RecommendPromote, System.Collections.Generic.IEnumerable<byte>> <>9__19_0;
        static /*0x40*/ System.Action<PTShare.Define.SHero> <>9__19_5;
        static /*0x48*/ System.Func<PTShare.Define.SHero, int> <>9__22_0;

        static /*0x105f85c*/ <>c();
        /*0x105f8bc*/ <>c();
        /*0x105f8c4*/ int <FindPromoteFeed>b__16_1(PTShare.Define.SHero a, PTShare.Define.SHero b);
        /*0x105f8f0*/ int <FindPromoteFeed>b__16_6(PTShare.Define.SHero x);
        /*0x105f908*/ string <Send_RequestPromote>b__18_0(int s);
        /*0x105f970*/ System.Collections.Generic.IEnumerable<byte> <Send_RequestPromoteMulti>b__19_0(RecommendPromote s);
        /*0x105fd80*/ int <Send_RequestPromoteMulti>b__19_3(PTShare.Define.SHero f);
        /*0x105fd98*/ System.Collections.Generic.IEnumerable<byte> <Send_RequestPromoteMulti>b__19_4(int b);
        /*0x105fdfc*/ System.Collections.Generic.IEnumerable<byte> <Send_RequestPromoteMulti>b__19_2(byte[] m);
        /*0x105fe04*/ void <Send_RequestPromoteMulti>b__19_5(PTShare.Define.SHero data);
        /*0x105fe90*/ int <GetPromoteFeeds>b__22_0(PTShare.Define.SHero s);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ HeroPromoteManager <>4__this;
        /*0x18*/ int[] _heroIds;

        /*0x1060034*/ <>c__DisplayClass18_0();
        /*0x106003c*/ void <Send_RequestPromote>b__1(ServerProtocol.ResHeroPromote _instance);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ HeroPromoteManager <>4__this;
        /*0x18*/ System.Collections.Generic.List<RecommendPromote> _tRecommendPromotes;

        /*0x1060408*/ <>c__DisplayClass19_0();
        /*0x1060410*/ void <Send_RequestPromoteMulti>b__1(ServerProtocol.ResHeroPromoteMulti _instance);
    }
}

enum PubEventLogType
{
    TITLE = 0,
    CHECK = 1,
    CHECKCOMPLETE = 2,
    FIRSTLOBBY = 3,
    LOGIN = 4,
    LOGINCOMPLETE = 5,
    TERMS = 6,
    CREATENICKNAME = 7,
    LOADDATACOMPLETE = 8,
    INTRO = 9,
    INTROEND = 10,
    STAGESTART = 11,
    STAGEEND = 12,
    CROMYANONSTART = 13,
    CROMYANONEND = 14,
    LABYRINTHSTART = 15,
    LABYRINTHEND = 16,
    ARENA_START = 17,
    ARENA_VICTORY = 18,
    ARENA_DEFEAT = 19,
    PLAYERLEVEL = 20,
    CHARACTER_GACHA = 21,
    FRIEND_GACHA = 22,
    PROPERTIES_GACHA = 23,
    EVOLUTION = 24,
    FIRSTPRODUCT = 25,
    SECONDPRODUCT = 26,
    THIRDPRODUCT = 27,
    BUYPRODUCT = 28,
    ATTENDANCE_GUILD = 29,
    BUYITEM = 30,
    DAY7EVENTCOMPLETE = 31,
    QUESTALLCLEAR = 32,
    ASSETBUNDLE = 33,
}

class PubManager : Singleton.Data.SingletonData<PubManager>
{
    static /*0x0*/ System.Action OnLoginSuccessEvent;
    static /*0x8*/ System.Action OnLoginStartEvent;
    static /*0x10*/ System.Action OnLoginFailEvent;
    static /*0x18*/ System.Action OnRefreshEvent;
    /*0x1c*/ PUBSDK.DefinePubSDK.PubLoginType pubLoginType;
    /*0x20*/ bool autoLogin;
    /*0x21*/ bool loginProtocol;
    /*0x22*/ bool requestAttach;
    /*0x28*/ System.Collections.Generic.Dictionary<int, string> dicMailList;

    static /*0x10181b8*/ PubManager();
    static /*0x1011e5c*/ void add_OnLoginSuccessEvent(System.Action value);
    static /*0x1011f50*/ void remove_OnLoginSuccessEvent(System.Action value);
    static /*0x1012044*/ void add_OnLoginStartEvent(System.Action value);
    static /*0x101213c*/ void remove_OnLoginStartEvent(System.Action value);
    static /*0x1012234*/ void add_OnLoginFailEvent(System.Action value);
    static /*0x101232c*/ void remove_OnLoginFailEvent(System.Action value);
    static /*0x1012424*/ void add_OnRefreshEvent(System.Action value);
    static /*0x101251c*/ void remove_OnRefreshEvent(System.Action value);
    static /*0x10127dc*/ bool get_IsInitialized();
    static /*0x10128c8*/ bool get_IsIAPInitialized();
    static /*0x1017370*/ string GetPurchaseToken(int billingtype, string receiptdata);
    /*0x10180f8*/ PubManager();
    /*0x1010d90*/ System.Collections.Generic.List<TableData.TableData_Fbeventlog> GetEventLog();
    /*0x1010ddc*/ void SetEventLog(string key, string value);
    /*0x1010fac*/ TableData.TableData_Fbeventlog GetEventLog(PubEventLogType type, string typeValue);
    /*0x10110cc*/ void CheckEventLog(PubEventLogType type, string typeValue, string addValue);
    /*0x101121c*/ void Log_ServerCheck(bool complete);
    /*0x101128c*/ void Log_AssetBundleDownload(bool complete);
    /*0x1011320*/ void Log_LoginCheck(PUBSDK.DefinePubSDK.PubLoginType eType, bool complete);
    /*0x10113fc*/ void Log_Terms();
    /*0x1011450*/ void Log_CreateNickname();
    /*0x10114a4*/ void Log_FirstLobby();
    /*0x10114f8*/ void Log_LoadDataComplete();
    /*0x101154c*/ void Log_Intro(bool complete);
    /*0x10115bc*/ void Log_Stage(string stage, bool isStart);
    /*0x1011630*/ void Log_Cromyanon(int floor, bool isStart);
    /*0x10116b4*/ void Log_Labyrinth(int floor, bool isStart);
    /*0x1011738*/ void Log_ArenaStart();
    /*0x101178c*/ void Log_ArenaResult(bool isVictory);
    /*0x10117fc*/ void Log_PlayerLevel(int level);
    /*0x101186c*/ void Log_GenericGacha(int count);
    /*0x10118dc*/ void Log_FriendGacha(int count);
    /*0x101194c*/ void Log_PropertiesGacha(int count);
    /*0x10119bc*/ void Log_CharacterEvolution(HEROGRADE grade);
    /*0x1011a6c*/ void Log_FirstProduct(string productid);
    /*0x1011acc*/ void Log_SecondProduct(string productid);
    /*0x1011b2c*/ void Log_ThirdProduct(string productid);
    /*0x1011b8c*/ void Log_BuyProduct(string productid);
    /*0x1011c04*/ void Log_BuyItemGeneric(DefineContentShop.ContentShopCategoryType categorytype);
    /*0x1011cb4*/ void Log_AttendanceGuild();
    /*0x1011d08*/ void Log_Day7Event(int number);
    /*0x1011dac*/ void Log_QuestAllClear(QuestGroupType type);
    /*0x1010e18*/ PUBSDK.PubSDKProcesser get_sdk();
    /*0x1012a28*/ bool InitInstance();
    /*0x1012bd0*/ void InitializeCallback();
    /*0x101302c*/ void InitializePushToken(string token);
    /*0x10133e8*/ void ReleaseInstance();
    /*0x10135d0*/ void OnCallbackInitializeError(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x101362c*/ void RequestLogin(PUBSDK.DefinePubSDK.PubLoginType eType, bool bAutoLogin, bool bCallLoginProtocol, bool bAttach);
    /*0x10141b4*/ void OnCallbackSuccessLogin(Firebase.Auth.FirebaseUser user);
    /*0x1014568*/ void OnCallbackSuccessLoginToken(string token);
    /*0x1014770*/ void OnCallbackFailLogin(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x1014130*/ void SendLoginProtocol(bool bLoading, ServerProtocol.ReqAccountLogin reqLogin, System.Action<ServerProtocol.ResAccountLogin> resLogin, System.Action<int> fail);
    /*0x10148fc*/ void OnCallbackLoginSuccessProtocol(ServerProtocol.ResAccountLogin login);
    /*0x1015470*/ void OnCallbackLoginFailProtocol(int code);
    /*0x10157e8*/ void Logout();
    /*0x10158e0*/ void OnCallbackLogoutProtocol(ServerProtocol.ResAccountLogout logout);
    /*0x10159d8*/ void OnCallbackLogoutSuccess();
    /*0x1015a3c*/ void LinkPlatform(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x1015fc4*/ void OnCallbackSuccessLinkPlatform(Firebase.Auth.FirebaseUser user);
    /*0x1016218*/ void OnCallbackSuccessLinkToken(string token);
    /*0x10163dc*/ void TryDetach();
    /*0x1016120*/ void OnCallbackSuccessAttachProtocol(ServerProtocol.ResAccountAttach res);
    /*0x101677c*/ void OnCallbackFailAttachProtocol(int code, string args);
    /*0x101685c*/ void OnCallbackFailLinkPlatform(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x10168c4*/ void InitializeIAP(System.Action onInitialized);
    /*0x1016cb0*/ void BuyPurchasing(string productid, string packageid, System.Action<UnityEngine.Purchasing.Product> onSuccess, System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail);
    /*0x1017224*/ string GetLocalizePrice(string productid);
    /*0x1017460*/ void AdJustRevenue(UnityEngine.Purchasing.Product receipt);
    /*0x1015278*/ void Restore();
    /*0x1013218*/ void SetGenericPush(bool enable, bool night, System.Action onComplete);
    /*0x101767c*/ void SetAdvertisePush(bool enable, System.Action onComplete);
    /*0x1013308*/ void SetLanguagePush(bool enable, PTShare.Define.LanguageCode code);
    /*0x1013208*/ System.ValueTuple<bool, string> GetPushString();
    /*0x1013210*/ System.ValueTuple<bool, string> GetNightPushString();
    /*0x1017758*/ System.ValueTuple<bool, string> GetAdPushString();
    /*0x1017760*/ void SetPushString(bool enable, string val);
    /*0x1017770*/ void SetNightPushString(bool enable, string val);
    /*0x1017780*/ void SetAdPushString(bool enable, string val);
    /*0x1017790*/ string GetPushOffsetTimeToString();
    /*0x10140c0*/ string GetPushToken();
    /*0x101536c*/ void SetCrashlyticsKey(string key, string value);
    /*0x1015324*/ void SetCrashlyticsLog(string log);
    /*0x1017a24*/ void RequestAppTracking();
    /*0x101480c*/ void ErrorMessage(PUBSDK.DefinePubSDK.PubProcessError error);
    /*0x1016104*/ System.Collections.Generic.List<PUBSDK.DefinePubSDK.PubLoginType> GetLinkPlatform();
    /*0x1015ba8*/ bool IsLinkPlatform(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x10153bc*/ PUBSDK.DefinePubSDK.PubLoginType GetCurrentLoginType();
    /*0x1014504*/ void SetCurrentLoginType(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x1017b9c*/ System.Collections.Generic.Dictionary<int, string> GetLinkEmail();
    /*0x1017fe8*/ string GetMail(PUBSDK.DefinePubSDK.PubLoginType eType);
    /*0x101809c*/ void HandlerRequestFirebaseAuth();
    /*0x10181bc*/ void <RequestLogin>b__58_0();
    /*0x10183cc*/ void <OnCallbackLoginSuccessProtocol>b__63_0(bool result);
    /*0x10185c4*/ void <OnCallbackLoginSuccessProtocol>b__63_1(string token);
    /*0x10186f8*/ void <Restore>b__80_0(PUBSDK.PubReceiptRecord receipt);

    class <>c__DisplayClass2_0
    {
        /*0x10*/ PubEventLogType type;
        /*0x18*/ string typeValue;

        /*0x108c898*/ <>c__DisplayClass2_0();
        /*0x108c8a0*/ bool <GetEventLog>b__0(TableData.TableData_Fbeventlog x);
    }

    class <>c__DisplayClass63_0
    {
        /*0x10*/ string token;
        /*0x18*/ PubManager <>4__this;

        /*0x108c98c*/ <>c__DisplayClass63_0();
        /*0x108c994*/ void <OnCallbackLoginSuccessProtocol>b__3();
    }

    class <>c
    {
        static /*0x0*/ PubManager.<> <>9;
        static /*0x8*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> <>9__63_2;
        static /*0x10*/ System.Action<bool> <>9__64_0;
        static /*0x18*/ System.Action<bool> <>9__71_0;
        static /*0x20*/ System.Action<bool> <>9__71_2;
        static /*0x28*/ System.Converter<string, UnityEngine.Purchasing.ProductDefinition> <>9__75_0;
        static /*0x30*/ System.Action<ServerProtocol.ResCashShopPurchase> <>9__80_1;

        static /*0x108c600*/ <>c();
        /*0x108c660*/ <>c();
        /*0x108c668*/ void <OnCallbackLoginSuccessProtocol>b__63_2(PUBSDK.DefinePubSDK.PubProcessError error);
        /*0x108c66c*/ void <OnCallbackLoginFailProtocol>b__64_0(bool res);
        /*0x108c754*/ void <TryDetach>b__71_0(bool _);
        /*0x108c758*/ void <TryDetach>b__71_2(bool _);
        /*0x108c75c*/ UnityEngine.Purchasing.ProductDefinition <InitializeIAP>b__75_0(string x);
        /*0x108c7c0*/ void <Restore>b__80_1(ServerProtocol.ResCashShopPurchase res);
    }

    class <>c__DisplayClass71_0
    {
        /*0x10*/ PubManager <>4__this;
        /*0x18*/ string guestid;

        /*0x108c9b8*/ <>c__DisplayClass71_0();
        /*0x108c9c0*/ void <TryDetach>b__1(ServerProtocol.ResAccountDetach res);
    }

    class <>c__DisplayClass76_0
    {
        /*0x10*/ System.Action<UnityEngine.Purchasing.Product> onSuccess;
        /*0x18*/ System.Action<PUBSDK.DefinePubSDK.PubProcessError> onFail;

        /*0x108cbec*/ <>c__DisplayClass76_0();
        /*0x108cbf4*/ void <BuyPurchasing>b__0(UnityEngine.Purchasing.Product product);
        /*0x108cc88*/ void <BuyPurchasing>b__1(PUBSDK.DefinePubSDK.PubProcessError error);
    }

    class <>c__DisplayClass77_0
    {
        /*0x10*/ string productid;

        /*0x108cd1c*/ <>c__DisplayClass77_0();
        /*0x108cd24*/ bool <GetLocalizePrice>b__0(UnityEngine.Purchasing.Product x);
    }

    struct <SetGenericPush>d__81 : System.Runtime.CompilerServices.IAsyncStateMachine
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
        /*0x38*/ PubManager <>4__this;
        /*0x40*/ bool night;
        /*0x41*/ bool enable;
        /*0x48*/ System.Action onComplete;
        /*0x50*/ string <topic>5__2;
        /*0x58*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

        /*0xa8a260*/ void MoveNext();
        /*0xa8a268*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
    }

    struct <SetAdvertisePush>d__82 : System.Runtime.CompilerServices.IAsyncStateMachine
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
        /*0x38*/ PubManager <>4__this;
        /*0x40*/ bool enable;
        /*0x48*/ System.Action onComplete;
        /*0x50*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

        /*0xa8a24c*/ void MoveNext();
        /*0xa8a254*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
    }

    struct <SetLanguagePush>d__83 : System.Runtime.CompilerServices.IAsyncStateMachine
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder;
        /*0x38*/ PubManager <>4__this;
        /*0x40*/ bool enable;
        /*0x44*/ PTShare.Define.LanguageCode code;
        /*0x48*/ System.Runtime.CompilerServices.TaskAwaiter <>u__1;

        /*0xa8a274*/ void MoveNext();
        /*0xa8a27c*/ void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
    }

    class <>c__DisplayClass97_0
    {
        /*0x10*/ PUBSDK.DefinePubSDK.PubLoginType eType;

        /*0x108cd54*/ <>c__DisplayClass97_0();
        /*0x108cd5c*/ bool <IsLinkPlatform>b__0(PUBSDK.DefinePubSDK.PubLoginType x);
    }
}

class TempA
{
    /*0x10*/ string Payload;

    /*0x1167924*/ TempA();
}

class TempB
{
    /*0x10*/ string json;

    /*0x116792c*/ TempB();
}

class TempC
{
    /*0x10*/ string purchaseToken;

    /*0x1167934*/ TempC();
}

class CrashlyticsString
{
    static string Login = "Login";
    static string Logout = "Logout";
    static string Conversion = "Conversion";
    static string MainScene = "MainScene";
    static string MazeScene = "MazeScene";
    static string BattleScene = "BattleScene";
    static string DungeonScene = "DungeonScene";
    static string UserUID = "UserUID";
    static string LoginPlatform = "LoginPlatform";
    static string UserName = "UserName";

    /*0xf4ce44*/ CrashlyticsString();
}

class InappPurchaseManager : Singleton.Component.SingletonComponent<InappPurchaseManager>
{
    /*0x21*/ bool IsInitailizing;

    /*0x1573194*/ InappPurchaseManager();
    /*0x1573178*/ void AwakeInstance();
    /*0x157317c*/ bool InitInstance();
    /*0x1573188*/ void ReleaseInstance();
    /*0x157318c*/ bool IsInitialized();
    /*0x1573184*/ void InitializePurchasing();
}

class DefinePveRanking
{
    enum DIFFICULTY
    {
        EASY = 0,
        NORMAL = 1,
        HARD = 2,
        HELL = 3,
    }
}

class PveRankingManager : Singleton.Component.SingletonComponent<PveRankingManager>
{
    /*0x28*/ ServerProtocol.ResPveRankingEnter currentInfo;
    /*0x30*/ int m_battleChallengeNumber;
    /*0x34*/ DefinePveRanking.DIFFICULTY m_difficulty;

    /*0x1023418*/ PveRankingManager();
    /*0x1022120*/ string get_UserToken();
    /*0x10221a0*/ void AwakeInstance();
    /*0x10221a4*/ bool InitInstance();
    /*0x10221ac*/ void ReleaseInstance();
    /*0x10221b0*/ void Send_Enter(System.Action onSuccess);
    /*0x1021084*/ void Send_Ranking(System.Action<ServerProtocol.ResPveRankingRanking> onSuccess);
    /*0x10222e8*/ void Send_Begin(string heroids, System.Action<ServerProtocol.ResPveRankingBegin> onCallBack);
    /*0x1022444*/ void Send_Finish(bool isWin, string statistics, string playData, long lcp, string hpMps, int playTimeMilis, System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack);
    /*0x10225dc*/ System.Collections.IEnumerator CoLevelup(ServerProtocol.ResPveRankingFinish response, int prevScore, System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack);
    /*0x101efa8*/ int GetCurrentRank();
    /*0x102265c*/ int GetCurrentLeague();
    /*0x1020120*/ int GetCurrentRewardIndex();
    /*0x101efc0*/ int GetCurrentScore();
    /*0x10229c4*/ int GetCurrentChallengeCount();
    /*0x101efe8*/ float GetRankPercent();
    /*0x1022b7c*/ System.Collections.Generic.List<PTShare.Define.SPveStage> GetCurrentStageList();
    /*0x1022bfc*/ int GetBonusDay();
    /*0x101e7b0*/ int GetTotalClearCount();
    /*0x1022d60*/ int GetChallengeNumber();
    /*0x1022d68*/ int GetDifficulty();
    /*0x101fb98*/ TableData.TableData_Pvenoblity GetNoblityTableData();
    /*0x1022d7c*/ TableData.TableData_Pvenoblity GetPrevNoblityTableData();
    /*0x1022d70*/ TableData.TableData_Pvenoblity GetNoblityTableData(int noblityIdx);
    /*0x1022d9c*/ TableData.TableData_Pvenoblity GetPrevNoblityTableData(int noblityIdx);
    /*0x1022da8*/ TableData.TableData_Pveclearreward GetNextClearReward();
    /*0x1022ed0*/ TableData.TableData_Pveclearreward GetLastClearReward();
    /*0x1022674*/ System.Collections.Generic.List<int> GetTop3Score();
    /*0x10205a4*/ System.Collections.Generic.List<string> GetRankRewardList();
    /*0x1022f58*/ int GetChallengeId(int index);
    /*0x1022fd4*/ int GetTicketRefreshSecond();
    /*0x1020680*/ System.Collections.Generic.List<float> GetRankPercentList();
    /*0x1022a60*/ float GetRankPercent(int index);
    /*0x1023108*/ float GetRankLastPercent();
    /*0x1021994*/ void SetUserRankPercentText(ref LocalizeString localize);
    /*0x101f59c*/ System.ValueTuple<int, int> GetNoblityLv();
    /*0x101fbb4*/ int GetNoblityIndex(string noblity);
    /*0x1023168*/ int GetLeftTryCount();
    /*0x102324c*/ System.ValueTuple<bool, System.TimeSpan> IsBreakTime();
    /*0x1023404*/ void SetChallengeNumber(int num);
    /*0x102340c*/ void SetDifficulty(DefinePveRanking.DIFFICULTY difficulty);
    /*0x1023414*/ void DailyChange();

    class <>c__DisplayClass8_0
    {
        /*0x10*/ PveRankingManager <>4__this;
        /*0x18*/ System.Action onSuccess;

        /*0x1091ca8*/ <>c__DisplayClass8_0();
        /*0x1091cb0*/ void <Send_Enter>b__0(ServerProtocol.ResPveRankingEnter response);
    }

    class <>c__DisplayClass9_0
    {
        /*0x10*/ PveRankingManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResPveRankingRanking> onSuccess;

        /*0x1091cdc*/ <>c__DisplayClass9_0();
        /*0x1091ce4*/ void <Send_Ranking>b__0(ServerProtocol.ResPveRankingRanking response);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResPveRankingBegin> onCallBack;

        /*0x1091830*/ <>c__DisplayClass10_0();
        /*0x1091838*/ void <Send_Begin>b__0(ServerProtocol.ResPveRankingBegin response);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ PveRankingManager <>4__this;
        /*0x18*/ bool isWin;
        /*0x20*/ System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack;

        /*0x10918a8*/ <>c__DisplayClass11_0();
        /*0x10918b0*/ void <Send_Finish>b__0(ServerProtocol.ResPveRankingFinish response);
    }

    class <>c
    {
        static /*0x0*/ PveRankingManager.<> <>9;
        static /*0x8*/ System.Func<bool> <>9__12_0;
        static /*0x10*/ System.Comparison<int> <>9__30_0;

        static /*0x109170c*/ <>c();
        /*0x109176c*/ <>c();
        /*0x1091774*/ bool <CoLevelup>b__12_0();
        /*0x1091818*/ int <GetTop3Score>b__30_0(int lhs, int rhs);
    }

    class <CoLevelup>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action<ServerProtocol.ResPveRankingFinish, int> onCallBack;
        /*0x28*/ ServerProtocol.ResPveRankingFinish response;
        /*0x30*/ int prevScore;

        /*0x1091d74*/ <CoLevelup>d__12(int <>1__state);
        /*0x1091da0*/ void System.IDisposable.Dispose();
        /*0x1091da4*/ bool MoveNext();
        /*0x1091f60*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1091f68*/ void System.Collections.IEnumerator.Reset();
        /*0x1091fa8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ int clearCount;

        /*0x1091c0c*/ <>c__DisplayClass28_0();
        /*0x1091c14*/ bool <GetNextClearReward>b__0(TableData.TableData_Pveclearreward x);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ System.Collections.Generic.List<int> scores;
        /*0x18*/ System.Action<PTShare.Define.SPveStage.SData> <>9__1;

        /*0x1091c38*/ <>c__DisplayClass30_0();
        /*0x1091c40*/ void <GetTop3Score>b__1(PTShare.Define.SPveStage.SData f);
    }
}

class QuestManager : Singleton.Data.SingletonData<QuestManager>
{
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuestPackage>>> curDicsCacheQuest;
    /*0x28*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuestPackage>> curDicsCacheGroupQuest;
    /*0x30*/ bool <UseActivateClearQuest>k__BackingField;
    /*0x38*/ PTShare.Define.SQuest curDailyQuest;
    /*0x40*/ PTShare.Define.SQuest curWeeklyQuest;
    /*0x48*/ PTShare.Define.SQuest curDailyEventQuest;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> curMainQuestStep;
    /*0x58*/ bool bIsCacheInitialize;

    /*0x1241c30*/ QuestManager();
    /*0x1240590*/ bool get_UseActivateClearQuest();
    /*0x1240598*/ void set_UseActivateClearQuest(bool value);
    /*0x12405a4*/ string get_UserToken();
    /*0x1240624*/ bool InitInstance();
    /*0x1240824*/ void ReleaseInstance();
    /*0x124082c*/ void Send_EnterQuest(System.Action _callback);
    /*0x1240964*/ void Send_NewQuest(System.Action _callback);
    /*0x123a39c*/ void Send_TakeQuest(System.Action _callback, QuestGroupType _eGroupType, int _index, int _eventId);
    /*0x1240a9c*/ void Send_ExchangeQuest(System.Action<int> _callback, QuestGroupType _eGroupType, int _index, int _arrIndex, int _eventId);
    /*0x123cb30*/ void Send_TakeMainQuest(System.Action _callback, int _index);
    /*0x123cfcc*/ void Send_VisitSite(System.Action _callback, string siteName);
    /*0x124063c*/ void InitializeQuest();
    /*0x1240ef0*/ void SetDailyQuest(PTShare.Define.SQuest _quest);
    /*0x124100c*/ void SetWeeklyQuest(PTShare.Define.SQuest _quest);
    /*0x1241128*/ void SetMainQuestStep(System.Collections.Generic.List<PTShare.Define.SMainQuest> _liMain);
    /*0x1241130*/ void SetDailyEventQuest(PTShare.Define.SQuest _quest);
    /*0x1241138*/ PTShare.Define.SQuest GetDailyQuest();
    /*0x1241140*/ PTShare.Define.SQuest GetWeeklyQuest();
    /*0x1241148*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> GetMainStep();
    /*0x1241150*/ PTShare.Define.SQuest GetDailyEventQuest();
    /*0x1241158*/ System.Collections.Generic.List<QuestPackage> FindGroupByQuestPackage(string _strQuestGroupid);
    /*0x1240c0c*/ System.Collections.Generic.List<QuestPackage> FindGroupByQuestPackage(QuestContentType _eContentType, QuestGroupType _eGroupType);
    /*0x123b0c0*/ System.Collections.Generic.List<QuestPackage> FindCacheQuestPackage(QuestContentType _eContentType, QuestGroupType _eGroupType, bool _bIsViewQuest);
    /*0x123e840*/ System.Collections.Generic.List<QuestPackage> FindCacheQuestGroupID(string _groupid);
    /*0x12414c8*/ long FindConditionAmountbyQuestType(QuestAdvanceType _questAdvanceType, TableData.TableData_Questgroup _questgroup);
    /*0x124153c*/ PTShare.Define.SQuest FindGroupTypeQuest(QuestGroupType _eGroupType);
    /*0x1241578*/ bool UseClearQuest_Daily();
    /*0x1241788*/ bool UseClearQuest_Weekly();
    /*0x1241998*/ bool UseClearQuest_Main();
    /*0x1241d28*/ void <InitializeQuest>b__21_0(string key);

    class <>c__DisplayClass15_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf90590*/ <>c__DisplayClass15_0();
        /*0xf90598*/ void <Send_EnterQuest>b__0(ServerProtocol.ResQuestEnter res);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf90620*/ <>c__DisplayClass16_0();
        /*0xf90628*/ void <Send_NewQuest>b__0(ServerProtocol.ResQuestNew res);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ QuestGroupType _eGroupType;
        /*0x1c*/ int _index;
        /*0x20*/ System.Action _callback;

        /*0xf906c4*/ <>c__DisplayClass17_0();
        /*0xf906cc*/ void <Send_TakeQuest>b__0(ServerProtocol.ResQuestTake res);
    }

    class <>c__DisplayClass17_1
    {
        /*0x10*/ ServerProtocol.ResQuestTake res;

        /*0xf909d0*/ <>c__DisplayClass17_1();
        /*0xf909d8*/ bool <Send_TakeQuest>b__1(PTShare.Define.SQuestRow x);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ QuestGroupType _eGroupType;
        /*0x1c*/ int _index;
        /*0x20*/ int _arrIndex;
        /*0x28*/ System.Action<int> _callback;

        /*0xf90a08*/ <>c__DisplayClass18_0();
        /*0xf90a10*/ void <Send_ExchangeQuest>b__0(ServerProtocol.ResQuestExchange res);
    }

    class <>c
    {
        static /*0x0*/ QuestManager.<> <>9;
        static /*0x8*/ System.Predicate<int> <>9__18_1;

        static /*0xf9051c*/ <>c();
        /*0xf9057c*/ <>c();
        /*0xf90584*/ bool <Send_ExchangeQuest>b__18_1(int x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf90ddc*/ <>c__DisplayClass19_0();
        /*0xf90de4*/ void <Send_TakeMainQuest>b__0(ServerProtocol.ResQuestTakeMain res);
    }

    class <>c__DisplayClass19_1
    {
        /*0x10*/ ServerProtocol.ResQuestTakeMain res;

        /*0xf910a0*/ <>c__DisplayClass19_1();
        /*0xf910a8*/ bool <Send_TakeMainQuest>b__1(PTShare.Define.SMainQuest x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ System.Action _callback;

        /*0xf910e0*/ <>c__DisplayClass20_0();
        /*0xf910e8*/ void <Send_VisitSite>b__0(ServerProtocol.ResQuestVisitSite instance);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ PTShare.Define.SQuest _quest;

        /*0xf910fc*/ <>c__DisplayClass22_0();
        /*0xf91104*/ PTShare.Define.SQuestRow <SetDailyQuest>b__0(int n);
    }

    class <>c__DisplayClass22_1
    {
        /*0x10*/ int n;

        /*0xf91248*/ <>c__DisplayClass22_1();
        /*0xf91250*/ bool <SetDailyQuest>b__1(PTShare.Define.SQuestRow f);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ PTShare.Define.SQuest _quest;

        /*0xf91274*/ <>c__DisplayClass23_0();
        /*0xf9127c*/ PTShare.Define.SQuestRow <SetWeeklyQuest>b__0(int n);
    }

    class <>c__DisplayClass23_1
    {
        /*0x10*/ int n;

        /*0xf913c0*/ <>c__DisplayClass23_1();
        /*0xf913c8*/ bool <SetWeeklyQuest>b__1(PTShare.Define.SQuestRow f);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ bool _bIsViewQuest;

        /*0xf913ec*/ <>c__DisplayClass32_0();
        /*0xf913f4*/ bool <FindCacheQuestPackage>b__0(QuestPackage x);
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<QuestPackage, bool> <>9__0;

        /*0xf91430*/ <>c__DisplayClass36_0();
        /*0xf91438*/ bool <UseClearQuest_Daily>b__0(QuestPackage x);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<QuestPackage, bool> <>9__0;

        /*0xf91564*/ <>c__DisplayClass37_0();
        /*0xf9156c*/ bool <UseClearQuest_Weekly>b__0(QuestPackage x);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ QuestManager <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<QuestPackage, bool> <>9__0;

        /*0xf91698*/ <>c__DisplayClass38_0();
        /*0xf916a0*/ bool <UseClearQuest_Main>b__0(QuestPackage x);
    }
}

class QuestPackage
{
    /*0x10*/ QuestAdvanceType QuestType;
    /*0x18*/ TableData.TableData_Quest QuestParent;
    /*0x20*/ TableData.TableData_Questgroup QuestGroup;
    /*0x28*/ TableData.TableData_Questpropertypoint PropertyPoint;
    /*0x30*/ TableData.TableData_Questchapterclear ChapterClear;
    /*0x38*/ TableData.TableData_Queststageclear StageClear;
    /*0x40*/ TableData.TableData_Questgacha Gacha;
    /*0x48*/ TableData.TableData_Queststageidle StageIdle;
    /*0x50*/ TableData.TableData_Queststagetry StageTry;
    /*0x58*/ TableData.TableData_Questheroupgrade HeroUpgrade;
    /*0x60*/ TableData.TableData_Questequipupgrade EquipUpgrade;
    /*0x68*/ TableData.TableData_Questfriend Friend;
    /*0x70*/ TableData.TableData_Questprizeboard PrizeBoard;
    /*0x78*/ TableData.TableData_Questbuy Buy;
    /*0x80*/ TableData.TableData_Questarena Arena;
    /*0x88*/ TableData.TableData_Questheroget HeroGet;
    /*0x90*/ TableData.TableData_Questlevel Level;
    /*0x98*/ TableData.TableData_Questgetitem GetItem;
    /*0xa0*/ TableData.TableData_Questmove Move;
    /*0xa8*/ TableData.TableData_Questlabyrinth Labyrinth;
    /*0xb0*/ TableData.TableData_Questresonance Resonance;
    /*0xb8*/ TableData.TableData_Questspirittowerclear SpiritTower;

    static /*0x1242024*/ void MoveContent(DefineQuest.MoveContentsType moveContentType);
    /*0x1241348*/ QuestPackage(QuestAdvanceType _type, TableData.TableData_Questgroup _questGroupID);
    /*0x123cebc*/ bool IsThisQuest(QuestAdvanceType _type);
    /*0x1238afc*/ string GetTitle();
    /*0x1239ba8*/ long GetConditionAmount();
    /*0x123a578*/ void MoveContents();
    /*0x123a1cc*/ QuestPackage GetUnlockContent();
    /*0x123a118*/ bool IsUnlocked();
    /*0x1239d98*/ bool IsMoveContents();
    /*0x123a0e8*/ bool IsUnlockContents();
    /*0x1239d70*/ bool IsAchieve(long _amount);
    /*0x12435a4*/ float GetProgress(long _amount);

    class <>c
    {
        static /*0x0*/ QuestPackage.<> <>9;
        static /*0x8*/ System.Action <>9__27_0;
        static /*0x10*/ System.Action <>9__27_1;
        static /*0x18*/ System.Action <>9__27_2;
        static /*0x20*/ System.Action <>9__27_3;
        static /*0x28*/ System.Action <>9__27_19;
        static /*0x30*/ System.Action <>9__27_4;
        static /*0x38*/ System.Action <>9__27_20;
        static /*0x40*/ System.Action <>9__27_5;
        static /*0x48*/ System.Action <>9__27_21;
        static /*0x50*/ System.Action <>9__27_6;
        static /*0x58*/ System.Action <>9__27_22;
        static /*0x60*/ System.Action <>9__27_7;
        static /*0x68*/ System.Action <>9__27_8;
        static /*0x70*/ System.Action <>9__27_23;
        static /*0x78*/ System.Action <>9__27_9;
        static /*0x80*/ System.Action <>9__27_24;
        static /*0x88*/ System.Action <>9__27_26;
        static /*0x90*/ System.Action<bool> <>9__27_25;
        static /*0x98*/ System.Action <>9__27_10;
        static /*0xa0*/ System.Action <>9__27_27;
        static /*0xa8*/ System.Action <>9__27_11;
        static /*0xb0*/ System.Action <>9__27_28;
        static /*0xb8*/ System.Action <>9__27_12;
        static /*0xc0*/ System.Action <>9__27_13;
        static /*0xc8*/ System.Action <>9__27_14;
        static /*0xd0*/ System.Action <>9__27_29;
        static /*0xd8*/ System.Action <>9__27_15;
        static /*0xe0*/ System.Action <>9__27_30;
        static /*0xe8*/ System.Action <>9__27_16;
        static /*0xf0*/ System.Action <>9__27_17;
        static /*0xf8*/ System.Action <>9__27_31;
        static /*0x100*/ System.Action <>9__27_18;

        static /*0xf91814*/ <>c();
        /*0xf91874*/ <>c();
        /*0xf9187c*/ void <MoveContent>b__27_0();
        /*0xf9195c*/ void <MoveContent>b__27_1();
        /*0xf91a54*/ void <MoveContent>b__27_2();
        /*0xf91b34*/ void <MoveContent>b__27_3();
        /*0xf91c54*/ void <MoveContent>b__27_4();
        /*0xf91d70*/ void <MoveContent>b__27_19();
        /*0xf91e54*/ void <MoveContent>b__27_5();
        /*0xf91f9c*/ void <MoveContent>b__27_20();
        /*0xf92080*/ void <MoveContent>b__27_6();
        /*0xf921c8*/ void <MoveContent>b__27_21();
        /*0xf922ac*/ void <MoveContent>b__27_7();
        /*0xf923f4*/ void <MoveContent>b__27_22();
        /*0xf924d4*/ void <MoveContent>b__27_8();
        /*0xf925a8*/ void <MoveContent>b__27_9();
        /*0xf926f0*/ void <MoveContent>b__27_23();
        /*0xf927d4*/ void <MoveContent>b__27_10();
        /*0xf92a50*/ void <MoveContent>b__27_24();
        /*0xf92afc*/ void <MoveContent>b__27_25(bool instance);
        /*0xf92cec*/ void <MoveContent>b__27_26();
        /*0xf92d98*/ void <MoveContent>b__27_11();
        /*0xf92ee0*/ void <MoveContent>b__27_27();
        /*0xf92fc0*/ void <MoveContent>b__27_12();
        /*0xf93108*/ void <MoveContent>b__27_28();
        /*0xf931e8*/ void <MoveContent>b__27_13();
        /*0xf93288*/ void <MoveContent>b__27_14();
        /*0xf93428*/ void <MoveContent>b__27_15();
        /*0xf93570*/ void <MoveContent>b__27_29();
        /*0xf93650*/ void <MoveContent>b__27_16();
        /*0xf93798*/ void <MoveContent>b__27_30();
        /*0xf93878*/ void <MoveContent>b__27_17();
        /*0xf939ac*/ void <MoveContent>b__27_18();
        /*0xf93af4*/ void <MoveContent>b__27_31();
    }
}

enum RankingBoardType
{
    NONE = 0,
    FACTION_FIRE = 1,
    FACTION_WIND = 2,
    FACTION_NATURE = 3,
    FACTION_WATER = 4,
    CAMPAIGN = 10,
    TOWER = 11,
    HARDCAMPAIGN = 12,
    ARENA = 13,
    WORLDARENA = 14,
    GUILDBOSS = 100,
    GUILDBOSS_PERSON = 101,
    MINIGAME_RACE = 201,
    MINIGAME_RUN = 202,
    End = 203,
}

class RankBoardManager : Singleton.Data.SingletonData<RankBoardManager>
{
    /*0x20*/ PTShare.Define.SBoardCampaignRanker curCampaignTopRanker;
    /*0x28*/ PTShare.Define.SBoardCampaignRanker curHardCampaignTopRanker;
    /*0x30*/ PTShare.Define.SBoardTowerRanker curTowerTopRanker;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> curFactionTopRankers;
    /*0x40*/ System.Collections.Generic.List<PTShare.Define.SBoardFiveRanker> curTopFiveRankList;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> curCampaignRankList;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> curHardCampaignRankList;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> curTowerRankList;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> curFactionRankerList;
    /*0x68*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, PTShare.Define.SBoardQuest>> curRewardListDicInfo;
    /*0x70*/ bool curPossiableReceiveReward;
    /*0x71*/ bool curCampaignToReward;
    /*0x72*/ bool curHardCampaignToReward;
    /*0x73*/ bool curTowerToReward;
    /*0x78*/ System.Collections.Generic.List<bool> curFactionsReward;
    /*0x80*/ PTShare.Define.SBoardQuest _sBoardQuest;

    /*0x11bc238*/ RankBoardManager();
    /*0x11bbc70*/ string get_UserToken();
    /*0x11bbcf0*/ bool InitInstance();
    /*0x11bbcf8*/ void ReleaseInstance();
    /*0x11bbcfc*/ void Send_EnterBoard(System.Action _callback);
    /*0x11baecc*/ void Send_CampaignBoard(System.Action<string, int> _callback);
    /*0x11bb004*/ void Send_HardCampaignBoard(System.Action<string, int> _callback);
    /*0x11bb13c*/ void Send_TowerBoard(System.Action<string, int> _callback);
    /*0x11bba0c*/ void Send_FactionBoard(int faction, System.Action<string, int> _callback);
    /*0x11bbe34*/ void Send_RewardList(System.Action _callback, RankingBoardType _eType);
    /*0x11bbf88*/ void Send_TakeReward(System.Action _callback, RankingBoardType _eType, int _index);
    /*0x11bc0e8*/ void SetPossiableReceiveReward(bool _enable);
    /*0x11bc0f4*/ bool GetPossiableReceiveReward();
    /*0x11bc0fc*/ PTShare.Define.SBoardCampaignRanker GetCampaignTopRanker();
    /*0x11bc104*/ PTShare.Define.SBoardCampaignRanker GetHardCampaignTopRanker();
    /*0x11bc10c*/ PTShare.Define.SBoardTowerRanker GetTowerTopRanker();
    /*0x11bb8a8*/ PTShare.Define.SBoardFactionRanker GetFactionTopRanker(int faction);
    /*0x11bc114*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> GetCampaignRankList();
    /*0x11bc11c*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> GetHardCampaignRankList();
    /*0x11bc124*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> GetTowerRankList();
    /*0x11bc12c*/ System.Collections.Generic.List<PTShare.Define.SBoardFiveRanker> GetFiveRankerList();
    /*0x11bc134*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> GetFactionRankerList();
    /*0x11bb55c*/ int ConvertFactionRank(RankingBoardType _eType);
    /*0x11bc13c*/ System.Collections.Generic.List<PTShare.Define.SBoardQuest> GetTypeToRewardList(RankingBoardType _eType);
    /*0x11babf8*/ bool IsPossiableReward(RankingBoardType _eType);

    class <>c__DisplayClass20_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf9718c*/ <>c__DisplayClass20_0();
        /*0xf97194*/ void <Send_EnterBoard>b__0(ServerProtocol.ResBoardEnter response);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf97240*/ <>c__DisplayClass21_0();
        /*0xf97248*/ void <Send_CampaignBoard>b__0(ServerProtocol.ResBoardCampaign response);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf972d4*/ <>c__DisplayClass22_0();
        /*0xf972dc*/ void <Send_HardCampaignBoard>b__0(ServerProtocol.ResBoardHardCampaign response);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf97368*/ <>c__DisplayClass23_0();
        /*0xf97370*/ void <Send_TowerBoard>b__0(ServerProtocol.ResBoardTower response);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ System.Action<string, int> _callback;

        /*0xf97428*/ <>c__DisplayClass24_0();
        /*0xf97430*/ void <Send_FactionBoard>b__0(ServerProtocol.ResBoardHeroPoint response);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ int _nType;
        /*0x20*/ System.Action _callback;

        /*0xf974e8*/ <>c__DisplayClass25_0();
        /*0xf974f0*/ void <Send_RewardList>b__0(ServerProtocol.ResBoardRewardList response);
    }

    class <>c
    {
        static /*0x0*/ RankBoardManager.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SBoardQuest, int> <>9__25_1;
        static /*0x10*/ System.Func<PTShare.Define.SBoardQuest, PTShare.Define.SBoardQuest> <>9__25_2;
        static /*0x18*/ System.Func<PTShare.Define.SBoardQuest, bool> <>9__26_1;

        static /*0xf970ec*/ <>c();
        /*0xf9714c*/ <>c();
        /*0xf97154*/ int <Send_RewardList>b__25_1(PTShare.Define.SBoardQuest k);
        /*0xf9716c*/ PTShare.Define.SBoardQuest <Send_RewardList>b__25_2(PTShare.Define.SBoardQuest v);
        /*0xf97174*/ bool <Send_TakeReward>b__26_1(PTShare.Define.SBoardQuest x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ RankBoardManager <>4__this;
        /*0x18*/ int _nType;
        /*0x1c*/ int _index;
        /*0x20*/ RankingBoardType _eType;
        /*0x28*/ System.Action _callback;

        /*0xf97738*/ <>c__DisplayClass26_0();
        /*0xf97740*/ void <Send_TakeReward>b__0(ServerProtocol.ResBoardTakeReward response);
    }
}

class RedDotAbility : RedDotBase
{
    /*0x11c3cb8*/ RedDotAbility();
    /*0x11c3974*/ void OnAwake();
    /*0x11c39f0*/ void OnEnableMethod();
    /*0x11c3ac4*/ void OnDisableMethod();
    /*0x11c3b70*/ void HandleRedDotEvent();
}

class RedDotAds : RedDotBase
{
    /*0x28*/ int m_index;

    /*0x11c3e1c*/ RedDotAds();
    /*0x11c3cd8*/ void InitReddot(int index);
    /*0x11c3ce8*/ void OnAwake();
    /*0x11c3d1c*/ void OnEnableMethod();
    /*0x11c3da0*/ void HandleRedDotEvent();
}

class RedDotArea : RedDotBase
{
    /*0x11c3ff0*/ RedDotArea();
    /*0x11c3e30*/ void OnAwake();
    /*0x11c3e58*/ void OnEnableMethod();
    /*0x11c3fe8*/ void OnDisableMethod();
    /*0x11c3fec*/ void HandleRedDotEvent();
    /*0x11c3e7c*/ void EnableArea();
}

class RedDotAsend : RedDotBase
{
    /*0x11c41b0*/ RedDotAsend();
    /*0x11c4000*/ void OnAwake();
    /*0x11c4028*/ void OnEnableMethod();
    /*0x11c4054*/ void OnDisableMethod();
    /*0x11c4058*/ void HandleRedDotEvent();
}

class RedDotBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ RedDotType m_RedDotType;
    /*0x20*/ AtlasImage m_cDotImage;

    /*0x11c3cc8*/ RedDotBase();
    /*0x11c41c0*/ void Awake();
    /*0x11c399c*/ void OnAwake();
    /*0x11c41cc*/ void OnEnable();
    /*0x11c3a1c*/ void OnEnableMethod();
    /*0x11c446c*/ void OnDisable();
    /*0x11c3ac8*/ void OnDisableMethod();
    /*0x11c3c6c*/ void EnableDot(bool _enable);
    /*0x11c4688*/ void RefreshEvent();
    void HandleRedDotEvent();
}

class RedDotBookTab : RedDotBase
{
    /*0x11c48ec*/ RedDotBookTab();
    /*0x11c4694*/ void OnAwake();
    /*0x11c46bc*/ void OnEnableMethod();
    /*0x11c4838*/ void OnDisableMethod();
    /*0x11c4798*/ void BindEvent();
    /*0x11c46f8*/ void DeleteEvent();
    /*0x11c485c*/ void HandleRedDotEvent();
}

class RedDotBounty : RedDotBase
{
    /*0x11c49f0*/ RedDotBounty();
    /*0x11c48fc*/ void OnAwake();
    /*0x11c4930*/ void OnEnableMethod();
    /*0x11c4994*/ void HandleRedDotEvent();
}

class RedDotCamp : RedDotBase
{
    /*0x11c5000*/ RedDotCamp();
    /*0x11c4a00*/ void OnAwake();
    /*0x11c4a28*/ void OnEnableMethod();
    /*0x11c4a54*/ void OnDisableMethod();
    /*0x11c4a58*/ bool CheckUnlockGacha();
    /*0x11c4adc*/ bool CheckUnlockRankingBoard();
    /*0x11c4b60*/ bool CheckUnlockGoddessTemple();
    /*0x11c4be4*/ bool CheckAsend();
    /*0x11c4d20*/ void HandleRedDotEvent();
}

class RedDotCashShop : RedDotBase
{
    /*0x28*/ DefineCashShop.CashShopCategoryType m_cashShopCategoryType;
    /*0x2c*/ DefineCashShop.CashShopTabType m_cashShopTabType;

    /*0x11c55cc*/ RedDotCashShop();
    /*0x11c5010*/ void OnAwake();
    /*0x11c5038*/ void OnEnableMethod();
    /*0x11c559c*/ void OnDisableMethod();
    /*0x11c5338*/ void BindEvent();
    /*0x11c50d4*/ void DeleteEvent();
    /*0x11c55c0*/ void HandleRedDotEvent();
    /*0x11c55c4*/ void HandleRedDotEventPurchase(string packageId);
    /*0x11c55c8*/ void HandleRedDotEventJoinPage(DefineCashShop.CashShopTabType tabType);
    /*0x11c506c*/ void UpdateCashShopReddot();
}

class RedDotChat : RedDotBase
{
    /*0x11c5868*/ RedDotChat();
    /*0x11c55e8*/ void OnAwake();
    /*0x11c560c*/ void OnEnableMethod();
    /*0x11c5638*/ void OnDisableMethod();
    /*0x11c563c*/ bool CheckDot();
    /*0x11c5840*/ void HandleRedDotEvent();

    class <>c
    {
        static /*0x0*/ RedDotChat.<> <>9;
        static /*0x8*/ System.Func<ChatSystem.ChannelInfo, bool> <>9__3_0;

        static /*0xf98244*/ <>c();
        /*0xf982a4*/ <>c();
        /*0xf982ac*/ bool <CheckDot>b__3_0(ChatSystem.ChannelInfo x);
    }
}

class RedDotChatTab : RedDotBase
{
    /*0x11c5a4c*/ RedDotChatTab();
    /*0x11c5878*/ void OnAwake();
    /*0x11c58a0*/ void OnEnableMethod();
    /*0x11c5a20*/ void OnDisableMethod();
    /*0x11c5a24*/ void HandleRedDotEvent();
    /*0x11c58cc*/ bool IsCondition();

    class <>c
    {
        static /*0x0*/ RedDotChatTab.<> <>9;
        static /*0x8*/ System.Func<ChatSystem.ChannelInfo, bool> <>9__4_0;

        static /*0xf982d8*/ <>c();
        /*0xf98338*/ <>c();
        /*0xf98340*/ bool <IsCondition>b__4_0(ChatSystem.ChannelInfo x);
    }
}

class RedDotEventBoss : RedDotBase
{
    /*0x11c5bec*/ RedDotEventBoss();
    /*0x11c5b04*/ void OnAwake();
    /*0x11c5b38*/ void OnEnableMethod();
    /*0x11c5b64*/ void HandleRedDotEvent();
}

class RedDotFastIdle : RedDotBase
{
    /*0x11c5cc0*/ RedDotFastIdle();
    /*0x11c5bfc*/ void OnAwake();
    /*0x11c5c30*/ void HandleRedDotEvent();
}

class RedDotFriend : RedDotBase
{
    /*0x28*/ bool m_checkAccountTop;
    /*0x29*/ bool m_checkRequestFriend;
    /*0x2a*/ bool m_checkFriendPoint;
    /*0x2b*/ bool m_checkLend;
    /*0x2c*/ bool m_checkRentSlot;
    /*0x2d*/ bool m_checkNewMercenary;

    /*0x11c628c*/ RedDotFriend();
    /*0x11c5cd0*/ void OnAwake();
    /*0x11c5cf8*/ void OnEnableMethod();
    /*0x11c5dac*/ void OnDisableMethod();
    /*0x11c5db0*/ void HandleRedDotEvent();
    /*0x11c5db4*/ bool CheckAccountTop();
    /*0x11c5e24*/ bool CheckRequestFirend();
    /*0x11c5ec0*/ bool CheckFriendPoint();
    /*0x11c60c0*/ bool CheckLendList();
    /*0x11c61e8*/ bool CheckNewMercenary();
    /*0x11c6284*/ bool CheckRentSlot();
    /*0x11c6164*/ bool CheckUnlockMercenary();
    /*0x11c5d2c*/ void EnableActiveFriend();
}

class RedDotGacha : RedDotBase
{
    /*0x28*/ bool useNormalGacha;
    /*0x29*/ bool useHighGacha;
    /*0x2a*/ bool useFurnitureGacha;

    /*0x11c6680*/ RedDotGacha();
    /*0x11c62ac*/ void OnAwake();
    /*0x11c62d4*/ void OnEnableMethod();
    /*0x11c63c0*/ void OnDisableMethod();
    /*0x11c6468*/ void HandleRedDotEvent();
}

class RedDotGuild : RedDotBase
{
    /*0x11c678c*/ RedDotGuild();
    /*0x11c6698*/ void OnAwake();
    /*0x11c66cc*/ void OnEnableMethod();
    /*0x11c6730*/ void HandleRedDotEvent();
}

class RedDotHeroMenu : RedDotBase
{
    /*0x11c6af8*/ RedDotHeroMenu();
    /*0x11c679c*/ void OnAwake();
    /*0x11c67c4*/ void OnEnableMethod();
    /*0x11c6940*/ void OnDisableMethod();
    /*0x11c68a0*/ void BindEvent();
    /*0x11c6800*/ void DeleteEvent();
    /*0x11c6964*/ void HandleRedDotEvent();
}

class RedDotHeroTab : RedDotBase
{
    /*0x11c6bc8*/ RedDotHeroTab();
    /*0x11c6b08*/ void OnAwake();
    /*0x11c6b30*/ void OnEnableMethod();
    /*0x11c6b64*/ void OnDisableMethod();
    /*0x11c6b60*/ void BindEvent();
    /*0x11c6b5c*/ void DeleteEvent();
    /*0x11c6b68*/ void HandleRedDotEvent();
}

class RedDotHousingLike : RedDotBase
{
    /*0x11c6cc0*/ RedDotHousingLike();
    /*0x11c6bd8*/ void OnAwake();
    /*0x11c6c00*/ void OnEnableMethod();
    /*0x11c6c2c*/ void OnDisableMethod();
    /*0x11c6c30*/ void HandleRedDotEvent();
}

class RedDotInventory : RedDotBase
{
    /*0x11c6dc0*/ RedDotInventory();
    /*0x11c6cd0*/ void OnAwake();
    /*0x11c6d04*/ void OnEnableMethod();
    /*0x11c6d30*/ void HandleRedDotEvent();
}

class RedDotMail : RedDotBase
{
    /*0x28*/ bool m_bMailEnable;

    /*0x11c6f24*/ RedDotMail();
    /*0x11c6dd0*/ void OnAwake();
    /*0x11c6df8*/ void OnEnableMethod();
    /*0x11c6e24*/ void OnDisableMethod();
    /*0x11c6e28*/ void HandleRedDotEvent();
}

class RedDotMinigame : RedDotBase
{
    /*0x28*/ bool m_isRace;
    /*0x29*/ bool m_isRun;

    /*0x11c7828*/ RedDotMinigame();
    /*0x11c76fc*/ void OnAwake();
    /*0x11c7724*/ void OnEnableMethod();
    /*0x11c7820*/ void OnDisableMethod();
    /*0x11c7824*/ void HandleRedDotEvent();
    /*0x11c7748*/ void EanbleRace();
}

class RedDotNotice : RedDotBase
{
    /*0x11c7968*/ RedDotNotice();
    /*0x11c7838*/ void OnAwake();
    /*0x11c7860*/ void OnEnableMethod();
    /*0x11c788c*/ void OnDisableMethod();
    /*0x11c7890*/ void HandleRedDotEvent();
}

class RedDotQuest : RedDotBase
{
    /*0x11c7a54*/ RedDotQuest();
    /*0x11c7978*/ void OnAwake();
    /*0x11c79a0*/ void OnEnableMethod();
    /*0x11c7a4c*/ void OnDisableMethod();
    /*0x11c7a50*/ void HandleRedDotEvent();
    /*0x11c79c4*/ void EnableActiveQuest();
}

class RedDotRaceReward : RedDotBase
{
    /*0x11c7b40*/ RedDotRaceReward();
    /*0x11c7a64*/ void OnAwake();
    /*0x11c7a8c*/ void OnEnableMethod();
    /*0x11c7b38*/ void OnDisableMethod();
    /*0x11c7b3c*/ void HandleRedDotEvent();
    /*0x11c7ab0*/ void EanbleRace();
}

class RedDotRankingBoard : RedDotBase
{
    /*0x11c7c2c*/ RedDotRankingBoard();
    /*0x11c7b50*/ void OnAwake();
    /*0x11c7b78*/ void OnEnableMethod();
    /*0x11c7c24*/ void OnDisableMethod();
    /*0x11c7c28*/ void HandleRedDotEvent();
    /*0x11c7b9c*/ void EnableRankingBoardDot();
}

class RedDotRelation : RedDotBase
{
    /*0x11c7d20*/ RedDotRelation();
    /*0x11c7c3c*/ void OnAwake();
    /*0x11c7c64*/ void OnEnableMethod();
    /*0x11c7d18*/ void OnDisableMethod();
    /*0x11c7d1c*/ void HandleRedDotEvent();
    /*0x11c7c88*/ void EnableRelation();
}

class RedDotResonance : RedDotBase
{
    /*0x11c7e80*/ RedDotResonance();
    /*0x11c7d30*/ void OnAwake();
    /*0x11c7d58*/ void OnEnableMethod();
    /*0x11c7e78*/ void OnDisableMethod();
    /*0x11c7e7c*/ void HandleRedDotEvent();
    /*0x11c7d7c*/ void EnableResonance();
}

class RedDotRoulette : RedDotBase
{
    /*0x11c7f94*/ RedDotRoulette();
    /*0x11c7e90*/ void OnAwake();
    /*0x11c7ec4*/ void OnEnableMethod();
    /*0x11c7f30*/ void HandleRedDotEvent();
}

class RedDotSkill : RedDotBase
{
    /*0x11c818c*/ RedDotSkill();
    /*0x11c7fa4*/ void OnAwake();
    /*0x11c7fcc*/ void OnEnableMethod();
    /*0x11c80b0*/ void OnDisableMethod();
    /*0x11c8000*/ void BindEvent();
    /*0x11c80d4*/ void DeleteEvent();
    /*0x11c817c*/ void HandleReddotOn();
    /*0x11c8184*/ void HandleRedDotEvent();
}

class RedDotWorldBoss : RedDotBase
{
    /*0x28*/ int m_index;

    /*0x11c8340*/ RedDotWorldBoss();
    /*0x11c819c*/ void InitReddot(int index);
    /*0x11c81ac*/ void OnAwake();
    /*0x11c81e0*/ void OnEnableMethod();
    /*0x11c8294*/ void HandleRedDotEvent();
}

class ReddotEvent : RedDotBase
{
    /*0x11c8458*/ ReddotEvent();
    /*0x11c8354*/ void OnAwake();
    /*0x11c8388*/ void OnEnableMethod();
    /*0x11c83f4*/ void HandleRedDotEvent();
}

class RedDotEffect : UnityEngine.MonoBehaviour
{
    /*0x18*/ AtlasImage m_effect;
    /*0x20*/ AtlasImage m_parent;

    /*0x11c5afc*/ RedDotEffect();
    /*0x11c5a5c*/ void OnEnable();
    /*0x11c5af4*/ void OnDisable();
    /*0x11c5a88*/ System.Collections.IEnumerator CoLoop();

    class <CoLoop>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RedDotEffect <>4__this;
        /*0x28*/ UnityEngine.WaitForSeconds <waitSec>5__2;

        /*0xf9836c*/ <CoLoop>d__4(int <>1__state);
        /*0xf98398*/ void System.IDisposable.Dispose();
        /*0xf9839c*/ bool MoveNext();
        /*0xf98560*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf98568*/ void System.Collections.IEnumerator.Reset();
        /*0xf985a8*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum RedDotType
{
    NONE = -1,
    CHAT = 0,
    MAIL = 1,
    INVENTORY = 2,
    IDLEREWARD = 3,
    RANKINGBOARD = 4,
    QUEST = 5,
    FRIEND = 6,
    CASH_SHOP = 7,
    BOOK_TAB = 8,
    HERO_MENU = 9,
    HERO_TAB = 10,
    HERO_SKILL = 11,
    ASEND = 12,
    CAMP_MENU = 13,
    GACHA = 14,
    CHAT_TAB = 15,
    NOTICE = 16,
    EVENT = 17,
    RESONANCE = 18,
    GUILD = 19,
    MINIGAME = 20,
    BOUNTY = 21,
    RACE_REWARD = 22,
    AREA_MENU = 23,
    RELATION = 24,
    WORLDBOSS = 25,
    HOUSINGLIKE = 26,
    ABILITY = 27,
    EVENTBOSS = 28,
    EVENTROULETTE = 29,
    ADS = 30,
    End = 31,
}

class RedDotManager : Singleton.Component.SingletonComponent<RedDotManager>
{
    static /*0x0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<RedDotBase>> m_dicRedDot;
    static /*0x8*/ int REDDOT_HERO_CHECK_COUNT;
    static /*0xc*/ int REDDOT_GACHA_CHECK_COUNT;
    static /*0x10*/ System.Action OnRedDotEvent;
    /*0x28*/ bool[] m_reddotHeroChecks;
    /*0x30*/ bool <newFriendAccountTop>k__BackingField;
    /*0x31*/ bool <newCashShopAccountTop>k__BackingField;
    /*0x32*/ bool <newGuildAccountTop>k__BackingField;
    /*0x33*/ bool <newBountyAccountTop>k__BackingField;

    static /*0x11c7650*/ RedDotManager();
    static /*0x11c41d8*/ void add_OnRedDotEvent(System.Action value);
    static /*0x11c4478*/ void remove_OnRedDotEvent(System.Action value);
    static /*0x11c42d0*/ void AddDics(RedDotType _type, RedDotBase _base);
    static /*0x11c4570*/ void DelDics(RedDotType _type, RedDotBase _base);
    static /*0x11c71b8*/ void DelDicsAll(RedDotType _type);
    /*0x11c7604*/ RedDotManager();
    /*0x11c6f34*/ bool get_newFriendAccountTop();
    /*0x11c6f3c*/ void set_newFriendAccountTop(bool value);
    /*0x11c6f48*/ bool get_newCashShopAccountTop();
    /*0x11c6f50*/ void set_newCashShopAccountTop(bool value);
    /*0x11c6f5c*/ bool get_newGuildAccountTop();
    /*0x11c6f64*/ void set_newGuildAccountTop(bool value);
    /*0x11c6f70*/ bool get_newBountyAccountTop();
    /*0x11c6f78*/ void set_newBountyAccountTop(bool value);
    /*0x11c6f84*/ void AwakeInstance();
    /*0x11c6f88*/ bool InitInstance();
    /*0x11c7088*/ void ReleaseInstance();
    /*0x11c17f0*/ void Refresh(RedDotType _type);
    /*0x11c72ec*/ void AllRefresh();
    /*0x11c6a2c*/ bool IsOnHeroReddot();
    /*0x11c75a8*/ bool IsOnHeroReddot(int index);
    /*0x11c7364*/ void UpdateReddotHeroList();
    /*0x11c7600*/ void HandleRedDotEventSmartEquip(PTShare.Define.SHero hero);
}

struct RelationStatus
{
    /*0x10*/ string ConditionGrade1;
    /*0x18*/ int ConditionAmount1;
    /*0x20*/ string ConditionGrade2;
    /*0x28*/ int ConditionAmount2;
    /*0x30*/ string StatType;
    /*0x38*/ float StatValue;
}

class RelationManager : Singleton.Data.SingletonData<RelationManager>
{
    static int MaxRelationLevel = 8;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SRelation> liRelation;
    /*0x28*/ System.Collections.Generic.Dictionary<int, System.Int32[]> liRelationUnitID;
    /*0x30*/ System.Collections.Generic.Dictionary<int, RelationStatus[]> liRelationStatus;

    /*0xf199f8*/ RelationManager();
    /*0xf18b80*/ string get_UserToken();
    /*0xf18c00*/ bool InitInstance();
    /*0xf18c08*/ void ReleaseInstance();
    /*0xf18c0c*/ void InitializeUnitIndexDics();
    /*0xf18cf8*/ void Send_Activate(int nIndex, System.Action callback);
    /*0xf18e88*/ void SetRelationList(System.Collections.Generic.List<PTShare.Define.SRelation> list);
    /*0xf18e90*/ System.Collections.Generic.List<PTShare.Define.SRelation> GetRelationList();
    /*0xf18e98*/ PTShare.Define.SRelation GetRelationData(int nIndex);
    /*0xf18f88*/ void RefreshLatestRelation(int nUnitID);
    /*0xf19488*/ TableData.TableData_Relation FindRelationTableData(int nUnitID);
    /*0xf196c8*/ int[] GetRelationDataUnitID(TableData.TableData_Relation data);
    /*0xf19730*/ RelationStatus[] GetRelationStatusArray(int nIndex);
    /*0xf19794*/ bool[] IsUseArrayUnit(int[] array);
    /*0xf198dc*/ bool IsPossiableActivateRelation();
    /*0xf19b30*/ void <InitializeUnitIndexDics>b__8_0(TableData.TableData_Relation x);

    class <>c__DisplayClass9_0
    {
        /*0x10*/ RelationManager <>4__this;
        /*0x18*/ int nIndex;
        /*0x20*/ System.Action callback;
        /*0x28*/ System.Predicate<PTShare.Define.SRelation> <>9__1;
        /*0x30*/ System.Predicate<PTShare.Define.SRelationMini> <>9__2;

        /*0xf98710*/ <>c__DisplayClass9_0();
        /*0xf98718*/ void <Send_Activate>b__0(ServerProtocol.ResRelationActivate res);
        /*0xf98aac*/ bool <Send_Activate>b__1(PTShare.Define.SRelation x);
        /*0xf98ad0*/ bool <Send_Activate>b__2(PTShare.Define.SRelationMini x);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ int nIndex;

        /*0xf986cc*/ <>c__DisplayClass12_0();
        /*0xf986d4*/ bool <GetRelationData>b__0(PTShare.Define.SRelation x);
    }

    class <>c
    {
        static /*0x0*/ RelationManager.<> <>9;
        static /*0x8*/ System.Converter<int, int> <>9__13_0;
        static /*0x10*/ System.Func<PTShare.Define.SRelation, bool> <>9__18_0;

        static /*0xf985b0*/ <>c();
        /*0xf98610*/ <>c();
        /*0xf98618*/ int <RefreshLatestRelation>b__13_0(int x);
        /*0xf986ac*/ bool <IsPossiableActivateRelation>b__18_0(PTShare.Define.SRelation x);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ int nUnitID;
        /*0x18*/ System.Func<int, bool> <>9__0;

        /*0xf986f8*/ <>c__DisplayClass14_0();
        /*0xf98700*/ bool <FindRelationTableData>b__0(int x);
    }
}

class ResonanceManager : Singleton.Data.SingletonData<ResonanceManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> liResonanceHero;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SResonanceSlot> liResonanceSlot;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SHero> liResonanceMostHero;
    /*0x38*/ System.Collections.Generic.List<PTShare.Define.SHero> liResonanceCacheHero;
    /*0x40*/ System.Collections.Generic.Dictionary<int, long> dicTotalPower;
    /*0x48*/ int nResonanceSlot;
    /*0x4c*/ int nResonanceLevel;
    /*0x50*/ int nResonanceCrystalCount;
    /*0x54*/ bool <IsUnlimited>k__BackingField;
    /*0x58*/ int CrystalMaxCount;
    /*0x5c*/ int CrystalHeroLevelCount;
    /*0x60*/ int CrystalHeroIncreaseSlotCount;
    /*0x64*/ int HeroMaxLevel;
    /*0x68*/ int CrystalMaxLevel;

    /*0xf28d3c*/ ResonanceManager();
    /*0xf26b20*/ bool get_IsUnlimited();
    /*0xf26b28*/ void set_IsUnlimited(bool value);
    /*0xf26b34*/ string get_UserToken();
    /*0xf26bb4*/ bool InitInstance();
    /*0xf26bbc*/ void ReleaseInstance();
    /*0xf26c98*/ void Send_Enter(System.Action _callback);
    /*0xf26e8c*/ void Send_Open(System.Action _callback, int _nCurrencyType);
    /*0xf26fd4*/ void Send_Clean(System.Action _callback, int _nSlotIndex);
    /*0xf27128*/ void Send_Push(System.Action<PTShare.Define.SHero> _callback, int _nSlotid, int _nHeroid);
    /*0xf27288*/ void Send_Pop(System.Action _callback, int _nHeroid);
    /*0xf273d8*/ void Send_Unlock(System.Action _callback);
    /*0xf27510*/ void Send_Reinforce(System.Action _callback);
    /*0xf268b0*/ void Send_LevelUp(System.Action _callback);
    /*0xf27650*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> GetResonanceHeroes();
    /*0xf27658*/ System.Collections.Generic.List<PTShare.Define.SHero> GetResonanceMostHero();
    /*0xf27660*/ int GetResonanceSlot();
    /*0xf27668*/ int GetCrystalHeroIncreaseSlotCount();
    /*0xf27670*/ int GetResonanceLevel();
    /*0xf27678*/ PTShare.Define.SResonanceSlot GetResonanceSlotTime(int _nSlotIndex);
    /*0xf27764*/ int GetCrystalCount();
    /*0xf2776c*/ long GetTotalPower();
    /*0xf26660*/ long GetTotalPower(int offset);
    /*0xf26418*/ void GetCurrentCrystalMaterials(System.Collections.Generic.List<Rewards> reward);
    /*0xf2789c*/ int GetResonanceMaxLevel();
    /*0xf27b98*/ void SetResonanceLevel(int _nLevel, bool sendHighCp);
    /*0xf27df4*/ void SetResonanceMost(System.Collections.Generic.List<PTShare.Define.SLvHero> member);
    /*0xf280dc*/ void SetResonanceMost(System.Collections.Generic.List<PTShare.Define.SHero> member);
    /*0xf27f44*/ void SetResonanceMost();
    /*0xf28214*/ void SetUnlimited(bool enable);
    /*0xf28220*/ void SetCrystalCount(int nCount);
    /*0xf28228*/ void RefreshTotalPower(PTShare.Define.SHero hero);
    /*0xf28344*/ void RefreshTotalPower();
    /*0xf287cc*/ void RefreshResonanceHero();
    /*0xf28888*/ PTShare.Define.SHero ConvertResonanceSHero(bool _bIsReal, PTShare.Define.SResonanceHero _hero);
    /*0xf288ec*/ PTShare.Define.SResonanceHero ConvertSHeroResonance(int _nSlot, int _nLevel, PTShare.Define.SHero _hero);
    /*0xf289b4*/ bool IsUseResonanceUnitID(int _nUnitID);
    /*0xf28ab0*/ int GetMinResonanceLevel();
    /*0xf28b34*/ int GetSyncLimitLevel();
    /*0xf28ba4*/ int GetSyncLimitLevelGap();
    /*0xf28c08*/ int GetMostHeroMinLevel(int nIndex);
    /*0xf28ce0*/ bool IsPossibleUnlimitCrystal();
    /*0xf27888*/ bool IsProportionCrystalLevel();
    /*0xf28f88*/ void <SetResonanceLevel>b__40_1(PTShare.Define.SHero x);
    /*0xf29080*/ void <RefreshTotalPower>b__47_0(PTShare.Define.SResonanceHero x);
    /*0xf29154*/ void <RefreshResonanceHero>b__48_0(PTShare.Define.SResonanceHero x);

    class <>c__DisplayClass21_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Action<PTShare.Define.SResonanceHero> <>9__1;

        /*0xf9939c*/ <>c__DisplayClass21_0();
        /*0xf993a4*/ void <Send_Enter>b__0(ServerProtocol.ResResonanceEnter res);
        /*0xf99600*/ void <Send_Enter>b__1(PTShare.Define.SResonanceHero x);
    }

    class <>c
    {
        static /*0x0*/ ResonanceManager.<> <>9;
        static /*0x8*/ System.Converter<int, PTShare.Define.SHero> <>9__21_2;
        static /*0x10*/ System.Func<System.Collections.Generic.KeyValuePair<int, long>, long> <>9__36_0;
        static /*0x18*/ System.Func<PTShare.Define.SHero, bool> <>9__39_0;
        static /*0x20*/ System.Converter<PTShare.Define.SHero, int> <>9__39_1;
        static /*0x28*/ System.Predicate<PTShare.Define.SHero> <>9__40_0;
        static /*0x30*/ System.Converter<PTShare.Define.SLvHero, PTShare.Define.SHero> <>9__41_0;
        static /*0x38*/ System.Converter<PTShare.Define.SHero, PTShare.Define.SLvHero> <>9__42_0;
        static /*0x40*/ System.Comparison<PTShare.Define.SHero> <>9__43_0;
        static /*0x48*/ System.Func<PTShare.Define.SResonanceHero, int> <>9__47_1;

        static /*0xf9908c*/ <>c();
        /*0xf990ec*/ <>c();
        /*0xf990f4*/ PTShare.Define.SHero <Send_Enter>b__21_2(int x);
        /*0xf9917c*/ long <GetTotalPower>b__36_0(System.Collections.Generic.KeyValuePair<int, long> x);
        /*0xf991bc*/ bool <GetResonanceMaxLevel>b__39_0(PTShare.Define.SHero x);
        /*0xf991dc*/ int <GetResonanceMaxLevel>b__39_1(PTShare.Define.SHero x);
        /*0xf991f4*/ bool <SetResonanceLevel>b__40_0(PTShare.Define.SHero x);
        /*0xf99214*/ PTShare.Define.SHero <SetResonanceMost>b__41_0(PTShare.Define.SLvHero x);
        /*0xf992b0*/ PTShare.Define.SLvHero <SetResonanceMost>b__42_0(PTShare.Define.SHero x);
        /*0xf99328*/ int <SetResonanceMost>b__43_0(PTShare.Define.SHero a, PTShare.Define.SHero b);
        /*0xf99384*/ int <RefreshTotalPower>b__47_1(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf996dc*/ <>c__DisplayClass22_0();
        /*0xf996e4*/ void <Send_Open>b__0(ServerProtocol.ResResonanceOpen res);
    }

    class <>c__DisplayClass23_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ int _nSlotIndex;
        /*0x20*/ System.Action _callback;
        /*0x28*/ System.Predicate<PTShare.Define.SResonanceSlot> <>9__1;

        /*0xf99804*/ <>c__DisplayClass23_0();
        /*0xf9980c*/ void <Send_Clean>b__0(ServerProtocol.ResResonanceClean res);
        /*0xf999b4*/ bool <Send_Clean>b__1(PTShare.Define.SResonanceSlot x);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ int _nHeroid;
        /*0x18*/ ResonanceManager <>4__this;
        /*0x20*/ int _nSlotid;
        /*0x28*/ System.Action<PTShare.Define.SHero> _callback;

        /*0xf999d8*/ <>c__DisplayClass24_0();
        /*0xf999e0*/ void <Send_Push>b__0(ServerProtocol.ResResonancePush res);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ int _nHeroid;

        /*0xf99c10*/ <>c__DisplayClass25_0();
        /*0xf99c18*/ void <Send_Pop>b__0(ServerProtocol.ResResonancePop res);
    }

    class <>c__DisplayClass25_1
    {
        /*0x10*/ ServerProtocol.ResResonancePop res;
        /*0x18*/ PTShare.Define.SResonanceHero _hero;

        /*0xf9a008*/ <>c__DisplayClass25_1();
        /*0xf9a010*/ bool <Send_Pop>b__1(PTShare.Define.SResonanceHero x);
        /*0xf9a040*/ bool <Send_Pop>b__2(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Action<PTShare.Define.SResonanceHero> <>9__1;

        /*0xf9a070*/ <>c__DisplayClass26_0();
        /*0xf9a078*/ void <Send_Unlock>b__0(ServerProtocol.ResResonanceUnlock res);
        /*0xf9a1dc*/ void <Send_Unlock>b__1(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xf9a320*/ <>c__DisplayClass27_0();
        /*0xf9a328*/ void <Send_Reinforce>b__0(ServerProtocol.ResResonanceReinforce res);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ ResonanceManager <>4__this;
        /*0x18*/ System.Action _callback;
        /*0x20*/ System.Action<PTShare.Define.SHero> <>9__1;

        /*0xf9a4c8*/ <>c__DisplayClass28_0();
        /*0xf9a4d0*/ void <Send_LevelUp>b__0(ServerProtocol.ResResonanceLevelUp res);
        /*0xf9a744*/ void <Send_LevelUp>b__1(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ int _nSlotIndex;

        /*0xf9a838*/ <>c__DisplayClass34_0();
        /*0xf9a840*/ bool <GetResonanceSlotTime>b__0(PTShare.Define.SResonanceSlot x);
    }

    class <>c__DisplayClass37_0
    {
        /*0x10*/ PTShare.Define.SStatBonus statBonus;
        /*0x18*/ int offset;

        /*0xf9a864*/ <>c__DisplayClass37_0();
        /*0xf9a86c*/ long <GetTotalPower>b__0(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ PTShare.Define.SHero hero;

        /*0xf9a900*/ <>c__DisplayClass46_0();
        /*0xf9a908*/ bool <RefreshTotalPower>b__0(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass51_0
    {
        /*0x10*/ int _nUnitID;

        /*0xf9a938*/ <>c__DisplayClass51_0();
        /*0xf9a940*/ bool <IsUseResonanceUnitID>b__0(PTShare.Define.SResonanceHero x);
    }
}

class GameSceneManager : Singleton.Data.SingletonData<GameSceneManager>
{
    static /*0x0*/ System.Action OnEventChangedSceneBegin;
    static /*0x8*/ System.Action OnEventChangedSceneEnd;
    static /*0x10*/ System.Action OnEventChangedSceneEnd_InGame;
    static /*0x18*/ string SceneName;

    static /*0xecedf4*/ GameSceneManager();
    static /*0xecd4cc*/ void add_OnEventChangedSceneBegin(System.Action value);
    static /*0xecd5c0*/ void remove_OnEventChangedSceneBegin(System.Action value);
    static /*0xecd6b4*/ void add_OnEventChangedSceneEnd(System.Action value);
    static /*0xecd7ac*/ void remove_OnEventChangedSceneEnd(System.Action value);
    static /*0xecd8a4*/ void add_OnEventChangedSceneEnd_InGame(System.Action value);
    static /*0xecd99c*/ void remove_OnEventChangedSceneEnd_InGame(System.Action value);
    static /*0xecdac4*/ void GotoRestart();
    static /*0xecdbb4*/ void OnChangeScene_Begin();
    static /*0xecdc2c*/ void OnChangeScene_End();
    static /*0xecdca4*/ void OnChangeScene_End_InGame();
    static /*0xecdd1c*/ void SetSceneName(string sceneName);
    static /*0xecdd84*/ void LoadScene(string _scene_name, string _desc_local_key);
    static /*0xecde6c*/ void LoadSceneAsync(string _scene_name, string _desc_local_key);
    static /*0xecdf64*/ void LoadAssetbundleSceneAsync(string _scene_name, string _desc_local_key);
    static /*0xece060*/ void GotoGameInitialize();
    static /*0xece0dc*/ void GotoBattleScene(bool _bNonLoading);
    static /*0xece44c*/ void GotoMazeScene();
    static /*0xece618*/ void GotoDungeonScene(int dungeonId);
    static /*0xece808*/ void GotoStartSceneToLoadMainScene();
    static /*0xece928*/ void LoadGameLogin();
    static /*0xece9fc*/ void LoadGameInitializeWithAssetBundle();
    static /*0xecead0*/ void GotoMainScene();
    static /*0xeced18*/ string GetSceneName();
    static /*0xece2e8*/ AssetBundleSceneType GetSceneType();
    /*0xeced7c*/ GameSceneManager();
    /*0xecda94*/ bool InitInstance();
    /*0xecdac0*/ void ReleaseInstance();
    /*0xecdab4*/ void GameSettings();
}

class ServiceManager : Singleton.Data.SingletonData<ServiceManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SImageBanner> liImageBanner;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SNotice> liNotice;
    /*0x30*/ bool bReadImageBanner;
    /*0x31*/ bool bUseNewNotice;

    /*0xe278a4*/ ServiceManager();
    /*0xe26fa0*/ bool InitInstance();
    /*0xe26fa8*/ void ReleaseInstance();
    /*0xe27020*/ void SetImageBannerList(System.Collections.Generic.List<PTShare.Define.SImageBanner> banner);
    /*0xe27028*/ void SetNoticeList(System.Collections.Generic.List<PTShare.Define.SNotice> notice);
    /*0xe27030*/ void SetNewNotice(bool enable);
    /*0xe2703c*/ System.Collections.Generic.List<PTShare.Define.SImageBanner> GetImageBannerList();
    /*0xe27044*/ System.Collections.Generic.List<PTShare.Define.SNotice> GetNoticeList();
    /*0xe2704c*/ bool GetNewNotice();
    /*0xe27054*/ void ShowImageBanner(System.Action onExit);
    /*0xe2719c*/ void ShowImageBanner();
    /*0xe272c4*/ void ShowNotice(System.Action onExit);
    /*0xe2713c*/ bool CheckNewImageBanner();
    /*0xe2726c*/ bool CheckUseImageBanner();
    /*0xe27450*/ bool CheckNewNotice();
    /*0xe27740*/ void AllRead();

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ServiceManager <>4__this;
        /*0x18*/ System.Action onExit;

        /*0xcbe848*/ <>c__DisplayClass14_0();
        /*0xcbe850*/ void <ShowNotice>b__0(ServerProtocol.ResAccountNotice res);
    }
}

class SignatureItemManager : Singleton.Data.SingletonData<SignatureItemManager>
{
    static /*0x0*/ System.Action<int> OnChangeSignature;
    /*0x19*/ bool UseSignature;
    /*0x20*/ System.Collections.Generic.List<int> m_openEffectList;

    static /*0xe2c594*/ SignatureItemManager();
    static /*0xe2bd70*/ int SortStat(System.ValueTuple<Battle.CharacterStat.StatType, float> lhs, System.ValueTuple<Battle.CharacterStat.StatType, float> rhs);
    /*0xe2c4d4*/ SignatureItemManager();
    /*0xe2b5c8*/ bool InitInstance();
    /*0xe2b5d4*/ void ReleaseInstance();
    /*0xe2b110*/ void Send_LevelUp(int heroId, System.Action callBack, int count);
    /*0xe2b5d0*/ void InitData();
    /*0xe2b5d8*/ void ReleaseData();
    /*0xe2ade0*/ TableData.TableData_Equipment GetSignatureItemTable(int heroTableId);
    /*0xe2ae20*/ System.Collections.Generic.List<Rewards> GetUnlockRequireCost(int heroTableId);
    /*0xe2b720*/ System.Collections.Generic.List<Rewards> GetSignatureRequireCost(int heroTableId, int level);
    /*0xe2b63c*/ System.Collections.Generic.List<Rewards> GetSignatureRequireCost(TableData.TableData_Equipment equipment, int level);
    /*0xe2b748*/ TableData.TableData_Skillfx GetNextSkillFx(int heroTableId, int lv);
    /*0xe2b878*/ int GetSignatureSkillLevel(int lv);
    /*0xe2b8a8*/ string GetDescKey(int heroTableId, int lv);
    /*0xe2b974*/ bool IsMaxLevel(int heroTableId, int level);
    /*0xe2b9ec*/ bool IsUseSignature(int heroId);
    /*0xe2bab0*/ bool IsUseSignature(PTShare.Define.SHero sHero);
    /*0xe2bb00*/ bool IsUseSignatureSameGrade(int heroId);
    /*0xe2bbc4*/ bool IsSignatureSkillUnlock(int lv);
    /*0xe2af64*/ PTShare.Define.SEquip ConvertSEquip(PTShare.Define.SHero hero);
    /*0xe2bc9c*/ PTShare.Define.SEquip ConvertSEquip(PTShare.Define.SConditionHero hero);
    /*0xe2bbe8*/ PTShare.Define.SEquip ConvertSEquip(int tableId, int lv);
    /*0xe2bd10*/ UnitGradeType ConvertGrade(int lv);
    /*0xe2bdf4*/ System.ValueTuple<int, System.Collections.Generic.List<Rewards>> GetFastLevelupCost(int heroTableId, int level);
    /*0xe2bfec*/ void AccReward(ref System.Collections.Generic.List<Rewards> target, System.Collections.Generic.List<Rewards> source);
    /*0xe2c3d0*/ bool CheckOpenEffectHeroAndRemove(int heroId);
    /*0xe2c470*/ void AddOpenEffectHero(int heroId);

    class <>c__DisplayClass2_0
    {
        /*0x10*/ int heroId;
        /*0x18*/ System.Action callBack;

        /*0xcbf708*/ <>c__DisplayClass2_0();
        /*0xcbf710*/ void <Send_LevelUp>b__0(ServerProtocol.ResEquipSignature response);
    }

    class <>c
    {
        static /*0x0*/ SignatureItemManager.<> <>9;
        static /*0x8*/ System.Action<PTShare.Define.SItem> <>9__2_1;

        static /*0xcbf618*/ <>c();
        /*0xcbf678*/ <>c();
        /*0xcbf680*/ void <Send_LevelUp>b__2_1(PTShare.Define.SItem m);
    }
}

class HeroSkinManager : Singleton.Data.SingletonData<HeroSkinManager>
{
    static /*0x0*/ System.Action OnRefreshSkinEvent;
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SSkin> liUseSkin;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SSkin> liEquipSkin;

    static /*0x1268630*/ HeroSkinManager();
    static /*0x1267c28*/ void add_OnRefreshSkinEvent(System.Action value);
    static /*0x1267d1c*/ void remove_OnRefreshSkinEvent(System.Action value);
    /*0x12685b8*/ HeroSkinManager();
    /*0x1267ba8*/ string get_UserToken();
    /*0x1267e10*/ bool InitInstance();
    /*0x1267e18*/ void ReleaseInstance();
    /*0x1267e7c*/ void Send_BuySkin(int skinid, System.Action callback);
    /*0x1267fd0*/ void Send_EquipSkin(int unitid, int beforeid, int skinid, System.Action callback);
    /*0x1268240*/ void Send_UnEquipSkin(int unitid, int skinid, System.Action callback);
    /*0x126839c*/ void SetEquipSkinUnit(System.Collections.Generic.List<PTShare.Define.SSkin> use, System.Collections.Generic.List<PTShare.Define.SSkin> equip);
    /*0x12683a4*/ void IncreaseSkin(System.Collections.Generic.List<PTShare.Define.SSkin> list);
    /*0x126846c*/ System.Collections.Generic.List<PTShare.Define.SSkin> GetSkinList();
    /*0x1268474*/ bool IsExistUnitSkin(int unitID);
    /*0x12684cc*/ bool IsUseSkin(int unitID);
    /*0x1268154*/ bool IsEquipSkin(int unitID);
    /*0x1268634*/ void <IncreaseSkin>b__13_0(PTShare.Define.SSkin x);

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HeroSkinManager <>4__this;
        /*0x18*/ int skinid;
        /*0x20*/ System.Action callback;

        /*0x106335c*/ <>c__DisplayClass9_0();
        /*0x1063364*/ void <Send_BuySkin>b__0(ServerProtocol.ResSkinBuy res);
    }

    class <>c__DisplayClass10_0
    {
        /*0x10*/ int unitid;
        /*0x14*/ int skinid;
        /*0x18*/ HeroSkinManager <>4__this;
        /*0x20*/ int beforeid;
        /*0x28*/ System.Action callback;
        /*0x30*/ System.Predicate<PTShare.Define.SSkin> <>9__1;

        /*0x1062ef0*/ <>c__DisplayClass10_0();
        /*0x1062ef8*/ void <Send_EquipSkin>b__0(ServerProtocol.ResSkinEquip res);
        /*0x10630ec*/ bool <Send_EquipSkin>b__1(PTShare.Define.SSkin x);
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ int unitid;
        /*0x18*/ HeroSkinManager <>4__this;
        /*0x20*/ int skinid;
        /*0x28*/ System.Action callback;
        /*0x30*/ System.Predicate<PTShare.Define.SSkin> <>9__1;

        /*0x1063110*/ <>c__DisplayClass11_0();
        /*0x1063118*/ void <Send_UnEquipSkin>b__0(ServerProtocol.ResSkinUnequip res);
        /*0x10632a8*/ bool <Send_UnEquipSkin>b__1(PTShare.Define.SSkin x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ PTShare.Define.SSkin x;

        /*0x10632cc*/ <>c__DisplayClass13_0();
        /*0x10632d4*/ bool <IncreaseSkin>b__1(PTShare.Define.SSkin y);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ int unitID;

        /*0x1063304*/ <>c__DisplayClass16_0();
        /*0x106330c*/ bool <IsUseSkin>b__0(PTShare.Define.SSkin x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ int unitID;

        /*0x1063330*/ <>c__DisplayClass17_0();
        /*0x1063338*/ bool <IsEquipSkin>b__0(PTShare.Define.SSkin x);
    }
}

class ScrollContent_SelectItemGroupEntity : ScrollContent<SelectItemGroupEntity>
{
    /*0xe1b62c*/ ScrollContent_SelectItemGroupEntity();
}

class SelectItemGroupEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x20*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0xe23ca8*/ SelectItemGroupEntity();
    /*0xe239c8*/ void OnDisable();
    /*0xe23aa0*/ void InitEntity(System.Collections.Generic.List<Rewards> rewardList);
    /*0xe23b10*/ void BindEvent();
    /*0xe239cc*/ void RemoveEvent();
    /*0xe23bec*/ void HandleScrollContent(int index, ItemInfoSlot obj);
}

class SpecialSellerPopup : GuiBase
{
    /*0x40*/ ItemTableRewardSlot[] m_itemRewardSlots;
    /*0x48*/ LocalizeString m_popupInfoText;
    /*0x50*/ LocalizeString m_bonusPercentText;
    /*0x58*/ LocalizeString m_expireTimeText;
    /*0x60*/ LocalizeString m_priceText;
    /*0x68*/ UnityEngine.UI.GridLayoutGroup m_layoutGroup;
    /*0x70*/ UnityEngine.Coroutine m_expireTimeCoroutine;
    /*0x78*/ TableData.TableData_Cashshopinstant m_shopData;
    /*0x80*/ PTShare.Define.SInstant m_packetData;
    /*0x88*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x14539dc*/ SpecialSellerPopup();
    /*0x14527d8*/ void OnCreate();
    /*0x14527dc*/ void OnDelete();
    /*0x14527e0*/ void OnEnter();
    /*0x14527e4*/ void OnFinish();
    /*0x14527e8*/ void OnLeave();
    /*0x1452908*/ void OnStart();
    /*0x145290c*/ void SetBonusPercent();
    /*0x1452910*/ void InitPopup(PTShare.Define.SInstant packetData);
    /*0x1452bf0*/ void SetInfo();
    /*0x1452dac*/ void SetBonusValue();
    /*0x1452e9c*/ void SetPrice();
    /*0x14530e0*/ void SetRewardItems();
    /*0x14534b4*/ bool AddVipPointReward();
    /*0x1453448*/ System.Collections.IEnumerator CoUpdateExpireTime();
    /*0x1453638*/ void OnClickPurchase();
    /*0x1452ae4*/ void BindEvent();
    /*0x14527ec*/ void RemoveEvent();
    /*0x145371c*/ void SuccessPurchase(string _packageid, int _vippoint, int _premiumid);
    /*0x145363c*/ void OnPurchaseRequest();
    /*0x14539c0*/ void HandleExpireInstant(PTShare.Define.SInstant sInstant);
    /*0x1453a54*/ bool <InitPopup>b__17_0(TableData.TableData_Cashshopinstant data);
    /*0x1453a84*/ void <SetRewardItems>b__21_0(TableData.TableData_Packageproductgroup data);

    class <CoUpdateExpireTime>d__23 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SpecialSellerPopup <>4__this;
        /*0x28*/ System.TimeSpan <expireTime>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;
        /*0x38*/ System.TimeSpan <secSpan>5__4;

        /*0xcc079c*/ <CoUpdateExpireTime>d__23(int <>1__state);
        /*0xcc07c8*/ void System.IDisposable.Dispose();
        /*0xcc07cc*/ bool MoveNext();
        /*0xcc0af4*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc0afc*/ void System.Collections.IEnumerator.Reset();
        /*0xcc0b3c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class SpecialSellerPopup_Select : GuiBase
{
    /*0x40*/ ScrollContent_SelectItemGroupEntity m_scrollContent;
    /*0x48*/ LocalizeString m_popupNameText;
    /*0x50*/ LocalizeString m_popupInfoText;
    /*0x58*/ LocalizeString m_popupSubInfoText;
    /*0x60*/ LocalizeString m_bonusPercentText;
    /*0x68*/ LocalizeString m_expireTimeText;
    /*0x70*/ LocalizeString m_priceText;
    /*0x78*/ UnityEngine.UI.Image m_bg;
    /*0x80*/ LocalizeString[] m_propertyTexts;
    /*0x88*/ LocalizeString[] m_nameTexts;
    /*0x90*/ UnityEngine.UI.Button[] m_buttons;
    /*0x98*/ UnityEngine.Coroutine m_expireTimeCoroutine;
    /*0xa0*/ TableData.TableData_Cashshopinstant m_shopData;
    /*0xa8*/ PTShare.Define.SInstant m_packetData;
    /*0xb0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<Rewards>> m_rewardDic;
    /*0xb8*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0xc0*/ System.Collections.Generic.List<int> m_groupIdList;

    /*0x14556e8*/ SpecialSellerPopup_Select();
    /*0x1453b34*/ void OnCreate();
    /*0x1453b38*/ void OnDelete();
    /*0x1453b3c*/ void OnEnter();
    /*0x1453b40*/ void OnFinish();
    /*0x1453b44*/ void OnLeave();
    /*0x1453d38*/ void OnStart();
    /*0x1453d3c*/ void SetBonusPercent();
    /*0x1453d40*/ void InitPopup(PTShare.Define.SInstant packetData);
    /*0x1454198*/ void SetName();
    /*0x14542e0*/ void SetInfo();
    /*0x1454428*/ void SetSubInfo();
    /*0x1454570*/ void SetBonusValue();
    /*0x1454c48*/ void SetBackGround();
    /*0x1454660*/ void SetPrice();
    /*0x14548a4*/ void SetGroupCount();
    /*0x1454dfc*/ void SetRewardUIs();
    /*0x1455400*/ System.Collections.IEnumerator CoUpdateExpireTime();
    /*0x145546c*/ void OnClickPurchase();
    /*0x1455500*/ void OnClickShowHeroBook(int index);
    /*0x1453fb8*/ void BindEvent();
    /*0x1453b48*/ void RemoveEvent();
    /*0x145561c*/ void HandleScrollContent(int index, SelectItemGroupEntity obj);
    /*0x14556cc*/ void HandleExpireInstant(PTShare.Define.SInstant sInstant);
    /*0x14557e0*/ bool <InitPopup>b__24_0(TableData.TableData_Cashshopinstant data);

    class <CoUpdateExpireTime>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ SpecialSellerPopup_Select <>4__this;
        /*0x28*/ System.TimeSpan <expireTime>5__2;
        /*0x30*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__3;
        /*0x38*/ System.TimeSpan <secSpan>5__4;

        /*0xcc0b44*/ <CoUpdateExpireTime>d__33(int <>1__state);
        /*0xcc0b70*/ void System.IDisposable.Dispose();
        /*0xcc0b74*/ bool MoveNext();
        /*0xcc0ee8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcc0ef0*/ void System.Collections.IEnumerator.Reset();
        /*0xcc0f30*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum StageDifficult
{
    Normal = 0,
    Hard = 1,
}

class StageManager : Singleton.Data.SingletonData<StageManager>
{
    static /*0x0*/ System.Action OnChangeCampaignEvent;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.SPlayer>> m_dicStagePlayerDataList;
    /*0x28*/ System.DateTime buddyRefreshTime;
    /*0x30*/ StageDifficult m_eCurrentDifficult;
    /*0x34*/ int <LastJoinChapter>k__BackingField;
    /*0x38*/ int <LastJoinStage>k__BackingField;
    /*0x40*/ TableData.TableData_Stage <LastestPopupStageData>k__BackingField;

    static /*0xc93818*/ StageManager();
    static /*0xc918f8*/ void add_OnChangeCampaignEvent(System.Action value);
    static /*0xc919ec*/ void remove_OnChangeCampaignEvent(System.Action value);
    /*0xc93704*/ StageManager();
    /*0xc916c8*/ int get_LastJoinChapter();
    /*0xc916d0*/ void set_LastJoinChapter(int value);
    /*0xc916d8*/ int get_LastJoinStage();
    /*0xc916e0*/ void set_LastJoinStage(int value);
    /*0xc916e8*/ TableData.TableData_Stage get_LastestPopupStageData();
    /*0xc916f0*/ void set_LastestPopupStageData(TableData.TableData_Stage value);
    /*0xc916f8*/ string get_UserToken();
    /*0xc91778*/ string get_CurrentCampaign();
    /*0xc91838*/ int get_CurrentChapter();
    /*0xc91ae0*/ bool InitInstance();
    /*0xc91ae8*/ void ReleaseInstance();
    /*0xc91b78*/ void Send_CampaignBegin(string _heroids, System.Action _callback);
    /*0xc91cc0*/ void Send_CampaignFinish(string _replaydata, string _statistics, long lcp, string _hpmps, System.Action<PTShare.Define.SProperty> _callback);
    /*0xc91e28*/ void Send_NextChapter(System.Action _callback);
    /*0xc9111c*/ void Send_ChapterInfo(string _mappointName, System.Action<ServerProtocol.ResCampaignInfo> _chapterInfo);
    /*0xc91f5c*/ void Send_CampaignBuddy(System.Action _callback);
    /*0xc92160*/ void Send_HardCampaignBegin(string _heroids, System.Action _callback);
    /*0xc922a8*/ void Send_HardCampaignFinish(string _replaydata, string _statistics, long lcp, string _hpmps, System.Action<PTShare.Define.SProperty> _callback);
    /*0xc92410*/ void Send_NextHardChapter(System.Action _callback);
    /*0xc91260*/ void Send_HardChapterInfo(string _mappointName, System.Action<ServerProtocol.ResHardCampaignInfo> _chapterInfo);
    /*0xc92544*/ void Send_HardCampaignBuddy(System.Action _callback);
    /*0xc92748*/ void SetStageUserList(StageDifficult _diff, System.Collections.Generic.List<PTShare.Define.SPlayer> _playerList);
    /*0xc927e0*/ System.Collections.Generic.List<PTShare.Define.SPlayer> GetStageUserList(StageDifficult _diff);
    /*0xc9289c*/ System.Collections.Generic.List<PTShare.Define.SPlayer> FindCurrentStagePlayer(StageDifficult _diff, string _mapPoint);
    /*0xc92a18*/ System.Collections.Generic.List<PTShare.Define.SPlayer> FindCurrentChapterPlayer(StageDifficult _diff, int _chapter);
    /*0xc92b94*/ void AddFriendConvertPlayer(System.Collections.Generic.List<PTShare.Define.SFriend> _friend);
    /*0xc92cc4*/ void AddFriendConvertPlayer(StageDifficult _diff, PTShare.Define.SFriend _friend, bool _isCallback);
    /*0xc93000*/ int GetCurrentChapterNumber();
    /*0xc930ac*/ int GetCurrentNormalChapterNumber();
    /*0xc93194*/ int GetCurrentChapterNumber(string _value);
    /*0xc90b88*/ int GetCurrentStageNumber();
    /*0xc93230*/ int GetCurrentNormalStageNumber();
    /*0xc9331c*/ int GetCurrentStageNumber(string _value);
    /*0xc933bc*/ TableData.TableData_Stage GetCurrentStage();
    /*0xc933f0*/ TableData.TableData_Stage GetCurrentNormalStage();
    /*0xc9341c*/ TableData.TableData_Hardstage GetCurrentHardStage();
    /*0xc93450*/ TableData.TableData_Stageidle GetCurrentStageIdle();
    /*0xc90e30*/ int GetCurrentNormalStageBattleID();
    /*0xc93474*/ int GetCurrentNormalStageIndex();
    /*0xc90e50*/ int GetCurrentHardStageBattleID();
    /*0xc93494*/ int GetCurrentHardStageIndex();
    /*0xc934b4*/ int GetCurrentViewChapter();
    /*0xc90298*/ TableData.TableData_Stage FindStage(int _chapterid, int _stageid);
    /*0xc903f8*/ TableData.TableData_Hardstage FindHardStage(int _chapterid, int _stageid);
    /*0xc935f0*/ bool IsMaxStage(int _chapterid, int _stageid);
    /*0xc93650*/ bool IsAnotherChapter();
    /*0xc93684*/ StageDifficult GetCurrentDifficult();
    /*0xc9368c*/ void SetCurrentDifficult(StageDifficult _diff);
    /*0xc8fdc8*/ bool IsDifficultHard();

    class <>c__DisplayClass26_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1064*/ <>c__DisplayClass26_0();
        /*0xcc106c*/ void <Send_CampaignBegin>b__0(ServerProtocol.ResCampaignBegin response);
    }

    class <>c__DisplayClass27_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xcc1204*/ <>c__DisplayClass27_0();
        /*0xcc120c*/ void <Send_CampaignFinish>b__0(ServerProtocol.ResCampaignFinish response);
    }

    class <>c__DisplayClass28_0
    {
        /*0x10*/ System.Action _callback;

        /*0xcc148c*/ <>c__DisplayClass28_0();
        /*0xcc1494*/ void <Send_NextChapter>b__0(ServerProtocol.ResCampaignNextChapter response);
    }

    class <>c__DisplayClass29_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResCampaignInfo> _chapterInfo;

        /*0xcc15b0*/ <>c__DisplayClass29_0();
        /*0xcc15b8*/ void <Send_ChapterInfo>b__0(ServerProtocol.ResCampaignInfo _instance);
    }

    class <>c__DisplayClass30_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1628*/ <>c__DisplayClass30_0();
        /*0xcc1630*/ void <Send_CampaignBuddy>b__0(ServerProtocol.ResCampaignBuddy res);
    }

    class <>c__DisplayClass31_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1714*/ <>c__DisplayClass31_0();
        /*0xcc171c*/ void <Send_HardCampaignBegin>b__0(ServerProtocol.ResHardCampaignBegin response);
    }

    class <>c__DisplayClass32_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> _callback;

        /*0xcc18b4*/ <>c__DisplayClass32_0();
        /*0xcc18bc*/ void <Send_HardCampaignFinish>b__0(ServerProtocol.ResHardCampaignFinish response);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ System.Action _callback;

        /*0xcc1b1c*/ <>c__DisplayClass33_0();
        /*0xcc1b24*/ void <Send_NextHardChapter>b__0(ServerProtocol.ResHardCampaignNextChapter response);
    }

    class <>c__DisplayClass34_0
    {
        /*0x10*/ System.Action<ServerProtocol.ResHardCampaignInfo> _chapterInfo;

        /*0xcc1c40*/ <>c__DisplayClass34_0();
        /*0xcc1c48*/ void <Send_HardChapterInfo>b__0(ServerProtocol.ResHardCampaignInfo _instance);
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ StageManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcc1cb8*/ <>c__DisplayClass35_0();
        /*0xcc1cc0*/ void <Send_HardCampaignBuddy>b__0(ServerProtocol.ResHardCampaignBuddy res);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ string _mapPoint;

        /*0xcc1da4*/ <>c__DisplayClass38_0();
        /*0xcc1dac*/ bool <FindCurrentStagePlayer>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass39_0
    {
        /*0x10*/ int _chapter;

        /*0xcc1dd0*/ <>c__DisplayClass39_0();
        /*0xcc1dd8*/ bool <FindCurrentChapterPlayer>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ PTShare.Define.SFriend _friend;

        /*0xcc1e98*/ <>c__DisplayClass41_0();
        /*0xcc1ea0*/ bool <AddFriendConvertPlayer>b__0(PTShare.Define.SPlayer x);
    }

    class <>c__DisplayClass57_0
    {
        /*0x10*/ int _stageid;

        /*0xcc1ed0*/ <>c__DisplayClass57_0();
        /*0xcc1ed8*/ bool <FindStage>b__0(TableData.TableData_Stage x);
    }

    class <>c__DisplayClass58_0
    {
        /*0x10*/ int _stageid;

        /*0xcc1efc*/ <>c__DisplayClass58_0();
        /*0xcc1f04*/ bool <FindHardStage>b__0(TableData.TableData_Hardstage x);
    }
}

class DefineStageTower
{
    enum TOWER_TYPE
    {
        NORMALTOWER = 0,
        FIRETOWER = 1,
        WINDTOWER = 2,
        NATURETOWER = 3,
        WATERTOWER = 4,
        NULL = 5,
    }
}

class StagetowerManager : Singleton.Data.SingletonData<StagetowerManager>
{
    static /*0x0*/ System.Action<ServerProtocol.ResTowerRanking> OnChangeTowerRanking;
    /*0x20*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.STowerUser>> <OtherTowerUsers>k__BackingField;
    /*0x28*/ System.Action OnCallTower;
    /*0x30*/ System.Action<PTShare.Define.SProperty> OnCallTowerEndProperty;
    /*0x38*/ System.Action<System.Collections.Generic.List<PTShare.Define.STowerRecord>> OnCallTowerFloorInfo;
    /*0x40*/ System.Action<System.Collections.Generic.List<PTShare.Define.STowerUser>> OnCallTowerUsers;
    /*0x48*/ bool m_showClearEffect;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.STowerRecord> m_lisReplayTowerRecord;
    /*0x58*/ string m_sReplayReward;
    /*0x60*/ int m_nReplayBttleID;
    /*0x68*/ System.Collections.Generic.Dictionary<PTShare.Define.Faction, int> m_challengeCountDic;
    /*0x70*/ PTShare.Define.Faction m_factionType;

    static /*0xc9973c*/ StagetowerManager();
    static /*0xc980d8*/ void add_OnChangeTowerRanking(System.Action<ServerProtocol.ResTowerRanking> value);
    static /*0xc981cc*/ void remove_OnChangeTowerRanking(System.Action<ServerProtocol.ResTowerRanking> value);
    /*0xc99644*/ StagetowerManager();
    /*0xc97ec4*/ bool InitInstance();
    /*0xc97f54*/ void ReleaseInstance();
    /*0xc97fb8*/ UserData get_m_tUserData();
    /*0xc98048*/ string get_usertoken();
    /*0xc980c8*/ void set_OtherTowerUsers(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.STowerUser>> value);
    /*0xc980d0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<PTShare.Define.STowerUser>> get_OtherTowerUsers();
    /*0xc982c0*/ bool GetIsShowClearEffect();
    /*0xc982c8*/ void SetIsShowClearEffect(bool enable);
    /*0xc982d4*/ void SetLastReplayTowerData(System.Collections.Generic.List<PTShare.Define.STowerRecord> _lisTowerRecord, string _sReward, int _nBattleID);
    /*0xc982e0*/ System.ValueTuple<System.Collections.Generic.List<PTShare.Define.STowerRecord>, string, int> GetLastReplayTowerData();
    /*0xc98348*/ void Send_BeginStageTower(string _heroids, System.Action _callback);
    /*0xc9846c*/ void Send_StageTowerEnd(string _strPlayerData, string _statistics, long lcp, string _hpmps, System.Action<PTShare.Define.SProperty> _callback);
    /*0xc985a8*/ void Send_StageTowerRank();
    /*0xc96a64*/ void Send_StageTowerOthers(System.Action<System.Collections.Generic.List<PTShare.Define.STowerUser>> _onCallUsers);
    /*0xc98690*/ void LoadOtherTowerUsers(System.Collections.Generic.List<PTShare.Define.STowerUser> _towerUsers);
    /*0xc98948*/ void Send_StageTowerInfo(int _nFloor, System.Action<System.Collections.Generic.List<PTShare.Define.STowerRecord>> _onChangeFloorInfo);
    /*0xc98a6c*/ void OpenTowerPopup(bool directTowerPopup);
    /*0xc98be0*/ PTShare.Define.Faction GetCurFaction();
    /*0xc98be8*/ Battle.GameModeType GetTowerGameMode();
    /*0xc98bfc*/ int GetCurFactionToInt();
    /*0xc98c04*/ bool IsAccurateFactionHeros(System.Collections.Generic.List<int> heroList);
    /*0xc98e94*/ void SetFactionType(PTShare.Define.Faction faction);
    /*0xc976cc*/ ContentType GetCurContentType();
    /*0xc962c4*/ TableData.TableData_Towerfloor GetCurStageTower();
    /*0xc98e9c*/ bool IsChallengeCurTower();
    /*0xc97290*/ TableData.TableData_Towerfloor FindStageTower(int floorId);
    /*0xc98fd8*/ TableData.TableData_Towerfloor FindStageTower(PTShare.Define.Faction factionType, int floorId);
    /*0xc9729c*/ TableData.TableData_Towerfloor FindLast();
    /*0xc98fe8*/ int GetCurFloor();
    /*0xc95088*/ int GetFactionFloor(PTShare.Define.Faction faction);
    /*0xc99064*/ int GetChallengeCount(PTShare.Define.Faction faction);
    /*0xc99114*/ void SetChallengeCount(System.Collections.Generic.List<int> dataList);
    /*0xc991e4*/ void ResetChallengeCount();
    /*0xc974a0*/ bool IsUnlockDay(PTShare.Define.Faction faction);
    /*0xc99388*/ bool IsUnlockDay(string enterDay);
    /*0xc97edc*/ void InitFaction();
    /*0xc99740*/ void <Send_BeginStageTower>b__25_0(ServerProtocol.ResTowerBegin _instance);
    /*0xc99918*/ void <Send_StageTowerEnd>b__26_0(ServerProtocol.ResTowerFinish response);
    /*0xc99b68*/ void <Send_StageTowerOthers>b__28_0(ServerProtocol.ResTowerOthers _response);
    /*0xc99bf4*/ void <Send_StageTowerInfo>b__30_0(ServerProtocol.ResTowerInfo _response);
    /*0xc99c6c*/ bool <GetCurContentType>b__39_0(TableData.TableData_Tower data);
    /*0xc99c90*/ bool <IsChallengeCurTower>b__41_0(TableData.TableData_Tower data);

    class <>c__DisplayClass37_0
    {
        /*0x10*/ System.Collections.Generic.List<int> heroList;
        /*0x18*/ int i;
        /*0x20*/ System.Predicate<PTShare.Define.SMercenaryRent> <>9__0;

        /*0xcc2870*/ <>c__DisplayClass37_0();
        /*0xcc2878*/ bool <IsAccurateFactionHeros>b__0(PTShare.Define.SMercenaryRent data);
    }

    class <>c__DisplayClass49_0
    {
        /*0x10*/ PTShare.Define.Faction i;

        /*0xcc2900*/ <>c__DisplayClass49_0();
        /*0xcc2908*/ bool <ResetChallengeCount>b__0(TableData.TableData_Tower data);
    }

    class <>c__DisplayClass50_0
    {
        /*0x10*/ PTShare.Define.Faction faction;

        /*0xcc292c*/ <>c__DisplayClass50_0();
        /*0xcc2934*/ bool <IsUnlockDay>b__0(TableData.TableData_Tower data);
    }
}

class TimeEventManager : Singleton.Component.SingletonComponent<TimeEventManager>
{
    static /*0x0*/ System.Action OnDailyChange;
    /*0x28*/ UnityEngine.Coroutine m_dailyCoroutine;

    static /*0x116dac8*/ TimeEventManager();
    /*0x116da7c*/ TimeEventManager();
    /*0x116d960*/ void AwakeInstance();
    /*0x116d964*/ bool InitInstance();
    /*0x116d9fc*/ void ReleaseInstance();
    /*0x116d9a0*/ System.Collections.IEnumerator CoDailyUpdate();

    class <CoDailyUpdate>d__5 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcd0ce8*/ <CoDailyUpdate>d__5(int <>1__state);
        /*0xcd0d14*/ void System.IDisposable.Dispose();
        /*0xcd0d18*/ bool MoveNext();
        /*0xcd1188*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd1190*/ void System.Collections.IEnumerator.Reset();
        /*0xcd11d0*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum BattleTimeScaleType
{
    x1 = 0,
    x2 = 1,
    x0 = 2,
    End = 3,
}

class TimeManager : Singleton.Data.SingletonData<TimeManager>
{
    static string BATTLE_TIME_SCALE_TYPE_SAVE_KEY = "battle_time_scale_type";
    static float BATTLE_TIME_SCALE_X0 = 0;
    static float BATTLE_TIME_SCALE_X1 = 1;
    static float BATTLE_TIME_SCALE_X2 = 2;
    static /*0x0*/ System.Action<float> OnChangedTimeScale;
    static /*0x8*/ System.Action<BattleTimeScaleType, float> OnChangedBattleTimeScale;
    static /*0x10*/ System.DateTime ArenaDefaultTime;
    static /*0x18*/ System.DateTime HousingDefaultTime;
    static /*0x20*/ System.DateTime GuildWarDefaultTime;
    static /*0x28*/ System.DateTime PveRankingDefaultTime;
    /*0x20*/ double timeOffest;
    /*0x28*/ float m_startTime;
    /*0x30*/ System.Collections.Generic.List<string> m_dayShortList;
    /*0x38*/ float _battleTimeScale;
    /*0x3c*/ BattleTimeScaleType _curBattleTimeScaleType;

    static /*0x116f95c*/ TimeManager();
    static /*0x116dad4*/ void add_OnChangedTimeScale(System.Action<float> value);
    static /*0x116dbc8*/ void remove_OnChangedTimeScale(System.Action<float> value);
    static /*0x116dcbc*/ void add_OnChangedBattleTimeScale(System.Action<BattleTimeScaleType, float> value);
    static /*0x116ddb4*/ void remove_OnChangedBattleTimeScale(System.Action<BattleTimeScaleType, float> value);
    /*0x116f89c*/ TimeManager();
    /*0x116dacc*/ float get_battleTimeScale();
    /*0x116deac*/ System.DateTime GetPveRankingDefaultTime();
    /*0x116dfd8*/ System.DateTime GetServerNow();
    /*0x116e150*/ System.DateTime GetServerNow(System.DateTime time);
    /*0x116e180*/ System.TimeSpan GetServerInitializationTime(int _day);
    /*0x116e244*/ BattleTimeScaleType get_curBattleTimeScaleType();
    /*0x116e24c*/ void set_curBattleTimeScaleType(BattleTimeScaleType value);
    /*0x116e388*/ void InitStartTime();
    /*0x116e3b0*/ bool InitInstance();
    /*0x116e524*/ void ReleaseInstance();
    /*0x116e310*/ void SaveBattleScaleType(BattleTimeScaleType newType);
    /*0x116e5bc*/ void SetBattleTimeScale(BattleTimeScaleType scaleType);
    /*0x116e5dc*/ void DoNextScale();
    /*0x116e5f0*/ BattleTimeScaleType GetBattleTimeScale();
    /*0x116e5f8*/ bool IsVaildMapType();
    /*0x116e600*/ void SetTimeScale(float _time_scale);
    /*0x116e6ac*/ float GetTimeScale();
    /*0x116e6b4*/ void SetDefaultTimeScale();
    /*0x116e6f8*/ System.DayOfWeek ParseDayOfWeek(string name);
    /*0x116e7ac*/ string GetTimeLocalize(int totalSec);
    /*0x116ea64*/ int GetLeftSecByNextDay(int offset);
    /*0x116eb70*/ int GetLeftSecByNextWeek(int offset);
    /*0x116ecc8*/ int GetLeftSecByNextMonth(int offset);
    /*0x116ead0*/ System.TimeSpan GetLeftTimeSpanByNextDay();
    /*0x116ec00*/ System.TimeSpan GetLeftTimeSpanByNextWeek();
    /*0x116ed58*/ System.TimeSpan GetLeftTimeSpanByNextMonth();
    /*0x116ee8c*/ string GetLeftStringByNextDay(string normalKey, string secKey, bool isShowDay);
    /*0x116f21c*/ string GetLeftStringByNextWeek(string normalKey, string secKey);
    /*0x116f250*/ string GetLeftStringByNextMonth(string normalKey, string secKey);
    /*0x116f284*/ string GetLeftStringByCustomDay(string normalKey, string secKey, int day);
    /*0x116f2bc*/ string GetLeftStringByCustomDay(string normalKey, string secKey, System.DateTime defaultTime, int terms);
    /*0x116f3cc*/ string GetLeftStringByCustomDay(string normalKey, string secKey, System.DateTime defaultTime, int terms, int season);
    /*0x116f7f4*/ string GetLeftStringByExpire(string normalKey, string secKey, System.DateTime expire);
    /*0x116eecc*/ string GetLeftTime(string normalKey, string secKey, System.TimeSpan timeSpan, bool isShowDay);
    /*0x116f418*/ string GetLeftTime(string normalKey, int season, string secKey, System.TimeSpan timeSpan, bool isShowDay);
    /*0x116f2f8*/ System.TimeSpan GetLeftTimeSpanByCustom(System.DateTime defaultTime, int terms);
}

class TriggerManager : Singleton.Component.SingletonComponent<TriggerManager>
{
    /*0x28*/ System.Collections.Generic.Dictionary<DefineEvent.TRIGGERS, System.Collections.Generic.List<TableData.TableData_Triggerdata>> m_triggerDatas;

    /*0x1122724*/ TriggerManager();
    /*0x1120e8c*/ void AwakeInstance();
    /*0x1120e90*/ bool InitInstance();
    /*0x1121180*/ void ReleaseInstance();
    /*0x1120ea8*/ void InitManager();
    /*0x1121184*/ bool IsMoveDest(DefineEvent.TriggerData triggerData);
    /*0x11212b4*/ string GetLocalizeTitle(string trigger);
    /*0x11213c0*/ string GetLocalizeTitle(DefineEvent.TriggerData triggerData);
    /*0x1121534*/ string GetLocalizeDesc(string trigger);
    /*0x1121640*/ string GetLocalizeDesc(DefineEvent.TriggerData triggerData);
    /*0x1121998*/ string GetLocalizeDesc(DefineEvent.TriggerData triggerData, ref long missionCount);
    /*0x1121dd4*/ string GetLocalizeUnlock(DefineEvent.TriggerData triggerData);
    /*0x1121f48*/ bool IsUnlock(DefineEvent.TriggerData triggerData);
    /*0x1122110*/ void MoveTrigger(DefineEvent.TriggerData triggerData);
    /*0x11211b0*/ TableData.TableData_Triggerdata GetTableData(DefineEvent.TriggerData triggerData);
    /*0x1122380*/ TableData.TableData_Triggerdata FindData(DefineEvent.TRIGGERS trigger);
    /*0x11224d8*/ TableData.TableData_Triggerdata FindData(DefineEvent.TRIGGERS trigger, string main);
    /*0x11225f8*/ TableData.TableData_Triggerdata FindData(DefineEvent.TRIGGERS trigger, string main, string sub);

    class <>c__DisplayClass13_0
    {
        /*0x10*/ DefineEvent.TriggerData triggerData;

        /*0xcd3d1c*/ <>c__DisplayClass13_0();
        /*0xcd3d24*/ void <MoveTrigger>b__0();
    }

    class <>c
    {
        static /*0x0*/ TriggerManager.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Triggerdata> <>9__15_0;

        static /*0xcd3c98*/ <>c();
        /*0xcd3cf8*/ <>c();
        /*0xcd3d00*/ bool <FindData>b__15_0(TableData.TableData_Triggerdata x);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ string main;

        /*0xcd40d0*/ <>c__DisplayClass16_0();
        /*0xcd40d8*/ bool <FindData>b__0(TableData.TableData_Triggerdata x);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ string main;
        /*0x18*/ string sub;

        /*0xcd4104*/ <>c__DisplayClass17_0();
        /*0xcd410c*/ bool <FindData>b__0(TableData.TableData_Triggerdata x);
    }
}

class TroopFactionBuffSet : UnityEngine.MonoBehaviour
{
    /*0x18*/ LocalizeString m_LocalizeString;
    /*0x20*/ UnityEngine.GameObject m_BuffIconObject;

    /*0x1127024*/ TroopFactionBuffSet();
    /*0x1126c6c*/ void Initialize(int _nBuffID, UnityEngine.GameObject _goBuffImageClone);
}

class TroopManager : Singleton.Data.SingletonData<TroopManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.STroop> m_liCurTroop;
    /*0x28*/ PTShare.Define.STroop sCurTroop;
    /*0x30*/ int nArrIndex;
    /*0x34*/ bool <IsLoadTroopInitialized>k__BackingField;

    /*0x11281fc*/ TroopManager();
    /*0x112702c*/ bool get_IsLoadTroopInitialized();
    /*0x1127034*/ void set_IsLoadTroopInitialized(bool value);
    /*0x1127040*/ string get_UserToken();
    /*0x11270c0*/ bool InitInstance();
    /*0x11270c8*/ void ReleaseInstance();
    /*0x11270cc*/ void Send_LoadTroop(System.Action _callback);
    /*0x1127204*/ void Send_MakeTroop(System.Action _callback, string _troopname, int[] _heroids);
    /*0x112747c*/ void Send_RemoveTroop(System.Action _callback, long _index);
    /*0x11238a0*/ void Send_UpdateTroopName(System.Action _callback, long _index, string _troopname);
    /*0x11275c4*/ void Send_UpdateTroopOrder(System.Action _callback, long _index);
    /*0x112770c*/ void Send_UpdateTroopHeroes(System.Action _callback, long _index, int[] _heroids);
    /*0x1127984*/ System.Collections.Generic.List<PTShare.Define.STroop> GetTroopList();
    /*0x112798c*/ PTShare.Define.STroop FindTroopSameHeroIds(string _heroids);
    /*0x1127c94*/ bool FindUseTroopSameHeroIds(string _heroids);
    /*0x1127db4*/ void FindTroopDeleteHeroIds(int _heroid);
    /*0x1128014*/ int FindIndexTroop(long _troopid);
    /*0x112810c*/ void ChangeTroopOrder(int _index, long _newIndex);
    /*0x1127aa0*/ string CheckNotVaildHeroID(string _heroids);

    class <>c__DisplayClass11_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd42a4*/ <>c__DisplayClass11_0();
        /*0xcd42ac*/ void <Send_LoadTroop>b__0(ServerProtocol.ResTroopLoad response);
    }

    class <>c__DisplayClass12_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd435c*/ <>c__DisplayClass12_0();
        /*0xcd4364*/ void <Send_MakeTroop>b__1(ServerProtocol.ResTroopMake response);
    }

    class <>c
    {
        static /*0x0*/ TroopManager.<> <>9;
        static /*0x8*/ System.Func<int, string> <>9__12_0;
        static /*0x10*/ System.Func<int, string> <>9__16_0;

        static /*0xcd416c*/ <>c();
        /*0xcd41cc*/ <>c();
        /*0xcd41d4*/ string <Send_MakeTroop>b__12_0(int s);
        /*0xcd423c*/ string <Send_UpdateTroopHeroes>b__16_0(int s);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd43f4*/ <>c__DisplayClass13_0();
        /*0xcd43fc*/ void <Send_RemoveTroop>b__0(ServerProtocol.ResTroopRemove response);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd44ac*/ <>c__DisplayClass14_0();
        /*0xcd44b4*/ void <Send_UpdateTroopName>b__0(ServerProtocol.ResTroopUpdateName response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd45d0*/ <>c__DisplayClass15_0();
        /*0xcd45d8*/ void <Send_UpdateTroopOrder>b__0(ServerProtocol.ResTroopUpdateOrder response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ System.Action _callback;

        /*0xcd4650*/ <>c__DisplayClass16_0();
        /*0xcd4658*/ void <Send_UpdateTroopHeroes>b__1(ServerProtocol.ResTroopUpdateHeroes response);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ string _mainIds;

        /*0xcd4774*/ <>c__DisplayClass18_0();
        /*0xcd477c*/ bool <FindTroopSameHeroIds>b__0(PTShare.Define.STroop item);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ TroopManager <>4__this;
        /*0x18*/ string _mainIds;

        /*0xcd47bc*/ <>c__DisplayClass19_0();
        /*0xcd47c4*/ bool <FindUseTroopSameHeroIds>b__0(PTShare.Define.STroop item);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ int _heroid;

        /*0xcd4804*/ <>c__DisplayClass20_0();
        /*0xcd480c*/ bool <FindTroopDeleteHeroIds>b__0(PTShare.Define.STroop x);
    }

    class <>c__DisplayClass21_0
    {
        /*0x10*/ long _troopid;

        /*0xcd484c*/ <>c__DisplayClass21_0();
        /*0xcd4854*/ bool <FindIndexTroop>b__0(PTShare.Define.STroop x);
    }
}

enum TutorialStartType
{
    None = 0,
    JoinMainMenu = 1,
    JoinStage = 2,
    JoinFriend = 3,
    JoinAscend = 4,
    JoinKingsTower = 5,
    InNextChapter = 6,
    Defeat = 7,
    JoinFirstTime = 8,
    JoinMaze = 9,
    JoinArena = 10,
    JoinResetHero = 11,
    JoinRankingBoard = 12,
    JoinShop = 13,
    GachaEnd = 14,
    JoinPub = 15,
    JoinGuild = 16,
    JoinBounty = 17,
    JoinWorldArena = 18,
    JoinBountyTeam = 19,
    JoinDungeon = 20,
    JoinRelation = 21,
    JoinGuildWar = 22,
    JoinGuildWarByWarMemeber = 23,
    EndLimitBreak = 24,
    StartLimitBreak = 25,
    JoinAbility = 26,
}

enum TutorialButtonType
{
    None = 0,
    Unique = 1,
    HeroSlotInventory = 2,
    HeroSlotInventory_Grade = 3,
    EquipUpHeroSlotInventory = 4,
    UnitBattleStatusSlot = 5,
    TroopCharacterViewEntity = 6,
    AnotherChapterPoint = 7,
    AscendSlot = 8,
    BRankOverItem = 9,
    BountyHelp = 10,
    BountyHelpSelectSlot = 11,
    Spot = 12,
    HeroGuildWarEditSlot = 13,
    HousingStorageSlot = 14,
}

enum TutorialType
{
    Fix = 0,
    Free = 1,
    Opening = 2,
    OpeningBattle = 3,
    OpeningFinalBattle = 4,
    Null = 5,
}

enum TutorialProcessType
{
    All = 0,
    ButtonClick = 1,
    SkillEnable = 2,
    CharacterMove = 3,
    Auto = 4,
    BattleEnd = 5,
    ArenaSave = 6,
}

enum DialogType
{
    None = 0,
    Chat = 1,
    Image = 2,
    Spine = 3,
}

enum TutorialBeginType
{
    WORLDBOSS = 0,
    WORLDBOSSINFO = 1,
    NONE = 2,
}

class TutorialData
{
    /*0x10*/ int tutorialIndex;
    /*0x14*/ TutorialStartType tutorialStartType;
    /*0x18*/ bool isSkip;
    /*0x1c*/ TutorialType tutorialType;
    /*0x20*/ int priority;
    /*0x24*/ ContentType contentType;
    /*0x28*/ TutorialBeginType beginType;
    /*0x30*/ System.Collections.Generic.List<TutorialRequirementBase> requirementList;
    /*0x38*/ System.Collections.Generic.List<TutorialTask> taskList;

    /*0x112a60c*/ TutorialData();
    /*0x1129d38*/ void InitData(TableData.TableData_Tutorial data);
    /*0x112a1ac*/ void AddTask(TableData.TableData_Tutorial data);
    /*0x112a418*/ bool CheckRequire();
    /*0x112a4fc*/ void EndRequire();
}

class TutorialTask
{
    /*0x10*/ TutorialProcessType tutorialProcessType;
    /*0x14*/ TutorialButtonType tutorialButtonType;
    /*0x18*/ string selectButtonName;
    /*0x20*/ string createPrefabName;
    /*0x28*/ string requireSceneName;
    /*0x30*/ bool isBattlePause;
    /*0x34*/ float delayTime;
    /*0x38*/ int battleStageType;
    /*0x3c*/ bool isShowDialog;
    /*0x40*/ DialogType dialogType;
    /*0x44*/ float dialogTime;
    /*0x48*/ bool dialogClear;
    /*0x49*/ bool dialogIsLeft;
    /*0x50*/ string dialogIcon;
    /*0x58*/ string dialogText;
    /*0x60*/ float dialogYPosition;
    /*0x64*/ float fingerRotate;
    /*0x68*/ string voice;

    /*0x112a244*/ TutorialTask();
    /*0x112a2b0*/ void LoadTask(TableData.TableData_Tutorial data);
}

class TutorialHeroGradePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_rareGradeIconParent;
    /*0x48*/ HeroSlot m_rareHeroSlot;
    /*0x50*/ UnityEngine.GameObject m_epicGradeIconParent;
    /*0x58*/ HeroSlot m_epicHeroSlot;
    /*0x60*/ HeroSlot m_slimeHeroSlot;

    /*0x112b498*/ TutorialHeroGradePopup();
    /*0x112b224*/ void OnCreate();
    /*0x112b228*/ void OnDelete();
    /*0x112b22c*/ void OnEnter();
    /*0x112b270*/ void OnFinish();
    /*0x112b274*/ void OnLeave();
    /*0x112b278*/ void OnStart();
    /*0x112b230*/ void InitPopup();
    /*0x112b27c*/ void Clear();
    /*0x112b454*/ void SetHeroSlot(HeroSlot target, int tableId);
}

class TutorialManager : Singleton.Component.SingletonComponent<TutorialManager>
{
    static string WINDOW_NAME = "TutorialWindow";
    static string TUTORIAL_LEFT_DIALOG_PREFAB = "TutorialLeftDialog";
    static string TUTORIAL_RIGHT_DIALOG_PREFAB = "TutorialRightDialog";
    static string TUTORIAL_FADEOUT_PREFAB = "TutorialFadeOut";
    static /*0x0*/ bool USE_TUTORIAL;
    static /*0x8*/ System.Action<TutorialProcessType> OnProcessEvent;
    static /*0x10*/ System.Action OnCheckToastPopup;
    /*0x28*/ TutorialWindow m_currTutorialWindow;
    /*0x30*/ int m_currTutorialWindowIndex;
    /*0x38*/ System.Collections.Generic.List<TutorialData> m_tutorialDataList;

    static /*0x112d028*/ TutorialManager();
    /*0x112cf94*/ TutorialManager();
    /*0x112b4a0*/ void AwakeInstance();
    /*0x112b4a4*/ bool InitInstance();
    /*0x112b844*/ void ReleaseInstance();
    /*0x112b4a8*/ bool InitTutorial();
    /*0x1124cec*/ bool IsPlaying();
    /*0x112b934*/ TutorialType GetPlayingTutorialType();
    /*0x112b978*/ bool BlockEscapeKey();
    /*0x112ba50*/ void SkipTutorial(bool isClear);
    /*0x112bbec*/ void BeginOpeningBattle();
    /*0x112be98*/ void BeginOpeningBattle(bool showFadeOut);
    /*0x112bfc8*/ void BeginTutorial(Battle.GameModeType gameModeType);
    /*0x112bfdc*/ void BeginLimitBreak();
    /*0x112c014*/ bool IsBeginLimitBreak();
    /*0x112c1a0*/ bool CheckReadyTutorial(TutorialStartType tutorialStartType, int priority);
    /*0x112bbf4*/ void BeginTutorial(TutorialStartType tutorialStartType);
    /*0x112c83c*/ void Send_AccountTutorialBitData();
    /*0x112c2d4*/ TutorialWindow CreateTutorialUI(string windowName);
    /*0x112ca10*/ void CheatSkipAllTutorial();
    /*0x112bae8*/ void EndTutorial(bool isClear);
    /*0x112ca44*/ void TutorialToggleSkillOn();
    /*0x112ca70*/ System.Collections.IEnumerator LateOnSkillAuto();
    /*0x112cacc*/ UnityEngine.GameObject CreateDialog(bool isLeft);
    /*0x112bf4c*/ System.Collections.IEnumerator ShowFadeOut(float fadeOutTime, System.Action callback);
    /*0x112cc94*/ void HandleCheckUnlockToastPopup();

    class <>c
    {
        static /*0x0*/ TutorialManager.<> <>9;
        static /*0x8*/ System.Action<ServerProtocol.ResAccountTutorial> <>9__25_0;

        static /*0xcd54bc*/ <>c();
        /*0xcd551c*/ <>c();
        /*0xcd5524*/ void <Send_AccountTutorialBitData>b__25_0(ServerProtocol.ResAccountTutorial _instance);
    }

    class <LateOnSkillAuto>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xcd5528*/ <LateOnSkillAuto>d__30(int <>1__state);
        /*0xcd5554*/ void System.IDisposable.Dispose();
        /*0xcd5558*/ bool MoveNext();
        /*0xcd5680*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd5688*/ void System.Collections.IEnumerator.Reset();
        /*0xcd56c8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <ShowFadeOut>d__32 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float fadeOutTime;
        /*0x28*/ System.Action callback;
        /*0x30*/ UnityEngine.GameObject <fadeOutObject>5__2;

        /*0xcd56d0*/ <ShowFadeOut>d__32(int <>1__state);
        /*0xcd56fc*/ void System.IDisposable.Dispose();
        /*0xcd5700*/ bool MoveNext();
        /*0xcd5ad0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd5ad8*/ void System.Collections.IEnumerator.Reset();
        /*0xcd5b18*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TutorialRequirementBase
{
    /*0x112d090*/ TutorialRequirementBase();
    bool CheckRequire(TutorialData tutorialData);
    /*0x112d08c*/ void EndRequire(TutorialData tutorialData);
}

class TutorialRequirementBeginType : TutorialRequirementBase
{
    /*0x10*/ TutorialBeginType m_beginType;

    /*0x112a178*/ TutorialRequirementBeginType(TutorialBeginType beginType);
    /*0x112d098*/ bool CheckRequire(TutorialData tutorialData);
    /*0x112d184*/ void EndRequire(TutorialData tutorialData);
}

class TutorialRequirementChapter : TutorialRequirementBase
{
    /*0x10*/ int chapter;

    /*0x112a110*/ TutorialRequirementChapter(int _chapter);
    /*0x112d224*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementContentUnlock : TutorialRequirementBase
{
    /*0x10*/ int contentUnlockIndex;

    /*0x112a13c*/ TutorialRequirementContentUnlock(int _contentUnlockIndex);
    /*0x112d2b4*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementEquipUp : TutorialRequirementBase
{
    /*0x112a170*/ TutorialRequirementEquipUp();
    /*0x112d33c*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementIsAnotherChapter : TutorialRequirementBase
{
    /*0x112a168*/ TutorialRequirementIsAnotherChapter();
    /*0x112d500*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementOnce : TutorialRequirementBase
{
    /*0x112a0dc*/ TutorialRequirementOnce();
    /*0x112d580*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialRequirementStage : TutorialRequirementBase
{
    /*0x10*/ int stageIndex;

    /*0x112a0e4*/ TutorialRequirementStage(int _stageIndex);
    /*0x112d5ac*/ bool CheckRequire(TutorialData tutorialData);
}

class TutorialDialog : UnityEngine.MonoBehaviour
{
    /*0x18*/ UnityEngine.GameObject m_chatTypeObject;
    /*0x20*/ UnityEngine.GameObject m_imageTypeObject;
    /*0x28*/ UnityEngine.GameObject m_spineTypeObject;
    /*0x30*/ UnityEngine.UI.Image m_imageTexture;
    /*0x38*/ AtlasImage m_chatAtlasImage;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_spine;
    /*0x48*/ LocalizeString m_imageLocalizeString;
    /*0x50*/ LocalizeString m_chatLocalizeString;
    /*0x58*/ LocalizeString m_spineLocalizeString;
    /*0x60*/ DialogType m_dialogType;
    /*0x64*/ UnityEngine.Vector2 m_destAnchoredPosition;
    /*0x70*/ TutorialTask m_tutorialTask;

    /*0x112b21c*/ TutorialDialog();
    /*0x112a6d0*/ UnityEngine.Vector2 GetDestAnchoredPosition();
    /*0x112a6d8*/ void SetDestAnchoredPosition(UnityEngine.Vector2 position);
    /*0x112a6e0*/ void SetDialog(TutorialTask tutorialTask, string imageName, string textName, float yPosition, DialogType dialogType);
    /*0x112ac44*/ void HideImageTypeText();
    /*0x112ad00*/ void HideSpineTypeText();
    /*0x112adbc*/ void MoveChatType(UnityEngine.Vector2 end, float moveTime);
    /*0x112aebc*/ void MoveImageType(UnityEngine.Vector2 end, float moveTime);
    /*0x112b06c*/ void MoveSpineType(UnityEngine.Vector2 end, float moveTime);
    /*0x112ae2c*/ System.Collections.IEnumerator MoveChatTypeCoroutine(UnityEngine.Vector2 end, float moveTime);
    /*0x112afdc*/ System.Collections.IEnumerator MoveImageDialog(UnityEngine.Vector2 end, float moveTime);
    /*0x112b18c*/ System.Collections.IEnumerator MoveSpineDialog(UnityEngine.Vector2 end, float moveTime);
    /*0x112ab50*/ void SetSkeleton(string skinName, string anim);
    /*0x112aaf0*/ void HideUI();

    class <MoveChatTypeCoroutine>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialDialog <>4__this;
        /*0x28*/ UnityEngine.Vector2 end;
        /*0x30*/ float moveTime;
        /*0x38*/ UnityEngine.RectTransform <rectTransform>5__2;
        /*0x40*/ float <t>5__3;
        /*0x44*/ float <speed>5__4;

        /*0xcd4b18*/ <MoveChatTypeCoroutine>d__20(int <>1__state);
        /*0xcd4b44*/ void System.IDisposable.Dispose();
        /*0xcd4b48*/ bool MoveNext();
        /*0xcd4d6c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd4d74*/ void System.Collections.IEnumerator.Reset();
        /*0xcd4db4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveImageDialog>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialDialog <>4__this;
        /*0x28*/ UnityEngine.Vector2 end;
        /*0x30*/ float moveTime;
        /*0x38*/ UnityEngine.RectTransform <rectTransform>5__2;
        /*0x40*/ float <t>5__3;
        /*0x44*/ float <speed>5__4;
        /*0x48*/ UnityEngine.CanvasGroup <canvasGroup>5__5;

        /*0xcd4dbc*/ <MoveImageDialog>d__21(int <>1__state);
        /*0xcd4de8*/ void System.IDisposable.Dispose();
        /*0xcd4dec*/ bool MoveNext();
        /*0xcd50ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd50f4*/ void System.Collections.IEnumerator.Reset();
        /*0xcd5134*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveSpineDialog>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialDialog <>4__this;
        /*0x28*/ UnityEngine.Vector2 end;
        /*0x30*/ float moveTime;
        /*0x38*/ UnityEngine.RectTransform <rectTransform>5__2;
        /*0x40*/ float <t>5__3;
        /*0x44*/ float <speed>5__4;
        /*0x48*/ UnityEngine.CanvasGroup <canvasGroup>5__5;

        /*0xcd513c*/ <MoveSpineDialog>d__22(int <>1__state);
        /*0xcd5168*/ void System.IDisposable.Dispose();
        /*0xcd516c*/ bool MoveNext();
        /*0xcd546c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd5474*/ void System.Collections.IEnumerator.Reset();
        /*0xcd54b4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class TutorialWindow : UnityEngine.MonoBehaviour
{
    static /*0x0*/ int SAFE_FREE_PARENT_FIND_COUNT;
    /*0x18*/ UnityEngine.GameObject m_superBlock;
    /*0x20*/ AtlasImage m_touchBlockBackGround;
    /*0x28*/ UnityEngine.GameObject m_transparentBlockBackGround;
    /*0x30*/ UnityEngine.GameObject m_skipButton;
    /*0x38*/ TweenImageColor m_flashBackEffect;
    /*0x40*/ Spine.Unity.SkeletonGraphic m_fingerSkeletonTouch;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_fingerSkeletonSlider;
    /*0x50*/ UnityEngine.GameObject m_fingerPivotObject;
    /*0x58*/ UnityEngine.GameObject m_prefabParentObject;
    /*0x60*/ UnityEngine.RectTransform m_spotLight;
    /*0x68*/ UnityEngine.Vector2 m_spotLightOffset;
    /*0x70*/ TutorialData m_tutorialData;
    /*0x78*/ TutorialTask m_currTask;
    /*0x80*/ int m_tutorialTaskStep;
    /*0x88*/ UnityEngine.Canvas m_targetCanvas;
    /*0x90*/ UnityEngine.GameObject m_copyObject;
    /*0x98*/ UnityEngine.GameObject m_originalObject;
    /*0xa0*/ UnityEngine.GameObject m_troopCharacterParent;
    /*0xa8*/ System.Collections.Generic.List<TutorialDialog> m_tutorialDialogList;
    /*0xb0*/ UnityEngine.Coroutine m_moveDialogCoroutine;
    /*0xb8*/ UnityEngine.Coroutine m_updateCoroutine;
    /*0xc0*/ UnityEngine.Coroutine m_fixMoveCoroutine;
    /*0xc8*/ UnityEngine.Coroutine m_freeBackGroundTouchCoroutine;
    /*0xd0*/ UnityEngine.Coroutine m_troopCoroutine;
    /*0xd8*/ UnityEngine.Coroutine m_spotCoroutine;
    /*0xe0*/ bool m_isProcessCheck;

    static /*0x1132238*/ TutorialWindow();
    /*0x11321b8*/ TutorialWindow();
    /*0x112c820*/ int GetTutorialIndex();
    /*0x112dd50*/ TutorialData GetTutorialData();
    /*0x112c558*/ void InitWindow(TutorialData tutorialData);
    /*0x112de58*/ void HandleClickBackGround();
    /*0x112e134*/ void HandleButtonClick();
    /*0x112e350*/ void HandleTouchSkillOn(bool isOn, int index);
    /*0x112e46c*/ void HandleProcess(TutorialProcessType tutorialProcessType);
    /*0x112e48c*/ void SkipTutorial(bool isClear);
    /*0x112e790*/ UnityEngine.GameObject FindTutorialObejct(string findObjectName);
    /*0x112e8a0*/ UnityEngine.GameObject FindHeroSlotInventory(string findObjectName);
    /*0x112eaa8*/ UnityEngine.GameObject FindHeroSlotInventoryGrade(string findObjectName);
    /*0x112ec4c*/ UnityEngine.GameObject FindEquipmentUpHeroSlot(string findObjectName);
    /*0x112ee78*/ UnityEngine.GameObject FindUnitBattleStatusSlot(string findObjectName);
    /*0x112ef94*/ UnityEngine.GameObject FindTroopCharacterViewEntity(string findObjectName);
    /*0x112f0b0*/ UnityEngine.GameObject FindAnotherChapterPoint(string findObjectName);
    /*0x112f23c*/ UnityEngine.GameObject FindAsendSlot(string findObjectName);
    /*0x112f338*/ UnityEngine.GameObject FindBRankOverItem(string findObjectName);
    /*0x112f498*/ UnityEngine.GameObject FindBountyHelpSlot(string findObjectName);
    /*0x112f620*/ UnityEngine.GameObject FindBountyHelpSelectSlot(string findObjectName);
    /*0x112f748*/ UnityEngine.GameObject FindHeroGuildWarEditSlot(string findObjectName);
    /*0x112f844*/ UnityEngine.GameObject FindHousingStorageSlot(string findObjectName);
    /*0x112fa1c*/ UnityEngine.Canvas FindRootCanvas(UnityEngine.GameObject findObject);
    /*0x112fb70*/ UnityEngine.Vector3 FindWorldScale(UnityEngine.GameObject findObject);
    /*0x112c6d0*/ void BeginTutorial();
    /*0x112df8c*/ void UpdateTutorial();
    /*0x112fcf0*/ System.Collections.IEnumerator BeginOpeningBattle();
    /*0x1130144*/ System.Collections.IEnumerator UpdateTutorialCoroutine();
    /*0x11301b0*/ System.Collections.IEnumerator MoveCheckTroopCharacterViewEntity();
    /*0x113021c*/ System.Collections.IEnumerator MoveDialog();
    /*0x1130288*/ System.Collections.IEnumerator FixHighlighPosition();
    /*0x11302f4*/ System.Collections.IEnumerator FreeBackgroundTouchCheck();
    /*0x1130360*/ System.Collections.IEnumerator CoSpotZoom(UnityEngine.Vector2 dest);
    /*0x112e53c*/ void EndTutorial(bool isClear);
    /*0x11303e0*/ System.Collections.IEnumerator FinalBattleEndTutorial();
    /*0x112dd58*/ void HideUI();
    /*0x1130570*/ void ShowDialog();
    /*0x11307fc*/ string GetDialogText();
    /*0x1130980*/ bool ShowHighlightObject(string buttonObjectName);
    /*0x113149c*/ void ShowPrefab(string prefabName);
    /*0x11312c0*/ void AddClickEvent(UnityEngine.GameObject addObject);
    /*0x11316e8*/ void RemoveClickEvent(UnityEngine.GameObject removeObject);
    /*0x113110c*/ void ClearButtonEvent(UnityEngine.GameObject clearObject);
    /*0x113044c*/ void ClearAll();
    /*0x113188c*/ void ClearDialog();
    /*0x112fff0*/ void ClearCopyData();
    /*0x112fd5c*/ void ClearFlag();
    /*0x1131a74*/ bool IsShowTouchBlackGuard();
    /*0x1131ae8*/ bool IsReadyScene();
    /*0x1131bd8*/ bool IsReadyPopup();
    /*0x1131e10*/ void OnClosePopup();
    /*0x1131988*/ void ShowUnitBattleStatusSlot();
    /*0x1131efc*/ void HideUnitBattleStatusSlot();
    /*0x1131fe4*/ void StartOpeningBattle();

    class <BeginOpeningBattle>d__52 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ UnityEngine.UI.Image <image>5__2;
        /*0x30*/ float <amount>5__3;

        /*0xcd5d98*/ <BeginOpeningBattle>d__52(int <>1__state);
        /*0xcd5dc4*/ void System.IDisposable.Dispose();
        /*0xcd5dc8*/ bool MoveNext();
        /*0xcd6164*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xcd616c*/ void System.Collections.IEnumerator.Reset();
        /*0xcd61ac*/ object System.Collections.IEnumerator.get_Current();
    }

    class <UpdateTutorialCoroutine>d__53 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ BattleMainWindow <battleMainWindow>5__2;
        /*0x30*/ int <i>5__3;

        /*0xd899c8*/ <UpdateTutorialCoroutine>d__53(int <>1__state);
        /*0xd899f4*/ void System.IDisposable.Dispose();
        /*0xd899f8*/ bool MoveNext();
        /*0xd8a1bc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8a1c4*/ void System.Collections.IEnumerator.Reset();
        /*0xd8a204*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveCheckTroopCharacterViewEntity>d__54 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ TroopCharacterViewEntity <troopCharacterViewEntity>5__2;
        /*0x30*/ int <oldSibilingIndex>5__3;

        /*0xd892d0*/ <MoveCheckTroopCharacterViewEntity>d__54(int <>1__state);
        /*0xd892fc*/ void System.IDisposable.Dispose();
        /*0xd89300*/ bool MoveNext();
        /*0xd8953c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd89544*/ void System.Collections.IEnumerator.Reset();
        /*0xd89584*/ object System.Collections.IEnumerator.get_Current();
    }

    class <MoveDialog>d__55 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;

        /*0xd8958c*/ <MoveDialog>d__55(int <>1__state);
        /*0xd895b8*/ void System.IDisposable.Dispose();
        /*0xd895bc*/ bool MoveNext();
        /*0xd89978*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd89980*/ void System.Collections.IEnumerator.Reset();
        /*0xd899c0*/ object System.Collections.IEnumerator.get_Current();
    }

    class <FixHighlighPosition>d__56 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ UnityEngine.Vector3 <fixDir>5__2;

        /*0xd88bf0*/ <FixHighlighPosition>d__56(int <>1__state);
        /*0xd88c1c*/ void System.IDisposable.Dispose();
        /*0xd88c20*/ bool MoveNext();
        /*0xd88e64*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd88e6c*/ void System.Collections.IEnumerator.Reset();
        /*0xd88eac*/ object System.Collections.IEnumerator.get_Current();
    }

    class <FreeBackgroundTouchCheck>d__57 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;

        /*0xd88eb4*/ <FreeBackgroundTouchCheck>d__57(int <>1__state);
        /*0xd88ee0*/ void System.IDisposable.Dispose();
        /*0xd88ee4*/ bool MoveNext();
        /*0xd89280*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd89288*/ void System.Collections.IEnumerator.Reset();
        /*0xd892c8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoSpotZoom>d__58 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnityEngine.Vector2 dest;
        /*0x28*/ TutorialWindow <>4__this;
        /*0x30*/ float <t>5__2;
        /*0x34*/ float <speed>5__3;
        /*0x38*/ UnityEngine.Vector2 <start>5__4;

        /*0xd884c0*/ <CoSpotZoom>d__58(int <>1__state);
        /*0xd884ec*/ void System.IDisposable.Dispose();
        /*0xd884f0*/ bool MoveNext();
        /*0xd88610*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd88618*/ void System.Collections.IEnumerator.Reset();
        /*0xd88658*/ object System.Collections.IEnumerator.get_Current();
    }

    class <FinalBattleEndTutorial>d__60 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ TutorialWindow <>4__this;
        /*0x28*/ float <t>5__2;

        /*0xd88660*/ <FinalBattleEndTutorial>d__60(int <>1__state);
        /*0xd8868c*/ void System.IDisposable.Dispose();
        /*0xd88690*/ bool MoveNext();
        /*0xd88ba0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd88ba8*/ void System.Collections.IEnumerator.Reset();
        /*0xd88be8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c
    {
        static /*0x0*/ TutorialWindow.<> <>9;
        static /*0x8*/ System.Func<int, PTShare.Define.SEquip> <>9__79_1;
        static /*0x10*/ System.Converter<TableData.TableData_Tutorialbattlehero, PTShare.Define.SHero> <>9__79_0;

        static /*0xcd5b20*/ <>c();
        /*0xcd5b80*/ <>c();
        /*0xcd5b88*/ PTShare.Define.SHero <StartOpeningBattle>b__79_0(TableData.TableData_Tutorialbattlehero c);
        /*0xcd5d38*/ PTShare.Define.SEquip <StartOpeningBattle>b__79_1(int s);
    }
}

class DefineUIScreenEffect
{
    static string WIPE = "wipe_black";

    /*0x11ef5ac*/ DefineUIScreenEffect();

    enum CALLBACK_TYPE
    {
        EVENT = 0,
        COMPLETE_EVENT = 1,
        NULL = 2,
    }

    enum UISCREEN_EFFECT_TYPE
    {
        EFFECT_PAGE = 0,
        NULL = 1,
    }
}

class UIScreenEffectBase : UnityEngine.MonoBehaviour
{
    /*0x18*/ DefineUIScreenEffect.UISCREEN_EFFECT_TYPE m_uiScreenEffectType;
    /*0x20*/ System.Action[] m_callBacks;

    /*0x2365d00*/ UIScreenEffectBase();
    /*0x2365cf0*/ DefineUIScreenEffect.UISCREEN_EFFECT_TYPE GetUIScreenEffectType();
    /*0x2365cf8*/ void PlayEffect(float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x2365cfc*/ void PlayEffect(string animName, float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
}

class UIScreenEffectManager : Singleton.Component.SingletonComponent<UIScreenEffectManager>
{
    static /*0x0*/ System.Action OnEndEffect;
    /*0x28*/ System.Collections.Generic.Dictionary<DefineUIScreenEffect.UISCREEN_EFFECT_TYPE, UIScreenEffectBase> m_cashingEffectDictionary;
    /*0x30*/ bool m_playingEffect;

    static /*0x236663c*/ UIScreenEffectManager();
    /*0x23665b0*/ UIScreenEffectManager();
    /*0x2365d64*/ void AwakeInstance();
    /*0x2365d68*/ bool InitInstance();
    /*0x23660ec*/ void ReleaseInstance();
    /*0x23661dc*/ bool IsPlayingEffect();
    /*0x2365ec8*/ void InitDictionary();
    /*0x23661e4*/ void PlayScreenEffect(DefineUIScreenEffect.UISCREEN_EFFECT_TYPE uiScreenEffectType, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x23664c4*/ void PlayScreenEffect(DefineUIScreenEffect.UISCREEN_EFFECT_TYPE uiScreenEffectType, string animName, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x23662c0*/ UIScreenEffectBase CreateEffect(DefineUIScreenEffect.UISCREEN_EFFECT_TYPE uiScreenEffectType);
    /*0x23665a8*/ void HandleEndEffect();
}

class UIScreenEffectSpine : UIScreenEffectBase
{
    /*0x28*/ Spine.Unity.SkeletonGraphic m_spine;
    /*0x30*/ bool m_destroyOnComplete;

    /*0x2366a20*/ UIScreenEffectSpine();
    /*0x2366640*/ void PlayEffect(float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x236666c*/ void PlayEffect(string animName, float timeScale, System.Action callBack, DefineUIScreenEffect.CALLBACK_TYPE callBackType);
    /*0x23668c0*/ void SetDestryOnComplete(bool destroy);
    /*0x23668cc*/ void EffectComleteEvent(Spine.TrackEntry trackEntry);
    /*0x23669dc*/ void EffectEvent(Spine.TrackEntry trackEntry, Spine.Event e);
}

class UnlockComponent : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<UnityEngine.GameObject> m_UnlockObject;
    /*0x20*/ System.Collections.Generic.List<UnityEngine.GameObject> m_UnlockViewObject;
    /*0x28*/ ContentType m_eContentUnlockType;
    /*0x2c*/ bool m_isShowRecentlyUnlockEffect;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_unlockSkel;
    /*0x38*/ Spine.Unity.SkeletonGraphic m_lockSkel;
    /*0x40*/ UnityEngine.GameObject m_lockIconObject;
    /*0x48*/ UnityEngine.UI.Image m_lockImage;
    /*0x50*/ ShaderChanger m_shaderChanger;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_openSkel;
    /*0x60*/ UnityEngine.Events.UnityEvent m_startUnlockEvent;
    /*0x68*/ TableData.TableData_Contentunlock m_tContentunlock;
    /*0x70*/ QuestPackage m_tQuestPackage;
    /*0x78*/ bool isUnLock;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;

    /*0x10c5cdc*/ UnlockComponent();
    /*0x10c4acc*/ void OnEnable();
    /*0x10c4fd8*/ void OnDisable();
    /*0x10c5138*/ void HandlerUnLockContent();
    /*0x10c513c*/ void Refresh();
    /*0x10c5140*/ void SetLockIcon(bool _enable);
    /*0x10c4ed8*/ void LoadUnLockContent();
    /*0x10c5638*/ void UnlockObjects();
    /*0x10c530c*/ void ShowUnlockEffect();
    /*0x10c4e2c*/ bool IsValidLoadTable();
    /*0x10c5960*/ void OnClick_UnLockContent();
    /*0x10c58e4*/ System.Collections.IEnumerator CoWaitCallback(float time, System.Action callBack);
    /*0x10c5c70*/ System.Collections.IEnumerator ShaderEffect();
    /*0x10c5d40*/ void <UnlockObjects>b__21_0(UnityEngine.GameObject x);
    /*0x10c5d64*/ void <UnlockObjects>b__21_2(UnityEngine.GameObject x);
    /*0x10c5d80*/ void <ShowUnlockEffect>b__22_1();
    /*0x10c5ddc*/ void <ShaderEffect>b__26_0();

    class <>c
    {
        static /*0x0*/ UnlockComponent.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.GameObject> <>9__21_1;
        static /*0x10*/ System.Action<UnityEngine.GameObject> <>9__22_0;

        static /*0xd8a974*/ <>c();
        /*0xd8a9d4*/ <>c();
        /*0xd8a9dc*/ void <UnlockObjects>b__21_1(UnityEngine.GameObject x);
        /*0xd8a9f4*/ void <ShowUnlockEffect>b__22_0(UnityEngine.GameObject x);
    }

    class <CoWaitCallback>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float time;
        /*0x28*/ System.Action callBack;

        /*0xd8aa0c*/ <CoWaitCallback>d__25(int <>1__state);
        /*0xd8aa38*/ void System.IDisposable.Dispose();
        /*0xd8aa3c*/ bool MoveNext();
        /*0xd8aae8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8aaf0*/ void System.Collections.IEnumerator.Reset();
        /*0xd8ab30*/ object System.Collections.IEnumerator.get_Current();
    }

    class <ShaderEffect>d__26 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ UnlockComponent <>4__this;
        /*0x28*/ UnityEngine.Material <oldMat>5__2;
        /*0x30*/ float <speed>5__3;
        /*0x34*/ float <t>5__4;

        /*0xd8ab38*/ <ShaderEffect>d__26(int <>1__state);
        /*0xd8ab64*/ void System.IDisposable.Dispose();
        /*0xd8ab68*/ bool MoveNext();
        /*0xd8af84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8af8c*/ void System.Collections.IEnumerator.Reset();
        /*0xd8afcc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class UnlockManager : Singleton.Data.SingletonData<UnlockManager>
{
    static /*0x0*/ System.Action OnChangeUnLockContent;
    /*0x20*/ System.Collections.Generic.List<ContentType> m_recentlyUnlockContent;

    static /*0x10c63b4*/ UnlockManager();
    static /*0x10c4d38*/ void add_OnChangeUnLockContent(System.Action value);
    static /*0x10c4c44*/ void remove_OnChangeUnLockContent(System.Action value);
    /*0x10c62fc*/ UnlockManager();
    /*0x10c5dfc*/ bool InitInstance();
    /*0x10c5e04*/ void ReleaseInstance();
    /*0x10c52a8*/ bool IsRecentlyUnlock(ContentType contentType);
    /*0x10c5e68*/ void AddRecentlyUnlock(ContentType contentType);
    /*0x10c5880*/ void RemoveRecentlyUnlock(ContentType contentType);
    /*0x10c5f08*/ void RefreshUnLockContent();
    /*0x10c5f80*/ bool IsUnlockContent(int index);
    /*0x10c51e4*/ bool IsUnlockContent(ContentType _eType);
    /*0x10c6180*/ bool IsUnlockContent(string stageName, ContentType _eType);
    /*0x10c6044*/ bool IsUnLockContent(QuestPackage _questPackage);
}

class VIPManager : Singleton.Component.SingletonComponent<VIPManager>
{
    static /*0x0*/ System.Action OnReceiveReward;
    /*0x28*/ System.Collections.Generic.List<int> m_rewardList;
    /*0x30*/ UnityEngine.Coroutine m_coroutine;

    static /*0x10d1fc4*/ VIPManager();
    /*0x10d1f38*/ VIPManager();
    /*0x10d107c*/ void AwakeInstance();
    /*0x10d1080*/ bool InitInstance();
    /*0x10d1088*/ void ReleaseInstance();
    /*0x10d108c*/ int GetVipLevel();
    /*0x10d1218*/ int GetVipMaxLevel();
    /*0x10d1290*/ bool IsReward(int vipLevel);
    /*0x10d12f4*/ int GetRewardCount();
    /*0x10d1340*/ bool IsUnlockBattleAccelx3();
    /*0x10d1360*/ bool IsUnlockBattleAccelx4();
    /*0x10d1380*/ bool IsUnlockBountyAuto();
    /*0x10d13a0*/ bool IsUnlockArenaBattleSkip();
    /*0x10d13c0*/ bool IsUnlockGuildBossSweep();
    /*0x10d13e0*/ bool IsUnlockRaceSkip();
    /*0x10d1400*/ int GetFastIdleAddCount();
    /*0x10d1420*/ int GetIdleAddMaxTime();
    /*0x10d1440*/ int GetGuildHuntingAddCount();
    /*0x10d1460*/ int GetArenaDailyFree();
    /*0x10d1480*/ int GetArenaLimitRewardCount();
    /*0x10d14a0*/ int GetAddHeroSlotCount();
    /*0x10d14c0*/ int GetVipPoint();
    /*0x10d1540*/ float GetIdleGoldAddPercent();
    /*0x10d1570*/ float GetIdleHeroExpAddPercent();
    /*0x10d15a0*/ float GetMazeBattleGoldAddPercent();
    /*0x10d15d0*/ System.Collections.Generic.List<Rewards> GetVipReward(int vipLevel);
    /*0x10d16d0*/ int GetCurrentVipAccPoint();
    /*0x10d17e4*/ int GetAccVipPoint(int level);
    /*0x10d10ac*/ TableData.TableData_Vip GetCurrentVipTableData();
    /*0x10d18fc*/ int GetPrevVipPoint();
    /*0x10d1930*/ TableData.TableData_Vip GetVipTableData(int vipLevel);
    /*0x10d19f8*/ void AddRewardVIP(System.Collections.Generic.List<int> levels);
    /*0x10d1ae0*/ void AddRewardVIP(int level);
    /*0x10d1c78*/ void ChangeVipLevel(int prev, int now);
    /*0x10d1d50*/ void Send_RewardVip(int vipLevel, System.Action callBack);
    /*0x10d1c0c*/ System.Collections.IEnumerator CoWaitShowVip();

    class <>c__DisplayClass35_0
    {
        /*0x10*/ VIPManager <>4__this;
        /*0x18*/ int vipLevel;
        /*0x20*/ System.Action callBack;

        /*0xd8b810*/ <>c__DisplayClass35_0();
        /*0xd8b818*/ void <Send_RewardVip>b__0(ServerProtocol.ResCashShopVIPReward instance);
    }

    class <CoWaitShowVip>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ VIPManager <>4__this;

        /*0xd8b950*/ <CoWaitShowVip>d__36(int <>1__state);
        /*0xd8b97c*/ void System.IDisposable.Dispose();
        /*0xd8b980*/ bool MoveNext();
        /*0xd8bb50*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd8bb58*/ void System.Collections.IEnumerator.Reset();
        /*0xd8bb98*/ object System.Collections.IEnumerator.get_Current();
    }
}

class WorldBossManager : Singleton.Data.SingletonData<WorldBossManager>
{
    /*0x20*/ System.Collections.Generic.List<PTShare.Define.SWorldBossRanker> m_rankerList;
    /*0x28*/ PTShare.Define.SWorldBoss m_currBossData;
    /*0x30*/ System.Collections.Generic.List<int> m_attackBossIndexList;
    /*0x38*/ bool m_bannerEnable;
    /*0x40*/ System.Collections.Generic.List<int> m_missionReddots;
    /*0x48*/ WorldBossManager.BossData m_bossData;

    /*0xe0dd84*/ WorldBossManager();
    /*0xe0d024*/ bool InitInstance();
    /*0xe0d068*/ void ReleaseInstance();
    /*0xe0d06c*/ int GetCurrBossIndex();
    /*0xe0afd0*/ int GetCurrBossStepID();
    /*0xe0d088*/ int GetBattleID();
    /*0xe0c4d0*/ int GetBossID();
    /*0xe0c4f0*/ int GetBossLevel();
    /*0xe0c510*/ int GetBossGrade();
    /*0xe0c568*/ string GetBossStepReward();
    /*0xe0d0c8*/ string GetBossBasicReward();
    /*0xe0c54c*/ bool GetClear();
    /*0xe0d0e8*/ long GetBossHp(int step);
    /*0xe0d17c*/ WorldBossManager.BossData GetWorldBossTableData();
    /*0xe0d0a8*/ TableData.TableData_Worldbossstep GetWorldBossStepTableData();
    /*0xe0d170*/ TableData.TableData_Worldbossstep GetWorldBossStepTableData(int stepId);
    /*0xe0d184*/ System.Collections.Generic.List<TableData.TableData_Worldbossmission> GetWorldBossMissionTableData(int index);
    /*0xe0c530*/ long GetDamage();
    /*0xe0d1b0*/ PTShare.Define.SWorldBoss GetBossData();
    /*0xe0d1b8*/ System.Collections.Generic.List<PTShare.Define.SMainQuest> GetMissionList();
    /*0xe0b9e0*/ System.Collections.Generic.List<int> GetOpenBossList();
    /*0xe0b9fc*/ System.Collections.Generic.List<int> GetCloseBossList();
    /*0xe0a5fc*/ bool IsShowBanner();
    /*0xe0d1d4*/ bool IsShowTutorial(bool update);
    /*0xe0d2b8*/ bool IsAttackBoss(int index);
    /*0xe0acb4*/ bool IsShowCloseBoss();
    /*0xe0aa84*/ bool IsEmergence();
    /*0xe0d31c*/ void AddAttackBossIndex(int index);
    /*0xe0d3bc*/ void SetAttackBossIndex(System.Collections.Generic.List<int> list);
    /*0xe0d3c4*/ void SetBanner(bool enable);
    /*0xe0d3d0*/ void SetMissionReddot(System.Collections.Generic.List<int> reddots);
    /*0xe0d454*/ void SetMissionReddot(int bossIdx, bool enable);
    /*0xe0b0b4*/ void OpenPopup(int index);
    /*0xe0d6e8*/ System.TimeSpan GetExpireTime();
    /*0xe0d78c*/ bool IsMissionReddot(int idx);
    /*0xe0d54c*/ void Send_Enter(int index, System.Action callback);
    /*0xe0d860*/ void Send_Take(int listIndex, int bossIndex, int index, System.Action callBack);
    /*0xe0da10*/ void Send_BeginBattle(string heroIds, System.Action<int> callBack_WithRandomSeed);
    /*0xe0dbb8*/ void Send_FinishBattle(string statistics, string playData, long lcp, string HpMps, double damage, bool isWin, System.Action<PTShare.Define.SProperty> callBack);
    /*0xe0d04c*/ void UpdateCurrentBossData();

    class BossData
    {
        /*0x10*/ int OFFSET;
        /*0x14*/ int bossIndex;
        /*0x18*/ int stepId;
        /*0x1c*/ bool isOpen;
        /*0x1d*/ bool isConnectDay;
        /*0x20*/ System.Collections.Generic.List<int> openList;
        /*0x28*/ System.Collections.Generic.List<int> closeList;

        /*0xd8dc24*/ BossData();
        /*0xd8d9dc*/ void Compute();
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ int index;
        /*0x18*/ System.Action <>9__1;

        /*0xd8d5a0*/ <>c__DisplayClass38_0();
        /*0xd8d5a8*/ void <OpenPopup>b__1();
    }

    class <>c
    {
        static /*0x0*/ WorldBossManager.<> <>9;
        static /*0x8*/ System.Action <>9__38_0;

        static /*0xd8d4b8*/ <>c();
        /*0xd8d518*/ <>c();
        /*0xd8d520*/ void <OpenPopup>b__38_0();
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ WorldBossManager <>4__this;
        /*0x18*/ System.Action callback;

        /*0xd8d630*/ <>c__DisplayClass41_0();
        /*0xd8d638*/ void <Send_Enter>b__0(ServerProtocol.ResWorldBossEnter response);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ WorldBossManager <>4__this;
        /*0x18*/ int listIndex;
        /*0x20*/ System.Action callBack;

        /*0xd8d67c*/ <>c__DisplayClass42_0();
        /*0xd8d684*/ void <Send_Take>b__0(ServerProtocol.ResWorldBossTake response);
    }

    class <>c__DisplayClass43_0
    {
        /*0x10*/ System.Action<int> callBack_WithRandomSeed;

        /*0xd8d81c*/ <>c__DisplayClass43_0();
        /*0xd8d824*/ void <Send_BeginBattle>b__0(ServerProtocol.ResWorldBossBegin instance);
    }

    class <>c__DisplayClass44_0
    {
        /*0x10*/ WorldBossManager <>4__this;
        /*0x18*/ System.Action<PTShare.Define.SProperty> callBack;

        /*0xd8d8e4*/ <>c__DisplayClass44_0();
        /*0xd8d8ec*/ void <Send_FinishBattle>b__0(ServerProtocol.ResWorldBossFinish instance);
    }
}

class MiniGameMenuEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ MiniGameMenuEntity.ENTITY_TYPE m_entityType;

    /*0x2b417e0*/ MiniGameMenuEntity();
    /*0x2b41390*/ void OnClick();
    /*0x2b415d0*/ void OnClickRanking();
    /*0x2b417c0*/ RankingBoardType ConvertRankType();
    /*0x2b417e8*/ void <OnClickRanking>b__3_0(ServerProtocol.ResRaceRanking response);
    /*0x2b418f0*/ void <OnClickRanking>b__3_1(ServerProtocol.ResRunGameRanking response);

    enum ENTITY_TYPE
    {
        RACE = 0,
        RUN = 1,
    }

    class <>c
    {
        static /*0x0*/ MiniGameMenuEntity.<> <>9;
        static /*0x8*/ System.Action <>9__2_0;

        static /*0x1088384*/ <>c();
        /*0x10883e4*/ <>c();
        /*0x10883ec*/ void <OnClick>b__2_0();
    }

    class <>c__DisplayClass3_0
    {
        /*0x10*/ ServerProtocol.ResRaceRanking response;
        /*0x18*/ MiniGameMenuEntity <>4__this;

        /*0x108846c*/ <>c__DisplayClass3_0();
        /*0x1088474*/ void <OnClickRanking>b__2();
    }

    class <>c__DisplayClass3_1
    {
        /*0x10*/ ServerProtocol.ResRunGameRanking response;
        /*0x18*/ MiniGameMenuEntity <>4__this;

        /*0x108853c*/ <>c__DisplayClass3_1();
        /*0x1088544*/ void <OnClickRanking>b__3();
    }
}

class MiniGamePopup : GuiBase
{
    /*0x2b41abc*/ MiniGamePopup();
    /*0x2b419f8*/ void OnCreate();
    /*0x2b419fc*/ void OnDelete();
    /*0x2b41a00*/ void OnEnter();
    /*0x2b41a04*/ void OnExit();
    /*0x2b41a0c*/ void OnFinish();
    /*0x2b41a10*/ void OnLeave();
    /*0x2b41a14*/ void OnStart();
    /*0x2b41a18*/ void OnClickHelp();
}

class RaceCharacter : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_character;
    /*0x20*/ AtlasImage m_Rank;
    /*0x28*/ UnityEngine.GameObject m_MyPick;
    /*0x30*/ ParticleBase m_DustParticle;
    /*0x38*/ ParticleBase m_WinParticle;
    /*0x40*/ int nPlayerIndex;
    /*0x44*/ int nBlockIndex;
    /*0x48*/ int nRank;
    /*0x4c*/ float fOriginSpeed;
    /*0x50*/ float fChangeSpeed;
    /*0x54*/ float fBeginSpdTime;
    /*0x58*/ float fBeginSpeed;
    /*0x5c*/ float fFinishSpdTime;
    /*0x60*/ float fFinishSpeed;
    /*0x64*/ float fMoveDistance;
    /*0x68*/ bool bIsFinish;
    /*0x69*/ bool bIsComplete;
    /*0x6a*/ bool bIsReady;

    /*0x1247bd8*/ RaceCharacter();
    /*0x1247058*/ void Initialize(int nIndex, int nUnitIndex, int nRankIndex, float fSpeed);
    /*0x1247248*/ void Release();
    /*0x1247430*/ void StartRun();
    /*0x12475a0*/ void Run(float movespeed, UnityEngine.Vector2 moveToTarget);
    /*0x1247758*/ void SetAnimationState(string animName);
    /*0x124793c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x124798c*/ System.Collections.IEnumerator CoWaitAnimation();
    /*0x1247528*/ void OverWriteAnimSkeleton(ANIMATION_CLIP clip, bool loop);
    /*0x12479f8*/ void ViewRank();
    /*0x1247330*/ void SetActiveMyPick(bool enable);
    /*0x12473d8*/ void SetActiveRank(bool enable);
    /*0x1247b40*/ void SetBlockIndex(int index);
    /*0x1247b48*/ void SetChangeSpeed(float spd);
    /*0x1247b50*/ void SetBeginSpdTime(float time);
    /*0x1247b58*/ void SetBeginSpeed(float spd);
    /*0x1247b60*/ void SetFinishSpdTime(float time);
    /*0x1247b68*/ void SetFinishSpeed(float spd);
    /*0x1247b70*/ void SetReady(bool enable);
    /*0x12473f0*/ void SetFinish(bool enable);
    /*0x1247b7c*/ void SetComplete(bool enable);
    /*0x1247348*/ void SetActiveDustParticle(bool enable);
    /*0x1247390*/ void SetActiveWinParticle(bool enable);
    /*0x1247b88*/ int GetIndex();
    /*0x1247b90*/ int GetBlockIndex();
    /*0x1247b98*/ float GetChangeSpeed();
    /*0x1247ba0*/ float GetBeginTime();
    /*0x1247ba8*/ float GetFinishTime();
    /*0x1247bb0*/ bool IsReady();
    /*0x1247bb8*/ bool IsFinish();
    /*0x1247bc0*/ bool IsComplete();
    /*0x1247bc8*/ int GetRank();
    /*0x1247bd0*/ float GetMoveDistance();
    /*0x1247be0*/ bool <CoWaitAnimation>b__24_0();

    class <CoWaitAnimation>d__24 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceCharacter <>4__this;

        /*0xf94100*/ <CoWaitAnimation>d__24(int <>1__state);
        /*0xf9412c*/ void System.IDisposable.Dispose();
        /*0xf94130*/ bool MoveNext();
        /*0xf942ec*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf942f4*/ void System.Collections.IEnumerator.Reset();
        /*0xf94334*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RaceGamePopup : GuiBase
{
    /*0x40*/ UnityEngine.Transform m_ScreenParent;
    /*0x48*/ UnityEngine.Transform m_PlayerParent;
    /*0x50*/ UnityEngine.Transform m_BackParent;
    /*0x58*/ UnityEngine.Transform m_FrontParent;
    /*0x60*/ UnityEngine.Transform m_TileParent;
    /*0x68*/ UnityEngine.GameObject m_ExitButton;
    /*0x70*/ UnityEngine.GameObject m_SkipButton;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_StartSpine;
    /*0x80*/ UnityEngine.GameObject m_ViewParent;
    /*0x88*/ System.Collections.Generic.List<RaceViewEntity> m_liViewEntity;
    /*0x90*/ LocalizeString m_Title;
    /*0x98*/ float m_fScreenView;
    /*0x9c*/ UnityEngine.Vector2 m_vecTileSize;
    /*0xa4*/ UnityEngine.Vector2 m_vecTileOffset;
    /*0xac*/ float m_fPlayerYOffset;
    /*0xb0*/ RunRaceResultData resultData;
    /*0xb8*/ System.Collections.Generic.List<RaceCharacter> liRunCharacter;
    /*0xc0*/ System.Collections.Generic.List<RaceTile> liDecorateTile;
    /*0xc8*/ System.Collections.Generic.Dictionary<RaceCharacter, System.Collections.Generic.List<RaceTile>> dicRunTileList;
    /*0xd0*/ int nCurrentPlayer;
    /*0xd4*/ bool bIsInitialized;
    /*0xd5*/ bool bIsGameStart;
    /*0xd6*/ bool bIsGameComplete;
    /*0xd8*/ float fMovePlayerSpeed;
    /*0xdc*/ int nSplitAccelInterval;

    /*0x124aa78*/ RaceGamePopup();
    /*0x1247c04*/ float get_OriginSpeed();
    /*0x1247c54*/ int get_SplitAccelInterval();
    /*0x1247c9c*/ void OnCreate();
    /*0x1247ca0*/ void OnEnter();
    /*0x1247ca4*/ void OnStart();
    /*0x1247ca8*/ void OnFinish();
    /*0x1247cac*/ void OnLeave();
    /*0x1247cb0*/ void OnDelete();
    /*0x1247cb4*/ void OnExit();
    /*0x1247ea0*/ void OnUnconditionallyExit();
    /*0x1247fc8*/ void Release();
    /*0x1248720*/ void InitializeGame(RunRaceResultData data);
    /*0x1249ccc*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x1249cd4*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x1248ee4*/ void SetupMapping();
    /*0x124995c*/ void SetupCharacterPosition();
    /*0x1249bec*/ void MoveCamera();
    /*0x1249f34*/ void MovePlayerLogic(RaceCharacter character, float fTime);
    /*0x124a5d0*/ void FixedUpdate();
    /*0x1249a18*/ void SetActiveStartSpine(bool enable);
    /*0x1249a54*/ void InitViewEntity();
    /*0x124a850*/ void SetViewEntity(int nIndex);
    /*0x12486f0*/ void SetActiveViewGroup(bool enable);
    /*0x1248708*/ void SetActiveSkipButton(bool enable);
    /*0x124a944*/ void OnClickSkip();
    /*0x1248ec8*/ int GetMaxPlayers();
    /*0x1249ec0*/ RaceCharacter GetPlayer(int currentPlayer);
    /*0x124a4f4*/ UnityEngine.Vector3 GetPlayerPos(RaceCharacter player);
    /*0x124aa40*/ UnityEngine.Vector3 GetFirstBlockPos(int currentPlayer);
    /*0x124a338*/ UnityEngine.Vector3 GetFirstBlockPos(RaceCharacter player);
    /*0x1249e98*/ UnityEngine.Vector3 GetLastBlockPos(int currentPlayer);
    /*0x124a520*/ UnityEngine.Vector3 GetLastBlockPos(RaceCharacter player);
    /*0x124a3e8*/ UnityEngine.Vector3 GetBlockPos(RaceCharacter player, int index);
    /*0x1249e84*/ UnityEngine.Vector2 GetOffsetSize();
    /*0x124aa68*/ UnityEngine.Vector3 GetOffset();
    /*0x124ab88*/ void <OnExit>b__35_0(bool result);
    /*0x124acbc*/ void <OnExit>b__35_1();
    /*0x124ade4*/ void <InitializeGame>b__38_0(bool result);
    /*0x124adf0*/ void <SetupCharacterPosition>b__42_0(RaceCharacter x);
    /*0x124ae48*/ void <OnClickSkip>b__51_0(RaceCharacter x);

    class <>c
    {
        static /*0x0*/ RaceGamePopup.<> <>9;
        static /*0x8*/ System.Action<RaceCharacter> <>9__37_0;
        static /*0x10*/ System.Action<RaceTile> <>9__37_1;
        static /*0x18*/ System.Action<RaceCharacter> <>9__40_0;
        static /*0x20*/ System.Func<RaceCharacter, bool> <>9__45_0;

        static /*0xf9433c*/ <>c();
        /*0xf9439c*/ <>c();
        /*0xf943a4*/ void <Release>b__37_0(RaceCharacter x);
        /*0xf943c0*/ void <Release>b__37_1(RaceTile x);
        /*0xf9443c*/ void <AnimationState_Event>b__40_0(RaceCharacter x);
        /*0xf94458*/ bool <FixedUpdate>b__45_0(RaceCharacter x);
    }

    class <>c__DisplayClass38_0
    {
        /*0x10*/ int i;

        /*0xf94470*/ <>c__DisplayClass38_0();
        /*0xf94478*/ bool <InitializeGame>b__1(int x);
    }

    class <>c__DisplayClass45_0
    {
        /*0x10*/ RaceGamePopup <>4__this;
        /*0x18*/ float fTime;

        /*0xf94488*/ <>c__DisplayClass45_0();
        /*0xf94490*/ void <FixedUpdate>b__1(RaceCharacter x);
    }
}

class RaceManager : Singleton.Data.SingletonData<RaceManager>
{
    /*0x19*/ bool bBreakTime;
    /*0x1c*/ int nCurrentIndex;
    /*0x20*/ int nMySelectTrack;
    /*0x24*/ int nMyPastSelectTrack;
    /*0x28*/ System.Collections.Generic.List<PTShare.Define.SRunner> liCurrentRunners;
    /*0x30*/ System.Collections.Generic.List<PTShare.Define.SRace> liPastRace;
    /*0x38*/ ServerProtocol.ResRaceRanking m_rankData;
    /*0x40*/ bool bIsNewRaceRedDot;
    /*0x41*/ bool bIsNewRewardRedDot;

    /*0x124b7f0*/ RaceManager();
    /*0x124aea0*/ string get_UserToken();
    /*0x124af20*/ bool InitInstance();
    /*0x124af28*/ void ReleaseInstance();
    /*0x124346c*/ void Send_RaceEnter(System.Action callback);
    /*0x124af2c*/ void Send_RaceVote(int nTrack, System.Action callback);
    /*0x124b080*/ void Send_RaceList(System.Action callback);
    /*0x124b1b8*/ void Send_RaceView(int nSeq, int nVoteTrack, System.Action<RunRaceResultData> callback);
    /*0x124b310*/ void Send_RaceReward();
    /*0x124b4c8*/ void Send_RaceRanking(System.Action<ServerProtocol.ResRaceRanking> callBack);
    /*0x124b600*/ void SetMySelectTrackID(int nTrack);
    /*0x124b608*/ void SetPastTrack(int nTrack);
    /*0x124b610*/ void SetCurrentSeq(int nIndex);
    /*0x124b618*/ void SetEnableRedDot(bool enable);
    /*0x124b624*/ bool IsEnableRedDot();
    /*0x124b62c*/ bool IsEnableRewardDot();
    /*0x124b634*/ int GetMySelectTrackID();
    /*0x124b63c*/ int GetMyPastSelectTrackID();
    /*0x124b644*/ int GetMyCurrentSeq();
    /*0x124b64c*/ ServerProtocol.ResRaceRanking GetRankData();
    /*0x124b654*/ bool IsBreakTime();
    /*0x124b65c*/ System.Collections.Generic.List<PTShare.Define.SRace> GetPastRace();
    /*0x124b664*/ System.Collections.Generic.List<PTShare.Define.SRunner> GetCurrentRunners();
    /*0x124b66c*/ float GetVotePercent(int nIndex);
    /*0x124b870*/ bool <Send_RaceReward>b__17_0(PTShare.Define.SRace x);
    /*0x124b8a8*/ void <Send_RaceReward>b__17_1(ServerProtocol.ResRaceReward res);

    class <>c__DisplayClass13_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ System.Action callback;

        /*0xf9457c*/ <>c__DisplayClass13_0();
        /*0xf94584*/ void <Send_RaceEnter>b__0(ServerProtocol.ResRaceEnter response);
    }

    class <>c__DisplayClass14_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ int nTrack;
        /*0x20*/ System.Action callback;

        /*0xf94690*/ <>c__DisplayClass14_0();
        /*0xf94698*/ void <Send_RaceVote>b__0(ServerProtocol.ResRaceVote response);
    }

    class <>c__DisplayClass15_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ System.Action callback;

        /*0xf947a0*/ <>c__DisplayClass15_0();
        /*0xf947a8*/ void <Send_RaceList>b__0(ServerProtocol.ResRaceList response);
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ int nVoteTrack;
        /*0x1c*/ int nSeq;
        /*0x20*/ System.Action<RunRaceResultData> callback;

        /*0xf947e4*/ <>c__DisplayClass16_0();
        /*0xf947ec*/ void <Send_RaceView>b__0(ServerProtocol.ResRaceView response);
    }

    class <>c
    {
        static /*0x0*/ RaceManager.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SRace, bool> <>9__17_2;
        static /*0x10*/ System.Func<PTShare.Define.SRunner, int> <>9__32_0;

        static /*0xf944cc*/ <>c();
        /*0xf9452c*/ <>c();
        /*0xf94534*/ bool <Send_RaceReward>b__17_2(PTShare.Define.SRace x);
        /*0xf94564*/ int <GetVotePercent>b__32_0(PTShare.Define.SRunner x);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ RaceManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResRaceRanking> callBack;

        /*0xf94888*/ <>c__DisplayClass18_0();
        /*0xf94890*/ void <Send_RaceRanking>b__0(ServerProtocol.ResRaceRanking response);
    }
}

class RaceTile : UnityEngine.MonoBehaviour
{
    /*0x18*/ RaceTileType m_eTileType;
    /*0x20*/ AtlasImage m_Object;
    /*0x28*/ AtlasImage m_Tile;
    /*0x30*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x38*/ int nTrackIndex;
    /*0x40*/ TableData.TableData_Racetile tileData;
    /*0x48*/ UnityEngine.RectTransform rectTile;
    /*0x50*/ UnityEngine.RectTransform rectObject;

    /*0x11b8f44*/ RaceTile();
    /*0x11b8418*/ void Awake();
    /*0x11b84a4*/ void Release();
    /*0x11b84d4*/ void Initialize(int track, RaceTileType eTile);
    /*0x11b89d0*/ void Initialize(AtlasType eTileType, string tileName, float height, AtlasType eObjectType, string objectName, UnityEngine.Vector2 position);
    /*0x11b8bf0*/ void InitializeCharacter(int[] ignoreUnit);
    /*0x11b8528*/ void SetObject();
    /*0x11b8a54*/ void SetObject(AtlasType eType, string objectName, UnityEngine.Vector2 position);
    /*0x11b87ac*/ void SetTile();
    /*0x11b8b44*/ void SetTile(AtlasType eType, string tileName, float height);

    class <>c__DisplayClass12_0
    {
        /*0x10*/ int[] ignoreUnit;

        /*0xf96c6c*/ <>c__DisplayClass12_0();
        /*0xf96c74*/ bool <InitializeCharacter>b__1(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass12_1
    {
        /*0x10*/ TableData.TableData_Unitbase x;

        /*0xf96e04*/ <>c__DisplayClass12_1();
        /*0xf96e0c*/ bool <InitializeCharacter>b__2(int y);
    }

    class <>c
    {
        static /*0x0*/ RaceTile.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Unitbase, System.Guid> <>9__12_0;
        static /*0x10*/ System.Func<string, System.Guid> <>9__13_0;
        static /*0x18*/ System.Func<string, System.Guid> <>9__15_0;

        static /*0xf96af0*/ <>c();
        /*0xf96b50*/ <>c();
        /*0xf96b58*/ System.Guid <InitializeCharacter>b__12_0(TableData.TableData_Unitbase x);
        /*0xf96bb4*/ System.Guid <SetObject>b__13_0(string x);
        /*0xf96c10*/ System.Guid <SetTile>b__15_0(string x);
    }
}

class RunRewardLimitEntity : UnityEngine.MonoBehaviour
{
    /*0x18*/ RunRewardColumn eRewardType;
    /*0x1c*/ RunRewardColumn eRewardMaxType;
    /*0x20*/ AtlasImage m_CurrencyIcon;
    /*0x28*/ UnityEngine.UI.Slider m_Slider;
    /*0x30*/ LocalizeString m_Value;
    /*0x38*/ UnityEngine.GameObject m_MaxText;
    /*0x40*/ long lCurrentValue;
    /*0x48*/ Rewards defaultReward;
    /*0x110*/ long maxReward;

    /*0x1295fe4*/ RunRewardLimitEntity();
    /*0x1295ba4*/ void InitializeEntity(float ratio);
    /*0x1295f04*/ void InitializeEntity();
    /*0x1295d00*/ void SetIcon();
    /*0x1295dec*/ void SetSlider();
}

class RunRewardLimitGroup : UnityEngine.MonoBehaviour
{
    /*0x18*/ System.Collections.Generic.List<RunRewardLimitEntity> m_liRewardLinitEntity;

    /*0x1295fec*/ RunRewardLimitGroup();
    /*0x1292bec*/ void InitializeEntity(int ratio);

    class <>c__DisplayClass1_0
    {
        /*0x10*/ int ratio;

        /*0xf9c370*/ <>c__DisplayClass1_0();
        /*0xf9c378*/ void <InitializeEntity>b__0(RunRewardLimitEntity x);
    }
}

enum RunPatternType
{
    STRAIGHTLINE = 0,
    CROSSLINE = 1,
    STARTPOINT = 2,
    DESTINATION = 3,
}

enum RunTileType
{
    TRACK = 0,
    SEPERATOR = 1,
}

enum RunObstacleType
{
    NONE = 0,
    CAT = 1,
    RABBIT = 2,
    ICE = 3,
    FEAR = 4,
}

enum RunRewardType
{
    NONE = 0,
    REWARD_01 = 1,
    REWARD_01_UP = 2,
    REWARD_02 = 3,
    REWARD_02_UP = 4,
    REWARD_03 = 5,
    REWARD_03_UP = 6,
    REWARD_04 = 7,
    REWARD_04_UP = 8,
    REWARD_LIFE = 9,
    REWARD_LIFE_UP = 10,
}

enum RunGameState
{
    NONE = 0,
    READY = 1,
    RUN = 2,
    RUN_CROSS = 3,
    JUMP = 4,
    FALL = 5,
    FEAR = 6,
    DEATH = 7,
    WIN = 8,
}

enum RunDirectionType
{
    CENTER = 0,
    LOWER = 1,
    RIGHT = 2,
    LEFT_UPPER = 3,
    LEFT_LOWER = 4,
    RIGHT_UPPER = 5,
    RIGHT_LOWER = 6,
}

enum RunRewardColumn
{
    None = 0,
    Reward1_Max = 1,
    Reward2_Max = 2,
    Reward3_Max = 3,
    Reward4_Max = 4,
    Reward1_One = 5,
    Reward2_One = 6,
    Reward3_One = 7,
    Reward4_One = 8,
}

enum RunTileLineType
{
    NONE = 0,
    TOP = 1,
    MIDDLE = 2,
    BOTTOM = 3,
}

class Define_RunGame
{
    static string PATTERN_STARTPOINT_PATH = "Assets/MapTool/RunGame/TileSet/Startpoint";
    static string PATTERN_DESTINATION_PATH = "Assets/MapTool/RunGame/TileSet/Destination";
    static string PATTERN_STRAIGHTLINE_PATH = "Assets/MapTool/RunGame/TileSet/Straightline";
    static string PATTERN_CROSSLINE_PATH = "Assets/MapTool/RunGame/TileSet/Crossline";
    static string RUNGAME_UNIT_NAME = "RunGameUnit";
    static float TARGET_DELTA_TIME = 0.016599999740719795;
    static /*0x0*/ UnityEngine.Vector3 RUNGAME_UNIT_SCALE;
    static /*0xc*/ UnityEngine.Vector3 RUNGAME_UNIT_LOCAL_POSITION;
    static /*0x18*/ RunGameSettings settings;

    static /*0x11ef7d0*/ Define_RunGame();
    static /*0x11ef5b4*/ RunGameSettings get_Settings();
}

class RunGameManager : Singleton.Component.SingletonComponent<RunGameManager>
{
    /*0x24*/ int <CurrentRewardCount>k__BackingField;
    /*0x28*/ System.Collections.Generic.List<int> CurrentReward;
    /*0x30*/ System.Collections.Generic.List<int> PrevReward;
    /*0x38*/ PTShare.Define.SProperty CurrentGain;
    /*0x40*/ System.DateTime LatestDateTime;
    /*0x48*/ bool Initialized;
    /*0x49*/ bool IsStartRun;
    /*0x4a*/ bool IsLockBackButton;
    /*0x4c*/ RunGameState <CurrentState>k__BackingField;
    /*0x50*/ RunGameState <NextState>k__BackingField;
    /*0x54*/ RunGameState <PrevState>k__BackingField;
    /*0x58*/ int PrevSelectHeroTableID;
    /*0x60*/ UnityEngine.GameObject m_TilesetParent;
    /*0x68*/ RunGameUnit m_RunGameUnit;
    /*0x70*/ RunGamePopup m_RunGamePopup;
    /*0x78*/ RunGameTileSet m_StartpointTileset;
    /*0x80*/ RunGameTileSet m_DestinationTileset;
    /*0x88*/ System.Collections.Generic.List<RunGameTileSet> m_lisTrackTileset;
    /*0x90*/ System.Collections.Generic.List<ParticleBase> m_lisRewardParticle;
    /*0x98*/ UnityEngine.Vector2 m_vUnitPosition;
    /*0xa0*/ UnityEngine.Vector3 m_vUnitOriginPosition;
    /*0xac*/ UnityEngine.Vector2 m_vCurrentDirection;
    /*0xb4*/ UnityEngine.Vector2 m_vStraightDirection;
    /*0xbc*/ UnityEngine.Vector2 m_vBottomDirection;
    /*0xc4*/ UnityEngine.Vector2 m_vRightDirection;
    /*0xcc*/ UnityEngine.Vector2 m_vBottomToUnit;
    /*0xd8*/ RunGameTileSet m_UnitParentTileset;
    /*0xe0*/ RunGameTileSet m_CurrentTileset;
    /*0xe8*/ RunGameTileSet m_NextTileset;
    /*0xf0*/ RunGameTile m_CurrentTile;
    /*0xf8*/ RunGameTile m_NextTile;
    /*0x100*/ RunGameTile m_TmpCrossTile;
    /*0x108*/ RunGameTile m_RecentObstacleTile;
    /*0x110*/ RunGameTile m_StartTile;
    /*0x118*/ RunGameTile m_DestinationTile;
    /*0x120*/ TableData.TableData_Runlife m_tRunLife;
    /*0x128*/ System.Collections.Generic.Dictionary<RunRewardType, int> m_dicRewardCount;
    /*0x130*/ int m_nUnitID;
    /*0x134*/ int m_nSkinID;
    /*0x138*/ int m_nUnitGrade;
    /*0x13c*/ int m_nCurrentLife;
    /*0x140*/ int m_nCurrentTilesetIndex;
    /*0x144*/ float m_fCurrentDeltaTime;
    /*0x148*/ float m_fCurrentTargetDeltaTime;
    /*0x14c*/ float m_fRunSpeed;
    /*0x150*/ float m_fAnimationSpeed_Jump;
    /*0x154*/ float m_fAnimationSpeed_Run;
    /*0x158*/ float m_fFallReduceSpeed;
    /*0x15c*/ float m_fJumpCoolTime;
    /*0x160*/ float m_fCurPlayTime;
    /*0x164*/ float m_fInvincibleTime;
    /*0x168*/ float m_fCurInvincibleTime;
    /*0x16c*/ bool m_bIgnoreJump;
    /*0x16d*/ bool m_bPrevJump;
    /*0x16e*/ bool m_bPrevRun;
    /*0x170*/ RunDirectionType m_eSelectDirection;
    /*0x174*/ RunDirectionType m_eCurrentDirection;
    /*0x178*/ RunDirectionType m_eCurrentCrossDirection;
    /*0x180*/ ServerProtocol.ResRunGameRanking m_rankData;
    /*0x188*/ System.Collections.Generic.List<RunGameManager.RunHeroSpanTime> CurrentRunHerosCooltime;
    /*0x190*/ System.DateTime LastTime;
    /*0x198*/ System.Collections.Generic.List<PTShare.Define.SRunHero> m_isReddotData;
    /*0x1a0*/ System.Collections.IEnumerator m_CoRenewTimer;

    static /*0x11b217c*/ int <OnExitAnimation>g__GetRewardAmount|94_0(Rewards _reward);
    static /*0x11b103c*/ string <GetRewards>g__GetValue|108_0(RunRewardColumn column, ref RunGameManager.<> );
    static /*0x11b12c0*/ int <GetMaxRewards>g__GetValue|109_0(RunRewardColumn column, ref RunGameManager.<> );
    /*0x11b1cf0*/ RunGameManager();
    /*0x11abbe0*/ void AwakeInstance();
    /*0x11abbe4*/ bool InitInstance();
    /*0x11abbec*/ void ReleaseInstance();
    /*0x11abbf0*/ int get_CurrentRewardCount();
    /*0x11abbf8*/ void set_CurrentRewardCount(int value);
    /*0x11abc00*/ RunGameState get_CurrentState();
    /*0x11abc08*/ void set_CurrentState(RunGameState value);
    /*0x11abc10*/ RunGameState get_NextState();
    /*0x11abc18*/ void set_NextState(RunGameState value);
    /*0x11abc20*/ RunGameState get_PrevState();
    /*0x11abc28*/ void set_PrevState(RunGameState value);
    /*0x11abc30*/ int get_RunGameUnitTableID();
    /*0x11abc38*/ ServerProtocol.ResRunGameRanking GetRankData();
    /*0x11abc40*/ void Send_Rank(System.Action<ServerProtocol.ResRunGameRanking> callBack);
    /*0x11abdcc*/ void ReadyRun();
    /*0x11ac1e8*/ void StartRun();
    /*0x11ac32c*/ void ExitRun();
    /*0x11ac588*/ void Initialize(RunGamePopup _popup);
    /*0x11ad1b4*/ void InitUnit();
    /*0x11ad624*/ void SetUnit(PTShare.Define.SHero hero);
    /*0x11adeb0*/ void SetActiveRunGameUnit(bool _bActive);
    /*0x11adef8*/ void Update();
    /*0x11ae0f4*/ void UpdateRun();
    /*0x11aeda0*/ void CheckInivincible();
    /*0x11af7fc*/ void MoveTilesetParent(UnityEngine.Vector3 _vMove);
    /*0x11aede8*/ void SetCurrentTile();
    /*0x11af9ec*/ void SetNextTile();
    /*0x11abdd4*/ void SetState(RunGameState _eState);
    /*0x11afb4c*/ bool CheckChangeStateEnable(RunGameState _eState);
    /*0x11afbac*/ void OnExitState();
    /*0x11afdf8*/ void OnExitAnimation();
    /*0x11afd3c*/ void SetAnimation(ANIMATION_CLIP _eAnimClip, bool _bLoop);
    /*0x11acf58*/ void SetActiveSelectButtons(bool _bActive);
    /*0x11af2c0*/ void SetRewardCount(RunRewardType _eType);
    /*0x11af618*/ void SpawnRewardParticle(UnityEngine.Transform _trans, bool _bUp);
    /*0x11b02c4*/ void Restart();
    /*0x11b06bc*/ void Jump();
    /*0x11b06c4*/ void Down();
    /*0x11b06d0*/ void Up();
    /*0x11b06dc*/ long GetRewardValue(RunRewardColumn col);
    /*0x11b09a8*/ int GetRewardCount(RunRewardColumn col);
    /*0x11b0a70*/ void GetTotalRewards(System.Collections.Generic.List<Rewards> parent);
    /*0x11b0160*/ void GetTotalRewardCounts(System.Collections.Generic.List<int> parent);
    /*0x11b0c28*/ void GetResultRewards(System.Collections.Generic.List<Rewards> _rewards, System.Collections.Generic.List<Rewards> _bonusRewards);
    /*0x11b0800*/ Rewards GetRewards(RunRewardColumn col);
    /*0x11b120c*/ long GetMaxRewards(RunRewardColumn col);
    /*0x11b093c*/ long GetMaxLimitRewardValue(Rewards reward, RunRewardColumn maxRewardType, long val, long current);
    /*0x11b1490*/ int GetCurrentReward(RunRewardColumn _type);
    /*0x11b15a0*/ int GetPrevReward(RunRewardColumn _type);
    /*0x11ad160*/ void InitTimer();
    /*0x11ac300*/ void InitTimer_StartRun();
    /*0x11ac574*/ void ExitRun_Timer();
    /*0x11b1878*/ System.Collections.IEnumerator CoRenewTimers();
    /*0x11b18e4*/ bool IsReddot();
    /*0x11b193c*/ void SetTimers(System.Collections.Generic.List<PTShare.Define.SRunHero> _lisRunHero);
    /*0x11b16b0*/ void RenewTimers();
    /*0x11b1848*/ void RenewTimerUTC();
    /*0x11ab8b8*/ System.TimeSpan GetRemainTimeSpan();
    /*0x11b1e3c*/ void <OnExitAnimation>b__94_1(ServerProtocol.ResRunGameReward res);
    /*0x11b1fdc*/ void <OnExitAnimation>b__94_2(ServerProtocol.ResRunGameReward res);

    class RunHeroSpanTime
    {
        /*0x10*/ int tableID;
        /*0x18*/ double remainCooltime;

        /*0xf9bcd4*/ RunHeroSpanTime();
    }

    class <>c__DisplayClass77_0
    {
        /*0x10*/ RunGameManager <>4__this;
        /*0x18*/ System.Action<ServerProtocol.ResRunGameRanking> callBack;

        /*0xf9bb0c*/ <>c__DisplayClass77_0();
        /*0xf9bb14*/ void <Send_Rank>b__0(ServerProtocol.ResRunGameRanking response);
    }

    struct <>c__DisplayClass108_0
    {
        /*0x10*/ TableData.TableData_Runreward table;
        /*0x18*/ RunRewardColumn col;
    }

    struct <>c__DisplayClass109_0
    {
        /*0x10*/ TableData.TableData_Runreward table;
        /*0x18*/ RunRewardColumn col;
    }

    class <CoRenewTimers>d__121 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RunGameManager <>4__this;

        /*0xf9bb9c*/ <CoRenewTimers>d__121(int <>1__state);
        /*0xf9bbc8*/ void System.IDisposable.Dispose();
        /*0xf9bbcc*/ bool MoveNext();
        /*0xf9bc84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9bc8c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9bccc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RunGamePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_goRestartButton;
    /*0x48*/ UnityEngine.GameObject m_goStartButton;
    /*0x50*/ UnityEngine.GameObject m_goJumpButton;
    /*0x58*/ UnityEngine.GameObject m_goDownButton;
    /*0x60*/ UnityEngine.GameObject m_goUpButton;
    /*0x68*/ UnityEngine.GameObject m_goHelpButton;
    /*0x70*/ UnityEngine.GameObject m_goRewardButton;
    /*0x78*/ UnityEngine.RectTransform m_BackgroundParent;
    /*0x80*/ UnityEngine.UI.Image m_BackgroundImage;
    /*0x88*/ UnityEngine.GameObject m_goLifeParent;
    /*0x90*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisLife;
    /*0x98*/ CurrencyTopWindow m_RewardWindow;
    /*0xa0*/ HeroInventoryPage_RunGame m_InvenPage;
    /*0xa8*/ Spine.Unity.SkeletonGraphic m_ReadySpine;
    /*0xb0*/ Spine.Unity.SkeletonGraphic m_SliderCharacter;
    /*0xb8*/ Spine.Unity.SkeletonGraphic m_IllustCharacter;
    /*0xc0*/ UnityEngine.GameObject m_goUnitSpec;
    /*0xc8*/ Spine.Unity.SkeletonGraphic m_SpecPreviewUnit;
    /*0xd0*/ LocalizeString m_SpecUnitName;
    /*0xd8*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisLifeSpec;
    /*0xe0*/ UnityEngine.UI.Slider m_SpecSlider_Speed;
    /*0xe8*/ UnityEngine.UI.Slider m_SpecSlider_Jump;
    /*0xf0*/ UnityEngine.UI.Slider m_SpecSlider_Invincible;
    /*0xf8*/ UnityEngine.GameObject m_ScoreHighParent;
    /*0x100*/ UnityEngine.GameObject m_ScoreCurrentParent;
    /*0x108*/ LocalizeString m_ScoreHighScoreText;
    /*0x110*/ LocalizeString m_ScoreCurrentScoreText;
    /*0x118*/ UnityEngine.UI.Slider m_ProgressSlider;
    /*0x120*/ UnityEngine.UI.Text m_PlayTimer;
    /*0x128*/ UnityEngine.UI.Image m_CrossSignal;
    /*0x130*/ LocalizeString m_RenewTimerText;
    /*0x138*/ UnityEngine.GameObject m_goRenewTimerParent;
    /*0x140*/ System.Collections.Generic.List<Rewards> liRewards;
    /*0x148*/ System.Collections.Generic.List<TopCurrencyInfo> liCurrencyInfo;
    /*0x150*/ DG.Tweening.Sequence m_CrossSignalSequence;
    /*0x158*/ float m_fBackgroundOriginPosX;
    /*0x15c*/ float m_fBackgroundTexturelenght;
    /*0x160*/ bool bIsPlayingAnimation;
    /*0x168*/ DG.Tweening.Sequence m_SeqPreviewUnit;
    /*0x170*/ UnityEngine.Vector3 m_vOriginPosPreviewUnit;

    /*0x11b3074*/ RunGamePopup();
    /*0x11b21a8*/ HeroInventoryPage_RunGame get_GetInventoryPage();
    /*0x11b21b0*/ void OnCreate();
    /*0x11b21b4*/ void OnDelete();
    /*0x11b21b8*/ void OnEnter();
    /*0x11b21bc*/ void OnFinish();
    /*0x11b21c0*/ void OnLeave();
    /*0x11b21c4*/ void OnStart();
    /*0x11b21c8*/ void OnExit();
    /*0x11b0370*/ void Initialize();
    /*0x11b24d8*/ void StartRun();
    /*0x11b28d8*/ void OnSelectCallback();
    /*0x11b2984*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x11b29c8*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x11ad76c*/ void SetSelectSpineGraphic(PTShare.Define.SHero _sHero);
    /*0x11b2b48*/ void SetSpecSliders(int _nTableID);
    /*0x11b2cb0*/ void Update();
    /*0x11b2e2c*/ void Restart();
    /*0x11b2d28*/ void Jump();
    /*0x11b2dd4*/ void Down();
    /*0x11b2d7c*/ void Up();
    /*0x11b2ea8*/ void Help();
    /*0x11b2ff8*/ void ShowReward();
    /*0x11b1bc8*/ void SetTimerUTC(System.TimeSpan _remainTimeSpan);
    /*0x11ad8fc*/ void SetActiveUnitSpecs(bool _bActive);
    /*0x11ad914*/ void SetPreviewUnit(int _nSkinID);
    /*0x11ac314*/ void SetActiveLifeParent(bool _bActive);
    /*0x11b0244*/ void SetActiveSelectButtons(bool _bActive);
    /*0x11ad51c*/ void SetLife(int _nLife);
    /*0x11aebf8*/ void SetTimer(int _nTime);
    /*0x11aed7c*/ void SetProgrssSlider(float _fProgress);
    /*0x11af8ec*/ void TranslateBackground(UnityEngine.Vector2 _move);
    /*0x11b22f0*/ void SetBackgroundPositionToOrigin();
    /*0x11b2330*/ void SetActiveCrossSignalTween(bool _bActive);
    /*0x11b2968*/ PTShare.Define.SHero GetSelectHero();
    /*0x11acf6c*/ void UpdateReward();
    /*0x11b3140*/ void <StartRun>b__48_0(ServerProtocol.ResRunGameRanking ranking);
    /*0x11b322c*/ void <SetSelectSpineGraphic>g__HandleCompleteIllustAnimation|52_0(Spine.TrackEntry entry);

    class <>c__DisplayClass65_0
    {
        /*0x10*/ RunGamePopup <>4__this;
        /*0x18*/ bool isFall;

        /*0xf9bcdc*/ <>c__DisplayClass65_0();
        /*0xf9bce4*/ void <SetPreviewUnit>b__0();
        /*0xf9be30*/ void <SetPreviewUnit>g__HandleCompleteTweenPreviewUnit|1();
        /*0xf9bf88*/ void <SetPreviewUnit>g__HandleCompleteAnimationPreviewUnit|2(Spine.TrackEntry _trackEntry);
    }

    class <>c__DisplayClass75_0
    {
        /*0x10*/ int count;

        /*0xf9c08c*/ <>c__DisplayClass75_0();
        /*0xf9c094*/ TopCurrencyInfo <UpdateReward>b__0(Rewards x);
    }
}

class RunGameTile : TileBase
{
    /*0x78*/ RunTileType runTileType;
    /*0x7c*/ RunObstacleType obstacleType;
    /*0x80*/ RunRewardType rewardType;
    /*0x84*/ RunTileLineType <LineType>k__BackingField;
    /*0x88*/ UnityEngine.GameObject m_RewardObject;
    /*0x90*/ bool <IsDestinationTile>k__BackingField;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_RewardSpine;
    /*0xa0*/ UnityEngine.Vector2 m_vCenterPosition;
    /*0xa8*/ UnityEngine.Vector2 m_vBottomPosition;
    /*0xb0*/ UnityEngine.Vector2 m_vLeftUpperPosition;
    /*0xb8*/ UnityEngine.Vector2 m_vLeftLowerPosition;
    /*0xc0*/ UnityEngine.Vector2 m_vRightUpperPosition;
    /*0xc8*/ UnityEngine.Vector2 m_vRightLowerPosition;
    /*0xd0*/ UnityEngine.Vector2 m_vOriginPosition;

    /*0x12940d4*/ RunGameTile();
    /*0x1293928*/ RunTileLineType get_LineType();
    /*0x1293930*/ void set_LineType(RunTileLineType value);
    /*0x1293938*/ UnityEngine.Transform get_GetRewardTrans();
    /*0x129394c*/ UnityEngine.Vector2 get_GetGapPosition();
    /*0x12939d0*/ bool get_IsDestinationTile();
    /*0x12939d8*/ void set_IsDestinationTile(bool value);
    /*0x12939a0*/ UnityEngine.Vector2 get_m_vPositionGapFromOrigin();
    /*0x12939e4*/ void Initialize(UnityEngine.Vector2 _vRightUpperVector);
    /*0x1293c98*/ void SetStartEndPosition(UnityEngine.Vector2 _vRightUpperVector);
    /*0x1293d4c*/ UnityEngine.Vector2 GetPositionWithType(RunDirectionType _ePositionType);
    /*0x1293dec*/ bool IsUnitInTile(UnityEngine.Vector2 _vUnitPosition);
    /*0x1293eb8*/ void GetReward();
    /*0x1294084*/ void HandleCompeleteAnimation(Spine.TrackEntry _trackEntry);
    /*0x12940a4*/ bool isRewardTile(bool _bUp);
}

class RunGameTileSet : TileSetBase
{
    /*0x48*/ RunPatternType runPatternType;
    /*0x50*/ RunGameTile <StartpointTile>k__BackingField;
    /*0x58*/ RunGameTile <DestinationTile>k__BackingField;
    /*0x60*/ RunGameTile <CrossStartTile>k__BackingField;
    /*0x68*/ RunGameTile <CrossEndTopTile>k__BackingField;
    /*0x70*/ RunGameTile <CrossEndBottomTile>k__BackingField;
    /*0x78*/ System.Collections.Generic.List<RunGameTile> <TileList>k__BackingField;
    /*0x80*/ System.Collections.Generic.List<RunGameTile> <TrackTileList>k__BackingField;
    /*0x88*/ System.Collections.Generic.List<RunGameTile> <SeperatorTileList>k__BackingField;
    /*0x90*/ UnityEngine.Vector2 <RightLowerTileGap>k__BackingField;
    /*0x98*/ UnityEngine.Vector2 <LeftUpperTileGap>k__BackingField;
    /*0xa0*/ UnityEngine.Transform <TopLineTrans>k__BackingField;
    /*0xa8*/ UnityEngine.Transform <MiddleLineTrans>k__BackingField;
    /*0xb0*/ UnityEngine.Transform <BottomLineTrans>k__BackingField;
    /*0xb8*/ UnityEngine.Transform m_Transform;

    /*0x1294d8c*/ RunGameTileSet();
    /*0x12940dc*/ RunGameTile get_StartpointTile();
    /*0x12940e4*/ void set_StartpointTile(RunGameTile value);
    /*0x12940ec*/ RunGameTile get_DestinationTile();
    /*0x12940f4*/ void set_DestinationTile(RunGameTile value);
    /*0x12940fc*/ RunGameTile get_CrossStartTile();
    /*0x1294104*/ void set_CrossStartTile(RunGameTile value);
    /*0x129410c*/ RunGameTile get_CrossEndTopTile();
    /*0x1294114*/ void set_CrossEndTopTile(RunGameTile value);
    /*0x129411c*/ RunGameTile get_CrossEndBottomTile();
    /*0x1294124*/ void set_CrossEndBottomTile(RunGameTile value);
    /*0x129412c*/ System.Collections.Generic.List<RunGameTile> get_TileList();
    /*0x1294134*/ void set_TileList(System.Collections.Generic.List<RunGameTile> value);
    /*0x129413c*/ System.Collections.Generic.List<RunGameTile> get_TrackTileList();
    /*0x1294144*/ void set_TrackTileList(System.Collections.Generic.List<RunGameTile> value);
    /*0x129414c*/ System.Collections.Generic.List<RunGameTile> get_SeperatorTileList();
    /*0x1294154*/ void set_SeperatorTileList(System.Collections.Generic.List<RunGameTile> value);
    /*0x129415c*/ UnityEngine.Vector2 get_RightLowerTileGap();
    /*0x1294164*/ void set_RightLowerTileGap(UnityEngine.Vector2 value);
    /*0x129416c*/ UnityEngine.Vector2 get_LeftUpperTileGap();
    /*0x1294174*/ void set_LeftUpperTileGap(UnityEngine.Vector2 value);
    /*0x129417c*/ UnityEngine.Transform get_TopLineTrans();
    /*0x1294184*/ void set_TopLineTrans(UnityEngine.Transform value);
    /*0x129418c*/ UnityEngine.Transform get_MiddleLineTrans();
    /*0x1294194*/ void set_MiddleLineTrans(UnityEngine.Transform value);
    /*0x129419c*/ UnityEngine.Transform get_BottomLineTrans();
    /*0x12941a4*/ void set_BottomLineTrans(UnityEngine.Transform value);
    /*0x12941ac*/ void Initialize();
    /*0x1294364*/ void InitializeTiles();
    /*0x1294c9c*/ void SetTilesPositionWithStartpoint(UnityEngine.Vector2 _vPosition);
}

class RunGameUnit : UnityEngine.MonoBehaviour
{
    /*0x18*/ Spine.Unity.SkeletonGraphic m_Anim;
    /*0x20*/ UnityEngine.GameObject m_goRaceParticle;
    /*0x28*/ ParticleBase m_SelectParticle;
    /*0x30*/ TableData.TableData_Unitbase m_tUnitBase;
    /*0x38*/ DG.Tweening.Sequence m_Sequence;
    /*0x40*/ System.Action m_OnCompleteAnimation;
    /*0x48*/ UnityEngine.Vector3 m_vOriginScale;
    /*0x54*/ UnityEngine.Vector3 m_vRightDirection;
    /*0x60*/ UnityEngine.Vector3 m_vLeftDirection;

    /*0x12952c4*/ RunGameUnit();
    /*0x1294e3c*/ void Initialize(int _nSkinID);
    /*0x1295038*/ void UpdateAnimation(float _fDeltaTime);
    /*0x129505c*/ void SetAlphaTween();
    /*0x129512c*/ void KillAlphaTween();
    /*0x1295164*/ void SetAlpha(float _fAlpha);
    /*0x12951c0*/ void SetDirection(bool _bLeft);
    /*0x1295228*/ void SetAnimation(ANIMATION_CLIP _eAnimClip, bool _bLoop, System.Action _onComplete);
    /*0x1295290*/ void SetActiveRaceParticle(bool _bActive);
    /*0x12952b0*/ void HandleCheckAnimationComplete(Spine.TrackEntry _entry);
}

class ObjectPool : UnityEngine.MonoBehaviour
{
    static string UnusedParentName = "UnusedObjects";
    static string UsedParentName = "UsedObjects";
    static string DisableParentName = "DisableObjects";
    /*0x18*/ AssetBundleType m_AssetBundleType;
    /*0x20*/ System.Collections.Generic.List<ObjectPool.ObjectPoolPrefab> <objectList>k__BackingField;
    /*0x28*/ System.Collections.Generic.Dictionary<string, ObjectPool.ObjectPoolPrefab> <objectDic>k__BackingField;
    /*0x30*/ UnityEngine.GameObject m_UnusedParent;
    /*0x38*/ UnityEngine.GameObject m_UsedParent;
    /*0x40*/ UnityEngine.GameObject m_DisableParent;
    /*0x48*/ UnityEngine.Transform m_TransUnusedParent;
    /*0x50*/ UnityEngine.Transform m_TransUsedParent;
    /*0x58*/ UnityEngine.Transform m_TransDisableParent;
    /*0x60*/ UnityEngine.Transform m_Transform;
    /*0x68*/ ObjectPool.ObjectPoolPrefab m_PoolPrefab;

    /*0x2b54278*/ ObjectPool();
    /*0x2b53d50*/ System.Collections.Generic.List<ObjectPool.ObjectPoolPrefab> get_objectList();
    /*0x2b53d58*/ void set_objectList(System.Collections.Generic.List<ObjectPool.ObjectPoolPrefab> value);
    /*0x2b53d60*/ System.Collections.Generic.Dictionary<string, ObjectPool.ObjectPoolPrefab> get_objectDic();
    /*0x2b53d68*/ void set_objectDic(System.Collections.Generic.Dictionary<string, ObjectPool.ObjectPoolPrefab> value);
    /*0x2b53d70*/ AssetBundleType GetAssetBundleType();
    /*0x2b53d78*/ void Init(AssetBundleType _eAssetBundleType);
    /*0x2b53fd4*/ UnityEngine.GameObject GetItem(string _sName);
    /*0x2b54120*/ bool ReturnItem(UnityEngine.GameObject obj, bool _bDisable);
    /*0x2b541d0*/ bool ReturnItemDisableToUnused(UnityEngine.GameObject obj);

    class ObjectPoolPrefab
    {
        /*0x10*/ UnityEngine.GameObject <Prefab>k__BackingField;
        /*0x18*/ System.Collections.Generic.Stack<UnityEngine.GameObject> <UnusedObjectStack>k__BackingField;
        /*0x20*/ System.Collections.Generic.List<UnityEngine.GameObject> <UsedObjectList>k__BackingField;
        /*0x28*/ System.Collections.Generic.List<UnityEngine.GameObject> <DisableObjectList>k__BackingField;
        /*0x30*/ AssetBundleType AssetBundleType;
        /*0x38*/ string m_sPrefabName;
        /*0x40*/ UnityEngine.Transform m_TransUnusedParent;
        /*0x48*/ UnityEngine.Transform m_TransUsedParent;
        /*0x50*/ UnityEngine.Transform m_TransDisableParent;

        /*0x108ad2c*/ ObjectPoolPrefab();
        /*0x108a0b8*/ UnityEngine.GameObject get_Prefab();
        /*0x108a0c0*/ void set_Prefab(UnityEngine.GameObject value);
        /*0x108a0c8*/ System.Collections.Generic.Stack<UnityEngine.GameObject> get_UnusedObjectStack();
        /*0x108a0d0*/ void set_UnusedObjectStack(System.Collections.Generic.Stack<UnityEngine.GameObject> value);
        /*0x108a0d8*/ System.Collections.Generic.List<UnityEngine.GameObject> get_UsedObjectList();
        /*0x108a0e0*/ void set_UsedObjectList(System.Collections.Generic.List<UnityEngine.GameObject> value);
        /*0x108a0e8*/ System.Collections.Generic.List<UnityEngine.GameObject> get_DisableObjectList();
        /*0x108a0f0*/ void set_DisableObjectList(System.Collections.Generic.List<UnityEngine.GameObject> value);
        /*0x108a0f8*/ bool Init(UnityEngine.Transform _TransUnsed, UnityEngine.Transform _TransUsed, UnityEngine.Transform _TransDisable, AssetBundleType _eAssetBundleType);
        /*0x108a450*/ void SetPrefabName(string _sPrefabName);
        /*0x108a368*/ void CreateObject();
        /*0x108a458*/ UnityEngine.GameObject GetItem();
        /*0x108a564*/ void ReturnItem(UnityEngine.GameObject obj, bool _bDisable);
        /*0x108a684*/ void ReturnItemDisableToUnused(UnityEngine.GameObject obj);
        /*0x108a7c4*/ void ReturnAllItems();
        /*0x108a958*/ void ReturnAllItemsDisableToUnused();
        /*0x108aafc*/ void DeleteAllItems();
    }
}

class ObjectPoolManager : Singleton.Component.SingletonComponent<ObjectPoolManager>
{
    /*0x21*/ bool <IsInitialized>k__BackingField;
    /*0x28*/ System.Collections.Generic.List<AssetBundleType> assetBundleTypeList;
    /*0x30*/ System.Collections.Generic.List<ObjectPool> m_lisObjectPool;
    /*0x38*/ System.Collections.Generic.Dictionary<AssetBundleType, ObjectPool> m_dicObjectPool;
    /*0x40*/ ObjectPool m_Pool;
    /*0x48*/ ObjectPool.ObjectPoolPrefab m_PoolPrefab;

    /*0x2b555cc*/ ObjectPoolManager();
    /*0x2b54330*/ void AwakeInstance();
    /*0x2b54334*/ bool InitInstance();
    /*0x2b5433c*/ void ReleaseInstance();
    /*0x2b54340*/ void Destroy();
    /*0x2b5434c*/ bool get_IsInitialized();
    /*0x2b54354*/ void set_IsInitialized(bool value);
    /*0x2b54360*/ void Init();
    /*0x2b54874*/ UnityEngine.GameObject GetItem(string _sObjectName, AssetBundleType _eAssetBundleType);
    /*0x2b54a88*/ UnityEngine.GameObject GetItemNoSearchPool(string _sObjectName, AssetBundleType _eAssetBundleType);
    /*0x2b54960*/ UnityEngine.GameObject GetItem(string _sObjectName);
    T GetItem<T>(string _sObjectName);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, AssetBundleType _eAssetBundleType, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent);
    T GetItem<T>(string _sObjectName, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS);
    T GetItem<T>(string _sObjectName, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    T GetItem<T>(string _sObjectName, UnityEngine.Transform _parent, bool _bLocalPosition, UnityEngine.Vector3 _vecPOS, UnityEngine.Vector3 _vecScale);
    /*0x2b54b64*/ void ReturnItem(UnityEngine.GameObject _go, AssetBundleType _eAssetBundleType, bool _bDisable);
    /*0x2b54c0c*/ void ReturnItem(UnityEngine.GameObject _go, bool _bDisable);
    /*0x2b54d30*/ void ReturnItemDisableToUnused(UnityEngine.GameObject _go, AssetBundleType _eAssetBundleType);
    /*0x2b54dc4*/ void ReturnItemDisableToUnused(UnityEngine.GameObject _go);
    /*0x2b54ed4*/ void DeleteAllPoolItems(AssetBundleType _eAssetBundleType);
    /*0x2b54ff8*/ void DeleteAllItems();
    /*0x2b54668*/ void ReturnAllUsedItems();
    /*0x2b55100*/ void ReturnAllPoolItems(AssetBundleType _eAssetBundleType);
    /*0x2b55224*/ void ReturnPoolItemsWithSameName(AssetBundleType _eAssetBundleType, string _sObjectName);
    /*0x2b55338*/ void ReturnSameItems(string _sObjectName);
    /*0x2b55478*/ void ReturnSameItems(UnityEngine.GameObject _go);
    /*0x2b54770*/ void ReturnAllItemsDisableToUnused();
    /*0x2b554b0*/ void ReturnAllItemsDisableToUnused(AssetBundleType assetBundleType);
}

class ItemAmountBuyBase : GuiBase
{
    /*0x40*/ LocalizeString m_ItemAmount;
    /*0x48*/ ItemInfoSlot m_ItemSlot;
    /*0x50*/ AtlasImage m_CurrencyIcon;
    /*0x58*/ AtlasImage m_CurrencyButtonIcon;
    /*0x60*/ LocalizeString m_ItemPrice;
    /*0x68*/ LocalizeString m_UseCurrency;
    /*0x70*/ TableData.TableData_Item itemInfo;
    /*0x78*/ int nItemAmount;
    /*0x7c*/ PTShare.Define.Currency eCurrency;
    /*0x80*/ int nItemPrice;

    /*0x1574bc0*/ ItemAmountBuyBase();
    /*0x1574684*/ void OnCreate();
    /*0x1574688*/ void OnDelete();
    /*0x157468c*/ void OnEnter();
    /*0x15746f8*/ void OnFinish();
    /*0x15746fc*/ void OnLeave();
    /*0x1574700*/ void OnStart();
    /*0x1574704*/ void OnExit();
    /*0x1574780*/ void InitializePopup(int _nItemIndex, PTShare.Define.Currency _eCurrency, int _nPrice);
    /*0x15747c8*/ void InitializePopup(TableData.TableData_Item _item, PTShare.Define.Currency _eCurrency, int _nPrice);
    /*0x1574870*/ void SetItemSlot();
    /*0x1574888*/ void SetCurrencyIcon();
    /*0x1574978*/ void RefreshPrice();
    /*0x1574a2c*/ void InitAmount(int _amount);
    /*0x1574bb0*/ void SetAmount(int _amount);
    /*0x1574af4*/ void RefreshAmount();
    void OnClickBuyItem();
}

class RewardPopupBase : GuiBase
{
    /*0x40*/ ItemRewardGroup m_ItemRewardGroup;
    /*0x48*/ HeroRewardController m_HeroRewradController;
    /*0x50*/ TableRewardController m_TableRewardController;
    /*0x58*/ System.Action OnExitCallback;

    /*0x11a9e50*/ RewardPopupBase();
    /*0x11a9e58*/ void OnExit();
    /*0x11a9e94*/ void InitializePopup(PTShare.Define.SProperty _reward, bool _bScrollLimit, System.Action _exitCallback, ItemRewardBoxType[] _ignoreType);
    /*0x11a9fbc*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SHero> _rewrads, bool _bScrollLimit, System.Action _exitCallback);
    /*0x11aa034*/ void InitializePopup(System.Collections.Generic.List<Rewards> _rewards, bool _bCombine, bool _bScrollLimit, System.Action _exitCallback);
    /*0x11a9f1c*/ void SetActiveScrollView(bool _isReward, bool _isHero, bool _isTable);
}

class AdsPopup : GuiBase
{
    /*0x40*/ LocalizeString m_topText;
    /*0x48*/ AtlasImage m_topIcon;
    /*0x50*/ UnityEngine.GameObject m_finalRewardBtn;
    /*0x58*/ UnityEngine.GameObject m_finalRewardDisable;
    /*0x60*/ System.Collections.Generic.List<AdsRewardSlot> m_liRewardSlot;

    /*0xed970c*/ AdsPopup();
    /*0xed8e54*/ void OnCreate();
    /*0xed8e58*/ void OnDelete();
    /*0xed8e5c*/ void OnEnter();
    /*0xed8f98*/ void OnFinish();
    /*0xed8f9c*/ void OnLeave();
    /*0xed90d8*/ void OnStart();
    /*0xed90dc*/ void Release();
    /*0xed90e0*/ void Initialize();
    /*0xed95f4*/ void OnClick();

    class <>c
    {
        static /*0x0*/ AdsPopup.<> <>9;
        static /*0x8*/ System.Action<AdsRewardSlot> <>9__12_0;

        static /*0xd99bec*/ <>c();
        /*0xd99c4c*/ <>c();
        /*0xd99c54*/ void <Initialize>b__12_0(AdsRewardSlot x);
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ TableManager.Ads.AdsRewardType rewardType;

        /*0xd99c70*/ <>c__DisplayClass13_0();
        /*0xd99c78*/ void <OnClick>b__0();
    }
}

class ArenaListPopup : GuiBase
{
    /*0x40*/ ArenaCategoryEntity m_GeneralArena;
    /*0x48*/ ArenaCategoryEntity m_WorldArena;
    /*0x50*/ System.Collections.IEnumerator ieRefreshTimer;
    /*0x58*/ System.Collections.IEnumerator ieWorldArenaRefreshTimer;

    /*0xee4afc*/ ArenaListPopup();
    /*0xee416c*/ void OnCreate();
    /*0xee4170*/ void OnDelete();
    /*0xee4174*/ void OnEnter();
    /*0xee442c*/ void OnFinish();
    /*0xee4430*/ void OnLeave();
    /*0xee4528*/ void OnStart();
    /*0xee452c*/ void OnExit();
    /*0xee0c9c*/ void InitializePopup();
    /*0xee4778*/ void Initialize();
    /*0xee49cc*/ void StartTimer();
    /*0xee44dc*/ void StopCoroutines();
    /*0xee4a20*/ System.Collections.IEnumerator CoRefreshArena();
    /*0xee4a8c*/ System.Collections.IEnumerator CoRefreshWorldArena();
    /*0xee4af8*/ void HandlerUpdateEvent();
    /*0xee4b04*/ void <OnExit>b__10_0();

    class <>c
    {
        static /*0x0*/ ArenaListPopup.<> <>9;
        static /*0x8*/ System.Action <>9__15_0;
        static /*0x10*/ System.Action <>9__16_0;

        static /*0xd9a590*/ <>c();
        /*0xd9a5f0*/ <>c();
        /*0xd9a5f8*/ void <CoRefreshArena>b__15_0();
        /*0xd9a650*/ void <CoRefreshWorldArena>b__16_0();
    }

    class <CoRefreshArena>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ArenaListPopup <>4__this;

        /*0xd9a6a8*/ <CoRefreshArena>d__15(int <>1__state);
        /*0xd9a6d4*/ void System.IDisposable.Dispose();
        /*0xd9a6d8*/ bool MoveNext();
        /*0xd9a98c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9a994*/ void System.Collections.IEnumerator.Reset();
        /*0xd9a9d4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshWorldArena>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ArenaListPopup <>4__this;

        /*0xd9a9dc*/ <CoRefreshWorldArena>d__16(int <>1__state);
        /*0xd9aa08*/ void System.IDisposable.Dispose();
        /*0xd9aa0c*/ bool MoveNext();
        /*0xd9ac5c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9ac64*/ void System.Collections.IEnumerator.Reset();
        /*0xd9aca4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ArenaMatchPopup : GuiBase
{
    /*0x40*/ ScrollContent_GeneralArenaMatchEntity m_ScrollContent;
    /*0x48*/ AtlasImage m_TicketIcon;
    /*0x50*/ LocalizeString m_ItemAmount;
    /*0x58*/ UnityEngine.GameObject m_NoChallanger;
    /*0x60*/ LocalizeString m_Title;
    /*0x68*/ ArenaLimitNotice m_arenaLimitNotice;
    /*0x70*/ PTShare.Define.ArenaSubType eArenaCategoryType;

    /*0xee9250*/ ArenaMatchPopup();
    /*0xee84e0*/ System.Collections.Generic.List<PTShare.Define.SArenaTarget> get_liArenaTargets();
    /*0xee855c*/ TableData.TableData_Item get_TicketItem();
    /*0xee8648*/ void OnCreate();
    /*0xee864c*/ void OnDelete();
    /*0xee8650*/ void OnEnter();
    /*0xee8830*/ void OnFinish();
    /*0xee8834*/ void OnLeave();
    /*0xee8994*/ void OnStart();
    /*0xee8998*/ void OnExit();
    /*0xee8a14*/ void InitializePopup(PTShare.Define.ArenaSubType type);
    /*0xee8d40*/ void Initialize();
    /*0xee8dc0*/ void InitializeScroll();
    /*0xee8ef0*/ void HandlerScrollContent(int _index, GeneralArenaMatchEntity _obj);
    /*0xee8b78*/ void SetTitle();
    /*0xee8e20*/ void SetItemAmount();
    /*0xee8f84*/ void OnClick_ArenaReset();
    /*0xee9000*/ void OnClick_BuyItem();
    /*0xee8574*/ int GetArenaNeedItemID();
    /*0xee90c8*/ void HandlerBuyArenaTicket(int _nAmount);
    /*0xee924c*/ void CallbackBuyArenaTicket();
}

class ArenaRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GeneralArenaRecordEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_Title;
    /*0x50*/ LocalizeString m_EmptyText;
    /*0x58*/ ArenaLimitNotice m_arenaLimitNotice;
    /*0x60*/ PTShare.Define.ArenaSubType eArenaCategoryType;

    /*0xee9cd8*/ ArenaRecordPopup();
    /*0xee94e8*/ System.Collections.Generic.List<PTShare.Define.SArenaHistory> get_liArenaHistory();
    /*0xee9564*/ void OnCreate();
    /*0xee9568*/ void OnDelete();
    /*0xee956c*/ void OnEnter();
    /*0xee9820*/ void OnFinish();
    /*0xee9824*/ void OnLeave();
    /*0xee9a18*/ void OnStart();
    /*0xee9a1c*/ void OnExit();
    /*0xee0db8*/ void InitializePopup(PTShare.Define.ArenaSubType type);
    /*0xee9a98*/ void Initialize();
    /*0xee9a9c*/ void InitializeScroll();
    /*0xee9b40*/ void HandleSrcollContent(int _index, GeneralArenaRecordEntity _obj);
    /*0xee9bd4*/ void HandlerBuyArenaTicket(int _nAmount);
}

class ArenaTrainningPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_CurrencyTopWindow;
    /*0x48*/ TrainningStatusEntity m_MainStatusIcon;
    /*0x50*/ LocalizeString m_MainStatusName;
    /*0x58*/ System.Collections.Generic.List<TrainningStatusInfomation> m_liStatusView;
    /*0x60*/ ArenaTrainningProcess m_ArenaTrainningProcess;
    /*0x68*/ UnityEngine.UI.Button m_TrainningBtn;
    /*0x70*/ StartTrainningAnimation m_Animation;
    /*0x78*/ bool playingAnimation;

    /*0xeeae5c*/ ArenaTrainningPopup();
    /*0xeea318*/ int get_TrainingLv();
    /*0xeea398*/ int get_Groupindex();
    /*0xeea420*/ int get_Indivindex();
    /*0xeea4a8*/ void OnCreate();
    /*0xeea4ac*/ void OnDelete();
    /*0xeea4b0*/ void OnEnter();
    /*0xeea4f0*/ void OnFinish();
    /*0xeea4f4*/ void OnLeave();
    /*0xeea4f8*/ void OnStart();
    /*0xeea4fc*/ void OnExit();
    /*0xeea620*/ void InitializePopup();
    /*0xeea954*/ void SetStatusView(int groupCur, int indivCur);
    /*0xeeaa44*/ void OnClick_Trainning();
    /*0xeeacec*/ void OnClick_Help();
    /*0xeead90*/ TrainningStatusInfomation GetBeforeInfomation();
    /*0xeeaa10*/ bool IsMaxTrainning();

    class <>c__DisplayClass23_0
    {
        /*0x10*/ ArenaTrainningPopup <>4__this;
        /*0x18*/ int beforeIndex;
        /*0x20*/ System.Action <>9__2;
        /*0x28*/ System.Action <>9__1;

        /*0xd9cee4*/ <>c__DisplayClass23_0();
        /*0xd9ceec*/ void <OnClick_Trainning>b__0();
        /*0xd9cfc0*/ void <OnClick_Trainning>b__1();
        /*0xd9d0c8*/ void <OnClick_Trainning>b__2();
    }
}

class ArtifactChangePopup : GuiBase
{
    /*0x40*/ ScrollContent_ArtifactChangeEntity m_UseScrollContent;
    /*0x48*/ ScrollContent_ArtifactChangeEntity m_UnusedScrollContent;
    /*0x50*/ UnityEngine.GameObject m_NoArtifact;
    /*0x58*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggle;
    /*0x60*/ PTShare.Define.SHero heroInfo;
    /*0x68*/ System.Collections.Generic.List<TableData.TableData_Artifact> liUseArtifactInfo;
    /*0x70*/ System.Collections.Generic.List<TableData.TableData_Artifact> liUnusedArtifactInfo;

    /*0xeed50c*/ ArtifactChangePopup();
    /*0xeecb2c*/ void OnCreate();
    /*0xeecb30*/ void OnDelete();
    /*0xeecb34*/ void OnEnter();
    /*0xeecd14*/ void OnFinish();
    /*0xeecd18*/ void OnLeave();
    /*0xeece50*/ void OnStart();
    /*0xeece54*/ void InitializePopup(PTShare.Define.SHero hero);
    /*0xeed090*/ void InitializeToggle();
    /*0xeecff0*/ void InitializeScroll();
    /*0xeed2e0*/ void UsedScrollContent(int index, ArtifactChangeEntity ent);
    /*0xeed3b8*/ void UnusedScrollContent(int index, ArtifactChangeEntity ent);
    /*0xeed490*/ void SetActiveScroll(bool use, bool unuse);
    /*0xeed5a4*/ void <InitializePopup>b__13_0(TableData.TableData_Artifact x);
    /*0xeed66c*/ void <InitializeToggle>b__14_1(bool on);
    /*0xeed6f4*/ void <InitializeToggle>b__14_2(bool on);

    class <>c
    {
        static /*0x0*/ ArtifactChangePopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.UI.Toggle> <>9__14_0;

        static /*0xd9d210*/ <>c();
        /*0xd9d270*/ <>c();
        /*0xd9d278*/ void <InitializeToggle>b__14_0(UnityEngine.UI.Toggle x);
    }
}

class ArtifactInfomationPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnUnEquipEvent;
    /*0x40*/ ItemInfoSlot m_ItemInfoSlot;
    /*0x48*/ LocalizeString m_ItemName;
    /*0x50*/ LocalizeString m_ItemDesc;
    /*0x58*/ UnityEngine.UI.Button m_UpgradeButton;
    /*0x60*/ UnityEngine.UI.ScrollRect m_DescScroll;
    /*0x68*/ UnityEngine.RectTransform m_EffectDescParent;
    /*0x70*/ System.Collections.Generic.List<ArtifactPassiveDescEntity> m_liEffectDesc;
    /*0x78*/ UnityEngine.Transform m_StatusParent;
    /*0x80*/ UnityEngine.GameObject m_ButtonGroup;
    /*0x88*/ UnityEngine.GameObject m_ConfirmButton;
    /*0x90*/ TableData.TableData_Artifact artifactData;
    /*0x98*/ TableData.TableData_Equipment equipmentData;
    /*0xa0*/ PTShare.Define.SArtifact artifactInfo;
    /*0xa8*/ PTShare.Define.SHero heroInfo;
    /*0xb0*/ System.Collections.Generic.List<ArtifactStatusEntity> liStatusEntity;

    static /*0xeeeea0*/ ArtifactInfomationPopup();
    static /*0xeed78c*/ void add_OnUnEquipEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xeed880*/ void remove_OnUnEquipEvent(System.Action<PTShare.Define.SHero> value);
    /*0xeeee28*/ ArtifactInfomationPopup();
    /*0xeed77c*/ bool get_IsEquip();
    /*0xeed974*/ void OnCreate();
    /*0xeed978*/ void OnDelete();
    /*0xeed97c*/ void OnEnter();
    /*0xeed980*/ void OnFinish();
    /*0xeed984*/ void OnLeave();
    /*0xeed988*/ void OnStart();
    /*0xeed98c*/ void InitializePopup(PTShare.Define.SHero hero);
    /*0xeee108*/ void InitializePopup(TableData.TableData_Artifact artifact, PTShare.Define.SArtifact data);
    /*0xeeda18*/ void Release();
    /*0xeedb70*/ void SetArtifactConfig();
    /*0xeeeae8*/ void OnClick_Unequip();
    /*0xeeed1c*/ void OnClick_Upgrade();
    /*0xeeeda4*/ void OnClick_Change();
    /*0xeeea7c*/ System.Collections.IEnumerator CoDescScroll();

    class <>c
    {
        static /*0x0*/ ArtifactInfomationPopup.<> <>9;
        static /*0x8*/ System.Action<ArtifactStatusEntity> <>9__28_0;

        static /*0xd9d29c*/ <>c();
        /*0xd9d2fc*/ <>c();
        /*0xd9d304*/ void <Release>b__28_0(ArtifactStatusEntity x);
    }

    class <CoDescScroll>d__33 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ArtifactInfomationPopup <>4__this;

        /*0xd9d380*/ <CoDescScroll>d__33(int <>1__state);
        /*0xd9d3ac*/ void System.IDisposable.Dispose();
        /*0xd9d3b0*/ bool MoveNext();
        /*0xd9d45c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xd9d464*/ void System.Collections.IEnumerator.Reset();
        /*0xd9d4a4*/ object System.Collections.IEnumerator.get_Current();
    }
}

struct BattleGraph
{
    /*0x10*/ string sCombatPower;
    /*0x18*/ string Representative_nickName;
    /*0x20*/ System.Collections.Generic.List<Battle.BattleGraphValue> lisGraphValue;

    /*0xa855bc*/ BattleGraph(string _sCombatPower, string _Representative_nickName, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValue);
}

class BattleGraphPopup : GuiBase
{
    /*0x40*/ BattleGraphWindow m_GraphWindowAlly;
    /*0x48*/ BattleGraphWindow m_GraphWindowEnemy;
    /*0x50*/ LocalizeString m_MappointNameText;
    /*0x58*/ Battle.GameModeType m_eGameMode;
    /*0x60*/ long m_lSelectedPlayerID;
    /*0x68*/ bool m_bRepaly;
    /*0x70*/ string m_sMapPointName;
    /*0x78*/ int m_nBattleID;
    /*0x80*/ PTShare.Define.SGuildBossHistory m_GuildBossHistory;
    /*0x88*/ PTShare.Define.SArenaHistory m_ArenaHistory;

    static /*0xf8cba8*/ int GetRepresentativeUnitID(System.Collections.Generic.List<Battle.BattleGraphValue> _value, int _nBattleID);
    static /*0xf8cd88*/ string GetConvertUnitName(System.Collections.Generic.List<Battle.BattleGraphValue> _value, int _nBattleID);
    /*0xf8e9b0*/ BattleGraphPopup();
    /*0xf8bf90*/ void OnCreate();
    /*0xf8bf94*/ void OnDelete();
    /*0xf8bf98*/ void OnEnter();
    /*0xf8c000*/ void OnFinish();
    /*0xf8c004*/ void OnLeave();
    /*0xf8c008*/ void OnStart();
    /*0xf8c00c*/ void OnExit();
    /*0xf8c18c*/ void InitForCurrent(bool _bWin, bool _bReplay, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValueAlly, System.Collections.Generic.List<Battle.BattleGraphValue> _lisGraphValueEnemy);
    /*0xf8d510*/ void InitForSelectReplay(Battle.GameModeType _eGameMode, string _sMapPointName, int _nBattleID, long _lSelectedPlayerID, BattleGraph _WinnerbattleGraph, BattleGraph _loserbattleGraph);
    /*0xf8d844*/ void InitForGuildBoss(Battle.GameModeType _eGameMode, PTShare.Define.SGuildBossHistory _guildBossHistory, int _nBattleID, BattleGraph _WinnerbattleGraph, BattleGraph _loserbattleGraph);
    /*0xf8da18*/ void InitForArenaReplay(Battle.GameModeType _eType, bool _bWin, PTShare.Define.SArenaHistory _history);
    /*0xf8e048*/ void UpdateCampaignProfileAlly(PTShare.Define.SCampaignRecord _campaignUser);
    /*0xf8e14c*/ void UpdateTowerProfileAlly(PTShare.Define.STowerRecord _towerUser);
    /*0xf8e250*/ void StartReplay();
    /*0xf8e2d8*/ void ReplayCurrentStage();
    /*0xf8e340*/ void ReplayStage();
    /*0xf8c7a8*/ void SetMappointNameView(string _sMappointName, Battle.GameModeType _eGameMode);
    /*0xf8e9b8*/ void <ReplayStage>b__25_1(ServerProtocol.ResHardCampaignReplay response);
    /*0xf8ea70*/ void <ReplayStage>b__25_2(ServerProtocol.ResCampaignReplay response);
    /*0xf8eb28*/ void <ReplayStage>b__25_3(ServerProtocol.ResTowerReplay response);
    /*0xf8ebe0*/ void <ReplayStage>b__25_4(PTShare.Define.SGuildBossReplay sGuildBossReplay);
    /*0xf8ed10*/ void <ReplayStage>b__25_5(PTShare.Define.SGuildBossReplay sGuildBossReplay);
    /*0xf8ebe4*/ void <ReplayStage>g__PlayBossReplay|25_0(PTShare.Define.SGuildBossReplay replay);
}

class BattleGraphPopup_GuildWar : GuiBase
{
    /*0x40*/ BattleGraphWindow_GuildWar m_GraphWindowAlly;
    /*0x48*/ BattleGraphWindow_GuildWar m_GraphWindowEnemy;
    /*0x50*/ UnityEngine.GameObject m_goViewAllyActiveButton;
    /*0x58*/ UnityEngine.GameObject m_goViewEnemyActiveButton;
    /*0x60*/ UnityEngine.GameObject m_goViewAllyDisactiveButton;
    /*0x68*/ UnityEngine.GameObject m_goViewEnemyDisactiveButton;
    /*0x70*/ bool m_bCurrentViewAlly;
    /*0x71*/ bool m_bWin;
    /*0x72*/ bool m_bReplay;
    /*0x73*/ bool m_bAllyIsAttacker;

    /*0xe2f4ec*/ BattleGraphPopup_GuildWar();
    /*0xe2e7b4*/ void OnCreate();
    /*0xe2e7b8*/ void OnDelete();
    /*0xe2e7bc*/ void OnEnter();
    /*0xe2e828*/ void OnFinish();
    /*0xe2e82c*/ void OnLeave();
    /*0xe2e830*/ void OnStart();
    /*0xe2e834*/ void OnExit();
    /*0xe2e920*/ void Init(bool _bWin, bool _bReplay);
    /*0xe2ec4c*/ void InitGuildEmblem(int _nEmblemID, int _nGuildLevel, string _sGuildName, bool _bAlly);
    /*0xe2ece4*/ void StartReplay();
    /*0xe2ea08*/ void ViewButton(bool _bAlly);
    /*0xe2eeec*/ void ReplayCurrentStage();
    /*0xe2f450*/ void SelectReplay();
    /*0xe2f4f4*/ void <StartReplay>b__19_0(ServerProtocol.ResGuildWarReplay res);
}

class BattleGraphPopup_WorldBoss : BattleGraphPopup
{
    /*0xe2f62c*/ BattleGraphPopup_WorldBoss();
}

class BuffInfomationPopup : GuiBase
{
    /*0x40*/ AtlasImage[] m_BuffImages_1;
    /*0x48*/ AtlasImage[] m_BuffImages_2;
    /*0x50*/ AtlasImage[] m_BuffImages_3;
    /*0x58*/ AtlasImage[] m_BuffImages_4;
    /*0x60*/ AtlasImage[] m_BuffImages_5;
    /*0x68*/ AtlasImage[] m_BuffImages_6;
    /*0x70*/ AtlasImage[] m_BuffImages_7;
    /*0x78*/ AtlasImage[] m_BuffImages_8;
    /*0x80*/ AtlasImage[] m_BuffImages_9;
    /*0x88*/ LocalizeString[] m_BuffText_1;
    /*0x90*/ LocalizeString[] m_BuffText_2;
    /*0x98*/ LocalizeString[] m_BuffText_3;
    /*0xa0*/ LocalizeString[] m_BuffText_4;
    /*0xa8*/ LocalizeString[] m_BuffText_5;
    /*0xb0*/ LocalizeString[] m_BuffText_6;
    /*0xb8*/ LocalizeString[] m_BuffText_7;
    /*0xc0*/ LocalizeString[] m_BuffText_8;
    /*0xc8*/ LocalizeString[] m_BuffText_9;
    /*0xd0*/ int m_nIndex;

    /*0x16f221c*/ BuffInfomationPopup();
    /*0x16f1d34*/ void Init(Helper_FactionBuff.FactionBuffType _eFactionBuffType);
    /*0x16f1e78*/ void SetBuffImages(AtlasImage[] _images);
    /*0x16f1fc8*/ void SetBuffImageTextEnable(AtlasImage[] _arrImage, LocalizeString[] _arrText, int _nIndex, Helper_FactionBuff.FactionBuffType _eFactionBuffType);
    /*0x16f2120*/ void OnCreate();
    /*0x16f2124*/ void OnDelete();
    /*0x16f2128*/ void OnEnter();
    /*0x16f2194*/ void OnFinish();
    /*0x16f2198*/ void OnLeave();
    /*0x16f219c*/ void OnStart();
    /*0x16f21a0*/ void OnExit();
}

class BuyConfirmPaymentPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ ScrollContent_ItemInfoSlot m_scrollContent;
    /*0x50*/ System.Collections.Generic.List<Rewards> m_paymentList;
    /*0x58*/ System.Action<bool> OnConfirmCallback;
    /*0x60*/ ButtonSound m_ConfirmSound;
    /*0x64*/ ButtonSound m_CancelSound;

    /*0x1337548*/ BuyConfirmPaymentPopup();
    /*0x1336f84*/ void OnCreate();
    /*0x1336f88*/ void OnDelete();
    /*0x1336f8c*/ void OnEnter();
    /*0x1336ff8*/ void OnFinish();
    /*0x1336ffc*/ void OnLeave();
    /*0x1337000*/ void OnStart();
    /*0x13370d8*/ void OnExit();
    /*0x1337154*/ void InitalizeConfirm(string title, System.Collections.Generic.List<Rewards> payment, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x133729c*/ void BindEvent();
    /*0x1337004*/ void RemoveEvent();
    /*0x1337378*/ void HandleScrollContent(int index, ItemInfoSlot obj);
    /*0x1337434*/ void OnClick(bool _isConfirm);
}

class BuyConfirmPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ LocalizeString m_Description;
    /*0x50*/ AtlasImage m_Icon;
    /*0x58*/ LocalizeString m_HaveAmount;
    /*0x60*/ AtlasImage m_IconToTypeUse;
    /*0x68*/ LocalizeString m_cAmountToTypeUse;
    /*0x70*/ PTShare.Define.Currency m_eCurrencyType;
    /*0x78*/ long m_nAmount;
    /*0x80*/ System.Action<bool> OnConfirmCallback;
    /*0x88*/ ButtonSound m_ConfirmSound;
    /*0x8c*/ ButtonSound m_CancelSound;

    /*0x1337c74*/ BuyConfirmPopup();
    /*0x13375c0*/ void OnCreate();
    /*0x13375c4*/ void OnDelete();
    /*0x13375c8*/ void OnEnter();
    /*0x1337634*/ void OnFinish();
    /*0x1337638*/ void OnLeave();
    /*0x133763c*/ void OnStart();
    /*0x1337640*/ void OnExit();
    /*0x13376bc*/ void InitalizeConfirm(PTShare.Define.Currency _type, long _amount, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x1337b78*/ void OnClick(bool _isConfirm);
    /*0x1337c70*/ void OnClickCustom(bool _isConfirm);
}

class BuyConfirmPopup_GuildPoint : BuyConfirmPopup
{
    /*0x13380b0*/ BuyConfirmPopup_GuildPoint();
    /*0x1337c7c*/ void InitializeConfirm_GuildPoint(long _amount, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x1337dd0*/ void OnClickCustom(bool _isConfirm);
}

class BuyConfirmPopup_HeroIncreaseSlot : BuyConfirmPopup
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x90*/ long m_nNeedAmount;
    /*0x98*/ long m_nUseAmount;

    static /*0x13380b8*/ void add_OnConfirmEvent(System.Action value);
    static /*0x1338174*/ void remove_OnConfirmEvent(System.Action value);
    /*0x1338938*/ BuyConfirmPopup_HeroIncreaseSlot();
    /*0x1338230*/ void InitalizeSlotPopup();
    /*0x1338614*/ void OnClickCustom(bool _isConfirm);
    /*0x133882c*/ void CallbackOnConfirm();
    /*0x13385d8*/ void SetDescText(string _str, string[] _param);
    /*0x13385ec*/ void SetAmount(string _str);
    /*0x1338600*/ void SetUseAmount(string _str);
    /*0x13383ec*/ int GetNeedAmount();
    /*0x1338930*/ bool PossableIncreaseSlot();
    /*0x13388b0*/ int GetUnitSlotAmount();
    /*0x1338558*/ long GetCash();
}

class BuyConfirmPopup_IdleReward : BuyConfirmPopup
{
    /*0x90*/ LocalizeString m_cInitializationDesc;
    /*0x98*/ LocalizeString m_cRemainDesc;
    /*0xa0*/ int flowClearTimeTick;
    /*0xa8*/ System.Collections.IEnumerator IEProcessFlow;

    /*0x1339388*/ BuyConfirmPopup_IdleReward();
    /*0x1338940*/ void OnExit();
    /*0x1338a80*/ void InitalizeConfirm(PTShare.Define.Currency _type, long _amount, System.Action<bool> _result, ButtonSound confirmSound, ButtonSound cancelSound);
    /*0x1338c40*/ void SetRemainTime(System.TimeSpan _remainTime);
    /*0x1338c08*/ void SetLocalizebyIdleReward();
    /*0x1338c98*/ System.Collections.IEnumerator IE_ProcessFlowFime(System.TimeSpan _remainTime);
    /*0x1338a50*/ void ReleaseCourtine();
    /*0x1338d10*/ void HandleOnDailyChange();
    /*0x1338f90*/ void OnClickCustom(bool _isConfirm);

    class <IE_ProcessFlowFime>d__8 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ BuyConfirmPopup_IdleReward <>4__this;
        /*0x28*/ System.TimeSpan _remainTime;

        /*0xda5584*/ <IE_ProcessFlowFime>d__8(int <>1__state);
        /*0xda55b0*/ void System.IDisposable.Dispose();
        /*0xda55b4*/ bool MoveNext();
        /*0xda57d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xda57e0*/ void System.Collections.IEnumerator.Reset();
        /*0xda5820*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass11_0
    {
        /*0x10*/ BuyConfirmPopup_IdleReward <>4__this;
        /*0x18*/ bool _isConfirm;

        /*0xda54b4*/ <>c__DisplayClass11_0();
        /*0xda54bc*/ void <OnClickCustom>b__0(bool _result);
    }
}

class BuySkinConfirmPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_UseParent;
    /*0x48*/ AtlasImage m_UseMaterialIcon;
    /*0x50*/ AtlasImage m_NeedMaterialIcon;
    /*0x58*/ LocalizeString m_UseAmount;
    /*0x60*/ LocalizeString m_NeedAmount;
    /*0x68*/ LocalizeString m_Desc;
    /*0x70*/ UnityEngine.UI.Button m_MoveBtn;
    /*0x78*/ UnityEngine.UI.Button m_BuyBtn;
    /*0x80*/ TableData.TableData_Unitbase unitInfo;
    /*0x88*/ TableData.TableData_Skinbasic skinInfo;
    /*0x90*/ Rewards rewardInfo;
    /*0x158*/ System.Action<bool> onClickCallback;

    /*0x133a01c*/ BuySkinConfirmPopup();
    /*0x1339390*/ void OnCreate();
    /*0x1339394*/ void OnEnter();
    /*0x1339398*/ void OnStart();
    /*0x133939c*/ void OnFinish();
    /*0x13393a0*/ void OnLeave();
    /*0x13393a4*/ void OnDelete();
    /*0x13393a8*/ void OnExit();
    /*0x1339424*/ void InitializePopup(TableData.TableData_Unitbase unit, System.Action<bool> callback);
    /*0x1339ad8*/ void Release();
    /*0x1339b00*/ void OnClick_Move();
    /*0x1339c34*/ void OnClick_Buy();
    /*0x1339fac*/ void OnBuyCallback();
    /*0x133a024*/ void <OnClick_Move>b__21_0();
}

class ChannelSelectPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_AllToggle;
    /*0x48*/ UnityEngine.UI.Toggle m_BestToggle;
    /*0x50*/ ChannelAllChannelView m_ChannelAllView;
    /*0x58*/ ChannelBestChannelView m_ChannelBestView;
    /*0x60*/ bool m_isPlayTabSound;

    /*0xd6f1e4*/ ChannelSelectPopup();
    /*0xd6ee1c*/ void OnCreate();
    /*0xd6ee20*/ void OnDelete();
    /*0xd6ee24*/ void OnEnter();
    /*0xd6ef04*/ void OnFinish();
    /*0xd6ef08*/ void OnLeave();
    /*0xd6ef0c*/ void OnStart();
    /*0xd6ef10*/ void OnExit();
    /*0xd6efa0*/ void InitializePopup();
    /*0xd6f02c*/ void InitializeToggle();
    /*0xd6f178*/ void SetActiveView(bool bAll, bool bBest);
    /*0xd6f1ec*/ void <InitializeToggle>b__13_0(bool isOn);
    /*0xd6f2ac*/ void <InitializeToggle>b__13_1(bool isOn);
}

class ChapterStoryPopup : GuiBase
{
    static /*0x0*/ System.Action OnNextChapterEvent;
    /*0x40*/ LocalizeString m_ChapterName;
    /*0x48*/ LocalizeString m_ChapterDescription;
    /*0x50*/ UnityEngine.UI.Image m_ChapterImage;
    /*0x58*/ UnityEngine.GameObject m_UnableParent;
    /*0x60*/ UnityEngine.GameObject m_EnableParent;
    /*0x68*/ UnityEngine.GameObject m_NextChapterButton;
    /*0x70*/ UnityEngine.GameObject m_emptyRewardText;
    /*0x78*/ UnityEngine.GameObject m_hardmode;
    /*0x80*/ ScrollContent_ItemReward m_scrollContent;
    /*0x88*/ UnityEngine.GameObject m_autoAddReward;
    /*0x90*/ int m_nChapterID;
    /*0x98*/ TableData.TableData_Chapter m_ChapterInfo;
    /*0xa0*/ TableData.TableData_Hardchapter m_HardChapterInfo;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Item> m_itemRewardList;
    /*0xb0*/ System.Collections.Generic.List<int> m_equipGradeList;

    static /*0xd7175c*/ ChapterStoryPopup();
    static /*0xd704ac*/ void add_OnNextChapterEvent(System.Action value);
    static /*0xd705a0*/ void remove_OnNextChapterEvent(System.Action value);
    /*0xd716a4*/ ChapterStoryPopup();
    /*0xd7042c*/ bool get_IsHard();
    /*0xd70694*/ void OnCreate();
    /*0xd70698*/ void OnDelete();
    /*0xd706fc*/ void OnEnter();
    /*0xd70700*/ void OnFinish();
    /*0xd70704*/ void OnLeave();
    /*0xd707d8*/ void OnStart();
    /*0xd707dc*/ void OnExit();
    /*0xd6fcfc*/ void InitializePopup(int _chapterid);
    /*0xd70858*/ void SetStatusView();
    /*0xd70db0*/ void SetRewardView();
    /*0xd71264*/ void OnClickNextChapter();
    /*0xd71400*/ void CallbackProtocolNextChapter();
    /*0xd714d0*/ void HandleScrollContent(int index, ItemRewardBox obj);
    /*0xd715fc*/ ItemReward ConvertRewards(TableData.TableData_Item data);
}

class ChatChangeChannelPopup : GuiBase
{
    /*0x40*/ ScrollContent_ChatChangeChannelEntity m_ScrollContent;
    /*0x48*/ int nChannelIdx;
    /*0x4c*/ int nMaxChannelIdx;

    /*0x132a46c*/ ChatChangeChannelPopup();
    /*0x1329fb8*/ void OnCreate();
    /*0x1329fbc*/ void OnDelete();
    /*0x1329fc0*/ void OnEnter();
    /*0x1329fc4*/ void OnFinish();
    /*0x1329fc8*/ void OnLeave();
    /*0x1329fcc*/ void OnStart();
    /*0x1329fd0*/ void InitializePopup();
    /*0x132a0f8*/ void Initialize(int nChannelIndex, int nMaxChannelIndex);
    /*0x132a100*/ void InitializeScroll();
    /*0x132a1b4*/ void HandlerScrollContent(int index, ChatChangeChannelEntity ent);
    /*0x132a0cc*/ void Release();
}

class ClearPopup : GuiBase
{
    /*0x40*/ Spine.Unity.SkeletonGraphic m_title;
    /*0x48*/ string m_titleIntro;
    /*0x50*/ string m_titleIdle;
    /*0x58*/ TableRewardController m_rewardController;
    /*0x60*/ LocalizeString m_desc;
    /*0x68*/ System.Collections.Generic.List<Rewards> m_rewardList;

    /*0x10df754*/ ClearPopup();
    /*0x10df358*/ void OnCreate();
    /*0x10df35c*/ void OnDelete();
    /*0x10df360*/ void OnEnter();
    /*0x10df364*/ void OnExit();
    /*0x10df36c*/ void OnFinish();
    /*0x10df370*/ void OnLeave();
    /*0x10df374*/ void OnStart();
    /*0x10df378*/ void InitPopup(string desc, System.Collections.Generic.List<Rewards> rewards);
    /*0x10df3b0*/ void SetTitle();
    /*0x10df500*/ void SetDesc(string desc);
    /*0x10df640*/ void SetReward();
    /*0x10df668*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x10df748*/ void OnClickNext();
}

class ClickMessagePopup : GuiBase
{
    static /*0x0*/ bool m_bInitialized;
    /*0x40*/ UnityEngine.RectTransform m_RectParent;
    /*0x48*/ LocalizeString m_Text;

    static /*0x10dfa04*/ ClickMessagePopup();
    /*0x10df9fc*/ ClickMessagePopup();
    /*0x10df804*/ void OnCreate();
    /*0x10df808*/ void OnDelete();
    /*0x10df80c*/ void OnEnter();
    /*0x10df810*/ void OnFinish();
    /*0x10df814*/ void OnLeave();
    /*0x10df818*/ void OnStart();
    /*0x10df81c*/ void OnExit();
    /*0x10df890*/ void Initialize(string _sText, UnityEngine.Vector3 _vPosition);
    /*0x10df968*/ void Update();
}

class ClickMessagePopup_GuildWarScore : ClickMessagePopup
{
    /*0x10dfa08*/ ClickMessagePopup_GuildWarScore();
}

enum StoryType
{
    HELP = 0,
    STORY = 1,
    ROLE = 2,
}

class CommonStoryPopup : GuiBase
{
    /*0x40*/ LocalizeString m_cTitle;
    /*0x48*/ LocalizeString m_cLocalizeString;
    /*0x50*/ UnityEngine.UI.Toggle m_HelpToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_StoryToggle;
    /*0x60*/ UnityEngine.UI.Toggle m_RoleToggle;
    /*0x68*/ string m_strHelpKey;
    /*0x70*/ string m_strStoryKey;
    /*0x78*/ string m_strRoleKey;
    /*0x80*/ bool m_isPlayingSound;
    /*0x88*/ System.Collections.Generic.Dictionary<int, System.String[]> liArgs;

    /*0x10e529c*/ CommonStoryPopup();
    /*0x10e45a8*/ void Init(TableData.TableData_Contenthelp _contentHelp, string[] helpargs, string[] storyargs, string[] roleargs);
    /*0x10e48a8*/ void InitializeToggle();
    /*0x10e4a5c*/ void OnClick_Help();
    /*0x10e4cc8*/ void OnClick_Story();
    /*0x10e4f34*/ void OnClick_Role();
    /*0x10e51a0*/ void OnCreate();
    /*0x10e51a4*/ void OnEnter();
    /*0x10e5210*/ void OnStart();
    /*0x10e5214*/ void OnFinish();
    /*0x10e5218*/ void OnLeave();
    /*0x10e521c*/ void OnDelete();
    /*0x10e5220*/ void OnExit();
    /*0x10e5334*/ void <InitializeToggle>b__11_0(bool isOn);
    /*0x10e5340*/ void <InitializeToggle>b__11_1(bool isOn);
    /*0x10e534c*/ void <InitializeToggle>b__11_2(bool isOn);
}

class CommunityPopup : GuiBase
{
    /*0x40*/ UnityEngine.RectTransform m_ParentRect;
    /*0x48*/ UnityEngine.RectTransform m_CommunityParentRect;
    /*0x50*/ System.Collections.Generic.List<CommunityButtonEntity> m_liCommunityEntity;
    /*0x58*/ float m_fHeightOffest;

    /*0x10e5c08*/ CommunityPopup();
    /*0x10e5780*/ void OnCreate();
    /*0x10e5784*/ void OnDelete();
    /*0x10e5788*/ void OnEnter();
    /*0x10e578c*/ void OnFinish();
    /*0x10e5790*/ void OnLeave();
    /*0x10e5794*/ void OnStart();
    /*0x10e5798*/ void OnExit();
    /*0x10e5814*/ void InitializePopup();

    class <>c
    {
        static /*0x0*/ CommunityPopup.<> <>9;
        static /*0x8*/ System.Action<CommunityButtonEntity> <>9__11_0;

        static /*0x106f1f0*/ <>c();
        /*0x106f250*/ <>c();
        /*0x106f258*/ void <InitializePopup>b__11_0(CommunityButtonEntity x);
    }
}

class ConditionBattleInfomationPopup : GuiBase
{
    /*0x40*/ LocalizeString m_titleText;
    /*0x48*/ LocalizeString m_descText;
    /*0x50*/ LocalizeString m_cpText;
    /*0x58*/ HeroSlotMaze[] m_heroMazes;
    /*0x60*/ ScrollContent_StageReward m_scrollContentStageReward;
    /*0x68*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_rewardList;
    /*0x78*/ Battle.GameModeType m_gameModeType;
    /*0x80*/ System.Action m_exitCallBack;

    /*0x10e7774*/ ConditionBattleInfomationPopup();
    /*0x10e5c68*/ void OnCreate();
    /*0x10e5c6c*/ void OnDelete();
    /*0x10e5c70*/ void OnEnter();
    /*0x10e5d4c*/ void OnFinish();
    /*0x10e5d50*/ void OnLeave();
    /*0x10e5d54*/ void OnStart();
    /*0x10e5d58*/ void OnExit();
    /*0x10e5f5c*/ void InitPopup(string titleKey, string infoKey, System.Collections.Generic.List<Rewards> rewardList, System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList, Battle.GameModeType gameModeType, System.Action exitCallBack);
    /*0x10e6728*/ void InitPopup(string titleKey, string infoKey, PTShare.Define.SProperty reward, System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList, Battle.GameModeType gameModeType, System.Action exitCallBack);
    /*0x10e6050*/ void SetStageTitle(string titleKey);
    /*0x10e613c*/ void SetStageInfo(string infoKey);
    /*0x10e6228*/ void SetCP(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0x10e6338*/ void InitOtherTeams(System.Collections.Generic.List<PTShare.Define.SConditionHero> enemyList);
    /*0x10e6ce8*/ void OnClick_BattleStart();
    /*0x10e67cc*/ void InitRewardSetting(PTShare.Define.SProperty _rewards);
    /*0x10e7508*/ void HandlerTableStageReward(int _index, ItemTableRewardSlot _instance);
    /*0x10e6f98*/ void AddRewardCurrency(PTShare.Define.Currency currencyType, long amount);
    /*0x10e704c*/ void AddRewardItem(int tableId, long amount);
    /*0x10e7128*/ void AddRewardEquip(int tableId, long amount);
    /*0x10e7220*/ void AddRewardArtifact(int tableId, long amount);
    /*0x10e7338*/ void AddRewardSkin(int tableId, long amount);
    /*0x10e7420*/ void AddRewardHero(int tableId, long amount);
    /*0x10e6e4c*/ void AddRewardResetPoint(string name, long amount);
    /*0x10e75c4*/ void AddRewardDungeonItem(int id, long amount);
    /*0x10e7698*/ void AddFrameDecorate(ProfileSkinType type, int id);
}

class ConditionHeroListPopup : GuiBase
{
    /*0x40*/ ScrollContent_HeroSlotMaze m_scrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<ConditionHeroData> m_heroDataList;
    /*0x58*/ Battle.GameModeType m_gameModeType;
    /*0x60*/ System.Action m_exitCallBack;

    /*0x10e83c0*/ ConditionHeroListPopup();
    /*0x10e7c34*/ void OnCreate();
    /*0x10e7c38*/ void OnDelete();
    /*0x10e7c3c*/ void OnEnter();
    /*0x10e7d80*/ void OnFinish();
    /*0x10e7d84*/ void OnLeave();
    /*0x10e7e4c*/ void OnStart();
    /*0x10e7e50*/ void OnExit();
    /*0x10e7ee8*/ void InitPopup(System.Collections.Generic.List<ConditionHeroData> conditionHeroList, Battle.GameModeType gameModeType, System.Action exitCallBack);
    /*0x10e7f1c*/ void ShowScrollContent();
    /*0x10e7ff0*/ void HandleScrollContent(int index, HeroSlotMaze obj);
    /*0x10e8240*/ void HandleCallBack(PTShare.Define.SHero sHero);
    /*0x10e7cb4*/ void BindEvent();
    /*0x10e7d88*/ void DeleteEvent();

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ConditionHeroListPopup <>4__this;
        /*0x18*/ int index;

        /*0x106f288*/ <>c__DisplayClass14_0();
        /*0x106f290*/ void <HandleScrollContent>b__0();
    }
}

class ConfirmButtonPopup : GuiBase
{
    /*0x40*/ LocalizeString m_confirm;
    /*0x48*/ LocalizeString m_cancel;
    /*0x50*/ System.Action<bool> m_callBack;

    /*0x10e8928*/ ConfirmButtonPopup();
    /*0x10e85a8*/ void OnCreate();
    /*0x10e85ac*/ void OnEnter();
    /*0x10e85b0*/ void OnStart();
    /*0x10e85b4*/ void OnFinish();
    /*0x10e85b8*/ void OnLeave();
    /*0x10e85bc*/ void OnDelete();
    /*0x10e85c0*/ void OnExit();
    /*0x10e862c*/ void InitPopup(string confirm, string cancel, System.Action<bool> callBack);
    /*0x10e87d0*/ void OnClickConfirm();
    /*0x10e887c*/ void OnClickCancel();
}

class ConfirmPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ButtonCancel;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ LocalizeString m_ConfirmBtnText;
    /*0x58*/ LocalizeString m_CancelBtnText;
    /*0x60*/ LocalizeString m_ConfirmMessage;
    /*0x68*/ UnityEngine.UI.Image m_Dot;
    /*0x70*/ UnityEngine.Vector2[] m_MessageSizeList;
    /*0x78*/ bool m_EnableCancel;
    /*0x79*/ bool m_IsExitBackground;
    /*0x80*/ System.Action<bool> m_OnClickButton;

    /*0x10e902c*/ ConfirmPopup();
    /*0x10e8930*/ void OnCreate();
    /*0x10e8934*/ void OnEnter();
    /*0x10e8938*/ void OnStart();
    /*0x10e893c*/ void OnLeave();
    /*0x10e8940*/ void OnDelete();
    /*0x10e8944*/ void OnFinish();
    /*0x10e8948*/ void Init(System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0x10e8bd4*/ void SetText(LocalizeString _str, string _key);
    /*0x10e8dcc*/ void SetActiveCancelButton(bool _enable);
    /*0x10e8eb0*/ void SetActiveDotLine(bool _enable);
    /*0x10e8e14*/ void ChangeSizeMessageBox(bool _enable);
    /*0x10e8cc8*/ string GetLocalizeStr(string _key);
    /*0x10e8ef8*/ void OnConfirm();
    /*0x10e8fa0*/ void OnCancel();
    /*0x10e9000*/ void OnExit();
    /*0x10e9014*/ void OnExitBackground();
}

class ContentUnlockMessagePopup : GuiBase
{
    /*0x40*/ LocalizeString m_contentText;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_title;
    /*0x50*/ ParticleBase m_titleEffect;
    /*0x58*/ UnityEngine.GameObject m_parent;
    /*0x60*/ System.Collections.Generic.Queue<string> qUnlockList;
    /*0x68*/ string strKey;
    /*0x70*/ bool bIsDelay;

    /*0xf4c668*/ ContentUnlockMessagePopup();
    /*0xf4c148*/ void OnCreate();
    /*0xf4c14c*/ void OnDelete();
    /*0xf4c150*/ void OnEnter();
    /*0xf4c154*/ void OnFinish();
    /*0xf4c158*/ void OnLeave();
    /*0xf4c15c*/ void OnStart();
    /*0xf4c160*/ void OnExit();
    /*0xf4c1fc*/ void InitializePopup(string _result, string _sKey, float _fDelay);
    /*0xf4c2a8*/ void InitializePopup(System.Collections.Generic.Queue<string> _result, string _sKey, float _fDelay);
    /*0xf4c370*/ System.Collections.IEnumerator CoDelay(float _fDelay);
    /*0xf4c170*/ void Initialize();
    /*0xf4c3ec*/ void SetView(string _content);

    class <CoDelay>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fDelay;
        /*0x28*/ ContentUnlockMessagePopup <>4__this;

        /*0x1073f5c*/ <CoDelay>d__16(int <>1__state);
        /*0x1073f88*/ void System.IDisposable.Dispose();
        /*0x1073f8c*/ bool MoveNext();
        /*0x1074058*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1074060*/ void System.Collections.IEnumerator.Reset();
        /*0x10740a0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class CreditPopup : GuiBase
{
    /*0xf4cee0*/ CreditPopup();
    /*0xf4ce4c*/ void OnCreate();
    /*0xf4ce50*/ void OnDelete();
    /*0xf4ce54*/ void OnEnter();
    /*0xf4ce58*/ void OnFinish();
    /*0xf4ce5c*/ void OnLeave();
    /*0xf4ce60*/ void OnStart();
    /*0xf4ce64*/ void OnExit();
}

class EquipChangePopup : GuiBase
{
    /*0x40*/ ScrollContent_EquipChangeEntity m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemBox;
    /*0x50*/ LocalizeString m_EquipName;
    /*0x58*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x60*/ LocalizeString m_TotalPower;
    /*0x68*/ UnityEngine.GameObject m_UnusedEquip;
    /*0x70*/ UnityEngine.GameObject m_UsedEquip;
    /*0x78*/ LocalizeString m_emptyText;
    /*0x80*/ PTShare.Define.SHero m_HeroInfo;
    /*0x88*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x90*/ System.Collections.Generic.List<EquipSetItem> m_liEquipItem;
    /*0x98*/ System.Collections.Generic.List<HeroEquipSet> m_liEquipSet;
    /*0xa0*/ int nEquipCount;
    /*0xa4*/ int nEquipSetCount;
    /*0xa8*/ int nArrIndex;

    /*0x14bb628*/ EquipChangePopup();
    /*0x14ba9a8*/ void OnCreate();
    /*0x14ba9ac*/ void OnDelete();
    /*0x14ba9b0*/ void OnEnter();
    /*0x14bab18*/ void OnFinish();
    /*0x14bab1c*/ void OnLeave();
    /*0x14babf0*/ void OnStart();
    /*0x14babf4*/ void InitializePopup(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip, PTShare.Define.EquipParts _equipParts);
    /*0x14bb0f0*/ void InitializeScroll();
    /*0x14bb4f4*/ void HandlerScrollContent(int _index, EquipChangeEntity _obj);
    /*0x14bb1d8*/ void SetActiveEquipInfo(bool _used);
    /*0x14bb22c*/ void SetEquipInfo();
}

class EquipDedicateInfomationPopup : GuiBase
{
    /*0x14bb87c*/ EquipDedicateInfomationPopup();
    /*0x14bb864*/ void OnCreate();
    /*0x14bb868*/ void OnDelete();
    /*0x14bb86c*/ void OnEnter();
    /*0x14bb870*/ void OnFinish();
    /*0x14bb874*/ void OnLeave();
    /*0x14bb878*/ void OnStart();
}

class EquipDedicateUpgradePopup : GuiBase
{
    /*0x14bb89c*/ EquipDedicateUpgradePopup();
    /*0x14bb884*/ void OnCreate();
    /*0x14bb888*/ void OnDelete();
    /*0x14bb88c*/ void OnEnter();
    /*0x14bb890*/ void OnFinish();
    /*0x14bb894*/ void OnLeave();
    /*0x14bb898*/ void OnStart();
}

class EquipInfomationPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SEquip> OnUnEquipEvent;
    /*0x40*/ LocalizeString m_EquipName;
    /*0x48*/ LocalizeString m_EquipDesc;
    /*0x50*/ LocalizeString m_EquipGrade;
    /*0x58*/ LocalizeString m_EquipTotalPower;
    /*0x60*/ LocalizeString m_EquipTypeName;
    /*0x68*/ LocalizeString m_FactionTypeName;
    /*0x70*/ LocalizeString m_FactionBonus;
    /*0x78*/ UnityEngine.UI.Outline m_EquipGradeOutline;
    /*0x80*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x88*/ AtlasImage m_FactionIcon;
    /*0x90*/ AtlasImage m_EquipTypeIcon;
    /*0x98*/ StatusInfomationSubWindow m_EquipmentStatusWindow;
    /*0xa0*/ StatusInfomationSubWindow m_EquipmentStatusLongWindow;
    /*0xa8*/ ItemInfoSlot m_ItemBox;
    /*0xb0*/ UnityEngine.GameObject m_FactionInfo;
    /*0xb8*/ UnityEngine.GameObject m_BottomButtonGrid;
    /*0xc0*/ UnityEngine.GameObject m_PromoteButton;
    /*0xc8*/ UnityEngine.GameObject m_ResetButton;
    /*0xd0*/ UnityEngine.GameObject m_TopButtonGrid;
    /*0xd8*/ UnityEngine.GameObject m_ConfirmButton;
    /*0xe0*/ UnityEngine.UI.Button m_UpgradeButton;
    /*0xe8*/ UnityEngine.GameObject m_UpgradeRedDot;
    /*0xf0*/ TooltipData_Faction m_TooltipFaction;
    /*0xf8*/ TooltipData_IconDesc m_TooltipEquipType;
    /*0x100*/ UnityEngine.RectTransform m_StatusTransform;
    /*0x108*/ UnityEngine.UI.ScrollRect m_DescriptionScroll;
    /*0x110*/ Battle.CharacterStat m_EquipStat;
    /*0x118*/ PTShare.Define.SHero m_HeroInfo;
    /*0x120*/ TableData.TableData_Equipment m_TableEquipInfo;
    /*0x128*/ PTShare.Define.SEquip m_UserEquipInfo;
    /*0x130*/ TableData.TableData_Unitgradelv m_GradeLvInfo;
    /*0x138*/ bool m_bIsSameFaction;

    static /*0x14be310*/ EquipInfomationPopup();
    static /*0x14bb8a4*/ void add_OnUnEquipEvent(System.Action<PTShare.Define.SEquip> value);
    static /*0x14bb998*/ void remove_OnUnEquipEvent(System.Action<PTShare.Define.SEquip> value);
    /*0x14be308*/ EquipInfomationPopup();
    /*0x14bba8c*/ void OnCreate();
    /*0x14bba90*/ void OnDelete();
    /*0x14bbaf4*/ void OnEnter();
    /*0x14bc294*/ void OnFinish();
    /*0x14bc298*/ void OnLeave();
    /*0x14bc414*/ void OnStart();
    /*0x14bc418*/ void OnExit();
    /*0x14bc494*/ void InitializePopup(PTShare.Define.SHero _hero, TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, bool playsfx);
    /*0x14bd004*/ void InitializePopup(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user);
    /*0x14bd0c4*/ void InitializePopup(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, int _heroFactionID);
    /*0x14bc554*/ void InitializeUI(TableData.TableData_Equipment _table, PTShare.Define.SEquip _user, bool _isInfo);
    /*0x14bd5d0*/ void OnClickUpgrade();
    /*0x14bda7c*/ void OnClickUnEquip();
    /*0x14bdb58*/ void OnClickTrade();
    /*0x14bdc40*/ void OnClickReset();
    /*0x14bddc4*/ void OnClickAdvence();
    /*0x14bd198*/ string GetEquipmentCP(int _index, int _level, bool _isbouns);
    /*0x14bd1c4*/ bool IsShowReddot(int maxGrade);
    /*0x14be260*/ void HandlerChangeEquipInfomation(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14be2b4*/ void HandlerPromoteEquipInfomation(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14bd564*/ System.Collections.IEnumerator CoUpdateScroll();

    class <CoUpdateScroll>d__55 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipInfomationPopup <>4__this;

        /*0x1098158*/ <CoUpdateScroll>d__55(int <>1__state);
        /*0x1098184*/ void System.IDisposable.Dispose();
        /*0x1098188*/ bool MoveNext();
        /*0x10981e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10981f0*/ void System.Collections.IEnumerator.Reset();
        /*0x1098230*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipPromotePopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> OnPromoteEvent;
    /*0x40*/ ItemInfoSlot m_ItemInfo;
    /*0x48*/ UnityEngine.Transform m_MaterialParent;
    /*0x50*/ LocalizeString m_EquipName;
    /*0x58*/ UnityEngine.UI.Outline m_EquipNameOutline;
    /*0x60*/ LocalizeString m_BeforePower;
    /*0x68*/ LocalizeString m_AfterPower;
    /*0x70*/ System.Collections.Generic.List<EquipPromoteStatusEntity> m_liStatusEntity;
    /*0x78*/ UnityEngine.GameObject m_StatusGrid;
    /*0x80*/ UnityEngine.GameObject m_MaxNotice;
    /*0x88*/ UnityEngine.UI.Button m_PromoteButton;
    /*0x90*/ ParticleBase m_MagicEffect;
    /*0x98*/ TableData.TableData_Equipment m_EquipTableInfo;
    /*0xa0*/ TableData.TableData_Equipment m_EquipAdvanceInfo;
    /*0xa8*/ PTShare.Define.SEquip m_EquipUserInfo;
    /*0xb0*/ PTShare.Define.SHero m_HeroInfo;
    /*0xb8*/ System.Collections.Generic.List<Rewards> m_liMaterialInfo;
    /*0xc0*/ string m_RequireCost;
    /*0xc8*/ bool m_bIsPlayingUpgrade;
    /*0xd0*/ System.Collections.IEnumerator m_ieAnimate;

    static /*0x14c05a0*/ EquipPromotePopup();
    static /*0x14bc1a0*/ void add_OnPromoteEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    static /*0x14bbec4*/ void remove_OnPromoteEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    /*0x14c0528*/ EquipPromotePopup();
    /*0x14bf77c*/ void OnCreate();
    /*0x14bf780*/ void OnDelete();
    /*0x14bf7e4*/ void OnEnter();
    /*0x14bf85c*/ void OnFinish();
    /*0x14bf860*/ void OnLeave();
    /*0x14bf864*/ void OnStart();
    /*0x14bf868*/ void OnExit();
    /*0x14bde8c*/ void InitializePopup(PTShare.Define.SHero _hero, TableData.TableData_Equipment _table, PTShare.Define.SEquip _equip);
    /*0x14bf91c*/ void InitializeStatusList();
    /*0x14bfcbc*/ void SetMaterials();
    /*0x14c023c*/ void OnConfirm();
    /*0x14c0390*/ void CallbackPromoteEquip(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0x14c0454*/ void StartAnimate(System.Action _finish);
    /*0x14c04b0*/ System.Collections.IEnumerator CoAnimate(System.Action _finish);
    /*0x14bf7f0*/ void SetActiveUpgradeEffect(bool _bIsPlay);
    /*0x14bf8f8*/ bool IsMaxAdvanceEquipment();

    class <>c
    {
        static /*0x0*/ EquipPromotePopup.<> <>9;
        static /*0x8*/ System.Comparison<EquipPromoteStatusEntity> <>9__30_0;

        static /*0x109953c*/ <>c();
        /*0x109959c*/ <>c();
        /*0x10995a4*/ int <InitializeStatusList>b__30_0(EquipPromoteStatusEntity a, EquipPromoteStatusEntity b);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;
        /*0x18*/ PTShare.Define.SEquip _equip;
        /*0x20*/ EquipPromotePopup <>4__this;

        /*0x1099640*/ <>c__DisplayClass33_0();
        /*0x1099648*/ void <CallbackPromoteEquip>b__0();
    }

    class <CoAnimate>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipPromotePopup <>4__this;
        /*0x28*/ System.Action _finish;
        /*0x30*/ PTShare.Define.SEquip <_before>5__2;

        /*0x109972c*/ <CoAnimate>d__35(int <>1__state);
        /*0x1099758*/ void System.IDisposable.Dispose();
        /*0x109975c*/ bool MoveNext();
        /*0x1099934*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109993c*/ void System.Collections.IEnumerator.Reset();
        /*0x109997c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipResetPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> OnChangeFactionEvent;
    /*0x40*/ ItemInfoSlot m_ItemBox;
    /*0x48*/ System.Collections.Generic.List<HeroPropertySlot> m_liPropertySlot;
    /*0x50*/ UnityEngine.GameObject m_CancelBtn;
    /*0x58*/ UnityEngine.GameObject m_ConfirmBtn;
    /*0x60*/ LocalizeString m_CancelLocalize;
    /*0x68*/ LocalizeString m_ConfirmLocalize;
    /*0x70*/ UnityEngine.GameObject m_MaterialParent;
    /*0x78*/ AtlasImage m_MaterialIcon;
    /*0x80*/ LocalizeString m_MaterialAmount;
    /*0x88*/ PTShare.Define.SEquip m_EquipInfo;
    /*0x90*/ System.Collections.IEnumerator m_ieAnimation;
    /*0x98*/ bool m_bIsPlayingAnimation;
    /*0x99*/ bool m_bIsPlayReset;
    /*0xa0*/ Rewards m_MaterialInfo;

    static /*0x14c20c0*/ EquipResetPopup();
    static /*0x14bbfb8*/ void add_OnChangeFactionEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    static /*0x14bbcdc*/ void remove_OnChangeFactionEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    /*0x14c20b8*/ EquipResetPopup();
    /*0x14c0da4*/ void OnCreate();
    /*0x14c0da8*/ void OnDelete();
    /*0x14c0e0c*/ void OnEnter();
    /*0x14c0e10*/ void OnFinish();
    /*0x14c0e14*/ void OnLeave();
    /*0x14c0e18*/ void OnStart();
    /*0x14c0e1c*/ void OnExit();
    /*0x14bdcc4*/ void InitializePopup(PTShare.Define.SEquip _equip);
    /*0x14c183c*/ void OnClickCancel();
    /*0x14c1b80*/ void OnClickExit();
    /*0x14c1b8c*/ void OnClickConfirm();
    /*0x14c1ffc*/ void CallbackResetFactionBonus(int _factionid);
    /*0x14c1184*/ void InitializeSlot(int _factionid);
    /*0x14c1310*/ void SetActiveButton(bool _cancelbtn, bool _confirmbtn);
    /*0x14c1360*/ void SetLocalizeButton(string _cancel, string _confirm);
    /*0x14c150c*/ void SetMaterial();
    /*0x14c177c*/ void StartAnimation(int _factionid);
    /*0x14c203c*/ System.Collections.IEnumerator CoAnimation(int _factionid);
    /*0x14c1d50*/ bool IsVaildRequireItem();
    /*0x14c20c4*/ void <OnExit>b__23_0(bool confirm);
    /*0x14c20f8*/ void <OnClickCancel>b__25_0(bool confirm);

    class <CoAnimation>d__34 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipResetPopup <>4__this;
        /*0x28*/ int _factionid;

        /*0x1099984*/ <CoAnimation>d__34(int <>1__state);
        /*0x10999b0*/ void System.IDisposable.Dispose();
        /*0x10999b4*/ bool MoveNext();
        /*0x1099a4c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1099a54*/ void System.Collections.IEnumerator.Reset();
        /*0x1099a94*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipUpgradePopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> OnUpgradeEquipEvent;
    /*0x40*/ ScrollContent_UpgradeEquipSlot m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemInfo;
    /*0x50*/ StatusInfomationSubWindow m_StatusWindow;
    /*0x58*/ LocalizeString m_BeforeLevelText;
    /*0x60*/ LocalizeString m_AfterLevelText;
    /*0x68*/ LocalizeString m_ExperienceText;
    /*0x70*/ UnityEngine.UI.Slider m_ExperienceSlider;
    /*0x78*/ LocalizeString m_EquipName;
    /*0x80*/ UnityEngine.UI.Outline m_EquipNameOutColor;
    /*0x88*/ LocalizeString m_TotalPower;
    /*0x90*/ LocalizeString m_PriceText;
    /*0x98*/ LocalizeString m_emptyText;
    /*0xa0*/ AtlasImage[] m_arrBackStar;
    /*0xa8*/ AtlasImage[] m_arrFrontStar;
    /*0xb0*/ ParticleBase[] m_arrStarParticles;
    /*0xb8*/ ParticleBase m_levelUpParticle;
    /*0xc0*/ AtlasImage m_fadeOutImage;
    /*0xc8*/ TableData.TableData_Equipment m_TableInfo;
    /*0xd0*/ PTShare.Define.SEquip m_EquipInfo;
    /*0xd8*/ PTShare.Define.SHero m_HeroInfo;
    /*0xe0*/ TableData.TableData_Enhanceequip m_EnhanceInfo;
    /*0xe8*/ System.Collections.Generic.List<int> m_liExpInfo;
    /*0xf0*/ Battle.CharacterStat m_EquipStat;
    /*0xf8*/ int m_curLevel;
    /*0xfc*/ int m_curExp;
    /*0x100*/ int m_curGold;
    /*0x108*/ long m_curPower;
    /*0x110*/ System.Collections.Generic.List<PTShare.Define.SItem> m_liScrollItem;
    /*0x118*/ System.Collections.Generic.List<EquipSetItem> m_liScrolEquipment;
    /*0x120*/ System.Collections.Generic.Dictionary<int, System.ValueTuple<bool, int>> m_dicItemAmount;
    /*0x128*/ UpgradeEquipSlot _curSlot;
    /*0x130*/ PTShare.Define.SItem _curSItem;
    /*0x138*/ EquipSetItem _curEquipItem;
    /*0x150*/ int _curIndex;
    /*0x158*/ UnityEngine.Coroutine m_sliderCoroutine;

    static /*0x14c507c*/ EquipUpgradePopup();
    static /*0x14bc0ac*/ void add_OnUpgradeEquipEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    static /*0x14bbdd0*/ void remove_OnUpgradeEquipEvent(System.Action<PTShare.Define.SHero, PTShare.Define.SEquip> value);
    /*0x14c4f44*/ EquipUpgradePopup();
    /*0x14c235c*/ void OnCreate();
    /*0x14c2360*/ void OnDelete();
    /*0x14c245c*/ void OnEnter();
    /*0x14c2818*/ void OnFinish();
    /*0x14c281c*/ void OnLeave();
    /*0x14c2a98*/ void OnStart();
    /*0x14c2a9c*/ void OnExit();
    /*0x14bd65c*/ void InitializePopup(PTShare.Define.SHero _hero, TableData.TableData_Equipment _equip, PTShare.Define.SEquip _user, int _nStar);
    /*0x14c2f20*/ void InitializeScroll(int _selectindex);
    /*0x14c3008*/ void HandlerScrollContent(int _index, UpgradeEquipSlot _obj);
    /*0x14c2b94*/ void Release();
    /*0x14c2c28*/ void SetStatusView();
    /*0x14c3288*/ void ClearInsertExperienceInfo();
    /*0x14c39e4*/ void SetEquipmentStatus();
    /*0x14c3804*/ void SetActiveStar();
    /*0x14c32b8*/ void RefreshText(float refreshTime);
    /*0x14c3bb0*/ void SetExperience(int _index, int _amount, int _exp, int _gold);
    /*0x14c3228*/ bool IsItem(int _nIndex);
    /*0x14c4028*/ void OnUpgrade();
    /*0x14c472c*/ void OnFastSelect();
    /*0x14c4c54*/ void CallbackReinforce(PTShare.Define.SEquip _equip);
    /*0x14c4d78*/ void HandlerSelectEquip(int _index, int _equipExp, int _equipGold);
    /*0x14c46a0*/ bool IsConditionUpgrade();
    /*0x14c4b68*/ bool IsConditionSelectItemLimit(int _exp);
    /*0x14c2984*/ void ResetEffectCoroutineData();
    /*0x14c3b20*/ System.Collections.IEnumerator CoSliderProgress(float oldPer, float newPer, float playTime);
    /*0x14c4bd8*/ System.Collections.IEnumerator CoRefreshText(int oldLevel);
    /*0x14c3718*/ System.Collections.IEnumerator CoTotalPowerTextEffect(long start, long end);
    /*0x14c3798*/ System.Collections.IEnumerator CoTotalPowerScaleEffect();
    /*0x14c2b18*/ System.Collections.IEnumerator CoEquipmentIconScaleEffect(int starAmount);
    /*0x14c4ec8*/ System.Collections.IEnumerator CoEquipmentIconFadeOutEffect(float speed);
    /*0x14c3ab4*/ System.Collections.IEnumerator CoStopParticle(ParticleBase target);
    /*0x14c26a0*/ void CleanEffectData();

    class <>c
    {
        static /*0x0*/ EquipUpgradePopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SItem> <>9__45_0;
        static /*0x10*/ System.Predicate<EquipSetItem> <>9__45_1;

        static /*0x1099a9c*/ <>c();
        /*0x1099afc*/ <>c();
        /*0x1099b04*/ bool <InitializePopup>b__45_0(PTShare.Define.SItem x);
        /*0x1099bac*/ bool <InitializePopup>b__45_1(EquipSetItem x);
    }

    class <>c__DisplayClass56_0
    {
        /*0x10*/ System.Collections.Generic.KeyValuePair<int, System.ValueTuple<bool, int>> _val;

        /*0x1099bd0*/ <>c__DisplayClass56_0();
        /*0x1099bd8*/ bool <OnUpgrade>b__0(PTShare.Define.SItem x);
        /*0x1099c38*/ bool <OnUpgrade>b__1(EquipSetItem x);
    }

    class <>c__DisplayClass56_1
    {
        /*0x10*/ EquipSetItem _item;
        /*0x28*/ System.Predicate<PTShare.Define.SEquip> <>9__2;

        /*0x1099c90*/ <>c__DisplayClass56_1();
        /*0x1099c98*/ bool <OnUpgrade>b__2(PTShare.Define.SEquip y);
    }

    class <CoSliderProgress>d__63 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float playTime;
        /*0x28*/ EquipUpgradePopup <>4__this;
        /*0x30*/ float newPer;
        /*0x34*/ float oldPer;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;

        /*0x109a328*/ <CoSliderProgress>d__63(int <>1__state);
        /*0x109a354*/ void System.IDisposable.Dispose();
        /*0x109a358*/ bool MoveNext();
        /*0x109a4a0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a4a8*/ void System.Collections.IEnumerator.Reset();
        /*0x109a4e8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoRefreshText>d__64 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ int oldLevel;
        /*0x28*/ EquipUpgradePopup <>4__this;

        /*0x109a0cc*/ <CoRefreshText>d__64(int <>1__state);
        /*0x109a0f8*/ void System.IDisposable.Dispose();
        /*0x109a0fc*/ bool MoveNext();
        /*0x109a2d8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a2e0*/ void System.Collections.IEnumerator.Reset();
        /*0x109a320*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTotalPowerTextEffect>d__65 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ long end;
        /*0x28*/ long start;
        /*0x30*/ EquipUpgradePopup <>4__this;
        /*0x38*/ float <t>5__2;
        /*0x3c*/ float <speed>5__3;
        /*0x40*/ long <lerpValue>5__4;

        /*0x109a85c*/ <CoTotalPowerTextEffect>d__65(int <>1__state);
        /*0x109a888*/ void System.IDisposable.Dispose();
        /*0x109a88c*/ bool MoveNext();
        /*0x109a9e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a9e8*/ void System.Collections.IEnumerator.Reset();
        /*0x109aa28*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoTotalPowerScaleEffect>d__66 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipUpgradePopup <>4__this;
        /*0x28*/ float <t>5__2;
        /*0x2c*/ float <speed>5__3;

        /*0x109a638*/ <CoTotalPowerScaleEffect>d__66(int <>1__state);
        /*0x109a664*/ void System.IDisposable.Dispose();
        /*0x109a668*/ bool MoveNext();
        /*0x109a80c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a814*/ void System.Collections.IEnumerator.Reset();
        /*0x109a854*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconScaleEffect>d__67 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipUpgradePopup <>4__this;
        /*0x28*/ int starAmount;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ float <speed>5__3;

        /*0x1099e64*/ <CoEquipmentIconScaleEffect>d__67(int <>1__state);
        /*0x1099e90*/ void System.IDisposable.Dispose();
        /*0x1099e94*/ bool MoveNext();
        /*0x109a07c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a084*/ void System.Collections.IEnumerator.Reset();
        /*0x109a0c4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoEquipmentIconFadeOutEffect>d__68 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ EquipUpgradePopup <>4__this;
        /*0x28*/ float speed;
        /*0x2c*/ float <t>5__2;
        /*0x30*/ UnityEngine.Color <color>5__3;

        /*0x1099cf0*/ <CoEquipmentIconFadeOutEffect>d__68(int <>1__state);
        /*0x1099d1c*/ void System.IDisposable.Dispose();
        /*0x1099d20*/ bool MoveNext();
        /*0x1099e14*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1099e1c*/ void System.Collections.IEnumerator.Reset();
        /*0x1099e5c*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoStopParticle>d__69 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ParticleBase target;

        /*0x109a4f0*/ <CoStopParticle>d__69(int <>1__state);
        /*0x109a51c*/ void System.IDisposable.Dispose();
        /*0x109a520*/ bool MoveNext();
        /*0x109a5e8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x109a5f0*/ void System.Collections.IEnumerator.Reset();
        /*0x109a630*/ object System.Collections.IEnumerator.get_Current();
    }
}

class EquipUpgradeResultPopup : GuiBase
{
    /*0x40*/ ItemInfoSlot m_ItemBox;
    /*0x48*/ LocalizeString m_BeforePower;
    /*0x50*/ LocalizeString m_AfterPower;
    /*0x58*/ System.Collections.Generic.List<EquipPromoteStatusEntity> m_liStatusEntity;
    /*0x60*/ TableData.TableData_Equipment m_BeforeTableInfo;
    /*0x68*/ TableData.TableData_Equipment m_AfterTableInfo;
    /*0x70*/ PTShare.Define.SEquip m_BeforeInfo;
    /*0x78*/ PTShare.Define.SEquip m_AfterInfo;
    /*0x80*/ int nFactionIndex;

    /*0x114bc48*/ EquipUpgradeResultPopup();
    /*0x114b684*/ void OnCreate();
    /*0x114b688*/ void OnDelete();
    /*0x114b68c*/ void OnEnter();
    /*0x114b690*/ void OnFinish();
    /*0x114b694*/ void OnLeave();
    /*0x114b698*/ void OnStart();
    /*0x114b69c*/ void OnExit();
    /*0x114b718*/ void InitializePopup(int _factionid, PTShare.Define.SEquip _before, PTShare.Define.SEquip _after);
    /*0x114b8ac*/ void InitializeStatusList();

    class <>c
    {
        static /*0x0*/ EquipUpgradeResultPopup.<> <>9;
        static /*0x8*/ System.Comparison<EquipPromoteStatusEntity> <>9__17_0;

        static /*0x109aa30*/ <>c();
        /*0x109aa90*/ <>c();
        /*0x109aa98*/ int <InitializeStatusList>b__17_0(EquipPromoteStatusEntity a, EquipPromoteStatusEntity b);
    }
}

enum FriendManageType
{
    NONE = 0,
    BLACKLIST = 1,
    SEARCH = 2,
    INVITE = 3,
}

class FriendManagePopup : GuiBase
{
    /*0x40*/ LocalizeString m_TitleText;
    /*0x48*/ LocalizeString m_AmountTitleText;
    /*0x50*/ LocalizeString m_AmountText;
    /*0x58*/ LocalizeString m_EmptySearchListText;
    /*0x60*/ LocalizeString m_EmptyBlackOrRequestListText;
    /*0x68*/ ScrollContent_FriendManageEntity m_ScrollContent_FriendBlackOrRequest;
    /*0x70*/ ScrollContent_FriendManageEntity m_ScrollContent_SearchList;
    /*0x78*/ UnityEngine.GameObject m_SearchInputParent;
    /*0x80*/ UnityEngine.UI.InputField m_SearchField;
    /*0x88*/ UnityEngine.GameObject m_BlackOrRequestParent;
    /*0x90*/ UnityEngine.GameObject m_SearchListParent;
    /*0x98*/ System.Collections.Generic.List<FriendManagePopup.FriendToggle> m_liFriendToggle;
    /*0xa0*/ FriendManageType m_eTapType;
    /*0xa4*/ bool m_isPlayingSound;

    /*0x11e1f14*/ FriendManagePopup();
    /*0x11e04e0*/ System.Collections.Generic.List<PTShare.Define.SFriend> get_m_curFriendList();
    /*0x11e0560*/ System.Collections.Generic.List<PTShare.Define.SPlayer> get_m_curInviteList();
    /*0x11e05e0*/ System.Collections.Generic.List<PTShare.Define.SPlayer> get_m_curBlackList();
    /*0x11e0660*/ System.Collections.Generic.List<PTShare.Define.SSearchPlayer> get_m_curSearchList();
    /*0x11e06e0*/ void OnCreate();
    /*0x11e06e4*/ void OnDelete();
    /*0x11e06e8*/ void OnEnter();
    /*0x11e0ac8*/ void OnFinish();
    /*0x11e0acc*/ void OnLeave();
    /*0x11e0d70*/ void OnStart();
    /*0x11e0d74*/ void OnExit();
    /*0x11df1e8*/ void InitializePopup(FriendManageType _tapType);
    /*0x11e0bd4*/ void ClearEvent();
    /*0x11e0888*/ void RemoveInputField();
    /*0x11e0df0*/ void SetActiveContent(bool _isSearchList);
    /*0x11e0e58*/ void SetViewContents(FriendManageType _eType);
    /*0x11e090c*/ void InitializeToggle();
    /*0x11e19a4*/ void OnSearchPlayer();
    /*0x11e1c74*/ void CallbackProtocolSearch();
    /*0x11e1758*/ void InitializeScroll();
    /*0x11e1c9c*/ void HandlerScrollContent_FriendSearch(int _index, FriendManageEntity _obj);
    /*0x11e1d2c*/ void HandlerScrollContent_FriendRequest(int _index, FriendManageEntity _obj);
    /*0x11e1dbc*/ void HandlerScrollContent_BlackList(int _index, FriendManageEntity _obj);
    /*0x11e1e4c*/ void HandlerChangeFriendState();
    /*0x11e1e74*/ void HandleToggleContent();
    /*0x11e1f24*/ bool <InitializePopup>b__30_0(FriendManagePopup.FriendToggle x);

    class FriendToggle
    {
        /*0x10*/ FriendManageType type;
        /*0x18*/ UnityEngine.UI.Toggle toggle;

        /*0x10a0808*/ FriendToggle();
    }

    class <>c__DisplayClass35_0
    {
        /*0x10*/ FriendManageType _type;
        /*0x18*/ FriendManagePopup <>4__this;

        /*0x10a063c*/ <>c__DisplayClass35_0();
        /*0x10a0644*/ void <InitializeToggle>b__0(bool isOn);
    }
}

class FriendPopup : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ LocalizeString m_TitleText;
    /*0x48*/ UnityEngine.UI.Toggle m_FriendToggle;
    /*0x50*/ UnityEngine.UI.Toggle m_SoldierToggle;
    /*0x58*/ FriendGenericWindow m_FriendWindow;
    /*0x60*/ FriendMercenaryWindow m_SoldierWindow;
    /*0x68*/ FriendSortType m_eSortType;
    /*0x6c*/ bool m_isPlayingSound;
    /*0x6d*/ bool m_isSelectFriendTab;

    static /*0x10a49b8*/ FriendPopup();
    static /*0x10a4290*/ void add_OnExitEvent(System.Action value);
    static /*0x10a4384*/ void remove_OnExitEvent(System.Action value);
    /*0x10a49a8*/ FriendPopup();
    /*0x10a4208*/ System.Collections.Generic.List<PTShare.Define.SFriend> get_m_curFriendList();
    /*0x10a4478*/ void OnCreate();
    /*0x10a447c*/ void OnEnter();
    /*0x10a44e8*/ void OnStart();
    /*0x10a44ec*/ void OnFinish();
    /*0x10a44f0*/ void OnLeave();
    /*0x10a4568*/ void OnDelete();
    /*0x10a45cc*/ void OnExit();
    /*0x10a46a0*/ void InitializePopup();
    /*0x10a471c*/ void InitializeToggle();
    /*0x10a487c*/ void SetActiveContents(bool _friend, bool _soldier);
    /*0x10a48e8*/ void OnClick_Help();
    /*0x10a49bc*/ void <OnExit>b__19_0();
    /*0x10a4a38*/ void <InitializeToggle>b__21_0(bool isOn);
    /*0x10a4c64*/ void <InitializeToggle>b__21_2();
    /*0x10a4d80*/ void <InitializeToggle>b__21_1(bool isOn);
}

class FurnitureDismissConfirmPopup : GuiBase
{
    /*0x40*/ ItemRewardGroup m_rewardGroup;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHousingObj> objList;
    /*0x50*/ PTShare.Define.SProperty rewards;
    /*0x58*/ System.Action onCallBack;

    /*0x10a80c0*/ FurnitureDismissConfirmPopup();
    /*0x10a7c58*/ void OnCreate();
    /*0x10a7c5c*/ void OnDelete();
    /*0x10a7c60*/ void OnEnter();
    /*0x10a7c64*/ void OnFinish();
    /*0x10a7c68*/ void OnLeave();
    /*0x10a7c6c*/ void OnStart();
    /*0x10a7c70*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SHousingObj> list, System.Action onConfirm);
    /*0x10a7fd8*/ void OnClick_Confirm();
    /*0x10a8124*/ void <OnClick_Confirm>b__11_0();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<Rewards>> configRewardMap;
        /*0x18*/ FurnitureDismissConfirmPopup <>4__this;

        /*0x10a3194*/ <>c__DisplayClass10_0();
        /*0x10a319c*/ void <InitializePopup>b__0(PTShare.Define.SHousingObj x);
    }

    class <>c__DisplayClass10_1
    {
        /*0x10*/ float addValue;
        /*0x18*/ FurnitureDismissConfirmPopup.<> CS$<>8__locals1;

        /*0x10a332c*/ <>c__DisplayClass10_1();
        /*0x10a3334*/ void <InitializePopup>b__1(Rewards y);
    }
}

class GachaDismissSelectPopup : GuiBase
{
    /*0x40*/ HeroSlot[] m_dismissSlots;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_tableList;
    /*0x50*/ System.Collections.Generic.List<bool> m_selectList;
    /*0x58*/ System.Action<System.Collections.Generic.List<int>> m_callBack;

    /*0x10bce90*/ GachaDismissSelectPopup();
    /*0x10bc784*/ void OnCreate();
    /*0x10bc788*/ void OnDelete();
    /*0x10bc78c*/ void OnEnter();
    /*0x10bc790*/ void OnFinish();
    /*0x10bc794*/ void OnLeave();
    /*0x10bc798*/ void OnStart();
    /*0x10bc79c*/ void OnExit();
    /*0x10bc818*/ void InitPopup(System.Action<System.Collections.Generic.List<int>> callback);
    /*0x10bcacc*/ void HandleClickEvent(TableData.TableData_Unitbase tableData);
    /*0x10bcd20*/ void OnClickSelect();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ TableData.TableData_Unitbase tableData;

        /*0xf65538*/ <>c__DisplayClass12_0();
        /*0xf65540*/ bool <HandleClickEvent>b__0(TableData.TableData_Unitbase f);
    }
}

class GachaPercentPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<GachaPercentDesc> m_liPercentDesc;
    /*0x48*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x50*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x58*/ string[] m_arrGrade;
    /*0x60*/ string[] m_arrPercent;
    /*0x68*/ GachaFactionType m_factionType;

    /*0xec2288*/ GachaPercentPopup();
    /*0xec1da4*/ void OnCreate();
    /*0xec1da8*/ void OnDelete();
    /*0xec1dac*/ void OnEnter();
    /*0xec1e18*/ void OnFinish();
    /*0xec1e1c*/ void OnLeave();
    /*0xec1e20*/ void OnStart();
    /*0xec1e24*/ void OnExit();
    /*0xec1ea0*/ void InitializePopup(TableData.TableData_Gacha _base);
    /*0xec1f5c*/ void SettingPercentDesc();
    /*0xec221c*/ System.Collections.IEnumerator CoSettingScrollSize();

    class <CoSettingScrollSize>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaPercentPopup <>4__this;

        /*0xf66904*/ <CoSettingScrollSize>d__15(int <>1__state);
        /*0xf66930*/ void System.IDisposable.Dispose();
        /*0xf66934*/ bool MoveNext();
        /*0xf66a84*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf66a8c*/ void System.Collections.IEnumerator.Reset();
        /*0xf66acc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaPropertyPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<GachaPropertyCard> m_liPropertyCard;
    /*0x48*/ int m_nSelectProperty;
    /*0x50*/ TableData.TableData_Gacha m_GachaInfo;
    /*0x58*/ int _nCurProperty;
    /*0x5c*/ int _nChangeProperty;

    /*0xec42d4*/ GachaPropertyPopup();
    /*0xec3c3c*/ void OnCreate();
    /*0xec3cac*/ void OnDelete();
    /*0xec3cb0*/ void OnEnter();
    /*0xec3d9c*/ void OnFinish();
    /*0xec3da0*/ void OnLeave();
    /*0xec3e58*/ void OnStart();
    /*0xec3e5c*/ void InitializePopup();
    /*0xec3e68*/ void InitializePropertyCard();
    /*0xec3f6c*/ void OnClickConfirm();
    /*0xec40c8*/ void HandlerSelectCard(int _type);
    /*0xec41ac*/ void CallbackConfirmCard(string[] _args);
}

class GachaResultPopup : GuiBase
{
    static /*0x0*/ System.Action OnExitEvent;
    /*0x40*/ System.Collections.Generic.List<GachaResultCard> m_liGachaCard;
    /*0x48*/ UnityEngine.GameObject m_BackButton;
    /*0x50*/ GachaPriceButton m_RetryButton;
    /*0x58*/ UnityEngine.GameObject m_OpenButton;
    /*0x60*/ UnityEngine.GameObject m_SkipButton;
    /*0x68*/ UnityEngine.GameObject m_ShareButton;
    /*0x70*/ UnityEngine.GameObject m_GetButton;
    /*0x78*/ Spine.Unity.SkeletonGraphic m_gachaEffectSkel;
    /*0x80*/ GachaEpicEventProcess m_EpicEventProcess;
    /*0x88*/ bool m_bIsSingle;
    /*0x89*/ bool m_bIsProperty;
    /*0x8c*/ int m_index;
    /*0x90*/ int m_nFactionID;
    /*0x94*/ int m_nCardCount;
    /*0x98*/ int m_nGachaCount;
    /*0xa0*/ TableData.TableData_Gacha m_gachaTableData;
    /*0xa8*/ System.Collections.IEnumerator m_ieAnimation;
    /*0xb0*/ PTShare.Define.SProperty m_dismissReward;

    static /*0xec733c*/ GachaResultPopup();
    /*0xec7334*/ GachaResultPopup();
    /*0xec5cdc*/ void OnCreate();
    /*0xec5ce0*/ void OnDelete();
    /*0xec5ce4*/ void OnEnter();
    /*0xec5ce8*/ void OnFinish();
    /*0xec5cec*/ void OnLeave();
    /*0xec5cf0*/ void OnStart();
    /*0xec5cf4*/ void OnExit();
    /*0xec4248*/ void InitializeResult();
    /*0xec33d4*/ void InitializeResult(int _index, TableData.TableData_Gacha _base, bool _isSingle, int _type, bool _isProperty);
    /*0xec5d88*/ void SettingEffect();
    /*0xec5ff4*/ void SettingCard();
    /*0xec65d0*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0xec5f00*/ void SetActiveButton(bool _backbtn, bool _openbtn, bool _retrybtn, bool _skipbtn, bool _getbtn);
    /*0xec6904*/ void OnClickFastOpen();
    /*0xec69f4*/ void OnClickSkipButton();
    /*0xec699c*/ void StartAnimation(bool _onlyEpicSound);
    /*0xec6db8*/ void StopAnimation();
    /*0xec6de8*/ System.Collections.IEnumerator CoAnimation(bool _onlyEpicSound);
    /*0xec6e68*/ void OnClickShare();
    /*0xec6e94*/ System.Collections.IEnumerator CoShare();
    /*0xec6ef0*/ void CallbackOpenCard(bool _isEpic);
    /*0xec71c8*/ bool IsOpenReview(System.Action cb);
    /*0xec732c*/ GachaEpicEventProcess GetEventProcess();
    /*0xec6538*/ string GetParamsIndex(string _arg);
    /*0xec64e0*/ bool IsParamsItem(string _arg);
    /*0xec7340*/ void <CallbackOpenCard>b__39_0();

    class <>c__DisplayClass29_0
    {
        /*0x10*/ System.Collections.Generic.List<Rewards> configReward;
        /*0x18*/ GachaResultPopup <>4__this;

        /*0xf66c48*/ <>c__DisplayClass29_0();
        /*0xf66c50*/ void <SettingCard>g__AddAutoDissmiss|0(int heroId);
        /*0xf66d6c*/ void <SettingCard>b__1(Rewards y);
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ bool isPlayItemSound;
        /*0x11*/ bool isPlayRareSound;
        /*0x12*/ bool isEpicSound;

        /*0xf66de0*/ <>c__DisplayClass33_0();
        /*0xf66de8*/ void <OnClickSkipButton>b__1(GachaResultCard x);
    }

    class <>c
    {
        static /*0x0*/ GachaResultPopup.<> <>9;
        static /*0x8*/ System.Predicate<GachaResultCard> <>9__33_0;
        static /*0x10*/ System.Action <>9__39_2;
        static /*0x18*/ System.Action <>9__39_1;

        static /*0xf66ad4*/ <>c();
        /*0xf66b34*/ <>c();
        /*0xf66b3c*/ bool <OnClickSkipButton>b__33_0(GachaResultCard x);
        /*0xf66b98*/ void <CallbackOpenCard>b__39_2();
        /*0xf66bf0*/ void <CallbackOpenCard>b__39_1();
    }

    class <>c__DisplayClass36_0
    {
        /*0x10*/ GachaResultPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<bool> <>9__0;

        /*0xf66e64*/ <>c__DisplayClass36_0();
        /*0xf66e6c*/ bool <CoAnimation>b__0();
    }

    class <CoAnimation>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaResultPopup <>4__this;
        /*0x28*/ GachaResultPopup.<> <>8__1;
        /*0x30*/ bool _onlyEpicSound;
        /*0x34*/ int <length>5__2;

        /*0xf66ef0*/ <CoAnimation>d__36(int <>1__state);
        /*0xf66f1c*/ void System.IDisposable.Dispose();
        /*0xf66f20*/ bool MoveNext();
        /*0xf67220*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67228*/ void System.Collections.IEnumerator.Reset();
        /*0xf67268*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoShare>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf67270*/ <CoShare>d__38(int <>1__state);
        /*0xf6729c*/ void System.IDisposable.Dispose();
        /*0xf672a0*/ bool MoveNext();
        /*0xf67500*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67508*/ void System.Collections.IEnumerator.Reset();
        /*0xf67548*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaSelectPopup : GuiBase
{
    static /*0x0*/ System.Action<int> OnSelectEvent;
    /*0x40*/ System.Collections.Generic.List<GachaLimitCard> m_liPropertyCard;
    /*0x48*/ int m_nSelectProperty;
    /*0x50*/ System.Collections.IEnumerator m_IECardUpdate;

    static /*0xec8b64*/ GachaSelectPopup();
    static /*0xec7a20*/ void add_OnSelectEvent(System.Action<int> value);
    static /*0xec792c*/ void remove_OnSelectEvent(System.Action<int> value);
    /*0xec8b54*/ GachaSelectPopup();
    /*0xec8450*/ void OnCreate();
    /*0xec8454*/ void OnDelete();
    /*0xec84b8*/ void OnEnter();
    /*0xec8648*/ void OnFinish();
    /*0xec864c*/ void OnLeave();
    /*0xec877c*/ void OnStart();
    /*0xec8780*/ void OnExit();
    /*0xec8820*/ void InitializePopup(int _propertyType);
    /*0xec8848*/ void InitializeCard();
    /*0xec8998*/ void HandlerSelectCard(int _type);
    /*0xec8a80*/ void HandlerUpdateFaction();
    /*0xec894c*/ void StartUpdateProcess();
    /*0xec8ae8*/ System.Collections.IEnumerator CoUpdateProcess();

    class <CoUpdateProcess>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaSelectPopup <>4__this;
        /*0x28*/ int <length>5__2;

        /*0xf6769c*/ <CoUpdateProcess>d__18(int <>1__state);
        /*0xf676c8*/ void System.IDisposable.Dispose();
        /*0xf676cc*/ bool MoveNext();
        /*0xf67804*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf6780c*/ void System.Collections.IEnumerator.Reset();
        /*0xf6784c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GachaShopPopup : GuiBase
{
    /*0x40*/ GachaButtonWindow m_cGachaButtonWindow;
    /*0x48*/ CurrencyTopWindow m_cCurrencyTopWindow;
    /*0x50*/ GachaBonusSilder m_cGachaBonusSilder;
    /*0x58*/ AtlasImage m_BonusCard;
    /*0x60*/ LocalizeString m_BonusCardAmount;
    /*0x68*/ UnityEngine.CanvasGroup m_infoCanvas;
    /*0x70*/ LocalizeString m_ShopInfoText;
    /*0x78*/ UnityEngine.Coroutine m_shopInfoUpdateCoroutine;

    /*0xec9b0c*/ GachaShopPopup();
    /*0xec92b0*/ void OnCreate();
    /*0xec92b4*/ void OnDelete();
    /*0xec92b8*/ void OnEnter();
    /*0xec968c*/ void OnStart();
    /*0xec9690*/ void OnFinish();
    /*0xec9694*/ void OnLeave();
    /*0xec979c*/ void OnExit();
    /*0xec9870*/ void InitializePopup();
    /*0xec98f4*/ void SetBonusCard();
    /*0xec9960*/ void OnClickWishList();
    /*0xec99d4*/ void OnClickPropertyGacha();
    /*0xec9a58*/ void HandlerExitResult();
    /*0xec9620*/ System.Collections.IEnumerator CoShopInfoUpdate();
    /*0xec9ab0*/ System.Collections.IEnumerator CoLateJoinPub();
    /*0xec9b14*/ void <OnExit>b__14_0();

    class <CoShopInfoUpdate>d__20 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GachaShopPopup <>4__this;
        /*0x28*/ UnityEngine.WaitForSecondsRealtime <waitForSecondsRealtime>5__2;

        /*0xf67960*/ <CoShopInfoUpdate>d__20(int <>1__state);
        /*0xf6798c*/ void System.IDisposable.Dispose();
        /*0xf67990*/ bool MoveNext();
        /*0xf67d2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67d34*/ void System.Collections.IEnumerator.Reset();
        /*0xf67d74*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoLateJoinPub>d__21 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;

        /*0xf67854*/ <CoLateJoinPub>d__21(int <>1__state);
        /*0xf67880*/ void System.IDisposable.Dispose();
        /*0xf67884*/ bool MoveNext();
        /*0xf67910*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf67918*/ void System.Collections.IEnumerator.Reset();
        /*0xf67958*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GeneralArenaPopup : GuiBase
{
    /*0x40*/ RankBoardRankEntity m_MyRankEntity;
    /*0x48*/ ScrollContent_RankBoardRankEntity m_ScrollContent;
    /*0x50*/ LocalizeString m_SeasonTimeout;
    /*0x58*/ System.Collections.IEnumerator ieTime;

    /*0xed1b2c*/ GeneralArenaPopup();
    /*0xed0ae4*/ System.Collections.Generic.List<PTShare.Define.SArenaRanker> get_liArenaRanker();
    /*0xed0b64*/ void OnCreate();
    /*0xed0b68*/ void OnDelete();
    /*0xed0b6c*/ void OnEnter();
    /*0xed0dd4*/ void OnFinish();
    /*0xed0dd8*/ void OnLeave();
    /*0xed1004*/ void OnStart();
    /*0xed1008*/ void OnExit();
    /*0xed1084*/ void InitializePopup();
    /*0xed11dc*/ void Initialize();
    /*0xed140c*/ void InitializeScroll();
    /*0xed14b8*/ void HandlerScrollContent(int _index, RankBoardRankEntity _obj);
    /*0xed155c*/ void OnClick_Match();
    /*0xed16bc*/ void OnClick_Troop();
    /*0xed174c*/ void OnClick_Record();
    /*0xed17d0*/ void OnClick_Reward();
    /*0xed18fc*/ void OnClick_Help();
    /*0xed19a0*/ void OnClick_Store();
    /*0xed146c*/ void StartTimer();
    /*0xed0fd4*/ void StopCoroutines();
    /*0xed1abc*/ System.Collections.IEnumerator CoUpdate();
    /*0xed1b28*/ void HandlerChangeState();

    class <>c
    {
        static /*0x0*/ GeneralArenaPopup.<> <>9;
        static /*0x8*/ System.Action <>9__22_1;
        static /*0x10*/ System.Action <>9__22_0;

        static /*0xf68540*/ <>c();
        /*0xf685a0*/ <>c();
        /*0xf685a8*/ void <OnClick_Store>b__22_0();
        /*0xf686f0*/ void <OnClick_Store>b__22_1();
    }

    class <CoUpdate>d__25 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GeneralArenaPopup <>4__this;
        /*0x28*/ int <_term>5__2;

        /*0xf68774*/ <CoUpdate>d__25(int <>1__state);
        /*0xf687a0*/ void System.IDisposable.Dispose();
        /*0xf687a4*/ bool MoveNext();
        /*0xf68948*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf68950*/ void System.Collections.IEnumerator.Reset();
        /*0xf68990*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GeneralArenaRewardPopup : GuiBase
{
    /*0x40*/ TableRewardController m_DailyReward;
    /*0x48*/ TableRewardController m_SeasonReward;
    /*0x50*/ LocalizeString m_MyRank;
    /*0x58*/ LocalizeString m_SeasonTimeout;
    /*0x60*/ System.Collections.IEnumerator ieTime;

    /*0xed2c0c*/ GeneralArenaRewardPopup();
    /*0xed284c*/ int get_nMyRank();
    /*0xed28d0*/ void OnCreate();
    /*0xed28d4*/ void OnDelete();
    /*0xed28d8*/ void OnEnter();
    /*0xed2944*/ void OnFinish();
    /*0xed2948*/ void OnLeave();
    /*0xed294c*/ void OnStart();
    /*0xed2950*/ void OnExit();
    /*0xed184c*/ void InitializePopup();
    /*0xed29cc*/ void SetRewards(TableRewardController _controller, string _column);
    /*0xed2b54*/ void StartTimer();
    /*0xed2ba0*/ System.Collections.IEnumerator CoUpdate();

    class <CoUpdate>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GeneralArenaRewardPopup <>4__this;

        /*0xf68998*/ <CoUpdate>d__17(int <>1__state);
        /*0xf689c4*/ void System.IDisposable.Dispose();
        /*0xf689c8*/ bool MoveNext();
        /*0xf68b00*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf68b08*/ void System.Collections.IEnumerator.Reset();
        /*0xf68b48*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildPastChangeMasterPopup : GuiBase
{
    /*0x40*/ PlayerProfileSlot m_before;
    /*0x48*/ PlayerProfileSlot m_after;
    /*0x50*/ LocalizeString m_beforeNickname;
    /*0x58*/ LocalizeString m_afterNickname;

    /*0x110b554*/ GuildPastChangeMasterPopup();
    /*0x110b204*/ void OnCreate();
    /*0x110b208*/ void OnDelete();
    /*0x110b20c*/ void OnEnter();
    /*0x110b210*/ void OnFinish();
    /*0x110b214*/ void OnLeave();
    /*0x110b218*/ void OnStart();
    /*0x110b21c*/ void InitializePopup();

    class <>c__DisplayClass10_0
    {
        /*0x10*/ PTShare.Define.SGuildMember before;
        /*0x18*/ PTShare.Define.SGuildMember after;

        /*0xf71cec*/ <>c__DisplayClass10_0();
        /*0xf71cf4*/ void <InitializePopup>b__1();
        /*0xf71d10*/ void <InitializePopup>b__2();
    }

    class <>c
    {
        static /*0x0*/ GuildPastChangeMasterPopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SGuildMember> <>9__10_0;

        static /*0xf71c64*/ <>c();
        /*0xf71cc4*/ <>c();
        /*0xf71ccc*/ bool <InitializePopup>b__10_0(PTShare.Define.SGuildMember x);
    }
}

class GuildWarBuyTicketPopup : GuiBase
{
    /*0x40*/ ItemInfoSlot m_InfoSlot;
    /*0x48*/ LocalizeString m_Amount;
    /*0x50*/ LocalizeString m_UseAmount;
    /*0x58*/ LocalizeString m_BtnAmount;
    /*0x60*/ int nTicketAmount;
    /*0x68*/ System.Action onBuyItemCallback;

    /*0x11105cc*/ GuildWarBuyTicketPopup();
    /*0x110ffac*/ void OnCreate();
    /*0x110ffb0*/ void OnDelete();
    /*0x110ffb4*/ void OnEnter();
    /*0x1110020*/ void OnFinish();
    /*0x1110024*/ void OnLeave();
    /*0x1110028*/ void OnStart();
    /*0x111002c*/ void InitializePopup(System.Action onBuyItem);
    /*0x1110170*/ void SetAmount(int amount);
    /*0x11103d0*/ void OnClick_Amount(bool isAdd);
    /*0x11103f8*/ void OnClick_BuyTicket();
    /*0x1110398*/ bool IsVaildPrice();
    /*0x11105dc*/ void <OnClick_BuyTicket>b__15_0(bool ok);
}

class GuildWarEditSelectPlayerConfirmPopup : GuiBase
{
    /*0x40*/ HeroSlotInventory m_BeforeSlot;
    /*0x48*/ HeroSlotInventory m_AfterSlot;
    /*0x50*/ LocalizeString m_Nickname;
    /*0x58*/ System.Action onConfirmCallback;

    /*0x11115a4*/ GuildWarEditSelectPlayerConfirmPopup();
    /*0x1111464*/ void OnCreate();
    /*0x1111468*/ void OnDelete();
    /*0x111146c*/ void OnEnter();
    /*0x11114d8*/ void OnFinish();
    /*0x11114dc*/ void OnLeave();
    /*0x11114e0*/ void OnStart();
    /*0x11114e4*/ void InitializePopup(PTShare.Define.SHero beforeData, PTShare.Define.SLegionHero afterData, System.Action onConfirm);
    /*0x1111564*/ void OnClick_Confirm();
}

class GuildWarEditSelectPlayerPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Desc;
    /*0x48*/ ScrollContent_HeroGuildWarSelectHeroSlot m_ScrollContent;
    /*0x50*/ PTShare.Define.GuildWarPosition eEditPosition;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> liLegionHero;
    /*0x60*/ PTShare.Define.SHero heroInfo;

    /*0x11122bc*/ GuildWarEditSelectPlayerPopup();
    /*0x11115ac*/ void OnCreate();
    /*0x11115b0*/ void OnDelete();
    /*0x111166c*/ void OnEnter();
    /*0x1111760*/ void OnFinish();
    /*0x1111764*/ void OnLeave();
    /*0x1111820*/ void OnStart();
    /*0x1111824*/ void OnExit();
    /*0x11118a0*/ void InitializePopup(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SHero data, System.Collections.Generic.List<PTShare.Define.SLegionHero> list);
    /*0x1111ccc*/ void InitializeScrollContent();
    /*0x1111dbc*/ void HandlerScrollContent(int nIndex, HeroGuildWarSelectHeroSlot slot);
    /*0x1111ef8*/ void OnChangeCallback();
    /*0x111200c*/ void OnFailCallback(int code, string result);
    /*0x1112154*/ void HeroGuildWarSelectHeroSlot_onLongPressEvent(PTShare.Define.SHero _hero);
    /*0x11122cc*/ void <OnFailCallback>b__16_0();

    class <>c
    {
        static /*0x0*/ GuildWarEditSelectPlayerPopup.<> <>9;
        static /*0x8*/ System.Comparison<PTShare.Define.SLegionHero> <>9__12_0;

        static /*0xf72a1c*/ <>c();
        /*0xf72a7c*/ <>c();
        /*0xf72a84*/ int <InitializePopup>b__12_0(PTShare.Define.SLegionHero a, PTShare.Define.SLegionHero b);
    }

    class <>c__DisplayClass17_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf72af8*/ <>c__DisplayClass17_0();
        /*0xf72b00*/ bool <HeroGuildWarSelectHeroSlot_onLongPressEvent>b__0(PTShare.Define.SLegionHero x);
    }
}

class GuildWarFormationSelectPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildWarFormationSelect m_ScrollContentFormationSelect;
    /*0x48*/ LocalizeString m_KnightText;
    /*0x50*/ LocalizeString m_RangerText;
    /*0x58*/ LocalizeString m_MageText;
    /*0x60*/ TooltipData_UnitList m_KnightList;
    /*0x68*/ TooltipData_UnitList m_RangerList;
    /*0x70*/ TooltipData_UnitList m_MageList;
    /*0x78*/ int m_nTMPSelectFormationID;
    /*0x80*/ System.Collections.Generic.List<int> currentSortFormation;
    /*0x88*/ PTShare.Define.GuildWarPosition eEditPosition;

    /*0x11182ec*/ GuildWarFormationSelectPopup();
    /*0x111708c*/ void OnCreate();
    /*0x111764c*/ void OnDelete();
    /*0x1117650*/ void OnEnter();
    /*0x11176bc*/ void OnFinish();
    /*0x11176c0*/ void OnLeave();
    /*0x11176c4*/ void OnStart();
    /*0x11176c8*/ void Init(PTShare.Define.GuildWarPosition ePosition);
    /*0x1117d2c*/ void InitializeList();
    /*0x1118100*/ void HandleItemUpdate(int _nIndex, GuildWarFormationSelectEntity _formationEntity);
    /*0x1117fe4*/ void SetSelectIndex(int nFormationID);
    /*0x1116e90*/ void SetTMPFormationID(int _nFormationID, bool _bScrollSort);
    /*0x1118204*/ void OnClickUseFormation();
    /*0x1118188*/ System.Collections.IEnumerator CoScrollUpdate(int nFormationID);

    class <>c
    {
        static /*0x0*/ GuildWarFormationSelectPopup.<> <>9;
        static /*0x8*/ System.Func<TableData.TableData_Unitbase, bool> <>9__10_0;
        static /*0x10*/ System.Func<TableData.TableData_Unitbase, int> <>9__10_1;
        static /*0x18*/ System.Func<TableData.TableData_Unitbase, bool> <>9__10_2;
        static /*0x20*/ System.Func<TableData.TableData_Unitbase, int> <>9__10_3;
        static /*0x28*/ System.Func<TableData.TableData_Unitbase, bool> <>9__10_4;
        static /*0x30*/ System.Func<TableData.TableData_Unitbase, int> <>9__10_5;
        static /*0x38*/ System.Func<TableData.TableData_Guildwartactic, int> <>9__17_1;
        static /*0x40*/ System.Comparison<int> <>9__17_0;

        static /*0xf73190*/ <>c();
        /*0xf731f0*/ <>c();
        /*0xf731f8*/ bool <OnCreate>b__10_0(TableData.TableData_Unitbase x);
        /*0xf73308*/ int <OnCreate>b__10_1(TableData.TableData_Unitbase x);
        /*0xf73320*/ bool <OnCreate>b__10_2(TableData.TableData_Unitbase x);
        /*0xf733cc*/ int <OnCreate>b__10_3(TableData.TableData_Unitbase x);
        /*0xf733e4*/ bool <OnCreate>b__10_4(TableData.TableData_Unitbase x);
        /*0xf734f4*/ int <OnCreate>b__10_5(TableData.TableData_Unitbase x);
        /*0xf7350c*/ int <InitializeList>b__17_1(TableData.TableData_Guildwartactic x);
        /*0xf73524*/ int <InitializeList>b__17_0(int a, int b);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ int nFormationID;

        /*0xf735e4*/ <>c__DisplayClass19_0();
        /*0xf735ec*/ bool <SetSelectIndex>b__0(int x);
    }

    class <CoScrollUpdate>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ GuildWarFormationSelectPopup <>4__this;
        /*0x28*/ int nFormationID;

        /*0xf735fc*/ <CoScrollUpdate>d__22(int <>1__state);
        /*0xf73628*/ void System.IDisposable.Dispose();
        /*0xf7362c*/ bool MoveNext();
        /*0xf73688*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf73690*/ void System.Collections.IEnumerator.Reset();
        /*0xf736d0*/ object System.Collections.IEnumerator.get_Current();
    }
}

class GuildWarMatchPopup : GuiBase
{
    /*0x40*/ AtlasImage m_TicketIcon;
    /*0x48*/ LocalizeString m_TicketAmount;
    /*0x50*/ ScrollContent_GuildWarMatchEntity m_ScrollContent;
    /*0x58*/ LocalizeString m_NoMatchUser;
    /*0x60*/ System.Collections.Generic.List<PTShare.Define.SGuildWar> liSearchGuild;

    /*0x11194c4*/ GuildWarMatchPopup();
    /*0x11189b0*/ void OnCreate();
    /*0x11189b4*/ void OnDelete();
    /*0x11189b8*/ void OnEnter();
    /*0x1118a24*/ void OnFinish();
    /*0x1118a28*/ void OnLeave();
    /*0x1118a30*/ void OnStart();
    /*0x1118a2c*/ void Release();
    /*0x1118a34*/ void InitializePopup();
    /*0x1118d90*/ void Initialize();
    /*0x1118d94*/ void InitializeScroll();
    /*0x1118ed0*/ void HandlerScrollContent(int nIndex, GuildWarMatchEntity entity);
    /*0x1118bec*/ void SetRefreshTicket();
    /*0x1118f50*/ void OnClick_BuyTicket();
    /*0x1119280*/ void OnClick_Reset();
    /*0x11194c0*/ void CallbackBuyTicket();
    /*0x11194cc*/ void <InitializePopup>b__12_0(System.Collections.Generic.List<PTShare.Define.SGuildWar> res);
    /*0x11194f4*/ void <OnClick_Reset>b__18_0(bool ok);
    /*0x11196a8*/ void <OnClick_Reset>b__18_1(System.Collections.Generic.List<PTShare.Define.SGuildWar> res);

    class <>c
    {
        static /*0x0*/ GuildWarMatchPopup.<> <>9;
        static /*0x8*/ System.Action<int, string> <>9__12_1;
        static /*0x10*/ System.Action<int, string> <>9__18_2;

        static /*0xf736d8*/ <>c();
        /*0xf73738*/ <>c();
        /*0xf73740*/ void <InitializePopup>b__12_1(int code, string result);
        /*0xf737c8*/ void <OnClick_Reset>b__18_2(int code, string result);
    }
}

class GuildWarMyHeroPopup : GuiBase
{
    /*0x40*/ PlayerProfileSlot m_profileSlot;
    /*0x48*/ LocalizeString m_nickName;
    /*0x50*/ LocalizeString m_power;
    /*0x58*/ HeroGuildWarEditSlot m_attackSlot;
    /*0x60*/ HeroGuildWarEditSlot m_defenseSlot;
    /*0x68*/ UnityEngine.GameObject m_NoHeroDesc;

    /*0x1119bd4*/ GuildWarMyHeroPopup();
    /*0x111971c*/ void OnCreate();
    /*0x1119720*/ void OnDelete();
    /*0x1119724*/ void OnEnter();
    /*0x1119790*/ void OnFinish();
    /*0x1119794*/ void OnLeave();
    /*0x1119798*/ void OnStart();
    /*0x111979c*/ void OnExit();
    /*0x11197a4*/ void Release();
    /*0x11197a8*/ void InitializePopup(int atkHeroid, int defHeroid);

    class <>c
    {
        static /*0x0*/ GuildWarMyHeroPopup.<> <>9;
        static /*0x8*/ System.Action <>9__14_0;

        static /*0xf73850*/ <>c();
        /*0xf738b0*/ <>c();
        /*0xf738b8*/ void <InitializePopup>b__14_0();
    }
}

class GuildWarPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_generalParent;
    /*0x48*/ GuildWarEditWindow m_editParent;
    /*0x50*/ ScrollContent_GuildWarRankEntity m_guildRankScroll;
    /*0x58*/ GuildWarRankEntity m_guildMyRankEntity;
    /*0x60*/ GuildWarSeasonTime m_seasonTime;
    /*0x68*/ UnityEngine.UI.Button m_battleBtn;
    /*0x70*/ UnityEngine.UI.Button m_impBattleBtn;
    /*0x78*/ UnityEngine.GameObject m_formReddt;
    /*0x80*/ UnityEngine.GameObject m_heroReddt;

    /*0x111b74c*/ GuildWarPopup();
    /*0x111a08c*/ GuildWarInfomation get_GuildWarInfo();
    /*0x111a0f0*/ bool get_PossiableGuildWarBattle();
    /*0x111a144*/ bool get_ImpossibleGuildWarBattleLittleTime();
    /*0x111a198*/ void OnCreate();
    /*0x111a19c*/ void OnDelete();
    /*0x111a1a0*/ void OnEnter();
    /*0x111a2cc*/ void OnFinish();
    /*0x111a2d0*/ void OnLeave();
    /*0x111a2d4*/ void OnStart();
    /*0x111a2d8*/ void OnExit();
    /*0x111a64c*/ void Release();
    /*0x1115898*/ void InitializePopup();
    /*0x111a6d0*/ void InitializeContents(GuildWarPopup.GuildWarEditType eType, PTShare.Define.GuildWarPosition ePosition);
    /*0x1111fe8*/ void InitializeEditContents(bool bRefeshScroll);
    /*0x111a810*/ void InitializeScroll_General();
    /*0x111a880*/ void HandlerGeneralScrollContent(int nIndex, GuildWarRankEntity entity);
    /*0x111a914*/ void ViewPositionToast();
    /*0x111ab58*/ void BeginGuildWar();
    /*0x111ac08*/ void OnClick_Battle();
    /*0x111ae14*/ void OnClick_Settings();
    /*0x111afd0*/ void OnClick_Troop();
    /*0x111b098*/ void OnClick_Record();
    /*0x111b118*/ void OnClick_Reward();
    /*0x111b248*/ void OnClick_Help();
    /*0x111a554*/ void SetActiveContents(GuildWarPopup.GuildWarEditType eType);
    /*0x111a5bc*/ void RefreshBattleButton();
    /*0x111a4e8*/ bool IsContents(GuildWarPopup.GuildWarEditType eType);
    /*0x111b490*/ void OnEndTimeCallback();
    /*0x111b554*/ void OnTickTimeCallback();
    /*0x111b558*/ void InitializeEditWindowForGuildWarTest(PTShare.Define.GuildWarPosition ePosition);
    /*0x111b754*/ void <InitializeContents>b__25_0();
    /*0x111b8f8*/ void <OnClick_Settings>b__32_0();
    /*0x111b928*/ void <OnClick_Troop>b__33_0(int a, int b);

    enum GuildWarEditType
    {
        NONE = 0,
        GENERAL = 1,
        EDIT = 2,
    }

    class <>c
    {
        static /*0x0*/ GuildWarPopup.<> <>9;
        static /*0x8*/ System.Action<int, System.Collections.Generic.List<PTShare.Define.SContribution>> <>9__35_0;

        static /*0xf73940*/ <>c();
        /*0xf739a0*/ <>c();
        /*0xf739a8*/ void <OnClick_Reward>b__35_0(int _index, System.Collections.Generic.List<PTShare.Define.SContribution> _list);
    }

    class <>c__DisplayClass42_0
    {
        /*0x10*/ GuildWarPopup <>4__this;
        /*0x18*/ PTShare.Define.GuildWarPosition ePosition;

        /*0xf73a40*/ <>c__DisplayClass42_0();
        /*0xf73a48*/ void <InitializeEditWindowForGuildWarTest>b__0();
    }
}

class GuildWarRecordPopup : GuiBase
{
    /*0x40*/ ScrollContent_GuildWarRecordEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_emptyText;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SGuildWarHistory> liHistory;

    /*0x10f0f5c*/ GuildWarRecordPopup();
    /*0x10f0a80*/ void OnCreate();
    /*0x10f0a84*/ void OnDelete();
    /*0x10f0a88*/ void OnEnter();
    /*0x10f0bf0*/ void OnFinish();
    /*0x10f0bf4*/ void OnLeave();
    /*0x10f0d34*/ void OnStart();
    /*0x10f0ccc*/ void Release();
    /*0x10f0d38*/ void InitializePopup();
    /*0x10f0e00*/ void InitializeScroll();
    /*0x10f0edc*/ void HandlerScrollContent(int nIndex, GuildWarRecordEntity entity);
    /*0x10f0f64*/ void <InitializePopup>b__10_0(System.Collections.Generic.List<PTShare.Define.SGuildWarHistory> res);
}

class GuildWarResultPopup : GuiBase
{
    /*0x40*/ LocalizeString m_guildPoint;
    /*0x48*/ AtlasImage m_rankIcon;
    /*0x50*/ LocalizeString m_rankCount;
    /*0x58*/ LocalizeString m_rewardTitle;
    /*0x60*/ ScrollContent_StageReward m_rewardScroll;
    /*0x68*/ TableData.TableData_Guildwarrank rankInfo;
    /*0x70*/ TableData.TableData_Guildwarrankreward rankRewardInfo;
    /*0x78*/ System.Collections.Generic.List<Rewards> liReward;

    /*0x10f217c*/ GuildWarResultPopup();
    /*0x10f0f6c*/ void OnCreate();
    /*0x10f0f70*/ void OnDelete();
    /*0x10f0f74*/ void OnEnter();
    /*0x10f10dc*/ void OnFinish();
    /*0x10f10e0*/ void OnLeave();
    /*0x10f11b4*/ void OnStart();
    /*0x10f11b8*/ void InitializePopup();
    /*0x10f2064*/ void InitializeScroll();
    /*0x10f20c0*/ void HandlerScrollContent(int nIndex, ItemTableRewardSlot entity);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ PTShare.Define.SGuildWarReward reward;

        /*0xf73a90*/ <>c__DisplayClass14_0();
        /*0xf73a98*/ bool <InitializePopup>b__0(TableData.TableData_Guildwarrank x);
    }
}

class GuildWarRewardDetailPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_rankParent;
    /*0x48*/ UnityEngine.GameObject m_rewardParent;
    /*0x50*/ ScrollContent_GuildWarRewardDetailEntity m_scrollContent_Rank;
    /*0x58*/ ScrollContent_GuildWarRewardDetailEntity m_scrollContent_Reward;
    /*0x60*/ GuildWarRewardDetailEntity m_myRankEntity;
    /*0x68*/ TableData.TableData_Guildwarrankreward rewardInfo;

    /*0x10f2e7c*/ GuildWarRewardDetailPopup();
    /*0x10f2754*/ System.Collections.Generic.List<PTShare.Define.SContribution> get_CurrentContribution();
    /*0x10f27a8*/ void OnCreate();
    /*0x10f27ac*/ void OnDelete();
    /*0x10f27b0*/ void OnEnter();
    /*0x10f27f4*/ void OnFinish();
    /*0x10f27f8*/ void OnLeave();
    /*0x10f27fc*/ void OnStart();
    /*0x10f2800*/ void OnExit();
    /*0x10f287c*/ void InitializePopup_Rank(TableData.TableData_Guildwarrankreward data);
    /*0x10f2bd4*/ void InitializePopup_Reward(TableData.TableData_Guildwarrankreward data);
    /*0x10f2ae0*/ void InitializeScroll_Rank();
    /*0x10f2d70*/ void HandlerScrollContent_Rank(int _nIndex, GuildWarRewardDetailEntity _entity);
    /*0x10f2c84*/ void InitializeScroll_Reward();
    /*0x10f2e2c*/ void HandlerScrollContent_Reward(int _nIndex, GuildWarRewardDetailEntity _entity);

    class <>c
    {
        static /*0x0*/ GuildWarRewardDetailPopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SContribution> <>9__15_0;

        static /*0xf73b60*/ <>c();
        /*0xf73bc0*/ <>c();
        /*0xf73bc8*/ bool <InitializePopup_Rank>b__15_0(PTShare.Define.SContribution x);
    }
}

class GuildWarRewardPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_rankParent;
    /*0x48*/ UnityEngine.GameObject m_rewardParent;
    /*0x50*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggles;
    /*0x58*/ ScrollContent_GuildWarRewardEntity m_ScrollContent;
    /*0x60*/ ScrollContent_GuildWarRewardDetailEntity m_ScrollContent_Rank;
    /*0x68*/ GuildWarRewardEntity m_MyRank;
    /*0x70*/ GuildWarRewardDetailEntity m_MyContributionRank;
    /*0x78*/ GuildWarSeasonTime m_SeasonText;
    /*0x80*/ int nContributionRewardIndex;
    /*0x88*/ System.Collections.Generic.List<PTShare.Define.SContribution> liContribution;
    /*0x90*/ TableData.TableData_Guildwarrank currentRankTableData;

    /*0x10f3e3c*/ GuildWarRewardPopup();
    /*0x10f3370*/ void OnCreate();
    /*0x10f3374*/ void OnDelete();
    /*0x10f3378*/ void OnEnter();
    /*0x10f35bc*/ void OnFinish();
    /*0x10f35c0*/ void OnLeave();
    /*0x10f3720*/ void OnStart();
    /*0x10f3724*/ void OnExit();
    /*0x10f37a0*/ System.Collections.Generic.List<TableData.TableData_Guildwarrank> get_GuildWarRanks();
    /*0x10f37fc*/ void InitializePopup(int _nRewardIndex, System.Collections.Generic.List<PTShare.Define.SContribution> _liContribution);
    /*0x10f3998*/ void InitializeToggles();
    /*0x10f3be8*/ void HandlerScrollContent(int nIndex, GuildWarRewardEntity entity);
    /*0x10f3ca0*/ void HandlerScrollContent_Rank(int nIndex, GuildWarRewardDetailEntity entity);
    /*0x10f3d88*/ void OnEndTimeCallback();
    /*0x10f3e44*/ void <InitializeToggles>b__21_1(bool _on);
    /*0x10f4008*/ void <InitializeToggles>b__21_2(bool _on);
    /*0x10f43bc*/ bool <InitializeToggles>b__21_4(TableData.TableData_Guildwarrank x);
    /*0x10f43e0*/ void <OnEndTimeCallback>b__24_0();

    class <>c__DisplayClass21_0
    {
        /*0x10*/ int nReward;

        /*0xf73e1c*/ <>c__DisplayClass21_0();
        /*0xf73e24*/ bool <InitializeToggles>b__3(TableData.TableData_Guildwarrank x);
    }

    class <>c
    {
        static /*0x0*/ GuildWarRewardPopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.UI.Toggle> <>9__21_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SContribution> <>9__21_5;
        static /*0x18*/ System.Predicate<PTShare.Define.SContribution> <>9__21_6;

        static /*0xf73c60*/ <>c();
        /*0xf73cc0*/ <>c();
        /*0xf73cc8*/ void <InitializeToggles>b__21_0(UnityEngine.UI.Toggle x);
        /*0xf73cec*/ bool <InitializeToggles>b__21_5(PTShare.Define.SContribution x);
        /*0xf73d84*/ bool <InitializeToggles>b__21_6(PTShare.Define.SContribution x);
    }
}

class GuildWarUnsetHeroPopup : GuiBase
{
    /*0x40*/ LocalizeString m_desc;
    /*0x48*/ HeroSlotInventory m_beforeSlot;
    /*0x50*/ HeroSlotInventory m_afterSlot;
    /*0x58*/ ScrollContent_HeroGuildWarUnSelectHeroSlot m_scrollContent;
    /*0x60*/ UnityEngine.UI.Button m_confirmBtn;
    /*0x68*/ System.Action<PTShare.Define.SLegionHero> onConfirmCallback;
    /*0x70*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> listHero;
    /*0x78*/ PTShare.Define.SLegionHero selectHero;
    /*0x80*/ PTShare.Define.GuildWarPosition eEditPosition;

    /*0x10f5d30*/ GuildWarUnsetHeroPopup();
    /*0x10f50d8*/ void OnCreate();
    /*0x10f50dc*/ void OnDelete();
    /*0x10f5198*/ void OnEnter();
    /*0x10f528c*/ void OnFinish();
    /*0x10f5290*/ void OnLeave();
    /*0x10f534c*/ void OnStart();
    /*0x10f5350*/ void InitializePopup(PTShare.Define.GuildWarPosition ePosition, PTShare.Define.SLegionHero hero, System.Collections.Generic.List<PTShare.Define.SLegionHero> list, System.Action<PTShare.Define.SLegionHero> onResult);
    /*0x10f56a4*/ void InitializeScroll();
    /*0x10f5794*/ void HandlerScrollContent(int nIndex, HeroGuildWarUnSelectHeroSlot slot);
    /*0x10f58f4*/ void OnClick_Confirm();
    /*0x10f5a34*/ void OnSelectCallback(PTShare.Define.SHero _hero);
    /*0x10f5bc8*/ void HeroGuildWarUnSelectHeroSlot_onLongPressEvent(PTShare.Define.SHero _hero);
    /*0x10f5d40*/ bool <OnClick_Confirm>b__18_0(PTShare.Define.SLegionHero x);

    class <>c__DisplayClass19_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf74640*/ <>c__DisplayClass19_0();
        /*0xf74648*/ bool <OnSelectCallback>b__0(PTShare.Define.SLegionHero x);
    }

    class <>c__DisplayClass20_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0xf74678*/ <>c__DisplayClass20_0();
        /*0xf74680*/ bool <HeroGuildWarUnSelectHeroSlot_onLongPressEvent>b__0(PTShare.Define.SLegionHero x);
    }
}

class HeroArtifactPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnUpgradeEvent;
    /*0x40*/ UnityEngine.Transform m_ArtifactParent;
    /*0x48*/ ArtifactUpgradeResult m_ArtifactUpgradeParent;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_ArtifactSkel;
    /*0x58*/ ParticleBase m_ArtifactEf01;
    /*0x60*/ ParticleBase m_ArtifactEf02;
    /*0x68*/ AtlasImage m_ArtifactIcon;
    /*0x70*/ LocalizeString m_ArtifactName;
    /*0x78*/ LocalizeString m_EffectTitle;
    /*0x80*/ LocalizeString m_EffectDesc;
    /*0x88*/ UnityEngine.UI.Button m_UpgradeButton;
    /*0x90*/ ArtifactUpgradeStatusGroup m_UpgradeStatusGroup;
    /*0x98*/ UnityEngine.GameObject m_MaxUpgradeDesc;
    /*0xa0*/ UnityEngine.GameObject m_MaterialParent;
    /*0xa8*/ UnityEngine.GameObject m_Arrow;
    /*0xb0*/ System.Collections.Generic.List<ArtifactMaterial> m_liArtifactMaterial;
    /*0xb8*/ PTShare.Define.SHero heroInfo;
    /*0xc0*/ PTShare.Define.SArtifact artifactInfo;
    /*0xc8*/ TableData.TableData_Equipment equipData;
    /*0xd0*/ TableData.TableData_Artifact maxArtifactData;
    /*0xd8*/ System.Collections.Generic.List<Rewards> liNeedRewards;
    /*0xe0*/ bool bAnimationPlaying;

    static /*0x1104764*/ HeroArtifactPopup();
    static /*0x1103554*/ void add_OnUpgradeEvent(System.Action<PTShare.Define.SHero> value);
    static /*0x1103648*/ void remove_OnUpgradeEvent(System.Action<PTShare.Define.SHero> value);
    /*0x110475c*/ HeroArtifactPopup();
    /*0x110373c*/ void OnCreate();
    /*0x1103740*/ void OnDelete();
    /*0x1103744*/ void OnEnter();
    /*0x1103748*/ void OnFinish();
    /*0x110374c*/ void OnLeave();
    /*0x110386c*/ void OnStart();
    /*0x1103870*/ void OnExit();
    /*0x11038e8*/ void InitializePopup(PTShare.Define.SHero hero);
    /*0x1103fb4*/ void SetArtifactSkel(string anim, bool loop);
    /*0x1103ff4*/ void OnClick_Upgrade();
    /*0x11041a4*/ void OnUpgradeCallback(PTShare.Define.SHero hero);
    /*0x11044a8*/ void OnCompleteResult();
    /*0x110467c*/ void AnimationState_Complete(Spine.TrackEntry trackEntry);
    /*0x1104680*/ void AnimationState_Event(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x110443c*/ System.Collections.IEnumerator CoAnimationUpdate();
    /*0x1104768*/ void <OnCompleteResult>b__35_0();

    class <CoAnimationUpdate>d__38 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroArtifactPopup <>4__this;
        /*0x28*/ UnityEngine.Vector3 <pos>5__2;
        /*0x38*/ Spine.Bone <bone>5__3;

        /*0x1057c4c*/ <CoAnimationUpdate>d__38(int <>1__state);
        /*0x1057c78*/ void System.IDisposable.Dispose();
        /*0x1057c7c*/ bool MoveNext();
        /*0x1057da0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1057da8*/ void System.Collections.IEnumerator.Reset();
        /*0x1057de8*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroDismissAllSelectPopup : GuiBase
{
    /*0x40*/ HeroSlot[] m_dismissSlots;
    /*0x48*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_tableList;
    /*0x50*/ System.Collections.Generic.List<bool> m_selectList;
    /*0x58*/ System.Action<System.Collections.Generic.List<PropertyType>> m_callBack;

    /*0xf3081c*/ HeroDismissAllSelectPopup();
    /*0xf30110*/ void OnCreate();
    /*0xf30114*/ void OnDelete();
    /*0xf30118*/ void OnEnter();
    /*0xf3011c*/ void OnFinish();
    /*0xf30120*/ void OnLeave();
    /*0xf30124*/ void OnStart();
    /*0xf30128*/ void OnExit();
    /*0xf301a4*/ void InitPopup(System.Action<System.Collections.Generic.List<PropertyType>> callback);
    /*0xf30418*/ void HandleClickEvent(TableData.TableData_Unitbase tableData);
    /*0xf306ac*/ void OnClickSelect();

    class <>c__DisplayClass12_0
    {
        /*0x10*/ TableData.TableData_Unitbase tableData;

        /*0x10582a8*/ <>c__DisplayClass12_0();
        /*0x10582b0*/ bool <HandleClickEvent>b__0(TableData.TableData_Unitbase f);
    }
}

class HeroDismissConfirmPopup : GuiBase
{
    /*0x40*/ ItemRewardGroup m_rewardGroup;
    /*0x48*/ System.Collections.Generic.List<PTShare.Define.SHero> herolist;
    /*0x50*/ PTShare.Define.SProperty rewards;

    /*0xf30cac*/ HeroDismissConfirmPopup();
    /*0xf308d4*/ void OnCreate();
    /*0xf308d8*/ void OnDelete();
    /*0xf308dc*/ void OnEnter();
    /*0xf308e0*/ void OnFinish();
    /*0xf308e4*/ void OnLeave();
    /*0xf308e8*/ void OnStart();
    /*0xf308ec*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SHero> list);
    /*0xf30b30*/ void OnClick_Confirm();
    /*0xf30c24*/ int GetDismissMinGradeAmount(int grade);
    /*0xf30d10*/ void <OnClick_Confirm>b__10_0();

    class <>c__DisplayClass9_0
    {
        /*0x10*/ HeroDismissConfirmPopup <>4__this;
        /*0x18*/ System.Collections.Generic.List<Rewards> configReward;

        /*0x10582e0*/ <>c__DisplayClass9_0();
        /*0x10582e8*/ void <InitializePopup>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass9_1
    {
        /*0x10*/ int count;
        /*0x18*/ HeroDismissConfirmPopup.<> CS$<>8__locals1;

        /*0x105842c*/ <>c__DisplayClass9_1();
        /*0x1058434*/ void <InitializePopup>b__1(Rewards y);
    }
}

class HeroFastLevelPopup : GuiBase
{
    static /*0x0*/ System.Action<PTShare.Define.SHero> OnOutputCallbackEvent;
    /*0x40*/ HeroNeedItemWindow m_NeedMaterial;
    /*0x48*/ HeroSlotInventory m_SlotInfo;
    /*0x50*/ LocalizeString m_BeforeLevel;
    /*0x58*/ LocalizeString m_AfterLevel;
    /*0x60*/ PTShare.Define.SHero heroInfo;
    /*0x68*/ int nLevelCount;

    static /*0xf33f34*/ HeroFastLevelPopup();
    static /*0xf33810*/ void add_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf33904*/ void remove_OnOutputCallbackEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf33f2c*/ HeroFastLevelPopup();
    /*0xf339f8*/ void OnCreate();
    /*0xf339fc*/ void OnDelete();
    /*0xf33a60*/ void OnEnter();
    /*0xf33a64*/ void OnFinish();
    /*0xf33a68*/ void OnLeave();
    /*0xf33a6c*/ void OnStart();
    /*0xf2f564*/ void InitializePopup(PTShare.Define.SHero _hero, System.Collections.Generic.List<Rewards> _rewards, int _nLevelCount);
    /*0xf33a70*/ void OnClick_Levelup();
    /*0xf33b94*/ void CallBackSuccessLevelUp(PTShare.Define.SHero _hero);
}

class HeroLevelResultPopup : GuiBase
{
    /*0x40*/ LocalizeString m_BefTotal;
    /*0x48*/ LocalizeString m_BefLevel;
    /*0x50*/ LocalizeString m_BefAttack;
    /*0x58*/ LocalizeString m_BefDefense;
    /*0x60*/ LocalizeString m_BefHealth;
    /*0x68*/ LocalizeString m_AftTotal;
    /*0x70*/ LocalizeString m_AftLevel;
    /*0x78*/ LocalizeString m_AftAttack;
    /*0x80*/ LocalizeString m_AftDefense;
    /*0x88*/ LocalizeString m_AftHealth;
    /*0x90*/ HeroSkillupWindow m_SkillWindow;
    /*0x98*/ UnityEngine.GameObject m_EffectParent;
    /*0xa0*/ UnityEngine.GameObject m_WindowParent;
    /*0xa8*/ UnityEngine.GameObject m_LevelText;
    /*0xb0*/ ParticleBase m_LevelEffect;
    /*0xb8*/ Spine.Unity.SkeletonGraphic m_LevelSpine;
    /*0xc0*/ PTShare.Define.SHero m_HeroInfo;
    /*0xc8*/ TableData.TableData_Unitgradelv m_GradelvInfo;
    /*0xd0*/ Battle.CharacterStat m_CurStatInfo;
    /*0xd8*/ Battle.CharacterStat m_NextStatInfo;
    /*0xe0*/ bool m_isPlayingAnimate;
    /*0xe8*/ System.Collections.IEnumerator m_ieAnimate;

    /*0xf3dad8*/ HeroLevelResultPopup();
    /*0xf3d854*/ void OnCreate();
    /*0xf3d858*/ void OnDelete();
    /*0xf3d85c*/ void OnEnter();
    /*0xf3d864*/ void OnStart();
    /*0xf3d868*/ void OnFinish();
    /*0xf3d86c*/ void OnLeave();
    /*0xf3d870*/ void OnExit();
    /*0xf33ca8*/ void Initalize(PTShare.Define.SHero _hero, int _nOffsetLevel);
    /*0xf3d9a8*/ void SetText(LocalizeString _str, string _val);
    /*0xf3d9c0*/ string GetStat(Battle.CharacterStat _stat, Battle.CharacterStat.StatType _type);
    /*0xf3d980*/ string GetTotalPower(Battle.CharacterStat _stat);
    /*0xf3d9f8*/ void SetActiveEffect(bool _bWinParent, bool _bEftParent, bool _bLvParent);
    /*0xf3d900*/ void PlayAnimate();
    /*0xf3da6c*/ System.Collections.IEnumerator CoAnimate();

    class <CoAnimate>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroLevelResultPopup <>4__this;

        /*0x105a9e8*/ <CoAnimate>d__35(int <>1__state);
        /*0x105aa14*/ void System.IDisposable.Dispose();
        /*0x105aa18*/ bool MoveNext();
        /*0x105ac38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105ac40*/ void System.Collections.IEnumerator.Reset();
        /*0x105ac80*/ object System.Collections.IEnumerator.get_Current();
    }
}

enum HeroManageWindowType
{
    NONE = 0,
    MANAGE = 1,
    BOOK = 2,
    MERCENARY = 3,
    MAZE = 4,
    GACHA = 5,
    DUNGEON = 6,
}

class HeroManagePopup : GuiBase
{
    static /*0x0*/ System.Action OnChangeAllHeroEvent;
    static /*0x8*/ System.Action<PTShare.Define.SHero> OnChangeSingleHeroEvent;
    static /*0x10*/ int lastUnitID;
    /*0x40*/ HeroNameWindow m_cHeroNameWindow;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_Illust;
    /*0x58*/ AtlasImage m_LockIcon;
    /*0x60*/ AtlasImage m_IllustViewIcon;
    /*0x68*/ UnityEngine.UI.Image m_Background;
    /*0x70*/ UnityEngine.UI.Image m_frame;
    /*0x78*/ UnityEngine.UI.Image m_Slot;
    /*0x80*/ ParticleBase m_levelParticle;
    /*0x88*/ HeroEquipmentWindow m_cEquipmentGroup;
    /*0x90*/ HeroSkillWindow m_cSkillGroup;
    /*0x98*/ HeroStatusWindow m_cStatusGroup;
    /*0xa0*/ HeroButtonWindow m_cButtonGroup;
    /*0xa8*/ HeroMercenaryWindow m_cMercenaryGroup;
    /*0xb0*/ System.Collections.Generic.List<BottomMenuBase> m_liBottomMenu;
    /*0xb8*/ UnityEngine.GameObject m_ArrowParent;
    /*0xc0*/ UnityEngine.GameObject m_LockParent;
    /*0xc8*/ UnityEngine.GameObject m_CharacterPoint;
    /*0xd0*/ UnityEngine.GameObject m_AbilityParent;
    /*0xd8*/ AtlasImage m_StoryRedDot;
    /*0xe0*/ HeroManageTooltip m_Tooltip;
    /*0xe8*/ UnityEngine.GameObject[] m_skillIcons;
    /*0xf0*/ HEROGRADE[] m_arrBookListGrade;
    /*0xf8*/ int m_nCurIndex;
    /*0xfc*/ int m_nPropertyType;
    /*0x100*/ PTShare.Define.SStatBonus m_statBonus;
    /*0x108*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_liUnitBook;
    /*0x110*/ System.Collections.Generic.List<PTShare.Define.SHero> m_liMercenary;
    /*0x118*/ System.Collections.Generic.List<ConditionHeroData> m_liConditionHero;
    /*0x120*/ HeroManageWindowType m_eWindowType;
    /*0x124*/ HeroManagePopup.HeroMenuType m_eMenuType;
    /*0x128*/ PTShare.Define.SHero m_HeroInfo;
    /*0x130*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x138*/ TableData.TableData_Unitgradelv m_GradelvInfo;
    /*0x140*/ int m_enterHeroLv;
    /*0x144*/ bool m_bLeave;
    /*0x145*/ bool m_bIllustView;
    /*0x148*/ ShaderChanger_Dissolve m_illustDissolve;

    static /*0xf45a68*/ HeroManagePopup();
    static /*0xf38d0c*/ void add_OnChangeAllHeroEvent(System.Action value);
    static /*0xf38e00*/ void remove_OnChangeAllHeroEvent(System.Action value);
    static /*0xf2fe34*/ void add_OnChangeSingleHeroEvent(System.Action<PTShare.Define.SHero> value);
    static /*0xf2ffdc*/ void remove_OnChangeSingleHeroEvent(System.Action<PTShare.Define.SHero> value);
    /*0xf45968*/ HeroManagePopup();
    /*0xf3fd34*/ TableData.TableData_Unitbase get_baseInfo();
    /*0xf3fd3c*/ void set_baseInfo(TableData.TableData_Unitbase value);
    /*0xf3fdc0*/ PTShare.Define.SHero GetHero();
    /*0xf3fdc8*/ bool IsUnEquipSignature();
    /*0xf3fdd8*/ void OnCreate();
    /*0xf3fddc*/ void OnEnter();
    /*0xf3fea0*/ void OnStart();
    /*0xf3fea4*/ void OnFinish();
    /*0xf3fea8*/ void OnLeave();
    /*0xf400e4*/ void OnDelete();
    /*0xf40948*/ void OnExit();
    /*0xf3feac*/ void Leave();
    /*0xf40b68*/ void ImportEvent();
    /*0xf4015c*/ void DeleteEvent();
    /*0xf396e4*/ void InitalizeHero(PTShare.Define.SHero _hero, int _type, bool _bLeave, bool _bViewArrow);
    /*0xf419f4*/ void InitalizeHero_Dungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus, int _type, bool _bLeave, bool _bViewArrow);
    /*0xf41534*/ void InitalizeHero(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _sStatBonus, bool _initalize);
    /*0xf42650*/ void InitalizeHeroNoVoice(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _sStatBonus, bool _initalize);
    /*0xf2cb10*/ void InitalizeBook(TableData.TableData_Unitbase _base, bool _viewArrow);
    /*0xf42ad8*/ void InitalizeBook(TableData.TableData_Unitbase _base);
    /*0xf42900*/ void InitalizeUnitList();
    /*0xf42ff8*/ void InitializeMercenary(long _playerid, PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, bool _exceptionMercenary);
    /*0xf43138*/ void InitializeMercenary(long _playerid, PTShare.Define.SHero _hero, System.Collections.Generic.List<PTShare.Define.SHero> _arrowList, PTShare.Define.SStatBonus _statbonus, bool _exceptionMercenary);
    /*0xf43458*/ void InitializeGuildWarTroop(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus);
    /*0xf43584*/ void ChangeMercenary(PTShare.Define.SHero _hero);
    /*0xf4366c*/ void InitalizeMaze(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, bool _bViewArrow);
    /*0xf43844*/ void InitalizeMaze(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus);
    /*0xf43938*/ void InitalizeDungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus, bool _bViewArrow);
    /*0xf43b10*/ void InitalizeDungeon(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statbonus);
    /*0xf43c04*/ void InitalizeInfo(TableData.TableData_Unitbase _base, int grade);
    /*0xf43e84*/ void InitalizeInfo(TableData.TableData_Skinbasic _skin);
    /*0xf43c9c*/ void InitalizeInfo(PTShare.Define.SHero _hero);
    /*0xf44000*/ void HandlerRefreshStoryRedDot();
    /*0xf44004*/ void HandlerEquipmentHero(PTShare.Define.SHero _hero);
    /*0xf44248*/ void HandlerLevelupHero(PTShare.Define.SHero _hero);
    /*0xf44380*/ void HandlerUnEquipEvent(PTShare.Define.SEquip _equip);
    /*0xf44498*/ void HandlerUnEquipArtifactEvent(PTShare.Define.SHero _hero);
    /*0xf44524*/ void HandlerChangeEquipment(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0xf445a0*/ void HandlerChangeSignature(int _heroId);
    /*0xf4467c*/ void HandlerPromoteEquipment(PTShare.Define.SHero _hero, PTShare.Define.SEquip _equip);
    /*0xf44724*/ void HandlerChangeSkin();
    /*0xf4449c*/ void CallbackUnequipHero(PTShare.Define.SHero _hero);
    /*0xf447c4*/ void HandlerReturnMercenary();
    /*0xf447d0*/ void OnClickLockButton();
    /*0xf448e4*/ void CallbackLockEvent(PTShare.Define.SHero _hero);
    /*0xf44a8c*/ void OnClickArrow(bool _isLeft);
    /*0xf417ec*/ void OnEnableEquipment();
    /*0xf42030*/ void RefreshEquipGroup(bool isEquipEffect);
    /*0xf42ee8*/ void OnEnableSkill();
    /*0xf4205c*/ void RefreshSkillGroup();
    /*0xf44e58*/ void SetActiveButton(HeroManagePopup.HeroMenuType _type);
    /*0xf44f70*/ void ClearActiveContents();
    /*0xf42574*/ void SetActiveBottomMenu(HeroManagePopup.HeroMenuType[] _type);
    /*0xf42498*/ void SetDeActiveBottomMenu(HeroManagePopup.HeroMenuType[] _type);
    /*0xf4135c*/ void SetActiveContents();
    /*0xf450e8*/ void InitalizeCharacter(TableData.TableData_Unitbase unitbase);
    /*0xf41aa8*/ void SetBackground(int _index);
    /*0xf41d34*/ void SetFrame(int initGrade);
    /*0xf41f48*/ void SetLockIcon(int _index);
    /*0xf4218c*/ void SetIllustView(bool _bEnable);
    /*0xf452b4*/ System.Collections.IEnumerator CoIllustDissolve(float _fSpeed);
    /*0xf42e10*/ void SetHeroInfo();
    /*0xf420bc*/ void SetStoryRedDot();
    /*0xf45330*/ void OnClickDemo();
    /*0xf453b0*/ void OnClickCharacter();
    /*0xf45448*/ void OnClickStory();
    /*0xf45504*/ void OnClickIllustViewer();
    /*0xf4551c*/ void OnClickCamera();
    /*0xf45668*/ void OnClickSkin();
    /*0xf45700*/ void OnClickAbility();
    /*0xf40ac8*/ void ClearStatusUI();
    /*0xf3fe54*/ void StopParticle();
    /*0xf44328*/ void ViewLevelUpParticle();
    /*0xf44d7c*/ PTShare.Define.SHero GetAnotherHero(bool _isPrevious);
    /*0xf42fc4*/ System.Collections.Generic.List<TableData.TableData_Unitbase> GetSortGradeUnit(HEROGRADE _type);
    /*0xf45848*/ void SortUnitList(System.Collections.Generic.List<TableData.TableData_Unitbase> _liUnit);
    /*0xf43f28*/ System.Collections.IEnumerator CoCharacterEnter();
    /*0xf43f94*/ System.Collections.IEnumerator CoCharacterSkill();
    /*0xf418ac*/ void PlayHeroVoice();
    /*0xf440d4*/ void ShowEquipChangeStatEffect(PTShare.Define.SHero oldHero, PTShare.Define.SHero newHero);
    /*0xf455fc*/ System.Collections.IEnumerator CoPermission();
    /*0xf45a6c*/ bool <InitializeMercenary>b__69_1(PTShare.Define.SHero x);
    /*0xf45a9c*/ void <OnClickAbility>b__116_0();

    enum HeroMenuType
    {
        None = 0,
        Skill = 1,
        Hero = 2,
        Story = 3,
        Demo = 4,
        Camera = 5,
        Skin = 6,
        End = 7,
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ TableData.TableData_Unitbase _base;

        /*0x105c088*/ <>c__DisplayClass65_0();
        /*0x105c090*/ bool <InitalizeBook>b__0(TableData.TableData_Unitbase x);
    }

    class <>c
    {
        static /*0x0*/ HeroManagePopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__67_0;
        static /*0x10*/ System.Predicate<PTShare.Define.SHero> <>9__69_0;
        static /*0x18*/ System.Comparison<TableData.TableData_Unitbase> <>9__122_0;
        static /*0x20*/ System.Func<TableData.TableData_Skillbase, int> <>9__124_0;
        static /*0x28*/ System.Func<System.Linq.IGrouping<int, TableData.TableData_Skillbase>, TableData.TableData_Skillbase> <>9__124_1;
        static /*0x30*/ System.Func<bool> <>9__127_0;

        static /*0x105b370*/ <>c();
        /*0x105b3d0*/ <>c();
        /*0x105b3d8*/ bool <InitalizeUnitList>b__67_0(TableData.TableData_Unitbase x);
        /*0x105b490*/ bool <InitializeMercenary>b__69_0(PTShare.Define.SHero x);
        /*0x105b4b0*/ int <SortUnitList>b__122_0(TableData.TableData_Unitbase a, TableData.TableData_Unitbase b);
        /*0x105b508*/ int <CoCharacterSkill>b__124_0(TableData.TableData_Skillbase x);
        /*0x105b520*/ TableData.TableData_Skillbase <CoCharacterSkill>b__124_1(System.Linq.IGrouping<int, TableData.TableData_Skillbase> y);
        /*0x105b56c*/ bool <CoPermission>b__127_0();
    }

    class <>c__DisplayClass72_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105c0c0*/ <>c__DisplayClass72_0();
        /*0x105c0c8*/ bool <InitalizeMaze>b__0(ConditionHeroData x);
    }

    class <>c__DisplayClass74_0
    {
        /*0x10*/ PTShare.Define.SHero _hero;

        /*0x105c100*/ <>c__DisplayClass74_0();
        /*0x105c108*/ bool <InitalizeDungeon>b__0(ConditionHeroData x);
    }

    class <CoIllustDissolve>d__107 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fSpeed;
        /*0x28*/ HeroManagePopup <>4__this;
        /*0x30*/ float <_fTime>5__2;

        /*0x105ca00*/ <CoIllustDissolve>d__107(int <>1__state);
        /*0x105ca2c*/ void System.IDisposable.Dispose();
        /*0x105ca30*/ bool MoveNext();
        /*0x105cb2c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105cb34*/ void System.Collections.IEnumerator.Reset();
        /*0x105cb74*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCharacterEnter>d__123 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManagePopup <>4__this;

        /*0x105c140*/ <CoCharacterEnter>d__123(int <>1__state);
        /*0x105c16c*/ void System.IDisposable.Dispose();
        /*0x105c170*/ bool MoveNext();
        /*0x105c450*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105c458*/ void System.Collections.IEnumerator.Reset();
        /*0x105c498*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCharacterSkill>d__124 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManagePopup <>4__this;
        /*0x28*/ int <skillCount>5__2;
        /*0x2c*/ int <i>5__3;

        /*0x105c4a0*/ <CoCharacterSkill>d__124(int <>1__state);
        /*0x105c4cc*/ void System.IDisposable.Dispose();
        /*0x105c4d0*/ bool MoveNext();
        /*0x105c9b0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105c9b8*/ void System.Collections.IEnumerator.Reset();
        /*0x105c9f8*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass127_0
    {
        /*0x10*/ bool bFirst;

        /*0x105b574*/ <>c__DisplayClass127_0();
        /*0x105b57c*/ void <CoPermission>b__1(bool result);
    }

    class <CoPermission>d__127 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroManagePopup <>4__this;

        /*0x105cb7c*/ <CoPermission>d__127(int <>1__state);
        /*0x105cba8*/ void System.IDisposable.Dispose();
        /*0x105cbac*/ bool MoveNext();
        /*0x105d044*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x105d04c*/ void System.Collections.IEnumerator.Reset();
        /*0x105d08c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroResonanceLevelupPopup : GuiBase
{
    /*0x40*/ HeroSlotInventory m_heroSlot;
    /*0x48*/ LocalizeString m_level;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_levelUpSkeleton;
    /*0x58*/ ParticleBase m_particleEffect;

    /*0x122e4c8*/ HeroResonanceLevelupPopup();
    /*0x122e258*/ void OnCreate();
    /*0x122e25c*/ void OnDelete();
    /*0x122e260*/ void OnEnter();
    /*0x122e264*/ void OnFinish();
    /*0x122e268*/ void OnLeave();
    /*0x122e26c*/ void OnStart();
    /*0x122e270*/ void InitializeWindow(PTShare.Define.SHero _hero);
    /*0x122e45c*/ System.Collections.IEnumerator CoScaleTween();

    class <CoScaleTween>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonanceLevelupPopup <>4__this;

        /*0x1060e9c*/ <CoScaleTween>d__11(int <>1__state);
        /*0x1060ec8*/ void System.IDisposable.Dispose();
        /*0x1060ecc*/ bool MoveNext();
        /*0x1061018*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1061020*/ void System.Collections.IEnumerator.Reset();
        /*0x1061060*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroResonanceRemovePopup : GuiBase
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x40*/ HeroSlotInventory m_BeforeSlot;
    /*0x48*/ HeroSlotInventory m_AfterSlot;
    /*0x50*/ LocalizeString m_BeforeLevel;
    /*0x58*/ LocalizeString m_AfterLevel;
    /*0x60*/ int nHeroid;

    static /*0x122ebe8*/ HeroResonanceRemovePopup();
    static /*0x122e4d0*/ void add_OnConfirmEvent(System.Action value);
    static /*0x122e5c4*/ void remove_OnConfirmEvent(System.Action value);
    /*0x122ebe0*/ HeroResonanceRemovePopup();
    /*0x122e6b8*/ void OnCreate();
    /*0x122e6bc*/ void OnDelete();
    /*0x122e720*/ void OnEnter();
    /*0x122e78c*/ void OnFinish();
    /*0x122e790*/ void OnLeave();
    /*0x122e794*/ void OnStart();
    /*0x122e798*/ void InitializeWindow(PTShare.Define.SResonanceHero _hero);
    /*0x122e9b0*/ void OnClick_Confirm();
    /*0x122ead4*/ void OnClick_Exit();
    /*0x122eb54*/ void CallbackSendPop();
}

class HeroResonanceSelectPopup : GuiBase
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x40*/ HeroInventoryPage_SelectResonance m_ResonancePage;
    /*0x48*/ int nSlotIndex;

    static /*0x122f358*/ HeroResonanceSelectPopup();
    static /*0x122ebec*/ void add_OnConfirmEvent(System.Action value);
    static /*0x122ece0*/ void remove_OnConfirmEvent(System.Action value);
    /*0x122f350*/ HeroResonanceSelectPopup();
    /*0x122edd4*/ void OnCreate();
    /*0x122edd8*/ void OnDelete();
    /*0x122ee3c*/ void OnEnter();
    /*0x122eea8*/ void OnFinish();
    /*0x122eeac*/ void OnLeave();
    /*0x122eeb0*/ void OnStart();
    /*0x122eeb4*/ void OnExit();
    /*0x122ef30*/ void InitializeWindow(int _nSlotIndex);
    /*0x122ef58*/ void OnClick_Confirm();
    /*0x122f26c*/ void CallbackSendPush(PTShare.Define.SHero _hero);
    /*0x122f35c*/ void <OnClick_Confirm>b__13_0(bool result);
}

class HeroResonatingPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_characterListGroup;
    /*0x48*/ CurrencyTopWindow m_CurrencyTopWindow;
    /*0x50*/ ScrollContent_HeroResonanceSlot m_ScrollContent;
    /*0x58*/ LocalizeString m_ResonanceCount;
    /*0x60*/ System.Collections.Generic.List<HeroResonanceCharacter> m_liHeroCharacter;
    /*0x68*/ UnityEngine.UI.Button m_unlimitButton;
    /*0x70*/ UnityEngine.GameObject m_crystalListGroup;
    /*0x78*/ System.Collections.Generic.List<ResonanceCrystalEntity> m_liCrystalEntity;
    /*0x80*/ HeroNeedItemWindow m_needMaterial;
    /*0x88*/ UnityEngine.UI.Button m_levelButton;
    /*0x90*/ UnityEngine.GameObject m_levelGroup;
    /*0x98*/ UnityEngine.GameObject m_cpParent;
    /*0xa0*/ LocalizeString m_cpText;
    /*0xa8*/ LocalizeString m_lvText;
    /*0xb0*/ LocalizeString m_levelBtnText;
    /*0xb8*/ ParticleBase m_unlimitParticle;
    /*0xc0*/ ParticleBase m_levelupParticle;
    /*0xc8*/ AtlasImage m_whiteEffect;
    /*0xd0*/ System.Collections.Generic.List<int> liResonanceSlotSort;
    /*0xd8*/ System.Collections.Generic.List<Rewards> liCrystalMaterials;
    /*0xe0*/ System.Collections.IEnumerator ieCrystalAnim;
    /*0xe8*/ bool bIsPlayingAnimation;

    /*0x1232220*/ HeroResonatingPopup();
    /*0x12302a0*/ System.Collections.Generic.List<PTShare.Define.SResonanceHero> get_liResonanceHero();
    /*0x1230320*/ int get_nOpenResonanceCount();
    /*0x12303a0*/ int get_nHeroTableCount();
    /*0x12303f8*/ void OnCreate();
    /*0x12303fc*/ void OnDelete();
    /*0x1230400*/ void OnEnter();
    /*0x12307bc*/ void OnFinish();
    /*0x12307c0*/ void OnLeave();
    /*0x1230a38*/ void OnStart();
    /*0x1230a3c*/ void OnExit();
    /*0x1230b28*/ void InitializeWindow();
    /*0x1231298*/ void InitializeCrystal();
    /*0x1231004*/ void InitializeScroll(bool _bResetScroll);
    /*0x1231760*/ void HandlerScrollContent(int _nIndex, HeroResonanceSlot _obj);
    /*0x1230f2c*/ void SetView();
    /*0x1231360*/ void SetResonanceCharacter();
    /*0x12314b0*/ void RefreshLevelText();
    /*0x12311f4*/ void RefreshTotalPower();
    /*0x12316c8*/ void RefreshMaterial();
    /*0x123188c*/ void OnClick_Help();
    /*0x123198c*/ void OnClick_Unlimit();
    /*0x1231b90*/ void OnClick_LevelUp();
    /*0x1231df0*/ void OnClick_IncreaseSlot();
    /*0x1231ec0*/ void OnClick_Ability();
    /*0x12312bc*/ void InitializeCrystalAnims();
    /*0x1232028*/ System.Collections.IEnumerator CoCrystalAnim();
    /*0x1232094*/ void InitializeCrystalUnlimitAnims();
    /*0x12320e8*/ System.Collections.IEnumerator CoCrystalUnlimitAnim();
    /*0x1232154*/ void HandlerChangeSlotEvent();
    /*0x1232184*/ void HandlerChangeHeroEvent(PTShare.Define.SHero hero);
    /*0x12322d8*/ void <OnExit>b__34_0();
    /*0x12322e0*/ void <OnClick_Unlimit>b__45_0(bool ok);
    /*0x1232418*/ void <OnClick_LevelUp>b__46_0();
    /*0x12325bc*/ void <OnClick_LevelUp>b__46_1();
    /*0x1232668*/ void <OnClick_IncreaseSlot>b__47_0();
    /*0x123274c*/ void <OnClick_IncreaseSlot>b__47_1();

    class <>c__DisplayClass37_0
    {
        /*0x10*/ int i;

        /*0x1061604*/ <>c__DisplayClass37_0();
        /*0x106160c*/ bool <InitializeScroll>b__0(PTShare.Define.SResonanceHero x);
    }

    class <>c__DisplayClass46_0
    {
        /*0x10*/ int count;
        /*0x18*/ HeroResonatingPopup <>4__this;

        /*0x1061630*/ <>c__DisplayClass46_0();
        /*0x1061638*/ void <OnClick_LevelUp>b__2();
    }

    class <>c
    {
        static /*0x0*/ HeroResonatingPopup.<> <>9;
        static /*0x8*/ System.Action <>9__48_0;
        static /*0x10*/ System.Action<ResonanceCrystalEntity> <>9__50_0;

        static /*0x10614dc*/ <>c();
        /*0x106153c*/ <>c();
        /*0x1061544*/ void <OnClick_Ability>b__48_0();
        /*0x10615d8*/ void <CoCrystalAnim>b__50_0(ResonanceCrystalEntity x);
    }

    class <CoCrystalAnim>d__50 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonatingPopup <>4__this;
        /*0x28*/ float <fTime>5__2;

        /*0x1061720*/ <CoCrystalAnim>d__50(int <>1__state);
        /*0x106174c*/ void System.IDisposable.Dispose();
        /*0x1061750*/ bool MoveNext();
        /*0x1061b94*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1061b9c*/ void System.Collections.IEnumerator.Reset();
        /*0x1061bdc*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoCrystalUnlimitAnim>d__52 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroResonatingPopup <>4__this;
        /*0x28*/ float <fTime>5__2;
        /*0x2c*/ int <i>5__3;

        /*0x1061be4*/ <CoCrystalUnlimitAnim>d__52(int <>1__state);
        /*0x1061c10*/ void System.IDisposable.Dispose();
        /*0x1061c14*/ bool MoveNext();
        /*0x1062094*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x106209c*/ void System.Collections.IEnumerator.Reset();
        /*0x10620dc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroSkillupPopup : GuiBase
{
    static /*0x0*/ System.Action OnConfirmEvent;
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ LocalizeString m_TotalPower;
    /*0x50*/ HeroSkillupWindow m_SkillupWindow;
    /*0x58*/ HeroNeedItemWindow m_NeedItemGroup;
    /*0x60*/ PTShare.Define.SHero m_HeroInfo;
    /*0x68*/ TableData.TableData_Unitbase m_BaseInfo;
    /*0x70*/ TableData.TableData_Unitlv m_UnitlvInfo;

    static /*0x12355ec*/ HeroSkillupPopup();
    static /*0x1234f30*/ void add_OnConfirmEvent(System.Action value);
    static /*0x1235024*/ void remove_OnConfirmEvent(System.Action value);
    /*0x12355e4*/ HeroSkillupPopup();
    /*0x1235118*/ void OnCreate();
    /*0x123511c*/ void OnDelete();
    /*0x1235180*/ void OnEnter();
    /*0x1235184*/ void OnStart();
    /*0x1235188*/ void OnFinish();
    /*0x123518c*/ void OnLeave();
    /*0x1235190*/ void OnExit();
    /*0x123520c*/ void InitalizeHeroSkill(PTShare.Define.SHero _hero);
    /*0x123539c*/ void SetTitle(string _str);
    /*0x12352f4*/ void SetTotalPower();
    /*0x1235520*/ void OnConfirm();
    /*0x1235494*/ long GetPlusTotalPower();
}

class HeroSkinPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_Parent;
    /*0x48*/ UnityEngine.GameObject m_FrontGround;
    /*0x50*/ UnityEngine.CanvasGroup m_LetterBoxCanvas;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_DoorSkeleton;
    /*0x60*/ Spine.Unity.SkeletonGraphic m_SkinGraphic;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_SDMirrorGraphic;
    /*0x70*/ Spine.Unity.SkeletonGraphic m_SDGraphic;
    /*0x78*/ System.Collections.Generic.List<SkinInfoSlot> m_liSkinInfoSlot;
    /*0x80*/ LocalizeString m_SkinName;
    /*0x88*/ UnityEngine.UI.Button m_EquipButton;
    /*0x90*/ UnityEngine.UI.Button m_BuyButton;
    /*0x98*/ LocalizeString m_EquipBtnText;
    /*0xa0*/ LocalizeString m_BuyBtnText;
    /*0xa8*/ PTShare.Define.SHero heroInfo;
    /*0xb0*/ System.Collections.Generic.List<TableData.TableData_Unitbase> liSkinUnitInfo;
    /*0xb8*/ TableData.TableData_Unitbase unitBaseInfo;
    /*0xc0*/ bool bIsPlayingAnimation;
    /*0xc4*/ int nCurrentIndex;
    /*0xc8*/ bool bIsBuy;
    /*0xc9*/ bool bIsBook;

    /*0x126a778*/ HeroSkinPopup();
    /*0x126875c*/ void OnCreate();
    /*0x1268760*/ void OnDelete();
    /*0x1268764*/ void OnEnter();
    /*0x1268768*/ void OnFinish();
    /*0x126876c*/ void OnLeave();
    /*0x1268914*/ void OnStart();
    /*0x1268918*/ void OnExit();
    /*0x1268b14*/ void InitializeSkin(TableData.TableData_Unitbase unitBase, bool initialize, bool isBook);
    /*0x12693ac*/ void InitializeFastSkin(TableData.TableData_Unitbase unitBase, int nIndex, bool isBook);
    /*0x1268cf8*/ void OnInitializeAnimation();
    /*0x12689a4*/ void OnExitAnimation();
    /*0x12696b8*/ void AnimationState_CompleteOpen(Spine.TrackEntry trackEntry);
    /*0x12696f0*/ void AnimationState_CompleteClose(Spine.TrackEntry trackEntry);
    /*0x1269778*/ void AnimationState_EventOpen(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x126980c*/ void AnimationState_EventClose(Spine.TrackEntry trackEntry, Spine.Event e);
    /*0x1269628*/ System.Collections.IEnumerator CoLetterAlpha(float fMaximumTime, bool bIsUp);
    /*0x1268c94*/ void Release();
    /*0x1268f00*/ void RefreshSkeleton();
    /*0x1269944*/ void SetSkeleton(Spine.Unity.SkeletonGraphic graphics, Spine.Unity.SkeletonDataAsset asset);
    /*0x12690c0*/ void RefreshSkinSlot();
    /*0x1269a5c*/ void RefreshButton();
    /*0x1269e0c*/ void OnSlotClickCallback(int unitID);
    /*0x1269f50*/ void OnClick_Arrow(bool bIsLeft);
    /*0x126a030*/ void OnClick_Equip();
    /*0x126a2d8*/ void OnClick_Buy();
    /*0x126a444*/ void OnClick_Experience();
    /*0x126a514*/ void OnEquipCallback();
    /*0x126a6d8*/ void OnBuyCallback(bool isBuy);
    /*0x126a5b0*/ void PlayHeroVoice();
    /*0x126a780*/ bool <InitializeSkin>b__27_0(TableData.TableData_Unitbase x);
    /*0x126a7bc*/ bool <InitializeFastSkin>b__28_0(TableData.TableData_Unitbase x);

    class <CoLetterAlpha>d__35 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool bIsUp;
        /*0x28*/ HeroSkinPopup <>4__this;
        /*0x30*/ float fMaximumTime;
        /*0x34*/ float <fTime>5__2;

        /*0x106354c*/ <CoLetterAlpha>d__35(int <>1__state);
        /*0x1063578*/ void System.IDisposable.Dispose();
        /*0x106357c*/ bool MoveNext();
        /*0x10636ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x10636b4*/ void System.Collections.IEnumerator.Reset();
        /*0x10636f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass41_0
    {
        /*0x10*/ int unitID;

        /*0x1063520*/ <>c__DisplayClass41_0();
        /*0x1063528*/ bool <OnSlotClickCallback>b__0(TableData.TableData_Unitbase x);
    }
}

class HeroStatusInfomationPopup : GuiBase
{
    /*0x40*/ StatusInfomationSubWindow m_StatusWindow;

    /*0x126efe8*/ HeroStatusInfomationPopup();
    /*0x126eec8*/ void OnCreate();
    /*0x126eecc*/ void OnDelete();
    /*0x126eed0*/ void OnEnter();
    /*0x126ef3c*/ void OnFinish();
    /*0x126ef40*/ void OnLeave();
    /*0x126ef44*/ void OnStart();
    /*0x126ef48*/ void OnExit();
    /*0x126efc4*/ void InitializePopup(PTShare.Define.SHero _hero, PTShare.Define.SStatBonus _statBonus);
}

class HeroTroopPopup_GuildWar : HeroTroopPopup_New
{
    /*0x188*/ BattleGuildWarTopUI m_BattleTopUI;
    /*0x190*/ TroopCharacterViewGroup_New m_AllyGroup_Support;
    /*0x198*/ UnityEngine.RectTransform m_TopUnitViewTrans;
    /*0x1a0*/ UnityEngine.GameObject m_goMainSelectButtonImage;
    /*0x1a8*/ UnityEngine.GameObject m_goSupportSelectButtonImage;
    /*0x1b0*/ UnityEngine.GameObject m_goMainSelectButton;
    /*0x1b8*/ UnityEngine.GameObject m_goSupportSelectButton;
    /*0x1c0*/ UnityEngine.GameObject m_goFormationSelectButton;
    /*0x1c8*/ UnityEngine.GameObject m_goAutoTroopButton;
    /*0x1d0*/ UnityEngine.GameObject m_goEmptyAllButton;
    /*0x1d8*/ UIScreenEffectSpine m_ScreenFadeSpine;
    /*0x1e0*/ UnityEngine.UI.Text m_UnitCountText_Ally;
    /*0x1e8*/ UnityEngine.UI.Text m_UnitCountText_Enemy;
    /*0x1f0*/ UnityEngine.GameObject m_goSupportButtonRedDot;
    /*0x1f8*/ System.Collections.Generic.List<int> CurTableIDList_Support;
    /*0x200*/ System.Collections.Generic.List<int> CurHeroIDList_Support;
    /*0x208*/ System.Collections.Generic.List<long> CurPlayerIDList_Support;
    /*0x210*/ System.Collections.Generic.List<int> m_lisFormationIndex;
    /*0x218*/ System.Collections.Generic.List<int> m_lisFormationClass;
    /*0x220*/ TableData.TableData_Guildwartactic m_tFormationData;
    /*0x228*/ PTShare.Define.GuildWarPosition m_eDeckPositionType;
    /*0x22c*/ bool m_bSupportMode;
    /*0x22d*/ bool <IsTroopCaptain>k__BackingField;
    /*0x230*/ int m_nCurrentFormationID;
    /*0x234*/ bool m_bMemorizeSupportMode;
    /*0x235*/ bool m_bSupportModeChanging;

    /*0x1276f08*/ HeroTroopPopup_GuildWar();
    /*0x12702c4*/ System.Collections.Generic.List<int> get_CurTableIDList();
    /*0x12702e0*/ System.Collections.Generic.List<int> get_CurHeroIDList();
    /*0x12702fc*/ System.Collections.Generic.List<long> get_CurPlayerIDList();
    /*0x1270318*/ TroopCharacterViewGroup_New get_m_CurrentAllyGroup();
    /*0x1270334*/ bool get_IsTroopCaptain();
    /*0x127033c*/ void set_IsTroopCaptain(bool value);
    /*0x1270348*/ void SetAutoTroop();
    /*0x1270abc*/ void OnClickSave();
    /*0x1270d3c*/ void OpenFormationPopup();
    /*0x1270dd8*/ void StartBattle();
    /*0x1271818*/ void InitializePopup(Battle.GameModeType _eGameMode, bool _bTroopMode);
    /*0x1272444*/ void InitializePopup_GuildWar();
    /*0x127245c*/ void InitializePopupForTroopMode_GuildWar(System.Collections.Generic.List<PTShare.Define.SGuildWarHero> _lisHero, PTShare.Define.GuildWarPosition _eDeckType);
    /*0x1273048*/ void CheckStartInitialize();
    /*0x1273664*/ void LoadHero(Battle.GameModeType _eGameMode);
    /*0x1273ac4*/ void MemorizeSupportMode();
    /*0x1273ad0*/ void ReturnSupportModeToOrigin();
    /*0x1273adc*/ void ChangeSupportModeForRapidLogics(bool _bSupportMode);
    /*0x1273ae8*/ void SaveDeck();
    /*0x1274020*/ void SetUnitEmptyWithTableID(int _nUnitTableID);
    /*0x12741e8*/ void ResetSelectAll();
    /*0x1274440*/ Battle.HeroSelectValue[] ConvertCurrentHeroToHeroSelectArray();
    /*0x1273010*/ void SetActiveFormationButton(bool _bActive);
    /*0x1272358*/ void ChangeSupportModeNoDelay(bool _bSupportMode);
    /*0x1274704*/ void ToggleChangeSupportMode(bool _bMain);
    /*0x1274860*/ void SetTroopSetting(TroopSetting _setting);
    /*0x1274a00*/ TroopSetting AddNewTroopSetting(PTShare.Define.SHero _sHero, long _lPlayerID);
    /*0x1274e10*/ long SetPrivewEnemyAndReturnTotalPower(System.Collections.Generic.List<UnitSpawnInfo> _lisEnemyInfo);
    /*0x127526c*/ void LoadImportHeroList(System.Collections.Generic.List<Battle.HeroSelectValue> heroIDList);
    /*0x12729f8*/ void SetFormation(int _nFormationID, bool _bPlayer);
    /*0x12756a8*/ void InitializeSlotList();
    /*0x1275758*/ bool CheckUnitFully();
    /*0x1275834*/ void SetFactionBuffImage(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x1275838*/ void RefreshAllyPowerAndBuff();
    /*0x127604c*/ void SendUpdateMemberWarHeroId(System.Collections.Generic.List<PTShare.Define.SLegionHero> computes);
    /*0x1276388*/ bool IsNoHero();
    /*0x12716a8*/ bool IsAllUnitUsed();
    /*0x1276430*/ void SetBackgroundImage();
    /*0x1276490*/ void SetPreviewAllyCharacter(int _nIndex, int _nHeroID, long _lPlayerID, bool _bInitialized);
    /*0x127697c*/ void TradeUnitIndex(int _nUnitIndexA, int _nUnitIndexB);
    /*0x1276e04*/ void SetUnit(int _nTableID, int _nHeroID, long _lPlayerID, bool _bReverseSelect);
    /*0x1273920*/ void SetUnitCount();
    /*0x1275f88*/ void CheckSupportUnitEmpty();
    /*0x1277198*/ void <OnClickSave>b__36_0(bool x);
    /*0x12771a4*/ void <SaveDeck>b__48_1(System.Collections.Generic.List<PTShare.Define.SLegionHero> response);
    /*0x12771ac*/ void <SaveDeck>b__48_2(System.Collections.Generic.List<PTShare.Define.SLegionHero> response);
    /*0x1273c90*/ string <SaveDeck>g__GetUniqueIDs|48_0();
    /*0x12750f4*/ long <SetPrivewEnemyAndReturnTotalPower>g__GetHeroPower|58_0(int _nIndex, UnitSpawnInfo _spawnInfo);

    class <>c
    {
        static /*0x0*/ HeroTroopPopup_GuildWar.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SGuildWarHero> <>9__41_0;
        static /*0x10*/ System.Func<PTShare.Define.SGuildWarHero, bool> <>9__65_0;
        static /*0x18*/ System.Action<ChatApp.Shared.MessagePackObjects.WarJoinInfo> <>9__65_2;

        static /*0x10636fc*/ <>c();
        /*0x106375c*/ <>c();
        /*0x1063764*/ bool <InitializePopupForTroopMode_GuildWar>b__41_0(PTShare.Define.SGuildWarHero x);
        /*0x10637fc*/ bool <SendUpdateMemberWarHeroId>b__65_0(PTShare.Define.SGuildWarHero w);
        /*0x1063808*/ void <SendUpdateMemberWarHeroId>b__65_2(ChatApp.Shared.MessagePackObjects.WarJoinInfo f);
    }

    class <>c__DisplayClass55_0
    {
        /*0x10*/ HeroTroopPopup_GuildWar <>4__this;
        /*0x18*/ bool _bMain;

        /*0x106380c*/ <>c__DisplayClass55_0();
        /*0x1063814*/ void <ToggleChangeSupportMode>b__0();
    }

    class <>c__DisplayClass65_0
    {
        /*0x10*/ System.Collections.Generic.List<PTShare.Define.SLegionHero> computes;

        /*0x10638dc*/ <>c__DisplayClass65_0();
        /*0x10638e4*/ ChatApp.Shared.MessagePackObjects.WarJoinInfo <SendUpdateMemberWarHeroId>b__1(PTShare.Define.SGuildWarHero s);
    }

    class <>c__DisplayClass65_1
    {
        /*0x10*/ PTShare.Define.SGuildWarHero s;

        /*0x1063a38*/ <>c__DisplayClass65_1();
        /*0x1063a40*/ bool <SendUpdateMemberWarHeroId>b__3(PTShare.Define.SLegionHero f);
    }
}

class TroopSetting
{
    /*0x10*/ PTShare.Define.SHero heroData;
    /*0x18*/ int heroID;
    /*0x20*/ long playerID;
    /*0x28*/ int tableID;
    /*0x2c*/ bool isShade;
    /*0x2d*/ bool isSelected;
    /*0x2e*/ bool isMecenary;
    /*0x2f*/ bool isGuild;
    /*0x30*/ bool gw_isMain;
    /*0x31*/ bool gw_isSupport;
    /*0x32*/ bool gw_isCaptain;
    /*0x34*/ int gw_supportCount;
    /*0x38*/ string nickname;

    /*0x11282b4*/ TroopSetting(PTShare.Define.SHero _heroData);
    /*0x1128338*/ TroopSetting(PTShare.Define.SHero _heroData, long _nPlayerID);
}

class HeroTroopPopup_New : GuiBase
{
    static int NO_UNIT_ID = 0;
    static int DISENABLE_SLOT = -1;
    static int NO_EMPTY_INDEX = -1;
    static /*0x0*/ Battle.GameModeType <CurGameMode>k__BackingField;
    static /*0x4*/ bool <IsOpened>k__BackingField;
    static /*0x5*/ bool <IsTroopMode>k__BackingField;
    static /*0x6*/ bool m_bDefenseMode;
    static /*0x8*/ System.Action OnChangeTroopEvent;
    /*0x40*/ HeroInventoryPage_Composition_New m_HeroInventoryPage;
    /*0x48*/ ScrollContent_TroopTeamEntitySelector m_HeroTroopContent;
    /*0x50*/ TroopCharacterViewGroup_New m_AllyGroup;
    /*0x58*/ TroopCharacterViewGroup_New m_EnemyGroup;
    /*0x60*/ UnityEngine.GameObject m_SelectParent;
    /*0x68*/ UnityEngine.GameObject m_TroopPatent;
    /*0x70*/ UnityEngine.GameObject m_TeamTroopButton;
    /*0x78*/ UnityEngine.GameObject m_SaveButton;
    /*0x80*/ UnityEngine.GameObject m_BattleButton;
    /*0x88*/ UnityEngine.GameObject m_BattleHardButton;
    /*0x90*/ UnityEngine.GameObject m_backButton;
    /*0x98*/ AtlasImage m_TroopBtnFrame;
    /*0xa0*/ AtlasImage m_TroopBtnIcon;
    /*0xa8*/ UnityEngine.GameObject m_TroopEmptyText;
    /*0xb0*/ UnityEngine.GameObject m_SaveBtnEffect;
    /*0xb8*/ AtlasImage m_SaveBtnIcon;
    /*0xc0*/ UnityEngine.GameObject m_VsImage;
    /*0xc8*/ LocalizeString m_StageName;
    /*0xd0*/ UnityEngine.GameObject m_EnemyPowerParent;
    /*0xd8*/ LocalizeString m_TeamPowerAlly;
    /*0xe0*/ LocalizeString m_TeamPowerEnemy;
    /*0xe8*/ BuffIconSpread m_BuffSpreadAlly;
    /*0xf0*/ BuffIconSpread m_BuffSpreadEnemy;
    /*0xf8*/ UnityEngine.UI.Image m_BackgroundImage;
    /*0x100*/ UnityEngine.CanvasGroup m_FactionBuffEffectGroup;
    /*0x108*/ System.Collections.Generic.List<TroopFactionBuffSet> m_FactionBuffSetList;
    /*0x110*/ System.Collections.Generic.List<int> <CurTableIDList>k__BackingField;
    /*0x118*/ System.Collections.Generic.List<int> <CurHeroIDList>k__BackingField;
    /*0x120*/ System.Collections.Generic.List<long> <CurPlayerIDList>k__BackingField;
    /*0x128*/ System.Collections.Generic.Dictionary<System.ValueTuple<int, long>, TroopSetting> m_dicTroopSettings;
    /*0x130*/ PTShare.Define.STroop m_CurTroopInfo;
    /*0x138*/ System.Collections.Generic.List<Battle.HeroSelectValue> m_HeroSelectValues;
    /*0x140*/ bool m_bInitialized;
    /*0x141*/ bool m_bCheckUseMercenaries;
    /*0x142*/ bool m_bCannotUseMercenaries;
    /*0x148*/ long m_nCurTotalPowerAlly;
    /*0x150*/ long m_nCurTotalPowerEnemy;
    /*0x158*/ System.Collections.Generic.List<int> m_lisFactionBuffID;
    /*0x160*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisFactionBuffIcon;
    /*0x168*/ DG.Tweening.Sequence m_SeqBuffFactionGroup;
    /*0x170*/ UnityEngine.Vector3 m_vecOriginFactionBuffGroupPOS;
    /*0x180*/ PTShare.Define.STroop _sTroopInfo;

    static /*0x127cf8c*/ HeroTroopPopup_New();
    static /*0x1277204*/ Battle.GameModeType get_CurGameMode();
    static /*0x1277268*/ void set_CurGameMode(Battle.GameModeType value);
    static /*0x12772d0*/ bool get_IsOpened();
    static /*0x1277334*/ void set_IsOpened(bool value);
    static /*0x12773a0*/ bool get_IsTroopMode();
    static /*0x1277404*/ void set_IsTroopMode(bool value);
    static /*0x1277470*/ bool get_IsDefenseMode();
    static /*0x126fe08*/ void add_OnChangeTroopEvent(System.Action value);
    static /*0x126ff00*/ void remove_OnChangeTroopEvent(System.Action value);
    /*0x1277040*/ HeroTroopPopup_New();
    /*0x12771d4*/ System.Collections.Generic.List<int> get_CurTableIDList();
    /*0x12771dc*/ void set_CurTableIDList(System.Collections.Generic.List<int> value);
    /*0x12771e4*/ System.Collections.Generic.List<int> get_CurHeroIDList();
    /*0x12771ec*/ void set_CurHeroIDList(System.Collections.Generic.List<int> value);
    /*0x12771f4*/ System.Collections.Generic.List<long> get_CurPlayerIDList();
    /*0x12771fc*/ void set_CurPlayerIDList(System.Collections.Generic.List<long> value);
    /*0x12774d4*/ int get_MaxHeroCount();
    /*0x12774dc*/ TroopCharacterViewGroup_New get_m_CurrentAllyGroup();
    /*0x12774e4*/ TroopCharacterViewGroup_New get_m_CurrentEnemyGroup();
    /*0x12774ec*/ System.Collections.Generic.List<PTShare.Define.STroop> get_GetTroopList();
    /*0x127756c*/ void OnCreate();
    /*0x1277570*/ void OnDelete();
    /*0x12775d4*/ void OnEnter();
    /*0x127791c*/ void OnFinish();
    /*0x12779d8*/ void OnLeave();
    /*0x1277bb4*/ void OnStart();
    /*0x1271810*/ void OnExitBase();
    /*0x1277bb8*/ void OnExit();
    /*0x12719d0*/ void InitializePopup(Battle.GameModeType _eGameMode, bool _bDefenseMode);
    /*0x1272928*/ void InitializePopupForTroopMode(PTShare.Define.STroop _troop, Battle.GameModeType _eGameMode);
    /*0x1273430*/ void CheckStartInitialize();
    /*0x1278848*/ void InitializeSlotList();
    /*0x1278168*/ void CheckUseMercenary();
    /*0x1278954*/ void SetFactionBuffImage(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x1278e70*/ long SetPrivewEnemyAndReturnTotalPower(System.Collections.Generic.List<UnitSpawnInfo> _lisEnemyInfo);
    /*0x1279678*/ void RefreshAllyPowerAndBuff();
    /*0x1279a70*/ void SetBackgroundImage();
    /*0x1279b54*/ void LoadHero(Battle.GameModeType _eGameMode);
    /*0x127a244*/ void LoadImportHeroList(System.Collections.Generic.List<Battle.HeroSelectValue> heroIDList);
    /*0x1279f84*/ void LoadTroopHero();
    /*0x1278534*/ void SetActiveUI(bool _enable);
    /*0x1277de0*/ void SetActiveSaveButton(bool _enable);
    /*0x1277ed0*/ void SetActiveContent(bool _isHeroSelectView);
    /*0x127a75c*/ void StartBattle();
    /*0x127af54*/ void ShowBattleMainWindow();
    /*0x127afc8*/ void OnClickSave();
    /*0x12742a8*/ void ResetSelectAll();
    /*0x127bd54*/ void OnClickTroopTeam();
    /*0x127bd98*/ void OnClickTroopSave();
    /*0x127a618*/ void InitializeScroll(bool _moveTop);
    /*0x127bee4*/ void HandlerScrollContent(int _index, TroopTeamEntitySelector _obj);
    /*0x127bfa4*/ void HandlerSelectTroop(PTShare.Define.STroop _troop);
    /*0x127c004*/ void CallbackSuccessMakeTroop();
    /*0x127c0ac*/ void CallbackSuccessSaveTroop();
    /*0x127c12c*/ void HandleOnClick(PTShare.Define.SHero _hero);
    /*0x127c130*/ void HandlerRefresh();
    /*0x127c1c0*/ bool IsNoHero();
    /*0x12741c8*/ void RenewInventory();
    /*0x1276e2c*/ void SetUnit(int _nTableID, int _nHeroID, long _lPlayerID, bool _bReverseSelect);
    /*0x127c2a8*/ void SetTroopSetting(TroopSetting _setting);
    /*0x1275570*/ void SetAllTroopSettings();
    /*0x127c4b0*/ TroopSetting GetTroopSetting(int _nHeroID, long _lPlayerID);
    /*0x1274d20*/ TroopSetting AddNewTroopSetting(PTShare.Define.SHero _sHero, long _lPlayerID);
    /*0x1276504*/ void SetPreviewAllyCharacter(int _nIndex, int _nHeroID, long _lPlayerID, bool _bInitialized);
    /*0x127c9a8*/ bool CheckUnitFully();
    /*0x127ca94*/ void RenewPreviewUnitLevel();
    /*0x127cbc8*/ void SetUnitEmptyWithTableID(int _nUnitTableID);
    /*0x1274158*/ void SetUnitEmptyWithIndex(int _nIndex);
    /*0x1276b10*/ void TradeUnitIndex(int _nUnitIndexA, int _nUnitIndexB);
    /*0x127bb50*/ bool IsEmptyUnitList(System.Collections.Generic.List<int> targetList);
    /*0x127ccbc*/ int GetEmptyIndex();
    /*0x127c84c*/ void SetIndex(int _nIndex, int _nUnitTableID, int _nUnitHeroID, long _lPlayerID);
    /*0x127bbec*/ string ReturnAllayHeroIDListToString();
    /*0x127b5c0*/ bool IsConditionSaveTroop();
    /*0x127cda8*/ Battle.HeroSelectValue[] ConvertCurrentHeroToHeroSelectArray();
    /*0x127a100*/ Battle.HeroSelectValue[] ConvertCurrentHeroToHeroSelectArray(System.Collections.Generic.List<int> _heroids);
    /*0x12784c8*/ System.Collections.IEnumerator CoAutoMaze();
    /*0x127cf90*/ void <StartBattle>b__103_0(bool confirm);
    /*0x127cf9c*/ void <OnClickSave>b__105_0();
    /*0x127d040*/ void <OnClickSave>b__105_1();

    class <>c
    {
        static /*0x0*/ HeroTroopPopup_New.<> <>9;
        static /*0x8*/ System.Func<UnitSpawnInfo, int> <>9__94_0;
        static /*0x10*/ System.Func<int, string> <>9__132_0;
        static /*0x18*/ System.Predicate<int> <>9__133_0;

        static /*0x1063a70*/ <>c();
        /*0x1063ad0*/ <>c();
        /*0x1063ad8*/ int <SetPrivewEnemyAndReturnTotalPower>b__94_0(UnitSpawnInfo x);
        /*0x1063af0*/ string <ReturnAllayHeroIDListToString>b__132_0(int s);
        /*0x1063b58*/ bool <IsConditionSaveTroop>b__133_0(int x);
    }

    class <>c__DisplayClass102_0
    {
        /*0x10*/ HeroTroopPopup_New <>4__this;
        /*0x18*/ bool _isHeroSelectView;

        /*0x1063b64*/ <>c__DisplayClass102_0();
        /*0x1063b6c*/ void <SetActiveContent>b__0();
    }

    class <CoAutoMaze>d__136 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ HeroTroopPopup_New <>4__this;

        /*0x1063bdc*/ <CoAutoMaze>d__136(int <>1__state);
        /*0x1063c08*/ void System.IDisposable.Dispose();
        /*0x1063c0c*/ bool MoveNext();
        /*0x1063ce0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1063ce8*/ void System.Collections.IEnumerator.Reset();
        /*0x1063d28*/ object System.Collections.IEnumerator.get_Current();
    }
}

class HeroTroopPopup_PVE_Ranking : HeroTroopPopup_New
{
    /*0x188*/ LocalizeString m_TimeText;
    /*0x190*/ int m_nMaxHeroCount;
    /*0x198*/ System.Collections.Generic.List<int> m_lisFormationIndexList_Ally;
    /*0x1a0*/ System.Collections.Generic.List<int> m_lisFormationIndexList_Enemy;

    /*0x127dec0*/ HeroTroopPopup_PVE_Ranking();
    /*0x127d124*/ int get_MaxHeroCount();
    /*0x127d12c*/ void InitializePopupForPveRanking();
    /*0x127d200*/ void InitializeSlotList();
    /*0x127d3bc*/ void SetPreviewAllyCharacter(int _nIndex, int _nHeroID, long _lPlayerID, bool _bInitialized);
    /*0x127d590*/ long SetPrivewEnemyAndReturnTotalPower(System.Collections.Generic.List<UnitSpawnInfo> _lisEnemyInfo);
    /*0x127d360*/ void SetFormationWithChallengeData(TableData.TableData_Pvechallenge _challengeData);
    /*0x127dc88*/ void SetFormationWithIndexList(System.Collections.Generic.List<int> _lisFormationIndex, bool _bAlly);
    /*0x127dd18*/ int GetEmptyIndex();
    /*0x127de14*/ bool IsUseCurrentPositionIndex(int _nIndex);
    /*0x127dafc*/ void <SetFormationWithChallengeData>g__SetFormation|10_0(bool _bAlly, ref HeroTroopPopup_PVE_Ranking.<> );

    struct <>c__DisplayClass10_0
    {
        /*0x10*/ TableData.TableData_Pvechallenge _challengeData;
        /*0x18*/ HeroTroopPopup_PVE_Ranking <>4__this;
    }
}

class HeroTroopPopup_WorldBoss : HeroTroopPopup_New
{
    /*0x188*/ BuffIconSpread m_BuffSpreadAlly2;
    /*0x190*/ System.Collections.Generic.List<int> m_lisFactionBuffID2;

    static /*0x1308c90*/ void <SetFactionBuffImage>g__SetFactionBuffImageWithParams|4_0(Helper_FactionBuff.FactionBuffType _factionBuffType, BuffIconSpread _buffIconSpread, System.Collections.Generic.List<int> _lisFactionBuffID, int[] _arrUnitIDs);
    /*0x1308e48*/ HeroTroopPopup_WorldBoss();
    /*0x1308af8*/ int get_MaxHeroCount();
    /*0x1308b14*/ void SetFactionBuffImage(Helper_FactionBuff.FactionBuffType _eFactionBuffType, int[] _arrUnitID);
    /*0x1308dd0*/ void ShowBattleMainWindow();
    /*0x1308e44*/ void SetBackgroundImage();
}

enum HeroWagonType
{
    Reset = 0,
    Revert = 1,
    Dismiss = 2,
    FurnitrueDismiss = 3,
}

class HeroWagonPopup : GuiBase
{
    /*0x40*/ CurrencyTopWindow m_CurrencyTopWindow;
    /*0x48*/ UnityEngine.GameObject m_ResetGroup;
    /*0x50*/ UnityEngine.GameObject m_DismissGroup;
    /*0x58*/ UnityEngine.GameObject m_FurnitureDismissGroup;
    /*0x60*/ HeroResetSubWindow m_ResetSubWindow;
    /*0x68*/ HeroDismissSubWindow m_DismissSubWindow;
    /*0x70*/ FurnitureDismissWindow m_FurnitureDismissSubWindow;
    /*0x78*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liTapToggle;
    /*0x80*/ UnityEngine.GameObject m_housingButton;
    /*0x88*/ HeroWagonType eWagonType;
    /*0x8c*/ bool m_isPlayToggleSound;

    /*0x1309b40*/ HeroWagonPopup();
    /*0x1309008*/ void OnCreate();
    /*0x130900c*/ void OnDelete();
    /*0x1309010*/ void OnEnter();
    /*0x1309014*/ void OnFinish();
    /*0x1309018*/ void OnLeave();
    /*0x130901c*/ void OnStart();
    /*0x1309020*/ void OnExit();
    /*0x13090f4*/ void InitializePopup(HeroWagonType eType);
    /*0x1309168*/ void InitializeToggle();
    /*0x130945c*/ void OnClick_SlimeStore();
    /*0x1309510*/ void OnClick_HousingShop();
    /*0x13095e4*/ void RefreshCurrencyWindow();
    /*0x1309b48*/ void <OnExit>b__17_0();
    /*0x1309b50*/ void <OnClick_SlimeStore>b__20_0();
    /*0x1309c24*/ void <OnClick_SlimeStore>b__20_1();
    /*0x1309cb8*/ void <OnClick_HousingShop>b__21_0();

    class <>c__DisplayClass19_0
    {
        /*0x10*/ HeroWagonType type;
        /*0x18*/ HeroWagonPopup <>4__this;

        /*0x1063dbc*/ <>c__DisplayClass19_0();
        /*0x1063dc4*/ void <InitializeToggle>b__1(bool on);
    }

    class <>c
    {
        static /*0x0*/ HeroWagonPopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.UI.Toggle> <>9__19_0;

        static /*0x1063d30*/ <>c();
        /*0x1063d90*/ <>c();
        /*0x1063d98*/ void <InitializeToggle>b__19_0(UnityEngine.UI.Toggle x);
    }
}

class ImageBannerPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ChildObject;
    /*0x48*/ UnityEngine.UI.Extensions.HorizontalScrollSnap m_Scroll;
    /*0x50*/ System.Collections.Generic.List<AtlasImage> m_liBottomRing;
    /*0x58*/ UnityEngine.UI.Toggle m_DailyToggle;
    /*0x60*/ CustomButton m_leftArrow;
    /*0x68*/ CustomButton m_rightArrow;
    /*0x70*/ bool bIsInitialized;
    /*0x78*/ System.Collections.Generic.List<ImageBannerPopup.IBTexture> liIBTexture;
    /*0x80*/ System.Collections.IEnumerator ieUpdater;
    /*0x88*/ System.Action onExitCallback;

    /*0xd2200c*/ ImageBannerPopup();
    /*0xd219c8*/ void OnCreate();
    /*0xd219cc*/ void OnDelete();
    /*0xd219d0*/ void OnEnter();
    /*0xd219d4*/ void OnFinish();
    /*0xd219d8*/ void OnLeave();
    /*0xd21bb4*/ void OnStart();
    /*0xd21bb8*/ void OnExit();
    /*0xd21c10*/ void InitializePopup(System.Collections.Generic.List<PTShare.Define.SImageBanner> bannerlist, bool activeToggle, System.Action onExit);
    /*0xd219dc*/ void ReleasePopup();
    /*0xd21f64*/ void OnClick_Arrow(bool bIsRight);
    /*0xd21f18*/ void StartUpdate();
    /*0xd21fa0*/ System.Collections.IEnumerator CoUpdate();
    /*0xd22084*/ void <InitializePopup>b__18_0(PTShare.Define.SImageBanner x);

    class IBTexture : System.IDisposable
    {
        static /*0x0*/ string CachePath;
        /*0x10*/ UnityEngine.Sprite sprite;
        /*0x18*/ string texuri;
        /*0x20*/ string linkuri;

        static /*0xe4e470*/ IBTexture();
        static /*0xe4e384*/ void ExistCreateDirectory();
        /*0xe4e280*/ IBTexture(string texuri, string linkuri);
        /*0xe4e1b4*/ System.Collections.IEnumerator LoadTexture();
        /*0xe4e270*/ UnityEngine.Sprite GetSprite();
        /*0xe4e278*/ string GetURL();
        /*0xe4d990*/ void Dispose();

        class <LoadTexture>d__4 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
        {
            /*0x10*/ int <>1__state;
            /*0x18*/ object <>2__current;
            /*0x20*/ ImageBannerPopup.IBTexture <>4__this;
            /*0x28*/ string <path>5__2;
            /*0x30*/ UnityEngine.Networking.UnityWebRequest <www>5__3;

            /*0xd90014*/ <LoadTexture>d__4(int <>1__state);
            /*0xd90040*/ void System.IDisposable.Dispose();
            /*0xd90044*/ bool MoveNext();
            /*0xd90634*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
            /*0xd9063c*/ void System.Collections.IEnumerator.Reset();
            /*0xd9067c*/ object System.Collections.IEnumerator.get_Current();
        }
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ string data;

        /*0xe4dac4*/ <>c__DisplayClass18_0();
        /*0xe4dacc*/ bool <InitializePopup>b__1(PTShare.Define.SImageBanner x);
    }

    class <>c
    {
        static /*0x0*/ ImageBannerPopup.<> <>9;
        static /*0x8*/ System.Action<ImageBannerPopup.IBTexture> <>9__19_0;

        static /*0xe4d918*/ <>c();
        /*0xe4d978*/ <>c();
        /*0xe4d980*/ void <ReleasePopup>b__19_0(ImageBannerPopup.IBTexture x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ int nIndex;
        /*0x18*/ ImageBannerPopup <>4__this;

        /*0xe4dbd8*/ <>c__DisplayClass22_0();
        /*0xe4dbe0*/ void <CoUpdate>b__0();
    }

    class <CoUpdate>d__22 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ImageBannerPopup <>4__this;
        /*0x28*/ int <nTexCount>5__2;
        /*0x2c*/ int <i>5__3;
        /*0x30*/ UnityEngine.UI.Button <obj>5__4;

        /*0xe4dc60*/ <CoUpdate>d__22(int <>1__state);
        /*0xe4dc8c*/ void System.IDisposable.Dispose();
        /*0xe4dc90*/ bool MoveNext();
        /*0xe4e220*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4e228*/ void System.Collections.IEnumerator.Reset();
        /*0xe4e268*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ImageConfirmPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Button m_ButtonCancel;
    /*0x48*/ LocalizeString m_TitleText;
    /*0x50*/ LocalizeString m_ConfirmBtnText;
    /*0x58*/ LocalizeString m_CancelBtnText;
    /*0x60*/ LocalizeString m_ConfirmMessage;
    /*0x68*/ AtlasImage m_image;
    /*0x70*/ UnityEngine.Vector2 m_imageLimitSize;
    /*0x78*/ AtlasImage m_frame;
    /*0x80*/ UnityEngine.UI.ScrollRect m_scrollRect;
    /*0x88*/ bool m_EnableCancel;
    /*0x89*/ bool m_IsExitBackground;
    /*0x90*/ System.Action<bool> m_OnClickButton;

    /*0xd22cc8*/ ImageConfirmPopup();
    /*0xd22124*/ void OnCreate();
    /*0xd22128*/ void OnEnter();
    /*0xd2212c*/ void OnStart();
    /*0xd22130*/ void OnLeave();
    /*0xd22134*/ void OnDelete();
    /*0xd22138*/ void OnFinish();
    /*0xd2213c*/ void Init(AtlasType atlasType, string imagePath, System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0xd2282c*/ void Init(AtlasType imageType, string imagePath, AtlasType frameAtlas, string framePath, System.Action<bool> _callback, bool _IsYesNo, bool _IsBackgroundExit);
    /*0xd223c4*/ void SetImage(AtlasType atlasType, string imagePath);
    /*0xd22ad4*/ void SetFrame(AtlasType atlasType, string framePath);
    /*0xd22538*/ void SetText(LocalizeString _str, string _key);
    /*0xd22730*/ void SetActiveCancelButton(bool _enable);
    /*0xd22778*/ void SetActiveFrame(bool _enable);
    /*0xd2262c*/ string GetLocalizeStr(string _key);
    /*0xd22b94*/ void OnConfirm();
    /*0xd22c3c*/ void OnCancel();
    /*0xd22c9c*/ void OnExit();
    /*0xd22cb0*/ void OnExitBackground();
    /*0xd227c0*/ System.Collections.IEnumerator CoSetText();

    class <CoSetText>d__30 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ImageConfirmPopup <>4__this;

        /*0xe4e4e4*/ <CoSetText>d__30(int <>1__state);
        /*0xe4e510*/ void System.IDisposable.Dispose();
        /*0xe4e514*/ bool MoveNext();
        /*0xe4e574*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe4e57c*/ void System.Collections.IEnumerator.Reset();
        /*0xe4e5bc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class InputConfirmPopup : GuiBase
{
    /*0x40*/ LocalizeString m_title;
    /*0x48*/ LocalizeString m_cancel;
    /*0x50*/ LocalizeString m_confirm;
    /*0x58*/ LocalizeString m_empty;
    /*0x60*/ UnityEngine.UI.InputField m_inputField;
    /*0x68*/ string m_defaultString;
    /*0x70*/ System.Action<bool, string> m_callBack;

    /*0x1573db4*/ InputConfirmPopup();
    /*0x1573844*/ void OnCreate();
    /*0x1573848*/ void OnDelete();
    /*0x157384c*/ void OnEnter();
    /*0x1573850*/ void OnFinish();
    /*0x1573854*/ void OnLeave();
    /*0x1573858*/ void OnStart();
    /*0x157385c*/ void OnExit();
    /*0x15738cc*/ void InitPopup(string title, string cancel, string confirm, string defaultStr, string emptyMessage, System.Action<bool, string> callBack);
    /*0x1573c4c*/ void OnClickCancel();
    /*0x1573cfc*/ void OnClickConfirm();
}

class ItemAmountBuyPopup : ItemAmountBuyBase
{
    static /*0x0*/ System.Action<int> OnBuyItemEvent;

    static /*0x15752c8*/ ItemAmountBuyPopup();
    static /*0x1574bd0*/ void add_OnBuyItemEvent(System.Action<int> value);
    static /*0x1574cc4*/ void remove_OnBuyItemEvent(System.Action<int> value);
    /*0x15752b8*/ ItemAmountBuyPopup();
    /*0x1574db8*/ void OnClickBuyItem();
    /*0x15751dc*/ void Purchase();
    /*0x15752cc*/ void <OnClickBuyItem>b__3_0(bool _result);
}

class ItemDecomposePopup : GuiBase
{
    /*0x40*/ ItemChangeAmountWindow m_ChangeAmountWindow;
    /*0x48*/ ItemInfoSlot m_ItemBox;
    /*0x50*/ ItemTableRewardSlot m_AssetSlot;
    /*0x58*/ ItemDecomposeInputWindow m_DecomposeInputWindow;
    /*0x60*/ ItemType m_eItemType;
    /*0x68*/ TableData.TableData_Item m_ItemInfo;
    /*0x70*/ int m_nMaxAmount;
    /*0x74*/ int m_nAmount;
    /*0x78*/ string[] m_arrReward;

    /*0x157bae4*/ ItemDecomposePopup();
    /*0x157b130*/ void OnCreate();
    /*0x157b134*/ void OnDelete();
    /*0x157b138*/ void OnEnter();
    /*0x157b224*/ void OnFinish();
    /*0x157b228*/ void OnLeave();
    /*0x157b2e0*/ void OnStart();
    /*0x157b2e4*/ void OnExit();
    /*0x157b348*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item);
    /*0x157b448*/ void SetReturnAsset();
    /*0x157b674*/ void OnClickDecompose();
    /*0x157b918*/ void OnClickCustomAmountBtn();
    /*0x157b9bc*/ void CallbackDecomposeItem(PTShare.Define.SProperty _property);
    /*0x157badc*/ void HandlerChangeAmount(int _amount, int _maxAmount);
    /*0x157baec*/ void <OnClickCustomAmountBtn>b__19_0(int result);
}

class ItemDescriptionFixedPopup : ItemDescriptionPopup
{
    /*0x88*/ ScrollContent_StageReward m_ScrollContent;
    /*0x90*/ System.Collections.Generic.List<Rewards> liRewards;

    /*0x157c518*/ ItemDescriptionFixedPopup();
    /*0x157bb04*/ void OnCreate();
    /*0x157bb08*/ void OnDelete();
    /*0x157bb0c*/ void OnEnter();
    /*0x157bb10*/ void OnFinish();
    /*0x157bb14*/ void OnLeave();
    /*0x157bb18*/ void OnStart();
    /*0x157bb1c*/ void OnExit();
    /*0x157bc10*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item, bool _isInfo);
    /*0x157bf60*/ void InitializeData(ItemType _type);
    /*0x157c370*/ void InitializeScroll();
    /*0x157c460*/ void HandlerScrollContent(int nIndex, ItemTableRewardSlot slot);

    class <>c
    {
        static /*0x0*/ ItemDescriptionFixedPopup.<> <>9;
        static /*0x8*/ System.Func<char, bool> <>9__10_0;

        static /*0xe505b4*/ <>c();
        /*0xe50614*/ <>c();
        /*0xe5061c*/ bool <InitializeData>b__10_0(char w);
    }
}

class ItemDescriptionPopup : GuiBase
{
    /*0x40*/ LocalizeString m_ItemName;
    /*0x48*/ LocalizeString m_ItemDesc;
    /*0x50*/ UnityEngine.GameObject m_Button;
    /*0x58*/ LocalizeString m_ButtonText;
    /*0x60*/ ItemInfoSlot m_ItemBox;
    /*0x68*/ UnityEngine.UI.ScrollRect m_descScrollRect;
    /*0x70*/ ItemType m_eItemType;
    /*0x78*/ TableData.TableData_Item m_ItemInfo;
    /*0x80*/ bool m_IsInfomation;

    /*0x157c520*/ ItemDescriptionPopup();
    /*0x157c528*/ void OnCreate();
    /*0x157c52c*/ void OnDelete();
    /*0x157c530*/ void OnEnter();
    /*0x157c534*/ void OnFinish();
    /*0x157c538*/ void OnLeave();
    /*0x157c53c*/ void OnStart();
    /*0x157bb94*/ void OnExit();
    /*0x157bc48*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item, bool _isInfo);
    /*0x157c81c*/ System.Collections.IEnumerator CoLateScrollRectRefresh();
    /*0x157c888*/ void InitializePopup(TableData.TableData_Item _item, bool _isInfo);
    /*0x157c724*/ void SetButtonText(string _key);
    /*0x157c93c*/ void OnConfirm();

    class <CoLateScrollRectRefresh>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ItemDescriptionPopup <>4__this;

        /*0xe5064c*/ <CoLateScrollRectRefresh>d__17(int <>1__state);
        /*0xe50678*/ void System.IDisposable.Dispose();
        /*0xe5067c*/ bool MoveNext();
        /*0xe5073c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe50744*/ void System.Collections.IEnumerator.Reset();
        /*0xe50784*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ItemDescriptionRandomPopup : ItemDescriptionPopup
{
    /*0x88*/ ScrollContent_RandomItemSlot m_ScrollContent;
    /*0x90*/ System.Collections.Generic.List<Rewards> liRewards;
    /*0x98*/ System.Collections.Generic.List<float> percents;

    /*0x157d290*/ ItemDescriptionRandomPopup();
    /*0x157c9e8*/ void OnCreate();
    /*0x157c9ec*/ void OnDelete();
    /*0x157c9f0*/ void OnEnter();
    /*0x157c9f4*/ void OnFinish();
    /*0x157c9f8*/ void OnLeave();
    /*0x157c9fc*/ void OnStart();
    /*0x157ca00*/ void OnExit();
    /*0x157ca78*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item, bool _isInfo);
    /*0x157cab8*/ void InitializeData(ItemType _type);
    /*0x157cec8*/ void InitializePercents();
    /*0x157d0a0*/ void InitializeScroll();
    /*0x157d190*/ void HandlerScrollContent(int nIndex, RandomItemSlot slot);

    class <>c
    {
        static /*0x0*/ ItemDescriptionRandomPopup.<> <>9;
        static /*0x8*/ System.Func<char, bool> <>9__11_0;

        static /*0xe5078c*/ <>c();
        /*0xe507ec*/ <>c();
        /*0xe507f4*/ bool <InitializeData>b__11_0(char w);
    }
}

class ItemFixedPopup : GuiBase
{
    /*0x40*/ ItemChangeAmountWindow m_amountWindow;
    /*0x48*/ ItemInfoSlot m_itemInfoSlot;
    /*0x50*/ ScrollContent_StageReward m_scrollContent;
    /*0x58*/ LocalizeString m_itemName;
    /*0x60*/ LocalizeString m_description;
    /*0x68*/ TableData.TableData_Item itemInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> rewardInfo;

    /*0x157de18*/ ItemFixedPopup();
    /*0x157d298*/ void OnCreate();
    /*0x157d29c*/ void OnDelete();
    /*0x157d2a0*/ void OnEnter();
    /*0x157d478*/ void OnFinish();
    /*0x157d47c*/ void OnLeave();
    /*0x157d5d8*/ void OnStart();
    /*0x157d5dc*/ void InitializePopup(TableData.TableData_Item _item);
    /*0x157d874*/ void InitializeScroll();
    /*0x157d904*/ void HandlerScrollContent(int _nIndex, ItemTableRewardSlot _slot);
    /*0x157d9bc*/ void OnClick_UseItem();
    /*0x157dae8*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0x157dc08*/ void OnChangeValueEvent(int amount, int maxamount);
}

class ItemInventoryPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_Toggle_All;
    /*0x48*/ UnityEngine.UI.Toggle m_Toggle_Item;
    /*0x50*/ UnityEngine.UI.Toggle m_Toggle_Equipment;
    /*0x58*/ UnityEngine.UI.Toggle m_Toggle_Furniture;
    /*0x60*/ ScrollContent_ItemInfoSlot m_ScrollContent;
    /*0x68*/ LocalizeString m_emptyText;
    /*0x70*/ ItemInventoryType m_eInventoryType;
    /*0x78*/ System.Collections.Generic.List<EquipSetItem> m_liEquipSetItem;
    /*0x80*/ int nEquipArrayIndex;
    /*0x84*/ int nFurnitureArrayIndex;

    /*0x157fe4c*/ ItemInventoryPopup();
    /*0x157ee9c*/ System.Collections.Generic.List<PTShare.Define.SItem> get_GetItemList();
    /*0x157ef1c*/ System.Collections.Generic.List<HousingObjSet> get_GetFurnitureList();
    /*0x157ef9c*/ void OnCreate();
    /*0x157efa0*/ void OnDelete();
    /*0x157efa4*/ void OnEnter();
    /*0x157f350*/ void OnFinish();
    /*0x157f354*/ void OnLeave();
    /*0x157f49c*/ void OnStart();
    /*0x157f4a0*/ void OnExit();
    /*0x157f548*/ void InitializeInventory(ItemInventoryType type);
    /*0x157f60c*/ void InitializeToggle();
    /*0x157f57c*/ void GetEquipSetItem();
    /*0x157fad0*/ void CallbackToggle(bool _result, ItemInventoryType _type);
    /*0x157f890*/ void InitializeScrollContent(bool _moveFirstItem);
    /*0x157fb74*/ void HandlerInventoryUpdate(int _index, ItemInfoSlot _item);
    /*0x157fe24*/ void HandlerChangeItem();
    /*0x157fec4*/ void <InitializeToggle>b__22_0(bool result);
    /*0x157fed0*/ void <InitializeToggle>b__22_1(bool result);
    /*0x157fedc*/ void <InitializeToggle>b__22_2(bool result);
    /*0x157fee8*/ void <InitializeToggle>b__22_3(bool result);
}

class ItemRandomPopup : GuiBase
{
    /*0x40*/ ItemChangeAmountWindow m_amountWindow;
    /*0x48*/ ItemInfoSlot m_itemInfoSlot;
    /*0x50*/ ScrollContent_RandomItemSlot m_scrollContent;
    /*0x58*/ LocalizeString m_itemName;
    /*0x60*/ LocalizeString m_description;
    /*0x68*/ TableData.TableData_Item itemInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> rewardInfo;
    /*0x78*/ System.Collections.Generic.List<float> percents;

    /*0x158195c*/ ItemRandomPopup();
    /*0x1580e54*/ void OnCreate();
    /*0x1580e58*/ void OnDelete();
    /*0x1580e5c*/ void OnEnter();
    /*0x1581034*/ void OnFinish();
    /*0x1581038*/ void OnLeave();
    /*0x1581194*/ void OnStart();
    /*0x157e9dc*/ void InitializePopup(TableData.TableData_Item _item);
    /*0x1581198*/ void SetPercents();
    /*0x1581370*/ void InitializeScroll();
    /*0x1581400*/ void HandlerScrollContent(int _nIndex, RandomItemSlot _slot);
    /*0x1581500*/ void OnClick_UseItem();
    /*0x158162c*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0x158174c*/ void OnChangeValueEvent(int amount, int maxamount);
}

class ItemSelectUsePopup : GuiBase
{
    /*0x40*/ ScrollContent_SelectItem m_ScrollContent;
    /*0x48*/ ItemInfoSlot m_ItemBox;
    /*0x50*/ UnityEngine.GameObject m_AmountWindow;
    /*0x58*/ LocalizeString m_ItemName;
    /*0x60*/ LocalizeString m_Amount;
    /*0x68*/ string[] m_arrReward;
    /*0x70*/ System.Collections.Generic.Dictionary<int, int> m_dicRewardAmount;
    /*0x78*/ ItemType m_eItemType;
    /*0x80*/ TableData.TableData_Item m_TableInfo;
    /*0x88*/ PTShare.Define.SItem m_UserInfo;
    /*0x90*/ int m_nSelectIndex;
    /*0x94*/ int m_nAmount;
    /*0x98*/ int m_nMaxAmount;
    /*0x9c*/ int nArrIndex;

    /*0x15858f0*/ ItemSelectUsePopup();
    /*0x1584b08*/ void OnCreate();
    /*0x1584b0c*/ void OnDelete();
    /*0x1584b10*/ void OnEnter();
    /*0x1584da0*/ void OnFinish();
    /*0x1584da4*/ void OnLeave();
    /*0x1584fb4*/ void OnStart();
    /*0x157ec78*/ void InitializePopup(ItemType _type, TableData.TableData_Item _table);
    /*0x1585030*/ void RefeshAmountText();
    /*0x1585234*/ void OnConfirm();
    /*0x1584fb8*/ void InitializeScroll();
    /*0x15853c4*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0x15854d0*/ void HandlerScrollContent(int _index, ItemSelectEntity _obj);
    /*0x158569c*/ void HandlerChangeAmount(int _index, int _itemIndex, int _amount);
    /*0x1585808*/ void HandlerSelectItem(int _index, int _itemIndex);
    /*0x15850f0*/ int GetAmount();
    /*0x1585678*/ int RemainAmount();
    /*0x15855d4*/ int GetIndexAmount(int _index);
    /*0x1585760*/ void RefreshEntity(int _startIndex, int _endIndex);
}

class ItemUsePopup : GuiBase
{
    /*0x40*/ ItemInfoSlot m_ItemBox;
    /*0x48*/ ItemChangeAmountWindow m_ItemChangeWindow;
    /*0x50*/ LocalizeString m_ItemName;
    /*0x58*/ LocalizeString m_ItemDesc;
    /*0x60*/ UnityEngine.UI.Slider m_AmountSilder;
    /*0x68*/ LocalizeString m_SilderText;
    /*0x70*/ ItemType m_eItemType;
    /*0x78*/ TableData.TableData_Item m_ItemInfo;
    /*0x80*/ int m_nMaxAmount;
    /*0x84*/ int m_nAmount;

    /*0xfa3d3c*/ ItemUsePopup();
    /*0xfa2e70*/ void OnCreate();
    /*0xfa2e74*/ void OnDelete();
    /*0xfa2e78*/ void OnEnter();
    /*0xfa2fb0*/ void OnFinish();
    /*0xfa2fb4*/ void OnLeave();
    /*0xfa3070*/ void OnStart();
    /*0xfa3074*/ void OnExit();
    /*0xfa30f0*/ void InitializePopup(ItemType _type, TableData.TableData_Item _item);
    /*0xfa33c4*/ void OnClickUse();
    /*0xfa3794*/ void CallbackUseItem(PTShare.Define.SProperty _property);
    /*0xfa39b0*/ void HandlerChangeAmount(int _amount, int _maxAmount);
    /*0xfa3620*/ bool IsVaildCondition();
}

class LevelupPopup : GuiBase
{
    /*0x40*/ LocalizeString m_BeforeLevel;
    /*0x48*/ LocalizeString m_AfterLevel;
    /*0x50*/ TableRewardController m_TableRewardController;
    /*0x58*/ ParticleBase m_LevelEffect;
    /*0x60*/ Spine.Unity.SkeletonGraphic m_LevelupTitle;
    /*0x68*/ TableData.TableData_Userlvexp m_UserLevelInfo;
    /*0x70*/ System.Collections.Generic.List<Rewards> m_liReward;
    /*0x78*/ System.Collections.IEnumerator m_ieAnimate;
    /*0x80*/ bool m_bIsPlayingAnimate;

    /*0xfa9aa0*/ LevelupPopup();
    /*0xfa9730*/ void OnCreate();
    /*0xfa9734*/ void OnDelete();
    /*0xfa9738*/ void OnEnter();
    /*0xfa9778*/ void OnFinish();
    /*0xfa977c*/ void OnLeave();
    /*0xfa9780*/ void OnStart();
    /*0xfa9784*/ void OnExit();
    /*0xfa9798*/ void InitializePopup(int _nBeforeLevel);
    /*0xfa99e8*/ void StartAnimate();
    /*0xfa9a34*/ System.Collections.IEnumerator CoAnimate();
    /*0xfa9b18*/ bool <CoAnimate>b__18_0();

    class <CoAnimate>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ LevelupPopup <>4__this;

        /*0xe5217c*/ <CoAnimate>d__18(int <>1__state);
        /*0xe521a8*/ void System.IDisposable.Dispose();
        /*0xe521ac*/ bool MoveNext();
        /*0xe52430*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe52438*/ void System.Collections.IEnumerator.Reset();
        /*0xe52478*/ object System.Collections.IEnumerator.get_Current();
    }
}

class LoadingPopup : GuiBase
{
    static float fDefaultTime = 0.5;
    /*0x40*/ UnityEngine.CanvasGroup m_canvasGroup;
    /*0x48*/ UnityEngine.GameObject m_backgroundBlack;
    /*0x50*/ UnityEngine.UI.Text m_text;
    /*0x58*/ System.Collections.IEnumerator CoUpdate;

    /*0xfb20fc*/ LoadingPopup();
    /*0xfb1e44*/ void OnCreate();
    /*0xfb1e48*/ void OnDelete();
    /*0xfb1e4c*/ void OnEnter();
    /*0xfb1e50*/ void OnStart();
    /*0xfb1e54*/ void OnExit();
    /*0xfb1e58*/ void OnFinish();
    /*0xfb1e5c*/ void OnLeave();
    /*0xfb1e60*/ void InitializeWindow(bool _enable, float _fViewTime);
    /*0xfb1fbc*/ void SetText(string _text);
    /*0xfb1f48*/ void StartUpdate(float _fTime);
    /*0xfb2068*/ System.Collections.IEnumerator CoLoading(float _fTime);
    /*0xfb20e4*/ void SetActiveBackgroundBlack(bool _bActive);

    class <CoLoading>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ float _fTime;
        /*0x28*/ LoadingPopup <>4__this;

        /*0xe59e80*/ <CoLoading>d__15(int <>1__state);
        /*0xe59eac*/ void System.IDisposable.Dispose();
        /*0xe59eb0*/ bool MoveNext();
        /*0xe59f6c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xe59f74*/ void System.Collections.IEnumerator.Reset();
        /*0xe59fb4*/ object System.Collections.IEnumerator.get_Current();
    }
}

class MercenaryLendPopup : GuiBase
{
    /*0x40*/ LendGenericWindow m_GenericWindow;
    /*0x48*/ RequestLendWindow m_RequestWindow;
    /*0x50*/ UnityEngine.UI.Toggle m_GenericToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_RequestToggle;

    /*0x2b3c31c*/ MercenaryLendPopup();
    /*0x2b3c050*/ void OnCreate();
    /*0x2b3c054*/ void OnDelete();
    /*0x2b3c058*/ void OnEnter();
    /*0x2b3c0c4*/ void OnFinish();
    /*0x2b3c0c8*/ void OnLeave();
    /*0x2b3c0cc*/ void OnStart();
    /*0x2b3c0d0*/ void OnExit();
    /*0x2b3c14c*/ void InitializePopup();
    /*0x2b3c150*/ void InitializeToggle();
    /*0x2b3c2b0*/ void SetActiveContents(bool _generic, bool _request);
    /*0x2b3c324*/ void <InitializeToggle>b__12_0(bool isOn);
    /*0x2b3c3d4*/ void <InitializeToggle>b__12_1(bool isOn);
}

class MercenaryRentPopup : GuiBase
{
    /*0x40*/ ScrollContent_MercenaryRentEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_MercenaryReqCount;
    /*0x50*/ int m_nTableID;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SMercenaryRent> m_curMercenaryRent;

    /*0x2b40c2c*/ MercenaryRentPopup();
    /*0x2b404a8*/ void OnCreate();
    /*0x2b404ac*/ void OnDelete();
    /*0x2b404b0*/ void OnEnter();
    /*0x2b40674*/ void OnFinish();
    /*0x2b40678*/ void OnLeave();
    /*0x2b407c0*/ void OnStart();
    /*0x2b407c4*/ void OnExit();
    /*0x2b40840*/ void InitializePopup(int _tableid);
    /*0x2b40944*/ void SetStatusView();
    /*0x2b408e8*/ void InitializeScroll();
    /*0x2b40ba0*/ void HandlerScrollContent(int _index, MercenaryRentEntity _obj);
    /*0x2b40c24*/ void HandlerChangeEntity();
}

class MobileCamPopup : GuiBase, UnityEngine.EventSystems.IPointerDownHandler, UnityEngine.EventSystems.IEventSystemHandler, UnityEngine.EventSystems.IPointerUpHandler
{
    static float fCharacterDefaultScale = 0.18000000715255737;
    static float m_fMaxScale = 0.25;
    static float m_fMinScale = 0.10000000149011612;
    static float m_fPower = 0.05000000074505806;
    /*0x40*/ UnityEngine.GameObject m_UIParent;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0x50*/ UnityEngine.GameObject m_BackScreen;
    /*0x58*/ UnityEngine.GameObject m_GastureListParent;
    /*0x60*/ System.Collections.Generic.List<GestureButtonEntity> m_liGestureButton;
    /*0x68*/ UnityEngine.UI.Toggle m_Repeat;
    /*0x70*/ UnityEngine.UI.Toggle m_Mirror;
    /*0x78*/ UnityEngine.UI.Slider m_Speed;
    /*0x80*/ bool bIsInitialized;
    /*0x88*/ UnityEngine.RectTransform rectTransform;
    /*0x90*/ int nUnitTableID;
    /*0x94*/ bool bIsCharacterTouch;
    /*0x98*/ ANIMATION_CLIP[] arrGestureClip;
    /*0xa0*/ bool camAvailable;
    /*0xa1*/ bool isFront;
    /*0xa8*/ UnityEngine.WebCamTexture cameraTexture;
    /*0xb0*/ UnityEngine.UI.RawImage background;
    /*0xb8*/ UnityEngine.UI.AspectRatioFitter fit;
    /*0xc0*/ UnityEngine.Vector2 m_vecFirStartPosition;
    /*0xc8*/ UnityEngine.Vector2 m_vecSecStartPosition;
    /*0xd0*/ UnityEngine.Vector2 m_vecFirEndPosition;
    /*0xd8*/ UnityEngine.Vector2 m_vecSecEndPosition;
    /*0xe0*/ float m_fStartDistance;
    /*0xe4*/ float m_fEndDistance;
    /*0xe8*/ float m_fFactor;
    /*0xec*/ bool m_bIsTouch;

    /*0x2b42e14*/ MobileCamPopup();
    /*0x2b41ac4*/ void OnCreate();
    /*0x2b41b18*/ void OnDelete();
    /*0x2b41c40*/ void OnEnter();
    /*0x2b41d84*/ void OnFinish();
    /*0x2b41d88*/ void OnLeave();
    /*0x2b41d8c*/ void OnStart();
    /*0x2b41b1c*/ void DestroyCamTexture();
    /*0x2b41d90*/ void InitializeMobileCam(bool isFront);
    /*0x2b42368*/ void Update();
    /*0x2b428b4*/ void InitializeCam(int nTableid);
    /*0x2b422fc*/ System.Collections.IEnumerator CoInitializeCharacter();
    /*0x2b41cac*/ void InitializeGestureList();
    /*0x2b428c4*/ void OnClick_Gesture();
    /*0x2b42960*/ void InitializeSettings();
    /*0x2b42bfc*/ void OnClick_ViewChange();
    /*0x2b42c14*/ void OnClick_ScreenShot();
    /*0x2b42d60*/ void OnClick_Characher();
    /*0x2b42cf4*/ System.Collections.IEnumerator CoWebShare();
    /*0x2b424f4*/ void Scaling();
    /*0x2b42d64*/ void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x2b42d6c*/ void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData);
    /*0x2b42ec4*/ void <InitializeMobileCam>b__26_1(bool res);
    /*0x2b42ed0*/ bool <CoInitializeCharacter>b__29_0();
    /*0x2b42f64*/ void <InitializeSettings>b__32_0(bool on);
    /*0x2b42f98*/ void <InitializeSettings>b__32_1(bool on);
    /*0x2b42fcc*/ void <InitializeSettings>b__32_2(float val);

    class <>c
    {
        static /*0x0*/ MobileCamPopup.<> <>9;
        static /*0x8*/ System.Action<UnityEngine.WebCamDevice> <>9__26_0;

        static /*0x108860c*/ <>c();
        /*0x108866c*/ <>c();
        /*0x1088674*/ void <InitializeMobileCam>b__26_0(UnityEngine.WebCamDevice x);
    }

    class <CoInitializeCharacter>d__29 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MobileCamPopup <>4__this;

        /*0x1088714*/ <CoInitializeCharacter>d__29(int <>1__state);
        /*0x1088740*/ void System.IDisposable.Dispose();
        /*0x1088744*/ bool MoveNext();
        /*0x1088a38*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1088a40*/ void System.Collections.IEnumerator.Reset();
        /*0x1088a80*/ object System.Collections.IEnumerator.get_Current();
    }

    class <CoWebShare>d__36 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ MobileCamPopup <>4__this;

        /*0x1088a88*/ <CoWebShare>d__36(int <>1__state);
        /*0x1088ab4*/ void System.IDisposable.Dispose();
        /*0x1088ab8*/ bool MoveNext();
        /*0x1088c94*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x1088c9c*/ void System.Collections.IEnumerator.Reset();
        /*0x1088cdc*/ object System.Collections.IEnumerator.get_Current();
    }
}

class NewHeroPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Image m_characterImage;
    /*0x48*/ UnityEngine.UI.Image m_backGroundImage;
    /*0x50*/ PTShare.Define.SHero m_HeroInfo;
    /*0x58*/ TableData.TableData_Unitbase m_BaseInfo;

    /*0x2b51978*/ NewHeroPopup();
    /*0x2b517a4*/ void OnCreate();
    /*0x2b517a8*/ void OnEnter();
    /*0x2b517ac*/ void OnStart();
    /*0x2b517b0*/ void OnFinish();
    /*0x2b517b4*/ void OnLeave();
    /*0x2b517bc*/ void OnDelete();
    /*0x2b517c0*/ void OnExit();
    /*0x2b517b8*/ void Leave();
    /*0x2b5185c*/ void ImportEvent();
    /*0x2b51858*/ void DeleteEvent();
    /*0x2b51860*/ void InitalizeNewHero(TableData.TableData_Unitbase _base);
    /*0x2b5186c*/ void InitalizeNewHero(PTShare.Define.SHero _hero);
    /*0x2b518a0*/ void SetBackground();
    /*0x2b5190c*/ void SetCharacterImage();
}

class NoticePopup : GuiBase
{
    /*0x40*/ ScrollContent_NoticeEntity m_ScrollContent;
    /*0x48*/ NoticeDescriptionView m_DescriptionView;
    /*0x50*/ UnityEngine.GameObject m_allReadButton;
    /*0x58*/ System.Action onExitEvent;

    /*0x2b533c0*/ NoticePopup();
    /*0x2b52dd0*/ System.Collections.Generic.List<PTShare.Define.SNotice> get_liNoticeData();
    /*0x2b52e50*/ void OnCreate();
    /*0x2b52e54*/ void OnDelete();
    /*0x2b52e58*/ void OnEnter();
    /*0x2b52f84*/ void OnFinish();
    /*0x2b52f88*/ void OnLeave();
    /*0x2b5305c*/ void OnStart();
    /*0x2b53060*/ void OnExit();
    /*0x2b531a4*/ void InitializePopup(System.Action _exitCallback);
    /*0x2b531d4*/ void InitializeScroll();
    /*0x2b53250*/ void HandlerScrollContent(int _nIndex, NoticeEntity _ent);
    /*0x2b53118*/ void SetActiveContent(bool _bDescription, bool _bScrollContent);
    /*0x2b53334*/ void OnClick_AllRead();
    /*0x2b533c8*/ void <HandlerScrollContent>b__15_0(PTShare.Define.SNotice data);
}

class OpenBookPopup : GuiBase
{
    static string ANIM_CREATE = "Book_OpenTemp";
    static string ANIM_OPEN = "Book_NextOpen";
    static string ANIM_NEXT = "Book_NextPage";
    static string ANIM_PREVIOUS = "Book_PreviousPage";
    static /*0x0*/ System.Action OnChangeEvent;
    /*0x40*/ LocalizeString m_cTitle;
    /*0x48*/ UnityEngine.UI.Outline m_OutlineTitle;
    /*0x50*/ UnityEngine.UI.Image m_cBackground;
    /*0x58*/ UnityEngine.UI.Image m_cFrame;
    /*0x60*/ UnityEngine.UI.Image m_cSubFrame;
    /*0x68*/ Spine.Unity.SkeletonGraphic m_cIlliust;
    /*0x70*/ UnityEngine.Animator m_Animator;
    /*0x78*/ UnityEngine.GameObject m_OpenButton;
    /*0x80*/ UnityEngine.GameObject m_OpenParent;
    /*0x88*/ LocalizeString m_CharacterName;
    /*0x90*/ LocalizeString m_CharacterNick;
    /*0x98*/ Spine.Unity.SkeletonGraphic m_Character;
    /*0xa0*/ UnityEngine.GameObject m_RewardButton;
    /*0xa8*/ LocalizeString m_StoryText;
    /*0xb0*/ UnityEngine.GameObject m_NextPageButton;
    /*0xb8*/ UnityEngine.GameObject m_PreviousPageButton;
    /*0xc0*/ UnityEngine.Color[] m_TitleTextColor;
    /*0xc8*/ UnityEngine.Color[] m_TitleOutlineColor;
    /*0xd0*/ bool m_bPlayAnimate;
    /*0xd1*/ bool m_bInitializedStory;
    /*0xd4*/ int m_nPageCount;
    /*0xd8*/ TableData.TableData_Unitbase m_UnitbaseInfo;
    /*0xe0*/ int m_nSkinID;
    /*0xe8*/ PTShare.Define.SBook m_BookInfo;
    /*0xf0*/ System.Collections.Generic.List<string> m_liStoryText;

    static /*0x11355bc*/ OpenBookPopup();
    static /*0x1133c00*/ void add_OnChangeEvent(System.Action value);
    static /*0x1133cf4*/ void remove_OnChangeEvent(System.Action value);
    /*0x11351e4*/ OpenBookPopup();
    /*0x1133de8*/ void OnCreate();
    /*0x1133dec*/ void OnEnter();
    /*0x1133df0*/ void OnStart();
    /*0x1133df4*/ void OnFinish();
    /*0x1133df8*/ void OnLeave();
    /*0x1133e00*/ void OnDelete();
    /*0x1133e64*/ void OnExit();
    /*0x1133e6c*/ void InitializePopup(int _unitIndex, int _skinIndex);
    /*0x1134478*/ void InitializeStory();
    /*0x11347a8*/ void InitializeSplitText();
    /*0x1134c38*/ void RefreshSplitText();
    /*0x1134ce0*/ void OnClickOpen();
    /*0x1134db8*/ void OnClickNextOrPrevious(bool _isPrevious);
    /*0x1134f58*/ void OnClick_Reward();
    /*0x1135044*/ void CallbackBookReward();
    /*0x11343e4*/ System.Collections.IEnumerator OnAnimate(string _stateName, bool _reverse, System.Action _callback);
    /*0x11355c0*/ void <OnClickNextOrPrevious>b__44_0();

    class <>c__DisplayClass47_0
    {
        /*0x10*/ bool _reverse;
        /*0x18*/ OpenBookPopup <>4__this;

        /*0x108ae28*/ <>c__DisplayClass47_0();
        /*0x108ae30*/ bool <OnAnimate>b__0();
    }

    class <OnAnimate>d__47 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ bool _reverse;
        /*0x28*/ OpenBookPopup <>4__this;
        /*0x30*/ string _stateName;
        /*0x38*/ System.Action _callback;

        /*0x108aeec*/ <OnAnimate>d__47(int <>1__state);
        /*0x108af18*/ void System.IDisposable.Dispose();
        /*0x108af1c*/ bool MoveNext();
        /*0x108b0e0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108b0e8*/ void System.Collections.IEnumerator.Reset();
        /*0x108b128*/ object System.Collections.IEnumerator.get_Current();
    }
}

class OptionAccountSettingsPopup : GuiBase
{
    /*0x40*/ OptionAccountPlatform m_platformGrid;
    /*0x48*/ LocalizeString m_loginButtonLocalize;
    /*0x50*/ UnityEngine.UI.Button m_accountDeleteButton;

    /*0x1136010*/ OptionAccountSettingsPopup();
    /*0x11357c0*/ void OnCreate();
    /*0x11357c4*/ void OnDelete();
    /*0x11357c8*/ void OnEnter();
    /*0x11358f0*/ void OnFinish();
    /*0x11358f4*/ void OnLeave();
    /*0x113599c*/ void OnStart();
    /*0x11359a0*/ void OnExit();
    /*0x1135a1c*/ void InitializePopup();
    /*0x1135bbc*/ void OnClickAccountLogin();
    /*0x1135c3c*/ void OnClickAccountDelete();
    /*0x1135a20*/ void SetLoginButton();
    /*0x1135f78*/ void HandlerSuccressLinkEvent();
    /*0x1135fa4*/ System.Collections.IEnumerator CoExit();

    class <>c
    {
        static /*0x0*/ OptionAccountSettingsPopup.<> <>9;
        static /*0x8*/ System.Action<bool> <>9__12_0;

        static /*0x108b130*/ <>c();
        /*0x108b190*/ <>c();
        /*0x108b198*/ void <OnClickAccountDelete>b__12_0(bool result);
    }

    class <CoExit>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ OptionAccountSettingsPopup <>4__this;

        /*0x108b22c*/ <CoExit>d__15(int <>1__state);
        /*0x108b258*/ void System.IDisposable.Dispose();
        /*0x108b25c*/ bool MoveNext();
        /*0x108b2b8*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108b2c0*/ void System.Collections.IEnumerator.Reset();
        /*0x108b300*/ object System.Collections.IEnumerator.get_Current();
    }
}

class OptionChangeGenderPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject[] m_obSelectImage;
    /*0x48*/ AtlasImage[] m_obSelectIcon;
    /*0x50*/ SProfile sUpdateProfile;

    /*0x1136530*/ OptionChangeGenderPopup();
    /*0x1136018*/ void OnCreate();
    /*0x113601c*/ void OnEnter();
    /*0x1136198*/ void OnStart();
    /*0x113619c*/ void OnFinish();
    /*0x11361a0*/ void OnLeave();
    /*0x1136248*/ void OnDelete();
    /*0x113624c*/ void OnExit();
    /*0x1136110*/ void LoadUpdateProfile();
    /*0x1136480*/ void Send_UpdateProfile();
    /*0x11362c8*/ void OnClick_Gender(int _nIndex);
    /*0x1136524*/ void UpdateGender();
}

class OptionChangeNickNamePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_inputField;
    /*0x48*/ UnityEngine.GameObject m_TopExitButton;
    /*0x50*/ UnityEngine.GameObject m_BottomExitButton;
    /*0x58*/ LocalizeString m_textNeedMoney;
    /*0x60*/ LocalizeString m_useMoney;
    /*0x68*/ bool m_bDefenseExit;

    /*0x113722c*/ OptionChangeNickNamePopup();
    /*0x1136538*/ void OnExit();
    /*0x11365c8*/ void InitializeWindow(bool _bDefenseExit);
    /*0x113683c*/ void OnClick_UpdateNickName();
    /*0x1136e08*/ void HandlerUpdateUserInfo();
    /*0x1137020*/ void OnCreate();
    /*0x113708c*/ void OnEnter();
    /*0x1137178*/ void OnStart();
    /*0x113717c*/ void OnFinish();
    /*0x1137180*/ void OnLeave();
    /*0x1137228*/ void OnDelete();
    /*0x1137234*/ void <OnClick_UpdateNickName>b__8_0(bool _result);
}

class OptionChangeProfilePopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_inputField;

    /*0x1137800*/ OptionChangeProfilePopup();
    /*0x11372e4*/ void OnExit();
    /*0x11373dc*/ void OnClick_UpdateProfileMessage();
    /*0x1137654*/ void HandlerUpdateUserInfo();
    /*0x11376d8*/ void OnCreate();
    /*0x11376dc*/ void OnEnter();
    /*0x11377f0*/ void OnStart();
    /*0x11377f4*/ void OnFinish();
    /*0x11377f8*/ void OnLeave();
    /*0x11377fc*/ void OnDelete();
}

class OptionCustomProfilePopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<UnityEngine.UI.Toggle> m_liToggle;
    /*0x48*/ ScrollContent_CustomProfileSlotEntity m_ScrollContent;
    /*0x50*/ PlayerProfileSlot m_cHeroMainTarget;
    /*0x58*/ LocalizeString m_itemName;
    /*0x60*/ UnityEngine.CanvasGroup m_getDescCanvas;
    /*0x68*/ LocalizeString m_getDescText;
    /*0x70*/ SProfile m_curProfile;
    /*0x90*/ System.Collections.Generic.List<TableData.TableData_Unitbase> m_tUnitBase;
    /*0x98*/ System.Collections.Generic.List<PTShare.Define.SBook> m_tCurMyUnit;
    /*0xa0*/ System.Collections.Generic.List<PTShare.Define.SSkin> m_tCurMySkin;
    /*0xa8*/ System.Collections.Generic.List<TableData.TableData_Profileskin> m_tProfileSkin;
    /*0xb0*/ ProfileSlotDetail m_accountDetail;
    /*0xbc*/ ProfileSkinType m_curToggleType;
    /*0xc0*/ bool m_isPlayToggleSound;

    /*0x11397ec*/ OptionCustomProfilePopup();
    /*0x1137808*/ void OnCreate();
    /*0x113780c*/ void OnEnter();
    /*0x1137810*/ void OnStart();
    /*0x1137814*/ void OnFinish();
    /*0x1137818*/ void OnLeave();
    /*0x113781c*/ void OnDelete();
    /*0x1137820*/ void OnExit();
    /*0x113789c*/ void InitializePopup();
    /*0x113822c*/ void InitializeToggle();
    /*0x1137e7c*/ void InitializeScroll();
    /*0x11383e0*/ void HandlerUnitIcon(int _nIndex, CustomProfileSlotEntity _Instance);
    /*0x1138a18*/ void HandlerBackground(int _nIndex, CustomProfileSlotEntity _Instance);
    /*0x1138bb4*/ void HandlerFrame(int _nIndex, CustomProfileSlotEntity _Instance);
    /*0x1138fbc*/ void OnChangeProfileSlot_UnitIcon(TableData.TableData_Unitbase _unitbase);
    /*0x11390ec*/ void OnChangeProfileSlot_Frame(int _nIndex);
    /*0x11393f8*/ void OnChangeProfileSlot_Background(int _nIndex);
    /*0x11394a8*/ void OnClick_ConfirmUpdate();
    /*0x1139140*/ void SetFrameLocalize(int _nIndex);
    /*0x1139448*/ void SetBackgroundLocalize(int _nIndex);
    /*0x11395d8*/ void Refresh();
    /*0x113993c*/ bool <InitializeToggle>b__22_1(TableData.TableData_Unitbase x);

    class <>c
    {
        static /*0x0*/ OptionCustomProfilePopup.<> <>9;
        static /*0x8*/ System.Predicate<TableData.TableData_Unitbase> <>9__21_0;

        static /*0x108b308*/ <>c();
        /*0x108b368*/ <>c();
        /*0x108b370*/ bool <InitializePopup>b__21_0(TableData.TableData_Unitbase x);
    }

    class <>c__DisplayClass22_0
    {
        /*0x10*/ int current;
        /*0x18*/ OptionCustomProfilePopup <>4__this;

        /*0x108b420*/ <>c__DisplayClass22_0();
        /*0x108b428*/ void <InitializeToggle>b__0(bool isOn);
    }

    class <>c__DisplayClass24_0
    {
        /*0x10*/ OptionCustomProfilePopup <>4__this;
        /*0x18*/ int _nIndex;

        /*0x108b6d8*/ <>c__DisplayClass24_0();
        /*0x108b6e0*/ bool <HandlerUnitIcon>b__0(PTShare.Define.SBook x);
        /*0x108b778*/ bool <HandlerUnitIcon>b__1(PTShare.Define.SSkin x);
        /*0x108b810*/ void <HandlerUnitIcon>b__2();
        /*0x108b8b0*/ void <HandlerUnitIcon>b__3();
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ OptionCustomProfilePopup <>4__this;
        /*0x18*/ ProfileSlotDetail _detail;

        /*0x108b934*/ <>c__DisplayClass25_0();
        /*0x108b93c*/ void <HandlerBackground>b__0();
    }

    class <>c__DisplayClass26_0
    {
        /*0x10*/ OptionCustomProfilePopup <>4__this;
        /*0x18*/ ProfileSlotDetail _detail;
        /*0x28*/ TableData.TableData_Profileskin data;

        /*0x108b960*/ <>c__DisplayClass26_0();
        /*0x108b968*/ void <HandlerFrame>b__1();
        /*0x108b98c*/ void <HandlerFrame>b__0();
    }

    class <>c__DisplayClass33_0
    {
        /*0x10*/ TableData.TableData_Unitbase unit;

        /*0x108bb9c*/ <>c__DisplayClass33_0();
        /*0x108bba4*/ bool <Refresh>b__0(PTShare.Define.SSkin s);
    }
}

class OptionEditTroopPopup : GuiBase
{
    static /*0x0*/ System.Action OnChangeViewEntity;
    /*0x40*/ HeroOptionTroopSlot[] m_SlotTroop;
    /*0x48*/ ScrollContent_EditorTroop m_cScrollEditorTroop;
    /*0x50*/ System.Collections.Generic.List<PTShare.Define.SHero> m_curtHerosTroop;
    /*0x58*/ System.Collections.Generic.List<PTShare.Define.SHero> m_curMyHeros;
    /*0x60*/ PTShare.Define.SHero RegisterHero;
    /*0x68*/ PTShare.Define.SHero ReleaseHero;

    static /*0x113a5a8*/ OptionEditTroopPopup();
    static /*0x1139960*/ void add_OnChangeViewEntity(System.Action value);
    static /*0x1139a54*/ void remove_OnChangeViewEntity(System.Action value);
    /*0x113a510*/ OptionEditTroopPopup();
    /*0x1139b48*/ void OnCreate();
    /*0x1139b4c*/ void OnEnter();
    /*0x1139b50*/ void OnStart();
    /*0x1139bf0*/ void OnFinish();
    /*0x1139bf4*/ void OnLeave();
    /*0x1139bf8*/ void OnDelete();
    /*0x1139bfc*/ void InitTroop(System.Collections.Generic.List<PTShare.Define.SHero> _tHerosbyRepresentative);
    /*0x1139e08*/ void ViewCurrentRepresentative();
    /*0x1139fb4*/ void OnClickRepresentativeSlot(PTShare.Define.SHero _sHero);
    /*0x113a0f4*/ void HandlerTroop(int _index, HeroOptionTroopSlot _instance);
    /*0x113a2b0*/ void OnClickEventInven(PTShare.Define.SHero _sHero);
    /*0x113a41c*/ void RegisterTroopSlot(PTShare.Define.SHero _sHero);
    /*0x113a028*/ void ReleaseTroopSlot(PTShare.Define.SHero _sHero);
    /*0x113a48c*/ void OnClick_Save();
    /*0x113a490*/ void CallbackSaveMainforce();
    /*0x113a5ac*/ bool <ReleaseTroopSlot>b__21_0(PTShare.Define.SHero x);

    class <>c
    {
        static /*0x0*/ OptionEditTroopPopup.<> <>9;
        static /*0x8*/ System.Predicate<PTShare.Define.SHero> <>9__15_0;

        static /*0x108bbd4*/ <>c();
        /*0x108bc34*/ <>c();
        /*0x108bc3c*/ bool <InitTroop>b__15_0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ OptionEditTroopPopup <>4__this;
        /*0x18*/ int _index;

        /*0x108bc5c*/ <>c__DisplayClass18_0();
        /*0x108bc64*/ bool <HandlerTroop>b__0(PTShare.Define.SHero x);
    }

    class <>c__DisplayClass19_0
    {
        /*0x10*/ PTShare.Define.SHero _sHero;

        /*0x108bcfc*/ <>c__DisplayClass19_0();
        /*0x108bd04*/ bool <OnClickEventInven>b__0(PTShare.Define.SHero x);
    }
}

class OptionGuildWarPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_goToggleHPMP;
    /*0x48*/ UnityEngine.UI.Toggle m_goToggleBuff;
    /*0x50*/ UnityEngine.UI.Toggle m_goToggleDamage;
    /*0x58*/ bool m_bHPMPActive;
    /*0x59*/ bool m_bBuffActive;
    /*0x5a*/ bool m_bDamageActive;

    /*0x113acf8*/ OptionGuildWarPopup();
    /*0x113a5dc*/ void OnCreate();
    /*0x113a69c*/ void OnDelete();
    /*0x113a6a0*/ void OnEnter();
    /*0x113a70c*/ void OnFinish();
    /*0x113a710*/ void OnLeave();
    /*0x113a714*/ void OnStart();
    /*0x113a718*/ void OnExit();
    /*0x113a5e0*/ void Initialize();
    /*0x113a940*/ void OnClickAccept();
    /*0x113ab60*/ void OnClickToggleHPMP(bool _bActive);
    /*0x113abe8*/ void OnClickToggleBuff(bool _bActive);
    /*0x113ac70*/ void OnClickToggleDamage(bool _bActive);
}

class OptionInputCouponPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.InputField m_couponInputField;

    /*0x113b1f8*/ OptionInputCouponPopup();
    /*0x113ad00*/ void OnCreate();
    /*0x113ad04*/ void OnDelete();
    /*0x113ad08*/ void OnEnter();
    /*0x113ad74*/ void OnFinish();
    /*0x113ad78*/ void OnLeave();
    /*0x113ad7c*/ void OnStart();
    /*0x113ad80*/ void OnExit();
    /*0x113adfc*/ void InitializePopup();
    /*0x113ae58*/ void OnClick_Confirm();
    /*0x113ae00*/ void ClearInputField();
    /*0x113b088*/ void OnSuccess();
    /*0x113b188*/ void OnFail();
    /*0x113b200*/ void <OnClick_Confirm>b__9_0(ServerProtocol.ResEventCoupon res);
    /*0x113b204*/ void <OnClick_Confirm>b__9_1(int error, string args);
}

class OptionLanguagePopup : GuiBase
{
    /*0x40*/ int nLocalizeTypeIndex;
    /*0x48*/ UnityEngine.UI.Toggle[] Toogles;
    /*0x50*/ UnityEngine.UI.Text[] m_cLocalizeArray;

    /*0x113b878*/ OptionLanguagePopup();
    /*0x113b208*/ void OnCreate();
    /*0x113b20c*/ void OnEnter();
    /*0x113b510*/ void OnStart();
    /*0x113b514*/ void OnFinish();
    /*0x113b518*/ void OnLeave();
    /*0x113b51c*/ void OnDelete();
    /*0x113b520*/ void OnExit();
    /*0x113b284*/ void LoadLocalizeType();
    /*0x113b61c*/ System.Collections.IEnumerator CoWaitCallback(System.Action callBack);
    /*0x113b688*/ void OnClick_ChangeLanguage(int nIndex);
    /*0x113b708*/ void OnClick_Save();
    /*0x113b888*/ void <LoadLocalizeType>b__10_0();

    class <CoWaitCallback>d__11 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ System.Action callBack;

        /*0x108c020*/ <CoWaitCallback>d__11(int <>1__state);
        /*0x108c04c*/ void System.IDisposable.Dispose();
        /*0x108c050*/ bool MoveNext();
        /*0x108c0ac*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0x108c0b4*/ void System.Collections.IEnumerator.Reset();
        /*0x108c0f4*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass13_0
    {
        /*0x10*/ LocaleLanguageType _eType;
        /*0x18*/ OptionLanguagePopup <>4__this;
        /*0x20*/ System.Action<bool> <>9__1;

        /*0x108bd34*/ <>c__DisplayClass13_0();
        /*0x108bd3c*/ void <OnClick_Save>b__0();
        /*0x108be64*/ void <OnClick_Save>b__1(bool result);
    }
}

class OptionPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle toggle_Action_UserInfo;
    /*0x48*/ UnityEngine.UI.Toggle toggle_Action_OptionInfo;
    /*0x50*/ UserInfoViewEntity m_cUserInfoView;
    /*0x58*/ UserOptionViewEntity m_cUserOptionView;
    /*0x60*/ LocalizeString m_curTextTitle;
    /*0x68*/ bool m_isShowToggleSound;

    /*0x113c9ec*/ OptionPopup();
    /*0x113c2a8*/ UserData get_m_sUserData();
    /*0x113c338*/ void OnExit();
    /*0x113c3a4*/ void OnClick_Exit();
    /*0x113c424*/ void OnCreate();
    /*0x113c574*/ void OnEnter();
    /*0x113c744*/ void OnStart();
    /*0x113c748*/ void OnFinish();
    /*0x113c74c*/ void OnLeave();
    /*0x113c864*/ void OnDelete();
    /*0x113c428*/ void Init_ToggleValued();
    /*0x113c97c*/ void HandlerUpdateUserInfo();
    /*0x113c9d0*/ void HandlerChangeHeroInfo();
    /*0x113c9f4*/ void <Init_ToggleValued>b__16_0(bool _call);
    /*0x113cbc4*/ void <Init_ToggleValued>b__16_1(bool _call);
}

class OtherProfileInfomationPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_ToggleParent;
    /*0x48*/ UnityEngine.GameObject m_HouseParent;
    /*0x50*/ UnityEngine.UI.Toggle m_InfoToggle;
    /*0x58*/ UnityEngine.UI.Toggle m_FormaToggle;
    /*0x60*/ OtherInfomationSubWindow m_InfomationSubWindow;
    /*0x68*/ OtherFormationSubWindow m_FormationSubWindow;
    /*0x70*/ LocalizeString m_totalLike;
    /*0x78*/ ServerProtocol.ResAccountDetail m_DetailInfo;

    /*0x11418f0*/ OtherProfileInfomationPopup();
    /*0x1141114*/ void OnCreate();
    /*0x1141118*/ void OnDelete();
    /*0x114111c*/ void OnEnter();
    /*0x1141188*/ void OnFinish();
    /*0x114118c*/ void OnLeave();
    /*0x1141190*/ void OnStart();
    /*0x1141194*/ void OnExit();
    /*0x1141210*/ void InitializeWindow(ServerProtocol.ResAccountDetail _detail);
    /*0x11415c0*/ void InitializeWindowGuild(ServerProtocol.ResAccountDetail _detail);
    /*0x11413d4*/ void InitializeToggle();
    /*0x1141544*/ void SetActiveContents(bool _isInfomation, bool _isFormation);
    /*0x1141784*/ void OnClickHouse();
    /*0x11418f8*/ void <InitializeToggle>b__17_0(bool isOn);
    /*0x1141940*/ void <InitializeToggle>b__17_1(bool isOn);

    class <>c
    {
        static /*0x0*/ OtherProfileInfomationPopup.<> <>9;
        static /*0x8*/ System.Action <>9__19_0;

        static /*0x108c3b8*/ <>c();
        /*0x108c418*/ <>c();
        /*0x108c420*/ void <OnClickHouse>b__19_0();
    }
}

class PausePopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_ExitButton;
    /*0x48*/ UnityEngine.GameObject m_RetryButton;
    /*0x50*/ UnityEngine.GameObject m_GuildBattleOptionButton;

    /*0x1148224*/ PausePopup();
    /*0x1147c30*/ void OnCreate();
    /*0x1147c34*/ void OnDelete();
    /*0x1147c38*/ void OnEnter();
    /*0x1147e40*/ void OnFinish();
    /*0x1147e44*/ void OnLeave();
    /*0x1147e48*/ void OnStart();
    /*0x1147e4c*/ void OnExit();
    /*0x1147e78*/ void OnClickExit();
    /*0x1147fe0*/ void OnClickRetry();
    /*0x1148128*/ void OnClickPlay();
    /*0x11481a8*/ void OnClickGuildBattleOption();
    /*0x1147cb4*/ void SetPause(bool _enable);
}

class PurchaseNotifyPopup : GuiBase
{
    /*0x40*/ ParticleBase m_purchaseParticle;

    /*0x101c42c*/ PurchaseNotifyPopup();
    /*0x101c3f4*/ void OnCreate();
    /*0x101c3f8*/ void OnDelete();
    /*0x101c3fc*/ void OnEnter();
    /*0x101c420*/ void OnFinish();
    /*0x101c424*/ void OnLeave();
    /*0x101c428*/ void OnStart();
}

class PveRankingPopup : GuiBase
{
    /*0x40*/ SeasonTimeText m_seasonTime;
    /*0x48*/ PveStageWindow m_stageWindow;
    /*0x50*/ PveStatusWindow m_statusWindow;
    /*0x58*/ int m_resetDay;

    /*0x1023c84*/ PveRankingPopup();
    /*0x1023464*/ void OnCreate();
    /*0x1023468*/ void OnDelete();
    /*0x102346c*/ void OnEnter();
    /*0x1023470*/ void OnFinish();
    /*0x1023474*/ void OnLeave();
    /*0x1023568*/ void OnStart();
    /*0x102356c*/ void OnExit();
    /*0x10235e8*/ void InitializePopup();
    /*0x10238ec*/ void OnClick_Help();
    /*0x1023990*/ void OnClick_Ranking();
    /*0x10237f4*/ void BindEvent();
    /*0x1023478*/ void RemoveEvent();
    /*0x1023abc*/ void HandleDailyChange();
    /*0x1023c8c*/ void <HandleDailyChange>b__16_0(bool confirm);

    class <>c
    {
        static /*0x0*/ PveRankingPopup.<> <>9;
        static /*0x8*/ System.Action<ServerProtocol.ResPveRankingRanking> <>9__13_0;

        static /*0x1091fb0*/ <>c();
        /*0x1092010*/ <>c();
        /*0x1092018*/ void <OnClick_Ranking>b__13_0(ServerProtocol.ResPveRankingRanking instance);
    }
}

class QuestPopup : GuiBase
{
    /*0x40*/ UnityEngine.UI.Toggle m_DailyToggle;
    /*0x48*/ UnityEngine.UI.Toggle m_WeeklyToggle;
    /*0x50*/ UnityEngine.UI.Toggle m_MainToggle;
    /*0x58*/ AtlasImage m_RedDot_Daily;
    /*0x60*/ AtlasImage m_RedDot_Weekly;
    /*0x68*/ AtlasImage m_RedDot_Main;
    /*0x70*/ QuestDailySubWindow m_DailySubWindow;
    /*0x78*/ QuestMainSubWindow m_MainSubWindow;

    /*0x1244328*/ QuestPopup();
    /*0x12435dc*/ void OnCreate();
    /*0x12435e0*/ void OnDelete();
    /*0x124385c*/ void OnEnter();
    /*0x1243b98*/ void OnFinish();
    /*0x1243b9c*/ void OnLeave();
    /*0x1243d24*/ void OnStart();
    /*0x1243d28*/ void OnExit();
    /*0x1243e68*/ void InitializeWindow();
    /*0x1243eb0*/ void InitializeToggle();
    /*0x1244078*/ void SetActiveContent(bool _isDaily, bool _isMain);
    /*0x12440f4*/ void RefreshRedDot();
    /*0x124428c*/ void SelectTabReddotHide();
    /*0x1244320*/ void HandlerChangeStateRedDot();
    /*0x1244324*/ void HandlerChangeStateRedDot(int _nEmpty);
    /*0x1244330*/ void <InitializeToggle>b__16_0(bool isOn);
    /*0x12443f4*/ void <InitializeToggle>b__16_1(bool isOn);
    /*0x12444b8*/ void <InitializeToggle>b__16_2(bool isOn);
}

class RacePastPopup : GuiBase
{
    /*0x40*/ ScrollContent_RacePastEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_Desc;

    /*0x124ca98*/ RacePastPopup();
    /*0x124c5b0*/ System.Collections.Generic.List<PTShare.Define.SRace> get_liPastRace();
    /*0x124c630*/ void OnCreate();
    /*0x124c634*/ void OnDelete();
    /*0x124c638*/ void OnEnter();
    /*0x124c764*/ void OnFinish();
    /*0x124c768*/ void OnLeave();
    /*0x124c83c*/ void OnStart();
    /*0x124c840*/ void OnExit();
    /*0x124c8bc*/ void InitializePopup();
    /*0x124c9b8*/ void InitializeScroll();
    /*0x124ca18*/ void HandlerScrollContent(int nIndex, RacePastEntity entity);
}

class RaceResultPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_RewardParent;
    /*0x48*/ Spine.Unity.SkeletonGraphic m_Victory;
    /*0x50*/ System.Collections.Generic.List<RaceResultEntity> m_liResultEntity;
    /*0x58*/ System.Collections.Generic.List<RaceRewardEntity> m_liRewardEntity;
    /*0x60*/ bool bIsCompleteAnimation;
    /*0x68*/ RunRaceResultData dataInfo;

    /*0x11b5384*/ RaceResultPopup();
    /*0x11b49d0*/ void OnCreate();
    /*0x11b49d4*/ void OnDelete();
    /*0x11b49d8*/ void OnEnter();
    /*0x11b49dc*/ void OnFinish();
    /*0x11b49e0*/ void OnLeave();
    /*0x11b49e4*/ void OnStart();
    /*0x11b49e8*/ void OnExit();
    /*0x11b4bd8*/ void InitializePopup(RunRaceResultData data);
    /*0x11b4d8c*/ void SetRewardEntity();
    /*0x11b5164*/ void StartAnimation();
    /*0x11b5318*/ System.Collections.IEnumerator CoAnimation();

    class <>c
    {
        static /*0x0*/ RaceResultPopup.<> <>9;
        static /*0x8*/ System.Action <>9__12_0;

        static /*0xf94dd8*/ <>c();
        /*0xf94e38*/ <>c();
        /*0xf94e40*/ void <OnExit>b__12_0();
    }

    class <>c__DisplayClass16_0
    {
        /*0x10*/ RaceResultPopup <>4__this;
        /*0x18*/ int i;
        /*0x20*/ System.Func<bool> <>9__0;

        /*0xf94eb4*/ <>c__DisplayClass16_0();
        /*0xf94ebc*/ bool <CoAnimation>b__0();
    }

    class <CoAnimation>d__16 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceResultPopup <>4__this;
        /*0x28*/ RaceResultPopup.<> <>8__1;

        /*0xf94f38*/ <CoAnimation>d__16(int <>1__state);
        /*0xf94f64*/ void System.IDisposable.Dispose();
        /*0xf94f68*/ bool MoveNext();
        /*0xf9523c*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf95244*/ void System.Collections.IEnumerator.Reset();
        /*0xf95284*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RaceSelectPopup : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_OpenParent;
    /*0x48*/ UnityEngine.GameObject m_CloseParent;
    /*0x50*/ System.Collections.Generic.List<RacePlayerSelectEntity> m_liPlayerSelectEntity;
    /*0x58*/ System.Collections.Generic.List<RaceRewardEntity> m_liRewardEntity;
    /*0x60*/ LocalizeString m_Title;
    /*0x68*/ LocalizeString m_TimeText;
    /*0x70*/ bool bIsInitialized;
    /*0x78*/ System.Collections.IEnumerator ieUpdate;
    /*0x80*/ int nHandleCount;

    /*0x11b63a4*/ RaceSelectPopup();
    /*0x11b55cc*/ System.Collections.Generic.List<PTShare.Define.SRunner> get_liRunners();
    /*0x11b564c*/ int get_currentSeq();
    /*0x11b56cc*/ void OnCreate();
    /*0x11b56d0*/ void OnDelete();
    /*0x11b56d4*/ void OnEnter();
    /*0x11b56dc*/ void OnFinish();
    /*0x11b56e0*/ void OnLeave();
    /*0x11b56e8*/ void OnStart();
    /*0x11b56ec*/ void OnExit();
    /*0x11b5768*/ void InitializePopup();
    /*0x11b5ac4*/ void SetPlayerSelectEntity();
    /*0x11b5c5c*/ void SetRewardEntity();
    /*0x11b61ec*/ void OnClick_Past();
    /*0x11b6334*/ void OnSelectPlayerCallback();
    /*0x11b5fa8*/ void ViewPastRace(int currentSeq, int viewSeq);
    /*0x11b5f5c*/ void StartTimer();
    /*0x11b6338*/ System.Collections.IEnumerator CoUpdate();
    /*0x11b63ac*/ void <CoUpdate>b__27_1();

    class <>c
    {
        static /*0x0*/ RaceSelectPopup.<> <>9;
        static /*0x8*/ System.Action <>9__23_0;
        static /*0x10*/ System.Action<RunRaceResultData> <>9__25_1;
        static /*0x18*/ System.Converter<string, System.TimeSpan> <>9__27_0;

        static /*0xf9528c*/ <>c();
        /*0xf952ec*/ <>c();
        /*0xf952f4*/ void <OnClick_Past>b__23_0();
        /*0xf95374*/ void <ViewPastRace>b__25_1(RunRaceResultData data);
        /*0xf953fc*/ System.TimeSpan <CoUpdate>b__27_0(string x);
    }

    class <>c__DisplayClass25_0
    {
        /*0x10*/ int viewSeq;
        /*0x14*/ int pastTrack;
        /*0x18*/ RaceSelectPopup <>4__this;

        /*0xf954e4*/ <>c__DisplayClass25_0();
        /*0xf954ec*/ void <ViewPastRace>b__0(bool result);
    }

    class <CoUpdate>d__27 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RaceSelectPopup <>4__this;
        /*0x28*/ System.TimeSpan <minLimitSpan>5__2;
        /*0x30*/ System.TimeSpan <maxLimitSpan>5__3;

        /*0xf956dc*/ <CoUpdate>d__27(int <>1__state);
        /*0xf95708*/ void System.IDisposable.Dispose();
        /*0xf9570c*/ bool MoveNext();
        /*0xf96504*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9650c*/ void System.Collections.IEnumerator.Reset();
        /*0xf9654c*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RankingBoardCategoryRankPopup : GuiBase
{
    /*0x40*/ ScrollContent_RankBoardRankEntity m_ScrollContent;
    /*0x48*/ RankBoardRankEntity m_MyRankEntity;
    /*0x50*/ LocalizeString m_Title;
    /*0x58*/ LocalizeString m_MyRankText;
    /*0x60*/ UnityEngine.GameObject m_reddot;
    /*0x68*/ UnityEngine.RectTransform m_boardRect;
    /*0x70*/ UnityEngine.GameObject m_factionParent;
    /*0x78*/ AtlasImage m_factionBanner;
    /*0x80*/ UnityEngine.GameObject m_rankingButton;
    /*0x88*/ UnityEngine.GameObject[] m_guildMenus;
    /*0x90*/ AtlasImage m_guildPersonIcon;
    /*0x98*/ AtlasImage m_guildPersonFrame;
    /*0xa0*/ AtlasImage m_guildIcon;
    /*0xa8*/ AtlasImage m_guildFrame;
    /*0xb0*/ RankingBoardType m_eBoardType;

    /*0x11c19d8*/ RankingBoardCategoryRankPopup();
    /*0x11bf5f8*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> get_curCampaignRanker();
    /*0x11bf678*/ System.Collections.Generic.List<PTShare.Define.SBoardCampaignRanker> get_curHardCampaignRanker();
    /*0x11bf6f8*/ System.Collections.Generic.List<PTShare.Define.SBoardTowerRanker> get_curTowerRanker();
    /*0x11bf778*/ System.Collections.Generic.List<PTShare.Define.SBoardFactionRanker> get_curFactionRanker();
    /*0x11bf7f8*/ System.Collections.Generic.List<PTShare.Define.SLongRanker> get_curGuildBossPersonRanker();
    /*0x11bf854*/ System.Collections.Generic.List<PTShare.Define.SRankerGuild> get_curGuildBossGuildRanker();
    /*0x11bf8b0*/ System.Collections.Generic.List<PTShare.Define.SRanker> get_curMiniGameRaceRanker();
    /*0x11bf938*/ System.Collections.Generic.List<PTShare.Define.SRanker> get_curMiniGameRunRanker();
    /*0x11bf994*/ void OnCreate();
    /*0x11bf998*/ void OnDelete();
    /*0x11bf99c*/ void OnEnter();
    /*0x11bfb18*/ void OnFinish();
    /*0x11bfb1c*/ void OnLeave();
    /*0x11bff58*/ void OnStart();
    /*0x11bff5c*/ void OnExit();
    /*0x11c0070*/ void InitializePopup(RankingBoardType _eType, int _nMyRank, string _strFloor);
    /*0x11c0860*/ void SetTitle(RankingBoardType _eType);
    /*0x11c0b38*/ void SetRect(RankingBoardType _eType);
    /*0x11c0c14*/ void SetBanner(RankingBoardType _eType);
    /*0x11c0db0*/ void SetMenus(RankingBoardType _eType);
    /*0x11c0ee8*/ void UpdateReddot();
    /*0x11bfbc8*/ void DeleteScrollEvent();
    /*0x11c0324*/ void InitializeScroll();
    /*0x11c0fe8*/ void HandlerScrollContent_Campaign(int _index, RankBoardRankEntity _obj);
    /*0x11c1094*/ void HandlerScrollContent_HardCampaign(int _index, RankBoardRankEntity _obj);
    /*0x11c1140*/ void HandlerScrollContent_Tower(int _index, RankBoardRankEntity _obj);
    /*0x11c11ec*/ void HandlerScrollContent_Faction(int _index, RankBoardRankEntity _obj);
    /*0x11c1298*/ void HandlerScrollContent_GuildBoss(int _index, RankBoardRankEntity _obj);
    /*0x11c1348*/ void HandlerScrollContent_GuildBossPerson(int _index, RankBoardRankEntity _obj);
    /*0x11c13f8*/ void HandlerScrollContent_MiniGameRace(int _index, RankBoardRankEntity _obj);
    /*0x11c14a8*/ void HandlerScrollContent_MiniGameRun(int _index, RankBoardRankEntity _obj);
    /*0x11c1558*/ void OnClickReward();
    /*0x11c1638*/ void OnClickBoss(int index);
    /*0x11bfab8*/ void CheckRedDot();
    /*0x11c19d4*/ void HandlerReceiveReward();
    /*0x11c19e0*/ void <OnExit>b__37_0();
    /*0x11c19e8*/ void <OnClickReward>b__54_0();
    /*0x11c1ab4*/ void <OnClickBoss>b__55_0(ServerProtocol.ResGuildGuildRanking response);
    /*0x11c1bbc*/ void <OnClickBoss>b__55_1(ServerProtocol.ResGuildRanking response);

    class <>c__DisplayClass55_0
    {
        /*0x10*/ ServerProtocol.ResGuildGuildRanking response;
        /*0x18*/ RankingBoardCategoryRankPopup <>4__this;

        /*0xf97a34*/ <>c__DisplayClass55_0();
        /*0xf97a3c*/ void <OnClickBoss>b__2();
    }

    class <>c__DisplayClass55_1
    {
        /*0x10*/ ServerProtocol.ResGuildRanking response;
        /*0x18*/ RankingBoardCategoryRankPopup <>4__this;

        /*0xf97aa4*/ <>c__DisplayClass55_1();
        /*0xf97aac*/ void <OnClickBoss>b__3();
    }
}

class RankingBoardPopup : GuiBase
{
    /*0x40*/ RankBoardCategoryEntity m_CampaignEntity;
    /*0x48*/ RankBoardCategoryEntity m_HardCampaignEntity;
    /*0x50*/ RankBoardCategoryEntity m_TowerEntity;
    /*0x58*/ RankBoardCategoryEntity[] m_factionEntitys;

    /*0x11c1fd4*/ RankingBoardPopup();
    /*0x11c1cc4*/ void OnCreate();
    /*0x11c1cc8*/ void OnDelete();
    /*0x11c1ccc*/ void OnEnter();
    /*0x11c1cd0*/ void OnFinish();
    /*0x11c1cd4*/ void OnLeave();
    /*0x11c1cd8*/ void OnStart();
    /*0x11c1cdc*/ void OnExit();
    /*0x11c1db0*/ void InitializePopup();
    /*0x11c1f30*/ void OnClick_Help();
    /*0x11c1fdc*/ void <OnExit>b__10_0();
}

class RankingBoardRewardPopup : GuiBase
{
    /*0x40*/ ScrollContent_RankBoardRewardEntity m_ScrollContent;
    /*0x48*/ LocalizeString m_Title;
    /*0x50*/ RankingBoardType m_eBoardType;
    /*0x58*/ System.Collections.Generic.List<QuestPackage> curQuestList;

    /*0x11c2cf0*/ RankingBoardRewardPopup();
    /*0x11c1fe4*/ System.Collections.Generic.List<PTShare.Define.SBoardQuest> get_curQuestState();
    /*0x11c2068*/ void OnCreate();
    /*0x11c206c*/ void OnDelete();
    /*0x11c2070*/ void OnEnter();
    /*0x11c2274*/ void OnFinish();
    /*0x11c2278*/ void OnLeave();
    /*0x11c23c0*/ void OnStart();
    /*0x11c23c4*/ void OnExit();
    /*0x11c1a6c*/ void InitializePopup(RankingBoardType _eType);
    /*0x11c275c*/ void InitializeQuestList();
    /*0x11c2440*/ void SetTitle(RankingBoardType _eType);
    /*0x11c2980*/ void InitializeScroll();
    /*0x11c29dc*/ System.Collections.IEnumerator CoInitializeSelectRankingBoard();
    /*0x11c2a48*/ void HandlerScrollContent(int _index, RankBoardRewardEntity _obj);
    /*0x11c2cec*/ void HandlerReceiveReward();

    class <>c
    {
        static /*0x0*/ RankingBoardRewardPopup.<> <>9;
        static /*0x8*/ System.Func<PTShare.Define.SBoardQuest, int> <>9__17_0;

        static /*0xf97b14*/ <>c();
        /*0xf97b74*/ <>c();
        /*0xf97b7c*/ int <CoInitializeSelectRankingBoard>b__17_0(PTShare.Define.SBoardQuest v);
    }

    class <CoInitializeSelectRankingBoard>d__17 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ RankingBoardRewardPopup <>4__this;

        /*0xf97bc0*/ <CoInitializeSelectRankingBoard>d__17(int <>1__state);
        /*0xf97bec*/ void System.IDisposable.Dispose();
        /*0xf97bf0*/ bool MoveNext();
        /*0xf97e40*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf97e48*/ void System.Collections.IEnumerator.Reset();
        /*0xf97e88*/ object System.Collections.IEnumerator.get_Current();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ int questindex;

        /*0xf97b94*/ <>c__DisplayClass18_0();
        /*0xf97b9c*/ bool <HandlerScrollContent>b__0(PTShare.Define.SBoardQuest f);
    }
}

class RegionSelectPopup : GuiBase
{
    /*0x40*/ System.Collections.Generic.List<RegionSelectEntity> m_liSelectEntity;

    /*0x11c8d80*/ RegionSelectPopup();
    /*0x11c8c20*/ void OnCreate();
    /*0x11c8c24*/ void OnDelete();
    /*0x11c8c28*/ void OnEnter();
    /*0x11c8c2c*/ void OnFinish();
    /*0x11c8c30*/ void OnLeave();
    /*0x11c8c34*/ void OnStart();
    /*0x11c8c38*/ void InitializePopup();
}

class RelationDetailPopup : GuiBase
{
    /*0x40*/ LocalizeString m_Title;
    /*0x48*/ UnityEngine.Transform m_IllustParent;
    /*0x50*/ System.Collections.Generic.List<HeroSlotInventory> m_liRelationSlot;
    /*0x58*/ System.Collections.Generic.List<RelationStatusBar> m_liRelationBar;
    /*0x60*/ RelationStoryEntity m_RelationStory;
    /*0x68*/ UnityEngine.GameObject m_StoryButton;
    /*0x70*/ TableData.TableData_Relation relationTableData;
    /*0x78*/ PTShare.Define.SRelation relationData;
    /*0x80*/ int[] arrCharaterIndex;
    /*0x88*/ bool[] arrCharacterUse;
    /*0x90*/ RelationIllustEntity illustEntity;
    /*0x98*/ System.Collections.Generic.List<RelationStatus> liRelationStatusInfo;

    /*0x11ca048*/ RelationDetailPopup();
    /*0x11c8f48*/ void OnCreate();
    /*0x11c8f4c*/ void OnDelete();
    /*0x11c8f50*/ void OnEnter();
    /*0x11c8f88*/ void OnFinish();
    /*0x11c8f8c*/ void OnLeave();
    /*0x11c8f90*/ void OnStart();
    /*0x11c8f94*/ void OnExit();
    /*0x11c9054*/ void InitializePopup(TableData.TableData_Relation data);
    /*0x11c94b8*/ void Refresh();
    /*0x11c920c*/ void SetStatusInfo();
    /*0x11c99cc*/ void SetStatusBar();
    /*0x11c95fc*/ void SetHeroSlot();
    /*0x11c92c0*/ void CreateIllustEntity();
    /*0x11c9504*/ void SetTitle(string key);
    /*0x11c9c84*/ void OnClick_Help();
    /*0x11c9d28*/ void OnClick_Story();
    /*0x11c9d98*/ void OnClickHeroSlot(TableData.TableData_Unitbase unitbase);
    /*0x11c9e28*/ void OnSuccessActivate();
}

class RelationListPopup : GuiBase
{
    /*0x40*/ ScrollContent_RelationListEntity m_ScrollContent;

    /*0x11cad8c*/ RelationListPopup();
    /*0x11ca978*/ System.Collections.Generic.List<TableData.TableData_Relation> get_relationList();
    /*0x11ca9c4*/ void OnCreate();
    /*0x11ca9c8*/ void OnDelete();
    /*0x11ca9cc*/ void OnEnter();
    /*0x11caaf8*/ void OnFinish();
    /*0x11caafc*/ void OnLeave();
    /*0x11cabd0*/ void OnStart();
    /*0x11cabd4*/ void InitializePopup();
    /*0x11c9f70*/ void InitializeScroll(bool _isInitialize);
    /*0x11cac3c*/ void HandlerScrollContent(int nIndex, RelationListEntity entity);
    /*0x11cace8*/ void OnClick_Help();
}

class ResonanceLevelupPopup : GuiBase
{
    /*0x40*/ HeroNeedItemWindow m_materialWindow;
    /*0x48*/ LocalizeString m_cpText;
    /*0x50*/ LocalizeString m_befLevel;
    /*0x58*/ LocalizeString m_aftLevel;
    /*0x60*/ System.Collections.Generic.List<Rewards> liMaterials;
    /*0x68*/ System.Action onConfirmCalllback;

    /*0xf26a68*/ ResonanceLevelupPopup();
    /*0xf261a4*/ int get_CurrentLevel();
    /*0xf26224*/ void OnCreate();
    /*0xf26228*/ void OnDelete();
    /*0xf2622c*/ void OnEnter();
    /*0xf26230*/ void OnFinish();
    /*0xf26234*/ void OnLeave();
    /*0xf26238*/ void OnStart();
    /*0xf2623c*/ void InitializePopup(System.Action callback);
    /*0xf267d4*/ void OnClick_Confirm();
    /*0xf269e8*/ void OnClick_Exit();
    /*0xf26ae0*/ void <OnClick_Confirm>b__15_0();
}

class ResultPopupBase : GuiBase
{
    /*0x40*/ UnityEngine.GameObject m_WinGroup;
    /*0x48*/ UnityEngine.GameObject m_LoseGroup;
    /*0x50*/ Spine.Unity.SkeletonGraphic m_WinTitle;
    /*0x58*/ Spine.Unity.SkeletonGraphic m_LoseTitle;
    /*0x60*/ WinAnimation m_WinAnimation;
    /*0x68*/ ItemRewardGroup m_ItemRewardGroup;
    /*0x70*/ QuestGrid m_QuestGrid;

    /*0xf2a040*/ ResultPopupBase();
    /*0xf29bf8*/ void OnExit();
    void InitializeWin(PTShare.Define.SProperty _reward);
    void InitializeWinReplay();
    void InitializeLose();
    void OnRetry();
    void OnNext();
    void OnShowGraph();
    /*0xf29c00*/ void InitializeQuestGrid(Battle.GameModeType _eGameMode, bool _bRefresh);
    /*0xf29e10*/ void StartWinAnimation();
    /*0xf29e5c*/ void ShowWinSkeleton(string startAnim, string endAnim, bool loop);
    /*0xf29f90*/ void ShowLoseSkeleton(string startAnim, string endAnim, bool loop);
    /*0xf29f0c*/ System.Collections.IEnumerator CoAnimationUpdate(Spine.Unity.SkeletonGraphic graphic, string endAnim, bool loop);

    class <>c__DisplayClass14_0
    {
        /*0x10*/ ResultPopupBase <>4__this;
        /*0x18*/ Battle.GameModeType _eGameMode;

        /*0xf9a964*/ <>c__DisplayClass14_0();
        /*0xf9a96c*/ void <InitializeQuestGrid>b__0();
    }

    class <>c__DisplayClass18_0
    {
        /*0x10*/ Spine.Unity.SkeletonGraphic graphic;

        /*0xf9a99c*/ <>c__DisplayClass18_0();
        /*0xf9a9a4*/ bool <CoAnimationUpdate>b__0();
    }

    class <CoAnimationUpdate>d__18 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ Spine.Unity.SkeletonGraphic graphic;
        /*0x28*/ string endAnim;
        /*0x30*/ ResultPopupBase.<> <>8__1;
        /*0x38*/ bool loop;

        /*0xf9aa20*/ <CoAnimationUpdate>d__18(int <>1__state);
        /*0xf9aa4c*/ void System.IDisposable.Dispose();
        /*0xf9aa50*/ bool MoveNext();
        /*0xf9abbc*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9abc4*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ac04*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ResultPopup_Arena : ResultPopupBase
{
    /*0x78*/ PlayerProfileSlot m_AllySlot;
    /*0x80*/ PlayerProfileSlot m_EnemySlot;
    /*0x88*/ AtlasImage m_RankArrow;
    /*0x90*/ LocalizeString m_AllyScore;
    /*0x98*/ LocalizeString m_EnemyScore;
    /*0xa0*/ LocalizeString m_AllyNickname;
    /*0xa8*/ LocalizeString m_EnemyNickname;
    /*0xb0*/ LocalizeString m_MyRank;
    /*0xb8*/ LocalizeString m_MyRankIncrease;
    /*0xc0*/ LocalizeString m_LimitRewardText;
    /*0xc8*/ bool m_bWin;

    /*0xf2b2f4*/ ResultPopup_Arena();
    /*0xf2a048*/ ArenaTarget get_result();
    /*0xf2a0e0*/ Battle.GameModeType get_curMode();
    /*0xf2a134*/ void OnCreate();
    /*0xf2a138*/ void OnEnter();
    /*0xf2a538*/ void OnStart();
    /*0xf2a53c*/ void OnFinish();
    /*0xf2a540*/ void OnLeave();
    /*0xf2a544*/ void OnDelete();
    /*0xf2a548*/ void OnExit();
    /*0xf2a5ec*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0xf2ac74*/ void InitializeWinReplay();
    /*0xf2aee0*/ void InitializeWinSelectReplay();
    /*0xf2af8c*/ void InitializeLose();
    /*0xf2b1a0*/ void InitializeLoseReplay();
    /*0xf2b238*/ void OnRetry();
    /*0xf2b28c*/ void OnNext();
    /*0xf2b298*/ void OnShowGraph();
    /*0xf2b2fc*/ void <OnEnter>b__16_0();
}

class ResultPopup_Campaign : ResultPopupBase
{
    /*0x78*/ LocalizeString m_idleRewardGold;
    /*0x80*/ LocalizeString m_idleRewardHeroExp;
    /*0x88*/ LocalizeString m_idleRewardUserExp;
    /*0x90*/ UnityEngine.GameObject m_autoReward;
    /*0x98*/ bool m_bWin;

    /*0x119fab4*/ ResultPopup_Campaign();
    /*0x119f09c*/ void OnCreate();
    /*0x119f0a0*/ void OnEnter();
    /*0x119f0a4*/ void OnStart();
    /*0x119f15c*/ void OnFinish();
    /*0x119f160*/ void OnLeave();
    /*0x119f164*/ void OnDelete();
    /*0x119f168*/ void OnExit();
    /*0x119f24c*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x119f678*/ void InitializeWinReplay();
    /*0x119f76c*/ void InitializeWinSelectReplay();
    /*0x119f840*/ void InitializeLose();
    /*0x119f4c8*/ void SetIdleReward();
    /*0x119f9b8*/ void OnRetry();
    /*0x119fa4c*/ void OnNext();
    /*0x119fa58*/ void OnShowGraph();
}

class ResultPopup_Dungeon : ResultPopupBase
{
    /*0x78*/ LocalizeString m_noGainText;
    /*0x80*/ bool m_bWin;

    /*0x11a0254*/ ResultPopup_Dungeon();
    /*0x119fabc*/ void OnCreate();
    /*0x119fac0*/ void OnEnter();
    /*0x119fac4*/ void OnStart();
    /*0x119facc*/ void OnFinish();
    /*0x119fad0*/ void OnLeave();
    /*0x119fad4*/ void OnDelete();
    /*0x119fad8*/ void OnExit();
    /*0x119fba8*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x119ff48*/ void InitializeWinReplay();
    /*0x11a0008*/ void InitializeLose();
    /*0x11a0124*/ void OnNext();
    /*0x11a01a4*/ void OnRetry();
    /*0x11a01f8*/ void OnShowGraph();
}

class ResultPopup_FriendBattle : ResultPopupBase
{
    /*0x78*/ bool m_bWin;

    /*0x11a0910*/ ResultPopup_FriendBattle();
    /*0x11a025c*/ void OnCreate();
    /*0x11a0260*/ void OnEnter();
    /*0x11a0264*/ void OnStart();
    /*0x11a026c*/ void OnFinish();
    /*0x11a0270*/ void OnLeave();
    /*0x11a0274*/ void OnDelete();
    /*0x11a0278*/ void OnExit();
    /*0x11a035c*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a05d0*/ void InitializeWinReplay();
    /*0x11a06c4*/ void InitializeLose();
    /*0x11a0814*/ void OnRetry();
    /*0x11a08a8*/ void OnNext();
    /*0x11a08b4*/ void OnShowGraph();
}

class ResultPopup_GuildWar : ResultPopupBase
{
    /*0x78*/ Spine.Unity.SkeletonGraphic m_MVPAnimGraphic_Win;
    /*0x80*/ Spine.Unity.SkeletonGraphic m_MVPAnimGraphic_Lose;
    /*0x88*/ UnityEngine.UI.Text m_MVPPlayerNameText_Phase1;
    /*0x90*/ UnityEngine.GameObject m_goMVPFlag;
    /*0x98*/ GuildEmblemSlot m_EmblemSlot_Ally;
    /*0xa0*/ GuildEmblemSlot m_EmblemSlot_Enemy;
    /*0xa8*/ GuildLevelSlot m_LevelSlot_Ally;
    /*0xb0*/ GuildLevelSlot m_LevelSlot_Enemy;
    /*0xb8*/ LocalizeString m_GuildName_Ally;
    /*0xc0*/ LocalizeString m_GuildName_Enemy;
    /*0xc8*/ LocalizeString m_Rank;
    /*0xd0*/ AtlasImage m_RankArrow;
    /*0xd8*/ LocalizeString m_RankIncrease;
    /*0xe0*/ LocalizeString m_Score_Ally;
    /*0xe8*/ LocalizeString m_Score_Enemy;
    /*0xf0*/ UnityEngine.GameObject m_goRankParent;
    /*0xf8*/ UnityEngine.GameObject m_goScoreParet_Ally;
    /*0x100*/ UnityEngine.GameObject m_goScoreParet_Enemy;
    /*0x108*/ bool m_bWin;
    /*0x10c*/ int m_nSkinID;
    /*0x110*/ ServerProtocol.ResGuildWarFinish m_Finish;

    /*0x11a2698*/ ResultPopup_GuildWar();
    /*0x11a1b58*/ void OnCreate();
    /*0x11a1b5c*/ void OnEnter();
    /*0x11a1b60*/ void OnStart();
    /*0x11a1b64*/ void OnFinish();
    /*0x11a1b68*/ void OnLeave();
    /*0x11a1b6c*/ void OnDelete();
    /*0x11a1b70*/ void InitializeWin(ServerProtocol.ResGuildWarFinish _finish);
    /*0x11a22b0*/ void InitializeLose(ServerProtocol.ResGuildWarFinish _finish);
    /*0x11a24a0*/ void InitializeWinReplay();
    /*0x11a24a8*/ void InitializeLoseReplay();
    /*0x11a1d74*/ void InitScore(ServerProtocol.ResGuildWarFinish _finish);
    /*0x11a2154*/ void InitGuildEmblem();
    /*0x11a24b0*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a24b4*/ void InitializeLose();
    /*0x11a24b8*/ void OnExit();
    /*0x11a259c*/ void OnRetry();
    /*0x11a2630*/ void OnNext();
    /*0x11a263c*/ void OnShowGraph();
}

class ResultPopup_Maze : ResultPopupBase
{
    /*0x78*/ bool m_bWin;
    /*0x80*/ UnityEngine.Coroutine m_coroutine;

    /*0x11a2e0c*/ ResultPopup_Maze();
    /*0x11a26a8*/ void OnCreate();
    /*0x11a26ac*/ void OnEnter();
    /*0x11a26b0*/ void OnStart();
    /*0x11a26b8*/ void OnFinish();
    /*0x11a26bc*/ void OnLeave();
    /*0x11a26c0*/ void OnDelete();
    /*0x11a26c4*/ void OnExit();
    /*0x11a2780*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a2aa8*/ void InitializeWinReplay();
    /*0x11a2b9c*/ void InitializeLose();
    /*0x11a2cdc*/ void OnNext();
    /*0x11a2d5c*/ void OnRetry();
    /*0x11a2db0*/ void OnShowGraph();
    /*0x11a2a3c*/ System.Collections.IEnumerator CoAuto();

    class <CoAuto>d__15 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ResultPopup_Maze <>4__this;

        /*0xf9ac0c*/ <CoAuto>d__15(int <>1__state);
        /*0xf9ac38*/ void System.IDisposable.Dispose();
        /*0xf9ac3c*/ bool MoveNext();
        /*0xf9acf0*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9acf8*/ void System.Collections.IEnumerator.Reset();
        /*0xf9ad38*/ object System.Collections.IEnumerator.get_Current();
    }
}

class ResultPopup_PveRanking : ResultPopupBase
{
    static /*0x0*/ int PrevScore;
    static /*0x4*/ int ClearScore;
    static /*0x8*/ int ClearGrade;
    /*0x78*/ System.Collections.Generic.List<UnityEngine.GameObject> m_lisGradeStars;
    /*0x80*/ LocalizeString m_idleRewardGold;
    /*0x88*/ LocalizeString m_idleRewardHeroExp;
    /*0x90*/ LocalizeString m_idleRewardUserExp;
    /*0x98*/ UnityEngine.UI.Text m_ClearTimeText;
    /*0xa0*/ UnityEngine.UI.Text m_ClearScoreText;
    /*0xa8*/ UnityEngine.UI.Text m_ClearUserExpText;
    /*0xb0*/ UnityEngine.UI.Text m_LoseTimeText;
    /*0xb8*/ UnityEngine.UI.Text m_LoseScoreText;
    /*0xc0*/ UnityEngine.GameObject[] m_newRecords;
    /*0xc8*/ bool m_bWin;
    /*0xcc*/ int m_nUserEXP;

    /*0x11a3d68*/ ResultPopup_PveRanking();
    /*0x11a2e14*/ void OnCreate();
    /*0x11a2e18*/ void OnEnter();
    /*0x11a2e1c*/ void OnStart();
    /*0x11a2e24*/ void OnFinish();
    /*0x11a2e28*/ void OnLeave();
    /*0x11a2e2c*/ void OnDelete();
    /*0x11a2e30*/ void OnExit();
    /*0x11a2f14*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a35e4*/ void InitializeWinReplay();
    /*0x11a3770*/ void InitializeWinSelectReplay();
    /*0x11a38dc*/ void InitializeLose();
    /*0x11a3434*/ void SetIdleReward();
    /*0x11a3c20*/ void OnRetry();
    /*0x11a3d00*/ void OnNext();
    /*0x11a3d0c*/ void OnShowGraph();
}

class ResultPopup_Tower : ResultPopupBase
{
    /*0x78*/ bool m_bWin;

    /*0x11a4520*/ ResultPopup_Tower();
    /*0x11a3d70*/ void OnCreate();
    /*0x11a3d74*/ void OnEnter();
    /*0x11a3d78*/ void OnStart();
    /*0x11a3d80*/ void OnFinish();
    /*0x11a3d84*/ void OnLeave();
    /*0x11a3d88*/ void OnDelete();
    /*0x11a3d8c*/ void OnExit();
    /*0x11a3e70*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a40e4*/ void InitializeWinReplay();
    /*0x11a41d8*/ void InitializeWinSelectReplay();
    /*0x11a42ac*/ void InitializeLose();
    /*0x11a4424*/ void OnRetry();
    /*0x11a44b8*/ void OnNext();
    /*0x11a44c4*/ void OnShowGraph();
}

class ResultPopup_WorldArena : ResultPopupBase
{
    /*0x78*/ PlayerProfileSlot m_AllySlot;
    /*0x80*/ PlayerProfileSlot m_EnemySlot;
    /*0x88*/ LocalizeString m_AllyScore;
    /*0x90*/ LocalizeString m_EnemyScore;
    /*0x98*/ LocalizeString m_AllyNickname;
    /*0xa0*/ LocalizeString m_EnemyNickname;
    /*0xa8*/ LocalizeString m_LimitRewardText;
    /*0xb0*/ AtlasImage m_TierIcon;
    /*0xb8*/ bool m_bWin;

    /*0x11a5784*/ ResultPopup_WorldArena();
    /*0x11a4528*/ ArenaTarget get_result();
    /*0x11a45c0*/ Battle.GameModeType get_curMode();
    /*0x11a4614*/ void OnCreate();
    /*0x11a4618*/ void OnEnter();
    /*0x11a4960*/ void OnStart();
    /*0x11a4968*/ void OnFinish();
    /*0x11a496c*/ void OnLeave();
    /*0x11a4970*/ void OnDelete();
    /*0x11a4974*/ void OnExit();
    /*0x11a4a18*/ void InitializeWin(PTShare.Define.SProperty _reward);
    /*0x11a50ec*/ void InitializeWinReplay();
    /*0x11a5360*/ void InitializeWinSelectReplay();
    /*0x11a5414*/ void InitializeLose();
    /*0x11a562c*/ void InitializeLoseReplay();
    /*0x11a56c8*/ void OnRetry();
    /*0x11a571c*/ void OnNext();
    /*0x11a5728*/ void OnShowGraph();
    /*0x11a578c*/ void <OnEnter>b__14_0();
}

class ReviewRequestPopup : GuiBase
{
    /*0x40*/ System.Action onExitCallback;
    /*0x48*/ Google.Play.Review.ReviewManager manager;

    /*0x11a6af0*/ ReviewRequestPopup();
    /*0x11a6940*/ void OnCreate();
    /*0x11a6944*/ void OnDelete();
    /*0x11a6948*/ void OnEnter();
    /*0x11a694c*/ void OnFinish();
    /*0x11a6950*/ void OnLeave();
    /*0x11a6954*/ void OnStart();
    /*0x11a6958*/ void OnExit();
    /*0x11a695c*/ void InitializePopup(System.Action cb);
    /*0x11a6968*/ void OnClick_Later();
    /*0x11a6a0c*/ void OnClick_Review();
    /*0x11a6a84*/ System.Collections.IEnumerator CoReview();
    /*0x11a6af8*/ void <>n__0();

    class <CoReview>d__12 : System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
    {
        /*0x10*/ int <>1__state;
        /*0x18*/ object <>2__current;
        /*0x20*/ ReviewRequestPopup <>4__this;
        /*0x28*/ Google.Play.Common.PlayAsyncOperation<Google.Play.Review.PlayReviewInfo, Google.Play.Review.ReviewErrorCode> <oper>5__2;
        /*0x30*/ Google.Play.Common.PlayAsyncOperation<Google.Play.Common.VoidResult, Google.Play.Review.ReviewErrorCode> <flow>5__3;

        /*0xf9ad40*/ <CoReview>d__12(int <>1__state);
        /*0xf9ad6c*/ void System.IDisposable.Dispose();
        /*0xf9ad70*/ bool MoveNext();
        /*0xf9af48*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
        /*0xf9af50*/ void System.Collections.IEnumerator.Reset();
        /*0xf9af90*/ object System.Collections.IEnumerator.get_Current();
    }
}

class RewardPopup : RewardPopupBase
{
    /*0x60*/ UnityEngine.GameObject m_RewardTitleParent;
    /*0x68*/ ParticleBase m_RewardEffect;
    /*0x70*/ System.Collections.IEnumerator m_ieAnimate;

    /*0x11a9e48*/ RewardPopup();
    /*0x11a9d30*/ void OnCreate();
    /*0x11a9d34*/ void OnDelete();
