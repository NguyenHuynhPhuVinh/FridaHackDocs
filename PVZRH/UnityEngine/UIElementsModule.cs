class <Module>
{
}

namespace UnityEngine
{
    namespace Yoga
    {
        class BaselineFunction : System.MulticastDelegate
        {
            /*0x16c3d70*/ BaselineFunction(object object, nint method);
            /*0x16c3d50*/ float Invoke(UnityEngine.Yoga.YogaNode node, float width, float height);
        }

        class Logger : System.MulticastDelegate
        {
            /*0x16c9c90*/ Logger(object object, nint method);
            /*0x7239c0*/ void Invoke(UnityEngine.Yoga.YogaConfig config, UnityEngine.Yoga.YogaNode node, UnityEngine.Yoga.YogaLogLevel level, string message);
        }

        class MeasureFunction : System.MulticastDelegate
        {
            /*0x16c9de0*/ MeasureFunction(object object, nint method);
            /*0x16c9dc0*/ UnityEngine.Yoga.YogaSize Invoke(UnityEngine.Yoga.YogaNode node, float width, UnityEngine.Yoga.YogaMeasureMode widthMode, float height, UnityEngine.Yoga.YogaMeasureMode heightMode);
        }

        class MeasureOutput
        {
            static /*0x16c9f10*/ UnityEngine.Yoga.YogaSize Make(float width, float height);
        }

        enum YogaAlign
        {
            Auto = 0,
            FlexStart = 1,
            Center = 2,
            FlexEnd = 3,
            Stretch = 4,
            Baseline = 5,
            SpaceBetween = 6,
            SpaceAround = 7,
        }

        class YogaConfig
        {
            static /*0x0*/ UnityEngine.Yoga.YogaConfig Default;
            /*0x10*/ nint _ygConfig;
            /*0x18*/ UnityEngine.Yoga.Logger _logger;

            static /*0x16d0590*/ YogaConfig();
            /*0x16d0670*/ YogaConfig(nint ygConfig);
            /*0x16d0630*/ YogaConfig();
            /*0x16d0490*/ void Finalize();
            /*0x9e3110*/ nint get_Handle();
            /*0x16d06f0*/ bool get_UseWebDefaults();
            /*0x16d0780*/ void set_UseWebDefaults(bool value);
            /*0x16d0730*/ void set_PointScaleFactor(float value);
        }

        class YogaConstants
        {
            static /*0x16d07d0*/ bool IsUndefined(float value);
        }

        enum YogaDirection
        {
            Inherit = 0,
            LTR = 1,
            RTL = 2,
        }

        enum YogaDisplay
        {
            Flex = 0,
            None = 1,
        }

        enum YogaEdge
        {
            Left = 0,
            Top = 1,
            Right = 2,
            Bottom = 3,
            Start = 4,
            End = 5,
            Horizontal = 6,
            Vertical = 7,
            All = 8,
        }

        enum YogaFlexDirection
        {
            Column = 0,
            ColumnReverse = 1,
            Row = 2,
            RowReverse = 3,
        }

        enum YogaJustify
        {
            FlexStart = 0,
            Center = 1,
            FlexEnd = 2,
            SpaceBetween = 3,
            SpaceAround = 4,
        }

        enum YogaLogLevel
        {
            Error = 0,
            Warn = 1,
            Info = 2,
            Debug = 3,
            Verbose = 4,
            Fatal = 5,
        }

        enum YogaMeasureMode
        {
            Undefined = 0,
            Exactly = 1,
            AtMost = 2,
        }

        class Native
        {
            static /*0x16cb2a0*/ nint YGNodeNewWithConfig(nint config);
            static /*0x16cadf0*/ void YGNodeFree(nint ygNode);
            static /*0x16cadb0*/ void YGNodeFreeInternal(nint ygNode);
            static /*0x16cbf50*/ void YGSetManagedObject(nint ygNode, UnityEngine.Yoga.YogaNode node);
            static /*0x16cb370*/ void YGNodeSetConfig(nint ygNode, nint config);
            static /*0x16caaf0*/ nint YGConfigGetDefault();
            static /*0x16cab60*/ nint YGConfigNew();
            static /*0x16caaa0*/ void YGConfigFree(nint config);
            static /*0x16caa60*/ void YGConfigFreeInternal(nint config);
            static /*0x16cabe0*/ void YGConfigSetUseWebDefaults(nint config, bool useWebDefaults);
            static /*0x16cab20*/ bool YGConfigGetUseWebDefaults(nint config);
            static /*0x16cab90*/ void YGConfigSetPointScaleFactor(nint config, float pixelsInPoint);
            static /*0x16cae80*/ void YGNodeInsertChild(nint node, nint child, uint index);
            static /*0x16cb2e0*/ void YGNodeRemoveChild(nint node, nint child);
            static /*0x16cacf0*/ void YGNodeCalculateLayout(nint node, float availableWidth, float availableHeight, UnityEngine.Yoga.YogaDirection parentDirection);
            static /*0x16cb160*/ void YGNodeMarkDirty(nint node);
            static /*0x16caee0*/ bool YGNodeIsDirty(nint node);
            static /*0x16cad60*/ void YGNodeCopyStyle(nint dstNode, nint srcNode);
            static /*0x16cb410*/ void YGNodeSetMeasureFunc(nint node);
            static /*0x16cb330*/ void YGNodeRemoveMeasureFunc(nint node);
            static /*0x16cb1a0*/ void YGNodeMeasureInvoke(UnityEngine.Yoga.YogaNode node, float width, UnityEngine.Yoga.YogaMeasureMode widthMode, float height, UnityEngine.Yoga.YogaMeasureMode heightMode, nint returnValueAddress);
            static /*0x16cac30*/ void YGNodeBaselineInvoke(UnityEngine.Yoga.YogaNode node, float width, float height, nint returnValueAddress);
            static /*0x16cb3c0*/ void YGNodeSetHasNewLayout(nint node, bool hasNewLayout);
            static /*0x16cae40*/ bool YGNodeGetHasNewLayout(nint node);
            static /*0x16cb450*/ UnityEngine.Yoga.YogaDirection YGNodeStyleGetDirection(nint node);
            static /*0x16cb6c0*/ void YGNodeStyleSetFlexDirection(nint node, UnityEngine.Yoga.YogaFlexDirection flexDirection);
            static /*0x16cb910*/ void YGNodeStyleSetJustifyContent(nint node, UnityEngine.Yoga.YogaJustify justifyContent);
            static /*0x16cb490*/ void YGNodeStyleSetAlignContent(nint node, UnityEngine.Yoga.YogaAlign alignContent);
            static /*0x16cb4d0*/ void YGNodeStyleSetAlignItems(nint node, UnityEngine.Yoga.YogaAlign alignItems);
            static /*0x16cb510*/ void YGNodeStyleSetAlignSelf(nint node, UnityEngine.Yoga.YogaAlign alignSelf);
            static /*0x16cbde0*/ void YGNodeStyleSetPositionType(nint node, UnityEngine.Yoga.YogaPositionType positionType);
            static /*0x16cb7a0*/ void YGNodeStyleSetFlexWrap(nint node, UnityEngine.Yoga.YogaWrap flexWrap);
            static /*0x16cbcb0*/ void YGNodeStyleSetOverflow(nint node, UnityEngine.Yoga.YogaOverflow flexWrap);
            static /*0x16cb5a0*/ void YGNodeStyleSetDisplay(nint node, UnityEngine.Yoga.YogaDisplay display);
            static /*0x16cb7e0*/ void YGNodeStyleSetFlex(nint node, float flex);
            static /*0x16cb700*/ void YGNodeStyleSetFlexGrow(nint node, float flexGrow);
            static /*0x16cb750*/ void YGNodeStyleSetFlexShrink(nint node, float flexShrink);
            static /*0x16cb670*/ void YGNodeStyleSetFlexBasis(nint node, float flexBasis);
            static /*0x16cb620*/ void YGNodeStyleSetFlexBasisPercent(nint node, float flexBasis);
            static /*0x16cb5e0*/ void YGNodeStyleSetFlexBasisAuto(nint node);
            static /*0x16cbf00*/ void YGNodeStyleSetWidth(nint node, float width);
            static /*0x16cbeb0*/ void YGNodeStyleSetWidthPercent(nint node, float width);
            static /*0x16cbe70*/ void YGNodeStyleSetWidthAuto(nint node);
            static /*0x16cb8c0*/ void YGNodeStyleSetHeight(nint node, float height);
            static /*0x16cb870*/ void YGNodeStyleSetHeightPercent(nint node, float height);
            static /*0x16cb830*/ void YGNodeStyleSetHeightAuto(nint node);
            static /*0x16cbc60*/ void YGNodeStyleSetMinWidth(nint node, float minWidth);
            static /*0x16cbc10*/ void YGNodeStyleSetMinWidthPercent(nint node, float minWidth);
            static /*0x16cbbc0*/ void YGNodeStyleSetMinHeight(nint node, float minHeight);
            static /*0x16cbb70*/ void YGNodeStyleSetMinHeightPercent(nint node, float minHeight);
            static /*0x16cbb20*/ void YGNodeStyleSetMaxWidth(nint node, float maxWidth);
            static /*0x16cbad0*/ void YGNodeStyleSetMaxWidthPercent(nint node, float maxWidth);
            static /*0x16cba80*/ void YGNodeStyleSetMaxHeight(nint node, float maxHeight);
            static /*0x16cba30*/ void YGNodeStyleSetMaxHeightPercent(nint node, float maxHeight);
            static /*0x16cbe20*/ void YGNodeStyleSetPosition(nint node, UnityEngine.Yoga.YogaEdge edge, float position);
            static /*0x16cbd90*/ void YGNodeStyleSetPositionPercent(nint node, UnityEngine.Yoga.YogaEdge edge, float position);
            static /*0x16cb9e0*/ void YGNodeStyleSetMargin(nint node, UnityEngine.Yoga.YogaEdge edge, float margin);
            static /*0x16cb990*/ void YGNodeStyleSetMarginPercent(nint node, UnityEngine.Yoga.YogaEdge edge, float margin);
            static /*0x16cb950*/ void YGNodeStyleSetMarginAuto(nint node, UnityEngine.Yoga.YogaEdge edge);
            static /*0x16cbd40*/ void YGNodeStyleSetPadding(nint node, UnityEngine.Yoga.YogaEdge edge, float padding);
            static /*0x16cbcf0*/ void YGNodeStyleSetPaddingPercent(nint node, UnityEngine.Yoga.YogaEdge edge, float padding);
            static /*0x16cb550*/ void YGNodeStyleSetBorder(nint node, UnityEngine.Yoga.YogaEdge edge, float border);
            static /*0x16cafe0*/ float YGNodeLayoutGetLeft(nint node);
            static /*0x16cb0e0*/ float YGNodeLayoutGetTop(nint node);
            static /*0x16cb0a0*/ float YGNodeLayoutGetRight(nint node);
            static /*0x16caf60*/ float YGNodeLayoutGetBottom(nint node);
            static /*0x16cb120*/ float YGNodeLayoutGetWidth(nint node);
            static /*0x16cafa0*/ float YGNodeLayoutGetHeight(nint node);
            static /*0x16cb020*/ float YGNodeLayoutGetMargin(nint node, UnityEngine.Yoga.YogaEdge edge);
            static /*0x16cb060*/ float YGNodeLayoutGetPadding(nint node, UnityEngine.Yoga.YogaEdge edge);
            static /*0x16caf20*/ float YGNodeLayoutGetBorder(nint node, UnityEngine.Yoga.YogaEdge edge);
        }

        class YogaNode : System.Collections.Generic.IEnumerable<UnityEngine.Yoga.YogaNode>, System.Collections.IEnumerable
        {
            /*0x10*/ nint _ygNode;
            /*0x18*/ UnityEngine.Yoga.YogaConfig _config;
            /*0x20*/ System.WeakReference _parent;
            /*0x28*/ System.Collections.Generic.List<UnityEngine.Yoga.YogaNode> _children;
            /*0x30*/ UnityEngine.Yoga.MeasureFunction _measureFunction;
            /*0x38*/ UnityEngine.Yoga.BaselineFunction _baselineFunction;
            /*0x40*/ object _data;

            static /*0x16d0d50*/ UnityEngine.Yoga.YogaSize MeasureInternal(UnityEngine.Yoga.YogaNode node, float width, UnityEngine.Yoga.YogaMeasureMode widthMode, float height, UnityEngine.Yoga.YogaMeasureMode heightMode);
            static /*0x16d07f0*/ float BaselineInternal(UnityEngine.Yoga.YogaNode node, float width, float height);
            /*0x16d11e0*/ YogaNode(UnityEngine.Yoga.YogaConfig config);
            /*0x16d0a90*/ void Finalize();
            /*0x16d1b10*/ void set_Config(UnityEngine.Yoga.YogaConfig value);
            /*0x16d13a0*/ bool get_IsDirty();
            /*0x16d0cd0*/ void MarkDirty();
            /*0x16d1350*/ bool get_HasNewLayout();
            /*0x16d13e0*/ bool get_IsMeasureDefined();
            /*0x16d1390*/ bool get_IsBaselineDefined();
            /*0x16d0a40*/ void CopyStyle(UnityEngine.Yoga.YogaNode srcNode);
            /*0x16d1ce0*/ void set_FlexDirection(UnityEngine.Yoga.YogaFlexDirection value);
            /*0x16d1ed0*/ void set_JustifyContent(UnityEngine.Yoga.YogaJustify value);
            /*0x16d1be0*/ void set_Display(UnityEngine.Yoga.YogaDisplay value);
            /*0x16d18c0*/ void set_AlignItems(UnityEngine.Yoga.YogaAlign value);
            /*0x16d1910*/ void set_AlignSelf(UnityEngine.Yoga.YogaAlign value);
            /*0x16d1870*/ void set_AlignContent(UnityEngine.Yoga.YogaAlign value);
            /*0x16d2400*/ void set_PositionType(UnityEngine.Yoga.YogaPositionType value);
            /*0x16d25e0*/ void set_Wrap(UnityEngine.Yoga.YogaWrap value);
            /*0x16d1dd0*/ void set_Flex(float value);
            /*0x16d1d30*/ void set_FlexGrow(float value);
            /*0x16d1d80*/ void set_FlexShrink(float value);
            /*0x16d1c30*/ void set_FlexBasis(UnityEngine.Yoga.YogaValue value);
            /*0x16d2530*/ void set_Width(UnityEngine.Yoga.YogaValue value);
            /*0x16d1e20*/ void set_Height(UnityEngine.Yoga.YogaValue value);
            /*0x16d2060*/ void set_MaxWidth(UnityEngine.Yoga.YogaValue value);
            /*0x16d1fe0*/ void set_MaxHeight(UnityEngine.Yoga.YogaValue value);
            /*0x16d2160*/ void set_MinWidth(UnityEngine.Yoga.YogaValue value);
            /*0x16d20e0*/ void set_MinHeight(UnityEngine.Yoga.YogaValue value);
            /*0x16d17f0*/ float get_LayoutX();
            /*0x16d1830*/ float get_LayoutY();
            /*0x16d1770*/ float get_LayoutRight();
            /*0x16d14f0*/ float get_LayoutBottom();
            /*0x16d17b0*/ float get_LayoutWidth();
            /*0x16d1530*/ float get_LayoutHeight();
            /*0x16d21e0*/ void set_Overflow(UnityEngine.Yoga.YogaOverflow value);
            /*0x16d1300*/ int get_Count();
            /*0x16d0d10*/ void MarkLayoutSeen();
            /*0x16d0b90*/ void Insert(int index, UnityEngine.Yoga.YogaNode node);
            /*0x16d0df0*/ void RemoveAt(int index);
            /*0x16d0910*/ void Clear();
            /*0x16d0ec0*/ void SetMeasureFunction(UnityEngine.Yoga.MeasureFunction measureFunction);
            /*0x16d0880*/ void CalculateLayout(float width, float height);
            /*0x16d0b20*/ System.Collections.Generic.IEnumerator<UnityEngine.Yoga.YogaNode> GetEnumerator();
            /*0x16d1170*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            /*0x16d1f20*/ void set_Left(UnityEngine.Yoga.YogaValue value);
            /*0x16d24c0*/ void set_Top(UnityEngine.Yoga.YogaValue value);
            /*0x16d2450*/ void set_Right(UnityEngine.Yoga.YogaValue value);
            /*0x16d1aa0*/ void set_Bottom(UnityEngine.Yoga.YogaValue value);
            /*0x16d10f0*/ void SetStylePosition(UnityEngine.Yoga.YogaEdge edge, UnityEngine.Yoga.YogaValue value);
            /*0x16d1fb0*/ void set_MarginLeft(UnityEngine.Yoga.YogaValue value);
            /*0x16d1fd0*/ void set_MarginTop(UnityEngine.Yoga.YogaValue value);
            /*0x16d1fc0*/ void set_MarginRight(UnityEngine.Yoga.YogaValue value);
            /*0x16d1fa0*/ void set_MarginBottom(UnityEngine.Yoga.YogaValue value);
            /*0x16d0fb0*/ void SetStyleMargin(UnityEngine.Yoga.YogaEdge edge, UnityEngine.Yoga.YogaValue value);
            /*0x16d22a0*/ void set_PaddingLeft(UnityEngine.Yoga.YogaValue value);
            /*0x16d2390*/ void set_PaddingTop(UnityEngine.Yoga.YogaValue value);
            /*0x16d2320*/ void set_PaddingRight(UnityEngine.Yoga.YogaValue value);
            /*0x16d2230*/ void set_PaddingBottom(UnityEngine.Yoga.YogaValue value);
            /*0x16d1070*/ void SetStylePadding(UnityEngine.Yoga.YogaEdge edge, UnityEngine.Yoga.YogaValue value);
            /*0x16d19b0*/ void set_BorderLeftWidth(float value);
            /*0x16d1a50*/ void set_BorderTopWidth(float value);
            /*0x16d1a00*/ void set_BorderRightWidth(float value);
            /*0x16d1960*/ void set_BorderBottomWidth(float value);
            /*0x16d15b0*/ float get_LayoutMarginLeft();
            /*0x16d1630*/ float get_LayoutMarginTop();
            /*0x16d15f0*/ float get_LayoutMarginRight();
            /*0x16d1570*/ float get_LayoutMarginBottom();
            /*0x16d16b0*/ float get_LayoutPaddingLeft();
            /*0x16d1730*/ float get_LayoutPaddingTop();
            /*0x16d16f0*/ float get_LayoutPaddingRight();
            /*0x16d1670*/ float get_LayoutPaddingBottom();
            /*0x16d1430*/ float get_LayoutBorderLeft();
            /*0x16d14b0*/ float get_LayoutBorderTop();
            /*0x16d1470*/ float get_LayoutBorderRight();
            /*0x16d13f0*/ float get_LayoutBorderBottom();
        }

        enum YogaOverflow
        {
            Visible = 0,
            Hidden = 1,
            Scroll = 2,
        }

        enum YogaPositionType
        {
            Relative = 0,
            Absolute = 1,
        }

        struct YogaSize
        {
            /*0x10*/ float width;
            /*0x14*/ float height;
        }

        enum YogaUnit
        {
            Undefined = 0,
            Point = 1,
            Percent = 2,
            Auto = 3,
        }

        struct YogaValue
        {
            /*0x10*/ float value;
            /*0x14*/ UnityEngine.Yoga.YogaUnit unit;

            static /*0x16d2800*/ UnityEngine.Yoga.YogaValue Point(float value);
            static /*0x16d2630*/ UnityEngine.Yoga.YogaValue Auto();
            static /*0x16d27d0*/ UnityEngine.Yoga.YogaValue Percent(float value);
            static /*0x16d2800*/ UnityEngine.Yoga.YogaValue op_Implicit(float pointValue);
            /*0xc6bf90*/ UnityEngine.Yoga.YogaUnit get_Unit();
            /*0x6ef1f0*/ float get_Value();
            /*0x16d2740*/ bool Equals(UnityEngine.Yoga.YogaValue other);
            /*0x16d2650*/ bool Equals(object obj);
            /*0x16d27a0*/ int GetHashCode();
        }

        enum YogaWrap
        {
            NoWrap = 0,
            Wrap = 1,
            WrapReverse = 2,
        }
    }

    namespace UIElements
    {
        class AlignmentUtils
        {
            static /*0x16ba020*/ float RoundToPixelGrid(float v, float pixelsPerPoint, float offset);
            static /*0x16b9f90*/ float CeilToPixelGrid(float v, float pixelsPerPoint, float offset);
            static /*0x16b9fc0*/ float RoundToPanelPixelSize(UnityEngine.UIElements.VisualElement ve, float v);
        }

        class AtlasBase
        {
            /*0x10*/ UnityEngine.UIElements.TextureRegistry textureRegistry;

            static /*0x16ba070*/ void RepaintTexturedElements(UnityEngine.UIElements.IPanel panel);
            /*0x16ba1d0*/ AtlasBase();
            /*0x16ba160*/ bool TryGetAtlas(UnityEngine.UIElements.VisualElement ctx, UnityEngine.Texture2D src, ref UnityEngine.UIElements.TextureId atlas, ref UnityEngine.RectInt atlasRect);
            /*0x32d010*/ void ReturnAtlas(UnityEngine.UIElements.VisualElement ctx, UnityEngine.Texture2D src, UnityEngine.UIElements.TextureId atlas);
            /*0x32d010*/ void Reset();
            /*0x32d010*/ void OnAssignedToPanel(UnityEngine.UIElements.IPanel panel);
            /*0x32d010*/ void OnRemovedFromPanel(UnityEngine.UIElements.IPanel panel);
            /*0x32d010*/ void OnUpdateDynamicTextures(UnityEngine.UIElements.IPanel panel);
            /*0x138d840*/ void InvokeAssignedToPanel(UnityEngine.UIElements.IPanel panel);
            /*0x10a3660*/ void InvokeRemovedFromPanel(UnityEngine.UIElements.IPanel panel);
            /*0x16ba050*/ void InvokeUpdateDynamicTextures(UnityEngine.UIElements.IPanel panel);
            /*0x16ba140*/ void SetDynamicTexture(UnityEngine.UIElements.TextureId id, UnityEngine.Texture texture);
        }

        enum DynamicAtlasFilters
        {
            None = 0,
            Readability = 1,
            Size = 2,
            Format = 4,
            ColorSpace = 8,
            FilterMode = 16,
        }

        class DynamicAtlasCustomFilter : System.MulticastDelegate
        {
            /*0x16c86f0*/ DynamicAtlasCustomFilter(object object, nint method);
            /*0x722200*/ bool Invoke(UnityEngine.Texture2D texture, ref UnityEngine.UIElements.DynamicAtlasFilters filtersToApply);
        }

        class DynamicAtlas : UnityEngine.UIElements.AtlasBase
        {
            /*0x18*/ System.Collections.Generic.Dictionary<UnityEngine.Texture, UnityEngine.UIElements.DynamicAtlas.TextureInfo> m_Database;
            /*0x20*/ UnityEngine.UIElements.DynamicAtlasPage m_PointPage;
            /*0x28*/ UnityEngine.UIElements.DynamicAtlasPage m_BilinearPage;
            /*0x30*/ UnityEngine.ColorSpace m_ColorSpace;
            /*0x38*/ System.Collections.Generic.List<UnityEngine.UIElements.IPanel> m_Panels;
            /*0x40*/ int m_MinAtlasSize;
            /*0x44*/ int m_MaxAtlasSize;
            /*0x48*/ int m_MaxSubTextureSize;
            /*0x4c*/ UnityEngine.UIElements.DynamicAtlasFilters m_ActiveFilters;
            /*0x50*/ UnityEngine.UIElements.DynamicAtlasCustomFilter m_CustomFilter;

            static /*0x16c8960*/ bool IsTextureFormatSupported(UnityEngine.TextureFormat format);
            static /*0x16c9720*/ UnityEngine.UIElements.DynamicAtlasFilters get_defaultFilters();
            /*0x16c95c0*/ DynamicAtlas();
            /*0x16c9730*/ bool get_isInitialized();
            /*0x16c8bb0*/ void OnAssignedToPanel(UnityEngine.UIElements.IPanel panel);
            /*0x16c8c80*/ void OnRemovedFromPanel(UnityEngine.UIElements.IPanel panel);
            /*0x16c8d90*/ void Reset();
            /*0x16c8840*/ void InitPages();
            /*0x16c87b0*/ void DestroyPages();
            /*0x16c9060*/ bool TryGetAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, ref UnityEngine.UIElements.TextureId atlas, ref UnityEngine.RectInt atlasRect);
            /*0x16c8f10*/ void ReturnAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, UnityEngine.UIElements.TextureId atlas);
            /*0x16c8d10*/ void OnUpdateDynamicTextures(UnityEngine.UIElements.IPanel panel);
            /*0x16c89f0*/ bool IsTextureValid(UnityEngine.Texture2D texture, UnityEngine.FilterMode atlasFilterMode);
            /*0x16c9820*/ void set_minAtlasSize(int value);
            /*0x16c97e0*/ void set_maxAtlasSize(int value);
            /*0x16c9760*/ void set_activeFilters(UnityEngine.UIElements.DynamicAtlasFilters value);
            /*0x16c9750*/ int get_maxSubTextureSize();
            /*0x16c9800*/ void set_maxSubTextureSize(int value);
            /*0x16c9780*/ void set_customFilter(UnityEngine.UIElements.DynamicAtlasCustomFilter value);

            class TextureInfo : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.DynamicAtlas.TextureInfo>
            {
                static /*0x0*/ UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.DynamicAtlas.TextureInfo> pool;
                /*0x18*/ UnityEngine.UIElements.DynamicAtlasPage page;
                /*0x20*/ int counter;
                /*0x28*/ UnityEngine.UIElements.UIR.Allocator2D.Alloc2D alloc;
                /*0x58*/ UnityEngine.RectInt rect;

                static /*0x16ce520*/ TextureInfo();
                static /*0x16ce460*/ UnityEngine.UIElements.DynamicAtlas.TextureInfo Create();
                static /*0x16ce4d0*/ void Reset(UnityEngine.UIElements.DynamicAtlas.TextureInfo info);
                /*0x16ce640*/ TextureInfo();
            }
        }

        struct BackgroundPosition : System.IEquatable<UnityEngine.UIElements.BackgroundPosition>
        {
            /*0x10*/ UnityEngine.UIElements.BackgroundPositionKeyword keyword;
            /*0x14*/ UnityEngine.UIElements.Length offset;

            static /*0x16ba3b0*/ UnityEngine.UIElements.BackgroundPosition Initial();
            static /*0x16ba4e0*/ bool op_Equality(UnityEngine.UIElements.BackgroundPosition style1, UnityEngine.UIElements.BackgroundPosition style2);
            static /*0x16ba550*/ bool op_Inequality(UnityEngine.UIElements.BackgroundPosition style1, UnityEngine.UIElements.BackgroundPosition style2);
            /*0x16ba4a0*/ BackgroundPosition(UnityEngine.UIElements.BackgroundPositionKeyword keyword);
            /*0xa59f50*/ BackgroundPosition(UnityEngine.UIElements.BackgroundPositionKeyword keyword, UnityEngine.UIElements.Length offset);
            /*0x16ba2c0*/ bool Equals(object obj);
            /*0x16ba270*/ bool Equals(UnityEngine.UIElements.BackgroundPosition other);
            /*0x16ba370*/ int GetHashCode();
            /*0x16ba400*/ string ToString();
        }

        class BackgroundPropertyHelper
        {
            static /*0x16ba3b0*/ UnityEngine.UIElements.BackgroundPosition ConvertScaleModeToBackgroundPosition(UnityEngine.ScaleMode scaleMode);
            static /*0xbf9950*/ UnityEngine.UIElements.BackgroundRepeat ConvertScaleModeToBackgroundRepeat(UnityEngine.ScaleMode scaleMode);
            static /*0x16ba5c0*/ UnityEngine.UIElements.BackgroundSize ConvertScaleModeToBackgroundSize(UnityEngine.ScaleMode scaleMode);
            static /*0x16ba680*/ UnityEngine.ScaleMode ResolveUnityBackgroundScaleMode(UnityEngine.UIElements.BackgroundPosition backgroundPositionX, UnityEngine.UIElements.BackgroundPosition backgroundPositionY, UnityEngine.UIElements.BackgroundRepeat backgroundRepeat, UnityEngine.UIElements.BackgroundSize backgroundSize, ref bool valid);
        }

        struct BackgroundRepeat : System.IEquatable<UnityEngine.UIElements.BackgroundRepeat>
        {
            /*0x10*/ UnityEngine.UIElements.Repeat x;
            /*0x14*/ UnityEngine.UIElements.Repeat y;

            static /*0xce8dc0*/ UnityEngine.UIElements.BackgroundRepeat Initial();
            static /*0x16babc0*/ bool op_Equality(UnityEngine.UIElements.BackgroundRepeat style1, UnityEngine.UIElements.BackgroundRepeat style2);
            static /*0x16babe0*/ bool op_Inequality(UnityEngine.UIElements.BackgroundRepeat style1, UnityEngine.UIElements.BackgroundRepeat style2);
            /*0xa59f20*/ BackgroundRepeat(UnityEngine.UIElements.Repeat repeatX, UnityEngine.UIElements.Repeat repeatY);
            /*0x16baa60*/ bool Equals(object obj);
            /*0x16baa40*/ bool Equals(UnityEngine.UIElements.BackgroundRepeat other);
            /*0x16baaf0*/ int GetHashCode();
            /*0x16bab30*/ string ToString();
        }

        struct BackgroundSize : System.IEquatable<UnityEngine.UIElements.BackgroundSize>
        {
            /*0x10*/ UnityEngine.UIElements.BackgroundSizeType m_SizeType;
            /*0x14*/ UnityEngine.UIElements.Length m_X;
            /*0x1c*/ UnityEngine.UIElements.Length m_Y;

            static /*0x16bad80*/ UnityEngine.UIElements.BackgroundSize Initial();
            static /*0x16baf20*/ bool op_Equality(UnityEngine.UIElements.BackgroundSize style1, UnityEngine.UIElements.BackgroundSize style2);
            static /*0x16baf90*/ bool op_Inequality(UnityEngine.UIElements.BackgroundSize style1, UnityEngine.UIElements.BackgroundSize style2);
            /*0x16baea0*/ BackgroundSize(UnityEngine.UIElements.Length sizeX, UnityEngine.UIElements.Length sizeY);
            /*0x16baeb0*/ BackgroundSize(UnityEngine.UIElements.BackgroundSizeType sizeType);
            /*0x15d3b80*/ UnityEngine.UIElements.BackgroundSizeType get_sizeType();
            /*0x16baeb0*/ void set_sizeType(UnityEngine.UIElements.BackgroundSizeType value);
            /*0xfbbe50*/ UnityEngine.UIElements.Length get_x();
            /*0x16bb010*/ void set_x(UnityEngine.UIElements.Length value);
            /*0x16baf10*/ UnityEngine.UIElements.Length get_y();
            /*0x16bb020*/ void set_y(UnityEngine.UIElements.Length value);
            /*0x16bac00*/ bool Equals(object obj);
            /*0x16bacd0*/ bool Equals(UnityEngine.UIElements.BackgroundSize other);
            /*0x16bad30*/ int GetHashCode();
            /*0x16bade0*/ string ToString();
        }

        class BindableElement : UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.IBindable
        {
            /*0x3c8*/ UnityEngine.UIElements.IBinding <binding>k__BackingField;
            /*0x3d0*/ string <bindingPath>k__BackingField;

            /*0x16c3ea0*/ BindableElement();
            /*0xc8f290*/ UnityEngine.UIElements.IBinding get_binding();
            /*0x16c3ef0*/ void set_bindingPath(string value);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.BindableElement, UnityEngine.UIElements.BindableElement.UxmlTraits>
            {
                /*0x16ceaf0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
            {
                /*0x70*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_PropertyPath;

                /*0x16cecc0*/ UxmlTraits();
                /*0x16ceb30*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        interface IBindingRequest
        {
            /*0x17aec0*/ void Bind(UnityEngine.UIElements.VisualElement element);
        }

        class VisualTreeBindingsUpdater : UnityEngine.UIElements.BaseVisualTreeHierarchyTrackerUpdater
        {
            static /*0x0*/ UnityEngine.PropertyName s_BindingRequestObjectVEPropertyName;
            static /*0x4*/ UnityEngine.PropertyName s_AdditionalBindingObjectVEPropertyName;
            static /*0x8*/ string s_Description;
            static /*0x10*/ Unity.Profiling.ProfilerMarker s_ProfilerMarker;
            static /*0x18*/ Unity.Profiling.ProfilerMarker s_ProfilerBindingRequestsMarker;
            static /*0x20*/ Unity.Profiling.ProfilerMarker s_MarkerUpdate;
            static /*0x28*/ Unity.Profiling.ProfilerMarker s_MarkerPoll;
            static /*0x30*/ bool <disableBindingsThrottling>k__BackingField;
            /*0x38*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_ElementsWithBindings;
            /*0x40*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_ElementsToAdd;
            /*0x48*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_ElementsToRemove;
            /*0x50*/ long m_LastUpdateTime;
            /*0x58*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_ElementsToBind;
            /*0x60*/ System.Collections.Generic.Dictionary<object, object> <temporaryObjectCache>k__BackingField;
            /*0x68*/ System.Collections.Generic.List<UnityEngine.UIElements.IBinding> updatedBindings;

            static /*0x16d0090*/ VisualTreeBindingsUpdater();
            static /*0x16d03f0*/ bool get_disableBindingsThrottling();
            static /*0x16ceda0*/ UnityEngine.UIElements.IBinding GetAdditionalBinding(UnityEngine.UIElements.VisualElement ve);
            static /*0x16ced60*/ long CurrentTime();
            /*0x16d0250*/ VisualTreeBindingsUpdater();
            /*0x16d0440*/ Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x16cee30*/ UnityEngine.UIElements.IBinding GetBindingObjectFromElement(UnityEngine.UIElements.VisualElement ve);
            /*0x16cf410*/ void StartTracking(UnityEngine.UIElements.VisualElement ve);
            /*0x16cf5b0*/ void StopTracking(UnityEngine.UIElements.VisualElement ve);
            /*0xe643b0*/ System.Collections.Generic.Dictionary<object, object> get_temporaryObjectCache();
            /*0x16cf2e0*/ void StartTrackingRecursive(UnityEngine.UIElements.VisualElement ve);
            /*0x16cf490*/ void StopTrackingRecursive(UnityEngine.UIElements.VisualElement ve);
            /*0x16cef70*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x16cef40*/ void OnHierarchyChange(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType type);
            /*0x16cf060*/ void PerformTrackingOperations();
            /*0x16cfb00*/ void Update();
            /*0x16cf630*/ void UpdateBindings();
        }

        class ClampedDragger<T> : UnityEngine.UIElements.Clickable
        {
            /*0x0*/ System.Action dragging;
            /*0x0*/ System.Action draggingEnded;
            /*0x0*/ UnityEngine.UIElements.ClampedDragger.DragDirection<T> <dragDirection>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.BaseSlider<T> <slider>k__BackingField;
            /*0x0*/ UnityEngine.Vector2 <startMousePosition>k__BackingField;

            /*0x183830*/ ClampedDragger(UnityEngine.UIElements.BaseSlider<T> slider, System.Action clickHandler, System.Action dragHandler);
            /*0x17aec0*/ void add_dragging(System.Action value);
            /*0x17aec0*/ void remove_dragging(System.Action value);
            /*0x17aec0*/ void add_draggingEnded(System.Action value);
            /*0x17aec0*/ void remove_draggingEnded(System.Action value);
            /*0x2a5510*/ UnityEngine.UIElements.ClampedDragger.DragDirection<T> get_dragDirection();
            /*0x2a5510*/ void set_dragDirection(UnityEngine.UIElements.ClampedDragger.DragDirection<T> value);
            /*0x17aec0*/ void set_slider(UnityEngine.UIElements.BaseSlider<T> value);
            UnityEngine.Vector2 get_startMousePosition();
            /*0x17aca0*/ void set_startMousePosition(UnityEngine.Vector2 value);
            UnityEngine.Vector2 get_delta();
            void ProcessDownEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, int pointerId);
            void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, int pointerId);
            void ProcessMoveEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition);

            enum DragDirection<T>
            {
                None = 0,
                LowToHigh = 1,
                HighToLow = 2,
                Free = 4,
            }
        }

        class Clickable : UnityEngine.UIElements.PointerManipulator
        {
            /*0x38*/ System.Action<UnityEngine.UIElements.EventBase> clickedWithEventInfo;
            /*0x40*/ System.Action clicked;
            /*0x48*/ long m_Delay;
            /*0x50*/ long m_Interval;
            /*0x58*/ bool <active>k__BackingField;
            /*0x5c*/ UnityEngine.Vector2 <lastMousePosition>k__BackingField;
            /*0x64*/ int m_ActivePointerId;
            /*0x68*/ bool m_AcceptClicksIfDisabled;
            /*0x70*/ UnityEngine.UIElements.IVisualElementScheduledItem m_Repeater;

            static /*0x16c5110*/ bool IsNotMouseEvent(int pointerId);
            /*0x16c6b80*/ Clickable(System.Action handler, long delay, long interval);
            /*0x16c6cc0*/ Clickable(System.Action<UnityEngine.UIElements.EventBase> handler);
            /*0x16c6de0*/ Clickable(System.Action handler);
            /*0x16c6f10*/ void add_clickedWithEventInfo(System.Action<UnityEngine.UIElements.EventBase> value);
            /*0x16c7090*/ void remove_clickedWithEventInfo(System.Action<UnityEngine.UIElements.EventBase> value);
            /*0x16c6fc0*/ void add_clicked(System.Action value);
            /*0x16c7140*/ void remove_clicked(System.Action value);
            /*0xe9dc40*/ bool get_active();
            /*0x13db610*/ void set_active(bool value);
            /*0x16c7070*/ UnityEngine.Vector2 get_lastMousePosition();
            /*0x16c7230*/ void set_lastMousePosition(UnityEngine.Vector2 value);
            /*0xe7e580*/ bool get_acceptClicksIfDisabled();
            /*0x16c71e0*/ void set_acceptClicksIfDisabled(bool value);
            /*0x16c7060*/ UnityEngine.UIElements.InvokePolicy get_invokePolicy();
            /*0x16c5990*/ void OnTimer(UnityEngine.UIElements.TimerState timerState);
            /*0x16c5170*/ bool IsRepeatable();
            /*0x16c60c0*/ void RegisterCallbacksOnTarget();
            /*0x16c6740*/ void UnregisterCallbacksFromTarget();
            /*0x16c5220*/ void OnMouseDown(UnityEngine.UIElements.MouseDownEvent evt);
            /*0x16c5300*/ void OnMouseMove(UnityEngine.UIElements.MouseMoveEvent evt);
            /*0x16c5380*/ void OnMouseUp(UnityEngine.UIElements.MouseUpEvent evt);
            /*0x16c5190*/ void OnMouseCaptureOut(UnityEngine.UIElements.MouseCaptureOutEvent evt);
            /*0x16c5620*/ void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x16c5750*/ void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x16c5860*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x16c5470*/ void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt);
            /*0x16c5550*/ void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt);
            /*0x16c5040*/ bool ContainsPointer(int pointerId);
            /*0x16c50c0*/ void Invoke(UnityEngine.UIElements.EventBase evt);
            /*0x16c6590*/ void SimulateSingleClick(UnityEngine.UIElements.EventBase evt, int delayMs);
            /*0x16c5bc0*/ void ProcessDownEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, int pointerId);
            /*0x16c5ea0*/ void ProcessMoveEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition);
            /*0x16c5f30*/ void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, int pointerId);
            /*0x16c5aa0*/ void ProcessCancelEvent(UnityEngine.UIElements.EventBase evt, int pointerId);
            /*0x16c6700*/ void <SimulateSingleClick>b__43_0();
        }

        class ClickDetector
        {
            static /*0x0*/ int <s_DoubleClickTime>k__BackingField;
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.ClickDetector.ButtonClickStatus> m_ClickStatus;

            static /*0x16c4cd0*/ ClickDetector();
            static /*0x16c4f90*/ int get_s_DoubleClickTime();
            static /*0x16c4fe0*/ void set_s_DoubleClickTime(int value);
            static /*0x16c4180*/ bool ContainsPointer(UnityEngine.UIElements.VisualElement element, UnityEngine.Vector2 position);
            /*0x16c4d10*/ ClickDetector();
            /*0x16c4ae0*/ void StartClickTracking(UnityEngine.UIElements.EventBase evt);
            /*0x16c4680*/ void SendClickEvent(UnityEngine.UIElements.EventBase evt);
            /*0x16c3f80*/ void CancelClickTracking(UnityEngine.UIElements.EventBase evt);
            /*0x16c4310*/ void ProcessEvent(UnityEngine.UIElements.EventBase evt);
            /*0x16c4020*/ void Cleanup(System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> elements);

            class ButtonClickStatus
            {
                /*0x10*/ UnityEngine.UIElements.VisualElement m_Target;
                /*0x18*/ UnityEngine.Vector3 m_PointerDownPosition;
                /*0x28*/ long m_LastPointerDownTime;
                /*0x30*/ int m_ClickCount;

                /*0x32f970*/ ButtonClickStatus();
                /*0x16c3f10*/ void Reset();
            }
        }

        class BaseListViewController : UnityEngine.UIElements.CollectionViewController
        {
            /*0x30*/ System.Action itemsSourceSizeChanged;
            /*0x38*/ System.Action<System.Collections.Generic.IEnumerable<int>> itemsAdded;
            /*0x40*/ System.Action<System.Collections.Generic.IEnumerable<int>> itemsRemoved;

            static /*0x16bc2d0*/ System.Array AddToArray(System.Array source, int itemCount);
            static /*0x16bd1d0*/ System.Array RemoveFromArray(System.Array source, System.Collections.Generic.List<int> indicesToRemove);
            static /*0x16bda30*/ bool <AddItems>g__IsGenericList|15_0(System.Type t);
            /*0x32f970*/ BaseListViewController();
            /*0x16bdc50*/ void add_itemsSourceSizeChanged(System.Action value);
            /*0x16bded0*/ void remove_itemsSourceSizeChanged(System.Action value);
            /*0x16bdaf0*/ void add_itemsAdded(System.Action<System.Collections.Generic.IEnumerable<int>> value);
            /*0x16bdd70*/ void remove_itemsAdded(System.Action<System.Collections.Generic.IEnumerable<int>> value);
            /*0x16bdba0*/ void add_itemsRemoved(System.Action<System.Collections.Generic.IEnumerable<int>> value);
            /*0x16bde20*/ void remove_itemsRemoved(System.Action<System.Collections.Generic.IEnumerable<int>> value);
            /*0x16bdcf0*/ UnityEngine.UIElements.BaseListView get_baseListView();
            /*0x16bc8d0*/ void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem);
            /*0x16bccc0*/ void PostInitRegistration(UnityEngine.UIElements.ReusableListViewItem listItem);
            /*0x16bc640*/ void InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, int index);
            /*0x72f070*/ bool NeedsDragHandle(int index);
            /*0x16bbbe0*/ void AddItems(int itemCount);
            /*0x16bca80*/ void Move(int index, int newIndex);
            /*0x16bd370*/ void RemoveItem(int index);
            /*0x16bd680*/ void RemoveItems(System.Collections.Generic.List<int> indices);
            /*0x16bd4e0*/ void RemoveItems(int itemCount);
            /*0x16bc400*/ void ClearItems();
            /*0x693b80*/ void RaiseOnSizeChanged();
            /*0x16bd190*/ void RaiseItemsAdded(System.Collections.Generic.IEnumerable<int> indices);
            /*0x16bd1b0*/ void RaiseItemsRemoved(System.Collections.Generic.IEnumerable<int> indices);
            /*0x16bd8f0*/ void Swap(int lhs, int rhs);
            /*0x16bc520*/ void EnsureItemSourceCanBeResized();
        }

        class BaseTreeViewController : UnityEngine.UIElements.CollectionViewController
        {
            static /*0x0*/ Unity.Profiling.ProfilerMarker K_ExpandItemByIndex;
            static /*0x8*/ Unity.Profiling.ProfilerMarker k_CreateWrappers;
            /*0x30*/ System.Collections.Generic.Dictionary<int, UnityEngine.UIElements.TreeItem> m_TreeItems;
            /*0x38*/ System.Collections.Generic.List<int> m_RootIndices;
            /*0x40*/ System.Collections.Generic.List<UnityEngine.UIElements.TreeViewItemWrapper> m_ItemWrappers;
            /*0x48*/ System.Collections.Generic.HashSet<int> m_TreeItemIdsWithItemWrappers;
            /*0x50*/ System.Collections.Generic.List<UnityEngine.UIElements.TreeViewItemWrapper> m_WrapperInsertionList;

            static /*0x16c3a50*/ BaseTreeViewController();
            /*0x16c3b00*/ BaseTreeViewController();
            /*0x16c3c80*/ UnityEngine.UIElements.BaseTreeView get_baseTreeView();
            /*0x32f410*/ System.Collections.IList get_itemsSource();
            /*0x16c3d00*/ void set_itemsSource(System.Collections.IList value);
            /*0x16c36a0*/ void RebuildTree();
            /*0x16345e0*/ System.Collections.Generic.IEnumerable<int> GetRootItemIds();
            /*0x1858d0*/ System.Collections.Generic.IEnumerable<int> GetAllItemIds(System.Collections.Generic.IEnumerable<int> rootIds);
            /*0x17a330*/ int GetParentId(int id);
            /*0x184ab0*/ System.Collections.Generic.IEnumerable<int> GetChildrenIds(int id);
            void Move(int id, int newParentId, int childIndex, bool rebuildTree);
            /*0x16c2910*/ void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem);
            /*0x16c25c0*/ void InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, int index);
            /*0x16c26c0*/ void InvokeDestroyItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem);
            /*0x16c3350*/ void PostInitRegistration(UnityEngine.UIElements.ReusableTreeViewItem treeItem);
            /*0x16c2ba0*/ void OnItemPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x16c31a0*/ void OnToggleValueChanged(UnityEngine.UIElements.ChangeEvent<bool> evt);
            /*0x16c2390*/ int GetIndexForId(int id);
            /*0x16c2200*/ int GetIdForIndex(int index);
            /*0x16c2540*/ bool HasChildren(int id);
            /*0x16c1410*/ bool Exists(int id);
            /*0x16c2490*/ bool HasChildrenByIndex(int index);
            /*0x16c2150*/ System.Collections.Generic.IEnumerable<int> GetChildrenIdsByIndex(int index);
            /*0x16c1f80*/ int GetChildIndexForId(int id);
            /*0x16c2330*/ int GetIndentationDepth(int id);
            /*0x16c22c0*/ int GetIndentationDepthByIndex(int index);
            /*0x72f070*/ bool CanChangeExpandedState(int id);
            /*0x16c2ad0*/ bool IsExpanded(int id);
            /*0x16c29c0*/ bool IsExpandedByIndex(int index);
            /*0x16c1470*/ void ExpandItemByIndex(int index, bool expandAllChildren, bool refresh);
            /*0x16c1da0*/ void ExpandItem(int id, bool expandAllChildren, bool refresh);
            /*0x16c0980*/ void CollapseItemByIndex(int index, bool collapseAllChildren);
            /*0x16c0de0*/ void CollapseItem(int id, bool collapseAllChildren);
            /*0x16c3990*/ void RegenerateWrappers();
            /*0x16c0f80*/ void CreateWrappers(System.Collections.Generic.IEnumerable<int> treeViewItemIds, int depth, ref System.Collections.Generic.List<UnityEngine.UIElements.TreeViewItemWrapper> wrappers);
            /*0x16c2b40*/ bool IsIndexValid(int index);
            /*0x16c3680*/ void RaiseItemParentChanged(int id, int newParentId);

            class <>c__DisplayClass20_0
            {
                /*0x10*/ UnityEngine.UIElements.BaseTreeViewController <>4__this;
                /*0x18*/ UnityEngine.UIElements.ReusableTreeViewItem treeItem;

                /*0x32f970*/ <>c__DisplayClass20_0();
                /*0x16ceab0*/ void <PostInitRegistration>b__0();
            }
        }

        class CollectionViewController : System.IDisposable
        {
            /*0x10*/ UnityEngine.UIElements.BaseVerticalCollectionView m_View;
            /*0x18*/ System.Collections.IList m_ItemsSource;
            /*0x20*/ System.Action itemsSourceChanged;
            /*0x28*/ System.Action<int, int> itemIndexChanged;

            /*0x32f970*/ CollectionViewController();
            /*0x16c76c0*/ void add_itemsSourceChanged(System.Action value);
            /*0x16c7810*/ void remove_itemsSourceChanged(System.Action value);
            /*0x16c7610*/ void add_itemIndexChanged(System.Action<int, int> value);
            /*0x16c7760*/ void remove_itemIndexChanged(System.Action<int, int> value);
            /*0x32f410*/ System.Collections.IList get_itemsSource();
            /*0x16c78b0*/ void set_itemsSource(System.Collections.IList value);
            /*0x7963c0*/ void SetItemsSourceWithoutNotify(System.Collections.IList source);
            /*0x73d3e0*/ UnityEngine.UIElements.BaseVerticalCollectionView get_view();
            /*0x16c7560*/ void SetView(UnityEngine.UIElements.BaseVerticalCollectionView collectionView);
            /*0x32d010*/ void PrepareView();
            /*0x16c7240*/ void Dispose();
            /*0x16c7340*/ int GetItemsCount();
            /*0xbf9a40*/ int GetItemsMinCount();
            /*0x16c7290*/ int GetIndexForId(int id);
            /*0x16c7290*/ int GetIdForIndex(int index);
            /*0x16c72a0*/ object GetItemForIndex(int index);
            /*0x16c74b0*/ void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem);
            /*0x16c7390*/ void InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, int index);
            /*0x16c7500*/ void InvokeUnbindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, int index);
            /*0x16c7480*/ void InvokeDestroyItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement MakeItem();
            /*0x182a70*/ void BindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x182a70*/ void UnbindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x17aec0*/ void DestroyItem(UnityEngine.UIElements.VisualElement element);
            /*0x16c7540*/ void RaiseItemsSourceChanged();
            /*0x16c3680*/ void RaiseItemIndexChanged(int srcIndex, int dstIndex);
        }

        class DefaultMultiColumnTreeViewController<T> : UnityEngine.UIElements.MultiColumnTreeViewController
        {
            /*0x0*/ UnityEngine.UIElements.TreeDataController<T> m_TreeDataController;

            /*0x183830*/ DefaultMultiColumnTreeViewController(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> sortedColumns);
            /*0x1803b0*/ UnityEngine.UIElements.TreeDataController<T> get_treeDataController();
            /*0x1803b0*/ System.Collections.IList get_itemsSource();
            /*0x17aec0*/ void set_itemsSource(System.Collections.IList value);
            /*0x17aec0*/ void SetRootItems(System.Collections.Generic.IList<UnityEngine.UIElements.TreeViewItemData<T>> items);
            /*0x184ab0*/ object GetItemForIndex(int index);
            /*0x17a330*/ int GetParentId(int id);
            /*0x17bfd0*/ bool HasChildren(int id);
            /*0x184ab0*/ System.Collections.Generic.IEnumerable<int> GetChildrenIds(int id);
            void Move(int id, int newParentId, int childIndex, bool rebuildTree);
            bool IsChildOf(int childId, int id);
            /*0x1858d0*/ System.Collections.Generic.IEnumerable<int> GetAllItemIds(System.Collections.Generic.IEnumerable<int> rootIds);
        }

        class DefaultTreeViewController<T> : UnityEngine.UIElements.TreeViewController
        {
            /*0x0*/ UnityEngine.UIElements.TreeDataController<T> m_TreeDataController;

            /*0x180fc0*/ DefaultTreeViewController();
            /*0x1803b0*/ UnityEngine.UIElements.TreeDataController<T> get_treeDataController();
            /*0x1803b0*/ System.Collections.IList get_itemsSource();
            /*0x17aec0*/ void set_itemsSource(System.Collections.IList value);
            /*0x17aec0*/ void SetRootItems(System.Collections.Generic.IList<UnityEngine.UIElements.TreeViewItemData<T>> items);
            /*0x184ab0*/ object GetItemForIndex(int index);
            /*0x17a330*/ int GetParentId(int id);
            /*0x17bfd0*/ bool HasChildren(int id);
            /*0x184ab0*/ System.Collections.Generic.IEnumerable<int> GetChildrenIds(int id);
            void Move(int id, int newParentId, int childIndex, bool rebuildTree);
            bool IsChildOf(int childId, int id);
            /*0x1858d0*/ System.Collections.Generic.IEnumerable<int> GetAllItemIds(System.Collections.Generic.IEnumerable<int> rootIds);
        }

        class ListViewController : UnityEngine.UIElements.BaseListViewController
        {
            /*0x32f970*/ ListViewController();
            /*0x16c9c10*/ UnityEngine.UIElements.ListView get_listView();
            /*0x16c9ac0*/ UnityEngine.UIElements.VisualElement MakeItem();
            /*0x16c9840*/ void BindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16c9bc0*/ void UnbindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16c9a70*/ void DestroyItem(UnityEngine.UIElements.VisualElement element);
        }

        class MultiColumnListViewController : UnityEngine.UIElements.BaseListViewController
        {
            /*0x48*/ UnityEngine.UIElements.MultiColumnController m_ColumnController;

            /*0x16ca600*/ MultiColumnListViewController(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> sortedColumns);
            /*0x4e40d0*/ UnityEngine.UIElements.MultiColumnController get_columnController();
            /*0x16ca6a0*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader get_header();
            /*0x16ca150*/ void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem);
            /*0x16ca3c0*/ UnityEngine.UIElements.VisualElement MakeItem();
            /*0x16c9f20*/ void BindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16ca510*/ void UnbindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16c9fc0*/ void DestroyItem(UnityEngine.UIElements.VisualElement element);
            /*0x16ca3e0*/ void PrepareView();
            /*0x16c9fe0*/ void Dispose();
            /*0x16ca530*/ void UpdateReorderClassList();
        }

        class MultiColumnTreeViewController : UnityEngine.UIElements.BaseTreeViewController
        {
            /*0x58*/ UnityEngine.UIElements.MultiColumnController m_ColumnController;

            /*0x16ca990*/ MultiColumnTreeViewController(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> sortedColumns);
            /*0xb61940*/ UnityEngine.UIElements.MultiColumnController get_columnController();
            /*0x16caa50*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader get_header();
            /*0x16ca7e0*/ void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem);
            /*0x16ca920*/ UnityEngine.UIElements.VisualElement MakeItem();
            /*0x16ca6b0*/ void BindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16ca970*/ void UnbindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16ca750*/ void DestroyItem(UnityEngine.UIElements.VisualElement element);
            /*0x16ca940*/ void PrepareView();
            /*0x16ca770*/ void Dispose();
        }

        class TreeDataController<T>
        {
            /*0x0*/ UnityEngine.UIElements.TreeData<T> m_TreeData;
            /*0x0*/ System.Collections.Generic.Stack<System.Collections.Generic.IEnumerator<int>> m_IteratorStack;

            static /*0x17e030*/ System.Collections.Generic.IEnumerable<int> GetItemIds(System.Collections.Generic.IEnumerable<UnityEngine.UIElements.TreeViewItemData<T>> items);
            /*0x180fc0*/ TreeDataController();
            /*0x17aec0*/ void SetRootItems(System.Collections.Generic.IList<UnityEngine.UIElements.TreeViewItemData<T>> rootItems);
            /*0x2a5510*/ T GetDataForId(int id);
            /*0x17a330*/ int GetParentId(int id);
            /*0x17bfd0*/ bool HasChildren(int id);
            /*0x184ab0*/ System.Collections.Generic.IEnumerable<int> GetChildrenIds(int id);
            void Move(int id, int newParentId, int childIndex);
            bool IsChildOf(int childId, int id);
            /*0x1858d0*/ System.Collections.Generic.IEnumerable<int> GetAllItemIds(System.Collections.Generic.IEnumerable<int> rootIds);

            class <GetAllItemIds>d__13<T> : System.Collections.Generic.IEnumerable<int>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<int>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x0*/ int <>1__state;
                /*0x0*/ int <>2__current;
                /*0x0*/ int <>l__initialThreadId;
                /*0x0*/ System.Collections.Generic.IEnumerable<int> rootIds;
                /*0x0*/ System.Collections.Generic.IEnumerable<int> <>3__rootIds;
                /*0x0*/ UnityEngine.UIElements.TreeDataController<T> <>4__this;
                /*0x0*/ System.Collections.Generic.IEnumerator<int> <currentIterator>5__1;
                /*0x0*/ bool <hasNext>5__2;
                /*0x0*/ int <currentItemId>5__3;

                /*0x17aa40*/ <GetAllItemIds>d__13(int <>1__state);
                /*0x180fc0*/ void System.IDisposable.Dispose();
                /*0x17cb40*/ bool MoveNext();
                /*0x180980*/ int System.Collections.Generic.IEnumerator<System.Int32>.get_Current();
                /*0x180fc0*/ void System.Collections.IEnumerator.Reset();
                /*0x1803b0*/ object System.Collections.IEnumerator.get_Current();
                /*0x1803b0*/ System.Collections.Generic.IEnumerator<int> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator();
                /*0x1803b0*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            }

            class <GetItemIds>d__9<T> : System.Collections.Generic.IEnumerable<int>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<int>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x0*/ int <>1__state;
                /*0x0*/ int <>2__current;
                /*0x0*/ int <>l__initialThreadId;
                /*0x0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.TreeViewItemData<T>> items;
                /*0x0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.TreeViewItemData<T>> <>3__items;
                /*0x0*/ System.Collections.Generic.IEnumerator<UnityEngine.UIElements.TreeViewItemData<T>> <>s__1;
                /*0x0*/ UnityEngine.UIElements.TreeViewItemData<T> <item>5__2;

                /*0x17aa40*/ <GetItemIds>d__9(int <>1__state);
                /*0x180fc0*/ void System.IDisposable.Dispose();
                /*0x17cb40*/ bool MoveNext();
                /*0x180fc0*/ void <>m__Finally1();
                /*0x180980*/ int System.Collections.Generic.IEnumerator<System.Int32>.get_Current();
                /*0x180fc0*/ void System.Collections.IEnumerator.Reset();
                /*0x1803b0*/ object System.Collections.IEnumerator.get_Current();
                /*0x1803b0*/ System.Collections.Generic.IEnumerator<int> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator();
                /*0x1803b0*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            }
        }

        class TreeViewController : UnityEngine.UIElements.BaseTreeViewController
        {
            /*0x16ce9e0*/ TreeViewController();
            /*0x16cea30*/ UnityEngine.UIElements.TreeView get_treeView();
            /*0x16ce890*/ UnityEngine.UIElements.VisualElement MakeItem();
            /*0x16ce680*/ void BindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16ce990*/ void UnbindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x16ce840*/ void DestroyItem(UnityEngine.UIElements.VisualElement element);
        }

        class CollectionVirtualizationController
        {
            /*0x10*/ UnityEngine.UIElements.ScrollView m_ScrollView;

            /*0x49b490*/ CollectionVirtualizationController(UnityEngine.UIElements.ScrollView scrollView);
            /*0x180980*/ int get_firstVisibleIndex();
            /*0x17aa40*/ void set_firstVisibleIndex(int value);
            /*0x180980*/ int get_visibleItemCount();
            /*0x181190*/ void Refresh(bool rebuild);
            /*0x17aa40*/ void ScrollToItem(int id);
            /*0x17aca0*/ void Resize(UnityEngine.Vector2 size);
            /*0x17aca0*/ void OnScroll(UnityEngine.Vector2 offset);
            int GetIndexFromPosition(UnityEngine.Vector2 position);
            float GetExpectedItemHeight(int index);
            /*0x17fc30*/ float GetExpectedContentHeight();
            /*0x17aec0*/ void OnFocus(UnityEngine.UIElements.VisualElement leafTarget);
            /*0x17aec0*/ void OnBlur(UnityEngine.UIElements.VisualElement willFocus);
            /*0x180fc0*/ void UpdateBackground();
            /*0x1803b0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.ReusableCollectionItem> get_activeItems();
            /*0x17aec0*/ void StartDragItem(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x17aa40*/ void EndDrag(int dropIndex);
        }

        class DynamicHeightVirtualizationController<T> : UnityEngine.UIElements.VerticalVirtualizationController<T>
        {
            /*0x0*/ int m_HighestCachedIndex;
            /*0x0*/ System.Collections.Generic.Dictionary<int, float> m_ItemHeightCache;
            /*0x0*/ System.Collections.Generic.Dictionary<int, UnityEngine.UIElements.DynamicHeightVirtualizationController.ContentHeightCacheInfo<T>> m_ContentHeightCache;
            /*0x0*/ System.Collections.Generic.HashSet<int> m_WaitingCache;
            /*0x0*/ int m_ForcedFirstVisibleItem;
            /*0x0*/ int m_ForcedLastVisibleItem;
            /*0x0*/ bool m_StickToBottom;
            /*0x0*/ UnityEngine.UIElements.DynamicHeightVirtualizationController.VirtualizationChange<T> m_LastChange;
            /*0x0*/ UnityEngine.UIElements.DynamicHeightVirtualizationController.ScrollDirection<T> m_ScrollDirection;
            /*0x0*/ UnityEngine.Vector2 m_DelayedScrollOffset;
            /*0x0*/ float m_AccumulatedHeight;
            /*0x0*/ float m_MinimumItemHeight;
            /*0x0*/ System.Action m_FillCallback;
            /*0x0*/ System.Action m_ScrollCallback;
            /*0x0*/ System.Action m_ScrollResetCallback;
            /*0x0*/ System.Action<UnityEngine.UIElements.ReusableCollectionItem> m_GeometryChangedCallback;
            /*0x0*/ UnityEngine.UIElements.IVisualElementScheduledItem m_ScheduledItem;
            /*0x0*/ UnityEngine.UIElements.IVisualElementScheduledItem m_ScrollScheduledItem;
            /*0x0*/ UnityEngine.UIElements.IVisualElementScheduledItem m_ScrollResetScheduledItem;
            /*0x0*/ System.Predicate<int> m_IndexOutOfBoundsPredicate;

            /*0x17aec0*/ DynamicHeightVirtualizationController(UnityEngine.UIElements.BaseVerticalCollectionView collectionView);
            /*0x17fc30*/ float get_defaultExpectedHeight();
            /*0x17fc30*/ float get_contentPadding();
            /*0x178d00*/ void set_contentPadding(float value);
            /*0x17fc30*/ float get_contentHeight();
            /*0x178d00*/ void set_contentHeight(float value);
            /*0x180980*/ int get_anchoredIndex();
            /*0x17aa40*/ void set_anchoredIndex(int value);
            /*0x17fc30*/ float get_anchorOffset();
            /*0x178d00*/ void set_anchorOffset(float value);
            /*0x17fc30*/ float get_viewportMaxOffset();
            /*0x17cb40*/ bool get_alwaysRebindOnRefresh();
            /*0x181190*/ void Refresh(bool rebuild);
            /*0x17aa40*/ void ScrollToItem(int index);
            /*0x17aca0*/ void Resize(UnityEngine.Vector2 size);
            /*0x17aca0*/ void OnScroll(UnityEngine.Vector2 scrollOffset);
            /*0x180fc0*/ void OnScrollUpdate();
            /*0x17aa40*/ void CycleItems(int firstIndex);
            /*0x17cb40*/ bool NeedsFill();
            /*0x180fc0*/ void Fill();
            void UpdateScrollViewContainer(float previousHeight, float newHeight);
            /*0x181190*/ void ApplyScrollViewUpdate(bool dimensionsOnly);
            /*0x180fc0*/ void UpdateAnchor();
            /*0x180fc0*/ void ScheduleFill();
            /*0x180fc0*/ void ScheduleScroll();
            /*0x180fc0*/ void ScheduleScrollDirectionReset();
            /*0x180fc0*/ void ResetScroll();
            int GetIndexFromPosition(UnityEngine.Vector2 position);
            float GetExpectedItemHeight(int index);
            int GetFirstVisibleItem(float offset);
            /*0x17fc30*/ float GetExpectedContentHeight();
            float GetContentHeightForIndex(int lastIndex);
            /*0x2a5510*/ UnityEngine.UIElements.DynamicHeightVirtualizationController.ContentHeightCacheInfo<T> GetCachedContentHeight(int index);
            void RegisterItemHeight(int index, float height);
            /*0x17aa40*/ void UnregisterItemHeight(int index);
            /*0x180fc0*/ void CleanItemHeightCache();
            /*0x17aec0*/ void OnRecycledItemGeometryChanged(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x17e620*/ bool UpdateRegisteredHeight(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x2a5510*/ T GetOrMakeItemAtIndex(int activeItemIndex, int scrollViewIndex);
            /*0x17aa40*/ void ReleaseItem(int activeItemsIndex);
            /*0x17aec0*/ void StartDragItem(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x17aa40*/ void EndDrag(int dropIndex);
            /*0x17aa40*/ void HideItem(int activeItemsIndex);
            /*0x2a5510*/ void MarkWaitingForLayout(T item);
            /*0x17bfd0*/ bool IsIndexOutOfBounds(int i);

            struct ContentHeightCacheInfo<T>
            {
                /*0x0*/ float sum;
                /*0x0*/ int count;

                ContentHeightCacheInfo(float sum, int count);
            }

            enum VirtualizationChange<T>
            {
                None = 0,
                Resize = 1,
                Scroll = 2,
                ForcedScroll = 3,
            }

            enum ScrollDirection<T>
            {
                Idle = 0,
                Up = 1,
                Down = 2,
            }
        }

        class FixedHeightVirtualizationController<T> : UnityEngine.UIElements.VerticalVirtualizationController<T>
        {
            /*0x17aec0*/ FixedHeightVirtualizationController(UnityEngine.UIElements.BaseVerticalCollectionView collectionView);
            /*0x17fc30*/ float get_resolvedItemHeight();
            /*0x2a5510*/ bool VisibleItemPredicate(T i);
            int GetIndexFromPosition(UnityEngine.Vector2 position);
            float GetExpectedItemHeight(int index);
            /*0x17fc30*/ float GetExpectedContentHeight();
            /*0x17aa40*/ void ScrollToItem(int index);
            /*0x17aca0*/ void Resize(UnityEngine.Vector2 size);
            /*0x17aca0*/ void OnScroll(UnityEngine.Vector2 scrollOffset);
            /*0x2a5510*/ T GetOrMakeItemAtIndex(int activeItemIndex, int scrollViewIndex);
            /*0x17aa40*/ void EndDrag(int dropIndex);
        }

        class ReusableCollectionItem
        {
            /*0x10*/ UnityEngine.UIElements.VisualElement <bindableElement>k__BackingField;
            /*0x18*/ UnityEngine.UIElements.Experimental.ValueAnimation<UnityEngine.UIElements.Experimental.StyleValues> <animator>k__BackingField;
            /*0x20*/ int <index>k__BackingField;
            /*0x24*/ int <id>k__BackingField;
            /*0x28*/ bool <isDragGhost>k__BackingField;
            /*0x30*/ System.Action<UnityEngine.UIElements.ReusableCollectionItem> onGeometryChanged;
            /*0x38*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.GeometryChangedEvent> m_GeometryChangedEventCallback;
            /*0x40*/ System.Action<UnityEngine.UIElements.ReusableCollectionItem> onDestroy;

            /*0x16cc520*/ ReusableCollectionItem();
            /*0x73d3e0*/ UnityEngine.UIElements.VisualElement get_rootElement();
            /*0x73d3e0*/ UnityEngine.UIElements.VisualElement get_bindableElement();
            /*0x9f12f0*/ void set_bindableElement(UnityEngine.UIElements.VisualElement value);
            /*0x32f410*/ UnityEngine.UIElements.Experimental.ValueAnimation<UnityEngine.UIElements.Experimental.StyleValues> get_animator();
            /*0x7963c0*/ void set_animator(UnityEngine.UIElements.Experimental.ValueAnimation<UnityEngine.UIElements.Experimental.StyleValues> value);
            /*0x3e3af0*/ int get_index();
            /*0x11172b0*/ void set_index(int value);
            /*0x3e3ad0*/ int get_id();
            /*0xc70b30*/ void set_id(int value);
            /*0x4ba480*/ bool get_isDragGhost();
            /*0xd18990*/ void set_isDragGhost(bool value);
            /*0x16cc660*/ void add_onGeometryChanged(System.Action<UnityEngine.UIElements.ReusableCollectionItem> value);
            /*0x16cc7c0*/ void remove_onGeometryChanged(System.Action<UnityEngine.UIElements.ReusableCollectionItem> value);
            /*0x16cc5b0*/ void add_onDestroy(System.Action<UnityEngine.UIElements.ReusableCollectionItem> value);
            /*0x16cc710*/ void remove_onDestroy(System.Action<UnityEngine.UIElements.ReusableCollectionItem> value);
            /*0x9f12f0*/ void Init(UnityEngine.UIElements.VisualElement item);
            /*0x16cc110*/ void PreAttachElement();
            /*0x16cbfc0*/ void DetachElement();
            /*0x16cbfa0*/ void DestroyElement();
            /*0x16cc3e0*/ void SetSelected(bool selected);
            /*0x16cc1e0*/ void SetDragGhost(bool dragGhost);
            /*0x16cc0f0*/ void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
        }

        class ReusableListViewItem : UnityEngine.UIElements.ReusableCollectionItem
        {
            /*0x48*/ UnityEngine.UIElements.VisualElement m_Container;
            /*0x50*/ UnityEngine.UIElements.VisualElement m_DragHandle;
            /*0x58*/ UnityEngine.UIElements.VisualElement m_ItemContainer;

            /*0x16ccf50*/ ReusableListViewItem();
            /*0x16ccf60*/ UnityEngine.UIElements.VisualElement get_rootElement();
            /*0x16cc900*/ void Init(UnityEngine.UIElements.VisualElement item, bool usesAnimatedDragger);
            /*0x16ccc50*/ void UpdateHierarchy(UnityEngine.UIElements.VisualElement root, UnityEngine.UIElements.VisualElement item, bool usesAnimatedDragger);
            /*0x16ccae0*/ void UpdateDragHandle(bool needsDragHandle);
            /*0x16cc9e0*/ void PreAttachElement();
            /*0x16cc870*/ void DetachElement();
            /*0x16cca70*/ void SetDragGhost(bool dragGhost);
        }

        class ReusableMultiColumnListViewItem : UnityEngine.UIElements.ReusableListViewItem
        {
            /*0x16ccf50*/ ReusableMultiColumnListViewItem();
            /*0x73d3e0*/ UnityEngine.UIElements.VisualElement get_rootElement();
            /*0x32d010*/ void Init(UnityEngine.UIElements.VisualElement item);
            /*0x16ccf70*/ void Init(UnityEngine.UIElements.VisualElement container, UnityEngine.UIElements.Columns columns, bool usesAnimatedDrag);
        }

        class ReusableMultiColumnTreeViewItem : UnityEngine.UIElements.ReusableTreeViewItem
        {
            /*0x16cd420*/ ReusableMultiColumnTreeViewItem();
            /*0x73d3e0*/ UnityEngine.UIElements.VisualElement get_rootElement();
            /*0x32d010*/ void Init(UnityEngine.UIElements.VisualElement item);
            /*0x16cd1d0*/ void Init(UnityEngine.UIElements.VisualElement container, UnityEngine.UIElements.Columns columns);
        }

        class ReusableTreeViewItem : UnityEngine.UIElements.ReusableCollectionItem
        {
            /*0x48*/ UnityEngine.UIElements.Toggle m_Toggle;
            /*0x50*/ UnityEngine.UIElements.VisualElement m_Container;
            /*0x58*/ UnityEngine.UIElements.VisualElement m_IndentElement;
            /*0x60*/ UnityEngine.UIElements.VisualElement m_BindableContainer;
            /*0x68*/ UnityEngine.UIElements.VisualElement m_Checkmark;
            /*0x70*/ System.Action<UnityEngine.UIElements.PointerUpEvent> onPointerUp;
            /*0x78*/ System.Action<UnityEngine.UIElements.ChangeEvent<bool>> onToggleValueChanged;
            /*0x80*/ int m_Depth;
            /*0x84*/ float m_IndentWidth;
            /*0x88*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.PointerUpEvent> m_PointerUpCallback;
            /*0x90*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.ChangeEvent<bool>> m_ToggleValueChangedCallback;
            /*0x98*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.GeometryChangedEvent> m_ToggleGeometryChangedCallback;

            /*0x16cd420*/ ReusableTreeViewItem();
            /*0x16ce2f0*/ UnityEngine.UIElements.VisualElement get_rootElement();
            /*0x16ce190*/ void add_onPointerUp(System.Action<UnityEngine.UIElements.PointerUpEvent> value);
            /*0x16ce300*/ void remove_onPointerUp(System.Action<UnityEngine.UIElements.PointerUpEvent> value);
            /*0x16ce240*/ void add_onToggleValueChanged(System.Action<UnityEngine.UIElements.ChangeEvent<bool>> value);
            /*0x16ce3b0*/ void remove_onToggleValueChanged(System.Action<UnityEngine.UIElements.ChangeEvent<bool>> value);
            /*0x16cdba0*/ void Init(UnityEngine.UIElements.VisualElement item);
            /*0x16cd720*/ void InitExpandHierarchy(UnityEngine.UIElements.VisualElement root, UnityEngine.UIElements.VisualElement item);
            /*0x16cde20*/ void PreAttachElement();
            /*0x16cd550*/ void DetachElement();
            /*0x16cd700*/ void Indent(int depth);
            /*0x16cdfd0*/ void SetExpandedWithoutNotify(bool expanded);
            /*0x16cdff0*/ void SetToggleVisibility(bool visible);
            /*0x16cdcb0*/ void OnToggleGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x16ce010*/ void UpdateIndentLayout();
            /*0x16cdc90*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x16cde00*/ void OnToggleValueChanged(UnityEngine.UIElements.ChangeEvent<bool> evt);
        }

        class VerticalVirtualizationController<T> : UnityEngine.UIElements.CollectionVirtualizationController
        {
            /*0x0*/ UnityEngine.Pool.ObjectPool<T> m_Pool;
            /*0x0*/ UnityEngine.UIElements.BaseVerticalCollectionView m_CollectionView;
            /*0x0*/ System.Collections.Generic.List<T> m_ActiveItems;
            /*0x0*/ T m_DraggedItem;
            /*0x0*/ int m_LastFocusedElementIndex;
            /*0x0*/ System.Collections.Generic.List<int> m_LastFocusedElementTreeChildIndexes;
            /*0x0*/ System.Func<T, bool> m_VisibleItemPredicateDelegate;
            /*0x0*/ System.Collections.Generic.List<T> m_ScrollInsertionList;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_EmptyRows;

            /*0x17aec0*/ VerticalVirtualizationController(UnityEngine.UIElements.BaseVerticalCollectionView collectionView);
            /*0x1803b0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.ReusableCollectionItem> get_activeItems();
            /*0x180980*/ int get_itemsCount();
            /*0x2a5510*/ bool VisibleItemPredicate(T i);
            /*0x2a5510*/ T get_firstVisibleItem();
            /*0x2a5510*/ T get_lastVisibleItem();
            /*0x180980*/ int get_visibleItemCount();
            /*0x1803b0*/ UnityEngine.UIElements.SerializedVirtualizationData get_serializedData();
            /*0x180980*/ int get_firstVisibleIndex();
            /*0x17aa40*/ void set_firstVisibleIndex(int value);
            /*0x17fc30*/ float get_lastHeight();
            /*0x17cb40*/ bool get_alwaysRebindOnRefresh();
            /*0x181190*/ void Refresh(bool rebuild);
            /*0x2a5510*/ void Setup(T recycledItem, int newIndex);
            /*0x17aec0*/ void OnFocus(UnityEngine.UIElements.VisualElement leafTarget);
            /*0x17aec0*/ void OnBlur(UnityEngine.UIElements.VisualElement willFocus);
            /*0x182a70*/ void HandleFocus(UnityEngine.UIElements.ReusableCollectionItem recycledItem, int previousIndex);
            /*0x180fc0*/ void UpdateBackground();
            /*0x17aec0*/ void StartDragItem(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x17aa40*/ void EndDrag(int dropIndex);
            /*0x2a5510*/ T GetOrMakeItemAtIndex(int activeItemIndex, int scrollViewIndex);
            /*0x17aa40*/ void ReleaseItem(int activeItemsIndex);
            /*0x17aec0*/ void OnDestroyItem(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x180980*/ int GetDraggedIndex();

            class <>c<T>
            {
                static /*0x0*/ UnityEngine.UIElements.VerticalVirtualizationController.<>c<T> <>9;
                static /*0x0*/ System.Func<T> <>9__30_0;
                static /*0x0*/ System.Action<T> <>9__30_1;
                static /*0x0*/ System.Action<T> <>9__30_2;

                static /*0x180ff0*/ <>c();
                /*0x180fc0*/ <>c();
                /*0x2a5510*/ T <.ctor>b__30_0();
                /*0x2a5510*/ void <.ctor>b__30_1(T i);
                /*0x2a5510*/ void <.ctor>b__30_2(T i);
            }
        }

        class ContextualMenuManager
        {
            /*0x10*/ bool <displayMenuHandledOSX>k__BackingField;

            /*0x32f970*/ ContextualMenuManager();
            /*0x793eb0*/ bool get_displayMenuHandledOSX();
            /*0x793ec0*/ void set_displayMenuHandledOSX(bool value);
            /*0x183150*/ void DisplayMenuIfEventMatches(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IEventHandler eventHandler);
            /*0x16c7960*/ void DisplayMenu(UnityEngine.UIElements.EventBase triggerEvent, UnityEngine.UIElements.IEventHandler target);
            /*0x183150*/ void DoDisplayMenu(UnityEngine.UIElements.DropdownMenu menu, UnityEngine.UIElements.EventBase triggerEvent);
        }

        class ContextualMenuManipulator : UnityEngine.UIElements.MouseManipulator
        {
            /*0x30*/ System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent> m_MenuBuilder;

            /*0x16c8520*/ ContextualMenuManipulator(System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent> menuBuilder);
            /*0x16c8020*/ void RegisterCallbacksOnTarget();
            /*0x16c82a0*/ void UnregisterCallbacksFromTarget();
            /*0x16c7e80*/ void OnMouseUpDownEvent(UnityEngine.UIElements.IMouseEvent evt);
            /*0x16c7d70*/ void OnMouseDownEventOSX(UnityEngine.UIElements.MouseDownEvent evt);
            /*0x16c7f20*/ void OnMouseUpEventOSX(UnityEngine.UIElements.MouseUpEvent evt);
            /*0x16c7d10*/ void OnKeyUpEvent(UnityEngine.UIElements.KeyUpEvent evt);
            /*0x16c7c40*/ void DoDisplayMenu(UnityEngine.UIElements.EventBase evt);
            /*0x16c7cf0*/ void OnContextualMenuEvent(UnityEngine.UIElements.ContextualMenuPopulateEvent evt);
        }

        class BaseBoolField : UnityEngine.UIElements.BaseField<bool>
        {
            /*0x448*/ UnityEngine.UIElements.Label m_Label;
            /*0x450*/ UnityEngine.UIElements.VisualElement m_CheckMark;
            /*0x458*/ UnityEngine.UIElements.Clickable m_Clickable;
            /*0x460*/ string m_OriginalText;

            /*0x16bb7d0*/ BaseBoolField(string label);
            /*0x16bb2c0*/ void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt);
            /*0x16bbb00*/ string get_text();
            /*0x16bbb30*/ void set_text(string value);
            /*0x16bb030*/ void InitLabel();
            /*0x16bb3f0*/ void SetValueWithoutNotify(bool newValue);
            /*0x16bb0d0*/ void OnClickEvent(UnityEngine.UIElements.EventBase evt);
            /*0x16bb4e0*/ void ToggleValue();
            /*0x16bb610*/ void UpdateMixedValueContent();
            /*0x16bb300*/ void RegisterEditingCallbacks();
            /*0x16bb520*/ void UnregisterEditingCallbacks();
        }

        class BaseCompositeField<TValueType, TField, TFieldValue> : UnityEngine.UIElements.BaseField<TValueType>
        {
            static /*0x0*/ string ussClassName;
            static /*0x0*/ string labelUssClassName;
            static /*0x0*/ string inputUssClassName;
            static /*0x0*/ string spacerUssClassName;
            static /*0x0*/ string multilineVariantUssClassName;
            static /*0x0*/ string fieldGroupUssClassName;
            static /*0x0*/ string fieldUssClassName;
            static /*0x0*/ string firstFieldVariantUssClassName;
            static /*0x0*/ string twoLinesVariantUssClassName;
            /*0x0*/ System.Collections.Generic.List<TField> m_Fields;
            /*0x0*/ bool m_ShouldUpdateDisplay;
            /*0x0*/ bool m_ForceUpdateDisplay;
            /*0x0*/ int m_PropertyIndex;

            static /*0x180ff0*/ BaseCompositeField();
            /*0x182a70*/ BaseCompositeField(string label, int fieldsByLine);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement GetSpacer();
            /*0x1803b0*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<TValueType, TField, TFieldValue> DescribeFields();
            /*0x180fc0*/ void UpdateDisplay();
            /*0x2a5510*/ void SetValueWithoutNotify(TValueType newValue);
            /*0x180fc0*/ void OnViewDataReady();
            /*0x180fc0*/ void UpdateMixedValueContent();

            struct FieldDescription<TValueType, TField, TFieldValue>
            {
                /*0x0*/ string name;
                /*0x0*/ string ussName;
                /*0x0*/ System.Func<TValueType, TFieldValue> read;
                /*0x0*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<TValueType, TField, TFieldValue> write;

                /*0x183b40*/ FieldDescription(string name, string ussName, System.Func<TValueType, TFieldValue> read, UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<TValueType, TField, TFieldValue> write);

                class WriteDelegate<TValueType, TField, TFieldValue> : System.MulticastDelegate
                {
                    WriteDelegate(object object, nint method);
                    /*0x2a5510*/ void Invoke(ref TValueType val, TFieldValue fieldValue);
                }
            }

            class <>c__DisplayClass24_0<TValueType, TField, TFieldValue>
            {
                /*0x0*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<TValueType, TField, TFieldValue> desc;
                /*0x0*/ TField field;
                /*0x0*/ UnityEngine.UIElements.BaseCompositeField<TValueType, TField, TFieldValue> <>4__this;

                /*0x180fc0*/ <>c__DisplayClass24_0();
                /*0x2a5510*/ TFieldValue <.ctor>b__0(TFieldValue newValue);
                /*0x17aec0*/ void <.ctor>b__1(UnityEngine.UIElements.ChangeEvent<TFieldValue> e);
            }
        }

        enum ListViewReorderMode
        {
            Simple = 0,
            Animated = 1,
        }

        class BaseListView : UnityEngine.UIElements.BaseVerticalCollectionView
        {
            static /*0x0*/ string k_SizeFieldLabel;
            static /*0x8*/ string ussClassName;
            static /*0x10*/ string itemUssClassName;
            static /*0x18*/ string emptyLabelUssClassName;
            static /*0x20*/ string overMaxMultiEditLimitClassName;
            static /*0x28*/ string reorderableUssClassName;
            static /*0x30*/ string reorderableItemUssClassName;
            static /*0x38*/ string reorderableItemContainerUssClassName;
            static /*0x40*/ string reorderableItemHandleUssClassName;
            static /*0x48*/ string reorderableItemHandleBarUssClassName;
            static /*0x50*/ string footerUssClassName;
            static /*0x58*/ string foldoutHeaderUssClassName;
            static /*0x60*/ string arraySizeFieldUssClassName;
            static /*0x68*/ string arraySizeFieldWithHeaderUssClassName;
            static /*0x70*/ string arraySizeFieldWithFooterUssClassName;
            static /*0x78*/ string listViewWithHeaderUssClassName;
            static /*0x80*/ string listViewWithFooterUssClassName;
            static /*0x88*/ string scrollViewWithFooterUssClassName;
            static /*0x90*/ string footerAddButtonName;
            static /*0x98*/ string footerRemoveButtonName;
            static /*0xa0*/ string k_EmptyListStr;
            /*0x4c0*/ bool m_ShowBoundCollectionSize;
            /*0x4c1*/ bool m_ShowFoldoutHeader;
            /*0x4c8*/ string m_HeaderTitle;
            /*0x4d0*/ System.Action<System.Collections.Generic.IEnumerable<int>> itemsAdded;
            /*0x4d8*/ System.Action<System.Collections.Generic.IEnumerable<int>> itemsRemoved;
            /*0x4e0*/ System.Action itemsSourceSizeChanged;
            /*0x4e8*/ UnityEngine.UIElements.Label m_ListViewLabel;
            /*0x4f0*/ UnityEngine.UIElements.Foldout m_Foldout;
            /*0x4f8*/ UnityEngine.UIElements.TextField m_ArraySizeField;
            /*0x500*/ bool m_IsOverMultiEditLimit;
            /*0x508*/ UnityEngine.UIElements.VisualElement m_Footer;
            /*0x510*/ UnityEngine.UIElements.Button m_AddButton;
            /*0x518*/ UnityEngine.UIElements.Button m_RemoveButton;
            /*0x520*/ System.Action<System.Collections.Generic.IEnumerable<int>> m_ItemAddedCallback;
            /*0x528*/ System.Action<System.Collections.Generic.IEnumerable<int>> m_ItemRemovedCallback;
            /*0x530*/ System.Action m_ItemsSourceSizeChangedCallback;
            /*0x538*/ UnityEngine.UIElements.ListViewReorderMode m_ReorderMode;
            /*0x540*/ System.Action reorderModeChanged;
            /*0x548*/ string m_MaxMultiEditStr;

            static /*0x16bfbc0*/ BaseListView();
            /*0x16c0300*/ BaseListView();
            /*0x16c0490*/ bool get_showBoundCollectionSize();
            /*0x16c06a0*/ void set_showBoundCollectionSize(bool value);
            /*0x16c04a0*/ bool get_showFoldoutHeader();
            /*0x16c06c0*/ void set_showFoldoutHeader(bool value);
            /*0x16bf460*/ void SetupArraySizeField();
            /*0x16c05e0*/ void set_headerTitle(string value);
            /*0x16c0480*/ bool get_showAddRemoveFooter();
            /*0x16c0690*/ void set_showAddRemoveFooter(bool value);
            /*0x16be0f0*/ void EnableFooter(bool enabled);
            /*0x16bdf70*/ void AddItems(int itemCount);
            /*0x16bea50*/ void OnArraySizeFieldChanged(UnityEngine.UIElements.ChangeEvent<string> evt);
            /*0x16bf850*/ void UpdateArraySizeField();
            /*0x16bf940*/ void UpdateListViewLabel();
            /*0x16be8a0*/ void OnAddClicked();
            /*0x16bed60*/ void OnRemoveClicked();
            /*0x16c0460*/ UnityEngine.UIElements.VisualElement get_footer();
            /*0x16c04b0*/ UnityEngine.UIElements.BaseListViewController get_viewController();
            /*0x16be0b0*/ void CreateVirtualizationController();
            /*0x16bef20*/ void SetViewController(UnityEngine.UIElements.CollectionViewController controller);
            /*0x16beca0*/ void OnItemAdded(System.Collections.Generic.IEnumerable<int> indices);
            /*0x16becc0*/ void OnItemsRemoved(System.Collections.Generic.IEnumerable<int> indices);
            /*0x16bece0*/ void OnItemsSourceSizeChanged();
            /*0x16c03b0*/ void add_reorderModeChanged(System.Action value);
            /*0x16c0530*/ void remove_reorderModeChanged(System.Action value);
            /*0x16c0470*/ UnityEngine.UIElements.ListViewReorderMode get_reorderMode();
            /*0x16c0630*/ void set_reorderMode(UnityEngine.UIElements.ListViewReorderMode value);
            /*0x16be010*/ UnityEngine.UIElements.ListViewDragger CreateDragger();
            /*0x16bdfb0*/ UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController();
            /*0x16beef0*/ void PostRefresh();
            /*0x16be570*/ bool HandleItemNavigation(bool moveIn, bool altPressed);
            /*0x16bf7d0*/ void <OnAddClicked>b__38_0();

            class UxmlTraits : UnityEngine.UIElements.BaseVerticalCollectionView.UxmlTraits
            {
                /*0xb0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowFoldoutHeader;
                /*0xb8*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_HeaderTitle;
                /*0xc0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowAddRemoveFooter;
                /*0xc8*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.ListViewReorderMode> m_ReorderMode;
                /*0xd0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowBoundCollectionSize;

                /*0x16ea460*/ UxmlTraits();
                /*0x16e80d0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class BasePopupField<TValueType, TValueChoice> : UnityEngine.UIElements.BaseField<TValueType>
        {
            static /*0x0*/ string ussClassName;
            static /*0x0*/ string textUssClassName;
            static /*0x0*/ string arrowUssClassName;
            static /*0x0*/ string labelUssClassName;
            static /*0x0*/ string inputUssClassName;
            /*0x0*/ System.Collections.Generic.List<TValueChoice> m_Choices;
            /*0x0*/ UnityEngine.UIElements.TextElement m_TextElement;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_ArrowElement;
            /*0x0*/ System.Func<TValueChoice, string> m_FormatSelectedValueCallback;
            /*0x0*/ System.Func<TValueChoice, string> m_FormatListItemCallback;
            /*0x0*/ System.Func<UnityEngine.UIElements.IGenericMenu> createMenuCallback;

            static /*0x180ff0*/ BasePopupField();
            /*0x17aec0*/ BasePopupField(string label);
            /*0x1803b0*/ UnityEngine.UIElements.TextElement get_textElement();
            /*0x1803b0*/ string GetValueToDisplay();
            /*0x2a5510*/ string GetListItemToDisplay(TValueType item);
            /*0x17aec0*/ void AddMenuItems(UnityEngine.UIElements.IGenericMenu menu);
            /*0x17aec0*/ void set_choices(System.Collections.Generic.List<TValueChoice> value);
            /*0x2a5510*/ void SetValueWithoutNotify(TValueType newValue);
            /*0x17aec0*/ void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x17aec0*/ void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x17aec0*/ void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x17bfd0*/ bool ContainsPointer(int pointerId);
            /*0x17aec0*/ void ProcessPointerDown<T>(UnityEngine.UIElements.PointerEventBase<T> evt);
            /*0x17aec0*/ void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt);
            /*0x180fc0*/ void ShowMenu();
            /*0x180fc0*/ void UpdateMixedValueContent();

            class PopupTextElement<TValueType, TValueChoice> : UnityEngine.UIElements.TextElement
            {
                /*0x180fc0*/ PopupTextElement();
                UnityEngine.Vector2 DoMeasure(float desiredWidth, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float desiredHeight, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);
            }

            class <>c<TValueType, TValueChoice>
            {
                static /*0x0*/ UnityEngine.UIElements.BasePopupField.<>c<TValueType, TValueChoice> <>9;
                static /*0x0*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.MouseDownEvent> <>9__23_0;

                static /*0x180ff0*/ <>c();
                /*0x180fc0*/ <>c();
                /*0x17aec0*/ void <.ctor>b__23_0(UnityEngine.UIElements.MouseDownEvent e);
            }
        }

        enum SliderDirection
        {
            Horizontal = 0,
            Vertical = 1,
        }

        class BaseSlider<TValueType> : UnityEngine.UIElements.BaseField<TValueType>, UnityEngine.UIElements.IValueField<TValueType>
        {
            static /*0x0*/ string ussClassName;
            static /*0x0*/ string labelUssClassName;
            static /*0x0*/ string inputUssClassName;
            static /*0x0*/ string horizontalVariantUssClassName;
            static /*0x0*/ string verticalVariantUssClassName;
            static /*0x0*/ string dragContainerUssClassName;
            static /*0x0*/ string trackerUssClassName;
            static /*0x0*/ string draggerUssClassName;
            static /*0x0*/ string draggerBorderUssClassName;
            static /*0x0*/ string textFieldClassName;
            /*0x0*/ float m_AdjustedPageSizeFromClick;
            /*0x0*/ UnityEngine.UIElements.VisualElement <dragContainer>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.VisualElement <dragElement>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.VisualElement <trackElement>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.VisualElement <dragBorderElement>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.TextField <inputTextField>k__BackingField;
            /*0x0*/ bool m_IsEditingTextField;
            /*0x0*/ TValueType m_LowValue;
            /*0x0*/ TValueType m_HighValue;
            /*0x0*/ float m_PageSize;
            /*0x0*/ bool m_ShowInputField;
            /*0x0*/ bool <clamped>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.ClampedDragger<TValueType> <clampedDragger>k__BackingField;
            /*0x0*/ UnityEngine.Rect m_DragElementStartPos;
            /*0x0*/ UnityEngine.UIElements.SliderDirection m_Direction;
            /*0x0*/ bool m_Inverted;

            static /*0x180ff0*/ BaseSlider();
            static /*0x180140*/ float GetClosestPowerOfTen(float positiveNumber);
            static /*0x180220*/ float RoundToMultipleOf(float value, float roundingValue);
            /*0x2a5510*/ BaseSlider(string label, TValueType start, TValueType end, UnityEngine.UIElements.SliderDirection direction, float pageSize);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_dragContainer();
            /*0x17aec0*/ void set_dragContainer(UnityEngine.UIElements.VisualElement value);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_dragElement();
            /*0x17aec0*/ void set_dragElement(UnityEngine.UIElements.VisualElement value);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_trackElement();
            /*0x17aec0*/ void set_trackElement(UnityEngine.UIElements.VisualElement value);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_dragBorderElement();
            /*0x17aec0*/ void set_dragBorderElement(UnityEngine.UIElements.VisualElement value);
            /*0x1803b0*/ UnityEngine.UIElements.TextField get_inputTextField();
            /*0x17aec0*/ void set_inputTextField(UnityEngine.UIElements.TextField value);
            /*0x17cb40*/ bool get_canSwitchToMixedValue();
            /*0x2a5510*/ TValueType get_lowValue();
            /*0x2a5510*/ void set_lowValue(TValueType value);
            /*0x2a5510*/ TValueType get_highValue();
            /*0x2a5510*/ void set_highValue(TValueType value);
            /*0x2a5510*/ void SetHighValueWithoutNotify(TValueType newHighValue);
            /*0x17fc30*/ float get_pageSize();
            /*0x178d00*/ void set_pageSize(float value);
            /*0x17cb40*/ bool get_showInputField();
            /*0x181190*/ void set_showInputField(bool value);
            /*0x17cb40*/ bool get_clamped();
            /*0x181190*/ void set_clamped(bool value);
            /*0x1803b0*/ UnityEngine.UIElements.ClampedDragger<TValueType> get_clampedDragger();
            /*0x17aec0*/ void set_clampedDragger(UnityEngine.UIElements.ClampedDragger<TValueType> value);
            /*0x2a5510*/ TValueType Clamp(TValueType value, TValueType lowBound, TValueType highBound);
            /*0x2a5510*/ TValueType GetClampedValue(TValueType newValue);
            /*0x2a5510*/ TValueType get_value();
            /*0x2a5510*/ void set_value(TValueType value);
            /*0x2a5510*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, TValueType startValue);
            /*0x180fc0*/ void UnityEngine.UIElements.IValueField<TValueType>.StartDragging();
            /*0x180fc0*/ void UnityEngine.UIElements.IValueField<TValueType>.StopDragging();
            /*0x2a5510*/ void SetValueWithoutNotify(TValueType newValue);
            /*0x180980*/ UnityEngine.UIElements.SliderDirection get_direction();
            /*0x17aa40*/ void set_direction(UnityEngine.UIElements.SliderDirection value);
            /*0x17cb40*/ bool get_inverted();
            /*0x181190*/ void set_inverted(bool value);
            /*0x180fc0*/ void ClampValue();
            /*0x2a5510*/ TValueType SliderLerpUnclamped(TValueType a, TValueType b, float interpolant);
            /*0x2a5510*/ float SliderNormalizeValue(TValueType currentValue, TValueType lowerValue, TValueType higherValue);
            /*0x2a5510*/ TValueType ParseStringToValue(string previousValue, string newValue);
            /*0x2a5510*/ void ComputeValueFromKey(UnityEngine.UIElements.BaseSlider.SliderKey<TValueType> sliderKey, bool isShift);
            /*0x2a5510*/ TValueType SliderLerpDirectionalUnclamped(TValueType a, TValueType b, float positionInterpolant);
            /*0x180fc0*/ void SetSliderValueFromDrag();
            void ComputeValueAndDirectionFromDrag(float sliderLength, float dragElementLength, float dragElementPos);
            /*0x180fc0*/ void SetSliderValueFromClick();
            /*0x17aec0*/ void OnKeyDown(UnityEngine.UIElements.KeyDownEvent evt);
            /*0x17aec0*/ void OnNavigationMove(UnityEngine.UIElements.NavigationMoveEvent evt);
            void ComputeValueAndDirectionFromClick(float sliderLength, float dragElementLength, float dragElementPos, float dragElementLastPos);
            /*0x178d00*/ void AdjustDragElement(float factor);
            /*0x17aec0*/ void UpdateDragElementPosition(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x180fc0*/ void OnViewDataReady();
            /*0x2a5510*/ bool SameValues(float a, float b, float epsilon);
            /*0x180fc0*/ void UpdateDragElementPosition();
            /*0x17aec0*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x180fc0*/ void UpdateTextFieldVisibility();
            /*0x180fc0*/ void UpdateTextFieldValue();
            /*0x17aec0*/ void OnTextFieldFocusIn(UnityEngine.UIElements.FocusInEvent evt);
            /*0x17aec0*/ void OnTextFieldFocusOut(UnityEngine.UIElements.FocusOutEvent evt);
            /*0x17aec0*/ void OnInputNavigationMoveEvent(UnityEngine.UIElements.NavigationMoveEvent evt);
            /*0x17aec0*/ void OnTextFieldValueChange(UnityEngine.UIElements.ChangeEvent<string> evt);
            /*0x180fc0*/ void UpdateMixedValueContent();
            /*0x180fc0*/ void RegisterEditingCallbacks();
            /*0x180fc0*/ void UnregisterEditingCallbacks();

            class UxmlTraits<TValueType> : UnityEngine.UIElements.BaseField.UxmlTraits<TValueType>
            {
                /*0x180fc0*/ UxmlTraits();
            }

            enum SliderKey<TValueType>
            {
                None = 0,
                Lowest = 1,
                LowerPage = 2,
                Lower = 3,
                Higher = 4,
                HigherPage = 5,
                Highest = 6,
            }
        }

        class BaseTreeView : UnityEngine.UIElements.BaseVerticalCollectionView
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string itemUssClassName;
            static /*0x10*/ string itemToggleUssClassName;
            static /*0x18*/ string itemIndentsContainerUssClassName;
            static /*0x20*/ string itemIndentUssClassName;
            static /*0x28*/ string itemContentContainerUssClassName;
            /*0x4c0*/ bool m_AutoExpand;
            /*0x4c8*/ System.Collections.Generic.List<int> m_ExpandedItemIds;

            static /*0x16d3a80*/ BaseTreeView();
            /*0x16d3e50*/ BaseTreeView();
            /*0x16d3ca0*/ BaseTreeView(int itemHeight);
            /*0x16d4000*/ System.Collections.IList get_itemsSource();
            /*0x16d4040*/ UnityEngine.UIElements.BaseTreeViewController get_viewController();
            /*0x16d2a30*/ void CreateVirtualizationController();
            /*0x16d3650*/ void SetViewController(UnityEngine.UIElements.CollectionViewController controller);
            /*0x16d32c0*/ void OnItemIndexChanged(int srcIndex, int dstIndex);
            /*0x16d29d0*/ UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController();
            /*0x16c0490*/ bool get_autoExpand();
            /*0x16d40c0*/ void set_autoExpand(bool value);
            /*0x16d3ff0*/ System.Collections.Generic.List<int> get_expandedItemIds();
            /*0x16d4100*/ void set_expandedItemIds(System.Collections.Generic.List<int> value);
            /*0x16d3320*/ void OnViewDataReady();
            /*0x16d2cd0*/ bool HandleItemNavigation(bool moveIn, bool altPressed);
            /*0x16d3470*/ void SetSelectionById(int id);
            /*0x16d33b0*/ void SetSelectionById(System.Collections.Generic.IEnumerable<int> ids);
            /*0x16d3580*/ void SetSelectionInternalById(System.Collections.Generic.IEnumerable<int> ids, bool sendNotification);
            /*0x16d2b50*/ int GetItemIndex(int id, bool expand);
            /*0x16d3290*/ bool IsExpanded(int id);
            /*0x16d2970*/ void CollapseItem(int id, bool collapseAllChildren);
            /*0x16d2b00*/ void ExpandItem(int id, bool expandAllChildren);
            /*0x16d32d0*/ void OnTreeViewPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x16d3260*/ bool IsExpandedByIndex(int index);
            /*0x16d28f0*/ void CollapseItemByIndex(int index, bool collapseAll);
            /*0x16d2a70*/ void ExpandItemByIndex(int index, bool expandAll);
            /*0x16d3910*/ int <SetSelectionInternalById>b__47_0(int id);

            class UxmlTraits : UnityEngine.UIElements.BaseVerticalCollectionView.UxmlTraits
            {
                /*0xb0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_AutoExpand;

                /*0x16eb4f0*/ UxmlTraits();
                /*0x16e9310*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        enum AlternatingRowBackground
        {
            None = 0,
            ContentOnly = 1,
            All = 2,
        }

        enum CollectionVirtualizationMethod
        {
            FixedHeight = 0,
            DynamicHeight = 1,
        }

        class SerializedVirtualizationData
        {
            /*0x10*/ UnityEngine.Vector2 scrollOffset;
            /*0x18*/ int firstVisibleIndex;
            /*0x1c*/ float contentPadding;
            /*0x20*/ float contentHeight;
            /*0x24*/ int anchoredItemIndex;
            /*0x28*/ float anchorOffset;

            /*0x32f970*/ SerializedVirtualizationData();
        }

        class BaseVerticalCollectionView : UnityEngine.UIElements.BindableElement, UnityEngine.ISerializationCallbackReceiver
        {
            static /*0x0*/ Unity.Profiling.ProfilerMarker k_RefreshMarker;
            static /*0x8*/ Unity.Profiling.ProfilerMarker k_RebuildMarker;
            static /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.ReusableCollectionItem> k_EmptyItems;
            static /*0x18*/ int s_DefaultItemHeight;
            static /*0x20*/ UnityEngine.UIElements.CustomStyleProperty<int> s_ItemHeightProperty;
            static /*0x28*/ string ussClassName;
            static /*0x30*/ string borderUssClassName;
            static /*0x38*/ string itemUssClassName;
            static /*0x40*/ string dragHoverBarUssClassName;
            static /*0x48*/ string dragHoverMarkerUssClassName;
            static /*0x50*/ string itemDragHoverUssClassName;
            static /*0x58*/ string itemSelectedVariantUssClassName;
            static /*0x60*/ string itemAlternativeBackgroundUssClassName;
            static /*0x68*/ string listScrollViewUssClassName;
            static /*0x70*/ string backgroundFillUssClassName;
            /*0x3d8*/ System.Action<System.Collections.Generic.IEnumerable<object>> itemsChosen;
            /*0x3e0*/ System.Action<System.Collections.Generic.IEnumerable<object>> selectionChanged;
            /*0x3e8*/ System.Action<System.Collections.Generic.IEnumerable<int>> selectedIndicesChanged;
            /*0x3f0*/ System.Action<int, int> itemIndexChanged;
            /*0x3f8*/ System.Action itemsSourceChanged;
            /*0x400*/ System.Action selectionNotChanged;
            /*0x408*/ System.Func<UnityEngine.UIElements.CanStartDragArgs, bool> canStartDrag;
            /*0x410*/ System.Func<UnityEngine.UIElements.SetupDragAndDropArgs, UnityEngine.UIElements.StartDragArgs> setupDragAndDrop;
            /*0x418*/ System.Func<UnityEngine.UIElements.HandleDragAndDropArgs, UnityEngine.UIElements.DragVisualMode> dragAndDropUpdate;
            /*0x420*/ System.Func<UnityEngine.UIElements.HandleDragAndDropArgs, UnityEngine.UIElements.DragVisualMode> handleDrop;
            /*0x428*/ UnityEngine.UIElements.SelectionType m_SelectionType;
            /*0x42c*/ bool m_HorizontalScrollingEnabled;
            /*0x430*/ UnityEngine.UIElements.AlternatingRowBackground m_ShowAlternatingRowBackgrounds;
            /*0x434*/ float m_FixedItemHeight;
            /*0x438*/ bool m_ItemHeightIsInline;
            /*0x43c*/ UnityEngine.UIElements.CollectionVirtualizationMethod m_VirtualizationMethod;
            /*0x440*/ UnityEngine.UIElements.ScrollView m_ScrollView;
            /*0x448*/ UnityEngine.UIElements.CollectionViewController m_ViewController;
            /*0x450*/ UnityEngine.UIElements.CollectionVirtualizationController m_VirtualizationController;
            /*0x458*/ UnityEngine.UIElements.KeyboardNavigationManipulator m_NavigationManipulator;
            /*0x460*/ UnityEngine.UIElements.SerializedVirtualizationData serializedVirtualizationData;
            /*0x468*/ System.Collections.Generic.List<int> m_SelectedIds;
            /*0x470*/ UnityEngine.UIElements.BaseVerticalCollectionView.Selection m_Selection;
            /*0x478*/ float m_LastHeight;
            /*0x47c*/ bool m_IsRangeSelectionDirectionUp;
            /*0x480*/ UnityEngine.UIElements.ListViewDragger m_Dragger;
            /*0x488*/ System.Action<int, int> m_ItemIndexChangedCallback;
            /*0x490*/ System.Action m_ItemsSourceChangedCallback;
            /*0x498*/ UnityEngine.UIElements.IVisualElementScheduledItem m_RebuildScheduled;
            /*0x4a0*/ UnityEngine.Vector3 m_TouchDownPosition;
            /*0x4b0*/ long m_LastPointerDownTimeStamp;
            /*0x4b8*/ int m_PointerDownCount;

            static /*0x16d9330*/ BaseVerticalCollectionView();
            /*0x16d9820*/ BaseVerticalCollectionView();
            /*0x16da0c0*/ BaseVerticalCollectionView(System.Collections.IList itemsSource, float itemHeight);
            /*0x16d5d60*/ bool HasCanStartDrag();
            /*0x16d7530*/ bool RaiseCanStartDrag(UnityEngine.UIElements.ReusableCollectionItem item, System.Collections.Generic.IEnumerable<int> ids);
            /*0x16d7730*/ UnityEngine.UIElements.StartDragArgs RaiseSetupDragAndDrop(UnityEngine.UIElements.ReusableCollectionItem item, System.Collections.Generic.IEnumerable<int> ids, UnityEngine.UIElements.StartDragArgs args);
            /*0x16d7690*/ UnityEngine.UIElements.DragVisualMode RaiseHandleDragAndDrop(UnityEngine.Vector2 pointerPosition, UnityEngine.UIElements.DragAndDropArgs dragAndDropArgs);
            /*0x16d75f0*/ UnityEngine.UIElements.DragVisualMode RaiseDrop(UnityEngine.Vector2 pointerPosition, UnityEngine.UIElements.DragAndDropArgs dragAndDropArgs);
            /*0x16da260*/ System.Collections.IList get_itemsSource();
            /*0x16da640*/ void set_itemsSource(System.Collections.IList value);
            /*0x388e90*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x16da4b0*/ UnityEngine.UIElements.SelectionType get_selectionType();
            /*0x16da760*/ void set_selectionType(UnityEngine.UIElements.SelectionType value);
            /*0x16da430*/ System.Collections.Generic.IEnumerable<object> get_selectedItems();
            /*0x16da330*/ System.Collections.Generic.IEnumerable<int> get_selectedIds();
            /*0x16da350*/ int get_selectedIndex();
            /*0x16d7520*/ void set_selectedIndex(int value);
            /*0x16da410*/ System.Collections.Generic.IEnumerable<int> get_selectedIndices();
            /*0x16da1c0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.ReusableCollectionItem> get_activeItems();
            /*0xbe0810*/ UnityEngine.UIElements.ScrollView get_scrollView();
            /*0x16da240*/ UnityEngine.UIElements.ListViewDragger get_dragger();
            /*0x16d5c20*/ UnityEngine.UIElements.CollectionVirtualizationController get_virtualizationController();
            /*0xcb4330*/ UnityEngine.UIElements.CollectionViewController get_viewController();
            /*0x16d8640*/ float ResolveItemHeight(float height);
            /*0x16da820*/ void set_showBorder(bool value);
            /*0x16da2a0*/ bool get_reorderable();
            /*0x16da6c0*/ void set_reorderable(bool value);
            /*0x16da5d0*/ void set_horizontalScrollingEnabled(bool value);
            /*0x16da4c0*/ UnityEngine.UIElements.AlternatingRowBackground get_showAlternatingRowBackgrounds();
            /*0x16da800*/ void set_showAlternatingRowBackgrounds(UnityEngine.UIElements.AlternatingRowBackground value);
            /*0x61a250*/ UnityEngine.UIElements.CollectionVirtualizationMethod get_virtualizationMethod();
            /*0x16da8b0*/ void set_virtualizationMethod(UnityEngine.UIElements.CollectionVirtualizationMethod value);
            /*0x16da250*/ float get_fixedItemHeight();
            /*0x16da4d0*/ void set_fixedItemHeight(float value);
            /*0x16da290*/ float get_lastHeight();
            /*0x16d50d0*/ void CreateVirtualizationController();
            /*0x16d5c20*/ UnityEngine.UIElements.CollectionVirtualizationController GetOrCreateVirtualizationController();
            /*0x180fc0*/ void CreateVirtualizationController<T>();
            /*0x16d5bc0*/ UnityEngine.UIElements.CollectionViewController GetOrCreateViewController();
            /*0x1803b0*/ UnityEngine.UIElements.CollectionViewController CreateViewController();
            /*0x16d8fc0*/ void SetViewController(UnityEngine.UIElements.CollectionViewController controller);
            /*0x16d5070*/ UnityEngine.UIElements.ListViewDragger CreateDragger();
            /*0x16d5db0*/ void InitializeDragAndDropController(bool enableReordering);
            /*0x1803b0*/ UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController();
            /*0x16d5c60*/ UnityEngine.UIElements.VisualElement GetRootElementForId(int id);
            /*0x16d5d70*/ bool HasValidDataAndBindings();
            /*0x16d6a00*/ void OnItemIndexChanged(int srcIndex, int dstIndex);
            /*0x16d6a40*/ void OnItemsSourceChanged();
            /*0x16d79f0*/ void RefreshItems();
            /*0x16d7840*/ void Rebuild();
            /*0x16d8660*/ void ScheduleRebuild();
            /*0x16d7bd0*/ void RefreshSelection();
            /*0x16d6e80*/ void PostRefresh();
            /*0x16d8820*/ void ScrollToItem(int index);
            /*0x16d8780*/ void ScrollToItemById(int id);
            /*0x16d6d10*/ void OnScroll(UnityEngine.Vector2 offset);
            /*0x16d8580*/ void Resize(UnityEngine.Vector2 size);
            /*0x16d6240*/ void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt);
            /*0x16d6740*/ void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt);
            /*0x16d46a0*/ bool Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, bool shiftKey, bool altKey);
            /*0x16d4b80*/ void Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, UnityEngine.UIElements.EventBase sourceEvent);
            /*0x6a6020*/ bool HandleItemNavigation(bool moveIn, bool altKey);
            /*0x16d6bb0*/ void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x16d6ad0*/ void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x16d6a60*/ void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt);
            /*0x16d6c30*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x16d6f40*/ void ProcessPointerDown(UnityEngine.UIElements.IPointerEvent evt);
            /*0x16d71a0*/ void ProcessPointerUp(UnityEngine.UIElements.IPointerEvent evt);
            /*0x16d52d0*/ void DoSelect(UnityEngine.Vector2 localPosition, int clickCount, bool actionKey, bool shiftKey);
            /*0x16d5110*/ void DoRangeSelection(int rangeSelectionFinalIndex);
            /*0x16d7520*/ void ProcessSingleClick(int clickedIndex);
            /*0x16d88a0*/ void SelectAll();
            /*0x16d4410*/ void AddToSelection(int index);
            /*0x16d4480*/ void AddToSelection(System.Collections.Generic.IList<int> indexes);
            /*0x16d4120*/ void AddToSelectionWithoutValidation(int index);
            /*0x16d8520*/ void RemoveFromSelection(int index);
            /*0x16d81b0*/ void RemoveFromSelectionWithoutValidation(int index);
            /*0x16d8f30*/ void SetSelection(int index);
            /*0x16d8f20*/ void SetSelection(System.Collections.Generic.IEnumerable<int> indices);
            /*0x16d8f10*/ void SetSelectionWithoutNotify(System.Collections.Generic.IEnumerable<int> indices);
            /*0x16d8b90*/ void SetSelectionInternal(System.Collections.Generic.IEnumerable<int> indices, bool sendNotification);
            /*0x16d5ee0*/ bool MatchesExistingSelection(System.Collections.Generic.IEnumerable<int> indices);
            /*0x16d61b0*/ void NotifyOfSelectionChange();
            /*0x16d4fe0*/ void ClearSelection();
            /*0x16d4d20*/ void ClearSelectionWithoutValidation();
            /*0x16d6e30*/ void OnViewDataReady();
            /*0x16d5800*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x16d6d90*/ void OnSizeChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x16d6590*/ void OnCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e);
            /*0x32d010*/ void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize();
            /*0x16d92f0*/ void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize();
            /*0x16d9260*/ void <.ctor>b__159_0(float v);
            /*0x16d91e0*/ void <RefreshSelection>g__NotifyIfChanged|172_0(ref UnityEngine.UIElements.BaseVerticalCollectionView.<> );
            /*0x16d90d0*/ void <Apply>g__HandleSelectionAndScroll|183_0(int index, ref UnityEngine.UIElements.BaseVerticalCollectionView.<> );

            class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
            {
                /*0x78*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_FixedItemHeight;
                /*0x80*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.CollectionVirtualizationMethod> m_VirtualizationMethod;
                /*0x88*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowBorder;
                /*0x90*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.SelectionType> m_SelectionType;
                /*0x98*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.AlternatingRowBackground> m_ShowAlternatingRowBackgrounds;
                /*0xa0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Reorderable;
                /*0xa8*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_HorizontalScrollingEnabled;

                /*0x16ea8b0*/ UxmlTraits();
                /*0x16e95c0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class Selection
            {
                /*0x10*/ System.Collections.Generic.HashSet<int> m_IndexLookup;
                /*0x18*/ System.Collections.Generic.HashSet<int> m_IdLookup;
                /*0x20*/ int m_MinIndex;
                /*0x24*/ int m_MaxIndex;
                /*0x28*/ System.Collections.Generic.List<int> <selectedIds>k__BackingField;
                /*0x30*/ System.Collections.Generic.List<int> indices;
                /*0x38*/ System.Collections.Generic.Dictionary<int, object> items;

                /*0x16e6d30*/ Selection();
                /*0x79a150*/ System.Collections.Generic.List<int> get_selectedIds();
                /*0x98b030*/ void set_selectedIds(System.Collections.Generic.List<int> value);
                /*0x16e6f00*/ int get_indexCount();
                /*0x16e6ec0*/ int get_idCount();
                /*0x16e6f70*/ int get_minIndex();
                /*0x16e6f40*/ int get_maxIndex();
                /*0x16e6e70*/ int get_capacity();
                /*0x16e6fa0*/ void set_capacity(int value);
                /*0x16e6b50*/ int FirstIndex();
                /*0x16e6af0*/ bool ContainsIndex(int index);
                /*0x16e6a90*/ bool ContainsId(int id);
                /*0x16e66a0*/ void AddId(int id);
                /*0x16e6760*/ void AddIndex(int index, object obj);
                /*0x16e6c40*/ bool TryRemove(int index);
                /*0x16e6bc0*/ void RemoveId(int id);
                /*0x16e6940*/ void ClearItems();
                /*0x16e6860*/ void ClearIds();
                /*0x16e68d0*/ void ClearIndices();
                /*0x16e6990*/ void Clear();
            }

            class <>c__DisplayClass162_0
            {
                /*0x10*/ int id;

                /*0x32f970*/ <>c__DisplayClass162_0();
                /*0x16e71f0*/ bool <GetRootElementForId>b__0(UnityEngine.UIElements.ReusableCollectionItem t);
            }

            struct <>c__DisplayClass172_0
            {
                /*0x10*/ bool selectedIndicesChanged;
                /*0x18*/ UnityEngine.UIElements.BaseVerticalCollectionView <>4__this;
                /*0x20*/ int previousSelectionCount;
            }

            struct <>c__DisplayClass183_0
            {
                /*0x10*/ UnityEngine.UIElements.BaseVerticalCollectionView <>4__this;
                /*0x18*/ bool shiftKey;
            }

            class <get_selectedItems>d__72 : System.Collections.Generic.IEnumerable<object>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<object>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ object <>2__current;
                /*0x20*/ int <>l__initialThreadId;
                /*0x28*/ UnityEngine.UIElements.BaseVerticalCollectionView <>4__this;
                /*0x30*/ System.Collections.Generic.List.Enumerator<int> <>s__1;
                /*0x48*/ int <index>5__2;
                /*0x50*/ object <item>5__3;

                /*0x70aad0*/ <get_selectedItems>d__72(int <>1__state);
                /*0x16e78f0*/ void System.IDisposable.Dispose();
                /*0x16e7590*/ bool MoveNext();
                /*0x16e7980*/ void <>m__Finally1();
                /*0x32f410*/ object System.Collections.Generic.IEnumerator<System.Object>.get_Current();
                /*0x16e78b0*/ void System.Collections.IEnumerator.Reset();
                /*0x32f410*/ object System.Collections.IEnumerator.get_Current();
                /*0x16e7810*/ System.Collections.Generic.IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator();
                /*0x16e7810*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            }
        }

        interface IBindable
        {
            /*0x1803b0*/ UnityEngine.UIElements.IBinding get_binding();
            /*0x17aec0*/ void set_bindingPath(string value);
        }

        interface IBinding
        {
            /*0x180fc0*/ void PreUpdate();
            /*0x180fc0*/ void Update();
            /*0x180fc0*/ void Release();
        }

        class BoundsField : UnityEngine.UIElements.BaseField<UnityEngine.Bounds>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;
            static /*0x18*/ string centerFieldUssClassName;
            static /*0x20*/ string extentsFieldUssClassName;
            /*0x458*/ UnityEngine.UIElements.Vector3Field m_CenterField;
            /*0x460*/ UnityEngine.UIElements.Vector3Field m_ExtentsField;

            static /*0x16dac10*/ BoundsField();
            /*0x16db1d0*/ BoundsField();
            /*0x16dade0*/ BoundsField(string label);
            /*0x16da900*/ void SetValueWithoutNotify(UnityEngine.Bounds newValue);
            /*0x16dab90*/ void UpdateMixedValueContent();
            /*0x16daa20*/ void <.ctor>b__10_0(UnityEngine.UIElements.ChangeEvent<UnityEngine.Vector3> e);
            /*0x16daad0*/ void <.ctor>b__10_1(UnityEngine.UIElements.ChangeEvent<UnityEngine.Vector3> e);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.BoundsField, UnityEngine.UIElements.BoundsField.UxmlTraits>
            {
                /*0x16e7a50*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Bounds>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_CenterXValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_CenterYValue;
                /*0x90*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_CenterZValue;
                /*0x98*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_ExtentsXValue;
                /*0xa0*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_ExtentsYValue;
                /*0xa8*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_ExtentsZValue;

                /*0x16eb5e0*/ UxmlTraits();
                /*0x16e87a0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class BoundsIntField : UnityEngine.UIElements.BaseField<UnityEngine.BoundsInt>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;
            static /*0x18*/ string positionUssClassName;
            static /*0x20*/ string sizeUssClassName;
            /*0x458*/ UnityEngine.UIElements.Vector3IntField m_PositionField;
            /*0x460*/ UnityEngine.UIElements.Vector3IntField m_SizeField;

            static /*0x16db4f0*/ BoundsIntField();
            /*0x16db6c0*/ BoundsIntField();
            /*0x16db6d0*/ BoundsIntField(string label);
            /*0x16db1e0*/ void SetValueWithoutNotify(UnityEngine.BoundsInt newValue);
            /*0x16db470*/ void UpdateMixedValueContent();
            /*0x16db300*/ void <.ctor>b__10_0(UnityEngine.UIElements.ChangeEvent<UnityEngine.Vector3Int> e);
            /*0x16db3b0*/ void <.ctor>b__10_1(UnityEngine.UIElements.ChangeEvent<UnityEngine.Vector3Int> e);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.BoundsIntField, UnityEngine.UIElements.BoundsIntField.UxmlTraits>
            {
                /*0x16e7b50*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.BoundsInt>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_PositionXValue;
                /*0x88*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_PositionYValue;
                /*0x90*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_PositionZValue;
                /*0x98*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_SizeXValue;
                /*0xa0*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_SizeYValue;
                /*0xa8*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_SizeZValue;

                /*0x16eaee0*/ UxmlTraits();
                /*0x16e8e20*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class Box : UnityEngine.UIElements.VisualElement
        {
            static /*0x0*/ string ussClassName;

            static /*0x16dbac0*/ Box();
            /*0x16dbb30*/ Box();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Box>
            {
                /*0x16e7c90*/ UxmlFactory();
            }
        }

        class Button : UnityEngine.UIElements.TextElement
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string NonEmptyString;
            /*0x4a0*/ UnityEngine.UIElements.Clickable m_Clickable;

            static /*0x16dc000*/ Button();
            /*0x16dc250*/ Button();
            /*0x16dc0b0*/ Button(System.Action clickEvent);
            /*0x16dc3e0*/ UnityEngine.UIElements.Clickable get_clickable();
            /*0x16dc3f0*/ void set_clickable(UnityEngine.UIElements.Clickable value);
            /*0x16dbfc0*/ void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt);
            /*0x16dbee0*/ UnityEngine.Vector2 DoMeasure(float desiredWidth, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float desiredHeight, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Button, UnityEngine.UIElements.Button.UxmlTraits>
            {
                /*0x16e7d50*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextElement.UxmlTraits
            {
                /*0x16ebd20*/ UxmlTraits();
            }
        }

        class ButtonStripField : UnityEngine.UIElements.BaseField<int>
        {
            /*0x448*/ System.Collections.Generic.List<UnityEngine.UIElements.Button> m_Buttons;

            /*0x16dbe20*/ ButtonStripField();
            /*0x16dbcc0*/ void SetValueWithoutNotify(int newValue);
            /*0x16dbbc0*/ void RefreshButtonsState();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.ButtonStripField, UnityEngine.UIElements.ButtonStripField.UxmlTraits>
            {
                /*0x16e7b10*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<int>
            {
                /*0x16ebce0*/ UxmlTraits();
            }
        }

        class RectField : UnityEngine.UIElements.BaseCompositeField<UnityEngine.Rect, UnityEngine.UIElements.FloatField, float>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16e5740*/ RectField();
            /*0x16e5860*/ RectField();
            /*0x16e59a0*/ RectField(string label);
            /*0x16e4f40*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<UnityEngine.Rect, UnityEngine.UIElements.FloatField, float> DescribeFields();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.RectField, UnityEngine.UIElements.RectField.UxmlTraits>
            {
                /*0x16e7c10*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Rect>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_XValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_YValue;
                /*0x90*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_WValue;
                /*0x98*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_HValue;

                /*0x16ebb30*/ UxmlTraits();
                /*0x16e90d0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.RectField.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.Rect, float> <>9__0_0;
                static /*0x10*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Rect, UnityEngine.UIElements.FloatField, float> <>9__0_1;
                static /*0x18*/ System.Func<UnityEngine.Rect, float> <>9__0_2;
                static /*0x20*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Rect, UnityEngine.UIElements.FloatField, float> <>9__0_3;
                static /*0x28*/ System.Func<UnityEngine.Rect, float> <>9__0_4;
                static /*0x30*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Rect, UnityEngine.UIElements.FloatField, float> <>9__0_5;
                static /*0x38*/ System.Func<UnityEngine.Rect, float> <>9__0_6;
                static /*0x40*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Rect, UnityEngine.UIElements.FloatField, float> <>9__0_7;

                static /*0x16e7210*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16e7060*/ float <DescribeFields>b__0_0(UnityEngine.Rect r);
                /*0x16e7080*/ void <DescribeFields>b__0_1(ref UnityEngine.Rect r, float v);
                /*0x16e70b0*/ float <DescribeFields>b__0_2(UnityEngine.Rect r);
                /*0x16e70e0*/ void <DescribeFields>b__0_3(ref UnityEngine.Rect r, float v);
                /*0x16e7120*/ float <DescribeFields>b__0_4(UnityEngine.Rect r);
                /*0x16e7140*/ void <DescribeFields>b__0_5(ref UnityEngine.Rect r, float v);
                /*0x16e7170*/ float <DescribeFields>b__0_6(UnityEngine.Rect r);
                /*0x16e7180*/ void <DescribeFields>b__0_7(ref UnityEngine.Rect r, float v);
            }
        }

        class RectIntField : UnityEngine.UIElements.BaseCompositeField<UnityEngine.RectInt, UnityEngine.UIElements.IntegerField, int>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16e62f0*/ RectIntField();
            /*0x16e6410*/ RectIntField();
            /*0x16e6550*/ RectIntField(string label);
            /*0x16e5af0*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<UnityEngine.RectInt, UnityEngine.UIElements.IntegerField, int> DescribeFields();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.RectIntField, UnityEngine.UIElements.RectIntField.UxmlTraits>
            {
                /*0x16e7b90*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.RectInt>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_XValue;
                /*0x88*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_YValue;
                /*0x90*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_WValue;
                /*0x98*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_HValue;

                /*0x16eb2a0*/ UxmlTraits();
                /*0x16e8570*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.RectIntField.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.RectInt, int> <>9__0_0;
                static /*0x10*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.RectInt, UnityEngine.UIElements.IntegerField, int> <>9__0_1;
                static /*0x18*/ System.Func<UnityEngine.RectInt, int> <>9__0_2;
                static /*0x20*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.RectInt, UnityEngine.UIElements.IntegerField, int> <>9__0_3;
                static /*0x28*/ System.Func<UnityEngine.RectInt, int> <>9__0_4;
                static /*0x30*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.RectInt, UnityEngine.UIElements.IntegerField, int> <>9__0_5;
                static /*0x38*/ System.Func<UnityEngine.RectInt, int> <>9__0_6;
                static /*0x40*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.RectInt, UnityEngine.UIElements.IntegerField, int> <>9__0_7;

                static /*0x16e7440*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16e7040*/ int <DescribeFields>b__0_0(UnityEngine.RectInt r);
                /*0x16e7070*/ void <DescribeFields>b__0_1(ref UnityEngine.RectInt r, int v);
                /*0x16e7090*/ int <DescribeFields>b__0_2(UnityEngine.RectInt r);
                /*0x16e70f0*/ void <DescribeFields>b__0_3(ref UnityEngine.RectInt r, int v);
                /*0x16e7100*/ int <DescribeFields>b__0_4(UnityEngine.RectInt r);
                /*0x16e7130*/ void <DescribeFields>b__0_5(ref UnityEngine.RectInt r, int v);
                /*0x16e7150*/ int <DescribeFields>b__0_6(UnityEngine.RectInt r);
                /*0x16e7190*/ void <DescribeFields>b__0_7(ref UnityEngine.RectInt r, int v);
            }
        }

        class Vector2Field : UnityEngine.UIElements.BaseCompositeField<UnityEngine.Vector2, UnityEngine.UIElements.FloatField, float>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16ec210*/ Vector2Field();
            /*0x16ec330*/ Vector2Field();
            /*0x16ec450*/ Vector2Field(string label);
            /*0x16ebdb0*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<UnityEngine.Vector2, UnityEngine.UIElements.FloatField, float> DescribeFields();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Vector2Field, UnityEngine.UIElements.Vector2Field.UxmlTraits>
            {
                /*0x16e7bd0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Vector2>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_XValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_YValue;

                /*0x16eba30*/ UxmlTraits();
                /*0x16e9bc0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.Vector2Field.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.Vector2, float> <>9__0_0;
                static /*0x10*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector2, UnityEngine.UIElements.FloatField, float> <>9__0_1;
                static /*0x18*/ System.Func<UnityEngine.Vector2, float> <>9__0_2;
                static /*0x20*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector2, UnityEngine.UIElements.FloatField, float> <>9__0_3;

                static /*0x16e74b0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16e7050*/ float <DescribeFields>b__0_0(UnityEngine.Vector2 r);
                /*0x16e7080*/ void <DescribeFields>b__0_1(ref UnityEngine.Vector2 r, float v);
                /*0x16e70c0*/ float <DescribeFields>b__0_2(UnityEngine.Vector2 r);
                /*0x16e70e0*/ void <DescribeFields>b__0_3(ref UnityEngine.Vector2 r, float v);
            }
        }

        class Vector3Field : UnityEngine.UIElements.BaseCompositeField<UnityEngine.Vector3, UnityEngine.UIElements.FloatField, float>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16ed380*/ Vector3Field();
            /*0x16ed5d0*/ Vector3Field();
            /*0x16ed4a0*/ Vector3Field(string label);
            /*0x16ecd50*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<UnityEngine.Vector3, UnityEngine.UIElements.FloatField, float> DescribeFields();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Vector3Field, UnityEngine.UIElements.Vector3Field.UxmlTraits>
            {
                /*0x16e79d0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Vector3>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_XValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_YValue;
                /*0x90*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_ZValue;

                /*0x16ea710*/ UxmlTraits();
                /*0x16ea0d0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.Vector3Field.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.Vector3, float> <>9__0_0;
                static /*0x10*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector3, UnityEngine.UIElements.FloatField, float> <>9__0_1;
                static /*0x18*/ System.Func<UnityEngine.Vector3, float> <>9__0_2;
                static /*0x20*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector3, UnityEngine.UIElements.FloatField, float> <>9__0_3;
                static /*0x28*/ System.Func<UnityEngine.Vector3, float> <>9__0_4;
                static /*0x30*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector3, UnityEngine.UIElements.FloatField, float> <>9__0_5;

                static /*0x16e7360*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16e7030*/ float <DescribeFields>b__0_0(UnityEngine.Vector3 r);
                /*0x16e7080*/ void <DescribeFields>b__0_1(ref UnityEngine.Vector3 r, float v);
                /*0x16e70a0*/ float <DescribeFields>b__0_2(UnityEngine.Vector3 r);
                /*0x16e70e0*/ void <DescribeFields>b__0_3(ref UnityEngine.Vector3 r, float v);
                /*0x16e7110*/ float <DescribeFields>b__0_4(UnityEngine.Vector3 r);
                /*0x16e7140*/ void <DescribeFields>b__0_5(ref UnityEngine.Vector3 r, float v);
            }
        }

        class Vector4Field : UnityEngine.UIElements.BaseCompositeField<UnityEngine.Vector4, UnityEngine.UIElements.FloatField, float>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16ee670*/ Vector4Field();
            /*0x16ee790*/ Vector4Field();
            /*0x16ee8b0*/ Vector4Field(string label);
            /*0x16ede70*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<UnityEngine.Vector4, UnityEngine.UIElements.FloatField, float> DescribeFields();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Vector4Field, UnityEngine.UIElements.Vector4Field.UxmlTraits>
            {
                /*0x16e7a10*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Vector4>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_XValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_YValue;
                /*0x90*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_ZValue;
                /*0x98*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_WValue;

                /*0x16ea2b0*/ UxmlTraits();
                /*0x16e7e90*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.Vector4Field.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.Vector4, float> <>9__0_0;
                static /*0x10*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector4, UnityEngine.UIElements.FloatField, float> <>9__0_1;
                static /*0x18*/ System.Func<UnityEngine.Vector4, float> <>9__0_2;
                static /*0x20*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector4, UnityEngine.UIElements.FloatField, float> <>9__0_3;
                static /*0x28*/ System.Func<UnityEngine.Vector4, float> <>9__0_4;
                static /*0x30*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector4, UnityEngine.UIElements.FloatField, float> <>9__0_5;
                static /*0x38*/ System.Func<UnityEngine.Vector4, float> <>9__0_6;
                static /*0x40*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector4, UnityEngine.UIElements.FloatField, float> <>9__0_7;

                static /*0x16e7520*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16e7030*/ float <DescribeFields>b__0_0(UnityEngine.Vector4 r);
                /*0x16e7080*/ void <DescribeFields>b__0_1(ref UnityEngine.Vector4 r, float v);
                /*0x16e70a0*/ float <DescribeFields>b__0_2(UnityEngine.Vector4 r);
                /*0x16e70e0*/ void <DescribeFields>b__0_3(ref UnityEngine.Vector4 r, float v);
                /*0x16e7110*/ float <DescribeFields>b__0_4(UnityEngine.Vector4 r);
                /*0x16e7140*/ void <DescribeFields>b__0_5(ref UnityEngine.Vector4 r, float v);
                /*0x16e7160*/ float <DescribeFields>b__0_6(UnityEngine.Vector4 r);
                /*0x16e7180*/ void <DescribeFields>b__0_7(ref UnityEngine.Vector4 r, float v);
            }
        }

        class Vector2IntField : UnityEngine.UIElements.BaseCompositeField<UnityEngine.Vector2Int, UnityEngine.UIElements.IntegerField, int>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16ec9e0*/ Vector2IntField();
            /*0x16ecc30*/ Vector2IntField();
            /*0x16ecb00*/ Vector2IntField(string label);
            /*0x16ec580*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<UnityEngine.Vector2Int, UnityEngine.UIElements.IntegerField, int> DescribeFields();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Vector2IntField, UnityEngine.UIElements.Vector2IntField.UxmlTraits>
            {
                /*0x16e7d10*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Vector2Int>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_XValue;
                /*0x88*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_YValue;

                /*0x16eacd0*/ UxmlTraits();
                /*0x16e9450*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.Vector2IntField.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.Vector2Int, int> <>9__0_0;
                static /*0x10*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector2Int, UnityEngine.UIElements.IntegerField, int> <>9__0_1;
                static /*0x18*/ System.Func<UnityEngine.Vector2Int, int> <>9__0_2;
                static /*0x20*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector2Int, UnityEngine.UIElements.IntegerField, int> <>9__0_3;

                static /*0x16e7280*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16c7290*/ int <DescribeFields>b__0_0(UnityEngine.Vector2Int r);
                /*0x16e7070*/ void <DescribeFields>b__0_1(ref UnityEngine.Vector2Int r, int v);
                /*0x16e70d0*/ int <DescribeFields>b__0_2(UnityEngine.Vector2Int r);
                /*0x16e70f0*/ void <DescribeFields>b__0_3(ref UnityEngine.Vector2Int r, int v);
            }
        }

        class Vector3IntField : UnityEngine.UIElements.BaseCompositeField<UnityEngine.Vector3Int, UnityEngine.UIElements.IntegerField, int>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16edc10*/ Vector3IntField();
            /*0x16edd30*/ Vector3IntField();
            /*0x16edd40*/ Vector3IntField(string label);
            /*0x16ed5e0*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription<UnityEngine.Vector3Int, UnityEngine.UIElements.IntegerField, int> DescribeFields();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Vector3IntField, UnityEngine.UIElements.Vector3IntField.UxmlTraits>
            {
                /*0x16e7cd0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Vector3Int>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_XValue;
                /*0x88*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_YValue;
                /*0x90*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_ZValue;

                /*0x16eb140*/ UxmlTraits();
                /*0x16e9ef0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.Vector3IntField.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.Vector3Int, int> <>9__0_0;
                static /*0x10*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector3Int, UnityEngine.UIElements.IntegerField, int> <>9__0_1;
                static /*0x18*/ System.Func<UnityEngine.Vector3Int, int> <>9__0_2;
                static /*0x20*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector3Int, UnityEngine.UIElements.IntegerField, int> <>9__0_3;
                static /*0x28*/ System.Func<UnityEngine.Vector3Int, int> <>9__0_4;
                static /*0x30*/ UnityEngine.UIElements.BaseCompositeField.FieldDescription.WriteDelegate<UnityEngine.Vector3Int, UnityEngine.UIElements.IntegerField, int> <>9__0_5;

                static /*0x16e72f0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16e7040*/ int <DescribeFields>b__0_0(UnityEngine.Vector3Int r);
                /*0x16e7070*/ void <DescribeFields>b__0_1(ref UnityEngine.Vector3Int r, int v);
                /*0x16e7090*/ int <DescribeFields>b__0_2(UnityEngine.Vector3Int r);
                /*0x16e70f0*/ void <DescribeFields>b__0_3(ref UnityEngine.Vector3Int r, int v);
                /*0x16e7100*/ int <DescribeFields>b__0_4(UnityEngine.Vector3Int r);
                /*0x16e7130*/ void <DescribeFields>b__0_5(ref UnityEngine.Vector3Int r, int v);
            }
        }

        class DoubleField : UnityEngine.UIElements.TextValueField<double>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16dc740*/ DoubleField();
            /*0x16dca40*/ DoubleField();
            /*0x16dc860*/ DoubleField(string label, int maxLength);
            /*0x16dcc00*/ UnityEngine.UIElements.DoubleField.DoubleInput get_doubleInput();
            /*0x16dc6a0*/ string ValueToString(double v);
            /*0x16dc580*/ double StringToValue(string str);
            /*0x16dc550*/ bool CanTryParse(string textString);
            /*0x16dc470*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, double startValue);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.DoubleField, UnityEngine.UIElements.DoubleField.UxmlTraits>
            {
                /*0x16e7e50*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextValueFieldTraits<double, UnityEngine.UIElements.UxmlDoubleAttributeDescription>
            {
                /*0x16eb5a0*/ UxmlTraits();
            }

            class DoubleInput : UnityEngine.UIElements.TextValueField.TextValueInput<double>
            {
                /*0x16dcea0*/ DoubleInput();
                /*0x16dcf80*/ UnityEngine.UIElements.DoubleField get_parentDoubleField();
                /*0x16dcf30*/ string get_allowedCharacters();
                /*0x16dcc80*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, double startValue);
                /*0x16dce50*/ string ValueToString(double v);
                /*0x16dce10*/ double StringToValue(string str);
            }
        }

        class DropdownField : UnityEngine.UIElements.PopupField<string>
        {
            /*0x16dd070*/ DropdownField();
            /*0x16dd000*/ DropdownField(string label);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.DropdownField, UnityEngine.UIElements.DropdownField.UxmlTraits>
            {
                /*0x16e7ad0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<string>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_Index;
                /*0x88*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Choices;

                /*0x16eb840*/ UxmlTraits();
                /*0x16e9d40*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class EnumFieldHelpers
        {
            static /*0x0*/ UnityEngine.UIElements.UxmlTypeAttributeDescription<System.Enum> type;
            static /*0x8*/ UnityEngine.UIElements.UxmlStringAttributeDescription value;
            static /*0x10*/ UnityEngine.UIElements.UxmlBoolAttributeDescription includeObsoleteValues;

            static /*0x16dd520*/ EnumFieldHelpers();
            static /*0x16dd0d0*/ bool ExtractValue(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref System.Type resEnumType, ref System.Enum resEnumValue, ref bool resIncludeObsoleteValues);
        }

        class EnumField : UnityEngine.UIElements.BaseField<System.Enum>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string textUssClassName;
            static /*0x10*/ string arrowUssClassName;
            static /*0x18*/ string labelUssClassName;
            static /*0x20*/ string inputUssClassName;
            /*0x448*/ System.Type m_EnumType;
            /*0x450*/ bool m_IncludeObsoleteValues;
            /*0x458*/ UnityEngine.UIElements.TextElement m_TextElement;
            /*0x460*/ UnityEngine.UIElements.VisualElement m_ArrowElement;
            /*0x468*/ UnityEngine.EnumData m_EnumData;
            /*0x4a8*/ System.Func<UnityEngine.UIElements.IGenericMenu> createMenuCallback;

            static /*0x16de390*/ EnumField();
            /*0x16de8a0*/ EnumField();
            /*0x16de560*/ EnumField(string label, System.Enum defaultValue);
            /*0x16de8b0*/ bool get_includeObsoleteValues();
            /*0x16dd920*/ void Initialize(System.Enum defaultValue);
            /*0x16dd800*/ void Init(System.Enum defaultValue);
            /*0x16dd810*/ void Init(System.Enum defaultValue, bool includeObsoleteValues);
            /*0x16ddbf0*/ void PopulateDataFromType(System.Type enumType);
            /*0x16ddcd0*/ void SetValueWithoutNotify(System.Enum newValue);
            /*0x16de290*/ void UpdateValueLabel(System.Enum value);
            /*0x16ddb20*/ void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x16ddb70*/ void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x16dd770*/ bool ContainsPointer(int pointerId);
            /*0x17aec0*/ void ProcessPointerDown<T>(UnityEngine.UIElements.PointerEventBase<T> evt);
            /*0x16ddaf0*/ void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt);
            /*0x16ddda0*/ void ShowMenu();
            /*0x16dd6e0*/ void ChangeValueFromMenu(object menuItem);
            /*0x16de120*/ void UpdateMixedValueContent();
            /*0x16dd6e0*/ void <ShowMenu>b__33_0(object contentView);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.EnumField, UnityEngine.UIElements.EnumField.UxmlTraits>
            {
                /*0x16e7c50*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<System.Enum>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlTypeAttributeDescription<System.Enum> m_Type;
                /*0x88*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Value;
                /*0x90*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_IncludeObsoleteValues;

                /*0x16eb960*/ UxmlTraits();
                /*0x16e8a90*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.EnumField.<> <>9;
                static /*0x8*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.MouseDownEvent> <>9__22_0;

                static /*0x16e73d0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16e71a0*/ void <.ctor>b__22_0(UnityEngine.UIElements.MouseDownEvent e);
            }
        }

        class FloatField : UnityEngine.UIElements.TextValueField<float>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16deb90*/ FloatField();
            /*0x16decb0*/ FloatField();
            /*0x16dee70*/ FloatField(string label, int maxLength);
            /*0x16df050*/ UnityEngine.UIElements.FloatField.FloatInput get_floatInput();
            /*0x16deaf0*/ string ValueToString(float v);
            /*0x16de9d0*/ float StringToValue(string str);
            /*0x16de9a0*/ bool CanTryParse(string textString);
            /*0x16de8c0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, float startValue);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.FloatField, UnityEngine.UIElements.FloatField.UxmlTraits>
            {
                /*0x16e7a90*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextValueFieldTraits<float, UnityEngine.UIElements.UxmlFloatAttributeDescription>
            {
                /*0x16ebd70*/ UxmlTraits();
            }

            class FloatInput : UnityEngine.UIElements.TextValueField.TextValueInput<float>
            {
                /*0x16df310*/ FloatInput();
                /*0x16df3f0*/ UnityEngine.UIElements.FloatField get_parentFloatField();
                /*0x16df3a0*/ string get_allowedCharacters();
                /*0x16df0d0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, float startValue);
                /*0x16df2c0*/ string ValueToString(float v);
                /*0x16df280*/ float StringToValue(string str);
            }
        }

        class Foldout : UnityEngine.UIElements.BindableElement, UnityEngine.UIElements.INotifyValueChanged<bool>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string toggleUssClassName;
            static /*0x10*/ string contentUssClassName;
            static /*0x18*/ string inputUssClassName;
            static /*0x20*/ string checkmarkUssClassName;
            static /*0x28*/ string textUssClassName;
            static /*0x30*/ string toggleInspectorUssClassName;
            static /*0x38*/ string ussFoldoutDepthClassName;
            static /*0x40*/ int ussFoldoutMaxDepth;
            /*0x3d8*/ UnityEngine.UIElements.Toggle m_Toggle;
            /*0x3e0*/ UnityEngine.UIElements.VisualElement m_Container;
            /*0x3e8*/ bool m_Value;
            /*0x3f0*/ UnityEngine.UIElements.KeyboardNavigationManipulator m_NavigationManipulator;

            static /*0x16dfab0*/ Foldout();
            /*0x16dfda0*/ Foldout();
            /*0x16e01d0*/ UnityEngine.UIElements.Toggle get_toggle();
            /*0x16e01c0*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x16e01f0*/ void set_text(string value);
            /*0x16e01e0*/ bool get_value();
            /*0x16e0320*/ void set_value(bool value);
            /*0x16df8e0*/ void SetValueWithoutNotify(bool newValue);
            /*0x16df890*/ void OnViewDataReady();
            /*0x16df580*/ void Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, UnityEngine.UIElements.EventBase sourceEvent);
            /*0x16df470*/ bool Apply(UnityEngine.UIElements.KeyboardNavigationOperation op);
            /*0x16df690*/ void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt);
            /*0x16dfa50*/ void <.ctor>b__29_0(UnityEngine.UIElements.ChangeEvent<bool> evt);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Foldout, UnityEngine.UIElements.Foldout.UxmlTraits>
            {
                /*0x16e7d90*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
            {
                /*0x78*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Text;
                /*0x80*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Value;

                /*0x16eadd0*/ UxmlTraits();
                /*0x16e8320*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        interface IGenericMenu
        {
            void AddItem(string itemName, bool isChecked, System.Action action);
            void AddItem(string itemName, bool isChecked, System.Action<object> action, object data);
            void DropDown(UnityEngine.Rect position, UnityEngine.UIElements.VisualElement targetElement, bool anchored);
        }

        class GenericDropdownMenu : UnityEngine.UIElements.IGenericMenu
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string itemUssClassName;
            static /*0x10*/ string labelUssClassName;
            static /*0x18*/ string containerInnerUssClassName;
            static /*0x20*/ string containerOuterUssClassName;
            static /*0x28*/ string checkmarkUssClassName;
            static /*0x30*/ string separatorUssClassName;
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.GenericDropdownMenu.MenuItem> m_Items;
            /*0x18*/ UnityEngine.UIElements.VisualElement m_MenuContainer;
            /*0x20*/ UnityEngine.UIElements.VisualElement m_OuterContainer;
            /*0x28*/ UnityEngine.UIElements.ScrollView m_ScrollView;
            /*0x30*/ UnityEngine.UIElements.VisualElement m_PanelRootVisualContainer;
            /*0x38*/ UnityEngine.UIElements.VisualElement m_TargetElement;
            /*0x40*/ UnityEngine.Rect m_DesiredRect;
            /*0x50*/ UnityEngine.UIElements.KeyboardNavigationManipulator m_NavigationManipulator;
            /*0x58*/ bool <isSingleSelectionDropdown>k__BackingField;
            /*0x59*/ bool <closeOnParentResize>k__BackingField;
            /*0x5c*/ UnityEngine.Vector2 m_MousePosition;

            static /*0x16e3180*/ GenericDropdownMenu();
            /*0x16e3400*/ GenericDropdownMenu();
            /*0xe9dc40*/ bool get_isSingleSelectionDropdown();
            /*0x13db610*/ void set_isSingleSelectionDropdown(bool value);
            /*0xe9dc30*/ bool get_closeOnParentResize();
            /*0x13db580*/ void set_closeOnParentResize(bool value);
            /*0x16e3730*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x16e21b0*/ void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt);
            /*0x16e2570*/ void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt);
            /*0x16e20f0*/ void Hide(bool giveFocusBack);
            /*0x16e0d40*/ void Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, UnityEngine.UIElements.EventBase sourceEvent);
            /*0x16e0a00*/ bool Apply(UnityEngine.UIElements.KeyboardNavigationOperation op);
            /*0x16e2a10*/ void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x16e2b80*/ void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x16e2cf0*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x16e2890*/ void OnFocusOut(UnityEngine.UIElements.FocusOutEvent evt);
            /*0x16e29f0*/ void OnParentResized(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x16e3020*/ void UpdateSelection(UnityEngine.UIElements.VisualElement target);
            /*0x16e0d80*/ void ChangeSelectedIndex(int newIndex, int previousIndex);
            /*0x16e2050*/ int GetSelectedIndex();
            /*0x16e0470*/ void AddItem(string itemName, bool isChecked, System.Action action);
            /*0x16e08f0*/ void AddItem(string itemName, bool isChecked, System.Action<object> action, object data);
            /*0x16e0940*/ void AddSeparator(string path);
            /*0x16e04b0*/ UnityEngine.UIElements.GenericDropdownMenu.MenuItem AddItem(string itemName, bool isChecked, bool isEnabled, object data);
            /*0x16e0eb0*/ void DropDown(UnityEngine.Rect position, UnityEngine.UIElements.VisualElement targetElement, bool anchored);
            /*0x16e2e50*/ void OnTargetElementDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt);
            /*0x16e2560*/ void OnContainerGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x16e1980*/ void EnsureVisibilityInParent();
            /*0x16e2ec0*/ void <Apply>g__UpdateSelectionDown|39_0(int newIndex, ref UnityEngine.UIElements.GenericDropdownMenu.<> );
            /*0x16e2f70*/ void <Apply>g__UpdateSelectionUp|39_1(int newIndex, ref UnityEngine.UIElements.GenericDropdownMenu.<> );

            class MenuItem
            {
                /*0x10*/ string name;
                /*0x18*/ UnityEngine.UIElements.VisualElement element;
                /*0x20*/ System.Action action;
                /*0x28*/ System.Action<object> actionUserData;

                /*0x32f970*/ MenuItem();
            }

            struct <>c__DisplayClass39_0
            {
                /*0x10*/ UnityEngine.UIElements.GenericDropdownMenu <>4__this;
                /*0x18*/ int selectedIndex;
            }
        }

        class GroupBox : UnityEngine.UIElements.BindableElement, UnityEngine.UIElements.IGroupBox
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            /*0x3d8*/ UnityEngine.UIElements.Label m_TitleLabel;

            static /*0x16e3760*/ GroupBox();
            /*0x16e38b0*/ GroupBox();
            /*0x16e3820*/ GroupBox(string text);
            /*0x16e3930*/ void set_text(string value);
            /*0x32d010*/ void UnityEngine.UIElements.IGroupBox.OnOptionAdded(UnityEngine.UIElements.IGroupBoxOption option);
            /*0x32d010*/ void UnityEngine.UIElements.IGroupBox.OnOptionRemoved(UnityEngine.UIElements.IGroupBoxOption option);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.GroupBox, UnityEngine.UIElements.GroupBox.UxmlTraits>
            {
                /*0x16e7dd0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
            {
                /*0x78*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Text;

                /*0x16eb450*/ UxmlTraits();
                /*0x16e9ab0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class Hash128Field : UnityEngine.UIElements.TextInputBaseField<UnityEngine.Hash128>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x16e3f10*/ Hash128Field();
            /*0x16e4310*/ Hash128Field();
            /*0x16e4030*/ Hash128Field(string label, int maxLength);
            /*0x16e4320*/ UnityEngine.Hash128 get_value();
            /*0x16e4380*/ void set_value(UnityEngine.Hash128 value);
            /*0x16e3e20*/ void UpdateValueFromText();
            /*0x16e3d90*/ void UpdateTextFromValue();
            /*0x16e3c30*/ void SetValueWithoutNotify(UnityEngine.Hash128 newValue);
            /*0x16e3ef0*/ string ValueToString(UnityEngine.Hash128 value);
            /*0x16e3cf0*/ UnityEngine.Hash128 StringToValue(string str);
            /*0x16e3a90*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Hash128Field, UnityEngine.UIElements.Hash128Field.UxmlTraits>
            {
                /*0x16e7e10*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextValueFieldTraits<UnityEngine.Hash128, UnityEngine.UIElements.UxmlHash128AttributeDescription>
            {
                /*0x16ea870*/ UxmlTraits();
            }

            class Hash128Input : UnityEngine.UIElements.TextInputBaseField.TextInputBase<UnityEngine.Hash128>
            {
                static /*0x16e44f0*/ UnityEngine.Hash128 Parse(string str);
                /*0x16e4590*/ Hash128Input();
                /*0x16e46f0*/ string get_allowedCharacters();
                /*0x16e4440*/ bool AcceptCharacter(char c);
                /*0x16e3cf0*/ UnityEngine.Hash128 StringToValue(string str);
            }
        }

        enum HelpBoxMessageType
        {
            None = 0,
            Info = 1,
            Warning = 2,
            Error = 3,
        }

        class HelpBox : UnityEngine.UIElements.VisualElement
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string iconUssClassName;
            static /*0x18*/ string iconInfoUssClassName;
            static /*0x20*/ string iconwarningUssClassName;
            static /*0x28*/ string iconErrorUssClassName;
            /*0x3c8*/ UnityEngine.UIElements.HelpBoxMessageType m_HelpBoxMessageType;
            /*0x3d0*/ UnityEngine.UIElements.VisualElement m_Icon;
            /*0x3d8*/ string m_IconClass;
            /*0x3e0*/ UnityEngine.UIElements.Label m_Label;

            static /*0x16e4970*/ HelpBox();
            /*0x16e4b90*/ HelpBox();
            /*0x16e4d50*/ HelpBox(string text, UnityEngine.UIElements.HelpBoxMessageType messageType);
            /*0x16e4f10*/ void set_text(string value);
            /*0x16e4ef0*/ void set_messageType(UnityEngine.UIElements.HelpBoxMessageType value);
            /*0x16e4720*/ string GetIconClass(UnityEngine.UIElements.HelpBoxMessageType messageType);
            /*0x16e47f0*/ void UpdateIcon(UnityEngine.UIElements.HelpBoxMessageType messageType);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.HelpBox, UnityEngine.UIElements.HelpBox.UxmlTraits>
            {
                /*0x177f9f0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
            {
                /*0x70*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Text;
                /*0x78*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.HelpBoxMessageType> m_MessageType;

                /*0x17810f0*/ UxmlTraits();
                /*0x17806f0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class Image : UnityEngine.UIElements.VisualElement
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Texture2D> s_ImageProperty;
            static /*0x10*/ UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Sprite> s_SpriteProperty;
            static /*0x18*/ UnityEngine.UIElements.CustomStyleProperty<UnityEngine.UIElements.VectorImage> s_VectorImageProperty;
            static /*0x20*/ UnityEngine.UIElements.CustomStyleProperty<string> s_ScaleModeProperty;
            static /*0x28*/ UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Color> s_TintColorProperty;
            /*0x3c8*/ UnityEngine.ScaleMode m_ScaleMode;
            /*0x3d0*/ UnityEngine.Texture m_Image;
            /*0x3d8*/ UnityEngine.Sprite m_Sprite;
            /*0x3e0*/ UnityEngine.UIElements.VectorImage m_VectorImage;
            /*0x3e8*/ UnityEngine.Rect m_UV;
            /*0x3f8*/ UnityEngine.Color m_TintColor;
            /*0x408*/ bool m_ImageIsInline;
            /*0x409*/ bool m_ScaleModeIsInline;
            /*0x40a*/ bool m_TintColorIsInline;

            static /*0x1772450*/ Image();
            /*0x17726a0*/ Image();
            /*0x175b090*/ UnityEngine.Texture get_image();
            /*0x17728c0*/ void set_image(UnityEngine.Texture value);
            /*0x16e01d0*/ UnityEngine.Sprite get_sprite();
            /*0x17729a0*/ void set_sprite(UnityEngine.Sprite value);
            /*0x16e01c0*/ UnityEngine.UIElements.VectorImage get_vectorImage();
            /*0x1772ae0*/ void set_vectorImage(UnityEngine.UIElements.VectorImage value);
            /*0x1772870*/ UnityEngine.Rect get_sourceRect();
            /*0x17728b0*/ UnityEngine.Rect get_uv();
            /*0x1772a80*/ void set_uv(UnityEngine.Rect value);
            /*0x1772860*/ UnityEngine.ScaleMode get_scaleMode();
            /*0x17728a0*/ UnityEngine.Color get_tintColor();
            /*0x17715b0*/ UnityEngine.Vector2 GetTextureDisplaySize(UnityEngine.Texture texture);
            /*0x17716a0*/ UnityEngine.Vector2 GetTextureDisplaySize(UnityEngine.Sprite sprite);
            /*0x1770ff0*/ UnityEngine.Vector2 DoMeasure(float desiredWidth, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float desiredHeight, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);
            /*0x1771830*/ void OnGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc);
            /*0x17717f0*/ void OnCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e);
            /*0x1771dd0*/ void ReadCustomProperties(UnityEngine.UIElements.ICustomStyle customStyleProvider);
            /*0x2a5510*/ void SetProperty<T0, T1, T2>(T0 src, ref T0 dst, ref T1 alt0, ref T2 alt1);
            /*0x1770da0*/ void ClearProperty();
            /*0x17723a0*/ void SetScaleMode(UnityEngine.ScaleMode mode);
            /*0x17723c0*/ void SetTintColor(UnityEngine.Color color);
            /*0x17713b0*/ UnityEngine.Rect GetSourceRect();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Image, UnityEngine.UIElements.Image.UxmlTraits>
            {
                /*0x177f7f0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
            {
                /*0x1781210*/ UxmlTraits();
            }
        }

        interface INotifyValueChanged<T>
        {
            /*0x2a5510*/ T get_value();
            /*0x2a5510*/ void set_value(T value);
            /*0x2a5510*/ void SetValueWithoutNotify(T newValue);
        }

        class INotifyValueChangedExtensions
        {
            static /*0x1794f0*/ bool RegisterValueChangedCallback<T>(UnityEngine.UIElements.INotifyValueChanged<T> control, UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.ChangeEvent<T>> callback);
            static /*0x1794f0*/ bool UnregisterValueChangedCallback<T>(UnityEngine.UIElements.INotifyValueChanged<T> control, UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.ChangeEvent<T>> callback);
        }

        interface IEditableElement
        {
            /*0x1803b0*/ System.Action get_editingStarted();
            /*0x1803b0*/ System.Action get_editingEnded();
        }

        class BaseField<TValueType> : UnityEngine.UIElements.BindableElement, UnityEngine.UIElements.INotifyValueChanged<TValueType>, UnityEngine.UIElements.IEditableElement
        {
            static /*0x0*/ string ussClassName;
            static /*0x0*/ string labelUssClassName;
            static /*0x0*/ string inputUssClassName;
            static /*0x0*/ string noLabelVariantUssClassName;
            static /*0x0*/ string labelDraggerVariantUssClassName;
            static /*0x0*/ string mixedValueLabelUssClassName;
            static /*0x0*/ string alignedFieldUssClassName;
            static /*0x0*/ string inspectorFieldUssClassName;
            static /*0x0*/ string mixedValueString;
            static /*0x0*/ UnityEngine.PropertyName serializedPropertyCopyName;
            static /*0x0*/ UnityEngine.UIElements.CustomStyleProperty<float> s_LabelWidthRatioProperty;
            static /*0x0*/ UnityEngine.UIElements.CustomStyleProperty<float> s_LabelExtraPaddingProperty;
            static /*0x0*/ UnityEngine.UIElements.CustomStyleProperty<float> s_LabelBaseMinWidthProperty;
            static /*0x0*/ UnityEngine.UIElements.CustomStyleProperty<float> s_LabelExtraContextWidthProperty;
            /*0x0*/ float m_LabelWidthRatio;
            /*0x0*/ float m_LabelExtraPadding;
            /*0x0*/ float m_LabelBaseMinWidth;
            /*0x0*/ float m_LabelExtraContextWidth;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_VisualInput;
            /*0x0*/ System.Action<UnityEngine.ExpressionEvaluator.Expression> expressionEvaluated;
            /*0x0*/ TValueType m_Value;
            /*0x0*/ System.Func<TValueType, TValueType> onValidateValue;
            /*0x0*/ UnityEngine.UIElements.Label <labelElement>k__BackingField;
            /*0x0*/ bool m_ShowMixedValue;
            /*0x0*/ UnityEngine.UIElements.Label m_MixedValueLabel;
            /*0x0*/ bool m_SkipValidation;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_CachedContextWidthElement;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_CachedInspectorElement;
            /*0x0*/ System.Action <UnityEngine.UIElements.IEditableElement.editingStarted>k__BackingField;
            /*0x0*/ System.Action <UnityEngine.UIElements.IEditableElement.editingEnded>k__BackingField;

            static /*0x180ff0*/ BaseField();
            /*0x17aec0*/ BaseField(string label);
            /*0x183150*/ BaseField(string label, UnityEngine.UIElements.VisualElement visualInput);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_visualInput();
            /*0x17aec0*/ void set_visualInput(UnityEngine.UIElements.VisualElement value);
            /*0x2a5510*/ TValueType get_rawValue();
            /*0x2a5510*/ void set_rawValue(TValueType value);
            /*0x17aec0*/ void add_onValidateValue(System.Func<TValueType, TValueType> value);
            /*0x17aec0*/ void remove_onValidateValue(System.Func<TValueType, TValueType> value);
            /*0x2a5510*/ TValueType get_value();
            /*0x2a5510*/ void set_value(TValueType value);
            /*0x1803b0*/ UnityEngine.UIElements.Label get_labelElement();
            /*0x17aec0*/ void set_labelElement(UnityEngine.UIElements.Label value);
            /*0x1803b0*/ string get_label();
            /*0x17aec0*/ void set_label(string value);
            /*0x17cb40*/ bool get_showMixedValue();
            /*0x181190*/ void set_showMixedValue(bool value);
            /*0x17cb40*/ bool get_canSwitchToMixedValue();
            /*0x1803b0*/ UnityEngine.UIElements.Label get_mixedValueLabel();
            /*0x1803b0*/ System.Action UnityEngine.UIElements.IEditableElement.get_editingStarted();
            /*0x1803b0*/ System.Action UnityEngine.UIElements.IEditableElement.get_editingEnded();
            /*0x2a5510*/ bool EqualsCurrentValue(TValueType value);
            /*0x17aec0*/ void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent e);
            /*0x17aec0*/ void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent e);
            /*0x180fc0*/ void RegisterEditingCallbacks();
            /*0x180fc0*/ void UnregisterEditingCallbacks();
            /*0x17aec0*/ void StartEditing(UnityEngine.UIElements.EventBase e);
            /*0x17aec0*/ void EndEditing(UnityEngine.UIElements.EventBase e);
            /*0x17aec0*/ void OnCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent evt);
            /*0x17aec0*/ void OnInspectorFieldGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e);
            /*0x180fc0*/ void AlignLabel();
            /*0x2a5510*/ TValueType ValidatedValue(TValueType value);
            /*0x180fc0*/ void UpdateMixedValueContent();
            /*0x2a5510*/ void SetValueWithoutNotify(TValueType newValue);
            /*0x180fc0*/ void OnViewDataReady();
            UnityEngine.Rect GetTooltipRect();

            class UxmlTraits<TValueType> : UnityEngine.UIElements.BindableElement.UxmlTraits
            {
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Label;

                static /*0x17e030*/ System.Collections.Generic.List<string> ParseChoiceList(string choicesFromBag);
                /*0x180fc0*/ UxmlTraits();
                void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class BaseFieldTraits<TValueType, TValueUxmlAttributeType> : UnityEngine.UIElements.BaseField.UxmlTraits<TValueType>
        {
            /*0x0*/ TValueUxmlAttributeType m_Value;

            /*0x180fc0*/ BaseFieldTraits();
            void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class KeyboardTextEditorEventHandler : UnityEngine.UIElements.TextEditorEventHandler
        {
            /*0x20*/ UnityEngine.Event m_ImguiEvent;
            /*0x28*/ bool m_Changed;

            /*0x1774890*/ KeyboardTextEditorEventHandler(UnityEngine.UIElements.TextElement textElement, UnityEngine.TextEditingUtilities editingUtilities);
            /*0x1773790*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x1773d30*/ void OnFocus(UnityEngine.UIElements.FocusEvent _);
            /*0x1773ae0*/ void OnBlur(UnityEngine.UIElements.BlurEvent _);
            /*0x1773dc0*/ void OnKeyDown(UnityEngine.UIElements.KeyDownEvent evt);
            /*0x1774670*/ void UpdateLabel();
            /*0x17744b0*/ void OnValidateCommandEvent(UnityEngine.UIElements.ValidateCommandEvent evt);
            /*0x1773b30*/ void OnExecuteCommandEvent(UnityEngine.UIElements.ExecuteCommandEvent evt);
            /*0x17aec0*/ void OnNavigationEvent<TEvent>(UnityEngine.UIElements.NavigationEventBase<TEvent> evt);
        }

        class TextEditorEventHandler
        {
            /*0x10*/ UnityEngine.UIElements.TextElement textElement;
            /*0x18*/ UnityEngine.TextEditingUtilities editingUtilities;

            /*0xce3b90*/ TextEditorEventHandler(UnityEngine.UIElements.TextElement textElement, UnityEngine.TextEditingUtilities editingUtilities);
            /*0x32d010*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
        }

        class TextField : UnityEngine.UIElements.TextInputBaseField<string>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x177d940*/ TextField();
            /*0x177dcd0*/ TextField();
            /*0x177dca0*/ TextField(string label);
            /*0x177da60*/ TextField(string label, int maxLength, bool multiline, bool isPasswordField, char maskChar);
            /*0x177dd00*/ UnityEngine.UIElements.TextField.TextInput get_textInput();
            /*0x177ddc0*/ void set_multiline(bool value);
            /*0x177dd80*/ string get_value();
            /*0x177ddf0*/ void set_value(string value);
            /*0x177d820*/ void SetValueWithoutNotify(string newValue);
            /*0x177d8e0*/ void UpdateTextFromValue();
            /*0x177d630*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x177d790*/ void OnViewDataReady();
            /*0x718e40*/ string ValueToString(string value);
            /*0x718e40*/ string StringToValue(string str);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.TextField, UnityEngine.UIElements.TextField.UxmlTraits>
            {
                /*0x177f7b0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextInputBaseField.UxmlTraits<string>
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription k_Value;
                /*0xc8*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Multiline;

                static /*0x1780850*/ UxmlTraits();
                /*0x1780970*/ UxmlTraits();
                /*0x177ff90*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class TextInput : UnityEngine.UIElements.TextInputBaseField.TextInputBase<string>
            {
                /*0x177dea0*/ TextInput();
                /*0x177df60*/ void set_multiline(bool value);
                /*0x177df00*/ void set_isPasswordField(bool value);
                /*0x718e40*/ string StringToValue(string str);
            }
        }

        class TextInputBaseField<TValueType> : UnityEngine.UIElements.BaseField<TValueType>
        {
            static /*0x0*/ UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Color> s_SelectionColorProperty;
            static /*0x0*/ UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Color> s_CursorColorProperty;
            static /*0x0*/ string ussClassName;
            static /*0x0*/ string labelUssClassName;
            static /*0x0*/ string inputUssClassName;
            static /*0x0*/ string multilineContainerClassName;
            static /*0x0*/ string singleLineInputUssClassName;
            static /*0x0*/ string multilineInputUssClassName;
            static /*0x0*/ string multilineInputWithScrollViewUssClassName;
            static /*0x0*/ string textInputUssName;
            /*0x0*/ int m_VisualInputTabIndex;
            /*0x0*/ UnityEngine.UIElements.TextInputBaseField.TextInputBase<TValueType> m_TextInputBase;
            /*0x0*/ bool m_UpdateTextFromValue;
            /*0x0*/ System.Action<bool> onIsReadOnlyChanged;

            static /*0x180ff0*/ TextInputBaseField();
            /*0x2a5510*/ TextInputBaseField(string label, int maxLength, char maskChar, UnityEngine.UIElements.TextInputBaseField.TextInputBase<TValueType> textInputBase);
            /*0x1803b0*/ UnityEngine.UIElements.TextInputBaseField.TextInputBase<TValueType> get_textInputBase();
            /*0x1803b0*/ string get_text();
            /*0x17aec0*/ void set_text(string value);
            /*0x17aec0*/ void add_onIsReadOnlyChanged(System.Action<bool> value);
            /*0x17aec0*/ void remove_onIsReadOnlyChanged(System.Action<bool> value);
            /*0x17cb40*/ bool get_isReadOnly();
            /*0x181190*/ void set_isReadOnly(bool value);
            /*0x181190*/ void set_isPasswordField(bool value);
            /*0x181190*/ void set_autoCorrection(bool value);
            /*0x181190*/ void set_hideMobileInput(bool value);
            /*0x17aa40*/ void set_keyboardType(UnityEngine.TouchScreenKeyboardType value);
            /*0x1803b0*/ UnityEngine.UIElements.ITextEdition get_textEdition();
            /*0x17aa40*/ void set_maxLength(int value);
            /*0x17cb40*/ bool get_isDelayed();
            /*0x181190*/ void set_isDelayed(bool value);
            void set_maskChar(char value);
            /*0x17cb40*/ bool get_canSwitchToMixedValue();
            /*0x2a5510*/ string ValueToString(TValueType value);
            /*0x2a5510*/ TValueType StringToValue(string str);
            /*0x17aec0*/ void OnFieldCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e);
            /*0x17aec0*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x180fc0*/ void UpdateMixedValueContent();
            /*0x180fc0*/ void UpdateValueFromText();
            /*0x180fc0*/ void UpdateTextFromValue();

            class UxmlTraits<TValueType> : UnityEngine.UIElements.BaseFieldTraits<string, UnityEngine.UIElements.UxmlStringAttributeDescription>
            {
                /*0x0*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_MaxLength;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Password;
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_MaskCharacter;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsReadOnly;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsDelayed;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_HideMobileInput;
                /*0x0*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.TouchScreenKeyboardType> m_KeyboardType;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_AutoCorrection;

                /*0x180fc0*/ UxmlTraits();
                void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class TextInputBase<TValueType> : UnityEngine.UIElements.VisualElement
            {
                static /*0x0*/ string innerComponentsModifierName;
                static /*0x0*/ string innerTextElementUssClassName;
                static /*0x0*/ string innerTextElementWithScrollViewUssClassName;
                static /*0x0*/ string horizontalVariantInnerTextElementUssClassName;
                static /*0x0*/ string verticalVariantInnerTextElementUssClassName;
                static /*0x0*/ string verticalHorizontalVariantInnerTextElementUssClassName;
                static /*0x0*/ string innerScrollviewUssClassName;
                static /*0x0*/ string innerViewportUssClassName;
                static /*0x0*/ string innerContentContainerUssClassName;
                /*0x0*/ UnityEngine.UIElements.TextElement <textElement>k__BackingField;
                /*0x0*/ UnityEngine.UIElements.ScrollView scrollView;
                /*0x0*/ UnityEngine.UIElements.VisualElement multilineContainer;
                /*0x0*/ bool <isDragging>k__BackingField;
                /*0x0*/ UnityEngine.Vector2 scrollOffset;
                /*0x0*/ bool m_ScrollViewWasClamped;
                /*0x0*/ UnityEngine.Vector2 lastCursorPos;
                /*0x0*/ UnityEngine.UIElements.ScrollerVisibility m_VerticalScrollerVisibility;

                static /*0x180ff0*/ TextInputBase();
                /*0x180fc0*/ TextInputBase();
                /*0x1803b0*/ UnityEngine.UIElements.TextElement get_textElement();
                /*0x17aec0*/ void set_textElement(UnityEngine.UIElements.TextElement value);
                /*0x1803b0*/ UnityEngine.UIElements.ITextSelection get_textSelection();
                /*0x1803b0*/ UnityEngine.UIElements.ITextEdition get_textEdition();
                /*0x180fc0*/ void SelectAll();
                /*0x180fc0*/ void SelectNone();
                /*0x1803b0*/ string get_originalText();
                /*0x2a5510*/ TValueType StringToValue(string str);
                /*0x180fc0*/ void UpdateValueFromText();
                /*0x180fc0*/ void UpdateTextFromValue();
                /*0x180fc0*/ void MoveFocusToCompositeRoot();
                /*0x17cb40*/ bool get_isReadOnly();
                /*0x17aa40*/ void set_maxLength(int value);
                void set_maskChar(char value);
                /*0x17cb40*/ bool get_isPasswordField();
                /*0x181190*/ void set_isPasswordField(bool value);
                /*0x181190*/ void set_isDragging(bool value);
                /*0x1803b0*/ string get_text();
                /*0x17aec0*/ void set_text(string value);
                /*0x17aec0*/ void MakeSureScrollViewDoesNotLeakEvents(UnityEngine.UIElements.ChangeEvent<float> evt);
                /*0x180fc0*/ void SetSingleLine();
                /*0x180fc0*/ void SetMultiline();
                /*0x17aec0*/ void ScrollViewOnGeometryChangedEvent(UnityEngine.UIElements.GeometryChangedEvent e);
                /*0x17aec0*/ void TextElementOnGeometryChangedEvent(UnityEngine.UIElements.GeometryChangedEvent e);
                /*0x17aec0*/ void OnInputCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e);
                bool AcceptCharacter(char c);
                /*0x181190*/ void UpdateScrollOffset(bool isBackspace);
                void UpdateScrollOffset(bool isBackspace, bool widthChanged);
                /*0x2a5510*/ UnityEngine.Vector2 GetScrollOffset(float xOffset, float yOffset, float contentViewportWidth, bool isBackspace, bool widthChanged);
                /*0x180fc0*/ void SetScrollViewMode();
                /*0x180fc0*/ void SetMultilineContainerStyle();
                /*0x180fc0*/ void RemoveSingleLineComponents();
                /*0x180fc0*/ void RemoveMultilineComponents();
            }
        }

        class TouchScreenTextEditorEventHandler : UnityEngine.UIElements.TextEditorEventHandler
        {
            /*0x20*/ UnityEngine.UIElements.IVisualElementScheduledItem m_TouchKeyboardPoller;
            /*0x28*/ bool m_TouchKeyboardAllowsInPlaceEditing;
            /*0x29*/ bool m_IsClicking;

            /*0x177f5a0*/ TouchScreenTextEditorEventHandler(UnityEngine.UIElements.TextElement textElement, UnityEngine.TextEditingUtilities editingUtilities);
            /*0x177f230*/ void PollTouchScreenKeyboard();
            /*0x177e1f0*/ void DoPollTouchScreenKeyboard();
            /*0x177f450*/ void UpdateStringPositionFromKeyboard();
            /*0x177e150*/ void CloseTouchScreenKeyboard();
            /*0x177ef90*/ void OpenTouchScreenKeyboard();
            /*0x177e6e0*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x177ee20*/ void OnPointerDownEvent();
            /*0x177ef60*/ void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x177eaa0*/ void OnFocusInEvent();
            /*0x177eb90*/ void OnFocusOutEvent(UnityEngine.UIElements.FocusOutEvent evt);
        }

        class IntegerField : UnityEngine.UIElements.TextValueField<int>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x1772e90*/ IntegerField();
            /*0x1773190*/ IntegerField();
            /*0x1772fb0*/ IntegerField(string label, int maxLength);
            /*0x1773350*/ UnityEngine.UIElements.IntegerField.IntegerInput get_integerInput();
            /*0x1772df0*/ string ValueToString(int v);
            /*0x1772cd0*/ int StringToValue(string str);
            /*0x1772ca0*/ bool CanTryParse(string textString);
            /*0x1772bc0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, int startValue);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.IntegerField, UnityEngine.UIElements.IntegerField.UxmlTraits>
            {
                /*0x177f8f0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextValueFieldTraits<int, UnityEngine.UIElements.UxmlIntAttributeDescription>
            {
                /*0x1780eb0*/ UxmlTraits();
            }

            class IntegerInput : UnityEngine.UIElements.TextValueField.TextValueInput<int>
            {
                /*0x1773630*/ IntegerInput();
                /*0x1773710*/ UnityEngine.UIElements.IntegerField get_parentIntegerField();
                /*0x17736c0*/ string get_allowedCharacters();
                /*0x17733d0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, int startValue);
                /*0x17735e0*/ string ValueToString(int v);
                /*0x17735a0*/ int StringToValue(string str);
            }
        }

        class Label : UnityEngine.UIElements.TextElement
        {
            static /*0x0*/ string ussClassName;

            static /*0x1774970*/ Label();
            /*0x1774a90*/ Label();
            /*0x17749e0*/ Label(string text);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Label, UnityEngine.UIElements.Label.UxmlTraits>
            {
                /*0x177f9b0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextElement.UxmlTraits
            {
                /*0x1780960*/ UxmlTraits();
            }
        }

        class ListView : UnityEngine.UIElements.BaseListView
        {
            /*0x550*/ System.Func<UnityEngine.UIElements.VisualElement> m_MakeItem;
            /*0x558*/ System.Action<UnityEngine.UIElements.VisualElement, int> m_BindItem;
            /*0x560*/ System.Action<UnityEngine.UIElements.VisualElement, int> <unbindItem>k__BackingField;
            /*0x568*/ System.Action<UnityEngine.UIElements.VisualElement> <destroyItem>k__BackingField;

            /*0x1774c00*/ ListView();
            /*0x1774c90*/ System.Func<UnityEngine.UIElements.VisualElement> get_makeItem();
            /*0x1774c70*/ System.Action<UnityEngine.UIElements.VisualElement, int> get_bindItem();
            /*0x1774ca0*/ System.Action<UnityEngine.UIElements.VisualElement, int> get_unbindItem();
            /*0x1774c80*/ System.Action<UnityEngine.UIElements.VisualElement> get_destroyItem();
            /*0x1774bc0*/ bool HasValidDataAndBindings();
            /*0x1774b70*/ UnityEngine.UIElements.CollectionViewController CreateViewController();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.ListView, UnityEngine.UIElements.ListView.UxmlTraits>
            {
                /*0x177fa30*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseListView.UxmlTraits
            {
                /*0x1780a20*/ UxmlTraits();
            }
        }

        class LongField : UnityEngine.UIElements.TextValueField<long>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x1774f80*/ LongField();
            /*0x1775280*/ LongField();
            /*0x17750a0*/ LongField(string label, int maxLength);
            /*0x1775440*/ UnityEngine.UIElements.LongField.LongInput get_longInput();
            /*0x1774ee0*/ string ValueToString(long v);
            /*0x1774dc0*/ long StringToValue(string str);
            /*0x1774d90*/ bool CanTryParse(string textString);
            /*0x1774cb0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, long startValue);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.LongField, UnityEngine.UIElements.LongField.UxmlTraits>
            {
                /*0x177f8b0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextValueFieldTraits<long, UnityEngine.UIElements.UxmlLongAttributeDescription>
            {
                /*0x1781220*/ UxmlTraits();
            }

            class LongInput : UnityEngine.UIElements.TextValueField.TextValueInput<long>
            {
                /*0x1775840*/ LongInput();
                /*0x1775920*/ UnityEngine.UIElements.LongField get_parentLongField();
                /*0x17758d0*/ string get_allowedCharacters();
                /*0x17754c0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, long startValue);
                /*0x1775700*/ long ClampMinMaxLongValue(long niceDelta, long value);
                /*0x17757f0*/ string ValueToString(long v);
                /*0x17757b0*/ long StringToValue(string str);
            }
        }

        class MinMaxSlider : UnityEngine.UIElements.BaseField<UnityEngine.Vector2>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;
            static /*0x18*/ string trackerUssClassName;
            static /*0x20*/ string draggerUssClassName;
            static /*0x28*/ string minThumbUssClassName;
            static /*0x30*/ string maxThumbUssClassName;
            /*0x448*/ UnityEngine.UIElements.VisualElement <dragElement>k__BackingField;
            /*0x450*/ UnityEngine.UIElements.VisualElement <dragMinThumb>k__BackingField;
            /*0x458*/ UnityEngine.UIElements.VisualElement <dragMaxThumb>k__BackingField;
            /*0x460*/ UnityEngine.UIElements.ClampedDragger<float> <clampedDragger>k__BackingField;
            /*0x468*/ UnityEngine.Vector2 m_DragElementStartPos;
            /*0x470*/ UnityEngine.Vector2 m_ValueStartPos;
            /*0x478*/ UnityEngine.Rect m_DragMinThumbRect;
            /*0x488*/ UnityEngine.Rect m_DragMaxThumbRect;
            /*0x498*/ UnityEngine.UIElements.MinMaxSlider.DragState m_DragState;
            /*0x49c*/ float m_MinLimit;
            /*0x4a0*/ float m_MaxLimit;

            static /*0x17776a0*/ MinMaxSlider();
            /*0x1777920*/ MinMaxSlider();
            /*0x1777960*/ MinMaxSlider(string label, float minValue, float maxValue, float minLimit, float maxLimit);
            /*0xcb4330*/ UnityEngine.UIElements.VisualElement get_dragElement();
            /*0x16f2930*/ void set_dragElement(UnityEngine.UIElements.VisualElement value);
            /*0xc9b7c0*/ UnityEngine.UIElements.VisualElement get_dragMinThumb();
            /*0xdf6b60*/ void set_dragMinThumb(UnityEngine.UIElements.VisualElement value);
            /*0xc9b800*/ UnityEngine.UIElements.VisualElement get_dragMaxThumb();
            /*0xdf6b80*/ void set_dragMaxThumb(UnityEngine.UIElements.VisualElement value);
            /*0xdf64f0*/ UnityEngine.UIElements.ClampedDragger<float> get_clampedDragger();
            /*0xdf7670*/ void set_clampedDragger(UnityEngine.UIElements.ClampedDragger<float> value);
            /*0x17780d0*/ float get_minValue();
            /*0x17783d0*/ void set_minValue(float value);
            /*0x17780a0*/ float get_maxValue();
            /*0x1778340*/ void set_maxValue(float value);
            /*0x1778100*/ UnityEngine.Vector2 get_value();
            /*0x1778460*/ void set_value(UnityEngine.Vector2 value);
            /*0x17763f0*/ void SetValueWithoutNotify(UnityEngine.Vector2 newValue);
            /*0x1778090*/ float get_lowLimit();
            /*0x1778240*/ void set_lowLimit(float value);
            /*0x1778080*/ float get_highLimit();
            /*0x1778140*/ void set_highLimit(float value);
            /*0x17759a0*/ UnityEngine.Vector2 ClampValues(UnityEngine.Vector2 valueToClamp);
            /*0x1777260*/ void UpdateDragElementPosition(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x17765d0*/ void UpdateDragElementPosition();
            /*0x17772d0*/ void UpdateDragThumbsRect();
            /*0x1776460*/ float SliderLerpUnclamped(float a, float b, float interpolant);
            /*0x1776480*/ float SliderNormalizeValue(float currentValue, float lowerValue, float higherValue);
            /*0x1775c50*/ float ComputeValueFromPosition(float positionToConvert);
            /*0x1775d90*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x1776360*/ void SetSliderValueFromDrag();
            /*0x1776000*/ void SetSliderValueFromClick();
            /*0x1775a30*/ void ComputeValueFromDraggingThumb(float dragElementStartPos, float dragElementEndPos);
            /*0x32d010*/ void UpdateMixedValueContent();
            /*0x1775ed0*/ void RegisterEditingCallbacks();
            /*0x17764a0*/ void UnregisterEditingCallbacks();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.MinMaxSlider, UnityEngine.UIElements.MinMaxSlider.UxmlTraits>
            {
                /*0x177f830*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseField.UxmlTraits<UnityEngine.Vector2>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_MinValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_MaxValue;
                /*0x90*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_LowLimit;
                /*0x98*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_HighLimit;

                /*0x1780cb0*/ UxmlTraits();
                /*0x177fa70*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            enum DragState
            {
                NoThumb = 0,
                MinThumb = 1,
                MiddleThumb = 2,
                MaxThumb = 3,
            }
        }

        enum ColumnDataType
        {
            Name = 0,
            Title = 1,
            Icon = 2,
            Visibility = 3,
            Width = 4,
            MaxWidth = 5,
            MinWidth = 6,
            Stretchable = 7,
            Sortable = 8,
            Optional = 9,
            Resizable = 10,
            HeaderTemplate = 11,
            CellTemplate = 12,
        }

        class Column
        {
            static /*0x0*/ string k_InvalidTemplateError;
            /*0x10*/ string m_Name;
            /*0x18*/ string m_Title;
            /*0x20*/ UnityEngine.UIElements.Background m_Icon;
            /*0x40*/ bool m_Visible;
            /*0x44*/ UnityEngine.UIElements.Length m_Width;
            /*0x4c*/ UnityEngine.UIElements.Length m_MinWidth;
            /*0x54*/ UnityEngine.UIElements.Length m_MaxWidth;
            /*0x5c*/ float m_DesiredWidth;
            /*0x60*/ bool m_Stretchable;
            /*0x61*/ bool m_Sortable;
            /*0x62*/ bool m_Optional;
            /*0x63*/ bool m_Resizable;
            /*0x68*/ System.Func<UnityEngine.UIElements.VisualElement> m_MakeHeader;
            /*0x70*/ System.Action<UnityEngine.UIElements.VisualElement> m_BindHeader;
            /*0x78*/ System.Action<UnityEngine.UIElements.VisualElement> m_UnbindHeader;
            /*0x80*/ System.Action<UnityEngine.UIElements.VisualElement> m_DestroyHeader;
            /*0x88*/ System.Func<UnityEngine.UIElements.VisualElement> m_MakeCell;
            /*0x90*/ System.Action<UnityEngine.UIElements.VisualElement, int> m_BindCell;
            /*0x98*/ System.Action<UnityEngine.UIElements.VisualElement, int> m_UnbindCellItem;
            /*0xa0*/ System.Action<UnityEngine.UIElements.VisualElement> <destroyCell>k__BackingField;
            /*0xa8*/ UnityEngine.UIElements.Columns <collection>k__BackingField;
            /*0xb0*/ System.Action<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> changed;
            /*0xb8*/ System.Action<UnityEngine.UIElements.Column> resized;

            static /*0x176e590*/ Column();
            /*0x176e600*/ Column();
            /*0x73d3e0*/ string get_name();
            /*0x176ee10*/ void set_name(string value);
            /*0x32f410*/ string get_title();
            /*0x176ef70*/ void set_title(string value);
            /*0x176e8b0*/ UnityEngine.UIElements.Background get_icon();
            /*0x176e8d0*/ int get_index();
            /*0x176e800*/ int get_displayIndex();
            /*0x176ea10*/ int get_visibleIndex();
            /*0xb61dd0*/ bool get_visible();
            /*0x176efd0*/ void set_visible(bool value);
            /*0x176eac0*/ UnityEngine.UIElements.Length get_width();
            /*0x176f010*/ void set_width(UnityEngine.UIElements.Length value);
            /*0x176e9d0*/ UnityEngine.UIElements.Length get_minWidth();
            /*0x176edb0*/ void set_minWidth(UnityEngine.UIElements.Length value);
            /*0x176e9c0*/ UnityEngine.UIElements.Length get_maxWidth();
            /*0x176ed50*/ void set_maxWidth(UnityEngine.UIElements.Length value);
            /*0x176e7f0*/ float get_desiredWidth();
            /*0x176ec50*/ void set_desiredWidth(float value);
            /*0x176ea00*/ bool get_sortable();
            /*0x176eef0*/ void set_sortable(bool value);
            /*0xe27510*/ bool get_stretchable();
            /*0x176ef30*/ void set_stretchable(bool value);
            /*0x176e9e0*/ bool get_optional();
            /*0x176ee70*/ void set_optional(bool value);
            /*0x176e9f0*/ bool get_resizable();
            /*0x176eeb0*/ void set_resizable(bool value);
            /*0x8af030*/ System.Func<UnityEngine.UIElements.VisualElement> get_makeHeader();
            /*0x176ecf0*/ void set_makeHeader(System.Func<UnityEngine.UIElements.VisualElement> value);
            /*0xd184b0*/ System.Action<UnityEngine.UIElements.VisualElement> get_bindHeader();
            /*0xecb7b0*/ System.Action<UnityEngine.UIElements.VisualElement> get_unbindHeader();
            /*0xeeac90*/ System.Action<UnityEngine.UIElements.VisualElement> get_destroyHeader();
            /*0x7379f0*/ System.Func<UnityEngine.UIElements.VisualElement> get_makeCell();
            /*0x176ec80*/ void set_makeCell(System.Func<UnityEngine.UIElements.VisualElement> value);
            /*0x7378b0*/ System.Action<UnityEngine.UIElements.VisualElement, int> get_bindCell();
            /*0x9c7a50*/ System.Action<UnityEngine.UIElements.VisualElement, int> get_unbindCell();
            /*0xec32e0*/ System.Action<UnityEngine.UIElements.VisualElement> get_destroyCell();
            /*0xbf2ca0*/ UnityEngine.UIElements.Columns get_collection();
            /*0xbf30d0*/ void set_collection(UnityEngine.UIElements.Columns value);
            /*0x176e670*/ void add_changed(System.Action<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value);
            /*0x176ead0*/ void remove_changed(System.Action<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value);
            /*0x176e730*/ void add_resized(System.Action<UnityEngine.UIElements.Column> value);
            /*0x176eb90*/ void remove_resized(System.Action<UnityEngine.UIElements.Column> value);
            /*0x176e560*/ void NotifyChange(UnityEngine.UIElements.ColumnDataType type);
            /*0x176e530*/ float GetWidth(float layoutWidth);
            /*0x176e4d0*/ float GetMaxWidth(float layoutWidth);
            /*0x176e500*/ float GetMinWidth(float layoutWidth);

            class UxmlObjectFactory<T> : UnityEngine.UIElements.UxmlObjectFactory<T, UnityEngine.UIElements.Column.UxmlObjectTraits<T>>
            {
                /*0x180fc0*/ UxmlObjectFactory();
            }

            class UxmlObjectTraits<T> : UnityEngine.UIElements.UxmlObjectTraits<T>
            {
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Name;
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Text;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Visible;
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Width;
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_MinWidth;
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_MaxWidth;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Stretch;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Sortable;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Optional;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Resizable;
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_HeaderTemplateId;
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_CellTemplateId;

                static /*0x2a5510*/ UnityEngine.UIElements.Length ParseLength(string str, UnityEngine.UIElements.Length defaultValue);
                /*0x180fc0*/ UxmlObjectTraits();
                void Init(ref T obj, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

                class <>c__DisplayClass15_0<T>
                {
                    /*0x0*/ UnityEngine.UIElements.VisualTreeAsset asset;

                    /*0x180fc0*/ <>c__DisplayClass15_0();
                    /*0x1803b0*/ UnityEngine.UIElements.VisualElement <Init>b__0();
                }

                class <>c__DisplayClass15_<T>
                {
                    /*0x0*/ UnityEngine.UIElements.VisualTreeAsset asset;

                    /*0x180fc0*/ <>c__DisplayClass15_();
                    /*0x1803b0*/ UnityEngine.UIElements.VisualElement <Init>b__1();
                }
            }
        }

        class ColumnLayout
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_StretchableColumns;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_FixedColumns;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_RelativeWidthColumns;
            /*0x28*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_MixedWidthColumns;
            /*0x30*/ UnityEngine.UIElements.Columns m_Columns;
            /*0x38*/ float m_ColumnsWidth;
            /*0x3c*/ bool m_ColumnsWidthDirty;
            /*0x40*/ float m_MaxColumnsWidth;
            /*0x44*/ float m_MinColumnsWidth;
            /*0x48*/ bool m_IsDirty;
            /*0x4c*/ float m_PreviousWidth;
            /*0x50*/ float m_LayoutWidth;
            /*0x54*/ bool m_DragResizeInPreviewMode;
            /*0x55*/ bool m_DragResizing;
            /*0x58*/ float m_DragStartPos;
            /*0x5c*/ float m_DragLastPos;
            /*0x60*/ float m_DragInitialColumnWidth;
            /*0x68*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_DragStretchableColumns;
            /*0x70*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_DragRelativeColumns;
            /*0x78*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_DragFixedColumns;
            /*0x80*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.Column, float> m_PreviewDesiredWidths;
            /*0x88*/ System.Action layoutRequested;

            static /*0x176b4c0*/ bool IsClamped(float value, float min, float max);
            /*0x176dc80*/ ColumnLayout(UnityEngine.UIElements.Columns columns);
            /*0x997630*/ UnityEngine.UIElements.Columns get_columns();
            /*0x176e170*/ float get_columnsWidth();
            /*0x16a1c30*/ float get_layoutWidth();
            /*0x129f7a0*/ float get_minColumnsWidth();
            /*0xcf6cb0*/ float get_maxColumnsWidth();
            /*0x176e3d0*/ bool get_hasStretchableColumns();
            /*0x176e370*/ bool get_hasRelativeWidthColumns();
            /*0x176e0c0*/ void add_layoutRequested(System.Action value);
            /*0x176e420*/ void remove_layoutRequested(System.Action value);
            /*0x17693f0*/ void Dirty();
            /*0x176b4d0*/ void OnColumnAdded(UnityEngine.UIElements.Column column, int index);
            /*0x176b640*/ void OnColumnRemoved(UnityEngine.UIElements.Column column);
            /*0x17693f0*/ void OnColumnReordered(UnityEngine.UIElements.Column column, int from, int to);
            /*0x176caf0*/ bool RequiresLayoutUpdate(UnityEngine.UIElements.ColumnDataType type);
            /*0x176b5e0*/ void OnColumnChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type);
            /*0x176b750*/ void OnColumnResized(UnityEngine.UIElements.Column column);
            /*0x1769ae0*/ void DoLayout(float width);
            /*0x176d510*/ void StretchResizeColumns(System.Collections.Generic.List<UnityEngine.UIElements.Column> stretchableColumns, System.Collections.Generic.List<UnityEngine.UIElements.Column> fixedColumns, System.Collections.Generic.List<UnityEngine.UIElements.Column> relativeWidthColumns, ref float delta, bool resizeToFit, bool dragResize);
            /*0x17697d0*/ void DistributeOverflow(System.Collections.Generic.List<UnityEngine.UIElements.Column> stretchableColumns, System.Collections.Generic.List<UnityEngine.UIElements.Column> fixedColumns, System.Collections.Generic.List<UnityEngine.UIElements.Column> relativeWidthColumns, ref float delta, bool resizeToFit, bool dragResize);
            /*0x1769430*/ void DistributeExcess(System.Collections.Generic.List<UnityEngine.UIElements.Column> stretchableColumns, System.Collections.Generic.List<UnityEngine.UIElements.Column> fixedColumns, System.Collections.Generic.List<UnityEngine.UIElements.Column> relativeWidthColumns, ref float delta, bool resizeToFit, bool dragResize);
            /*0x176bbe0*/ float RecomputeToMaxWidthProportionally(System.Collections.Generic.List<UnityEngine.UIElements.Column> columns, float distributedDelta, bool setDesiredWidthOnly);
            /*0x176c3a0*/ float RecomputeToMinWidthProportionally(System.Collections.Generic.List<UnityEngine.UIElements.Column> columns, float distributedDelta, bool setDesiredWidthOnly);
            /*0x176ba80*/ float RecomputeToDesiredWidth(System.Collections.Generic.List<UnityEngine.UIElements.Column> columns, float distributedDelta, bool setDesiredWidthOnly, bool distributeOverflow);
            /*0x176b760*/ float RecomputeToDesiredWidth(UnityEngine.UIElements.Column column, float distributedDelta, bool setDesiredWidthOnly, bool distributeOverflow);
            /*0x176c870*/ float RecomputeToMinWidth(System.Collections.Generic.List<UnityEngine.UIElements.Column> columns, float distributedDelta, bool setDesiredWidthOnly);
            /*0x176c100*/ float RecomputeToMaxWidth(System.Collections.Generic.List<UnityEngine.UIElements.Column> columns, float distributedDelta, bool setDesiredWidthOnly);
            /*0x176cc90*/ void ResizeToFit(float width);
            /*0x176cb10*/ void ResizeColumn(UnityEngine.UIElements.Column column, float width, bool setDesiredWidthOnly);
            /*0x1769040*/ void BeginDragResize(UnityEngine.UIElements.Column column, float pos, bool previewMode);
            /*0x176b2d0*/ float GetDesiredPosition(UnityEngine.UIElements.Column column);
            /*0x176b420*/ float GetDesiredWidth(UnityEngine.UIElements.Column c);
            /*0x176ab80*/ void DragResize(UnityEngine.UIElements.Column column, float pos);
            /*0x176b080*/ void EndDragResize(UnityEngine.UIElements.Column column, bool cancelled);
            /*0x176d6e0*/ void UpdateCache();
            /*0x176da30*/ void UpdateMinAndMaxColumnsWidth();
            /*0x1769330*/ void ClearCache();
            /*0x176d5e0*/ int <DoLayout>b__49_0(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2);
            /*0x176d5e0*/ int <DoLayout>b__49_1(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2);
            /*0x176d5e0*/ int <RecomputeToMaxWidthProportionally>b__53_0(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2);
            /*0x176d660*/ int <RecomputeToMinWidthProportionally>b__54_0(UnityEngine.UIElements.Column c1, UnityEngine.UIElements.Column c2);

            class <>c__DisplayClass53_0
            {
                /*0x10*/ float totalColumnWidth;
                /*0x18*/ UnityEngine.UIElements.ColumnLayout <>4__this;

                /*0x32f970*/ <>c__DisplayClass53_0();
                /*0x177f630*/ void <RecomputeToMaxWidthProportionally>b__1(UnityEngine.UIElements.Column c);
            }

            class <>c__DisplayClass54_0
            {
                /*0x10*/ float totalColumnsWidth;
                /*0x18*/ UnityEngine.UIElements.ColumnLayout <>4__this;

                /*0x32f970*/ <>c__DisplayClass54_0();
                /*0x177f630*/ void <RecomputeToMinWidthProportionally>b__1(UnityEngine.UIElements.Column c);
            }
        }

        enum ColumnsDataType
        {
            PrimaryColumn = 0,
            StretchMode = 1,
            Reorderable = 2,
            Resizable = 3,
            ResizePreview = 4,
        }

        class Columns : System.Collections.Generic.ICollection<UnityEngine.UIElements.Column>, System.Collections.Generic.IEnumerable<UnityEngine.UIElements.Column>, System.Collections.IEnumerable
        {
            /*0x10*/ System.Collections.Generic.IList<UnityEngine.UIElements.Column> m_Columns;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_DisplayColumns;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.Column> m_VisibleColumns;
            /*0x28*/ bool m_VisibleColumnsDirty;
            /*0x2c*/ UnityEngine.UIElements.Columns.StretchMode m_StretchMode;
            /*0x30*/ bool m_Reorderable;
            /*0x31*/ bool m_Resizable;
            /*0x32*/ bool m_ResizePreview;
            /*0x38*/ string m_PrimaryColumnName;
            /*0x40*/ System.Action<UnityEngine.UIElements.ColumnsDataType> changed;
            /*0x48*/ System.Action<UnityEngine.UIElements.Column, int> columnAdded;
            /*0x50*/ System.Action<UnityEngine.UIElements.Column> columnRemoved;
            /*0x58*/ System.Action<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> columnChanged;
            /*0x60*/ System.Action<UnityEngine.UIElements.Column> columnResized;
            /*0x68*/ System.Action<UnityEngine.UIElements.Column, int, int> columnReordered;

            /*0x17700e0*/ Columns();
            /*0x995140*/ string get_primaryColumnName();
            /*0x1770c80*/ void set_primaryColumnName(string value);
            /*0x995050*/ bool get_reorderable();
            /*0x1770ce0*/ void set_reorderable(bool value);
            /*0x14f46c0*/ bool get_resizable();
            /*0x1770d10*/ void set_resizable(bool value);
            /*0x1770830*/ bool get_resizePreview();
            /*0x1770d40*/ void set_resizePreview(bool value);
            /*0x1770810*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.Column> get_displayList();
            /*0x1770840*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.Column> get_visibleList();
            /*0x1770170*/ void add_changed(System.Action<UnityEngine.UIElements.ColumnsDataType> value);
            /*0x1770860*/ void remove_changed(System.Action<UnityEngine.UIElements.ColumnsDataType> value);
            /*0xbe6c70*/ UnityEngine.UIElements.Columns.StretchMode get_stretchMode();
            /*0x1770d70*/ void set_stretchMode(UnityEngine.UIElements.Columns.StretchMode value);
            /*0x1770220*/ void add_columnAdded(System.Action<UnityEngine.UIElements.Column, int> value);
            /*0x1770910*/ void remove_columnAdded(System.Action<UnityEngine.UIElements.Column, int> value);
            /*0x1770380*/ void add_columnRemoved(System.Action<UnityEngine.UIElements.Column> value);
            /*0x1770a70*/ void remove_columnRemoved(System.Action<UnityEngine.UIElements.Column> value);
            /*0x17702d0*/ void add_columnChanged(System.Action<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value);
            /*0x17709c0*/ void remove_columnChanged(System.Action<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value);
            /*0x17704e0*/ void add_columnResized(System.Action<UnityEngine.UIElements.Column> value);
            /*0x1770bd0*/ void remove_columnResized(System.Action<UnityEngine.UIElements.Column> value);
            /*0x1770430*/ void add_columnReordered(System.Action<UnityEngine.UIElements.Column, int, int> value);
            /*0x1770b20*/ void remove_columnReordered(System.Action<UnityEngine.UIElements.Column, int, int> value);
            /*0x176fa90*/ bool IsPrimary(UnityEngine.UIElements.Column column);
            /*0x176f640*/ System.Collections.Generic.IEnumerator<UnityEngine.UIElements.Column> GetEnumerator();
            /*0x176f640*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            /*0x176f0a0*/ void Add(UnityEngine.UIElements.Column item);
            /*0x176f110*/ void Clear();
            /*0x176f4b0*/ bool Contains(UnityEngine.UIElements.Column item);
            /*0x176f330*/ bool Contains(string name);
            /*0x176f510*/ void CopyTo(UnityEngine.UIElements.Column[] array, int arrayIndex);
            /*0x176fbd0*/ bool Remove(UnityEngine.UIElements.Column column);
            /*0x176fb10*/ void OnColumnChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type);
            /*0x176fbb0*/ void OnColumnResized(UnityEngine.UIElements.Column column);
            /*0x1770590*/ int get_Count();
            /*0x17705e0*/ bool get_IsReadOnly();
            /*0x176f690*/ int IndexOf(UnityEngine.UIElements.Column column);
            /*0x176f7e0*/ void Insert(int index, UnityEngine.UIElements.Column column);
            /*0x1770630*/ UnityEngine.UIElements.Column get_Item(int index);
            /*0x1770690*/ UnityEngine.UIElements.Column get_Item(string name);
            /*0x176fdb0*/ void ReorderDisplay(int from, int to);
            /*0x176f760*/ void InitOrderColumns();
            /*0x176f5e0*/ void DirtyVisibleColumns();
            /*0x176fef0*/ void UpdateVisibleColumns();
            /*0x16bd1b0*/ void NotifyChange(UnityEngine.UIElements.ColumnsDataType type);

            enum StretchMode
            {
                Grow = 0,
                GrowAndFill = 1,
            }

            class UxmlObjectFactory<T> : UnityEngine.UIElements.UxmlObjectFactory<T, UnityEngine.UIElements.Columns.UxmlObjectTraits<T>>
            {
                /*0x180fc0*/ UxmlObjectFactory();
            }

            class UxmlObjectTraits<T> : UnityEngine.UIElements.UxmlObjectTraits<T>
            {
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_PrimaryColumnName;
                /*0x0*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.Columns.StretchMode> m_StretchMode;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Reorderable;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Resizable;
                /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ResizePreview;
                /*0x0*/ UnityEngine.UIElements.UxmlObjectListAttributeDescription<UnityEngine.UIElements.Column> m_Columns;

                /*0x180fc0*/ UxmlObjectTraits();
                void Init(ref T obj, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.Columns.<> <>9;
                static /*0x8*/ System.Predicate<UnityEngine.UIElements.Column> <>9__76_0;

                static /*0x177f700*/ <>c();
                /*0x32f970*/ <>c();
                /*0x177f610*/ bool <UpdateVisibleColumns>b__76_0(UnityEngine.UIElements.Column c);
            }
        }

        class MultiColumnController : System.IDisposable
        {
            static /*0x0*/ UnityEngine.PropertyName k_BoundColumnVePropertyName;
            static /*0x4*/ UnityEngine.PropertyName bindableElementPropertyName;
            static /*0x8*/ string baseUssClassName;
            static /*0x10*/ string k_HeaderContainerViewDataKey;
            static /*0x18*/ string headerContainerUssClassName;
            static /*0x20*/ string rowContainerUssClassName;
            static /*0x28*/ string cellUssClassName;
            static /*0x30*/ string cellLabelUssClassName;
            static /*0x38*/ string k_HeaderViewDataKey;
            /*0x10*/ System.Action columnSortingChanged;
            /*0x18*/ System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> headerContextMenuPopulateEvent;
            /*0x20*/ UnityEngine.UIElements.BaseVerticalCollectionView m_View;
            /*0x28*/ UnityEngine.UIElements.VisualElement m_HeaderContainer;
            /*0x30*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader m_MultiColumnHeader;

            static /*0x177a2c0*/ MultiColumnController();
            static /*0x2a5510*/ void BindCellItem<T>(UnityEngine.UIElements.VisualElement ve, int rowIndex, UnityEngine.UIElements.Column column, T item);
            static /*0x1779db0*/ void UnbindCellItem(UnityEngine.UIElements.VisualElement ve, int rowIndex, UnityEngine.UIElements.Column column);
            static /*0x17784c0*/ UnityEngine.UIElements.VisualElement DefaultMakeCellItem();
            static /*0x2a5510*/ void DefaultBindCellItem<T>(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Column column, T item);
            /*0x177a570*/ MultiColumnController(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> sortedColumns);
            /*0x177aaa0*/ void add_columnSortingChanged(System.Action value);
            /*0x177abf0*/ void remove_columnSortingChanged(System.Action value);
            /*0x177ab40*/ void add_headerContextMenuPopulateEvent(System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value);
            /*0x177ac90*/ void remove_headerContextMenuPopulateEvent(System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value);
            /*0x997630*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader get_header();
            /*0x1779040*/ UnityEngine.UIElements.VisualElement MakeItem();
            /*0x2a5510*/ void BindItem<T>(UnityEngine.UIElements.VisualElement element, int index, T item);
            /*0x1779df0*/ void UnbindItem(UnityEngine.UIElements.VisualElement element, int index);
            /*0x1778550*/ void DestroyItem(UnityEngine.UIElements.VisualElement element);
            /*0x1779a90*/ void PrepareView(UnityEngine.UIElements.BaseVerticalCollectionView collectionView);
            /*0x1778890*/ void Dispose();
            /*0x17797d0*/ void OnHorizontalScrollerValueChanged(float v);
            /*0x17797f0*/ void OnViewportGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x1779410*/ void OnColumnContainerGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x177a100*/ void UpdateContentContainer(UnityEngine.UIElements.BaseVerticalCollectionView collectionView);
            /*0x1779750*/ void OnColumnSortingChanged();
            /*0x17797b0*/ void OnContextMenuPopulateEvent(UnityEngine.UIElements.ContextualMenuPopulateEvent evt, UnityEngine.UIElements.Column column);
            /*0x1779460*/ void OnColumnResized(int index, float width);
            /*0x17793b0*/ void OnColumnAdded(UnityEngine.UIElements.Column column, int index);
            /*0x17793b0*/ void OnColumnRemoved(UnityEngine.UIElements.Column column);
            /*0x1779420*/ void OnColumnReordered(UnityEngine.UIElements.Column column, int from, int to);
            /*0x1779770*/ void OnColumnsChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type);
            /*0x17793d0*/ void OnColumnChanged(UnityEngine.UIElements.ColumnsDataType type);
            /*0x17793b0*/ void OnViewDataRestored();
        }

        class MultiColumnListView : UnityEngine.UIElements.BaseListView
        {
            /*0x550*/ UnityEngine.UIElements.Columns m_Columns;
            /*0x558*/ bool m_SortingEnabled;
            /*0x560*/ UnityEngine.UIElements.SortColumnDescriptions m_SortColumnDescriptions;
            /*0x568*/ System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> m_SortedColumns;
            /*0x570*/ System.Action columnSortingChanged;
            /*0x578*/ System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> headerContextMenuPopulateEvent;

            /*0x177b240*/ MultiColumnListView();
            /*0x177b070*/ MultiColumnListView(UnityEngine.UIElements.Columns columns);
            /*0x177b2a0*/ UnityEngine.UIElements.MultiColumnListViewController get_viewController();
            /*0x1774c90*/ UnityEngine.UIElements.Columns get_columns();
            /*0x177b320*/ void set_columns(UnityEngine.UIElements.Columns value);
            /*0x1774ca0*/ UnityEngine.UIElements.SortColumnDescriptions get_sortColumnDescriptions();
            /*0x177b3c0*/ void set_sortColumnDescriptions(UnityEngine.UIElements.SortColumnDescriptions value);
            /*0x177b470*/ void set_sortingEnabled(bool value);
            /*0x177ad40*/ UnityEngine.UIElements.CollectionViewController CreateViewController();
            /*0x177ae50*/ void SetViewController(UnityEngine.UIElements.CollectionViewController controller);
            /*0x177add0*/ void CreateVirtualizationController();
            /*0x177ae10*/ void RaiseColumnSortingChanged();
            /*0x177ae30*/ void RaiseHeaderContextMenuPopulate(UnityEngine.UIElements.ContextualMenuPopulateEvent evt, UnityEngine.UIElements.Column column);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.MultiColumnListView, UnityEngine.UIElements.MultiColumnListView.UxmlTraits>
            {
                /*0x177f870*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseListView.UxmlTraits
            {
                /*0xd8*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_SortingEnabled;
                /*0xe0*/ UnityEngine.UIElements.UxmlObjectAttributeDescription<UnityEngine.UIElements.Columns> m_Columns;
                /*0xe8*/ UnityEngine.UIElements.UxmlObjectAttributeDescription<UnityEngine.UIElements.SortColumnDescriptions> m_SortColumnDescriptions;

                /*0x1780a30*/ UxmlTraits();
                /*0x177fc90*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class MultiColumnTreeView : UnityEngine.UIElements.BaseTreeView
        {
            /*0x4d0*/ UnityEngine.UIElements.Columns m_Columns;
            /*0x4d8*/ bool m_SortingEnabled;
            /*0x4e0*/ UnityEngine.UIElements.SortColumnDescriptions m_SortColumnDescriptions;
            /*0x4e8*/ System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> m_SortedColumns;
            /*0x4f0*/ System.Action columnSortingChanged;
            /*0x4f8*/ System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> headerContextMenuPopulateEvent;

            /*0x177b9e0*/ MultiColumnTreeView();
            /*0x177b810*/ MultiColumnTreeView(UnityEngine.UIElements.Columns columns);
            /*0x177ba60*/ UnityEngine.UIElements.MultiColumnTreeViewController get_viewController();
            /*0x177ba40*/ UnityEngine.UIElements.Columns get_columns();
            /*0x177bae0*/ void set_columns(UnityEngine.UIElements.Columns value);
            /*0x177ba50*/ UnityEngine.UIElements.SortColumnDescriptions get_sortColumnDescriptions();
            /*0x177bb80*/ void set_sortColumnDescriptions(UnityEngine.UIElements.SortColumnDescriptions value);
            /*0x177bc30*/ void set_sortingEnabled(bool value);
            /*0x177b4d0*/ UnityEngine.UIElements.CollectionViewController CreateViewController();
            /*0x177b5f0*/ void SetViewController(UnityEngine.UIElements.CollectionViewController controller);
            /*0x177b570*/ void CreateVirtualizationController();
            /*0x177b5b0*/ void RaiseColumnSortingChanged();
            /*0x177b5d0*/ void RaiseHeaderContextMenuPopulate(UnityEngine.UIElements.ContextualMenuPopulateEvent evt, UnityEngine.UIElements.Column column);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.MultiColumnTreeView, UnityEngine.UIElements.MultiColumnTreeView.UxmlTraits>
            {
                /*0x177f970*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseTreeView.UxmlTraits
            {
                /*0xb8*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_SortingEnabled;
                /*0xc0*/ UnityEngine.UIElements.UxmlObjectAttributeDescription<UnityEngine.UIElements.Columns> m_Columns;
                /*0xc8*/ UnityEngine.UIElements.UxmlObjectAttributeDescription<UnityEngine.UIElements.SortColumnDescriptions> m_SortColumnDescriptions;

                /*0x1780b70*/ UxmlTraits();
                /*0x1780190*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        enum SortDirection
        {
            Ascending = 0,
            Descending = 1,
        }

        class SortColumnDescription
        {
            /*0x10*/ int m_ColumnIndex;
            /*0x18*/ string m_ColumnName;
            /*0x20*/ UnityEngine.UIElements.SortDirection m_SortDirection;
            /*0x28*/ UnityEngine.UIElements.Column <column>k__BackingField;
            /*0x30*/ System.Action<UnityEngine.UIElements.SortColumnDescription> changed;

            /*0x177c910*/ SortColumnDescription();
            /*0x177c920*/ SortColumnDescription(int columnIndex, UnityEngine.UIElements.SortDirection direction);
            /*0x177c870*/ SortColumnDescription(string columnName, UnityEngine.UIElements.SortDirection direction);
            /*0x32f410*/ string get_columnName();
            /*0x177cb30*/ void set_columnName(string value);
            /*0x417e30*/ int get_columnIndex();
            /*0x177cb00*/ void set_columnIndex(int value);
            /*0x79a150*/ UnityEngine.UIElements.Column get_column();
            /*0x98b030*/ void set_column(UnityEngine.UIElements.Column value);
            /*0x3e3af0*/ UnityEngine.UIElements.SortDirection get_direction();
            /*0x177cb90*/ void set_direction(UnityEngine.UIElements.SortDirection value);
            /*0x177c9a0*/ void add_changed(System.Action<UnityEngine.UIElements.SortColumnDescription> value);
            /*0x177ca50*/ void remove_changed(System.Action<UnityEngine.UIElements.SortColumnDescription> value);

            class UxmlObjectFactory<T> : UnityEngine.UIElements.UxmlObjectFactory<T, UnityEngine.UIElements.SortColumnDescription.UxmlObjectTraits<T>>
            {
                /*0x180fc0*/ UxmlObjectFactory();
            }

            class UxmlObjectTraits<T> : UnityEngine.UIElements.UxmlObjectTraits<T>
            {
                /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_ColumnName;
                /*0x0*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_ColumnIndex;
                /*0x0*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.SortDirection> m_SortDescription;

                /*0x180fc0*/ UxmlObjectTraits();
                void Init(ref T obj, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class SortColumnDescriptions : System.Collections.Generic.ICollection<UnityEngine.UIElements.SortColumnDescription>, System.Collections.Generic.IEnumerable<UnityEngine.UIElements.SortColumnDescription>, System.Collections.IEnumerable
        {
            /*0x10*/ System.Collections.Generic.IList<UnityEngine.UIElements.SortColumnDescription> m_Descriptions;
            /*0x18*/ System.Action changed;

            /*0x177d3d0*/ SortColumnDescriptions();
            /*0x177d450*/ void add_changed(System.Action value);
            /*0x177d590*/ void remove_changed(System.Action value);
            /*0x177cef0*/ System.Collections.Generic.IEnumerator<UnityEngine.UIElements.SortColumnDescription> GetEnumerator();
            /*0x177cef0*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            /*0x177cbc0*/ void Add(UnityEngine.UIElements.SortColumnDescription item);
            /*0x177cc30*/ void Clear();
            /*0x177cdc0*/ bool Contains(UnityEngine.UIElements.SortColumnDescription item);
            /*0x177ce20*/ void CopyTo(UnityEngine.UIElements.SortColumnDescription[] array, int arrayIndex);
            /*0x177d200*/ bool Remove(UnityEngine.UIElements.SortColumnDescription desc);
            /*0x1119540*/ void OnDescriptionChanged(UnityEngine.UIElements.SortColumnDescription desc);
            /*0x177d4f0*/ int get_Count();
            /*0x177d540*/ bool get_IsReadOnly();
            /*0x177cf40*/ void Insert(int index, UnityEngine.UIElements.SortColumnDescription desc);

            class UxmlObjectFactory<T> : UnityEngine.UIElements.UxmlObjectFactory<T, UnityEngine.UIElements.SortColumnDescriptions.UxmlObjectTraits<T>>
            {
                /*0x180fc0*/ UxmlObjectFactory();
            }

            class UxmlObjectTraits<T> : UnityEngine.UIElements.UxmlObjectTraits<T>
            {
                /*0x0*/ UnityEngine.UIElements.UxmlObjectListAttributeDescription<UnityEngine.UIElements.SortColumnDescription> m_SortColumnDescriptions;

                /*0x180fc0*/ UxmlObjectTraits();
                void Init(ref T obj, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class PopupField<T> : UnityEngine.UIElements.BasePopupField<T, T>
        {
            static /*0x0*/ string ussClassName;
            static /*0x0*/ string labelUssClassName;
            static /*0x0*/ string inputUssClassName;
            /*0x0*/ int m_Index;

            static /*0x180ff0*/ PopupField();
            /*0x17aec0*/ PopupField(string label);
            /*0x1803b0*/ string GetValueToDisplay();
            /*0x2a5510*/ string GetListItemToDisplay(T value);
            /*0x2a5510*/ T get_value();
            /*0x2a5510*/ void set_value(T value);
            /*0x2a5510*/ void SetValueWithoutNotify(T newValue);
            /*0x17aa40*/ void set_index(int value);
            /*0x17aec0*/ void AddMenuItems(UnityEngine.UIElements.IGenericMenu menu);
            /*0x2a5510*/ void ChangeValueFromMenu(T menuItem);

            class <>c__DisplayClass26_0<T>
            {
                /*0x0*/ T item;
                /*0x0*/ UnityEngine.UIElements.PopupField<T> <>4__this;

                /*0x180fc0*/ <>c__DisplayClass26_0();
                /*0x180fc0*/ void <AddMenuItems>b__0();
            }
        }

        class PopupWindow : UnityEngine.UIElements.TextElement
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string contentUssClassName;
            /*0x4a0*/ UnityEngine.UIElements.VisualElement m_ContentContainer;

            static /*0x177bc90*/ PopupWindow();
            /*0x177bd50*/ PopupWindow();
            /*0x16dc3e0*/ UnityEngine.UIElements.VisualElement get_contentContainer();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.PopupWindow, UnityEngine.UIElements.PopupWindow.UxmlTraits>
            {
                /*0x177f770*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextElement.UxmlTraits
            {
                /*0x1780960*/ UxmlTraits();
            }
        }

        class AbstractProgressBar : UnityEngine.UIElements.BindableElement, UnityEngine.UIElements.INotifyValueChanged<float>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string containerUssClassName;
            static /*0x10*/ string titleUssClassName;
            static /*0x18*/ string titleContainerUssClassName;
            static /*0x20*/ string progressUssClassName;
            static /*0x28*/ string backgroundUssClassName;
            /*0x3d8*/ UnityEngine.UIElements.VisualElement m_Background;
            /*0x3e0*/ UnityEngine.UIElements.VisualElement m_Progress;
            /*0x3e8*/ UnityEngine.UIElements.Label m_Title;
            /*0x3f0*/ float m_LowValue;
            /*0x3f4*/ float m_HighValue;
            /*0x3f8*/ float m_Value;

            static /*0x1768780*/ AbstractProgressBar();
            /*0x17689a0*/ AbstractProgressBar();
            /*0x1768d30*/ void set_title(string value);
            /*0x1768ce0*/ float get_lowValue();
            /*0x1768d10*/ void set_lowValue(float value);
            /*0x1768cd0*/ float get_highValue();
            /*0x1768cf0*/ void set_highValue(float value);
            /*0x1768520*/ void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e);
            /*0xcc1a20*/ float get_value();
            /*0x1768d60*/ void set_value(float value);
            /*0x1768740*/ void SetValueWithoutNotify(float newValue);
            /*0x1768550*/ void SetProgress(float p);
            /*0x1768470*/ float CalculateProgressWidth(float width);

            class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
            {
                /*0x78*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_LowValue;
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_HighValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_Value;
                /*0x90*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Title;

                /*0x1780ef0*/ UxmlTraits();
                /*0x1780490*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class ProgressBar : UnityEngine.UIElements.AbstractProgressBar
        {
            /*0x177be90*/ ProgressBar();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.ProgressBar, UnityEngine.UIElements.AbstractProgressBar.UxmlTraits>
            {
                /*0x177f930*/ UxmlFactory();
            }
        }

        class RadioButton : UnityEngine.UIElements.BaseBoolField, UnityEngine.UIElements.IGroupBoxOption
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;
            static /*0x18*/ string checkmarkBackgroundUssClassName;
            static /*0x20*/ string checkmarkUssClassName;
            static /*0x28*/ string textUssClassName;
            /*0x468*/ UnityEngine.UIElements.VisualElement m_CheckmarkBackground;

            static /*0x177c270*/ RadioButton();
            /*0x177c490*/ RadioButton();
            /*0x177c4a0*/ RadioButton(string label);
            /*0x177c770*/ bool get_value();
            /*0x177c7b0*/ void set_value(bool value);
            /*0x177bf60*/ void OnOptionAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt);
            /*0x177bfc0*/ void OnOptionDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt);
            /*0x177bee0*/ void InitLabel();
            /*0x177c040*/ void ToggleValue();
            /*0x177c090*/ void UnityEngine.UIElements.IGroupBoxOption.SetSelected(bool selected);
            /*0x177c020*/ void SetValueWithoutNotify(bool newValue);
            /*0x177c0b0*/ void UpdateCheckmark();
            /*0x177c1d0*/ void UpdateMixedValueContent();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.RadioButton, UnityEngine.UIElements.RadioButton.UxmlTraits>
            {
                /*0x17969e0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseFieldTraits<bool, UnityEngine.UIElements.UxmlBoolAttributeDescription>
            {
                /*0x88*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Text;

                /*0x1798630*/ UxmlTraits();
                /*0x1797700*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class RadioButtonGroup : UnityEngine.UIElements.BaseField<int>, UnityEngine.UIElements.IGroupBox
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string containerUssClassName;
            /*0x448*/ System.Collections.Generic.List<UnityEngine.UIElements.RadioButton> m_RadioButtons;
            /*0x450*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.ChangeEvent<bool>> m_RadioButtonValueChangedCallback;
            /*0x458*/ UnityEngine.UIElements.VisualElement m_RadioButtonContainer;

            static /*0x1785330*/ RadioButtonGroup();
            /*0x1785670*/ RadioButtonGroup();
            /*0x17853f0*/ RadioButtonGroup(string label, System.Collections.Generic.List<string> radioButtonChoices);
            /*0x17856a0*/ void set_choices(System.Collections.Generic.IEnumerable<string> value);
            /*0x1785680*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x1784cb0*/ void RadioButtonValueChangedCallback(UnityEngine.UIElements.ChangeEvent<bool> evt);
            /*0x1784dc0*/ void SetValueWithoutNotify(int newValue);
            /*0x1785150*/ void UpdateRadioButtons();
            /*0x1784e10*/ void UnityEngine.UIElements.IGroupBox.OnOptionAdded(UnityEngine.UIElements.IGroupBoxOption option);
            /*0x1784fd0*/ void UnityEngine.UIElements.IGroupBox.OnOptionRemoved(UnityEngine.UIElements.IGroupBoxOption option);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.RadioButtonGroup, UnityEngine.UIElements.RadioButtonGroup.UxmlTraits>
            {
                /*0x1796860*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseFieldTraits<int, UnityEngine.UIElements.UxmlIntAttributeDescription>
            {
                /*0x88*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Choices;

                /*0x1798bc0*/ UxmlTraits();
                /*0x1797ee0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class RepeatButton : UnityEngine.UIElements.TextElement
        {
            static /*0x0*/ string ussClassName;
            /*0x4a0*/ UnityEngine.UIElements.Clickable m_Clickable;
            /*0x4a8*/ bool m_AcceptClicksIfDisabled;

            static /*0x1785d50*/ RepeatButton();
            /*0x1785e90*/ RepeatButton();
            /*0x1785dc0*/ RepeatButton(System.Action clickEvent, long delay, long interval);
            /*0x1785f20*/ void set_acceptClicksIfDisabled(bool value);
            /*0x1785c90*/ void SetAction(System.Action clickEvent, long delay, long interval);
            /*0x1785c60*/ void AddAction(System.Action clickEvent);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.RepeatButton, UnityEngine.UIElements.RepeatButton.UxmlTraits>
            {
                /*0x17969a0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextElement.UxmlTraits
            {
                /*0x98*/ UnityEngine.UIElements.UxmlLongAttributeDescription m_Delay;
                /*0xa0*/ UnityEngine.UIElements.UxmlLongAttributeDescription m_Interval;

                /*0x17991e0*/ UxmlTraits();
                /*0x1796e90*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class Scroller : UnityEngine.UIElements.VisualElement
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string horizontalVariantUssClassName;
            static /*0x10*/ string verticalVariantUssClassName;
            static /*0x18*/ string sliderUssClassName;
            static /*0x20*/ string lowButtonUssClassName;
            static /*0x28*/ string highButtonUssClassName;
            /*0x3c8*/ System.Action<float> valueChanged;
            /*0x3d0*/ UnityEngine.UIElements.Slider <slider>k__BackingField;
            /*0x3d8*/ UnityEngine.UIElements.RepeatButton <lowButton>k__BackingField;
            /*0x3e0*/ UnityEngine.UIElements.RepeatButton <highButton>k__BackingField;

            static /*0x178da30*/ Scroller();
            /*0x178dc50*/ Scroller();
            /*0x178dc80*/ Scroller(float lowValue, float highValue, System.Action<float> valueChanged, UnityEngine.UIElements.SliderDirection direction);
            /*0x178e0c0*/ void add_valueChanged(System.Action<float> value);
            /*0x178e250*/ void remove_valueChanged(System.Action<float> value);
            /*0x175b090*/ UnityEngine.UIElements.Slider get_slider();
            /*0x16c3ef0*/ void set_slider(UnityEngine.UIElements.Slider value);
            /*0x16e01d0*/ UnityEngine.UIElements.RepeatButton get_lowButton();
            /*0x16f3c30*/ void set_lowButton(UnityEngine.UIElements.RepeatButton value);
            /*0x16e01c0*/ UnityEngine.UIElements.RepeatButton get_highButton();
            /*0x178e4e0*/ void set_highButton(UnityEngine.UIElements.RepeatButton value);
            /*0x178e220*/ float get_value();
            /*0x178e5c0*/ void set_value(float value);
            /*0x178e1d0*/ float get_lowValue();
            /*0x178e560*/ void set_lowValue(float value);
            /*0x178e180*/ float get_highValue();
            /*0x178e500*/ void set_highValue(float value);
            /*0x178e310*/ void set_direction(UnityEngine.UIElements.SliderDirection value);
            /*0x178d420*/ void Adjust(float factor);
            /*0x178d4a0*/ void OnSliderValueChange(UnityEngine.UIElements.ChangeEvent<float> evt);
            /*0x178d900*/ void ScrollPageUp();
            /*0x178d6a0*/ void ScrollPageDown();
            /*0x178d7c0*/ void ScrollPageUp(float factor);
            /*0x178d560*/ void ScrollPageDown(float factor);

            class ScrollerSlider : UnityEngine.UIElements.Slider
            {
                /*0x178d380*/ ScrollerSlider(float start, float end, UnityEngine.UIElements.SliderDirection direction, float pageSize);
                /*0x178d350*/ float SliderNormalizeValue(float currentValue, float lowerValue, float higherValue);
            }

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Scroller, UnityEngine.UIElements.Scroller.UxmlTraits>
            {
                /*0x1796a20*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
            {
                /*0x70*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_LowValue;
                /*0x78*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_HighValue;
                /*0x80*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.SliderDirection> m_Direction;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_Value;

                /*0x1798c70*/ UxmlTraits();
                /*0x17974b0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        enum ScrollViewMode
        {
            Vertical = 0,
            Horizontal = 1,
            VerticalAndHorizontal = 2,
        }

        enum ScrollerVisibility
        {
            Auto = 0,
            AlwaysVisible = 1,
            Hidden = 2,
        }

        class ScrollView : UnityEngine.UIElements.VisualElement
        {
            static /*0x0*/ float k_DefaultScrollDecelerationRate;
            static /*0x4*/ float k_DefaultElasticity;
            static /*0x8*/ long k_DefaultElasticAnimationInterval;
            static /*0x10*/ string ussClassName;
            static /*0x18*/ string viewportUssClassName;
            static /*0x20*/ string horizontalVariantViewportUssClassName;
            static /*0x28*/ string verticalVariantViewportUssClassName;
            static /*0x30*/ string verticalHorizontalVariantViewportUssClassName;
            static /*0x38*/ string contentAndVerticalScrollUssClassName;
            static /*0x40*/ string contentUssClassName;
            static /*0x48*/ string horizontalVariantContentUssClassName;
            static /*0x50*/ string verticalVariantContentUssClassName;
            static /*0x58*/ string verticalHorizontalVariantContentUssClassName;
            static /*0x60*/ string hScrollerUssClassName;
            static /*0x68*/ string vScrollerUssClassName;
            static /*0x70*/ string horizontalVariantUssClassName;
            static /*0x78*/ string verticalVariantUssClassName;
            static /*0x80*/ string verticalHorizontalVariantUssClassName;
            static /*0x88*/ string scrollVariantUssClassName;
            /*0x3c8*/ int m_FirstLayoutPass;
            /*0x3cc*/ UnityEngine.UIElements.ScrollerVisibility m_HorizontalScrollerVisibility;
            /*0x3d0*/ UnityEngine.UIElements.ScrollerVisibility m_VerticalScrollerVisibility;
            /*0x3d8*/ UnityEngine.UIElements.VisualElement m_AttachedRootVisualContainer;
            /*0x3e0*/ float m_SingleLineHeight;
            /*0x3e4*/ bool m_MouseWheelScrollSizeIsInline;
            /*0x3e8*/ float m_HorizontalPageSize;
            /*0x3ec*/ float m_VerticalPageSize;
            /*0x3f0*/ float m_MouseWheelScrollSize;
            /*0x3f4*/ float m_ScrollDecelerationRate;
            /*0x3f8*/ float k_ScaledPixelsPerPointMultiplier;
            /*0x3fc*/ float k_TouchScrollInertiaBaseTimeInterval;
            /*0x400*/ float m_Elasticity;
            /*0x404*/ UnityEngine.UIElements.ScrollView.TouchScrollBehavior m_TouchScrollBehavior;
            /*0x408*/ UnityEngine.UIElements.ScrollView.NestedInteractionKind m_NestedInteractionKind;
            /*0x410*/ long m_ElasticAnimationIntervalMs;
            /*0x418*/ UnityEngine.UIElements.VisualElement <contentViewport>k__BackingField;
            /*0x420*/ UnityEngine.UIElements.Scroller <horizontalScroller>k__BackingField;
            /*0x428*/ UnityEngine.UIElements.Scroller <verticalScroller>k__BackingField;
            /*0x430*/ UnityEngine.UIElements.VisualElement m_ContentContainer;
            /*0x438*/ UnityEngine.UIElements.VisualElement m_ContentAndVerticalScrollContainer;
            /*0x440*/ float previousVerticalTouchScrollTimeStamp;
            /*0x444*/ float previousHorizontalTouchScrollTimeStamp;
            /*0x448*/ float elapsedTimeSinceLastVerticalTouchScroll;
            /*0x44c*/ float elapsedTimeSinceLastHorizontalTouchScroll;
            /*0x450*/ UnityEngine.UIElements.ScrollViewMode m_Mode;
            /*0x458*/ UnityEngine.UIElements.IVisualElementScheduledItem m_ScheduledLayoutPassResetItem;
            /*0x460*/ UnityEngine.Vector2 m_StartPosition;
            /*0x468*/ UnityEngine.Vector2 m_PointerStartPosition;
            /*0x470*/ UnityEngine.Vector2 m_Velocity;
            /*0x478*/ UnityEngine.Vector2 m_SpringBackVelocity;
            /*0x480*/ UnityEngine.Vector2 m_LowBounds;
            /*0x488*/ UnityEngine.Vector2 m_HighBounds;
            /*0x490*/ float m_LastVelocityLerpTime;
            /*0x494*/ bool m_StartedMoving;
            /*0x495*/ bool m_TouchPointerMoveAllowed;
            /*0x496*/ bool m_TouchStoppedVelocity;
            /*0x498*/ UnityEngine.UIElements.VisualElement m_CapturedTarget;
            /*0x4a0*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.PointerMoveEvent> m_CapturedTargetPointerMoveCallback;
            /*0x4a8*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.PointerUpEvent> m_CapturedTargetPointerUpCallback;
            /*0x4b0*/ UnityEngine.UIElements.IVisualElementScheduledItem m_PostPointerUpAnimation;

            static /*0x178b4f0*/ ScrollView();
            static /*0x1786970*/ float ComputeElasticOffset(float deltaPointer, float initialScrollOffset, float lowLimit, float hardLowLimit, float highLimit, float hardHighLimit);
            /*0x178c9a0*/ ScrollView();
            /*0x178baa0*/ ScrollView(UnityEngine.UIElements.ScrollViewMode scrollViewMode);
            /*0x178c9f0*/ UnityEngine.UIElements.ScrollerVisibility get_horizontalScrollerVisibility();
            /*0x178ce80*/ void set_horizontalScrollerVisibility(UnityEngine.UIElements.ScrollerVisibility value);
            /*0x178cd30*/ UnityEngine.UIElements.ScrollerVisibility get_verticalScrollerVisibility();
            /*0x178d2a0*/ void set_verticalScrollerVisibility(UnityEngine.UIElements.ScrollerVisibility value);
            /*0x178d190*/ void set_showHorizontal(bool value);
            /*0x178d1b0*/ void set_showVertical(bool value);
            /*0x178cb00*/ bool get_needsHorizontal();
            /*0x178cb50*/ bool get_needsVertical();
            /*0x178ca70*/ bool get_isVerticalScrollDisplayed();
            /*0x178ca00*/ bool get_isHorizontalScrollDisplayed();
            /*0x178cbc0*/ UnityEngine.Vector2 get_scrollOffset();
            /*0x178d000*/ void set_scrollOffset(UnityEngine.Vector2 value);
            /*0x178ce70*/ void set_horizontalPageSize(float value);
            /*0x178d290*/ void set_verticalPageSize(float value);
            /*0x178caf0*/ float get_mouseWheelScrollSize();
            /*0x178cf40*/ void set_mouseWheelScrollSize(float value);
            /*0x178ccb0*/ float get_scrollableWidth();
            /*0x178cc40*/ float get_scrollableHeight();
            /*0x178c9d0*/ bool get_hasInertia();
            /*0x178cbb0*/ float get_scrollDecelerationRate();
            /*0x178cfe0*/ void set_scrollDecelerationRate(float value);
            /*0x178c9c0*/ float get_elasticity();
            /*0x178ce50*/ void set_elasticity(float value);
            /*0x178cd20*/ UnityEngine.UIElements.ScrollView.TouchScrollBehavior get_touchScrollBehavior();
            /*0x178d1d0*/ void set_touchScrollBehavior(UnityEngine.UIElements.ScrollView.TouchScrollBehavior value);
            /*0x178cba0*/ UnityEngine.UIElements.ScrollView.NestedInteractionKind get_nestedInteractionKind();
            /*0x178cfd0*/ void set_nestedInteractionKind(UnityEngine.UIElements.ScrollView.NestedInteractionKind value);
            /*0x178cd40*/ void set_elasticAnimationIntervalMs(long value);
            /*0x1788890*/ void OnHorizontalScrollDragElementChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x1789870*/ void OnVerticalScrollDragElementChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x178ada0*/ void UpdateHorizontalSliderPageSize();
            /*0x178b3b0*/ void UpdateVerticalSliderPageSize();
            /*0x178a7e0*/ void UpdateContentViewTransform();
            /*0x1789de0*/ void ScrollTo(UnityEngine.UIElements.VisualElement child);
            /*0x1787330*/ float GetXDeltaOffset(UnityEngine.UIElements.VisualElement child);
            /*0x1787600*/ float GetYDeltaOffset(UnityEngine.UIElements.VisualElement child);
            /*0x17872c0*/ float GetDeltaDistance(float viewMin, float viewMax, float childBoundaryMin, float childBoundaryMax);
            /*0xcc0680*/ UnityEngine.UIElements.VisualElement get_contentViewport();
            /*0x175b070*/ UnityEngine.UIElements.Scroller get_horizontalScroller();
            /*0x16f27f0*/ UnityEngine.UIElements.Scroller get_verticalScroller();
            /*0x178c9b0*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x178cae0*/ UnityEngine.UIElements.ScrollViewMode get_mode();
            /*0x178cf20*/ void set_mode(UnityEngine.UIElements.ScrollViewMode value);
            /*0x178a0f0*/ void SetScrollViewMode(UnityEngine.UIElements.ScrollViewMode mode);
            /*0x1787c40*/ void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt);
            /*0x17880d0*/ void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt);
            /*0x1788a60*/ void OnPointerCapture(UnityEngine.UIElements.PointerCaptureEvent evt);
            /*0x1788970*/ void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt);
            /*0x1788580*/ void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x1789cc0*/ void ScheduleResetLayoutPass();
            /*0x1789cb0*/ void ResetLayoutPass();
            /*0x1786af0*/ void ComputeInitialSpringBackVelocity();
            /*0x178a550*/ void SpringBack();
            /*0x17860e0*/ void ApplyScrollInertia();
            /*0x17898e0*/ void PostPointerUpAnimation();
            /*0x1788bc0*/ void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x1788df0*/ void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x1788900*/ void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt);
            /*0x1789060*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x17878e0*/ void InitTouchScrolling(UnityEngine.Vector2 position);
            /*0x1786c50*/ UnityEngine.UIElements.ScrollView.TouchScrollingResult ComputeTouchScrolling(UnityEngine.Vector2 position);
            /*0x1786650*/ bool ApplyTouchScrolling(UnityEngine.Vector2 newScrollOffset);
            /*0x1789bb0*/ bool ReleaseScrolling(int pointerId, UnityEngine.UIElements.IEventHandler target);
            /*0x1787040*/ void ExecuteElasticSpringAnimation();
            /*0x1785f50*/ void AdjustScrollers();
            /*0x178aee0*/ void UpdateScrollers(bool displayHorizontal, bool displayVertical);
            /*0x1789690*/ void OnScrollersGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x1789130*/ void OnScrollWheel(UnityEngine.UIElements.WheelEvent evt);
            /*0x1789110*/ void OnRootCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent evt);
            /*0x1789120*/ void OnRootPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x1789a90*/ void ReadSingleLineHeight();
            /*0x178aae0*/ void UpdateElasticBehaviour();
            /*0x178a740*/ void <.ctor>b__126_0(float value);
            /*0x178a790*/ void <.ctor>b__126_1(float value);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.ScrollView, UnityEngine.UIElements.ScrollView.UxmlTraits>
            {
                /*0x17967e0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
            {
                /*0x70*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.ScrollViewMode> m_ScrollViewMode;
                /*0x78*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.ScrollView.NestedInteractionKind> m_NestedInteractionKind;
                /*0x80*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowHorizontal;
                /*0x88*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowVertical;
                /*0x90*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.ScrollerVisibility> m_HorizontalScrollerVisibility;
                /*0x98*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.ScrollerVisibility> m_VerticalScrollerVisibility;
                /*0xa0*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_HorizontalPageSize;
                /*0xa8*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_VerticalPageSize;
                /*0xb0*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_MouseWheelScrollSize;
                /*0xb8*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.ScrollView.TouchScrollBehavior> m_TouchScrollBehavior;
                /*0xc0*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_ScrollDecelerationRate;
                /*0xc8*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_Elasticity;
                /*0xd0*/ UnityEngine.UIElements.UxmlLongAttributeDescription m_ElasticAnimationIntervalMs;

                /*0x1798020*/ UxmlTraits();
                /*0x1797820*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            enum TouchScrollBehavior
            {
                Unrestricted = 0,
                Elastic = 1,
                Clamped = 2,
            }

            enum NestedInteractionKind
            {
                Default = 0,
                StopScrolling = 1,
                ForwardScrolling = 2,
            }

            enum TouchScrollingResult
            {
                Apply = 0,
                Forward = 1,
                Block = 2,
            }
        }

        class Slider : UnityEngine.UIElements.BaseSlider<float>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x178f8f0*/ Slider();
            /*0x178fb70*/ Slider();
            /*0x178fba0*/ Slider(float start, float end, UnityEngine.UIElements.SliderDirection direction, float pageSize);
            /*0x178fa10*/ Slider(string label, float start, float end, UnityEngine.UIElements.SliderDirection direction, float pageSize);
            /*0x178f280*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, float startValue);
            /*0x178f6d0*/ float SliderLerpUnclamped(float a, float b, float interpolant);
            /*0x1776480*/ float SliderNormalizeValue(float currentValue, float lowerValue, float higherValue);
            /*0x178f600*/ float ParseStringToValue(string previousValue, string newValue);
            /*0x178f3c0*/ void ComputeValueFromKey(UnityEngine.UIElements.BaseSlider.SliderKey<float> sliderKey, bool isShift);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Slider, UnityEngine.UIElements.Slider.UxmlTraits>
            {
                /*0x1796920*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseSlider.UxmlTraits<float>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_LowValue;
                /*0x88*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_HighValue;
                /*0x90*/ UnityEngine.UIElements.UxmlFloatAttributeDescription m_PageSize;
                /*0x98*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowInputField;
                /*0xa0*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.SliderDirection> m_Direction;
                /*0xa8*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Inverted;

                /*0x17988f0*/ UxmlTraits();
                /*0x1797000*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class SliderInt : UnityEngine.UIElements.BaseSlider<int>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x178ee00*/ SliderInt();
            /*0x178ef20*/ SliderInt();
            /*0x178f050*/ SliderInt(string label, int start, int end, UnityEngine.UIElements.SliderDirection direction, float pageSize);
            /*0x178f1b0*/ float get_pageSize();
            /*0x178f1f0*/ void set_pageSize(float value);
            /*0x178e5f0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, int startValue);
            /*0x178ed60*/ int SliderLerpUnclamped(int a, int b, float interpolant);
            /*0x178edd0*/ float SliderNormalizeValue(int currentValue, int lowerValue, int higherValue);
            /*0x178ecb0*/ int ParseStringToValue(string previousValue, string newValue);
            /*0x178e750*/ void ComputeValueAndDirectionFromClick(float sliderLength, float dragElementLength, float dragElementPos, float dragElementLastPos);
            /*0x178ea70*/ void ComputeValueFromKey(UnityEngine.UIElements.BaseSlider.SliderKey<int> sliderKey, bool isShift);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.SliderInt, UnityEngine.UIElements.SliderInt.UxmlTraits>
            {
                /*0x17968e0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseSlider.UxmlTraits<int>
            {
                /*0x80*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_LowValue;
                /*0x88*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_HighValue;
                /*0x90*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_PageSize;
                /*0x98*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ShowInputField;
                /*0xa0*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.SliderDirection> m_Direction;
                /*0xa8*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_Inverted;

                /*0x1798f00*/ UxmlTraits();
                /*0x1796b80*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        enum DeltaSpeed
        {
            Fast = 0,
            Normal = 1,
            Slow = 2,
        }

        interface IValueField<T>
        {
            /*0x2a5510*/ T get_value();
            /*0x2a5510*/ void set_value(T value);
            /*0x2a5510*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, T startValue);
            /*0x180fc0*/ void StartDragging();
            /*0x180fc0*/ void StopDragging();
        }

        class TextValueField<TValueType> : UnityEngine.UIElements.TextInputBaseField<TValueType>, UnityEngine.UIElements.IValueField<TValueType>
        {
            /*0x0*/ UnityEngine.UIElements.BaseFieldMouseDragger m_Dragger;
            /*0x0*/ bool m_ForceUpdateDisplay;

            /*0x182bb0*/ TextValueField(string label, int maxLength, UnityEngine.UIElements.TextValueField.TextValueInput<TValueType> textValueInput);
            /*0x1803b0*/ UnityEngine.UIElements.TextValueField.TextValueInput<TValueType> get_textValueInput();
            /*0x1803b0*/ string get_formatString();
            /*0x2a5510*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, TValueType startValue);
            /*0x180fc0*/ void StartDragging();
            /*0x180fc0*/ void StopDragging();
            /*0x2a5510*/ TValueType get_value();
            /*0x2a5510*/ void set_value(TValueType value);
            /*0x180fc0*/ void UpdateValueFromText();
            /*0x180fc0*/ void UpdateTextFromValue();
            /*0x181190*/ void OnIsReadOnlyChanged(bool newValue);
            /*0x17e620*/ bool CanTryParse(string textString);
            /*0x180fc0*/ void AddLabelDragger<TDraggerType>();
            /*0x181190*/ void EnableLabelDragger(bool enable);
            /*0x2a5510*/ void SetValueWithoutNotify(TValueType newValue);
            /*0x17aec0*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x180fc0*/ void OnViewDataReady();
            /*0x180fc0*/ void RegisterEditingCallbacks();
            /*0x180fc0*/ void UnregisterEditingCallbacks();

            class TextValueInput<TValueType> : UnityEngine.UIElements.TextInputBaseField.TextInputBase<TValueType>
            {
                /*0x0*/ string <formatString>k__BackingField;

                /*0x180fc0*/ TextValueInput();
                /*0x1803b0*/ UnityEngine.UIElements.TextValueField<TValueType> get_textValueFieldParent();
                bool AcceptCharacter(char c);
                /*0x1803b0*/ string get_allowedCharacters();
                /*0x1803b0*/ string get_formatString();
                /*0x17aec0*/ void set_formatString(string value);
                /*0x2a5510*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, TValueType startValue);
                /*0x180fc0*/ void StartDragging();
                /*0x180fc0*/ void StopDragging();
                /*0x2a5510*/ string ValueToString(TValueType value);
                /*0x2a5510*/ TValueType StringToValue(string str);
            }
        }

        class TextValueFieldTraits<TValueType, TValueUxmlAttributeType> : UnityEngine.UIElements.BaseFieldTraits<TValueType, TValueUxmlAttributeType>
        {
            /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsReadOnly;
            /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_IsDelayed;

            /*0x180fc0*/ TextValueFieldTraits();
            void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class Toggle : UnityEngine.UIElements.BaseBoolField
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;
            static /*0x18*/ string noTextVariantUssClassName;
            static /*0x20*/ string checkmarkUssClassName;
            static /*0x28*/ string textUssClassName;
            static /*0x30*/ string mixedValuesUssClassName;

            static /*0x178fe30*/ Toggle();
            /*0x17901d0*/ Toggle();
            /*0x17900b0*/ Toggle(string label);
            /*0x178fbd0*/ void InitLabel();
            /*0x178fc50*/ void UpdateMixedValueContent();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.Toggle, UnityEngine.UIElements.Toggle.UxmlTraits>
            {
                /*0x17967a0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseFieldTraits<bool, UnityEngine.UIElements.UxmlBoolAttributeDescription>
            {
                /*0x88*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Text;

                /*0x17992d0*/ UxmlTraits();
                /*0x1796a60*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class TreeView : UnityEngine.UIElements.BaseTreeView
        {
            /*0x4d0*/ System.Func<UnityEngine.UIElements.VisualElement> m_MakeItem;
            /*0x4d8*/ System.Action<UnityEngine.UIElements.VisualElement, int> m_BindItem;
            /*0x4e0*/ System.Action<UnityEngine.UIElements.VisualElement, int> <unbindItem>k__BackingField;
            /*0x4e8*/ System.Action<UnityEngine.UIElements.VisualElement> <destroyItem>k__BackingField;

            /*0x1790400*/ TreeView();
            /*0x17904d0*/ TreeView(System.Func<UnityEngine.UIElements.VisualElement> makeItem, System.Action<UnityEngine.UIElements.VisualElement, int> bindItem);
            /*0x177ba40*/ System.Func<UnityEngine.UIElements.VisualElement> get_makeItem();
            /*0x1790630*/ void set_makeItem(System.Func<UnityEngine.UIElements.VisualElement> value);
            /*0x17905b0*/ System.Action<UnityEngine.UIElements.VisualElement, int> get_bindItem();
            /*0x17905d0*/ void set_bindItem(System.Action<UnityEngine.UIElements.VisualElement, int> value);
            /*0x177ba50*/ System.Action<UnityEngine.UIElements.VisualElement, int> get_unbindItem();
            /*0x17905c0*/ System.Action<UnityEngine.UIElements.VisualElement> get_destroyItem();
            /*0x17903c0*/ bool HasValidDataAndBindings();
            /*0x1790360*/ UnityEngine.UIElements.CollectionViewController CreateViewController();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.TreeView, UnityEngine.UIElements.TreeView.UxmlTraits>
            {
                /*0x1796760*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BaseTreeView.UxmlTraits
            {
                /*0x17991d0*/ UxmlTraits();
            }
        }

        struct TreeData<T>
        {
            /*0x0*/ System.Collections.Generic.IList<int> m_RootItemIds;
            /*0x0*/ System.Collections.Generic.Dictionary<int, UnityEngine.UIElements.TreeViewItemData<T>> m_Tree;
            /*0x0*/ System.Collections.Generic.Dictionary<int, int> m_ParentIds;
            /*0x0*/ System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<int>> m_ChildrenIds;

            /*0x17aec0*/ TreeData(System.Collections.Generic.IList<UnityEngine.UIElements.TreeViewItemData<T>> rootItems);
            /*0x1803b0*/ System.Collections.Generic.IEnumerable<int> get_rootItemIds();
            /*0x2a5510*/ UnityEngine.UIElements.TreeViewItemData<T> GetDataForId(int id);
            /*0x17a330*/ int GetParentId(int id);
            void Move(int id, int newParentId, int childIndex);
            bool HasAncestor(int childId, int ancestorId);
            /*0x2a5510*/ void AddItemToParent(UnityEngine.UIElements.TreeViewItemData<T> item, int parentId, int childIndex);
            /*0x1817d0*/ void RemoveFromParent(int id, int parentId);
            /*0x2a5510*/ void UpdateParentTree(UnityEngine.UIElements.TreeViewItemData<T> current);
            /*0x17aec0*/ void RefreshTree(System.Collections.Generic.IList<UnityEngine.UIElements.TreeViewItemData<T>> rootItems);
            void BuildTree(System.Collections.Generic.IEnumerable<UnityEngine.UIElements.TreeViewItemData<T>> items, bool isRoot);
        }

        struct TreeItem
        {
            /*0x10*/ int <id>k__BackingField;
            /*0x14*/ int <parentId>k__BackingField;
            /*0x18*/ System.Collections.Generic.IEnumerable<int> <childrenIds>k__BackingField;

            /*0xd4ab10*/ TreeItem(int id, int parentId, System.Collections.Generic.IEnumerable<int> childrenIds);
            /*0x6bba50*/ int get_id();
            /*0xa5a7c0*/ int get_parentId();
            /*0xa5a7f0*/ System.Collections.Generic.IEnumerable<int> get_childrenIds();
            /*0x17902e0*/ bool get_hasChildren();
        }

        struct TreeViewItemWrapper
        {
            /*0x10*/ UnityEngine.UIElements.TreeItem item;
            /*0x20*/ int depth;

            /*0x1790330*/ TreeViewItemWrapper(UnityEngine.UIElements.TreeItem item, int depth);
            /*0x6bba50*/ int get_id();
            /*0xa5a7f0*/ System.Collections.Generic.IEnumerable<int> get_childrenIds();
            /*0x17902e0*/ bool get_hasChildren();
        }

        struct TreeViewItemData<T>
        {
            /*0x0*/ int <id>k__BackingField;
            /*0x0*/ T m_Data;
            /*0x0*/ System.Collections.Generic.IList<UnityEngine.UIElements.TreeViewItemData<T>> m_Children;

            /*0x180980*/ int get_id();
            /*0x2a5510*/ T get_data();
            /*0x1803b0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.TreeViewItemData<T>> get_children();
            /*0x17cb40*/ bool get_hasChildren();
            /*0x2a5510*/ void InsertChild(UnityEngine.UIElements.TreeViewItemData<T> child, int index);
            /*0x17aa40*/ void RemoveChild(int childId);
            /*0x17a330*/ int GetChildIndex(int itemId);
            /*0x2a5510*/ void ReplaceChild(UnityEngine.UIElements.TreeViewItemData<T> newChild);
        }

        class TwoPaneSplitView : UnityEngine.UIElements.VisualElement
        {
            static /*0x0*/ string s_UssClassName;
            static /*0x8*/ string s_ContentContainerClassName;
            static /*0x10*/ string s_HandleDragLineClassName;
            static /*0x18*/ string s_HandleDragLineVerticalClassName;
            static /*0x20*/ string s_HandleDragLineHorizontalClassName;
            static /*0x28*/ string s_HandleDragLineAnchorClassName;
            static /*0x30*/ string s_HandleDragLineAnchorVerticalClassName;
            static /*0x38*/ string s_HandleDragLineAnchorHorizontalClassName;
            static /*0x40*/ string s_VerticalClassName;
            static /*0x48*/ string s_HorizontalClassName;
            /*0x3c8*/ UnityEngine.UIElements.VisualElement m_LeftPane;
            /*0x3d0*/ UnityEngine.UIElements.VisualElement m_RightPane;
            /*0x3d8*/ UnityEngine.UIElements.VisualElement m_FixedPane;
            /*0x3e0*/ UnityEngine.UIElements.VisualElement m_FlexedPane;
            /*0x3e8*/ float m_FixedPaneDimension;
            /*0x3f0*/ UnityEngine.UIElements.VisualElement m_DragLine;
            /*0x3f8*/ UnityEngine.UIElements.VisualElement m_DragLineAnchor;
            /*0x400*/ bool m_CollapseMode;
            /*0x401*/ bool m_CollapseChildCalledBeforeSetupComplete;
            /*0x404*/ int m_CollapsedChildIndex;
            /*0x408*/ UnityEngine.UIElements.VisualElement m_Content;
            /*0x410*/ UnityEngine.UIElements.TwoPaneSplitViewOrientation m_Orientation;
            /*0x414*/ int m_FixedPaneIndex;
            /*0x418*/ float m_FixedPaneInitialDimension;
            /*0x420*/ UnityEngine.UIElements.TwoPaneSplitViewResizer m_Resizer;

            static /*0x17948b0*/ TwoPaneSplitView();
            /*0x1794bb0*/ TwoPaneSplitView();
            /*0x16e01d0*/ UnityEngine.UIElements.VisualElement get_fixedPane();
            /*0x16e01c0*/ UnityEngine.UIElements.VisualElement get_flexedPane();
            /*0x175e6e0*/ UnityEngine.UIElements.VisualElement get_dragLine();
            /*0x1794e90*/ int get_fixedPaneIndex();
            /*0x1794ea0*/ UnityEngine.UIElements.TwoPaneSplitViewOrientation get_orientation();
            /*0x1794e50*/ float get_fixedPaneDimension();
            /*0x1794eb0*/ void set_fixedPaneDimension(float value);
            /*0x1791f00*/ void CollapseChild(int index);
            /*0x1792380*/ void Init(int fixedPaneIndex, float fixedPaneInitialDimension, UnityEngine.UIElements.TwoPaneSplitViewOrientation orientation);
            /*0x1792840*/ void OnPostDisplaySetup(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x1793c20*/ void ReplacePanesBasedOnAnchor();
            /*0x17927c0*/ void OnAnchorPostDisplaySetup(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x1792290*/ void IdentifyLeftAndRightPane();
            /*0x17929b0*/ void PostDisplaySetup();
            /*0x1792960*/ void OnSizeChange(UnityEngine.UIElements.GeometryChangedEvent evt);
            /*0x1794120*/ void UpdateLayout(bool updateFixedPane, bool updateDragLine);
            /*0x1794e40*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x1792970*/ void OnViewDataReady();
            /*0x1793e00*/ void SetDragLineOffset(float offset);
            /*0x1793f90*/ void SetFixedPaneDimension(float dimension);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.TwoPaneSplitView, UnityEngine.UIElements.TwoPaneSplitView.UxmlTraits>
            {
                /*0x17968a0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
            {
                /*0x70*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_FixedPaneIndex;
                /*0x78*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_FixedPaneInitialDimension;
                /*0x80*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.TwoPaneSplitViewOrientation> m_Orientation;

                /*0x17986e0*/ UxmlTraits();
                /*0x1797310*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        enum TwoPaneSplitViewOrientation
        {
            Horizontal = 0,
            Vertical = 1,
        }

        class TwoPaneSplitViewResizer : UnityEngine.UIElements.PointerManipulator
        {
            /*0x38*/ UnityEngine.Vector3 m_Start;
            /*0x44*/ bool m_Active;
            /*0x48*/ UnityEngine.UIElements.TwoPaneSplitView m_SplitView;
            /*0x50*/ int m_Direction;

            /*0x1791a00*/ TwoPaneSplitViewResizer(UnityEngine.UIElements.TwoPaneSplitView splitView, int dir);
            /*0x1791ee0*/ UnityEngine.UIElements.TwoPaneSplitViewOrientation get_orientation();
            /*0x1791ce0*/ UnityEngine.UIElements.VisualElement get_fixedPane();
            /*0x1791ec0*/ UnityEngine.UIElements.VisualElement get_flexedPane();
            /*0x1791c40*/ float get_fixedPaneMinDimension();
            /*0x1791b20*/ float get_fixedPaneMargins();
            /*0x1791e20*/ float get_flexedPaneMinDimension();
            /*0x1791d00*/ float get_flexedPaneMargin();
            /*0x17916e0*/ void RegisterCallbacksOnTarget();
            /*0x1791870*/ void UnregisterCallbacksFromTarget();
            /*0x1790690*/ void ApplyDelta(float delta);
            /*0x17911c0*/ void OnPointerDown(UnityEngine.UIElements.PointerDownEvent e);
            /*0x1791280*/ void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent e);
            /*0x1791630*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent e);
            /*0x1791140*/ void InterruptPointerMove(UnityEngine.UIElements.PointerMoveEvent e);
        }

        class UnsignedIntegerField : UnityEngine.UIElements.TextValueField<uint>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x17951a0*/ UnsignedIntegerField();
            /*0x17954a0*/ UnsignedIntegerField();
            /*0x17952c0*/ UnsignedIntegerField(string label, int maxLength);
            /*0x1795660*/ UnityEngine.UIElements.UnsignedIntegerField.UnsignedIntegerInput get_integerInput();
            /*0x1795100*/ string ValueToString(uint v);
            /*0x1794fe0*/ uint StringToValue(string str);
            /*0x1794fb0*/ bool CanTryParse(string textString);
            /*0x1794ed0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, uint startValue);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.UnsignedIntegerField, UnityEngine.UIElements.UnsignedIntegerField.UxmlTraits>
            {
                /*0x1796960*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextValueFieldTraits<uint, UnityEngine.UIElements.UxmlUnsignedIntAttributeDescription>
            {
                /*0x1798870*/ UxmlTraits();
            }

            class UnsignedIntegerInput : UnityEngine.UIElements.TextValueField.TextValueInput<uint>
            {
                /*0x1795930*/ UnsignedIntegerInput();
                /*0x1795a10*/ UnityEngine.UIElements.UnsignedIntegerField get_parentUnsignedIntegerField();
                /*0x17959c0*/ string get_allowedCharacters();
                /*0x17956e0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, uint startValue);
                /*0x17958e0*/ string ValueToString(uint v);
                /*0x17958a0*/ uint StringToValue(string str);
            }
        }

        class UnsignedLongField : UnityEngine.UIElements.TextValueField<ulong>
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string labelUssClassName;
            static /*0x10*/ string inputUssClassName;

            static /*0x1795d60*/ UnsignedLongField();
            /*0x1796060*/ UnsignedLongField();
            /*0x1795e80*/ UnsignedLongField(string label, int maxLength);
            /*0x1796220*/ UnityEngine.UIElements.UnsignedLongField.UnsignedLongInput get_unsignedLongInput();
            /*0x1795cc0*/ string ValueToString(ulong v);
            /*0x1795ba0*/ ulong StringToValue(string str);
            /*0x1795b70*/ bool CanTryParse(string textString);
            /*0x1795a90*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, ulong startValue);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.UnsignedLongField, UnityEngine.UIElements.UnsignedLongField.UxmlTraits>
            {
                /*0x1796820*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.TextValueFieldTraits<ulong, UnityEngine.UIElements.UxmlUnsignedLongAttributeDescription>
            {
                /*0x17988b0*/ UxmlTraits();
            }

            class UnsignedLongInput : UnityEngine.UIElements.TextValueField.TextValueInput<ulong>
            {
                /*0x1796600*/ UnsignedLongInput();
                /*0x17966e0*/ UnityEngine.UIElements.UnsignedLongField get_parentUnsignedLongField();
                /*0x1796690*/ string get_allowedCharacters();
                /*0x17962a0*/ void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, ulong startValue);
                /*0x17964d0*/ ulong ClampToMinMaxULongValue(long niceDelta, ulong value);
                /*0x17965b0*/ string ValueToString(ulong v);
                /*0x1796570*/ ulong StringToValue(string str);
            }
        }

        struct CountingBloomFilter
        {
            /*0x10*/ UnityEngine.UIElements.CountingBloomFilter.<m_Counters> m_Counters;

            /*0x1781760*/ void AdjustSlot(uint index, bool increment);
            /*0x17817c0*/ uint Hash1(uint hash);
            /*0x17817d0*/ uint Hash2(uint hash);
            /*0x1781810*/ bool IsSlotEmpty(uint index);
            /*0x17817e0*/ void InsertHash(uint hash);
            /*0x1781820*/ void RemoveHash(uint hash);
            /*0x1781790*/ bool ContainsHash(uint hash);

            struct <m_Counters>e__FixedBuffer
            {
                /*0x10*/ byte FixedElementField;
            }
        }

        class AncestorFilter
        {
            /*0x10*/ UnityEngine.UIElements.CountingBloomFilter m_CountingBloomFilter;
            /*0x4010*/ System.Collections.Generic.Stack<int> m_HashStack;

            /*0x17816d0*/ AncestorFilter();
            /*0x1781260*/ void AddHash(int hash);
            /*0x17812e0*/ bool IsCandidate(UnityEngine.UIElements.StyleComplexSelector complexSel);
            /*0x1781430*/ void PushElement(UnityEngine.UIElements.VisualElement element);
            /*0x1781350*/ void PopElement();
        }

        struct Cursor : System.IEquatable<UnityEngine.UIElements.Cursor>
        {
            /*0x10*/ UnityEngine.Texture2D <texture>k__BackingField;
            /*0x18*/ UnityEngine.Vector2 <hotspot>k__BackingField;
            /*0x20*/ int <defaultCursorId>k__BackingField;

            static /*0x1781e30*/ bool op_Equality(UnityEngine.UIElements.Cursor style1, UnityEngine.UIElements.Cursor style2);
            /*0x6937d0*/ UnityEngine.Texture2D get_texture();
            /*0x792990*/ void set_texture(UnityEngine.Texture2D value);
            /*0x1245b30*/ UnityEngine.Vector2 get_hotspot();
            /*0xfbbe80*/ void set_hotspot(UnityEngine.Vector2 value);
            /*0x417e30*/ int get_defaultCursorId();
            /*0xdcd9c0*/ void set_defaultCursorId(int value);
            /*0x17819f0*/ bool Equals(object obj);
            /*0x1781b20*/ bool Equals(UnityEngine.UIElements.Cursor other);
            /*0x1781bd0*/ int GetHashCode();
            /*0x1781db0*/ string ToString();
        }

        interface ICursorManager
        {
            void SetCursor(UnityEngine.UIElements.Cursor cursor);
            /*0x180fc0*/ void ResetCursor();
        }

        class CursorManager : UnityEngine.UIElements.ICursorManager
        {
            /*0x10*/ bool <isCursorOverriden>k__BackingField;

            /*0x32f970*/ CursorManager();
            /*0x793eb0*/ bool get_isCursorOverriden();
            /*0x793ec0*/ void set_isCursorOverriden(bool value);
            /*0x17818c0*/ void SetCursor(UnityEngine.UIElements.Cursor cursor);
            /*0x1781850*/ void ResetCursor();
        }

        class DefaultEventSystem
        {
            static /*0x0*/ System.Func<bool> IsEditorRemoteConnected;
            /*0x10*/ UnityEngine.UIElements.DefaultEventSystem.IInput m_Input;
            /*0x18*/ string m_HorizontalAxis;
            /*0x20*/ string m_VerticalAxis;
            /*0x28*/ string m_SubmitButton;
            /*0x30*/ string m_CancelButton;
            /*0x38*/ float m_InputActionsPerSecond;
            /*0x3c*/ float m_RepeatDelay;
            /*0x40*/ bool m_SendingTouchEvents;
            /*0x41*/ bool m_SendingPenEvent;
            /*0x48*/ UnityEngine.Event m_Event;
            /*0x50*/ UnityEngine.UIElements.BaseRuntimePanel m_FocusedPanel;
            /*0x58*/ UnityEngine.UIElements.BaseRuntimePanel m_PreviousFocusedPanel;
            /*0x60*/ UnityEngine.UIElements.Focusable m_PreviousFocusedElement;
            /*0x68*/ UnityEngine.EventModifiers m_CurrentModifiers;
            /*0x6c*/ int m_LastMousePressButton;
            /*0x70*/ float m_NextMousePressTime;
            /*0x74*/ int m_LastMouseClickCount;
            /*0x78*/ UnityEngine.Vector2 m_LastMousePosition;
            /*0x80*/ bool m_MouseProcessedAtLeastOnce;
            /*0x84*/ int m_ConsecutiveMoveCount;
            /*0x88*/ UnityEngine.Vector2 m_LastMoveVector;
            /*0x90*/ float m_PrevActionTime;
            /*0x94*/ bool m_IsMoveFromKeyboard;

            static /*0x1784a00*/ DefaultEventSystem();
            static /*0x17822d0*/ UnityEngine.UIElements.EventBase MakeTouchEvent(UnityEngine.Touch touch, UnityEngine.EventModifiers modifiers);
            static /*0x17821e0*/ UnityEngine.UIElements.EventBase MakePenEvent(UnityEngine.PenData pen, UnityEngine.EventModifiers modifiers);
            /*0x1784ad0*/ DefaultEventSystem();
            /*0x1784c70*/ bool get_isAppFocused();
            /*0x1784c30*/ UnityEngine.UIElements.DefaultEventSystem.IInput get_input();
            /*0x1781f20*/ UnityEngine.UIElements.DefaultEventSystem.IInput GetDefaultInput();
            /*0x1784500*/ bool ShouldIgnoreEventsOnAppNotFocused();
            /*0x4e40e0*/ UnityEngine.UIElements.BaseRuntimePanel get_focusedPanel();
            /*0x17823e0*/ void set_focusedPanel(UnityEngine.UIElements.BaseRuntimePanel value);
            /*0x17848d0*/ void Update(UnityEngine.UIElements.DefaultEventSystem.UpdateMode updateMode);
            /*0x1781ef0*/ UnityEngine.UIElements.DefaultEventSystem.FocusBasedEventSequenceContext FocusBasedEventSequence();
            /*0x1783950*/ void SendIMGUIEvents();
            /*0x1782440*/ void ProcessMouseEvents();
            /*0x17841b0*/ void SendInputEvents();
            /*0x17823e0*/ void OnFocusEvent(UnityEngine.UIElements.RuntimePanel panel, UnityEngine.UIElements.FocusEvent evt);
            /*0x2a5510*/ void SendFocusBasedEvent<TArg>(System.Func<TArg, UnityEngine.UIElements.EventBase> evtFactory, TArg arg);
            /*0x2a5510*/ void SendPositionBasedEvent<TArg>(UnityEngine.Vector3 mousePosition, UnityEngine.Vector3 delta, int pointerId, System.Nullable<int> targetDisplay, System.Func<UnityEngine.Vector3, UnityEngine.Vector3, TArg, UnityEngine.UIElements.EventBase> evtFactory, TArg arg, bool deselectIfNoTarget);
            /*0x1784820*/ void UpdateFocusedPanel(UnityEngine.UIElements.BaseRuntimePanel runtimePanel);
            /*0x1783410*/ bool ProcessTouchEvents();
            /*0x1782e90*/ bool ProcessPenEvents();
            /*0x1782000*/ UnityEngine.Vector2 GetRawMoveVector();
            /*0x1784520*/ bool ShouldSendMoveFromInput();
            /*0x1783240*/ void ProcessTabEvent(UnityEngine.Event e, UnityEngine.EventModifiers modifiers);

            enum UpdateMode
            {
                Always = 0,
                IgnoreIfAppNotFocused = 1,
            }

            struct FocusBasedEventSequenceContext : System.IDisposable
            {
                /*0x10*/ UnityEngine.UIElements.DefaultEventSystem es;

                /*0x17a36b0*/ FocusBasedEventSequenceContext(UnityEngine.UIElements.DefaultEventSystem es);
                /*0x17a3660*/ void Dispose();
            }

            interface IInput
            {
                /*0x17e620*/ bool GetButtonDown(string button);
                float GetAxisRaw(string axis);
                /*0x180fc0*/ void ClearLastPenContactEvent();
                UnityEngine.PenData GetLastPenContactEvent();
                /*0x180980*/ int get_touchCount();
                UnityEngine.Touch GetTouch(int index);
                /*0x17cb40*/ bool get_mousePresent();
                /*0x17bfd0*/ bool GetMouseButtonDown(int button);
                /*0x17bfd0*/ bool GetMouseButtonUp(int button);
                /*0x180e40*/ UnityEngine.Vector3 get_mousePosition();
                /*0x180980*/ int get_mouseButtonCount();
                /*0x17cb40*/ bool get_anyKey();
                /*0x17fc30*/ float get_unscaledTime();
                /*0x17fc30*/ float get_doubleClickTime();
            }

            class Input : UnityEngine.UIElements.DefaultEventSystem.IInput
            {
                /*0x32f970*/ Input();
                /*0x17a4310*/ bool GetButtonDown(string button);
                /*0x17a4300*/ float GetAxisRaw(string axis);
                /*0x17a42f0*/ void ClearLastPenContactEvent();
                /*0x17a4320*/ UnityEngine.PenData GetLastPenContactEvent();
                /*0x17a4440*/ int get_touchCount();
                /*0x17a4380*/ UnityEngine.Touch GetTouch(int index);
                /*0x17a4430*/ bool get_mousePresent();
                /*0x17a4360*/ bool GetMouseButtonDown(int button);
                /*0x17a4370*/ bool GetMouseButtonUp(int button);
                /*0x17a4400*/ UnityEngine.Vector3 get_mousePosition();
                /*0x408450*/ int get_mouseButtonCount();
                /*0x17a43d0*/ bool get_anyKey();
                /*0x17a4450*/ float get_unscaledTime();
                /*0x17a43e0*/ float get_doubleClickTime();
            }

            class NoInput : UnityEngine.UIElements.DefaultEventSystem.IInput
            {
                /*0x32f970*/ NoInput();
                /*0x348b00*/ bool GetButtonDown(string button);
                /*0x1301790*/ float GetAxisRaw(string axis);
                /*0x388e90*/ int get_touchCount();
                /*0x17ad000*/ UnityEngine.Touch GetTouch(int index);
                /*0x32d010*/ void ClearLastPenContactEvent();
                /*0x17acfe0*/ UnityEngine.PenData GetLastPenContactEvent();
                /*0x348b00*/ bool get_mousePresent();
                /*0x348b00*/ bool GetMouseButtonDown(int button);
                /*0x348b00*/ bool GetMouseButtonUp(int button);
                /*0x17ad030*/ UnityEngine.Vector3 get_mousePosition();
                /*0x388e90*/ int get_mouseButtonCount();
                /*0x348b00*/ bool get_anyKey();
                /*0x1301790*/ float get_unscaledTime();
                /*0x17ad020*/ float get_doubleClickTime();
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.DefaultEventSystem.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.UIElements.DefaultEventSystem, UnityEngine.UIElements.EventBase> <>9__30_0;
                static /*0x10*/ System.Func<UnityEngine.Vector3, UnityEngine.Vector3, System.ValueTuple<UnityEngine.EventModifiers, UnityEngine.Vector2>, UnityEngine.UIElements.EventBase> <>9__30_1;
                static /*0x18*/ System.Func<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Event, UnityEngine.UIElements.EventBase> <>9__30_2;
                static /*0x20*/ System.Func<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.UIElements.DefaultEventSystem, UnityEngine.UIElements.EventBase> <>9__36_0;
                static /*0x28*/ System.Func<UnityEngine.Vector3, UnityEngine.Vector3, System.ValueTuple<int, int, UnityEngine.EventModifiers>, UnityEngine.UIElements.EventBase> <>9__36_1;
                static /*0x30*/ System.Func<UnityEngine.Vector3, UnityEngine.Vector3, System.ValueTuple<int, int, UnityEngine.EventModifiers>, UnityEngine.UIElements.EventBase> <>9__36_2;
                static /*0x38*/ System.Func<UnityEngine.UIElements.DefaultEventSystem, UnityEngine.UIElements.EventBase> <>9__37_0;
                static /*0x40*/ System.Func<UnityEngine.UIElements.DefaultEventSystem, UnityEngine.UIElements.EventBase> <>9__37_1;
                static /*0x48*/ System.Func<UnityEngine.UIElements.DefaultEventSystem, UnityEngine.UIElements.EventBase> <>9__37_2;
                static /*0x50*/ System.Func<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Touch, UnityEngine.UIElements.EventBase> <>9__45_0;
                static /*0x58*/ System.Func<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.PenData, UnityEngine.UIElements.EventBase> <>9__46_0;
                static /*0x60*/ System.Func<System.ValueTuple<UnityEngine.UIElements.NavigationMoveEvent.Direction, UnityEngine.EventModifiers, UnityEngine.UIElements.DefaultEventSystem.IInput>, UnityEngine.UIElements.EventBase> <>9__53_0;

                static /*0x17affd0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17aef10*/ UnityEngine.UIElements.EventBase <SendIMGUIEvents>b__30_0(UnityEngine.UIElements.DefaultEventSystem self);
                /*0x17aef70*/ UnityEngine.UIElements.EventBase <SendIMGUIEvents>b__30_1(UnityEngine.Vector3 panelPosition, UnityEngine.Vector3 _, System.ValueTuple<UnityEngine.EventModifiers, UnityEngine.Vector2> t);
                /*0x17af080*/ UnityEngine.UIElements.EventBase <SendIMGUIEvents>b__30_2(UnityEngine.Vector3 panelPosition, UnityEngine.Vector3 panelDelta, UnityEngine.Event evt);
                /*0x17aeb10*/ UnityEngine.UIElements.EventBase <ProcessMouseEvents>b__36_0(UnityEngine.Vector3 panelPosition, UnityEngine.Vector3 panelDelta, UnityEngine.UIElements.DefaultEventSystem self);
                /*0x17aebd0*/ UnityEngine.UIElements.EventBase <ProcessMouseEvents>b__36_1(UnityEngine.Vector3 panelPosition, UnityEngine.Vector3 panelDelta, System.ValueTuple<int, int, UnityEngine.EventModifiers> t);
                /*0x17aec40*/ UnityEngine.UIElements.EventBase <ProcessMouseEvents>b__36_2(UnityEngine.Vector3 panelPosition, UnityEngine.Vector3 panelDelta, System.ValueTuple<int, int, UnityEngine.EventModifiers> t);
                /*0x17af130*/ UnityEngine.UIElements.EventBase <SendInputEvents>b__37_0(UnityEngine.UIElements.DefaultEventSystem self);
                /*0x17af1c0*/ UnityEngine.UIElements.EventBase <SendInputEvents>b__37_1(UnityEngine.UIElements.DefaultEventSystem self);
                /*0x17af240*/ UnityEngine.UIElements.EventBase <SendInputEvents>b__37_2(UnityEngine.UIElements.DefaultEventSystem self);
                /*0x17aee00*/ UnityEngine.UIElements.EventBase <ProcessTouchEvents>b__45_0(UnityEngine.Vector3 panelPosition, UnityEngine.Vector3 panelDelta, UnityEngine.Touch _touch);
                /*0x17aecb0*/ UnityEngine.UIElements.EventBase <ProcessPenEvents>b__46_0(UnityEngine.Vector3 panelPosition, UnityEngine.Vector3 panelDelta, UnityEngine.PenData _pen);
                /*0x17aed60*/ UnityEngine.UIElements.EventBase <ProcessTabEvent>b__53_0(System.ValueTuple<UnityEngine.UIElements.NavigationMoveEvent.Direction, UnityEngine.EventModifiers, UnityEngine.UIElements.DefaultEventSystem.IInput> t);
                /*0x348b00*/ bool <.cctor>b__58_0();
            }
        }

        class DisposeHelper
        {
            static /*0x179b360*/ void NotifyDisposedUsed(System.IDisposable disposable);
        }

        class BaseReorderableDragAndDropController : UnityEngine.UIElements.ICollectionDragAndDropController, UnityEngine.UIElements.IDragAndDropController<UnityEngine.UIElements.IListDragAndDropArgs>, UnityEngine.UIElements.IReorderable
        {
            /*0x10*/ UnityEngine.UIElements.BaseVerticalCollectionView m_View;
            /*0x18*/ System.Collections.Generic.List<int> m_SortedSelectedIds;
            /*0x20*/ bool <enableReordering>k__BackingField;

            /*0x1799d30*/ BaseReorderableDragAndDropController(UnityEngine.UIElements.BaseVerticalCollectionView view);
            /*0x32f410*/ System.Collections.Generic.IEnumerable<int> GetSortedSelectedIds();
            /*0x796120*/ bool get_enableReordering();
            /*0x7963b0*/ void set_enableReordering(bool value);
            /*0x542e60*/ bool CanStartDrag(System.Collections.Generic.IEnumerable<int> itemIds);
            /*0x1799890*/ UnityEngine.UIElements.StartDragArgs SetupDragAndDrop(System.Collections.Generic.IEnumerable<int> itemIds, bool skipText);
            /*0x1799870*/ int CompareId(int id1, int id2);
            /*0x17b580*/ UnityEngine.UIElements.DragVisualMode HandleDragAndDrop(UnityEngine.UIElements.IListDragAndDropArgs args);
            /*0x17aec0*/ void OnDrop(UnityEngine.UIElements.IListDragAndDropArgs args);
            /*0x32d010*/ void DragCleanup();
            /*0x32d010*/ void HandleAutoExpand(UnityEngine.UIElements.ReusableCollectionItem item, UnityEngine.Vector2 pointerPosition);
        }

        class DragAndDropUtility
        {
            static /*0x0*/ System.Func<UnityEngine.UIElements.IDragAndDrop> s_MakeDragAndDropClientFunc;
            static /*0x8*/ UnityEngine.UIElements.IDragAndDrop s_DragAndDropEditor;
            static /*0x10*/ UnityEngine.UIElements.IDragAndDrop s_DragAndDropPlayMode;

            static /*0x179b410*/ UnityEngine.UIElements.IDragAndDrop GetDragAndDrop(UnityEngine.UIElements.IPanel panel);
        }

        class DefaultDragAndDropClient : UnityEngine.UIElements.DragAndDropData, UnityEngine.UIElements.IDragAndDrop
        {
            /*0x10*/ System.Collections.Hashtable m_GenericData;
            /*0x18*/ UnityEngine.UIElements.Label m_DraggedInfoLabel;
            /*0x20*/ UnityEngine.UIElements.DragVisualMode m_VisualMode;
            /*0x28*/ System.Collections.Generic.IEnumerable<UnityEngine.Object> m_UnityObjectReferences;

            /*0x179b2a0*/ DefaultDragAndDropClient();
            /*0x179b310*/ object get_source();
            /*0x179aa40*/ object GetGenericData(string key);
            /*0x179aab0*/ void StartDrag(UnityEngine.UIElements.StartDragArgs args, UnityEngine.Vector3 pointerPosition);
            /*0x179b0c0*/ void UpdateDrag(UnityEngine.Vector3 pointerPosition);
            /*0x32d010*/ void AcceptDrag();
            /*0x11172b0*/ void SetVisualMode(UnityEngine.UIElements.DragVisualMode mode);
            /*0x179a9e0*/ void DragCleanup();
            /*0x621ca0*/ UnityEngine.UIElements.DragAndDropData get_data();
        }

        class DragEventsProcessor
        {
            /*0x10*/ bool m_IsRegistered;
            /*0x14*/ UnityEngine.UIElements.DragEventsProcessor.DragState m_DragState;
            /*0x18*/ UnityEngine.Vector3 m_Start;
            /*0x28*/ UnityEngine.UIElements.VisualElement m_Target;

            /*0x179c670*/ DragEventsProcessor(UnityEngine.UIElements.VisualElement target);
            /*0x3ce290*/ bool get_supportsDragEvents();
            /*0x179c8a0*/ bool get_useDragEvents();
            /*0x179c7a0*/ UnityEngine.UIElements.IDragAndDrop get_dragAndDrop();
            /*0x179c7d0*/ bool get_isEditorContext();
            /*0x179c2a0*/ void RegisterCallbacksFromTarget(UnityEngine.UIElements.AttachToPanelEvent evt);
            /*0x179bfd0*/ void RegisterCallbacksFromTarget();
            /*0x179c660*/ void UnregisterCallbacksFromTarget(UnityEngine.UIElements.DetachFromPanelEvent evt);
            /*0x179c2b0*/ void UnregisterCallbacksFromTarget(bool unregisterPanelEvents);
            bool CanStartDrag(UnityEngine.Vector3 pointerPosition);
            UnityEngine.UIElements.StartDragArgs StartDrag(UnityEngine.Vector3 pointerPosition);
            /*0x17aec0*/ void UpdateDrag(UnityEngine.Vector3 pointerPosition);
            /*0x17aec0*/ void OnDrop(UnityEngine.Vector3 pointerPosition);
            /*0x181190*/ void ClearDragAndDropUI(bool dragCancelled);
            /*0x179b890*/ void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x179bde0*/ void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x179b9a0*/ void OnPointerLeaveEvent(UnityEngine.UIElements.PointerLeaveEvent evt);
            /*0x179b6a0*/ void OnPointerCancelEvent(UnityEngine.UIElements.PointerCancelEvent evt);
            /*0x179b7b0*/ void OnPointerCapturedOut(UnityEngine.UIElements.PointerCaptureOutEvent evt);
            /*0x179b9c0*/ void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x179b570*/ UnityEngine.UIElements.DragEventsProcessor GetDropTarget(UnityEngine.Vector2 position);

            enum DragState
            {
                None = 0,
                CanStartDrag = 1,
                Dragging = 2,
            }
        }

        interface ICollectionDragAndDropController : UnityEngine.UIElements.IDragAndDropController<UnityEngine.UIElements.IListDragAndDropArgs>, UnityEngine.UIElements.IReorderable
        {
        }

        interface IDragAndDrop
        {
            void StartDrag(UnityEngine.UIElements.StartDragArgs args, UnityEngine.Vector3 pointerPosition);
            /*0x17aec0*/ void UpdateDrag(UnityEngine.Vector3 pointerPosition);
            /*0x180fc0*/ void AcceptDrag();
            /*0x180fc0*/ void DragCleanup();
            /*0x17aa40*/ void SetVisualMode(UnityEngine.UIElements.DragVisualMode visualMode);
            /*0x1803b0*/ UnityEngine.UIElements.DragAndDropData get_data();
        }

        class DragAndDropData
        {
            /*0x32f970*/ DragAndDropData();
            /*0x1858d0*/ object GetGenericData(string key);
            /*0x1803b0*/ object get_source();
        }

        interface IListDragAndDropArgs
        {
            /*0x180980*/ int get_insertAtIndex();
            /*0x180980*/ int get_parentId();
            /*0x180980*/ int get_childIndex();
            /*0x1803b0*/ UnityEngine.UIElements.DragAndDropData get_dragAndDropData();
            /*0x180980*/ UnityEngine.UIElements.DragAndDropPosition get_dragAndDropPosition();
        }

        struct DragAndDropArgs : UnityEngine.UIElements.IListDragAndDropArgs
        {
            /*0x10*/ object <target>k__BackingField;
            /*0x18*/ int <insertAtIndex>k__BackingField;
            /*0x1c*/ int <parentId>k__BackingField;
            /*0x20*/ int <childIndex>k__BackingField;
            /*0x24*/ UnityEngine.UIElements.DragAndDropPosition <dragAndDropPosition>k__BackingField;
            /*0x28*/ UnityEngine.UIElements.DragAndDropData <dragAndDropData>k__BackingField;

            /*0x792990*/ void set_target(object value);
            /*0x834a60*/ int get_insertAtIndex();
            /*0xf0fbd0*/ void set_insertAtIndex(int value);
            /*0x837600*/ int get_parentId();
            /*0xf0fbc0*/ void set_parentId(int value);
            /*0x417e30*/ int get_childIndex();
            /*0xdcd9c0*/ void set_childIndex(int value);
            /*0x70a440*/ UnityEngine.UIElements.DragAndDropPosition get_dragAndDropPosition();
            /*0xc70b20*/ void set_dragAndDropPosition(UnityEngine.UIElements.DragAndDropPosition value);
            /*0x32f410*/ UnityEngine.UIElements.DragAndDropData get_dragAndDropData();
            /*0x7963c0*/ void set_dragAndDropData(UnityEngine.UIElements.DragAndDropData value);
        }

        enum DragAndDropPosition
        {
            OverItem = 0,
            BetweenItems = 1,
            OutsideItems = 2,
        }

        interface IDragAndDropController<TArgs>
        {
            /*0x17e620*/ bool CanStartDrag(System.Collections.Generic.IEnumerable<int> itemIds);
            UnityEngine.UIElements.StartDragArgs SetupDragAndDrop(System.Collections.Generic.IEnumerable<int> itemIds, bool skipText);
            /*0x2a5510*/ UnityEngine.UIElements.DragVisualMode HandleDragAndDrop(TArgs args);
            /*0x2a5510*/ void OnDrop(TArgs args);
            /*0x180fc0*/ void DragCleanup();
            void HandleAutoExpand(UnityEngine.UIElements.ReusableCollectionItem item, UnityEngine.Vector2 pointerPosition);
            /*0x1803b0*/ System.Collections.Generic.IEnumerable<int> GetSortedSelectedIds();
        }

        enum DragVisualMode
        {
            None = 0,
            Copy = 1,
            Move = 2,
            Rejected = 3,
        }

        struct CanStartDragArgs
        {
            /*0x10*/ UnityEngine.UIElements.VisualElement draggedElement;
            /*0x18*/ int id;
            /*0x20*/ System.Collections.Generic.IEnumerable<int> selectedIds;

            /*0x179a410*/ CanStartDragArgs(UnityEngine.UIElements.VisualElement draggedElement, int id, System.Collections.Generic.IEnumerable<int> selectedIds);
        }

        struct SetupDragAndDropArgs
        {
            /*0x10*/ UnityEngine.UIElements.VisualElement draggedElement;
            /*0x18*/ System.Collections.Generic.IEnumerable<int> selectedIds;
            /*0x20*/ UnityEngine.UIElements.StartDragArgs startDragArgs;

            /*0x17ad280*/ SetupDragAndDropArgs(UnityEngine.UIElements.VisualElement draggedElement, System.Collections.Generic.IEnumerable<int> selectedIds, UnityEngine.UIElements.StartDragArgs startDragArgs);
        }

        struct HandleDragAndDropArgs
        {
            /*0x10*/ UnityEngine.UIElements.DragAndDropArgs m_DragAndDropArgs;
            /*0x30*/ UnityEngine.Vector2 <position>k__BackingField;

            /*0x17a3ed0*/ HandleDragAndDropArgs(UnityEngine.Vector2 position, UnityEngine.UIElements.DragAndDropArgs dragAndDropArgs);
        }

        struct StartDragArgs
        {
            /*0x10*/ string <title>k__BackingField;
            /*0x18*/ UnityEngine.UIElements.DragVisualMode <visualMode>k__BackingField;
            /*0x20*/ System.Collections.Hashtable <genericData>k__BackingField;
            /*0x28*/ System.Collections.Generic.IEnumerable<UnityEngine.Object> <unityObjectReferences>k__BackingField;

            /*0x17ad390*/ StartDragArgs(string title, UnityEngine.UIElements.DragVisualMode visualMode);
            /*0x6937d0*/ string get_title();
            /*0x834a60*/ UnityEngine.UIElements.DragVisualMode get_visualMode();
            /*0x73d3e0*/ System.Collections.Hashtable get_genericData();
            /*0x9f12f0*/ void set_genericData(System.Collections.Hashtable value);
            /*0x32f410*/ System.Collections.Generic.IEnumerable<UnityEngine.Object> get_unityObjectReferences();
            /*0x7963c0*/ void set_unityObjectReferences(System.Collections.Generic.IEnumerable<UnityEngine.Object> value);
            /*0x17ad2e0*/ void SetGenericData(string key, object data);
        }

        interface IReorderable
        {
            /*0x17cb40*/ bool get_enableReordering();
            /*0x181190*/ void set_enableReordering(bool value);
        }

        class ListViewDragger : UnityEngine.UIElements.DragEventsProcessor
        {
            /*0x30*/ UnityEngine.UIElements.ListViewDragger.DragPosition m_LastDragPosition;
            /*0x50*/ UnityEngine.UIElements.VisualElement m_DragHoverBar;
            /*0x58*/ UnityEngine.UIElements.VisualElement m_DragHoverItemMarker;
            /*0x60*/ UnityEngine.UIElements.VisualElement m_DragHoverSiblingMarker;
            /*0x68*/ float m_LeftIndentation;
            /*0x6c*/ float m_SiblingBottom;
            /*0x70*/ UnityEngine.UIElements.ICollectionDragAndDropController <dragAndDropController>k__BackingField;

            /*0x17a6c30*/ ListViewDragger(UnityEngine.UIElements.BaseVerticalCollectionView listView);
            /*0x17aaa70*/ UnityEngine.UIElements.BaseVerticalCollectionView get_targetView();
            /*0x17aaa40*/ UnityEngine.UIElements.ScrollView get_targetScrollView();
            /*0xd184b0*/ UnityEngine.UIElements.ICollectionDragAndDropController get_dragAndDropController();
            /*0xe49c60*/ void set_dragAndDropController(UnityEngine.UIElements.ICollectionDragAndDropController value);
            /*0x17a7850*/ bool CanStartDrag(UnityEngine.Vector3 pointerPosition);
            /*0x17a9d70*/ UnityEngine.UIElements.StartDragArgs StartDrag(UnityEngine.Vector3 pointerPosition);
            /*0x17aa590*/ void UpdateDrag(UnityEngine.Vector3 pointerPosition);
            /*0x17a83e0*/ UnityEngine.UIElements.DragVisualMode GetVisualMode(UnityEngine.Vector3 pointerPosition, ref UnityEngine.UIElements.ListViewDragger.DragPosition dragPosition);
            /*0x17a92c0*/ void OnDrop(UnityEngine.Vector3 pointerPosition);
            /*0x17a8670*/ void HandleDragAndScroll(UnityEngine.Vector2 pointerPosition);
            /*0x17a8560*/ void HandleAutoExpansion(UnityEngine.Vector2 pointerPosition);
            /*0x17a7090*/ void ApplyDragAndDropUI(UnityEngine.UIElements.ListViewDragger.DragPosition dragPosition);
            /*0x17aa0a0*/ bool TryGetDragPosition(UnityEngine.Vector2 pointerPosition, ref UnityEngine.UIElements.ListViewDragger.DragPosition dragPosition);
            /*0x17a9050*/ void HandleTreePosition(UnityEngine.Vector2 pointerPosition, ref UnityEngine.UIElements.ListViewDragger.DragPosition dragPosition);
            /*0x17a8910*/ void HandleSiblingInsertionAtAvailableDepthsAndChangeTargetIfNeeded(ref UnityEngine.UIElements.ListViewDragger.DragPosition dragPosition, UnityEngine.Vector2 pointerPosition);
            /*0x17a8000*/ void GetPreviousAndNextItemsIgnoringDraggedItems(int insertAtIndex, ref int previousItemId, ref int nextItemId);
            /*0x17a9170*/ UnityEngine.UIElements.DragAndDropArgs MakeDragAndDropArgs(UnityEngine.UIElements.ListViewDragger.DragPosition dragPosition);
            /*0x17a7f10*/ float GetHoverBarTopPosition(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x17a9520*/ void PlaceHoverBarAtElement(UnityEngine.UIElements.ReusableCollectionItem item);
            /*0x17a9640*/ void PlaceHoverBarAt(float top, float indentationPadding, float siblingBottom);
            /*0x17a7b50*/ void ClearDragAndDropUI(bool dragCancelled);
            /*0x17a81d0*/ UnityEngine.UIElements.ReusableCollectionItem GetRecycledItem(UnityEngine.Vector3 pointerPosition);
            /*0x17aa460*/ void <ApplyDragAndDropUI>g__GeometryChangedCallback|27_0(UnityEngine.UIElements.GeometryChangedEvent e);

            struct DragPosition : System.IEquatable<UnityEngine.UIElements.ListViewDragger.DragPosition>
            {
                /*0x10*/ int insertAtIndex;
                /*0x14*/ int parentId;
                /*0x18*/ int childIndex;
                /*0x20*/ UnityEngine.UIElements.ReusableCollectionItem recycledItem;
                /*0x28*/ UnityEngine.UIElements.DragAndDropPosition dropPosition;

                /*0x179c9e0*/ bool Equals(UnityEngine.UIElements.ListViewDragger.DragPosition other);
                /*0x179c900*/ bool Equals(object obj);
                /*0x179ca40*/ int GetHashCode();
            }
        }

        class ListViewDraggerExtension
        {
            static /*0x17a6d70*/ UnityEngine.UIElements.ReusableCollectionItem GetRecycledItemFromId(UnityEngine.UIElements.BaseVerticalCollectionView listView, int id);
            static /*0x17a6f00*/ UnityEngine.UIElements.ReusableCollectionItem GetRecycledItemFromIndex(UnityEngine.UIElements.BaseVerticalCollectionView listView, int index);
        }

        class ListViewDraggerAnimated : UnityEngine.UIElements.ListViewDragger
        {
            /*0x78*/ int m_DragStartIndex;
            /*0x7c*/ int m_CurrentIndex;
            /*0x80*/ float m_SelectionHeight;
            /*0x84*/ float m_LocalOffsetOnStart;
            /*0x88*/ UnityEngine.Vector3 m_CurrentPointerPosition;
            /*0x98*/ UnityEngine.UIElements.ReusableCollectionItem m_Item;
            /*0xa0*/ UnityEngine.UIElements.ReusableCollectionItem m_OffsetItem;
            /*0xa8*/ bool <isDragging>k__BackingField;

            /*0x17a6c30*/ ListViewDraggerAnimated(UnityEngine.UIElements.BaseVerticalCollectionView listView);
            /*0x12fe980*/ bool get_isDragging();
            /*0x12fea80*/ void set_isDragging(bool value);
            /*0x9c7a50*/ UnityEngine.UIElements.ReusableCollectionItem get_draggedItem();
            /*0x348b00*/ bool get_supportsDragEvents();
            /*0x17a5b00*/ UnityEngine.UIElements.StartDragArgs StartDrag(UnityEngine.Vector3 pointerPosition);
            /*0x17a6470*/ void UpdateDrag(UnityEngine.Vector3 pointerPosition);
            /*0x17a52c0*/ void Animate(UnityEngine.UIElements.ReusableCollectionItem element, float paddingTop);
            /*0x17a5690*/ void OnDrop(UnityEngine.Vector3 pointerPosition);
            /*0x32d010*/ void ClearDragAndDropUI(bool dragCancelled);
            /*0x17a6430*/ bool TryGetDragPosition(UnityEngine.Vector2 pointerPosition, ref UnityEngine.UIElements.ListViewDragger.DragPosition dragPosition);
        }

        class ListViewReorderableDragAndDropController : UnityEngine.UIElements.BaseReorderableDragAndDropController
        {
            /*0x28*/ UnityEngine.UIElements.BaseListView m_ListView;

            /*0x17aae60*/ ListViewReorderableDragAndDropController(UnityEngine.UIElements.BaseListView view);
            /*0x17aaaf0*/ UnityEngine.UIElements.DragVisualMode HandleDragAndDrop(UnityEngine.UIElements.IListDragAndDropArgs args);
            /*0x17aabc0*/ void OnDrop(UnityEngine.UIElements.IListDragAndDropArgs args);
        }

        class TreeViewReorderableDragAndDropController : UnityEngine.UIElements.BaseReorderableDragAndDropController
        {
            /*0x28*/ UnityEngine.UIElements.TreeViewReorderableDragAndDropController.DropData m_DropData;
            /*0x30*/ UnityEngine.UIElements.BaseTreeView m_TreeView;
            /*0x38*/ UnityEngine.UIElements.IVisualElementScheduledItem m_ExpandDropItemScheduledItem;
            /*0x40*/ System.Action m_ExpandDropItemCallback;

            /*0x17aea30*/ TreeViewReorderableDragAndDropController(UnityEngine.UIElements.BaseTreeView view);
            /*0x17ad3e0*/ int CompareId(int id1, int id2);
            /*0x17ae960*/ UnityEngine.UIElements.StartDragArgs SetupDragAndDrop(System.Collections.Generic.IEnumerable<int> itemIds, bool skipText);
            /*0x17ae050*/ UnityEngine.UIElements.DragVisualMode HandleDragAndDrop(UnityEngine.UIElements.IListDragAndDropArgs args);
            /*0x17ae100*/ void OnDrop(UnityEngine.UIElements.IListDragAndDropArgs args);
            /*0x17adbe0*/ void DragCleanup();
            /*0x17ae720*/ void RestoreExpanded(System.Collections.Generic.List<int> ids);
            /*0x17aded0*/ void HandleAutoExpand(UnityEngine.UIElements.ReusableCollectionItem item, UnityEngine.Vector2 pointerPosition);
            /*0x17ada00*/ void DelayExpandDropItem();
            /*0x17adcf0*/ void ExpandDropItem();

            class DropData
            {
                /*0x10*/ int[] expandedIdsBeforeDrag;
                /*0x18*/ int[] draggedIds;
                /*0x20*/ int lastItemId;
                /*0x24*/ float expandItemBeginTimerMs;
                /*0x28*/ UnityEngine.Vector2 expandItemBeginPosition;

                /*0x179cac0*/ DropData();
            }
        }

        class DropdownMenuEventInfo
        {
            /*0x10*/ UnityEngine.EventModifiers <modifiers>k__BackingField;
            /*0x14*/ UnityEngine.Vector2 <mousePosition>k__BackingField;
            /*0x1c*/ UnityEngine.Vector2 <localMousePosition>k__BackingField;
            /*0x24*/ char <character>k__BackingField;
            /*0x28*/ UnityEngine.KeyCode <keyCode>k__BackingField;

            /*0x179cbc0*/ DropdownMenuEventInfo(UnityEngine.UIElements.EventBase e);
        }

        class DropdownMenuItem
        {
            /*0x32f970*/ DropdownMenuItem();
        }

        class DropdownMenuSeparator : UnityEngine.UIElements.DropdownMenuItem
        {
            /*0x10*/ string <subMenuPath>k__BackingField;

            /*0x49b490*/ DropdownMenuSeparator(string subMenuPath);
        }

        class DropdownMenuAction : UnityEngine.UIElements.DropdownMenuItem
        {
            /*0x10*/ string <name>k__BackingField;
            /*0x18*/ UnityEngine.UIElements.DropdownMenuAction.Status <status>k__BackingField;
            /*0x20*/ UnityEngine.UIElements.DropdownMenuEventInfo <eventInfo>k__BackingField;
            /*0x28*/ object <userData>k__BackingField;
            /*0x30*/ System.Action<UnityEngine.UIElements.DropdownMenuAction> actionCallback;
            /*0x38*/ System.Func<UnityEngine.UIElements.DropdownMenuAction, UnityEngine.UIElements.DropdownMenuAction.Status> actionStatusCallback;

            static /*0x179cae0*/ UnityEngine.UIElements.DropdownMenuAction.Status AlwaysEnabled(UnityEngine.UIElements.DropdownMenuAction a);
            static /*0x179cad0*/ UnityEngine.UIElements.DropdownMenuAction.Status AlwaysDisabled(UnityEngine.UIElements.DropdownMenuAction a);
            /*0x179cb40*/ DropdownMenuAction(string actionName, System.Action<UnityEngine.UIElements.DropdownMenuAction> actionCallback, System.Func<UnityEngine.UIElements.DropdownMenuAction, UnityEngine.UIElements.DropdownMenuAction.Status> actionStatusCallback, object userData);
            /*0x8a5c50*/ void set_status(UnityEngine.UIElements.DropdownMenuAction.Status value);
            /*0x7965a0*/ void set_eventInfo(UnityEngine.UIElements.DropdownMenuEventInfo value);
            /*0x98b030*/ void set_userData(object value);
            /*0x179caf0*/ void UpdateActionStatus(UnityEngine.UIElements.DropdownMenuEventInfo eventInfo);

            enum Status
            {
                None = 0,
                Normal = 1,
                Disabled = 2,
                Checked = 4,
                Hidden = 8,
            }
        }

        class DropdownMenu
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.DropdownMenuItem> m_MenuItems;
            /*0x18*/ UnityEngine.UIElements.DropdownMenuEventInfo m_DropdownMenuEventInfo;

            /*0x179d540*/ DropdownMenu();
            /*0x9e3110*/ System.Collections.Generic.List<UnityEngine.UIElements.DropdownMenuItem> MenuItems();
            /*0x179cf20*/ void AppendAction(string actionName, System.Action<UnityEngine.UIElements.DropdownMenuAction> action, System.Func<UnityEngine.UIElements.DropdownMenuAction, UnityEngine.UIElements.DropdownMenuAction.Status> actionStatusCallback, object userData);
            /*0x179ce00*/ void AppendAction(string actionName, System.Action<UnityEngine.UIElements.DropdownMenuAction> action, UnityEngine.UIElements.DropdownMenuAction.Status status);
            /*0x179d050*/ void AppendSeparator(string subMenuPath);
            /*0x179d190*/ void InsertSeparator(string subMenuPath, int atIndex);
            /*0x179d2e0*/ void PrepareForDisplay(UnityEngine.UIElements.EventBase e);

            class <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.UIElements.DropdownMenuAction.Status status;

                /*0x32f970*/ <>c__DisplayClass4_0();
                /*0x417e30*/ UnityEngine.UIElements.DropdownMenuAction.Status <AppendAction>b__0(UnityEngine.UIElements.DropdownMenuAction e);
            }
        }

        enum DispatchMode
        {
            Default = 1,
            Queued = 1,
            Immediate = 2,
        }

        struct EventDispatcherGate : System.IDisposable, System.IEquatable<UnityEngine.UIElements.EventDispatcherGate>
        {
            /*0x10*/ UnityEngine.UIElements.EventDispatcher m_Dispatcher;

            /*0x17a19e0*/ EventDispatcherGate(UnityEngine.UIElements.EventDispatcher d);
            /*0x17a1930*/ void Dispose();
            /*0x1720510*/ bool Equals(UnityEngine.UIElements.EventDispatcherGate other);
            /*0x17a1950*/ bool Equals(object obj);
            /*0x1720520*/ int GetHashCode();
        }

        class EventDispatcher
        {
            static int k_MaxGateDepth = 500;
            static int k_NumberOfEventsWithStackInfo = 10;
            static int k_NumberOfEventsWithEventInfo = 100;
            static /*0x0*/ UnityEngine.UIElements.ObjectPool<System.Collections.Generic.Queue<UnityEngine.UIElements.EventDispatcher.EventRecord>> k_EventQueuePool;
            static /*0x8*/ UnityEngine.UIElements.IEventDispatchingStrategy[] s_EditorStrategies;
            /*0x10*/ UnityEngine.UIElements.ClickDetector m_ClickDetector;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.IEventDispatchingStrategy> m_DispatchingStrategies;
            /*0x20*/ System.Collections.Generic.Queue<UnityEngine.UIElements.EventDispatcher.EventRecord> m_Queue;
            /*0x28*/ UnityEngine.UIElements.PointerDispatchState <pointerState>k__BackingField;
            /*0x30*/ uint m_GateCount;
            /*0x34*/ uint m_GateDepth;
            /*0x38*/ int m_DispatchStackFrame;
            /*0x40*/ UnityEngine.UIElements.EventBase m_CurrentEvent;
            /*0x48*/ System.Collections.Generic.Stack<UnityEngine.UIElements.EventDispatcher.DispatchContext> m_DispatchContexts;
            /*0x50*/ bool m_Immediate;
            /*0x51*/ bool <processingEvents>k__BackingField;

            static /*0x17a2da0*/ EventDispatcher();
            static /*0x17a1d00*/ UnityEngine.UIElements.EventDispatcher CreateForRuntime(System.Collections.Generic.IList<UnityEngine.UIElements.IEventDispatchingStrategy> strategies);
            /*0x17a32e0*/ EventDispatcher();
            /*0x17a3340*/ EventDispatcher(System.Collections.Generic.IList<UnityEngine.UIElements.IEventDispatchingStrategy> strategies);
            /*0x79a150*/ UnityEngine.UIElements.PointerDispatchState get_pointerState();
            /*0x17a3510*/ bool get_dispatchImmediately();
            /*0x17a3530*/ void set_processingEvents(bool value);
            /*0x17a1d60*/ void Dispatch(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17a1f60*/ bool HandleRecursiveState(UnityEngine.UIElements.EventBase evt);
            /*0x17a1cf0*/ void CloseGate();
            /*0x17a2370*/ void OpenGate();
            /*0x17a2440*/ void ProcessEventQueue();
            /*0x17a26e0*/ void ProcessEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
            /*0x17a1a60*/ void ApplyDispatchingStrategies(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel, bool imguiEventIsInitiallyUsed);

            struct EventRecord
            {
                /*0x10*/ UnityEngine.UIElements.EventBase m_Event;
                /*0x18*/ UnityEngine.UIElements.IPanel m_Panel;
            }

            struct DispatchContext
            {
                /*0x10*/ uint m_GateCount;
                /*0x18*/ System.Collections.Generic.Queue<UnityEngine.UIElements.EventDispatcher.EventRecord> m_Queue;
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.EventDispatcher.<> <>9;

                static /*0x17afe80*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17afcd0*/ System.Collections.Generic.Queue<UnityEngine.UIElements.EventDispatcher.EventRecord> <.cctor>b__40_0();
            }
        }

        interface IPointerCaptureEventInternal
        {
            /*0x180980*/ int get_pointerId();
        }

        class PointerCaptureEventBase<T> : UnityEngine.UIElements.EventBase<T>, UnityEngine.UIElements.IPointerCaptureEventInternal
        {
            /*0x0*/ UnityEngine.UIElements.IEventHandler <relatedTarget>k__BackingField;
            /*0x0*/ int <pointerId>k__BackingField;

            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IEventHandler target, UnityEngine.UIElements.IEventHandler relatedTarget, int pointerId);
            /*0x180fc0*/ PointerCaptureEventBase();
            /*0x17aec0*/ void set_relatedTarget(UnityEngine.UIElements.IEventHandler value);
            /*0x180980*/ int get_pointerId();
            /*0x17aa40*/ void set_pointerId(int value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
        }

        class PointerCaptureOutEvent : UnityEngine.UIElements.PointerCaptureEventBase<UnityEngine.UIElements.PointerCaptureOutEvent>
        {
            static /*0x17ad160*/ PointerCaptureOutEvent();
            /*0x17ad240*/ PointerCaptureOutEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerCaptureOutEvent.<> <>9;

                static /*0x17b0040*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af4f0*/ UnityEngine.UIElements.PointerCaptureOutEvent <.cctor>b__0_0();
            }
        }

        class PointerCaptureEvent : UnityEngine.UIElements.PointerCaptureEventBase<UnityEngine.UIElements.PointerCaptureEvent>
        {
            static /*0x17ad040*/ PointerCaptureEvent();
            /*0x17ad120*/ PointerCaptureEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerCaptureEvent.<> <>9;

                static /*0x17b0270*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af640*/ UnityEngine.UIElements.PointerCaptureEvent <.cctor>b__0_0();
            }
        }

        class MouseCaptureEventBase<T> : UnityEngine.UIElements.PointerCaptureEventBase<T>
        {
            /*0x180fc0*/ MouseCaptureEventBase();
            /*0x180fc0*/ void Init();
        }

        class MouseCaptureOutEvent : UnityEngine.UIElements.MouseCaptureEventBase<UnityEngine.UIElements.MouseCaptureOutEvent>
        {
            static /*0x17ab580*/ MouseCaptureOutEvent();
            /*0x17ab660*/ MouseCaptureOutEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseCaptureOutEvent.<> <>9;

                static /*0x17b0430*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af560*/ UnityEngine.UIElements.MouseCaptureOutEvent <.cctor>b__0_0();
            }
        }

        class MouseCaptureEvent : UnityEngine.UIElements.MouseCaptureEventBase<UnityEngine.UIElements.MouseCaptureEvent>
        {
            static /*0x17ab460*/ MouseCaptureEvent();
            /*0x17ab540*/ MouseCaptureEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseCaptureEvent.<> <>9;

                static /*0x17afda0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af2c0*/ UnityEngine.UIElements.MouseCaptureEvent <.cctor>b__0_0();
            }
        }

        class ChangeEvent<T> : UnityEngine.UIElements.EventBase<UnityEngine.UIElements.ChangeEvent<T>>
        {
            /*0x0*/ T <previousValue>k__BackingField;
            /*0x0*/ T <newValue>k__BackingField;

            static /*0x180ff0*/ ChangeEvent();
            static /*0x2a5510*/ UnityEngine.UIElements.ChangeEvent<T> GetPooled(T previousValue, T newValue);
            /*0x180fc0*/ ChangeEvent();
            /*0x2a5510*/ T get_previousValue();
            /*0x2a5510*/ void set_previousValue(T value);
            /*0x2a5510*/ T get_newValue();
            /*0x2a5510*/ void set_newValue(T value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();

            class <>c<T>
            {
                static /*0x0*/ UnityEngine.UIElements.ChangeEvent.<>c<T> <>9;

                static /*0x180ff0*/ <>c();
                /*0x180fc0*/ <>c();
                /*0x1803b0*/ UnityEngine.UIElements.ChangeEvent<T> <.cctor>b__0_0();
            }
        }

        class CommandEventDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            /*0x32f970*/ CommandEventDispatchingStrategy();
            /*0x179a460*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x179a4a0*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        interface ICommandEvent
        {
        }

        class CommandEventBase<T> : UnityEngine.UIElements.EventBase<T>, UnityEngine.UIElements.ICommandEvent
        {
            /*0x0*/ string m_CommandName;

            static /*0x2a5510*/ T GetPooled(UnityEngine.Event systemEvent);
            static /*0x2a5510*/ T GetPooled(string commandName);
            /*0x180fc0*/ CommandEventBase();
            /*0x1803b0*/ string get_commandName();
            /*0x17aec0*/ void set_commandName(string value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
        }

        class ValidateCommandEvent : UnityEngine.UIElements.CommandEventBase<UnityEngine.UIElements.ValidateCommandEvent>
        {
            static /*0x17b0740*/ ValidateCommandEvent();
            /*0x17b0820*/ ValidateCommandEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.ValidateCommandEvent.<> <>9;

                static /*0x17b04a0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af9e0*/ UnityEngine.UIElements.ValidateCommandEvent <.cctor>b__0_0();
            }
        }

        class ExecuteCommandEvent : UnityEngine.UIElements.CommandEventBase<UnityEngine.UIElements.ExecuteCommandEvent>
        {
            static /*0x17a3540*/ ExecuteCommandEvent();
            /*0x17a3620*/ ExecuteCommandEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.ExecuteCommandEvent.<> <>9;

                static /*0x17afd30*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af840*/ UnityEngine.UIElements.ExecuteCommandEvent <.cctor>b__0_0();
            }
        }

        class DefaultDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            /*0x32f970*/ DefaultDispatchingStrategy();
            /*0x179a7a0*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x179a820*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        class ElementUnderPointer
        {
            /*0x10*/ UnityEngine.UIElements.VisualElement[] m_PendingTopElementUnderPointer;
            /*0x18*/ UnityEngine.UIElements.VisualElement[] m_TopElementUnderPointer;
            /*0x20*/ UnityEngine.UIElements.IPointerEvent[] m_TriggerPointerEvent;
            /*0x28*/ UnityEngine.UIElements.IMouseEvent[] m_TriggerMouseEvent;
            /*0x30*/ UnityEngine.Vector2[] m_PickingPointerPositions;
            /*0x38*/ bool[] m_IsPickingPointerTemporaries;

            /*0x179eaf0*/ ElementUnderPointer();
            /*0x179e520*/ UnityEngine.UIElements.VisualElement GetTopElementUnderPointer(int pointerId, ref UnityEngine.Vector2 pickPosition, ref bool isTemporary);
            /*0x171de40*/ UnityEngine.UIElements.VisualElement GetTopElementUnderPointer(int pointerId);
            /*0x179e940*/ void SetElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, int pointerId, UnityEngine.Vector2 pointerPos);
            /*0x179e420*/ UnityEngine.Vector2 GetEventPointerPosition(UnityEngine.UIElements.EventBase triggerEvent);
            /*0x179ead0*/ void SetTemporaryElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, int pointerId, UnityEngine.UIElements.EventBase triggerEvent);
            /*0x179e920*/ void SetElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, int pointerId, UnityEngine.UIElements.EventBase triggerEvent);
            /*0x179e590*/ void SetElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, int pointerId, UnityEngine.UIElements.EventBase triggerEvent, bool temporary);
            /*0x179d5c0*/ void CommitElementUnderPointers(UnityEngine.UIElements.EventDispatcher dispatcher, UnityEngine.UIElements.ContextType contextType);
        }

        class EventBase : System.IDisposable
        {
            static /*0x0*/ long s_LastTypeId;
            static /*0x8*/ ulong s_NextEventId;
            /*0x10*/ UnityEngine.UIElements.EventCategory <eventCategory>k__BackingField;
            /*0x18*/ long <timestamp>k__BackingField;
            /*0x20*/ ulong <eventId>k__BackingField;
            /*0x28*/ ulong <triggerEventId>k__BackingField;
            /*0x30*/ UnityEngine.UIElements.EventBase.EventPropagation <propagation>k__BackingField;
            /*0x38*/ UnityEngine.UIElements.PropagationPaths <path>k__BackingField;
            /*0x40*/ UnityEngine.UIElements.EventBase.LifeCycleStatus <lifeCycleStatus>k__BackingField;
            /*0x48*/ UnityEngine.UIElements.IEventHandler <leafTarget>k__BackingField;
            /*0x50*/ UnityEngine.UIElements.IEventHandler m_Target;
            /*0x58*/ System.Collections.Generic.List<UnityEngine.UIElements.IEventHandler> <skipElements>k__BackingField;
            /*0x60*/ UnityEngine.UIElements.PropagationPhase <propagationPhase>k__BackingField;
            /*0x68*/ UnityEngine.UIElements.IEventHandler m_CurrentTarget;
            /*0x70*/ UnityEngine.Event m_ImguiEvent;
            /*0x78*/ UnityEngine.Vector2 <originalMousePosition>k__BackingField;

            static /*0x179ef10*/ long RegisterEventType();
            /*0x179f0a0*/ EventBase();
            /*0x179eff0*/ EventBase(UnityEngine.UIElements.EventCategory category);
            /*0xec2ad0*/ long get_eventTypeId();
            /*0x417e30*/ UnityEngine.UIElements.EventCategory get_eventCategory();
            /*0x32f410*/ long get_timestamp();
            /*0xdd51f0*/ void set_timestamp(long value);
            /*0x61a260*/ ulong get_eventId();
            /*0x10cb140*/ void set_eventId(ulong value);
            /*0x179ef60*/ void set_triggerEventId(ulong value);
            /*0x179ef60*/ void SetTriggerEventId(ulong id);
            /*0xa79cc0*/ UnityEngine.UIElements.EventBase.EventPropagation get_propagation();
            /*0xa79cd0*/ void set_propagation(UnityEngine.UIElements.EventBase.EventPropagation value);
            /*0x995140*/ UnityEngine.UIElements.PropagationPaths get_path();
            /*0xe5a080*/ void set_path(UnityEngine.UIElements.PropagationPaths value);
            /*0xbe6be0*/ UnityEngine.UIElements.EventBase.LifeCycleStatus get_lifeCycleStatus();
            /*0xbe6cc0*/ void set_lifeCycleStatus(UnityEngine.UIElements.EventBase.LifeCycleStatus value);
            /*0x32d010*/ void PreDispatch();
            /*0x179eee0*/ void PreDispatch(UnityEngine.UIElements.IPanel panel);
            /*0x32d010*/ void PostDispatch();
            /*0x179eeb0*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);
            /*0x179f150*/ bool get_bubbles();
            /*0x179f260*/ bool get_tricklesDown();
            /*0x179f140*/ bool get_bubblesOrTricklesDown();
            /*0x179f240*/ bool get_skipDisabledElements();
            /*0x179f5e0*/ void set_skipDisabledElements(bool value);
            /*0x179f180*/ bool get_ignoreCompositeRoots();
            /*0x179f3f0*/ void set_ignoreCompositeRoots(bool value);
            /*0x4e40d0*/ UnityEngine.UIElements.IEventHandler get_leafTarget();
            /*0x4e4360*/ void set_leafTarget(UnityEngine.UIElements.IEventHandler value);
            /*0x16346a0*/ UnityEngine.UIElements.IEventHandler get_target();
            /*0x179f620*/ void set_target(UnityEngine.UIElements.IEventHandler value);
            /*0xb61940*/ System.Collections.Generic.List<UnityEngine.UIElements.IEventHandler> get_skipElements();
            /*0x179ef70*/ bool Skip(UnityEngine.UIElements.IEventHandler h);
            /*0x179f1d0*/ bool get_isPropagationStopped();
            /*0x179f540*/ void set_isPropagationStopped(bool value);
            /*0x179efe0*/ void StopPropagation();
            /*0x179f1c0*/ bool get_isImmediatePropagationStopped();
            /*0x179f520*/ void set_isImmediatePropagationStopped(bool value);
            /*0x179efd0*/ void StopImmediatePropagation();
            /*0x179f1b0*/ bool get_isDefaultPrevented();
            /*0x179f500*/ void set_isDefaultPrevented(bool value);
            /*0x179ef00*/ void PreventDefault();
            /*0xf91dd0*/ UnityEngine.UIElements.PropagationPhase get_propagationPhase();
            /*0xf91480*/ void set_propagationPhase(UnityEngine.UIElements.PropagationPhase value);
            /*0x16345b0*/ UnityEngine.UIElements.IEventHandler get_currentTarget();
            /*0x179f270*/ void set_currentTarget(UnityEngine.UIElements.IEventHandler value);
            /*0x179f160*/ bool get_dispatch();
            /*0x179f3b0*/ void set_dispatch(bool value);
            /*0x179ee30*/ void MarkReceivedByDispatcher();
            /*0x179f170*/ bool get_dispatched();
            /*0x179f3d0*/ void set_dispatched(bool value);
            /*0x179f220*/ bool get_processed();
            /*0x179f5a0*/ void set_processed(bool value);
            /*0x179f210*/ bool get_processedByFocusController();
            /*0x179f580*/ void set_processedByFocusController(bool value);
            /*0x179f250*/ bool get_stopDispatch();
            /*0x179f600*/ void set_stopDispatch(bool value);
            /*0x179f230*/ bool get_propagateToIMGUI();
            /*0x179f5c0*/ void set_propagateToIMGUI(bool value);
            /*0x179f190*/ bool get_imguiEventIsValid();
            /*0x179f410*/ void set_imguiEventIsValid(bool value);
            /*0x179f1a0*/ UnityEngine.Event get_imguiEvent();
            /*0x179f430*/ void set_imguiEvent(UnityEngine.Event value);
            /*0x179f1e0*/ UnityEngine.Vector2 get_originalMousePosition();
            /*0x12a10b0*/ void set_originalMousePosition(UnityEngine.Vector2 value);
            /*0x179ec80*/ void Init();
            /*0x179ec90*/ void LocalInit();
            /*0x179f200*/ bool get_pooled();
            /*0x179f560*/ void set_pooled(bool value);
            /*0x180fc0*/ void Acquire();
            /*0x180fc0*/ void Dispose();

            enum EventPropagation
            {
                None = 0,
                Bubbles = 1,
                TricklesDown = 2,
                Cancellable = 4,
                SkipDisabledElements = 8,
                IgnoreCompositeRoots = 16,
            }

            enum LifeCycleStatus
            {
                None = 0,
                PropagationStopped = 1,
                ImmediatePropagationStopped = 2,
                DefaultPrevented = 4,
                Dispatching = 8,
                Pooled = 16,
                IMGUIEventIsValid = 32,
                StopDispatch = 64,
                PropagateToIMGUI = 128,
                Dispatched = 512,
                Processed = 1024,
                ProcessedByFocusController = 2048,
            }
        }

        class EventBase<T> : UnityEngine.UIElements.EventBase
        {
            static /*0x0*/ long s_TypeId;
            static /*0x0*/ UnityEngine.UIElements.ObjectPool<T> s_Pool;
            static /*0x0*/ UnityEngine.UIElements.EventCategory EventCategory;
            /*0x0*/ int m_RefCount;

            static /*0x180ff0*/ EventBase();
            static /*0x177be0*/ void SetCreateFunction(System.Func<T> createMethod);
            static /*0x180cf0*/ long TypeId();
            static /*0x2a5510*/ T GetPooled();
            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.EventBase e);
            static /*0x2a5510*/ void ReleasePooled(T evt);
            /*0x180fc0*/ EventBase();
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void Acquire();
            /*0x180fc0*/ void Dispose();
            long get_eventTypeId();

            class <>c<T>
            {
                static /*0x0*/ UnityEngine.UIElements.EventBase.<>c<T> <>9;

                static /*0x180ff0*/ <>c();
                /*0x180fc0*/ <>c();
                /*0x2a5510*/ T <.cctor>b__15_0();
            }
        }

        class EventCallback<TEventType> : System.MulticastDelegate
        {
            EventCallback(object object, nint method);
            /*0x2a5510*/ void Invoke(TEventType evt);
        }

        class EventCallback<TEventType, TCallbackArgs> : System.MulticastDelegate
        {
            EventCallback(object object, nint method);
            /*0x2a5510*/ void Invoke(TEventType evt, TCallbackArgs userArgs);
        }

        class EventCallbackFunctorBase
        {
            /*0x10*/ UnityEngine.UIElements.CallbackPhase <phase>k__BackingField;
            /*0x14*/ UnityEngine.UIElements.InvokePolicy <invokePolicy>k__BackingField;

            /*0x179f690*/ EventCallbackFunctorBase(UnityEngine.UIElements.CallbackPhase phase, UnityEngine.UIElements.InvokePolicy invokePolicy);
            /*0x417e30*/ UnityEngine.UIElements.CallbackPhase get_phase();
            /*0x70a440*/ UnityEngine.UIElements.InvokePolicy get_invokePolicy();
            /*0x182a70*/ void Invoke(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.PropagationPhase propagationPhase);
            bool IsEquivalentTo(long eventTypeId, System.Delegate callback, UnityEngine.UIElements.CallbackPhase phase);
            /*0x179f660*/ bool PhaseMatches(UnityEngine.UIElements.PropagationPhase propagationPhase);
        }

        class EventCallbackFunctor<TEventType> : UnityEngine.UIElements.EventCallbackFunctorBase
        {
            /*0x0*/ UnityEngine.UIElements.EventCallback<TEventType> m_Callback;
            /*0x0*/ long m_EventTypeId;

            EventCallbackFunctor(UnityEngine.UIElements.EventCallback<TEventType> callback, UnityEngine.UIElements.CallbackPhase phase, UnityEngine.UIElements.InvokePolicy invokePolicy);
            /*0x182a70*/ void Invoke(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.PropagationPhase propagationPhase);
            bool IsEquivalentTo(long eventTypeId, System.Delegate callback, UnityEngine.UIElements.CallbackPhase phase);
        }

        class EventCallbackFunctor<TEventType, TCallbackArgs> : UnityEngine.UIElements.EventCallbackFunctorBase
        {
            /*0x0*/ UnityEngine.UIElements.EventCallback<TEventType, TCallbackArgs> m_Callback;
            /*0x0*/ long m_EventTypeId;
            /*0x0*/ TCallbackArgs <userArgs>k__BackingField;

            /*0x2a5510*/ EventCallbackFunctor(UnityEngine.UIElements.EventCallback<TEventType, TCallbackArgs> callback, TCallbackArgs userArgs, UnityEngine.UIElements.CallbackPhase phase, UnityEngine.UIElements.InvokePolicy invokePolicy);
            /*0x2a5510*/ TCallbackArgs get_userArgs();
            /*0x2a5510*/ void set_userArgs(TCallbackArgs value);
            /*0x182a70*/ void Invoke(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.PropagationPhase propagationPhase);
            bool IsEquivalentTo(long eventTypeId, System.Delegate callback, UnityEngine.UIElements.CallbackPhase phase);
        }

        enum TrickleDown
        {
            NoTrickleDown = 0,
            TrickleDown = 1,
        }

        enum CallbackPhase
        {
            TargetAndBubbleUp = 1,
            TrickleDownAndTarget = 2,
        }

        enum InvokePolicy
        {
            Default = 0,
            IncludeDisabled = 1,
        }

        class EventCallbackListPool
        {
            /*0x10*/ System.Collections.Generic.Stack<UnityEngine.UIElements.EventCallbackList> m_Stack;

            /*0x179f920*/ EventCallbackListPool();
            /*0x179f6d0*/ UnityEngine.UIElements.EventCallbackList Get(UnityEngine.UIElements.EventCallbackList initializer);
            /*0x179f870*/ void Release(UnityEngine.UIElements.EventCallbackList element);
        }

        class EventCallbackList
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.EventCallbackFunctorBase> m_List;
            /*0x18*/ int <trickleDownCallbackCount>k__BackingField;
            /*0x1c*/ int <bubbleUpCallbackCount>k__BackingField;

            /*0x179ff50*/ EventCallbackList();
            /*0x179ffd0*/ EventCallbackList(UnityEngine.UIElements.EventCallbackList source);
            /*0x8a5c20*/ int get_trickleDownCallbackCount();
            /*0x8a5c50*/ void set_trickleDownCallbackCount(int value);
            /*0xc70b00*/ int get_bubbleUpCallbackCount();
            /*0xc70b50*/ void set_bubbleUpCallbackCount(int value);
            /*0x179fc30*/ bool Contains(long eventTypeId, System.Delegate callback, UnityEngine.UIElements.CallbackPhase phase);
            /*0x179fd30*/ UnityEngine.UIElements.EventCallbackFunctorBase Find(long eventTypeId, System.Delegate callback, UnityEngine.UIElements.CallbackPhase phase);
            /*0x179fe30*/ bool Remove(long eventTypeId, System.Delegate callback, UnityEngine.UIElements.CallbackPhase phase);
            /*0x179faf0*/ void Add(UnityEngine.UIElements.EventCallbackFunctorBase item);
            /*0x179f9a0*/ void AddRange(UnityEngine.UIElements.EventCallbackList list);
            /*0x17a0070*/ int get_Count();
            /*0x17a00b0*/ UnityEngine.UIElements.EventCallbackFunctorBase get_Item(int i);
            /*0x179fbc0*/ void Clear();
        }

        class EventCallbackRegistry
        {
            static /*0x0*/ UnityEngine.UIElements.EventCallbackListPool s_ListPool;
            /*0x10*/ UnityEngine.UIElements.EventCallbackList m_Callbacks;
            /*0x18*/ UnityEngine.UIElements.EventCallbackList m_TemporaryCallbacks;
            /*0x20*/ int m_IsInvoking;

            static /*0x17a0950*/ EventCallbackRegistry();
            static /*0x17a0210*/ UnityEngine.UIElements.EventCallbackList GetCallbackList(UnityEngine.UIElements.EventCallbackList initializer);
            static /*0x17a0660*/ void ReleaseCallbackList(UnityEngine.UIElements.EventCallbackList toRelease);
            /*0x17a0a30*/ EventCallbackRegistry();
            /*0x17a0130*/ UnityEngine.UIElements.EventCallbackList GetCallbackListForWriting();
            /*0x17a0110*/ UnityEngine.UIElements.EventCallbackList GetCallbackListForReading();
            /*0x17a0760*/ bool UnregisterCallback(long eventTypeId, System.Delegate callback, UnityEngine.UIElements.TrickleDown useTrickleDown);
            void RegisterCallback<TEventType>(UnityEngine.UIElements.EventCallback<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown, UnityEngine.UIElements.InvokePolicy invokePolicy);
            /*0x2a5510*/ void RegisterCallback<TEventType, TCallbackArgs>(UnityEngine.UIElements.EventCallback<TEventType, TCallbackArgs> callback, TCallbackArgs userArgs, UnityEngine.UIElements.TrickleDown useTrickleDown, UnityEngine.UIElements.InvokePolicy invokePolicy);
            bool UnregisterCallback<TEventType>(UnityEngine.UIElements.EventCallback<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown);
            /*0x17a0430*/ void InvokeCallbacks(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.PropagationPhase propagationPhase);
            /*0x17a0410*/ bool HasTrickleDownHandlers();
            /*0x17a03f0*/ bool HasBubbleHandlers();
        }

        struct EventDebuggerLogCall : System.IDisposable
        {
            /*0x32d010*/ EventDebuggerLogCall(System.Delegate callback, UnityEngine.UIElements.EventBase evt);
            /*0x32d010*/ void Dispose();
        }

        struct EventDebuggerLogIMGUICall : System.IDisposable
        {
            /*0x32d010*/ EventDebuggerLogIMGUICall(UnityEngine.UIElements.EventBase evt);
            /*0x32d010*/ void Dispose();
        }

        struct EventDebuggerLogExecuteDefaultAction : System.IDisposable
        {
            /*0x32d010*/ EventDebuggerLogExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x32d010*/ void Dispose();
        }

        class EventDebugger
        {
            static /*0x32d010*/ void LogPropagationPaths(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.PropagationPaths paths);
        }

        interface IEventHandler
        {
            /*0x17aec0*/ void SendEvent(UnityEngine.UIElements.EventBase e);
            /*0x17aec0*/ void HandleEvent(UnityEngine.UIElements.EventBase evt);
        }

        class CallbackEventHandler : UnityEngine.UIElements.IEventHandler
        {
            static string ExecuteDefaultActionName = "ExecuteDefaultAction";
            static string ExecuteDefaultActionAtTargetName = "ExecuteDefaultActionAtTarget";
            /*0x10*/ bool isIMGUIContainer;
            /*0x18*/ UnityEngine.UIElements.EventCallbackRegistry m_CallbackRegistry;

            /*0x179a400*/ CallbackEventHandler();
            /*0x182a70*/ void RegisterCallback<TEventType>(UnityEngine.UIElements.EventCallback<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown);
            /*0x180fc0*/ void AddEventCategories<TEventType>();
            /*0x2a5510*/ void RegisterCallback<TEventType, TUserArgsType>(UnityEngine.UIElements.EventCallback<TEventType, TUserArgsType> callback, TUserArgsType userArgs, UnityEngine.UIElements.TrickleDown useTrickleDown);
            void RegisterCallback<TEventType>(UnityEngine.UIElements.EventCallback<TEventType> callback, UnityEngine.UIElements.InvokePolicy invokePolicy, UnityEngine.UIElements.TrickleDown useTrickleDown);
            /*0x182a70*/ void UnregisterCallback<TEventType>(UnityEngine.UIElements.EventCallback<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown);
            /*0x17aec0*/ void SendEvent(UnityEngine.UIElements.EventBase e);
            /*0x182a70*/ void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x179a020*/ void HandleEventAtTargetPhase(UnityEngine.UIElements.EventBase evt);
            /*0x1799f70*/ void HandleEventAtTargetAndDefaultPhase(UnityEngine.UIElements.EventBase evt);
            /*0x10a3660*/ void HandleEventAtCurrentTargetAndPhase(UnityEngine.UIElements.EventBase evt);
            /*0x10a3660*/ void UnityEngine.UIElements.IEventHandler.HandleEvent(UnityEngine.UIElements.EventBase evt);
            /*0x179a0a0*/ void HandleEvent(UnityEngine.UIElements.EventBase evt);
            /*0x179a3d0*/ bool HasTrickleDownHandlers();
            /*0x179a3a0*/ bool HasBubbleUpHandlers();
            /*0x32d010*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x32d010*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x32d010*/ void ExecuteDefaultActionDisabledAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x32d010*/ void ExecuteDefaultActionDisabled(UnityEngine.UIElements.EventBase evt);
        }

        class FocusEventBase<T> : UnityEngine.UIElements.EventBase<T>
        {
            /*0x0*/ UnityEngine.UIElements.Focusable <relatedTarget>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.FocusChangeDirection <direction>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.FocusController <focusController>k__BackingField;
            /*0x0*/ bool <IsFocusDelegated>k__BackingField;

            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IEventHandler target, UnityEngine.UIElements.Focusable relatedTarget, UnityEngine.UIElements.FocusChangeDirection direction, UnityEngine.UIElements.FocusController focusController, bool bIsFocusDelegated);
            /*0x180fc0*/ FocusEventBase();
            /*0x1803b0*/ UnityEngine.UIElements.Focusable get_relatedTarget();
            /*0x17aec0*/ void set_relatedTarget(UnityEngine.UIElements.Focusable value);
            /*0x1803b0*/ UnityEngine.UIElements.FocusChangeDirection get_direction();
            /*0x17aec0*/ void set_direction(UnityEngine.UIElements.FocusChangeDirection value);
            /*0x1803b0*/ UnityEngine.UIElements.FocusController get_focusController();
            /*0x17aec0*/ void set_focusController(UnityEngine.UIElements.FocusController value);
            /*0x17cb40*/ bool get_IsFocusDelegated();
            /*0x181190*/ void set_IsFocusDelegated(bool value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
        }

        class FocusOutEvent : UnityEngine.UIElements.FocusEventBase<UnityEngine.UIElements.FocusOutEvent>
        {
            static /*0x17a3ad0*/ FocusOutEvent();
            /*0x17a3bb0*/ FocusOutEvent();
            /*0x17a3a80*/ void Init();
            /*0x175ebb0*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.FocusOutEvent.<> <>9;

                static /*0x17b06d0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af3a0*/ UnityEngine.UIElements.FocusOutEvent <.cctor>b__0_0();
            }
        }

        class BlurEvent : UnityEngine.UIElements.FocusEventBase<UnityEngine.UIElements.BlurEvent>
        {
            static /*0x1799e50*/ BlurEvent();
            /*0x1799f30*/ BlurEvent();
            /*0x1799dd0*/ void PreDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.BlurEvent.<> <>9;

                static /*0x17aff60*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17afa50*/ UnityEngine.UIElements.BlurEvent <.cctor>b__0_0();
            }
        }

        class FocusInEvent : UnityEngine.UIElements.FocusEventBase<UnityEngine.UIElements.FocusInEvent>
        {
            static /*0x17a3950*/ FocusInEvent();
            /*0x17a3a30*/ FocusInEvent();
            /*0x17a3900*/ void Init();
            /*0x175ebb0*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.FocusInEvent.<> <>9;

                static /*0x17b0190*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17afb30*/ UnityEngine.UIElements.FocusInEvent <.cctor>b__0_0();
            }
        }

        class FocusEvent : UnityEngine.UIElements.FocusEventBase<UnityEngine.UIElements.FocusEvent>
        {
            static /*0x17a37e0*/ FocusEvent();
            /*0x17a38c0*/ FocusEvent();
            /*0x17a3730*/ void PreDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.FocusEvent.<> <>9;

                static /*0x17b05f0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af8b0*/ UnityEngine.UIElements.FocusEvent <.cctor>b__0_0();
            }
        }

        enum PropagationPhase
        {
            None = 0,
            TrickleDown = 1,
            AtTarget = 2,
            DefaultActionAtTarget = 5,
            BubbleUp = 3,
            DefaultAction = 4,
        }

        interface IEventDispatchingStrategy
        {
            /*0x17e620*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x183150*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        class EventDispatchUtilities
        {
            static /*0x17a1340*/ void PropagateEvent(UnityEngine.UIElements.EventBase evt);
            static /*0x17a0b70*/ void HandleEventAcrossPropagationPath(UnityEngine.UIElements.EventBase evt);
            static /*0x17a14c0*/ void PropagateToIMGUIContainer(UnityEngine.UIElements.VisualElement root, UnityEngine.UIElements.EventBase evt);
            static /*0x17a0a50*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
        }

        class IMGUIEventDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            /*0x32f970*/ IMGUIEventDispatchingStrategy();
            /*0x17a3ef0*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17a3f70*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        class InputEvent : UnityEngine.UIElements.EventBase<UnityEngine.UIElements.InputEvent>
        {
            /*0x88*/ string <previousData>k__BackingField;
            /*0x90*/ string <newData>k__BackingField;

            static /*0x17a4170*/ InputEvent();
            static /*0x17a3ff0*/ UnityEngine.UIElements.InputEvent GetPooled(string previousData, string newData);
            /*0x17a4250*/ InputEvent();
            /*0x737e30*/ void set_previousData(string value);
            /*0x737b80*/ void set_newData(string value);
            /*0x17a40a0*/ void Init();
            /*0x17a4120*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.InputEvent.<> <>9;

                static /*0x17b0200*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af920*/ UnityEngine.UIElements.InputEvent <.cctor>b__0_0();
            }
        }

        class KeyboardEventDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            /*0x32f970*/ KeyboardEventDispatchingStrategy();
            /*0x17a4f70*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17a4fb0*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        interface IKeyboardEvent
        {
            /*0x180980*/ UnityEngine.EventModifiers get_modifiers();
            /*0x180560*/ char get_character();
            /*0x180980*/ UnityEngine.KeyCode get_keyCode();
        }

        class KeyboardEventBase<T> : UnityEngine.UIElements.EventBase<T>, UnityEngine.UIElements.IKeyboardEvent
        {
            /*0x0*/ UnityEngine.EventModifiers <modifiers>k__BackingField;
            /*0x0*/ char <character>k__BackingField;
            /*0x0*/ UnityEngine.KeyCode <keyCode>k__BackingField;

            static /*0x2a5510*/ T GetPooled(UnityEngine.Event systemEvent);
            /*0x180fc0*/ KeyboardEventBase();
            /*0x180980*/ UnityEngine.EventModifiers get_modifiers();
            /*0x17aa40*/ void set_modifiers(UnityEngine.EventModifiers value);
            /*0x180560*/ char get_character();
            void set_character(char value);
            /*0x180980*/ UnityEngine.KeyCode get_keyCode();
            /*0x17aa40*/ void set_keyCode(UnityEngine.KeyCode value);
            /*0x17cb40*/ bool get_shiftKey();
            /*0x17cb40*/ bool get_ctrlKey();
            /*0x17cb40*/ bool get_commandKey();
            /*0x17cb40*/ bool get_altKey();
            /*0x17cb40*/ bool get_functionKey();
            /*0x17cb40*/ bool get_actionKey();
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
        }

        class KeyDownEvent : UnityEngine.UIElements.KeyboardEventBase<UnityEngine.UIElements.KeyDownEvent>
        {
            static /*0x17a4d30*/ KeyDownEvent();
            /*0x17a4e10*/ KeyDownEvent();
            /*0x17a4460*/ void GetEquivalentImguiEvent(UnityEngine.Event outImguiEvent);
            /*0x17a4540*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);
            /*0x17a45f0*/ void SendEquivalentNavigationEventIfAny(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.KeyDownEvent.<> <>9;

                static /*0x17b03c0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17afac0*/ UnityEngine.UIElements.KeyDownEvent <.cctor>b__0_0();
            }
        }

        class KeyboardEventExtensions
        {
            static /*0x17a51f0*/ bool ShouldSendNavigationMoveEvent(UnityEngine.UIElements.KeyDownEvent e);
            static /*0x17a51a0*/ bool ShouldSendNavigationMoveEventRuntime(UnityEngine.Event e);
        }

        class KeyUpEvent : UnityEngine.UIElements.KeyboardEventBase<UnityEngine.UIElements.KeyUpEvent>
        {
            static /*0x17a4e50*/ KeyUpEvent();
            /*0x17a4f30*/ KeyUpEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.KeyUpEvent.<> <>9;

                static /*0x17b0580*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af720*/ UnityEngine.UIElements.KeyUpEvent <.cctor>b__0_0();
            }
        }

        class GeometryChangedEvent : UnityEngine.UIElements.EventBase<UnityEngine.UIElements.GeometryChangedEvent>
        {
            /*0x88*/ UnityEngine.Rect <oldRect>k__BackingField;
            /*0x98*/ UnityEngine.Rect <newRect>k__BackingField;
            /*0xa8*/ int <layoutPass>k__BackingField;

            static /*0x17a3d50*/ GeometryChangedEvent();
            static /*0x17a3c00*/ UnityEngine.UIElements.GeometryChangedEvent GetPooled(UnityEngine.Rect oldRect, UnityEngine.Rect newRect);
            /*0x17a3e30*/ GeometryChangedEvent();
            /*0x17a3c90*/ void Init();
            /*0x17a3d00*/ void LocalInit();
            /*0x737b00*/ UnityEngine.Rect get_oldRect();
            /*0x737ce0*/ void set_oldRect(UnityEngine.Rect value);
            /*0x7378e0*/ UnityEngine.Rect get_newRect();
            /*0x737b60*/ void set_newRect(UnityEngine.Rect value);
            /*0xb69a60*/ int get_layoutPass();
            /*0xb69b10*/ void set_layoutPass(int value);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.GeometryChangedEvent.<> <>9;

                static /*0x17b0510*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17afc10*/ UnityEngine.UIElements.GeometryChangedEvent <.cctor>b__0_0();
            }
        }

        class MouseCaptureDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            /*0x32f970*/ MouseCaptureDispatchingStrategy();
            /*0x17aaea0*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17aaf20*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);

            enum EventBehavior
            {
                None = 0,
                IsCapturable = 1,
                IsSentExclusivelyToCapturingElement = 2,
            }
        }

        class MouseEventDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            static /*0x17ac490*/ bool SendEventToTarget(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.BaseVisualElementPanel panel);
            static /*0x17ac3c0*/ bool SendEventToRegularTarget(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.BaseVisualElementPanel panel);
            static /*0x17ac200*/ bool SendEventToIMGUIContainer(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.BaseVisualElementPanel panel);
            static /*0x17ac570*/ void SetBestTargetForEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.BaseVisualElementPanel panel);
            static /*0x17ac660*/ void UpdateElementUnderMouse(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.BaseVisualElementPanel panel, ref UnityEngine.UIElements.VisualElement elementUnderMouse);
            static /*0x17ac1c0*/ bool IsDone(UnityEngine.UIElements.EventBase evt);
            /*0x32f970*/ MouseEventDispatchingStrategy();
            /*0x17abde0*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17abe20*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel iPanel);
        }

        interface IMouseEvent
        {
            /*0x180980*/ UnityEngine.EventModifiers get_modifiers();
            UnityEngine.Vector2 get_mousePosition();
            UnityEngine.Vector2 get_localMousePosition();
            UnityEngine.Vector2 get_mouseDelta();
            /*0x180980*/ int get_clickCount();
            /*0x180980*/ int get_button();
            /*0x180980*/ int get_pressedButtons();
            /*0x17cb40*/ bool get_shiftKey();
            /*0x17cb40*/ bool get_ctrlKey();
            /*0x17cb40*/ bool get_commandKey();
            /*0x17cb40*/ bool get_altKey();
        }

        interface IMouseEventInternal
        {
            /*0x17cb40*/ bool get_triggeredByOS();
            /*0x181190*/ void set_triggeredByOS(bool value);
            /*0x17cb40*/ bool get_recomputeTopElementUnderMouse();
            /*0x181190*/ void set_recomputeTopElementUnderMouse(bool value);
            /*0x1803b0*/ UnityEngine.UIElements.IPointerEvent get_sourcePointerEvent();
            /*0x17aec0*/ void set_sourcePointerEvent(UnityEngine.UIElements.IPointerEvent value);
        }

        class MouseEventBase<T> : UnityEngine.UIElements.EventBase<T>, UnityEngine.UIElements.IMouseEvent, UnityEngine.UIElements.IMouseEventInternal
        {
            /*0x0*/ UnityEngine.EventModifiers <modifiers>k__BackingField;
            /*0x0*/ UnityEngine.Vector2 <mousePosition>k__BackingField;
            /*0x0*/ UnityEngine.Vector2 <localMousePosition>k__BackingField;
            /*0x0*/ UnityEngine.Vector2 <mouseDelta>k__BackingField;
            /*0x0*/ int <clickCount>k__BackingField;
            /*0x0*/ int <button>k__BackingField;
            /*0x0*/ int <pressedButtons>k__BackingField;
            /*0x0*/ bool <UnityEngine.UIElements.IMouseEventInternal.triggeredByOS>k__BackingField;
            /*0x0*/ bool <UnityEngine.UIElements.IMouseEventInternal.recomputeTopElementUnderMouse>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.IPointerEvent <UnityEngine.UIElements.IMouseEventInternal.sourcePointerEvent>k__BackingField;

            static /*0x2a5510*/ T GetPooled(UnityEngine.Event systemEvent);
            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IMouseEvent triggerEvent, UnityEngine.Vector2 mousePosition, bool recomputeTopElementUnderMouse);
            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IMouseEvent triggerEvent);
            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IPointerEvent pointerEvent);
            /*0x180fc0*/ MouseEventBase();
            /*0x180980*/ UnityEngine.EventModifiers get_modifiers();
            /*0x17aa40*/ void set_modifiers(UnityEngine.EventModifiers value);
            UnityEngine.Vector2 get_mousePosition();
            /*0x17aca0*/ void set_mousePosition(UnityEngine.Vector2 value);
            UnityEngine.Vector2 get_localMousePosition();
            /*0x17aca0*/ void set_localMousePosition(UnityEngine.Vector2 value);
            UnityEngine.Vector2 get_mouseDelta();
            /*0x17aca0*/ void set_mouseDelta(UnityEngine.Vector2 value);
            /*0x180980*/ int get_clickCount();
            /*0x17aa40*/ void set_clickCount(int value);
            /*0x180980*/ int get_button();
            /*0x17aa40*/ void set_button(int value);
            /*0x180980*/ int get_pressedButtons();
            /*0x17aa40*/ void set_pressedButtons(int value);
            /*0x17cb40*/ bool get_shiftKey();
            /*0x17cb40*/ bool get_ctrlKey();
            /*0x17cb40*/ bool get_commandKey();
            /*0x17cb40*/ bool get_altKey();
            /*0x17cb40*/ bool UnityEngine.UIElements.IMouseEventInternal.get_triggeredByOS();
            /*0x181190*/ void UnityEngine.UIElements.IMouseEventInternal.set_triggeredByOS(bool value);
            /*0x17cb40*/ bool UnityEngine.UIElements.IMouseEventInternal.get_recomputeTopElementUnderMouse();
            /*0x181190*/ void UnityEngine.UIElements.IMouseEventInternal.set_recomputeTopElementUnderMouse(bool value);
            /*0x1803b0*/ UnityEngine.UIElements.IPointerEvent UnityEngine.UIElements.IMouseEventInternal.get_sourcePointerEvent();
            /*0x17aec0*/ void UnityEngine.UIElements.IMouseEventInternal.set_sourcePointerEvent(UnityEngine.UIElements.IPointerEvent value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
            /*0x1803b0*/ UnityEngine.UIElements.IEventHandler get_currentTarget();
            /*0x17aec0*/ void set_currentTarget(UnityEngine.UIElements.IEventHandler value);
            /*0x17aec0*/ void PreDispatch(UnityEngine.UIElements.IPanel panel);
            /*0x17aec0*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);
        }

        class MouseDownEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseDownEvent>
        {
            static /*0x17ab8a0*/ MouseDownEvent();
            static /*0x17ab7a0*/ UnityEngine.UIElements.MouseDownEvent MakeFromPointerEvent(UnityEngine.UIElements.IPointerEvent pointerEvent);
            static /*0x17ab6a0*/ UnityEngine.UIElements.MouseDownEvent GetPooled(UnityEngine.UIElements.PointerDownEvent pointerEvent);
            static /*0x17ab6f0*/ UnityEngine.UIElements.MouseDownEvent GetPooled(UnityEngine.UIElements.PointerMoveEvent pointerEvent);
            /*0x17ab980*/ MouseDownEvent();
            /*0x17ab740*/ void Init();
            /*0x17ab790*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseDownEvent.<> <>9;

                static /*0x17afe10*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af330*/ UnityEngine.UIElements.MouseDownEvent <.cctor>b__0_0();
            }
        }

        class MouseUpEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseUpEvent>
        {
            static /*0x17aceb0*/ MouseUpEvent();
            static /*0x17acdb0*/ UnityEngine.UIElements.MouseUpEvent MakeFromPointerEvent(UnityEngine.UIElements.IPointerEvent pointerEvent);
            static /*0x17acd10*/ UnityEngine.UIElements.MouseUpEvent GetPooled(UnityEngine.UIElements.PointerUpEvent pointerEvent);
            static /*0x17acc70*/ UnityEngine.UIElements.MouseUpEvent GetPooled(UnityEngine.UIElements.PointerMoveEvent pointerEvent);
            static /*0x17accc0*/ UnityEngine.UIElements.MouseUpEvent GetPooled(UnityEngine.UIElements.PointerCancelEvent pointerEvent);
            /*0x17acf90*/ MouseUpEvent();
            /*0x17acd60*/ void Init();
            /*0x17ab790*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseUpEvent.<> <>9;

                static /*0x17b0350*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af6b0*/ UnityEngine.UIElements.MouseUpEvent <.cctor>b__0_0();
            }
        }

        class MouseMoveEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseMoveEvent>
        {
            static /*0x17acb40*/ MouseMoveEvent();
            static /*0x17acaa0*/ UnityEngine.UIElements.MouseMoveEvent GetPooled(UnityEngine.UIElements.PointerMoveEvent pointerEvent);
            /*0x17acc20*/ MouseMoveEvent();
            /*0x17acae0*/ void Init();
            /*0x17acb30*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseMoveEvent.<> <>9;

                static /*0x17afef0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af5d0*/ UnityEngine.UIElements.MouseMoveEvent <.cctor>b__0_0();
            }
        }

        class ContextClickEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.ContextClickEvent>
        {
            static /*0x179a680*/ ContextClickEvent();
            /*0x179a760*/ ContextClickEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.ContextClickEvent.<> <>9;

                static /*0x17b0120*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af410*/ UnityEngine.UIElements.ContextClickEvent <.cctor>b__0_0();
            }
        }

        class WheelEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.WheelEvent>
        {
            /*0xc0*/ UnityEngine.Vector3 <delta>k__BackingField;

            static /*0x17b0bc0*/ WheelEvent();
            static /*0x17b0860*/ UnityEngine.UIElements.WheelEvent GetPooled(UnityEngine.Event systemEvent);
            static /*0x17b0a10*/ UnityEngine.UIElements.WheelEvent GetPooled(UnityEngine.Vector3 delta, UnityEngine.Vector3 mousePosition, UnityEngine.EventModifiers modifiers);
            static /*0x17b09a0*/ UnityEngine.UIElements.WheelEvent GetPooled(UnityEngine.Vector3 delta, UnityEngine.UIElements.IPointerEvent pointerEvent);
            /*0x17b0ca0*/ WheelEvent();
            /*0x17b0d20*/ UnityEngine.Vector3 get_delta();
            /*0x17b0d40*/ void set_delta(UnityEngine.Vector3 value);
            /*0x17b0ae0*/ void Init();
            /*0x17b0b60*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.WheelEvent.<> <>9;

                static /*0x17b02e0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af790*/ UnityEngine.UIElements.WheelEvent <.cctor>b__0_0();
            }
        }

        class MouseEnterEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseEnterEvent>
        {
            static /*0x17aba30*/ MouseEnterEvent();
            /*0x17abb10*/ MouseEnterEvent();
            /*0x17ab9d0*/ void Init();
            /*0x17aba20*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseEnterEvent.<> <>9;

                static /*0x17b0660*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17af480*/ UnityEngine.UIElements.MouseEnterEvent <.cctor>b__0_0();
            }
        }

        class MouseLeaveEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseLeaveEvent>
        {
            static /*0x17ac970*/ MouseLeaveEvent();
            /*0x17aca50*/ MouseLeaveEvent();
            /*0x17ac920*/ void Init();
            /*0x17aba20*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseLeaveEvent.<> <>9;

                static /*0x17b00b0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17afba0*/ UnityEngine.UIElements.MouseLeaveEvent <.cctor>b__0_0();
            }
        }

        class MouseEnterWindowEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseEnterWindowEvent>
        {
            static /*0x17abcb0*/ MouseEnterWindowEvent();
            /*0x17abd90*/ MouseEnterWindowEvent();
            /*0x17abb60*/ void Init();
            /*0x17abbb0*/ void LocalInit();
            /*0x17abbc0*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseEnterWindowEvent.<> <>9;

                static /*0x17c95e0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c85f0*/ UnityEngine.UIElements.MouseEnterWindowEvent <.cctor>b__0_0();
            }
        }

        class MouseLeaveWindowEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseLeaveWindowEvent>
        {
            static /*0x17bd480*/ MouseLeaveWindowEvent();
            static /*0x17bd1b0*/ UnityEngine.UIElements.MouseLeaveWindowEvent GetPooled(UnityEngine.Event systemEvent);
            /*0x17bd560*/ MouseLeaveWindowEvent();
            /*0x17bd2c0*/ void Init();
            /*0x17bd340*/ void LocalInit();
            /*0x17bd390*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseLeaveWindowEvent.<> <>9;

                static /*0x17c9180*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8250*/ UnityEngine.UIElements.MouseLeaveWindowEvent <.cctor>b__0_0();
            }
        }

        class MouseOverEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseOverEvent>
        {
            static /*0x17bd9c0*/ MouseOverEvent();
            /*0x17bdaa0*/ MouseOverEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseOverEvent.<> <>9;

                static /*0x17c9ce0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c88e0*/ UnityEngine.UIElements.MouseOverEvent <.cctor>b__0_0();
            }
        }

        class MouseOutEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.MouseOutEvent>
        {
            static /*0x17bd8a0*/ MouseOutEvent();
            /*0x17bd980*/ MouseOutEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.MouseOutEvent.<> <>9;

                static /*0x17c9960*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8800*/ UnityEngine.UIElements.MouseOutEvent <.cctor>b__0_0();
            }
        }

        class ContextualMenuPopulateEvent : UnityEngine.UIElements.MouseEventBase<UnityEngine.UIElements.ContextualMenuPopulateEvent>
        {
            /*0xc0*/ UnityEngine.UIElements.DropdownMenu <menu>k__BackingField;
            /*0xc8*/ UnityEngine.UIElements.EventBase <triggerEvent>k__BackingField;
            /*0xd0*/ UnityEngine.UIElements.ContextualMenuManager m_ContextualMenuManager;

            static /*0x17b30c0*/ ContextualMenuPopulateEvent();
            static /*0x17b2b20*/ UnityEngine.UIElements.ContextualMenuPopulateEvent GetPooled(UnityEngine.UIElements.EventBase triggerEvent, UnityEngine.UIElements.DropdownMenu menu, UnityEngine.UIElements.IEventHandler target, UnityEngine.UIElements.ContextualMenuManager menuManager);
            /*0x17b31a0*/ ContextualMenuPopulateEvent();
            /*0xefdcf0*/ UnityEngine.UIElements.DropdownMenu get_menu();
            /*0x1465c00*/ void set_menu(UnityEngine.UIElements.DropdownMenu value);
            /*0x136fca0*/ UnityEngine.UIElements.EventBase get_triggerEvent();
            /*0x17b31f0*/ void set_triggerEvent(UnityEngine.UIElements.EventBase value);
            /*0x17b2f30*/ void Init();
            /*0x17b2f80*/ void LocalInit();
            /*0x17b3010*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.ContextualMenuPopulateEvent.<> <>9;

                static /*0x17c9340*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c83e0*/ UnityEngine.UIElements.ContextualMenuPopulateEvent <.cctor>b__0_0();
            }
        }

        class MouseEventsHelper
        {
            static /*0x2a5510*/ void SendEnterLeave<TLeaveEvent, TEnterEvent>(UnityEngine.UIElements.VisualElement previousTopElementUnderMouse, UnityEngine.UIElements.VisualElement currentTopElementUnderMouse, UnityEngine.UIElements.IMouseEvent triggerEvent, UnityEngine.Vector2 mousePosition);
            static /*0x17bcf70*/ void SendMouseOverMouseOut(UnityEngine.UIElements.VisualElement previousTopElementUnderMouse, UnityEngine.UIElements.VisualElement currentTopElementUnderMouse, UnityEngine.UIElements.IMouseEvent triggerEvent, UnityEngine.Vector2 mousePosition);
        }

        class PointerEventsHelper
        {
            static /*0x2a5510*/ void SendEnterLeave<TLeaveEvent, TEnterEvent>(UnityEngine.UIElements.VisualElement previousTopElementUnderPointer, UnityEngine.UIElements.VisualElement currentTopElementUnderPointer, UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, int pointerId);
            static /*0x17c4990*/ void SendOverOut(UnityEngine.UIElements.VisualElement previousTopElementUnderPointer, UnityEngine.UIElements.VisualElement currentTopElementUnderPointer, UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, int pointerId);
        }

        class NavigationEventDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            /*0x32f970*/ NavigationEventDispatchingStrategy();
            /*0x17becb0*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17becf0*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        interface INavigationEvent
        {
            /*0x17cb40*/ bool get_shiftKey();
            /*0x17cb40*/ bool get_altKey();
        }

        enum NavigationDeviceType
        {
            Unknown = 0,
            Keyboard = 1,
            NonKeyboard = 2,
        }

        class NavigationEventBase<T> : UnityEngine.UIElements.EventBase<T>, UnityEngine.UIElements.INavigationEvent
        {
            /*0x0*/ UnityEngine.EventModifiers <modifiers>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.NavigationDeviceType <deviceType>k__BackingField;

            static /*0x2a5510*/ T GetPooled(UnityEngine.EventModifiers modifiers);
            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.NavigationDeviceType deviceType, UnityEngine.EventModifiers modifiers);
            /*0x180fc0*/ NavigationEventBase();
            /*0x180980*/ UnityEngine.EventModifiers get_modifiers();
            /*0x17aa40*/ void set_modifiers(UnityEngine.EventModifiers value);
            /*0x17cb40*/ bool get_shiftKey();
            /*0x17cb40*/ bool get_altKey();
            /*0x180980*/ UnityEngine.UIElements.NavigationDeviceType get_deviceType();
            /*0x17aa40*/ void set_deviceType(UnityEngine.UIElements.NavigationDeviceType value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
        }

        class NavigationMoveEvent : UnityEngine.UIElements.NavigationEventBase<UnityEngine.UIElements.NavigationMoveEvent>
        {
            /*0x90*/ UnityEngine.UIElements.NavigationMoveEvent.Direction <direction>k__BackingField;
            /*0x94*/ UnityEngine.Vector2 <move>k__BackingField;

            static /*0x17bf300*/ NavigationMoveEvent();
            static /*0x17bee40*/ UnityEngine.UIElements.NavigationMoveEvent.Direction DetermineMoveDirection(float x, float y, float deadZone);
            static /*0x17bf110*/ UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.Vector2 moveVector, UnityEngine.EventModifiers modifiers);
            static /*0x17bf010*/ UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.Vector2 moveVector, UnityEngine.UIElements.NavigationDeviceType deviceType, UnityEngine.EventModifiers modifiers);
            static /*0x17beec0*/ UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.UIElements.NavigationMoveEvent.Direction direction, UnityEngine.EventModifiers modifiers);
            static /*0x17bef60*/ UnityEngine.UIElements.NavigationMoveEvent GetPooled(UnityEngine.UIElements.NavigationMoveEvent.Direction direction, UnityEngine.UIElements.NavigationDeviceType deviceType, UnityEngine.EventModifiers modifiers);
            /*0x17bf3e0*/ NavigationMoveEvent();
            /*0xa5b590*/ UnityEngine.UIElements.NavigationMoveEvent.Direction get_direction();
            /*0xa5b5c0*/ void set_direction(UnityEngine.UIElements.NavigationMoveEvent.Direction value);
            /*0xb69c50*/ void set_move(UnityEngine.Vector2 value);
            /*0x17bf210*/ void Init();
            /*0x17bf2a0*/ void LocalInit();

            enum Direction
            {
                None = 0,
                Left = 1,
                Up = 2,
                Right = 3,
                Down = 4,
                Next = 5,
                Previous = 6,
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.NavigationMoveEvent.<> <>9;

                static /*0x17c9730*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8530*/ UnityEngine.UIElements.NavigationMoveEvent <.cctor>b__0_0();
            }
        }

        class NavigationCancelEvent : UnityEngine.UIElements.NavigationEventBase<UnityEngine.UIElements.NavigationCancelEvent>
        {
            static /*0x17beb90*/ NavigationCancelEvent();
            /*0x17bec70*/ NavigationCancelEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.NavigationCancelEvent.<> <>9;

                static /*0x17c99d0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8ea0*/ UnityEngine.UIElements.NavigationCancelEvent <.cctor>b__0_0();
            }
        }

        class NavigationSubmitEvent : UnityEngine.UIElements.NavigationEventBase<UnityEngine.UIElements.NavigationSubmitEvent>
        {
            static /*0x17bf470*/ NavigationSubmitEvent();
            /*0x17bf550*/ NavigationSubmitEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.NavigationSubmitEvent.<> <>9;

                static /*0x17c9650*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8dc0*/ UnityEngine.UIElements.NavigationSubmitEvent <.cctor>b__0_0();
            }
        }

        class PanelChangedEventBase<T> : UnityEngine.UIElements.EventBase<T>
        {
            /*0x0*/ UnityEngine.UIElements.IPanel <originPanel>k__BackingField;
            /*0x0*/ UnityEngine.UIElements.IPanel <destinationPanel>k__BackingField;

            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IPanel originPanel, UnityEngine.UIElements.IPanel destinationPanel);
            /*0x180fc0*/ PanelChangedEventBase();
            /*0x1803b0*/ UnityEngine.UIElements.IPanel get_originPanel();
            /*0x17aec0*/ void set_originPanel(UnityEngine.UIElements.IPanel value);
            /*0x1803b0*/ UnityEngine.UIElements.IPanel get_destinationPanel();
            /*0x17aec0*/ void set_destinationPanel(UnityEngine.UIElements.IPanel value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
        }

        class AttachToPanelEvent : UnityEngine.UIElements.PanelChangedEventBase<UnityEngine.UIElements.AttachToPanelEvent>
        {
            static /*0x17b1480*/ AttachToPanelEvent();
            /*0x17b1560*/ AttachToPanelEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.AttachToPanelEvent.<> <>9;

                static /*0x17c91f0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c86d0*/ UnityEngine.UIElements.AttachToPanelEvent <.cctor>b__0_0();
            }
        }

        class DetachFromPanelEvent : UnityEngine.UIElements.PanelChangedEventBase<UnityEngine.UIElements.DetachFromPanelEvent>
        {
            static /*0x17b37a0*/ DetachFromPanelEvent();
            /*0x17b3880*/ DetachFromPanelEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.DetachFromPanelEvent.<> <>9;

                static /*0x17c9260*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8100*/ UnityEngine.UIElements.DetachFromPanelEvent <.cctor>b__0_0();
            }
        }

        class PointerCaptureDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            /*0x32f970*/ PointerCaptureDispatchingStrategy();
            /*0x17c2ef0*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17c2f30*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        class PointerDeviceState
        {
            static /*0x0*/ UnityEngine.UIElements.PointerDeviceState.PointerLocation[] s_PlayerPointerLocations;
            static /*0x8*/ int[] s_PressedButtons;
            static /*0x10*/ UnityEngine.UIElements.IPanel[] s_PlayerPanelWithSoftPointerCapture;

            static /*0x17c3bf0*/ PointerDeviceState();
            static /*0x17c3860*/ void RemovePanelData(UnityEngine.UIElements.IPanel panel);
            static /*0x17c3a80*/ void SavePointerPosition(int pointerId, UnityEngine.Vector2 position, UnityEngine.UIElements.IPanel panel, UnityEngine.UIElements.ContextType contextType);
            static /*0x17c3640*/ void PressButton(int pointerId, int buttonId);
            static /*0x17c3790*/ void ReleaseButton(int pointerId, int buttonId);
            static /*0x17c3710*/ void ReleaseAllButtons(int pointerId);
            static /*0x17c3410*/ UnityEngine.Vector2 GetPointerPosition(int pointerId, UnityEngine.UIElements.ContextType contextType);
            static /*0x17c3320*/ UnityEngine.UIElements.IPanel GetPanel(int pointerId, UnityEngine.UIElements.ContextType contextType);
            static /*0x17c35a0*/ bool HasFlagFast(UnityEngine.UIElements.PointerDeviceState.LocationFlag flagSet, UnityEngine.UIElements.PointerDeviceState.LocationFlag flag);
            static /*0x17c35b0*/ bool HasLocationFlag(int pointerId, UnityEngine.UIElements.ContextType contextType, UnityEngine.UIElements.PointerDeviceState.LocationFlag flag);
            static /*0x17c34a0*/ int GetPressedButtons(int pointerId);
            static /*0x17c3510*/ bool HasAdditionalPressedButtons(int pointerId, int exceptButtonId);
            static /*0x17c3b30*/ void SetPlayerPanelWithSoftPointerCapture(int pointerId, UnityEngine.UIElements.IPanel panel);
            static /*0x17c33a0*/ UnityEngine.UIElements.IPanel GetPlayerPanelWithSoftPointerCapture(int pointerId);

            enum LocationFlag
            {
                None = 0,
                OutsidePanel = 1,
            }

            struct PointerLocation
            {
                /*0x10*/ UnityEngine.Vector2 <Position>k__BackingField;
                /*0x18*/ UnityEngine.UIElements.IPanel <Panel>k__BackingField;
                /*0x20*/ UnityEngine.UIElements.PointerDeviceState.LocationFlag <Flags>k__BackingField;

                /*0x1230500*/ UnityEngine.Vector2 get_Position();
                /*0x9e29e0*/ void set_Position(UnityEngine.Vector2 value);
                /*0xa5a7f0*/ UnityEngine.UIElements.IPanel get_Panel();
                /*0x1659550*/ void set_Panel(UnityEngine.UIElements.IPanel value);
                /*0x417e30*/ UnityEngine.UIElements.PointerDeviceState.LocationFlag get_Flags();
                /*0xdcd9c0*/ void set_Flags(UnityEngine.UIElements.PointerDeviceState.LocationFlag value);
                /*0x17c4e90*/ void SetLocation(UnityEngine.Vector2 position, UnityEngine.UIElements.IPanel panel);
            }
        }

        class PointerEventDispatchingStrategy : UnityEngine.UIElements.IEventDispatchingStrategy
        {
            static /*0x17c43b0*/ void SendEventToTarget(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
            static /*0x17c4450*/ void SetBestTargetForEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
            static /*0x17c4640*/ void UpdateElementUnderPointer(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel, ref UnityEngine.UIElements.VisualElement elementUnderPointer);
            /*0x32f970*/ PointerEventDispatchingStrategy();
            /*0x17c42c0*/ bool CanDispatchEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17c4300*/ void DispatchEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel);
        }

        class PointerType
        {
            static /*0x0*/ string mouse;
            static /*0x8*/ string touch;
            static /*0x10*/ string pen;
            static /*0x18*/ string unknown;

            static /*0x17c5c60*/ PointerType();
            static /*0x17c5ac0*/ string GetPointerType(int pointerId);
            static /*0x17c5bd0*/ bool IsDirectManipulationDevice(string pointerType);
        }

        class PointerId
        {
            static /*0x0*/ int maxPointers;
            static /*0x4*/ int invalidPointerId;
            static /*0x8*/ int mousePointerId;
            static /*0xc*/ int touchPointerIdBase;
            static /*0x10*/ int touchPointerCount;
            static /*0x14*/ int penPointerIdBase;
            static /*0x18*/ int penPointerCount;
            static /*0x20*/ int[] hoveringPointers;

            static /*0x17c4bd0*/ PointerId();
        }

        interface IPointerEvent
        {
            /*0x180980*/ int get_pointerId();
            /*0x1803b0*/ string get_pointerType();
            /*0x17cb40*/ bool get_isPrimary();
            /*0x180980*/ int get_button();
            /*0x180980*/ int get_pressedButtons();
            /*0x180e40*/ UnityEngine.Vector3 get_position();
            /*0x180e40*/ UnityEngine.Vector3 get_localPosition();
            /*0x180e40*/ UnityEngine.Vector3 get_deltaPosition();
            /*0x17fc30*/ float get_deltaTime();
            /*0x180980*/ int get_clickCount();
            /*0x17fc30*/ float get_pressure();
            /*0x17fc30*/ float get_tangentialPressure();
            /*0x17fc30*/ float get_altitudeAngle();
            /*0x17fc30*/ float get_azimuthAngle();
            /*0x17fc30*/ float get_twist();
            UnityEngine.Vector2 get_tilt();
            /*0x180980*/ UnityEngine.PenStatus get_penStatus();
            UnityEngine.Vector2 get_radius();
            UnityEngine.Vector2 get_radiusVariance();
            /*0x180980*/ UnityEngine.EventModifiers get_modifiers();
            /*0x17cb40*/ bool get_shiftKey();
            /*0x17cb40*/ bool get_ctrlKey();
            /*0x17cb40*/ bool get_commandKey();
            /*0x17cb40*/ bool get_altKey();
            /*0x17cb40*/ bool get_actionKey();
        }

        interface IPointerEventInternal
        {
            /*0x17cb40*/ bool get_triggeredByOS();
            /*0x181190*/ void set_triggeredByOS(bool value);
            /*0x17cb40*/ bool get_recomputeTopElementUnderPointer();
            /*0x181190*/ void set_recomputeTopElementUnderPointer(bool value);
        }

        class PointerEventHelper
        {
            static /*0x17c47f0*/ UnityEngine.UIElements.EventBase GetPooled(UnityEngine.EventType eventType, UnityEngine.Vector3 mousePosition, UnityEngine.Vector2 delta, int button, int clickCount, UnityEngine.EventModifiers modifiers);
        }

        class PointerEventBase<T> : UnityEngine.UIElements.EventBase<T>, UnityEngine.UIElements.IPointerEvent, UnityEngine.UIElements.IPointerEventInternal
        {
            /*0x0*/ bool m_AltitudeNeedsConversion;
            /*0x0*/ bool m_AzimuthNeedsConversion;
            /*0x0*/ float m_AltitudeAngle;
            /*0x0*/ float m_AzimuthAngle;
            /*0x0*/ bool m_TiltNeeded;
            /*0x0*/ UnityEngine.Vector2 m_Tilt;
            /*0x0*/ int <pointerId>k__BackingField;
            /*0x0*/ string <pointerType>k__BackingField;
            /*0x0*/ bool <isPrimary>k__BackingField;
            /*0x0*/ int <button>k__BackingField;
            /*0x0*/ int <pressedButtons>k__BackingField;
            /*0x0*/ UnityEngine.Vector3 <position>k__BackingField;
            /*0x0*/ UnityEngine.Vector3 <localPosition>k__BackingField;
            /*0x0*/ UnityEngine.Vector3 <deltaPosition>k__BackingField;
            /*0x0*/ float <deltaTime>k__BackingField;
            /*0x0*/ int <clickCount>k__BackingField;
            /*0x0*/ float <pressure>k__BackingField;
            /*0x0*/ float <tangentialPressure>k__BackingField;
            /*0x0*/ float <twist>k__BackingField;
            /*0x0*/ UnityEngine.PenStatus <penStatus>k__BackingField;
            /*0x0*/ UnityEngine.Vector2 <radius>k__BackingField;
            /*0x0*/ UnityEngine.Vector2 <radiusVariance>k__BackingField;
            /*0x0*/ UnityEngine.EventModifiers <modifiers>k__BackingField;
            /*0x0*/ bool <UnityEngine.UIElements.IPointerEventInternal.triggeredByOS>k__BackingField;
            /*0x0*/ bool <UnityEngine.UIElements.IPointerEventInternal.recomputeTopElementUnderPointer>k__BackingField;

            static /*0x177700*/ bool IsMouse(UnityEngine.Event systemEvent);
            static /*0x177700*/ bool IsTouch(UnityEngine.Event systemEvent);
            static /*0x180320*/ float TiltToAzimuth(UnityEngine.Vector2 tilt);
            static /*0x2a5510*/ UnityEngine.Vector2 AzimuthAndAlitutudeToTilt(float altitude, float azimuth);
            static /*0x180320*/ float TiltToAltitude(UnityEngine.Vector2 tilt);
            static /*0x2a5510*/ T GetPooled(UnityEngine.Event systemEvent);
            static /*0x2a5510*/ T GetPooled(UnityEngine.EventType eventType, UnityEngine.Vector3 mousePosition, UnityEngine.Vector2 delta, int button, int clickCount, UnityEngine.EventModifiers modifiers);
            static /*0x2a5510*/ T GetPooled(UnityEngine.Touch touch, UnityEngine.EventModifiers modifiers);
            static /*0x2a5510*/ T GetPooled(UnityEngine.PenData pen, UnityEngine.EventModifiers modifiers);
            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, int pointerId);
            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.IPointerEvent triggerEvent);
            /*0x180fc0*/ PointerEventBase();
            /*0x180980*/ int get_pointerId();
            /*0x17aa40*/ void set_pointerId(int value);
            /*0x1803b0*/ string get_pointerType();
            /*0x17aec0*/ void set_pointerType(string value);
            /*0x17cb40*/ bool get_isPrimary();
            /*0x181190*/ void set_isPrimary(bool value);
            /*0x180980*/ int get_button();
            /*0x17aa40*/ void set_button(int value);
            /*0x180980*/ int get_pressedButtons();
            /*0x17aa40*/ void set_pressedButtons(int value);
            /*0x180e40*/ UnityEngine.Vector3 get_position();
            /*0x17aec0*/ void set_position(UnityEngine.Vector3 value);
            /*0x180e40*/ UnityEngine.Vector3 get_localPosition();
            /*0x17aec0*/ void set_localPosition(UnityEngine.Vector3 value);
            /*0x180e40*/ UnityEngine.Vector3 get_deltaPosition();
            /*0x17aec0*/ void set_deltaPosition(UnityEngine.Vector3 value);
            /*0x17fc30*/ float get_deltaTime();
            /*0x178d00*/ void set_deltaTime(float value);
            /*0x180980*/ int get_clickCount();
            /*0x17aa40*/ void set_clickCount(int value);
            /*0x17fc30*/ float get_pressure();
            /*0x178d00*/ void set_pressure(float value);
            /*0x17fc30*/ float get_tangentialPressure();
            /*0x178d00*/ void set_tangentialPressure(float value);
            /*0x17fc30*/ float get_altitudeAngle();
            /*0x178d00*/ void set_altitudeAngle(float value);
            /*0x17fc30*/ float get_azimuthAngle();
            /*0x178d00*/ void set_azimuthAngle(float value);
            /*0x17fc30*/ float get_twist();
            /*0x178d00*/ void set_twist(float value);
            UnityEngine.Vector2 get_tilt();
            /*0x17aca0*/ void set_tilt(UnityEngine.Vector2 value);
            /*0x180980*/ UnityEngine.PenStatus get_penStatus();
            /*0x17aa40*/ void set_penStatus(UnityEngine.PenStatus value);
            UnityEngine.Vector2 get_radius();
            /*0x17aca0*/ void set_radius(UnityEngine.Vector2 value);
            UnityEngine.Vector2 get_radiusVariance();
            /*0x17aca0*/ void set_radiusVariance(UnityEngine.Vector2 value);
            /*0x180980*/ UnityEngine.EventModifiers get_modifiers();
            /*0x17aa40*/ void set_modifiers(UnityEngine.EventModifiers value);
            /*0x17cb40*/ bool get_shiftKey();
            /*0x17cb40*/ bool get_ctrlKey();
            /*0x17cb40*/ bool get_commandKey();
            /*0x17cb40*/ bool get_altKey();
            /*0x17cb40*/ bool get_actionKey();
            /*0x17cb40*/ bool UnityEngine.UIElements.IPointerEventInternal.get_triggeredByOS();
            /*0x181190*/ void UnityEngine.UIElements.IPointerEventInternal.set_triggeredByOS(bool value);
            /*0x17cb40*/ bool UnityEngine.UIElements.IPointerEventInternal.get_recomputeTopElementUnderPointer();
            /*0x181190*/ void UnityEngine.UIElements.IPointerEventInternal.set_recomputeTopElementUnderPointer(bool value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
            /*0x1803b0*/ UnityEngine.UIElements.IEventHandler get_currentTarget();
            /*0x17aec0*/ void set_currentTarget(UnityEngine.UIElements.IEventHandler value);
            /*0x17aec0*/ void PreDispatch(UnityEngine.UIElements.IPanel panel);
            /*0x17aec0*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);
        }

        class PointerDownEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerDownEvent>
        {
            static /*0x17c3fc0*/ PointerDownEvent();
            /*0x17c40a0*/ PointerDownEvent();
            /*0x17c3d30*/ void Init();
            /*0x17c3dc0*/ void LocalInit();
            /*0x17c3e20*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerDownEvent.<> <>9;

                static /*0x17c96c0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8bd0*/ UnityEngine.UIElements.PointerDownEvent <.cctor>b__0_0();
            }
        }

        class PointerMoveEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerMoveEvent>
        {
            /*0x110*/ bool <isHandledByDraggable>k__BackingField;

            static /*0x17c54a0*/ PointerMoveEvent();
            /*0x17c5580*/ PointerMoveEvent();
            /*0x14a3ea0*/ bool get_isHandledByDraggable();
            /*0x14a4300*/ void set_isHandledByDraggable(bool value);
            /*0x17c4f80*/ void Init();
            /*0x17c5020*/ void LocalInit();
            /*0x17c5090*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerMoveEvent.<> <>9;

                static /*0x17c93b0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8a50*/ UnityEngine.UIElements.PointerMoveEvent <.cctor>b__0_0();
            }
        }

        class PointerStationaryEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerStationaryEvent>
        {
            static /*0x17c5950*/ PointerStationaryEvent();
            /*0x17c5a30*/ PointerStationaryEvent();
            /*0x17c5860*/ void Init();
            /*0x17c58f0*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerStationaryEvent.<> <>9;

                static /*0x17c9570*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8b10*/ UnityEngine.UIElements.PointerStationaryEvent <.cctor>b__0_0();
            }
        }

        class PointerUpEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerUpEvent>
        {
            static /*0x17c60f0*/ PointerUpEvent();
            /*0x17c61d0*/ PointerUpEvent();
            /*0x17c5d90*/ void Init();
            /*0x17c5e20*/ void LocalInit();
            /*0x17c5e80*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerUpEvent.<> <>9;

                static /*0x17c92d0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8c90*/ UnityEngine.UIElements.PointerUpEvent <.cctor>b__0_0();
            }
        }

        class PointerCancelEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerCancelEvent>
        {
            static /*0x17c2d80*/ PointerCancelEvent();
            /*0x17c2e60*/ PointerCancelEvent();
            /*0x17c2a30*/ void Init();
            /*0x17c2ac0*/ void LocalInit();
            /*0x17c2b20*/ void PostDispatch(UnityEngine.UIElements.IPanel panel);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerCancelEvent.<> <>9;

                static /*0x17c9880*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8740*/ UnityEngine.UIElements.PointerCancelEvent <.cctor>b__0_0();
            }
        }

        class ClickEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.ClickEvent>
        {
            static /*0x17b29f0*/ ClickEvent();
            static /*0x17b2930*/ UnityEngine.UIElements.ClickEvent GetPooled(UnityEngine.UIElements.PointerUpEvent pointerEvent, int clickCount);
            /*0x17b2ad0*/ ClickEvent();
            /*0x17b29a0*/ void Init();
            /*0x17ab790*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.ClickEvent.<> <>9;

                static /*0x17c97a0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c81e0*/ UnityEngine.UIElements.ClickEvent <.cctor>b__0_0();
            }
        }

        class PointerEnterEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerEnterEvent>
        {
            static /*0x17c4190*/ PointerEnterEvent();
            /*0x17c4270*/ PointerEnterEvent();
            /*0x17c4130*/ void Init();
            /*0x17c4180*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerEnterEvent.<> <>9;

                static /*0x17c9c70*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8450*/ UnityEngine.UIElements.PointerEnterEvent <.cctor>b__0_0();
            }
        }

        class PointerLeaveEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerLeaveEvent>
        {
            static /*0x17c4d60*/ PointerLeaveEvent();
            /*0x17c4e40*/ PointerLeaveEvent();
            /*0x17c4d10*/ void Init();
            /*0x17c4180*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerLeaveEvent.<> <>9;

                static /*0x17c9d50*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8d50*/ UnityEngine.UIElements.PointerLeaveEvent <.cctor>b__0_0();
            }
        }

        class PointerOverEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerOverEvent>
        {
            static /*0x17c5740*/ PointerOverEvent();
            /*0x17c5820*/ PointerOverEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerOverEvent.<> <>9;

                static /*0x17c9c00*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8f10*/ UnityEngine.UIElements.PointerOverEvent <.cctor>b__0_0();
            }
        }

        class PointerOutEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.PointerOutEvent>
        {
            static /*0x17c5620*/ PointerOutEvent();
            /*0x17c5700*/ PointerOutEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PointerOutEvent.<> <>9;

                static /*0x17c9b20*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8170*/ UnityEngine.UIElements.PointerOutEvent <.cctor>b__0_0();
            }
        }

        class PropagationPaths
        {
            static int k_DefaultPropagationDepth = 16;
            static int k_DefaultTargetCount = 4;
            static /*0x0*/ UnityEngine.UIElements.ObjectPool<UnityEngine.UIElements.PropagationPaths> s_Pool;
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> trickleDownPath;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> targetElements;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> bubbleUpPath;

            static /*0x17c6560*/ PropagationPaths();
            static /*0x17c6260*/ UnityEngine.UIElements.PropagationPaths Build(UnityEngine.UIElements.VisualElement elem, UnityEngine.UIElements.EventBase evt);
            /*0x17c6670*/ PropagationPaths();
            /*0x17c6450*/ void Release();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.PropagationPaths.<> <>9;

                static /*0x17c9420*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8f80*/ UnityEngine.UIElements.PropagationPaths <.cctor>b__12_0();
            }
        }

        class CustomStyleResolvedEvent : UnityEngine.UIElements.EventBase<UnityEngine.UIElements.CustomStyleResolvedEvent>
        {
            static /*0x17b3210*/ CustomStyleResolvedEvent();
            /*0x17b32f0*/ CustomStyleResolvedEvent();
            /*0x17b3350*/ UnityEngine.UIElements.ICustomStyle get_customStyle();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.CustomStyleResolvedEvent.<> <>9;

                static /*0x17c9110*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8640*/ UnityEngine.UIElements.CustomStyleResolvedEvent <.cctor>b__0_0();
            }
        }

        class TooltipEvent : UnityEngine.UIElements.EventBase<UnityEngine.UIElements.TooltipEvent>
        {
            /*0x88*/ string <tooltip>k__BackingField;
            /*0x90*/ UnityEngine.Rect <rect>k__BackingField;

            static /*0x17c7ae0*/ TooltipEvent();
            /*0x17c7bc0*/ TooltipEvent();
            /*0x737e30*/ void set_tooltip(string value);
            /*0x12ebc50*/ void set_rect(UnityEngine.Rect value);
            /*0x17c79d0*/ void Init();
            /*0x17c7a70*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.TooltipEvent.<> <>9;

                static /*0x17c98f0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c82f0*/ UnityEngine.UIElements.TooltipEvent <.cctor>b__0_0();
            }
        }

        struct StylePropertyNameCollection : System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StylePropertyName>, System.Collections.IEnumerable
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> propertiesList;

            /*0x792990*/ StylePropertyNameCollection(System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> list);
            /*0x17c77b0*/ UnityEngine.UIElements.StylePropertyNameCollection.Enumerator GetEnumerator();
            /*0x17c7850*/ System.Collections.Generic.IEnumerator<UnityEngine.UIElements.StylePropertyName> System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StylePropertyName>.GetEnumerator();
            /*0x17c7910*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();

            struct Enumerator : System.Collections.Generic.IEnumerator<UnityEngine.UIElements.StylePropertyName>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x10*/ System.Collections.Generic.List.Enumerator<UnityEngine.UIElements.StylePropertyName> m_Enumerator;

                /*0x17b3a50*/ Enumerator(System.Collections.Generic.List.Enumerator<UnityEngine.UIElements.StylePropertyName> enumerator);
                /*0x17b39a0*/ bool MoveNext();
                /*0x17b3a70*/ UnityEngine.UIElements.StylePropertyName get_Current();
                /*0x17b39e0*/ object System.Collections.IEnumerator.get_Current();
                /*0x32d010*/ void Reset();
                /*0x17b3960*/ void Dispose();
            }
        }

        class TransitionEventBase<T> : UnityEngine.UIElements.EventBase<T>
        {
            /*0x0*/ UnityEngine.UIElements.StylePropertyNameCollection <stylePropertyNames>k__BackingField;
            /*0x0*/ double <elapsedTime>k__BackingField;

            static /*0x2a5510*/ T GetPooled(UnityEngine.UIElements.StylePropertyName stylePropertyName, double elapsedTime);
            /*0x180fc0*/ TransitionEventBase();
            /*0x2a5510*/ UnityEngine.UIElements.StylePropertyNameCollection get_stylePropertyNames();
            /*0x181600*/ void set_elapsedTime(double value);
            /*0x180fc0*/ void Init();
            /*0x180fc0*/ void LocalInit();
        }

        class TransitionRunEvent : UnityEngine.UIElements.TransitionEventBase<UnityEngine.UIElements.TransitionRunEvent>
        {
            static /*0x17c7ec0*/ TransitionRunEvent();
            /*0x17c7fa0*/ TransitionRunEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.TransitionRunEvent.<> <>9;

                static /*0x17c9500*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8950*/ UnityEngine.UIElements.TransitionRunEvent <.cctor>b__0_0();
            }
        }

        class TransitionStartEvent : UnityEngine.UIElements.TransitionEventBase<UnityEngine.UIElements.TransitionStartEvent>
        {
            static /*0x17c7fe0*/ TransitionStartEvent();
            /*0x17c80c0*/ TransitionStartEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.TransitionStartEvent.<> <>9;

                static /*0x17c9b90*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8870*/ UnityEngine.UIElements.TransitionStartEvent <.cctor>b__0_0();
            }
        }

        class TransitionEndEvent : UnityEngine.UIElements.TransitionEventBase<UnityEngine.UIElements.TransitionEndEvent>
        {
            static /*0x17c7da0*/ TransitionEndEvent();
            /*0x17c7e80*/ TransitionEndEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.TransitionEndEvent.<> <>9;

                static /*0x17c9810*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c8e30*/ UnityEngine.UIElements.TransitionEndEvent <.cctor>b__0_0();
            }
        }

        class TransitionCancelEvent : UnityEngine.UIElements.TransitionEventBase<UnityEngine.UIElements.TransitionCancelEvent>
        {
            static /*0x17c7c80*/ TransitionCancelEvent();
            /*0x17c7d60*/ TransitionCancelEvent();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.TransitionCancelEvent.<> <>9;

                static /*0x17c9ab0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c84c0*/ UnityEngine.UIElements.TransitionCancelEvent <.cctor>b__0_0();
            }
        }

        class IMGUIEvent : UnityEngine.UIElements.EventBase<UnityEngine.UIElements.IMGUIEvent>
        {
            static /*0x17bb8e0*/ IMGUIEvent();
            static /*0x17bb810*/ UnityEngine.UIElements.IMGUIEvent GetPooled(UnityEngine.Event systemEvent);
            /*0x17bb9c0*/ IMGUIEvent();
            /*0x17bb890*/ void Init();
            /*0x17acb30*/ void LocalInit();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.IMGUIEvent.<> <>9;

                static /*0x17c9a40*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c89c0*/ UnityEngine.UIElements.IMGUIEvent <.cctor>b__0_0();
            }
        }

        class BaseFieldMouseDragger
        {
            /*0x32f970*/ BaseFieldMouseDragger();
            /*0x17b15a0*/ void SetDragZone(UnityEngine.UIElements.VisualElement dragElement);
            void SetDragZone(UnityEngine.UIElements.VisualElement dragElement, UnityEngine.Rect hotZone);
        }

        class FieldMouseDragger<T> : UnityEngine.UIElements.BaseFieldMouseDragger
        {
            /*0x0*/ UnityEngine.UIElements.IValueField<T> m_DrivenField;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_DragElement;
            /*0x0*/ UnityEngine.Rect m_DragHotZone;
            /*0x0*/ bool <dragging>k__BackingField;
            /*0x0*/ T <startValue>k__BackingField;

            /*0x17aec0*/ FieldMouseDragger(UnityEngine.UIElements.IValueField<T> drivenField);
            /*0x17cb40*/ bool get_dragging();
            /*0x181190*/ void set_dragging(bool value);
            /*0x2a5510*/ T get_startValue();
            /*0x2a5510*/ void set_startValue(T value);
            void SetDragZone(UnityEngine.UIElements.VisualElement dragElement, UnityEngine.Rect hotZone);
            /*0x2a5510*/ bool CanStartDrag(int button, UnityEngine.Vector2 localPosition);
            /*0x17aec0*/ void UpdateValueOnPointerDown(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x17aec0*/ void ProcessDownEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17aec0*/ void UpdateValueOnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x2a5510*/ void ProcessMoveEvent(bool shiftKey, bool altKey, UnityEngine.Vector2 deltaPosition);
            /*0x17aec0*/ void UpdateValueOnPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x182a70*/ void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, int pointerId);
            /*0x17aec0*/ void UpdateValueOnKeyDown(UnityEngine.UIElements.KeyDownEvent evt);
        }

        class Focusable : UnityEngine.UIElements.CallbackEventHandler
        {
            /*0x20*/ bool <focusable>k__BackingField;
            /*0x24*/ int <tabIndex>k__BackingField;
            /*0x28*/ bool m_DelegatesFocus;
            /*0x29*/ bool m_ExcludeFromFocusRing;

            static /*0x17b62a0*/ UnityEngine.UIElements.Focusable GetFirstFocusableChild(UnityEngine.UIElements.VisualElement ve);
            /*0x17b64e0*/ Focusable();
            /*0x1803b0*/ UnityEngine.UIElements.FocusController get_focusController();
            /*0x796120*/ bool get_focusable();
            /*0x7963b0*/ void set_focusable(bool value);
            /*0x3e3ad0*/ int get_tabIndex();
            /*0xc70b30*/ void set_tabIndex(int value);
            /*0x17b6510*/ bool get_delegatesFocus();
            /*0xd18990*/ void set_delegatesFocus(bool value);
            /*0x17b6520*/ bool get_excludeFromFocusRing();
            /*0x17b6530*/ void set_excludeFromFocusRing(bool value);
            /*0x796120*/ bool get_canGrabFocus();
            /*0x17b6170*/ void Focus();
            /*0x17b60b0*/ void Blur();
            /*0x17b6060*/ void BlurImmediately();
            /*0x17b63f0*/ UnityEngine.UIElements.Focusable GetFocusDelegate();
            /*0x17b6100*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x17b6100*/ void ExecuteDefaultActionDisabled(UnityEngine.UIElements.EventBase evt);
            /*0x17b6480*/ void ProcessEvent(UnityEngine.UIElements.EventBase evt);
        }

        class FocusChangeDirection : System.IDisposable
        {
            static /*0x0*/ UnityEngine.UIElements.FocusChangeDirection <unspecified>k__BackingField;
            static /*0x8*/ UnityEngine.UIElements.FocusChangeDirection <none>k__BackingField;
            static /*0x10*/ UnityEngine.UIElements.FocusChangeDirection <lastValue>k__BackingField;
            /*0x10*/ int m_Value;

            static /*0x17b3b00*/ FocusChangeDirection();
            static /*0x17b3cc0*/ UnityEngine.UIElements.FocusChangeDirection get_unspecified();
            static /*0x17b3c70*/ UnityEngine.UIElements.FocusChangeDirection get_none();
            static /*0x17b3c20*/ UnityEngine.UIElements.FocusChangeDirection get_lastValue();
            static /*0x17b3d10*/ int op_Implicit(UnityEngine.UIElements.FocusChangeDirection fcd);
            /*0x32f460*/ FocusChangeDirection(int value);
            /*0x13ca7f0*/ void System.IDisposable.Dispose();
            /*0x32d010*/ void Dispose();
            /*0x17b3ac0*/ void ApplyTo(UnityEngine.UIElements.FocusController focusController, UnityEngine.UIElements.Focusable f);
        }

        interface IFocusRing
        {
            /*0x177730*/ UnityEngine.UIElements.FocusChangeDirection GetFocusChangeDirection(UnityEngine.UIElements.Focusable currentFocusable, UnityEngine.UIElements.EventBase e);
            /*0x177730*/ UnityEngine.UIElements.Focusable GetNextFocusable(UnityEngine.UIElements.Focusable currentFocusable, UnityEngine.UIElements.FocusChangeDirection direction);
        }

        class FocusController
        {
            /*0x10*/ UnityEngine.UIElements.IFocusRing <focusRing>k__BackingField;
            /*0x18*/ UnityEngine.UIElements.TextElement m_SelectedTextElement;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.FocusController.FocusedElement> m_FocusedElements;
            /*0x28*/ UnityEngine.UIElements.Focusable m_LastFocusedElement;
            /*0x30*/ UnityEngine.UIElements.Focusable m_LastPendingFocusedElement;
            /*0x38*/ int m_PendingFocusCount;
            /*0x3c*/ int <imguiKeyboardControl>k__BackingField;

            /*0x17b5690*/ FocusController(UnityEngine.UIElements.IFocusRing focusRing);
            /*0x73d3e0*/ UnityEngine.UIElements.IFocusRing get_focusRing();
            /*0x17b5790*/ void set_selectedTextElement(UnityEngine.UIElements.TextElement value);
            /*0x17b5730*/ UnityEngine.UIElements.Focusable get_focusedElement();
            /*0x17b4950*/ bool IsFocused(UnityEngine.UIElements.Focusable f);
            /*0x17b4600*/ UnityEngine.UIElements.Focusable GetRetargetedFocusedElement(UnityEngine.UIElements.VisualElement retargetAgainst);
            /*0x17b4540*/ UnityEngine.UIElements.Focusable GetLeafFocusedElement();
            /*0x17b4a90*/ bool IsLocalElement(UnityEngine.UIElements.Focusable f);
            /*0x17b4ae0*/ bool IsPendingFocus(UnityEngine.UIElements.Focusable f);
            /*0x17b4f40*/ void SetFocusToLastFocusedElement();
            /*0x17b3f40*/ void BlurLastFocusedElement();
            /*0x17b4160*/ void DoFocusChange(UnityEngine.UIElements.Focusable f);
            /*0x17b4bb0*/ void ProcessPendingFocusChange(UnityEngine.UIElements.Focusable f);
            /*0x17b4300*/ UnityEngine.UIElements.Focusable FocusNextInDirection(UnityEngine.UIElements.FocusChangeDirection direction);
            /*0x17b3e30*/ void AboutToReleaseFocus(UnityEngine.UIElements.Focusable focusable, UnityEngine.UIElements.Focusable willGiveFocusTo, UnityEngine.UIElements.FocusChangeDirection direction, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17b4e30*/ void ReleaseFocus(UnityEngine.UIElements.Focusable focusable, UnityEngine.UIElements.Focusable willGiveFocusTo, UnityEngine.UIElements.FocusChangeDirection direction, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17b3d20*/ void AboutToGrabFocus(UnityEngine.UIElements.Focusable focusable, UnityEngine.UIElements.Focusable willTakeFocusFrom, UnityEngine.UIElements.FocusChangeDirection direction, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17b4830*/ void GrabFocus(UnityEngine.UIElements.Focusable focusable, UnityEngine.UIElements.Focusable willTakeFocusFrom, UnityEngine.UIElements.FocusChangeDirection direction, bool bIsFocusDelegated, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17b4050*/ void Blur(UnityEngine.UIElements.Focusable focusable, bool bIsFocusDelegated, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17b51d0*/ void SwitchFocus(UnityEngine.UIElements.Focusable newFocusedElement, bool bIsFocusDelegated, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17b52a0*/ void SwitchFocus(UnityEngine.UIElements.Focusable newFocusedElement, UnityEngine.UIElements.FocusChangeDirection direction, bool bIsFocusDelegated, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x17b4fd0*/ void SwitchFocusOnEvent(UnityEngine.UIElements.EventBase e);
            /*0x17b4d60*/ void ReevaluateFocus();
            /*0x17b4410*/ bool GetFocusableParentForPointerEvent(UnityEngine.UIElements.Focusable target, ref UnityEngine.UIElements.Focusable effectiveTarget);
            /*0xee1680*/ int get_imguiKeyboardControl();
            /*0x136a430*/ void set_imguiKeyboardControl(int value);
            /*0x17b5570*/ void SyncIMGUIFocus(int imguiKeyboardControlID, UnityEngine.UIElements.Focusable imguiContainerHavingKeyboardControl, bool forceSwitch);

            struct FocusedElement
            {
                /*0x10*/ UnityEngine.UIElements.VisualElement m_SubTreeRoot;
                /*0x18*/ UnityEngine.UIElements.Focusable m_FocusedElement;
            }
        }

        class DynamicAtlasSettings
        {
            /*0x10*/ int m_MinAtlasSize;
            /*0x14*/ int m_MaxAtlasSize;
            /*0x18*/ int m_MaxSubTextureSize;
            /*0x1c*/ UnityEngine.UIElements.DynamicAtlasFilters m_ActiveFilters;
            /*0x20*/ UnityEngine.UIElements.DynamicAtlasCustomFilter m_CustomFilter;

            static /*0x17b38c0*/ UnityEngine.UIElements.DynamicAtlasFilters get_defaultFilters();
            static /*0x17b38d0*/ UnityEngine.UIElements.DynamicAtlasSettings get_defaults();
            /*0x32f970*/ DynamicAtlasSettings();
            /*0x417e30*/ int get_minAtlasSize();
            /*0xdcd9c0*/ void set_minAtlasSize(int value);
            /*0x70a440*/ int get_maxAtlasSize();
            /*0xc70b20*/ void set_maxAtlasSize(int value);
            /*0x8a5c20*/ int get_maxSubTextureSize();
            /*0x8a5c50*/ void set_maxSubTextureSize(int value);
            /*0xc70b00*/ UnityEngine.UIElements.DynamicAtlasFilters get_activeFilters();
            /*0xc70b50*/ void set_activeFilters(UnityEngine.UIElements.DynamicAtlasFilters value);
            /*0x61a260*/ UnityEngine.UIElements.DynamicAtlasCustomFilter get_customFilter();
            /*0x7965a0*/ void set_customFilter(UnityEngine.UIElements.DynamicAtlasCustomFilter value);
        }

        class NavigateFocusRing : UnityEngine.UIElements.IFocusRing
        {
            static /*0x0*/ UnityEngine.UIElements.NavigateFocusRing.ChangeDirection Left;
            static /*0x8*/ UnityEngine.UIElements.NavigateFocusRing.ChangeDirection Right;
            static /*0x10*/ UnityEngine.UIElements.NavigateFocusRing.ChangeDirection Up;
            static /*0x18*/ UnityEngine.UIElements.NavigateFocusRing.ChangeDirection Down;
            static /*0x20*/ UnityEngine.UIElements.FocusChangeDirection Next;
            static /*0x28*/ UnityEngine.UIElements.FocusChangeDirection Previous;
            /*0x10*/ UnityEngine.UIElements.VisualElement m_Root;
            /*0x18*/ UnityEngine.UIElements.VisualElementFocusRing m_Ring;

            static /*0x17be7e0*/ NavigateFocusRing();
            static /*0x17be720*/ bool IsActive(UnityEngine.UIElements.VisualElement v);
            static /*0x17be790*/ bool IsNavigable(UnityEngine.UIElements.Focusable focusable);
            /*0x17beb00*/ NavigateFocusRing(UnityEngine.UIElements.VisualElement root);
            /*0xe9ad40*/ UnityEngine.UIElements.FocusController get_focusController();
            /*0x17bdae0*/ UnityEngine.UIElements.FocusChangeDirection GetFocusChangeDirection(UnityEngine.UIElements.Focusable currentFocusable, UnityEngine.UIElements.EventBase e);
            /*0x17be5c0*/ UnityEngine.UIElements.Focusable GetNextFocusable(UnityEngine.UIElements.Focusable currentFocusable, UnityEngine.UIElements.FocusChangeDirection direction);
            /*0x17bdfc0*/ UnityEngine.UIElements.Focusable GetNextFocusable2D(UnityEngine.UIElements.Focusable currentFocusable, UnityEngine.UIElements.NavigateFocusRing.ChangeDirection direction);

            class ChangeDirection : UnityEngine.UIElements.FocusChangeDirection
            {
                /*0x17b28d0*/ ChangeDirection(int i);
            }

            struct FocusableHierarchyTraversal
            {
                /*0x10*/ UnityEngine.UIElements.VisualElement currentFocusable;
                /*0x18*/ UnityEngine.Rect validRect;
                /*0x28*/ bool firstPass;
                /*0x30*/ UnityEngine.UIElements.NavigateFocusRing.ChangeDirection direction;

                /*0x17b5f30*/ bool ValidateHierarchyTraversal(UnityEngine.UIElements.VisualElement v);
                /*0x17b5e30*/ bool ValidateElement(UnityEngine.UIElements.VisualElement v);
                /*0x17b5a10*/ int Order(UnityEngine.UIElements.VisualElement a, UnityEngine.UIElements.VisualElement b);
                /*0x17b5ac0*/ int StrictOrder(UnityEngine.UIElements.VisualElement a, UnityEngine.UIElements.VisualElement b);
                /*0x17b5b40*/ int StrictOrder(UnityEngine.Rect ra, UnityEngine.Rect rb);
                /*0x17b5d10*/ int TieBreaker(UnityEngine.Rect ra, UnityEngine.Rect rb);
                /*0x17b5810*/ UnityEngine.UIElements.VisualElement GetBestOverall(UnityEngine.UIElements.VisualElement candidate, UnityEngine.UIElements.VisualElement bestSoFar);
            }
        }

        enum PanelScaleMode
        {
            ConstantPixelSize = 0,
            ConstantPhysicalSize = 1,
            ScaleWithScreenSize = 2,
        }

        enum PanelScreenMatchMode
        {
            MatchWidthOrHeight = 0,
            Shrink = 1,
            Expand = 2,
        }

        class PanelSettings : UnityEngine.ScriptableObject
        {
            static int k_DefaultSortingOrder = 0;
            static float k_DefaultScaleValue = 1;
            static string k_DefaultStyleSheetPath = "Packages/com.unity.ui/PackageResources/StyleSheets/Generated/Default.tss.asset";
            static float DefaultDpi = 96;
            /*0x18*/ UnityEngine.UIElements.ThemeStyleSheet themeUss;
            /*0x20*/ UnityEngine.RenderTexture m_TargetTexture;
            /*0x28*/ UnityEngine.UIElements.PanelScaleMode m_ScaleMode;
            /*0x2c*/ float m_ReferenceSpritePixelsPerUnit;
            /*0x30*/ float m_Scale;
            /*0x34*/ float m_ReferenceDpi;
            /*0x38*/ float m_FallbackDpi;
            /*0x3c*/ UnityEngine.Vector2Int m_ReferenceResolution;
            /*0x44*/ UnityEngine.UIElements.PanelScreenMatchMode m_ScreenMatchMode;
            /*0x48*/ float m_Match;
            /*0x4c*/ float m_SortingOrder;
            /*0x50*/ int m_TargetDisplay;
            /*0x54*/ bool m_ClearDepthStencil;
            /*0x55*/ bool m_ClearColor;
            /*0x58*/ UnityEngine.Color m_ColorClearValue;
            /*0x68*/ UnityEngine.UIElements.PanelSettings.RuntimePanelAccess m_PanelAccess;
            /*0x70*/ UnityEngine.UIElements.UIDocumentList m_AttachedUIDocumentsList;
            /*0x78*/ UnityEngine.UIElements.DynamicAtlasSettings m_DynamicAtlasSettings;
            /*0x80*/ UnityEngine.Shader m_AtlasBlitShader;
            /*0x88*/ UnityEngine.Shader m_RuntimeShader;
            /*0x90*/ UnityEngine.Shader m_RuntimeWorldShader;
            /*0x98*/ UnityEngine.UIElements.PanelTextSettings textSettings;
            /*0xa0*/ UnityEngine.Rect m_TargetRect;
            /*0xb0*/ float m_ResolvedScale;
            /*0xb8*/ UnityEngine.UIElements.StyleSheet m_OldThemeUss;
            /*0xc0*/ float <ScreenDPI>k__BackingField;
            /*0xc8*/ System.Func<UnityEngine.Vector2, UnityEngine.Vector2> m_AssignedScreenToPanel;

            /*0x17c0a30*/ PanelSettings();
            /*0x8b8f40*/ UnityEngine.UIElements.ThemeStyleSheet get_themeStyleSheet();
            /*0x17c0de0*/ void set_themeStyleSheet(UnityEngine.UIElements.ThemeStyleSheet value);
            /*0x61a260*/ UnityEngine.RenderTexture get_targetTexture();
            /*0x17c0d80*/ void set_targetTexture(UnityEngine.RenderTexture value);
            /*0x3e3ae0*/ UnityEngine.UIElements.PanelScaleMode get_scaleMode();
            /*0xc6dab0*/ void set_scaleMode(UnityEngine.UIElements.PanelScaleMode value);
            /*0x1644f10*/ float get_referenceSpritePixelsPerUnit();
            /*0x4ccc50*/ void set_referenceSpritePixelsPerUnit(float value);
            /*0x1101d20*/ float get_scale();
            /*0x1102a70*/ void set_scale(float value);
            /*0x995150*/ float get_referenceDpi();
            /*0x17c0cb0*/ void set_referenceDpi(float value);
            /*0x136e840*/ float get_fallbackDpi();
            /*0x17c0c80*/ void set_fallbackDpi(float value);
            /*0x17c0bf0*/ UnityEngine.Vector2Int get_referenceResolution();
            /*0x17c0ce0*/ void set_referenceResolution(UnityEngine.Vector2Int value);
            /*0x10eed50*/ UnityEngine.UIElements.PanelScreenMatchMode get_screenMatchMode();
            /*0x10eed60*/ void set_screenMatchMode(UnityEngine.UIElements.PanelScreenMatchMode value);
            /*0x136a360*/ float get_match();
            /*0x136a440*/ void set_match(float value);
            /*0x17c0c00*/ float get_sortingOrder();
            /*0x17c0cf0*/ void set_sortingOrder(float value);
            /*0x17c00a0*/ void ApplySortingOrder();
            /*0xc70ac0*/ int get_targetDisplay();
            /*0x17c0d40*/ void set_targetDisplay(int value);
            /*0x137d630*/ bool get_clearDepthStencil();
            /*0x17c0c60*/ void set_clearDepthStencil(bool value);
            /*0x17c0ba0*/ float get_depthClearValue();
            /*0x137d5e0*/ bool get_clearColor();
            /*0x137deb0*/ void set_clearColor(bool value);
            /*0x1441640*/ UnityEngine.Color get_colorClearValue();
            /*0x17c0c70*/ void set_colorClearValue(UnityEngine.Color value);
            /*0x17c0bd0*/ UnityEngine.UIElements.BaseRuntimePanel get_panel();
            /*0x17c0bb0*/ bool get_isInitialized();
            /*0x17c0c10*/ UnityEngine.UIElements.VisualElement get_visualTree();
            /*0xecb7b0*/ UnityEngine.UIElements.DynamicAtlasSettings get_dynamicAtlasSettings();
            /*0x1698990*/ void set_dynamicAtlasSettings(UnityEngine.UIElements.DynamicAtlasSettings value);
            /*0x32d010*/ void Reset();
            /*0x17c07d0*/ void OnEnable();
            /*0x17c04a0*/ void OnDisable();
            /*0x17c04a0*/ void DisposePanel();
            /*0x17c0b90*/ float get_ScreenDPI();
            /*0x17c0c50*/ void set_ScreenDPI(float value);
            /*0x17c0a10*/ void UpdateScreenDPI();
            /*0x17c00e0*/ void ApplyThemeStyleSheet(UnityEngine.UIElements.VisualElement root);
            /*0x17c0600*/ void InitializeShaders();
            /*0x17bf590*/ void ApplyPanelSettings();
            /*0x17c09c0*/ void SetScreenToPanelSpaceFunction(System.Func<UnityEngine.Vector2, UnityEngine.Vector2> screentoPanelSpaceFunction);
            /*0x17c08c0*/ float ResolveScale(UnityEngine.Rect targetRect, float screenDpi);
            /*0x17c04c0*/ UnityEngine.Rect GetDisplayRect();
            /*0x17c0270*/ void AttachAndInsertUIDocumentToVisualTree(UnityEngine.UIElements.UIDocument uiDocument);
            /*0x17c0390*/ void DetachUIDocument(UnityEngine.UIElements.UIDocument uiDocument);

            class RuntimePanelAccess
            {
                /*0x10*/ UnityEngine.UIElements.PanelSettings m_Settings;
                /*0x18*/ UnityEngine.UIElements.BaseRuntimePanel m_RuntimePanel;

                /*0x49b490*/ RuntimePanelAccess(UnityEngine.UIElements.PanelSettings settings);
                /*0xfd8400*/ bool get_isInitialized();
                /*0x17c6ed0*/ UnityEngine.UIElements.BaseRuntimePanel get_panel();
                /*0x17c6d00*/ void DisposePanel();
                /*0x17c6e90*/ void SetTargetTexture();
                /*0x17c6e20*/ void SetSortingPriority();
                /*0x17c6e60*/ void SetTargetDisplay();
                /*0x17c6c20*/ UnityEngine.UIElements.BaseRuntimePanel CreateRelatedRuntimePanel();
                /*0x17c6d80*/ void DisposeRelatedPanel();
                /*0x17c6dd0*/ void MarkPotentiallyEmpty();
            }
        }

        class RuntimeEventDispatcher
        {
            static /*0x17c67d0*/ UnityEngine.UIElements.EventDispatcher Create();
        }

        class RuntimePanel : UnityEngine.UIElements.BaseRuntimePanel
        {
            static /*0x0*/ UnityEngine.UIElements.EventDispatcher s_EventDispatcher;
            /*0x1e8*/ UnityEngine.UIElements.PanelSettings m_PanelSettings;

            static /*0x17c7380*/ RuntimePanel();
            static /*0x17c7180*/ UnityEngine.UIElements.RuntimePanel Create(UnityEngine.ScriptableObject ownerObject);
            /*0x17c73e0*/ RuntimePanel(UnityEngine.ScriptableObject ownerObject);
            /*0x1474d50*/ UnityEngine.UIElements.PanelSettings get_panelSettings();
            /*0x17c7250*/ void Update();
            /*0x17c71e0*/ void OnElementFocus(UnityEngine.UIElements.FocusEvent evt);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.RuntimePanel.<> <>9;
                static /*0x8*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.FocusEvent, UnityEngine.UIElements.RuntimePanel> <>9__5_0;

                static /*0x17c9490*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17c9090*/ void <.ctor>b__5_0(UnityEngine.UIElements.FocusEvent e, UnityEngine.UIElements.RuntimePanel p);
            }
        }

        class UIDocumentList
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.UIDocument> m_AttachedUIDocuments;

            /*0x17ca1a0*/ UIDocumentList();
            /*0x17ca130*/ void RemoveFromListAndFromVisualTree(UnityEngine.UIElements.UIDocument uiDocument);
            /*0x17c9dc0*/ void AddToListAndToVisualTree(UnityEngine.UIElements.UIDocument uiDocument, UnityEngine.UIElements.VisualElement visualTree, int firstInsertIndex);
        }

        class UIDocument : UnityEngine.MonoBehaviour
        {
            static string k_RootStyleClassName = "unity-ui-document__root";
            static string k_VisualElementNameSuffix = "-container";
            static int k_DefaultSortingOrder = 0;
            static /*0x0*/ int s_CurrentUIDocumentCounter;
            /*0x20*/ int m_UIDocumentCreationIndex;
            /*0x28*/ UnityEngine.UIElements.PanelSettings m_PanelSettings;
            /*0x30*/ UnityEngine.UIElements.PanelSettings m_PreviousPanelSettings;
            /*0x38*/ UnityEngine.UIElements.UIDocument m_ParentUI;
            /*0x40*/ UnityEngine.UIElements.UIDocumentList m_ChildrenContent;
            /*0x48*/ System.Collections.Generic.List<UnityEngine.UIElements.UIDocument> m_ChildrenContentCopy;
            /*0x50*/ UnityEngine.UIElements.VisualTreeAsset sourceAsset;
            /*0x58*/ UnityEngine.UIElements.VisualElement m_RootVisualElement;
            /*0x60*/ int m_FirstChildInsertIndex;
            /*0x64*/ float m_SortingOrder;

            /*0x17cb170*/ UIDocument();
            /*0x15f1340*/ UnityEngine.UIElements.PanelSettings get_panelSettings();
            /*0x17cb210*/ void set_panelSettings(UnityEngine.UIElements.PanelSettings value);
            /*0x995140*/ UnityEngine.UIElements.UIDocument get_parentUI();
            /*0xe5a080*/ void set_parentUI(UnityEngine.UIElements.UIDocument value);
            /*0x16346a0*/ UnityEngine.UIElements.VisualTreeAsset get_visualTreeAsset();
            /*0x17cb500*/ void set_visualTreeAsset(UnityEngine.UIElements.VisualTreeAsset value);
            /*0x16345d0*/ UnityEngine.UIElements.VisualElement get_rootVisualElement();
            /*0xf91dd0*/ int get_firstChildInserIndex();
            /*0x17cb200*/ float get_sortingOrder();
            /*0x17cb4e0*/ void set_sortingOrder(float value);
            /*0x17ca3e0*/ void ApplySortingOrder();
            /*0x17ca3f0*/ void Awake();
            /*0x17ca4f0*/ void OnEnable();
            /*0x17caf70*/ void SetupFromHierarchy();
            /*0x17ca400*/ UnityEngine.UIElements.UIDocument FindUIDocumentParent();
            /*0x17cae60*/ void Reset();
            /*0x17ca220*/ void AddChildAndInsertContentToVisualTree(UnityEngine.UIElements.UIDocument child);
            /*0x17cace0*/ void RemoveChild(UnityEngine.UIElements.UIDocument child);
            /*0x17ca870*/ void RecreateUI();
            /*0x17cb0e0*/ void SetupRootClassList();
            /*0x17ca310*/ void AddRootVisualElementToTree();
            /*0x17cad50*/ void RemoveFromHierarchy();
            /*0x17ca4b0*/ void OnDisable();
            /*0x17ca5c0*/ void OnTransformChildrenChanged();
            /*0x17ca7b0*/ void OnTransformParentChanged();
            /*0x17ca7c0*/ void ReactToHierarchyChanged();
        }

        class GroupBoxUtility
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.IGroupBox, UnityEngine.UIElements.IGroupManager> s_GroupManagers;
            static /*0x8*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.IGroupBoxOption, UnityEngine.UIElements.IGroupManager> s_GroupOptionManagerCache;
            static /*0x10*/ System.Type k_GenericGroupBoxType;

            static /*0x17b6d90*/ GroupBoxUtility();
            static /*0x2a5510*/ void RegisterGroupBoxOption<T>(T option);
            static /*0x2a5510*/ void UnregisterGroupBoxOption<T>(T option);
            static /*0x2a5510*/ void OnOptionSelected<T>(T selectedOption);
            static /*0x17b6610*/ UnityEngine.UIElements.IGroupManager FindOrCreateGroupManager(UnityEngine.UIElements.IGroupBox groupBox);
            static /*0x17b6b60*/ void OnGroupBoxDetachedFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt);
            static /*0x17b6c20*/ void OnPanelDestroyed(UnityEngine.UIElements.BaseVisualElementPanel panel);
        }

        class IEnumerableExtensions
        {
            static /*0x17b6ee0*/ bool HasValues(System.Collections.Generic.IEnumerable<string> collection);
        }

        interface IGroupBoxOption
        {
            /*0x181190*/ void SetSelected(bool selected);
        }

        interface IGroupBox
        {
            /*0x17aec0*/ void OnOptionAdded(UnityEngine.UIElements.IGroupBoxOption option);
            /*0x17aec0*/ void OnOptionRemoved(UnityEngine.UIElements.IGroupBoxOption option);
        }

        interface IGroupBox<T> : UnityEngine.UIElements.IGroupBox
        {
        }

        interface IGroupManager
        {
            /*0x17aec0*/ void Init(UnityEngine.UIElements.IGroupBox groupBox);
            /*0x17aec0*/ void OnOptionSelectionChanged(UnityEngine.UIElements.IGroupBoxOption selectedOption);
            /*0x17aec0*/ void RegisterOption(UnityEngine.UIElements.IGroupBoxOption option);
            /*0x17aec0*/ void UnregisterOption(UnityEngine.UIElements.IGroupBoxOption option);
        }

        class DefaultGroupManager : UnityEngine.UIElements.IGroupManager
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.IGroupBoxOption> m_GroupOptions;
            /*0x18*/ UnityEngine.UIElements.IGroupBoxOption m_SelectedOption;
            /*0x20*/ UnityEngine.UIElements.IGroupBox m_GroupBox;

            /*0x17b3720*/ DefaultGroupManager();
            /*0x7965a0*/ void Init(UnityEngine.UIElements.IGroupBox groupBox);
            /*0x17b33d0*/ void OnOptionSelectionChanged(UnityEngine.UIElements.IGroupBoxOption selectedOption);
            /*0x17b35a0*/ void RegisterOption(UnityEngine.UIElements.IGroupBoxOption option);
            /*0x17b36a0*/ void UnregisterOption(UnityEngine.UIElements.IGroupBoxOption option);
        }

        class IMGUIContainer : UnityEngine.UIElements.VisualElement, System.IDisposable
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string ussFoldoutChildDepthClassName;
            static /*0x10*/ System.Collections.Generic.List<string> ussFoldoutChildDepthClassNames;
            static /*0x18*/ Unity.Profiling.ProfilerMarker k_OnGUIMarker;
            static /*0x20*/ Unity.Profiling.ProfilerMarker k_ImmediateCallbackMarker;
            static /*0x28*/ UnityEngine.Event s_DefaultMeasureEvent;
            static /*0x30*/ UnityEngine.Event s_MeasureEvent;
            static /*0x38*/ UnityEngine.Event s_CurrentEvent;
            /*0x3c8*/ System.Action m_OnGUIHandler;
            /*0x3d0*/ UnityEngine.ObjectGUIState m_ObjectGUIState;
            /*0x3d8*/ bool useOwnerObjectGUIState;
            /*0x3dc*/ UnityEngine.Rect <lastWorldClip>k__BackingField;
            /*0x3ec*/ bool m_CullingEnabled;
            /*0x3ed*/ bool m_IsFocusDelegated;
            /*0x3ee*/ bool m_RefreshCachedLayout;
            /*0x3f0*/ UnityEngine.GUILayoutUtility.LayoutCache m_Cache;
            /*0x3f8*/ UnityEngine.Rect m_CachedClippingRect;
            /*0x408*/ UnityEngine.Matrix4x4 m_CachedTransform;
            /*0x448*/ UnityEngine.UIElements.ContextType <contextType>k__BackingField;
            /*0x44c*/ bool lostFocus;
            /*0x44d*/ bool receivedFocus;
            /*0x450*/ UnityEngine.UIElements.FocusChangeDirection focusChangeDirection;
            /*0x458*/ bool hasFocusableControls;
            /*0x45c*/ int newKeyboardFocusControlID;
            /*0x460*/ bool <focusOnlyIfHasFocusableControls>k__BackingField;
            /*0x464*/ UnityEngine.UIElements.IMGUIContainer.GUIGlobals m_GUIGlobals;

            static /*0x17bada0*/ IMGUIContainer();
            static /*0x17b99a0*/ bool IsDockAreaMouseUp(UnityEngine.UIElements.EventBase evt);
            static /*0x17b8c60*/ void GetCurrentTransformAndClip(UnityEngine.UIElements.IMGUIContainer container, UnityEngine.Event evt, ref UnityEngine.Matrix4x4 transform, ref UnityEngine.Rect clipRect);
            /*0x17bb560*/ IMGUIContainer();
            /*0x17bb280*/ IMGUIContainer(System.Action onGUIHandler);
            /*0x17bb770*/ System.Action get_onGUIHandler();
            /*0x17bb7a0*/ void set_onGUIHandler(System.Action value);
            /*0x17bb650*/ UnityEngine.ObjectGUIState get_guiState();
            /*0x17bb700*/ UnityEngine.Rect get_lastWorldClip();
            /*0x17bb790*/ void set_lastWorldClip(UnityEngine.Rect value);
            /*0x17bb630*/ bool get_cullingEnabled();
            /*0x17bb570*/ UnityEngine.GUILayoutUtility.LayoutCache get_cache();
            /*0x17bb740*/ float get_layoutMeasuredWidth();
            /*0x17bb710*/ float get_layoutMeasuredHeight();
            /*0x17bb620*/ UnityEngine.UIElements.ContextType get_contextType();
            /*0x17bb780*/ void set_contextType(UnityEngine.UIElements.ContextType value);
            /*0x17bb640*/ bool get_focusOnlyIfHasFocusableControls();
            /*0x17bb5f0*/ bool get_canGrabFocus();
            /*0x17b9ed0*/ void OnGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc);
            /*0x17ba300*/ void SaveGlobals();
            /*0x17ba1b0*/ void RestoreGlobals();
            /*0x17b76f0*/ void DoOnGUI(UnityEngine.Event evt, UnityEngine.Matrix4x4 parentTransform, UnityEngine.Rect clippingRect, bool isComputingLayout, UnityEngine.Rect layoutSize, System.Action onGUIHandler, bool canAffectFocus);
            /*0x17b9eb0*/ void MarkDirtyLayout();
            /*0x17ba020*/ void ProcessEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17b70a0*/ void DoIMGUIRepaint();
            /*0x17ba4f0*/ bool SendEventToIMGUI(UnityEngine.UIElements.EventBase evt, bool canAffectFocus, bool verifyBounds);
            /*0x17ba410*/ bool SendEventToIMGUIRaw(UnityEngine.UIElements.EventBase evt, bool canAffectFocus, bool verifyBounds);
            /*0x17ba940*/ bool VerifyBounds(UnityEngine.UIElements.EventBase evt);
            /*0x17b9860*/ bool IsContainerCapturingTheMouse();
            /*0x17b9cd0*/ bool IsLocalEvent(UnityEngine.UIElements.EventBase evt);
            /*0x17b9ae0*/ bool IsEventInsideLocalWindow(UnityEngine.UIElements.EventBase evt);
            /*0x17b9150*/ bool HandleIMGUIEvent(UnityEngine.Event e, bool canAffectFocus);
            /*0x17b8e80*/ bool HandleIMGUIEvent(UnityEngine.Event e, System.Action onGUIHandler, bool canAffectFocus);
            /*0x17b9420*/ bool HandleIMGUIEvent(UnityEngine.Event e, UnityEngine.Matrix4x4 worldTransform, UnityEngine.Rect clippingRect, System.Action onGUIHandler, bool canAffectFocus);
            /*0x17b8780*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x17ba7c0*/ void SetFoldoutDepthClass();
            /*0x17b73f0*/ UnityEngine.Vector2 DoMeasure(float desiredWidth, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float desiredHeight, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);
            /*0x17b8be0*/ UnityEngine.Rect GetCurrentClipRect();
            /*0x17b7010*/ void Dispose();
            /*0x17b7080*/ void Dispose(bool disposeManaged);
            /*0x17ba930*/ void <DoOnGUI>b__56_0();

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.IMGUIContainer, UnityEngine.UIElements.IMGUIContainer.UxmlTraits>
            {
                /*0x17cb770*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
            {
                /*0x17cb7b0*/ UxmlTraits();
            }

            struct GUIGlobals
            {
                /*0x10*/ UnityEngine.Matrix4x4 matrix;
                /*0x50*/ UnityEngine.Color color;
                /*0x60*/ UnityEngine.Color contentColor;
                /*0x70*/ UnityEngine.Color backgroundColor;
                /*0x80*/ bool enabled;
                /*0x81*/ bool changed;
                /*0x84*/ int displayIndex;
            }
        }

        class ImmediateModeException : System.Exception
        {
            /*0x17bba30*/ ImmediateModeException(System.Exception inner);
        }

        enum SelectionType
        {
            None = 0,
            Single = 1,
            Multiple = 2,
        }

        interface ISerializableJsonDictionary
        {
            /*0x2a5510*/ void Set<T>(string key, T value);
            /*0x2a5510*/ T Get<T>(string key);
            /*0x183150*/ void Overwrite(object obj, string key);
            /*0x17e620*/ bool ContainsKey(string key);
        }

        interface ITransform
        {
            /*0x180e40*/ UnityEngine.Vector3 get_position();
            /*0x17aec0*/ void set_position(UnityEngine.Vector3 value);
            /*0x180e40*/ UnityEngine.Vector3 get_scale();
        }

        enum KeyboardNavigationOperation
        {
            None = 0,
            SelectAll = 1,
            Cancel = 2,
            Submit = 3,
            Previous = 4,
            Next = 5,
            MoveRight = 6,
            MoveLeft = 7,
            PageUp = 8,
            PageDown = 9,
            Begin = 10,
            End = 11,
        }

        class KeyboardNavigationManipulator : UnityEngine.UIElements.Manipulator
        {
            /*0x18*/ System.Action<UnityEngine.UIElements.KeyboardNavigationOperation, UnityEngine.UIElements.EventBase> m_Action;

            static /*0x17bbed0*/ UnityEngine.UIElements.KeyboardNavigationOperation <OnKeyDown>g__GetOperation|4_0(ref UnityEngine.UIElements.KeyboardNavigationManipulator.<> );
            /*0xe78ae0*/ KeyboardNavigationManipulator(System.Action<UnityEngine.UIElements.KeyboardNavigationOperation, UnityEngine.UIElements.EventBase> action);
            /*0x17bbcf0*/ void RegisterCallbacksOnTarget();
            /*0x17bbfd0*/ void UnregisterCallbacksFromTarget();
            /*0x17bbaa0*/ void OnKeyDown(UnityEngine.UIElements.KeyDownEvent evt);
            /*0x17bbbc0*/ void OnNavigationCancel(UnityEngine.UIElements.NavigationCancelEvent evt);
            /*0x17bbcc0*/ void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt);
            /*0x17bbbf0*/ void OnNavigationMove(UnityEngine.UIElements.NavigationMoveEvent evt);
            /*0x17797b0*/ void Invoke(UnityEngine.UIElements.KeyboardNavigationOperation operation, UnityEngine.UIElements.EventBase evt);

            struct <>c__DisplayClass4_0
            {
                /*0x10*/ UnityEngine.UIElements.KeyDownEvent evt;
            }
        }

        struct ManipulatorActivationFilter : System.IEquatable<UnityEngine.UIElements.ManipulatorActivationFilter>
        {
            /*0x10*/ UnityEngine.UIElements.MouseButton <button>k__BackingField;
            /*0x14*/ UnityEngine.EventModifiers <modifiers>k__BackingField;
            /*0x18*/ int <clickCount>k__BackingField;

            /*0x6bba50*/ UnityEngine.UIElements.MouseButton get_button();
            /*0x6bbd40*/ void set_button(UnityEngine.UIElements.MouseButton value);
            /*0xa5a7c0*/ UnityEngine.EventModifiers get_modifiers();
            /*0xfc2c10*/ void set_modifiers(UnityEngine.EventModifiers value);
            /*0x834a60*/ int get_clickCount();
            /*0x17bc270*/ bool Equals(object obj);
            /*0x1616040*/ bool Equals(UnityEngine.UIElements.ManipulatorActivationFilter other);
            /*0x17bc320*/ int GetHashCode();
            /*0x17bc6c0*/ bool Matches(UnityEngine.UIElements.IMouseEvent e);
            /*0x17bc480*/ bool HasModifiers(UnityEngine.UIElements.IMouseEvent e);
            /*0x17bc5f0*/ bool Matches(UnityEngine.UIElements.IPointerEvent e);
            /*0x17bc390*/ bool HasModifiers(UnityEngine.UIElements.IPointerEvent e);
            /*0x17bc570*/ bool MatchModifiers(bool alt, bool ctrl, bool shift, bool command);
        }

        interface IManipulator
        {
            /*0x17aec0*/ void set_target(UnityEngine.UIElements.VisualElement value);
        }

        class Manipulator : UnityEngine.UIElements.IManipulator
        {
            /*0x10*/ UnityEngine.UIElements.VisualElement m_Target;

            /*0x32f970*/ Manipulator();
            /*0x180fc0*/ void RegisterCallbacksOnTarget();
            /*0x180fc0*/ void UnregisterCallbacksFromTarget();
            /*0x9e3110*/ UnityEngine.UIElements.VisualElement get_target();
            /*0x17bc790*/ void set_target(UnityEngine.UIElements.VisualElement value);
        }

        enum MouseButton
        {
            LeftMouse = 0,
            RightMouse = 1,
            MiddleMouse = 2,
        }

        class MouseCaptureController
        {
            static /*0x17bcde0*/ bool HasMouseCapture(UnityEngine.UIElements.IEventHandler handler);
            static /*0x17bcd10*/ void CaptureMouse(UnityEngine.UIElements.IEventHandler handler);
            static /*0x17bcea0*/ void ReleaseMouse(UnityEngine.UIElements.IEventHandler handler);
        }

        class MouseManipulator : UnityEngine.UIElements.Manipulator
        {
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.ManipulatorActivationFilter> <activators>k__BackingField;
            /*0x20*/ UnityEngine.UIElements.ManipulatorActivationFilter m_currentActivator;

            /*0x17bd820*/ MouseManipulator();
            /*0x32f410*/ System.Collections.Generic.List<UnityEngine.UIElements.ManipulatorActivationFilter> get_activators();
            /*0x7963c0*/ void set_activators(System.Collections.Generic.List<UnityEngine.UIElements.ManipulatorActivationFilter> value);
            /*0x17bd5e0*/ bool CanStartManipulation(UnityEngine.UIElements.IMouseEvent e);
            /*0x17bd7b0*/ bool CanStopManipulation(UnityEngine.UIElements.IMouseEvent e);
        }

        struct MeshWriteDataInterface
        {
            /*0x10*/ nint vertices;
            /*0x18*/ nint indices;
            /*0x20*/ int vertexCount;
            /*0x24*/ int indexCount;
        }

        class UIPainter2D
        {
            static /*0x17cb6b0*/ nint Create(bool computeBBox);
            static /*0x17cb6f0*/ void Destroy(nint handle);
            static /*0x17cb730*/ void Reset(nint handle);
        }

        class MeshBuilderNative
        {
            static /*0x17bc860*/ UnityEngine.UIElements.MeshWriteDataInterface MakeBorder(UnityEngine.UIElements.MeshBuilderNative.NativeBorderParams borderParams, float posZ);
            static /*0x17bc930*/ UnityEngine.UIElements.MeshWriteDataInterface MakeSolidRect(UnityEngine.UIElements.MeshBuilderNative.NativeRectParams rectParams, float posZ);
            static /*0x17bca00*/ UnityEngine.UIElements.MeshWriteDataInterface MakeTexturedRect(UnityEngine.UIElements.MeshBuilderNative.NativeRectParams rectParams, float posZ);
            static /*0x17bcc20*/ UnityEngine.UIElements.MeshWriteDataInterface MakeVectorGraphicsStretchBackground(UnityEngine.UIElements.Vertex[] svgVertices, ushort[] svgIndices, float svgWidth, float svgHeight, UnityEngine.Rect targetRect, UnityEngine.Rect sourceUV, UnityEngine.ScaleMode scaleMode, UnityEngine.Color tint, UnityEngine.UIElements.MeshBuilderNative.NativeColorPage colorPage, int settingIndexOffset, ref int finalVertexCount, ref int finalIndexCount);
            static /*0x17bcae0*/ UnityEngine.UIElements.MeshWriteDataInterface MakeVectorGraphics9SliceBackground(UnityEngine.UIElements.Vertex[] svgVertices, ushort[] svgIndices, float svgWidth, float svgHeight, UnityEngine.Rect targetRect, UnityEngine.Vector4 sliceLTRB, UnityEngine.Color tint, UnityEngine.UIElements.MeshBuilderNative.NativeColorPage colorPage, int settingIndexOffset);
            static /*0x17bc800*/ void MakeBorder_Injected(ref UnityEngine.UIElements.MeshBuilderNative.NativeBorderParams borderParams, float posZ, ref UnityEngine.UIElements.MeshWriteDataInterface ret);
            static /*0x17bc8d0*/ void MakeSolidRect_Injected(ref UnityEngine.UIElements.MeshBuilderNative.NativeRectParams rectParams, float posZ, ref UnityEngine.UIElements.MeshWriteDataInterface ret);
            static /*0x17bc9a0*/ void MakeTexturedRect_Injected(ref UnityEngine.UIElements.MeshBuilderNative.NativeRectParams rectParams, float posZ, ref UnityEngine.UIElements.MeshWriteDataInterface ret);
            static /*0x17bcba0*/ void MakeVectorGraphicsStretchBackground_Injected(UnityEngine.UIElements.Vertex[] svgVertices, ushort[] svgIndices, float svgWidth, float svgHeight, ref UnityEngine.Rect targetRect, ref UnityEngine.Rect sourceUV, UnityEngine.ScaleMode scaleMode, ref UnityEngine.Color tint, ref UnityEngine.UIElements.MeshBuilderNative.NativeColorPage colorPage, int settingIndexOffset, ref int finalVertexCount, ref int finalIndexCount, ref UnityEngine.UIElements.MeshWriteDataInterface ret);
            static /*0x17bca70*/ void MakeVectorGraphics9SliceBackground_Injected(UnityEngine.UIElements.Vertex[] svgVertices, ushort[] svgIndices, float svgWidth, float svgHeight, ref UnityEngine.Rect targetRect, ref UnityEngine.Vector4 sliceLTRB, ref UnityEngine.Color tint, ref UnityEngine.UIElements.MeshBuilderNative.NativeColorPage colorPage, int settingIndexOffset, ref UnityEngine.UIElements.MeshWriteDataInterface ret);

            struct NativeColorPage
            {
                /*0x10*/ int isValid;
                /*0x14*/ UnityEngine.Color32 pageAndID;
            }

            struct NativeBorderParams
            {
                /*0x10*/ UnityEngine.Rect rect;
                /*0x20*/ UnityEngine.Color leftColor;
                /*0x30*/ UnityEngine.Color topColor;
                /*0x40*/ UnityEngine.Color rightColor;
                /*0x50*/ UnityEngine.Color bottomColor;
                /*0x60*/ float leftWidth;
                /*0x64*/ float topWidth;
                /*0x68*/ float rightWidth;
                /*0x6c*/ float bottomWidth;
                /*0x70*/ UnityEngine.Vector2 topLeftRadius;
                /*0x78*/ UnityEngine.Vector2 topRightRadius;
                /*0x80*/ UnityEngine.Vector2 bottomRightRadius;
                /*0x88*/ UnityEngine.Vector2 bottomLeftRadius;
                /*0x90*/ UnityEngine.UIElements.MeshBuilderNative.NativeColorPage leftColorPage;
                /*0x98*/ UnityEngine.UIElements.MeshBuilderNative.NativeColorPage topColorPage;
                /*0xa0*/ UnityEngine.UIElements.MeshBuilderNative.NativeColorPage rightColorPage;
                /*0xa8*/ UnityEngine.UIElements.MeshBuilderNative.NativeColorPage bottomColorPage;
            }

            struct NativeRectParams
            {
                /*0x10*/ UnityEngine.Rect rect;
                /*0x20*/ UnityEngine.Rect subRect;
                /*0x30*/ UnityEngine.Rect uv;
                /*0x40*/ UnityEngine.Rect uvRegion;
                /*0x50*/ UnityEngine.Color color;
                /*0x60*/ UnityEngine.ScaleMode scaleMode;
                /*0x64*/ UnityEngine.Vector2 topLeftRadius;
                /*0x6c*/ UnityEngine.Vector2 topRightRadius;
                /*0x74*/ UnityEngine.Vector2 bottomRightRadius;
                /*0x7c*/ UnityEngine.Vector2 bottomLeftRadius;
                /*0x84*/ UnityEngine.Rect backgroundRepeatRect;
                /*0x94*/ UnityEngine.Vector2 contentSize;
                /*0x9c*/ UnityEngine.Vector2 textureSize;
                /*0xa4*/ float texturePixelsPerPoint;
                /*0xa8*/ int leftSlice;
                /*0xac*/ int topSlice;
                /*0xb0*/ int rightSlice;
                /*0xb4*/ int bottomSlice;
                /*0xb8*/ float sliceScale;
                /*0xbc*/ UnityEngine.Vector4 rectInset;
                /*0xcc*/ UnityEngine.UIElements.MeshBuilderNative.NativeColorPage colorPage;
            }
        }

        class UIElementsRuntimeUtilityNative
        {
            static /*0x0*/ System.Action RepaintOverlayPanelsCallback;
            static /*0x8*/ System.Action UpdateRuntimePanelsCallback;
            static /*0x10*/ System.Action RepaintOffscreenPanelsCallback;

            static /*0x17cb5b0*/ void RepaintOverlayPanels();
            static /*0x17cb630*/ void UpdateRuntimePanels();
            static /*0x17cb560*/ void RepaintOffscreenPanels();
            static /*0x17cb530*/ void RegisterPlayerloopCallback();
            static /*0x17cb600*/ void UnregisterPlayerloopCallback();
            static /*0x17cb680*/ void VisualElementCreation();
        }

        class ObjectPool<T>
        {
            /*0x0*/ System.Collections.Generic.Stack<T> m_Stack;
            /*0x0*/ int m_MaxSize;
            /*0x0*/ System.Func<T> CreateFunc;

            /*0x182a70*/ ObjectPool(System.Func<T> CreateFunc, int maxSize);
            /*0x180980*/ int get_maxSize();
            /*0x17aa40*/ void set_maxSize(int value);
            /*0x180980*/ int Size();
            /*0x2a5510*/ T Get();
            /*0x2a5510*/ void Release(T element);

            class <>c<T>
            {
                static /*0x0*/ UnityEngine.UIElements.ObjectPool.<>c<T> <>9;
                static /*0x0*/ System.Func<T> <>9__6_0;

                static /*0x180ff0*/ <>c();
                /*0x180fc0*/ <>c();
                /*0x2a5510*/ T <.ctor>b__6_0();
            }
        }

        enum ContextType
        {
            Player = 0,
            Editor = 1,
        }

        enum VersionChangeType
        {
            Bindings = 1,
            ViewData = 2,
            Hierarchy = 4,
            Layout = 8,
            StyleSheet = 16,
            Styles = 32,
            Overflow = 64,
            BorderRadius = 128,
            BorderWidth = 256,
            Transform = 512,
            Size = 1024,
            Repaint = 2048,
            Opacity = 4096,
            Color = 8192,
            RenderHints = 16384,
            TransitionProperty = 32768,
            EventCallbackCategories = 65536,
            Picking = 1048576,
        }

        enum UsageHints
        {
            None = 0,
            DynamicTransform = 1,
            GroupTransform = 2,
            MaskContainer = 4,
            DynamicColor = 8,
        }

        enum RenderHints
        {
            None = 0,
            GroupTransform = 1,
            BoneTransform = 2,
            ClipWithScissors = 4,
            MaskContainer = 8,
            DynamicColor = 16,
            DirtyOffset = 5,
            DirtyGroupTransform = 32,
            DirtyBoneTransform = 64,
            DirtyClipWithScissors = 128,
            DirtyMaskContainer = 256,
            DirtyDynamicColor = 512,
            DirtyAll = 992,
        }

        struct PanelClearSettings
        {
            /*0x10*/ bool clearDepthStencil;
            /*0x11*/ bool clearColor;
            /*0x14*/ UnityEngine.Color color;
        }

        class RepaintData
        {
            /*0x10*/ UnityEngine.Matrix4x4 <currentOffset>k__BackingField;
            /*0x50*/ UnityEngine.Vector2 <mousePosition>k__BackingField;
            /*0x58*/ UnityEngine.Rect <currentWorldClip>k__BackingField;
            /*0x68*/ UnityEngine.Event <repaintEvent>k__BackingField;

            /*0x17c6760*/ RepaintData();
            /*0x8b8920*/ UnityEngine.Matrix4x4 get_currentOffset();
            /*0x1441640*/ UnityEngine.Rect get_currentWorldClip();
            /*0x8af030*/ UnityEngine.Event get_repaintEvent();
            /*0xe69480*/ void set_repaintEvent(UnityEngine.Event value);
        }

        class HierarchyEvent : System.MulticastDelegate
        {
            /*0x7232d0*/ HierarchyEvent(object object, nint method);
            /*0x722200*/ void Invoke(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType changeType);
        }

        interface IPanel : System.IDisposable
        {
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_visualTree();
            /*0x1803b0*/ UnityEngine.UIElements.EventDispatcher get_dispatcher();
            /*0x180980*/ UnityEngine.UIElements.ContextType get_contextType();
            /*0x1803b0*/ UnityEngine.UIElements.FocusController get_focusController();
            UnityEngine.UIElements.VisualElement Pick(UnityEngine.Vector2 point);
        }

        class BaseVisualElementPanel : UnityEngine.UIElements.IPanel, System.IDisposable, UnityEngine.UIElements.IGroupBox
        {
            /*0x10*/ System.Action<UnityEngine.UIElements.BaseVisualElementPanel> panelDisposed;
            /*0x18*/ UnityEngine.UIElements.UIElementsBridge m_UIElementsBridge;
            /*0x20*/ float m_Scale;
            /*0x28*/ UnityEngine.Yoga.YogaConfig yogaConfig;
            /*0x30*/ float m_PixelsPerPoint;
            /*0x34*/ float <referenceSpritePixelsPerUnit>k__BackingField;
            /*0x38*/ UnityEngine.UIElements.PanelClearSettings <clearSettings>k__BackingField;
            /*0x4c*/ bool <duringLayoutPhase>k__BackingField;
            /*0x50*/ UnityEngine.UIElements.RepaintData <repaintData>k__BackingField;
            /*0x58*/ UnityEngine.UIElements.ICursorManager <cursorManager>k__BackingField;
            /*0x60*/ UnityEngine.UIElements.ContextualMenuManager <contextualMenuManager>k__BackingField;
            /*0x68*/ bool <disposed>k__BackingField;
            /*0x70*/ UnityEngine.UIElements.ElementUnderPointer m_TopElementUnderPointers;
            /*0x78*/ System.Action standardShaderChanged;
            /*0x80*/ System.Action standardWorldSpaceShaderChanged;
            /*0x88*/ System.Action atlasChanged;
            /*0x90*/ System.Action<UnityEngine.Material> updateMaterial;
            /*0x98*/ UnityEngine.UIElements.HierarchyEvent hierarchyChanged;
            /*0xa0*/ System.Action<UnityEngine.UIElements.IPanel> beforeUpdate;

            /*0x17b1e90*/ BaseVisualElementPanel();
            UnityEngine.EventInterests get_IMGUIEventInterests();
            void set_IMGUIEventInterests(UnityEngine.EventInterests value);
            /*0x1803b0*/ UnityEngine.ScriptableObject get_ownerObject();
            /*0x17aec0*/ void set_ownerObject(UnityEngine.ScriptableObject value);
            /*0x1803b0*/ UnityEngine.UIElements.SavePersistentViewData get_saveViewData();
            /*0x1803b0*/ UnityEngine.UIElements.GetViewDataDictionary get_getViewDataDictionary();
            /*0x180980*/ int get_IMGUIContainersCount();
            /*0x17aa40*/ void set_IMGUIContainersCount(int value);
            /*0x1803b0*/ UnityEngine.UIElements.FocusController get_focusController();
            /*0x17aec0*/ void set_focusController(UnityEngine.UIElements.FocusController value);
            /*0x1803b0*/ UnityEngine.UIElements.IMGUIContainer get_rootIMGUIContainer();
            /*0x17b2150*/ void add_panelDisposed(System.Action<UnityEngine.UIElements.BaseVisualElementPanel> value);
            /*0x17b2560*/ void remove_panelDisposed(System.Action<UnityEngine.UIElements.BaseVisualElementPanel> value);
            /*0x17b2390*/ UnityEngine.UIElements.UIElementsBridge get_uiElementsBridge();
            /*0x17b16c0*/ void Dispose();
            /*0x17b1730*/ void Dispose(bool disposing);
            /*0x17aec0*/ void Repaint(UnityEngine.Event e);
            /*0x180fc0*/ void ValidateFocus();
            /*0x180fc0*/ void ValidateLayout();
            /*0x180fc0*/ void UpdateAnimations();
            /*0x180fc0*/ void UpdateBindings();
            /*0x180fc0*/ void ApplyStyles();
            /*0x17b2370*/ float get_scale();
            /*0x17b2820*/ void set_scale(float value);
            /*0x17b2770*/ void set_pixelsPerPoint(float value);
            /*0x17b2380*/ float get_scaledPixelsPerPoint();
            /*0x995150*/ float get_referenceSpritePixelsPerUnit();
            /*0x995220*/ void set_referenceSpritePixelsPerUnit(float value);
            /*0x17b2350*/ UnityEngine.UIElements.PanelClearSettings get_clearSettings();
            /*0x17b2760*/ void set_clearSettings(UnityEngine.UIElements.PanelClearSettings value);
            /*0x137d5b0*/ bool get_duringLayoutPhase();
            /*0x137de80*/ void set_duringLayoutPhase(bool value);
            /*0x180980*/ uint get_version();
            /*0x180980*/ uint get_hierarchyVersion();
            /*0x182a70*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ele, UnityEngine.UIElements.VersionChangeType changeTypeFlag);
            /*0x4e40e0*/ UnityEngine.UIElements.RepaintData get_repaintData();
            /*0x4e4370*/ void set_repaintData(UnityEngine.UIElements.RepaintData value);
            /*0xb61940*/ UnityEngine.UIElements.ICursorManager get_cursorManager();
            /*0xb61a20*/ void set_cursorManager(UnityEngine.UIElements.ICursorManager value);
            /*0xe643b0*/ UnityEngine.UIElements.ContextualMenuManager get_contextualMenuManager();
            /*0xe643c0*/ void set_contextualMenuManager(UnityEngine.UIElements.ContextualMenuManager value);
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_visualTree();
            /*0x1803b0*/ UnityEngine.UIElements.EventDispatcher get_dispatcher();
            /*0x17aec0*/ void set_dispatcher(UnityEngine.UIElements.EventDispatcher value);
            /*0x17b1a50*/ void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x1803b0*/ UnityEngine.UIElements.IScheduler get_scheduler();
            /*0x1803b0*/ UnityEngine.UIElements.IStylePropertyAnimationSystem get_styleAnimationSystem();
            /*0x17aec0*/ void set_styleAnimationSystem(UnityEngine.UIElements.IStylePropertyAnimationSystem value);
            /*0x180980*/ UnityEngine.UIElements.ContextType get_contextType();
            /*0x17aa40*/ void set_contextType(UnityEngine.UIElements.ContextType value);
            UnityEngine.UIElements.VisualElement Pick(UnityEngine.Vector2 point);
            UnityEngine.UIElements.VisualElement PickAll(UnityEngine.Vector2 point, System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> picked);
            /*0xe7e580*/ bool get_disposed();
            /*0xe7e640*/ void set_disposed(bool value);
            /*0x184ab0*/ UnityEngine.UIElements.IVisualTreeUpdater GetUpdater(UnityEngine.UIElements.VisualTreeUpdatePhase phase);
            /*0x17b1870*/ UnityEngine.UIElements.VisualElement GetTopElementUnderPointer(int pointerId);
            /*0x17b1920*/ UnityEngine.UIElements.VisualElement RecomputeTopElementUnderPointer(int pointerId, UnityEngine.Vector2 pointerPos, UnityEngine.UIElements.EventBase triggerEvent);
            /*0x17b15d0*/ void ClearCachedElementUnderPointer(int pointerId, UnityEngine.UIElements.EventBase triggerEvent);
            /*0x17b1600*/ void CommitElementUnderPointers();
            /*0x1803b0*/ UnityEngine.Shader get_standardShader();
            /*0xbf9940*/ UnityEngine.Shader get_standardWorldSpaceShader();
            /*0x17b2200*/ void add_standardShaderChanged(System.Action value);
            /*0x17b2610*/ void remove_standardShaderChanged(System.Action value);
            /*0x17b22a0*/ void add_standardWorldSpaceShaderChanged(System.Action value);
            /*0x17b26b0*/ void remove_standardWorldSpaceShaderChanged(System.Action value);
            /*0x17b1ff0*/ void add_atlasChanged(System.Action value);
            /*0x17b2400*/ void remove_atlasChanged(System.Action value);
            /*0x17b1890*/ void InvokeAtlasChanged();
            /*0x1803b0*/ UnityEngine.UIElements.AtlasBase get_atlas();
            /*0x17aec0*/ void set_atlas(UnityEngine.UIElements.AtlasBase value);
            /*0x17b1900*/ void InvokeUpdateMaterial(UnityEngine.Material mat);
            /*0x17b20a0*/ void add_hierarchyChanged(UnityEngine.UIElements.HierarchyEvent value);
            /*0x17b24b0*/ void remove_hierarchyChanged(UnityEngine.UIElements.HierarchyEvent value);
            /*0x17b18d0*/ void InvokeHierarchyChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType changeType);
            /*0x17b18b0*/ void InvokeBeforeUpdate();
            /*0x17b1b10*/ void UpdateElementUnderPointers();
            /*0x32d010*/ void UnityEngine.UIElements.IGroupBox.OnOptionAdded(UnityEngine.UIElements.IGroupBoxOption option);
            /*0x32d010*/ void UnityEngine.UIElements.IGroupBox.OnOptionRemoved(UnityEngine.UIElements.IGroupBoxOption option);
            /*0x17b1670*/ UnityEngine.UIElements.IGenericMenu CreateMenu();
            /*0x17b1dd0*/ void Update();
        }

        class LoadResourceFunction : System.MulticastDelegate
        {
            /*0x17bc1b0*/ LoadResourceFunction(object object, nint method);
            /*0x9e1820*/ UnityEngine.Object Invoke(string pathName, System.Type type, float dpiScaling);
        }

        class TimeMsFunction : System.MulticastDelegate
        {
            /*0x9dc1a0*/ TimeMsFunction(object object, nint method);
            /*0x9dbe20*/ long Invoke();
        }

        class GetViewDataDictionary : System.MulticastDelegate
        {
            /*0x9dc1a0*/ GetViewDataDictionary(object object, nint method);
            /*0x9dbe20*/ UnityEngine.UIElements.ISerializableJsonDictionary Invoke();
        }

        class SavePersistentViewData : System.MulticastDelegate
        {
            /*0xe25c50*/ SavePersistentViewData(object object, nint method);
            /*0x9dbe20*/ void Invoke();
        }

        class Panel : UnityEngine.UIElements.BaseVisualElementPanel
        {
            static /*0x0*/ Unity.Profiling.ProfilerMarker s_MarkerPickAll;
            static /*0x8*/ UnityEngine.UIElements.LoadResourceFunction <loadResourceFunc>k__BackingField;
            static /*0x10*/ UnityEngine.UIElements.TimeMsFunction <TimeSinceStartup>k__BackingField;
            static /*0x18*/ System.Action<UnityEngine.UIElements.Panel> beforeAnyRepaint;
            /*0xa8*/ UnityEngine.UIElements.VisualElement m_RootContainer;
            /*0xb0*/ UnityEngine.UIElements.VisualTreeUpdater m_VisualTreeUpdater;
            /*0xb8*/ UnityEngine.UIElements.IStylePropertyAnimationSystem m_StylePropertyAnimationSystem;
            /*0xc0*/ string m_PanelName;
            /*0xc8*/ uint m_Version;
            /*0xcc*/ uint m_RepaintVersion;
            /*0xd0*/ uint m_HierarchyVersion;
            /*0xd8*/ Unity.Profiling.ProfilerMarker m_MarkerBeforeUpdate;
            /*0xe0*/ Unity.Profiling.ProfilerMarker m_MarkerUpdate;
            /*0xe8*/ Unity.Profiling.ProfilerMarker m_MarkerLayout;
            /*0xf0*/ Unity.Profiling.ProfilerMarker m_MarkerBindings;
            /*0xf8*/ Unity.Profiling.ProfilerMarker m_MarkerAnimations;
            /*0x100*/ UnityEngine.UIElements.EventDispatcher <dispatcher>k__BackingField;
            /*0x108*/ UnityEngine.UIElements.TimerEventScheduler m_Scheduler;
            /*0x110*/ UnityEngine.ScriptableObject <ownerObject>k__BackingField;
            /*0x118*/ UnityEngine.UIElements.ContextType <contextType>k__BackingField;
            /*0x120*/ UnityEngine.UIElements.SavePersistentViewData <saveViewData>k__BackingField;
            /*0x128*/ UnityEngine.UIElements.GetViewDataDictionary <getViewDataDictionary>k__BackingField;
            /*0x130*/ UnityEngine.UIElements.FocusController <focusController>k__BackingField;
            /*0x138*/ UnityEngine.EventInterests <IMGUIEventInterests>k__BackingField;
            /*0x13b*/ bool m_JustReceivedFocus;
            /*0x13c*/ int <IMGUIContainersCount>k__BackingField;
            /*0x140*/ UnityEngine.UIElements.IMGUIContainer <rootIMGUIContainer>k__BackingField;
            /*0x148*/ UnityEngine.Shader m_StandardShader;
            /*0x150*/ UnityEngine.UIElements.AtlasBase m_Atlas;
            /*0x158*/ bool m_ValidatingLayout;

            static /*0x17c2180*/ Panel();
            static /*0x17c27e0*/ UnityEngine.UIElements.LoadResourceFunction get_loadResourceFunc();
            static /*0x17c13a0*/ UnityEngine.Object LoadResource(string pathName, System.Type type, float dpiScaling);
            static /*0x17c2770*/ UnityEngine.UIElements.TimeMsFunction get_TimeSinceStartup();
            static /*0x17c1e80*/ long TimeSinceStartupMs();
            static /*0x17c11c0*/ long DefaultTimeSinceStartupMs();
            static /*0x17c18c0*/ UnityEngine.UIElements.VisualElement PickAll(UnityEngine.UIElements.VisualElement root, UnityEngine.Vector2 point, System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> picked, bool includeIgnoredElement);
            static /*0x17c1530*/ UnityEngine.UIElements.VisualElement PerformPick(UnityEngine.UIElements.VisualElement root, UnityEngine.Vector2 point, System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> picked, bool includeIgnoredElement);
            static /*0x15ed8f0*/ UnityEngine.Vector2Int <Pick>g__PixelOf|101_0(UnityEngine.Vector2 p);
            /*0x17c21e0*/ Panel(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.ContextType contextType, UnityEngine.UIElements.EventDispatcher dispatcher);
            /*0x1634580*/ UnityEngine.UIElements.VisualElement get_visualTree();
            /*0x136fc90*/ UnityEngine.UIElements.EventDispatcher get_dispatcher();
            /*0x136fd50*/ void set_dispatcher(UnityEngine.UIElements.EventDispatcher value);
            /*0x17c2830*/ UnityEngine.UIElements.TimerEventScheduler get_timerEventScheduler();
            /*0x17c2830*/ UnityEngine.UIElements.IScheduler get_scheduler();
            /*0xb69980*/ UnityEngine.UIElements.IStylePropertyAnimationSystem get_styleAnimationSystem();
            /*0x17c29b0*/ void set_styleAnimationSystem(UnityEngine.UIElements.IStylePropertyAnimationSystem value);
            /*0x1355380*/ UnityEngine.ScriptableObject get_ownerObject();
            /*0x1354790*/ void set_ownerObject(UnityEngine.ScriptableObject value);
            /*0x173c9e0*/ UnityEngine.UIElements.ContextType get_contextType();
            /*0x173ca10*/ void set_contextType(UnityEngine.UIElements.ContextType value);
            /*0x10f4ac0*/ UnityEngine.UIElements.SavePersistentViewData get_saveViewData();
            /*0x10d2010*/ UnityEngine.UIElements.GetViewDataDictionary get_getViewDataDictionary();
            /*0x1369460*/ UnityEngine.UIElements.FocusController get_focusController();
            /*0x1716410*/ void set_focusController(UnityEngine.UIElements.FocusController value);
            /*0x17c2750*/ UnityEngine.EventInterests get_IMGUIEventInterests();
            /*0x17c28d0*/ void set_IMGUIEventInterests(UnityEngine.EventInterests value);
            /*0x17c1360*/ void Focus();
            /*0x17c0e40*/ void Blur();
            /*0x17c2030*/ void ValidateFocus();
            /*0x1634650*/ string get_name();
            /*0x17c2980*/ void set_name(string value);
            /*0x17c0f60*/ void CreateMarkers();
            /*0x17c2740*/ int get_IMGUIContainersCount();
            /*0x17c28c0*/ void set_IMGUIContainersCount(int value);
            /*0x1369470*/ UnityEngine.UIElements.IMGUIContainer get_rootIMGUIContainer();
            /*0xeeac80*/ uint get_version();
            /*0x17c27d0*/ uint get_hierarchyVersion();
            /*0x17c28b0*/ UnityEngine.Shader get_standardShader();
            /*0x17c27c0*/ UnityEngine.UIElements.AtlasBase get_atlas();
            /*0x17c28f0*/ void set_atlas(UnityEngine.UIElements.AtlasBase value);
            /*0x17c11e0*/ void Dispose(bool disposing);
            /*0x17c17e0*/ UnityEngine.UIElements.VisualElement PickAll(UnityEngine.Vector2 point, System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> picked);
            /*0x17c1950*/ UnityEngine.UIElements.VisualElement Pick(UnityEngine.Vector2 point);
            /*0x17c2100*/ void ValidateLayout();
            /*0x17c1f40*/ void UpdateAnimations();
            /*0x17c1f70*/ void UpdateBindings();
            /*0x17c0e10*/ void ApplyStyles();
            /*0x17c1fa0*/ void UpdateForRepaint();
            /*0x17c1ad0*/ void Repaint(UnityEngine.Event e);
            /*0x17c14e0*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x17c1370*/ UnityEngine.UIElements.IVisualTreeUpdater GetUpdater(UnityEngine.UIElements.VisualTreeUpdatePhase phase);
        }

        class BaseRuntimePanel : UnityEngine.UIElements.Panel
        {
            static /*0x0*/ int s_CurrentRuntimePanelCounter;
            static /*0x8*/ System.Func<UnityEngine.Vector2, UnityEngine.Vector2> DefaultScreenToPanelSpace;
            /*0x160*/ UnityEngine.GameObject m_SelectableGameObject;
            /*0x168*/ int m_RuntimePanelCreationIndex;
            /*0x16c*/ float m_SortingPriority;
            /*0x170*/ int resolvedSortingIndex;
            /*0x178*/ System.Action destroyed;
            /*0x180*/ UnityEngine.Shader m_StandardWorldSpaceShader;
            /*0x188*/ bool m_DrawToCameras;
            /*0x190*/ UnityEngine.RenderTexture targetTexture;
            /*0x198*/ UnityEngine.Matrix4x4 panelToWorld;
            /*0x1d8*/ int <targetDisplay>k__BackingField;
            /*0x1e0*/ System.Func<UnityEngine.Vector2, UnityEngine.Vector2> m_ScreenToPanelSpace;

            static /*0x17e5c50*/ BaseRuntimePanel();
            static /*0x17e5f50*/ int getScreenRenderingHeight(int display);
            static /*0x17e6010*/ int getScreenRenderingWidth(int display);
            /*0x17e5d40*/ BaseRuntimePanel(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.EventDispatcher dispatcher);
            /*0x136fc40*/ UnityEngine.GameObject get_selectableGameObject();
            /*0x17e64a0*/ void set_selectableGameObject(UnityEngine.GameObject value);
            /*0x12e8030*/ float get_sortingPriority();
            /*0x17e6540*/ void set_sortingPriority(float value);
            /*0x17e5ea0*/ void add_destroyed(System.Action value);
            /*0x17e62c0*/ void remove_destroyed(System.Action value);
            /*0x17e53b0*/ void Dispose(bool disposing);
            /*0x1666cc0*/ UnityEngine.Shader get_standardWorldSpaceShader();
            /*0x17e60d0*/ bool get_drawToCameras();
            /*0x17e6370*/ void set_drawToCameras(bool value);
            /*0x10e8bf0*/ int get_targetDisplay();
            /*0x17e65d0*/ void set_targetDisplay(int value);
            /*0x17e61d0*/ int get_screenRenderingWidth();
            /*0x17e60e0*/ int get_screenRenderingHeight();
            /*0x17e5550*/ void Repaint(UnityEngine.Event e);
            /*0x1474d70*/ System.Func<UnityEngine.Vector2, UnityEngine.Vector2> get_screenToPanelSpace();
            /*0x17e6410*/ void set_screenToPanelSpace(System.Func<UnityEngine.Vector2, UnityEngine.Vector2> value);
            /*0x17e5930*/ UnityEngine.Vector2 ScreenToPanel(UnityEngine.Vector2 screen);
            /*0x17e5990*/ bool ScreenToPanel(UnityEngine.Vector2 screenPosition, UnityEngine.Vector2 screenDelta, ref UnityEngine.Vector2 panelPosition, ref UnityEngine.Vector2 panelDelta, bool allowOutside);
            /*0x17e50d0*/ void AssignPanelToComponents(UnityEngine.UIElements.BaseRuntimePanel panel);
            /*0x17e54a0*/ void PointerLeavesPanel(int pointerId, UnityEngine.Vector2 position);
            /*0x17e5400*/ void PointerEntersPanel(int pointerId, UnityEngine.Vector2 position);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.BaseRuntimePanel.<> <>9;

                static /*0x17f58e0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x718e40*/ UnityEngine.Vector2 <.cctor>b__47_0(UnityEngine.Vector2 p);
            }
        }

        interface IRuntimePanelComponent
        {
            /*0x17aec0*/ void set_panel(UnityEngine.UIElements.IPanel value);
        }

        class PointerCaptureHelper
        {
            static /*0x17efb30*/ UnityEngine.UIElements.PointerDispatchState GetStateFor(UnityEngine.UIElements.IEventHandler handler);
            static /*0x17efbd0*/ bool HasPointerCapture(UnityEngine.UIElements.IEventHandler handler, int pointerId);
            static /*0x17ef8d0*/ void CapturePointer(UnityEngine.UIElements.IEventHandler handler, int pointerId);
            static /*0x17efda0*/ void ReleasePointer(UnityEngine.UIElements.IEventHandler handler, int pointerId);
            static /*0x17efaa0*/ UnityEngine.UIElements.IEventHandler GetCapturingElement(UnityEngine.UIElements.IPanel panel, int pointerId);
            static /*0x17efe90*/ void ReleasePointer(UnityEngine.UIElements.IPanel panel, int pointerId);
            static /*0x17ef850*/ void ActivateCompatibilityMouseEvents(UnityEngine.UIElements.IPanel panel, int pointerId);
            static /*0x17efcb0*/ void PreventCompatibilityMouseEvents(UnityEngine.UIElements.IPanel panel, int pointerId);
            static /*0x17eff20*/ bool ShouldSendCompatibilityMouseEvents(UnityEngine.UIElements.IPanel panel, UnityEngine.UIElements.IPointerEvent evt);
            static /*0x17efd30*/ void ProcessPointerCapture(UnityEngine.UIElements.IPanel panel, int pointerId);
        }

        class PointerDispatchState
        {
            /*0x10*/ UnityEngine.UIElements.IEventHandler[] m_PendingPointerCapture;
            /*0x18*/ UnityEngine.UIElements.IEventHandler[] m_PointerCapture;
            /*0x20*/ bool[] m_ShouldSendCompatibilityMouseEvents;

            /*0x17f0ac0*/ PointerDispatchState();
            /*0x17f08d0*/ void Reset();
            /*0x171de40*/ UnityEngine.UIElements.IEventHandler GetCapturingElement(int pointerId);
            /*0x17f0210*/ bool HasPointerCapture(UnityEngine.UIElements.IEventHandler handler, int pointerId);
            /*0x17f00e0*/ void CapturePointer(UnityEngine.UIElements.IEventHandler handler, int pointerId);
            /*0x17f0830*/ void ReleasePointer(int pointerId);
            /*0x17f0880*/ void ReleasePointer(UnityEngine.UIElements.IEventHandler handler, int pointerId);
            /*0x17f0270*/ void ProcessPointerCapture(int pointerId);
            /*0x4a87d0*/ void ActivateCompatibilityMouseEvents(int pointerId);
            /*0x17f0240*/ void PreventCompatibilityMouseEvents(int pointerId);
            /*0x17f09c0*/ bool ShouldSendCompatibilityMouseEvents(UnityEngine.UIElements.IPointerEvent evt);
        }

        class PointerManipulator : UnityEngine.UIElements.MouseManipulator
        {
            /*0x30*/ int m_CurrentPointerId;

            /*0x17f0e60*/ PointerManipulator();
            /*0x17f0c80*/ bool CanStartManipulation(UnityEngine.UIElements.IPointerEvent e);
            /*0x17f0e00*/ bool CanStopManipulation(UnityEngine.UIElements.IPointerEvent e);
        }

        class ProjectionUtils
        {
            static /*0x17f0e70*/ UnityEngine.Matrix4x4 Ortho(float left, float right, float bottom, float top, float near, float far);
        }

        struct SafeHandleAccess
        {
            /*0x10*/ nint m_Handle;

            static /*0x17f3360*/ nint op_Implicit(UnityEngine.UIElements.SafeHandleAccess a);
            /*0x9e29e0*/ SafeHandleAccess(nint ptr);
            /*0x17f3350*/ bool IsNull();
        }

        class UIRAtlasAllocator : System.IDisposable
        {
            static /*0x0*/ Unity.Profiling.ProfilerMarker s_MarkerTryAllocate;
            /*0x10*/ int <maxAtlasSize>k__BackingField;
            /*0x14*/ int <maxImageWidth>k__BackingField;
            /*0x18*/ int <maxImageHeight>k__BackingField;
            /*0x1c*/ int <virtualWidth>k__BackingField;
            /*0x20*/ int <virtualHeight>k__BackingField;
            /*0x24*/ int <physicalWidth>k__BackingField;
            /*0x28*/ int <physicalHeight>k__BackingField;
            /*0x30*/ UnityEngine.UIElements.UIRAtlasAllocator.AreaNode m_FirstUnpartitionedArea;
            /*0x38*/ UnityEngine.UIElements.UIRAtlasAllocator.Row[] m_OpenRows;
            /*0x40*/ int m_1SidePadding;
            /*0x44*/ int m_2SidePadding;
            /*0x48*/ bool <disposed>k__BackingField;

            static /*0x17f6280*/ UIRAtlasAllocator();
            static /*0x17f5bf0*/ int GetLog2OfNextPower(int n);
            /*0x17f62e0*/ UIRAtlasAllocator(int initialAtlasSize, int maxAtlasSize, int sidePadding);
            /*0x417e30*/ int get_maxAtlasSize();
            /*0x70a440*/ int get_maxImageWidth();
            /*0x8a5c20*/ int get_maxImageHeight();
            /*0xc70b00*/ int get_virtualWidth();
            /*0xc70b50*/ void set_virtualWidth(int value);
            /*0x3e3af0*/ int get_virtualHeight();
            /*0x11172b0*/ void set_virtualHeight(int value);
            /*0x3e3ad0*/ int get_physicalWidth();
            /*0xc70b30*/ void set_physicalWidth(int value);
            /*0x3e3ae0*/ int get_physicalHeight();
            /*0xc6dab0*/ void set_physicalHeight(int value);
            /*0xe85db0*/ bool get_disposed();
            /*0x10d9810*/ void set_disposed(bool value);
            /*0x17f5b80*/ void Dispose();
            /*0x17f5a30*/ void Dispose(bool disposing);
            /*0x17f5c60*/ bool TryAllocate(int width, int height, ref UnityEngine.RectInt location);
            /*0x17f6010*/ bool TryPartitionArea(UnityEngine.UIElements.UIRAtlasAllocator.AreaNode areaNode, int rowIndex, int rowHeight, int minWidth);
            /*0x17f5950*/ void BuildAreas();

            class Row
            {
                static /*0x0*/ UnityEngine.UIElements.ObjectPool<UnityEngine.UIElements.UIRAtlasAllocator.Row> s_Pool;
                /*0x10*/ int <offsetX>k__BackingField;
                /*0x14*/ int <offsetY>k__BackingField;
                /*0x18*/ int <width>k__BackingField;
                /*0x1c*/ int <height>k__BackingField;
                /*0x20*/ int Cursor;

                static /*0x17f3240*/ Row();
                static /*0x17f30e0*/ UnityEngine.UIElements.UIRAtlasAllocator.Row Acquire(int offsetX, int offsetY, int width, int height);
                /*0x32f970*/ Row();
                /*0x417e30*/ int get_offsetX();
                /*0xdcd9c0*/ void set_offsetX(int value);
                /*0x70a440*/ int get_offsetY();
                /*0xc70b20*/ void set_offsetY(int value);
                /*0x8a5c20*/ int get_width();
                /*0x8a5c50*/ void set_width(int value);
                /*0xc70b50*/ void set_height(int value);
                /*0x17f31a0*/ void Release();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIRAtlasAllocator.Row.<> <>9;

                    static /*0x17f5790*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x17f5680*/ UnityEngine.UIElements.UIRAtlasAllocator.Row <.cctor>b__21_0();
                }
            }

            class AreaNode
            {
                static /*0x0*/ UnityEngine.UIElements.ObjectPool<UnityEngine.UIElements.UIRAtlasAllocator.AreaNode> s_Pool;
                /*0x10*/ UnityEngine.RectInt rect;
                /*0x20*/ UnityEngine.UIElements.UIRAtlasAllocator.AreaNode previous;
                /*0x28*/ UnityEngine.UIElements.UIRAtlasAllocator.AreaNode next;

                static /*0x17e3ec0*/ AreaNode();
                static /*0x17e3c30*/ UnityEngine.UIElements.UIRAtlasAllocator.AreaNode Acquire(UnityEngine.RectInt rect);
                /*0x32f970*/ AreaNode();
                /*0x17e3dd0*/ void Release();
                /*0x17e3e50*/ void RemoveFromChain();
                /*0x17e3cf0*/ void AddAfter(UnityEngine.UIElements.UIRAtlasAllocator.AreaNode previous);

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIRAtlasAllocator.AreaNode.<> <>9;

                    static /*0x17f5720*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x17f56d0*/ UnityEngine.UIElements.UIRAtlasAllocator.AreaNode <.cctor>b__9_0();
                }
            }
        }

        class DynamicAtlasPage : System.IDisposable
        {
            static /*0x0*/ int s_TextureCounter;
            /*0x10*/ UnityEngine.UIElements.TextureId <textureId>k__BackingField;
            /*0x18*/ UnityEngine.RenderTexture <atlas>k__BackingField;
            /*0x20*/ UnityEngine.RenderTextureFormat <format>k__BackingField;
            /*0x24*/ UnityEngine.FilterMode <filterMode>k__BackingField;
            /*0x28*/ UnityEngine.Vector2Int <minSize>k__BackingField;
            /*0x30*/ UnityEngine.Vector2Int <maxSize>k__BackingField;
            /*0x38*/ int m_1Padding;
            /*0x3c*/ int m_2Padding;
            /*0x40*/ UnityEngine.UIElements.UIR.Allocator2D m_Allocator;
            /*0x48*/ UnityEngine.UIElements.UIR.TextureBlitter m_Blitter;
            /*0x50*/ UnityEngine.Vector2Int m_CurrentSize;
            /*0x58*/ bool <disposed>k__BackingField;

            /*0x17e9920*/ DynamicAtlasPage(UnityEngine.RenderTextureFormat format, UnityEngine.FilterMode filterMode, UnityEngine.Vector2Int minSize, UnityEngine.Vector2Int maxSize);
            /*0x417e30*/ UnityEngine.UIElements.TextureId get_textureId();
            /*0xdcd9c0*/ void set_textureId(UnityEngine.UIElements.TextureId value);
            /*0x32f410*/ UnityEngine.RenderTexture get_atlas();
            /*0x7963c0*/ void set_atlas(UnityEngine.RenderTexture value);
            /*0x3e3af0*/ UnityEngine.RenderTextureFormat get_format();
            /*0x3e3ad0*/ UnityEngine.FilterMode get_filterMode();
            /*0xe9dc40*/ bool get_disposed();
            /*0x13db610*/ void set_disposed(bool value);
            /*0x17e8e30*/ void Dispose();
            /*0x17e8c60*/ void Dispose(bool disposing);
            /*0x17e8f60*/ bool TryAdd(UnityEngine.Texture2D image, ref UnityEngine.UIElements.UIR.Allocator2D.Alloc2D alloc, ref UnityEngine.RectInt rect);
            /*0x17e9790*/ void Update(UnityEngine.Texture2D image, UnityEngine.RectInt rect);
            /*0x17e8ea0*/ void Remove(UnityEngine.UIElements.UIR.Allocator2D.Alloc2D alloc);
            /*0x17e8ae0*/ void Commit();
            /*0x17e9310*/ void UpdateAtlasTexture();
            /*0x17e8b20*/ UnityEngine.RenderTexture CreateAtlasTexture();
        }

        class UIRLayoutUpdater : UnityEngine.UIElements.BaseVisualTreeUpdater
        {
            static /*0x0*/ string s_Description;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_ProfilerMarker;
            /*0x20*/ System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<UnityEngine.Rect, UnityEngine.UIElements.VisualElement>> changeEventsList;

            static /*0x17f72d0*/ UIRLayoutUpdater();
            /*0x17f7370*/ UIRLayoutUpdater();
            /*0x17f73f0*/ Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x17f6850*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x17f7080*/ void Update();
            /*0x17f68b0*/ void UpdateSubTree(UnityEngine.UIElements.VisualElement ve, bool isDisplayed, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<UnityEngine.Rect, UnityEngine.UIElements.VisualElement>> changeEvents);
            /*0x17f65a0*/ void DispatchChangeEvents(System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<UnityEngine.Rect, UnityEngine.UIElements.VisualElement>> changeEvents, int currentLayoutPass);
        }

        struct Vertex
        {
            static /*0x0*/ float nearZ;
            /*0x10*/ UnityEngine.Vector3 position;
            /*0x1c*/ UnityEngine.Color32 tint;
            /*0x20*/ UnityEngine.Vector2 uv;
            /*0x28*/ UnityEngine.Color32 xformClipPages;
            /*0x2c*/ UnityEngine.Color32 ids;
            /*0x30*/ UnityEngine.Color32 flags;
            /*0x34*/ UnityEngine.Color32 opacityColorPages;
            /*0x38*/ UnityEngine.Color32 settingIndex;
            /*0x3c*/ UnityEngine.Vector4 circle;
            /*0x4c*/ float textureId;
        }

        class MeshWriteData
        {
            /*0x10*/ Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> m_Vertices;
            /*0x20*/ Unity.Collections.NativeSlice<ushort> m_Indices;
            /*0x30*/ UnityEngine.Rect m_UVRegion;
            /*0x40*/ int currentIndex;
            /*0x44*/ int currentVertex;

            /*0x32f970*/ MeshWriteData();
            /*0x17ef3c0*/ int get_vertexCount();
            /*0x17ef370*/ int get_indexCount();
            /*0x17ef3b0*/ UnityEngine.Rect get_uvRegion();
            /*0x17ef2f0*/ void SetNextVertex(UnityEngine.UIElements.Vertex vertex);
            /*0x17ef290*/ void SetNextIndex(ushort index);
            /*0x17ef1d0*/ void SetAllVertices(UnityEngine.UIElements.Vertex[] vertices);
            /*0x17ef110*/ void SetAllIndices(ushort[] indices);
            /*0x17ef0c0*/ void Reset(Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertices, Unity.Collections.NativeSlice<ushort> indices);
            /*0x17ef0f0*/ void Reset(Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertices, Unity.Collections.NativeSlice<ushort> indices, UnityEngine.Rect uvRegion);
        }

        struct ColorPage
        {
            /*0x10*/ bool isValid;
            /*0x14*/ UnityEngine.Color32 pageAndID;

            static /*0x17e6760*/ UnityEngine.UIElements.ColorPage Init(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.BMPAlloc alloc);
            /*0x17e6820*/ UnityEngine.UIElements.MeshBuilderNative.NativeColorPage ToNativeColorPage();
        }

        class MeshGenerationContextUtils
        {
            static /*0x17eecf0*/ void Rectangle(UnityEngine.UIElements.MeshGenerationContext mgc, UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams);
            static /*0x17eee60*/ void Text(UnityEngine.UIElements.MeshGenerationContext mgc, UnityEngine.UIElements.TextElement te);
            static /*0x17ee9f0*/ UnityEngine.Vector2 ConvertBorderRadiusPercentToPoints(UnityEngine.Vector2 borderRectSize, UnityEngine.UIElements.Length length);
            static /*0x17eea50*/ void GetVisualElementRadii(UnityEngine.UIElements.VisualElement ve, ref UnityEngine.Vector2 topLeft, ref UnityEngine.Vector2 bottomLeft, ref UnityEngine.Vector2 topRight, ref UnityEngine.Vector2 bottomRight);
            static /*0x17ee620*/ void AdjustBackgroundSizeForBorders(UnityEngine.UIElements.VisualElement visualElement, ref UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams);

            struct BorderParams
            {
                /*0x10*/ UnityEngine.Rect rect;
                /*0x20*/ UnityEngine.Color playmodeTintColor;
                /*0x30*/ UnityEngine.Color leftColor;
                /*0x40*/ UnityEngine.Color topColor;
                /*0x50*/ UnityEngine.Color rightColor;
                /*0x60*/ UnityEngine.Color bottomColor;
                /*0x70*/ float leftWidth;
                /*0x74*/ float topWidth;
                /*0x78*/ float rightWidth;
                /*0x7c*/ float bottomWidth;
                /*0x80*/ UnityEngine.Vector2 topLeftRadius;
                /*0x88*/ UnityEngine.Vector2 topRightRadius;
                /*0x90*/ UnityEngine.Vector2 bottomRightRadius;
                /*0x98*/ UnityEngine.Vector2 bottomLeftRadius;
                /*0xa0*/ UnityEngine.Material material;
                /*0xa8*/ UnityEngine.UIElements.ColorPage leftColorPage;
                /*0xb0*/ UnityEngine.UIElements.ColorPage topColorPage;
                /*0xb8*/ UnityEngine.UIElements.ColorPage rightColorPage;
                /*0xc0*/ UnityEngine.UIElements.ColorPage bottomColorPage;

                /*0x17e65e0*/ UnityEngine.UIElements.MeshBuilderNative.NativeBorderParams ToNativeParams();
            }

            struct RectangleParams
            {
                /*0x10*/ UnityEngine.Rect rect;
                /*0x20*/ UnityEngine.Rect uv;
                /*0x30*/ UnityEngine.Color color;
                /*0x40*/ UnityEngine.Rect subRect;
                /*0x50*/ UnityEngine.Rect backgroundRepeatRect;
                /*0x60*/ UnityEngine.UIElements.BackgroundPosition backgroundPositionX;
                /*0x6c*/ UnityEngine.UIElements.BackgroundPosition backgroundPositionY;
                /*0x78*/ UnityEngine.UIElements.BackgroundRepeat backgroundRepeat;
                /*0x80*/ UnityEngine.UIElements.BackgroundSize backgroundSize;
                /*0x98*/ UnityEngine.Texture texture;
                /*0xa0*/ UnityEngine.Sprite sprite;
                /*0xa8*/ UnityEngine.UIElements.VectorImage vectorImage;
                /*0xb0*/ UnityEngine.Material material;
                /*0xb8*/ UnityEngine.ScaleMode scaleMode;
                /*0xbc*/ UnityEngine.Color playmodeTintColor;
                /*0xcc*/ UnityEngine.Vector2 topLeftRadius;
                /*0xd4*/ UnityEngine.Vector2 topRightRadius;
                /*0xdc*/ UnityEngine.Vector2 bottomRightRadius;
                /*0xe4*/ UnityEngine.Vector2 bottomLeftRadius;
                /*0xec*/ UnityEngine.Vector2 contentSize;
                /*0xf4*/ UnityEngine.Vector2 textureSize;
                /*0xfc*/ int leftSlice;
                /*0x100*/ int topSlice;
                /*0x104*/ int rightSlice;
                /*0x108*/ int bottomSlice;
                /*0x10c*/ float sliceScale;
                /*0x110*/ UnityEngine.Rect spriteGeomRect;
                /*0x120*/ UnityEngine.Vector4 rectInset;
                /*0x130*/ UnityEngine.UIElements.ColorPage colorPage;
                /*0x138*/ UnityEngine.UIElements.MeshGenerationContext.MeshFlags meshFlags;

                static /*0x17f14b0*/ void AdjustUVsForScaleMode(UnityEngine.Rect rect, UnityEngine.Rect uv, UnityEngine.Texture texture, UnityEngine.ScaleMode scaleMode, ref UnityEngine.Rect rectOut, ref UnityEngine.Rect uvOut);
                static /*0x17f0fd0*/ void AdjustSpriteUVsForScaleMode(UnityEngine.Rect containerRect, UnityEngine.Rect srcRect, UnityEngine.Rect spriteGeomRect, UnityEngine.Sprite sprite, UnityEngine.ScaleMode scaleMode, ref UnityEngine.Rect rectOut, ref UnityEngine.Rect uvOut);
                static /*0x17f2e40*/ UnityEngine.Rect RectIntersection(UnityEngine.Rect a, UnityEngine.Rect b);
                static /*0x17f1780*/ UnityEngine.Rect ComputeGeomRect(UnityEngine.Sprite sprite);
                static /*0x17f1890*/ UnityEngine.Rect ComputeUVRect(UnityEngine.Sprite sprite);
                static /*0x17f16c0*/ UnityEngine.Rect ApplyPackingRotation(UnityEngine.Rect uv, UnityEngine.SpritePackingRotation rotation);
                static /*0x17f2950*/ UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams MakeTextured(UnityEngine.Rect rect, UnityEngine.Rect uv, UnityEngine.Texture texture, UnityEngine.ScaleMode scaleMode, UnityEngine.UIElements.ContextType panelContext);
                static /*0x17f1a70*/ UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams MakeSprite(UnityEngine.Rect containerRect, UnityEngine.Rect subRect, UnityEngine.Sprite sprite, UnityEngine.ScaleMode scaleMode, UnityEngine.UIElements.ContextType panelContext, bool hasRadius, ref UnityEngine.Vector4 slices, bool useForRepeat);
                static /*0x17f2c10*/ UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams MakeVectorTextured(UnityEngine.Rect rect, UnityEngine.Rect uv, UnityEngine.UIElements.VectorImage vectorImage, UnityEngine.ScaleMode scaleMode, UnityEngine.UIElements.ContextType panelContext);
                /*0x17f19a0*/ bool HasRadius(float epsilon);
                /*0x17f1a20*/ bool HasSlices(float epsilon);
                /*0x17f2f40*/ UnityEngine.UIElements.MeshBuilderNative.NativeRectParams ToNativeParams(UnityEngine.Rect uvRegion);
            }
        }

        class MeshGenerationContext
        {
            static /*0x0*/ Unity.Profiling.ProfilerMarker s_AllocateMarker;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_DrawVectorImageMarker;
            /*0x10*/ UnityEngine.UIElements.Painter2D m_Painter2D;
            /*0x18*/ UnityEngine.UIElements.IStylePainter painter;

            static /*0x17eef30*/ MeshGenerationContext();
            /*0xe78ae0*/ MeshGenerationContext(UnityEngine.UIElements.IStylePainter painter);
            /*0x17eefd0*/ UnityEngine.UIElements.Painter2D get_painter2D();
            /*0xe52980*/ bool get_hasPainter2D();

            enum MeshFlags
            {
                None = 0,
                UVisDisplacement = 1,
                SkipDynamicAtlas = 2,
            }
        }

        class Painter2D : System.IDisposable
        {
            static /*0x0*/ bool <isPainterActive>k__BackingField;
            static /*0x4*/ float s_MaxArcRadius;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_StrokeMarker;
            static /*0x10*/ Unity.Profiling.ProfilerMarker s_FillMarker;
            /*0x10*/ UnityEngine.UIElements.MeshGenerationContext m_Ctx;
            /*0x18*/ UnityEngine.UIElements.UIR.DetachedAllocator m_DetachedAllocator;
            /*0x20*/ UnityEngine.UIElements.SafeHandleAccess m_Handle;
            /*0x28*/ bool m_Disposed;

            static /*0x17ef570*/ Painter2D();
            static /*0x17ef7f0*/ void set_isPainterActive(bool value);
            /*0x17ef620*/ Painter2D(UnityEngine.UIElements.MeshGenerationContext ctx);
            /*0x17ef6c0*/ Painter2D();
            /*0x17ef500*/ void Reset();
            /*0x17ef460*/ void Dispose();
            /*0x17ef400*/ void Dispose(bool disposing);
        }

        class UIRRepaintUpdater : UnityEngine.UIElements.BaseVisualTreeUpdater
        {
            static /*0x0*/ string s_Description;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_ProfilerMarker;
            /*0x20*/ UnityEngine.UIElements.BaseVisualElementPanel attachedPanel;
            /*0x28*/ UnityEngine.UIElements.UIR.RenderChain renderChain;
            /*0x30*/ bool <drawStats>k__BackingField;
            /*0x31*/ bool <breakBatches>k__BackingField;
            /*0x32*/ bool <disposed>k__BackingField;

            static /*0x17f8580*/ UIRRepaintUpdater();
            static /*0x17f7c80*/ void OnGraphicsResourcesRecreate(bool recreate);
            /*0x17f8690*/ UIRRepaintUpdater();
            /*0x17f8710*/ Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x995050*/ bool get_drawStats();
            /*0x14f46c0*/ bool get_breakBatches();
            /*0x17f8220*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x17f8430*/ void Update();
            /*0x17f7620*/ UnityEngine.UIElements.UIR.RenderChain CreateRenderChain();
            /*0x17f7e70*/ void OnPanelChanged(UnityEngine.UIElements.BaseVisualElementPanel obj);
            /*0x17f7440*/ void AttachToPanel();
            /*0x17f7700*/ void DetachFromPanel();
            /*0x17f78d0*/ void InitRenderChain();
            /*0x17f7690*/ void DestroyRenderChain();
            /*0x17f7690*/ void OnPanelAtlasChanged();
            /*0x17f7e90*/ void OnPanelHierarchyChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType changeType);
            /*0x17f7f00*/ void OnPanelStandardShaderChanged();
            /*0x17f8090*/ void OnPanelStandardWorldSpaceShaderChanged();
            /*0x17f8380*/ void ResetAllElementsDataRecursive(UnityEngine.UIElements.VisualElement ve);
            /*0x1770830*/ bool get_disposed();
            /*0x17f8760*/ void set_disposed(bool value);
            /*0x17f78a0*/ void Dispose(bool disposing);
        }

        struct TextureId
        {
            static /*0x0*/ UnityEngine.UIElements.TextureId invalid;
            /*0x10*/ int m_Index;

            static /*0x17f3790*/ TextureId();
            static /*0x15e9700*/ bool op_Equality(UnityEngine.UIElements.TextureId left, UnityEngine.UIElements.TextureId right);
            static /*0x17f37f0*/ bool op_Inequality(UnityEngine.UIElements.TextureId left, UnityEngine.UIElements.TextureId right);
            /*0x17f37d0*/ TextureId(int index);
            /*0x17f37e0*/ int get_index();
            /*0x17f36a0*/ float ConvertToGpu();
            /*0x17f36f0*/ bool Equals(object obj);
            /*0x1612f80*/ int GetHashCode();
        }

        class TextureRegistry
        {
            static int maxTextures = 2048;
            static /*0x0*/ UnityEngine.UIElements.TextureRegistry <instance>k__BackingField;
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.TextureRegistry.TextureInfo> m_Textures;
            /*0x18*/ System.Collections.Generic.Dictionary<UnityEngine.Texture, UnityEngine.UIElements.TextureId> m_TextureToId;
            /*0x20*/ System.Collections.Generic.Stack<UnityEngine.UIElements.TextureId> m_FreeIds;

            static /*0x17f4450*/ TextureRegistry();
            static /*0x17f46c0*/ UnityEngine.UIElements.TextureRegistry get_instance();
            /*0x17f45b0*/ TextureRegistry();
            /*0x17f3d80*/ UnityEngine.Texture GetTexture(UnityEngine.UIElements.TextureId id);
            /*0x17f39e0*/ UnityEngine.UIElements.TextureId AllocAndAcquireDynamic();
            /*0x17f41d0*/ void UpdateDynamic(UnityEngine.UIElements.TextureId id, UnityEngine.Texture texture);
            /*0x17f39f0*/ UnityEngine.UIElements.TextureId AllocAndAcquire(UnityEngine.Texture texture, bool dynamic);
            /*0x17f3840*/ UnityEngine.UIElements.TextureId Acquire(UnityEngine.Texture tex);
            /*0x17f3f30*/ void Release(UnityEngine.UIElements.TextureId id);

            struct TextureInfo
            {
                /*0x10*/ UnityEngine.Texture texture;
                /*0x18*/ bool dynamic;
                /*0x1c*/ int refCount;
            }
        }

        class UIRUtility
        {
            static /*0x0*/ string k_DefaultShaderName;
            static /*0x8*/ string k_DefaultWorldSpaceShaderName;

            static /*0x17f8ae0*/ UIRUtility();
            static /*0x17f8a60*/ bool ShapeWindingIsClockwise(int maskDepth, int stencilRef);
            static /*0x17f88f0*/ bool IsRoundRect(UnityEngine.UIElements.VisualElement ve);
            static /*0x17f89d0*/ bool IsVectorImageBackground(UnityEngine.UIElements.VisualElement ve);
            static /*0x17f8890*/ bool IsElementSelfHidden(UnityEngine.UIElements.VisualElement ve);
            static /*0x17f8770*/ void Destroy(UnityEngine.Object obj);
            static /*0x17f8870*/ int GetPrevPow2(int n);
            static /*0x17f8850*/ int GetNextPow2(int n);
            static /*0x17f8830*/ int GetNextPow2Exp(int n);
        }

        struct TimerState : System.IEquatable<UnityEngine.UIElements.TimerState>
        {
            /*0x10*/ long <start>k__BackingField;
            /*0x18*/ long <now>k__BackingField;

            /*0x6937d0*/ long get_start();
            /*0x9e29e0*/ void set_start(long value);
            /*0xa5a7f0*/ long get_now();
            /*0xfbbe80*/ void set_now(long value);
            /*0x17f54e0*/ long get_deltaTime();
            /*0x17f53c0*/ bool Equals(object obj);
            /*0x17f5390*/ bool Equals(UnityEngine.UIElements.TimerState other);
            /*0x17f5460*/ int GetHashCode();
        }

        interface IScheduler
        {
            /*0x17aec0*/ void Unschedule(UnityEngine.UIElements.ScheduledItem item);
            /*0x17aec0*/ void Schedule(UnityEngine.UIElements.ScheduledItem item);
            /*0x180fc0*/ void UpdateScheduledEvents();
        }

        class ScheduledItem
        {
            static /*0x0*/ System.Func<bool> OnceCondition;
            static /*0x8*/ System.Func<bool> ForeverCondition;
            /*0x10*/ System.Func<bool> timerUpdateStopCondition;
            /*0x18*/ long <startMs>k__BackingField;
            /*0x20*/ long <delayMs>k__BackingField;
            /*0x28*/ long <intervalMs>k__BackingField;
            /*0x30*/ long <endTimeMs>k__BackingField;

            static /*0x17f3440*/ ScheduledItem();
            /*0x17f3580*/ ScheduledItem();
            /*0x32f410*/ long get_startMs();
            /*0xdd51f0*/ void set_startMs(long value);
            /*0x61a260*/ long get_delayMs();
            /*0x10cb140*/ void set_delayMs(long value);
            /*0x79a150*/ long get_intervalMs();
            /*0x179ef60*/ void set_intervalMs(long value);
            /*0x997630*/ long get_endTimeMs();
            /*0x17f33c0*/ void ResetStartTime();
            void PerformTimerUpdate(UnityEngine.UIElements.TimerState state);
            /*0x32d010*/ void OnItemUnscheduled();
            /*0x17f3410*/ bool ShouldUnschedule();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.ScheduledItem.<> <>9;

                static /*0x17f5800*/ <>c();
                /*0x32f970*/ <>c();
                /*0x3ce290*/ bool <.cctor>b__25_0();
                /*0x348b00*/ bool <.cctor>b__25_1();
            }
        }

        class TimerEventScheduler : UnityEngine.UIElements.IScheduler
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.ScheduledItem> m_ScheduledItems;
            /*0x18*/ bool m_TransactionMode;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.ScheduledItem> m_ScheduleTransactions;
            /*0x28*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.ScheduledItem> m_UnscheduleTransactions;
            /*0x30*/ bool disableThrottling;
            /*0x34*/ int m_LastUpdatedIndex;

            /*0x17f5290*/ TimerEventScheduler();
            /*0x17f4860*/ void Schedule(UnityEngine.UIElements.ScheduledItem item);
            /*0x17f47f0*/ bool RemovedScheduledItemAt(int index);
            /*0x17f4a40*/ void Unschedule(UnityEngine.UIElements.ScheduledItem item);
            /*0x17f4710*/ bool PrivateUnSchedule(UnityEngine.UIElements.ScheduledItem sItem);
            /*0x17f4cb0*/ void UpdateScheduledEvents();
        }

        struct Spacing
        {
            /*0x10*/ float left;
            /*0x14*/ float top;
            /*0x18*/ float right;
            /*0x1c*/ float bottom;

            static /*0x17f3630*/ UnityEngine.Rect op_Subtraction(UnityEngine.Rect r, UnityEngine.UIElements.Spacing a);
            /*0x11534a0*/ Spacing(float left, float top, float right, float bottom);
            /*0x15d4a70*/ float get_horizontal();
            /*0x15d4a80*/ float get_vertical();
        }

        enum AngleUnit
        {
            Degree = 0,
            Gradian = 1,
            Radian = 2,
            Turn = 3,
        }

        struct Angle : System.IEquatable<UnityEngine.UIElements.Angle>
        {
            /*0x10*/ float m_Value;
            /*0x14*/ UnityEngine.UIElements.Angle.Unit m_Unit;

            static /*0x17e3a00*/ UnityEngine.UIElements.Angle None();
            static /*0x17e3c10*/ UnityEngine.UIElements.Angle op_Implicit(float value);
            static /*0x17e3be0*/ bool op_Equality(UnityEngine.UIElements.Angle lhs, UnityEngine.UIElements.Angle rhs);
            /*0x791da0*/ Angle(float value, UnityEngine.UIElements.AngleUnit unit);
            /*0x791da0*/ Angle(float value, UnityEngine.UIElements.Angle.Unit unit);
            /*0xf72200*/ float get_value();
            /*0x17e3a20*/ float ToDegrees();
            /*0x17e39b0*/ bool Equals(UnityEngine.UIElements.Angle other);
            /*0x17e3900*/ bool Equals(object obj);
            /*0x17e39e0*/ int GetHashCode();
            /*0x17e3a80*/ string ToString();

            enum Unit
            {
                Degree = 0,
                Gradian = 1,
                Radian = 2,
                Turn = 3,
                None = 4,
            }
        }

        struct Background : System.IEquatable<UnityEngine.UIElements.Background>
        {
            /*0x10*/ UnityEngine.Texture2D m_Texture;
            /*0x18*/ UnityEngine.Sprite m_Sprite;
            /*0x20*/ UnityEngine.RenderTexture m_RenderTexture;
            /*0x28*/ UnityEngine.UIElements.VectorImage m_VectorImage;

            static /*0x17e4870*/ UnityEngine.UIElements.Background FromTexture2D(UnityEngine.Texture2D t);
            static /*0x17e46b0*/ UnityEngine.UIElements.Background FromRenderTexture(UnityEngine.RenderTexture rt);
            static /*0x17e4790*/ UnityEngine.UIElements.Background FromSprite(UnityEngine.Sprite s);
            static /*0x17e4950*/ UnityEngine.UIElements.Background FromVectorImage(UnityEngine.UIElements.VectorImage vi);
            static /*0x17e4270*/ UnityEngine.UIElements.Background FromObject(object obj);
            static /*0x17e4c30*/ bool op_Equality(UnityEngine.UIElements.Background lhs, UnityEngine.UIElements.Background rhs);
            static /*0x17e4d20*/ bool op_Inequality(UnityEngine.UIElements.Background lhs, UnityEngine.UIElements.Background rhs);
            /*0x69af20*/ UnityEngine.Texture2D get_texture();
            /*0x17e4f70*/ void set_texture(UnityEngine.Texture2D value);
            /*0xfbbe70*/ UnityEngine.Sprite get_sprite();
            /*0x17e4ec0*/ void set_sprite(UnityEngine.Sprite value);
            /*0x9e3110*/ UnityEngine.RenderTexture get_renderTexture();
            /*0x17e4e10*/ void set_renderTexture(UnityEngine.RenderTexture value);
            /*0x8b8f40*/ UnityEngine.UIElements.VectorImage get_vectorImage();
            /*0x17e5020*/ void set_vectorImage(UnityEngine.UIElements.VectorImage value);
            /*0x17e4170*/ bool Equals(UnityEngine.UIElements.Background other);
            /*0x17e3fd0*/ bool Equals(object obj);
            /*0x17e4a30*/ int GetHashCode();
            /*0x17e4b00*/ string ToString();
        }

        struct ComputedStyle
        {
            /*0x10*/ UnityEngine.UIElements.StyleDataRef<UnityEngine.UIElements.InheritedData> inheritedData;
            /*0x18*/ UnityEngine.UIElements.StyleDataRef<UnityEngine.UIElements.LayoutData> layoutData;
            /*0x20*/ UnityEngine.UIElements.StyleDataRef<UnityEngine.UIElements.RareData> rareData;
            /*0x28*/ UnityEngine.UIElements.StyleDataRef<UnityEngine.UIElements.TransformData> transformData;
            /*0x30*/ UnityEngine.UIElements.StyleDataRef<UnityEngine.UIElements.TransitionData> transitionData;
            /*0x38*/ UnityEngine.UIElements.StyleDataRef<UnityEngine.UIElements.VisualData> visualData;
            /*0x40*/ UnityEngine.Yoga.YogaNode yogaNode;
            /*0x48*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleSheets.StylePropertyValue> customProperties;
            /*0x50*/ long matchingRulesHash;
            /*0x58*/ float dpiScaling;
            /*0x60*/ UnityEngine.UIElements.ComputedTransitionProperty[] computedTransitions;

            static /*0x17d9fe0*/ bool StartAnimationInlineTranslate(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleTranslate translate, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            static /*0x17d6f80*/ UnityEngine.UIElements.ComputedStyle Create(ref UnityEngine.UIElements.ComputedStyle parentStyle);
            static /*0x17d6dd0*/ UnityEngine.UIElements.ComputedStyle CreateInitial();
            static /*0x17dd520*/ bool StartAnimation(UnityEngine.UIElements.VisualElement element, UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle oldStyle, ref UnityEngine.UIElements.ComputedStyle newStyle, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            static /*0x17d74a0*/ bool StartAnimationAllProperty(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle oldStyle, ref UnityEngine.UIElements.ComputedStyle newStyle, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            static /*0x17da210*/ bool StartAnimationInline(UnityEngine.UIElements.VisualElement element, UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleSheets.StyleValue sv, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            static /*0x17d50c0*/ UnityEngine.UIElements.VersionChangeType CompareChanges(ref UnityEngine.UIElements.ComputedStyle x, ref UnityEngine.UIElements.ComputedStyle y);
            /*0x17e2320*/ int get_customPropertiesCount();
            /*0x17e2530*/ bool get_hasTransition();
            /*0x17d7180*/ void FinalizeApply(ref UnityEngine.UIElements.ComputedStyle parentStyle);
            /*0x17e12d0*/ void SyncWithLayout(UnityEngine.Yoga.YogaNode targetNode);
            /*0x17cd1f0*/ bool ApplyGlobalKeyword(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle parentStyle);
            /*0x17cd2b0*/ bool ApplyGlobalKeyword(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleKeyword keyword, ref UnityEngine.UIElements.ComputedStyle parentStyle);
            /*0x17d73e0*/ void RemoveCustomStyleProperty(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader);
            /*0x17cb9b0*/ void ApplyCustomStyleProperty(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader);
            /*0x17cb950*/ void ApplyAllPropertyInitial();
            /*0x17d7480*/ void ResetComputedTransitions();
            /*0x17e1bc0*/ UnityEngine.UIElements.Align get_alignContent();
            /*0x17e1c00*/ UnityEngine.UIElements.Align get_alignItems();
            /*0x17e1c40*/ UnityEngine.UIElements.Align get_alignSelf();
            /*0x17e1c80*/ UnityEngine.Color get_backgroundColor();
            /*0x17e1cd0*/ UnityEngine.UIElements.Background get_backgroundImage();
            /*0x17e1d30*/ UnityEngine.UIElements.BackgroundPosition get_backgroundPositionX();
            /*0x17e1d90*/ UnityEngine.UIElements.BackgroundPosition get_backgroundPositionY();
            /*0x17e1df0*/ UnityEngine.UIElements.BackgroundRepeat get_backgroundRepeat();
            /*0x17e1e30*/ UnityEngine.UIElements.BackgroundSize get_backgroundSize();
            /*0x17e1e90*/ UnityEngine.Color get_borderBottomColor();
            /*0x17e1ef0*/ UnityEngine.UIElements.Length get_borderBottomLeftRadius();
            /*0x17e1f30*/ UnityEngine.UIElements.Length get_borderBottomRightRadius();
            /*0x17e1f70*/ float get_borderBottomWidth();
            /*0x17e1fb0*/ UnityEngine.Color get_borderLeftColor();
            /*0x17e2010*/ float get_borderLeftWidth();
            /*0x17e2050*/ UnityEngine.Color get_borderRightColor();
            /*0x17e20b0*/ float get_borderRightWidth();
            /*0x17e20f0*/ UnityEngine.Color get_borderTopColor();
            /*0x17e2150*/ UnityEngine.UIElements.Length get_borderTopLeftRadius();
            /*0x17e21a0*/ UnityEngine.UIElements.Length get_borderTopRightRadius();
            /*0x17e21f0*/ float get_borderTopWidth();
            /*0x17e2230*/ UnityEngine.UIElements.Length get_bottom();
            /*0x17e2270*/ UnityEngine.Color get_color();
            /*0x17e22c0*/ UnityEngine.UIElements.Cursor get_cursor();
            /*0x17e2370*/ UnityEngine.UIElements.DisplayStyle get_display();
            /*0x17e23b0*/ UnityEngine.UIElements.Length get_flexBasis();
            /*0x17e23f0*/ UnityEngine.UIElements.FlexDirection get_flexDirection();
            /*0x17e2430*/ float get_flexGrow();
            /*0x17e2470*/ float get_flexShrink();
            /*0x17e24b0*/ UnityEngine.UIElements.Wrap get_flexWrap();
            /*0x17e24f0*/ UnityEngine.UIElements.Length get_fontSize();
            /*0x17e2550*/ UnityEngine.UIElements.Length get_height();
            /*0x17e2590*/ UnityEngine.UIElements.Justify get_justifyContent();
            /*0x17e25d0*/ UnityEngine.UIElements.Length get_left();
            /*0x17e2610*/ UnityEngine.UIElements.Length get_letterSpacing();
            /*0x17e2650*/ UnityEngine.UIElements.Length get_marginBottom();
            /*0x17e2690*/ UnityEngine.UIElements.Length get_marginLeft();
            /*0x17e26d0*/ UnityEngine.UIElements.Length get_marginRight();
            /*0x17e2710*/ UnityEngine.UIElements.Length get_marginTop();
            /*0x17e2750*/ UnityEngine.UIElements.Length get_maxHeight();
            /*0x17e2790*/ UnityEngine.UIElements.Length get_maxWidth();
            /*0x17e27d0*/ UnityEngine.UIElements.Length get_minHeight();
            /*0x17e2820*/ UnityEngine.UIElements.Length get_minWidth();
            /*0x17e2870*/ float get_opacity();
            /*0x17e28c0*/ UnityEngine.UIElements.OverflowInternal get_overflow();
            /*0x17e2910*/ UnityEngine.UIElements.Length get_paddingBottom();
            /*0x17e2960*/ UnityEngine.UIElements.Length get_paddingLeft();
            /*0x17e29b0*/ UnityEngine.UIElements.Length get_paddingRight();
            /*0x17e2a00*/ UnityEngine.UIElements.Length get_paddingTop();
            /*0x17e2a50*/ UnityEngine.UIElements.Position get_position();
            /*0x17e2aa0*/ UnityEngine.UIElements.Length get_right();
            /*0x17e2af0*/ UnityEngine.UIElements.Rotate get_rotate();
            /*0x17e2b50*/ UnityEngine.UIElements.Scale get_scale();
            /*0x17e2bb0*/ UnityEngine.UIElements.TextOverflow get_textOverflow();
            /*0x17e2bf0*/ UnityEngine.UIElements.TextShadow get_textShadow();
            /*0x17e2c50*/ UnityEngine.UIElements.Length get_top();
            /*0x17e2ca0*/ UnityEngine.UIElements.TransformOrigin get_transformOrigin();
            /*0x17e2d00*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> get_transitionDelay();
            /*0x17e2d40*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> get_transitionDuration();
            /*0x17e2d80*/ System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> get_transitionProperty();
            /*0x17e2dc0*/ System.Collections.Generic.List<UnityEngine.UIElements.EasingFunction> get_transitionTimingFunction();
            /*0x17e2e00*/ UnityEngine.UIElements.Translate get_translate();
            /*0x17e2e60*/ UnityEngine.Color get_unityBackgroundImageTintColor();
            /*0x17e2f50*/ UnityEngine.Font get_unityFont();
            /*0x17e2ec0*/ UnityEngine.UIElements.FontDefinition get_unityFontDefinition();
            /*0x17e2f10*/ UnityEngine.FontStyle get_unityFontStyleAndWeight();
            /*0x17e2f90*/ UnityEngine.UIElements.OverflowClipBox get_unityOverflowClipBox();
            /*0x17e2fd0*/ UnityEngine.UIElements.Length get_unityParagraphSpacing();
            /*0x17e3010*/ int get_unitySliceBottom();
            /*0x17e3050*/ int get_unitySliceLeft();
            /*0x17e3090*/ int get_unitySliceRight();
            /*0x17e30d0*/ float get_unitySliceScale();
            /*0x17e3110*/ int get_unitySliceTop();
            /*0x17e3150*/ UnityEngine.TextAnchor get_unityTextAlign();
            /*0x17e3190*/ UnityEngine.Color get_unityTextOutlineColor();
            /*0x17e31e0*/ float get_unityTextOutlineWidth();
            /*0x17e3220*/ UnityEngine.UIElements.TextOverflowPosition get_unityTextOverflowPosition();
            /*0x17e3260*/ UnityEngine.UIElements.Visibility get_visibility();
            /*0x17e32a0*/ UnityEngine.UIElements.WhiteSpace get_whiteSpace();
            /*0x17e32e0*/ UnityEngine.UIElements.Length get_width();
            /*0x17e3330*/ UnityEngine.UIElements.Length get_wordSpacing();
            /*0x17cb820*/ UnityEngine.UIElements.ComputedStyle Acquire();
            /*0x17d7310*/ void Release();
            /*0x17d6ca0*/ void CopyFrom(ref UnityEngine.UIElements.ComputedStyle other);
            /*0x17cf3c0*/ void ApplyProperties(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle parentStyle);
            /*0x17d3b30*/ void ApplyStyleValue(UnityEngine.UIElements.StyleSheets.StyleValue sv, ref UnityEngine.UIElements.ComputedStyle parentStyle);
            /*0x17d35e0*/ void ApplyStyleValueManaged(UnityEngine.UIElements.StyleSheets.StyleValueManaged sv, ref UnityEngine.UIElements.ComputedStyle parentStyle);
            /*0x17d33b0*/ void ApplyStyleCursor(UnityEngine.UIElements.Cursor cursor);
            /*0x17d34c0*/ void ApplyStyleTextShadow(UnityEngine.UIElements.TextShadow st);
            /*0x17cbac0*/ void ApplyFromComputedStyle(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle other);
            /*0x17d1260*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Length newValue);
            /*0x17d0d70*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, float newValue);
            /*0x17d1cd0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, int newValue);
            /*0x17d2ba0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundPosition newValue);
            /*0x17d2730*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundRepeat newValue);
            /*0x17d1110*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundSize newValue);
            /*0x17d30a0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Color newValue);
            /*0x17d29f0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Background newValue);
            /*0x17d1b30*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Font newValue);
            /*0x17d2dc0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.FontDefinition newValue);
            /*0x17d2f50*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TextShadow newValue);
            /*0x17d24a0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Translate newValue);
            /*0x17d28a0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TransformOrigin newValue);
            /*0x17d0c20*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Rotate newValue);
            /*0x17d25f0*/ void ApplyPropertyAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Scale newValue);
            /*0x17d3520*/ void ApplyStyleTransformOrigin(UnityEngine.UIElements.TransformOrigin st);
            /*0x17d3580*/ void ApplyStyleTranslate(UnityEngine.UIElements.Translate translateValue);
            /*0x17d3410*/ void ApplyStyleRotate(UnityEngine.UIElements.Rotate rotateValue);
            /*0x17d3470*/ void ApplyStyleScale(UnityEngine.UIElements.Scale scaleValue);
            /*0x17d3350*/ void ApplyStyleBackgroundSize(UnityEngine.UIElements.BackgroundSize backgroundSizeValue);
            /*0x17cd2d0*/ void ApplyInitialValue(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader);
            /*0x17cd3f0*/ void ApplyInitialValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x17d4bf0*/ void ApplyUnsetValue(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle parentStyle);
            /*0x17d4cb0*/ void ApplyUnsetValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle parentStyle);
        }

        struct ComputedTransitionProperty
        {
            /*0x10*/ UnityEngine.UIElements.StyleSheets.StylePropertyId id;
            /*0x14*/ int durationMs;
            /*0x18*/ int delayMs;
            /*0x20*/ System.Func<float, float> easingCurve;
        }

        class ComputedTransitionUtils
        {
            static /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.ComputedTransitionProperty> s_ComputedTransitionsBuffer;

            static /*0x17e8a50*/ ComputedTransitionUtils();
            static /*0x17e8840*/ void UpdateComputedTransitions(ref UnityEngine.UIElements.ComputedStyle computedStyle);
            static /*0x17e8340*/ bool HasTransitionProperty(ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            static /*0x17e8200*/ bool GetTransitionProperty(ref UnityEngine.UIElements.ComputedStyle computedStyle, UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedTransitionProperty result);
            static /*0x17e7bd0*/ UnityEngine.UIElements.ComputedTransitionProperty[] GetOrComputeTransitionPropertyData(ref UnityEngine.UIElements.ComputedStyle computedStyle);
            static /*0x17e7d90*/ int GetTransitionHashCode(ref UnityEngine.UIElements.ComputedStyle cs);
            static /*0x17e8540*/ bool SameTransitionProperty(ref UnityEngine.UIElements.ComputedStyle x, ref UnityEngine.UIElements.ComputedStyle y);
            static /*0x17e8420*/ bool SameTransitionProperty(System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> a, System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> b);
            static /*0x17e8740*/ bool SameTransitionProperty(System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> a, System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> b);
            static /*0x17e6840*/ void ComputeTransitionPropertyData(ref UnityEngine.UIElements.ComputedStyle computedStyle, System.Collections.Generic.List<UnityEngine.UIElements.ComputedTransitionProperty> outData);
            static /*0x2a5510*/ T GetWrappingTransitionData<T>(System.Collections.Generic.List<T> list, int i, T defaultValue);
            static /*0x17e7ba0*/ int ConvertTransitionTime(UnityEngine.UIElements.TimeValue time);
            static /*0x17e6b90*/ System.Func<float, float> ConvertTransitionFunction(UnityEngine.UIElements.EasingMode mode);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.ComputedTransitionUtils.<> <>9;
                static /*0x8*/ System.Func<float, float> <>9__12_0;
                static /*0x10*/ System.Func<float, float> <>9__12_1;
                static /*0x18*/ System.Func<float, float> <>9__12_2;
                static /*0x20*/ System.Func<float, float> <>9__12_3;
                static /*0x28*/ System.Func<float, float> <>9__12_4;
                static /*0x30*/ System.Func<float, float> <>9__12_5;
                static /*0x38*/ System.Func<float, float> <>9__12_6;
                static /*0x40*/ System.Func<float, float> <>9__12_7;
                static /*0x48*/ System.Func<float, float> <>9__12_8;
                static /*0x50*/ System.Func<float, float> <>9__12_9;
                static /*0x58*/ System.Func<float, float> <>9__12_10;
                static /*0x60*/ System.Func<float, float> <>9__12_11;
                static /*0x68*/ System.Func<float, float> <>9__12_12;
                static /*0x70*/ System.Func<float, float> <>9__12_13;
                static /*0x78*/ System.Func<float, float> <>9__12_14;
                static /*0x80*/ System.Func<float, float> <>9__12_15;
                static /*0x88*/ System.Func<float, float> <>9__12_16;
                static /*0x90*/ System.Func<float, float> <>9__12_17;
                static /*0x98*/ System.Func<float, float> <>9__12_18;
                static /*0xa0*/ System.Func<float, float> <>9__12_19;
                static /*0xa8*/ System.Func<float, float> <>9__12_20;
                static /*0xb0*/ System.Func<float, float> <>9__12_21;
                static /*0xb8*/ System.Func<float, float> <>9__12_22;

                static /*0x17f5870*/ <>c();
                /*0x32f970*/ <>c();
                /*0x17f54f0*/ float <ConvertTransitionFunction>b__12_0(float t);
                /*0x17f55c0*/ float <ConvertTransitionFunction>b__12_1(float t);
                /*0x17f5600*/ float <ConvertTransitionFunction>b__12_2(float t);
                /*0x17f5610*/ float <ConvertTransitionFunction>b__12_3(float t);
                /*0x17f5620*/ float <ConvertTransitionFunction>b__12_4(float t);
                /*0x17f5630*/ float <ConvertTransitionFunction>b__12_5(float t);
                /*0x17f5640*/ float <ConvertTransitionFunction>b__12_6(float t);
                /*0x17f5650*/ float <ConvertTransitionFunction>b__12_7(float t);
                /*0x17f5660*/ float <ConvertTransitionFunction>b__12_8(float t);
                /*0x17f5670*/ float <ConvertTransitionFunction>b__12_9(float t);
                /*0x17f5520*/ float <ConvertTransitionFunction>b__12_10(float t);
                /*0x17f5530*/ float <ConvertTransitionFunction>b__12_11(float t);
                /*0x17f5540*/ float <ConvertTransitionFunction>b__12_12(float t);
                /*0x17f5550*/ float <ConvertTransitionFunction>b__12_13(float t);
                /*0x17f5560*/ float <ConvertTransitionFunction>b__12_14(float t);
                /*0x17f5570*/ float <ConvertTransitionFunction>b__12_15(float t);
                /*0x17f5580*/ float <ConvertTransitionFunction>b__12_16(float t);
                /*0x17f5590*/ float <ConvertTransitionFunction>b__12_17(float t);
                /*0x17f55a0*/ float <ConvertTransitionFunction>b__12_18(float t);
                /*0x17f55b0*/ float <ConvertTransitionFunction>b__12_19(float t);
                /*0x17f55d0*/ float <ConvertTransitionFunction>b__12_20(float t);
                /*0x17f55e0*/ float <ConvertTransitionFunction>b__12_21(float t);
                /*0x17f55f0*/ float <ConvertTransitionFunction>b__12_22(float t);
            }
        }

        struct CustomStyleProperty<T> : System.IEquatable<UnityEngine.UIElements.CustomStyleProperty<T>>
        {
            /*0x0*/ string <name>k__BackingField;

            /*0x17aec0*/ CustomStyleProperty(string propertyName);
            /*0x1803b0*/ string get_name();
            /*0x17aec0*/ void set_name(string value);
            /*0x17e620*/ bool Equals(object obj);
            /*0x2a5510*/ bool Equals(UnityEngine.UIElements.CustomStyleProperty<T> other);
            /*0x180980*/ int GetHashCode();
        }

        interface ICustomStyle
        {
            bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<float> property, ref float value);
            bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<int> property, ref int value);
            bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Color> property, ref UnityEngine.Color value);
            bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Texture2D> property, ref UnityEngine.Texture2D value);
            bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Sprite> property, ref UnityEngine.Sprite value);
            bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.UIElements.VectorImage> property, ref UnityEngine.UIElements.VectorImage value);
            bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<string> property, ref string value);
        }

        enum EasingMode
        {
            Ease = 0,
            EaseIn = 1,
            EaseOut = 2,
            EaseInOut = 3,
            Linear = 4,
            EaseInSine = 5,
            EaseOutSine = 6,
            EaseInOutSine = 7,
            EaseInCubic = 8,
            EaseOutCubic = 9,
            EaseInOutCubic = 10,
            EaseInCirc = 11,
            EaseOutCirc = 12,
            EaseInOutCirc = 13,
            EaseInElastic = 14,
            EaseOutElastic = 15,
            EaseInOutElastic = 16,
            EaseInBack = 17,
            EaseOutBack = 18,
            EaseInOutBack = 19,
            EaseInBounce = 20,
            EaseOutBounce = 21,
            EaseInOutBounce = 22,
        }

        struct EasingFunction : System.IEquatable<UnityEngine.UIElements.EasingFunction>
        {
            /*0x10*/ UnityEngine.UIElements.EasingMode m_Mode;

            static /*0x15fa620*/ UnityEngine.UIElements.EasingFunction op_Implicit(UnityEngine.UIElements.EasingMode easingMode);
            static /*0x15e9700*/ bool op_Equality(UnityEngine.UIElements.EasingFunction lhs, UnityEngine.UIElements.EasingFunction rhs);
            /*0x6bbd40*/ EasingFunction(UnityEngine.UIElements.EasingMode mode);
            /*0x6bba50*/ UnityEngine.UIElements.EasingMode get_mode();
            /*0x17e9b40*/ bool Equals(UnityEngine.UIElements.EasingFunction other);
            /*0x17e9ab0*/ bool Equals(object obj);
            /*0x17e9b50*/ string ToString();
            /*0x15d3b80*/ int GetHashCode();
        }

        struct FontDefinition : System.IEquatable<UnityEngine.UIElements.FontDefinition>
        {
            /*0x10*/ UnityEngine.Font m_Font;
            /*0x18*/ UnityEngine.TextCore.Text.FontAsset m_FontAsset;

            static /*0x17e9cb0*/ UnityEngine.UIElements.FontDefinition FromFont(UnityEngine.Font f);
            static /*0x17e9e40*/ UnityEngine.UIElements.FontDefinition FromSDFFont(UnityEngine.TextCore.Text.FontAsset f);
            static /*0x17e9cf0*/ UnityEngine.UIElements.FontDefinition FromObject(object obj);
            static /*0x17e9c60*/ bool op_Equality(UnityEngine.UIElements.FontDefinition left, UnityEngine.UIElements.FontDefinition right);
            static /*0x17ea090*/ bool op_Inequality(UnityEngine.UIElements.FontDefinition left, UnityEngine.UIElements.FontDefinition right);
            /*0x69af20*/ UnityEngine.Font get_font();
            /*0xfbbe70*/ UnityEngine.TextCore.Text.FontAsset get_fontAsset();
            /*0x17e9f70*/ bool IsEmpty();
            /*0x17ea000*/ string ToString();
            /*0x17e9c60*/ bool Equals(UnityEngine.UIElements.FontDefinition other);
            /*0x17e9bb0*/ bool Equals(object obj);
            /*0x17e9e80*/ int GetHashCode();
        }

        class InlineStyleAccess : UnityEngine.UIElements.StyleValueCollection, UnityEngine.UIElements.IStyle
        {
            static /*0x0*/ UnityEngine.UIElements.StyleSheets.StylePropertyReader s_StylePropertyReader;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StyleValueManaged> m_ValuesManaged;
            /*0x20*/ UnityEngine.UIElements.VisualElement <ve>k__BackingField;
            /*0x28*/ bool m_HasInlineCursor;
            /*0x30*/ UnityEngine.UIElements.StyleCursor m_InlineCursor;
            /*0x50*/ bool m_HasInlineTextShadow;
            /*0x54*/ UnityEngine.UIElements.StyleTextShadow m_InlineTextShadow;
            /*0x74*/ bool m_HasInlineTransformOrigin;
            /*0x78*/ UnityEngine.UIElements.StyleTransformOrigin m_InlineTransformOrigin;
            /*0x90*/ bool m_HasInlineTranslate;
            /*0x94*/ UnityEngine.UIElements.StyleTranslate m_InlineTranslateOperation;
            /*0xb0*/ bool m_HasInlineRotate;
            /*0xb4*/ UnityEngine.UIElements.StyleRotate m_InlineRotateOperation;
            /*0xd0*/ bool m_HasInlineScale;
            /*0xd4*/ UnityEngine.UIElements.StyleScale m_InlineScale;
            /*0xe8*/ bool m_HasInlineBackgroundSize;
            /*0xec*/ UnityEngine.UIElements.StyleBackgroundSize m_InlineBackgroundSize;
            /*0x108*/ UnityEngine.UIElements.InlineStyleAccess.InlineRule m_InlineRule;

            static /*0x17ee560*/ InlineStyleAccess();
            /*0x17ee5e0*/ InlineStyleAccess(UnityEngine.UIElements.VisualElement ve);
            /*0x17ecc60*/ void UnityEngine.UIElements.IStyle.set_backgroundColor(UnityEngine.UIElements.StyleColor value);
            /*0x17eccc0*/ void UnityEngine.UIElements.IStyle.set_borderBottomColor(UnityEngine.UIElements.StyleColor value);
            /*0x17ecd20*/ void UnityEngine.UIElements.IStyle.set_borderBottomLeftRadius(UnityEngine.UIElements.StyleLength value);
            /*0x17ecd80*/ void UnityEngine.UIElements.IStyle.set_borderBottomRightRadius(UnityEngine.UIElements.StyleLength value);
            /*0x17ecde0*/ void UnityEngine.UIElements.IStyle.set_borderBottomWidth(UnityEngine.UIElements.StyleFloat value);
            /*0x17ece60*/ void UnityEngine.UIElements.IStyle.set_borderLeftColor(UnityEngine.UIElements.StyleColor value);
            /*0x17ecec0*/ void UnityEngine.UIElements.IStyle.set_borderLeftWidth(UnityEngine.UIElements.StyleFloat value);
            /*0x17ecf40*/ void UnityEngine.UIElements.IStyle.set_borderRightColor(UnityEngine.UIElements.StyleColor value);
            /*0x17ecfa0*/ void UnityEngine.UIElements.IStyle.set_borderRightWidth(UnityEngine.UIElements.StyleFloat value);
            /*0x17ed020*/ void UnityEngine.UIElements.IStyle.set_borderTopColor(UnityEngine.UIElements.StyleColor value);
            /*0x17ed080*/ void UnityEngine.UIElements.IStyle.set_borderTopLeftRadius(UnityEngine.UIElements.StyleLength value);
            /*0x17ed0e0*/ void UnityEngine.UIElements.IStyle.set_borderTopRightRadius(UnityEngine.UIElements.StyleLength value);
            /*0x17ed140*/ void UnityEngine.UIElements.IStyle.set_borderTopWidth(UnityEngine.UIElements.StyleFloat value);
            /*0x17ed1c0*/ void UnityEngine.UIElements.IStyle.set_bottom(UnityEngine.UIElements.StyleLength value);
            /*0x17ed260*/ void UnityEngine.UIElements.IStyle.set_color(UnityEngine.UIElements.StyleColor value);
            /*0x17ec930*/ UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.DisplayStyle> UnityEngine.UIElements.IStyle.get_display();
            /*0x17ed2c0*/ void UnityEngine.UIElements.IStyle.set_display(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.DisplayStyle> value);
            /*0x17ed370*/ void UnityEngine.UIElements.IStyle.set_flexBasis(UnityEngine.UIElements.StyleLength value);
            /*0x17ed410*/ void UnityEngine.UIElements.IStyle.set_flexDirection(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.FlexDirection> value);
            /*0x17ed4c0*/ void UnityEngine.UIElements.IStyle.set_flexGrow(UnityEngine.UIElements.StyleFloat value);
            /*0x17ed540*/ void UnityEngine.UIElements.IStyle.set_flexShrink(UnityEngine.UIElements.StyleFloat value);
            /*0x17ed5c0*/ void UnityEngine.UIElements.IStyle.set_fontSize(UnityEngine.UIElements.StyleLength value);
            /*0x17ed620*/ void UnityEngine.UIElements.IStyle.set_height(UnityEngine.UIElements.StyleLength value);
            /*0x17ed6c0*/ void UnityEngine.UIElements.IStyle.set_left(UnityEngine.UIElements.StyleLength value);
            /*0x17ed760*/ void UnityEngine.UIElements.IStyle.set_marginBottom(UnityEngine.UIElements.StyleLength value);
            /*0x17ed800*/ void UnityEngine.UIElements.IStyle.set_marginLeft(UnityEngine.UIElements.StyleLength value);
            /*0x17ed8a0*/ void UnityEngine.UIElements.IStyle.set_marginRight(UnityEngine.UIElements.StyleLength value);
            /*0x17ed940*/ void UnityEngine.UIElements.IStyle.set_marginTop(UnityEngine.UIElements.StyleLength value);
            /*0x17ed9e0*/ void UnityEngine.UIElements.IStyle.set_maxHeight(UnityEngine.UIElements.StyleLength value);
            /*0x17eda80*/ void UnityEngine.UIElements.IStyle.set_maxWidth(UnityEngine.UIElements.StyleLength value);
            /*0x17edb20*/ void UnityEngine.UIElements.IStyle.set_minWidth(UnityEngine.UIElements.StyleLength value);
            /*0x17edbc0*/ void UnityEngine.UIElements.IStyle.set_opacity(UnityEngine.UIElements.StyleFloat value);
            /*0x17edc10*/ void UnityEngine.UIElements.IStyle.set_overflow(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.Overflow> value);
            /*0x17edd20*/ void UnityEngine.UIElements.IStyle.set_paddingBottom(UnityEngine.UIElements.StyleLength value);
            /*0x17eddc0*/ void UnityEngine.UIElements.IStyle.set_paddingLeft(UnityEngine.UIElements.StyleLength value);
            /*0x17ede60*/ void UnityEngine.UIElements.IStyle.set_paddingRight(UnityEngine.UIElements.StyleLength value);
            /*0x17ec9b0*/ UnityEngine.UIElements.StyleLength UnityEngine.UIElements.IStyle.get_paddingTop();
            /*0x17edf00*/ void UnityEngine.UIElements.IStyle.set_paddingTop(UnityEngine.UIElements.StyleLength value);
            /*0x17edfa0*/ void UnityEngine.UIElements.IStyle.set_position(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.Position> value);
            /*0x17ee050*/ void UnityEngine.UIElements.IStyle.set_right(UnityEngine.UIElements.StyleLength value);
            /*0x17ee0f0*/ void UnityEngine.UIElements.IStyle.set_top(UnityEngine.UIElements.StyleLength value);
            /*0x17ee340*/ void UnityEngine.UIElements.IStyle.set_unityBackgroundImageTintColor(UnityEngine.UIElements.StyleColor value);
            /*0x17ee400*/ void UnityEngine.UIElements.IStyle.set_unityFont(UnityEngine.UIElements.StyleFont value);
            /*0x17ee3a0*/ void UnityEngine.UIElements.IStyle.set_unityFontDefinition(UnityEngine.UIElements.StyleFontDefinition value);
            /*0x17ee450*/ void UnityEngine.UIElements.IStyle.set_visibility(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.Visibility> value);
            /*0x17ecc20*/ UnityEngine.UIElements.StyleLength UnityEngine.UIElements.IStyle.get_width();
            /*0x17ee4c0*/ void UnityEngine.UIElements.IStyle.set_width(UnityEngine.UIElements.StyleLength value);
            /*0x61a260*/ UnityEngine.UIElements.VisualElement get_ve();
            /*0x7965a0*/ void set_ve(UnityEngine.UIElements.VisualElement value);
            /*0x17eb5c0*/ void Finalize();
            /*0x17eba80*/ void SetInlineRule(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleRule rule);
            /*0x17eb690*/ bool IsValueSet(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x17ea310*/ void ApplyInlineStyles(ref UnityEngine.UIElements.ComputedStyle computedStyle);
            /*0x17ec8a0*/ UnityEngine.UIElements.StyleCursor UnityEngine.UIElements.IStyle.get_cursor();
            /*0x17ecad0*/ UnityEngine.UIElements.StyleTextShadow UnityEngine.UIElements.IStyle.get_textShadow();
            /*0x17ec830*/ UnityEngine.UIElements.StyleBackgroundSize UnityEngine.UIElements.IStyle.get_backgroundSize();
            /*0x17ecb30*/ UnityEngine.UIElements.StyleTransformOrigin UnityEngine.UIElements.IStyle.get_transformOrigin();
            /*0x17ecba0*/ UnityEngine.UIElements.StyleTranslate UnityEngine.UIElements.IStyle.get_translate();
            /*0x17ee190*/ void UnityEngine.UIElements.IStyle.set_translate(UnityEngine.UIElements.StyleTranslate value);
            /*0x17ec9f0*/ UnityEngine.UIElements.StyleRotate UnityEngine.UIElements.IStyle.get_rotate();
            /*0x17eca70*/ UnityEngine.UIElements.StyleScale UnityEngine.UIElements.IStyle.get_scale();
            /*0x17ebd20*/ bool SetStyleValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleLength inlineValue);
            /*0x17ec5b0*/ bool SetStyleValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleFloat inlineValue);
            /*0x17ec1c0*/ bool SetStyleValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleColor inlineValue);
            /*0x2a5510*/ bool SetStyleValue<T>(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleEnum<T> inlineValue);
            /*0x17ebe80*/ bool SetStyleValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleFontDefinition inlineValue);
            /*0x17ec380*/ bool SetStyleValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.StyleFont inlineValue);
            /*0x17ebb50*/ bool SetInlineTranslate(UnityEngine.UIElements.StyleTranslate inlineValue);
            /*0x17eb050*/ void ApplyStyleTranslate(UnityEngine.UIElements.StyleTranslate translate);
            /*0x17eb2a0*/ void ApplyStyleValue(UnityEngine.UIElements.StyleSheets.StyleValue value);
            /*0x17eb970*/ bool RemoveInlineStyle(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x17ea0e0*/ void ApplyFromComputedStyle(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.ComputedStyle newStyle);
            /*0x17ec720*/ bool TryGetInlineCursor(ref UnityEngine.UIElements.StyleCursor value);
            /*0x17ec7c0*/ bool TryGetInlineTextShadow(ref UnityEngine.UIElements.StyleTextShadow value);
            /*0x17ec7e0*/ bool TryGetInlineTransformOrigin(ref UnityEngine.UIElements.StyleTransformOrigin value);
            /*0x17ec800*/ bool TryGetInlineTranslate(ref UnityEngine.UIElements.StyleTranslate value);
            /*0x17ec760*/ bool TryGetInlineRotate(ref UnityEngine.UIElements.StyleRotate value);
            /*0x17ec790*/ bool TryGetInlineScale(ref UnityEngine.UIElements.StyleScale value);
            /*0x17ec6f0*/ bool TryGetInlineBackgroundSize(ref UnityEngine.UIElements.StyleBackgroundSize value);

            struct InlineRule
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheet sheet;
                /*0x18*/ UnityEngine.UIElements.StyleRule rule;
                /*0x20*/ UnityEngine.UIElements.StyleSheets.StylePropertyId[] propertyIds;
            }
        }

        interface IResolvedStyle
        {
            UnityEngine.Color get_backgroundColor();
            UnityEngine.Color get_borderBottomColor();
            /*0x17fc30*/ float get_borderBottomLeftRadius();
            /*0x17fc30*/ float get_borderBottomRightRadius();
            /*0x17fc30*/ float get_borderBottomWidth();
            UnityEngine.Color get_borderLeftColor();
            /*0x17fc30*/ float get_borderLeftWidth();
            UnityEngine.Color get_borderRightColor();
            /*0x17fc30*/ float get_borderRightWidth();
            UnityEngine.Color get_borderTopColor();
            /*0x17fc30*/ float get_borderTopLeftRadius();
            /*0x17fc30*/ float get_borderTopRightRadius();
            /*0x17fc30*/ float get_borderTopWidth();
            /*0x17fc30*/ float get_bottom();
            UnityEngine.Color get_color();
            /*0x180980*/ UnityEngine.UIElements.DisplayStyle get_display();
            /*0x180980*/ UnityEngine.UIElements.FlexDirection get_flexDirection();
            /*0x17fc30*/ float get_flexGrow();
            /*0x17fc30*/ float get_flexShrink();
            /*0x17fc30*/ float get_height();
            /*0x17fc30*/ float get_left();
            /*0x17fc30*/ float get_marginBottom();
            /*0x17fc30*/ float get_marginLeft();
            /*0x17fc30*/ float get_marginRight();
            /*0x17fc30*/ float get_marginTop();
            UnityEngine.UIElements.StyleFloat get_minHeight();
            UnityEngine.UIElements.StyleFloat get_minWidth();
            /*0x17fc30*/ float get_opacity();
            /*0x17fc30*/ float get_paddingBottom();
            /*0x17fc30*/ float get_paddingLeft();
            /*0x17fc30*/ float get_paddingRight();
            /*0x17fc30*/ float get_paddingTop();
            /*0x17fc30*/ float get_right();
            UnityEngine.UIElements.Scale get_scale();
            /*0x17fc30*/ float get_top();
            /*0x180e40*/ UnityEngine.Vector3 get_transformOrigin();
            /*0x180e40*/ UnityEngine.Vector3 get_translate();
            UnityEngine.Color get_unityBackgroundImageTintColor();
            /*0x180980*/ int get_unitySliceLeft();
            /*0x180980*/ int get_unitySliceRight();
            /*0x17fc30*/ float get_unitySliceScale();
            UnityEngine.Color get_unityTextOutlineColor();
            /*0x17fc30*/ float get_unityTextOutlineWidth();
            /*0x180980*/ UnityEngine.UIElements.Visibility get_visibility();
            /*0x17fc30*/ float get_width();
        }

        interface IStyle
        {
            void set_backgroundColor(UnityEngine.UIElements.StyleColor value);
            UnityEngine.UIElements.StyleBackgroundSize get_backgroundSize();
            void set_borderBottomColor(UnityEngine.UIElements.StyleColor value);
            void set_borderBottomLeftRadius(UnityEngine.UIElements.StyleLength value);
            void set_borderBottomRightRadius(UnityEngine.UIElements.StyleLength value);
            void set_borderBottomWidth(UnityEngine.UIElements.StyleFloat value);
            void set_borderLeftColor(UnityEngine.UIElements.StyleColor value);
            void set_borderLeftWidth(UnityEngine.UIElements.StyleFloat value);
            void set_borderRightColor(UnityEngine.UIElements.StyleColor value);
            void set_borderRightWidth(UnityEngine.UIElements.StyleFloat value);
            void set_borderTopColor(UnityEngine.UIElements.StyleColor value);
            void set_borderTopLeftRadius(UnityEngine.UIElements.StyleLength value);
            void set_borderTopRightRadius(UnityEngine.UIElements.StyleLength value);
            void set_borderTopWidth(UnityEngine.UIElements.StyleFloat value);
            void set_bottom(UnityEngine.UIElements.StyleLength value);
            void set_color(UnityEngine.UIElements.StyleColor value);
            UnityEngine.UIElements.StyleCursor get_cursor();
            UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.DisplayStyle> get_display();
            void set_display(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.DisplayStyle> value);
            void set_flexBasis(UnityEngine.UIElements.StyleLength value);
            void set_flexDirection(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.FlexDirection> value);
            void set_flexGrow(UnityEngine.UIElements.StyleFloat value);
            void set_flexShrink(UnityEngine.UIElements.StyleFloat value);
            void set_fontSize(UnityEngine.UIElements.StyleLength value);
            void set_height(UnityEngine.UIElements.StyleLength value);
            void set_left(UnityEngine.UIElements.StyleLength value);
            void set_marginBottom(UnityEngine.UIElements.StyleLength value);
            void set_marginLeft(UnityEngine.UIElements.StyleLength value);
            void set_marginRight(UnityEngine.UIElements.StyleLength value);
            void set_marginTop(UnityEngine.UIElements.StyleLength value);
            void set_maxHeight(UnityEngine.UIElements.StyleLength value);
            void set_maxWidth(UnityEngine.UIElements.StyleLength value);
            void set_minWidth(UnityEngine.UIElements.StyleLength value);
            void set_opacity(UnityEngine.UIElements.StyleFloat value);
            void set_overflow(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.Overflow> value);
            void set_paddingBottom(UnityEngine.UIElements.StyleLength value);
            void set_paddingLeft(UnityEngine.UIElements.StyleLength value);
            void set_paddingRight(UnityEngine.UIElements.StyleLength value);
            UnityEngine.UIElements.StyleLength get_paddingTop();
            void set_paddingTop(UnityEngine.UIElements.StyleLength value);
            void set_position(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.Position> value);
            void set_right(UnityEngine.UIElements.StyleLength value);
            UnityEngine.UIElements.StyleRotate get_rotate();
            UnityEngine.UIElements.StyleScale get_scale();
            UnityEngine.UIElements.StyleTextShadow get_textShadow();
            void set_top(UnityEngine.UIElements.StyleLength value);
            UnityEngine.UIElements.StyleTransformOrigin get_transformOrigin();
            UnityEngine.UIElements.StyleTranslate get_translate();
            void set_translate(UnityEngine.UIElements.StyleTranslate value);
            void set_unityBackgroundImageTintColor(UnityEngine.UIElements.StyleColor value);
            void set_unityFont(UnityEngine.UIElements.StyleFont value);
            void set_unityFontDefinition(UnityEngine.UIElements.StyleFontDefinition value);
            void set_visibility(UnityEngine.UIElements.StyleEnum<UnityEngine.UIElements.Visibility> value);
            UnityEngine.UIElements.StyleLength get_width();
            void set_width(UnityEngine.UIElements.StyleLength value);
        }

        class VisualElement : UnityEngine.UIElements.Focusable, UnityEngine.UIElements.IResolvedStyle, UnityEngine.UIElements.IStylePropertyAnimations, UnityEngine.UIElements.ITransform, UnityEngine.UIElements.Experimental.ITransitionAnimations, UnityEngine.UIElements.IExperimentalFeatures, UnityEngine.UIElements.IVisualElementScheduler
        {
            static UnityEngine.UIElements.VisualElementFlags worldBoundingBoxDirtyDependencies = 25;
            static UnityEngine.UIElements.VisualElementFlags worldTransformInverseDirtyDependencies = 3;
            static string k_RootVisualContainerName = "rootVisualContainer";
            static /*0x0*/ uint s_NextId;
            static /*0x8*/ System.Collections.Generic.List<string> s_EmptyClassList;
            static /*0x10*/ UnityEngine.PropertyName userDataPropertyKey;
            static /*0x18*/ string disabledUssClassName;
            static /*0x20*/ UnityEngine.Rect s_InfiniteRect;
            static /*0x30*/ Unity.Profiling.ProfilerMarker k_GenerateVisualContentMarker;
            static /*0x38*/ UnityEngine.Material s_runtimeMaterial;
            static /*0x40*/ uint s_NextParentVersion;
            static /*0x48*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> s_EmptyList;
            static /*0x50*/ UnityEngine.UIElements.VisualElement.CustomStyleAccess s_CustomStyleAccess;
            static /*0x58*/ System.Text.RegularExpressions.Regex s_InternalStyleSheetPath;
            static /*0x60*/ UnityEngine.PropertyName tooltipPropertyKey;
            static /*0x68*/ System.Collections.Generic.Dictionary<System.Type, UnityEngine.UIElements.VisualElement.TypeData> s_TypeData;
            /*0x30*/ int <UnityEngine.UIElements.IStylePropertyAnimations.runningAnimationCount>k__BackingField;
            /*0x34*/ int <UnityEngine.UIElements.IStylePropertyAnimations.completedAnimationCount>k__BackingField;
            /*0x38*/ string m_Name;
            /*0x40*/ System.Collections.Generic.List<string> m_ClassList;
            /*0x48*/ System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<UnityEngine.PropertyName, object>> m_PropertyBag;
            /*0x50*/ UnityEngine.UIElements.VisualElementFlags m_Flags;
            /*0x58*/ string m_ViewDataKey;
            /*0x60*/ UnityEngine.UIElements.RenderHints m_RenderHints;
            /*0x64*/ UnityEngine.Rect lastLayout;
            /*0x74*/ UnityEngine.Rect lastPseudoPadding;
            /*0x88*/ UnityEngine.UIElements.UIR.RenderChainVEData renderChainData;
            /*0x1d0*/ UnityEngine.Rect m_Layout;
            /*0x1e0*/ UnityEngine.Rect m_BoundingBox;
            /*0x1f0*/ UnityEngine.Rect m_WorldBoundingBox;
            /*0x200*/ UnityEngine.Matrix4x4 m_WorldTransformCache;
            /*0x240*/ UnityEngine.Matrix4x4 m_WorldTransformInverseCache;
            /*0x280*/ UnityEngine.Rect m_WorldClip;
            /*0x290*/ UnityEngine.Rect m_WorldClipMinusGroup;
            /*0x2a0*/ bool m_WorldClipIsInfinite;
            /*0x2a4*/ UnityEngine.UIElements.PseudoStates triggerPseudoMask;
            /*0x2a8*/ UnityEngine.UIElements.PseudoStates dependencyPseudoMask;
            /*0x2ac*/ UnityEngine.UIElements.PseudoStates m_PseudoStates;
            /*0x2b0*/ int <containedPointerIds>k__BackingField;
            /*0x2b4*/ UnityEngine.UIElements.PickingMode m_PickingMode;
            /*0x2b8*/ UnityEngine.Yoga.YogaNode <yogaNode>k__BackingField;
            /*0x2c0*/ UnityEngine.UIElements.ComputedStyle m_Style;
            /*0x318*/ UnityEngine.UIElements.StyleVariableContext variableContext;
            /*0x320*/ int inheritedStylesHash;
            /*0x324*/ uint controlid;
            /*0x328*/ int imguiContainerDescendantCount;
            /*0x32c*/ bool <enabledSelf>k__BackingField;
            /*0x330*/ UnityEngine.UIElements.LanguageDirection m_LanguageDirection;
            /*0x334*/ UnityEngine.UIElements.LanguageDirection m_LocalLanguageDirection;
            /*0x338*/ System.Action<UnityEngine.UIElements.MeshGenerationContext> <generateVisualContent>k__BackingField;
            /*0x340*/ UnityEngine.UIElements.VisualElement.RenderTargetMode m_SubRenderTargetMode;
            /*0x348*/ UnityEngine.Material m_defaultMaterial;
            /*0x350*/ System.Collections.Generic.List<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> m_RunningAnimations;
            /*0x358*/ uint m_NextParentCachedVersion;
            /*0x35c*/ uint m_NextParentRequiredVersion;
            /*0x360*/ UnityEngine.UIElements.VisualElement m_CachedNextParentWithEventCallback;
            /*0x368*/ int m_EventCallbackCategories;
            /*0x36c*/ int m_CachedEventCallbackParentCategories;
            /*0x370*/ int m_DefaultActionEventCategories;
            /*0x374*/ int m_DefaultActionAtTargetEventCategories;
            /*0x378*/ UnityEngine.UIElements.VisualElement.Hierarchy <hierarchy>k__BackingField;
            /*0x380*/ bool <isRootVisualContainer>k__BackingField;
            /*0x381*/ bool <cacheAsBitmap>k__BackingField;
            /*0x388*/ UnityEngine.UIElements.VisualElement m_PhysicalParent;
            /*0x390*/ UnityEngine.UIElements.VisualElement m_LogicalParent;
            /*0x398*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> m_Children;
            /*0x3a0*/ UnityEngine.UIElements.BaseVisualElementPanel <elementPanel>k__BackingField;
            /*0x3a8*/ UnityEngine.UIElements.VisualTreeAsset m_VisualTreeAssetSource;
            /*0x3b0*/ UnityEngine.UIElements.InlineStyleAccess inlineStyleAccess;
            /*0x3b8*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheet> styleSheetList;
            /*0x3c0*/ UnityEngine.UIElements.VisualElement.TypeData m_TypeData;

            static /*0x18093f0*/ VisualElement();
            static /*0x17fec10*/ UnityEngine.Rect ComputeAAAlignedBound(UnityEngine.Rect position, UnityEngine.Matrix4x4 mat);
            static /*0x18013c0*/ bool IsPartOfCapturedChain(UnityEngine.UIElements.VisualElement self, ref UnityEngine.UIElements.IEventHandler capturingElement);
            static /*0x17fe060*/ void CheckUserKeyArgument(UnityEngine.PropertyName key);
            static /*0x2a5510*/ UnityEngine.UIElements.Experimental.ValueAnimation<T> StartAnimation<T>(UnityEngine.UIElements.Experimental.ValueAnimation<T> anim, System.Func<UnityEngine.UIElements.VisualElement, T> fromValueGetter, T to, int durationMs, System.Action<UnityEngine.UIElements.VisualElement, T> onValueChanged);
            static /*0x17fcf90*/ void AssignStyleValues(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Experimental.StyleValues src);
            static /*0x1801710*/ float Min(float a, float b, float c, float d);
            static /*0x1801580*/ float Max(float a, float b, float c, float d);
            static /*0x17fdca0*/ UnityEngine.Rect CalculateConservativeRect(ref UnityEngine.Matrix4x4 matrix, UnityEngine.Rect rect);
            static /*0x1805080*/ void TransformAlignedRect(ref UnityEngine.Matrix4x4 matrix, ref UnityEngine.Rect rect);
            static /*0x1801a30*/ void OrderMinMaxRect(ref UnityEngine.Rect rect);
            static /*0x1801950*/ UnityEngine.Vector2 MultiplyMatrix44Point2(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector2 point);
            static /*0x18019a0*/ UnityEngine.Vector2 MultiplyVector2(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector2 vector);
            static /*0x1801720*/ void MultiplyMatrix34(ref UnityEngine.Matrix4x4 lhs, ref UnityEngine.Matrix4x4 rhs, ref UnityEngine.Matrix4x4 res);
            static /*0x1805100*/ void TranslateMatrix34(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector3 rhs, ref UnityEngine.Matrix4x4 res);
            static /*0x130ecd0*/ void TranslateMatrix34InPlace(ref UnityEngine.Matrix4x4 lhs, UnityEngine.Vector3 rhs);
            static /*0x1800200*/ UnityEngine.UIElements.VisualElement.TypeData GetOrCreateTypeData(System.Type t);
            /*0x1809720*/ VisualElement();
            /*0x621ca0*/ UnityEngine.UIElements.IResolvedStyle get_resolvedStyle();
            /*0x18059d0*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_backgroundColor();
            /*0x1805a00*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderBottomColor();
            /*0x1805a30*/ float UnityEngine.UIElements.IResolvedStyle.get_borderBottomLeftRadius();
            /*0x1805a60*/ float UnityEngine.UIElements.IResolvedStyle.get_borderBottomRightRadius();
            /*0x1805a90*/ float UnityEngine.UIElements.IResolvedStyle.get_borderBottomWidth();
            /*0x1805ac0*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderLeftColor();
            /*0x1805af0*/ float UnityEngine.UIElements.IResolvedStyle.get_borderLeftWidth();
            /*0x1805b20*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderRightColor();
            /*0x1805b50*/ float UnityEngine.UIElements.IResolvedStyle.get_borderRightWidth();
            /*0x1805b80*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_borderTopColor();
            /*0x1805bb0*/ float UnityEngine.UIElements.IResolvedStyle.get_borderTopLeftRadius();
            /*0x1805be0*/ float UnityEngine.UIElements.IResolvedStyle.get_borderTopRightRadius();
            /*0x1805c10*/ float UnityEngine.UIElements.IResolvedStyle.get_borderTopWidth();
            /*0x1805c40*/ float UnityEngine.UIElements.IResolvedStyle.get_bottom();
            /*0x1805c70*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_color();
            /*0x1805ca0*/ UnityEngine.UIElements.DisplayStyle UnityEngine.UIElements.IResolvedStyle.get_display();
            /*0x1805cb0*/ UnityEngine.UIElements.FlexDirection UnityEngine.UIElements.IResolvedStyle.get_flexDirection();
            /*0x1805cc0*/ float UnityEngine.UIElements.IResolvedStyle.get_flexGrow();
            /*0x1805cd0*/ float UnityEngine.UIElements.IResolvedStyle.get_flexShrink();
            /*0x1805ce0*/ float UnityEngine.UIElements.IResolvedStyle.get_height();
            /*0x1805d10*/ float UnityEngine.UIElements.IResolvedStyle.get_left();
            /*0x1805d40*/ float UnityEngine.UIElements.IResolvedStyle.get_marginBottom();
            /*0x1805d70*/ float UnityEngine.UIElements.IResolvedStyle.get_marginLeft();
            /*0x1805da0*/ float UnityEngine.UIElements.IResolvedStyle.get_marginRight();
            /*0x1805dd0*/ float UnityEngine.UIElements.IResolvedStyle.get_marginTop();
            /*0x1805e00*/ UnityEngine.UIElements.StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minHeight();
            /*0x1805e30*/ UnityEngine.UIElements.StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minWidth();
            /*0x1805e60*/ float UnityEngine.UIElements.IResolvedStyle.get_opacity();
            /*0x1805e70*/ float UnityEngine.UIElements.IResolvedStyle.get_paddingBottom();
            /*0x1805ea0*/ float UnityEngine.UIElements.IResolvedStyle.get_paddingLeft();
            /*0x1805ed0*/ float UnityEngine.UIElements.IResolvedStyle.get_paddingRight();
            /*0x1805f00*/ float UnityEngine.UIElements.IResolvedStyle.get_paddingTop();
            /*0x1805f30*/ float UnityEngine.UIElements.IResolvedStyle.get_right();
            /*0x1805f60*/ UnityEngine.UIElements.Scale UnityEngine.UIElements.IResolvedStyle.get_scale();
            /*0x1805f90*/ float UnityEngine.UIElements.IResolvedStyle.get_top();
            /*0x1805fc0*/ UnityEngine.Vector3 UnityEngine.UIElements.IResolvedStyle.get_transformOrigin();
            /*0x1805ff0*/ UnityEngine.Vector3 UnityEngine.UIElements.IResolvedStyle.get_translate();
            /*0x1806020*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_unityBackgroundImageTintColor();
            /*0x1806050*/ int UnityEngine.UIElements.IResolvedStyle.get_unitySliceLeft();
            /*0x1806060*/ int UnityEngine.UIElements.IResolvedStyle.get_unitySliceRight();
            /*0x1806070*/ float UnityEngine.UIElements.IResolvedStyle.get_unitySliceScale();
            /*0x1806080*/ UnityEngine.Color UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineColor();
            /*0x18060b0*/ float UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineWidth();
            /*0x18060c0*/ UnityEngine.UIElements.Visibility UnityEngine.UIElements.IResolvedStyle.get_visibility();
            /*0x18060d0*/ float UnityEngine.UIElements.IResolvedStyle.get_width();
            /*0x180a580*/ bool get_hasRunningAnimations();
            /*0x180a420*/ bool get_hasCompletedAnimations();
            /*0xa79cc0*/ int UnityEngine.UIElements.IStylePropertyAnimations.get_runningAnimationCount();
            /*0xa79cd0*/ void UnityEngine.UIElements.IStylePropertyAnimations.set_runningAnimationCount(int value);
            /*0x995160*/ int UnityEngine.UIElements.IStylePropertyAnimations.get_completedAnimationCount();
            /*0x9952f0*/ void UnityEngine.UIElements.IStylePropertyAnimations.set_completedAnimationCount(int value);
            /*0x1800b70*/ UnityEngine.UIElements.IStylePropertyAnimationSystem GetStylePropertyAnimationSystem();
            /*0x621ca0*/ UnityEngine.UIElements.IStylePropertyAnimations get_styleAnimation();
            /*0x1806c20*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, float from, float to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1807060*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, int from, int to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806650*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Length from, UnityEngine.UIElements.Length to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1807260*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Color from, UnityEngine.Color to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806450*/ bool UnityEngine.UIElements.IStylePropertyAnimations.StartEnum(UnityEngine.UIElements.StyleSheets.StylePropertyId id, int from, int to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1807870*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Background from, UnityEngine.UIElements.Background to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1807560*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.FontDefinition from, UnityEngine.UIElements.FontDefinition to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806510*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Font from, UnityEngine.Font to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x18076d0*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TextShadow from, UnityEngine.UIElements.TextShadow to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806d70*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Scale from, UnityEngine.UIElements.Scale to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x18073d0*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Translate from, UnityEngine.UIElements.Translate to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806a90*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Rotate from, UnityEngine.UIElements.Rotate to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806ee0*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TransformOrigin from, UnityEngine.UIElements.TransformOrigin to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806910*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundPosition from, UnityEngine.UIElements.BackgroundPosition to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1807120*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundRepeat from, UnityEngine.UIElements.BackgroundRepeat to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806790*/ bool UnityEngine.UIElements.IStylePropertyAnimations.Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundSize from, UnityEngine.UIElements.BackgroundSize to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1806260*/ void UnityEngine.UIElements.IStylePropertyAnimations.CancelAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x1806100*/ void UnityEngine.UIElements.IStylePropertyAnimations.CancelAllAnimations();
            /*0x1807a00*/ void UnityEngine.UIElements.IStylePropertyAnimations.UpdateAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x18062e0*/ void UnityEngine.UIElements.IStylePropertyAnimations.GetAllAnimations(System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds);
            /*0x1805300*/ bool TryConvertLengthUnits(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.Length from, ref UnityEngine.UIElements.Length to, int subPropertyIndex);
            /*0x1805550*/ bool TryConvertTransformOriginUnits(ref UnityEngine.UIElements.TransformOrigin from, ref UnityEngine.UIElements.TransformOrigin to);
            /*0x1805600*/ bool TryConvertTranslateUnits(ref UnityEngine.UIElements.Translate from, ref UnityEngine.UIElements.Translate to);
            /*0x1805210*/ bool TryConvertBackgroundSizeUnits(ref UnityEngine.UIElements.BackgroundSize from, ref UnityEngine.UIElements.BackgroundSize to);
            /*0x1800320*/ System.Nullable<float> GetParentSizeForLengthConversion(UnityEngine.UIElements.StyleSheets.StylePropertyId id, int subPropertyIndex);
            /*0x180a5f0*/ bool get_isCompositeRoot();
            /*0x180b770*/ void set_isCompositeRoot(bool value);
            /*0x180a610*/ bool get_isHierarchyDisplayed();
            /*0x180b7e0*/ void set_isHierarchyDisplayed(bool value);
            /*0xb61940*/ string get_viewDataKey();
            /*0x180c920*/ void set_viewDataKey(string value);
            /*0x180a250*/ bool get_enableViewDataPersistence();
            /*0x180b640*/ void set_enableViewDataPersistence(bool value);
            /*0x180b140*/ object get_userData();
            /*0x180c8b0*/ void set_userData(object value);
            /*0x1809cc0*/ bool get_canGrabFocus();
            /*0x180a2d0*/ UnityEngine.UIElements.FocusController get_focusController();
            /*0x180b110*/ UnityEngine.UIElements.UsageHints get_usageHints();
            /*0x180c6e0*/ void set_usageHints(UnityEngine.UIElements.UsageHints value);
            /*0x1709bd0*/ UnityEngine.UIElements.RenderHints get_renderHints();
            /*0x180c410*/ void set_renderHints(UnityEngine.UIElements.RenderHints value);
            /*0x1801570*/ void MarkRenderHintsClean();
            /*0xfa9340*/ UnityEngine.UIElements.ITransform get_transform();
            /*0x1807a80*/ UnityEngine.Vector3 UnityEngine.UIElements.ITransform.get_position();
            /*0x1807c40*/ void UnityEngine.UIElements.ITransform.set_position(UnityEngine.Vector3 value);
            /*0x1807b60*/ UnityEngine.Vector3 UnityEngine.UIElements.ITransform.get_scale();
            /*0x180a620*/ bool get_isLayoutManual();
            /*0x180b810*/ void set_isLayoutManual(bool value);
            /*0x180aca0*/ float get_scaledPixelsPerPoint();
            /*0x180a6c0*/ UnityEngine.Rect get_layout();
            /*0x180b910*/ void set_layout(UnityEngine.Rect value);
            /*0x17fe360*/ void ClearManualLayout();
            /*0x1809f20*/ UnityEngine.Rect get_contentRect();
            /*0x180a9e0*/ UnityEngine.Rect get_paddingRect();
            /*0x180a5e0*/ bool get_isBoundingBoxDirty();
            /*0x180b740*/ void set_isBoundingBoxDirty(bool value);
            /*0x180b850*/ void set_isWorldBoundingBoxDirty(bool value);
            /*0x180a690*/ bool get_isWorldBoundingBoxOrDependenciesDirty();
            /*0x1809c70*/ UnityEngine.Rect get_boundingBox();
            /*0x180b310*/ UnityEngine.Rect get_worldBoundingBox();
            /*0x1809c10*/ UnityEngine.Rect get_boundingBoxInParentSpace();
            /*0x18080c0*/ void UpdateBoundingBox();
            /*0x1808a50*/ void UpdateWorldBoundingBox();
            /*0x180b210*/ UnityEngine.Rect get_worldBound();
            /*0x180a780*/ UnityEngine.Rect get_localBound();
            /*0x180ac30*/ UnityEngine.Rect get_rect();
            /*0xe7e570*/ bool get_isWorldTransformDirty();
            /*0x180b8b0*/ void set_isWorldTransformDirty(bool value);
            /*0x180b8e0*/ void set_isWorldTransformInverseDirty(bool value);
            /*0x180a6b0*/ bool get_isWorldTransformInverseOrDependenciesDirty();
            /*0x180b560*/ UnityEngine.Matrix4x4 get_worldTransform();
            /*0x180b530*/ ref UnityEngine.Matrix4x4 get_worldTransformRef();
            /*0x180b4b0*/ ref UnityEngine.Matrix4x4 get_worldTransformInverse();
            /*0x1808f70*/ void UpdateWorldTransform();
            /*0x1808f00*/ void UpdateWorldTransformInverse();
            /*0x180a6a0*/ bool get_isWorldClipDirty();
            /*0x180b880*/ void set_isWorldClipDirty(bool value);
            /*0x180b460*/ UnityEngine.Rect get_worldClip();
            /*0x180b410*/ UnityEngine.Rect get_worldClipMinusGroup();
            /*0x180b3d0*/ bool get_worldClipIsInfinite();
            /*0x17ff1e0*/ void EnsureWorldTransformAndClipUpToDate();
            /*0x1808ae0*/ void UpdateWorldClip();
            /*0x17feb80*/ UnityEngine.Rect CombineClipRects(UnityEngine.Rect rect, UnityEngine.Rect parentRect);
            /*0x1804af0*/ UnityEngine.Rect SubstractBorderPadding(UnityEngine.Rect worldRect);
            /*0x180ac20*/ UnityEngine.UIElements.PseudoStates get_pseudoStates();
            /*0x180c380*/ void set_pseudoStates(UnityEngine.UIElements.PseudoStates value);
            /*0x1809f10*/ int get_containedPointerIds();
            /*0x180b5e0*/ void set_containedPointerIds(int value);
            /*0x1808940*/ void UpdateHoverPseudoState();
            /*0x180ab80*/ UnityEngine.UIElements.PickingMode get_pickingMode();
            /*0x180c330*/ void set_pickingMode(UnityEngine.UIElements.PickingMode value);
            /*0x16345e0*/ string get_name();
            /*0x180c2c0*/ void set_name(string value);
            /*0x1809e40*/ System.Collections.Generic.List<string> get_classList();
            /*0x180a3b0*/ string get_fullTypeName();
            /*0x180b030*/ string get_typeName();
            /*0x180b5d0*/ UnityEngine.Yoga.YogaNode get_yogaNode();
            /*0x180cab0*/ void set_yogaNode(UnityEngine.Yoga.YogaNode value);
            /*0x1809f00*/ ref UnityEngine.UIElements.ComputedStyle get_computedStyle();
            /*0x180a570*/ bool get_hasInlineStyle();
            /*0x180ad00*/ bool get_styleInitialized();
            /*0x180c510*/ void set_styleInitialized(bool value);
            /*0x17fe020*/ void ChangeIMGUIContainerCount(int delta);
            /*0x17ff210*/ void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            /*0x1800ba0*/ UnityEngine.Rect GetTooltipRect();
            /*0x1804850*/ void SetTooltip(UnityEngine.UIElements.TooltipEvent e);
            /*0x17ffca0*/ void Focus();
            /*0x1803c80*/ void SetPanel(UnityEngine.UIElements.BaseVisualElementPanel p);
            /*0x1809270*/ void WillChangePanel(UnityEngine.UIElements.BaseVisualElementPanel destinationPanel);
            /*0x1800bd0*/ void HasChangedPanel(UnityEngine.UIElements.BaseVisualElementPanel prevPanel);
            /*0x18033b0*/ void SendEvent(UnityEngine.UIElements.EventBase e);
            /*0x18033d0*/ void SendEvent(UnityEngine.UIElements.EventBase e, UnityEngine.UIElements.DispatchMode dispatchMode);
            /*0x18010a0*/ void IncrementVersion(UnityEngine.UIElements.VersionChangeType changeType);
            /*0x18013a0*/ void InvokeHierarchyChanged(UnityEngine.UIElements.HierarchyChangeType changeType);
            /*0x1803810*/ bool SetEnabledFromHierarchyPrivate(bool state);
            /*0x180a630*/ bool get_isParentEnabledInHierarchy();
            /*0x180a260*/ bool get_enabledInHierarchy();
            /*0x180a270*/ bool get_enabledSelf();
            /*0x180b670*/ void set_enabledSelf(bool value);
            /*0x1803bb0*/ void SetEnabled(bool value);
            /*0x1801f80*/ void PropagateEnabledToChildren(bool value);
            /*0x1492f60*/ UnityEngine.UIElements.LanguageDirection get_languageDirection();
            /*0x1492f80*/ UnityEngine.UIElements.LanguageDirection get_localLanguageDirection();
            /*0x180c1b0*/ void set_localLanguageDirection(UnityEngine.UIElements.LanguageDirection value);
            /*0x180b1c0*/ bool get_visible();
            /*0x180c9a0*/ void set_visible(bool value);
            /*0x1801540*/ void MarkDirtyRepaint();
            /*0x180a410*/ System.Action<UnityEngine.UIElements.MeshGenerationContext> get_generateVisualContent();
            /*0x180b700*/ void set_generateVisualContent(System.Action<UnityEngine.UIElements.MeshGenerationContext> value);
            /*0x1801240*/ void InvokeGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc);
            /*0x1800050*/ void GetFullHierarchicalViewDataKey(System.Text.StringBuilder key);
            /*0x17fff70*/ string GetFullHierarchicalViewDataKey();
            /*0x2a5510*/ T GetOrCreateViewData<T>(object existing, string key);
            /*0x1801a80*/ void OverwriteFromViewData(object obj, string key);
            /*0x1803320*/ void SaveViewData();
            /*0x1801490*/ bool IsViewDataPersitenceSupportedOnChildren(bool existingState);
            /*0x18019e0*/ void OnViewDataReady(bool enablePersistence);
            /*0x32d010*/ void OnViewDataReady();
            /*0x17fee20*/ bool ContainsPoint(UnityEngine.Vector2 localPoint);
            /*0x180ac90*/ bool get_requireMeasureFunction();
            /*0x180c480*/ void set_requireMeasureFunction(bool value);
            /*0x17fcf00*/ void AssignMeasureFunction();
            /*0x1802bc0*/ void RemoveMeasureFunction();
            /*0x17fef60*/ UnityEngine.Vector2 DoMeasure(float desiredWidth, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float desiredHeight, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);
            /*0x1801590*/ UnityEngine.Yoga.YogaSize Measure(UnityEngine.Yoga.YogaNode node, float width, UnityEngine.Yoga.YogaMeasureMode widthMode, float height, UnityEngine.Yoga.YogaMeasureMode heightMode);
            /*0x17ff930*/ void FinalizeLayout();
            /*0x1803bd0*/ void SetInlineRule(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleRule rule);
            /*0x1803590*/ void SetComputedStyle(ref UnityEngine.UIElements.ComputedStyle newStyle);
            /*0x1804d80*/ string ToString();
            /*0x162e040*/ System.Collections.Generic.List<string> GetClassesForIteration();
            /*0x17fcbc0*/ void AddToClassList(string className);
            /*0x1802990*/ void RemoveFromClassList(string className);
            /*0x17ff1b0*/ void EnableInClassList(string className, bool enable);
            /*0x17fe290*/ bool ClassListContains(string cls);
            /*0x1800a20*/ object GetProperty(UnityEngine.PropertyName key);
            /*0x18047e0*/ void SetProperty(UnityEngine.PropertyName key, object value);
            /*0x1801030*/ bool HasProperty(UnityEngine.PropertyName key);
            /*0x18056b0*/ bool TryGetPropertyInternal(UnityEngine.PropertyName key, ref object value);
            /*0x1804520*/ void SetPropertyInternal(UnityEngine.PropertyName key, object value);
            /*0x1808610*/ void UpdateCursorStyle(long eventType);
            /*0x180adc0*/ UnityEngine.UIElements.VisualElement.RenderTargetMode get_subRenderTargetMode();
            /*0x180a220*/ UnityEngine.Material get_defaultMaterial();
            /*0x17ffde0*/ UnityEngine.UIElements.VisualElementAnimationSystem GetAnimationSystem();
            /*0x18027f0*/ void RegisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim);
            /*0x1807fb0*/ void UnregisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim);
            /*0x1808030*/ void UnregisterRunningAnimations();
            /*0x1802920*/ void RegisterRunningAnimations();
            /*0x1802040*/ UnityEngine.UIElements.Experimental.StyleValues ReadCurrentValues(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.Experimental.StyleValues targetValuesToRead);
            /*0x18057c0*/ UnityEngine.UIElements.Experimental.ValueAnimation<UnityEngine.UIElements.Experimental.StyleValues> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(UnityEngine.UIElements.Experimental.StyleValues to, int durationMs);
            /*0x1804990*/ UnityEngine.UIElements.Experimental.ValueAnimation<UnityEngine.UIElements.Experimental.StyleValues> Start(System.Func<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.Experimental.StyleValues> fromValueGetter, UnityEngine.UIElements.Experimental.StyleValues to, int durationMs);
            /*0x17feed0*/ void DirtyNextParentWithEventCallback();
            /*0x18034c0*/ void SetAsNextParentWithEventCallback();
            /*0x17ffe90*/ bool GetCachedNextParentWithEventCallback(ref UnityEngine.UIElements.VisualElement nextParent);
            /*0x180a810*/ UnityEngine.UIElements.VisualElement get_nextParentWithEventCallback();
            /*0x1801f00*/ void PropagateCachedNextParentWithEventCallback(UnityEngine.UIElements.VisualElement nextParent, UnityEngine.UIElements.VisualElement stopParent);
            /*0x180a280*/ int get_eventCallbackCategories();
            /*0x180b680*/ void set_eventCallbackCategories(int value);
            /*0x180a290*/ int get_eventCallbackParentCategories();
            /*0x180a600*/ bool get_isEventCallbackParentCategoriesDirty();
            /*0x180b7b0*/ void set_isEventCallbackParentCategoriesDirty(bool value);
            /*0x18083d0*/ void UpdateCallbackParentCategories();
            /*0x1800f20*/ bool HasEventCallbacks(UnityEngine.UIElements.EventCategory eventCategory);
            /*0x1800fb0*/ bool HasParentEventCallbacksOrDefaultActions(UnityEngine.UIElements.EventCategory eventCategory);
            /*0x1800ef0*/ bool HasEventCallbacksOrDefaultActions(UnityEngine.UIElements.EventCategory eventCategory);
            /*0x1800f40*/ bool HasParentEventCallbacksOrDefaultActionAtTarget(UnityEngine.UIElements.EventCategory eventCategory);
            /*0x1800ec0*/ bool HasEventCallbacksOrDefaultActionAtTarget(UnityEngine.UIElements.EventCategory eventCategory);
            /*0x1800ea0*/ bool HasDefaultAction(UnityEngine.UIElements.EventCategory eventCategory);
            /*0xfa9340*/ UnityEngine.UIElements.IExperimentalFeatures get_experimental();
            /*0xfa9340*/ UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures.get_animation();
            /*0x180a5d0*/ UnityEngine.UIElements.VisualElement.Hierarchy get_hierarchy();
            /*0x180b720*/ void set_hierarchy(UnityEngine.UIElements.VisualElement.Hierarchy value);
            /*0x180a680*/ bool get_isRootVisualContainer();
            /*0x180b840*/ void set_isRootVisualContainer(bool value);
            /*0x180a230*/ bool get_disableClipping();
            /*0x180b5f0*/ void set_disableClipping(bool value);
            /*0x1804950*/ bool ShouldClip();
            /*0x180ab70*/ UnityEngine.UIElements.VisualElement get_parent();
            /*0x180a240*/ UnityEngine.UIElements.BaseVisualElementPanel get_elementPanel();
            /*0x180b620*/ void set_elementPanel(UnityEngine.UIElements.BaseVisualElementPanel value);
            /*0x180ab60*/ UnityEngine.UIElements.IPanel get_panel();
            /*0xfa9340*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x180ca90*/ void set_visualTreeAssetSource(UnityEngine.UIElements.VisualTreeAsset value);
            /*0x17fcde0*/ void Add(UnityEngine.UIElements.VisualElement child);
            /*0x1801190*/ void Insert(int index, UnityEngine.UIElements.VisualElement element);
            /*0x17feb00*/ void Clear();
            /*0x17ff1a0*/ UnityEngine.UIElements.VisualElement ElementAt(int index);
            /*0x1809b50*/ UnityEngine.UIElements.VisualElement get_Item(int key);
            /*0x1809da0*/ int get_childCount();
            /*0x18010d0*/ int IndexOf(UnityEngine.UIElements.VisualElement element);
            /*0x17fef80*/ UnityEngine.UIElements.VisualElement ElementAtTreePath(System.Collections.Generic.List<int> childIndexes);
            /*0x17ffb50*/ bool FindElementInTree(UnityEngine.UIElements.VisualElement element, System.Collections.Generic.List<int> outChildIndexes);
            /*0x17fe1d0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.VisualElement> Children();
            /*0x17fdc50*/ void BringToFront();
            /*0x18033f0*/ void SendToBack();
            /*0x1801df0*/ void PlaceBehind(UnityEngine.UIElements.VisualElement sibling);
            /*0x1802ac0*/ void RemoveFromHierarchy();
            /*0x2a5510*/ T GetFirstOfType<T>();
            /*0x2a5510*/ T GetFirstAncestorOfType<T>();
            /*0x17ffef0*/ UnityEngine.UIElements.VisualElement GetFirstAncestorWhere(System.Predicate<UnityEngine.UIElements.VisualElement> predicate);
            /*0x17fee80*/ bool Contains(UnityEngine.UIElements.VisualElement child);
            /*0x17ffd20*/ void GatherAllChildren(System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> elements);
            /*0x17ff9c0*/ UnityEngine.UIElements.VisualElement FindCommonAncestor(UnityEngine.UIElements.VisualElement other);
            /*0x1800af0*/ UnityEngine.UIElements.VisualElement GetRoot();
            /*0x1800aa0*/ UnityEngine.UIElements.VisualElement GetRootVisualContainer();
            /*0x18000e0*/ UnityEngine.UIElements.VisualElement GetNextElementDepthFirst();
            /*0x18008f0*/ UnityEngine.UIElements.VisualElement GetPreviousElementDepthFirst();
            /*0x1803280*/ UnityEngine.UIElements.VisualElement RetargetElement(UnityEngine.UIElements.VisualElement retargetAgainst);
            /*0x180ab90*/ UnityEngine.Vector3 get_positionWithLayout();
            /*0x1800560*/ void GetPivotedMatrixWithLayout(ref UnityEngine.Matrix4x4 result);
            /*0x180a470*/ bool get_hasDefaultRotationAndScale();
            /*0x1804f40*/ void TransformAlignedRectToParentSpace(ref UnityEngine.Rect rect);
            /*0xfa9340*/ UnityEngine.UIElements.IVisualElementScheduler get_schedule();
            /*0x1807dd0*/ UnityEngine.UIElements.IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action<UnityEngine.UIElements.TimerState> timerUpdateEvent);
            /*0x1807ec0*/ UnityEngine.UIElements.IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(System.Action updateEvent);
            /*0x180ad40*/ UnityEngine.UIElements.IStyle get_style();
            /*0x180a170*/ UnityEngine.UIElements.ICustomStyle get_customStyle();
            /*0x180ad10*/ UnityEngine.UIElements.VisualElementStyleSheetSet get_styleSheets();
            /*0x17fc960*/ void AddStyleSheetPath(string sheetPath);
            /*0x1802bf0*/ UnityEngine.UIElements.StyleFloat ResolveLengthValue(UnityEngine.UIElements.Length length, bool isRow);
            /*0x18030e0*/ UnityEngine.Vector3 ResolveTranslate();
            /*0x1802ee0*/ UnityEngine.Vector3 ResolveTransformOrigin();
            /*0x1802d30*/ UnityEngine.Quaternion ResolveRotation();
            /*0x1802e10*/ UnityEngine.Vector3 ResolveScale();
            /*0x180add0*/ string get_tooltip();
            /*0x180c540*/ void set_tooltip(string value);
            /*0x180aed0*/ UnityEngine.UIElements.VisualElement.TypeData get_typeData();
            /*0x1801590*/ UnityEngine.Yoga.YogaSize <AssignMeasureFunction>b__432_0(UnityEngine.Yoga.YogaNode node, float f, UnityEngine.Yoga.YogaMeasureMode mode, float f1, UnityEngine.Yoga.YogaMeasureMode heightMode);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.VisualElement.UxmlTraits>
            {
                /*0x17fbeb0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.UxmlTraits
            {
                /*0x18*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Name;
                /*0x20*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_ViewDataKey;
                /*0x28*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.PickingMode> m_PickingMode;
                /*0x30*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Tooltip;
                /*0x38*/ UnityEngine.UIElements.UxmlEnumAttributeDescription<UnityEngine.UIElements.UsageHints> m_UsageHints;
                /*0x40*/ UnityEngine.UIElements.UxmlIntAttributeDescription <focusIndex>k__BackingField;
                /*0x48*/ UnityEngine.UIElements.UxmlIntAttributeDescription m_TabIndex;
                /*0x50*/ UnityEngine.UIElements.UxmlBoolAttributeDescription <focusable>k__BackingField;
                /*0x58*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Class;
                /*0x60*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_ContentContainer;
                /*0x68*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Style;

                /*0x17fc3e0*/ UxmlTraits();
                /*0xb61870*/ UnityEngine.UIElements.UxmlIntAttributeDescription get_focusIndex();
                /*0x4e40e0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription get_focusable();
                /*0x17fbef0*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }

            enum MeasureMode
            {
                Undefined = 0,
                Exactly = 1,
                AtMost = 2,
            }

            enum RenderTargetMode
            {
                None = 0,
                NoColorConversion = 1,
                LinearToGamma = 2,
                GammaToLinear = 3,
            }

            struct Hierarchy
            {
                static string k_InvalidHierarchyChangeMsg = "Cannot modify VisualElement hierarchy during layout calculation";
                /*0x10*/ UnityEngine.UIElements.VisualElement m_Owner;

                static /*0x1701140*/ bool op_Equality(UnityEngine.UIElements.VisualElement.Hierarchy x, UnityEngine.UIElements.VisualElement.Hierarchy y);
                /*0x792990*/ Hierarchy(UnityEngine.UIElements.VisualElement element);
                /*0x17fb140*/ UnityEngine.UIElements.VisualElement get_parent();
                /*0x17f9c40*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> get_children();
                /*0x17f9a60*/ void Add(UnityEngine.UIElements.VisualElement child);
                /*0x17fa160*/ void Insert(int index, UnityEngine.UIElements.VisualElement child);
                /*0x17fae10*/ void Remove(UnityEngine.UIElements.VisualElement child);
                /*0x17faac0*/ void RemoveAt(int index);
                /*0x17f9c60*/ void Clear();
                /*0x17f9b10*/ void BringToFront(UnityEngine.UIElements.VisualElement child);
                /*0x17faf40*/ void SendToBack(UnityEngine.UIElements.VisualElement child);
                /*0x17fa7a0*/ void PlaceBehind(UnityEngine.UIElements.VisualElement child, UnityEngine.UIElements.VisualElement over);
                /*0x17fa660*/ void MoveChildElement(UnityEngine.UIElements.VisualElement child, int currentIndex, int nextIndex);
                /*0x17fb0f0*/ int get_childCount();
                /*0x17f9ff0*/ UnityEngine.UIElements.VisualElement get_Item(int key);
                /*0x17fa100*/ int IndexOf(UnityEngine.UIElements.VisualElement element);
                /*0x17f9ff0*/ UnityEngine.UIElements.VisualElement ElementAt(int index);
                /*0x17f9c40*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.VisualElement> Children();
                /*0x17fafe0*/ void SetParent(UnityEngine.UIElements.VisualElement value);
                /*0x17fa8a0*/ void PutChildAtIndex(UnityEngine.UIElements.VisualElement child, int index);
                /*0x17fad90*/ void RemoveChildAtIndex(int index);
                /*0x17fa9c0*/ void ReleaseChildList();
                /*0x17fa0f0*/ bool Equals(UnityEngine.UIElements.VisualElement.Hierarchy other);
                /*0x17fa050*/ bool Equals(object obj);
                /*0x1720520*/ int GetHashCode();
            }

            class BaseVisualElementScheduledItem : UnityEngine.UIElements.ScheduledItem, UnityEngine.UIElements.IVisualElementScheduledItem, UnityEngine.UIElements.IVisualElementPanelActivatable
            {
                /*0x38*/ UnityEngine.UIElements.VisualElement <element>k__BackingField;
                /*0x40*/ bool isScheduled;
                /*0x48*/ UnityEngine.UIElements.VisualElementPanelActivator m_Activator;

                /*0x17f9020*/ BaseVisualElementScheduledItem(UnityEngine.UIElements.VisualElement handler);
                /*0x995140*/ UnityEngine.UIElements.VisualElement get_element();
                /*0xe5a080*/ void set_element(UnityEngine.UIElements.VisualElement value);
                /*0x17f90d0*/ bool get_isActive();
                /*0x17f9010*/ UnityEngine.UIElements.IVisualElementScheduledItem StartingIn(long delayMs);
                /*0x17f8d30*/ UnityEngine.UIElements.IVisualElementScheduledItem Every(long intervalMs);
                /*0x17f8e40*/ void OnItemUnscheduled();
                /*0x17f8fe0*/ void Resume();
                /*0x17f8fb0*/ void Pause();
                /*0x17f8df0*/ void ExecuteLater(long delayMs);
                /*0x17f8e90*/ void OnPanelActivate();
                /*0x17f8f20*/ void OnPanelDeactivate();
                /*0x17f8ce0*/ bool CanBeActivated();
            }

            class VisualElementScheduledItem<ActionType> : UnityEngine.UIElements.VisualElement.BaseVisualElementScheduledItem
            {
                /*0x0*/ ActionType updateEvent;

                /*0x2a5510*/ VisualElementScheduledItem(UnityEngine.UIElements.VisualElement handler, ActionType upEvent);
            }

            class TimerStateScheduledItem : UnityEngine.UIElements.VisualElement.VisualElementScheduledItem<System.Action<UnityEngine.UIElements.TimerState>>
            {
                /*0x17fbbe0*/ TimerStateScheduledItem(UnityEngine.UIElements.VisualElement handler, System.Action<UnityEngine.UIElements.TimerState> updateEvent);
                /*0x17fbba0*/ void PerformTimerUpdate(UnityEngine.UIElements.TimerState state);
            }

            class SimpleScheduledItem : UnityEngine.UIElements.VisualElement.VisualElementScheduledItem<System.Action>
            {
                /*0x17fbb40*/ SimpleScheduledItem(UnityEngine.UIElements.VisualElement handler, System.Action updateEvent);
                /*0x17fbb00*/ void PerformTimerUpdate(UnityEngine.UIElements.TimerState state);
            }

            class CustomStyleAccess : UnityEngine.UIElements.ICustomStyle
            {
                /*0x10*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleSheets.StylePropertyValue> m_CustomProperties;
                /*0x18*/ float m_DpiScaling;

                static /*0x17f90f0*/ void LogCustomPropertyWarning(string propertyName, UnityEngine.UIElements.StyleValueType valueType, UnityEngine.UIElements.StyleSheets.StylePropertyValue customProp);
                /*0x32f970*/ CustomStyleAccess();
                /*0x17f91d0*/ void SetContext(System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleSheets.StylePropertyValue> customProperties, float dpiScaling);
                /*0x17f9660*/ bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<float> property, ref float value);
                /*0x17f9370*/ bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<int> property, ref int value);
                /*0x17f9200*/ bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Color> property, ref UnityEngine.Color value);
                /*0x17f9490*/ bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Texture2D> property, ref UnityEngine.Texture2D value);
                /*0x17f9880*/ bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.Sprite> property, ref UnityEngine.Sprite value);
                /*0x17f9770*/ bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<UnityEngine.UIElements.VectorImage> property, ref UnityEngine.UIElements.VectorImage value);
                /*0x17f9990*/ bool TryGetValue(UnityEngine.UIElements.CustomStyleProperty<string> property, ref string value);
                /*0x17f95a0*/ bool TryGetValue(string propertyName, UnityEngine.UIElements.StyleValueType valueType, ref UnityEngine.UIElements.StyleSheets.StylePropertyValue customProp);
            }

            class TypeData
            {
                /*0x10*/ System.Type <type>k__BackingField;
                /*0x18*/ string m_FullTypeName;
                /*0x20*/ string m_TypeName;
                /*0x28*/ string m_TypeNamespace;

                /*0x17fbc40*/ TypeData(System.Type type);
                /*0x73d3e0*/ System.Type get_type();
                /*0x17fbcf0*/ string get_fullTypeName();
                /*0x17fbd50*/ string get_typeName();
                /*0x17fbe20*/ string get_typeNamespace();
            }

            class <>c__DisplayClass492_0
            {
                /*0x10*/ UnityEngine.UIElements.VisualElement <>4__this;
                /*0x18*/ UnityEngine.UIElements.Experimental.StyleValues to;

                /*0x32f970*/ <>c__DisplayClass492_0();
                /*0x17fbe80*/ UnityEngine.UIElements.Experimental.StyleValues <UnityEngine.UIElements.Experimental.ITransitionAnimations.Start>b__0(UnityEngine.UIElements.VisualElement e);
            }
        }

        interface IStyleDataGroup<T>
        {
            /*0x2a5510*/ T Copy();
            /*0x17aec0*/ void CopyFrom(ref T other);
        }

        struct InheritedData : UnityEngine.UIElements.IStyleDataGroup<UnityEngine.UIElements.InheritedData>, System.IEquatable<UnityEngine.UIElements.InheritedData>
        {
            /*0x10*/ UnityEngine.Color color;
            /*0x20*/ UnityEngine.UIElements.Length fontSize;
            /*0x28*/ UnityEngine.UIElements.Length letterSpacing;
            /*0x30*/ UnityEngine.UIElements.TextShadow textShadow;
            /*0x50*/ UnityEngine.Font unityFont;
            /*0x58*/ UnityEngine.UIElements.FontDefinition unityFontDefinition;
            /*0x68*/ UnityEngine.FontStyle unityFontStyleAndWeight;
            /*0x6c*/ UnityEngine.UIElements.Length unityParagraphSpacing;
            /*0x74*/ UnityEngine.TextAnchor unityTextAlign;
            /*0x78*/ UnityEngine.Color unityTextOutlineColor;
            /*0x88*/ float unityTextOutlineWidth;
            /*0x8c*/ UnityEngine.UIElements.Visibility visibility;
            /*0x90*/ UnityEngine.UIElements.WhiteSpace whiteSpace;
            /*0x94*/ UnityEngine.UIElements.Length wordSpacing;

            static /*0x17fb590*/ bool op_Equality(UnityEngine.UIElements.InheritedData lhs, UnityEngine.UIElements.InheritedData rhs);
            /*0x17fb1f0*/ UnityEngine.UIElements.InheritedData Copy();
            /*0x17fb160*/ void CopyFrom(ref UnityEngine.UIElements.InheritedData other);
            /*0x17fb240*/ bool Equals(UnityEngine.UIElements.InheritedData other);
            /*0x17fb310*/ bool Equals(object obj);
            /*0x17fb410*/ int GetHashCode();
        }

        struct LayoutData : UnityEngine.UIElements.IStyleDataGroup<UnityEngine.UIElements.LayoutData>, System.IEquatable<UnityEngine.UIElements.LayoutData>
        {
            /*0x10*/ UnityEngine.UIElements.Align alignContent;
            /*0x14*/ UnityEngine.UIElements.Align alignItems;
            /*0x18*/ UnityEngine.UIElements.Align alignSelf;
            /*0x1c*/ float borderBottomWidth;
            /*0x20*/ float borderLeftWidth;
            /*0x24*/ float borderRightWidth;
            /*0x28*/ float borderTopWidth;
            /*0x2c*/ UnityEngine.UIElements.Length bottom;
            /*0x34*/ UnityEngine.UIElements.DisplayStyle display;
            /*0x38*/ UnityEngine.UIElements.Length flexBasis;
            /*0x40*/ UnityEngine.UIElements.FlexDirection flexDirection;
            /*0x44*/ float flexGrow;
            /*0x48*/ float flexShrink;
            /*0x4c*/ UnityEngine.UIElements.Wrap flexWrap;
            /*0x50*/ UnityEngine.UIElements.Length height;
            /*0x58*/ UnityEngine.UIElements.Justify justifyContent;
            /*0x5c*/ UnityEngine.UIElements.Length left;
            /*0x64*/ UnityEngine.UIElements.Length marginBottom;
            /*0x6c*/ UnityEngine.UIElements.Length marginLeft;
            /*0x74*/ UnityEngine.UIElements.Length marginRight;
            /*0x7c*/ UnityEngine.UIElements.Length marginTop;
            /*0x84*/ UnityEngine.UIElements.Length maxHeight;
            /*0x8c*/ UnityEngine.UIElements.Length maxWidth;
            /*0x94*/ UnityEngine.UIElements.Length minHeight;
            /*0x9c*/ UnityEngine.UIElements.Length minWidth;
            /*0xa4*/ UnityEngine.UIElements.Length paddingBottom;
            /*0xac*/ UnityEngine.UIElements.Length paddingLeft;
            /*0xb4*/ UnityEngine.UIElements.Length paddingRight;
            /*0xbc*/ UnityEngine.UIElements.Length paddingTop;
            /*0xc4*/ UnityEngine.UIElements.Position position;
            /*0xc8*/ UnityEngine.UIElements.Length right;
            /*0xd0*/ UnityEngine.UIElements.Length top;
            /*0xd8*/ UnityEngine.UIElements.Length width;

            static /*0x180d2e0*/ bool op_Equality(UnityEngine.UIElements.LayoutData lhs, UnityEngine.UIElements.LayoutData rhs);
            /*0x180ccc0*/ UnityEngine.UIElements.LayoutData Copy();
            /*0x180cbb0*/ void CopyFrom(ref UnityEngine.UIElements.LayoutData other);
            /*0x180ce70*/ bool Equals(UnityEngine.UIElements.LayoutData other);
            /*0x180cd40*/ bool Equals(object obj);
            /*0x180cfa0*/ int GetHashCode();
        }

        struct RareData : UnityEngine.UIElements.IStyleDataGroup<UnityEngine.UIElements.RareData>, System.IEquatable<UnityEngine.UIElements.RareData>
        {
            /*0x10*/ UnityEngine.UIElements.Cursor cursor;
            /*0x28*/ UnityEngine.UIElements.TextOverflow textOverflow;
            /*0x2c*/ UnityEngine.Color unityBackgroundImageTintColor;
            /*0x3c*/ UnityEngine.UIElements.OverflowClipBox unityOverflowClipBox;
            /*0x40*/ int unitySliceBottom;
            /*0x44*/ int unitySliceLeft;
            /*0x48*/ int unitySliceRight;
            /*0x4c*/ float unitySliceScale;
            /*0x50*/ int unitySliceTop;
            /*0x54*/ UnityEngine.UIElements.TextOverflowPosition unityTextOverflowPosition;

            static /*0x1810c10*/ bool op_Equality(UnityEngine.UIElements.RareData lhs, UnityEngine.UIElements.RareData rhs);
            /*0x1810890*/ UnityEngine.UIElements.RareData Copy();
            /*0x1810860*/ void CopyFrom(ref UnityEngine.UIElements.RareData other);
            /*0x1810980*/ bool Equals(UnityEngine.UIElements.RareData other);
            /*0x18108c0*/ bool Equals(object obj);
            /*0x1810b80*/ int GetHashCode();
        }

        struct TransformData : UnityEngine.UIElements.IStyleDataGroup<UnityEngine.UIElements.TransformData>, System.IEquatable<UnityEngine.UIElements.TransformData>
        {
            /*0x10*/ UnityEngine.UIElements.Rotate rotate;
            /*0x28*/ UnityEngine.UIElements.Scale scale;
            /*0x38*/ UnityEngine.UIElements.TransformOrigin transformOrigin;
            /*0x4c*/ UnityEngine.UIElements.Translate translate;

            static /*0x181d260*/ bool op_Equality(UnityEngine.UIElements.TransformData lhs, UnityEngine.UIElements.TransformData rhs);
            /*0x181cf30*/ UnityEngine.UIElements.TransformData Copy();
            /*0x181cf00*/ void CopyFrom(ref UnityEngine.UIElements.TransformData other);
            /*0x181cf60*/ bool Equals(UnityEngine.UIElements.TransformData other);
            /*0x181cff0*/ bool Equals(object obj);
            /*0x181d120*/ int GetHashCode();
        }

        struct TransitionData : UnityEngine.UIElements.IStyleDataGroup<UnityEngine.UIElements.TransitionData>, System.IEquatable<UnityEngine.UIElements.TransitionData>
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> transitionDelay;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> transitionDuration;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> transitionProperty;
            /*0x28*/ System.Collections.Generic.List<UnityEngine.UIElements.EasingFunction> transitionTimingFunction;

            static /*0x181dfe0*/ bool op_Equality(UnityEngine.UIElements.TransitionData lhs, UnityEngine.UIElements.TransitionData rhs);
            /*0x181dc80*/ UnityEngine.UIElements.TransitionData Copy();
            /*0x181db10*/ void CopyFrom(ref UnityEngine.UIElements.TransitionData other);
            /*0x181de20*/ bool Equals(UnityEngine.UIElements.TransitionData other);
            /*0x181de60*/ bool Equals(object obj);
            /*0x181df20*/ int GetHashCode();
        }

        struct VisualData : UnityEngine.UIElements.IStyleDataGroup<UnityEngine.UIElements.VisualData>, System.IEquatable<UnityEngine.UIElements.VisualData>
        {
            /*0x10*/ UnityEngine.Color backgroundColor;
            /*0x20*/ UnityEngine.UIElements.Background backgroundImage;
            /*0x40*/ UnityEngine.UIElements.BackgroundPosition backgroundPositionX;
            /*0x4c*/ UnityEngine.UIElements.BackgroundPosition backgroundPositionY;
            /*0x58*/ UnityEngine.UIElements.BackgroundRepeat backgroundRepeat;
            /*0x60*/ UnityEngine.UIElements.BackgroundSize backgroundSize;
            /*0x74*/ UnityEngine.Color borderBottomColor;
            /*0x84*/ UnityEngine.UIElements.Length borderBottomLeftRadius;
            /*0x8c*/ UnityEngine.UIElements.Length borderBottomRightRadius;
            /*0x94*/ UnityEngine.Color borderLeftColor;
            /*0xa4*/ UnityEngine.Color borderRightColor;
            /*0xb4*/ UnityEngine.Color borderTopColor;
            /*0xc4*/ UnityEngine.UIElements.Length borderTopLeftRadius;
            /*0xcc*/ UnityEngine.UIElements.Length borderTopRightRadius;
            /*0xd4*/ float opacity;
            /*0xd8*/ UnityEngine.UIElements.OverflowInternal overflow;

            static /*0x1825300*/ bool op_Equality(UnityEngine.UIElements.VisualData lhs, UnityEngine.UIElements.VisualData rhs);
            /*0x180ccc0*/ UnityEngine.UIElements.VisualData Copy();
            /*0x1824de0*/ void CopyFrom(ref UnityEngine.UIElements.VisualData other);
            /*0x1824f00*/ bool Equals(UnityEngine.UIElements.VisualData other);
            /*0x1825030*/ bool Equals(object obj);
            /*0x1825160*/ int GetHashCode();
        }

        class StyleValueCollection
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StyleValue> m_Values;

            /*0x18188b0*/ StyleValueCollection();
            /*0x18184e0*/ UnityEngine.UIElements.StyleLength GetStyleLength(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x18183f0*/ UnityEngine.UIElements.StyleFloat GetStyleFloat(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x1818460*/ UnityEngine.UIElements.StyleInt GetStyleInt(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x1818760*/ bool TryGetStyleValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, ref UnityEngine.UIElements.StyleSheets.StyleValue value);
            /*0x1818590*/ void SetStyleValue(UnityEngine.UIElements.StyleSheets.StyleValue value);
        }

        enum LengthUnit
        {
            Pixel = 0,
            Percent = 1,
        }

        struct Length : System.IEquatable<UnityEngine.UIElements.Length>
        {
            static float k_MaxValue = 8388608;
            /*0x10*/ float m_Value;
            /*0x14*/ UnityEngine.UIElements.Length.Unit m_Unit;

            static /*0x180fde0*/ UnityEngine.UIElements.Length Percent(float value);
            static /*0x180fcd0*/ UnityEngine.UIElements.Length Auto();
            static /*0x180fdc0*/ UnityEngine.UIElements.Length None();
            static /*0x180ffd0*/ UnityEngine.UIElements.Length op_Implicit(float value);
            static /*0x17e3be0*/ bool op_Equality(UnityEngine.UIElements.Length lhs, UnityEngine.UIElements.Length rhs);
            static /*0x1810010*/ bool op_Inequality(UnityEngine.UIElements.Length lhs, UnityEngine.UIElements.Length rhs);
            /*0x180ffa0*/ Length(float value);
            /*0x180ff70*/ Length(float value, UnityEngine.UIElements.LengthUnit unit);
            /*0x180ff70*/ Length(float value, UnityEngine.UIElements.Length.Unit unit);
            /*0xf72200*/ float get_value();
            /*0x1810040*/ void set_value(float value);
            /*0xa5a7c0*/ UnityEngine.UIElements.LengthUnit get_unit();
            /*0x180fda0*/ bool IsAuto();
            /*0x180fdb0*/ bool IsNone();
            /*0x17e39b0*/ bool Equals(UnityEngine.UIElements.Length other);
            /*0x180fcf0*/ bool Equals(object obj);
            /*0x17e39e0*/ int GetHashCode();
            /*0x180fe20*/ string ToString();

            enum Unit
            {
                Pixel = 0,
                Percent = 1,
                Auto = 2,
                None = 3,
            }
        }

        struct Rotate : System.IEquatable<UnityEngine.UIElements.Rotate>
        {
            /*0x10*/ UnityEngine.UIElements.Angle m_Angle;
            /*0x18*/ UnityEngine.Vector3 m_Axis;
            /*0x24*/ bool m_IsNone;

            static /*0x1811040*/ UnityEngine.UIElements.Rotate Initial();
            static /*0x18110d0*/ UnityEngine.UIElements.Rotate None();
            static /*0x18112b0*/ bool op_Equality(UnityEngine.UIElements.Rotate lhs, UnityEngine.UIElements.Rotate rhs);
            static /*0x18113a0*/ bool op_Inequality(UnityEngine.UIElements.Rotate lhs, UnityEngine.UIElements.Rotate rhs);
            /*0x1811240*/ Rotate(UnityEngine.UIElements.Angle angle);
            /*0x6937d0*/ UnityEngine.UIElements.Angle get_angle();
            /*0x9e29e0*/ void set_angle(UnityEngine.UIElements.Angle value);
            /*0x1811290*/ UnityEngine.Vector3 get_axis();
            /*0x1810e90*/ bool Equals(UnityEngine.UIElements.Rotate other);
            /*0x1810df0*/ bool Equals(object obj);
            /*0x1810f70*/ int GetHashCode();
            /*0x18111d0*/ string ToString();
            /*0x1811170*/ UnityEngine.Quaternion ToQuaternion();
        }

        struct Scale : System.IEquatable<UnityEngine.UIElements.Scale>
        {
            /*0x10*/ UnityEngine.Vector3 m_Scale;
            /*0x1c*/ bool m_IsNone;

            static /*0x1811610*/ UnityEngine.UIElements.Scale Initial();
            static /*0x1811710*/ UnityEngine.UIElements.Scale None();
            static /*0x18117f0*/ bool op_Equality(UnityEngine.UIElements.Scale lhs, UnityEngine.UIElements.Scale rhs);
            static /*0x1811850*/ bool op_Inequality(UnityEngine.UIElements.Scale lhs, UnityEngine.UIElements.Scale rhs);
            /*0x1811750*/ Scale(UnityEngine.Vector3 scale);
            /*0xa5a680*/ UnityEngine.Vector3 get_value();
            /*0x1811490*/ bool Equals(UnityEngine.UIElements.Scale other);
            /*0x18114e0*/ bool Equals(object obj);
            /*0x18115b0*/ int GetHashCode();
            /*0x15efb30*/ string ToString();
        }

        struct StyleBackgroundSize : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.BackgroundSize>, System.IEquatable<UnityEngine.UIElements.StyleBackgroundSize>
        {
            /*0x10*/ UnityEngine.UIElements.BackgroundSize m_Value;
            /*0x24*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1811b50*/ bool op_Equality(UnityEngine.UIElements.StyleBackgroundSize lhs, UnityEngine.UIElements.StyleBackgroundSize rhs);
            static /*0x1811bf0*/ UnityEngine.UIElements.StyleBackgroundSize op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1811b10*/ StyleBackgroundSize(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1811af0*/ StyleBackgroundSize(UnityEngine.UIElements.BackgroundSize v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1811b20*/ UnityEngine.UIElements.BackgroundSize get_value();
            /*0x8b8c40*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x18119c0*/ bool Equals(UnityEngine.UIElements.StyleBackgroundSize other);
            /*0x18118a0*/ bool Equals(object obj);
            /*0x1811a60*/ int GetHashCode();
            /*0x1811a80*/ string ToString();
        }

        struct StyleColor : UnityEngine.UIElements.IStyleValue<UnityEngine.Color>, System.IEquatable<UnityEngine.UIElements.StyleColor>
        {
            /*0x10*/ UnityEngine.Color m_Value;
            /*0x20*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1811e50*/ bool op_Equality(UnityEngine.UIElements.StyleColor lhs, UnityEngine.UIElements.StyleColor rhs);
            static /*0x1811ed0*/ UnityEngine.UIElements.StyleColor op_Implicit(UnityEngine.Color v);
            /*0xef6580*/ StyleColor(UnityEngine.Color v);
            /*0xa5a310*/ StyleColor(UnityEngine.Color v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1811e30*/ UnityEngine.Color get_value();
            /*0x15bceb0*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1811c20*/ bool Equals(UnityEngine.UIElements.StyleColor other);
            /*0x1811ca0*/ bool Equals(object obj);
            /*0x1811da0*/ int GetHashCode();
            /*0x1811dc0*/ string ToString();
        }

        struct StyleCursor : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.Cursor>, System.IEquatable<UnityEngine.UIElements.StyleCursor>
        {
            /*0x10*/ UnityEngine.UIElements.Cursor m_Value;
            /*0x28*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x18130e0*/ bool op_Equality(UnityEngine.UIElements.StyleCursor lhs, UnityEngine.UIElements.StyleCursor rhs);
            static /*0x1813150*/ UnityEngine.UIElements.StyleCursor op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813040*/ StyleCursor(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813070*/ StyleCursor(UnityEngine.UIElements.Cursor v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813090*/ UnityEngine.UIElements.Cursor get_value();
            /*0xbe6cb0*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1812e70*/ bool Equals(UnityEngine.UIElements.StyleCursor other);
            /*0x1812ee0*/ bool Equals(object obj);
            /*0x1812fb0*/ int GetHashCode();
            /*0x1812fd0*/ string ToString();
        }

        struct StyleDataRef<T> : System.IEquatable<UnityEngine.UIElements.StyleDataRef<T>>
        {
            /*0x0*/ UnityEngine.UIElements.StyleDataRef.RefCounted<T> m_Ref;

            static /*0x2a5510*/ UnityEngine.UIElements.StyleDataRef<T> Create();
            static /*0x2a5510*/ bool op_Equality(UnityEngine.UIElements.StyleDataRef<T> lhs, UnityEngine.UIElements.StyleDataRef<T> rhs);
            /*0x2a5510*/ UnityEngine.UIElements.StyleDataRef<T> Acquire();
            /*0x180fc0*/ void Release();
            /*0x2a5510*/ void CopyFrom(UnityEngine.UIElements.StyleDataRef<T> other);
            /*0x1803b0*/ ref T Read();
            /*0x1803b0*/ ref T Write();
            /*0x180980*/ int GetHashCode();
            /*0x2a5510*/ bool Equals(UnityEngine.UIElements.StyleDataRef<T> other);
            /*0x17e620*/ bool Equals(object obj);
            /*0x2a5510*/ bool ReferenceEquals(UnityEngine.UIElements.StyleDataRef<T> other);

            class RefCounted<T>
            {
                static /*0x0*/ uint m_NextId;
                /*0x0*/ int m_RefCount;
                /*0x0*/ uint m_Id;
                /*0x0*/ T value;

                static /*0x180ff0*/ RefCounted();
                /*0x180fc0*/ RefCounted();
                /*0x180980*/ int get_refCount();
                /*0x180fc0*/ void Acquire();
                /*0x180fc0*/ void Release();
                /*0x1803b0*/ UnityEngine.UIElements.StyleDataRef.RefCounted<T> Copy();
            }
        }

        struct StyleEnum<T> : UnityEngine.UIElements.IStyleValue<T>, System.IEquatable<UnityEngine.UIElements.StyleEnum<T>>
        {
            /*0x0*/ T m_Value;
            /*0x0*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x2a5510*/ bool op_Equality(UnityEngine.UIElements.StyleEnum<T> lhs, UnityEngine.UIElements.StyleEnum<T> rhs);
            static /*0x2a5510*/ bool op_Inequality(UnityEngine.UIElements.StyleEnum<T> lhs, UnityEngine.UIElements.StyleEnum<T> rhs);
            static /*0x2a5510*/ UnityEngine.UIElements.StyleEnum<T> op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x2a5510*/ UnityEngine.UIElements.StyleEnum<T> op_Implicit(T v);
            /*0x2a5510*/ StyleEnum(T v);
            /*0x17aa40*/ StyleEnum(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x2a5510*/ StyleEnum(T v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x2a5510*/ T get_value();
            /*0x180980*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x2a5510*/ bool Equals(UnityEngine.UIElements.StyleEnum<T> other);
            /*0x17e620*/ bool Equals(object obj);
            /*0x180980*/ int GetHashCode();
            /*0x1803b0*/ string ToString();
        }

        struct StyleFloat : UnityEngine.UIElements.IStyleValue<float>, System.IEquatable<UnityEngine.UIElements.StyleFloat>
        {
            /*0x10*/ float m_Value;
            /*0x14*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1813320*/ bool op_Equality(UnityEngine.UIElements.StyleFloat lhs, UnityEngine.UIElements.StyleFloat rhs);
            static /*0x1813350*/ UnityEngine.UIElements.StyleFloat op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x17e3c10*/ UnityEngine.UIElements.StyleFloat op_Implicit(float v);
            /*0x18132f0*/ StyleFloat(float v);
            /*0x1813300*/ StyleFloat(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x791da0*/ StyleFloat(float v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813310*/ float get_value();
            /*0xc6bf90*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1813260*/ bool Equals(UnityEngine.UIElements.StyleFloat other);
            /*0x18131b0*/ bool Equals(object obj);
            /*0x17e39e0*/ int GetHashCode();
            /*0x1813290*/ string ToString();
        }

        struct StyleFont : UnityEngine.UIElements.IStyleValue<UnityEngine.Font>, System.IEquatable<UnityEngine.UIElements.StyleFont>
        {
            /*0x10*/ UnityEngine.Font m_Value;
            /*0x18*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1813810*/ bool op_Equality(UnityEngine.UIElements.StyleFont lhs, UnityEngine.UIElements.StyleFont rhs);
            static /*0x1813880*/ UnityEngine.UIElements.StyleFont op_Implicit(UnityEngine.Font v);
            /*0x18137f0*/ StyleFont(UnityEngine.Font v);
            /*0x18137e0*/ StyleFont(UnityEngine.Font v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813800*/ UnityEngine.Font get_value();
            /*0xb73eb0*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1813670*/ bool Equals(UnityEngine.UIElements.StyleFont other);
            /*0x1813560*/ bool Equals(object obj);
            /*0x18136f0*/ int GetHashCode();
            /*0x1813780*/ string ToString();
        }

        struct StyleFontDefinition : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.FontDefinition>, System.IEquatable<UnityEngine.UIElements.StyleFontDefinition>
        {
            /*0x10*/ UnityEngine.UIElements.StyleKeyword m_Keyword;
            /*0x18*/ UnityEngine.UIElements.FontDefinition m_Value;

            static /*0x1813510*/ UnityEngine.UIElements.StyleFontDefinition op_Implicit(UnityEngine.UIElements.FontDefinition f);
            /*0x18134d0*/ StyleFontDefinition(UnityEngine.UIElements.FontDefinition f);
            /*0x18134b0*/ StyleFontDefinition(UnityEngine.UIElements.FontDefinition f, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x18134f0*/ UnityEngine.UIElements.FontDefinition get_value();
            /*0x15d3b80*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1813430*/ bool Equals(UnityEngine.UIElements.StyleFontDefinition other);
            /*0x1813370*/ bool Equals(object obj);
            /*0x1813480*/ int GetHashCode();
        }

        struct StyleInt : UnityEngine.UIElements.IStyleValue<int>, System.IEquatable<UnityEngine.UIElements.StyleInt>
        {
            /*0x10*/ int m_Value;
            /*0x14*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x18139f0*/ bool op_Equality(UnityEngine.UIElements.StyleInt lhs, UnityEngine.UIElements.StyleInt rhs);
            static /*0x1813350*/ UnityEngine.UIElements.StyleInt op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813300*/ StyleInt(UnityEngine.UIElements.StyleKeyword keyword);
            /*0xc6bf30*/ StyleInt(int v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0xc6c170*/ int get_value();
            /*0xc6bf90*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1813960*/ bool Equals(UnityEngine.UIElements.StyleInt other);
            /*0x18138c0*/ bool Equals(object obj);
            /*0x161e2f0*/ int GetHashCode();
            /*0x1813990*/ string ToString();
        }

        struct StyleLength : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.Length>, System.IEquatable<UnityEngine.UIElements.StyleLength>
        {
            /*0x10*/ UnityEngine.UIElements.Length m_Value;
            /*0x18*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1813d00*/ bool op_Equality(UnityEngine.UIElements.StyleLength lhs, UnityEngine.UIElements.StyleLength rhs);
            static /*0x1813d80*/ UnityEngine.UIElements.StyleLength op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x1813da0*/ UnityEngine.UIElements.StyleLength op_Implicit(float v);
            static /*0x1813d40*/ UnityEngine.UIElements.StyleLength op_Implicit(UnityEngine.UIElements.Length v);
            /*0x1813c10*/ StyleLength(float v);
            /*0x1813cb0*/ StyleLength(UnityEngine.UIElements.Length v);
            /*0x1813c70*/ StyleLength(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813c80*/ StyleLength(UnityEngine.UIElements.Length v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1813ce0*/ UnityEngine.UIElements.Length get_value();
            /*0xb73eb0*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1813a10*/ bool Equals(UnityEngine.UIElements.StyleLength other);
            /*0x1813a80*/ bool Equals(object obj);
            /*0x1813b70*/ int GetHashCode();
            /*0x1813ba0*/ string ToString();
        }

        struct StyleRotate : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.Rotate>, System.IEquatable<UnityEngine.UIElements.StyleRotate>
        {
            /*0x10*/ UnityEngine.UIElements.Rotate m_Value;
            /*0x28*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x18159d0*/ bool op_Equality(UnityEngine.UIElements.StyleRotate lhs, UnityEngine.UIElements.StyleRotate rhs);
            static /*0x1815a60*/ UnityEngine.UIElements.StyleRotate op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1815850*/ StyleRotate(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1815880*/ StyleRotate(UnityEngine.UIElements.Rotate v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x18158a0*/ UnityEngine.UIElements.Rotate get_value();
            /*0xbe6cb0*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1815720*/ bool Equals(UnityEngine.UIElements.StyleRotate other);
            /*0x1815620*/ bool Equals(object obj);
            /*0x18157b0*/ int GetHashCode();
            /*0x18157d0*/ string ToString();
        }

        struct StyleScale : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.Scale>, System.IEquatable<UnityEngine.UIElements.StyleScale>
        {
            /*0x10*/ UnityEngine.UIElements.Scale m_Value;
            /*0x20*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1815d80*/ bool op_Equality(UnityEngine.UIElements.StyleScale lhs, UnityEngine.UIElements.StyleScale rhs);
            static /*0x1815df0*/ UnityEngine.UIElements.StyleScale op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1815cb0*/ StyleScale(UnityEngine.UIElements.StyleKeyword keyword);
            /*0xa5a310*/ StyleScale(UnityEngine.UIElements.Scale v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1815cc0*/ UnityEngine.UIElements.Scale get_value();
            /*0x15bceb0*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1815a90*/ bool Equals(UnityEngine.UIElements.StyleScale other);
            /*0x1815b00*/ bool Equals(object obj);
            /*0x1815be0*/ int GetHashCode();
            /*0x1815c40*/ string ToString();
        }

        struct StyleTranslate : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.Translate>, System.IEquatable<UnityEngine.UIElements.StyleTranslate>
        {
            /*0x10*/ UnityEngine.UIElements.Translate m_Value;
            /*0x28*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1818330*/ bool op_Equality(UnityEngine.UIElements.StyleTranslate lhs, UnityEngine.UIElements.StyleTranslate rhs);
            static /*0x1815a60*/ UnityEngine.UIElements.StyleTranslate op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x18183c0*/ UnityEngine.UIElements.StyleTranslate op_Implicit(UnityEngine.UIElements.Translate v);
            /*0x1818260*/ StyleTranslate(UnityEngine.UIElements.Translate v);
            /*0x1815850*/ StyleTranslate(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1815880*/ StyleTranslate(UnityEngine.UIElements.Translate v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1818280*/ UnityEngine.UIElements.Translate get_value();
            /*0xbe6cb0*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1818030*/ bool Equals(UnityEngine.UIElements.StyleTranslate other);
            /*0x18180c0*/ bool Equals(object obj);
            /*0x18181c0*/ int GetHashCode();
            /*0x18181e0*/ string ToString();
        }

        struct StyleTextShadow : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.TextShadow>, System.IEquatable<UnityEngine.UIElements.StyleTextShadow>
        {
            /*0x10*/ UnityEngine.UIElements.StyleKeyword m_Keyword;
            /*0x14*/ UnityEngine.UIElements.TextShadow m_Value;

            static /*0x1817b10*/ bool op_Equality(UnityEngine.UIElements.StyleTextShadow lhs, UnityEngine.UIElements.StyleTextShadow rhs);
            static /*0x1817bc0*/ UnityEngine.UIElements.StyleTextShadow op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1817a70*/ StyleTextShadow(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1817aa0*/ StyleTextShadow(UnityEngine.UIElements.TextShadow v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1817ac0*/ UnityEngine.UIElements.TextShadow get_value();
            /*0x15d3b80*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1817910*/ bool Equals(UnityEngine.UIElements.StyleTextShadow other);
            /*0x18177e0*/ bool Equals(object obj);
            /*0x18179c0*/ int GetHashCode();
            /*0x1817a00*/ string ToString();
        }

        struct StyleTransformOrigin : UnityEngine.UIElements.IStyleValue<UnityEngine.UIElements.TransformOrigin>, System.IEquatable<UnityEngine.UIElements.StyleTransformOrigin>
        {
            /*0x10*/ UnityEngine.UIElements.TransformOrigin m_Value;
            /*0x24*/ UnityEngine.UIElements.StyleKeyword m_Keyword;

            static /*0x1817f40*/ bool op_Equality(UnityEngine.UIElements.StyleTransformOrigin lhs, UnityEngine.UIElements.StyleTransformOrigin rhs);
            static /*0x1811bf0*/ UnityEngine.UIElements.StyleTransformOrigin op_Implicit(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1811b10*/ StyleTransformOrigin(UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1811af0*/ StyleTransformOrigin(UnityEngine.UIElements.TransformOrigin v, UnityEngine.UIElements.StyleKeyword keyword);
            /*0x1817e20*/ UnityEngine.UIElements.TransformOrigin get_value();
            /*0x8b8c40*/ UnityEngine.UIElements.StyleKeyword get_keyword();
            /*0x1817c00*/ bool Equals(UnityEngine.UIElements.StyleTransformOrigin other);
            /*0x1817cf0*/ bool Equals(object obj);
            /*0x1817d90*/ int GetHashCode();
            /*0x1817db0*/ string ToString();
        }

        interface IStyleValue<T>
        {
            /*0x2a5510*/ T get_value();
            /*0x180980*/ UnityEngine.UIElements.StyleKeyword get_keyword();
        }

        enum StyleKeyword
        {
            Undefined = 0,
            Null = 1,
            Auto = 2,
            None = 3,
            Initial = 4,
        }

        class StyleValueExtensions
        {
            static /*0x17e030*/ string DebugString<T>(UnityEngine.UIElements.IStyleValue<T> styleValue);
            static /*0x1818e90*/ UnityEngine.Yoga.YogaValue ToYogaValue(UnityEngine.UIElements.Length length);
            static /*0x1818930*/ UnityEngine.UIElements.Length ToLength(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x1818b30*/ UnityEngine.UIElements.Rotate ToRotate(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x1818c90*/ UnityEngine.UIElements.Scale ToScale(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x1818d90*/ UnityEngine.UIElements.Translate ToTranslate(UnityEngine.UIElements.StyleKeyword keyword);
            static /*0x1818a20*/ UnityEngine.UIElements.Length ToLength(UnityEngine.UIElements.StyleLength styleLength);
            static /*0x177670*/ void CopyFrom<T>(System.Collections.Generic.List<T> list, System.Collections.Generic.List<T> other);
        }

        enum TimeUnit
        {
            Second = 0,
            Millisecond = 1,
        }

        struct TimeValue : System.IEquatable<UnityEngine.UIElements.TimeValue>
        {
            /*0x10*/ float m_Value;
            /*0x14*/ UnityEngine.UIElements.TimeUnit m_Unit;

            static /*0x17e3c10*/ UnityEngine.UIElements.TimeValue op_Implicit(float value);
            static /*0x17e3be0*/ bool op_Equality(UnityEngine.UIElements.TimeValue lhs, UnityEngine.UIElements.TimeValue rhs);
            static /*0x1810010*/ bool op_Inequality(UnityEngine.UIElements.TimeValue lhs, UnityEngine.UIElements.TimeValue rhs);
            /*0x18132f0*/ TimeValue(float value);
            /*0x791da0*/ TimeValue(float value, UnityEngine.UIElements.TimeUnit unit);
            /*0xf72200*/ float get_value();
            /*0xa5a7c0*/ UnityEngine.UIElements.TimeUnit get_unit();
            /*0x17e39b0*/ bool Equals(UnityEngine.UIElements.TimeValue other);
            /*0x181cd60*/ bool Equals(object obj);
            /*0x17e39e0*/ int GetHashCode();
            /*0x181ce10*/ string ToString();
        }

        struct TransformOrigin : System.IEquatable<UnityEngine.UIElements.TransformOrigin>
        {
            /*0x10*/ UnityEngine.UIElements.Length m_X;
            /*0x18*/ UnityEngine.UIElements.Length m_Y;
            /*0x20*/ float m_Z;

            static /*0x181d7c0*/ UnityEngine.UIElements.TransformOrigin Initial();
            static /*0x181d9c0*/ bool op_Equality(UnityEngine.UIElements.TransformOrigin lhs, UnityEngine.UIElements.TransformOrigin rhs);
            static /*0x181da60*/ bool op_Inequality(UnityEngine.UIElements.TransformOrigin lhs, UnityEngine.UIElements.TransformOrigin rhs);
            /*0x181d9b0*/ TransformOrigin(UnityEngine.UIElements.Length x, UnityEngine.UIElements.Length y, float z);
            /*0x6937d0*/ UnityEngine.UIElements.Length get_x();
            /*0x9e29e0*/ void set_x(UnityEngine.UIElements.Length value);
            /*0xa5a7f0*/ UnityEngine.UIElements.Length get_y();
            /*0xfbbe80*/ void set_y(UnityEngine.UIElements.Length value);
            /*0x8c2b50*/ float get_z();
            /*0x181d580*/ bool Equals(UnityEngine.UIElements.TransformOrigin other);
            /*0x181d620*/ bool Equals(object obj);
            /*0x181d740*/ int GetHashCode();
            /*0x181d840*/ string ToString();
        }

        struct Translate : System.IEquatable<UnityEngine.UIElements.Translate>
        {
            /*0x10*/ UnityEngine.UIElements.Length m_X;
            /*0x18*/ UnityEngine.UIElements.Length m_Y;
            /*0x20*/ float m_Z;
            /*0x24*/ bool m_isNone;

            static /*0x181e140*/ UnityEngine.UIElements.Translate None();
            static /*0x181e300*/ bool op_Equality(UnityEngine.UIElements.Translate lhs, UnityEngine.UIElements.Translate rhs);
            static /*0x181e410*/ bool op_Inequality(UnityEngine.UIElements.Translate lhs, UnityEngine.UIElements.Translate rhs);
            /*0x181e2e0*/ Translate(UnityEngine.UIElements.Length x, UnityEngine.UIElements.Length y, float z);
            /*0x6937d0*/ UnityEngine.UIElements.Length get_x();
            /*0x9e29e0*/ void set_x(UnityEngine.UIElements.Length value);
            /*0xa5a7f0*/ UnityEngine.UIElements.Length get_y();
            /*0xfbbe80*/ void set_y(UnityEngine.UIElements.Length value);
            /*0x8c2b50*/ float get_z();
            /*0x181e030*/ bool Equals(UnityEngine.UIElements.Translate other);
            /*0x181e080*/ bool Equals(object obj);
            /*0x181d740*/ int GetHashCode();
            /*0x181e170*/ string ToString();
        }

        enum Position
        {
            Relative = 0,
            Absolute = 1,
        }

        enum Overflow
        {
            Visible = 0,
            Hidden = 1,
        }

        enum OverflowInternal
        {
            Visible = 0,
            Hidden = 1,
            Scroll = 2,
        }

        enum OverflowClipBox
        {
            PaddingBox = 0,
            ContentBox = 1,
        }

        enum FlexDirection
        {
            Column = 0,
            ColumnReverse = 1,
            Row = 2,
            RowReverse = 3,
        }

        enum Wrap
        {
            NoWrap = 0,
            Wrap = 1,
            WrapReverse = 2,
        }

        enum Align
        {
            Auto = 0,
            FlexStart = 1,
            Center = 2,
            FlexEnd = 3,
            Stretch = 4,
        }

        enum Justify
        {
            FlexStart = 0,
            Center = 1,
            FlexEnd = 2,
            SpaceBetween = 3,
            SpaceAround = 4,
        }

        enum TextOverflowPosition
        {
            End = 0,
            Start = 1,
            Middle = 2,
        }

        enum TextOverflow
        {
            Clip = 0,
            Ellipsis = 1,
        }

        enum TransformOriginOffset
        {
            Left = 1,
            Right = 2,
            Top = 3,
            Bottom = 4,
            Center = 5,
        }

        enum Visibility
        {
            Visible = 0,
            Hidden = 1,
        }

        enum WhiteSpace
        {
            Normal = 0,
            NoWrap = 1,
        }

        enum DisplayStyle
        {
            Flex = 0,
            None = 1,
        }

        enum BackgroundPositionKeyword
        {
            Center = 0,
            Top = 1,
            Bottom = 2,
            Left = 3,
            Right = 4,
        }

        enum Repeat
        {
            NoRepeat = 0,
            Space = 1,
            Round = 2,
            Repeat = 3,
        }

        enum BackgroundSizeType
        {
            Length = 0,
            Cover = 1,
            Contain = 2,
        }

        interface IStylePainter
        {
            /*0x17aec0*/ void DrawText(UnityEngine.UIElements.TextElement te);
            void DrawRectangle(UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams);
            void DrawImmediate(System.Action callback, bool cullingEnabled);
        }

        interface IStylePropertyAnimations
        {
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, float from, float to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, int from, int to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Length from, UnityEngine.UIElements.Length to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Color from, UnityEngine.Color to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartEnum(UnityEngine.UIElements.StyleSheets.StylePropertyId id, int from, int to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Background from, UnityEngine.UIElements.Background to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.FontDefinition from, UnityEngine.UIElements.FontDefinition to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Font from, UnityEngine.Font to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TextShadow from, UnityEngine.UIElements.TextShadow to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Scale from, UnityEngine.UIElements.Scale to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Translate from, UnityEngine.UIElements.Translate to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.Rotate from, UnityEngine.UIElements.Rotate to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.TransformOrigin from, UnityEngine.UIElements.TransformOrigin to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundPosition from, UnityEngine.UIElements.BackgroundPosition to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundRepeat from, UnityEngine.UIElements.BackgroundRepeat to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool Start(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.UIElements.BackgroundSize from, UnityEngine.UIElements.BackgroundSize to, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x17aa40*/ void UpdateAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x17aec0*/ void GetAllAnimations(System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds);
            /*0x17aa40*/ void CancelAnimation(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x180fc0*/ void CancelAllAnimations();
            /*0x180980*/ int get_runningAnimationCount();
            /*0x17aa40*/ void set_runningAnimationCount(int value);
            /*0x180980*/ int get_completedAnimationCount();
            /*0x17aa40*/ void set_completedAnimationCount(int value);
        }

        interface IStylePropertyAnimationSystem
        {
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, float startValue, float endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Length startValue, UnityEngine.UIElements.Length endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.Color startValue, UnityEngine.Color endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Background startValue, UnityEngine.UIElements.Background endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.FontDefinition startValue, UnityEngine.UIElements.FontDefinition endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.Font startValue, UnityEngine.Font endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.TextShadow startValue, UnityEngine.UIElements.TextShadow endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Scale startValue, UnityEngine.UIElements.Scale endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.TransformOrigin startValue, UnityEngine.UIElements.TransformOrigin endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Translate startValue, UnityEngine.UIElements.Translate endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Rotate startValue, UnityEngine.UIElements.Rotate endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundPosition startValue, UnityEngine.UIElements.BackgroundPosition endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundRepeat startValue, UnityEngine.UIElements.BackgroundRepeat endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundSize startValue, UnityEngine.UIElements.BackgroundSize endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x180fc0*/ void CancelAllAnimations();
            /*0x17aec0*/ void CancelAllAnimations(UnityEngine.UIElements.VisualElement owner);
            /*0x182a70*/ void CancelAnimation(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x182a70*/ void UpdateAnimation(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x183150*/ void GetAllAnimations(UnityEngine.UIElements.VisualElement owner, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> propertyIds);
            /*0x180fc0*/ void Update();
        }

        class StylePropertyAnimationSystem : UnityEngine.UIElements.IStylePropertyAnimationSystem
        {
            /*0x10*/ long m_CurrentTimeMs;
            /*0x18*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesFloat m_Floats;
            /*0x20*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesInt m_Ints;
            /*0x28*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesLength m_Lengths;
            /*0x30*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesColor m_Colors;
            /*0x38*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesBackground m_Backgrounds;
            /*0x40*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesFontDefinition m_FontDefinitions;
            /*0x48*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesFont m_Fonts;
            /*0x50*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesTextShadow m_TextShadows;
            /*0x58*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesScale m_Scale;
            /*0x60*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesRotate m_Rotate;
            /*0x68*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesTranslate m_Translate;
            /*0x70*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesTransformOrigin m_TransformOrigin;
            /*0x78*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesBackgroundPosition m_BackgroundPosition;
            /*0x80*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesBackgroundRepeat m_BackgroundRepeat;
            /*0x88*/ UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesBackgroundSize m_BackgroundSize;
            /*0x90*/ System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyAnimationSystem.Values> m_AllValues;
            /*0x98*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.StyleSheets.StylePropertyId, UnityEngine.UIElements.StylePropertyAnimationSystem.Values> m_PropertyToValues;

            /*0x1815200*/ StylePropertyAnimationSystem();
            /*0x2a5510*/ T GetOrCreate<T>(ref T values);
            /*0x2a5510*/ bool StartTransition<T>(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, T startValue, T endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve, UnityEngine.UIElements.StylePropertyAnimationSystem.Values<T> values);
            /*0x1814c30*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, float startValue, float endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814860*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x18145b0*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Length startValue, UnityEngine.UIElements.Length endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814680*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.Color startValue, UnityEngine.Color endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x18143d0*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Background startValue, UnityEngine.UIElements.Background endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x18144d0*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.FontDefinition startValue, UnityEngine.UIElements.FontDefinition endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814de0*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.Font startValue, UnityEngine.Font endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814b20*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.TextShadow startValue, UnityEngine.UIElements.TextShadow endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814d00*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Scale startValue, UnityEngine.UIElements.Scale endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814a20*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Rotate startValue, UnityEngine.UIElements.Rotate endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814eb0*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.Translate startValue, UnityEngine.UIElements.Translate endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814760*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.TransformOrigin startValue, UnityEngine.UIElements.TransformOrigin endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x18142e0*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundPosition startValue, UnityEngine.UIElements.BackgroundPosition endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814fb0*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundRepeat startValue, UnityEngine.UIElements.BackgroundRepeat endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1814920*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, UnityEngine.UIElements.BackgroundSize startValue, UnityEngine.UIElements.BackgroundSize endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve);
            /*0x1813e30*/ void CancelAllAnimations();
            /*0x1813f40*/ void CancelAllAnimations(UnityEngine.UIElements.VisualElement owner);
            /*0x1814110*/ void CancelAnimation(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x1815080*/ void UpdateAnimation(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            /*0x18141b0*/ void GetAllAnimations(UnityEngine.UIElements.VisualElement owner, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> propertyIds);
            /*0x17aec0*/ void UpdateTracking<T>(UnityEngine.UIElements.StylePropertyAnimationSystem.Values<T> values);
            /*0x9e3110*/ long CurrentTimeMs();
            /*0x1815120*/ void Update();

            enum TransitionState
            {
                None = 0,
                Running = 1,
                Started = 2,
                Ended = 4,
                Canceled = 8,
            }

            struct AnimationDataSet<TTimingData, TStyleData>
            {
                /*0x0*/ UnityEngine.UIElements.VisualElement[] elements;
                /*0x0*/ UnityEngine.UIElements.StyleSheets.StylePropertyId[] properties;
                /*0x0*/ TTimingData[] timing;
                /*0x0*/ TStyleData[] style;
                /*0x0*/ int count;
                /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair, int> indices;

                static /*0x2a5510*/ UnityEngine.UIElements.StylePropertyAnimationSystem.AnimationDataSet<TTimingData, TStyleData> Create();
                /*0x180980*/ int get_capacity();
                /*0x17aa40*/ void set_capacity(int value);
                /*0x180fc0*/ void LocalInit();
                /*0x2a5510*/ bool IndexOf(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref int index);
                /*0x2a5510*/ void Add(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, TTimingData timingData, TStyleData styleData);
                /*0x17aa40*/ void Remove(int cancelledIndex);
                /*0x2a5510*/ void Replace(int index, TTimingData timingData, TStyleData styleData);
                /*0x17aec0*/ void RemoveAll(UnityEngine.UIElements.VisualElement ve);
                /*0x180fc0*/ void RemoveAll();
                /*0x183150*/ void GetActivePropertiesForElement(UnityEngine.UIElements.VisualElement ve, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> outProperties);
            }

            struct ElementPropertyPair
            {
                static /*0x0*/ System.Collections.Generic.IEqualityComparer<UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair> Comparer;
                /*0x10*/ UnityEngine.UIElements.VisualElement element;
                /*0x18*/ UnityEngine.UIElements.StyleSheets.StylePropertyId property;

                static /*0x180cad0*/ ElementPropertyPair();
                /*0xa59f80*/ ElementPropertyPair(UnityEngine.UIElements.VisualElement element, UnityEngine.UIElements.StyleSheets.StylePropertyId property);

                class EqualityComparer : System.Collections.Generic.IEqualityComparer<UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair>
                {
                    /*0x32f970*/ EqualityComparer();
                    /*0x180cb50*/ bool Equals(UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair x, UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair y);
                    /*0x180cb70*/ int GetHashCode(UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair obj);
                }
            }

            class Values
            {
                /*0x32f970*/ Values();
                /*0x180fc0*/ void CancelAllAnimations();
                /*0x17aec0*/ void CancelAllAnimations(UnityEngine.UIElements.VisualElement ve);
                /*0x182a70*/ void CancelAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
                /*0x182a70*/ void UpdateAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
                /*0x183150*/ void GetAllAnimations(UnityEngine.UIElements.VisualElement ve, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds);
                /*0x17a1c0*/ void Update(long currentTimeMs);
                /*0x180fc0*/ void UpdateValues();
                /*0x180fc0*/ void UpdateComputedStyle();
                /*0x17aa40*/ void UpdateComputedStyle(int i);
            }

            class Values<T> : UnityEngine.UIElements.StylePropertyAnimationSystem.Values
            {
                /*0x0*/ long m_CurrentTimeMs;
                /*0x0*/ UnityEngine.UIElements.StylePropertyAnimationSystem.Values.TransitionEventsFrameState<T> m_CurrentFrameEventsState;
                /*0x0*/ UnityEngine.UIElements.StylePropertyAnimationSystem.Values.TransitionEventsFrameState<T> m_NextFrameEventsState;
                /*0x0*/ UnityEngine.UIElements.StylePropertyAnimationSystem.AnimationDataSet<UnityEngine.UIElements.StylePropertyAnimationSystem.Values.TimingData<T>, UnityEngine.UIElements.StylePropertyAnimationSystem.Values.StyleData<T>> running;
                /*0x0*/ UnityEngine.UIElements.StylePropertyAnimationSystem.AnimationDataSet<UnityEngine.UIElements.StylePropertyAnimationSystem.Values.EmptyData<T>, T> completed;

                /*0x180fc0*/ Values();
                /*0x17cb40*/ bool get_isEmpty();
                /*0x1803b0*/ System.Func<T, T, bool> get_SameFunc();
                bool ConvertUnits(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref T a, ref T b);
                /*0x180fc0*/ void SwapFrameStates();
                /*0x2a5510*/ void QueueEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair epp);
                /*0x2a5510*/ void ClearEventQueue(UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair epp);
                /*0x182a70*/ void QueueTransitionRunEvent(UnityEngine.UIElements.VisualElement ve, int runningIndex);
                /*0x182a70*/ void QueueTransitionStartEvent(UnityEngine.UIElements.VisualElement ve, int runningIndex);
                /*0x182a70*/ void QueueTransitionEndEvent(UnityEngine.UIElements.VisualElement ve, int runningIndex);
                /*0x2a5510*/ void QueueTransitionCancelEvent(UnityEngine.UIElements.VisualElement ve, int runningIndex, long panelElapsedMs);
                /*0x2a5510*/ void SendTransitionCancelEvent(UnityEngine.UIElements.VisualElement ve, int runningIndex, long panelElapsedMs);
                /*0x180fc0*/ void CancelAllAnimations();
                /*0x17aec0*/ void CancelAllAnimations(UnityEngine.UIElements.VisualElement ve);
                /*0x182a70*/ void CancelAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
                /*0x182a70*/ void UpdateAnimation(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
                /*0x183150*/ void GetAllAnimations(UnityEngine.UIElements.VisualElement ve, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> outPropertyIds);
                float ComputeReversingShorteningFactor(int oldIndex);
                /*0x2a5510*/ int ComputeReversingDuration(int newTransitionDurationMs, float newReversingShorteningFactor);
                /*0x2a5510*/ int ComputeReversingDelay(int delayMs, float newReversingShorteningFactor);
                /*0x2a5510*/ bool StartTransition(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, T startValue, T endValue, int durationMs, int delayMs, System.Func<float, float> easingCurve, long currentTimeMs);
                /*0x17aa40*/ void ForceComputedStyleEndValue(int runningIndex);
                /*0x17a1c0*/ void Update(long currentTimeMs);
                /*0x180fc0*/ void ProcessEventQueue();
                /*0x17a1c0*/ void UpdateProgress(long currentTimeMs);

                class TransitionEventsFrameState<T>
                {
                    static /*0x0*/ UnityEngine.Pool.ObjectPool<System.Collections.Generic.Queue<UnityEngine.UIElements.EventBase>> k_EventQueuePool;
                    /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair, UnityEngine.UIElements.StylePropertyAnimationSystem.TransitionState> elementPropertyStateDelta;
                    /*0x0*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.StylePropertyAnimationSystem.ElementPropertyPair, System.Collections.Generic.Queue<UnityEngine.UIElements.EventBase>> elementPropertyQueuedEvents;
                    /*0x0*/ UnityEngine.UIElements.IPanel panel;
                    /*0x0*/ int m_ChangesCount;

                    static /*0x180ff0*/ TransitionEventsFrameState();
                    static /*0x180cf0*/ System.Collections.Generic.Queue<UnityEngine.UIElements.EventBase> GetPooledQueue();
                    /*0x180fc0*/ TransitionEventsFrameState();
                    /*0x180fc0*/ void RegisterChange();
                    /*0x180fc0*/ void UnregisterChange();
                    /*0x17cb40*/ bool StateChanged();
                    /*0x180fc0*/ void Clear();

                    class <>c<T>
                    {
                        static /*0x0*/ UnityEngine.UIElements.StylePropertyAnimationSystem.Values.TransitionEventsFrameState.<>c<T> <>9;

                        static /*0x180ff0*/ <>c();
                        /*0x180fc0*/ <>c();
                        /*0x1803b0*/ System.Collections.Generic.Queue<UnityEngine.UIElements.EventBase> <.cctor>b__11_0();
                    }
                }

                struct TimingData<T>
                {
                    /*0x0*/ long startTimeMs;
                    /*0x0*/ int durationMs;
                    /*0x0*/ System.Func<float, float> easingCurve;
                    /*0x0*/ float easedProgress;
                    /*0x0*/ float reversingShorteningFactor;
                    /*0x0*/ bool isStarted;
                    /*0x0*/ int delayMs;
                }

                struct StyleData<T>
                {
                    /*0x0*/ T startValue;
                    /*0x0*/ T endValue;
                    /*0x0*/ T reversingAdjustedStartValue;
                    /*0x0*/ T currentValue;
                }

                struct EmptyData<T>
                {
                    static /*0x0*/ UnityEngine.UIElements.StylePropertyAnimationSystem.Values.EmptyData<T> Default;

                    static /*0x180ff0*/ EmptyData();
                }
            }

            class ValuesFloat : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<float>
            {
                /*0x88*/ System.Func<float, float, bool> <SameFunc>k__BackingField;

                static /*0x1822270*/ bool IsSame(float a, float b);
                static /*0x15e54f0*/ float Lerp(float a, float b, float t);
                /*0x18224b0*/ ValuesFloat();
                /*0x7379f0*/ System.Func<float, float, bool> get_SameFunc();
                /*0x1822420*/ void UpdateValues();
                /*0x1822280*/ void UpdateComputedStyle();
                /*0x1822380*/ void UpdateComputedStyle(int i);
            }

            class ValuesInt : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<int>
            {
                /*0x88*/ System.Func<int, int, bool> <SameFunc>k__BackingField;

                static /*0x6d51d0*/ bool IsSame(int a, int b);
                static /*0x1822930*/ int Lerp(int a, int b, float t);
                /*0x1822dc0*/ ValuesInt();
                /*0x7379f0*/ System.Func<int, int, bool> get_SameFunc();
                /*0x1822be0*/ void UpdateValues();
                /*0x1822ae0*/ void UpdateComputedStyle();
                /*0x1822a40*/ void UpdateComputedStyle(int i);
            }

            class ValuesLength : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.UIElements.Length>
            {
                /*0x88*/ System.Func<UnityEngine.UIElements.Length, UnityEngine.UIElements.Length, bool> <SameFunc>k__BackingField;

                static /*0x1822ea0*/ bool IsSame(UnityEngine.UIElements.Length a, UnityEngine.UIElements.Length b);
                static /*0x1822ee0*/ UnityEngine.UIElements.Length Lerp(UnityEngine.UIElements.Length a, UnityEngine.UIElements.Length b, float t);
                /*0x18231d0*/ ValuesLength();
                /*0x7379f0*/ System.Func<UnityEngine.UIElements.Length, UnityEngine.UIElements.Length, bool> get_SameFunc();
                /*0x1822e60*/ bool ConvertUnits(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref UnityEngine.UIElements.Length a, ref UnityEngine.UIElements.Length b);
                /*0x18230e0*/ void UpdateValues();
                /*0x1822f40*/ void UpdateComputedStyle();
                /*0x1823040*/ void UpdateComputedStyle(int i);
            }

            class ValuesColor : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.Color>
            {
                /*0x88*/ System.Func<UnityEngine.Color, UnityEngine.Color, bool> <SameFunc>k__BackingField;

                static /*0x1821dd0*/ bool IsSame(UnityEngine.Color c, UnityEngine.Color d);
                static /*0x1821e50*/ UnityEngine.Color Lerp(UnityEngine.Color a, UnityEngine.Color b, float t);
                /*0x18221d0*/ ValuesColor();
                /*0x7379f0*/ System.Func<UnityEngine.Color, UnityEngine.Color, bool> get_SameFunc();
                /*0x18220b0*/ void UpdateValues();
                /*0x1821fa0*/ void UpdateComputedStyle();
                /*0x1821ef0*/ void UpdateComputedStyle(int i);
            }

            class ValuesDiscrete<T> : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<T>
            {
                /*0x0*/ System.Func<T, T, bool> <SameFunc>k__BackingField;

                static /*0x2a5510*/ bool IsSame(T a, T b);
                static /*0x2a5510*/ T Lerp(T a, T b, float t);
                /*0x180fc0*/ ValuesDiscrete();
                /*0x1803b0*/ System.Func<T, T, bool> get_SameFunc();
                /*0x180fc0*/ void UpdateValues();
            }

            class ValuesBackground : UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesDiscrete<UnityEngine.UIElements.Background>
            {
                /*0x1821d90*/ ValuesBackground();
                /*0x1821c60*/ void UpdateComputedStyle();
                /*0x1821ba0*/ void UpdateComputedStyle(int i);
            }

            class ValuesFontDefinition : UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesDiscrete<UnityEngine.UIElements.FontDefinition>
            {
                /*0x1822710*/ ValuesFontDefinition();
                /*0x1822600*/ void UpdateComputedStyle();
                /*0x1822550*/ void UpdateComputedStyle(int i);
            }

            class ValuesFont : UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesDiscrete<UnityEngine.Font>
            {
                /*0x18228f0*/ ValuesFont();
                /*0x18227f0*/ void UpdateComputedStyle();
                /*0x1822750*/ void UpdateComputedStyle(int i);
            }

            class ValuesTextShadow : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.UIElements.TextShadow>
            {
                /*0x88*/ System.Func<UnityEngine.UIElements.TextShadow, UnityEngine.UIElements.TextShadow, bool> <SameFunc>k__BackingField;

                static /*0x1823d00*/ bool IsSame(UnityEngine.UIElements.TextShadow a, UnityEngine.UIElements.TextShadow b);
                static /*0x1823d50*/ UnityEngine.UIElements.TextShadow Lerp(UnityEngine.UIElements.TextShadow a, UnityEngine.UIElements.TextShadow b, float t);
                /*0x1824130*/ ValuesTextShadow();
                /*0x7379f0*/ System.Func<UnityEngine.UIElements.TextShadow, UnityEngine.UIElements.TextShadow, bool> get_SameFunc();
                /*0x1823ff0*/ void UpdateValues();
                /*0x1823eb0*/ void UpdateComputedStyle();
                /*0x1823de0*/ void UpdateComputedStyle(int i);
            }

            class ValuesScale : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.UIElements.Scale>
            {
                /*0x88*/ System.Func<UnityEngine.UIElements.Scale, UnityEngine.UIElements.Scale, bool> <SameFunc>k__BackingField;

                static /*0x1823770*/ bool IsSame(UnityEngine.UIElements.Scale a, UnityEngine.UIElements.Scale b);
                static /*0x18237c0*/ UnityEngine.UIElements.Scale Lerp(UnityEngine.UIElements.Scale a, UnityEngine.UIElements.Scale b, float t);
                /*0x1823c60*/ ValuesScale();
                /*0x7379f0*/ System.Func<UnityEngine.UIElements.Scale, UnityEngine.UIElements.Scale, bool> get_SameFunc();
                /*0x1823980*/ void UpdateComputedStyle();
                /*0x18238d0*/ void UpdateComputedStyle(int i);
                /*0x1823a90*/ void UpdateValues();
            }

            class ValuesRotate : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.UIElements.Rotate>
            {
                /*0x88*/ System.Func<UnityEngine.UIElements.Rotate, UnityEngine.UIElements.Rotate, bool> <SameFunc>k__BackingField;

                static /*0x18112b0*/ bool IsSame(UnityEngine.UIElements.Rotate a, UnityEngine.UIElements.Rotate b);
                static /*0x1823270*/ UnityEngine.UIElements.Rotate Lerp(UnityEngine.UIElements.Rotate a, UnityEngine.UIElements.Rotate b, float t);
                /*0x18236d0*/ ValuesRotate();
                /*0x7379f0*/ System.Func<UnityEngine.UIElements.Rotate, UnityEngine.UIElements.Rotate, bool> get_SameFunc();
                /*0x18233f0*/ void UpdateComputedStyle();
                /*0x1823330*/ void UpdateComputedStyle(int i);
                /*0x1823520*/ void UpdateValues();
            }

            class ValuesTranslate : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.UIElements.Translate>
            {
                /*0x88*/ System.Func<UnityEngine.UIElements.Translate, UnityEngine.UIElements.Translate, bool> <SameFunc>k__BackingField;

                static /*0x18247b0*/ bool IsSame(UnityEngine.UIElements.Translate a, UnityEngine.UIElements.Translate b);
                static /*0x1824800*/ UnityEngine.UIElements.Translate Lerp(UnityEngine.UIElements.Translate a, UnityEngine.UIElements.Translate b, float t);
                /*0x1824d40*/ ValuesTranslate();
                /*0x7379f0*/ System.Func<UnityEngine.UIElements.Translate, UnityEngine.UIElements.Translate, bool> get_SameFunc();
                /*0x1824780*/ bool ConvertUnits(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref UnityEngine.UIElements.Translate a, ref UnityEngine.UIElements.Translate b);
                /*0x18249c0*/ void UpdateComputedStyle();
                /*0x1824900*/ void UpdateComputedStyle(int i);
                /*0x1824af0*/ void UpdateValues();
            }

            class ValuesTransformOrigin : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.UIElements.TransformOrigin>
            {
                /*0x88*/ System.Func<UnityEngine.UIElements.TransformOrigin, UnityEngine.UIElements.TransformOrigin, bool> <SameFunc>k__BackingField;

                static /*0x181d9c0*/ bool IsSame(UnityEngine.UIElements.TransformOrigin a, UnityEngine.UIElements.TransformOrigin b);
                static /*0x1824200*/ UnityEngine.UIElements.TransformOrigin Lerp(UnityEngine.UIElements.TransformOrigin a, UnityEngine.UIElements.TransformOrigin b, float t);
                /*0x18246e0*/ ValuesTransformOrigin();
                /*0x7379f0*/ System.Func<UnityEngine.UIElements.TransformOrigin, UnityEngine.UIElements.TransformOrigin, bool> get_SameFunc();
                /*0x18241d0*/ bool ConvertUnits(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref UnityEngine.UIElements.TransformOrigin a, ref UnityEngine.UIElements.TransformOrigin b);
                /*0x18243b0*/ void UpdateComputedStyle();
                /*0x18242f0*/ void UpdateComputedStyle(int i);
                /*0x18244e0*/ void UpdateValues();
            }

            class ValuesBackgroundPosition : UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesDiscrete<UnityEngine.UIElements.BackgroundPosition>
            {
                /*0x1821320*/ ValuesBackgroundPosition();
                /*0x1821140*/ void UpdateComputedStyle();
                /*0x1821260*/ void UpdateComputedStyle(int i);
            }

            class ValuesBackgroundRepeat : UnityEngine.UIElements.StylePropertyAnimationSystem.ValuesDiscrete<UnityEngine.UIElements.BackgroundRepeat>
            {
                /*0x1821500*/ ValuesBackgroundRepeat();
                /*0x1821400*/ void UpdateComputedStyle();
                /*0x1821360*/ void UpdateComputedStyle(int i);
            }

            class ValuesBackgroundSize : UnityEngine.UIElements.StylePropertyAnimationSystem.Values<UnityEngine.UIElements.BackgroundSize>
            {
                /*0x88*/ System.Func<UnityEngine.UIElements.BackgroundSize, UnityEngine.UIElements.BackgroundSize, bool> <SameFunc>k__BackingField;

                static /*0x1821570*/ bool IsSame(UnityEngine.UIElements.BackgroundSize a, UnityEngine.UIElements.BackgroundSize b);
                static /*0x18215b0*/ UnityEngine.UIElements.BackgroundSize Lerp(UnityEngine.UIElements.BackgroundSize a, UnityEngine.UIElements.BackgroundSize b, float t);
                /*0x1821b00*/ ValuesBackgroundSize();
                /*0x7379f0*/ System.Func<UnityEngine.UIElements.BackgroundSize, UnityEngine.UIElements.BackgroundSize, bool> get_SameFunc();
                /*0x1821540*/ bool ConvertUnits(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref UnityEngine.UIElements.BackgroundSize a, ref UnityEngine.UIElements.BackgroundSize b);
                /*0x18217a0*/ void UpdateComputedStyle();
                /*0x18216e0*/ void UpdateComputedStyle(int i);
                /*0x18218d0*/ void UpdateValues();
            }
        }

        struct StylePropertyName : System.IEquatable<UnityEngine.UIElements.StylePropertyName>
        {
            /*0x10*/ UnityEngine.UIElements.StyleSheets.StylePropertyId <id>k__BackingField;
            /*0x18*/ string <name>k__BackingField;

            static /*0x18153a0*/ UnityEngine.UIElements.StyleSheets.StylePropertyId StylePropertyIdFromString(string name);
            static /*0x1815390*/ bool op_Equality(UnityEngine.UIElements.StylePropertyName lhs, UnityEngine.UIElements.StylePropertyName rhs);
            static /*0x1815610*/ bool op_Inequality(UnityEngine.UIElements.StylePropertyName lhs, UnityEngine.UIElements.StylePropertyName rhs);
            static /*0x18155d0*/ UnityEngine.UIElements.StylePropertyName op_Implicit(string name);
            /*0x1815510*/ StylePropertyName(UnityEngine.UIElements.StyleSheets.StylePropertyId stylePropertyId);
            /*0x1815440*/ StylePropertyName(string name);
            /*0x6bba50*/ UnityEngine.UIElements.StyleSheets.StylePropertyId get_id();
            /*0xa5a7f0*/ string get_name();
            /*0x15d3b80*/ int GetHashCode();
            /*0x1815300*/ bool Equals(object other);
            /*0x1815390*/ bool Equals(UnityEngine.UIElements.StylePropertyName other);
            /*0xfbbe70*/ string ToString();
        }

        enum Salt
        {
            TagNameSalt = 13,
            IdSalt = 17,
            ClassSalt = 19,
        }

        struct Hashes
        {
            static int kSize = 4;
            /*0x10*/ UnityEngine.UIElements.Hashes.<hashes> hashes;

            struct <hashes>e__FixedBuffer
            {
                /*0x10*/ int FixedElementField;
            }
        }

        class StyleComplexSelector : UnityEngine.ISerializationCallbackReceiver
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleComplexSelector.PseudoStateData> s_PseudoStates;
            static /*0x8*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSelectorPart> m_HashList;
            /*0x10*/ UnityEngine.UIElements.Hashes ancestorHashes;
            /*0x20*/ int m_Specificity;
            /*0x28*/ UnityEngine.UIElements.StyleRule <rule>k__BackingField;
            /*0x30*/ bool m_isSimple;
            /*0x38*/ UnityEngine.UIElements.StyleSelector[] m_Selectors;
            /*0x40*/ int ruleIndex;
            /*0x48*/ UnityEngine.UIElements.StyleComplexSelector nextInTable;
            /*0x50*/ int orderInStyleSheet;

            static /*0x1812da0*/ StyleComplexSelector();
            static /*0x1812bc0*/ int StyleSelectorPartCompare(UnityEngine.UIElements.StyleSelectorPart x, UnityEngine.UIElements.StyleSelectorPart y);
            /*0x32f970*/ StyleComplexSelector();
            /*0xca7c70*/ int get_specificity();
            /*0x79a150*/ UnityEngine.UIElements.StyleRule get_rule();
            /*0x98b030*/ void set_rule(UnityEngine.UIElements.StyleRule value);
            /*0x15f1320*/ bool get_isSimple();
            /*0x16345e0*/ UnityEngine.UIElements.StyleSelector[] get_selectors();
            /*0x1812e30*/ void set_selectors(UnityEngine.UIElements.StyleSelector[] value);
            /*0x32d010*/ void OnBeforeSerialize();
            /*0x1812b90*/ void OnAfterDeserialize();
            /*0x1811ef0*/ void CachePseudoStateMasks();
            /*0x1812c10*/ string ToString();
            /*0x18125c0*/ void CalculateHashes();

            struct PseudoStateData
            {
                /*0x10*/ UnityEngine.UIElements.PseudoStates state;
                /*0x14*/ bool negate;

                /*0xa59d90*/ PseudoStateData(UnityEngine.UIElements.PseudoStates state, bool negate);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.StyleComplexSelector.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.UIElements.StyleSelector, string> <>9__24_0;
                static /*0x10*/ System.Predicate<UnityEngine.UIElements.StyleSelectorPart> <>9__27_0;

                static /*0x181e540*/ <>c();
                /*0x32f970*/ <>c();
                /*0x181e4a0*/ string <ToString>b__24_0(UnityEngine.UIElements.StyleSelector x);
                /*0x181e460*/ bool <CalculateHashes>b__27_0(UnityEngine.UIElements.StyleSelectorPart p);
            }
        }

        class StyleProperty
        {
            /*0x10*/ string m_Name;
            /*0x18*/ int m_Line;
            /*0x20*/ UnityEngine.UIElements.StyleValueHandle[] m_Values;
            /*0x28*/ bool isCustomProperty;
            /*0x29*/ bool requireVariableResolve;

            /*0x32f970*/ StyleProperty();
            /*0x9e3110*/ string get_name();
            /*0x15fe5a0*/ UnityEngine.UIElements.StyleValueHandle[] get_values();
        }

        class StyleRule
        {
            /*0x10*/ UnityEngine.UIElements.StyleProperty[] m_Properties;
            /*0x18*/ int line;
            /*0x1c*/ int customPropertiesCount;

            /*0x32f970*/ StyleRule();
            /*0x9e3110*/ UnityEngine.UIElements.StyleProperty[] get_properties();
        }

        class StyleSelector
        {
            /*0x10*/ UnityEngine.UIElements.StyleSelectorPart[] m_Parts;
            /*0x18*/ UnityEngine.UIElements.StyleSelectorRelationship m_PreviousRelationship;
            /*0x1c*/ int pseudoStateMask;
            /*0x20*/ int negatedPseudoStateMask;

            /*0x18161b0*/ StyleSelector();
            /*0x9e3110*/ UnityEngine.UIElements.StyleSelectorPart[] get_parts();
            /*0x9f12f0*/ void set_parts(UnityEngine.UIElements.StyleSelectorPart[] value);
            /*0xbe6cb0*/ UnityEngine.UIElements.StyleSelectorRelationship get_previousRelationship();
            /*0x8a5c50*/ void set_previousRelationship(UnityEngine.UIElements.StyleSelectorRelationship value);
            /*0x1816050*/ string ToString();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.StyleSelector.<> <>9;
                static /*0x8*/ System.Func<UnityEngine.UIElements.StyleSelectorPart, string> <>9__10_0;

                static /*0x181e4d0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x181e480*/ string <ToString>b__10_0(UnityEngine.UIElements.StyleSelectorPart p);
            }
        }

        struct StyleSelectorPart
        {
            /*0x10*/ string m_Value;
            /*0x18*/ UnityEngine.UIElements.StyleSelectorType m_Type;
            /*0x20*/ object tempData;

            static /*0x1815e00*/ UnityEngine.UIElements.StyleSelectorPart CreateClass(string className);
            static /*0x1815e60*/ UnityEngine.UIElements.StyleSelectorPart CreateId(string Id);
            static /*0x1815ec0*/ UnityEngine.UIElements.StyleSelectorPart CreatePredicate(object predicate);
            /*0x69af20*/ string get_value();
            /*0xb73eb0*/ UnityEngine.UIElements.StyleSelectorType get_type();
            /*0xf0fbd0*/ void set_type(UnityEngine.UIElements.StyleSelectorType value);
            /*0x1815f10*/ string ToString();
        }

        enum StyleSelectorRelationship
        {
            None = 0,
            Child = 1,
            Descendent = 2,
        }

        enum StyleSelectorType
        {
            Unknown = 0,
            Wildcard = 1,
            Type = 2,
            Class = 3,
            PseudoClass = 4,
            RecursivePseudoClass = 5,
            ID = 6,
            Predicate = 7,
        }

        class StyleSheet : UnityEngine.ScriptableObject
        {
            static /*0x0*/ string kCustomPropertyMarker;
            /*0x18*/ bool m_ImportedWithErrors;
            /*0x19*/ bool m_ImportedWithWarnings;
            /*0x20*/ UnityEngine.UIElements.StyleRule[] m_Rules;
            /*0x28*/ UnityEngine.UIElements.StyleComplexSelector[] m_ComplexSelectors;
            /*0x30*/ float[] floats;
            /*0x38*/ UnityEngine.UIElements.StyleSheets.Dimension[] dimensions;
            /*0x40*/ UnityEngine.Color[] colors;
            /*0x48*/ string[] strings;
            /*0x50*/ UnityEngine.Object[] assets;
            /*0x58*/ UnityEngine.UIElements.StyleSheet.ImportStruct[] imports;
            /*0x60*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheet> m_FlattenedImportedStyleSheets;
            /*0x68*/ int m_ContentHash;
            /*0x70*/ UnityEngine.UIElements.StyleSheets.ScalableImage[] scalableImages;
            /*0x78*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleComplexSelector> orderedNameSelectors;
            /*0x80*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleComplexSelector> orderedTypeSelectors;
            /*0x88*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleComplexSelector> orderedClassSelectors;
            /*0x90*/ bool m_IsDefaultStyleSheet;

            static /*0x18175f0*/ StyleSheet();
            static /*0x18161c0*/ bool CustomStartsWith(string originalString, string pattern);
            /*0x533ec0*/ StyleSheet();
            /*0x169ed30*/ bool get_importedWithErrors();
            /*0xdd5230*/ void set_importedWithErrors(bool value);
            /*0x1709be0*/ bool get_importedWithWarnings();
            /*0x10a6600*/ void set_importedWithWarnings(bool value);
            /*0x15fe5a0*/ UnityEngine.UIElements.StyleRule[] get_rules();
            /*0x18177b0*/ void set_rules(UnityEngine.UIElements.StyleRule[] value);
            /*0x15f1340*/ UnityEngine.UIElements.StyleComplexSelector[] get_complexSelectors();
            /*0x1817670*/ void set_complexSelectors(UnityEngine.UIElements.StyleComplexSelector[] value);
            /*0x16345c0*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheet> get_flattenedRecursiveImports();
            /*0x161ea10*/ int get_contentHash();
            /*0x1355400*/ void set_contentHash(int value);
            /*0x1817660*/ bool get_isDefaultStyleSheet();
            /*0x18176a0*/ void set_isDefaultStyleSheet(bool value);
            /*0x2a5510*/ bool TryCheckAccess<T>(T[] list, UnityEngine.UIElements.StyleValueType type, UnityEngine.UIElements.StyleValueHandle handle, ref T value);
            /*0x2a5510*/ T CheckAccess<T>(T[] list, UnityEngine.UIElements.StyleValueType type, UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1816440*/ void OnEnable();
            /*0x18163c0*/ void FlattenImportedStyleSheetsRecursive();
            /*0x1816290*/ void FlattenImportedStyleSheetsRecursive(UnityEngine.UIElements.StyleSheet sheet);
            /*0x1816b60*/ void SetupReferences();
            /*0x16e70d0*/ UnityEngine.UIElements.StyleValueKeyword ReadKeyword(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1816640*/ float ReadFloat(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x18173d0*/ bool TryReadFloat(UnityEngine.UIElements.StyleValueHandle handle, ref float value);
            /*0x1816530*/ UnityEngine.UIElements.StyleSheets.Dimension ReadDimension(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1817270*/ bool TryReadDimension(UnityEngine.UIElements.StyleValueHandle handle, ref UnityEngine.UIElements.StyleSheets.Dimension value);
            /*0x18164b0*/ UnityEngine.Color ReadColor(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1817200*/ bool TryReadColor(UnityEngine.UIElements.StyleValueHandle handle, ref UnityEngine.Color value);
            /*0x1816aa0*/ string ReadString(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1817510*/ bool TryReadString(UnityEngine.UIElements.StyleValueHandle handle, ref string value);
            /*0x18165e0*/ string ReadEnum(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1817360*/ bool TryReadEnum(UnityEngine.UIElements.StyleValueHandle handle, ref string value);
            /*0x1816b00*/ string ReadVariable(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1817580*/ bool TryReadVariable(UnityEngine.UIElements.StyleValueHandle handle, ref string value);
            /*0x18169c0*/ string ReadResourcePath(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x18174a0*/ bool TryReadResourcePath(UnityEngine.UIElements.StyleValueHandle handle, ref string value);
            /*0x1816450*/ UnityEngine.Object ReadAssetReference(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1816960*/ string ReadMissingAssetReferenceUrl(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1817190*/ bool TryReadAssetReference(UnityEngine.UIElements.StyleValueHandle handle, ref UnityEngine.Object value);
            /*0x16e70d0*/ UnityEngine.UIElements.StyleValueFunction ReadFunction(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x18166e0*/ string ReadFunctionName(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x1816a20*/ UnityEngine.UIElements.StyleSheets.ScalableImage ReadScalableImage(UnityEngine.UIElements.StyleValueHandle handle);

            struct ImportStruct
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheet styleSheet;
                /*0x18*/ string[] mediaQueries;
            }
        }

        enum StyleValueFunction
        {
            Unknown = 0,
            Var = 1,
            Env = 2,
            LinearGradient = 3,
        }

        class StyleValueFunctionExtension
        {
            static /*0x1818fa0*/ string ToUssString(UnityEngine.UIElements.StyleValueFunction svf);
        }

        struct StyleValueHandle
        {
            /*0x10*/ UnityEngine.UIElements.StyleValueType m_ValueType;
            /*0x14*/ int valueIndex;

            /*0x15d3b80*/ UnityEngine.UIElements.StyleValueType get_valueType();
            /*0x6bbd40*/ void set_valueType(UnityEngine.UIElements.StyleValueType value);
        }

        enum StyleValueKeyword
        {
            Inherit = 0,
            Initial = 1,
            Auto = 2,
            Unset = 3,
            True = 4,
            False = 5,
            None = 6,
        }

        class StyleValueKeywordExtension
        {
            static /*0x18190b0*/ string ToUssString(UnityEngine.UIElements.StyleValueKeyword svk);
        }

        enum StyleValueType
        {
            Invalid = 0,
            Keyword = 1,
            Float = 2,
            Dimension = 3,
            Color = 4,
            ResourcePath = 5,
            AssetReference = 6,
            Enum = 7,
            Variable = 8,
            String = 9,
            Function = 10,
            CommaSeparator = 11,
            ScalableImage = 12,
            MissingAssetReference = 13,
        }

        struct StyleVariable
        {
            /*0x10*/ string name;
            /*0x18*/ UnityEngine.UIElements.StyleSheet sheet;
            /*0x20*/ UnityEngine.UIElements.StyleValueHandle[] handles;

            /*0xd4aac0*/ StyleVariable(string name, UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles);
            /*0x181ac90*/ int GetHashCode();
        }

        class StyleVariableContext
        {
            static /*0x0*/ UnityEngine.UIElements.StyleVariableContext none;
            /*0x10*/ int m_VariableHash;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleVariable> m_Variables;
            /*0x20*/ System.Collections.Generic.List<int> m_SortedHash;
            /*0x28*/ System.Collections.Generic.List<int> m_UnsortedHash;

            static /*0x1819820*/ StyleVariableContext();
            static /*0x1819810*/ int <Add>g__ComputeOrderSensitiveHash|7_0(int index, ref UnityEngine.UIElements.StyleVariableContext.<> );
            /*0x1819aa0*/ StyleVariableContext();
            /*0x1819970*/ StyleVariableContext(UnityEngine.UIElements.StyleVariableContext other);
            /*0x1819360*/ void Add(UnityEngine.UIElements.StyleVariable sv);
            /*0x1819250*/ void AddInitialRange(UnityEngine.UIElements.StyleVariableContext other);
            /*0x1819650*/ void Clear();
            /*0x1819700*/ bool TryFindVariable(string name, ref UnityEngine.UIElements.StyleVariable v);
            /*0x15bceb0*/ int GetVariableHash();

            struct <>c__DisplayClass7_0
            {
                /*0x10*/ int hash;
            }
        }

        class StyleVariableResolver
        {
            static int kMaxResolves = 100;
            static /*0x0*/ UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxParser s_SyntaxParser;
            /*0x10*/ UnityEngine.UIElements.StyleSheets.StylePropertyValueMatcher m_Matcher;
            /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyValue> m_ResolvedValues;
            /*0x20*/ System.Collections.Generic.Stack<string> m_ResolvedVarStack;
            /*0x28*/ UnityEngine.UIElements.StyleProperty m_Property;
            /*0x30*/ System.Collections.Generic.Stack<UnityEngine.UIElements.StyleVariableResolver.ResolveContext> m_ContextStack;
            /*0x38*/ UnityEngine.UIElements.StyleVariableResolver.ResolveContext m_CurrentContext;
            /*0x48*/ UnityEngine.UIElements.StyleVariableContext <variableContext>k__BackingField;

            static /*0x181aad0*/ StyleVariableResolver();
            static /*0x1819d90*/ void ParseVarFunction(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles, ref int index, ref int argCount, ref string variableName);
            /*0x181ab50*/ StyleVariableResolver();
            /*0x995140*/ UnityEngine.UIElements.StyleSheet get_currentSheet();
            /*0xb61870*/ UnityEngine.UIElements.StyleValueHandle[] get_currentHandles();
            /*0x32f410*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyValue> get_resolvedValues();
            /*0x4e40d0*/ UnityEngine.UIElements.StyleVariableContext get_variableContext();
            /*0x4e4360*/ void set_variableContext(UnityEngine.UIElements.StyleVariableContext value);
            /*0x1819cc0*/ void Init(UnityEngine.UIElements.StyleProperty property, UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles);
            /*0x1819f70*/ void PushContext(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle[] handles);
            /*0x1819ee0*/ void PopContext();
            /*0x1819ba0*/ void AddValue(UnityEngine.UIElements.StyleValueHandle handle);
            /*0x181a3f0*/ bool ResolveVarFunction(ref int index);
            /*0x181a2b0*/ UnityEngine.UIElements.StyleVariableResolver.Result ResolveVarFunction(ref int index, int argc, string varName);
            /*0x181a950*/ bool ValidateResolvedValues();
            /*0x181a5d0*/ UnityEngine.UIElements.StyleVariableResolver.Result ResolveVariable(string variableName);
            /*0x181a020*/ UnityEngine.UIElements.StyleVariableResolver.Result ResolveFallback(ref int index);

            enum Result
            {
                Valid = 0,
                Invalid = 1,
                NotFound = 2,
            }

            struct ResolveContext
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheet sheet;
                /*0x18*/ UnityEngine.UIElements.StyleValueHandle[] handles;
            }
        }

        class ThemeStyleSheet : UnityEngine.UIElements.StyleSheet
        {
            /*0x181cd10*/ ThemeStyleSheet();
            /*0x181cce0*/ void OnEnable();
        }

        class TemplateContainer : UnityEngine.UIElements.BindableElement
        {
            /*0x3d8*/ string <templateId>k__BackingField;
            /*0x3e0*/ UnityEngine.UIElements.VisualElement m_ContentContainer;
            /*0x3e8*/ UnityEngine.UIElements.VisualTreeAsset m_TemplateSource;

            /*0x181ad80*/ TemplateContainer();
            /*0x181ad30*/ TemplateContainer(string templateId);
            /*0x16e01d0*/ string get_templateId();
            /*0x16f3c30*/ void set_templateId(string value);
            /*0x175e6f0*/ void set_templateSource(UnityEngine.UIElements.VisualTreeAsset value);
            /*0x181add0*/ UnityEngine.UIElements.VisualElement get_contentContainer();
            /*0x178e4e0*/ void SetContentContainer(UnityEngine.UIElements.VisualElement content);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.TemplateContainer, UnityEngine.UIElements.TemplateContainer.UxmlTraits>
            {
                /*0x1820b90*/ UxmlFactory();
                /*0x1820bd0*/ string get_uxmlName();
                /*0x1820c00*/ string get_uxmlQualifiedName();
            }

            class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
            {
                /*0x78*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Template;

                /*0x18210a0*/ UxmlTraits();
                /*0x1820c80*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        class PanelTextSettings : UnityEngine.TextCore.Text.TextSettings
        {
            static /*0x0*/ UnityEngine.UIElements.PanelTextSettings s_DefaultPanelTextSettings;
            static /*0x8*/ System.Func<string, UnityEngine.Object> EditorGUIUtilityLoad;
            static /*0x10*/ System.Func<UnityEngine.SystemLanguage> GetCurrentLanguage;
            static /*0x18*/ string s_DefaultEditorPanelTextSettingPath;

            static /*0x1810680*/ PanelTextSettings();
            static /*0x1810700*/ UnityEngine.UIElements.PanelTextSettings get_defaultPanelTextSettings();
            static /*0x1810080*/ void UpdateLocalizationFontAsset();
            /*0x18106f0*/ PanelTextSettings();
            /*0x1810070*/ UnityEngine.TextCore.Text.FontAsset GetCachedFontAsset(UnityEngine.Font font);
        }

        class TextEditingManipulator
        {
            /*0x10*/ UnityEngine.UIElements.TextElement m_TextElement;
            /*0x18*/ UnityEngine.UIElements.TextEditorEventHandler editingEventHandler;
            /*0x20*/ UnityEngine.TextEditingUtilities editingUtilities;
            /*0x28*/ bool m_TouchScreenTextFieldInitialized;
            /*0x30*/ UnityEngine.UIElements.IVisualElementScheduledItem m_HardwareKeyboardPoller;

            /*0x181b350*/ TextEditingManipulator(UnityEngine.UIElements.TextElement textElement);
            /*0x181b460*/ bool get_touchScreenTextFieldChanged();
            /*0x181af40*/ void InitTextEditorEventHandler();
            /*0x181ade0*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x181b020*/ void OnFocusInEvent(UnityEngine.UIElements.FocusInEvent _);
            /*0x181b2a0*/ void OnFocusOutEvent(UnityEngine.UIElements.FocusOutEvent _);
            /*0x181b300*/ void <OnFocusInEvent>b__10_0();
        }

        class TextSelectingManipulator
        {
            static int k_DragThresholdSqr = 16;
            /*0x10*/ UnityEngine.TextSelectingUtilities m_SelectingUtilities;
            /*0x18*/ bool selectAllOnMouseUp;
            /*0x20*/ UnityEngine.UIElements.TextElement m_TextElement;
            /*0x28*/ UnityEngine.Vector2 m_ClickStartPosition;
            /*0x30*/ bool m_Dragged;
            /*0x31*/ bool m_IsClicking;
            /*0x34*/ int m_ConsecutiveMouseDownCount;
            /*0x38*/ long m_LastMouseDownTimeStamp;
            /*0x40*/ UnityEngine.Event m_ImguiEvent;

            /*0x181c940*/ TextSelectingManipulator(UnityEngine.UIElements.TextElement textElement);
            /*0x14f46c0*/ bool get_isClicking();
            /*0x181ccb0*/ void set_isClicking(bool value);
            /*0x181cc50*/ int get_cursorIndex();
            /*0x181cc90*/ void set_cursorIndex(int value);
            /*0x181cc70*/ int get_selectIndex();
            /*0x181ccc0*/ void set_selectIndex(int value);
            /*0x181c660*/ void OnRevealCursor();
            /*0x181c690*/ void OnSelectIndexChange();
            /*0x181bca0*/ void OnCursorIndexChange();
            /*0x181c920*/ bool RevealCursor();
            /*0x181bbe0*/ bool HasSelection();
            /*0x181bbc0*/ bool HasFocus();
            /*0x181b500*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x181bec0*/ void OnFocusEvent(UnityEngine.UIElements.FocusEvent evt);
            /*0x181bc40*/ void OnBlurEvent(UnityEngine.UIElements.BlurEvent evt);
            /*0x181c020*/ void OnKeyDown(UnityEngine.UIElements.KeyDownEvent evt);
            /*0x181c090*/ void OnPointerDownEvent(UnityEngine.UIElements.PointerDownEvent evt);
            /*0x181c410*/ void OnPointerMoveEvent(UnityEngine.UIElements.PointerMoveEvent evt);
            /*0x181c5b0*/ void OnPointerUpEvent(UnityEngine.UIElements.PointerUpEvent evt);
            /*0x181c7a0*/ void OnValidateCommandEvent(UnityEngine.UIElements.ValidateCommandEvent evt);
            /*0x181bdb0*/ void OnExecuteCommandEvent(UnityEngine.UIElements.ExecuteCommandEvent evt);
            /*0x181bc00*/ bool MoveDistanceQualifiesForDrag(UnityEngine.Vector2 start, UnityEngine.Vector2 current);
        }

        class UITKTextHandle : UnityEngine.TextCore.Text.TextHandle
        {
            static /*0x0*/ float k_MinPadding;
            /*0x38*/ UnityEngine.Vector2 <MeasuredSizes>k__BackingField;
            /*0x40*/ UnityEngine.Vector2 <RoundedSizes>k__BackingField;
            /*0x48*/ UnityEngine.UIElements.TextElement m_TextElement;
            /*0x50*/ bool isOverridingCursor;
            /*0x54*/ int currentLinkIDHash;
            /*0x58*/ bool hasLinkTag;
            /*0x59*/ bool hasATag;

            static /*0x1820ab0*/ UITKTextHandle();
            /*0x1820af0*/ UITKTextHandle(UnityEngine.UIElements.TextElement te);
            /*0x1820b70*/ UnityEngine.Vector2 get_MeasuredSizes();
            /*0x995200*/ void set_MeasuredSizes(UnityEngine.Vector2 value);
            /*0x136e890*/ UnityEngine.Vector2 get_RoundedSizes();
            /*0xcf6ce0*/ void set_RoundedSizes(UnityEngine.Vector2 value);
            /*0x181eb30*/ float ComputeTextWidth(string textToMeasure, bool wordWrap, float width, float height);
            /*0x181ea20*/ float ComputeTextHeight(string textToMeasure, float width, float height);
            /*0x1820960*/ UnityEngine.TextCore.Text.TextInfo Update();
            /*0x181e830*/ void ATagOnPointerUp(UnityEngine.UIElements.PointerUpEvent pue);
            /*0x181e820*/ void ATagOnPointerOver(UnityEngine.UIElements.PointerOverEvent _);
            /*0x181e5b0*/ void ATagOnPointerMove(UnityEngine.UIElements.PointerMoveEvent pme);
            /*0x181e820*/ void ATagOnPointerOut(UnityEngine.UIElements.PointerOutEvent _);
            /*0x181fd50*/ void LinkTagOnPointerDown(UnityEngine.UIElements.PointerDownEvent pde);
            /*0x1820660*/ void LinkTagOnPointerUp(UnityEngine.UIElements.PointerUpEvent pue);
            /*0x1820020*/ void LinkTagOnPointerMove(UnityEngine.UIElements.PointerMoveEvent pme);
            /*0x1820510*/ void LinkTagOnPointerOut(UnityEngine.UIElements.PointerOutEvent poe);
            /*0x181f970*/ void HandleLinkTag();
            /*0x181f510*/ void HandleATag();
            /*0x181f410*/ UnityEngine.TextCore.Text.TextOverflowMode GetTextOverflowMode();
            /*0x181ec60*/ void ConvertUssToTextGenerationSettings(UnityEngine.TextCore.Text.TextGenerationSettings tgs);
            /*0x1820930*/ bool TextLibraryCanElide();
            /*0x181f1d0*/ float GetTextEffectPadding(UnityEngine.TextCore.Text.FontAsset fontAsset);
        }

        class TextUtilities
        {
            static /*0x16f4d90*/ UnityEngine.Vector2 MeasureVisualElementTextSize(UnityEngine.UIElements.TextElement te, string textToMeasure, float width, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float height, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);
            static /*0x16f42d0*/ UnityEngine.TextCore.Text.FontAsset GetFontAsset(UnityEngine.UIElements.VisualElement ve);
            static /*0x16f4cc0*/ bool IsFontAssigned(UnityEngine.UIElements.VisualElement ve);
            static /*0x16f4c00*/ UnityEngine.UIElements.PanelTextSettings GetTextSettingsFrom(UnityEngine.UIElements.VisualElement ve);
            static /*0x16f41c0*/ float ConvertPixelUnitsToTextCoreRelativeUnits(UnityEngine.UIElements.VisualElement ve, UnityEngine.TextCore.Text.FontAsset fontAsset);
            static /*0x16f4560*/ UnityEngine.UIElements.UIR.TextCoreSettings GetTextCoreSettingsForElement(UnityEngine.UIElements.VisualElement ve);
        }

        class TextElement : UnityEngine.UIElements.BindableElement, UnityEngine.UIElements.INotifyValueChanged<string>, UnityEngine.UIElements.ITextEdition, UnityEngine.UIElements.IExperimentalFeatures, UnityEngine.UIElements.ITextSelection
        {
            static /*0x0*/ string ussClassName;
            static /*0x8*/ string k_EllipsisText;
            /*0x3d8*/ UnityEngine.UIElements.UITKTextHandle <uitkTextHandle>k__BackingField;
            /*0x3e0*/ string m_Text;
            /*0x3e8*/ bool m_EnableRichText;
            /*0x3e9*/ bool m_ParseEscapeSequences;
            /*0x3ea*/ bool m_DisplayTooltipWhenElided;
            /*0x3eb*/ bool <isElided>k__BackingField;
            /*0x3f0*/ string elidedText;
            /*0x3f8*/ bool m_WasElided;
            /*0x400*/ UnityEngine.UIElements.TextEditingManipulator editingManipulator;
            /*0x408*/ bool m_Multiline;
            /*0x410*/ UnityEngine.TouchScreenKeyboard m_TouchScreenKeyboard;
            /*0x418*/ UnityEngine.TouchScreenKeyboardType m_KeyboardType;
            /*0x41c*/ bool m_HideMobileInput;
            /*0x41d*/ bool m_IsReadOnly;
            /*0x420*/ int m_MaxLength;
            /*0x424*/ bool <UnityEngine.UIElements.ITextEdition.isDelayed>k__BackingField;
            /*0x428*/ System.Func<char, bool> <UnityEngine.UIElements.ITextEdition.AcceptCharacter>k__BackingField;
            /*0x430*/ System.Action<bool> <UnityEngine.UIElements.ITextEdition.UpdateScrollOffset>k__BackingField;
            /*0x438*/ System.Action <UnityEngine.UIElements.ITextEdition.UpdateValueFromText>k__BackingField;
            /*0x440*/ System.Action <UnityEngine.UIElements.ITextEdition.UpdateTextFromValue>k__BackingField;
            /*0x448*/ System.Action <UnityEngine.UIElements.ITextEdition.MoveFocusToCompositeRoot>k__BackingField;
            /*0x450*/ string m_RenderedText;
            /*0x458*/ string m_OriginalText;
            /*0x460*/ char m_MaskChar;
            /*0x462*/ bool m_IsPassword;
            /*0x463*/ bool m_AutoCorrection;
            /*0x468*/ UnityEngine.UIElements.TextSelectingManipulator m_SelectingManipulator;
            /*0x470*/ bool m_IsSelectable;
            /*0x471*/ bool <UnityEngine.UIElements.ITextSelection.doubleClickSelectsWord>k__BackingField;
            /*0x472*/ bool <UnityEngine.UIElements.ITextSelection.tripleClickSelectsLine>k__BackingField;
            /*0x473*/ bool <UnityEngine.UIElements.ITextSelection.selectAllOnFocus>k__BackingField;
            /*0x474*/ bool <UnityEngine.UIElements.ITextSelection.selectAllOnMouseUp>k__BackingField;
            /*0x478*/ UnityEngine.Color m_SelectionColor;
            /*0x488*/ UnityEngine.Color m_CursorColor;
            /*0x498*/ float m_CursorWidth;

            static /*0x16f34c0*/ TextElement();
            /*0x16f3570*/ TextElement();
            /*0x16e01d0*/ UnityEngine.UIElements.UITKTextHandle get_uitkTextHandle();
            /*0x16f3c30*/ void set_uitkTextHandle(UnityEngine.UIElements.UITKTextHandle value);
            /*0x16f2020*/ void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e);
            /*0x16f3ab0*/ string get_text();
            /*0x16f3be0*/ void set_text(string value);
            /*0x16e01e0*/ bool get_enableRichText();
            /*0x16f3b30*/ void set_enableRichText(bool value);
            /*0x16f38d0*/ bool get_parseEscapeSequences();
            /*0x16f3b60*/ void set_parseEscapeSequences(bool value);
            /*0x16f37d0*/ bool get_displayTooltipWhenElided();
            /*0x16f3af0*/ void set_displayTooltipWhenElided(bool value);
            /*0x16f38c0*/ bool get_isElided();
            /*0x16f3b50*/ void set_isElided(bool value);
            /*0x16f1e40*/ void OnGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc);
            /*0x16f14a0*/ string ElideText(string drawText, string ellipsisText, float width, UnityEngine.UIElements.TextOverflowPosition textOverflowPosition);
            /*0x16f32b0*/ void UpdateTooltip();
            /*0x16f3330*/ void UpdateVisibleText();
            /*0x16f21d0*/ bool ShouldElide();
            /*0x16f3840*/ bool get_hasFocus();
            /*0x16f1e10*/ UnityEngine.Vector2 MeasureTextSize(string textToMeasure, float width, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float height, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);
            /*0x16f0620*/ UnityEngine.Vector2 DoMeasure(float desiredWidth, UnityEngine.UIElements.VisualElement.MeasureMode widthMode, float desiredHeight, UnityEngine.UIElements.VisualElement.MeasureMode heightMode);
            /*0x16f2340*/ string UnityEngine.UIElements.INotifyValueChanged<System.String>.get_value();
            /*0x16f2390*/ void UnityEngine.UIElements.INotifyValueChanged<System.String>.set_value(string value);
            /*0x16f2220*/ void UnityEngine.UIElements.INotifyValueChanged<System.String>.SetValueWithoutNotify(string newValue);
            /*0x621ca0*/ UnityEngine.UIElements.ITextEdition get_edition();
            /*0x16f2900*/ bool UnityEngine.UIElements.ITextEdition.get_multiline();
            /*0x16f2c10*/ void UnityEngine.UIElements.ITextEdition.set_multiline(bool value);
            /*0x16f28e0*/ UnityEngine.TouchScreenKeyboardType UnityEngine.UIElements.ITextEdition.get_keyboardType();
            /*0x16f2b00*/ void UnityEngine.UIElements.ITextEdition.set_keyboardType(UnityEngine.TouchScreenKeyboardType value);
            /*0x16f2820*/ bool UnityEngine.UIElements.ITextEdition.get_hideMobileInput();
            /*0x16f29c0*/ void UnityEngine.UIElements.ITextEdition.set_hideMobileInput(bool value);
            /*0x16f28b0*/ bool UnityEngine.UIElements.ITextEdition.get_isReadOnly();
            /*0x16f2a70*/ void UnityEngine.UIElements.ITextEdition.set_isReadOnly(bool value);
            /*0x16f20e0*/ void ProcessMenuCommand(string command);
            /*0x16f05e0*/ void Cut(UnityEngine.UIElements.DropdownMenuAction a);
            /*0x16f0510*/ void Copy(UnityEngine.UIElements.DropdownMenuAction a);
            /*0x16f20a0*/ void Paste(UnityEngine.UIElements.DropdownMenuAction a);
            /*0x16f0140*/ void BuildContextualMenu(UnityEngine.UIElements.ContextualMenuPopulateEvent evt);
            /*0x16f0550*/ UnityEngine.UIElements.DropdownMenuAction.Status CutActionStatus(UnityEngine.UIElements.DropdownMenuAction a);
            /*0x16f0480*/ UnityEngine.UIElements.DropdownMenuAction.Status CopyActionStatus(UnityEngine.UIElements.DropdownMenuAction a);
            /*0x16f2030*/ UnityEngine.UIElements.DropdownMenuAction.Status PasteActionStatus(UnityEngine.UIElements.DropdownMenuAction a);
            /*0x16f1910*/ void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            /*0x16f28f0*/ int UnityEngine.UIElements.ITextEdition.get_maxLength();
            /*0x16f2b80*/ void UnityEngine.UIElements.ITextEdition.set_maxLength(int value);
            /*0x16f2890*/ bool UnityEngine.UIElements.ITextEdition.get_isDelayed();
            /*0x16f2a40*/ void UnityEngine.UIElements.ITextEdition.set_isDelayed(bool value);
            /*0x16f25d0*/ void UnityEngine.UIElements.ITextEdition.SaveValueAndText();
            /*0x16f25b0*/ void UnityEngine.UIElements.ITextEdition.RestoreValueAndText();
            /*0x16f27f0*/ System.Func<char, bool> UnityEngine.UIElements.ITextEdition.get_AcceptCharacter();
            /*0x16f2910*/ void UnityEngine.UIElements.ITextEdition.set_AcceptCharacter(System.Func<char, bool> value);
            /*0x16f2800*/ System.Action<bool> UnityEngine.UIElements.ITextEdition.get_UpdateScrollOffset();
            /*0x16f2950*/ void UnityEngine.UIElements.ITextEdition.set_UpdateScrollOffset(System.Action<bool> value);
            /*0xbe0820*/ System.Action UnityEngine.UIElements.ITextEdition.get_UpdateValueFromText();
            /*0x16f2990*/ void UnityEngine.UIElements.ITextEdition.set_UpdateValueFromText(System.Action value);
            /*0xbe0810*/ System.Action UnityEngine.UIElements.ITextEdition.get_UpdateTextFromValue();
            /*0x16f2970*/ void UnityEngine.UIElements.ITextEdition.set_UpdateTextFromValue(System.Action value);
            /*0xcb4330*/ System.Action UnityEngine.UIElements.ITextEdition.get_MoveFocusToCompositeRoot();
            /*0x16f2930*/ void UnityEngine.UIElements.ITextEdition.set_MoveFocusToCompositeRoot(System.Action value);
            /*0x16f2610*/ void UnityEngine.UIElements.ITextEdition.UpdateText(string value);
            /*0x16f2530*/ string UnityEngine.UIElements.ITextEdition.CullString(string s);
            /*0x16f2b10*/ void UnityEngine.UIElements.ITextEdition.set_maskChar(char value);
            /*0x16f37e0*/ char get_effectiveMaskChar();
            /*0x16f28a0*/ bool UnityEngine.UIElements.ITextEdition.get_isPassword();
            /*0x16f2a50*/ void UnityEngine.UIElements.ITextEdition.set_isPassword(bool value);
            /*0x16f2810*/ bool UnityEngine.UIElements.ITextEdition.get_autoCorrection();
            /*0x16f29b0*/ void UnityEngine.UIElements.ITextEdition.set_autoCorrection(bool value);
            /*0x16f38e0*/ string get_renderedText();
            /*0x16f3b80*/ void set_renderedText(string value);
            /*0xc9b800*/ string get_originalText();
            /*0x621ca0*/ UnityEngine.UIElements.ITextSelection get_selection();
            /*0x16f2f30*/ bool UnityEngine.UIElements.ITextSelection.get_isSelectable();
            /*0x16f3170*/ void UnityEngine.UIElements.ITextSelection.set_isSelectable(bool value);
            /*0x16f2df0*/ int UnityEngine.UIElements.ITextSelection.get_cursorIndex();
            /*0x16f30f0*/ void UnityEngine.UIElements.ITextSelection.set_cursorIndex(int value);
            /*0x16f2fe0*/ int UnityEngine.UIElements.ITextSelection.get_selectIndex();
            /*0x16f31b0*/ void UnityEngine.UIElements.ITextSelection.set_selectIndex(int value);
            /*0x16f2d00*/ void UnityEngine.UIElements.ITextSelection.SelectAll();
            /*0x16f2d70*/ void UnityEngine.UIElements.ITextSelection.SelectNone();
            /*0x16f2c90*/ bool UnityEngine.UIElements.ITextSelection.HasSelection();
            /*0x16f2f20*/ bool UnityEngine.UIElements.ITextSelection.get_doubleClickSelectsWord();
            /*0x16f3060*/ bool UnityEngine.UIElements.ITextSelection.get_tripleClickSelectsLine();
            /*0x16f2fc0*/ bool UnityEngine.UIElements.ITextSelection.get_selectAllOnFocus();
            /*0x16f3190*/ void UnityEngine.UIElements.ITextSelection.set_selectAllOnFocus(bool value);
            /*0x16f2fd0*/ bool UnityEngine.UIElements.ITextSelection.get_selectAllOnMouseUp();
            /*0x16f31a0*/ void UnityEngine.UIElements.ITextSelection.set_selectAllOnMouseUp(bool value);
            /*0x16f2e60*/ UnityEngine.Vector2 UnityEngine.UIElements.ITextSelection.get_cursorPosition();
            /*0x16f2f50*/ float UnityEngine.UIElements.ITextSelection.get_lineHeightAtCursorPosition();
            /*0x16f3050*/ UnityEngine.Color UnityEngine.UIElements.ITextSelection.get_selectionColor();
            /*0x16f3230*/ void UnityEngine.UIElements.ITextSelection.set_selectionColor(UnityEngine.Color value);
            /*0x16f2de0*/ UnityEngine.Color UnityEngine.UIElements.ITextSelection.get_cursorColor();
            /*0x16f3070*/ void UnityEngine.UIElements.ITextSelection.set_cursorColor(UnityEngine.Color value);
            /*0x16f2f10*/ float UnityEngine.UIElements.ITextSelection.get_cursorWidth();
            /*0x16f3a30*/ UnityEngine.UIElements.TextSelectingManipulator get_selectingManipulator();
            /*0x16f0b40*/ void DrawHighlighting(UnityEngine.UIElements.MeshGenerationContext mgc);
            /*0x16f07c0*/ void DrawCaret(UnityEngine.UIElements.MeshGenerationContext mgc);
            /*0x16f1bc0*/ int GetLastCharacterAt(int lineIndex);

            class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.TextElement, UnityEngine.UIElements.TextElement.UxmlTraits>
            {
                /*0x16feec0*/ UxmlFactory();
            }

            class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
            {
                /*0x78*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Text;
                /*0x80*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_EnableRichText;
                /*0x88*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_ParseEscapeSequences;
                /*0x90*/ UnityEngine.UIElements.UxmlBoolAttributeDescription m_DisplayTooltipWhenElided;

                /*0x1700f80*/ UxmlTraits();
                /*0x1700d40*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            }
        }

        interface ITextEdition
        {
            /*0x17cb40*/ bool get_multiline();
            /*0x181190*/ void set_multiline(bool value);
            /*0x17cb40*/ bool get_isReadOnly();
            /*0x181190*/ void set_isReadOnly(bool value);
            /*0x180980*/ int get_maxLength();
            /*0x17aa40*/ void set_maxLength(int value);
            /*0x17cb40*/ bool get_isDelayed();
            /*0x181190*/ void set_isDelayed(bool value);
            /*0x180fc0*/ void SaveValueAndText();
            /*0x180fc0*/ void RestoreValueAndText();
            /*0x1803b0*/ System.Func<char, bool> get_AcceptCharacter();
            /*0x17aec0*/ void set_AcceptCharacter(System.Func<char, bool> value);
            /*0x1803b0*/ System.Action<bool> get_UpdateScrollOffset();
            /*0x17aec0*/ void set_UpdateScrollOffset(System.Action<bool> value);
            /*0x1803b0*/ System.Action get_UpdateValueFromText();
            /*0x17aec0*/ void set_UpdateValueFromText(System.Action value);
            /*0x1803b0*/ System.Action get_UpdateTextFromValue();
            /*0x17aec0*/ void set_UpdateTextFromValue(System.Action value);
            /*0x1803b0*/ System.Action get_MoveFocusToCompositeRoot();
            /*0x17aec0*/ void set_MoveFocusToCompositeRoot(System.Action value);
            /*0x17aec0*/ void UpdateText(string value);
            /*0x1858d0*/ string CullString(string s);
            void set_maskChar(char value);
            /*0x17cb40*/ bool get_isPassword();
            /*0x181190*/ void set_isPassword(bool value);
            /*0x16efbd0*/ bool get_autoCorrection();
            /*0x16efde0*/ void set_autoCorrection(bool value);
            /*0x16efc80*/ bool get_hideMobileInput();
            /*0x16efe90*/ void set_hideMobileInput(bool value);
            /*0x16efd30*/ UnityEngine.TouchScreenKeyboardType get_keyboardType();
            /*0x16eff40*/ void set_keyboardType(UnityEngine.TouchScreenKeyboardType value);
        }

        interface ITextSelection
        {
            /*0x17cb40*/ bool get_isSelectable();
            /*0x181190*/ void set_isSelectable(bool value);
            UnityEngine.Color get_cursorColor();
            /*0x17aec0*/ void set_cursorColor(UnityEngine.Color value);
            /*0x180980*/ int get_cursorIndex();
            /*0x17aa40*/ void set_cursorIndex(int value);
            /*0x17cb40*/ bool get_doubleClickSelectsWord();
            /*0x180980*/ int get_selectIndex();
            /*0x17aa40*/ void set_selectIndex(int value);
            UnityEngine.Color get_selectionColor();
            /*0x17aec0*/ void set_selectionColor(UnityEngine.Color value);
            /*0x17cb40*/ bool get_tripleClickSelectsLine();
            /*0x17cb40*/ bool HasSelection();
            /*0x180fc0*/ void SelectAll();
            /*0x180fc0*/ void SelectNone();
            /*0x17cb40*/ bool get_selectAllOnFocus();
            /*0x181190*/ void set_selectAllOnFocus(bool value);
            /*0x17cb40*/ bool get_selectAllOnMouseUp();
            /*0x181190*/ void set_selectAllOnMouseUp(bool value);
            UnityEngine.Vector2 get_cursorPosition();
            /*0x17fc30*/ float get_lineHeightAtCursorPosition();
            /*0x17fc30*/ float get_cursorWidth();
        }

        struct TextShadow : System.IEquatable<UnityEngine.UIElements.TextShadow>
        {
            /*0x10*/ UnityEngine.Vector2 offset;
            /*0x18*/ float blurRadius;
            /*0x1c*/ UnityEngine.Color color;

            static /*0x16f40d0*/ bool op_Equality(UnityEngine.UIElements.TextShadow style1, UnityEngine.UIElements.TextShadow style2);
            static /*0x16f4100*/ bool op_Inequality(UnityEngine.UIElements.TextShadow style1, UnityEngine.UIElements.TextShadow style2);
            static /*0x16f3eb0*/ UnityEngine.UIElements.TextShadow LerpUnclamped(UnityEngine.UIElements.TextShadow a, UnityEngine.UIElements.TextShadow b, float t);
            /*0x16f3c50*/ bool Equals(object obj);
            /*0x16f3d00*/ bool Equals(UnityEngine.UIElements.TextShadow other);
            /*0x16f3dc0*/ int GetHashCode();
            /*0x16f3ff0*/ string ToString();
        }

        class UIElementsBridge
        {
            /*0x32f970*/ UIElementsBridge();
            /*0x17aa40*/ void SetWantsMouseJumping(int value);
        }

        class RuntimeUIElementsBridge : UnityEngine.UIElements.UIElementsBridge
        {
            /*0x32f970*/ RuntimeUIElementsBridge();
            /*0x32d010*/ void SetWantsMouseJumping(int value);
        }

        class UIElementsPackageUtility
        {
            static /*0x0*/ bool <IsUIEPackageLoaded>k__BackingField;
            static /*0x8*/ string <EditorResourcesBasePath>k__BackingField;

            static /*0x16f7190*/ UIElementsPackageUtility();
            static /*0x16f72e0*/ bool get_IsUIEPackageLoaded();
            static /*0x16f73a0*/ void set_IsUIEPackageLoaded(bool value);
            static /*0x16f7290*/ string get_EditorResourcesBasePath();
            static /*0x16f7330*/ void set_EditorResourcesBasePath(string value);
            static /*0x16f7190*/ void Refresh();
        }

        class UIElementsRuntimeUtility
        {
            static /*0x0*/ System.Action<UnityEngine.UIElements.BaseRuntimePanel> onCreatePanel;
            static /*0x8*/ bool s_RegisteredPlayerloopCallback;
            static /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.Panel> s_SortedRuntimePanels;
            static /*0x18*/ bool s_PanelOrderingDirty;
            static /*0x1c*/ int s_ResolvedSortingIndexMax;
            static /*0x20*/ string s_RepaintProfilerMarkerName;
            static /*0x28*/ Unity.Profiling.ProfilerMarker s_RepaintProfilerMarker;
            static /*0x30*/ int currentOverlayIndex;
            static /*0x38*/ UnityEngine.Object <activeEventSystem>k__BackingField;
            static /*0x40*/ UnityEngine.UIElements.DefaultEventSystem s_DefaultEventSystem;
            static /*0x48*/ System.Collections.Generic.List<UnityEngine.UIElements.PanelSettings> s_PotentiallyEmptyPanelSettings;

            static /*0x16f9630*/ UIElementsRuntimeUtility();
            static /*0x16f9a80*/ void add_onCreatePanel(System.Action<UnityEngine.UIElements.BaseRuntimePanel> value);
            static /*0x16f9d60*/ void remove_onCreatePanel(System.Action<UnityEngine.UIElements.BaseRuntimePanel> value);
            static /*0x16f7460*/ UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent);
            static /*0x16f7660*/ UnityEngine.UIElements.BaseRuntimePanel FindOrCreateRuntimePanel(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.UIElementsRuntimeUtility.CreateRuntimePanelDelegate createDelegate);
            static /*0x16f74d0*/ void DisposeRuntimePanel(UnityEngine.ScriptableObject ownerObject);
            static /*0x16f7eb0*/ void RegisterCachedPanelInternal(int instanceID, UnityEngine.UIElements.IPanel panel);
            static /*0x16f83c0*/ void RemoveCachedPanelInternal(int instanceID);
            static /*0x16f8950*/ void RepaintOffscreenPanels();
            static /*0x16f8b50*/ void RepaintOverlayPanel(UnityEngine.UIElements.BaseRuntimePanel panel);
            static /*0x16f7400*/ void BeginRenderOverlays(int displayIndex);
            static /*0x16f8780*/ void RenderOverlaysBeforePriority(int displayIndex, float maxPriority);
            static /*0x16f75f0*/ void EndRenderOverlays(int displayIndex);
            static /*0x16f9b90*/ UnityEngine.Object get_activeEventSystem();
            static /*0x16f9e70*/ void set_activeEventSystem(UnityEngine.Object value);
            static /*0x16f9cb0*/ bool get_useDefaultEventSystem();
            static /*0x16f80d0*/ void RegisterEventSystem(UnityEngine.Object eventSystem);
            static /*0x16f9100*/ void UnregisterEventSystem(UnityEngine.Object eventSystem);
            static /*0x16f9be0*/ UnityEngine.UIElements.DefaultEventSystem get_defaultEventSystem();
            static /*0x16f92a0*/ void UpdateRuntimePanels();
            static /*0x16f7920*/ void MarkPotentiallyEmpty(UnityEngine.UIElements.PanelSettings settings);
            static /*0x16f85b0*/ void RemoveUnusedPanels();
            static /*0x16f8320*/ void RegisterPlayerloopCallback();
            static /*0x16f9240*/ void UnregisterPlayerloopCallback();
            static /*0x16f8db0*/ void SetPanelOrderingDirty();
            static /*0x16f7880*/ System.Collections.Generic.List<UnityEngine.UIElements.Panel> GetSortedPlayerPanels();
            static /*0x16f8e00*/ void SortPanels();
            static /*0x16f7a50*/ UnityEngine.Vector2 MultiDisplayBottomLeftToPanelPosition(UnityEngine.Vector2 position, ref System.Nullable<int> targetDisplay);
            static /*0x16f7d00*/ UnityEngine.Vector2 MultiDisplayToLocalScreenPosition(UnityEngine.Vector2 position, ref System.Nullable<int> targetDisplay);
            static /*0x16f8cd0*/ UnityEngine.Vector2 ScreenBottomLeftToPanelPosition(UnityEngine.Vector2 position, int targetDisplay);
            static /*0x16f8cb0*/ UnityEngine.Vector2 ScreenBottomLeftToPanelDelta(UnityEngine.Vector2 delta);

            class CreateRuntimePanelDelegate : System.MulticastDelegate
            {
                /*0x9dc850*/ CreateRuntimePanelDelegate(object object, nint method);
                /*0x720980*/ UnityEngine.UIElements.BaseRuntimePanel Invoke(UnityEngine.ScriptableObject ownerObject);
            }

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UIElementsRuntimeUtility.<> <>9;
                static /*0x8*/ System.Comparison<UnityEngine.UIElements.Panel> <>9__48_0;

                static /*0x16f5ac0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x32d010*/ void <.cctor>b__9_0();
                /*0x16f5790*/ void <.cctor>b__9_1(int displayIndex, int sortOrder);
                /*0x16f5310*/ int <SortPanels>b__48_0(UnityEngine.UIElements.Panel a, UnityEngine.UIElements.Panel b);
            }
        }

        interface IUIElementsUtility
        {
            /*0x17cb40*/ bool TakeCapture();
            /*0x17cb40*/ bool ReleaseCapture();
            bool ProcessEvent(int instanceID, nint nativeEventPtr, ref bool eventHandled);
            /*0x17cb40*/ bool CleanupRoots();
            /*0x17e620*/ bool EndContainerGUIFromException(System.Exception exception);
            /*0x17cb40*/ bool MakeCurrentIMGUIContainerDirty();
        }

        class UIEventRegistration
        {
            static /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.IUIElementsUtility> s_Utilities;

            static /*0x16fc720*/ UIEventRegistration();
            static /*0x16fc3e0*/ void RegisterUIElementSystem(UnityEngine.UIElements.IUIElementsUtility utility);
            static /*0x16fc5c0*/ void TakeCapture();
            static /*0x16fc460*/ void ReleaseCapture();
            static /*0x16fbe30*/ bool EndContainerGUIFromException(System.Exception exception);
            static /*0x16fc1d0*/ bool ProcessEvent(int instanceID, nint nativeEventPtr);
            static /*0x16fbcd0*/ void CleanupRoots();
            static /*0x16fc070*/ void MakeCurrentIMGUIContainerDirty();

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UIEventRegistration.<> <>9;

                static /*0x16f5820*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f54b0*/ void <.cctor>b__1_0();
                /*0x16f54f0*/ void <.cctor>b__1_1();
                /*0x16f5530*/ bool <.cctor>b__1_2(int i, nint ptr);
                /*0x16f5590*/ void <.cctor>b__1_3();
                /*0x16f55d0*/ bool <.cctor>b__1_4(System.Exception exception);
                /*0x16f5620*/ void <.cctor>b__1_5();
            }
        }

        class UIElementsUtility : UnityEngine.UIElements.IUIElementsUtility
        {
            static /*0x0*/ System.Collections.Generic.Stack<UnityEngine.UIElements.IMGUIContainer> s_ContainerStack;
            static /*0x8*/ System.Collections.Generic.Dictionary<int, UnityEngine.UIElements.Panel> s_UIElementsCache;
            static /*0x10*/ UnityEngine.Event s_EventInstance;
            static /*0x18*/ UnityEngine.Color editorPlayModeTintColor;
            static /*0x28*/ float singleLineHeight;
            static /*0x30*/ UnityEngine.UIElements.UIElementsUtility s_Instance;
            static /*0x38*/ System.Collections.Generic.List<UnityEngine.UIElements.Panel> s_PanelsIterationList;
            static /*0x40*/ string s_RepaintProfilerMarkerName;
            static /*0x48*/ string s_EventProfilerMarkerName;
            static /*0x50*/ Unity.Profiling.ProfilerMarker s_RepaintProfilerMarker;
            static /*0x58*/ Unity.Profiling.ProfilerMarker s_EventProfilerMarker;
            static /*0x60*/ char[] s_Modifiers;

            static /*0x16fb7f0*/ UIElementsUtility();
            static /*0x16fb1d0*/ void RegisterCachedPanel(int instanceID, UnityEngine.UIElements.Panel panel);
            static /*0x16fb260*/ void RemoveCachedPanel(int instanceID);
            static /*0x16fb2e0*/ bool TryGetPanel(int instanceID, ref UnityEngine.UIElements.Panel panel);
            static /*0x16f9ee0*/ void BeginContainerGUI(UnityEngine.GUILayoutUtility.LayoutCache cache, UnityEngine.Event evt, UnityEngine.UIElements.IMGUIContainer container);
            static /*0x16fab40*/ void EndContainerGUI(UnityEngine.Event evt, UnityEngine.Rect layoutSize);
            static /*0x16fa140*/ UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent);
            static /*0x16fa1b0*/ UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent, UnityEngine.EventType eventType);
            static /*0x16fa560*/ bool DoDispatch(UnityEngine.UIElements.BaseVisualElementPanel panel);
            static /*0x16fad80*/ void GetAllPanels(System.Collections.Generic.List<UnityEngine.UIElements.Panel> panels, UnityEngine.UIElements.ContextType contextType);
            static /*0x16faf00*/ System.Collections.Generic.Dictionary.Enumerator<int, UnityEngine.UIElements.Panel> GetPanelsIterator();
            static /*0x16fb100*/ float PixelsPerUnitScaleForElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.Sprite sprite);
            static /*0x16fafb0*/ string ParseMenuName(string menuName);
            /*0x16fbc10*/ UIElementsUtility();
            /*0x16fb520*/ bool UnityEngine.UIElements.IUIElementsUtility.MakeCurrentIMGUIContainerDirty();
            /*0x16fb730*/ bool UnityEngine.UIElements.IUIElementsUtility.TakeCapture();
            /*0x6a6020*/ bool UnityEngine.UIElements.IUIElementsUtility.ReleaseCapture();
            /*0x16fb5e0*/ bool UnityEngine.UIElements.IUIElementsUtility.ProcessEvent(int instanceID, nint nativeEventPtr, ref bool eventHandled);
            /*0x16fb370*/ bool UnityEngine.UIElements.IUIElementsUtility.CleanupRoots();
            /*0x16fb440*/ bool UnityEngine.UIElements.IUIElementsUtility.EndContainerGUIFromException(System.Exception exception);
        }

        struct RuleMatcher
        {
            /*0x10*/ UnityEngine.UIElements.StyleSheet sheet;
            /*0x18*/ UnityEngine.UIElements.StyleComplexSelector complexSelector;

            /*0x16efff0*/ string ToString();
        }

        class UQuery
        {
            interface IVisualPredicateWrapper
            {
                /*0x17e620*/ bool Predicate(object e);
            }

            class IsOfType<T> : UnityEngine.UIElements.UQuery.IVisualPredicateWrapper
            {
                static /*0x0*/ UnityEngine.UIElements.UQuery.IsOfType<T> s_Instance;

                static /*0x180ff0*/ IsOfType();
                /*0x180fc0*/ IsOfType();
                /*0x17e620*/ bool Predicate(object e);
            }

            class UQueryMatcher : UnityEngine.UIElements.StyleSheets.HierarchyTraversal
            {
                /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.RuleMatcher> m_Matchers;

                static /*0x32d010*/ void NoProcessResult(UnityEngine.UIElements.VisualElement e, UnityEngine.UIElements.StyleSheets.MatchResultInfo i);
                /*0x534220*/ UQueryMatcher();
                /*0x16fdcf0*/ void Traverse(UnityEngine.UIElements.VisualElement element);
                /*0x6a6020*/ bool OnRuleMatchedElement(UnityEngine.UIElements.RuleMatcher matcher, UnityEngine.UIElements.VisualElement element);
                /*0x16fdad0*/ void TraverseRecursive(UnityEngine.UIElements.VisualElement element, int depth);
                /*0x16fda80*/ void Run(UnityEngine.UIElements.VisualElement root, System.Collections.Generic.List<UnityEngine.UIElements.RuleMatcher> matchers);

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UQuery.UQueryMatcher.<> <>9;
                    static /*0x8*/ System.Action<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.StyleSheets.MatchResultInfo> <>9__5_0;

                    static /*0x16f5900*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x32d010*/ void <TraverseRecursive>b__5_0(UnityEngine.UIElements.VisualElement e, UnityEngine.UIElements.StyleSheets.MatchResultInfo i);
                }
            }

            class SingleQueryMatcher : UnityEngine.UIElements.UQuery.UQueryMatcher
            {
                /*0x18*/ UnityEngine.UIElements.VisualElement <match>k__BackingField;

                /*0x534220*/ SingleQueryMatcher();
                /*0x32f410*/ UnityEngine.UIElements.VisualElement get_match();
                /*0x7963c0*/ void set_match(UnityEngine.UIElements.VisualElement value);
                /*0x16f0030*/ void Run(UnityEngine.UIElements.VisualElement root, System.Collections.Generic.List<UnityEngine.UIElements.RuleMatcher> matchers);
                /*0x16f0020*/ bool IsInUse();
                /*0x1803b0*/ UnityEngine.UIElements.UQuery.SingleQueryMatcher CreateNew();
            }

            class FirstQueryMatcher : UnityEngine.UIElements.UQuery.SingleQueryMatcher
            {
                static /*0x0*/ UnityEngine.UIElements.UQuery.FirstQueryMatcher Instance;

                static /*0x16efb60*/ FirstQueryMatcher();
                /*0x534220*/ FirstQueryMatcher();
                /*0x16efb30*/ bool OnRuleMatchedElement(UnityEngine.UIElements.RuleMatcher matcher, UnityEngine.UIElements.VisualElement element);
                /*0x16efae0*/ UnityEngine.UIElements.UQuery.SingleQueryMatcher CreateNew();
            }
        }

        struct UQueryState<T> : System.Collections.Generic.IEnumerable<T>, System.Collections.IEnumerable, System.IEquatable<UnityEngine.UIElements.UQueryState<T>>
        {
            static /*0x0*/ UnityEngine.UIElements.UQueryState.ActionQueryMatcher<T> s_Action;
            static /*0x0*/ UnityEngine.UIElements.UQueryState.ListQueryMatcher<T, T> s_List;
            static /*0x0*/ UnityEngine.UIElements.UQueryState.ListQueryMatcher<T, UnityEngine.UIElements.VisualElement> s_EnumerationList;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_Element;
            /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.RuleMatcher> m_Matchers;

            static /*0x180ff0*/ UQueryState();
            /*0x183150*/ UQueryState(UnityEngine.UIElements.VisualElement element, System.Collections.Generic.List<UnityEngine.UIElements.RuleMatcher> matchers);
            /*0x2a5510*/ UnityEngine.UIElements.UQueryState<T> RebuildOn(UnityEngine.UIElements.VisualElement element);
            /*0x2a5510*/ T Single(UnityEngine.UIElements.UQuery.SingleQueryMatcher matcher);
            /*0x2a5510*/ T First();
            /*0x2a5510*/ UnityEngine.UIElements.UQueryState.Enumerator<T> GetEnumerator();
            /*0x1803b0*/ System.Collections.Generic.IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
            /*0x1803b0*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            /*0x2a5510*/ bool Equals(UnityEngine.UIElements.UQueryState<T> other);
            /*0x17e620*/ bool Equals(object obj);
            /*0x180980*/ int GetHashCode();

            class ListQueryMatcher`1<T, TElement> : UnityEngine.UIElements.UQuery.UQueryMatcher
            {
                /*0x0*/ System.Collections.Generic.List<TElement> <matches>k__BackingField;

                /*0x180fc0*/ ListQueryMatcher`1();
                /*0x1803b0*/ System.Collections.Generic.List<TElement> get_matches();
                /*0x17aec0*/ void set_matches(System.Collections.Generic.List<TElement> value);
                bool OnRuleMatchedElement(UnityEngine.UIElements.RuleMatcher matcher, UnityEngine.UIElements.VisualElement element);
                /*0x180fc0*/ void Reset();
            }

            class ActionQueryMatcher<T> : UnityEngine.UIElements.UQuery.UQueryMatcher
            {
                /*0x0*/ System.Action<T> <callBack>k__BackingField;

                /*0x180fc0*/ ActionQueryMatcher();
                /*0x1803b0*/ System.Action<T> get_callBack();
                bool OnRuleMatchedElement(UnityEngine.UIElements.RuleMatcher matcher, UnityEngine.UIElements.VisualElement element);
            }

            struct Enumerator<T> : System.Collections.Generic.IEnumerator<T>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> iterationList;
                /*0x0*/ int currentIndex;

                /*0x2a5510*/ Enumerator(UnityEngine.UIElements.UQueryState<T> queryState);
                /*0x2a5510*/ T get_Current();
                /*0x1803b0*/ object System.Collections.IEnumerator.get_Current();
                /*0x17cb40*/ bool MoveNext();
                /*0x180fc0*/ void Reset();
                /*0x180fc0*/ void Dispose();
            }
        }

        struct UQueryBuilder<T> : System.IEquatable<UnityEngine.UIElements.UQueryBuilder<T>>
        {
            /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSelector> m_StyleSelectors;
            /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSelectorPart> m_Parts;
            /*0x0*/ UnityEngine.UIElements.VisualElement m_Element;
            /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.RuleMatcher> m_Matchers;
            /*0x0*/ UnityEngine.UIElements.StyleSelectorRelationship m_Relationship;
            /*0x0*/ int pseudoStatesMask;
            /*0x0*/ int negatedPseudoStatesMask;

            /*0x17aec0*/ UQueryBuilder(UnityEngine.UIElements.VisualElement visualElement);
            /*0x1803b0*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSelector> get_styleSelectors();
            /*0x1803b0*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSelectorPart> get_parts();
            /*0x2a5510*/ UnityEngine.UIElements.UQueryBuilder<T> Class(string classname);
            /*0x2a5510*/ UnityEngine.UIElements.UQueryBuilder<T> Name(string id);
            /*0x2a5510*/ UnityEngine.UIElements.UQueryBuilder<T> SingleBaseType();
            /*0x17aec0*/ void AddClass(string c);
            /*0x17aec0*/ void AddName(string id);
            /*0x180fc0*/ void AddPseudoStatesRuleIfNecessasy();
            /*0x180fc0*/ void FinishSelector();
            /*0x17cb40*/ bool CurrentSelectorEmpty();
            /*0x180fc0*/ void FinishCurrentSelector();
            /*0x2a5510*/ UnityEngine.UIElements.UQueryState<T> Build();
            /*0x2a5510*/ bool Equals(UnityEngine.UIElements.UQueryBuilder<T> other);
            /*0x17e620*/ bool Equals(object obj);
            /*0x180980*/ int GetHashCode();
        }

        class UQueryExtensions
        {
            static /*0x0*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementEmptyQuery;
            static /*0x10*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementNameQuery;
            static /*0x20*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementClassQuery;
            static /*0x30*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementNameAndClassQuery;
            static /*0x40*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementTypeQuery;
            static /*0x50*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementTypeAndNameQuery;
            static /*0x60*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementTypeAndClassQuery;
            static /*0x70*/ UnityEngine.UIElements.UQueryState<UnityEngine.UIElements.VisualElement> SingleElementTypeAndNameAndClassQuery;

            static /*0x16fd2c0*/ UQueryExtensions();
            static /*0x2a5510*/ T Q<T>(UnityEngine.UIElements.VisualElement e, string name, string className);
            static /*0x16fcdf0*/ UnityEngine.UIElements.VisualElement Q(UnityEngine.UIElements.VisualElement e, string name, string className);
        }

        interface IUxmlAttributes
        {
            bool TryGetAttributeValue(string attributeName, ref string value);
        }

        class UxmlRootElementFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.UxmlRootElementTraits>
        {
            /*0x1700380*/ UxmlRootElementFactory();
            /*0x17003c0*/ string get_uxmlName();
            /*0x17003f0*/ string get_uxmlQualifiedName();
            /*0xbf9940*/ UnityEngine.UIElements.VisualElement Create(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlRootElementTraits : UnityEngine.UIElements.UxmlTraits
        {
            /*0x18*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Name;
            /*0x20*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Class;

            /*0x1700470*/ UxmlRootElementTraits();
        }

        class UxmlStyleFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.UxmlStyleTraits>
        {
            /*0x17008e0*/ UxmlStyleFactory();
            /*0x1700920*/ string get_uxmlName();
            /*0x1700950*/ string get_uxmlQualifiedName();
            /*0xbf9940*/ UnityEngine.UIElements.VisualElement Create(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlStyleTraits : UnityEngine.UIElements.UxmlTraits
        {
            /*0x18*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Name;
            /*0x20*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Path;
            /*0x28*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Src;

            /*0x17009d0*/ UxmlStyleTraits();
        }

        class UxmlTemplateFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.UxmlTemplateTraits>
        {
            /*0x1700b10*/ UxmlTemplateFactory();
            /*0x1700b50*/ string get_uxmlName();
            /*0x1700b80*/ string get_uxmlQualifiedName();
            /*0xbf9940*/ UnityEngine.UIElements.VisualElement Create(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlTemplateTraits : UnityEngine.UIElements.UxmlTraits
        {
            /*0x18*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Name;
            /*0x20*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Path;
            /*0x28*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_Src;

            /*0x1700c00*/ UxmlTemplateTraits();
        }

        class UxmlAttributeOverridesFactory : UnityEngine.UIElements.UxmlFactory<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.UxmlAttributeOverridesTraits>
        {
            /*0x16fe5f0*/ UxmlAttributeOverridesFactory();
            /*0x16fe630*/ string get_uxmlName();
            /*0x16fe660*/ string get_uxmlQualifiedName();
            /*0xbf9940*/ UnityEngine.UIElements.VisualElement Create(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlAttributeOverridesTraits : UnityEngine.UIElements.UxmlTraits
        {
            /*0x18*/ UnityEngine.UIElements.UxmlStringAttributeDescription m_ElementName;

            /*0x16fe6e0*/ UxmlAttributeOverridesTraits();
        }

        class TemplateAsset : UnityEngine.UIElements.VisualElementAsset
        {
            /*0x70*/ string m_TemplateAlias;
            /*0x78*/ System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset.AttributeOverride> m_AttributeOverrides;
            /*0x80*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.SlotUsageEntry> m_SlotUsages;

            /*0x16f00b0*/ System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset.AttributeOverride> get_attributeOverrides();
            /*0x1634670*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.SlotUsageEntry> get_slotUsages();

            struct AttributeOverride
            {
                /*0x10*/ string m_ElementName;
                /*0x18*/ string m_AttributeName;
                /*0x20*/ string m_Value;
            }
        }

        class UxmlAttributeDescription
        {
            /*0x10*/ string <name>k__BackingField;
            /*0x18*/ string[] m_ObsoleteNames;
            /*0x20*/ string <type>k__BackingField;
            /*0x28*/ string <typeNamespace>k__BackingField;
            /*0x30*/ UnityEngine.UIElements.UxmlAttributeDescription.Use <use>k__BackingField;
            /*0x38*/ UnityEngine.UIElements.UxmlTypeRestriction <restriction>k__BackingField;

            /*0x16fe560*/ UxmlAttributeDescription();
            /*0x73d3e0*/ string get_name();
            /*0x9f12f0*/ void set_name(string value);
            /*0x16fe590*/ void set_obsoleteNames(System.Collections.Generic.IEnumerable<string> value);
            /*0x7965a0*/ void set_type(string value);
            /*0x98b030*/ void set_typeNamespace(string value);
            /*0xa79cd0*/ void set_use(UnityEngine.UIElements.UxmlAttributeDescription.Use value);
            /*0xe5a080*/ void set_restriction(UnityEngine.UIElements.UxmlTypeRestriction value);
            /*0x16fe060*/ bool TryGetValueFromBagAsString(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref string value);
            /*0x2a5510*/ bool TryGetValueFromBag<T>(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, System.Func<string, T, T> converterFunc, T defaultValue, ref T value);
            /*0x2a5510*/ T GetValueFromBag<T>(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, System.Func<string, T, T> converterFunc, T defaultValue);

            enum Use
            {
                None = 0,
                Optional = 1,
                Prohibited = 2,
                Required = 3,
            }
        }

        class TypedUxmlAttributeDescription<T> : UnityEngine.UIElements.UxmlAttributeDescription
        {
            /*0x0*/ T <defaultValue>k__BackingField;

            /*0x180fc0*/ TypedUxmlAttributeDescription();
            /*0x2a5510*/ T GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            /*0x2a5510*/ T get_defaultValue();
            /*0x2a5510*/ void set_defaultValue(T value);
        }

        class UxmlStringAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<string>
        {
            /*0x1700830*/ UxmlStringAttributeDescription();
            /*0x1700560*/ string GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            /*0x17006c0*/ bool TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref string value);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlStringAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, string, string> <>9__3_0;
                static /*0x10*/ System.Func<string, string, string> <>9__4_0;

                static /*0x16f5a50*/ <>c();
                /*0x32f970*/ <>c();
                /*0x718e40*/ string <GetValueFromBag>b__3_0(string s, string t);
                /*0x718e40*/ string <TryGetValueFromBag>b__4_0(string s, string t);
            }
        }

        class UxmlFloatAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<float>
        {
            static /*0x16fef00*/ float ConvertValueToFloat(string v, float defaultValue);
            /*0x16ff100*/ UxmlFloatAttributeDescription();
            /*0x16fefa0*/ float GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlFloatAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, float, float> <>9__3_0;

                static /*0x16f5890*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f5230*/ float <GetValueFromBag>b__3_0(string s, float f);
            }
        }

        class UxmlDoubleAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<double>
        {
            static /*0x16fe9f0*/ double ConvertValueToDouble(string v, double defaultValue);
            /*0x16febf0*/ UxmlDoubleAttributeDescription();
            /*0x16fea90*/ double GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlDoubleAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, double, double> <>9__3_0;

                static /*0x16f5c10*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f5190*/ double <GetValueFromBag>b__3_0(string s, double d);
            }
        }

        class UxmlIntAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<int>
        {
            static /*0x16ff3b0*/ int ConvertValueToInt(string v, int defaultValue);
            /*0x16ff6c0*/ UxmlIntAttributeDescription();
            /*0x16ff3f0*/ int GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            /*0x16ff550*/ bool TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref int value);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlIntAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, int, int> <>9__3_0;
                static /*0x10*/ System.Func<string, int, int> <>9__4_0;

                static /*0x16f5c80*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f5060*/ int <GetValueFromBag>b__3_0(string s, int i);
                /*0x16f5060*/ int <TryGetValueFromBag>b__4_0(string s, int i);
            }
        }

        class UxmlUnsignedIntAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<uint>
        {
            static /*0x1701150*/ uint ConvertValueToUInt(string v, uint defaultValue);
            /*0x17012f0*/ UxmlUnsignedIntAttributeDescription();
            /*0x1701190*/ uint GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlUnsignedIntAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, uint, uint> <>9__3_0;

                static /*0x16f5ba0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f52d0*/ uint <GetValueFromBag>b__3_0(string s, uint i);
            }
        }

        class UxmlUnsignedLongAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<ulong>
        {
            static /*0x1701380*/ ulong ConvertValueToUlong(string v, ulong defaultValue);
            /*0x1701520*/ UxmlUnsignedLongAttributeDescription();
            /*0x17013c0*/ ulong GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlUnsignedLongAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, ulong, ulong> <>9__3_0;

                static /*0x16f5b30*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f5020*/ ulong <GetValueFromBag>b__3_0(string s, ulong l);
            }
        }

        class UxmlLongAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<long>
        {
            static /*0x16ff750*/ long ConvertValueToLong(string v, long defaultValue);
            /*0x16ff8f0*/ UxmlLongAttributeDescription();
            /*0x16ff790*/ long GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlLongAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, long, long> <>9__3_0;

                static /*0x16f5d60*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f50d0*/ long <GetValueFromBag>b__3_0(string s, long l);
            }
        }

        class UxmlBoolAttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<bool>
        {
            static /*0x16fe780*/ bool ConvertValueToBool(string v, bool defaultValue);
            /*0x16fe960*/ UxmlBoolAttributeDescription();
            /*0x16fe800*/ bool GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlBoolAttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, bool, bool> <>9__3_0;

                static /*0x16f59e0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f5110*/ bool <GetValueFromBag>b__3_0(string s, bool b);
            }
        }

        class UxmlTypeAttributeDescription<TBase> : UnityEngine.UIElements.TypedUxmlAttributeDescription<System.Type>
        {
            /*0x180fc0*/ UxmlTypeAttributeDescription();
            System.Type GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            /*0x177730*/ System.Type ConvertValueToType(string v, System.Type defaultValue);
            /*0x177730*/ System.Type <GetValueFromBag>b__3_0(string s, System.Type type1);
        }

        class UxmlEnumAttributeDescription<T> : UnityEngine.UIElements.TypedUxmlAttributeDescription<T>
        {
            static /*0x2a5510*/ U ConvertValueToEnum<U>(string v, U defaultValue);
            static /*0x177800*/ string GetEnumNameErrorMessage(string v, System.Type enumType);
            static /*0x177800*/ string GetEnumRangeErrorMessage(string v, System.Type enumType);
            /*0x180fc0*/ UxmlEnumAttributeDescription();
            /*0x2a5510*/ T GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
            /*0x2a5510*/ bool TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref T value);

            class <>c<T>
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlEnumAttributeDescription.<>c<T> <>9;
                static /*0x0*/ System.Func<string, T, T> <>9__3_0;
                static /*0x0*/ System.Func<string, T, T> <>9__4_0;

                static /*0x180ff0*/ <>c();
                /*0x180fc0*/ <>c();
                /*0x2a5510*/ T <GetValueFromBag>b__3_0(string s, T convertible);
                /*0x2a5510*/ T <TryGetValueFromBag>b__4_0(string s, T convertible);
            }
        }

        class UxmlHash128AttributeDescription : UnityEngine.UIElements.TypedUxmlAttributeDescription<UnityEngine.Hash128>
        {
            /*0x16ff320*/ UxmlHash128AttributeDescription();
            /*0x16ff190*/ UnityEngine.Hash128 GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.UxmlHash128AttributeDescription.<> <>9;
                static /*0x8*/ System.Func<string, UnityEngine.Hash128, UnityEngine.Hash128> <>9__3_0;

                static /*0x16f5970*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f50a0*/ UnityEngine.Hash128 <GetValueFromBag>b__3_0(string s, UnityEngine.Hash128 i);
            }
        }

        class UxmlObjectAttributeDescription<T>
        {
            /*0x0*/ T <defaultValue>k__BackingField;

            /*0x180fc0*/ UxmlObjectAttributeDescription();
            /*0x2a5510*/ T get_defaultValue();
            /*0x2a5510*/ T GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlObjectListAttributeDescription<T> : UnityEngine.UIElements.UxmlObjectAttributeDescription<System.Collections.Generic.List<T>>
        {
            /*0x180fc0*/ UxmlObjectListAttributeDescription();
            System.Collections.Generic.List<T> GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class BaseUxmlTraits
        {
            /*0x10*/ bool <canHaveAnyAttribute>k__BackingField;

            /*0x16eee20*/ BaseUxmlTraits();
            /*0x793ec0*/ void set_canHaveAnyAttribute(bool value);
        }

        class UxmlTraits : UnityEngine.UIElements.BaseUxmlTraits
        {
            /*0x16eee20*/ UxmlTraits();
            /*0x32d010*/ void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlObjectTraits<T> : UnityEngine.UIElements.BaseUxmlTraits
        {
            /*0x180fc0*/ UxmlObjectTraits();
            void Init(ref T obj, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        interface IBaseUxmlFactory
        {
            /*0x1803b0*/ string get_uxmlQualifiedName();
            /*0x1803b0*/ System.Type get_uxmlType();
            bool AcceptsAttributeBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        interface IUxmlFactory : UnityEngine.UIElements.IBaseUxmlFactory
        {
            UnityEngine.UIElements.VisualElement Create(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        interface IBaseUxmlObjectFactory : UnityEngine.UIElements.IBaseUxmlFactory
        {
        }

        interface IUxmlObjectFactory<T> : UnityEngine.UIElements.IBaseUxmlObjectFactory, UnityEngine.UIElements.IBaseUxmlFactory
        {
            /*0x2a5510*/ T CreateObject(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class BaseUxmlFactory<TCreatedType, TTraits>
        {
            /*0x0*/ TTraits m_Traits;

            /*0x180fc0*/ BaseUxmlFactory();
            /*0x1803b0*/ string get_uxmlName();
            /*0x1803b0*/ string get_uxmlNamespace();
            /*0x1803b0*/ string get_uxmlQualifiedName();
            /*0x1803b0*/ System.Type get_uxmlType();
            bool AcceptsAttributeBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlFactory<TCreatedType, TTraits> : UnityEngine.UIElements.BaseUxmlFactory<TCreatedType, TTraits>, UnityEngine.UIElements.IUxmlFactory, UnityEngine.UIElements.IBaseUxmlFactory
        {
            /*0x180fc0*/ UxmlFactory();
            UnityEngine.UIElements.VisualElement Create(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlObjectFactory<TCreatedType, TTraits> : UnityEngine.UIElements.BaseUxmlFactory<TCreatedType, TTraits>, UnityEngine.UIElements.IUxmlObjectFactory<TCreatedType>, UnityEngine.UIElements.IBaseUxmlObjectFactory, UnityEngine.UIElements.IBaseUxmlFactory
        {
            /*0x180fc0*/ UxmlObjectFactory();
            /*0x2a5510*/ TCreatedType CreateObject(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }

        class UxmlFactory<TCreatedType> : UnityEngine.UIElements.UxmlFactory<TCreatedType, UnityEngine.UIElements.VisualElement.UxmlTraits>
        {
            /*0x180fc0*/ UxmlFactory();
        }

        class UxmlAsset : UnityEngine.UIElements.IUxmlAttributes
        {
            /*0x10*/ string m_FullTypeName;
            /*0x18*/ int m_Id;
            /*0x1c*/ int m_OrderInDocument;
            /*0x20*/ int m_ParentId;
            /*0x28*/ System.Collections.Generic.List<string> m_Properties;

            /*0x73d3e0*/ string get_fullTypeName();
            /*0x8a5c20*/ int get_id();
            /*0xc70b00*/ int get_orderInDocument();
            /*0x3e3af0*/ int get_parentId();
            /*0x16fdf60*/ bool TryGetAttributeValue(string propertyName, ref string value);
            /*0x16fde00*/ void SetAttribute(string name, string value);
            /*0x16fde00*/ void SetOrAddProperty(string propertyName, string propertyValue);
        }

        class UxmlObjectAsset : UnityEngine.UIElements.UxmlAsset
        {
        }

        class UxmlObjectFactoryRegistry
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<UnityEngine.UIElements.IBaseUxmlObjectFactory>> s_Factories;

            static /*0x17002c0*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<UnityEngine.UIElements.IBaseUxmlObjectFactory>> get_factories();
            static /*0x16ffc00*/ void RegisterFactory(UnityEngine.UIElements.IBaseUxmlObjectFactory factory);
            static /*0x1700260*/ bool TryGetFactories(string fullTypeName, ref System.Collections.Generic.List<UnityEngine.UIElements.IBaseUxmlObjectFactory> factoryList);
            static /*0x16ff980*/ void RegisterEngineFactories();
            static /*0x16fff60*/ void RegisterUserFactories();
        }

        class UxmlTypeRestriction : System.IEquatable<UnityEngine.UIElements.UxmlTypeRestriction>
        {
            /*0x32f970*/ UxmlTypeRestriction();
            /*0x1701140*/ bool Equals(UnityEngine.UIElements.UxmlTypeRestriction other);
        }

        class UxmlEnumeration : UnityEngine.UIElements.UxmlTypeRestriction
        {
            /*0x10*/ System.Collections.Generic.List<string> m_Values;

            /*0x16fede0*/ UxmlEnumeration();
            /*0x9e3110*/ System.Collections.Generic.IEnumerable<string> get_values();
            /*0x16fee60*/ void set_values(System.Collections.Generic.IEnumerable<string> value);
            /*0x16fec80*/ bool Equals(UnityEngine.UIElements.UxmlTypeRestriction other);
        }

        class VisualElementAsset : UnityEngine.UIElements.UxmlAsset, UnityEngine.ISerializationCallbackReceiver
        {
            /*0x30*/ string m_Name;
            /*0x38*/ int m_RuleIndex;
            /*0x40*/ string m_Text;
            /*0x48*/ UnityEngine.UIElements.PickingMode m_PickingMode;
            /*0x50*/ string[] m_Classes;
            /*0x58*/ System.Collections.Generic.List<string> m_StylesheetPaths;
            /*0x60*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheet> m_Stylesheets;
            /*0x68*/ bool m_SkipClone;

            /*0x17017f0*/ int get_ruleIndex();
            /*0x16346a0*/ string[] get_classes();
            /*0x1701800*/ System.Collections.Generic.List<string> get_stylesheetPaths();
            /*0x17017e0*/ bool get_hasStylesheetPaths();
            /*0x1701880*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheet> get_stylesheets();
            /*0xe7e5e0*/ bool get_hasStylesheets();
            /*0xe7e580*/ bool get_skipClone();
            /*0x32d010*/ void OnBeforeSerialize();
            /*0x1701650*/ void OnAfterDeserialize();
        }

        class VisualElementFactoryRegistry
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<UnityEngine.UIElements.IUxmlFactory>> s_Factories;
            static /*0x8*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<UnityEngine.UIElements.IUxmlFactory>> s_MovedTypesFactories;

            static /*0x1702200*/ string GetMovedUIControlTypeName(System.Type type, UnityEngine.Scripting.APIUpdating.MovedFromAttribute attr);
            static /*0x1704520*/ System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<UnityEngine.UIElements.IUxmlFactory>> get_factories();
            static /*0x1703b90*/ void RegisterFactory(UnityEngine.UIElements.IUxmlFactory factory);
            static /*0x1704480*/ bool TryGetValue(string fullTypeName, ref System.Collections.Generic.List<UnityEngine.UIElements.IUxmlFactory> factoryList);
            static /*0x1702370*/ void RegisterEngineFactories();
            static /*0x1704180*/ void RegisterUserFactories();
        }

        class VisualTreeAsset : UnityEngine.ScriptableObject
        {
            static /*0x0*/ string LinkedVEAInTemplatePropertyName;
            static /*0x8*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.VisualElement> s_TemporarySlotInsertionPoints;
            /*0x18*/ bool m_ImportedWithErrors;
            /*0x19*/ bool m_ImportedWithWarnings;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.UsingEntry> m_Usings;
            /*0x28*/ UnityEngine.UIElements.StyleSheet inlineSheet;
            /*0x30*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElementAsset> m_VisualElementAssets;
            /*0x38*/ System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset> m_TemplateAssets;
            /*0x40*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.UxmlObjectEntry> m_UxmlObjectEntries;
            /*0x48*/ System.Collections.Generic.List<int> m_UxmlObjectIds;
            /*0x50*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.AssetEntry> m_AssetEntries;
            /*0x58*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.SlotDefinition> m_Slots;
            /*0x60*/ int m_ContentContainerId;
            /*0x64*/ int m_ContentHash;

            static /*0x1709b00*/ VisualTreeAsset();
            static /*0x1708140*/ int CompareForOrder(UnityEngine.UIElements.VisualElementAsset a, UnityEngine.UIElements.VisualElementAsset b);
            static /*0x1708170*/ UnityEngine.UIElements.VisualElement Create(UnityEngine.UIElements.VisualElementAsset asset, UnityEngine.UIElements.CreationContext ctx);
            static /*0x1706940*/ void AssignClassListFromAssetToElement(UnityEngine.UIElements.VisualElementAsset asset, UnityEngine.UIElements.VisualElement element);
            static /*0x17069d0*/ void AssignStyleSheetFromAssetToElement(UnityEngine.UIElements.VisualElementAsset asset, UnityEngine.UIElements.VisualElement element);
            static /*0x17099a0*/ UnityEngine.UIElements.VisualElement <Create>g__CreateError|65_0(ref UnityEngine.UIElements.VisualTreeAsset.<> );
            /*0x533ec0*/ VisualTreeAsset();
            /*0x169ed30*/ bool get_importedWithErrors();
            /*0xdd5230*/ void set_importedWithErrors(bool value);
            /*0x1709be0*/ bool get_importedWithWarnings();
            /*0x10a6600*/ void set_importedWithWarnings(bool value);
            /*0x1708960*/ int GetNextChildSerialNumber();
            /*0x1709c70*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.VisualTreeAsset> get_templateDependencies();
            /*0x1709bf0*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StyleSheet> get_stylesheets();
            /*0x15fe590*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElementAsset> get_visualElementAssets();
            /*0x997640*/ void set_visualElementAssets(System.Collections.Generic.List<UnityEngine.UIElements.VisualElementAsset> value);
            /*0x16345e0*/ System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset> get_templateAssets();
            /*0xe5a080*/ void set_templateAssets(System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset> value);
            /*0xb61870*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.UxmlObjectEntry> get_uxmlObjectEntries();
            /*0x4e40d0*/ System.Collections.Generic.List<int> get_uxmlObjectIds();
            /*0x17092f0*/ void RegisterUxmlObject(UnityEngine.UIElements.UxmlObjectAsset uxmlObjectAsset);
            System.Collections.Generic.List<T> GetUxmlObjects<T>(UnityEngine.UIElements.IUxmlAttributes asset, UnityEngine.UIElements.CreationContext cc);
            /*0x1706780*/ bool AssetEntryExists(string path, System.Type type);
            /*0x1709110*/ void RegisterAssetEntry(string path, System.Type type, UnityEngine.Object asset);
            /*0x2a5510*/ T GetAsset<T>(string path);
            /*0x17089e0*/ UnityEngine.UIElements.VisualTreeAsset.UxmlObjectEntry GetUxmlObjectEntry(int id);
            /*0x1708b20*/ UnityEngine.UIElements.IBaseUxmlObjectFactory GetUxmlObjectFactory(UnityEngine.UIElements.UxmlObjectAsset uxmlObjectAsset);
            /*0x16345d0*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.SlotDefinition> get_slots();
            /*0xb61a20*/ void set_slots(System.Collections.Generic.List<UnityEngine.UIElements.VisualTreeAsset.SlotDefinition> value);
            /*0x1709bd0*/ int get_contentContainerId();
            /*0xf91480*/ void set_contentContainerId(int value);
            /*0x1708fe0*/ UnityEngine.UIElements.TemplateContainer Instantiate();
            /*0x1707f80*/ UnityEngine.UIElements.TemplateContainer Instantiate(string bindingPath);
            /*0x1708130*/ UnityEngine.UIElements.TemplateContainer CloneTree();
            /*0x1707f80*/ UnityEngine.UIElements.TemplateContainer CloneTree(string bindingPath);
            /*0x1707830*/ void CloneTree(UnityEngine.UIElements.VisualElement target);
            /*0x1707fd0*/ void CloneTree(UnityEngine.UIElements.VisualElement target, ref int firstElementIndex, ref int elementAddedCount);
            /*0x1707860*/ void CloneTree(UnityEngine.UIElements.VisualElement target, System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.VisualElement> slotInsertionPoints, System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset.AttributeOverride> attributeOverrides);
            /*0x1706d10*/ UnityEngine.UIElements.VisualElement CloneSetupRecursively(UnityEngine.UIElements.VisualElementAsset root, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<UnityEngine.UIElements.VisualElementAsset>> idToChildren, UnityEngine.UIElements.CreationContext context);
            /*0x17098c0*/ bool TryGetSlotInsertionPoint(int insertionPointId, ref string slotName);
            /*0x17095d0*/ UnityEngine.UIElements.VisualTreeAsset ResolveTemplate(string templateName);
            /*0x161ea20*/ int get_contentHash();
            /*0x137dee0*/ void set_contentHash(int value);

            struct UsingEntry
            {
                static /*0x0*/ System.Collections.Generic.IComparer<UnityEngine.UIElements.VisualTreeAsset.UsingEntry> comparer;
                /*0x10*/ string alias;
                /*0x18*/ string path;
                /*0x20*/ UnityEngine.UIElements.VisualTreeAsset asset;

                static /*0x16fdd30*/ UsingEntry();
                /*0x16fddb0*/ UsingEntry(string alias, string path);
            }

            class UsingEntryComparer : System.Collections.Generic.IComparer<UnityEngine.UIElements.VisualTreeAsset.UsingEntry>
            {
                /*0x32f970*/ UsingEntryComparer();
                /*0x16fdd00*/ int Compare(UnityEngine.UIElements.VisualTreeAsset.UsingEntry x, UnityEngine.UIElements.VisualTreeAsset.UsingEntry y);
            }

            struct SlotDefinition
            {
                /*0x10*/ string name;
                /*0x18*/ int insertionPointId;
            }

            struct SlotUsageEntry
            {
                /*0x10*/ string slotName;
                /*0x18*/ int assetId;
            }

            struct UxmlObjectEntry
            {
                /*0x10*/ int parentId;
                /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.UxmlObjectAsset> uxmlObjectAssets;

                /*0xa59e80*/ UxmlObjectEntry(int parentId, System.Collections.Generic.List<UnityEngine.UIElements.UxmlObjectAsset> uxmlObjectAssets);
            }

            struct AssetEntry
            {
                /*0x10*/ string path;
                /*0x18*/ string typeFullName;
                /*0x20*/ UnityEngine.Object asset;
                /*0x28*/ System.Type m_CachedType;

                /*0x16eed00*/ AssetEntry(string path, System.Type type, UnityEngine.Object asset);
                /*0x16eed80*/ System.Type get_type();
            }

            class <>c__DisplayClass61_0
            {
                /*0x10*/ UnityEngine.UIElements.VisualElementAsset childVea;

                /*0x32f970*/ <>c__DisplayClass61_0();
                /*0x16f57f0*/ bool <CloneSetupRecursively>b__0(UnityEngine.UIElements.VisualTreeAsset.SlotUsageEntry u);
            }

            struct <>c__DisplayClass65_0
            {
                /*0x10*/ UnityEngine.UIElements.VisualElementAsset asset;
            }

            class <get_stylesheets>d__23 : System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StyleSheet>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<UnityEngine.UIElements.StyleSheet>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ UnityEngine.UIElements.StyleSheet <>2__current;
                /*0x20*/ int <>l__initialThreadId;
                /*0x28*/ UnityEngine.UIElements.VisualTreeAsset <>4__this;
                /*0x30*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.StyleSheet> <sent>5__1;
                /*0x38*/ System.Collections.Generic.List.Enumerator<UnityEngine.UIElements.VisualElementAsset> <>s__2;
                /*0x50*/ UnityEngine.UIElements.VisualElementAsset <vea>5__3;
                /*0x58*/ System.Collections.Generic.List.Enumerator<UnityEngine.UIElements.StyleSheet> <>s__4;
                /*0x70*/ UnityEngine.UIElements.StyleSheet <stylesheet>5__5;
                /*0x78*/ System.Collections.Generic.List.Enumerator<string> <>s__6;
                /*0x90*/ string <stylesheetPath>5__7;
                /*0x98*/ UnityEngine.UIElements.StyleSheet <stylesheet>5__8;

                /*0x70aad0*/ <get_stylesheets>d__23(int <>1__state);
                /*0x16f6710*/ void System.IDisposable.Dispose();
                /*0x16f5e40*/ bool MoveNext();
                /*0x16f68a0*/ void <>m__Finally1();
                /*0x16f68f0*/ void <>m__Finally2();
                /*0x16f6940*/ void <>m__Finally3();
                /*0x32f410*/ UnityEngine.UIElements.StyleSheet System.Collections.Generic.IEnumerator<UnityEngine.UIElements.StyleSheet>.get_Current();
                /*0x16f66d0*/ void System.Collections.IEnumerator.Reset();
                /*0x32f410*/ object System.Collections.IEnumerator.get_Current();
                /*0x16f6630*/ System.Collections.Generic.IEnumerator<UnityEngine.UIElements.StyleSheet> System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StyleSheet>.GetEnumerator();
                /*0x16f6630*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            }

            class <get_templateDependencies>d__19 : System.Collections.Generic.IEnumerable<UnityEngine.UIElements.VisualTreeAsset>, System.Collections.IEnumerable, System.Collections.Generic.IEnumerator<UnityEngine.UIElements.VisualTreeAsset>, System.Collections.IEnumerator, System.IDisposable
            {
                /*0x10*/ int <>1__state;
                /*0x18*/ UnityEngine.UIElements.VisualTreeAsset <>2__current;
                /*0x20*/ int <>l__initialThreadId;
                /*0x28*/ UnityEngine.UIElements.VisualTreeAsset <>4__this;
                /*0x30*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualTreeAsset> <sent>5__1;
                /*0x38*/ System.Collections.Generic.List.Enumerator<UnityEngine.UIElements.VisualTreeAsset.UsingEntry> <>s__2;
                /*0x60*/ UnityEngine.UIElements.VisualTreeAsset.UsingEntry <entry>5__3;
                /*0x78*/ UnityEngine.UIElements.VisualTreeAsset <vta>5__4;

                /*0x70aad0*/ <get_templateDependencies>d__19(int <>1__state);
                /*0x16f70b0*/ void System.IDisposable.Dispose();
                /*0x16f6990*/ bool MoveNext();
                /*0x16f7140*/ void <>m__Finally1();
                /*0x32f410*/ UnityEngine.UIElements.VisualTreeAsset System.Collections.Generic.IEnumerator<UnityEngine.UIElements.VisualTreeAsset>.get_Current();
                /*0x16f7070*/ void System.Collections.IEnumerator.Reset();
                /*0x32f410*/ object System.Collections.IEnumerator.get_Current();
                /*0x16f6fd0*/ System.Collections.Generic.IEnumerator<UnityEngine.UIElements.VisualTreeAsset> System.Collections.Generic.IEnumerable<UnityEngine.UIElements.VisualTreeAsset>.GetEnumerator();
                /*0x16f6fd0*/ System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator();
            }
        }

        struct CreationContext : System.IEquatable<UnityEngine.UIElements.CreationContext>
        {
            static /*0x0*/ UnityEngine.UIElements.CreationContext Default;
            /*0x10*/ UnityEngine.UIElements.VisualElement <target>k__BackingField;
            /*0x18*/ UnityEngine.UIElements.VisualTreeAsset <visualTreeAsset>k__BackingField;
            /*0x20*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.VisualElement> <slotInsertionPoints>k__BackingField;
            /*0x28*/ System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset.AttributeOverride> <attributeOverrides>k__BackingField;

            static /*0x16ef180*/ CreationContext();
            /*0x16ef270*/ CreationContext(System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.VisualElement> slotInsertionPoints, UnityEngine.UIElements.VisualTreeAsset vta, UnityEngine.UIElements.VisualElement target);
            /*0x16ef1c0*/ CreationContext(System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.VisualElement> slotInsertionPoints, System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset.AttributeOverride> attributeOverrides, UnityEngine.UIElements.VisualTreeAsset vta, UnityEngine.UIElements.VisualElement target);
            /*0x6937d0*/ UnityEngine.UIElements.VisualElement get_target();
            /*0x792990*/ void set_target(UnityEngine.UIElements.VisualElement value);
            /*0xa5a7f0*/ UnityEngine.UIElements.VisualTreeAsset get_visualTreeAsset();
            /*0x1659550*/ void set_visualTreeAsset(UnityEngine.UIElements.VisualTreeAsset value);
            /*0x73d3e0*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.VisualElement> get_slotInsertionPoints();
            /*0x9f12f0*/ void set_slotInsertionPoints(System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.VisualElement> value);
            /*0x32f410*/ System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset.AttributeOverride> get_attributeOverrides();
            /*0x7963c0*/ void set_attributeOverrides(System.Collections.Generic.List<UnityEngine.UIElements.TemplateAsset.AttributeOverride> value);
            /*0x16eefa0*/ bool Equals(object obj);
            /*0x16eee40*/ bool Equals(UnityEngine.UIElements.CreationContext other);
            /*0x16ef060*/ int GetHashCode();
        }

        enum GradientType
        {
            Linear = 0,
            Radial = 1,
        }

        enum AddressMode
        {
            Wrap = 0,
            Clamp = 1,
            Mirror = 2,
        }

        struct VectorImageVertex
        {
            /*0x10*/ UnityEngine.Vector3 position;
            /*0x1c*/ UnityEngine.Color32 tint;
            /*0x20*/ UnityEngine.Vector2 uv;
            /*0x28*/ uint settingIndex;
            /*0x2c*/ UnityEngine.Color32 flags;
            /*0x30*/ UnityEngine.Vector4 circle;
        }

        struct GradientSettings
        {
            /*0x10*/ UnityEngine.UIElements.GradientType gradientType;
            /*0x14*/ UnityEngine.UIElements.AddressMode addressMode;
            /*0x18*/ UnityEngine.Vector2 radialFocus;
            /*0x20*/ UnityEngine.RectInt location;
        }

        class VectorImage : UnityEngine.ScriptableObject
        {
            /*0x18*/ int version;
            /*0x20*/ UnityEngine.Texture2D atlas;
            /*0x28*/ UnityEngine.UIElements.VectorImageVertex[] vertices;
            /*0x30*/ ushort[] indices;
            /*0x38*/ UnityEngine.UIElements.GradientSettings[] settings;
            /*0x40*/ UnityEngine.Vector2 size;

            /*0x17015b0*/ VectorImage();
            /*0xcf6cb0*/ float get_width();
            /*0x129f7a0*/ float get_height();
        }

        enum PseudoStates
        {
            Active = 1,
            Hover = 2,
            Checked = 8,
            Disabled = 32,
            Focus = 64,
            Root = 128,
        }

        enum VisualElementFlags
        {
            WorldTransformDirty = 1,
            WorldTransformInverseDirty = 2,
            WorldClipDirty = 4,
            BoundingBoxDirty = 8,
            WorldBoundingBoxDirty = 16,
            EventCallbackParentCategoriesDirty = 32,
            LayoutManual = 64,
            CompositeRoot = 128,
            RequireMeasureFunction = 256,
            EnableViewDataPersistence = 512,
            DisableClipping = 1024,
            NeedsAttachToPanelEvent = 2048,
            HierarchyDisplayed = 4096,
            StyleInitialized = 8192,
            Init = 4159,
        }

        enum PickingMode
        {
            Position = 0,
            Ignore = 1,
        }

        enum LanguageDirection
        {
            Inherit = 0,
            LTR = 1,
            RTL = 2,
        }

        class VisualElementListPool
        {
            static /*0x0*/ UnityEngine.UIElements.ObjectPool<System.Collections.Generic.List<UnityEngine.UIElements.VisualElement>> pool;

            static /*0x1706670*/ VisualElementListPool();
            static /*0x1706440*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> Copy(System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> elements);
            static /*0x17064f0*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> Get(int initialCapacity);
            static /*0x17065c0*/ void Release(System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> elements);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.VisualElementListPool.<> <>9;

                static /*0x16f5dd0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f5660*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> <.cctor>b__4_0();
            }
        }

        class ObjectListPool<T>
        {
            static /*0x0*/ UnityEngine.UIElements.ObjectPool<System.Collections.Generic.List<T>> pool;

            static /*0x180ff0*/ ObjectListPool();
            static /*0x180cf0*/ System.Collections.Generic.List<T> Get();
            static /*0x177be0*/ void Release(System.Collections.Generic.List<T> elements);

            class <>c<T>
            {
                static /*0x0*/ UnityEngine.UIElements.ObjectListPool.<>c<T> <>9;

                static /*0x180ff0*/ <>c();
                /*0x180fc0*/ <>c();
                /*0x1803b0*/ System.Collections.Generic.List<T> <.cctor>b__4_0();
            }
        }

        class VisualElementExtensions
        {
            static /*0x1701c40*/ void StretchToParentSize(UnityEngine.UIElements.VisualElement elem);
            static /*0x1701900*/ void AddManipulator(UnityEngine.UIElements.VisualElement ele, UnityEngine.UIElements.IManipulator manipulator);
            static /*0x1701bf0*/ void RemoveManipulator(UnityEngine.UIElements.VisualElement ele, UnityEngine.UIElements.IManipulator manipulator);
            static /*0x1702120*/ UnityEngine.Vector2 WorldToLocal(UnityEngine.UIElements.VisualElement ele, UnityEngine.Vector2 p);
            static /*0x1701b10*/ UnityEngine.Vector2 LocalToWorld(UnityEngine.UIElements.VisualElement ele, UnityEngine.Vector2 p);
            static /*0x1702040*/ UnityEngine.Rect WorldToLocal(UnityEngine.UIElements.VisualElement ele, UnityEngine.Rect r);
            static /*0x1701950*/ UnityEngine.Vector2 ChangeCoordinatesTo(UnityEngine.UIElements.VisualElement src, UnityEngine.UIElements.VisualElement dest, UnityEngine.Vector2 point);
        }

        class EventInterestReflectionUtils
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<System.Type, UnityEngine.UIElements.EventInterestReflectionUtils.DefaultEventInterests> s_DefaultEventInterests;
            static /*0x8*/ System.Collections.Generic.Dictionary<System.Type, UnityEngine.UIElements.EventCategory> s_EventCategories;

            static /*0x16ef9f0*/ EventInterestReflectionUtils();
            static /*0x16ef590*/ void GetDefaultEventInterests(System.Type elementType, ref int defaultActionCategories, ref int defaultActionAtTargetCategories);
            static /*0x16ef370*/ int ComputeDefaultEventInterests(System.Type elementType, string methodName);
            static /*0x16ef7c0*/ UnityEngine.UIElements.EventCategory GetEventCategory(System.Type eventType);

            struct DefaultEventInterests
            {
                /*0x10*/ int DefaultActionCategories;
                /*0x14*/ int DefaultActionAtTargetCategories;
            }
        }

        enum EventCategory
        {
            Default = 0,
            Pointer = 1,
            PointerMove = 2,
            EnterLeave = 3,
            EnterLeaveWindow = 4,
            Keyboard = 5,
            Geometry = 6,
            Style = 7,
            ChangeValue = 8,
            Bind = 9,
            Focus = 10,
            ChangePanel = 11,
            StyleTransition = 12,
            Navigation = 13,
            Command = 14,
            Tooltip = 15,
            IMGUI = 16,
            Reserved = 31,
        }

        enum EventCategoryFlags
        {
            None = 0,
            All = -1,
            TriggeredByOS = 81974,
            TargetOnly = 2768,
        }

        enum EventInterestOptions
        {
            Inherit = 0,
            AllEventTypes = -1,
        }

        class EventInterestAttribute : System.Attribute
        {
            /*0x10*/ System.Type[] eventTypes;
            /*0x18*/ UnityEngine.UIElements.EventCategoryFlags categoryFlags;

            /*0x16ef300*/ EventInterestAttribute(System.Type[] eventTypes);
            /*0x16ef340*/ EventInterestAttribute(UnityEngine.UIElements.EventInterestOptions interests);
        }

        class EventCategoryAttribute : System.Attribute
        {
            /*0x10*/ UnityEngine.UIElements.EventCategory category;

            /*0xea4040*/ EventCategoryAttribute(UnityEngine.UIElements.EventCategory category);
        }

        interface IExperimentalFeatures
        {
            /*0x1803b0*/ UnityEngine.UIElements.Experimental.ITransitionAnimations get_animation();
        }

        class VisualElementFocusChangeDirection : UnityEngine.UIElements.FocusChangeDirection
        {
            static /*0x0*/ UnityEngine.UIElements.VisualElementFocusChangeDirection s_Left;
            static /*0x8*/ UnityEngine.UIElements.VisualElementFocusChangeDirection s_Right;

            static /*0x1704640*/ VisualElementFocusChangeDirection();
            static /*0x1704880*/ UnityEngine.UIElements.FocusChangeDirection get_left();
            static /*0x17048d0*/ UnityEngine.UIElements.FocusChangeDirection get_right();
            /*0x1704820*/ VisualElementFocusChangeDirection(int value);
        }

        class VisualElementFocusChangeTarget : UnityEngine.UIElements.FocusChangeDirection
        {
            static /*0x0*/ UnityEngine.UIElements.ObjectPool<UnityEngine.UIElements.VisualElementFocusChangeTarget> Pool;
            /*0x18*/ UnityEngine.UIElements.Focusable <target>k__BackingField;

            static /*0x1704aa0*/ VisualElementFocusChangeTarget();
            static /*0x1704a00*/ UnityEngine.UIElements.VisualElementFocusChangeTarget GetPooled(UnityEngine.UIElements.Focusable target);
            /*0x1704bb0*/ VisualElementFocusChangeTarget();
            /*0x1704970*/ void Dispose();
            /*0x1704920*/ void ApplyTo(UnityEngine.UIElements.FocusController focusController, UnityEngine.UIElements.Focusable f);
            /*0x32f410*/ UnityEngine.UIElements.Focusable get_target();
            /*0x7963c0*/ void set_target(UnityEngine.UIElements.Focusable value);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.VisualElementFocusChangeTarget.<> <>9;

                static /*0x16f5cf0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x16f56c0*/ UnityEngine.UIElements.VisualElementFocusChangeTarget <.cctor>b__9_0();
            }
        }

        class VisualElementFocusRing : UnityEngine.UIElements.IFocusRing
        {
            /*0x10*/ UnityEngine.UIElements.VisualElement root;
            /*0x18*/ UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder <defaultFocusOrder>k__BackingField;
            /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord> m_FocusRing;

            static /*0x1705940*/ UnityEngine.UIElements.Focusable GetNextFocusableInTree(UnityEngine.UIElements.VisualElement currentFocusable);
            static /*0x1706060*/ UnityEngine.UIElements.Focusable GetPreviousFocusableInTree(UnityEngine.UIElements.VisualElement currentFocusable);
            /*0x17063a0*/ VisualElementFocusRing(UnityEngine.UIElements.VisualElement root, UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder dfo);
            /*0xe9ad40*/ UnityEngine.UIElements.FocusController get_focusController();
            /*0x8a5c20*/ UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder get_defaultFocusOrder();
            /*0x8a5c50*/ void set_defaultFocusOrder(UnityEngine.UIElements.VisualElementFocusRing.DefaultFocusOrder value);
            /*0x1705000*/ int FocusRingAutoIndexSort(UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord a, UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord b);
            /*0x17053c0*/ int FocusRingSort(UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord a, UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord b);
            /*0x1704f20*/ void DoUpdate();
            /*0x1704c50*/ void BuildRingForScopeRecursive(UnityEngine.UIElements.VisualElement ve, ref int scopeIndex, System.Collections.Generic.List<UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord> scopeList);
            /*0x1706150*/ void SortAndFlattenScopeLists(System.Collections.Generic.List<UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord> rootScopeList);
            /*0x1705890*/ int GetFocusableInternalIndex(UnityEngine.UIElements.Focusable f);
            /*0x17054e0*/ UnityEngine.UIElements.FocusChangeDirection GetFocusChangeDirection(UnityEngine.UIElements.Focusable currentFocusable, UnityEngine.UIElements.EventBase e);
            /*0x17059f0*/ UnityEngine.UIElements.Focusable GetNextFocusable(UnityEngine.UIElements.Focusable currentFocusable, UnityEngine.UIElements.FocusChangeDirection direction);

            enum DefaultFocusOrder
            {
                ChildOrder = 0,
                PositionXY = 1,
                PositionYX = 2,
            }

            class FocusRingRecord
            {
                /*0x10*/ int m_AutoIndex;
                /*0x18*/ UnityEngine.UIElements.Focusable m_Focusable;
                /*0x20*/ bool m_IsSlot;
                /*0x28*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElementFocusRing.FocusRingRecord> m_ScopeNavigationOrder;

                /*0x32f970*/ FocusRingRecord();
            }
        }

        interface IVisualElementScheduledItem
        {
            /*0x17cb40*/ bool get_isActive();
            /*0x180fc0*/ void Resume();
            /*0x180fc0*/ void Pause();
            /*0x17a1c0*/ void ExecuteLater(long delayMs);
            UnityEngine.UIElements.IVisualElementScheduledItem StartingIn(long delayMs);
            UnityEngine.UIElements.IVisualElementScheduledItem Every(long intervalMs);
        }

        interface IVisualElementScheduler
        {
            /*0x1858d0*/ UnityEngine.UIElements.IVisualElementScheduledItem Execute(System.Action<UnityEngine.UIElements.TimerState> timerUpdateEvent);
            /*0x1858d0*/ UnityEngine.UIElements.IVisualElementScheduledItem Execute(System.Action updateEvent);
        }

        interface IVisualElementPanelActivatable
        {
            /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_element();
            /*0x17cb40*/ bool CanBeActivated();
            /*0x180fc0*/ void OnPanelActivate();
            /*0x180fc0*/ void OnPanelDeactivate();
        }

        class VisualElementPanelActivator
        {
            /*0x10*/ UnityEngine.UIElements.IVisualElementPanelActivatable m_Activatable;
            /*0x18*/ bool <isActive>k__BackingField;
            /*0x19*/ bool <isDetaching>k__BackingField;
            /*0x20*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.AttachToPanelEvent> m_OnAttachToPanelCallback;
            /*0x28*/ UnityEngine.UIElements.EventCallback<UnityEngine.UIElements.DetachFromPanelEvent> m_OnDetachFromPanelCallback;

            /*0x1720200*/ VisualElementPanelActivator(UnityEngine.UIElements.IVisualElementPanelActivatable activatable);
            /*0xdd36a0*/ bool get_isActive();
            /*0xdd5230*/ void set_isActive(bool value);
            /*0x10a65f0*/ bool get_isDetaching();
            /*0x10a6600*/ void set_isDetaching(bool value);
            /*0x17200a0*/ void SetActive(bool action);
            /*0x171ffc0*/ void SendActivation();
            /*0x1720030*/ void SendDeactivation();
            /*0x171ff50*/ void OnEnter(UnityEngine.UIElements.AttachToPanelEvent evt);
            /*0x171ff60*/ void OnLeave(UnityEngine.UIElements.DetachFromPanelEvent evt);
        }

        struct VisualElementStyleSheetSet : System.IEquatable<UnityEngine.UIElements.VisualElementStyleSheetSet>
        {
            /*0x10*/ UnityEngine.UIElements.VisualElement m_Element;

            /*0x792990*/ VisualElementStyleSheetSet(UnityEngine.UIElements.VisualElement element);
            /*0x17202e0*/ void Add(UnityEngine.UIElements.StyleSheet styleSheet);
            /*0x1720550*/ bool Remove(UnityEngine.UIElements.StyleSheet styleSheet);
            /*0x1720510*/ bool Equals(UnityEngine.UIElements.VisualElementStyleSheetSet other);
            /*0x1720480*/ bool Equals(object obj);
            /*0x1720520*/ int GetHashCode();
        }

        class VisualElementUtils
        {
            static /*0x0*/ System.Collections.Generic.HashSet<string> s_usedNames;
            static /*0x8*/ System.Type s_FoldoutType;
            static /*0x10*/ string s_InspectorElementUssClassName;

            static /*0x17209e0*/ VisualElementUtils();
            static /*0x17208d0*/ string GetUniqueName(string nameBase);
            static /*0x17207e0*/ int GetFoldoutDepth(UnityEngine.UIElements.VisualElement element);
            static /*0x17206b0*/ void AssignInspectorStyleIfNecessary(UnityEngine.UIElements.VisualElement element, string classNameToEnable);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.VisualElementUtils.<> <>9;
                static /*0x8*/ System.Predicate<UnityEngine.UIElements.VisualElement> <>9__5_0;

                static /*0x1716fe0*/ <>c();
                /*0x32f970*/ <>c();
                /*0x1716e40*/ bool <AssignInspectorStyleIfNecessary>b__5_0(UnityEngine.UIElements.VisualElement i);
            }
        }

        class VisualElementAnimationSystem : UnityEngine.UIElements.BaseVisualTreeUpdater
        {
            static /*0x0*/ string s_Description;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_ProfilerMarker;
            static /*0x10*/ string s_StylePropertyAnimationDescription;
            static /*0x18*/ Unity.Profiling.ProfilerMarker s_StylePropertyAnimationProfilerMarker;
            /*0x20*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> m_Animations;
            /*0x28*/ System.Collections.Generic.List<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> m_IterationList;
            /*0x30*/ bool m_HasNewAnimations;
            /*0x31*/ bool m_IterationListDirty;
            /*0x38*/ long lastUpdate;

            static /*0x171fcc0*/ VisualElementAnimationSystem();
            static /*0x171ff00*/ Unity.Profiling.ProfilerMarker get_stylePropertyAnimationProfilerMarker();
            /*0x171fde0*/ VisualElementAnimationSystem();
            /*0x171feb0*/ Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x171f780*/ void UnregisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim);
            /*0x171f7e0*/ void UnregisterAnimations(System.Collections.Generic.List<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> anims);
            /*0x171f5e0*/ void RegisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim);
            /*0x171f640*/ void RegisterAnimations(System.Collections.Generic.List<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> anims);
            /*0x171f920*/ void Update();
            /*0x32d010*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
        }

        class VisualTreeHierarchyFlagsUpdater : UnityEngine.UIElements.BaseVisualTreeUpdater
        {
            static /*0x0*/ string s_Description;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_ProfilerMarker;
            /*0x20*/ uint m_Version;
            /*0x24*/ uint m_LastVersion;

            static /*0x1720e40*/ VisualTreeHierarchyFlagsUpdater();
            static /*0x1720b90*/ void DirtyHierarchy(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElementFlags mustDirtyFlags);
            static /*0x1720b20*/ void DirtyBoundingBoxHierarchy(UnityEngine.UIElements.VisualElement ve);
            /*0x1720ee0*/ VisualTreeHierarchyFlagsUpdater();
            /*0x1720ef0*/ Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x1720c80*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x1720dd0*/ void Update();
        }

        enum HierarchyChangeType
        {
            Add = 0,
            Remove = 1,
            Move = 2,
        }

        class BaseVisualTreeHierarchyTrackerUpdater : UnityEngine.UIElements.BaseVisualTreeUpdater
        {
            /*0x20*/ UnityEngine.UIElements.BaseVisualTreeHierarchyTrackerUpdater.State m_State;
            /*0x28*/ UnityEngine.UIElements.VisualElement m_CurrentChangeElement;
            /*0x30*/ UnityEngine.UIElements.VisualElement m_CurrentChangeParent;

            /*0x170b5c0*/ BaseVisualTreeHierarchyTrackerUpdater();
            /*0x182a70*/ void OnHierarchyChange(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType type);
            /*0x170b0d0*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x170b500*/ void Update();
            /*0x170b3b0*/ void ProcessNewChange(UnityEngine.UIElements.VisualElement ve);
            /*0x170b2f0*/ void ProcessAddOrMove(UnityEngine.UIElements.VisualElement ve);
            /*0x170b460*/ void ProcessRemove(UnityEngine.UIElements.VisualElement ve);

            enum State
            {
                Waiting = 0,
                TrackingAddOrMove = 1,
                TrackingRemove = 2,
            }
        }

        class StyleCache
        {
            static /*0x0*/ System.Collections.Generic.Dictionary<long, UnityEngine.UIElements.ComputedStyle> s_ComputedStyleCache;
            static /*0x8*/ System.Collections.Generic.Dictionary<int, UnityEngine.UIElements.StyleVariableContext> s_StyleVariableContextCache;
            static /*0x10*/ System.Collections.Generic.Dictionary<int, UnityEngine.UIElements.ComputedTransitionProperty[]> s_ComputedTransitionsCache;

            static /*0x1716a30*/ StyleCache();
            static /*0x17169a0*/ bool TryGetValue(long hash, ref UnityEngine.UIElements.ComputedStyle data);
            static /*0x1716690*/ void SetValue(long hash, ref UnityEngine.UIElements.ComputedStyle data);
            static /*0x1716880*/ bool TryGetValue(int hash, ref UnityEngine.UIElements.StyleVariableContext data);
            static /*0x1716760*/ void SetValue(int hash, UnityEngine.UIElements.StyleVariableContext data);
            static /*0x1716910*/ bool TryGetValue(int hash, ref UnityEngine.UIElements.ComputedTransitionProperty[] data);
            static /*0x17167f0*/ void SetValue(int hash, UnityEngine.UIElements.ComputedTransitionProperty[] data);
        }

        class VisualTreeStyleUpdater : UnityEngine.UIElements.BaseVisualTreeUpdater
        {
            static /*0x0*/ string s_Description;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_ProfilerMarker;
            /*0x20*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_ApplyStyleUpdateList;
            /*0x28*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_TransitionPropertyUpdateList;
            /*0x30*/ bool m_IsApplyingStyles;
            /*0x34*/ uint m_Version;
            /*0x38*/ uint m_LastVersion;
            /*0x40*/ UnityEngine.UIElements.VisualTreeStyleUpdaterTraversal m_StyleContextHierarchyTraversal;
            /*0x48*/ bool <disposed>k__BackingField;

            static /*0x1723690*/ VisualTreeStyleUpdater();
            /*0x1723730*/ VisualTreeStyleUpdater();
            /*0x1723820*/ Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x17231f0*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x17232b0*/ void Update();
            /*0xe85db0*/ bool get_disposed();
            /*0x10d9810*/ void set_disposed(bool value);
            /*0x17231b0*/ void Dispose(bool disposing);
            /*0x17230b0*/ void ApplyStyles();
        }

        class StyleMatchingContext
        {
            /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheet> m_StyleSheetStack;
            /*0x18*/ UnityEngine.UIElements.StyleVariableContext variableContext;
            /*0x20*/ UnityEngine.UIElements.VisualElement currentElement;
            /*0x28*/ System.Action<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.StyleSheets.MatchResultInfo> processResult;
            /*0x30*/ UnityEngine.UIElements.AncestorFilter ancestorFilter;

            /*0x1716ce0*/ StyleMatchingContext(System.Action<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.StyleSheets.MatchResultInfo> processResult);
            /*0x1716e00*/ int get_styleSheetCount();
            /*0x1716b80*/ void AddStyleSheet(UnityEngine.UIElements.StyleSheet sheet);
            /*0x1716c70*/ void RemoveStyleSheetRange(int index, int count);
            /*0x1716c10*/ UnityEngine.UIElements.StyleSheet GetStyleSheetAt(int index);
        }

        class VisualTreeStyleUpdaterTraversal : UnityEngine.UIElements.StyleSheets.HierarchyTraversal
        {
            /*0x10*/ UnityEngine.UIElements.StyleVariableContext m_ProcessVarContext;
            /*0x18*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_UpdateList;
            /*0x20*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_ParentList;
            /*0x28*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.SelectorMatchRecord> m_TempMatchResults;
            /*0x30*/ float <currentPixelsPerPoint>k__BackingField;
            /*0x38*/ UnityEngine.UIElements.StyleMatchingContext m_StyleMatchingContext;
            /*0x40*/ UnityEngine.UIElements.StyleSheets.StylePropertyReader m_StylePropertyReader;
            /*0x48*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyId> m_AnimatedProperties;

            static /*0x1721510*/ void OnProcessMatchResult(UnityEngine.UIElements.VisualElement current, UnityEngine.UIElements.StyleSheets.MatchResultInfo info);
            /*0x1722d90*/ VisualTreeStyleUpdaterTraversal();
            /*0x1101d20*/ float get_currentPixelsPerPoint();
            /*0x1102a70*/ void set_currentPixelsPerPoint(float value);
            /*0x1102a70*/ void PrepareTraversal(float pixelsPerPoint);
            /*0x1720f40*/ void AddChangedElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x1721230*/ void Clear();
            /*0x17222e0*/ void PropagateToChildren(UnityEngine.UIElements.VisualElement ve);
            /*0x17223c0*/ void PropagateToParents(UnityEngine.UIElements.VisualElement ve);
            /*0x17224f0*/ void TraverseRecursive(UnityEngine.UIElements.VisualElement element, int depth);
            /*0x17221b0*/ void ProcessTransitions(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle oldStyle, ref UnityEngine.UIElements.ComputedStyle newStyle);
            /*0x17212d0*/ void ForceUpdateTransitions(UnityEngine.UIElements.VisualElement element);
            /*0x1721050*/ void CancelAnimationsWithNoTransitionProperty(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle newStyle);
            /*0x1722470*/ bool ShouldSkipElement(UnityEngine.UIElements.VisualElement element);
            /*0x1721550*/ UnityEngine.UIElements.ComputedStyle ProcessMatchedRules(UnityEngine.UIElements.VisualElement element, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.SelectorMatchRecord> matchingSelectors);
            /*0x1722090*/ void ProcessMatchedVariables(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleRule rule);

            class <>c
            {
                static /*0x0*/ UnityEngine.UIElements.VisualTreeStyleUpdaterTraversal.<> <>9;
                static /*0x8*/ System.Comparison<UnityEngine.UIElements.StyleSheets.SelectorMatchRecord> <>9__24_0;

                static /*0x1716f70*/ <>c();
                /*0x32f970*/ <>c();
                /*0x1716eb0*/ int <ProcessMatchedRules>b__24_0(UnityEngine.UIElements.StyleSheets.SelectorMatchRecord a, UnityEngine.UIElements.StyleSheets.SelectorMatchRecord b);
            }
        }

        enum VisualTreeUpdatePhase
        {
            ViewData = 0,
            Bindings = 1,
            Animation = 2,
            Styles = 3,
            Layout = 4,
            TransformClip = 5,
            Repaint = 6,
            Count = 7,
        }

        class VisualTreeUpdater : System.IDisposable
        {
            /*0x10*/ UnityEngine.UIElements.BaseVisualElementPanel m_Panel;
            /*0x18*/ UnityEngine.UIElements.VisualTreeUpdater.UpdaterArray m_UpdaterArray;

            /*0x1723dc0*/ VisualTreeUpdater(UnityEngine.UIElements.BaseVisualElementPanel panel);
            /*0x1723870*/ void Dispose();
            /*0x1723c20*/ void UpdateVisualTreePhase(UnityEngine.UIElements.VisualTreeUpdatePhase phase);
            /*0x17239e0*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x17aa40*/ void SetUpdater<T>(UnityEngine.UIElements.VisualTreeUpdatePhase phase);
            /*0x17239a0*/ UnityEngine.UIElements.IVisualTreeUpdater GetUpdater(UnityEngine.UIElements.VisualTreeUpdatePhase phase);
            /*0x1723b20*/ void SetDefaultUpdaters();

            class UpdaterArray
            {
                /*0x10*/ UnityEngine.UIElements.IVisualTreeUpdater[] m_VisualTreeUpdaters;

                /*0x171dde0*/ UpdaterArray();
                /*0x171de70*/ void set_Item(UnityEngine.UIElements.VisualTreeUpdatePhase phase, UnityEngine.UIElements.IVisualTreeUpdater value);
                /*0x171de40*/ UnityEngine.UIElements.IVisualTreeUpdater get_Item(UnityEngine.UIElements.VisualTreeUpdatePhase phase);
                /*0x171de40*/ UnityEngine.UIElements.IVisualTreeUpdater get_Item(int index);
            }
        }

        interface IVisualTreeUpdater : System.IDisposable
        {
            /*0x17aec0*/ void set_panel(UnityEngine.UIElements.BaseVisualElementPanel value);
            Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x180fc0*/ void Update();
            /*0x182a70*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
        }

        class BaseVisualTreeUpdater : UnityEngine.UIElements.IVisualTreeUpdater, System.IDisposable
        {
            /*0x10*/ System.Action<UnityEngine.UIElements.BaseVisualElementPanel> panelChanged;
            /*0x18*/ UnityEngine.UIElements.BaseVisualElementPanel m_Panel;

            /*0x32f970*/ BaseVisualTreeUpdater();
            /*0x170b640*/ void add_panelChanged(System.Action<UnityEngine.UIElements.BaseVisualElementPanel> value);
            /*0x170b6f0*/ void remove_panelChanged(System.Action<UnityEngine.UIElements.BaseVisualElementPanel> value);
            /*0x8b8f40*/ UnityEngine.UIElements.BaseVisualElementPanel get_panel();
            /*0x170b7a0*/ void set_panel(UnityEngine.UIElements.BaseVisualElementPanel value);
            /*0xedcbd0*/ UnityEngine.UIElements.VisualElement get_visualTree();
            Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x170b5d0*/ void Dispose();
            /*0x32d010*/ void Dispose(bool disposing);
            /*0x180fc0*/ void Update();
            /*0x182a70*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
        }

        class VisualTreeViewDataUpdater : UnityEngine.UIElements.BaseVisualTreeUpdater
        {
            static /*0x0*/ string s_Description;
            static /*0x8*/ Unity.Profiling.ProfilerMarker s_ProfilerMarker;
            /*0x20*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_UpdateList;
            /*0x28*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.VisualElement> m_ParentList;
            /*0x30*/ uint m_Version;
            /*0x34*/ uint m_LastVersion;

            static /*0x17243e0*/ VisualTreeViewDataUpdater();
            /*0x1724480*/ VisualTreeViewDataUpdater();
            /*0x1724530*/ Unity.Profiling.ProfilerMarker get_profilerMarker();
            /*0x1723f70*/ void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType);
            /*0x1724120*/ void Update();
            /*0x1724280*/ void ValidateViewDataOnSubTree(UnityEngine.UIElements.VisualElement ve, bool enablePersistence);
            /*0x1724070*/ void PropagateToParents(UnityEngine.UIElements.VisualElement ve);
        }

        namespace UIR
        {
            struct GfxUpdateBufferRange
            {
                /*0x10*/ uint offsetFromWriteStart;
                /*0x14*/ uint size;
                /*0x18*/ nuint source;
            }

            struct DrawBufferRange
            {
                /*0x10*/ int firstIndex;
                /*0x14*/ int indexCount;
                /*0x18*/ int minIndexVal;
                /*0x1c*/ int vertsReferenced;
            }

            class Utility
            {
                static /*0x0*/ System.Action<bool> GraphicsResourcesRecreate;
                static /*0x8*/ System.Action EngineUpdate;
                static /*0x10*/ System.Action FlushPendingResources;
                static /*0x18*/ System.Action<UnityEngine.Camera> RegisterIntermediateRenderers;
                static /*0x20*/ System.Action<nint> RenderNodeAdd;
                static /*0x28*/ System.Action<nint> RenderNodeExecute;
                static /*0x30*/ System.Action<nint> RenderNodeCleanup;
                static /*0x38*/ Unity.Profiling.ProfilerMarker s_MarkerRaiseEngineUpdate;

                static /*0x171eb20*/ Utility();
                static /*0x2a5510*/ void SetVectorArray<T>(UnityEngine.MaterialPropertyBlock props, int name, Unity.Collections.NativeSlice<T> vector4s);
                static /*0x171ed80*/ void add_GraphicsResourcesRecreate(System.Action<bool> value);
                static /*0x171f2b0*/ void remove_GraphicsResourcesRecreate(System.Action<bool> value);
                static /*0x171eb80*/ void add_EngineUpdate(System.Action value);
                static /*0x171f0b0*/ void remove_EngineUpdate(System.Action value);
                static /*0x171ec80*/ void add_FlushPendingResources(System.Action value);
                static /*0x171f1b0*/ void remove_FlushPendingResources(System.Action value);
                static /*0x171ee90*/ void add_RegisterIntermediateRenderers(System.Action<UnityEngine.Camera> value);
                static /*0x171f3c0*/ void remove_RegisterIntermediateRenderers(System.Action<UnityEngine.Camera> value);
                static /*0x171efa0*/ void add_RenderNodeExecute(System.Action<nint> value);
                static /*0x171f4d0*/ void remove_RenderNodeExecute(System.Action<nint> value);
                static /*0x171e4c0*/ void RaiseGraphicsResourcesRecreate(bool recreate);
                static /*0x171e3c0*/ void RaiseEngineUpdate();
                static /*0x171e450*/ void RaiseFlushPendingResources();
                static /*0x171e530*/ void RaiseRegisterIntermediateRenderers(UnityEngine.Camera camera);
                static /*0x171e5b0*/ void RaiseRenderNodeAdd(nint userData);
                static /*0x171e6b0*/ void RaiseRenderNodeExecute(nint userData);
                static /*0x171e630*/ void RaiseRenderNodeCleanup(nint userData);
                static /*0x171def0*/ nint AllocateBuffer(int elementCount, int elementStride, bool vertexBuffer);
                static /*0x171e0d0*/ void FreeBuffer(nint buffer);
                static /*0x171ea70*/ void UpdateBufferRanges(nint buffer, nint ranges, int rangeCount, int writeRangeStart, int writeRangeEnd);
                static /*0x171e9e0*/ void SetVectorArray(UnityEngine.MaterialPropertyBlock props, int name, nint vector4s, int count);
                static /*0x171e280*/ nint GetVertexDeclaration(UnityEngine.Rendering.VertexAttributeDescriptor[] vertexAttributes);
                static /*0x171e7b0*/ void RegisterIntermediateRenderer(UnityEngine.Camera camera, UnityEngine.Material material, UnityEngine.Matrix4x4 transform, UnityEngine.Bounds aabb, int renderLayer, int shadowCasting, bool receiveShadows, int sameDistanceSortPriority, ulong sceneCullingMask, int rendererCallbackFlags, nint userData, int userDataSize);
                static /*0x171e060*/ void DrawRanges(nint ib, nint* vertexStreams, int streamCount, nint ranges, int rangeCount, nint vertexDecl);
                static /*0x171e8b0*/ void SetPropertyBlock(UnityEngine.MaterialPropertyBlock props);
                static /*0x171e930*/ void SetScissorRect(UnityEngine.RectInt scissorRect);
                static /*0x171e030*/ void DisableScissor();
                static /*0x171dfc0*/ nint CreateStencilState(UnityEngine.Rendering.StencilState stencilState);
                static /*0x171e9a0*/ void SetStencilState(nint stencilState, int stencilRef);
                static /*0x171e2c0*/ bool HasMappedBufferRange();
                static /*0x171e2f0*/ uint InsertCPUFence();
                static /*0x171df40*/ bool CPUFencePassed(uint fence);
                static /*0x171eae0*/ void WaitForCPUFencePassed(uint fence);
                static /*0x171ea40*/ void SyncRenderThread();
                static /*0x171e150*/ UnityEngine.RectInt GetActiveViewport();
                static /*0x171e360*/ void ProfileDrawChainBegin();
                static /*0x171e390*/ void ProfileDrawChainEnd();
                static /*0x171e320*/ void NotifyOfUIREvents(bool subscribe);
                static /*0x171e200*/ UnityEngine.Matrix4x4 GetUnityProjectionMatrix();
                static /*0x171e730*/ void RegisterIntermediateRenderer_Injected(UnityEngine.Camera camera, UnityEngine.Material material, ref UnityEngine.Matrix4x4 transform, ref UnityEngine.Bounds aabb, int renderLayer, int shadowCasting, bool receiveShadows, int sameDistanceSortPriority, ulong sceneCullingMask, int rendererCallbackFlags, nint userData, int userDataSize);
                static /*0x171e8f0*/ void SetScissorRect_Injected(ref UnityEngine.RectInt scissorRect);
                static /*0x171df80*/ nint CreateStencilState_Injected(ref UnityEngine.Rendering.StencilState stencilState);
                static /*0x171e110*/ void GetActiveViewport_Injected(ref UnityEngine.RectInt ret);
                static /*0x171e1c0*/ void GetUnityProjectionMatrix_Injected(ref UnityEngine.Matrix4x4 ret);

                enum GPUBufferType
                {
                    Vertex = 0,
                    Index = 1,
                }

                class GPUBuffer<T> : System.IDisposable
                {
                    /*0x0*/ nint buffer;
                    /*0x0*/ int elemCount;
                    /*0x0*/ int elemStride;

                    /*0x1817d0*/ GPUBuffer(int elementCount, UnityEngine.UIElements.UIR.Utility.GPUBufferType type);
                    /*0x180fc0*/ void Dispose();
                    /*0x2a5510*/ void UpdateRanges(Unity.Collections.NativeSlice<UnityEngine.UIElements.UIR.GfxUpdateBufferRange> ranges, int rangesMin, int rangesMax);
                    /*0x180980*/ int get_ElementStride();
                    nint get_BufferPointer();
                }
            }

            class JobProcessor
            {
                static /*0x170edc0*/ Unity.Jobs.JobHandle ScheduleNudgeJobs(nint buffer, int jobCount);
                static /*0x170ec60*/ Unity.Jobs.JobHandle ScheduleConvertMeshJobs(nint buffer, int jobCount);
                static /*0x170ed10*/ Unity.Jobs.JobHandle ScheduleCopyClosingMeshJobs(nint buffer, int jobCount);
                static /*0x170ed70*/ void ScheduleNudgeJobs_Injected(nint buffer, int jobCount, ref Unity.Jobs.JobHandle ret);
                static /*0x170ec10*/ void ScheduleConvertMeshJobs_Injected(nint buffer, int jobCount, ref Unity.Jobs.JobHandle ret);
                static /*0x170ecc0*/ void ScheduleCopyClosingMeshJobs_Injected(nint buffer, int jobCount, ref Unity.Jobs.JobHandle ret);
            }

            class Allocator2D
            {
                /*0x10*/ UnityEngine.Vector2Int m_MinSize;
                /*0x18*/ UnityEngine.Vector2Int m_MaxSize;
                /*0x20*/ UnityEngine.Vector2Int m_MaxAllocSize;
                /*0x28*/ int m_RowHeightBias;
                /*0x30*/ UnityEngine.UIElements.UIR.Allocator2D.Row[] m_Rows;
                /*0x38*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.Allocator2D.Area> m_Areas;

                static /*0x170a150*/ void BuildAreas(System.Collections.Generic.List<UnityEngine.UIElements.UIR.Allocator2D.Area> areas, UnityEngine.Vector2Int minSize, UnityEngine.Vector2Int maxSize);
                static /*0x170a400*/ UnityEngine.Vector2Int ComputeMaxAllocSize(System.Collections.Generic.List<UnityEngine.UIElements.UIR.Allocator2D.Area> areas, int rowHeightBias);
                static /*0x170a390*/ UnityEngine.UIElements.UIR.Allocator2D.Row[] BuildRowArray(int maxRowHeight, int rowHeightBias);
                /*0x170ac90*/ Allocator2D(UnityEngine.Vector2Int minSize, UnityEngine.Vector2Int maxSize, int rowHeightBias);
                /*0x170a750*/ bool TryAllocate(int width, int height, ref UnityEngine.UIElements.UIR.Allocator2D.Alloc2D alloc2D);
                /*0x170a4e0*/ void Free(UnityEngine.UIElements.UIR.Allocator2D.Alloc2D alloc2D);

                class Area
                {
                    /*0x10*/ UnityEngine.RectInt rect;
                    /*0x20*/ UnityEngine.UIElements.UIR.BestFitAllocator allocator;

                    /*0x170b050*/ Area(UnityEngine.RectInt rect);
                }

                class Row : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.UIR.Allocator2D.Row>
                {
                    static /*0x0*/ UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.UIR.Allocator2D.Row> pool;
                    /*0x18*/ UnityEngine.RectInt rect;
                    /*0x28*/ UnityEngine.UIElements.UIR.Allocator2D.Area area;
                    /*0x30*/ UnityEngine.UIElements.UIR.BestFitAllocator allocator;
                    /*0x38*/ UnityEngine.UIElements.UIR.Alloc alloc;
                    /*0x50*/ UnityEngine.UIElements.UIR.Allocator2D.Row next;

                    static /*0x1716530*/ Row();
                    static /*0x1716450*/ UnityEngine.UIElements.UIR.Allocator2D.Row Create();
                    static /*0x17164c0*/ void Reset(UnityEngine.UIElements.UIR.Allocator2D.Row row);
                    /*0x1716650*/ Row();
                }

                struct Alloc2D
                {
                    /*0x10*/ UnityEngine.RectInt rect;
                    /*0x20*/ UnityEngine.UIElements.UIR.Allocator2D.Row row;
                    /*0x28*/ UnityEngine.UIElements.UIR.Alloc alloc;

                    /*0x1709fe0*/ Alloc2D(UnityEngine.UIElements.UIR.Allocator2D.Row row, UnityEngine.UIElements.UIR.Alloc alloc, int width, int height);
                }
            }

            class DetachedAllocator : System.IDisposable
            {
                /*0x10*/ UnityEngine.UIElements.UIR.TempAllocator<UnityEngine.UIElements.Vertex> m_VertsPool;
                /*0x18*/ UnityEngine.UIElements.UIR.TempAllocator<ushort> m_IndexPool;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.MeshWriteData> m_MeshWriteDataPool;
                /*0x28*/ int m_MeshWriteDataCount;
                /*0x2c*/ bool m_Disposed;

                /*0x170c4e0*/ DetachedAllocator();
                /*0x170c3a0*/ void Dispose();
                /*0x170c450*/ void Dispose(bool disposing);
            }

            struct Transform3x4
            {
                /*0x10*/ UnityEngine.Vector4 v0;
                /*0x20*/ UnityEngine.Vector4 v1;
                /*0x30*/ UnityEngine.Vector4 v2;
            }

            class MeshHandle : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.UIR.MeshHandle>
            {
                /*0x18*/ UnityEngine.UIElements.UIR.Alloc allocVerts;
                /*0x30*/ UnityEngine.UIElements.UIR.Alloc allocIndices;
                /*0x48*/ uint triangleCount;
                /*0x50*/ UnityEngine.UIElements.UIR.Page allocPage;
                /*0x58*/ uint allocTime;
                /*0x5c*/ uint updateAllocID;

                /*0x170f920*/ MeshHandle();
            }

            class UIRenderDevice : System.IDisposable
            {
                static /*0x0*/ System.Collections.Generic.LinkedList<UnityEngine.UIElements.UIR.UIRenderDevice.DeviceToFree> m_DeviceFreeQueue;
                static /*0x8*/ int m_ActiveDeviceCount;
                static /*0xc*/ bool m_SubscribedToNotifications;
                static /*0xd*/ bool m_SynchronousFree;
                static /*0x10*/ int s_GradientSettingsTexID;
                static /*0x14*/ int s_ShaderInfoTexID;
                static /*0x18*/ int s_TransformsPropID;
                static /*0x1c*/ int s_ClipRectsPropID;
                static /*0x20*/ Unity.Profiling.ProfilerMarker s_MarkerAllocate;
                static /*0x28*/ Unity.Profiling.ProfilerMarker s_MarkerFree;
                static /*0x30*/ Unity.Profiling.ProfilerMarker s_MarkerAdvanceFrame;
                static /*0x38*/ Unity.Profiling.ProfilerMarker s_MarkerFence;
                static /*0x40*/ Unity.Profiling.ProfilerMarker s_MarkerBeforeDraw;
                static /*0x48*/ System.Nullable<bool> s_VertexTexturingIsAvailable;
                static /*0x4a*/ System.Nullable<bool> s_ShaderModelIs35;
                static /*0x50*/ UnityEngine.Texture2D s_DefaultShaderInfoTexFloat;
                static /*0x58*/ UnityEngine.Texture2D s_DefaultShaderInfoTexARGB8;
                /*0x10*/ bool m_MockDevice;
                /*0x18*/ nint m_DefaultStencilState;
                /*0x20*/ nint m_VertexDecl;
                /*0x28*/ UnityEngine.UIElements.UIR.Page m_FirstPage;
                /*0x30*/ uint m_NextPageVertexCount;
                /*0x34*/ uint m_LargeMeshVertexCount;
                /*0x38*/ float m_IndexToVertexCountRatio;
                /*0x40*/ System.Collections.Generic.List<System.Collections.Generic.List<UnityEngine.UIElements.UIR.UIRenderDevice.AllocToFree>> m_DeferredFrees;
                /*0x48*/ System.Collections.Generic.List<System.Collections.Generic.List<UnityEngine.UIElements.UIR.UIRenderDevice.AllocToUpdate>> m_Updates;
                /*0x50*/ uint[] m_Fences;
                /*0x58*/ UnityEngine.MaterialPropertyBlock m_StandardMatProps;
                /*0x60*/ uint m_FrameIndex;
                /*0x64*/ uint m_NextUpdateID;
                /*0x68*/ UnityEngine.UIElements.UIR.UIRenderDevice.DrawStatistics m_DrawStats;
                /*0x90*/ UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.UIR.MeshHandle> m_MeshHandles;
                /*0x98*/ UnityEngine.UIElements.UIR.DrawParams m_DrawParams;
                /*0xa0*/ UnityEngine.UIElements.UIR.TextureSlotManager m_TextureSlotManager;
                /*0xa8*/ uint <maxVerticesPerPage>k__BackingField;
                /*0xac*/ bool <breakBatches>k__BackingField;
                /*0xad*/ bool <disposed>k__BackingField;

                static /*0x171c3b0*/ UIRenderDevice();
                static /*0x171d410*/ UnityEngine.Texture2D get_defaultShaderInfoTexFloat();
                static /*0x171d040*/ UnityEngine.Texture2D get_defaultShaderInfoTexARGB8();
                static /*0x171dbe0*/ bool get_vertexTexturingIsAvailable();
                static /*0x171da00*/ bool get_shaderModelIs35();
                static /*0x2a5510*/ Unity.Collections.NativeSlice<T> PtrToSlice<T>(void* p, int count);
                static /*0x171a9d0*/ void PrepareForGfxDeviceRecreate();
                static /*0x171c350*/ void WrapUpGfxDeviceRecreate();
                static /*0x1719ae0*/ void FlushAllPendingDeviceDisposes();
                static /*0x171abc0*/ void ProcessDeviceFreeQueue();
                static /*0x171a890*/ void OnEngineUpdateGlobal();
                static /*0x171a8d0*/ void OnFlushPendingResources();
                /*0x171d010*/ UIRenderDevice(uint initialVertexCapacity, uint initialIndexCapacity);
                /*0x171c860*/ UIRenderDevice(uint initialVertexCapacity, uint initialIndexCapacity, bool mockDevice);
                /*0xb69a60*/ uint get_maxVerticesPerPage();
                /*0x171d030*/ bool get_breakBatches();
                /*0x171ddc0*/ void set_breakBatches(bool value);
                /*0x171a2a0*/ void InitVertexDeclaration();
                /*0x17188b0*/ void CompleteCreation();
                /*0x171d9f0*/ bool get_fullyCreated();
                /*0x171d9e0*/ bool get_disposed();
                /*0x171ddd0*/ void set_disposed(bool value);
                /*0x1718c60*/ void Dispose();
                /*0x1718ac0*/ void Dispose(bool disposing);
                /*0x1717bc0*/ UnityEngine.UIElements.UIR.MeshHandle Allocate(uint vertexCount, uint indexCount, ref Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertexData, ref Unity.Collections.NativeSlice<ushort> indexData, ref ushort indexOffset);
                /*0x171bd80*/ void Update(UnityEngine.UIElements.UIR.MeshHandle mesh, uint vertexCount, ref Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertexData);
                /*0x171bfc0*/ void Update(UnityEngine.UIElements.UIR.MeshHandle mesh, uint vertexCount, uint indexCount, ref Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertexData, ref Unity.Collections.NativeSlice<ushort> indexData, ref ushort indexOffset);
                /*0x171bb50*/ void UpdateCopyBackIndices(UnityEngine.UIElements.UIR.MeshHandle mesh, bool copyBackIndices);
                /*0x17170c0*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.UIRenderDevice.AllocToUpdate> ActiveUpdatesForMeshHandle(UnityEngine.UIElements.UIR.MeshHandle mesh);
                /*0x171b270*/ bool TryAllocFromPage(UnityEngine.UIElements.UIR.Page page, uint vertexCount, uint indexCount, ref UnityEngine.UIElements.UIR.Alloc va, ref UnityEngine.UIElements.UIR.Alloc ia, bool shortLived);
                /*0x1717c90*/ void Allocate(UnityEngine.UIElements.UIR.MeshHandle meshHandle, uint vertexCount, uint indexCount, ref Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertexData, ref Unity.Collections.NativeSlice<ushort> indexData, bool shortLived);
                /*0x171b410*/ void UpdateAfterGPUUsedData(UnityEngine.UIElements.UIR.MeshHandle mesh, uint vertexCount, uint indexCount, ref Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertexData, ref Unity.Collections.NativeSlice<ushort> indexData, ref ushort indexOffset, ref UnityEngine.UIElements.UIR.UIRenderDevice.AllocToUpdate allocToUpdate, bool copyBackIndices);
                /*0x1719b70*/ void Free(UnityEngine.UIElements.UIR.MeshHandle mesh);
                /*0x171a930*/ void OnFrameRenderingBegin();
                /*0x17186f0*/ void ApplyDrawCommandState(UnityEngine.UIElements.UIR.RenderChainCommand cmd, int textureSlot, UnityEngine.Material newMat, bool newMatDiffers, ref UnityEngine.UIElements.UIR.UIRenderDevice.EvaluationState st);
                /*0x1718520*/ void ApplyBatchState(ref UnityEngine.UIElements.UIR.UIRenderDevice.EvaluationState st, bool allowMaterialChange);
                /*0x1718cd0*/ void EvaluateChain(UnityEngine.UIElements.UIR.RenderChainCommand head, UnityEngine.Material initialMat, UnityEngine.Material defaultMat, UnityEngine.Texture gradientSettings, UnityEngine.Texture shaderInfo, float pixelsPerPoint, Unity.Collections.NativeSlice<UnityEngine.UIElements.UIR.Transform3x4> transforms, Unity.Collections.NativeSlice<UnityEngine.Vector4> clipRects, UnityEngine.MaterialPropertyBlock stateMatProps, bool allowMaterialChange, ref System.Exception immediateException);
                /*0x171bca0*/ void UpdateFenceValue();
                /*0x171a5c0*/ void KickRanges(UnityEngine.UIElements.UIR.DrawBufferRange* ranges, ref int rangesReady, ref int rangesStart, int rangesCount, UnityEngine.UIElements.UIR.Page curPage);
                /*0x2a5510*/ void DrawRanges<I, T>(UnityEngine.UIElements.UIR.Utility.GPUBuffer<I> ib, UnityEngine.UIElements.UIR.Utility.GPUBuffer<T> vb, Unity.Collections.NativeSlice<UnityEngine.UIElements.UIR.DrawBufferRange> ranges);
                /*0x171c2a0*/ void WaitOnCpuFence(uint fence);
                /*0x1717130*/ void AdvanceFrame();
                /*0x171b070*/ void PruneUnusedPages();
                /*0x171a280*/ UnityEngine.UIElements.UIR.UIRenderDevice.DrawStatistics GatherDrawStatistics();

                struct AllocToUpdate
                {
                    /*0x10*/ uint id;
                    /*0x14*/ uint allocTime;
                    /*0x18*/ UnityEngine.UIElements.UIR.MeshHandle meshHandle;
                    /*0x20*/ UnityEngine.UIElements.UIR.Alloc permAllocVerts;
                    /*0x38*/ UnityEngine.UIElements.UIR.Alloc permAllocIndices;
                    /*0x50*/ UnityEngine.UIElements.UIR.Page permPage;
                    /*0x58*/ bool copyBackIndices;
                }

                struct AllocToFree
                {
                    /*0x10*/ UnityEngine.UIElements.UIR.Alloc alloc;
                    /*0x28*/ UnityEngine.UIElements.UIR.Page page;
                    /*0x30*/ bool vertices;
                }

                struct DeviceToFree
                {
                    /*0x10*/ uint handle;
                    /*0x18*/ UnityEngine.UIElements.UIR.Page page;

                    /*0x170c620*/ void Dispose();
                }

                struct EvaluationState
                {
                    /*0x10*/ UnityEngine.MaterialPropertyBlock stateMatProps;
                    /*0x18*/ UnityEngine.Material defaultMat;
                    /*0x20*/ UnityEngine.UIElements.UIR.State curState;
                    /*0x38*/ UnityEngine.UIElements.UIR.Page curPage;
                    /*0x40*/ bool mustApplyMaterial;
                    /*0x41*/ bool mustApplyCommonBlock;
                    /*0x42*/ bool mustApplyStateBlock;
                    /*0x43*/ bool mustApplyStencil;
                }

                struct DrawStatistics
                {
                    /*0x10*/ int currentFrameIndex;
                    /*0x14*/ uint totalIndices;
                    /*0x18*/ uint commandCount;
                    /*0x1c*/ uint drawCommandCount;
                    /*0x20*/ uint materialSetCount;
                    /*0x24*/ uint drawRangeCount;
                    /*0x28*/ uint drawRangeCallCount;
                    /*0x2c*/ uint immediateDraws;
                    /*0x30*/ uint stencilRefChanges;
                }

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIR.UIRenderDevice.<> <>9;
                    static /*0x8*/ System.Func<UnityEngine.UIElements.UIR.MeshHandle> <>9__50_0;
                    static /*0x10*/ System.Action<UnityEngine.UIElements.UIR.MeshHandle> <>9__50_1;

                    static /*0x1717050*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1716f00*/ UnityEngine.UIElements.UIR.MeshHandle <.ctor>b__50_0();
                    /*0x32d010*/ void <.ctor>b__50_1(UnityEngine.UIElements.UIR.MeshHandle mh);
                }
            }

            struct Alloc
            {
                /*0x10*/ uint start;
                /*0x14*/ uint size;
                /*0x18*/ object handle;
                /*0x20*/ bool shortLived;
            }

            class BestFitAllocator
            {
                /*0x10*/ uint <totalSize>k__BackingField;
                /*0x18*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block m_FirstBlock;
                /*0x20*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block m_FirstAvailableBlock;
                /*0x28*/ UnityEngine.UIElements.UIR.BestFitAllocator.BlockPool m_BlockPool;
                /*0x30*/ uint m_HighWatermark;

                /*0x170c070*/ BestFitAllocator(uint size);
                /*0x417e30*/ uint get_totalSize();
                /*0x16062c0*/ uint get_highWatermark();
                /*0x170b7f0*/ UnityEngine.UIElements.UIR.Alloc Allocate(uint size);
                /*0x170bca0*/ void Free(UnityEngine.UIElements.UIR.Alloc alloc);
                /*0x170bb60*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block CoalesceBlockWithPrevious(UnityEngine.UIElements.UIR.BestFitAllocator.Block block);
                /*0x170bb20*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block BestFitFindAvailableBlock(uint size);
                /*0x170bf00*/ void SplitBlock(UnityEngine.UIElements.UIR.BestFitAllocator.Block block, uint size);

                class BlockPool : UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.UIR.BestFitAllocator.Block>
                {
                    static /*0x170c200*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block CreateBlock();
                    static /*0x32d010*/ void ResetBlock(UnityEngine.UIElements.UIR.BestFitAllocator.Block block);
                    /*0x170c270*/ BlockPool();
                }

                class Block : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.UIR.BestFitAllocator.Block>
                {
                    /*0x18*/ uint start;
                    /*0x1c*/ uint end;
                    /*0x20*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block prev;
                    /*0x28*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block next;
                    /*0x30*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block prevAvailable;
                    /*0x38*/ UnityEngine.UIElements.UIR.BestFitAllocator.Block nextAvailable;
                    /*0x40*/ bool allocated;

                    /*0x170c350*/ Block();
                    /*0x170c390*/ uint get_size();
                }
            }

            class GPUBufferAllocator
            {
                /*0x10*/ UnityEngine.UIElements.UIR.BestFitAllocator m_Low;
                /*0x18*/ UnityEngine.UIElements.UIR.BestFitAllocator m_High;

                /*0x170cd20*/ GPUBufferAllocator(uint maxSize);
                /*0x170ca60*/ UnityEngine.UIElements.UIR.Alloc Allocate(uint size, bool shortLived);
                /*0x170cc70*/ void Free(UnityEngine.UIElements.UIR.Alloc alloc);
                /*0x170cdd0*/ bool get_isEmpty();
                /*0x170ccf0*/ bool HighLowCollide();
            }

            class Page : System.IDisposable
            {
                /*0x10*/ bool <disposed>k__BackingField;
                /*0x18*/ UnityEngine.UIElements.UIR.Page.DataSet<UnityEngine.UIElements.Vertex> vertices;
                /*0x20*/ UnityEngine.UIElements.UIR.Page.DataSet<ushort> indices;
                /*0x28*/ UnityEngine.UIElements.UIR.Page next;
                /*0x30*/ int framesEmpty;

                /*0x170fe60*/ Page(uint vertexMaxCount, uint indexMaxCount, uint maxQueuedFrameCount, bool mockPage);
                /*0x793eb0*/ bool get_disposed();
                /*0x793ec0*/ void set_disposed(bool value);
                /*0x170fdf0*/ void Dispose();
                /*0x170fd60*/ void Dispose(bool disposing);
                /*0x170ffc0*/ bool get_isEmpty();

                class DataSet<T> : System.IDisposable
                {
                    /*0x0*/ bool <disposed>k__BackingField;
                    /*0x0*/ UnityEngine.UIElements.UIR.Utility.GPUBuffer<T> gpuData;
                    /*0x0*/ Unity.Collections.NativeArray<T> cpuData;
                    /*0x0*/ Unity.Collections.NativeArray<UnityEngine.UIElements.UIR.GfxUpdateBufferRange> updateRanges;
                    /*0x0*/ UnityEngine.UIElements.UIR.GPUBufferAllocator allocator;
                    /*0x0*/ uint m_UpdateRangePoolSize;
                    /*0x0*/ uint m_ElemStride;
                    /*0x0*/ uint m_UpdateRangeMin;
                    /*0x0*/ uint m_UpdateRangeMax;
                    /*0x0*/ uint m_UpdateRangesEnqueued;
                    /*0x0*/ uint m_UpdateRangesBatchStart;
                    /*0x0*/ bool m_UpdateRangesSaturated;

                    /*0x2a5510*/ DataSet(UnityEngine.UIElements.UIR.Utility.GPUBufferType bufferType, uint totalCount, uint maxQueuedFrameCount, uint updateRangePoolSize, bool mockBuffer);
                    /*0x17cb40*/ bool get_disposed();
                    /*0x181190*/ void set_disposed(bool value);
                    /*0x180fc0*/ void Dispose();
                    /*0x181190*/ void Dispose(bool disposing);
                    /*0x2a5510*/ void RegisterUpdate(uint start, uint size);
                    /*0x17cb40*/ bool HasMappedBufferRange();
                    /*0x180fc0*/ void SendUpdates();
                    /*0x180fc0*/ void SendFullRange();
                    /*0x180fc0*/ void SendPartialRanges();
                    /*0x180fc0*/ void ResetUpdateState();
                }
            }

            enum VertexFlags
            {
                IsSolid = 0,
                IsText = 1,
                IsTextured = 2,
                IsDynamic = 3,
                IsSvgGradients = 4,
                LastType = 10,
                IsGraphViewEdge = 10,
            }

            struct State
            {
                /*0x10*/ UnityEngine.Material material;
                /*0x18*/ UnityEngine.UIElements.TextureId texture;
                /*0x1c*/ int stencilRef;
                /*0x20*/ float sdfScale;
            }

            enum CommandType
            {
                Draw = 0,
                ImmediateCull = 1,
                Immediate = 2,
                PushView = 3,
                PopView = 4,
                PushScissor = 5,
                PopScissor = 6,
                PushRenderTexture = 7,
                PopRenderTexture = 8,
                BlitToPreviousRT = 9,
                PushDefaultMaterial = 10,
                PopDefaultMaterial = 11,
            }

            class DrawParams
            {
                static /*0x0*/ UnityEngine.Rect k_UnlimitedRect;
                static /*0x10*/ UnityEngine.Rect k_FullNormalizedRect;
                /*0x10*/ System.Collections.Generic.Stack<UnityEngine.Matrix4x4> view;
                /*0x18*/ System.Collections.Generic.Stack<UnityEngine.Rect> scissor;
                /*0x20*/ System.Collections.Generic.List<UnityEngine.RenderTexture> renderTexture;
                /*0x28*/ System.Collections.Generic.List<UnityEngine.Material> defaultMaterial;

                static /*0x170c8a0*/ DrawParams();
                /*0x170c900*/ DrawParams();
                /*0x170c6d0*/ void Reset();
            }

            class RenderChainCommand : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.UIR.RenderChainCommand>
            {
                static /*0x0*/ int k_ID_MainTex;
                static /*0x8*/ Unity.Profiling.ProfilerMarker s_ImmediateOverheadMarker;
                /*0x18*/ UnityEngine.UIElements.VisualElement owner;
                /*0x20*/ UnityEngine.UIElements.UIR.RenderChainCommand prev;
                /*0x28*/ UnityEngine.UIElements.UIR.RenderChainCommand next;
                /*0x30*/ bool closing;
                /*0x34*/ UnityEngine.UIElements.UIR.CommandType type;
                /*0x38*/ UnityEngine.UIElements.UIR.State state;
                /*0x50*/ UnityEngine.UIElements.UIR.MeshHandle mesh;
                /*0x58*/ int indexOffset;
                /*0x5c*/ int indexCount;
                /*0x60*/ System.Action callback;

                static /*0x17115d0*/ RenderChainCommand();
                static /*0x1710300*/ UnityEngine.Rect CombineScissorRects(UnityEngine.Rect r0, UnityEngine.Rect r1);
                static /*0x1711420*/ UnityEngine.RectInt RectPointsToPixelsAndFlipYAxis(UnityEngine.Rect rect, float pixelsPerPoint);
                /*0x1711660*/ RenderChainCommand();
                /*0x1711550*/ void Reset();
                /*0x1710440*/ void ExecuteNonDrawMesh(UnityEngine.UIElements.UIR.DrawParams drawParams, float pixelsPerPoint, ref System.Exception immediateException);
                /*0x1710190*/ void Blit(UnityEngine.Texture source, UnityEngine.RenderTexture destination, float depth);
            }

            class GradientSettingsAtlas : System.IDisposable
            {
                static /*0x0*/ Unity.Profiling.ProfilerMarker s_MarkerWrite;
                static /*0x8*/ Unity.Profiling.ProfilerMarker s_MarkerCommit;
                static /*0x10*/ int s_TextureCounter;
                /*0x10*/ int m_Length;
                /*0x14*/ int m_ElemWidth;
                /*0x18*/ UnityEngine.UIElements.UIR.BestFitAllocator m_Allocator;
                /*0x20*/ UnityEngine.Texture2D m_Atlas;
                /*0x28*/ UnityEngine.UIElements.UIR.GradientSettingsAtlas.RawTexture m_RawAtlas;
                /*0x38*/ bool <disposed>k__BackingField;
                /*0x39*/ bool <MustCommit>k__BackingField;

                static /*0x170d880*/ GradientSettingsAtlas();
                /*0x170d920*/ GradientSettingsAtlas(int length);
                /*0x15bceb0*/ int get_length();
                /*0xd180c0*/ bool get_disposed();
                /*0xd18610*/ void set_disposed(bool value);
                /*0x170d0b0*/ void Dispose();
                /*0x170d120*/ void Dispose(bool disposing);
                /*0x170d300*/ void Reset();
                /*0x15fe5a0*/ UnityEngine.Texture2D get_atlas();
                /*0x170ce10*/ UnityEngine.UIElements.UIR.Alloc Add(int count);
                /*0x170d3c0*/ void Write(UnityEngine.UIElements.UIR.Alloc alloc, UnityEngine.UIElements.GradientSettings[] settings, UnityEngine.UIElements.UIR.GradientRemap remap);
                /*0xd18470*/ bool get_MustCommit();
                /*0xd18af0*/ void set_MustCommit(bool value);
                /*0x170cef0*/ void Commit();
                /*0x170d190*/ void PrepareAtlas();

                struct RawTexture
                {
                    /*0x10*/ UnityEngine.Color32[] rgba;
                    /*0x18*/ int width;
                    /*0x1c*/ int height;

                    /*0x17100f0*/ void WriteRawInt2Packed(int v0, int v1, int destX, int destY);
                    /*0x1710040*/ void WriteRawFloat4Packed(float f0, float f1, float f2, float f3, int destX, int destY);
                }
            }

            class JobManager : System.IDisposable
            {
                /*0x10*/ UnityEngine.UIElements.UIR.NativePagedList<UnityEngine.UIElements.UIR.NudgeJobData> m_NudgeJobs;
                /*0x18*/ UnityEngine.UIElements.UIR.NativePagedList<UnityEngine.UIElements.UIR.ConvertMeshJobData> m_ConvertMeshJobs;
                /*0x20*/ UnityEngine.UIElements.UIR.NativePagedList<UnityEngine.UIElements.UIR.CopyClosingMeshJobData> m_CopyClosingMeshJobs;
                /*0x28*/ UnityEngine.UIElements.UIR.JobMerger m_JobMerger;
                /*0x30*/ bool <disposed>k__BackingField;

                /*0x170e790*/ JobManager();
                /*0x170dac0*/ void Add(ref UnityEngine.UIElements.UIR.NudgeJobData job);
                /*0x170da60*/ void Add(ref UnityEngine.UIElements.UIR.ConvertMeshJobData job);
                /*0x170da00*/ void Add(ref UnityEngine.UIElements.UIR.CopyClosingMeshJobData job);
                /*0x170e1a0*/ void CompleteNudgeJobs();
                /*0x170de60*/ void CompleteConvertMeshJobs();
                /*0x170db20*/ void CompleteClosingMeshJobs();
                /*0x995050*/ bool get_disposed();
                /*0x995180*/ void set_disposed(bool value);
                /*0x170e620*/ void Dispose();
                /*0x170e4e0*/ void Dispose(bool disposing);
            }

            struct NudgeJobData
            {
                /*0x10*/ nint src;
                /*0x18*/ nint dst;
                /*0x20*/ int count;
                /*0x28*/ nint closingSrc;
                /*0x30*/ nint closingDst;
                /*0x38*/ int closingCount;
                /*0x3c*/ UnityEngine.Matrix4x4 transform;
                /*0x7c*/ int vertsBeforeUVDisplacement;
                /*0x80*/ int vertsAfterUVDisplacement;
            }

            struct ConvertMeshJobData
            {
                /*0x10*/ nint vertSrc;
                /*0x18*/ nint vertDst;
                /*0x20*/ int vertCount;
                /*0x24*/ UnityEngine.Matrix4x4 transform;
                /*0x64*/ int transformUVs;
                /*0x68*/ UnityEngine.Color32 xformClipPages;
                /*0x6c*/ UnityEngine.Color32 ids;
                /*0x70*/ UnityEngine.Color32 addFlags;
                /*0x74*/ UnityEngine.Color32 opacityPage;
                /*0x78*/ UnityEngine.Color32 textCoreSettingsPage;
                /*0x7c*/ int isText;
                /*0x80*/ float textureId;
                /*0x88*/ nint indexSrc;
                /*0x90*/ nint indexDst;
                /*0x98*/ int indexCount;
                /*0x9c*/ int indexOffset;
                /*0xa0*/ int flipIndices;
            }

            struct CopyClosingMeshJobData
            {
                /*0x10*/ nint vertSrc;
                /*0x18*/ nint vertDst;
                /*0x20*/ int vertCount;
                /*0x28*/ nint indexSrc;
                /*0x30*/ nint indexDst;
                /*0x38*/ int indexCount;
                /*0x3c*/ int indexOffset;
            }

            class JobMerger : System.IDisposable
            {
                /*0x10*/ Unity.Collections.NativeArray<Unity.Jobs.JobHandle> m_Jobs;
                /*0x20*/ int m_JobCount;
                /*0x24*/ bool <disposed>k__BackingField;

                /*0x170eb70*/ JobMerger(int capacity);
                /*0x170e960*/ void Add(Unity.Jobs.JobHandle job);
                /*0x170eac0*/ Unity.Jobs.JobHandle MergeAndReset();
                /*0xed9100*/ bool get_disposed();
                /*0x117be00*/ void set_disposed(bool value);
                /*0x170ea40*/ void Dispose();
                /*0x170e9e0*/ void Dispose(bool disposing);
            }

            class LinkedPoolItem<T>
            {
                /*0x0*/ T poolNext;

                /*0x180fc0*/ LinkedPoolItem();
            }

            class LinkedPool<T>
            {
                /*0x0*/ System.Func<T> m_CreateFunc;
                /*0x0*/ System.Action<T> m_ResetAction;
                /*0x0*/ int m_Limit;
                /*0x0*/ T m_PoolFirst;
                /*0x0*/ int <Count>k__BackingField;

                LinkedPool(System.Func<T> createFunc, System.Action<T> resetAction, int limit);
                /*0x180980*/ int get_Count();
                /*0x17aa40*/ void set_Count(int value);
                /*0x180fc0*/ void Clear();
                /*0x2a5510*/ T Get();
                /*0x2a5510*/ void Return(T item);
            }

            class BasicNode<T> : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.UIR.BasicNode<T>>
            {
                /*0x0*/ UnityEngine.UIElements.UIR.BasicNode<T> next;
                /*0x0*/ T data;

                /*0x180fc0*/ BasicNode();
                /*0x17aec0*/ void InsertFirst(ref UnityEngine.UIElements.UIR.BasicNode<T> first);
            }

            class BasicNodePool<T> : UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.UIR.BasicNode<T>>
            {
                static /*0x177be0*/ void Reset(UnityEngine.UIElements.UIR.BasicNode<T> node);
                static /*0x180cf0*/ UnityEngine.UIElements.UIR.BasicNode<T> Create();
                /*0x180fc0*/ BasicNodePool();
            }

            class MeshBuilder
            {
                static /*0x0*/ Unity.Profiling.ProfilerMarker s_VectorGraphics9Slice;
                static /*0x8*/ Unity.Profiling.ProfilerMarker s_VectorGraphicsSplitTriangle;
                static /*0x10*/ Unity.Profiling.ProfilerMarker s_VectorGraphicsScaleTriangle;
                static /*0x18*/ Unity.Profiling.ProfilerMarker s_VectorGraphicsStretch;
                static /*0x20*/ int s_MaxTextMeshVertices;

                static /*0x170f7f0*/ MeshBuilder();
                static /*0x170ee20*/ UnityEngine.UIElements.Vertex ConvertTextVertexToUIRVertex(UnityEngine.TextCore.Text.MeshInfo info, int index, UnityEngine.Vector2 offset, UnityEngine.UIElements.UIR.VertexFlags flags, bool isDynamicColor);
                static /*0x170eff0*/ int LimitTextVertices(int vertexCount, bool logTruncation);
                static /*0x170f120*/ void MakeText(UnityEngine.TextCore.Text.MeshInfo meshInfo, UnityEngine.Vector2 offset, UnityEngine.UIElements.UIR.MeshBuilder.AllocMeshData meshAlloc, UnityEngine.UIElements.UIR.VertexFlags flags, bool isDynamicColor);

                struct AllocMeshData
                {
                    /*0x10*/ UnityEngine.UIElements.UIR.MeshBuilder.AllocMeshData.Allocator alloc;
                    /*0x18*/ UnityEngine.Texture texture;
                    /*0x20*/ UnityEngine.UIElements.TextureId svgTexture;
                    /*0x28*/ UnityEngine.Material material;
                    /*0x30*/ UnityEngine.UIElements.MeshGenerationContext.MeshFlags flags;
                    /*0x34*/ UnityEngine.UIElements.UIR.BMPAlloc colorAlloc;

                    /*0x170a120*/ UnityEngine.UIElements.MeshWriteData Allocate(uint vertexCount, uint indexCount);

                    class Allocator : System.MulticastDelegate
                    {
                        /*0x170afa0*/ Allocator(object object, nint method);
                        /*0x723400*/ UnityEngine.UIElements.MeshWriteData Invoke(uint vertexCount, uint indexCount, ref UnityEngine.UIElements.UIR.MeshBuilder.AllocMeshData allocatorData);
                    }
                }
            }

            class NativePagedList<T> : System.IDisposable
            {
                /*0x0*/ int k_PoolCapacity;
                /*0x0*/ System.Collections.Generic.List<Unity.Collections.NativeArray<T>> m_Pages;
                /*0x0*/ Unity.Collections.NativeArray<T> m_CurrentPage;
                /*0x0*/ int m_CurrentPageCount;
                /*0x0*/ System.Collections.Generic.List<Unity.Collections.NativeSlice<T>> m_Enumerator;
                /*0x0*/ bool <disposed>k__BackingField;

                /*0x17aa40*/ NativePagedList(int poolCapacity);
                /*0x17aec0*/ void Add(ref T data);
                /*0x1803b0*/ System.Collections.Generic.List<Unity.Collections.NativeSlice<T>> GetPages();
                /*0x180fc0*/ void Reset();
                /*0x17cb40*/ bool get_disposed();
                /*0x181190*/ void set_disposed(bool value);
                /*0x180fc0*/ void Dispose();
                /*0x181190*/ void Dispose(bool disposing);
            }

            class OpacityIdAccelerator : System.IDisposable
            {
                /*0x10*/ Unity.Collections.NativeArray<Unity.Jobs.JobHandle> m_Jobs;
                /*0x20*/ int m_NextJobIndex;
                /*0x24*/ bool <disposed>k__BackingField;

                /*0x170fc10*/ OpacityIdAccelerator();
                /*0x170fa10*/ void CreateJob(Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> oldVerts, Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> newVerts, UnityEngine.Color32 opacityData, int vertexCount);
                /*0x170f960*/ void CompleteJobs();
                /*0xed9100*/ bool get_disposed();
                /*0x117be00*/ void set_disposed(bool value);
                /*0x170fb40*/ void Dispose();
                /*0x170fbb0*/ void Dispose(bool disposing);

                struct OpacityIdUpdateJob : Unity.Jobs.IJobParallelFor
                {
                    /*0x10*/ Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> oldVerts;
                    /*0x20*/ Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> newVerts;
                    /*0x30*/ UnityEngine.Color32 opacityData;

                    /*0x170fc80*/ void Execute(int i);
                }
            }

            struct ChainBuilderStats
            {
                /*0x10*/ uint elementsAdded;
                /*0x14*/ uint elementsRemoved;
                /*0x18*/ uint recursiveClipUpdates;
                /*0x1c*/ uint recursiveClipUpdatesExpanded;
                /*0x20*/ uint nonRecursiveClipUpdates;
                /*0x24*/ uint recursiveTransformUpdates;
                /*0x28*/ uint recursiveTransformUpdatesExpanded;
                /*0x2c*/ uint recursiveOpacityUpdates;
                /*0x30*/ uint recursiveOpacityUpdatesExpanded;
                /*0x34*/ uint opacityIdUpdates;
                /*0x38*/ uint colorUpdates;
                /*0x3c*/ uint colorUpdatesExpanded;
                /*0x40*/ uint recursiveVisualUpdates;
                /*0x44*/ uint recursiveVisualUpdatesExpanded;
                /*0x48*/ uint nonRecursiveVisualUpdates;
                /*0x4c*/ uint dirtyProcessed;
                /*0x50*/ uint nudgeTransformed;
                /*0x54*/ uint boneTransformed;
                /*0x58*/ uint skipTransformed;
                /*0x5c*/ uint visualUpdateTransformed;
                /*0x60*/ uint updatedMeshAllocations;
                /*0x64*/ uint newMeshAllocations;
                /*0x68*/ uint groupTransformElementsChanged;
                /*0x6c*/ uint immedateRenderersActive;
            }

            class RenderChain : System.IDisposable
            {
                static /*0x0*/ Unity.Profiling.ProfilerMarker s_MarkerProcess;
                static /*0x8*/ Unity.Profiling.ProfilerMarker s_MarkerClipProcessing;
                static /*0x10*/ Unity.Profiling.ProfilerMarker s_MarkerOpacityProcessing;
                static /*0x18*/ Unity.Profiling.ProfilerMarker s_MarkerColorsProcessing;
                static /*0x20*/ Unity.Profiling.ProfilerMarker s_MarkerTransformProcessing;
                static /*0x28*/ Unity.Profiling.ProfilerMarker s_MarkerVisualsProcessing;
                static /*0x30*/ Unity.Profiling.ProfilerMarker s_MarkerTextRegen;
                static /*0x38*/ System.Action OnPreRender;
                /*0x10*/ UnityEngine.UIElements.UIR.RenderChainCommand m_FirstCommand;
                /*0x18*/ UnityEngine.UIElements.UIR.RenderChain.DepthOrderedDirtyTracking m_DirtyTracker;
                /*0x40*/ UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.UIR.RenderChainCommand> m_CommandPool;
                /*0x48*/ UnityEngine.UIElements.UIR.BasicNodePool<UnityEngine.UIElements.UIR.TextureEntry> m_TexturePool;
                /*0x50*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.RenderChain.RenderNodeData> m_RenderNodesData;
                /*0x58*/ UnityEngine.Shader m_DefaultShader;
                /*0x60*/ UnityEngine.Shader m_DefaultWorldSpaceShader;
                /*0x68*/ UnityEngine.Material m_DefaultMat;
                /*0x70*/ UnityEngine.Material m_DefaultWorldSpaceMat;
                /*0x78*/ bool m_BlockDirtyRegistration;
                /*0x7c*/ int m_StaticIndex;
                /*0x80*/ int m_ActiveRenderNodes;
                /*0x84*/ int m_CustomMaterialCommands;
                /*0x88*/ UnityEngine.UIElements.UIR.ChainBuilderStats m_Stats;
                /*0xe8*/ uint m_StatsElementsAdded;
                /*0xec*/ uint m_StatsElementsRemoved;
                /*0xf0*/ UnityEngine.UIElements.TextureRegistry m_TextureRegistry;
                /*0xf8*/ UnityEngine.UIElements.UIR.OpacityIdAccelerator <opacityIdAccelerator>k__BackingField;
                /*0x100*/ bool <disposed>k__BackingField;
                /*0x108*/ UnityEngine.UIElements.BaseVisualElementPanel <panel>k__BackingField;
                /*0x110*/ UnityEngine.UIElements.UIR.UIRenderDevice <device>k__BackingField;
                /*0x118*/ UnityEngine.UIElements.AtlasBase <atlas>k__BackingField;
                /*0x120*/ UnityEngine.UIElements.UIR.VectorImageManager <vectorImageManager>k__BackingField;
                /*0x128*/ UnityEngine.UIElements.UIR.TempAllocator<UnityEngine.UIElements.Vertex> <vertsPool>k__BackingField;
                /*0x130*/ UnityEngine.UIElements.UIR.TempAllocator<ushort> <indicesPool>k__BackingField;
                /*0x138*/ UnityEngine.UIElements.UIR.JobManager <jobManager>k__BackingField;
                /*0x140*/ UnityEngine.UIElements.UIR.UIRVEShaderInfoAllocator shaderInfoAllocator;
                /*0x210*/ UnityEngine.UIElements.UIR.Implementation.UIRStylePainter <painter>k__BackingField;
                /*0x218*/ bool <drawStats>k__BackingField;
                /*0x219*/ bool <drawInCameras>k__BackingField;

                static /*0x17159e0*/ RenderChain();
                static /*0x17116a0*/ UnityEngine.UIElements.UIR.RenderChain.RenderNodeData AccessRenderNodeData(nint obj);
                static /*0x1713c60*/ void OnRenderNodeExecute(nint obj);
                static /*0x1713650*/ void OnRegisterIntermediateRenderers(UnityEngine.Camera camera);
                static /*0x1713290*/ void OnRegisterIntermediateRendererMat(UnityEngine.UIElements.BaseRuntimePanel rtp, UnityEngine.UIElements.UIR.RenderChain renderChain, ref UnityEngine.UIElements.UIR.RenderChain.RenderNodeData rnd, UnityEngine.Camera camera, int sameDistanceSortPriority);
                static /*0x1712fa0*/ UnityEngine.UIElements.VisualElement GetFirstElementInPanel(UnityEngine.UIElements.VisualElement ve);
                /*0x1715e40*/ RenderChain(UnityEngine.UIElements.BaseVisualElementPanel panel);
                /*0x136fc50*/ UnityEngine.UIElements.UIR.OpacityIdAccelerator get_opacityIdAccelerator();
                /*0x1414190*/ void set_opacityIdAccelerator(UnityEngine.UIElements.UIR.OpacityIdAccelerator value);
                /*0x17118a0*/ void Constructor(UnityEngine.UIElements.BaseVisualElementPanel panelObj, UnityEngine.UIElements.UIR.UIRenderDevice deviceObj, UnityEngine.UIElements.AtlasBase atlas, UnityEngine.UIElements.UIR.VectorImageManager vectorImageMan);
                /*0x1711f40*/ void Destructor();
                /*0x1414170*/ bool get_disposed();
                /*0x1414180*/ void set_disposed(bool value);
                /*0x1712550*/ void Dispose();
                /*0x1712520*/ void Dispose(bool disposing);
                /*0x1713df0*/ void ProcessChanges();
                /*0x1714610*/ void Render();
                /*0x1714d70*/ void UIEOnChildAdded(UnityEngine.UIElements.VisualElement ve);
                /*0x1715170*/ void UIEOnChildrenReordered(UnityEngine.UIElements.VisualElement ve);
                /*0x1715070*/ void UIEOnChildRemoving(UnityEngine.UIElements.VisualElement ve);
                /*0x17156f0*/ void UIEOnRenderHintsChanged(UnityEngine.UIElements.VisualElement ve);
                /*0x1715470*/ void UIEOnClippingChanged(UnityEngine.UIElements.VisualElement ve, bool hierarchical);
                /*0x17155b0*/ void UIEOnOpacityChanged(UnityEngine.UIElements.VisualElement ve, bool hierarchical);
                /*0x1715510*/ void UIEOnColorChanged(UnityEngine.UIElements.VisualElement ve);
                /*0x17158a0*/ void UIEOnTransformOrSizeChanged(UnityEngine.UIElements.VisualElement ve, bool transformChanged, bool clipRectSizeChanged);
                /*0x1715940*/ void UIEOnVisualsChanged(UnityEngine.UIElements.VisualElement ve, bool hierarchical);
                /*0x1715650*/ void UIEOnOpacityIdChanged(UnityEngine.UIElements.VisualElement ve);
                /*0x136fcb0*/ UnityEngine.UIElements.BaseVisualElementPanel get_panel();
                /*0x136fd70*/ void set_panel(UnityEngine.UIElements.BaseVisualElementPanel value);
                /*0x1355380*/ UnityEngine.UIElements.UIR.UIRenderDevice get_device();
                /*0x1354790*/ void set_device(UnityEngine.UIElements.UIR.UIRenderDevice value);
                /*0x134cc10*/ UnityEngine.UIElements.AtlasBase get_atlas();
                /*0x134cc40*/ void set_atlas(UnityEngine.UIElements.AtlasBase value);
                /*0x10f4ac0*/ UnityEngine.UIElements.UIR.VectorImageManager get_vectorImageManager();
                /*0x136fd90*/ void set_vectorImageManager(UnityEngine.UIElements.UIR.VectorImageManager value);
                /*0x10d2010*/ UnityEngine.UIElements.UIR.TempAllocator<UnityEngine.UIElements.Vertex> get_vertsPool();
                /*0x10f5010*/ void set_vertsPool(UnityEngine.UIElements.UIR.TempAllocator<UnityEngine.UIElements.Vertex> value);
                /*0x1369460*/ UnityEngine.UIElements.UIR.TempAllocator<ushort> get_indicesPool();
                /*0x1716410*/ void set_indicesPool(UnityEngine.UIElements.UIR.TempAllocator<ushort> value);
                /*0x1369450*/ UnityEngine.UIElements.UIR.JobManager get_jobManager();
                /*0x1369480*/ void set_jobManager(UnityEngine.UIElements.UIR.JobManager value);
                /*0x1716260*/ UnityEngine.UIElements.UIR.Implementation.UIRStylePainter get_painter();
                /*0x1716430*/ void set_painter(UnityEngine.UIElements.UIR.Implementation.UIRStylePainter value);
                /*0x1716250*/ bool get_drawStats();
                /*0x1716400*/ void set_drawStats(bool value);
                /*0x1716240*/ bool get_drawInCameras();
                /*0x17163f0*/ void set_drawInCameras(bool value);
                /*0x1716270*/ void set_defaultShader(UnityEngine.Shader value);
                /*0x1716330*/ void set_defaultWorldSpaceShader(UnityEngine.Shader value);
                /*0x1712fd0*/ UnityEngine.Material GetStandardMaterial();
                /*0x17130d0*/ UnityEngine.Material GetStandardWorldSpaceMaterial();
                /*0x1712ee0*/ void EnsureFitsDepth(int depth);
                /*0x17117f0*/ void ChildWillBeRemoved(UnityEngine.UIElements.VisualElement ve);
                /*0x1711790*/ UnityEngine.UIElements.UIR.RenderChainCommand AllocCommand();
                /*0x1712ef0*/ void FreeCommand(UnityEngine.UIElements.UIR.RenderChainCommand cmd);
                /*0x1713b90*/ void OnRenderCommandAdded(UnityEngine.UIElements.UIR.RenderChainCommand command);
                /*0x1713c20*/ void OnRenderCommandsRemoved(UnityEngine.UIElements.UIR.RenderChainCommand firstCommand, UnityEngine.UIElements.UIR.RenderChainCommand lastCommand);
                /*0x1714af0*/ void RepaintTexturedElements();
                /*0x17131d0*/ void InsertTexture(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture src, UnityEngine.UIElements.TextureId id, bool isAtlas);
                /*0x1714c40*/ void ResetTextures(UnityEngine.UIElements.VisualElement ve);
                /*0x17125c0*/ void DrawStats();

                struct DepthOrderedDirtyTracking
                {
                    /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> heads;
                    /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.VisualElement> tails;
                    /*0x20*/ int[] minDepths;
                    /*0x28*/ int[] maxDepths;
                    /*0x30*/ uint dirtyID;

                    /*0x1729840*/ void EnsureFits(int maxDepth);
                    /*0x1729990*/ void RegisterDirty(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderDataDirtyTypes dirtyTypes, UnityEngine.UIElements.UIR.RenderDataDirtyTypeClasses dirtyTypeClass);
                    /*0x1729620*/ void ClearDirty(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderDataDirtyTypes dirtyTypesInverse);
                    /*0x1729b90*/ void Reset();
                }

                struct RenderChainStaticIndexAllocator
                {
                    static /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.RenderChain> renderChains;

                    static /*0x172a140*/ RenderChainStaticIndexAllocator();
                    static /*0x1729f20*/ int AllocateIndex(UnityEngine.UIElements.UIR.RenderChain renderChain);
                    static /*0x172a0c0*/ void FreeIndex(int index);
                    static /*0x1729ea0*/ UnityEngine.UIElements.UIR.RenderChain AccessIndex(int index);
                }

                struct RenderNodeData
                {
                    /*0x10*/ UnityEngine.Material standardMaterial;
                    /*0x18*/ UnityEngine.Material initialMaterial;
                    /*0x20*/ UnityEngine.MaterialPropertyBlock matPropBlock;
                    /*0x28*/ UnityEngine.UIElements.UIR.RenderChainCommand firstCommand;
                    /*0x30*/ UnityEngine.UIElements.UIR.UIRenderDevice device;
                    /*0x38*/ UnityEngine.Texture vectorAtlas;
                    /*0x40*/ UnityEngine.Texture shaderInfoAtlas;
                    /*0x48*/ float dpiScale;
                    /*0x50*/ Unity.Collections.NativeSlice<UnityEngine.UIElements.UIR.Transform3x4> transformConstants;
                    /*0x60*/ Unity.Collections.NativeSlice<UnityEngine.Vector4> clipRectConstants;
                }

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIR.RenderChain.<> <>9;
                    static /*0x8*/ System.Func<UnityEngine.UIElements.UIR.RenderChainCommand> <>9__34_0;
                    static /*0x10*/ System.Action<UnityEngine.UIElements.UIR.RenderChainCommand> <>9__34_1;

                    static /*0x1731fe0*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1731f90*/ UnityEngine.UIElements.UIR.RenderChainCommand <.ctor>b__34_0();
                    /*0x32d010*/ void <.ctor>b__34_1(UnityEngine.UIElements.UIR.RenderChainCommand cmd);
                }
            }

            enum RenderDataDirtyTypes
            {
                None = 0,
                Transform = 1,
                ClipRectSize = 2,
                Clipping = 4,
                ClippingHierarchy = 8,
                Visuals = 16,
                VisualsHierarchy = 32,
                VisualsOpacityId = 64,
                Opacity = 128,
                OpacityHierarchy = 256,
                Color = 512,
                AllVisuals = 112,
            }

            enum RenderDataDirtyTypeClasses
            {
                Clipping = 0,
                Opacity = 1,
                Color = 2,
                TransformSize = 3,
                Visuals = 4,
                Count = 5,
            }

            enum RenderDataFlags
            {
                IsIgnoringDynamicColorHint = 1,
            }

            struct RenderChainVEData
            {
                /*0x10*/ UnityEngine.UIElements.VisualElement prev;
                /*0x18*/ UnityEngine.UIElements.VisualElement next;
                /*0x20*/ UnityEngine.UIElements.VisualElement groupTransformAncestor;
                /*0x28*/ UnityEngine.UIElements.VisualElement boneTransformAncestor;
                /*0x30*/ UnityEngine.UIElements.VisualElement prevDirty;
                /*0x38*/ UnityEngine.UIElements.VisualElement nextDirty;
                /*0x40*/ UnityEngine.UIElements.UIR.RenderDataFlags flags;
                /*0x44*/ int hierarchyDepth;
                /*0x48*/ UnityEngine.UIElements.UIR.RenderDataDirtyTypes dirtiedValues;
                /*0x4c*/ uint dirtyID;
                /*0x50*/ UnityEngine.UIElements.UIR.RenderChainCommand firstCommand;
                /*0x58*/ UnityEngine.UIElements.UIR.RenderChainCommand lastCommand;
                /*0x60*/ UnityEngine.UIElements.UIR.RenderChainCommand firstClosingCommand;
                /*0x68*/ UnityEngine.UIElements.UIR.RenderChainCommand lastClosingCommand;
                /*0x70*/ bool isInChain;
                /*0x71*/ bool isHierarchyHidden;
                /*0x72*/ bool localFlipsWinding;
                /*0x73*/ bool localTransformScaleZero;
                /*0x74*/ bool worldFlipsWinding;
                /*0x75*/ bool worldTransformScaleZero;
                /*0x78*/ UnityEngine.UIElements.UIR.Implementation.ClipMethod clipMethod;
                /*0x7c*/ int childrenStencilRef;
                /*0x80*/ int childrenMaskDepth;
                /*0x84*/ bool disableNudging;
                /*0x88*/ UnityEngine.UIElements.UIR.MeshHandle data;
                /*0x90*/ UnityEngine.UIElements.UIR.MeshHandle closingData;
                /*0x98*/ UnityEngine.Matrix4x4 verticesSpace;
                /*0xd8*/ int displacementUVStart;
                /*0xdc*/ int displacementUVEnd;
                /*0xe0*/ UnityEngine.UIElements.UIR.BMPAlloc transformID;
                /*0xe8*/ UnityEngine.UIElements.UIR.BMPAlloc clipRectID;
                /*0xf0*/ UnityEngine.UIElements.UIR.BMPAlloc opacityID;
                /*0xf8*/ UnityEngine.UIElements.UIR.BMPAlloc textCoreSettingsID;
                /*0x100*/ UnityEngine.UIElements.UIR.BMPAlloc colorID;
                /*0x108*/ UnityEngine.UIElements.UIR.BMPAlloc backgroundColorID;
                /*0x110*/ UnityEngine.UIElements.UIR.BMPAlloc borderLeftColorID;
                /*0x118*/ UnityEngine.UIElements.UIR.BMPAlloc borderTopColorID;
                /*0x120*/ UnityEngine.UIElements.UIR.BMPAlloc borderRightColorID;
                /*0x128*/ UnityEngine.UIElements.UIR.BMPAlloc borderBottomColorID;
                /*0x130*/ UnityEngine.UIElements.UIR.BMPAlloc tintColorID;
                /*0x138*/ float compositeOpacity;
                /*0x13c*/ UnityEngine.Color backgroundColor;
                /*0x150*/ UnityEngine.UIElements.UIR.BasicNode<UnityEngine.UIElements.UIR.TextureEntry> textures;

                static /*0x172a1d0*/ bool AllocatesID(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                static /*0x172a230*/ bool InheritsID(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x172a2a0*/ UnityEngine.UIElements.UIR.RenderChainCommand get_lastClosingOrLastCommand();
                /*0x172a290*/ bool get_isIgnoringDynamicColorHint();
            }

            struct TextureEntry
            {
                /*0x10*/ UnityEngine.Texture source;
                /*0x18*/ UnityEngine.UIElements.TextureId actual;
                /*0x1c*/ bool replaced;
            }

            class BaseShaderInfoStorage : System.IDisposable
            {
                static /*0x0*/ int s_TextureCounter;
                static /*0x8*/ Unity.Profiling.ProfilerMarker s_MarkerCopyTexture;
                static /*0x10*/ Unity.Profiling.ProfilerMarker s_MarkerGetTextureData;
                static /*0x18*/ Unity.Profiling.ProfilerMarker s_MarkerUpdateTexture;
                /*0x10*/ bool <disposed>k__BackingField;

                static /*0x1724850*/ BaseShaderInfoStorage();
                /*0x32f970*/ BaseShaderInfoStorage();
                /*0x1803b0*/ UnityEngine.Texture2D get_texture();
                bool AllocateRect(int width, int height, ref UnityEngine.RectInt uvs);
                void SetTexel(int x, int y, UnityEngine.Color color);
                /*0x180fc0*/ void UpdateTexture();
                /*0x793eb0*/ bool get_disposed();
                /*0x793ec0*/ void set_disposed(bool value);
                /*0x17247e0*/ void Dispose();
                /*0x17247d0*/ void Dispose(bool disposing);
            }

            class ShaderInfoStorage<T> : UnityEngine.UIElements.UIR.BaseShaderInfoStorage
            {
                /*0x0*/ int m_InitialSize;
                /*0x0*/ int m_MaxSize;
                /*0x0*/ UnityEngine.TextureFormat m_Format;
                /*0x0*/ System.Func<UnityEngine.Color, T> m_Convert;
                /*0x0*/ UnityEngine.UIElements.UIRAtlasAllocator m_Allocator;
                /*0x0*/ UnityEngine.Texture2D m_Texture;
                /*0x0*/ Unity.Collections.NativeArray<T> m_Texels;

                static /*0x2a5510*/ void CpuBlit(Unity.Collections.NativeArray<T> src, int srcWidth, int srcHeight, Unity.Collections.NativeArray<T> dst, int dstWidth, int dstHeight);
                /*0x2a5510*/ ShaderInfoStorage(UnityEngine.TextureFormat format, System.Func<UnityEngine.Color, T> convert, int initialSize, int maxSize);
                /*0x181190*/ void Dispose(bool disposing);
                /*0x1803b0*/ UnityEngine.Texture2D get_texture();
                bool AllocateRect(int width, int height, ref UnityEngine.RectInt uvs);
                void SetTexel(int x, int y, UnityEngine.Color color);
                /*0x180fc0*/ void UpdateTexture();
                /*0x180fc0*/ void CreateOrExpandTexture();
            }

            class ShaderInfoStorageRGBA32 : UnityEngine.UIElements.UIR.ShaderInfoStorage<UnityEngine.Color32>
            {
                static /*0x0*/ System.Func<UnityEngine.Color, UnityEngine.Color32> s_Convert;

                static /*0x172f860*/ ShaderInfoStorageRGBA32();
                /*0x172f930*/ ShaderInfoStorageRGBA32(int initialSize, int maxSize);

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIR.ShaderInfoStorageRGBA32.<> <>9;

                    static /*0x1732130*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1731de0*/ UnityEngine.Color32 <.cctor>b__2_0(UnityEngine.Color c);
                }
            }

            class ShaderInfoStorageRGBAFloat : UnityEngine.UIElements.UIR.ShaderInfoStorage<UnityEngine.Color>
            {
                static /*0x0*/ System.Func<UnityEngine.Color, UnityEngine.Color> s_Convert;

                static /*0x172f9d0*/ ShaderInfoStorageRGBAFloat();
                /*0x172faa0*/ ShaderInfoStorageRGBAFloat(int initialSize, int maxSize);

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIR.ShaderInfoStorageRGBAFloat.<> <>9;

                    static /*0x1732050*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x798750*/ UnityEngine.Color <.cctor>b__2_0(UnityEngine.Color c);
                }
            }

            class Shaders
            {
                static /*0x0*/ string k_AtlasBlit;
                static /*0x8*/ string k_Editor;
                static /*0x10*/ string k_Runtime;
                static /*0x18*/ string k_RuntimeWorld;
                static /*0x20*/ string k_GraphView;
                static /*0x28*/ string k_ColorConversionBlit;

                static /*0x172fb40*/ Shaders();
            }

            class TempAllocator<T> : System.IDisposable
            {
                /*0x0*/ int m_ExcessMinCapacity;
                /*0x0*/ int m_ExcessMaxCapacity;
                /*0x0*/ UnityEngine.UIElements.UIR.TempAllocator.Page<T> m_Pool;
                /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.TempAllocator.Page<T>> m_Excess;
                /*0x0*/ int m_NextExcessSize;
                /*0x0*/ bool <disposed>k__BackingField;

                TempAllocator(int poolCapacity, int excessMinCapacity, int excessMaxCapacity);
                /*0x17cb40*/ bool get_disposed();
                /*0x181190*/ void set_disposed(bool value);
                /*0x180fc0*/ void Dispose();
                /*0x181190*/ void Dispose(bool disposing);
                /*0x2a5510*/ Unity.Collections.NativeSlice<T> Alloc(int count);
                /*0x180fc0*/ void Reset();
                /*0x180fc0*/ void ReleaseExcess();

                struct Page<T>
                {
                    /*0x0*/ Unity.Collections.NativeArray<T> array;
                    /*0x0*/ int used;
                }
            }

            struct TextCoreSettings : System.IEquatable<UnityEngine.UIElements.UIR.TextCoreSettings>
            {
                /*0x10*/ UnityEngine.Color faceColor;
                /*0x20*/ UnityEngine.Color outlineColor;
                /*0x30*/ float outlineWidth;
                /*0x34*/ UnityEngine.Color underlayColor;
                /*0x44*/ UnityEngine.Vector2 underlayOffset;
                /*0x4c*/ float underlaySoftness;

                /*0x172fed0*/ bool Equals(object obj);
                /*0x172ff80*/ bool Equals(UnityEngine.UIElements.UIR.TextCoreSettings other);
                /*0x1730120*/ int GetHashCode();
            }

            class TextureBlitter : System.IDisposable
            {
                static /*0x0*/ int[] k_TextureIds;
                static /*0x8*/ Unity.Profiling.ProfilerMarker s_CommitSampler;
                /*0x10*/ UnityEngine.UIElements.UIR.TextureBlitter.BlitInfo[] m_SingleBlit;
                /*0x18*/ UnityEngine.Material m_BlitMaterial;
                /*0x20*/ UnityEngine.MaterialPropertyBlock m_Properties;
                /*0x28*/ UnityEngine.RectInt m_Viewport;
                /*0x38*/ UnityEngine.RenderTexture m_PrevRT;
                /*0x40*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.TextureBlitter.BlitInfo> m_PendingBlits;
                /*0x48*/ bool <disposed>k__BackingField;

                static /*0x1731020*/ TextureBlitter();
                /*0x1731150*/ TextureBlitter(int capacity);
                /*0xe85db0*/ bool get_disposed();
                /*0x10d9810*/ void set_disposed(bool value);
                /*0x1730650*/ void Dispose();
                /*0x17306c0*/ void Dispose(bool disposing);
                /*0x1730e90*/ void QueueBlit(UnityEngine.Texture src, UnityEngine.RectInt srcRect, UnityEngine.Vector2Int dstPos, bool addBorder, UnityEngine.Color tint);
                /*0x1730410*/ void BlitOneNow(UnityEngine.RenderTexture dst, UnityEngine.Texture src, UnityEngine.RectInt srcRect, UnityEngine.Vector2Int dstPos, bool addBorder, UnityEngine.Color tint);
                /*0x1730550*/ void Commit(UnityEngine.RenderTexture dst);
                /*0x17301d0*/ void BeginBlit(UnityEngine.RenderTexture dst);
                /*0x1730740*/ void DoBlit(System.Collections.Generic.IList<UnityEngine.UIElements.UIR.TextureBlitter.BlitInfo> blitInfos, int startIndex);
                /*0x1730df0*/ void EndBlit();

                struct BlitInfo
                {
                    /*0x10*/ UnityEngine.Texture src;
                    /*0x18*/ UnityEngine.RectInt srcRect;
                    /*0x28*/ UnityEngine.Vector2Int dstPos;
                    /*0x30*/ int border;
                    /*0x34*/ UnityEngine.Color tint;
                }
            }

            class TextureSlotManager
            {
                static /*0x0*/ int k_SlotCount;
                static /*0x4*/ int k_SlotSize;
                static /*0x8*/ int[] slotIds;
                static /*0x10*/ int textureTableId;
                /*0x10*/ UnityEngine.UIElements.TextureId[] m_Textures;
                /*0x18*/ int[] m_Tickets;
                /*0x20*/ int m_CurrentTicket;
                /*0x24*/ int m_FirstUsedTicket;
                /*0x28*/ UnityEngine.Vector4[] m_GpuTextures;
                /*0x30*/ int <FreeSlots>k__BackingField;
                /*0x38*/ UnityEngine.UIElements.TextureRegistry textureRegistry;

                static /*0x1731970*/ TextureSlotManager();
                /*0x1731b20*/ TextureSlotManager();
                /*0x1731620*/ void Reset();
                /*0x1731900*/ void StartNewBatch();
                /*0x17314e0*/ int IndexOf(UnityEngine.UIElements.TextureId id);
                /*0x17315c0*/ void MarkUsed(int slotIndex);
                /*0xa79cc0*/ int get_FreeSlots();
                /*0xa79cd0*/ void set_FreeSlots(int value);
                /*0x1731410*/ int FindOldestSlot();
                /*0x1731210*/ void Bind(UnityEngine.UIElements.TextureId id, float sdfScale, int slot, UnityEngine.MaterialPropertyBlock mat);
                /*0x1731770*/ void SetGpuData(int slotIndex, UnityEngine.UIElements.TextureId id, int textureWidth, int textureHeight, float sdfScale);
            }

            class VectorImageRenderInfoPool : UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.UIR.VectorImageRenderInfo>
            {
                /*0x1740380*/ VectorImageRenderInfoPool();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIR.VectorImageRenderInfoPool.<> <>9;
                    static /*0x8*/ System.Func<UnityEngine.UIElements.UIR.VectorImageRenderInfo> <>9__0_0;
                    static /*0x10*/ System.Action<UnityEngine.UIElements.UIR.VectorImageRenderInfo> <>9__0_1;

                    static /*0x17320c0*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1731e70*/ UnityEngine.UIElements.UIR.VectorImageRenderInfo <.ctor>b__0_0();
                    /*0x1731ee0*/ void <.ctor>b__0_1(UnityEngine.UIElements.UIR.VectorImageRenderInfo vectorImageInfo);
                }
            }

            class VectorImageRenderInfo : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.UIR.VectorImageRenderInfo>
            {
                /*0x18*/ int useCount;
                /*0x20*/ UnityEngine.UIElements.UIR.GradientRemap firstGradientRemap;
                /*0x28*/ UnityEngine.UIElements.UIR.Alloc gradientSettingsAlloc;

                /*0x1740590*/ VectorImageRenderInfo();
                /*0x1740560*/ void Reset();
            }

            class GradientRemapPool : UnityEngine.UIElements.UIR.LinkedPool<UnityEngine.UIElements.UIR.GradientRemap>
            {
                /*0x1729c10*/ GradientRemapPool();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.UIR.GradientRemapPool.<> <>9;
                    static /*0x8*/ System.Func<UnityEngine.UIElements.UIR.GradientRemap> <>9__0_0;
                    static /*0x10*/ System.Action<UnityEngine.UIElements.UIR.GradientRemap> <>9__0_1;

                    static /*0x17321a0*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1731e00*/ UnityEngine.UIElements.UIR.GradientRemap <.ctor>b__0_0();
                    /*0x1731f20*/ void <.ctor>b__0_1(UnityEngine.UIElements.UIR.GradientRemap gradientRemap);
                }
            }

            class GradientRemap : UnityEngine.UIElements.UIR.LinkedPoolItem<UnityEngine.UIElements.UIR.GradientRemap>
            {
                /*0x18*/ int origIndex;
                /*0x1c*/ int destIndex;
                /*0x20*/ UnityEngine.RectInt location;
                /*0x30*/ UnityEngine.UIElements.UIR.GradientRemap next;
                /*0x38*/ UnityEngine.UIElements.TextureId atlas;

                /*0x1729e60*/ GradientRemap();
                /*0x1729df0*/ void Reset();
            }

            class VectorImageManager : System.IDisposable
            {
                static /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.VectorImageManager> instances;
                static /*0x8*/ Unity.Profiling.ProfilerMarker s_MarkerRegister;
                static /*0x10*/ Unity.Profiling.ProfilerMarker s_MarkerUnregister;
                /*0x10*/ UnityEngine.UIElements.AtlasBase m_Atlas;
                /*0x18*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.VectorImage, UnityEngine.UIElements.UIR.VectorImageRenderInfo> m_Registered;
                /*0x20*/ UnityEngine.UIElements.UIR.VectorImageRenderInfoPool m_RenderInfoPool;
                /*0x28*/ UnityEngine.UIElements.UIR.GradientRemapPool m_GradientRemapPool;
                /*0x30*/ UnityEngine.UIElements.UIR.GradientSettingsAtlas m_GradientSettingsAtlas;
                /*0x38*/ bool m_LoggedExhaustedSettingsAtlas;
                /*0x39*/ bool <disposed>k__BackingField;

                static /*0x173fd10*/ VectorImageManager();
                /*0x173fe10*/ VectorImageManager(UnityEngine.UIElements.AtlasBase atlas);
                /*0x1740360*/ UnityEngine.Texture2D get_atlas();
                /*0xd18470*/ bool get_disposed();
                /*0xd18af0*/ void set_disposed(bool value);
                /*0x173f820*/ void Dispose();
                /*0x173f700*/ void Dispose(bool disposing);
                /*0x173f6d0*/ void Commit();
                /*0x173f5d0*/ UnityEngine.UIElements.UIR.GradientRemap AddUser(UnityEngine.UIElements.VectorImage vi, UnityEngine.UIElements.VisualElement context);
                /*0x173f890*/ UnityEngine.UIElements.UIR.VectorImageRenderInfo Register(UnityEngine.UIElements.VectorImage vi, UnityEngine.UIElements.VisualElement context);
            }

            enum OwnedState
            {
                Inherited = 0,
                Owned = 1,
            }

            struct BMPAlloc
            {
                static /*0x0*/ UnityEngine.UIElements.UIR.BMPAlloc Invalid;
                /*0x10*/ int page;
                /*0x14*/ ushort pageLine;
                /*0x16*/ byte bitIndex;
                /*0x17*/ UnityEngine.UIElements.UIR.OwnedState ownedState;

                static /*0x1724780*/ BMPAlloc();
                /*0x1724680*/ bool Equals(UnityEngine.UIElements.UIR.BMPAlloc other);
                /*0x17246a0*/ bool IsValid();
                /*0x17246b0*/ string ToString();
            }

            struct BitmapAllocator32
            {
                /*0x10*/ int m_PageHeight;
                /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.BitmapAllocator32.Page> m_Pages;
                /*0x20*/ System.Collections.Generic.List<uint> m_AllocMap;
                /*0x28*/ int m_EntryWidth;
                /*0x2c*/ int m_EntryHeight;

                static /*0x1724ef0*/ byte CountTrailingZeroes(uint val);
                /*0x1724dd0*/ void Construct(int pageHeight, int entryWidth, int entryHeight);
                /*0x1724f70*/ void ForceFirstAlloc(ushort firstPageX, ushort firstPageY);
                /*0x1724930*/ UnityEngine.UIElements.UIR.BMPAlloc Allocate(UnityEngine.UIElements.UIR.BaseShaderInfoStorage storage);
                /*0x1725120*/ void Free(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0xbe6cb0*/ int get_entryWidth();
                /*0x9e3120*/ int get_entryHeight();
                /*0x1725260*/ void GetAllocPageAtlasLocation(int page, ref ushort x, ref ushort y);

                struct Page
                {
                    /*0x10*/ ushort x;
                    /*0x12*/ ushort y;
                    /*0x14*/ int freeSlots;
                }
            }

            struct UIRVEShaderInfoAllocator
            {
                static /*0x0*/ UnityEngine.Vector2Int identityTransformTexel;
                static /*0x8*/ UnityEngine.Vector2Int infiniteClipRectTexel;
                static /*0x10*/ UnityEngine.Vector2Int fullOpacityTexel;
                static /*0x18*/ UnityEngine.Vector2Int clearColorTexel;
                static /*0x20*/ UnityEngine.Vector2Int defaultTextCoreSettingsTexel;
                static /*0x28*/ UnityEngine.Matrix4x4 identityTransformValue;
                static /*0x68*/ UnityEngine.Vector4 identityTransformRow0Value;
                static /*0x78*/ UnityEngine.Vector4 identityTransformRow1Value;
                static /*0x88*/ UnityEngine.Vector4 identityTransformRow2Value;
                static /*0x98*/ UnityEngine.Vector4 infiniteClipRectValue;
                static /*0xa8*/ UnityEngine.Vector4 fullOpacityValue;
                static /*0xb8*/ UnityEngine.Vector4 clearColorValue;
                static /*0xc8*/ UnityEngine.UIElements.UIR.TextCoreSettings defaultTextCoreSettingsValue;
                static /*0x108*/ UnityEngine.UIElements.UIR.BMPAlloc identityTransform;
                static /*0x110*/ UnityEngine.UIElements.UIR.BMPAlloc infiniteClipRect;
                static /*0x118*/ UnityEngine.UIElements.UIR.BMPAlloc fullOpacity;
                static /*0x120*/ UnityEngine.UIElements.UIR.BMPAlloc clearColor;
                static /*0x128*/ UnityEngine.UIElements.UIR.BMPAlloc defaultTextCoreSettings;
                /*0x10*/ UnityEngine.UIElements.UIR.BaseShaderInfoStorage m_Storage;
                /*0x18*/ UnityEngine.UIElements.UIR.BitmapAllocator32 m_TransformAllocator;
                /*0x38*/ UnityEngine.UIElements.UIR.BitmapAllocator32 m_ClipRectAllocator;
                /*0x58*/ UnityEngine.UIElements.UIR.BitmapAllocator32 m_OpacityAllocator;
                /*0x78*/ UnityEngine.UIElements.UIR.BitmapAllocator32 m_ColorAllocator;
                /*0x98*/ UnityEngine.UIElements.UIR.BitmapAllocator32 m_TextSettingsAllocator;
                /*0xb8*/ bool m_StorageReallyCreated;
                /*0xb9*/ bool m_VertexTexturingEnabled;
                /*0xc0*/ Unity.Collections.NativeArray<UnityEngine.UIElements.UIR.Transform3x4> m_Transforms;
                /*0xd0*/ Unity.Collections.NativeArray<UnityEngine.Vector4> m_ClipRects;

                static /*0x173f120*/ UIRVEShaderInfoAllocator();
                static /*0x173f550*/ int get_pageWidth();
                static /*0x173f540*/ int get_pageHeight();
                static /*0x173cd00*/ UnityEngine.Vector2Int AllocToTexelCoord(ref UnityEngine.UIElements.UIR.BitmapAllocator32 allocator, UnityEngine.UIElements.UIR.BMPAlloc alloc);
                static /*0x173ccb0*/ int AllocToConstantBufferIndex(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                static /*0x173ced0*/ bool AtlasRectMatchesPage(ref UnityEngine.UIElements.UIR.BitmapAllocator32 allocator, UnityEngine.UIElements.UIR.BMPAlloc defAlloc, UnityEngine.RectInt atlasRect);
                /*0x173f560*/ Unity.Collections.NativeSlice<UnityEngine.UIElements.UIR.Transform3x4> get_transformConstants();
                /*0x173f4d0*/ Unity.Collections.NativeSlice<UnityEngine.Vector4> get_clipRectConstants();
                /*0x173f430*/ UnityEngine.Texture get_atlas();
                /*0x173d2b0*/ void Construct();
                /*0x173db60*/ void ReallyCreateStorage();
                /*0x173d5f0*/ void Dispose();
                /*0x173da20*/ void IssuePendingStorageChanges();
                /*0x173cd90*/ UnityEngine.UIElements.UIR.BMPAlloc AllocTransform();
                /*0x173ca20*/ UnityEngine.UIElements.UIR.BMPAlloc AllocClipRect();
                /*0x173cbd0*/ UnityEngine.UIElements.UIR.BMPAlloc AllocOpacity();
                /*0x173cb60*/ UnityEngine.UIElements.UIR.BMPAlloc AllocColor();
                /*0x173cc40*/ UnityEngine.UIElements.UIR.BMPAlloc AllocTextCoreSettings(UnityEngine.UIElements.UIR.TextCoreSettings settings);
                /*0x173eb70*/ void SetTransformValue(UnityEngine.UIElements.UIR.BMPAlloc alloc, UnityEngine.Matrix4x4 xform);
                /*0x173e2b0*/ void SetClipRectValue(UnityEngine.UIElements.UIR.BMPAlloc alloc, UnityEngine.Vector4 clipRect);
                /*0x173e610*/ void SetOpacityValue(UnityEngine.UIElements.UIR.BMPAlloc alloc, float opacity);
                /*0x173e460*/ void SetColorValue(UnityEngine.UIElements.UIR.BMPAlloc alloc, UnityEngine.Color color, bool isEditorContext);
                /*0x173e740*/ void SetTextCoreSettingValue(UnityEngine.UIElements.UIR.BMPAlloc alloc, UnityEngine.UIElements.UIR.TextCoreSettings settings, bool isEditorContext);
                /*0x173d980*/ void FreeTransform(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173d700*/ void FreeClipRect(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173d840*/ void FreeOpacity(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173d7a0*/ void FreeColor(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173d8e0*/ void FreeTextCoreSettings(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173eff0*/ UnityEngine.Color32 TransformAllocToVertexData(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173d060*/ UnityEngine.Color32 ClipRectAllocToVertexData(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173da40*/ UnityEngine.Color32 OpacityAllocToVertexData(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173d190*/ UnityEngine.Color32 ColorAllocToVertexData(UnityEngine.UIElements.UIR.BMPAlloc alloc);
                /*0x173eed0*/ UnityEngine.Color32 TextCoreSettingsToVertexData(UnityEngine.UIElements.UIR.BMPAlloc alloc);
            }

            namespace Implementation
            {
                class CommandGenerator
                {
                    static /*0x0*/ Unity.Profiling.ProfilerMarker k_GenerateEntries;
                    static /*0x8*/ Unity.Profiling.ProfilerMarker k_ConvertEntriesToCommandsMarker;
                    static /*0x10*/ Unity.Profiling.ProfilerMarker k_GenerateClosingCommandsMarker;
                    static /*0x18*/ Unity.Profiling.ProfilerMarker k_NudgeVerticesMarker;
                    static /*0x20*/ Unity.Profiling.ProfilerMarker k_UpdateOpacityIdMarker;
                    static /*0x28*/ Unity.Profiling.ProfilerMarker k_ComputeTransformMatrixMarker;
                    static /*0x30*/ UnityEngine.Material s_blitMaterial_LinearToGamma;
                    static /*0x38*/ UnityEngine.Material s_blitMaterial_GammaToLinear;
                    static /*0x40*/ UnityEngine.Material s_blitMaterial_NoChange;
                    static /*0x48*/ UnityEngine.Shader s_blitShader;

                    static /*0x1729490*/ CommandGenerator();
                    static /*0x17263b0*/ void GetVerticesTransformInfo(UnityEngine.UIElements.VisualElement ve, ref UnityEngine.Matrix4x4 transform);
                    static /*0x1725670*/ void ComputeTransformMatrix(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElement ancestor, ref UnityEngine.Matrix4x4 result);
                    static /*0x1726bd0*/ bool IsParentOrAncestorOf(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElement child);
                    static /*0x17271b0*/ UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.ClosingInfo PaintElement(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x1726ae0*/ void InvokeGenerateVisualContent(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.MeshGenerationContext ctx);
                    static /*0x1725810*/ UnityEngine.Material CreateBlitShader(float colorConversion);
                    static /*0x1726080*/ UnityEngine.Material GetBlitMaterial(UnityEngine.UIElements.VisualElement.RenderTargetMode mode);
                    static /*0x17252e0*/ void ClosePaintElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.ClosingInfo closingInfo, UnityEngine.UIElements.UIR.RenderChain renderChain, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x1729370*/ void UpdateOrAllocate(ref UnityEngine.UIElements.UIR.MeshHandle data, int vertexCount, int indexCount, UnityEngine.UIElements.UIR.UIRenderDevice device, ref Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> verts, ref Unity.Collections.NativeSlice<ushort> indices, ref ushort indexOffset, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x17292b0*/ void UpdateOpacityId(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain);
                    static /*0x1725a40*/ void DoUpdateOpacityId(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.MeshHandle mesh);
                    static /*0x1726c70*/ bool NudgeVerticesToNewSpace(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.UIRenderDevice device);
                    static /*0x1728e20*/ void PrepareNudgeVertices(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.UIR.UIRenderDevice device, UnityEngine.UIElements.UIR.MeshHandle mesh, ref nint src, ref nint dst, ref int count);
                    static /*0x1726990*/ UnityEngine.UIElements.UIR.RenderChainCommand InjectMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdPrev, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdNext, UnityEngine.UIElements.UIR.MeshHandle mesh, int indexCount, int indexOffset, UnityEngine.Material material, UnityEngine.UIElements.TextureId texture, int stencilRef);
                    static /*0x1726700*/ UnityEngine.UIElements.UIR.RenderChainCommand InjectClosingMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdPrev, ref UnityEngine.UIElements.UIR.RenderChainCommand cmdNext, UnityEngine.UIElements.UIR.MeshHandle mesh, int indexCount, int indexOffset, UnityEngine.Material material, UnityEngine.UIElements.TextureId texture, int stencilRef);
                    static /*0x1725de0*/ void FindCommandInsertionPoint(UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next);
                    static /*0x1725bb0*/ void FindClosingCommandInsertionPoint(UnityEngine.UIElements.VisualElement ve, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next);
                    static /*0x1726850*/ void InjectCommandInBetween(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.RenderChainCommand cmd, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next);
                    static /*0x1726590*/ void InjectClosingCommandInBetween(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.UIR.RenderChainCommand cmd, ref UnityEngine.UIElements.UIR.RenderChainCommand prev, ref UnityEngine.UIElements.UIR.RenderChainCommand next);
                    static /*0x1728f70*/ void ResetCommands(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve);
                }

                enum ClipMethod
                {
                    Undetermined = 0,
                    NotClipped = 1,
                    Scissor = 2,
                    ShaderDiscard = 3,
                    Stencil = 4,
                }

                class RenderEvents
                {
                    static /*0x0*/ float VisibilityTreshold;

                    static /*0x172f820*/ RenderEvents();
                    static /*0x172e1a0*/ void ProcessOnClippingChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, uint dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172e350*/ void ProcessOnOpacityChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, uint dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172e2c0*/ void ProcessOnColorChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, uint dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172e460*/ void ProcessOnTransformOrSizeChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, uint dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172e540*/ void ProcessOnVisualsChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, uint dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172d2f0*/ UnityEngine.Matrix4x4 GetTransformIDTransformInfo(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172d000*/ UnityEngine.Vector4 GetClipRectIDClipInfo(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172a2b0*/ uint DepthFirstOnChildAdded(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, int index, bool resetState);
                    static /*0x172ab10*/ uint DepthFirstOnChildRemoving(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve);
                    static /*0x172b900*/ void DepthFirstOnClippingChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, uint dirtyID, bool hierarchical, bool isRootOfChange, bool isPendingHierarchicalRepaint, bool inheritedClipRectIDChanged, bool inheritedMaskingChanged, UnityEngine.UIElements.UIR.UIRenderDevice device, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172bf80*/ void DepthFirstOnOpacityChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, float parentCompositeOpacity, UnityEngine.UIElements.VisualElement ve, uint dirtyID, bool hierarchical, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats, bool isDoingFullVertexRegeneration);
                    static /*0x172df30*/ void OnColorChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, uint dirtyID, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172c3d0*/ void DepthFirstOnTransformOrSizeChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement parent, UnityEngine.UIElements.VisualElement ve, uint dirtyID, UnityEngine.UIElements.UIR.UIRenderDevice device, bool isAncestorOfChangeSkinned, bool transformChanged, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172c910*/ void DepthFirstOnVisualsChanged(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve, uint dirtyID, bool parentHierarchyHidden, bool hierarchical, ref UnityEngine.UIElements.UIR.ChainBuilderStats stats);
                    static /*0x172efe0*/ bool UpdateTextCoreSettings(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve);
                    static /*0x172dd80*/ bool IsElementHierarchyHidden(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172d270*/ UnityEngine.UIElements.VisualElement GetLastDeepestChild(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172cef0*/ UnityEngine.UIElements.UIR.Implementation.ClipMethod DetermineSelfClipMethod(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve);
                    static /*0x172ee80*/ bool UpdateLocalFlipsWinding(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172f5a0*/ void UpdateWorldFlipsWinding(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172f610*/ void UpdateZeroScaling(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172def0*/ bool NeedsTransformID(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172dde0*/ bool NeedsColorID(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172de00*/ bool NeedsTextCoreSettings(UnityEngine.UIElements.VisualElement ve);
                    static /*0x172d4c0*/ bool InitColorIDs(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve);
                    static /*0x172e690*/ void SetColorValues(UnityEngine.UIElements.UIR.RenderChain renderChain, UnityEngine.UIElements.VisualElement ve);
                }

                class UIRStylePainter : UnityEngine.UIElements.IStylePainter
                {
                    /*0x10*/ UnityEngine.UIElements.UIR.RenderChain m_Owner;
                    /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.Entry> m_Entries;
                    /*0x20*/ UnityEngine.UIElements.AtlasBase m_Atlas;
                    /*0x28*/ UnityEngine.UIElements.UIR.VectorImageManager m_VectorImageManager;
                    /*0x30*/ UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.Entry m_CurrentEntry;
                    /*0x80*/ UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.ClosingInfo m_ClosingInfo;
                    /*0xb8*/ int m_MaskDepth;
                    /*0xbc*/ int m_StencilRef;
                    /*0xc0*/ UnityEngine.UIElements.UIR.BMPAlloc m_ClipRectID;
                    /*0xc8*/ int m_SVGBackgroundEntryIndex;
                    /*0xd0*/ UnityEngine.UIElements.UIR.TempAllocator<UnityEngine.UIElements.Vertex> m_VertsPool;
                    /*0xd8*/ UnityEngine.UIElements.UIR.TempAllocator<ushort> m_IndicesPool;
                    /*0xe0*/ System.Collections.Generic.List<UnityEngine.UIElements.MeshWriteData> m_MeshWriteDataPool;
                    /*0xe8*/ int m_NextMeshWriteDataPoolItem;
                    /*0xf0*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.RepeatRectUV> m_RepeatRectUVList;
                    /*0xf8*/ UnityEngine.UIElements.UIR.MeshBuilder.AllocMeshData.Allocator m_AllocRawVertsIndicesDelegate;
                    /*0x100*/ UnityEngine.UIElements.UIR.MeshBuilder.AllocMeshData.Allocator m_AllocThroughDrawMeshDelegate;
                    /*0x108*/ UnityEngine.UIElements.MeshGenerationContext <meshGenerationContext>k__BackingField;
                    /*0x110*/ UnityEngine.UIElements.VisualElement <currentElement>k__BackingField;
                    /*0x118*/ int <totalVertices>k__BackingField;
                    /*0x11c*/ int <totalIndices>k__BackingField;
                    /*0x120*/ UnityEngine.TextCore.Text.TextInfo m_TextInfo;

                    /*0x173c610*/ UIRStylePainter(UnityEngine.UIElements.UIR.RenderChain renderChain);
                    /*0x173abe0*/ UnityEngine.UIElements.MeshWriteData GetPooledMeshWriteData();
                    /*0x17326a0*/ UnityEngine.UIElements.MeshWriteData AllocRawVertsIndices(uint vertexCount, uint indexCount, ref UnityEngine.UIElements.UIR.MeshBuilder.AllocMeshData allocatorData);
                    /*0x1732790*/ UnityEngine.UIElements.MeshWriteData AllocThroughDrawMesh(uint vertexCount, uint indexCount, ref UnityEngine.UIElements.UIR.MeshBuilder.AllocMeshData allocatorData);
                    /*0x136fcb0*/ UnityEngine.UIElements.MeshGenerationContext get_meshGenerationContext();
                    /*0x1355380*/ UnityEngine.UIElements.VisualElement get_currentElement();
                    /*0x1354790*/ void set_currentElement(UnityEngine.UIElements.VisualElement value);
                    /*0x8b8f40*/ System.Collections.Generic.List<UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.Entry> get_entries();
                    /*0x173c9a0*/ UnityEngine.UIElements.UIR.Implementation.UIRStylePainter.ClosingInfo get_closingInfo();
                    /*0x173c9e0*/ int get_totalVertices();
                    /*0x173ca10*/ void set_totalVertices(int value);
                    /*0x137d930*/ int get_totalIndices();
                    /*0x173ca00*/ void set_totalIndices(int value);
                    /*0x17329f0*/ void Begin(UnityEngine.UIElements.VisualElement ve);
                    /*0x173ad60*/ void LandClipUnregisterMeshDrawCommand(UnityEngine.UIElements.UIR.RenderChainCommand cmd);
                    /*0x173acc0*/ void LandClipRegisterMesh(Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertices, Unity.Collections.NativeSlice<ushort> indices, int indexOffset);
                    /*0x1733cc0*/ UnityEngine.UIElements.MeshWriteData DrawMesh(int vertexCount, int indexCount, UnityEngine.Texture texture, UnityEngine.Material material, UnityEngine.UIElements.MeshGenerationContext.MeshFlags flags);
                    /*0x173bff0*/ void TryAtlasTexture(UnityEngine.Texture texture, UnityEngine.UIElements.MeshGenerationContext.MeshFlags flags, ref UnityEngine.Rect outUVRegion, ref bool outIsAtlas, ref UnityEngine.UIElements.TextureId outTextureId, ref UnityEngine.UIElements.UIR.VertexFlags outAddFlags);
                    /*0x1732ef0*/ void BuildEntryFromNativeMesh(UnityEngine.UIElements.MeshWriteDataInterface meshData, UnityEngine.Texture texture, UnityEngine.UIElements.TextureId textureId, bool isAtlas, UnityEngine.Material material, UnityEngine.UIElements.MeshGenerationContext.MeshFlags flags, UnityEngine.Rect uvRegion, UnityEngine.UIElements.UIR.VertexFlags addFlags);
                    /*0x17333d0*/ void BuildGradientEntryFromNativeMesh(UnityEngine.UIElements.MeshWriteDataInterface meshData, UnityEngine.UIElements.TextureId svgTextureId);
                    /*0x17337f0*/ void BuildRawEntryFromNativeMesh(UnityEngine.UIElements.MeshWriteDataInterface meshData);
                    /*0x1737c30*/ void DrawText(UnityEngine.UIElements.TextElement te);
                    /*0x17375a0*/ void DrawTextInfo(UnityEngine.TextCore.Text.TextInfo textInfo, UnityEngine.Vector2 offset, bool useHints);
                    /*0x17365a0*/ void DrawRectangle(UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams);
                    /*0x1733a70*/ void DrawBorder(UnityEngine.UIElements.MeshGenerationContextUtils.BorderParams borderParams);
                    /*0x1733b70*/ void DrawImmediate(System.Action callback, bool cullingEnabled);
                    /*0x173c9f0*/ UnityEngine.UIElements.VisualElement get_visualElement();
                    /*0x17382c0*/ void DrawVisualElementBackground();
                    /*0x17341d0*/ void DrawRectangleRepeat(UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams, UnityEngine.Rect totalRect, float scaledPixelsPerPoint);
                    /*0x173bac0*/ void StampRectangleWithSubRect(UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams, UnityEngine.Rect targetRect, UnityEngine.Rect totalRect, UnityEngine.Rect targetUV);
                    /*0x1739860*/ void DrawVisualElementBorder();
                    /*0x17327c0*/ void ApplyVisualElementClipping();
                    /*0x1732210*/ ushort[] AdjustSpriteWinding(UnityEngine.Vector2[] vertices, ushort[] indices);
                    /*0x1736db0*/ void DrawSprite(UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams);
                    /*0x1737d00*/ void DrawVectorImage(UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams);
                    /*0x173ade0*/ void MakeVectorGraphics(UnityEngine.UIElements.MeshGenerationContextUtils.RectangleParams rectParams, bool isUsingGradients, UnityEngine.UIElements.TextureId svgTexture, int settingIndexOffset, ref int finalVertexCount, ref int finalIndexCount);
                    /*0x173ba10*/ void Reset();
                    /*0x173c210*/ void ValidateMeshWriteData();
                    /*0x173a060*/ void GenerateStencilClipEntryForRoundedRectBackground();
                    /*0x173a8d0*/ void GenerateStencilClipEntryForSVGBackground();

                    struct Entry
                    {
                        /*0x10*/ Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> vertices;
                        /*0x20*/ Unity.Collections.NativeSlice<ushort> indices;
                        /*0x30*/ UnityEngine.Material material;
                        /*0x38*/ float fontTexSDFScale;
                        /*0x3c*/ UnityEngine.UIElements.TextureId texture;
                        /*0x40*/ UnityEngine.UIElements.UIR.RenderChainCommand customCommand;
                        /*0x48*/ UnityEngine.UIElements.UIR.BMPAlloc clipRectID;
                        /*0x50*/ UnityEngine.UIElements.UIR.VertexFlags addFlags;
                        /*0x54*/ bool uvIsDisplacement;
                        /*0x55*/ bool isTextEntry;
                        /*0x56*/ bool isClipRegisterEntry;
                        /*0x58*/ int stencilRef;
                        /*0x5c*/ int maskDepth;
                    }

                    struct ClosingInfo
                    {
                        /*0x10*/ bool needsClosing;
                        /*0x11*/ bool popViewMatrix;
                        /*0x12*/ bool popScissorClip;
                        /*0x13*/ bool blitAndPopRenderTexture;
                        /*0x14*/ bool PopDefaultMaterial;
                        /*0x18*/ UnityEngine.UIElements.UIR.RenderChainCommand clipUnregisterDrawCommand;
                        /*0x20*/ Unity.Collections.NativeSlice<UnityEngine.UIElements.Vertex> clipperRegisterVertices;
                        /*0x30*/ Unity.Collections.NativeSlice<ushort> clipperRegisterIndices;
                        /*0x40*/ int clipperRegisterIndexOffset;
                        /*0x44*/ int maskStencilRef;
                    }

                    struct RepeatRectUV
                    {
                        /*0x10*/ UnityEngine.Rect rect;
                        /*0x20*/ UnityEngine.Rect uv;
                    }
                }
            }
        }

        namespace StyleSheets
        {
            class HierarchyTraversal
            {
                /*0x32f970*/ HierarchyTraversal();
                /*0x1740bd0*/ void Traverse(UnityEngine.UIElements.VisualElement element);
                /*0x182a70*/ void TraverseRecursive(UnityEngine.UIElements.VisualElement element, int depth);
                /*0x1740b00*/ void Recurse(UnityEngine.UIElements.VisualElement element, int depth);
            }

            class InitialStyle
            {
                static /*0x0*/ UnityEngine.UIElements.ComputedStyle s_InitialStyle;

                static /*0x1740df0*/ InitialStyle();
                static /*0x1740da0*/ ref UnityEngine.UIElements.ComputedStyle Get();
                static /*0x1740ce0*/ UnityEngine.UIElements.ComputedStyle Acquire();
                static /*0x1741f20*/ UnityEngine.UIElements.Align get_alignContent();
                static /*0x1741f90*/ UnityEngine.UIElements.Align get_alignItems();
                static /*0x1742000*/ UnityEngine.UIElements.Align get_alignSelf();
                static /*0x1742070*/ UnityEngine.Color get_backgroundColor();
                static /*0x17420f0*/ UnityEngine.UIElements.Background get_backgroundImage();
                static /*0x1742170*/ UnityEngine.UIElements.BackgroundPosition get_backgroundPositionX();
                static /*0x17421f0*/ UnityEngine.UIElements.BackgroundPosition get_backgroundPositionY();
                static /*0x1742270*/ UnityEngine.UIElements.BackgroundRepeat get_backgroundRepeat();
                static /*0x17422e0*/ UnityEngine.UIElements.BackgroundSize get_backgroundSize();
                static /*0x1742360*/ UnityEngine.Color get_borderBottomColor();
                static /*0x17423e0*/ UnityEngine.UIElements.Length get_borderBottomLeftRadius();
                static /*0x1742450*/ UnityEngine.UIElements.Length get_borderBottomRightRadius();
                static /*0x17424c0*/ float get_borderBottomWidth();
                static /*0x1742530*/ UnityEngine.Color get_borderLeftColor();
                static /*0x17425b0*/ float get_borderLeftWidth();
                static /*0x1742620*/ UnityEngine.Color get_borderRightColor();
                static /*0x17426a0*/ float get_borderRightWidth();
                static /*0x1742710*/ UnityEngine.Color get_borderTopColor();
                static /*0x1742790*/ UnityEngine.UIElements.Length get_borderTopLeftRadius();
                static /*0x1742800*/ UnityEngine.UIElements.Length get_borderTopRightRadius();
                static /*0x1742870*/ float get_borderTopWidth();
                static /*0x17428e0*/ UnityEngine.UIElements.Length get_bottom();
                static /*0x1742950*/ UnityEngine.Color get_color();
                static /*0x17429c0*/ UnityEngine.UIElements.Cursor get_cursor();
                static /*0x1742a40*/ UnityEngine.UIElements.DisplayStyle get_display();
                static /*0x1742ab0*/ UnityEngine.UIElements.Length get_flexBasis();
                static /*0x1742b20*/ UnityEngine.UIElements.FlexDirection get_flexDirection();
                static /*0x1742b90*/ float get_flexGrow();
                static /*0x1742c00*/ float get_flexShrink();
                static /*0x1742c70*/ UnityEngine.UIElements.Wrap get_flexWrap();
                static /*0x1742ce0*/ UnityEngine.UIElements.Length get_fontSize();
                static /*0x1742d50*/ UnityEngine.UIElements.Length get_height();
                static /*0x1742dc0*/ UnityEngine.UIElements.Justify get_justifyContent();
                static /*0x1742e30*/ UnityEngine.UIElements.Length get_left();
                static /*0x1742ea0*/ UnityEngine.UIElements.Length get_letterSpacing();
                static /*0x1742f10*/ UnityEngine.UIElements.Length get_marginBottom();
                static /*0x1742f80*/ UnityEngine.UIElements.Length get_marginLeft();
                static /*0x1742ff0*/ UnityEngine.UIElements.Length get_marginRight();
                static /*0x1743060*/ UnityEngine.UIElements.Length get_marginTop();
                static /*0x17430d0*/ UnityEngine.UIElements.Length get_maxHeight();
                static /*0x1743140*/ UnityEngine.UIElements.Length get_maxWidth();
                static /*0x17431b0*/ UnityEngine.UIElements.Length get_minHeight();
                static /*0x1743220*/ UnityEngine.UIElements.Length get_minWidth();
                static /*0x1743290*/ float get_opacity();
                static /*0x1743300*/ UnityEngine.UIElements.OverflowInternal get_overflow();
                static /*0x1743370*/ UnityEngine.UIElements.Length get_paddingBottom();
                static /*0x17433e0*/ UnityEngine.UIElements.Length get_paddingLeft();
                static /*0x1743450*/ UnityEngine.UIElements.Length get_paddingRight();
                static /*0x17434c0*/ UnityEngine.UIElements.Length get_paddingTop();
                static /*0x1743530*/ UnityEngine.UIElements.Position get_position();
                static /*0x17435a0*/ UnityEngine.UIElements.Length get_right();
                static /*0x1743610*/ UnityEngine.UIElements.Rotate get_rotate();
                static /*0x1743690*/ UnityEngine.UIElements.Scale get_scale();
                static /*0x1743710*/ UnityEngine.UIElements.TextOverflow get_textOverflow();
                static /*0x1743780*/ UnityEngine.UIElements.TextShadow get_textShadow();
                static /*0x1743800*/ UnityEngine.UIElements.Length get_top();
                static /*0x1743870*/ UnityEngine.UIElements.TransformOrigin get_transformOrigin();
                static /*0x17438f0*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> get_transitionDelay();
                static /*0x1743960*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> get_transitionDuration();
                static /*0x17439d0*/ System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> get_transitionProperty();
                static /*0x1743a40*/ System.Collections.Generic.List<UnityEngine.UIElements.EasingFunction> get_transitionTimingFunction();
                static /*0x1743ab0*/ UnityEngine.UIElements.Translate get_translate();
                static /*0x1743b30*/ UnityEngine.Color get_unityBackgroundImageTintColor();
                static /*0x1743c90*/ UnityEngine.Font get_unityFont();
                static /*0x1743bb0*/ UnityEngine.UIElements.FontDefinition get_unityFontDefinition();
                static /*0x1743c20*/ UnityEngine.FontStyle get_unityFontStyleAndWeight();
                static /*0x1743d00*/ UnityEngine.UIElements.OverflowClipBox get_unityOverflowClipBox();
                static /*0x1743d70*/ UnityEngine.UIElements.Length get_unityParagraphSpacing();
                static /*0x1743de0*/ int get_unitySliceBottom();
                static /*0x1743e50*/ int get_unitySliceLeft();
                static /*0x1743ec0*/ int get_unitySliceRight();
                static /*0x1743f30*/ float get_unitySliceScale();
                static /*0x1743fa0*/ int get_unitySliceTop();
                static /*0x1744010*/ UnityEngine.TextAnchor get_unityTextAlign();
                static /*0x1744080*/ UnityEngine.Color get_unityTextOutlineColor();
                static /*0x17440f0*/ float get_unityTextOutlineWidth();
                static /*0x1744160*/ UnityEngine.UIElements.TextOverflowPosition get_unityTextOverflowPosition();
                static /*0x17441d0*/ UnityEngine.UIElements.Visibility get_visibility();
                static /*0x1744240*/ UnityEngine.UIElements.WhiteSpace get_whiteSpace();
                static /*0x17442b0*/ UnityEngine.UIElements.Length get_width();
                static /*0x1744320*/ UnityEngine.UIElements.Length get_wordSpacing();
            }

            class ShorthandApplicator
            {
                static /*0x0*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> s_TransitionDelayList;
                static /*0x8*/ System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> s_TransitionDurationList;
                static /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> s_TransitionPropertyList;
                static /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.EasingFunction> s_TransitionTimingFunctionList;

                static /*0x17472b0*/ ShorthandApplicator();
                static /*0x1744570*/ void ApplyBackgroundPosition(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1744640*/ void ApplyBorderColor(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1744870*/ void ApplyBorderRadius(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1744a50*/ void ApplyBorderWidth(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1744c90*/ void ApplyFlex(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1744d70*/ void ApplyMargin(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1744f60*/ void ApplyPadding(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1745150*/ void ApplyTransition(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x17452a0*/ void ApplyUnityBackgroundScaleMode(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x1745410*/ void ApplyUnityTextOutline(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.ComputedStyle computedStyle);
                static /*0x17463b0*/ bool CompileFlexShorthand(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref float grow, ref float shrink, ref UnityEngine.UIElements.Length basis);
                static /*0x1745d70*/ void CompileBorderRadius(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.Length top, ref UnityEngine.UIElements.Length right, ref UnityEngine.UIElements.Length bottom, ref UnityEngine.UIElements.Length left);
                static /*0x1745590*/ void CompileBackgroundPosition(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.BackgroundPosition backgroundPositionX, ref UnityEngine.UIElements.BackgroundPosition backgroundPositionY);
                static /*0x17471f0*/ void CompileUnityBackgroundScaleMode(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.BackgroundPosition backgroundPositionX, ref UnityEngine.UIElements.BackgroundPosition backgroundPositionY, ref UnityEngine.UIElements.BackgroundRepeat backgroundRepeat, ref UnityEngine.UIElements.BackgroundSize backgroundSize);
                static /*0x1746240*/ void CompileBoxArea(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.UIElements.Length top, ref UnityEngine.UIElements.Length right, ref UnityEngine.UIElements.Length bottom, ref UnityEngine.UIElements.Length left);
                static /*0x1746060*/ void CompileBoxArea(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref float top, ref float right, ref float bottom, ref float left);
                static /*0x1745eb0*/ void CompileBoxArea(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.Color top, ref UnityEngine.Color right, ref UnityEngine.Color bottom, ref UnityEngine.Color left);
                static /*0x1746600*/ void CompileTextOutline(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref UnityEngine.Color outlineColor, ref float outlineWidth);
                static /*0x1746710*/ void CompileTransition(UnityEngine.UIElements.StyleSheets.StylePropertyReader reader, ref System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> outDelay, ref System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> outDuration, ref System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> outProperty, ref System.Collections.Generic.List<UnityEngine.UIElements.EasingFunction> outTimingFunction);
                static /*0xbf9680*/ void <CompileBackgroundPosition>g__SwapKeyword|16_0(ref UnityEngine.UIElements.BackgroundPositionKeyword a, ref UnityEngine.UIElements.BackgroundPositionKeyword b);
            }

            class StylePropertyCache
            {
                static /*0x0*/ System.Collections.Generic.Dictionary<string, string> s_PropertySyntaxCache;
                static /*0x8*/ System.Collections.Generic.Dictionary<string, string> s_NonTerminalValues;

                static /*0x1747570*/ StylePropertyCache();
                static /*0x17474e0*/ bool TryGetSyntax(string name, ref string syntax);
                static /*0x1747450*/ bool TryGetNonTerminalValue(string name, ref string syntax);
            }

            enum StyleEnumType
            {
                Align = 0,
                BackgroundPositionKeyword = 1,
                BackgroundSizeType = 2,
                DisplayStyle = 3,
                EasingMode = 4,
                FlexDirection = 5,
                FontStyle = 6,
                Justify = 7,
                Overflow = 8,
                OverflowClipBox = 9,
                OverflowInternal = 10,
                Position = 11,
                Repeat = 12,
                RepeatXY = 13,
                ScaleMode = 14,
                TextAnchor = 15,
                TextOverflow = 16,
                TextOverflowPosition = 17,
                TransformOriginOffset = 18,
                Visibility = 19,
                WhiteSpace = 20,
                Wrap = 21,
            }

            enum StylePropertyId
            {
                Unknown = 0,
                Custom = -1,
                AlignContent = 131072,
                AlignItems = 131073,
                AlignSelf = 131074,
                All = 262144,
                BackgroundColor = 458752,
                BackgroundImage = 458753,
                BackgroundPosition = 262145,
                BackgroundPositionX = 458754,
                BackgroundPositionY = 458755,
                BackgroundRepeat = 458756,
                BackgroundSize = 458757,
                BorderBottomColor = 458758,
                BorderBottomLeftRadius = 458759,
                BorderBottomRightRadius = 458760,
                BorderBottomWidth = 131075,
                BorderColor = 262146,
                BorderLeftColor = 458761,
                BorderLeftWidth = 131076,
                BorderRadius = 262147,
                BorderRightColor = 458762,
                BorderRightWidth = 131077,
                BorderTopColor = 458763,
                BorderTopLeftRadius = 458764,
                BorderTopRightRadius = 458765,
                BorderTopWidth = 131078,
                BorderWidth = 262148,
                Bottom = 131079,
                Color = 65536,
                Cursor = 196608,
                Display = 131080,
                Flex = 262149,
                FlexBasis = 131081,
                FlexDirection = 131082,
                FlexGrow = 131083,
                FlexShrink = 131084,
                FlexWrap = 131085,
                FontSize = 65537,
                Height = 131086,
                JustifyContent = 131087,
                Left = 131088,
                LetterSpacing = 65538,
                Margin = 262150,
                MarginBottom = 131089,
                MarginLeft = 131090,
                MarginRight = 131091,
                MarginTop = 131092,
                MaxHeight = 131093,
                MaxWidth = 131094,
                MinHeight = 131095,
                MinWidth = 131096,
                Opacity = 458766,
                Overflow = 458767,
                Padding = 262151,
                PaddingBottom = 131097,
                PaddingLeft = 131098,
                PaddingRight = 131099,
                PaddingTop = 131100,
                Position = 131101,
                Right = 131102,
                Rotate = 327680,
                Scale = 327681,
                TextOverflow = 196609,
                TextShadow = 65539,
                Top = 131103,
                TransformOrigin = 327682,
                Transition = 262152,
                TransitionDelay = 393216,
                TransitionDuration = 393217,
                TransitionProperty = 393218,
                TransitionTimingFunction = 393219,
                Translate = 327683,
                UnityBackgroundImageTintColor = 196610,
                UnityBackgroundScaleMode = 262153,
                UnityFont = 65540,
                UnityFontDefinition = 65541,
                UnityFontStyleAndWeight = 65542,
                UnityOverflowClipBox = 196611,
                UnityParagraphSpacing = 65543,
                UnitySliceBottom = 196612,
                UnitySliceLeft = 196613,
                UnitySliceRight = 196614,
                UnitySliceScale = 196615,
                UnitySliceTop = 196616,
                UnityTextAlign = 65544,
                UnityTextOutline = 262154,
                UnityTextOutlineColor = 65545,
                UnityTextOutlineWidth = 65546,
                UnityTextOverflowPosition = 196617,
                Visibility = 65547,
                WhiteSpace = 65548,
                Width = 131104,
                WordSpacing = 65549,
            }

            class StylePropertyUtil
            {
                static /*0x0*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleSheets.StylePropertyId> s_NameToId;
                static /*0x8*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.StyleSheets.StylePropertyId, string> s_IdToName;
                static /*0x10*/ System.Collections.Generic.HashSet<UnityEngine.UIElements.StyleSheets.StylePropertyId> s_AnimatableProperties;
                static /*0x18*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.StyleSheets.StylePropertyId, UnityEngine.UIElements.UsageHints> s_AnimatableWithUsageHintProperties;

                static /*0x174e720*/ StylePropertyUtil();
                static /*0x174d720*/ bool TryGetEnumIntValue(UnityEngine.UIElements.StyleSheets.StyleEnumType enumType, string value, ref int intValue);
                static /*0x174d5c0*/ bool IsMatchingShorthand(UnityEngine.UIElements.StyleSheets.StylePropertyId shorthand, UnityEngine.UIElements.StyleSheets.StylePropertyId id);
                static /*0x174d540*/ bool IsAnimatable(UnityEngine.UIElements.StyleSheets.StylePropertyId id);
            }

            struct Dimension : System.IEquatable<UnityEngine.UIElements.StyleSheets.Dimension>
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheets.Dimension.Unit unit;
                /*0x14*/ float value;

                static /*0x17409a0*/ bool op_Equality(UnityEngine.UIElements.StyleSheets.Dimension lhs, UnityEngine.UIElements.StyleSheets.Dimension rhs);
                /*0x1740990*/ Dimension(float value, UnityEngine.UIElements.StyleSheets.Dimension.Unit unit);
                /*0x1740790*/ UnityEngine.UIElements.Length ToLength();
                /*0x1740960*/ UnityEngine.UIElements.TimeValue ToTime();
                /*0x1740700*/ UnityEngine.UIElements.Angle ToAngle();
                /*0x1740690*/ bool Equals(UnityEngine.UIElements.StyleSheets.Dimension other);
                /*0x17405d0*/ bool Equals(object obj);
                /*0x17406c0*/ int GetHashCode();
                /*0x17407c0*/ string ToString();

                enum Unit
                {
                    Unitless = 0,
                    Pixel = 1,
                    Percent = 2,
                    Second = 3,
                    Millisecond = 4,
                    Degree = 5,
                    Gradian = 6,
                    Radian = 7,
                    Turn = 8,
                }
            }

            struct ScalableImage
            {
                /*0x10*/ UnityEngine.Texture2D normalImage;
                /*0x18*/ UnityEngine.Texture2D highResolutionImage;

                /*0x1744390*/ string ToString();
            }

            struct StylePropertyValue
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheet sheet;
                /*0x18*/ UnityEngine.UIElements.StyleValueHandle handle;
            }

            struct ImageSource
            {
                /*0x10*/ UnityEngine.Texture2D texture;
                /*0x18*/ UnityEngine.Sprite sprite;
                /*0x20*/ UnityEngine.UIElements.VectorImage vectorImage;
                /*0x28*/ UnityEngine.RenderTexture renderTexture;

                /*0x1740bf0*/ bool IsNull();
            }

            class StylePropertyReader
            {
                static /*0x0*/ UnityEngine.UIElements.StyleSheets.StylePropertyReader.GetCursorIdFunction getCursorIdFunc;
                /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyValue> m_Values;
                /*0x18*/ System.Collections.Generic.List<int> m_ValueCount;
                /*0x20*/ UnityEngine.UIElements.StyleVariableResolver m_Resolver;
                /*0x28*/ UnityEngine.UIElements.StyleSheet m_Sheet;
                /*0x30*/ UnityEngine.UIElements.StyleProperty[] m_Properties;
                /*0x38*/ UnityEngine.UIElements.StyleSheets.StylePropertyId[] m_PropertyIds;
                /*0x40*/ int m_CurrentValueIndex;
                /*0x44*/ int m_CurrentPropertyIndex;
                /*0x48*/ UnityEngine.UIElements.StyleProperty <property>k__BackingField;
                /*0x50*/ UnityEngine.UIElements.StyleSheets.StylePropertyId <propertyId>k__BackingField;
                /*0x54*/ int <valueCount>k__BackingField;
                /*0x58*/ float <dpiScaling>k__BackingField;

                static /*0x174c1e0*/ UnityEngine.UIElements.TransformOrigin ReadTransformOrigin(int valCount, UnityEngine.UIElements.StyleSheets.StylePropertyValue val1, UnityEngine.UIElements.StyleSheets.StylePropertyValue val2, UnityEngine.UIElements.StyleSheets.StylePropertyValue zVvalue);
                static /*0x174bf30*/ UnityEngine.UIElements.Length ReadTransformOriginEnum(UnityEngine.UIElements.StyleSheets.StylePropertyValue value, ref bool isVertical, ref bool isHorizontal);
                static /*0x174c5e0*/ UnityEngine.UIElements.Translate ReadTranslate(int valCount, UnityEngine.UIElements.StyleSheets.StylePropertyValue val1, UnityEngine.UIElements.StyleSheets.StylePropertyValue val2, UnityEngine.UIElements.StyleSheets.StylePropertyValue val3);
                static /*0x174b780*/ UnityEngine.UIElements.Scale ReadScale(int valCount, UnityEngine.UIElements.StyleSheets.StylePropertyValue val1, UnityEngine.UIElements.StyleSheets.StylePropertyValue val2, UnityEngine.UIElements.StyleSheets.StylePropertyValue val3);
                static /*0x174b350*/ UnityEngine.UIElements.Rotate ReadRotate(int valCount, UnityEngine.UIElements.StyleSheets.StylePropertyValue val1, UnityEngine.UIElements.StyleSheets.StylePropertyValue val2, UnityEngine.UIElements.StyleSheets.StylePropertyValue val3, UnityEngine.UIElements.StyleSheets.StylePropertyValue val4);
                static /*0x174d370*/ bool TryReadEnum(UnityEngine.UIElements.StyleSheets.StyleEnumType enumType, UnityEngine.UIElements.StyleSheets.StylePropertyValue value, ref int intValue);
                static /*0x174a1e0*/ int ReadEnum(UnityEngine.UIElements.StyleSheets.StyleEnumType enumType, UnityEngine.UIElements.StyleSheets.StylePropertyValue value);
                static /*0x1748ed0*/ UnityEngine.UIElements.Angle ReadAngle(UnityEngine.UIElements.StyleSheets.StylePropertyValue value);
                static /*0x17491d0*/ UnityEngine.UIElements.BackgroundPosition ReadBackgroundPosition(int valCount, UnityEngine.UIElements.StyleSheets.StylePropertyValue val1, UnityEngine.UIElements.StyleSheets.StylePropertyValue val2, UnityEngine.UIElements.BackgroundPositionKeyword keyword);
                static /*0x17495b0*/ UnityEngine.UIElements.BackgroundRepeat ReadBackgroundRepeat(int valCount, UnityEngine.UIElements.StyleSheets.StylePropertyValue val1, UnityEngine.UIElements.StyleSheets.StylePropertyValue val2);
                static /*0x1749840*/ UnityEngine.UIElements.BackgroundSize ReadBackgroundSize(int valCount, UnityEngine.UIElements.StyleSheets.StylePropertyValue val1, UnityEngine.UIElements.StyleSheets.StylePropertyValue val2);
                static /*0x174caf0*/ bool TryGetImageSourceFromValue(UnityEngine.UIElements.StyleSheets.StylePropertyValue propertyValue, float dpiScaling, ref UnityEngine.UIElements.StyleSheets.ImageSource source);
                /*0x174d440*/ StylePropertyReader();
                /*0x4e40d0*/ UnityEngine.UIElements.StyleProperty get_property();
                /*0x4e4360*/ void set_property(UnityEngine.UIElements.StyleProperty value);
                /*0xc70ac0*/ UnityEngine.UIElements.StyleSheets.StylePropertyId get_propertyId();
                /*0x136edf0*/ void set_propertyId(UnityEngine.UIElements.StyleSheets.StylePropertyId value);
                /*0x136e810*/ int get_valueCount();
                /*0x13db570*/ void set_valueCount(int value);
                /*0x136fc70*/ float get_dpiScaling();
                /*0x1659560*/ void set_dpiScaling(float value);
                /*0x174c8b0*/ void SetContext(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleComplexSelector selector, UnityEngine.UIElements.StyleVariableContext varContext, float dpiScaling);
                /*0x174ca80*/ void SetInlineContext(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleProperty[] properties, UnityEngine.UIElements.StyleSheets.StylePropertyId[] propertyIds, float dpiScaling);
                /*0x1748ea0*/ UnityEngine.UIElements.StyleSheets.StylePropertyId MoveNextProperty();
                /*0x17488e0*/ UnityEngine.UIElements.StyleSheets.StylePropertyValue GetValue(int index);
                /*0x1748860*/ UnityEngine.UIElements.StyleValueType GetValueType(int index);
                /*0x1748a00*/ bool IsValueType(int index, UnityEngine.UIElements.StyleValueType type);
                /*0x1748960*/ bool IsKeyword(int index, UnityEngine.UIElements.StyleValueKeyword keyword);
                /*0x1748fd0*/ string ReadAsString(int index);
                /*0x174acc0*/ UnityEngine.UIElements.Length ReadLength(int index);
                /*0x174be80*/ UnityEngine.UIElements.TimeValue ReadTimeValue(int index);
                /*0x174c480*/ UnityEngine.UIElements.Translate ReadTranslate(int index);
                /*0x174c080*/ UnityEngine.UIElements.TransformOrigin ReadTransformOrigin(int index);
                /*0x174b4f0*/ UnityEngine.UIElements.Rotate ReadRotate(int index);
                /*0x174b990*/ UnityEngine.UIElements.Scale ReadScale(int index);
                /*0x174a3b0*/ float ReadFloat(int index);
                /*0x174ac40*/ int ReadInt(int index);
                /*0x1749d00*/ UnityEngine.Color ReadColor(int index);
                /*0x174a2b0*/ int ReadEnum(UnityEngine.UIElements.StyleSheets.StyleEnumType enumType, int index);
                /*0x174a430*/ UnityEngine.UIElements.FontDefinition ReadFontDefinition(int index);
                /*0x174a940*/ UnityEngine.Font ReadFont(int index);
                /*0x1749a90*/ UnityEngine.UIElements.Background ReadBackground(int index);
                /*0x1749e20*/ UnityEngine.UIElements.Cursor ReadCursor(int index);
                /*0x174bae0*/ UnityEngine.UIElements.TextShadow ReadTextShadow(int index);
                /*0x1749040*/ UnityEngine.UIElements.BackgroundPosition ReadBackgroundPositionX(int index);
                /*0x1749080*/ UnityEngine.UIElements.BackgroundPosition ReadBackgroundPositionY(int index);
                /*0x17490c0*/ UnityEngine.UIElements.BackgroundPosition ReadBackgroundPosition(int index, UnityEngine.UIElements.BackgroundPositionKeyword keyword);
                /*0x17493c0*/ UnityEngine.UIElements.BackgroundRepeat ReadBackgroundRepeat(int index);
                /*0x1749750*/ UnityEngine.UIElements.BackgroundSize ReadBackgroundSize(int index);
                /*0x174adc0*/ void ReadListEasingFunction(System.Collections.Generic.List<UnityEngine.UIElements.EasingFunction> list, int index);
                /*0x174b1a0*/ void ReadListTimeValue(System.Collections.Generic.List<UnityEngine.UIElements.TimeValue> list, int index);
                /*0x174afc0*/ void ReadListStylePropertyName(System.Collections.Generic.List<UnityEngine.UIElements.StylePropertyName> list, int index);
                /*0x1748a90*/ void LoadProperties();
                /*0x174c9b0*/ void SetCurrentProperty();

                class GetCursorIdFunction : System.MulticastDelegate
                {
                    /*0x17409d0*/ GetCursorIdFunction(object object, nint method);
                    /*0x722200*/ int Invoke(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle handle);
                }
            }

            struct MatchResultInfo
            {
                /*0x10*/ bool success;
                /*0x14*/ UnityEngine.UIElements.PseudoStates triggerPseudoMask;
                /*0x18*/ UnityEngine.UIElements.PseudoStates dependencyPseudoMask;

                /*0x1756420*/ MatchResultInfo(bool success, UnityEngine.UIElements.PseudoStates triggerPseudoMask, UnityEngine.UIElements.PseudoStates dependencyPseudoMask);
            }

            struct SelectorMatchRecord
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheet sheet;
                /*0x18*/ int styleSheetIndexInStack;
                /*0x20*/ UnityEngine.UIElements.StyleComplexSelector complexSelector;

                static /*0x175f4e0*/ int Compare(UnityEngine.UIElements.StyleSheets.SelectorMatchRecord a, UnityEngine.UIElements.StyleSheets.SelectorMatchRecord b);
                /*0x175f630*/ SelectorMatchRecord(UnityEngine.UIElements.StyleSheet sheet, int styleSheetIndexInStack);
            }

            class StyleSelectorHelper
            {
                static /*0x17610d0*/ UnityEngine.UIElements.StyleSheets.MatchResultInfo MatchesSelector(UnityEngine.UIElements.VisualElement element, UnityEngine.UIElements.StyleSelector selector);
                static /*0x1760ec0*/ bool MatchRightToLeft(UnityEngine.UIElements.VisualElement element, UnityEngine.UIElements.StyleComplexSelector complexSelector, System.Action<UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.StyleSheets.MatchResultInfo> processResult);
                static /*0x17605f0*/ void FastLookup(System.Collections.Generic.IDictionary<string, UnityEngine.UIElements.StyleComplexSelector> table, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.SelectorMatchRecord> matchedSelectors, UnityEngine.UIElements.StyleMatchingContext context, string input, ref UnityEngine.UIElements.StyleSheets.SelectorMatchRecord record);
                static /*0x17609f0*/ void FindMatches(UnityEngine.UIElements.StyleMatchingContext context, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.SelectorMatchRecord> matchedSelectors, int parentSheetIndex);
            }

            class StyleSheetCache
            {
                static /*0x0*/ UnityEngine.UIElements.StyleSheets.StyleSheetCache.SheetHandleKeyComparer s_Comparer;
                static /*0x8*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.StyleSheets.StyleSheetCache.SheetHandleKey, UnityEngine.UIElements.StyleSheets.StylePropertyId[]> s_RulePropertyIdsCache;

                static /*0x1761750*/ StyleSheetCache();
                static /*0x1761490*/ UnityEngine.UIElements.StyleSheets.StylePropertyId[] GetPropertyIds(UnityEngine.UIElements.StyleSheet sheet, int ruleIndex);
                static /*0x1761670*/ UnityEngine.UIElements.StyleSheets.StylePropertyId[] GetPropertyIds(UnityEngine.UIElements.StyleRule rule);
                static /*0x17613a0*/ UnityEngine.UIElements.StyleSheets.StylePropertyId GetPropertyId(UnityEngine.UIElements.StyleRule rule, int index);

                struct SheetHandleKey
                {
                    /*0x10*/ int sheetInstanceID;
                    /*0x14*/ int index;

                    /*0x175f6b0*/ SheetHandleKey(UnityEngine.UIElements.StyleSheet sheet, int index);
                }

                class SheetHandleKeyComparer : System.Collections.Generic.IEqualityComparer<UnityEngine.UIElements.StyleSheets.StyleSheetCache.SheetHandleKey>
                {
                    /*0x32f970*/ SheetHandleKeyComparer();
                    /*0x175f660*/ bool Equals(UnityEngine.UIElements.StyleSheets.StyleSheetCache.SheetHandleKey x, UnityEngine.UIElements.StyleSheets.StyleSheetCache.SheetHandleKey y);
                    /*0x175f680*/ int GetHashCode(UnityEngine.UIElements.StyleSheets.StyleSheetCache.SheetHandleKey key);
                }
            }

            class StyleSheetColor
            {
                static /*0x0*/ System.Collections.Generic.Dictionary<string, UnityEngine.Color32> s_NameToColor;

                static /*0x1761980*/ StyleSheetColor();
                static /*0x1761870*/ bool TryGetColor(string name, ref UnityEngine.Color color);
                static /*0x1761850*/ UnityEngine.Color32 HexToColor32(uint color);
            }

            class StyleSheetExtensions
            {
                static /*0x1763490*/ string ReadAsString(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleValueHandle handle);
                static /*0x1763460*/ bool IsVarFunction(UnityEngine.UIElements.StyleValueHandle handle);
            }

            struct StyleValue
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheets.StylePropertyId id;
                /*0x14*/ UnityEngine.UIElements.StyleKeyword keyword;
                /*0x18*/ float number;
                /*0x18*/ UnityEngine.UIElements.Length length;
                /*0x18*/ UnityEngine.Color color;
                /*0x18*/ System.Runtime.InteropServices.GCHandle resource;
                /*0x18*/ UnityEngine.UIElements.BackgroundPosition position;
                /*0x18*/ UnityEngine.UIElements.BackgroundRepeat repeat;
            }

            struct StyleValueManaged
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheets.StylePropertyId id;
                /*0x14*/ UnityEngine.UIElements.StyleKeyword keyword;
                /*0x18*/ object value;
            }

            enum MatchResultErrorCode
            {
                None = 0,
                Syntax = 1,
                EmptyValue = 2,
                ExpectedEndOfValue = 3,
            }

            struct MatchResult
            {
                /*0x10*/ UnityEngine.UIElements.StyleSheets.MatchResultErrorCode errorCode;
                /*0x18*/ string errorValue;

                /*0x1756430*/ bool get_success();
            }

            class BaseStyleMatcher
            {
                static /*0x0*/ System.Text.RegularExpressions.Regex s_CustomIdentRegex;
                /*0x10*/ System.Collections.Generic.Stack<UnityEngine.UIElements.StyleSheets.BaseStyleMatcher.MatchContext> m_ContextStack;
                /*0x18*/ UnityEngine.UIElements.StyleSheets.BaseStyleMatcher.MatchContext m_CurrentContext;

                static /*0x1751ac0*/ BaseStyleMatcher();
                /*0x1751b50*/ BaseStyleMatcher();
                /*0x17e620*/ bool MatchKeyword(string keyword);
                /*0x17cb40*/ bool MatchNumber();
                /*0x17cb40*/ bool MatchInteger();
                /*0x17cb40*/ bool MatchLength();
                /*0x17cb40*/ bool MatchPercentage();
                /*0x17cb40*/ bool MatchColor();
                /*0x17cb40*/ bool MatchResource();
                /*0x17cb40*/ bool MatchUrl();
                /*0x17cb40*/ bool MatchTime();
                /*0x17cb40*/ bool MatchAngle();
                /*0x17cb40*/ bool MatchCustomIdent();
                /*0x180980*/ int get_valueCount();
                /*0x17cb40*/ bool get_isCurrentVariable();
                /*0x17cb40*/ bool get_isCurrentComma();
                /*0x1751bd0*/ bool get_hasCurrent();
                /*0x8a5c20*/ int get_currentIndex();
                /*0x8a5c50*/ void set_currentIndex(int value);
                /*0xc70b00*/ int get_matchedVariableCount();
                /*0xc70b50*/ void set_matchedVariableCount(int value);
                /*0x17509d0*/ void Initialize();
                /*0x17519e0*/ void MoveNext();
                /*0x1751a70*/ void SaveContext();
                /*0x1751a20*/ void RestoreContext();
                /*0x1750980*/ void DropContext();
                /*0x1751850*/ bool Match(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1751050*/ bool MatchExpression(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1750f30*/ bool MatchExpressionWithMultiplier(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x17512a0*/ bool MatchGroup(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1750a60*/ bool MatchCombinator(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1751720*/ bool MatchOr(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1751700*/ bool MatchOrOr(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1750a20*/ bool MatchAndAnd(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1751540*/ int MatchMany(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x17513d0*/ int MatchManyByOrder(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp, int* matchOrder);
                /*0x1751350*/ bool MatchJuxtaposition(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);
                /*0x1750db0*/ bool MatchDataType(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp);

                struct MatchContext
                {
                    /*0x10*/ int valueIndex;
                    /*0x14*/ int matchedVariableCount;
                }
            }

            class StylePropertyValueMatcher : UnityEngine.UIElements.StyleSheets.BaseStyleMatcher
            {
                /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyValue> m_Values;

                /*0x17603b0*/ StylePropertyValueMatcher();
                /*0x1760460*/ UnityEngine.UIElements.StyleSheets.StylePropertyValue get_current();
                /*0x17605b0*/ int get_valueCount();
                /*0x348b00*/ bool get_isCurrentVariable();
                /*0x1760500*/ bool get_isCurrentComma();
                /*0x17600f0*/ UnityEngine.UIElements.StyleSheets.MatchResult Match(UnityEngine.UIElements.StyleSheets.Syntax.Expression exp, System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.StylePropertyValue> values);
                /*0x175fb80*/ bool MatchKeyword(string keyword);
                /*0x175fae0*/ bool MatchNumber();
                /*0x175fae0*/ bool MatchInteger();
                /*0x175fc90*/ bool MatchLength();
                /*0x175fda0*/ bool MatchPercentage();
                /*0x175f800*/ bool MatchColor();
                /*0x175feb0*/ bool MatchResource();
                /*0x1760040*/ bool MatchUrl();
                /*0x175ff50*/ bool MatchTime();
                /*0x175f9a0*/ bool MatchCustomIdent();
                /*0x175f6f0*/ bool MatchAngle();
            }

            namespace Syntax
            {
                class Expression
                {
                    /*0x10*/ UnityEngine.UIElements.StyleSheets.Syntax.ExpressionType type;
                    /*0x14*/ UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplier multiplier;
                    /*0x20*/ UnityEngine.UIElements.StyleSheets.Syntax.DataType dataType;
                    /*0x24*/ UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator combinator;
                    /*0x28*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression[] subExpressions;
                    /*0x30*/ string keyword;

                    /*0x1755d50*/ Expression(UnityEngine.UIElements.StyleSheets.Syntax.ExpressionType type);
                }

                enum ExpressionType
                {
                    Unknown = 0,
                    Data = 1,
                    Keyword = 2,
                    Combinator = 3,
                }

                enum DataType
                {
                    None = 0,
                    Number = 1,
                    Integer = 2,
                    Length = 3,
                    Percentage = 4,
                    Color = 5,
                    Resource = 6,
                    Url = 7,
                    Time = 8,
                    Angle = 9,
                    CustomIdent = 10,
                }

                enum ExpressionCombinator
                {
                    None = 0,
                    Or = 1,
                    OrOr = 2,
                    AndAnd = 3,
                    Juxtaposition = 4,
                    Group = 5,
                }

                enum ExpressionMultiplierType
                {
                    None = 0,
                    ZeroOrMore = 1,
                    OneOrMore = 2,
                    ZeroOrOne = 3,
                    Ranges = 4,
                    OneOrMoreComma = 5,
                    GroupAtLeastOne = 6,
                }

                struct ExpressionMultiplier
                {
                    static int Infinity = 100;
                    /*0x10*/ UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplierType m_Type;
                    /*0x14*/ int min;
                    /*0x18*/ int max;

                    /*0x1755d20*/ ExpressionMultiplier(UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplierType type);
                    /*0x15d3b80*/ UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplierType get_type();
                    /*0x1755d40*/ void set_type(UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplierType value);
                    /*0x1755ca0*/ void SetType(UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplierType value);
                }

                class StyleSyntaxParser
                {
                    /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ProcessExpressionList;
                    /*0x18*/ System.Collections.Generic.Stack<UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ExpressionStack;
                    /*0x20*/ System.Collections.Generic.Stack<UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator> m_CombinatorStack;
                    /*0x28*/ System.Collections.Generic.Dictionary<string, UnityEngine.UIElements.StyleSheets.Syntax.Expression> m_ParsedExpressionCache;

                    static /*0x1763850*/ void EatSpace(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer);
                    static /*0x17638d0*/ bool IsExpressionEnd(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken token);
                    static /*0x17638b0*/ bool IsCombinator(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken token);
                    static /*0x17638f0*/ bool IsMultiplier(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken token);
                    /*0x1765860*/ StyleSyntaxParser();
                    /*0x1765350*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression Parse(string syntax);
                    /*0x17641b0*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseExpression(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer);
                    /*0x1765500*/ void ProcessCombinatorStack();
                    /*0x17651a0*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseTerm(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer);
                    /*0x1763920*/ UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator ParseCombinatorType(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer);
                    /*0x1764450*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseGroup(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer);
                    /*0x1763b70*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseDataType(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer);
                    /*0x17649e0*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseNonTerminalValue(string syntax);
                    /*0x1764b90*/ UnityEngine.UIElements.StyleSheets.Syntax.Expression ParseProperty(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer);
                    /*0x1764750*/ void ParseMultiplier(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer, ref UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplier multiplier);
                    /*0x1765040*/ void ParseRanges(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer tokenizer, ref int min, ref int max);
                }

                enum StyleSyntaxTokenType
                {
                    Unknown = 0,
                    String = 1,
                    Number = 2,
                    Space = 3,
                    SingleBar = 4,
                    DoubleBar = 5,
                    DoubleAmpersand = 6,
                    Comma = 7,
                    SingleQuote = 8,
                    Asterisk = 9,
                    Plus = 10,
                    QuestionMark = 11,
                    HashMark = 12,
                    ExclamationPoint = 13,
                    OpenBracket = 14,
                    CloseBracket = 15,
                    OpenBrace = 16,
                    CloseBrace = 17,
                    LessThan = 18,
                    GreaterThan = 19,
                    End = 20,
                }

                struct StyleSyntaxToken
                {
                    /*0x10*/ UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenType type;
                    /*0x18*/ string text;
                    /*0x20*/ int number;

                    /*0x17659b0*/ StyleSyntaxToken(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenType t);
                    /*0x17659e0*/ StyleSyntaxToken(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenType type, string text);
                    /*0x1765a10*/ StyleSyntaxToken(UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenType type, int number);
                }

                class StyleSyntaxTokenizer
                {
                    /*0x10*/ System.Collections.Generic.List<UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken> m_Tokens;
                    /*0x18*/ int m_CurrentTokenIndex;

                    static /*0x1765ab0*/ bool IsNextCharacter(string s, int index, char c);
                    static /*0x1765b00*/ bool IsNextLetterOrDash(string s, int index);
                    static /*0x1765bd0*/ bool IsNextNumber(string s, int index);
                    static /*0x1765a50*/ int GlobCharacter(string s, int index, char c);
                    /*0x1766880*/ StyleSyntaxTokenizer();
                    /*0x1766900*/ UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken get_current();
                    /*0x1765c60*/ UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken MoveNext();
                    /*0x1765d30*/ UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken PeekNext();
                    /*0x1765df0*/ void Tokenize(string syntax);
                }
            }
        }

        namespace Experimental
        {
            class Easing
            {
                static /*0x6b4390*/ float Linear(float t);
                static /*0x1755a10*/ float InSine(float t);
                static /*0x1755c90*/ float OutSine(float t);
                static /*0x17559c0*/ float InOutSine(float t);
                static /*0x1755a00*/ float InQuad(float t);
                static /*0x1755c70*/ float OutQuad(float t);
                static /*0x1755970*/ float InOutQuad(float t);
                static /*0x17553d0*/ float InCubic(float t);
                static /*0x1755b50*/ float OutCubic(float t);
                static /*0x1755750*/ float InOutCubic(float t);
                static /*0x17559f0*/ float InPower(float t, int power);
                static /*0x1755c20*/ float OutPower(float t, int power);
                static /*0x17558f0*/ float InOutPower(float t, int power);
                static /*0x17552a0*/ float InBounce(float t);
                static /*0x1755a80*/ float OutBounce(float t);
                static /*0x17554f0*/ float InOutBounce(float t);
                static /*0x17553e0*/ float InElastic(float t);
                static /*0x1755b80*/ float OutElastic(float t);
                static /*0x17557b0*/ float InOutElastic(float t);
                static /*0x1755280*/ float InBack(float t);
                static /*0x1755a40*/ float OutBack(float t);
                static /*0x1755470*/ float InOutBack(float t);
                static /*0x1755370*/ float InCirc(float t);
                static /*0x1755b20*/ float OutCirc(float t);
                static /*0x17556a0*/ float InOutCirc(float t);
            }

            class PointerOverLinkTagEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.Experimental.PointerOverLinkTagEvent>
            {
                /*0x110*/ string <linkID>k__BackingField;
                /*0x118*/ string <linkText>k__BackingField;

                static /*0x175f1a0*/ PointerOverLinkTagEvent();
                static /*0x175f0c0*/ UnityEngine.UIElements.Experimental.PointerOverLinkTagEvent GetPooled(UnityEngine.UIElements.IPointerEvent evt, string linkID, string linkText);
                /*0x175f280*/ PointerOverLinkTagEvent();
                /*0x1354790*/ void set_linkID(string value);
                /*0x134cc40*/ void set_linkText(string value);
                /*0x175f150*/ void Init();
                /*0x175ebb0*/ void LocalInit();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.Experimental.PointerOverLinkTagEvent.<> <>9;

                    static /*0x17675a0*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1767140*/ UnityEngine.UIElements.Experimental.PointerOverLinkTagEvent <.cctor>b__0_0();
                }
            }

            class PointerMoveLinkTagEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.Experimental.PointerMoveLinkTagEvent>
            {
                /*0x110*/ string <linkID>k__BackingField;
                /*0x118*/ string <linkText>k__BackingField;

                static /*0x175edd0*/ PointerMoveLinkTagEvent();
                static /*0x175ecf0*/ UnityEngine.UIElements.Experimental.PointerMoveLinkTagEvent GetPooled(UnityEngine.UIElements.IPointerEvent evt, string linkID, string linkText);
                /*0x175eeb0*/ PointerMoveLinkTagEvent();
                /*0x1354790*/ void set_linkID(string value);
                /*0x134cc40*/ void set_linkText(string value);
                /*0x175ed80*/ void Init();
                /*0x175ebb0*/ void LocalInit();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.Experimental.PointerMoveLinkTagEvent.<> <>9;

                    static /*0x1767450*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1767220*/ UnityEngine.UIElements.Experimental.PointerMoveLinkTagEvent <.cctor>b__0_0();
                }
            }

            class PointerOutLinkTagEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.Experimental.PointerOutLinkTagEvent>
            {
                static /*0x175ef90*/ PointerOutLinkTagEvent();
                static /*0x175ef00*/ UnityEngine.UIElements.Experimental.PointerOutLinkTagEvent GetPooled(UnityEngine.UIElements.IPointerEvent evt, string linkID);
                /*0x175f070*/ PointerOutLinkTagEvent();
                /*0x175ef40*/ void Init();
                /*0x175ebb0*/ void LocalInit();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.Experimental.PointerOutLinkTagEvent.<> <>9;

                    static /*0x1767530*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x17670d0*/ UnityEngine.UIElements.Experimental.PointerOutLinkTagEvent <.cctor>b__0_0();
                }
            }

            class PointerDownLinkTagEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.Experimental.PointerDownLinkTagEvent>
            {
                /*0x110*/ string <linkID>k__BackingField;
                /*0x118*/ string <linkText>k__BackingField;

                static /*0x175ebc0*/ PointerDownLinkTagEvent();
                static /*0x175ead0*/ UnityEngine.UIElements.Experimental.PointerDownLinkTagEvent GetPooled(UnityEngine.UIElements.IPointerEvent evt, string linkID, string linkText);
                /*0x175eca0*/ PointerDownLinkTagEvent();
                /*0x1354790*/ void set_linkID(string value);
                /*0x134cc40*/ void set_linkText(string value);
                /*0x175eb60*/ void Init();
                /*0x175ebb0*/ void LocalInit();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.Experimental.PointerDownLinkTagEvent.<> <>9;

                    static /*0x1767610*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x1767290*/ UnityEngine.UIElements.Experimental.PointerDownLinkTagEvent <.cctor>b__0_0();
                }
            }

            class PointerUpLinkTagEvent : UnityEngine.UIElements.PointerEventBase<UnityEngine.UIElements.Experimental.PointerUpLinkTagEvent>
            {
                /*0x110*/ string <linkID>k__BackingField;
                /*0x118*/ string <linkText>k__BackingField;

                static /*0x175f3b0*/ PointerUpLinkTagEvent();
                static /*0x175f2d0*/ UnityEngine.UIElements.Experimental.PointerUpLinkTagEvent GetPooled(UnityEngine.UIElements.IPointerEvent evt, string linkID, string linkText);
                /*0x175f490*/ PointerUpLinkTagEvent();
                /*0x1354790*/ void set_linkID(string value);
                /*0x134cc40*/ void set_linkText(string value);
                /*0x175f360*/ void Init();
                /*0x175ebb0*/ void LocalInit();

                class <>c
                {
                    static /*0x0*/ UnityEngine.UIElements.Experimental.PointerUpLinkTagEvent.<> <>9;

                    static /*0x17674c0*/ <>c();
                    /*0x32f970*/ <>c();
                    /*0x17671b0*/ UnityEngine.UIElements.Experimental.PointerUpLinkTagEvent <.cctor>b__0_0();
                }
            }

            struct StyleValues
            {
                /*0x10*/ UnityEngine.UIElements.StyleValueCollection m_StyleValues;

                /*0x1766ff0*/ void set_top(float value);
                /*0x1766f40*/ void set_left(float value);
                /*0x17670c0*/ void set_width(float value);
                /*0x1766f30*/ void set_height(float value);
                /*0x1766fe0*/ void set_right(float value);
                /*0x1766e50*/ void set_bottom(float value);
                /*0x1766e60*/ void set_color(UnityEngine.Color value);
                /*0x1766c50*/ void set_backgroundColor(UnityEngine.Color value);
                /*0x1767000*/ void set_unityBackgroundImageTintColor(UnityEngine.Color value);
                /*0x1766d40*/ void set_borderColor(UnityEngine.Color value);
                /*0x1766f60*/ void set_marginLeft(float value);
                /*0x1766f80*/ void set_marginTop(float value);
                /*0x1766f70*/ void set_marginRight(float value);
                /*0x1766f50*/ void set_marginBottom(float value);
                /*0x1766fb0*/ void set_paddingLeft(float value);
                /*0x1766bb0*/ float get_paddingTop();
                /*0x1766fd0*/ void set_paddingTop(float value);
                /*0x1766fc0*/ void set_paddingRight(float value);
                /*0x1766fa0*/ void set_paddingBottom(float value);
                /*0x1766e00*/ void set_borderLeftWidth(float value);
                /*0x1766e10*/ void set_borderRightWidth(float value);
                /*0x1766e40*/ void set_borderTopWidth(float value);
                /*0x1766d30*/ void set_borderBottomWidth(float value);
                /*0x1766e20*/ void set_borderTopLeftRadius(float value);
                /*0x1766e30*/ void set_borderTopRightRadius(float value);
                /*0x1766d10*/ void set_borderBottomLeftRadius(float value);
                /*0x1766d20*/ void set_borderBottomRightRadius(float value);
                /*0x1766f90*/ void set_opacity(float value);
                /*0x1766f20*/ void set_flexGrow(float value);
                /*0x1766f20*/ void set_flexShrink(float value);
                /*0x17669c0*/ void SetValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, float value);
                /*0x1766a80*/ void SetValue(UnityEngine.UIElements.StyleSheets.StylePropertyId id, UnityEngine.Color value);
                /*0x1766b40*/ UnityEngine.UIElements.StyleValueCollection Values();
            }

            interface ITransitionAnimations
            {
                UnityEngine.UIElements.Experimental.ValueAnimation<UnityEngine.UIElements.Experimental.StyleValues> Start(UnityEngine.UIElements.Experimental.StyleValues to, int durationMs);
            }

            class Lerp
            {
                static /*0x15e54f0*/ float Interpolate(float start, float end, float ratio);
                static /*0x1755dc0*/ UnityEngine.Color Interpolate(UnityEngine.Color start, UnityEngine.Color end, float ratio);
                static /*0x1755e60*/ UnityEngine.UIElements.Experimental.StyleValues Interpolate(UnityEngine.UIElements.Experimental.StyleValues start, UnityEngine.UIElements.Experimental.StyleValues end, float ratio);
            }

            interface IValueAnimationUpdate
            {
                /*0x17a1c0*/ void Tick(long currentTimeMs);
            }

            class ValueAnimation<T> : UnityEngine.UIElements.Experimental.IValueAnimationUpdate
            {
                static /*0x0*/ UnityEngine.UIElements.ObjectPool<UnityEngine.UIElements.Experimental.ValueAnimation<T>> sObjectPool;
                /*0x0*/ long m_StartTimeMs;
                /*0x0*/ int m_DurationMs;
                /*0x0*/ System.Func<float, float> <easingCurve>k__BackingField;
                /*0x0*/ bool <isRunning>k__BackingField;
                /*0x0*/ System.Action <onAnimationCompleted>k__BackingField;
                /*0x0*/ bool <autoRecycle>k__BackingField;
                /*0x0*/ bool <recycled>k__BackingField;
                /*0x0*/ UnityEngine.UIElements.VisualElement <owner>k__BackingField;
                /*0x0*/ System.Action<UnityEngine.UIElements.VisualElement, T> <valueUpdated>k__BackingField;
                /*0x0*/ System.Func<UnityEngine.UIElements.VisualElement, T> <initialValue>k__BackingField;
                /*0x0*/ System.Func<T, T, float, T> <interpolator>k__BackingField;
                /*0x0*/ T _from;
                /*0x0*/ bool fromValueSet;
                /*0x0*/ T <to>k__BackingField;

                static /*0x180ff0*/ ValueAnimation();
                static /*0x177800*/ UnityEngine.UIElements.Experimental.ValueAnimation<T> Create(UnityEngine.UIElements.VisualElement e, System.Func<T, T, float, T> interpolator);
                /*0x180fc0*/ ValueAnimation();
                /*0x180980*/ int get_durationMs();
                /*0x17aa40*/ void set_durationMs(int value);
                /*0x1803b0*/ System.Func<float, float> get_easingCurve();
                /*0x17aec0*/ void set_easingCurve(System.Func<float, float> value);
                /*0x17cb40*/ bool get_isRunning();
                /*0x181190*/ void set_isRunning(bool value);
                /*0x1803b0*/ System.Action get_onAnimationCompleted();
                /*0x17aec0*/ void set_onAnimationCompleted(System.Action value);
                /*0x17cb40*/ bool get_autoRecycle();
                /*0x181190*/ void set_autoRecycle(bool value);
                /*0x17cb40*/ bool get_recycled();
                /*0x181190*/ void set_recycled(bool value);
                /*0x1803b0*/ UnityEngine.UIElements.VisualElement get_owner();
                /*0x17aec0*/ void set_owner(UnityEngine.UIElements.VisualElement value);
                /*0x1803b0*/ System.Action<UnityEngine.UIElements.VisualElement, T> get_valueUpdated();
                /*0x17aec0*/ void set_valueUpdated(System.Action<UnityEngine.UIElements.VisualElement, T> value);
                /*0x1803b0*/ System.Func<UnityEngine.UIElements.VisualElement, T> get_initialValue();
                /*0x17aec0*/ void set_initialValue(System.Func<UnityEngine.UIElements.VisualElement, T> value);
                /*0x1803b0*/ System.Func<T, T, float, T> get_interpolator();
                /*0x17aec0*/ void set_interpolator(System.Func<T, T, float, T> value);
                /*0x2a5510*/ T get_from();
                /*0x2a5510*/ void set_from(T value);
                /*0x2a5510*/ T get_to();
                /*0x2a5510*/ void set_to(T value);
                /*0x180fc0*/ void Start();
                /*0x180fc0*/ void Stop();
                /*0x180fc0*/ void Recycle();
                /*0x17a1c0*/ void UnityEngine.UIElements.Experimental.IValueAnimationUpdate.Tick(long currentTimeMs);
                /*0x180fc0*/ void SetDefaultValues();
                /*0x180fc0*/ void Unregister();
                /*0x180fc0*/ void Register();
                /*0x17aec0*/ void SetOwner(UnityEngine.UIElements.VisualElement e);
                /*0x180fc0*/ void CheckNotRecycled();
                /*0x1803b0*/ UnityEngine.UIElements.Experimental.ValueAnimation<T> KeepAlive();

                class <>c<T>
                {
                    static /*0x0*/ UnityEngine.UIElements.Experimental.ValueAnimation.<>c<T> <>9;

                    static /*0x180ff0*/ <>c();
                    /*0x180fc0*/ <>c();
                    /*0x1803b0*/ UnityEngine.UIElements.Experimental.ValueAnimation<T> <.cctor>b__67_0();
                }
            }
        }

        namespace Internal
        {
            class MultiColumnHeaderColumnMovePreview : UnityEngine.UIElements.VisualElement
            {
                static /*0x0*/ string ussClassName;

                static /*0x175b990*/ MultiColumnHeaderColumnMovePreview();
                /*0x175ba30*/ MultiColumnHeaderColumnMovePreview();
            }

            class MultiColumnHeaderColumnMoveLocationPreview : UnityEngine.UIElements.VisualElement
            {
                static /*0x0*/ string ussClassName;
                static /*0x8*/ string visualUssClassName;

                static /*0x175b790*/ MultiColumnHeaderColumnMoveLocationPreview();
                /*0x175b880*/ MultiColumnHeaderColumnMoveLocationPreview();
            }

            class ColumnMover : UnityEngine.UIElements.PointerManipulator
            {
                /*0x38*/ float m_StartPos;
                /*0x3c*/ float m_LastPos;
                /*0x40*/ bool m_Active;
                /*0x41*/ bool m_Moving;
                /*0x42*/ bool m_Cancelled;
                /*0x48*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader m_Header;
                /*0x50*/ UnityEngine.UIElements.VisualElement m_PreviewElement;
                /*0x58*/ UnityEngine.UIElements.Internal.MultiColumnHeaderColumnMoveLocationPreview m_LocationPreviewElement;
                /*0x60*/ UnityEngine.UIElements.Column m_ColumnToMove;
                /*0x68*/ float m_ColumnToMovePos;
                /*0x6c*/ float m_ColumnToMoveWidth;
                /*0x70*/ UnityEngine.UIElements.Column m_DestinationColumn;
                /*0x78*/ bool m_MoveBeforeDestination;
                /*0x80*/ UnityEngine.UIElements.ColumnLayout <columnLayout>k__BackingField;
                /*0x88*/ System.Action<UnityEngine.UIElements.Internal.ColumnMover> activeChanged;
                /*0x90*/ System.Action<UnityEngine.UIElements.Internal.ColumnMover> movingChanged;

                static /*0x17522a0*/ bool IsNotMouseEvent(int pointerId);
                /*0x1753f90*/ ColumnMover();
                /*0xeeac90*/ UnityEngine.UIElements.ColumnLayout get_columnLayout();
                /*0x12cadc0*/ void set_columnLayout(UnityEngine.UIElements.ColumnLayout value);
                /*0xb61dd0*/ bool get_active();
                /*0x1754380*/ void set_active(bool value);
                /*0xf17ee0*/ bool get_moving();
                /*0x17543b0*/ void set_moving(bool value);
                /*0x1754080*/ void add_activeChanged(System.Action<UnityEngine.UIElements.Internal.ColumnMover> value);
                /*0x1754200*/ void remove_activeChanged(System.Action<UnityEngine.UIElements.Internal.ColumnMover> value);
                /*0x1754140*/ void add_movingChanged(System.Action<UnityEngine.UIElements.Internal.ColumnMover> value);
                /*0x17542c0*/ void remove_movingChanged(System.Action<UnityEngine.UIElements.Internal.ColumnMover> value);
                /*0x1753130*/ void RegisterCallbacksOnTarget();
                /*0x17535f0*/ void UnregisterCallbacksFromTarget();
                /*0x1752460*/ void OnMouseDown(UnityEngine.UIElements.MouseDownEvent evt);
                /*0x1752530*/ void OnMouseMove(UnityEngine.UIElements.MouseMoveEvent evt);
                /*0x17525a0*/ void OnMouseUp(UnityEngine.UIElements.MouseUpEvent evt);
                /*0x17523e0*/ void OnMouseCaptureOut(UnityEngine.UIElements.MouseCaptureOutEvent evt);
                /*0x1752810*/ void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt);
                /*0x1752930*/ void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt);
                /*0x1752a40*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt);
                /*0x1752680*/ void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt);
                /*0x1752750*/ void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt);
                /*0x1752b70*/ void ProcessCancelEvent(UnityEngine.UIElements.EventBase evt, int pointerId);
                /*0x1752300*/ void OnKeyDown(UnityEngine.UIElements.KeyDownEvent e);
                /*0x1752cd0*/ void ProcessDownEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, int pointerId);
                /*0x1752ee0*/ void ProcessMoveEvent(UnityEngine.UIElements.EventBase e, UnityEngine.Vector2 localPosition);
                /*0x1753020*/ void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, int pointerId);
                /*0x1751c00*/ void BeginDragMove(float pos);
                /*0x1752130*/ void DragMove(float pos);
                /*0x1753ca0*/ void UpdatePreviewPosition();
                /*0x1753ab0*/ void UpdateMoveLocation();
                /*0x1752140*/ void EndDragMove(bool cancelled);
            }

            class MultiColumnHeaderColumnResizePreview : UnityEngine.UIElements.VisualElement
            {
                static /*0x0*/ string ussClassName;
                static /*0x8*/ string visualUssClassName;

                static /*0x175bad0*/ MultiColumnHeaderColumnResizePreview();
                /*0x175bbc0*/ MultiColumnHeaderColumnResizePreview();
            }

            class ColumnResizer : UnityEngine.UIElements.PointerManipulator
            {
                /*0x38*/ UnityEngine.Vector2 m_Start;
                /*0x40*/ bool m_Active;
                /*0x41*/ bool m_Resizing;
                /*0x48*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader m_Header;
                /*0x50*/ UnityEngine.UIElements.Column m_Column;
                /*0x58*/ UnityEngine.UIElements.VisualElement m_PreviewElement;
                /*0x60*/ UnityEngine.UIElements.ColumnLayout <columnLayout>k__BackingField;
                /*0x68*/ bool <preview>k__BackingField;

                /*0x1755160*/ ColumnResizer(UnityEngine.UIElements.Column column);
                /*0xe643b0*/ UnityEngine.UIElements.ColumnLayout get_columnLayout();
                /*0xe643c0*/ void set_columnLayout(UnityEngine.UIElements.ColumnLayout value);
                /*0xe7e580*/ bool get_preview();
                /*0xe7e640*/ void set_preview(bool value);
                /*0x1754c20*/ void RegisterCallbacksOnTarget();
                /*0x1754e20*/ void UnregisterCallbacksFromTarget();
                /*0x17544f0*/ void OnKeyDown(UnityEngine.UIElements.KeyDownEvent e);
                /*0x1754590*/ void OnPointerDown(UnityEngine.UIElements.PointerDownEvent e);
                /*0x1754930*/ void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent e);
                /*0x1754a80*/ void OnPointerUp(UnityEngine.UIElements.PointerUpEvent e);
                /*0x17543e0*/ void BeginDragResize(float pos);
                /*0x1754430*/ void DragResize(float pos);
                /*0x1755020*/ void UpdatePreviewPosition();
                /*0x1754480*/ void EndDragResize(float pos, bool cancelled);
            }

            class MultiColumnCollectionHeader : UnityEngine.UIElements.VisualElement, System.IDisposable
            {
                static /*0x0*/ string ussClassName;
                static /*0x8*/ string columnContainerUssClassName;
                static /*0x10*/ string handleContainerUssClassName;
                static /*0x18*/ string reorderableUssClassName;
                /*0x3c8*/ bool m_SortingEnabled;
                /*0x3d0*/ System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> m_SortedColumns;
                /*0x3d8*/ UnityEngine.UIElements.SortColumnDescriptions m_SortDescriptions;
                /*0x3e0*/ System.Collections.Generic.List<UnityEngine.UIElements.Internal.MultiColumnCollectionHeader.SortedColumnState> m_OldSortedColumnStates;
                /*0x3e8*/ bool m_SortingUpdatesTemporarilyDisabled;
                /*0x3f0*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader.ViewState m_ViewState;
                /*0x3f8*/ bool m_ApplyingViewState;
                /*0x3f9*/ bool m_DoLayoutScheduled;
                /*0x400*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.Column, UnityEngine.UIElements.Internal.MultiColumnCollectionHeader.ColumnData> <columnDataMap>k__BackingField;
                /*0x408*/ UnityEngine.UIElements.ColumnLayout <columnLayout>k__BackingField;
                /*0x410*/ UnityEngine.UIElements.VisualElement <columnContainer>k__BackingField;
                /*0x418*/ UnityEngine.UIElements.VisualElement <resizeHandleContainer>k__BackingField;
                /*0x420*/ UnityEngine.UIElements.Columns <columns>k__BackingField;
                /*0x428*/ System.Action<int, float> columnResized;
                /*0x430*/ System.Action columnSortingChanged;
                /*0x438*/ System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> contextMenuPopulateEvent;
                /*0x440*/ System.Action viewDataRestored;

                static /*0x175a440*/ MultiColumnCollectionHeader();
                /*0x175a5b0*/ MultiColumnCollectionHeader(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> sortedColumns);
                /*0x175b080*/ bool get_isApplyingViewState();
                /*0xccf840*/ System.Collections.Generic.Dictionary<UnityEngine.UIElements.Column, UnityEngine.UIElements.Internal.MultiColumnCollectionHeader.ColumnData> get_columnDataMap();
                /*0xbe1930*/ UnityEngine.UIElements.ColumnLayout get_columnLayout();
                /*0xcc0690*/ UnityEngine.UIElements.VisualElement get_columnContainer();
                /*0xcc0680*/ UnityEngine.UIElements.VisualElement get_resizeHandleContainer();
                /*0x175b090*/ System.Collections.Generic.IEnumerable<UnityEngine.UIElements.SortColumnDescription> get_sortedColumns();
                /*0x16e01d0*/ UnityEngine.UIElements.SortColumnDescriptions get_sortDescriptions();
                /*0x175b390*/ void set_sortDescriptions(UnityEngine.UIElements.SortColumnDescriptions value);
                /*0x175b070*/ UnityEngine.UIElements.Columns get_columns();
                /*0x175b0a0*/ bool get_sortingEnabled();
                /*0x175b440*/ void set_sortingEnabled(bool value);
                /*0x175ad90*/ void add_columnResized(System.Action<int, float> value);
                /*0x175b0b0*/ void remove_columnResized(System.Action<int, float> value);
                /*0x175ae50*/ void add_columnSortingChanged(System.Action value);
                /*0x175b170*/ void remove_columnSortingChanged(System.Action value);
                /*0x175af00*/ void add_contextMenuPopulateEvent(System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value);
                /*0x175b220*/ void remove_contextMenuPopulateEvent(System.Action<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value);
                /*0x175afc0*/ void add_viewDataRestored(System.Action value);
                /*0x175b2e0*/ void remove_viewDataRestored(System.Action value);
                /*0x1758e40*/ void ScheduleDoLayout();
                /*0x1758e00*/ void ResizeToFit();
                /*0x1759900*/ void UpdateSortedColumns();
                /*0x1759170*/ void UpdateColumnControls();
                /*0x17571d0*/ void OnColumnAdded(UnityEngine.UIElements.Column column, int index);
                /*0x17571e0*/ void OnColumnAdded(UnityEngine.UIElements.Column column);
                /*0x1757cc0*/ void OnColumnRemoved(UnityEngine.UIElements.Column column);
                /*0x17576d0*/ void OnColumnChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type);
                /*0x1757ff0*/ void OnColumnReordered(UnityEngine.UIElements.Column column, int from, int to);
                /*0x17581c0*/ void OnColumnResized(UnityEngine.UIElements.Column column);
                /*0x1758200*/ void OnContextualMenuManipulator(UnityEngine.UIElements.ContextualMenuPopulateEvent evt);
                /*0x1758af0*/ void OnMoveManipulatorActivated(UnityEngine.UIElements.Internal.ColumnMover mover);
                /*0x17589a0*/ void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e);
                /*0x1757170*/ void DoLayout();
                /*0x1757910*/ void OnColumnControlGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt);
                /*0x1757760*/ void OnColumnClicked(UnityEngine.UIElements.EventBase evt);
                /*0x17596a0*/ void UpdateSortColumnDescriptionsOnClick(UnityEngine.UIElements.Column column, UnityEngine.EventModifiers modifiers);
                /*0x1758f00*/ void ScrollHorizontally(float horizontalOffset);
                /*0x1758ca0*/ void RaiseColumnResized(int columnIndex);
                /*0x1758dc0*/ void RaiseColumnSortingChanged();
                /*0x1756440*/ void ApplyColumnSorting();
                /*0x1759f10*/ void UpdateSortingStatus();
                /*0x1758b90*/ void OnViewDataReady();
                /*0x17581c0*/ void SaveViewState();
                /*0x1756b60*/ void CleanupColumnData(UnityEngine.UIElements.Internal.MultiColumnCollectionHeader.ColumnData data);
                /*0x1756da0*/ void Dispose();
                /*0x1758e00*/ void <OnContextualMenuManipulator>b__65_0(UnityEngine.UIElements.DropdownMenuAction a);

                class ViewState
                {
                    /*0x10*/ bool m_HasPersistedData;
                    /*0x18*/ System.Collections.Generic.List<UnityEngine.UIElements.SortColumnDescription> m_SortDescriptions;
                    /*0x20*/ System.Collections.Generic.List<UnityEngine.UIElements.Internal.MultiColumnCollectionHeader.ViewState.ColumnState> m_OrderedColumnStates;

                    /*0x1768030*/ ViewState();
                    /*0x17679e0*/ void Save(UnityEngine.UIElements.Internal.MultiColumnCollectionHeader header);
                    /*0x1767680*/ void Apply(UnityEngine.UIElements.Internal.MultiColumnCollectionHeader header);

                    struct ColumnState
                    {
                        /*0x10*/ int index;
                        /*0x18*/ string name;
                        /*0x20*/ float actualWidth;
                        /*0x24*/ UnityEngine.UIElements.Length width;
                        /*0x2c*/ bool visible;
                    }
                }

                class ColumnData
                {
                    /*0x10*/ UnityEngine.UIElements.Internal.MultiColumnHeaderColumn <control>k__BackingField;
                    /*0x18*/ UnityEngine.UIElements.Internal.MultiColumnHeaderColumnResizeHandle <resizeHandle>k__BackingField;

                    /*0x32f970*/ ColumnData();
                    /*0x73d3e0*/ UnityEngine.UIElements.Internal.MultiColumnHeaderColumn get_control();
                    /*0x9f12f0*/ void set_control(UnityEngine.UIElements.Internal.MultiColumnHeaderColumn value);
                    /*0x32f410*/ UnityEngine.UIElements.Internal.MultiColumnHeaderColumnResizeHandle get_resizeHandle();
                    /*0x7963c0*/ void set_resizeHandle(UnityEngine.UIElements.Internal.MultiColumnHeaderColumnResizeHandle value);
                }

                struct SortedColumnState
                {
                    /*0x10*/ UnityEngine.UIElements.SortColumnDescription columnDesc;
                    /*0x18*/ UnityEngine.UIElements.SortDirection direction;

                    /*0xa59f80*/ SortedColumnState(UnityEngine.UIElements.SortColumnDescription desc, UnityEngine.UIElements.SortDirection dir);
                }

                class <>c__DisplayClass65_0
                {
                    /*0x10*/ UnityEngine.UIElements.Column column;
                    /*0x18*/ UnityEngine.UIElements.Internal.MultiColumnCollectionHeader <>4__this;

                    /*0x32f970*/ <>c__DisplayClass65_0();
                    /*0x1767300*/ void <OnContextualMenuManipulator>b__1(UnityEngine.UIElements.DropdownMenuAction a);
                    /*0x1767330*/ UnityEngine.UIElements.DropdownMenuAction.Status <OnContextualMenuManipulator>b__2(UnityEngine.UIElements.DropdownMenuAction a);
                }

                class <>c__DisplayClass71_0
                {
                    /*0x10*/ UnityEngine.UIElements.Column column;

                    /*0x32f970*/ <>c__DisplayClass71_0();
                    /*0x17673c0*/ bool <UpdateSortColumnDescriptionsOnClick>b__0(UnityEngine.UIElements.SortColumnDescription d);
                }
            }

            class MultiColumnHeaderColumnSortIndicator : UnityEngine.UIElements.VisualElement
            {
                static /*0x0*/ string ussClassName;
                static /*0x8*/ string arrowUssClassName;
                static /*0x10*/ string indexLabelUssClassName;
                /*0x3c8*/ UnityEngine.UIElements.Label m_IndexLabel;

                static /*0x175bcd0*/ MultiColumnHeaderColumnSortIndicator();
                /*0x175be20*/ MultiColumnHeaderColumnSortIndicator();
                /*0x175bfb0*/ void set_sortOrderLabel(string value);
            }

            class MultiColumnHeaderColumnIcon : UnityEngine.UIElements.Image
            {
                static /*0x0*/ string ussClassName;
                /*0x410*/ bool <isImageInline>k__BackingField;

                static /*0x175b5f0*/ MultiColumnHeaderColumnIcon();
                /*0x175b690*/ MultiColumnHeaderColumnIcon();
                /*0xbe1b10*/ bool get_isImageInline();
                /*0x175b780*/ void set_isImageInline(bool value);
                /*0x175b490*/ void UpdateClassList();
                /*0x175b480*/ void <.ctor>b__5_0(UnityEngine.UIElements.CustomStyleResolvedEvent evt);
            }

            class MultiColumnHeaderColumn : UnityEngine.UIElements.VisualElement
            {
                static /*0x0*/ string ussClassName;
                static /*0x8*/ string sortableUssClassName;
                static /*0x10*/ string sortedAscendingUssClassName;
                static /*0x18*/ string sortedDescendingUssClassName;
                static /*0x20*/ string movingUssClassName;
                static /*0x28*/ string contentContainerUssClassName;
                static /*0x30*/ string contentUssClassName;
                static /*0x38*/ string defaultContentUssClassName;
                static /*0x40*/ string hasIconUssClassName;
                static /*0x48*/ string hasTitleUssClassName;
                static /*0x50*/ string titleUssClassName;
                static /*0x58*/ string iconElementName;
                static /*0x60*/ string titleElementName;
                static /*0x68*/ string s_BoundVEPropertyName;
                static /*0x70*/ string s_BindingCallbackVEPropertyName;
                static /*0x78*/ string s_UnbindingCallbackVEPropertyName;
                static /*0x80*/ string s_DestroyCallbackVEPropertyName;
                /*0x3c8*/ UnityEngine.UIElements.VisualElement m_ContentContainer;
                /*0x3d0*/ UnityEngine.UIElements.VisualElement m_Content;
                /*0x3d8*/ UnityEngine.UIElements.Internal.MultiColumnHeaderColumnSortIndicator m_SortIndicatorContainer;
                /*0x3e0*/ UnityEngine.UIElements.IVisualElementScheduledItem m_ScheduledHeaderTemplateUpdate;
                /*0x3e8*/ UnityEngine.UIElements.Clickable <clickable>k__BackingField;
                /*0x3f0*/ UnityEngine.UIElements.Internal.ColumnMover <mover>k__BackingField;
                /*0x3f8*/ UnityEngine.UIElements.Column <column>k__BackingField;

                static /*0x175d620*/ MultiColumnHeaderColumn();
                /*0x175dbd0*/ MultiColumnHeaderColumn(UnityEngine.UIElements.Column column);
                /*0x175e5e0*/ UnityEngine.UIElements.Clickable get_clickable();
                /*0x175e6f0*/ void set_clickable(UnityEngine.UIElements.Clickable value);
                /*0x175e6e0*/ UnityEngine.UIElements.Internal.ColumnMover get_mover();
                /*0x175ea70*/ void set_mover(UnityEngine.UIElements.Internal.ColumnMover value);
                /*0x175ea90*/ void set_sortOrderLabel(string value);
                /*0x175e5f0*/ UnityEngine.UIElements.Column get_column();
                /*0xcc2060*/ void set_column(UnityEngine.UIElements.Column value);
                /*0x175b090*/ UnityEngine.UIElements.VisualElement get_content();
                /*0x175e710*/ void set_content(UnityEngine.UIElements.VisualElement value);
                /*0x175e600*/ bool get_isContentBound();
                /*0x175e9c0*/ void set_isContentBound(bool value);
                /*0x175cf00*/ void OnColumnChanged(UnityEngine.UIElements.Column c, UnityEngine.UIElements.ColumnDataType role);
                /*0x175d020*/ void OnColumnResized(UnityEngine.UIElements.Column c);
                /*0x175caf0*/ void InitManipulators();
                /*0x175d030*/ void OnMoverChanged(UnityEngine.UIElements.Internal.ColumnMover mv);
                /*0x175d1c0*/ void UpdateDataFromColumn();
                /*0x175bfe0*/ void BindHeaderContent();
                /*0x175d0e0*/ void UnbindHeaderContent();
                /*0x175c6f0*/ void DestroyHeaderContent();
                /*0x175c0c0*/ UnityEngine.UIElements.VisualElement CreateDefaultHeaderContent();
                /*0x175c340*/ void DefaultBindHeaderContent(UnityEngine.UIElements.VisualElement ve);
                /*0x175d400*/ void UpdateHeaderTemplate();
                /*0x175d2d0*/ void UpdateGeometryFromColumn();
                /*0x175c8b0*/ void Dispose();
            }

            class MultiColumnHeaderColumnResizeHandle : UnityEngine.UIElements.VisualElement
            {
                static /*0x0*/ string ussClassName;
                static /*0x8*/ string dragAreaUssClassName;
                /*0x3c8*/ UnityEngine.UIElements.VisualElement <dragArea>k__BackingField;

                static /*0x17680f0*/ MultiColumnHeaderColumnResizeHandle();
                /*0x17681e0*/ MultiColumnHeaderColumnResizeHandle();
                /*0xc8f290*/ UnityEngine.UIElements.VisualElement get_dragArea();
            }
        }
    }
}

class <PrivateImplementationDetails>
{
    static /*0x0*/ <PrivateImplementationDetails> 4E0024C7427C17CC639390B3368A37AF4019570161E69CF30B89796DCC90F605;

    struct __StaticArrayInitTypeSize=10
    {
    }
}
